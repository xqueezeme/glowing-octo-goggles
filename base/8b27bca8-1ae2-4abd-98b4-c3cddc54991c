{
    "title": "St. Clair Ch. 04: The Angel",
    "pages": [
        "This is the current endcap for the St. Clair series. It certainly won't be the last one, but it is the last one I actually have planned. The readers of the St. Clair series have been very supportive and very, very patient. The first story in this series was originally intended to go in Romance, but since the two leads in the couple happen to be female, it ended up dropped into Lesbian; I learned to keep the series together in the same category the hard way. There is no graphic sex in this storyline, it just doesn't suit the occasionally heavy subject matter. Special thanks to sbrooks103x for beta reading and edit; all remaining errors are mine, probably added after his able assistance. He really makes this readable. \n\nSaint Clair: The Angel \n\nCindy closed the door with the same sense of panic she did every time. But this time, she was sure it was real. \n\nSix latches. Six different latches. She snapped and twisted them as fast as she could, finally pulling the always-waiting chair over and jamming it under the doorknob. \n\nShe slumped gracelessly to the floor in an odd cross-legged sitting position facing the door. \n\nWaiting. \n\n### \n\nFour Years Prior: Atlanta, Georgia \n\n### \n\n\"Anybody seen Ramon?\" \n\nMostly blank faces on her fellow dancers. \n\nCindy - Cyn - wasn't too surprised by that - she knew she wasn't exactly popular with the others. When she'd started dancing, she'd decided it was about money, and she'd stepped on a few toes. \n\nMostly blank. Except for Karen. \"I think he's back in the storeroom with 'Sofi'.\" \n\nThere was a hint of snide amusement in her voice. Karen was a floor hostess, a little older than the rest of the girls. The girls all seemed to like her a lot; even though she'd only been there a few months, she seemed to fit in better than Cindy. \n\nIt was also obvious Karen couldn't imagine being enough of a sucker to let a guy treat her badly. She'd been baiting Cindy for weeks about Ramon and \"Sofi.\" \n\nCyn glared at her. She knew Ramon wasn't exactly the faithful type; hell, they'd met at the club. But she was still convinced she could change him. In the two years since their whirlwind marriage, she knew he'd slipped a time or two, but he at least seemed to be trying. She even considered quitting dancing; but Ramon liked the club and he was here all the time, so it was better to be up on stage in front of him rather than sitting at home wondering what he was doing. And it seemed to be working. \n\nUntil \"Sofi\" - whose real name was Amy - had started working at Gemini a few months ago. \n\nNow Ramon seemed to be constantly \"working late\" and going on \"business trips\" that everyone knew were code for banging the ass off \"Sofi\" and taking her on little vacations. \n\nThat was bad enough, but screwing \"Sofi\" in the back while she was doing a set? That was too damn far. \n\nKaren's voice was softer. \"You don't need this Cyn, you're too good for him. He's never gonna be worth a shit. And your sister's a bitch, she's doing it on purpose to hurt you.\" \n\nCyn dropped her bag of clothes on the floor by Karen, shot her a glare, and stomped her way down the hall toward the store room. \n\nThe fucking door wasn't even locked. She shoved in and slammed the door behind her striding forward in fury. \n\nFor all of two steps. \n\nAmy sat slumped and bloody, hands tied behind her to a folding metal chair. \n\nRamon and his constant companion, the hulking, stooped, Levi, stood over her; Ramon's ever-present jacket was off, hanging on a wall hook, exposing the series of ornate baroque cross tattoos that covered his arms. She'd always thought her angel wings and his crosses meant they belonged together. \n\n\"Ramon?\" Cindy felt completely lost. \n\n\"Goddammit.\" Ramon glared at her. \n\nA tall, lean figure stood fully up from leaning on the wall. \"Nothing for it Ramon, just do them both.\" He spoke in a low, purring, accent. \n\nRamon's mouth twitched and he drew a small handgun smoothly from the center of his back. \n\nCindy was too stunned to even talk. \n\nLevi grinned with crooked, yellow teeth, the fluorescent light gleaming off his bald head. \"Saves time.\" \n\n\"Stupid bitch. I was gonna drop your useless ass anyway.\" \n\nThe gun in his hand centered on her and snapped loudly, twice; she felt her legs give way. \n\nBlack clouds were beginning to edge her vision as he swiveled toward Amy, touched the gun barrel to her forehead and pulled the trigger. \n\nSomeone screamed and Cindy was vaguely puzzled that she could even hear it as far away as it obviously was. \n\nThe sound of running feet, a million miles away at the bottom of a well. \n\nSirens. \n\n### \n\nRising through something, to... somewhere. \n\nSoft hissing. Steady, quiet machine hum, a steady whirr. She managed to open one eye. It only took a thousand years. \n\nA woman in nurse's scrubs was at her side almost instantly, matter-of-factly checking her out and scratching notations on a weird plastic clipboard. \n\nShe squeezed her eyes shut hard, then opened them to try to clear her head. \n\nAmy. \n\nShe struggled to speak, her voice coming out in a dull croak. \n\n\"Amy?\" \n\nThe nurse looked over at someone to the side. It took a monumental effort, but Cindy was able to turn her head enough to look. \n\nKaren. But a different Karen. She was wearing a starkly conservative dark grey skirt with a matching blazer. And a badge on a leather holder hung off the breast pocket. \n\nShe shook her head, sadly. \"I'm sorry Cyn, I didn't make it in time for her. I really thought...\" she paused, \"I thought she and Ramon were back there alone. I didn't even have my gun, I was expecting a catfight, not a gunfight. I had to run back to the dressing room and by the time I had it, they were out the door.\" \n\nCindy closed her eyes or a minute. Amy might have been a bitch, but she'd still been her sister. \n\n\"How long.\" \n\n\"Three days.\" \n\n\"Why am I alive?\" \n\n\"He just missed the heart. Those .22s are a little unpredictable. One rode the ribs on around, the other was deflected into your lung.\" \n\n\"So you're a cop.\" \n\n\"FBI, actually.\" \n\n\"The FBI. Great. I'd ask what Ramon was involved in, but I'm sure I don't want to know.\" \n\n\"Drugs.\" \n\n\"He shot me without a second thought.\" \n\n\"What'd he tell you he did for a living?\" \n\n\"He's a manager at INSITE, they make vitamins and weightlifting supplements.\" \n\n\"INSITE's a front for a one of the Central American cartels. They move their product up through the Caribbean, distribute it along the East coast. You had to know he wasn't just an office worker.\" \n\nCindy looked away embarrassed. \"I thought, you know, he kind of dabbled in tough guy stuff. Maybe a little gambling, not real stuff.\" \n\n\"I get it, the 'bad boy' thing. I know a lot of women like that. The cartel moves hard stuff. Mostly cocaine.\" \n\n\"Ramon's a drug smuggler?\" \n\n\"No, Ramon's an enforcer. He collects payments, gets rid of rivals, that sort of thing.\" \n\n\"Gets 'rid of?' He's a hit man?\" \n\n\"Close enough.\" \n\n\"I'm married to a hit man who tried to kill me.\" She sat quietly for a second. \"I should probably get a divorce.\" \n\n\"Once we round him up and send him to trial, that won't be a problem. We have him cold for Amy's murder. I actually saw him pull the trigger. Besides, your marriage isn't legal - he's still technically married to a woman in Rio.\" \n\nCindy closed her eyes. \"Well, that's... something.\" Her eyes shot open. \"Wait, what do you mean 'round him up?'\" \n\n\"Um, yes. We think he's out of Atlanta already. We can't find his creepy friend, Levi, either.\" \n\nCindy shivered. \n\n\"He's not a very good hitman, using a little gun like that.\" \n\n\"It was a .22 magnum revolver. Only real pros use the .22s and they use the revolvers so they don't leave evidence laying around; normally he'd have finished you off, but I interrupted that.\" \n\n\"Oh.\" \n\nKaren shifted in her seat. \"Who was the third man in the room? We only got his back on video when Ramon brought him in the back door.\" \n\n\"I don't know, I never got a chance to look at him. But he ordered Ramon to shoot me.\" \n\n\"So he was in charge.\" \n\n\"Yes.\" \n\n\"Can you describe him at all?' \n\n\"He was tall and thin. Had an accent. I think. But I never saw his face.\" \n\n\"Probably Francisco Gutierrez. At least that's who the analysts think it is. He's a consular officer at the Venezuelan office in Miami. He's probably back in Venezuela by now. We know he flew out of Miami-Dade headed to Mexico two days after the shooting.\" \n\nCindy tried to pull herself higher, and immediately regretted it. \"So why did Ramon do that to Amy anyway?\" \n\n\"We're not sure, but it looks like Amy might have stolen a couple keys of cocaine. Or at least they think she did.\" \n\n\"She wasn't that stupid. I mean she did stupid things, but not like that.\" \n\n\"It doesn't matter whether she did or not now.\" \n\n\"So now what?\" \n\nKaren's mouth twisted. \"Look, off the record, we screwed up. We missed the grab. You're not safe; Ramon and Levi are probably going to come after you. The fact that you're alive is a black mark on their record, it will make everyone doubt them. And that's bad news in their world. Besides, if Guiterrez thinks you can identify him, he will want you taken care of.\" \n\n\"So what? You guys are going to just let him find me and kill me?\" \n\n\"I don't think you're important enough for WITSEC. But I worked out a deal. We can get you moved anywhere you want, get you a new social security number and maybe six months' rent so you can get a new job. Can you do that? Is there anyone back here you wouldn't cut ties with?\" \n\nCindy stared down at her toes. Nobody would miss her. No family left. Hell, the girls at Gemini would probably breathe a sigh of relief when she left. She'd poached off the tip rail and acted the vulture at the door, catching big spenders before they even sat down. She'd known it pissed them off, and she'd even thought it was kind of funny. But she'd ended up the outsider. She glanced around, there was a distinct lack of the flowers, balloons and stuffed animals that she'd seen in hospital scenes in movies. \n\n\"Not really.\" She paused. \"Has anybody from the club asked after me?\" \n\nKaren shook her head. \"Teddy asked if I thought you'd be coming back.\" \n\n\"So he can make the schedule.\" \n\nKaren nodded. \n\n\"I guess I didn't make any friends here.\" \n\n\"Not really.\" \n\n\"You did, though.\" \n\n\"Some. We'll see how it holds up now that the girls know what I am. They're great girls though, you should have given them a chance. They'd have been here for you if you had.\" \n\nCindy wanted to defend herself, but she knew it was pretty much cold truth. She decided to change the subject. \"A new job. The only skills I have are taking off my clothes to music and grinding on guys in the VIP room.\" \n\n\"You could do better.\" \n\n\"Name one job I can make this kind of money with a high school degree and no training.\" \n\nKaren held a hand up in defeat. \n\n\"I need to get off the East Coast - all the girls know each other. You think Vegas is safe?\" \n\nKaren looked pensive. \"I think it's a really bad idea. But this cartel is strictly East Coast; if you stay out of the big clubs, you might be alright. I imagine someone looking for a stripper in Vegas would be a needle in a haystack. Still, I'd rather you changed your job though. It'd be safer.\" \n\n\"Living on minimum wage. I'd be better off dead.\" \n\n### \n\nThe Blue Diamond sign was a dull placard in the bright light of day. \n\nVegas, she decided, should lock down the streets during the day. The brilliant lights and spectacular images of the night were worse than dead during the day. Exposed as cheap tricks and plastic illusions. All blanketed in suffocating heat. \n\nShe walked in with her bag over her shoulder, looking over at the single daytime bouncer, a husky guy with a shaved head. \n\nA lot of them did that, it made intimidating out of control customers a little easier. \n\n\"The house mom in?\" \n\nHe gave a slight smile. \"I was wondering when you'd come by. Saw you hanging out and talking to the girls.\" \n\n\"Just wanted to see what kind of house you guys were running.\" \n\n\"Clean and above board. No bullshit, but none on your end either.\" \n\nThat's what the girls had said. She'd been scoping clubs for two weeks. She'd laid up for a while, living on the money she'd gotten for relocation. Six months was enough time to heal, and she had new angel tattoos to cover the bullet scars. The artist even managed to match the style of her angel wing back tattoos and neck-and-cuff tattoos she already had. She'd looked for an off-main-drag club with a good through-put of customers, reasonable house fees and tip outs, and bouncers who did their jobs. \n\nThe Blue Diamond was all that, and the girls all seemed to get along, which certainly would make life easier. The Diamond also used a house mom to manage the 'talent,' and the dancers all seemed to respect her. Another plus. She probably wouldn't have to put up with a skeezy manager looking for \"special favors.\" \n\n\"You're a pro?\" \n\n\"Three years. East coast clubs mostly.\" \n\n\"Some of the rules here are a little different.\" He paused. \"And we follow them. Like I said, it's a clean house. No 'extras.'\" \n\n\"Never did that anyway. I'm just a dancer, but a damn good one.\" \n\nHe nodded. \"Trish is in the office, you can go on back.\" \n\nIn the back office, Trish, a tall blonde woman in her late 40s looked her over. \"We can use a side stage for the audition.\" \n\n\"I've got three full sets if you need them.\" \n\n\"You've done this before. What's your name?\" \n\n\"My name is Cindy, but for the stage, I'm kind of stuck with 'Angel.' I've got angel wing back tattoos.\" \n\nA raised eyebrow. \"Not the most original name, but the last 'Angel' we had left about four months ago, so you're in luck. Anything I should know?\" \n\nCindy paused for a second, and decided on a half-truth. \"I can't give any references. My ex-husband might be looking for me and he's violent, but he won't be looking for me here.\" \n\nTrish's eyes softened a bit. \"Mine was too. You should get him locked up. That finally put mine off.\" \n\n\"Cops are already looking for him, but they can't seem to find him.\" \n\n\"In that case, the only reference I need is the audition.\" \n\n### \n\nFrancisco Gutierrez was more than a little upset with the stripper's survival and subsequent disappearance. FBI inquiries after his location, dutifully reported by a Cuban agent within the United States Justice Department's enormous bureaucracy, were passed on to the Venezuelan government and on to him. His rather rapid departure through Miami-Dade was looking more and more like a wise decision. While his superiors had overlooked his activities on behalf of the cartel, they weren't interested in another full blown international incident involving drug smuggling. \n\nRamon's inability to locate his \"wife\" had proven quite inconvenient for Gutierrez on both a financial and personal level. He'd really enjoyed the nightlife in Miami and Atlanta; his superiors in both government and cartel had also made it clear that they were less than pleased with his handling of the situation. \n\n### \n\nLas Vegas, Nevada \n\n### \n\nThe club proved a better choice than Cindy would have ever expected. Trish was easy to work with, and she kept a tight leash on the vultures and poachers that could make things toxic at the club, like Cindy had back at Gemini. This time, though, with Karen's comments in her mind, she'd decided to be different. No more vulture, no more poaching off the tip rail. She even deliberately pointed customers at other girls on occasion. It worked beautifully. In just a couple months, Cindy had carved out her niche, without pissing off anyone. She'd even managed to find a roommate, a tall thin black girl named Jade who worked at the same club. \n\nJade peered out from the ready room. \"New girl ain't gonna last long.\" \n\nCindy looked up from the mirror where she'd been fixing her make-up. \"What's wrong?\" \n\n\"Completely off the beat, scared as shit. Got about as much sex appeal as a trash can. She'll leave here owing money tonight. Ain't even getting mercy tips from pervert row.\" \n\nLess than a minute later, a wild-eyed blonde figure bolted into the ready room and started stuffing things wildly into her bag. \n\nCindy sighed and perched herself on the nearest make up bench. \"Whoa, whoa, whoa. What's wrong?\" \n\n\"I can't do this, I'll figure something else out.\" She held up her take from the stage show. All seven dollars of it. \"I'm no good at this.\" \n\n\"Amber. You're obviously a total newbie, customers love that. Milk it for all it's worth.\" \n\n\"I can't... I'm done.\" \n\n\"I thought you told Trish you're about a week from eviction.\" \n\n\"I am. I'll just live in my car.\" \n\n\"It's 104 in the shade out there.\" \n\nAmber's eyes were glassy with tears. \"I tried, I'm just no good at this.\" \n\nCindy glanced over at Jade who raised an eyebrow. \"Your audition was fine, it's just nerves. I'll show you.\" \n\n\"It's too late, I can't go back out there.\" \n\n\"You can't go back out there alone.\" \n\n\"What?\" \n\n\"It's a slow night, I'm bored, and we're short two girls. So we might as well have some fun and earn some money.\" \n\nShe looked over at Jade while she quickly wrapped her hair up into a bun on top of her head. \n\n\"Can you pull down that 'hot teacher' outfit?\" \n\nShe looked through her own locker and pulled a schoolgirl outfit out, handing it to Amber. \n\nAmber's eyes grew huge as Jade handed Cindy the outfit, then horn-rimmed glasses and a giant paddle with the words \"Board of Education\" in huge letters on it. \n\nCatching her look, Cindy grinned. \"It's just hard foam, makes a helluva noise but you'll barely feel it. We use it for bachelor parties and stuff.\" \n\nAmber poked the surface of the paddle dubiously, then relaxed a bit when Cindy's words turned out to be true. At least it wouldn't hurt much. \"Okay.\" \n\n\"Jade, tell Mike to completely play up the newbie angle, you know the song. Amber, just walk out with me and do what I tell you to do.\" \n\nJade slipped out then stuck her hand back in to give a thumbs up. \n\nCindy adjusted the glasses on her nose and begin to spin the paddle by the wrist thong in time to the opening strains of \"Hot for Teacher.\" She reached over and grabbed Amber's hand. \n\n\"C'mon, Newbie, let's have some fun.\" \n\nTwo sets, a half dozen lap dances, and hours later, they finally sat down in the back as Mike closed the club down. \n\nAmber stared at the pile of bills in front of her. \"Oh my god. I don't even know how to thank you.\" \n\n\"You don't have to, you earned your half. We can only pull this off for about two months before it starts to lose the impact. We only get that long because it's Vegas and we have more tourists than regulars.\" \n\nTrish walked in, laughing under her breath. \"That was brilliant. Wish I could have recorded that. They damn near broke the tip rail trying to squeeze in there\" \n\nJade was grinning from ear to ear. \"I get her the next night she works. That whole 'I need volunteers so I can teach this naughty girl how to do a lap dance'... damn. How much did you rake in anyway?\" \n\nCindy gestured smugly at the pile of bills. \"A lot.\" \n\n### \n\nLas Vegas: One Year Later \n\n### \n\nAmber strolled in off her stage set. \"Slow crowd tonight.\" \n\nCindy shrugged. \"Looks like you did okay though.\" \n\n\"Yeah, group of soldiers came in just before my last set. It's a 'heartbreak tour.' You'll see them to the left of the main door. The leader of the pack is that half-Cuban chick - she made a point of that - with the black hair in the sleeveless Def Leppard shirt. Got a rose tattoo on her shoulder. She's throwing money like a fountain. Sings along with every song. She's got wild written all over her.\" ",
        "Cindy walked over and looked through the gap in the curtains and began watching the group. \n\nShasta, a relatively new dancer, looked over at them. \"What's a heartbreak tour?\" \n\nAmber, who could barely remember being the \"new girl\" after almost a year at the club, smiled gently. \"It's usually a military thing. One of their guys gets dumped or divorced, they drag him through strip clubs and pour booze into him, usually end up finding him a hooker. The broken-heart patient is the serious looking woman with the short brown hair. I overheard them talking. Her girlfriend dumped her. They'll probably buy her a couple of lap dances.\" \n\n\"Oh.\" Shasta looked decidedly uncomfortable. \n\nAmber shook her head at Shasta's naivet\u00e9. \"What's the difference? They're just buying a dance. Money's money. Pays the rent. She doesn't seem like the grabby type.\" \n\nCindy pulled back from the curtain, eying the soldiers with a wicked grin. \"Bet you ten bucks, I can get that Cuban girl up on the stage with me.\" \n\nAmber snorted, then pulled ten out of her tip box and tossed it on the makeup table. \"I know I'm going to lose this, but if you do that, the crowd will amp way up and I'll make it back anyway. I'll tell Mike what you're up to so he can warn the bouncers. And tell Trish.\" She rolled her eyes dramatically. \"And make sure this one knows she has to keep her clothes on.\" \n\n\"I remember the last time. Tell Shelly I'm changing the song.\" \n\n\"What do you want?\" \n\n\"'Funky Cold Medina.'\" \n\n\"Oh Lord.\" \n\nBy the time Cindy was halfway through her set, she'd won the bet. \n\nAs they stepped down off the stage, Cindy grinned at the dark-haired woman, who grinned back with almost manic exhilaration. \"What's your name?' \n\n\"Marina.\" \n\nCindy nodded toward the woman with short hair, who looked like the tequila might just be starting to take the edge off her misery. \"I'm Angel, in case you missed the introduction. What's the story?\" She had to almost shout to be heard over the noise of the club. \n\n\"She's our squad leader. Best ever. Her puta of a girlfriend just dropped her for a civilian - a guy. So, since she takes care of us every day, it's our turn to take care of her.\" \n\n\"What's her name?\" \n\n\"Tina. Goes by TJ.\" \n\nCindy waved Amber over. \"I think Amber and I can make her feel a little better. The first lap dance is on the house as long as we can do it right out here, and we're making it a double.\" \n\nMarina Pruitt grinned even wider. \"That works, but I won't be a tightwad - we collected money from the whole squad and most of the rest of the Company. Everybody loves her. The Brigade Command Sergeant Major even kicked in a bill. You make her smile, and I'll make your fuckin' week.\" \n\n### \n\nLuck. Nothing more, and certainly nothing less. It was luck that kept Cindy late at the club that night. Which made her run late heading home, which made her take the longer, but better lit route to the nearest RTC bus stop. The odds of running into anyone in particular in a city of over half a million with over 36 million visitors per year were astronomically low. \n\nIn Las Vegas though, Luck is a religion; a religion with rites, priests, and believers. Maybe even living Gods. Perhaps, if Cindy had ever really thought about it, the odds of something happening in Vegas are not so low as they would be anywhere else. \n\nSo as Cindy rounded the corner, bag over one shoulder and her mind on the extra money in her bag - she and Amber really had managed to get \"Tina\" to crack a smile - she slammed right into one of the two people, out of the six billion inhabitants of the planet, that she least wanted to ever see again. \n\nIt took Levi a fraction of a second to realize who she was, and even then, it took a second to process what he should do. And by that time, a terrified Cindy was already around the corner and bolting for a nearby police car. \n\nThe officer saw her face as she headed towards him, and with an experienced nose for trouble, he began scanning the crowd. \"Are you okay?\" \n\n\"There's a guy... \" \n\n\"That big Uncle Fester-looking bastard?\" \n\n\"Yeah, that's him. He's wanted for killing my sister in Atlanta.\" \n\nHe'd already keyed his digital radio and began relaying information. Unfortunately, even as fast as the officer's reaction was, Levi had faded into the crowd and was gone. \n\nWithin a few minutes, Cindy was in the police station facing an investigator. \"I need to make a phone call.\" \n\n\"Who do you need to call?\" \n\nCindy dug a creased piece of paper from her bag. \"The FBI.\" \n\n### \n\nKaren shook her head. \"I should have talked you out of the Vegas idea. WITSEC would have made you change jobs completely.\" \n\nCindy grimaced. \"So now what?\" \n\n\"We'll move you again, but this time you really change. You have your choice of Maine, Missouri, or Idaho. No more stripping.\" \n\n\"I'd freeze my ass off in Maine or Idaho.\" \n\nKaren pulled out a folder. \"Missouri, then. We're working a deal with the Victim Protection Office there, trying to get a new program in place. They'll let you know what options you have.\" \n\n\"Somewhere away from big cities. I'll learn to farm or something.\" \n\n\"We can get you enough money to get you started.\" \n\n### \n\nPRESENT DAY: Chillicothe Correctional Center, Mental Health Segregation Unit, Missouri \n\n### \n\nAngie's face twisted in a combination of pain and relief. Relief at finally being allowed to do the one thing in the world she wanted to do with every fiber of her being. \n\n\"Push!\" \n\nThe doctor and nurses had been telling her not to push for what seemed like hours and now; she'd been fighting the incredible building desire. Now, finally... \n\n\"Push!\" \n\nTammi gripped Angie's hand. \"You can do this Angie.\" \n\nOne doctor, two nurses, and three armed guards, who were watching carefully from various points in the room. \n\nIt was a bit more complicated than the usual delivery; the guards refused to even consider unlocking the cuffs that linked each of Angie's wrists to a handrail. Tammi agreed with that. Even she accepted just how dangerous Angie could be, though she was convinced Angie would never endanger her baby. After all, she'd refused to consider any treatments for the tumor growing in her brain. Angie would rather die than risk any harm to her baby. \n\nStill, it wasn't worth the risk. \n\nTammi looked at the strain on Angie's face then across her at TJ, who was holding the other hand. Maybe it was to comfort Angie. Maybe it was to make sure she didn't get loose. Still, TJ wanted this as much as Tammi and Angie. \"You've got this, Angie.\" \n\nA flash of something lit Angie's face as she looked over at TJ and caught her one eye - something secretive, but smug and victorious. It was immediately erased by the next contraction. \n\n\"Push!\" Tammi and Angie urged in a chorus. \n\nIt was another hour before a sweat-soaked Angie ecstatically pushed baby Courtney into the world. \n\nTammi held her up to Angie. \"She's beautiful.\" \n\nTJ reached over and ran one fingertip along Courtney's cheek. She was wordless, unable to make a sound. She caught Angie looking at her, as if she was calculating something. \n\nThen Angie smiled at her. \n\n### \n\nMore bad luck. \n\nAs with all government agencies, even the FBI suffers the indignity of oversight. There are a variety of types of oversight such as legal oversight and disciplinary oversight. Even oversight of intelligence related activities. But, as with most government agencies, one of the most critical pieces is financial oversight. A number of mechanisms ensure that FBI finances are examined to prevent inefficiencies and fraud. And some of those mechanisms lead to Congress. An overworked intern in a congressman's office, still working on her degree in Economics, received an email at work from a friend, with a link to a webpage of family pictures embedded in it. The link apparently failed to work, bringing up a webpage that apologized deeply for not existing. The intern closed out the webpage and deleted the email thinking briefly to herself that she needed to contact her friend sometime. A small part of her was glad the link hadn't worked - she was falling behind and with fast approaching deadlines, she certainly didn't have time to be paging through pictures of her friend's new son. \n\nThe link had, however, actually worked just fine, and a sallow not-yet teenager in Norway pulled reams of FBI financial data from the intern's computer. He posted it on a message board used by hackers to show off their latest trophies. \n\nOne note, buried in the last field of a string of accounting information referenced a case number and a monetary transfer to the Missouri Witness Protection Office. The odds of it being noticed by anyone were low. The odds of the case number meaning anything to anyone were even lower. \n\nUnfortunately for Cindy, the message board was visited by thousands of entities including governments, and criminal cartels. One of them, well informed in a roundabout way by that dutiful Cuban agent, understood quite well what the information meant. \n\nCindy's run of bad luck continued to hold. \n\n### \n\nChillicothe Correctional Center, Mental Health Segregation Unit, Missouri \n\n### \n\nTammi held another picture up to the visitor room glass. \"And in this one, she's in one of the outfits Swede got her.\" \n\n\"I can see Jenny had to have a hand in it. Swede couldn't have put that together. The bow even matches.\" \n\n\"Yeah, she's been a huge help. She babysat a lot when she was a teen-ager, so she coaches Swede through diaper changes and bottles when Courtney is over there. TJ was worried he'd diaper the wrong end.\" Tammi stopped. Swede and Angie had seen each other for a long time. Weirdly, Angie didn't seem put off by Swede seeing Jenny, even though she'd tried to kill both of them. Maybe it was because she'd tried to kill both of them. \n\n\"They still seeing each other?\" \n\n\"For now. Swede's frustrated, he kind of feels like he's in it all the way, but that Jenny's kinda treading water a bit. She's been burned too many times and she's waiting for the other shoe to drop. Maybe she believes in that old family curse.\" \n\nAngie shrugged, then examined the next picture Tammi held up. \"Is that the Maria you told me about?\" \n\n\"Marina. Yeah, she was coming through. She stops just for her 'thirty-four.' Truckers have to take a thirty-four-hour rest break every seventy hours. She mostly sleeps and does laundry. TJ and I aren't even sure she thinks anything is real anymore.\" \n\nAngie studied her. \"She looks...\" She stopped, looking for words. \"...like she's a million miles away.\" \n\nTammi nodded. \"Sometimes, just once in a while, there's like a real person there, but it only lasts a few minutes at most. She's like a robot most of the time. She'd sleep in the truck, but we won't let her. We had Swede help us close up and insulate a section of the back porch and make it into a mini bedroom with no windows just for her. She's more comfortable that way.\" \n\n\"Is it safe to have her around Courtney?\" Angie's eyes hardened. \n\n\"If she wasn't, she'd be somewhere else. TJ wouldn't risk Courtney for anything. Marina doesn't really react to anything much, but I've seen her tuck Courtney's blankets up like it's a reflex. Maybe she babysat a lot when she was younger, before everything happened.\" Tammi gestured helplessly. \"She does react, kind of, to music. She has that pirate radio station in her truck and the last time she came through, she'd stopped somewhere and had a couple used full size concert speakers put in behind the airfoil on top of the cab. A professional had to have done it. It'd be louder than a jet engine if it was turned up. TJ said Marina use to have an experimental sound weapon on her vehicle in Iraq. They used it to break up crowds and riots. Maybe having the speakers is comforting to her somehow.\" \n\n\"That's just weird.\" \n\n\"She also had a huge black 'bull guard' put on it. Like a brushguard for a pickup truck but a lot bigger and solid metal. Up north they call them 'elk guards.' TJ says they had push bars on the front of their vehicles in Iraq that were similar. They used them to break through barricades. Maybe it makes Marina feel more comfortable, reminds her of the armored vehicle she used to have.\" \n\nAngie stared at the picture, studying it for a second them, shrugged. \"So how's TJ doing with Courtney?\" \n\n\"She's a machine - Courtney makes the slightest sound and she's awake and checking on her before I even hear it. When Courtney went through her colicky spell, I thought TJ was just gonna move into that rocker full time.\" Tammi held up a picture of TJ and Courtney asleep in a huge wooden rocking chair. \n\n\"Wow. All three of you could fit in that chair.\" \n\n\"We do. Luther McCabe brought it over, I'm pretty sure he made it for us, but he says it was just layin' around in the back room. He also brought over that beautiful pink crocheted blanket from Mae.\" She rolled her eyes. \"And three quarts of pear brandy.\" \n\n\"I could use that brandy.\" \n\n\"I'm pretty sure the guards wouldn't let me bring any of that in.\" \n\n\"Yeah. They're no fun at all. You guys are doing good?\" \n\nTammi held up another picture. \"Work's always crazy busy. But with Swede and Jenny watchin' Courtney, too, TJ and I still get plenty of time together.\" \n\n\"Still catching up on those promises you made at Bert's?\" Angie smirked. \n\nTammi's eyes narrowed. \"You'd think people'd get tired of bringing that up.\" \n\n\"One of the guards showed me the video on his smart phone and asked if that was you.\" \n\n\"That explains those looks I've been getting.\" \n\n\"You get those looks all the time. It's just that much hotter when they know you're with her. It's the whole kinky forbidden fruit thing.\" \n\nTammi sighed. \"It's just us being us.\" \n\nAngie shifted, a bit more serious. \"You having any trouble with people over that?\" \n\n\"Not really. There's one Board member who's not happy about it, what with TJ going to the Board meetings now. She's made comments to people on the side about our 'unnatural relationship,' but they ignore her.\" \n\n\"Who is it?\" \n\nTammi tried to keep a straight face, but failed, breaking out in a big goofy grin. \"Our old middle school principal. Miss Charlotte.\" \n\n\"Oh my God. She's still got her mad on about that skunk we smuggled into the school assembly doesn't she?\" \n\nTammi couldn't help it, breaking out in a fit of laughter, quickly joined by Angie. \"She's also pissed at the Sheriff for other reasons. You know that huge sugar maple in front of her house?\" \n\n\"Somebody teepee'd it? She never did have a sense of humor.\" \n\n\"Nope. Somebody stole it when she was on vacation in Branson.\" \n\n\"Stole it? How do you steal a tree?\" \n\n\"Swear to God. She was gone to Branson for a week and came back and somebody had cut that tree down to the ground, took every leaf, twig and stick. Neighbors heard chainsaws, but she's always having something done over there, so they never even thought to check it out. She's been pestering the hell out of Shannon over it. But what's he supposed to do? Search every cord of firewood in a three-state area for incriminating sap?\" \n\n\"Bug-eyed old bitch. Serves her right.\" Her voice carried humor, but there was an undertone of something else. Hunger maybe. \n\nTammi eyed her cautiously. \"You can't do that Angie.\" \n\n\"Do what?\" \n\n\"I can hear it in your voice. You can't just kill everybody that annoys you.\" She thought back to something TJ'd said to her. \"Cuts you off in traffic or insults you or whatever. I know it's that thing in your head, but you can't let it do that. You can't just kill people.\" \n\n\"You tried to kill me.\" \n\n\"I tried to stop you. I was defending TJ. You made me do it.\" \n\nAngie looked at her curiously, then shrugged. \"So that's allowed?\" \n\n\"What?\" \n\n\"Defending someone.\" \n\n\"Of course it is.\" Tammi eyed her suspiciously. \n\n\"Okay. Remember when we were kids and we wanted to form our own league of girl superheroes?\" Angie grinned and held one hand up as far as the chain would allow. \"I, Cannibal Girl, solemnly swear, as a member of the Distinguished Order of Superchicks, to only kill bad guys in defense of the innocent.\" \n\n\"I'm serious Angie.\" \n\nAngie tried to keep a straight face, only succeeding halfway. \"I am serious, Tammi. I'll keep that promise. I won't even try to sneak out and go after Charlotte. She'd probably be all dried up and bitter anyway.\" She stuck her tongue out and crossed her eyes. \"Yuck.\" \n\nTammi sat still, her tropical blue eyes boring into the floor. \"I love you Angie, I just don't know how to fix this.\" \n\n\"Isn't yours to fix. You can't go around saving everybody, and it isn't your fault when they fall. Besides, I'm going to try to fix it.\" \n\n\"How?\" \n\n\"They said the tumor was inoperable, but there's a doctor from Saint Louis who wants to try an experimental procedure to remove it. They won't take me to Saint Louis for it, but they agreed to let him do it in Jefferson City. One of hospitals is supposed to have a new secure wing for treating people like me.\" \n\n\"Is it risky?\" \n\nAngie shrugged. \"I could die. I could have serious brain damage, I could end up a vegetable. All kinds of stuff. But my chances without it are exactly zero, so it's worth a try.\" \n\nTammi felt sick, but Angie was right. \"And if it works, will it make you... better?\" \n\n\"At least the tumor won't kill me.\" \n\nThey chatted for a bit longer, running the clock down as close to an hour as they were allowed, Tammi showing her a few more pictures of Courtney. Finally, the time was up and the guards came in to cautiously retrieve Angie. \n\n\"Hey, Tammi, have Space Pirate come by and see me sometime.\" \n\n\"What?\" \n\n\"TJ. I guess we have to make her a member of the Superchicks now. The Blonde Fury with her Flying Walkie Talkie of Doom, Cannibal Girl, Space Pirate.\" She paused and grinned. \"Jenny can be 'Voodoo Child,' or maybe 'Nature Girl.'\" \n\n\"You're a goofball, Angie.\" \n\n\"Yeah, I know. But send her by soon, okay? I owe her an apology. I want to talk to her before the surgery.\" \n\n### \n\nBaton Rouge, Louisiana \n\n### \n\n\"You should have killed her when you had the chance in Vegas.\" \n\nLevi scowled back at Ramon. \"Like you should have in Atlanta? If you'd have aimed better, we wouldn't be in this shit show.\" He shook his head. \"I couldn't touch her in Vegas, she was right next to a cop car and pointing at me.\" \n\nRamon bit back his gut response. He and Levi had been on each other's nerves for the last couple years, taking low-level shit jobs to keep some money, living in shit hotels and trying to figure out how to fix everything. He was pretty sure Levi was using meth now that he couldn't afford coke. All of this shit was really Levi's fault anyway; he'd come through the door into backroom of the strip club last and hadn't locked the door. \"Gutierrez is really pushing this. Says if we take her out, we're back in. She's the only one who has a chance of identifying him.\" \n\n\"Missouri?\" \n\n\"It's not much help. We can check the strip joints in Kansas City and Saint Louis, but that will take forever. If she's still dancing.\" \n\n\"I know some guys in Saint Louis, used to have some police contacts, maybe they can help.\" \n\n\"If it's anything like WITSEC, I'm not holding my breath, cops aren't going to be able to help with that. We gotta do something though.\" \n\n\"I think they had some Federal agents on the payroll for a while.\" \n\n\"We don't have enough money to buy anything like that.\" \n\nLevi shrugged. \"We can take a shot. If we don't find anything, we can make some more meth runs, get a little more cash.\" ",
        "\"I fucking hate dealing with tweakers.\" He'd damn near had his head blown off by one of the twitchy meth dealers down in Louisiana just a few weeks ago. No particular reason for it that they'd ever figured out. Of course they couldn't ask the dealer or his girlfriend since Levi had immediately shot both of them. \n\nLevi shrugged again. \"Money's money.\" \n\n\"Meth money is pocket change.\" \n\n\"Well, we don't have very much pocket change right now.\" \n\nRamon grunted and opened another beer. Levi was starting to get an attitude, and Ramon was going to have to deal with it sooner or later. But it'd have to wait until after they tried to find Cindy in Missouri. \n\n### \n\nSaint Clair, Missouri \n\n### \n\nTJ sniffed Courtney's hair. \"Mmmm. Baby Magic.\" \n\n\"Let's see you check the other end that way.\" Tammi gave a wry smile then put another sweet potato into the produce bag and put the whole bag into the cart. \n\n\"Yeah... I don't think so.\" \n\n\"Chicken.\" \n\nTJ hefted Courtney a bit. \"She's already blown her diaper out this morning anyway.\" She smirked at Tammi, then tugged the diaper back a bit and peered in cautiously. \"She's clean.\" \n\n\"Next one is yours anyway. The one this morning was horrible.\" \n\nTJ ruffled Courtney's hair. \"That was epic, wasn't it? Peas make it really special.\" Courtney responded to TJ's smile with her own toothless grin. \n\nTammi couldn't suppress a smile and she gently poked Courtney's tummy with one fingertip. \"Mmmm 'Boop.' That why we had to come here to go shopping. Somebody used up another thing of diaper wipes.\" \n\n\"We should just order them by the case.\" \n\n\"But then she wouldn't get to come into town and see everybody.\" Tammi pushed the cart up to checkout counter. \"Like our Miss Cindy here.\" \n\nCindy, in her usual high neck, long sleeve dress, wrinkled her nose at Courtney. \"Are you here to pick up some smoked ribs for your Mommies? It's on special.\" \n\nTJ spun Courtney's back to Tammi and tugged her shirt up. \"We have baby back ribs!\" \n\nTammi immediately nibbled along Courtney's side. \"Nom nom nom.\" Courtney dissolved into squeals. \n\nCindy laughed along, then plopped a little pink calico teddy bear next to the register. \"Miss Betty at the Baptist Church makes these little things, and I picked you one out at the church fair. He's been waiting on you.\" \n\nCourtney promptly stuck the bear's arm in her mouth and began gnawing, quite content, as Cindy began to ring up the order. \n\nTJ tugged her wallet out of the diaper bag and pulled out money to cover the groceries. \"You going to be at the County Animal Shelter fund raiser next month?\" \n\nCindy nodded while she filled bags. \"I have to. Ted's donating cookies and orange drink from the store. He's even paying me to be there.\" \n\nTammi put a bag of carrots up on the counter. \"We're bringing Courtney. I'm gonna have a display on wild animals, ticks, diseases and all that. TJ's on duty, but she'll probably be there most of the time.\" Tammi assumed a fake Southern Society accent. \"It's the Social Event of the Season, so of course we'll have to be there.\" \n\nCourtney fumbled with the little pink teddy bear for a second, then dropped it. Cindy reached out and snagged it right off the edge of the counter, just as it was about to fall to the floor. She looked up to say something, but, whatever it was, it died away in strangled silence. \n\nTJ was staring fixedly at her hand. The sleeve had pulled back just a bit. Just enough to expose the intricate edge of the angel wing cuff tattoo that wrapped her wrist. Her expression held recognition, the thing Cindy feared most in all the world. \n\nCindy froze, mouth partly open, a sickening fear crawling along her spine like centipede. Tammi turned at the sudden silence, which seemed to be just enough. TJ looked up, but she looked as much through Cindy as at her. \"Nice catch, Cindy.\" \n\nFinishing up, Cindy felt like she was doused in ice water. The cheerful baby-toting \"Mommy\" was suddenly a mask, and Cindy sensed the one-eyed deputy was making a note of every movement, every word. \n\nShe nearly collapsed as they walked out the door. \n\n### \n\nTJ woodenly loaded Courtney into the car seat, silent except to give Courtney the expected tickle and tease that she got every time. \n\n\"What was that? What happened in there?\" Tammi wasn't going to let this pass - she watched TJ all the time to make sure she didn't fall back into herself, into the silences she sometimes did.\" \n\nTJ looked in the mirror and watched Courtney holding the little pink teddy bear. \"We need to talk to Cindy. Tonight. I'm not sure what's going on, and I don't want to embarrass her, but I finally figured out why she always seemed familiar.\" \n\n### \n\nCindy closed the door with the same sense of panic she did every time. But this time, she was sure it was real. They were coming. \n\nSix latches. Six different latches. She snapped and twisted them as fast as she could, finally pulling the always-waiting chair over and jamming it under the doorknob. \n\nShe slumped gracelessly to the floor in an odd cross-legged sitting position facing the door. \n\nWaiting. \n\nIt was almost an hour before the soft knock on the door sounded. She wanted to ignore it, but she was sure they wouldn't go away. \n\n### \n\n\"'Funky Cold Medina.'\" \n\nCindy nodded, almost expressionless. \"Yeah. That was the song. Great for getting the crowd in a fun mood. Always get better tips when the crowd is in that kind of mood. And you can seriously slow-grind to it.\" \n\nTJ looked toward Tammi, shifting Courtney to her other hip. \"It's her. Remember when I told you about my 'Heartbreak Tour' in Vegas?\" \n\nTammi knew very well what was going on - TJ had talked it over with her for most of the previous hour. \"When Katie left you?\" \n\n\"Yeah... Cindy was one of the dancers.\" She paused, looking for words. \n\nTammi arched an eyebrow. \"Is she the one that...\" \n\n\"No! That was a showgirl named Candi.\" \n\n\"With an 'I' with a heart over it. I remember.\" Tammi looked over at Cindy. \"Did you give her a lap dance?\" \n\n\"Yes. A crowd of them came in together and a really wild Cuban girl dropped about two grand on lap dances for her. It was a pretty crazy evening, even by Vegas standards.\" \n\nTammi's smile widened to a grin. \"Did she behave?\" \n\n\"As far as I know. She did with me, anyway.\" \n\n\"She never does with me. Totally ignores the no-hands rule.\" Tammi gave TJ a wry look. \n\nCindy gave a weak smile. \"Yeah. But I saw the video of that karaoke night at Bert's. I'm pretty sure you broke the rules first.\" \n\n\"Is there anyone on this planet that hasn't seen that damn video?\" Tammi didn't sound all that upset about it though. \n\n\"I think I read somewhere that there are a hundred or so tribes around the world that have never made contact.\" TJ knew Tammi wasn't really all that upset over the video. That had been Tammi's way of publicly claiming TJ and making sure she knew it, along with everyone else in town. She'd also inadvertently told well over a million other people, judging by the YouTube numbers. \n\n\"See what I put up with?\" Tammi looked at Cindy with undisguised amusement. \n\nTJ sighed and changed the subject. \"We're not going to say anything to anyone. But I saw your face when you knew I'd seen the tattoo. And...\" She turned and gestured to the row of locks down the door. \"... that's not an 'I turned over a new leaf' thing. Unless the new leaf is Fort Knox.\" \n\nCindy looked down at the floor. \"I'm dodging my ex.\" \n\nBefore she could continue, Tammi grabbed her hand. \"I know how that is. Really. Andy was beatin' on me regular.\" She glanced back at TJ with a mix of love, gratitude, and expectation. \"We'll help you out.\" \n\n\"You'll need to press charges Cindy, that's the only way to stop it. It's a risk; it'll piss him off, but we'll do everything we can.\" TJ's voice was all grim deputy. \n\nCindy rubbed the side of her nose. \"I'm not sure what you can do. The FBI is already hunting him for kidnapping and murder. He's a hitman.\" \n\nTJ glanced back the stack of locks on the door. \"Shit.\" \n\nTammi turned. \"TJ, Courtney's gonna start picking up on...\" Her voice trailed off as Cindy's words sunk in. \"Shit.\" \n\nTJ reached over and pulled a chair out from Cindy's kitchen counter. \"You probably need to go ahead and explain that.\" \n\n### \n\nJefferson City, Missouri \n\n### \n\n\"Senator Robert Cooper?\" \n\n\"Yes?\" State Senator Cooper looked over the two \"constituents\" he'd agreed to meet and was very glad he'd sent his secretary home early. She normally stayed a little late to help him with \"personal issues,\" but the note had been pretty specific. It had also used names, including both his uncle and his father's names, rather liberally. A call to his uncle's former chief of staff had confirmed that he needed to accept the meeting. \n\nThe tattoo covered guy smiled, a carefully calculated smile that Cooper recognized as a mirror to his own. \"We have a mutually beneficial agreement to propose. Something along the lines of the agreement your uncle had with Mr. Manafort.\" \n\nThe sense of foreboding that Cooper had started with plummeted into a stomach flipping nosedive at the mention of the old racketeer. \"You appear to be under some misapprehension. My uncle never had any kind agreement with any 'Manafort.'\" \n\nThe creepy balding man smiled; it was a much less refined, much more predatory smile, but he stayed silent and let the tattooed man continue. \"It seems Mr. Manafort was much less trusting than you'd think. An acquaintance provided us with some recorded discussions. They're old, but they're clear enough.\" \n\nWithin a half hour of verbal sparring, Cooper knew he couldn't really ignore the recordings. They were very clear; his uncle admitted to using Cooper's father, a BATF agent, as an enforcer to ensure he controlled the flow of illegal moonshine across most of southern Missouri down into Arkansas. \n\n\"This is all very interesting, but it's very nearly ancient history. I'd probably weather it just fine. Given the history here with Frank and Jesse James, the Moran gang, I'd say the citizens of Missouri have a fondness for those who skirt the law.\" \n\nRamon kept his smile at the friendly end of the scale. \"But the Internal Revenue Service probably doesn't.\" \n\nThe threat to the Cooper family fortune was suddenly very clear. \"So what is it you want?\" \n\nRamon tossed an envelope onto the desk. \"Her. She's in some kind of witness protection thing here.\" \n\n\"WITSEC is a federal program, not a State program. I don't have access to that. Nobody does.\" Cooper slid a set of photos out of the envelope. \n\n\"It's not WITSEC, according to what we heard, it's some kind of agreement between the FBI and your Victim Protection Office.\" \n\nCooper vaguely remembered a mention of something that sounded similar in a State Law Enforcement Committee synopsis. \"I'll see what I can do.\" \n\n### \n\nTwo days later, Senator Cooper smiled incredulously up at a picture of his father. \"Figure the fucking odds on that. Of all the goddamn places for her to be.\" It had to be a sign, even to a man who didn't believe in any of that, it had to be a sign. Kill two birds with one stone. He chuckled at that. \n\nIt was really best to be sure though. He reached over and hit the intercom to his secretary. \"Kerrie? I need you to find me an event. It's out of District, so some kind of bleeding heart thing, link it to some constituent request...\" As he explained where and when, he pondered Kerrie's rather short dress this morning. Maybe an afternoon 'private conference' was in order as well. \n\n### \n\nSt. Clair, Missouri \n\n### \n\nTammi watched TJ. Who was watching Marina. Who was watching... nothing. Nothing that Tammi could see, anyway. TJ must have felt her stare, because she slowly turned to look at Tammi. She slowly got up and walked over to Tammi. \"Do you think she's getting better?\" \n\n\"I tuned your old radio to her broadcast frequency. When she got in range, I could hear the music she plays... and I don't know, but I think it got less dark as she got closer.\" \n\n\"Less dark?\" \n\n\"Less Black Sabbath, more Van Halen.\" \n\n\"I guess that's hopeful.\" \n\nTammi glanced at the corn chowder. \"I think that's done.\" \n\nTJ reached over and gave it a stir. \"Yeah, that looks right. What did she play when she pulled up?\" \n\n\"Motley Crue. 'Home Sweet Home.'\" \n\n\"That's what she played when we got back to the FOB.\" TJ spared a quick look over at Marina, still sitting at the table, still staring into space. \"But it's also what she played after memorial services when we lost Soldiers.\" \n\n\"You talk to her about her mom?\" \n\n\"I tried, but I didn't get much of a response. I'll call her mom and let her know she's still doing okay.\" TJ scooped the soup into bowls while Tammi pulled out some rolls. \"I'm still not sure how to deal with her and Cindy.\" \n\n\"They probably won't ever meet. Marina always stays here anyway. We can tell Cindy just in case, but...\" Tammi shrugged. \n\n\"I don't think Marina would care.\" \n\n\"Probably not.\" \n\n### \n\nSaint Clair Animal Shelter Charity Fund Raiser \n\n### \n\n\"So you can see that the possums may be ugly, but they serve as something of a safety reservoir against rabies and consume huge numbers of ticks.\" Tammi gave a polite but distant smile to the tall well-groomed man in the expensive suit standing next to her. \n\nRobert Cooper looked down at the pamphlets and brochures on the folding table. The curvaceous blonde was exactly the type of distraction he'd have welcomed at any time. At a petty fund raiser for some lost cats and dogs, she was practically a gift from heaven. She even smelled good, a bit like coconut. He gave her his best smile in return. \"I'm very proud of the work you've been doing here.\" He gently touched her arm. \n\nTammi's smile cooled a half degree, and she stepped away. \"Thank you, Senator. Doc, over there, has free rabies vaccine clinics every two years and helps us with injured wild animals all the time, it's the least we can do.\" \n\nShe could hardly have missed his interest in her. Over the course of a 45-minute visit, he'd returned to her table three times to ask inane questions that a fourth grader could answer. Still, two television reporters and a Post-Dispatch newspaper reporter had shown up as well, which meant that there was a chance for more donations for the shelter. Doc ran it in addition to his clinic, and Tammi felt like she owed him some help. Angie had been his assistant before they'd locked her up. She may have been a cannibal serial killer, but she'd been a great veterinary assistant and really good with animals. \n\nHe smiled at her, charming and gracious, then pulled a checkbook out with a bit of a flourish. \"Well, I'll certainly do my part for this.\" He pulled an ornate gold tipped fountain pen out of his pocket. \"A thousand dollars should be some help.\" \n\nHe held the pen up. \"A gift from my uncle. It's a Montegrappa Rigoletto Fountain Pen, from the Inauguration. They're about four thousand dollars apiece. I even buy special cerulean ink for it. The same color as your eyes.\" He gave a slight, very practiced, raise of an eyebrow. \n\n\"That's a very nice family heirloom.\" Tammi bit her tongue at the bald attempt to impress her. \n\nWhile he finished writing the check, she watched across the room. TJ had one of the shelter dogs out and was explaining it in comic detail to an entranced group of kids. Her scars, eye patch, and mechanical leg might have scared some kids, but Angie's long running joke about TJ being a space pirate in hiding had made her more fascinating than frightening. With Courtney sleeping soundly in a foldable playpen nearby, TJ had taken over Angie's usual job of explaining animals to kids. Or rather, having them explain it to her. \n\n\"Okay, so this is the wag-a-lator, right?\" \n\n\"Nooooo! It's his tail!\" \n\nTJ looked doubtfully at the assembled giggling kids. \"Are you sure? It wags. See?\" \n\n\"It's a tail!\" The mass of children giggled their way through TJ's comical attempts to explain the happy little dog's \"chomp-a-lator\" and \"sniffiler.\" As TJ finished, Cindy came over and handed out cookies and drinks to the assembled kids. \n\nThe Senator somehow managed to move over next to Tammi again. \"Who contributed the cookies?\" \n\n\"Ted and Nancy own the grocery store, they gave the cookies, and the drinks.\" \n\n\"That's Nancy?\"He strained, but couldn't quite see the face of the woman in the high-collared dress. \n\n\"No, that's Cindy, she's a cashier at the store, Ted and Nancy are over there bringing the cake in.\" Tammi pointed at the open door. \n\n\"Hmmm. Well, at least the children seem to be having fun.\" He moved a little closer. \n\nTammi stiffened. \"Senator, that's the fourth time your hand has 'accidentally' brushed my ass. My butt may be a little big, but there's enough room for that not to happen again.\" \n\n\"I assure you it was entirely accidental.\" \n\n\"Accident or not, if you want to keep your hand attached to you, keep it off my ass.\" She caught his eye and gestured towards TJ. \"TJ and I are a couple. I'm not interested.\" \n\nHe waved his hand dismissively. \"You just need a real...\" \n\n\"Don't you finish that sentence unless you want me to give the reporters a real show.\" Tammi gave him an unsubtle glare and stalked to the other side of the table. \n\nCooper watched her walk off, admiring the view, but more than a little irritated. \"What a waste.\" Recognizing a lost cause, he reminded himself of the real reason for the trip. He began to drift over toward the dark-haired woman serving out cookies, but stopped when he saw the scarred deputy eyeing him laconically. There was no question she'd seen his whole interaction with the difficult blonde. \n\n\"Here to protect your girl from me?\" \n\nTJ looked him over slowly. \"My 'girl' took down an honest-to-God serial killer, using only a walkie talkie. I'm just watching to make sure she doesn't kill you in front of everyone. Senator.\" \n\nCooper blinked, suddenly connecting the town to the lurid newspaper articles on the \"cannibal killer\" that had so fascinated him. Before he responded, he noticed a reporter approaching. \"Well, deputy, it has been very nice talking with you, some time we'll have to sit down and talk over that case. It's not often serial killers get tracked down by local law enforcement.\" \n\nBefore she could respond, he walked to where the cake had been set up and made the necessary meaningless complimentary remarks. \n\nThe woman in the high collared dress finally turned and the Senator struggled to keep a straight face. \"Figure the fucking odds.\" \n\n### \n\nTJ pushed the papers over to Shannon. \"They're going to operate on Angie, remove the tumor.\" \n\nThe Sheriff studied the papers carefully. \"This secure wing still isn't finished? Can't they just do this down at Chillicothe?\" \n\n\"No. They don't have the right equipment for the operation. They're going to put a punch code lock and an armed guard on the room. The room is in a wing that is being renovated, so she'll be the only one there. She preps in the room, get operated on in the room and recovers in the room, then it's back to Chillicothe. Four guards on her every time she gets moved.\" \n\n\"Sounds expensive.\" \n\n\"Medical research money.\" \n\n\"Do they understand how dangerous she is?\" \n\n\"I'm not even sure we do. But Ray sent up that memo up to the facility reminding them. We added in the part about multiple guards and full-time camera monitoring.\" \n\n\"... and?\" \n\n\"And they said their own guards expressed similar concerns, but that they are 'confident in their assessment and added security measures.'\" ",
        "\"You left out the part about it not really being our problems and would we kindly fuck off and let the professionals do their job.\" \n\n\"That's the part that started with 'We appreciate your professional concern.' Isn't it?\" \n\n\"That'd be it.\" \n\n\"My eyes kind of glazed over at that point.\" \n\n\"I hope they have their shit together.\" \n\n\"Me too.\" \n\nShannon flipped another paper over. \"Any ideas on the sugar maple thing? Miss Charlotte's blamed everyone from high school students to the Freemasons to alien invaders. She's just about hysterical. Too many suspects. There's hardly anyone for a hundred miles that hasn't crossed her path in a bad way.\" \n\nTJ held her hand up helplessly. \"We've done our best. I'm guessing a tree company was paid to remove a tree, got the wrong address and never figured it out. Or, if they did, they're keeping their mouths shut rather than pay her for the tree. The whole thing was removed and cleaned up, a vandal would have just cut it down.\" \n\n\"That's as good a theory as any. I'm not ruling out the space aliens though.\" \n\n### \n\nJefferson City, Missouri \n\n### \n\nCooper sat down across from the tattooed man. He'd forgone his usual suit and tie and was dressed in a t-shirt and jeans. The mid-grade steakhouse was perfect for the meeting; lots of dark corners and few customers in the mid-afternoon. Cooper was under no illusions - as much as he'd like to believe he was a player as a state Senator, he knew the hipster hostesses and waiters were more likely to recognize almost any obscure Seattle Indy music artist than someone who could and frequently did directly impact their lives. \n\nAfter ordering, Senator Cooper sat back. \"I found your girl.\" \n\n\"Where at?\" \n\n\"We'll get to that. First we need to talk about a deal. I want something too.\" \n\n\"Don't you want the recordings?\" \n\nRobert Cooper smiled in a way that made it clear he was just as much a predator as Ramon. \"And take your word there are no copies? Bullshit. We do this, it's a long-term deal. I know who you are, Ramon. I could have had the police here to roll you up. Once I had the girl's name it was easy to figure out. The FBI really wants to talk to you. But I think we can avoid that trouble.\" \n\nRamon tried not to glare at the man. It'd always been a risk, but he really wanted to get back in the game, back in the big leagues. \"What do you want?\" \n\nCooper tossed an envelope down on the table in front of Ramon, wondering for a moment if Ramon picked up on the irony that it was the same envelope he'd used. \"That man and his wife need to die. They live in the same county as your ex-wife.\" \n\nA bearded old man stared back at Ramon from a picture. Probably a copy of a driver's license picture. \"Why?\" \n\n\"Does it really matter?\" He shrugged. \"It's a family issue. He killed my father, and nobody ever proved it.\" He didn't mention the other men his uncle had said went missing with his father. It probably wasn't important. \n\nRamon shrugged, glancing at a map with an address. \"This should be simple.\" \n\n\"You could kill him first, then kill your wife. He lives out in the woods away from everybody. She's a cashier at the grocery store during the day. Make her death look like a robbery gone wrong. Just keep it as simple as possible.\" \n\n\"That would work.\" \n\n### \n\nCooper was mildly annoyed that Ramon had ordered prime rib and stuck him with the bill, but would've been really annoyed had he heard Ramon and Levi later that afternoon. \n\n\"You get everything lined up?\" \n\nLevi nodded absently, chewing his way through a cheap hamburger. \"They're not pros, but my guy says they're solid. Bosnian gang out of Saint Louis, coming up. He's used them to protect product and sometimes as back up for serious stuff.\" \n\n\"I don't want to work with a bunch of kids. Or ragheads.\" \n\n\"We don't have the money for pros. We need a car, a couple extra guys to cover us and that's it. They're not religious types anyway. Second generation, no interest in all that bullshit. Just want a chance to make money.\" \n\nRamon frowned. \"We need a couple more guys, reliable ones, and another car. Cooper wants a guy taken out and I'm not driving all over the place knocking off people.\" \n\nLevi looked at him in confusion. \"What's it matter what he wants?\" \n\n\"He ID'd us, he can bring heat. It's an easy gig anyway, just an old man and his wife living out in the boondocks. Maybe we can work this into a long-term connection, expand sales out this way. Give us something else to bring to Gutierrez.\" \n\n\"That'll cost extra.\" \n\n\"They should be cheap. A fucking street gang. That's pretty fucking sad. We can pay them off with some of the meth.\" \n\nLevi kept his mouth shut for a second. Stealing the drugs to try to set up on his own had sounded like a great idea at the time, but it had been a total disaster. He knew Ramon was paranoid, but figured he would believe the shortage was on the shipping end, and he'd just have the drugs cut more to avoid problems. Gutierrez showing up had ruined that completely. Levi'd been relieved but shocked when Ramon turned on Amy. He repeated himself. \"My guy says they're solid.\" \n\n\"A fucking street gang? Christ.\" \n\n### \n\nChillicothe Correctional Center, Missouri \n\n### \n\n\"Tammi said you wanted to see me.\" TJ watched Angie through the glass. \n\nAngie smiled, not a smile that Tammi ever saw. A predatory smile. \"Just wanted to talk to you for a little bit. Did she tell you I'm going in for the experimental surgery in a couple days?\" \n\n\"She did.\" TJ leaned back. \"But it won't make a difference, will it?\" \n\n\"I might live.\" \n\n\"That's not what I mean. I know, Angie. Not everything, but enough.\" \n\nAngie raised one eyebrow. \"Meaning?\" \n\n\"Meaning that it was never the tumor that made you this way. You've been this all your life, or at least most of it. You've been hiding it from everyone. You even lied to me about when it started, and you were planning on killing me. The skeleton under the tree wasn't Buck.\" She saw a flicker of quickly suppressed rage cross Angie's face. \"The man was at least thirty, besides the grave was way too old. You must've been a lot younger, maybe even sixth grade. A long time before the doctors think the tumor started growing. The marks on the ribs show you didn't really know what you were doing yet. You kind of hacked your way through the bottom ribs.\" \n\nAngie's smile tilted a bit and her lip curled. \"He thought he was going to get a helpless little girl. He got dead instead.\" \n\nTJ nodded. \"I figured it was something like that.There were some pretty savage tool marks on the pelvic bone.\" \n\n\"So is this where we talk about how the mental trauma of it turned me into a horrible monster?\" Angie's voice sing-songed mockingly. \n\n\"I don't think so. I don't have any proof, but I think you lured him back there on purpose.\" \n\nAngie got a slightly dreamy look. \"You should have heard him scream.\" \n\n\"You know, I could be recording all this.\" \n\nAngie sniffed a short laugh. \"They're never going to let me out anyway. Even if I live. Besides, I'm crazy, why believe me?\" \n\nTJ rubbed her eye patch. \"You also planned to get pregnant, didn't you? Swede said you told him you were on the pill, but I searched your place. There were no birth control pill packs anywhere, but I found a half dozen unused pregnancy test kits in a drawer, that made me look harder. I found your Clomid. It's a fertility treatment.\" \n\nAngie shrugged. \"I found out about the tumor and knew I didn't have much time. It's the only immortality we have TJ. I know, really know, that everyone dies. All we have is our legacy, our children. Swede was perfect. Big as hell, strong as an ox, healthy and smart. Sex with him wasn't exactly a chore, you know? He's a gorgeous man. Not that you'd really appreciate that.\" \n\n\"Maybe not the way you do, but he's actually a good guy, Angie. I appreciate that.\" \n\n\"He's not like us, is he, TJ? He's the real thing, a really good person. He's too good. He'd always do the right thing. That's why I had to ask Tammi to get you here. I have to know.\" \n\n\"Know what?\" \n\n\"What are you willing to do? One way or another, I'm leaving you with our girls.\" Angie's face went dead serious. \"What are you willing to do for them?\" \n\nTJ sensed that the question was almost infinitely important to Angie, but all she could do was answer honestly. \"They're all I have, Angie. They're everything to me.\" \n\nAngie studied her, then smiled with real warmth. \"That's what I thought. Swede would do the right thing for them.\" Her smile widened a bit more, just a hair too much. \"But you? You'd do anything.\" \n\n### \n\nBevo Mills, Saint Louis, Missouri \n\n### \n\n\"This is a really bad idea.\" Luka watched the two guys get into their beater car and pull away, the engine stuttering awkwardly. Coming out of retirement had been a really bad idea. Not as bad as making that huge bet on a bad horse that forced him to look for work in the first place, but bad, nonetheless. \n\nTarik shook his head. \"David says these guys are big time. The real thing, they just need a bit of muscle right now. You want to be a player, don't you?\" \n\n\"Didn't look big time to me.\" Luka. \"Bald guy looked like a fucking tweaker. I don't trust tweakers. And most of the pay is in meth, you'll have to move that to make this worth anything at all.\" \n\nTarik grinned. \"I have a plan.\" He held a finger up. \"We'll need some vans, Dino and Adem to drive. Hamza, Emil, Petar, and that cousin of his, Filip.\" \n\nLuka frowned. \"What for?\" \n\n\"It's a little not-shit town, but it has a bank. The banks in those little towns have to be easy targets. You, me, Hamza, and Emil hit the bank. Petar and Filip guard the vans, and watch for cops. We'll be in and out in a couple of minutes.\" \n\n\"Really?\" \n\n\"You and my uncle did a bunch of banks, you can make sure we know what we're doing.\" \n\n\"What about the old man and his wife?\" Luka felt a migraine starting. \n\n\"Josip and Mustafa.\" \n\nThe migraine blew into full flame at the mention of the two enforcers-for-hire. \"They aren't giving us enough to pay those two.\" \n\n\"We'll have more than enough from the bank.\" \n\n\"What about the cops?\" \n\n\"There's only a sheriff's office. Probably three deputies on duty at most, a couple of jailers maybe. We'll be gone before anybody can respond. What could go wrong?\" \n\nWith that Luka's migraine seemed to take on a life of its own. \n\n### \n\nOne week later. Scenic Overlook, Route 63, Central Missouri 6:30 AM \n\n### \n\n\"What the holy fuck? I don't remember saying this was a fucking school field trip.\" Ramon glowered at Levi. \"'Solid?' There are of ten of them. And don't get me started on the fucking vans, I'm not even sure how those pieces of shit are running.\" He hissed it as quietly as possible. Two more guys had showed who obviously weren't part of Tarik's gang. These two were a little older, clearly steroid users, and looked almost as annoyed as Ramon felt. They'd already insisted on taking their own car to deal with the old man and his wife, and wanted nothing to do with the rest of the plan. The flashy track suits marked them as guys that had \"worked\" in Eastern Europe; their accents had Ramon pretty convinced it'd been pretty recent, though their English was certainly good enough. \n\nThe meet-up at the scenic overlook had gone pretty smoothly, all things considered. With Ramon and Levi coming out of Jefferson City, and the Bosnians coming out of Saint Louis, meeting at the right time seemed a bit of a stretch, but everybody showed up on time, and no sightseers were around to invade the privacy of their preparations. Two vans and a car with eight wannabe gangsters and a couple real hitters pulling up was a shock. Tarik's \"plan\" - if it could be called that - had come as a real shock. Ramon managed to keep a straight face while all the kids stood around nodding and grinning like fucking idiot bobble head dolls. \n\nTarik was handing out guns to his buddies. He had a pile of them in the back of one of the vans, mostly battered Glock 19s; cheap, reliable, and no confusing thumb safeties to complicate things. He even had a couple old AK-47s that he handed out to Luka and one of the others, a jittery, nervous-looking guy named Petar. The Luka guy was the only bright spot; he seemed competent and was obviously a lot older than the rest. \n\n\"Look, let's just get this done and get out of here. Their plan isn't that bad. It'll be a good distraction, everybody will just assume Cindy got killed as a bystander.\" \n\n\"That kid probably had to YouTube how to shoot the AKs. Besides, what if these idiots get rolled up by the cops?\" Ramon wondered if maybe he should just cancel the whole thing and just go down and pop her. This was way more complicated than he needed. \n\n\"They won't say anything. There's nothing to gain by it. Get rolled up for bank robbery then give the excuse that it was part of murder-for-hire? Doesn't make any sense.\" Levi checked the Mossberg 500 shotgun reflexively, keeping it below the car door. \n\nRamon eyed the two enforcers. They looked like they could be trouble if Ramon tried to call it all off. They'd still want to get paid, and Ramon just didn't have the cash for it. He was pretty sure he could take them with Levi's help, but that would probably mean trouble, and who knew what Tarik's gang would do if shit went sideways? The enforcers were pros too, low level, but pros. They'd even brought their own guns and surgical gloves. If the Tarik kid fucked up the bank robbery, then it'd be his fault. \n\nDespite the sick, queasy feeling in his gut, Ramon decided to go with it. But half an hour later, Ramon was still fuming over Tarik's plan. He decided he'd have Levi stay with the bank crew to make sure they didn't fuck up, while he dragged the Hamza kid with him to deal with Cindy. \n\n### \n\nSaint Clair, Missouri 7:15 AM \n\n### \n\n\"One coffee, one hungry man special.\" Ellie slid the cup, then the oversize platter in front of Don. \n\n\"Looks good. Is that an extra strip of bacon there?\" \n\n\"Sure is. Gotta take care of my best customer.\" \n\n\"I knew I was your favorite. It shows.\" He patted his gut. \"Right here.\" \n\nEllie gave a mock-distressed look. \"You sendin' that bacon back?\" \n\n\"Hell no.\" Don took a sip of his coffee. \"You drive Harlan's farm truck in today?\" \n\n\"You saw that in the lot?\" Ellie grimaced. \"I had to. Harlan took the car to Saint Louis for a meeting and the van's down at AJ's getting the brakes done. I know the truck doesn't have any plates, but you know how it is. Had to get the kids to school.\" \n\nDon nodded. \"That qualifies as an emergency. Besides, I already accepted the bribe.\" He held up the slice of bacon. \"I just have to eat the evidence before Shannon gets here. He's walking down here to pay for the cooler of sweet tea for the barbeque.\" \n\n\"Why's he walking down here?\" \n\n\"He's been trying to get exercise lately. Doctor's orders.\" \n\n\"Well, if he walks here, at least he won't see the truck.\" \n\n\"You can't bribe him with bacon. Doctor's orders.\" Don sipped his coffee again. \"We had all those car break-ins for a while, you lock your truck up?\" \n\nEllie nodded. \"Harlan's deer rifle is in there. Hate to lose that. He doesn't need an excuse to buy another one.\" \n\n\"Pretty sure it was Elvis, taking ashtray change from unlocked cars mostly, and he has another two months in the can for the Great Post It Note Heist, but you can't be too careful.\" \n\n\"'Can't be too careful?' That's what the world's come to, isn't it?\" \n\n\"Sometimes.\" \n\nEllie twisted her mouth in a pensive grimace, then waved dismissively. \"We can't do anything about that. We can't fix the world, but we can enjoy the extra bacon.\" \n\n\"Very wise.\" He held up another slice of bacon. \"This will probably be the high point of my day.\" \n\n### \n\n8:00 AM \n\n### \n\nJosip rubbed his eyes. \"I can't turn left here. There's no fucking road.\" \n\n\"That's what the GPS says.\" \n\n\"I don't give a shit what the GPS says. Use the map.\" \n\n\"The map doesn't even show the goddam road we're on.\" Mustafa waved the map helplessly. \n\nJosip yanked the map from Mustafa's hand and began tracing their route from the interstate. \"Shit.\" \n\n\"I told you. That's why I was using the GPS. Fucking middle of nowhere. Nothing but trees.\" \n\n\"Tarik is going to pay extra for this shit.\" \n\n\"You sure he has the money?\" \n\n\"If he doesn't, I'm using a blowtorch on his skinny ass.\" Josip began to turn the car around. \"I may do it anyway. This is like driving into the movie Deliverance, I can practically hear the fucking banjos. Figure out a route on the map. I'm headed back towards the Interstate. We'll start over.\" \n\n### \n\nTammi guided the little brown car around another pothole. \"County needs to get this road patched. Been what? Almost two years?\" \n\nTJ glanced up in the visor mirror and watched Courtney. She'd lasted five minutes gnawing on her little bear before falling asleep; she always fell asleep quickly on car rides. \"It's on the list. Just a lot lower than the bridge repairs.\" \n\n\"Mmmm. Yeah, Angie's little tidal wave did a number on the bridges over the Big Bramble. I had no idea bridges were so expensive.\" Tammi weaved around another crater. \n\n\"The Board is supposed to vote on some funds for fixing up some of the worst potholes this month, especially the ones this close to town. At least the ones that might swallow a semi. One of the State Troopers blew a tire on a cruiser during a pursuit last week, so they'll probably approve the money.\" \n\n\"I'd think they would. Just glad it wasn't you.\" \n\n\"That's why I still drive the Beast.\" \n\nTammi smiled. \"I thought it was just for the fun of picking up the drunks.\" \n\nTJ chuckled. \"Let's see, we need cabbage, vinegar and celery seed...\" \n\n### \n\nThe truck hummed eagerly, bound for the FOB, a few short hours away. The one place they could really rest. Not for too long of course, the dreams, the nightmares, always followed if they stayed in one place too long. But Marina and the truck knew that, for a single night at least, Staff Sergeant James could stand guard for her. \n\n### \n\n\"Maybe you should just move in completely.\" Swede said it easily enough, but he knew as well as Jenny did how loaded that statement was. She could hear it in his voice. \n\nJenny winced inside. She'd known it was coming; she'd walked right into this one herself. Complaining about the cost of her apartment. Swede made perfect sense. She was all but living at his house along the river full time anyway. Her clothes were there, most of her books, pretty much everything. Swede was great, he didn't even complain when she took over half his closet. Still, Jenny was waiting; it was probably just a matter of time before it all came apart. It always did. Every boyfriend or lover she'd ever fallen for had betrayed her. Logically she knew she'd just had a rash of bad judgment; in her gut though, she feared her mom's claim of a family curse. \n\n\"I'll think about it.\" She noticed his jaw set as she gave her usual answer. His patience was wearing thin, it had to be. Even Jenny felt like she was in first gear when she should be in third. She knew Swede was only putting off proposing to give her a little space. He'd made a point of asking if she wanted to walk through some jewelry stores while they were shopping and seeing a show in Saint Louis. Worse than that, her own feelings were starting to get unmanageable. She could see the way Swede looked at her when they had Courtney; like he was thinking of what she'd look like carrying their baby. Instead of making her uneasy, that made her feel like she was going to melt. It was really starting to scare her. ",
        "She gave his hand a squeeze. \"I'll probably have to anyway, if my car needs more repairs.\" \n\nThe half-answer, even as wryly as it was given, was a better answer than Swede had been getting, so at least he had that. \n\nShe pulled Swede into the grocery store. \"Let's get the steaks and charcoal, the weather this afternoon should be perfect for the cook-out. Tammi said her and TJ will bring over cole slaw, and potato salad.\" It was, perhaps, an obvious and weak attempt at distraction, but combined with the not-quite positive, not-quite negative answer, it was enough to relax Swede a little. \n\nDistracted by their largely unspoken conversation, neither Jenny nor Swede noticed the two run run-down vans pulling around the corner onto the street. They parked next to the massive limestone-walled ice factory, opposite the bank a mere half block away. \n\nIt took Jenny and Swede about ten minutes to weave through the small store, collecting a tray of steaks and a 20-pound bag of charcoal before heading to the checkout counter where Cindy waited. \n\nJenny looked at Cindy's hair critically. \"So when are you going to let me cut your hair, Cindy? I could do a lot with it.\" \n\nCindy grimaced slightly. \"I can't, really.\" \n\nSwede grinned and put the bag of charcoal down on the counter. \"I don't think her answer's ever going to change, Jenny. Shit. Gotta get matches.\" He stepped down the side aisle. \n\n\"If it's about money, I'd do it for free; you'd look really cute in a pixie cut. You could tell everyone who cut your...\" Jenny's voice trailed off as she saw an absolutely stricken look cross Cindy's face. \"Hey, Cindy, if it bothers you that much...\" \n\nA harsh voice from behind cut her off. \"That's the way you used to wear it. Isn't it, Angel?\" \n\nThe widened eyes and obvious, paralyzing horror on Cindy's face froze Jenny for a second, then she spun to face the voice. \n\nThere were two men, a muscular Hispanic-looking guy was right behind her, staring at Cindy, and a strung-out younger guy, stood farther back, looking at Jenny with oddly shaky eyes. It wasn't the eyes that really held her attention, though. It was the gun the younger guy was pulling out of his jacket. \n\nCindy just whispered, \"Ramon.\" \n\nSo many things were wrong, Jenny didn't even try to figure it out. \"Danny! Gun!\" \n\nRamon was caught flat-footed by the slender black woman's call. Even more so by the grim, almost eager look on her face. The confusion lasted just a fraction of a second, just until Danny \"Swede\" Sorenson appeared, brushing aside a stack of canned vegetables, .45 in hand. \n\nWhen the huge blonde deputy swept out leveling his gun, Ramon dove straight to the ground by the end of the checkout counter. Hamza began firing frantically, sending bullets everywhere. As loud as the Glock seemed, the sound of the two shots from Swede's .45 were overwhelming. It was also immediately effective, dropping Hamza in his tracks. \n\nSwede immediately stepped over and kicked Hamza's battered Glock across the floor, then spun to survey the scene, but it was a hair too late. Ramon had jumped to his feet and grabbed the back of Jenny's collar. She'd seemed frozen in place by the sudden explosion of violence, just standing still as Ramon pressed the barrel of his gun to the back of her head. She barely reacted, only making a soft cough. Ramon glanced around; his target was nowhere to be found. \n\nAs the big blonde guy centered on him, Ramon hunched down behind Jenny. \"Don't do it. Drop the gun or she's dead.\" \n\nSwede kept his gun levelled but otherwise ignored him, fixated on Jenny. \"Jenny? Jenny?\" \n\nA slight cough from the girl was the only response. Ramon looked at her face and saw blood on her lips. \"Shit. I didn't do this.\" \n\nJenny finally spoke. \"He was here for Cin... Cindy. She's gone.\" \n\n\"It's the right lung, Baby. We'll get you to a doctor and you'll be fine.\" Swede caught Ramon's eye. \"Let. Her. Go.\" \n\nRamon dragged her slowly back towards the door, more disturbed by Swede's deadly calm than he would have been by panic and anger. \"Not happening. I'll let her go when I'm fucking clear.\" \n\n\"She dies, you die.\" \n\nRamon nodded. \"I know. Just let me get the fuck out of here, and you can have her.\" \n\nSwede followed wordlessly out the door and slowly down the street. \n\n### \n\n\"On the floor. Everybody on the floor please.\" The calm politeness of the statement was offset by the weapons in the men's hands. \n\nAndrew Weber, assistant Bank Manager, with almost 30 years in the business, calmly gestured for everyone to follow the instructions. They'd drilled on this over and over. No heroes necessary, just let them take the money. The FBI could track it all down later, and insurance would cover what was taken anyway. \n\n\"Don't look at me.\" One of the men had slid over the counter and was speaking evenly to the three cashiers. They were lying face down on the floor; none of them so much as glanced up. They didn't need to, the bank cameras would provide all the evidence anyone needed, after all. Besides, the robbers were all wearing hoodies, sunglasses, and had black bandanas to mask their faces. Except the big bald guy with the shotgun, who only had a bandana. \n\nOne by one, the gunman had the girls open the cash drawers, Sara, then Kelsey, then Peyton. Each girl opened her drawer and was sent to lay down in a row in the lobby. Andrew kept focusing on breathing. He knew everything was going to be fine. They'd practiced this, the girls knew exactly what to do, and the gang members seemed intent on getting in and out as fast as possible. The only customer was Eric Layton who'd just dropped off his Dad's hardware store receipts. \n\nEric worried Andrew just a bit. He was the only one who didn't know his part. The girls did, and the robbers seemed to, but Eric was sweet on Kelsey, so he might do something stupid. He managed to peek out of one corner of his eye and saw that guy with the AK-47 was standing over Eric and talking to him. \"You just stay down, boy. We'll be done and out of here before you know it. You'll have a cool story to tell all your friends, and nobody gets hurt.\" \n\nAndrew breathed a sigh of relief. It was nice to be dealing with professionals. A toe kicked him in the ribs, not too hard. He looked up at the gunmen, the one holding the AK. \"You the manager?\" \n\n\"Assistant manager.\" \n\n\"Bank Manager for now, anyway. Let's go get the vault.\" \n\nLuka led the \"assistant manager\" to the vault behind the counter, hands clasped behind his head. Emil was emptying out the bank drawers. \"Don't take any dye packs.\" \n\nEmil shot Luka a look. \"I know what I'm doing.\" \n\nThe manager, apparently very calm, glanced down at the cashiers in passing. \"Stay calm and do what they say.\" \n\nLuka smiled under his bandana. It was nice to be working with a professional for a change. He glanced at the man's name tag. \"So, Andrew, is this on a time lock?\" \n\n\"No, sir. Those are getting pretty rare these days. No real point to them.\" Andrew opened the lock quickly and stepped back. \n\nLuka glanced in, then shook his head. \"Hardly worth the trouble anymore isn't it?\" \n\nAndrew shrugged. \"It's all electronic now. Used to be they'd bring in 30 or 40 thousand in cash some days, big sale barn days for cows and stuff. Now we're lucky to see two or three thousand brought in. Still, we haven't had a pickup in five days, so...\" His voice trailed off and he gestured helplessly. \n\n\"What can you do? Technology is changing everything.\" Luka gave a half-hearted smile under his bandana. \n\nAndrew mused nostalgically. \"End of an era, I guess.\" \n\nBoth men were silent for a moment. Luka had him get back on the floor, then went back and picked up the few bags of bills, not bothering with the coin bags. He'd told the guys that if they wanted coins, it was easier and safer to knock over laundromats and carwashes. \n\nEmil had finally finished cleaning out the drawers and walked around the corner of the counter to him. \n\nLuka looked over at Levi. \"Looks like we're done here.\" He could see Tarik grin under his mask. It'd gone just as smoothly as Tarik had expected. \n\nThe sound of automatic fire from outside erased Tarik's smile. \n\n### \n\nRamon edged down the street - the vans were on the opposite side. The blonde guy was pissed, but so far he was keeping his cool, moving along the wall, staying in doorways and wherever there was a hint of cover, keeping his gun slightly down to avoid shooting the girl. He was obviously a cop of some kind, but he'd bargain, Ramon was sure of that: trade the girl for a chance to get away. Get to a van, slam it into reverse and get out. If those idiots weren't done with the bank, too bad; Levi could make it out on his own. Maybe Ramon would get lucky and Levi would get killed. \n\n\"Stay cool. I didn't shoot her, and I just want out of here. You stay at the end of the block, I get into the van. I'll let her go right there and you can take her to the hospital. You have all the time in the world to chase me, but she doesn't have that time.\" \n\nSwede just nodded at the man, trying to memorize every line of every tattooed cross. There really was no denying the cold logic of the argument. He had to get Jenny to a hospital. But there'd be a reckoning later. \n\nJenny stumbled a bit, but the guy held her carefully upright. He even seemed to be trying to be careful with Jenny, although it was probably to keep Swede calm. She caught Swede's eye. \"Swede, he knew Cindy and she knew him, called him 'Ramon.' She was terrified.\" \n\nRamon shrugged. \"'Swede,' right? None of that matters now. We gotta deal with the mess we got.\" \n\nSwede nodded again. \"Let's just get this done.\" \n\nRamon gave a brief smile. \"Nobody wants that more than I do.\" \n\nSwede stopped at the corner and let Ramon edge away, stealing glances back towards the vans on the opposite side of the street. \n\nRamon could see Petar look around the lead van, the one Adem was driving. Ramon gestured for him to relax and sighed with relief as he did. As long as the kid didn't fuck this up, they could get the hell out of here. All he had to do was keep everyone calm. \n\nHe glanced over at Swede, confirming he was right where he was supposed to be. Just as he looked back at Petar, he knew things had gone wrong. \n\nAcross the street, eyes wide, Petar was leveling his assault rifle down the street past Ramon. \n\nA stocky, square-cut man in a brown and tan law enforcement uniform had just come around the corner of the ice factory, stepping past a parked ice delivery truck that had blocked him from seeing what was going on. \n\nBefore Ramon could even attempt to stop the obvious disaster, Petar fired a long burst. Two rounds impacted on the dirt in front of the man, then the burst stitched upward across his torso, the report of each round distinct and harsh. The last several rounds from the assault rifle slammed into the ice factory wall well above the man, in puffs of paint and limestone. As the unformed man spun, he managed three staggered steps across the street, then crumpled. The woman in Ramon's grasp screamed weakly, \"Shannon!\" \n\nSwede snarled and began firing steady, rhythmic shots. \n\nFucked. Well and truly fucked. Ramon didn't have any doubt how the exchange of fire would end; the big blonde guy was obviously competent, experienced, and trained. Petar had probably blasted off most of his ammo in that long blast. Ramon wasn't bothered by that at all; Petar was a fucking idiot, and his almost indiscriminate fire was as much of a threat to Ramon and any passing birds as it was to Swede. \n\nWhat did bother him was the suddenly impossible distance across the now-improbably vast street to the slender safety of the vans. \n\nAs Swede's shot found their target and Petar collapsed like his strings had been cut, Dino and Adem began firing from the driver's windows of their vans. A moment later Filip started shooting from around the front bumper of the second van. Seeking any path to safety, Ramon pushed through a glass door to his left, dragging the limp woman with him, turning rapidly to scan the room. Levi, Luka, Emil and Tarik stared at him in shock. \n\n\"What the fuck?\" Tarik fumbled one of the bags of bills from the register. \n\n\"Your boy, Petar, just blew away a cop. Dumbass. There's another one out there, plainclothes, he got Petar. And we have to get across the fucking street.\" \n\n\"Goddammit!\" Tarik gestured wildly with the gun. \"This was going fine. That fucking idiot...\" \n\nIrritated, Luka turned to Tarik. \"Grow the fuck up. Something always goes wrong. And quit waving the goddamn gun around like...\" \n\nBefore he could get the warning out, the Glock fired deafeningly in the marble-walled room. Tarik looked in astonishment at the gun in his hand. Luka pursed his lips in anger. \"Let's just get the fuck out of here...\" His voice trailed off when he saw Emil pointing at the bank manager. Or rather at the dead body of the bank manager; Tarik's accidental round had gone straight into the back of Andrew's skull. A pool of red was just starting to sluggishly spread out. \n\nTwo of the three cashiers were sobbing in shock, but the third, Kelsey, he thought they'd called her, glared at them with hate. \n\n\"I didn't mean to...\" Tarik looked like he was going to throw up. \n\nBefore Luka could say anything, Levi cut in. \"What the fuck did you think was going to happen? It's a gun you fucking idiot; you pull the trigger, a bullet comes out.\" \n\nTarik started to babble out an excuse, while Luka looked sadly at Andrew's body; he'd actually liked the guy. \n\n\"Enough!\" Ramon glared around the room. \"We have a dead cop, Petar and Hamza are dead. Now this. Get your shit...\" He gestured toward where he'd last seen Swede \"... shoot that way and run for the vans. Tell the fucking drivers to back down the street and get out of here.\" \n\nRamon's words sunk into Tarik. \"Hamza...?\" \n\nLevi shook his head. \"Shut up. We cut our losses and get the fuck out.\" \n\nLuka pushed Tarik and Emil towards the door. \"Let's go, we'll sort this out later.\" \n\nLevi smiled slightly as he noticed Luka was pushing the two younger men out ahead of him, then caught Ramon's sleeve. \"Did you get her?\" \n\n\"No. Hamza fucked everything up. I had to use this bitch as a fucking shield to get here.\" \n\n\"Dammit. Gutierrez is going to lose his shit over this.\" \n\n\"He's not our biggest problem right now. We need to get out of here alive before we worry about him.\" \n\n### \n\nTammi suddenly slowed the car to a stop. \"What the hell is going on up there? Is that Swede? Oh, God, Shannon...\" \n\nTJ's face went grim and she pulled her back-up gun from the glove box. \"Stay here.\" \n\nShe slid out of the truck and began to sprint forward. \n\nCindy straightened up from where she'd been cringing and holding her head in her hands, next to the dumpster, forcing herself to concentrate on escaping. She crawled along the alley until she reached the road. A small brown car stopped nearly directly in front of her and she watched TJ slip out, and begin running down the road toward the sound of gun fire. \n\nCindy started to creep across the road, trying to get further from the grocery store. It wasn't until she looked to her left and saw Swede firing his gun around the corner that Cindy figured out who TJ was yelling to when she said, \"Cover me!\" \n\n### \n\nThe unmistakable sound of automatic fire caught Don's attention just as he dropped Ellie's tip on the table. He headed out the door at a trot, hearing a spatter of shots all too close. \n\nHe started to pull his gun, but pulled his keys out instead, unlocking his vehicle and yanking the Remington 870 tactical shotgun out. Racking a round into the 12-gauge, he headed to the corner to get to the only place that made sense: the bank. Luckily it was less than half a block away. \n\nCompletely focused, he didn't even notice Ellie calling Donny and Mel, then following him out the door. \n\n### \n\nJenny pulled out of her daze for a second and actually smiled. \"I don't think you're going to make it. I don't know much about bank robberies, but I don't think that's a good sign. I don't think robberies are supposed to look like Grateful Dead concerts\" She pointed weakly out the door at the men running for the vans, hunched over as if against rain, firing blindly down the street towards the grocery store. Orange, purple, and green smoke was pouring from the bags held by the two younger men, forming huge, garish, clouds. \n\nRamon let her collapse to the floor and shook his head disbelievingly. \n\nLevi gave an exasperated growl. \"Dye packs. Fucking idiot...\" The boom of a shotgun from the wrong end of the street cut his vent short and he watched Emil falter, then jolt again from another round and go down. The shots had come from the end of the block where he'd seen that little diner. \n\n\"Dammit.\" \n\nThe two men started through the door. \n\n### \n\nAdem had had enough. Seeing Petar go down had been bad, but seeing Emil and Tarik streaming brightly colored smoke meant all this had been for nothing. The money would be unusable, even if they got away. He dropped the van into gear and stomped on the gas pedal. The van lurched forward, fan belts screaming if not the tires, as Adem tried to get away. A sickening \"thump-thump\" of his tires harshly reminded Adem that he hadn't really seen where Petar had fallen. He veered away from the fallen police officer just as a quick, lithe figure darted out past the big blonde guy. The figure tumbled to the ground obviously hit by something, but rolled right back up and began firing steadily at Adem from mere feet away. \n\nAdem got the barest vague impression of an eyepatch before TJ's round found its mark through the door and into his lungs. The van bounced off the ice delivery truck and stopped sideways in the intersection. Adem slumped over the wheel, trying to convince himself he just needed to catch his breath, foot stomping, weaker and weaker, on the floor next to the gas pedal. \n\nAs the van came to rest, TJ glanced down at Shannon, taking in the bullet wounds in the right hip and left shoulder. She hoped the vest had stopped the rest. \n\nTJ grabbed the back of his collar and began to back-peddle towards Swede, dragging Shannon and firing though the strange Technicolor haze at the gunmen. Two of them bolted back into the bank. TJ was cursing steadily under her breath; she'd only had her nice new \"peg\" a couple weeks, and now she'd have to go to Columbia and explain that she needed a new one because she'd let this one get shot, if she managed to survive this. \n\nWhen she reached the corner, two sets of hands helped her pull Shannon behind the corner. \n\nTJ stared at Tammi. \"You have to get out of here. You've got to get Courtney out of here.\" She knew she sounded like she was pleading, but it didn't matter. Whatever else she was going to say was smothered by Tammi's lips. \n\n\"I'm going, but I'm taking Shannon with me to the hospital. Don't you dare get hurt.\" Tammi turned and looked at Swede. \"Danny Sorenson, you make sure she gets back to me in one piece, you hear me? No matter what you have to do to them.\" \n\nDanny nodded grimly, stripping the gun and extra magazines from Shannon's belt to replace his empty gun, while TJ claimed his radio. \"They have Jenny. She said this was about Cindy somehow.\" \n\nTJ and Tammi looked at each other, then at Swede. \"Shit.\" \n\nWhile Tammi and Swede loaded the still-unconscious Sheriff into the back of the little brown car, TJ began to call for help on the radio. \n\n### \n\nLuka stumbled for the remaining van, a searing pain in his side where at least one round had found a mark. The smoke swirled and cleared for just a second leaving him a clear tunnel of sight to the large figure of the shotgun-bearing deputy who'd killed Emil. He lined his AK up on the man and fired a short burst that took him down. Hands reached out from the corner of the building and pulled him back out of sight, but since they'd left the shotgun where it was, Luka let them go. No point in killing civilians. ",
        "Luka slammed his hand into the side of the van. \"Start the damn van!\" Then limped around to the passenger side, noticing Filip was carefully firing down the street at whoever was off the front of the van. A bleeding Tarik was staring through the window at Dino. Dino, hadn't done a damn thing to start the van moving, and never would. Half his head was gone, although it hadn't traveled far; it was spattered across the windshield of the van. \n\nTarik looked like he was going to cry. \n\nLuka caught his breath. \"Get his fat ass out of the driver's seat and get this thing started. I'll cover the back, Filip cover the front.\" \n\n### \n\nRamon stared at Levi. \"Fuck.\" He glanced over where the cashiers and the farm kid were trying to help the black woman as best they could. They stared at him in wide-eyed terror. \"We've got hostages. We cut a deal, get the hell out of here, then worry about everything.\" \n\n\"Yeah, that'll work out. Just like everything else.\" Levi, frustrated, swept a pile of bank calendars off the counter top. He waved the shotgun at the hostages. \"Any of you gives me any fucking trouble, they'll be scraping you off the fucking ceilings.\" \n\n### \n\nSick and helpless, Ellie felt worthless. Donny and Mel had managed to drag Don out of the street, and they were trying to help him, but all she could do was stand there in shock. It was so overwhelming, there was just nothing she could do. She didn't even know what to do with her hands. \n\nEllie watched as Donny and Mel tried to staunch the bleeding from Don's stomach. The round had gone in just under his vest, slamming in well below the heart and lungs. Donny was pulling out his truck keys and saying something about Doc's veterinary clinic being closer than the hospital, but she couldn't even get the meaning to register. \n\nGut shot. Ellie knew that word. She even knew that familiar smell. She knew that smell from hunting season. The smell of a gutted deer. It was the smell that spurred Ellie to action. \n\nIt was the smell that triggered the memories and the thoughts that cleared her mind and let her focus. She wasn't helpless, and she could do something after all. \n\nWordlessly, she stepped away, then sprinted to the parking lot behind the diner. Three blocks away to the North were the most precious things in her world. The most important things in Ellie's universe. \n\nShe yanked open the door to the truck and reached behind the seat to pull a camouflage case out. She slid it onto the seat and opened it, pulling the heavy Remington 700 .30-06 rifle out. She felt in the case and found the cardboard box of ammunition, pulling three rounds out of the box, then stuffing the box into the pocket of her apron. \n\nShe eyed the back door of the bank while she walked calmly and carefully over to the old chain link fence that separated the big gravel lot behind the bank from the city park. \n\nEllie opened the bolt and fed the three rounds into the hunting rifle, then slapped it shut. She glanced back over her shoulder across the park at the back of the school in the distance, then leveled the rifle across the top of the fence, thumbing the safety off. Five of her children were at that school. It didn't matter to Ellie what the gunmen really wanted. All that mattered to Ellie was that none of them would ever reach that school. \n\n### \n\nShe was closing rapidly on the FOB when she heard the All Call on the scanner. Her Squad Leader's clipped, clear description of the tactical situation was, as usual, flawless. She heard the State Police response; a coldly mechanical explanation that the nearest units might take thirty or more minutes to reach the town if everything went right. Units had responded to a massive pile-up on the westbound I-44 and were tangled up in six miles of bumper to bumper traffic. Getting free was going to take time. \n\nA single glance at the always-carefully-prepared map board firmly attached to her console gave Sergeant Marina Pruitt all the information she needed. The truck snarled with demonic elation and rocketed up the next off-ramp. \n\n### \n\n8:20 AM \n\n### \n\nJosip and Mustafa turned the beater car off the road and pulled up the driveway. They'd gotten lost three more goddamn times in the maze of county back roads, but they'd finally arrived. At least Josip thought they had. He'd started to wonder when they damn near got run over by a semi that flew through an intersection without so much as slowing down. An older woman, sitting in a chair near the front door of the small cabin stood up as they got out of the car. She eyed their clothes with almost haughty disdain. \n\n\"What kin' I do fer you?\" \n\n\"We need to talk with Luther McCabe.\" Josip would've just shot her, but he wanted to make sure they had the right house. This had already been a goddam fiasco and he just wanted to get it done and get back to Saint Louis. \n\n\"He expectin' you?\" \n\nBefore he could answer, an old man with an almost waist-long grey beard stepped out the front door. \"S'alright Mae. Been expecting this fer a while.\" \n\nJosip smiled and swept his jacket back to pull his gun out of his waistband while Mustafa grabbed the old woman's arm. \n\nThe old woman just smiled. Mustafa tightened his grip. \"What are you smiling about?\" \n\nShe cocked her head, looked him in the eye and whispered two bizarre words. \"Guard Mamma.\" \n\nSomething exploded around the corner of the cabin, something dark and huge, something way too damn big to be as fast as it was moving. Mustafa didn't even have time to register what it was before he was wrenched away from the old woman and born to the ground, a giant red maw with great thumb-sized fangs closing over his face. \n\nJosip stepped back in shock, trying to fumble the Glock out. When Mustafa's muffled screams of fear and pain suddenly cut off in an odd crunching sound, Josip suddenly remembered the old man with a sinking feeling. As he looked back, he saw the old man was inexplicably closer, an almost sleepy expression on his face. His arm was swinging toward Josip, the edge of the hatchet blade gleaming like bitter ice in the sun. \n\nJosip's last thought was an odd, stray memory of his uncle talking about his great grandfather, a hard, cold veteran of World War Two. \"Be cautious,\" his uncle had said \"of the man who lives when everybody else dies.\" \n\nHis uncle had never referred to him as \"grandfather.\" He had always called him \"That Terrible Old Man.\" \n\n### \n\nEllie shifted, then glanced at the scope on the rifle. Set for a hundred yards. She'd missed a deer once when she was fourteen. The deer walked right out in front her, only twenty-five yards away. She'd lined up carefully and fired, only to watch the deer trot off, after the bullet passed over its back. \n\nShe'd been upset, but her dad had comforted her, telling her to learn from it. She remembered his words. \n\n\"Hold low, Ellie. Just hold low.\" \n\n### \n\nWhile the two remaining bank robbers watched the firefight, and argued about how to reach the vans, Eric looked over at the three cashiers. Wide eyed and fighting panic, Peyton and Sara were trying hard not to look at Andrew's body. Kelsey was trying to help Jenny, but Jenny just pushed her hands away and whispered something. Kelsey was trying to argue, but whatever it was, Jenny was having none of it. Finally, Kelsey nodded, slow and sad. \n\nWhile the gunmen continued to argue, Kelsey pushed Sara towards the back room, then Peyton. Eric slid as quietly as he could along the floor, until he and Kelsey slipped through the door and went as quietly as they could to the emergency door to the back parking. They all pushed out at once. \n\n### \n\nLevi felt the air shift and heard an odd buzzing sound. He looked towards the back wall at the hostages. Or rather at where the hostages were supposed to be. Only one body was left slumped against the bare marble wall. \n\n\"Ramon! Where the fuck did they go?\" \n\n\"Who?\" Even as he said it, Ramon turned to look at the hostages. Only the black girl he'd grabbed in the grocery store was left. She looked at him from under her short, tangled hair, and smiled, a wide, vicious, bloody rictus of a smile with demonic humor and no humanity at all. \n\n\"They gone, asshole.\" Her voice was different, slurred with an accent of some sort creeping through the formal tones the woman had been using. \"You gon' die soon.\" \n\nSuddenly, Ramon realized what the buzzer was. \"Shit. That's probably a back door alarm. Who puts a fucking back door in a bank?\" \n\n\"Goddammit. I'll shut you up...\" Levi started for the black girl with the shotgun raised, rage written on his stark features. \n\n\"Leave her!\" Ramon shifted his Glock 19 towards Levi. No way was he losing the one hostage he had left. He couldn't forget the dark rage on that big blonde guy's face. \"Check the back.\" \n\nLevi glared at him, then lurched for the back offices, and found the door just swinging shut, the sound of scrambling feet on gravel still close. He thrust through the door and turned to aim the shotgun at the gaggle of figures stumbling across the gravel lot. \n\n\"Hey! Jackass!\" A woman's voice cut through the air like a glittering shard of glass. \n\nLevi turned to look, spotting an absurd figure in a tight Pepto-Bismol pink skirt and white blouse, maybe fifty feet away. Strands of red hair had escaped her pink scrunchy and were blowing in the light breeze. For the merest fraction of a second, he wondered how she could even hold the large hunting rifle so steady. He never heard the rifle fire. The 180-grain .30-06 round, at just under three thousand feet per second, was moving well over twice the speed of the booming sound of the shot that rang off the walls of the buildings. \n\nEllie had remembered to hold low, but not quite as low as she thought - instead of slamming through Levi's heart, the round passed just through the hollow of his throat, destroying his spine, and nearly beheading him. He collapsed straight down, his body blocking the door open. Thinking only of her children, a mere three blocks behind her at the school, Ellie worked the long bolt of the rifle with the calm certainty of a hunter and leveled it at the open door again. Whatever happened she would be here. \n\nWaiting. \n\n### \n\nLuka poked the AK around the corner of the van. He couldn't believe this damn town. It was like a bad movie; every damn person here seemed to have a goddamned gun. Tarik's clever plan had come apart at the seams. Hell, Tarik was huddled bleeding in the passenger seat floorboard, trying to figure out how to get Dino's huge body out of the damn driver's seat without being shot. \n\nLuka was actually hoping the pair shooting at them were cops. The giant fucking blonde guy looked like he could bench a car, and the rage on his face promised a slow death to anyone he got his hands on alive. The pirate-looking bitch who'd dragged the first cop away was worse; he'd seen a bullet hit her leg and knock her down. She'd hopped right back up and moved on like nothing had happened. She hadn't even bothered to check to see if she was bleeding. \n\n### \n\nMarina managed to hold the machine on the road, almost by force of will alone, driving more by feel than by thought or vision. The truck was ecstatic, clawing along the asphalt and rock roads at unbelievable speeds. The truck's voice, so strangely like Jenkins and White talking together, urged her on. A predatory, almost ravenous smile that would have chilled a lion's heart lit her face darkly. She cautiously reached over and flicked the red rocker switch to turn on the call for battle. \n\n### \n\nThe words \"AAAAALLLLLLL ABOOOARD!\" suddenly boomed off the walls; incredibly, deafeningly loud. The voice of an insane god. \n\nUnhinged laughter erupted, seemingly echoing from everywhere at once; from the walls to the sky, overwhelming even the gunfire. \n\nTJ grabbed Swede's sleeve. \"Shit. Shit. Shit. Get back into the doorway. Now!\" \n\nSwede looked around wildly. \"What the hell?! Was that...?\" \n\n\"Ozzy Osbourne. 'Crazy Train.'\" \n\nThe intense, driving call of an electric guitar filled the air all around them, underlined by the growing animal howl of a diesel engine being pushed to its absolute limit. \n\nTJ pushed Swede into the alcove and wedged herself in next to him. \"It's Marina. She's coming.\" \n\nAs the engine and guitar grew almost deafening, Swede could swear the ground was vibrating. \"What do you mean?\" \n\n\"That's the barricade song. She used it in Iraq. Just hold on for fuck's sake.\" \n\n### \n\nCindy watched the bank employees race away, heading down the alley. For a moment she pondered where they might be headed. But that wasn't important. Not really. She'd watched Ellie shoot the man in the doorway, and she'd wondered why Ellie was getting involved; why and how Ellie had changed from the friendly waitress to some kind of fierce and fearless warrior. Before she could think it through, she noticed the gunman's head. Bald skin of that peculiar sallow color. She began to walk forward. Not, properly speaking, against her will, but certainly not of her own accord. Drawn hypnotically towards the back of the bank. \n\nShe stared at the body blocking the door, a shotgun on the ground next to an outstretched hand. Levi. It was almost impossible to believe. The bastard was finally dead, eyes glassily staring into nothingness, crooked yellow-brown teeth still bared in a scarecrow-grin. The head was at an odd angle to the body, most of the neck was just gone. \n\nShe could hear Ellie calling to her, but she didn't register words, or even sounds; just a vague distant feeling that, whatever it was, it wasn't important. Ellie could do what she needed to do. So could Cindy. \n\nShe could hear voices from the doorway. One was Ramon, though she couldn't really hear the other. Not that it mattered who else was in there. All the shooting. All the dying. This was her fault. The roaring in her ears along with the sound of her own heart beating blocked out everything. She reached over and gingerly picked up the shotgun and began to step over Levi's foul corpse with growing resolve. \n\n### \n\nLuka shivered, an unpleasant corpse-finger chill tracing up his spine as he tried desperately to make sense of the sudden tidal wave of sound. He turned but barely had time to register the huge mass of metal and fury bearing down on him at unbelievable speed. A part of his brain tried to convince him that he was seeing things, but the gleaming monster suddenly shifted as if it had seen him and he could sense a limitless hunger for blood. Fortunately for Luka's sanity, he couldn't see the twisted mix of anger, hate, and joy on Marina's face as she guided the semi towards the van, upshifting a final time. It was only for a fraction of a second, but that last fraction of a second of life was far more pleasant for Luka for not having seen her. \n\n### \n\nHumans often judge things largely by context. A teddy bear tucked in next to a sleeping child is innocuous, even heartwarming. A teddy bear floating alone in dark water evokes fear and unease. Likewise, a semi-trailer moving at 65 miles per hour on the highway barely registers to most people. It is normal, it belongs there. At 95 miles per hour it is cause for concern. But that same semi-trailer moving 95 miles per hour down the dusty main street of a small town is a monstrous and terrifying event. Almost incomprehensible. Especially when it slams through vehicles, flattening and shredding metal like papier-m\u00e2ch\u00e9. \n\n### \n\nThe Hammer of God. Swede had heard that somewhere. It was hard to think, his ears were ringing, but in a muffled, murmuring, underwater way. The inane thought just wouldn't leave his mind. Church maybe? Something he'd learned in Sunday school. Macabe? No, it was Maccabeus. The Hammer. That was it, he was sure. The Hammer of God. \n\nHe looked at the wreckage-strewn street. The white van was scattered down the street in a string of torn metal and shattered glass. Lumps of what he hoped was upholstery sat in odd clusters here and there, oddly patternless. A huge white scrape mark on the massive limestone wall of the old icehouse showed where the van had been crushed along it for half a block's length by the semi. Darker smears of color along the wall grimly promised more horrifying finds. The other van had been strangely sheared, the front half crushed almost flat, leaning against the corner of the grocery store under the ancient hand-painted \"American Coffee\" mural that decorated the wall. The back half of that van was simply missing, probably pushed along in front of the metal monster. \n\nSomething tugged at his sleeve and he focused nearer him. TJ was yelling at him, but she almost immediately realized he could hear no better than she could. It was obvious what they had to do though; they carefully swept the wreckage, handguns leveled. \n\nThere were obviously no survivors, the fragments of bodies spread along the street weren't really recognizable as having ever been human. An old joke about \"counting feet and dividing by two\" rose in his mind, almost bringing his breakfast with it. From the greenish cast to TJ's face, even she was appalled by the carnage. \n\nHe could see the back of the semi off in the distance, more than a quarter of a mile, probably. His hearing was slowing returning and he could hear the music blasting from the truck. How the hell the driver had managed to keep it upright and on the road was beyond him. A twisted piece of the truck's dark red metal hood spinning slowly in the road testified that it hadn't escaped completely unscathed. A bit of movement caught his eye and he could see the thin figure of TJ's trucker friend jogging down the road towards them, carrying a club of some kind and small green pack. \n\nSwede set his jaw and began to move towards the bank. And Jenny. \n\n### \n\nRamon stared disbelievingly out the front window at the wreckage of the van. Hell, it wasn't even recognizable as ever having been a van. He looked back at the last hostage, the only one who hadn't escaped. \n\nJenny pulled herself up and back, dragging her legs. She pushed her shoulders higher up against the marble wall, a bubble of blood clinging to the corner of her mouth. There was a wheezing, gasping sound, then she began to chuckle. Almost soundless at first, it grew deep and chilling. Her body jerked a little with the effort. \n\nRamon stared at her, puzzled. \"What the fuck is wrong with you, bitch?\" \n\n\"All those cross tattoos. And you don't have a fucking clue.\" \n\n\"What the fuck are you talking about?\" \n\n\"You don' know anything 'bout your own religion. All those crosses and you never really read your own Bible, did you?\" The lilt of the bayou crept into her voice. Jenny knew she was almost done. \n\n\"What?\" \n\n\"Angels. Motherfucker. Angels.\" \n\n\"What about them?\" \n\n\"Angels. They're not little naked babies with wings or pretty girls in robes.\" She coughed a fine spray of blood. \"Sometimes they're messengers. But most of the time...\" her voice trailed off as her eyes closed. \n\nRamon couldn't figure out why, but he knew it was important. \"Most of the time what?\" \n\nShe must have heard him because her eyes opened. But they were unfocused, unseeing. \n\n\"Most of the time what, bitch?\" \n\nShe coughed, more blood running down her chin. She whispered weakly. \"They kill the firstborn. They destroy cities. Most of the time... they're weapons. They're vengeance.\" \n\nThe black girl gave a last soft, wet, rasping chuckle then shut her eyes against the pain and sagged as he watched. \n\nA soft scraping sound came from the doorway behind him. When he looked up, Cindy stood in the back doorway of the room, Levi's shotgun leveled at him. She'd changed. She was unblinking, cold and implacable. ",
        "He put the Glock on the floor and slowly raised his hands. \n\nA heartbeat later, the blast of the shotgun rang off the marble walls and floors of the bank. \n\n### \n\nA shot boomed from inside the bank and Swede sprinted forward, slamming through the front door. Cindy stood over the body of the tattoo-covered asshole who'd taken Jenny, a shotgun dangling from nerveless hands. She was staring at a crater in the man's chest, just above his heart. \n\nHe barely noticed TJ calmly sweeping the bank, while he ignored everything and stepped past Cindy to the limp form of Jenny leaning against the cashier cage. He frantically felt her neck for a pulse. She felt cold, almost lifeless, but he could just feel a thin, thready beat under his fingertips. A moment later, TJ's trucker friend was nudging him aside and rolling Jenny toward her a bit, checking her back. \n\n\"Open chest wound. No exit wound.\" She opened her pack and pulled out a bandage in a sand colored pack. She began talking to herself in an almost a machine-like manner. Swede realized she was repeating instructions she'd learned by rote, word for word. \"Taking care not to touch the inside of the wrapper...\" \n\nWithin a minute the bandage was applied, Marina never taking her unblinking eyes off the wound, never even looking at Swede. She shifted Jenny's body, continuing her mantra. \"...Position the casualty on his side with the injured side next to the ground.\" She looked up at TJ who'd just come back from kicking the bald gunman's body out of the way and closing the back door. \"One civilian casualty in need of MEDEVAC, Two KIA at this location. Multiple Enemy KIA along roadway.\" Her voice was distant and precise, her eyes focused on another time and place. \n\nA moment of sadness was evident on TJ's face, but hearing the approaching sirens of what sounded like a hundred State Troopers she holstered her gun, keyed her radio and began reporting. As she did so, she reached over with her other hand and plucked the shotgun from Cindy's loose grip. \n\nSwede caught a glimpse of his watch: 8:35AM. \n\n### \n\nTwenty Four Hours Later, Regional Medical Center \n\n### \n\n\"Shannon's out of surgery. I talked to the doctor. He'll be all right, but he'll be out for at least six months.\" Ray was looking over his notebook, checking everything. \"Don's too damn stubborn to die this way. He's probably going to be on a liquid diet for a long damn time though. A lot of damage. Biggest danger for him is infection.\" \n\n\"I was worried about Don.\" TJ paused, afraid to ask. \"What about Jenny?\" TJ was trying to catch up on the casualties; she had stayed back in town overnight to manage the fiasco. Controlling the scene, dealing with the state, and work with the civilians to clean up the mess. Counting the casualties hadn't been easy; Marina's truck had done incredible damage to the gunmen. \n\n\"We all thought Jenny was pretty far gone, but she's been surprisingly strong. Swede's in the ICU recovery room with her. They aren't happy about it, but Swede won't leave her side.\" \n\nTJ smiled. \"I'd imagine not. I don't think it'd go well if they tried to throw him out.\" \n\nRay shifted. \"This morning, the Board voted to make you acting Sheriff. Shannon told me to call Harlan before he went in for surgery. Didn't matter though, the Board was already in an emergency meeting. The outside camera of the bank caught you dragging Shannon out of the street during the firefight and the owner of the bank showed up at the Board meeting with the video in hand. Even Charlotte voted for it.\" \n\n\"What about you, or, hell, damn near anybody else? Most of the guys have seniority on me.\" \n\n\"Shannon talked with all of us before he started sending you to the Board meetings months ago. I'm planning on retiring soon, Don's probably going to have to now. A few of the guys would consider the position, but they all recommended you for it first. Probably to avoid the politics and paperwork; the pay sure as hell isn't worth it. With your time as an MP, nobody is concerned with seniority.\" \n\n### \n\nTwo Weeks Later. Saint Clair, Missouri. \n\n### \n\nTJ pulled the Beast up the rock drive. Mae was seated in her usual chair, crocheting a light green blanket. \n\n\"Expecting another grandbaby?\" \n\n\"Third one this year. You'd think the young'uns didn't have any other hobbies. They all have televisions. Must not watch them much.\" Despite her comments, Mae sounded anything but put out by the new grandchild. \"Luther's 'round the side.\" \n\nA hammering started up as TJ headed back around the house on what appeared to be a new rock path. She stopped, staring. The path veered around the sleeping dog before going on to a new wooden structure Luther was working on, tapping nails in neatly with the hammer head of his ever-present roofing hatchet. \n\n\"Morning, Luther.\" \n\n\"Morning, Sheriff.\" \n\n\"I'm just the acting Sheriff.\" \n\n\"For now. Everyone knows how it works 'round here.\" \n\nShe looked back at the path. \"You made the path go around the dog?\" \n\n\"Easier'n makin' him move. Had to move the outhouse, the old one was all full.\" \n\nTJ knocked on the new building. \"Seems sturdy.\" \n\n\"It's a lot deeper too, borrowed Colby's big tractor to dig it out with. Got a good bucket on it.\" He paused. \"An' it's got a good breaker bar on it for the limestone.\" \n\n\"Which Colby?\" \n\n\"Sam. He bought the new tractor after that lightning thing last summer.\" \n\n\"Lightning?\" \n\n\"Yep. He was baling hay, trying to beat the rain, tractor got struck, threw him 'bout 20 feet.\" \n\n\"He alright?\" \n\n\"If he'd a been right in the head before it happened, I'd of worried about him. He seems about like he was before. Maybe a touch twitchy 'bout loud noises.\" \n\n\"Mess up the tractor?\" \n\n\"Nope, but he says it was bad luck. Traded it in.\" Luther walked over to his old pick up, shoved the hatchet in his belt and hoisted himself up onto the tailgate. \"Got a new run, Sarn't.\" \n\nTJ took her usual seat and accepted her mug. \"Any good?\" \n\n\"Fixin' to find out now.\" Luther held up a mason jar with a beautiful gold-amber liquid. \n\n\"Looks pretty good.\" \n\n\"This one's special.\" Luther poured each mug half full. \n\n\"Fallen Comrades.\" \n\nTJ sipped her mug then looked down at it in surprise. \"This is damn good, Luther.\" \n\nLuther nodded and took another sip. \"That it is. I'll be making more of this. Lotta hard work, but it was worth it.\" \n\nTJ raised her eyebrow. \"What'd you age it with?\" \n\n\"Sugar maple char.\" \n\nTJ very deliberately did not turn to look at Luther, though she knew he'd have a completely innocent expression on his face. \"Huh. Well, it's damn fine.\" \n\n\"Mae says they're getting downtown all cleaned up.\" \n\n\"Yeah, the ice factory wall is getting whitewashed next week. Damn building's a fortress, barely any damage to speak of.\" \n\n\"Sounds like it was a helluva mess.\" \n\n\"Yeah, it was.\" TJ shook her head. \"Still not sure what all they were trying to do. The cashiers at the bank said it looked like they didn't actually intend to kill Andrew.\" \n\n\"City folk don' make no sense no how. That's why I live out here. Quieter. Not as much trouble and you can just take care of it yourself.\" \n\n\"Take peace where you can find it.\" \n\nLuther nodded contemplatively. \"How's your trucker friend doing?\" \n\n\"Better than I expected. Just sat and watched AJ and his boys working on her truck until it was done. I think it kind of creeped them out, and made them work faster. The Board paid for everything that her insurance didn't cover.\" \n\n\"Sounds like we all owed her. Heard her truck had a new paintjob when it left.\" \n\n\"We do owe her. I had two rounds left and Swede had four. The new paintjob was Tammi's idea. The bank, diner, and grocery store all kicked in for it. It's still red, but it has a huge sunrise over a beach on each side. Tammi had them put the name 'The Miami Sound Machine' on it. Gloria Estefan should be proud.\" \n\n\"What'd your trucker friend think of that?\" \n\n\"Hard to tell, but I think Marina likes it. As much as she likes anything anymore. She'll be back this way in a week or so.\" \n\nLuther sipped a little more. \"Bring her 'round sometime. We gotta stick together.\" \n\nTJ nodded thoughtfully. Maybe it'd help. Probably not, but there was nothing to lose by it. \"I'll do that.\" \n\nLuther raised his mug a bit. \"Got a full case of this needs a home, Sarn't. You can even share it with Swede, damn near losing his girl like that. Not too much, mind you. Don't need to spoil him. Maybe you can drop a jar off with Shannon, probably help him get better. Maybe a jar for Ellie n' Harlan.\" He reached back and pulled a tattered cardboard box full of mason jars out, then slid it over to her. \n\n\"I'll do that.\" TJ paused. \"All of it.\" \n\n\"How's Ellie doing?\" \n\n\"She's not having any trouble sleeping. We got a look at the guy she took down. Serious meth head, probably would have head straight for the school. No way that would have gone well. She did right and she knows it.\" \n\nLuther chuckled. \"Mae said the way Harlan is looking at her, she's probably having lots of sleepless nights. Figures they'll end up with baby number six soon enough. The man was already crazy about her. There's nothin' better than a woman who'll fight for the kids.\" \n\nTJ took a long sip of the doubly-illicit moonshine as they sat quietly for just a bit. \"You know I gotta ask.\" \n\n\"Gotta do what they're payin' ya to do Sheriff. It's my tax money after all. Can't have ya' slackin' on me.\" \n\n\"Acting Sheriff.\" \n\n\"For now.\" \n\n\"Do you have any information on the whereabouts of one Kevin Cooper, from the Bureau of Alcohol Tobacco and Firearms?\" \n\nLuther studied the ground thoughtfully for several seconds. \"No, Sheriff, can't rightly say where he might be.\" \n\nTJ nodded. \"I'll put that in my report.\" \n\n\"You do that, Sheriff.\" \n\nTJ slid off the tailgate, official duty done. \"You keep yourself outta trouble, Airborne.\" \n\n\"Yes, Sarn't.\" \n\n### \n\nJefferson City, Missouri \n\n### \n\nTJ shook hands with the federal agent just outside the records room of the Victim Protection Office. \"So, Agent, what can I do for you?\" \n\nKaren shifted her stance. \"Just call me Karen. Sheriff...\" \n\n\"Acting Sheriff, but TJ will do fine.\" \n\n\"Okay, TJ. I gather you've had some questions you want answers to.\" \n\n\"Like how did they find Cindy?\" TJ raised her eyebrow sardonically. \n\nKaren grimaced. \"We're not sure. But nobody should be looking for her now. Her ex is dead, that creepy freak show, Levi, is dead. Most important, Francisco Gutierrez died in an 'attempted robbery' a couple days after that fiasco you dealt with.\" \n\n\"The cartel deal with him?\" \n\n\"Or maybe the Venezuelan government, he was embarrassing both of them pretty badly. Once it became evident that his people had screwed it up again, somebody decided to get rid of him.\" \n\n\"So why did you want to meet me here?\" \n\nKaren waited a moment. \"Not sure what it means, but there's something here.\" She flipped over the paper log at the entrance and pointed. \"This place isn't exactly at WITSEC standards for security, but they do make people sign in.\" \n\nTJ stared grimly at the entry. \"So what are you going to do?\" \n\n\"Us? Nothing. This isn't an official visit. I'm on leave. We lost interest with Gutierrez's death.\" She glanced over at the clerk near the door, absorbed in a game of what appeared to be \"Minesweeper' on her computer. \"Not that they need to know that. I just figured my credentials would get you into the office and give you a chance to look around.\" \n\nTJ shrugged, a bit woodenly. \"If you say it's over, then it's over, right?\" \n\n\"Sure. If your investigation turns anything up, I assume you'll contact... whoever the hell in this state is supposed to investigate it.\" \n\nTJ gave a non-committal shrug. \"I'm sure the right people will be on it, sooner or later.\" \n\n### \n\nCapital Region Medical, Jefferson City, Missouri \n\n### \n\nSenator Cooper leaned over for a closer look. \n\nPale and still, the thin woman lay on the hospital bed. The shaved head was partially bandaged and covered with a sock-like surgical dressing, making her look like a confusing combination of old woman and child. \n\n\"No matter how often I come over here, I still can't believe this is the scary serial killer we all heard so much about. Hardly the stuff of nightmares.\" \n\nTJ looked over at the tall man. \"I heard you'd been coming in to see her. I'd be careful, we're pretty sure she killed 53 people. Maybe more.\" \n\nHe shook his head. \"Probably just bullshit. Just another nut-job wanting attention.\" \n\nTJ stared down at Angie's drawn face. \"Everybody is underestimating her. I saw her, what she's really like.\" \n\n\"There's nothing to her, I could break her in half like a pencil.\" \n\n\"You'd think so. Of course she's had brain surgery and been in a coma for a month.\" \n\n\"That long, and she's still not coming out of it. I keep expecting them to tell me she's dead.\" \n\nTJ shrugged. \"Not yet. So what exactly is it you wanted to talk about, anyway?\" \n\n\"I wanted to see what the status on your investigation into that bank robbery and witness protection fiasco is.\" \n\nTJ kept her face straight. This was it, this was why he'd wanted to meet away from the office. A place where the hallway cameras were out of order due to construction. A place he'd apparently bullied the staff into giving him the punch code to a dangerous patient's room. \"There were some discrepancies in the file on Cindy. According to the records, the files were accessed three times, but the Victim Protection Office can only account for two. The regular audits.\" \n\n\"Probably a paperwork error.\" \n\n\"I thought so too, so I checked the sign in log at the State repository. It's unreadable, but there's a sign in on the log made in that cerulean ink of yours. That was a little sloppy.\" \n\n\"That doesn't prove anything.\" \n\n\"I just want to know this is over, that Cindy will be left alone.\" \n\n\"You need to just mind your own business. You have plenty of other problems.\" \n\nTJ stood silently for a second, studying Angie's face. \"Like what?\" \n\n\"Like your little psycho-bitch friend here. If she's as crazy as they say, then all her legal decisions and statements are suspect. Maybe her claim as to who is the father should be questioned, maybe Child Protective Services should take that little girl from you and your 'special friend.' And while you're fighting your way through all the layers of bureaucracy in the State, that little girl can bounce from foster home to foster home until she ends up in a really nasty one. And I'm sure your department's funding will be held up until they realize you need to leave.\" \n\n\"You would really do that?\" TJ's voice was softer, and she never looked up from Angie's face, watching her eyes twitch under closed lids. \n\n\"No. I really am going to do that. It's a good lesson for you and your 'special friend' to be more accommodating to people who deserve respect.\" \n\n\"That's not respect, that's coercion.\" \n\n\"Fear, respect, as long as it gets results.\" \n\n\"Are you absolutely sure you want to do this?\" Her voice was barely audible. She watched a tiny rhythmic twitch at the corner of Angie's mouth. \n\nCooper chuckled. \"You really need to learn when you're out of your league.\" \n\n\"I tried.\" TJ straightened up and walked stiffly toward the door. \"You dropped your pen, Senator.\" \n\nCooper felt his pocket and found his pen missing. \"Where...\" \n\nTJ gave a sad smile over her shoulder. \"She's right, you know. In some ways, I'm no better than her. Just another monster.\" \n\nHe jerked his head up to look up at the metallic click that sounded as the door latched. \n\nState Senator Robert Cooper was still testing the locked door when the four-thousand-dollar broad tip fountain pen speared into the hollow of his throat. \n\nHe clutched at it, but an iron hand held it in, held him silent. Another unspeakably strong hand gripped the hair on the back of his head. \n\nA smooth cheek rubbed along his caressingly while a terrifyingly gentle voice whispered in his ear. \"You really shouldn't have threatened my baby.\" \n\nTJ watched for a second as the Senator was dragged inexorably back toward the hospital bed. \n\nAngie's hollow-dark eyes caught on TJ's for a second through the window in the door; she paused as she dragged him up onto the bed, just long enough to send TJ a wink. \n\n### \n\nTJ walked out past the empty guard chair and slipped into the women's restroom, waiting until she heard the chair scrape to walk out. \n\nShe walked up to the guard, \"Keith\" by his name plate. \"Have you seen a guy claiming to be a Senator around here?\" \n\n\"Nope. Been looking for one myself. Got called down to the front desk to escort Senator Cooper up here again. He never showed up.\" \n\n\"That'd be him. He said he had some questions about a case I was working in Saint Clair, but I really think he wanted talk about Angie. He's always asking about her. It's a little creepy if you ask me.\" \n\n\"Well he can have her, she scares the living hell out of me. The guy's been up here a half dozen times to look at her, like she's some kind of zoo animal.\" \n\nTJ waited twenty minutes with obvious impatience. \"I don't think he managed to get away. If he shows up looking for me, give me a call.\" She handed her business card to the guard and walked away. \n\n### \n\nSaint Clair, Missouri \n\n### \n\nCindy held up a tub of coconut oil with a raised eyebrow. \"You two seem to go through a lot of this. Is it any good for cooking?\" \n\nTammi smiled luridly. \"You could say that.\" \n\nTJ laughed and Cindy puzzled for second, then caught on and grinned. \"Oh. Got it.\" \n\n\"Thank you for the song recommendation. Swede had Courtney for the weekend so he could take her to see Jenny, so we had some alone time.\" \n\n\"'Pour Some Sugar On Me.' Best stripper song ever written. So you used it?\" \n\nTammi grinned outright. \"I wasn't the one dancing. Somebody lost a bet.\" \n\nTJ rolled her eye, but smiled. \"I think you're sharing a little too much.\" \n\n\"Don't stop on my account. This is just getting interesting.\" Cindy winked at Tammi. \"How was she?\" \n\n\"Awesome. The coconut oil made it hard to get a grip on her though.\" \n\nTJ tried to suppress her smile, but mostly failed. \"She seriously broke the no-hands rule.\" \n\n\"And the easy chair.\" Tammi beamed proudly. \n\n\"How is Jenny? I haven't been able to get up there.\" \n\n\"Happy. Nervous. She can't seem to stop staring at the ring Swede put on her. I think it'd be worth someone's life if they tried to take it off her.\" \n\nTJ finished putting stuff up on the counter. \n\n\"More carrots?\" \n\n\"And diaper wipes.\" TJ shook her head. \"We started Courtney on meat. It got ugly quick.\" \n\nTammi shifted a sleeping Courtney to her other shoulder. \"We didn't mean to, but we were eating and she kept reaching for TJ's plate and managed to grab a piece of steak.\" \n\nCindy stared softly at Courtney. \"Did she like it?\" \n\n\"She shoved her plate of veggies and fruit onto the floor and started grabbing my steak as fast as she could.\" \n\n\"That does sound ugly.\" Cindy bagged the carrots. \n\nTammi giggled. \"That wasn't the ugly part. This morning's diaper blow-out was...\" she grinned evilly over at TJ. \"Epic.\" \n\nTJ snorted. \"Our little girl's a biological weapon now.\" \n\nCindy glanced around and looked over at TJ. \"Speaking of ugly. Have they caught Angie?\" \n\n\"Still looking. She could be anywhere by now. Maybe Mexico, if she's still alive. She just had brain surgery. But a veterinary clinic was broken into a few blocks away from the hospital, and whoever it was took antibiotics, painkillers, and Ketamine, so I'm thinking she's alive.\" ",
        "Tammi tried to suppress her smile of pride. \"She's a damn tough girl.\" \n\n\"How'd she do it?\" Cindy popped the diaper wipes into a bag. \n\nTJ frowned and shook her head. \"Their best guess is that she was awake for a few days, watching the Senator using his punch code. He came to see her alone one too many times. He was probably dead under her bed when I looked into the room. You can't see much through the window. Then when she was finished with him, she went out and got into the ventilation ducts.\" \n\n\"I'm just glad she didn't kill the guard.\" Tammi held Courtney a little tighter, thinking about Angie's promise. \n\n\"He never even saw her. They tried to reprimand him, but I sent over copies of our warnings about how dangerous she was, that they needed monitoring cameras on her, that they didn't have enough guards, along with their responses. They really should've had more guards on, then one would have still been there when the Senator went in.\" TJ gave an exasperated sigh. \n\nCindy glanced around with a conspiratorial look. \"Is all the stuff about writing on the walls true?\" \n\nTJ nodded. \"It's not really a secret, she pretty much signed her work. She did, actually. Carved her name on his forehead. She wrote 'rotting,' 'corruption,' and 'pervert' in his blood on the wall over his body. And she didn't eat the heart, just stuffed into his mouth.\" \n\nTammi checked to see if Courtney was still sleeping. \"Angie told TJ that she ate the hearts to feel their strength or something like that.\" \n\n\"I'm not even sure Angie really knows why she does it. But I think doing what she did was an insult. Maybe.\" TJ gestured helplessly. \n\nTammi continued. \"If he was 'rotting' she wouldn't want... that. He must have been bad. Maybe he touched her when he thought she was asleep.\" \n\nTJ shrugged. \"He was an asshole, but I can thank him for one thing.\" \n\nCindy looked at TJ. \"What's that?\" \n\n\"I know what color to call Tammi's eyes. Cerulean.\" \n\n### \n\nLos Angeles \n\n### \n\nThe semi slowly maneuvered down the back street, seeking the loading dock. \n\n\"Bad neighborhood, huh?\" The frail hitchhiker, slightly scrunched down in her oversize black and red woven Baja jacket, peered out the window at the gang signs on the walls. \n\n\"It isn't good.\" Marina's voice held a little life; a little more anyway, than it had. Maybe it had been being able to save someone. Maybe it had been the hitchhiker. Marina never picked up hitchhikers, but this one seemed special for some reason. She seemed to value the solitude and music just like Marina did. She'd also slept a lot, curled up on the bed in the sleeper, just moving over a bit whenever Marina grabbed some sleep. For whatever reason, it was comforting. \n\nThe hitchhiker pulled the bill of her faded green Texaco Gas ball cap a little higher and eyed an enormous grey \"TRG\" gang tag on a wall thoughtfully. \"So you're coming back through on the ninth?\" \n\n\"That's the schedule.\" \n\n\"I'll meet you here and ride back to New York with you. I've never been there before.\" \n\nMarina manipulated the truck into a tight turn, and backed neatly into the loading dock. She glanced at her gaunt companion as she shut her truck down. \"Do you have a place to stay?\" Marina surprised herself with that monumental effort to be a bit more human. \n\n\"I'll find a place.\" Angela watched three gang members strutting down a nearby sidewalk. She pulled a piece of paper out of her pocket and checked it for a second. \"I've got your tattoo artist's name, I want my new tattoo to be special; it's gotta have the right color blue.\" \n\n\"She can do anything for you. But it won't take that much time.\" \n\nAngie watched one of the gang catcall after a young mom carrying a baby. The woman kept her eyes fixed stonily on the sidewalk in front of her and walked just a bit faster, obviously terrified. She smiled just a bit, remembering her so-very-specific promise to Tammi. \"I've got some things to keep me busy.\" She reached over and tweaked the stereo playfully, then slid out of the truck. \n\nMarina watched the hitchhiker walk away, a small part of her looking forward to the next time she'd see her. \n\nShe tapped the music down just a bit. Pulling her manifest out, she began filling out the arrival time, listening to the soft voices of Blue Oyster Cult singing the opening verses of \"Don't Fear the Reaper.\" \n\n### \n\nPost Production Notes: \n\nThe inspiration for this story was the 1876 Northfield bank robbery that destroyed the Cole Younger gang. They failed to take into account the number of Union Army Veterans in the town and the gang was shot to pieces. Frank and Jesse James managed to escape, more by sheer luck than by planning. They later claimed they weren't even at the disastrous robbery. \n\nFor the curious, Mae's dog is half Newfoundland, half Neapolitan Mastiff. \n\nOriginally, this started with a simple one-off short story; readers asked for more, and TJ and Tammi's world grew. I appreciate the encouragement and support I've gotten since the beginning. It has been simply amazing."
    ],
    "authorname": "Todd172",
    "tags": [
        "violent",
        "romance",
        "lesbian",
        "bank robbery",
        "police",
        "tammi",
        "sheriff"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/st-clair-ch-04-the-angel"
}