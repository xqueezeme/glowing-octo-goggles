{
    "title": "Sophie Ch. 11",
    "pages": [
        "This story is part of a series and will make much more sense if you read them in order.\n\n*\n\nThe dream started quickly, he felt her presence first before he heard or saw anything. He felt soft skin on his and he opened his eyes. His sheet was off and Sophie was crawling up between his legs. He could see her young breasts hanging from her chest as she got closer. She moved up and lay on his chest. He felt her firm breasts squash against him. He put his arms around her. Her skin was so smooth. He rubbed her back and then moved his hand down until he felt the curve of her ass. She did not move and he moved his hand over her wonderful butt. It was tight but soft. He ran his fingers across her crack and then down to her upper thigh.\n\nShe lifted her head and pulled herself up a little. He felt her lips touch his and her mouth opened. Her tongue snaked out and wrapped around his. He felt the heat building. His cock was roaring now, pushing against his tight underwear. She was kissing him hard and he was squeezing her soft ass. He now had both hands on her butt and he was pulling her closer. Her legs spread around his body and his fingers dropped between her open legs. He felt the heat and moved his fingers. He touched her pussy, it was incredibly warm and he immediately felt the wetness as his finger moved between her lips. She moaned in his mouth.\n\nHe moved his finger around in the moist opening while his other hand moved between her ass cheeks. He felt her tight asshole and she flinched. He slid his fingers down to join his other hand and felt the moistness. She was starting to move her hips as his fingers explored her soft pussy. He slid a finger inside her and he felt immediate tightness. He worked his finger and it slid in finally. She was snug even around his finger. He wondered what a cock would do to this tight opening. He started to move his finger in and out and she pulled her mouth off his to moan. She lowered her head against his shoulder and whimpered.\n\nHe moved his other finger up and found her little button. She shuddered when he touched it. He rubbed it softly and flicked it. She gasped into his skin. He felt her teeth as she bit down softly on his shoulder. He rolled her clit around slowly while he moved his other finger in and out of her. He could feel her getting hotter. He squeezed her clit between two fingers and she bit a little harder. She could not hurt him, his muscles way too developed for her to get any sort of leverage. He moved his finger deeper and she wiggled her hips. She was pushing against him and trying to grind into his stomach. \n\nHe flicked her clit again and then started to rub it as he dove deeper with his finger. She moaned again and he felt the first shudder and then she screamed into his skin. It came out muffled as she writhed on him. He pulled his finger out of her and held onto her as his other hand continued to rub her sensitive clit. She groaned and another huge shudder wracked her little body. He held on tight. She was whimpering now and shaking still. He rubbed a little harder and she convulsed again and moaned against his shoulder. She settled down and then continued to have aftershocks, for the lack of a better word, for minutes afterward. He wrapped his other arm around her soft body and held her. \n\nFinally her breathing calmed down and she pushed herself up a little. She kissed him again and then moved down. He felt his hands moving up her back as she slid down. He felt her hair and then her head and she stopped. He felt her small fingers slide under the waist of his underwear and pull down. His cock sprang out and he heard it slap against her face. She pulled them completely off and then he felt her small hand wrap around him. She slid it up and down slowly and then her other hand touched the head. He closed his eyes and leaned his head back.\n\nIt was his turn to moan now as he felt her warm tongue flick across the head of his cock. Her little hands moved up and down as her mouth took the head in. He had never felt anything so wonderful. She sucked it gently and then licked it again. It was like she was eating an ice cream cone. He chuckled a little and she sucked it in again. He felt her kiss the head and then he felt her body shift. Her legs touched his sides as her hand held onto him. He felt heat on his cock and then it touched moistness. The head slid in slowly and she held it there. Her hand left his cock and she put them on his chest.\n\n\"Doc\" he heard her voice in his head.\n\n\"Doc\" again, his dream was vivid as the sound of her voice seemed crisp.\n\nHe flicked his eyes open and saw her face. She was smiling at him. Her eyes were wet and glistening. She was beautiful and he reached up to touch her cheek. Her skin felt real and a tear flowed out of her eye and onto his finger. He swore to himself that he would remember this dream for the rest of his life. He pulled his finger to his lips and it tasted salty. \n\n\"Doc\" her little voice rang in his ears again.\n\n\"Sophie\" he answered and panicked as he heard his voice clear in his own ears.\n\nHis eyes opened wide and he looked at her. She tilted her head and smiled.\n\n\"I love you, Doc.\" She said.\n\nHe processed everything immediately, he was not sleeping! She put her finger across his lips and he relaxed. She moved her hand back to his chest and he saw her take a deep breath. Wait! His mind screamed out but he couldn't talk. Sophie!\n\nShe let the breath out slowly and he felt pressure as she started to lower herself on him. The tightness and heat was incredible as his massive cock slid up into her beautiful little body. His hands shot to her sides. She stopped moving and took one of his hands and placed it on her cheek. He got the idea and moved his hand to the other cheek.\n\n\"Hold me.\" She whispered.\n\nHe nodded as the panic bubbled in him. She was controlling him, he could not stop her. He felt her start to move again. He was sliding deeper into her. She was so tight. He saw more tears flow out of her eyes. He was hurting her. He tried to stop her but she smiled through the tears. She stopped suddenly and he felt something blocking him. Oh God, no! He forced his voice to break through.\n\n\"Sophie, no.\" He stammered.\n\n\"Doc, it will be fine. I am fine.\" She whispered, her tears dripping off her cheeks onto his chest.\n\nShe took another deep breath and pushed down. He felt pressure and then something snapped and she slid all the way down onto his lap. He heard her whimper and her face was contorted in pain. She fell onto his chest and he hugged her. His cock was still lodged in her but he couldn't move her. She lay there for a few seconds and then pushed herself up. She sat up on him, his meat buried deep in her little body. She was breathing a little ragged but trying to slow it down. He could tell she was still in pain and it hurt his heart.\n\n\"Sophie, please.\" He begged.\n\nShe looked at him and her face slowly changed. The pain left her and she was smiling her normal smile. Her cheeks were wet with tears and her hair covered half her face. She lowered her head and then lifted her body up. He felt his cock slide slowly out until just the head was inside her. She stopped and then lowered herself back down. She sat down again and gasped. A fresh set of tears escaped her eyes. \n\nHe felt powerless. This beautiful creature was impaled on his cock and he couldn't move save for holding onto her pretty face. He pushed the hair out of her eyes and behind her ears. She smiled at him and lifted herself again. This time she did not pause, she slid almost all the way up his cock and then slammed herself back down. She immediately did it again and now she was constant movement. She was still gasping every time she hit bottom, like the wind was being knocked out of her each time. He watched her bounce on him and he thought that was probably the sexiest thing he had ever seen.\n\nShe was moving harder now and her gasps were turning into moans. Her hair was going a little crazy as she turned into a wild woman. He did move his hands off her cheeks and grabbed her sides to steady her. She left them there and continued to rip up and down on his rock hard cock. He looked between her legs and was amazed his entire length was disappearing up into her. He had trouble in the past with small women and his girth but she was handling him. She was still tight as a vice but he was sliding in and out smoothly.\n\nShe lifted her head and moaned as she slammed down and stayed in place. She wiggled her ass and he felt her pussy squeeze him. He felt her start to shake and then she lowered her head and he saw her bite her lip. Her hair was wet and hanging down so now he couldn't see her face. She then bucked up slightly and he felt her little body start to shake uncontrollably. He held onto her as she wiggled on him. She was pushing down on him, trying to drive him deeper. She was making what seemed like animal noises as she continued to shake.\n\nHe held her through it and then she collapsed on him again. He hugged her. Her skin was hot and wet with sweat. She was still shuddering every now and then as he held her. He thought she might have fallen asleep but then she pushed herself up and stared at him. He looked at her and then she kissed him hard. Her tongue darted in his mouth. She grabbed his right hand and pulled it to her breast. He felt the softness and squeezed it. She moaned in his mouth and he grabbed the other one. Her nipples were hard in his palms as he worked them. They were so nice, he thought they might be the perfect breasts, big enough to feel like they had substance but small enough to not feel like they were just fat. Yes, perfect.\n\nShe pulled slowly off his lips but he did not let go of her breasts. She smiled at him as he groped her. \n\n\"Doc, can you roll over?\" She asked.\n\nHe looked at her with a question on his face.\n\n\"I want to be under you.\" She said.\n\nHe understood and let go of her breasts. He hugged her and shifted his body. He turned over and flipped her underneath him. He pushed himself up to try not to crush her. His cock slid out of her as he sat up. She made a small gasp. He looked at her and she had never looked prettier. Her hair was spread out over the pillow, her breasts sitting proud on her chest as she took deep breaths. Her nipples still hard little nubs. Her legs were spread open and now he saw her little pussy open to him, the inside pink and shiny with moisture. \n\n\"Doc, fuck me.\" She whispered.\n\nHe tried to process what he had just heard. He looked down and she was running her hands up the inside of her open thighs.\n\n\"Please.\" She whimpered.\n\nHe lost it. He lined up his cock and slammed it home. He put his hands on the bed next to her head and started to pump into her. He felt the bed move but it was silent. She was making little noises as he slammed into her. Her breasts were bouncing on her chest. He kept up the pace and he got into a rhythm. He felt he could go on all night. He was drilling deep into her and her legs were flopping around him. He grabbed her legs behind her knees and spread her open. He kept pumping into her little body. She had a permanent smile and her eyes looked intense. Her wet hair framed her perfect face and he loved the noises she made as he hit bottom. He pushed her legs back farther and started to hammer directly down on her. \n\nShe moaned and he heard a soft \"yes\" leave her lips. This girl was incredible, he thought as he pounded her young body. He now had her knees touching the bed as he pushed down harder. He started to worry he was hurting her and then she looked at him. He saw animal lust in her eyes. She grabbed his arms with her hands.\n\n\"Harder.\" She whispered.\n\nHe rammed her deep and then started drilling into her with all his strength. She continued to smile her wicked smile and he continued to pound her for all he was worth. He heard the sound of their skin slapping together and he worried they were making too much noise. There wasn't much he could do about that, a bomb couldn't stop him now. He felt the first tingle of the oncoming explosion and pumped into her again. He was amazed at her pussy. It was taking him easily but yet still tight and warm. \n\nHe felt it coming now and started to pull out. She wrapped her legs around him and pulled him back in.\n\n\"Deeper.\" She whispered.\n\nHe looked down at the animal under him. Still his sweet Sophie but also a wicked she-devil that was giving him everything he could handle. The pressure released from his balls and he pushed deep into her. He groaned as he felt himself release inside her. He knew it was a large load as he hadn't had sex in quite a while. He felt another release, probably even larger than the first. He blasted two more loads into her sweet body and then felt himself shrinking. He pulled out slowly and watched her young pussy snap closed as he slid his cock out. He sat back on his haunches.\n\n\"Thank you Doc.\" She whispered and stretched her arms over her head.\n\nHe watched her stretch and turn back into his sweet Sophie. Her eyes and cheeks were still a little wet but her smile was back. It was not the wicked animal smile he had just seen but her sweet, loving smile that made him forget about all his problems. The only thing that was now a little different was that she was lying there with her legs spread wide open in front of him. He thought this was another of the prettiest things he had ever seen.\n\nShe closed her legs and rolled off the bed. \n\n\"You want your bed back?\" she whispered.\n\nHe reached for her and she walked into his arms. He hugged her hard.\n\n\"Only if you are in it.\" He whispered in her ear.\n\n\"Deal.\" She whispered and pushed him back on the bed.\n\nHe lay back down and she snuggled on top of him. Her head was on his chest and her legs wrapped around his own right leg. He wrapped his arms around her and she purred. His breathing was returning to normal and he felt himself relaxing. He remembered feeling the warmth of her pussy on his stomach before his eyes slammed shut and blackness returned. "
    ],
    "authorname": "teachgirl1980",
    "tags": [
        "younger woman",
        "black",
        "female virgin",
        "dream"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/sophie-ch-11"
}