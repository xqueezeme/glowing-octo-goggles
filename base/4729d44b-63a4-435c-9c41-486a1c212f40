{
    "title": "Swipe Right for Something New Pt. 02",
    "pages": [
        "I sat there at my kitchen table, one hand cradling a fresh cup of coffee, the other nervously tapping my fingers on the table while focusing on my phone. I readjusted my robe, for about the 873rd time in the last 5 minutes. \n\nI promised I'd call her back. \n\nBut the longer I thought about it all, the more the conflicted feelings and emotions from last night bubbled to the surface. \n\n\"I could just ghost,\" I said aloud, to no one in particular. It's cowardly, sure, but...no, I'm just not prepared to deal with this. What started out as some harmless fun-checking out other women's profiles on Tinder-apparently turned into a full-blown crisis of sexual identity in just a few hours. And this morning, I'm dealing with the aftermath. \n\n\"But she called. I promised to call her back...and it was a great date...\" I said, continuing the debate with myself. \n\n\"She'll want to go on another date...\" I sat with my feelings about that thought for a moment. \"I mean, it was a really good date...\" and I thought about that amazing kiss. The hair on the back of my neck stood up, and a chill went down my spine as I felt yet another wave of arousal. Fuck. How did this happen?! How did I go from a straight, or presumably straight woman, to one who is questioning my sexuality for the first time in my 25-year life? In under 24 hours, no less!?\n\nI took another sip of coffee and a deep breath. \"OK. OK. I'm calling.\" \n\nMy stomach was in my throat as I called her back, and the phone started ringing. She picked up almost immediately.\n\n\"Heya, Zoe...you called back...\" she said in a knowing tone, as if she instinctively understood the argument I'd just been having with myself. \n\nI laughed nervously, \"Well...yes...I promised. And to be honest...it was really nice that you called the next day...instead of, I don't know, sometime next week. Or not at all.\"\n\n\"I don't play games.\"\n\n\"I can tell,\" I let out a little giggle, already feeling my nervousness subside a bit. \n\n\"So. In the name of not playing games,\" Claire started, \"I want to see you again. Soon. I'm making dinner tonight, and I'd much rather cook for two...\"\n\nOnce again, my heart was racing. It really sounded lovely, \"I...Claire...this sounds great but...\"\n\n\"...but, you're worried about things going too quickly, and you're scared because you always assumed you were straight.\"\n\n\"...Right.\" I said, feeling, not for the first time, like she completely had my number. \n\n\"OK, so here's what we'll do,\" she said, matter of factly, \"let's have a lovely dinner. We'll enjoy each other's company. Have a relaxing evening in. And we can talk about these feelings, in depth, with no expectations.\"\n\n\"N-no expectations?\"\n\n\"Yes, no expectations. Of course if you want to make out again...\" images of kissing her immediately flashed through my mind, remembering the feeling of her soft lips and soft body pressed up against mine, \"that's perfectly fine by me...but I'm also patient, if that's as far as you want to go. For now.\"\n\n\"O-kay\" I said nervously, wondering how long she'd tolerate just making out until she wanted more. If my experience with guys was any indication, it wasn't long. \n\n\"Great, see you at my place at 7! I'll text you the address!\" She hung up, not even taking a moment to acknowledge my awkwardness, which was probably for the best. \n\nThe hours seemed to drag by. I was equal parts nervous and excited. Scared and aroused. Uncomfortable, yet, curious. \n\nI tried to distract myself. Netflix. Reading. I even thought about masturbating, but the memory of the explosive orgasm-and all the intense feelings it caused-made me want to abstain. Still, I was definitely aroused. I wondered what I was capable of in the heat of the moment? I wondered, more than a bit naively, how two women even had sex? \n\nI turned to Google, searching for dating advice for \"first time dating a woman.\" I quickly found myself absorbed in stories, many similar to mine, from women who considered themselves straight until meeting someone special. \n\nSuddenly, the day that had been dragging by was now zooming along. I closed my laptop, and rushed off to the shower. This part, preparing for a date, at least felt familiar. I showered, shaved my legs, pausing briefly to consider whether I needed any \"additional trimming,\" before deciding against it. No. NO. I wasn't...she wasn't...WE weren't going there. Not tonight. I got out of the shower and wrapped myself in a white towel. \n\nWhat to wear? \n\nAlways a dilemma, and unlike last night, I needed to consider my underwear. I mean. If she wasn't going to see \"down there,\" then I shouldn't worry about panties. Right? But what if she does? I mean, what if...I froze for a moment, trying to push these thoughts out of my head. No, we wouldn't. But. Maybe something nice to be safe? Safe for what, Zoe? Again, my subconsciousness was making my mind go places I wasn't ready for it to go. Regardless, I picked a nice, but not super-sexy, matching light blue satin set of bra and panties. \n\nI briefly thought about a dress, but no, I didn't want to look too sexy. I picked a loose, button up blouse, and some jeans. I put my contacts in, let my hair down, finished up my makeup, and looked at myself in the mirror, breathing deeply several times. \"OK, this is weird\" I said with a nervous laugh, \"but...let's enjoy the evening. It's just a date. You've been on a million of these.\" With guys, my mind immediately retorted back. \n\nI took a deep breath and headed out the door. Nerves mixed with excitement, each seeming to build off each other as I drove. I did want to see her. Last night was incredible. My face was literally still sore from laughing so much. I thought again, for the millionth time since last night, about that kiss. It was so powerful. Passionate. Soft. New. Exciting. But there was something more. She was so confident. In control. \n\nAnd she made me weak.\n\nThat realization caused me to sharply inhale. Was this about more than \"just\" a newfound sexual attraction to women? (As if I'd even had enough time to process that. I hadn't!) Was this tapping into a deeper, darker desire to submit? Another shiver went down my spine. The reaction was so severe that I nearly turned around. But no, I promised. And deep down, I knew I was too curious to turn back now. And even deeper down, I knew I wanted...something. Something that I couldn't even express. \n\nBy the time I pulled up to her apartment, my heart was racing. I was an absolute bundle of nerves. \n\nClaire answered the door wearing a red and black plaid skirt, like from a school girl uniform, and a white tank top. Thankfully she was wearing a bra underneath. Otherwise I think I would've been distracted. Well, more distracted. \n\nShe hugged me and welcomed me in. I braced myself for another kiss, but I just got a peck on the cheek. It was another moment of emotional whiplash, realizing that I wasn't so much bracing for a kiss as actively wanting it. And moreover, she left me wanting. \n\nClaire gave me a brief tour around the one-bedroom flat. It was a cozy, stylish place. She had a few paintings hanging on the walls \"from local artists,\" and a record player playing, \"London Calling...\" I read out, looking at the LP on display.\n\n\"Yeah, the Clash are my favorite...\" she said warmly, \"I can change it if you want?\"\n\nI listened for a few seconds. They were one of those many bands that I'd heard of, but never heard. \"N-no, it's lovely...they're lovely. I mean, good.\" I stumbled over my words. \"Lovely\" probably isn't the way to describe punk rock icons, but Claire just let out a little laugh and continued on. \n\nShe showed me to the kitchen table and poured some red wine. \"Dinner will be ready soon,\" she said with a smile. A moment later she served this out-of-this-world delicious spaghetti and meatballs, freshly made bread, and salad. \n\nIt was simple, but so good! \"Whenever I make pasta sauce, it always tastes like nothing...this is...wow, incredible!\" \n\nUsually it was me who got embarrassed, but I managed to get a slight blush out of her. \"Thanks, it's a family recipe. I love to cook.\" \n\nMy initial nerves subsided as we ate, talked, laughed, and shared a few intense gazes into each other's eyes. Of course, the wine helped as well. She cleared the plates and then took my hand, \"Come, let's move to the couch.\" \n\nNaturally I followed, grabbing my glass of wine and sitting down next to her. She took my glass of wine from my hand, set it on the coffee table, and leaned in for a kiss. I accepted it, eagerly even, but she could still sense me holding back. \n\n\"You're nervous,\" she observed. I simply nodded. \"Because this isn't just a kiss, it represents more.\" Again, I nodded. She understood. Completely. \"...And...I bet you're also nervous...about what comes next...\" \n\nMy face must have gone white again. I didn't even nod. She held my hand, her green eyes looking deeply and sympathetically into mine. \"It's OK,\" Claire explained, \"I'm not going to pressure you to do anything...\" \n\nAnd then a funny and slightly wicked look came over her face. \"I have an idea...\"\n\n\"Uh-oh...\"\n\n\"No, it'll be fun!\" She moved away from me, leaning back against the arm rest, spreading her legs, one running along the back of the couch, the other over the side, with her foot touching the floor. She patted the couch cushion in front of her, \"Come here.\" \n\n\"Umm...you're surely not suggesting...?\" \n\nClaire rolled her eyes. \"Come on, I'm not just going to be like 'OK, eat my pussy!' I mean, come sit here, and lean back into me. And bring your phone.\"\n\nI had no idea what she was up to, but I was also curious to see where this was going. I sat between her legs, and leaned back into her. I was suddenly reminded how alien this was to me, but not in a bad way. To be honest, feeling her soft skin and supple curves pressed into mine was exhilarating in a way I'd never imagined. It was immediately very intimate and comforting, but that wasn't her ultimate goal. \n\n\"Great,\" she said, one hand gently stroking my hair, the other running a finger up and down my arm, \"Now take out your phone and open Tinder. I want to see your matches.\"\n\n\"Really?\"\n\n\"Yes, really. I want you to tell me why you swiped right on each of them...what you liked about these women...\"\n\nIt was a curious request, and I felt a little awkward checking out these other women I had \"liked,\" but I went through with it. \n\nI started down the list, opening up each profile in turn. \n\n\"Well, Anna here...I just thought she was attractive.\" \n\n\"What did you like most about her?\" Claire asked, her hands continued caressing me. One hand moved onto my upper thigh, the other resting over my stomach, holding me close. \n\n\"She has lovely eyes...and full lips...\" \n\n\"Mmm...she does...look at those eyes. Can you imagine her looking at you, eyes locked on yours as she leans in for a kiss...and those lips...focus on those lips...look how soft...kissable they are. I bet they'd feel amazing on your skin...\"\n\nClaire surely noticed the goosebumps down my arm as she whispered in my ear, her touches seemed to intensify as they gradually drifted toward the inside of my thigh. \n\nNervously, I went to the next profile.\n\n\"Umm...I thought this one, Susan, had a funny profile picture.\" I held it up, showing a girl who had snapped a photo mid-air in a sitting pose, making it look like she was a levitating, meditating monk or something. \n\n\"Yeah, she does seem fun...but you wouldn't swipe right if she were fun but unattractive, right?\"\n\n\"I...I suppose not.\"\n\n\"So,\" Claire paused for dramatic effect, \"what did you like about her?\" \n\n\"She has a nice smile\"\n\n\"...and...? What about her body, what do you like about her body?\"\n\nI squirmed in discomfort, \"I...I mean, I didn't really think about it...\"\n\n\"Think about it now, and then tell me,\" Claire said assertively, without being aggressive. Her hands continued teasing me. Her hand on my stomach was drifting north, gently up and over the curve of my breasts and up to my collar bone. She then started playing with the top button of the blouse, not unbuttoning it yet, but teasing. Lower down, her fingers now dangerously close to my pussy. I squirmed under her touch, and she teased me by pulling away, only to rub even closer a moment later. \n\n\"I...I think she has nice breasts...\" I say, feeling a bit dumb at saying something so basic. \n\n\"Mmm...she does...\" Claire then unbuttoned my top button of my blouse, followed quickly by the second, \"I like breasts too...\" the then giggled as she peaked down my now impressive cleavage, \"and you don't have to hide yours under such loose, baggy tops..\" \n\nI blushed, feeling exposed and more turned on than I would care to admit. Her fingers continued to tease delightfully, now over the soft, exposed skin of the top of my breasts. \n\n\"You see Zoe,\" she continued, \"I'm challenging you to confront your subconscious desires.\" She unbuttoned a third and fourth button, now fully exposing my light satin blue bra supporting my 36c breasts. \"You must have been attracted to these girls on some level...\" her fingers traced a line along the top of my bra cup, before dipping one finger under to make contact with what was now a very hard nipple. \"Yes, you must have been attracted to these women...just like you're attracted to me. And you are attracted to me, aren't you?\"\n\n\"Y-yes...\" I gasped. If I thought I was in her power last night, it was nothing compared to this. I was completely overwhelmed. She was in control and I was just along for the ride. \n\nShe then slipped her whole hand under the cup of the bra, gently squeezing my breast and then teasing and pinching my nipple. Her other hand finally reached my pussy, teasing me through my jeans. I almost melted right there, but then she pulled away, back to stroking along my inner thigh. \n\n\"Show me the next one.\"\n\nThe next profile was Lena, a pale girl with curly red hair. \"I don't know, I guess I liked her red hair...\" I moaned as she continued teasing my breasts. Admittedly, it was getting pretty difficult to concentrate on her little game. \n\n\"Hmm...you like girls with humor and unique hair, huh?\" she laughed, whispering in my ear, referring of course to her amazing neon hair. \"Of course, it's only natural...\" I felt her unbutton and unzip my jeans, exposing my matching panties to her, \"...to wonder if she's a natural redhead...\"\n\nI felt her fingers move down, teasing the top of my mound through my panties, slowly going lower. \n\n\"Is this OK?\" she whispered. \n\nI couldn't say yes. But I also couldn't say no. Instead, all that escaped my lips was a soft moan. \n\n\"No, I need to hear you say it. Tell me you want me to keep going.\" \n\nI whimpered under her touch, my hips now rocking and rising to meet her touches. But she held firm. \n\n\"I...it feels really good.\" Is all I can manage.\n\n\"And you want me to continue...\" her fingers moved a little lower, over my panties, expertly brushing over my clit, \"say it.\" \n\n\"I...yes, please...please continue...\" \n\nI dropped the phone and closed my eyes as I felt her spring into action. In a flash her fingers were in my panties. Rubbing my clit. Squeezing my breasts. Kissing my neck. \n\n\"Yes, that's it...that's it Zoe, just give in to the pleasure.\" \n\nI bucked hard into her fingers, my hands gasping her legs as I held on for dear life, and then my whole body exploded in pleasure. I'd never come that fast in my life. Not even with my trusty vibrator. \n\nShe gently rubbed my clit as I came down. With her other hand she took my chin, turning me to face her, kissing me passionately. I was only too ready to return her kisses. \n\n\"Oh my god...\" I said after a few minutes, \"I've...I've never...so quickly.\"\n\nShe just laughed. It was that same knowing laugh I heard last night. She knew she had me wrapped around her finger. Literally in this very instance. \n\n\"Let's go back to the bedroom, shall we?\" She guided me back to her bedroom, stopping me right before we entered, looking me in the eyes, \"I know you're probably nervous. What scares you the most about having sex with a woman?\"\n\nI almost said, \"the phrase 'having sex with a woman,' for one.\" But I knew the real answer. \"I...I mean I'm not scared. I just, I don't think I can umm...\" I thought of a polite way of saying it, but came up short, \"I don't think I can eat your pussy.\" \n\nFor a brief moment, I was proud that I advocated for myself. I just wasn't comfortable. Not yet. Maybe not ever. Yes, she would understand, I thought. \n\nShe leaned into me, kissing me again, \"I'm very proud of you for saying that, I know it must be hard. But by the end of the night, you'll be begging to eat my pussy.\" \n\nWithout saying a word she entered her bedroom. She didn't have to look back. \n\nI followed her in, almost floating through the air. She stopped just before reaching her bed, turning around to face me. We were so close. She leaned in, whispering \"sit down on the edge of the bed,\" before nibbling on my ear. \n\nI obeyed. Looking up at her, I watched as she slowly stripped for me. First the tank top, then she unclasped her bra. She took my hands, placing them on her soft skin and tight stomach, guiding them up and under the cups of her bra. I took her b-cup breasts in my hands, feeling an erotic surge flow through me as she let the bra straps drop off her shoulders and down her ams. I was now the one holding her breasts in place. \n\nShe looked down at me, and I watched myself fondle her breasts, mesmerized. \"They're nice...\" was all I could say. Without a word, she took my head, guiding it to her breast. Instinctively, I knew she wanted me to suck on her nipple, and I got a subtle thrill when she moaned from my touches, licks, and kisses. \n\nI watched as she unzipped her skirt, letting it fall away, revealing her lovely black lace, semi-transparent panties. \n\nClaire turned her attention on me, taking off my blouse and bra. She eased my jeans down my legs, and then pushed me back on the bed, crawling on top of me, both of us down to just our panties. My heart nearly lept out of my chest as I felt her grind her pussy against mine. It was the most erotic thing I'd ever felt. \n\n\"You liked that?\" She said teasingly, looking at me in the eyes, holding me tight, and grinding rhythmically into me. \"It feels even better without panties...\" \n\nAll I could do was moan into her kisses. My hands were nervously exploring her body, just absorbed in everything to do with this new experience. She broke the kiss with me, slowly sliding down my body, kissing my neck, collarbone, breasts, and continuing lower. \n\n\"Are you ready for the best orgasm of your life?\" Even in the darkness of her bedroom, I still felt those piercing green eyes burning into my soul. I simply nodded and she continued south. Each kiss sent shivers down my spine. By the time she got to the waistband of my panties, I was overwhelmed by desire. She slowly inched down my panties, making sure to kiss each bit of newly exposed skin. \n\nI briefly remembered my promise to myself, that I wouldn't let her get this far. But now, in this moment, I regretted not shaving, or at least trimming. Though, as her eager kisses continued, she hardly seemed to mind. My legs spread easily for her, as she completely removed my panties and began kissing and licking and teasing my lips and clit. She slid two fingers into my pussy, easily finding my g spot and massaging in rhythm with her perfect flicks of her tongue. \n\nThe effects were as intense as they were immediate. She gave me no time or space to breath, to regret, to second-guess. It was just pure pleasure. Constant. Overwhelming. Pleasure. I thought she'd relent after my first orgasm, but she just kept going. \n\nAfter my second, she slowed down a little, expertly teasing me, keeping me right on the edge. Every time I thought I'd have another orgasm, she slowed down. My mind was only focused on the pleasure.",
        "\"Ohhh...please...\" I whimpered and moaned and begged for yet another release. \n\n\"Mmmm,\" Claire cooed, \"that sounds like begging to me...\" My heart skipped a beat, remembering what she said earlier. \"What would you do to get that release...hmmm?\"\n\nShe continued licking and fingering me, but now moved her body around so that her naked pussy was now inches from my face. I could smell her arousal. I could see every soft fold in perfect detail. Claire upped the tempo once again, getting me right to the edge as I focused on her wet pussy. \n\nAgain, she backed away at the last moment, \"Go on...you know what you have to do...and deep down, I think you're only scared because you know you'll love it...\"\n\nFrustrated and unbelievably horny, I leaned forward, only for her to pull away. \n\n\"Uh-uhhh\" she corrected me, \"I need you to beg for the honor of tasting me...I need you to say it and mean it.\"\n\n\"I...\" I moaned again as she continued her tease, \"p-please...please let me...\"\n\n\"Let you what?\" She lowered her pussy closer to my lips. She was so close I could almost taste her. \n\n\"Eat-eat your pussy.\" I said, voice trembling.\n\n\"Good,\" she quickly lowered her lips to mine before pulling away, \"now say it all together...beg...'please Claire, please let me eat your pussy!'\"\n\n\"PLEASE,\" I cried out, \"Please Claire, please let me eat your pussy!\"\n\nI never saw her grin, but I knew instinctively that it was there. She conquered this formerly straight girl, and now she was getting her full rewards. I simply moaned as I felt her lips press into mine, noting, somewhat academically that she actually tasted really good. And that this was actually turning me on. \n\nIt wasn't long before we were both coming together.\n\nThe rest of the night was a blur. Moments of rest and sleep interrupted by more kissing, more touching, more orgasms. And she kept promising me more to come. Eventually, I curled up in her arms, completely spent. \n\nMy last thought, before drifting off to dreamland, was thinking about how surprisingly good I felt. Comfortable. Safe. Completely satisfied. All things I had sought for so long. There was still a great deal to unpack, emotionally, but that could wait for another day."
    ],
    "authorname": "Zoe_Curious",
    "tags": [
        "first time",
        "first time lesbian",
        "romance",
        "gentle domination",
        "submission",
        "oral sex",
        "fingering",
        "seduction"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/swipe-right-for-something-new-pt-02"
}