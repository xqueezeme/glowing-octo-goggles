{
    "title": "It's All The Ex's Fault Ch. 12",
    "pages": [
        " It's all the Ex's fault\n\nIt was intentionally written without names...\n\nLEGALESE: Don't read this if you are underage, if it is illegal in your area, if it is offensive to you, or if you cannot distinguish fiction from reality. This is a work of fiction. All characters are 18 years of age or older.\n\nCopyright (c) 2013 by Acup\n\n...I was in heaven. Waking up to my beautiful redhead in the morning sun... I couldn't help myself, I had to run my fingers through her curls.\n\nShe opened her eyes smiling at me, \"...yes it's still red...\"\n\n\"It sure is..\" I heard from behind me. I rolled on my back, putting an arm around the blond. \"And as much as I'd like to stay in bed, we have an early start. Or more to the point, you do.\" She reached over me to give my girl a little poke on her nipple. \"So get your ass up.\"\n\nThen she rolled out of bed...dragging all the covers with her and giggling back at us still curled up! She scampered off to the bathroom leaving us naked and NO covers, the blond not far behind her.\n\nAll I could do was chuckle and grab my shorts. They came out bumping into each other and giggling as I was going in. I came out to more giggling and them glancing over at me and whispering to each other.\n\n\"What?\" I asked.\n\nThey looked at each other, \"NOTHING...\" They giggled again, I just shook my head and called down to room service to get a large fruit bowl for them and a biscuits and gravy breakfast for me to go. The blond was going to stay behind a bit and take our stuff down to the van so we could get on the road when the competition was over.\n\nShe headed for the convention center while I picked up our breakfast, and even managed to snag some string along the way. Going behind the stage was a bit of a shock, more than two thirds of the booths were gone. I mean it shouldn't have surprised me if I had thought about it. With all the eliminations the crews were just getting a head start on the tear down, but it made me realize how many girls went home with nothing to show for it but some pictures.\n\nI came around the corner to see my girl, topless, and one of the event staff facing off, and passed the same staff member fast walking in a huff back up front while my girl was grinning. I looked back over my shoulder quick and then back to her. \"What was that all about?\"\n\nMy girl kicked her head back laughing, \"She didn't like my red hair...\"\n\n\"Huh?\"\n\n\"Yea, she assumed I would keep the brunette, and didn't like being reminded she only told me to pick a color, and in front of eight witnesses.\" I started setting out her fruit plate and smiling at that. \"OH YUMMY...\" She grabbed a few pieces and began munching down.\n\n\"She looked awful upset for just not liking your hair color.\"\n\n\"No she was pretty smug and said, 'what are you a lawyer or something?' she got a bit flabbergasted when I told her almost.\" She popped a few more pieces of fruit in her mouth, grinning and chewing. \"When I told her I graduate in a few weeks, and that being fifth in my class I should have no problem passing the bar exam.\" Now it was my turn to about choke on my drink...FIFTH in her class...\n\n\"And if I didn't manage to find a firm right away, I could always fill my time looking into the competition to make sure they were following all their bylaws regarding proper record keeping of judges' comments and voting like they are supposed to.\"\n\nI just looked at her. I knew she was smart, but fifth in her class and a knockout to boot...\"Remind me never to cross you woman.\" I took her hand as she began to reach for another piece of fruit and kissed it, getting some 'ooohhhs' from the booth next door.\n\nOur blond showed up a few minutes later with the cooler in tow, plopped down and finished MY breakfast off. \"What? I'm done with the competition...\" Well since she was in tank top and shorts instead of a bikini I should have thought of that.\n\nThe bell sounded and everyone started oiling up. The blond and I took our time, making sure she was all ready, but I stopped her before she put her top on, and held up the string. \"For luck again?\"\n\n\"Hell yes!\" and put her hands behind her head and thrust her tits out to me. I cut the thread into two short pieces and tied nice little bows on each nipple, then gave each one a quick kiss before she pulled her top up. I grabbed both cameras and we walked toward the stage, and just because the staff member that gave my girl a bad time was standing there, I waited until we got close to give her a quick kiss. \"I'll be out front with the video camera babe, wouldn't want to miss any of this to show back home.\" The staff member looked like her eyes were going to come out of their sockets.\n\nI got out front about the time the first of her group were coming across the stage. This time they were spending a bit more time on stage, almost twice as many poses and holding each of them longer. I was snapping pictures of her while the video camera recorded everything. But unlike the previous time yesterday morning I left the camera running to capture her whole group, just in case they tried something. One of the judges even glared at me when I turned to get pictures of all of them sitting at their table, and made sure I zoomed in for a nice face shot of all five women.\n\nOnly once the entire group, and probably a few of the next, came across did I shut the video camera down. I came back to a nervous gaggle of women. Some pacing like they weren't sure how they did, others all pompous like they had it in the bag, a few were just face down in their arms waiting.\n\nThat's how I found my girl. \"Hey babe,\" Her head came up to smile at me. \"Since we're down to the end, how about we go over to the practice stage and let me get some nice close ups while you still have your bikini on?\"\n\nNow she was grinning ear to ear, \"You just want to get some pictures with my red hair.\"\n\nI had to smile back. \"Of course, need some to go with all the ones I shot last night in your dress.\"\n\nShe just shook her head at me and took my hand. We got over to the practice area, and I had to get in close and shoot up to not catch myself in the mirrors. It was nice to look up at her instead of across the stage through the zoom. Getting nice profiles of her tits and nipples, a flash of light between her thighs highlighting her camel toe, and the bright lights highlighting her red hair was perfect!\n\nShe had run through her quick routine, and was about to step down. \"Hey babe?\"\n\n\"Yea?\"\n\n\"I'd really like a set without the bikini...\"\n\nShe just laughed, \"Typical guy wanting to get a girl naked...\" just to be ornery she tossed her top at me when she took it off. Since I was shooting her taking it off it hung on the lens, so I just kept shooting as she stripped, then did a few poses. Red hair, red landing strip, white bows on her nipples...and her pussy lips glistening in the light. I finished and lowered the camera, she looked at me as I made like I was going to lick her pussy.\n\nI tossed her the bottoms, \"I'm going to hold you to that mister.\" As she slid them up and got them nice and snug against her pussy. She stepped down to me with an exaggerated hip swing, took her top from around the camera lens, and whispered to me, \"The only thing missing is my plug..\"\n\nI turned to see one of the girlfriends herd standing there rubbing her hands together. She looked back and forth between us, finally settling on me. \"Would you take a few of me?\"\n\nI looked over to my girl, who shrugged her shoulders. \"Go ahead...\"\n\n\"Thanks,\" she told my girl. She took a few steps up to the platform, then stopped and turned to my girl. \"You looked absolutely stunning last night...\" then she took her last steps up to the platform and struck a pose.\n\nMy girl turned to me, gave me a quick peck and nodded to the woman up on the platform, then turned and headed back to our booth.\n\nI kneeled down and began snapping pictures, while she went through her poses, when she finished with her routine, she stopped and reached behind her neck to her bikini top tie. She undid it and began to pull it forward. \"You mind?\" as she lowered the top and flexed her chest making her tits jump a bit.\n\nI smiled and just kept taking pictures. She wasn't quite as muscle bound as the girlfriend was. More than I liked, but still not too bad. Hell, her clit even managed to stay in her pussy! She was enjoying the experience when one of the staff made the rounds and tossed the girl on the platform a blue chip. The girl caught it and collapsed onto her knees holding the chip, then grabbed her bikini and scurried off down the isle.\n\nI wandered back to our booth, to find my girl also holding one of the chips, sitting in the chair staring at it. \"OK, fess up. What's with the blue chip?\"\n\nShe looked up at me, \"Huh?... Oh yea. ...top ten.\"\n\nI sat the camera down, and said over my shoulder. \"Well that's good, so what's next?\"\n\n\"I'm...not sure.\"\n\nI turned to look at her, leaning against the table, \"...not sure?...\"\n\nShe looked up at me, and began grinning as she said it. \"I...I haven't gotten this far before.\"\n\nI walked to her and took her hands, \"Well then we better do this up right then.\" The blond stood her up, the two of them smiling and giggling at each other, while she stripped her black bikini off. I grabbed her green bikini that highlighted her red hair. When I turned around I had to stop and stare. There was my girl being oiled down by the blond, lightly tanned hands going up and down and around my girls slightly darker body. Every inch of her glistening in the light...\n\nShe was watching me watching her being oiled by the blond. When she was about finished I stepped to her, holding her bikini open for her to step into. Sliding it up her legs on my thumbs while caressing her thighs with my hands, stopping just short of her landing strip. I kissed her mound on either side of it, then dipping my tongue between her lips making her gasp as I pulled the bottoms up snug on her lips.\n\nShe was looking down at me smiling when I looked up to her. I stood up and slid the neck strap over her head giving her a quick peck, and then each nipple as I brought her top down before handing the bottom straps back to the blond to tie in place. Dropping my hands to her hips to pull her closer for a soft kiss, \"No matter what, you're number one in my book...\"\n\nI grabbed the cameras, and we headed for the stage. I gave her one last quick peck and went out front. The blond was standing there waiting on me. We were set up quickly, and the contestants began making their way across.\n\nThe first group, looking like some of the beginners, lined up. They started announcing the winners of that group, starting with number ten and working their way up to number one, the top three getting small trophies and crowns amid all the jumping and screaming. They walked off, and the next group came up to do the same, my girl standing proud in the middle of the group.\n\nI think I was more nervous than my girl as they started naming off the girls, but she almost came unglued when they named off number four and she was still up there. But when they called out number three and it wasn't her she and the other girl looked like they were going to strangle each other.\n\nMy girl took number two, getting her crown and trophy. I was about to pick things up, when the blond told me to stay put, it wasn't over. The next group was some pretty muscled women, and then the hulk group, as I called them. The girlfriend came in ninth, and the one I took pictures of came in sixth ahead of her gang leader. That was just karma...\n\nI started to pack up again, but was stopped by the blond, and I discovered what she was making me wait for. The top three of each group were back for the overall standings. The winners of the first and last groups, those getting started and the piles of muscle took the six through twelfth positions mixed. The two middle groups that looked more like women the top six, my girl taking fourth, and the winner of her group taking the overall winner spot.\n\nAfter the requisite hugging and crying amongst the girls I packed the cameras back to our booth, where we did our own hugging. \"Can you believe I got second place, and fourth overall?\" she managed to say as she was strangling me...\n\nI hugged her as best I could, and when she released me to go for our blond I could finally reply. \"I think you should have gotten first all around, but hey...\"\n\nShe turned back to me all giddy and giggling, I was strangled and lifted off my feet while she tried to suck the life out of me. \n\n\"Hey you two, we don't have a room to go back to, so settle down...\"\n\nMy girl turned and gave her a raspberry, before giving me another quick kiss, then stepped back and stripped off her bikini. The blond began helping her wipe down a bit before she headed off to the showers. Since we were up front, I wasn't going to be able to do her back, but the blond stripped down and threw her top and skirt at me before running after my girl.\n\nI watched several women headed to the showers, but since it was mainly the last winners and a few extras it was a small parade. I had to smile at the diversity of women in the final group. Not only the just getting started to the muscle bags, but early twenties to mid-forties, AAA to DD. The funny part was most of them had trained their nipples into hiding.\n\nNow ladies, face it, with all the padding you wear now days your nipples have turned into freckles for the most part. In your grandmothers era with bullet bras and such they stood out nice and proud. But in today's world, only the women that don't really need a bra or those that aren't ashamed to be a woman with nipples even have them. Everything else has been trained out of your DNA with padded and formed bras.\n\nSociety and the politically correct have managed to convince too many women that it is a bad thing to have someone admire your figure. That letting some leg or cleavage show or a nipple stand out makes you a slut instead of the gorgeous vision you are. Ever notice it's the people you wouldn't look twice at are the ones doing this protesting...\n\nThe vision of my girl and the blond walking back, tits...AND FIRM PROUD NIPPLES... bouncing their way back to me brought me out of my mental rant. They saw me watching them, and my girl shook her shoulders and tits at me, followed by the blond. I kicked back in my chair and cupped my crotch like I couldn't hold it and groaned making them both laugh.\n\nI finished packing the cameras back in the case and generally picked up while they were drying off chatting to each other. When I turned around I about fell on the floor, and had to fall into the chair, much to their amusement.\n\nTwo naked women...painting...their bikini tops on! My girl a bright green and the blond an equally bright red. They were painting narrow tops, from just above their tits to most of the way under that were barely wide enough to cover their nipples. From the looks of things they were putting the second coat on.\n\n\"You know I think he likes them...\"\n\n\"How can you tell?\"\n\n\"The hard cock in his shorts and the same look when he sees the plug in my ass...\"\n\n\"Oh, I thought that was the look he gave when I was working him up through my cervix...\"\n\n\"You know you might be right, we'll have to test it later...\" All I could do was shake my head and groan while they giggled. They slipped into their shoes and pulled skirts up, taking long enough for it to dry, then slipped very light white mesh tops on, almost making the painted on bikini top stand out even more. Giving me a shoulder shake, and making their nipples catch and come through the mesh, they each grabbed their little bags, leaving me with the camera bag and the cooler. Good thing it was on rollers!\n\nWhile we got on the road pretty quickly, it didn't last long with my girl only having had some fruit for breakfast. A quick stop at a drive through for two burgers, a super-size fry, and a super-size chocolate shake to top it off and we were back on the road. The blond and I got a super-size fry to split...\n\nI was having a hard time concentrating on the road with the girls in their mesh tops knowing the bikinis were painted on. They caught me looking several times when my girl pealed her mesh top off and threw it at me. I ducked and it landed on the dash, the blond followed suit and now they were just in their skirts and shoes, nipples standing up high and proud in the paint.\n\nOnce she finished her feast she threw a pillow against the console and laid back on it and the cooler, those covered tits in just the right spot to put a hand on, which both the blond and I did!\n\nI was running my hand around and over her nipple feeling my fingers catch a bit, \"That's a different kind of paint...\"\n\nShe giggled, \"Not paint...liquid latex.\" I was trying to look at her chest and drive at the same time. \"It's called bikini in a bottle. Won't wash off, but just peals loose if you grab an edge.\" She rolled the tip on her chest and pulled the point down a bit, making it look like she had left her top untied.\n\n\"Now that could be a LOT of fun...\" I stroked the top where she had just pulled it down, then let my fingers drag back down to her nipple and play a bit.\n\nIt wasn't too much longer and she was asleep on the console. Between the food, movement on the road, and the adrenaline wearing off she was sound asleep. We let her lay there a bit while we fondled her and chatted.\n\nThe sun was setting, the orange glow across her cheeks, I brushed a few stray strands of hair from her face and tucked them behind her ear. I cupped her chin and she snuggled against it in her sleep.\n\n\"So where do you two go from here...\"\n\n\"Hmmmmm...\" \n\n\"The two of you, she graduates in a few weeks...\"\n\n\"Yea?\"\n\n\"So what's next?\"\n\n\"In a perfect world?\"\n\n\"Im Hmmm..\"\n\n\"Kidnap her and haul her off to our own private island and ravage her for the next hundred years...\" that made her laugh, \"In the real world, just like I told her girlfriend. I'll do my best to keep her with me, but I won't force her to do anything...\"\n\n\"Even if you loose her?\"\n\n\"If she doesn't want to stay she was never mine in the first place...\"\n\n\"But?\"\n\n\"But... I really hope it does...it's like there is a hole in my life when she's not around. \"Does that make sense?\"\n\n\"Yea...\" she said softly.\n\nWe drove on for a bit in silence, both of us touching my girl on the console. We were coming up on a truck stop. \"Time to start getting back on my routine...I need to grab a bite and hit the sack.\" She said pointing to the billboard for the truck stop.\n\n\"Go in or drive through?\"\n\n\"Drive through is fine. You'll probably want to get gas while we're here. It gets a bit sparse for the next few hours.\"\n\nWe hit the drive through, getting a dirty look from the lady in the window when she saw my girl still laid back with her nipples in the air...LOL I pulled to the pumps, grabbed my sweats since it was getting a bit cool. My girl woke up when the cold blast opening my door hit. They were chatting a bit and kept glancing my way while I was filling up.\n\nThe sun was down and it was almost dark when I pulled away from the pumps. \"Pull off to the side for a minute.\" The blond asked as I approached the edge of the lot. Once I stopped she turned sideways in the seat, then pulled her skirt up and over her head, leaving her legs spread a bit. Then watching me she began to peal her top down. Getting the top point loose wiggling her tits a bit as she did, then slowly pulling it down in one piece. She handed me the one she took off, holding it flat on her palm, the perfect outline of her nipple standing up in the latex.\n\nI could only stare as she did the other, then took the first from me and laid them on the edge of the dash, the nipples standing up in perfect profile. While I was staring at her latex nipples on the dash I heard a sloshing sound. I turned to see her sliding her two middle fingers in and out of her pussy, one foot on the edge of my seat, the other pulled up to spread herself wide. After sliding them in and out several times she kneeled on the passenger seat to bring them to my mouth, giving me plenty of time to lick them clean. Then reached down and got a good grip on my achingly hard cock while she gave me a long deep kiss. She pulled back and looked me in the eye, gave me another quick peck, then crawled in the back over my girl and pulled the covers over her head.",
        "My girl rolled on her side toward me, her hand taking the place of the blonds in my crotch. \"I think she likes you...\"\n\nI looked down at her, running a finger from her cheek to her latex covered nipple. \"What's not to like...\"\n\nShe rolled back onto her back, then brought my fingers to the top of her latex, catching the tip she already pulled loose in my fingers and got me started pulling it down before releasing my fingers. We looked each other in the eye, then she trust her chest out a bit and nodded. I slowly pulled her bright green latex down. Even though they were only covered in a thin layer, it was still erotic seeing them revealed.\n\nAs I laid the first on out on the dash next to the blonds she slid her skirt down and reached up to turn the heat up a notch. I took my time with the second one, stroking her bare nipple with one hand while the other was removing the last of the latex. She was smiling with her eyes closed humming a little. \"Slide your shorts down...I'm thirsty.\"\n\nHELL YES! I slid them down and slid the seat back before she rolled back over and slid my slowly into her mouth until she bumped me against the back of her mouth. Sliding one arm between my legs so she could get a hand around the base of my cock, squeezing and playing while she was sucking and licking, her tits and nipples squeezed against my thigh.\n\nI was having a bit of trouble holding off without being able to play with her. Looking down at my cock disappearing into her while I felt her ands playing with my balls.\n\nShe pulled back a bit and licked me up like an ice cream cone. \"You know how much I wanted to do this today?\" lick lick, \"All those oiled naked and topless women in the hall today.\" lick, suck suck lick, \"Wanting to kneel down in front of you and suck you down and get you to blast all over my tits..\" lick DEEEEP suck lick \"Servicing my man so he can mark me with his hot cum all over my tits...\"\n\n\"AHHHHHHHH...\" I was getting close, and with her squeezing my balls she knew it.\n\n\"Oh yea, that big load backing up from all morning shooting all over my tits...\"\n\n\"I'm getting...\"\n\n\"And if it's a big load I could stand tit to tit with the blond and we could smear your load all over each other... before having to lick it off each other...\"\n\n\"I'M CUMMINGGGGG...\" the thought of her rubbing my cum between the two of them and then taking their time licking it off in a crowd of naked women was more than I could take. I put my hand on the top of her head and just started letting loose. Feeling her lips around the head of my cock sucking while her tongue was circling, fondling my balls as they emptied into her.\n\nJust as I was ready to pass out from sensory overload she released me cock from her lips, but kept her hand slowly stroking me. She rolled over on her back with a smile, opened her mouth a bit to show me her prize, then swallowed it down. She was still stroking me slowly as she used her free hand to wipe the dribbles from the corner of her mouth and lick them from her hand.\n\nShe drew the last of my cum up my cock, making it ooze out onto her hand, then brought it to her mouth as well. \"That would have been a lot of fun to do in the middle of the hall...\"\n\nI shook my head and slid the seat forward while I reached for the ignition. We pulled out into the night, my hand cupping her cheek with my forearm resting on her tit. Her arm over my leg playing with my softening cock.\n\n\"We probably would have gotten arrested, and you thrown out of the competition...\"\n\n\"... but it still would have been fun. Run off all those women chasing you...\"\n\n\"What women?\"\n\nShe looked up at me, really looking at me, \"All those women coming back and forth in front of our booth...\" I just shrugged.. \"Bouncing their tits and wiggling their asses, making sure they were stripping down as they came by us?...\"\n\n\"Well I watched the women at the shower the first day, but...\"\n\n\"And some of those coming back for a few 'extra' massages?\"\n\nI grinned down at her, \"I'm a guy, I'll look and play as much as I'm allowed, but I'm going home with my girl.\"\n\nShe gave my cock a firm squeeze, \"Good answer, but what about the blond?\"\n\n\"What about her?\"\n\n\"Would you date her?\"\n\n\"If you weren't in my life...probably/\"\n\nShe stopped stroking me, but kept a firm grip., \"...we could share her...\"\n\nI looked down at her, trying to gage her statement, \"...share...\" I said questioningly.\n\nShe bit her lip, \"Well you didn't mind US sharing YOU the other morning...\"\n\n\"So this isn't the first time you two have gotten together?\"\n\n\"..mayyyyybeeeee... she is a beautiful woman...\"\n\nI ran my thumb over her lips, she bit the tip lightly. \"Well she is the second most beautiful woman I know.\" She sucked my thumb in, and began stroking me again. \"...and she is rather...tasty...\"\n\nHer free hand dropped to her pussy, I could hear her fingers in her pussy behind me. Then she brought them to my lips, letting me clean her juices from my fingers. \"But that's my favorite flavor...\"\n\n\"Find a place to pull over and come to bed...\" she sat up, gave me a quick kiss, then kept on rolling toward the back, giving me a NICE look at her ass and pussy in the mirror lit by the dash lights.\n\nI pulled off on the next dark ramp and over to the entrance ramp shoulder. She was curled up with the blond, tit to tit. I stripped down and slid in behind her. I was going to just snuggle in behind her, and began to slide my still rock hard cock between her thighs when she reached behind me, rotated her hips, and guided me into her dripping pussy.\n\nI slid in as deep as I could from behind her, grabbing her hips and holding her to me, feeling her pussy gripping and releasing my cock. I began sliding in and out of her, feeling ever bit of her strong velvet pussy surrounding my cock. I reached around to get a nice grip on her tit, and found her mashed into the blond, so I just kept on reaching and held the two of them together while fucking my girl.\n\nI held them both tight, sliding my hand down to the blonds ass, getting a nice groan from her, but a bit muffled, so I guess they were having their own fun while I was enjoying myself.\n\nThis was nice, but I wanted some nice deep fucking...I rolled the blond away from her and lifted her leg, allowing me to straddle the other and sink as deep as possible into her. The blond rolled back against my girl, trapping my knee between them. I began sliding in and out of her again as the girls wrapped their arms around each other.\n\nThe three of us in the moonlight, the girls locked in a deep kiss, tit MASHED to tit while I slid in and out of her. Feeling her pussy gripping and releasing me as I drove into her, and ass cheek in each hand, teasing both of their rosebuds with my pinkies. Letting the finger against her ass slip in, enjoying the resulting clamp on my cock, spurring me on.\n\nIf it had been daylight I doubt I would have held out for very long, but in the moonlight and having given her a nice load a few hours ago I was actually able to hold out for a bit. But whatever the blond was doing to my girl was having an effect. As I picked up my pace, the blond did something, and my girl screamed out and clamped down on me hard.\n\nI gave the last push I could and just shot load after load into her not being able to move in her convulsing pussy. I kept going as long as I could, until I collapsed forward on top of both of them, my cock finally slipping free of her pussy. I kissed the blond while lying on my girl, tasting her on her lips. Light little kisses on her nose and earlobe as she turned back to my girl.\n\n\"Kinda hard to sleep with you two fucking each other's brains out...\" That got my girl giggling a bit, then rolling over taking me with her. \"But at least you got me a snack.\" She turned and crawled over my girl and swallowed me down, taking her time coming up off me to get me nice and clean. Then she spread my girl and began cleaning the pussy I had just filled. I could see her head moving in the moonlight, remembering taking in the sight of my girl cleaning the black girl. And from the twitches and whimpers of my girl she was doing a pretty decent job of it.\n\n\"Well now that I'm awake...I think I'll drive for a bit.\" She grabbed a towel and my shirt and crawled back up front. We curled up, going to sleep with thoughts of a bottomless driver made me smile.\n\nI know she didn't drive all night, because I woke with the blond behind me with a nice grip on my cock and my girls nipples in my chest. \"Oh a guy could get used to this...\"\n\nThe girls started to stir, and I got a light kiss from my girl. \"...morning...\"\n\n\"...morning...\" god she's beautiful in the morning sun... and that red hair just glows.\n\nI was pulled from my trance by a hand on my chin, turning my head back to the blond, \"...morning...\" and gave me a nice deep but soft kiss, her tongue hunting for mine. The she pulled herself over me a bit, nipples dragging across my side to get to my girl, giving her an equally nice kiss.\n\nShe settled back still pressed to my side, all of us just inches from each other. \"Since you decided to wake me early last night, you get to drive. We're a little below quarter tank and about an hour from the good truck stop.\" Then squeezed my ass, \"Off you go...\"\n\nI gave my girl a quick peck then pulled the blanket from the blonds side letting the cool air in, giving me a bit of a squeak and a glare as I got out. She pulled the blanket back over both of them as I scooted to the side, then pulled it up over both their heads. From the looks of things I would say they were snuggling in for an interesting morning. I managed to get my sweats on over my aching cock and crawled up front.\n\nAbout an hour later I came on the truck stop she was talking about. I pulled to the pumps and the girls piled out the side door, jeans and one of my dress shirts each, showing LOTS of cleavage and hard nipples in the cool morning air. I pulled to the store after filling and found the girls in the restaurant waiting on me. I no more sat down and our breakfast arrived. Several of the guys at the counter were disappointed they weren't alone...LOL\n\nThe girls chatted about school while we ate. Me? I just enjoyed the juggling nipples from all the hand waiving in the discussion. We got back on the road, the blond reclining against the console this time, and like my girl, a hand on each tit as we went, abet up under my shirt instead of topless like last night.\n\nThrough it all it seems like my place got nominated as a study location for finals being a midway point... I didn't care as long as it kept her close to me...\n\nWe got back into town a little after lunch time, but that was fine by me for a Monday. We dropped the blond off at her apartment, both of us getting nice hugs and kisses. When we got back on the road to my place my girl decided to take up a position on the cooler against the console instead of the passenger seat. She unbuttoned my shirt, flashing me her tits, before buttoning the top button and putting my hand in there on her tit.\n\n\"So was this a good celebration weekend?\"\n\nI cupped her tit and squeezed her nipple, \"Best one I can ever remember...\"\n\nShe slid her arm over my knee and her hand on my crotch, giving me a nice squeeze in return, \"Me too...\"\n\n\"So what do you want to do this afternoon?\"\n\n\"I don't care, as long as we do it together...\"\n\nI looked down at her, \"You sure about that?\"\n\nShe squeezed my cock and held my hand tight against her tit. \"...yea...\" she said quietly.\n\nWe made it back to the apartment without saying much more, just fondling and playing with idle conversation to pass the time. We made it back into the apartment, dropped the bags and cooler inside, threw the perishables in the frig, then just stood there holding each other.\n\nI looked her in the eyes, giving her a quick peck, \"I like having you here with me...\"\n\n\"I like being here with you...\" as she ground her pussy into my cock.\n\nI pulled her to me, but didn't grind back. \"Not just for that...\" Squeezing her ass a little, \"but partially...\" making her laugh a little.\n\n\"Let's go shopping and spend some of my prize money.\"\n\nI pulled back away from her, \"You got prize money?\"\n\n\"Yup, top five get cash prizes. I got $2,500 to spend.\"\n\n\"What about school costs?\"\n\n\"Nope, except for renting my cap and gown ad a few little things, all done with school in a few weeks.\"\n\n\"OK, anything in mind?\"\n\n\"Nope, just shopping...\"\n\n\"Ahhh... female retail therapy...\" that made her snicker. We grabbed light jackets and headed for the mall. It was warm enough we decided to leave them in the van, that and my constantly looking down at her hard nipples standing out in my shirt...\n\nFor an early Monday afternoon the mall was pretty quiet, but we did run into some people we knew...kind of. The older couple from the mall down near her place were walking around showing her off.\n\nStill a short skirt, but stockings with seams, and a silk blouse that wasn't quite as sheer, but showed the pattern of the lace behind it and her hard nipple standing out.\n\nWhile I was checking his woman out her was checking my girl out. Totally different outfits, but showing off none the less. With her in her skin tight jeans snug up into her pussy and my dress shirt with only the top two buttons done up, he was enjoying what he was seeing as her firm tits kept the bottom of the shirt open a bit, moving and swaying with her steps and air flow in the mall.\n\nI looked over at him looking at my girl, \"How do you keep your hands off such a magnificent creature?\"\n\nHe looked back at me, \"I could ask you the same.\"\n\nI slid my arm around my girl and inside the open shirt a bit, \"Not very well I'm afraid.\"\n\nHe followed suit and slid and arm around and cupped her tit a bit before letting his hand drop. Both of the girls rolled their eyes and snickered.\n\n\"Why don't we go get a bite...\" and waived toward the food court.\n\nWe followed them, both of us enjoying the swing of her ass and the split in her skirt.\n\nWe each got something to munch on and then followed them to a table more off to one side. The older woman looked around a bit, then undid all the buttons from her nipple line up, then slid in followed by him. We only got to see cleavage and her lace bra, but sitting beside her he was looking right into her top.\n\nMy girl was a bit dumbfounded for a few seconds. \"WOW!\"\n\nI looked between them both with a grin on their faces, \"You like showing off a bit do you?\" I said to no one in particular.\n\nShe cupped her tits and rolled her nipples through her silk top. \"Makes my pussy and nipples ache and him randy as hell. We can only stay for a few hours and have to go home and fuck like rabbits.\"\n\nMy girl was reaching into her shirt cupping her own tit. Since her back was to the rest of the restaurant, my girl lifted her shirt away, baring her hand cupping her tit. \"I can see how that would get your hormones up.\" they were both looking at her tits, the guy especially. The girls were looking at each other cupping and playing for a bit, but the crowd started to pick up and they had to quit and cover up.\n\nThe older lady had a bit of a glazed look in her eyes. The guy looked at me with a smile. \"Going to have to sit here for a bit. If I touch her she'll scream out in orgasm...and she's quite the screamer...\"\n\nMy girl covered her mouth while she snickered at that.\n\nHe was looking at my girls nipples standing out, \"It's nice to see a new face around showing her figure off, there aren't too many of us out here.\"\n\nWe must have had some unusual looks on our faces from his expression.\n\n\"What? You think we're the only ones that like to show off our women?\" we looked at each other and then back to him. He smiled at us, she was starting to come around. \"Come out Saturday afternoon and we'll introduce you to some of the others that make the rounds.\"\n\nThe lady turned to him slowly, \"Get me out of here and fuck me...\"\n\nHe slid out, letting her out next to us. I could smell her pussy and see a dark patch on the back of her skirt. They were barely two steps away when my girl turned to me with a big grin of her own, \"Get me out of here and fuck me...\"\n\nWe slid our tray off at the trash receptacles, and headed for the parking lot... we never made it. She saw one of those family bathrooms and hauled me in. She dropped to her knees, yanked my slacks down, stood up and pulled her own down and bent over the sink. \"FUCK MEEEEE...\"\n\nI waddled up behind her with my pants around my ankles and drove into her sloppy wet pussy.\n\n\"OH GOD YESSSS... FUCK ME LIKE THE FIRST TIME...\" I did just that, I grabbed her hips and fucked her like a mad man. Ramming into her hard enough to make it sound like I was giving her a spanking, my balls and her thighs wet with her juices. Using her tits like hand holds to drive in as deep as I could. She screeched and clamped,\n\nI drove deep one last time and flooded her out. Picturing her showing her tits off to the other couple while the lady squeezed and played with hers across the table. \"AAAHHHHHH...\"\n\nWe 'stood' there a few minutes with me collapsed on top of her before we could stand. We cleaned up as best we could, and peaked out to see one of the security guards standing across the isle watching the restroom. She smiled at him and flashed a bit of skin below her tits making him blush. She did the finger wave at him as we walked away.\n\nShe was all smiles and quiet as we drove back home. Cuddled up against me as we went up the walk. She pealed her shirt off as soon as she got in the door, never mind if it was closed, and shed her jeans and shoes leaning against the back of the couch, spreading them crotch up to dry before she went to the bedroom. I heard the shower start, and stripped to join her.\n\nI watched her lather up a bit before I joined her. We looked at each other, knowing without talking. Lathering each other, then shampooing each other, reveling in the others touch. I ran my finger along her mound beside her landing strip feeling a bit of stubble. \"Feels like you might need a trim?\"\n\nShe pulled me to her, trapping my hand between us. \"Mmmmm, I'd like that...\" we rinsed each other off and toweled off, taking our time with each others bodies even though we knew each other in detail.\n\nI followed that delicious ass out to the bedroom, then went to the kitchen for a bowl of hot water. I returned to find her spread at the corner of the bed leaning back on her elbows watching my hard cock bounce as I walked.\n\nI kneeled at the corner of the bed, looking up at her landing strip above her spreading glistening pussy, the rise and fall of her firm tits and nipples, that gorgeous smile surrounded by her flowing red hair...\n\nI leaned in and inhaled her aroma, and then a soft lick between her lips before bringing the razor to those same lips. Spreading first one, and then the other to shave the edges clean. Pulling out to stretch the skin tight, slowly sliding the razor over in short clean strokes. Working my way up and around her landing strip as her pussy began to dribble. Rinsing the razor in hot water every few strokes and wiping her mound clean.\n\nStretching her mound tight trimming it up close, and then narrowing her landing strip back a bit to what she used to keep it at. Finally taking the last stroke, rinsing the razor, then wiping her clean. Her freshly shaved mound with a bright red landing strip in front of me with her pussy dribbling down her ass. I couldn't take it and more and had to dive in, licking and slurping her nectar, running my tongue along the inside of her velvet soft lips. Diving in deep to get every bit I could and then coming up to nibble on her clit.\n\nI was so enthralled with her pussy I forgot to put an arm up between her knees, but I didn't care. I kept on licking and sucking with one arm around her hips. When she arched up cumming in my mouth I slipped a hand under her and a finger in her well lubed ass. a string of gibberish came from her and she began flopping around, legs flailing instead of trying to squeeze me to death.",
        "I'm not sure if I ran out of strength first or if she did, but we collapsed like that on the bed. Her flopped back legs splayed, me with my head on her thigh hanging off the edge of the bed. Once I was able to stand I made my way to the kitchen for some ice water. I came back to see her snuggled up against my pillow with her eyes closed and a dreamy look on her face. I had to stop and stare, her innocent beauty just amazed me...\n\nShe opened her eyes when I sat on the bed and rolled up to take her glass, taking a long drink while I watch her. She smiled at me with an impish grin, then sat her glass down on the night stand and patted the bed beside her. I managed to realize I still hadn't taken a drink from my glass. I swallowed some down and joined her. She turned so I could have her curled up in front of me.\n\nWe lay there, my cock in the crack of her ass, one arm under her tits cupping the far one, the other under her head for a pillow. Her bright red hair right in front of me... I knew it was a fantasy weekend... I knew reality was going to come in the morning...\"I wish this weekend didn't have to end...\"\n\nShe pushed back against me, her hand cupping mine cupping her, \"Me too...\"\n\nI held her as tight as I could, and kissed her neck just below her ear and whispered, \"I really wished you lived up here and not on the other end of town so far away.\"\n\nI felt her hold her breath for a bit, then release it, \"...ok...\" she said quietly.\n\n\"HUH?\"\n\n\"I'll move in...\"\n\nI pulled back and rolled her toward me to look her in the eye, \"But what about school?\"\n\n\"I've only got a week and a half of classes left, then two finals and I'm done. It will take us at least a week or so to figure everything out...so?\"\n\nI cupped her chin and gave her the softest gentlest kiss I could, \"Of course you can move in, I wouldn't have it any other way. Next thing you'll tell me is I get to keep my redhead...\"\n\nNow she put her arm up around me, \"Yup, the boring brunette is officially gone...\" and pulled me down for a much more serious kiss.\n\nWe kissed and talked and talked and kissed over the next several hours, pulling the comforter up and cuddling and kissing some more. Somewhere along the way falling asleep together..."
    ],
    "authorname": "acup",
    "tags": [
        "body builder",
        "lesbian",
        "hard nipples",
        "cock sucking",
        "butt plug",
        "exhibitionist",
        "redhead",
        "threesome"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/its-all-the-exs-fault-ch-12"
}