{
    "title": "Danica Pt. 19",
    "pages": [
        "Author's Notes:\nThis story is erotic fantasy, set in a world of magic.  I reserve the right to be listed as the author of this work, wherever it is posted.  If found posted anywhere except Literotica.com with this note attached, this story is posted without my permission.  &copy; Darkniciad 2000-2007\n\nThe sexual situations in this story will be far ranging, and may prove disturbing to some readers.  Please be warned that the villains of the story are really evil, and the things they do are not glossed over, or toned down.\n\nI make use of modern weights and measures quite often in my work, because those are the weights and measures of my fantasy world.  I know many fantasy readers prefer more archaic terms, and I hope those readers can overlook my use of miles, feet, and other such measures.\n\nPlease note that the form of witchcraft in my world is not meant to be true Wicca.  Nor is it supposed to follow \"Charmed\" exactly.  No offence or confusion is intended.\n\nYou really need to read the previous parts of the story to know the characters and the storyline.  This tale follows Danica in her day-to-day adventures, with the greater plot emerging slowly at first.  Think of it more as a serial than a novel, and you'll be in the right mindset.\n\nThis is an edited version of this tale, making use of what I've learned since starting to post at Literotica, and the services of my tireless editor, Roust Writer.\n\n\n{*****~~o~~0~~o~~*****}\n\nGaeaye sat dangling her shapely legs in a pristine brook, her lush body covered only by her dark hair, which would have hung down to her knees if she were standing.  The scent of flowers \u2013 every flower known in the world \u2013 filled the air.  A gentle breeze rustled the leaves of the trees surrounding the stream.  Birds sang in those trees, and a fawn drank a few feet away from Gaeaye, untroubled by her presence.  No man or god could have conceived a place more serene and peaceful.\n\nYet her face was troubled.\n\nInclining her head for a moment, the goddess known as the Earth Mother answered a call from Braeland, God of the Hunt, allowing him admittance into her realm.\n\nHe stood behind her in the sun-dappled meadow a moment later.  Dressed in the brown and green of a huntsman with a longbow slung over his shoulder, he seemed an alien presence in this land where the animals held no fear.  \"Mother, do you feel it?\"\n\nSmiling for just a moment as a school of fry tickled her feet, Gaeaye replied, \"We all feel it, Braeland.  Something was taken from us when the stars aligned in the sky.\"\n\n\"But what?  I feel as if a great darkness grows, and we are blind to the source.\"\n\n\"Listen, Braeland, do you not hear them?  The heavens and hells are in turmoil.  Something beyond us \u2013 beyond the mother of us all \u2013 has awakened.  Something from the time before has been roused from its slumber.\"\n\nBraeland moved to stand next to Gaeaye, concern obvious in his voice, \"How is this possible?\"\n\n\"All things are possible, Braeland.  When mother's jewels divided the cloak of night, the power of all was strong.  A pathway to the time before was opened, and it has awakened its own.\"\n\n\"What are we to do?  This cannot be.  That which was before would rend all creation.\"\n\nTurning toward her visitor, Gaeaye advised, \"Only if it is freed.\"\n\n\"If it has awakened, it will call to the mortals.  They know not the danger and could be deceived.\"\n\n\"It is not unopposed.  The signs revealed this prophecy to us, though we ignored them.  Remember the prophecy.  Even in the time before, so alien to us all, there was a balance.\"\n\nBraeland exclaimed, \"We must be the balance!\"\n\nThe fawn drinking from the stream raised its head, ears pricked to the wind.  Above, the sound of birdsong vanished.  A voice emerged from behind the gods, where none should have stood to speak, \"You are a part of it.\"\n\nSpinning and pulling his longbow from his shoulder, knocking an arrow in the same fluid motion, Braeland turned upon the source of the voice.\n\nGaeaye vanished from where she sat, appearing beside Braeland and placing a hand upon his arm.  \"Do no violence in my realm.  I sense no threat from this one.\"\n\nBraeland released the draw of his bow slowly, reluctantly obeying the order of Gaeaye in this, her realm.\n\nGaeaye stepped forward.  \"Welcome, mortal, to my place of peace.\"\n\nThe man's voice was sonorous, and his tone respectful, if not reverent.  \"Thank you for your wise forbearance, Earth Mother.\"\n\nGaeaye tilted her head, the action revealing the swell of her breast.  She then asked, \"How is it that I do not know you?\"\n\nToying with his iron-grey goatee, hints of a haughty smile crossed the mortal's face.  \"You do not know me for the same reason you have forgotten Zoraster Arias, as he calls himself now.\"\n\nBraeland asked, \"And what shall we call you, intruder?\"\n\nSmoothing his dark purple robes, the man offered a mocking bow and replied, \"How remiss of me not to introduce myself, God of the Hunt.  I am Rogan Illiciat.  I serve that which opposes Zoraster and the darkness he seeks to free.\"\n\n\"I know you,\" Braeland said, narrowing his eyes.\n\nIlliciat pulled the hood of his robe over his bald head, \"Through those who serve you, as you may know Zoraster and those who serve him once more if you but concentrate.  The eyes of mortals are unaffected by the powers.  You are part of the balance, as are all who would see creation remain as it is now.\"\n\nDespite another calming touch of Gaeaye's hand, Braeland retorted, \"I cannot see into your heart and mind \u2013 how are we to know you do not serve the darkness?\"\n\nThe haughty smile reemerged on Illiciat's face.  \"Such is irrelevant.  I have given you the information you require to play your part in this game.\"  Turning to Gaeaye, he added, \"One more thing I will tell you, Earth Mother.  You must heal the rift with the Fey.\"\n\nHaving spoken those words, Illiciat simply vanished as if he had never been.\n\nBraeland turned to the nature goddess and said, \"I do not trust this mortal, if he is indeed such.\"\n\n\"Once he may have been mortal, but no longer.  He wields the power of Sorcery, and indeed the touch of that which was before is upon him.  I must think on this, but I find wisdom in his instruction regarding the Fey.  Our quarrel with them is selfish, based only upon the fact that they fall outside our sphere of influence.  They are the balance to the Hellspawn, who will surely flock to the darkness, and we would do well to heal the rift with them.\"\n\nBraeland furrowed his brow, considering the Earth Mother's words.  \"Perhaps, at least in that, he may speak truth.\"\n\n\"Tell the others of this Zoraster, as will I.  If his presence is hidden from our eyes, he bears watching through those who serve us.\"\n\n\"As does this Illiciat,\" Braeland insisted.\n\n\"As does he,\" Gaeaye agreed.\n\n{*****~~o~~0~~o~~*****}\n\nDanica awoke to the odd sensation that an oppressive fog was hanging over her.  Slipping into the second sight, she examined her wards and the magic present in the room, seeing nothing out of the ordinary.  When she shook off the last vestiges of sleep, the strange feeling went with it.\n\nIt did nothing to remove Danica's worries.\n\nThe convergence had occurred the night before, and Danica's dreams had been troubled.  Strange visions of mists, demons and danger had haunted her throughout the night.  She had no idea whether the dreams were a product of the foul magic the Seer had said would happen, or her own subconscious concerns about the prophecy.\n\nIn the process of learning all the new spells from the temple of Sekmamun, and her recent research into demon-countering Art, something had been nagging at the back of Danica's mind.  The protective magics she had always depended upon to defend her had proven useless against Meckataur's powers.\n\nRune magic was the thing that kept popping into her mind.  Ever since her encounter with the worktable that had opened her mind to the runes, Danica had grown ever more proficient in their use.  Now that she had mastered all the magic she felt was within her range for the time being, Danica was considering the possibility of creating some runic defenses.  Runes might be able to protect her from the powers of demons, as well as other magics that didn't conform to the norms of the Art.\n\nDanica only mused over the thoughts slightly as she bathed and ate, saving that for when she stepped into her lab afterwards.  Sitting down at a desk, she retrieved a pen and paper, and then started to consider things in earnest.\n\nA few sketches quickly let her know that, while possible, making some sort of amulet or other item and inscribing it with runes had limitations.  She could only make details on such an item so small, and that limited the amount of protections such an item could provide.  It would certainly have no space to contain offensive magic, although she could have created a wand or staff to house those sorts of powers.\n\nThinking back to her time on the island, and more specifically of the Nameless Ones, an idea occurred to Danica.  Sigla had covered the zombies, essentially for show, but it did spark an idea that might work.  There was plenty of space on one's body that could provide the canvas on which to draw many powerful rune structures.\n\nThe idea of defacing her body with runes, and the difficulty of doing so without help, didn't really have a lot of appeal to Danica, however.  There was a solution to this as well, involving both a spell she had never really considered worth much effort, and a magical type of ink.\n\nThe spell, known as Reflection's Servant, allowed the caster to slip into a state of concentration and obtain a viewpoint as if they were outside their body.  It was somewhat similar to astral projection, except the spell did not actually cause the caster to vacate their body.  The spell also allowed the hazy image of oneself that the spell created as the caster's alternate viewpoint to manipulate objects in the physical world.\n\nThe notes about the spell listed removing offensive hair from the back as one of the possible uses of the spell.  Considering how out of place it seemed with the remainder of the suggested uses, Danica considered it likely that this was the true reason for the spell's creation.\n\nConsidering the similarities to astral projection and telekinesis, which was very similar to how the spell manipulated physical objects, Danica felt she would be able to command the spell with the high level of mastery necessary to tattoo her body with runes.  An incorrectly drawn rune was a dangerous thing, and something as permanent as a tattoo was not the sort of thing you wanted to make a mistake with, even if it were invisible.\n\nInvisibility was the property of the ink, created for use in secret documents, only appearing under certain conditions.  Otherwise, anything written with the ink vanished until called into visibility by the circumstances dictated during the making of the ink.  Danica would have no need for the ink to be visible once the runes were finished, but knew it was likely the tattoos would be visible when the magic activated.  The stronger the rune structure, the more likely it was to glow with power when activated.\n\nThe final problem was finding a way to draw the structures upon her body without Zoraster finding out about it.  Danica had no desire to reveal what she knew about runes to Zoraster.  While the structures she used in the defenses protecting her rooms bespoke a great deal of skill, they were a far cry from what she truly understood.  It felt as if some new property or use of the runes appeared in her mind daily, and to Danica it seemed that understanding of rune magic grew exponentially after she obtained a certain level of mastery.  Once you could recognize the patterns of runes and the way they fit together in structures, it became easier every day.\n\nDanica discarded the idea of using the inner library at the temple of Sekmamun as a location, because it was not a private spot.  She would need to be in various states of undress to draw the runes upon her skin, and the nature of the Reflection's Servant spell would make it difficult for her to quickly banish the spell and cover up if necessary.  Danica had no shame about her body, but she wasn't pleasantly disposed toward alarming people who walked in upon her half-naked when they should have no reason to find such.\n\nThe numerous other places where Zoraster could not spy upon her had similar problems.  The Spell Engine was one place that was completely private, but it would suck up her spell the instant it came into being.\n\nConsideration of the Spell Engine provided her with the solution, the Hellgate.  Danica could force time to move differently inside the pocket of space created by the spell.  Inside, she could spend hours laboring over her tattoos, while only moments passed in the real world.  She had to consider the demons within the Hellgate's space, but Danica was truly unconcerned about them, as she had been able to control them rather effectively in the two trips with Heather and Grant.\n\nDanica still didn\u2019t know whether she would go through with the idea, but she certainly found that she leaned toward undertaking the task.  For the time being, learning the Reflection's Servant spell was a necessary step, and it could possibly prove useful for other things.\n\nThe Master of the school where she and her sister had first studied had once told her, Magic is a subtle art, and even the most innocuous spell can prove to be of great value under the correct circumstances.\n\nDanica had not given much weight to the statement, even well into her adult life, but had learned the truth of it since she had fallen into Zoraster's trap.  Simple telekinesis, which she had always been good at but thought was all but useless, had saved her life more than once on her tasks.\n\nSmiling at memories of her teen years struggling to learn magic, Danica made the decision to at least learn the spell, and then decide about the rest later.\n\n{*****~~o~~0~~o~~*****}\n\nCeles had taken advantage of the power offered by the convergence, as had Zoraster.  The magic Celes utilized was no less important to her, but far less earth shattering.  She had used the power of the convergence to alter the enchantments upon her toy.  Before, an image of Andrea lapped her when she used the toy, but now Danica's auburn locks brushed against Celes' thighs when the magic was active.\n\nThe power of the convergence had also strengthened the power of the illusion.  When Celes had strapped on the toy to test it following a short recovery period after casting the spell, she found that the illusion was so vivid it was difficult to believe that Danica was not actually between her legs, driving her to unbelievable heights of ecstasy.  She had even been able to reach out and stroke those auburn curls, feeling them between her fingers, clenched in orgasm.\n\nThe toy lay on the nightstand, unwashed, and Celes lay naked in her bed, covered in the sticky evidence of her pleasure.  She had barely been able to summon up the energy to remove the toy before collapsing into slumber.\n\nCeles' desire flared again as she awakened, remembering the wonderful release, several times over, that the newly enhanced toy had given her the night before.  She nearly reached for the toy to slide it over her loins once more, but stopped when she decided that becoming too addicted to the pleasure was unhealthy.\n\nRising with a sigh, Celes went to her bath, taking the toy with her to clean it as well.  She had to fight the desire to use it the whole time, the feeling only fading when she put the toy away in the nightstand drawer and got it out of her sight.\n\nCeles had gathered, with some trepidation, what little information she could find about witchcraft.  There was much that was conjecture and rumor, but Celes remembered just enough of her mother's teachings that she thought she could determine what was true and what was false.\n\nNow that she was stuck with her powers and her destiny once more, Celes decided that she should learn as much as she could about her powers.  The conversation with Danica about the demon Meckataur had leant strength to this consideration in Celes' mind.  Witchcraft was ultimately a weapon to defend against and destroy Hellspawn.\n\nAt least in the hands of a good witch.\n\nA witch that turned to self-gain, or any other number of human fallibilities, became a tool of the very creatures the craft existed to combat.  Demons took great delight in encouraging witches to turn, because it not only eliminated a dangerous enemy, it also provided them with tools to further their own desires.\n\nSitting down with one of the books, Celes took the first step in a long journey toward making up for lost time.\n\n{*****~~o~~0~~o~~*****}\n\nZoraster waved his hands, and all the mirrors in his scrying room went dark.  Everything was proceeding exactly as planned.  Everyone and everything was in place, or would be soon.  Stepping out of the room, he found Camilla waiting for him in the hall.\n\n\"Master, men from Draxnog wish to speak with you.\"\n\nZoraster rolled his eyes and sighed, \"Send them to my sitting room and see that their comfort is provided for.  I will await them there.\"\n\nStrolling toward his rarely used sitting room, Zoraster sneered.  He knew why the fools were coming \u2013 they sought more coin to build their armies.  If the idiot Draxnog had not relied so heavily upon the slave labor of the plains barbarians, the nation would not be in the straits it was now.  As it was, Zoraster propped up the economy of the entire nation by funding most of the military spending, a necessity if Draxnog was going to be of any use to him when the time came.\n\nHe needed that nation's forces to contend with Egoria, the nation carved from lands once occupied by Draxnog, by Thakkorias and his intrepid band of do-gooders.  Draxnog had his faults, but his strength was in his hatred of the annoying cretins in Egoria that presented one of the two most significant threats to his plans.  Zoraster needed those armies on the southern front when the time came to neutralize Egoria.\n\nThe coin was of no real concern; Zoraster had more sources to obtain that than he could ever hope to spend.  Dealing with the annoying southerners, with their ridiculous accents, simply grated on his nerves.\n\nZoraster smiled thinking about the ultimate culmination of his plans, however.  Draxnog would be one of the casualties in the war to come.  While Zoraster was far from above using atrocity as a tool when necessary, Draxnog and his armies considered it a pleasurable diversion.  Slavery, theft, murder, rape \u2013 all were weapons in Zoraster's hands, but they were the means to abolish such abominations in the perfect world he intended to rule.\n\nSending a silent thought ensured that the necessary funds would be ready immediately, and the brown-skinned beggars Draxnog had sent would be gone as quickly as possible.  Walking in to the sitting room, Zoraster eased into a thickly padded chair and waited for Camilla to lead the smelly southerners in.\n\n{*****~~o~~0~~o~~*****}\n\nMeckataur's muzzle split into a wide grin as Arleen presented him with his spawn.  The child looked human, large for a newborn, but absolutely human.  Only the glint of intelligence and malevolence in the dark eyes of the child revealed his evil parentage.\n\nThat would end soon enough.  The child would grow rapidly, provided the brood mare who had carried it survived long enough to nurse it for the required few days.\n\nArleen took the child to the cr\u00e8che, which Meckataur soon hoped would hold many more of his spawn, and turned his eyes to Mopario, who prayed over the unconscious and mangled woman who had just delivered the child.\n\nMopario was high in his god's favor, and the wide splits torn in the woman's nether regions during the birth healed.",
        "\"Awaken her to nurse my spawn as soon as possible,\" Meckataur rumbled to the cleric of the war-god.\n\n\"It shall be so, Meckataur,\" Mopario replied.\n\nA horrific scream split the air, filled with pain and anguish beyond imagining.  Once more, Meckataur's horrible features twisted into a malevolent smile.  It appeared his spawn were eager to escape the prison of their mother's wombs and see the light of the world they would rule.\n\n{*****~~o~~0~~o~~*****}\n\nThe warm glow that infused Danica only a few hours later let her know the spell was hers.  Danica already knew how she was going to test the use of the spell.  She had been feeling a bit lazy and had not shaven in a couple of days.  The necessary care required for that task would well test her control over the new magic.\n\nDanica brought a washbasin and her razor to the bed, and then laid several towels over the coverings to protect them from the water.  Stripping off her robes and panties, Danica lay down, clad only in her brassiere, and cleared her mind, preparing to cast the spell.\n\nDanica chanted, making the necessary gestures of the spell and holding the small silver square that was the material component of the spell.  It would be some time before she was proficient enough with the spell to eliminate the need for the physical focus of the spell.  In the meantime, it was going to be expensive.\n\nWhen the spell's power came into being, Danica closed her eyes and relaxed, letting her mind drift.  It was indeed very similar to astral projection, and Danica soon viewed her body from an angle that few who were not on their way to the afterlife ever had the opportunity to see.\n\nInstead of a ghostly apparition, she looked more like a faint outline.  Holding her hand up in front of her face, Danica could see right through it.  The image was somewhat distorted, as if she were looking through water, but everything beyond her hand was fully visible.\n\nShe first practiced controlling her physical body from her new vantage point, silently ordering it to raise one leg up high.  Her body obeyed her, and oddly enough, Danica could feel faint hints of the muscles moving in her transparent body.  It was a little disconcerting, but Danica got used to it as she continued to move her real body around, getting used to the way the magic worked.\n\nNext, she tried the crucial part of the spell, manipulating physical objects with her transparent body.  Danica found this no more difficult than manipulating her real body, easily picking up the razor and holding it, even twirling it between her fingers.  The method was very similar to her telekinetic powers, except she had the focus of her hands as an additional reference point.\n\nAfter a few minutes of practice, Danica ordered her physical body to bend one knee.  She shaved the lower leg, finding that it was no more difficult than shaving someone else.  Shortly after she started, Danica was able to relax and complete the task quickly.  Even the delicate shaving around her folds proved to be easy.  She also noticed, as she grew used to the spell, that she could detect the sensations from her real body.  She could feel the razor sliding over her skin, and knew when it was threatening to bite into her.\n\nWhen Danica finished, she put down the razor and ran her fingers over her physical body's smooth mound.  A shudder passed through Danica's magical body as she felt her real body respond to the touch.\n\nCurious after that sensation, Danica rubbed her fingers over her folds before her.  A stronger shock of pleasure from that touch immediately rewarded her.  Now very curious and quite aroused, Danica explored her body further.  The pleasure she felt grew stronger as she teased her transparent fingers between her real lips.\n\nThe sensation was strong, and felt incredible, but there was a slight disconnect from the feeling.  It was obvious her real body was responding to the touch, but she was able to concentrate on what she was doing.\n\nSliding her fingers deep into the wet sheathe of her own sex, Danica rubbed her swollen bud as well.  Absently, she parted her physical legs, discovering that the more she used the spell, the easier it was to manipulate both of her forms simultaneously.  Her pleasure mounted, and her clear fingers thrust faster with each passing moment.\n\nDanica learned something new about the spell as she built toward release.  The limits of the real world meant nothing to her magically assumed form.  Her fingers elongated and thickened unconsciously as her real body demanded more.  Danica was soon in a fog of pleasure, with just enough of a divorce from the feeling to maintain full control of what she was doing.\n\nThe spell ended suddenly when Danica came.  The shock of her consciousness returning to her body was pale by comparison to the explosion of pleasure that rocked her body.  Danica screamed, her juices erupting from her in a torrent.  Haltingly, Danica regained control of her body to rub her clit and keep the orgasm going.\n\nAt last, Danica collapsed to the bed, panting for breath, and let out a little satisfied moan.  A smile crossed her face and she chuckled.  This little test certainly proved she could use the magic to scribe the runes on her skin, and she had little doubt that it would be easier the next time she tried the spell.\n\nFor now, however, her body was telling her that it was far from satisfied.  Danica rolled over and retrieved one of her toys from the nightstand beside her bed to sate that need.\n\n{*****~~o~~0~~o~~*****}\n\nDanica packed a few things in preparation to leave for her apartment in Groenport, a little over one hundred miles to the Southeast on the shore of the Groen Sea.  A scowl crossed her face momentarily as she thought about the circumstances surrounding her purchase of that apartment.  She had actually wanted to have a place in Dalaria, but Zoraster had intervened and ordered her, in no uncertain terms, to stay out of the city.  It lay on the border, and was apparently too close to the town of Destindale \u2013 where Danica had lived when her nightmare began \u2013 for Zoraster's liking.  Danica had not even considered the proximity of Dalaria to the Protectorates of Armand, the land of her birth, when deciding to find an apartment there.  She had simply liked the city, the people there, and the wealth of trade items available.\n\nGroenport was close enough to the atmosphere she had liked in Dalaria, so long as she stayed away from the water.  Nearly every seaside town had a distinctive odor near the docks, brought on by people tossing things in the sea and having them all return with the tides.  The people of Groenport apparently were even less mindful of this than most that dwelt near the sea.  The smell turned Danica's stomach, and so her apartment was as far from the ocean as possible, but still had a nice view of it from a distance.\n\nHer destination was really irrelevant, because it was the stop in the Hellgate that mattered.  Danica planned to begin scribing the runes on her skin immediately.  She knew how it could be done now, and the amount of magic the runes would provide her, able to be activated with a thought, was a lure too strong to ignore.\n\nDanica cast the spell and stepped into the Hellgate.  Looking around, she saw none of the demons that inhabited the place, and nodded in satisfaction.  It appeared that her chastisement of the creatures was starting to stick.  Danica fell into a deep concentration, feeling the flow of the magic and turning to the task of manipulating the flow of time within the extra-dimensional pocket.\n\nIt proved ridiculously easy.  The little pocket of space responded to her whims near instantly.  Danica felt a little touch against her consciousness, suggesting that she could turn time backwards as well.  The idea of having an eighteen-year-old body again was certainly appealing.\n\nDanica shook her head and opened her eyes.  That was the creatures that resided here trying to tempt her again, she realized.  She had accomplished what she wanted to do, and weeks could now pass for her while outside only moments would tick by.\n\nDanica immediately shed her clothing, absently conjuring up a bed on which to lie while she worked.  Looking down at her body, she chuckled.  The years had been kind to her, in truth.  Just over thirty now, she wasn't sagging or growing wrinkly.  Her breasts didn't ride quite as high as they had when she was a teen, but considering their size, they had endured the test of time quite well.\n\nDanica's heart lurched when she heard a familiar voice behind her, \"You look beautiful,\" it said.\n\nTurning, Danica saw Darius and Jonathon standing behind her.  They were nude, hard, and stunningly handsome.  For a moment, she wanted nothing more than to drag them both into the bed with her, and then she remembered where she was.\n\nSeething anger welled up inside Danica.  The creatures invading her mind to assume the forms of the two men who had touched her heart enraged her.  Danica was startled to find a sword in her hand as her anger built.  When the weapon appeared, the landscape flickered momentarily from the beautiful glade, revealing a bleak expanse of sand and rock, devoid of life.  The creatures also assumed their true forms.  The scenery reverted to the familiar form, but the demons did not.\n\nThe creatures cringed and shrank away from the blade in Danica's hand, trembling violently.  Danica raised the sword up to examine it.  It was similar to a longsword, the blade polished to a mirror-like finish.  Swirls and whorls decorated the entire blade and hilt, gold trimmed the crosspiece, and a large ruby decorated the pommel.  The weapon was weightless in her hand, and in fact felt like an extension of her hand.  Instinctively, Danica knew that it was an extension of her.\n\n\"Please mistress,\" one of the creatures hissed.\n\nDanica brandished the sword toward them, \"I don't ever want to see any of you again, unless I summon you.  Is that clear?\"\n\nThe creatures both replied, \"Yes, Mistress!\"  The monsters then immediately vanished into the undergrowth.\n\nAs Danica's anger drained away, the sword faded and vanished as well.  Danica nodded her head approvingly, and then turned toward the bed.  She had come here for a reason, and it was time to get started.\n\n{*****~~o~~0~~o~~*****}\n\nCeles stood outside Danica's door, not even knowing why she was really there.  She had determined almost immediately that Danica was not there, and that the wards on the room were active.\n\nCeles sighed, glad in a way that Danica was not inside.  She felt that whatever excuse she would have offered would have instantly rang untrue in Danica's ears.  Celes simply longed to see Danica \u2013 longed for more \u2013 but she had to see her at least.\n\n\"Hello, Celes.  Is Danica here?\"\n\nCeles turned to see Andrea walking toward her.  \"No, she's out and about somewhere.  Her wards are up, and that means she's not here.\"\n\nAndrea looked at Celes curiously, concentrating on the old woman's eyes.  Andrea's eyes opened wider, a look of realization in her face.  The note of longing in Celes' voice had been minor and carefully masked, but Andrea had caught it.\n\nCeles furrowed her brow, \"What is it, Andrea?\"\n\n\"You're in love with Danica, aren't you?\"\n\nCeles' shoulders slumped and she bent wearily, \"Is it that obvious?\"\n\nAndrea shook her head, \"Not really.  I only realized it just now.  Now that I understand, I remember hints from before though.\"\n\n\"Does Danica know?\"  Fear and embarrassment tinged Celes' voice, and her old eyes filled with tears as she spoke.\n\n\"I doubt it.  She feels something for you too.  I know that.  She's talked about it before.  I don't know if she's in love with you, but there's something strong there.\"\n\nCeles shrugged her shoulders, \"I don't know if what I'm feeling is love either.  Danica is the only one who can see me as I should be.  I don't know...\"\n\nAndrea's eyes filled with sadness, but she smiled and said, \"You need to talk to her.\"\n\n\"I think I need to be alone for a while,\" Celes muttered.  Andrea had just forced her to admit something she had denied for some time.  Emotions and thoughts flooded her head, and Celes had trouble thinking through the jumble.\n\nAndrea rather firmly retorted, \"I don't think so.  Come back to my house and talk to me.  I think alone is the last thing you need right now.\"\n\nCeles almost argued with her, and then the look of concern and friendship in Andrea's face changed her mind.  Mutely, she nodded.\n\nAndrea smiled and took Celes' hand in her own, leading the old woman out of the complex toward her humble little cottage near the hedge maze.\n\n{*****~~o~~0~~o~~*****}\n\nDanica examined the magical ink she had prepared before entering the Hellgate, seeing the little flecks and motes of swirling power beneath the surface.  The pen lying beside it was made of an eagle's feather, the point fine, but rounded so it would not scratch her skin.  The feather was likewise enchanted to prevent the ink from drying on its tip, and it would absorb the ink when dipped, allowing Danica to write with it for far longer than common for a quill pen.  The vane of the feather glowed with a faint bluish light.\n\nWith everything now ready, Danica lay down on the bed and cast the Reflection's Servant spell again.  After the moment of disorientation, Danica picked up the quill in her transparent hand and dipped it into the ink.  The glow of the feather intensified for just a moment as the enchantment upon the feather absorbed the ink from the pot.\n\nTaking a moment to prepare, Danica's assumed form hovered over her body.  When she felt her control was strong enough, Danica started to draw the first rune, her name rune, over her heart.  She took great care not to make the slightest mistake.  She could use the vane of the feather to brush away the magical ink if necessary, but she needed to get in the habit of doing it right the first time.  The first rune would be easy enough to remove, but a careless stroke of the feather later on could destroy part of another rune, rendering whole structures useless.\n\nWith a final, careful stroke, Danica completed the rune.  It immediately flared to life with a brilliant blue light.  Any rune structure connected to the rune would link to her now, beyond the ability of any other that did not know her secret, true name and the rune that represented it to utilize.\n\nDanica felt a sensation as if she were breathing a sigh of relief, although her assumed form neither breathed nor made any sound.  Her transparent face shimmered with a smile, and Danica dipped the feather again to begin the next rune.\n\n{*****~~o~~0~~o~~*****}\n\nCamilla inquired, \"Why do you abide those odiferous southerners?\"\n\nLeading Camilla toward the scrying room, Zoraster explained, \"Because they will be useful, Camilla.  They already despise Thakkor and his cronies, and they require little encouragement to go against him.  Freeland and Egoria must be distracted when I begin my conquest.\"\n\nWaving a hand before one of the mirrors in the room and concentrating, Zoraster activated the magic of the scrying device.  The image that appeared in the mirror was of a man who gave the impression that a nervous energy filled him.  He was thin, and his eyes constantly darted in all directions, taking in everything around him.  A scowl twisted his rat-like face, and a group of Wood Trolls cowered before him, prostrate on the ground and grunting platitudes.\n\n\"What is this, Master?\"\n\nZoraster chuckled, \"All that remains of the Lord of Murder.\"\n\n\"Blorcasir?  Was he not destroyed when his minions were slaughtered?\"\n\n\"A god is not so easy to destroy, though he is greatly weakened,\" Zoraster replied.\n\nNervously, Camilla asked, \"Is it wise to scry upon a god so?\"\n\n\"In truth, he is more dangerous to scry upon than any of the other gods at this time.  The gods could sense nothing of me thanks to my magic.  Blork, as his simple minions know him now, is so close to mortal that he can sense my magic.  His power is so reduced that there is little he can do about it.\"\n\n\"His minions - the pitiful Wood Trolls?\"\n\nZoraster smiled, \"Yes, the Lord of Murder is now reduced to god of Wood Trolls.  He seeks one with enough intelligence to construct an altar and lure a human, any human, into worship of him again.  With one mortal man to pay obeisance to him, he could begin to regain his former power.\"\n\nCamilla laughed, \"I see he has had little success in the centuries since his unmanning.\"\n\nZoraster scowled, \"He is god enough to sense such mockery.  Do not do so again.  I am not yet ready for his place in my plans.\"\n\n\"What use will Blorcasir be, if he has been so reduced in power?\"\n\n\"His current level of power places him in a unique and convenient position to be useful to me.  You will see in time, Camilla.\"\n\nBlork was now spinning slowly on his heels, trying to home in on the spy he knew observed him.  Zoraster banished the magic of the mirror to frustrate the godling.\n\nZoraster waved his hand before another mirror to activate the magic within it.  \"I had been concerned that he may have finally located a creature capable of serving his needs, but it appears I will not have to intervene.  The Wood Troll has obviously failed to meet the necessary level of intelligence.\"\n\nThe mirror's surface now showed the image of a finely dressed man with a haughty expression.  Camilla watched the man enter a building, looking down his nose at everyone he passed, and asked, \"And who do we watch now.\"\n\n\"A merchant by the name of Connand within the city of Cherok's Ford,\" Zoraster answered.\n\n\"And what use will he be to you, Master?\"\n\nZoraster laughed and replied, \"Of great use.  He has vast wealth, numerous trading houses, and a personal army of warriors and spies at his disposal.  Thus far, he has resisted my offers for an arrangement between us \u2013 and in a rude manner.  He also possesses magical protection.\"\n\n\"It would seem he requires both chastisement and encouragement,\" Camilla purred.\n\nThe smile that spread across Zoraster's face was dark and mirthless.  \"Indeed, he does.  Your studies progress well, but I have need of skills that you have already honed to a razor's edge, dear Camilla.\"\n\nCamilla tossed her hair and grinned back at Zoraster.  \"I believe I can bring him to an understanding, Master.\"\n\n\"He has numerous guards in his home, and he is rarely alone.  He has been persuaded to send them out of the home, on occasion, in order to fulfill his lust.  A woman with the proper methods of persuasion could likely encourage him to do so again.\"\n\nCamilla scowled slightly, \"I suppose I will have to lie with him.\"\n\n\"Likely, but I am sure you can endure knowing the reward for patience and enduring his touch,\" Zoraster suggested.\n\n\"It shall be as you command, my Master.\"\n\n\"I expect nothing less.  Gaining control over his operations will give me a vital foothold in both Egoria and Freeland.  Draxnog shall vex them from without, and our dear Connand shall rot them from within.\"\n\nCamilla bowed her head slightly and asked, \"Though I serve you without question, Master, might I ask a small boon for this service, since I shall be forced to endure his rut?\"\n\nZoraster placed his hand under Camilla's chin and raised her eyes back to his, \"I already know what you seek.  It shall be done when you have brought his resources under my control.\"\n\nA smile full of malice tugged at Camilla's lips, \"I will go immediately, Master.  Thank you.\"\n\n\"Go, and earn your reward, Camilla.\"\n\n{*****~~o~~0~~o~~*****}\n\nAndrea asked, \"So, can you do it?\"\n\nCeles sighed, but the sound did not carry the hopeless longing it had at the beginning of the conversation.  \"I have to.  This is going to gnaw at me until I do.  I have to tell Danica what I've been feeling, or it is going to drive me mad.\"",
        "Andrea's hand rested gently upon the hand of the old woman, stroking it in a comforting gesture.  \"I think Danica probably needs to say a few things too.  The two of you have shared so much, and yet you hide so much for fear of hurting each other.\"\n\nCeles looked up and cocked her head, \"How is it that you're so full of wisdom?\"\n\nAndrea smiled and shrugged her shoulders, \"I'm a simple girl, and I've been on my own for a long time.  I've had to learn to read people to get along.\"\n\n\"Maybe I need to take my nose out of my books and start paying more attention to what is going on around me,\" Celes mused.\n\nAndrea chuckled, and responded, \"You know you've been ignoring things now, on purpose.  You'll pay attention now.  Do you want me to go with you?\"\n\nCeles looked as though she were considering the idea for a moment, but then shook her head and replied, \"No, I think I need to do this alone.\"  The light of realization appeared in Celes' eyes then and she asked, \"Do you...  How do you feel about Danica?\"\n\n\"She's one of my dearest friends.  She was my first, and I treasure her touch.  I'm not in love with her, though.  I don't think I've been in love with anyone yet.  It doesn't bother you that we...\"\n\n\"No, I understand Danica's desires.  I know she isn't ready to commit to anyone, and she'll always have a need for a man, as impossible as that is for me to understand.\"\n\n\"They have certain advantages,\" Andrea said and giggled.\n\n\"The three of you and Brandon are trying to corrupt me.  I was perfectly happy considering all men no better than hairy pigs in rut and you're all forcing me to see there are some good men.  Not many, but a few.\"\n\nThe slight twitch of Andrea's eyebrows and the tone of her voice insinuated far more than her words, \"Have you thought about other things?\"\n\nCeles actually blushed.\n\n\"You may have to face that fear some day,\" Andrea suggested.\n\n\"Not if I can help it.  I'm happy the way I am, I don't need any more complications,\" Celes said, wrinkling her nose.\n\nAndrea yawned and then said, \"I'm sorry.\"\n\nCeles chuckled, \"It's okay \u2013 it's late.  Thank you, Andrea.\"\n\n\"You're welcome.  Are you going to go see her?\"\n\nCeles nodded, \"If she's back.\"\n\n\"Be brave \u2013 you'll be fine,\" encouraged Andrea, bringing Celes' hand to her lips and kissing it softly.\n\n{*****~~o~~0~~o~~*****}\n\nDanica awoke, disoriented by the unfamiliar environs of her apartment for a moment, and the darkness of the room.  She had spent hours tracing the runes on her flesh in the Hellgate, and had completed several protective structures.  It had been exhausting work, and she had collapsed into slumber as soon as she emerged from the Hellgate and found her bed.\n\nRising, Danica considered one flaw in her plan.  The change in time inside the Hellgate allowed her time to do what she needed to do, but when she emerged in the real world, only moments had passed.  She knew it was going to take a while to adjust to that, and waking up in the early hours of the night was one of the problems it was going to cause her.\n\nSlipping into a bath, Danica examined her body as she washed.  The runes were invisible on her skin, although she could feel them when she concentrated.  Otherwise, they would be undetectable unless activated.  Even then, they would only flare into magical life when defending against very powerful magic, or upon Danica's command.\n\nThe problem of the disruption to her schedule was easy enough to fix.  She was rested and ready to resume her tedious task now.  When she emerged from the Hellgate again, only a few moments would have passed by in the real world.  The next time she woke up, it would be daylight, and she would be back in a normal rhythm.\n\nShe would have to be careful not to spend all her time within Zoraster's ability to spy upon her sleeping.  She knew that would be very suspicious.  Danica decided she would need to space the sessions out, so as not to arouse suspicion in the mad Archmage.\n\nAs soon as she finished her bath, Danica packed up her things again, preparing to set out on another fictional journey.  This time she planned to go to Beniopolis, and then later to visit Tonda.  It would give a logical reason for her to pop about using the spell.\n\nHer decision made, and a burning desire to complete the runic defenses consuming her, Danica cast the Hellgate.\n\n{*****~~o~~0~~o~~*****}\n\nCeles stood outside Danica's door, scowling.  For two days, she had come several times to Danica's rooms, finding the defenses still active, and no sign that Danica had been there.  Now that she admitted her feelings, as much as she understood of them, and had decided to reveal them to Danica, she was anxious to do it.\n\nDanica often took extended trips, even when not away on a task for the madman, and usually Celes thought little of it.  This time it was driving her to distraction.  Briefly, Celes considered contacting Danica and asking her to come home, or scrying for her to find out where she was.  She dismissed the notion, not wanting to spy on Danica or sound desperate in asking her to return.\n\nPursing her lips, Celes walked the halls toward Marlena's room.  She had already bent Andrea's ear a dozen times in the past two days, and she didn't want to wear the poor girl out.  Celes thought that perhaps a little discussion of magic with Marlena would provide a welcome distraction from her feelings for Danica and her study of witchcraft.\n\nA short while later, Celes was again disappointed.  Marlena didn\u2019t answer her knock.  Thinking of something she had recently discovered in her studies, Celes decided now was as good a time as any to see if she could apply some of the knowledge.  She had found the recipe for a potion of calming, and she could certainly use that now.\n\nHer course of action determined, Celes went to her room to attempt her first use of the craft that was her birthright.\n\n{*****~~o~~0~~o~~*****}\n\nZoraster watched Celes leave Marlena's door, walking back down the hall toward her own room in his scrying mirror.  Dismissing the magic, he turned back to the mirror he had been watching before Celes had intruded upon the show.\n\nThe merchant was now firmly within his grip.  Camilla had done her work well, and in a very short period of time.  Deep in the man's subconscious, he would remember the horrible torture Camilla had visited upon him.  On the surface, he remembered nothing.  Camilla had removed the amulet that protected the man from magic as she coupled with him, allowing Zoraster's compulsion magic to take hold.  Camilla's education in the foolishness of defying Zoraster's whim would always be there, buried but faintly influencing the man's thoughts, reinforcing the compulsion.\n\nNow Zoraster watched as Camilla received her reward.  Marlena, spellbound and weeping, lapped Camilla to a screaming orgasm in the mirror before him.  Marlena had defied Camilla before, and the woman had never forgiven the insult.  Marlena now paid for angering the wicked woman.\n\nZoraster's magic would ensure that Marlena remembered nothing, much as the merchant, but deep down the horror would remain.  It would keep her in line.\n\nOf course, at this moment she understood everything that was happening, but could do nothing to stop her body from doing anything Camilla asked of her.  The pain of the woman who had plotted to destroy his work at the Forge gave Zoraster a deep feeling of warm satisfaction.\n\nZoraster relaxed back in his chair, eager to see what other unpleasant surprises Camilla had in store for Marlena, as soon as she recovered from her current state of trembling ecstasy.\n\n{*****~~o~~0~~o~~*****}\n\nDanica emerged from the Hellgate with a wide smile on her face.  She was pleased with the quick progress of her rune scribing, and already she had a number of structures that would spring to defend her without even a thought to activate them.  The evening spent lost in pleasure from Tari's tongue and Rehkmire's cock, making her body shudder, helped brighten her day as well.\n\nA short walk and a quick knock later, Danica was catching up with Tonda and Jaron.  It had been too long since she had seen them, and she was pleased to discover that the people here were recovering well from the horror of the Nameless Ones.\n\nIt wasn't long before the proximity to the scantily clad couple started to arouse Danica's desires.  Jaron and Tonda responded with equal passion, and the three were soon removing their sparse garments to give each other pleasure under the welcome relief of a cooling comfort spell.\n\nDanica's spell revealed that Tonda was fertile.  Danica offered a mute smile of apology, but saw something pass between the couple when the rosy glow of fertility appeared beneath Danica's hand.  Without a word, the couple revealed to each other their readiness to become parents, and then told Danica of their decision.\n\nDanica kissed them both, and then said rather impishly, \"I think you know how it's done.\"\n\nTonda and Jaron both laughed, but the laughter was soon drowned in passion as Jaron slid his erection deep into Tonda's tight sheathe.  Danica just watched as they coupled, stroking Tonda's leg and Jaron's back.  Their lovemaking was exactly that, with no hint of lust or clinical detachment aiming for their goal.  They were enjoying the closeness of being together, of being in love, and their mutual desire to start a family.\n\nJaron's pace increased slightly as he drew near his climax, the natural response to his impending orgasm.  Still, he maintained a sedate pace, looking into Tonda's eyes as they both moved steadily toward release.\n\nJaron came with a quavering gasp, his love reaching her peak at the exact same moment.  Tonda was radiant as she quivered in orgasm, her hand lying on her mound, feeling her man's seed deep within her, perhaps giving them what they desired.  Danica lay with them as they quietly talked for a while, sharing the joy of their anticipation.  It would be some time before they knew for sure, but they planned to keep trying in the meantime, until she was with child.\n\nAfter a short while, the couple smiled at each other and looked at Danica.  Moments later, their hands and mouths were teasing her body, building her toward release.  Just as Danica was nearing her peak, they both pulled away, but only long enough for Jaron to slide his dark, thick manhood into Danica and spike her pleasure even higher.\n\nDanica quivered and gasped as Jaron's cock plunged into her depths and Tonda's tongue flickered over them both.  Danica screamed in release as her orgasm gripped her, her sheathe closing tight around Jaron's buried manhood and her head lashing wildly on the pillows.\n\nThey gave her a few moments to recover, and then with a smile that bordered on mischievous, Jaron started to thrust again.  Danica sharply yelped as his throbbing organ set off a powerful aftershock within her.  Tonda watched her man's cock slide in and out of Danica's soaked sex for a few moments, and then started to rub Danica's bud in fast circles, while at the same time sucking on the hard tips of Danica's bouncing breasts.\n\nDanica built rapidly from the hot friction of Jaron's cock penetrating her depths and Tonda's expert fingers teasing her clit.  A pulsing heat swelled in Danica's womb, and she gasped out sultry words of encouragement between cries of ecstasy.\n\nJaron grunted with each thrust, near to release as well.  After a few more strokes, he could no longer control the need.  He buried his member in Danica's depths, the thick shaft pulsing and spurting hot cream deep inside her.  His hips jerked in an irregular rhythm, fighting against the sensitivity brought on by his climax to try to bring Danica to her peak.\n\nTonda's flashing fingers and Jaron's throbbing cock succeeded in pushing Danica over the edge a moment later.  Her first orgasmic contraction forced Jaron to jerk free with a loud grunt.  A torrent of Danica's juices followed his retreating member, erupting from between her folds in a geyser.\n\nTonda leaned down to lap Danica's clit as Danica continued to buck and writhe on the bed.  Tonda purred, tasting Danica's juices and her man's cum while her flashing tongue keeping Danica coming.\n\nDanica pushed Tonda away after a minute, unable to handle the powerful spikes of pleasure that arched her back up off the bed any longer.  Tonda licked her lips with a moan, and then lay down to gently stroke Danica's body while the woman spiraled down from her peak.\n\nA thought interrupted Danica's post-orgasmic bliss a short while later.  Jaron and Tonda were going to have a baby, and they were here in Zoraster's house on the island.\n\nDanica frowned as she considered that.  She had managed to get Carolyn, Heather, and Grant safely away, but others were in danger as well.  The same threat hung over Tari and Rehkmire, if Zoraster's twisted mind encouraged him to do so.\n\nTonda asked, \"What is wrong Danica?\"  The beautiful, dark-skinned woman stroked Danica's cheek as she spoke, and there was concern in her eyes.\n\nDanica smiled and lied, \"Nothing.\"  She then levered her body up to kiss Tonda, tasting her own juices on Tonda's full lips.\n\nDanica pushed the thoughts away for the moment, but she knew she had to do something to protect the others that could become pawns in Zoraster's torture of her \u2013 somehow.\n\n{*****~~o~~0~~o~~*****}\n\nWith a final stroke of her magical pen, Danica completed the last rune.  The strain of maintaining the Reflection's Servant spell long enough to complete the final few runes was starting to tell on her, and so Danica released the magic to sink back into her real body once more.\n\nStretching to work out the kinks in her muscles, Danica rose up off the bed with a groan.  She was weary, but smiling.  Two weeks had passed in the real world, but Danica had been working for far longer in the confines of the Hellgate.\n\nDanica wanted to test the power of the runes, but for now, she was simply too exhausted to even think straight.  It took a great deal of effort to force her personal little realm to manifest a mirror, and all that required was a thought.  Danica decided that as soon as she had taken a look at the finished rune structures, it was time for a long rest.\n\nConcentrating through the fog in her mind, Danica touched her forehead and willed the runes scribed on her body to reveal themselves.  Danica's nude body blazed with magical light, the octagonal rune structures glowing bright blue in the mirror.  Danica squinted, touching the rune on her forehead, and concentrated again.  The glow of the runes changed to a fainter, powder blue in color.  Danica smiled, much more pleased with the color.\n\nThe image in the mirror was unnatural, and far from attractive, but Danica knew the power those rune patterns could summon.  Spinning, she examined the runes scribed over nearly every inch of her flesh.  She had done what she could to make the structures flow with her curves and contours, but it did little to reduce the harshness of the glowing runes glaring all over her body.\n\nDanica's head swam, and she put her hands out wide to regain her balance.  Another touch to her forehead caused the light of the runes to fade, and she once again saw her unmarred image in the mirror.\n\nBanishing the mirror with a thought and a wave of her hand, Danica opened the portal of the Hellgate back into her rooms in Zoraster's complex.  She opened the portal right next to her bed, picking up the bag of her things and tossing it negligently to the floor on the other side of the portal.  Immediately thereafter, she stepped through the portal and fell into her bed, letting the spell lapse.  Danica was asleep almost before the light of the Hellgate had faded from her room.\n\n{*****~~o~~0~~o~~*****}\n\nThe stink of unwashed bodies, rotting food, excrement and death billowed out of the cave.  Zoraster scowled and waved a hand before him, wrapping a bubble of fresh air around him.  The stench from the cave before him was so thick it was almost visible.\n\nThe oppressive miasma now blocked by his magic, Zoraster strode forth into the cave.  He could hear the scrambling of the creatures within, and assumed one that had watched near the entrance was probably alerting the rest of the pitiful vermin.\n\nRaising his hand palm up over his head, Zoraster summoned a bright ball of light to guide his steps.  He strode quickly across the uneven cave floor, dodging the protrusions of stone on the walls and ceiling.  Sneering, he stepped over the litter of excrement and offal that appeared before him in ever-increasing quantities as he moved deeper into the bowels of the earth.  Sighing in disgust, he gave up trying to dodge the foul mess when it became like a carpet upon the stone floor.\n\nThe passage widened steadily as he moved forward, and ahead he could see the opening to the gallery beyond.  Zoraster smiled, knowing that now the signs were in order.  Now, he could steal the power necessary to obtain the stone.  The whisperings in his head and the prophecies all urged him forward.  Stepping out of the passage, he heard screams and hisses as the Wood Trolls within shrank away from the bright light that hovered over Zoraster's head.\n\nThe disgusting creatures cringed along the walls of the cavern, covering their eyes and gibbering in their guttural tongue.  Zoraster surveyed the chamber, finding approximately two score of the filthy creatures inhabited the cave.  The most intelligent of their kind, the Wood Trolls actually had crude pallets cobbled together, as well as tables and chairs strewn haphazardly throughout their rude home.  Gathered here by their god, they were breeding stock that Blorcasir hoped would produce one that could serve his purpose.\n\nAs soon as their eyes adjusted to the light, they of course attacked.  The creatures were savage, and driven by their god to kill.  These were kept tucked away in the cave, not allowed to venture forth by their god, but the instincts of the monsters took over as soon as they realized Zoraster had invaded their domain.\n\nA female leapt forth, her disease-ridden claws and yellow teeth bared.  Zoraster spoke a word and thrust his hand toward the creature.  The Wood Troll exploded in a spray of blood and gore, spattering everything within a wide radius around her.\n\nA male with a club raised his weapon to strike, but Zoraster's next spell froze the creature solid in mid-strike.  It stood like a statue, enveloped in a sheet of clear ice, as the rest approached.\n\nZoraster gestured and spoke words of magic, sending forth blasts of energy, lightning bolts, and balls of fire into the attacking creatures.  Smoke filled the chamber as the creatures died, whimpering and screaming.\n\nThe young, barely as high as Zoraster's knee, charged toward Zoraster en masse.  With a wicked smile on his lips, Zoraster stretched out his hand toward them and sent forth a blazing tongue of flame.  The creatures shriveled and died in the searing heat.\n\nA loud report sounded from the back of the cavern.  Zoraster turned toward the sound and saw a thick cloud of black smoke mixing with the oily haze already hanging in the cave, and Blorcasir stepped forward from within it, screaming in a thunderous voice, \"NO!\"\n\nZoraster smiled, his fingers lovingly caressing something secreted inside his robes.\n\nStalking forward, his face twisted in a mask of rage, the reduced Lord of Murder's voice filled the chamber with a deafening scream, \"YOU WILL DIE MORTAL!  I WILL REND YOUR FLESH AND FEAST UPON YOUR SOUL!\"\n\nThe few remaining Wood Trolls fled toward the back of the cave away from the wrath of their god.  Zoraster stood, unmoved, his magic protecting him from the ear-splitting sound of Blorcasir's rage.\n\n\"I'm terribly sorry, Blork, have I inconvenienced you by ridding the world of these vermin?\"  Zoraster taunted with a smile on his face.",
        "A wicked hooked knife, black as night and dripping with blood, appeared in the hand of the god as he approached, \"YOUR DEATH WILL BE SLOW!  I SHALL SAVOR YOUR SCREAMS!\"\n\nZoraster could feel the power of the god coming against him.  Reduced as he was, Blorcasir was still a god.  His terrible presence beat down upon Zoraster, demanding that he kneel before the Lord of Murder, worshipping him in awe.  Zoraster steeled his will, resisting the mental attack of the god, and drew forth his own black blade from within his robes.  The obelisk turned knife, Godsbane, hummed in anticipation in his grip, breaking Blorcasir's mental power the moment Zoraster revealed it.\n\nBlorcasir paused, his blazing eyes going wide as he felt his power washed away by the blade in Zoraster's hand.  The god held his weapon, ready to strike, but a slight trembling in the god\u2019s hand now marred that terrible sight.\n\n\"On the contrary, I believe I shall savor your screams of impotent rage, godling,\" Zoraster growled, releasing his grip on the knife and causing it to hover before him, pointed at the god.\n\nWith a negligent gesture from Zoraster, the black knife streaked across the few feet separating the Archmage and the god.  A hungry screech erupted from the weapon as it crossed the distance, sinking into the heart of Blorcasir with a sickening crunch.\n\nThe god screamed  \u2013 a terrible sound of agony and rage that tore through Zoraster's defenses and forced him to cover his ears.  Blood trickled from beneath Zoraster's hands as he haltingly stumbled forward toward the Lord of Murder.  The god thrashed and trembled violently, clawing at the blade sunk into his chest.\n\nZoraster let out a scream that was a mixture of pain and triumph, and then lurched forward, grasping the hilt of Godsbane.  The power of an immortal flowed from the blade into Zoraster's body the moment he touched the blade, making him whole once more.  Now both Archmage and god shook violently, one in the final moments of his life, the other from trying to contain the power of a god in his mortal form.\n\nThe dark blade transformed the power of the god into healing energy, enabling the Archmage to contain the power flowing into him.  Zoraster straightened, smiling in triumph, his form no longer shaken by the tremors of power.  Blorcasir only quivered now, the blade sucking his immortal life force and giving it to Zoraster.\n\nZoraster's eyes rolled up in his head as he reveled in the power.  He knew only a small part of it was actually being transferred to him, most was being contained within the fell blade he gripped.  What he gained would be enough, and through Godsbane, he could tap the rest.  The flow of power trickled away, and Zoraster opened his eyes.  He now held Godsbane in open air, a few remaining motes of power being sucked into the blade.\n\nZoraster tilted his head to the side with a curious expression, and then tapped his forehead.  \"How fascinating \u2013 you're in there aren't you Blorcasir?  I hadn't anticipated that.  I only wanted your power to seek the stone, but perhaps I can use you as well.\"\n\nIn his head, the god roared with a terrible rage.  Zoraster chuckled and concentrated on the Godsbane, forcing Blorcasir's consciousness down.  \"You're not really in there, of course, just a piece of you is.  Even my mind could not contain the mind of a god, but enough of you is in every little spark of your power to be conscious.  Fascinating, truly fascinating.  I'll learn a lot about your manipulative brethren from you, Lord of Murder.  It will make them all easier to usurp.  Fear not, pitiful godling, you shall have company soon enough.\"\n\nThen another voice murmured in Zoraster's mind.  This voice was familiar, and had been speaking to him for a long time.  Zoraster chuckled, \"Why, what a splendid idea.  Let us test it, shall we?\"\n\nTurning to one of the cringing Wood Trolls that remained in the cavern, Zoraster concentrated and bent his will to dominating the creature.  It was a worshipper of the dead god, parts of whom now resided within him.  The creature crept forward and prostrated itself before him.  The other two living Wood Trolls did the same.  They growled words of praise and begged for forgiveness.  Zoraster felt a surge in the power he had stolen from Blorcasir.  Concentrating, Zoraster realized he could sense every Wood Troll crawling on the face of the world.\n\n\"Begone, breed like the vermin you are,\" Zoraster commanded the filthy creatures and then turned on his heel.\n\nLaughing, Zoraster left the cave.  The creatures were pitiful, but they were plentiful and savage \u2013 and now they were his to command, all of them.\n\n{*****~~o~~0~~o~~*****}\n\nOnce again, the heavens trembled.\n\nThe gods \u2013 light, dark, and neutral \u2013 felt Blorcasir's death deep in their immortal bodies.  He was not truly dead, as no immortal could ever die, but his corporeal body no longer existed.\n\nLying upon a pile of softest cushions, dressed in a gossamer gown that artfully concealed her perfect body in just the right places, Erotine frowned.  Waving her hand, Erotine dismissed the numerous attendants surrounding her.  Many of her angels and the mortals that had earned a place at her side in life pouted when dismissed by the goddess, but they left without question.\n\n\"This goes too far,\" Erotine mused.  The sultry, contralto tone of her voice gave even those words a sensual overtone.\n\nA deep, equally sensual voice interrupted the musing of the goddess, \"The balance must be restored.\"\n\nWithout looking toward the speaker, Erotine asked, \"At what cost, Gormandal?\"\n\n\"At any cost,\" the god of greed growled, stepping through the beaded curtain that served as a door to Erotine's inner sanctum.\n\n\"Not that.  Not awakening the Godsbane, for nothing else could have rent Blorcasir.  Not seeking that which was before, which could destroy all that is,\" Erotine argued.  As she spoke, the goddess rolled languidly to face Gormandal, revealing her flawless body for tantalizing seconds before the folds of her transparent gown hid her treasures once more.\n\n\"Blorcasir was weak, even the cursed Godsbane will not allow Zoraster to stand against us.  He advances our causes.  He spreads our worship.  Too long have we been forced to seek faithful in the shadows, his efforts allow our servants to step into the light.\"\n\nStroking her hip with her fingertips, Erotine countered, \"He hides from our eyes.\"\n\n\"But not those of our servants, who walk with him.\"\n\nErotine pouted, \"I don't like it.\"  The goddess then rolled over in a sudden movement, tossing her mane of golden hair and flexing the muscles in her perfect, heart-shaped bottom.\n\n\"He is but a mortal.  If he becomes troublesome, I will dispose of him,\" Gormandal responded, walking toward the goddess with his eyes locked upon her body.  The evidence of his godly arousal was obvious, tenting the cloth of gold robe wrapped around his body.\n\n\"I don't like it,\" Erotine repeated, punctuating the statement with a disdainful snort and refusing to face her paramour.  A smile of anticipation decorated her beautiful face, however.\n\nStepping out of his robe, Gormandal inhaled deeply the scent of Erotine's arousal as he knelt on the cushions next to her.  \"Zoraster is my concern,\" he growled, evaporating her gossamer gown with a thought.\n\nTurning to face him, Erotine asked, \"If I do not agree with you?\"  Though the question was full of defiance, Erotine's hand wrapping around his godly phallus delivered a different message, as did the increase in her womanly scent already hovering over them like a fog.\n\n\"Then I shall have to convince you.\"\n\n{*****~~o~~0~~o~~*****}\n\nDanica awoke, refreshed and anxious to determine if she had accomplished her goal.  She sated her hunger with some bread and cheese, and then took a rushed bath.  In a hurry to finish with the task, Danica nicked her legs three times while shaving, something she had not done since she was a teen.  Danica waited, but frowned when the amulet that served as a chain to Zoraster did not react to the wounds.  Apparently, there had to be a certain amount of wounding for it to react, and the nicks did not meet those criteria.\n\nThis did provide Danica with the opportunity to test one of the spells she had learned in the temple of Sekmamun, however.  Chanting the words of the spell, Danica laid her hand over each of the nicks in turn.  A golden light appeared beneath her hand with each touch, and when she removed it, the nicks had closed.\n\nDanica smiled, wiped away the little trickles of blood, and then rose up out of the water.  A short while later, dressed in a simple blouse and skirt, Danica deactivated the wards over her rooms, planning to go find Celes.  A knock sounded on her door almost as soon as the wards dropped.\n\nOpening the door, Danica discovered it was Celes who had knocked.  \"Come in.  I was hoping you could do me a favor, Celes.\"\n\nCeles had been about to blurt out her feelings for Danica, but instead asked, \"What do you need?\"\n\n\"I'll have to show you, it will be difficult to explain,\" Danica said aloud.  Right on the heels of that, Danica sent a thought to Celes, I don't want to reveal anything to Zoraster.  I'll explain in the Hellgate.\n\nCeles mentally answered, Okay.\n\nDanica restored the defenses on her rooms, and then cast her spell.  The Hellgate portal opened, and Danica stepped in with Celes right behind her.  Danica closed the opening of the portal as soon as Celes was through.\n\n\"I want to test something I just finished.  It will be easier to show you than explain it, really,\" Danica said, starting to remove her rings.\n\nCeles cocked her head to the side and said, \"Alright dearie, you've piqued my curiosity.\"\n\nDanica winked and manifested a table to lay her magical jewelry on.  She took out her hood ring last, feeling strangely naked without all her defensive magic in place.\n\nUnnoticed, Celes closed her eyes when Danica flipped up the front of her skirt to remove the hood ring.  As soon as the skirt fell again, Celes asked, \"Where are all the beasties?\"\n\nDanica scowled and replied, \"We have a little understanding now.  They don't show their faces, and I won't destroy them.  They irritated me.  Are you ready?  This is going to be a little startling.\"\n\nCeles shrugged, \"As ready as I can be, not knowing what in the world you're planning.\"\n\nDanica laughed, and touched the rune on her forehead, causing the runes on her body to blaze into powder blue light.\n\nCeles blew out a long whistle, \"Dearie, how in the world did you manage this without letting on to anyone?\"  Looking at the complicated rune structures she could see, Celes knew there was no way, in only the short period of time Danica had been out of touch, to complete them all.  Thinking about where they were, Celes speculated, \"You manipulated time here in the Hellgate, didn't you?\"\n\nDanica nodded, \"I've been working on this for a little over a month, but only a couple of weeks passed on the outside.  The demon gave me the idea, because runes might be able to turn aside demon powers where Art can't.  This can't be taken away from me like a ring, either.\"\n\n\"I'm guessing you want me to hurl some magic at you and see if it was worth the effort.\"\n\n\"Yes, that's why I took off everything.  It will only be the runes protecting me.  Start with something small, I'm really not in the mood to trust the first test to a lightning bolt or a fireball.\"\n\nCeles laughed, \"I don't think you give yourself enough credit, but we'll start with a magic missile.\"\n\nDanica spread her arms wide and said, \"Let me have it,\" with a laugh.\n\nCeles cast the spell, and the bolt of light she summoned streaked toward Danica, dissolving into motes of power before it could reach the glowing woman.  More spells followed, steadily increasing in power.  The runes turned aside each magical attack, regardless of the power.\n\nCeles asked, \"Do you want to give a lightning bolt a go?\"\n\nAn apprehensive smile crossed Danica's face, \"Do you have any healing potions with you, just in case?\"\n\nCeles waved her hand in a dismissive gesture, \"You've obviously done it right, this is just confirmation of what I'm sure you already know.  I'm going to put everything I've got into this one.\"\n\nCeles cast the spell, the angry forks of electrical energy seeking Danica's flesh with hungry power.  Like all the spells before, the powerful stroke simply dissolved upon encountering Danica's runic defenses.\n\nAt first, Celes wondered why she wasn't swooning from putting so much power into the lightning bolt.  Then she remembered that old flesh did not imprison her here.  That turned her mind back to the reason she had originally sought out Danica.\n\nDanica laughed, \"I guess it works.  Now to see if the attack runes work.\"\n\nDistracted once again, mostly because she was afraid to reveal her feelings to Danica, Celes asked, \"Attack magic too?  Just how extensive are those rune structures?\"\n\n\"I have little comfort magics, and other things too.  The runes cover almost every inch of me.  Once I got started, I decided there wasn't much sense in halfway measures,\" Danica replied.\n\n\"You've come a long way since I first met you,\" Celes noted with just a little awe in her voice.\n\n\"I would never have believed this a few years ago.  I struggled to learn the fireball and lightning bolt, and now here I am using magic I never even dreamed of.\"\n\nCeles winked, lapsing into the brogue she had used when the two women had first met, \"Well, let's be seein' some wanton destruction then, dearie!\"\n\nDanica laughed and turned toward an unoffending tree.  Concentrating, she spread her fingers wide and lightning leapt from them to blacken the bark of the tree.  Raising her hand and turning it palm upward, another thought summoned a ball of fire that hovered just over her hand.  Hurling it at the tree, it exploded into a burst of flame.\n\nMore magic leapt forth as Danica tested the runes scribed on her flesh, each working exactly as they should.  After freezing the surface of the pool, Danica felt the runes begin to itch and burn every so slightly.\n\nRubbing her arms, Danica said, \"I guess there are limits, they're starting to irritate me.\"\n\n\"That's a lot of power running through you, Danica.  You're not an enchanted staff, you know?  I'd say you can handle more than enough to get out of a dangerous situation to fall back on your Art and your mental powers, though.\"\n\nDanica asked, \"Do you think it will work against demon powers?  What about yours?\"\n\nCeles furrowed her brow, \"Your idea makes sense.  True Runes have a lot of power, and they're not as specialized as defenses of the Art.  I can't say for sure, but it should work.  I couldn't use my powers against you \u2013 I remember that much from my mother's teaching.  The power will only work against evil creatures, people with evil intentions, and random objects if I don't learn how to control it.  That's why I have to be careful.  I couldn't use my power on you, but I could accidentally drop something on your head.\"\n\nDanica lifted her chin, looking as if she were listening to something.  \"I just felt someone brush up against my defenses.\"  Concentrating for a moment, she said, \"It's Marlena.  I guess that part works too.  I linked my room's defenses to the rune structures when I did all this.  I can sense them even in here.  Let's go back and see what she needs.\"\n\nCeles nodded, a mixture of relief and disappointment running through her.  She wanted desperately to remove the burden of her secret, but at the same time, she was afraid to do so.\n\nDanica opened the portal and they stepped back into Danica's rooms once more.  As soon as they were through the portal, Danica deactivated her warding magic and went to open the door.\n\nIt took only one look at Marlena for Danica and Celes to know something was wrong \u2013 terribly wrong.  Marlena's face lacked any expression, and she had her arms wrapped protectively around her.\n\nDanica laid a hand on Marlena's shoulder and guided her inside.  \"What's wrong, Marlena?\"\n\nMarlena shivered, squeezing her arms more tightly about her.  \"I don't know.  I woke up and I just felt...\"  Marlena's brow furrowed in thought for a moment before she continued, \"Violated.  Dirty.  I've bathed twice, and the feeling just won't go away.  My stomach is in knots, and I can't stop crying.\"\n\n\"Sit down, Marlena, I'll get you something for your stomach,\" Danica offered.\n\nMarlena nodded, smiling weakly.\n\nCeles sat down across from Marlena, her eyes narrowed.  \"I don't like this.  This stinks of some kind of tampering.  Did you have any bad dreams?\"\n\nMarlena shook her head in the negative, and seemed to relax a little.  Letting her hands fall into her lap, she replied, \"No, I just woke up this morning ill and feeling disgusted with myself.\"\n\nDanica walked back into the room from her lab with a small vial.  \"This should settle your stomach.\"\n\n\"Thank you,\" Marlena said, quickly drinking the potion down.\n\n\"You're better at it than me, could you...?\"  Celes nodded toward Marlena.\n\nDanica asked Marlena, \"Do you want me to look and see if there are any enchantments, or things suppressed in your mind?\"\n\n\"I'll do anything to make this feeling go away,\" Marlena replied with a sniffle.\n\nDanica concentrated, as did Celes.  After a few moments, Danica took a deep breath and said, \"I don't see any unusual magic working against you.\"\n\nCeles confirmed, \"Nor I.\"\n\n\"Let me see if there's anything else going on.  I heard Celes while I was getting the potion, and this does sound like some sort of tampering.\"\n\nMarlena nodded in response to Danica's words, and then closed her eyes.  Danica likewise closed her eyes in concentration, casting the telepathy spell to cover the use of her mental powers.\n\nIt took only a moment for Danica to appear in Marlena's mind.  The whole world inside Marlena's head was trembling, as if shaken by an earthquake.  Danica could feel the source of that shaking, and moved quickly toward it.  Danica gasped when she saw the source of Marlena's trouble.\n\nOh, Marlena, Danica thought.  She then reached out with her mind to try and contact Celes, unsure what to do.\n\nDanica and Celes were both startled when a hazy image of Celes, young as she should be, appeared standing next to Danica in Marlena's mental world.  Celes looked around for a moment and asked, How did you do that?\n\nDanica shrugged and replied, I don't know.  I just meant to contact you, but look there.\n\nCeles turned to look where Danica was pointing and was just as horrified as Danica had been.  The scene played over and over, accelerated so the entire disturbing memory repeated itself dozens of times in seconds.  Both women could plainly feel Marlena's despair, hidden beneath a layer of intense, unnatural arousal, as she pleasured and received pleasure from Camilla.\n\nCeles asked, Is it a memory?  A dream?\n\nDanica replied, I don't know.  It's so real, and it's obviously the source of Marlena's problem.  Marlena doesn't seem to know it's here.\n\nCeles said, I can sense that too.  This is really disconcerting.\n\nDanica suddenly knew exactly what to do.  The solution just appeared in her mind, as if it had been hiding somewhere waiting for the proper moment to emerge.  I think I know what to do.\n\nDo you think you could put me back in my body first?\n\nDanica concentrated, and the image of Celes next to her vanished.  Danica stood for a moment, wondering how she had pulled Celes in, and wondering how she knew what to do to help Marlena.  After a moment, she realized that her mind was constantly reaching out to every corner of Marlena's.  Her main consciousness centered on what her eyes could see, but other parts of her mind were working without direction to learn things apparently.",
        "Staring hard at the memory, Danica steeled her will.  She felt an intense pressure building within her, somewhat similar to when she had used mental blasts to stun foes before.  When the pressure grew almost unbearable, Danica released it and destroyed the memory \u2013 or whatever it was \u2013 before her.\n\nThe tattered remnants of the terrible scene vanished into misty vapors, and Danica retreated from Marlena's mind at the same time.\n\nDanica opened her eyes, and saw Marlena do the same.  Marlena then said, \"The feeling is gone.  Whatever you did must have worked.  What was it?\"\n\nDanica shook her head.  \"I think you're better off not knowing.  It shouldn't bother you any more.\"\n\nDanica heard Celes thinking to her, What did you do?\n\nDanica thought back, I destroyed the memory.\n\nThere was a note of apprehension in Celes mental voice when she asked, How did you pull me in?\n\nDanica shrugged, both physically and mentally.  I don't know.  I just meant to ask you for advice.\n\n\"We should probably stay with you for a while, Marlena,\" Celes suggested.\n\n\"Thank you,\" Marlena responded.\n\nDanica then remembered something, \"I didn't even think to ask you what you wanted when you came in Celes.\"\n\nCeles answered, \"It was nothing important,\" but something in her tone gave Danica the impression that it wasn't wholly true.\n\n\"I'll go make us some tea,\" Danica said, rising up and heading for the kitchen.\n\n{*****~~o~~0~~o~~*****}\n\nSeated at a stone table, a bald, silver-bearded man meditated.  Then he opened his eyes, taking a deep breath.\n\nThe woman seated next to him, beautiful and tawny-haired, reached out to touch the old man's frail shoulder, \"Master, is this wise?\"\n\nThe man's careworn face brightened with a smile, \"It is necessary.\"\n\n\"I don't understand,\" the woman responded, obvious concern in her voice.\n\nPatting her dainty hands, the old man said, \"When the time comes, you will understand.  For now, you must trust me, child.\"\n\nBowing her head humbly, the woman replied, \"Of course, Master.\"\n\n{*****~~o~~0~~o~~*****}\n\nThe scene in the mirror before Zoraster, the transformation of yet another whore into one of his subservient Arians, suddenly lost all meaning.\n\nSitting bolt upright in is chair, Zoraster snarled.  Someone was scrying upon him.  The person made no effort to hide the probe, and Zoraster's numerous defenses failed to give even a moment's pause to the questing mind seeking him.\n\nGrowling out the words of a spell, Zoraster traced the magic that now touched him.  He saw an island and the entrance to a grotto, but he could penetrate no farther.  Something prevented him from pressing onward toward the source of the scrying magic.  Reaching into his robes, Zoraster withdrew the Godsbane, now in its obelisk form once more, and drew upon the power of the god within it.\n\nZoraster started when he felt the obelisk recoil.  His magic dissolved instantly, slamming Zoraster's consciousness back into the reality of his scrying room once more.\n\nSitting the obelisk upon the table beside him, Zoraster frowned at it.  The thing vibrated ever so slightly, and it flatly refused to open up the power trapped within it to him.\n\n\"Is that you, Lord of Murder, seeking to defy me?\"  Zoraster demanded.\n\nIt was not the voice of Blorcasir that answered him, however, but another voice that spoke not in words, but in images and feelings.\n\nOne eyebrow rose, and then Zoraster's eyes narrowed in anger.  Leaving the obelisk on the table, Zoraster swept out of the room, barking a command that activated the magical defenses as he left.\n\n{*****~~o~~0~~o~~*****}\n\nA quick inventory of Danica's kitchen and lab let her know that she was low on several herbs for use in both cooking and her magic.  Knowing she could obtain fresh stores of some of them from Andrea, Danica immediately made her way to the young woman's house on the grounds.\n\nKnocking on the door, Danica heard, Come in, and opened the door.\n\nDanica's eyes went wide when she saw Brandon, groaning in release, with Andrea quivering in orgasm beneath him.  With a sharp oath, Brandon jerked free of Andrea's warm embrace, slinging strings of sticky cream from his still-erect organ as he turned.  Andrea yelped as he pulled free from her, curling up into a quivering ball, her hands pressed tightly over her sex.\n\nDanica turned away from the couple and shut the door quickly, \"I'm so sorry, I could have sworn I heard you say, come in, Andrea.\"\n\nWhen she turned back around, Danica could see a bright flush in the quivering woman's cheeks.  \"I think I said, I'm coming, actually,\" Andrea moaned and then let out an embarrassed laugh.\n\nBrandon leaned up against the wall, breathing heavily, \"You scared me half to death,\" he muttered.\n\n\"I'm sorry.\"  Danica laughed.\n\n\"Don't be sorry, come here and clean us up,\" Andrea purred.  After a moment, she broke out into embarrassed laughter again.\n\nDanica licked her lips and said, \"That was good, but you sort of ruined it with the laugh,\" while walking toward the bed and pulling off her clothes.\n\n\"I just can't be wanton, it makes me feel silly,\" Andrea said, and then leaned up slightly to share a kiss with Danica.\n\nDanica finished removing her clothing, and then turned to the still weak-kneed Brandon.  \"Hello Brandon,\" she said with a wicked grin, and then sank down to her knees.\n\nBrandon groaned and gasped as Danica's mouth teased his oversensitive flesh, and he pushed her away after only a few moments.  \"Damn, you'll cut my legs out from under me!\"\n\nDanica grinned and licked her lips, patting his softening cock affectionately with her hand.  \"You just relax for a while then,\" she said, rising up and crawling onto the bed.\n\nAndrea quivered in anticipation as she parted her legs for Danica to slide between them.\n\nBrandon sat down on the edge of the bed, where he had a good view of Danica's tongue roaming over Andrea's nether lips.  He knew that in absence of the more prominent appendage he possessed, two women at play must have some tricks they used with their tongues, and he meant to learn them.\n\nIt was one of the most enjoyable studies he had ever undertaken.\n\n{*****~~o~~0~~o~~*****}\n\nSome hours later, all three awakened from the short doze that had claimed them after their lovemaking.  They lay together, talking softly, still aglow with pleasure.\n\nAfter a while, completely unrelated to what they had been chatting about, Andrea asked, \"Did Celes get to talk to you?\"\n\nDanica stretched, feeling a little chill run through her body.  She was lying with two very arousing, naked people, and it was giving her ideas again, \"About what?\"\n\nSomewhat evasively, Andrea replied, \"The two of you need to talk about something.\"\n\n\"She's in love with you, you know,\" Brandon said in an off-hand way.\n\nDanica sat up on the bed, surprise in her voice, \"What?\"\n\n\"She's in love with you \u2013 Celes I mean,\" Brandon repeated.\n\n\"What makes you think that?  What do you know, Andrea?\"\n\nAndrea frowned for a moment, and then slapped Brandon's chest, but not with any real strength.\n\nBrandon shrugged and asked, \"What did I do?\"\n\nAndrea sighed, \"That's not the sort of thing you just blurt out, Brandon.  Men!\"\n\nBrandon sheepishly apologized, \"Sorry.\"\n\n\"What's done is done.  He's right, Danica, Celes thinks she's falling in love with you,\" Andrea confirmed.\n\nIt took Danica a moment to digest that information, and to realize that really she knew it already.  \"I don't know what to do.  I'm not sure how I feel, but there's something there too.\"\n\n\"You need to talk about it.  Both of you walk around each other like you're on eggshells.  I told Celes the same thing,\" Andrea responded.\n\nNow it was Danica's turn to sigh, \"It's not that easy.\"\n\n\"Yes it is,\" Andrea disagreed firmly, \"You both need to get this out in the open.  Neither of you is going to know how to deal with it until you do.\"\n\nDanica smiled, \"You've grown up.\"\n\nAndrea grinned back, \"You helped.\"\n\nBrandon asked, \"Am I forgiven?\"\n\nAndrea and Danica shared a wicked grin and then Danica replied, \"We'll think about it.\"\n\n\"Oh, dear gods,\" Brandon groaned as the two women leaned over him to tease him with their tongues.  He felt the twitches of life in his cock that signaled he would be hard again shortly, and he knew he was going to be throbbing painfully when it happened.\n\nLooking at the two women lustily lapping his slowly hardening cock, a wealth of blonde and auburn hair tickling him, he didn't really care.\n\n{*****~~o~~0~~o~~*****}\n\nWhile the opening of the grotto had prevented Zoraster from penetrating the gloomy depths within, it had not prevented Zoraster from discerning the location of the island.  With the stolen power of a god coursing through him, the Archmage was able to fix the location easily in is mind.\n\nRare for the powerful wizard, Zoraster had gathered up objects of power.  Rings now adorned his fingers, and wands hung in secret pockets beneath his robes.  He had no intention of being unprepared in dealing with what was to come.  The impressions from the voice in his mind had been indistinct, but carried an obvious warning note.  They also hinted at something Zoraster had never considered, although he knew now that such was logical.\n\nSpeaking the words of a spell, Zoraster vanished from his sanctum and appeared on the narrow, pebbled beach of the isle.  The narrow opening to the grotto was easily visible, and no enchantments appeared to Zoraster's second sight.  Walking closer, Zoraster felt an odd compulsion to turn around and return to his domicile.  He actually started the gestures of the spell to do so, but noticed that the feeling of disgust that had assaulted him wavered as he did so.\n\nScowling, Zoraster steeled his will and took a few more steps toward the dark opening in the rocks.  The sensation returned, stronger this time, but Zoraster continued forward, determined to ignore the attempt to warn him away.\n\nAgain concentrating in the second sight, Zoraster stared hard at the entrance as he drew closer.  As before, no enchantments or wards of any sort were visible.  Stopping a dozen steps from the entrance, Zoraster cast a spell and attempted to scry within the cave.  As before, something thwarted his efforts.\n\nGrowling in anger, Zoraster crossed the distance to the cave with quick steps.  Standing directly in front of the entrance, he stared into the darkness beyond.  Nothing more than weather-beaten rocks met his eyes.\n\nReaching out, Zoraster felt a barrier over the mouth of the cave.  Pressing forward, he found that it did not yield to his touch whatsoever.  Still no evidence of the warding barrier revealed itself to his magical sight.\n\nStepping back, Zoraster worked his Art on the wall of force that barred his entry into the cave.  Spells of divining, opening, and destruction all slid off the invisible barrier as if they were no more than raindrops.  Even enhanced by Blorcasir's power, the barrier stood against him.\n\nA man slowly moved from the shadows within the cave, approaching the entrance.  Zoraster let his hands drop to his side, ceasing to make the gestures of the disintegration spell he planned to attack the barrier with next.\n\nZoraster examined the man as the sunlight from the entrance fell upon him.  The man was ancient, thin and bent, his steps aided by an unadorned staff of what appeared to be plain driftwood.  A long silver beard decorated the man's face, while only sparse patches of hair in a ring just above his ears adorned his head.  The effort of walking toward the entrance of the cave appeared to be difficult for the old man.\n\n\"You cannot enter.  None who have been touched by the Dark may pass this barrier, nor any who covet the stone,\" wheezed the old man.  He now stood just on the other side of the invisible barrier.\n\n\"We shall see about that, old man,\" Zoraster growled.\n\nA faintly amused smile spread across the old man's face, \"If it pleases you to futilely hurl your Art against fate, feel free to do so.\"\n\n\"Who are you, bent old relic?\"\n\n\"I am the guardian and caretaker.\"\n\n\"You are a fool, to stand in my way,\" Zoraster retorted.\n\n\"No, I would be a fool not to stand in your way.  Your efforts will avail you not.\"\n\nWith that, the old man turned and hobbled back into the darkness.\n\nZoraster again hurled his Art at the barrier, aimed at the bent back of the slowly retreating man.  The barrier blocked Zoraster's magic, proving the old man's admonition.\n\n\"I will have what you hide,\" Zoraster snarled, \"You have revealed the key in your doddering rambling.\"\n\nWith those words, Zoraster cast his spell and traveled the corridors of magic once again.\n\n{*****~~o~~0~~o~~*****}\n\nDanica was distracted, unable to think about anything except the revelation of Celes' feelings for her.  Returning to the main building from Andrea's cottage, her knees still a little wobbly, Danica knew the young woman was right.  She and Celes needed to talk \u2013 and soon.\n\nDanica didn't bother going to her room first; she simply stopped at Celes' door and knocked.  When Celes answered the door, Danica felt the wave of emotions hit her.  Fear, desire, and a heart-wrenching wave of despair swept over Danica from the woman standing before her.  Danica forcefully pulled her mind away from the emotions, saying, \"Can you come with me back to my rooms?\"\n\n\"I wanted to talk to you about something anyway,\" Celes replied.\n\nDanica smiled and nodded, and Celes followed her through the twisting halls of Zoraster's seat of power.\n\nDanica deactivated her wards and opened the door.  As soon as they were both inside, Danica closed the door and gestured toward the couch.  \"Let's sit down and talk.\"\n\nSuch was not to be the case, however.  Zoraster appeared in a flash of light within the room.  His eyes were wild, his mouth twisted into an angry grimace.  Looking at the two women, he growled, \"Good, I will not have to hunt you both down.  I have a task for you, which is of the utmost importance.  You will leave immediately.\"\n\nZoraster's sudden appearance and the obvious rage, barely contained, startled both women.  Danica asked, \"Do we need to make any preparations?  What are we supposed to be doing?\"\n\n\"You will take what that old man guards, a stone of power.  The only preparations you need to make are for never-ending torture if you fail,\" Zoraster barked, flecks of spittle bursting from his mouth as he spoke.\n\n\"We have to know where we're going,\" Danica said cautiously, not wanting to trigger the explosion that obviously was near release in the mad Archmage.\n\nZoraster snorted and closed his eyes.  Danica yelped when she felt his mind thrust an image into her head.  It was a small island with a pebbled beach, and a cave along the rocky edge \u2013 a grotto.  Instantly, she knew exactly where it was, and knew she could teleport there with her magic.  Celes cried out when Zoraster thrust the image into her mind as well.\n\n\"Now, go.  Take the stone from that decrepit old guardian.  If you have not left within the hour, your pain shall begin then.\"\n\nZoraster then vanished.\n\nShaken, both women looked at each other.  They had seen Zoraster angry before, but this was above and beyond anything they had witnessed before.  \"We should get anything that we might need,\" Danica suggested.\n\n\"Quickly,\" Celes added.\n\n{*****~~o~~0~~o~~*****}\n\nDanica and Celes appeared on the beach, warily surveying their surroundings.  The small, windswept isle presented no obvious danger, either magical or mundane.  It was obvious that the grotto entrance before them was their destination, despite having no real instructions.\n\n\"I guess that's it,\" Danica muttered.\n\n\"We have no idea what we're wandering into here,\" Celes warned.\n\nBoth women began to chant, bringing numerous magical defenses into being.  Not knowing what they might face inside the grotto, they prepared for anything they could think of.  Wrapped in magic, they approached the dark opening.\n\nWhen they were a few feet from the entrance, they paused and checked for magical defenses.  Danica looked at Celes and said, \"I don't see any wards.\"\n\nCeles shook her head, \"Same here.\"\n\nDanica shrugged and nodded toward the dark opening.  Still cautious, the women approached the cave.  Once again, they paused immediately in front of the dark opening in the rock, peering within.\n\n\"I still don't see anything, just weathered rock,\" Celes observed.\n\nDanica nodded her agreement.  \"I guess we should just go in.  I'll make some light.\"\n\nA few words and gestures from Danica conjured up a glowing ball of light that hovered just over her head.  Upon stepping through the portal, they both felt something.\n\nDanica paused just inside the entrance, \"What was that?\"\n\n\"It felt like walking into a dispell, but our spells are still working,\" Celes confirmed.\n\n\"I can still feel all my magic items too.  No, wait...\"\n\nCeles guessed what Danica had discovered.  \"Zoraster's damn chains are dead.\"\n\n\"I can live with that,\" Danica chuckled.\n\n\"Our Art is still working, so let's go on.\"\n\nThe short passageway bent not far inside, and when the pair turned that corner, a small cavern opened up.  The dancing glow of Danica's light revealed another passageway off to one side, reaching deeper into the island.\n\n\"This isn't natural,\" Celes noted.\n\n\"It all slopes down.  It should be full of seawater, and it's dry as a bone,\" Danica agreed.\n\n\"It looks like it was shaped by water, but there's no way water did this.\"\n\n\"I guess we go on \u2013 there's no guardian here.\"\n\nCeles nodded her agreement, and they walked toward the new passageway.  As they approached, they could tell the passageway sloped gently deep into the earth.\n\nDanica peered down into the passageway, sending her light a short distance down the slope.  \"We're going to have to walk single file, and that looks like it goes on forever.  I don't like it.\"\n\nCeles squinted, looking down the passageway, \"We don't have a lot of choice.  We'll just have to trust our magic.\"\n\nDanica kept her light in front of them as they descended.  The slope was gentle, and the floor smoothed as they progressed.  The deeper they went, the more obvious it became that the cavern was unnatural.  After they had traveled a little over three hundred paces, Danica could see her light bobbing at the entrance to another cavern.\n\n\"About all we can do is be ready,\" Celes whispered, laying her hand on Danica's shoulder.\n\nDanica looked back over her shoulder, nodded, and then proceeded down to the cavern.\n\nUpon peering through the opening, any lingering doubt as to the nature of this deep grotto vanished.  Here, the walls were smooth and square, obviously worked.  Carpets lined the floor, and there was a stone table, heavy with food, in the center of the room.\n\nA voice issued from a doorway to the right of the table, \"Welcome, I've been expecting you.\"\n\nDanica and Celes glanced at each other, a little surprised by the warmth in that greeting, and the knowledge that they were obviously expected.  The speaker stepped out from the doorway a moment later, hobbling forward with the aid of a plain walking staff.\n\n\"You need not trouble yourself with maintaining your formidable shields, no harm will befall you here,\" the old man declared, smiling as he moved toward the table.  Upon reaching it, he said, \"Please, come break your fast.  I rarely have visitors, so please forgive me if I am a poor host.\"  He then sat down with a relieved sigh in one of the four cushioned chairs surrounding the table.\n\nDanica stepped forward into the room.  \"You knew we were coming?\"\n\n\"I knew someone was coming.  I know who ordered you to come, and I know why you are here,\" the old man replied.\n\nCeles slipped into her put-upon accent, \"And ye're still askin' us ta be sittin' ta sup with ye?\"",
        "\"I feel there is no need to be rude to any guest who passes through my humble door.\"\n\nDanica concentrated on the old man, brushing up against his mind with her mental powers.  After a moment, she thought to Celes, He doesn't have any intention of harming us.  He is the guardian, and he genuinely wants us to sit and eat with him.\n\nThe old man chuckled, broken by a cough, before he replied, \"Now that you have confirmed my intentions, will you join me?\"\n\nCeles began, \"How did ye...\"\n\nThe old man tapped his forehead with one finger.  \"I have my ways.  I'm old.  I've had a lot of time to learn things, Celes.  You may call me Tam.\"\n\nDanica shrugged and let her magical defenses fall.  Celes looked at her with alarm for a moment, but then pursed her lips and did the same.  They walked to the table and sat down across from the old man called Tam.\n\n\"If'n ye're knowin' why we're here...\"\n\nTam raised a shaking hand before him.  \"Please, let us eat first.  I will show you what you seek once we have eaten.\"\n\n\"We may as well eat and talk freely, Celes.  Tam here seems to know what we're thinking anyway.\"\n\n\"Please, feel free to use your magic and ascertain the food is safe.  I assure you it is, but I'm sure it will set you at ease to know without a doubt.\"\n\n\"I'll be doin' that fer sure, old one,\" Celes said, and then cast her spell.\n\nTam smiled and gestured to the table once Celes completed her spell, confirming what he had just told them.  He then started to pour wine from an earthenware pitcher, appearing to have some difficulty with the heavy container.\n\nDanica rose and said, \"Let me help you with that.\"\n\nThe old man grinned.  \"Oh, but you are a dear woman.  I fear I'm not as strong as I once was.\"\n\nCeles was still wary, but thus far, the old man had given them no reason to be afraid.  She reached out and picked up a small, glazed wing of fowl, tasting it and opening her eyes in surprise.  The meat virtually fell off the bone, and the spicy-sweet taste almost made her quiver.\n\nTam chuckled.  \"I'll be sure to convey your compliments to Vellana, or you may do so yourself when you meet her later.\"\n\nDanica finished pouring the wine, distributed the cups, and then sat back down.  The smell from the various dishes was making her mouth water, and she began to fill her plate.  After another moment's hesitation, Celes did the same, taking three of the wings before anything else.\n\n{*****~~o~~0~~o~~*****}\n\nZoraster sat, calmly sipping wine, having mastered his anger shortly after ordering Danica and Celes to their task.  He watched as the women entered the grotto, and then the mirror went dark.\n\nCurling his finger in a chain hanging around his neck, Zoraster withdrew an amulet, very similar to those that hung between the breasts of both Danica and Celes.  As he had expected, the connection to the powerful amulets was also broken.  He was blind to what transpired within the grotto.\n\nTaking another sip of wine, Zoraster banished the magic of the mirror.  He would know instantly when the women emerged from the protection of the grotto, and then he would discover if they were successful.  In truth, it mattered not.\n\nThe stone was beyond the control of the common mortal grubs that scurried over the planet, caught up in the great game of the gods, and it certainly would not bend to one of those corrupt divinities.  The fact that the stone he sought had a twin, a balancing opposite, was logical, of course.  It was only his anger, stemming from the barrier preventing him from entering the grotto that had prompted him to send Danica and Celes to take it.\n\nThey would likely fail, and he would punish them, though certainly not to the extent he had considered at the point he had dispatched them.  The pair could likely use another reminder of their place, regardless.  They were both developing streaks of independence that, while it made them more useful, also made them dangerous.\n\nIf they happened to die, their clones always awaited to house their souls once more, as he had done with Camilla.\n\nThe guardian of that grotto would simply have unexpected help, should Danica and Celes fail.  Zoraster planned to ensure that no person who set foot on that island would survive to enter the cave, until such time as he was prepared to seize the stone.\n\n{*****~~o~~0~~o~~*****}\n\nThe meal had been beyond compare, and the wine served with it was some of the best Danica had ever tasted.  The beverage was easily on a par with Boldheart Red, widely considered the epitome of fine wines.  Both Danica and Celes were full and somewhat lethargic when they finished eating.\n\nOld Tam allowed them a short time to let the food settle, and then rose from the table.  \"I expect you would like to see what you were sent here to retrieve.\"\n\nCeles narrowed her eyes.  \"I'm not fer understandin' why ye're bein' so accomodatin', old 'un.  I'm not fer playin' games.\"\n\nThe aged guardian smiled and said, \"In truth, I do enjoy the company.  Second, none who is of dark intent can enter my humble abode, as Zoraster discovered.  Despite the fact you have been ordered to take what I guard, you harbor no darkness in your souls.  Finally, I do believe that which I guard is beyond your reach.\"\n\nDanica shrugged and stood up.  \"That's simple enough to understand.  Well, let's go see what we were sent here to steal then.\"\n\nCeles' head snapped toward Danica, an irritated scowl on her face.\n\nDanica simply smiled.  \"He knows our names, he knows Zoraster, and he knows why we're here.  There's little sense in trying to be sneaky.\"\n\nCeles' expression softened, and she nodded her agreement before rising as well.\n\n\"Good, once you've had a look, I'll have Vellana show you to your room.  It is yours for as long as you are here.  If you will follow me,\" Tam directed, making a beckoning gesture as he turned away from the table.\n\nThere were numerous doors branching off from the passage down which the guardian led Danica and Celes.  The place would have appeared much as a hallway in any stone structure, except there were no fitted blocks, only smooth hewn stone.  Torches lit the hall, but the smoke and dark stains usually caused by that most elemental of light sources were nowhere in evidence.\n\nAt the end of the hallway, Danica could see a set of ornate double doors, twice again the height of a man \u2013 ironbound, and carved all over with delicate scrollwork.  When the old man reached the doors, he laid his hand on them and bowed his head as if in benediction, and then gently pushed.\n\nThe massive doors swung smoothly open from nothing more than that feeble push of his shaking hand.  From within the room radiated a bright, white glow.  Tam stepped into the room, again beckoning the two women to follow.\n\nThe room was small, no bigger than a bedroom, and the source of light was directly in front of the door at the back of the room.  Within a niche carved into the stone was a brightly glowing point of light, about the size of a walnut.  The light was brilliant enough that Danica could discern little about the object that exuded the luminescence.  Surrounding the stone was a glowing sphere of light, about the size of a man's head.\n\n\"The stone,\" Tam said.\n\nDanica and Celes had already slipped into the second sight before Tam spoke the words, of course.  They sought traps and defenses, but found none.  There were no runes carved in the walls, and the glowing sphere, while obviously possessing power, had no discernable source.\n\nThe stone, as Tam called it, exuded a sense of power, and of peace.  There was a musical tinkling in the air, although it did not appear to be a real sound heard with the ears.\n\nThe elderly guardian explained, \"The sphere protects the stone, and is bound to my life.  So long as I breathe, neither man nor god can breach that barrier.\"\n\n\"What is it?\"  Danica asked in wonder.\n\nThe old man smiled.  \"In time, you may discover that.  My words could never do it justice, only knowing it can do that.\"\n\nTam allowed them to stare at the stone, basking in the peace that flowed from it for a few moments.  He knew perfectly well the feeling that came over anyone who saw the stone for the first time.\n\n\"Master,\" the tawny-haired Vellana said from the doorway behind them.\n\n\"Ah, Vellana, please show our guests to their room,\" Tam said to her.\n\nVellana responded, \"Of course, Master.\" She then turned toward the enraptured women and said, \"If you will both follow me.\"\n\nAt first, Danica didn't even register the woman's presence in the room.  The sensation that washed over her from the stone was overpowering, and the rest of the world felt very distant and surreal.  Eventually, the words crept through to her, and she turned toward the voice behind her.  Celes turned at the same time.\n\nVellana gestured with a small, fragile hand, inviting them to exit the room before her.\n\nDanica and Celes left the room, but not without looking back over their shoulder at the stone once more as they exited the room.  The old man had sat down upon the floor in front of the stone, his head again bowed.\n\nVellana then closed the doors, blocking the view.  She said, \"Follow me,\" and walked past the two women down the hall.  The tone of her voice delivered numerous messages with those two simple words, and the strongest message was one of distrust.\n\nDanica and Celes followed the willow-thin woman down the hall a short distance, and then Vellana stopped in front of a door.  The door was identical to all the others, a simple, sturdy wooden portal.\n\nVellana opened the door and told them, \"This is your room.  A bath has been drawn, and you need only pull the bell pull next to the bed to summon me.\"\n\nWith that, Vellana turned and walked away.\n\nDanica turned toward the retreating woman, pursing her lips and thinking, How rude!\n\n\"Ain't she just a spot o' sunshine,\" Celes muttered, and then snorted before walking into the room.  Danica followed Celes into the room, and then closed the door behind them.\n\n\"That feeling from the stone grows weaker the farther you get from it,\" Celes observed.  I was almost unconscious in there with it, but now that we're behind closed doors again, I don't really feel it.\"\n\nDanica asked, \"Did you see any runes \u2013 any defenses at all?\"\n\n\"No \u2013 nothing \u2013 but as soon as the old man said that the protection was his life, I could see the tendrils of power leading from him to the sphere.  I think he's telling the truth.\"\n\n\"There has to be another way, Celes.\"\n\nCeles' shoulders slumped.  \"I don't know, Danica.  That thing and its shield are like nothing I've ever seen before.  What about you?\"\n\n\"Me either.  It isn't magic, there's absolutely no evidence of that.  Now that you've mentioned it, I could see the power flowing from him to the sphere too.\"\n\n\"It may be that the only way we can get the thing is for the guardian to die, just like he said.\"\n\nDanica sighed, and then her expression tightened.  \"I won't do it.  I'm not going to kill a defenseless old man for Zoraster.\"\n\n\"Maybe we can find another way.  The old man is apparently just going to let us do whatever we want,\" Celes observed.\n\n\"We'll find another way,\" Danica responded.\n\n\"And if there isn't one?\"\n\nDanica didn't have an answer for that question.\n\n{*****~~o~~0~~o~~*****}\n\nI hope you liked this tale, and will continue to read Danica's ongoing story.  Please take a moment to vote, and perhaps comment.  Feel free to comment on every chapter, nobody is stopping you! *laugh*  That's the only payment a free author gets, and every bit of feedback is most appreciated!\n\nYou may find later chapters have some flubs and grammar issues, until I finish posting all the edits.  Look for the note at the beginning of each chapter about my editor, Roust, and that will let you know whether the chapter is newly edited."
    ],
    "authorname": "Darkniciad",
    "tags": [
        "masturbation",
        "magic",
        "threesome",
        "lesbian",
        "creampie"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/danica-pt-19"
}