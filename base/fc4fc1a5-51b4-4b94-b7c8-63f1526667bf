{
    "title": "Officers and Men Ch. 01",
    "pages": [
        "This story is down to some research I did into Army background dressing for 'The Big Brother Hole' and some 'officers/soldiers divide' thoughts that just wouldn't go away.\n\nMuch of the research is from Wiki, the British Army website and many like it, and in particular a cracker called the Army Rumour Service and the conversations and 'banter' that goes on with that site.\n\nWhen I was writing it, I had one face in my head, a real person, a real tall person and also a real soldier, a real hero - someone I'm proud to call a friend, and to whom it is most respectfully dedicated,\n\nTo Lieutenant C...\n\n*****\n\nSince I was hit puberty people have called me a giant, and I'm a female one at that - I joined the army straight from University and it was fine, right up until the second I told anyone my surname, they giggled\n\nMajor, Linette Major - quite a boring name unless you want to join the army, Lieutenant Major, Captain Major, God forbid I ever became Major Major. It was the running joke of my whole career, and everyone thought it was 'just the biggest hoot!'\n\n\"Oh I say, Second Lieutenant Major, bet that's confusing for you dear,\" said the very senior officer.\n\nYes Colonel, it is Colonel, Ha ha Colonel, Fuck off Colonel.\n\nThe other great joke of my life was my height, I'm still one of two girls that I know of that are over 6 feet tall. I'm six foot four, and it was the bane of my life as I just kept on growing despite people telling me that once I hit puberty it would all be fine, but it wasn't.\n\n\"How tall are you?\" people would ask me with a smile, \"What's the weather like up there shorty?\" They'd chuckle, \"I bet people say that to you all the time,\" said everyone shorter than me.\n\n\"Yes short arse, Ha ha short arse, fuck off short arse.\n\nI joined the army because I vainly thought that the tall jokes would be beyond the serious military, but no. It carried on. \n\nOn the combat phase of our initial training and I found that no one wanted to be my 'buddy' - why? We had to dig trenches, six feet long by three feet wide by five feet deep, or six feet in my case.\n\nOne of the other cadets had been in the Army Reserve and we all kind of listened to him because he had done lots of these before as a private soldier. He was the same age but had that 'been there, done that' attitude to him and we all kind of listened.\n\n\"Trench digging is a pain,\" he said, \"especially if you get stuck with Major as your trench mate.\" Everyone laughed. I tried not to let them see how hurt I was that all of them, this bunch of friends I'd thought I could count on to back me up, laughed at me and not one of them came within ten feet of me as we stopped in our platoon area for the night.\n\nThere were chuckles as the gang paired off and I just looked around as even the girls I was closest to kept their distance.\n\n\"You'll have to be a miner to dig a trench with Major,\" said a wag.\n\nThe corporal found the smart arse and he found himself as my trench mate for the night. I was embarrassed and tried to apologise.\n\n\"Don't apologise Officer Cadet Major,\" said a stern voice from the Sergeant Instructor, a rough and tough, hook nosed hooligan from The Parachute Regiment, \"If he had less of a gob on him, he'd have less digging to do.\"\n\nThe regular army non-commissioned instructors at Sandhurst were clever, funny but not abusive; after all, we would one day be commissioned officers and they'd go back to their various Corps and Regiments and still be Sergeants and warrant officers and could bump into us.\n\nSergeant Major Bacon, a giant from one of the Guards Regiments that was taller than me and was no stranger to people taking the piss out of his name. He's nicknames went from 'Kevin', through to the favoured 'Smokey' at best to 'Eggie' at worst, but was the Academy Sergeant Major, the senior instructor at the Royal Military Academy Sandhurst, so it was only ever to his back and from a distance. \n\nHe took me to one side following some piss taking in the queue when we were being measured for our parade uniforms and for our passing out ('Major's skirt is going to be expensive - hope they have enough material for the rest of us!'). I grimaced, it had ceased to be in the slightest bit funny some months before and I found I was the butt of all the jokes pretty much constantly and he heard it - again and stood over the offender and took her to task.\n\n\"Where do you get off talking about people's height Officer Cadet?,\" he snarled, looming over her by a good eighteen inches, \"you're were obviously in the queue for a sense of humour when the height was be given out.\"\n\n\"Don't let the fuckers see you hurt Major,\" he said in all seriousness and mentioned that he had been in hearing distance after some light-hearted discussion turned nastier when a senior Officer Cadet had called me a freak when I told him that 'what's the weather like up there' wasn't funny, had never been funny and would never be funny.\n\n\"You do what I did, you take all that ridicule and that juvenile name calling shit and you grow a pair, and you suck it up. But you suck it up and you transmute it into straight up energy, happy that you'll climb higher and taller, and more fucking powerful than those fuckers who think they are comedians and having a teenagers giggle at your expense ever fucking will.\" \n\nHe snarled, I snarled.\n\n\"Yes Sir,\" I said and from that point on I became a regular army hard arse. \n\nI had ten months at Sandhurst and I buckled down. The snarl that Sergeant Major Bacon had instilled in me hardly left my face for the remaining seven months. I had a few tough moments, shed a few tears (probably less than some of my colleagues, even the male ones) and during the junior term I was spotted by one of the lecturers and he suggested that I make use of my degree in Modern European Languages and my rather punchy attitude and join the Intelligence Corps.\n\nI applied, took various tests and was interviewed. As with all good interviews I never knew how well or how badly I had done. The three officers, as befits the Intelligence Corps, were inscrutable and gave nothing away. I saw the one other cadet I knew ready to go in after me, so wandered back to my room.\n\nI was invited back that evening to meet the three officers again. I had that awful post-interview question 'so how do you think you've done'.\n\nI thought about the coward's way out, and 'Don't know sir' but my months at the Academy wouldn't let me do that so I went for honest.\n\n\"I think I did OK sir, I lost it a bit at the beginning but that was just nerves, I'm hoping I did quite well.\" All three smiled and I figured I was either just right or they were being kind.\n\n\"Well Officer Cadet Major, you did very well I'm pleased to say. You are just the kind of young officer we are looking for and we will be recommending you for a place in the Intelligence Corps.\"\n\n\"Thank you sir!\" I beamed one of my very rare genuine smiles.\n\nOnce I passed out from the RMAS, I headed straight to Bedfordshire and the Int Corps Headquarters and began my training there.\n\nCall me a show-off but I pissed it. I took to the analytical work and the problem solving and loved every moment, and I was surrounded by people that were slightly more cerebral, OK nerdish, and my height was mentioned just once and I confirmed that I was 6 feet 4 inches tall and that I had a first in Modern European Languages and it was pretty much forgotten. \n\nThey sent me to various places to practice my language skills and to use them, spending a year as a roving assistant Military Attach\u00e9 in all parts of the world and just talking to people. Then they decided it was time I went to earn my money in Most of Europe, Central and South America and the Middle East.\n\nAs a soldier I went to all the places you'd expect such as former Yugoslavia, Iraq, Germany, Northern Ireland, and of course Afghanistan. I grabbed every opportunity, every training course, every exercise, and every deployment and like to think I made ten times as many friends as I made enemies. I had a bit of a hankering to do some secret sneaky type stuff and admitted as much. My commanding officer smiled and gave me one of those dragged out 'Yeeeeeeeeees' responses that actually mean 'no'.\n\n\"You've been an assistant military attach\u00e9 Lin haven't you.\" A statement, not a question.\n\n\"Yes sir,\" I said.\n\n\"Well, in that case you've probably been photographed by most of the security services of the western world and a few others, even our so called friends. And let's face it Lin, you aah... you do stand out rather don't you?\"\n\n\"I...\"\n\n\"You are probably one of the tallest women in the Army aren't you?\"\n\n\"I've never checked Sir,\" I said, slightly miffed at this.\n\n\"I mean this in the nicest possible way Lin, but I've not met another woman soldier as tall as you in a twenty year career. It's not that you stick out as an army officer, you are an exceptional army officer, you stick out as a human being, and that's not good in that particular line of work.\"\n\nShit, ah well. \n\nThis was my career and a double O number aside, the Army did what it does best, making useful soldiers. I took all of the adventurous training that I could. So much so my mid-twenties was like a TV commercial for tampons. I skied, parachuted, scuba-dived, ran, cycled, rock climbed all at the Army's expense.\n\nAt the Army's sport parachute training centre I still remember leaping from the elderly Britton Norman Islander aircraft and instead of the regulation 'thousand and one, thousand and two...' and the rest of it, as I fell away from the plane I screamed \"Owwwww bodyfor-orm, body form for you!' \n\nThe instructor heard it but was kind enough not to dock me points from my score, impressed that I could be that funny at 2,000 feet. Before I got onto the plane for my first jump with him he grinned nicely, well nicely for a paratrooper at least.\n\nWe had to sit on the floor of the narrow fuselage and I squeezed my long legs in, head and shoulders taller than any of the other passengers.\n\n\"Look at this way Mam,\" he shouted over the noise of the engine and the rushing wind seeing my discomfort, \"at least you don't have so far to fall as these short arses...\" If he wasn't about to get me to jump out of a perfectly good aeroplane at over 2000 feet I might have taken him to task over his humour. \n\nMy parents would worry when I went to dangerous places of course, especially when something happened to friends or colleagues. Iraq and Afghanistan were both punishing and I did both operational and strategic roles in both theatres. Several of my deployed patrols hit IED's, had quite significant contacts with the enemy, but I still reckoned that on the balance of things I'd saved more lives than I'd lost. I walked the walk with them of course, and rode in those bloody Land Rovers that weren't fit for the job, but they still made us ride in them. I think that knowing that we were in a roadside bomb war with trucks that were no different to the ones that farmers drove their sheepdogs around in was part of the fear, added to that I was always conscious that despite my body armour, ballistic helmet and being in the company of some of the finest soldiers on the planet, I stood out among all of them and would make a very large target in someone's gun sight.\n\nI still have the occasional nightmare, but many of my colleagues have post-traumatic stress disorder and I guess that I do as well. Still, being in the army did help of course because we all talked the same language and to some extent got what the other person was going through.\n\nBut with the drawdown of troops from Afghanistan, and then from the former British Army of the Rhine, I found myself back in London and doing some anti-terrorist work.\n\nOn my thirty third birthday, I had a solitary drink in the mess and a Skype message from my parents. Still my mother gave me the 'when are you going to take some time out for you' speech. As a trained interpreter I knew that this was actually 'when are you going to take some time out and have grandchildren for me.'\n\nI was adopted when I was a baby and knew nothing about my blood parents; I call them that because as far as I'm concerned I retain the title 'real parents' for the two wonderful people that raised me as their own even though they were then in their mid-thirties and able to have children of their own. \n\nI never screamed it from the roof tops that I was adopted and would never dreamed of trying to find out who my blood parents were; it's not that I'm cold, it's just I have nothing in common with those people other than DNA and I would never even consider doing something that might cause my Mum and Dad any distress.\n\nMum and Dad were older than their contemporaries at my school and college parents evenings, and being that much older and more set in their ways I guess that it was as much a reason for my being a bit more stay-at-home and nerdy and bookish than my classmates that didn't get stared at and have snide comments made about how tall they were, and this was reflected in my grades, which were excellent even though I say so myself. I never had any boyfriends at all until I moved into Halls at University.\n\nMy experience with boys was limited to friends, and when Mum and Dad finally drove away on that first evening at for my Fresher year, I was half elated at the freedom and half terrified at the same time for the same reason! I had a couple of dates then lost my virginity to a really nice, 6 feet 5 inches tall, good looking guy that got a scholarship to an Ivy League College in the States within six months, so that was the end of that; it was a real shame because he had no issue with me being tall and he was just taller than me and took it in his stride. I had a couple of short romances with short men until I graduated. \n\nThe army was something that I came to quite late in my studying. I had thought about teaching like my Mum, or an accountancy like my Dad, but an honours degree in modern languages didn't really leap out in either. One of my short beau's was a member of the University Officer Training Corps and I accompanied him to one of his Regimental dinners. I think my rather clunky approach to dressing up (smart, attractive and most of all sexy looking clothes for a six foot plus girl are as rare as rocking horse shit) made one of the senior officer guests ask me how I thought army training was.\n\nI of course told him that I was just there with my boyfriend and I actually wasn't part of the unit.\n\n\"My dear girl, why ever not? What are you studying?\" I told him Modern languages, \n\n\"Good heavens, you're perfect Army Officer Material!\" he said taking my hand and sending my boyfriend off for more drinks.\n\nBy the time he'd returned with the glasses the officer had well and truly planted the seed of a career in the army, better recruiting than all of the people I'd met at Freshers' fairs and numerous leaflets around the place. \n\nThat was that.\n\nI was celibate at Sandhurst and then once into the army a few fumbles with some other officers, but army life wasn't conducive to relationships and it was a small world full of small people. Small people that talked and bitched, and I hated the idea of everyone discussing what was going on with you and someone else that I heard so much of at school, college and Uni' the second one of the girls looked differently at one of the boys - and of course those odd occasions when one of the girls looked at one of the girls.\n\nAnd the general male dominance of Army life meant that you could almost never be sure that the brother officer you'd escorted back to his room wasn't just getting you back there because he'd had a bet with the rest of his friends in the Officers Mess that he could.\n\nIt infuriated me that such a thing could still happen in a modern army and I'd been aware of it happening, occasionally watching those risk taking, high performing young officers as they set their sights on someone, or worse someone else's wife or daughter and then it would get nasty. I was far too clever to fall for that shit of course...\n\nI had my turn in Germany some three years into my career when I fell into what I thought was a relationship with a Brigade Intelligence Officer from one of the Light Cavalry Regiments on the same attachment as me.\n\nRoger was a Captain, very handsome and dashing, and a total man's man, and a wiry lightweight man as befitted his Regiment and about an inch shorter than me. He'd completed the parachute course and wore the wings, wore the dagger on his arm below it having completed the commando course and had even done the United States Army 'Ranger' course and wore that badge as well. 'Ranger Roger' was a genuine go-getter and hero-type while I was an Intelligence Corps Lieutenant.\n\nWe were both on brigade staff and I thought I'd had the most wonderful 'summer of love' with him, in fact it was a little over six weeks. I met him on a long eight day exercise where we were in a large planning cell controlling fictional soldiers doing battle with a fictional enemy and we just clicked. Eight hours on, eight hours off and by the end of the exercise we were good mates.\n\nAfter the exercise he insisted that he take me to dinner, in 'the cutest little restaurant' he knew of in Cologne. He had a small flat that he rented on the outskirts of Rheindahlen, and the next night I joined him there and we petted heavily due to the fact that I wasn't on the pill and we had no condoms. The last thing I wanted to do was get pregnant even though he assured me that he would pull out before anything happened. \n\nNaah!\n\nOver lunch in the mess a couple of days later he asked me if I'd taken my leave that summer; I hadn't so he said if I was up for an adventure and some fun I should pack a fortnights worth of clothes and be ready to leave the next Sunday morning. I booked my leave and found my passport, and went on the pill.\n\nHe couldn't meet me the next night or the next as he had 'a bit of thing going on' in his Regiment's Officers Mess, but I duly packed my bag and met him in the car park as instructed Sunday morning. He looked bleary eyed from the nights before so I said I would drive until he felt better. \n\nWe drove south down through the Black Forest to our first hotel stop and we had a really romantic first night, and second and third and so on. It was all quite new to me and I threw myself into the experience and I was so energetic that he called me his little strumpet and smacked my arse - it really turned me on. It was really exciting and at the time and due to my limited experience I thought he was just the best lover ever, although I was to learn he was 'OK' at best; he never brought me to orgasm, not once, and I thought that was just what sex was like.\n\nAfter Germany was Austria then a rather circuitous route into Italy. We made love every night and I kept on taking the contraceptive pills, happy that I was protected.\n\nRoger was the first man to 'charm the pants off of me' and I was beginning to think that there might just be a future with this guy. After our wonderful fortnight we went back to the Rhineland and I fully expected to start packing my bags from the barracks in D\u00fcsseldorf and move into his place near the Joint Headquarters for all British Forces in Germany.\n\nI met him for lunch on the fifth day back from our holiday and almost a month into our 'relationship'. I was a bit grumpy because he hadn't answered any of my phone calls or emails, and I thought that we had something going on and we might start to get serious. I was days away from contacting Mum for our fortnightly phone call and telling her about the new boy in fact.\n\n\"I went back to the UK,\" he said, sipping his coffee like he was the hero in a Bond Film, and looking around the room being inscrutable.\n\n\"Oh,\" I said with some suspicion at his new 'distance', \"You never mentioned it, just for work?\"",
        "\"Family stuff,\" he said, \"just a flying visit.\"\n\nThe waitress came past with a coffee pot and refilled our cups, curtseying to the hunky Cavalry Captain that was flexing his eyebrows in a manner that would have made Roger Moore proud.\n\n\"I was wondering if we could do something this weekend.\" I said.\n\n\"Yeah sure, what you got in mind?\"\n\n\"Thought we could take one of those boat trips along the Rhine, an overnighter,\" I winked at him, I'd bought a really hot looking lacy nightdress that fitted me like a babydoll because it was regular length and wanted a special occasion to wear it, never having anything like that before in my life!\n\n\"Yeah why not,\" he said coolly.\n\n\"Or I could stay over at your place.\" I said guessing that he didn't really fancy a Rhine cruise.\n\n\"Errrrrrrr... no.\" he said, \"Actually I'm getting rid of it, damned expensive and what with the planned closure of JHQ, thought I'd get shot of it now and move back into the mess.\" His Father was a politician and at that stage opposition front bench, and money was never really an object with him; at least that was what he'd said when he was throwing his credit card across hotel reception desks two weeks before.\n\nI felt the chill of his response roll across the table. No more private rooms meant no more sex.\n\n\"I'll... I can go halves on the rent with you.\" I said.\n\n\"Only one bedroom Lin,\" he said with a grimace.\n\n\"That wasn't a problem last time I stayed.\"\n\n\"Times change Lin.\" he said, rolling his eyebrow again.\n\n\"I get the feeling I'm being dumped here Roger.\"\n\n\"Not dumped dear,\" he said without his previous closeness, but with the flinty eyed grimace of a war hero saying goodbye before he hit the beaches the next morning, \"More a parting of the ways.\"\n\n\"Oh,\" I said, my face flushing with the embarrassed realisation that what I thought we had, he didn't, \"so...\"\n\n\"Please don't try and over analyse this Lin;\" he took a deep sigh, \"we've had a great time, but it's over and we have to get back to our real lives.\"\n\n\"So that wasn't real, that was just sex then.\"\n\nHe smiled; thank fuck the lanky dumb bitch had finally got it.\n\n\"It was more than sex Lin,\" he beamed the biggest falsest smile he could manage, \"don't cheapen yourself.\" It hadn't seemed cheap until he said that of course, \"We had a real attraction there for a while.\"\n\n\"Yeah,\" I said, \"right up to the point that you realised I might want something more than sex.\"\n\nHe stopped smiling,\n\n\"This is trouble with bloody women,\" he said, \"Want-want-want, a couple of shags and you're picking out curtain material.\" He shook his head in disappointment.\n\nMy mouth bobbed open, what had happened to the real attraction that we'd had?\n\n\"Look, I've got to go; I'll see you around sometime yeah?\" he stood and taking his beret and his newspaper from the table walked off heroically, checking his reflection and his eyebrow position in the mirror as he went.\n\n\"Roger?\" I called after him.\n\n\"Aah Young Major,\" said a voice and I turned to see The Assistant Brigade Commander, the man that I reported to. \"You go careful with Turnball there.\" He nodded to the broad shoulders of Ranger Roger the Light Dragoon leaving the dining room; I was waiting for him to say 'what a guy'.\n\n\"Careful sir?\" I said.\n\nThe ABC stepped closer and whispered conspiratorially,\n\n\"He's due to get married in a couple of weeks, don't want to rock the boat do we?\" He smiled a false smile all teeth; I noticed the tiny piece of green lettuce from his eggs benedict stuck to his left incisor.\n\n\"Married?\"\n\n\"Yes, his fianc\u00e9e has been planning it back in the UK for months now. He went home this weekend to sign off the final plans. They've managed to get Salisbury Cathedral, quite a day I understand, but then with his family and hers I'm surprised they haven't got Westminster Abbey.\" He smiled and shook his head.\n\n\"Married?\"\n\n\"Yes dear!\" said the ABC with a admonishing tone, \"please don't try and spoil things just because you've developed a crush on him.\"\n\n\"Crush?\" I was still astounded and my training with half a dozen languages failed me completely.\n\n\"Look, there's already a rumour floating around the Armoured Brigade that he took some floozy off for a 'driving holiday' after his stag weekend...\" He stopped talking as his bottom jaw flapped for a moment. \"Oh, err...\" he said in a sudden realisation. He had probably signed off my summer holiday leave request not three weeks ago.\n\nHe walked away in embarrassment.\n\nMy cheeks flushed and I managed to get back to my room before I shed the few tears that I would cry for that lying bastard. Fucking men...\n\nIt got worse.\n\nSuddenly it seemed that not only my Brigade but the entire British Army of the Rhine wanted to know how my holiday had been, all asked with a hint of innocence only wrecked by their cheeky expectant smiles, I was sure I heard the word 'strumpet' whispered around. Roger had an even prouder smile on his handsome, slimy, cuntish face.\n\nIt all came to a head one weekday evening when one of Roger's colleagues from his own regiment asked me out on a date but I demurred; he was quite pissed and started to complain that 'all four Squadrons knew I was up for a shag' and Roger had told them all about me and the number of times we'd got up to it, and that the only thing I hadn't done was anal. I thought about that, he did ask to do that a couple of times during our second week.\n\n\"Fuck you!\" I slapped his face, in part anger by mostly shame.\n\n\"Oh, don't kid yourself Strumpet Major!\" - I had read Thomas Hardy at school and hated it, so much more so now - \"He sent us a daily report of what you had gotten up to,\" he chuckled and fished out his mobile phone with a triumphant, inebriated giggle, \"Look,\" he grinned superciliously, as if he had just scaled Everest, rather than open his email account.\n\nI snatched it from his hand and scanned down his email account; there they were - I scan read the first few titles, opened the third and felt sick. He leaned back with folded arms with some kind of pride in his nasty triumph and he chuckled. I had to turn away from that look.\n\n13 emails, one for each night of our lovely romantic holiday. Only what I had thought were wonderful starry and moonlit nights of passion, love and romance had been broken down into crude, lewd and dirty paragraphs listing what we had done each night, and even getting down to the 'ins and outs' (to coin an apposite phrase) of each act, and how weird it was shagging a female giant 'that was all fucking legs', even using block capitals to announce that I had gone down on him without him having to do it to me.\n\nMoving around to enjoy his triumph more, the pissed Dragoon could see what my face now looked like with a mix of shocked disbelief, hurt and anger and was now extremely desirous of getting his phone back perhaps sensing the shit storm of monumental proportions that he'd precipitated. He shut up about what had gone on and looked rather pale himself. He snatched his phone back from my tear wet fingers. He slipped it back into his jacket pocket, and turned to leave.\n\n\"Well... err... Lieutenant Major, really must be on my way...\"\n\nI could see all of my evidence of Roger's wrongdoing walking out of the bar and into oblivion with all of the other emails as this idiot told the other recipients that the jig was up and to bin everything before the powers that be descended upon those involved, with investigations, inspections, injunctions and power to seize anything with a microchip bigger than a digital watch before the eventual and highly embarrassing military court.\n\nSo I changed my persona and sidled up to him, I was a strumpet after all.\n\n\"Oh I don't blame you,\" I said, looking down on the 5 feet six Cavalry Officer.\n\n\"Oh... well...\" he said taking a relaxing breath.\n\n\"No it's that nasty Roger; how are you with revenge?\" I simpered.\n\n\"Well, it's not the done thing to shaft a fellow officer,\" he said nervously.\n\n\"Unless she's in the Intelligence Corps,\" I said, \"seems I can get shafted though doesn't it.\" I stroked a hand along his jacket collar trying to remember all of the things I'd seen women trying to get around men do in the movies.\n\n\"Well...\" he realised the shit he was in, \"well just some harmless fun Darling, what?\"\n\n\"Harmless, yeees,\" I said thinking of what a terrible fine chap everyone thought Ranger Roger was now, while I was just 'Strumpet Major' the 'floozy' he decided to sow his last fortnight of wild oats with. \"Two more Gin and tonics here!\" I called to the barman. I pulled the idiot back to the bar, pushed his arse onto a stool, sat on his lap and got my prospective beau to down both of the G&T's; in the half an hour I had to put up with his appalling behaviour not to say breath in the meantime.\n\nJust as he was getting to the wobbly stage, when no one was looking I took him out into the foyer and pulled him into the gents' toilets, and took his phone from his pocket.\n\n\"What's the password Baby?\" I said in silly voice.\n\n\"Can't tell you that,\" he giggled, \"Top secret!\"\n\n\"Awww I won't tell!\" I put my arms around his neck.\n\nHe took his phone and after three attempts finally opened it. I took it from him and giggled back at him, just in time it seemed. The fresh air from the open doors of the foyer was making him really drowsy so I pushed him back into one of the cubicles on his backside to sleep it off.\n\nI took his phone and ran to the intelligence cell and sat down at a PC, ignored by the two operators in the room, after all that's kind of what we did.\n\nKeeping the pissed idiots phone open - didn't know his password after all - I spent the next hour harmlessly and untraceably bluetoothing Roger's emails including the circulation list of more than two dozen of his Regiment and the Armoured Brigade's finest (including two women) from the pissed idiot's phone onto mine and then into a couple of Hotmail accounts I had, making sure I had copies of all the emails Roger had sent about our various sexual activities that we 'had gotten up to' that would match up quite nicely to my diary and the pictures I'd taken. Despite my tear-filled eyes I made good time, even heading back to the mess bathrooms and slipping the mobile, wiped for finger prints, back into the gently snoring Cavalryman's jacket pocket.\n\nWhat made it worse was that it clear from the emails and copious responses that it was part of a bet. Several of his colleagues on the Brigade staff and one from his regiment had tried to date me it seemed, and I had gained a bit of a reputation just because I didn't go out with anyone. \n\nI wasn't saving myself, didn't feel superior in any way, I just didn't fancy any of them in that way. After two years I had become a bit of challenge it seemed.\n\nFor every night Roger slept with me, the 'too clever for her own good', 'undateable', 'tough nut', 'Giraffe girl', 'The I-Corps Ice Giant' that no one could reach and 'was so far up her own arse she couldn't see daylight', his brother officers - and two sisters - would put a bottle of his favourite Glayva whiskey behind the bar for him; two bottles for a blow job, four for anal and if there was a picture of me naked, a case. He only got the one picture and that was just of my shoulders and a hint of boobs and a partial nipple.\n\nHis Best Man, a disappointed Cavalryman I had turned down who obviously had a problem that I was a foot taller than him, gleefully recalled to the whole email group how my photo had been put up on the 60 inch Plasma TV in their Mess so all of the Officers could decide if the case of Glayva had been earned. It wasn't, he wrote how they had spent a good forty five minutes with me on screen discussing whether some cleavage and half of a boob and a nipple counted against the original outcome.\n\nWhat a jolly old ruse, what fun, what a good spirited giggle... what a bunch of cunts. Not just for doing it, but for doing it and thinking they would get away with it.\n\nI saved them all into a zip file and emailed them to Ranger Roger, from my work account to his marked confidential; just so he knew that I knew.\n\n\"Thanks Roger, you're a heartless bastard and I truly hope that this shit comes home to roost one day. \n\nTo put your nasty, hateful, puerile, tiny little mind at rest, your secret is safe with me though. The only thing that stops me sending this little bundle to the Royal Military Police Special Investigation Branch, The Brigade Commander, the GOC 1st British Corps and the Commander Land Forces is the fact it would be the end of my career as well as yours and I wouldn't give you the satisfaction.\n\nI do suggest that you tell your fianc\u00e9e/lady wife a bit soon though; and that's not a threat it's just advice.\n\nAfter all she could easily find out from one of your 'so called friends' and fellow officers after they've had a few drinks. Trust me, there's at least one that was so keen to be where you had been and couldn't wait to tell me all about your little game and gave me their fucking phone to prove it - still, just a pig-shit thick, troglodyte grunt like you after all.\n\nFuck you Roger, I can't think what I ever did to you to make you do something so horrible to me; I guess that you really don't care either way. BTW, you weren't as good as I said you were and your cock is rather small - either that or you just weren't getting it up, I would suggest you see someone about it before your wedding night.\"\n\nI let him have that libido reducing information just as a sideswipe and I hoped it would affect his confidence in bed.\n\nI saved the emails in a dozen places, none to do with the Army of course.\n\nThe following day, the pissed Cavalry officer with the big mouth that had shared more information with me than he initially meant to, found me at lunch in the HQ Mess, some distance from his own.\n\n\"Look...\" he said very hungover and very remorseful, \"We all thought that you were in on it,\" he said, \"Honestly, we all thought that you and Roger... what you had going on was... mutual... both of you were... Like...\"\n\nI turned on him snarling a Sergeant Major Bacon snarl.\n\n\"Good try, but I read the emails dickhead,\" I growled, \"All of them!\"\n\nHis mouth flapped as he searched his memory for my name to apologise, and he mouthed several syllables managing to stop himself from calling me 'Strumpet'\n\n\"You don't even know my name do you? DO YOU!\" The rest of the mess looked around to see what was going on. They all looked away again; I wasn't sure how many of them were in on the big joke on the big girl.\n\n\"Sorry,\" he said, actually looking contrite and in the broad light of day rather embarrassed.\n\n\"What for, you didn't screw me halfway across Europe and blog it to all of your mates for a bet.\" I wiped a tear from my eye.\n\n\"It... just all got rather out of hand.\" He said.\n\n\"Yeah didn't it fucking just,\" I looked across at him with contempt, \"what the fuck did I do to you boys? I didn't know that I'd even met a Cavalryman before Roger, none of you had ever even met me before, but now you're all part of some elaborate charade to bring the Ice Giant down to size? Why?\" I snarled again, \"Tell me why!?!\"\n\nHe fingered the leather band on his black tanker's beret, and shrugged his shoulders. He smiled a pitiful smile,\n\n\"I cannot answer that question Mam,\" he said echoing one of the five responses that a British soldier could give under interrogation. \"But please,\" he said, \"Please accept my apologies for any upset that my actions might have caused you, at the very least.\"\n\nI was starting to feel a little sorry for him, but then I remembered what his words and actions had been to me last night when his arse wasn't on the line and the booze was allowing him to say what he actually thought.\n\n\"Fuck you,\" I said, and promptly poured my mug of coffee down the front of his spotless uniform, \"I'll see you and all of your colleagues in Fucking Colchester or at the Job Centre.\" Colchester was the Military Corrective Training Centre, the British Army's prison and they never sent officers there to my knowledge but I still wanted him and his mates to think it was an option, especially the two fucking women that were part of it.\n\nIt turned out that it was all down to Roger and his best man who was another spoilt, rich pretty boy that was offended by my lack of recognition of what an attractive man he was and how neither of them stood a chance with me; this precocious pair with far too much sway over their mess and the junior officers therein. Ranger Roger was, apparently, stalking the barracks of 1st British Corps HQ to find the officer that had told on him at a time he really should have been driving home and preparing for his wedding. The reason was this new career and marriage spoiling information had reached the ears of some other very senior officers and the chatter stopped as soon as it had started.\n\nRoger was posted back to the UK at speed, losing his rather cushy little number and the accompanying married quarter for two years at the heart of the British Army of the Rhine, getting posted instead into limbo and to the arsehole of the British Army, Tidworth as second in command of a unit that ran and maintained armoured fighting vehicles of all kinds for training on the nearby Salisbury Plain, while his best man was put in control of some very fine army stores... in the Falkland Islands. \n\nThis was the early two thousands and this type of behaviour was strictly outlawed. But as I'd said to Ranger Roger I didn't want to flush my career down the toilet with his.\n\nHis BAOR job, along with his family connections, would have seen him promoted through to a course at Staff College, a guaranteed Colonelcy and Regimental commander in his regiment, Brigade Commander, Staff position, the whole shit, probably even a seat in The House of Lords if he stayed the course.\n\nSadly, because he was an obnoxious, over-confident, bullying cunt and sent emails that even a tipsy teenager would have thought twice about, he'd well and truly pissed in the Regimental Porridge pot, breaking five generations of family Tradition in that regiment dating from Borneo, then back through World War Two and One, and the Empire as far back as the Sudan and the relief of Mafeking.\n\nHis father had served in the Special Air Service, but I was to learn from a colleague some months later that Roger was extremely cross when despite his other qualifications the elite Regiment of the British Army didn't want him; it seemed the selection officer thought he was 'a obnoxious prat more likely to be killed by his own men than the enemy.'\n\nGermany was a delight and I really did enjoyed my tours there, and the social and regimental life was the highlight of my career - up until that point. I often wondered how he was going to explain Tidworth, a squadron of unemployable and miserable, greasy mechanics and tankmen under his command and 48 aging challenger tanks and warrior armoured personnel carriers to his new wife that had been promised the Rhineland and the military highlife. That was revenge enough and had cost me two gin and tonics, some light groping and an email.\n\nThe Assistant Brigade Commander let me know through a junior female officer on the staff that while he was disgusted with Captain Turnball and whoever his cohorts might have been, he was keen to point out that 'it took two to tango' and there was no reason that JHQ needed to blast its rather nasty going's on across the tabloid press.\n\nI reminded her that I had told Roger from the start that I would stay quiet, but added that all the time everyone else shut up about the matter I was happy to do the same; after all I wasn't proud of any of it, and didn't want my career fucked over like his had been. So long as I never saw or heard the term 'Strumpet Major' used on the same continent as me he could be assured of my silence.",
        "The Staff officer sat down in my office and took off her cap, her task completed.\n\n\"What a bunch of cunts,\" she snarled holding out a hand for me to shake, \"You save your emails up Lin,\" she said. \"That obnoxious pretty boy Turnball will want to follow his father into the House of Commons one day; you send them off to the Daily Mirror or the Guardian two weeks before elections. Revenge is a dish best served cold and well-matured ducky.\"\n\nShe then went on to say that she felt that hang over of the sixties and seventies was still alive and well among the very senior officers, and that most single 'career women' officers that didn't put out in this way had been branded 'lesbian' just because they didn't screw their way around the regiment like it was felt a proper girlie should.\n\nIt was fucking shit and I hated it, and the lowest point in my career, and I was pleased to get posted to Iraq where there was a real war going on and that was that.\n\nSo relationships with Military men were complicated, fraught with danger and I was convinced that I was now a marked woman; I had nailed my colours to the mast somewhat by going up against someone that was hard core establishment like Roger.\n\nSimilarly the Army wasn't conducive with a relationship with someone that wasn't a soldier, especially the bit of it I moved in. \n\nI once brought an old Uni' mate to a regimental dinner and he was the only person not in a Uniform of some kind, I thought he looked rather dashing in his dinner jacket and bow tie, but after the Port had been around the table a couple of times the rest of the mess made it quite clear that he wasn't part of the 'club', and that his 'not positively vetted' presence was holding back the discussion.\n\nIt was ridiculous, my friend Barney was an investment banker and could have bought and sold the entire room two or three times over and was nothing but gracious to these slightly pissed oafs I worked with.\n\nHe got the message quite soon though and I said that he'd be on his way, so I saw him to his car and we had a kiss and a cuddle in the back of his Jaguar.\n\nHe left, with a wave and a blown kiss and a promise to 'call me'; back into the mess, and I was greeted with a series of 'what was up with him Lin', 'Didn't like him Young Major', 'always difficult with bloody civvies around', and other shit just because he didn't hold a Queen's commission. I'd only invited him because he'd been to an extremely good public school and played Rugby for Oxfordshire, and seemed the type that older army officers would approve of. The next day the Unit Operations Officer said that if I was going to be seeing this chap on a regular basis, he would need to be vetted or the amount and quality of information I was party to could change.\n\nFuck.\n\nI don't know if he ever tried to call me, as I was sent to Central America for six months and phone coverage was minimal at the best of times.\n\nAlso, I'd never met a bloke that I felt up to the job of being in a relationship with me; Ranger Roger's abuse of me had kind of killed off what was left of the romantic girl that I had once wanted to be - hard arsed in everything, what can I say. I hardly used make-up anymore and the new multi-terrain Pattern uniform we wore meant that the smart and feminine shirt, skirt and jumper combo I'd worn at the start of my career had all but phased out in favour of the asexual selection of greens and browns and beiges that men and women wore across the services.\n\nI shaved my legs only if I was going swimming, wore the most basic amount of make-up out of uniform and hardly ever found clothes that were the slightest bit feminine and never revealing. The 'Ice-Giant' was all soldier now and no one was getting close enough to hurt me again that was for sure. Post-traumatic sex disorder I suppose you could call it.\n\nExcept in my dreams and day dreams; I read Mills and Boon Stories in secret on my kindle and had a fine collection of chick-flicks downloaded. Mum still nagged about grandchildren, tried to set me up with every tall man she ever met and I tried not to let her see how much her gentle nudges actually hurt me; on my thirty third birthday I still hankered for that life, although it seemed a dream that was just getting further and further away. I would occasionally meet attractive men of course, and eyes would clash briefly and there would be that subtle check of the third finger of the left hand. \n\nEvery now and again there would be some brief conversation, soft smiles before my inevitable backing away when I stood up and he realised I was a head taller than him, or more likely from me at the thought of the pain I'd suffered, and then the complications to my working life of someone that was non-military being in it.\n\nFive years on and I was in London again and had to travel across to Northern Ireland on a small job and carry out some training for an army reserve unit there. Reasonably safe these days but still the army insisted I took someone with me, and I was assigned a driver and part bodyguard to see me to Brize Norton and then across the water in safety. \n\nFine.\n\nWe were based in a large army barracks sharing with two infantry regiments. They ran the place and manned the gates except for the occasional weekend when they had some kind of event on and we did. My driver was new to the unit and parked outside of the officers' accommodation in a rather plain and boring car that we kept for that reason.\n\nThe driver came across to me with a smile, and the need to shave. This was something that our unit's men were often allowed if not encouraged to do mind you, doing what we did sometimes you didn't want to look like a squaddie, especially with the Sig Sauer P226 that was nestling in a carefully concealed holster in his belt. And he didn't look like a squaddie, with his designer stubble he looked rather nice actually.\n\nI looked long at him as he got out of the car and walked to the boot. He was wearing a rather smart short green jacket, the same as one that I owned. That stuck out in my memory.\n\nIt was the Sunday previously, and in the Starbucks down the road from our camp; this guy had been stood in front of me in the queue and staring at the board, trying to make his decision. He turned, and looked across and down to me; he had to six and a half feet tall if he was an inch and saw me in the same jacket from a popular Tall Persons clothing supplier on line, and he grinned and stepped back,\n\n\"Please,\" he said in a deep rumbly voice that made my toes curl - a bit at least, indicating that I should go first. \n\n\"Thank you,\" I said smiling at him and his tiny act of gallantry. \n\nHe was still staring at the board but did look me up and down as I stepped past him.\n\n\"Nice jacket,\" he said recognising it as being the same as his, but I did notice that his eyes rested on my arse for slightly longer than average. It was that voice; that rough, slightly crackly male voice that never ceased to turn me on - Ranger Roger had one - and this guy had bright blue eyes with a hint of mischief.\n\nI saw the connection and grinned.\n\n\"You have excellent taste,\" I replied and ordered my Latte with vanilla.\n\n\"Thank you, there are so few of us around.\" He grinned and then ordered a Latte.\n\nI took my drink and headed for a table stopping to pick up a copy of the Observer that someone had left, and I looked back to see the man in the same jacket as me collecting his drink in one of those insulated cardboard 'take-out' cups. He took his drink, looked at his watch, turned and raised his mug in salute to me; I raised my mug back to him and did likewise, trying to hide my grin. \n\nI can now admit that I was disappointed that this hot looking guy didn't come over and attempt to have a chat with me. I now know that he had an appointment and was reporting for duty at the same camp!\n\nSo it was with some surprise that the same man was stood before the Officers' mess wearing the identical 'Softshell' jacket to one now hung on the back of my door was before me now.\n\n\"Can I take your bag Mam?\" he said extending a hand. He had a gentle smile across his handsome face, dark curly hair that that my fingers just wanted to run through.\n\nThis driver was the same tall, dark, very fit looking guy from Starbucks that had checked me out so completely and his eyes narrowed as he made the connection as well. He was extremely attractive and my mind whizzed in a dozen different directions, but whatever my sub-conscious thought about it he reminded me a bit of a time in my life I'd successfully forgotten about; I'd had a rough week and to cap it all I'd come on the day before. I didn't take to what I saw as his familiarity.\n\n\"Yes please,\" I said handing him my large bag. He took it with one hand and our fingers touched. There was a tiny tingle, at least I thought there was. He lifted it easily into the boot. \"I'm sorry,\" I said, \"We've not been introduced.\"\n\n\"No Mam,\" he smiled as he closed the boot and locked it with the key, an extra security measure.\n\n\"I'm Captain Major,\" I said.\n\n\"Yes Mam,\" he said with raised eyebrows. He must have known who I was after all.\n\n\"And you are?\" I played tough army officer just so the new boy knew where he stood despite any smiles he might have had from me in Starbucks, the ache from my groin did little to improve my mood.\n\n\"Oh yes sorry, Sergeant Mam,\" he said with a nice smile.\n\n\"Sergeant who?\"\n\nHe smiled,\n\n\"Corporal Sergeant Mam.\" I said nothing, and in the painful silence he extended a hand, and I ignored it.\n\nAnother fucking comedian!\n\n\"Are you taking the piss 'Corporal Sergeant'?\" I stood tall, hand on hips, Sergeant Major Bacon would have been proud.\n\n\"I'm sorry Mam?\" he looked confused and quickly withdrew his hand.\n\n\"I don't take to fucking comedians Corporal, especially when they are being funny at my expense and to my face.\"\n\n\"I only...\"\n\n\"Guardroom 'Corporal Sergeant'! DOUBLE!\" I screamed at him.\n\n\"Mam?\"\n\n\"What part of 'double to the guardroom do you not fucking get? MOVE!\" I stepped closer to him and jabbed his shoulder with a finger, \"Now!\" He had some kind of momentary internal struggle and I was having no truck with it, \"Now!\" I shouted.\n\nHe turned with a look of real surprise and trotted away to the main gate where the guardroom was, looking back over his shoulder at me.\n\n\"Lock him up!\" I shouted at the surprised guard on the gate.\n\nI got into the car and drove it around to the operations office to tell them that I'd get to Brize Norton on my own without the piss taking soldier. I'd put up with that kind of shit for far too many years and didn't need it from some smart arsed pretty boy.\n\nI stormed into the office and remonstrated with the Admin Sergeant,\n\n\"Who the fuck is that idiot you've set me up with as a driver?\" The Sergeant jumped to his feet.\n\n\"Mam?\"\n\n\"The comedian that's just doubled away to the guardroom, I want him on orders tomorrow morning.\"\n\n\"Sorry Mam,\" said the Sergeant all of a fluster, \"What's he done?\"\n\n\"He took the piss Sergeant Murray, that's what he did. If he actually is a Corporal, I want him busted down to private first thing tomorrow.\"\n\n\"Sorry Mam, That's a bit of first for us. I'll... I'll have to call the Sergeant Major, he's out until Tues...\"\n\n\"God preserve us from annual fucking leave,\" I growled into his face.\n\n\"Bank Holiday Mam,\" the admin sergeant whimpered.\n\nI stormed across the office and logged in to a free PC, and sent messages out to everyone which had the smart arse brought up on charges under section 252 of the Army Act 1955 for 'conduct prejudicial to good order and military discipline'.\n\nI typed a quick email to the Company Sergeant Major and the Adjutant, walked out to car and drove to the main gate. I went to the window to sign out and spoke to the Regimental Policeman there.\n\n\"That fucking comedian that's been doubled in here,\" I said, \"I want him to learn that the army doesn't do comics and he should go on 'Britain's got talent' rather than waste my fucking time.\"\n\n\"Yes Mam,\" said the RP.\n\n\"What's your name?\"\n\n\"Rifleman King Mam,\" he said.\n\n\"Right Rifleman King, I will expect a full report on what you boys have done to teach him his manners when I get back. He stays in all weekend get it?\"\n\n\"Yes Mam!\" He grinned and I guessed he would look forward to 'beasting the Int Corps Squaddie' who seemed to have such an easy life compared to the infantry.\n\nI drove to RAF Brize Norton and a quick flight to RAF Aldergrove in Ireland, thinking nothing of the miscreant I'd left in London.\n\nMy training session was quickly done, and I helped the local team with some work they needed doing and two days later, back to Aldergrove and a quick flight then I was back in the car and driving from Brize back to London and an extended bank holiday long weekend off, never needed the bloody driver and his gun anyway.\n\nI got back to camp late on Saturday remembering that Corporal Smartarse should now be Private Smartarse and having had the benefit of being drilled around the parade square twice a day by Riflemen with nothing else to do but take revenge to take on a 'REMF' (A rear echelon mother fucker).\n\nI signed in at the gate not seeing Rifleman King, and took the car back to the motor transport section where I parked it, posting the keys and the log book in the secure letterbox provided for after hours.\n\nI went back to my quarters, had a shower and checked through my bag, repacking it for a few days with my parents. I jumped in my VW Golf and drove across into Oxfordshire and our house.\n\nBack in London on Tuesday morning I headed to my office, feeling refreshed from my weekend with Mum and Dad and the thought of a job well done in Londonderry. I headed for the Orderly room as I wanted to make sure that my pisstaker had been taken care of appropriately by the Rifles and was at the very least confined to camp if not still in jail.\n\n\"He's gone home Mam,\" said the Orderly Sergeant, a different one from last week.\n\n\"He's WHAT!\" I shouted.\n\n\"There was a bit of a mix up Mam,\" he spluttered.\n\n\"There had better not have been,\" I raised my voice, readying myself for my next tirade.\n\nThe unit Second in Command, David, appeared at the door to his office.\n\n\"Ah Lin, so glad you're back, err... won't you come in to my office.\"\n\n'What now?' I hissed to myself and felt my lip curl into a Sergeant Major Bacon snarl.\n\n\"There was a bit of a problem with Sergeant,\" he said, \"Sadly, the entire company all seemed to take Friday off and he was left wallowing in the Guard room with no one knowing what he'd done.\"\n\n\"He was insolent to me.\" I said folding my arms, \"it was in my email.\"\n\n\"Yes, well no one could work out what he'd done Lin.\" He sat at his desk, \"by the time anyone was able to raise Patrick,\" that was the Unit officer commanding, \"the damage was done and it seems that those bloody Riflemen gave him rather a hard time, and he has a rather large black eye and a fat lip for his trouble.\" The Major sat down and looked up at me, \"The Rifles C.O. has promised me that he'll get to the bottom of the assault of course.\"\n\n\"Assault?\"\n\n\"Oh yeah!\"\n\n\"Well... perhaps he should have done what he was told.\" I said with a sigh.\n\n\"Lin,\" said the 2IC, \"What did Corporal Sargeant actually say or do?\"\n\n\"He...\" I stopped. I took a deep breath, \"Corporal Sergeant?\"\n\n\"Yes,\" he said, \"What was the nature of his insolence?\"\n\n\"His name really is Corporal Sergeant?\"\n\n\"Yes, Andy Sargeant, he's Sargeant with an A rather than Sergeant with an E. Came to us from Intelligence, Surveillance and Reconnaissance Brigade - rather well recommended, has the distinguished conduct medal for some job in Afghan before he came to the Corps, we were quite surprised that you stuck him on actually.\"\n\n\"I... I thought he was... I thought he was taking the piss, with me being Captain Major.\"\n\n\"Oh shit!\" said David with a groan, \"Was that it?\"\n\n\"Yes,\" I said feeling a bit concerned now.\n\n\"Oh for fucks sake Lin!\" he leaned forward, resting his elbows on his desk, \"His name is actually Andy Sargeant and he's a Fucking Corporal! He spent from Thursday night in a bloody cell, was beasted across to the cookhouse for every meal three times a day, given drill instruction twice a day for two days and generally fucked over... because you THOUGHT he was taking the piss out of your fucking name!?!\"\n\n\"Y...yes,\" I stuttered, not having taken a bollocking like this since basic training.\n\n\"Didn't you ask him?\"\n\n\"No...\"\n\n\"It appears that late Saturday afternoon, he was being shouted across the drill square in some bloody green overalls those savages had found for him, when he saw Mick Turner driving in with his wife and shouted to him to contact me,\" he covered his eyes with his hand and sighed again, \"shortly after that apparently is when he acquired his black eye and thick lip.\n\nMick demanded to know what was going on but no way was the Guard Commander going to release him to a Lieutenant because the really tall scary woman Captain had been very specific. Mick called the duty operator and between them they spent Saturday night trying to find anyone that knew anything about what was going on.\n\nAgain, sadly we nearly all took an early finish on Thursday or Friday and I didn't get the message until twenty three hundred on Saturday and I called the officers mess and got their duty man to go and release our Corporal early hours of Sunday morning. Of course by then the Rifles barrack guard commander had got rather bored of his protestations and requests and he came off the worse for it.\"\n\n\"Oh shit.\" I said.\n\n\"Exactly,\" said David. \"We've given him a week off to recover and try to make things up with his fianc\u00e9e. He was supposed to be attending her sister's wedding with her on Saturday and had no way of getting a message to her. His phone with all of his numbers and his locker keys were in the glove compartment in the car you took to Brize with you, and no one could get into the MT office to get the keys until first thing Monday.\" He rolled his eyes, \"Apparently he's no longer engaged to that particular girl.\"\n\nI slumped in the chair by David's desk, feeling like shit. I'd had a big girl's menstrual tantrum just to prove to some rather nice looking new boy that I fancied but couldn't get to know that I wasn't to be messed with and I got him locked up, beasted, bullied and finally assaulted; basically tortured for three days and had even managed to ruin his relationship.\n\n\"There will have to be an inquiry Lin,\" said David, \"I'm sorry but the family are shouting from the rooftops about how a young innocent war hero soldier ends up in prison for the best part of three days for saying his name. We're trying desperately to keep it all out of the papers. This isn't going to end well.\"\n\n\"I'm sorry David,\" I said, seeing my life's work crashing down around me, \"I'll resign of course, take full blame for everything...\"\n\n\"Pace yourself Lin,\" he said sighed, \"Don't forget, you only locked him up, those damned Riflemen have to take some of the shit, and the rest of the company staff for taking Friday off of course. Go home Lin, I've got your number, I'll call you when the dust has settled.\"\n\n\"Home?\"\n\n\"Yes, a bit sharpish, the last thing I want is for Horseguards to get involved and you have to hide in your room from press photographers and the world thinking you've been confined to barracks. Worst still, some bloody media spooked Brigadier at Whitehall getting cross and actually confining you to barracks. I'll ring you Lin, I promise.\"\n\n\"Thank you David,\" I said, \"I'm really sorry, I...\" I couldn't think of anything else to say, \"Let me know, I'll... apologise to him, formally, the whole company if I have to.\"\n\n\"We'll see Lin, it might all blow over. Go home and relax.\"\n\nHow?\n\nI turned smartly away and headed out into the office and saw the variety of office staff 'not looking at me'. I went to the office I shared with another officer, Mick Turner, to collect my laptop - if I was at home at least I could still do some work, I hadn't been found guilty of anything after all - not yet at least.",
        "On the desk next to mine were the signs of everything that had gone on over the weekend and Mick's dash to release one of his own. There was a mess of notes across his desk and on the scrap pad was written 'Mrs Pam Sargeant (MUM!)' and address and phone number, and a file number.\n\nFor some reason I took a picture of the note; I figured that I would need to be apologising pretty soon, and it would do no harm at all to know where I would have to go, with my cap in hand, and perhaps it would all be OK.\n\nWho the fuck was I kidding, there were probably enough very senior officers that had heard about the 'Strumpet Major' incident and would like to have me out of the way because of what I knew about some inappropriate emails sent by a cabinet minister's son.\n\nI drove home to an empty house, thank God. The last thing I wanted to do was to explain all this shit to my parents.\n\nDad would be all 'wait and see what happens' while Mum would throw in 'well perhaps it's time you left the army and settled down anyway'. Either way I decided to keep it to myself for the time being.\n\nI made some tea, and went up to my old room and lay on my bed. I checked a whole mess of newspaper sites and was pleased that I wasn't on any of them yet. I tried to concentrate on my work but couldn't, and drifted off to sleep.\n\nI woke up, to the rattle of keys in the front door and Dad's coming home ritual, something that I heard so rarely these days since his retirement. He spent a few days a week volunteering at the local college, teaching maths to adult students.\n\n\"Hey Lin, you up there Darling?\"\n\n\"Yes Dad.\" He would have seen my car on the drive.\n\n\"Tea?\" he shouted.\n\n\"Yes please.\"\n\nDad knew enough about what I did not to worry or ask questions about my comings and goings. It was hardly the stuff of a James Bond movie but I think my Dad was more sensitive to what I didn't say, where Mum just thought that while I could be heavily involved of matters of national and global security I'd always be her little girl that needed her advice on everything.\n\nDad brought me a cup of tea, and I continued to tap quietly into my laptop trying hard to not think too much about my entire career and 12 years of hard work flushed down the toilet because I tried to show off. I used my secure key to log into the network and typed in the file number that was written on the note. It was Corporal Sargeant's personnel file.\n\nI tried not to look honestly I did.\n\nBecause of my position in the unit I had access to that sort of file and figured if someone asked me why I was looking up this man I'd dropped into the shit big style, I could always say I was looking up his home address so I could go and apologise.\n\nAnd it started; I noted on the spreadsheet there was a press cutting. I went straight to that guessing that it was about the brave thing that he had done that David spoke of. \n\nI stared at the screen in disbelief, just when I thought it couldn't get any worse, there he was, dressed in a khaki uniform at the funeral of one of his colleagues. Not only a colleague but a female colleague. \n\nThe headline was about a young soldier flown back from Afghanistan for the funeral of his girlfriend killed in a car accident. She was a dog handler and in training to start her deployment and weeks short of flying out to Helmand to join her boyfriend, a Lance corporal in The Welsh Guards, she had been killed by a mother of two texting her friend while driving.\n\nNext to that was the citation for his distinguished conduct medal quoting that Lance Corporal Andrew Sargeant, 1st Battalion Welsh Guards, was part of a foot patrol on Sangin Province that came under effective enemy fire.\n\n\"Lance Corporal Sargeant took the initiative and deployed his section automatic weapon with such effectiveness he was able not only to supress enemy fire to allow his patrol to withdraw but stayed in contact to then enable the patrol to re-engage with the enemy and defeat them. Following this, and low on ammunition, as the patrol moved back to their pick up point, they again came under fire and Lance Corporal Sargeant, knowing his ammunition levels were low, advanced to contact and under his inspired show of leadership his patrol were able to overrun the enemy position, again defeating a numerically larger force.\"\n\nShit; a hero with a dead girlfriend. I was fucking sunk - the moment the press got a grip of this shit I was history, completely and utterly and I could imagine the 'slow news day' articles catching up with the bitch officer that had bullied some poor war hero, closely followed by the purchased emails about how she had shagged her way across the continent with another war hero and tried to blackmail him; Roger would finally have his revenge against me.\n\nBy the lunchtime of the second day at home I was exhausted and existing on nervous energy and hot tea. I had hardly slept and was now emotionally wrecked and beside myself and riddled with guilt. I was a nice person, a professional but I was totally floored that my stupid decision had all but ruined a soldier's life. \n\nNot only had I imprisoned a completely innocent man, I may very well have ruined his chance of happiness with his chosen woman after losing his first one; the fact that he was making big eyes at me over a week ago completely passed me by.\n\nI could stand it no longer and without a call from my Boss I dug out my mobile and looked at my hastily taken snapshot of Corporal Sargeant's home address and it was an hour away, just into the West Country. So on that damp, miserable Wednesday, I jumped in my car and headed South West, I would apologise to him and to his fianc\u00e9e before it all hit the fan just so he'd know that I really meant it and not just doing it because of the press attention or the very senior officers telling me to.\n\nAfter that I'd drive back to London, throw myself on my sword and hope to keep my head down so I didn't render myself completely unemployable.\n\nI stopped for a coffee and a pee and became more and more nervous. I just could not get the image of a member of my corps in jail for almost three days, being treated like shit, hating every second of his incarceration and railing at the unfairness of it.\n\nI felt tears come to my eyes; that was it, the whole thing was just so unfair, and my fault and I was about to pay the price.\n\nThe satnav built into my smartphone told me I was getting closer and closer to my goal, but I was still out in the country and the tiniest hamlet with no more than a dozen houses. As I stopped at the biggest house with, of all things, a white van with 'police' markings on the drive the female voice said, 'you have reached your destination' - it only needed 'and may God have mercy on your soul' to completely frame my mood.\n\nI checked the house number, it had to be the one.\n\nI took my phone and locked the car, and walked to the front door. I knocked, my heart in my mouth. \n\nA jolly and quite tall lady came to the door and as she opened it I saw that she was holding a small child, I was no expert but I guessed about six months old.\n\n\"Mrs Sargeant?\" I asked.\n\n\"Yes,\" she said guardedly.\n\nI got my ID card out of my pocket, my fingers trembled the tiniest bit,\n\n\"I'm Captain Lin Major, from the Intelligence Corps HQ, is Andy at home?\"\n\nFar from the tilted nose and cold snapped response of the complaining family David had told me about, she smiled, \n\n\"He's out shopping with his sister, they won't be long,\" she looked at me and her head moved to one side. She smiled and narrowed her eyes, \"come in and have a coffee while you wait, it's too cold to sit out here in your car.\"\n\n\"Thank you,\" I said, reverting back to a person I could hardly remember, \"I'm rather afraid Andy won't be that pleased to see me.\"\n\n\"Don't worry Lin,\" she smiled genuinely and pulled the door open stepping back.\n\n\"So long as you're sure it's no trouble.\"\n\n\"Of course not, anyway I've just switched the coffee machine on.\" She stepped away indicating I should follow her direction along the corridor and closed the door. She looked at my worried face, \"Don't worry honey, life's too short to worry about too much shit.\"\n\nI tried to grin but it didn't come. True to her word the house did smell wonderfully of fresh coffee.\n\n\"So you must be 'Captain' Major then,\" she said. I could feel it coming and I nodded waiting for the abuse. She smiled and held out her hand, \"I'm Pam, Andy's Mum, and up until ten years ago Sergeant Sargeant of Avon and Somerset Police; luckily I got promoted to Inspector, I only went for it 'cos I was sick of being Sergeant Sargeant. Don't you just hate names?\" I opened my mouth a few times and tried to speak. \"God knows why Andy took a bloody job with a rank structure, I did warn him about this shit. Sugar?\"\n\nShe was pouring coffee into a large mug having placed the baby into a bouncy chair.\n\nI smiled,\n\n\"One please.\"\n\n\"There, that's better!\" she said grinning at my grin and spooned sugar into my cup. I couldn't help but smile at this nice lady and put a hand over my mouth. \"Oh don't hide that lovely face of yours Darling!\" She handed my cup across to me and it tasted quite wonderful. \n\nI tended to be an instant coffee girl and other than the occasional latte when out with friends, of which I didn't have that many, this was a real treat.\n\n\"That's lovely,\" I said, \"It's a treat to have real coffee.\"\n\n\"I'm the same as you honey, spent far too long drinking crap coffee at stupid times of the day, so once I retired I spent the money the shift gave me on this coffee machine.\" She turned and proudly patted the machine, a tiny version of those you find in all of the high street shops.\n\nShe smiled at me and paused, as if a thought had crossed her mind.\n\n\"Pull up a chair there sugar,\" she said indicating a high stool at the counter she was leaning against.\n\nI had to say something, before I burst into tears.\n\n\"Pam, I'm really sorry for getting Andy into so much trouble, I...\" I gulped back some emotion that been simmering for days now, \"I'm going to apologise to him and to you, to you all,\" I thought about the fianc\u00e9e.\n\n\"What?\" Pam looked at me and tilted her head to one side.\n\n\"You made a complaint as well...\"\n\n\"Not us Darling,\" she said with a grin, \"That cowbag of an ex of his may very well have done, but not me sugar,\" she smiled. She looked at me, tilted her head to one side in the same way she had before with a hint of confusion then stepped towards me and pulled me into a hug. I felt my shoulders heave just the tiniest bit and she squeezed me tighter and rubbed my back, \"Hey hey,\" she said hugging me, \"It's OK, he's a big boy Darling, and it isn't the first time the army has done something mean to him or even coming home with a black eye. Don't worry Honey!\" She gave me a final squeeze and stepped back her hand on my shoulders.\n\nIn a bouncy seat almost next to me on the counter was the cutest giggling baby girl bouncing happily and grinning at me. Even with tears in my eyes, I grinned back unable to do anything else and she screeched and clapped in delight, and as I laughed she laughed. I could see that my host was smiling and laughing as well.\n\n\"Lin, this is my precious granddaughter Laura!\" Pam took her hands from my shoulders and turned to the baby.\n\nOn hearing her own name Laura chuckled and her bouncing increased, and Pam turned the seat so the baby was facing me. My experience with babies and small children was negligible but I put my cup down and covered my face and played 'Bee-bo', Laura reacting with delight again.\n\nMy host was sipping her coffee and smiling, not in any nasty way but just as a pleased grandparent watching someone taking pleasure in her greatest pleasure.\n\nI stopped and drank my coffee and Laura quietened, and Pam asked if I was hungry,\n\n\"No,\" I said, \"I'm fine, thank you.\" I tried to smile.\n\n\"I don't believe you,\" she said looking at me, \"Police officer Darling,\" she said, \"you get used to the look,\" she stood and pulled open the large fridge and started to unpack things from it, \"and I get the feeling that since all this shit went down you haven't eaten enough to keep a rabbit alive.\"\n\nShe was right of course.\n\n\"Ham?\" she said and I nodded. Within seconds there was a thick granary bread sandwich with wonderfully thick slices of ham, tomato and lettuce, and a generous pouring of mayonnaise. \n\nHer house was lovely and warm against the March chill, and I was getting quite warm. Mum and Dad were both retired but still busy and the heating was rarely on during weekdays, so I slipped off the fleece that I wore almost constantly while at home.\n\nPam looked me up and down, I was dressed in a roll neck sweater that showed off my upper curves at least, she smiled and put the sandwich by my hand. I couldn't resist it and it tasted wonderful as I took my first bite, and my hostess was delighted.\n\n\"That's better!\" She smiled and I couldn't help myself. I done years of training and had studied psychology and all kinds of questioning techniques but this woman just had the ability to strip away all of the defences that Captain Lin Major had built around herself leaving just Linette stood there, the embarrassed girl that had messed up.\n\nI had a second coffee after my wonderful sandwich and it was getting into the afternoon, and Pam and I had become, well, friends I suppose. She told me about her career as a police Inspector, her husband Dave was still serving but in a civilian capacity. She had met Dave when he had first joined from the army and like everyone else ribbed 'Constable Sargeant' about his name. Three years later she had stepped out of the local church on his arm and she too was Constable Sargeant. Ten years on from that she became 'Sergeant Sargeant'. She shrugged her shoulders,\n\n\"Shit happens Darling - you pressing for promotion?\" she giggled.\n\nI giggled back,\n\n\"Yeah if I'm honest, not too struck on Major Major but let's face it these days it's as much about the pension as anything.\"\n\n\"Tell me about it,\" she sighed, \"Dave had to work through 'til fifty five to make his worth having, he's a crime scene investigator these days now that he's retired hence the van out the front.\"\n\nThere was a slightly grumpy noise coming from my new friend Laura next to me, but Pam was already on it. \"Would you give Laura her bottle for me Lin, I'll make more coffee.\" She handed me the standard bottle straight from a purpose built warmer.\n\n\"I... err...\"\n\n\"Oh it's easy Darling,\" said Pam and lifted the tiny baby out of her bouncy chair and handed her across and placed her into the crook of my arm. Still way out of my depth I put the bottle on the worktop and tried one handed to take the plastic cover off. Pam watched and removed it for me so I raised the nipple and moved it towards Laura's mouth.\n\nFortunately for me Laura knew exactly what she was doing and opened her mouth and even went as far to put her tiny hands on the side of the bottle, her fingers touching mine and squeezing my index finger against it.\n\nThe first thing I noticed was the wonderful baby smell; I heard people talk of it but this was the very first time I'd encountered it and it was hypnotising, as was everything about this tiny person; her tight hold to my finger, her big blue eyes looking up at me, the quiet contented noises she made as she fed and the warmth of that tiny human being in my arms that figured that right now I was the centre of her world.\n\nFor the first time in my life I understood my Mum's desire to be around babies again.\n\nLaura finished the bottle and Pam refilled my coffee cup by my elbow.\n\n\"The next bit takes a bit of practice,\" said Pam holding out her arms and taking the baby from me. She placed an muslin cloth across her shoulder and then began to both rub and pat Laura's back and before I knew it a loud belch of wind was released and I will confess myself surprised that this tiny human could make that much noise!\n\nI had a sip of coffee and Pam had a large bag and was changing Laura before laying the contented kiddie back down in her seat, and we sat chatting sweetly about children. I was an only child, a career girl with no significant relationships in my past. To this day I'm still so amazed that I could let down my defences to this lovely lady I'd known for an hour and a half in not the most ideal circumstances.\n\nAndy was one of twins, and Laura was his sister Katy's child and they were currently out shopping and due back any time.\n\n\"I'm not sure what I'm going to say,\" I said feeling quite sheepish again.\n\n\"Katy won't mind at all,\" she grinned, \"Because of all this she has her twin brother home for the week of her wedding anniversary!\"\n\n\"It's more about Andy,\" I said, my reason for being there coming home to me again.\n\n\"Are you sorry?\"\n\n\"Yes, more than I can begin to say.\" I said keeping eye contact.\n\n\"Have you learned from your mistake?\"\n\n\"Yes,\" I said.\n\n\"And you won't make that mistake again?\"\n\n\"Definitely not.\"\n\n\"Then tell him that then honey,\" she grinned, placing a small cake on my now empty sandwich plate, \"in fact you can tell him now, that's Katy's car that's just pulled on the drive.\" She must have read my body language, and put a hand on my shoulder, I was holding back tears, \"Honey, if it helps, don't think about him as a corporal, think about him as a bloke. Just tell him sweetie, just apologise. If he's half the man I think he is, he'll tell you not to worry and buy you a beer.\"\n\n'He'll buy you a beer...' - that simple sentence resonated with me, and far from the connotations of forgiveness, the concept of me and Corporal Sargeant in a bar together slapped me in the face. That was it, Corporal Sargeant was extremely attractive now I came to think back on it.\n\nShe picked the now sleeping baby out of its bouncy chair and headed next door. I heard her talking brightly to some people, and heard the words, 'a friend of Andy's from work in the kitchen', I'll make some tea once they've had a chance to have a chat'.\n\nAnd there he was. \n\nHis fat lip and bruised cheek were fading nicely but he still looked as madly attractive as he had that Thursday morning when our fingers touched. Attractive? What was I thinking? This was the other ranks man I'd dropped in the shit and was pretty soon to follow him in if I wasn't careful.\n\n\"Good evening Mam,\" he said with the same gentle smile I'd had from him almost a week ago with that rumbly deep voice.\n\n\"Good err... evening Corp... err... Serg\"\n\n\"It's my Mum's kitchen Mam,\" he said sensing my discomfort and lifting the half full coffee pot, \"I think you'll get away with Andy.\"\n\n\"Sorry,\" I said. Looking down, then catching up with myself, \"I mean... sorry for calling you...\" I put my head in my hands, took a breath and looked up again. \"Can I start this again?\"\n\n\"Of course Mam,\" he said with that same gentle smile, and it wasn't making this any easier.\n\nI was still sat on his Mum's kitchen stool, and swung it to face him,\n\n\"Andy, I am SO amazingly sorry for the world of crap I dropped you into, I can't even begin to apologise enough for everything, but I'll have a go.\"\n\n\"Go for it,\" he said, still smiling, with some mirth but in a nice way.\n\nFor the last two days I'd been thinking of what I would say to this man by way of apology, and here I was - and I couldn't think of a single word. I shrugged my shoulders feeling my eyes fill with unbidden tears.\n\n\"I have no excuse,\" I said shrugging my shoulders and staring at the floor, and seeing as I was baring my soul here I wiped away one stray tear and added \"although I was due on...\" with a faint laugh.\n\n\"Oh that'll do it Mam,\" he said.\n\n\"I'm sorry?\"\n\n\"You were about to have the monthly monsters - some smartarse taking the piss? All you could do. I do have a sister Mam,\" he whispered to me conspiratorially.\n\nI felt my eyes narrow, and looked across at him, and his rather cheeky smile.",
        "\"Ooohkay,\" I said, trying hard not to return his grin. \"Anyway, I'll put it all in writing, if you want to make an official complaint and do whatever is...\"\n\n\"Hey whoa Boss! Easy!\" he said with a beaming grin, and perhaps the most shocking thing, gently resting a hand on my trembling one. \"It's OK,\" he said quietly, \"I'm a soldier; before I was Int Corps I was a grunt,\" he stood and took my now cold coffee cup from my shaking fingers and with a deftness akin to a high street barista proceeded to make me a latte with his Mum's wonderful retirement gift. \"A Latte Mam, sorry we've no vanilla Syrup, the way you like it!\" He grinned, it was my order from Starbucks when he stood behind me. He took a sip of his regular coffee, \"and all that shit with the Guardroom? I was a Guardsman, I had worse beastings than those Rifles pussies could dish out on a monthly basis; amateurs Mam,\" he smiled showing perfect white teeth and handing across my now refilled mug, \"total fucking amateurs.\" He gave me the most wonderful warm smile that I could only respond to in kind. I took my mug from him and our fingers touched, I felt a warm tingle when they did, \"Buy me a pint and we'll call it quits.\" I blushed; it was as my new friend Pam had predicted and I thought about being in a social situation... no a date, with this man I was becoming more and more impressed with on so many levels.\n\n\"Thanks Andy,\" I said taking a deep breath, and extending a hand.\n\n\"You're welcome,\" he said, \"Green slime?\" He took my hand and we shook - it felt electric.\n\n\"Green slime,\" I said with a slight tremble to my voice.\n\nGreen slime was the nickname the rest of the army used for us based on the bright green berets that we wore and was easier to use than our motto \"Manui Dat Cognitio Vires\" (Knowledge gives Strength to the Arm).\n\nPam must have been watching for within seconds of our handshake she was coming back through the door with a big smile on her face and who I guessed must have been Andy's sister. She was as happy to see me as her Mum. For me, the most amazing thing was when I stood to shake hands, Corporal Sargeant's sister was as tall as me!\n\n\"You must be Andy's boss!\" she beamed, her head slightly to one side, \"I'm Katy.\" We shook hands.\n\n\"Lin,\" I said.\n\n\"Lin with an I or Lyn with a Y?\" she grinned. I was stunned, here I was, the woman that had seen her lovely twin brother in jail and beaten up, and she was chatting to me like a friend.\n\n\"It's with an I but people tell me it should be a Y, my name is Linette.\"\n\n\"It's a lovely name anyway Lin,\" she let go of my hand and folded her arms and looked at me then across at Andy. \"Lin, it's my fifth wedding anniversary today and we're all going out for dinner and we're one short, won't you join us?\"\n\n\"Oh how lovely,\" said Pam, \"please do Lin.\"\n\n\"Well I...\" I looked down at my black polar neck shirt and my baggy black Levi's that I threw on that morning, and saw my escape, \"I don't have anything...\"\n\n\"No problem,\" said Katy taking my hand again, \"I've just bought a couple of blouses and they'll fit you perfectly,\" she pulled my by the hand out of the kitchen and stopping just to grab a fashion store bag by the front door, dragged me upstairs.\n\nThis was my first girly moment in many years, I did revert back to that kid that went home at weekends from Sandhurst and went out with my few remaining mates not bothered by my now being in the army. I found myself in an upstairs bedroom.\n\n\"You're a size eighteen and a 40-C aren't you?\"\n\n\"Yes,\" I said, \"Ever since college.\"\n\n\"Me too, try this,\" she handed me a pale green blouse she had taken from the hanger. I made to slip it over my polar neck, \"Oh no,\" she said, \"That'll never do, take that off, I won't look.\"\n\nI grasped the bottom of my shirt and with some difficulty pulled it over my head.\n\n\"Wow,\" said Katy, \"being in the army means you stay in shape, you are hot Lin.\" I blushed, I'd not had compliment like that in years, \"Shit, you're wearing a black bra, it'll show through, wait there. Mum!\" She stepped out of the room I was in to shout down the stairs, \"Need to pinch a black blouse!\"\n\n\"No problem,\" came the response, \"the nice M&S one... NO!\" she shouted back, \"the stretchy little black dress you gave me!\"\n\n\"Oooh yeah,\" purred Katy.\n\nLittle black dress?\n\nWhat?\n\nI hadn't shaved my legs in a couple of weeks, I still had March pale pastey looking skin in dire need of some sun, it was half past five on a Wednesday evening and all of a sudden what would have been popping out to the local pub for a steak and a couple of beers was now becoming a dressing up occasion.\n\n\"Err... Katy, I don't have anything with me, I don't think I have more than a lipstick in the car,\" I said as my new friend came back in with a most fantastic creation that I could see from the hanger was going to look good. The label told me it was from a Tall Ladies clothes shop.\n\n\"Aww don't worry, I've got stuff I can lend you, we're the same size; tell you what, you come back to my place and you can have a shower and get ready, and I'll do your hair for you, trust me, I'm a professional stylist and I specialise in tall women. I have to take Laura home anyway.\"\n\n\"But...\"\n\n\"Please...\" she said.\n\nSo somehow I found myself driving back to the house of this lovely young lady, well four months older than me in fact, the twin sister of one of the soldiers from my regiment. Somehow I just went with it.\n\nBack at Katy's house, I had my first cup of tea of that day, I had rather over done the coffee bean. Katy was a hairdresser and a beautician as well as a stylist and while I sat at her kitchen table now, she would walk past and occasionally run fingers through my hair and say things to herself.\n\nWhile Katy made the tea, I again chatted with and bounced her baby daughter on my knee, and it was lovely. Katy came and sat by me and we went through the pains of being a foot taller than the rest of the world and she talked to me about clothes and got me to stand and asked me about what I liked, dresses, trousers, jeans, form-fitting, loose, all in depth stuff.\n\n\"I'll help you out with your wardrobe,\" she said, \"All I can do for you seeing as I'm bullying you into coming out with us.\"\n\nI was also introduced to her husband Lee, another police officer that was running in to get ready for their anniversary celebration, and I noticed like the rest of the Sargeant clan, another giant at least 6 feet 6 like his brother in law.\n\n\"Lee, this is Andy's Boss,\" she called to him as he hung his jacket.\n\n\"Hi,\" said Lee, \"Is my lovely wife dragging you out with us tonight?\"\n\n\"Yes,\" I said.\n\n\"I'm so sorry Lin,\" he said, \"she's beyond my control.\"\n\n\"Yeah!\" said Katy.\n\nTea finished, I found myself in the bathroom of Katy's lovely home, and being given a towel, a disposable razor that I added to the pair of black panties and the toothbrush and paste I tended to keep in my car for emergencies.\n\n\"Spray's, deodorants and perfumes all here,\" she said pulling a cupboard door open, \"Help yourself.\"\n\nShe saw the panties I'd got from my car. \"Oh no way Lin,\" he giggled picking them up and stretching them out as if they were the main sail from the Black Pearl. \n\nShe opened a cupboard door. Inside was a new pack of knickers and she took a pair from the top, \"Brand new,\" she whispered, \"Much better with Mum's dress.\" She held those out, a tiny triangle of almost transparent black lace with some black string hanging from it and I blushed never having owned or worn a pair!\n\n\"Aww Lin!\" giggled Katy, \"you're so sweet!\"\n\nI headed into the bathroom with my tiny bundle and shaved my legs, and for a reason best left to my subconscious my pubic hair. I'd seen many pictures over the years - when you work on army bases you see plenty of porn, trust me - and I'd always fancied trying the thin strip, and I had a go. \n\nMy nerves, lack of practice and general incompetence with a razor down there had me just shaving off the whole fucking thing for the first time since that bloody holiday with the Ranger.\n\nI must confess I still love the look of it first time around and I was lucky that there was some good quality moisturiser in Katy's cupboard and for once no nicks or cuts. I dried myself, leaving my hair wet as ordered by Katy, and pulled on the tiny panties she'd given me. I looked in the bathroom mirror at my body, twisting and turning and feeling not good but actually sexy for once. Sexy for me, and no one else, sexy because I wanted to be sexy and I had some help from an expert.\n\n\"I still can't believe you're all being so nice to me,\" I said, checking out the most fantastic 'Rachel' cut Katy had shaped my wet hair into with nothing but some short scissors, a comb, hair drier and tongs before a dressing table in her bedroom. Next she was brushing some powder onto my cheeks.\n\n\"Oh, don't worry about it Linnie,\" said Katy, \"he's a big boy!\"\n\n\"But what about his fianc\u00e9e?\" I said.\n\n\"They weren't engaged!\" roared Katy, \"She told the world that they were, because she asked him if they could get married and he didn't say no straight away.\"\n\n\"Did he say yes?\"\n\n\"Not according to him,\" gigged Katy, \"She bought her own ring, and along with her appalling mother and appalling sister she's been trying to bully him down the aisle for months. Luckily for him the army keep sending him to places like Iraq and Afghanistan and Northern Ireland. He's well shot of that bitch I think.\"\n\n\"So it's all over?\" I realised that I might have seemed a bit too interested!\n\n\"Fuck yeah,\" said Katy, \"Andy tells me she complained that the army was doing it on purpose and demanded compensation. Andy said that it was hardly good for his career, so she demanded he left the army. He said no, she threw the ring at him. There,\" she said looking at me in the mirror, \"how's that?\"\n\n\"Perfect,\" I said. And it was, Katy had shaped my eyebrows, and then made up my whole face, eyes, cheeks, lips. Coloured and shaded, I looked at the fashion model looking back out at me in the mirror, a view I had never seen before. \n\n\"With another half hour, I'd have given you highlights; well low-lights actually, with gorgeous dark hair like this.\" She drew her fingers through my hair, I guessed working out where the dye would have gone.\n\nMy hair had ceased to be the dark brown mass that I threw into a pony tail and was now shaped into something that went with the shape of my face and the eyebrows, and the foundation, powder and everything else that my new friend had done for me took my breath away.\n\nKaty giggled again as she slipped off her dressing gown leaving her in bra and high cut shorts showing off her cute bottom to pull on her sheer tights, she was beautiful, \n\n\"Anyways,\" she went back to Andy's so-called fianc\u00e9, \"she realised that he'd had nothing to do with buying the thing, and pushed him away from it and picked it up herself.\"\n\n\"And Andy is OK with it I suppose.\"\n\n\"Well he's not that upset about it that's all I can say.\" She pulled her tights on and picked up a little black dress much like the one I was to put on.\n\nHaving watched my hostess get dressed I guessed that I should do so as well, and slipped off my borrowed robe and stood in my black panties and bra, and pulled on the special long leg tights that Katy had given me and slipped on the really high, for me at least, two inch heels she'd found, not to make me taller she'd said, more to shape my calves and show off my lovely long legs. Then I took the stretchy black dress that I been loaned by Pam and pulled it on.\n\nThe dress as quite low cut at the front, for me at least, and Katy looked at my chest critically.\n\n\"Take it off Linnie,\" she said with a furrowed brow.\n\n\"Is it OK?\" I was a bit worried, I thought it looked rather good.\n\n\"Good, but could be much better.\" She said and turned back to her chest of drawers routing around for something, \"ahh yes!\" she said triumphantly, \"put this on.\"\n\nI twisted out of the stretchy dress and Katy handed me a black bra, the label announced it was a Wonderbra. Not even thinking about bare tits, I unclipped my ordinary bra, I put on the new garment I'd never had the nerve or, on reflection, the need to buy.\n\nI clipped it into place and without word or preamble Katy took hold of it and started to arrange my now cleavaged boobs getting the shape as she wanted it. She grinned,\n\n\"Don't worry Linnie, I'm a professional and I do this shit all the time,\" she picked up the stretchy dress and handed it to me. I pulled it on, turning so Katy could arrange it, and me, to her satisfaction. She stepped to one side and pushed me towards the mirror.\n\n\"Lin,\" beamed Katy looking over my shoulder into the mirror, \"that's perfect.\" She rested her arms on my shoulders and she kissed my cheek.\n\nUsing Katy's mirror I twisted and turned, looking at the fantastic female form, mine, that she'd unwrapped.\n\n\"I'm so good at this...\" she hissed with a huge grin on her face, and quite rightly.\n\nFuck, but I looked good. My ten plus years army officer brain was jumping out at me and screaming that this was wrong but as I turned from side to side and looked at my still hot curves, I decided to ignore me.\n\n\"Linnie,\" said Katy, \"you look HOT!\" I had a waist, my hips flared down to the black dress that stopped halfway down my thighs, and there was my cleavage.\n\nI'd never had one, not never ever, and it made me feel like a million dollars.\n\nI beamed a smile back to her,\n\n\"Yeah,\" I said with some element of surprise, \"I do don't I!\"\n\nI sat in the back of Katy's car and was actually buzzing. This was a first for me.\n\nI'd dressed up before of course, but it was always to look smart, business like, feminine. I was so intent on my education, I couldn't remember getting this glammed up that often. At University I had been a bit of a jeans and T-shirts kind of girl, as I was quite rough and tough even then. Because I had hardly changed since leaving school, I wore my prom dress with some minor adjustments to my graduation ball. Once I passed out from Sandhurst I had some long dresses and a couple of cocktail frocks and a long mess dress uniform for more formal events.\n\nTonight I was doing sexy for the first time and it was exciting.\n\nWe arrived at a very nice restaurant and parked.\n\n\"Come on Linnie,\" said Katy, as excited as I was evidently, and she scrunched my hair again, given it a bit of a tousled but still sexy look before she tucked an arm under mine. It wasn't something I could do with anyone else because of my height and I realised how nice it was just to stand there with someone that was as tall as me. We entered the foyer and there was Pam and her husband Dave, looking as posh as we did. Dave was another six footer and for the first time in my life I was surrounded by people I didn't have to look down at. To add to that I was dressed like a fashion model! Pam looked at me and my smiling face appreciatively, and my apparent need to look at myself in every reflective surface and nodded, giving me a thumbs up and a wink.\n\n\"Andy's at the bar Lee,\" said Dave.\n\n\"I'll go get the drinks,\" said Lee.\n\nI felt I should start to repay some kindnesses and said I would join him.\n\n\"Let me Lee,\" I said, \"I have to buy Andy one anyway,\" I winked back to Pam.\n\n\"Go get him Lin...\" she hissed to me.\n\nI stopped and stepped back to her.\n\n\"Pam, he's lovely but...\"\n\n\"No buts about it Darling,\" she sighed with a smile, \"Look, you have to be the gorgeous girl in Starbucks that smiled back at him he told me about not two days ago yeah?\"\n\nI smiled back,\n\n\"I guess I must be,\" I said.\n\n\"Well, think about that gorgeous bloke in Starbucks,\" I took a breath, \"not the Corporal, the good looking guy that undressed you with his eyes and altogether failed by not asking you for your phone number.\" She took a breath, \"If that tall attractive man had asked you for your number, would you have given it to him?\"\n\nI stood stunned, still not sure how to answer this woman and opened my mouth, but he shushed me.\n\n\"The only person you have to answer that question to is you Darling.\" She took my hand and squeezed it.\n\nI smiled and slipping my borrowed clutch bag under my arm I stepped towards the bar that was filled with other party goers, looking around for Andy... Corporal Sargeant; I couldn't see him.\n\nNoticing a gap I stepped up to the bar, and asked for a Diet Coke, my heart pounding.\n\n\"Like this one?\" he said, \"Just a lucky gue...\"\n\nI turned hearing a voice I knew, but looking at an amazing smart and attractive man in a tailored suit and looking a million dollars. The faint colour in his right eye made me remember just who it was.\n\n\"Wow...\" he said checking me out and smiling, \"I mean Wow Mam!\"\n\nI felt my face flush not just at how good he looked but at his obvious scrutiny of me in my stretchy dress showing my cleavage and curves to their full effect with my legs lengthened by my borrowed heels. In my nervousness I held my hands out and did a quick twirl. I thought about him undressing me with his eyes again.\n\nTo ease the tension he gave me my glass then did a twirl himself; shit but he looked good.\n\n\"You're looking err... yes,\" I said making a point of looking him up and down, \"Looking extremely good yourself... Andy.\"\n\nLoaded with drinks - Andy of course knew what his parents, brother in law and sister drank - we walked back to the table and the party of really tall people were settling along a long table, four a side and we were the focus of attention for the whole place.\n\n\"Boy, girl, boy, girl I think,\" said Katy getting things arranged for their anniversary party.\n\nWe were sat as decreed and I found myself between Lee's Dad and Dave, opposite Andy. The lighting was subdued and the candles were just enough to add some enchantment to the proceedings and my hosts were all charming, including me in all of the conversations. There was some police talk of course as four of the eight around the table were or had been coppers.\n\nAs the food arrived, I was finally able to chat to Andy.\n\nHe tucked into a plate of steaming whitebait while I had my favourite prawn cocktail and we started the 'getting to know you' chat. He confirmed what I read about his service in the Welsh Guards, being born just across the Bristol Channel from the principality, and it was his Dad's old regiment. He had served in lots of places with them and then told me about his mate from the Royal Army Veterinary Corps that had been killed.\n\n\"I'm sorry Andy,\" I said, \"were you close?\"\n\n\"Only in the way most squaddies are,\" he said sipping his beer, he was about to speak but was holding back a bit; he finally spoke, \"that's not quite true,\" he said and looked at his Mum next to him, \"we were special buddies,\" he whispered with a grin and I nodded with pursed lips, \"nothing serious, but might have headed in that direction given more time. Tragic the way she was killed, I mean... it would have been tragic if she had been killed in action, but being killed by some stupid bitch chatting with her friend at sixty miles an hour with two kids in the back, that's just... that's pointless.\" He sipped more beer. I felt that a change of subject was needed but not too obvious, so I asked why the jump from the perfection and precision and tough fighting soldiering of the Household Brigade to a comfy seat in the Intelligence Corps.\n\n\"Because it was comfy mam, don't get me wrong I did really enjoy standing outside the Queen's house for long periods and trooping the colour and all that. I just fancied a slightly easier but more cerebral pastime.\" He sipped his beer and dropped his voice, \"I did a tour with 14 Int and that was it.\"\n\n14 Intelligence and Security Company was an all arms unit based in Northern Ireland that did lots of covert intelligence work and drew men and women from across all walks of service life for a two year tour.",
        "\"Wow!\" I said, \"Impressive!\"\n\n\"Loved it,\" he said, \"I was about to go back to the Guards when I was sent off to do an interpreter course ready for a trip to Afghan. The Course officer recognised me from The 14 Int and that was it. I transferred out of the Guards about six years ago. Don't regret it for a second.\"\n\n\"I bet you miss the pageantry.\" I sipped some of my diet Coke.\n\n\"Oh don't get me wrong, I hear 'The Rising of the Lark' and my shoulders pull back and I want to march. When I was at Munster couple of years back and we had a minor Royal Visit and the OC got me to sort out the Guard of honour. Still a buzz.\"\n\n\"He's still going to join the bloody police though I bet,\" added Pam.\n\n\"No thanks,\" he said, \"after twenty odd years in the army, last thing I want to do is work for a living.\"\n\n\"You out for the full 22 then Andy?\" I said. The standard engagement in the army was for twenty two years with options to leave after set stages had been reached.\n\n\"Dunno.\" He looked quizzically, \"I signed on for 22 with an option on twelve and that was a few year's ago.\" \n\nSame age as me then by the sound of it.\n\nOur second course choices were brought around, and mine was a ribeye steak still sizzling from its removal from the grill. It looked wonderful.\n\nLee's Mum, looked over her substantial Beef Wellington as I cut into my steak, rare - perfect. I cut off a thick slice and the flavours were amazing. Andy had the same.\n\n\"I love to see girls that really enjoy their food.\" She said, \"Andy's last girl didn't eat anything.\"\n\n\"JUNE!\" Said Katy from the far end of the table.\n\n\"But she didn't!\" said the lady, \"it was painful to watch her picking over her food sometimes, and it's just that Linnie is so enjoying that steak!\"\n\n\"Don't worry June,\" I said, \"and for the record, the steak is fantastic!\"\n\nWe had a giggle, and the discussion eased again as we got stuck into our fantastic mains. I sipped more of my Diet Coke, I still had to drive home after all.\n\nThe sweet course followed and I went for my all-time favourite creamy, crunchy, sticky, fruity, gooey Eton mess. It was wonderful and I nearly had a second bowl.\n\nThen as we were all starting to think about coffee, the music system played 'the wedding march' and a cake and some champagne bottles were brought out to an overjoyed Katy and a slightly embarrassed Lee.\n\nThey cut the cake and the waiters took it to one side and soon pieces were handed around with a champagne flute and once poured, called 'To Katy and Lee!' \n\nWe all joined in.\n\nThe champagne was wonderful. I had always liked it and this one was particularly good and I went mad and had a second glass. Pam saw me cringe and hesitate as the waiter went to refill my glass for a third time.\n\n\"Don't worry Darling,\" said Pam, \"you can sleep over; Katy's room is all made up, relax and enjoy yourself - you could do with it.\" She reached out a hand and squeezed mine.\n\nI looked at her, grinned and held my glass up for the waiter to refill. I was feeling better. Pam, Dave, Katy, Lee and Andy all told stories about their upbringing and some jokes and I got wrapped up in this lovely, bright family. I was a classic only child raised by two only children and never had family gatherings like this one and it was enchanting. \n\nPam could obviously read my joy and when Dave went to get more drinks, she sat next to me and put an arm through mine, it was quite wonderful, \"My Linnie will have a bottle of Stella Artois,\" she called to her husband; strange it was one of my favourite Lagers and obviously one of hers.\n\nAfter the cake and champagne the tables were cleared and a DJ started the music calling for Katy and Lee to come up and have the first dance. It was very sweet then they were joined her parents then his parents.\n\nSat on our own, I finished my bottle of beer and thought about another, staring across at the attractive man I was feeling closer to by the minute.\n\n\"Mam,\" he said.\n\n\"We've just had a quite fantastic evening Andy, I think you can call me Lin.\"\n\n\"Lin, would you like to dance?\"\n\n\"Yes please.\" I said, with a bit of a girlie smile; after all I had been waiting for him to ask me for the last few minutes.\n\nHe stood and he took my hand. We walked out to a dance floor clear enough to dance on comfortably but with enough people not for us to be too obvious or to stand out.\n\nHe put an arm around my waist and I out one on his shoulder, he took my other hand we moved gently to the very nice music. The DJ saw that the slow stuff was what was currently wanted, and kept it to that for a few songs. I don't think that I had enjoyed a dance like this since my first tall boyfriend back at University. Everyone since had been shorter than me and really conscious that he had to reach up to take my hand.\n\nBut with Andy, well, it was perfect. For the first time in my life I was looking up into the handsome face of my dance partner just like it talked about in all of those Mills and Boon books I'd read so avidly.\n\nI noticed that Pam was watching us. I still had a feeling this lovely woman was still trying desperately to set me up with her son and it was getting closer by the minute. \n\nThat couldn't happen. The army would have a problem with it after all. It wasn't against the regulations as such but if it had an adverse impact on the efficiency of the unit then it would have to stop.\n\nBut I'd had four glasses of fizz and a bottle of beer and as I danced romantically with this undoubtedly fine specimen of a man I began to let nature take its course; nature because I'd felt that faint sting that told me I'd ovulated that morning and I would get horny like I normally did.\n\nAs if to prove my conspiracy theory once more, Katy waved to me then made a great show of kissing her husband.\n\nThen 'Lady in Red' came on.\n\nIt was one of my favourites and I'd had this secret fantasy for years that one night after such a meal and a few glasses of wine, some hunky guy would hold me close and dance with me to this self-same tune.\n\nAndy must have sensed my thrill and pulled me up close to him.\n\n\"Your family are lovely,\" I said into his ear as he held me.\n\n\"I think so,\" he said. Our faces were millimetres apart now. Andy sorted that by so gently touching his warm cheek to mine.\n\nIt was such a simple thing, and I didn't object. All I did was close my eyes and push against him the tiniest bit, just to let him know I didn't mind at all. He rubbed his cheek against mine and I smelled his wonderful aftershave.\n\n\"Lin,\" he said, \"Right now is probably the last time I'll ever get to speak to you 'normally' before the bubble bursts and we all go back to our real lives.\"\n\n\"Really?\" I said pulling back to smile at him.\n\n\"Yeah,\" he smiled back to me, \"I've learnt my lesson from that coffee shop you see; you're absolutely gorgeous and if I don't do this now, I'll regret it for the rest of my life.\" He turned us so we were less visible to his family either sat back at our table or still dancing, and then moved his lips to touch mine. It was amazing.\n\nThere was nothing I could do but close my eyes and return the kiss, and all of his hard work in turning us was ruined when I moved my hands to hold and caress his face as our tongues brushed together, I was so breathless that I felt dizzy, but then thought that it was more about the fact that I was dancing and smooching with the hottest guy I'd seen in many years, and I'd had a few glasses of champagne.\n\nAs we kissed I felt his right hand slide from the small of my back and down to cup the cheek of my arse, and whether his family was watching me right then I really didn't care. \n\nWe kissed some more, somehow still managing to move as if we were dancing. It was really nice, and Andy somehow had finally stopped being a Corporal, an ordinary soldier and was now just a really nice attractive man that I was outrageously hot for. If I'd known Andy for longer then perhaps this dance wouldn't have been happening and he'd just be Corporal Sargeant, another bloody squaddie for me to dislike.\n\nMy hormones were raging and right now I could think of nothing else but getting this guy into bed, his sister's bed as it happened, but the why's and wherefores' really weren't that much of an issue. All of a sudden the pace of the music changed and the slow dances morphed into Frank Sinatra singing 'New York, New York' along stuff and Andy and I broke for breath.\n\nWe still stared into each-other's faces my arms around his neck, his around my waist,\n\n\"I suppose it's time to go Andy,\"\n\n\"Yeah, I think it is,\" he pulled me close to him, \"Shame, I was just starting to enjoy that.\"\n\n\"Me too,\" I said.\n\n\"Oii!\" screamed a cross female voice, Katy, and the DJ changed to music back to the slow stuff and Robbie Williams version of 'Something Stupid.\"\n\nOur dancing continued and I wondered if he would kiss me again or whether I should take the lead. He stroked his cheek against mine.\n\n\"Before the stroke of midnight and you turn back into Captain Cinderella and I turn back into Corporal Mouse, can I just say that was one of most pleasant evenings I've ever had; dancing with you and holding you tight, kissing you; while it's something I'll never forget, I promise that it'll remain our secret,\" he kissed me again, \"goodnight Lin...\" \n\nIt was so romantic, this time I kissed him back.\n\n\"Goodnight Andy,\" I opened my mouth and our tongues clashed again, and Robbie was replaced with Extreme and 'More than words' - Another of my dream songs! Had Katy read my mind?\n\nThe lights came up and we slowly pulled apart. I looked to my left and there was Katy and Lee doing just the same that we been doing. Back at our table there was Pam and Dave with Lee's parents chatting and finishing off their drinks as hand in hand we walked back.\n\nBack at the table I sat with an arm through Andy's and much as they fought the impulse I could see that Pam and her daughter Katy were very pleased about the whole thing.\n\nWe bade our goodnights and despite my insistence Pam and Dave would not hear of me paying for anything.\n\nIn the car park there were hugs and kisses; I said a fond farewell to Lee's parents and then Lee, and finally Katy.\n\n\"Thank you so much for escorting Andy for me,\" she whispered, \"he's a great guy but he's the only one that doesn't know it.\"\n\n\"You're welcome Kate,\" I said, hugging her tight and looking back over my shoulder at Andy with a grin. \n\n\"Oh go on Linnie, you know you want to...\" she whispered in my ear.\n\n\"What?\"\n\n\"You have a burning feeling in your heart just telling you that you want to find out if it really would be that good with him.\"\n\n\"Yeah!\" I said, trying hard not to laugh. In our few hours together I'd bonded with her to a greater extent than girlfriends I'd known for years.\n\n\"Knew it,\" she said, \"Go get him.\"\n\n\"Err...\" I gabled as she read my thoughts and I figured the rest of the party could as well, \"thanks for letting me share your anniversary, it's been the nicest evening out in years.\"\n\n\"Then come again,\" she said rifling through her bag for her phone then not finding it said, \"Bugger, leave your number with Mum, I'd love to come up to London one day with Laura.\"\n\n\"I'll do that,\" I said and we had a final hug. Then held me by the shoulders taking a final look at me as the dedicated professional stylist.\n\n\"Do it,\" she whispered, running a final hand through my hair she'd fashioned to perfection and giving me a cheeky wave as she walked away.\n\nI stepped across and climbed into the back of Dave's car and saw that Andy had sat in next to me. Pam reached behind and took my little pile of clothes from getting changed at Katy and Lee's place to give us more room.\n\nAs Dave headed out of the car park we pulled level with Lee's car and a Katy was shouting out of the window \"Top drawer!\" and pointing at us.\n\n\"What's she on about now?\" said Dave.\n\n\"God knows,\" said Pam, \"our daughter is pissed after all.\"\n\n\"Top Drawer!\" I could hear as the car pulled away.\n\nThe drive back to their lovely house in their small village was to be about ten minutes and I felt Andy's hand touch mine, he gently took my hand and held it and it was lovely. It was quite cosy in the back and it was the easiest thing to rest my head on his shoulder. He let go of my hand, raised his arm slipping it around me and I turned to face him; despite our 'back to real lives' closure moment back on the dance floor, our faces came together and our lips met again, French kissing as we had on to 'Lady in Red'. I happened to glance to my left and saw a brief glimpse of the whites of Dave's eyes as he checked us out in his rear view mirror, he looked across to Pam and I could see them both grin and soon we were getting out of the car into the evening cool.\n\nI was led back into the kitchen and my lack of sleep from previous nights and this long day that had started badly but had ended so well had me flagging.\n\n\"I think it's time you went to bed honey, you look wasted,\" said Pam genuinely, her hand on my shoulder, then the side of my face.\n\n\"Thanks Pam,\" I didn't want to argue; but saying that nor could I think of a way of getting around to sleeping in Andy's room.\n\nShe took my hand and walked me up the stairs to the room at the top where Katy had taken me before and she took me in.\n\n\"There's a T-shirt nightdress in that drawer there Darling,\" she pointed at the bedside table and turned to the still open door, \"Bathroom is right there, Dave and I are in that room.\" She grinned.\n\nEven after four glasses of champagne and a beer I still read her unspoken statement, 'and by implication and elimination the only room I haven't talked about is Andy's right there, next to yours'.\n\nI thanked Pam and gave her a hug,\n\n\"Thanks so much for today Pam,\" I said, \"it's been lovely.\" I stroked my hands down the sides of the dress she'd lent me, \"I'll get this cleaned and get it back to you.\"\n\n\"Oh Darling,\" she grinned pursing her lips cheekily, \"You keep it, a little memento of your evening with the Sargeants. Besides,\" she looked me up and down again, \"I'm sure I never looked as fucking devastating in it as you do.\" She pecked a little kiss on my cheek. \"You sleep well Baby.\" I thought that she had shot a glance at the door next to mine.\n\nI made for the bathroom then retreated to my room for the night and stripped out of my rather glamourous outfit. I rolled down the tights and made mental note to buy Katy a few pairs to replace them. Next was Katy's amazing bra and I decided I'd buy one of those too, leaving me in just those string panties she'd insisted I wear. I turned and looked in the wall mounted mirror checking out how sexy I looked in them. I'd buy a pair to replace these and get another half a dozen pairs just for me.\n\nFinally I stripped out of them, and sat on the bed, content that I would just rest for a few moments and then put on the T-shirt.\n\nI woke up half an hour later, half way through a really sexy dream and my nipples were hard and my pussy flushed and damp. I sat up and stroked my boobs feeling my hard nipples, right then I would have given anything to make love, and the person I wanted to make love with was right next door.\n\nI looked at the illuminated bedside alarm clock and it was 01:30.\n\nShit.\n\nThe rest of the house would be asleep. I figured I should just get the T-shirt and try to get back to sleep.\n\nI pulled open the top drawer and took out the shirt, feeling the hard, sharp corner of something dig into the soft skin between my knuckles. I checked; it was a small cardboard box of, you've guessed it, condoms.\n\nI could see Katy's beaming smile from the front passenger seat of her car as she called out, 'Top drawer!' in such delight. She was telling me precisely what I should look for I got back to her old home.\n\nI held the box, then gave it a slight shake. Full, thank fuck for that. I took the T-shirt and the condoms and stood, still unsure of what I was going to do next. I stopped, turned back and got my phone, I was still an army officer after all, whatever I wanted to happen next. \n\nWith butterflies in my tummy, I tiptoed to the door and there wasn't a squeak to betray what I was planning to do; that is, if I got up the nerve to do it. Pam's words of that afternoon came back to me.\n\n\"...don't think of him as a Corporal, just think of him as a nice bloke, because that's what he is...\" and the more telling ones in the restaurant, \"would you have given him your number?\"\n\nOf course I would have.\n\nThe floorboards in the hallway didn't squeak either, and I took the one pace to the door of Andy's room. I looked down at my naked body and I boldly put my hand on the door handle. I took a deep breath and pushed down and the quiet click sounded like a gunshot announcing my intention. I opened the door just enough of a gap for me to step through it. I held the T-shirt across my boobs hoping it was hanging far enough to cover the tiny indication of the delights at the apex of my thighs.\n\nI stepped into the room and pushed the door closed behind me, and the moonlight and street lights coming through the half open curtains illuminated Andy's double bed with him resting on one elbow, slightly bleary eyed but happily holding up the duvet as he slid to one side to make room for me.\n\n\"I thought you weren't coming,\" he said with a grin.\n\n\"I fell asleep,\" I said.\n\n\"If I'm honest, so did I.\" he said.\n\nI felt a bit nervous stood there, clearly naked but not worrying about it excessively.\n\n\"Well, here I am,\" I said, at a loss for something else to add.\n\n\"Yeah, I'm so glad you did.\"\n\nI walked closer to him and turned on the small bedside lamp, similar to the one in my room and finally feeling brave put down the T-shirt along with the condoms and my phone.\n\n\"Wow Lin!\" he said looking up at me. I felt like and million dollars with a faint burning sensation in my cheeks as stood there before Andy naked and horny, bits of me illuminated by the lamp and also ambient light in his room.\n\n\"Come here,\" he said, and I stepped to his bed, perching on the edge.\n\n\"You've come prepared.\" He said with a smile.\n\n\"Your sister, I now know what she meant by 'top drawer'.\"\n\n\"You mean my sister wanted us to sleep together?\"\n\n\"Yes, and I think I agree with her.\"\n\nI tucked my feet under his duvet and he pulled it across me, taking his chance to pull me close to him just as we had been on the dance floor, only this time we were both naked and I could feel his hard penis brushing against my belly.\n\n\"Yeah,\" he said in the rumbly voice of his, \"Me too.\"\n\nI pulled his face down to mine and we kissed, him rolling half across me and it felt wonderful to have the hard strong body of a hot man across me again. I didn't want to think about the last time that I'd gone to bed with a man; that was five years ago in Europe. As I lay there with Andy holding me, kissing me, stroking me, I did think about the sensibleness of what I was about to do.\n\nSomehow though, I just knew that this nice man and his nice family would be OK. They were all nice, honest family people and I didn't think that Andy would be blogging our exploits during his revenge shag to his mates the next morning.\n\nIf he did, what the fuck did it matter, my career would probably be over anyway and I could use it in my defence to the newspapers...\n\nFuck! I reached down to his penis and started the same slow pump motion that Ranger Roger had taught me, and Andy purred stroking my face. We kissed some more, and they hand that was brushing so tenderly down my cheeks, went to my neck and caressed all of my curves and hollows. \n\nNext he caressed my breasts and gone was the grabbing and mauling I'd known before to a much more sensual motion including a more robust thumbing of my nipples which had still been hard from my dream only minutes before.\n\nThen it was the moment I'd been waiting for; his hand gently stroked and smoothed across my waist and flat belly until he reached the upper slopes of my groin and I tensed as his fingertips explored lower. My breathing increased as he reached the now hair free patch I had shaved, moisturised and sprayed with scent, not six hours ago.",
        "His hand rested over my vulva and I pushed myself against it desperate for him to stoke and then quench the flames of my desire. He guessed that.\n\nHis middle finger pushed down and between my vaginal lips and I gasped. I could feel the moisture he had inspired in me making his play easier and more pleasurable for me. He stroked around my entrance, playing, teasing, tickling - I just knew that I would beg him if I had to, beg him to push his finger inside me and do the things I just knew that he would do to me.\n\n\"Please Andy,\" I raised my waist in an attempt to get his fingers into me where I wanted them.\n\n\"Pace yourself Lin,\" he breathed into my ear, \"there's no rush...\"\n\nWith that he slid in finger into the back of my puss and I cried out in shocked relief. The relief was only temporary of course, as his intrusive finger was now rubbing hard against what I was to learn was my G-spot. I thrashed around on the bed as he pumped and scrubbed inside me working me towards my first orgasm with another man... well... ever.\n\nI enjoyed the sex with Ranger Roger but not to this extent, and I certainly never came with his efforts alone.\n\nBanishing that idea I felt the world building up in my belly and suddenly I was gasping and pushing my loins off of the bed and I came, not noticing the gush of fluid that poured across his hand.\n\n\"Fuck, Andy!\" I whispered as I came down, \"That was worth the wait.\"\n\n\"Plenty more where that came from,\" he said and kissed my lips, so gently. Next he kissed my cheek and chin, moving down my neck to my shoulder, the rise of my breast and then settling on my nipple, which tingled to all hell as he sucked and suckled on me. I had my hand in his hair, initially stroking it before I realised I was pulling his face hard down in my large full breast, his free hand stroking, then grasping then groping its twin that had so far gone unmolested.\n\nWith an audible sigh he left my boobs and strayed lower, kissing a trail down my belly and I held my breath waiting for that first touch of his lips on my labia and, Oh God please, my clitoris.\n\nThere is was!\n\nLaying across my waist his mouth settled on my puss and licked from bottom to top.\n\n\"Christ!\" I hissed, I'd only ever had this done to me once before and it was nothing like this!\n\nI came for the second time as I felt his pointer finger back scrubbing across my G-spot as his tongue sought through my swollen labia for the hard nub of my swollen clit. He sucked it into his mouth, rubbing it hard with his tongue at the same time as his internal attack and for the second time, my groin was off of the bed (as far as he would allow me) as I came a second time.\n\nSuch was his enjoyment that he just kept going, and came or third, possibly fourth and fifth time, flooding his mouth with my G-spot come juice.\n\nHe pulled his wet face from my genitalia and grinned at me and I kissed him, tasting me on his lips but this added only to my desire to have the man and the huge cock I'd been occasionally playing with inside me.\n\nI reached up for Katy's condoms and had a fraught few moments while I struggled to free them first from the cellophane wrapping then open the box and remove the folded instruction leaflet pinning them all into place.\n\nAt last I took one and tore it open, squeezing out the protective latex and pushing Andy on to his back.\n\nHis cock felt huge, and far bigger than any of the others I'd ever come across before. \n\nI sat up and decided I was going to suck him in my mouth. Not to orgasm of course as I had other plans for him tonight.\n\nSettling myself at his waist I lowered my open mouth over him, seeing his approval in his handsome face illuminated by the hazy moonlight. This wasn't the first time that I'd done this, but never to orgasm and I wanted to return some of that wonderful pleasure that he'd already given me.\n\nI concentrated on the large head and swirled my tongue around it, watching the look on his face to know if this was the right thing. It evidently was, so after a minute or so of this attention I began to fuck it with my mouth, feeling the passion in him build.\n\nI guessed I'd gone about as far as I could, so finished the process with a gentle kiss on the tip. Finally I slid the condom into place and pulled it down to settle where I wanted it.\n\nI wanted him inside me, and I wanted him there and then. I pulled him by his broad shoulders,\n\n\"Fuck me Andy,\" I gasped, trembling in expectation and feeling him settle over me and between my raised thighs for my first fuck in my longest dry spell since losing my virginity.\n\nHe kissed my face again,\n\n\"No,\" he said, \"I will not fuck you,\" I looked up to my new lover quizzically, \"tonight Lin, we make love...\"\n\nAwww! \n\nI thought I'd burst! But just as felt that torrent of emotion, I also felt his hard cock - so recently in my mouth, push at the entrance to my vagina.\n\n\"Oh yeah,\" I gasped again as he pushed himself into me with one gentle but strong thrust, and felt him inside me to a depth I'd never known before and I pulled my knees up to hold him and wrapped my arms around his neck as he fucked... no as we made love for the first time.\n\n\"You're gorgeous Captain Major,\" he said as he thrust in and out of me, a hand brushing my newly cut hair out of my face.\n\n\"You're pretty hot yourself Corporal Sargeant, and you make love wonderfully.\" \n\nWe kissed again and he began to build up speed, in and out of me. Pushing hard into me, then pulling back tenderly but with an urgency to get right back in there again.\n\nI could feel my orgasm coming.\n\n\"Oh Andy, harder please, harder, harder!\" I hissed, conscious of the others in the house and that excitement hit me and my orgasm came again from the pit of my stomach and I quietly cried his name as he took me. \"Oh Andy!\"\n\nHe slowed down as I went through my orgasm, hard enough to keep the momentum but slow so I could enjoy it, and evidently so he could enjoy watching me.\n\nHe slowed down and smiled down at my smiling face.\n\n\"What?\" I said still basking in the glow.\n\n\"You're lovely,\" he grinned. We both giggled, then he added, \"OK, on your hands and knees Captain,\" he said, \"NOW I'm going to fuck you!\"\n\n\"Oh yeah!\"\n\nI assumed the position quickly and felt his hands grasp my thighs as he directed himself into me, pulling me back hard onto him to a new depth that made me cry out again.\n\nI now knew where the expression 'a pillow biter' came from because I had to, anything to hide the squeaky noises of helpless pleasure I was making. His fucking of me was sublime and I felt my seventh or eighth... fuck it my next orgasm start in my belly and I giggled as it approached,\n\n\"Oh Andy,\" I cried out, \"Fuck me Corporal, that's an order!\"\n\n\"Oh yeah?\" he said, and spanked my right arse cheek for my trouble.\n\nIt was another amazing turn on from this amazing man, and I figured I'd have to have him do it again, quite often in fact, if it was going to have this effect on me.\n\n\"Sorry Corporal,\" I said looking sheepishly back over my shoulder, \"please fuck me,\" I said, \"Please, oh shit, Andy, please fuck me, fuck me Andy!\"\n\nThis was obviously the kind of order he required and he did so pummelling my backside with his loins until I started to come, \"Oh Andy, yes! Yes!\" I warbled as he pounded me and as I came I felt his tell-tale swelling of his dick as he too prepared to join me.\n\n\"Oh Baby,\" he cried out as he too finally had his long time coming orgasm, and he fucked me through his own spasms of pleasure, bending down over me, to roll us easily to one side, spooning me easily and hugging me, kissing my face. I wanted to turn around and kiss him, but that would mean pulling his slowly softening cock out of my flushed and abused pussy and I didn't want that yet.\n\nAfter we had both caught our breath and cooled down, he did push me forward just slightly to pull his prick out of me, still an impressive sight after all his hard work.\n\n\"Sorry Baby,\" he said, \"no wet patches though.\"\n\n\"OK,\" I said smiling at him.\n\nHe removed the condom and wrapped it and the wrapper in some tissue and left it beside his bed for disposal later I guessed.\n\nHis administration complete he pulled me back towards him, turning me in his arms so I could face him and we could kiss and cuddle.\n\n\"Wow Lin, you are an incredible lady, I've never made love with someone to that intensity,\" he kissed me again, \"you... err... you aren't going back to your bed tonight are you.\"\n\nIn was a statement, not a question.\n\n\"No way Andy,\" I said beaming, \"I'd very much like to stay here and sleep with you.\"\n\n\"Wonderful,\" he said, looking a lot happier. He kissed me again, and I reciprocated - our tongues entangling again. Soon we were all arms and shoulders, \"Try this Lin, by far the nicest way in the world to go to sleep.\"\n\nHe turned me away from him and pulled me back into the same spooning position we'd finished shagging in not ten minutes before.\n\nHe pulled me back to him and put one arm around my shoulder to cup my breasts and another over my waist to rest on the flat of my groin, still with the wonderful ache from all of those orgasms.\n\nMy phone rang and for a moment I struggled to remember where I was. I reached over the bedside table and found it under Katy's T-shirt where I'd left it the night before. I swiped the screen to answer it.\n\n\"Lin?\" said David, the unit second in command.\n\n\"David,\" I said, \"Good morning.\" I squinted at the time on my phone, it was just gone nine o'clock, still morning! My lover of the night before pulled me back into him with a cross grunt, and I just knew that the Major would hear and know just what two members of his unit had been up to the night before! \n\n\"Good Morning Lin,\" he said with a lift to his voice, \"Just read an email from Andy Sargeant, he's emailed me that you've been to see him,\" I froze, what the fuck?"
    ],
    "authorname": "Androgynousother",
    "tags": [
        "tall",
        "army",
        "straight sex",
        "oral",
        "army sex",
        "soldier",
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/officers-and-men-ch-01"
}