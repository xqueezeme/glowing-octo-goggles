{
    "title": "Confirming Carter Bk. 02 Daedalus Ch. 04",
    "pages": [
        "Bra'Tac arrives in Atlantis, and brings an unexpected companion. The starship Apollo arrives, and Col. Ellis gets an unpleasant surprise...\n\n(-)\n\nConfirming Carter Book Two Daedalus\n\nChapter Four\n\nThree days later\n\nInterior-Bedroom\n\n0640 Hours\n\n\"Let's just stay in bed, and make love all day.\" Tammy said as she ran her tongue up over the back of Carter's leg. She kept moving up, moving over and spreading the cheeks of her ass, letting her tongue dip into the musky smelling crack.\n\n\"Ooooohhh, don't do that!\" Sam protested, trying to squeeze her butt cheeks together. \"I haven't had a shower. I'm all dirty back there.\"\n\n\"Mmmmmmm, your scent is delightful. I know you want it. I can smell how excited you are.\" Tammy laughed huskily. \"Your mouth says no, but your little pussy says, yes...yes...yes!!\"\n\nShe dragged her tongue up the crease of Sam's bottom again, making her moan and arch her hips back at her, forcing her ass up at Tammy's face as she relaxed and let her asscheeks open under the pressure of Tammy's fingers.\n\n\"I'm going to lick your asshole, Sam.\" Tammy purred as she dragged her tongue over the smooth, fragrant flesh. She ran the tip around the puckered pink ring, not touching it, then spread her cheeks wider and dipped down to lap at the fur fringed slit of her pussy.\n\n\"Noooooo, please don't.\" Carter whimpered, her face buried in her arms. She spread her legs wider, and her ass pushed back at Tammy's face.\n\n\"Yes, I'm going to do it, Sam. I'm going to stick my tongue up your ass now.\" Tammy whispered. Her tongue darted out, stabbing at the tight, wrinkled ring of muscle, then moved in lazy circles around the outer rim.\n\n\"Please, Tammy.\" Carter whimpered.\n\n\"Please what, Sam?\" Tammy gasped into her ass. \"Don't you want me to lick your asshole? You don't want to feel my...\"\n\n\"Sam?\" Andi's voice came from the comm. \"Can you and Tammy come in the kitchen please? I've got coffee going.\"\n\n\"Nnnnuunnngggghhh!\" Carter grunted as Tammy drove her tongue roughly against the tender rosette of her ass.\n\nTammy pulled away, glaring at the comm unit, then crawled up over the bed and hit the speaker button.\n\n\"Andi, do you remember that us time we talked about? We'll be with you in a couple of hours.\"\n\n\"I remember, but I also remember saying that I wanted you to do that in the middle of the day.\" Samuels laughed. \"We have things we need to get done Tammy. So come on, get moving.\"\n\n\"I told you you shouldn't have put that thing in here.\" Carter laughed as she rolled off the bed. \"I have to pee. Come brush your teeth. And use mouthwash too.\"\n\n\"Bitch.\" Tammy muttered as she smacked the comm button. She rolled across the bed and got to her feet, following Sam into the bathroom.\n\nCarter was standing at the sink brushing her teeth when she came into the bathroom. Tammy walked up behind her and tried to turn her around, but she pulled away.\n\n\"Huh uh. You're not kissing me with that mouth till you brush your teeth. And use this.\" She laughed, holding up a bottle of mouthwash. \"Twice.\" She rinsed, then kissed her on the cheek, and went out into the bedroom.\n\n\"I just can't win this morning.\" Tammy said to herself as she sat on the toilet.\n\nCarter walked across the living room and went into the kitchen. She stopped when she saw O'Neill, Sheppard and Caldwell sitting at the table.\n\n\"You could have said we had company, Andi.\" She grinned as she stepped back through the door. \"Would someone make us coffee? Big cup, heavy cream, four sugars. We'll be right with you.\"\n\nShe went back to the bedroom, and met Tammy coming out of the door, as naked as she was.\n\n\"Get dressed, we have company.\" She laughed. \"I already flashed Jack. I don't know if his heart can take seeing you too.\" She stepped into Tammy's arms, kissing her lightly, then more eagerly.\n\n\"I still think we should just stay in bed all day.\" Tammy said as they finally broke apart. \"We haven't had a day off in weeks.\"\n\n\"Soon, I promise. I'll change the codes, we'll turn off the comms, and just spend a day, you and me. But right now I think they want to talk to us.\"\n\nInterior-Kitchen\n\n0720 Hours\n\n\"What's so important that you couldn't let us sleep a little longer, Andi?\" Tammy asked, scooping another spoonful of sugar into her coffee.\n\n\"You weren't sleeping, Tammy. And we have...\" Samuels said.\n\n\"You're comm is on vox.\" Sheppard said, blushing slightly.\n\n\"We weren't listening.\" O'Neill said. He grinned at Carter. \"Well, I wasn't, but I think Caldwell was.\"\n\n\"NO! I was...\" Caldwell sputtered.\n\n\"We'll get it fixed.\" Samuels said. \"For god's sake, will you grow up?\"\n\nShe turned to Carter. \"We heard from Teal'c, Master Bra'tac will be coming in today. We're expecting him to be here before ten. They were moving his things to the gate, and he should be ready soon.\"\n\n\"I've moved Gen. O'Neill over to the east tower already. I was going to put Master Bra'tac in the suite on the same floor, but Jack thinks it would be better to put them together. It appears that Teal'c agrees.\"\n\n\"There's more than enough room in that barn she put me in for both of us.\" O'Neill said. \"And Bra'tac is used to living with other people. He has five people living with him on Chulak, in half the space we'll have. And he's going to need someone to show him how everything works. Besides, if we share a place, it'll be easier to plot against you.\"\n\n\"Plot away, Jack.\" Carter laughed. \"Just make sure it's something useful.\"\n\nInterior-Gateroom\n\n0950 Hours\n\nThey were stepping out of the porter as the vortex erupted from the gate, and Carter picked up her pace, wanting to be ready when Bra'tac came through the gate. \n\nTeal'c stepped through the gate alone, bowing slightly when he saw Carter and Tammy.\n\n\"Where is Master Bra'tac, Teal'c?\" Carter asked. \"He is coming, isn't he?\"\n\n\"Master Bra'tac is having...difficulties.\" Teal'c said with a smile. \"He will be with us shortly. They seem to be having a disagr...\"\n\nJust then, a small boy ran through the gate, followed by Bra'tac.\n\n\"Dal ma'kalmah. Shel'tii!\" Bra'tac was saying as he stumbled through the gate behind him.\n\n\"No, my child, wait.\" Teal'c said quietly to Carter as he stepped up beside her.\n\nTammy stepped to one side and blocked the boy's path, squatting down in front of him and holding him gently.\n\nThe boy squirmed, glaring at her. \"Unhand me woman! I am Geraan of the Jaffa, a great and mighty warrior!\"\n\n\"Cease Geraan!\" Bra'tac shouted. \"Do not embarrass me further, kalmah!\"\n\nHe turned to Carter, bowing, then began to drop to one knee. She stopped him, bringing him up and embracing him.\n\n\"No old friend, you kneel to no one.\" She said quietly. She stepped back, smiling over at the boy. \"And who is this fearsome warrior you've brought with you? An addition to my army perhaps?\"\n\n\"My apprentice, and trenkalmah. My grandchild. He insisted that he accompany me, to protect me.\" Bra'tac smiled. \"I was unable to refuse.\"\n\n\"So I see.\" She said. \n\nShe turned and knelt beside Tammy, looking at the boy.\n\n\"Tell me, Geraan. Why have you come to Atlantis?\" She asked him. \"Besides protecting Master Bra'tac, of course.\"\n\n\"We come to serve the warrior queen.\" The boy said, breaking away from Tammy, and drawing himself up to his full three and a half foot height. \"She summons my master for his wisdom!\"\n\n\"Indeed. Master Bra'tac is one of the wisest men I know.\" She said, glancing over her shoulder, and smiling at Bra'tac. \"He and Gen. O'Neill will guide me as I...\"\n\n\"You?\" Geraan gasped, stepping back and falling to his knees, prostrating himself in front of her.\n\n\"Stand Geraan. A warrior, especially a Jaffa, does not kneel.\" She said as she helped him up. She glanced back at Bra'tac, then back at the boy. \"Perhaps your master will allow my consort and I to assist in your training. There are many things you must learn if you are to lead my armies someday.\"\n\n\"You left your guards.\" Ronin said as he stopped behind the boy.\n\nCarter looked up at him and grinned. \"Whoops?\"\n\nGeraan spun around, his eyes going wide as he looked up at Ronin. He dropped into a fighting stance, his face setting in a scowl.\n\n\"Back beast!\" He said menacingly as he stepped forward.\n\nCarter laughed as she put her hand on his shoulder. \"Easy Geraan. This is Ronin, the guardian of my realm, and my protector. He will be another of your teachers.\"\n\nRonin looked down at the boy, then growled. Geraan flinched, but stood his ground, not taking his eyes off of him.\n\n\"He'll do.\" Ronin said, looking down at him.\n\n\"Good.\" Carter said, then looked down at the boy. \"Geraan, would you like to see where you and Master Bra'tac will be living? I'm sure Gen. O'Neill will be happy to meet you.\"\n\n\"Indeed.\" Teal'c said. \"I believe I shall accompany you. To assist Bra'tac and Geraan in getting settled.\"\n\n\"Indeed.\" Carter laughed.\n\nInterior-Conference Room\n\n1425 Hours\n\n\"Colonel Sheppard, the Apollo just dropped out of hyperspace on the other side of the system. They're holding position eighty diameters out.\"\n\n\"Affirmative. Keep me posted if they move.\" Sheppard said. \"Apollo just dropped out of hyperspace.\" He said to Carter and Caldwell.\n\nThey were in the conference room of the Central Tower. Caldwell had been reviewing their plans to take the Apollo when it arrived.\n\n\"Looks like we put your plan into action sooner than expected, Steven.\" Carter said. She looked over at Sheppard. \"Do you really think you can pull this off?\"\n\nSheppard nodded. \"Now that we have the Daedalus equipped with the cloaking technology, they'll never know we're coming. Caldwell is right though, we're gonna have to be sitting right on top of them when we start beaming people out.\"\n\nHe looked over at Caldwell. \"This is a nice touch, beaming the crew off as we take the bridge. Ellis will never expect that. Are you sure your people can put them into the holds safely? I'd hate to materialize someone inside a wall, or between decks.\"\n\n\"Marks can stand a dime between a pair of graham crackers on a table. I've seen him do it.\" Caldwell said. \"We can put those people into Daedalus' holds, no problem.\"\n\n\"Okay. Get your people together and get in position. And you use stunners and zats when you move them, no firearms. We're not going to kill these people. We just want the ship. Is that clearly understood?\"\n\n\"Yes, colonel.\" They both answered as they moved toward the door.\n\n\"And good luck.\" She called as they left the room.\n\n\"Now we wait.\" She said to Tammy. \"I wonder what Ellis has in mind.\"\n\nThe answer wasn't long in coming.\n\nInterior-Apollo Bridge\n\n1535 Hours\n\n\"Incoming message from Apollo, colonel.\" The Ops tech said, looking up at her. \"Daedalus reports that they're in position.\"\n\n\"Send it to the conference room, Chuck.\" Carter said as she turned and trotted across the short space between them. \n\n\"...Atlantis this is Apollo. Atlantis this is Apollo. Respond please.\" Abraham Ellis said, leaning back in his command chair\n\n\"This is Atlantis, Apollo. Col. Ellis. We weren't expecting you. What can we do for you?\" She said casually.\n\n\"I'm surprised to hear you as well, Col. Carter. I was advised that you had resigned your command, and your commission, and that Col. Sheppard was currently in command of Atlantis.\"\n\n\"Neither the Pentagon, nor the IOA have accepted my resignations, and since Dr. Keller has declared me fit for duty, I have resumed command.\" She paused. \"I can send you the supporting documents if you like.\"\n\n\"No thank you, colonel. That won't be necessary.\" Ellis said. \"My orders are to arrest Col. Sheppard, Dr. Keller, and Dr. Samuels, and secure Atlantis by whatever means necessary.\"\n\n\"Whatever means necessary.\" Carter said slowly. \"That sounds very unfriendly, Abe. Why don't you bring the Apollo down, we can sit, talk, and come to an agreement. I'm willing to work with you.\"\n\n\"I'm glad to hear that, colonel.\" Ellis replied. \"Then if you would be kind enough, put Col. Sheppard, Dr. Keller, and Dr. Samuels in a jumper, and when I have them in custody, lower the shield and surrender control of the city to my representatives. Once I am assured that Atlantis is under my control, I'd be happy to come down and speak with you.\"\n\n\"I see.\" Carter said. \"Would you mind telling me what my military commander, chief medical officer, and a staff member are charged with?\"\n\n\"You know very well what they're charged with colonel. All three are charged with mutiny, and conspiracy to commit mutiny. I'm still trying to figure out why you're name isn't on that list.\" Ellis said. \"Now I'm afraid I have to demand that you surrender them, lower the shield, and await my representatives.\"\n\n\"Abe, I can't do that. I am the legally appointed commander of the Atlantis expedition, unless you have orders relieving me of that command. From my point of view, what you are doing is a hostile act, and I am well within my rights to fire on you. Do you have any such orders in your possession? If you do, would you transmit them please?\"\n\n\"Col. Carter, the information I have is that Col. Sheppard was in temporary command of Atlantis, and while in that position, illegally seized control of the city. My orders are to secure the city, and arrest the conspirators. Are you going to comply willingly, or am I going to have to use force?\"\n\n\"No need to use force, Abe.\" Carter said lightly. \"But I have a better idea. I think I'll just take your ship.\"\n\n\"And just how did you pla...\" Ellis began to say as he was beamed off the bridge and into one of the Daedalus holds.\n\n\"The ship is secure, colonel.\" Sheppard said a few moments later as he dropped into the command chair. \"We're coming home. We'll hold orbit at three diameters until we can go through and see what they're packing.\"\n\n\"Good job, John. Standby.\" Carter said with a smile as she looked at the screen on her laptop. \"Caldwell reports they have two hundred and thirty-four souls safely aboard. Bring our people home.\" \n\nInterior-Conference Room\n\n1715 Hours\n\nThe glare of an Asgard beam flared near the door of the conference room. When it faded, Col. Ellis of the Apollo was standing surrounded by four marines carrying stunners.\n\n\"Col. Ellis.\" Carter said, not getting up from her seat at the far end of the table. \"Come in. Have a seat please.\" \n\nA marine led him to a seat in the middle of the table, well down from her. There were two cases sitting on the table in front of him.\n\n\"I'm sorry we have to meet under these conditions, Abe. I really am.\" Carter said. \"I'm pretty sure that I'm ending your career. But I didn't have any choice.\"\n\n\"What's going to happen to my crew?\" Ellis asked, looking down the table at her.\n\n\"You and your crew will be returned to Earth as soon as we're finished talking. They are still safely aboard the Daedalus. Caldwell allowed you to confirm for yourself that they were all safe, and uninjured?\"\n\n\"Yes, thank you. The only thing hurt was my pride. I landed on my ass in that hold.\" He said.\n\nCarter tried not to smile, but didn't succeed.\n\n\"Before I send you home, I'd like to ask for your help.\"\n\n\"What kind of help, and why would I do that, after what you've just done?\" \n\n\"What I've just done is defend my home against a hostile force. And what I want you to help me do is send a gift. A peace offering if you will.\"\n\n\"I don't understand, colonel.\" Ellis said. \"Can we just get to the point?\"\n\n\"Of course. Open the green case.\" she said.\n\nEllis pulled the case over in front of him and popped the latches. He threw the lid back, and his eyes got wide as he stared at the contents.\n\n\"Is that a...\"\n\n\"Yes, it's a drone. There are fifty pallets of them stacked in the gateroom, two hundred to a pallet.\" She said. \n\n\"I thought all the drones had been used fending off a Wraith attack, three years ago.\" Ellis said. He reached out and started to pick it up, but stopped when she cleared her throat.\n\n\"It has a bit of a static charge, and can give you a nasty burn.\" She said. \"We restocked our supplies of drones. The ones we're going to give you are leftovers. And before you ask where we got them, we made them. Here, in Atlantis.\"\n\n\"What's in the other case?\" He asked.\n\n\"Open it.\" She said.\n\nHe pulled the other case closer and eased the lid back this time. He looked down the table at her, holding his hand out toward the case.\n\nShe nodded, and he picked up the ZPM, turning it in his hand.\n\n\"This has a full charge.\"\n\n\"Yes, have you been briefed on my STM bridge research?\"\n\n\"Yes, is that how you did it? You charged this using that technology?\"\n\nShe nodded. \"I'm not going to tell you, or the IOA how I did it. I am, however, open to trade.\"\n\n\"What kind of trade? And on what scale?\" Ellis asked.\n\n\"Goods, technology, licensing, services, we're open to everything.\" She said. \"I'd like to start small though. That charged ZPM for five depleted ones.\"\n\n\"And the drones you mentioned?\"\n\n\"Like I said, a gift, or a peace offering.\" Carter said. \"After you and your crew have been transferred to Earth, we'll give you the address for a space gate to send the depleted ZPM's to. Ask them to put them in a bag, or a case if you would, picking up loose objects in space is a pain in the ass. Once we receive them, we'll send the drones to any gate address the SGC specifies, so they can be inspected with no threat to Earth.\"\n\n\"What about my ship?\" He asked.\n\n\"I'm going to keep it. I took it fair and square.\" She said lightly. \"And I keep what I kill. That's the way we play here in Pegasus.\"\n\n\"They won't stand for that. They'll come after you with everything they've got.\" He said.\n\n\"And that would be nothing. Both the IOA's active ships are now part of the Atlantian navy. You won't have another ship come off the line for almost a year, and that's if they gear up production and work three shifts.\"\n\nShe sat forward in her chair, warming to her subject.\n\n\"Only two races had intergalactic ships in the Milky Way, and most of the Gua'uld's were destroyed, the rest are in the hands of the Jaffa, who aren't going to give them to you. The Asgard gave you the technology to build my new ships, but they think that this is an internal dispute, and don't want to get involved. Plus, they like me, so they won't help either.\"\n\nShe smiled at him.\n\n\"Face it, Abe. You can't get at me.\" she said. \"And by the time you do build, or scrounge up a ship or two, I will have made allies of the major races in this galaxy. You'll lose every battle, or I'll have so much warning that I'll blow you out of the sky as soon as you come out of hyperspace.\"\n\n\"Or, you can leave me alone, let me help the people of Pegasus, and when we're ready, expand into the Milky Way, and do the same thing there. I'd welcome Earth's help. I'm going to need doctors, engineers, skilled workers, people that can go out and make a difference in both galaxies.\"\n\n\"I almost believe you, colonel.\" Ellis said.\n\n\"I don't care if you believe me or not.\" She said as she stood up and strode for the door. \"Bring your ZPM, leave the drone.\" \n\nShe was out the door and walking toward the Ops Center before he was out of his chair. The marines closed in around him, and he followed them out the door.\n\nThe Ops tech was dialing the gate, and as soon as the vortex receded, she pressed a button to send the IDC, then started speaking. \n\n\"Stargate Command, this is Atlantis. Stargate Command, this is Atlantis, come in please.\"\n\nShe waited a moment, and was about to speak again when a voice said. \"This is Stargate Command, please identify.\"\n\n\"Walter?\" She asked. \"This is Samantha Carter, in Atlantis. How are you? It's been a while.\"\n\n\"I'm fine ma'am, Mr. Woolsey is on his way, and should be here in a moment.\" Harriman said.\n\n\"That's fine, Walter. How are things at the SGC? We heard that Gen. Landry had been arrest...\"\n\n\"Col. Carter, This is Richard Woolsey, of the IOA. I am in command of this base now. What can we do for you? Hopefully you've come to your senses, and are prepared to surrender.\"",
        "\"That's not quite what I had in mind Mr. Woolsey. I have something that belongs to you, and I'd like to return it.\" She said.\n\n\"And what would that be?\" Woolsey replied snidely.\n\n\"The crew of the Apollo.\"\n\n\"I don't believe you, colonel.\" Woolsey said, his voice taking on a harder edge.\n\nCarter waved Ellis over and motioned for him to speak.\n\n\"Mr. Woolsey, This is Col. Abraham Ellis, Commander of the Apollo. Col. Carter is not lying to you, she has my ship, and is offering to return me and my crew to Earth. We are all in good health, and being treated well.\"\n\n\"Are you telling me that you are a prisoner of war, colonel?\"\n\n\"I wasn't aware that a state of war existed between Earth and Atlantis, Mr...may I call you Richard? I knew that the IOA had issued a death warrant on me, Richard, but wasn't aware that you had declared war on my city.\"\n\nShe looked at Ellis and shrugged. \"Richard, I'm going to assume that you're not going to open the iris. I probably wouldn't either. But would you be so kind as to transmit a gate address I can send these people too? I would prefer not to be responsible for them.\"\n\n\"One moment please, colonel.\" Woolsey said.\n\nCarter muted the mike, and turned to Ellis. She held out an envelope.\n\n\"The address to a space gate is in there, along with my offer, one charged ZPM, upfront, for five depleted ones. Have them test and examine it just to be sure. Bill Lee knows what to look for, they've had that trick pulled on them before by Camulus. I get the ZPM's, you get the drones. It's all in there. If they don't open the iris, I'll give you a GDO, and send you to Chulak. You'll be safe there till you can be returned to Earth.\"\n\n\"Richard, I changed my mind.\" She said. \"I'm going to give Col. Ellis an a GDO, and send him and his crew to Chulak. They'll be safe there, and High Council can assist in their return. Would that be more acceptable?\"\n\n\"No, colonel. I'm going to trust you.\" Woolsey said. \"We're opening the iris.\"\n\n\"Richard, I'm going to send Col. Ellis through first. He has our first trade item for you. Please have Dr. Lee examine it before you try to use it. I want to hear Ellis's voice before I start sending his crew through.\"\n\nShe turned to Ellis. \"I'm sorry Abe, I have to ensure that those people get home safely. You're my crash test dummy. Good luck.\" She held out her hand.\n\nEllis took it. \"Thank you Col. Carter. If something goes wrong. Send my crew to Chulak like you said before.\"\n\n\"I will, Abe.\" She said, then looked passed him. \"Sergeant? Escort the colonel to the gate.\"\n\nWhen Ellis reached the gate, he turned and looked back at her. He saluted, then stepped through the event horizon. It was almost two minutes before she heard his voice.\n\n\"Col. Carter, this is Ellis. I'm safely through.\"\n\n\"Walter, please confirm that the iris is still open.\" She said.\n\n\"Yes maam, the iris is open. We're ready to receive the Apollo crew.\" Harriman said.\n\n\"Thank you, Walter. Sending groups of twenty, thirty seconds apart. Wait one.\"\n\nShe changed to Daedalus channel. \"Steven, let's have the first twenty, then send them 30 seconds apart.\"\n\n\"Copy colonel. First twenty on the way.\" Caldwell replied.\n\n\"We'll also be sending some crew members from the Daedalus, and the marine detachment they had aboard when they arrived. That's another twenty-eight.\" She said as she switched back over to the SGC. \"They'll be following the Apollo's crew.\"\n\nIt took almost ten minutes to send all of them through the gate. The departing Daedalus crew members arrived while Apollo's crew was still being beamed down. They followed the last group, and when they were through, she opened the channel to the SGC again.\n\n\"Col. Ellis, would you give me a head count please. We want to make sure you have everyone.\"\n\n\"Confirm two hundred sixty-two from both crews. Thank you colonel. And good luck, Sam.\"\n\n\"You too Abe. Richard, we'll look forward to hearing from you shortly. Atlantis out.\"\n\nShe closed the channel and looked at the Ops tech. \"Shut it down.\" She said. \"Let Sheppard know if they contact us.\" \n\nShe turned and skipped down the stairs, and jogged over to the porter. She felt good, and hoped she had some ice cream in the freezer. If she didn't, she'd have to send someone to get some. \n\nInterior-Kitchen\n\n1800 Hours\n\n\"Where's your guards?\" Ronin asked as she stepped off the porter.\n\n\"I left them in the gateroom. They took me to the porter, and I didn't think anything would happen between the time the doors closed there, and opened here.\" She smiled as they walked toward the kitchen.\n\nShe saw Tammy sitting in her usual seat, eating out of a carton of ice cream, so she got a spoon and sat down, reaching over and digging out a spoonful.\n\n\"Andi is bringing in four hundred some odd people in an hour or so from Cealacan, there was a culling a few days ago, and they're in bad shape. She wants to put them on the north pier near the main storage center.\" Tammy told her as she dipped out a scoop of ice cream and licked at it. \"I let the Infirmary know, and we'll have teams ready to check them out and test them for the gene.\"\n\n\"Ronin, would you and Teyla go talk to them when they get here?\" Carter asked. \"When they hear that your people have been through the same thing, it should help make things easier for them. Tell them what we have in mind, and help get them settled.\"\n\nHe nodded and stepped from the room.\n\n\"He hasn't relaxed since you left.\" Tammy grinned at her. \"You had five marines with you, and another twenty over at the Ops Center, but he still didn't like it.\"\n\n\"I know, but there are other things he's going to need to do sometimes.\" Sam said. \"How did the first group look? Any likely candidates?\"\n\n\"Amelia liked a few, Ronin didn't like any of them. I think he expects them to be able to beat him to qualify. Like that's going to happen.\" She laughed. \"Amelia wants to look at some of the special forces guys, and I think it's a good idea.\"\n\n\"Anybody home?\" They heard Keller call from the living room. They heard her talking to Ronin, and a moment later, she came into the kitchen.\n\n\"Where is everyone?\" Jennifer asked as she sat her laptop and a stack of tablets on the table. \"This place is usually packed.\"\n\n\"They're still bringing the Apollo and Daedalus down, Andi is handling some refugees, and I haven't seen anyone else.\" Carter said.\n\n\"Daniel, Vala and O'Neill are over in the central section going walkabout. She called all excited, she's finding all kinds of souvenirs. She wanted to know if she could keep them.\" Tammy laughed. \"Daniel came on after I said yes, and asked me not to do that, but I told him that a few baubles wouldn't hurt anything. He laughed and told me that she's got O'Neill loaded down like a pack mule.\"\n\nSam laughed with her, then turned to Keller. \"Why all the tablets, Jenn? You going Andi on me?\"\n\n\"No, but we need to talk about a few things.\" She slid a tablet over to each of them, and opened her laptop. \"I asked Ronin to keep anyone that come in out of here till we tell him. I've been reviewing and comparing your tests results from the last couple days.\" She said, tapping at her keyboard. The tablets in front of them came to life, and they both picked one up, glancing at them. \"I've got them slaved to my laptop, so just look, don't touch.\"\n\n\"What are we looking at?\" Tammy asked. \"And are you still mad at us? I mean, I'm sorry, Jenn. Bu...\"\n\n\"I was mad at first, but I should have known it was going to happen.\" Keller said, smiling at her. \"You two are meant to be together, and it's not for me to get in the way, so I might as well help you.\"\n\n\"The first screen is your scans from yesterday, Tammy is on the left, Sam is on the right. Everything is fine, with one exception. Your heart rate, blood pressure, almost every major reading is damn near identical. That's a little unusual, but you have the same body type, and build, and both of you are in excellent physical condition, so I can't call it weird.\"\n\nShe changed screens and looked up at them. \"This is this morning's scan. You won't see the difference, so I'll just tell you what it is.\" She said, pausing before she continued. \"You're both ovulating, which is weird. Tammy is two weeks early, and Sam one. It's not unusual for women living together, or in close quarters to have their cycles come in line with each other. But that usually takes several months to occur. You did it in less than one.\"\n\n\"Is that good or bad?\" Sam asked, flipping back and forth between the screens.\n\n\"I don't know yet. And I told you not to do that.\" Keller said, tapping at her keyboard again. \"I'm in contact with both of you daily, and I don't see any adverse affects of exposing or infecting Tammy, however you want to put it. If anything, it appears to me that you're both thriving. Sam hasn't had a major incident in over two weeks, but we've been keeping her, you both actually, away from radiation sources.\"\n\nShe looked over at Tammy. \"When was the last time you used korathis? It's been at least two weeks. I know, because I took your stash out of your suite because I didn't want Sam to get into it, and you haven't logged any out of the dispensary.\"\n\n\"That night we called you and Andi to ask if it was okay to do it.\" Tammy said.\n\nKeller looked at her laptop, and scrolled through several screens. \"That was seventeen days ago. And you're not showing any signs of withdrawal?\"\n\n\"No, I feel fine, and that night, I was just feeling a little off, not uncomfortable, or in pain.\"\n\nKeller nodded. \"Your korathis levels are steady, almost as if you're still ingesting frequent doses, so it appears that you may be producing the active components as well. But you may have been doing that already, I have no way of knowing.\"\n\n\"Now the bad news. Andi knows that Tammy has been exposed.\" Keller said. \"She's in the medical database daily, she uses it to augment her psych profiles, so I saw no need to block her. But there are notes indicating that she knew before you told me. I went looking through her notes after you told me the other morning. I think she's watching the video feed too. She's keeping her mouth shut about it. To all of us.\"\n\n\"We know she's playing her own game, Jenn.\" Sam said. \"I don't know what she's up to, but she's giving me what I need, as I need it. And everything is falling right into line, almost like we're being guided somehow. I doubt if she has the power to influence outside events, just our reactions and responses to them.\"\n\nShe turned to Tammy. \"What do you think?\"\n\n\"I don't care if she's up to something anymore.\" Tammy smiled, looking back and forth at Carter and Keller. \"I'm happy, and I like where we're going. We're bringing Atlantis and Anchorage alive again, we're going to help the people in two galaxies, and Sam and I are going to have beautiful children that will follow us, and take our places someday. She can play all the games she wants, it really doesn't matter.\"\n\n\"I hope you're right.\" Keller said. \"Look where we've come in just a few weeks.\"\n\n\"We are.\" They said together, then turned and at smiled at each other.\n\nInterior-Kitchen\n\n1930 Hours\n\nSheppard and Caldwell had come in giddy as a couple of schoolboys, so Carter had asked Jennifer to call Daniel, Vala and O'Neill back for dinner. \n\nDaedalus was docked on the east pier, and Apollo was in a parking orbit while crews went through her systems and stores.\n\nSheppard was reviewing Apollo's stores, a shit eating grin on his face. \"We'll have to confirm this when we offload, but the inventory shows thirty thousand small arms, including twenty thousand P-90's. Five million rounds of ammunition, rocket and grenade launchers, 6 tons of C4. Based on this, it looks like they were planning on reinforcing through the gate if Apollo managed to take the city. And there's thirty extra nukes, in addition to her standard compliment of twelve.\"\n\n\"I want half of those for Daedalus.\" Caldwell said, looking between Carter and Sheppard. \"They're designed for use...\"\n\n\"Relax, Steven.\" Carter laughed. \"You'll get some of them. Just calm down.\"\n\n\"With what we took from both ships, and what we had on hand, we've got over twenty-eight thousand P-90's, and enough ammo to last for years. We can field a small army if we want.\" Sheppard said. \"Not that I want to, but if the need arises...\"\n\n\"How many three-oh-two's does she have?\" O'Neill asked.\n\n\"Sixty. sixteen in each bay, and another twenty-eight strapped to the hull.\" Caldwell said, looking at Carter. \"With the thirty-two Daedalus carries, you just acquired an impressive navy, colonel. We can talk about it later, but I'd like to split the three-oh-two's between the two ships, with ten each going to Atlantis and Anchorage, to supplement the jumpers.\"\n\n\"Some of those are fresh off the line.\" O'Neill said. \"And that has to be every one they had. They didn't keep anything in reserve. What the hell are they thinking?\"\n\n\"They're politicians, Jack. They probably didn't listen to what the military was telling them.\" Carter told him. \"They had one ship disappear, so they loaded up everything they had, thinking that Apollo would come in and intimidate us with an overwhelming show of force.\"\n\nShe shook her head as she looked around the table. \"The IOA knew I was playing with the STM bridges, so they had to make the connection that I wanted to charge ZPM's. I guess they didn't give me enough credit. They will now. I told Ellis that I had charged up the one I gave him.\"\n\n\"Half the people we sent back to Earth with Ellis were Spec Ops. SEALS, Rangers, and a dozen CIA. Those were all wet work people. Ellis had them isolated from his crew, he didn't want anyone near them. He doesn't speak kindly of them in his log.\" Sheppard said. \"I copied it and mailed you a copy colonel.\"\n\n\"What's wet work?\" Vala asked. \"Were they going to attack from the water?\"\n\n\"They're assassins, Vala. Their job is to eliminate targets in advance if possible.\" Sheppard said quietly. \n\n\"It doesn't matter now.\" Carter said, pushing her chair back and getting to her feet. She raised her glass, smiling at Sheppard and Caldwell. \"To the conquering heroes! You've done well by us all today, and we thank you. Your courage and ingenuity give us great hope for our future. Salute!\"\n\nInterior-Col. Sheppard's Suite\n\n2020 Hours\n\n\"A death glider will fit through the gate. Will a three-oh-two?\" Carter asked, sitting on the floor in front of Tammy's chair.\n\n\"Yes, but just barely.\" O'Neill said. \"The wingspan is a little wider than a death glider.\"\n\n\"I can't speak for John's jumper pilots, but none of my people are going to be able to take one through at speed. What do you have in mind colonel? Quick hits on planets being culled?\" Caldwell asked.\n\n\"No, but make a note of that, that's a damned good idea Steven.\" Carter said. \"Jack is right, they threw everything they had into the pot, and hoped they'd get soup. And they lost. But because they didn't think, they left Earth sitting wide open. Thank god we're the only ones that know about it.\"\n\nShe looked back at Tammy, and got the nod she expected. She turned back toward the couch.\n\n\"It's a good idea, Sam.\" O'Neill said. \"We can launch or push them through the gate. We send them to St. Louis, and they can do a hyperspace jump from there.\"\n\n\"What are you...No! You can't give them back!\" Caldwell said, getting to his feet. \"Think about what we...\"\n\n\"We're talking about Earth, Steven. Not the IOA. The American's aren't going to listen to the IOA anymore, that's pretty obvious.\" Carter said. \"I can't in good conscience leave that world undefended. That would be criminal, and you know it.\"\n\nShe turned and looked at Sheppard. \"The gate at Anchorage is outside, not up in the tower, like it is here?\"\n\nHe nodded. \"Someone moved it a long time ago. There's a long field leading up to it. and the DHD is set off to one side. We could do it from there.\" He looked at Caldwell, pacing angrily next to the couch. \"How many are you thinking of sending?\"\n\n\"Thirty.\" She said, looking at Caldwell.\n\n\"I need a drink.\" Caldwell said, turning and walking toward the kitchen.\n\n\"We'll be right back.\" She said as she got to her feet. She waved Tammy back down as she started to follow, then went into the kitchen.\n\nCaldwell was leaning against the counter, A bottle of scotch in his hand. He upended it and took a big drink as she stopped in front of him, holding out her hand. He handed her the bottle and she took a drink, then handed it back to him.\n\n\"Do we have a problem, Steven? You and I?\" She asked. \"You know why I want to do this.\"\n\n\"No, I just...there's so much we can do here.\" He said, holding the bottle up.\n\nShe shook her head, and he replaced the cork, sitting it on the counter.\n\n\"I know, but I can't leave all those people undefended, not that thirty three-oh-two's is going to make that much difference.\" She said as she looked at him. \"I'm going to send them the drones, even if they don't send us any ZPM's back. I may send them more, I haven't decided yet.\"\n\n\"You're right. My daughter Carol and her mother are there.\" He said. \"I know we have to think of Earth, not the IOA, I just haven't made the adjustment yet. I'm sorry, I got caught up in the excitement, and now it feels like...\"\n\n\"Like you won a big prize at the carnival, and your mom says you have to share it with your brother?\" She grinned.\n\n\"That actually happened.\" He laughed. \"But yes, that's what it feels...felt like. I was passed it before you came in.\"\n\n\"You keep thinking about what we need to do here, and how we're going to get it done.\" She told him. \"You're going to have a family here, soon I think, but when we get things calmed down, we could see if your daughter would like to live here. We're going to need wedding planners.\" \n\nShe turned toward the door. \"Let's go get John and Jack and go upstairs. I'd like to talk about some other things with everyone. Come on, Teyla and Ronin should be back by now.\"\n\nInterior-Living Room\n\n2110 Hours\n\nTeyla and Ronin returned shortly after they got back upstairs. Teyla saw Caldwell standing with Sheppard and O'Neill, and came over, putting her arms around him and laying her head on his chest.\n\n\"It went well? You are unhurt?\" She asked, looking up at him.\n\n\"It went just as we planned, no one was injured.\" He told her taking her in his arms and kissing her lightly. \"Well, there was one injury. Ellis's pride took a beating. I heard he landed on his ass when we beamed him into that hold!\"\n\nTeyla hugged him tightly, then released him. She turned to Sam. \"Andi asked me to tell you that she may not get away. She has much work to do to get these people settled. I offered to stay, but she said we were needed here.\"\n\n\"Those people are in bad shape.\" Ronin said. \"This is some of the worst I've ever seen, even on Sateda.\"\n\n\"John's men are caring for them. Lt. Crown called for a hundred marines, and at first, the villagers were frightened.\" Teyla told them. \"But the marines each took a family, bringing them food and water, then showing them to quarters, and helping them get settled. I believe they are going to stay with them overnight.\" \n\nShe turned and looked at Sheppard, and he nodded.\n\n\"I talked to Crown, and he asked if we could spare them. He thinks we may need to keep our guys with them for a few days, especially when we start doing medicals on them.\" Sheppard told them. \"It'll be better if they have a friendly face with them, someone they're used to telling them that it's okay, that no one is going to hurt them here.\"\n\n\"That was a good idea, and a damn nice thing to do.\" Carter said. \"But I don't want to leave them any longer than I have to. This is going to wear on those men, and we're going to be seeing alot more like this before it gets better.\" She looked around. \"I don't want to sound cold, but we have to take care of ours first. So while this group is being processed, we need to start looking at training everyone else for this kind of thing. I don't want these same guys doing this all the time. Even if they volunteer.\"",
        "\"All the marines have had training and exposure to relief work, just not on this scale.\" Sheppard said. \"We'll get that going, it might take us a couple of days to work up a program. I'll have to get with Samuels, or Jenn can send us someone.\"\n\n\"We have three or four people that can help with the mental health aspect. You want to talk to our people about how to protect themselves emotionally?\" Keller asked.\n\n\"Yes, they're going to get attached to the families they work with, and its going to hurt some of them when we separate them.\"\n\n\"You are not being cold, Samantha.\" Teyla said. \"Merely showing the wisdom your people chose you for. You wish to care for all, and that is good. Just bringing these survivors to Atlantis shows the warmth of your, and the cities heart. This will not be forgotten.\"\n\n(-)\n\nThat's all for Chapter Four. Please read Chapter Five for more of this story.\n\nI hope you liked this episode. Please post a comment so I know if I'm the right track with this..."
    ],
    "authorname": "RibaldWriter",
    "tags": [
        "romance",
        "intercourse",
        "lesbian",
        "intrigue",
        "sex",
        "love",
        "oral sex",
        "relationship",
        "love",
        "fun sex"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/confirming-carter-bk-02-daedalus-ch-04"
}