{
    "title": "Starlight Gleaming Ch. 19",
    "pages": [
        "Summary: \n\nField Commander Ranji Kandikan is arriving at Cop\u00e1n War Base. Janetta has given her E-man, Sgt Cholan Yakalme, some time off. Ranji's plan is to take the weekend and pay off the debt owed by Sowitwee's family and free Wit's father. As a sideline, he plans to visit Cholan's family, and in between, have a good time with Cholan herself. \n\nThat's the plan, anyway. \n\nAccompanying Ranji are a platoon of Air Security volunteers, led by LT Yalcamara Tchanoonka and assisted by her lover, Sgt Stimmi Parletl. Among the volunteers are TSgt Mack, Sgts Yelts and Vaniksl, CPLs Cooma, Haytam, and Laylindi, as well as a few other new security troopers. \n\nWelcome back to the weird and violent world of Starlight Gleaming and the Empire of Chimorro. This chapter picks up immediately after the events of Chapter 18. \n\nPlease be aware within Part 24, there are discussions of abusive sexual situations. If those bother you, please skip ahead. The place is marked. \n\nAs this is a continuation of Book 4, this will start with Part 17. \n\nThanks to TerrytheTraveler for lending a hand with catching errors. For my past readers, ThatEditorGuy and gyfurune, a shout out to you. Slaint\u00e9, and I hope life is treating you well. Any gaffs, typos, dropped words, usage errors, omissions, commissions, permissions, WTFs and OMGs are totally my fault. Enjoy! \n\n* * * * * \n\nBook 4 -- A Visit to Cop\u00e1n \n\nPart 17 -- Proper Sleeping Arrangements \n\n* * * * * \n\nThe Condor landed at Cop\u00e1n War Base without issue. Ground Security logged our arrival. There was also a driver and an Tortoise armored transport were waiting for us, courtesy of Commander Brenaka. A trip to the main terminal for latrine breaks for everyone. While there, Cholan, Sowitwee, and I changed into our Class A uniforms. The transport dropped us off at an unused hangar. \n\nI asked the driver to verify our destination, and he showed me the orders. Weekend assignment of Hangars 67, 68, and 69. \n\nCop\u00e1n was home to three divisions of Ground Service and several flights of Air Service tactical support units. Someone at the Quartermaster's Office was having a lark at our expense. The hangars looked like they hadn't been cleaned in years. The day was warm enough, so six troopers scattered in search of water hoses to wash out the floors and clean them for use. As a green sublieutenant, the QMO could have gotten away with it. As a senior ranking officer, I didn't have to put up with such juvenile treatment. Even more grating -- and embarrassing -- was that it affected Cholan, Wit, and a platoon of my troops. \n\nPreparing for the worst, Yalcamara and Stimmi remained to supervise the clean up of our quarters. \n\nTaking Sowitwee and four troopers with me, I had the transport driver drop us off at Supply. Cholan, with several troopers to help shop and as escort tagged along, continuing on to the Commissary to purchase essentials like soap, towels, brooms, toilet paper for forty-three people, as well as coolers filled with ice and drinks for everyone, and two score cases of liquid refreshment. \n\nI also asked Cholan to get me five hundred credits in notes, with one of the hundred in twenties. \n\n\"Oh, yes, Commander,\" she said, her voice low and sultry. Then she grinned cheekily at me with backward glance and a wiggle of her hips. Giggling, she dashed to transport. The laughing women troopers helped her aboard and it sped away. \n\nThat display earned me some indulgent grins from Sowitwee and my guards. Her actions helped lighten my mood. \n\nWhile I signed off on the forms at Supply, two Armadillos were loaded with our new vehicles. We were getting twelve new ChoCac security cruisers as well as four type-G heavy ChoCacs with the anti-vehicle guns, as well as six M-type ChoCacs with the fifty-calibers. The G- and M-type vehicles were replacements for those lost during the fight to remove Voyacherno from command of the 602. \n\nI also requisitioned cots, mattresses, blankets, pillows, mosquito netting, four stoves with cooking supplies, three score field mess kits, and other essentials for our short stay. We'd take the additional gear back with us to High Guard. They could go into the emergency shelters there. More forms to fill out and sign. \n\nWhen the transports carrying our vehicles and supplies departed, I told the Supply lieutenant that I needed to go to Motor Pool next. Our vehicles were loaded for transport, and while here, we needed to be able to get around. \n\nHe started to give me directions, but I shook my head. \"There are several staff vehicles parked out front. I have to be downtown in the city center in two hours.\" I pointed at my grade pins on my shoulder. \"I am not walking. Send a driver with us and you can have your staff vehicle back for when you get off duty. Otherwise, I will leave it at the Motor Pool for you to retrieve later. I like the one on the end.\" \n\nI pointed out the window. The vehicle in question was in the CO's designated slot. \n\nHe pursed his lips. \"Sergeant, please drive the commander and his men over to the Motor Pool.\" \n\nSince the sergeant knew the way, he drove. Very comfy seats, too, with custom leather upholstery. It was quiet the whole trip. Once we arrived, the sergeant wasted no time before departing. \n\nSowitwee grumbled, \"I can't believe he was going to make you walk, sir.\" \n\n\"But we didn't.\" On a hunch, I called Yalcamara. \"This is Kandikan. Our vehicles should be arriving in your area soon. Don't sign off on them until you compare both license plates and vehicle ID numbers to the manifests. Do a power on, and have the AI run a summary diagnostics check. Make sure we're getting what we signed for.\" \n\n\"You suspect a problem, Commander?\" \n\n\"Just being cautious. Nothing overt, and it could just be the Air Service uniforms. But when it comes to supplies, I want an inventory roster that matches what we actually have. If it doesn't match, I want to know the reason why.\" \n\n\"Confirmed, Commander. I'll handle it.\" She hung up. \n\nI looked at my watch and frowned. It was getting late in the afternoon. The courts would be closed the next day, so we had to get a move on. The visit to Cholan's parents would definitely have to happen the next day. We'd need four vehicles and two drivers. Two for my people to get around the base, and the other two with drivers for trips into town. \n\nInside the Motor Pool office, I was politely told I had to wait twenty-four hours before a single vehicle would become available. \n\n\"Second Sergeant, I need to get into Cop\u00e1n before close of business, today.\" \n\n\"I'm sorry, sir. All vehicles are accounted for until ten hundred hours tomorrow.\" \n\n\"You have no reserve vehicles at all?\" \n\n\"No, sir.\" \n\nStepping away from the desk a few feet, I pulled out my phone and dialed. \n\n\"Brenaka, here.\" \n\n\"Commander Brenaka, this is Commander Ranji Kandikan, Air Security from High Guard. I believe Captain Bilan Monaycote of the 716 Mobile Infantry may have spoken to you about me?\" \n\n\"Yes, he did. Is it true Sergeant Styen works for your family?\" \n\n\"It is my privilege to know the man. Styen taught me nearly everything I know about martial arts and about honor. These days he is guarding my father.\" \n\n\"Sounds like he's keeping busy. What can I do for you, Commander Kandikan?\" \n\n\"First, a thank you for the transport waiting for us on arrival. It's too bad the war base here is so full. The only place your Quartermaster's Office had available were some empty hangars with not even bedding available. I had no idea things at Cop\u00e1n War Base were so desperate. I've already taken care of obtaining gear from Supply. We're only here a short time, and I'm under a time crunch. There are some matters in Cop\u00e1n at the courthouse that need my personal attention. I also need transport, but Motor Pool says there is nothing available until tomorrow.\" \n\n\"Just the one vehicle?\" \n\n\"Two at a minimum, but four would really be better. I have a full platoon of troopers with me, as well as my aide and a guest. Most of my men will be guarding the new vehicles we are picking up for the regiment. Some in the Quartermaster's Office decided we needed to shelter in an empty hangar by the airfield. I'd like for them to have at least one vehicle to pick up food for meals while I'm away. I also need one for me. My guest would like to go shopping tonight while I'm at the courthouse. Drivers who know Cop\u00e1n for both of us would be excellent, but if we had newer vehicles with HUD displays, we could provide our own drivers.\" \n\n\"Sounds reasonable enough. Thank you for the information, Commander. I, too, had no idea things were so bad here that a senior officer had to receive such accommodations, and I appreciate you bringing this to my attention. I intend to look into this matter after we get off the phone, and after I've arranged for your vehicles. \n\n\"Captain Monaycote tells me Styen saved him and his family, but he didn't elaborate. Would you be available for drinks later at the Officers Club? Say at nineteen hundred hours?\" \n\n\"Officers Club at nineteen hundred hours tonight sounds perfect. I look forward to meeting you in person,\" I replied. Glancing at Cholan, \"Is it alright if I bring my guest?\" \n\n\"Certainly. I'll bring my wife. Is this your number I'm seeing on my telephone?\" \n\n\"Yes, sir.\" \n\n\"Sit tight and let me do my thing. I look forward to meeting you and your companion this evening, Commander Kandikan. Goodbye.\" \n\n\"Thank you, Commander. Goodbye.\" I closed my phone and slipped it back into my pocket. \n\nSowitwee seemed amused. \n\n\"You find this entertaining, Sergeant?\" \n\n\"Yes, sir.\" \n\n\"Explain.\" \n\n\"If Commander Brenaka is anything like you, sir, then I'd say both the Quartermaster's Office and the Motor Pool are about to find out what it's like to knock over a fully-housed hornet's nest when you're barefoot.\" \n\nI smirked. \"We shall see.\" \n\nAs if on cue, a phone rang in one of the back offices. There was nothing for close to two minutes, but eventually a pale lieutenant came out and approached the service counter. \n\n\"Commander Kandikan?\" \n\nI walked back to the counter, flanked by my aide. \"Yes, Lieutenant?\" \n\n\"I had no idea you were a senior officer, sir, and in need of transportation.\" \n\n\"Lieutenant, do you know many field commanders who aren't senior officers?\" \n\nThe sergeant waiting behind the lieutenant winced. And, to be fair, both men looked older than I was. But grade is still grade. \n\n\"I mean no offense, sir.\" Tapping nervously on a screen, he said, \"Three staff vehicles are being made available for your use right now, Commander. I'm afraid that's all we have available at the moment. How long will you be needing them?\" \n\n\"Fan-fucking-tastic. We depart zero-six hundred hours from Terminal Three in two days.\" \n\n\"So noted, sir. We'll have someone pick them from Terminal Three parking after your departure time.\" \n\n\"Do these staff vehicles we're getting have AI and HUD capabilities?\" \n\n\"Uh, no, sir. They're older models.\" \n\n\"We'll make do, then,\" I said. \"Print up two maps so we can at least find our way around.\" \n\n\"Uh, yes, sir.\" He looked panicked, until the sergeant reached into a drawer and pulled out two pre-printed maps, silently setting them onto the counter. \n\nI presented my lanyard to check out the vehicles, and two of my troopers followed the laconic motor pool sergeant out to the yard. \n\nTwo Ground Security entered the doors just as I finished with my part of the paperwork. A corporal and a field corporal, and both saluted. \"Commander Kandikan? You requested two drivers?\" \n\n\"So I did.\" I returned their salutes. \n\nSowitwee winked at me as we headed outside. \n\nAfter giving them our location, we waited for the other two vehicles to pull up, and then we set off for our temporary home. \n\nTaking out my phone, I called Inoye Ranimo, the barrister that Bilan hired. I introduced myself, and explained I was in town to pay off an indenture contract held by Chantamoco Investments and Holdings in person. I needed him to witness and notarize the transaction, and then to accompany me to the state courthouse to file the contract's termination and release of indenture. We would then file a certified copy with the Finance unit at High Guard to stop further deductions from Wit's paycheck. \n\nHe agreed to take the job, stating his fee would be two hundred and twenty five credits. I told him if we could get it done today, I'd pay him three hundred. I also told him that I would meet him at Chantamoco's offices downtown in ninety minutes. He said he would meet us there and hung up. \n\nBack at the hangar, Yalcamara came up to meet me with a sitrep. \"The vehicles and the manifests match up, Commander.\" \n\n\"Did they fire up and initiate contact with the war base C&amp;C?\" \n\n\"Yes, sir.\" \n\n\"No problems, Lieutenant?\" \n\n\"None, sir.\" \n\n\"Well, if we have to get stuck in the shanty-town part of Cop\u00e1n War Base, at least we're getting good equipment to take home.\" \n\nShe smiled in agreement. \"Could be worse, Commander. We could be stuck by Sanitation.\" \n\n\"Ah, yes, that's true. I expect we'll take care of Sowitwee's situation in the next couple of hours. Make up an extra bunk for his father, will you? Tomorrow I'm taking Cholan to meet her parents, and then afterward, we're going out. For that matter, why don't you and Stimmi come along tomorrow evening? We have good people here to keep watch over our gear. That way, you can personally keep an eye on me.\" \n\nThat last bit sold her. \"All right, Commander. What time?\" \n\n\"I won't know until later. Tomorrow, why don't you check out the local newspapers for shows and concerts and pick something out. We'll meet you there.\" \n\nShe glanced at Stimmi talking to some troopers. \"It sounds fun.\" \n\n\"In the meantime, I have to leave with Sowitwee. Cholan should go into town and do some shopping for a nice evening dress. I need a couple of troopers to go with her. Here's one of the maps, and the third vehicle is for your use. I'm meeting Commander Brenaka from the war base C&amp;C tonight at nineteen hundred hours at the Officers Club.\" \n\nShe shook her head. \"The third vehicle should go with you, Commander. You know they're willing to break the law. You need to take armed support with you. Let me break the seals on one of our new cruisers and I'll use that.\" \n\n\"All right. In fact, might as well activate the passive solar collectors on all the vehicles. While they're sitting in the sun, they may as well top up the batteries. Call Chita for my charge card number, and if we need more supplies, I authorize you to make the purchases. I insist, Lieutenant. Cafeteria food is too chancy.\" \n\n\"Thank you, Commander. I'll pick some dependable people to go with Cholan.\" \n\nI found Cholan reading one of the vehicle manuals. After giving her a kiss, I told her about the evening plans, and that she was to go shopping. \"Get something casual for the next day, and an evening dress for tonight. You have your charge card?\" \n\n\"Yes, sir.\" She dug out the wad of cash I'd asked for and handed it over. \n\nI tucked it into my wallet. \"Get whatever you want. You are my date tonight at the Officers' Club.\" \n\nHer face flushed, but then she gave me a cheeky smile. \"Don't you have things backwards, Commander?\" \n\n\"How so?\" \n\n\"Usually the dates come before the fucking. We've been fucking for a year now.\" \n\n\"If you don't want to go, I'm sure I can--\" \n\n\"No, no! I didn't mean it that way,\" she said, alarmed. \"I'll go shopping and get something nice to wear. I was just saying is all.\" \n\n\"Cholan, you are my woman, aren't you?\" \n\nA calming breath. \"Yes, sir.\" \n\n\"I plan to take you on a date, show you around, feed you fancy food, maybe dance a little, and then after we come back here, I intend to fuck my Island Girl senseless. Am I clear?\" \n\nEyes wide and dilated, she nodded. \"Five by five, Commander.\" \n\nI pulled her into my arms and gave her a solid kiss. She eagerly kissed me right back, then shivered. \n\n\"Do you prefer that I ask you first, and seduce you with my charms?\" \n\nShe sighed against my chest, then looked up at me. \"I liked you telling me what you want and what you're going to do to me just fine. I love you, sir. I'm happy with however you want me, just as long as you keep wanting me.\" \n\nI kissed her again. \"Something to tide you over with. I love you, too, Cholan Yakalme. Indulge yourself and have a good time.\" \n\nGrinning happily, she got into the Ground Security cruiser with Mack and another trooper, and they drove off. \n\nSowitwee and I got into the other Ground Security vehicle, with Corporal Yelts getting into the front seat. One of the staff cars filled with four more troopers and fell in behind us. I gave the driver the address of Chantamoco Investments and Holdings, he entered it into the AI, and we set off. \n\nWe checked out at the gate, then headed north on a main highway for a while, then we turned west. \n\n\"Driver, what's your name?\" I asked. \n\n\"Corporal Karmek, sir.\" \n\n\"Thank you, Corporal. Beside you is my aide, Sergeant Sowitwee. That's Sergeant Yelts.\" \n\n\"Yes, sir.\" \n\n\"How long till we reach our destination, Corporal?\" \n\n\"Depending on city traffic, twenty minutes to half an hour, sir.\" \n\nI relaxed, thinking about the upcoming dinner at the Officers Club. While I wanted to make friends with Commander Brenaka, I also wanted to make this a special night for Cholan. All of us had been working so hard, and this trip was a chance to show her how special she was. My Island Girl was a much better dancer than I could hope to be, but with slow dancing, it's mostly about swaying together to the music. And then, sometime tomorrow, we'd do some early morning shopping together before heading to visit her parents. We'd get introduced, meet with them, have a snack. Hopefully all of us would go out, we'd meet up with Yalcamara and Stimmi for a night's entertainment, and everything would be grand. \n\nI loved the daily routines at home, and it gave stability for my girls. Each of these women in my life needed their own private, special shared moments, and I needed to make that happen. And those events didn't have to always include me, either. Women needed bonding time with other women just like men needed time with men. \n\nWe eventually pulled into a parking lot. \"We're here, sir.\" \n\nFairly upscale locale, I thought, looking around. In the heart of the business district, with both merchants and higher-end guild shops around us. \n\nKarmek remained in the vehicle, but the rest of us stepped out. Three more troopers fell beside Sergeant Yelts. Another sergeant and two more corporals, all three women. Helmet visors down; it provided protection, but it was also a deliberate act of separation. They were armed warriors with no visible faces to read or appeal to; ready to do violence if duty required it. \n\nSowitwee opened the door for me, and as we entered, a man in high-class civilian trousers and a flowery tunic clutching a briefcase rose to his feet. \n\n\"Commander Kandikan?\" he inquired hopefully. \n\n\"Mister Ramino, I presume?\" I held out my hand. \n\nHe nodded, giving me a brief handshake. \"A pleasure, my lord. Shall we dispense with the preliminaries first?\" \n\nWe sat in adjacent chairs. He opened his briefcase and handed me a single-page contract, showing that I was retaining him solely for short-term services for business dealings in Cop\u00e1n. Satisfied, I signed at the bottom, and digging out my wallet, handed him three hundred-credit notes. \n\nSmiling, he tucked the funds into an inside pocket on his tunic, closed his briefcase, and we approached the receptionist. \n\nRamino spoke, and first we went through a customer service representative. A few minutes later, a supervisor joined in, until finally I sat before a heavy-set manager. The manager kept looking between me, Sowitwee, and the four Air Security guards standing quietly near the door with assault rifles, helmets, and protective vests. ",
        "After some fussing around, the contract was produced, fees calculated, and the full payout presented. I produced my charge card. \n\nThe manager broke out into a sweat, pointing at a sign on the wall. \"I-I-I'm sorry, my lord, but we can only take exact payments.\" \n\n\"What?\" I burst out. \"This is a charge card guaranteed by the Imperial Bank of Chimorro! This is recognized as being equivalent to cash, and is legal tender for all business throughout the Empire!\" \n\nThe barrister looked surprised at the manager. The manager might have been able to bamboozle a commoner. However, I was in uniform, and it was obvious I was Warrior Caste. \n\nGlowering, I growled out, \"Fine. Will you take a banker's check? Or do you need the amount in cash?\" \n\nThe fat man swallowed nervously. \"My employer insists on cash?\" \n\nI glanced around. The three other office workers suddenly looked busy. Aside from the supervisor, they had a single middle-aged armed guard by the entrance, and he wore no vest. \n\n\"Where's the nearest bank from here, moron?\" I demanded, standing up. \n\nSweating, he said, \"T-two blocks north, one block west from here, Lord Kandikan.\" \n\n\"Present the final full payout amount of the contract in writing, now! I warn you. If you alter the amount by such as a single copper piece, I will arrest you and if you are lucky, you might see daylight in twenty years. While I am gone, you will print out all, and I mean all documents needed to complete the transaction, including preparing a certified receipt for full payment. You will present these documents for Master Ramino to review until my return. Am I clear?\" \n\n\"That's not our usual procedure,\" the manager squeaked in protest. \n\n\"Give me the damn bill! And you will do as I instruct. Now!\" \n\nSuddenly four rifles were charged and safeties went off, and one of the troopers faced the armed guard, who jumped back, jerking up his hands in surrender. \n\n\"Please, sir!\" the manager begged, going two shades paler. \n\n\"Why are you delaying? I am active military and you are a civilian. You are lawfully obligated to follow any of my instructions that do not violate Imperial law. If I have to ask one more time, I will lose my temper and you will get hurt. And then I will arrest you. Am I clear!\" \n\nHe nervously typed on his keyboard, and then the printer hummed to life. It whirred and a paper shot into the holding tray. The manager gestured to the supervisor, who retrieved it and handed it over. \n\n\"Seven hells!\" I exclaimed. \"This is more than six thousand credits higher than I was quoted two days ago. No, don't you say a single word. I'll pay it. Sowitwee, stay here and assist Master Ramino if he has any questions for you. I will return.\" \n\nSafeties clicked back on. Sergeant Vaniksl said, \"Cooma, stay here with Sergeant Yelts.\" \n\nThen she and Haytam hustled out after me. \n\nBack outside in the late afternoon air, I recognized Cooma as being Mack's friend from the women's home. Odd how things like that jump out at you unexpectedly. \n\nHaytam got into the front seat, while Vaniksl climbed into the back with me. Corporal Karmek drove us to the bank in short order. \n\nAs we entered the financial establishment, the bank guards gave the troopers a nervous look, but the troopers waited in the designated spot for personal guards. The bank was busy, but the window marked for nobility had no clients at all. \n\nI strode with quick deliberation, still fuming from the encounter with those thieves at the contract holding company. \n\nA finely dressed man jumped up from his desk, and as I reached the window, he rapidly unlocked door next to the window, and moved to the teller's seat, inclining his head. \"How may I be of service, my lord?\" \n\nI took a calming breath. When you are angry with one person or one thing, it's never a good idea to carry it over to others. They don't deserve it, and the fallout is never beneficial. \n\nTaking the printout from my breast pocket, I pushed the paper into the slot under the barred and shielded window. \n\n\"I need that in cash,\" I told the bank teller. I passed along my credit card next. \n\nHe asked for secondary identification, and I produced my military ID card. He checked the picture and fed it into a slot, then asked me to put my right index finger into a print-reader. The light came up green. \"You are aware, my lord, we must ask the nature of all transactions exceeding ten thousand Imperial credits?\" \n\n\"I'm paying off an indenture contract. The holder is insisting the payment must be in cash.\" \n\n\"The holder of the contract, my lord?\" \n\n\"Chantamoco Investments and Holdings. Their name and address are in the footer of that paper you have.\" \n\nHe rapidly typed away at his computer terminal. \"Will you please speak your name and the purpose of your cash withdrawal into the microphone, Lord Kandikan?\" \n\n\"I, Ranji Kandikan, Field Commander, Imperial Air Service, authorize the withdrawal of forty one thousand, two hundred and twelve credits in cash, to pay off the indenture contract held by Chantamoco Investments and Holdings, operating in Chohinze State, to release one Sowitwee Bancorri, Sergeant, Imperial Air Service and one Daydo Bancorri, civilian, from all further debt and obligation outlined by said contract and restoring them as free citizens of the Empire. Is that sufficient?\" \n\nHe gave a satisfied nod. \"Indeed, Lord Kandikan. Thank you. To comply with the Minister of Finance's tax reporting requirements, with your deposition, Chantamoco Investments and Holdings will need to show that transaction on their tax returns in the coming year or be penalized and subject to tax audit. Would you like an envelope for the cash?\" \n\n\"That would be excellent, thank you.\" \n\nBills rapidly shot along a long, thin rail into a metal holding slot. Thousand credit notes first, then hundreds, a ten, and two singles. Once the money settled in the slot, the teller gathered it up and counted out the cash manually, then put the funds into a large envelope. He passed it back to, followed by my receipt, credit card, and my ID card. \n\n\"Is there anything else I can do for you, Lord Kandikan?\" \n\nGiving him a tired smile, I replied, \"No. Thank you. Your service is in marked contract to my experience with Chantamoco Investments and Holdings. I am pleased with my transaction.\" My ID went back onto my lanyard and the envelope into my breast pocket. \n\n\"We have been honored to serve you, Lord Kandikan. Have a good day.\" \n\nWith that, we returned to the vehicle, and within minutes we were back in the parking lot of the business front for the obviously corrupt and noxious Bayloks'mec family. \n\nEveryone looked up at me as I re-entered the office. Vaniksl and Haytam resumed their post near Yelts and Cooma. \n\nI glanced at Sowitwee, then focused on Master Ramino. \"Are the documents ready?\" \n\nThe barrister nodded. \"I'm satisfied all the necessary documents are here and ready, my lord.\" \n\n\"Good.\" Going to the counter, laying out the money envelope. \"Here's the money. You get it once the documents are all signed. Master Ramino, you will act as notary for the receipt.\" \n\nJust then there was a crash. The customer service representative, making her way to the back, slipped and fell, knocking over a chair and landing hard. Her skirt flipped up, revealing bare flesh with something on her butt. Flushing with nervousness, she quickly covered up, muttering, \"Sorry. I need to go pee.\" \n\nWith Ramino's help, it was simply a matter of minutes of going through and signing where signatures were needed. Once that was done, the money was counted out and handed over. The supervisor collected it while Ramino pulled out a stamp to apply his name and notary seal certifying his witnessing the payment. While Ramino collected the stack of papers, the supervisor opened a floor safe and dropped the money into it. \n\nThat writing on the rep's rear end nagged at me. Then I knew. \n\nCrossing the distance to her desk, I said, \"Stand up.\" \n\nThe manager paled even more, an act I wouldn't have believed. Because she was slow, I helped lift her up. I pulled up her long skirt and revealed her bare skin. \n\nIt wasn't the lack of underwear I was concerned about. It was the line of numbers on her butt cheek indicating her slave status. \n\nSlaves could do professional work only in a private setting, that is, within the home of their owner. These were the same laws that kept Calia from becoming a teacher or a mid-wife because she was a Personal Servant. In public, slaves were limited to menial positions, and were not allowed to perform technical work or to conduct business transactions with free citizens, and they were especially not allowed to conduct business directly with nobility. Imperial law prohibited such; it was a concession to the Guild and Merchant caste from over forty years earlier, and the penalties were stiff. The slaves themselves could be executed. \n\nI strode over to the other two women. \"Stand and uncover.\" \n\nThey trembled as they did so. Like the first woman, they wore no underwear and also bore slave tattoos. \n\nI went around the corner to the supervisor. \"Show me.\" \n\n\"No need, my lord,\" he said quietly. \"I'm a slave, too.\" \n\n\"Seven hells. The guard. Him, too?\" \n\nThe supervisor nodded. \n\n\"Lovely.\" I went back to the manager. \"Stand up, drop your trousers, and show me your ass. Now!\" \n\n\"My lord!\" \n\n\"Sergeant Vaniksl!\" I snapped. \n\n\"Haytam, disarm the guard!\" she barked. Cooma, cover us. Come on, Yelts.\" \n\nThey marched over and while the burly Yelts held him, Vaniksl unbuckled him and pulled down his trousers and underwear. No marks. \n\nRelieved, I let out a slow exhale. Had the manager been a slave, his signatures would have been invalid, the contract worthless, and they would have had my money. Well, not that I would have let them keep it. \"Place him under arrest, Sergeant.\" \n\n\"Yes, sir.\" \n\nRamino looked at me. \"They're all slaves but for the manager?\" \n\nAs he was cuffed, the manager began to say we didn't know who we were messing with, that we'd pay for the insults today. \n\n\"Vaniksl, stop that racket! Yes, Master Ramino,\" I confirmed. \"Look, there's only thirty minutes before the courthouse closes. They've broken so many laws it's going to take the JAG people and the Imperial auditors a while to sort everything out. Let's go. Once the contract is filed, your part is done. This is my mess to sort out, and trust me, it will get sorted. Sergeants, keep them here, and no outside communication allowed. Come on, Wit.\" \n\nAt my gesture, Ramino handed over the forms needed for the court to Sowitwee. Cooma and Haytam fell in behind us, leaving Vaniksl and Yelts to mind the prisoners. \n\nWe followed the barrister since he knew the way. \n\nDriving quickly, we made it the building, up the marble steps and then down the inside stairs to the clerk's window within five minutes of closing. The clerk behind the glass window sighed in exasperation. I was obviously a nobleman, and they were constrained to complete the transaction begun, even if the official time for closing the doors passed. \n\nThe clerk worked quickly, filing the documents. I paid the court fees, and the transfer fee of one hundred and fifty credits. I had the clerk make certified copies, and to make certified copies of the original filing documents, and any signed amendments. \n\nDisgruntled, the clerk looked at his screen and tapped away at the keys. Two other clerks helped with collating the copies. The printers spat out another hundred or so sheets, pages were stamped, and I paid still more credits. \n\nA court supervisor waited behind the clerk, and two courthouse guards stood patiently nearby. I was pleased to note that my own two guards were more stoic. It was already twenty minutes past the hour of closing. \n\nWhen the transactions were at last completed and the documents were in my satchel, the guards escorted us to the doors, unlocked them, and politely but firmly pushed us outside into the evening. \n\nOn the marble landing before the wide steps down to the sidewalk, I said, \"Wait a moment.\" \n\nStreet lights were coming on as sunset reached completion. Overhead, starlight gleaming from thousands of far-off suns glittered and sparkled like jewels on an ebon tapestry, flickering in the overhead sky in their ancient colored lights. \n\nI took a long, deep inhale and an equally slow exhale. \"Smell that, Wit? You and your father are now free Guildsmen again. Congratulations!\" I held out my hand to him. \n\nSurprised, he have me an emotional smile as we shook hands. \n\nThen I pulled him in for a quick embrace. \"You are my aide, Wit, but you are also my brother in arms and I hope my friend.\" \n\n\"I can never repay all you've done for me, my lord.\" Understandably, his voice was quite emotional. \n\n\"Llam nuqan. After we wrap up things at the holding company, let's say we go get your father.\" \n\n\"Yes, sir!\" He grinned in anticipation. \n\nI turned to the barrister. \"Master Ramino, thank you. You earned your fee today.\" \n\n\"What about what I've seen? I know about the slaves performing guild and business tasks in public. As an officer of the court, I'm obligated to report the crime.\" \n\n\"How long have you lived around here?\" \n\nStartled, he glanced at me sharply. \"All my life, my lord.\" \n\n\"Like it here?\" \n\n\"It's a good life.\" \n\n\"You know the area and the politics pretty well, don't you? Well, here's what I believe. For whatever reason -- and the actual motive isn't relevant, only what transpired afterward. Sowitwee's father was deliberately targeted and his master's license revoked under false evidence, his business and reputation werr destroyed, and his family scattered. \n\n\"With his father's humiliation, Sowitwee could either run away to another city or do what he could to help his father, and his only real option to improve his situation was to join the military. While in the service, he met and fell in love with a fine young woman named Nariya, and shortly after they became serious, she was brutally attacked and badly hurt. Her medical costs required her to be indentured to repay them. She was a singer, and after she was beaten and raped, her tongue was cut out, and thus her livelihood was destroyed. Nonetheless, Sowitwee and Nariya were married and being good citizens, trusting in justice and the goodness of others, they undertook to repay her medical debt as well his own. Last year, I paid off the balance of Nariya's indenture contract. The very next day, the contract binding Sowitwee and his father was amended, and while I haven't had a chance to look at the documents we just received from the court, I'm betting those documents either weren't signed or the signatures were forged. What do you think my odds are?\" \n\n\"I wouldn't even hazard a guess, Lord Kandikan,\" he answered thoughtfully. \n\n\"The sergeant here is an honorable man and a dutiful son. Just over two months ago, he was in combat and awarded a medal for bravery, one that qualified him for financial emancipation under the Heroes Act. A Ground Service JAG officer pointed out to me that Sowitwee and his wife could have been free from his father's debt. Because he is an honorable son, he's continued paying on his father's debt. \n\n\"Previously, his payments went directly to Chantamoco Investments and Holdings. Now, they go to Jade Petticoat Services, a company thousands of rads away in far off Maychee, located in Inharana State. They process the funds and send the money every month to Chantamoco. Because of this new required step in the payment process, the payments always arrive late to Chantamoco's offices, and based on the new contract, this then incurs hundreds of credits in fees and penalties. \n\n\"They made a mistake, though. Besides fraudulently amending the contract, the Imperial High Court ruled in Jingsaway versus Je State states that payments received by one company count as received by the other company if both are owned by the same parent company. Through some digging, I found that Jade Petticoat Services and Chantamoco Investments and Holdings are both owned by Ventac Securities. Thousands of credits were illegally added each month to the contract binding father and son. Ventac Securitie is owned by one Pren Bayloks'mec, former Ground Service Commander and the so-called hero of Ventac Two. Pren's two sons, Garan and Ikan also hold shares in Ventac Securities. I assume you know who Pren Bayloks'mec is?\" \n\nRamino nodded. He didn't look happy about it, either. \n\nI watched people hurrying from the state buildings, going home from work. Nearby, restaurants were filling with diners eager for their evening meal. Which reminded me that I needed to be done and back for Cholan. I resumed speaking. \n\n\"Now we add the blatantly illegal issue of slaves doing Guild and Merchant work in the heart of the state capital. How many people would go into offices and inspect staff, looking for slave tattoos before conducting business? If I took all this to the Imperial Court here in Cop\u00e1n, how far do you think I would get?\" \n\n\"Not very far, my lord. They would tie you up in court for years.\" \n\n\"Are you married?\" \n\n\"Yes, my lord, I am. Happily so.\" \n\n\"My brother says you are a good man. The Empire needs good men. Good women, too. It might be safer for you to take a small vacation. Nothing too long, mind you. Just long enough for the dust to settle around here. A few days or a week perhaps.\" I took out the remaining two hundred credits, moved in close and put the money into his breast pocket. \n\n\"How long should I wait before reporting the existence of slaves doing Guild work?\" \n\n\"After the weekend should be sufficient. We will be back at High Guard War Base, and everything concerning the slaves themselves should be settled. Because these illegal actions involved a man in active military service, the War Ministry is now involved. They take a dim view of any business cheating their warriors. After you make your obligatory report, do not involve yourself further unless requested by officers of either Air Security or Ground Security. Unless you know otherwise, Imperial Security might be part of the cover-up. In that case, cooperate, but don't volunteer anything.\" \n\nThe man exhaled slowly. \"Yes, my lord. I understand.\" \n\nI held out my hand to him, and he shook it. \n\n\"Thank you, Master Ramino. If you need a referral, send me an email and I'll gladly send you one. This situation isn't my fault nor is it yours, but we've both stepped into it. We will do what good men should always do. Act with honor and fight for our loved ones like the possessed. Goodbye.\" \n\n\"Goodbye, Lord Kandikan.\" He hurried to his vehicle and drove away. \n\nWe returned to our own vehicle and returned to Chantamoco. I instructed Corporal Karmek that we had a prisoner and five civilians in custody and that we needed transport to the war base for processing. At his look, I said, \"Bet you thought this was going to be an easy assignment, didn't you.\" \n\nSowitwee snorted, and I was sure I heard some quiet snickers from the two women troopers. \n\nBack inside, I saw the manager was bound and laying inert on the carpet. Yelts stood by the door, and Vaniksl sat on the corner of a desk, her helmet off and beside her. She was tapping onto her tablet. The slaves were gathered in chairs in a semi-circle in front of her. \n\nSeeing me, she stood up. \"Commander, you need to hear this. Go on, Kitsi. You first.\" \n\nHer face had a mixture of hope and fear. \"I am Kitsi of House Oporandsa, from South Freeport, Southern Je State. My father was a trader in foreign goods. He opposed a criminal trying to extort money from him. Our home was broken into just over two years ago. I was taken and enslaved. I was sold twice before I ended up here.\" \n\nI turned to Vaniksl. She nodded. \"The others have similar stories. I can't confirm anything until we can get back to the war base, but if it's true...?\" ",
        "Enslaving and trafficking in free Imperial citizens was a major crime. How did this continue? Why was no one speaking up about this? \n\nKitsi, the customer service rep, suddenly burst into tears. \"Please, Lord, you mustn't say anything! They will kill us!\" \n\n\"Kitsi, we're with the Air Service. We work for the Emperor. We'll protect you,\" I assured her. \n\n\"You don't understand! All they have to do is say something and we will die! We've seen it before.\" \n\nI looked at the supervisor and the other slaves. \"Is this true?\" \n\nMorose, they replied, \"Yes, Lord.\" \n\nNanotech bombs. Had to be. Which meant Minster Supay was involved. It explained why Ventac Securities was acting so blatantly. When your partner in crime is the second most powerful man in the Empire, why bother overly much to hide things? \n\n\"Sergeant Vaniksl, your helmet has enhanced scanners. Examine these people. Look for a nano-device next to the heart.\" \n\nPutting the helmet on and dropping the faceplate down, she leaned forward, scanning. \"Device confirmed, Commander. I'm also detecting one microgram of Tetrazene within the nano-device.\" She moved on to examine on the others. \n\nOne microgram. Just enough to blow apart the heart and shred the lungs, initially mimicking a fatal heart attack. \n\n\"Do you know how they activate the devices?\" I asked Kitsi. \n\nThe others shook their heads, but Kitsi switched to Mayan. \"Do you understand me, Lord?\" \n\n\"Yes, I do.\" \n\nRelief mixed with fear flooded her face. \"I heard one of the masters talking about it. They speak Queschuan and tell us we are free and then we die. You found something inside us, Lord? What will happen? Are... are we going to die?\" \n\nSpeech as a trigger? That was new. Somehow these nano-devices can be voice activated. Maybe a secondary nano-device in the ear? Did it matter? \n\nI spoke to all of them. \"I'm going to do what I can get those devices removed. If anything, the presence of those devices confirms your stories about being kidnapped and illegally sold. Vaniksl, report.\" \n\n\"The others have the devices as well, Commander.\" \n\nThey looked frightened. \n\nVaniksl put her hands on the woman closest to her, speaking an a calming tone. \"Hey, listen. If the commander says he will keep you safe, you can count on it being so.\" \n\n\"Kitsi? Can you direct us to where you and the others currently live?\" \n\n\"Yes, Lord.\" \n\n\"Good. Sowitwee, go tell Corporal Karmek to contact Ground Security C&amp;C for backup. Let them know we have several people believed to be wrongfully enslaved and implanted with explosive devices. Instruct our people they are not to speak to the slaves, and to keep their speech to an absolute minimum until these devices are disarmed. We do not want the devices being accidentally discharged. To avoid his employers finding out and fleeing, I want this manager placed in solitary pending formal charges.\" \n\n\"Sir!\" My aide hurried out. \n\nThe irony was the manager and the other free men would be enslaved for their crimes. Ah, well. There might some justice in the world after all. \n\n\"Is the manager even still alive?\" I asked Vaniksl. \"He hasn't moved since I arrived.\" \n\nShe shook her head. \"Oh, that. He started in, telling us how much danger we were courting. Even after I stuffed something into his mouth and taped it shut, he kept fussing and grunting, kicking the desk and chair, so I stunned him and zip-tied his feet, too. When he came out of it, I had to stun him again. I think he's awake, and hopefully learned his lesson.\" \n\nAmused, I had to smile. \"Good job, Sergeant.\" \n\nShe grinned back. \"Thank you, sir.\" \n\n\"All right, the rest of you, listen up. If there are any possessions here in this building that are yours, collect them now. You will not be returning here. Vaniksl, see if the manager has any building keys. When we leave here, we need to lock up. We don't want be accused of negligence.\" \n\nSergeant Vaniksl went to the manager and rifled all his pockets, tossing two sets of keys to Cooma, instructing her to determine if any fit the lock on the entrance. \n\n\"I need to leave again, but I'll be back as soon as I can. Who's going with me?\" \n\n\"Yelts, Haytam. Guard the commander.\" \n\nOutside, I went to the cruiser with Corporal Karmek. \"Situation report, Corporal.\" \n\nKarmek looked at his watch. \"Three cruisers are on their way, Commander. ETA is twenty minutes.\" \n\n\"All right. I want you to look up an address for me--\" \n\n\"Commander,\" Sowitwee said, interrupting me. \"I know where my father's at. I can direct you from here.\" \n\n\"Perfect. Karmek, stay here. We'll take the other vehicle. Yelts, you're driving, and Sowitwee will direct us. Let's go collect your father, Wit.\" \n\nMy aide gave me a grim nod. \n\nHaving been at Sparantzlo, my mind slipped into darker, more evil thoughts. Would they have dared put such a device inside Sowitwee's father, too? Lack of hubris had not been the hallmark of these people thus far. \n\nSowitwee must have been thinking the same thing I was. \"Commander, do you think--?\" \n\n\"I hope not. However, until we can make sure one way or another, we must act as if it's so. For his safety and yours.\" \n\n\"Yes, sir.\" An emotional exhale, then he resumed watching the road, giving Yelts directions. Would they be so cruel as to cheat Sowitwee of his father should the old man ever regain his freedom? The nano-bombs within the slaves told me yes, they were. \n\nI wondered just how far Supay would go to force people into alliances with him, with the threat of immediate death to force their loyalty. These voice-activated heart bombs were a huge new wrinkle in things. Not just slaves or agents of Imperial Security, but free men and women could be suborned by means of simple injection. \n\nGetting out my laptop, I wrote out an email. \n\nDear Tik\u00fan Travel -- \n\nHave encountered multiple people with heart-wrenching mementos like those I found during my visit down south a few months ago. These mementos respond to voice control. What advice to you have? \n\n-- R \n\nThe vehicle's AI was primitive, but the radio system allowed wifi piggybacking by way of Cop\u00e1n War Base. I sent the encrypted message, then shut down the laptop and put it away. \n\nWithin ten minutes, we pulled into a parking lot. The street ahead was blocked. \n\n\"Sorry, Commander,\" Sowitwee said. \"The shop is around the corner halfway down the block. The street ahead is reserved for pedestrian traffic.\" \n\nYelts stayed with the vehicle, and Haytam accompanied us. I checked both sidearms, but didn't charge them. Sowitwee looked anxious. \n\nI put my hand to his shoulder. \"Treat this like the temple fight, Wit. We're going to get your father, but we have no idea what we're walking into. It could be a simple trip or it could be a serpent's den, so keep on your guard.\" \n\nLooking at my watch, I called Cholan. \n\n\"Hello?\" \n\n\"Hello my lovely Island Girl. Where are you now?\" \n\n\"Waiting for you at the Commissary Diner. Mack's keeping me company. Are you on your way?\" \n\nI sighed. \"I know we had plans to have dinner first, but this is taking longer than I thought. Don't go hungry on my account. Eat something to tide you over. Tell your escorts to eat something, too, and put it on my card. I'll pick you up on my way to the Officers Club.\" \n\n\"If it's too much trouble, I don't have to go, Commander.\" \n\n\"Did you get a dress and shoes and did you make yourself pretty for me?\" \n\n\"Yes, sir.\" Her voice dropped, and had a shy quality. \n\n\"You are my date tonight, Cholan. Taking care of Wit's problem is taking a bit longer than anticipated, but we're nearly done here. We're picking up Sowitwee's father now. When he's safe, we'll head back to the war base. I'll be there as soon as I can.\" \n\n\"I understand. Sowitwee is a good man. Do what you need to do, Commander. I'll wait for you.\" Then she made a kissing sound. \n\n\"I love you, too, Island Girl. See you soon.\" \n\nSowitwee and I passed around the vehicle barrier, followed by Corporal Haytam. I looked around. There were a lot of people out as for many it was still the dinner hour. The street vendors were beginning to close up, but there was still a lot of shoppers and hungry traffic for the indoor cafes and upscale businesses. \n\nIt didn't take us long to locate the shop. Wit opened the door and we went inside. \n\nA bell rang and almost immediately, a salesman appeared, giving me a bow. \"Welcome to Endo's Fine Jewelry. How may I serve you?\" \n\n\"You can take us to the craftsman Daydo Bancorri.\" \n\nThe man stepped back. \"I don't understand. Is there a problem, sir?\" \n\n\"Only if we don't see Daydo. Where is he?\" \n\nHe was unsettled by my glare and brusque manner. \n\nI motioned to Sowitwee and he darted around the glass display cases, heading into the back. Another salesman attempted to block the way. \"Hey, you're not allowed back there--\" \n\nSowitwee roughly shoved him aside and barreled on by. \n\nThe now alarmed salesman said, \"My lord? Whatever the issue is, I'm sure we can work something out--\" \n\n\"I have to be across this city in half an hour. It's already after eighteen hundred hours and I'm going to be late for my dinner. All we want is Daydo Bancorri. This is a military matter. Do not interfere, and you won't be harmed.\" \n\nThe salesman looked at me. \"His debt's paid?\" \n\n\"In full. And he's leaving, right now.\" \n\nWithin a few minutes, Sowitwee came out carrying two satchels, followed by an older version of Wit. \n\nSatisfied, he nodded to me. \"We're ready, Commander. Come along, Papa.\" \n\nThe salesman suddenly cleared his throat. \"Congratulations, Daydo Bancorri. Today you--\" \n\nThe back of my fist hammered his mouth. He flew back, landing hard, his lip split. \n\nHaytam immediately aimed her assault rifle at the other clerk, the click of her safety going off sounding loud. The second salesman squeaked. \n\nI pulled out my Caiman from my hip holster, flipped the safety and charged it, pointing it at the man on the floor. \n\n\"Silence! Attempt to speak unless I ask you something, and I will shoot you dead. If your associate says anything, I will kill you both. Nod if you understand. Good. Take your father outside, Wit.\" \n\nThey scooted by and exited. \n\n\"Who told you to tell him he was free?\" I demanded. \n\n\"Lord Bayloks'mec.\" \n\n\"Which one?\" \n\n\"The son, Garan.\" \n\n\"How long ago?\" \n\n\"Last year.\" \n\nI looked around for the cameras. Spying one, I looked up and spoke. \"Daydo's alive and no longer under your control. If you are smart, you will let everything that happens today and tomorrow go without a response. Ask your father what happens when you fuck with the military!\" \n\nI flipped the safety back on, holstering the pistol as we left. Haytam kept the rifle pointed at them until we were both clear. \n\nMoving quickly along the street, we reached the cruiser without incident. Sowitwee put the bags into the boot and we got in. \n\n\"Back to Chantamoco, Yelts,\" I instructed, then turned to man seated beside me. \"Daydo Bancorri, I'm Lord Kandikan. I am your son's officer. Do you speak Mayan?\" \n\n\"I do, Lord,\" Daydo answered. \n\nSwitching to that language, I said, \"Good. Until we are back at the war base, do not speak to any one but me or your son. We'll explain things later.\" \n\nOn the short trip back, he and Wit chatted, his son showing him the papers. The old man was astonished that he was now free, and Wit did his best to quietly explain the situation. \n\nWe returned to Chantamoco Investments and Holdings. The Ground Security cruisers were already there, as well as an M-type ChoCac. Leading the group was a lieutenant, who after saluting, asked me to explain the situation. \n\n\"These people have had explosive devices implanted in their bodies. I am securing them and taking them to the war base to be disarmed.\" \n\n\"What? If they have explosives on them, you can't take them there! Disarm them here.\" \n\n\"Lieutenant, I don't have the means to do so here. And as long as you don't speak to any of them, there's no danger.\" \n\n\"But, Commander--!\" \n\n\"Lieutenant! Look at your shoulder board. Now look at mine. I have a meeting with Field Commander Brenaka in -- seven hells -- five minutes. Excuse me.\" \n\nI pulled out my phone and dialed the commander in question. He picked up on the second ring. \n\n\"Commander Kandikan?\" \n\n\"Ranji, please. I am embarrassed to say I'm still held up across town, Commander. One man is under arrest and I have five people needing specialized attention. I expect to be there in forty-five minutes, an hour at the latest. I promise I'll explain once I get there. If that's too late for you, I will understand.\" \n\n\"What's the nature of the problem?\" \n\n\"I came to pay off the debt for my aide and his father. The business put a lot of obstacles in my way. That is taken care of, but after they had the money, they attempted to kill the father in my presence rather than let him go free. There's a lot more, and again, I'll explain when I get there.\" \n\nHe paused a moment, then sounded amused. \"All right. My wife and I look forward to hearing your tale. I'm also expecting to hear about Styen's adventure with your brother as well.\" \n\n\"I am in your debt, sir. I will be there as quickly as possible.\" \n\n\"What's that you Air Service people say? Safe flight and safe return, Commander.\" \n\nI blinked, then grinned. I liked him. \"Thank you. Goodbye, sir.\" \n\nTurning my attention back to the lieutenant, I glared at him. \"You will take these civilians to where we're quartered by the airfield. You will transport them -- on my authority -- and we'll see to their care. As for the manager, I want him in the stockade in solitary confinement. He's to have no visitors without permission from me or from a Shift Commander. I'll file my report with your C&amp;C tomorrow morning. Are we clear?\" \n\nUnhappy, he said, \"Yes, Commander.\" \n\nWe locked the doors to the building, front and back, and the lieutenant put a seal on the door with bright yellow tape marked Imperial Ground Security. We loaded up, and with Corporal Karmek leading the way, headed back to Cop\u00e1n War Base. Behind us were the four security vehicles and the Ground Service machine-gun vehicle in the rear. At the Lieutenant's insistence, we drove with lights flashing the entire the way. \n\nIn the fading twilight, vehicles and pedestrians cleared the way for us. Once we hit the highway, we accelerated. \n\nMy phone rang. I looked at it, but there was no ID. \n\n\"Hello?\" \n\nA woman spoke. \"This is Tik\u00fan Travel with an advisory. You will be met at the north gate. The phrase spoken to you will be, 'The winter was hard here.' You will respond with 'The spring should be much better.' End of advisory.\" Then she hung up. \n\nAs the woman had warned me, we were met at the gate by Imperial Security, readily apparent by their black vehicles, black uniforms with silver piping, and their flashing lights. \n\nOnce through the gate, Karmek parked next to them, and the other vehicles pulled alongside. I exited, followed by Corporal Haytam. At my instruction, the others remained inside their vehicles. \n\nA captain approached, with two armed enlisted guards behind him. \"Commander Kandikan? I am Captain Korreem.\" \n\nHe looked at me expectantly. \n\n\"Captain. Pleased to meet you. I'm told the winter was hard here.\" \n\nRelaxing, he answered, \"The spring should be much better. I understand you have people with explosive devices that need to be neutralized.\" \n\n\"I do. I have six here with me. I may have more later.\" \n\nHe raised his eyebrows. \"Oh? How is that?\" \n\n\"I'll ride with you to where we're quartered, and explain on the way. Haytam, there's no room, so you ride with Karmek and the others. Corporal Karmek, please take us back to the rest of our people at Hangar 67.\" \n\n\"Yes, sir.\" \n\nOnce we were moving, I sat next to Korreem, giving him a quick rundown on what I'd discovered thus far, including the discovery of the voice-activated explosive devices, and the events when we retrieved Sowitwee's father. \n\n\"One of the women is Kitsi Oporandsa,\" I said. \"One of my security sergeants has information on the others. They tell me there are more slaves at their owner's compound. Their owners have profited from shattering the innocent and I won't have it. Regardless of their previous circumstances, I plan to see they are all freed.\" \n\nAt the captain's signal, the passenger in front called in for a profile report on the woman. Captain Korreem looked at me. \"How much support will you need on this raid?\" \n\n\"I could use a couple of support vehicles, and an Armadillo to bring back the slaves. I have good people. My people are in Hangar 67 near Terminal Three. We can talk more when I return. Right now, I need to be somewhere else.\" \n\n\"You're leaving?\" \n\n\"I'm meeting Commander Brenaka for a couple of hours at the Officers Club. He's provided assistance to me earlier today, and since I'm already late, I need to make an appearance and explain things and thank him properly.\" \n\n\"Brenaka, the Operations CO? All right. While you're away, we'll be checking into things. We have requested delivery of the neutralizing solutions to remove the nano-devices, and it will take a few hours to get here. I'll meet you by twenty-three hundred hours.\" \n\n* * * * * \n\nPart 18 -- Dinner and a Date \n\n* * * * * \n\nWhen we pulled up at the hangar, Yalcamara approached, full of questions. \n\nI instructed her to debrief the troopers first, but that I was late for my dinner meeting with Commander Brenaka. \"I'll tell you more later. In the meantime, don't speak with the civilians using Queschuan. They have a voice-activated explosive device implanted in their chests. If they hear the trigger words, they'll die, and I will be very upset. Take care of them until I return.\" \n\n\"Yes, sir. I'll see to it.\" She narrowed her gaze at me, then went to carry out my instructions. \n\nOnce the slaves were unloaded, Captain Korreem dismissed the Ground Security people, with the exception of Corporal Karmek. \n\nI needed to leave immediately to pick up Cholan at the Commissary and then head over the Officers Club. \n\n\"Haytam,\" Yalcamara ordered. \"Stay with the commander.\" \n\nKarmec informed me he was past the end of his shift; he would drive me where I needed to go and go off duty. Haytam would follow in the other vehicle so that after the dinner at the Officers Club, we'd have something to ferry everyone back with. \n\n\"Corporal, our first stop is the Commissary to pick up two passengers. Then on to the Officers Club. After that you'll be rid of me.\" \n\nHe just laughed as he drove. I ignored him. \n\nI called Cholan, letting her know we were almost there, and to wait out front. Two minutes later, we arrived. Cholan hopped into the back with me while Mack jumped into the front. We resumed our journey. \n\nThere was some light to see by, and I did my best to take in Cholan's changes. \n\nShe wore a flowing ankle-length red dress with large blue squares; the dress was parted half-way up her left thigh for ease of walking. Her finger nails were painted red with blue tips. Small bright studs glittered from her earlobes. Around her neck was an interlocking necklace of silver beads and tubes with two lower chains festooned with polished red garnet and lapis lazuli. Glossy blue shoes peeked out from beneath the floor-length dress. The combination of red and blue were associated with Huitzilopochtli, and thus the Imperial Air Service. The dress highlighted her feminine figure nicely. \n\nHer own transformation was more profound. Her normally straight brown hair was curled. Two tortoise shell combs held her tresses behind her ears. Lips painted red, her face was covered in white makeup, while the area from just above her eyebrows down to her cheeks was a painted black rectangle three-inches wide. I wasn't sure what I thought about the style, but she was definitely striking and I knew she was eager to impress me. ",
        "Tensing at my examination, she closed her eyes briefly, and with closure of her eyelids, her eyes vanished amidst the black face paint. When they re-opened, the effect emphasized her eyes. I could see her anxiety. This was our first outing with her in civilian clothing. \n\n\"Do I look all right?\" \n\nI took her hand into mine. \"More than all right. You are the image of beauty, Island Girl.\" \n\nBeaming, she relaxed, and in that smile and twinkle in her eyes she revealed her inner beauty. \"I'm so glad! Mack and I worked hard to make me look good for you. Thank you for your help, Mack!\" \n\n\"You did the selections,\" Mack said. \"I was just there for moral support.\" \n\n\"Is this makeup safe for kissing?\" \n\n\"Somewhat?\" Cholan offered. \"I'll try not to get it on your uniform, Commander.\" \n\nLeaning over, I gently kissed her lips. \"We'll do the best we can, then. Have you eaten yet?\" \n\n\"Mack did. I insisted she eat. I waited for you.\" \n\n\"It's really late, Cholan. I wished you would have at least snacked.\" \n\n\"Then we'll both have a good appetite. You didn't have anything after lunch either, did you. Your other women told me I was supposed to take good care of you.\" \n\n\"Then we should both make sure we have a good dinner.\" \n\nKarmek dropped us off at the front entrance to the Officers Club. I thanked him, and he saluted before driving off into the night. We waited for Haytam to park, and I asked Cholan to check on my neckerchief. She straightened it, and then we entered. \n\nInside the dim foyer, there was a lounge to wait for available seats, a coat-check on one side, and across the way a narrow hall leading to a larger lounge for drivers and servants to snack and wait in comfort. \n\nWith a nod from me, Mack and Haytam headed for the lounge. \n\nHolding out my arm, Cholan placed her hand on it, and we walked to the one of the hosts standing at entrance to the main area. I introduced us, and then said that I wanted four meals, two to go and two for my guards in the lounge, producing my card for the costs. \"We're meeting with Commander Brenaka and his wife. I want to cover their meals and drinks as well as our own.\" \n\n\"Certainly, sir.\" He ran the card through the reader, returned it and made notations on his computer screen. \"I'll see to your staff personally. Please follow me, Commander Kandikan.\" \n\nThe place was large, with room for probably a thousand people, and over half the tables were occupied. Winding our way through, we eventually made our way to Commander Brenaka and his wife. \n\nRising as we approached was a tall, he was a clean-shaven man with a short grey hair and about twenty years my senior, dressed in a Ground Service Class A uniform. An older woman, wearing a jaguar-print blouse, black skirt, with a wide, embossed belt remained seated. \n\nBrenaka and I shook hands. Then he bowed to Cholan. \"Always a pleasure to meet a beautiful lady. With whom do I have the pleasure?\" \n\n\"This is my date, Cholan Yakalme,\" I said. \n\nHe gave her a short bow, then kissed the back of her hand. \n\nCholan blushed furiously as she grinned, immensely pleased with the courtesy. \n\nHe moved next to his wife. \"This is my love and helpmeet, Lady Jolee Brenaka.\" \n\nSince she remained seated, I knelt before her, lightly took her hand and kissed the ends of her fingers. Because she was seated and he outranked me, it was appropriate that I went to a lower level than her, paying respect to his House by showing deference to his wife. \n\n\"I had no idea you were so young and handsome,\" she murmured as she slowly took back her hand. \n\nWe took our seats, and a server provided menus. Selections were made, and after drinks were served, I made sure to thank the commander again for his assistance with our transportation issues as well as for his patience with my tardiness. \n\nBy way of explanation, I said, \"One of the reasons for our trip here was to pay off the indenture contract for my aide, Sergeant Sowitwee. He is a good man, and has fought beside me, repeatedly showing his loyalty to me. I paid off the contract, but in the process discovered that the holding company broke several Imperial commerce laws. Today I discovered that they were also using slaves to do Merchant and Guild work in violation of Imperial law. After the contract was completed, my aide and I went to pick up his father, and they tried to murder the man right before my eyes. I warned them about seeking any reprisals, but I doubt it will take. I arrested the man using the slaves and turned them over to Imperial Security. The slaves have made claims they were kidnapped from other parts of the Empire and trafficked here, and Imperial Security is verifying that now.\" \n\nLady Jolee fanned herself. \"That's scandalous. And monstrous!\" \n\nCholan nodded in agreement. \n\nThe commander looked at me in approval. \"That's a good enough reason to be a little late.\" \n\nNext, I set about satisfying his curiosity about Styen. I regaled them with the story of Commander Orchid coming to High Guard to root out corruption and her desire to protect the widows and children who were blameless of criminal misdeeds, and to see them safely removed from the war base. To ensure their safety, Bilan, with his family and some of his men accompanied the refugees, and to protect my brother Bilan and his family, I sent along Styen. \n\n\"When the ship was outside the range of the Imperial Navy patrols, the perfidious captain and his crew changed direction, immediately setting sail for the African slave markets. They imprisoned Bilan and his men, then began separating and molesting the women. Becoming aware something was amiss, the redoubtable Styen eluded capture, and hurried first to ensure the safety of my brother's family, only to see two of the crew enter their cabin. Inside, Bilan's young sons tried to defend their mother, but what could boys four and six do? They knocked the poor boys down, injuring the eldest, and they captured my brother's wife, Rana.\" \n\nThe commander listened grimly. Jolee fanned herself, and Cholan was following along. \n\n\"The scurrilous fiends began ripping off her clothes, when Styen burst in, killing both of the scurrilous fiends in seconds. After seeing to the safety of Rana and the boys, he went in search of where Bilan and his men were imprisoned. Killing another of the crew, Styen freed my brother, and armed, they began retaking the ship. Together, the valiant six took on all thirty-five crew. One of Bilan's men was killed and two more were injured, but they successfully took the ship and returned to their original destination of Tohingo.\" \n\n\"Oh, my!\" Lady Jolee said. \n\n\"I would have loved to have seen them in action. It must have been glorious.\" \n\n\"When I next saw my brother, he thanked me earnestly. He said that without Styen, it was probable the women, children, and servants would have been sold into slavery in Africa. As for my brother and his men, they would have likely ended up prisoners of the Atlanteans or the Aesir. Styen was a hero, and my nephews call him uncle.\" \n\n\"It's a good tale and it sounds just like my old sergeant,\" the commander remarked. \"But I'm curious. You and this captain don't share the same House name, yet you call him brother.\" \n\n\"We're blood brothers. I have pledged myself to protect him and his family, and he has pledged to do the same for me and my family. He's amply repaid that act of trust many times since. During that same visit, we learned there was a plot to kill my father. Both Styen and Bilan helped thwart the assassins. My mother was critically injured, but we managed to get her to medical care in time, and I'm pleased to say that she's fully recovered. Styen took out two of the would-be assassins while Bilan and I took out the third. That may not sound impressive on our part, but the third assassin was a male draconian and he was incredibly strong, and he was shielded from weapons. It was originally planned that Styen come live with me and help protect my family, but instead he's actively protecting my father.\" \n\n\"Blood brothers. Now that's Styen talking. A lot of Warriors don't practice that type of ritual anymore. It's considered old school, and too sentimental. He taught you the Warrior's code of honor, too, I bet. I thought so. A toast, then,\" Brenaka said, lifting his glass. \"To Styen Topangiti, warrior and hero, and the best Fight Master in living memory!\" \n\nThe ladies and I lifted our glasses. \"To Styen!\" \n\nWe finished our drinks to complete the toast. \n\nI paused a moment, waiting for the alcohol to hit. Janetta has called me a pansy-ass when it comes to alcohol, and I think she's right. I think she and Zinja both could out-drink me, and even though Zinja's almost two inches taller than I am, they're both smaller in body. \n\nThe commander saw my reaction, but was too polite to comment. \n\n\"Thank you for the thrilling stories, Lord Kandikan,\" Lady Jolee enthused. \"\"It was almost as if I had been there myself. You have a gift for storytelling.\" \n\n\"He does, indeed,\" the commander commented. \n\n\"Please, call me Ranji.\" \n\n\"Honored, Ranji.\" Brenaka said, \"My given name is Six.\" \n\n\"He's very good, isn't he?\" Cholan chimed in. \"He reads stories to his daughters almost every night he's home. We all gather around and listen to him. He makes voices for the various characters, too. It's better than watching a video.\" \n\nLady Jolee sat up straighter. \"You have children, too? How old are they?\" \n\nSince my return, I kept photos of my girls and the women who shared my life with me in my wallet and on my laptop. However, I resisted the impulse to pull out their pictures. \"Sisi is almost five and Mina is turning three.\" \n\n\"What? How old are you?\" she demanded. \n\n\"Jolee!\" her husband admonished. \n\n\"I know it's rude,\" she said, \"but he looks so young for his rank, and to have children, too? I must know, Ranji. How old are you?\" \n\n\"I'll be twenty-three this year,\" I answered quietly. \n\nThey both looked at me quietly for several seconds. \n\nHis wife spoke first. \"You must have some very powerful friends, Lord Kandikan. I'm an officer's wife. I know that aiguillette on your left shoulder means you are also Priest Caste.\" \n\n\"No! His rank wasn't given to him,\" Cholan objected. \"He's worked hard. Yes, he has friends. Good, loyal people. When he came to High Guard, he found all kinds of stealing going on, and people were getting hurt, too! He also reported it when men tried to get all the women warriors thrown out of the service by means of the Drug Plot!\" \n\n\"Drug Plot?\" Lady Jolee exclaimed. \"What is that? I've never heard of such a thing.\" \n\nThis, of course, led to Cholan explaining how she'd noticed the new so-called birth control drugs looked different and her suspicion about the change. And Janetta's request that he look into the matter for the sake of Cholan and Ixma. \n\nThis in turn led to questions about who these other people were. Which in turn led to a discussion of the neckerchiefs and my desire to protect Ixma, and then the other women of Janetta's flight crew. And Cholan mentioned the Protection Order that was now in effect across all of High Guard War Base. \n\nI think Lady Jolee's reactions mirrored that of my mother. Two-parts scandalized, one-part admiration for a man who would stand up and deliberately act to make protecting women an official policy, one-part disbelief, and one-part feminine curiosity about how one man lived in the same home with five women that he was regularly bedding. \n\nThe commander said nothing, but it was obvious he was amused. \n\nLady Jolee got up for a bathroom break, and invited Cholan along. \n\nWhile they were gone, Brenaka rose, too, saying he wanted to ask my guards a few questions in private. \n\n\"Feel free,\" I told him. \"They're the best gauge of whether what I'm doing is right and worth pursuing.\" \n\nPushing back in my chair a bit, I slouched, feeling full from my large meal. Glancing around the room, I watched men and women enjoying themselves, some even dancing to the band. There was a large dance floor, and they must have been amplified, because even over this distance, I could plainly hear the musicians, yet the music was not so loud that it was hard to hold a conversation. The wooden dance floor and the nearer tables were open to the second floor ceiling and there were balls of glittering lights high above us. \n\nOn a hunch, I stood and moved closer to the dance floor. Sure enough, stepping past the tables and stepping closer to the dance floor, the volume rose considerably. \n\nCurious, I looked around, and then noticed the many support columns had artistically designed base reliefs on them. Approaching one, I ran my fingers over the surface. It wasn't wood but rather a soft, slightly pliant surface, and I realized it was acting as a sound baffle. Not enough to drown out the music, but enough to allow those tables under the lower ceilings more privacy. Looking around, I noticed more of these baffles scattered throughout the dining area. Most of the diners were chatting and in some cases laughing, but their conversations didn't carry very far. \n\nImpressed with the acoustical design, I returned to my seat, nibbling on a piece of cheesy toast. Soon enough, the women returned. I explained that the commander had gone to speak with Mack and Haytam. Curious, Lady Jolee rose and went off in search of her husband. \n\nTaking Cholan's hand in mine, I kissed it. \"Are you having a good time, Island Girl?\" \n\nI couldn't see her blush under the makeup, but I'd seen the look on her face often enough. Cholan didn't blush often, but when she did, her face didn't hide the fact at all. \n\n\"I am,\" she said happily. \"She had a lot of questions, and was concerned about whether we were happy. I assured her all of us love our life with you.\" \n\n\"Would you like to dance with me?\" \n\nHer eyes lit up. \"Oh, could we?\" \n\nI chuckled as we stood. \"As long as you promise not to laugh too hard at my clumsy efforts.\" \n\n\"I would never!\" she protested. \n\n\"I'm teasing.\" Leading her through the tables, we moved onto the dance floor. \n\nMaybe a score of couples were already there on a dance floor wide enough for ten times that number. \n\nZinja knew some folk dances and Calia was versed in some classical styles. Cholan really was a good dancer as well, knowing many East Island dances as well as many styles currently popular among people our own age. She went through the steps simply, mindful to let me keep up, then effortlessly added some extra flourishes. \n\nToo soon that one was over, and we waited. A few moments later, a new song began, and she led, showing me the steps, and I had a great time. It was wonderful, too, seeing the huge smile on her face as she moved and swayed before me, adding in the occasional clap and whirl with the sway of her hips, her eyes inviting me to seek more from her. \n\nAnother faster-paced dance, and we were ready to move back to the table for a short rest when it was immediately apparent this song would be another slow number. Cholan surprised me by producing a broad, thin scarf from a pocket. She shook it out, laid it over my shoulder, then moved in close. Comprehending, I drew her in, and she laid her head against my chest as we swayed slowly together, content with the close contact. \n\nA second slow dance followed, so we remained, moving slowly in place. At the song's end, I lifted her face and as her eyes closed, I kissed her, long and slow. As our lips pulled apart, a single tear escaped. \n\n\"Cholan?\" \n\n\"It's nothing, my lord,\" she sniffed. \"I'm so incredibly happy right now.\" \n\n\"You're right,\" I murmured. \"This is a night to treasure for always. I love you, Cholan Yakalme.\" \n\nHer face nestled once again against my chest, she said, \"I love you, too, my lord. So very much.\" \n\nAfter the song ended, Cholan collected her scarf and we reluctantly made our way back to our table. Both of us yawned as we walked across the floor. It was getting late, and both of us had already had a long day. \n\nThe commander and his wife were at the table, chatting quietly when we arrived. I pulled out the chair for Cholan, and after she sat, helped her scoot in. Then I took my own seat again. \n\nThe commander and his wife exchanged glances before he spoke. \"I'm not sure I know what to say, Ranji. Both of your troopers admit they have been in your service for a very short time. Yet what they told me is astonishing. Besides your bold Protection Order, you've instituted a bus program. Health care for dependents and child care as well as clothing and supplies to help working single parents. Both were quick to tell me you were the best officer they had ever known and were proud to serve in your command. The sergeant said you personally went out of your way to save her son, providing nano-tech medical services and refusing to make her pay for it. Why?\" \n\n\"Why not? The child needed help and it was within my power to do something. Yes, I did it partly because I have children of my own. But it also makes sense. She has years of field experience, and she and the others just like her will work hard for me. Ultimately, however, I was taught that a good officer takes care of everyone in his command. That means I don't abuse them, don't waste their lives on stupid pride or personal glory, and when they are hurt, I look after them. That includes their families, too. Everyone in my unit is belongs to me. They are mine. I am personally responsible for every one of them. In turn, I am their officer, and I ask them to work hard and to apply themselves in the service of the Empire, and yes, I might even ask them to give their lives if need be. \n\n\"What was done to those women warriors was unconscionable -- the act of cowards. I say here and now, those men are traitors to their oath to loyally serve the Empire. Are you aware of the increased number of attacks on the Condors traveling to and from High Guard?\" \n\nHe nodded solemnly. \"It's not something many know about, but there have been discussions of what that portends.\" \n\n\"On the transport that took me back to High Guard less than two months ago, the entire flight crew were poisoned. Pilot, co-pilot, and flight engineer. Dead. We were then hit by an EMP weapon, and when we nearly hit the water, an Atlantean corvette fired upon us. Only the quick actions of Captain Tlacotli saved everyone aboard.\" \n\nHis eyebrows shot up at that, but then he nodded again. \"We are trying to increase security for the Condors. There have been other sabotage attempts we've been able to thwart. We're aware of the impact that has on High Guard. The Naval Service has been escorting more cargo by sea to help compensate. Unfortunately, we can't stop the alien attacks. Their tech is just too far advanced. Things could get rough where you are rather soon, Ranji.\" \n\n\"That's why it's important that we present a united front against our enemies. If there is division in our ranks, we will have a hard time even surviving, much less defeating any attacks that come.\" \n\nCholan's hand slipped into mine, and I gave her a comforting squeeze. Lady Jolee watched us quietly. \n\nHe picked up his drink and swirled the liquid around a bit before drinking down half. \"Your youth had me worried at first. Even with Styen to help guide you, you're still a young man without a lot experience. Some other senior officers will see that lack as critical. But I can see in your eyes that you've already experienced a great deal, and more than many men decades older. You make good cases for all your actions. That bit about an officer and his men. Styen has certainly left his mark on you. Your attitude -- it's old school, but it's a tradition I approve of. About Styen -- he's not married?\" \n\n\"No. I wish he would find himself a good woman to love him. He certainly deserves it.\" \n\n\"Such a man as he should have a dozen sons to carry on his name and his warrior spirit, and teach his impressive fighting skills to. I still have some inquiries I will make to my counterparts at High Guard. In the main, however, I'm satisfied. If you're willing, I'd like to see if you and I can pursue a real friendship. I will warn you, Ranji. There is an insularity here, both in regards to women warriors and to other branches of the military, but it's not insurmountable. You look tired. How long have you been up for?\" ",
        "\"Since zero-four-thirty this morning.\" \n\n\"That makes for a long day,\" he commented. \n\n\"He's up that early almost every day, putting in ten and twelve hour days, rebuilding his command,\" Cholan said. \"He works so hard, and he worries all of us who love him.\" \n\nHe smiled at her words of praise. \"It's late. You should retire for the night. We'll head out after I and my lovely bride have a turn or two on the dance floor. You have my phone number. If I can assist you further during your stay here, please don't hesitate to call. During your next visit, let me know and I promise you and anyone you bring with you will have better accommodations.\" \n\n\"If you ever find yourself coming to High Guard, we'll show you how the Air Service takes care of its guests.\" \n\nHe stood and we shook hands. \n\nCholan and I headed to the entrance, her hand in mine. One of the hosts met us, handing me the two take-out boxes, then he left to collect Mack and Haytam. On their return, both assured me they had enjoyed their meal. We were ready to leave when I spied a photographer. \n\nCalling the young woman over, Cholan and I posed in the lounge for several shots. Standing side by side, facing each other holding hands, one with Cholan seated and me behind her, and a final one with me on one knee, kissing her hand. Mack and Haytam, looking stern, flanked us in a couple of the shots. \n\nLastly, I had the photographer take photos of Mack and Haytam together and then individually. In that, I was inspired by the image of Zinja standing next to a very young Ixma. When their children grew up, they would see a picture of a young and proud warrior woman wearing the uniform of the Air Service. We reviewed the images, and satisfied, I paid for the shots and they were emailed to my account. \n\nThe drive back to the hangar turned out to be longer than expected. \n\nIn the dark, without an AI, we got lost for several minutes. Or rather, we were dis-oriented. \n\nAs my boot LandNav instructor once reminded us, you always know where you are, but not where you are in relation to where you want to go. You yourself are never lost; you just need to be oriented to the right direction. Semantics, but worth a thought. It changes what could be a sense of fear and helplessness into an external problem to be solved. Sometimes all you need to fix a problem is to look at it from a different perspective. \n\nUsing the printed map we eventually found our hangar and the rest of our people. Calia would have said we simply took the scenic route. \n\nAs we pulled up to the hangar and parked, I whispered to Cholan, \"Do you remember what I promised would happen after our dinner at the Officers Club?\" \n\nSitting up straighter, she whispered back, \"Yes, sir.\" \n\n\"I intend to keep my promise, Island Girl.\" \n\nA sharp inhale. Her eyes dilated as she gazed at me. \n\nThen we got out. Mack and Haytam checked in, and went off duty. As Yalcamara and Stimmi were still up, I sought them out. Both gave their approval of Cholan's appearance. I gave them their food, which was still somewhat warm. Delighted, they ate. \n\nWhile they were distracted, I guided Cholan to the office where our bunks were and closed the door. \n\n\"What should I--?\" \n\n\"Panties off and lay down on your cot,\" I instructed as I removed my neckerchief and unbuttoned my shirt. \"You were beautiful tonight. So poised and the perfect dinner companion, and now you're going to get what I promised you. Look at my cock, Cholan. See how hard I am? I am hard for you, Island Girl. I want you and I'm going to have you.\" \n\nQuickly removing her undergarment, she lay back, watching me strip. \n\nWhile I was careful with the weapons, the uniform was tossed onto the desk. Once naked, I grabbed a large body towel one of my duffle bags and moved back to Cholan. Her eyes locked onto my bouncing erection, her mouth slightly open. \n\nLifting her dress to uncover her legs, she lifted up her hips, hiking the dress up while I put the towel under her. Using my fingers, I tested along her lower, darkened lips. Pressing in slightly, I was rewarded by a flowing, wet heat that suddenly escaped, coating her outer lips and ass. Cholan gasped, spreading her legs for me. \n\nUsing my fingers to gently explore her pussy, I said, \"Ah, you're even more lovely when you're aroused. Do you like seeing me hard for you? Do you like knowing where I'm going to put it?\" \n\n\"Yes, sir.\" She licked her lower lip. \n\nLifting up my fingers glistening with her juices, she watched me lick them clean and let out a low moan. \n\n\"What would you like, Island Girl? Shall I eat your pussy first? Lick you until cover my face with your wetness? Or shall I just spread your legs, pin you down and put my cock inside your wet pussy?\" \n\nHer large brown eyes were full of arousal. \"Please put it in me. I've been thinking about what you said before, and I don't want to wait.\" \n\nI moved over her. \"Guide me in.\" \n\nWhile I held her legs up and lowered myself, she aimed me at her steamy center. She moved my tip in a circular motion, coating it with her slick heat, then pushed it into position. As my crown lodged within her swollen wet lips and pushed deeper, I reached out and roughly molded and squeezed a large breast. \n\nShe laid back and moaned, pulling apart her legs, giving me full access to her needy pussy. \n\nStraddling the cot, I shifted and stroked, parting her hot buttery tunnel, delving deeper into her intimate and tight embrace until my balls rested on butt cheeks already wet with her heat. \n\n\"Sweet Jade Goddess,\" she husked, grabbing onto my arms. \"That's really deep! I can't believe you're fucking me in my new dress. This is so hot.\" \n\nBracing myself on the frame of the cot, I stroked my hard shaft firmly inside her heavenly sheath. \n\nWhich made her wince. \n\nThen I cursed inwardly for being a forgetful fool. Being a small woman, Cholan can't take my full length from the front. If I'm on top, I can't pound down into her with her legs spread because the last inch batters against her poor cervix, leaving her bruised and hurting. Missionary position for her means I have to be gentle. \n\n\"I'm sorry about that, Cholan. Are you okay?\" \n\nShe gave me a reassuring smile as her hands stroked along my arms and shoulders. \"I forgot, too. All I wanted was you inside me, taking me hard.\" \n\n\"Here, let me move your legs together.\" As long as I didn't try and bend her in half, the extra padding from her thighs made it so stretching her was a pleasure for both of us. \n\nCholan sighed as I re-entered her, her face showing satisfaction. \n\nMoving slower, with more deliberation, I resumed exploring within her inner sanctum. Sometimes angling right, straight up the center, then angling left, I worked within her folds, varying the strokes for both our enjoyment. Because I was more upright, I was able to use one hand to mold and squeeze her breast while the thumb on my other hand thrummed her little pearl of pleasure. \n\nShe pressed back, meeting me stroke for stroke, her face full of intense concentration. Her muscular sheath enveloping me became wetter. Hotter. \n\nI flexed and pushed balls deep, and the grip of her hands tightened each time. \"I love being inside you. Your pussy is so tight and wet, it's absolutely wonderful.\" \n\nShe gave a lusty laugh. \"You're digging so deep into me, I think you're trying to massage my belly from the inside!\" \n\nI grinned back at her. \"Not hurting you?\" \n\nA rapid shake of her head. \"You're good. Oh, goddess, you're so incredibly good. So careful and loving, yet intense and demanding. I love being your woman.\" \n\n\"All I know is I need to be inside you, Island Girl. I need to ride you hard until you explode with pleasure on my cock before I fill you.\" \n\nHer hands gripped my arms, panting heavier now. \"Maybe all I need... is your lover's gift... deep in my pussy. Take me, sir. Use me for your pleasure... and I will come for you.\" \n\nShe was a beautiful sight. Her hair becoming messy and sweat forming on her brow, and her eyes surrounded in that wide, black band of face paint. Her jewelry glittering in the light, and her fancy dress rudely bunched up at her waist while I plowed into her soft, tender folds, making her crazy while I stirred her honey pot. Cholan's pussy was giving as well as it got, its clasping embrace filled my shaft with sweet, tingling sensations that echoed all the way to my root. I pressed my hard member into her tight wet tunnel again and again, and each time I felt her wet lips kiss my balls. With each thrust into her core, I drew closer to release. \n\nSuddenly anxious to prolong the pleasure, I pulled out. \n\nShe looked up at me in shock. Before she could say anything, I moved back. \"Turn over, Cholan. Ass in the air.\" \n\nHer face awash in lust, she obediently got onto her hands and knees. Her head down, she pulled the dress above her ass, then grabbed onto the cot for support and widened her stance expectantly. \n\nInstead, she sucked air when my arms held her waist and my mouth moved onto her engorged pussy lips, my tongue licking and lapping at her leaking feminine goodness. \n\n\"Oh, blessed Jade goddess!\" she grunted into her pillow. \"Fuck!\" \n\nCholan tensed, her thighs trembling, then she let out a long, low moan as I plundered her entrance. I could tell if I was hitting an especially good spot by how she flexed and released her thighs and butt cheeks. My rewards were her gasps and whimpers of approval accompanied by the intoxicating rivulets escaping her core. Breathing deep the scent of her arousal, I did my best to catch every tangy drop. \n\nBit by bit I coaxed out her hard nubbin from it's protective fold. Intermittent swashes by my tongue through her hot, tender labia made her shiver and cry out. When my face and chest was well and truly wet, I leaned in and flicked her hard bead of ecstasy. Her little point of bliss thickened. Cholan gasped as she heaved and struggled, but I held her in place while I plundered her leaking treasure for all its wealth. \n\nWith a warbling moan, a fresh wave of her juices from her dark and swollen center coated my face. With joy, I watched her fat lips burst open and clench closed, teasing me with intimate glimpses into her pink, glistening tunnel of pleasure. While ecstatic waves rumbled out from her core, I moved up behind her quivering center. A push and I slid in, right to the hilt. Sighing as her tight, slick heat blissfully enveloped my length. \n\nCholan cried out again, and I felt her muscular sheath pulsing along my shaft. \n\n\"So damn full,\" she muttered. \n\nPushing her shoulders down, she crouch down, arching her back. Slowly stroking the length of her tunnel, her pussy responded with another gush of hot, slick juices bathing my cock. Running my hands along her flanks, she shuddered. \n\nThe slow stroking prolonged her bliss. When her breathing began to slow down, I squeezed her butt cheeks, burying my cock until my balls rested against her bared clit. \n\n\"That's it, Cholan.\" I ran my hands up, then dragged my fingernails down her back. She gasped, pressing her sex back against me. \"Fuck for me, my beautiful island girl.\" \n\n\"Oh, gods. Fuck me. Fuck me!\" \n\nHolding onto her shoulders, I nearly pulled out, then changed the angle, doing short jabs into her sheath. The ridge of my fat crown mercilessly worked over that sensitive spot just past her pubic ridge. The effect was immediate. \n\n\"Holy Sweet Jade Goddess!\" Her back tensed as she arched, and more liquid heat leaked from her core, coating both our thighs with her juices. My hips slapped wetly against her butt as I bucked into her quivering pussy. \n\nAnother score strokes and she tensed. \"Oh, my -- Ah!\" \n\nAnother gush of wetness, and her pussy undulated around my cock. I resumed giving her long, full, hard strokes that slammed into her, making her ass ripple. Then, every half dozen thrusts, I added in a pair of smacks to a butt cheek, switching from side to side. \n\n\"You are mine, Cholan,\" I declared. \"Do you hear me? All mine! Do want my seed?\" \n\n\"Oh, gods, yes! Give it to me!\" \n\n\"You are going to be dripping for hours,\" I promised. Grabbing a handful of of her hair, my other hand pressed into her back, holding her immobile while I thundered into her core. \n\nCholan moaned continuously now. The tension at the base of my balls coiled tighter and tighter. \n\n\"Cholan!\" \n\nLetting go her hair, I latched onto both her shoulders, shoving hard into her tight, steamy core. Grinding into her trembling pussy, my cock swelled and shot streams of hot ribbons against her innermost walls. \n\nWith a long wail, she called out my name. \n\nAnd like that, her pussy convulsed again in rippling waves along my entire length, increasing the blissful sensations. While my balls pleasurably twitched, a few more lines of sperm emptied into her. More ecstasy as I felt her cervix pulse as it moved along the sensitive underside of my crown, its little mouth nibbling away, seeking all the fresh hot sperm for her womb it could find. \n\nCholan whimpered as another wave of tremors racked her body. \n\nI was still pressing balls deep inside her, running my hands over her back, savoring our intimate connection while my heart eased off its hammering when the door burst open. \n\n\"Commander! Imperial Security is-- oh, shit, shit, shit! Oh, gods, I'm so, so sorry, sir!\" \n\nThe door slammed shut. \n\n\"Sorry about that,\" I told her, still savoring the feel of our intimate connection. \n\nShe giggled. \"It's all right. It's not like I was trying to be quiet.\" \n\n\"That's true,\" I replied, amused. \"I seem to recall hearing you call out my name.\" \n\n\"I'm sorry, Commander, I--\" \n\n\"Don't! You did exactly what I wanted, Cholan. You are my woman. I love hearing you calling my name when I make you crazy with pleasure.\" \n\n\"Um, can I stretch out? I'm kind of all squished into a ball here.\" \n\n\"Of course.\" Moving slowly, I managed to stay inside while she lifted and straightened out her legs, sliding them down between mine. I settled my hips back onto her thighs, nestled against her rear. \n\n\"Much better,\" she said with a sigh. \"I love coming on you, but this is so intimate. Your cock is still hard and inside me, and I feel your seed, hot and sticky, too.\" \n\nLeaning over, I worked my thumbs along her shoulders, kneading muscles through the expensive fabric and her bra. \n\n\"I love you, Ranji, so very much,\" she murmured. \"First you give me screaming orgasms and then you are so loving and gentle and attentive afterward. Can I keep you forever?\" \n\n\"Always. As long as you want me, I will remain your lover, Cholan. No matter what happens, I will always love you.\" I slipped out, and she made a disappointed noise. I lifted off, and gave her butt a kiss to each reddened cheek. \"Anybody asks, what do you say to them?\" \n\nShe giggled happily. \"My man tells me I fuck just fine.\" \n\nI stood up, stretching. \"That's exactly right, my island girl.\" \n\nShe rolled over and sat up. Her face was flushed and glowing from our exertions. \n\n\"Did you see who it was?\" \n\n\"Nope. I was too busy taking your seed,\" she said with a smirk. \"Besides, I was facing the wrong way. I'm sure all they was your awesomely tight butt and those big balls of yours nestled up against my big ass.\" \n\nI chuckled. \"Your ass is just fine, too.\" \n\nShe did have a great sense of humor -- sometimes wry and witty, and as I was learning, it could be earthy, too. \n\n\"I still have a few more pounds I want to lose before I'm at my optimum weight. I'm going to wash the makeup off and try to preserve what there is of my hair styling. When you get done, I'll be here, enjoying the feel of your lingering essence deep in my pussy. You said I'm going to be dripping for hours?\" \n\n\"I might need to apply more injections,\" I admitted. \"Just to be sure.\" \n\n\"Oh, my. Feel free to check me as often as you like, and when you think I need it, give me more.\" \n\nAs I looked into her face, she bit her lower lip. When I raised my eyebrows, she said, \"This is our time alone together. When I walk down the ramp at High Guard, I want to have to walk with my legs apart because you have worked over my pussy so well. The captain will want you when we return, and then the others will want their turn, too. That's only fair, but while we're here together, I want you in me as much and as long as I can have you, to last me until it's my turn again.\" \n\n\"If I did that, you and I would stay in here all day tomorrow, and I'd have to make my men bring us food so we didn't starve. Truth to tell, Cholan, I'm looking forward to meeting your parents, and to spending more time with you outside of work and home. Let's try to have fun, shall we?\" \n\nShe grinned as she nodded. Tugging me closer, she leaned down, inhaling my flaccid shaft. Using her tongue to swish around the crown, she inhaled me until she had down to my root. I inhaled sharply and she made a pleased noise, using both hands to hold me still. With a final slurp, she let me go, looking up at me happily. \"There! All clean, Commander.\" \n\nTaking her hand, I kissed it. \"I'll be back as soon as I can.\" \n\nDigging through my duffle bag, I found a tee-shirt and a pair of shorts, and once those were on, slipped on my deck shoes. \n\n* * * * * \n\nPart 19 -- Midnight Plans \n\n* * * * * \n\nStepping out the door and closing it behind me, a distraught Mack stood waiting. \"Commander, I'm so, so--\" \n\n\"Not now. Later,\" I said, striding on by. \n\nI headed out into the night, past all the many cots covered with netting revealed by pervasive yet dim lighting. \n\nWith the airfield a short distance away, there was the distant noise of an airport in constant motion, punctuated with the periodic racket of heavy equipment shifting and being loaded or unloaded, and the almost continuous pitched noises of all kinds of fixed-wing and rotary aircraft landing or taking off. The bright lights of the airfield, too, illuminated the night for quite a distance, keeping the whole area in a sort of twilight. \n\nCaptain Korreem and his two shadows waited patiently by his vehicle. Nearby was another Imperial Security vehicle. Queued up next to a portable table were the rescued slaves, waiting for the attention of an Imperial Security medico. The man worked efficiently with an advanced medical scanner, an air syringe, disinfectant, and a box of injection vials. \n\nI glanced up at the night sky. Overhead, only the very brightest of stars could be discerned, their starlight gleaming against the night sky, their light created by burning suns and sent across the cosmos thousands or even tens of thousands of years ago, and only now reaching our world. Or, as my father once commented, passing us and continuing on to yet more worlds beyond us. \n\nPerplexed, I looked again at the line again because of who should be there but wasn't. Where were Sowitwee and his father? Then I pushed the thought aside; I would deal with it later. \n\nYalcamara and a still-yawning Stimmi approached from the adjacent hangar. The Ground Service crews had put some of our loaded vehicles into both of the empty adjacent hangars. I hadn't thought about it, but she and Stimmi were likely sharing one of the offices next door for some privacy of their own. As an officer, she was entitled. \n\n\"Sorry to disturb your rest, Commander,\" Korreem said. \"I thought you'd like to hear what we've found out. Can we go somewhere private to discuss this?\" \n\n\"We've nothing with any semblance of privacy here. Your vehicle?\" \n\nHe shook his head. \"With the AI, we can never be sure.\" \n\n\"Very well then. I trust my people. There's an empty hangar with an office we can use.\" \n\nKorreem frowned. \"It'll have to do, I suppose.\" \n\nYalcamara directed the six of us to the empty office, as Korreem's two shadows followed behind us. One guard was posted outside, and the other went around back to make sure there were no eavesdroppers by the closed window. ",
        "Stimmi pulled the door shut. With no furniture in the room, we stood. \n\nThe Imperial Security captain raised his eyebrows, nodding at Stimmi. \"Shouldn't he be outside, helping keep watch? He's a sergeant.\" \n\n\"Yes, he is. He's also her field partner, and acts as her right hand. Lieutenant Tchanoonka is a Deputy Shift Commander and an integral part of my command. I trust their loyalty completely.\" \n\n\"So be it.\" Korreem pulled out a small cube like I'd seen Melannee use. He pushed a switch and set it onto the floor. The device killed all electronic operations in a ten-foot radius. \n\n\"We've confirmed Kita's story,\" the captain began quietly. \"There are no records of any criminal charges against her or her family. Just over two years ago their entire family disappeared, with the business interests passing to close relatives. At this point, nothing points to the relatives having any involvement in what happened, and interestingly, the business was sold to a rival shortly after, for below market value. \n\n\"Unfortunately, Kita was sedated for a good part of her trip, so even with a light dose of a memory enhancer, we don't know where the rest of her family ended up. I've flagged it, so if any DNA work with a ninety percent or higher match, we might find others. We're still looking into the other stories, but initial findings are that they, too, are in the same situation -- free citizens wrongfully kidnapped and enslaved -- and implanted with killing devices to keep them docile and bound. \n\n\"The guard is a former Ground Service veteran dishonorably discharged and enslaved for drunkenness while on duty. He denies the charge, asserting he was unable to repudiate the allegation or the witnesses his former CO brought against him. Most officers don't need much evidence to punish enlisted, though, and he did speak truthfully under drugs. \n\n\"In any event, the injections will neutralize the nano-bombs, rendering the explosive inert within half an hour. As you suspected, there is a smaller secondary device that sits in the auditory canal. With the instruction set so small, it doesn't have to be very large. In a few days, all traces of the nano-devices should be gone. What are your plans, Commander?\" \n\n\"You have the address where they were living?\" \n\n\"We do,\" he confirmed. \"The home is owned by Garan Bayloks'mec, son of Commander Pren Bayloks'mec, Ground Service, retired. Interestingly, the Commander's daughter re-appeared about eight months ago -- without her husband or their sons. Then, just a few weeks later, she just as mysteriously disappeared.\" \n\nBilan's ex-wife, Teela, I thought. Best not say anything about her. Besides, I have more important things to worry about. \n\nI looked at Yalcamara and Stimmi before answering the captain. \"What I'd like to do is take half my platoon here, break down the doors, stun the guards, kick some ass, and remove every servant and slave on the premises. If they're willing, Kita and one or two of the others could go along and speed things up, identifying who's who.\" \n\nKorreem frowned, and dropped the volume of his voice. \"With these implanted nano-tech devices, this implies there is some sort of arrangement with highly placed people.\" \n\n\"Highly placed people?\" I asked sarcastically. \"These devices have been used exclusively by Imperial Security, and are favored by Minister Supay.\" \n\n\"That's dangerous talk, Commander.\" He waved at the e-jammer on the ground. \"This isn't a secure site. For your own safety, I must caution you about publicly saying such things.\" \n\n\"So noted, Captain.\" I sighed. \"Are you willing to help me free these people?\" \n\n\"It would be most unwise for you to participate, Commander. We've already retrieved and disposed of the camera records from your visit to Chantamoco Investments and Holdings from earlier this evening. They will have camera feeds scattered about the estate. You could never be sure you got them all. You could be identified. If the Minister truly is involved, and with visual evidence to support him, he will take steps to punish you and all those you hold dear. The Minister lives by a policy of scorched earth.\" \n\nShowing my open palms, I said, \"I'm open to suggestions, Captain.\" \n\n\"You've saved these people. Let that be enough. I suggest you take what you have accomplished and return to High Guard.\" \n\n\"Lieutenant Tchanoonka, what do you think?\" \n\nShe scowled briefly. \"Captain Lovyanchiti has given me a mandate, Commander -- to make sure you make it back to High Guard alive and unharmed. Letting it go would be the safer course of action.\" \n\n\"We are Air Security, Lieutenant. Military cops. You and Stimmi were both there when we hashed out our mission statement and our policies. The 602 is now our home. What does our regiment stand for? If there are more kidnapped citizens enslaved in that compound, people that should be free -- what does the military cop, the Warrior officer have to say?\" \n\nShe looked unhappy, then nodded grimly. \"Kick down the door, stun the guards, kick some ass, and take every servant and slave we can find into protective custody. Sir.\" \n\n\"This is something right out of a Commander Orchid show,\" Stimmi commented. \n\nKorreem scoffed. \"Commander Orchid is gone. The Minister made sure of that.\" \n\n\"No, Stimmi, that's good,\" I said. \"To do it, we'd need the help of Imperial Security. And a woman in an Imperial Security uniform with a Commander's grade on her shoulders, and a black scarf to hide her face. Do you have women officers in your command, Captain?\" \n\n\"Only Lieutenant Vertissik. What -- no! It's too dangerous for her. She would be the first person looked at by agents of the Minister, and she would be interrogated under truth drugs.\" \n\n\"Only one woman officer? Excellent. That makes it much simpler. While doors are being knocked down, it would be good if Lieutenant Vertissik was seen where her presence was witnessed and recorded with a date and time stamp embedded. Like at C&amp;C Operations. A standard surprise Imperial Security check, examining deployments and reviewing security footage with plenty of witnesses. A random safety check looking for anything unusual. No, I was thinking of temporarily promoting Lieutenant Tchanoonka.\" \n\nYalcamara paled. \"Excuse me, sir?\" \n\n\"What do you say, Warrior? I want you to lead the charge. You will, of course, really have to act the part of Commander Orchid. Order people around like her, just like she does on those entertainment vids. How many people can you muster for this sortie, Captain?\" \n\n\"Thirty troopers, with six vehicles and a transport.\" Slowly nodding, he looked at Yalcamara. \"Everyone else would have to have helmets with visors to hide their identities.\" Then he turned his attention back to me. \"It's bold, daring, and totally unexpected. Yes, it could work. However, if we're caught, a quick death would be a blessing. I'd rather not end up in Marvak prison.\" \n\nBilan once said that Marvak Prison was the embodiment of the Sixth Hell. I had no reason to doubt him. \n\nHaving survived the Seventh Hell, and encountered the various criminal and traitorous activities of the Minister of Imperial Security thus far, I firmly believed Supay to be a monster incapable of redemption; he was a devil in human form. Whispering the minister's name made too many grown men cold with fear. \n\nStanding down was safe. It was also the act of a coward. We were Warriors, sworn to protect the Empire and its people. \n\n\"We'll also need a uniform for Sergeant Stimmi, including a helmet with a visor. And probably more of your special anti-nano serum.\" \n\n\"We have enough to treat up to a hundred. I'll get the uniforms and I'll make sure Vertissik and some support staff are where they can be seen and recorded just as you suggest. Are you both still chipped?\" \n\n\"Chipped?\" Yalcamara asked, looking at me. \n\nI nodded in confirmation. \"In boot, one of the injections you get in your ass is a chip that tracks your whereabouts, especially when you're on a war base.\" Both of them looked unsettled by the news. \"The tracking is picked up by satellite. I ended up having to dig mine out myself.\" \n\nKorreem glanced at me in surprise before continuing. \"Both of you should get the same shots the slaves are receiving. It should work to dissolve the tracking chip. The medico will remain here until all the people we bring in are processed. In the meantime, I need to prepare for the op. I'll also arrange for temporary quarters until something more permanent is decided. I should be back in about an hour.\" \n\nKorreem turned off his device and pocketed it, then quickly exited, closing the door behind him. \n\n\"What do you think, Yalcamara?\" I asked her quietly. \n\n\"Not much bothers me, Commander, but I have to admit, it was a struggle not to piss myself,\" she whispered. \"Me? Impersonate Commander Orchid? Holy gods! With all due respect, Commander, you are bat-shit crazy with balls of steel! Commander Orchid is a veritable icon of Imperial Security. She's regarded as the Emperor's left hand, working behind the scenes and dispensing justice among the people.\" She shuddered. \"That captain's right. I've heard some pretty gruesome stories about Marvak. If we're caught, a quick death would be a blessing.\" \n\nI looked at them both. \"This is something Orchid would be involved in -- because it's the right thing to do. Remember everything she did for the women of High Guard? How she even got the Emperor to allow for a pregnancy retest two weeks after the first tests were done, instead of instant dishonorable discharge or execution? Our Orchid put her power to work and rescued my daughters because I asked her to. She is a formidable person. Supay has done his best to murder her because she interfered with his criminal activities at High Guard. Commander Orchid raiding the compound will throw them for a loop. We're going to do everything possible to make sure no one finds out about this. That said, there are also no guarantees. This is strictly a volunteer mission, and I have no problem aborting it if you aren't willing to go. Will you do it?\" \n\n\"If you'll tell me how Captain Lovyanchiti was shot.\" \n\nI nodded. \"You've both earned that one. Orchid never was one person, but several. The face was always hidden off camera or by her black scarf. It emphasized her hidden, knowing nature, and it made switching persons easy. The Orchid who helped us out at High Guard -- I will call her our Orchid -- she is an honorable woman and a patriot. The woman I met was preparing for a long-term overseas mission. \n\n\"When she discovered the Drug Plot, she put that aside, came to the war base, and made things right. It surprised the hell out of me when I learned she really was Orchid. When Minister Supay learned what was going on, he immediately ordered the Orchid doing his dirty work elsewhere in the Empire to get to High Guard. As soon as she arrived, Supay's Orchid began to execute people, assuming guilt by simple association, whether it was true or not. She also planned to massacre all the people we saved at the beach. Civilian women and children. Our Orchid was determined to prevent that, and was warned it would put her life in danger. She did it anyway. \n\n\"Supay's Orchid was aided by a draconian agent, an enemy of the Empire who murdered the Imperial Security officer he impersonated. We found the man murdered and stuffed in the boot of his own vehicle. Our Orchid killed both her and the draconian, and then she made arrangements for the refugees to escape.\" \n\nI continued, measuring what I could say that wouldn't reveal too much detail about Melannee. \n\n\"When our Orchid learned about Sisi being kidnapped, she acted immediately. No hesitation. Some died before we could get to them, but we saved sixteen kids as well as Sisi and Mina, who otherwise would have ended up as food for draconians. \n\n\"Enraged over the death of his own murder-loving Orchid, Minister Supay ordered the deaths of all the Imperial Security agents who were on the beach where she died, regardless of which side they had fought on. Supay also arranged to blow up the Condor transport acting as a decoy, killing everyone aboard. Ninety-two civilians as well as over two hundred Imperial Security died because of Minister Supay. What kind of mad man kills hundreds of his own troops in a fit of rage? \n\n\"Naturally, our Orchid had to flee for her life. Using stim tabs, she'd been awake for days without sleep, trying to do as much as possible within the short time she had to act. Exhausted, Orchid finally passed out. Some time during all that, she asked me to be her friend. I agreed. Sowitwee was involved with the switched birth-control drugs. Orchid discovered he was acting under duress because Nariya was being held. She was badly hurt by her captors. He was guilty of helping, yet she spared him and gave him to me to become my aide. \n\n\"Other people loyal to Orchid helped her leave the war base, and I sent Doyya along to take her into hiding and keep watch while Orchid slept. Supay's men found them, probably by following Doyya's tracking chip. Pointedly, another draconian was with Supay's men. They into the motel room, guns blazing. Doyya and Orchid killed the assassins, but both of them were wounded in the process. Orchid fled, dropping Doyya off at the warehouse -- where we found her. I believe that our Orchid is still alive, and out there somewhere. You and Stimmi know the rest.\" \n\nStimmi grinned, gazing at Yalcamara. \"Our Orchid. I like that, Commander.\" \n\nYalcamara rolled her eyes at him. \"All right, Commander. I'll do it.\" \n\n\"Excellent. If anyone asks what you're doing, you are helping Imperial Security. If anyone asks what kind of help, tell them it's an Imperial Security matter. I trust our people, but tongues will wag, and neither of us can afford that kind of bill. Am I clear?\" \n\n\"Yes, sir. Stimmi, what are you grinning at?\" \n\n\"After this is done, please keep the scarf, for later? Not over the whole face, because I love your eyes and covering them up is a crime. You could interrogate me, and... just think of the possibilities, Lieutenant. Wouldn't that be hot?\" \n\n\"That's not funny, Sergeant.\" Yalcamara blushed furiously while he and I laughed. She waited until we were done, and then said, \"We're truly chipped with tracking devices?\" \n\n\"We are. As I said, I removed mine myself. As far as I know, it hasn't been replaced. Captain Tlacotli was furious when she learned about it. I agree with her reasoning. It's a betrayal to ask someone to give their oath of fealty, and then put tracking chips into them. It's like you aren't being trusted to keep your word.\" \n\nShe shook her head. \"No, sir, I disagree. It's not much different than when we carry cameras. Those help establish the official record of events. But these chips don't make sense. If our government can track us by satellite, what's to keep the Atlanteans or the Aesir-Vedans from doing the same? And if they know where we are, they can prepare in advance. Our troops would never have the possibility of surprise, while they could. That's a major tactical disadvantage. No matter how good your strategy is, if the enemy knows exactly where you are and in what numbers, they can apply force where you're weakest and destroy units in detail. Submarines might be okay, but air forces, ground troops, even ships at sea would be visible with satellite tracking. No, Commander, I cannot see High Command knowing about this and approving it.\" \n\n\"Damn, Yalcamara. You make some really good points. Let's talk about this back at High Guard in a staff meeting. You bring it up.\" \n\nYalcamara nodded. \n\nI stretched and rolled my back. \"Well, I'm going to get some sleep.\" \n\nShe looked alarmed. \"You're going to bed?\" \n\n\"How long have you been in the Air Service, Lieutenant?\" \n\n\"Seven years, sir.\" \n\n\"I'd love to go along with you, to help kick down doors and put the fear of the Emperor into some people's lives. This is your op, Lieutenant. You don't need me babysitting you. If you run into trouble, follow Captain Korreem's lead, and if things really go sideways, call me, and we'll go from there.\" \n\nI yawned. \"I have a full day tomorrow. Do you know why I'm going to bed, Lieutenant? Because I have the best Air Security regiment in the Empire, with the best troopers and the best officers, bar none. We both agree this op needs to be done. You are a good Warrior and a damn fine officer. You are an Air Security trooper, Yalcamara, with years of field experience. Doyya tells me she rests easier because you are her Second. Did you know that? It's true. I have every confidence you will complete this sortie with the professionalism, bravery, and honor expected of an Air Security officer.\" \n\n\"I... Thank you, Commander.\" While she blushed under the praise, she looked pleased at the recognition. Stimmi, for his part, beamed at her with love and pride. \n\n\"Make sure you both wear your vests. Take no chances. You put your scarf on as soon as you get it. Leave your grade pins, unit patch, and name patch here with your kit. You, too, Stimmi. Don't shortcut. Put on the trousers, so they can see the grey piping. Switch out your shirt after you leave the base, and switch back again before you return. Yalcamara, you wear that scarf at all times, even among the other Imperial Security enlisted. This op needs to stay between the six of us. Captain Korreem, his two aides, and us three. I take it you two are in the office in the next building over?\" \n\n\"Yes, Commander. We're okay, sir.\" She gave Stimmi a sideways glance. \n\n\"Safe flight and safe return to you both. And good hunting.\" \n\nBoth saluted. \"Yes, sir.\" \n\nI returned it. \n\nStimmi took her hand and turning it over, gently kissed the inside of her wrist. She inhaled deeply, nervously glancing at me as I exited. \n\nAll things considered, I thought their love for each other was awesome. Love makes all the crazy and sometimes awful stuff that happens in our lives bearable. \n\n* * * * * \n\nPart 20 -- New Sides to Cholan \n\n* * * * * \n\nI returned to the wide open doors of the hangar. \n\nBeing as the spring night air was warm and the air humid, keeping the doors open kept the inside from becoming too close with so many people. Braziers had been set up by the entrance, burning sweetgrass pellets to discourage the mosquitos. Packing the light aluminum frames and the sheets of velcro-edged nets were a bother, but they were quite useful in preventing the spread of pathogens like yellow fever and yaws that might be carried by those blood-sucking pests. It also made sleep possible. Few things disturb sleep like a mosquito buzzing close for a bite. While a rarer problem, the nets discouraged other insects like centipedes and scorpions. While vampire bats preferred livestock, they weren't above sneaking a snack from a bared calf or ankle when the occasion arose. \n\nI saw Mack sitting cross-legged on her cot with Cholan facing her. They chatted quietly, both dressed for bed -- Cholan in my tee-shirt and panties, and Mack in her medium blue Air Service tee and matching shorts. \n\nMack looked contrite as I approached. \"May I apologize now, sir? I'm sorry for my earlier lapse. The door was closed and I should have knocked. I have no excuse.\" \n\nI sat down at the end of the cot, next to Cholan. \"It is what it is, Sergeant. As long as there are no repeats.\" \n\nCholan smiled at me. \"I was thanking Mack again for her help earlier in making my night with you so successful. I was beautiful for you, sir, and you did what you promised.\" \n\nMack looked at her questioningly. \n\n\"I don't think--\" \n\nLooking at Mack, she said, quite seriously, \"The commander said I looked so beautiful, he promised to fuck me senseless when we returned from dinner and dancing, and that's exactly what he did.\" \n\nI heard several half-suppressed snorts of laughter from behind me. Apparently there weren't as many sleeping as appeared at first glance. Might have had something to do with Cholan's earlier screams and yells of passion. "
    ],
    "authorname": "TJSkywind",
    "tags": [
        "alt history",
        "atlantis",
        "sci-fi",
        "early earth",
        "military",
        "native",
        "poly"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/starlight-gleaming-ch-19"
}