{
    "title": "Raw Ch. 12",
    "pages": [
        "It has been an amazing journey from the first stand-alone short story to what has blossomed into eleven more chapters of adventures. Never had I thought it would come this far for Becca. Thank you, to all of my readers who have been loyal along the way, encouraging me to continue when I was ready to give up for fear that the story would become clich\u00e9 in the realm of BDSM. I hope that the ending has done the characters and the series justice.\n\nI would like to extend an immense thank you to EGRI for your impromptu and continuing advice and support on the series. I treasure your friendship, although it's just through cyberspace. I can't thank you enough.\n\nSSW\n\n--------------\n\nNothing but the hand of God allowed me to hold in my anger as Malcolm guided me across the floor of Master Jesse Pratt's dungeon-slash-basement.\n\n\"Lady Becca, how good of you to join us.\" Jesse stepped down from the stage and took both of my hands in his. He raised them to his lips. \"I hope you slept well.\"\n\nHe squeezed my hands tighter as he lifted his eyes to mine. For the briefest moment, he held me in his trance. I couldn't breathe. Or think. And I couldn't stop the shivers that raced up my back when the tip of his tongue darted out to lick my skin.\n\nThe corner of his mouth turned up as he lowered our hands, although he did not release his hold. God, how the man repulsed me. And yet, he still managed to spellbind me at the same time.\n\n\"Bonjour, Beeca! Veuillez m'excuser. Je suis assez indispos\u00e9.\"\n\nAs much as I hated to say it, I had never been more thankful in my life for Juliet. I don't know what the hell she'd said, but it distracted Jesse enough that I could pull my hands free. I sidled closer to Malcolm, mad as I was at him, too.\n\nThat's when I noticed\u2014with a bit of relief\u2014that Juliet was wearing nude underwear, much like she had the night of the dungeon party I'd been to in December. She was grinning at us. Or at Malcolm at least.\n\n\"Lady Juliet asks us to please excuse her for not coming to greet you,\" Jesse said, although I hadn't requested a translation. \"Come, I have been showing Master Malcolm the basics of suspension. He has informed me that you were quite interested in the demonstration at the convention, no?\"\n\n\"We agreed to look into it,\" Malcolm said, rubbing my back lightly. \"If Becca decides\u2014\"\n\nJesse's hard glance silenced my fianc\u00e9, much to my amazement. Before Malcolm could react, Jesse waved his hand at Juliet and the suspension rig. \"Let us not delay. While Lady Juliet is a good sport, I prefer not to leave her hanging for too much longer.\"\n\nI clenched my teeth as Jesse once again acted as if nothing had happened between us a few minutes prior, not to mention a few months ago. I wanted to smack him. To put him in his place once and for all. But I knew it was better not to. Not here like this. Not before I could confront Malcolm. So I bit my cheek and concentrated on breathing normally.\n\nFor the next twenty minutes, I managed to stand without crossing my arms or saying a word while Jesse showed me the finer points of rope bondage and suspension. Or rather, he noted how he and Malcolm had previously bound Juliet, and demonstrated the use of several different positions. The latter was done without any decorum for us ladies present. Then again, I wouldn't necessarily qualify Juliet as a lady, unless it was a lady of the night.\n\nJuliet startled me by speaking up at one point, offering a few words of advice\u2014in her vampirish accent\u2014on how to control breathing and to think away any pain. I'd actually forgotten she was there, my focus primarily on keeping as far away from Jesse as possible while still trying to appear that I was listening and taking mental notes. I'd jumped and shrieked which earned me a glare from Jesse and raised eyebrows from Malcolm.\n\nWhen Jesse deemed the lesson complete, I forced back the desire to scowl as I watched both him and Malcolm lower Juliet from the scaffolding and then release her from the ropes. Juliet's eyes never left my fianc\u00e9, and she licked her lips at least twice when his hands brushed against her while untying a section of rope. If I'd ever seen a cat that was eyeing its prey...\n\nJesse retrieved a silk robe from a table on the stage and covered Juliet, loosely concealing the multitude of red marks circling her body. He walked her to the edge of the stage where Malcolm was standing instead of leading her to the aftercare room. It puzzled me, especially after how long I'd witnessed her being suspended. Then again, maybe Jesse didn't believe that slaves always required aftercare. Maybe the room was more for show. As was this whole morning's display, I deduced.\n\n\"Thank you, Juliet, for your assistance,\" Malcolm said, offering her a hand as she stepped down from the stage. \"It was very informative.\"\n\n\"Vous \u00eates toujours bienvenue, mon ch\u00e9ri.\" She was smiling widely as she opened the sides of the robe, revealing her practically naked body to him before she rewrapped the material around her and tied it off with the attached sash. \"Alwayz weelcome, mon ch\u00e9ri.\"\n\nMalcolm's cheeks colored slightly. I felt like I was going to gag.\n\nJesse offered me his hand to assist me as well, but I pursed my lips and walked past him.\n\nHe was apparently undaunted by my act of defiance as he pressed his hand to my back in an attempt to support me should I need it on my descent down the two meager steps. \"Please, stay for lunch with us. We can make our plans for Paris. We have much to talk about.\"\n\nI scooted away from him and cleared my throat. Malcolm's eyes darted over to me. His forehead creased in question when I gave him a minute shake of the head.\n\n\"Thank you for the invitation,\" Malcolm said slowly, \"but, uh, I think we should be on our way.\"\n\nI could sense Jesse's lingering gaze on me, although I could not see him. Why did it feel like I'd just walked through a spider's web? And I needed a scalding hot shower?\n\nAfter a moment, Jesse said, \"As you wish. Please, after you.\"\n\nMalcolm led the way upstairs, and I managed to get in between him and Juliet. When were all on the ground level, I spied my purse on the kitchen counter. I snatched it up, resisting the desire to open it and sift through the contents. Jesse had just better pray that nothing was missing.\n\nWhile we waited for a cab to respond to our phone call, I stared out the window at the silent street. I listened to the three of them exchange goodbyes behind me in both English and French. There were at least two more reminders to let Jesse and Juliet know when we could talk about Paris.\n\nI closed my eyes briefly. Would this day never end?\n\nWhen I finally spied the cab pulling up outside, I flung open the front door with a little too much strength. It banged against the wall of the foyer, but I didn't care. I was already off the porch and halfway down the sidewalk, my heels clicking against the large paving stones in a sharp staccato, when I heard the door close. Another set of shoes scuffled down the steps and hurried after me.\n\n\"Becca, wait!\"\n\nI spun around and pointed my index finger at Malcolm. \"Not. One. Fucking. Word.\"\n\nHe stopped short, blinking at me.\n\n\"Listen to me, and listen to me good. You would be wise to not speak until we get home.\"\n\nHe closed his mouth and gave me a slight nod before I continued on the path to the getaway vehicle.\n\nI refused to let him help me into the backseat. I stared out the window the entire ride, my breathing fast and sharp as I crossed my arms, my thoughts a swirling frenzy in my head. I hoped he was worried.\n\nI opened the door and jumped out as soon as the car stopped at the curb by my brownstone, leaving him to pay the fare. I heard the front door shut behind me as I continued on a path upstairs. If I was going to let him have it, I wasn't going to be half-naked so he'd have easy access to use his amazing cock to distract me from my thoughts. There would be no fucking on the hallway floor today. That would only deaden the significance of this, our first major fight.\n\nBecause there would be a fight. That I was certain. How we would both come out of it afterwards...\n\nHe did not follow me. I half listened to hear if the door opened and shut again\u2014signaling he was escaping before whatever storm that was brewing erupted. The other half of my brain wondered what he was thinking as I layered on panties, bra, socks, jeans, and a sweater.\n\nIt occurred to me that I was not acting rationally. I should be talking out the problem with the man I had agreed to marry. This was not even close to the cool and calculated person I used to be in times of stress. Funny how I'd used those same two words to describe Brian Hughes at one time. And he was a maniac. I let out a soft snort. Maybe Malcolm should have committed me when he'd had the chance.\n\nI was determined not to go easy on him. He needed to know what was wrong and why. It would do neither of us any good if I were humble. I had to lock up the submissive for the time being.\n\nFeeling much more assertive\u2014as if covering the whole of my body was the source of my courage, opposed to the way I felt I bared my soul to him whenever I left skin showing\u2014I walked out of the bedroom and went in search of Malcolm. I found him in the living room staring out at the backyard through the open patio door. He had his hands in his front pockets from the way his elbows stuck out at his sides. The early spring breeze tousled his hair.\n\nThe vision before me reminded me of being at the beach. Of how relaxed he always looked. In his element. I wanted to wrap my arms around him. To press my cheek\u2014\n\nNo. I couldn't think like that. It would make me soft.\n\nI fisted my hands at my side and proceeded toward him. I was halfway across the room when a board creaked under my feet. He turned.\n\nAll of the tension in me\u2014every angry word\u2014started to slip away with one look of his glossy eyes. His wet cheeks. The trembling of his mouth.\n\nI stumbled back and bumped into the arm of the couch, a cry catching at the back of my throat. My chest hurt as his gaze pierced right through me.\n\n\"I'm sorry.\"\n\nI blinked several times. His voice had been soft, but I'd still heard it. I just didn't believe it. \"What?\"\n\n\"I'm sorry.\" He took a step toward me. \"I don't want to fight with you.\"\n\nI sunk down to the cushion as he stared at me. I saw his shoulders rise and fall. He took another step forward. I scooted back until I could go no further.\n\n\"Tell me how to fix it.\" His words came out as a sob. He didn't try to wipe the tears from his face. \"I love you, Becca. Please, talk to me.\"\n\nOf all the things I'd wanted to say to him, the two words that came out were, \"It's hard.\"\n\n\"I know.\"\n\nI cowered in the corner of the couch now, my knees pulled up to my chin. \"He's your friend.\"\n\nThat made him pause. His forehead creased for a moment, his eyes moving erratically from side to side. Suddenly they locked on mine. \"Jesse?\"\n\nI nodded.\n\n\"What do you mean?\" His jaw twitched. His hands started to fist. Then he relaxed his fingers and shook them out.\n\nIt had been my intention to spout off at Malcolm the moment I had noticed Jesse leering at me from the bedroom door this morning. I had not intentionally gone to that man's house. I had not put myself in that position.\n\nBut apparently, my conscious decided to kick in right then. Reminding me that this wasn't Malcolm's fault. It was mine for keeping my mouth shut for so long. I had no right to be angry with him for not knowing the truth.\n\nHe seemed to be steeling himself for whatever would come next through deep breaths. In through his nose, out through his mouth. He'd used the same method to calm me down on many occasions. But right now, he sounded a bit like a bull impatiently waiting to charge. It did not lessen the apprehension that had settled within me.\n\nMy lower lip trembled. Where had my bravado gone? What had happened to not being meek?\n\nFinally, he said, \"Okay. Tell me as best as you can.\" His voice was low and even. A controlled anger, but probably just barely.\n\nI closed my eyes. I wanted to redo that night in December. To have walked out of that house after the first insult. I should have gone right to Malcolm and told him what a self-righteous prick his so-called longtime friend really was. To hell with the consequences.\n\n\"Becca? Please?\"\n\nMy eyelids fluttered open. He was still standing over me. I could only stare at his abdomen as it moved with his labored breathing against his dress shirt. He had started to crumble before, but he had returned to be an imposing brick wall of power. It was a characteristic I normally revered but suddenly feared.\n\n\"You will tell me. Now!\"\n\nI flinched and lowered my eyes to his knees at the sudden sternness in his voice. \"It was at his party last winter. The one Daphne took me to.\" I cringed as I realized I made it sound as if there were another party of Jesse's I'd been to. Way to go, Becca, for making this more difficult than necessary.\n\nThe couch shifted slightly as Malcolm sat down. He did not pick up\u2014or at least comment aloud\u2014on my faux pas. In fact, he was completely silent, which I took as a cue to keep going.\n\n\"It was after the show.\" I picked at a rip in the fabric of the cushion I was sitting on. \"He wanted to show me the aftercare room. We were just talking. But he offended me. Told me I wasn't truly a submissive. Insinuated that it was a result of poor instruction, which implied that you were a poor Dominant. Honestly, I don't think any category exists to him but Master and slave. If you don't fit into those two roles, you have no business claiming that you're kinky. Yet, he kept saying I was beautiful and he would love to train me.\"\n\nMalcolm made some kind of noise between a grunt and a growl.\n\nI closed my eyes, reliving the guilt all over again. \"He made me feel trapped. Confused. He was insulting me and complimenting me in the same breath. I couldn't move. I couldn't speak.\" A lump formed in my throat. I thought that I would feel relief for finally getting this off my chest. I wished there was something I could do to dispel the memories of what had gone down that dreadful night. Talking about it now definitely did not help.\n\n\"Continue.\"\n\nWith a gulp, I obeyed Malcolm. \"Daphne came looking for me. One minute, Jesse was pinning me against the side of the couch, telling me he wanted to show me how to get in touch with my inner submissive. The next, he was across the room acting as if nothing had happened. Then we left.\"\n\n\"I see.\"\n\nI turned to face Malcolm, clutching my knees closer to my chest. \"No, you don't. I've gone over that night more times than I can count. Did I say something\u2014do something\u2014to lead him on? I didn't tell him to stop. But I didn't say yes, either.\"\n\nHe nodded his head. He was staring at the middle couch cushion, his hands clasped in his lap.\n\nA little bit of my heart broke right then. He wouldn't look at me. He wouldn't comfort me. I'd never felt so ashamed. So alone.\n\n\"We went to Canada and I learned who Juliet really was to you. That Jesse had given up his tickets for us to attend the convention. I thought I'd judged him too harshly. Maybe it was his way of apologizing for being an ass.\"\n\n\"Hmm.\"\n\n\"I couldn't find the right time to tell you that Juliet was with Jesse now. I wondered if it even mattered.\"\n\n\"Then they both showed up just before the blizzard.\"\n\nI nodded, even if he couldn't see me.\n\n\"Did he...?\"\n\nI rested my forehead on my knees. \"He tried. When you were with Juliet. I had wanted to know what you were talking about. Why I wasn't included. He wouldn't let me see you. He suggested we go play in our dungeon. So I locked myself in my office to get away from him. When they were gone again, I buried it all. I'm sorry.\" The last two words came out as a sob. How had this turned upside down so quickly? I was supposed to be mad at him. He had been the one apologizing before I'd even said a word. Now, I was the one in tears.\n\nHis sigh was shaky. When I raised my head, he was looking across the room. \"I'm glad you told me.\"\n\nThere was an unspoken \"finally\" in the air. Or maybe that was just what I was thinking. I worried my bottom lip. After several minutes of silence, I knew I couldn't let the topic just drop.\n\n\"What happened last night?\" I barely heard the words coming out of my mouth.\n\nHe laugh sounded feeble as he shook his head. \"I got a text that they were back for a short trip and wanted to know when we could hook up. I told them we were already in the city. Jesse said to stop by after we left the club. I didn't think you'd mind. You were almost out by the time we got there. He offered the use one of his guest rooms so you could rest and not be disturbed. The three of us stayed up and talked most of the night.\"\n\nI didn't really want to continue, but I needed to know. \"And this morning?\"\n\nHe ran his hand through his hair and sighed. He seemed to be thinking about something, but finally, he said, \"Jesse suggested we test out the suspension grid he made. You were still sleeping, so I figured a little practice wouldn't hurt in case we decided to get one for ourselves.\"\n\n\"Did you check on me at all?\"\n\nHis head whipped around to face me. \"Of course I did! Twice last night. You looked so peaceful. I didn't think it was necessary to wake you to take you across town just so you could go back to sleep.\"\n\nI waited a five-count before I asked my next question, my voice low. \"Did you take off my dress?\"\n\n\"No, I did not.\" His eyes narrowed with each slowly spoken word. \"You were still wearing it around two this morning.\"\n\nI swallowed heavily. \"Please tell me that he did not take off my dress and pretend to have walked in on me just as I woke up.\"\n\nHis jaw clenched as he sat upright. \"If he\u2014\"\n\nMy stomach churned. \"I don't think he did anything but look. But it was enough to creep me out.\"\n\nMalcolm suddenly pulled me into his embrace.\n\nI buried my face against his chest, fighting down the bile at the back of my throat.\n\nHe kept repeating, \"I'm so sorry.\"\n\n\"It's my fault that I didn't tell you sooner.\" I hugged him tighter. \"If I'd only\u2014\"\n\n\"Stop it. He's the only one to blame.\"\n\nI sat up a little. \"But if you'd known...\"\n\n\"Shh. It's over now.\" He held my head to his shoulder and rocked me.\n\nAfter several minutes, I mumbled, \"I guess the trip to Paris is out, huh?\"\n\nHe groaned. \"You were seriously considering that?\"\n\n\"Hell no. At least not with them in tow.\"\n\nWe sat there, not speaking, just breathing. Just...being. I had adjusted to sitting with my back against his chest, my head resting on his arm that he had looped around my shoulders and neck. Outside, I could hear life going on around us: traffic passing; horns honking; birds tweeting; a dog barking; a plane roaring overhead. All oblivious to the troubles unraveling in my living room.\n\nI was trying to formulate a question so that it didn't sound accusatory when he broke the silence first.\n\n\"He lied to me.\"\n\nI tilted my head back to look up at him. \"Jesse?\"\n\n\"Hmm.\" Malcolm pressed his lips to my head and sighed. It was another long minute before he continued. \"He lied several times. And I believed him.\"\n\nI nodded even though I was lost.\n\nHis other arm wrapped around me, and his hold tightened almost painfully for a moment. \"I was so stupid. I know him. He's a manipulator. I just never thought he'd do it to me.\"\n\nHad he considered that we were talking about his \"good friend\" who had knowingly hooked up with the woman who'd attempted to sexually assaulted Malcolm years ago? The same woman the \"good friend\" had diverted Malcolm's attention from to introduce him to the lifestyle? Or was that what he was referring to?\n\nI bit my tongue when I wondered how much silence I should allow before I broached my next question. I knew it was selfish of me. I'd dealt Malcolm a devastating blow. He was hurting.",
        "I turned sideways in our embrace. Did the fact that my question was selfish mean I shouldn't ask it? Look what keeping silent about the ordeal with Jesse had caused.\n\nHis hands threaded into my hair. \"That day they showed up in February, he said you wanted to leave us alone to catch up. I didn't think anything of it until I found you locked in your office. I knew something was wrong, but I couldn't put my finger on it. You seemed distant but still engaged at dinner, so I wasn't concerned. Maybe it was the weather. I didn't think it had anything to do with their visit.\"\n\nHe'd opened the door I was afraid to turn the handle on. So I walked right through. \"What did you and Juliet talk about?\"\n\n\"Paris mostly. Where we'd been since. It was cathartic. She said we'd come so far, and yet not far at all. It all reminded me of what my life used to be like. The good. The bad. Lots of memories.\"\n\n\"You miss her.\"\n\nMalcolm sat up suddenly and held me away from him with both hands, his eyes boring into mine. \"What did you just say?\"\n\nOh. My. God. \"I-I don't know...\"\n\n\"Yes, you do.\"\n\nI shook my head. \"It's not what I meant to say.\"\n\n\"But you were thinking it.\" His lips pressed together as he studied me. \"There's something else, isn't there? Just spit it out.\"\n\nI hesitated. I would have made up something if I thought I could get away with it. But his dark eyes held me captive, and his grip tightened on my arms. If I lied...\n\n\"Say it, Becca. I want to hear it. And don't lie to me.\"\n\nI lifted my chin, but it shook as I mumbled, \"Did Juliet try to seduce you?\"\n\nHis grip loosened, and he backed off a bit. His forehead creased as it did when he was trying to figure something out in his head. When he spoke again, his voice was so soft I almost didn't hear him. \"Why in the world would you think that?\"\n\n\"Because you said she's done it the past. You met her at a stripclub. You spent an entire summer with her in France. She's a very beautiful woman. And she's very kinky. It's under\u2014\"\n\n\"Seriously, Becca? Do you think I have no restraint?\" He was up and pacing now. \"Do you have no trust in me?\"\n\n\"I didn't ask if you had sex.\" I stood as well, rubbing my hands up and down my arms where his fingers had been just seconds before. As strange as it sounded, I actually missed them. His touch kept me grounded. Away from him, I began to think irrationally again in stressful situations like this one. He had that much effect on me. \"I asked if she tried to seduce you. But now I'm wondering about\u2014\"\n\n\"Is that what all of this has been leading up to? You're jealous of a woman who was never my partner, much less a girlfriend? Was there ever any issue with Jesse? Maybe that was all a fa\u00e7ade so you could throw Juliet in my face.\"\n\nMy lower lip trembled. I would not back down this time. It was too important. \"You haven't answered my question.\"\n\nHe scoffed. \"I didn't think it merited an answer.\"\n\nHis non-answer unsettled me even further. We were only standing three feet apart, but he could have been on the phone in Wheaton for as far away from him as I felt inside at that moment. \"Is it so far fetched to think that you couldn't be wiled by her wicked ways?\"\n\n\"What in the hell are you talking about?\"\n\nI stood up straighter. \"I see how she looks at you. Talks to you. If I didn't know better, I'd have thought Jesse taught her to be that way. She's just as manipulative as he is. Maybe more. He's done it to me. Surely she could do it to you. Or are you impervious because you're a Dom?\"\n\n\"You are walking on very thin ice, sweetheart.\"\n\n\"What are you going to do? Spank me?\" I turned around and put my hands on the arm of the couch, thrusting my ass out. I glared at him over my shoulder. \"Go ahead. Punish me for believing what I've seen with my own two eyes.\"\n\nHe took a step toward me, his hands on his hips. \"And what was that?\"\n\nI faced him again and held my ground. Every fiber of my being said I'd gone too far. That I should have shut up when I'd had the chance. Now, it was too late. I couldn't just let it go that Juliet may have tried to seduce my fianc\u00e9...and possibly succeeded.\n\n\"I saw you touching her naked body just this morning.\"\n\n\"She was wearing underwear!\" Another step closer to me.\n\nMy legs quivered. \"Oh, that makes it alright?\"\n\n\"I had to touch her to bind her and hook her to the bars.\" He suddenly turned and walked in the other direction, to my relief.\n\nMy breath came out shaky. \"Because you couldn't have used me to practice?\"\n\n\"You were sleeping!\"\n\n\"Yes, while your mentor could have been molesting me!\"\n\n\"I didn't know that!\" He ran his hands back through his hair as he stared out the patio door again. \"I can't believe this is happening.\"\n\n\"You have a history. All three of you. What would you expect someone in my position to think?\"\n\nHe turned abruptly. \"I'd expect you to trust me that it's exactly what you said. History. There's nothing there now.\"\n\n\"Apparently not according to them. They aren't ready to let you go. Especially her. Are you that blind? Especially after everything I've told you?\"\n\nHe was in front of me in three large strides. His breath heated my cheeks. A muscle twitched in his jaw. \"You need to stop this, right now.\"\n\nI retreated to my corner of the couch, but the words had already formed and were spilling out of my mouth. \"Maybe Jesse was right. Maybe I can't submit properly because you can't dominate!\"\n\n\"ENOUGH!\"\n\nHis yell shook me to my core. I should obey him. But a nagging feeling told me that I wasn't the only one who had a secret. And I had to know. \"I'm going to ask you one last time.\"\n\nHis Adam's apple slowly bobbed as he swallowed and backed away. He stopped at the chair. Then he lowered his head as if he knew...as if he was waiting for the final blow.\n\n\"Did she seduce you?\" The words were a low growl through clenched teeth. I leaned forward, renewed tension spreading throughout my body.\n\nHe gripped the back of the armchair. I wished I could see his face.\n\nWhen he didn't answer, I slowly got to my feet. \"Maybe in the den. Maybe in the dungeon. His or ours, doesn't matter. Did she seduce you? Did. You. Fuck. Her?\"\n\nHe lifted his eyes to mine. I saw despair and defiance fighting for control. \"She sucked my cock.\"\n\n\"Get. Out.\"\n\n\"Becca, please. I heard you out...\"\n\n\"GET OUT NOW!\" I realized my neighbors could probably hear my scream, but I was beyond caring.\n\nHe moved past me, shooting me the angriest look I'd ever seen. I heard the scrape and jingle as he retrieved his keys from the table in the front hall. The front door slammed a moment later.\n\nI stood in the living room, my hands fisted at my sides. Just like I'd entered almost an hour ago. But now, my chest was heaving. My head was throbbing.\n\nI collapsed to the floor, clutching my chest. What had I done?\n\n###\n\nWhen I pried my eyes open, my cheeks were stiff from dried tears. The room was semi-dark, and I could hear the sounds of bugs chirping outside my bedroom window. I shivered from the evening breeze creeping in and pulled the blanket tighter up under my chin.\n\nI remembered crying until I felt completely empty inside. My back had ached from lying on the hardwood floor of my living room for so long. I didn't remember coming upstairs. But I must have.\n\nI played the events of the morning all over again in my mind. Waking up at Jesse's house with no clothes on. Seeing Malcolm touching Juliet. Fighting with him. Finding out she'd given him a blowjob.\n\nThe last one triggered a fresh round of tears to fill my eyes. I told myself I didn't care about the when or why. That there was no acceptable explanation. But I did care.\n\nWhen I eventually rolled over to check the clock, it read that it was ten till seven. Shit. I'd slept most of the day away. I sat up and looked around, realizing I was alone.\n\nMy heart broke a little more knowing that Malcolm wasn't there. I knew he wasn't going to be downstairs waiting for me, either. Although, part of me did hope.\n\nMy stomach rumbled, and it occurred to me that I hadn't eaten anything in almost twenty-four hours. I pushed aside my thoughts of food and wondered how we were going to repair the damage we'd both caused. Was it even possible?\n\nJust as I feared, it was dark downstairs as well. And a little cold. I wandered into the living room and shivered as I saw the patio door was still open. The evening breeze blew in through the screen door. I imagined Malcolm standing there earlier today with his hair tousled about his head. I closed my eyes and inhaled. My nose twitched at the scent of rain in the air.\n\nI stepped outside, grateful that I was still wearing my sweater. Despite a pending shower, the sky was a brilliant orange and red to the west as the sun set. As I faced the east again, the sky faded into shades of blue until it was almost black over the horizon. It was beautiful.\n\nI wiped the back of my hand at my eyes, wishing Malcolm were here to experience it with me. It was one of our favorite things to do in the evening out on the coast. We tended to forget to watch the sunset when we were in Illinois. Too many other things to distract us. But out there, we could watch both sunrises and sunsets from strategic places in the house or on the beach, and all of our troubles stayed back in Chicago. What I wouldn't give to be back out at the beach house. To be away from all of this turmoil.\n\nI knew then I had to hear Malcolm out, regardless of what came of it. I owed him that. I loved him. I couldn't just walk away having not given him a chance to explain.\n\nI was searching for my purse to check my phone for missed calls or messages when the doorbell rang.\n\n\"Oh, thank God. Did you forget your house key\u2014\" I stared dumbfounded at the police officer on the stoop as I opened the front door.\n\n\"Ms. Rockland?\" The tall man tipped his hat at me when I managed a nod. \"I'm Officer Marx.\"\n\nThe flashing red and blue lights over his shoulder drew my attention. Another officer stood by the open passenger door. I heard no sirens. Fuck. I gripped the door handle so hard my hands were burning.\n\n\"Ma'am?\" Officer Marx scratched his forehead for a moment. \"There was a car accident. Mr. McClaren had you as his emergency contact. We tried to call, but there was no answer. We've been trying to locate you in Wheaton. Then we found your Chicago address. If you could\u2014\"\n\n\"M-Malcolm? What\u2014\" I tried to lick my lips, but it didn't help my sudden cottonmouth. Even my eyes had gone dry.\n\n\"Ma'am, I think you should come with us,\" the other officer said, joining Officer Marx. He was shorter, heavier, and his nametag said 'Trenton.'\n\nMy head was buzzing now. I saw neighbors with unknown names and faces slowly filing out into the street or peaking out of their doors and windows to gawk. It was like watching a movie on mute as both officers led me down the front steps to the waiting patrol car.\n\nIt started raining as we drove through the city. All of the buildings were a swirl of flashing colors and lights against the night sky. But that was partially due to the tears filling my eyes again. They trickled down my cheeks as I blinked. I cursed myself that my last words to Malcolm had been in anger.\n\nWhen the car stopped outside of the emergency room at the University of Chicago Medical Center, Officer Marx helped me from the backseat. I felt the cold sting of the rain as it blew against my face despite the overhang of the driveway. Inside, the lights were too bright. The noises of chatter and calls on the intercom suddenly broke through my haze, and I squeezed my eyes shut as if it would help.\n\nThe officers led me past the receptionist counter, through a door, and to a bay of elevators. I'd never been to the morgue. I steeled myself to not faint when I saw Malcolm. What would he look like? Would I be able to recognize him?\n\nWhen the elevator doors parted, Officer Marx held my arm as we walked out. I balked at the smell of antiseptic and the underlying stench of sickness all hospitals had. I felt numb but slightly relieved as we stopped at the nurses' station. We weren't in the morgue. A woman in purple scrubs and her hair in long, black braid asked me if there was someone they could call to be with me. I mumbled something about my mother being on my phone as I handed it over.\n\nI heard bits and pieces as both officers spoke with the nurse about the condition of the new patient. She said it was touch and go. He'd had to have his heart restarted once, and he was in immense pain. I couldn't wait any more.\n\nI wandered over to the transparent wall beside the nurse's station and numbly walked through the door as it slid open. I stopped at the first room. A sign on the glass wall that was mostly another sliding door stated a bunch of warnings, but the only word that clicked in my brain was \"ICU.\"\n\nA man lay in the bed. The only parts of his face that were visible between the bandages wrapped around his head were red and puckered with burns. Tubes and wires ran from various beeping machines positioned around the bed, connecting to every imaginable part of his body.\n\nAny ray of hope within me turned to darkness, like the night sky taking over the sun. My knees gave out, and a silent scream escaped. Why had I been so selfish to fight with him? It had been so stupid. I should have submitted to him. I wish I'd never\u2014\n\n\"Ms. Rockland?\" Officer Trenton said.\n\nAn arm wrapped around just under my shoulders, helping me stand. Then someone led me away from the room and back through the main sliding door. Away from the love of my life.\n\n\"No, I have to see him,\" I mumbled, struggling to turn around.\n\n\"Mr. McClaren is down the hall.\" Officer Marx stepped up on my left side so that both officers flanked me. \"Please, come with us.\"\n\nI blinked through my hot tears, my feet moving in the same direction as the officers against my will. Away from the ICU. My knees buckled as I thought the worst. If he wasn't in intensive care...\n\nBut hope seeped back in as I realized there were regular rooms on this floor as well. That the patient they had been discussing was not Malcolm. That he wasn't dead or dying.\n\nA couple of machines filled the room we stopped at as well, but Malcolm was clearly recognizable under the sheet and blanket. My eyes danced over his face. Other than a black eye, a busted lip, and several white strips along the left side of his face, he looked amazing. Then I noticed that a cast encased his left leg. And it was elevated in a sling-type contraption.\n\nA woman wearing a white lab coat stood by one the heart monitor. She turned to us as we entered.\n\n\"Ms. Rockland? I'm Dr. Runyon.\"\n\nI just nodded at her. I tried to scoot past her. I had to touch him.\n\nShe stopped me with a hand on my arm. I glanced over my shoulder as she gently led me toward the door. Malcolm hadn't moved an inch. I silently begged him to open his eyes.\n\n\"Is he...\" I couldn't say the words.\n\n\"He's stable.\" Dr. Runyon stepped in front of me so I could only see her. \"His left fibula is broken, and he has a couple of fractured ribs. We've set the leg in surgery. The ribs will heal in about six weeks, and we'll start physical therapy for the leg around the same time when the cast comes off. He had hit his head, but his CT scan came back clear. I'd like to keep him under observation for a couple of days and take another chest X-ray just to make sure we didn't miss anything. I also want to monitor his breathing. If he can't breathe deeply, he could develop pneumonia.\"\n\nI nodded, trying to process everything she'd said. Broken bones. No head trauma. Avoid pneumonia.\n\nOfficer Marx joined us with another man in a suit, and then the officer left with a tip of his hat.\n\nThe man in the suit pulled a notepad out of his shirt pocket. \"Ms. Rockland, I'm Detective Jansen. Is it okay if I ask you a couple of questions?\"\n\nI blinked at him, glanced at Malcolm, and stared at the doctor for a moment. \"Yes, but I don't know what good it will do. I wasn't there.\"\n\n\"Do you know a Jesse Pratt?\"\n\nI swallowed hard. \"He's a friend of Malcolm's. What does he have to do with this?\"\n\n\"Mr. McClaren was in altercation with Mr. Pratt prior to the car accident. Something about overstepping boundaries with a woman according to a witness.\" Detective Jansen pointed to his own lip and eye, indicating how Malcolm had received those injuries. \"Apparently, Mr. McClaren was leaving the scene when another car ran a stop sign and T-boned him. Mr. Pratt called 9-1-1.\"\n\nHow very chivalrous of Jesse. I hid my scoff with a cough. But my heart sung at the thought that Malcolm had gone to defend me, regardless of our fight.\n\nI had to answer several more questions before he let me back into Malcolm's room. I was running on only adrenaline by the time I pulled a chair over beside the bed and managed to weave my hands around Malcolm's through the IV tube and the device clipped to his finger to measure his pulse. Then I laid my head on his stomach and cried until the blanket between us was soaked.\n\nIf I knew they wouldn't chastise me, I would have crawled into the bed, too. I slept fitfully as it was with nurses coming in to check various levels on the machines or administer more pain medication. It amazed me how they expected patients to recover if they were poking and prodding them at all hours.\n\nMarge, the night desk nurse, tried to convince me to go down to the waiting room where there was a couch, but I couldn't stand to leave Malcolm's side. I left only long enough to get a sandwich and soup from the cafeteria. When I'd returned, I heard Marge arguing with someone that only family could be on the floor after regular visiting hours.\n\nI rounded the corner to see Juliet pacing with her arms crossed and wearing a scowl. Jesse was leaning on one arm across the counter, a smirk on his face as he tried to flirt with Marge. Just what I needed.\n\n\"Beeca!\" Juliet hurried over to hug me. I was so shocked I just stood there. \"How eez mon ch\u00e9ri?\"\n\n\"Ms. Rockland!\" Marge sighed at the sign of reinforcements. \"I tried to tell them\u2014\"\n\n\"I'm sorry, but neither of you are welcome here,\" I said. My brain said I should shove Juliet away, but I was too exhausted to have a catfight right now. I'm surprised I could even form a complete sentence.\n\nJuliet gasped, finally letting me go only to put her hands to her face as she shook her head. \"Comment absolument impoli!\"\n\nJesse's smug look slowly disappeared from his face...that seemed to be devoid of any evidence that he'd been in a scuffle. Which told me that Malcolm had been the punching bag for his old mentor. How very typical and dominating of Jesse. I was glad I had not witnessed that act of humilation. However, Jesse had not come out of the struggle completely unscathed. His knuckles were raw, and he seemed to be favoring his left hand as he gestured to the waiting room. \"Lady Becca, let us talk about this.\"\n\n\"There is nothing to discuss, Jesse. Malcolm is in this situation solely because of you. He was defending my honor.\" To push the point even further, I turned back to Juliet and said, \"As for you, the only 'darling' Malcolm has is me, his fianc\u00e9e. We would both appreciate it if you could accept that and move on.\"\n\n\"He wazn't complaining when I took care of heem lazt night,\" Juliet sneered. \"He waz beeging for more!\"\n\nThe hairs on the back of my neck bristled. Although she'd provided the answer to one of the many nagging questions I had, I knew this was not the time to deal with that. \"I don't give a shit what you say happened last night, bitch. Keep your hands off my man, or we'll be pressing charges.\"\n\nJuliet clamped her mouth shut with a loud humph and tugged the sides of her coat tighter around her as she turned with her nose in the air. I heard a snicker from Marge.\n\nApparently, it wasn't as easy to silence Jesse. He reached out and grabbed my left arm. \"Lady Becca, I insist that you reconsider both your words and your actions. Your current attitude is highly unbecoming for a submissive.\"",
        "\"Remove your fucking hand, asshole,\" I hissed, raising my right hand.\n\nSurprisingly, he let go and even took a step back. Dammit, I had really wanted to slap him. But I wasn't done with him yet.\n\n\"Malcolm told me you took my dress off while I was sleeping last night. You're lucky I don't turn you in for attempted rape. If I ever find out you did anything more than just look at me\u2014\"\n\nI heard a man clear his throat behind me.\n\n\"I was just looking for you, Ms. Rockland. I need you to sign off on your statement.\"\n\nI started to ask what the man meant. What statement? But as the officer stepped around me, I sighed.\n\n\"Detective Jansen! It's so kind of you to stop by. This would be Mr. Pratt.\"\n\n\"We've met.\" The detective nodded, tipping his head slightly toward Jesse. \"And I was the woman Malcolm and Mr. Pratt were fighting over.\"\n\n\"Yes, I have gathered that much.\" He waved his finger between Jesse and me. \"Is there a problem?\"\n\n\"Yes,\" Marge and I said together.\n\n\"We are friends of Malcolm,\" Jesse said, his hand now gripping the edge of the counter. \"We have done nothing wrong.\"\n\n\"I told him visiting hours are over.\" Marge crossed her arms. \"They are not family.\"\n\nI fisted my hands at my side, willing myself to stay calm as I faced Jesse. \"I want you and Juliet to leave immediately. Do not try to contact Malcolm. Do not try to contact me.\"\n\nJesse stood straighter and lifted his chin, looking down his nose at me. He was apparently trying to intimidate me with his height and girth. It didn't work this time.\n\nDetective Jansen put a hand on my arm, blocking me as I stepped forward. But he did not speak.\n\n\"If I ever see you again, I'll hit you with a harassment lawsuit so big you'll wish you'd never heard of my name. You've messed with the wrong fucking sub this time.\" I turned to the detective. \"Will you please escort them out?\"\n\n\"Yes, ma'am.\" The corner of Detective Jansen's mouth had been turned up, but his smile hardened as he released my arm. \"You heard the lady. Let's go. Both of you.\"\n\nI was shaking as I walked back down the hall. I had to stop twice and grip the railing along the wall. I closed the door behind me as I entered Malcolm's room, grateful that he didn't have one of the glass walls with the automatic sliding doors like in the ICU. That we could have some privacy. My legs gave out just as I reached the chair.\n\nFor the hundredth time in the past twelve hours, I regretted not telling Malcolm sooner about that night in December. I could have avoided all of this. We could have been enjoying our vacation\u2014each other\u2014without a care in the world. And Jesse and Juliet would have been a blip on the radar of our past.\n\nI ran the back of my fingers over Malcolm's cheek, feeling the warmth of his skin. The slight stubble from having not shaved since yesterday. I brushed his hair off his forehead so I could kiss him there. A tear dropped from my eyelash as I blinked. It landed on his eyelid, which moved occasionally as he slept. I watched the tear trickle down to the corner of his eye as if he were the one crying. I hoped he was having a good dream.\n\nI lay my head on his chest, listening to his steady heartbeat. My own skipped a beat as I thanked the Lord that he was going to be okay. \"Please, baby, please forgive me.\"\n\n###\n\nSomeone was shaking my shoulder and saying my name softly.\n\nI stirred and blinked. It took a moment to remember that I was still in the hospital. Why I was in the hospital. I jerked upright, wiping the back of my hand across my mouth. My first thought was that something had happened to Malcolm. But he was still sleeping peacefully. Or as well as he could considering the circumstances.\n\n\"Ms. Rockland?\" Marge's face hovered over mine in the dim light from the wall fixture above the bed. She squatted down next to me, her mouth somewhere in between a smile and a frown. \"There's someone here to see you.\"\n\nAs I turned in my chair, I let out a sharp cry. I pressed my hand to my chest, as if that would help still my racing heart. \"I must be dreaming.\"\n\n\"You're not.\" Drake took a step into the room from where he had been waiting in the open doorway. The light from the hall showed his frown as he crossed his arms in front of him. He nodded at me and simply said, \"Becca.\"\n\nTears choked my throat. I reigned in the urge to lurch myself out of my chair at him. I wanted so badly to hug him. Or maybe throttle him. Actually, I wanted to do both. But something about his posture told me that neither would be well received. I slowly stood up instead and remained beside the head of the bed.\n\n\"You're okay?\" His voice was gruff, much like Malcolm sounded when I'd woken him from sleep. Drake looked me over quickly. \"You're not hurt?\"\n\n\"I'm fine. Only Malcolm was in the car.\" I waved Marge away. She held her hand up in a hang-ten symbol to her ear and mouth as she gestured toward Drake with her eyes. I nodded that I got the message to call for help if needed, and she left us alone. I sat back down, slipping my hand through the bars of the bedrail to grasp Malcolm's cool hand for strength. It would have helped if he'd squeezed back. I sighed, conceding that I had to do this on my own. \"What are you doing here?\"\n\n\"I'm kind of wondering that myself.\" Drake's gaze was on Malcolm as he walked to the foot of the bed and stopped. He was still for a moment before he seemed to lift his head.\n\nHe was too much in the shadows for me to read his expression now. I'm not sure I wanted to see it anyway. The only time I'd ever seen him truly angry was the last time I'd actually seen him: that night at the club. He'd been in my hospital room hours later after my severe panic attack, but I'd faked sleeping, refusing to speak to him, much less look at him. Then he was gone. I had just started to accept that it was for good.\n\nI'd never been afraid of my brother. Until now. And I wasn't even sure what exactly he could or would do to me that was frightening me.\n\n\"I got a phone call that there was an emergency with my sister. They wouldn't tell me anything else. I was lucky to catch a flight at such short notice.\"\n\nI glanced at my watch. It was four in the morning. \"I-I just remember giving the nurse my phone when she asked if they should call anyone to be with me.\"\n\n\"The police called the I.C.E. number on your phone and got me. I guess you never changed it.\"\n\n\"What is an ice number?\"\n\nHe let out a deep breath. As if my question irritated him. \"It stands for In Case of Emergency. A phone number of someone that can be reached immediately...in an emergency. Preferably, someone in the same state.\"\n\nIn my head, I was rolling my eyes at him and saying a sarcastic, drawn-out \"Sorry.\" To his face, I gave a slight shrug. He must have programmed it for me at some point. I think I would have remembered doing that myself. I had probably seen it in my contact list but not paid any attention to what it was. I pretty much just used the phone as a phone and ignored all of the other technology on it. I would have to figure out how to change the number.\n\nIn retrospect, I was grateful that he had been the one the police contacted, as inconvenient as the trip had apparently been for him. My mother would have been hysterical if she'd gotten the call. Especially after the events of last summer. I felt bad, though, that he'd had to fly here from California without knowing any details. Then again, he probably wouldn't have come if he had known the truth. Not that I needed him now, but I guessed I should be glad to know he'd come if I was on my deathbed. I'd have to remember that for when it actually happened...and hope he didn't think I was crying wolf.\n\nSuddenly, I looked around. \"Is Daphne with you?\"\n\n\"She's in the waiting room. I wanted to check on you first. Please come with me to get her.\"\n\nMy chest was tight as I stood again and followed my brother. As much as I'd wanted to try to repair the fences between us these past months, I had rather hoped not to do it in person so I could relax and think straight. Now, I had nowhere to hide. And he wasn't exactly acting thrilled to see me.\n\nDaphne stood as we entered the waiting room. She opened her mouth but suddenly glanced at Drake.\n\nHe held her gaze for a moment, until she closed her mouth, and then he nodded.\n\n\"Hi, Becca.\" She gave me a soft smile. Shy almost. \"It's good to see you.\"\n\n\"Stop it. Come here.\" I held out my arms.\n\nShe hesitated again to glance at Drake\u2014who nodded once more\u2014before she ran into my embrace. Over her shoulder, I saw Drake stand up taller, his grimace disheartening. I couldn't tell if he was upset that I was hugging his wife, that she was so overjoyed to see me, or that I hadn't hugged him, too.\n\nI brushed it off and smiled at her as she took a step back. \"How are you? How's California treating you? Are you doing much modeling?\"\n\n\"I'm great. I love the weather out there.\" Her shoulders hunched up as she grinned, clasping my fingers at our waists now. \"And the jobs? The phone is ringing off the hook! I've built up my portfolio and have an audition for a commercial next week. Can you believe it? I can't wait! I want to tell you all\u2014\"\n\n\"Daphne.\"\n\nIt was just the one word, spoken with no inflection. Yet, she had apparently taken it as a command because her mouth snapped shut, and she released my hands. Without a word, she walked back to stand beside yet slightly behind Drake, her hands clasped in front of her, her eyes lowered.\n\n\"We've all had a long night. Now is not the time to play catch up.\"\n\nDaphne nodded at Drake's explanation, although he wasn't even looking at her. He was watching me.\n\nI matched my brother's frown. What the hell? I'd missed getting to know Daphne as my new sister-in-law. She was family. She had apparently missed me, as well. But now that he'd reconnected us, he was treating her as if she needed to ask permission to do anything but breathe. Shouldn't it be up to me if I wanted to talk to her now?\n\n\"Is he going to be okay?\" Drake said, interrupting my thoughts.\n\nIt took me a moment to understand whom he was talking about. \"Malcolm? Yes, he'll be fine. The worst is his broken leg. Nothing that won't heal with time.\"\n\n\"Good.\" He glanced around the sparsely decorated room. \"Can we go somewhere private? To talk?\"\n\nI looked around as well, confused. There were more than enough cushioned chairs for the three of us. And we were alone. \"It's the middle of the night. Isn't this\u2014\"\n\n\"I would prefer some place where we can close a door.\"\n\nOh, brother. Literally. I turned around and rolled my eyes. My mom would have been a better support person, despite the hysterics. I should have insisted they call her. Or maybe I had but I'd been in so much shock I'd said 'brother' when I meant 'mother.' Oh well, it was too late now.\n\nMarge said we could hijack a conference room at the end of the floor. Once Daphne and I sat down across from each other at the end of a small, rectangular table\u2014and he'd shut the door\u2014Drake took the floor. He paced around the other end of the room as he spoke, his hands clasped behind his back as if he were a professor giving a lecture.\n\nI tried to listen intently as my eldest brother talked for the next twenty minutes about what it meant to him to be a Master. Why he chose to have a relationship where his partner was a slave. Why Daphne had chosen him.\n\nIt had started out as a bedroom-only thing but had evolved into the other aspects of their lives, even before they were married. The closer they had gotten to their wedding, the more they had discussed and agreed that Daphne would try to be as submissive as possible within the home. Then they expanded it beyond those walls. Letting him be in control of everything. Relying solely on him to support her, although she could continue modeling as long as it didn't interfere with their relationship.\n\nAfter the past few months, they were very close to being what is called in the scene as twenty-four/seven. Constantly staying in their roles, regardless of the situation or location. Even when sex wasn't involved.\n\nI fisted my hands under the table when he admitted that the move had been the best thing that had happened for them. It gave them the space and opportunity to focus on just the two of them and building their bond. No distractions.\n\nSo family was suddenly a distraction? No longer important to them? Or just him? Why had I wasted so much time worrying about trying to reconcile?\n\nHe presented evidence that she hadn't lost her identity when she became his slave. That like him, she was working. She hung out with her own friends. Had her alone times to relax or have fun.\n\nYes, but apparently only with his blessing.\n\nAccording to him, the respect and loyalty she showed him made him a better person. And her in turn. They were more than just husband and wife. They were lovers and best friends. Ultimately, Master and slave. It had been difficult at first, and they still had their occasional struggles, but it was worth it.\n\nI was patient, sometimes having to bite my cheek while I bided my time for my turn to speak.\n\nDrake finally sat down. He kept his back to Daphne, as if she wasn't there. She hadn't said a word at all in her own defense. In fact, whenever he had referred to her, he hadn't even used her name save for that brief moment in the waiting room when he obviously wanted her to stop talking.\n\nWas that what he meant by her being as submissive as possible now? Keeping her mouth shut unless spoken to? Having no opinions? Seeking approval to hug her fucking sister-in-law? Ceasing to exist unless he acknowledged her? What kind of life was that? It sure sounded like she'd lost her identity by marrying him and choosing to be his slave in all meanings of the word.\n\nI had discussed the Master/slave dynamic a little with Malcolm out of curiosity earlier this year. It drew a specific type of person to fill both roles. It hadn't attracted me then. And after hearing Drake talk like he had\u2014seeing how Daphne was now, compared to the bubbly woman I had grown to know and confide in over the past three years\u2014I was certain it never would. Even if Drake was taking embracing the Master role to the extremes.\n\nI shivered, thinking that three out of the five men I knew in the scene had gone the way of Christian Grey. Had let the role\u2014the title\u2014go to their heads. I assumed it didn't for Darryl, Malcolm's chain-selling friend from the convention. I prayed that it never happened to Malcolm.\n\nDrake lay his arms on the table, his hands clasped together like he was ready to drive home his point on a business deal. \"So, Becca, do you see why the collaring ceremony was so important for me? For us?\"\n\nI'd thought of this moment more often than not ever since he walked out of my life. Finally confronting my brother because of the cavern he'd forged between us. Telling him in no uncertain terms what I thought of his attitude and his decisions on that cold December night. How I hated the way he'd treated Malcolm as I lay in a hospital bed recovering from a panic attack brought on by Drake's very actions. How he'd ignored us both until an accident brought us back together.\n\nI'd imagined myself hitting his chest with my fists. Screaming until I was red in the face and out of breath with tears streaming down my cheeks as I'd done when we had fought as kids. Trying to force him to hear my side. In my head, he had clutched me close to him, apologizing profusely and begging to know what he had to do to put things right. I flinched as I realized that almost the very same thing had happened several hours ago in my living room. Just with Malcolm.\n\nI glanced around Drake's shoulder at Daphne. At the choker she wore around her neck. And the quarter-sized heart pendant marred only by a small hole in the middle. The lights above us reflected off the polished silver of the chain and heart. I'd noticed it in the waiting room.\n\nI could hear Darryl in my head now as he described a sample that was made of links of the same thickness as Daphne's necklace was. How they were small enough to look feminine but were incredibly strong. Impossible to snap if one yanked on the chain.\n\nI had studied the pendant a little closer as Drake had talked. How it didn't hang on a loop from the chain as it would on a normal necklace. It seemed fastened between the links instead. And the chain itself was only long enough to encircle Daphne's pale neck, causing the heart to sit snug against her throat.\n\nNow, as Drake leaned forward, I noticed a thin, black rope around his neck. It sat inside his shirt collar against his skin. And dangling from the rope\u2014behind where the buttons of his polo shirt would conceal it\u2014was a silver key.\n\nI'd assumed the collar and leash at the ceremony were for show. Mere sex toys for their bedroom pleasure. But as he'd emphasized several times in his speech tonight, they no longer confined aspects of BDSM to their private quarters. That obedience was practiced wherever they were and that there was discipline for defiance. The severity of the former was dependent on the specific infraction. While most punishments were carried out in private, it wasn't always the case if he determined a lesson could be better learned immediately, even in the company of others.\n\nI realized now that when he'd collared her, it was symbolic. He'd done it for every aspect of her life. The physical object of said collar had just changed for public display. He'd marked her as his. Owned her. Probably thought of her as his property. She'd mentioned that the night of the infamous party.\n\nWhich made me consider that as much as Drake had professed his wife was loyal to him, the fact that he'd brought her along raised doubts. Did he not trust her to be on her own over two-thousand miles away? Was he hoping to use her to convince me that their relationship worked? Or just maybe, she'd gotten so entrenched in the slave role that she ceased to know how to exist without him telling her what to do and how to do it. Or vise versa.\n\nI wavered between wishing she'd stayed home so I didn't have to witness what they had become, and being grateful that she was here so I could see my brother in his true element.\n\nIt could have been the disaster with Malcolm. The altercation with Jesse and Juliet combined with my brother's diatribe\u2014which strangely sounded like an extension of one Jesse had given me. Or quite possibly, just too many things had been fucked up in my life over the past year. Whatever it was, I felt emotionally and physically drained. I wanted to raise my white flag. But I had one last battle left in me before I gave him the war.\n\nMy legs threatened to give out as I moved to stand behind my chair. It was mostly for support, but it also created a barrier between us. I closed my eyes to count to ten and then took a deep breath.\n\nWhen I opened my eyes, both Drake and Daphne were staring at me.\n\nThe first wore a slight smirk, cracking the gloom that had been written all over his face since he'd surprised me. He looked confident that he'd pleaded his case effectively. He had sat back but suddenly leaned forward again with expectation...as if I was going to make a confession he'd been waiting a long time to hear. He was about to be sorely disappointed.\n\nThe other one was worrying her lower lip. Her eyes looked soulful. They suddenly dropped to the table as our gazes met, as if she'd been caught doing something she shouldn't have. That tugged at my heartstrings. She'd willingly put herself in this situation. Yet she definitely did not look happy.\n\nI tried to take another deep breath to calm my nerves, but it came out shaky, belying my confidence.\n\n\"Drake, I want you to know that you hurt me. You didn't talk to me about your ceremony beforehand. You didn't ask me if I wanted to be involved. You just insisted I be there because it was what you wanted. You went from being a dominant man to a dictator. And damn anyone who dare challenge you. Including your blood. Never in my life have I been more ashamed of you.\"",
        "His hands gripped the arms of the chair, his mouth pressed into a straight line. For all the control he claimed to wield, he was having such difficulty not to interrupt me. I wondered if it was because he saw my speech as an act of defiance. That I was overstepping my role as a sub. But I didn't give a shit, and he didn't have to like it any more than I had to like his spiel. He'd have to get over it.\n\n\"Of all the things I've learned these past three years since entering the scene, something a bondage demonstrator at the convention this winter said made the biggest impact. Being a Dom isn't about being in control. It's about accepting the gift of control your sub has given you. Handling it with care. Protecting and respecting your sub. Looking out for her best interests. Doing so successfully earns the Dom respect and trust in turn.\"\n\nI held up my hand as he opened his mouth. He nodded slightly. For a moment, a thought flickered through my brain that he was merely giving me permission to continue speaking. I stamped down the desire to snap at him for trying to command me. It wasn't worth it.\n\n\"Before you object that what I'm saying is irrelevant because you're a Master not a Dom, I'm using the term in the collective sense of the partner in the power seat, whether that's a Master, Dom, or Top.\"\n\nHe closed his mouth, but his scowl remained. I could see the anger in his eyes that I was telling him what he should be like as a dominant partner. That he was basically doing it wrong. No one likes to be told they're wrong, especially a dominant man. He needed to hear it, though. Because I could see where it would take him. As much as he'd disappointed me, I didn't want him to end up like the others.\n\n\"It also means respecting others in the scene...even if that includes your sister. That's where you went wrong. You failed to respect me. My thoughts. My feelings. You were thinking of no one but yourself. You didn't stop to consider how your actions might affect other people. Or if you did, you intentionally disregarded any reasoning.\"\n\nHe had not looked away from me the entire time I'd given my lecture. It had been vexing, and my fingers ached from gripping the cloth headrest of the chair. I could hear the squeaking of his chair as he rocked gently now, his steepled hands raised, his index fingers rubbing absently at his lips as he apparently pondered what I'd said.\n\nWhen he remained quiet, I asked, \"Do you have any idea why I was so against the ceremony?\"\n\nHe stopped rocking and lowered his hands to his lap. But he still didn't speak.\n\n\"It wasn't a rhetorical question. You can answer. I really want to know.\"\n\n\"Of course I know why. Because you don't believe in it for yourself. Collaring celebrates the very action of giving oneself completely to another. Ultimate surrender. Loss of control. Becoming a slave to her Master. You want to hold onto something still. I don't know why. I think you're missing out on a great deal. If you just give up and let go, you would see.\"\n\nHis words unnerved me. For a moment, I thought Jesse was talking to me. But I blinked and saw my brother still sitting there. Allowing me to remain standing above him. It was backwards and out of place according our status levels in the kinky realm. It had to be killing him.\n\nWords swirled in my head. Angry words. Hateful words. But a little voice broke through the chaos. It told me I couldn't change Drake any more than I could change Jesse. Or Brian.\n\nTears threatened at the corners of my eyes. I knew what I had to say. What I had to do. I hated it. But there was no other way.\n\n\"You're wrong, Drake. So very wrong.\" I shook my head at my brother. My favorite. My confidant and protector all through my life. His ego and need to be in control at all times deluded him. He thought he had all of the answers. My whole body trembled suddenly, and my voice cracked as I continued. \"I was against the ceremony because not six months earlier, I'd been collared and leashed against my will and treated like a dog for a week. Yes, he raped me. But he also degraded me. Treated me as if I were less than human. And when I didn't obey, he tortured me. All this by a man who was a dominant figure in our common world. He thought the ultimate power was to get someone to completely surrender to him, even if it required force.\"\n\nAll of the color drained from Drake's face. I had not revealed to him the entirety of what had happened during my captivity in Brian's secret room last summer. I'd previously just grazed over the important aspects. Only Malcolm, the police, and my two shrinks knew everything. I didn't need to give any specific details now. I could see by the downcast look in his eyes that he finally understood.\n\n\"I didn't think it was important to divulge that information. I was getting better. And then you threw that at me. I'd have preferred you'd done your ceremony in private and told me later. I would have come to terms with it eventually and understood on some level.\"\n\nDrake shook his head, but I'm not sure why. He didn't explain his thoughts, what had caused that reaction. The anger seemed to have left his eyes, though. What remained was a blank expression.\n\n\"At the least, you should have given me the chance to explain my opposition. Being forced into the situation as it was, my mind wasn't in the right place to equate that a collar could be something consensual. Desired, even. You took away the option for me to decide, to have an opinion even. To make it worse, you not only didn't tell me, you deliberately plotted how to get me there. You lied to me. Because you knew deep down that I'd say no. The why doesn't matter anymore. The point is you knew you'd have to force me. There was no way, in your mind, that I wouldn't be there to support you. And that, Drake, makes you no better than Brian.\"\n\nDaphne was whimpering, her arms wrapped around her chest. Her eyes were on Drake's back. Probably waiting for him to scold her for being emotional. I expected him to snap at her at any second, too. To my surprise, he remained stoic to her reaction.\n\nThe room was otherwise silent. My entire body ached. I put more of my weight on the chair, but it did little to relieve the strain on my back. I was out of energy. I was out of words. There was nothing left to say, anyway.\n\nI wasn't sure if Daphne was feeling sympathetic toward my plight. Or was she afraid of what my brother might say or do? Now or later. Then there was my big brother who had yet to show any true concern for my welfare, especially with my fianc\u00e9 in the hospital. He'd just been perturbed that he'd had to fly halfway across the country to find out I wasn't in trouble. And to set the record straight that his way was the best way to live.\n\nI hadn't said anything about being engaged. I'd not sent any correspondence besides the ignored birthday card, and I'd left that tidbit out. But I was wearing the ring...that neither seemed to have noticed. Because I forgot, this trip was all about them.\n\nI jumped upright at a knock on the door. It opened slightly, and Marge poked her head in.\n\n\"Ms. Rockland, he's asking for you,\" she said with a smile.\n\nI stared at her for a moment as my heart leapt. Malcolm was awake! He was speaking!\n\n\"Becca, we can wait here,\" Drake said.\n\n\"No.\" I heard him get up and I turned back around.\n\nHis tilted his head toward me. \"Do you want me to go with you?\"\n\nI shook my head. \"I want you to leave. Take your wife back to California. Be good to her. Remember she submits because she loves you, that she respects you. She wants to please you. Don't ever forget that. Don't let the control go to your head.\"\n\n\"Becca, what do you want from me?\" His voice was rough. Was he actually starting to break from the macho fa\u00e7ade he'd been putting on ever since he'd shown up?\n\nI walked over to my brother and kissed his unshaven cheek lightly. He recoiled as if I'd smacked him. As I stepped back, I put my hand where my lips had been. \"An apology would have been nice.\"\n\nHis jaw twitched, and something flashed in his eyes as I stepped away. But he remained silent. Even after all I'd poured out, after serving him the first plank to rebuild this bridge, he still couldn't say it?\n\nI walked around the table and gave Daphne a tight hug. I whispered in her ear, \"Promise me you'll get help if you ever feel threatened. I'm always just a call away. Don't forget me.\"\n\nShe nodded against my shoulder, the sound of her sobs preventing whatever she mumbled from making sense to me.\n\nI gave them both a sad smile. \"Goodbye, Drake. Goodbye, Daphne. I love you both. I wish you the best.\"\n\nAs I walked through the conference room door, I felt a wave of peace flow over me. My heartbeat sped up the further I walked down the hall. I had to mend a bridge that was way more important.\n\n###\n\n\"Becca! Becca!\"\n\nI heard Malcolm's hoarse voice before I'd barely pushed the door open. I could feel his eyes on me as I entered. My heart leapt with joy.\n\nHe was propped up in bed, and the light had been turned to a brighter setting. His left hand\u2014free of tubes and wires\u2014reached out for me. His fingers rapidly clenched and released, as if that would bring me to him faster.\n\nI rushed to his right side where I'd previously been sleeping, letting out a soft cry as I gripped his waiting hand in mine. Our eyes met, and I couldn't stop the tears that choked the breath out of me. I pulled his hand up to hold it against my wet cheek and closed my eyes, pressing more tears out.\n\n\"Shh, sweetie, it's okay.\" He struggled but eventually succeeded in pulling his hand from my grasp. His fingers wiped at my tears and gently swept my hair from my forehead. It was futile since I was leaning over him and my hair kept falling over my eyes. But he didn't seem to mind.\n\n\"It's not okay! I did this!\" I hiccupped, moving my hand to mirror his actions but on his face.\n\n\"No, don't say that.\" His gaze darted all over, his fingers lightly touching my mouth and jawline. They skated a path down my neck and then back up again to my ears. Moved along my temple, letting the strands of my unkempt hair tangle with his fingers. I closed my eyes as his thumb brushed over my eyebrows and then my eyelids. Traced the bridge of my nose. It was as if he was trying to remember me.\n\n\"If we hadn't fought...if I'd told you sooner...\" I said between sobs.\n\n\"I forgive you.\" It was the softest whisper, yet it rang loudly in my head. He waited until I was looking into his eyes again before he said, \"I love you.\"\n\n\"I don't care what happened with Juliet. Whatever it was, I forgive you, too. I love you so much! Too much to fight about something so trivial. I was such a fool.\" I choked back another cry just before he slid his hand up my jaw and behind my head, pulling me to him.\n\nOur lips met with a mutual gasp. He pressed harder, to which I moaned my consent. I felt his tongue playing over my lips, testing for resistance. I opened to him, and he groaned as he entered, sweeping over my teeth and tongue.\n\nHis hand fisted and unfisted in my hair, holding my head to his. I leaned forward more, feeling the lowered bedrail digging into my belly. I didn't care.\n\nSuddenly, he cried out and pushed me away, halting our hospital makeout session.\n\nI stood up and glanced around. Had Marge entered the room? Then I looked to the ceiling, wondering if they had security cameras in the rooms up here.\n\n\"My chest,\" Malcolm said with a groan.\n\n\"Oh, my God! I'm so sorry!\" I lightly ran my hands over his hospital gown, as if that would help.\n\nHis grimace slowly faded and he smiled up at me. \"It was worth it for that kiss!\"\n\nI swatted him lightly on his good leg. \"Cad.\"\n\nHe arched an eyebrow. \"Absolutely. Any day for you.\"\n\nI pulled my chair up and sat down with a sigh. He slid his right hand toward me, curling his fingers into my waiting palm. I lowered my gaze to the IV tube snaking out the back of his hand and along the sheet. \"Seriously, though, I am so sorry this happened.\"\n\n\"Becca\u2014\"\n\n\"No, please, let me finish.\"\n\nHe flashed me a tired smile. \"I was just going to ask if you can reach the button for the morphine pump. It fell down the side of the bed.\"\n\nI wanted to laugh. Then I saw that his grin seemed strained. He was hiding the pain, but just barely. \"Is it your ribs? Did I\u2014\"\n\n\"A little. But mostly, it's my leg. Please, find the button.\"\n\nI hurried around to the other side of the bed. A cord hung looped around a rung of the raised bedrail. A device that looked like the insert for a car cigarette lighter but with a flat top swung from the end. I pressed the button and then pulled it back up to where he could reach it, securing the attached clip to the sheet beside the call button for the nurse.\n\n\"Thank you.\" He closed his eyes, his mouth a grimace now. \"Give me a couple of minutes.\"\n\nI glanced between him and my watch, noting the time and counting down. After five minutes, his jaw finally relaxed. I used the time to think about our time together. Where we'd started. How we'd come so far.\n\nI started to rub my thumb across the back of his fingers but stopped when I realized that might relax him too much. \"Don't fall asleep on me again. Not until we've talked. Please.\"\n\nHe winced before he opened his eyes. I took his nod as a cue he was okay if I proceeded.\n\n\"I'm not going to rehash our fight. It's over and done with. We've both been through enough. I just want to apologize for not telling you sooner about Jesse. I'm sorry I didn't come to you that night.\"\n\n\"And I should have pressed harder about why you were so upset when you got to the club. I thought it was over-stimulation from the show.\" His words started out slow and low, and he paused in the middle to take a deep breath. By the last word, his voice sounded normal again. \"But then we had that other issue...there just wasn't time.\"\n\nI put both of my hands around his right hand, minding the IV line. \"Speaking of other issues, they were here tonight. But they're gone now.\"\n\nMalcolm turned his head toward me. \"Jesse and Juliet?\"\n\nI cringed. \"Uh, well, yes, them, too. I was speaking about my brother.\"\n\n\"I want to hear all about that. The other ones, too.\" He closed his eyes for a moment and licked his lips. \"But first, can you give me\u2014\"\n\n\"Another kiss?\" I grinned.\n\nHe laughed. Then he groaned as he pressed his left hand to his chest. \"I was going to say a drink of water, but a kiss would be nice as well.\"\n\nI noticed the pink pitcher on the table beside the bed and went to pour it into the matching plastic glass beside it, but nothing came out. I lifted the lid and realized it was full of ice chips. Marge must have brought them just before I came back in the room because they were still frozen.\n\nI leaned over and gave him a quick kiss. Then I loaded the cup up with chips and held the spoon to his lips, feeding him while I relayed the events of both surprise visits. He nodded a lot. And scowled. He laughed at how I threw Jesse and Juliet out, which earned him a reprimand from me as he groaned in pain. He even got a little choked up when I explained how my brother controlled Daphne so much.\n\nWhen I was finished, and the cup of ice chips was empty, he reached across to me with his left hand and gestured I come closer. Without a word, he gently pulled my head his chest and placed a kiss on my head. I guess it was his attempt at a hug.\n\nWe were both silent for a while, and I thought he'd drifted off based on the slowing of his heartbeat beneath my ear. I had closed my eyes as well. He startled me when he spoke.\n\n\"I know you said you didn't care, but I insist you\u2014\"\n\n\"Malcolm...\" I said as I started to sit up. He let me lift my head so that our eyes met, but he kept his free hand buried in my locks, restricting me from rising up fully.\n\n\"Please, hear me out. And we'll never speak of it again.\"\n\nI bit my lower lip and nodded.\n\n\"The other night. Last night. This morning. Whenever it was I took you to Jesse's house. You were sleeping. The three of us were up talking. They brought out some wine. And one bottle turned into two and then three. There might have been more after that. I don't remember. We'd gone down to the dungeon after the first bottle of wine. I hadn't seen it since he'd remodeled four years ago. We were in the aftercare room, laughing about something stupid. I don't even remember what it was.\" He stopped to lick his lips.\n\nI pointed to the pitcher but he shook his head. He closed his eyes before continuing.\n\n\"I passed out at least once, probably a couple of more times. My brain is sketchy. I have visions of Juliet's face floating before mine. Her voice calling my name, mumbling questions. Laughing. She was kneeling in front of me at one point. I think I was still sitting on the couch. I could feel her touching me all over with her hands. I don't think I was wearing any pants. She smiled up at me before I felt her take me in her mouth. I couldn't push her away. She'd bound my hands. I couldn't move at all.\"\n\nI shivered and squeezed his hand. \"Where was Jesse?\"\n\nMalcolm's eyes opened, his frown deepening. \"I have no idea, but I can take a wild guess.\"\n\nI nodded, feeling a little nauseous.\n\n\"She said I told her to tie me up. To blow me. I'm ashamed to say I came. The next thing I remember, I woke up on the couch in the aftercare room with all of my clothes on. Alone. Not to mention, my head was killing me. When I approached her while she made breakfast, she said I must have been dreaming. I'd had a lot to drink. The last she saw me, I had passed out on the couch. She tried to wake me so I would go upstairs to be with you. But they couldn't rouse me, so they went to bed. She said she would never do anything without Jesse's permission now. And I couldn't believe my friend would have allowed that. So I convinced myself they were right, it had all been a drunken dream. Then they suggested we work on the suspension rig. Which is when you came in.\"\n\n\"Do you think they drugged you?\"\n\n\"I don't want to believe it. But it's the only explanation. There is no way I'd actually have agreed to let her do that. The more I've thought about it, I knew I hadn't imagined it. They'd drunk just as much wine as I did.\" He turned his head to the far wall, his sigh shaky. \"God, I can't believe I fell for her lie.\"\n\nI squeezed his left hand, and eventually he turned back to me. \"I said it already, and I'll keep saying it until you believe me. I forgive you. It's more important that you're alive.\"\n\n\"Thank you, Becca,\" he said, his voice catching. \"That means so much to me. I felt so ashamed. I thought you'd found out somehow, that's why you were so mad when we left their house. But then I couldn't figure out how you knew. Which made it even more confusing. It killed me to think I could have betrayed you like that. We were both hurting\u2014\"\n\n\"Shh.\" I pressed my fingers to his lips. I felt the tears welling up again. My head was getting heavy holding it up as I was, so I laid it down on his shoulder. His head rolled to rest against mine, his left hand caressing my cheek and smoothing back my hair. I shuddered. \"I wish this day was over.\"\n\n\"You and me both, sweetie.\" Malcolm sighed, kissing my hair. \"You and me both.\"\n\n###\n\nWe decided to stay in the city while he recovered. I made a trip back to the house in Wheaton to clean out the fridge and get enough clothes to last us for the next two months as well as my notes and laptop. I'd left the latter behind since we were supposed to be relaxing and had only come to the city for the weekend. This had turned into the worst planned vacation I'd ever experienced. But we quickly settled in for what I realized was a foreshadowing for our marriage. For better or worse, in sickness and in health, right?\n\nHe suggested staying in the guestroom, afraid that I'd be too much of a temptation in bed beside him and cause a setback to his healing progress. As much as it pained me, I agreed that he was right, so I made him as comfortable as possible. For once, he'd voiced his appreciation for my pillow fetish...and the fact that I had left it behind at the condo when I'd moved in with him. He looked like a child in a pillow fort.",
        "After three days in bed, he was bored to death and insisted on going downstairs to the living room with the aid of his crutches. His new plan was to veg in front of the TV or nap throughout the day and then go upstairs to sleep at night. He said he could handle it and waved away my offer of extra support on his initial decent. But when I witnessed him pausing every two steps to press his hand to his side\u2014along with the beads of sweat on his brow once he'd made it to the living room\u2014I put my foot down.\n\nI frowned and pointed to the armchair. I left him to wonder what I was doing as I stripped his temporary bed upstairs and gather half of the pillows I'd used to create a cushion around him while he slept. When I returned, he was sitting with his elbow propped up on the arm of the chair, his forehead resting in his palm. He had closed his eyes, but they popped open as I dragged the couch to position it with one arm butted up against the wall for better TV viewing. He watched silently as I made up a bed and moved the ottoman and an end table within reach.\n\n\"You will be staying down here for the duration,\" I said, my hands on my hips as I surveyed the new living arrangements. \"The last thing I want or need is for you to fall down the stairs. Plus, you're closer to the kitchen if you need to get something to eat or drink and I'm not available. You'll have to use the half-bath, but I think you can manage.\"\n\nHe cringed as he stood up and hobbled over to the couch. I helped him get his left leg up onto the seat cushions, tucking a blanket around where his toes poked free of the cast. Then I stuffed pillows behind his head and the rest of his body. He sighed and leaned back, closing his eyes again.\n\nI watched as the creases on his forehead slowly disappeared. I left him long enough to retrieve his pain pills and a glass of water. \"Here, take these before you fall asleep.\"\n\nHe nodded his gratefulness and set the glass on the end table.\n\nI turned to find the remote for him and felt his right hand on my wrist. I stopped with a gasp. It no longer bothered me or brought back old memories when he did that. I was just surprised. Especially as the gesture turned more intimate when his grip loosened and slid down to clasp my hand, his thumb stroking my skin.\n\n\"Thank you, Becca.\" His voice seemed tight.\n\nI let him pull me down to sit beside him, although my butt was half off the couch. For the longest time, we just stared into each other's eyes. His were glossy. Or maybe that was because mine were. I blinked, and a tear escaped.\n\n\"Don't cry.\" He wiped his left index finger across my cheek.\n\nI shivered from the light touch, and another tear made its trek down to where he now cupped my face. He brushed that one away as well. \"I'm sorry\u2014\"\n\n\"Shh.\" He lifted our joined hands up and pressed his lips to my knuckles. Then he moved both of my hands so they rested on his shoulders.\n\nI watched him as I slid my hands back further, his disheveled locks tickling my fingers. His eyes were searching mine. Looking deep inside of me. I had just inhaled a shaky breath when his hands mirrored mine and pulled me closer, kissing me. I gasped again, caught off guard.\n\nIt started out light at first. Gentle touches. Lips brushing lips. Fingers stroking through each other's hair. With every second we kissed, tension drained from my muscles. The soft gasp that passed from my mouth as his hand fisted and tugged my head back must have spurred him on. I don't think he had realized how relaxed I was at that moment...that I was only upright due to his arms around my neck.\n\nHe let out a low growl, and his mouth pressed harder against mine. His tongue entered in sweeping motions, teasing and caressing at the same time. He moved one of his hands down to support my back. It also pressed my breasts against his upper chest and right shoulder in my cockeyed position.\n\nI let out a moan. It had been three days since that kiss in the hospital room. The doctor had been concerned about a rash that had developed on Malcolm's cheek and hand. Some tests thankfully showed it was just an allergic reaction to the Steri-Strips used to close the surface wounds from his fight with Jesse, but it had delayed his discharge by a day.\n\nNow, a low thrumming started between my legs at the feel of him. The taste. I whimpered as his hand released my hair and stroked down to cup my breast. His fingers pinched my nipple through my shirt and bra. I broke the kiss, leaning my head back to moan. His lips took the cue to caress my neck, his tongue flicking out to trace my carotid artery.\n\nI cried out as he suddenly stopped and held me away, his hands gripping my biceps. I tried to pull him back to me. My heart was racing. My need growing.\n\n\"Becca, don't,\" he said, panting.\n\nI shook my head as the darkness faded from his eyes. \"No...no! You started\u2014\"\n\n\"I know, sweetie. I'm sorry. I shouldn't have. It's too soon.\" He cringed as he tried to scoot over to give me more room to sit. He reached up to caress my cheek. His fingers played there for a moment, and I felt him pull several strands of my hair away from my damp face and tuck it behind my ear. \"But I have to say, that was wonderful.\"\n\nI stood up and glanced around. I realized he couldn't finish what he'd started. But I could. I scurried to the other end table and retrieved the remote, tossing it in his lap. I heard his hiss of pain but paid it no mind. It was his own fault he'd kissed me. Touched me. All while knowing he couldn't have sex with me, yet. \"I'll...um...I'll be right back.\"\n\nI was almost to the hallway when he said, \"Becca, stop! Please!\"\n\nI paused. Then I clenched my eyes and tried not to cry. No. He couldn't do this to me. He'd already put me in a difficult situation.\n\nThere was loud growl and \"Shit!\" behind me.\n\nI took another step.\n\nHis voice changed from pleading to commanding. \"Lady Becca, come here!\"\n\nMy legs shook as I slowly faced him, my lower lip trembling. He must have tried to turn\u2014and found it quite painful\u2014as both of his arms gripped the top of the couch as he watched me, his teeth clenched and hands fisted. I choked back a gasp as I connected with his dark eyes.\n\n\"Don't make me say it again.\"\n\nI obeyed, but it was very reluctantly. It seemed like it took ten minutes to walk the ten steps back toward him. I stopped when I'd reached the back of the couch.\n\n\"Where were you going?\"\n\n\"I...um...\"\n\n\"Becca...\"\n\nI pointed upstairs.\n\n\"And what were you going to do up there?\"\n\nMy face flushed. When I was able to speak, my voice was high-pitched. \"To find release.\"\n\nHis eyes narrowed.\n\nI gulped. \"To find release, Sir.\"\n\n\"Turn on the ceiling fan then stand in front of the chair.\"\n\nI obeyed, but once again, my feet felt like I was wearing shoes and walking underwater. I shivered after completing the first task. It was the beginning of April. The room was very comfortable and didn't need the added electrically powered breeze.\n\nOnce I'd reached the chair, I turned to face him. A part of me had expected a spanking. He couldn't do that from over here. I sighed with disappointment.\n\n\"Take off your clothes.\"\n\n\"What?\" I don't know why it slipped out. Why I questioned him.\n\n\"You heard me.\"\n\nNow my hands trembled along with my legs as I pulled my shirt over my head. When I reached to do my pants next, I heard his \"Uh uh.\" I couldn't look at him for some reason, so I studied the designs in the rug beneath my socks. I moved my hands up to my bra and he said, \"Yes.\" I bit my lip to control a whimper as I released the clasps and my breasts met the cool air of the room. I saw the method to his madness as my nipples puckered painfully, making me catch my breath.\n\nHe groaned.\n\nI held my hand at my waist again. When there was no sound of disapproval, I unzipped my jeans and lowered them. My panties were the last to go. Unfortunately, they stuck a little due to my arousal, and I had to spread my legs to release the fabric. I heard another groan from the couch as I dropped my underwear to my ankles and stepped clear of them.\n\n\"Turn around.\"\n\nI let my breath out slowly as I faced the closed patio door. At least I didn't have to worry about looking at him. I had no idea why that was an issue now. Maybe it was shame that I couldn't control myself, as he was able to. I could have put on a fa\u00e7ade and taken care of the situation later with him none the wiser. What an impatient dolt I had been.\n\n\"Spread your legs wider.\" When I had done so, he said, \"Put your forearms on the seat of the chair.\"\n\nI obeyed. My ass went up, and I felt the cool air against my pussy now. Goosebumps prickled like little bubbles popping all over my legs and arms.\n\nThere was silence for an ungodly length of time. The longer I stood there, the more I grew tired. I shifted my weight from one leg to the other a couple of times. Then I checked myself as I realized that the movement was making my ass shake. My face was on fire now. What the heck was wrong with me?\n\n\"Are you wet, Lady Becca?\"\n\nHis voice startled me, and my knees buckled. I composed myself and straightened my legs. I realized he was waiting for an answer. But before I could speak, he did.\n\n\"Take your finger and run it through your pussy.\"\n\nAs I did so, my knees threatened to give out again. Shivers ran up my back as I finally had some pressure against my sensitivity, as brief as it was. I let out a silent cry and rubbed a second time.\n\n\"Stop. Wipe it on your ass.\"\n\nI reached behind me and stroked my right middle finger across my right ass cheek. I knew the shiny slickness I left behind as I had looked at my finger when I'd removed it from between my legs. My tangy scent was evident from where I stood. I wondered if the fan's circulation drew the smell to him as well.\n\nThere was a groan of approval from behind me. Then, \"Turn around and sit down. Spread your legs so they're hanging over the arms of the chair.\"\n\nNow my whole body was shaking. I wasn't able to stand up fully. I did a sort of roll over where one moment, my arms were on the seat and the next my ass was, but I'd stayed bent over. I took deep breaths as I positioned the underside of my knees over the padded material that wrapped around most of the old-fashioned arms. Then I closed my eyes and waited.\n\n\"Look at me, Lady Becca.\"\n\nI pried my eyes open with a whimper.\n\n\"Good girl.\" He held my gaze for a moment before his eyes slowly dropped down my body.\n\nI didn't know how much he could see from about eight feet away. But it didn't stop my breasts from heaving with my breathing now. My fingers twitched, indecisive. I wanted to cover myself below.\n\nAnd that's when it hit me. In the three years we'd been together, we'd done all kinds of sexual, erotic things. I'd masturbated quite frequently prior to meeting him. And admittedly, quite a bit more after, but not so much since we'd moved in together.\n\nNever I had I done it in front of him. It hadn't occurred to me to do so since he was always there to do it to me. And there had only been the one time\u2014during the blizzard\u2014that he'd stroked his own cock to get off and I was present (granted he'd tied me up, so I couldn't have gone anywhere if I'd wanted to).\n\nHe'd never requested it of me. Until now. Because that's the only direction this was going. And it scared the shit out of me for some reason.\n\nI was okay with having him tie me up to feed me his cock; fuck me senseless; or chain me to a cross on the wall so he could whip me while I had a buttplug or vibrator inside me. But suddenly I was Sister Christian when it came to sticking my fingers between my legs while he watched? Maybe I was crazy.\n\nI shivered and licked my lips. I could do this. I loved him. I was marrying him. It was far past time for him to watch me as I brought myself pleasure. My fate accepted, I let out my breath slowly and relaxed, waiting for his direction.\n\n\"You look so beautiful, Lady Becca,\" Malcolm said, licking his lips as well.\n\nMy breasts rose up as I inhaled, watching how his hand moved slightly from where it lay in his lap. I knew the accident hadn't affected his cock, and that the makeout session had definitely turned him on. But the doctor had said no rigorous activity until his ribs healed. They were fractured, not completely broken, but we wanted to avoid the latter. Knowing our sex habits, that could very well be the result.\n\nIt was another agonizing few minutes before he spoke again. The whole time I sat there with my legs parted, my hands draped over my knees like some lewd sex goddess statue. And the thought that kept circulating in my head was how much more erotic this would be if we had some rope.\n\n\"You know,\" he said, clearing his throat, \"I really wish you'd brought the rope back with you. I'd love to tie your legs to those wooden arms. Bind your breasts. Secure you to the chair back so you can only move your hands.\"\n\nMy pussy clenched in desire. God, how I loved how he could read my mind. I licked my lips again.\n\n\"Another time, definitely.\" He smiled as I nodded. \"But for now...\"\n\nI held in my breath, my entire body on high alert. If he made me sit here and wait...\n\n\"These are the rules. You must stay in the chair. You can only use your hands. And you must keep your eyes on me until you come. Otherwise, I don't care how or when you come. Do you understand?\"\n\nI nodded vigorously. Instinctively, I flexed my fingers. My pussy throbbed now, begging to be touched.\n\nThe corner of his mouth turned up. \"There are no restrictions on using your voice, Lady Becca.\"\n\n\"Uh...Yes, Sir!\"\n\n\"You may begin when you're ready.\" He seemed to settle back into his corner of the couch, his arms spread out along the back and arm of the couch. \"Oh, and if you break any of the rules, there will be consequences. Understood?\"\n\n\"Y-yes, Sir.\" My hands immediately went to my breasts, and I cooed, relaxing into the form of the chair. The globes were heavy. Warm. Supple. My thumbs grazed over my nipples, and my eyes immediately began to close in relief.\n\n\"Lady Becca!\"\n\nI sat upright with a start, staring at him with my breasts cupped in my hands, my nipples pinched between each thumb and forefinger.\n\n\"That was your only warning.\"\n\nDid he have any idea how hard it was to keep your eyes open when you're feeling such pleasure? You want to sink into it. Embrace it.\n\nI whimpered as I returned to fondling my breasts for him. Squeezing. Rubbing. A vision of his cock sliding between them had my tongue darting out, licking at the imaginary head. I kept my eyes on him, my chin tucked to my chest.\n\nHis eyes widened as I leaned forward a little more and raised my right breast.\n\nFor a fraction of a second, I wondered if this was breaking the rule of only using my hands, but he didn't give any indication of a violation. The tip of my tongue flicked at my nipple. I bent even more and was able to suck it into my mouth. Nipping with my teeth. Pulling my lips back so he could see.\n\nHis inhale sounded like a hiss as it carried across the room.\n\nAlthough it made my neck ache, I repeated the process on my left breast. I was mindful to keep my eyes trained in his direction. He seemed to shift a little, which made me smile.\n\nI know he wanted me to put on a show for him. But his kisses had driven me well on the way to madness. I'd been denied, and the desire had waned. Now, given the chance for redemption, it twisted inside again. I didn't know how long I could hold out. It might be a short performance.\n\nWith my left hand still caressing my left breast, I slid my right hand down my stomach and stopped with my palm resting just above my mound. Using my index and ring finger, I parted my outer lips. They were swollen, wet, and hot to the touch.\n\nAlthough I had to keep my eyes on him, his gaze remained on my body, darting up only occasionally to make sure I was obeying him. I paused, waiting until his gaze returned to mine before I proceeded. I ran the tip of my tongue along my upper lip, and immediately, his eyes dropped again. I pressed my middle finger through the folds.\n\nI'd barely touched the pad of my finger to the tip of my clit, but I cried out, my back arching away from the chair. I stared at the ceiling for a moment as I grazed my finger across my clit from side to side. I quickly glanced at him, but he was enthralled with what was happening below my waist.\n\nStruggling to keep my eyes open and on him, I slid my finger down, pressing into the heat. Spreading my arousal around. Voyaging even further, I circled the sensitive ring of my vagina three times before I slid my finger inside with a loud moan. That brought his eyes up to mine.\n\nI had to free both hands for a moment to adjust my position on the chair, scooting my ass toward the edge. It spread my legs wider. Abandoning my breasts, I used my left hand to hold my lower lips open while my right hand delved into my pussy. My arms created a V, pressing my breasts together while my hands worked between my legs.\n\nUsually when I fingered myself, I had my eyes closed while I imagined being in some position or scenario with him. While it usually took me awhile to reach orgasm on my own, I found that the more erotic my imagination, the faster I achieved results. Now was definitely not the case.\n\nIt was getting harder to focus on him while alternating between rubbing my clit and thrusting two and then three fingers inside me. I whimpered my frustration as the precipice continued to elude me and my right hand started to cramp.\n\nTime to switch tactics.\n\nI returned to massaging my breasts with my left hand and rubbing my clit with my right. I imagined my fingers were his and he was holding the head of his cock just beyond the reach of my pussy. That he was whispering for me to come, and as soon as I did, he'd give me what I really wanted. He'd thrust his thick, hard cock in my hot, tight pussy. I even ran a finger over my entrance a few times, as if he were teasing me with the tip.\n\nMy unhurried pants turned to desperate mewls. I could feel my heart pounding wildly against my chest. Sweat gathered under my right arm that rested across my belly and dripped off my forehead. The smell of my arousal was more potent, the squishing sound louder as it coated my fingers as they moved back and forth like a self-lubricating piston.\n\nAnd then suddenly, I threw my head back and cried out, my eyes clenching. My pussy pulsed around the imaginary cock my thoughts said he'd forced into me upon my scream. Little ripples spread throughout my belly.\n\nThe hand on my breast squeezed tighter, and the one between my legs tried to continue rubbing while my mind drifted away. I fought against the voice in my head that said to relax and feel. I had enough sense left to know that the feelings would flee if my hands stopped moving.\n\nBut nature won, and I gave into the feelings. I held still as long as possible afterwards, trying to keep the feeling of ecstasy flowing through me. I wanted more. I really wanted Malcolm moving within me, drawing out the orgasm as he was wont to do. Which made me whimper again.\n\nIt was a few minutes before I settled down. Before I could breathe normally. When I opened my eyes, I was staring at the ceiling. An aftershock ripped through me as I sat up straight. I arched again, holding my breath and the arms of the chair until it passed.\n\n\"You are the most amazing woman...\" Malcolm's voice shook me from my headspace. \"You're glowing.\"\n\nI blinked, remembering he was there. I started to lower my legs, as if that would cover my sudden embarrassment. But I froze as my brain started working again and said I shouldn't do so until instructed. So I trained my eyes toward my dominant partner and waited.\n\nHe was watching me, his lips moving but no sound coming out. His arms were spread on the back and side of the couch again, but his hands were fisted.",
        "I dared to dart my eyes down and felt a smile tugging at my lips. He'd pulled the blanket over his lap at some point, but it did little to hide the tent he'd pitched beneath it. And if I wasn't mistaken, one of the words he was mouthing looked a hell of a lot like 'baseball.'\n\n\"Go clean up and take a nap.\" He said eventually, his voice shaky. \"You deserve it. It's been a rough few days for you. We're both home now, so you can relax in your own bed. I'll be fine down here. Take your phone in case I do need something.\"\n\nLowering my legs and standing up was a harder task than I'd imagined. I had been sitting in that position for no more than ten minutes\u2014fifteen max\u2014but my body complained as if I'd been there an hour. I noticed the wet stain on the seat, and I was suddenly glad I hadn't paid to have my grandmother's chair reupholstered yet.\n\nI pondered my clothes for a second, deciding to abandon them. It made no sense to get dressed only to disrobe again to get in the shower. So I sauntered across the room naked, my breasts bouncing slightly.\n\n\"Please, hurry,\" Malcolm said, his voice barely a whisper. \"You have no idea how badly I want to fuck you right now.\"\n\nI just grinned. I heard him groan and whimper as I ascended to my bedroom and bathroom. The poor man. This was going to be a difficult recovery. For both of us.\n\n###\n\nThe next four weeks went by so slowly. I felt more like a maid than Malcolm's fianc\u00e9e. Although, I quickly found that his situation allowed me to be more submissive. To attend to his needs because I wanted to, not just because I had to. Like helping him with leg and arm exercises on his uninjured limbs so he didn't get too stiff from immobility. Or giving him sponge baths\u2014that he claimed to hate, but I could tell by his erection every time that he enjoyed them. Some days, he did frustrate me up the wazoo. On purpose, it seemed, just to test me. But I learned to check myself before I lost my temper.\n\nHis constant smile and warm looks whenever I did do something with a smile\u2014especially without him asking me to\u2014showed me that he was proud of my growth.\n\nI was also restless because we hadn't had sex in over a month now. He always stopped us if our casual kisses became too intense. And he hadn't requested a repeat of the voyeuristic masturbation show. I was a little disappointed on the latter because I'd found I'd enjoyed it immensely, but I realized it must have been very difficult for him to be tempted like that. Even though he had insisted on it.\n\nI struggled not to tempt him, as well, although he once said my mere presence was a temptation. I'd tried hiding away for a day to finish my second novel. But it had only resulted in dozens of missed texts asking if I was okay...was something wrong.\n\nSo I spent half of my days curled up in the chair or on the other end of the couch working on my laptop. I devoted the other half to fulfilling his non-carnal needs, mentally counting down the days until we could be intimate again. I felt like I was a virgin waiting for her wedding night. And with the doctor not knowing how much physical therapy would be required once the cast came off, I might as well have been waiting until we did get married to sleep with him again.\n\nThe downtime did have other advantages. It allowed us to spend more time just being together, even if we were in our own little worlds. Sometimes we talked, but mostly he watched TV and I worked on revisions that Sue sent me. It was peaceful. Enjoyable. And it only made us a better couple.\n\nI'd broached the subject that while I knew he liked frequenting the club, I was hesitant to have a reception there just because they catered to the BDSM lifestyle. I had no acquaintances in the scene. And honestly, neither did he anymore, at least not locally. He apologized if he'd caused me any undo duress because of his request as he didn't want me to feel obligated as I had with Drake's party. He just thought it would be a neat venue due to our predilections. But he agreed, we should scratch the club reception idea. Interesting what communicating openly achieved.\n\nIt was near the end of May, and I'd spent the day on a fruitless search for a wedding dress. I'd procrastinated for months and only used Malcolm's injury as another excuse. But I'd relented to his insistence that although we didn't have a new date, it was happening this year, so I needed to get to work on the one thing that I could. Even he knew it took awhile to get a dress ordered and altered.\n\nOther than Sue, I didn't have any close friends in the vanilla world. I'd had acquaintances through the years, but I had tended to keep to myself since I was always in the spotlight as a writer. I was finally seeing the down side to that now. Sue had been unable to attend my first try-on appointment, so I'd battled the racks of overpriced white gowns all alone. The shopping excursion had left me depressed because honestly, I had no idea what I was looking for. And it didn't help that just about everything looked good on me. I'd left with a heavy heart.\n\nMalcolm was watching a sports talk show in the living room when I returned. I heard the TV go quiet as I started up the stairs. I'd been able to keep in the tears the entire drive home. I just wanted to crawl into bed and have a good cry.\n\n\"Becca? Detective Jansen stopped by while you were out.\"\n\nA sniffle escaped. Joy. What now?\n\nWhen I still didn't answer, he said, \"Come here, please.\"\n\nI looked longingly up to where my bedroom was. But I turned around with a sigh.\n\nLately, he'd been sitting in the middle of the couch with his cast propped up on an ottoman. It allowed me to sit beside him and watch TV with him, work, or just talk. Today was no different.\n\nHe look up as I sat beside him. \"What's wrong?\"\n\nI snuggled up to his side as he put his arm around me. My eyes drifted closed as I leaned my head on his shoulder, sighing again. \"I hate wedding dresses.\"\n\nHe chuckled. \"While I imagine you'd look beautiful in anything you pick out, I'm much more anticipating seeing you out of it.\"\n\nThat brought a small smile to my lips. And a little skip to my heart. I'd contemplated something the last couple of days, but I was hesitant to bring it up. I didn't want to hurt his feelings.\n\nBefore I could speak, he tucked his fingers under my chin and lifted it so our eyes met. \"Be honest with me. Are you reconsidering?\"\n\nI tried to pull away, but he held me tight.\n\n\"Becca?\" His eyes seemed to droop with the corners of his mouth. \"Talk to me.\"\n\nI worried my lower lip for a minute, trying to arrange my words so they made sense. It was so much easier when I was typing it on a computer. I could go back and erase or change it until I made it sound the way I wanted it to.\n\n\"Yes, I am.\"\n\nHe gasped, and I pressed my fingers to his lips.\n\n\"I want to make it very clear. I am not reconsidering marrying you,\" I said, my voice wavering. \"I want nothing more in this life than to be your wife. But I don't need an elaborate ceremony. A fancy, expensive dress. A hall full of people I don't know who claim to be family members and friends. I know we talked about all of this already. We had decided smaller was better, especially since we don't have enough family and friends between us to fill that hall, much less a church.\"\n\nHe caressed my cheek now, wiping away a couple of stray tears that trickled down from the corner of my eye when I blinked.\n\n\"What if we go even smaller?\" I sat up a little, turning to face him. \"Just you and I at the courthouse? My mother of course, and someone if you want them there.\"\n\nHis forehead furrowed. \" I thought you wanted to get married on the beach?\"\n\nI smiled. \"I did. I love it there. Hell, I'd live there all year round if we could. But this is more practical. Instead of flying out there to get married on the beach and then flying off to some other country afterwards, what if we just went to the beach house for our honeymoon? You know we wouldn't get bored. Plus, we've been talking about going to Europe early next year for a convention.\"\n\nHe pressed my head to his shoulder again and was quiet for a long time. If not for his fingers playing idly with my hair, I would have thought he'd fallen asleep. Finally, he said, \"Have you've been thinking about this a lot?\"\n\n\"Just within the past week.\" I sat up a little and palmed his rough cheek. He'd not shaved in a while, and it was quite disarming. I made a mental note to tell him that I liked this look before I refocused my thoughts. \"But I don't want to make all of the decisions. It's your wedding, too.\"\n\n\"I'll consider what you've proposed.\" He pulled me back against his chest and kissed my forehead. \"Oh, I wanted to tell you what the detective said.\"\n\nI let out a soft groan. \"What could he possibly have wanted?\"\n\n\"Get this. He couldn't tell me all of the details, but Jesse and Juliet are both being deported this week. Apparently, they are originally from France and have dual US citizenship. But they were caught smuggling drugs when they were flying out of O'Hare a couple of weeks ago. The police suspected, but they didn't have any hard evidence. Until now.\"\n\nI contemplated the words he'd just said. \"Oh, my God! Do you think they drugged your wine\u2014\"\n\n\"Yes. I'm sure something was in the glass they gave me the night before the accident. You know I'm not a heavy drinker, but I can hold my own. There's no way that I should have been that out of it after the small number of glasses I had. I'd considered being drugged, but they were pouring their own glasses out of the same bottle. I can't remember if they brought me a full glass to at first or an empty one and filled it afterwards. Maybe the drug was on the rim. Or added later. Hell, maybe they were on drugs, too, but they were used to it so they weren't affected as I was. But it explains why my memory was so sketchy that next morning.\"\n\n\"I'm so sorry.\" I ran my hand along his cheek as I stared up at him. \"It seems so easy to slip something into a drink these days...\"\n\nHe was silent. Watching me. As if he was waiting for me to figure something out.\n\nHis words circled around my head, but I couldn't make any other sense out of it. Until I realized what I'd said. I sat up with a start. \"That French man at the bar! The one who helped Brian kidnap me!\"\n\nMalcolm nodded slowly. \"It was confirmed that Jesse and Juliet provided him with product from their trips out of the country. They had nothing to do with Brian, though, just the drug dealer. Jansen is working with the detectives who handled your case to bring charges against the three of them. He wanted you to know that we shouldn't have to worry about them again.\"\n\nI settled back into his warm embrace. We sat silently for a while. All I could think about was that it was all over. Finally.\n\nAnd then another thought trickled into my brain. I wouldn't have even considered it before this conversation. It killed me to ask it, but I had to know.\n\n\"Malcolm?\"\n\n\"Yes, sweetie?\" he sounded absentminded. As if he was thinking of something himself.\n\n\"How can you afford the beach house?\"\n\nHis body shook under me. \"It's not drug money.\"\n\n\"Well that's a hell of a relief.\" I laughed as well. \"But I'd still like to know. Am I marrying a billionaire or a man with a mortgage that can never be paid off?\"\n\n\"Neither.\" He pulled me in tighter and kissed my cheek. \"I'm a millionaire.\"\n\nI playfully thumped my fist against his chest. \"Stop teasing me.\"\n\nHe shrugged. \"I'm not. My great-grandfather was in the steel business when it first got started in the thirties. He passed some money on down to me after he died. I made some good investments. My net worth is about four-point-seventy-five million. I can show you the bank statements. But as for the house, it's been in the family for years. I inherited it, too, much as you inherited this condo. Before my grandfather passed away, he had opened an account that was solely to be used for the taxes. It's still paying them today. Like my father before me, I just have to pay the utilities and insurance.\"\n\nI blinked at him.\n\n\"The extended family used to go there for summer vacations. Three months out of every year. Man, I always looked forward to it. There used to be a lot more beds in the bedrooms to fit all of the adults back then. Us grandkids slept in bunk beds. My dad was the oldest sibling, so he got the house. Then I got it from him.\"\n\nMy mouth had been hanging open the whole time he was talking, but no sound came out. Finally, my voice box was working again. \"What? How? Did you not think that was something you should have told me be now?\"\n\nHe smiled at me. \"I didn't want you to marry me just for my money.\"\n\n\"Ugh!\" I crossed my arms and pretended to pout. \"You're lucky I love you just the way you are.\"\n\n\"Oh, Becca, you know your money is the only reason I'm marrying you.\"\n\nI thumped him harder in the chest. He just chuckled and turned the TV sound back up.\n\n###\n\nIt was two weeks later before he brought up the subject of the wedding again. We'd spent the day at the hospital getting follow-up X-rays. The fractures on Malcolm's ribs had healed completely. But Dr. Runyon wanted to keep the leg cast on for another week.\n\nI made dinner after we got home and tuned out the baseball game he'd turned on while we ate. While I wasn't a sports nut, I knew enough to watch the occasional game with him and make comments. He either didn't notice or seem to mind that I wasn't paying attention tonight. I was contemplating, instead, what the doctor had told me as Malcolm was getting dressed this afternoon.\n\nWhen we finished eating, he went to the bathroom with the aid of his crutches. And a string of curse words describing just what he thought of his cast as he had to maneuver into the smaller bathroom and get the door closed. After he returned, he of course needed me to help him get situated once again. He grumbled the whole time.\n\n\"Woman, I swear. Quit blocking the game.\"\n\n\"You think I like waiting on you hand and foot?\" I frowned as I finished positioning the heel of his cast on a pillow and ottoman. I wasn't happy with him having to keep the cast on, either, but we had to deal with it.\n\n\"Yes, I think you enjoy it immensely.\" Malcolm made some kind of grunting sound as I stepped between him and the TV one more time, clearing away his dishes from dinner. He swatted at me with the rolled up newspaper.\n\nI squealed as it connected with my ass, and I hurried from the room to clean up the kitchen.\n\nI finished and dried my hands before making sure the house was locked up. Then I went upstairs to carry out a plan I'd concocted while loading the dishwasher. I'd unknowingly set it in motion the day before. Sue had insisted we browse the wedding decorations at a party store after our lunch, although I'd told her we weren't going to be decorating anything. I'd spotted something in the costume area instead and bought it with the thought that I'd use it for the Halloween party at the club later this year.\n\nNow, I thought that maybe it would help Malcolm with the bout of getting frustrated with every little thing. I had noticed it more within the last week, and it had only deepened since the doctor's visit. He had been sitting around with a scowl on his face and his arms crossed while he watched TV. Or at least stared at the screen. Then there was the increased swearing when he was trying to do something but had to do it slower due to the crutches...or not at all because of the cast.\n\nI knew that his job played a factor, too. Out of the past school year, he'd barely worked three full months. And most of the time off was because of me. He was tenured, so he couldn't be fired, but that didn't mean it didn't bother him. He loved his work, so being unable to get back there quickly had to be eating him up inside. He hid it pretty well, but I knew him. Adding onto that the delay with removing his cast, I decided he needed some cheering up.\n\nHis recovery had taken its toll on me as well. Not to mention, I was fucking horny after having to use my hand and toys lately. At first, I wasn't going to mention my private sessions. I'd been embarrassed that I couldn't control myself. But once I had told him, he'd not only encouraged it, he'd admitted\u2014a little sheepishly\u2014that he had succombed to lust a couple of times as well after seeing me around him so much. He'd promised that he'd been careful, and I held no more guilt that I'd found release on my own.\n\nI replayed Dr. Runyon's words from this afternoon in my head: we could have sex as long as Malcolm was careful not to overexert himself. While his ribs were healed, his body wasn't used to rigorous activity. We'd have to build up to that slowly. But the doctor was confident that eventually, we'd be able to return to having rough sex. I hadn't elaborated any more than that when I'd asked the question, and she hadn't pressed. Thank God.\n\nI'd not mentioned the news to Malcolm lest I give him false hope. I'd have hated to be too tired after he anticipated sex all day. Of vise versa. I'd even thought of putting it off until tomorrow. But my intuition told me we both needed it tonight.\n\nA few minutes later, I sauntered down the stairs and into the living room.\n\n\"Can I get you anything else, Mr. McClaren, before I prepare your bed?\"\n\n\"Nope, I'm good.\" Malcolm didn't even take his eyes off the TV, although the game he'd been watching had gone to a commercial break.\n\nI stepped between him and the TV. \"Are you sure, Mr. McClaren?\"\n\n\"Holy shit!\" He fumbled with the remote. A moment later, the room went silent and the TV screen dark.\n\nI propped one hand on my hip, and I twirled the end of the plastic stethoscope with my other hand.\n\n\"Um, another pillow maybe?\" He pointed to the pile he'd haphazardly created this morning when he had gotten up.\n\nI turned and bent down at the waist, letting the edge of the white mini-dress ride up to show I wasn't wearing any panties...just a garter belt and stockings.\n\nHe whistled long and low behind me.\n\nI fluffed up the pillow and placed it behind his head. I made sure I leaned over far enough that my breasts\u2014which were already falling out of the top of the fake nurse's uniform\u2014were close to his face. I felt his hot breath against them as I stood up. \"Anything else, Sir?\"\n\nHis Adam's apple bounced noticeably as he swallowed. \"What do you recommend, doctor?\"\n\n\"Oh, I'm just a nurse,\" I smiled coyly. \"But Dr. Runyon said you're clear for extracurricular activities as long as you're careful. I'm just here to do some routine tests so you can be discharged.\"\n\nHe seemed to be holding his breath as I put the earbuds of the stethoscope into my ears and placed the small disc end to his chest beneath the robe he'd thrown on over his T-shirt once we'd gotten home.\n\n\"Take a couple of deep breaths, please.\" It was so hard to say it without laughing. He'd just done this earlier with Dr. Runyon. I'm sure that whatever was going through his mind right now wasn't even a figment of his imagination a few hours ago.\n\nHe complied with my request.\n\nIt may have been a toy, but the plastic thing sure let me know his heart was racing as I moved it around. That could have been because his face was eye-level with my breasts, as well. I smiled and stood upright. This was going to be so much fun.\n\n\"Your heartbeat is a little rapid, Mr. McClaren. Is something making you anxious?\"\n\n\"Well, ma'am,\" he said, pausing to gulp again, \"I do get a little nervous around doctors. And nurses.\"\n\n\"There's nothing to be nervous about, Sir.\"\n\nHis eyes flashed at that last word. I prayed he wouldn't ruin this by usurping control. Thankfully, he remained silent.\n\n\"I should check your temperature. You look a little flushed.\" I proceeded to lean down again and lightly pressed my lips to his.\n\nHe flinched at the sudden, intimate gesture. As he recovered and tried to deepen the kiss, I pulled back.",
        "\"Hmm. I don't think my thermometer is working right. I'll have to try another one.\"\n\nOne of his eyebrows arched up.\n\nI retrieved another pillow in the same fashion as before. This time, I set it on the floor by his good foot. I turned around with my back to him and maneuvered the ottoman farther away, spreading his legs. I gasped as I felt his hands on my hips and his thumbs caressing my ass through the thin, Lycra material of the sheath dress.\n\n\"Mr. McClaren! That is very naughty of you!\"\n\n\"I won't tell if you won't,\" he breathed, his hands sliding over the bare skin of my thighs now below the edge of the dress. They stopped halfway down, tracing the edge of the stockings and the straps of the garter belt.\n\nI slapped his hand away and faced him. \"Now behave!\"\n\n\"Yes, ma'am.\" He was grinning like the Cheshire cat now.\n\nI knelt between his legs and pulled a latex glove out of the mini pocket in the skirt of the dress. I made a show of snapping it on. His smile wavered, and I grinned. I pulled his cock free of his boxer shorts and proceeded to dip my head, taking just the tip of him into my mouth.\n\n\"Oh, God!\" He hissed as I bobbed my head.\n\nI moaned around him, relishing the feel of him against my tongue. It had been too long. I pulled back, and he fell out with a plop. I rubbed my gloved hand over his shaft and sighed. \"I think you have a fever, Mr. McClaren. You're very warm.\"\n\n\"How do you cure that?\" he was panting now.\n\n\"I would recommend more heat. A wet washcloth usually does the trick.\"\n\nHis eyes closed for a moment. They were as dark as obsidian when he opened them again. \"What if I don't have that?\"\n\n\"We get creative. We just need something warm and damp.\"\n\nI pulled off the glove and lowered my head, my eyes on him. I licked around the tip again before taking him in until he bumped the back of my throat. He grew harder the more I sucked. And his hands found their way to my head, guiding it.\n\nMy hands gripped and stroked what wasn't in my mouth. I moaned at the feel of him under my fingers. I'd almost forgotten the hardness and strength under such a malleable disguise.\n\nAfter some time, he pulled my head up.\n\n\"Nurse Becca,\" he said, his words strained, \"I think I need some more intense physical therapy, if you'd be so kind.\"\n\nI broke my role. I suddenly didn't care what the doctor had said. I was more concerned about my fianc\u00e9's well being. \"What if I hurt you?\"\n\n\"I'll be fine. Nothing will hurt more than it already does.\" His voice was tight. \"Please. I need you, Becca.\"\n\nI nodded and rose, cinching up the hem of the dress. He helped me straddle his waist, mindful of the cast on his leg. He parted his robe, and I pushed up his T-shirt, caressing the mostly faded bruises over the left side of his chest. Slowly, I lowered myself over him. We moaned in harmony as we connected.\n\n\"Put your hands on my shoulders.\" His hands circled my waist, holding me still as he throbbed inside me. \"Lean forward.\"\n\nI sighed as his tongue trailed over the swell of my breasts. His nose buried in the valley between my mounds as his hot breath caressed my skin.\n\n\"Rock gently. Yes. Like that.\" He struggled for a moment to get his arms free of the robe, and then he pulled his shirt over his head.\n\n\"Do you need a safe word,\" I said between gasps, one of them coming out as a giggle. My fingers spread over his skin now. Familiarizing themselves once again after so long.\n\n\"Chewbacca.\" His eyes clenched for a moment. \"Fuck, you feel so good.\"\n\nI lowered my lips to his, moaning my agreement.\n\nIt took awhile, but I reached orgasm. Afraid I'd injure him if I rode him out, I climbed off and finished him with my hands and mouth. He relaxed with a deep sigh, sweat coating his forehead and chest.\n\n\"Looks like you could use a sponge bath,\" I giggled.\n\nHe started to chuckle but held his hand to his chest. \"Oh, God, it still hurts to laugh.\"\n\nI reached for the pill bottle on the end table. \"I can take care of that, too, Mr. McClaren.\"\n\nOnce he'd been medicated, he pulled me to lay down on the couch next to him, my head on his lap. His fingers played with my hair, relaxing me even more.\n\n\"I've given your proposal a lot of thought.\"\n\n\"Hmm?\" A small part of my brain went fishing for what he was talking about. The rest of me was still gently floating down the river of true post-coital bliss not self-induced, a forgotten feeling after six weeks of abstinence.\n\n\"I have a counter-offer to make.\"\n\nI rolled onto my back, smiling up at him sleepily. His eyes were still slightly dark. Which made me wonder what mine looked like just before, during, and after sex. Did they get all shadowy like his? Was it just his pupils dilating? Or did my eyes get hazy from arousal so his appeared to be darkening, too?\n\nI blinked away my random thoughts as I saw him watching me with his lips pressed together. A telltale sign he was waiting for me to pay attention. \"Sorry.\"\n\n\"Maybe I should wait until you've fully recovered.\"\n\n\"Nope. I'm good.\" To prove it, I sat up. I felt a little dizzy, but I said, \"Lay it on me.\"\n\nHe arched an eyebrow at that, his forehead creasing, but he continued. \"I agree that a simple ceremony is all we need to officially become husband and wife.\"\n\nI started to comment, but he shook his head. So I just nodded.\n\n\"I also won't be going back to work in the fall.\" He held up his hand when I opened my mouth again. \"At least not in Wheaton. I've been talking with Mr. Sanders, the principal at my school. With this past year off for the most part, it has given me a lot of time to think about if I want to stay in teaching or not. I've had a couple of interviews over the phone since I'm laid up here, and I've been offered another job. It's teaching at a university, not a high school. The condition is that I also have to get my Masters. Which means I'll be taking some classes myself.\"\n\nI waited a good five count to make sure I wasn't interrupting him before I asked, \"Where at? Here, in Chicago? At least in Illinois?\"\n\n\"No, it's working between Georgetown and Lewes satellite campuses for the University of Delaware.\"\n\nI frowned. \"Now you're just teasing me.\"\n\n\"I'm serious, Becca. I don't have to work at all. I told you that a few weeks ago. But I enjoy the work. And I'm willing to do whatever or go wherever it takes as long as you're happy.\"\n\nI jumped up at that, my euphoria gone, and backed away from the couch. I suddenly wished I had more clothes on. \"I'm happy with you! You're all I need.\"\n\n\"You said you would love to live at the beach house. Both campuses are less than thirty minutes from\u2014\"\n\n\"It was a pipe dream!\" I squeezed my eyes shut. \"Never in a million years would I have thought\u2014\"\n\n\"Why not? We have the means to do it.\"\n\n\"Because it doesn't make any sense!\" I was pacing now, trying to process it all. \"People don't just get a dream job and move to the beach. That's the stuff of movies and fairytales.\"\n\n\"Becca, sit down, please. I can't follow you around the room like this.\"\n\nI stared at his cast for a moment and then obeyed. The moment my butt hit the cushion, he took my hands in his again.\n\n\"I am perfect whenever and wherever I am with you, Becca. I'd be content to stay here in this condo with you for the rest of our lives. I'd make it work. Because you'd rather be here than in Wheaton. But I know where you really want to be. That's at that beach house. Away from the turmoil of the city. This is our chance to make a new start. Together. I just want to make you happy. I know how un-Domly that sounds, but it's true. Sure, I go by the title of Master. But the only thing I've ever wanted to master in my life is your heart.\"\n\nI would be lying if I said I wasn't crying. I couldn't stop the tears. They were hot, and I could taste the salt in them as they trickled past my mouth and I licked at my dry lips. Malcolm face wavered before me. I blinked to clear my vision, which only made me cry more at his smile.\n\nHe didn't pressure me to make a decision. I didn't need time, though. I'd known my answer for the past six months. I'd just been too afraid say it out loud. But now...\n\n\"I want to live at the beach house with you, Malcolm. Isolated from the rest of the world. I'll write in my study overlooking the ocean while listening to the waves crash just yards away. You'll teach math to preppy kids who go up to the Hamptons on the weekend when you're not taking classes. And in our free time, we'll lie on the beach or perfect the art of kink in the Black Room.\"\n\n\"Wow! Where did that come from?\"\n\n\"It's what I dreamed. What I envisioned when you forced me to come back home last fall. Something I'd desired but cast it off as wishful thinking. But I think it sounds like it is soon to be our reality.\"\n\n\"Don't forget that we're going to travel the globe attending conventions to buy bondage stuff for our private attic dungeon and sell your kinky books.\"\n\nMy heart was beating a mile a minute. \"So we're moving?\"\n\nMalcolm's eyes lit up, and he got a silly smile on his face. He nodded and then pulled me in for a kiss. When we separated, panting, he whispered, \"Yeah, we're moving.\"\n\n###\n\nJuly was a welcome sight to see. It had been a month since the cast had come off and we had put Malcolm's house on the market. He had moved into the condo, which we were going to keep for whenever we visited the Midwest. He was improving well with physical therapy, and I had finished \"Triple Tease: The Shameless Sister,\" which Sue was gleefully reviewing the final edits of.\n\nOn a warm, sunny Saturday afternoon, a week after the holiday, I finally became Mrs. Malcolm McClaren. Much to my delight, as well as Malcolm's. Although Sue insisted we continue to use my maiden name for my books. I told her we would have to talk about it later.\n\nIt wasn't the wedding I'd envisioned as a little girl. No elaborate flower arrangements that would wither in an hour. No drawn-out walk down the aisle to archaic music on the arm of my father who was trying not to cry as he gave his baby girl away. No dramatic bridesmaids in colorful, matching dresses they'd never wear again and probably secretly hated. No bossy photographer who took up two hours of our time so we could put a bunch of photos in an album we'd never open past the first year or two. And least of all, no noisy reception with so much food I could only smell but not eat because my expensive dress had been altered to only fit if I was holding in my breath.\n\nIn other words, it wasn't your typical wedding at all. But it was in no way a dull ceremony. And I'd never forget it...or tire of talking about it.\n\nI got ready in the suite we'd reserved at the Palmer House hotel in downtown Chicago. Our plan was to use the next week as our honeymoon here in the city. Malcolm had wanted me to show him all the sights as he swore he'd not been to most of the museums. I think he was partially fibbing, but I let him believe I believed him. Though I had a feeling we might not make it out of the room much.\n\nAfter we checked out next Friday, we were driving to Delaware in his car. The bulk of our possessions that would be moving with us were already on a truck headed east with my car in tow. Anything else we needed was packed with our baggage in our suite.\n\nMy mother gushed over wanting to put my hair up, but I'd wanted it down. Besides, what did it matter? We were just going to be standing in front of a judge in a courthouse. I even thought my dress was a little over the top, but I'd let her talk me into it. In the end, I let her win with my hair as well. I mean, how often did she get to give away her only daughter? I was actually pleased with how she'd managed to fix my hair as both an up-do with still plenty of tresses hanging down.\n\nWe were meeting Sue downstairs and taking a cab to the courthouse where Malcolm would meet us. I struggled not to roll my eyes as my mother fretted over me in the elevator, making sure every detail was perfect. I was still trying to swat her away from straightening the silver chain around my neck with the diamond teardrop pendant\u2014a gift from Malcolm I'd found this morning\u2014when the doorman opened the door for us to exit out onto the street.\n\nI froze in the doorway, my hand covering my mouth. \"Oh, my God!\"\n\nRight there on Monroe Avenue was a white, open carriage with a white horse. A man in a black top hat and tails stood beside the carriage with a small chalkboard sign that read 'Mrs. McClaren.' He tipped his hat to me and held out his white-gloved hand.\n\n\"Your groom said no cabbie was taking his bride to her wedding ceremony,\" my mom whispered in my ear. She took my arm and led me forward down a short red carpet\u2014which made me giddy with laughter\u2014 as people gathered on the sidewalks to see what was going on.\n\nSomehow, I managed to climb up into the carriage. Then I was being driven through the streets of Chicago with my mother and book editor. It took me a moment realize we weren't heading toward Randolph where the circuit court was for Cook County.\n\n\"And he said you weren't getting married in a courtroom, either,\" Sue grinned from her seat as she caught me rubbernecking to figure out where were going.\n\n\"Can you tell me where we are going?\" I said once I'd found my voice again.\n\nMy mother patted my hand and smiled conspiratorially at Sue. \"You'll find out soon enough.\"\n\nI was practically bouncing in my seat as people waved at us and whistled and honked car horns. My cheeks were hurting from smiling, and I was ever thankful that my hair was up off my face. I was glad I was sitting down, too, when the carriage finally rolled to a stop near Buckingham Fountain.\n\n\"He didn't!\"\n\n\"He did!\" Sue said, clapping her hands, bouncing in her own seat.\n\nSure enough, as soon as I was helped down from the carriage, I saw Malcolm standing beside three other men by the famous fountain. A new crowd of onlookers had gathered nearby on the far side of a white chain fence that had been put up around the west side of the fountain.\n\nA bouquet of four, long-stem red roses tied with a black ribbon mysteriously appeared from the carriage driver. I clutched them, barely able to mouth my thanks. My heart had never beat so fast in my life. I had to count to twenty to breathe slow enough that I didn't feel like I was going to hyperventilate.\n\nI could see Malcolm in a black tux with a red cummerbund. He looked so tall and distinguished. He'd trimmed his dark hair, but the breeze tousled the still-lengthy locks the way that always melted my heart. And as we got closer, I could see the roguish two-day shadow I'd convinced him to keep. My knees grew weak, and my feet felt like they barely touched the ground as we approached, my mother on one side and Sue on the other, practically supporting me.\n\nThe fact that Malcolm had staggered backwards with his hand to his chest told me that I'd chosen my dress wisely. The silk, floor-length Henry Roth sheath dress from Kleinfeld's\u2014a purchase on a secret girls' trip to New York when he was in Delaware finalizing his new job\u2014had been everyone's favorite, including mine. The scoop neckline tastefully showed off the ladies, and the draped low back made me feel elegant and young.\n\nIt hit me right then and there that this was the wedding I'd always dreamed of. I hadn't wanted opulent and fussy. But I'd wanted elegant. Romantic. Yet simple. Malcolm had really read my mind without me even realizing it.\n\n\"You are amazing,\" I breathed once I'd come face-to-face with most the perfect man in the world. At that moment. At any moment. My heart swelled with love, and it was making me dizzy.\n\nMalcolm took my hand and lifted it to his lips. \"Did you really think I was going to marry you in front of a judge? You deserve so much more.\"\n\nMy cheeks grew warm, and I knew it wasn't the summer sun. \"I don't deserve you.\"\n\n\"Maybe not, but you've got me now.\" He winked at me.\n\nI waved at one of the men standing by the fountain, and he waved back. I knew Malcolm had called Darryl to be his witness. I had been shocked to learn he lived in Maine, not Canada, so maybe we'd be seeing more of him in our future. I had asked him if he could hook me up with some female subs on the East Coast to become friends with. He'd only said, \"Maybe\" with a smile in his voice, and promised to show us where the clubs were out there.\n\nMalcolm took my arm and led me over to the other man who silently stood with his hands clasped and a smile on his face. \"This is James Duncan.\"\n\n\"Reverend Duncan, ma'am.\" He shook my hand between both of his.\n\nI glanced between the two of them and arched an eyebrow. \"It's very nice to meet you, Reverend.\"\n\nIt was the reverend's turn to wink at me. And I had no doubt he was someone Malcolm knew from the scene, if not the club. Calling in an old favor, perhaps.\n\nReverend Duncan gestured toward the fountain. \"Shall we get started?\"\n\nMalcolm and I both nodded eagerly.\n\nThe ceremony was short and sweet. After the vows, the rings, the kiss, and the announcement, the surrounding crowd\u2014our impromptu guests\u2014erupted into a loud chorus of clapping and yelling, wishing us both the best.\n\nI gave Darryl a warm handshake, and he pulled me into a hug in return. \"You look ravishing, Becca. I've never been more jealous of Malcolm than I am today. Take good care of him, please. From what I hear he's waited a long time for you.\"\n\nI'd barely had time to recover before my brother, Alexander, was hugging me as well. He had brought his girlfriend, Cameron, who had been on-again ever since Christmas. And she was sporting a new diamond ring. She really was the perfect fit for him. It just took him awhile to figure it out.\n\n\"I love you, Becca. I don't know what all happened with Drake, but I'm proud of you for sticking up for yourself.\" He tilted his head toward my new husband. \"You picked a good one. Don't let him boss you around too much.\"\n\nI bit my cheek as I smiled and hugged my big brother. If he only knew. But I simply said, \"I won't. I promise. I'm so happy for you two.\" I turned to hug Cameron and whispered in her ear, \"You'll have to tell me all about it.\" She just grinned, nodding her head. Probably a reflection of myself at the moment.\n\nI'd only spent a few minutes crying this morning about Drake and Daphne's absence, and then I'd dried my face and applied my makeup. I'd actually forgotten about them until Alexander mentioned our missing sibling's name. I hadn't told them about the wedding. I didn't want Drake showing up to ruin my day, as brief and unpretentious as I had intended it to be. I'd send them a wedding announcement and leave it at that. When my mother had asked last week if Drake was coming, Malcolm had taken her aside. I don't know what he told her, but she didn't bring it up again.\n\nSue couldn't stop bawling. She had linked arms with Cameron throughout the ceremony. I gave Cameron a lot of credit for keeping a smile on her face the whole time. As for Sue, but I wasn't sure if she'd finally lost it because I was becoming a Mrs., or that I was moving to the East Coast and she wouldn't see me as much.\n\nBoth my mom and Darryl took pictures. Malcolm had hinted about the latter maybe having some secret hobbies of taking photos of women with less clothes on. I couldn't wait to see how he'd captured our special day. Maybe I'd find the courage to let him try his hobby out on me once we'd moved. With Malcolm's approval, of course.\n\nMalcolm and I had a short carriage ride around the city to celebrate. Then we met back up at the hotel where our small group of six had a late lunch in the Lockwood Restaurant. We laughed. We cried. We ate too much. Malcolm disappeared for a short period, and I felt a strange emptiness when his hand had let mine go for the first time since we'd met up at the fountain this morning.\n\nThis whole day was the best damn wedding celebration I'd ever been to. I wouldn't have wanted it any other way. I didn't want it to end. But eventually, our guests had to bid us adieu.",
        "As I watched them all leave, Malcolm slipped his arms around my waist. His eyes were bright as they looked down into mine. \"I love you, Mrs. McClaren.\"\n\n\"And I love you, Mr. McClaren.\"\n\nHe rubbed his thumb across my lips before he kissed me softly under the chandelier in the hotel lobby. \"What do you say? Care to go upstairs?\"\n\nMy cheeks heated now, and I leaned back to look up at him. \"Yes! A thousand times, yes! Please, lead the way.\"\n\nIn the elevator, he held my hands and stared into my eyes. Neither of us spoke, but we were both smiling like love-struck teenagers. My heart skipped a beat as his smile widened at whatever he was thinking. I wished I could read his mind at that moment.\n\nThe bell dinged that we'd reached our floor, and he raised my hands to his lips. My engagement ring and the matching diamond-encrusted wedding band sparkled off the lights and mirrors around us. His lips brushed over my knuckles. Then he was tugging on my hands, walking backwards as he led us to our suite. The grin on his face was borderline devilish now. It made my heartrate increase even more.\n\nHe unlocked the door and pushed it in. I started to enter, but his hand on my arm stopped me.\n\n\"You're my wife now. I'm doing this right.\"\n\nI tried to stifle my giggle but failed as he scooped me up in his arms. I planted a kiss on his lips as he stepped over the threshold. I was still giggling when he set me down in the sitting area.\n\n\"Stay here for a moment.\" He kissed me briefly before he disappeared into the bedroom, shutting the doors behind him. He wasn't gone long before he returned, sans tuxedo jacket, and scooped me up a second time.\n\nAs set me on my feet at the end of the bed, I gasped and gripped his arms.\n\nHe'd pulled the white comforter back and folded it at the foot. A scattering of blood-red rose petals decorated the puff there. He'd pulled the sheets back as well but to the side at an angle, making the bed look very inviting. Candles were lit on the nightstands flanking the headboard and on the dresser across from where we stood. The flames reflected in the large mirror there, giving the otherwise dark room a warm glow.\n\nI couldn't move. My whole body was shaking. I could only imagine the sights we'd see in that mirror tonight. This week. I thought back over this whole day. How much effort he had put into it to make it special. Perfect. He'd had to have planned it well in advance. Especially since he'd been pushing me to get a good wedding dress for months. I was afraid to ask if I'd waylaid any elaborate plans for a beach wedding by changing the venue. Or had he arranged all of this after my proposal to simplify?\n\nI felt his warm hands on my arms before his voice whispered against my ear.\n\n\"Did I tell you I love your dress?\" As if he had to emphasize which one, one hand snaked down my side to my hip, over my ass, and then up my back, making me sigh.\n\nI nodded, looking up into his eyes as he rounded me and tilted my chin up. They drew me in, and I got lost every time. I couldn't wait to drown in those brown depths for the rest of my life.\n\nHis voice broke into my thoughts again as his fingers caressed my cheek, his voice very soft. \"Now would normally be the time I'd let you go get comfortable so we can have sex for the first time. But since we're so unconventional, we can skip right to the good stuff.\"\n\n\"I bought a new nightgown,\" I whispered. It was true. Why my addled brain thought that was important to bring up right now, I wasn't sure.\n\nHe chuckled. \"Sweetie, I'm sure it's lovely. But I don't want to see you in a nightgown. I want to see your body. You can wear it tomorrow night if you insist. Just know that it won't stay on for long.\"\n\nI licked my lips and gave him a silly grin. \"Okay.\"\n\n\"God, how I love you woman.\" He lowered his lips to brush them against mine.\n\nHe did it twice more, pulling soft gasps from me. On the third time, he pressed harder. He took a step closer to me, which made my head lean back further. He supported my neck with one hand, and the other snaked around my waist to hold me to him.\n\nMy fingers skittered over his arms, feeling the muscles beneath his shirt. Our tongues teased, delving into each other's mouth as our breathing grew ragged. When he pulled away, I cried out in surprise, gripping his arms now.\n\n\"I want to undress you,\" he said between gasps. \"To touch you.\"\n\nI could only nod my approval. We'd done everything imaginable and then some when it came to sex over the past three years. But right now, I felt like he'd never touched me before. I couldn't wait for him to do it. It made my heart flutter. My legs tremble. My breathing erratic.\n\n\"Becca, tonight I'm making love to my wife. No safe words. Just plain, old, vanilla sex. Like the first time, only better.\"\n\nI let out a shaky sigh of anticipation, my fingers digging harder into arms. The very first time had been anything but old and plain. I'd never had better first-time sex with a guy in my life. And as much kink as we incorporated into our sex lives now, I still loved those days of old-fashioned missionary style and long, lazy hours of just exploring each other's bodies, come what may. I had a feeling that this week was going to be a lot of that, and it thrilled me to no end. There would always be time for kink later.\n\nOnce he made sure I was steady and I'd released him, he ran his hands over my shoulders. Down my arms. As if magnetized, they gravitated toward my breasts. It was the lightest touch on the underside of my curves through the material of the dress, but it felt like he'd stroked my pussy. My body shook, and I cried out.\n\n\"Mmm,\" he said. His caress continued, moving up slightly so my nipples didn't feel neglected.\n\nMy eyes closed, and I sighed as he increased the pressure, cupping and gently squeezing. I silently thanked him for not making me watch him. I wanted to fall completely into him on my own terms tonight. To just feel without thinking about following rules.\n\nBut my eyes fluttered open on their own as his lips grazed along my collarbone. His tongue darted out and traced the swell of my cleavage. I wanted to touch him as well, but his hands circled my wrists and pressed my arms to my sides before I could raise my hands any higher than my waist.\n\nI wanted to ask him why he restrained me, but I couldn't find my voice.\n\nAnd then suddenly, he released my wrists. His fingers circled my hips instead. I held my breath and watched as he slowly lowered to his knees, his mouth planting kisses along the front of my dress. He was now level with my pelvis, and his nose pressed against the fabric. I heard his deep inhale, as if trying to pull my essence through the silk.\n\nI moaned as he suddenly looked up at me, his hands stroking my hips. They slid around behind and cupped my ass. He squeezed my cheeks\u2014making me gasp\u2014and planted another kiss on my pelvis through the dress before he stood.\n\n\"Please.\" It was a breathy request as I raised my hands to his chest.\n\nHe nodded his consent.\n\nMy heart thumped in my ears as I tried to seduce him as he had done to me. I felt the hardness and heat of his body as my fingers spanned over his chest. His shirt was a cool contrast. It was fitted and looked quite handsome on him. But it was in the way.\n\nI reached behind his waist, my hands shaking as I released the cummerbund. As I loosened and removed the bowtie. I licked my lips as I pulled his shirt from his waistband and lithely undid each button. His fingers were grazing up and down my bare arms, distracting me. I was imagining what else those deft fingers of his were going to do tonight.\n\nHe sighed as my fingers slid under the sides of the shirt and parted it, revealing his tanned chest and a smattering of dark hair. My eyes followed my fingers as they traced the carved V that started at his hips and disappeared into his pants. He gasped and increased the pressure on my arms, making me grin. I loved it when I hit a sweet spot on him. I had unbuttoned said pants and lowered the zipper before his hands covered mine, stopping me from going any further.\n\n\"I really do love your dress, Becca. I'm glad you chose to get one.\" The open waistband hung on his hips, revealing a triangle of his black boxer briefs as he shrugged the shirt off. He walked around behind me, and my eyelids lowered as he brushed my hair to the side before his lips touched my shoulder. His warm mouth moved down to the skin between my shoulderblades. \"I'm not a connoisseur of wedding gowns, but I couldn't have imagined a better one for you. It fits your body so well...\"\n\nI trembled as his mouth followed the deep scoop of material along my back. Occasionally, his tongue glided under the edge of the fabric, teasing the skin there. I gulped for breath. \"You're driving me mad.\"\n\n\"Good.\" He released the buttons from my mid-back down to my ass. Then he slid his hands inside the parted fabric to my hips. His thumbs stroked my skin as he pressed his lips to my shoulderblades again. \"Just so you know, the feeling's mutual.\"\n\n\"Good,\" I said, echoing him. Then I moaned as his hands rose, still inside the dress, and suddenly cupped my breasts. I leaned back, grateful that he was right there to prop me up.\n\nMy nerves felt like I was on crack\u2014trust me, I knew the feeling\u2014as he teased and stroked with his hands, all while I was still dressed. His teeth nibbled at my neck now, his lips and tongue soothing any lingering stings.\n\nI reached behind me, needing to hold onto something, but he chose that moment to pull his hands free. A moment later, he was in front of me again. I was staring wide-eyed at him\u2014wanting him to kiss me\u2014when his hands pushed the straps of my dress off my shoulders. Cool air brushed over my breasts as the material slinked down my body.\n\n\"Good God, woman! I'm glad you didn't tell me you weren't wearing anything under that dress. I wouldn't have lasted through the ceremony. Or the carriage ride. Or the meal.\"\n\nIf possible, my grin grew even wider. I'd nixed not only a bra but also panties and stockings this time.\n\nHe stared at my naked body, his tongue running over his lips. The tingling deep within me grew stronger the longer I watched him watching me. As I noticed the ever-growing bulge in his pants.\n\nWhen he held his hand out to me, I stepped out of my heels and the pool of silk worth almost three grand now lying on the floor. I placed my free hand on the necklace he'd given me, he paused to remove it and put it in his pocket.\n\nTogether, we walked to the side of the bed. Finally, he cupped my face and lowered his mouth to mine. I was gasping for breath by the time he released me. My hands were more steady as I sat down and reached out to give his pants the extra tug to remove them. By now, his hips and ass weren't the only thing holding them up, so it took a little more effort on my part.\n\nHe gasped as his cock sprang free. I reached out to hold it, and we both moaned. I lifted my eyes to his as I stroked gently. As his eyes darkened in the candlelight, I increased the pressure. Swiped the pad of my thumb over the tip. Cupped his balls. I felt the shivers run through his body. When I leaned forward to take him into my mouth, to worship him more, he lifted my chin. He was shaking his head, his breath coming out in quick pants.\n\n\"Later. I want you. Now.\"\n\nI scooted onto my back, holding my hand out to him. He raised it to his lips. His body was hot as it covered mine. A welcome heaviness. Our mouths joined briefly as he adjusted himself between my legs.\n\nAs anxious as he seemed to be to get right down to the deed, he took his time kissing my eyes, nose, cheeks, and jaw. The muscles in his back undulated when I skimmed my fingertips from his hips to his shoulders. His mouth pressed harder as he nuzzled my neck.\n\nI rubbed my thigh against his hip, feeling his cock as it brushed against me. I whimpered as everything disappeared but the need to have him inside me. \"Malcolm, please...\"\n\n\"Yes, my love.\" He kissed my lips, rising up slightly to rub the tip of his cock through my wet folds.\n\nI cried out, gripping his shoulders as my body arched toward his.\n\n\"I love that sound.\" He paused, his cock right over my clit.\n\nI clamped my eyes closed and bit my lower lip. Little mewls filled the air as he took my nipple between his lips. He kneaded the swollen mound there with his large hand, causing sparks to race through my nerves straight down between my legs. I rotated my hips so he rubbed against me again. His moan matched mine.\n\nHis hand slid down the dampness that had gathered on my belly. Down to where it paused between my legs. I thought he was adjusting his cock when his fingers suddenly pressed into my folds. They stroked. They dipped inside me. And then they slid back even further.\n\nI held my breath, my hips still in the air. He started to withdraw his arm, and I slammed my ass down on the bed, trapping his fingers.\n\n\"Becca? Look at me.\"\n\nWhen I opened my eyes, his lips pressed against mine.\n\n\"I'm sorry, I got carried away.\"\n\nI struggled to swallow. It had not been either of our intentions. But the moment I felt him, I knew I was ready to revisit anal play. I wasn't sure if I'd ever be able to go all the way, but the fact that my muscles weren't freezing up at being touched there was good news in my mind. In fact, they clenched in desire. Wanting more. \"Don't stop.\"\n\n\"Are you sure?\" He tried to pull his hand away again, which caused his fingers to shift.\n\nI made a gurgling sound and nodded. \"Please.\"\n\nHe studied my eyes for a moment before intentionally wiggling his fingers.\n\nI lifted my ass up at his touch, biting my lip again. The more he rubbed, the more I cooed. The more I relaxed. He pressed for entrance, and I didn't resist. Then I was whimpering as one finger stroked inside my ass while his thumb circled over my clit.\n\nHis mouth covered mine, our tongues languidly rolling over each other as he continued to caress me below. My right arm wrapped around his neck, holding him to me. I squeezed my left breast, pinching my nipple, adding to the fire he'd started within. I let him control the speed, which he adjusted according to the sounds I made.\n\nI thought he was going to bring me over the edge like this when he suddenly removed his hand from between my legs. He pushed my left hand away and broke our kiss to suck my nipple between his teeth. I let out a hiss as he slid his cock into my pussy at the same time.\n\nMy first orgasm of the night rocked into me, making me squeeze my eyes shut. My whole body sighed as I wrapped my limbs around him. We quickly found our rhythm. Our lips joined again\u2014our hands roaming from burying in each other's hair to stroking whatever sensitive skin they could find\u2014as our moans and cries combined. He brought me to the edge several more times, sometimes backing off before shudders left me dizzy.\n\nThen we were falling over the precipice together, neither wanting to let go.\n\nI'd started down this journey alone, keeping myself shielded. I finally felt bound to the one who could show me my true potential and nurture it. One who understood me inside and out. Who was willing to be just as raw and exposed with me as I was with him.\n\nAnd I couldn't wait to start the next chapter of our lives together.\n\n~ H\n\n--------------\n\nFor the curious female readers (and any interested men), Becca's wedding dress is style #33208091 on Kleinfeld's website (search by Henry Roth for dresses under $4000). Also, although the model is very pretty, she does not do justice to my idea of Becca. So please, just imagine this beautiful dress on the Becca you have created in your own mind! "
    ],
    "authorname": "secretsxywriter",
    "tags": [
        "dominance",
        "submission",
        "masturbation",
        "roleplay",
        "nurse",
        "wedding"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/raw-ch-12"
}