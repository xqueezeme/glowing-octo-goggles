{
    "title": "There and Back Again Ch. 083-084",
    "pages": [
        "Chapter Eighty-Three: Battle-worn\n\n I crept back across the bridge, glad that I wouldn't have to do it again until after we'd found Branka. Seriously with the walking! I sighed, and then tiptoed up past the Emissary, leaning against the wall behind it, daggers ready.\n\nI didn't have to wait long until I heard the sound of booted feet marching. I strained to see in the dim light, but soon saw the flickering of moving torches in the middle of a mass of dwarves. They marched five across, the outer rows with shields overlapping, the dwarves equipped not only with swords or axes and shields, but also spears for the centre three rows to stab through the shield wall. About halfway back I saw a cluster of taller people on either side, and knew that was my party. \n\nThe darkspawn heard them at the same time as I, and there was an aura of anticipation in the air as they limbered up and prepped their weapons. About the time I could sense the other Grey Wardens, the darkspawn started growling; they were silenced by a sharp bark from the Emissary. A few of the archers popped off shots toward the group, but they all bounced off the raised shields, and the Emissary shouted again, what I assumed to be a scathing rebuke.\n\nJust as the dwarves in front reached the end of the bridge, I heard Kardol shout out a command, and the dwarves began to charge forward as a group. The shield wall spread out to maintain the perimeter. The darkspawn, who'd been holding back until the dwarves exited the bridge, rushed forward and clashed with the first row of dwarves.\n\nThe Emissary hadn't summoned its magic yet, and I waited to take it out; I wanted all the other darkspawn occupied \u2013 they couldn't see me, but I still didn't want them taking pot shots in my direction. So I watched, as did it, as the front line dwarves filed out to the sides, carving a path through the hurlocks on either side; the groups of my companions hustled through the gaps, which then closed so that none of the hurlocks could turn and attack the Wardens' backs. Except for one Warden; I noticed Anders, standing well back and surrounded by dwarves, as he began chanting and sending out shafts of turquoise healing energies to wherever they were needed most.\n\nI saw a couple of dwarves fall, swarmed by darkspawn, but the gap was immediately closed by the dwarves on either side, or by one from behind stepping forward with shield raised, and the protection of the shield wall was mostly maintained.\n\nAs the Wardens and companions began picking off the darkspawn archers, the Emissary growled something, and I felt the ground rumble slightly as the ogres lumbered forth into the fray. With that, the Emissary gathered his magic and began to cast.\n\nI reached out through the greasy, tainted aura and seized his mana before he could react. I reached around and slit the Emissary's throat, but not as deeply as I normally would; I wanted it to remain alive, at least for a little while, while I used its mana. Black blood bubbled out through the laceration and spilled out of its ruined mouth, and it slowly dropped onto its knees at my feet. I kicked it over, and hastily started popping shields onto the Wardens, who I could barely see in the dim light, but could locate through the taint, and then trying to isolate individual companions and dwarves as well. \n\nAnd I was glad I had; I looked to my left just in time to see Alistair bashed by the back of an ogre's massive hand, and go flying, but he popped right back up like a jack-in-the-box and dived back in, largely uninjured.\n\nI turned to head in that direction when I heard a shout from the opposite side. I slowed to look, and could see Sten standing toe-to-toe with the Ogre, Aedan and Faren assisting him, but what drew my attention was the tall person with dark hair and dark skin standing with his hands over his ears, not paying attention, not even holding weapons. Duncan. With one last look over at Alistair's group \u2013 relieved to see that the ogre was down and they'd started attacking the hurlocks from the rear \u2013 I changed direction and headed towards Duncan. I cried out as I watched him sprout two arrows, one in the shoulder and one in the flank; he didn't react, other than to stagger at the momentum. As I closed the distance, I began to hear the screams pouring forth from his mouth.\n\nI reached his side just as Sereda did; I carefully pulled Duncan down to sit, without disturbing the arrows, and then we both put our backs to him, ready to defend him from any darkspawn thinking to take advantage of his weakness.\n\nStill apparently unable to sense or see me, a couple of genlocks and a hurlock approached, looking for an easy kill with Duncan curled up and Sereda's back apparently unprotected; fortunately they came one or two at a time, and I was able to use my crossed blades to deflect blows, pushing them off balance and getting in a few good swipes. Darkspawn blood poured out over my hands and arms, and soon there were three darkspawn corpses at my feet.\n\nI was startled to look around and see that no more darkspawn were standing. The dwarves had begun dragging the injured away from the carnage, while everyone else just caught their breath. As soon as I was able, I screamed for Anders and dropped down to check on Duncan.\n\nHis breathing was ragged and blood speckled his lips; more blood poured out around the arrows, and his normally dark complexion had gone pale. I cradled his head, crooning reassuring nonsense in his ear; he didn't even seem to know I was there, and still held his head as though in pain.\n\nAnders dropped down at my side.\n\n\"What? Oh. Arrows. Okay.\" He fumbled through his pack, coming out with several handfuls of bandages and some poultices, as well as something that looked like a pair of plyers. \"Can you hold him? This is going to hurt.\"\n\n\"I don't think he'll notice. He didn't even twitch when he was hit.\" All the same I wrapped my arms carefully around his chest, pinning his own arms to his sides. \"I think one punctured his lung. He's got blood in his mouth.\"\n\n\"Got it.\" Anders snapped the end off the arrow in the front of his shoulder, then the one on his flank, before deftly unbuckling Duncan's armour and tossing the chest piece out of the way. He took a deep breath, then reached in with the plyers. \"Here we go.\"\n\nHe grabbed the arrow by the steel head and began wiggling it back out, stopping once to widen the hole with his dagger. Duncan's harsh breathing worsened, and I heard a whistling sound from the wound, but otherwise he didn't react at all.\n\nAnders, however, swore. \"Andraste's saggy tits! I need some help.\"\n\nAedan materialised at my side, startling me. \"What do you need me to do?\" \n\nAnders soaked a handful of bandaging in something he poured out of a pouch at his belt, then handed it to Aedan. \"Hold it over the wound. Hard as you can. It will hurt \u2013 maybe,\" he amended as he eyed Duncan's unseeing stare, \"but it's pain, or death, so I'd pick pain. Push as hard as you can.\"\n\nAedan complied and the whistling sound decreased, while Anders examined the tip of the arrow quickly. \"Not poisoned. Probably tainted, but that shouldn't be a problem. Okay, Sierra, switch sides.\"\n\nI shuffled around and allowed Duncan to lay sideways against my shoulder as Anders checked out the arrow in his flank. \"Thank the Maker, it's not that deep.\" Again with the plyers, he teased out the steel head. He slapped a poultice over the resulting hole, and I held it in place while he returned to the wound in the front of Duncan's shoulder.\n\nBy this time, Duncan's breaths were gasping and shallow, and his skin had taken on a distinctly grey tinge. Anders swore again before slapping his hand over the wound and shoving Aedan out of the way. A blue glow emanated from the area, and the wound closed up. The whistling stopped entirely, but Duncan's breathing didn't improve.\n\n\"Anders...\"\n\n\"I know, I know. I just...\" He grabbed his dagger again, briefly heating it with magic before brandishing it in Duncan's direction.\n\nAedan grabbed his hand as it descended towards the warrior's chest. \"What, in Andraste's name, do you think you're doing with that?\"\n\n\"Trust me. I don't have time to explain. Please, let me save him.\" \n\nThe sincere worry on Anders' face calmed down any distrust my brother had. Aedan nodded, and Anders proceeded to gently but implacably cut a tiny hole in Duncan's chest wall a couple of inches above his nipple. After a minute, I could hear a whoosh of air, and Duncan coughed, expelling more air through the hole and allowing him to draw a deeper breath. I heard cheering, and looked up, dazed, to see all of our friends standing around us, watching and smiling.\n\nDuncan slumped, slowly, his arms going slack, and I lowered him to the ground in relief as his colour improved and he breathed deeply. After a little more air whooshing out, Anders ran a quick scan over Duncan's entire torso, before healing up the tiny hole he'd made without even a scar.\n\n\"He needs some rest. And hopefully some food.\" He cast a worried look at me. \"And I've no idea where to even start for what's going on in his head.\"\n\nA shout from the dwarves gathered our attention. They waved for Anders, and he stood with a quiet groan. \"Healing dwarves is so draining! Keep him still, and I'll be back.\"\n\nI nodded, turning to dig in my pack for some blankets. I rolled one under his head for a pillow, and covered him with the other, tucking him in gently, before we all moved a little ways away. Alistair came up and laced his fingers \u2013 still in his gauntlet and just as sticky as mine \u2013 through mine.\n\n\"What happened?\" \n\nI looked to Sten, who shrugged; Faren stepped forward, expression uncertain. \"He was fighting \u2013 like a man possessed, honestly, cutting through darkspawn like butter \u2013 and then the ogre attacked. Duncan got in front of it and was distracting it so we could flank, when it roared in his face and he just...\" Faren looked uncomfortable. \"Started screaming, like he was on fire or something. He dropped his swords, grabbed his head, and the ogre just ignored him after that. I couldn't stop to help, with that ogre still standing...\" he trailed off, obviously feeling guilty.\n\nAedan put his hand on Faren's shoulder. \"You did the right thing. Nice take down on the ogre, by the way.\" \n\nFaren grinned. I turned to Sereda.\n\n\"Thanks for your help.\" \n\nShe eyed me skeptically. \"You really just walked past all these darkspawn to stand behind the Emissary?\"\n\n\"What can I say? It's a gift. Or a curse. Not sure, honestly.\"\n\n\"How did the dwarves fare?\" Aedan asked, distracting us from what could be an awkward conversation. I took a visual inventory of our largely uninjured party. Oghren had blood on his face, and a new scar through one eyebrow, but everyone else looked fine. \n\nJowan joined us. \"Three dead, seven seriously injured, but they should recover. Anders has patched up the worst injuries, and I got the rest.\" He gestured at Oghren. \"I'm not as good at healing as he is, obviously.\"\n\nOghren belched loudly. \"Meh. The ladies like a scar with a good story, kid. Don't get your smalls in a twist over it.\"\n\nWe all laughed.\n\nI sobered up. \"Who were the dwarves that died?\"\n\nI was impressed; Jowan could answer right away. \"Murray, Walder, and Tipper.\"\n\nI was heartbroken that the energetic, clever-tongued dwarf we'd met the day before was gone. It didn't seem to matter to me that the dwarves didn't consider this a tragedy; I did. They may have seen themselves as already dead, but just a few hours before they'd been alive and well. And somehow knowing one of them, having spoken with her...it made it worse.\n\nI winced, and Alistair put his arm around my shoulders in sympathy. Sereda rolled her eyes.\n\n\"Well, come on then.\" Sereda grinned at me. \"I know where there's a sink with a water rune. Let's go get cleaned up before the men get there.\"\n\nI smiled hesitantly, glad for the distraction, and followed her across the bridge \u2013 swearing at it, naturally \u2013 and into a little closet of a room. There was no tub, but warm water came out of the rune when she touched it. We both stripped, washing ourselves down quickly, then I redressed in some clean-ish linen under-armour clothing and filled a bucket. \n\n\"I'm going to go over by Duncan and wipe down my armour.\"\n\nSereda grabbed herself a bucket and joined me; there were already a handful of dwarves and my companions waiting to use the facility as well. I crossed the stupid bridge \u2013 again \u2013 and sank to the ground near Duncan, piling my armour beside me. As I worked, Alistair, and then Aedan, and then the rest of our companions slowly filtered over to gather around as well. We all re-equipped our armour when it was acceptably clean \u2013 I'm going to have to burn mine, once we get back to Orzammar \u2013 and then sat watching as several dwarves dug pits into the stone with heavy pickaxes. \n\nThe three dead dwarves were lowered in, and we all had a moment of respectful silence, before more dwarves started filling in the graves. Some began singing, something that mixed ancient Dwarvish with the trade tongue, obviously mournful, though I couldn't understand many of the words. It was strange, yet somehow beautiful also. It reminded me a bit of a funeral dirge. I wondered what Leli would have thought.\n\nThe gates to Bownammar had been cleared, though the cost was high; we still weren't sure Duncan would recover, and the Legion had lost three Legionnaires. We decided to spend a night with the Legion, before making any decisions. We were all exhausted, after a morning of fighting and an afternoon of cleanup.\n\nAlistair wasn't going to allow us to sleep near Duncan, worried what he might do when he woke; I didn't want to leave him alone. So we compromised, stripping him of weapons and armour, and Aedan bound his hands in front of him, tightly but gently, so we'd have time to react if he woke violently. We were all shocked to see the skin on his forearms blackening and covered in rough blotches, like darkspawn skin. I wonder how long he's been hiding that. I covered it back up and hid it from the newer members, but shared bleak looks with Aedan and Alistair. \n\nI slept curled in Alistair's arms, cuddled up next to Duncan. The dwarves were standing watch, and for once all the Wardens could sleep. I had nightmares, unsurprisingly; between darkspawn and dreaming about Duncan dying, I woke in a panicked sweat several times, each time comforted by a very patient Alistair. I didn't feel particularly well-rested in the morning, but when Duncan stirred, I was wide awake in an instant.\n\n\"What...?\" Duncan rolled onto his side, trying to sit up, and had discovered his bound hands. He rubbed his face and looked around groggily. \"What happened?\"\n\nI was kneeling in front of him before he could finish asking, untying his hands. \"You got...confused, during the battle. Took a couple of arrows.\" I pointed at the holes in his linen tunic.\n\n\"There was an ogre. It seemed to...do something to you,\" Alistair supplied helpfully. \n\nDuncan looked thoughtful, but his expression was haggard and his complexion a bit grey. \"I remember sending you after the Emissary, and then...nothing.\"\n\n\"It's okay. Anders healed you, and you're fine now.\"\n\n\"No, I doubt very much that I am.\"\n\nI winced, and covered it by handing him a water skin and digging through my pack for food. I shared out some deepstalker jerky and biscuit, and settled in to munch my own. I was distressed to see Duncan barely pick at his. I knew what that meant. Darkspawn don't eat normal food. I tried not to draw attention to it, not to think too much about it.\n\nOnce we'd finished (and Alistair ate most of Duncan's, too), Duncan had us gather all the Wardens, while he went off a little ways out of earshot and spoke with Anders for a few minutes. Then he walked over to the dwarven camp, pulling Kardol aside for a moment. He came back, face somber.\n\n\"It has become apparent that I am...not well. I have been injured, and have been advised not to overexert myself for a few days, in addition to...\" he trailed off, shrugging helplessly. \"I will not be accompanying you through Bownammar; I will remain here and help the Legion as much as I can, until you return.\"\n\nEveryone started shouting at once, Aedan and Alistair loudest of all, complaining and begging him not to leave us. I just watched him, silently, drawing my gaze from his worn, tired expression to his bloodshot eyes to the slight stoop in his shoulders. I slumped, knowing he was right. But yet, there was something that just didn't sit right.\n\nI took him by the hand, dragging him away from the group who'd started debating amongst themselves. I got him isolated, and looked up at him, apprehensive. A slight smile played around his lips, like he was a proud teacher and I his star pupil.\n\n\"You're planning on taking your Calling while we're gone, aren't you.\" I bit my lip, upset.\n\n\"No.\" He reached out to touch my cheek. \"I considered it, but no. I knew you'd think that though.\" He sighed. \"I wouldn't leave you all during a Blight. I will be the one to make the killing blow on the Archdemon, if I possibly can. I swear to you, Sierra, that I will be here when you get back. I just cannot risk the mission or my Wardens' safety if I get...confused, again.\"\n\nI reached out for him, and he pulled me in for a hug. \"Okay. But if you aren't here when we get back, I'll find you in your afterlife and kick your ass.\"\n\nHe laughed, then led me back to the group, where I slipped under Alistair's arm and gripped his hand. The anger and shouting had apparently finished, and Aedan's face registered nothing more than exhausted acceptance. Alistair's eyes were suspiciously red-rimmed, but he examined my forlorn expression for just a moment and kept his opinion to himself. The newer Wardens seemed to be watching Aedan and Alistair, expecting objections, and when none were forthcoming, they all just hunched over and avoided eye contact.\n\nDuncan cleared his throat. \"Aedan is in charge while you're there. Alistair is second, and Sierra is third. I expect you all to act like Grey Wardens in my absence, understood?\" There was a round of nodding. I was surprised to find myself in the chain of command, but supposed it made sense. I was the third-most experienced Warden in the group, even if most of them hadn't been told. Though I wonder how many have put it together, from my appetite and ability to sense darkspawn, as well as the improvement in my skills... Some of them must have, because no one questioned Duncan on granting me the authority.\n\nDuncan did the rounds, saying something to each Warden or companion in the group. He shared a whispered conversation with Sereda, which apparently pissed her off, going by the thinning of her lips and the scowl; I wondered what he'd said. Finally she nodded, however reluctantly, and he moved on.\n\nI took the opportunity to have a word with Kardol.\n\n\"Nice job, topsider,\" he said to me as I approached. \"I never thought we'd see you again alive when you walked, plain as day, right across that bridge.\"\n\nI smiled. \"Call it a talent. Sadly only works on darkspawn.\" He chuckled. \"Listen, I need you to do something for me when we're gone. Did Duncan tell you he's staying here?\"\n\nHe nodded. \"And I'm grateful. If we're to establish a new base, we need to do some tunneling and move supplies. It will be much easier, and safer, with a Grey Warden to warn us when the 'spawn approach.\" He gestured loosely at the massive gate to Bownammar. \"This is the furthest the front has pushed in generations. The Legion is thankful for the assistance.\"\n\n\"Right, well, listen. Duncan's not going to admit it, but he's not in good shape right now. Can you try to keep him out of the fighting? It's bad enough being this close to so much taint, I think. You must protect him, if you can. Will you do that?\"",
        "Kardol watched me, a curious smile on his face. \"Aye, m'lady, I will. I'll try, anyway. No telling what he'll do the second my back is turned, but I will surely try.\"\n\nI smiled and clapped him on the shoulder, bruising my hand on his armour.\n\nI picked my way back to where we had slept, and packed my things. Once everyone was ready to go, I gave Duncan a hug, kissed his cheek, and then turned to follow Aedan down the path a Legion scout had determined led deeper into Bownammar.\n\nWe didn't have any maps that would be of use, from here on out; the Legion maps Gorim had brought ended at the bridge. I looked back once and waved as we reached the first corner; I saw Duncan's eyes crinkle in a smile. Then I linked hands with Alistair and turned the corner.\n\nBownammar smelled...awful. Worse than most of the rest of the Deep Roads, which was saying something. The taint was so thick I was surprised the air wasn't green with it, and even the non-Wardens seemed to feel its malevolence. We stayed close together, not talking much, and when we did it was in an unintentional whisper.\n\nI remembered crypts from the game, and we certainly found dozens of them \u2013 little rooms filled with sarcophagi, and often, a couple of darkspawn. Never enough to be a challenge; I thought even I could probably have managed alone. It was sort of strange to think of myself as anything resembling a competent fighter.\n\nSereda frowned on anyone disturbing the remains, so the rooms remained un-plundered, much to Zev's chagrin. But I knew we didn't really need the money, though I recalled a set of armour to be found down here that might be suitable for Oghren. Unlike in game, the armour made for a dwarf could not just be used by a Qunari. I almost giggled when I remembered once dressing Oghren in Cailan's gold shiny armour in game. The Legion of the Dead Armour would only fit a dwarf, I was sure. When I mentioned it, Sereda gave me a suspicious look, but then declared that she would have a set of armour crafted for each of us once we reached Orzammar, assuming she was able to take the throne. I was intrigued at the concept of new armour; up until now, all of mine had been appropriated from someone, second-hand. \n\nAedan walked with Sereda for most of the day, talking in hushed voices. Gorim trailed behind them, trying not to interfere, yet looking sort of pathetic all the same. I was grateful when Aedan gestured and the red-head joined their discussion. It still looked slightly stilted, but not quite so painful.\n\nI wondered about what they'd been talking about, until that night when we camped and Sereda approached me where I sat, listlessly, in Alistair's lap.\n\n\"Sierra?\"\n\nI looked up and smiled, gesturing for her to sit. \"Hi, Sereda. Or I suppose I should really say 'your Majesty.' I'm not very good at the whole protocol thing, I'm afraid.\"\n\n\"Not surprising, given how you were raised. I hate titles anyway.\"\n\nMy eyes widened in surprise. \"Ah. Aedan told you?\"\n\n\"Yes, not that I'd have believed him, but Gorim corroborated his story. It's...fascinating.\"\n\n\"Yeah, that's one word for it, I suppose.\" I chuckled. \"As strange as it is, it's true. I'm not from Thedas.\"\n\n\"What can you tell me about myself? Gorim said you knew quite a bit about me.\"\n\nAh, the test. Had to know... I thought for a minute about the dwarf noble origin. \"Let me see. You had two brothers, one older, one younger. Trian was a pompous ass, and more worried about gaining the throne than about being a good leader once he'd gotten it. He was jealous of your popularity. Bhelen always acted like the sweet younger brother. He had been dallying with a noble-hunter named Rica. Who's currently pregnant with his son, by the way. And Rica is Faren's sister, so I'd recommend you not say anything bad about her.\"\n\n\"Why would I say anything bad about her? I think there needs to be more mixing between the Castes, not less. And an heir I can adopt as my own helps me, it doesn't cause me problems.\"\n\n\"Right...anyway. You had been tasked with going into the Deep Roads to clear your way into the old Aeducan Thaig and find the Aeducan shield. Bhelen had warned you Trian was trying to kill you, but you refused to kill him first to protect yourself. You had one \u2013 or a few, I'm not totally sure \u2013 of Bhelen's men with you. Frandlin Ivo, I think, and maybe some others? You got to the Thaig only to realise someone else had gotten there first. You went in to find Trian dead. Bhelen showed up with Harrowmont and your father, and accused you of murdering Trian. Frandlin lied and said he'd seen you kill your brother. \n\n\"Bhelen already had the Assembly bribed and blackmailed; he had you exiled without a trial, to supposedly die in the Deep Roads, while Gorim was sent to the surface. There's a rumour that Bhelen poisoned your father, though other rumours say Endrin just didn't have the heart to carry on after losing you and Trian both; he also came to realise that you'd been framed by Bhelen, and that he'd been wrong to allow your exile.\"\n\nShe smiled, a tight, sad smile that didn't reach her eyes. \"Too little, too late, wasn't it, Father?\" Her tone was more sad than bitter, and it made me want to hug her. I refrained.\n\n\"He did instruct Harrowmont to send out search parties for you, but I don't know if those orders were ever carried out. And he named Harrowmont as his successor to try to keep Bhelen off the throne.\"\n\nSereda bit her lip, looking distressed. I couldn't blame her; she'd gone from loving daughter to bitter exile in a matter of moments, and now was being forced to rethink her bitterness and her exile. It couldn't have been easy.\n\nShe finally shook herself, then changed the subject. \"Well, Gorim's right \u2013 if you aren't what you claim to be, you're one exceptional spy.\"\n\n\"Hah! Yeah, I'd be a terrible spy. Not at all sneaky, I'm afraid.\"\n\n\"So tell me, then: why does Oghren believe your story to be entirely false?\"\n\nI explained about Branka and her search for the Anvil, and what she'd allowed to happen to try to break through Caridin's traps. Sereda looked distinctly green when I explained about the Broodmother, and incensed when I told her why. I didn't even get a chance to explain about Caridin and the Anvil before she was spitting mad.\n\n\"If what you say is true, that woman cannot be allowed to live. I will not allow that sort of ruthlessness to spread. No one must know. Branka will have to be written in the Memories as killed by darkspawn. Otherwise there are those who will revere her, regardless of her crimes.\"\n\nEveryone had gathered around while we talked, and were now listening intently. Except Oghren, who was snoring drunkenly in his bedroll, to my relief. \"It gets worse. Do you know how golems are made?\" \n\nI was always conflicted about the golems, in game. While I truly believed Branka deserved to die, and that her madness could not be allowed to continue, the golems would be amazingly useful allies. And while I had no qualms about volunteers being transformed, I didn't know if we could ever trust any government, no matter how benevolent and well-meaning, with that power \u2013 the ability to force their political enemies into essential slavery. Even if Sereda managed to avoid that trap and only use the Anvil for good, there was no guarantee her successors would.\n\nSereda was thoughtful after the discussion, and I wondered if she'd thought of some alternative to the options in game. What if we could remove Branka, but somehow still use the Anvil? Find some way to use it ethically? Everyone else honestly looked ill. Between Branka's deeds and those of some long-dead dwarven king, the Anvil struck me as intensely dangerous.\n\nFinally we all headed to sleep. I had an uneventful watch with an emotionally distressed Gorim; I offered to talk, he declined politely, and we spent the rest of the two hours in silence.\n\nChapter Eighty-Four: First Day They Come\n\nThe next days brought several larger engagements with darkspawn, but also the first of the ghosts and undead I had expected in Bownammar. Anders told us the Veil was very thin, hardly a surprise in this place, and all manner of things had reanimated themselves. There were also enormous tainted spiders, which grossed me out in game and were a thousand times worse in person.\n\nThe undead were actually easier to fight, in many ways, than darkspawn; they were less intelligent, and though difficult to kill, they were easy to maim. And despite being rotting tissue, they smelled less bad than the 'spawn, and did not get us nearly as sticky as darkspawn ichor. I had a slightly more challenging time of it; they could see me. No walking up behind, bold as brass, to slit throats; I had to dodge and parry and fight like everyone else. The spiders, I stayed away from. Selfish, probably, but I had neither the agility of Aedan or Zev to jump around as necessary, nor the strength of the warriors to protect myself. I cursed myself for not learning how to use a ranged weapon. And I was definitely the least skilled at hand-to-hand combat of everyone with us in the Deep Roads, though at least I did not entirely embarrass myself. \n\nOften, after any skirmish, Zevran would spend a while with me, debriefing. While I had only enough skill and focus to keep myself from being skewered, he apparently had enough left over to watch me during the fights. I was sure Aedan asked him to keep an eye on me, protect me, and I was just grateful that he didn't interfere with me fighting at all. But his observations were keen, and usually too accurate for comfort, and I spent a lot of time being reprimanded for various perceived failings. I knew he was trying to help, and I appreciated it, but it was depressing being informed how short I still fell from where I needed to be. Alistair obviously wanted to defend me, which would have really pissed me off; realising that, he bit his lip and held his tongue, though the scowl on his face made his opinion on the subject obvious.\n\nWe finally made it to what I had assumed was the darkspawn Forge Master. It was a genlock with more armour than most, a bow, and an enormous hammer. And not a magic user in the bunch, which limited my effectiveness a little. Unwilling to face the Forge Master alone, given it was unlikely I'd be able to kill it in one strike, I stayed with the group as we fought our way through. Anders cast a blizzard that dealt with most of the archers, and I took out the rest with my daggers, one at a time. When Alistair reached the Forge Master, he drew its attention while the rest of us took turns darting in to stab or slash at its back. After one particularly vicious swing of its hammer, I heard a sharp crack and then Alistair screamed and fell back. Bel stepped up, his shield covering Alistair's retreat; Anders was with him, so I redoubled my attack and managed to bury my dagger in its neck. It sank down, its armour sticky with darkspawn blood, but Oghren grabbed the hammer and Aedan the bow before they could be soiled as well.\n\nBy the time I reached Alistair, Anders had healed a broken arm, and he claimed to be feeling fine. I gave Aedan a look, and he sighed and called a halt to rest. I made Alistair eat and drink, not that getting Grey Wardens to eat is tough, and poked and prodded at his arm myself before feeling reassured that he suffered no lingering effects.\n\nNo one wanted to sleep there with all the corpses, so we rested for an hour and continued on. We came upon a temple-like area that was vaguely familiar from the game, and after battling a couple of ogres, found the Legion of the Dead shrine. Sereda would not permit us to take the armour or weaponry strewn around, though Aedan took the key and we were attacked by spirits; the spirits were easy to kill, and didn't leave corpses, which was nice. \n\nWe all agreed to rest inside the shrine; it had a locking door, and was relatively clean of the taint that infected the rest of the Deep Roads. Sereda spent most of the time reading inscriptions on statues, and memorising details of the shrine to share with Kardol and, eventually, the Shaperate. She was enraged to learn that the Legion had been considered equivalent to a noble house, and that fact seemed to have been conveniently left out of the Memories. I didn't envy the Shaper who would have to deal with an angry Sereda when we got back.\n\nI doubted that anyone slept well, perhaps with the exception of Alistair, who needed it to recover from his wound. After I gave up on sleep, I spent some time chatting with Anders and Jowan. Anders, upon closer inspection, looked like hell. He admitted to his dislike of small spaces and the underground, and I was sympathetic. The Deep Roads certainly weren't my favourite place to be. Jowan, however, seemed to be coping well. He'd slowly been gaining in confidence since his Joining, and he was now no longer reluctant to offer an opinion or a suggestion when we were making decisions. He was still quiet; I hoped it wasn't still out of fear that one of us would change our mind and summarily execute him.\n\nI recalled from the game that we would be getting close to the Broodmother's area, and before that, Hespith. I eyed Oghren speculatively, as he took a pull from his beard flask, and wondered if he'd believe me sooner rather than later. I hoped so \u2013 mutual avoidance was only going to get us so far. He belched noisily, and I sighed. Maybe it will get me far enough...\n\nWhen Alistair woke, everyone packed up and ate quickly. We unlocked the temple and let ourselves out. I noticed Sereda whispering what looked like a prayer, or perhaps it was a promise; she turned away resolutely and we headed into the next tunnel when Aedan unlocked the door.\n\nAs we walked, I kept expecting to hear Hespith's creepy voice echoing down the corridors, but it never happened. I supposed it was a bit melodramatic, and couldn't help but laugh at myself critiquing the melodrama of a video game while I was living inside one. We defeated a couple of small groups of darkspawn \u2013 easy once I'd disabled the Emissaries \u2013 and then we came out into a large chamber, to finally find Hespith.\n\nThe dwarven woman, or perhaps ghoul was closer to the truth, sat in a corner, rocking, and singing the creepy poem to herself mindlessly. Strewn around her were corpses, of both darkspawn and dwarves, mostly dismembered. The odours of feces and rot and taint mixed horribly, and I gagged at the eye-watering stench. Aedan dragged Oghren over, then crouched down to speak with Hespith quietly. Everyone listened keenly; knowing what she was going to say, the horror of her revelations, I stayed away, near the slightly less pungent hallway, and waited.\n\nAfter some discussion, I saw Hespith suddenly look up to stare directly at Aedan, eyes clearing for just a moment. She nodded, touching his arm, and then closed her eyes. I didn't even see him draw a dagger, but caught a flash of silver as he stabbed it deeply into her abdomen, angled up towards her heart. She gasped once, and then slumped down, dead; Aedan's aim had been true, and her death was instant. He closed her eyes gently, and then stood, wiping his hand and dagger off on a rag. Everyone else looked ill, but sympathetic. Zevran approached him and they spoke, quietly, for a moment. I was intensely glad my brother had someone with him who understood the hard choices he had to make.\n\nOghren avoided my gaze and went to stand by the next doorway, axe in hand, looking impatient. Everyone else, understanding we were in for a nasty fight, got ready and followed him. I wanted to go through the door first, seeing as the darkspawn wouldn't see me, and I could double-check what was on the other side. Aedan refused; I got the impression he was worried I'd take on the Broodmother alone. I had no intention of doing that, though I wondered if I might not be able to get up behind her and slit her throat during the fight. \n\nWe went through the door together, Aedan and Zev slipping off to the sides and seeming to disappear, Anders and Jowan huddling behind the warriors nervously. I followed behind, daggers drawn, breathing slowly to try to quell the panic I felt creeping in. The Broodmother was around a corner, sitting immobile in a depression in the stone floor. There were sacks and clumps of grey, quivering, fleshy stuff that I assumed must have been the equivalent of darkspawn afterbirth scattered about; splatters of the same were on the walls. A couple of larger sacks looked like they contained bodies, curled up in fetal position; genlocks, I realised, that must have been stillborn.\n\nThe Broodmother was even more horrific than I'd expected. In game it was sort of disgusting, but nothing could have prepared me for this monstrosity. It was like Jabba the Hut mixed with a giant octopus all in one. Her flesh was pink-ish, bloated, and oozing clear mucous; there was blood drying all down her front, coating a couple of the many horrific breasts and dribbling onto her distended stomach. She had to be ten feet tall \u2013 even Sten looked small by comparison \u2013 and I'd have bet she weighed at least a tonne. She was grossly fat \u2013 no, pregnant, I realised with dismay \u2013 but her wrinkly bald head looked somewhat like the dwarf I knew she'd once been. \n\nShe opened her mouth to scream when she saw us, and I realised her teeth were pointed and all protruding out like some sort of cannibalistic sucker fish. I stumbled to a halt, too revolted to move, too frightened; fortunately my companions were more resilient, though equally disgusted, if the looks on their faces were anything to go by. As one, the warriors engaged tentacles, and the mages began casting magic to slow and weaken the Broodmother. Aedan appeared out of the shadows at her back, and I guessed he must have had the same thought as I \u2013 get behind her and slit her throat.\n\nAn unexpected tentacle shot up through the stone floor, grabbing him around the waist and tossing him. He tucked and rolled, landing less awkwardly than he might have, and spun to start hacking away at the wiggling appendage. No one was even close to the body of the Broodmother.\n\nI knew she spat acid, and hoped she wouldn't see me soon enough to do that, as I finally got control of my legs back and began edging around the room, dodging flailing tentacles and my companions both. I got behind her just in time for a wave of darkspawn, mostly genlocks who I assumed would be this monstrosity's offspring, to come pouring in through a narrow tunnel off to one side in response to the Broodmother's screams. Anders began throwing fireballs, while Jowan kept his concentration on slowing and cursing the Broodmother; the few darkspawn that survived Anders were executed by Sten and Alistair as they came forward through the thick, greasy smoke.\n\nI turned my attention back to the Broodmother, who was looking around wildly, directing tentacles to attack and block the path to her; at least, for everyone except me. My heart was pounding, and between the fear, the smell of rot and corruption, and the thick greasy smoke still pouring off burned darkspawn corpses, I felt absolutely nauseous. But my path was open.\n\nI tried to avoid watching in a panic as Sten was bashed by a flailing tentacle and knocked unconscious on the floor, and then Jowan slashed across the face, leaving him bleeding and dazed; I cried out as acid was spit directly onto Oghren's chest and started eating away at his beard, but I inched closer and closer to the Broodmother. Taking a big breath \u2013 and regretting it as I coughed out black smoke \u2013 I reached up, dug my daggers in, and tried to climb the Broodmother's back.\n\nI was insanely glad I was wearing gauntlets \u2013 I was pretty sure I'd actually have thrown up if I'd touched her slimy skin with my hands. Using the daggers as handholds and digging my toes in, I slowly ascended. Each time my daggers gouged her skin, she shrieked, though based on the useless thrashing, she still couldn't really see me. Either that or she can't get tentacles that close to her own behind. Either way, hanging on was difficult, but otherwise my climb was unimpeded. I finally reached her shoulders, and using one dagger to hold on for dear life, I reached around her flabby neck as far as I could and stabbed into the rolls of flesh as deeply as I could. She screamed, and I twisted the dagger before losing my grip. I tried to grab somewhere else, missed, and fell, landing on my back on the ground. ",
        "I was stunned, and the world around me went hazy; disarmed and panicked that the nearly-dead creature would fall on me, I pushed with my legs and scooted back until I bumped up against a wall. Every movement drew pain from my back, but my legs worked and I could still feel them, so I decided it was ribs I'd injured, not my spine. I sat against the wall, trying to collect myself; I saw Oghren finish off a tentacle and then perform a spectacular leap to bury his axe in the Broodmother's chest. With one final shriek, she fell still, and the remaining tentacles dropped to the ground, limp. \n\nAlistair rushed over to me; kneeling in front of me and pulling off his gauntlets, he started poking and prodding, looking for injuries. I gasped as I reached out to stop him.\n\n\"Just a rib, I think. I'm okay.\" He turned to call out to Anders, and I hushed him. \"Let him get to Sten and Jowan first. I'm really alright.\"\n\n\"You scared me, climbing up there.\"\n\n\"I scared me.\"\n\nHe leaned down and kissed my forehead gently. \"I love you.\"\n\n\"I love you, too. Now will you help me up? Let's go see how everyone else is doing.\"\n\n\"Forget it.\" Alistair reached down and gently slid his arms under me. I still gasped as he lifted \u2013 broken ribs hurt! \u2013 but it was bearable.\n\nOut in front of the Broodmother's corpse, I could see Sten seated, head in his hands, as Anders finished healing Jowan's face. He was going to have a slight scar \u2013 apparently the tentacles had acid on them or something, and it made the healing harder \u2013 but strangely enough the scar actually suited him. He looked more rugged, somehow. \n\nOghren was ranting loudly about the state of his beard; the acid had eaten half of it away, and it was now completely lopsided and scruffy. He pulled on the one remaining braid as a few more hairs fluttered down to land on his chest piece. I could make out the words 'ancestors' and 'nug-humping' periodically, but the rest was just a mumbled mess. For my own sake, I tried really hard not to laugh.\n\nWhen Anders finished up with Sten, he came over to check on me. He told me I'd really only bruised myself, and rather than expending even more mana, he handed me a health potion. I slammed it back, and felt better. Anders looked tired, and after another look around to ensure he'd gotten to everyone, he collapsed against a wall and almost immediately fell asleep.\n\nThe rest of us cleaned ourselves up, wiping acid and mucous and black blood off of weapons and armour. Sten retrieved my daggers for me, when I declared I wasn't getting anywhere near that corpse to get them myself. Zevran offered to trim Oghren's beard, and I lent him my scissors; when he was done, Oghren sported even red fuzz all over his face instead of the elaborate style he'd previously had. It was interesting, and I thought I liked it; Oghren seemed mostly irate that his beard flask no longer stayed put. I pulled out my little compact with a mirror, and shyly offered it to Oghren. He actually thanked me, before looking critically at himself. \n\nHe sighed. \"My face is cold.\"\n\n\"It will grow back, my friend,\" Zevran declared. \"You'll be back to your warm, irresistible self in no time.\"\n\n\"Keep your pants where I can see them, elf.\"\n\nHanding my compact back, Oghren wandered away, muttering to himself. I exchanged looks with Zevran, and we both cracked up laughing.\n\nWe let Anders sleep for a couple of hours; he was grumpy, at first, when he woke, but looked dramatically better. He relented and drank a small Lyrium potion, and was positively cheerful afterwards. Jowan claimed his mana was fine, and declined.\n\nGathering ourselves, we finally got ready to move out past the Broodmother's corpse. Everyone was aware we'd run into Branka shortly, even Oghren, and he didn't even make any nasty comments when I brought it up.\n\nAnd I wasn't wrong; we walked single-file down a narrow hallway, around a corner, and heard grinding as a door we hadn't seen rumbled to a close behind us, blocking the return path. I sighed, and Oghren swore. I turned in place until I spotted Branka, high up on a massive boulder off to our left. I nudged Aedan, and slowly everyone turned to face her.\n\n\"Shave my back and call me an elf! Branka? I knew you had to be alive, but I never thought we'd actually find you here.\" Everyone shuddered, I'm sure at the mental image of shaving Oghren's back.\n\n\"Oghren. It figures you'd eventually find your way here. Hopefully you can find your way back more easily.\" Oghren started to look uneasy, as he recalled me telling him Branka would react like that. Branka ignored him, turning to Aedan. \"And how shall I address you? Hired sword of the latest lordling to come looking for me? Or just the only one who didn't mind Oghren's ale-breath?\"\n\nAedan took a step up to stand by Oghren, somewhat protectively. I knew he was still annoyed at him for being rude to me, but he was still one of our companions, and Aedan wasn't going to let anyone insult one of ours, drunk or not.\n\nOghren sputtered. \"Be respectful, woman! You're talking to a Grey Warden!\"\n\nBranka raised one eyebrow skeptically, refusing to look at Oghren. \"Ah, so an important errand-boy, then. I suppose something serious has happened. Is Endrin dead? That seems most likely. He was on the old and wheezy side.\"\n\nSereda stepped forward, face red with anger. \"You shall not talk about my father that way! He gave you everything, and you repaid him by slaughtering your entire house in your mad quest to find the Anvil of the Void!\"\n\nBranka looked at her wryly. \"Ah, and a Princess. How precious. If you're here, clearly things are even worse than I thought. And I thought Oghren was the only one with Daddy issues.\"\n\nOghren positively growled. \"You are impossible! This Grey Warden's come all the way from the surface to ask your help in choosing Endrin's successor.\"\n\nBranka snorted. \"I don't care if the assembly puts a drunken monkey on the throne.\" I giggled at the image. Internally, of course, because out loud would just be rude. \"Because our protector, our great invention, the thing that once made our armies the envy of the world-\"\n\nAedan interrupted. \"Yes, yes, the Anvil of the Void. We know! You want to make more golems. You gave your friends \u2013 your lover! \u2013 to the darkspawn to breed more darkspawn to run the gauntlet of traps. You're mad and obsessed, we get it.\"\n\nSereda stood beside him, her arms crossed, hands clenched. \"You will pay for what you've done here.\"\n\nBranka looked on, unimpressed. \"There is only one way out, Warden, Princess. Forward. Through Caridin's maze and out to where the Anvil waits.\" \n\nShe went to turn away, but Oghren called out to her before she could. \"What has this place done to you? I remember marrying a girl you could talk to for one minute and see her brilliance.\"\n\nShe turned her head slightly, showing just her profile. \"I am your Paragon.\" And then she disappeared.\n\nTo his credit, Oghren came up to me right away. \"I...By the Stone, what happened to her?\" He was looking at me intently, and it occurred to me he was seriously asking me the question.\n\n\"I don't know, Oghren. Nothing happened to her to make her this way, I don't think. I think she became obsessed, and let her obsession over-rule her good sense. I suspect you didn't blindly support her; you saw her as Branka, not some almighty deity, and dared to have your own opinion. So she found Hespith, who didn't see Branka, but only the Paragon, and followed wherever Branka led. She didn't bring you with her on her search, because she knew you would stop her. I'm...I'm sorry, Oghren.\"\n\nHe kicked a pebble near his foot with his heavy boots, never making eye contact with me. I looked down at the top of his head.\n\n\"I suppose I...\" he looked distinctly uncomfortable.\n\n\"It's okay, Oghren. You needed someone to hate, someone to blame, since Branka wasn't there to be angry with. I get it.\"\n\nHe finally looked up and met my gaze. \"Well good then. Now we can just move past all this emotional bronto-spew. I'm sure you and the pike-twirler over there have your smalls in a twist to get back to Orzammar. Can't polish the ol' anvil until we get there, am I right? Heh heh.\"\n\nI grinned and he harrumphed in my direction before gripping his axe and heading off towards the only opening. I squawked. \"Oghren, wait! There are traps, damn you!\"\n\nHe paused only long enough for everyone else to pull themselves together and form up. \n\nAlistair turned to me. \"So that was his apology?\"\n\nI laughed. \"I'll take it. Probably the closest he's ever come to apologising for something.\"\n\nHe shook his head, kissed my cheek softly, and then grinned and whispered, \"Wanna polish my anvil?\"\n\nI choked, triggering a coughing fit; he just laughed, shouldered his shield, and headed to the front of the group with a blush and a smile on his face."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-83-84"
}