{
    "title": "Retirement Travels Ch. 05",
    "pages": [
        "Settling Down \n\nMolly and I stopped in NY to visit Susan. She was really busy with her development company. When we visited her at her office, she and Molly took off to her spa to have a girls day out. I learned later that there was no sexual chemistry between them, but they had a good time getting massages, nails, hair, talking about me and having what ever done. We went to dinner together and Susan told us all about her progress on her development project. The next day, I went to visit her at her office to discuss making an investment in the development. I was shown into her office by her admin assistant. Susan greeted me, told her admin not to interrupt us for the next hour and closed the door. \n\nThe door closed and she was all over me. We kissed and hugged. She whispered in my ear, \"Fuck me, please. I need you to fuck me. Fuck me now.\" I bent her over her desk, pulled up her skirt and found she was commando, no panties. She said, \"I knew you were coming, i didn't want to have to deal with panties or nylons. Fuck me.\" I pulled out my cock, shoved it in her and pounded her hard. She was biting her arm to keep from screaming, but she looked over her shoulder, smiled, and whispered, \"harder, Harder, HARDER. FUCK ME, HARDER. I pounded her and reached forward to play with her nipples. She pulled her blouse open so I had better access. I pinched and pulled as I pounded her. She came hard and then I dumped a load of cum in her. It took a few minutes for us to get our breath back. \"Thank you, you're the only one that can make me cum so hard. Why didn't I find you earlier?\" I had no answer for her. She pulled her skirt back down, re-buttoned her blouse, pulled a brush out of a drawer to brush her hair. After all that, she still had that just fucked look on her face. We talked briefly about my investing in her company. I said I would think about it and get back to her, She opened her office door and let me out. The admin grinned at me and said, \"Hope you have a nice day.\" \n\nI got back to Molly, who asked, \"How's Susan?\", I said, \"Better now.\" \n\nMolly giggled and said, \"I bet.\" \n\nWe moved on to Michigan. We visited her friends and had a nice lunch. We moved north to the AuSable River camp ground. I realized that it was about a year since Molly had knocked on the camper door in a pouring rain and the events that followed. I thought about all that had happened since. I decided to surprise her with an anniversary celebration. \n\nWe spent the day fishing. Getting back to the camper, we showered, dressed and went to dinner. She was wearing a LBD that reached to the middle of her thighs. The neck line showed some cleavage. Dinner was a special affair. We ordered some expensive wine, she had lobster, I had steak. After we had eaten, I reached into my pocket and found the ring I had purchased months ago. I said, \"Molly, you are a very special person to me. We have loved each other, made love, and I doubt that I could live without you any more. Please don't ever leave me.\" I slipped the ring on her finger. Tears were running down her cheeks. People at near by tables applauded. \n\nWe returned to the camper. We made love. Long slow love. She sucked my cock, I licked her clit, fingered her pussy, made her cum several times. We gazed into each others eyes. Damn, those emerald eyes were beautiful. We laughed and Molly giggled. We made love again with Molly on all fours and I pounding her from behind. I smacked her ass a few times and she came hard. We slept curled up like new lovers. During the night we would awake briefly, kiss, hug and then fall back to sleep. \n\nMorning brought another session of sex, a little rawer, but still passionate and loving. \n\nWe fished, made love, laughed and enjoyed being with each other. \n\nWe planned to be in Michigan for about two months. Over time I had met a variety of fishermen that frequented the AuSable River to fish. They mostly stayed at a lodge on the river. On rainy mornings, Molly and I would go down to the fly shop at the lodge and have breakfast, look at the new tackle and other fishing toys, pick up a few flies and tell lies like all fisherman do. Molly was accepted by most of the guys there because they had seen her on the river and, truth be known, she could out fish most of them. \n\nReturning from fishing one Friday afternoon, we found a huge RV parked several spaces away from us. It had several push outs and was probably twice as long as my camper. It wasn't built for travel off the grid, it was a definite interstate cruiser. No one was around so we cleaned up, poured ourselves a bourbon, got a fire ready for the evening, talked about the fishing and where we might fish the next day. About an hour later we heard voices coming up from the river and another couple showed up, waved and walked to the RV. Unlocking it, they must have hit a switch, a generator started, lights came on, a TV started blaring and the quiet was shattered. Molly and I looked at each other and just shook our heads. I hoped that they shut that thing down early so we could sleep. \n\nSome time later, the woman stepped out of the RV and came over. She introduced herself as Dana and said her husband was Gene. Apologizing for the noise, she said they would be shutting down in a short while so as not to disturb us or anyone else in the camp ground. We talked briefly, she indicated they were from Grand Rapids. Gene had an insurance agency and she quit working as a teacher to work in the office and help the business grow. She appeared to be in her mid-30's and seemed like a nice person. They were up for the weekend to do some fishing and would be leaving Sunday afternoon. \n\nAfter she left, Molly and I headed to bed. Of course we were naked and it wasn't long before we were busy making love. Molly was laughing and giggling and soon both of us had come. We kissed, spooned together and drifted off to sleep. The quiet returned. \n\nSaturday morning, we went over to the North Branch and fished for brook trout. The North Branch is a nice wadeable stream, intimate and fun. It has a nice quiet voice that speaks to me from time past when they did logging in up state Michigan and ran the logs down the river. Both Molly and I enjoyed wading that section of the river and had a great time. We caught lots of 6 and 7 inch brookies on small 3 wt fly rods. It was a fun way to spend a nice spring day. \n\nBack at the camper, I realized we were out of bourbon and had forgotten to stop and buy some. I told Molly I was going to run out to a little package store and get some. She said she would stay at the camper and do a little reading. \n\nWhen I returned, Molly was not at the camper. Inside I found a note saying she was next door at the RV and to come over. Knocking on the door, I heard a muffled \"Come in.\" Inside was like a motel suite, fancy, carpeted, sofas, chairs, TV. \n\n\"We're in the back, come on back.\" \n\nI stepped toward the back and was shocked. There was Molly, on all fours with an 8 inch cock in her mouth and Dana eating her pussy. Everyone was naked. The guy looked over at me, said, \"Hi, I'm Gene, you must be Tom. Nice to meet you.\" He held out his hand to shake. Stepping forward I shook his hand. Dana pulled out from under Molly, \"We can explain later, but would you like to join us. Molly said you would.\" Molly was shaking her head yes without losing the cock in her mouth. What the hell, I stripped. \n\nDana was a very attractive woman. She was about 5-6, brown hair, hazel eyes, a well cared for body. Nice boobs, ass, legs and a pretty smile. She dropped to her knees and started playing with my cock. Sucking it into her mouth, it quickly became hard and she was working it even harder. A few minutes later, Gene blew his load down Molly's throat. Molly pulled off, looked at me, smiled, \"Hi hon, you like?\" I must have still had a questioning look on my face because Molly giggled. She laid back, spread her legs and Gene started fucking her and playing with her tits. Dana was still sucking my cock. I was getting close and did not want to dump my load yet, so I pulled out. She sat back, looked up with an expectant look on her face. \n\nI wanted to suck her tits and eat her pussy. Helping her to the bed, I did just that. She must have liked it because she pulled my head against her tits. Molly reached over and started stroking my cock. I moved down to her pussy, licking, nibbling and kissing her pussy lips. I moved up to her clit and sank a finger in her pussy searching for her g-spot. I knew immediately when I found it. Her ass came off the bed. I inserted a second finger and she started having small orgasms. I continued to work her clit and pussy and she started her climb toward orgasmic bliss. After riding out her orgasm, she started settling back, I stuck my cock in her pussy and started pounding. Gene was pounding Molly. The girls looked at each other and started playing with each others tits. Dana got back on the rocket to the stars. I reached under her and pushed my finger in her ass and she exploded. \n\nGene and I both came about the same time. I pulled out of Dana and Molly moved to clean off my dick and Dana moved to clean Gene's. Then they got into a 69 and started cleaning each other. Both went on another orgasmic ride. \n\nAs we laid back and rested the three of them explained how it happened that I walked in on them fucking. Dana had come over to the camper and got a quick tour. Molly explained how we met and our trip. Dana invited Molly over to their RV for a tour. Two bedrooms, king size beds, a huge bathroom. Apparently, Molly also explained our sex life because Dana was quick to say the Gene and her were swingers and swung with a few couples from Grand Rapids. The invitation came out and Molly said yes as she was getting undressed. About that time, I showed up. \n\nWe didn't get dressed. Dana and Molly cooked dinner while Gene and I compared notes on my camper and his RV. We shared a drink and admired the ladies from all angles. At dinner, feet were in crouches and boobs on full display. Nipples were hard. After dinner, we watched some porn on the TV while Dana and I played with each other. Gene and Molly were busy as well. At bed time, Molly and Gene went to one bedroom while Dana and I went to the other. We could here Molly giggling as Gene fucked her. Dana and I were busy as well. She was on all fours and I was fucking her from behind. I slapped her ass and she shook it again indicating I was to continue. She turned around and sucked my cock into her mouth and then we fell into a 69. As she came, I had my finger in her ass. I filled her mouth with my spunk. Later she said, \"I've never had anyone stick a finger in my ass. I loved it. I think I may have to try having my ass fucked.\" I explained that I would not be able to stay hard enough tonight to help her out. \"I have just the person in mind when we get back to Grand Rapids.\" We fell asleep spooning with a tit in my hand and her hand on my dick. \n\nSunday morning, Dana and I had a quickey and apparently so did Gene and Molly. The girls traded phone numbers. Dana invited us to stop by if we got to GR and they would throw a party with their friends in our honor. We ate breakfast, got dressed and returned to our suddenly very tiny camper. Molly hugged me, \"Did you have fun? I did!\" \n\n\"Yes, I did. Now lets go fishing.\" \n\nWe fished for several more weeks. Finally, we got the urge, so we packed up the camper. \n\nWe headed west. We repeated last years trip without going to Alaska. While in Bozeman, we spent time with Em. Molly and Em had a special relationship and spent hours eating each others pussy, sucking on nipples, fingering each other. Molly bought some vibrators and dildos. I benefitted by watching as they made love to each other. I joined in and fucked Em and Molly. Em kept talking about my taking her anal cherry, but it never developed. I did play with her and Molly's asses and rosebuds. They always came hard when I did. I also rimmed Em's ass hole while Molly was eating her and that caused her to have an especially hard orgasm that flooded Molly's face with her pussy juice. I loved cleaning both girls up. \n\nEm went back to school and work. Molly and I went fishing. We seemed to find quiet little streams to fish and we found places to fuck. Both Molly and I took to wearing only underwear under our waders. We could reach down inside the waders and play with each other, then drop the waders and fuck, standing up in the stream, on the bank or any other way we could find. \n\nI decided it was time to visit Vegas. We went on line to find a camp ground or RV park. Molly found a place called 'Babes &amp; Dicks Adult RV Park'. Molly was concerned that it was a real sleaze bag type of place, but I said, \"Let's call them and see.\" Turns out they were a nudist camp ground, but they were having a unique weekend when we were planning to be there. They asked all kinds of questions and then explained that they were having an orgy weekend. Molly looked at me with a smile and said, \"Do you want to go?\" I looked at Molly and said, \"Something on my bucket list.\" So she booked a five night stay. \n\nWe arrived Tuesday night and were escorted to our site. We left the camper there and drove into the strip area of Vegas. We wanted to see some Vegas shows, gamble and do the Vegas thing. We managed to get tickets to see Celine Dion at Caesars Palace and enjoyed a great concert. We also got to see Cirque du Soleil in an afternoon show. We gambled, broke even at the tables, played the slots and had a good time. We ate too much, but its Vegas. Returning to our room on the 18th floor of our hotel Thursday night we got off our elevator when a young blond rushed over and started admiring Molly's hair color, wondering if it was natural, where did she get it cut, etc. Molly and I looked at each other and slowly headed down the hall to our room. The blonde walked with us. I was getting a little concerned at her behavior. At our door, we paused and she said, \"My hair is natural too. See?\" She pulled up her very short skirt and flashed her landing strip at us. It matched her hair. \"My boobs are natural too.\" She grabbed Molly's and my hand and placed them on her boobs. \"Would you guys like to fuck? My husband is in our room fucking a couple of girls he picked up and so I decided I would find someone to fuck too.\" \n\nI looked at Molly, she looked at me. I was ready to tell her no when Molly said, \"Ok, you can join us for a fuck, but you can't stay the night.\" I looked at Molly thinking are you on drugs or something. We opened the door and I let Molly and the blonde in ahead of me. I decided to put my wallet and keys in the room safe. \n\nI said, \"How old are you? You look pretty young. Are you a hooker?\" \n\nThe blonde laughed. I still didn't know her name. \n\n\"No, I'm not a hooker and I'm 25. I'm here to try out for one of the dance groups. My husband and I live in LA but we're both trying to get work here. We swing with a group of friends and we decided to have a wild time while we were here. You know the old saying, 'What happens in Vegas...' \". \n\nWith that she peeled off her dress and was naked. She turned to unbuckle my pants as Molly slowly undressed and sat back to watch this kid fuck me. She sucked in my dick and started giving me a blow job. She knew what she was doing. I pulled her up, pushed her on the bed and let her start sucking me again. I slipped a finger in her pussy. She was really wet. I curled my finger up to her g-spot and she arched her back and let out a loud moan. She acted like no one had ever touched her there. I glanced at Molly. She had her fingers in her pussy and her head was back with her eyes closed. I refocused on the blonde. \n\nStroking my finger in her pussy and rubbing her g-spot was getting her close to coming. I added a thumb to her clit and she exploded. She actually squirted. She squealed and stopped sucking my cock. Pushing me back, she climbed on me and sat down on my cock. Bouncing, hair flying, tits dancing on her chest, she fucked me. She was energetic and I finally blew a load in her pussy. She crawled over to Molly and started eating her pussy. Molly had been close to an orgasm and she came after just a few seconds of tongue action. \n\nStanding, the blonde picked up her dress, said, \"Thanks guys. It was fun.\" She walked out the door naked carrying her dress. Molly and I looked at each other and started laughing. Then we said almost simultaneously, \"Only in Vegas!\" \n\nFriday morning we slept in, showered, had a leisurely breakfast and left at noon for the camper. We got to the camper and people were walking around naked, meeting neighbors and apparently, old friends. \n\nA reception was being held at the community center beginning at 6:00 pm and then anything and everything was allowed. Molly and I lounged around the park for most of afternoon. Naked people wondered by, introduced themselves, checked us out as we checked them out. Around 6:00, we walked naked, hand in hand to the community center for the festivities. There were probably 60 naked people there. \n\nAt 6:15 the young lady that had shown us to our site announced that the party was now open to what ever anyone wanted to do. She reminded us that No meant No. Have fun. A woman next to me grabbed my cock and started pulling. I turned towards Molly, but some guy was kissing her and jamming a finger up her pussy. She looked at me and smiled, I smiled back. The next thing I knew I was flat on my back and the woman was sucking my cock and another was sitting on my face. I hate to admit it, but the woman sucking my cock was very talented and the pussy I was eating was also very good. Surprisingly, I came in a few minutes and was showered by pussy juice from the woman on my face. They got up and wondered off looking for another cock and tongue. I needed a drink before another woman found me. \n\nLooking around, I saw Molly being pounded by some young stud with a 9-10 inch dick that made me jealous. She seemed to be enjoying herself. Then another woman laid down in front of her and Molly was eating pussy while being pounded by that stud. I got hard as stone watching. A woman walked by, I grabbed her tits, smacked her ass and said, \"Want to fuck?\" She said, \"Fuck yes, that's what I am here for.\" She promptly laid down on a table and spread her legs. After I filled her pussy with cum, I headed back to the camper. I was done for the night. About an hour later, Molly returned. I asked her about the young stud, she said, \"He had a big dick, but didn't know how to use it. I much prefer you and your dick because you know how to make me and any woman a very happy woman.\" Boy, did that make me feel better. \n\nThere were a variety of activities, including pool activities, that were designed to mix people and get them fucking. I must have fucked a dozen different women. Molly must have fucked a dozen different men and women. \n\nSunday night, Molly and I were back in the camper. We were both worn out, but it was good to be hugging and kissing each other again. We didn't make love, but we held each other and told each other how much we loved them. \n\nThe next morning we headed east. \n\nFor several years we followed my original journey from the first year. Michigan, Montana, Texas, New Orleans, Key West, Cape Cod and Sasha, back to Michigan. Every other year we went to Alaska. We seemed to meet the same people every year at the same camp grounds. There seems to be a whole sub-culture of people that live in an RV and travel. Some have been traveling together for several years. In Alaska, we usually didn't stay in camp grounds. My camper had solar panels on the roof that powered a battery system. This allowed us to live off the grid. We would camp on the shore of a lake or close to a river we wanted to fish and enjoy our solitude. We even sat naked and fucked in front of a camp fire if the bugs weren't too bad. We would see bear, eagles, osprey's, and other wild life. I tried to photograph all of it, including a naked Molly while we were skinny dipping in a lake. ",
        "The third year we were in Bozeman for Em's graduation. We celebrated, fished and fucked together. She had a job at the Bozeman Hospital and was starting her new career. I gave her some money to put towards a better car or truck. We moved on. \n\nWe went to Texas and spent Christmas in Houston at the same hotel. It brought back fond memories to both Molly and I. Again, we fucked all Christmas Day. We spent the month of January fishing along the Padre Island National Seashore. We spent most of our time off the grid so did not meet anyone other than an occasional fisherman, bird watchers or shell collectors. \n\nWe decided we would knock another item off our bucket list and go to Mardi Gras. We finally found a place to stay and a place to park the camper where it would be safe. \n\nNew Orleans was a mass of humanity. Watching the parades, Molly flashed her tits at every float and collected an impressive assortment of bead necklaces. Some people standing near us invited us back to a party. We went in the spirit of the week. Walking in, everyone wore only underpants. All the women were topless and their panties looked more like dental floss. The men didn't have much on either. I felt overdressed with a pair of briefs on. Molly leaned into me and asked, \"Do you want to stay?\" Before I could respond we were swept away into a mass dance. Everyone was dancing and feeling anyone near them. I swear every hand in that room grabbed my cock during the dance. Molly later said the same happened to her tits and pussy and then admitted to doing the same thing. In one corner there were a couple of women getting it on and in another corner some guy was getting a blow job. For the most part, it was just getting drunk and feeling up anyone that walked by. It wasn't a mass orgy or swingers party. It was fun, it was different, but the smoke, noise and constant music started getting to me. I found Molly and she indicated she was ready to go. Finding our clothes proved to be a bigger challenge than we anticipated, but we found them or something similar and left. \n\nWe got the camper and went down to the delta to fish and decompress from the noise of the city. Just the wind, birds, water and a few fish had us feeling better after just a day. A few weeks of laid back camping, sea food, wind and sun and we moved on to Key West. \n\nWhile in Key West, I woke one night having severe chest pains. I thought I was having a heart attack. Molly called 911, the ambulance came and took me to the ER. Fortunately, it was my gall bladder, a little surgery to remove it and all was well. It got us to thinking that maybe it was time to stop our nomadic life style and buy a house and settle down some where. We talked about it off and on for weeks. We talked about where we would live, Michigan was too cold and had too much snow, Montana was the same. Texas and New Orleans were too hot and humid in the summer. Cape Cod was cold in the winter and crowded in the summer. The Outer Banks was too exposed to hurricanes and had too many tourist during the summer. We could not reach a decision. \n\nThe end of April, we headed north toward the Outer Banks. We planned to spend a few weeks fishing there. The camper had 300,000 miles on it and needed some major maintenance. We planned to have the work done before we moved north to Cape Cod. We were having another discussion about where we would live when we stopped traveling. We were in North Carolina headed to the Outer Banks. Cape Lookout was near by and we were headed for the ferry. Suddenly, there was a BANG, steam or smoke poured out of the hood of the camper, I looked in the mirror and there was smoke coming out of the exhaust. I got the camper to the side of the road, grabbed the fire extinguisher, opened the hood and put out a small fire. There was oil all over the ground, electrical cables were burned and fuel was leaking. \n\nMolly joined me looking at the damage, I said, \"The camper may have just told us where we are going to settle down.\" \n\nWe called a tow company, disconnected the pickup, arranged for a hotel, followed the camper to a repair shop and prepared for a little R&amp;R time. I spoke with the owner of Eddie's diesel repair. He said he would have an estimate tomorrow, but it was going to be in the thousands or maybe ten thousand and would take several weeks. I said, \"Do you know anyone that would be interested in buying this as is?\" \n\nEddie said, \"I fish the Outer Banks and am getting ready to retire next year. This would make the perfect camper for me to use after it's repaired.\" \n\nI looked at Molly, shrugged. I had been on the road for 4 years, Molly 3 years. We whispered that maybe it was time. I asked Eddie how much he would give me. I showed him the maintenance records. We negotiated a price and I sold him the camper. He went to the bank to get a check. Molly and I began transferring our personal stuff to the pickup. I realized how little we really had. Some clothes, fishing tackle, computers, cameras and not much else. \n\nWe checked into the hotel. Molly, \"Well, what now?\" I said, \"We've talked about settling down, this area may not be bad. Lots of water, fishing is good, housing is reasonable. Maybe this is the place.\" \n\nWe called Sasha to explain our situation and explained that we would probably not make it to the cape this year. She was disappointed but understood. \n\nWe had a lot of discussions about what to do. Pros and cons, etc. Finally we decided to look at property for sale and see if we could find something that we'd like. We made a list of must haves. We really wanted to be on the water. After that, it was nice to have. We decided on a budget and called a realtor. She was an attractive women, married, kids and showed no interest in outside activities. Over the next few weeks, we looked at over 50 properties but could not decide on one we liked. Back at the hotel one night, as we were discussing another day of looking, I suggested we just look at finding the right property and then remodel the house to make it ours. Molly agreed. We adjusted the budget, called the realtor. It was several days before she had a list of properties to show us. Some we had already looked at. \n\nFinally, we found one that met our criteria, made an offer, it was accepted and we closed. Molly and I made love to celebrate. Those emerald eyes sparkled as I made long slow strokes in her pussy, kissed and sucked her nipples, kissed her lips as she moaned and humped back at me. It did not take much and she came, juices flooding my cock and the bed. I joined her and pumped cum into her pussy which then ran down her ass and added to the wet bed. We laughed, giggled and held each other tight. \n\nOur lives were changing again. \n\nMolly found a designer and got excited about designing our new home. Once the design was approved we found a contractor, got a quote, signed a contract and work began on the house. Molly went out and bought a new red mustang convertible. She was like a kid again. I found a used pick up to replace my aging truck and started visiting the house every 2-3 days. Having worked in construction, I knew there would be delays and overruns so I accounted for those when I leased a place to live and when I developed the budget. \n\nOne of the first things I did was have the dock rebuilt and a boat lift installed. I began looking for a boat so I could fish in the sound and out on the ocean. A couple of weeks of looking and I was the proud owner of a 23 ft center console, complete with state of the art electronics and other goodies. \n\nWorked continued on the house. Molly was out shopping for furnishings and I shopped for appliances. \n\nEight months later and several thousand over budget (partly my fault) we moved in. Over the next couple of weeks, Molly and I made love in every single room...the kitchen, the great room, the bedrooms, the den, the bathrooms, the porch, even the dock and the boat. \n\nMolly had started working three days a week at a vet office. On those days, I went fishing alone, weather permitting. Usually I was home between three and four. Now that I could fish any time I wanted, I didn't have an over powering need to fish from sunup to sunset. I had caught a couple of fish and thought I would cook them on the grill. After cleaning them, I walked up the dock into the kitchen and Molly was there with a very short tee shirt on and a smile on her face. She wrapped her arms around my neck, kissed me and said, \"Come on old man, make love to your horny lady.\" I picked her up, planted her ass on the island, spread her legs and admired her pussy. Grabbing a stool, I sat down, pulled her to my face and said, \"I think I'll have desert early tonight!\" and began licking my horny lady. It didn't take long before she was having mini-orgasms. After a few, I picked her up, she wrapped her legs around my waist and I carried her to the bedroom. \n\nDumping her on the bed, I pulled my clothes off. Molly got on all fours, reached for my cock, slipped her mouth over the head and started pleasuring me. She would pull off the tip, lick it, lick the length of it and then put it back in her mouth. Her hands were pumping it and she would suck on it. Then she would play with and suck my balls. I could feel the tension rising in me. I grabbed her, turned her around and entered her from behind. It didn't take long and I was filling her pussy with my cum. \n\nShe fell forward as I pulled out, rolled over, held her arms open and invited me to join her. As we hugged and kissed she said, \"I love you old man.\" Her emerald eyes were sparkling, her smile dazzling and I loved it. \n\nThe fish, wine and desert were wonderful. \n\nSEVERAL WEEKS LATER \n\nMolly was up fixing breakfast when I walked into the kitchen. Molly wasn't working today and we planned to fish together. I walked up behind her nuzzled her neck, copped a feel of her boobs and remembered our loving a few days ago. I got myself some coffee as she said, \"Morning hon. I've been thinking.\" Now all you guys out there know that only means, work, trouble or money. \n\n\"You have huh. What's it you've been thinking?\" \n\n\"Your birthday is coming up in a few weeks and I think it might be nice to have a party.\" \n\nTurning 60 is not my idea of something to celebrate with anything other than a horny woman and some fine bourbon. \n\n\"How bout we just go fishing, out to dinner, come home and fuck ourselves silly.\" I leared at her. \n\n\"No hon, come on, we have this nice house and we've met some neighbors, I think it would be fun to have a party.\" \n\nI could see I wasn't going to win this one so, \"What ever, you plan it. I'll go fishing and get back at the usual time and try to be a good host.\" \n\nThe subject didn't come up the rest of the day while we fished. We had a great time fishing, catching fish. There were a lot of boats out so we mostly behaved ourselves while on the water. \n\nWe returned to the dock, lifted the boat, had dinner and life moved on. I forgot about the discussion. \n\n\"Good morning hon, happy birthday.\" She wrapped her arms around my neck and gave me a kiss that included a bunch of tongue. \n\nToday was my birthday. I was turning 60 and not overly thrilled about it. \"Thank you. What's up today? Are we going fishing?\" \n\nObviously, I had forgotten all our earlier discussions. \n\n\"Nope, I'm not going fishing, but you can. I'm going to stay in and bake a cake for you. Have fun, see you this afternoon.\" She patted me on the ass as I walked out. \n\nLater that afternoon, I returned with some fish, put the boat on the lift, cleaned the fish and walked up the dock, entering the kitchen. Molly was bent over pulling a chocolate cake out of the oven wearing only a pair of bright green panties and nothing else. \"Hi hon, good day?\" \n\n\" Yah, but it just got better.\" \n\n\"Easy old man. You can't have this woman until later.\" \n\nI pouted, but pulled back and headed for the shower. \n\nReturning, wearing a pair of gym shorts, I said, \"So what are we doing tonight?\" \n\n\"Sit down, and close your eyes.\" \n\n\"Why?\" \n\n\"Because I said so. I have a surprise for you. Now shut up and sit down.\" \n\n\"Yes dear.\" I sat down and closed my eyes. \n\nI heard some movement and then Molly said, \"Open your eyes!\" \n\nOh shit, there was Molly, Susan, Em, Sasha, all topless wearing the same bright green panties. \n\n\"HAPPY BIRTHDAY OLD MAN!\" \n\nI was stunned. They all came over and kissed me, rubbed my cock and laughed. I was still stunned, \"How, when, where, fuck, you guys are beautiful. Shit.\" My eyes must have been huge. \n\nEveryone laughed. I tried to kiss each and cop a feel. This may turn out to be a great birthday after all. \n\nSlowly, the explanation came out. Molly explained that since I didn't want a party with the neighbors, she decided to call Susan, Em and Sasha and see if they could come down for a party. Susan was planning to come down shopping for a condo, Sasha was planning to move her guide business to North Carolina or Florida and Em was looking for a new job away from the snow and cold of Montana, so they all decided to come and celebrate my birthday. \n\n\"Damn, how could I get so lucky? Especially for an old man.\" \n\nAll the girls remained topless. Molly and Susan began to put together dinner, Em sat in my lap and worked to excite me, Sasha found a bottle of vodka and began serving drinks. A couple of Sasha's vodka's and I started playing grab ass. She loved it. The others were laughing and watching. I pulled my shorts off and my cock was at full mast. Sasha bent over, pulled her panties off and I got another look at that magnificent ass. I couldn't keep my hands off it. She backed up to me and I entered her from behind. The others were cheering, clapping and laughing. \n\nI pounded her hard. Sweat was pouring off my head, dripping on her back. Em walked over, reached between my legs and started playing with my balls. I grabbed Sasha's tits and held on. I could feel my cum rising in my balls. I erupted in Sasha's pussy, she screamed and came. I pulled out and Em dropped to her knees and began cleaning Sasha up. Sasha came again. Molly and Susan were cheering, I was exhausted. \n\nDinner was out standing. Fresh seafood, steak, wine, salad, bread, bare tits and feet playing with my cock. Molly served the birthday cake with the appropriate number of candles and ice cream. I blew out the candles with some help. I began eating the cake and ice cream when Susan put some ice cream on her tit and said, \"Clean me off!\" How could I resist. Soon I was licking all the girl's tits and then it progressed to their pussies. I also found ice cream on my cock and they were cleaning it off. \n\nWe were laughing and groping each other. Molly and Em got together and were sucking each others tits and playing with each others pussy. Susan and Sasha pushed me down, pulled off their panties. Susan sat down on my cock, Sasha sat on my face. I ate, fucked and all came. We couldn't stop laughing, but the feeling and playing did not stop. \n\nEventually Molly yelled stop. Let's clean up the food and dishes, then we can continue. Sasha had to leave the next day so she got me for the night. Susan went to one of the bedrooms and said. \"Tomorrow you're mine for the entire day and night. Get some rest old man!\" \n\nMolly and Em went to the other bedroom and Sasha and I went to my bedroom. What a night we had. Sasha likes sex a little bit rough and I gave it to her. I spanked her ass, used clothes pins on her nipples and bit them hard. She kept coming and yelling for more. I came on her face and was done, but continued to please her with fingers and my tongue. She came a bunch of times. When we finished, we fell into each others arms and went to sleep. \n\nIn the morning, I woke to her sucking my cock with her pussy above my eyes. Damn, what a wondrous ass. I played with it while I ate her pussy. I stuck a finger in her ass and she came all over my face. I erupted in her mouth. She turned around and kissed me, her eyes alive with the start of the new day. \n\nWe went out to the kitchen naked to get some coffee. Molly and Em soon joined us, both naked with cum all over their faces. Susan showed up naked with a phone glued to her ear talking business. \n\nAll I could think was \"What did I do to deserve four beautiful naked women?\" \n\nSomehow breakfast got served. Sasha had to leave to investigate where she wanted to move her guiding business to. Susan grabbed my cock and said, \"This is mine for today and tonight.\" All the girls laughed. \n\nAfter Sasha left, Susan dragged me into the bedroom, pushed me on the bed and sucked my cock until it was hard. Then she climbed on and began fucking me. \n\nWe spent the entire day naked and fucked each other as often as I could get it up. Molly and Em were also naked all day and gave us shows that made me hard. Susan watched, but never joined in. She was focused on my dick. We ate dinner that night and then shared desert the same as last night. Susan did lick some ice cream off both Molly's and Em's boobs and they cleaned her boobs. She didn't lick their pussy's. All three sucked whipped cream off my dick and Susan got a mouthful of my cum. \n\nMolly and Em shared a bed again that night as Susan and I spent the night together. We enjoyed the jacuzzi and a shower before bed. Our hands and lips were all over each other. She explained that tomorrow she was meeting with a realtor to look at condos to buy. She wanted one for vacations, to give a week to her employees for good performance and to rent in the peak rental season. We crawled into bed. I was pretty worn out, put she got me up one more time, climbed on and we fucked until sleep over took us. \n\nThe morning was a quick fuck, she showered, dressed, and was off to meet the realtor. \n\nNow it was just Em, Molly and I. Once again, we ate breakfast naked, feet exploring cocks and pussies. We decided to take Em on the boat for some fishing. Both girls wore very small bikinis. I enjoyed applying sun screen to both of their bodies, particularly around their boobs and ass. I have become a dirty old man, I guess. \n\nEm, Molly and I went out on the boat. The fishing was slow for most of the morning and the girls decided to get naked and sun bath. I enjoyed putting sun screen on them again as they laid down on towels on the deck to sun bath. The coast guard was out doing boat inspections. I had never been boarded, but knew there was always a chance. Suddenly, the coast guard announced that they were going to board me to do a safety inspection. Both girls jumped up to try and cover up, but ended up with towels wrapped around their waist and their boobs on full display. The coast guard boarded the boat. Now typically, these inspections take about 10 - 15 minutes and the coast guard boat backs off about 50 feet during the inspection. My inspection took almost 30 minutes and the coast guard boat tied off to my boat. All five of the coast guardsmen could not stop looking at Molly and Em. I could tell Molly and Em were trying not to laugh as they watched the coast guard men checking them out. All were wearing sun glasses so you couldn't see their eyes. Finally the inspection was over and the coast guard boat pulled away. The girls busted out laughing. \"Did you see them checking us out?\" Em yelled. \n\nMolly said, \"Can you imagine them tonight in their bunks jacking off as they think of us. Just think of all that spunk that could be sprayed on us. Damn, I'm getting wet just thinking about it.\" \n\nMolly and Em could not stop laughing and talking about the event. \n\nThe fishing improved in the afternoon. We had a great time, caught fish, released fish, and caught more fish. We kept a couple for dinner. We also had a hard time keeping our hands off each other. Back at the house, the girls pulled their tops off as they walked up the dock. They were both swinging their asses in a very seductive manner. ",
        "They continued to talk about the men from the coast guard and wondered how big their dicks were and about them jacking off that night. \n\nOnce in the house, we went to the master bedroom shower, stripped and began to wash each other off. We kissed, rubbed, grabbed, stroked, fingered, hugged, moaned, until the hot water ran out. All of us had cum at least once, with the girls multiple times. \n\nWe got dried off, I put on a pair of gym shorts, the girls slipped on a tee shirt and we prepared dinner. I cooked the fish on the grill, the girls made a salad, we opened some wine and had dinner on the deck. As we moved around picking up dishes, I had hands up my shorts feeling my cock, I slipped fingers into pussies, we kissed, laughed and generally teased each other. My dick was hard again. Desert was cum. \n\nSusan returned and announced that she had bought a condo. We were happy for her and listened closely as she described it. It was only a few miles from us, new construction and she would get to choose all the upgrades. It should be completed in about 6 months. She asked me to monitor the progress and keep her informed of any problems. She would return in a month or so to pick out flooring, lighting, cabinets, appliances, paint, etc. She had had a call from the office and was having to leave in the morning to deal with issues at work. I was sad to see her go, but she has always been about business and this was no different. \n\nMolly, Em and I retired to the master bedroom. I was tired and promptly fell asleep. I don't know what Molly and Em did. \n\nThe next morning, Susan left and Em used my computer to go online and look for open positions near us and to set up some interviews. Her interviews went well, but it would be several weeks before she received any offers if she were to get any. She returned to Montana to wait for any offers of employment. \n\nSasha called, she was headed to Florida to look at opportunities down there before heading back to the cape. \n\nMolly and I settled back into our routine. She worked three days a week, I fished and started organizing all the photos that had been taken on our travels. I found a photo of Sasha's ass, printed it and had it matted and framed. It hangs above my desk in the den. I also have a photo of all four of my girls, topless at my birthday party. That hangs in the bedroom. \n\nOne winter afternoon, I was sitting at my desk tying some flies when Molly came in, sat on my lap, pulled up her sweater and said, \"My boobs need attention.\" I smiled and kissed them. I reached over and grabbed an Ostrich feather from my fly tying materials. Molly watched with interest and a smile. First I rubbed it across her upper breast, then down between them and over both nipples. Apparently it felt good because of the ohs I was getting from her. I continued doing this for several minutes then whispered in her ear, \"Imagine what this would feel like on your thighs, pussy and clit.\" She jumped up and pulled her jeans and undies off, sat back on my lap, spread her legs and looked at me with a very expectant look on her face. Her emerald eyes were flashing. I rubbed the feather across her thighs, down the inside of one, up the inside of the other and then across her pussy. She jumped and moaned. I did it again, but this time I was licking and kissing her tits. Next I ran the feather up her slit to her clit and then moved it back and forth as lightly as I could. She was gushing, moaning and then she came. \n\nStanding up, she giggled and said, \"My boobs like that kinda attention!\" and walked out swinging her beautiful ass. \n\nMy retirement has turned out to be far better than I could have ever imagined. I wake up next to the girl of my dreams every day, have more sex than I ever had before retiring. Molly makes me walk every day, so my weight is down and I can chase her around the house, not that she runs away very fast. I fish, work on my photography, and Molly and I enjoy a bourbon together at the end of the day. Life is good. \n\nTHREE YEARS LATER \n\nNot a lot has changed in the past three years. Molly no longer works for the vet but does some volunteer work for an animal shelter. We both work out at a gym. A few weeks ago I had my first physical in a long time and the doc said I was in good shape but could lose a few more pounds. Molly also had a physical and was told she was in great shape. \n\nSusan sold her real estate and development business and moved down to her condo. We see her a couple times a month. She works part time as a real estate agent just to keep her hand in things, but spends most of her time working with some local charities. She has also taken up painting and is doing quite well. Susan and I spend a weekend together every other month. \n\nSasha moved her boats and business to Key West. Molly and I book a week with her every February for some fishing. She has met another guide and they are combining their businesses. She doesn't drink so much any more, but we have a good time and continue to play grab ass when we get together. \n\nI came home from fishing one day a couple of years ago to find a pickup with a U-Haul trailer in the drive. Em had accepted a job at a local Urgent Care facility and moved without telling us. It was a nice surprise. She and Molly spend a weekend each month together going to the spa, shopping and other girl stuff. Every other month they spend the weekend at our house and I get the benefits of two women. The off month is just the two of them at Em's place. Em is dating a guy about 10 years older than her. Molly says he is good in bed. Hmmmmmm. \n\nOnly once in all the time that Molly and I have been together has the 'M' word come up. Molly said, \"I like things just the way they are, so let's not change a thing.\" \n\nNow I hear Molly calling from the bedroom. Something about being horny. Guess this morning wasn't enough. \n\n\"Coming dear!\""
    ],
    "authorname": "Creekman",
    "tags": [
        "group",
        "group sex",
        "retired",
        "mature"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/retirement-travels-ch-05"
}