{
    "title": "A Slave to the Servants Ch. 34",
    "pages": [
        "Welcome back, Lit!\n\nAs always, many thanks to Steve150177 for his tireless efforts to make the story better. The finished draft is always better than the original! \n\nI hate to do it, but the moms I know tell me I should... \n\nI apologize because the next chapter will be out at the end of June. I should be stoned for keeping the last several chapters like this, but I don't think I'll be in any condition to have a hobby for several weeks. My delivery is scheduled for Thursday - which is about a week sooner than initially planned. The time has just run out. \n\nMost of the last chapters are at least partially written, but they need work. I thought I could get it done, but I'm just not that fast. The story will absolutely NOT be left hanging - that makes me nutty. I do hope you all return to read the ending! \n\nPlease vote and comment and again - I apologize for the hold up. I know it's no consolation to those who enjoy the story, but I think my little girl will be worth it! \n\nThank you! DW\n\nChapter 34\n\nWe walked up the Administrator's steps and marched into their hall. It felt a little like the first day as I approached the head of the room, but today I had no fear. Gunth's family stood with Hassar and Reed staring at us with obvious frustration and irritation. The other Administrators stood at their tables busily working. They tried to ignore us and failed. My stomach was quite the attention getter. \n\nHannah and Ra stood to the side. I heard Hannah's shocked sounds as she saw how truly large I'd gotten. I looked like a woman at least seven months pregnant, but it had been nowhere near long enough for me to look like that. \n\nKennedy and her Sisters entered behind Rose and me. They stood to the side, as though waiting for something. This was not their battle, so I was glad they were letting us fight it on our own. \n\n\"Children,\" Hassar announced formally, \"must be planned for carefully. We do not encourage unsanctioned breedings in our camp.\"\n\n\"Moreover,\" her Sister, Reed, continued, \"if this breeding occurred with the men we think it did, that is even worse. You were forbidden to have contact with your former owners-\"\n\nRose interrupted and the sound of her voice carried. \"Only YOU,\" she said with great authority, \"still call them owners. They do not think of themselves that way and neither do we. You are unaware of what has been happening in your camp, Administrators.\" \n\n\"I am not unaware of what has been happening in this camp, Rose,\" Reed answered sharply. \"You were tricked and trained. We thought you were learning freedom from us. It is evident neither of you have learned anything!\" \n\nRose snorted and lay her hand over the hilt of her sword. It was clear she was pointing out her obvious changes. \n\n\"I have had other options,\" Rose said blithely. \"I talk with many men and I made my choice. Basin and his Brothers have made mistakes, but they have atoned. We enjoy each other and I wish to be with them.\"\n\nThe sound of foot steps got my attention and I turned to see Damien's family and Basin's family come into the hall. They were running and looked worried. \n\n\"You defied us,\" Hassar said simply, addressing the men. \"We invited your families to experience freedom and you have kept a slave-\"\n\nI shouted, but didn't mean to be so loud. \"I - AM - NOT - A - SLAVE!\"\n\nThe undercurrent of the men's feelings flowed through me and I felt their pride. I was strong and powerful, certainly a good addition to the family. \n\n\"We will separate you permanently,\" Reed said cooly and I shook my head at her.\n\n\"No, you won't, it isn't your place to make my decisions for me. I am not a slave to anyone. Besides that, I am carrying a female and she needs her male breeder. I will not leave these men. They have learned to respect me and love me. Send us out of your camp if you wish, but don't think you have the power to separate us.\"\n\nRose spoke next and what she said stunned me. \"You can't separate mated creatures, anyway. It wouldn't do any good. No matter the distance or the space you put between us, we are bound together. As a family, we are joined.\" \n\nI turned to look at Rose and she smiled that calm smile she had. I had kept private the bond I shared with my family, even from her. It would have seemed like bragging to tell her what we had, but apparently Rose and her family had the same thing. I should have asked. \n\n\"We are not so different,\" Rose continued, \"Paterians and humans. I am part of this family now and I will NOT leave them.\"\n\nThe Administrators all made a variety of sounds. Humans didn't do that sort of thing, only Paterians did. They thought Rose was lying about having a mate bond. Before Rose or I could correct the Administrators, Kennedy barged into the fight. \n\n\"A mate bond with a human is more than possible,\" Kennedy said putting her hands behind her back and walking between us and the Administrators. \"We know humans share many of our traits. It is not impossible. In fact, my Sisters and I have long thought this a possibility. I will tell you why.\"\n\nThe Administrators looked livid, but talking out turmoil in the camp was always how it was done. Kennedy's calm demeanor and level speech got their attention. She was handling this correctly. \n\n\"We noted how quickly Mama grew,\" Kennedy said. \"It is unusual for human fetal growth and only matches the rate of growth in one of our mountain cousins.\" \n\nKenned paced casually like a lawyer in a courtroom. She talked about each of Damien's Brothers in turn and discussed their unique family tree. My daughters had put a lot of thought into Damien's family's genealogy for some reason. \n\n\"You will note,\" Kennedy continued, \"that Mama, my female breeder, has not seemed overly distracted these last few moon cycles.\" \n\nNo one cared. The Administrators were still frustrated and angry as Kein placed a hand on my belly. He smiled as I looked at him. Kein rubbed the baby inside gently. Family was always cherished. Any amount of trouble was worth this. \n\nKennedy would not be ignored, though. She snapped her fingers and demanded attention. \n\n\"You all talk to Armant and his family. I know you have surreptitiously kept a watch on these females. No one has ever told you they seemed...strange or confused. Am I correct?\" Kennedy asked pointedly. \n\nHassar looked like she wanted to roll her eyes, but she politely answered we had seemed fine, then added, that was not the point right now. Kennedy disagreed. It was the point, she was building her case. \n\n\"Carrying a female of our species is difficult for a female human,\" Kennedy interjected. \"The influx of the mens' collective mind is quite disruptive. Mama has done it twice and been very bothered both times. My birth sister, Hannah, can tell you that when Mama carried me, she was impossible to talk to.\"\n\nThe Administrators looked to my oldest and she begrudgingly agreed with Kenndy, even Ra agreed. I had been quite distracted when I carried Kennedy. The older girls told the Administrators how I'd fade in and out of conversations as the men's thoughts invaded my mind. It seemed like I was present one moment and gone the next. It had been hard to ignore. \n\n\"But not this time,\" Kennedy finished. \"Mama is growing more rapidly than normal and she has been calm and focused the entire time. It has been very rare for her to have those moments where she loses focus. My Sisters and I believe this is because of the mate bond she shares with Damien and his Brothers.\"\n\nThe conversation made no sense to me, but I saw Hassar suddenly furrow her brow. Reed did the same thing and I heard murmured conversation among women in the hall.\n\n\"This time is faster?\" a woman said from the side. \n\nI had met her briefly and knew her name to be Ganta, she was an Administrator, but not with the same authority as Hassar and her Sister. \n\n\"Much faster,\" Dara said. \"By the look of things now, we believe the offspring will be of T'vailk Mountain heritage.\"\n\n\"It isn't possible,\" Reed said firmly. \"What you claim is not something that can happen. Ciara has merely been carrying a child longer than you have known.\"\n\nKennedy's teeth showed as she smiled. \"I know when this started,\" she said. \"The day Abram's family was saved from death. I know about humans and I know about Paterians. That stomach is too large to be anything other than female and of T'vailk heritage.\"\n\nMy men didn't know what the point of this conversation was and neither did I. Whatever Kennedy was saying was very interesting to the Administrators in the room, the rest of us were confused. \n\n\"Kennedy, I don't understand your point,\" I finally addressed her. \n\n\"Females of T'vailk heritage,\" Kennedy said with flourish, \"will not be conceived outside of a mate bond. We don't know why, but only men with T'vailk Mountain heritage are born from men in the compounds. In the camps, only two Sisters of this line have been born to a mated family.\"\n\nI didn't say anything and just nodded. That was interesting, but I wasn't sure of what her point was. She seemed quite sure of herself as she talked. The Administrators were starting to look less angry and more puzzled. \n\n\"Do you need to sit?\" Kein asked softly putting a hand on my lower back.\n\nI really did and wan't surprised he'd picked that up. My feet and back were a little sore. The rapidity of this pregnancy had not given me much time to adjust to my body's demands. Still, it seemed impolite to sit in front of the Administrators.\n\nBane huffed and smiled before turning to the side. The Administrators should be respected, but family came before them any day. I needed to sit for my comfort and my family had no issue catering to my needs. Bane brushed past several men and picked up a chair, bringing it back to me. \n\nI was settled comfortably as Kennedy continued her talk about what sounded like genetics to me. My men stood calmly around me as we watched our daughter make her point. This had become her show entirely. We were watching just like everyone else was. \n\nMuch of what Kennedy said, we didn't understand, but it didn't matter. What I'd told the Administrators was the truth. I would not be separated from my family again. I'd rather leave this camp. \n\nA rustle of feet came from behind us as several men entered. It was Mund and his Brothers with several of our friends. The men walked boldly forward and stood behind Damien after clasping my men on their shoulders and me on mine. The symbolism was not lost on me. Our friends were coming to our defense and it made me smile. \n\nI kept an ear out and men continued to enter and stand with our families. The men that came were all friendly with us and had seen the change in all of us. They knew that Rose and I were not slaves to our respective families and they were not owners. We had made this choice because we wanted to be together. \n\nThe push and shove behind me became louder and I turned my head to see Armant and his Brothers striding purposefully through. The younger men either stepped aside or Armant moved them bodily. The old Warriors were as resolute as I'd ever seen them. Our coworkers walked in front of me and I saw the concern on their faces. \n\n\"You want this?\" Armant asked me firmly, interrupting Kennedy at the front of the room. \"This wasn't forced on you? You are safe with us here. We will protect you if this is not what you want.\"\n\nI smiled and took in the concern on our coworker's faces. \"I love them, Armant. I've forgiven them and we have moved on. I most certainly want them.\"\n\nAfter assessing it was also what Rose wanted, Armant grunted as he and his Brothers took a spot beside me facing the Administrators. They stood for my right to decide this on my own. \n\nKennedy finished her monologue, finally. Her point was that if we had truly bonded, then there was no way our men thought of us as slaves anymore. \n\n\"They have all changed,\" Kennedy had announced at the end. \"The women have found their independence and their strength. The former slavers have atoned for their bad behavior and put that way of thinking behind them. While these relationships are not what you wanted to see happen, it is what the individuals involved wanted. We must respect that choice.\"\n\nThe Administrators didn't seem to want to believe her, but the camp felt differently. Ratru's and Arik's families had showed up and stood next to Rose. Even Rayn and his Brothers came inside and made their stand with us. We had a right to our own choices, even if it wasn't the popular option. \n\nThe Administrators watched Rose and me for a moment before Hassar spoke. \n\n\"We do not want you with slavers,\" she said stoically and I sighed taking Kein's hand in mine. \n\nIt didn't matter what they thought and I told Hassar so. \n\n\"I appreciate all you've done for us, but we won't stay apart. This isn't your choice to make. It is ours. If we can't be together here then we will leave this camp and find another that will accept us.\" \n\nThe Administrators just stood and stared at us all. They didn't want to let us go. Hannah and Kennedy had worked hard to get this camp ready for a human. Other camps were less safe. Letting Rose and me leave may be our death sentence. \n\n\"This is an impasse, then,\" Damien said, voicing the thoughts I had. \n\n\"Quite the stalemate,\" Basin agreed while nodding. \n\nHassar and Reed cocked their heads and Gunth crossed his arms. \"What are you two saying?\" Gunth asked the men curiously. \"You both used words I do not understand.\"\n\nDamien was surprised as he looked at me and shrugged. \n\nBasin looked at Rose and smiled. He explained the word he'd used was in English and he had not meant to offend. Rose's way of looking at this situation was so clear. We were not coming to an accord. The English word was so clear in her mind it was hard to ignore. \n\n\"As I stated already,\" Kennedy said happily, \"they are bonded. That word Basin used refers to a game on Earth. When you reach that point in the game, neither side can win.\" \n\nThe Administrators were a cross between angry and surprised, but that single word Basin had used changed their minds. They looked to Hannah who had to admit the word was English and it had been used correctly. There was no way Rose had taught them an English word to fit this exact situation. She was bonded to her family. \n\nSomehow, someway we had managed to connect our minds across the species barrier. It was strange and unheard of, but it did attest to the respect the men must feel. It was impossible to bond with someone that you didn't respect. Everyone knew that much was true. \n\nThe decision was made and the Administrators weren't entirely happy with it, but I was thrilled. Rose and I were free to make our choices and stay where we were. The former slavers respected us and we loved them. \n\n\"And what of Fuji?\" Hassar asked in a resigned fashion. \"Will she also be returning to her...family.\"\n\n\"Hardly,\" Stayne snorted from along the far side wall. He and his Brothers were here to watch the proceedings, but had not really taken part. \"She comes to us and uses us when she has sexual needs, but we have no other attachment. Fuji is entirely a free creature.\"\n\nHassar promised to talk to Fuji. The Administrators didn't like the way Stayne described his relationship with her. A coupling was something both sides should be agreeable to. Stayne made it sound like he and his Brothers were at Fuji's disposal. \n\n\"Go back to your chores,\" Gunth ordered to the general crowd once Hassar was done talking. \"Get everything settled before nightfall.\" \n\n\"And sanctions for the unplanned pregnancy?\"  Kein asked as the men behind us started to disperse. \n\nGunth's eyebrows shot up and I knew we'd used a word he didn't know. \n\n\"The new child,\" Damien clarified. \"We created a child without the Administrators' consent. In Ciara's native language the word is pregnancy.  Our owners never taught us the Paterian word, we have always used the human equivalent. What are our sanctions?\"\n\nI shook my head and smiled. My men were always willing to take punishment they felt they deserved. Now was no different. \n\n\"Go to the evening meal,\" Gunth said gruffly. \"You already take the jobs I would send you to do if I wished to sanction you. You have taken your punishment already. My only warning is I do not want this...situation to cause distress in the camp.\"\n\nI shrugged and smiled at my men as I stood. The day had been a strange mix of stressful and exhilarating. In addition, I had missed the midday meal. A nice, quiet evening meal would suit me fine. I was hungry and I didn't feel all that well right now. \n\n\"Hannah,\" Damien called, \"will you come sit with us later in our rooms? Perhaps we could talk?\"\n\nMy oldest was livid. I wasn't quite sure exactly why. She glared at Damien and huffed off with Ra right behind her. Their talons practically dug into the stone as they stalked away. They had no intention of speaking to any of us right now. It made me sad. \n\n\"We will join you, Uncle,\" Kennedy said, smiling as she strode past. \"My Sisters and I wish to feed, but we will return to your rooms later. Many congratulations to all of you on the pregnancy.\"\n\nDamien and his Brothers murmured thanks to Kennedy as she passed. We were all curious about her impassioned speech. Whatever she had said must have had some weight to it. We would have to ask her later. \n\nIt was habit the way I traveled with my family. Damien at the lead and me following, surrounded by his Brothers. We started to walk that way and Kein realized what it would look like. Before we had made it out of the Administrators suites I was walking next to Damien as the family followed. \n\nThe hallway was crowded with men heading to the evening meal. Unlike usual the bustling hall was quiet, though. The only sound was the tread of boots on stone. It was unnerving. \n\n\"So,\" a strange man announced loudly sidling up next to us, \"what now? Is she back to being your bed slave full time? Will you put your slave bands back on her?\"\n\n\"No,\" I stated firmly before Damien could answer, \"I am a free woman. I just happen to enjoy spending my free time with Damien and his Brothers.\"\n\nThe man had a mop of dark brown hair and thick stripes. He was really angry, as was his family. I saw the hint of their fangs as they threatened to drop. These men wanted to fight.\n\n\"Listen, buddy,\" I said stopping in my tracks and putting up my hands, \"Damien and his Brothers are very special to me. I get that you don't understand our relationship, but it is not what you think. None of us should have to justify this to you. It isn't your business.\"\n\nThe men stood staring at me and I felt my family's desire to put my fragile body behind theirs. A fight was looming in the crowded hall and I stood at the center of where it would be. Grabbing me and moving me may infuriate the other men, so Christof was ready, but not moving for now. A free woman would stand where she wanted to stand, even if it was dangerous. \n\n\"What,\" the dark hair man asked, \"is bu-ddy?\"\n\nUnbidden, English was sneaking back into my vocabulary. \n\n\"Friend,\" Bane answered calmly, \"it is a word from her native language for friend.\"\n\n\"How do you know it?\" the man's Brother asked.\n\nDamien spoke and explained that we had a bond. It was stronger now because of the little girl growing in my belly. Even without that we had a mate bond, Damien and his Brothers had access to my knowledge.\n\nI bristled at the conversation and crossed my arms impatiently. \n\n\"Our mate bond is not his business,\" I snapped angrily and loudly. \"It isn't anyone's business except ours!\"\n\nKein's hand smoothed down my back. I was being quite temperamental right now. The family had a reputation for steady reserve and they really wanted me to be like that, too. I'd been erratic all day. ",
        "\"I don't want to be calm!\" I said turning angry eyes on Kein. \"It is absolutely absurd to me how nosy everyone is. I feel like we are living under a microscope and I DO NOT LIKE IT!\"\n\nChristof grunted a laugh under his breath and I turned to find him trying to hide his amusement. \"It isn't funny. This is so RIDICULOUS!\" I railed. \n\nTemper tantrums were funny to watch here, just like on Earth. On my home planet I would not have been subjected to feeling how outrageous my actions were to everyone around me. Their humor infuriated me and I slammed our bond closed, so I didn't have to hear them thinking. \n\n\"FINE,\" I shouted throwing up my arms, \"have a big fight! See what that solves! I am going to eat.\"\n\nFeeling a little foolish, but still quite upset, I marched toward the dining hall. Damien and his Brothers could battle it out in the hall. My patience for this game had worn thin. \n\nThe men that had stopped to watch the disagreement stepped quietly to the side so I could pass. No one got in my way as I walked toward the plates on the buffet table. There was not a line yet, because most of the men were in the hall watching the excitement. \n\nI refused to take part in the communal conversation Damien and his Brothers were having as I picked out my dinner. I settled myself at a table in the mostly empty hall and stared down at my food, suddenly feeling lonely. Rose and I always ate together. Tonight I'd been looking forward to sitting with my family. Dammit. \n\nWhat a jerk I was to leave them out there. Especially after the indignity of yelling at them. Family should not do that to one another. Perhaps they wouldn't want me for family after all, maybe we'd made a mistake. \n\nI looked up to see Damien and his Brothers getting food. The men they'd been ready to fight with were picking out dinner behind them. All of them seemed to be having a pleasant conversation. \n\nKein turned when he noticed I'd looked up and gave me a friendly wave. I was confused but waved back. When I peeked into their thoughts, I didn't get the sense they were even irritated with me. \n\nMy men's musings were all about what was on the table for the evening meal. They were really hungry and the food looked great tonight. They were glad that Abram's family was back to leading the cooking. Bane noted the rich smells from the roasted meat and Evan was happy the sporta was seasoned spicy how he liked. Kein had noted green stalks at one end of the table and he was absolutely getting a couple on his plate. They were all ravenously hungry. \n\nThe men were still happily buzzing about the meal as Kein settled on one side of me and Bane on the other. Damien was talking with the head of the family from the hall, discussing a way of preparing this type of meat that the other man didn't know about. It was something my men had discovered during the many moons they'd had to fix their own food. \n\n\"Kein,\" I whispered softly putting a hand on his arm, \"I'm sorry for acting badly. I apologize if I embarrassed you.\"\n\nHe quirked a smile at me and patted my hand. The family was not even perturbed. \n\n\"We understand,\" Damien answered for him, turning away from his conversation with the other man. \"You do not enjoy having others invade into our family affairs. It is your Earth heritage. Privacy is much more important to you than it is to us.\" \n\nI felt flustered at the family's seeming acceptance of my actions. They certainly had not been pleased in the hall. \n\n\"Kennedy educated us,\" Christof explained. \"There is a great deal we do not understand about you, because we did not try to in the past. We are trying to be less ignorant of your motivations. We apologize for our humor in the hall. It was not appropriate.\"\n\nI couldn't fight the sincerity in their faces and stuttered out a thank you for the apology. \n\nThe other men at our table weren't interested in the family drama. They were curious about Earth and asked how things worked there when it came to creating children. They were surprised that two humans could choose to mate without getting approval first. It seemed to them that would be a very messy situation. \n\nHere mating was monitored by the Administrators, as was everything else. What I considered a personal choice, everyone here considered a societal choice. It was very odd to me, as were Earth's ways to them. \n\nAll this conversation still didn't explain how men ready to fight Damien a few moments ago were now engaging him in friendly exchange of information about culture and friends in common. I prodded Christof's memories and found my answer quite fast. My scene in the hall had changed their minds. \n\nMen from Pateria had never seen a human yell at a Paterian family and then walk away. Everyone understood how a slave should act and that wasn't it. Damien and his Brothers hadn't even been put off by my display. My family had merely watched me leave and then continued where they'd left off with the other men. It had amazed the onlookers and stopped the fight cold. \n\nWe finished dinner and it was very relaxed. The men were happy we were together and so was I. For the first time in a long time, I felt I was where I belonged. \n\nAfter the meal, I walked with Damien and his Brothers out of the dining hall. Since we were done hiding, I threaded my arm through Christof's and we sauntered casually toward the area Damien and his Brothers had their rooms. \n\n\"You will stay with us now, won't you?\" Kein asked earnestly. \"Some women stay with men, but I know some women prefer to keep their own dwelling space.\"\n\nI smiled at Kein's bright eyes. He always appeared so much younger than the other men. There was a genuine quality about him that bled into the rest of the family, but it started with him. \n\n\"I love you, Kein, and I want to stay with you,\" I said reaching a hand out to him.\n\nA man on either side felt good and I held onto both of them as we walked and talked. In the back of mind I knew that we needed to talk about our son. The small blonde boy was still dangerously alone in the undefended compound. His tender skin would be in trouble if the warships reached him.\n\nI imagined Jonathan would be terrified when the alien ships attacked. There would be no one in the compound that could explain to him what he was seeing. The men there didn't cherish the young like we did here. I wasn't sure they would not even try to protect him. He'd be alone with his family of boys, and with no one to defend them. They would be slaughtered like sheep. \n\n\"WIFE!\" Bane scolded, \"you will worry until you are sick! Stop this nonsense.\"\n\nI had come to a standstill in the hallway and was gripping Christof and Kein fiercely. The emotion threatened to overwhelm me. \n\n\"YOU MUST STOP THIS!\" Bane said loudly. \n\nHe felt my terror and it had to stop, losing control solved nothing.\n\nThe other men in the hall watched closely when Bane's voice rose when he addressed me. I couldn't pay attention to them as I started to breath faster. My attention was refocused on my little boy and my concern for him. \n\nDamien was in front of me suddenly. He looked seriously down at me and I felt the calm radiate from him. \n\n\"Let us find out what is going on,\" he said softly. \"If we need to, we will take a loaded transport and live in the caverns by the Barnas compound. Rue's family has made strong weapons, we will defend our family.\"\n\nI took a deep breath and relaxed myself. Panicking only distracted from the necessary conversation. If I hadn't flipped out this morning I could have gotten more information from Tosu. This was a time for a level head. \n\nI could not control whether or not Jonathan lived or died if I was curled up on a bed. Doing what I'd done today had endangered the other baby in my belly. The only way to assist my children was to stay sharp. For the first time, I had a modicum of control over their welfare. I had to help as best I could. \n\n\"Better than calming cream,\" Evan muttered as my steady gaze met Damien's. \n\n\"Kennedy always seems to know what's going on,\" I said in a strong voice. \"It's a shame Hannah is so angry with us. We really need to talk to both of them.\"\n\nThere was no more instability in my mind. I had a goal and I just needed more information to work toward it. Tugging at Christof and Kein I pushed past Damien toward their quarters. \n\n\"Come on,\" I ordered, \"we can't keep Kennedy waiting!\"\n\nMy youngest daughter arrived with her Sisters and information. While I'd been passed out on the bed, Dara had talked to Tosu. The women were watching the aliens very closely and they were certainly preparing an attack, but were not quite ready. \n\nThe alien ships focused their studies on the mountains with ore. Places the rebel women and men lived tended to be without ore and the aliens didn't seem to notice us. In addition, the protections the rebels had put in place seemed to be hiding us from the aliens, as well as, the women. \n\n\"Gunth will make announcements tomorrow to the entire camp,\" Kennedy explained. \"Other camps have pledged 'warriors' and supplies to defend the compounds. We believe this camp will do the same thing.\" \n\nWe talked about the weapons we had at our disposal. Eve and Dara thought they might work. Neither girl had had the time to really study the designs of the alien crafts, though. They only had the information Tosu had hastily imparted before having to leave, but that was it. \n\nThe girls left after I yawned the first time. They knew that the day had been stressful and tiring. If I didn't sleep some tonight, I'd be a mess tomorrow. From what they'd heard from Tosu there would be a lot of meetings and decision making. We all had to be sharp. \n\nI fought the worry as I stripped down and moved into the bedroom. I didn't feel particularly relaxed or tired, just exhausted. Damien and his Brothers followed me and slowly undressed themselves. \n\nIt didn't matter where I put my clothing, everyone was willing to share their space. I folded it neatly and sat it on Kein's shelf. My things would be moved here tomorrow and we'd make a formal space for me then. \n\n\"You are very worried,\" Evan said quietly placing his things on his shelf. \n\nI needed to be distracted. The thought came clearly into my head and I whipped around with my palms out. \n\n\"NO,\" I said forcefully, \"I am very pregnant and very worried, but I do not need to be distracted right now. It would not be fun for me.\"\n\nI knew what distractions meant to them. They'd done it before by bringing me pleasure until I passed out from it. I found the idea disconcerting and I was not in the mood. \n\n\"We are a family and I can say no to you all,\" I said covering my bare breasts and backing away. \n\n\"There is more than one way to distract you from your worry,\" Damien sighed calmly, approaching from the side. \"Sit with us and let us help.\"\n\nDamien settled himself on the bed and I watched him warily. \n\n\"Come,\" he instructed, pointing at the bed along his flank, \"rest here on your side.\"\n\nThey didn't want to fuck me, I realized suddenly. My family just wanted to relax me. The anxiety was distressing to all of us. \n\nWithout thinking further I crawled beside Damien and lay on my side with my back to him. Big, warm hands slowly kneaded shoulder and upper back. A second set of hands went to work on my legs and feet. Evan's hands ran lovingly along my scalp and I melted into the bed. \n\nThe gentle massage was just what I needed. Their hands found all the tight places the day had left and slowly worked them out. None of the family pushed too hard, but they made short work of the tension in my body. When they were done it felt like I was floating. \n\nDamien and his Brothers were Warriors. They had been trained to fight since they were very young. The coming battle did not scare them; it intrigued them. \n\n\"You aren't afraid,\" I said opening one eye and watching Christof as he watched me.\n\n\"No,\" he answered simply and he spoke for all of them. \n\nMy family would fight to the death to protect Jonathan and that didn't scare them at all. For family, they were always willing to give whatever it took. Nothing less would do, ever. \n\n\"You will be safe here,\" Kein said touching my stomach. \"The men and women in this camp believe you have inherent rights to be free and survive. Even without us, you will do well.\"\n\n\"I will fight, too,\" I said laying my hand over Kein's, but he shook his head. \n\n\"You will stay safe in this mountain. You will give birth to our daughter and nurse her so she is strong. My Brothers and I watch you. Your gait is slow and awkward. Battle is not a good place for you,\" he answered simply. \n\nThey were right and I knew it. I could not go to fight like I was; it would endanger our youngest child. \n\n\"I'll do what I can,\" I murmured watching Kein's hand rub over my distended belly.\n\n\"We all will,\" Damien responded pulling a blanket over my body and settling himself behind me. \n\nDamien's warm skin brushed my own as he breathed and I felt the last of my tension slip away. Snuggling against him felt good and safe. My family would defend our young. There was nothing to be afraid of. \n\nThe relaxed mind of the family created a sense of peace within my mind. Fear was a wasted emotion right now. Tonight we would rest and tomorrow we would listen. When it came time, we would fight for the planet and nothing would stand in our way. We were strong and we were together. All of us found solace in that. \n\nEvan roused us the next day before the moons started to set. He wanted to bathe in the warm water. My men had gotten quite accustomed to starting their day that way. \n\nIt was just us, as we cleaned ourselves in the communal bathing pool. No one else really preferred to be here this time of day. Basin and Stayne had long ago started taking their families' baths in the evening. The whole place was ours to use. \n\nI sensed the growing excitement in all my men. They were gearing up for a fight. I hoped they could contain themselves until the battle actually began. My men were ready to grab their weapons and chase the aliens down, but there was no one here but us. \n\n\"Eh, if we can't we'll just fight with each other,\" Bane laughed, bumping playfully into Evan, who was pushed down into the water. \n\nThe two started to tussle and I smiled watching them. Evan was fast in the water. He swam and knocked Bane's legs out from under him and the real battle began. Bane wasn't suited to fighting underwater. It just was not his talent. He couldn't get a grip on his Brother and was dragged under as soon as he broke the surface several more times. \n\nKein joined the battle as did Christof and Damien. My men reminded me of children before a big event. They were all amped up and ready for this. Shaking my head at the exuberance I used the soap to scrub myself clean. I felt their playfulness, but knew this rough game was not for me.\n\nI dunked myself after I was clean and opened my eyes beneath the water. My family was a swirling, swimming ball of flesh. They were really going at it and having a great time doing it. Jealous from not being able to take part I surfaced and wrung my wet hair out. Too bad I couldn't play with them... \n\n\"There are other games...\" Kein said popping up behind me. \n\nFlicking his tongue out, Kein lapped at the water dotting the skin of my neck. His hands traveled over my hips under the water and came to rest beneath the belly one of them had given me. \n\n\"And you would teach me these games?\" I asked coyly turning my face to look at him over my shoulder. \n\nOne hand drifted up over my belly to hold a round, supple breast. Gentle fingers found the nipple as Kein played with the sensitive flesh. The simple touch was my undoing as my head tilted back and my eyes shut. \n\nKein's mouth was over mine as he teased my lips with his own. Behind me I felt his cock rubbing tantalizingly over my ass. Reaching back I stroked the sinewy muscle of his hip and pulled him closer. I wanted to bend forward and invite him to take me fully when Damien interrupted. \n\n\"You like privacy, do you not?\" he whispered in my ear.\n\nAwareness settled on me and I realized how wantonly I was behaving. We were in the main part of the bathing pool, standing in waist deep water. Anyone entering could watch us. Just as I started to pull away and apologize, Kein spoke quickly.\n\n\"Hold my shoulders,\" he said turning away, \"the pool is large and there are places we can go.\" \n\nIt was like holding onto a moving torpedo in the water. The light slipped away a moment after we took off and we were flying through the inky blackness. In Kein's mind I saw the layout of this natural pool. We were headed to the far left side. \n\nMen didn't usually swim this far out to bathe. Being outcasts, my men had found this private spot and enjoyed it. Smooth rock jutted out and created a secluded pool, pocketed away from the main area. Thanks to a small waterfall along the back wall fresh water flushed it out well. \n\nIt wasn't a deep area, you had to sit in the water to bathe, but that was fine for us. We needed the dry rocks that sat above the water line. \n\nThere was little light here, but the men saw just fine. I could see the well lit area we had come from, but my eyes adjusted slowly to the low ambient light here. It didn't really matter, I didn't need my eyes for this anyway. \n\nKein pulled me into the shallow water and turned in my arms. I felt his lips on mine as his hands traced idle designs on my hip and ass above the water line. My own fingers explored the lithe muscles in his upper arms. For being smaller than his Brothers, he was certainly no less fierce. \n\n\"I am as large as I need to be,\" he whispered in my ear. \"How about a sample?\" \n\nMy stomach made me ungainly and I couldn't lay on my back or my front. Kein's wicked mind had found a compromise. Hands lifted me out of the water to lay on my side on a large warm stone that rested well above the water line. The height was perfect for what Kein had planned. \n\nOn my side with my knees bent, my center was quite accessible. Long fingers slid against my flesh and the men murmured approval as I shuddered. It was certainly more than the water that had left a slickness there. \n\nThe playfulness had not left them and I felt the naughty thoughts bled into my own a moment too late. Kein's fingers closed on my sensitive clit and squeezed. I yelped and then moaned as he started to stroke firmly. \n\nEvan attacked my mouth leaning over the slab and kissing with vehemence. I sucked his tongue into my mouth and mauled it into submission until he pulled away from me. In the low light I couldn't tell what he was doing until the smooth head of his cock was at my lips. If I wanted to suck something that badly, he was willing to help me.\n\nThe sensation of a second cock sliding between my lower lips was electrifying. I pulled on Evan and sucked what I could into my mouth, rapidly pushing him toward orgasm. Kein made good use of the position we were in and fucked me easily as I lay on the warm slab. \n\nWe were in a strangely hidden place in this public venue. While I would have seen virtually nothing from the entrance, a Paterian would see just fine. Bane sat behind me, between me and the entrance, and stroked my back and hips. He dipped his fingers against the slick moisture that seeped from my pussy as Kein fucked me. \n\nBane's strong fingers stroked the moisture up over my anus and I knew what he wanted. His fingers became more insistent and I felt him slowly rimming my ass, dipping in and out and stretching the flesh. I was willing and this was what he desperately wanted. \n\nBane longed to bend me over this rock and wet himself in my sopping cunt. He knew the tight flesh of my ass would welcome his cock if he was slick. The erotic image he had in his mind included me orgasming madly around his shaft after he came. He wanted to pull out and watch my ass and my sex continue to spasm as he and his Brother's seed seeped from my stretched openings. ",
        "Evan's cock started to twitch on my tongue. Bane's thoughts were more than he could handle. The long shaft was pressed as far as it could go into my throat and I felt it start to pulse. I held my breath until Evan pulled back. I nursed the salty spray from his cock and tasted his essence with relish. Above me I watched his eyes almost glow as he watched me savoring him. No one else had ever done that for him and it almost made him hard again. \n\nThe mental masturbation Bane had started was pushing Kein over the edge, just as it had done with his Brother. Kein's strong hands gripped my hip as he allowed himself to peak. His fingers dug into the soft flesh, as he buried himself and moaned loudly. I looked back and watched him shudder.\n\nTheir pleasure was erotic and my pulse sped up as I licked the taste of Evan's cock from my lips. \n\n\"Do you want to come around my shaft?\" Bane whispered in my ear as two of his thick fingers slid easily into my ass. \"I want to bend you over and fuck you until you are stretched completely around my cock. My Brothers are going to play with your clit and twist your nipples until you scream for us.\" \n\nThe power of the joined mind was hypnotic and the picture Bane painted was too much. I slid off the rock and stood in the water as it lapped at my thighs. \n\n\"Take what you want,\" I told him seductively as I leaned over with my hands on the warm stone. \n\nBane moved like lightening. One moment he was beside me on the stone, the next he was behind me. The thick head of his cock prodded my wet cunt and then he slid home. \n\n\"You promised me an orgasm,\" I whispered in a moan as he slipped in and out of my liquid heat. \n\nBreath on my ear made me squirm against him as he answered.\n\n\"I promised to make you cum around my shaft in your ass,\" he said slowly withdrawing himself, \"and I can stay hard as long as this takes,\" he continued to whisper.\n\nI shuddered as the thick head was pressed against the tight star. Bane was slick with the wet mixture his Brother had left. I felt him press into me until his hard pole popped inside. He went so deeply I felt as though I would burst. My eyes shut as I reveled in being filled by him. \n\nA hand slipped over my mons and Christof's fingers started to strum lightly over my clit. My body was hypersensitive and any more pressure than Christof used would have hurt. These men, my men, knew how to please me, though. The light glide of fingers over flesh left me nearly begging him to finish me. \n\nKein's fingers began to fondle my engorged teats as Bane slipped into and out of my body. The light stroke over the firm flesh of my breasts, occasionally brushing my nipple was absolutely unnerving. It felt like I was drowning in sensation. \n\nMy hips started to quiver and twist in Bane's grip, but he wouldn't let me get far. Strong hands forced me to stay still and take him all with each plunge. He buried his shaft each time until his balls slapped my pussy with each thrust. Behind me I heard his breathing speed up as he sprayed himself deep inside my body. \n\nI thought I had won the little contest we were having and then I realized I had not. Bane could stay hard as long as he wanted. He wasn't sensitive like Damien. He rested a mere moment before continuing to fuck me in the water. \n\n\"Don't hold back,\" Evan murmured in my ear before attacking my neck with his lips. \"Bane won't stop until he sees what he wanted to see.\" \n\nThe image of me Bane had in his mind was absolutely out of control. Again I felt myself start to rise above the plateau, twitching against their relentless stimulation. In my mind I felt the pleasure Bane was getting slipping into and out of my loosened ass. He could spend all day with his cock wrapped in that hot channel. My own body tipped over the edge in response to him. \n\nThe tingling started behind my eyes as my body exploded around Bane. I would have screamed, but Damien's tongue in my mouth stopped me. Sucking madly at the lead Brother's tongue, I felt Bane withdraw and knew he was getting the show he had planned. My lower half was gripping futilely on air before Christof grabbed my hips and filled my gasping cunt with his staff. \n\nMy friend did not last long. He buried his face in my neck a moment later as he spasmed behind me. Watching his Brothers had made him nearly crazy with anticipation. His orgasm was short and powerful thanks to his Brothers' game. \n\nDamien had also had enough of waiting. Once I was done with Christof, Damien asked that I sit on a low rock shelf. While the warm water soothed my messy lower half, I sucked Damien's long staff until he spent himself between my lips. Once he was done he virtually fell into the water beside me, panting. \n\nAll of us sat in the warm, dark area for a while recovering. This unplanned interlude had left us all breathless. \n\nMy family and I slipped out of the water after washing ourselves knowing we were going to be a little late for the morning meal. It had been worth it. I dried and dressed quickly, smiling at my family the entire time. I had truly enjoyed this stolen moment. \n\nThe dining hall was packed by the time we got there. We took our meal with Basin's family today.\n\n\"There is to be an announcement after the meal,\" Basin informed us. \n\nEveryone at our table was already aware of what was going on. By the strange energy in the room, so was most everyone else. There were certainly no secrets in this camp and this was no exception. \n\nWe stood in the main hall after the meal, all of us, every man and woman in the camp was present. Hassar spoke and Gunth spoke and the story they told was terrifying, even though I'd already heard it. \n\nThe planet was going to be attacked, there was no question about it. Warships were waiting and hiding. Everyone that observed them was sure they were gathering their forces and planning an offensive very soon. \n\n\"They will steal from the land,\" Gunth said standing on stage and speaking into the thing that amplified his voice. \"They will kill those of us that stand in their way. The weak will be taken as slaves.\"\n\nThe men in the hall called out loudly. The women made growling sounds that reverberated off the very walls. No one in this camp was going to give up if those were our options. \n\n\"We could hide,\" Gunth said and the room roared again as he smiled and raised his voice, \"but we will not! We will fight for our rights to stay here and be free!\"\n\n\"I will not be a slave again!\" a man called out from up front. \"I would die first!\"\n\nThe room seconded that statement. Gunth raised his hands and asked for silence before he spoke again. \n\n\"We have great weapons,\" he announced, \"but they will not protect all of us. Some of you will die, many of you will suffer. Is this the choice you all make?\"\n\nHad our home not been a literal mountain, the wall would have shook with the battle cry. That was the choice we made and we would see it through to the end. We would not give up. \n\nGunth had a plan already in the works. From what Tosu had said the women would not remove men from the compounds. They thought they could protect them. Gunth and his Brothers thought the men would need more help than that. \n\nThe male Administrators divided the men into teams as Hassar divided the women. We had to help defend the ore in the mountains and stop the massacre that was sure to happen at the compounds. This camp was near two different compounds and we vowed to protect them both. It would take careful organization to make sure that happened. \n\nDamien and his Brothers volunteered to defend the Barnas compound. My men were put on the rotation roster and I was slated to stay here and help with preparation. I noted that both Hannah and Kennedy were assigned to stay close to the Barnas compound. \n\n\"Come on,\" Armant said walking by and getting my attention, \"we need to get to work. If men are going to be living away from camp, we have to send them with supplies.\"\n\nIt was an insanely busy day. Damien and his Brothers packed bags and loaded a transport. They were gone with a large contingent of men by the time the sun was midway through the sky. They would sit in the caves beneath the land in preparation for an attack. \n\nI barely caught up to my daughters before they left on their assignments. Hannah was still angry with me and only begrudgingly accepted my hug. I saw the anger in the fierce line of her brow and the thin line of her lips. \n\nWe stood in the garage and it churned with activity around us. This was not a good place for a long talk, but that was irrelevant. I had to let Hannah know I loved her, despite not understanding what had her so angry. If this world went to war, I had no doubt she would place herself on the front lines. \n\n\"Hannah,\" I begged, \"forgive me for loving your father past all reason. I did not mean to upset you. I'm not even sure why you are upset. You know Damien cares for me. You told me you wanted us happy and together. I think your anger is misplaced.\"\n\nHannah's eyes darted left and right before she spoke quietly and in English. \n\n\"My Sister and I will be Administrators someday,\" she said without emotion. \"I can't have everyone thinking I come from breeders that do not have good forethought. It would affect my selection. You act so rashly sometimes and you ignore the rules, they know I think like you do...\"\n\nI had not realized how driven Hannah was, but it made sense. She wanted to be in charge and take on leadership roles. I would never begrudge her those goals. I hoped one day she'd learn sometimes rules were meant to be broken, but I appreciated her conviction. \n\n\"You come from breeders that love each other very much,\" I said passionately while placing a hand on her arm. \"Your parents are determined and nothing will stop them. We will not hamper your dreams, Hannah, I promise you. We just couldn't allow the Administrators' prejudices to continue to control us.\"\n\n\"The rules are important. Society's goals are important,\" Hannah said firmly and then looked at her Sister, \"but I understand family must come first. I just wish you all had made your arguments, before...\"\n\nShe wished we'd been up front with the Administration and I had to smile. \n\n\"Sometimes, Baby Girl,\" I said slyly, \"it is better to beg forgiveness than ask permission. Sometimes no one will believe the truth until they see it.\"\n\nHannah's face softened a little as she rolled her eyes and pulled me into a hug. \"I love you, Mama,\" she sighed. \"You are so stubborn. Now would be a bad time to further test the rules. Just please be careful. Try to stay safe.\"\n\nPromising to be careful, I hugged my girls as I held back the tears. Kennedy and her Sisters approached and I was able to say good-by to them, too. In all honesty, both my daughters were as excited as their male breeders had been. None of them seemed that worried about what they were preparing to do. \n\n\"We all have communication pads, Mama,\" Kennedy informed me just before she left. \"Use them sparingly, but contact us if you need to talk.\"\n\nThey were gone a moment later, springing into the air and flying off with bold strokes of their wings. \n\nI couldn't stand and watch them dwindle to a speck as they flew boldly off. I turned away and hurried back to Armant's shop and found the Brothers just leaving. Today they would go to the fields and harvest. I would stay and do the work in the shop. \n\n\"You have become very slow in the fields,\" Armant informed me. \"The other men thought you were merely getting larger. Now that we know you carry a new life, none of us want you beyond the safety of our camp. Females that are heavy with a child rarely spend much time outside the main camp. Their Sisters take up their responsibilities or they are shared by other females. You have no Sisters and you do men's work, so we will help you.\"\n\nI had enjoyed the hard work in the fields, but the labor was quite taxing. Bending to pull weeds was very difficult and I was frequently out of breath. The inside work was still tiring, but it was easier to get done. \n\n\"If it is truly a female of T'vailk heritage,\" Reil continued, \"that would be quite a unique thing.\"\n\nThe Brothers all agreed and I suddenly realized I had not asked Kennedy about that. In the rush to find out about the warships, I had not asked about the baby's parentage. My hands rested automatically on my large belly. \n\nI smiled wondering if this was Kein's little one growing inside of me. Hannah had told us his line was from those strange, wild mountains. The girl in my stomach rolled under my hand as I thought about it. If she was his, I was sure this would be a wonderful, strong girl. \n\n\"T'vailk females are unique,\" Armant said knowingly, \"we've never seen them, but we've heard about them.\"\n\nThe Brothers all agreed about the interest in my belly as they headed out. I wondered what that knowing comment referred to. I would have liked to have them stay and talk, but this was not a time for idle conversation. We had much to do and less hands to do it with. Taking my cue from Armant's family, I settled down to stitch as quickly as I could. \n\nMy family traveled far from me in the coming days. I felt the distance between us and it made me yearn for them. It was only the knowledge that they protected my precious boy that made it bearable. The little one inside of me craved contact with her male breeder. As the days passed I sensed her struggle to stay connected to him. Both of us missed them terribly. \n\nRose and I moved our things into the rooms our men lived in. Both of us worked to make the dwellings cozy for our families when they returned. We had faith they would come back to us. Even when our bond with them felt weak and fragile, because of the distance, our love for them was as strong as ever. \n\nThe little one in my belly was restless and upset with the loss of her male breeder. There were times we couldn't feel the men at all. She wanted him and his experiences, but that just wasn't possible. \n\nI read all I could, whenever I could, but it wasn't enough. She wanted more than I could give on my own. I quickly found that while others could not completely satisfy her, it did tame the curiosity. \n\nI sewed in the small shop all day, every day. When men came in I started to ask them for information. Anything would do really, it just had to be something I didn't know already. It quickly became a game in the camp to see who could give me the most amazing piece of new information. It was all I could do for my girl, but it seemed to partially satisfy her.\n\nThe men from the camp told me things I never would have thought to study. They taught me history and geography. Other days it was plant life and survival skills. It was all immensely interesting and I was grateful for the effort they put into soothing my growing daughter. \n\nA moon passed and we knew the warships were still gathering above our heads. As a woman carrying a female, perhaps a very special female, I was not encouraged to go outside. Men and women talked about sightings of the crafts zipping through the sky. They may have been real or imagined, either way the stories were unnerving. \n\nEverywhere I went, even though it was inside, I always went completely armed. The sword stayed on my left hip and the gun on my right. When we were attacked it would be everyone fighting. I was no exception. \n\nI felt the men sometimes. My child and I relished the snatches of communication with them. They were restless and bored. Everyday they paced the underground tunnels keeping themselves ready in case of attack. As soon as the fight started they would spring from beneath the surface and protect the other men. \n\nIt was a long and frustrating wait and one day, it all changed. \n\nThe warships cut through the air on the day of the attack. We'd known they were gathered at the edge of our system of moons and weren't surprised when they blasted through our atmosphere. Still the sound was deafening and I cringed on the floor of the shop for a moment. \n\nMy training took over and I got up off the floor almost instantly. I had a station, just like everyone else. My job was to help any men that came back injured. I went to the area we'd set up and waited with Rose. \n\nThe \"infirmary\" was large, and took up a huge amount of space inside the mountain. The floor was covered in the raised warm stones the women liked to sleep on. Should a man be bloody or damaged it was believed the stones would be a superior place to put him and his family. The Healing devices were all set up and ready for us to use. The few men we had left here that were considered Healers were ready for anything, but nothing came. \n\nThe sound outside was distant and far away. I ended up sitting on a large warm stone waiting. There was no attack where we were. The aliens either had not noticed the rebel camps or planned to take out the compounds first. \n\nBeyond the mountains my men were fighting for their lives. They had burst from beneath the ground when the warships approached and started to fight back. Legions of Paterian men soared through the sky intent on defending their home planet. \n\nIn my mind's eye I saw flashes of the fighting. The transports sent from the camps moved in harmony with one another. It was as though the separate Paterian families were communicating and moved as one being to fight the invaders. I mentioned it to the men around me and they bowed their heads to the Great Harmonious Spirit. \n\nThis was a fierce world. The men were trained to fight and raised to do battle. The weapons the aliens brought were quickly evaluated and strategy for defense was decided upon. The shields Rue and his Brothers had developed worked perfectly.\n\nThe aliens shot at us with some sort of beam. The thing would explode on contact with almost anything, except the shields. The men on the transports raised theirs and deflected the beams to hit harmlessly in the desert. There were very few direct hits on the compound or the village. \n\nThe weapons Rue had developed using the ore were also very effective. They couldn't seem to breach the armor on the sides of the warships without three or four direct blows, but they could down one by aiming for their engines. Once on the ground, the warships could be targeted and destroyed. \n\nRue had several cannons developed that could actually project the ore itself. That cannon tore open an alien ship in one hit. The men were hesitant to use this powerful tool. If they missed the ore exploded pointlessly on impact with the ground. It was wasteful. That particular weapon was preserved and used only when they were sure of a direct hit. \n\nAll in all, Rue's weapons were disastrous for the aliens. The defense had been totally unexpected and it was effective. However, that wasn't to say there wasn't any damage on our side. \n\nThe women that owned men had been waiting above ground in the land surrounding the compounds. They didn't understand what the free men could do. Unfortunately, they put themselves between the rebel men and the aliens. Many of them were destroyed by the alien weapons before they realized that the rebels could defend themselves. \n\nUnlike before, the ships the aliens had brought would not be bested by the women's native weapons easily. The slaving women were almost helpless before the onslaught. Had the rebels not been present, the world would have fallen within the first day cycle. \n\nI sat in the quiet room in the camp and heard the commotion as my men did. Just like them I experienced the screaming wail of the dying women and the panic from the shopkeepers in the villages. None of it distracted my men, we had a job to do and it would be done. \n\nThe damage to the women was immense and we knew what it meant. Gunth sent out a plea. A second contingent of men was sent to the mountains. The women could fight the warships, but many were being lost in the process. We moved to defend them when it became apparent they would need us. ",
        "Night fell and the battle continued to rage. The Paterian men and women were not affected by the dark, although it perhaps made them more vicious. By the middle of the night the aliens had stayed their attack and seemed to be regrouping back above the bounds of our atmosphere. \n\nThe men on the battlefield did not trust the aliens to stay gone, so they took turns keeping watch. In the eerie quiet after the battle the gravely injured women could be heard on the ground and the men could not stand it. The rebel men collected the injured women and took them back to the underground caves, just as they did the injured men. The women were infuriated, but in no position to fight. \n\nI began to understand, through my family, that Paterian women believed themselves above simple things, like healing. A strong woman should either live or die on her own. The men did not agree and set to cleaning and patching the women's wounds. \n\nMy men patched up many women before they lay down to rest. All of them knew it could have been one our girls laying out there. Damien and his Brothers felt a duty to the injured women. All the men from the camps felt that way. \n\nLive to fight another day. \n\nThe saying was from Earth and it was the first thing that I thought of when I understood the women's strange beliefs. My family found the phrase usable and started saying it in Paterian to the stubborn women refusing healing. By way of the communication pads, the saying spread across the planet. \n\n\"Do not die now!\" Damien commanded one of them that was refusing to get on his transport. \"Live to fight another day. There is no strength in dying in the sand right now! Help us defend this world when the sun rises!\"\n\nThe woman had listened, begrudgingly. She'd not appreciated Damien's help, but she'd taken it. Most of the women were the same way, they'd never been in a situation like this. \n\nI had one tiny spot of relief. Both Hannah and Kennedy had left me messages. The girls were a little beaten up, but none were gravely injured. They had trusted the men's weapons, although it had taken Hannah and Ra longer to realize their effectiveness. My girls had become scavengers, destroying the aliens that were knocked down by the men. It became a good system. \n\n\"Tosu was here,\" Kennedy wrote me, \"as were Nu-reeh and Dinah. Tosu took a direct hit from a beam so it would not hit me. I dragged her behind a large boulder myself and sent men to tend her later. She lives, but she was badly damaged.\"\n\nI felt for my child. Guilt could not claim her. She had to stay strong in this fight. \n\n\"Tosu made her choice,\" I wrote to Kennedy quickly. \"Whether you would like it or not she promised long ago to do this for me. Feel grateful and fight, but do not feel guilty. This was her choice.\"\n\nI didn't hear back from my youngest daughter, but I hoped that she would not be affected by this badly.\n\nIn the quiet of the camp Rose and I settled on a warm stone to rest until the next battle began. No one believed it was over. We wanted to be at our post when we were needed. The warm stones were a fine place for us to rest until the next day started. \n\n\"You must eat,\" Rose whispered to me in the pre-dawn of the next day. \n\nShe was right and we moved to the food area. Men were there already, eating quickly so they would be ready. No one was really talking, we were all just waiting. Rose and I picked out our meal and finished as fast as we could.\n\nThere was still no sound from outside. I saw men, heavily armed men, coming inside. They had obviously been on a night long watch, waiting for the attack that didn't come. All of them wore the same frustrated scowl on their face. It gave them the image of a dangerous gang and not a group of men we might have a pleasant meal with. \n\n\"Sirs, can you tell me what is going on?\" I asked as they passed. \n\nMy voice came out more formal than I intended it to. The men's demeanor was unnerving. Even Rose, who was now usually calm and collected in the face of uncertainty and stress was cringing beside me and gripping my hand. Our fearful reaction to them seemed to startle the men out of their funk. \n\n\"Raif, rescued from the Barnas compound,\" one of the men said attempting to relax and smile, \"there isn't much going on out there. We've been sent inside to rest until mid day. There is to be an announcement by the Administrators in a few moments.\"\n\nI thanked the men for the information as Rose and I headed for the Administrators' area. \n\nThe announcement was brief. The Administrators listed names of families that had been killed. They told us that the attack had subsided for the moment and they told us to be ready for more. \n\n\"Women on the other side of the world do not just build warships,\" Hassar announced. \"They also know how to operate them. It is not their favored way to fight, but the women have seen the devastation being done to our planet. They will take the fight to the warships above us.\"\n\nThe men and women around me murmured. This certainly was unusual. The women's weapons had always been the first line of defense. If they'd decided to use the ships, that indicated how fierce the battle was. \n\nEveryone was dismissed. Those that had been on patrol or watch were sent to rest some. I was learning Paterian men, if they were healthy, had a great tolerance for sleep deprivation. Their replacements had heard this already and were at their posts. Most of the men left in the camp were assigned to load transports with supplies. When the men on the front lines were sent home, their replacements should be ready to leave. \n\nRose and I were sent to the tailor's shop to work. \n\n\"I think they just want us out of the way,\" Rose said quietly as we stitched and sewed. \n\nIt made sense. I was not allowed out of the safety of our camp and Rose was too weak to do much fighting. This little part of the cave was a safe, out of the way place for both of us. \n\nI felt my men in flashes as I sat and sewed. They were taking a rest, while another part of their division took patrol. Their dreams were full of fighting and the wild prior day. I did feel their comfort in that their group had kept the aliens away from the compound. That success let them sleep peacefully as the sun shone. \n\nIt was later in the day when the fighting started again. It was different this time. The women had their ships waiting and went after the aggressors as soon as they breached our atmosphere. From what my men saw, it was like watching stars explode in the sky. \n\nThe falling bits of alien craft streaked through the sky and slammed into the ground. Burning metal covered the desert around the compound in places. The smell, at least according to Kein, was horrific. He could barely stand the odor and kept his nose and mouth covered. On and off I felt his disgust at the rancid stench. \n\nThe women's counter measures made the alien attack scatter. In their rush to escape the Paterian women's ships, the aliens accidentally found some of the rebel camps, including ours. It brought the fight to our door. \n\nThe alien ships were damaged, many of them, and they crash landed in the jungle around us. The strange creatures evacuated their burning ships only to be attacked by the fierce, native creatures. Racks, scars, and the like saw the aliens as a new food source. \n\nThe aliens scrambled to find somewhere to hide from the creatures and unfortunately they stumbled onto our camp. The land outside the entrance was marked with trails where the men walked to the crops the men planted. If you were on foot, which the aliens were, the illusions didn't protect us. We heard the war cry as they found our hidden entrance. \n\nThe men and women left behind to defend the camp did their job well. The aliens were cut down before they breached our defenses. Rose and I waited in the infirmary again, but this time there was something to do. \n\nMen and women were brought to us injured, I thought, beyond repair. The Healers in the camp politely scoffed at my ignorance. There was much that could be done for them. \n\nThe men were hesitant to have anyone around their injured family, but I was considered a Healer. They didn't fight when they saw it was Rose or me approaching them. Humans had a strange knack for healing it was believed. Rose and I knew we were naive about healing, we just cleaned the wounds thoroughly so the real Healers could do their job efficiently.\n\nThe men took our cleaning and the Healer's care. The beaded women from the camp that came in injured fought it a little. Most still had the undercurrent of belief that an honorable death was preferable to needing help with one's healing. Strength was measured by personal ability and accepting help meant defeat. All of us acting as Healers sought to dissuade them of such thoughts. \n\n\"Live to fight another day,\" I begged them over and over again as I washed the dirt from their wounds. \"There is still much fighting to be done. If you survive today, you can fight more tomorrow.\"\n\nThe argument seemed to settle their upset to quiet grumbling. The beaded women took our help and rested. They would do what the little human said and live to fight another day. It was unprecedented, but so was the volume of this fight and I had made a good point. \n\nThe true battle for healing started when the first women without beads was brought in. The large woman and her Sisters had followed a crashing ship and fought the aliens when they disembarked. One woman had lost an entire wing, another was cut deeply down the middle, and the third had severe damage to her face and one eye. \n\nThom and his Brothers had seen the women fight and destroy the aliens, despite their injuries. Our men could not stand to see such women die from the Racks that lay in wait around the fighting. Thom's transport swooped in and loaded the women to bring them into the camp and safety. \n\nThe hall we were in exploded in dissension as the females were brought in and laid on warm slabs. The men and women we were healing could not decide if this was the right thing to do. Despite their injuries they sat up and argued. Thom had endangered the camp some said. He was following The Great Harmonious Spirit, others called. The three women just lay bleeding and looking around. \n\nI watched the women closest to me as her head bled profusely. A large portion of her face appeared disfigured. I saw the metal sticking out from one eye and knew it needed prompt attention. Grabbing a pail and a fresh cloth, I approached her from her good side. \n\n\"Ma'm, my name is Ciara and I am from Earth. I only wish to help you heal. If you will let me help, you will live to fight another day. The planet cannot lose good fighters when we can prevent it. Allow me to clean your wound,\" I requested crawling up onto her slab. \n\nThe woman stared at me with her functional eye for a moment before agreeing. \n\nQuickly, but diligently, I cleaned the wound. The rest of the room didn't matter as I did my job. Hopefully, they would have worked it out and a Healer would complete what I started. These women now knew where we were, so we might as well help them. \n\nEveryone must have agreed. Tyle's young family had been left here to assist the Healers and provide protection inside. He and his Brothers came and placed a support under the wings of the unbeaded women. It made it easier for the women to lay on their backs as we worked on them. \n\nThe woman I was working on seemed surprised as the boys touched her to position her body. Tyle's family wasn't hesitant or fearful as they pushed the support beneath her wings. They instructed her how to move to help them and then moved on to their next chore. I could see the amazement in the woman's face, but she stayed silent. \n\nA Healer I knew well appeared as I finished cleaning. He addressed the woman and explained what he would do. I knew this man. He was older and I'd found him to be quite particular, so I didn't leave and stayed in case he needed my help. I thought he would be aggravated if he had to ask for it later. \n\n\"Hold this, Ciara,\" he commanded suddenly.\n\nI did as he asked and the woman stayed quiet beneath us. \n\n\"Good,\" he said, \"now when I tell you, press here.\"\n\nI found the activity nauseating as he fixed her face and then her eye. He removed the shrapnel with a variety of tools. Thankfully, my stomach minded itself and I didn't vomit. I just made a point to think of something else as he reattached the muscles of her face back into their rightful places. What was left of her skin, he pulled to cover most of the damage. Once he was done her face looked almost normal. He continued to work on the eye once the face was done. \n\n\"Cousin, you may keep sight in this eye,\" he said suddenly addressing the woman. \"It may not have permanently damaged you. I am glad they brought you here. I am Rhane, born in the T'ylene mountains. It is a pleasure to meet you.\"\n\nThe woman was quiet for a moment before she spoke. \n\n\"Kana, from the T'yonin Mountains,\" she said. \"My Sisters are from there as well.\"\n\nI was shocked the woman could converse as we worked on her eye, but I had forgotten how strong these people were. Bowing to pain would be dishonorable for anyone. \n\n\"Beautiful mountains I have heard,\" Rhane, the Healer, said starting to stitch the edge of the eye with nearly invisible thread, \"I have never been so far myself. My Brother was born near there, but he was too young to remember the place. We were raised by our male breeders here in this mountain. My Brother's female breeder brings us tanka fruit when she visits. It is our favorite.\" \n\nThe woman seemed confused by the conversation. I'm sure it's the first time a man had addressed her with such informality and lack of fear. \n\n\"Ciara,\" Rhane said to me, \"press here...a little harder...good now hold that pressure until I tell you.\"\n\nRhane backed away and came to stand on Kana's good side. \"I need to help my Brother with your Sister's injuries,\" he said. \"Rest here and let Ciara hold the pressure. I'll be back.\" \n\nThe Healer left quickly to go assist his Brother and I was left with a very confused looking woman. I shifted slightly and my belly caught her gaze. \n\n\"Are you continuing the task Nu-reeh set for you? I see you are carrying another child for them, slave,\" she addressed me. \n\nI didn't have time to answer as a beaded woman on a slab just next to us growled a response. \n\n\"There are no slaves in this camp, cousin. We saved you, so respect our ways. That is a free creature that chose to help you,\" she said harshly. \n\nThe new woman, Kana, seemed taken aback for a moment before rephrasing the question. \n\n\"You are carrying a child, human. Do they force you to breed as well?\"\n\nThe woman behind me grunted, but I spoke quickly. \n\n\"I love my men, Kana,\" I said politely. \"It is a pleasure me for to carry their offspring. None of us here is forced to breed, we all do so because we choose it.\"\n\nKana looked quizzically at me with her good eye as Rhane reappeared. The Healer removed the cloth I was using for pressure and examined his work. He wrapped her head and facial wounds before addressing her. \n\n\"Lay still, Kana,\" he commanded sternly. \"If you sit up or walk the stitching will not hold. Stay here until the sun rises, your wounds should be better by then. I judge you will be well enough to go out and fight in two or three day cycles. I am placing a cloth over your eyes. I wish you to keep them closed as much as you can. Not moving your eyes will assist in the healing.\"\n\nKana bristled visibly at what was certainly a command, but she didn't speak. The Healer tied a band around her head. I saw two patches set in the fabric, those were fitted over her eyes. She would be blind with this on, but again, she did not complain. \n\n\"Your Sisters will also live,\" Rhane commented. \"They will take longer to heal. You all will fight for us again, just let us make you stronger first.\"\n\nRhane left abruptly as more women were brought into the hall. I gathered up what had been left around Kana and tided up her slab a bit. \n\n\"Would you like a drink of water?\" I asked her suddenly.\n\nShe paused a moment before answering. \"Yes, that would be good.\"\n\nI got the jug and brought it to her. She opened her mouth and I poured in a good portion. Kana swallowed and we repeated several times. Once she was done, she requested water for her Sisters. \n\nIt was a strange and taxing day. I worked as hard as I could, just like my family was doing. Our jobs were markedly different though. \n\nDamien and his Brothers were not fighting like they had the day before. Much of the battle was happening far above them. They seemed to only be doing the cleanup work on the aliens the women shot out of the sky. It gave the men from the camps a chance to check the village and the compound. \n\nMy connection to my men faded in and out. Through Evan, I still felt Jonathan, he was alive, but I didn't know anything else. It was frustrating, but I just focused on praying for my son in the few moments I had to myself. \n\nHannah and Kennedy sent brief messages to me. They were staying near where my men were stationed. Everyone was working hard to keep the men in the Barnas compound safe.\n\nThrough the rest of the day and the next night we were very busy. Rose and I were sent to our rooms to sleep at the dawn of the next day. We were both so tired, I barely remembered the strange dreams I had of my men. They were soaring in a tight space with little light, but I felt no fear, only a strong concern. It was a strange dream and I could not place its significance. \n\nRose and I woke to a big commotion. I had no conception of time, but Rose did. She guessed it about midday and said we should get back to work. \n\nWe ran out and toward the healing area. Only half of the torches were lit and the skylight above was long ago closed. The passageway inside the mountain was dark and foreboding, much more so than it had been. I laid a hand on my gun and removed it from it's holster. Something felt wrong. \n\nThe yelling started and Rose and I froze. Several gun blasts echoed in the passageway. They seemed to be coming from the main entrance. My senses sharpened and I saw the world as my family did. \n\nRose turned and faced away from me, so we were back to back. We wanted to move closer to the wall, but before we could a creature rose from it's hiding place behind one of the fire pits. \n\nA tongue flicked out past the wicked teeth in the creature's snout and I met the yellow stare of the strangest thing I'd ever seen. It dwarfed me significantly, but it was not very wide. Long arms with sharp tips on the end slid out of it's skin and rose into the air like weapons. The creature seemed to move even when standing still. Whatever it was almost vibrated with some half contained energy. \n\nRose and I stood our ground as it suddenly appeared to the right of where it had been. Now I could see all of it. The thick snake like body of it's lower half slithered with amazing speed. It shifted and swayed before rapidly moving left and forward.\n\nIt was coming for us and quickly. The thing knew it was no longer hidden, but it seemed to smirk at the knowledge. I couldn't speak its language, but the sounds coming from it sounded as though it knew it had won already. \n\nThe weapon in my hands went off and I just missed the creature as it slid right and then forward. My blast hit the wall behind the thing. It moved so fast, I'd never be able to hit it where it stood. \n\nTry to hit where it is going to be, I suddenly realized. \n\nMy next blast was a success. The thing moved left, as I thought it would, before coming forward. The gun I carried tore off a huge chunk of its side. The thing screamed and made a desperate attempt to dart into a room off the main hall. \n\nA woman dropped from above quite suddenly. She landed between me and the aggressor. Her talons made short work of the damaged creature. ",
        "\"Stay very still,\" she ordered curtly. \"They see movement better than they see anything else.\" \n\nI recognized Kana's voice and did as she asked. \n\nRose and I maintained our pose back to back as transports swooped in and the men started to fight creatures that dotted the hall. The thing I'd shot at had been one of very many lying in wait. Kana stayed with Rose and me, seemingly acting as a guardian. \n\n\"Use your weapons if you need to humans,\" she commanded. \"Aim for the place where the arms meet the body, they are weakest there.\"\n\nI took several shots at creatures attacking the men and I heard Rose do the same thing. We did what we could from our position to help. Kana had been right, the best place to shoot was where the body and arms connected. If your aim was good, that type of shot dropped the creatures almost immediately. My aim was remarkably good. \n\nThe men on the transports fought the snake like things with ferocious intensity. I watched amazed as they swarmed down the halls seeking out the hiding spots the invaders had found. The men moved with an odd synchrony. No words passed between them, but all of them seemed to be working as one unit. \n\nThe hunt was strikingly quiet, organized, and ruthless. Kana, Rose and I stood rooted to our spots as the men removed the danger from the halls. Suddenly a transport dropped down beside us. I stared blankly at the men on the transport who weren't even looking at us. \n\n\"Get on, women!\" Thom growled suddenly. \n\nHe turned to face us and looked thoroughly disgruntled. I got the impression he had been waiting for us to follow the same invisible commands the other men were. Unfortunately we had no idea what signals they were using to communicate. \n\nRose and I leapt on and Thom continued to stare at Kana. \n\n\"Get on,\" he ordered. \n\n\"I will fly myself,\" she told him cooly spreading her wings. \n\n\"Follow closely,\" he demanded facing forward again, \"do not get in our way.\"\n\nThe transports were zipping around us in the interior of the camp. They were spreading out in a very organized fashion. The men seemed to be searching every nook and cranny for the attackers. The entire hunt was absolutely silent and utterly efficient. I'd never seen anything like it. \n\nIt was like watching bees in a hive or fish in a school. The men seemed to be responding to something outside themselves that was guiding them. I looked back and saw Kana flying very close behind us. She did as she'd been asked and stayed out of the way as the men took care of their camp. \n\nRose and I were delivered back to the large cave used for healing. Men were stationed at the opening to the infirmary now, looking alert. They separated long enough to allow us to enter and then took up positions in front of the opening. They formed a literal wall of flesh between the injured and the aggressors. \n\n\"You are carrying a child,\" Thom said bluntly once we were inside. \"The other women in your circumstance are staying in safe places, you must do the same. Do not leave this room. I will let you know when the danger has passed.\"\n\nKana had followed us in and she watched Thom with the oddest expression on her face. \n\n\"Your eye is not well enough to send you out, but you can help us defend the injured in here, should it come to that,\" he said bluntly. \n\nThom spoke with an authority I'd only ever heard from Gunth. He looked as firm and resolute as the old man usually did, too. His decisiveness seemed to surprise Kana. \n\nShe agreed to stay and Thom was gone. The men at the entrance to our hall stood attentively, ready to fend off an attack. They seemed oblivious to the activity in the infirmary, their attention was focused outward. \n\nThe Sister that had lost her wing walked slowly over to stand next to Kana. The men had wrapped and dressed the stump on her left side. They had tied it so she would not inadvertently move it while they tried to heal the flesh. \n\n\"It is The Great Harmonious Spirit. They are answering to The Spirit,\" Kana said simply and the other women seemed taken aback. \n\n\"That does not exist anymore,\" she said gruffly. \n\n\"I have seen it,\" Kana said quietly. \"The Great Harmonious Spirit is here. It is real and the men have embraced it again. It was not permanently lost to us when we put them on the compounds. They have found their essence again. This is where they belong.\"\n\nThe woman with one wing made a bitter sound and Kana ignored her. She settled behind the men at the doorway awaiting attack. I'd never seen a woman without beads take orders from a man, but that's certainly what she was doing. \n\nRose got my attention and I went to help the Healers. We worked relentlessly for the longest time. When we had a moment to rest, Rose and I watched the men in the room. \n\nThe Healers seemed as tuned in as the men in the hall had been. They worked with seamless efficiency on the wounded. None of the beaded women seemed the least surprised, but I saw the eyes of the unbeaded follow the men. \n\nKana's sister sat on a warm stone as I carried dirty towels by. She called out softly and I stepped closer to her. I watched her war with herself before she bent her head to speak quietly to me. \n\n\"Have you seen them this way before, human? Are they like this all the time?\"\n\nIt was easy to see what she meant. The concentration the men seemed to have was amazing. Their focus was unbreakable. Even the injured seemed to be following the internal commands and accepted whatever needed to be done.\n\n\"No,\" I answered looking around, \"never like this.\"\n\nThe woman looked down at me and I sensed she just wanted to talk to someone about what she saw. Kana was busy and her Sister with the stomach wound was too gravely injured to talk much. Evidently, I was a suitable set of ears. \n\n\"The men used to become this way in times of great stress,\" she said slowly. \"We called it The Great Harmonious Spirit. It bound them together and they became one. Their strength was in their perfect cooperation and numbers. My female breeder and her line have not seen this since we put them on the compounds.\"\n\nI could connect faintly to Damien and his Brothers and I felt the calm buzz of their thoughts. It didn't feel markedly different from usual, but then to the men, I guessed it wouldn't. This organization would feel right. \n\n\"It must be a defensive instinct,\" I said watching the woman. \"When the men are free, happy, and connected; it seems they can help each other.\" \n\nThe woman settled on her stone and looked around. \"It used to be their strength, but it was not enough. They died and they made choices we did not...\"\n\nThe large woman stopped talking and just looked around. \n\n\"Everybody has to die sometime,\" I said thinking of my own children and remembering how I feared for them, but I still wanted them free. \"Living free makes the time you have worthwhile. This is how anyone would wish to live.\"\n\n\"My Sister agrees with you,\" the woman said, looking over at Kana. \"She has for a long time...\"\n\nWe stood in silence as the woman watched her Sister. \n\nTyle and his young family approached us suddenly. They stared at us as though waiting for something. \n\n\"We must change the dressing,\" Aryn explained when neither the woman nor I moved. \n\nThe woman hesitated and Tyle asked her politely to lay on her stomach. \n\nShe didn't move. \"There is no point to what you are doing,\" she said harshly. \"I cannot fly even if this wound is healed. My wing will not grow back.\" \n\nThe woman's refusal to do as they asked seemed to startle the young men for a moment. The wounded men in this hall were not refusing anything, most of the women were too injured to argue much. The compliance came from different places but it was the norm. \n\nA woman's prerogative, I thought to myself, it exists here, too. \n\n\"I cannot fly either,\" Tyle reasoned thoughtfully. \"If I wish to rise into the air, I take a transport. There is much to do on the ground, though. You have been left to us by The Great Harmonious Spirit. Your purpose must no longer be in the air.\"\n\nThe woman seemed stunned as the young man's statement.\n\n\"You must know The Spirit,\" Tyle insisted. \"You are a woman and I know you carry many generations of knowledge. The Spirit is alive and well in all of us, just as it was long ago. Even without the ability of flight, you have a talent The Spirit needs. Lay down and let us help you.\"\n\nIt took a moment, but the woman slowly lay on her stomach. She gave the boys access to the injured areas and they worked quickly to remove the old dressing. It was soiled and bloody. The sharp smell that permeated the area when the bandaging was off told me infection was threatening to set in. The boys saw and smelled what I did. They cleaned the whole area very thoroughly. \n\n\"I have heard there are places the women cannot fly, due to the wind,\" Tyle said as his Brothers murmured assent. \n\nI had heard this, too. The T'vailk mountains were supposed to be so wild that women couldn't fly during certain parts of the year. My attention went to my stomach where my little one seemed suddenly more active. She must be curious about those mountains. \n\nThe woman on the stone looked back at Tyle before agreeing. She talked about the T'vailk mountains in detail. At one point, she and her Sisters had mined there, so she was quite informative.\n\nI rushed and threw the dirty linens away before returning to listen. As Tyle and his Brothers applied a treatment to the damaged wing she told them all about that area of the world. The interest the young men had spurred the woman to talk more. She responded to them and they continued to interact.\n\nShe told us things I'd never even read about. As usual, there were things you'd only know if you lived there. The details of life in those mountains was fascinating to all of us. The storms made it a very different place. \n\n\"They say our cousin still in Ciara's belly is a woman of that line,\" Aryn said proudly as the boys finished. \"My male breeder is excited for his Brother. They say it is rare to breed a female of T'vailk mountain heritage.\"\n\nI'd never seen a female on this planet look so startled. The woman's head raised and she looked right in my face and then down at my big belly. \n\n\"That is not possible,\" she said firmly. \n\nThe boys took her opinion in stride. \n\n\"Our cousin Kennedy and her Sisters say it is,\" Tyle responded. \"They say the growing life is too fast to be a Paterian that isn't T'vailk. They are very smart girls. Many that have heard their argument believe it.\"\n\nThe woman looked between us a moment before she settle back down. I got the distinct impression she wasn't going to argue, but she did not believe us one bit. \n\n\"You call the women here cousin,\" she said instead. \n\n\"Yes,\" Tyle answered, binding the injured stump with deft and practiced moves, \"this camp is important to us. We would do anything for our campmates. We provide whatever they need, whether they are men or women.\"\n\nThe woman snorted and muttered something. It sounded like she said 'what can you provide a woman?'\n\nTyle and his Brothers grinned. Their attention switched seamlessly off the injured wing, which was now bound, to the rest of the woman's body. Aryn slid his hands along the woman's undamaged wing as his Brother touched her back. I recognized what they were doing probably constituted a massage. \n\nThe woman flinched as Aryn's hands slid across the contours of her right wing. Her head whipped around and she watched him with narrowed eyes. The young family just ignored her reaction and continued to stroke systematically.\n\nThe wings were sensitive in places, I'd learned that from listening to my campmates. Men in the compounds would not know that and only focused on the spears, where the sensation was burned out. In the camps it was not uncommon for a man to find the places a woman liked her wings touched. Men talked and I'd overheard their conversations about it. Tyle and his family were well versed in this particular physical attribute. \n\nThe soft parts of the wings that caught the wind and helped the women soar were very delicate. They could detect minute changes in resistance. It made the wings an extra sensory organ. Women liked to have those parts stroked lightly from the center outward. Even when the wings were folded, light pressure to those areas could be pleasing. It was supposed to be extremely calming. \n\n\"You are tense, cousin,\" Tyle smiled, \"let us relax you.\" \n\nI flushed hot remembering how my family used that phrase. The boys meant literally relax, though. They stroked her undamaged wing and rubbed her back. I watched her surprise fade as the gentle stimuli drove the tension from her muscles. Despite her resolve to be irritated by this, the stress of the last several days was too much. She fell asleep as Tyle's family caressed her. \n\nThe young men finished and moved away. I realized I'd just been staring at the interaction. I wondered if what we did would be enough to convert the opinions of any of the unbeaded women here. It would be awful if they started to take men back once they were healed. \n\n\"You look troubled, Ciara,\" Aryn said quietly approaching me. \n\nI was surprised when his hand came out and stroked my belly the way my family would have. The touch was gentle, just like Kein would have done. Aryn was family, though, and touch was important in the family. I smiled as the baby moved against his hand. \n\n\"Is everything alright?\" he asked. \n\n\"The women,\" I whispered to him, \"I'm worried they will try to take you all back to the compounds.\" \n\nAryn smiled and patted my shoulder. \n\n\"These women were sent to us by The Great Harmonious Spirit,\" he said. \"They have a place in our camp now and will stand with us. Don't worry, Ciara. Everything is happening as it should.\"\n\nI returned the smile and put on a contented face so Aryn would move away. This seemed like a pointless argument to get into right now. The men were very set in how they viewed things. \n\nThe stubborn part of me wanted to tell Aryn that it wasn't a spirit that had loaded these injured women on transports and settled them here. Men from the camp had done this and I still wasn't sure it was a good idea. Most of the unbeaded women didn't believe The Great Harmonious Spirit existed. We had no proof the women wouldn't turn on us once they were strong enough.\n\nI turned and watched our guard at the door. Kana had obviously seen the truth and was on our side. Her diligence and readiness to listen were testament of that. The rest of the unbeaded women here, I just wasn't sure. At the moment, most were so badly injured they couldn't fight even if they wanted to. When that changed, I wondered what would happen. "
    ],
    "authorname": "DoctorWolf",
    "tags": [
        "anal sex",
        "oral sex",
        "group sex",
        "novella"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/a-slave-to-the-servants-ch-34"
}