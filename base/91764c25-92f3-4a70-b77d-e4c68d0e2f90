{
    "title": "Kiss Me Cate Pt. 08",
    "pages": [
        "I'd like to start off by saying thank you for your patience. What with the holidays and work I've been having a hard time working on this story.\n\nI hope you enjoy reading this as much as I did writing it. \n\nI've had a long standing love of Irish lasses. Their eyes, complexion, smiles have always warmed my heart, and a few have broken it.\n\nConstructive criticism as always is welcome in the comments, others will be dealt with in the usual manner.\n\n****\n\nOur trip to Cork started early the next morning with a taxi to the station. Cate was able to catch up with her sister Shannon before hand so we could ride the train from Dublin together.\n\n\"Ye can go on up and kiss the Blarney Stone like a true tourist.\" Shannon poked fun at me after we were underway.\n\n\"I've been warned that it's a bad idea.\" I said laughing.\n\n\"Do ye not want the gift o' eloquence that's promised?\" She said teasing.\n\n\"He knows how to use his tongue quite well enough, thank you.\" Cate interjected, a smartly.\n\nMy eyes went up as I looked aside to where Cate sat, and it quickly dawned on her how that particular statement sounded. Her face began to blossom into a deep pink color as her sister laughed heartily. Cate gave her a little thump in the shin with the side of her foot and Shannon laughed even harder. I just smiled and sat back with my cup of coffee. I didn't doubt for a moment that my cheeks might be a bit pink too.\n\nThe girls chattered like magpies catching up on all the news of each others lives. Cate told the story of how we met, making it sound much sweeter than I ever had. Shannon's eyes lit up when she glanced at me with a look I thought might be jealousy. Cate didn't bring up the Chad incident and went back to Thanksgiving day and her call to me. She even choked up a bit when she told her sister about me being her knight in shining armor. I saw Shannon roll her eyes and smile at me.\n\n\"Has she been like this the whole time?\"\n\n\"Yes, I'll let you know if it gets tiring.\" I glanced to the side and noticed Cate's scrunched up, disapproving face looking at me. I knew she wasn't mad in the least but hunched my shoulders protectively just in case. She seemed satisfied with that and we all chuckled. Shannon began relating her escapades over the past year, and true to Cate's description she did sound a bit like a gypsy. Staying with different friends for a few months at a time, getting gigs playing in pubs and clubs here and there. I used the rare sunshine coming through the window as an excuse to squint. Shannon sat across from Cate on the inside seat rather than at the window like me. Her hair was a deep auburn and fell to her shoulders. The trademark freckles splashed across nose and cheek above a wide mouth which spread into a grin as they chatted. They had similar faces but where Cate's was paler by contrast with her much darker hair, Shannon's appeared warmer probably from the red in her hair. Their eyes were similar too, scrunched up at the corners when they smiled. A thought that made me smile a little. Shannon's looked a little more green than blue, but that could have just been the light. \n\nI looked out at the landscape as we passed, rolling land which still held a lot of green, with occasional patches of brown and bare trees. I smirked as I spied a far off slope with grey-white spots I assumed were sheep. How much simpler life must be without all the trappings of city life, schedules, spreadsheets, classes and meetings. I pictured Cate here in a tweed coat and knee high boots chivying animals in a pen, a dog bounding past, her hair flying in the breeze, her cheeks flushed from the cold. The look suited her, despite her sharp intellect and expansive knowledge, she seemed suited to life in the slow lane as well. At least she did in my mind at the moment. I tried to picture her in a power suit working in some glass and steel tower of a corporate office building, and though I could picture it, she didn't appear to be happy in my vision.\n\n\"Would that be alright with you?\" Cate asked gripping my thigh.\n\n\"I'm sorry, I was off day-dreaming. What was it you asked?\"\n\nShe smiled knowing she'd caught me unawares. \"To go 'round the pub to hear them play tonight.\"\n\n\"Oh yes.\" I smiled at her then at Shannon. \"I was hoping for it actually.\"\n\n\"If you don't mind me taggin' along a bit longer. As soon as you get yourselves situated we could go to The English Market for some lunch and I could show you around.\" Shannon added.\n\nI leaned forward. \"I was told not to bring up the English around here.\" I said in a conspiratorial tone.\n\nShannon laughed. \"Well not in Dublin anyway. Cork is a little more worldly. They call it the rebel city for a reason. I think a good comparison might be your Washington versus New York. One all about it's national identity, the other about it's social identity. You're likely to meet as many foreigners as you are Irish there.\"\n\nThey continued to chat while I looked out the window lost in my thoughts.\n\n\"Where are you staying?\" Shannon asked as we disembarked. I told her and her eyebrows went up. \"Well I'll ride along that far, I've got a bit further to go to get home.\" The taxi deposited us at our hotel. \"We'll meet at the English Market at the south entrance at noon.\" She said to Cate before we made our farewell.\n\n\"More cathedrals.\"\n\n\"What?\" Cate replied, turning from the closet where she was hanging clothes.\n\n\"Golf courses and cathedrals, those seem to be the prominent tourist attractions.\" I said chuckling as I looked up from my phone. Cate rolled her eyes and smiled.\n\n\"What can I say? We have castles and pubs too.\"\n\n\"Maybe I should take up golf.\"\n\n\"We could this spring.\" I looked up quickly to see her expression. She always shied away from talk about the future and I was curious what prompted her statement. She was still fiddling with a hanger and I noticed her hands had slowed and she wasn't looking at what she was doing.\n\n\"I'd like that.\" I replied softly. She lifted her head and turned to look at me, the light from the windows caught her eyes in a dazzling blue, and for the first time since we met, the fear was gone. Her brow was smooth, the corners of her mouth lifted into a little grin. What ever was happening, I liked where it was going.\n\n\"What should we do with an hour to kill before lunch?\" She grinned lasciviously.\n\n\"You're incorrigible. You know that don't you?\" I said with a laugh.\n\n\"What?\" Her eyebrows rose, pure innocence radiating from her. \"I was thinking of taking a walk.\"\n\nI squinted, unable to hide the grin that was spreading across my face. \"Oh? A walk?\" She smiled and shrugged innocently all the while looking up at the ceiling. \"What have I missed?\" That caused her to laugh.\n\n\"I knew you weren't paying attention on the train. Shannon mentioned a lovely row of shops along St. Patrick's Street.\"\n\n\"Ahh well that explains it. I think I've created a monster.\" I said laughing.\n\nCate pouted a furrow grew on her brow. \"Do you really feel that way?\" I felt my face slacken. I didn't realize I'd stepped on a land mine until after I'd heard the click.\n\n\"I was only teasing Cate. I didn't mean anything by it.\"\n\nNo small number of expressions flowed across her face. I expected her to blow up at me, but she only turned and took her coat and walked to the door.\n\n\"Cate!\" I launched myself towards her. She turned and held her hand up.\n\n\"Don't. I'll be back to go meet Shannon, but I need a moment.\" Her eyes had transformed from dazzling blue to flat gray and seemed full of tears to the point of overflowing, her voice cold. She flung her coat on, turned and left. The sound of the heavy door closing with a soft click echoed in my mind. My stomach sank as I ran through what I'd said to see if I could figure out what just happened. I closed my eyes and breathed deeply trying to get my mind under control. I turned and walked to the window and stared out into the distance, clouds moved quickly in from the sea. The boats down on the River Lee floated along in complete ignorance of the fact that I may have possibly ruined the one thing in my life I cherished most, and all with a flippant remark. I stayed my overwhelming desire to run after her. I knew somewhere deep inside that I needed to give her space. I paced back and forth like a caged tiger for a few minutes and forced myself to sit down and relax. \"Breathe in, breathe out.\" I thought to myself. She's doesn't give up, and I'll be damned if I will. She's everything in the world to me. My eyes snapped open at that.\n\n\"I'm such an idiot. She's everything in the world to me.\" I said out loud. \"Everything I've done since we've met was for her. Everything I do from here forward in my life is for her, for us, not for me.\" Vocalizing how I felt made me calmer by inches. \"I respect her. She has the heart of a lioness, but sometimes she seems so fragile, like a glass figurine.\" I massaged my temples as I put my head down. \"Which I've just thrown to the ground.\" I felt the hot streak roll down my face and swiped it away. \n\nAn unknown amount of time passed as I sat in a chair facing the window, my head in my hands. \"I don't know Cate. I don't know how to tell you just how much I love you and have you understand.\" Breathe in, breathe out. I felt another tear slip free, my cheek cooled where it dropped free. I leapt out of the chair when I felt cold fingers run up through my hair. Cate stood there, still in her coat, her face tear streaked. She didn't say a word, but only opened her arms and we fell into each other. \"I'm so sorry Cate. I didn't mean anything by it.\" I felt the tears flow adding to the cool mist still in her hair.\n\n\"I know.\" She said, her voice low and heavy with emotion. I leaned back took her face in my hands gently thumbing away the tears.\n\n\"I love you so much Cate. I, it's just that words can't do it justice, they're said and gone so quickly.\" She shook her head gently, a little smile pricked at the corners of her mouth.\n\n\"No they're not Dylan. Words leave marks on your soul. That's why hurt deeply, and others lift you up.\" She took a deep breath and let it out slowly. \"A bee doesn't sting you unless it feels threatened. I just spent the last twenty minutes wandering around wondering what I'd done to threaten you that would cause you say something like that. No matter how flippant it sounded, it stung.\"\n\n\"I didn't mean anything by it.\" I said again, she touched her fingertips gently to my lips silencing me.\n\n\"I know. The bee doesn't take it personally, so I thought about the ways you could feel threatened by me, and I only came up with two. The first was that you're afraid.\" She paused and took another breath. \"Afraid that I'll leave.\" The tears rolled down her cheeks again and I let them go. \"Which isn't the case. Remember? I don't give up easily.\" She wrapped herself in my arms again and laid her head on my shoulder.\n\n\"What's the other?\"\n\nCate laughed. \"Bearing in mind what you said before you realized I was even here it isn't worthy of consideration.\" I leaned back and looked into her eyes. She closed them and let out a sigh knowing she would have to give it up. \"The other was that you feel trapped by me and are trying to get loose so you can move on.\"\n\n\"That's not true!\" I said quickly.\n\n\"I know that.\" She interjected just as quickly. \"I know that now Dylan.\" She said much more softly.\n\n\"Cate I love you so much...\" She stopped me with her lips, crushing mine with her own. The silence was broken by her phone ringing.\n\n\"Oh shit! What time is it?\" She said fumbling for her phone. \"Hi!\" She said sheepishly. \"Yes we're still coming, we lost track of time. It's only a few minutes walk, we'll be right there. Will you wait for us?\" She signed off the phone and gave me a quick peck. \"I need to wash my face. I'm sure I look a fright.\"\n\n\"You don't.\" I said kissing her softly.\n\n\"Well you do, come on then.\" She took me by the hand and dragged me into the bath and ran the water.\n\nWe took advantage of the concierge service to borrow an umbrella and began the walk to the English Market. Shannon sat on a bench looking at her phone. Cate walked up to her and sat next to her and gave her a quick hug. \"Sorry about that. We didn't mean to stand you up.\"\n\n\"I was beginning to wonder. I couldn't get Mik sneak away from work so it's just us.\"\n\n\"Mik would be the rascal that Mum and Dad don't fancy?\"\n\n\"Aye, he'd be the one.\" Shannon rolled her eyes.\n\n\"He can't be that bad if he has a job.\" I said laughing.\n\n\"His full name is Mikolaj Kowalski. Does that give you an idea then?\" She said chuckling.\n\nI just made an, \"oh\" expression and pursed my lips and shook my head.\n\nCate looked up at me and rolled her eyes. \"There's some similarity to a prior situation I was in with Samar, as you might have guessed.\"\n\nWe went in and walked around the market, the girls chattered as I looked around. The market was full of stalls of various produce, at this time of the year it tended to lean towards the winter varieties. There was a stall with a large variety of fruits, the apples sported local names, the citrus I guessed must have come from the Mediterranean. The sight of all this food did wonders for my appetite. I cleared my throat as they looked over a pile of breads at the next stall. Cate whipped around quickly.\n\n\"Are you two getting ideas for lunch?\" I asked smiling. \"Because I could start at one end and work my way to the other if you're still looking.\"\n\n\"C'mon then. We can't let ye starve after going over the wares.\" Shannon replied with a laugh. We settled into a table at one of the cafes and ordered drinks.\n\n\"What's a dab?\" I said aside to Cate, she smiled.\n\n\"It's a flat fish, like flounder, thin fillets, it makes for good fish and chips, also grills well.\" She said looking at the chalkboard at the catches of the day. There were several since Cork is a port city, the rest of which I recognized.\n\n\"Baps are bread, dabs are fish, got it.\" I said laughing.\n\n\"Dabs on baps are tasty.\" Shannon added with a chuckle. Cate stifled another laugh as the waiter took our order, nobody could keep a straight face as I ordered the dab on a bap in my fairest imitation of Cate's accent. I distinctly saw the waiter's head shake as he walked away. \n\nShannon tried to dig a little deeper into how we met, Cate let her know it's just as we'd already told her, there was no secrets that we hadn't shared with their folks. A lie, well told, by both of us. I found out from Cate that she'd only told her father about the Chad incident and it wouldn't go further than him. I did tell Shannon that their father had given me the third degree just like the old gangster movies, with a light shining in my face and all. Cate rolled her eyes so hard I thought I heard it over the sound of the busy cafe. \"Said if I broke his little girls heart that he'd have to extract the price.\"\n\nShannon dove on that quickly. \"Well since I'm the little girl, I guess that means you'll be dumping this frumpy pain in the arse.\" She said grinning.\n\n\"I couldn't do that to Mik.\" I said. \"Besides I like this frumpy pain in the arse.\" I leaned over to kiss Cate. She quickly palmed my face and pushed me back into my seat with a gimlet eye. A smile began to creep across her face as I pouted. She leaned over and gave me a quick kiss.\n\n\"What does Mik do?\"\n\n\"He's a shipwright, welding and such. He got his degree and decided to take ship out of Gdansk a few years ago and ended up here. He's got a lovely singing voice as well, mind with a bit of an accent.\" She said smiling. \"Though his English is up to par. He's teaching me some colorful phrases in Polish. What about you then? I hear that you're at uni with this one, then I hear you're some software wunderkind.\"\n\n\"Where did you hear that?\" I said smiling.\n\n\"A little bird told me.\" She had that cat that ate the canary look on her face.\n\n\"I didn't know that you knew Samar.\" I replied, placing the piece in the puzzle quickly.\n\n\"I know lots of people.\" She said.\n\n\"They met at the Modern Art museum, Samar was his usual self. How did you find out about it?\" Cate asked.\n\n\"He's trying to woo the knickers off Ellen.\"\n\n\"I hope she's smarter than that.\"\n\n\"I warned her that he's a right bastard but she wouldn't listen.\" \n\nLunch came just then and we did a number on it, leaving nothing behind. \"What was it you called him after we left the museum?\" Cate prompted with a little smile.\n\nI looked around to see who might overhear. \"A small minded, arrogant, shit weasel.\" Shannon's mouth dropped open and she began to laugh loudly.\n\n\"That is perfect! I'll have to tell Ellen that it's unanimous, nobody likes him.\"\n\n\"Where to next?\" I said as I hailed the waiter for the check. \"I remember seeing a listing for a chocolate shop as we entered the building.\"\n\n\"That's where I'm headed.\" Cate spoke up quickly.\n\n\"That's no surprise. Mind if we tag along?\" Shannon responded.\n\n\"Oh alright.\" Cate laughed.\n\nWe made our way around through the hall and nearly didn't pass a French patisserie with a case full of desserts and cakes. I nearly had to tug Cate's arm to get her to keep moving, all while reminding her there was chocolate ahead.\n\n\"I had much better self control before I met him.\" Cate said to her sister.\n\n\"Aye, I can see ye losing control with that one.\" She nodded and winked causing them both a fit of giggles.\n\nI rolled my eyes for a change. \"Good Catholic girls, the both of you.\"\n\n\"I've got eyes and I'm not dead.\" Shannon shot back with a grin.\n\nOnce let loose at the chocolatier's they both were overcome with child-like glee reading the labels and making choices. They each left with a box of mixed truffles and Cate had picked up some bars for the trip home. We'd made our way around the rest of the market walking slowly as the girls continued to chat. We parted company at the entrance to the market with a promise to come and see Shannon perform tonight at the pub. Cate and I wandered back to the hotel in silence. I wasn't sure of what to say, or if anything needed to be said.\n\n\"It's still early. Is there anything you'd like to do?\"\n\nCate peeked out from under the umbrella at the gray sky and wrinkled her nose. \"I would really love to just take a nap.\" She said sheepishly.\n\n\"Okay.\" We went up to the room and Cate stripped down to her panties and rummaged through my bag pulling out a sweatshirt of mine and tugged it over her head, freeing her hair with a flip. She climbed under the covers and I pulled the drapes putting the room into near darkness. I walked over to one of the chairs and began to sit.\n\n\"Are you coming?\" She asked, her voice small and innocent as a child's.\n\n\"Sure.\" I said. I undressed and climbed into bed. She rolled into me and wrapped herself in my arms.\n\n\"I'm sorry, about earlier.\" She left it hanging.\n\n\"You have nothing to be sorry for, I was being an insensitive jerk.\"\n\n\"No, I was being overly sensitive. I thought about it when I went for a walk. I ran it through my mind and you didn't say anything that warranted a reaction like that.\" She hugged my arms tighter.\n\n\"You're right, I'm not a jerk, you are.\" I said and kissed her behind the ear. Cate gave a little chuckle.\n\n\"I'll try to be better.\" She said so faintly that I nearly missed it.\n\n\"Hey! Don't you dare cave in like that.\" I added quickly. \"You were not a jerk, I was only teasing. I'm going to have to stop it because I think it's starting to upset you even though you don't say anything about it.\"\n\n\"I can't help it, sometimes I get anxious when I look at you and forget that you're not just my Dylan, but also a handsome, young, millionaire. It's daunting, and it makes me feel guilty as if I'm some sort of gold-digger.\"\n\nI backed away from her and rolled her onto her back and looked down at her face in the gloom. \"Cate, I only ever want you to look at me and see 'your Dylan' that's who I am. I know you're not a gold-digger, you don't have it in you to even try. So please stop thinking like that.\" I leaned down and kissed her, her arms wrapped around me.",
        "\"Would you mind doing a little window shopping tomorrow then?\"\n\n\"Okay but I'm not sure how we're going to take windows back with us on the plane.\" I said chuckling. She pushed on my shoulder rolling me off her.\n\n\"You were right the first time, you are a jerk.\" She said with a smile in her voice as she turned away from me, pulled the blankets up and sighed. I was still chuckling as I snuggled up against her again and kissed her on the shoulder.\n\nMy phone chimed and startled me awake, the fog hadn't quite lifted in my mind yet and I blinked a few times getting my bearings. I could just make out the glint of her eyes, Cate was awake and looking at me. She sighed softly letting her breath out slowly. I reached over and silenced the alarm and turned back to her. \"Didn't you sleep?\" Her head bobbed a few times.\n\n\"Yes, for a bit.\" She held her breath.\n\n\"What?\"\n\n\"It's just that...\" She began, and paused. I quickly reached for the lamp, and fumbled to turn it on. I rolled back over and gathered her in my arms.\n\n\"What's the matter Cate?\" I said softly into her hair as she held me tight. She made a noise between a hiccup and sob.\n\n\"I'm sorry.\" She croaked out. \"I just, I don't understand it either, I'm sorry.\"\n\n\"It's okay, just breathe.\" I rubbed her back and she began to take slow measured breaths.\n\n\"You didn't know you were getting a big jumble of anxiety did you.\" She said with a snort and began to laugh low into my shoulder. I rubbed her back and thought about the contrast of Cate as she felt right now with the sharp and decisive woman who hit the floor and took control of the situation when a rock came through her apartment window a few weeks ago.\n\n\"Whatever you bring I'll be ready.\" I said laughing into her hair. I kissed her ear. She relaxed and I let her roll onto her back. She looked up at me with wet eyes, streaks running down her cheek and back into her hair. \"Why the waterworks?\" I said with a smile.\n\nShe sighed deeply once more. \"It was easier to talk to you while you were asleep.\" I don't know what I expected her to say, but that wasn't it.\n\n\"What did we talk about?\" I asked suddenly very curious. She closed her eyes and laid the back of her hand over them and smiled.\n\n\"Well I can't say now, you're awake.\" She pushed herself upright and leaned against the headboard. Her hair was a wild mass of tangles, her eyes rimmed red, her cheeks flushed pink. The lightbulb went on suddenly.\n\n\"What did I say in my sleep Cate?\" I worried that this was caused by me. She just laughed.\n\n\"You're a quick one love.\" She grinned at me, her hand cupped my cheek.\n\n\"Cate.\" She hushed me with her finger tips.\n\n\"Don't worry, it wasn't anything bad. You didn't go on about your conquest of the varsity cheerleading squad if that's what you're worried about.\" She was grinning as she leaned down and kissed me deeply, her hands held my cheeks her thumbs stroked slowly as our tongues danced.\n\n\"Mmm do that again.\" I growled.\n\nShe was breathing quickly. \"Gladly, as soon as I catch my breath.\"\n\n\"If we keep this up we'll be late.\"\n\nShe glanced at the clock on the nightstand and swept the sweatshirt over her head quickly. \"I guess we'll have to be quick about it then.\" She began tugging at my tee which caused me to start laughing. We were quick about it, Cate showing amazing ardor for someone that was in tears a few minutes earlier. I knew then that whatever I said wasn't a problem, even if she wouldn't tell me what it was.\n\nShe lay back panting as I tried to catch my breath. \"Was that quick enough?\" I said chuckling. \n\n\"Quick enough that we may be able to take a little more time in the shower.\" She said with a silly grin on her face.\n\nAfter our shower she pushed me out of the way saying that she needed a moment to overcome her recently ravaged appearance. I warned her if she waited too long I'd ravage her again. She called me a beast and nudged me out of the way. Before long we were out of the hotel and walking towards the pub. It was more of a music hall than a pub from what Shannon had told us. The streets were damp and there was plenty of fog but the rain had stopped.\n\n\"You're awfully quiet.\"\n\n\"Hmm? Oh, sorry. I was trying to puzzle out what happened earlier.\"\n\n\"I told you it was nothing.\" She growled and tugged me closer for a quick peck on the cheek. We walked past the front of the pub, the windows radiated warmth in the gloom. I held her back a moment before letting her reach for the door.\n\n\"Will you ever be able to tell me?\"\n\nShe turned to face me under the lamps of the door and closed her eyes for a moment, a smile crept across her face. She opened her eyes and gazed deeply into mine. \"I hope there will come a day where you will say it when you're conscious, then I'll tell you.\" Her smile broadened. \"Come on, it's cold out here.\" I reached around her and held the door open wondering what in heaven's name I had said. I took her at her word and did my best to let it go for now. We found a table and ordered a quick supper.\n\nShannon appeared a few minutes after we sat down. \"Well there ye are. I thought I'd have to run over to the hotel and throw a bucket of ice water on the two of ye.\" She said with a wink. \"No thanks.\" She said when I asked if she'd join us. \"I need to get round back and warm up. I'll see you in a bit.\" She leaned down and gave Cate a kiss on the top of the head. A move which caused her to raise her eyebrows and smile.\n\n\"I wonder what that was for?\"\n\n\"She's not usually like that?\" I asked.\n\n\"No she's not.\" Cate shrugged.\n\n\"She's missed you.\" I said with a little smile. Cate's smile faded ever so slightly as she looked down at her glass. \"You miss being here don't you.\" I said softly.\n\nShe tilted her head and nodded. \"This isn't where my life is right now. My life is in America,\" she paused, \"with you. Where I'll finish my degree and decide what to do then.\" That smile crept across her face again and I sensed that what ever I said in my sleep was pretty important. \n\nOur dinner appeared and we made short work of it. We were finishing our drinks, speaking about nothing in particular when I realized that the little quirk at the corner of her mouth hadn't left. Her lips were a little redder than usual, her eyes a little brighter. The gold light warmed her skin. Her eyes glinted softly, their message to me was loud and clear. They said exactly what I felt and I no longer had any doubt about how she felt. She was very much in love.\n\n\"Are you alright?\" She whispered. \"I don't think you've taken a breath in minutes.\" I remedied that by taking a deep breath and let it out slowly with a small laugh.\n\n\"I think I might know what I said.\"\n\nShe raised her eyes and a slight blush flushed her cheeks as her smile broadened. She didn't ask for verification but just gave a slight one shoulder shrug. She perked her head up at the distant sound of a violin.\n\n\"That'd be Shannon.\" She said smiling.\n\nI laughed. \"How can you be sure.\"\n\n\"I've heard her warm up enough to recognize it. She can go from Vivaldi to Drunken Sailor in a measure without losing a beat.\" Cate replied with a grin. \"Let's get another round and go find a seat.\" Cate walked ahead of me through the darkened hallway and stopped, turned and kissed me spontaneously. \"Thank you for this, for everything, Dylan.\"\n\n\"Anything for you love.\" I said kissing her again. A small polite cough from behind me.\n\n\"If ye'll be meeting in the hall at least stick to one side so's we can sidle past.\" The gent said, as he did just that and kept walking.\n\nCate and I laughed and we kept on around the corner and into the back of the hall. There was a large floor with tables drawn up and a small area left open I guessed for dancing. Another bar stretched down the right wall and the left wall held a low stage brimming with instruments and a few people warming up. Shannon was there and saw Cate and I and threw us a smile. She stopped and pointed with her bow to a table with a couple drinks on it and mouthed \"there.\" I looked around and noticed that there was a decent crowd for a Monday night. Shannon looked around and saw who was on stage at the moment and began playing something, soon the others joined in on some impromptu jam I didn't recognize. They sounded terrific as they played the pianist leaned into a microphone and asked about a couple of other band members who were likely at the bar to get to the stage. A few people laughed, but two others came up to the stage and stepped up. They started with a few covers of UK bands as a warm up. Shannon walked up to the main mic and began introducing the band as each played a little solo. They jumped into some more even more upbeat music and I was amazed by Shannon's voice as a few she just sang. \"So it runs in the family.\" I thought. I got a feeling that someone was hovering around us and I turned to find a thick-set, dark haired guy behind us looking up at the stage. He had his sleeves rolled up and saw a couple tattoos on his lower arms. He had eyes for nobody else in the place but Shannon. I leaned over and whispered as softly as I could in Cate's ear. \"I think Mik is here. I recognize that look in his eye.\" She looked over my shoulder and her eyebrows rose as the smile spread across her face. She nodded her agreement with my assessment. As the song came to an end I noticed a nod from Shannon, and he moved towards us.\n\n\"You must be Catelyn and Dylan.\" He said in a halting, sing song accent. He held out his hand. \"I'm Mik, Shannon's friend.\" He had a firm rough, grip and easy smile. We rearranged our seats to make room at the little table. We didn't chat as another song started. This time the guitarist was singing lead on Wild Night. They segued into another song I didn't know but it sounded great. Once the song ended Shannon stepped forward during a pause, then the pianist began a riff I recognized instantly and my eyes went wide.\n\n\"This one is for my lovely sister who is here from America with her new beau.\" She looked down and the pianist began playing New York State Of Mind. Cate leaned over and laid her head on my shoulder as I watched her foot twitch to the music. She was terrific and I heard an echo of Cate's voice in hers. The song ended with a vigorous round of applause.\n\n\"Before you think I'm done embarrassing you Cate, you're wrong. You see before she went off to uni and turned into a computer nerd, my sister was a fair hand herself at the piano, and has a voice like a lark.\" I felt Cate stiffen and begin a soft litany of 'no, no, no.' \"The next song I have in mind, since it's Monday and we don't really have a set list, is an old pop favorite of ours. When we were kids we'd sing along with the record in the parlor at home. The thing is that it's best performed with at least two singers in harmony.\" Shannon winked at Cate. \"Do you think she'd join me for it?\" She asked the audience with mock innocence. The crowd, well lubricated by this point was all for it, applause and a few whistles. \"Better come on up then Cate before the crowd becomes unruly.\" Cate had her face in her hands, her head shaking. Mik was grinning ear to ear nodding vigorously and clapping.\n\n\"I'm going to kill her.\" She said before standing, straight and tall. The audience cheered her on as she walked forward and stepped up on the stage. She whispered in Shannon's ear and she grinned.\n\n\"What's that?\" She made her repeat it out loud in front of the mic.\n\n\"I said, I'm sorry if I ruin this for you, and hope nobody leaves because of it.\" The guitarist moved his mic stand up to the front for her. \"Can this one be turned off?\" She asked him and he grinned and shook his head.\n\n\"She made us learn this song, somebody had better sing it.\" He stepped back and swapped his acoustic for an electric guitar and strummed it a few times.\n\n\"You'll be fine, if it helps, block them out and pretend we're in the parlor singing into hair brushes again.\" Shannon added with a grin.\n\n\"Breathless, right?\" Cate asked her. Shannon nodded. Everybody went silent for a moment and Shannon leaned into the mic and began, Cate and the band picked up on the next bar. It was amazing to watch. They sang as if they'd been practicing it for years, Cate loosened up immediately and began swaying to the music as she sang. I was so mesmerized that when the song ended, the crowd erupted and I was still frozen. I shook my head and even saw Shannon had turned aside and was clapping. Cate was grinning, red cheeked and so incredibly beautiful. Before I realized it I was standing with the others clapping for all I was worth. Cate bowed, for a moment her smile brighter than before as she hugged her sister and stepped off the stage.\n\n\"You were amazing!\" I said holding her chair for her as she sat down. Mik agreed.\n\n\"You sound great together. You should be a singer like Shannon.\"\n\n\"I might have been were I not scared to death to get on stage and perform.\" She said fanning herself with her hand.\n\n\"You did fine.\" Mik replied waving towards the stage as Shannon said they were taking a short break and would be right back. Shannon approached the table, pulled up a chair and reached for the drink she'd left on the table.\n\n\"I could kill you right now.\" Cate said with very little menace.\n\n\"O' ye did fine, relax. I nearly had you do an encore but I wasn't sure you were up to it.\" She added grinning. \"Have you all met? Mik this is my sister, obviously, and her boyfriend Dylan from America. This is my boyfriend Mik, from Poland.\"\n\nThe barman came by with a full tray of drinks. \"From some of the boys at the bar. They'd love another song from the two of you.\" He added grinning.\n\n\"Maybe some Spice Girls.\" Shannon said laughing. Cate gave her a withering look.\n\n\"Let's not drag ALL of my skeletons out of the closet at once, shall we?\"\n\n\"So I shouldn't tell Dylan about your unrequited love for Justin?\" Shannon said.\n\n\"Beiber?\" I said in disbelief. The withering stare was turned on me.\n\n\"Timberlake.\" She growled. \"Let's not, I'm sure I couldn't remember another song if I had to.\" She begged.\n\n\"You'd be surprised how easy it is to remember when the music starts.\" Mik added.\n\n\"Keep it up love, you'll be up there next.\" Shannon grinned.\n\n\"That's a terrific idea. She says you have a wonderful voice.\" Cate encourage.\n\n\"We could do Blackbird. We've been practicing that one.\" Mik said smiling.\n\n\"Probably want to wait until we wind down, it'll put these buggers to sleep.\" She replied.\n\n\"How did you two meet?\" Cate piped in, curiosity getting the better of her. I'm sure she was trying to divert Shannon from finding a song she could do as well.\n\n\"This one came in one night with a few of his ship mates and sees me up here and falls head over heels. Can't say as I blame him though.\" Shannon grinned at Mik. \"It's not every day you have a sailor jump ship for you. Quit his job and stayed here in Cork and got work at the shipyard.\"\n\n\"So you were a sailor before?\"\n\nMik nodded. \"Worked a freighter out of Gdansk as an engineer. We made the rounds of the Baltic and North seas. We transported cars from Sweden, oil from Edinburgh you name it. That's not how I wanted to see the world, from the engine room of a rusty tub.\" He said laughing. \"I came here, heard her sing and decided this would be a good place to start.\"\n\n\"How did your shipmates feel about that?\" I asked.\n\nMik shrugged. \"There's always someone to fill the spot when you're in a good sized port. Otherwise the company will fly someone in. I wasn't critical, there were others who could also do my job so they didn't have to replace me unless they wanted to work shorter hours. I build and repair ships. I get paid about the same and I get to go home to this one every night.\" He grinned as he motioned to Shannon.\n\n\"I'm sure Mum already knows but don't go blabbing about it, will you?\"\n\n\"Mum is well aware you're, how did she put it, seeing some rascal down here.\" Cate said smiling. \"You should bring him home. I did.\" She said laying her hand on mine.\n\n\"Oh I thought it was the other way around, that Dylan brought you home, after the number the telephone boys played on you in New York.\" Shannon chimed.\n\n\"Either way, we're here, and from everything I can tell Da got along with Dylan just fine.\"\n\n\"Well of course he would, Dylan's as Irish as we are, he might even pass it off if we only drop him in Dublin for a month.\" Shannon added tartly.\n\n\"I think you might be surprised.\" I added before they could start swiping at one another like strange cats circling. \"I mean he's got a great job, his English is great. Are you Catholic?\" Mik nodded. \"See, another point in your favor. I'm betting that your father would get along with him just fine as long as he doesn't go on about how you're shacked up together.\" I added. Everybody laughed at that.\n\n\"Maybe.\" Shannon said gazing at Mik with a little smile. \"Alright, back to work.\" She saw the others getting back up to the stage. They played some traditional music, a few of which were drinking songs which got the crowd to join in with the lyrics. True to her word as the night wound up she did have Mik join her for Blackbird. They wound up the night thanking everybody to a long round of applause. It was late and Shannon came and sat with us for a bit longer, she was visibly tired which didn't surprise me considering the time we got to the train in the morning and the late hour. She expressed surprise at Cate's fortitude.\n\n\"We had a nap after lunch.\"\n\n\"Oh I bet you did.\" Innuendo dripped from her words. Cate rolled her eyes at her sister.\n\n\"That was after.\" I said and got a booted in the shin for it. I had the good sense to shut my mouth quickly and look embarrassed while being laughed at. We talked a while longer and I paid off the tab for the table. Shannon and Mik invited us to dinner with them the next night after our sightseeing. \n\nWe finally parted ways and began the short walk back to the hotel in the foggy night. We walked hand in hand from one orb of light to the next. \"I told you that you were a great singer.\"\n\n\"They were drunk.\" Cate said, though I distinctly heard the smile in her voice.\n\n\"Don't sell yourself short.\" I said giving her hand a squeeze. I chuckled. \"After the second wolf whistle I nearly stood up to see who was giving my girl the eye, then I realized where I was and I probably shouldn't try to start anything.\" Cate did laugh out loud at that.\n\n\"Probably a good idea.\" We stepped off a curb and crossed a darkened street, mounting the one on the opposite side in the warm light of a street lamp.\n\n\"I love you.\" We walked in silence for a few more yards, and she hadn't responded and I started to worry. She gripped my hand tightly. Our footfalls echoed softly on the pavement as we walked. I thought about what happened this afternoon, she was right, what I said was just a wisecrack and shouldn't have been taken so seriously. I realized that I had a responsibility to her, to be mindful of what I said. Words could leave marks. She still hadn't spoken and I began to worry. I swallowed deeply. \"Cate?\"\n\nShe chuckled. \"I love you too. Did I have you worried?\"\n\nI laughed as well. \"Well, a bit. What are you thinking about?\"\n\n\"What am I NOT thinking about would be more apt.\"\n\n\"Can we narrow it down to a few highlights?\"\n\nShe took a deep breath and let it out. \"First, I still feel awfully embarrassed about getting upset earlier. I was being crazy.\" She sighed. \"It happens sometimes.\"\n\nI let out a sigh of relief.\n\n\"What was that for?\" She sounded offended.\n\n\"What? Nothing?\" I stumbled innocently. \"I mean that sort of explains...\"\n\n\"Explains what? Why I'm an anxiety ridden lunatic?\" She said sounding even further offended.\n\n\"No, no, not that, it's just that you seem to be crying a lot lately and I've been worried that I was the cause.\"\n\n\"Well you're partly to blame, but that's because you can't stop being wonderful, even when I should be angry with you, the rest is that I can't believe I'm this lucky.\" She said raising our joined hands. I pulled our hands up and kissed the back of hers. \"See, there you go proving my point.\" She said smiled before turning her eyes back to our path as we continued to walk.",
        "\"Secondly?\" I prompted.\n\n\"Secondly, yes that.\" Her mouth quirked to the side in a lop-sided grin. She didn't continue, we just walked.\n\n\"Hmm?\"\n\n\"Let's skip secondly for now, shall we?\" She said laughing. \"Thirdly,\" she sighed heavily, \"this is all going to be over in a few days and it's back to the daily grind. The classes, papers, research, writing,\" she tilted her head back and groaned, \"assignments, grading, excuses, faculty politics and so on and so on.\"\n\nI laughed. \"You know...\"\n\n\"Don't even say it.\" She interjected with a finger pointed sternly at me. We walked a bit further, and were almost to the hotel. \"You were right though, I do miss it here,\" she added quickly, \"but there's no way I'd come back without you. We both have too much going on, and that's back at home. Besides,\" she said smiling, \"we can visit when we like.\" We continued to walk, in no great hurry. \"How does that old song go? 'How you gonna keep them down on the farm, after they've seen Paris?'\" She laughed. \n\nI wasn't sure what I'd expected her to say. She was right, we'd be back often to make sure she didn't get homesick, and I wasn't opposed to coming here to live either, but my heart soared when she said, in no uncertain terms, that she was staying with me.\n\n\"Absence makes the heart grow fonder?\" I said as we walked. \"Do you like teaching?\"\n\n\"I do, and that surprised me after a few months. I love seeing a students face light up when they suddenly understand a concept. I'm often amazed that the problems they solve in completely different ways than I might have tackled them, and I learn something from them.\" She shook her head. \"Maybe I've a bit more of my Mum in me than I'd thought.\"\n\nCate came over and perched on my lap. \"What would you like to do tomorrow?\"\n\nI shrugged. \"Anything you'd like. I'm still curious about St. Patrick's Street. There's Blarney Castle.\" I added in my poor imitation of her, which received the reaction I was looking for as she rolled her yes and let out a sigh. I chuckled and took her in my arms. \"I'm sorry, I'll stop teasing.\"\n\n\"Don't do that.\" She mumbled into my shoulder. \"Then I'll think you're upset with me.\"\n\n\"It'll never happen.\" I whispered into her thick, dark hair. I could feel a bubble of laughter from her chest.\n\n\"Ye have little faith.\" She whispered back. \"Your memory is already fading of just a few weeks ago?\"\n\nI laughed at that. \"That day isn't one I'll forget.\"\n\n\"Good.\" She added with another giggle. She let out a long sigh and started making snoring noises into my shoulder.\n\n\"Okay, I get the idea.\"\n\nThe next morning dawned gray. It wasn't raining yet, so we decided to make our way out to Blarney Castle first where I was hoisted upside down to make my homage complete. We took a short walk through the gardens but the weather turned against us. We made our way back the city center a few hours later. We decided to start at one end of the St. Patrick's street and work our way to the other end. I jokingly stood in an electronics shop window goggling at all of the video game equipment at which point Cate tugged at my elbow several times to keep me moving. I did the same with her at a high end boutique, the only difference was I was pushing her towards the door and she was pushing back to keep out of the shop. We laughed and teased each other as we walked in the cold and damp. I noticed we both went oddly quiet as we passed a jewelry store and didn't make more than a cursory glance at the window displays.\n\n\"I stand corrected, you were right, sometimes it is just fun to window shop.\" I said raising my coffee in the warmth of the cafe we'd stopped in.\n\n\"The most affordable kind of shopping, but that black suit down the street though.\" She rolled her eyes a slight moan escaped her lips. The suit she was referring to was a stylish long black number, the coat cut very low, and the mannequin it was on showed no signs of a blouse or a bra. I could easily picture Cate wearing it.\n\n\"We can go back.\" I said smiling. She gave me a deadpan look. \n\n\"You've already lost the grasp of the window shopping concept haven't you?\"\n\nI laughed. \"That suit with those black heels you bought a few days ago.\" I wiggled my eyebrows at her.\n\n\"No,\" she said, \"you would need something brighter than that, maybe gold or red.\"\n\nMy eyes widened and so did my smile.\n\n\"You look positively feral.\"\n\n\"I wonder where the nearest shoe store is?\" I turned and looked out the window hoping one would materialize instantly across the street.\n\n\"Before you go there, imagine twenty or more hormone-driven young men staring at me in that outfit for over an hour per class.\"\n\n\"You're right. I remember the first time you wore a short skirt in class, it was the buzz for days after.\" I said wiggling my eyebrows. \"I wonder where we can find burlap sacks around here, long ones.\" I began rubbing my chin. Cate laughed, while a blush colored her cheeks.\n\n\"I thought you'd see it my way. I honestly believe that women in education dress conservatively so their male students will keep their minds on their studies.\"\n\nThe song Hot For Teacher came to mind and I smiled, but I didn't say another word. \"Business too I imagine.\"\n\nShe gave me the raised eyebrow look. \"I'll have you know that I always dressed appropriately for work. The incidents at my last company had nothing to do with my wardrobe.\"\n\n\"I wasn't even thinking that Cate.\" I reached across the table and took her hand. \n\nWe finished our impromptu lunch and crossed the street and began the walk back to the hotel. We passed a small travel shop with posters of the warm locales popular at this time of the year, Spain, Greece, Italy and one or two posters of skiers in the Alps. \"See the world.\" I said softly.\n\n\"One day.\" Cate responded with a little smile. We continued walking in relative silence. I noticed that the warnings I was used to getting weren't there any longer and she was referencing our future, together. I treated it as a rare animal sighting holding my breath in the hope that it didn't disappear in the blink of an eye. We were in no particular hurry to the dismay of some people that passed us by.\n\n\"You're quiet.\"\n\nI nodded. \"So are you.\"\n\n\"What are you thinking about?\"\n\n\"Dreams.\"\n\nShe cocked an eyebrow and glanced at me sidelong. \"Fulfilled?\"\n\n\"Yes.\" I smiled and gave her hand a little squeeze. She chuckled.\n\n\"Come on, you're not getting off that easily.\"\n\n\"No, it's true. You've stopped warning me at every turn about the future and started talking about it.\"\n\n\"Have I?\" She seemed genuinely surprised. \"Dylan, I...\"\n\nI turned her quickly planting my lips on hers. She pulled back with a shocked expression. \"No.\" I said. \"Don't bring up doubts or worries, just move forward Cate. Let fate be your guide.\"\n\n\"Aren't those concepts mutually exclusive?\" She said grinning.\n\n\"I don't believe so.\" I returned her grin. \"We've nominally agreed that it was fate that brought us back together, don't try to overthink it. I want to enjoy it for as long as I humanly can.\" Her smile softened and her eyes welled up as she slowly wrapped her arms around my neck and kissed me deeply in the middle of the sidewalk.\n\n\"You've an old soul Dylan Butler.\" She said looping her arm in mine and we continued along our route.\n\n\"Funny, my mother used to say the same thing to me.\"\n\n\"I know, she told me, now I know what she meant.\"\n\nSurprised I chuckled. \"Oh, what's that?\"\n\nShe tilted her head as she formed her response. \"You're not filled with the youthful angst so many people your age, or should I say our age, like the worries of future success, or the fear of failure. You seem self assured without being pompous.\" She thought for a minute longer and a smile crept across her face. \"You're the embodiment of the French saying, \"Que sera, sera.\"\n\n\"What ever will be, will be. The future's not ours to see. Que sera, sera.\" She gasped, as I sang the lyrics.\n\n\"What?\"\n\n\"You've got a lovely singing voice too. It's a good thing Shannon didn't hear that last night.\" She added laughing.\n\n\"I wouldn't say lovely. I'd barely say passable.\"\n\n\"I'm surprised you know the lyrics. It's not exactly the kind of song you hear on the radio any longer.\"\n\n\"Doris Day, Jimmy Stewart, The Man Who Knew Too Much, directed by Alfred Hitchcock. I'm surprised you know it too.\" I whispered conspiratorially. \"It was in a movie.\" \n\n\"I'll have you know it was one of Mum's favorites and we had the sheet music.\" She turned and stuck her tongue out at me. I leaned in to bite it and she kissed me again. She turned us towards the hotel on the next block and we headed back. Forgoing the usual afternoon tea, we stopped at the cafe off the atrium for hot chocolate. \"This was a good idea.\" Cate said inhaling the scent.\n\n\"I thought so too.\"\n\nWe went up to the room for a few hours before dinner. The television played something low while we generally ignored it. I sat on the bed leaning back against the headboard with Cate curled against me. She let out a little laugh.\n\n\"You know, if you told me a few years ago I'd be this smitten I'd have told you that you were daft. Strong independent women we Murray girls are.\"\n\n\"I hope to keep you smitten for at least sixty or seventy years.\" I said and kissed the top of her head. I paused waiting for the push back and got none and I grinned.\n\nShe turned her face into my shoulder and mumbled. \"Let's start with sixty, no need to get crazy just yet.\" \n\nI laughed. \"Okay we'll start with sixty and see where we go from there.\" I tilted her head back and kissed her. \"Mmm you taste chocolatey.\"\n\n\"Have another taste.\" She said grinning. I proceeded to do just that.\n\n\"You know, you're pretty good at that.\" I said catching my breath.\n\n\"You are too.\"\n\n\"Practice makes perfect.\"\n\n\"Think we should workout for the Olympics?\" Cate asked breathlessly.\n\n\"Sure but which nation would we represent?\" I asked laughing.\n\n\"Ireland, of course.\" She grinned and kissed me again.\n\n\"You're making me wish we didn't have plans for dinner. I could stay like this all night.\"\n\n\"Damn.\" Cate sat up quickly looking around for her phone. \"What time is it?\"\n\nI laughed. \"We're not late, relax.\" \n\n\"No, but a bit rumpled.\" She said looking down at her clothing. \"I should probably change.\"\n\n\"Only if I can watch.\"\n\n\"Pervert.\" The grin on her face belied the fact that there was no conviction to the claim. I decided to clean up a bit and change out of my jeans as well. Cate came out of the bath and groped me on the way by. \"Nice arse, hot stuff\" she added sending us both into a fit of giggles.\n\n\"You called me the pervert?! How quickly the tables have turned.\" She disappeared back into the bath claiming she needed to make her self presentable. I scoffed loudly at that. She came back out a ten or so minutes later, her eyelashes bolder, her cheeks showing a bit more color and her lips a slightly darker shade of pink.\n\n\"You still look beautiful. What have you been doing for ten minutes?\" She looked sharply at me, her mouth opening slightly. I started laughing and leaned in for a kiss. She quickly retreated.\n\n\"Ah ah, not dry yet. In five or so minutes you can have your way with me.\"\n\n\"Won't your sister be upset if we stand them up?\"\n\n\"She's met you, she'd full well understand why I would.\"\n\nWe got our coats on and made the short two block trek to the restaurant. Shannon and Mik had arrived a little ahead of us and were already at a table. We made small talk, Shannon suggested that Cate should take her mother out for some girl time before we went back home to the States.\n\n\"She'd never admit it to you but she wasn't happy when you kept winging off to foreign lands. She misses you terribly.\"\n\n\"Do you get back home often?\" Cate asked.\n\n\"I have been back a few times last year, but it's not the same for us. You're her favorite.\"\n\nCate made a face at her and disagreed.\n\n\"No it's true, I'm not being snarky. I think it's because you're so much like Da.\" Shannon turned to me. \"She's the quiet one, Sinead and I are the natterers.\"\n\n\"I think we can work in a day before we leave.\" Cate said laying her hand on mine with a nod. \"I'll just have to find this one something to do before hand so he doesn't wander off.\" We had a terrific dinner and a few bottles of wine to go along with it. Mik wasn't chatty. I think he was self conscious about his accent, but joined in when Shannon dragged him into the conversation. The wine probably didn't hurt. We stayed well after the plates were cleared and finished off the dregs from the wine and sipped coffee. I liked Shannon, she was bubbly and surprisingly extroverted compared to Cate. She was quick witted and a bit of a joker. I imagine it's easy to get lost in the crowd of a symphony but when you're only one of four or five on a stage and you're the main vocalist, it's not a good idea to be shy.\n\nCate had asked me politely to not jump on the bill, a simple offer to split it would suffice. She didn't want me to look overtly American as she called it. I chuckled because I knew what she meant and let her know I'd be as humble as possible. In the end it didn't matter, Mik had covered it without a bat of an eye. We left with many hugs and well wishes on our trip home. We invited them to come to see us in the States any time they'd like to visit. \n\nAs we walked back to the hotel for our last night in Cork she brought it up. \"You know, I think that's one of the biggest differences of culture. I've seen it often. Americans have this success culture built up in their heads that they have to be wealthy to be happy. You know it only occurred to me a few times that it would have been handy to have my own car when I was living in the city. I had a nearby lorry stop and could get most places by foot if need be and I didn't feel... embarrassed I guess is the best way to put it.\"\n\n\"The American dream. Everybody gets their own home with a yard and a car, or two, plenty of money to afford regular vacations, and a fat nest egg to retire early on.\" I nodded.\n\n\"That's not to say that you don't line your home with things. Televisions in every room, electronics and toys, boats and caravans. I'm sure there are plenty of people here that would be the same, but by and by they're happy with a roof over their head and a steady job.\" She said, and I noticed she was using terms more common to her own homeland. \"I know it make me sound very critical, but I think we value people more than things.\"\n\n\"I'm not going to argue the consumer culture. I think we Americans have that well nailed down.\" I said laughing. \"In the immortal words of Henry David Thoreau, 'Our life is frittered away by detail, simplify, simplify.'\"\n\nCate chuckled. \"Yet here we are in very detail oriented, fast paced careers.\"\n\n\"It does seem counter-intuitive, doesn't it?\" I thought for a moment. \"Though computers, and the Internet are just the next form of communication. We're just doing our best to police it.\"\n\n\"What you said before, that it's counter-intuitive, I think that's one reason I went crazy on you every time you tried to solve a problem by throwing money at it. I don't want you to lose sight of the point.\"\n\nI was surprised by that. \"What point do you mean?\" She looked over her shoulder to see if we had any people in earshot.\n\n\"I mean that the point isn't that the one who has with the most money wins.\" She said softly. \"I'm probably rambling, I'm sorry.\"\n\n\"No, no.\" I encouraged her. \"I'm genuinely curious.\"\n\n\"I don't know what's making me so philosophical, probably the second bottle of wine.\" She laughed. \"It's just that I've felt, and still feel that the life well lived is full of experiences both big and small, not one filled with yachts and expensive cars, and villas in warm places.\"\n\n\"Okay then I'll sell the place in Monte Carlo.\"\n\nShe elbowed me gently. \"Arse. I mean that it's not about diamond buying trips to Antwerp as you so eloquently put it, or shopping sprees on Bond Street, at least for me, though I do like to look through the windows.\" She added pointedly. \"I'd much rather spend a night over dinner with family and friends than practically anything else. A home made dinner would make it even better.\"\n\nI paused for a moment as we turned towards the front of the hotel. She turned to face me. \"Cate? You know who I am now. I don't live like that either. I have a decent car and a nice apartment, but I don't have crazy spending habits.\" Her eyes went wide. \"Okay that one thing, but that doesn't count in this discussion. The most expensive thing I've purchased was the airline tickets to come here with you. I would consider that more of a check in the experiences column of my life's ledger than an extravagance. I hope you understand that.\"\n\nHer mouth quirked in a little grin. \"I know, but I think we're not on the same track here. I'm saying that I myself don't want become a slave to money. I was once on a track to climb my way up the corporate towers of power and money, and I now consider it a blessing that it got derailed. Does that make sense? I mean it sounds so very nonsensical considering the drive and direction we're pushed towards these days.\"\n\n\"I'm glad it got derailed too, or you would never have been sitting outside my favorite little tea shop on a hot summer day for me to meet.\"\n\nCate's face brightened at that and a smile spread instantly across her face just before it hit mine crushing my lips. Her arms wrapped tightly around my neck. I finally got a chance to speak for a moment. \"I'm guessing that was the right response?\"\n\n\"You know, for all the time we've spent together there's an awful lot we don't know about one another.\" She said.\n\n\"Okay you can test me in sixty years to see what I still don't know about you.\" I said. Cate just smiled and put her forehead against mine. \"Come on, let's get inside where it's warm.\" We got on the elevator before I spoke up again. \"I have to admit that the windfall I've had has made life very easy for me, but I haven't let it go to my head, at least I don't think it has, I haven't done anything crazy.\" I held up my finger before she could jump on that remark. \"I don't plan on changing now, which has been a great relief to my folks, but if it comes down to forgoing a minor extravagance for the sake of humility, I'll take the extravagance so I can at least say to my conscience that I didn't deny myself the experience. I won't pass on a steak and eat peanut butter and jelly because it was more sensible. That's all I'm trying to say.\" \n\nCate was quiet all the way to the room. I hung up our coats and she just stared out the window at the lights along the river. I took her hand and walked her to the foot of the bed and nudged her to sit. \"I feel the same way about you. That was the explicit purpose of this trip, so you wouldn't go without getting to see your family at the holidays.\" \n\nCate tilted her chin up and looked me in the eyes. \"Thank you.\" She whispered. I knelt in front of her and her eyes went wide. I pulled her knees apart and scooted up to her.\n\n\"Do you understand Cate? I want that freedom for you too. If you want to come back this summer, then I'll call the travel agent and book it as soon as we get home. We can take golf lessons, visit the countryside.\" I grinned. \"See the fields full of sheep up close rather than through a window on a fast moving train.\" \n\n\"Sheep stink you know.\" She grinned back at me.\n\n\"They don't when they're cooked right.\" I said with a wink. \"When we get back to Dublin, take your mom out for the day. Hire a limo and do whatever you like with the knowledge that you can.\" I said. \"Go to a conservatory and listen to chamber music, go shopping, or go to a day spa, rob a bank if you want. Wait, skip that last one. I don't want to get on your fathers bad side.\" I laughed. Cate's expression changed from stunned to smiling, a tear ran down her cheek. ",
        "The irony of my position, kneeling in front of her was not lost on me, and by the expression on Cate's face it wasn't lost on her either. If I'd only followed my instincts when I was looking at those rings, I'd ask her right now. I decided what I was going to do when we got back to Dublin right then. Cate wrapped her arms around my head and hugged me to her breast.\n\n\"What did I do to deserve you? You know I'll be careful because I don't want to explain that my boyfriend is loaded and I'm spending it faster than he's making it. Give me a little credit for my own pride.\"\n\n\"I do! I love you so much that I want to lay it all at your feet Cate.\"\n\nShe murmured an 'I love you too' into my hair, and kissed the crown of my head. I lifted my eyes to hers, she took my face in her hands and kissed me so deeply I forgot to breathe.\n\nI took a deep breath and let it out slowly. \"You know, now would be a good...\" She kissed me again. If her intention was to keep me from finishing my statement, she knew how to do it, and how to do it well.\n\nCate leaned in, our foreheads touched. \"Dylan, would you make love to me?\" She asked softly.\n\nI thought about why she was asking rather than taking it upon herself to take us there without restraint, something well within her ability. \"Of course I will Cate, you never have to ask.\" I whispered back.\n\n\"It's just that...\" It was my turn to silence her with a kiss.\n\n\"No explanations are necessary.\"\n\nA smile began to creep across her face. She kissed me again. \"I'll freshen up and you'd best be naked when I get back.\"\n\nThere was no hurry, we had nowhere to be. The tempo of our lovemaking followed the slow pace of the night, our desire only deepened and we shunned sleep as long as we could, eventually falling to its grasp. I awoke some time later without opening my eyes. She was stroking me gently.\n\n\"Mmm, honestly? You're insatiable.\" I mumbled with a little laugh.\n\nI heard a faint giggle. \"Go back to sleep.\" She whispered and with a soft kiss on the lips, her hand disappeared. She nestled back against me and I wrapped her in my arms before falling off to sleep again. \n\nI felt a soft kiss on the back of my neck, then a moment later another, her lips traced down my shoulder giving way to a soft bite. I laughed. \"You're hungry? After the dinner we had last night?\"\n\n\"Well there was a fair amount of exercise afterwards.\" She said with a giggle. \"Come on, before the water cools.\" She hauled me upright despite my protests and attempt to drag her back to bed. She had drawn a bath for both of us and made me climb in first before nestling herself between my legs. I washed her back before I pulled her back against my chest.\n\n\"Oh this feels heavenly.\" She said rubbing her stomach with both hands. I slipped my hands beneath hers and began kneading the muscles beneath the skin. She stretched as much as she could in the confined space, she reached back over her head and encircled the back of mine pulling it forward enough so she could kiss my temple. \"I still don't know what I've done to make you treat me like a queen all the time.\" My hands slid upward and massaged her breasts which were slightly swollen, blue veins faintly visible through the alabaster skin.\n\nI kissed my way from her shoulder to her neck. \"Want me to stop?\" I said with a chuckle.\n\n\"Absolutely not.\" She said quickly. \"More tummy please.\"\n\nI chuckled as I made my way back down her torso, feeling the muscle beneath the skin ripple as I dug my fingers gently into her flesh. She let out a soft moan. She lifted her leg free of the water and set one then the other on top of mine, effectively parting them as much as possible in the narrow tub. I massaged my way lower, and lower still. She let out a soft gasp as I slid one hand even lower and continued my efforts to help her relax. She leaned slightly left giving me a little more freedom of movement and I used it. Her stomach muscled tightened beneath my fingers as her back arched away from me. I reached further still at the very end of ability and slid my fingers down, pressing into her and drawing them back like a bow across a violin's strings. Her breath escaped in a gasp as she shivered. I didn't let up, and never sped up my pace.\n\n\"How does it feel,\" I whispered, \"to be held at the point of falling without being allowed to let go?\" Back and forth slowly, circling as I exited and then back again.\n\nShe made a desperate moan, a clear demand for release. Another sharp moan escaped her lips. \"Please!\" She gasped, her hand gripped the edge of the tub, her knuckles white.\n\n\"Anything for you my love.\" I whispered into her ear and began increasing the pace, within moments her hips began to shake, her back arched as she let out several deep moans. Her legs stretched and relaxed atop mine as she collapsed back against my shoulder, her breath coming in ragged gasps. I let my fingers glide slowly on her slick skin before I resumed her belly massage. She did her best to get her breathing back under control as my hands ventured upwards and massaged her breasts again, giving attention to the taut pink nipples.\n\n\"Keep this up and we won't make check out time,\" she gasped, \"or the train.\"\n\n\"So? They have later trains.\" I said laughing and kissed her behind the ear. We lay there as her breathing came back to normal, and with a heavy sigh she slid off my lap into the base of the tub and stood. She opened the drain and turned on the water to warm it up before turning on the shower. \"What a lovely view from back here.\" She leaned forward hugging the wall and turned on the shower which hit me full in the chest with cold water before warming. I gasped and stood up as quickly as was safe. Cate straightened up and laughed as the now hot water cascade over her head. I reached down and gave her a swift swat on the backside causing her to let out a yelp. Once clean and dry, I was pushed out to go pack while she took over the bathroom. She came out in a flash of white cotton wrapped around her torso. She tossed the towel aside and took a moment to appreciate just how incredibly sexy she was.\n\n\"Stop!\" \n\nShe looked up at me wide eyed. \"What?\" She looked around. I stepped forward and took her in my arms and stroked her back gently as I kissed her deeply.\n\n\"I just wanted to look at you before you covered up.\" \n\nShe blushed deeply. \"I have no idea why.\" She said laughing.\n\n\"Because you're incredibly beautiful, that's why.\"\n\nShe melted against me her body cool in the morning air. After a moment a soft shiver ran over her skin. \"Okay, I don't want you to get a chill.\" I rubbed her back vigorously to warm her up. She dressed quickly.\n\n\"Is the cafe in the atrium okay with you?\" She asked tilting her head to put an earring in.\n\n\"That's fine with me.\" I said pulling my sweater on. I patted my stomach. \"I think I've gained weight on this trip.\"\n\n\"Me too.\" She said patting her backside. We packed up the rest of our things before going downstairs so we could make a hasty exit to catch the train.\n\nAn hour later we were boarding the train back to Dublin. Cate took the window seat though there wouldn't be a lot to see with the light fog that had enveloped the city. She sighed and closed her eyes, reclining her head.\n\n\"Tired?\"\n\n\"Yes, and wipe that smirk off your face.\" She responded without cracking an eyelid. A smirk suddenly appeared on her own. I leaned over and gave her a kiss on the cheek and her smirk broadened into a full smile. After the train left the city and we were at cruising speed I stepped back to the dining car to get coffee for us while Cate called her mother. I got back to our seats and she was still on the phone.\n\n\"Mum, you'll love him. No I know you think he's some scoundrel but he's not. He's a bit quiet, which given Shannon's ability to talk the ears off a spring hare is a good thing.\" She was quiet for a moment. \"Give him a chance. I'm sure you were wringing your hands about Dylan too and look how you much you like him.\"\n\nI pantomimed shock and pointed at myself, mouth hanging open. Cate smiled and waved me into my seat. I slid the coffee in front of her and set the plated pastry beside it. I chocolate laced croissant of some sort. Her eyes went wide and it was her turn to look shocked at me. \"Yes, he does have some tattoos but that's not the point. So does Da and you don't seem to mind his.\" She had been obviously interrupted. \"Mum, he's an engineer with a degree, not some lout skulking around the shipyard.\" Cate rolled her eyes. \"All I'm asking is that you give him a chance.\" Her voice softened. \"Mum, for Shannon's sake, please? You should see the way he looks at her.\" Cate turned her eyes towards me with a similar look. \"They're in love, it's obvious it's not just some fling.\"\n\nI nodded as I remembered the look on Mik's face when I first saw him at the pub a few nights ago.\n\n\"Even Dylan is nodding. Dylan's first words to me upon seeing him were, 'I recognize that look. I have it when I see you.'\" She paraphrased but told the truth. \"They've been together for months now.\" I saw Cate's eyes open wide as she stopped the next logical statement comparing them to us. We had only started going together about two months prior, but despite the short amount of time I knew that Cate was the one, and I honestly thought Cate felt the same about me. \"Well I told her she should bring him around for dinner some time. You could maybe extend an invitation by way of an olive branch that you're interested in meeting him too, and stop calling him a scoundrel.\" She added laughing. They made plans for the next day and said their goodbyes. She slipped her phone back into her bag and sighed.\n\nWe arrived in Dublin a few hours later to a cold and rainy gray day. \"I know the sun is up there, I just don't know what it has against Ireland.\" I said to Cate. She smiled.\n\n\"You wonder why we're so pale? The sun only shines a few months in the spring and summer.\"\n\n\"That cuts it, we're coming back in summer then. I'd like to see this place without carrying an umbrella all the time.\" I said with a laugh as we tumbled into a taxi. We got back to the apartment, cleaned up and took the car out to get something to eat for lunch.\n\nWe sat in the back of a pub and there was nobody at the next table. \"So is that an issue for us?\" I asked.\n\n\"Is what an issue for us?\" She looked confused.\n\n\"Our situation, your folks know that we're not living a celibate lifestyle.\" I said laughing.\n\n\"Oh that.\" She added with a quick eye roll. \"They gave up on me years ago. I know they hoped I'd be like Sinead and find a nice boring man with a decent job and lead a life of raising kids nearby but then I got the chance to study abroad. Once I'd gotten a taste of life away from home they knew I was a lost cause. I remember coming home from Spain that year in early summer and I was wearing this flashy bright dress and Mum and Da were bug eyed. It wasn't even that short, it was just bright.\" She smiled. \"A bit low cut too.\"\n\n\"I remember a dress like that. It was pale blue and green as I remember, and short.\" I wiggled my eyebrows at her.\n\n\"This one was yellow and orange, maybe a little red as well. It was lovely actually, not trashy or overly sexy. I think I might have sold it off in one of those consignment shops before I left. I knew I'd hardly have a chance to wear it again. They sent a reserved schoolgirl off to the Mediterranean and got back a wild child.\"\n\n\"Where did she go?\" I asked and got a shocked look in return. \"What? I don't believe you have anything in the closet that isn't black, dark blue or gray!\"\n\n\"It's the middle of winter, and I'd say our meeting and subsequent relationship are not exactly conservative reading.\"\n\n\"No it's been more like a romantic comedy.\" I said laughing and she joined me in full agreement.\n\n\"We've already had the initial meeting, the flirtatious repartee and the relationship threatening argument, then made up, the only thing left is...\" Cate halted without finishing. Her cheeks colored as her eyes widened. She pursed her lips and looked down at her empty plate.\n\nMy grin widened. \"What's that?\" I coaxed knowing full well she wouldn't go there without prodding. Cate swallowed visibly and took a deep breath. Her expression had changed and was very serious.\n\n\"The happy ending. That's what's left Dylan.\" She looked me straight in the eye daring me to flinch.\n\n\"I like happy endings.\" I said with a smile.\n\n\"Don't we all!\" Cate said laughing, when the tension was broken. We left the pub arm in arm on the way to the car. \"You know that happy endings only happen in the movies.\"\n\nI shook my head. \"So you're saying that nobody is happy?\"\n\n\"No I'm saying that happily ever after is a myth. Even though I was kissed by a prince I have better sense than to think that it's going to end up like a children's story.\"\n\nWe got to the car and I opened the door. \"Would you look at that, a car and not a pumpkin with a few mice tied to it.\" She rolled her eyes at me, and I returned the expression as she got in, causing us both to laugh. When we got back to the apartment Cate kissed me and I warned her that I could turn into a frog if she wasn't careful.\n\n\"So now I'm the wicked queen who puts a curse on the handsome prince? I don't think that's how it works, fairy tale curses aren't like light switches turning on and off.\"\n\n\"Sound logic, but just in case, keep kissing me just to make sure.\"\n\nWe got back to the apartment and relaxed. It had been a busy week and the truth be told I think we were both ready to go home and get back to our regular schedule. I hadn't traveled as much as Cate but we both agreed that one of the best things about travel is eventually going home.\n\n\"It's funny how there's a certain level of relaxation on a vacation, then there's the let it all hang out relaxation of being at home.\"\n\n\"The adventure is over and it's time to rest.\" I nodded.\n\n\"I mean I could find us things to do for a month, but some of them require more planning.\"\n\n\"We'll see about coming back this summer then. I was serious about wanting to see the countryside.\"\n\nCate smiled. \"I'd love that.\"\n\nWe spent the rest of the afternoon in various states of entanglement, at present Cate was laying outstretched on the sofa with her head on my lap. I twirled a lock of her hair between my fingers, straightening it out and letting it fall. She held my other hand tightly to her chest as it rose and fell steadily.\n\n\"What are you thinking about?\" She asked.\n\nI didn't answer right away, not because I had some secret but because I enjoyed sharing the silence with her. I tried to think of a way to not break the silence, but I felt it would be rude not to answer. \"You.\"\n\nHer neck arched slightly and her eyes lifted to gaze up at mine, her eyes like small pond reflecting the bluest sky looked up at me, her expression curious. \"What about me?\"\n\n\"How you beautiful you are. How lucky I was to meet you again. How incredible you are in every way.\" I said smiling. \"I was just remembering that day in your apartment, when you had that nasty cold. The misty look in your eyes when you said you weren't going to be able to come home for Christmas. What are you thinking about?\"\n\n\"How badly my neck is going to hurt if I don't get up soon.\" She said giggling. I reached beneath her shoulders and lifted her up, her head lolled back as she groaned. She got up, turned around and sat straddling me, her arms thrown over my shoulders. She kissed me with one of her breathtaking kisses. \"You're pretty wonderful yourself you know. I honestly don't know how in heaven's name you were single when we met.\"\n\nI sighed. \"Very lucky for me that you were too.\" I tilted upward and kissed her. She returned it with fervor.\n\n\"Mmm, so lucky.\" She exclaimed before kissing me again.\n\n\"Do you think your parents would like to go out to dinner with us before we leave on Saturday?\"\n\n\"They might, I'll ask them.\" Her smile was radiant in the fading light of the window behind me. My whole world was right here in front of me, nearly everything I'd never realized that I wanted, and I wanted it forever. I want to ask her now, I want her to know how much she means to me. \"You appear to have stopped breathing. Shall I continue to perform mouth to mouth resuscitation?\"\n\nA slow smile spread across my face. \"Yes please, but you'll just keep taking my breath away.\"\n\nShe let out a low groan as our lips met. \"You are marvelous for a girls ego. You know that don't you?\"\n\n\"You know what else I'm marvelous for?\"\n\n\"Show me.\" She mumbled as we kissed. I leaned forward and Cate grabbed me around the neck to keep from falling backward. I placed my hands under her denim clad backside and stood slowly, her legs wrapped around me as if they belonged there. After a kiss she slid down the front of my body setting her feet on the floor. She broke free and turned towards the bedroom tugging on my hand.\n\nShe began tearing at my clothing and I hers, at some point we made it into the bed, I don't remember how. Cate sat astride me, she peeled her lips from mine, her teeth pulling my lower lip. \"I could eat you up.\"\n\n\"Be my guest.\" I gasped. Cate just grinned, kissed my chin and began working her way down my body, she tugged my nipple with her teeth while looking me in the eye. I was panting like a race horse after a the quarter mile, she was being relentlessly slow. She kissed her way down my stomach and let out a giggle before rubbing her nose.\n\n\"Tickles.\" She turned her head and looked down. \"What have we here?\" She blew a puff of air at the tip of my cock and I twitched, ready as I've ever been to have her and quickly. \"Would you look at that, it's leaking.\" She teased and swiped the tip of it with her tongue which caused a deep groan. One of my hands was gripping a handful of the sheets, the other was on her backside and I gave it a quick but gentle swat.\n\n\"Tease!\" I panted.\n\n\"Have you ever seen someone blowing up a party balloon, and knew they were going well beyond the breaking point? That's how this looks right now.\" She said grasping my cock by the base and gave it a long slow lick. I blew out a sharp breath and arched my back as she proceeded to tilt her head and lick up the other side. \"I wonder if I put it in my mouth if it's going to explode in my face.\" She pondered aloud.\n\n\"I guarantee it.\" I said, my fingers tightened their grip on her backside. She patted my hand to get me to relax a bit. I relaxed my hand and rubbed her ass before letting my fingers wander deeper between her legs.\n\n\"Well then we'll just have to test your hypothesis.\" She licked her way up to the tip and took me into her mouth as deeply as she could and drew back slowly. She started a slow pace of up and down, her hand matching with a swirling up and down stroke. She scooted around and got between my legs and began massaging my balls as she bobbed up and down, not changing her pace. I pushed her hair out of her face and she looked up at me stopped and smiled. \"You alright up there? You're making some awful noises.\" She leaned down and continued licking the length of my shaft before taking it back in her mouth.\n\n\"I don't think I can hold off much more.\" I said gasping for air. She looked up again and made a little interrogative hum in her throat. She sped up, switching between licking my shaft while pumping more firmly with her hand and taking me to the back of her throat. I felt her other hand questing lower, massaging in tight circles. That was end of my control, I couldn't hold back and gasped out her name in warning. She took me as deeply as she could and began sucking hard, pulling her head up slowly as I came. Her hand stroked quickly draining everything I had to give her. She swallowed several times but it wasn't enough and I could see it dribble from the corners of her mouth. She chased down any that she missed and licked her lips, before smiling at me.",
        "\"Take the edge off did it?\" Her hand methodically stroked me keeping me hard.\n\n\"You are mere seconds from being thrown down on this mattress and being ravaged like a romance novel heroine.\" I tilted my head back and took deep gulps of air trying to catch my breath.\n\nShe only laughed and straddled me playing with my cock, stroking it on her very wet lips. \"What if I do that to you instead?\" She piled the pillows up and told me to slide back a bit into a reclining position and once again hovered over me playing with my cock against her lips. I took her by the back of the thighs and lifted gently, she directed my cock and rode it slowly down. She bit her lip as I sank into her and groaned softly. Her eyes opened to slits her hands took me by the back of the neck and she began to ride me like a carousel horse. Up and down, and she never broke eye contact, her hair covered part of her face but her eyes shone through the veil, burning into mine. She pulled my head closer and tossed the mane out of her face and buried her tongue in my mouth. My hands slid up and took her by the waist and kept up the rhythm, pulling her down hard each stroke. She tasted salty on my tongue and after a moment I realized that it was me that I tasted on her. I lowered my hand to where we met and began stroking her gently as she rose up and stroked downward. She gasped loudly into my mouth which renewed it's assault on mine. I slipped my hand from her waist up between us and cupped her breast, rubbing the nipple between thumb and forefinger, her downstrokes became harder, pressing down on my fingers as she rocked forward and up again. She stopped kissing me and began to moan, her pace quickened as she rode me hard. I leaned forward and took the other nipple into my mouth and grazed it with my teeth, giving it a tug, toying with it on my tongue. She moaned out long and low and drove herself down on me hard a few more times before she began shivering, her whole body convulsing. I pulled her to me and flexed my hips upward as far as I could as she gasped holding onto my neck for dear life. I held her in my arms as she vibrated slowly like the waning sound of a struck gong. She grabbed the hair at the back of my head and tilted it back and kissed me. \"I'm sorry Dylan,\" she gasped, \"I thought I could,\" I kissed her again, effectively silencing her. I lifted her gently, turned us and rolled her onto her back, she stretched her legs out with a groan of relief before I parted them and entered her again. \"I'm sorry.\" She looked concerned.\n\n\"Shh, you have nothing to be sorry for. Am I hurting you?\"\n\nShe shook her head. \"No, it's just my knees.\" She said sheepishly.\n\n\"If you want me to stop tell me.\"\n\n\"I never want you to stop. Throw me down and have your way with me.\" She smiled up at me as I rocked gently forward and she pulled my face down to hers. I couldn't take it any longer and needed release again and my fervor showed it. She broke free from my lips and tilted her head back in a long groan as I passed the point of control. Her legs had a solid grip of my torso her nails dug into my back. I reached beneath her, and took her shoulders and pulled her downward as I pushed forward deeper and harder. \"Yes!\" She gasped, and that was the end as my body stiffened in blissful release.\n\nI stirred a few minutes later, Cate pushed her fingers through my hair. \"I think that completes the cardio portion of our workout.\" She leaned forward and kissed me deeply, coming away with a huge grin on her face. I licked my lips a few times and swallowed trying to remedy my dry throat.\n\n\"I'm not sure I could handle another rep today.\" I said with a breathy laugh. She rolled against me and held me close.\n\nShe whispered in my ear. \"I know it might go against my head-strong feminist ideals but when you hold me down like that and, well it's the most erotic feeling I've ever experienced. Don't tell anyone will you?\" She leaned back a bit and kissed me again.\n\n\"Your secret is safe with me, and I hope to keep raising the bar.\"\n\nA few minutes of nuzzling and catching our collective breath. \"Cate?\"\n\n\"What?\" She whispered.\n\n\"You know, I mean you know this isn't what I love, I mean it's not the only thing I love.\" Her lips crushed mine.\n\n\"You're a very passionate lover Dylan, and I'm well aware it's just an expression of how you feel, not what you feel about me. Just the fact that you were concerned enough to bring it up proves the point.\" She said grinning.\n\n\"Good, and remind me I need to enroll in more English classes. I could never have expressed that as well as you just did.\" I said laughing.\n\n\"I need to enroll in a gym or something, I didn't realize just how athletic my sex life would become.\" Cate rolled her face into the pillow laughing.\n\n\"We aim to please.\"\n\n\"Your aim is extraordinary.\" She rolled me over onto my back and laid across my torso and kissed me again.\n\n\"I can't believe I'm saying this, but I'm getting hungry again.\"\n\n\"Well considering how long it's been since we had lunch I'm not surprised.\"\n\nI looked over at the clock in surprise to find that it was after 8. \"Wow, well that explains it.\" I laughed.\n\n\"Time flies when you're having fun.\" Cate giggled and buried her nose in my chest hair.\n\n\"That it does. What about you? You burned a lot of calories this afternoon.\" I ran my hand up and down her back stroking gently.\n\n\"I never want to get out of this bed, but I can't exactly let you starve, your family would miss you next holiday.\"\n\n\"Ouch, just my family?\" I felt injured at that.\n\nCate laughed. \"I'd miss you too.\" She gave me a quick smooch and rolled out of bed. \"Ooh!\" She flexed one leg then the other. \"Definitely need to do something about that.\" She added as she padded off to the bath. She came back a few minutes later, her hair pinned up on top of her head and gave me that come hither look of hers. She crooked her finger towards me and beckoned me to her and I hopped out of bed and stretched my legs too. Our shower wasn't quick but it was thorough.\n\nCate found a place a few blocks away that did Chinese take out this late and placed an order for delivery. I tried my hand at chopsticks to much hilarity for both of us. Despite her patient coaxing I gave up I was unable to master them and ended up using a fork. After dinner we curled up on the sofa and watched some tv, which was getting easier for me to understand, as I got more accustomed to the different accents and phrases. Cate was snuggled up beside me and before long I realized her breathing had gotten slow, I looked over and her eyes were closed, her face aglow in the light from the screen. Her lips were puckered and moving ever so gently as if she were kissing. She looked so beautiful, I wanted to lean down and complete the action for her but I didn't want to wake her from her dreams. I turned off the tv and gently turned myself so I could pick her up, she snuggled up and wrapped her arms around my neck without opening her eyes. I laid her gently on the bed and pulled the covers up over her. A bright reflection appeared as she cracked one eyelid open, a grin spread across her face.\n\n\"Faker.\" I said softly and bent and kissed her. She yawned as soon as I pulled away.\n\n\"Not really, I only woke when you set me down.\" She replied. She pulled the covers off and grinned pointing at her teeth and sidestepped me and went to the bath. I went and turned off the tv, and the lights and went and joined her at the sink. She stood there gently brushing, looking at me intently. The grin returning to the corners of her mouth.\n\n\"What?\" I began brushing my own teeth.\n\n\"Nothing.\" She said innocently before bursting into a fit of giggles as she rinsed her brush took a swallow of water and spat that too. It was my turn to give her the one raised eyebrow look. \"Sorry, I was just realizing just how lucky I am.\" She stopped my hand and on her tip toes kissed my forehead. She turned to leave the bathroom and said. \"Oh, and I was faking.\" She winked and ducked behind the door as I tossed the towel at her which bounced off the door. I finished up and climbed into bed, Cate had her back to me. I groaned as I lay back.\n\n\"Oh who's faking now.\" She rolled over and slid on top of me and gave me a kiss.\n\n\"I don't know, I might need a massage.\"\n\n\"Roll over.\" She said sitting up. I did as she asked and she pushed my shirt up and began digging her thumbs into my back rubbing in circles. I felt myself relax as her hands worked up my spine. She stopped and I could hear a rustle before I felt her lay down on my back, her skin warm against mine. She must have taken off her top as I felt her breasts press into me. Her hands rubbed gently up my sides and down my arms. She kissed the back of my neck.\n\n\"I love you so very much Dylan Butler.\" She whispered softly behind my ear.\n\n\"You know I've heard this can be even more enjoyable if we're face to face.\"\n\nShe exhaled an amused little snort, \"just a moment longer.\" She ran her hands down then back up my sides. A few minutes later she sighed deeply and slid off my back. I rolled over and took my tee off and tossed it on the floor where I assumed her pajama top had ended up and pulled her into my arms.\n\n\"You're cold!\" I said and dragged the covers over us.\n\n\" Please warm me up, Dylan.\" She said, her voice rang like warm honey. I kissed her again before pulling her against me and wrapping my arms around her. The little bumps of her spine nestled into the groove of my breastbone, her smooth skin slowly lost it's chill. My hand slowly massaged her stomach.\n\n\"Feel better?\"\n\nShe giggled in the dark. \"If I felt any better I'd burst.\" She took my hand and kissed the knuckles. I kissed my way from her shoulder to the back of her ear, the shiver that ran up her spine wasn't from the cold. She tried to cover a yawn and I chuckled.\n\n\"Go to sleep princess.\" I whispered.\n\n\"Only if you're here when I wake because I'll be seriously pissed off if this is just a dream.\" I felt her stomach flex beneath my hand as she laughed. I slid my hand between us and gave her a gentle pinch through the flannel pajama bottoms. She giggled again and swatted at my hand. I took a deep breath, inhaling the faint scent of shampoo, lavender I thought, as I let the breath out slowly consciousness went out with it.\n\nI woke up gently, the first thing I noticed was that I wasn't wrapped around Cate, and I opened my eyes to see her sitting cross legged on the bed in front of me with a silly grin, rolling a water glass between her hands, the remaining water sloshing back and forth. She'd pulled her flannel pajama top back on but hadn't bothered to button it, her breast peeked out in a most enticing manner.\n\n\"You would make for the worst international spy in history.\" Her smile broadened even more. \"All the opposition would have to do is to sic a pretty girl on you, once she bedded you, you would give up every secret in your sleep.\"\n\n\"Butler, Dylan Butler, at your service.\" I said, still groggy but smiling. She took a sip of her water, her breast slipped behind the fabric of the top, and came enticingly back into view. I took a peek higher and saw she was watching me as well. My own smile broadened. \"You do know how we men of mystery wake up in the morning, right?\"\n\n\"As someone who now has intimate knowledge of how a particular man of mystery wakes up, yes I'm very aware.\"\n\nI caught the notion that I may not have been her first, but I may be her first completely intimate relationship. I didn't want to ask her about it, I was happy with the answer. She reached over and set the glass on the nightstand, the other side of the flannel fell away showing the pale white skin of her chest, the pink nipple standing erect in the chilly air.\n\n\"That didn't help.\" I pointed at her open top and promptly reached for the ribbon holding the bottoms on and gave it a tug. Her shock was replaced by a sly expression.\n\n\"I guess that means you're up?\" She added a little stress to the last word of her question.\n\n\"I'm awake too.\" I said grinning. She rolled her shoulders and the top slid off onto the floor and she laid down and kicked off the bottoms before scooting under the covers again. She rolled towards me and reached down between us.\n\n\"What have we here? Slight problem though.\" She tugged the string tie at the front of my bottoms and began pushing at them. I saved her the trouble and divested myself of them. \"That's better, now we can get things well in hand.\" She said grinning as she did just that.\n\nNearly an hour later we were climbing into the shower as Cate went over what her and her mother might do today.\n\n\"What are you going to do with a whole day to yourself in this exotic far-away land?\" She teased.\n\n\"I don't know, maybe go down to the pub, have a few pints with the boys and make up lies.\" I said in a very bad accent.\n\n\"You'll do no such thing and you know it.\" She said grinning as the water cascaded over her head.\n\n\"I'll keep busy, I'm sure there's a museum or cathedral I missed, I can double-check in the city. Would you be a doll and drop me off at the station before going off to see your Mum?\" She answered by way of a long kiss. \"Remind me to ask you more questions if you're going to answer like that.\" Cate just grinned and handed me the washcloth and turned around so I could wash her back.\n\nThe driver behind us honked his car horn again. I guess we were taking too long to say goodbye. I couldn't help it, nothing tasted better than another of Cate's kisses. This morning they tasted of coffee and a dusting of powdered sugar and almonds from our hasty cafe breakfast. Cate hollered as I was closing the car door that she would call later when she'd made the plans for dinner with her parents. I waved as she pulled away and saw the annoyed driver behind us as they pulled forward and shrugged before turning towards the ticket machines. I looked at the map to see what station was closest to where I was going and went over to the platform to wait for the next train into the city center.\n\n\"Got the nerve up to ask her then?\" Daniel, the genial older jeweler asked as I looked over the selection of rings. I just chuckled and nodded. I reached into my pocket and pulled out a small tissue wrapped bundle.\n\n\"This is one of her favorite rings and I've seen her wear it on her ring finger a few times so I think it's the correct size.\" The small wire ring flashed silver in the bright light of the shop, he took the ring and placed it on a velvet square and reached to a shelf behind the counter with a long, tapered dowel with grooves. He slid the ring down the dowel until it stopped at a point between two numbers.\n\n\"See how the ring is made, with the harp loop and the heart loop? That means it has a little room to expand. If this is right we may want to go here,\" he pointed at the number above, \"to make sure we get a good fit, short of having her come by and do a proper sizing.\"\n\n\"We leave for home in New York on Saturday.\"\n\n\"Well let's see what you like and we'll see if I've got it in the proper sizing already.\"\n\nI told him which one I liked and he smiled. \"One of my favorites myself.\" He pulled the ring free of it's velvet holder in the case and took it out. I looked at it closely and wondered if I were doing the right thing. I looked up and the owner of the shop looked at me with a smile. \"I've seen that look many a time. You're questioning yourself, and you should. It's a big step for a young man, the setting up house and home, settling into life.\"\n\nI laughed. \"You are the worst salesman ever. You sound like you're trying to talk me out of it.\"\n\nHe joined me in the laugh. \"Oh no, it's just that I see a lot of young folks jump into things before they understand what's for, sometimes ever after isn't always happy. Are you ready for that?\"\n\n\"Well, we love one another, that I'm very certain of. We're both well employed so money wonn't be an issue. My family loves her, and I'm still not sure but I think her family likes me at least from our first meeting.\"\n\n\"She's Irish then? Has she gotten full and well angry with you yet?\"\n\nI smiled. \"Yes, but I won't go into details, but she laid out the rules of how it was going to be between us.\" I rubbed my chest where she'd poked me a few weeks ago and he noticed.\n\n\"And you her?\"\n\nI looked over his shoulder gazing into nothing. I nodded and replied softly. \"She came back after her walk and threw herself into my arms.\"\n\n\"You know there's a lovely wedding band wrap that goes with that ring. Let me show you.\" I chose the wrap and even my band while I was there. Since hers was a common size he had it in stock. He put the bands aside and wouldn't let me buy them at the same time.\n\n\"Let's make sure she says 'yes' first.\" He said chuckling.\n\n\"Truth be told I think I may have already asked her in my sleep one night. She told me she wouldn't tell me what I said until I said it while I was awake.\"\n\n\"Oh, ho!\" He started laughing loudly.\n\n\"Hopefully this is what I said or things are going to be a bit awkward.\" I said grinning.\n\n\"You don't strike me as the type of young man that made his decision lightly. If she's half the lady you've made her out to be, I think you'll like the answer.\" We did the business part of it and he gave me the receipt and a business card to let him know what her answer was. He added that part with a wink. We shook hands and I left, walking down the sidewalk and realizing it was lunch time by then. I wasn't hungry in the least, but anxious. The tension had built slowly once I'd gotten on the train earlier and I could feel it peaking. I took deliberate deep breaths as I walked, and could feel my heart beating against my ribcage. What if I was wrong and this isn't what she wanted? What if she said no? I might have misread the signs. What was I thinking asking her to marry me after only a few months? This was surely madness. Jimmy and Pam have been dating for a couple years, and only seriously for the past year. I've known Cate for less than half of a year. I'm out of my mind, she'll never go for this. \"Stop!\" I told myself firmly. I stopped in the middle of the sidewalk, closed my eyes and took a deep breath, letting it out slowly.\n\n\"Are you alright?\" A female voice said from a recessed doorway. I looked over and saw a woman bundled in a coat puffing a cloud of cigarette smoke out of the side of her mouth.\n\nI laughed. \"Yes, thanks. I'm having a bit of a panic attack. I'm about to ask my girlfriend to marry me.\"\n\nHer face lit up with a huge smile. \"Well then, I can't imagine her saying no. You look a fine catch. So long as you have a decent job and you're not some skirt chasing hound I can't imagine a reason she'd say no.\"\n\n\"Unfortunately I'm imagining too many different answers. That's my problem.\" I said shaking my head like a dog in an effort to clear my mind.\n\n\"Come round the front and I'll buy you a pint.\" She pointed towards the corner. I thought it odd then I looked up and realized it was a fairly large pub.\n\n\"I, uh.\"\n\nShe laughed. \"Relax, I tend to the bar and this is hardly the day to be making a pass at a handsome passerby after what you've just told me.\" She opened the jacket to flash a peek at the logo on her shirt which matched the one above. A pint might be the thing to calm my nerves I thought and nodded. I went around, entered the pub and sat at the bar where she emerged without her jacket, and rubbing her hands together to warm them back up. She reached for a short glass and poured off a stout setting it in front of me.\n\n\"I'll not be the one responsible for you being soused when you ask her so you only get a half pint.\" She said with a genial laugh. \"So tell me how you met since by your accent you're obviously not from Dublin. I'll be guessing you're both here on holiday or she's a Dubliner.\"\n\nI told her the story of the tea shop and meeting again at school. She held up a finger to pause me once or twice as she filled other orders but always came back to hear more, not giving a single comment or criticism until I finished.",
        "\"So you've met her Da and he seems to like you, Mum too. You're decently employed, she's a smart girl to say yes then.\"\n\n\"Well she's a smart girl, whether or not she says yes is the question.\" I sighed. She handed me a menu and suggested some lunch might help.\n\nLaura, as I eventually learned was her name, was very reassuring and kept coming back to me when she wasn't busy. I'd been playing on my phone between stops and flipped through a few pictures I had.\n\n\"Is that her?\" She peeked over at the screen. I nodded and turned my phone around. Her eyes went wide. \"That's Cate Murray.\" She said excitedly, her mouth split into a big grin. My own eyes went wide at her recognition. I just nodded dumbfounded for a moment as Laura covered her mouth. \"You're asking Killer Cate to marry you?\" She busted out laughing.\n\n\"Killer Cate?\" I was suddenly aware of how little I knew of my soon to be fiance. \"Why do you call her that?\" I thought it might be a good idea to find out now rather than later.\n\n\"If you'd seen her knee Neil O'Hara in the stones and nearly kill the poor boy you'd understand.\" She said laughing. \"We were in school together her and I, she was a quiet one, sort of surprised that Neil showed any interest in her since she was such a bookworm. Once he got into her...\" Laura stopped quickly and went beet red in embarrassment. \"Oh dear, I'm sorry.\" She covered her mouth and turned away.\n\n\"Don't worry, I've heard the story.\" I said chuckling.\n\nLaura was less animated but went on. \"She nearly made a eunuch of him that day. Had to see a doctor to make sure she hadn't done any permanent damage. Neil nearly went after here when he could stand straight, his mates reminded him about her Da, and he got smart and let her alone. So Cate's home then?\"\n\nI could easily picture her father putting the fear of God into a group of brash teenage boys. \"Were you friends?\" I asked tentatively due to the fact that Cate had never really mentioned any close friends from home.\n\n\"We weren't close, as I said, she was a quiet one. I'm not sure she'd even remember me.\"\n\n\"Let's find out.\" I switched to the camera app. \"May I?\" She tilted her head and nodded in consent. She turned and looked in the mirror behind the bar and checked her face and I smiled as she turned back around. \"Recording.\" I said.\n\n\"Hi Cate! Laura Donne here, it's been a long time since school, not sure if you remember me but your young chap here just showed me your picture on his phone and I recognized you instantly. You'll have to come round and say hello some time when you're back in Dublin! Bye!\" She added a little wave at the end, grinning broadly. She ran off to pour a few and collect tabs but came back saying she wanted to see the video to see how silly she looked. I let her see it, and a couple other pictures of Cate and I. \"She seems... more relaxed, more... well she looks happy.\" Laura said looking down at a picture of us atop the battlement of Blarney Castle. Cate was making a face, her tongue sticking out.\n\n\"What was she like in school?\" I asked hoping for a little more information.\n\nLaura just stared off into the distance and shook her head slowly. \"That's just it, she didn't stand out from a crowd back then.\" She nodded at my phone on the bar and added, \"She's a rare beauty now though. A wallflower to a white rose, you're a lucky man.\" She added the last with a wink.\n\n\"I know, she tells me that all the time.\"\n\nLaura laughed. \"Some flowers just bloom later than others, it doesn't make them any less radiant.\"\n\n\"Oh I'm going to remember that one.\" I said smiling.\n\nI walked. The sky was gray and threatened coming rain but I didn't stop. The anxiety began to creep into the recesses of my mind again and I began to do battle with them. I didn't understand why now it felt like I was unsure when I had been so absolutely positive about this, well up until I had the ring in pocket to be honest. This wasn't some far off future, it was now, and I had to gather back the strength of my suddenly wobbly conviction. I did my best to shine a bright light on each shadow as it reared up. I loved Cate like I have never loved anyone before, of that I had no doubt. The shadow dissipated in a warm glow which sat now in my chest. I knew she loved me, I'd had doubts but they've been vanquished like fairy tale dragons, and another shadow dissolved. I had no doubt that I would be able to keep us warm and safe, the money I had made was sitting in safe investments and though I knew better than to think it would last us forever, I had a multitude of plans to augment it, the first of which I would continue when we got back home and I got back to work.\n\nI'd been thinking so hard I missed my phone ringing at first and fumbled for it quickly. I caught the tail end of the ring and answered.\n\n\"Hi.\" Cate's voice was bubbly.\n\n\"How's your day going so far?\" I asked hearing the smile in her voice.\n\n\"Mani, pedi is done, we're headed down to see her hairdresser, who I'm told is fabulous.\" Cate said laughing.\n\n\"So the traditional girls day out.\"\n\n\"Mum says that tonight isn't good, Da has a meeting after work. Would it be okay to do it tomorrow? I told her you'd be fine with that, but I wanted to be sure.\"\n\n\"You were right, I'm totally fine with that.\"\n\n\"She said there's a place over in Malahide that she's been wanting to try and I told her that would be perfect. It sounds like a nice place, probably seafood since that's near the water.\"\n\n\"That sounds terrific to me.\"\n\n\"She's invited us over tonight though since Da will be late, she'd love to spend some more time with both of us.\"\n\n\"Great, should I just come there or will you come back to pick me up?\"\n\n\"I'll come get you around four. How does that sound?\"\n\n\"Perfect. I'll head back to the apartment in time to meet you.\" There was an awkward pause.\n\n\"What are you up to?\" Cate asked suddenly inquisitive.\n\n\"Nothing much, just a little shopping. I thought I'd stop by the Guinness store for a couple souvenirs, get a golf shirt for my dad.\"\n\n\"Good idea.\" She said, the curiosity seemed to have been satisfied. \"There's a shop in the city that sells some nice woolen goods if you're thinking of your mum, maybe a lambswool scarf or something like that.\" She told me the name of it and where it was. I said I'd look for it. Her mother must have looked at her bored for talking so long on the phone. \"I'll see you later.\"\n\n\"I love you.\"\n\n\"I love you too Dylan. Bye.\" Her voice was smooth like liquid gold as she said the words. That was the last light needed to banish the shadows in my mind. It would be tonight. I'd like her parents to know before we left. The anxiety from my morning activities fled as I found renewed purpose in covering my tracks I made my way back north of the river to do as I'd said and pick up a few items for the family back home. I made my way to the nearest station to get back to the apartment ahead of Cate. I was putting the items I'd bought in my suitcase to take home with us when Cate came in.\n\n\"Hello love.\" She said giving me a kiss. I turned to face her and notice her hair was slightly different.\n\n\"You got it cut.\" I said smiling. Her hair was a glossy dark brown, with a casual fly-away look which I'm sure was painfully executed by someone over time to look like it was natural.\n\n\"Just the ends trimmed a bit. I don't think I'd be cut out for short hair, at least not in the winter.\" She made a little shivering motion before she ran her fingers through her hair. \"I loved the shampoo, bought a bottle myself. What have you been up to?\" She peeked over my shoulder into the suitcase.\n\n\"Oh the usual, golf shirts for dad and Jim, a pair of silver Irish knot earrings for Pam, I didn't get a chance to find that woolens shop you mentioned though. I figured I'd pick up a bottle of that whiskey your father recommended at the duty free shop on Saturday.\"\n\n\"You may not want to wait until then, you can't bring it on with your carry on bag.\" She reminded me. There was a pregnant pause. \"Are you alright? You look a little, off.\"\n\n\"No I'm fine.\" I said smiling. She looked at me oddly for a moment. I wanted to drop to one knee and ask right now, my anxiety was mounting like an incoming tide. \"When then? You're just putting it off and for no good reason.\" I thought. She reached out and brushed my shoulder and put her hand over my heart.\n\n\"Mum asked me to stop for some bread on the way back. She's making coddle, a healthy version, she insists.\" Cate said smiling. She turned to get her coat off the hook.\n\n\"Cate?\" I said quickly.\n\n\"Hm?\" She turned and looked over her shoulder at me, and seeing my face, her eyes widened and she turned back to me. \"What is it Dylan? You've gone as pale as me.\" She stepped back towards me and I took her in my arms.\n\nI let out a deep sigh. \"I have something very important to ask you.\" I bit my lip and she looked at me inquisitively. I chuckled nervously. \"I've never been happier in my life, and honestly I wonder if I could even top this, but I'd like to try, and the only way I picture that happening is to be with you, always.\" Her eyes went wide. \"Catelyn Murray, will you marry me?\" I asked, swallowing a big knot that had somehow managed to build in my throat. \"Before you answer, I need to tell you that I wasn't asleep Christmas night. You said then that you would have said yes. I would be honored to know that the answer is still the same.\"\n\nShe stood there speechless, the only change was a wet trickle slipping down her cheek. She blinked furiously and leapt at me, her lips crushed mine as her arms nearly strangled me. She melted against me and I held her tight. The wetness on my cheek may not have been from her. She sniffled, pulling back just far enough to breathe deeply before kissing me again. \"If this is no, then you're really bad at this.\" I finally got a chance to say.\n\n\"Yes! Yes, yes, yes!\" She kissed me between each response to drive the point home.\n\n\"I hope that's what I said in my sleep the other night or I'm going to agonize over that now.\" I said chuckling.\n\n\"It was, among other things. When I told you it was easier to speak to you when you were asleep. It was because I'd already said yes.\" She kissed me again, tears streaking down both cheeks. Her smile was absolutely brilliant. She leaned back a bit and put her hands to her cheeks, the smile not leaving as she brushed away the tears.\n\n\"Oh!\" I reached down into my pocket and pulled out the little box. \"I assure you it's not earrings this time.\" Her mouth dropped open in surprise. \"If it's not the style you'd like we can stop in tomorrow and see what...\" Her lips hit mine before I could finish.\n\n\"You know I kind of like this method we've developed of keeping the other from saying something foolish.\" She said, short of breath. \"Dylan, if you chose it, then it's the only one.\" I stepped back and knelt on one knee and opened the box. Her eyes went round. \"It's beautiful.\" Her smile quivered as more tears streaked down her face. She burst out laughing.\n\n\"What?\" I said turning the box and seeing her little harp and heart ring tucked in behind the Claddagh ring.\n\n\"Well that explains why I couldn't find that this morning.\" She said as a little hiccup laugh escaped.\n\nI grinned. \"Let's see if the fit is right.\" I slid the ring free of the satin, she held out her hand and I checked the way it was pointing before slipping it onto her finger, with a slight resistance it slipped into place. She flexed her fingers and laid her hand flat, the diamond heart flashed brilliantly, the little sapphire accents on the wrists and crown of the ring winked in the light. \"I thought about getting the emerald accents for your love of home, but all I could see when I looked at them was the blue of your eyes.\" She reached beneath my arm and dragged me upright with strength I hadn't expected before launching herself at me again.\n\n\"We'd better get going or your mom's going to wonder where we are.\"\n\nShock showed on her face again. \"What am I going to say to my parents?\"\n\nI laughed. \"Well you could start with, 'Mum, Da, Dylan and I are engaged to be married' that's just a suggestion of course.\" Cate rolled her eyes at me. \"Then you go for the big guns, give your father those big puppy eyes and ask him if he'll give you away, at which time if he's not tearing up then we make a break for the airport and hopefully make a clean getaway.\"\n\nCate slipped out of my arms and went to the bathroom to wash her face and as she put it, 'repair the damage'. When she returned I was holding her coat. I held it open as she slipped into it. She took a moment to look at her hand again and kissed me again before zipping it up. I had to remind her to stop for bread which caused us both to laugh. We got to her folks and her mother spotted the ring like it was a beacon. A multitude of high pitched exclamations and hugs later she got a concerned look on her face.\n\n\"It's not too soon? You've only met a few months ago.\" This directed at Cate. There was no aversion to me in her voice, it came off more as parental concern.\n\n\"No Mum. I just know this is right, trust me.\" She looked at me with the warmest of smiles.\n\n\"I mean no disrespect to you Dylan.\" Her mother said to me. \"It's just that you're so young, the both of you.\"\n\n\"Mum, you were twenty-two when you and Da got married, this isn't any different. I mean, you knew he was the one, right?\"\n\n\"Yes, I did.\" She replied with a resigned smile.\n\n\"There you go then!\" Cate said with a big grin. \"Let's eat and you can continue to doubt me over dinner.\" We had dinner, and I could see tension building in her mothers questions. Where will we marry. Where would we live. Had we thought about children, among other things. Cate responded to them all as they came up.\n\n\"Is your father going to want to break out the guns now?\" I said under my breath while clearing the plates. Cate just smirked and let out a chuckle. She shooed her mother away as we washed the dishes.\n\n\"Don't worry, I think he'll be more practical. He knows where we live and knows better than to foist the burden of children on us the day we announce our engagement.\" She leaned over and gave me a kiss as I washed a plate off in the sink. \"Besides, I want you all to myself for a while. I think the toughest part will be Mum keeping quiet about it until tomorrow. She'll be bursting at the seems to tell him.\"\n\n\"Do you think he'll notice on his own?\"\n\n\"He'll figure something is going on, it may take him a moment but he'll catch on. He's been a policeman a long time, they're trained to look for clues.\" She said holding her hand out in front of her with a laugh. We sat with her mother for a little while after dinner before eventually leaving for the night with the promise of seeing her the next day for dinner where we would break the news officially. \n\nWhen we got back to the apartment, I watched her carefully take off her coat, sliding the sleeve over her hand carefully so as not to snag her ring. I did my best to hide my smile.\n\n\"What? I don't want to get a snag.\"\n\n\"Is it too big?\"\n\n\"No! It's just that it may come as a surprise to you but I've never worn an engagement ring before.\"\n\n\"It's the only one you'll ever wear.\" I said kissing her.\n\n\"I wouldn't have said yes if I had plans to the contrary.\" Cate fiddled with the hair behind my ear. \"You're getting a bit scruffy.\"\n\n\"Should I get it cut?\"\n\nCate grinned and shook her head slowly. \"I like having a good grip for this.\" She firmed her grip and pulled me to her again.\n\nI took gulps of air, trying to catch my breath. \"I like it short in the summer. Would that be okay?\"\n\n\"I remember. Don't think for a moment I wasn't checking you out as well.\"\n\n\"I remember. When I looked back and those vivid blue eyes were watching my every move. Do you know I had to walk three blocks back because I'd forgotten take my car? I was so taken with you I'd started to walk home.\"\n\nA breathy laugh escaped her lips. \"You never told me.\"\n\n\"You left me completely unhinged.\"\n\n\"Yet you never made the effort to come back and ask for my number, odd.\"\n\n\"I'd say things worked out just the same.\" I lifted her left hand to my lips and gently grazed the knuckles with my lips.\n\nCate's eyebrows rose at that. \"Yes I'd say they've worked out incredibly well for both of us.\" She pulled me to the sofa and kicked off her shoes, she tucked her legs up underneath her. \"When did you have in mind?\"\n\nI just smiled. \"So it begins. Whenever, we can go hit a Justice of the Peace on Monday at the courthouse if you like.\" The slightly shocked expression on her face was priceless and I couldn't keep from laughing. \"I'm teasing. I would like to wait until after Pam and Jimmy's wedding if you don't mind. I don't want to steal their thunder. As for the where, I've been thinking about that too. In all honesty my side of the family will be fairly small. I was wondering if you'd like to do it here in Ireland.\" I saw her lip quiver. \"It would give my folks the perfect reason to extend it into a vacation.\" Cate's mouth quirked.\n\n\"If you'd like to have it back home we'll make sure everybody that can come does.\" Cate didn't say a word but scrambled up onto my lap facing me and hugged me as tightly as she could.\n\nWhen she spoke her voice low and rough. \"Just how long have you been planning this?\" She leaned back with tears in her eyes.\n\n\"End of July, last year.\" I said smiling.\n\n\"You were that sure of yourself that far back?\" She said brushing the tears away from her broadening smile.\n\n\"Guys dream too you know.\"\n\n\"Where do we honeymoon?\"\n\n\"That's a tough one. At first I pictured somewhere tropical, you topless on the beach basting yourself with sunscreen like a Thanksgiving turkey. Ow!\" I rubbed the spot she'd half-heartedly punched me. \"I also pictured us hiking a trail in the Canadian Rockies, lodging with the beavers and moose, maybe Mexico or Hawaii, Greece looks nice too.\" I shrugged. \"The only thing I care about is that I'll be with you.\" A fresh tear rolled down her face.\n\n\"The other option would be just to drive over to Niagara Falls since we live right near there.\"\n\nI rolled my eyes. \"Even on our honeymoon you want to go the budget route.\"\n\nShe leaned forward, her forehead touching mine, her voice soft as a whisper. \"Where we are won't matter, as long as I'm with you.\"\n\nI turned her and laid her out on the couch. \"I love you Mrs. Doctor, Professor Catelyn Murray.\"\n\nShe giggled and kissed my nose. \"Not Butler?\"\n\nI shrugged. \"You've worked hard to get where you are professionally and all in your own name, I just assumed you'd want to keep it. My name is yours if you want it, Mrs. Butler, or Murray-Butler.\"\n\nCate just smiled and shook her head slowly. \"You have the answers before I can think of the questions.\"\n\n\"I told you, I've been planning this since July.\" I winked and kissed her.\n\n\"I think you should put me to bed, I appear to be tired.\" Cate attempted a fake yawn which turned into the real thing which then caused us both to laugh. I did just that, pulling her up from the couch until she stood in front of me. I took her by the shoulders and turned her towards the bath.\n\n\"Brush your teeth and I'll tell you a bedtime story.\"\n\n\"I can't wait.\" She said over her shoulder to me.\n\nI put her to sleep with a highly fictionalized account of our meeting, a dashing prince and stunning princess, how he vanquishes her flu with chicken soup and tea, and swooped down on her enemies, before whisking her off to a foreign land to ask the king for her hand in marriage, complete with a happily ever after finish.\n\nWe boarded the early morning flight and I stowed our carry on bags in the overhead compartment. Cate sat at the window and looked out at the vehicles on the tarmac racing to and fro. Dinner with her parents hadn't gone as well as we'd hoped. The disapproval came off her father in waves. Aware of the fact we were in public he kept his voice down, but stern as he began listing off his reasons. We didn't know each other well enough, I was still in school and didn't have a career yet. Cate was still in limbo as to whether or not she would have an offer to become a tenured professor. Each item he listed we did our best to respond rationally to, up to and including my financial status. Her father looked abashed at me for a moment, then looked at Cate, the need for his approval apparent on her face.",
        "\"So that's it then?\" Her father said to her sharply.\n\nCate looked at him confounded. \"Is that what you really think of me?\" The heartbreak was obvious. Even her mother gripped his arm but didn't say anything.\n\n\"Well there has to be some reason you feel it necessary to go through with this after only a few months. Are you pregnant then?\" Her expression went from dismay to shock to anger.\n\n\"I am not!\" Her eyes had gone vivid blue and were nearly bugging out of her head. She ticked off her points as she made them. \"We are both adults. We love each other immensely. We've become best friends and have made a pact that no matter what happens, that we will remain so. We are financially stable, and we're committed to making our marriage work.\" I silently nodded as she made every point. I glanced aside at Cate, her jaw set, and her gaze unflinching as her father took a deep breath.\n\nHe looked at me. \"When I asked you what your designs were on my daughter, you could have warned me then.\"\n\n\"I asked you to trust me that day.\"\n\n\"Aye, and I told you to bide your time. That was less than a week ago.\"\n\n\"Biding my time wouldn't have made me love her any more than I do right now. I can't imagine a situation where waiting would have changed anything.\"\n\n\"That's the problem. You can't picture anything being a problem, yet they'll be there as sure as the nose on your face.\"\n\n\"Remember what else you told me? Cate's like you, smart, stubborn and well worth the wait. The only thing don't agree with is the waiting. She's asking for your blessing. If you can't give it to her, then it's you who's being stubborn.\" I began to raise my hand to signal the waiter to prepare our check before we'd even ordered dinner. I couldn't see the point of putting Cate through any more of this.\n\n\"David.\" Cate's mother finally spoke up. \"She's made up her mind and you'll not change it I'm afraid. She's as stubborn as you are, and besides, I'm sure they're making the right choice for themselves.\"\n\nThe waiter arrived to a very tense table. \"Are you ready to order?\"\n\nDavid looked up at him and nodded and with a guarded sigh. \"Have you got a bottle of Champagne to celebrate my daughter's engagement?\" \n\nThe waiter smiled and nodded stating that they did. Cate let out her breath slowly, along with that the tension at the table appeared to recede. We finished dinner, and I noticed that Cate didn't finish her meal and she passed on dessert. I could feel the hurt and disappointment coming from her. In the parking area we said our goodbyes to her parents. Her father motioned me aside.\n\n\"You understand that I'm not upset with you I hope. It's just that I want the world for her, and I'm afraid she's making a short-sighted decision.\"\n\nI looked him in the eye, and nodded slightly. \"I know. I hope you understand that I want nothing less for her and will do everything in my power to make that a reality.\"\n\nHe nodded and held out his hand. I took it firmly and gave it a shake. I was surprised when he pulled me towards him and gave me a quick hug as well. \"Welcome to the family then.\" His expression had lightened considerably as Cate walked towards us. \"Cat,\" he took hold of her and hugged her tightly, \"I'm sorry, it's just so sudden and I worry for you over there in America.\"\n\n\"I know. I can't have made it easy on you traipsing all over the place making you worry, but trust me on this. He's a wonderful man and I love him dearly. He says he wants to make me the happiest woman in the world, and I'm going to give him the chance.\" She said smiling through her tears.\n\nCate didn't talk much the rest of the evening and rather than try to talk her through it I just held her when she wanted me to, and let her be when she wanted a moment to think. She'd kissed me and said she was going to bed. I followed a few minutes later to find her curled up around my pillow crying. I crawled into bed and took her in my arms and spoke to her softly, trying to reassure her that he'd get to know me over time and he'd see that I was as good as my word to take care of her.\n\nShe sniffled. \"My own father as much as called me a whore tonight Dylan. That wasn't about you.\"\n\n\"He didn't say that Cate! He's worried about you.\"\n\n\"First he asks if I'm marrying you for your money, then he asks if I'm pregnant? What do you think he was implying?\" She said, her voice shook.\n\n\"Cate, he loves you very much and he's worried you're making a mistake. Unfortunately he's really bad at telling you that.\"\n\n\"No shit.\"\n\n\"You still have me.\" I said hoping to lighten her mood.\n\nThere was a long pause. \"I hope so, you're all I have left.\"\n\n\"Whoa!\" I rolled her onto her back and reached for the lamp.\n\n\"You have not lost your family over this. He's concerned, and he's lousy at verbalizing it, he has NOT disowned you in any way, and if he has then I'm sure he's completely alone on that front, your mother and sisters won't side with him, I'm sure of that.\"\n\nShe looked up into my eyes and caressed my cheek. \"Let's get some sleep. We have an early morning.\" She tilted her head towards the lamp and I turned it back off. She rolled back onto her side and I slipped in behind her, set on the idea that she was not going to feel alone if I could help it.\n\nWe'd woken up early to get ready for our flight. Cate moved around in efficient silence. I gathered our things by the door. Cate's phone rang, shocking us both out of our silence. She looked at the number on the screen and answered it.\n\n\"Hello?\" The side long look she gave me didn't leave any question as to the number. \"Hi Mum.\" I looked at her and pointed over my shoulder to the other room. She gave me a wan smile and I went into the other room, closing the door behind me as I did. I puttered about, straightened up and eventually sat down and played on my phone looking at flight times to see if we could bump to a later time if necessary.\n\nFifteen minutes had passed and I was worried we might not make the flight when the bedroom door opened and Cate was carrying her bag out to set it with the others. Her face was flushed, her eyes a little red but she didn't say anything when I asked if she was alright, she just walked up to me and hugged me so hard I thought she'd crack a rib. I didn't press her. She made one last pass through the apartment while I brought the bags down to the car.\n\nWe didn't have enough time for breakfast so we agreed to just get coffee and something quick at the airport. Once we were on the motorway she reached over and took my hand and set it on her lap, holding it tightly. We dropped off the car and wheeled our luggage to the international departures terminal. Cate was still quiet, giving over ticket and passport when prompted. The agent at the counter giving me a quick look of concern, I just gave her a smile back as we collected our board passes.\n\nShe looked up at me from her seat with a bright smile. I was surprised at her change and I guess my face showed it. She patted my seat and once I'd closed up the bin above I joined her.\n\n\"I'm sorry I've been a dour old bag all morning.\" She leaned over and kissed me, I intercepted it since I didn't want it on the cheek.\n\n\"You haven't been, only quiet, and I'm sure you have your reasons.\"\n\nShe chuckled at that. \"Well if you'd asked me before dinner last night I'd have said this trip couldn't have been any better. The weather not withstanding.\"\n\n\"Wait until you get home. I just looked at it before we got on board and it's twelve degrees, and no, that's not Celsius.\" Her eyes went wide and she shivered.\n\nShe looked back out the window and sighed. \"Mum told me their dirty little secret, then handed the phone to my dad.\" She turned back to me and with a little smirk on her face recounted the tale. It seems that her parents fiddled with the date of their marriage without telling their kids. Her mother was just pregnant with Sinead when they got married. So the accusation stung not only Cate but her mother as well. She wouldn't let him be a hypocrite to Cate like that, and had told her father that he'd better call her and apologize or things would be getting lonely as her mother threatened to move out until he fixed things.\n\n\"I told him that I didn't want him to be sorry because Mum threatened him, I wanted him to be sorry because of what he said to me.\"\n\nI was proud of her having stood up for herself.\n\n\"He said he was, that he was ashamed for what he'd said because he knows me better than that. He also said that he knows that you'll take as good care of me as he has, and asked me to tell you that he's sorry for ruining our announcement like he did. He would like to get the chance to apologize in person.\"\n\n\"Spring break is coming in a few months, or if they'd like to come here we can get them tickets.\"\n\n\"He also said he would be very honored to give me away at our wedding.\" She leaned in and gave my arm a hug. \"Which should be here in Ireland since he gets airsick when flying.\" She giggled.\n\n\"I guess we're coming back on spring break then.\" I said before kissing the top of her head. The door of the plane was closed and preparations to take off began as I sat back and smiled."
    ],
    "authorname": "Member389",
    "tags": [
        "student",
        "teacher",
        "ireland",
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/kiss-me-cate-pt-08"
}