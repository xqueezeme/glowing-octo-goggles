{
    "title": "Beyond the Borderline Bk. 02",
    "pages": [
        "May not be reposted in whole or in part without express written consent of author. All rights reserved. Reproduction for profit is strictly prohibited. Posted exclusively on Literotica.\n\nAll characters having sex together are over 18 years of age.\n\nAlthough drawn from my own experiences, this is a work of fiction. If you are offended by stories of incest between mothers and sons, you should skip this submission.\n\nThis is the continuation of \"Beyond the Borderline, Book 1,\" which should be read prior to this segment.\n\nThanks to LaRascasse for editorial assistance.\n\nBOOK TWO\n\nMy heart was ready to explode and Mom looked like she was about to faint. I squeezed her hand reassuringly and got out of the car, shaking hands with Sam and the ADA. I helped Mom out of the car and we all walked into the house. I don't quite understand how I was holding things together, but I think it was because I could sense how close Mom was to losing it. I had to be there for her, so I sucked it up and did what I needed to do.\n\nI went to the kitchen and got glasses of water for everyone. Sitting in the living room, I waited for Mr. Marquand to begin, certain my beautiful, perfect world was about to end. I was devastated, but determined not to give anyone the satisfaction of a reaction.\n\nClearing his throat, Mr. Marquand began. \n\n\"I'm here as a matter of professional courtesy,\" he stated brusquely. \"At the moment, this conversation is off the record. I will tell you frankly that if I had my way, we'd be downtown in an interrogation room right this minute. I'm meeting with you here, now, as a personal favor to Mr. Schiller. \n\n\"But make no mistake,\" he warned, \"If the answers I get from you today are not satisfactory, if I think you're holding out or evading me in any way, we WILL be taking that trip downtown immediately.\"\n\nPausing, the ADA looked at Mom intently and spoke again. \" The District Attorney and the DEA are curious as to how you are acquainted with one Anton Dobriynin, otherwise known as 'Vanya.' You were seen during a surveillance operation of his place of business. You should know that Dobriynin is a known gangster, active in money laundering, drug running and human trafficking.\"\n\nIt took a moment for those words to register. DEA? What the fuck...? If the DEA was involved, then this had nothing to do with Mom and me. That meant that we were okay. We were okay! Hot damn, we were OKAY! I wanted to turn handsprings. I wanted to kiss Mom right in front of Sam and Mr.Marquand. I felt alive again for the first time in days.\n\nThe significance of the ADA's question wasn't lost on Mom either. She allowed herself a small smile and then relaxed, leaning back into her chair.\n\n\"A few weeks ago,\" she began with a deep breath, \"I was contacted by a certain Mr. Washington, a potential new client for our firm. The services he required from us were potentially very lucrative for the firm, perhaps has much as 700 billable hours a year, probably around a quarter million dollars, annually. Naturally, I was interested, but there was something about the questions this man asked, something about how he conducted himself, that made me a bit nervous. I immediately discussed the situation with our senior partner and he agreed that before we took on Mr. Washington's business, that we should do some checking for our own protection.\"\n\n\"After that, I contracted Mr. Schiller's services to do some checking on our potential client. I contacted Mr. Washington and told him that we were willing to consider him, but that our usual policy was to discuss large, new contracts at the board level prior to formal acceptance. I told him that we would be doing so within the next few weeks and he seemed satisfied with that assurance.\"\n\n\"Subsequently, Sam was able to determine that there were...irregularities in Mr. Washington's background. Through Sam's contacts, we got information that the person we were interacting with was probably using an alias. We were doing the last bit of fact checking when Sam took us to Brighton Beach. He's the one who stumbled onto your presence there.\"\n\n\"Why was your son with you?\" ADA Marquand asked pointedly. \"He has no connection to any of this.\"\n\n\"It's true,\" I interrupted, \"But I do know a bit about what's going on. How could I not, with Mom meeting with Sam several times at home? I wanted to be there to protect Mom. Sam wasn't happy about that, but I made him take me, against his better judgment. That's all on me. Knowing what I do now, I guess neither Mom or me had any business being there.\"\n\n\"I have a reputation for being thorough, Mr. Marquand,\" Mom added. \"In retrospect, I probably had enough information to drop 'Mr. Washington' before then. Getting that last bit of intelligence was probably not a good idea. I hope we didn't compromise anything you're doing,\" she said contritely.\n\n\"Well,\" Mr. Marquand said heavily, \"Nothing substantive, except about a hundred man-hours of extra investigative time checking you guys out, which I can't get back. Your appearance was unexpected and perplexing, but what you are saying jibes with what Sam has told us, along with the files Mr. Briggs turned over to us. My advice to you is to stay on your side of the street in the future, Ms. Lindermann. Corporate and criminal law are not things that someone in your position should try and mix. Once you were reasonably certain that 'Mr. Washington' was a dodgy character, you should have given us a head's up.\"\n\n\"I think it's safe to say I've learned my lesson,\" Mom smiled. \"I don't plan on troubling you any further.\"\n\nMr. Marquand shook our hands briskly and departed, with Sam staying behind, explaining, \"My car's around the corner.\"\n\nSitting heavily in our La-Z-Boy, Sam regarded us seriously.\n\n\"This is partly my fault. I should have done things differently, insulated both of you more from the process. Anyway,\" he concluded, \"It's all behind us now.\"\n\nReaching into his jacket pocket, he produced two Canadian IDs. \"I was able to get these done by a different route. They aren't as perfect as what I had originally planned, but they should pass muster,\" he concluded, handing them over.\n\nMy nom de deception was one Richard Lewis, of Selkirk, Manitoba, while Mom was Regina Worthington, from Saskatoon, Saskatchewan. \n\n\"I still don't know what your game is,\" Sam said quietly, \"But I have an idea. I'm not sure I approve, but it's really none of my business. I'm not here to pass moral judgments. You're both good folks and entitled to your privacy, so we'll leave it at that and I'll say good bye.\"\n\nWith that, he rose and let himself out, slipping quietly out of our living room and lives, an enigmatic and inscrutable man to the last. We never heard from him again.\n\nMom and I simply sat on the sofa, numbed by the turn of events. I'm not sure how long we sat there in silence, perhaps a half hour. We were both exhausted at that point and good for absolutely nothing. Eventually we made it upstairs and into bed, just holding each other. Mom shivered in my arms for over an hour before she finally fell asleep and I wasn't much better off.\n\nAround five in the morning, we both woke up and made love until sunrise. It was simple, joyous and cathartic, leaving us pleasantly drained but rejuvenated and finally purged of the toxic events of the past weeks.\n\n***\n\nMom was subsequently able to back check our new IDs in her own fashion and pronounced them sound. Then we applied for my passport. Mom felt that she was unlikely to ever need her ID and simply put it away for safekeeping.\n\nThe day I finally got my passport, we heaved a huge, collective sigh of relief. To celebrate, we went out for dinner and dancing that evening, returning to the supper club where I took Mom for our first \"date.\" Mom again wore her red sequined evening dress, while I was attired in slacks, tie and a blazer. As she descended the stairs to the living room, I let out a wolf whistle. \"Mom, I can't get over how good that dress looks on you! I love everything about it and what's inside it.\"\n\nSmiling wickedly, Mom slowly pirouetted in front of me. Abruptly, she bent slightly at the waist, thrusting her bottom towards me at the same time. She pulled the hem of her dress up to expose her silky red boy shorts and warbled, \"Boo-boop-de-doop,\" in a high squeaky voice, doing her best Betty Boop imitation.\n\nGliding up to me, Mom stepped into my embrace, sliding her arms up my back and around my shoulders, rubbing her breasts against my chest. Tilting her head up, she gave me a lingering kiss to still my laughter, tongue dancing against mine as I responded in turn. \"Mmmmm, thanks Ricky. I always like to look my best for you.\"\n\n\"Mom, if you wore a burlap sack and Depends, you'd still be the most gorgeous, sexy woman in the world.\" I dropped my hands to her ass giving each cheek a good, thorough groping. Reaching up under the hem of her dress, I stroked the crevice between her marvelous cheeks and slid my middle finger forward to lightly caress her slightly moist slit.\n\nBatting my hand away with a laugh and a slight shudder, she chastised me, \"Enough, you maniac! There's going to be order and sequence to this evening, young man. I am looking forward to Sorvino's veal piccata - it's almost as good as yours. I'm also looking forward very much to an evening of dancing with my handsome husband-son, so don't think you're going to distract me with your sweet words and roving hands. After that, then we'll fuck each other senseless, but not until then.\" \n\n\"Ah, well\" I conceded. \"You can't blame a healthy, horny young fella for falling for your considerable charms though, can you?\"\n\nLinking her arm in mine, she steered us through the kitchen and into the garage. \"Behave yourself and I'll share a surprise with you a little later,\" she said, as I handed her into the car.\n\nOur drive to Sorvino's was uneventful, Mom snuggled under my arm, her hand casually resting on my thigh as we wound our way through the countryside to the supper club. She let her dress ride up as we drove, exposing an amazing pair of low rise, red satin boy shorts to match her dress. Catching me glancing at her crotch several times, she smiled and ruffled my hair. \"Eyes on the road, lover. You'll get my goodies soon enough.\"\n\n\"Who's teasing who now, Mom?\" I laughed, returning my concentration to the street.\n\nOnce we arrived, I handed the car off to the valet, who ogled Mom with ill-concealed lust as I helped her out of the car. Taking her arm in mine, I escorted her into lobby. \"I don't think I'll tip that guy,\" I declared grumpily as we walked. \"I don't like other men trying to look up your dress, although I suppose I can't blame him - you look ravishing this evening, Mom.\"\n\n\"My, my, aren't we the jealous one tonight,\" Mom teased. Her hand tightened on my arm and she pecked my cheek. \"I like it, sweetheart.\"\n\nAs we approached the welcome podium, I sought out the Ma\u00eetre d', slipping him an Andy Jackson and requesting a secluded table. He was more than happy to comply, his eyes discretely but appreciatively flowing over Mom's form as he accepted my inducement. We ended up in a booth in the far corner of the dining room, essentially out of view from the other tables, but with clear access to the dance floor. When Mom slid into her seat, she opened her legs wide, giving me a huge beaver shot, as she grinned wickedly. The sight of her silky panties tightly stretched over her mons had me riveted to the spot. I could clearly see the outline of her labia, her curly pubes spilling out on either side of the small strip of cloth, a hint of dampness on the shiny fabric. I was fully erect in a flash.\n\n\"You're a sinful woman, teasing your date like that.\"\n\n\"A lady needs to keep her beau interested and attentive, though, don't you think?\"\n\n\"Keep that up and 'interested and attentive' will turn into bending you over the table right now and boning you in front of the orchestra.\"\n\n\"I could always 'accidentally' spill a glass of ice water into your lap, if that would help.\"\n\n\"No thanks, I think I'll do my best to suffer in silence, \" I retorted as I slid in next to Mom.\n\nSlipping my arm around her shoulders, I kissed her cheek. \"Shall I order a split of champagne to celebrate?\"\n\n\"Nothing for me, love. I'm on the wagon for now.\"\n\nAlways slow on the uptake, I didn't understand why Mom would refuse, as champagne was one of her favorite tipples. A lack of comprehension must have been clear on my face, because she added, \"I've been skipping breakfast this past week, because I've been pretty nauseous every morning.\"\n\nLight slowly dawned on marble head and then it hit me like the proverbial runaway train. \"Oh. My. God. You're pregnant? You're really, truly pregnant?\"\n\n\"You're gonna be a poppa, Ricky,\" she said, tears of happiness glistening in her eyes.\n\nDrawing her to me, I showered her with kisses, lips, cheeks, forehead and lips again. I started to get choked up myself. \"Oh, Mom, I'm so happy! I love you so much!\" I gripped her shoulders, staring at her, grinning like a fool. Taking her in my arms, I kissed her again, soundly, tenderly and passionately. She melted against me, lips parting, a soft moan escaping as our tongues found each other. Our embrace was interrupted by the waiter, diffidently clearing his throat. \"Pardon me. Can I take your order?\"\n\nSomewhat miffed at his bad timing, I responded rather curtly, \"Sorry, we haven't even looked at the menu yet. Can you give us a few more minutes?\"\n\nAfter the waiter departed somewhat huffily, I kissed Mom again. She snuggled against me, holding my hand. \"You're truly happy, Ricky?\"\n\n\"I'm the luckiest guy in the world,\" I whispered, my voice tight with emotion. \"My beautiful mom is my lover, my woman and mother to our child. I can't imagine anything more wonderful.\"\n\n\"I went to see my OB this morning.\"\n\n\"Everything's okay?\"\n\n\"Yes, Ricky, just fine. Dr. Stern was a little surprised I got the ball rolling so quickly, but I did tell her at my last visit that I had found my man and wanted a child with him. She did want to do an amniocentesis on account of my age, but that was one thing that definitely wasn't going to happen,\" Mom said flatly and decisively.\n\n\"I told her that we were carrying this pregnancy to term, and that our child would be loved as well as anyone could possibly do, regardless of any potential difficulties.\"\n\nMom then cast a slightly apprehensive look to me, asking, \"You do feel that way don't you, Ricky? We are taking a risk, you know, actually a pretty big one if there is a problem with the baby.\"\n\n\"I know, Mom. We didn't really talk about it before, since we both wanted it. But yes, I have given it a lot of thought. I looked up a few things on the web, but a most of the genetic stuff was pretty technical. I didn't understand a lot of it, but the upshot was that there are some increased risks, but they aren't hugely elevated, just some. Mothers and sons and fathers and daughters have higher risks than brothers and sisters or cousins, but the odds still favor us.\"\n\n\"Bottom line, pretty lady, is that I'm with you all the way,\" I declared decisively. \"I could never terminate one of our children, even if I knew there were going to be issues.\" \n\n\"I'm so glad to hear you say that, Ricky,\" Mom said with obvious relief. \"I was pretty certain I knew how you felt, but I needed to hear it from you anyway.\" \n\n\"Sooo, that being the case, I have another little surprise for you,\" she said, reaching for her purse. She pulled out a black and white Polaroid snapshot and placed it on the table between us. \"This is from my ultrasound today. That gray, pear-shaped thing is my uterus. That little stripe in the center is the lining of the womb. See that little circle inside the lining, with the little squiggle in it? That's our child.\"\n\n\"Wow, that's so cool. What's that other thing next to it? It looks the same.\"\n\n\"That's our other child, Ricky.\"\n\nI think if I hadn't been sitting down, I would have passed out. I knew we both wanted children very much and had been trying nearly every night (and some days too) to bring this about, but twins? I could only shake my head in wonderment. \n\nAs we sat, holding hands and basking in the glow of our wonderful news, I leaned over to whisper in Mom's ear. \"We've been fucking too much. If we hadn't been so horny all the time, we'd just have a simple, single pregnancy.\"\n\nMom laughed delightedly and elbowed me in the ribs. \"What is this WE business? I'm a victim of your insatiable desire and perpetual erections. This is all your fault, you oversexed brute!\" \n\n\"Riiiight...and Anna Nicole Smith married J. Howard Marshall for love,\" I retorted.\n\n\"Anyway, you know very well that's not how it works. Besides, if your reasoning was correct, I'd have at least quadruplets, you randy boy!\" Sidling closer to me, Mom ran her hand lightly over my crotch, giving me a gentle squeeze. \"I'll give you fair warning, bucko. When I'm pregnant, I'm the insatiable one. I hope you can keep up with me. I'm going to need your fine cock at least twice a day when my hormones start ramping up.\"\n\nShivering briefly with anticipation, I changed the subject, gesturing to the menu. \"Are you going to introduce the twins to the veal piccata?\"\n\n\"You betcha. What about you?\"\n\n\"I think I'll take your warning to heart and start with some carbohydrate loading. 'Linguine Tutto Mare' for me. How about we begin with some antipasti?\"\n\n\"Perfect.\"\n\nThe meal progressed in leisurely fashion, Mom and I sitting close to one another, exchanging occasional caresses under the table and many sweet, lingering kisses. As we were enjoying our entrees, the band members and singer filed into the room and began preparing for the evening's music. I turned to Mom and took her hand. \"Would the lovely lady care to dance?\"\n\n\"Let me powder my nose first, darling. I'll be right back.\"\n\nA few minutes later, standing by our table waiting, I saw Mom walking towards me. Watching her stroll across the dance floor, I thought I detected a more than usual sensuous roll to her hips and a certain seductive quality to her gaze as she came towards me. I don't think I was imagining it, because she was turning heads among many of the other diners as she made her way to our table. I actually saw one beautiful brunette licking her lips as Mom went by her. When she reached me, she slipped her arms around me slowly bringing them up my back and around my shoulders. Squeezing me tight, she gave me a deep kiss, tongue lightly teasing mine. \"Your mother is always ready to dance with her handsome son,\" she whispered in my ear. \"You can have this dance and all the dances after this one, for the rest of my life, lover.\"\n\nTaking both her hands in mine, I backed out onto the floor, drawing her with me. As the singer began, I knew immediately that we were in for a special evening. A statuesque black lady of around 50, dressed in a floor length, sapphire blue evening gown, she exuded class and sophistication and her opening number promised a wonderful evening's entertainment. Beginning with \"Skylark,\" the Hoagy Carmichael/Johnny Mercer classic, she immediately reminded me of Dianne Reeves. \"Skylark\" became \"Straighten Up and Fly Right,\" which in turn segued into \"I Concentrate On You.\" Mom and I were lost in the music and wonderfully sung lyrics, slowly swaying with each other, in contact from thigh to shoulder as we moved. I was hard as a piece of rebar, but curiously, I really wasn't feeling any urgency about it. I was glad Mom could feel my excitement, but I was into the moment, holding her close, intoxicated by her presence and the familiar, comforting smell of soap and sandalwood. \n\nSlipping my hand from her back and placing it under her chin, I gently tilted her head to me for a kiss. \"I love you so much, Mom. I never thought I could be any happier, now that we're together, but after today, knowing you're having our babies - I just don't have the words.\" She sighed and hugged me closer, resting her head on my chest. We floated along on our private cloud, savoring our closeness without words, our universe again collapsing down to just the two of us, caught in a timeless moment. We barely noticed when the band and singer took a break. Forty-five minutes had passed in the blink of an eye.",
        "Reluctantly making our way back to our table, we sat, holding hands. The remains of our entrees, now long cold, held no interest for us. Sighing, Mom snuggled up next to me. \"I don't want the evening to end, Ricky.\" \n\n\"Let's have a little dessert while the band breaks and then we'll dance the rest of the evening away, Mom.\"\n\n\"Nothing would make me happier, darling.\"\n\nWe shared an indecently delicious Zabaglione with fresh figs and honey-glazed chestnuts, the decadent and sensuous dessert whetting our appetite for more dancing. As we regained the dance floor, I drew Mom close, making sure she could feel my hardness as we swayed together. Discreetly slipping her hand between us, Mom lightly stroked me with her fingertips. \"Mmmmmm, are you happy to be with me, son, or did you slip a cannoli in your pocket while I wasn't looking?\"\n\n\"Well, it's not a cannoli, Mom, but it does have a creamy filling just for you,\" I whispered lewdly.\n\n\"Goody, more dessert. I can't wait.\" As she spoke, she maneuvered us towards the farthest, darkest corner of the dance floor. Taking my right hand, she placed it on her ass as she pressed even closer to me, canting her pelvis to rub against my hardness. As I caressed her marvelous bottom, it became apparent that she had taken off her panties.\n\n\"It looks like you did more than powder your nose, you naughty girl,\" I growled, as my cock surged in my pants. \"I thought you wanted to dance the night away, dear lady. Do you intend to tease me the rest of the evening?\"\n\n\"I want to be in your strong arms and next to your wonderful cock every minute, sweetheart. Besides, a little anticipation will make the main event that much sweeter, don't you think?\"\n\n\"Well, I think two can play the teasing game, especially since I now have my 'all access pass,' \" I whispered evilly. \n\nAs I spoke I slowly lifted the back of her dress, taking care that I was between her and the rest of the room. Running my hand along the satin smoothness of the back of her thigh, I raised it to the soft, slightly puffy junction at the crease of her left cheek and then grazed my fingertips upward and inward until I encountered her damp heat. Lightly caressing her lips, I sought her dewy portal with my middle finger. She stiffened slightly as my digit wormed its way into her oily center, cooing into my ear. \n\n\"God, Mom, you're soaking, so wet and hot,\" I whispered hoarsely.\n\nHer breath catching in her throat, she murmured back, \"You're being very naughty, young man, taking advantage of your mother this way. What if someone sees your finger in my pussy?\"\n\n\"I think if you knew someone could see it, you'd come right on the spot, you shameless hussy.\"\n\n\"Mmmm, could be. I think I have a little exhibitionist streak, Ricky. I really turns me on doing this - I love feeling so naughty,\" she replied, thrusting herself back on my intruding digit. Her knees buckled slightly as she moved against me. \"God, I love how you touch me, son,\" she groaned.\n\n\"You like naughty, Mother?\" I rasped quietly. \"I'll give you naughty.\" \n\nI moved my finger in and out of her vagina with several rapid strokes, causing her to gasp in pleasure, her arms tightening around my shoulders. Slowly, I inserted my finger as far as I could and then withdrew it slowly. Mom made a small murmur of protest as my fingertip departed her slit and then shivered, as I trailed it along her perineum, coming to rest against her rosebud.\n\nLightly pressing against her anus, just scratching the surface, I whispered to her. \"What do you think the people here would say now, Mom? Bad enough that you let your son finger your pussy in public. What will they say when I stick it up your gorgeous asshole?\" \n\nMom's arms tightened around my shoulders and she brought her lips to my ear, whispering throatily, \"My son fucks me. He's made me pregnant. His finger has already been in my cunt in public. What's a little cornholing on the dance floor after that?\"\n\nAs she spoke, I began worming my finger into her tight, rubbery sphincter. Her eyes widened in surprise and pleasure and she jerked and grunted softly as I progressed up her back passage, burrowing her head against my shoulder. \"I think I'll finger you this way until you come, dear Mother. No one can see what I'm doing. Do you want to come on my finger, Mom?\" \n\n\"Ohhh, god Ricky, what you do to me! It feels sooooo nasty, sooo gooood. I can't believe you're doing this, putting your finger in my bottom!\"\n\nSlightly raising the front hem of her dress, I slipped my knee between her legs, bringing her divine fulcrum into contact with my thigh. \"I'll take that as a yes, my beautiful cum slut.\" I began moving my invading digit in earnest, continuing to describe how I thought the restaurant patrons would react if they could see us. \n\n\"They'd love seeing you give your ass to your son, Mother dear. I bet the men would take out their cocks and stroke them, waiting for you to come, so they could spurt too. Then there's that lady with the long brown hair in the other booth. She was actually licking her lips when you walked back from the bathroom. Do you suppose she knew you'd taken you panties off for your horny son?\"\n\nMom's breaths were now coming in short gasps as I thrust my finger in and out of her sweet back passage. She was grinding her dripping cunt against my thigh, her juices soaking through my slacks. \"I bet that lady wants you as much as the men do, Mom.\" She gasped as I said this, arms tightening around my shoulders. \n\nContinuing, I teased her some more. \"I think she'd play with herself too, as she watched me finger your asshole. I bet she'd sit at the edge of her booth and pull her skirt right up to her waist. Then she'd pull her panties to one side and stick her fingers into her cunt. She'd be absolutely dripping, looking at us. Then she might decide to stick a finger up her own ass, to feel just what you're feeling right now,\" I hissed.\n\nWith those last words, Mom exploded, arms clutching me tightly, grunting as her rectum contracting around my finger like an elastic nutcracker. She finished her cum rocking her pelvis in short, jerky strokes against my thigh, saturating the fabric of my slacks. She moaned and bit my shoulder through my blazer, her legs going almost completely limp. With her clinging to my shoulders, her entire dead weight threatened to topple me, but I managed to maintain our balance, carefully holding her up as I moved us back to our booth. \n\nGently depositing her in her seat, I moved next to her, taking her into my arms. Her breathing was still ragged and her eyes were hooded with lust. Her thighs were damp with her spending, her brow glowing with a light sheen of perspiration and she gave an involuntary tremor from time to time. In her post-orgasmic state, she was unbelievably gorgeous, a perfect carnal vision. Once again, my heart nearly burst with my love for her. \n\nI stroked her hair and face, occasionally kissing her while whispering sweet endearments in her ear, as she gradually recovered her composure. As she came back into focus, she looked at me in incredulity, struggling to find her voice.\n\n\"Oh. My. Sweet. Lord. You are such a baaaad young man, talking to your Mommy that way. Those things you said, my God! I could have come just from your words, let alone those wonderful, nasty fingers. I think that was the most wicked thing I've done in my entire life!\"\n\n\"Do you know the best part, Mom? No one else in the entire restaurant had a clue.\" I paused to take a sip from my water glass. \"Ready for some more dancing?\" I teased.\n\n\"Are you out of your mind, Ricky? After that last stunt, if you get me out there again, I'll end up doing a reverse cowgirl on you in the middle of the floor, audience be damned!\"\n\n\"That would be so hot, Mom, but might be a just little 'over the top',\" I quipped.\n\nMom snorted in amusement at my bad pun and snuggled in closer to me, her hand gliding over my aching crotch as she whispered. \"It's time to take your mom home and fuck her, darling. If I don't get you inside me soon, I'm gonna scream.\"\n\n\"Mmm, I like that thought, but I don't think I'm just going to fuck my Mom, though. I think I'm going to make love all night to the mother of my children. Either way though, when I'm through, you'll know how much I love you, Mom.\" \n\n\"You're such a sweet talker, you know that? Just one thing, though, what do you mean when you're through with me? Is that a challenge?\"\n\n\"The gauntlet has been cast, dear Mother. We'll see who keeps up with who tonight, that's a promise.\"\n\nI slapped my money down on the table and we hustled out to the front entrance. It was all we could do to keep from fucking each other in the entryway. The valet seemed to take forever and when he arrived, I fairly threw a couple of bills at him as we hustled into the car. I might have tipped him two bucks or two hundred, I simply don't remember. \n\nThe trip home from Sorvino's was incendiary. The minute we pulled away, Mom had her skirt up around her waist, fully exposing her womanhood. I don't know if it was our escapade on the dance floor, the knowledge that Mom was now carrying our children, or both, but we couldn't take our hands off of each other on the way back. I had my fingers in her sopping pussy in about 2 seconds flat. \n\nBy the time we were back on the outskirts of our town, Mom's breasts were bare and flashing in the moonlight as she sucked my cock and simultaneously fingered herself. The interior of the car was thick with the aroma of her arousal. I couldn't take any more and was afraid I was going to wreck the car and kill us both. I pulled into the darkened corner of a Tops supermarket parking lot just before I blew my load into Mom's waiting mouth.\n\nCatching my breath, I shuddered as Mom continued to lick my cock clean, the head exquisitely sensitive. \"God, Mom, you do me so good,\" I sighed. \"Your mouth is incredible.\" \n\nMom lifted her head from my crotch, a small pearl of cum on her chin as she smiled at me. She placed her hands around my neck and drew me to her for a passionate, tongue-lashing kiss, sharing my taste with me. \"We need to get home now, darling. If we don't get to our bed in 5 minutes, I won't be responsible for my actions \u2013 and the best criminal attorney in the world won't be able to save me.\"\n\nMom never bothered to put herself back together as we drove the final miles to our house. Had anyone looked into the car, they would have seen my mother in all her bare-breasted glory, nipples erect and chest flushed with all-consuming arousal. As we made our way home, she idly stroked her nether lips, occasionally inserting her finger and then feeding her nectar to me as we drove.\n\nFortunately, our often balky garage door opener worked perfectly in our time of need. By the time it was shut behind us, we were all over each other again, virtually tearing our remaining clothes off of each other, leaving a trail of cum-stained and sweaty garments behind us as we stumbled to our bedroom. \n\nOnce in our room, Mom wasted no time on preliminaries. Pushing me onto my back on the bed, she straddled my hips and took me in her hand, swabbing my glans through her lips several times and then impaling herself on my hardness in one plunge, groaning as I split her steaming, oily center. \"Oh yes, son, so nice, Ricky.\"\n\nYou would think that after fucking our brains out continuously for weeks that we might have slowed down just a little bit, but we were still on fire for each other. I was absolutely stupefied by how much she turned me on. \n\nEvery inch of her skin, her nipples, the swell of her breasts, their mesmerizing pendulous movements as she rode me, the glorious golden reddish color of her thatch, the small involuntary moans as she moved up and down on my cock, the sheen of her juice on my shaft, her flashing eyes and lustful smile as she looked down at me, they all excited me beyond measure. She was everything I would ever desire, Eurydice, Helen of Troy, Madame de Pompadour, Isolde, Josephine Baker, Guinevere, Aspasia, Lola Montez and Marilyn Monroe all rolled into one package, but most of all, above all else, she was my Mom. I'd never, ever get enough of her.\n\nAs she moved herself on me, she threw her head back, hands scrabbling on my chest as she grunted with each downward plunge onto my waiting shaft. \"Unnhhh. God, Ricky, your cock feels so good. Unnhhh. I love how you feel inside me. Unnhhh. So hard. Unnhhhh! So deeeeep! Unhhh!\"\n\nShe gradually leaned forward, dipping her chest towards my own torso. With each movement, her stiffened nipples would scrape across my chest, driving me wild. As she would slide back down to my root, she mashed her sex against me in a dragging motion, stimulating her clit. Gradually, her pace increased, her hoarse endearments morphing into incoherent moans and sibilant sighs. Soon, she was riding me so rapidly I gave up trying to synchronize with her movements, letting her pound herself to glory. Very shortly, her eyes rolled back into her head and she slammed herself down on me, grinding so ferociously I thought she would push me through the mattress. Letting out a groan of inarticulate pleasure, she collapsed onto my chest, breathing in agonized gasps, our love sweat mingling, her arms and legs sporadically twitching.\n\nIt had taken all my effort not to climax with her as I felt her contracting around my own aroused flesh, but somehow I managed to hold off, reminding myself that I wanted to be the one doing the wearing out this evening. I think I must have bitten the inside of my cheek to distract myself, because I could taste blood on my tongue. Holding Mom close, I stroked her back and sides, kissing her gently as she slowly returned to reality.\n\n\"Ahh, Ricky, that was soooo good! Two months together and you've ruined me - nobody makes love to a mother like her son can.\"\n\nI kissed her and brushed her hair from her forehead. \"There's nothing in the whole world I like more than giving you pleasure, Mom. It's what I live for. I can't believe how lucky we are.\"\n\n\"Believe it, lover. As ecstatically happy as you've made me these past weeks, now I've gotten the best gift you could ever possibly give me, Ricky. Whenever I look at our children, I'll see us; our love, our dreams and our future. There's nothing that can top that.\"\n\n\"Well, I hope I can muster at least a few surprises for my mother-lover as time goes by.\"\n\n\"You're already the biggest surprise of my life, my lovely son. I love you so much, Ricky,\" she said, eyes moistening. \"Woman to man, wife to husband and most specially and deeply, mother to son. I need you more than my next breath.\"\n\nI smiled and kissed her soundly. \"I'm glad the lady of the house finds my service satisfactory. I do aim to please.\"\n\nShe laughed and tweaked my nose. \"You're incorrigible, you know that? Now, let me up - I need to pee. After that, I have another surprise for you.\"\n\nShe walked into the bathroom, hips swaying, thighs slick with juice and ass cheeks dimpling. I heard the rushing tinkle of her water in the toilet and then the sounds of rummaging in her medicine cabinet. She returned after another minute or so. My curiosity definitely piqued, I watched her expectantly as she came back into our bedroom, hands behind her back. \n\nBlushing slightly, she gazed at me affectionately and cleared her throat hesitantly. \"Ricky, son, I have a gift I want to give you. I've been saving it since our first night together. It's something special that I've never given to anyone else and I want you to have it.\" \n\nMom had joined me on the bed, looking at me nervously. Taking my hand, she pressed a small bottle into my palm. Glancing downward, the name on the label did not register at first. Then, I finally processed what I was looking at. \"Astroglide.\" I was truly taken aback, hardly daring to believe what she was trying to tell me.\n\n\"Jesus, Mom - do you really mean it? Are you sure about this?\"\n\nGulping once, she nodded. \"It's yours, sweetheart. I want you to have it all, every part of me. I won't deny you anything, ever. I want you to have it. God help me, Ricky, I want you to fuck my ass.\"\n\nMy own throat suddenly dry, I could only nod.\n\n\"Ricky, you have no idea how much it meant to me to know I was your first, that you saved yourself for me. I'll treasure that as long as I live. Now it's my turn to return the favor.\"\n\n\"I'll be really, really careful Mom. I'd never do anything to hurt you. I want you to love this too. Are you really sure?\"\n\n\"I know you will, sweetheart. But yes, I'm absolutely sure - I trust you completely. I love your fingers and tongue back there already. I think I'll like your cock even more.\"\n\nCrawling up next to me, she got on her hands and knees, lowering her shoulders and head on the pillows. Moving behind her, I placed myself between her legs. I began to gently caress and kiss her wonderful, taut moons, drawing a slight moan from her as I worshiped her amazing ass. \"Ahhh, Mom - you are so beautiful, so sexy,\" I sighed.\n\nExhaling as I went, blowing warm air over her crevice, I slowly trailed my tongue down her crack, pausing from time to time to lick and kiss her cheeks, occasionally scraping my teeth lightly over her amazing globes. As I slowly worked my way to her pucker, she shivered slightly. \n\nFinally, I was there. I gently spread her cheeks and began with the lightest kisses, barely grazing her sweet rosebud. Teasing her perineum with my tongue, I traced back to skirt the edges of her pink crinkle, never quite dipping in, while I pulled and stretched her buttocks, causing her anus to slightly open and close as I spread her with my hands. \n\nMom cooed and sighed as I continued, slightly pushing herself back to my face, trying to capture my tongue. Lifting my head slightly, I placed my tongue at the top of the divine valley between her cheeks and slowly trailed downwards, Mom shuddering and sighing as I went. When I reached her forbidden hole, I pulled her cheeks apart and stabbed firmly with my tongue, swirling as I pushed into her back passage.\n\nMom jerked at my oral invasion and moaned. \"Oh God,\" she groaned. \"Why do I like your tongue there so much?\"\n\nPausing for a moment, I grabbed the lube and squirted some on her crack, letting it slowly trickle down to her little pink star. Putting my hand on her ass, with my fingers pointing to the floor, I placed my middle finger in her crevice and slowly moved downward, coating it with lube. When I reached her back door, I slowly pressed inward. \n\n\"Ahh, that feels so nasty, so good, baby.\"\n\nGently moving inward, I began to press around her outer edges, lightly stretching as I moved in and out. Mom responded with a throaty moan. Gathering more lube, I ran the liquid down her crack again and onto my fingers. I then slowly added a second finger, gradually easing it into her ass over the course of a couple minutes. Mom sighed and groaned again when I had both fingers fully in her butt. Slowly, cautiously, I began to move in and out, gradually adding a stretching movement to my thrusts. Mom was now moaning with each thrust, starting to move herself back against my hand, increasing the force of my naughty invasion of her most private place.\n\nStroking her back with my other hand and kissing her shoulder, I whispered into her ear. \"Are you ready, Mother?\"\n\nFully immersed in the forbidden sensations, she could only moan and nod her head once.\n\nPulling my fingers out, I could see she remained open to me, small, involuntary contractions causing her hole to slightly widen and narrow as she awaited my entry.\n\nCrouching behind her, I lubed my cock. Mom shuddered and moaned again when I squirted a generous dollop into the nickel-sized cavern I had worked open. Carefully placing myself at her crinkle, I brought only the slightest pressure to bear. Caressing her back and sides again, I bent forward next to ear. \"Relax and push yourself onto me, Mom. I'm going to let you take me at your own pace.\"",
        "Shuddering, she nodded jerkily and began to push backwards. I felt the pressure build against the resistance of her ass. Mom was holding her breath, quivering and biting her lip as she strained to let me in. Again caressing her lightly, I whispered \"It's okay, Mom. Just relax. Take some slow, deep breaths. There's no hurry,\" I soothed.\n\nAs she calmed down, I continued to touch her gently, simply stroking my hands up and down her back and sides, murmuring encouragement. Then quickly, it was over, Mom wincing slightly as my head slipped past her sphincter.\n\nThe sensation was indescribable, incredible searing heat, even more than her glorious cunt, but also an amazing tightness beyond anything I had ever experienced. I don't think I could have fisted my cock any harder than Mom's ass was gripping me. It was all I could do to hold still, waiting for her to accommodate me.\n\nShe was breathing in deep gasps, trembling a little bit as she adjusted to my presence. Bending over her back to kiss her spine, I caressed her sides again. \"Don't do anything until you're ready, Mom. Go as slow as you need to. I won't move unless you tell me to. We can stop any time you want.\"\n\nStill breathing deeply, she shook her head, biting her lip. Ever so slowly, she began to push back, millimeter by millimeter. It took about two minutes, but finally, I was buried to the root in her gorgeous, amazing ass, realizing one of my fondest dreams and biggest fantasies. \"Oh my God Mom, you feel amazing- so hot, so tight!\" I gasped. \"Are you ok?\"\n\n\"Oh, baby, it's unbelievable! Ahhhhh, I feel so full, so stretched...I had no idea it would be like this. It hurts just a little, but even that feels so good!\"\n\n\"Are you ready?\"\n\nMom reached back with one of her hands and took mine, giving it a squeeze. \"I'm ready, lover. It's time to fuck your mother's ass.\"\n\nI began to gently move, keeping very slow, steady strokes as Mom got used to the motion. Within a minute she was moving with me, giving out a low, primitive grunt each time I bottomed out, a sound I had never heard her make before.\n\n\"Oh fuck, lover! Oh Jesus, it's incredible! My God! My God!\" \n\nThe sensations I was experiencing were so amazing I could barely focus. I was overwhelmed by her heat, the tightness, the incredible noises she was making, the sheer lewdness of the act we were performing. I was fucking my mother's ass! I was balls deep in her and she was loving it! All I could do was moan over and over again.\n\n\"Oh Mom, oh Mom! Oh my God, Mom! MOM!\"\n\nI couldn't help myself; I began to pick up my pace, putting more power into my thrusts as I started to feel the beginnings of an absolutely monstrous come building in my loins. When I changed my rhythm to pull out completely with each cycle of penetration, grinding tightly against her at the bottom of each stroke, Mom went absolutely wild. \n\n\"Oh shit, Ricky! Unnghh! Oh my god! Fuck me baby! Fuck me! Fuck my ass! Fuck it!\" she moaned, burying her face in her pillow. \"Fuck it! Fuuck it! Fuuucckkkkk!!!\"\n\nIt was all too much for me. My orgasm shook me like a sonic boom. \"Oh God! Oh GOD! Cumming! Cumming, Mommmm!\" I roared.\n\nAs I sprayed myself into her entrails, Mom's head jerked off the pillow and she arched her back, unleashing a stentorian bellow as she reached her own peak. \"JESUS FUCKING CHRIST! OH SHIT! SO GOOD RICKY! CUMMING, SON! MOMMY'S CUMMING! OHGOD! OHGOD! SWEEETJEEESUS!\"\n\nAs I was spending myself, Mom's climax made her ass contract around my meat like a velvet vise grip, bringing me to a completely shattering peak. I lost all track of time and place, because the next thing I remember is being draped over Mom's back, pressing her flat into the bed. My cock was still twitching randomly, dribbling out the final dregs of my cum into her clinging rectum. My body shook as though a Taiko drummer had set up shop inside my chest, my breath coming in great, ragged gasps as I struggled to reestablish my grip on reality. Mom was completely inert beneath me. I could still feel a few weak contractions of her ass around my cock as her orgasm slowly faded away.\n\nI carefully rolled us over onto our sides, staying inside Mom, remaining tightly spooned up against her, hugging her close. A minute or two later, she finally stirred and I kissed the nape of her neck. \"You okay, Mom? I didn't hurt you, did I?\"\n\n\"Oh, my baby, my darling son, you were wonderful,\" Mom sighed. \"That was amazing...I had no idea, not a clue how intense that was going to be. It felt like your cock reached to my tonsils, I was so wonderfully full! And when you came inside me, my god! It was heavenly, sweetheart.\"\n\n\"And you're feeling okay now?\" I asked anxiously.\n\n\"Better than okay, dear heart. You were so gentle, so caring, it was perfect. I was pretty sure I was going to enjoy it, but it was much, much better than I thought it would be. You're a marvelous, sweet lover, son. I love you so much!\"\n\n\"I'm so glad you liked it, Mom,\" I murmured into her hair. \"It was incredible for me too. I came so hard I think I passed out for a minute.\"\n\n\"I hope you liked it as much as I did, sweetie, because Mommy is going to want to do this again...and again... and again!\"\n\n\"Works for me, pretty lady.\"\n\nSpooning up against me, Mom heaved a deep, contented sigh. \"You know Ricky, I was ready to do this, knowing how much I like it when you lick and finger me, you know...back there, but I didn't expect to come from getting fucked in the ass. That was amazing and very unexpected; I just thought I was going to do something nice for my lovely son.\"\n\n\"I was surprised, too. You rattled the china with that one, Mom.\"\n\nWe lay together quietly, touching softly, Mom turning her head to share kisses with me as I slowly softened inside her, eventually squeezing out with a plop. She squealed as I left her. \"My god, Ricky! What did you do to me? It feels like you put a quart of your stuff up my bottom! It's running all over the place!\"\n\nLooking down, I saw one of the most erotic sights I have ever beheld, then or in all the years since. Mom's thighs and buttocks were glistening with the lube we used. Her rosebud was red, still slightly open, streamers of my thick semen pulsing out and flowing over the curve of her buttock and onto our sheets. \"My god, Mom! I can see it coming out of your ass - it looks sooooo hot! It's incredible. I wish you could see it.\"\n\nI stayed spooned up next to her, wet spot be damned. We lay in silence, softly touching for some time. I suspect that we both more drained by the experience than we thought, because we fell asleep quickly, not waking until the next morning. So much for the \"who's gonna out-fuck who\" competition. \n\n***\n\nAs I was to come to find out, Mom's hormone-driven lust was awesome to behold. She left me in the dust as her pregnancy advanced, needing sex two, three or even four times in a day as her belly grew. She ran me delightfully ragged. On weekends, especially, it wouldn't be uncommon to wake up with Mom riding me. Another session might follow in the kitchen at lunch or even at breakfast. It didn't seem to matter what we did, Mom just needed cock constantly, and she didn't care what hole got stuffed. When she needed it, by God, she needed it NOW and there was going to be no dithering or delays. \n\nIf I was lucky enough to catch a Saturday or Sunday nap on the couch, more often than not I would wake up with her dripping pussy rubbing on my face. Oh yes, another thing about being pregnant - her taste, my god, her taste. It was always ambrosial to me, but there was something about her now that seemed different. I don't know if it was real, or just my knowledge of her pregnancy, but somehow, she tasted more substantial, more flavorful than I could remember before. It was the difference between a great burger and prime rib. \n\nEven she would remark on the difference when we would kiss after I went down on her. Thank god I loved eating her out, because it was the only way I could keep her satiated sometimes. The thing was, even though Mom often pushed me to the limits of my sexual endurance, I loved every second of it. I don't know exactly how or why, but there was something about her being pregnant that put my dick and brain in overdrive. I had to have her all the time. I became absolutely consumed with fucking her, as if I wasn't already completely besotted by my gorgeous mother. It seemed as though if I didn't have her pussy plugged every minute, she wouldn't be pregnant any more. It was a magnificent, complete and total obsession.\n\nThe times when Mom was at work all day were often particularly memorable. On those occasions, her return home followed a fairly predictable pattern. She would arrive in the garage and close the door, emerging from the car with her panties in hand. I would meet her in the hallway connecting with the kitchen. My pants would come off in about one minute, and depending on the urgency, we might end up on the hallway floor, in the kitchen, or rarely, making it to the bedroom. Depending on her mood, I might get a whisker biscuit as my before-dinner appetizer in the kitchen, or something more exotic. \n\nI recall one day where she emerged from the garage actually naked from the waist down, her thighs glistening with arousal. Plastering herself against me, she whispered in my ear \"I want you to love my bottom, right NOW, baby.\" She pulled my shorts off without ceremony and led me by my dick into the kitchen. Not wasting a moment, she rummaged in the pantry, pulling out a bottle for lubrication and bent over the kitchen table, lewdly spreading her cheeks with both hands. The irony of using \"extra virgin\" olive oil as I fucked her ass was not lost on me. But I digress.\n\n***\n\nWe were so preoccupied with extinguishing the raging inferno between Mom's legs that the visit to Vancouver snuck up on us. Archibald MacLeish was as good as his word, setting us up with First Class tickets flying out of LaGuardia and a suite at the Fairmont Pacific Rim, with a magnificent view overlooking Coal Harbor, Stanley Park and the North Shore Mountains. I remember teasing Mom as we were riding in the van to the airport, breathing softly into her ear, \"Are you going to be able to make it all the way to Vancouver without needing an orgasm?\"\n\nMom smiled evilly and gripped my thigh. \"Go ahead smart-ass, keep it up and I'll make you eat those words,\" she whispered back.\n\n\"Keeping things up is usually not a problem and I've already eaten everything else I can, so it shouldn't matter.\"\n\n\"That you have. I can't believe you had your head up my dress five minutes before the van arrived.\"\n\n\"There's always the mile high club, Mom.\"\n\n\"You are a very bad son, teasing your mother like this,\"\n\nI put my arm around her waist and pulled her close for a kiss. \"I'll make it up to you with pleasure when we get to the hotel, my love.\"\n\n\"You're cruel, but for some strange reason I happen to love you, Ricky.\"\n\nOur flight was pleasant and uneventful, but I did have a few things on my mind, which we talked about before we landed.\n\n\"Mom, are you worried about us, I mean me meeting Mr. MacLeish and the rest of the firm?\"\n\n\"Absolutely not. Why? You worried about the age difference?\"\n\n\"Well, yeah. I don't want anything to happen that might endanger your chances.\"\n\n\"I suppose if you did me by the punch bowl at the welcome party, that might have some adverse consequences, but otherwise no. You're a sweetheart for worrying about it, but I've made my choice. Everything else has become secondary to us being together, lover. Besides, now that you've grown out that goatee and mustache, you look quite a bit older.\"\n\n\"You really like it, Mom? I have to say it still feels a bit funny.\"\n\n\"You look like my dashing pirate, Ricky. It suits you down to the ground.\"\n\n\"If milady is happy, then I'm prepared to repel all boarders and tie this damsel to my mainmast.\"\n\n\"Now you're just being silly.\"\n\n\"Anyway, not to worry,\" she smiled, squeezing my hand reassuringly. \"As far as Archie MacLeish is concerned, I'm moving to Vancouver with my significant other. I've told him I'm estranged from my only son, who I had at a young age. That's all there is to it.\"\n\nWe sat in silence for some time, Mom's hand on top of mine, lightly tracing over my fingers. Before long, we were on final approach and my face was glued to the window. For a kid from suburban New Jersey who was never much farther from home than the Adirondacks or Cape May, it was a revelation. Sitting on a large peninsula, the city laid jewel-like below us. The air was crystal clear and all of the features I had studied on maps before our flight were laid out before us as we turned through the approach pattern. I could see Burrard Inlet, Bowen Island, Vancouver Harbor, English Bay, Stanley Park, the tall downtown buildings, Canada Place and the beautiful mountains along the North Shore. \n\n\"Wow, Mom, we're not in Kansas anymore.\"\n\n\"It's a far cry from Princeton Junction, isn't it?\"\n\n\"I can't believe we're going to raise our family here. It's just about the most beautiful place I've ever seen.\"\n\nA driver was waiting for us at baggage claim and we were whisked to our hotel suite in short order. The moment I had closed the door behind the bellhop, Mom pinned me against the entry wall with a searing kiss, frantically fumbling with my belt as we clinched, devouring each other with our tongues. While I pulled her dress up and cupped her ass cheeks, she shoved my pants and boxers down to my ankles and then squatted, pulling away from my hands. She took me into her mouth, hoovering me to an almost painfully full erection in about 30 seconds. \n\nLooking up to my face as she sucked, her eyes glinted mischievously as she smiled happily around my cock. All too soon, her skilled tongue and hands had me approaching the edge and I gently disengaged from her, taking her hands and guiding her to the bedroom. Still smiling wickedly, she paused and reached under her dress to pull off her panties, then pushing me onto my back as my knees came in contact with the bed. As I landed on my back, she hiked her skirt up above her hips to expose her hairy treasure and straddled me, working he way up my chest until her moist cunt was right above my face. Dropping her skirt to enfold me in aromatic darkness, she settled her flower onto my waiting tongue.\n\n\"Do what you do best, sweetheart,\" she cooed. \"It's time to eat your Momma.\"\n\nAs Mom rode my lips, I grabbed her ass, kneading her cheeks, pulling them apart to expose her pucker and then pushing them back together, which drove her wild. I could tell she wasn't particularly interested in nuance or subtlety at this point, so I latched onto her clit and began sucking and tongue-lashing it ferociously. At the same time, I formed my hand into a \"six pack grip\" with my thumb and middle finger, firmly placing the thumb into her sopping channel. As she began to edge closer to her climax, I began using the middle finger to tease her anus, lightly scraping over the surface with my fingertip. This raised her arousal to an even higher plateau. When she started to buck and gasp, I roughly shoved my middle finger up her ass. With a keening wail, Mom craned her neck and arched her back, slamming down on my face with a drawn out groan, flooding my nose and lips with her essence.\n\nMom coming on my face is just about my favorite sexual experience, bar none. The sheer intimacy of the contact, the feeling of worshipful closeness and the incredible intensity of her orgasms when I eat her always make me feel incredibly close and connected to her. It's one of the best ways for me to let my beautiful lady know how much her son loves her, concentrating solely on her pleasure. Flowers for Mother's Day are just fine and dandy, but a big, juicy squirting cum on her son's tongue says 'I love you, Mom' like nothing else. When Mom climaxes in my mouth, it really gets my motor running too. I was immediately and ferociously turned on, ready to fuck the daylights out of her. \n\nNot even bothering with our clothes, I slid out from under her and turned her onto her stomach, roughly pulling her dress up over hips. I quickly jerked my slacks and boxers down to my knees, got onto my haunches and straddled her thighs, pushing them together as I mounted up over her ass. Pushing down from behind, I found her slit, forcing myself in quickly and sharply, drawing a guttural grunt of approval from her. While I can't get as much penetration from this position, I love the feeling of mastery and dominance of pinning Mom to the bed and really grinding it to her, especially watching her magnificent ass shiver and quake as I slam her like a jackhammer.\n\nMom was getting into it just as much as I was. She began meeting me with short, sharp lunges of her own, first pushing her pubes down into the mattress to stimulate her clit and then quickly rolling her hips back and up to meet my downward thrusts. When she started to get vocal, I knew I was in for a hell of a ride.\n\n\"Oh yeah, Ricky, that's it baby. Take me son! Do me hard!\"\n\nI slapped her ass hard, leaving a rosy palm print on her buttock.\n\n\"Fuck, yes! Slap me again, you bad motherfucker! Yeah! Fuck Mommy! Fuck your Mommy hard, baby!\"\n\nGrowling, I began stroking into her even more intensely, adding a twisting motion to my thrusts, making her groan even more loudly.\n\n\"Ohhh, shit! That's so good, baby! Give me that cock! Shove it in my tight pussy. Yeah, put it to me, honey!\"\n\nI was dripping with sweat, pounding for all I was worth. I had never fucked her as hard as I was doing now, but the more I put into it, the more she wanted.\n\n\"C'mon, Ricky, fuck your mother. Give me all of your big cock, baby. Harder! Fuck me hard, son! Haaarrrder!\" she hissed.\n\nI was close, real close. I could tell by the way my balls were tightening, and the ache of my prostate that I was going to have a monster cum. I think Mom could sense from my breathing and rhythm that I was ready to explode.\n\n\"Are you gonna come, Ricky? Are you ready to squirt your hot baby juice in Momma's cunt? C'mon, baby, cum for your Mommy, cum for me now, lover! Squirt me honey! Squirt it in Mommy!\"\n\nThat put me over the top. I released with a roar, crying out over and over as my climax blended with her own.\n\n\"Mom! Mom! Mom! MOOOOOMMMMMMM! Oh God! MOM! MOM! MOM! MOM!\"\n\nI felt like my cock had turned into a fire hose. I couldn't believe how much spunk I was spraying into Mom's cunt. I must have gone on shouting and squirting into her for twenty or thirty seconds, my pleasure incredibly prolonged. Finally, I felt as though I had shot my entire insides out through my cock and into her. I collapsed on to her back with a groan, shuddering and twitching uncontrollably. \n\nAfter several quiet minutes gradually catching my breath, I rolled us onto our sides, still spooned up against her, kissing her back and shoulders tenderly, whispering in her ear.\n\n\"Mom.\"\n\n\"Mmmmmmm, what is it, love?\"\n\n\"That was unreal. You are so exciting, so damn sexy, I just can't believe how much you turn me on. You are a fucking goddess!\"\n\n\"You're a darling boy. Is that a goddess of fucking, or just fucking as an adjective?\"\n\n\"Both, I think.\"\n\n\"You say the sweetest things to your mother.\"\n\nI squeezed her and kissed the nape of her neck. \"I love you so much, Mom.\" \n\nI couldn't see, but I could sense her smile as she took my hand and kissed it.\n\nI can't even begin to imagine being with any other woman besides Mom. I have to admit since she is my first and only lover, I have no basis of comparison, but whenever we're together, it's never less than fantastic. Every time, I seem to find out something new about her that excites me more than the last time or makes me feel even closer to her. It might be how she milks me with her muscles in a particular position one day, how her breasts gyrate when she rides me cowboy style, or something very simple, like how she smiles and puffs her bangs off her moist forehead, out of breath after a really vigorous, sweaty fuck. There's always something that makes me love her more every day we're with each other. And now, to be starting a new life together, far from discovery, free from needing to keep secrets every day, everything felt perfect.",
        "***\n\nBefore we left for our visit to Mom's new practice, I overheard a conversation she had with Marsh over coffee on a Monday morning. Mom and I had spent essentially the entire weekend in bed, making lots of love and just plain fucking the shit out of each other until we were exhausted. Marsh had just returned from a weekend visiting Shawn. I guess the two of them were comparing \"son-notes\" over latte. I quietly and discreetly parked myself outside the kitchen doorway, shamelessly eavesdropping.\n\nMarsh began, teasing Mom. \"You look a bit tired and frayed around the edges, Jen. It must have been a really good weekend.\"\n\nMom chuckled and gave back as good as she got. \"I could say the same, skin sister. It looks like it hurts to sit down.\"\n\n\"God, you have no idea. For some reason, Shawn was totally fixated on my butt this visit. He fucked my ass three times yesterday, and I loved every second of it.\"\n\n\"Jesus, Marsh, you're a total maniac. I adore it when Ricky does me that way, but I don't know if I could stand up to that much pounding.\"\n\n\"Well, most of the time, Shawn is just so sweet, so tender it almost brings me to tears. But sometimes you know, a girl just likes to get down and be totally nasty,\" Marsh giggled. \"This weekend, I really wanted to get thoroughly fucked, to be absolutely dominated for some reason. Totally giving myself to him like that was actually liberating, in a strange way. I felt like I was all cunt, ass and tits, just one huge erogenous zone. There was something about the role reversal that really got my juices flowing, Shawn becoming my badass, big-dick, dominating daddy.\"\n\n\"I know what you mean, Marsh. Ricky is almost telepathic that way. I hardly ever have to tell him how I want it. We're almost always in synch, and even if we're not on exactly the same page, he loves it when I tell him what I need.\" I heard her sigh deeply. \"He's the best lover I've ever had, or ever will have.\"\n\nI blushed so hard when I heard Mom say that, I thought that the glow would shine through the doorway and give my spying away. It also made me swell with tremendous pride, both above the neck and below the beltline.\n\n\"Amen to that, Jen. How did we get so lucky?\"\n\nMom paused before replying, considering her words. \"For me, it was because I was finally able to be totally honest with myself about my desires and being open to accepting the love that Ricky had for me for so many years. It was incredibly hard to do, so many feelings of horrible guilt and sin to overcome. I worried terribly about how it would affect him and our relationship. It took a long time to understand that it was all bound together and inseparable, both the mom-son thing and a man just loving a woman.\"\n\nMom laughed ruefully and added, \"I practically drove that poor boy insane with my indecision. You know, from the first time I kissed him, I mean like I really meant it, to when I first let him touch me, uhmm, down there, it took over a month. Then the very next day, when he actually got assertive with me for the first time (that's when you almost discovered us), I chewed his poor head off and nearly ruined everything. Thank God I came to my senses after you talked with me. I should have known I was trying to control an essentially unstoppable event.\"\n\n\"Wow, I had no idea, Jen. I can't say I'm surprised though. It's such a deep-seated taboo, I think especially for someone like you, who was such a conscientious and loving Mom. I know you definitely did the right thing, though. You and Ricky are so beautiful together, so loving and so right for each other. It's a pure joy just to see the two of you side by side.\"\n\n\"Thanks, Marsh, but I don't know about conscientious. I think I first started thinking about Ricky, you know, that way, when he was still in high school. He's always been such a sweet boy and pretty hunky too,\" Mom giggled. \"How was it for you and Shawn?\"\n\n\"Really, really different at the start, although I think we've ended up in the same place as you and Rick.\"\n\n\"Did it take you as long to figure out what to do?\"\n\n\"No, we went from mutual interest to bed very quickly.\"\n\n\"Wow. I wish I had your decisiveness, Marsh.\"\n\n\"You know, in the beginning, Shawn was actually trying to seduce me,\" Marsh confessed, her voice barely audible. I had strain my ears, almost cocking my head into the door frame to hear her\n\n\"No!\" Mom exclaimed in a shocked whisper.\n\n\"Absolutely, my girl. He had a plan all mapped out with meticulous care, with alternate strategies and detailed contingencies. Damned if it wasn't working, too. Shawn may look and act like a self-conscious computer nerd sometimes, but when he was trying to get into my panties, he was masterful. I guess he was highly motivated,\" Marsh laughed.\n\n\"What did he do, Marsh?\"\n\n\"It was subtle, indirect and simple, but devastatingly effective. He treated me with real respect, affection and kindness, things I never got from Harold while we were still married.\" \n\n\"I think he launched his assault on Mommy's virtue near the beginning of his senior year, just after he turned 18. One day, he just came home from school and gave me a big hug and kissed my cheek, something he rarely did since he hit puberty. He said, \"Mom, did I ever tell you how much I truly appreciate everything you've done for me, or how much I really love you?\"\n\n\"I just laughed and hugged him back and said 'No, not recently and no, you can't have the car tonight.'\"\n\nHe got real serious then and told me \"I mean it Mom. I've been thinking a lot about things recently and I know I've been taking a lot for granted. I just don't want to do that anymore. And no, I don't want the car tonight.\"\n\n\"Seems innocent enough, Marsh.\"\n\n\"Oh, yes indeed. It didn't think twice about it, except that it absolutely made my week. You know how it is, when you finally realize that the day your little boy is going to walk out of your life and into the big, bad world is coming soon. Right then, I felt closer to him than I had in years. It was precious.\" \n\n\"After that day, it slowly and seemingly naturally escalated. He spent a lot less time on his computer or out with his friends and more time just sitting with me, talking. He asked my advice about a lot of things and really listened to what I had to say. He always made a point to compliment me on my appearance. At least of couple of times a day, he'd give me a big hug, 'Just because,' he'd say. I started to get a nice kiss each morning when he left for school and when he came home. I came to really look forward to those moments, they made me feel so good about myself and about our relationship.\"\n\n\"I know now in retrospect, I was subconsciously starting to respond to him as a woman, too. I didn't see it at the time, but that clever so-and-so had found the chink in my maternal armor. Without really thinking about it, I began dressing a bit more provocatively, nothing outrageous, but definitely a notch more suggestive than before and I definitely was fishing for compliments, which he very happily provided. He made me feel sexy and desirable again and boy, oh boy, did that feel nice.\" \n\n\"After that, things started to get more intimate, not in any obviously inappropriate way, just closer. He started giving me foot rubs a couple times a week. I felt so pampered, it was wonderful. We'd sit on the sofa in the evening and I'd put my feet in his lap. He always made sure that my feet were a chaste distance from his crotch and then he'd do my lower calves and feet, never getting fresh. Things started to change though, one time when he did my feet for almost an hour. By the end, he was just caressing me, again no higher than my calves, but I found myself responding to him. I actually got wet from him touching my legs and feet, Jen!\"\n\n\"Did he notice, Marsh?\"\n\n\"At the time, I didn't think so, but looking back, I think I was excited enough that he could smell me. Things didn't go any farther that evening, but the next day, when he left for school, he kissed me on my lips!\"\n\n\"My God, what did you do?\"\n\n\"I was so surprised, I couldn't do anything. Besides, it was so quick, he was gone off the porch before I could respond. I just stood there on the stoop like an idiot. My first thought after he left was that we'd have to talk and nip things in the bud immediately, but as I was sitting, drinking my coffee a little later, I began to think, 'What's the harm in a little peck on the lips from your handsome son, who obviously loves you very much? He's just showing you a little extra affection, showing how much he cares about you.'\"\n\n\"So, there you were, on a very slippery, very treacherous slope,\" Mom observed.\n\n\"And how. While I was finishing my second cup, I began thinking again about the foot massage he gave me before. Damned if I didn't get wet all over again. This time though, it wasn't just a little juiciness, it was a goddamn river. I soaked through my panties in about two minutes! By then I knew I had to take care of myself or I'd be good for nothing the rest of my day. I was incredibly horny and at the same time pissed off and guilty, having gotten excited by the memory of my own son touching my stupid feet. So, I went upstairs to get out Mr. Big.\"\n\n\"Mr. Big?\" Mom snickered.\n\n\"Exactly, Mr. Big. Eleven by three inches of vibrating, pulsating, pussy stretching, high tech silicone goodness, my go-to toy when I really need to get off big time.\"\n\n\"Jesus, Marsh,\" Mom giggled.\n\n\"Anyway, I stripped and got down to business. I slipped off into my favorite Fabio fantasy, which never fails to get my rocks off, but I found I couldn't come! It was crazy! There I was, spread-eagled in my bed, with my number one sex toy buried to the hilt in my cunt, my favorite fantasy in my head and I couldn't get off. I kept working at it but I just hovered at the edge forever.\"\n\n\"Then it happened. I was flat on my back, pounding my poor pussy for all I was worth, sweating like a piglet, getting absolutely nowhere and then out of the blue I thought of Shawn on top of me.\"\n\n\"Oh my God.\"\n\n\"Yes, Jen. 'Oh my God.' Actually, 'OMFG', as the kids like to say.\" \n\n\"I went off like a bomb in less than ten seconds.\" \n\n\"Jen, I climaxed so hard I saw stars! It was flat out one of the very best orgasms of my entire life. It must have stretched for nearly two minutes - it was like huge waves crashing on the beach, one after another. My whole body felt like a puddle of molten gold. It was so intense I thought I peed the bed.\"\n\n\"God Marsh, you're starting to get me worked up now. Take it easy,\" Mom pleaded. \n\n\"I was absolutely out of my mind with lust at that point. Mr. Big was gone for good, forever replaced by lovely Shawn. My son substitute got a workout, I can tell you - mouth, cunt, ass, everything. I went for several hours and was practically unconscious by lunchtime. Every time I came, it was better, more intense than the last. I was actually screaming at the top of my lungs into my pillow by the end. I'm sure if the neighbors had heard anything, they would have thought I was being murdered.\"\n\n\"When I came to my senses, I had to run to the toilet to throw up. I was almost suicidal with guilt. I curled up in a ball on the bathroom floor and was probably catatonic for at least an hour. After that I drifted around the house in a naked daze, crying my eyes out. All I could think about was fucking my son - my pussy was dripping like a faucet and at the same time, I was consumed by remorse. It felt ten thousand times worse than when I found out Harold was cheating on me.\" \n\n\"Boy, do I ever hear you, Marsh. The first time I actually admitted to myself that I wanted Ricky, I felt like throwing myself under the bus. I thought I was a complete pervert, a horrible mother and an evil human being. Thank God I got through that.\"\n\n\"You have to get over a lot to get to where we are Jen, but in the end there's nothing like it in the whole world.\"\n\n\"Amen to that. So, there you were, struggling,\" Mom prompted.\n\n\"Yeah, I was feeling lower than whale shit,\" Marsh laughed. \"Eventually I found myself in Shawn's room, trying to understand how my world got so suddenly and thoroughly turned upside down. I tried to reestablish some maternal perspective by straightening up his teenage clutter a bit. I'm not sure how I expected to do that, standing there nude, dripping fuck oil on his carpet, but it seemed to make sense at the time. Anyway, when I was tidying up his desk, I jostled his computer and the screen saver went off.\"\n\n\"When I saw the incest forum he was logged into, I lost it. I went from abject misery to steaming rage in two minutes.\"\n\n\"Jesus, Marsh. What did you see?\"\n\n\"His screen name was 'wantmysexymom18.' There was a lengthy thread he started about two months previously, soliciting advice on how to get into my pants! God, I felt so stupid. Everything was a setup. He wanted to fuck me and used the information other boys gave him to weaken my defenses. There seemed to be at least two other kids who had actually pulled it off, seducing their moms, and I could see that he had followed their recommendations almost to the letter. He was posting almost daily, outlining his progress, right down to describing how he rubbed my feet for the first time.\" \n\n\"Right about then, I was so humiliated, I think my heart broke. I was ready to disown the little shit and throw him out of the house the minute he got home. I had never felt so used in my entire life. It was nothing short of emotional rape.\"\n\n\"Wow. How on earth did you get from there to where you are now? If Ricky had pulled a stunt like that, I would have fed his dick to the ducks and killed him - twice.\"\n\n\"Funny how these things work out, isn't it? I was ready to throw his computer out the window, but I forced myself to finish the thread. The last response to his thread was from a few days before, from someone called 'lindalovesherboy.' It just said that she had a relationship with her son and that she wanted Shawn to PM her right away.\"\n\n\"It took a little while to find his correspondence with this woman, but when I did, it changed everything all over again.\"\n\n\"Jeez, Marsh, what a rollercoaster! Don't keep me in suspense, out with it, girl!\"\n\nI could hear Marsh take a deep breath. \"This woman gave Shawn a detailed, emotional account of how she came to take her own son as her lover. She was a widow, her husband killed in the first Gulf War, serving with the SEAL teams. He was a bona fide hero. It was a beautiful story, heart wrenching and inspiring at the same time, in some ways like yours and Ricky's. From how she wrote, you could just tell how much they loved each other, man and woman, son and mom, how committed they were and how much joy they had in their lives.\" \n\n\"She was very direct about what she thought of the way Shawn was manipulating and misleading me, how selfish it was. She asked him bluntly if he was after a quick roll in the hay, or whether he wanted something like what she had with her son. She begged him to think things through before the situation got to the point where there was no going back. She seemed genuinely concerned that he not damage our normal mother-son relationship. She also had some very good advice for him about the ins and outs of a real romantic mother-son coupling and how wonderful it could be if he was willing to commit to something like that.\"\n\n\"Shawn wrote her back, somewhat defensively at first, but 'linda' was persistent and non-confrontational and gradually got him to 'fess up about how all this came about. For the first time, I really saw myself though my son's eyes. The poor boy had the hots for me so bad, it was almost comical. He could describe my body in great detail, the sneak, and he was so worshipful, so enthralled by this middle aged broad, it was sad, funny and so sweet, all at the same time. The way he described me, I could tell there was more to it than just testosterone overload. At a minimum, he was totally infatuated, that was for sure.\" \n\n\"'Linda' gradually got him to open up about his feelings for me. God Jen, it was intense, like eavesdropping on a weird Oedipal therapy session. Shawn eventually admitted that he was starting to get uncomfortable with how successful his campaign of seduction had become, that he felt very, very guilty. It was clear that he didn't count on his engineered and calculated intimacy affecting him in any way. He was so in lust, he didn't realize the fire he was playing with! The real emotions that came with his little game totally blindsided him.\"\n\n\"Their last correspondence bowled me over. He came clean with 'Linda,' telling her how he felt and that he now actually had really, unintentionally fallen in love with me. He admitted that he couldn't go forward with his plan! He said he couldn't live with himself if I found out how he had duped me. He was going to talk to me very soon and confess everything, come what may. He thanked 'Linda' profusely for saving his bacon and our relationship and he asked if he might ask her son a couple of questions, if he was willing.\"\n\n\"Jen, I'll never forget her reply,\" she sighed, choking up. \"She said 'I wish with all my heart you could talk with him, but he died in Afghanistan eighteen months ago. He followed in his father's footsteps. There are no words for how much I miss him. Love your Mom as best and honestly as you can, young man. Your time with her is very precious. Don't waste a minute of it.'\"\n\n\"Good Lord, Marsh, that's unbelievable. What did you do next?\"\n\n\"I had another good cry and then took a nice, hot bath. I thought long and hard about everything that had happened and I came to the conclusion that I would wait and see what Shawn said when he got home. If he followed through like he promised 'Linda,' I would work things out with him. If not, well, I didn't want to think about that. I prayed that he would have the courage to do the right thing. I knew if he did, then we could heal the breach between us. Then I went back to my bedroom and got out Mr. Big again and gave myself another shattering orgasm, thinking about Shawn the whole time.\"\n\n\"Good grief, Marsh, you were soooo, bad,\" Mom laughed.\n\n\"Yes I was, wasn't I? 'Linda's' parting comments really struck home with me. Who could say if I might blow a cerebral aneurysm tomorrow, or if Shawn might have some kind of accident? What Shawn did was incredibly stupid, but he paid a high price before he even had a chance to touch me. He didn't count on an emotional boomerang. He outsmarted himself!\" Marsh hooted. \n\n\"So what happened when he got home?\"\n\n\"I had to wait a long time. He came back unusually late, almost 5 o'clock. I was starting to really worry - 'Linda' and her final PM were really weighing on my mind at that point. I was terrified that Shawn didn't feel that he could face me - that he'd run off or something. You know, a mother's typical worrying. Anyway, he eventually dragged his sorry ass through the door into the kitchen. He looked like hell.\"\n\n\"It was hard to keep a straight face while I pretended to scold him for not telling me he was going to be late. When I finished I asked, 'Well, where's my kiss? Don't you love your mom?'\"\n\n\"God, Jen, you should have seen how his face fell! It looked like he was going to throw up any second. He swallowed very hard and pecked my cheek and I said 'That's more like it, but I think you can do better, especially after the past few days.' \n\n\"He sat down, and stared at the table top. He couldn't bring himself to look at me. He said we had to talk about what was happening before, that it wasn't right what he had done.\"\n\n\"I came right back at him with 'I liked it, and it sure seemed as though you did too.' \n\n\"I remember exactly what he said to me then, Jen. He looked me straight in the eye then and said point blank, 'This is so hard, Mom, but I've got to tell you something before I go mad. Do you know I've been trying to seduce you for the last several weeks? I wanted to have sex with you, Mom.'\" ",
        "\"I nodded and looked straight back at him and just said 'Yes, I know, son.'\"\n\n\"The poor boy just lost it at that point. He sat there with tears streaming down his face, saying he couldn't understand why I didn't hate him, why I didn't disown him and throw him out of the house, what a terrible person he was.\" \n\n\"I told him that what he tried to do was the most monumentally stupid act of his young life, but what he was now experiencing was what happened when naive young men tried to play high stakes, grown up games with their mothers. I said he could have very easily destroyed our relationship for the rest of our lives. Then I dropped the bomb on him.\"\n\n\"I told him 'linda' gave him some priceless counsel and the only reason he wasn't walking down the street with his suitcase in hand was because he was now being totally honest with me and that he was smart enough to have followed 'linda's' very good advice. He just sat there with his mouth hanging open. I got up then and hugged him and told him it was okay, that I forgave him, because he was still my son and I still loved him very much.\"\n\nAt this point, Marsh broke down a little bit and apologized. \"Sorry, Jen. I still get very emotional when I think about that moment. You're the only person I've ever told about this. You have no idea how much it means to be able to talk with someone who understands what I went through.\"\n\n\"Nonsense, Marsh. Skin sisters, remember? It's a privilege to hear this from you. Now, here's a Kleenex. Relax a bit and then you can finish the story.\"\n\nAfter a couple of minutes, Marsh gathered herself and continued. \"I told him how I came across his nasty little forum and how I read everything in the thread and with 'linda,' and how that made me feel. After that, I needed to get Shawn settled down so we could talk some more, so I did what mothers always do to get their sons back on an even keel.\"\n\nMom laughed delightedly. \"You fed him!\"\n\nMarsh began laughing too. \"Yup. I fried up a couple of steaks, baked some potatoes and made a salad. I even let him have a beer.\"\n\nMom was still chortling. \"The one page men's maintenance manual. Feed me, fuck me, let me sleep in.\"\n\n\"Yes, but that's getting a little ahead of the game.\"\n\n\"What happened next?\"\n\n\"I fed him his dinner and just sat with him and was good old comforting, reassuring Mom, trying to get him out of his hurt puppy mode. He seemed to be more relaxed after he wolfed down his supper and it looked like he could hardly believe that the sky hadn't fallen. I got him up from the table and went into the family room and sat him on the sofa.\" \n\n\"I put myself right next to him, our legs touching and said 'Cards on the table time, Shawn. Can you be totally honest with me again?' For a minute, he looked like he was going to bolt out of the room, but then he settled down. 'I just have a few more questions and then we can put this all behind us, okay?' \n\nHe seemed relieved to hear that and he said to go ahead. 'Those things you said to 'Linda,' about being 'in love' with me as a woman, are they really true?' He was having a hard time speaking at that point, but he nodded 'yes.' 'Do you still want to sleep with me?' Again, he nodded 'yes.'\" \n\n\"Then I asked him to think very carefully before answering my next question, which was 'How do you think I feel about you right now, as a son and a man? He said he thought that I was probably very disappointed and disgusted.\"\n\n\"'What if I told you that your little game had its desired effect on me, that I was seriously considering become intimate with my own son?' I asked next.\"\n\n\"He said, 'I don't think I could ever believe that, after how I behaved.'\"\n\n\"Do you think now that you're going to fuck your mom?\"\n\n\"He just shook his head. By now he was getting close to tears again and my heart went out to him. He was really in agony.\" \n\n\"I took a deep breath at that point and jumped off the cliff. I told him, 'Well, you're going to have to revise your thinking on that point, because I want you now too, Shawn. You're not going to fuck your mom, but you are going to make love with her, starting right now.' \n\nI took him by the hand then and led him to my bedroom. As we were walking up the stairs, I kissed him and said 'The world is a cruel, uncaring and uncertain place, and a son's time with his mother is precious.'\"\n\n\"God, Marsh, what a story! You were so brave, I can't believe it! I could never have handled that the way you did, not in a million years.\" Mom paused for a moment. \"How was it, that first time?\" she whispered.\n\n\"Shawn was awkward, over-excited and clumsy,\" Marsh giggled. \"But it didn't matter, it was still perfect. He only lasted about a minute, but then I was right there with him. When he came inside me, that first time, it was indescribable. I went off like a kilo of C4 and scratched his back bloody. That cum made everything I did with Mr. Big earlier that day seem like a fart in a wet paper bag, I'm telling you. He was ready to go again in about two minutes (God, aren't young men wonderful?) and did a little better technique-wise, but still needed some encouragement and coaching. Even so, I came just like the first time the minute he creamed me again. I couldn't believe how that set me off.\" \n\n\"We did it three more times that night and it just got better and better. By the time we finished around four in the morning, I was a goner. Never in my life, ever, had I been fucked like Shawn did me. Everything he did, I could just feel this incredible combination of amazed adoration and blazing lust absolutely radiating from him, like a sexual blast furnace. I have never felt so completely and totally loved and desired in my whole life, Jen. That night, he truly gave me his heart and I felt the same way about him. I haven't looked back since and have not had even one minute of regret.\"\n\nMarsh's voice dropped to the point where I couldn't hear her any more and I could tell she and Mom were whispering something to each other, giggling. Then Marsh spoke up in a normal voice. \n\n\"Why don't you come in and sit with us and hear the rest of the story, Rick?\"\n\nI stepped into the kitchen, wearing a shit-eating grin and throbbing erection, both Marsh and Mom smiling at my discomfiture. Mom grabbed me by the hand and pulled me to her side. \n\n\"Ricky, you are sooo busted!\"\n\n\"Guilty as charged, Mom. Am I grounded?\" I asked, slipping my arm around her shoulders.\n\nMarsh smiled and got up to freshen her cup of coffee, pausing to kiss my cheek.\n\n\"It's perfectly okay, Rick. I would have told you the story anyway, if you hadn't already been around.\"\n\nSeating herself again, Marsh smoothed her skirt and sipped from her mug. I sat down next to Mom, pulling her out of her chair into my lap, her arms around my neck as she settled in. Marsh smiled as Mom got comfortable. \"I just love looking at the two of you together, Jen. It helps keep me sane when Shawn can't be with me and reminds me how lucky I am.\"\n\n\"Anyway, to continue. The next morning, I called the school and put Shawn in as sick for the rest of the week. We ate, napped just a little and made like minks for three days straight. By the time the weekend rolled around, we were both so tired and sore, we slept for almost eighteen hours. The rest of the weekend, when we weren't making love, we talked about the future.\"\n\n\"There was a boatload of stuff that had to be worked out. We had to deal with our commitment to each other, what we expected and the ground rules now that we were together. The only time I got upset was when Shawn said he wanted to change his college plans and stay local to be with me. It was so sweet and downright stupid at the same time, it made me want to cry.\" \n\n\"I took a deep breath and told him to bear with me, because I was going to have to stop being his lover for a minute and go into 'mom mode.' I said that a young man with his abilities simply did not walk away from early admission and a full ride at Tech just to get laid more often, regardless of how much he loved his girl.\" \n\n\"I explained that I wanted us to be together for the long haul, but that he was still young and had some more maturing to do and that being away at college was essential for that. It was so hard, but I told him I couldn't see any other way to test and strengthen our relationship, to make sure it would last. I knew I was taking a risk that he might find someone his own age, but I didn't see any other way around the problem. So, we agreed that he would go to Tech and I would go see him every other weekend, except during exams.\"\n\n\"It turned out that my worries were just that, a few unfounded fears. Once we were together, Shawn absolutely blossomed for his senior year. He became so assured, so confident and outgoing, it was like night and day.\" \n\n\"There was one Friday when he came home from school, sometime in early December, I think it was. I was really randy for some reason. I don't know why, because we were making love at least once a day, and he had taken me in front of the stove that morning before he left for school.\"\n\nMarsh paused for a moment and then asked rhetorically, \"Jen, what is it about the kitchen that sets a son off? I swear, if I didn't know any better, I'd say that bending me over the sink and hiking my skirt up is Shawn's favorite position. We did that so often, I stopped wearing panties when he was home. And I still don't!\"\n\nPausing her story to sip her coffee, she asked, \"You know what he wanted for his 21<sup>st</sup> birthday? I was all set to show him a wonderful night on the town, fancy dinner and drinks, dancing, a little clubbing, the whole nine yards, but he didn't want that. He said, 'Mom, all I want is for you to fix me a steak and salad \u2013 just wearing your apron.'\" \n\n\"So, that's exactly what I did,\" Marsh continued. \"I added my own touch, putting on a garter belt, seamed stockings and high heels. He went absolutely apeshit, Jen! First, he put me on the counter top and ate me to a couple of juicy cums. Then he laid me over the kitchen table and took me quickly from behind. He came in just a couple of minutes but stayed totally hard in me, he was so excited. Then it was doggie style on the floor for almost a half hour \u2013 I came twice again before he did. The only reason we stopped was because my knees and elbows were getting sore,\" she confessed with a throaty laugh. \"Of course, my nice new stockings were totally ruined at that point, but it was so worth it!\"\n\n\"Needless to say,\" she went on, \"Dinner got cold. After I cried 'Uncle', Shawn picked me up and carried me into the den, tucking me in with a couple of blankets on the sofa. He brought our dinner out, along with a fancy bottle of wine he bought for the occasion. We sat and ate and drank, watching movies the rest of the evening. In the end, I think I enjoyed our kitchen sex and cuddling even more than if we had gone out like I planned.\"\n\n\"Oh yes,\" Mom agreed. \"The kitchen is, uhm, a special place for Ricky and me also.\" \n\nShe went on to describe our first time there, after our reconciliation, omitting a few of the more intimate, kinky details. \"I guess, in the end it's all about love and comfort,\" Mom concluded. \"It's a natural extension of a mother and son being together. I'd bet you that any son who's ever dreamed about doing his mom has at least one fantasy scenario that involves the kitchen.\"\n\n\"You know, Jen, I have to confess that it gives me a thrill to do Shawn there too. I guess it's just the sheer perversity of the idea. After all, when you think about how much traditional mothering actually happens there, it feels like a real taboo place, almost like fucking in church.\"\n\n\"Marsh, you don't me to say that you and Shawn have...\"\n\n\"Oh, goodness, no. As much as I like the idea of breaking rules, that's just too risky. Anyway, I don't think we need the extra kick from something like that. Things are hot and heavy enough all by themselves, just knowing my son is my lover.\"\n\nSitting back in her chair, Marsh stretched and took a long pull from her coffee mug, briefly lost in thought as she got back on track with her story. \n\n\"Anyway, back to that December Friday. Even though we did the nasty in the kitchen that morning, there it was - I needed to fuck my son, again. When Shawn walked in the door, I was upstairs in our bed, naked and waiting. When he found me, he stripped down in about ten seconds and we had a lovely, sweet session.\" \n\n\"What I remember was that his cell phone went off nearly a dozen times while we made love, not a big deal, but a bit annoying. Afterwards, while we were showering together, he apologized and promised that he would make sure to silence his cell in the future.\"\n\n\"Jen, those calls were all from girls, wanting to know what he was doing for the weekend! One called three different times! Shawn was chuckling as he paged through the messages. He said, 'You know Mom, it's so ironic. Just a few months ago I would have sold my soul to have girls pursuing me like this. Now though, I can't be bothered. A high school teenager just can't compete with a beautiful, intelligent woman. I admit it - I'm spoiled forever. I have everything I'll ever need right here at home.'\"\n\n\"What could I do after that, Jen? I took him straight back to bed and ravished him until dinnertime. That was the real turning point in our relationship - it was then that I truly knew we were going to make it work. What a great moment that was!\"\n\n\"So that's how it is. Shawn is busting his ass for us now, hoping to graduate a semester early. He's still got a year to go and he's already getting job offers, good ones. He's started to get after me lately, says he wants me to go back to school and finish getting my degree in design and architecture when he graduates! I'm thinking about it very seriously. I can't believe how much our life has changed in the past two years - I have to pinch myself to confirm it's all really happened.\"\n\n\"Anyway, that's the Readers Digest version of Shawn and me. How about you two? Anything new? You're still both honeymooners in effect.\"\n\nMom took a reflective sip of her own coffee before she replied.\n\n\"Yes and no, I suppose. I guess the novelty of things, the excitement of exploring with your new lover is there, but there are incredible differences, too. I'm amazed at how settled, how grounded I feel now. I know with absolute certainty who I'll be spending the rest of my life with. I feel, well, complete in a way I would never have thought possible in the past. It's complicated but simple all at once. I don't think I could have a warmer, closer, or more romantic relationship with any other man, but at the same time, I feel so excited, so wicked to be sleeping with my own son!\"\n\n\"Listen to me ramble on, Marsh,\" Mom blushed. \"It's almost impossible to describe, but I know it's right and it's what was meant to be for us.\"\n\n\"Actually, I think you said it pretty well, Jen.\"\n\n\"Marsh, I can't get over how different your relationship started compared to us, but how similar things ended up. I told Ricky during the first night we were together that I had been a fool for taking so long to be with him, making him wait and putting up with so much emotional idiocy from me, but he wouldn't hear of it,\" she said, running her fingers through my hair.\n\n\"It's true, Mom,\" I confirmed. \"I think it all unfolded the way it did for a reason. Everything that happened, good and bad, got us to a place where we truly understood what we meant to one another. I'm positive that your conversation with Mom when she came back from Vancouver was a key moment too, Marsh.\"\n\n\"I didn't feel it at the time,\" Mom interjected, \"But by the next morning, it became clear that what you said in the kitchen had a big subconscious impact on me. It freed me from worry about outside issues and allowed me to focus on what was important between my son and me. We owe you a huge debt.\"\n\n\"I'm glad I was of help. It's wonderful to think I had at least a small role in the creation of something so beautiful.\"\n\n\"Did you guys ever have any more contact with 'Linda?'\" Mom asked.\n\n\"Oh, yes,\" Marsh affirmed. \"I had Shawn initiate a chat with her the next day. I got online with her and gave her the scoop on our confrontation, how well Shawn handled himself, how proud I was of him. I thanked her from the bottom of my heart and Shawn did too. Then I told her we were together. She was initially surprised, but then thrilled for us. I told her I was going to light a candle in her son's memory the next time I went to Mass. She said I was going to make her cry, but she was honored we thought of him that way. Long story short, we began having private chatroom sessions from time to time and within a month, Shawn sent her a webcam with instructions on how to set up sessions. We Skype at least twice a week. She's now one of my closest friends.\"\n\n\"Speaking of videoconferencing, would it be okay if I told Linda (that is her real name, after all) a little about you guys? - No identifying details, of course.\"\n\nI glanced at Mom and she nodded. \"I think it's fine, Marsh. We'll leave it to your discretion how much you want to tell her.\"\n\n\"Thanks, Rick. I think she'll get a real lift out of your experience. I always thought is was very romantic and inspiring.\"\n\n\"You can add one detail to our story if you like, Marsh,\" Mom quietly added.\n\n\"What's that, Jen?\"\n\n\"I'm pregnant.\"\n\nMarsh just sat there stunned for almost thirty seconds, mouth hanging open, speechless in shock, glancing back and forth between us, at a complete loss for words. \n\nI chuckled and supplied her with her own response.\n\n\"I think the term you're looking for here is 'OMFG', Marsh.\"\n\n\"Jesus, you didn't waste a minute, did you, Jen? Did you plan on this? Aren't you, ummm, worried about the baby, if it's going to be, uh, completely healthy?\" Marsh asked with concern.\n\n\"Marsh, once I knew we were going to be lovers, it never occurred to me NOT to do this,\" Mom said emphatically. \"As far as I'm concerned, it comes with the package. If I'm going to fuck my own son, live the rest of my life with him, then by God, I'm going to have his children too. Anyway, about the other thing \u2013 I did do my homework. Given my age as well as the genetic aspect, I was worried at first. It wasn't easy to track down the information, but in the end, it seemed as though the risks of us being related were only a bit more than those any other woman my age might have for something like Down's syndrome.\"\n\n\"What about you Rick? How do you feel about all this?\" Marsh inquired.\n\n\"We talked about it a lot, Marsh. In the end, we just knew that regardless, any child we had was going to be loved to death, no matter what. Anyway, how can you not want to have children with the woman you love?\" I asked back. \"Besides, once you've become a motherfucker, how many other taboos are really left? Mom and I are going to have a family together because that's what real couples do. Why should we be any different from anyone else?\"\n\n\"That's well said, Rick. Bravo.\"\n\n\"I have to admit, though, Mom and I agree that it's also an incredible turn on for both of us,\" I added with a smile. \"I guess we also like breaking all the rules.\"\n\n\"Well, congratulations \u2013 it's wonderful news. I can't wait to tell Shawn. I have to say though, I think I'm getting a bit jealous.\"\n\n\"Have you and Shawn talked at all about it?\" Mom asked.\n\n\"No, Jen, we've been concentrating on getting him graduated and finding a job.\"\n\n\"You really should have a discussion with him,\" I suggested. \"I admit I don't know Shawn that well, but I think you might be very surprised at how he feels. Talk some more with Mom too. She's not an expert, but we've both learned a lot over the past few months. Mom was thinking about it and looking at the risks from the beginning.\"",
        "\"I will most definitely do that, Rick. Wow, you guys have really got me thinking now. You're a bunch of enablers, that's what you are!\" she laughingly scolded.\n\nWith that, Marsh drained her mug and stood. \"Well, I need to get home and have a nice hot soak. My poor little tush needs some R&R.\"\n\nAs she opened the back door, I called to her. \"Say hi to Mr. Big for us!\"\n\nMom was scandalized. \"Ricky!\" she yelled, punching my arm.\n\nMarsh just laughed. \"Is he too old to spank, Jen?\"\n\n\"I'd do it in a minute if I didn't think he'd get off from it. See ya, Marsh.\"\n\n\"Later, Jen. Behave yourself, Rick,\" she called out over her shoulder as she went out the door, hips swaying.\n\n<center>***</center>\n\nThese thoughts and recollections were running through my head as we cleaned up and got ready for the welcome party for Mom. She decided we should shower separately, as there was some doubt that we would get out on time if we got started again with any good clean fun. I had to admit she was probably correct, so I acquiesced and let her bathe first. When I came out of the shower, toweling my hair, Mom was putting the finishing touches on her makeup.\n\nGlancing at me by way of the mirror, she regarded me gravely for a moment and asked, \"Are you ready for the reception, darling?\"\n\n\"Yes, I am, m- Jen.\"\n\n\"We can't have any slip ups, Ricky, either of us,\" she reminded me seriously, easing her reminder with a small smile.\n\n\"My game face is on, gorgeous. I'm not going to let anything ruin what we have together. Once we step out that door, it's Jenny, Jen, Jennifer no matter what,\" I reassured her.\n\n\"Thanks, sweetie pie. I know I can count on you,\" she smiled, relief in her voice. \"I also know I really don't have to remind you, it's just...\"\n\n\"It's just what moms do, pretty lady,\" I chuckled. \"I'm well-used to it and I truly don't mind.\"\n\n\"Also, just remember this, gorgeous, behind closed doors at home, and especially between the sheets, you're always my beautiful, loving mother.\"\n\n\"You're such a sweetheart, son of mine. You make me feel so special,\" she sighed, a small catch in her voice.\n\n\"Only what my queen deserves, nothing more. Now, lets see what ensemble you're favoring us with today.\" \n\nShe was wearing the same outfit she went to the deposition in, back in early summer. The combination of the green silk blouse, black skirt and matching jacket looked just as gorgeous today as it did before, but with one difference.\n\nI came up behind her, encircling her waist with my arms, nuzzling her hair. Pulling her coiffure to one side, I kissed the juncture of her shoulder and neck, lightly nibbling. Sighing, Mom leaned back into me, rubbing her ass against my perpetual boner.\n\n\"Mmmmmm, you're absolutely determined to make us late, aren't you Ricky?\"\n\n\"You're the guest of honor Mom, by definition, you can't be late.\"\n\n\"You know that's not true, you naughty boy. Now, settle down and let me finish here.\"\n\nI ran my hands up under the front of her jacket and received a surprise.\n\n\"Mom, you're not wearing a bra!\"\n\n\"No shit, Sherlock,\" Mom laughed. \"Nobody can tell with the jacket I'm wearing \u2013 only you and I will know. I like how the silk feels on my nipples,\" she confessed with a whisper.\n\nCaressing her tits one last time, I gave each of her tips a light tweak through the satiny fabric of her blouse and turned her around to face me.\n\nKissing me lightly, she cooed and undid the towel at my waist. As it dropped to the floor, she gave me a couple of quick strokes, pausing once to cup my balls, tracing her finger lightly along my taint.\n\n\"Careful, lady,\" I growled. \"That thing's loaded and might go off.\"\n\n\"I'm finding I like living on the edge,\" she teased, eyes sparkling. Giving me one last squeeze, she stepped away, laughing. \"Now, put that monster away before someone gets hurt,\" she admonished. \"I'm going to pick out your tie.\"\n\n\"God, you're a hard woman. Don't you feel guilty teasing me like that?\"\n\n\"And you're a harder man, exactly the way I like 'em. And no, I don't feel the least bit guilty. Every woman needs a hobby.\"\n\nLaughing, I smacked her bottom as she walked to our suitcases.\n\n\"Ouch! You're a beast, beating on your poor mother like that!\" she complained, absently rubbing her buttock. \"Now, where did I put that red-striped Brioni?\"\n\n<center>***</center>\n\nAlmost miraculously, we managed to finish getting ready without any further molestations. Just as she was making the final, motherly adjustments to my appearance (Moms will always and forever fuss about how their sons look before big social events, what's a guy to do?), the phone rang. The front desk informed us that our limo was ready and asked us to be in the lobby in five minutes.\n\nWe were initially taken to the practice's offices for a reception. It was illuminating to watch Mom in her own element, something I had seldom seen before. I had always known that she was an accomplished attorney, based on her rapid rise to partnership and the amount of responsibility she had in the practice, as well as her handsome income, but to see her interacting with her colleagues put an entirely different spin on things. \n\nIt became very clear in watching her that she wasn't simply thought to be merely a good lawyer, she was considered an authority in her area of expertise. A sort of informal, jovial testing seemed to be going on as she talked with her new partners, being sounded out on complex and controversial issues in her specialty as well as more wide-ranging legal issues. Through it all, I could see her new associates gradually becoming more and more impressed with her acumen as her friendly interrogation progressed. I could also tell from some not-so-covert glances that her physical charms were not going unappreciated, either. \n\nI was surprised that I didn't feel jealous at all the attention she was receiving. If anything, I felt even more proud of her as my mother and my lover than I had at any previous time. It really hit home then how unbelievably fortunate I really was. I smiled and thought to myself, \"Rick, you are one lucky motherfucker.\"\n\n\"Are you enjoying our little gathering, then?\" \n\nI was startled out of my reverie by a deep voice next to me. It belonged to an imposing figure, an elderly, cue-ball bald gentleman, sporting a quintessentially English, Harris Tweed three-piece suit. He had an honest-to-god, old fashioned, golden pince-nez perched on his hawk-like nose. Even accounting for his age-related stoop, he towered over me by a good three inches. He looked to be around seventy years old, but was lean and fit in appearance.\n\nHolding out his hand, he offered an introduction. \"Richard, I'm Seamus MacLeish. My brother Archie runs the practice. He's the one who persuaded your lovely lady to join this band of pirates. I'm more or less retired,\" he went on to explain. \"But they do trot me out from time to time for occasions like this.\"\n\n\"It's a pleasure to meet you, Mr. MacLeish.\"\n\n\"Please, don't stand on ceremony, I insist. I'm 'Shay' or, if you prefer, 'Clay' to my friends.\"\n\n\"Thanks. Please call me Rick. Can you explain 'Clay' to me?\"\n\n\"It dates back to my time at University. It's short for 'Claymore' \u2013 I did some sabre fencing in my undergraduate days.\"\n\n\"Clay it is, then,\" I affirmed.\n\n\"I hope you're not feeling left out of the festivities. I would guess you understand that Jennifer tends to draw a crowd wherever she is. She has a rare combination of intellect, grace and beauty that few women are blessed with.\"\n\n\"Actually, I spend most of my time thinking that I'm the one who's blessed, Clay. I'm very, very lucky.\"\n\n\"That you are, my friend. I'm glad you recognize that.\" Changing the subject, he began his own polite interrogation. \"I understand you're in the restaurant business.\"\n\n\"Soon to be, I hope. I'm looking to find a suitable location to open my own place once we get moved.\"\n\n\"I may be able to be of assistance to you in that regard.\"\n\n\"I couldn't possibly impose on you for something like that, especially on such short acquaintance.\"\n\n\"And I normally wouldn't make such an offer to someone I didn't know well, but you must remember you are part of our professional family now. Besides, I have at least two ulterior motives, if you will allow me to explain.\"\n\n\"First, I have an entire career's worth of connections in this city, including in commercial real estate. I know where most of the bodies are buried,\" he grinned. \"If there's anything I can do that will make Jennifer's start here less stressful, either directly or indirectly, I'm going to pursue that. It's in the interests of the practice. That would include reducing her worries about the inception of your own business.\"\n\n\"Secondly, I have a selfish reason for helping you. I'm the chair of the local gourmet society. Fine dining has been a passion of mine for almost fifty years. I'll not pass up an opportunity to cultivate a relationship with an up and coming new chef if I can help it.\"\n\nAs Shay described his intentions, it became clear that I had stumbled on to an unexpected piece of good luck and a broad grin broke across my face. \"In that case, I'll accept gratefully. We can discuss this more over dinner, if you like.\"\n\n\"It will be a pleasure, my boy, let me assure you.\"\n\nFeeling a hand on my shoulder, I turned to find Mom standing behind me.\n\n\"Rick, I'd like you to meet Archie MacLeish.\"\n\nArchibald MacLeish was very much Seamus' brother, except where Clay was somewhat stooped, Archibald was, at ten years younger, still ramrod straight. He was easily as trim and fit as his elder brother, if not more so, but where the elder MacLeish sported a gleaming pate, Archibald had a muddy, unruly mop of red hair gone most of the way to silver-gray. No pince-nez for the younger MacLeish, though. A pair of utilitarian reading glasses hung around his neck, suspended from a silver chain. Where the elder brother favored rustic tweed, Archibald clearly leaned to Saville Row, as evidenced by a very elegant, worsted gray wool suit. He was my height, looking me directly in the eye as we shook hands.\n\n\"Rick, it is truly a pleasure to meet you. I had always wondered what kind of a man had captured Jennifer's heart. I must confess though, I had pictured someone a bit different.\"\n\n\"Did I really give you the impression of someone different, Archie?\" Mom inquired.\n\n\"I suppose I just assumed that a lady as talented, educated and cultured as you would have landed a massively successful, 'captain of industry' type. You know, weekends yachting in the Hamptons, a box at the Met and philanthropy, that sort of thing,\" he laughed easily. \"Just goes to show how dangerous assumptions can be.\"\n\n\"I guess I'm just a little less conventional than you imagined, Archie,\" Mom stated drily.\n\nI struggled to maintain my composure after hearing Mom's retort, nearly choking on my drink. \"I guess you could say we're a somewhat less than usual couple,\" I agreed, and then it was Mom's turn to suppress a laugh. \"Even so, it works for us. I can't imagine being with anyone else, \" I affirmed.\n\nMom stepped up next to me and slipped her arm around my waist. \"Same for me, Archie. What's not to like? Talented, hard working, romantic and handsome, this one is. Of course, I'll need to take him down a couple of notches after all those compliments, but that's for later,\" Mom laughed.\n\n\"Jen, I thought it was agreed that we would keep the sadomasochistic elements of our relationship a secret,\" I joked, a deadpan expression on my face.\n\nArchibald and Seamus paused and looked at me in shock, not sure that they had actually heard what I just said. When I grinned and winked at them, they simultaneously snorted in their drinks, setting up a stereophonic coughing spell. Dabbing, the front of his suit with his handkerchief, Archie cleared his throat, eyes watering, while Clay struggled to get his breath back. \n\n\"Oh, and did I mention he has a wicked sense of humor, too?\" Mom's tinkling laugh attracting all eyes in the room to us.\n\nFinally regaining his composure, Clay put his arm over my shoulder, turning to his brother. \"By God, Arch, I think we need to get to know this young man better. I'm beginning to appreciate what Jennifer must see in you.\"\n\n\"Speaking of which,\" Archie interjected, \"Would I be out of line in inquiring how you two met? You two seem so well matched to each other, it's immediately apparent that you share a very close bond.\"\n\nI glanced at Mom, waiting for her to take the lead. We had discussed things before we left the hotel and knew this was likely to come up. \n\n\"We've known each other for quite a few years, Archie,\" she explained. \"There's always been a strong attraction, but neither of use was in a position in our lives to do anything about it until recently. Our careers were starting to move us away from each other and I guess, when we thought about it, we didn't want that to end our friendship. Over the past several months, we finally acknowledged what was really there between us. Thing have been wonderful since then. I sometimes find myself wondering why we waited so long.\"\n\nArchie nodded in assent. \"Often those things which are most important in our daily existence are under our very noses, and we don't recognize them because they are too close to us. When we are forced to step back, then we see what is truly valuable in our lives.\"\n\nClay turned to me and asked, \"What about you Rick? I know Jennifer's story, the tragedy of her parents, her estranged son living in New York. I'm curious about your family. Do you have any relatives in the Pacific Northwest?\"\n\n\"No, Clay. My only living relative is my mother.\"\n\n\"I see. If it's not out of line, may I ask what she thinks about you and Jennifer?\"\n\n\"Oh, she's always been my biggest supporter and fully approves of me and Jen,\" I replied, glancing at Mom.\n\nMom quickly took a sip from her drink, eyes dancing as she returned my glance. I was beginning to get a little nervous about the direction of our conversation, but Mom seemed to be enjoying herself hugely. Still, there were obviously no flies on the MacLeish brothers and I was starting to worry that I might let something slip or create an inconsistency I couldn't explain away. Once again, Mom saved my bacon.\n\n\"I think it's safe to say that Rick's mother and I get along very well. It's really a shame that you probably won't get to meet her \u2013 she doesn't travel on account of her agoraphobia and Manitoba is a long ways from here.\"\n\nArchie and Seamus made some sympathetic noises in my direction, which I acknowledged and then Mom stepped up to the helm, steering the good ship Incest away from the reef of discovery. \n\n\"Clay, I understand that you have invested a significant amount of effort in selecting the site of our dinner this evening. I'd love to hear what you decided on.\"\n\nWith that, Seamus was off to the races, giving Mom and me a blow-by-blow description of the plans for our evening meal. I heaved a large mental sigh of relief and fully relaxed for the first time since our arrival.\n\n<center>***</center>\n\nWe mingled for another hour or so, getting to meet the other partners in the firm as well as the support staff. A couple of the paralegals and one of the female associates had me in their sights briefly, but when it became clear I only had eyes for my beautiful lady, they retracted their hooks and skulked off in search of other prey. I could tell Mom found their interactions with me to be highly amusing. I knew that I'd be in for unmerciful ribbing once we got back to the hotel, but what can you do? \n\nEventually, the reception broke up and the MacLeishes and a couple of other senior partners took us to dinner at a small, unpretentious bistro overlooking Coal Harbor. \n\n\"I know it doesn't look like much,\" Seamus explained, \"But I can absolutely guarantee you that you will be having some of the finest, freshest seafood in the city tonight. Also, essentially everything else you put in your mouth this evening is locally grown. I can recommend the mussels and halibut without reservation, but I have it on good authority that the chef also has taken delivery on some live Geoduck, if your tastes run in that direction.\"\n\n\"Gooey duck?\" Mom asked.\n\n\"Local giant clams, Jen,\" I explained. \"They live three to four feet beneath the surface in tidal mud flats.\"\n\n\"The name is based on local Indian dialect, meaning 'to dig deep',\" Archie added. \"They are a highly sought after delicacies in the Far East. The Japanese have been known to pay up to two hundred dollars a pound for them, so most of the harvest goes to export.\"\n\n\"Well, I know that I don't need to look at the menu, if the chef has them,\" I stated. \"I'm in your debt, Clay. I've always wanted to try them and now I'll have the opportunity.\"\n\n\"Count me in as well,\" Mom declared. \"I'm always up for an eating adventure.\"\n\n\"Bravo,\" Seamus applauded. \"Nothing like jumping in with both feet, I always say. I admire the adventurous spirit you both show.\"\n\nThe waiter made his appearance and we placed our orders. By way of another friendly test, Seamus deferred the choice of wines to me. I negotiated a tasting flight of five wines with the sommelier, Seamus arching his eyebrow in polite surprise at several of my choices. \n\nI explained how I planned to drink my choices, emphasizing the pairings with the different modes of preparation of the clams, one to go with the garlic wine saut\u00e9, another for the sashimi with mirin, the third with the traditional spicy Korean recipe, and so on. He was politely skeptical at first, but as we worked our way through the meal, he was very pleasantly surprised by several of the combinations, raising my stock considerably. \n\nHaving finally established my bona fides to his satisfaction, Seamus and I launched into an in depth discussion of my restaurant plans and by the time dessert rolled around, we had formulated a plan of action for the following day. He actually took time to call a friend, one of the most knowledgeable commercial realtors in the city, to set up an exploration for us the following morning. It was agreed that Mom would accompany us so as to get a feel for the city, which I would have insisted on anyway. The following day would be devoted to her visiting her new practice during working hours, while Seamus would take me out to lunch. Our visit was shaping into quite the whirlwind.\n\nBack in the hotel that evening, I was surprised that Mom did not tease me immediately about the women who were scoping me out at the reception. She must have been exceptionally horny, because she wasted no time in getting my head under her dress, basically pushing me to the floor of the entryway in our suite and straddling my face the moment the door was closed.\n\nI found her crotch soaked and her thighs slick with woman juice. The air under the skirt was thick with her scent, a veritable hothouse of damp panties, matted, wet pubic hair and slick, engorged labia. I felt like I was slipping into a thick fogbank of aroused female essence. She pulled the gusset of her panties to one side as she lowered herself to my eager mouth, her fingers on either side of her petals as she opened her flower to my tongue.\n\nNeedless to say, I enjoyed my second dessert.\n\nAfter eating her to two quick, but intense climaxes, I was finally able to maneuver her out of her clothes and into our bed, where I promptly got rode hard and put up wet. To continue the mixed metaphor, when Mom gets the bit between her teeth, it's best to let her have her way, and that night was no exception. I was well rewarded for my patience, though. \n\nAs we cuddled in the afterglow, catching our breath, Mom idly traced her fingers over my chest and abdomen while I held her under my arm. \n\n\"I'm not wearing you out, am I Ricky?\"\n\n\"Not a chance, Mom.\"\n\n\"I did warn you how horny I get when I'm pregnant.\""
    ],
    "authorname": "CPBaudelaire",
    "tags": [
        "mother/son",
        "incest romance",
        "romance",
        "mom son",
        "anal",
        "bisexual female",
        "pregnancy",
        "pregnant",
        "oral sex",
        "lesbian"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/beyond-the-borderline-bk-02"
}