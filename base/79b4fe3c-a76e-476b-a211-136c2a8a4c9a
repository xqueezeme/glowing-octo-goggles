{
    "title": "School for Scandal: Period 02",
    "pages": [
        "This is a straight up no-frills wish-fulfilment/gratification scenario based around a loose school satire for people that enjoyed the first chapter, which can be found in the 'Group sex' category. This submission is more tongue in cheek and belongs more firmly in the humour/satire section.\n\nAs with the first chapter, feedback and comments are appreciated, as are votes.\n\n*\n\nPeriod 2\n\nMy mind was still reeling from the events of my first lesson at the school I was substituting in today. I was flushed, short of breath, and practically having to lean against the wall of the drama studio to keep my knees from buckling underneath me. My consternation, however, was not because I had been subjected anything like an intellectual tour-de-force from my students, nor was it that the lesson had degenerated into the usual cavalcade of abuse, incivility and derision that usually greeted me as a supply teacher. \n\nIt was that I had witnessed a carnival of erotic debauch and excess that both shocked and aroused me to the core. Students undergoing rehearsals of the upcoming school play 'What the Butler Saw' had not only been unfaithful to the text, but had stretched the concept of artistic interpretation to its very limit, broken it, and come out the other side absolutely saturated in cum. What I had been privileged to see was truly incredible, and had culminated in what I beheld in front of me now: two giggling eighteen-year-old schoolgirls engaged in a succession of deep, cum-filled kisses as they struggled to cinch themselves back into the black latex stockings and vertiginous platform heels that, for some inconceivable reason, comprised the uniform in what I was increasingly seeing as less of a school and more a hotbed of lascivious activity. What was more, it all appeared to be sanctioned by the staff, who, to my incredulity, actually appeared to participate in this illicit behaviour.\n\nSpeaking of members of staff, I had one in front of me now. Miss Taylor, a six-foot blonde of the kind of beauty so staggering and intense it makes you afraid to look at her, improbably clad in what can only be described in a PVC catsuit, had just handed me my schedule for the day. I had havered over getting involved in the saucy activities of that lesson myself, despite an invite from a dildo-plugged student of such scalding sexuality that I had nearly shot my load on the spot. My load remained; at least for the present. My composure had utterly vanished.\n\nMiss Taylor shooed the students out of the drama studio and urged them onto their next lessons. Rachael and Amy, my two star pupils, were still connected by the chin with a slender rope of cum as they passed me at the door, and went out into the corridor without the slightest concern about their appearance. They even light-heartedly compared the amount jizz that still clung to their hair. Rachael, who had kneeled underneath two dicks that had jetted their loads onto her friend, had her blonde tresses heavily matted with the stuff.\n\n\"Great lesson sir,\" said Amy as she left, finally fitting her huge boobs back into her bra, not before licking an errant droplet of cum from her nipple.\n\nTrying to get some answers, I buttonholed Miss Taylor. \"Excuse me,\" I said, strangely unsure of whether I should have the temerity to draw her attention to this outrageous and saucy behaviour, \"but I can't help but have noticed... there's something different about this school.\"\n\nMiss Taylor smiled. \"I've heard it called that before.\"\n\n\"Well... it's just that... is this normal... procedure?\"\n\n\"That's how we like to do things round here. You seem to be fitting right in.\"\n\n\"But, you appreciate my concern, surely. It's just that there's something... a little odd about this place.\"\n\n\"There's no big mystery, Mr White. This is a school for the sexually gifted. We take on students who are sexually precocious, and, with a slightly altered curriculum to your usual common-or-garden state school we turn these people into the finished product. Think of it as a kind of... liberated finishing school. The nurturing of the sexual potential of this country's youth.\"\n\n\"I see.\"\n\n\"So don't worry if it's a little different to your usual bill of fare. It takes all sorts to make a world. Just muck in, do your best. We're a little short-handed here today. We're very broadminded here as you may have noticed.\"\n\n\"I had noticed that, yes.\"\n\n\"Just treat everyone as you would wish to be treated. And after you've finished this period, come to the staffroom at breaktime. You can help me decide how much cream I have in my coffee.\"\n\nWith that statement hitting me directly in my solar plexus, she turned on her high heels, and walked out the door and down the corridor. I gasped with barely suppressed desire and went to try and find my next class.\n\nI would have arrived there a lot more quickly had I paid more attention to the map of the school that Miss Taylor had provided me with and less to the agglomeration of students in the hallway, sporting various configurations of shiny, skin-tight fetish gear. I was also attracting quite a bit of interest myself. There is nothing so very extraordinary about a young male teacher in school for only a day generating hormonal activity in impressionable young girls, but this was something entirely different. Here the air was charged with an overpoweringly kinky atmosphere, and the sexual aggression of these young women was similarly hard-edged. More than once I had my ass pinched as I made my way through the stream of nubile students. I felt myself blush, but I was also flattered. The girls picked up rapidly on my awkwardness. By the time I reached the science labs the air was ringing with catcalls.\n\nI went inside the classroom. I could see roughly fifteen students, already sat on high stools behind the lab benches. Thankfully, the girls here maintained their decorum and behaved with rather more respect than their colleagues had done in the corridor, but there was still a noticeable shiver of anticipation that greeted my entrance. \n\n\"Hel-lo sexy!\" some girl said as I made my way to the front desk and sat down. \n\n\"Right,\" I said, addressing the class, attempting to summon some semblance of authority from somewhere. \"Who's your normal teacher I'm covering for.\"\n\n\"Mr Bolton,\" said a sexy little cupcake in the back row, \"but he's nowhere as hot as you are, sir.\"\n\nI felt that the best thing to do was to keep a lid on the salacious comments for the time being. I still, after all, had a job to do.\n\n\"Alright, settle down,\" I said. \"I'm Mr White. Let's see if I can find some work for you to do.\"\n\n\"We know what we're doing today, sir,\" volunteered a girl in the front row. She was a short brunette with an impossibly busty pair of boobs. For a moment I was hypnotised by her delicious curves, sat as she was between two slender, similar looking blondes, each of whom fondled one of the girl's breasts. Both of them look at me in a challenging way, seeming to dare me to ask them to refrain from groping the hot little piece between them. Little did they know I was in no mind to stop them.\n\n\"What's your name?\"\n\n\"Nicole, sir.\"\n\n\"Alright Nicole. Why don't you tell me what you're doing.\"\n\n\"It's an ongoing project, sir. Inventions that will make the world a better place.\"\n\n\"Sounds interesting.\"\n\n\"Actually, most of us have nearly finished. Our group at least. We're getting towards the testing stage.\" As she said the world 'testing' a particularly creative tweak of Nicole's nipple from the girl on her left evinced a sensuous groan from her lips.\n\n\"Everyone happy with that?\" I said to the class. \"Okay, get in your groups and get cracking.\"\n\nThe class divided up among themselves into three groups, and started to produce various pieces of apparatus from cupboards and shelves dotted around the room. Each group was comprised of four girls and one boy. I had a vague premonition that the remit of the experiment would have precious little to do with such altruistic notions as ending famine or preventing disease, and would probably centre rather more around more kinky affairs. In this I was not to be disappointed. \n\nI went over to Nicole's group first, at the front of the room near my desk. They were manhandling what looked to be quite a complex arrangement of electrical gear on the table, fiddling with the buttons and plugging in various leads in sockets. \n\n\"What's this?\"\n\n\"Remote blowjob machine, sir,\" reported Nicole, appearing at my elbow as if from nowhere and pushing her tits up against my arms that I had folded across my chest.\n\n\"You must be joking.\"\n\n\"No joke, sir.\" Nicole pointed to what looked like a stiff black rubber dildo that was resting by a suction cup upon the tabletop. \"This is station one, or Robo-cock, as we call it. It's fitted with thousands of tiny sensors that read every instance of physical contact that happens to it, and change it into data.\"\n\n\"The data travels along these wires,\" resumed another girl in the group, a hot, dark-eyed brunette with blonde streaks in her hair who had begun to maul Nicole's tits in front of me as though it was the most natural thing in the world. \"It ends up in this box.\" She indicated a square black container about the size of a shoebox. \"This is the plastic pussy. Inside here is a latex sheath we've designed modelled on my very own hot little love-tunnel, sir. This transfers the sensations from Robo-cock and implements them directly in here.\"\n\n\"That's quite ingenious,\" I admitted. \"And is it as good as the real thing?\"\n\n\"As good as, if not better, sir,\" Nicole said. \"Today we're going to test it on Dominic. And we're going to suck on that thing so hard were going to make his dick crumble like volcanic ash. Vicky, why don't you get him ready to go.\"  \n\nThe two blonde girls busied themselves fitting a large battery-pack to the apparatus as Vicky gave Nicole's tits a final squeeze and dropped to her haunches in front of Dominic. \"Eight out of ten boys can't tell the difference, sir,\" she said, winked at me and unzipped his fly. Predictably, the boy was already rigidly engorged, and his tumescent dick fairly sprang out of his boxers. Vicky, however, had been turned to address me, and received an unexpected faceful of cock as she turned back towards Dominic, the large prick pistoning upwards to strike her on the nose. She slapped Dominic playfully on the belly: \"Watch it, you.\"\n\n\"There are far-reaching commercial applications for this device, sir, as I'm sure you can imagine,\" Nicole said, as Vicky began to assault Dominic's cock with a few luscious, preliminary licks.\n\n\"Like what?\"\n\n\"We're working on a version that can operate over the internet. Give a blowjob in the UK and receive one in, say, America. The perfect thing for separated couples, for example. The only drawback is, you can't exactly transmit cum via optical fibres. And considering how I love to swallow, it's not ever going to replace a bona fide head to head encounter. Or bona fide head, I should say, sir.\"\n\nAt this, Vicky withdrew her mouth from around Dominic's dick with a dirty, guttural noise, already trailing long sticky streams of saliva. \"If Nicole starts to go on about her cum swallowing proclivities at great length sir, just ignore her. All we ever hear in this class is 'blah blah blah, the dicks shot this much, I swallowed all five loads, blah blah blah.\"\n\n\"Not so much a cum swallowing whore as a cum swallowing bore, sir,\" added one of the blonde girls. Nicole took the teasing with good grace, but pushed Vicky's head all the way back onto Dominic's lengthy rod in retaliation, nearly choking her friend. \"Shut up, you, and suck dick like you're supposed to.\" \n\nI was slightly disappointed to have Nicole's pneumatic little body leave my side, so decided to disengage from that group and moved on to the next one in the middle of the classroom. \n\n\"What's your project, then?\" I said to the short, honey blonde little fox that had called me 'hot' at the beginning of the lesson. Her name turned out to be Laura.\n\n\"Augmentation, sir. We've got Jeff here who's agreed to be our guinea pig. Hs been working hard with various techniques to increase the size of his member.\"\n\n\"Brave boy.\" I said, watching with interest as the rest of their group set about probing and poking his genitalia with a large array of measuring instrumentation.\n\n\"Jeff's been just shy of eleven inches for a good while now, we're hoping to push well past that today as we've been working extra hard in order to get him extra hard.\" \n\nI looked over at Jeff. He was leaning back against the desk, his knuckles completely white as he gripped against it. Spearing out in front of him was a cock of such prodigious size and bulk that it almost looked prosthetic. Actually, it was all too real, a fact to which its dismorphic bulging and obscene pulsation attested. It jutted upwards from his groin at the base and then described a slight downwards arc, as if the monstrous size of the livid purple head that topped the shaft carried too much weight. Two girls were kneeled at either side of him, unsuccessfully attempting to measure the shaft, which twitched and spasmed as they tried to wrap their latex-gloved hands around the massive girth of the thing. Jeff obviously found their touched delightful, because the immense protrusion from his groin jumped at the physical contact and still appeared to be in the full throes of its exponential growth, becoming noticeably larger and more rigid as I watched. Before long the two girls \u2013 one a blonde, on a brunette, both gorgeously tanned \u2013 hit upon the idea of putting their hands together and each wanking their own side of the prick off in tandem with the other. \n\n\"It looks like we're going to need something a little bigger than a twelve-inch ruler...\" one of them noted with a note of triumph in her voice.\n\n\"Looks like your experiment has been a success,\" I said finally said to Laura, tearing my gaze from the mesmerising show. \n\n\"The real experiment is too see which one of us is going to be able to take that thing the deepest, sir,\" Laura replied, running her finger down the side of her mouth as she watched the rest of her group grapple with Jeff's rapidly ballooning member. It looked as though it was taking all three remaining members of the group to tug and stroke Jeff to the fullest extension of his length. I could see stiff veins truncating from the shaft as one of the girls deposited a long string of drool onto the now-massive tool. Laura obviously couldn't bear to be separated from the horny sight from too long, and rejoined the fray, reaching under the morass of massaging hands to cup Jeff's sizeable scrotum and give it a slow, sensual squeeze. \n\nI went to see the final group in the class. Here, four girls had been just as enterprising as their classmates and had produced comparable results to the previous group. The difference in this instance was that the boy pinioned to the desk, currently manhandled and groped by four pairs of curious hands was sporting a ball-sack of enormous proportions.\n\nI harrumphed importantly to announce my presence. A girl disengaged herself from the melee and came up to me wearing a cheeky little smile. She was clearly a popular girl, supremely confident, with long, lustrous blonde hair that riffled over her shoulders and cascaded down her back. Her eyes were dark, narrow and nasty and her lips were not so much bee-stung as they had been mercilessly attacked by the whole hive. They were red, permanently pouting, and as lustrous as ripe fruit.\n\n\"Balls, sir.\"\n\n\"Balls?\"\n\n\"I'm Trudi and my group is interested in balls. That's the subject of our experiment here. We've taken one ordinary boy - Matt, here - and put him on a course of specially formulated drugs designed to increase sperm production. We've been treating him for a few weeks, now, but we might not get the results we were after today, because we know he's been a little bit naughty.\"\n\n\"How so?\"\n\n\"We know he's blown his load a couple of times when he should have been saving up, but we never got a chance to measure the volume of his issue, because, as usual with this class, Nicole got there ahead of everyone and gobbled it up. It's almost as if she were trying to sabotage our experiment.\"\n\nI looked back at Nicole, who was at that moment excitedly announcing to her group that Dominic was at full hardness and preparing to stick the black box on his dick.\n\n\"We figured we wanted to see some results,\" Trudi continued, \"so we upped Matt's dosage of pills and we're hoping for something really special from him today.\" She extended a latex-gloved hand and reached down beside her to cup Matt's enlarged ball-sack. \"Isn't that right, sweetie?\"\n\nI could see Matt's testicles respond to her stimulation and slither around the confines of his scrotum. They looked cartoonishly bulbous, easily as large as a pair of tennis balls. Trudi held them together and pulled them up, looking for all the world like it was a juicy giant peach that she couldn't wait to bite into. \"He's been on a course of some pills that we specially developed. Two of those babies a day and he's going to squirt like Niagara falls. Purely in the spirit of scientific research sir,\" she added, relinquishing her hold and allowing the remaining minxes in her group to greedily fall upon Matt's huge, apple-shaped testicles with their willing tongues and mouths.\n\n\"We were thinking of having another experiment based around the same theme, actually, sir,\" Trudi resumed. \"If we could enlarge Matt's balls we figured we'd be able to do the same with out boobs.\"\n\nAt this, she undid a clasp at the back of her latex corset, shucked it off and let it fall away from her midriff into a shiny little pool around her ankles. \n\n\"But then, we thought, why mess with perfection?\"\n\nTrudi posed with her hands on her hips in front of me and thrust her boobs brazenly towards me. She hadn't been exaggerating. She sported a tremendous set of full, luscious globes with a deep, glorious tan sitting high atop her chest and tipped with a small pair of brown nipples. They weren't just perfectly round, they were big. If God existed, and had chosen to invest his absurd world with any higher meaning whatsoever, I was looking at it. Trudi lifted one of her boobs to her mouth and touched the tip of her tongue to the irresistible little bud of her nipple. \n\nSomething came over me, a reckless impulse, impossible to deny, and I found myself leaning forward, extending my own tongue and reaching out towards her tits. Before I knew it, our tongues had touched, and were dancing together like figure skaters on the platform of her nipple. The feeling was so intense I thought I had had an electric shock.\n\nSwiftly, I withdrew, suddenly all too conscious of my transgression, but Trudi merely winked at me, enjoying my embarrassment. To all intents and purposes, I felt had become my wildly throbbing dick and I retreated back to the front of the classroom and sat at my desk.\n\nSo there it was; enormous enlargements of male appendages, excessive sperm production trials, and remote-control blowjobs were so far the order of the day. The reckless, lascivious ingenuity of the students in this school was totally mind-blowing. By this time the lesson was already one-half of the way through, and from my vantage point at the front of the classroom I could see only a seething mass of sexual activity. My mind was still reeling from the implications of my unsanctioned lick of Trudi's white-hot tits, and my immense boner now allowed me to empathise with how Jeff must presently be feeling. \n\nI gathered my thoughts. The parade of naked flesh was beginning to get into full swing. Fortifying myself, I decided to make my presence felt again, and went back to the first group testing their remote-blowjob device. By now Dominic had his eyes squeezed tightly closed, and the black cocoon fastened upon his groin buzzed, hummed and vibrated gently. It was obvious that the apparatus was replicating the sensations that Robo-cock was receiving very efficiently, because the student was murmuring deliriously, thrusting his hips forward and back to match the increasingly violent rhythms produced by the machine.",
        "On the other end of the device, the ten-inch dildo was getting some enviable attention from the four members of Nicole's group. Four pink tongues were sinuously worming their way over the cock, tracing every inch of the prosthetic penis and sensuously intertwining with each other. Each lap of tongue was overlapped by another tongue delving further down, often deviating from its intended journey and exploring its way into another soft mouth. Robo-cock shone with saliva as each of the tongues laved over it in syncopated co-ordination, so that no part of its surface area was neglected of their extensive care. \n\nThe understanding that these girls had proved to be so symbiotic that at one point they all drew up simultaneously and teased the head of the dick with the tip of their tongues at exactly the same time, holding themselves there for as long as they could, suspending Dominic in a paroxysm of delight. Nicole broke the spell by giggling and promptly deep-throating Robo-cock without seemingly the slightest problem. Vicky retaliated to Nicole's earlier enforced deep-throat, and held her friend's head down onto Robo-cock, nearly suffocating her on the black latex dick. Nicole took it with her usual aplomb, but it was Dominic that really felt the benefit, nearly collapsing as the black box began a series of intense vibrations that rocked his cock to its core. If Nicole planned on keeping that level of performance up, he didn't have long to last.\n\nI moved onto the second group, and immediately saw that there was no need to ask Laura exactly just how successful their experiment had been. She could not have replied even if she had wanted to, being one of four girls that were hunkered down at the level of Jeff's groin, two on one side and two on the other, their mouths so totally full of dick I was amazed that their jaws hadn't dislocated. \n\nThe last time I had seen Jeff's dick it had been monstrous; now it was thoroughly gargantuan. It was now as long and thick as my forearm, swollen with pulsing veins and topped with a livid purple cockhead that had begun drooling liberal amounts of precum. Each of the little sex kittens underneath the enormous trunk had their backs arched so that their prominent tits, flaring upwards as their chests heaved with passion and slightly disproportionate to their uniformly slender waists, rubbed against each other. Jeff had both of his hands wrapped around the back of the girls' heads, nudging their faces further forwards as they slurped and nibbled the sides of his dick. Each pair of girls tried to touch their partner's mouths across the distended meat to make a seal, but they didn't really have a chance, although the gurgles, slurps and appreciative moans they made seemed to suggest that they had fun trying.  \n\nLaura, self-appointed leader of the group, eventually withdrew, and wiped the accumulation of sticky precum from her mouth with the wrist of her latex-gloved hand. \n\n\"Ok girls,\" she announced. \"Let's see how big this thing really is. How about a little deep-throat contest?\"\n\nThe rest of her group assented and formed a line, each repositioning on their latex stockinged knees. Laura grasped Jeff's giant dick at its base and wielded the tumescent member in the direction of the three girls. \n\n\"Janelle,\" Laura said, \"let's see what you can do.\"\n\nJanelle's eyes lit up with delight. She was a deeply tanned blonde with a cute little upturned nose and she moved closer to Jeff and licked her lips. One of the girls held her wrists together behind her back as Laura lowered Jeff's prick towards her face agonisingly slowly. Precum trickled out of the monster length as it swung forwards and Janelle opened her mouth to accept it. As wide as she had her mouth, the cock seemed to stick in her delectable pink maw, and she had to spit on the cockhead to lubricate it more thoroughly before preparing herself and sweeping forwards, almost like a cobra striking to kill its prey. \n\nIn the blink of an eye, she had engulfed the bulbous head of Jeff's dick and had the first five inches buried in her throat. She choked, struggled, and then, incredibly, began to slide more marginally down the monstercock. It looked as though she had a fighting chance until she suddenly gagged, relented, and propelled herself back from the dick so fast that Jeff's rampant length vibrated in the air as it was freed from the depths of her throat. The girls cheered as Janelle spat the accumulation of saliva back onto the dick, composed herself, and Laura drew a line on Jeff's cock to demonstrate how far Janelle had managed to get. It proved to be an impressive eight inches. Janelle's eyes had begun to water, and even though she was two feet away, her lips were still connected to the distended organ in front of her with a weighty strand of saliva and precum. \n\n\"Lucy,\" said Laura, bubbling up with glee and once again waving Jeff's cock in the air, \"let's see if you can top that, honey!\"\n\nLucy positioned herself in the same spot and looked Jeff in the eyes. \"Get ready for some fireworks, baby.\" Then she looked at Janelle, \"and you, give me a little taste of him.\"\n\nLucy kissed Janelle sexily and caught the long rope of jizz that hung from her lips, wrapped it round her own tongue and as she turned towards Jeff, started to slurp her way towards his organ like she was sucking on an errant strip of spaghetti. Using the sticky tendril as a guide, she slobbered her way towards the giant prick, stopping only to tease the underside of Jeff's helmet with her tongue before devouring the huge member. She had an intricate tattoo that began at the small of her back and blossomed towards her shoulder blades, and once again, her hands were resting on the top of her ass cheeks as she plunged downwards, wrapping her moist lips around the giant tool and, amazingly, sliding her tongue out underneath to lap at Jeff's cum tube. \n\nShe began to bob up and down on his cock, each time managing to penetrate a little deeper, a little further down her accepting throat. By the time she had reached half way, a steady flow of intermingled precum and saliva started to gush from her bottom lip, flooding out each time she plunged further and further down. A stream of the juice dripped from her chin down onto the tips of her large, tanned, glistening breasts. Laura alternated between massaging Jeff's balls and Lucy's firm, sculptured tits, and her gloved hand was soon coated in the sticky issue.\n\nI was sure that I could see Lucy's throat bulge as she slid down the length, swallowing inch upon inch of the massively engorged cock. She had about four more inches to take before she too pulled away, throwing her head back, gasping for air, her chin and tits trailing a sticky aggregation of fluids that slithered slowly down onto her firm belly and thighs.\n\n\"How did I do?\"\n\n\"Not bad at all!\" said Laura, once again making her mark on Jeff's dick. \"Twelve inches. You've beaten Janelle by a clear four.\"\n\n\"I think the competition is about to get a little... stiffer,\" observed Janelle, wide eyed and staring at Jeff's dick.\n\nIt was true. Jeff's dick was actually responding to the sensual deep-throating, growing noticeably larger and beginning to bulge upwards. Instead of its erstwhile, pendulous arc, it stiffened inexorably, now obscenely tumescent and standing proudly aloft. \n\n\"You've got a real job on your hands, now, Sugar!\" Laura exclaimed, swinging Jeff's dick in the direction of the remaining girl.  \n\nSugar, however, was undaunted. She said nothing, and instead removed her latex corset, releasing a pair of mouthwateringly succulent tits. Like Jeff's dick, they too seemed to defy gravity. \"Never mind a job on my hands,\" she said with relish. \"Get that dick between my tits!\"\n\nNever more had Jeff's dick looked more angry as it did now, discharging a constant flow of precum that dripped uninterruptedly from his piss-hole to the floor, some strands trickling back down the underside of his shaft to slide off his balls. Jeff took the length two handed, and started to stroke it slowly, aiming it at Sugar.\n\nSugar knelt in front of him, holding her tits together. Jeff pulled his shaft all the way up his body. Now a huge pillar of flesh, the head of his cock nearly reached his chest. Then he released it at Sugar, who expertly trapped the base between her large rack. The huge, ridged trunk of his penis smacked on her collarbone and the massive bulb-shaped bell-end slapped her directly between the eyes with an audible splat to the cheers of the girls around. Jeff's enormous dick was rooted firmly between her massive, pliant globes - both of which were now thoroughly lubricated with sticky juices - and jutted upwards, a monstrous cum-trunk seething with obscene pulsation and dripping with precum, propped against her chin and towering vertiginously to come to rest at the bridge of her nose. Jeff's shaft, in short, nearly totally obscured Sugar's features.\n\nSugar slowly churned her tits together in her hands, providing a deep massage to the base of the dick, but try as she might, Jeff's cockhead danced up between her eyes and proved far too big for her to collect in her mouth. She contented herself with licking the shaft.\n\n\"A little help?\" suggested Sugar.\n\nLaura, Lucy and Janelle, were only too glad to assist her. Each of them gripped part of the shaft and started to wank it furiously. Laura, who hadn't managed to deep-throat yet, was able to stand at the top of the stiff stalk, open her mouth as wide as possible, and plunge downwards, engulfing the tip with her lips. Her vertical descent was dizzying to behold as she swallowed inch upon inch of meat, burying the shaft deep in her throat. She went past Janelle's mark with ease, by which time she was level with Sugar's chin. After that, she went after Lucy's record, and hit the twelve inch mark at the same height as Sugar's clavicle. Then, finally, plunging down, Laura greedily gobbled the remaining inches of Jeff's marvellous member, her nose buried in a sticky nexus comprised of Jeff's ball-sack and Sugar's boobs. The group of girls' screams of delight almost compared to Jeff's howl of ecstasy at Laura's incredible feat.\n\nThe look that Laura gave me, the monstercock still embedded in her throat, was so scaldingly hot it would have melted through steel. \n\nTearing my eyes away from the delectable spectacle, I cast an eye over the progress of the other two groups. There were only ten minutes of the period remaining, and so far I hadn't taught a thing. Conversely, the amount I had managed to learn was truly staggering.  \n\nTrudi, by this time, was getting banged from behind by Matt, with two girls underneath him both trying to suck on his immense balls, which were dancing crazily around due to the frenetic rhythm of the swift, hard pumps he was administering to Trudi's posterior. \n\nBack in the first group, Vicky had found another use for Robo-cock, and was now busily grinding the huge black dildo in the puckered hole of Nicole's ass. Obviously, the piece of kit had more wide-ranging applications than it only being a blowjob machine. Nicole's luscious tits were resting on the tabletop in front of her, getting serious attention from the two boob-obsessed blondes, who hungrily sucked on her stiff nipples as Vicky rotated the ten-inch dildo in her asshole, filling every crevice of her anal cavity and making her moan and shriek in pure, unadulterated pleasure. \n\nVicky withdrew Robo-cock from Nicole's ass and plunged it back in triumphantly to send Dominic over the edge. The black box on his dick sizzled and crackled with explosive electrical impulses, attempting to render the deep lunge up Nicole's succulent anus onto his dick. That was when it caught fire, unable to fully communicate the intensity of the sexual manoeuvre that had been thrust upon it, destroyed by the scintillating intensity of Nicole's sweet little asshole.\n\nDominic yelped in surprise, wrenched flaming equipment away from his crotch, threw it onto the floor at his feet and exploded almost simultaneously. Fisting his spasming tool, he sent a deluge of heated jets of cum over the four girls in his group. \n\nThe shower of white rain cascaded over the four girls. Nicole bore the brunt of the blasts, being the centrepiece in the orgy, and took three spurts directly in her face. The girl seemed to have a preternatural talent for catching cum, because the first rope landed halfway in her hair and in the middle of her forehead, leaving a long, sticky line that dribbled down her nose, and the second and third caught her in her left eye, painting her lashes with droplets of creamy fluid and flooding down her cheek.  \n\nThe biggest target, however, was Nicole's monumental tits, and the huge mounds were her next feature to attract the next powerful pulses of Dominic's load. Still screaming as Vicky pummelled the dildo mercilessly into her ass, Nicole's breasts were progressively erased by a welter of cum that struck her so forcefully huge blobs of cum splattered up into her face. Dominic's spasming cock projected thick wads of goo that coated her tits entirely in sticky streams of viscous fluid that were eagerly lapped up by the two blondes in front of her. Cum dribbled off her chin and the end of her nose onto the desk in front of her, making a sloppy little puddle that her boobs came to rest in, with the two blonde girls beginning a session of slimy cum-swapping, passing the sperm they had slurped from Nicole's tits between them in languid, sticky kisses. Nicole couldn't resist getting in on the act, and before long it was difficult to tell where one girl ended and the other began, so coated were there faces in Dominic's sticky goo.\n\nCries from the other end of the classroom alerted me, and I looked over to see Laura's group approaching a crescendo. I moved over to survey the activity to see Jeff having his monster dick pumped by all four girls. His teeth were clenched tightly shut as he was worked over in a frenzied fashion. Then I could actually see the muscles of his cum tube work to pump his seed up his mighty shaft, contracting again and again in rapid succession. \n\nSo powerful was the pillar of flesh under the influence of the orgasm, and so slippery had the huge pole become with the accumulation of juices, that when he finally came his penis lashed free of the girls' grip. It resembled a fire-hole spewing fluid that had sprung free and snaked around under its own internal pressure. To the delighted shrieks of Laura and her friends, Jeff's massive cock whipped around in front of the four beautiful girls, uncontrollably jetting what seemed like gallons of jism into faces, hair, eyes and onto tits, thighs and stomachs. By the time its cock had finished in its intense convulsions, the four girls, from Laura to Janelle to Lucy to Sugar, had their faces, noses, lips and eyes connected together by so many sticky ropes of cum it resembled a huge, dribbling spider web of heavily hanging gooey tendrils. \n\nLaura had had her eyes plastered shut by a particularly withering blast and the resultant trail of semen had dribbled down her nose and found it way onto Janelle's chin, from where the long, thick rope dangled precariously and attached itself on slimy webs to Lucy's sculptured tits. Lucy, in turn, had her left cheek pasted to Sugar's eyelashes, who, like Laura, had been subjected to a voluminous eyeshot and, giggling, tried to blink the sperm out of her eyes even as more dribbled down into them from her forehead.\n\nThere were various exclamations of surprise, delight, mild annoyance and deep erotic fulfilment from the four. Jeff's cock still jerked occasionally involuntarily as the slippery curtain of jizz slithered down the girls' bodies, melting onto their breasts and pooling down their neatly defined abs. \n\nIt was now time for the finale of the final group, who were fast approaching the same critical stage. Matt's enormous balls were obviously beginning to tighten and contract. Trudi was kneeling in front of him and pistoning his dick with tremendous vigour and evident delight at the treat in store. The rest of the girls begged him to cum all over them. This was what they had been waiting for\n\nUnfortunately for Trudi and the rest of her group, Matt's aim was not quite as good as Jeff's had been, and when he came, the first massive, slimy jet splashed against the ceiling. Even the moans of satisfaction and delight from the rest of the room were hushed in awe as Trudi coaxed a second load from Matt's dick that caromed off the back wall a good ten feet behind the girls. Trudi was not to be deterred, however, and her next shots were better, striking each of the girls full in the face. Matt's load was of an incredibly sticky, gelatinous consistency, and the texture of his semen clung in sticky, cloying gobs to the three girls, before oozing slowly down onto their breasts. \n\n\"All that cum and I didn't get any for myself,\" Trudi pouted in disappointment, licking the sticky strands of jism that had accumulated onto her gloved hand, and playing with the white webs, twining them round her tongue. \n\nShe was in for a surprise. As she moved forwards to join in with the session of cum-sharing that now preoccupied her friends, a long, slender rope of white fluid slithered onto the top of her head. \n\n\"What the hell was that?\" she said.\n\nTrudi looked up in amazement to see Matt's first, huge, monster burst of sperm drip back down from the ceiling. It caught her totally unprepared as she looked above her, the steam of jizz slowly dribbling into her eyes. Rooted to the spot and waving her hands in front of her in a mingled moment of ecstasy and panic, the thick lengthy string drenched her from above just as if a jug full of liquid had been poured onto her. Huge tendrils began to slither down her magnificent tanned tits and trickle in rivulets down her chiselled stomach muscles. At that moment she was a cum-drenched monument to her experiment, standing there totally motionlessly. Her hushed whisper of \"oh my God\" could be heard all around the room. She had been creamed into submission in a most unexpected way.\n\nFinally, she broke into a broad smile and accepted the baptism of silky jism, smearing it into her glistening tits with delicate, circular movements. \"Look at all that cum,\" she said in appreciation, \"my boobs are glazed.\"\n\nAs Trudi stood there, the bell went, signifying the end of the period. Break time. Suddenly, the class were all business. They collected their things and made their way out into the corridor, the girls dripping secretions all over the floor as they exited.\n\nI packed up my things to depart to the staff room. On my way out I saw the bottle of tablets that Trudi's group had used to increase Matt's cum production, and put it in my pocket. I figured that in this school it might come in useful. "
    ],
    "authorname": "jizzlober",
    "tags": [
        "teacher",
        "school"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/school-for-scandal-period-02"
}