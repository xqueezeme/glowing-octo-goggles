{
    "title": "The Year of the Cat Ch. 05",
    "pages": [
        "Author's note: 100% Fiction. All sexualized characters are adults. A special thanks to jadams for stepping up and volunteering some editorial expertise. \n\n***\n\nTo Matt, the following work week crawled forward at half speed. His date with Pamela was on Friday evening, less than a week, but to him it seemed more like a month. \n\nJanice had done her laundry and was back to wearing her oversized T-shirts; however, she still refused to wear a bra in the apartment. \n\nWednesday, during his Netflix time with Janice, Matt received a text from Pamela: \"Here's a little something for you to look forward to this Friday\" \n\nAn image was downloading. When it finished, Matt was astounded to see a full body selfie of Pamela in the shower, completely nude. It was a side profile shot, her thigh protecting her pussy from sight, but her small, perky breasts completely visible. \n\nJanice heard Matt gasp and glanced over at his surprised, yet delighted face, staring at his phone screen. \n\n\"More good news, I hope.\" she smiled. \n\n\"Yeah, I'll say! Pam just sent me a naked selfie!\" It was the first time Matt had seen Pam nude or even partially undressed. \n\n\"Niiiice!\" nodded Janice. \"It definitely looks like SOMEONE here will be getting some action this weekend!\"\n\n\"Yeah! Pretty hard to deny that, huh?\" Matt was grinning from ear to ear. \n\n\"Just two more days to go!\"\n\n~~~~~~~~~~~~~\n\nAt long last the evening of Matt's big date had arrived. In anticipation of a lonely night in the apartment by herself, Janice had invited Kendra over after work for a 'Girls' Night' sleepover. \n\n90's R&B music played on the stereo while the girls made drinks in the kitchen. Kendra had her dress shirt from the workday unbuttoned all the way, the bottom portion tied in a knot just beneath the long line of brown cleavage. Her bra had been dispatched to the bedroom floor as soon as she had entered. \n\nJanice had thrown on a loose-fitting T-shirt over her bra after changing out of her work clothes. \n\nKendra shook her head at Janice who had finished mixing her latest cocktail. \"Damn girl! Is there ANYTHING in that cup besides vodka?\"\n\n\"First one didn't take, I had to turn up.\" Janice laughed. Despite her words, she was already beginning to slur her speech from the previous drink. \n\nJust then, Matt opened the door from his bedroom and stepped into the living room. He had styled his hair and donned his freshly pressed gray suit for his date. \n\n\"Daaaaaamn!\" Both women exclaimed when he entered the room. \n\nMatt smiled through his reddening face. \"You think I look ok?\"\n\nKendra eyed him up and down. \"Mmm! If I was wearing panties, they would've already hit the floor!\"\n\n\"You clean up nicely, homie!\" said Janice smiling proudly at her roommate. She stepped close to him to adjust his satin necktie. \"Pam is sure in for a treat.\"\n\n\"Thanks, you two. Have fun tonight! With any luck, you won't see me until tomorrow.\" he said, stepping towards the front door. \n\n\"Good luck! Bye!\" shouted Janice as Matt exited the apartment. \n\nThe door closed. Janice detected a quiet moment pass over Kendra. \n\n\"He wouldn't have had to dress up like that for me.\" she grumbled, staring at the closed front door. \n\nJanice smiled. \"Hey! Let's smoke this blunt.\" She held out the brown, rolled cigar towards Kendra in an attempt to distract her friend from souring the mood. \n\n\"What's he even see in that skinny bitch?!\" Kendra continued as if Janice hadn't spoken. \"She ain't even got no titties! I know! I looked at her on Facebook.\"\n\nJanice shrugged as she lit the blunt herself. \"I stalked her Facebook too. Pam is, like, super pretty though. I doubt Matt cares if she's got small boobies.\"\n\n\"Girl! Please! Matt is a Titty Man. I knew it from the moment I saw him. I got that same look we get from Franny.\" she grasped the offered cigar. \"And don't even tell me you've never caught him checking you out- with them big ass titties.\"\n\nJanice stayed true to her promise of secrecy. \"I may have seen him looking once or twice, but hell... who doesn't? He's been nothing but a gentleman the whole time.\"\n\nKendra was exhaling a thick cloud of white smoke. \"Yeah, well I'm tellin you! Matt wants some big ti-.\" she paused and examined the blunt, \"Damn! What's this?!\"\n\n\"My mom got us the good stuff. Medical grade!\"\n\n\"Shiiiit, this is weapons grade! You're trying to get me twisted!\" Kendra took another long drag that sent her into a coughing fit. After several moments she regained her breath. \n\n\"Damn... What were we talking about?\" asked Kendra. \n\n\"I've no idea.\" Janice partly lied. \n\n~~~~~~~~~~~~\n\nMeanwhile, Matt had driven an hour to the small county diner where he waited for Pamela to arrive. \n\nThe display on his phone read forty minutes past their appointed time. Matt noticed he had hardly any signal in this remote, sparsely populated region. \n\n\"I'm sure she'll be along any second now, sweetie.\" said the sympathetic waitress, pouring his second refill of sweet tea. Matt was the staff's sole customer in the tiny diner. \n\nHe smiled weakly in return. Finally, minutes later, a tinkling bell at the front door announced a new customer. Matt turned to see Pamela smiling at him brightly. It was such a rare occasion that the two met face to face, her beauty stunned him. Any annoyance Matt had had of her tardiness evaporated upon gazing into her gorgeous eyes. They embraced. Pamela stood on her tip toes and surprised him with a full, wet kiss on his lips. The smell of alcohol on her breath revealed she had been drinking recently. The couple took a seat beside each other in the booth. They ordered an appetizer to share. \n\n\"Give me a whiskey neat.\" said Pam. \n\nThe waitress shook her head. \"I'm sorry, dear. We don't serve liquor here. Can I interest you in a wine or beer?\"\n\nMatt was startled to hear Pam curse loudly. \"Fuck! Fine. Riesling.\"\n\nIt was Matt's turn to regard the waitress sympathetically. \"Uhh, just another refill for me. Thank you.\"\n\nBy the end of her first glass of wine the appetizers had arrived. Pam ordered another glass while she scooted closer to Matt, their hips touching. She wrapped her arm around his bicep and leaned close to him. Matt could feel her other hand slide over his thigh under the table. \n\n\"So... have you missed me?\" she cooed in his ear. Pamela stroked his leg slowly, inches from his growing cock. \n\n\"I sure have, baby.\" Matt replied. Pam's smoldering gaze was nearly intoxicating. Her strokes up and down his legs were getting longer. Matt could hardly take a breath from the anticipation of her inevitable contact with his now fully erect penis. \n\n\"How mu-...?\" she said as her hand finally collided gently with Matt's thick bulge. Pamela's eyes widened as she carefully slid her hand over his shaft, probing the enormous thickness and length of his dick beneath the table. \n\nMatt smiled \"...That much.\"\n\nHer mouth was hanging open. \"Oh my fucking god...\" she whispered in his ear. \"This is ALL you!?\"\n\nMatt wagged his eyebrows at her. \n\nPamela was stunned. \"How the fuck am I just finding out about this?!\" she hissed quietly in Matt's ear as she stroked his dick eagerly under the table. \"Jesus! Haven't you ever heard of a 'dick pic'?\"\n\nMatt honestly had never considered sending a picture of his dick to Pam; assuming that it would have been unwelcome. \"I- I guess I thought you would've preferred to see it in person.\" Matt stammered. \n\nPamela made a breathless chuckle. \"Well, you're right about that. I HAVE to see this NOW.\" she said giving his cock a final squeezed before grabbing her purse. \"Let's get the fuck out of here.\"\n\n~~~~~~~~~~~\n\nJanice and Kendra laughed hysterically together on the couch. \n\n\"...And then he had the nerve to ask for my number!\" Kendra exclaimed, hoisting an empty solo cup to her lips. \"Oh damn, do I need another?\"\n\nJanice moaned. \"I sure don't. That last one (hic)... got me.\"\n\nKendra fanned her face with her hand. \"Why do you have the heat on so high?\"\n\n\"Oh... it's radiator heat. The boiler down in the basement just got turned on the other day. It is pretty hot in here.\" said Janice realizing the sweat forming on her upper lip. \n\n\"Girl! I am getting out of these clothes. You're trying to burn a bitch up!\" shouted Kendra standing to her feet and clawing at the knot of her blouse. \n\n\"Me too!\" answered Janice, just as loud, throwing her T-shirt over her head. Beneath, she was wearing the sexy red bra she had recently purchased. \n\nKendra paused, ogling Janice's enormous breasts clad in the sexy undergarment. \n\n\"Damn, girl! You got some pretty ass titties!\"\n\nJanice blushed. \"Thanks!\" With a drunk giggle. \"I think yours are gorgeous!\"\n\nKendra bit her lip, staring fixated at her friend's giant tits. \"It's about time you got a bra that fit those melons. Here. Stand up. Let me help you get it off.\" she said reaching out a hand with a hint of breathlessness. \n\nJanice only half heard what her friend had said. She held up her hand to Kendra. Once she had grasped her palm, Janice was shocked at Kendra's strength as she found herself suddenly yanked on to her feet and spun around, facing away. \n\nKendra quickly released all five hooks of the brassiere at once. Then, she spun Janice around again to face her. \n\nPoor Janice's inebriated brain was sloshing in a sea of liquor. She had to lean forward and hold on to her friend's shoulders to steady herself. The two women's extraordinary breasts mashed against each other. Janice barely registered the straps of her bra being slipped off her shoulders as she slowly regained her equilibrium. \n\nJanice raised her bleary eyes to Kendra's. She was startled to see a strange look in her friend's eyes. She watched Kendra run her tongue over her full lips and gave Janice a naughty smile. \n\n\"K-Kendra...?\"\n\n\"Sshhh.\" Kendra replied, placing her index finger over Janice's lips. \"Why don't we have a little fun!\" \n\n~~~~~~~~~~~\n\nMatt drove behind Pamela, following her to her small house. He watched tensely as she meandered across yellow lines on the empty country road. After arriving at her cottage style house, she led him in through the front door.\n\n\"Have a seat, sexy man. I'll be right out.\" she cooed to Matt as he lowered himself onto the soft living room couch. \n\nPamela blew a kiss to him before disappearing behind the bedroom door. Matt's euphoria was palpable. His boner raged tightly against his pants. He quickly dispatched his tie and unbuttoned his dress shirt anticipating Pamela's return. \n\nAt long last he heard the doorknob. Matt turned his head to see Pamela striding towards him. Her eyes locked on his in passionate desire. As she approached Matt was amazed to see she was wearing the exact same silk robe as Janice. A moment of stark realization washed over him of how different the women filled their respective robes. However, Matt refused to regret the lack of breast mass in Pamela. She was undoubtedly a vision to behold. \n\nShe cuddled in close to Matt taking a seat next to him on the couch. \"Hope you're ready, big boy.\" She couldn't peel her eyes away from his lap. \"Cause I sure am!\"\n\nMatt and Pamela simultaneity leaned forward, bringing their faces close to each other's. As their lips pressed together, her tongue wrapped around his in a sensuous wrestling match. Matt felt her hand grab his and force it under her robe. Her small, naked breast fit perfectly in his hand. \n\n\"Were all my friends right?\" he thought, groping the palm sized softness. \"Is anything over a handful a waste?\" \n\nPamela slid onto his lap, grinding her pussy against Matt's throbbing shaft. Her pleasured moans grew louder as he teased her nipple between his finger and thumb. \n\nSuddenly Pamela froze. \n\n\"... You've got to be kidding me...\" she whispered in shuddering terror. Matt looked up into her eyes to see Pamela's horrified expression watching a beam of light glide across the wall. Over her shoulder Matt could see a pair of headlights pulling up to the house from the front window. In a flash Pam leapt from Matt's lap, tying up her robe quickly. \n\n\"Pamela, what's wrong?\" asked Matt, concerned. \n\nShe was beside herself in fear, \"Shit! Oh f-fuck, this is bad. Matt... I am SO so sorry...I... \"\n\nJust then the front door burst open with a loud bang, slamming against the wall.\n\n~~~~~~~~~~~\n\nJanice giggled awkwardly through her nervousness as Kendra reached up and gently loosened the knot of her blouse and spread the lapels apart, allowing the garment to slide to the floor. She then guided Janice's hands slowly down to her naked, massive, chocolate colored breasts. To her mild surprise, Janice found herself instinctively spreading her fingers and squeezing Kendra's gorgeous, huge tits. \n\nJanice gasped as she felt her own bare breasts being felt, massaged gently, in return. It had been an awfully long time since she had felt the sensation of someone else's touch upon her tits. In the bedroom, Bobby had denied her breasts any attention whatsoever for years. Therefore, Janice's ultra sensitive nipples immediately became erect in Kendra's soft hands. A passionate whimper escaped her lips. Her breathing became deeper, her heart raced. \n\n\"Kendra!\", Janice whispered, breathless. \"What if Matt comes home?!\"\n\nKendra regarded her friend with a soft, chuckle. \"He should be so lucky...\"\n\nJanice's unbelieving eyes watched Kendra lower herself. She bit her lip, barely able to stifle a gasp of ecstatic pleasure when Kendra's hands lifted her enormous right breast to her mouth. She completely lost her ability to hide her euphoric lust upon feeling Kendra's full lips latch on to her areola and begin sucking. \n\nJanice cried out in rapturous passion as Kendra's tongue skillfully bathe her nipple. \n\n\"Oh my god, Kendra...please...\", she whimpered, breathlessly. \"D- Don't stop. \"\n\n~~~~~~~~~~~~~~\n\nThe loud bang of the front door being thrown open rang out like a gunshot in the quiet house. \n\n\"MOOOOM!?\" cried an annoyed child's voice. \n\nMatt curiously observed Pamela practically collapsing from the wave of relief washing over her when she realized it was her eleven-year-old son, Stewart. \n\n\"Stew-...Stewart! What are you doing here!?\", she called out, catching her panicked breath. \n\n\"I hate Jimmy's house!\", whined the young boy, \"It smells like cheese!\"\n\nPam hurried to the front window, waving to the headlights backing out of the driveway.\n\n\"You had Jimmy's mother drive you all the way home?!\", she cried exasperated wiping perspiration from her forehead. \n\n\"Jimmy's a doofus anyw- ...Hey! Who are you?\"\n\nThe young boy stared suspiciously at Matt sitting on the couch with his shirt open. Pamela hurried over to Matt, quickly closing and helping him button his shirt. \n\n\"This is mommy's friend, Matthew. He came over to... watch a movie with me.\"\n\n\"I wanna watch!\"\n\n\"Sure, sweety! Just sit here with Matthew while Mommy gets changed and I'll make us some popcorn.\"\n\nPam hurried out of the room towards the bedroom. The boy stared at Matt blankly while he took a seat directly beside him. Matt smiled weakly at the chubby kid, mournfully realizing his hopes for a romantic night were over. \n\nIt had been established and agreed that there was to be no sexual activity in house as long as Stewart was present, so Matt resigned himself to simply use the remainder of the night to just simply be close to Pamela. However, even that proved difficult, as Stewart insisted on sitting between the two on the couch. Matt slumped in his seat as Pam pressed play to start the unknown movie. \n\n~~~~~~~~~~~~~~\n\nJanice's knees were wobbling beneath her as her breasts were sensually ravaged by Kendra's mouth and hands. Her pussy throbbed in her soaked panties. She couldn't remain on her feet any longer. \n\nShe reached out and managed to locate the couch. Lowering herself to a seat slowly, towing Kendra's eager mouth down with her. \n\nKendra's lips finally unlatched from Janice's pink areola. She leaned over her seated friend, guiding a dark nipple to Janice's mouth where she received it eagerly. \n\n\"Yes, girl! Suck on that big titty!\"\n\nJanice found herself hungrily clutching the massive breast in both hands, her fingers sinking into the abundant brown softness. Kendra leaned in closer, mashing her colossal tits into her friend's face, nearly overwhelming her. \n\nJanice's muffled moans sounded out from beneath Kendra's staggering volume of silky-smooth tit meat as she lapped her tongue up and down her dark, erect nipples. \n\n\"Shit, girl! You might actually make me cum...\", Kendra labored breathing was ragged. She cradled Janice's face as her mouth caressed her gorgeous breasts without abandon. \n\nKendra suddenly felt a warmth ignite from within her abdomen. The fire of an approaching orgasm began to build in her. Janice and Kendra's eyes met just as the intense tingle flooded her core. Janice watched her friend's eyes roll back in her head as she began to shake from the intense orgasm. \n\n\"F-Fuuuuuuck!\", screamed Kendra. \n\n~~~~~~~~~~~~~~~~\n\nMatt tried not to doze on the couch as the uninteresting film dragged on. Pam made no overtures to her son about letting his mother have some privacy with her friend or being up past his bedtime. Stewart stared blankly into the screen, stuffing handfuls of popcorn in his mouth. \n\nAfter the movie had finished Matt tried his best to mask his disappointment as he hugged Pamela goodbye on the porch. \n\n\"I'd have you stay over, but with Stewart here...\" she shrugged awkwardly. \n\nMatt nodded. She kissed him on the cheek goodbye then turned to walk back into the small house. The door closed, Matt took a moment to sigh to himself. \n\nFrom inside the house he could hear the boy exclaim, \"I don't like that guy, mom. When is Daryl com-\". He was interrupted by a loud shushing sound from Pam. \n\nMatt paused, trying to convince himself he heard wrong, but he knew he couldn't deny it. \n\nHe dejectedly sunk into his seat behind the driver's wheel and drove himself home in silence. \n\n~~~~~~~~~~~\n\nIt was nearly 2am by the time Matt walked through the front door of his apartment. Music was still playing when he entered. Evidence of the girls' celebration were strewn about here and there in the form of empty bottles, red solo cups turned on their side and clothing articles on the floor and draped over backs of chairs. \n\nMatt's distracted mood prevented him from being annoyed at the minor mess. His mind was wrestled around his relationship with Pamela and whether there was any hope for a future. \n\n\"And who the fuck is this 'Daryl'?\" \n\nWhat he really desired above all else was mercifully forgetful sleep. \n\nMatt poured himself a liberal shot of vodka into a red cup and downed it. The liquid seared his throat on its way down. He sputtered and coughed, coming to relish the pain as a distraction from his mental flailing. \n\nHeading to his bedroom, he walked into the living room. Stopping at the entertainment center, he knelt down to switch off the stereo. When silence arrived, Matt was alerted to a soft sound from behind him. \n\nThere on the couch, beneath a throw blanket, Janice and Kendra were leaned against each other snoring contently. Kendra was sprawled out, head back, mouth wide open, limbs jutting out from under the cover. Janice was passed out, her head nestled into Kendra's bust, using her breast as a pillow. \n\nMatt thought about waking them but decided against it; the two simply looked too comfortable (\"and naked...?\") to interrupt. Instead, he quietly left the room as it was and disappeared behind his bedroom door for the night. \n\n~~~~~~~~~~~~~~\n\nJanice and Kendra stayed asleep together on the couch until the sky lightened into an overcast day and the sound of heavy rain on the windows woke them. They groaned at the perceived brightness of the room, both suffering from a huge hangover and a stiff back. ",
        "\"Oh my god. Never again! I'm done drinking forever.\", Kendra moaned. \n\nJanice blinked regarding the living room, \"...Who turned the lights and music off? Did Matt come home?\"\n\nKendra looked at Janice concerned. She stood up, still naked and walked quietly to Matt's bedroom door. Peeking inside, she saw a single figure nestled in bed beneath the sheets. \n\n\"Uh-oh. Yeah, he's here.\" Kendra said frowning. \"That's not a good sign.\"\n\nThe two ladies roused themselves despite their aching heads. Janice hastily prepared a pot of coffee after finding two oversized T-shirts for them to wear. As the coffee brewed, the girls tidied up the apartment, removing empty cups to the trash and sopping up any accidental puddles of booze. \n\nSipping their hot beverages, feeling the ravaging hangover begin to ebb, the girls sat quietly together at the dining room table. \n\n\"So...\" Janice started to say after clearing her throat. \n\n\"Stop.\" Kendra held up her hand. \"Let's not make things awkward. We were just having some above the belt fun last night. That's it. No harm done.\"\n\nJanice felt her cheeks burn with slight embarrassment. \"I was just going to say that it was... kinda wonderful!\"\n\nKendra looked up at her friend surprised at first, then a smile crept across her face. \"You a lil' freak!\" She laughed. \n\nJanice couldn't control her giggle as she blushed bright red. \"You started it!\"\n\n\"Oh, I KNOW I'm a freak! But, you...\" Kendra eyed her friend. \"You ever done anything like that with a girl before?\"\n\nJanice shook her head with a bashful smile. \n\n\"Well... congratulations. You're a natural- you gave me a nut.\" Kendra golf clapped for Janice, who grinned and curtsied in response. \n\nJust then, they heard Matt's door open and watched him enter the dining room. He was still in his clothes from last night, wrinkled and disheveled. It was obvious that he had slept in them. \n\n\"Hi Matt! Want some coffee?\" said Janice. \n\n\"Hey girls... Sure\" replied Matt quietly, taking a seat beside Kendra at the dining room table. \n\n\"Uhhmm. Do we even want to know what happened last night?\" Kendra asked, cautiously. \n\nJanice handed him a cup and Matt told them about the events of the night: the diner, Pam's house, their make out session, her son's interruption. He decided to omit the mentioning of the mysterious 'Daryl'. \n\n\"I mean, I can't even be mad at the whole situation.\" Matt sighed. \"Of course her kid is number one in her life... as it should be.\"\n\n\"Yeah, well she could have at least told the lil' shit to go to bed!\" Kendra growled. \n\n\"It just wasn't in the cards last night, homie. Next time for sure.\" said Janice as cheerfully as she could muster behind her hangover. \n\nAfter their coffee cups were empty, the women began to feel their heads clearing. Kendra hugged Janice and Matt before she departed. \n\n\"See you at work, girl!\" she exclaimed to Janice waving farewell. \"Matt... don't let shit bring you down. You have good things coming your way.\"\n\n~~~~~~~~~~~~~~\n\nAlone together, Janice and Matt sat quietly. She sighed, silently, watching her roommate stare forlornly at the rain streaming down the windowpane. \n\n\"Hey homie! Want to watch a movie?\" Janice suggested cheerfully. \n\n\"...mmm, I don't know. What do you want to watch?\" Matt replied softly. \n\n\"Hmmm... why don't you pic one of your favorites.\"\n\n\"Uhhm... Dazed and Confused is good, but I'm -.\"\n\n\"Ok! Let's watch that!\" Janice interrupted before he could refuse. \n\nJanice found the movie in his collection and cued the DVD to begin. \n\nAs the film played, Janice laughed loudly at the comedic moments on the screen, secretly hoping it would encourage Matt to join in. He chuckled politely along with her, but it was obvious his heart wasn't in it. At the end of the film, Janice was hopeful that Matt was feeling a little better; however, she was disappointed to see him staring sadly at the floor, lost in thought. \n\n\"I'm sorry, Janice. I'm being terrible company. I think maybe a nap might do me some good.\"\n\nShe frowned sympathetically. \"Don't be sorry, homie. Go get some rest. When you wake up, I'll cook us dinner.\"\n\n\"Thank you.\" Matt said quietly, disappearing behind the bedroom door.\n\nJanice sighed, alone on the couch. \"I hate to see Matty like this. I wish there was something I could do to cheer him up...\" she said to herself. Suddenly, the memory of Kendra's voice popped into her head, as if it were a response to her wish: \"Girl! Please! Matt is a Titty Man!\" \n\nJanice silently calculated to herself. \"I think I have an idea...\"\n\n~~~~~~~~~~~~~~\n\nMatt's eyes slowly opened from his slumber. The savory aroma of dinner being cooked wafted to his nostrils. \n\nGroggy and shuffling his feet, he entered the living room. Matt saw Janice stirring ingredients in a pan at the stovetop. She was wearing his long apron around her neck. Janice looked up at him, smiling brightly. \n\n\"Hey, Matty! Perfect timing! I hope you're hungry.\"\n\nMatt hadn't eaten all day, so the scent of the delicious meal caused his stomach to grumble a response. He took a seat and before he knew an enticing plate of green beans, rice and chicken was being slid before him. \"Bon appetit!\"\n\n\"Thanks. It looks great.\" said Matt looking up at his roommate. \n\nJanice simply stood beside him, smiling down at him. Then, without a word, she slowly lifted the apron strap above her head and let it fall away. \n\nRight before Matt's eyes, the apron lowered, revealing an off white, low cut, linen blouse with large buttons down the middle. Matt's eyes grew wide at the sight of Janice's gigantic bosom straining the top to its limit. Her cleavage sprang forth from the top hem, creating two spectacular mounds of softness, which bulged enticingly over the edge. Stress lines in the fabric emanated from all five buttons, pulling enormous gaps open between them. The fabric was thin and taught and the pressure her breasts placed on the blouse rendered it almost completely see through. Her perfect pink areolas and erect nipples were plainly visible and staring Matt directly in the eyes. \n\n\"Dig in, handsome!\" Janice smiled warmly. \n\nShe turned to make a plate for herself, then took a seat at the head of the table beside him. \n\nAs the two enjoyed their meal in relative silence Janice was secretly keeping aware of Matt's eyes. Several times she noticed his gaze darting to and from her straining blouse. \n\nMatt thought he was being subtle in his glances, although he was aware of something a little different with his roommate this evening.\n\nFor one, her posture was more upright than usual in her chair, her back was straight, practically arched. \"Perhaps her shoulders are sore...?\" Matt pondered. \n\nOver the course of the meal, he curiously, but quietly observed Janice moving items on the table that happened to obscure his view of her gigantic tits. He also silently questioned the deep breaths she would take while she chewed her food that caused such a heaving pressure against her buttoned blouse that Matt was sure her breasts were about to explode out of their confines. \n\n\"I'm not nearly as good a cook as you, Matty, but I hope you like it anyway.\" Janice spoke between bites. \n\n\"It's absolutely delicious, Janice. Thank you.\" Matt answered with a bright smile. \n\nJanice beamed at her friend's cheerful countenance. \"I think it's working!\" she thought, delighted. \n\nAs soon as he finished the last bite on his plate, Janice whisked all the dishes away and began rinsing them off in the kitchen sink. \n\n\"Can I lend a hand?\" asked Matt, still seated at the table. \n\nJanice simply turned her pretty face to him and scrunched her nose. \"Nope. You just sit right there and keep me company.\"\n\nMatt could hear the tap running from the faucet at full blast. Sometimes during her cleaning, Janice would put a plate or utensil under the deluge, and create a refracting splash that would often fan out, soaking everything nearby. \n\n\"Here we go!\" Janice smiled to herself when the dishes were done. \n\nShe cleared her throat. \"ahem... Can I get you a beer, Matty?\" Janice called out over her shoulder. \n\nMatt accepted and watched Janice sidle over to the refrigerator and knelt behind the door to procure a large can from inside. Then, turning her head towards him with a curious smile, Janice stood and faced Matt. \n\nThe whole front of her already translucent blouse had been doused in water, entirely soaked through. If it weren't for the large white buttons it would have easy to mistake Janice for being completely topless. Her pink areolas were perfectly round and stood out stridently. \n\nMatt lips began to quiver watching her approach him holding the can of beer. Her massive tits quaked with every step she took. The bulbous portions of her breasts that rose from her compressed upper hem were glistening with moisture. She advanced slowly until she stood mere inches away. Then, Janice bent slightly and placed the beer in front of Matt. Her massive, soaked tits were so close they almost grazed Matt's nose. \n\nHis mouth was dry from hanging open in awe. \"Oh dear! Look at me! I got all wet!\" Matt heard her say. \"I better dry off... Matty?... Will you hand me a napkin?\"\n\nMatt was in delightful disbelief as his shaking hand reached out and passed a small paper napkin to her. Janice smiled and began slowly patting her bulging cleavage with the napkin, soaking up the dampness on her skin, letting her fingers sink into the smooth, impossible softness of her colossal breast tops. \n\nMatt couldn't tear his eyes away when Janice, smiling to herself, casually reached up and flicked the first large button undone on her virtually invisible blouse. Janice's massive cleavage jiggled and surged forward upon the teasing release of pressure. \n\n\"I can't believe this is happening...\" thought Matt, fearing that he might actually be dreaming. \n\nJanice's drying duty continued right before Matt's eyes, unhindered and unabashed; now dipping her probing fingers below the hem, folding the lapels back to reveal more sumptuous, round breast meat. \n\nJanice smiled down at her roommate. \"I'm such a klutz, aren't I?\" she said, giggling at Matt's frozen stunned expression. \n\n\"Hmm! I think he's really enjoying this! Should I risk another button?\" between this and the fun she had had with Kendra last night, Janice found she was enjoying herself in a way she had never explored before. \n\nMatt bit his lip watching her hand creep up once more to her blouse front. The awaiting button was holding back a bulging mass of flesh, crying out for freedom from every gap and every opening. Janice flicked the button with her finger. The edge of the large button became lodged in the buttonhole, defiantly holding its ground. Matt was nearly breathless. She flicked it once more, this time catching the edge and releasing the button through the opening with a 'pop'! At once her blouse released and her tremendous cleavage sloshed forward again, spilling over the top hem in a ridiculously huge bulging wobble. An entire foot of cleavage loomed titanic before Matt's eyes. Her beautiful areolas on the very inside edge of her wet top. \n\n\"One napkin just isn't gonna cut it for this much space, huh Matty?\" Janice smiled at Matt's stunned face and slowly, deliberately bending at the hip, reaching over the table to the napkin dispenser. Once again, her half uncovered bust hovered so close to his face he had to fight the urge to lean forward and nestle into her abundant softness. \n\nJanice then stood and slowly dabbed the napkin on her newly revealed swath of skin for several tantalizing moments. \n\nShe would often pull the wet garment away to pat the damp skin beneath, giving Matt a titillating peek at her gorgeous bare nipples. It seemed to Matt's hungry eyes that it would only take one more button released for her giant tits to finally be completely naked. \n\nHowever, when her skin was dried to her satisfaction, Janice decided that now would be a good time for the show to come to an end. \"He sure looks like he's in a much better mood now!\" she exalted to herself. \n\nJanice bent over, grinning into Matt's wide eyes and planted a long kiss on his forehead. Matt relished the uninterrupted view of her barely contained bust dropping low before his face. \n\nAs it happens, an errant strand of hair from Matt's bangs tickled Janice's nose when her lips made contact with his forehead. Suddenly, without warning she reared up, turned her head to the side and let out a loud, fierce sneeze. \n\nMatt jumped in his seat, startled by loud 'snap' and something whizzing past his ear. It was Janice's last button holding her enormous breasts, that had been launched like a bullet from her damp blouse. The lapels of her shirt peeled back, finally overwhelmed, as her giant tits tumbled free from the wide opening. Matt openly gawked at Janice's huge naked tits looming inches from his face. \n\n\"Oops!\" Janice exclaimed, laughing. \n\n\"B- Bless y-you.\" Matt attempted to say, finding himself unable to close his hanging jaw. \n\nJanice blushed, but still smiled down at Matt warmly. \"What the hell? Give him a finale.\" She decided boldly. \n\nJanice casually brushed her pink bangs behind her ear and softly said. \"I guess I might as well finish the job...\"\n\nMatt reveled in his delight as Janice patted the napkin slowly on her skin, pressing her fingers into the vast softness of her massive, naked breasts. \n\n\"You know, you're pretty lucky. That button could have taken out an eye!\" he heard Janice say as she lifted her heavy breasts gently, one at a time to dab dry the vast expanse of underboob. \n\nMatt was definitely feeling lucky and grateful indeed to have both eyes working for the show Janice was putting on. \n\n\"A show...\" Matt repeated to himself, suddenly connecting the dots of the evening, coming to a startling conclusion: \"Could it really be...? Is she putting on a show to pull me out of my funk?\" Matt was surprised to find he had to remember what it was that had caused such a bad mood earlier. \"Wow! She actually cares that much for me...\"\n\nMatt stunned expression softened to a content smile as his eyes raised to Janice's. \n\n\"I think I understand what's happening here...\" Matt said. \n\nJanice immediately gulped as she quietly panicked. \"Oh god! I've given Matt the wrong idea! You went too far!! Honestly though, Janice, what else were you expecting!\" She was just about to reach up and cover her exposed breasts, suddenly feeling very aware of her nakedness. \n\n\"... You're a good friend, Janice. Thank you.\" said Matt. \n\nJanice froze, blinking for a moment, then a smile spread across her face. \"Do you feel better now?\"\n\nMatt nodded enthusiastically. His bright smile filled Janice with a warm, fuzzy feeling of joy on the inside. Before she could think better of it, she reached out and brought Matt's head to her chest for a hug of close affection. \n\nMatt's smile froze in astonished rapture as her bare breasts quickly advanced, then pushed into his face, squeezing against his delighted countenance. His head was completely enveloped before the brief moment passed; Janice suddenly becoming aware of herself and pulling back with blushing cheeks. \n\n\"Uhhm...whoopsie?\" Janice said meekly, looking bemused at Matt's ecstatic expression as he gasped for air. \n\nAt that moment, as his mind was spinning in euphoria, Matt suspected it might prove to be impossible for him to ever be in a bad mood again."
    ],
    "authorname": "Jugg_Head",
    "tags": [
        "big tits",
        "enormous breasts",
        "huge boobs",
        "slow burn",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/the-year-of-the-cat-ch-05"
}