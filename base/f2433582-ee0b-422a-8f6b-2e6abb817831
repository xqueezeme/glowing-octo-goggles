{
    "title": "Her Fairy-Tale Life",
    "pages": [
        "Authors Note: This story is for the Valentine's day contest, 2017. I hope you enjoy. Thank you to Paul, Missy, Craig and Margaret who all volunteered to proofread for me. It is a particularly long story so my appreciation of these people is great. If you make it to the end and enjoy this story please vote and comment. ~ellie\n\n*\n\nChapter 1.\n\nThe rain was coming down hard, and Maggie knew that the roads connecting her small property to the outside world would be closed. Most of the low-lying areas had already experienced flash flooding in the wake of dismal weather caused by the remains of the cyclone, Zelda, which had hit the northern coastline last week. She had thought the storms were over because the last two days had been beautiful and the sun had finally begun to dry out the soggy ground.\n\nA lightning strike lit up her darkened bedroom with an almighty thunderclap that shook the foundations of her old timber farm house. She went to the big bay window and stared out into the early morning light of the approaching dawn towards the two, huge greenhouses her father had the foresight to build. They were badly in need of repair, and she hoped that this latest turn of the weather wouldn't to any more damage to the structures. She only had to hold out another few weeks until Valentine 's Day and the profit she would make should get her through another year.\n\nThe sound of the heavy rain on the tin roof of her home seemed overlaid with a loud humming, and she peered out into the rain soaked pre-dawn light trying to follow the line of old poles that held the electrical wires that connected her to the outside world. The transformers didn't seem to spark or glow at all, and she could see the dim lights in greenhouses that meant everything was still working there. Another bolt of lightning lit up the sky. It was then that she saw it, just beyond the translucent panels of the greenhouse which had obscured her view somewhat. \n\nA small plane flying low banked one-eighty degrees and looked like it was going to attempt to land on the old airstrip that had serviced the property before civilisation had encroached on the area to deem it semi-rural now. She watched only a second more to be sure of what she saw in the driving rain, before swearing loudly, \"Fuck! No!\"\n\n\"No, no, no, NO!\" Maggie cried, and she raced through the house to the back door. Pulling on her boots and long oil slicked jacket, she grabbed a torch and jammed her Akubra on her head. Her eyes wide in panic, she ran, waving the torch, trying to warn the pilot that, although from the air it might look like a good place to land, it was in such a state of disrepair from lack of use over the last decade that any attempt to land there was suicide.\n\nRain streamed down her face, and she ran, waving the torch futilely as she watched the small plane come in for the landing. It was dark, even with the sun trying valiantly to break through the clouds. She stopped running to watch in abject horror as the plane bounced, jolted and shuddered as it attempted the landing. The landing gear buckled with the force of one particularly bad jolt, and eventually the small plane shuddered and dipped its nose, skidding along the ground and turning the plane directly into the path of one of her greenhouses.\n\nShe could see the pilot fighting with the controls, the engines cut and died, but it was all too late, and she watched all her hard work and any hope of making it through another year managing this property and business shattered as the wing of the plane sheared into the greenhouse. She screamed and ran forward again. She tried not to look at the damaged equipment and plants as she reached the now still plane and tried to work out the latch so she could get in there and make sure the pilot was okay. \n\nFinally managing to open the door the wind took it from her hands and reefed it back on its hinges. Scrambling on board, Maggie found the plane's sole occupant, slumped in the restraining seatbelt, motionless. Using both hands, she pushed his body into a more upright position. His longish hair fell over his brow, obscuring his eyes, but she felt a distant sort of recognition as she took in the olive skin, square jaw and aquiline nose of the pilot. She removed his headset and softly brushed his hair back behind his ears, checking for any signs of an injury to his face or temples.\n\nSlowly and gently she probed his head for any sign of injury and, satisfied, she checked his body for any sign of broken bones or misaligned joints, watching for any reaction that might be an indication that he had a serious injury. Lightning flashed and she shook herself free of her consideration of the man. It was quick decision time. Medical help was a couple of hours away in good weather, but with the road closures that were sure to be happening around her property that could be extended considerably. She had to get him out of the plane though, that was a given. She had no idea how much fuel he had or how much damage was done during the crash. Moving his large unconscious form, though, was going to be tricky. She considered her options.\n\nShe lived alone here, running the nursery herself, so there was no one to call for help. Her neighbours on one side had sold out to the encroaching housing estates, and her neighbour on the other side was a man she referred to as the Vulture, so not him. If she waited long enough the neighbours hired hands might arrive, and she could flag one of them down, but as the thunder rolled again, shaking the plane, she knew she couldn't wait.\n\n\"Time to wake up, sleeping beauty, don't make me kiss you!\" she said loudly, shaking the man's shoulders with gentle force. Keeping her eyes on his face, she knew she wasn't overstating the facts. His face was handsome. His mouth seemed to curl into a half smile, even in his unconscious state, with full lips that she found so very tempting. For one crazy moment, she thought about the waking sleeping beauty with a kiss scenario, but she didn't. Not just because she didn't kiss strange men who crash landed on her property, even if they looked like Greek gods, she didn't because his eyes began to flicker open and he mumbled an unintelligible slurring string of words.\n\nShe blushed, and her heart pounded in her chest as she lifted her gaze from his mouth to the most startling blue eyes which, for that brief moment, seemed so clear then lost focus and appeared to glaze over.\n\n\"No! Stay awake. Are you okay? Do you hurt anywhere? We have to get you out of here!\" she said desperately, shaking him gently again. She watched as he attempted to nod and winced. \"Your head hurts a little, huh?\"\n\n\"A lot,\" the two words seemed to take an enormous amount of effort.\n\n\"Well, you can talk, that's a start, let's see what else you can get to work,\" she said as cheerily as she could. \"I hate to rush you, but this storm doesn't seem to be going anywhere, and we need to get you out of here.\"\n\nHe attempted another nod and groaned, his hands fumbled at the restraining seat belt, so she helped him. Her knuckles grazed over the hard muscles of his abdomen and, pulling them away, she found herself blushing and fumbling more as they fell lower across his denim clad groin. Finally freeing the belt, she pulled her hands away as if scalded and moved as if to lead the way from the tiny cockpit. He moved to follow her, and even stooped over she could tell he was taller than she had imagined and she worried about getting him back to the house.\n\n\"Yeah,\" he grunted and followed her unsteadily from the plane. At the door, he looked out at the scene and grumbled in a slurred voice, \"Gonna get wet.\"\n\n\"You won't melt, come on,\" she said in a no-nonsense tone. Kaeden stumbled from the plane to the soggy ground. \"Your legs aren't going to hold you, are they?\" she said more to herself than him. \"Here, let me help you.\" Maggie was what her step-mother disparagingly referred to as a strapping girl, which was one of the kinder things she had said about Maggie's tall, sturdy frame. At this point, though, she was glad to be tall and strong as she wedged her shoulder beneath the man's armpit and into his side, taking some of his weight as they walked towards her home.\n\n\"I'm okay,\" he muttered, but Maggie could see he wasn't and curled her arm around his back to steady him as they walked. He stumbled, and she wrapped both arms tightly around him, bracing her legs to balance them. \"Sorry,\" he slurred. \"The grounds moving around a bit.\"\n\nWith her arms wrapped tightly around his Greek God like body, and feeling the heat of his hard body along with the strong, steady heartbeat in her ear as it pressed against his chest, she had to admit the earth moved a bit for her too. He seemed to regain his equilibrium again and took some of the weight back from her as they shuffled ever closer to the back door of her home.\n\nEventually, they staggered through the kitchen and, because she couldn't take the weight of him any longer, she forced him to sit in the beat up old leather chair that had once been her father's favourite. She stared at him hard, trying to work out why she felt a sense of familiarity about the stranger, when he spoke.\n\n\"Kaeden,\" he sounded pained from the noise of his own voice. \"Kaeden McConnell.\"\n\n\"Shit! Of course, I should have recognised you!\" she said in alarm, \"I'll call for help, don't go to sleep on me.\" She turned to walk away and grabbed her phone from the bench. It had been stupid not to take it out to the crashed plane, but she hadn't been thinking straight at the time. Now she had Kaeden McConnell in her home, and she panicked. \"Shit! If anything happens to him, they'll sue me. The media will vilify me. I'll be the girl who killed the son of one of the richest men in Australia!'\n\n\"You are?\" he asked still slurring his words.\n\n\"Maggie,\" she murmured, shining her torch into his eyes and practically blinding him in an attempt to check his pupils.\n\n\"Arg, stop that!\" he batted at her hand without any strength.\n\n\"Don't go to sleep,\" she warned again as she dialled and waited on the super busy emergency services number to answer her call instead of playing this incessant and annoying music. \"Do you remember what happened? Do you know where you are?'\n\n\"The storm was worse than predicted, so I brought my plane down on the closest airstrip I could find out here. I guess that bad excuse for a strip is yours?\" Kaeden answered with an accusation.\n\n\"There is no airstrip anymore. I tried to wave you off. It's been out of use and in disrepair for over a decade since my Dad passed away. Even before that it was hardly used anymore!\" she defended herself sticking out her chin and straightening her posture. \"Just don't go to sleep until I let someone know what's happened and that you're here!\" She said threateningly and waved the torch in front of his face.\n\nKaeden turned his head as she disappeared from his sight and groaned. He reached up to touch the hairline above his forehead, feeling the large swelling and cursing as his fingers gambolled over the sensitive spot. His eyes felt heavy, and he closed them just to rest them for a few minutes. He opened them again with a start as she threw a towel at him.\n\n\"You're soaked, and even though that crash didn't kill you I don't want to be the girl who let you die of pneumonia,\" she instructed. \"Dry off. I'll get you a robe to change into.\" She was walking back through to the bathroom when the emergency operator came on the line. Without naming the man involved she explained the situation and the very real possibility of a severe concussion. The roads were cut with no possibility of an ambulance, and the few rescue helicopters available were out saving people swept away in flood waters. They would get a medivac to her location as soon as possible. The fact that he was lucid and conscious boded well until he could be evacuated by a medical team.\n\nMaggie grabbed the robe and went out to where she had left him. \"The roads are closed, you'll have to wait for a helicopter to come and airlift you out,\" she said coming back to where he sat, now shirtless and fumbling with his belt.\n\n\"Fine,\" he mumbled and attempted to stand but winced and sat back down almost immediately. \n\n\"Wait, I'll help you,\" she offered after seeing him struggle. She knelt near his legs and reached forward to grasp the waistband of his jeans. \"Lift!\" she ordered in a tone made sharp by her discomfort at touching one of the most handsome men she had ever met. He lifted his ass from the seat, and she worked the denim made tight by the soaking it had received, down his legs.\n\n\"While you're down there,\" he gave a half smile and almost inaudible chuckle. \n\n\"Good grief. You're concussed after a plane crash and you're flirting with me!\" Maggie shook her head disapprovingly, even though her heart beat rapidly, and she flushed at the thought that he would even think to flirt with a girl like her. \"You really must have knocked your head badly.\"\n\nKaeden groaned as she helped him on with the robe and settled back into the chair. All he wanted to do was sleep just for a few minutes. He couldn't remember the last time he slept. \n\n\"Don't go to sleep,\" she warned picking up the torch again to flash it into his startling blue eyes.\n\n\"No! I'm okay. My name is Kaeden McConnell. It's the fifteenth of January, 2017. The Prime Minister is Malcolm Turnbull. I crashed my plane in the back yard of a terrorist called Maggie who is hell bent on torturing me until my rescuers arrive,\" he said rapidly and winced as if the effort hurt his head.\n\n\"I'm hardly a terrorist!\" she huffed at him. \n\n\"No, but you're soaking wet too, go and change before they accuse me of killing you instead of the other way around,\" he murmured softly, this time sounding as tired as he felt. \"Do you always save strange men in your pyjamas?\"\n\n\"Sometimes I wear a super cape as well, but I was in a rush this morning!\" she snapped back, embarrassed by her clothing now that he had pointed it out. \"Here,\" she held out her phone to him. \"Call whoever you need to and let them know you're alive, they can probably come and get you faster than emergency services right now,\" she said. \"When the rain eases a bit I'll go and get whatever you need from the plane. Talk to someone, anyone, just stay awake while I have a quick shower.\"\n\nMaggie was glad of an excuse to escape the raw masculinity of the man in her living room. It wasn't that she hadn't been around men before, even good looking men, but Kaeden McConnell was something else entirely. She tried to rationalise what she felt by telling herself that it was just that if was the effort of helping him that caused her heart to race and her mouth to go dry. It was his startling blue eyes and the way that he looked at her that held her enthral, however. Maggie knew she shouldn't get swept up in his charm and smooth demeanour. He was, after all, the youngest son of Brian McConnell, wealthy mining magnate and topping the richest men in the country list for as many years as she could remember.\n\nShe purposely hadn't told the emergency services the name of the man who had crashed his plane into her greenhouse because she didn't want the notoriety that always seemed to follow the man. He was the playboy of the family. He was always in the papers or magazines at some club with supermodels and actresses. She knew he must have some spurious executive position within the family company, but his career was not his claim to fame, and she didn't want to get caught up in some scandal surrounding his playboy lifestyle.\n\nStill, she mused, as those vibrant blue eyes reappeared in her mind along with the crooked smile, it was nice to be flirted with, even from a known player. She allowed herself a small fantasy as she washed the soap from her body and enjoyed the warm water.\n\n*****\n\nKaeden's head pounded, and he didn't feel like having his brother yell at him for being reckless and irresponsible again. It had been stupid to call, but if anyone could get a chopper in here to fly him out it was his brother, Wade. The problem was that he didn't know where he was exactly. \n\n\"Look, she's in the shower, call this number back in fifteen and she'll answer it, it's her friggin phone!\" Kaeden snapped. \"No, I didn't have sex with her, that's not why she's showering! It's bucketing down and flooding here, she practically carried me out of that plane on her own, and she was soaked!\" his anger was rising. \"Look, just call back in ten minutes and you can ask her all your dumbass questions and get me out of here, okay?\" He sagged back into the chair. \"No, I haven't forgotten our deal. I was on my way to sort it out when I crashed. Can we talk about this later? My head feels like it's going to explode, and, no, I haven't been drinking!\" He hung up then and tossed the phone to the small coffee table nearby before finally closing his eyes.\n\nWhen her phone rang a minute later, it wasn't the shrill noise that most phones made but rather the soft melodic chords of a harp that lulled him rather than woke him. He found it easy to ignore and settled into sleep. He didn't hear her return or her conversation with his brother. He felt her gentle hand touch his shoulder tentatively after all those things had occurred. \n\n\"Kaeden, wake up, please wake up!\" she pleaded in a concerned voice, obviously worried about his head injury. She watched him carefully during her heated conversation with Wade McConnell, who seemed more interested in protecting the family from another scandal than his brother's health. She'd told him that she hadn't even mentioned the name to emergency services, leaving her contact details instead and claiming not to know who the pilot was. She had said that he was groggy from the crash, despite seeming relatively unharmed, Wade had calmed somewhat at that, but had remained suspicious of her motives and the circumstance surrounding the crash.\n\nKaeden was beautiful, and with his eyes closed she once again imagined what it would be like to kiss those lips that parted gently with the deep breathing of sleep. His pulse was steady, his skin was warm but not clammy, and logic told her he would be fine, but the egg on his head and her inability to rouse him told her otherwise. She moved closer and shook his shoulder this time. \"Kaeden, wake up, you have to wake up!\" Maggie pleaded with the comatose man. \n\n\"I'm awake,\" he whispered. \"I was just waiting for the sleeping beauty wake up kiss you promised me on the plane,\" he grinned in a funny crooked way.\n\n\"You shit!\" she exclaimed. \"I thought you'd lapsed into a coma or something worse!\"\n\n\"I'm sorry,\" he said sheepishly, seeing the anxiety written into her features. \n\n\"You're brother is sending someone to get you and take you to the hospital. What do you need from your plane?\" She asked.\n\n\"Nothing that I can't live without, don't go back out into the storm,\" he advised.\n\n\"The rain's eased and it seems to be moving away fairly quickly. Just stay awake, they'll be here soon, okay?\" Maggie said, searching Kaeden's eyes to make sure he understood her. His eyes were so blue she found it hard to pull herself away from them, she realised he was looking back at her curiously, so she stood and quickly left the room. The fact that the robe he wore was undone and bared his chest and the flat stomach, was so distracting to her she had to get away from him. She didn't kid herself. She knew a man like that wouldn't flirt with every girl he met. He probably couldn't help himself, even when they looked like her. Tall and sturdy, was about the nicest thing her stepmother had ever said about her looks, and she was right.\n\nMaggie slipped on her boots and stepped out of the back door and turned east to appreciate the muted golden colour of the sun fighting with the clouds for space. Where once the skyline had held only trees of the neighbour's orchard, it now held the roof lines of the newest of the housing estates to be constructed in the area. Drawing in a deep breath, she strode purposely toward the crashed plane, trying to ignore the damage it had done to one of her greenhouses. The soaked ground beneath her feet squelched as she walked and she felt her heart sink as she saw the extent of the damage that she just couldn't ignore as she had planned. She would have plenty of time to do something about it once her unwanted house guest was gone, so she looked away and climbed into the plane to retrieve his belongings.",
        "She found his phone and wallet in the cockpit and an overnight bag in the cabin, which she gathered and returned to the house, refusing to look again at the damage as she walked through the squelchy mud of her lawn. The sooner he was gone, the sooner she could get on with her life and work out how to keep her head above water and stay one step ahead of the bank manager without her full crop of roses to sustain her.\n\n\"You might want to put on some fresh clothes before they come to get you,\" she suggested dumping the bag at his feet and placing his wallet and phone on the table. He leant forward and reached out toward her, but groaned loudly, sitting back and shaking his head slightly, eliciting another groan of pain. \"Oh, come on, you can't leave my house in your underwear!\" She exclaimed, aghast at the idea that someone might see. Everyone had a camera these days, and she was not about to be the next scandal he was attached to, not that anyone would believe it, but she still didn't want to be that girl.\n\n\"Tell me what you want from the bag and I'll help you,\" she said unzipping the soft printed leather. \"This?\" she held up a soft caramel coloured knit shirt.\n\n\"It'll do,\" he said in a pained voice as he shrugged out of the robe. \"There's some pale coloured khaki's in there too.\" She dug around and found them, then helped him to dress, finding the proximity and heat of his toned, muscled body made her heart race and her hands tremble. She was being ridiculous, she knew, and as soon as she was done she jumped up and moved away to check the window for any sign on a helicopter.\n\n\"You'll probably hear it before you see it,\" he mumbled as he sat back resting his head again. She'd showered and washed her hair, which hung in long waves almost to her waist. He liked the smell of it, though he couldn't quite place it, and he looked at her, thoughtfully admiring the strength in her stature and the lines of her figure. She was tall, like most of the women he'd dated, but she didn't have that half-starved thinness about her, and he appreciated the curve of her hip and ass held snuggly in her Levi's.\n\n\"I'd offer you something to drink, but given your condition...\" she shrugged. Not to mention the fact that she was broke and, even if the roads hadn't been closed due to flooding, she didn't have much to offer Kaeden aside of tea or coffee because she was so broke. \"Oh god, I haven't checked your responses in forever!\" she picked up the flashlight still sitting next to the old chair.\n\n\"No! he grabbed her wrist, keeping the dreaded light away from his eyes. \n\n\"Are you always this difficult?\" she asked in frustration, trying to pull her hand away from his strong grip that seemed to sear into her flesh.\n\n\"Are you?\" he countered with that crooked smile that seemed to make him somehow more handsome.\n\n\"I'm not difficult. I am following the doctor's instructions unlike you,\" she accused.\n\n\"The emergency operator is a doctor?\" he narrowed his eyes at her, catching the small lie and being amused by her look of chagrin.\n\n\"You may find that your good looks and charm get you what you want with every other woman that you meet, but I'm not like them,\" she allowed him to wrestle the torch from her hand and then took his hand in hers, turning it over to check his pulse. \n\n\"You're right about that,\" he chuckled. \"No woman I've ever known would walk out in the middle of a storm to help a stranger. They wouldn't have even known how to open the door to that plane, let alone drag me out and carry me back here. For that matter, a lot of the men I know wouldn't have done that.\" He turned thoughtful, looking at her. \"Thank you,\" he said solemnly. \"I'll pay for any damage I caused. Here,\" he said, grimacing as he reached for his wallet. \"Call me and let me know what the damage is, my personal and business numbers are on this,\" he held out a business card to her.\n\n\"It's not necessary. It was an accident. I have insurance, and I'll survive. I always do,\" Maggie gave a sad smile. \"Besides, anyone in my position would have done the same. You needed help, and I was the closest person to lend a hand.\" She was saved from having to argue the point further by the sound of a helicopter, and she went outside to flag it down away from the crash site and her beloved greenhouses. \n\nThree men alighted and ran towards her crouched beneath the spinning blades. The doctor went to examine Kaeden and asked her to stay while he asked a barrage of questions before allowing the other man to help Kaeden to his feet. She wondered where the third man had gone, but, as they walked Kaeden to the door, she saw him walking back from the direction of the greenhouses shouting into his phone. \n\nShe stood in the doorway watching as they helped Kaeden walk to the waiting helicopter, but he stopped and turned to beckon her closer, a grimace on his face. She walked the few steps to where he stood and reeled in shock as he placed an arm around her waist and pulled her close, kissing her. \"I needed that sleeping beauty kiss after all. Thank you, for everything you did,\" he said in a voice made husky from the pain he felt. \"Call me, please. I'll make this up to you.\"\n\nStunned into silence, she stayed rooted to the spot, quivering in shock and pleasure as he turned and made his way to the helicopter. The third man of the arrival party walked toward her. \"I'll have a small crew out here this afternoon to try and move that plane and sort out a temporary fix for the greenhouse until the insurance assessors can get here,\" he said, handing her a business card and making his way to the helicopter. Still, she didn't move except to shield her face as the helicopter took off, leaving her alone and standing in stunned silence wondering if the last few hours had happened at all or if she had dreamt them. One look toward the greenhouses, though, told her just how real the situation was.\n\n*****\n\nChapter 2.\n\nMaggie was angry. A work crew had shown up and begun work without even checking with her and had done more damage removing the plane from the greenhouse than had been done in the first place. They walked, uncaring of the broken pots and precious plants she had fawned over all year. The insurance would never cover all of this, she despaired. Without the insurance or the money the crop would have brought in a matter of weeks, she didn't know how she would make the payments on her loan, let alone all of the other bills that sat waiting.\n\nShe sat in the middle of the debris surrounded by hastily constructed scaffolding and the plastic sheets they had erected to keep her greenhouse intact and wanted to scream and rage at someone. Except, the someone she wanted to scream and rage at had been taken to hospital with a concussion and other possible hidden injuries.\n\nWell, since she was in the mood for a good fight anyway she may as well call her insurance broker, her step-brother, Alecks. God, she even hated his name, why couldn't he spell it like a normal man. It wasn't his fault, she knew, the evil step-monster had done that to him, but, with all that had happened, she couldn't bear that she was still beholden to him and his family in some way. \"That's good, Maggie, stay mad, it will make this a lot easier,\" she told herself. She pulled out her phone and, sitting in the middle of the debris of her life and career, she dialled his number.\n\n\"Mags, it's not a good time for this. I am busier than a teenage prick at a titty bar,\" he grumbled into the phone.\n\n\"You'd know,\" she snorted derisively.\n\n\"Look, I've got a million clients waiting for me here, you know the storms and floods have been horrific. There are things a little more important than your little flower farm right now!\" he snapped, and she could feel him getting ready to hang up.\n\n\"I'm a client, and a plane crashed into my greenhouse this morning. It destroyed half my crop, Alecks, and unless you stop acting like a jerk and come through for me for the first time in your life I'm going to lose everything!\" She yelled into the phone.\n\n\"Fuck! Are you okay?\" he asked, sounding surprised, if not concerned.\n\n\"I'm fine, the pilots in the hospital, and his father's company has come and done some temporary repairs. Probably so I won't sue them, but I've lost half the crop of roses, and Valentine's day is only weeks away. Even if I harvest what I have left, how am I going to tell my clients?\" She was glad her voice hadn't broken, she was still angry, and she held to that anger tightly.\n\n\"I'll come out myself tonight,\" he said quickly. \n\n\"The roads are closed, and the only way in and out of here is by helicopter,\" she said. \n\n\"The guy who crashed must be loaded then,\" Alecks said speculatively. \n\n\"His father is, but it was just a dumb accident, he's probably just grateful Kaeden didn't die,\" she admitted, trying to hang onto her anger and failing.\n\n\"Kaeden who?\" Alecks asked trying to place the name.\n\n\"Kaeden McConnell, as in McConnell Mining,\" Maggie filled in all the blanks.\n\n\"Fuck!\" Alecks's expletive whistled into the phone. \"We sue the pants off them then.\"\n\n\"Alecks,\" she said tentatively. \"I don't want anyone to know he was here, with me,\" she said quietly. \"I don't want to be part of that media circus that surrounds him. I don't want to be compared to, well... I just don't want people to know,\" she said. The truth was that she didn't want to be compared to the beautiful women he dated. Not that they had dated, but she just didn't want to be associated with him and that sort of life in any way.\n\n\"I'm sure they'll settle out of court to avoid any nastiness. That dude is always in trouble, I'm sure they are used to it, which is why they acted so fast to fix things up for you,\" Alecks reassured her. \"Especially if you let Mother do the negotiations,\" he added, and Maggie could tell he was smiling. \n\n\"Oh God, do we have to tell her?\" Maggie groaned.\n\n\"Are you kidding? You want her on your side this time. She knows these people and their friends, I bet. Trust me, if you want to save your little flower farm you want her in on this,\" he lectured. \"Look, the BOM says the weather is clearing so the roads will be passable tomorrow, no doubt. I'll get mother up to speed, and we'll come out and inspect the damage tomorrow, but I hope you took photos before they did the repairs, temporary or not.\"\n\n\"Yeah,\" she said hesitantly. She's been so mad when the crew had arrived, and, not even come to her door to introduce themselves to her before starting work on her property, she had grabbed her phone and taken photos of them all and the helicopters they had arrived in. She was calmer now, having told the whole story to Alecks and wary of what her step-monster, his mother, would do with the information. She may not love them or even like them very much these days, but they were the only family she had.\n\n\"I have to go, Mags. All hell has broken loose here this week. Mother and I will come out tomorrow afternoon, okay? Hang tight until then, and don't accept any offer they try to make.\" Alecks said distractedly, and Maggie could hear the commotion of his busy workplace in the background before he hung up.\n\n\"Oh God,\" Maggie whispered. \"This is going to be a circus, and instead of being Kaeden's circus it was hers, and Alecks and Elena were her monkeys,\" she buried her face in her hands and, not for the first time that day, she cried.\n\n*****\n\nKaeden sat up in his hospital bed and stared at his phone, trying to decipher the message amongst his clouded thoughts. Aside from a splitting headache, he felt fine, but they had kept him for observation, regardless of his objections. Even after the third reading of the text message it made no sense to him, so he called the number and smiled as the voice of his angel of mercy came on the line.\n\n\"Hello Angel,\" he smiled into his phone.\n\n\"Kaeden, why aren't you in hospital and asleep at this time of night?\" She asked, worried that he hadn't sought medical help after leaving her house.\n\n\"My phone woke me up, I need to get a nice lullaby ringtone like yours,\" he chuckled. \"I got this weird message that I think is apologising for something that is either about to happen or might happen in the future and it's confusing me even more than how an expert pilot like me managed to wreck my plane.\"\n\n\"You might want to revise that expert tag,\" she teased, remembering the blue of his eyes and the way they crinkled at the corners when he smiled.\n\n\"No, I blame you entirely for that crash, running out in the rain waving that torch around when I was trying to land,\" he accused still chuckling. \"My reputation is fully intact, thank you.\"\n\n\"I was trying to wave you off! I was trying to save you, you big...\" she faltered for an appropriate word, \"You big plane crasher!\" she said indignantly making him laugh loudly.\n\n\"You did save me, Maggie,\" his voice deepened and became serious after a moment. \"The doctors said you did all the right things to look after me, including torturing me by keeping me awake with that torch and all those questions.\"\n\n\"I didn't do much really, you were only here for an hour or two,\" she said regretting her earlier teasing.\n\n\"So, tell me what this message means exactly and what I should expect?\" He asked. \"I have pretty thick skin these days and a team of lawyers at the ready to sue any media for involving you in any scandal associated with what happened.\"\n\n\"My step-monster is about to happen, and it will be bad. I'm sorry, but by the time I realised Elena would find out and probably go after you, your family and the money you have at your disposal, it was too late to un-tell my brother what had happened. I mean, he probably would have found out anyway, because he's my insurance broker and all, but I was just so mad at those guys you sent for creating even more damage and things got out of control. Now my step-monster knows and will be contacting you and your lawyers.\" She let out a large breath after spewing forth all the words that summed up her worries.\n\n\"Okay let's just slow this down a fraction,\" Kaeden frowned into the phone. \"The step-monster,\" he paused, \"Elena, right?\"\n\n\"Right,\" she agreed.\n\n\"She found out that I crashed into your property and she will come to see me to demand I pay for the damage I caused?\" he questioned.\n\n\"Right,\" she agreed again.\n\n\"I already told you I would pay for the damage, Maggie. You don't need to worry about that,\" he said calmly. \"It was my fault, I should be the one apologising here.\"\n\n\"You don't understand,\" Maggie shook her head, despite the fact that he couldn't see her. \"The Step-monster is Elena Dorian.\" She paused to see if he recognised the name, and when he didn't say anything she continued. \"She's truly awful. She goes after high profile people all the time, feeding the media with rumours and lies, so the trials are very public before it even hits the courts if people don't give in to her settlement demands.\"\n\n\"So you plan to sue me,\" he stated without rancour. \"Despite the fact that I said I would pay for any damages.\"\n\n\"No!\" she denied the accusation. \"I just want my insurance to cover it, so I called my broker, who happens to be my step brother, Elena's son, Alecks.\"\n\n\"Your insurance company will want to recover the cost, that's no problem, I wouldn't fight it,\" he said easily. \"There is no reason for Elena to come to me with an offer to settle anything out of court unless you decide to press charges.\" \n\n\"It's not that easy. You don't know what Elena's like. You don't understand,\" Maggie said miserably. Elena hadn't even asked how she was when she called earlier. She had just demanded that she send photos of the damage through to her.\n\n\"Listen, people try to sue my family for all manner of things, me crashing in a storm is nothing but a minor annoyance. We have a whole regiment of lawyers who are well equipped to deal with the Elena's of this world, and the threat of bad publicity never bothered me. Which you obviously know,\" he gave a half-hearted chuckle. \n\n\"There's a lot of good press about you and your family out there, too,\" she said quietly. Maggie was glad he couldn't see her blush. She had given in to the temptation of googling him to find out more about the handsome stranger that had crashed into her life. \n\n\"So you looked?\" he sounded pleased, which only made her blush all the more.\n\n\"I'm sorry,\" she said again. \"I'll try and get Elena to let the insurance company handle it all. I just wanted you to know what was probably coming. I know it was an accident, and if I weren't so reliant on this year's crop to make the bank happy and keep Elena out of my business, I wouldn't have even called Alecks until I knew you had recovered properly. Speaking of which, you had better get some rest rather than listening to me prattle on about my awful family. Thank you for being so understanding.\"\n\n\"Maggie, you saved me. Seriously, you have nothing to apologise for. I'm in your debt, and I will make sure you have more than enough to make up for the damage and keep the banks happy,\" he said reassuringly. \"Trust me, even without the insurance issues I would have made sure you were well compensated. Please don't worry about this, or me,\" his voice had become as quiet as hers.\n\n\"It's late, I have to go. I hope your head feels better in the morning,\" she said with sincerity and hung up before he could say anything else. \"Great,\" she said out loud. \"I finally meet someone who makes me forget all about the pain of not being able to have the love I want and he's just as unattainable, albeit in a totally different way.\"\n\nMaggie knew she was being silly. She had only known the man for a few hours, but she wished she could know him better, despite the fact that she was awkward and plain, too tall and too solid. She lived in a completely different world where going out involved a good pair of jeans and boots, not dresses and high heels. She sighed, feeling sad, and walked into her bedroom, picking up the old raggedy bunny from her bed. \n\n\"Looks like it's just you and me again,\" she said, stretching out on the bed and hugging the soft, well-worn toy. Tears sprang to her eyes and she told herself it was just the roller coast ride she had been on today, not the fact that she felt more alone than ever as the biggest day on her business calendar approached rapidly. Valentine's day was fabulous for her on a business level, but disastrous on a personal one.\"\n\n*****\n\nChapter 3.\n\nMaggie woke from a dream that left her hot and bothered. It had seemed so real that waking up alone in bed was disappointing and she considered closing her eyes to try to get the dream back. \"Don't be stupid,\" she said aloud, sitting up and swinging her legs from the bed. She had work to do, and no one was going to do it for her. She pushed the memory of Kaeden McConnell and the dream from her mind and started her daily routine.\n\nThe light plane had been dragged away from the greenhouse by the crew who had been there yesterday and sat with its nose dug down to the ground and one wing bent and buckled like a wounded bird brought down in the storm. The vision of Kaeden fighting the controls as he came into land sprung to her mind, and she wondered if she had added to his crash with her appearance near the old airstrip.\n\nShe could see a shadow moving around in the greenhouse through the cloudy exterior panels, and she began to jog through the squelching mud, pulling her phone from her pocket to catch the intruder. She rushed through the door swinging it hard and frowned. Music was playing, one of the soundtracks she liked to listen to when she was down here working. 'An intruder wouldn't have put that on,' she thought. \n\n\"Bob?\" she called out, thinking that the old man would be the only person who would feel welcome enough just to let himself inside and inspect the damage. \"Bob?\" she called louder over the music, walking toward the site of the crash.",
        "\"Aye, it's me, lass,\" he grumbled getting to his feet. \"Why didn't ye call me when this happened? I had to hear it from old bicycle Bill late last night.\"\n\n\"I've barely seen you in the last year. I didn't want to bother you. I have insurance, and Alecks will make sure it's all fixed up,\" she tried to sound positive, but she was more than happy to see the old man.\n\n\"Ye put too much trust in that boy and his mother,\" he said grumpily, \"but if you want me ta go, I will.\"\n\n\"Why would I want you to go? You're the only one I trust here in the greenhouses. It's just a shame you've been so busy this year and didn't get to see all the changes I had made before they were destroyed,\" she smiled, hoping he would stay. Elena had told her he didn't want to be reminded of his late wife by coming to see her so often anymore, so she hadn't pushed him to visit, even though she missed him terribly.\n\n\"I thought you didn't want me here, underfoot and in your way,\" he looked at her, realising he should have questioned Elena's harsh words that warned him from being here to help her. \"It's a right mess. You will probably need some help to save some of these,\" he hinted that he would like to be the person to help.\n\n\"I'd really appreciate all the help I could get right now,\" she said, equally keen for him to stay. \n\nBob was her father's closest friend, and when he had died rather than staying with Elena, who moved to the city with her boys, she had stayed with Bob and his wife, Lois, until she finished school and came of age to take over the farm. He was like a second father to her, and when Lois had died she had grieved with him and his children. His children were much older than Maggie and had moved away before they had taken her in, she'd only seen them on special holidays, like Christmas, and she knew that disappointed their father.\n\n\"I'm guessing Elena and the boys won't be wanting to get their hands dirty,\" he snorted, followed by a chuckle at the thought of it making Maggie smile.\n\n\"They said they'd come down this afternoon to take a look for the insurance,\" Maggie defended them, though she wasn't sure why she should. They were awful people who deserved Bob's assessment of them. She hadn't always felt that way about them. In fact, she'd thought she was in love with Alecks once until he betrayed her in the worst way. She shook her head, clearing the hurtful thought from her mind.\n\n\"I better clear out then,\" he grumbled.\n\n\"No, stay, please!\" she said hurriedly. \"I know it's not easy coming here, but...\" she looked around at the mess. \"I don't even know where to start,\" she said sadly.\n\n\"Ah, lass, coming to see you is the easiest thing in the world,\" he wrapped his arms around her in a great bear hug. \"I will always be here when you need me, you just have to ask.\" He was getting the feeling that Elena had driven a wedge between them with lies that seemed so plausible that neither had questioned it.\n\nThey worked together through the morning and into the early afternoon, ignoring the mess and debris of the crash and concentrating on saving as many of the rose bushes as they could. \n\n\"Lass, I'm going to nip home for a bit, but I'll come back tonight if you like, or tomorrow if you want, all you have to do is pick up the phone. I would wager that Elena won't take kindly to seeing me here, and I don't want to give her any more reasons to grumble at you,\" Bob said, placing a hand on his lower back and arching into a stretch.\n\n\"Why would she care?\" Maggie frowned.\n\n\"I'm not sure, lass, but I think something's amiss. Don't worry, as soon as they're gone I'll be back,\" he touched the side of his nose and ambled toward the door of the greenhouse. \"I have a bit of a surprise for ye as well I want to pick up.\"\n\nMaggie walked him out and decided she could use some lunch; she walked up to the house. She pulled her phone from her pocket and saw two messages. She mustn't have heard the alert over the music when they had worked in the greenhouse. She pulled up the first one.\n\n\"Good morning, Angel. I was wondering if you would like to save me a second time?\" she read, curiously realising it must have been from Kaeden.\n\n\"Save you from what? You're not flying around the corridors of the hospital in a wheelchair, are you?\" she wrote back smiling.\n\nThe second message was from Alecks to confirm that the flood waters had receded and he and Elena would be arriving at four that afternoon. She sent back a smiley faced emoticon and entered the kitchen through the back door.\n\nShe was searching her pantry for some soup or something equally easy to heat and eat when her phone came to life. Grabbing a box of crackers, she snatched up the phone without looking at the number. \"Hello?\"\n\n\"Hello, my angel,\" Kaeden's voice was smooth and clear.\n\n\"Please stop calling me that,\" she sighed. \"My name is Maggie, and I am not an angel.\"\n\n\"Is that right, Maggie?\" His voice deepened with innuendo, and she could imagine that crooked smile of his.\n\n\"You know what I meant,\" she couldn't keep the amusement from her voice. \"Was there a reason for this call?\"\n\n\"Of course there is a reason, I need you to save me again,\" he sounded wounded.\n\n\"And what, pray tell, do you need saving from?\" she asked.\n\n\"Boredom, mostly, but Nurse Naggard, here, thinks it's amusing to not only shine torches into my eyes but to poke and prod me as well,\" he grumbled. \"And not in the nice way you did it, so I need you to come and show her how.\"\n\n\"I am sure the nurse is infinitely more qualified than I am, so stop being a baby and take your medicine,\" Maggie laughed. \n\n\"You're meaner than I remember,\" he accused. \"Would you come if I said I just wanted to see you again and thank you properly? We could have dinner,\" he suggested.\n\n\"As much as a dinner of hospital food is hard to turn down, Elena and Alecks are coming this afternoon to look at the greenhouse for the insurance, and, when they leave, I will still be cleaning up the mess you made,\" she teased.\n\n\"Can I send someone to help?\" he offered.\n\n\"No, I'm trying to save as many of the plants as I can, and having someone else tramping around not knowing what they are doing would just slow me down,\" she said in a tired voice. \"Thank you for offering, though.\"\n\n\"I'm sorry,\" he said softly. \"I never meant to cause a mess for you to clean up.\"\n\n\"I know it was an accident. I'm just glad you're safe,\" Maggie said. \"The farm will be good as new in no time. If you had been seriously injured, or worse, that would have been something I couldn't have handled as well as a few broken pots,\" she said sincerely. \n\n\"I was hoping if you came you could bring me something from the plane that I left behind,\" he said, trying another tack. He wanted to see her again, and, although they let him out of the hospital, he wasn't supposed to drive for another few days at least.\n\n\"Was it important? I could probably send it back to you with Alecks this afternoon when he goes back to the city,\" she suggested.\n\n\"There's some paperwork in a portfolio. It's a little sensitive, and I wouldn't want people I don't know handling it,\" he said slowly.\n\n\"You don't know me, silly. What makes you think I won't snoop?\" She asked.\n\n\"Because you're an angel, whether you like to admit it or not. You're a good person, Maggie, who cares about other people,\" he said confidently. \"Will you bring it? I don't mind how late or early you come. You can just drop it off at my apartment. Nothing's going to change if you take a break from work for a couple of hours tonight.\"\n\n\"I'm not sure I can make it tonight, I'm exhausted. Can it wait until tomorrow?\" she asked.\n\n\"Sure,\" he said, trying to hide his disappointment behind the fact that she had agreed to come the following day. \"Whenever you can get here tomorrow is good,\" he said somewhat cheerfully.\n\n\"I'll go get the folio now, so it's safe. Where did you leave it exactly?\" she asked, listening intently as Kaeden told her what it looked like and where it should be.\n\nSo, I'll see you tomorrow then?\" he asked. \n\n\"Unless you'd like me to courier it to you tonight, that might be faster,\" she suggested. The thought just occurring to her.\n\n\"I'd like you to bring it, I'd rather not trust it to a complete stranger,\" he said, worried that she would find an excuse not to bring it herself.\n\n\"Okay, well, you get some rest, and I'll see you sometime tomorrow,\" she said.\n\n\"Thank you, my angel,\" he said softly, and hung up before she could argue with him again for calling her that.\n\nMaggie grabbed a handful of crackers from the box and headed out to the plane. It took her a good half hour of searching, but she finally found the leather-bound case in the tail section of the plane where it must have fallen in the crash. Stealing herself against opening it, she carried it back to the house and put it in her bedroom where it wouldn't fall under the eagle eyes of Elena and where she couldn't forget it.\n\nWith Bob's help, she had gotten more done today already than she thought she could accomplish, and feeling properly hungry for the first time in days she decided to make some damper, so there was something to offer Alecks and Elena when they arrived. Between not being able to get out in the floods and the state of her bank account the cupboards were pretty bare, but she had the staples, and there was a lot you could do with flour, eggs, sugar, salt and long-life milk.\n\nBy the time they arrived, Maggie had managed to bake two dampers. She had thought she could take one to Kaeden tomorrow, not wanting to arrive empty handed. She had also made a plate of pikelets and was just finishing off some muffins she had decided to make with a tin of black cherries she'd found in the back of the pantry.\n\n\"Someone's been busy,\" Elena raised her eyebrow and gave Alecks a meaningful look.\n\n\"Don't look at me, I haven't touched her in years,\" Alecks said. Maggie scowled, wondering what she had ever seen in her vain, pompous step-brother.\n\n\"All this effort, you really must stop making an even bigger fool of yourself with all this swooning over a man you simply can't have. Alecks is engaged now. The party is in ten days, and you don't want to embarrass him or yourself with trying to impress him and hope he'll come back to the farm,\" Elena said in a sweet voice tainted by malice. As soon as she had found out about their little dalliance she had put a stop to it.\n\n\"Not that you'd care, but I've been flooded in here for over a week, and just when the roads begin to open a plane crashes into my life. So, I have to bake or starve at the moment,\" Maggie said indignantly.\n\n\"So much baking,\" Alecks said with a knowing smile. \"We slept together twice, Maggie. I never loved you; you were just here and easy. You need to stop trying to make me change my mind about us. I mean, look at you, you don't honestly believe we could ever have been more than some teenage experimentation.\"\n\n\"You have made your feelings on the subject abundantly clear,\" Maggie said in a steady voice, despite the knife blade she felt twisting in her stomach. \"So, do you want to look at the greenhouse?\"\n\n\"We could see it on the way in, I don't think there is any need to dirty my shoes,\" she pulled a chair out and sat down, helping herself to a still-warm muffin. \"Ruslan has gone down to check it out with the assessor.\"\n\n\"I'll clear this off so you have room to talk about my insurance claim,\" she began grabbing the plates and placing them on the bench. \n\n\"Make some tea, dear, this muffin is very dry,\" Elena wrinkled her dainty nose in distaste. \"You never were a particularly good cook, were you?\"\n\n\"You can cut the damper too,\" Alecks instructed. \"I assume you have some of that rosewater jam somewhere?\"\n\nMaggie slipped into her usual mode of silently waiting on them as they spoke down to her and discussed how much money they could get over and above the insurance claim from the McConnell's.\n\n\"I've told Kaeden I just want the insurance assessment. I don't want to sue, it was just a freak accident,\" she said more confidently than she felt, and regretted it immediately as they turned their eyes on her.\n\n\"You, stupid bitch, do you know how much they are worth?\" Alecks raged. \"I warned not to agree to anything they offered! Why were you even talking to him?\"\n\n\"I wanted to know he was okay, that I hadn't hurt him more that he already was getting him out of the plane,\" she said hastily. \"He's fine, though, luckily.\"\n\n\"No matter, we can claim emotional duress, so anything she agreed to verbally on the day of the crash we can dispose of easily enough,\" Elena waved her hand.\n\n\"I expect his lawyers feel the same about his willingness to pay for any and all damages!\" Maggie said sharply.\n\n\"Trust me, that boy can't afford another scandal, they'll settle, and we will gain a nice chunk of change from this,\" Elena said. Maggie had an uneasy feeling about the way Elena said we and listened very carefully as the afternoon went on. \n\n\"Ruslan!\" Maggie smiled. She quite liked the older of her step-brothers, who was obvious about his self-serving ways but had always treated her like a sister. She rose from her chair and hugged him as another man entered the small kitchen. \"New boyfriend?\" She asked curiously.\n\n\"Hah! No,\" he laughed at the look on the man's face. \"He's the insurance assessor; he was taking some measurements and checking the structure.\"\n\n\"Your photos were good, but I needed some additional information,\" he explained. \"The McConnell's are wanting this dealt with quickly, so I should have the assessment done by tomorrow evening.\"\n\n\"Here, sign this,\" Elena pushed a contract with a pen toward her.\n\n\"What is it?\" Maggie asked. \n\n\"It's an agreement giving me the right to act on your behalf in this insurance matter,\" Elena said, waving away Maggie's concerns. \n\n\"I'd like to read it first,\" Maggie said. \"I'll read it tonight and email you a scanned and signed copy tomorrow.\"\n\n\"No, you will sign it now so I can serve them with the intention to sue tomorrow!\" Elena said threateningly. \"Do we have to go through all this again? Didn't you embarrass yourself enough last time you took me on? I'm your mother, for God's sakes, just sign the goddam contract!\"\n\n\"It's not like we want you depending on us for support,\" Alecks snarled at her. \"The farm and all its debt are yours alone. We are just trying to make sure you get what's coming to you so you can stay here, on the farm, where you belong.\" \n\n\"Give her a few minutes to look it over. I'm sure she'll sign it without all the nastiness,\" Ruslan interjected on her behalf. Maggie smiled at him. She knew his loud and proud brand of homosexuality was thought of as an embarrassment to Alecks, and Elena as well, and she was grateful for his small show of support.\n\nThe group devoured most of the baking she had done while she scanned the contract looking for anything that was strictly related to the crash and subsequent insurance claim. The Dorian Corporation, which had been set up when Elena handed over the farm to her, was mentioned, but only regarding the management of the mortgage for which she had needed a guarantor to take over at such a young age.\n\nShe couldn't see any reason why she shouldn't, so she reluctantly signed the document, and they left almost immediately after leaving her feeling as if she had just signed her own execution notice.\n\nFeeling awful, she called Bob and told him she was going to have an early night and curled up on the couch with a book. Usually, she could chase away all of the horrible things her family said, but with visions of Kaeden in her mind she couldn't help letting all the negativity get to her. She was being stupid being taken in by his flirting. He was just being nice because Elena was going to sue him and he wanted her to go easy.\n\nShe picked up her phone and sent a text, \"I can't make it tomorrow. You will have to send someone to pick up your folio, it's safe here until then.\" Her phone immediately came to life, but she let the ringtone play out several times. \n\nThen, after a short silence, the phone buzzed again and a short text appeared, \"What happened?\"\n\nNothing and everything had happened. Maggie was tired and emotional and not up to playing Kaeden's games tonight, she thought, as she stared at the message. The phone began to sing its lullaby again as she stared at it, feeling tears sting her eyes. It went silent again. \"Please pick up the phone, Maggie,\" appeared on her screen, and finding it hard to say no, even to herself, she turned her phone off.\n\nChapter 4.\n\nKaeden cursed as the call went straight to message bank again. The evil step monster must have told her not to speak to him because of the lawsuit she was going to bring to him. He didn't care, he could afford it without touching his family's money. After taking over the hotel chain and making it one of the most exclusive and luxurious he never had to answer to his family for anything he did. Not that he had done even half of the things that had been reported about him.\n\nHe was lucky he came from a close knit supportive and loving family, unlike Maggie. Worry gnawed at him. The way she had talked about Elena and called her a step-monster made him think this was more than just a simple stay away warning because of the lawsuit. Something else was going on here, and he wanted to know what.\n\nHe checked his watch, it was still early, not even six, and he picked up his phone again and called his brother in law, Neil, and outlined what he wanted, then he called his brother, Wade. Neither questioned his motives or his sanity; he knew they wouldn't. They'd all been brought up to trust their gut instincts, and if Kaeden thought something wasn't right with this family, then chances were it was true.\n\nKaeden stood and stretched. The heavy head caused by the mild concussion had all but disappeared, but the bruising to his chest and abdomen caused by the seatbelt was still tender and caused him a lot of discomfort. He didn't like the thought of driving anywhere. Feeling at a loose end while his brothers did what they do best and investigated Maggie's family, and Elena particularly, he tried to call Maggie again, becoming frustrated when the call went straight to message bank. \n\n\"Turn your phone on, Maggie. I just want to talk to you. I deserve an explanation about why you cancelled our date, don't I?\" he said in a gentle voice, leaving a message for when she finally turned her phone back on. She ran a business, after all, she had to turn it back on at some point.\n\nHe was persistent, if nothing else, and he decided not to let her dictate the terms of their future relationship. He called Ravi, a young guy who drove for Uber that had given him his number in case he ever needed something picked up and delivered. Kaeden was sure the young guy envisioned supermodels and the party lifestyle when he offered, but had found, on the few occasions Kaeden had called him, that his life was far removed from what the media reported. The two had struck up a trusting friendship over time.\n\n\"Ravi,\" Kaeden said into the phone, \"What's your schedule like for the next week?\" he listened as young man eagerly put himself at Kaeden's disposal. \"I'll give you two grand, cash in hand, for the week, plus extra for expenses, but I want twenty-four-hour service, starting tonight, right now.\" Again, he listened as the deal was eagerly accepted. \"Okay, first I need you to find a teddy bear that looks like a pilot, go build a bear if you need to. Are you writing this down?\" He gave him a list of things he wanted and instructions to come and see him at seven with as many of the items as he could find in forty-five minutes. With a bonus, if he could find the bear.\n\n*****\n\nMaggie frowned. wondering who could be at her door at this time of night. She opened it the small amount that the chain would allow and peered at the young man standing there. \"Hello?\"",
        "\"Hello. Ma'am, my name is Ravi. I have a delivery for Maggie Harris,\" he said with a cheerful smile. He held a large plain white box in his arms.\n\n\"Just a moment,\" Maggie closed the door and opened it again without the chain. thinking that the young man looked harmless enough.\n\n\"Here you go. Ma'am,\" he handed her the box and went to walk away.\n\n\"Wait. Don't I need to sign something?\" she asked.\n\n\"No, ma'am,\" He smiled politely. \"Have a good evening.\"\n\nConfused, she closed the door and locked it, again taking the box into the living room. Opening it, she was hit by the smell of fresh pizza which sat in a foil box; an envelope addressed to her stuck to it, and she opened it with a frown. Maybe Alecks had taken her words about needing to bake or starve to heart.\n\n\"I'm sure the hospital food wouldn't have tasted quite so bad if you were there to share it. I'm home now, though, and somehow the pizza already tastes better because I'm sharing it with you. Please call me, or at least answer your phone, Kaeden.\"\n\nMaggie opened the foil box and found half a margarita pizza and half of a small loaf of garlic bread. She laughed and shook her head, picking up a piece and biting into it. 'Waste not want not,' she thought. It was the nicest thing she had tasted in weeks, and she took another large bite before picking up a smaller box, about the size of a shoebox that was nestled in with the foil box of food. She opened it and found a bear dressed as a world war one pilot with the bomber jacket, leather cap and goggles. Wiping her hands on the napkin thoughtfully provided, she picked it up and held it as she read the small card attached to it. \"Talk to me, please, K.\"\n\n\"You,\" she said to the bear, \"I can talk to. Him,\" she tapped the card, \"not so much.\" She picked up the pizza and took another bite. She knew she should at least thank him for the gifts, even if they were pity gifts for an ugly duckling who just happened to be awake when he crashed his plane. Sitting the bear on the couch beside her, she picked up her phone and turned it on. She saw how many missed called there was when it wouldn't stop buzzing. She read the texts first and then listened to the only message he had left, enjoying the sound of his smooth voice. The phone came to life in her hands, and she stared at it until it stopped, then she turned to the bear sitting beside her.\n\n\"I'm sure every other girl he knows falls for his charming ways, but I am not like them. I know who I am and what I am,\" she said stiffly, as the bear stared back at her with its bright blue eyes. \"He probably has a cupboard full of your clones that he ships out to whatever girl he's trying to charm on any given day.\" She looked at her phone and began to type in a text.\n\n\"Thank you for the kind gifts. While appreciated and enjoyed, they were unnecessary. Please stop calling, I am not one of those girls you can charm into whatever it is that you want from me. Goodnight, Kaeden.\" She hit send and felt good about keeping the emotion she felt out of the text.\n\n\"No, not until you explain what happened,\" came the text response, and her phone began to sing out its soft tune again. Shaking her head she turned it off. \n\n\"No means no,\" she told the bear. She turned the television on and finished the pizza. She hadn't realised how hungry she was. Elena would have lectured her about being a pig and all of the calories. She could hear the high pitched nasally voice of Elena in her mind, \"It's no wonder you're so fat,\" she grimaced at the bear and pulled it onto her lap, enjoying the softness of it.\n\nAt nine thirty, an hour after the first delivery, she opened her door, ready to scold Ravi who she had seen through the door crack and found only another box. She looked up and watched Ravi's car disappear down her driveway. Taking the box inside she opened it, finding a dozen small pots of Ben and Jerry's ice cream and another note:\n\n\"I forgot to send dessert, and I wasn't sure what flavour was your favourite, so here are some of mine. Could you call and tell me which one is yours? Kaeden.\"\n\n\"First pizza and now ice cream. He obviously realises I don't watch my weight,\" Maggie rolled her eyes at the bear and took the ice cream into the kitchen to store it in the freezer. She smiled as she found one called hazed and confused and kept it aside while she stored the others. It was only a tiny tub, and she would work it off tomorrow, she told herself, as she took a spoon from the drawer and went back to watch the end of the movie.\n\nAt ten thirty she stalked to her door, ready to scream, and reefed it open to find a bunch of balloons filled with helium and weighed down by a small sandbag. She watched as, once again, Ravi's car went back down her driveway, and sighed, opening the card, \"It seemed silly to send flowers to a flower farm. Please call me; I need to know what happened to make you change your mind about coming to see me, or even talking to me tonight. Kaeden.\"\n\nShe was mad now. She picked up her phone, turned it on and dialled Kaeden's number. He had answered it before it had even seemed to ring. \"Hello?\" he said warily.\n\n\"You need to stop this. I need some sleep and that poor boy you have driving here and there and everywhere tonight needs sleep too. Not to mention you have been in the hospital, and you need sleep too. The whole world needs sleep, so just go to bed and stop this silliness!\" she raged at him.\n\n\"It's really good to hear your voice,\" he said calmly.\n\n\"This is becoming creepy, Kaeden. Are you trying to scare me? Are you going to continue stalking me and sending me messages via, well, via whatever Ravi is if I don't return your calls? You get how this looks, right?\" she questioned him is a terse tone of voice.\n\n\"I'm persistent, but hardly a scary stalker,\" he said, deflated by the accusation.\n\n\"Persistent is one thing, but this is ridiculous. Just because you couldn't get your own way, you decide to torment me? She's a big old fatty, she won't be watching her weight, I'll send her pizza and ice cream. Is that what you thought? How about, she's a big dumb ox, so she won't mind having to get up and answer the goddamn door to a stranger all night when she lives all alone on a farm, with no neighbours nearby. I may be all those things, Kaeden, but I have feelings, okay, so just stop pretending to be nice and charming. Stop flirting with me, because I know it's as ridiculous as everyone else thinks, and for fuck's sake stop calling me!\" She let all of her misery from the meeting with her family out in one big barrage of angry words and began to cry. \"Goodnight, Kaeden,\" she said with a wobbly voice into the stunned silence and hung up, turning the phone off.\n\nChapter 5.\n\nMaggie woke with a start. She'd fallen asleep on the couch with the teddy bear wrapped in her arms. The door banged loudly as if someone was trying to break it down. She ran her fingers through her hair and blinked, trying to get her bearings. The banging started again, and she looked at the bear and knew it was Ravi again. She got up and stalked to the door, prepared to give him a piece of her mind. \n\n\"Ravi, I know you are just doing your job,\" her words were cut off by Kaeden wrapping an arm around her waist and pulling her into his body to kiss her. It wasn't the soft brushing of lips that had been his sleeping beauty kiss when he left in the helicopter. This kiss was a lip bruising, heart-stopping breathtaking kiss that she felt all the way down to her toes and in every nerve ending in her body. When he finally released her, she was dazed and confused. Kaeden kept his arm around her waist as he walked her backwards into the house and closed the door, his eyes never leaving hers.\n\n\"Kaeden, you can't just come...\" she began, but once again his lips took her words and breath away. \"Stop,\" she said weakly, putting her hands on his chest, even as his arm tightened around her waist. \"Kaeden, I signed the paper giving Elena authority to sue you. I didn't want to, but...\" she shook her head. \"I'm sorry.\"\n\n\"I told you I don't care about that, I never did,\" he said gently. \n\n\"Then why are you here?\" she was genuinely confused. \n\n\"There's this angel who saved me that I want to get to know better, maybe take out for dinner sometime, who won't return my calls. I know that's hard to believe, right? Me, Kaeden McConnell, one of the country's most eligible bachelors, can't get a date with the woman he wants,\" Kaeden said in a sad voice. \"There goes my reputation.\"\n\n\"You want to date me?\" she asked as if he was speaking a foreign language.\n\n\"That's usually what happens. You know, boy meets girl, boy likes girl; boy asks girl on a date and girl accepts,\" he said with the crooked smile that she dreamed about.\n\n\"Kaeden, stop teasing me, I've googled you, remember. I am not the type of girl you date. Let me go and I will get you your folio,\" she said, her rational self taking over again to remember the reason for his being here.\n\n\"No, Maggie,\" he lifted her chin to look into his eyes. \"You are not fat or dumb, and if I inadvertently made you feel any of those things I am so very sorry, that was never my intention or what I think at all. If your family makes you feel that way and made you believe that I would, I am even sorrier,\" he said, leaning down to kiss her again, not the soul wrenching passionate kiss of early, but gentler, deeper and more tender. \"You're perfect the way you are. Tall women are my type; half-starved ones are not. I dare you to show me an inch of fat anywhere on your body.\" He let go of her chin and ran his hand down her side to her hip, keeping one arm still curled around her waist.\n\n\"Kaeden, you have to go,\" Maggie could feel the rational part of her brain sliding away, and she screwed her eyes shut to block out the brilliant blue sincerity that shone from his. \"Men like you don't date girls like me. It's ridiculous. You need to go home now. You have a concussion, and you shouldn't be here.\" Her eyes widened. \"You didn't drive here, did you?\"\n\n\"No,\" he chuckled at her concern. \"Ravi delivered me, and he will be back to pick me up and deliver me home in the morning.\"\n\n\"What? Were you planning on swooping in here with all your charm and expecting me to just invite you into my bed for the night?\" She accused.\n\n\"As much as I would like that, I'm not physically capable of satisfying a fiery woman like you tonight, or tomorrow night for that matter. I just got out of the hospital and I have no plans to go back in again anytime soon,\" he chuckled with a wince as his chest protested the use of those muscles.\n\n\"You should be resting!\" she scolded, concern for his health overriding her sense of propriety. \"Come, you can use my bed, it's better than the couch or the lumpy fold out in the spare room.\"\n\n\"Only if you sit and talk to me, tell me what happened with Elena to make you change your mind and get so upset with me,\" he remained immovable as she tried half-heartedly to squirm out of his arms. \"I'm going to get hurt if you keep doing that,\" he winced. \n\n\"Okay, fine, just let me go so I can turn everything off, and we can talk after your lying down,\" she said, hoping that, once he was horizontal, he would succumb to the sleep he so obviously needed. Kaeden reluctantly released her and she walked around turning off lights and the television before picking the bear up from where he lay on the couch and coming back to where he stood, smiling at the bear in her arms.\n\n\"I was hoping you'd like him,\" Kaeden said. \"Have you given him a name?\" he asked, as she led him through to the bedroom.\n\n\"He had a name when I got him. The tag said Talk to me -K. So I have been talking to him all night and calling him K. He thinks you're an asshole, by the way.\"\n\n\"Well, that hurts,\" Kaeden said, \"When I sent him to the nicest woman I've ever met.\"\n\n\"What can I say, he's protective of me. He didn't like me getting up to answer the door so late at night. He thinks strange men appearing at this farm late at night are probably dangerous, and I have a terrible habit of trusting them. This one weird guy actually crashed his plane here one night,\" she teased, but never got to finish the sentence as he stopped walking and pulled her into his body to kiss her again. \n\n\"You, my angel, are not like any other woman I've ever met,\" he murmured, holding her close and breathing in the scent of coconuts and something tropical as he buried his face in her neck and hair. \"You make me want to go against doctor's orders,\" he murmured softly in her ear and felt her stiffen. \"Luckily for you, though, I don't want to see the return of Nurse Naggard.\" He climbed onto the bed and stretched out. \"So let's talk about what happened this afternoon.\" He patted the bed beside him. \n\n'Well,' Maggie thought. 'He may as well know the truth. Maybe then he would leave her alone and go back to dating supermodels and the beautiful people more suited to his world.' She took a deep steadying breath and told him everything, how she'd baked because she had so little in the house to offer anyone, how they'd believed incorrectly that she was still in love with Alecks, who had been so cruel to her, how they made her feel ugly and dumb, and how she had signed the document without really having enough time to read it properly.\n\n\"He was your step brother, you weren't really related, not by blood, and everyone experiments a little when they're young,\" he shrugged. \"Nothing to be ashamed of there.\" He said lightly with an uncaring shrug, as if it were no big deal. He was surprised though, and a little angry that Alecks would take advantage of her that way when her father died.\n\n\"They make it sound so much worse. Just like with my inheritance that Elena held in trust for me. I got a lawyer from the yellow pages when Elena seemed to be taking forever to give me the farm and the money she held in trust for me. He was useless, but I got the farm eventually and signed off on the mismanagement of my trust fund because at least some of it had gone into the mortgage. She set up a corporation to act as a guarantor for the loan in case I ever defaulted, and the bank finally agreed to let me take over the mortgage and business,\" she explained. The missing pieces of information from what Wade and Neill had been able to put together in the short amount of time he gave them started clicking into place. \n\nKaeden didn't have all the pieces yet, and he wasn't even sure if Maggie knew just how underhanded her stepmother was, but Kaeden liked this woman enough to want to help her and make sure her life was more than worrying about keeping her home from the debt collectors. He decided there and then that he was going to help her whether she liked it or not.\n\n\"So Elena didn't tell you not to see me or talk to me?\" he asked tentatively.\n\n\"Hah!\" Maggie gave a derisive laugh. \"They thought that you would be horrified that I called to make sure you were okay in the hospital. As if a man like you would ever waste their time talking to me. I doubt it would even enter her head that talking to you was possible, let alone seeing, yet here we are.\" Maggie said as she yawned.\n\n\"Lie down, you're tired. I promise I won't try anything tonight,\" and just to prove it he sat up and pulled off his shirt, exposing the now purple bruising on his chest and abdomen.\n\n\"Oh my God! I had no idea! I hope I didn't do that getting you out of the plane?\" she was aghast and reached out to touch the bruises as he lay back down. \"Is there anything I can do? Do you need aspirin or anything?\" She said, quickly remembering herself and pulling her hand back as if scalded.\n\n\"You can lie down and rest while we talk,\" he said with that crooked smile that made her stomach flutter. \"Maybe turn the light off, it's hard on my eyes looking up at you like this,\" he said. \"Then, if you fall asleep I don't have to worry about finding the switch.\"\n\nShe turned off the light and climbed into the bed fully clothed, she wasn't so dumb as to fall for all his supposed innocent charm. Kaeden moved, sliding an arm under her shoulders and rolling her toward him so her head rested on the pillow beside his and her body pressed up against his side. He felt her stiffen but not push away and relaxed slightly.\n\n\"Maggie, I would like to spend as much time as you will let me talking to you,\" he said quietly. \"It must have been hard growing up in a family like that. After your father passed, I mean. I bet he was wonderful to have raised a daughter like you.\"\n\n\"Tell me about your family,\" she said, changing the subject with another yawn. \"I bet your mum is nice.\"\n\n\"Nice is relative. I think she is most often referred to as a formidable woman. She's like a mama bear, all cuddly warm unless someone touches one of her cubs,\" Kaeden tried to explain his mother to Maggie. \"She wasn't averse to swatting her cubs, either, when we deserve it. I imagine she will come to the city to swat me for crashing the plane.\"\n\n\"Was it the family plane?\" she asked in a voice laced with sleep. \n\n\"No, it was mine,\" Kaeden said softly, noting her eyes had closed. He leaned forward to kiss her forehead. \"Sleep now, we can talk in the morning.\"\n\n*****\n\n\"Maggie's not here,\" the distinctly male voice called out as Kaeden inspected the crash site the following morning.\n\n\"Yeah, I know,\" Kaeden said, walking toward the old man. \"I was hoping to convince her to spend the day with me.\"\n\n\"She's not one of those good time girls who hops into bed with any fella who offers!\" the man said sharply.\n\n\"I never thought she was,\" Kaeden chuckled. \"It's one of the things I like about her. She is a special kind of angel.\"\n\n\"That she is, she's like a daughter to me. I'm Bob Nicolls. I was a friend of her father, and I keep an eye on the place for her,\" he held out his hand.\n\n\"Kaeden McConnell, I'm the guy who crashed in the big storm a few days ago,\" he introduced himself.\n\n\"Bad business, that, but you seem better off than the greenhouse,\" Bob observed.\n\n\"Yeah, it's pretty bad, the work on the repairs should start next week, once the insurance assessment is finalised,\" Kaeden agreed.\n\n\"Good, I thought Elena and Alecks would try and hold up the work so she would run out of time and have no choice but to accept the developer's offer. She a piece of work that Elena, could never understand what John saw her in her personally,\" Bob said conversationally.\n\n\"I've offered Maggie help, financially, to get through this quarter, but she won't take it, she just wants the insurance for the repairs. Maybe you can talk some sense into her.\" Kaeden asked.\n\nShe's a stubborn girl, that one,\" Bob said. He considered Kaeden thoughtfully and decided to tell him the story of how Elena had let this place run into the ground before signing it over to Maggie, and how, through sheer force of will, the stubborn young woman had brought the place back to life and eked out a living for herself here. Kaeden knew the story, but it was interesting to hear it from Bob's perspective instead of listening to the basic facts he had gotten from Neil and Wade.\n\nKaden had followed him into the greenhouse during the story and had naturally begun helping the man start to clear away some of the debris from the ruined section of the greenhouse as they talked. He found out more about the woman he couldn't get enough of from barely an hour of talking to this one man. The more he discovered about Maggie, the more he wanted to know. He had never met a woman like her. She was kind, caring and innately good. He remembered that, even when she was obviously mad at him, she had worried about his injuries and made sure he was looked after last night. She was strong and resourceful, and she was beautiful, though she didn't know it and her low self-esteem wouldn't let her believe it, even when it was pointed out. He smiled, remembering the way she looked as he rose from the bed this morning with her long hair fanned out over the pillow. It took a great deal of self-restraint for him to walk out of the bedroom and let her sleep.",
        "*****\n\nMaggie woke up alone, hugging the teddy bear she had received the night before, and rolled over expecting to see Kaeden asleep and finding nothing. She looked at the clock; she had slept in, and she remembered that she had turned her phone off so the alarm couldn't have woken her. He probably left already, she decided, feeling a pang of disappointment, and went to have a shower, berating herself for having been taken in by his charm again.\n\nShe tried not to think of last night as anything more than a nice guy checking up on her when she had been obviously upset after talking with her family. He was a nice guy, she admitted. He hadn't taken advantage of her as she slept, nor forced himself on her, aside of those few kisses they had shared. She let herself remember the earth shattering initial kiss when she opened the door and found him standing there instead of Ravi.\n\n\"Don't be silly, Maggie,\" she told herself, \"He's just a nice guy, and a few kisses meant nothing, he was just trying to make you feel better with that talk about wanting a date.\" She gave a derisive snort. She'd never been on a real date in her life. And why? Because she wasn't the type of girl men wanted to date. She knew it. It had been pointed out to her for her whole life. He was just being nice and trying to make her feel better, despite being the one with the injuries.\n\nOnce dressed, she went into the kitchen and found the balloons in the middle of the table, making her smile. Kaeden had helped himself to half of the last muffin for breakfast and some damper, leaving her half of a thick slice buttered with Jam, making her laugh as she remembered the food he had sent last night and the note about food tasting better if it was shared. She ate the damper and put the plate in the sink, taking the muffin with her as she walked down to the greenhouse to start work.\n\nShe could see someone working in the greenhouse and, assuming it was Bob, smiled and went in, grabbing her gloves and preparing to start the clean up since they had saved most of the viable plants yesterday.\n\n\"Good morning, Angel,\" Kaeden smiled, wrapping an arm around her waist and pulling into his body before kissing her. \n\nThe retort about calling her Angel died on her lips as she melted into his kiss and her body responded to his arms and lips. \"What are you doing here?\" she asked breathlessly as he broke the kiss.\n\n\"Helping Bob clean up my mess,\" he shrugged. \"Did you eat something?\"\n\n\"Funnily enough, I had half a muffin and half a piece of damper,\" she laughed lightly. \"You like sharing food it seems.\"\n\n\"I like sharing a lot of things, including your bed,\" he waggled his eyebrows at her and gave her his crooked smile. \"I was going to try and convince you to spend the day with me, but I'm guessing you would just argue with me about the mess I made and probably made worse, despite my best intentions.\"\n\nShe pursed her lips and nodded, admitting that he was right. \n\n\"So I have a proposal for you. I will call Ravi and leave you to your work, if...\" he paused. \"You answer your phone today. I put it on charge last night so there can't be any excuses, and that you consider having sharing food with me again tonight.\"\n\n\"I'll consider your proposal,\" she nodded.\n\n\"Great, let me know when you have an answer, I'll just be over there making more mess,\" he chuckled.\n\n\"Okay, I will answer my phone today,\" she gave in. \"Now call Ravi, please.\"\n\n\"And?\" he prompted.\n\n\"And consider sharing food with you again,\" she agreed reluctantly. She was still suspicious of his motives for wanting to spend time with her.\n\n\"Your wish is my command, Angel,\" he grinned and dug his phone out of his pocket.\n\nChapter 6.\n\nThree days later, Kaeden sat on a comfortable couch in his penthouse as Elena Dorian was shown into the room. As soon as he'd left Maggie's farm, he'd called in a few favours and found out all about the Dorian family and the Dorian Corporation. He'd spoken to Maggie constantly over the last three days, but she had steadfastly refused a date on a weeknight as well as any assistance he offered her with the farm repairs. She was stubbornly waiting for the insurance to come through, despite being broke and needing all the help she could get. \n\n\"This is highly unusual, Mr McConnell, but I am glad you decided to consider my offer in such a timely manner,\" Elena said smoothly as he stood to shake her hand.\n\n\"Of course,\" he returned her false smile with one of his own. \"Rest assured, I intend to make amends for any inconvenience I may have caused in Miss Harris's life.\" He immediately took away the line in the sand she had mentally drawn, thinking he would want to negotiate her demands. \"This is my brother and family Lawyer, Wade McConnell,\" he introduced the pair. \"Please, have a seat so we can discuss your proposal further.\"\n\nKaeden was charming, and he knew it. He knew how to handle people like the Dorian's, Maggie Harris, on the other hand, was a different matter. He had never met anyone like her, and he found himself inexplicably drawn to her on a number levels. He wanted to know more about her, and this woman may well be the key to some of that information.\n\n\"Thank you,\" Elena said stiffly, taking the offered chair and sizing up the men before her. Kaeden was handsome and charming, and Elena could see why Maggie had not wanted her to go after him for more than the insurance assessors report had quoted. She was young and impressionable though, and, unlike Elena, would have fallen for the charming man's platitudes. Elena was not so easily swayed though, and she was determined that she would leave here with everything she had asked for.\n\n\"Would you like some coffee?\" he asked, as his assistant stood by waiting for the greetings to be dispensed with. \n\n\"I've already had my quota this morning, thanks, but some water would be lovely,\" she said sweetly. She could be just as charming as Kaeden when she needed to. \"You seem to be recovering quite quickly,\" she observed.\n\n\"I am,\" he agreed. \"I am forever in Miss Harris's debt for rescuing me and treating me so well immediately after the crash.\"\n\n\"She's a solid, dependable girl, you were fortunate that she was awake and able to get to you so quickly,\" Elena nodded wisely. While the investigation was still ongoing, Elena had read the reports from when Maggie had been interviewed by the doctors and investigators. Those experts had explained that, had he remained slumped as he was in the cockpit, the bruising and damage to his chest and torso could have caused very serious complications for him. She had also spoken to some experts to ensure that Maggie had not done anything wrong and would not be culpable in anyway for Kaeden's injuries.\n\n\"I was indeed,\" he said easily. \"Maggie was an angel of mercy that night.\" He paused while his assistant placed a tray bearing a jug of cooled still water and bottle sparkling water on the small table between them, along with crystal glassware. \"Do you mind if my assistant stays to take notes?\" He asked solicitously.\n\n\"I insist,\" Elena inclined her head. \"Let's get down to business, shall we?\"\n\nWade stepped in at that point, and they danced around each of the demands in her proposal for over an hour. Despite the fact that Kaeden had already decided to give Elena everything she had asked for, Wade didn't want to make it seem too easy for her and had a few conditions of his own that he could tell she was not impressed with, but they were minor in her eyes and he had agreed to all her other terms.\n\n\"That about does it,\" Elena said smugly, gathering up the paperwork in front of her, \"Now, if you will just sign off on those small changes we can settle this without any further unpleasantness for my daughter, and she can get on with rebuilding her clientele after this setback.\"\n\nKaeden sat back in his chair and studied the woman for a long moment before speaking again. \"I would like a meeting with Maggie and to offer a further proposal,\" he said cautiously. \n\n\"Maggie doesn't want to be involved in the legal side of this incident, she just wants it all resolved so she can move on with her business,\" Elena said narrowing her eyes. \"What did you want to propose? I will take that to her and see if she is amenable to meeting with you.\"\n\nHe spent time outlining an excessively generous proposal that would make Maggie a wealthy and independent woman in her own right, and at the end handed her the proposal documentation to peruse and take to Maggie. He could see the shock mixed with confusion on the older woman's face and he smiled. Offering a sizable bonus for her if she brokered the deal with Maggie was risky, but he had warned Maggie that he intended to offer her more than what she was asking for. He just hadn't told her the full reason for doing this.\n\n\"I'm having dinner with Maggie and Alecks tonight. I will present your very generous offer in the best possible light and get back to you tomorrow,\" Elena said coming to her feet. \"It's been a pleasure, Mr McConnell.\" \n\n\"The pleasure has been mine, I assure you,\" he stood with her, walking her to the door.\n\nKaeden didn't like being underhanded, but he knew from their recent conversations that the only way Maggie would let him save her home and business from the financial hole it was in was through the woman sitting before him. The settlement for the damages his crash had caused was barely a drop in the bucket compared to the financial aid she truly needed if she got it without her step-mother syphoning off most of the funds as she had done with Maggie's inheritance.\n\nKaeden intended to help her, if only he could convince her to let him. So far anything outside of the insurance assessors report had been rejected by the stubborn woman. Despite finding her infuriating at times, he knew he was falling for Maggie, but he also knew it would take patience and time for her to accept that he could love her. \n\nNow, after meeting Elena Dorian, he knew she would accept his help, albeit begrudgingly. Elena wouldn't be able to resist the money she would have access to with the bonus as well as her daughter's wealth. He just didn't want Maggie to hate him for going behind her back and involving Elena even further in her life after Maggie had confided her history with Elena to him.\n\n\"I hope you know what you're doing, little brother,\" Wade said, his displeasure over the meeting clear in his voice. \"If that's your future mother in law, I'm not sure you haven't got a residual brain injury from that crash.\n\n\"Maggies nothing like that, I assure you,\" Kaeden laughed. \n\nChapter 7.\n\nMaggie had been sitting in the greenhouse, misting the damaged roses, willing them to grow and listening to one of her favourite pieces of music when she saw the blur of a red car turn off the road and make its way up the gravel drive to her house through the fibreglass panels of the greenhouse.\n\n\"What now?\" she grumbled out loud. She'd spent the last week brooding and fighting off the gifts and apologies from Kaeden, who had gone behind her back to offer a deal to Elena to help her out, over and above the insurance. Elena had told her it was a sizable amount, but he wanted a percentage of the flower farm business, and final say in her business plans. Not that she had any great plan, aside from selling what stock she had left to the clients who remained loyal to her because of her father's good name.\n\n\"Fuck!\" she swore, losing the tranquil moment she was having with the plants and music. \"What the hell does this person want from me?\" She got to her feet and shook her head. If Kaeden had sent her something else, she was going to scream! That stupid man had crashed into her life and turned it upside down and inside out. She was still mad at him for offering the proposal she had immediately turned down, even if Elena hadn't told her it wasn't worth the paper it was written on. \n\nShe didn't think she could handle anything else at the moment. Especially with Alecks engagement party happening tonight and Elena ordering her to attend and sit quietly in a corner as repayment for all her legal work in the lawsuit. She had thought the last person Alecks would want there was her, but Elena had insisted the family were required to show a united and happy front to the McMahon family, whose daughter, Suzie, was the bride to be.\n\n\"Hello?\" She called out loudly enough for the woman who had gotten out of the car to hear and turn toward her with a wide smile.\n\n\"Hi!\" the woman called back, walking a few steps over the gravel slowly. \"Stay there, I'll come to you! I'd love to see your roses!\" She hurried towards Maggie, wearing sensible leather boots, which, for some reason, made her feel more amenable towards the woman.\n\n\"Are you sure you're in the right place?\" Maggie asked, taking in the designer labels of the woman's accessories and seeing the design of what she had thought, from a distance, were sensible boots.\n\n\"Of course, silly. I'm Claire McConnell, and we are going to be such good friends,\" she grinned that thousand watt smile again and propelled Maggie toward the greenhouse.\n\nMaggie wanted to scream. My God, was it not enough that Kaeden was putting pressure on her to accept his stupid rescue package and let him become a partner in this business, but now he sends his sister here to interfere in her life as well! She knew if she were a cartoon character in this debacle she would have steam coming out of her ears at that moment. \n\n\"You're Kaeden's sister,\" Maggie stated looking at the woman. \"He sent you here?\"\n\n\"Yes and no,\" Claire said, entering the greenhouse and looking around at the greenery and tiny new buds appearing just in time for Valentine's Day. \"Yes, I am Kaeden's sister, no, he didn't send me. In fact, he told me to stay away from you entirely.\"\n\n\"And yet, here you are,\" Maggie gave a derisive laugh.\n\n\"Don't be mad. You have no idea what I had to go through just to find out your name and where you lived,\" she rolled her eyes. \"I just wanted to thank you personally for saving the nicest of my siblings. Plus, he's the youngest, so we're all a bit protective of him.\"\n\n\"I didn't do anything anyone else wouldn't have done. Honestly, it's not a big deal. I just want to get the greenhouse fixed and salvage as much as I can for my local buyers for Valentine's day. It's an awful time of year to have your supplier bail on you,\" she explained, common courtesy over-ruling her anger.\n\n\"Oh, I don't know, Kaeden makes you sound pretty heroic, he calls you his angel,\" she smiled wistfully.\n\n\"Did he also tell you that he got knocked out and nothing he remembers from that night is reliable?\" Maggie laughed. \"The way I remember it he accused me of being a terrorist and torturing him, which seemed to have completely slipped his mind.\" She sighed, knowing she sounded waspish. \"Look, the insurance will cover everything, he doesn't owe me anything else, so if he sent you here to be my friend and talk me into accepting his proposal...\" she paused as the other woman's eyes grew wide. \"Business proposal, I mean, then he can forget it.\"\n\n\"I don't know anything about that. You see, my husband's brother-law, Neil, happens to work with your brother's fianc\u00e9e, and we all started hanging out together a couple of years ago when Alecks and Suzie first started dating. Anyway, we were all out for drinks the other night and Kaeden's name came up, so I paid attention for once. I don't particularly like that particular group of friends.\" She paused as if embarressed by the admission. \"It seems your brother doesn't like the amount of attention you are getting from Kaeden, which I thought was weird because you're a hero and all. So, I listened more and asked some questions,\" she continued to walk through the greenhouse, gently stroking the plants until she came to the damaged section which Maggie was still in the process of cleaning up, and stopped in her tracks.\n\n\"So, this is it, huh?\" she surveyed the debris. \"Where Kaeden crashed and almost died.\" There was a catch to her voice.\n\n\"Would you like me to give you a moment?\" Maggie asked, concerned by the change in the effervescent woman. \"He was never going to die here,\" she said confidently.\n\n\"No, I'm here for you, the woman who saved him from dying, not for me,\" she seemed to take hold of herself and smile. \"And I don't want to give you the time to rush off and yell at Kaeden because I'm here interfering in your life. He doesn't know I'm here, honestly.\"\n\n\"So why don't you get to the point of your visit?\" Maggie asked. She was angry, but she could hear the sincerity in Claire's voice and somehow knew there was more to this visit than a simple thank you. \"If you tell me the real reason you came all this way, then there won't be any need for me to call Kaeden and accuse him of sending you here, further embarrassing myself,\" she sighed.\n\n\"Straight talking, no bullshit, I get why Kaeden likes you so much. Okay, I will be straight up with you as well. I guess I don't know the history or the ins and outs of your family dynamic, but I am here with a plan for you shock the bejeezus out of your step brother and rub his nose in the way he and his future bride treat you,\" she saw the look of alarm on Maggie's face. \"You just have to trust me, and I am really hoping you will!\" she said in a slightly pleading tone.\n\n\"What do you mean, the way they treat me?\" Maggie said indignantly.\n\n\"I'm not beautiful or smart or career driven. My one claim to fame is my family connections and the fact that I know people because of that and they talk to me because I'm the least threatening person in the world. I'm their friend and confidante because I never tell secrets unless there is no choice, and even then I am careful about what I divulge and who to. I can charm most people into what I want, the only one I have seen do it better is Kaeden, and he says you're immune,\" she raised an eyebrow speculatively. \"I hear stuff, and you'll get the straight up honest version of what I heard about you as soon as you offer me a cool drink and a seat on a comfortable chair.\"\n\nNeither spoke as they left the greenhouse and walked around to the back door of her home. Once in the kitchen Maggie took juice and two glasses from the refrigerator and took a seat opposite Claire McConnell.\n\n\"You pour, and I'll talk,\" Claire said conversationally. She waited for Maggie to pick up the juice before speaking again. \"Okay, here's what I have found out about you and your family, and you can feel free to correct me if I am wrong and I will name my source so you can rectify that situation. Agreed?\" Claire had become all business-like suddenly. Maggie was grateful for the change in the woman's demeanour. This version of Claire McConnell was easier to deal with than the charmingly elegant woman who had arrived and attempted to win her over with flattery.\n\n\"Agreed,\" Maggie said in a strong, confident voice that belied her misgivings.\n\n\"Your full name is Magnolia Rose Harris, not Margaret, like most people assume. Your mother was a hardworking country girl from out west where your father met her and fell instantly in love. He married her within weeks of meeting her. He brought her back here, they had you, and during the process discovered ovarian cancer, which she fought and won. No siblings for you, but you had your mother until you were seven when she succumbed to a recurrence of the disease. Your father met your step-mother a few years later through his business contacts, and they married when you were twelve. You gained two stepbrothers from that marriage, Ruslan, who not only left home, but the country, as soon as he could after graduating, and Alecks, who is a slave to his mother's wishes. Have I got it right so far?\" She asked, taking a sip of her drink.\n\n\"More or less,\" Maggie shrugged, appalled by how much this woman knew about her.",
        "\"By all accounts, it was a happy marriage, and you and your brothers got along, became close even. After your fathers tragic death in a car accident, Elena lost the plot for a while and sued everyone she could, leaving you three children to your own devices. Her boys thrived, but you, not so much. You hit puberty and got even taller and more solid. By fifteen you were almost the height you are now, which is impressive by the way, I don't know many women taller than me. You were teased and bullied mercilessly at school, and you turned to your brothers for support because you had no one else. Still good?\" she asked, taking another sip of her drink. \n\nMaggie nodded numbly, frightened about what was about to spill out of this woman's mouth.\n\n\"Alecks took advantage of the situation and seduced you, taking your virginity along the way, and you were his dirty little secret until Elena found out and put a stop to it, blaming you. She was cruel and twisted the affair, accusing you of being such a walking monstrosity and the only way you could get anyone even to look in your direction was to parade around naked in front of her sons. She moved herself and her sons out of this house leaving you to fend for yourself, throwing you the bone of a small allowance until you finished school and managed to get the business, beginning to turn a small profit again.\" She paused as Maggie spoke.\n\n\"I lived with family friends, not by myself at that time,\" she corrected.\n\n\"Duly noted, Suzie told me that bit. Now, where was I? What you didn't know was that the small allowance Elena gave you was part of a bigger allowance she was taking from your trust fund which she managed, or, should I say, mismanaged, and when you came of age there was very little left of the nest egg you had believed your father had left you. Being a lawyer, and realising how things could go for her, she offered to sign over the property and business to you lock stock and barrel, which you accepted,\" she smiled. \"That was a gutsy thing to do, even if you didn't know about the debt it had incurred from the loss of business.\"\n\n\"I didn't know,\" Maggie admitted. \"But I managed until the new housing estates started to open up in this area. Now the bank is putting all sorts of pressure on me to get my loan up to date and in the black again,\" she admitted. The woman knew this much, she may as well know everything. \"The insurance from the crash should make up for the shortfall from the damaged crop this year. I'll survive, I always do.\"\n\n\"Alecks is a shit and Elena is a witch, and you should want more than just to survive!\" Claire said, appalled by Maggie's attitude to the way she had been treated by the pair. \"It's like a freaking Cinderella story. The evil stepmother making you work here so Alecks can pass himself off to his future father-in-law as a land holder, even though it totally belongs to you and you could fight anyone who says differently in court, don't let them snow you on that too. I looked it up, you are down as the sole owner of this property, though Elena is still listed as financial management, which you will have to get removed eventually,\" she shook her head distastefully. \"Who knows what deals she's been trying to make behind your back with the developers.\"\n\n\"Wouldn't be the first time. Even Kaeden tried to make a deal with Elena behind my back,\" Maggie admitted sourly. \"I thought better of him.\"\n\n\"But he told you about that before he went to Elena, didn't he?\" Claire defended her brother and immediately realised she shouldn't have said that much. She waited until Maggie grudgingly nodded and breathed a sigh of relief that Maggie hadn't asked how she knew that information. \n\n\"So you, Cinderella, have this evil step mother and two dreadfully impotent step brothers, and now I want the role of fairy godmother, just for one night. Which is, of course, why I am here,\" she finished with her perfect smile.\n\n\"I'm not accepting your brother's proposal,\" Maggie said emphatically. \"So if that was the point of laying my whole miserable life out there like that then you failed epically.\"\n\n\"Kaeden told me to butt out of his business, and I did, because I would never do that to him,\" Claire said seriously. \"Not when he asked me specifically to stay out of it.\"\n\n\"You also said he told you to stay away from me, yet here you are, all up in my personal business,\" frustration had crept into her voice, and she would be having words with Kaeden later, regardless of what this woman said now.\n\n\"No, you don't understand, I'm not here because of Kaeden. I'm here because I was that fifteen year you who was too tall and awkward. The girl who was teased mercilessly about being butch and ugly. I was the designated ugly friend that boys never looked at or smiled at or asked on dates. Except for my brothers, but they never once even thought to take advantage of me or set me up with unscrupulous friends who would have kept me a dirty little secret, like Alecks did to you,\" she looked into Maggie's face. \"I had a loving family to get me through those awkward self-hating doubts and growing pains. Your so called family took advantage of your awkward teenage years at every turn. I want to make them so regret ever treating you that badly, and I know just how to do it.\"\n\n\"You're beautiful. I doubt you ever had an awkward phase. Elena's not so bad; she could be worse. She gave me the flower farm in the end, which is all I ever really wanted. As for Alecks, well, it hurt when he turned his back on me, but we're able to be friends now, and that's a start,\" Maggie spat out the lies she told herself every day to feel better about her lot in life and survive on this farm for a little longer.\n\n\"Oh, come on, if not Elena, then let's make Alecks hurt a little about what he turned his back on. For every awkward, big-boned girl who never gets to feel pretty enough, let me be your fairy godmother, just for tonight, and then I will never ask again. Please, please, please, please, please?\" Claire continued to beg, despite the shaking of Maggie's head.\n\n\"You have to go to this party anyway. I saw the guest list and know you accepted, though I can't imagine why. And since you're going, you may as well go in style and make a splash! I promise you'll get the final say on anything I do,\" Claire wheedled before beginning to beg again.\n\n\"I don't want you to spend any money, and I have no money to spend. Not on clothes or a hairdresser or anything,\" Maggie's mind worked quickly, admitting that she did have to show up, at least for a little while, and dreading looking totally out of place and embarrassing Alecks and Elena. She had given her word, however, and she knew she had to go.\n\n\"Done! No money spent, got it. Anything else?\" Claire agreed eagerly.\n\n\"If it all gets too much you let me come home immediately. No means no, Claire,\" Maggie said seriously. \"One more thing,\" she hesitated. \n\n\"Sure,\" Claire tilted her head.\n\n\"If I agree to this fairy-godmother make-over, you can't tell Kaeden. I don't want him to think I will give in to his requests as well if he begs like you did,\" she gave a half laugh, imagining that he had never begged a woman for anything in his entire life.\n\n\"Yes, most definitely yes, I was going to say the same thing. He's going to be pretty pissed at me if he finds out I was here at all,\" Claire nodded.\n\nMaggie called Bob to let him know she was leaving so he would come over and keep an eye on the place for her. Then she had a shower, making it quick so that Claire had as little time as possible to snoop around the house. She packed a bag with a spare set of comfortable clothes and pulled the dress bag containing the dress she had planned to wear tonight from her closet. It wasn't her style or colour, but Elena had pressed it on her, declaring that if Maggie showed up in jeans she would make security remove them and she could walk around in her underwear all night.\n\n\"You're ready then?\" Claire asked, eager to be on the road where it would be harder for Maggie to have doubts and change her mind. Stowing the dress and overnight bag in the boot of her car, she caught a glimpse of the material of Maggies dress that could only be described as diarrhoea brown and shuddered. She had arrived just in time it seemed.\n\nChapter 8. \n\n\"She won't be long,\" Scott, Claire's husband, reassured Maggie as he passed her a glass of champagne. After all of the chaotic activity of the afternoon, Maggie felt a little lost, and every time she caught sight of her reflection in one of the mirrors in this house she was surprised at the woman who looked back at her. That woman wasn't her. That woman in the mirror was nothing like her, and she nervously fidgeted as Scott tried to make conversation with her. \n\n\"Here I am,\" Claire breezed into the room looking spectacular. She immediately sensed the unease returning to Maggie and wrapped an arm around her shoulder. \"What did you do to her?\" she turned on her husband.\n\n\"He's been perfectly wonderful,\" Maggie smiled at the man she had only met a little over an hour ago. \"It's all this, it's not me.\"\n\n\"No it's not, you're right,\" Claire agreed. \"This is your one fairy-tale appearance, and tomorrow you go back to being Cinderella with dirt on your face and wearing comfortable old jeans and boots. Tonight, however, you are going to show the world just how strong and beautiful, and God damn sexy you are.\"\n\n\"You can say that again,\" Scott nodded. \"I think we need Rochelle to make a dress like that for you,\" he said to Claire. Maggie blushed and smiled shyly. Rochelle was one of several of Claire's friends who had arrived during the afternoon. It seemed she had no limit of friends who would come and help her out free of charge, and Rochelle, a new designer in the fashion industry, was only too happy to supply dresses to the two women, as long as they told anyone who would listen who designed and made them.\n\nEach of the women had been understanding and considerate of Maggie's wishes to maintain something of her own personality. Rochelle has supplied a red dress with a rose motif that hugged and made the most of her figure after a little tweaking with supportive underwear. Sandy had given her the trademark single plait she wanted, but, rather than down her back, she had styled her hair to frame her face and pulled the large loose plait over one shoulder. They had relaxed in chairs and sat opposite each other as professional makeup artists painted their faces, and shoes had been supplied by yet another designer keen to get their name out amongst the elite of their society. Claire was right; she knew people and how to charm them. It was her super power.\n\n\"I feel like a bit of a fraud,\" Maggie said softly.\n\n\"Nonsense, this is all you, just with a little extra decoration, but you're still you, and I like you. We are going to be the best of friends once you get over this little squabble with Kaeden,\" Claire took a large mouthful of champagne and tried to ignore the inquisitive look she got from Scott.\n\n\"What did you do?\" Scott narrowed his eyes. \"This isn't that Maggie? Alecks's sister Maggie?\" His head spun between the two women. \n\n\"I think I should give you two a few minutes,\" Maggie said, putting down her untouched champagne and moving back towards the guest bedroom where her belongings were stored. \n\n\"No, stay!\" Scott said abruptly, making her stop in her retreat like an obedient puppy. \"Alecks thinks you're still in love with him. If you show up alone looking that sexy he's going to think you did it for his benefit, and Suzie is going to have a fit because she can't banish you from his life. We need to get you a date, someone believable. I can't believe you didn't think this through, Claire,\" he grumbled at his wife.\n\n\"Don't worry, it will all work out,\" Claire said overly cheerily, realising her husband was right, and she hadn't thought through all the angles. She was looking for payback for Maggie, but what she would have gotten was a scene if Scott hadn't have clued in before they left, and Maggie would have never forgiven her or Kaeden, who was totally clueless about tonight.\n\n\"There is only one way to fix this that I can see, give me five minutes,\" he walked away, leaving them staring at each other.\n\n\"I love that man,\" Claire said eventually. \"He's a fixer; it's his super power. It doesn't matter how bad the mess I make is, he can fix it right up, and everything comes out smelling like roses,\" she grinned. \n\n\"I think I should just call and tell them I fell and twisted my ankle or something,\" Maggie sighed. \n\n\"No way, after everything I put you through getting ready today, all the work my friends put in!\" Claire was aghast. \"You are real and good, you'd never let anyone down just because of a little glitch,\" she scolded. \n\n\"Okay, that's sorted. You may as well take a seat, ladies; we are going to be fashionably late,\" Scott said, and picked up his glass of champagne. \"I know this is all Claire's doing, but for the life of me I can't work out how a sensible girl who can resist Kaeden's charm got talked into a fairy tale makeover by the worst fairy godmother ever!\"\n\n\"I'm not the worst ever,\" Claire sulked.\n\n\"Tonight you are,\" Scott chuckled.\n\n\"She wore me down and agreed to all my terms,\" Maggie said miserably, knowing he was right. \"The idea of not being the ugly duckling in a room full of beautiful swans for the first time in my life got to me in the end.\"\n\n\"Do you own a mirror? Even without all the bells and whistles, I doubt you're a duckling of any sort,\" he said aghast, and shot his wife a horrified look.\n\n\"I never called her that, I told her just the opposite, and you should have seen the ugly diarrhoea brown of the dress her stepmother had picked out for her,\" Claire said defensibly. \n\nScott had a no-nonsense way of getting to the heart of the matter, and, before she knew it, Maggie had told him way more than she had divulged to Claire during their day. These two were good, and she made a mental note never to agree to anything either of them suggested ever again.\n\n\"Sounds like your date is here,\" Scott grinned, as the front door closed loudly, making the two women come to their feet a moment before Kaeden entered the room.\n\n\"Claire, you and I will talk about this,\" Kaeden said in a low tone, kissing her cheek in greeting before turning to Maggie with a winning smile. \"You know, if you wanted a date for tonight all you had to do was ask, I have been trying to get you to say yes all week\" he leant forward to kiss her cheek, and she breathed in his scent, remembering every inch of the body beneath the suit he wore. An image that had fed her fantasies for days, despite being angry with him.\n\n\"I didn't. I mean, I don't. It wasn't my idea!\" She tripped over her words, feeling intoxicated by his proximity. \"Shouldn't you still be at home recovering or something? What about your head and the bruising on your chest?\"\n\n\"I've recovered from that little bump perfectly, thanks to you. You look spectacularly well tonight,\" Kaeden complimented her.\n\n\"I don't feel so spectacular right now,\" she said in a wavering voice.\n\n\"Could you guys give us a minute?\" Kaeden asked over his shoulder. \n\n\"I can go, if you like, but I'm pretty happy to be here, with you, on a date, finally. I know this isn't you,\" he ran the back of his knuckles down her cheek. \"I know you'd rather be wearing jeans and boots and probably be elbow deep in a rose garden, but here we are in the middle of one of my sister's harebrained schemes. So, we can either fight the tide and have a miserable night, or play the part of new lovers on a date to the hilt and make everyone, including the happy couple, jealous,\" he said smoothly. \"Just F.Y.I. I've been day dreaming about the second option,\" he flashed her a grin, making her give a muted half laugh.\n\n\"Don't tease me,\" she shook her head. \"We both know you date supermodels and pretty girls, not big strapping farm girls like me, and I don't think you're that good of an actor that you could pull it off, quite frankly.\" She fell easily into the teasing banter that had sprung up between them during their evening phone calls before she started trying to give him the cold shoulder. \n\n\"Challenge accepted,\" he declared. \"This will be easy, because I won't have to act, despite your doubts.\" He leant forward then and kissed her. Not the light brush of lips friends sometimes shared, but kissed her hard and long, stealing her breath away and leaving her slightly shaken. Her knowledge of men was minimal, she had to admit, but she could drown happily in his kisses. \"Do you have a bag or gift or anything we need to take with us?\" he asked solicitously when he released her from the kiss.\n\n\"Bag!\" she said breathlessly, pointing toward the guest room in a daze. \n\n\"You might want to fix your lipstick while I grab it,\" he grinned and moved away, leaving her immobile and staring after him.\n\n\"Well, that seemed to go well. Is he mad at me?\" Claire said in a stage whisper, coming back into the room and breaking the spell Kaeden had cast on Maggie.\n\n\"No, it sounds like he expects this sort of thing from you,\" Maggie said softly, as she walked to the mirror and fished the lipstick she had been given out of her bag.\n\n\"Are you mad at me?\" Claire asked, her anxiety clear.\n\n\"No, you meant well,\" Maggie sighed. \"I'm mad at myself for getting carried away with your fairy tale story and super powers of persuasion. I'll know better next time you come to me with a scheme.\"\n\n\"Next time?' Claire asked hopefully.\n\n\"Of course, there will be a next time, we're going to be good friends, remember?\" Maggie doubted that Claire would want to be friends after tonight's debacle, but she was willing to put on a brave face and weather whatever happened now. It was too late to pack it all in and go home. She had no car of her own, and she doubted she could even afford the cab fare home, which she guessed would be astronomical.\n\n\"Oh, I knew it. We are going to be the best of friends!\" Claire impulsively hugged her. \"You look amazing, don't doubt that for one moment tonight.\" They turned toward the two men standing at the door waiting for them. \"It's time,\" Claire held her hand as they walked out of the door together with the men following behind them.\n\n\"Thank you for coming to help me,\" Maggie said as they drove. \"Your family seems heavy on charm, please tell me none of your other siblings are likely to show up on my doorstep unannounced.\"\n\n\"Unannounced? No,\" he shook his head. \"so that you know, Elena called and invited me to this party tonight. So you don't have to make any excuses about inviting me without informing them.\"\n\n\"If you were going anyway, they aren't going to believe this is a date,\" she frowned.\n\n\"After Scott rang I had my assistant call and let her know I had changed my mind because you had turned down a date with me because of the party,\" he said easily. \"I don't know exactly what's going on with you and Alecks, but I get the broader picture, and I am more than happy to be here, I assure you. Scott didn't have to twist my arm much to agree to this,\" he turned his head, smiling at her. He considered that Elena inviting him had been a stunt to embarrass Maggie and make her feel even more uncomfortable at the party so she would leave early. \"Relax and enjoy the night, and as soon as you want to go just let me know, whether that is within five minutes of arriving or if we are the last ones there.\"\n\n\"You're much too kind. I don't deserve all this,\" Maggie said, looking up and watching him drive. \"I didn't save you, you saved yourself, you just don't remember. You called me a terrorist!\"\n\n\"I do remember that, but I also know it was you who sat me up and took that belt off. It was you who forced me to get up and get out of the plane and into the safety of your home when that storm was lashing the wreck of my plane. I know you put a cold compress on my head and took my vitals every twenty minutes. Do I need to go on?\" he asked, keeping his voice light, despite the gravity of what he was saying. \"I may not remember everything that happened, but I read the reports, including your statement.\"",
        "Maggie said nothing. She didn't want to argue about it again. She never won these arguments. She looked out at the scenery as they drove further from the city to the home of Suzie McMahon's parents. Butterflies danced with hobnail boots in her belly and she unconsciously placed a hand over her stomach. \n\n\"Nervous?\" Kaeden asked.\n\n\"Yeah, this,\" she indicated her dress, \"Isn't me.\"\n\n\"No, it's not, but you look amazing none-the-less. Maybe this could be you once in a while,\" he turned to look at her again. \"I have to admit, I like both versions of you.\"\n\n\"You don't know even one of those versions properly,\" she laughed. \n\n\"I'm pretty sure you're not a terrorist anymore, despite your awesome terror skills,\" he chuckled. \"We may not have seen each other, but we have talked, really talked, every single day, twice a day sometimes since we met. I know you, and I know this type of event makes you uncomfortable because you think you don't fit in with the types of people you meet here. You do though, and you are more than a match for anyone there tonight.\" He reached over and took her hand. \"I'm pretty happy to be your date, even if it wasn't exactly your idea.\"\n\nMaggie looked down at the hand that clasped hers. He was just being nice, and this time she appreciated it. She knew it was just for show, though. She'd seen enough on the internet to know she was the furthest thing from his type, despite what he said and her fantasies of the last few days. If he weren't always so nice to her resisting his charm would be easier. It was hard enough for her to say no over the phone, but if he asked her about the business proposal tonight she wasn't sure she wouldn't wake up tomorrow morning with a business partner.\n\n*****\n\nKaeden pulled up into the circular driveway before the big house and handed his keys to a valet as Maggie's door was opened for her. He hurried around the car, taking her hand and standing quietly as Scott and Claire alighted from the car following theirs. He squeezed her hand as they made their way inside, giving her silent encouragement and making her look up at him with worried eyes. He felt for her. He didn't know the full story, but he knew enough to know that this party was one of her worst nightmares. \n\n\"You ready for this?\" he murmured in her ear.\n\n\"Not in the slightest,\" she whispered back. \n\n\"Just follow my lead and we'll make it through to a quiet corner somewhere,\" he squeezed her hand again and stepped through the doorway. They followed the clearly marked path through the house to the large indoor and outdoor entertainment area where the guests all milled around talking in small groups.\n\n\"Mags, what happened to you?\" Alecks said in bewilderment, coming forward to greet her.\n\n\"Don't ask,\" she rolled her eyes and accepted the perfunctory kiss on the cheek. For the first time in years she didn't feel overwhelmed by his proximity and launch into a far too familiar embrace. It might have also had something to do with the fact that Kaeden was still gripping her hand and had stiffened at Aleck's greeting. \"You look beautiful, Suzie,\" she smiled at her future sister-in-law.\n\n\"So do you? I was worried you would show up in your work jeans,\" Suzie said, wrinkling her nose as if she smelled something bad.\n\n\"Well, surprise,\" Maggie said with false cheerfulness in her voice. \"Do you know Kaeden McConnell?\" she lifted the hand that he held as she introduced him.\n\n\"By name only, it's good to meet you finally,\" Alecks said cordially, but his expression told anyone who knew him well that he was anything but happy to meet Kaeden.\n\n\"I know your sister, Claire, quite well, and I see she's just arrived too. If you'll excuse us, there is just so many people to greet at this stage of the evening. Please, get a drink and mingle,\" Suzie suggested, and dragged Alecks with her to see Claire and Scott.\n\n\"That was less painful than expected,\" Maggie smiled. \"I think I'd like that drink, though.\"\n\n\"Champagne okay?\" Kaeden asked, snagging a glass from a passing waiter. \n\n\"I'd rather red wine, if we can find it,\" she said, feeling ungrateful but knowing she was a lightweight when it came to alcohol, and she wanted to make the one or two drinks she had mentally allowed herself tonight to count.\n\n\"Your wish is my command,\" Kaeden took a gulp of the champagne in his hand and steered her toward the outside area where he imagined a bar had been set up. \n\n\"Kaeden,\" Elena's voice sounded behind them. \"I got your message. I hadn't thought you would be arriving with Maggie, though.\" She looked disapprovingly at the clasped hands.\n\n\"A lucky coincidence,\" Kaeden turned to face Elena, his arm moving supportively around Maggie's waist.\n\n\"Hello, Elena,\" Maggie smiled. \"I decided not to wear the dress you gave me, it really wasn't my colour.\"\n\n\"Oh, well, whatever makes you comfortable, dear. I would have thought this dress was a little revealing for your taste, but as long as you're happy wearing something so bright you draw attention to yourself,\" Elena said somewhat waspishly.\n\n\"Red is definitely her colour, and it was clever working roses into the motif. It's like a walking business card,\" Kaeden enthused, pulling her slightly closer to him. Elena opened her mouth to say something further when a deep rich voice sounded, making them look past Elena to the source.\n\n\"Why, Magnolia Rose, do my eyes deceive me?\" the voice said in a dramatic accent straight out of Gone With The Wind. \"Talk about a surprise,\" he laughed, taking her hand and lifting it above her head to make her spin for him. \"You're the belle of the ball!\"\n\n\"Ruslan!\" Maggie exclaimed, immediately feeling the loss of Kaeden's protective arm around her as a shield against her family.\n\n\"I'd agree with that,\" Kaeden said, moving forward to greet the man who had stolen his date. \"Kaeden McConnell,\" he held out his hand toward the other man.\n\n\"Ah, man, I heard about the crash. You look okay though, so it can't have been too bad,\" Ruslan observed, still holding Maggie's hand.\n\n\"I was lucky, an angel rescued me before any great damage was done,\" Kaeden said with a chuckle.\n\n\"Oh, so you're moonlighting as an angel in the evenings now?\" he asked, making Maggie blush.\n\n\"Don't listen to him. He wasn't even conscious most of the time he was at the farm. He knocked his head so hard he had visions, I think,\" she laughed.\n\n\"Well, anyone who can make her laugh like that is okay by me. Nice to meet you, man,\" Ruslan took Kaeden's outstretched hand. \"She looks great tonight, doesn't she, mother?\"\n\n\"I guess. It's not the type of dress I would have chosen for her,\" Elena said, sounding as if she was forcing the words out. \n\n\"She's a grown up, mother, she can choose her own clothes, and Kaeden doesn't seem to mind her choice,\" he winked at Maggie, and at that moment won over Kaeden, who was quite prepared to dislike her entire stepfamily.\n\n\"We were just on our way to the bar. Can we get you anything?\" Kaeden offered, eager to get Maggie away from Elena. \n\n\"No, I'm good, I wanted to introduce Mother to a friend of mine, but I will catch up with you in a little while,\" Ruslan said, and steered his mother away from Maggie and Kaeden. \n\nThey had stayed near the bar, talking to people who passed, introducing themselves and comparing how they knew the lucky couple. During the time they had been standing in the quiet corner, a tall man had been staring at her on and off from across the room until she began to feel uncomfortable.\n\n\"Kaeden, can we move somewhere else?\" she whispered. \"This guy keeps staring at me, and it's making me uncomfortable.\"\n\n\"What guy?\" he asked, looking around.\n\n\"Just some random guy, he's moved, I think, but I'd still like to move, if that's okay?\" she whispered feeling silly now.\n\n\"Sure, but it's pretty quiet here in this out of the way spot,\" he looked at her with a frown before looking in the direction she had glanced when she told someone was making her uncomfortable. \"Give me a minute, and I'll get you another drink before we move to save doubling back again.\" \n\n\"What do you think you're doing?\" Alecks voice was a sibilant hiss, taking her by surprise as he stalked toward her. \n\n\"Waiting for my date, he's at the bar,\" Maggie blinked in surprise at her brother.\n\n\"You know what I mean, showing up here looking like that. It's over, Mags, this is my goddamn engagement party!\" he hissed, keeping his voice low so no one else would be able to hear him.\n\n\"I know. I am here because you and Elena insisted that I come, remember. Sorry, I'm not wearing that sack Elena bought me, but really? It was diarrhoea brown!\" she said, using Claire's words. \"I'm happy for you, Alecks, honestly. I'm not here for any other reason than to celebrate your engagement. I even brought a date to prove I have moved on.\" The date hadn't been her idea, and once again she marvelled at the superpowers of the McConnell family. She made a mental note to thank Scott properly for his foresight.\n\n\"Yeah, well, I wouldn't get too excited about that, the man feels indebted to you, and, let's face it, men like him don't date girls like you!\" Alecks lip curled into a sneer. Maggie felt like he'd punched her in the stomach, and any snappy retort she may have had died on her lips as she acknowledged the truth of his words. Men like Kaeden McConnell didn't date big, awkward women like her. He'd been so attentive that she'd let herself buy into the fantasy for a while, and Alecks' sharp slap back into reality physically winded her.\n\n\"Is there a problem here?\" the man who had been staring at her from afar suddenly appeared beside them. \"You look quite pale, Maggie, can offer you some assistance to find a seat?\"\n\n\"No, I'm fine,\" Maggie put on a false smile. \"I was just telling my brother how truly happy I was for him that he found someone so sweet to share his life. She's a lucky girl.\" She with all the sincerity she could muster and looked up into Alecks face. \n\n\"I believe we've spoken on the phone, I'm Wade McConnell,\" the man finally introduced himself, taking her hand. \"I agree, Suzie McMahon is quite the catch.\" There was a knowing tone in his voice as he released her hand and turned to Alecks, holding out his hand in greeting. \"You are, indeed, a lucky man, not only is your fianc\u00e9e beautiful, but influential as well.\" He knew exactly who he was dealing with as he took Alecks hand.\n\n\"Seriously? I agree to one date with the man, and suddenly I have to meet his whole family. Tell me your parents aren't here,\" she laughed self-consciously.\n\n\"They couldn't make it, but I believe Jack is around here somewhere, and Lilly should be here as well, I think, but I haven't seen her yet. You tend to find we show up on mass at this kind of shindig. We're a bit like rent a crowd, and it's not so bad when you can always find a friendly face at these things.\"\n\n\"Good grief!\" Maggie sighed dramatically. \"What have I done?\"\n\n\"I leave your side for just a few minutes, and when I come back you're surrounded by men,\" Kaeden complained as he returned and passed her a glass of red wine.\n\n\"That's hardly fair, especially considering one's your brother and the other is mine,\" Maggie's laugh sounded false, even to her own ears. \"Thank you for the drink,\" she leant over and kissed his cheek. She'd done it for Alecks benefit, but Kaeden grinned at the contact and snaked his arm around her waist, holding her close.\n\n\"You're welcome,\" he lowered his head and kissed her in a brief, chaste brushing of lips. When he straightened again to greet his brother he kept his arm firmly around her waist. \"Wade, I thought you weren't coming tonight?\"\n\n\"And I thought you said she was a jeans and boots rustic beauty,\" Wade chuckled. \"Not this glamorous creature.\"\n\n\"Trust me, she is, but Claire went down there unannounced today and convinced her to wear one of her friend's designer dresses, and then got carried away. Apparently, they are BFF's now,\" Kaeden groaned. \n\n\"I'm standing right here, and it's a Rochelle original, if anyone asks,\" Maggie cut into their banter. \"This,\" she indicated her dress, \"Was definitely not my idea,\" she said, looking at Alecks pointedly.\n\n\"That's a bit harsh; Alecks, here, probably thought you dressed up for him. I mean, for his big party, jeans and boots wouldn't have cut the mustard here, I don't think,\" Wade had followed her gaze. \n\n\"There you are,\" Ruslan's voice cut through the tension she felt emanating from Alecks, and she looked up. \"Doesn't Magnolia look spectacular tonight!\" He addressed his brother with a smirk.\n\n\"Stop calling me that,\" Maggie chided him good-naturedly. \n\n\"Maggie is the jeans and boots cowgirl, Mags is the girl with dirt on her nails and smeared across her face, this, new you,\" he waved his hand up and down in front of her, \"Is pure Magnolia. Embrace it, my love. Now, I have come to rescue you and introduce you to the cute little stray puppy I brought home with me.\" He took her hand and led her away from the small group.\n\nKaeden released her reluctantly and watched her move away with her brother, unsure if he should follow. He was about to take a step when Wade took a step toward Alecks and lowered his voice to a rumble.\n\n\"That girl may be your sister, but if I hear you talk down to any woman the way you did to her just now, I will not be so pleasant about stopping you,\" the low rumble was barely audible, but the threat in it was very clear. \"Now perhaps you should go and make sure everyone is enjoying your party.\"\n\n\"It's been a pleasure,\" Alecks said with equal animosity in his voice, then turned and left the brothers where they stood.\n\n\"So, want to tell me what that was about?\" Kaeden frowned at his brother.\n\n\"Apparently guys like you don't date girls like her,\" Wade shrugged, but was still disturbed by the look on her face after Alecks had hit her with those words.\n\n\"I should go find her,\" he craned his neck as she disappeared into the crowd. \n\n\"Stay for a minute. It's Jack's turn to run interference,\" Wade chuckled. \"Scott's fixing Claire's badly conceived plans again. I think it's a hobby for him, like working out a cryptic puzzle and getting the solution every day. I swear he enjoys it.\"\n\n\"You could be right about that,\" Kaeden laughed with his brother.\n\n\"Are you sure about this?\" Wade asked the same question, for what felt like the millionth time. \"You hit your head pretty hard in that crash.\"\n\n\"You, my brother, have just met my future wife, there is not a doubt in my mind,\" Kaeden said confidently. \"I knew from the moment she called me in the hospital the day after the crash. Now I just have to convince her. If my interfering family don't scare her witless first.\"\n\nThe party became a whirlwind for Maggie as she was drawn into conversations with each of Kaeden's siblings and, or, their partners, who never seemed to be far away from where she was standing. She had barely seen Alecks or Elena, for which she was grateful, and she allowed herself to enjoy the evening until, unable to resist any longer, she excused herself and went in search of the bathroom. She'd waited patiently in the small line until Suzie appeared in front of her.\n\n\"Maggie, why don't you come upstairs and use my bathroom. We're practically sisters now, and I feel like I don't know you at all,\" Suzie said in a sickly sweet tone that alarmed Maggie with its false sound. \n\n\"I don't mind waiting, really, and we have lots of time to get to know each other better. Maybe you would like to come out to the farm and choose the roses you would like for the wedding. I would be happy to order some stock in if we don't have the exact shade you're looking for, or we have a few orchids, if you prefer,\" Maggie suggested, trying to stall the woman.\n\n\"I've already decided on the colour scheme for the wedding, come with me and I'll show you. You can suggest what flowers would look best. I doubt your little hobby farm could cater for such a large event, but you could suggest something, perhaps,\" Suzie said in the same sickly sweet tone.\n\n\"Look, it's my turn,\" Maggie said in relief as the bathroom became free, the last thing she wanted was to be trapped alone with Suzie somewhere in this huge house. She stepped into the powder room and turned to close the door, but a determined Suzie pushed her way in after her and shut the door heavily, locking it behind her and trapping Maggie in the room. \n\n\"Listen here, you freak! I know all about you and Alecks, and if you think you are going to waltz in here and upstage me at my party, you are very mistaken! You are embarrassing your brothers and your mother with your crude backwoods farm manners! You're uneducated, unrefined and you don't belong here at all, and if you flirt with Alecks again tonight, there will be no invite to the wedding of the year, even if you are his sister!\" Suzie raged into Maggie's stunned face.\n\n\"I have a date. I wasn't flirting with Alecks. He's marrying you,\" she said in a wobbly voice, unshed tears stinging her eyes.\n\n\"Hurry up and pee,\" Suzie turned her back so Maggie could relieve herself behind the half wall that hid the toilet from the rest of the powder room. \"I have Daddy's driver waiting to take you home. Don't bother saying goodbye to anyone, trust me, you won't be missed.\" She turned back around after hearing the toilet flush. \n\n\"Not in your wildest dreams would a man like Kaeden McConnell ever date a freak like you. He just feels sorry for you and is here because you helped him when he crashed. You need to go home and stop embarrassing yourself and him with all this,\" she waved her hand dismissively at the dress Maggie wore.\n\n\"You're right. I don't know what I was thinking,\" Maggie said sadly. A tear dropped to her cheek as she washed and dried her hands. She dashed it away and took a deep breath. \"You're right it's time to return to my real life, I don't want to make a scene at your lovely party.\" She had known it was too good to be true, and she had let herself get carried away again. She should be mad at Suzie for treating her this way, but the truth of her words cut through the fantasy evening she'd been having with Kaeden and she just felt foolish.\n\n\"Well, I'm glad we agree on something!\" Suzie snapped, and opened the bathroom door, propelling Maggie away from the party toward the front of the house.\n\n\"Maggie?\" a woman's voice called her name. Suzie ran through the front door and down the driveway, pulling Maggie after her. Maggie tripped and fell as the driver opened the door for her, and Suzie screeched at him to hurry and drive, pulling Maggie up from her prone position and pushing her into the car and slamming the door a moment before the car took off at speed.\n\nOnce seated, Maggie craned her head to look back at the driveway, seeing Lilly, one of Kaeden's sister's, standing beside Suzie with one hand pressed to her cheek in horror and her phone in the other. The whole family had been so nice to her, she had let herself believe that, for just one night, she could fit into this world. She'd been wrong. Suzie was right, she was a freak, but she was wrong about Alecks. If nothing else Kaeden had cured her of any residual feelings she had for her step-brother. She leant her head against the glass window pane and let herself cry as the long journey home began.\n\n\"What happened?\" Lilly asked aghast at what she had just witnessed. She was supposed to be running interference, how was she going to tell Kaeden and Claire that she lost Maggie!\n\n\"That freak had to go, she was ruining the party!\" Suzie snapped angrily, and then suddenly seemed to remember herself and who she was talking to, \"I mean...\" she started to retract her words.\n\n\"It's okay. I heard what you said,\" Lilly eyed her hostess and grimaced. \"Unfortunately you have just thrown my brothers date out of the party. I'm glad I don't have to be the one to tell him. I'll just find my husband, I know he will be looking for me by now. I imagine we will be leaving as soon as Kaeden find's out what you have done.\"",
        "\"You can't be serious!\" Suzie said. \n\n\"Oh, trust me, I am deadly serious. Maggie was the nicest person I met at this party, and I can see why Kaeden likes her so much. He's been mooning over seeing her again all week. I'm afraid you just tossed out one of us, so the rest of the McConnell's will follow,\" Lilly said, lightly walking through to the back of the house and gathering, not her husband, but Scott into her confidence. He was the fixer. He could fix any bad situation. Gosh knew, Claire made enough of them, so he had practice with disasters like this. Kaeden was not going to take this news well.\n\n\"She did what?\" Scott exclaimed loudly, making everyone around them stop and look at him. Surprising Lilly, he didn't apologise for the outburst. Instead, he stalked over to where Kaeden stood. \"Our hostess just forced Maggie to leave in a private car.\"\n\n\"She did what?\" Kaeden exclaimed in a loud voice that mirrored Scott's outburst from a moment before. Then took off at a trot towards the front of the house with Scott on his heels. \n\n\"Suzie has their driver taking her home. Maggie's perfectly safe,\" Scott reassured him. \"Go after her. I'll get Lilly to call you and tell you the full story.\"\n\nScott walked back into the party and could see that Lilly had already begun to inform Wade and Claire of what had just occurred. He loved being part of this family. They were a tight unit who cared deeply for each other, and to be drawn into their circle was to feel the unconditional love they each had for one another.\n\n\"Is there anything I can do to help?\" Suzie's father approached Scott with a concerned look. He had every reason to be concerned, Scott mused. His business was heavily reliant on the McConnell's, and, while not a close friend of the family, they were business colleagues and had a general friendship.\n\n\"I don't know, Mike, your daughter just threw my future sister-in-law out and sent her home in your car with your driver. It's probably a little late to do anything about that,\" Scott said shaking his head. The man visibly paled and didn't try to stop Scott walking to where his wife stood. \"Ready to go, darling?\" he inquired.\n\n\"Most definitely,\" Claire nodded and took her husband's hand. \n\n\"What's going on?\" Alecks asked Suzie, as the remaining McConnell's left the party without taking the time to farewell their hosts leaving a low buzz of speculation running through the crowd.\n\n\"Your freak of a sister, that's what happened!\" she spat, placing all the blame for her mistake on Maggie.\n\nChapter 9.\n\n\"Come on, Maggie, pick up your phone!\" Kaeden yelled into the darkened car as it went to message bank once again. He raced through the back streets and down the highway, determined to beat her home. This party had been his one shot at having a memorable first date, which they could laugh about in years to come, and he wasn't about to let a stuck up little bitch like Suzie McMahon wreck it for him.\n\nWhen he eventually pulled up in Maggie's driveway, he was sure he had beaten her home and could put the plan he had been formulating into practice when he saw a shadowy figure move from the greenhouse towards him. \n\n\"Maggie's not here!\" Bob called out.\n\n\"Yeah, I was with her earlier, and she disappeared on me, I was hoping to beat her home so I could talk some sense into her and continue our date, maybe make a weekend out of it,\" Kaeden said. \"If I can convince her to continue our date, can you keep an eye on the place?\" Kaeden asked quickly as he saw the lights of the car carrying Maggie approach. \n\n\"She could use the break, but if you've upset her, I don't like your chances,\" Bob spoke with concern.\n\nKaeden walked up to the slowing car and opened her door as soon as it stopped. He took in her tear streaked face and offered his hand to help her out. She ignored it and stepped from the car, moving to walk past him without a word. \n\n\"Hey! You run off like Cinderella from the ball and now that I tracked you down you won't even explain why you didn't tell me you were leaving?\" Kaeden said gently. \"I thought we were having a good time, at least I was.\"\n\n\"You don't have to pretend anymore. It's been pointed out quite clearly that I don't fit into that world and was just embarrassing my family and you by pretending that I did,\" she said sadly, not turning to look at him. \n\n\"Now you listen here, Mags, any fella would be lucky to have you on their arm, and this here fella sped all the way here from that party to make sure you were alright. That doesn't sound like someone pretending to me,\" Bob's heart broke for the girl he had known from the time she could walk. \"You at least owe him the courtesy of an explanation.\"\n\n\"He's only here to drop off the bag I left in his car and no doubt retrieve this dress for his sister. If you give me a minute to change you can take it, I'll pay for the dry cleaning, you can send me the bill,\" she sighed, trying not to start crying again.\n\n\"Maggie, just stop, this is a date, and it's not over, so just get in the car and stop whatever this is!\" Kaeden said, hoping his change in demeanour might snap her out of the self-pitying stupor she was in.\n\n\"There he is, Bob,\" she said in a harsh voice to match his. \"The man used to getting his own way! Women fall at his feet; people from all walks of life just jump to attention as he walks by! Well, not me, I'm not one of those girl's who will jump into your bed at the end of a date, so forget it! So, you see, there is no need to prolong the agony. We are not having sex tonight!\" she enunciated each word as if speaking to a child.\n\n\"Well, that's disappointing to hear, but I hadn't thought beyond the party. I hadn't been the one to plan this date, if you remember,\" Kaeden argued back with a small crooked smile. \n\n\"What is it you want from me, Kaeden? The crash was an accident, and the insurance will cover it. I'm sure you've never had to go on a pity date before, but you should have been relieved when it ended and gone home.\" She sighed.\n\n\"Well, to start with, I want to finish our date, and then I'll tell you what else I want,\" he shrugged. \"So, get in the car, please, Bob can handle everything here, can't you, Bob?\" Kaeden looked at the old man. \"Here's my number, you can call if there are any emergencies,\" he took a card from his wallet and passed it to the man.\n\n\"No!\" Maggie shouted at both men and turned, walking into her house and slamming the door shut.\n\n\"It looks like it's going to be a long night for me, care to keep me company for a bit?\" Kaeden asked Bob. \n\n\"Care to help me in the greenhouse?\" Bob asked in return. He was curious about a few things that had come up just before Maggie's arrival and during their argument.\n\n*****\n\nMaggie stalked into her bedroom, half expecting him to follow her and felt a small pang of disappointment when he didn't. She tore off the dress and went into the bathroom, determined to rid herself of every trace of the nightmare she was having. She scrubbed her face clean in the shower and washed her hair as she went through a wide range of emotions. \n\nShe was indignant that Suzie, of all people, had practically thrown her out of the party. She was mad at herself for getting carried away by the atmosphere created by Kaeden and his family. The few snatches of conversations she'd had with Elena and Alecks had been heated exchanges, reminding her that she didn't fit in there and that his marriage was not only important to Alecks, but the whole family, as he would be marrying into money that could help sustain the farm and her father's legacy. Regardless of anything else, she did care about Alecks on a family level, and she hoped she hadn't ruined everything for him. \n\nBy the time she stepped out of the shower she just felt stupid. Instead of getting ready for bed, she pulled on an old worn pair of jeans and a singlet top. On her way through the kitchen she grabbed a bottle of water and continued down to the one place she never felt stupid or awkward. Her greenhouse and her precious roses.\n\nIt hadn't even occurred to her that Kaeden wouldn't have left when she slammed the door on him, so when she saw the blurry shadows in her greenhouse she broke into a run, thinking someone was in there destroying her plants. She'd had intruders before, and she was ready for a fight. She picked up a small hand spade from the trestle as she entered and moved warily through the greenery.\n\n\"What are you planning on doing with that?\" Kaeden asked, standing up from where he had been crouched down sweeping debris from around the still intact pots. He'd taken off his jacket and shirt, and she could see the bruising still evident on his chest. \n\n\"What are you doing here?\" she asked, as if it was the strangest thing she had ever seen.\n\n\"Giving Bob a hand,\" he shrugged negligently.\n\n\"I thought you left,\" she suddenly became tongue-tied. \"Aren't you still recovering? Those bruises are still showing.\"\n\n\"It's nothing, and I'm hardly straining myself here. What you were suggesting earlier, on the other hand,\" Kaeden waggled his eyebrows, \"Would have taken considerable effort on my part,\" his voice lowered seductively. \"I don't do that by halves, let me assure you.\"\n\n\"Urg! You're so infuriating! Go home, Kaeden. You shouldn't be doing this,\" she grumbled, balling her hands into fists and putting them on her hips. \"You shouldn't be doing this or anything else here,\" she alluded to his innuendo about sex. \"Maybe I should ring your doctor, or, better yet, your brother. I think I still have his number on my phone.\"\n\n\"If that was a threat, it's not a very good one,\" he said, slowly advancing on her. \"He will just tell you that I am a big boy and can look after my own affairs.\"\n\n\"Good grief, you're acting like a child who can't get his own way!\" she argued.\n\n\"No, I'm a man who knows what he wants and doesn't give up easily. Some people like that quality in me,\" he chuckled.\n\n\"What is it you want from me, Kaeden? Seriously, the date is over, so just tell me, I don't want to play games anymore tonight,\" she sighed and sagged in defeat.\n\n\"Neither do I,\" he said, seriously making her look up at him. He leant forward and wrapped his arm around her waist, pulling her close as he kissed her. Not the chaste brushing of lips they had enjoyed at the party, but the lip bruising, tonsil tickling, deep kiss that took her breath away and left her weak at the knees. He felt her not only give into the kiss but participate equally, and he smiled, looking into her eyes as he broke the kiss. \"I want more of that.\"\n\n\"Be serious, there are hundreds of girls out there willing to do more than kiss you,\" she scoffed.\n\n\"There's only one woman I want to be kissing right now, though,\" he bent his head, kissing her again, paying attention to how her body softened against his as she melted into the kiss. \"I want you, all of you in every way possible. Marry me,\" he said, letting the words roll off his tongue.\n\n\"That's not funny!\" She huffed and attempted to push him away.\n\n\"It wasn't meant as a joke,\" he said frowning at her.\n\n\"We're practically strangers, Kaeden, and, let's face it, I don't fit the profile,\" she pushed him away properly. \"Just go away and leave me alone.\"\n\n\"Just here me out, I have a business proposal for you?\" He said, quickly recovering from her immediate rejection of his impromptu marriage proposal.\n\n\"Another one? Elena already told me that the first one wasn't worth the piece of paper it was written on!\" she spat. \n\n\"Did she indeed?\" Kaeden asked, shocked by her words and realising Neil and Bob's suspicions had been right after all. He had been so sure Elena would take the bonus money; he hadn't considered that the farm was worth more to her, even if she had to ruin Maggie's life to get it. \"Bob?\" he raised his voice knowing the man was still here and had just moved away to give them some space. \"Bob knows a little something about that, and I suggest you listen to him.\"\n\n\"Yeah, okay, I'll tell her what I think is going on, but can I have a cuppa while I talk? The night air isn't so good for the old bones,\" he said unhappily, having been close enough to listen and know what Kaeden wanted him to do after their talk. Kaeden was about to argue when he saw a flash of curiosity soften Maggies features. 'Well played, old man,' he thought to himself. \n\n\"Fine, let's go up to the kitchen,\" she said. Her concern for Bob overriding her feelings about Kaeden's cruel teasing. How could he ask her to marry him like that? They were virtual strangers who had nothing in common except that he crashed his plane on her farm.\n\nMaggie resolutely ignored Kaeden and walked ahead of the two men, getting to work on the tea as soon as she walked into the kitchen. She hadn't noticed Kaeden detour to his car before following them in, and was surprised to see only Bob sitting at the table when she turned around.\n\n\"Mags, honey. He's a little unorthodox in his thinking, but I think he's a good man, it might be worth listening to him, at least without looking like you might stab him with a carving knife,\" Bob said mildly. \"You had Elena come and warn me to stay out of your business, and I have, but I can't stay silent anymore.\"\n\n\"I never asked her to tell you that!\" Maggie was aghast. \n\n\"Yeah, I've been guessing she told a lot of lies to a lot of people using all that legal jargon to bamboozle us,\" he grumped. \"How's that tea coming?\"\n\n\"Here's something to warm up your bones, old man,\" Kaeden walked in and placed a leather folio on the table, as well as a bottle a Chivas Regal.\n\n\"Maybe just a small one,\" he grinned. \"Could we have a couple of glasses, Maggie?\"\n\n\"Why do you have a bottle of alcohol in your car?\" Maggie asked tersely. \"If you're a drunk, that would explain a lot of things.\"\n\n\"No, I'm not an alcoholic. It just saves time when I lose a ludicrous bet. I tend to bet on stupid things, like making it back to the city in my plane before a storm hits. I lost that one, obviously,\" he chuckled.\n\n\"Obviously,\" she rolled her eyes. \"God, give me strength,\" she turned her back on him and poured the boiling water into the old pot and placed it on the table to steep while she got cups and saucers out. She took the last of the banana bread she had baked at breakfast time and put it on the table with butter in case they were hungry. \n\n\"Okay, Bob, why should I take any proposal this man makes seriously, given that I have known him less than two weeks and only seen him twice remembering that one of those times he was barely conscious?\" Maggie asked. \"The second time being tonight, where, as far as dates go, this one didn't go well, and we left the party separately.\"\n\n\"Well, when you put it like that,\" Kaeden grumbled.\n\n\"Because you have put your trust in the wrong people, and if you don't let this guy help you, regardless of his motivations, you'll lose the farm and everything your father left you,\" Bob said bluntly, and, seeing her about to argue, held up his hand silencing her.\n\n\"This isn't about him, Maggie. He seems nice enough, but neither of us knows him. This is about you needing to take the blinders off and see what's happening here. If this guy hadn't crashed, you and I would have gone on none the wiser. I wouldn't have understood why you sold the land to the developers rather than ask for help, and you would have gone on believing I never offered more help than just keeping an eye on things when you were away.\" Bob took a breath and downed the finger of whisky Kaeden had poured him, motioning for another.\n\n\"Elena told you that I said I didn't want you coming here to visit anymore,\" she shook her head. \"Why would she do that, and why would you believe her?\"\n\n\"Probably the same reason you believed her when she said I didn't want to come anymore,\" he challenged. \"She made it seem like a reasonable request, given the circumstances.\"\n\n\"I guess,\" she nodded. \n\n\"Before you came of age, and she was mismanaging the farm and your trust, I challenged her on a number of occasions. When she threatened me and told me you wanted me to stay away, that son of hers was with her, and you trusted him at the time. So I stayed away, for the most part while they were here, and, when I could, I came over to help you out,\" he admitted.\n\n\"I would never have asked you to stay away,\" Maggie leant over and touched his hand. \"I've known you my entire life. You were like a second father to me.\"\n\n\"Then listen to me now, and listen to him, because Elena and Alecks, and even that little fop, Ruslan, probably, have plans for this place that don't include you. Do you know who the developers are that want this land? Have you spoken personally to your bank manager? Or is Elena handling all of that and you're just accepting that she is telling you the truth?\" he probed. \"If the business and land go into foreclosure and have to be sold, the management company gets the money, not the nominal owner operator who defaulted.\"\n\n\"That's ridiculous! I own this land and the business, Elena has nothing to do with it!\" Maggie challenged. \"I have the contracts with the bank it's all legal.\"\n\n\"No, you, as part of her management company, own the land, but if the bank forecloses to pay off your debts, any residual funds will go to the management corporation, namely, Elena and your brothers, as well as you. You'd get a nice little sum after the sale price was split four ways,\" Kaeden said seriously,\" but I imagine you would have to use most of it to pay off your debts and find somewhere else to live.\"\n\n\"You went through my personal and financial records?\" She turned on him again, anger flashing in her eyes.\n\n\"I noticed the company name on the insurance documents. I paid the settlement two days ago to that corporation, and I would be willing to bet you haven't seen a cent, nor will you see a cent until you start making waves about it,\" he defended the reason he had done the digging in the first place. \"When I accepted the insurance assessment, which was way over the top, I also offered a second proposal,\" he tapped the folio. \"I would be willing to bet you didn't even get to see it. She would have waved it around in front of you, but I doubt she left a real copy for you to read, so here it is.\"\n\n\"Hold on. This can't be true. None of it makes any sense. Why would they do that to me?\" Maggie's head was spinning.\n\n\"Ruslan's broke, he doesn't mind where his money comes from as long as he doesn't have to work for it. I think he does care about you, like a brother, and probably doesn't know a lot about the deal Alecks has with his soon to be father-in-law,\" Kaeden paused. \"Mike McMahon, head of McMahon property developments.\" He prompted further when she looked at him blankly.\n\n\"He's the king, and Alecks is about to marry the princess for the generous bride price he will pay for with my farm,\" she understood now, and her voice petered out to a whisper. Elena had mismanaged the farm and her trust fund until there was practically nothing left, while she had finished school and bided her time until she was eighteen, now, five years later, she was finishing the job of destroying her step daughter's life completely. Maggie sucked in a deep breath and set her jaw stubbornly. \"If I work and wheedle I should be able to scrape enough together to keep the bank happy. Then I will see about this company thing. Thank you for telling me just how truly stupid I have been. I knew she was awful, but I never thought she meant me any real harm.\"\n\n\"Maggie, I want to help you, that's why I am telling you this. Let me help you, please,\" Kaeden's voice sounded pained.\n\n\"By letting you pay off my debt and giving you twenty-five percent of the business?\" she asked woodenly. \"Then I'd be right back here again with someone else owning my future.\"\n\n\"Fine, no twenty-five present, I thought that would make you feel better about accepting the money. I don't need the partnership. I just want to help you,\" Kaeden said.",
        "\"Of course you don't need it, you've never had to worry about money a day in your life!\" she spat.\n\n\"Maggie,\" Bob said gently. \"We're here to help. At least consider what he's saying, or let him get you a lawyer to go over your father's will and find a way to get that company management off this land so she gives you the insurance payout. Otherwise, you know she will delay until after Valentine's day, and there goes any small chance you might have had making the balloon payment.\" \n\nShe looked up at him with tired, sad eyes. He hadn't seen her look so lost since her father had died. He reached over and poured a shot of whisky into her empty tea mug and waited while she took a sip. She grimaced and coughed, making the men smile. \n\n\"All I'm saying is, you've lost the battle, and if you refuse Kaeden's help, you will lose it all. The guy is offering you a chance to re-enter the battleground and win, think about it. Listen to what he has to say and then decide. I'm a proud man, but even I would ask for help when things look this bleak,\" Bob got to his feet. \"I'm just gonna take a little kip in the spare room, you two arm wrestle or something, but no more yelling.\"\n\n\"So I get to keep my farm, and you get what from this proposal, a share in a business that barely makes ends meet? You clearly don't need or want the twenty-five percent. And if you say you want me or to marry me one more time I will scream, and Bob will come back in here grumbling.\" Maggie asked calmly. \n\n\"When I offered this business proposal, I didn't realise how badly Elena and Alecks were about to screw you out of everything, so I would like to try a different approach,\" he said slowly. \"Let's get a piece of paper and write this down so we don't forget. I don't want you blaming the whisky tomorrow and reneging on any agreements.\"\n\n\"I won't drink any more of that without cola. I do have a bottle of red, though, in the study, it's not bad, probably a bit rough, by your standards,\" Maggie offered, remaining calm and preferring Kaeden's businesslike approach to the kissing and pleading voice that made her just want to say yes to everything he wanted.\n\n\"I guess that's where the paper is as well,\" he shrugged, picking up his glass and the bottle and following her through the living room. \"The study is also my spare room, and Bob is probably already asleep,\" she explained, indicating that he should sit. When she came back, she sat opposite him, and he frowned.\n\n\"Come and sit beside me,\" he frowned. \"I promise no touching or kissing unless you want it,\" he held up his hands as if surrendering to her terms. He waited until she was settled, then smiled, taking the writing paper and pen from her hands and placing it on the table.\n\n\"Let's start with what you get out of the deal?\" Maggie asked, narrowing her eyes. \"I let you help me by paying out my mortgage and ridding me of the evil step-monster, and you get what, exactly?\"\n\n\"Everything,\" he said easily. \"But let's get one thing straight first before making any deals at all. You seem to be under the delusion that I don't know you, and you're wrong.\" He held up a finger as she opened her mouth to argue with him. \"The morning I crashed I was here for more like six hours rather than two or three you claim, and I remember almost every minute. I remember you coming into the cockpit and wondering if you could wake me with a sleeping beauty kiss,\" he grinned.\n\n\"You heard that?\" her eyes went wide.\n\n\"I was dumb and opened my eyes too early, and when I closed them again you didn't kiss me,\" he said sadly. \"I felt you check my whole body before attempting to move me, which you didn't do until you were one hundred percent sure you could safely. I remember you took most of my weight as I stumbled back to the house and the feel of your bony shoulder against my side and under my arm each time I felt like falling. I remember you torturing me by undressing me, sitting on the floor and pulling off my jeans, looking like the sexiest woman I have ever seen. I remember your wet hair falling over your shoulders,\" he paused and sipped his drink as she stared at him, her mouth open wide in absolute shock at how accurately he portrayed their movements the night of the crash.\n\n\"You seemed so out of it at the time. How could you possibly remember all of that?\" she asked.\n\n\"I remember how good you looked when you came out of the shower with your hair hanging down to your waist. You smelt of coconuts and pineapple and a tropical cocktail that I've craved ever since. I remember you talking to Wade and dealing with the men who came to get me. I remember it all, very well, and having you tell everyone I don't is quite insulting,\" he said without any rancour. \n\n\"I didn't realise,\" she admitted. \"That still doesn't mean you know me, though.\"\n\n\"I've spoken to you every day since, sometimes twice a day, about everything and anything. Once I realised that Elena was somehow screwing you over I looked into you and your step-family further, just like I know you have googled my family and me,\" he grinned, seeing her open and close her mouth again with the argument about an invasion of privacy dying on her lips. \"I spent quite a bit of time tonight talking to you and listening to you and your brothers. I spent quite an interesting hour with Bob while you were sulking.\"\n\n\"I liked calling you each night to talk about how you were recovering,\" she admitted, ignoring his barb about sulking.\n\n\"So did I. I looked forward to those calls every day,\" he said softly. \"I want to talk to you every day. I want to see you every day. I have never wanted or felt that closeness with someone before. I've never had someone fill my thoughts so completely, the way you look and smell and sound, all of it,\" he explained. \"I didn't think I would be able to meet this family expectation I have hanging over my head, and then I met you.\"\n\n\"What family expectation?\" She asked, pleased that this wasn't all about her and her fucked up family.\n\n\"I'll still inherit my share of the family fortune and business, regardless of what happens, but if you agree to marry me before I turn thirty, I get Everything.\" It was the truth, but it was a stretch of the truth, or not exactly the whole truth, but it was the only thing he could think of to use as a bargaining chip.\n\n\"When do you turn thirty?\" she asked, seemingly unfazed by his disclosure.\n\n\"In about six weeks,\" he said thoughtfully.\n\n\"Cutting it a bit close, aren't you?\" she tilted her head. \"I'm sure any number of women would jump at the opportunity.\"\n\n\"I can barely stand being in the same room as most of those women you've seen me photographed with, and I dream about being in the same room with you all the time. I want to talk to you about my day and my crazy family. I want to hear about how many roses you managed to save and the buds you are sweating over. I want to fight with you and have you scold me for trying to charm you into doing things you don't want to do,\" he grinned. \"I'm a little bit pissed that you couldn't say no to Claire as easily as you seem to be able to say no to me.\"\n\n\"I've never tortured her at all, why start now?\" Maggie asked with a perfectly straight face, making him laugh. \n\n\"Call it luck, Kismet, Karma, whatever. I think it was fate that I crashed into your life when I did. We both need something, and I think if we grab the moment with both hands it could work out great in the long term for both of us. At the very least I think we could be really good friends if the marriage doesn't stick,\" he said reasonably.\n\n\"I want a prenup,\" she said. \"I don't want anything from you or your family, but this farm remains mine and mine alone.\"\n\n\"You'll marry me?\" he was stunned by her words. \n\n\"If I get a prenup. I want it done properly by a lawyer and witnessed by Bob,\" she said stiffly, Bob was the closest thing she had to family now. \"I also want Elena and Alecks out of my life for good. I want nothing that ties to me them at all, not even Ruslan, though I doubt he even knows or cares what his mother is doing.\"\n\n\"Okay, we pay off the mortgage to keep the bank happy, then we go after the bogus company and have it dissolved,\" Kaeden drew a line down the centre of the paper she had supplied and began making notes on the side he had labelled Maggie. On his side, he wrote the word wife in capital letters. \"I'm assuming you won't want to move to the city to live with me?\" he asked.\n\n\"We could renovate here, maybe, if you don't like the house,\" she looked around at her home. It was desperately in need of repair and updating.\n\n\"Just consider this for a moment, we could build a new house and let Bob have this one. He's been lonely since his wife died, and his kids have been trying to get him into a retirement village so they could sell his small patch of land,\" Kaeden suggested.\n\n\"There's no room to build another house, not with the greenhouses and the orchard on the other side of the old airstrip,\" Maggie frowned. \"I know it doesn't look like an orchard, and the trees are mostly dead now, but I don't want to get rid of it.\" The small group of fruit trees had been her mother's sanctuary, and the few memories she had of her mother were bound to those trees.\n\n\"We can discuss that one further, but have a think about Bob, he's pretty old, and I don't think his kids are keen to help him,\" he wrote the words house, airstrip and a helipad on his side of the paper.\n\n\"Helipad?\" she queried.\n\n\"Might be easier than the airstrip, and probably better for commuting to and from work every day,\" he shrugged. \"I hate traffic, and it's a bit of a commute to the city, you have to admit. We can keep my penthouse, and you can come into the city sometimes. I travel a bit for work, so that I won't crowd you too much our here on the farm,\" he reassured her.\n\n\"Will you need or want kids from this marriage?\" she asked, blushing deeply.\n\n\"Yes, but I'm in no hurry. I'd like to practise making babies with you first,\" Kaeden chuckled at Maggie's blushing shyness. \"We could start practising now and finish this in the morning,\" he wagged his eyebrows at her and leant over, making her lean back and place a hand on his chest.\n\n\"I thought you were still recovering,\" she whispered coyly.\n\n\"I'm willing to risk it if you are,\" he murmured, moving to kiss her. \n\n\"No,\" she laughed, and leant forward to give him a quick peck on the lips, surprising him.\n\n\"Why do you find it so easy to say no to me,\" he grumbled, not moving as she lay back, resting her head on the arm of the couch.\n\n\"I don't,\" she laughed. \"But for the little bit of teenage fumbling that happened with Alecks years ago I'm practically a virgin, and if you're serious about marrying me I think it might be kind of nice to wait,\" she flushed bright red, unable to hide her anxiety about having sex with him, given his reputation.\n\n\"So, we'll elope tomorrow?\" he asked hopefully. \n\n\"Not tomorrow, but eloping sometime soon sounds good. Who would I invite to a formal wedding?\" Maggie asked, embarrassed that her voice caught in her throat and wobbled slightly.\n\nKaeden watched as her calm veneer crumbled and her bottom lip quivered. He pulled into his arms and held her tightly. \"It's been a long night,\" he said softly. \"You need sleep,\" he murmured into her neck and hair, breathing in her unique smell. Unfurling from the couch with her in his arms. \n\n\"Put me down! I'm too big and heavy for this!\" she complained, trying to wriggle from his arms.\n\n\"I think I can manage,\" he said confidently. He walked into her bedroom and placed her on her bed, kissing her with feeling. He went to leave her to change into something more comfortable to sleep in, but she stopped him. \n\n\"Stay,\" she whispered, tightening her arms around his neck. \"Until I fall asleep?\"\n\n\"As long as you promise not to take advantage of me,\" he smiled, stripping off his shirt again.\n\n\"I promise,\" she said, and slipped off her jeans, leaving the soft shirt in place and climbing into bed. Kaeden lay down beside her and spooned into her back, wrapping his arms around her and burying his nose in her hair. \n\n\"I love the way you smell,\" he murmured against her neck and tightened his hold on her slightly.\n\nMaggie said nothing, letting the tears that had begun to slide silently down her cheeks. The only people she had that she could call family had betrayed her so completely that she felt bereft and cast adrift. Kaeden's words of friendship and fate instead of lies about love and beauty had swayed her. That was what she needed right now, a friend she could depend on, a friend with a good lawyer who could help her regain control of her life and the independence from her step-family she needed. \n\nChapter 10.\n\nThe realist in Maggie resurfaced as she thought about what she had just agreed to and why. She could play the good wife as long as she could keep her little farm, and sleeping with a man like Kaeden wasn't going to be a hardship, by any stretch of the imagination. In fact, she agreed that they could be great friends, even once he got everything and divorced her for someone more his type. They were just friends thrown together by circumstance and willing to help each other out. So why was she so worried about having sex with him? Friends with benefits was a thing. Why shouldn't she take advantage of the benefits while she could?\n\nKaeden felt her relax in his arms, but he knew she wasn't sleeping. She really was a Cinderella, with the evil step mother and step brothers instead of sisters. He just wished she could see herself as he saw her. She was beautiful, whether in jeans and a button up shirt or dressed up as she was earlier tonight. He'd never met a woman like her, so strong and funny and fiercely independent. He'd fallen in love with her somewhere in the last two weeks, and he wanted more of her, in every way possible. He wanted to be the Prince Charming to her Cinderella story. He'd never been surer of anything in his life. His hand slowly caressed down her side, a natural movement he was barely aware of as his thoughts continued to roll.\n\nMaggie turned over and looked at him in the darkness. She was in bed with the man she had fantasised about for weeks now, after accepting his marriage proposal. What was she waiting for? Neither of them was in love. The marriage was a business proposal, so why had she asked him to wait for a romantic wedding night? She leant into him and kissed him lightly. \n\n\"You're making it very hard for me to wait until the wedding,\" he murmured, both surprised and pleased by her kiss. He smiled and nibbled at her bottom lip. \n\n\"Where does your name come from? It's not a common name,\" she asked curiously.\n\n\"You'd have to ask my mother, I've never questioned it,\" he said, nuzzling into her neck. \"Where did that question come from?\"\n\n\"I don't know you at all, Kaeden, and I just agreed to marry you. I thought I should at least know something about you, other than the fact that you're a terrible pilot,\" she teased.\n\n\"I'm a great pilot, besides, you admitted that you googled me. If anything, I should be the one asking the questions here. Let's start with favourite colour?\" \n\n\"I don't think I have one,\" she admitted quietly.\n\n\"Every girl has a favourite colour,\" he said. \"You have to trust me with some personal details eventually, especially as I am going to be your husband as soon as we can organise a wedding.\"\n\n\"Sunset, maybe. Pink and orange and inky blues all strung out together in one perfect sunset,\" she said thoughtfully after a moment.\n\n\"I like it, but it's not as good as racing green,\" he teased, taken aback by the romance in her answer. \"Tell me about your other favourites, smell, touch, taste, even sights.\"\n\n\"Well, I guess they are all one in the same,\" she said softly. \"I love those hot summer afternoons when the sun is setting, and inky black storm clouds are chasing it over the horizon. You can smell the coming rain, and you wait out there in the strange twilight until those first soft drops of rain fall on your face and shoulders, chasing away the heat and exhaustion of the day.\" She looked into his eyes and smiled shyly.\n\n\"I think summer storms are my new favourite thing too. At least the storm that brought me to you,\" he gave her his crooked smile and kissed her again. She kissed him back this time. She knew she was opening herself up to heartache when he fully recovered and realised what a mistake he was making, but she couldn't help it. Right here and now she wanted to believe him and live that fantasy she had denied could be possible since they met. She pressed up against him and ran her hands over the smooth skin of his back as the kiss extended.\n\n\"Maggie, if we don't stop, I'm not sure I will be able to, I want this, I want you, too much, and I'm only human,\" he said seriously. She smiled at the sincerity in his voice and sat up, still facing him. Her fingers trembled slightly as she lifted the bottom of the singlet top she wore and quickly pulled it free of her arms and head. \n\n\"I changed my mind,\" she whispered, blushing, and reached around to undo her bra. Kaeden sat up then, pulling her hands away from the clasp. \n\n\"Are you sure?\" he asked, torn between wanting her so badly and needing to make sure she wasn't doing this because of everything that had happened today. \"I can wait, I'd never force myself on you in that way. You've been through a lot. I don't want you to wake up tomorrow and regret this.\"\n\n\"You're not the only one who has been thinking about this since we met,\" she admitted, continuing to hold his hands. \"I just...\" she hesitated. \"I'm just so...\" she floundered for words, not wanting to say inexperienced, \"me, and you're, well... you're you.\" She blurted. \"So I made the excuse of waiting for the wedding, but you may as well know what you're getting,\" she said sadly. \"I want to do this,\" she reassured him, despite her embarrassment. \"I've thought about it a lot.\"\n\nKaeden gave up all sense of restraint at that point and pulled her across his lap and into his arms, kissing her passionately. His hunger for her gripped him, but rather than the purely sexual passion he usually felt with the women he went to bed with, this time his hunger was rich and unexpectedly sweet, like the woman he held in his arms, and he intended to savour it.\n\nHer arms settled on his shoulders and tips of her fingers traced a pattern over the skin there and at the base of his neck. She shifted in his lap, pressing more firmly against the evidence of his desire for her. When he eased back from the long passionate kiss, she followed the movement of his head, kissing the corners of his mouth, his chin, and followed the line of his jaw up to his ear. Her hands shifted softly through the ends of his hair that fell to his neck.\n\nKaeden smiled and shook his head slightly.\n\n\"What?\" She breathed hotly against the skin of his neck, worried that she was doing something wrong.\n\n\"You,\" he pulled back, looking into her face.\n\n\"What about me?\" she became self-conscious.\n\n\"I just didn't expect you to be so...\" he hesitated, choosing his words carefully.\n\n\"Easy?\" She became defensive and leant back further.\n\n\"Willing,\" he corrected, pulling her back toward him.\n\n\"I think you knew you would wear me down with your charm eventually,\" she gave a small, shy smile, admitting how charming she found him.\n\n\"Yet my sister had to set me up on a date with you?\" he raised an eyebrow. \"I thought I would have to work even harder, that I'd have to take things very slowly. Now I'm not sure if slow is going to work for either of us.\" His fingers danced lighting down over her chest, tracing the outline of her bra, making her quiver, and then they were gone. His voice had become deeper and huskier as he asked, \"What do you think, fast or slow?\"\n\nMaggie's heart beat loudly in her chest as his hands trailed around her ribs to unclasp the bra and lightly tickled back over her ribs as he peeled it forward, causing the straps to fall from her shoulders and the garment to land in the space between their bodies. She reached for it, tossing it aside, not wanting the tantalising fingers to stop moving from her back around her ribs. She sucked in a breath, closed her eyes and waited, willing him to keep going to touch her breasts that were growing heavy and tight with longing."
    ],
    "authorname": "xelliebabex",
    "tags": [
        "fairy-tale",
        "cinderella",
        "flower farm",
        "valentine's day",
        "evil stepmother",
        "family"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/her-fairy-tale-life"
}