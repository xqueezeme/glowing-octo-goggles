{
    "title": "Life after the Lottery Ch. 58",
    "pages": [
        "Chapter 58\n\nThe trip to the Reservation\n\nWe woke up early on Monday morning because we heard the girls.\n\n\"I can't believe they are up on their own,\" Dawn said.\n\n\"I guess they found something that motivates them.\"\n\nIt was about 5:30; Dawn got up to go and check on them then came back to bed.\n\nA few minutes later, \"We're leaving,\" Amy said as she stuck her head in later. \"We are going to stop and get something for breakfast.\"\n\n\"See you two later,\" I said.\n\nWe heard them scampering down the steps. Dawn rolled to me and reached down and grabbed my cock.\n\n\"When Sherri and Brenda get here, are you going to get any work done today?\" Dawn asked.\n\n\"I will have to. I told them we would go over their travel plans they have so far, and I need to call Lori.\"\n\nDawn slid down and sucked my cock into her mouth. I watched her as she expertly worked. I loved watching her when she was doing this. After a few minutes, I grabbed her leg, and she moved on top of me so I could do here at the same time. I pulled her down and started licking her pussy. We stayed this way in a 69 for a long time just enjoying each other until we both got off. Dawn turned and laid her head on my chest.\n\n\"Honey, are you sure you were okay with me sucking Bill's cock at his office?\"\n\n\"Of course. You can do whatever you want to do, you know I enjoy watching,\" I said.\n\n\"I knew you were enjoying watching me, I could feel it.\"\n\n\"Do you think he told his wife?\"\n\n\"I don't know, but it sounded like they are discussing such things. I hope he brings his wife here.\"\n\n\"I do too, she is cute,\" I said.\n\n\"The next time, I get to watch you do someone.\"\n\n\"Come on, let's shower and I will cook you breakfast.\"\n\nWe got out of bed and went to the shower. After that, we were in the bedroom, putting on some clothes.\n\n\"Oh, our investment manager called last week, he wants to see us,\" I told Dawn.\n\n\"When?\"\n\n\"This week.\"\n\n\"Can't you go see him? Do I have to go?\" Dawn asked.\n\n\"It shouldn't take long, he wants to discuss moving some things around.\"\n\n\"He knows you trust him,\" Dawn said.\n\n\"I think this is a big move and he wants to discuss it. He also wants to discuss how much money we have made.\"\n\n\"Okay, but I wish you would take care of those things,\" Dawn pleaded.\n\n\"Come on, honey, he always likes to see you.\"\n\n\"Maybe if he has done that well, I will let him see a lot of me,\" Dawn said with a smirk.\n\n\"I'll call Joseph about stopping by tomorrow to discuss our investments, what time do you want to go?\" I asked.\n\n\"About lunch time.\"\n\nWe slipped on some clothes and headed downstairs.\n\n*****\n\nAbout the time we were finishing in the kitchen, we heard the front door open. I turned, and it was Sherri coming in.\n\n\"Good morning, Sherri,\" I said.\n\n\"I hope it's okay that I just let myself in?\"\n\n\"I told you to. Would you like some coffee?\"\n\nSherri came to the kitchen, and I poured her a cup of coffee.\n\n\"How did things go last week?\" She asked.\n\n\"Okay. Did you and Brenda finish up?\"\n\n\"The architects are finalizing everything. It looks like they will be ready to start in a week or so.\"\n\n\"Great.\"\n\n\"When I told my roommate about everything that happened, she didn't believe me,\" Sherri said.\n\n\"Maybe you need to bring her one night,\" Dawn said.\n\nWe talked to Sherri for a few minutes before Brenda came in. She came to the kitchen and got a cup of coffee.\n\n\"Where are you two on finalizing your travel plans?\" I asked.\n\n\"We should have them finished this week,\" Brenda said.\n\n\"Good. I have to work on some travel plans for the limo business.\"\n\n\"James, do you think you and Dawn would be able to travel with us any?\" Sherri asked.\n\n\"Probably not, but we will see.\"\n\n\"I'm going to be pretty busy at school,\" Dawn said. \"Honey, I need to run to the store this morning.\"\n\nDawn headed back upstairs, and I went to the study with Sherri and Brenda. The two of them went to work on their computers while I went through some email. I had one from Linda saying it looked like the builders could start on the store in a week. I also had one from Lori telling me when she was going to come by this afternoon to work on our travel.\n\n\"I'll be back around lunch,\" Dawn said before she left.\n\nThe three of us worked until about 11:00 going over everything.\n\n\"What are you two doing for lunch?\" I asked. They didn't have any plans.\n\n\"James, where are Amy and Sam?\" Sherri asked.\n\n\"They are at the hospital observing a surgery. Would you two like to go to lunch now?\" I asked.\n\nThey decided we were at a stopping point, so we all left in Brenda's car since Dawn had the Escalade. We drove down to the Mexican restaurant and went inside and got a table and ordered.\n\n\"James, did Dawn have anything to say about last weekend?\" Brenda asked.\n\n\"She just asked if I enjoyed fucking you two.\"\n\n\"Well, did you?\" Brenda asked.\n\n\"Oh, yes.\" They both laughed.\n\n\"Do all of you do things like that often?\" Sherri asked.\n\n\"Occasionally. I hope both of you had a good time.\"\n\n\"Oh, I did,\" Sherri replied.\n\n\"I did too,\" Brenda added.\n\n\"Maybe we should have a weekend business meeting every few weeks...until things get going,\" I suggested.\n\n\"That sounds like a great idea,\" Brenda said. \"Can we have another one this weekend?\"\n\n\"Not this weekend. We are visiting Dawn's great-grandparents. We will be leaving Friday morning, so you two can work from home. Let me check with Dawn when we can have another meeting.\"\n\nA few minutes later, our food came.\n\n\"I didn't ask if the two of you do things like that often?\" I asked.\n\n\"You know about Sherri and her roommate spending the weekend at my place,\" Brenda said.\n\n\"How often do you get laid?\" I asked Brenda, and she looked at me and smiled.\n\n\"Not often enough!\"\n\n\"How about you, Sherri?\" I asked.\n\n\"Several times a month, plus Jennifer brings her boss home about once a month, and we do him.\"\n\n\"How often do either of you do anything like last weekend?\"\n\n\"It has been a while since I did anything that crazy,\" Brenda said.\n\n\"Just Jennifer's boss, that's about it,\" Sherri said.\n\n\"Where both of you okay with other people being around and watching?\" I wanted to know.\n\n\"I thought it was pretty hot,\" Brenda replied.\n\nWe ate for a while and talked some more before we finished. I paid the bill, and we headed back to the house.\n\n\"James, may I ask if you and Dawn ever get together with another couple?\" Brenda asked as she drove.\n\n\"Occasionally.\"\n\n\"How about the girls?\"\n\n\"If they want too,\" I said.\n\n\"That must get very interesting,\" Brenda replied.\n\nWhen we pulled up to the front of the house, Dawn was unloading groceries from the SUV. I helped her while the two of them went back inside.\n\n\"Are you three getting any work done?\" Dawn asked while we carried the last load.\n\n\"Yes. I took them to lunch.\"\n\n\"They haven't wanted a repeat?\"\n\n\"Not yet, but we still have the rest of the day.\"\n\n\"The girls should be home about 3:00,\" Dawn told me.\n\nAfter I finished carrying things in for Dawn, I went back to the study, and we worked until about 1:30.\n\n\"Do either of you want something to drink?\" I asked.\n\n\"I can get it,\" Brenda said.\n\nI got up and headed to the kitchen, Sherri and Brenda followed me. We grabbed something to drink and were standing around as Dawn worked.\n\n\"Dawn, if we have time during the day, is it okay if we fool around?\" Sherri asked.\n\n\"Sure.\"\n\n\"You're okay with it?\" Brenda asked.\n\n\"I told you I was. You two enjoy yourselves when you have some free time.\"\n\n\"Dawn, do you have any free time right now?\" Brenda asked. Dawn turned and looked at her.\n\n\"I think I could spare some time if James is okay with it?\"\n\n\"I think we can take a break,\" I said.\n\n\"Why don't you come with me then,\" Dawn said to Brenda, and the two of them headed up the stairs.\n\n\"Do you have some time?\" Sherri asked.\n\n\"You know I do.\"\n\nSherri and I walked over to the sofa and sat down.\n\n\"Can I ask something?\" Sherri said.\n\n\"I guess.\"\n\n\"When you said that you and Dawn sometimes share with another couple, does that mean Dawn gets to have sex with other men?\"\n\n\"It wouldn't be right if I got to have sex with other women and she didn't get to have sex with other men...would it?\"\n\n\"I guess not. Do you watch?\"\n\n\"Of course, I do. I enjoy watching my wife and girls having a good time.\"\n\n\"So, Amy and Sam also have sex with other men?\"\n\n\"If they want too. Hasn't your roommate ever had sex with you and someone other than her boss?\"\n\n\"No, we haven't shared any other guys.\"\n\n\"None of your boyfriends?\" I asked.\n\n\"No.\"\n\n\"Maybe you should.\"\n\n\"I don't know if her boss would be cool with that.\"\n\n\"Are they close?\"\n\n\"Sort of.\"\n\nSherri leaned forward and sat her drink on the table, then reached over and rubbed my cock through my pants.\n\nSherri rubbed for a few minutes then started unbuckling my pants. Once she had them open, I stood and kicked them off. While I was standing, Sherri slid to the floor and got on her knees. She reached up and stroked my cock for a minute then slid her mouth over it. I watched her for a while until she stopped and stood up. I looked at her as she started unbuttoning her top, then removing her bra. When she dropped her skirt to the floor, I sat down and removed her panties.\n\nI slid my hand up her leg then slipped several fingers inside of her. Once I had her nice and wet, she straddled my hips and reached down for my cock. I felt her get it started between pussy her lips; then she slowly worked her way down. Sherri worked until she was all the way down. I grabbed both of her full breasts and squeezed them as she moved. She sat and worked her hips while I played with her breasts for about 15 minutes before she was moaning.\n\n\"Oh, this feels so good...\"\n\n\"I like the way you feel too.\"\n\nI slid my hands down to the small of her back and helped her wiggle on my cock.\n\n\"Oh...I'm still having a hard time believing your wife lets you do this.\"\n\nI squeezed her tits and watched her work her pussy on my hips as I held her tits. She moaned and kept going until she had an orgasm.\n\n\"Oh, fuck! Yes...\"\n\n\"Keep going,\" I told her.\n\nI grabbed her around the waist tight and began to pull her onto my cock as she moved.\n\n\"Oh...oh...oh...yes.\"\n\nWe kept this up for about ten minutes until she was coming again.\n\n\"Oh, my god! Yes!\"\n\nSherri drove her pussy onto my cock hard for a while until she came again.\n\n\"Ahhh!\"\n\nI held her as she sat for a minute.\n\n\"Emmm! Oh, wow.\"\n\n\"We may need to take more breaks,\" I told her.\n\n\"I hope so.\"\n\nI returned my hands to her breasts and squeezed them while Sherri sat.\n\n\"James, do you find it hot watching your wife with another man?\"\n\n\"It turns me on knowing she is having a good time. I don't have any problems with her doing that. I enjoy watching other men do Amy and Samantha.\"\n\n\"Does Dawn get off watching you with another woman?\"\n\n\"Sherri, Dawn, and I enjoy knowing that each other are being pleased. I always enjoy knowing a woman is getting what she wants. I would enjoy watching you being pleased by another man.\"\n\n\"You would?\"\n\n\"Of course. Don't you enjoy watching your roommate being fucked by her boss?\"\n\n\"I think it is pretty hot, especially when he is going at her hard,\" Sherri said.\n\n\"Then you like watching. It's a huge turn on,\" I said.\n\n\"And you would like to watch me with another man?\"\n\n\"Of course, and I bet you would get hot knowing I was watching. Doesn't your roommate get more excited watching you and her boss?\"\n\n\"She says she does. So, you would be okay if I brought one of my male friends here?\" Sherri asked.\n\n\"Sherri, remember what I said about discretion?\"\n\n\"So, no to my friend?\"\n\n\"Would he be discreet?\"\n\n\"Probably not. I don't guess you will get to watch me then!\" Sherri said and giggled.\n\n\"Maybe not with one of your friends,\" I said, looking into her eyes.\n\n\"Oh, were you thinking about one of your friends then, James?\"\n\n\"I was just thinking about our next business meeting. Remember, Sam from Linda's office?\"\n\n\"Yes.\"\n\n\"He and his wife are also helping with this business.\"\n\n\"I see. Would he need to be at our business meetings?\"\n\n\"He will be working on the store. I think he and his wife would like to join us if it is okay with you and Brenda?\"\n\n\"His wife is cool with this?\"\n\n\"Oh, yes. Dawn and I spend time with them.\"\n\n\"Hmmm, that could make the meeting more interesting,\" Sherri said with a big smile.\n\n\"It could. You never know, Sherri, there may be more people that may become involved in this business.\"\n\n\"Really? That could make our meetings very interesting.\"\n\n\"Would that be okay with you?\" I asked.\n\n\"Oh, yes, as long as everyone is good with it.\"\n\n\"I guess we will have to see how things go then. Maybe, you should ask Brenda about it?\"\n\n\"I will do that.\"\n\nSherri moved and stood then got down on her knees between my legs and slid her mouth back over my cock. I watched her work her mouth up and down on my cock as she deep throated me for about 15 minutes until I filled her mouth full of cum.\n\n\"Emmm, I like doing this,\" she said as she sat up.\n\n\"Good, because I like watching you,\" I told her. \"Get back up here.\"\n\nI pulled Sherri up and made her stand on the sofa in front of me. I pulled her forward and began licking her dripping pussy. She placed a leg on the back of the sofa, and I pulled her to my mouth and slid my tongue inside of her.\n\n\"Ohhh...yes...\"\n\nSherri held herself up as I worked on her pussy. She shoved her pussy into my mouth as I worked my tongue inside of her until she was moaning. I moved her and placed my mouth over her clit and began tonguing it.\n\n\"Ahhhh!!\"\n\nI was looking up at her dangling tits as she moaned.\n\n\"Oh, I haven't done that in a while.\" I heard Dawn say. I could see her and Brenda coming down the stairs naked.\n\nI was tonguing Sherri's clit when I felt Dawn sit next to me. A moment later, she was sliding her fingers into Sherri's pussy.\n\n\"Ahhh!! You two!!\"\n\nI worked on her clit with my tongue while Dawn worked on her with her fingers.\n\n\"Oh, my, god!!\" Sherri screamed several minutes later. \"Ahhhhh!!!\"\n\nSherri drove her pussy into my mouth and began coming in a gush.\n\n\"Ahhhhhhhhhh!!\"\n\nDawn was jamming her fingers in and out of Sherri as she screamed. Sherri's legs began to tremble as she stood.\n\n\"Enough!\"\n\nDawn pulled her fingers out and grabbed Sherri around the waist and helped her ease down and sit in my lap.\n\n\"Ohh...wow.\"\n\nDawn was sitting next to us, looking at Sherri. Sherri leaned over and kissed her for a minute. After that, she was pushing Dawn down on the sofa. Soon she was off my lap and up on her hands and knees going down on Dawn. I got up on my knees behind her and slid my cock back into her pussy.\n\n\"Emmmmm!!\" Came from Sherri as she worked on Dawn's pussy.\n\nI worked my cock in Sherri as she worked on Dawn's pussy. It wasn't long before the two of them were both moaning. I sped up and began driving my cock into Sherri as I held her hips. We all kept going for about 10 minutes.\n\n\"Ahhhh!!\" Came from Dawn as she shoved her pussy up into Sherri's mouth.\n\n\"Emmmmmm!!\" Came from Sherri and I watched as her back arched as she started having an orgasm.\n\nI shoved my cock into her and began pumping cum into her.\n\n\"Ahhhh!!\" They both screamed.\n\nI slid my cock out of Sherri and watched as she moved up and kissed Dawn.\n\n\"Oh, my,\" Sherri said as she stood.\n\n\"Come with me, and we will get you cleaned up,\" Dawn said as she got up and took Sherri's hand and led her down the hall.\n\n\"I guess we better get you cleaned up too,\" Brenda said as she moved to the floor and leaned forward and sucked my cock into her mouth.\n\nI watched Brenda as she used her talented mouth to get my cock good and hard again after some time\n\nWhen Sherri and Dawn came back, I had Brenda with her knees on the edge of the sofa leaning forward while I drove my cock into her.\n\n\"Oh, my, god!!\" Brenda screamed as I thrust into hard.\n\n\"Let's get something to drink,\" Dawn said, and the two of them walked off.\n\n\"Oh, fuck, James!! Yes!! Harder!!\" Brenda screamed.\n\nThe sound of our flesh slapping together hard was loud. I was holding her hips tight as I drove into her. Brenda kept screaming as I rammed my cock into her repeatedly. She moaned and screamed for a long time until she was about to come.\n\n\"Ahhhh!!! I'm coming!!!\" She screamed.\n\nI kept thrusting into her as she bucked and jerked in a huge orgasm.\n\n\"Ahhhhhhh!!!\"\n\nI heard her pussy gush.\n\n\"Fuck!\" Brenda yelled then pulled herself off my cock and turned and sat. \n\nShe leaned forward and grabbed my cock and sucked it into her mouth while she pumped it hard.\n\n\"Emmmm!!\"\n\nShe kept sucking and stroking my cock until I started coming in her mouth.\n\n\"Emmmmmmmmmm!!!\"\n\nBrenda stroked and sucked until she got everything she wanted.\n\n\"Emmm...that was good,\" she said.\n\nDawn and Sherri came back.\n\n\"You two may find his big cock addicting,\" Dawn said as she looked.\n\n\"I think you are right,\" Brenda said and got up.\n\nDawn sat in my lap and kissed me and looked into my eyes, and I winked at her then she smiled.\n\n\"I guess you three need to get back to work,\" Dawn said and stood.\n\n\"I guess we should. Lori will be here about 3:30,\" I said.\n\nDawn got up and went back to the kitchen to finish putting everything away. The three of us went back to my study naked and worked for a while.\n\n\"Will you two have your final cost estimates this week?\" I asked.\n\n\"I will have them by Wednesday,\" Sherri said.\n\n\"I will too.\"\n\n\"Good. That will give us an idea of how much cash to have ready when you two travel.\"\n\n\"If we are finished with our travel plans tomorrow, we can go ahead and make all the needed arrangements,\" Brenda said.\n\n\"That should keep you busy tomorrow,\" I told them.\n\n\"Not too busy,\" Brenda said, smiling.\n\n\"If you two don't have anything else to do today, why don't you go home. I will be meeting with Lori for several hours.\"\n\n\"Okay. I can do some running around,\" Brenda said.\n\nSherri and Brenda got up to go and get their clothes and leave. I was looking over the limo spreadsheets when Dawn came into the study dressed.\n\n\"Will you be busy with Lori long?\"\n\n\"Probably a few hours.\"\n\n\"Ask her to stay for dinner.\"\n\n\"If I do, no funny business,\" I said.\n\n\"Not tonight,\" Dawn said and left.\n\nI got up and put my clothes back on. About 20 minutes later, Lori buzzed me from the gate. I let her in and went to the door to meet her.\n\n\"How are you doing?\" I asked.\n\n\"Well, I think you will be happy with what I have,\" she said.\n\nWe went to my study.\n\n\"I have been on the phone all week. I have narrowed our manufacturing choices down to three. One is in California, one in Texas, and one in Missouri,\" Lori said.\n\n\"Which two do you like?\" I asked.\n\n\"I want you to see all three, but I like the one in California and the one in Missouri.\"\n\n\"If the one in Missouri has the best fit, it would keep them close to us.\"\n\n\"That is what I was thinking. All of them will give us the choices of Mercedes, Chrysler, Cadillac, Lincoln, and Hummer.\"\n\nWe sat and looked over the literature that each company had Fed Ex'd Lori. We talked and decided on the two she liked by 5:00.\n\n\"I think you picked the right ones,\" I told her.\n\n\"Okay. They both said that we could come for a weekend and they would show us everything. When can you travel?\"\n\nI looked at my calendar for a few minutes.\n\n\"I will need to check my school schedule and check with Dawn, but how about the last two weekends of September?\"\n\n\"That would work.\"\n\n\"We can discuss it with Dawn over dinner tonight if you can stay.\"\n\n\"Sure.\"\n\n\"The first month of the semester is usually slow, and I will have a teaching assistant to help,\" I told her.\n\n\"Will anyone be joining us when we travel?\" Lori asked.\n\n\"Dawn and the girls will be busy with school. I don't guess so.\"",
        "\"Will your wife be okay with you and I traveling together?\" Lori asked, looking at me.\n\n\"Lori, are you okay with just the two of us traveling together?\" I asked.\n\n\"Oh, sure.\"\n\n\"I will find out what Sam needs before we go so that we can tell them about running wires. That's enough for today.\"\n\nLori and I walked out to the den and could hear Samantha and Amy in the kitchen telling Dawn about the surgery. I walked Lori to the kitchen.\n\n\"Sounds like you two had a good day,\" I said.\n\n\"Oh, we did,\" they said, turning around. \"Hi, Lori.\"\n\n\"James, would you fix them some wine so I can get dinner cooked,\" Dawn said, now wearing clothes.\n\nI got Lori, Samantha, and Amy, a glass of wine and took them to the den. Samantha started telling Lori about everything she had seen today. I left all of them and went to the kitchen.\n\n\"They are wound up,\" I said as I grabbed a soda.\n\n\"Tell me about it. They have been going since 3:45,\" Dawn said.\n\n\"Lori asked me if you were okay with just the two of us traveling together.\"\n\n\"I'm more worried about her,\" Dawn said. \"When are you planning on traveling and where?\"\n\n\"Missouri and California. I am looking at the last two weekends of next month, depending on school,\" I told Dawn.\n\n\"You better go and find out when your classes are.\"\n\n\"I will.\"\n\n\"Fix me a glass of wine,\" Dawn asked.\n\nI poured Dawn a glass of wine and went back to rescue Lori.\n\n\"When do you two start school?\" I asked.\n\n\"Week after next, why?\" Samantha asked.\n\n\"I just wanted to know. I have got to go to the school and find out when my classes are.\"\n\n\"Dr. John has two surgeries for us tomorrow. He is doing two breast implants,\" Amy said.\n\n\"Are you learning anything?\" I asked. \n\nThey said yes.\n\n\"After dinner, would you two like to look at some limo ideas?\"\n\n\"Sure!\"\n\n\"Lori and I have picked out two places that manufacturer limos. She is going to get them bidding against each other, so we get the best prices.\"\n\n\"Are you two still going to check them out?\" Amy asked.\n\n\"We hope to next month.\" Amy and Samantha smiled at me.\n\n\"Lori is staying for dinner, so you two go and get out of the scrubs.\"\n\nThey jumped up and headed up the stairs.\n\n\"They seem excited,\" Lori said.\n\n\"Dawn got them in to watch a surgery, it always gets them wound up.\"\n\n\"James, I know they are sisters, but, how do you and Dawn know them?\"\n\n\"They have become very close friends of ours. They live here, and we are paying for them to go to school.\"\n\n\"I see.\"\n\n\"The two of them are part owners in the store, but not the limo business.\"\n\n\"How is the store project coming?\" Lori asked.\n\n\"We are moving along. The other two ladies that work for me will start traveling in October to buy everything they need.\"\n\n\"Are you going with them?\"\n\n\"No, this is entirely their project. I need to pay you for this week. After this week, I hope we have a payroll service. This week will be off the books.\"\n\n\"I can get it Friday.\"\n\n\"Let me do it tonight because we are all leaving Friday.\"\n\n\"Okay. Working part-time, I was making about $400 a week,\" Lori told me.\n\n\"I will be paying you for full-time work, so decide how much that would be, Lori.\"\n\n\"You don't have to do that. I'm still going to school.\"\n\n\"Just decide how much you plan on being paid a year to run the limo business. You also need to be thinking about someone to help you at night.\"\n\n\"Who?\"\n\n\"I'm sure you can pick several of the other drivers to help you. That is up to you, you are in charge now,\" I told her.\n\n\"Okay.\"\n\n\"Lori, I also need you to work up some preliminary numbers on how many hours we would need to start booking in February and beyond to be profitable. Also, work up a preliminary marketing budget. Concentrate on how we can take all the business away from the other companies in the area.\"\n\n\"I will need to get some numbers from you,\" Lori said.\n\n\"Just tell me what you need.\"\n\n\"Lori, I hope you like stir-fry chicken,\" Dawn said, walking over.\n\n\"That's fine.\"\n\n\"Lori, do you have a car?\" I asked.\n\n\"Yes, my dad got me one.\"\n\nAmy came back down the stairs wearing shorts and a shirt. She sat on the sofa next to me.\n\n\"Lori, James said you were finishing up your MBA?\" Amy asked.\n\n\"Finally. I will finish this fall.\"\n\n\"I'm going back to school this fall to get my MSN in Advanced Nursing.\"\n\n\"How long does that take?\"\n\n\"About two years.\"\n\n\"Amy, would you help me in the kitchen,\" Dawn said.\n\nLori and I talked a few more minutes before Samantha came down and sat next to me.\n\n\"Have you two decided on all of the limos yet?\" Samantha asked.\n\n\"We have a list. We are going to visit two companies that manufacturer limos and give them the list and get some ideas,\" I told her.\n\n\"When are you going to see them?\"\n\n\"I am looking at the last two weekends in September.\"\n\n\"Can I come?\" Samantha asked.\n\n\"I don't think so. You will be busy with school.\"\n\n\"Rats!\"\n\n\"But, we have brochures and pictures in my study if you want to look.\"\n\n\"Sure!\"\n\nI got up and took Samantha to my study, and we took all the literature out to the den. That kept Samantha busy until dinner was ready.\n\nWe all went to the dining room to eat.\n\n\"Lori, are you going to be working out of the house also?\" Amy asked.\n\n\"I think I can do everything from my apartment.\"\n\n\"She will be working from home until we get the building set up,\" I said.\n\n\"James, the place in Missouri, said they could have all of the limos by mid-January. I think they stock more already built,\" Lori said.\n\n\"What about the place in California?\" I asked.\n\n\"They said 1st of February was doable.\"\n\n\"We will have to factor that into our final decision.\"\n\n\"When are we going to the bank?\" Lori asked.\n\n\"How about Wednesday morning?\" I asked.\n\n\"That will be good.\"\n\n\"I'll call the man there and let him know. Can you meet me there about 9:00?\"\n\n\"Sure.\"\n\nWe all talked and ate until about 7:30. After that, Lori left.\n\n\"James, does Lori get the same benefits that Sherri and Brenda do?\" Samantha asked me while I was helping clean up.\n\n\"I think we better hold off on that for now.\"\n\n\"She's cute.\"\n\nAfter we had everything cleaned up, Dawn and I sat and listened to Amy and Samantha until they ran out of gas about 9:00. They went to bed because they had to get up early again.\n\n\"I heard Sam ask you about Lori,\" Dawn said.\n\n\"They need to be careful around her. I haven't decided about her yet.\"\n\n\"Why not, she is cute.\"\n\n\"Let's wait.\"\n\n\"Brenda didn't want to wait today,\" Dawn said.\n\n\"I didn't hear you tell her no.\"\n\n\"She is fun. I didn't hear you tell Sherri no either.\"\n\n\"Sherri likes to fuck,\" I said.\n\n\"Good.\"\n\nDawn got my pants open and my cock out and began kissing and licking it. Once she had me hard, she had me stand so she could pull my pants off. I sat back down, and she leaned over and sucked my cock into her mouth. By 10:00, I had filled her mouth full of cum.\n\n\"Come with me,\" Dawn said as she pulled me up and led me up to our bedroom.\n\nWe got undressed and into bed.\n\n\"My turn,\" Dawn said as she straddled my mouth.\n\nI pulled her down and started slowly licking her pussy.\n\n\"Emmm, I may let you do that all night,\" Dawn said.\n\nI slowly ran my tongue over her pussy lips until she was dripping, then Dawn lowered her pussy down to my mouth, and I slid my tongue inside of her.\n\n\"Ahhhh, nice and slow.\"\n\nDawn sat on my mouth while I worked my tongue inside of her until she came the first time.\n\n\"Ahhhhhh, I needed that.\"\n\nDawn laid on me and sucked my hard cock into her mouth again. We kept this up for a long time, and we both came again. Dawn sat up and turned around and looked down at me.\n\n\"You like fucking Sherri, don't you?\" Dawn asked.\n\n\"She is a lot of fun.\"\n\n\"She may want to go again tomorrow.\"\n\n\"I do have to get some work done. They are going to be busy tomorrow, making travel arrangements.\"\n\nDawn moved and lay next to me.\n\n*****\n\nWe slept until about 6:30 Tuesday morning before we woke up.\n\n\"Do you think they got out of here in time?\" I asked Dawn.\n\n\"They better have. I'm not going to get them up every morning if they have a surgery.\"\n\n\"I'm sure they are enjoying watching.\"\n\n\"Emmmm, fix me some breakfast,\" Dawn said as she stretched like a sexy cat.\n\n\"I will fix you some breakfast if you will get up and get ready to go. I need to stop and see our insurance agent before we go to town to see Joseph.\"\n\nI got up and left Dawn and went down and fixed us a nice breakfast. Dawn came down naked later.\n\n\"I told you to get ready,\" I teased her.\n\n\"Let me eat first!\"\n\nWe ate, and I followed Dawn back to the bedroom.\n\n\"You put some clothes on,\" I told her and swatted her ass.\n\n\"I thought I would go like this?\" Dawn said as I looked over her naked body.\n\n\"Get dressed!\" I said and laughed at her.\n\nI went to my closet and grabbed some pants and a polo shirt. When I came back out Dawn was slipping on a very sheer see-through white blouse with no bra. Then she slipped a short white tennis skirt over her naked ass. She looked at me as I watched.\n\n\"What? It's hot,\" she said.\n\n\"Yes, it is,\" I said, looking at her as she zipped up the skirt.\n\nI could see Dawn's tits through the sheer material. I was going to tell her to put a bra on as I put my clothes on but changed my mind.\n\n\"Come on, sexy,\" I said.\n\nI had heard Sherri and Brenda come in downstairs. We went down and stopped in the study.\n\n\"I like that blouse,\" Brenda said.\n\n\"We will be gone most of the day,\" I said.\n\nWe left and had to drive across town to see our insurance agent and sign some papers for the two cars. Dawn was right, it was hot, and only 9:00 and we had the A/C wide open in the Escalade. We got to the insurance agency and went into Bob's office. He looked at Dawn's tits through the thin material as she sat down in a chair across from him.\n\n\"Hey, Bob. Do you have everything ready for the two Mustangs?\" I asked.\n\n\"Yes, I just need you to sign some things.\"\n\nDawn and I sat in two chairs while Bob went through some files for a minute. I looked over at Dawn, and the short skirt she had on had slid up to the top of her thighs. She saw me looking and smiled at me.\n\n\"James, the rates on the insurance for these two young ladies is going to be high on those two Mustangs,\" Bob said.\n\n\"I'm sure it will be, just work it all up for me.\"\n\nBob turned back to his desk and looked at me then glanced over at Dawn and looked down at her exposed legs.\n\n\"James, who are these two girls?\" He asked as he looked.\n\n\"They are very close friends of ours that live with us now.\"\n\n\"How long have they lived with you two?\"\n\n\"A year or so. They are both going to the university.\"\n\n\"James, I don't mean to be nosey, but do they just live with you while they are going to school?\" Bob wanted to know.\n\n\"Bob, they live with us now and will for as long as they want,\" I said.\n\n\"I see.\"\n\n\"Bob, they are our wives,\" Dawn said.\n\n\"Your wives?\" Bob asked, looking at Dawn curiously.\n\n\"As much as they can be. We consider them our wives because we love both of them and we all have sex all the time,\" Dawn said, looking at Bob.\n\nBob looked at Dawn for a moment then looked over at me.\n\n\"Well, I can't put them down as married to lower the rates,\" Bob said.\n\n\"I know. I'll just have to pay whatever it cost.\"\n\nBob looked back over at Dawn, and I saw him look down. I looked over at Dawn, and she had spread her legs some so Bob could look. Bob looked for a moment then went to work on the paperwork. He would look up every few minutes and glance between Dawn's legs or at her tits as he took his time.\n\n\"Bob? You're married, aren't you?\" Dawn asked as he looked at her.\n\n\"Yes.\"\n\n\"Too bad,\" Dawn said as she looked at Bob smiling.\n\n\"Uh, oh...yes,\" Bob stuttered.\n\nBob worked a few more minutes as he kept looking at Dawn occasionally. I watched, and each time he looked up, Dawn spread her legs a little more. By the time he needed me to sign everything, he had a clear view of her bare pussy. I moved to his desk and signed everything, then wrote him a check.\n\n\"This is the temporary proof of insurance,\" Bob said, handing me some papers. \"They will get the cards in the mail soon.\"\n\n\"Thanks, Bob.\"\n\nDawn and I stood, and Bob took a last look at Dawn's tits through the thin blouse. We went back to the hot SUV and left.\n\n\"Are you having fun this morning showing your body off?\" I asked.\n\n\"I am. Stop and get some sodas or something,\" Dawn said.\n\nWe stopped at a drive-up and got some large iced teas and rolled up the windows and sat with the engine running and the air on.\n\n\"You look hot,\" I said.\n\n\"I am!\"\n\n\"Not what I meant, honey.\"\n\nDawn unbuttoned the front of her thin white blouse. She pulled it open and ran the cup holding the ice tea over her naked breasts, pausing to make sure her nipples got hard and stuck out.\n\n\"Now, you look cooler.\"\n\nDawn sipped her tea and looked at me with a smile.\n\n\"What happened to Kerri coming yesterday?\" I asked.\n\n\"She called and said something had come up. I told her we were in no hurry.\"\n\n\"What came up?\" I asked.\n\n\"Her husband, I think.\"\n\n\"I would like her to get started on the study,\" I said.\n\n\"She said she has already found some of the furniture. The painting and the rest won't take long.\"\n\n\"Okay. Are you cooling off?\"\n\n\"I want an ice cream cone.\"\n\nI rolled down the window and ordered her a vanilla cone. The young lady appeared a few minutes later.\n\n\"Here you go,\" she said as she looked in at Dawn's tits hanging out.\n\n\"Thanks.\"\n\nDawn sat with her tits hanging out as she licked on her ice cream. I just turned and watched. Dawn could be the sexiest woman in the world when she ate sometimes, and she knew it. I watched as she ran her tongue slowly over the ice cream for a few minutes.\n\n\"So, how are our investments doing?\" Dawn asked as she licked.\n\n\"Very well.\"\n\n\"Good.\"\n\nDawn didn't pay any attention to the money; I was the one that checked the statements each month. She had no idea how well Joseph had done with the original $100,000,000 I had given him to invest aggressively. We took the other $80,000,000 that was left after everything and put it in safe things like bonds to pay all the bills and give us plenty of money to spend each year.\n\n\"You about finished?\" I asked as Dawn was finishing up.\n\n\"Yes, let me drop this in the trash, so it doesn't get all over the place.\"\n\nDawn opened the door and turned and slipped off the seat slowly and walked to the trashcan. A guy sitting in his pickup truck next to us watched Dawn every inch of the way. She climbed back in the SUV with her skirt pulled up and her top open as the guy watched her spread her legs and turn back in the seat.\n\n\"I'm ready,\" she said. I just shook my head.\n\n\"You are having fun this morning, aren't you,\" I said. All I got was a sexy smile back.\n\nI drove us downtown to the financial building. I had to remind Dawn to button her blouse up before we got out of the truck. She buttoned it about halfway up. Her tanned skin always looked so good when she was wearing white. We went up the elevator from the garage to the lobby and then went up to the 30th floor. We walked into the big offices, and the receptionist stopped us.\n\n\"May I help you?\"\n\n\"Dr. Smith, we are here to see Joseph.\"\n\n\"Yes, Dr. Smith, he is with a client right now, he will be right out.\"\n\nDawn and I sat in the lobby; we were a little early. A few older guys sitting around the waiting area were trying to sneak looks at Dawn. A few minutes later, I saw Joseph coming down the hall.\n\n\"Hey, you two, come on back! Susie, hold my calls, I will be a while.\"\n\nWe followed him to his big private office. When we sat he took a look at Dawn.\n\n\"Are you two doing well?\" He asked.\n\n\"Yes, we are, you have been taking care of us very well,\" I replied.\n\nJoseph pushed a sandwich he had been trying to eat to the side of his desk.\n\n\"That is what I want to talk to you about. We have been doing very well for over three years. I want to talk to you about some things and see what you would like to do.\"\n\n\"You know I trust you.\"\n\n\"I want to see if you want to make some changes in some of the investments. You know I have had a lot of it in some tech companies that survived the tech bubble, and they have been doing very well. We have had several that have made over 60% the whole time.\"\n\nDawn sat up and listened a little closer. Joseph kept glancing at her see-through top.\n\n\"Do you want to change some of that now?\" I asked.\n\n\"I want to move some things around. I want to leave a lot in Apple and Google, but there are a few others I think it is time to move out of.\"\n\n\"Okay, I am sure you will find something to put it in that will do just as well.\"\n\n\"Your account has done well because of high growth in several techs, but we need to do something now. Several will still have very large growth, but I want to tell you what I would like to do. You know the real estate market is starting to slow down.\"\n\n\"Yes, I have been reading about it.\"\n\n\"I have been studying it a lot for the last year, or so, there are some things going on that we could take advantage of.\"\n\n\"I don't want to be buying up any real estate.\"\n\n\"Oh, no, not now! It is going to get a lot worse, your house and property will lose some value in the coming few years, but I don't think you are planning on selling that beautiful house. The market is going to take a big hit, that is why I called.\"\n\n\"We have no plans to. You haven't been out since we finished have you?\" I asked.\n\n\"No, just that one time.\"\n\n\"You need to come see it,\" I told him. \"You will have to bring your wife one evening for dinner.\"\n\n\"Listen, you are my biggest client, and I have a very good relationship with you because you have trusted me.\"\n\n\"We also have a special deal,\" I told him.\n\nThe deal I had with Joseph was that his commission was 5% of all the money we made, but if he lost money, he had to pay me 5% of the difference.\n\n\"Yes, and thank you.\"\n\n\"So, what do you want to do?\" I asked.\n\n\"In about 8 to 12 months, the mortgage and housing market is going to take a very big hit. The banks and mortgage companies have been floating bad loans for years, and with the real estate market dropping it is all about to fall apart on them. There are mortgages companies that are going to get wiped out. There will be many big ones that may go bankrupt. I suspect there are a few large brokerage houses that will go bust because of their investments in these bad bundled mortgages.\"\n\n\"How can you make money on that?\" I asked.\n\n\"Right now, they are propping up their books to keep their stock prices up. In 12 months or less, there are some big ones that I am sure their stock prices will be less than half of it is right now if not zero. James, do you know what shorting is?\"\n\n\"Yes, do you want to short their stocks?\"\n\n\"I want to short some of the major players and go long on puts on some of the smaller ones. Spreading it around shouldn't attract too much attention. There are plenty of companies that are going to get hit bad so that we can take advantage of a lot of them.\"\n\nJoseph refreshed me on shorting and on long puts. It would let us bet the stock prices would go down, then collect the differences.\n\n\"Can you short brokerage houses?\" I asked.\n\n\"They sell their stock on the market, just like any other company. There is one of the New York brokerages that has been accumulating these bundled mortgages and reselling them very heavily knowing they are bad. It is all going to blow up, and I suspect they will go bust. They have a lot of shares on the market because they are so big. We can short a lot of their shares and not attract too much attention.\"\n\n\"What do you want to do with them?\" I asked.\n\n\"We can option their stock on a long put for 12 months. Right now, their stock is at $240 a share. They are propping up their books in a way that will kill them when it all goes to hell soon. We can buy long puts at $200 for about $18 a share.\"",
        "\"Explain to me what happens when they go bust?\"\n\n\"When they go bust, I think their stock will drop to nothing, especially below $25 a share. When that happens, you make $180 profit on each share. Does that sound good?\" Joseph asked.\n\n\"Hell yes, but don't other people know this?\"\n\n\"The public doesn't, and the other large brokers that are in bed with them are hyping everything to keep the stock prices up, hoping it will turn around soon. Stockbrokers always work to keep the price high. There will be parts of the country that will see 50% devaluations in houses that have been way overpriced and over mortgaged. Some of us in the business see what is going on and know that they are full of shit with their growth projections.\"\n\n\"And you think this is a safe thing?\"\n\n\"Absolutely! I am putting a lot of my own money in this plan. I want to retire young!\"\n\n\"So, what would you like to do first?\" I asked.\n\n\"I want you to buy 1,000,000 puts for around $20,000,000 on the large brokerage. I will have to spread it around in smaller chunks, it will probably drive the price up to $20 or $22, but that is okay for a 12-month put.\"\n\n\"Joseph, if this works, you are talking about $180,000,000 in profit,\" I said.\n\n\"I know. We have to do this slowly, or it will backfire and attract attention. I am going to do some more naked shorts in chunks over the next few months. The market always thinks anyone doing naked shorts is a nut and doesn't have the money to do regular shorts. The long put options are easier, so we will use them on other brokerages and banks. I think you could see over a 500% percent return in two years or less. I will have to keep a very close eye on it so we can get out at the right time.\"\n\n\"Wait a minute,\" Dawn said. \"That is more than we already have?\"\n\n\"Yes, it will be,\" Joseph told her.\n\n\"I'm not sure we want to risk $20,000,000,\" Dawn said now that we had her attention.\n\n\"Is that all you are going to do?\" I asked.\n\n\"Oh, no. When they go, there will be dozens of smaller mortgage and brokerage houses that will go under; I want to take some more that you have earned and short all of them plus some banks. This is going to be bad. The country will end up in a recession if not worse. You might as well take advantage of it, you two.\"\n\n\"How much more?\" I asked.\n\n\"I was thinking at least $50,000,000 total. We could take that from what you have made in the last three years and leave the original $100,000,000 untouched and keep it in the stocks and the bonds. This will be over in two years or less.\"\n\n\"What about the tech stocks and the others?\" I asked.\n\n\"I am expecting at least 30% growth over the next year or so in some. There are some municipal bonds you are only getting 4% off of right now. I would like to move to other areas. James, this is going to be so bad that there will be cities going bankrupt because they have invested in this mess.\"\n\n\"That bad?\"\n\n\"Yes. But you two will have plenty of money,\" Joseph said with a smile.\n\n\"You like doing this, don't you Joseph,\" I said.\n\n\"Oh, yes. It is not hard to make money in the up-market, but it takes more skill to be brave and make a lot of money when it all goes bad.\"\n\n\"What a minute,\" Dawn said. \"James, how much do we still have?\"\n\n\"Joseph?\"\n\n\"You have over $170,000,000 in your account right now, not counting the $80,000,000 bonds you live off of.\"\n\n\"What!?\"\n\n\"Maybe you should read the statements sometimes,\" I told her.\n\n\"I don't believe you two!\"\n\n\"Come here, Mrs. Smith,\" Joseph said.\n\nDawn got up and walked around behind his desk, and he pulled up our account on the computer. Dawn leaned over to look.\n\n\"Damn! I think I love you, Joseph!\"\n\n\"I told you I would take care of you two. You have 70 million more than you deposited.\"\n\nJoseph was looking at Dawn's tits through the thin material as she leaned over next to him to look at the computer screen. Joseph was a whiz kid and had come highly recommended. He was only about 40 but had a very great reputation and only handled large accounts. I had made him the deal on his commission to motivate him. Dawn looked over at Joseph as he looked at her tits. She turned and sat on the edge of his desk.\n\n\"Here you are working so hard for us and making us all this money, and we interrupted your lunch,\" Dawn said. \n\nShe sat on the edge of his desk and slid back.\n\n\"I think the least I can do is treat you to lunch.\"\n\nDawn pulled her skirt up to her stomach and spread her legs.\n\n\"Can I interest you in something to eat?\" Dawn asked.\n\nJoseph was blushing. Dawn had teased Joseph several times when we had been in his office before, once when his wife had been there.\n\n\"Oh my, it is tempting, but it wouldn't be an appropriate thing for me to do,\" Joseph said as he cautiously looked at Dawn's pussy.\n\n\"I think for $250,000,000, it would be very appropriate!\" Dawn told him.\n\nDawn reached up and unbuttoned the rest of her blouse and pulled it open; Joseph looked her tits over.\n\n\"Joseph, what do you estimate the total in profit will be in 2 years?\" I asked.\n\n\"150 to 200, at least.\"\n\n\"Million!?\" Dawn asked.\n\n\"Yes.\"\n\n\"Joseph, if you check the fine print on our contract, you might see the benefits clause,\" I said.\n\n\"Are you serious?\" He asked.\n\nDawn spread her legs further apart and held her tennis skirt up.\n\n\"Very serious,\" Dawn told him.\n\nJoseph hesitated a bit then leaned forward and started licking Dawn's pussy. I watched as she took her fingers and spread her pussy lips apart so Joseph could lick her better. Dawn placed her hand on the back of Joseph's head and pulled him in tight. Joseph was really enjoying himself now.\n\nDawn let him lick and eat her for a long time before she placed her hands behind her and leaned back and lifted her legs up and put her feet on the desk. Joseph was driving his tongue deep into Dawn. She was moaning enough that I knew she was enjoying his attention a lot. Dawn took her time and let Joseph keep going. About 20 minutes later, she was pushing her pussy up into his mouth.\n\n\"Oh god, yes! Suck my clit more, Joseph!\"\n\nJoseph went to work for a few more minutes, then Dawn shook and had an orgasm. She didn't squirt all over Joseph, but she had a nice orgasm.\n\n\"You eat pussy as well as you make money!\" Dawn said with a laugh.\n\nJoseph sat up and with a big smile on his face.\n\n\"God, you are beautiful, Mrs. Smith.\"\n\n\"Dawn, please. You just ate my pussy.\"\n\nDawn lowered her legs and sat on his desk.\n\n\"Thanks,\" Joseph said.\n\n\"No, thank you. You really think you can turn the $50,000,000 into a 200?\" Dawn asked.\n\n\"Yes, I can, or much more. In 2 years, we can convert everything to nice safe, tax-free bonds, and you will be set for life while the economy turns to shit for the next ten years!\"\n\n\"Wow, that will be great if you can do it,\" Dawn said.\n\n\"Oh, I am sure I can do it. I'm betting $20,000,000 of my own money on this,\" Joseph said. \"Plus, the 4 million in commission I made from you over the years. I may retire in two years.\"\n\n\"You seem very confident,\" Dawn said as she stood then moved and sat on Joseph's lap.\n\n\"I am. I have been watching all these banks and brokerages prop up these bad loans for years waiting for it all to go bad. Now the economy and market are moving against them. The entire thing is about eight months from going bad. About five months from now, others will start figuring it out and start doing what we are about to do, but we will already be in a position much cheaper.\"\n\n\"James, do you feel comfortable with him doing this?\" Dawn asked. I wasn't sure if she meant the investments or her pussy.\n\n\"I do, I can't wait for him to do it. We will only be investing some of what we have made.\"\n\n\"Joseph, you have already made us a lot of money, I need to thank you for that,\" Dawn said, looking at him.\n\n\"You just did...Dawn.\"\n\n\"Oh, that was just for me. I still owe you,\" Dawn said as I watched.\n\nI could tell Dawn had reached down between her legs and grabbed Joseph's cock while she sat in his lap. He looked up for a minute as she rubbed.\n\n\"Joseph, do you really think you can make us another 200 million?\" Dawn asked.\n\n\"I think within 18 months, yes, easily. Then we reinvest it, so you don't pay taxes on it.\"\n\n\"You know Joseph, I think you can do it,\" Dawn said as she reached up and pulled her blouse off and let it fall to the floor.\n\nI looked at Dawn and smiled as she sat in Joseph's lap with her naked tits in front of his face. Dawn reached up and rubbed her tits as he looked at them. \n\n\"That is a lot of money,\" Dawn said as she slid off of his lap and stood in front of him.\n\nI watched Dawn bend over and grab Joseph's belt and begin to pull it open.\n\n\"Uhh...Mrs. Smith...\"\n\n\"Dawn, Joseph.\"\n\nDawn pulled his belt open, and I watched as she unbuttoned his pants then unzipped them.\n\n\"I want to make sure you have the right encouragement to make us all that money,\" Dawn said as she fished his cock out.\n\n\"Dawn...really, this is not necessary.\"\n\n\"Oh, I think it is.\"\n\n\"Joseph, you will see that my wife can be very appreciative,\" I told him.\n\nHe looked up at me at the same time Dawn got down on her knees behind the desk.\n\n\"Oh, my!\" Came from Joseph as Dawn slid her mouth over his cock as he looked down.\n\nJoseph was looking down at the back of Dawn's head as she began sucking his cock. After a few minutes, he looked up at me, and I just smiled at him.\n\n\"Is this okay?\" He asked, puzzled.\n\n\"Joseph, my wife is welcome to do what she likes. I would say that right now, she likes what you said.\"\n\n\"I...\"\n\n\"Just let her do what she wants,\" I told him.\n\nI could see the back of Dawn's head bobbing up and down from behind his desk as he watched her. She stopped a minute and told Joseph to stand up. Once he did, I watched as she went to work pulling his pants down. Dawn slid her mouth over his cock and sucked it for a while. I watched closely as my wife slid her mouth up and down our stockbroker's cock, deep throating him.\n\n\"Emmm, you have a nice big cock,\" I heard Dawn say as she lifted her head.\n\n\"My wife enjoys it,\" Joseph said.\n\n\"I bet she does. I would say a nice 8 inches or so.\"\n\n\"That's about right,\" Joseph replied.\n\nDawn went back to work; I watched as she deep throated his cock for about 15 minutes.\n\n\"Ohhh, Dawn that feels very good.\" I saw her head come up.\n\n\"Yes, you have a nice cock,\" Dawn said as she stood.\n\nI watched as Dawn grabbed the zipper on the side of her skirt and slid it down. She let it drop to the floor. I looked at my gorgeous wife as she stood in front of Joseph naked.\n\n\"Now that you are nice and hard, I'm ready,\" Dawn said as she moved and sat on the edge of his desk.\n\n\"What do you mean?\" Joseph asked.\n\nDawn slid back a little on his desk and lifted her legs up and put her feet on his desk and laid back and spread her legs.\n\n\"Are you serious?\" He asked.\n\n\"Very,\" Dawn told him.\n\n\"Dr. Smith?\"\n\n\"Go ahead.\"\n\n\"Seriously?\"\n\n\"Joseph, I'm waiting,\" Dawn said.\n\nJoseph looked at me, then looked at Dawn. He unbuttoned his shirt. He looked at me again then looked down at Dawn's pussy. He reached for his cock and moved forward as I watched. He started his cock into my wife and began to ease slowly into her dripping pussy.\n\n\"Oh, yes. All the way in,\" Dawn said.\n\nI sat on the other side of the desk and watched as our broker slid his cock into my wife. He leaned all the way into Dawn as she moaned.\n\n\"Emmm, that's it Joseph, all the way inside of me.\"\n\n\"I don't believe this,\" he said as he reached for Dawn's tits. \"God, you have a gorgeous body.\"\n\nI watched Joseph as he worked his cock in Dawn while he played with her tits. After a while, he seemed to have forgotten I was watching and began to thrust harder into Dawn. I saw him squeezing her tits as he shoved his cock into Dawn for about 20 minutes.\n\n\"Oh, yes. Just like that,\" Dawn kept saying as he drove his cock into her over and over.\n\nI reached into my pocket and got out my cell phone and stood and began to video what was happening. He kept fucking Dawn for about ten more minutes.\n\n\"Oh, Joseph, more! Fuck me! I'm going to come!\"\n\nHe sped up as I recorded everything. Dawn thrust her hips up and came the first time. Joseph kept driving his cock into Dawn.\n\n\"Oh, yes! Keep going!\" Dawn exclaimed.\n\nJoseph grabbed Dawn's legs and worked harder for a few more minutes as Dawn moaned.\n\n\"I'm coming!!\" Dawn yelled.\n\n\"Ahhh!\" Came from Joseph.\n\nThe two of them moaned loudly as Dawn came and he shoved his cock in deep and filled her full of cum.\n\n\"Ahhhh! Yes!\" Dawn exclaimed.\n\n\"Oh, god!\" Came from Joseph.\n\nJoseph held his cock inside of Dawn for a minute as he looked her over. I kept recording as he leaned over and sucked on one of her nipples for a minute for a few minutes.\n\n\"You are so fucking hot,\" he told Dawn. \"I don't believe this,\" Joseph said as he slid his cock out of my wife.\n\n\"Oh, you can believe it,\" Dawn said as she pushed herself up.\n\nJoseph was standing there looking at Dawn then at me. \n\n\"Damn, you are so hot,\" he told Dawn.\n\n\"Thank you.\"\n\n\"Can I?\" Joseph asked as he retrieved his cell phone.\n\n\"Sure,\" Dawn told him.\n\nJoseph stood and took several pictures of Dawn as she lay back across his desk with her legs spread.\n\nDawn slid off his desk and got on her knees and sucked his cock into her mouth and cleaned it off for a few minutes before she stood up.\n\n\"Hold on Dawn,\" Joseph said then opened a drawer.\n\nHe got out some paper towels and cleaned Dawn up.\n\n\"Thank you,\" Dawn said and bent over and picked up her skirt and blouse then walked over and sat in the chair next to me.\n\nJoseph pulled his pants up and buttoned his shirt, then sat in his chair.\n\n\"I guess I should say thanks,\" he said.\n\n\"Don't mention it,\" Dawn said as she slipped her skirt over her shoes and stood and pulled it up.\n\n\"Dr. Smith, you were okay with that?\" He asked.\n\n\"Sure, my wife gets to enjoy herself when she wants to.\"\n\n\"I hope your receptionist didn't hear me,\" Dawn said, slipping on her blouse and sitting down.\n\n\"Don't worry about her, she hears a lot.\"\n\n\"Let me guess, you do your wife in here occasionally?\" I asked.\n\n\"She brings me lunch on Wednesdays.\"\n\n\"I had a feeling you two had been fooling around the last time I was here,\" I said.\n\n\"We had been.\"\n\n\"And your receptionist doesn't say anything?\" Dawn asked as she buttoned her top.\n\n\"No, I pay her very well for her services.\"\n\n\"And those services include not mentioning you having sex with your wife at lunch?\" I asked.\n\n\"Among other things.\"\n\n\"I see. I'm guessing your wife is very understanding,\" Dawn said as she leaned back in the chair.\n\n\"Yes, she is. My wife is a very understanding woman.\"\n\n\"How understanding?\" I asked.\n\n\"I'm going to tell her about this and show her the pictures, so she believes me.\"\n\n\"She won't mind?\" I asked.\n\n\"No. She knows I sometimes entertain some of my rich lady clients.\"\n\n\"Like this?\" Dawn asked.\n\n\"Sometimes, but I usually take them out to dinner first.\" He said with a big smile.\n\n\"Then this?\" Dawn asked.\n\n\"I work late sometimes,\" Joseph said with a big smile.\n\n\"Joseph, if your wife is so understanding about you taking care of some of your clients, how understanding are you...if she entertains?\" I asked.\n\n\"Dr. Smith, I handle a lot of money for a lot of big clients. Most of them are older people, but some of them are around our age that has made it big or inherited a lot. I manage their money, so they don't blow it all. I will say that I have done better for you two than I have for most of them, but I do well.\"\n\n\"Are any of the wives appreciative?\" I asked.\n\n\"A few, but they usually stop by without their husbands.\"\n\n\"But some don't?\"\n\n\"I'll just say that my wife and I often entertain a few of the couples.\"\n\n\"I see. Maybe the two of you could entertain us one night,\" I said.\n\n\"I think we could do that,\" Joseph said with a big smile. \"How about next Friday?\"\n\n\"Honey, is that okay?\" I asked.\n\n\"Sounds good. I'll call you when we get back and make plans,\" Dawn said. \"Your wife won't be disappointed.\"\n\n\"I have a feeling she won't,\" he said. \"Maybe this winter the all of us could fly down to our condo in the Bahamas for a long weekend.\"\n\n\"That sounds like fun,\" Dawn said.\n\n\"Joseph, I may want to take out some money from the original amount and put it in a trust, would you manage it and make sure it makes plenty of tax-free money?\" I said.\n\n\"How much?\"\n\n\"I am not sure yet, maybe 10 or 20 each for two trusts.\"\n\n\"I could put that in tax-free bonds and get at least 3% or 4% a year if you want to keep it safe, probably up to 7%.\"\n\n\"I'll let you know,\" I told him.\n\n\"I would spread it out over multiple tax-free bonds and maybe take some and put it where it would make some more.\"\n\n\"Anything else?\" I asked.\n\n\"Just some papers to sign to move the money around.\"\n\nHe got the papers, and I signed them.\n\n\"I'll start putting our plan together so you can see it...why don't you come back Wednesday at lunchtime and I can let you look at things,\" Joseph said, smiling.\n\n\"I will do that. I would think I would need to look several things over!\"\n\n\"Yes, you will! I will have things here you can look over,\" Joseph said with a big smile.\n\n\"Joseph, one question? What other services does your receptionist perform?\" I asked.\n\n\"She entertains some of my rich single men and ladies.\"\n\n\"I hope you pay her well.\"\n\n\"I do.\"\n\n\"Does she entertain you often?\"\n\n\"Occasionally.\"\n\n\"And your wife knows?\"\n\n\"Oh, yes. Susie spends the weekend with us sometimes. My wife gets off on watching me fuck her.\"\n\n\"Do you get off watching her and your wife?\" Dawn asked.\n\n\"I wish.\"\n\n\"You mean your wife is not into other women?\"\n\n\"As I said, I wish,\" Joseph said.\n\n\"Never?\" Dawn asked.\n\n\"Never,\" he said.\n\n\"I guess we better go, we have some things to do,\" I said.\n\nJoseph stood and headed for the door.\n\n\"One more thing,\" I said. \"When you and your wife entertain us next Friday, would Susie like to join us?\"\n\n\"I can ask.\"\n\n\"I think it would be a good idea,\" Dawn said. \"If Susie does some of your lady clients, you can watch her and me if you would like that.\"\n\n\"Really! I would like that!\" Joseph said.\n\n\"Joseph, when we have guests for dinner parties on Fridays, we often have them stay for the weekend if they want to,\" I told him.\n\n\"I see. Let me talk to my wife and Susie.\"\n\n\"We have plenty of room. We often have guests staying at the house on weekends,\" Dawn told him.\n\nWe walked out and past his receptionist. She was a nice-looking blonde that appeared to be about thirty. She looked up at us and smiled. When we got back to the SUV, Dawn was giggling.\n\n\"I think you made his day,\" I said.\n\n\"I think I made his month! James, what trusts were you talking about?\"\n\n\"Dawn, we have plenty of money, I want to put some money in trusts for Amy and Samantha, just in case something was to happen to us, we have already changed our will. How would you feel about that?\"\n\n\"They are our family, I don't have a problem with it,\" Dawn said.\n\n\"Okay, I will take care of it. I think if I put about 10 million in each of their accounts, it would provide them with enough income they would be comfortable.\"\n\n\"That would work. When you come back Wednesday, do you think his wife will be here?\"\n\n\"It sounded like it.\"\n\n\"You told him next Friday. I thought the police chief and his wife were coming next Friday?\"\n\n\"They are, I hope.\"\n\n\"Do you have some plans then, James?\"\n\n\"We'll see.\"\n\nDawn was quiet on the way back home. When I got her in the house, she took my hand.\n\n\"Come with me,\" she said and led me up to our bedroom.\n\n\"You didn't mind that did you?\" She asked.\n\n\"Of course, not. You know I like to watch you.\"\n\nDawn unbuttoned her blouse and took it off then unzipped her skirt and let it fall to the floor.",
        "\"Honey, do you like it when I fuck someone in front of you?\" Dawn asked.\n\n\"You know I do.\"\n\n\"I could tell, you felt very horny, didn't you?\"\n\n\"Yes.\"\n\n\"I could feel you while he was eating me. It made me horny, that is why I wanted him to fuck me. I knew you would enjoy watching.\"\n\n\"I did. I always enjoy watching you being pleased,\" I said.\"\n\n\"I know.\"\n\nDawn moved and placed her knees on the edge of the bed and leaned over on her hands.\n\n\"Do I need to ask?\" She said.\n\n\"No.\"\n\nI took my clothes off and grabbed my hard cock and moved in behind Dawn. I ran my fingers over her dripping pussy then started my cock into her.\n\n\"Ohhhhh. I wanted you to fuck me in his office while he watched,\" Dawn said as I slid all the way into her. \"Ahhhhhh.\"\n\n\"You are changing, honey,\" I said.\n\n\"Not really. I am just discovering more things you like.\"\n\n\"I think you like some of them too,\" I said.\n\nI held Dawn's hips and slowly slid in and out of her wet pussy for a while as she moaned.\n\n\"James, fuck me.\"\n\nI grabbed Dawn tight and began to drive my cock into her harder.\n\n\"Yes!!\"\n\nI drove into Dawn for a long time as she screamed and yelled. After a long time, she screamed she was coming. When she started gushing, I drove my cock in harder and began filling her full of cum.\n\n\"Ohhh, honey. That was great!\" Dawn said as she eased forward pulling my cock from her.\n\nShe turned and sat on the edge of the bed and sucked my cock into her mouth for a few minutes and cleaned all the cum off. I finally had to sit.\n\n\"You liked that,\" Dawn said leaning into me.\n\n\"I always do.\"\n\n\"No, I mean you liked fucking me after he had fucked me, didn't you?\"\n\n\"Yes, I did. I always like watching you being fucked. You know that.\"\n\nDawn sat up and turned to me.\n\n\"This was different, though, why?\" She asked.\n\n\"Why would this be different?\"\n\n\"James, I felt you. When he was fucking me, I could feel something different coming from you, but I'm not sure what it was?\"\n\n\"What did it feel like?\"\n\n\"It started when he was eating my pussy. I could feel how turned on you were. That's what made me horny. I don't know why, but I knew you wanted to see him fuck me, right then. I have never done anything like that,\" Dawn said.\n\n\"But you liked it.\"\n\n\"I did, but I was enjoying it because of how you felt. I know how you feel when our friends are doing me, but this was different; much different.\"\n\n\"How?\" I asked.\n\n\"You were much more turned on than usual when he was going down on me, then when he was fucking me. Why? What were you feeling, James? Do you like watching strangers fucking me?\"\n\n\"I'm not sure. When you set on his desk and pulled up your skirt, I got very turned on, more than when you are with some of our friends.\"\n\n\"Do you know why?\" Dawn asked.\n\n\"I don't know. Were you feeling overly horny?\" I asked.\n\n\"I was, that is why I dressed like that. I wanted to tease him. I didn't think you would mind him looking at me,\" Dawn said.\n\n\"I didn't, you know that, but I think I felt you getting very turned on when he did. Did you?\"\n\n\"I did, at first I just wanted him to touch me, then I felt you. When I felt how turned on you were with him looking, I wanted him to go down on me...because I knew you wanted him to.\"\n\n\"How did you know that? I was just watching and thinking about how much you would enjoy him doing it.\"\n\n\"I just felt it. And, James, what I felt was you wanting to see him go down on me, not that I wanted it. Was it because he is a stranger?\"\n\n\"He is not really a stranger.\"\n\n\"Honey, I think you are enjoying me doing people that are not our friends. I'll make sure I do it more often!\" Dawn said and laughed.\n\n\"Dawn, you seem to be feeling what other people want lately. You told me you knew Brenda wanted me to do her ass. You have always known what I wanted from you. What is going on?\"\n\n\"I'm not sure, but I have been feeling what other people want lately. I guess it is just because of everything that is going on.\"\n\n\"You didn't mind me wanting to see him go down on you because that was what I was thinking,\" I said.\n\n\"I didn't mind, but you were also wanting him to fuck me, right then,\" Dawn said.\n\n\"Honey, when we are with other couples, I am always thinking about the other guy wanting to do you.\"\n\n\"I know that, but this was different, James.\"\n\n\"How?\"\n\n\"You really wanted to watch him do it. I could tell,\" Dawn said. \"You seemed...more turned on because he was new.\"\n\n\"I was just thinking about it because of the way you dressed.\"\n\nDawn reached down and took my hand in hers and looked at me.\n\n\"Honey, do you always feel like that when I tease another man?\"\n\n\"Sometimes. It's just my fantasies...why are you feeling this now?\"\n\nDawn looked at me for a few minutes while she held my hand.\n\n\"I think I know,\" Dawn said.\n\n\"Why you are feeling things like this?\" I asked.\n\n\"Yes.\"\n\n\"Why?\"\n\n\"I need to tell you something first. The two of us always know how each other feel, but sometimes I think I do know what people are thinking,\" Dawn said.\n\n\"We all have moments like that,\" I said.\n\n\"I know, but you know how it is between us.\"\n\n\"We know what each other is feeling and sometimes thinking, but that is nothing new,\" I said.\n\n\"When I am around my mom and grandmother, I often know what they are thinking. Not just coincidences, I know.\"\n\n\"I know you are very close to them because that is where you get your powers from,\" I said.\n\n\"More than that. What I have passed through my mother and grandmother, but what I have comes from both of my great-grandparents.\"\n\n\"I know that.\"\n\n\"Honey, since some things have happened lately, I need to tell you a few things I haven't told you before.\"\n\n\"I know there are things you don't tell me, you don't have to, Dawn.\"\n\n\"I do now. You have only met my great-grandparents a few times, you don't really know how close I am to them. They taught me everything. They taught me how to take you on that journey to see you and Linda in the past. They also taught me how to do what happened after the journey.\"\n\n\"You mean the incredible sex we had?\"\n\n\"Not the sex, but how to take you to a different plane of reality. I told you the sex we had only took place in our heads, that was sort of true.\"\n\n\"What do you mean?\"\n\n\"I did something with you, I have never tried. I was only able to do it because you were able to come with me on the journey. After I let you see what happened with you and Linda...I needed all of you.\"\n\n\"I think you got that.\"\n\n\"I did. I took you to my special place. A place where I am in control of everything that happens. It is a place I go when I need to discover things.\"\n\n\"Like what?\" I asked.\n\n\"When I was young, I used it to communicate with my ancestors and other spirits in that place. When my great-grandparents used to take me on journeys to meet my ancestors, I had to learn how to take myself to those places without my great-grandparents help. It took me a long time, until I was in my teens. It is a place I went to learn and explore.\"\n\n\"And you took me there?\"\n\n\"Yes. Once I learned to do it, my great-grandparents made me practice by taking my mother and grandmother there. My grandmother used the journeys to teach me things.\"\n\n\"But how did you take me there?\"\n\n\"I told you it was because you loved me 100%.\"\n\n\"I do, you know that now.\"\n\n\"I do, but I also know something else. From all of my experiences with my mother and grandmother, I can now tell what they are thinking. I asked my great-grandfather about it once, and he told me it was because of the closeness of our souls during the journey. It sort of leaves a piece of them in my mind.\"\n\n\"What exactly are you saying?\"\n\n\"I think that happened with you on some level. It may wear off, so don't worry about it,\" Dawn said.\n\n\"You mean because of what happened, you can now tell what I am thinking, Dawn?\"\n\n\"Some. I didn't know it would happen with you, especially doing it just once. Sorry.\"\n\n\"You have always known what I was thinking, no big deal, honey.\"\n\n\"It will probably wear off,\" Dawn said.\n\n\"If you did this a lot with your mother and grandmother, do you know what they are thinking all the time?\"\n\n\"If I want to, yes. I usually just tune them out when they are around.\"\n\n\"You can do that?\"\n\n\"Yes, I have to.\"\n\n\"So, they know what you are thinking then?\" I asked.\n\n\"Yes.\"\n\n\"What about your great-grandparents?\"\n\n\"Oh, yes. More than I can explain. Do you think I am weird now?\"\n\n\"I have always thought you were weird,\" I said with a big smile.\n\n\"I know, but you enjoy it!\" Dawn said and leaned forward and kissed me.\n\n\"I don't care if you know what I am thinking because I am always thinking about you,\" I said.\n\n\"James, I know that. You are so different from other people,\" Dawn said.\n\n\"So are you. If this wears off, you don't need to be able to read my mind to know I enjoy it when you tease other men and also when you have sex with them while I watch.\"\n\n\"I have always known that, but now, I know how it makes you feel.\"\n\nDawn kissed me again then we went and showered. After I dried off, I slipped some sweats on and went down to check on Sherri and Brenda. They were in the study talking.\n\n\"Are you two getting your arrangements made?\" I asked.\n\n\"Working on them,\" Sherri said.\n\n\"Brenda, come with a minute,\" I told her.\n\nShe got up and followed me to the kitchen. I grabbed a soda and sat on one of the stools.\n\n\"It sounded like you and Dawn had a good time.\"\n\n\"We did. She always makes me horny when she dresses like that and teases guys.\"\n\n\"Does she dress like that often?\"\n\n\"When she wants to tease guys. Did Sherri tell you about my plans for some of our future business meetings?\" I asked.\n\n\"She mentioned you might invite the guy that we meet at Linda's.\"\n\n\"And his wife. Would you be okay with that?\"\n\n\"James, I enjoy all I can get. He seemed like a nice guy.\"\n\n\"He is, and his wife is a lot of fun.\"\n\n\"Do you have any other people that you plan on inviting to our business meetings?\" Brenda asked.\n\n\"If I do, would that be okay with you?\"\n\n\"Like I said, all I can get!\"\n\n\"I'll see what I can arrange then.\"\n\nBrenda smiled at me.\n\n\"James, is this a common thing with you and Dawn?\"\n\n\"Like you said, all we can get!\" I said, and the two of us laughed.\n\nBrenda grabbed a soda from the fridge and sat on the other stool.\n\n\"Brenda, I told Sherri that I would really enjoy watching her being fucked by another guy. That goes for you too. I want to watch you getting fucked good.\"\n\n\"James, you are welcome to watch...as long as I am getting fucked nice and hard!\"\n\n\"I think I can arrange that for you.\"\n\n\"You do that!\"\n\n\"You know what would really be hot?\" I asked.\n\n\"What?\"\n\n\"Me and another guy doing you at the same time.\"\n\n\"Oh, I haven't had both my holes plugged at the same time in a long time.\"\n\n\"I'll make sure we take care of you then.\"\n\n\"Please, do! Does Dawn enjoy that?\"\n\n\"She has a few times.\"\n\n\"Do you two ever have more than one other man with you?\" Brenda asked.\n\n\"Brenda, Dawn and I, and the girls, often spend the weekend with one or more couples at the same time.\"\n\n\"Oh, she is lucky. James, do you enjoy watching Dawn being fucked by other men too?\"\n\n\"Very much.\"\n\n\"I need to find a husband like you!\" Brenda said.\n\n\"I don't think I can help you in that area, but I can probably help in making sure you get fucked often by other men if you want that.\"\n\n\"Anytime, James. What about Sherri?\"\n\n\"If she would enjoy it.\"\n\n\"I think our business meetings are going to become very interesting. Is this limited to just your friends?\"\n\n\"Well, remember what I said about discretion.\"\n\n\"I understand.\"\n\n\"Sherri said she would because she doesn't want her boss to find out,\" I said.\n\n\"They told me about them doing her boss about once a month.\"\n\n\"It sounds like Jennifer's boss gets to watch the two of them and fuck the two of them, but no other guys or girls, at least none he knows about.\"\n\n\"Maybe he needs to expand his horizons,\" I said.\n\n\"I wish all men would expand their horizons.\"\n\n\"Brenda, the ladies need to expand theirs too.\"\n\n\"James, I think most women, married or not, would enjoy the benefits your wife gets to enjoy.\"\n\n\"You are probably right. I found that men get more hung up on this than the ladies.\"\n\n\"They do,\" Brenda said. \"If Sherri is leaving at 4:00, I'll make sure I have finished what I am working on by then.\"\n\n\"Thanks, Brenda.\"\n\n\"Don't mention it. I have a dinner date and a fuck for tonight anyway.\"\n\n\"Will you be late in the morning?\"\n\n\"Maybe!\"\n\n\"Take your time then, I'll understand.\"\n\nWe went back to the study; Sherri was on the phone again. It was almost 4:00, so I told them to go home. After they left, Dawn came downstairs in a loose robe.\n\n\"Have the girls gotten home yet?\" She asked.\n\n\"Not yet.\"\n\n\"They should have been finished by now.\"\n\nDawn went to the kitchen and started working on dinner. I went upstairs and put on some more appropriate clothes. About 4:30, the girls came in laughing and giggling.\n\n\"Where have you two been?\" Dawn asked.\n\n\"The surgery was over about 2:00. We stayed and fucked Dr. John and Dr. Keith in his office!\" Samantha said, laughing.\n\n\"Did you have a good time?\" I asked.\n\n\"Yes!\" They both said.\n\n\"Go get cleaned up and dressed,\" Dawn said.\n\nSamantha and Amy headed for the stairs.\n\n\"I'm sure John and Keith enjoyed that,\" Dawn said.\n\n\"I hope no one at the hospital heard them.\"\n\n\"I wouldn't worry about that.\"\n\n\"You better go and get ready too,\" I said to Dawn.\n\n*****\n\nAmy and Samantha came into our room very early Wednesday morning. While Samantha was straddling me and riding my cock, Dawn was sitting on my mouth while Amy watched. I drove Dawn to several orgasms before she fell to my side and watched Samantha finish.\n\n\"Oh, yes...I really do like morning sex!\" Samantha exclaimed as she drove her pussy onto my cock.\n\nShe kept going for a few minutes, then started coming hard.\n\n\"Ahhhhh!!\"\n\nI lifted her off the bed as I thrust up into her. , Once she started coming hard I started filling her full of cum.\n\n\"Ahhhhhhh!! Yes!\"\n\nWe thrust into each other for a few minutes then collapsed. Samantha was just sitting with her eyes closed.\n\n\"Emmm, I need to do this more often,\" she finally said and leaned down and kissed me.\n\n\"We need to run into town and see Joseph, and I need to stop at the bank and meet Lori,\" I told Dawn.\n\n\"Who is Joseph?\" Amy asked.\n\n\"The guy that manages our money.\"\n\n\"I need to do some things here to get ready for this weekend,\" Dawn said. \"Can't you take care of it?\"\n\n\"I'm sure I can, but there may be some other things he wants me to do.\"\n\n\"I'm sure there is,\" Dawn said, smiling. \"I think you can handle them alone.\"\n\n\"Okay. I have to stop at the bank first to introduce Lori to a man there.\"\n\n\"Is this the guy that you said will be helping with the businesses?\" Dawn asked.\n\n\"Yes.\"\n\n*****\n\nWe were finishing breakfast about 8:00 when Sherri and Brenda came in. After they got some coffee, we went to the study. I sat down and called Mr. Dain at the bank to make sure it was okay to come by at 9:00.\n\n\"I will be gone until after lunch,\" I told them.\n\n\"We should have numbers when you come back,\" Brenda said.\n\n\"Good.\"\n\nI left to go to the bank and to meet Joseph. When I got the bank, I found Lori in the lobby waiting. We went up to Mr. Dain's floor.\n\n\"This man's name is Ian Dain. He is setting up our line of credit for the business. He also is willing to help us with anything he can, so I want to introduce you, and then you need to sign some papers.\"\n\n\"Okay,\" Lori said.\n\nWe got off the elevator on his floor and walked down to his office. His secretary told us to go on in. I opened the door and Lori, and I walked into his office. The first thing I saw was his cute wife sitting across from him in one of her lab coats.\n\n\"Good morning,\" I said.\n\n\"Good morning,\" he said as he stood.\n\n\"Ian, this is Lori Walker. She is the one that will be running the day to day operations of the limo business.\"\n\n\"Good morning, Lori,\" he said.\n\n\"Good morning. I brought a copy of our business plan. Dr. Smith said you would need a copy.\"\n\n\"Thanks, I will look it over. Lori, this is my wife, Sondra. She stopped by before going to work.\"\n\nLori said hi, and we sat in some chairs across from Ian's desk.\n\n\"Ian, if the credit line is set up for the other business I will need to get a letter of credit soon for my ladies that will be traveling and buying,\" I said.\n\n\"No problem.\"\n\nIan and Lori talked for a bit. I kept looking over at his wife, and she would smile at me. He and Lori discussed the business plan for a while.\n\n\"Lori, I need to take you to sign some paperwork so you can sign checks,\" Ian said. \"You two, we will be right back.\"\n\nLori and Ian left his office.\n\n\"Dr. Smith, Ian didn't tell me you were bringing anyone this morning,\" his wife said as she looked over at me.\n\n\"I was busy this morning, I should have told him.\"\n\n\"Are you still planning on us coming to dinner at your house one evening?\" She asked as she turned in her chair to look at me.\n\n\"If you would like that. I thought that since we would be working together, it would be nice to get to know Ian, and you.\"\n\n\"That would be nice. We are still getting to know people here since we moved,\" Sondra said.\n\n\"I'm sure it will take you a while to meet people.\"\n\n\"We are working on meeting the right people, friends like we had back in Seattle. Dr. Smith, tell me something. Ian said you had introduced several women as your wives. What is that about?\"\n\n\"I have been married for 11 years, but recently my wife and I have met two ladies that now live with us. Both of us treat them like they are our wives.\"\n\n\"That sounds very interesting. Do the four of you share in everything?\"\n\n\"Yes, we do.\"\n\n\"I think I will enjoy meeting all of your wives and talking to them,\" Sondra said, smiling.\n\n\"I'm sure you will. When you two come for dinner, we can all have a good time getting to know each other,\" I said.\n\n\"I hope so. It sounds like you live in a very interesting situation. We knew a couple in Seattle that had another lady that lived with them, but we haven't met anyone here that has that arrangement.\"\n\n\"Sondra, these two ladies don't just live with us. We all live together. We seriously treat them as our wives.\"\n\n\"Dr. Smith, how do you work it out, having three women as your wives? I mean, who sleeps with who?\"\n\n\"It works out. I sleep with my first wife Dawn most of the time, but we have a big bed. Sometimes, we all sleep together. Other times Dawn may sleep with Amy or Samantha, and I will sleep with the other.\" I told Sondra as she listened closely.\n\n\"If I may ask, how does all the sex work out?\" Sondra said, smiling at me.\n\n\"It works out very well. Many times, we are all in the same bed having sex. If I am having sex with Amy, Dawn and Samantha may be having sex, or they may just be watching,\" I threw out there.\n\nSondra smiled at me.\n\n\"That is sort of how our friends that had a lady living with them worked things out. So far, we haven't met another couple like that here, or made friends with anyone like that.\"\n\n\"Are you and Ian hoping to meet some people that have that type of relationship?\" I asked as she smiled at me.\n\n\"We are. We used to get together with that other couple in Seattle and have some good times with them and their friend.\"\n\n\"I have found that people that are open to things like that seem to have a lot of good times that other people miss out on.\"\n\n\"That is what Ian and I found out too.\"\n\n\"Sondra, may I ask what you and Ian did for fun with that other couple?\"\n\nSondra smiled at me for a moment.\n\n\"Well, we first met them while I was still in vet school. When I had a free weekend, Ian and I would join the three of them for a bar-b-cue or something at their house.\"",
        "\"What did the...something...include?\" I asked.\n\n\"Sometimes we would spend the weekend with them, and the something could include some swapping,\" Sondra said, looking at me.\n\n\"I see.\"\n\n\"Dr. Smith, do you and all your wives ever have something like a bar-b-cue that last all weekend?\"\n\n\"Actually, we do. Sondra, would you and Ian be interested in finding other people that often do...something?\" I asked.\n\n\"If they were the right kind of people. I think we would. We haven't found anyone like that here yet.\"\n\nSondra sat looking at me, smiling while I smiled at her.\n\n\"If that is what you are looking for when you come to our house for dinner, I would like to fuck you,\" I said.\n\nSondra kept looking at me and smiling for a minute as I looked at her.\n\n\"That is the kind of something we are looking for,\" she said.\n\n\"Good. I know my wives would enjoy meeting you.\"\n\n\"I'm sure I would enjoy meeting them. Do they mind if others watch?\"\n\n\"Not at all. We all find that lot of fun and very hot.\"\n\n\"Great. Ian loves to watch.\"\n\n\"I'm sure he enjoys watching you with other women. Does he like watching you being fucked nice and hard.\"\n\nSondra laughed.\n\n\"Yes, he does! I also like watching him fuck other ladies nice and hard!\"\n\n\"I have three that would enjoy that.\"\n\n\"Oh, my! Very good. We will have to get together as soon as possible for dinner,\" I said.\n\n\"It sounds like it. I think my wives would enjoy being with you if that is okay?\"\n\n\"Oh, yes. I would enjoy knowing that many women that think like to do that,\" she said.\n\n\"Sondra, we often have several couples who stay at our house for the weekend. Is that something you and Ian would be interested in?\"\n\n\"Oh, I see. We only knew that one other couple that liked to share,\" she said.\n\n\"Sometimes, we have parties that last all weekend. Would you two be interested in joining one of our parties one weekend?\"\n\n\"We may be open to that. We could discuss it when we come for dinner.\"\n\n\"Sounds good. You two could start out with us and maybe another couple to see if you like it before things got real crazy.\"\n\n\"Dr. Smith, is this something that you often do?\"\n\n\"We have a lot of close and discreet friends that get together often.\"\n\n\"Oh, my.\"\n\n\"I think the two of you would have a good time with our friends,\" I told her. \"We have big Christmas parties and New Year's Eve parties.\"\n\n\"We will definitely discuss it when we see you.\"\n\n\"Is this what you two wanted to talk about before I brought Lori?\"\n\n\"It was. Ian seemed to think it might be something you would understand since you have three wives. We have had a hard time meeting anyone like that here.\"\n\n\"Well, I'm glad you brought it up. It's not hard to meet people like you are looking forward, but meeting ones that are discreet could be harder.\"\n\n\"Maybe you and one of your wives could come back one day around lunch, and we all could discuss it some more,\" Sondra said.\n\n\"That would be okay. I'll ask Ian what day would be good to come by.\"\n\n\"He works a half-day on Saturdays. There are usually not many people here.\"\n\n\"That sounds good. We will all be out of town this weekend, maybe soon.\"\n\nWe heard Ian and Lori coming into the office.\n\n\"Lori, I think that will take care of everything. Now you can sign checks and other things,\" Ian was telling her as they came back in.\n\n\"Good. Dr. Smith, is there anything else I need to do while I am here?\" Lori asked.\n\n\"I think that is it.\"\n\n\"Okay. I hate to run, but I have a meeting with my advisor at 11:00,\" Lori said.\n\n\"I'll get with you about next week then,\" I said.\n\n\"Fine. Nice meeting you, Mr. Dain,\" Lori said and left.\n\nIan sat on the edge of his desk.\n\n\"Honey, Dr. Smith, and I were talking while you were gone and you were right. He and his wives like to have fun like the Peterson's did in Seattle,\" Sondra told him.\n\n\"Great, I thought they might,\" he said.\n\n\"Ian, if you and Sondra are looking for some safe couples to have some fun with, I think I know some people.\"\n\n\"I don't know about a lot of people, we have been looking for another couple to hang out with and have some fun,\" Ian said.\n\n\"I know we can start there then. We will be out of town this weekend, but as soon as we get back, we can find some time for you and Sondra to come and have dinner.\"\n\nSondra got up and walked over to Ian.\n\n\"Honey, he said all of his wives liked for people to watch.\"\n\n\"Really?\"\n\n\"It has been a while since you got to watch me with another woman,\" Sondra said, as I watched her place her hand on Ian's crotch.\n\n\"Sondra, you will find that all of my wives enjoy pleasing other ladies,\" I told her.\n\n\"Oh, I look forward to that. Ian told me you had three beautiful ladies.\"\n\nSondra was looking at Ian as she rubbed his crotch.\n\n\"I do, and I know they would all enjoy treating you to a good time.\"\n\n\"They are okay if I watch?\" Ian asked.\n\n\"Oh, yes. They all like an audience if that is okay with Sondra.\"\n\n\"You will like that. Kathy didn't really like you watching the two of us,\" Sondra said. \"You know I am fine with it, honey.\"\n\n\"I know,\" Ian said. \"I will enjoy getting to watch you, honey.\"\n\n\"Ian, we all like to watch. I hope you will like watching me fuck your wife,\" I said. Sondra looked at me and smiled.\n\n\"I always enjoy that,\" he said, looking over at me.\n\n\"If Sondra likes to watch, am sure she will have a good time watching you fuck all three of my wives one weekend.\"\n\n\"Dr. Smith, you mean all of them are into that?\" He asked.\n\n\"Of course.\"\n\n\"Oh, my. Only the guy's wife would let me do her in Seatle, the other lady only liked to do my wife.\"\n\n\"Ian, you will find that all of the ladies I know that are into this enjoy being fucked by men other than their husbands. And I hope we can get Sondra into enjoying it.\"\n\n\"All of them? How many do you know?\" He asked.\n\n\"Enough to keep things interesting, as long as you two are the type of people that keep such things to yourselves,\" I told him.\n\n\"Of course, we are!\" He said.\n\n\"Oh, Ian, I think we have found the right people finally,\" Sondra said as she rubbed his cock through his pants.\n\n\"It sounds like it.\"\n\nSondra grabbed his belt and pulled on it until she had it open. She then unzipped his pants and pulled them open and reached in and grabbed his cock.\n\n\"Honey, if they know that many people, will you be okay with more than just one other man fucking me occasionally?\" Sondra asked him.\n\n\"It may take some getting used to, but that means a lot of other women,\" he said looking into Sondra's eyes.\n\n\"Oh, that works both ways,\" she said.\n\nI watched Sondra slide down to her knees. She pulled Ian's pants down, and his hard cock stuck out. She wrapped a hand around it and turned and looked at me and winked, then turned back and slid her mouth over his cock.\n\n\"Dr. Smith, how many people do you know that are into this?\" He asked as his wife sucked his cock.\n\n\"Ian, there are a group of us that get together occasionally and have some good times. However, all these people are well connected, and the nature of our get-togethers have to remain a secret.\"\n\n\"Obviously.\"\n\n\"After all of us have dinner if it is something you two would be interested in, I would have to discuss it with a few other people. If they think you two would fit in, we could invite you to the next party we have one weekend.\"\n\n\"But how many people are you talking about?\"\n\n\"Enough that your lovely wife could get fucked by five or six different guys on a weekend.\"\n\n\"Emmmm!!\" Came from Sondra.\n\n\"Wow.\"\n\n\"These people are not into orgies, just a lot of good fun when we all get together. The women all enjoy a new guy, and the men always enjoy a new lady. I know they would enjoy your hot wife.\n\n\"Emmmm...emmmm!!\" Came from Sondra again.\n\n\"How long do these parties last?\"\n\n\"Sometimes a bunch of us will get together on a Friday night and stay till Sunday. We usually have a big New Year's Eve party that last two or three days.\"\n\n\"Where at?\"\n\n\"Usually, at my house.\"\n\nI was watching Sondra as she worked her mouth up and down on his cock quickly.\n\n\"You must have a big house.\"\n\n\"We do. Sondra told me you two knew another couple you had some fun with. You two need to think about if you will be okay with more than just one couple. Ian, it could mean you watching your wife being fucked five or six times on a weekend, or even one night.\"\n\nSondra slid her mouth off his cock and turned to look at me.\n\n\"Seriously?\" She asked.\n\n\"If you are up to it,\" I told her.\n\n\"I have never done that.\"\n\n\"We just let the ladies do what they are comfortable with, but my wife has been fucked 5 or 6 times in one evening.\"\n\n\"And you are good with that?\" Ian asked as she stroked his cock.\n\n\"I let my wives do as they please. We all enjoy knowing each of us is being pleased as much as possible.\"\n\n\"Does that include the young redhead?\" Ian asked.\n\n\"That does include Samantha.\"\n\n\"How old is she?\"\n\n\"She just turned nineteen.\"\n\n\"You have a nineteen-year-old wife?\" Sondra asked.\n\n\"Yes, she is nineteen going on thirty.\"\n\n\"Oh, my.\"\n\nSondra slid her mouth back over his cock and sped up.\n\n\"Dr. Smith, are all these ladies okay with other people watching?\"\n\n\"Yes, we are all pretty open. We all like to watch and be watched. I hope that is not a problem with you two?\"\n\n\"No. Wow, I would love to two watch three or four women making love to my wife at the same time.\"\n\n\"Emmm!\"\n\n\"I'm sure you would. How would you feel about two or three guys doing your wife at the same time?\"\n\n\"Emmmmm!!\" Came from Sondra as she sped up.\n\n\"I haven't seen that, but I'm sure Sondra would enjoy it.\"\n\n\"Emmm!! Emmmmm!! Emmmmmmmm!!\" Came from Sondra as she worked her mouth on his cock faster.\n\n\"Do you think that is something you two feel open enough to enjoy?\" I asked.\n\n\"Sondra?\" He asked.\n\n\"Emmmmm!!!\"\n\n\"I think that is a yes,\" Ian said.\n\n\"Emm!!\"\n\nThe two of us watched his wife sucked his cock for a few more minutes.\n\n\"There is just one other thing,\" I said.\n\n\"What's that?\" Ian asked.\n\n\"About a year ago, since everyone enjoys all the fun we have, all the men and women agreed that not only could we all have sex at our get-togethers, but, it was okay for anyone in our group to hook up with someone in the group at other times.\"\n\n\"Like what?\" He asked.\n\n\"Oh, something like me coming to your house while you are at work and fucking your wife. Or, maybe one of the ladies dropping by your office during lunch and having a quickie.\"\n\n\"Oh, you mean all of you agreed that if any of you wanted to get together just one-on-one, it was okay?\"\n\nSondra slid her mouth off his cock and looked up at him.\n\n\"Yes, things like that. Sometimes my wife and I will visit one of the ladies while the husband is out of town and keep her company. Or, my wife may drop by one of our friend's house on the way home and do either the husband or the wife, or both. We all agreed that since we were all fucking each other that it would be okay in one-on-one situations also. It just good, clean fun.\"\n\n\"How often does that happen?\"\n\n\"I'm not sure, but I know the ladies like to get together and talk about it.\"\n\n\"Well, it is something Sondra, and I have discussed...would that be okay with you, honey?\" He asked, looking down at her.\n\n\"Are you kidding? Fuck yes! You would be okay with that?!\" Sondra said, standing up.\n\n\"We have talked about it. I guess if we like their friends, why not?\" Ian said.\n\n\"Oh, my god, Ian! You mean it!\" Sondra said and grabbed his head and kissed him.\n\n\"Sounds like a lot of fun without any issues,\" Ian said.\n\n\"Are you sure about this?\" Sondra asked.\n\n\"I guess we can try it and see how it goes.\"\n\nI saw Sondra reach up and began to unbutton the lab coat she had on. It only took her a minute, but when she dropped it to the floor, she was standing there naked. She moved next to Ian and slid some things on his desk to the side then sat on the edge of the desk and leaned back and spread her legs.\n\n\"Dr. Smith, my wife really enjoys people watching,\" he said as he turned to her and grabbed her legs.\n\nIan pulled her legs up and spread them, and I watched as he eased his cock into his wife.\n\n\"Oh, god! I don't believe this! You are really considering this, honey?\" She said.\n\n\"We can try it.\"\n\nSondra leaned way back onto her elbows as Ian began to slide his cock in and out of her. I got up and walked around his desk and stood and watched.\n\n\"You have to remember one thing though, these one-on-ones are limited to just the people you meet in our group,\" I told them. \"That way, things don't get out of hand.\"\n\n\"Oh, Dr. Smith...are the ladies in your group open to visiting just each other?\" Sondra asked as Ian worked his cock in her.\n\n\"Very much. It took some time, but all of the ladies enjoy just being with each other from time to time.\"\n\n\"Oh, I could get used to that!\"\n\n\"They get together sometimes, and instead of playing cards, they all have sex,\" I told her.\n\n\"I never got to do that!\" Sondra said.\n\nIan kept working his cock into his wife as she moaned. I was looking at her body and her nice large tits as they bounced around as she got fucked. She finally collapsed back on her back as Ian thrust his cock into her.\n\n\"Ohhhhh.\"\n\n\"Do you two do this often?\" I asked.\n\n\"Occasionally,\" Ian said.\n\n\"Has your secretary ever walked in on you?\"\n\n\"Just once, that's what makes it so fun,\" Sondra got out.\n\n\"Won't you have problems with your secretary?\" \n\n\"No, we have been talking to her about joining us,\" Ian said.\n\n\"Ah...ah...ah...\" was coming from Sondra as she had her head back almost hanging off the desk.\n\nI reached up and grabbed one of her tits in each hand and squeezed them as Ian bounced her on the desk. Ian kept going as I squeezed Sondra's ample tits. \n\n\"Oh, yes...\" came from her as Ian worked on her pussy.\n\nSondra reached back and began rubbing my cock through my pants as Ian pushed her further onto the desk. I took a nipple between each of my fingers and squeezed them.\n\n\"Ohhhh...\"\n\nSondra went to work pulling my belt open. Once she had it open, she expertly got my pants open and reached in grabbed my cock.\n\n\"Damn,\" she said. \n\nShe reached back and worked my pants down far enough she could get all of my cock out. Ian watched her playing with my cock as he slid into her.\n\n\"Wow,\" came from Sondra as she looked back as she worked her hand up and down on my cock.\n\nI saw Ian lean into Sondra hard and push her across the desk far enough her head was now hanging off. He pulled her legs up and put her feet on the edge of his desk and went back to work fucking her. Sondra grabbed my cock and guided it into her mouth and went two work as I squeezed and twisted her large nipples.\n\n\"Give her all of it, Dr. Smith,\" Ian said.\n\nI leaned forward slowly and watched as Sondra let all of my cock slide down her throat. I could see the end bulging through the skin of her neck.\n\n\"The guy we knew in Seattle had a big cock. I know she misses it.\"\n\nWhile Ian fucked his wife, I played with her tits and worked my cock in and out of her mouth. We kept this up for a while until Sondra had a huge orgasm, and Ian filled her full of cum. Sondra kept sucking on my cock. Ian slid his cock out of her and reached into his pocket and took out his cell phone. He took some pictures of his wife as she deep throated my cock.\n\n\"I know she loves your cock,\" Ian said.\n\n\"You have plenty,\" I said to him.\n\n\"I do, but I think you are more than she has had before.\"\n\nHe held his cell phone above her face and took several more photos as I slid my cock in and out of her mouth. I kept working my cock in her mouth for a few more minutes. I needed to come, so I slid out, so just the end was in her mouth and began filling it full of cum.\n\n\"Emmmmmmm...\" she moaned as I filled her mouth full.\n\nSondra sucked on the end of my cock as she swallowed all of the cum. Then I slid my cock out of her mouth.\n\n\"Oh, god, that was good,\" she said.\n\nShe lifted her hands up, and Ian took them and pulled her up, so she was sitting. I pulled my pants up and got them back together.\n\n\"Oh, we haven't done that before,\" Sondra said.\n\n\"Not in my office anyway,\" Ian said.\n\n\"Oh, I hope Kelly didn't hear us.\"\n\n\"I'm sure she did. I think we have just about talked her into joining us,\" Ian replied.\n\n\"Is she married?\" I asked.\n\n\"Yes, and she has a cute husband,\" Sondra said.\n\n\"How old is she?\" I asked.\n\n\"About twenty-five.\"\n\n\"I hope you have some luck getting her and her husband to join you. Ian, you have my cell number, send me those pictures so I can show my wives,\" I said.\n\n\"Oh, I guess,\" Sondra said.\n\n\"Sondra, I hope it is okay with you to share pictures. Everyone likes to take pictures and share. They don't go anywhere else,\" I told her.\n\n\"I guess.\"\n\n\"I need to go, I have to meet with my broker,\" I said.\n\n\"Do you have a good one?\" Ian asked as he pulled his pants up.\n\n\"Yes, but he only handles larger accounts.\"\n\n\"Find out what he considers large?\"\n\n\"I'll ask. Ian, I'll call you when we get back and set up a weekend,\" I told him.\n\n\"Great. If it is going to be a while, maybe you and one of your wives can come by for lunch one day.\"\n\n\"Maybe when I come back you will have talked your secretary into the two us doing her,\" I said. \"I'll talk to you later.\"\n\n\"Maybe I will send you a visitor. There are others that have to okay new couples for the group,\" I told him.\n\nI left Sondra sitting on his desk naked as I opened his door and left his office. I checked out his secretary on the way out; she looked to be in her mid-twenties and very cute.\n\n*****\n\nI was in the SUV, driving back to Joseph's office when my cell rang. I didn't usually talk and drive, but the caller ID said it was the Chief of Police.\n\n\"Hey, Chief.\"\n\n\"Hello, Dr. Smith. I wanted to follow up on the conversation we had last week.\"\n\n\"Anything particular?\"\n\n\"Well, I was just wanting to double check and make sure I understand what you and your wife were suggesting.\"\n\n\"Chief, my wife and I were suggesting that you and your wife come to our house so that we could watch the two ladies do each other.\"\n\n\"I just wanted to make sure.\"\n\n\"Have you talked to your wife?\" I asked.\n\n\"I'm going to.\"\n\n\"If you get that far and she has questions, have her call Dawn.\"\n\n\"Oh, I think she is ready. I just need to ask her about meeting you and your wife.\"\n\n\"Well, we can start with dinner and go from there,\" I said.\n\n\"Good.\"\n\n\"If she has any questions have her call, Dawn.\"\n\n\"I will.\"\n\n\"Did you tell her about my wife sucking your cock?\" I asked.\n\n\"I did.\"\n\n\"What did she say?\"\n\n\"She said if I was getting that, it was time for her to get some!\"\n\n\"Perfect. I'm driving, so I need to get off the phone.\"\n\n\"Okay.\"\n\n\"Chief, I'm looking forward to fucking your wife senseless.\"\n\n\"Oh, I guess you are!\"\n\n\"I'm sure you are thinking about fucking my wife.\"\n\n\"I am!\"\n\n\"I'll talk to you later. I'm sure we will have some fun this weekend.\"\n\nI hung up and kept driving.\n\nI got to the building Joseph was in about 11:45. I rode the elevator up to his floor and walked down to his office.\n\n\"Hello, Dr. Smith,\" his receptionist said.\n\n\"It was Susie, wasn't it?\"\n\n\"Yes.\"\n\n\"How are you doing?\" I asked.\n\n\"Very well, and you?\"\n\n\"I'm doing fine.\"\n\n\"Joseph told me you would be stopping by about this time. Go on back to his office, he is ready for you.\"\n\n\"Thank you, Susie.\"\n\n\"No, problem. I look forward to having dinner with you and your wife.\"\n\n\"I do too.\"\n\nI walked down the hall and knocked on his door.\n\n\"Come on in!\"\n\nI opened the door and saw Joseph was sitting behind his desk.\n\n\"Close the door, Dr. Smith,\" he said as he stood.\n\nI pushed the door closed and looked up and saw his wife sitting in one of his chairs.\n\n\"Have a seat, I think I have a few things for you to look at,\" he said. \"You have met my wife, Pamela.\"",
        "\"Once, hello Pamela.\"\n\n\"Hello, Dr. Smith.\"\n\nI looked at his wife, and she was sitting in the chair in a short skirt exposing a lot of legs. It appeared she had cut her hair since the last time I had seen her, all of the long brown hair was gone, and she now had shorter frosted hair; she looked nice. I sat in the chair next to her.\n\n\"Dr. Smith, I have put together a proposal for the changes and the amounts. I thought you would like to look it over before I started making the moves. I want to start next week.\"\n\n\"Joseph, I am sure if you have anything you would like for me to look at, it will be fine.\"\n\n\"I'm sure you will like what you see,\" he said when he picked up a folder and walked to my chair and handed it to me.\n\n\"I will look this over later,\" I said. \n\n\"Let me know as soon as you can,\" Joseph said as he returned and sat behind his desk.\n\n\"Dr. Smith, Joseph told me about the last time you were here,\" his wife said.\n\n\"I hope the discussion we had with him was fine with you, Pamela.\"\n\n\"Oh, I found it very interesting, and so did my husband. He said that you and your wife might be interested in joining us in the Bahamas for a weekend.\"\n\n\"I think my wife and I would enjoy a trip for a long weekend. Do you have any ideas when?\" I asked.\n\n\"Veteran's Day is on a Thursday this year. I am going to make Joseph take off that Friday too. How about that weekend. We could fly down either Wednesday night or Thursday morning,\" Pamela said.\n\n\"Let me check our calendar,\" I told her.\n\n\"We are going to ask Susie to join us,\" Joseph said. \"Our condo has three bedrooms.\"\n\n\"That sounds like a good idea. Dawn and I have two young ladies that live with us. They will be out of school for the weekend also.\"\n\n\"Really?\" Pamela said.\n\n\"Yes, they have been living with us for a while. They are both going to school working on their nursing degrees. The four of us are very close.\"\n\n\"I see. Dr. Smith, are the four of you close enough they would like to join us in the Bahamas?\" Pamela asked.\n\n\"I think they would enjoy that. They were interested in the meeting my wife and Joseph had.\"\n\n\"Really?\" She said.\n\n\"Yes, they all like to tell each other about the adventures they have.\"\n\n\"Are they the type of young ladies that would have a good time?\" Joseph asked.\n\n\"Yes, they are. The two of them would have a very good time if Pamela and Susie would be good with that,\" I said.\n\n\"The more, the better!\" Pamela said.\n\n\"Dr. Smith? If they are going to school, how old are your two friends?\" Joseph asked.\n\n\"28 and 19.\"\n\n\"Oh.\"\n\n\"I'm sure they will enjoy meeting you two if you are still coming to dinner next Friday,\" I said.\n\n\"Oh, I'm sure my husband will be looking forward to seeing them. I am guessing the two of them would also enjoy meeting Joseph,\" Pamela said.\n\n\"They will be very happy to meet him, and you.\"\n\n\"Dr. Smith, it sounds like you have an interesting relationship with your two friends,\" Joseph said.\n\n\"We do. Dawn and I actually consider the two of them our wives,\" I said.\n\n\"Really?\" Pamela said.\n\n\"Yes, we all share in everything we do.\"\n\n\"Oh, my. That sounds very interesting,\" Pamela said, smiling at me.\n\n\"You can talk to them about it when you come. They are sisters, and we all share everything.\"\n\n\"Sisters?\" Joseph asked.\n\n\"Yes.\"\n\n\"Dr. Smith, if they are sisters and you and your wife are treating them as your wives, do they...I mean, do they share with each other?\" Joseph asked.\n\n\"The two of them are very close.\"\n\n\"Oh, wow.\"\n\n\"They are also not bashful, Joseph. I'm sure you can watch them and enjoy being with the two of them while I do your wife.\"\n\n\"Wow.\"\n\n\"Well, if my husband is going to get to enjoy two sisters, I look forward to sharing you with your wife and Susie,\" Pamela said.\n\n\"I'm sure we can all have a wonderful evening, or better if the two of you and Susie could stay the weekend.\"\n\n\"Joseph, you think we could do that?\" His wife asked.\n\n\"I think we could.\"\n\n\"I think we will have a great weekend then,\" his wife said.\n\n\"Pamela, I think you are right. I am looking forward to doing you and watching you with the girls,\" I threw out there. I saw Joseph look over at his wife.\n\n\"I see. I'm looking forward to returning the favor your wife gave to my husband, but, I don't entertain women,\" Pamela said.\n\n\"Oh, sorry, Joseph had said the two of you and Susie get together, I just assumed.\"\n\n\"That's okay. I do enjoy watching Joseph and Susie together.\"\n\n\"Good, then you will have a good time watching him with my wives.\"\n\n\"I will. Why don't we find out if he enjoys watching you with me, Dr, Smith?\"\n\n\"Do we have the time?\" I asked.\n\n\"We do. I usually take a long lunch break on Wednesdays,\" Joseph said.\n\n\"With your wife or Susie?\" I asked.\n\n\"One or the other!\" Joseph exclaimed.\n\nPamela stood and moved and stood in front of me. I watched as she began unbuttoning her blue silk top. Once she had it unbuttoned, she slipped it off and tossed it on the other chair. I looked, and she had a nice tan, and some impressive tits being held up by a blue lace bra.\n\nShe unsnapped the bra in the front and let it slide off her arms, and she tossed it in the chair. Pamela had some large tits with dark brown areolas.\n\n\"Joseph told me he liked your wife's body.\"\n\n\"I'll tell her that. I have to say I like yours.\"\n\nI watched as Pamela unbuttoned the side of her skirt then let it fall to the floor. She kicked it off over her high heels. I looked at the matching blue lace thong she had on.\n\n\"Nice,\" I said.\n\nShe bent over and reached for my belt and pulled it open as I looked at her dangling tits. She got my belt undone then worked at unbuttoning my pants.\n\n\"Pamela, have you ever experimented with another woman?\" I asked.\n\nShe looked up at me and smiled.\n\n\"I did once when I was drunk.\"\n\n\"You did?\" Joseph said.\n\n\"I was pretty drunk at a party in college.\"\n\nShe got my pants unbuttoned then she looked down and unzipped them.\n\n\"I don't remember much of it. When I saw the girl in school the next week, she told me she enjoyed it.\"\n\n\"You never told me that,\" Joseph said.\n\n\"Honey, I was pretty drunk. I don't really remember much other than the two of us being in a bed naked.\"\n\n\"And you have never tried it again?\" I asked.\n\n\"I never gave it much thought.\"\n\nPamela slid her hand inside my underwear and grabbed my growing erection.\n\n\"Oh, my,\" she said as she squeezed my cock. \"Dr. Smith, stand up for me.\"\n\nPamela stood and waited. I stood up in front of her, and she grabbed my pants and pulled them open and pushed them down to my thighs.\n\n\"Oh, wow,\" she said as she took my cock in her hand. \"This is impressive. Susie will enjoy this.\"\n\n\"Let me get her,\" Joseph said.\n\n\"Wait, Joseph! Let it be a surprise,\" Pamela said. \"Besides, I want all of this just for me right now.\"\n\nJoseph walked over and sat in the other chair next to us as his wife stroked my cock until it was fully hard.\n\n\"Honey, I have never had anything this big,\" she said to her husband. \"I'm glad you offered to introduce me to Dr. Smith.\"\n\n\"I thought it would only be fair since he let me fuck his hot wife.\"\n\n\"Dr. Smith? Is your wife Indian?\" Pamela asked as she stroked.\n\n\"Part Cherokee.\"\n\n\"Joseph said she was hot. I think he really got off on doing her.\"\n\n\"She likes to have a good time. She wanted to thank Joseph for making us all the money he has.\"\n\n\"He said she was very appreciative. Did you enjoy watching my husband fuck your wife?\" Pamela asked looking into my eyes.\n\n\"I always enjoy watching my wife have a good time.\"\n\n\"Emmm. Do you two do things like that often?\" She asked.\n\n\"We all like to have a good time when we can.\"\n\n\"I see. If you like watching your wife have a good time, do you like watching your other two lady friends have a good time?\" Pamela asked.\n\n\"Pamela, I let my wives have a good time anytime they wish, whether it is with another man or another woman. They are welcome to do as they please.\"\n\n\"Oh, I like the sound of that. I get to do as I please, but only when Joseph is with me!\" Pamela said with a big smile then looked over at her husband and winked.\n\n\"I would hope you get to do as you please when you want to, Pamela. It sounded like Joseph gets to do as he pleases. You weren't here with him when he did my wife.\"\n\n\"That's a good point, Dr. Smith. I wish you would explain it to my husband,\" she said as she slowly stroked my cock.\n\n\"Joseph, you would be okay with your beautiful wife having a good time without you, wouldn't you?\" I asked and looked over at him, putting him on the spot.\n\n\"I think maybe my wife has a good point,\" Joseph said.\n\n\"You do?\" Pamela asked as she looked over at her husband.\n\n\"Honey, I think if you don't mind me doing some of my clients and Susie, and I don't mind when you are doing my clients while I watch, I don't guess I would mind you having a little fun without me.\"\n\n\"Really?\" Pamela asked.\n\n\"Pamela, my wife knows I don't mind her having a good time without me because she knows I love her, and we will always love each other. Having a little fun is not going to change that.\"\n\n\"Honey, are you sure?\" She asked.\n\n\"I guess, but I do enjoy watching you being fucked.\"\n\n\"Are you sure?\" Pamela asked.\n\n\"Pamela, stop talking,\" I told her.\n\nShe looked back at me and smiled, then worked her way down onto her knees.\n\n\"Damn,\" I heard her say then felt her mouth on the end of my cock.\n\n\"James, did Dawn not want to come?\" Joseph asked.\n\n\"She is getting ready for a trip we are taking this weekend. She told me to tell you she is looking forward to seeing you three next weekend.\"\n\n\"Tell her I am looking forward to seeing her too. Tell me about your two lady friends.\"\n\n\"Joseph, they are very hot and gorgeous, that is all you need to know until next weekend.\"\n\n\"Emmm!\" I heard come from his wife as she worked my cock in her mouth.\n\nI looked down and watched as she slid her mouth up and down while she had a hand wrapped around my cock. Joseph and I watched for a while until she had removed her hand and was trying to get as much into her mouth and throat as she could.\n\n\"Ahh, that is a lot,\" she said, coming up for air.\n\n\"Honey, can you get all of it down your throat?\" Joseph asked.\n\n\"I'm going to try!\"\n\nPamela slid her mouth back onto my cock and began working on forcing it down her throat.\n\n\"Dr. Smith, your wife, had no trouble with mine, can she get all of your's down her throat?\" Joseph asked.\n\n\"Oh, yes.\"\n\nI looked down and watched his wife force my entire cock into her mouth and down her throat for a moment, then slide off.\n\n\"Oh, wow! That goes down a long way!\" She said, coming up for air again.\n\nShe slid her mouth back onto my cock, and we watched her deep throat me for a while. Joseph had gotten his cell phone out and was videoing his wife. Pamela sped up and was soon driving her mouth down on my cock. I didn't often get to enjoy a woman that would let me fuck her mouth hard, but Pamela was going at it.\n\n\"Emm! Emm! Emmm!!\" Was coming from her as she jammed my cock down her throat. \"Ahhh!\" Came out as she slid her mouth off my cock.\n\n\"You like that, don't you?\" Joseph asked.\n\n\"Oh, Yes! Emmm, I'll finish this another time. I want this inside of me,\" Pamela said. \"Sit down.\"\n\nI sat in the chair, and she worked for a minute until she had my pants off. She looked up, then leaned forward and slipped my cock back into her mouth for a minute.\n\n\"Dr. Smith, Joseph enjoyed going down on your wife, and I want you to do me, but I want this in me right now,\" Pamela said when she came back up.\n\n\"Dawn always enjoys other men going down on her,\" I said.\n\nHis wife stood in front of my chair, and I hooked my fingers in her thong and slid it down, and she stepped out of it. I admired her nicely shaven pussy as I ran my hand back up the inside of her leg and ran my fingers over wet pussy lips then put them in my mouth and tasted her. She straddled the chair, and I sucked one of her nipples into my mouth while she stood for a minute. She pulled her nipple from my mouth then began to lower herself down until she could grab my cock. I felt her place the end at her hot pussy lips and move down until the end slipped inside her.\n\n\"Ohh!\"\n\nShe moved down some more until I was sliding into her then released my cock and placed both of her hands on my shoulders.\n\n\"Emmm.\"\n\nI looked at Pamela as she worked her pussy and moaned. After about five minutes, she had all of me inside of her and was sitting on my lap.\n\n\"Oh, my god! That feels incredible!\"\n\nShe sat for a few minutes while she mashed her tits together.\n\n\"Oh, honey, I am so full of his cock,\" she said, looking over at Joseph.\n\n\"I bet you are!\"\n\nShe looked back into my eyes and began to work her pussy slowly. Joseph held his cell phone up, and I watched as he took several pictures of his wife working herself on my cock.\n\n\"Oh, get some video,\" his wife said.\n\nShe worked her pussy more as he recorded.\n\n\"Oh, what a feeling! Your big cock feels good!\"\n\n\"Honey, you tell all of my clients that!\" Joseph said and laughed.\n\n\"No, I mean it! This feels so good!\"\n\nPamela worked her pussy on my cock for about 15 minutes as her husband recorded it.\n\n\"Dr. Smith, you said your wife enjoys other men going down on her. How often does that happen?\" Pamela asked as she wiggled.\n\n\"My wife has the pleasure of enjoying other men when she wants too. Most of them are our friends.\"\n\n\"Do you always watch?\" She asked.\n\n\"I may be watching, or I may be doing our friends wife,\" I said as I looked into her eyes.\n\n\"A smile began to slowly appear on Pamela's face.\n\n\"I see. Does this happen often?\"\n\n\"From time to time. We have parties or a few couples over for dinner occasionally.\"\n\n\"That sounds interesting.\"\n\n\"Are weekend dinner parties can be rather friendly.\"\n\nPamela worked her pussy on my cock as she smiled at me.\n\n\"When you two entertain clients, is it just one couple at a time?\" I asked.\n\n\"Usually!\" Pamela said and laughed.\n\n\"Maybe you two should look into changing that.\"\n\n\"Sounds like fun, but his clients are probably not into any more than just us.\"\n\n\"You just don't know the right people,\" I told her.\n\n\"And you do?\"\n\n\"You never know.\"\n\nPamela smiled at me and worked her pussy harder for a while.\n\n\"Ohh! Damn! I'm going to come already! Ahh!\"\n\nShe jammed her pussy harder onto my cock.\n\n\"Ahhhh!! Yes!!\"\n\nI was holding her around the waist, and I felt her jerking as she came.\n\n\"Fuck!\"\n\nPamela began to drive herself onto me harder for several minutes.\n\n\"Ahhh!! I'm coming again!!\"\n\nShe jerked, and I heard her pussy gush.\n\n\"Ohhhh, god!\"\n\nPamela stopped and sat on my cock and collected herself.\n\n\"Honey, you seem to be enjoying yourself,\" Joseph said.\n\n\"Oh, I am! I need to rest a minute.\"\n\n\"Take your time,\" I told her.\n\n\"Dr. Smith, how often does your wife get to enjoy herself without you being with her?\" Pamela asked.\n\n\"Whenever she wants to.\"\n\n\"Does she tell you after she has done it?\"\n\n\"Sure. She will come home and tell me about it. We will end up fucking like crazy after that.\"\n\n\"Honey, I know you like to watch me getting fucked. Would you like it if I came home and told you about being with another man?\" Pamela asked.\n\n\"Sure! You always like to hear about my clients and me.\"\n\n\"I hope you mean it!\"\n\n\"I do.\"\n\n\"I'm glad I could help,\" I told Pamela.\n\n\"I am too!\"\n\n\"Now, if we could just get you interested in women,\" I said, looking into her blue eyes.\n\n\"I don't know about that,\" she said, smiling.\n\n\"Maybe we just need to get you drunk again!\" Her husband said and laughed.\n\n\"Pamela, did you regret it when your friend told you about it afterward?\" I asked.\n\n\"No, I just told her I wish I could remember it. We had a good laugh about it.\"\n\n\"You never wanted to try it again?\" I asked.\n\n\"I never got that drunk again!\" Pamela said and laughed.\n\n\"That's too bad. Maybe if you remembered doing it you would remember having fun,\" I told her. She smiled at me.\n\n\"Honey, why did you never want to try it again?\" Joseph asked.\n\n\"It never came up.\"\n\n\"Pamela, if you don't regret doing it, why don't you try it sometime,\" I said. \"Maybe with Susie.\"\n\n\"Susie asked me once.\"\n\n\"She did? What did you tell her?\" Joseph asked.\n\n\"I told her no because I didn't know how you would feel about it?\"\n\n\"What?\" Why?\" Joseph asked.\n\n\"Honey, I didn't know what you would think about me if I did that,\" Pamela said.\n\n\"What do you mean? Honey, I would love to watch you and Susie!\"\n\n\"I'm sure you would!\" She said, and laughed.\n\n\"Pamela, you are not hung up on the whole thing about being with another woman, are you?\" I asked.\n\n\"I don't know. How did you feel about your wife after you saw her do it the first time?\"\n\n\"Pamela, I told my wife I thought she was sexy as hell doing that. She asked me if I had a problem with her being with another woman. I told her absolutely not.\"\n\n\"You were okay with it?\" Pamela asked.\n\n\"Pamela, don't get hung up the lesbian thing or being bisexual. Labels like that are just that, labels. If my wife enjoys being with another woman, and she does, I'm going to let her. If she enjoys being with another man, she can do that. The entire lesbian thing never came up.\"\n\n\"But, still...I'm not sure how I would feel about other men or women knowing I did that,\" Pamela said.\n\n\"Let me explain something to you. If you and Susie wanted to do that and let Joseph watch, that is between the three of you. I don't think Susie is going to go around telling everyone that she was in a three-way with you two and that you went down on her.\"\n\n\"She better not for what I pay her!\" Joseph said, laughing.\n\n\"Pamela, I consider that something very special that my wife and lady friends let me watch. They all enjoy themselves, and it is not something they go around telling everyone they do. They are people like you and Joseph, and they wouldn't want other people knowing. Not because it is wrong, just because it is a private thing between them and their special friends. I'm sure the clients that Joseph has that you two spend time with are the type of people that also wouldn't go around telling everyone. And please, don't get hung up on the lesbian thing.\"\n\n\"No, they wouldn't,\" she said.\n\n\"There is nothing wrong if someone finds out you are bisexual, I'm just sure it is not the kind of thing you would share with someone that wouldn't understand.\"\n\n\"I guess your right.\"\n\n\"Even though there are others that share that lifestyle, it is not something that could be made public by people that have business or personal considerations,\" I told her.\n\n\"You're right,\" Pamela said.\n\n\"Honey, I would never tell anyone,\" Joseph said.\n\n\"You just want to watch!\"\n\n\"You're right!\" He said.\n\nThe three of us laughed then she began to work her hips on my cock again. Joseph walked behind her and pulled her head back and leaned over and kissed her, then walked back to his desk and put his phone down.\n\n\"Does your wife spend time with other women when you are not with her?\" Pamela asked.\n\n\"All the time, and she and the girls are always making love to each other.\"\n\n\"Dr. Smith, how did you get two young women to move in with you?\" Joseph asked.\n\n\"Long story.\"\n\nPamela was working her hips faster as my cock jammed into her.\n\n\"Pamela, did you get horny thinking about doing another woman?\" I asked her, and she smiled at me.\n\nShe kept going for a while until she had another orgasm.\n\n\"Ohh, fuck!! You are driving me crazy!\" She said.\n\n\"Pamela, do you suck your husbands cock after he fucks other women?\"\n\n\"Sometimes.\"\n\n\"So, you don't mind the taste?\"\n\n\"No.\"\n\n\"Unless you want to come again on my cock, why don't you taste yourself. I'm sure you suck Joseph's cock after you two fuck.\"\n\n\"Of course, I do.\"\n\n\"Have you sucked it after he has done Susie?\""
    ],
    "authorname": "drmac100",
    "tags": [
        "lottery",
        "james",
        "dawn",
        "amy",
        "group sex",
        "samantha",
        "drama"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/life-after-the-lottery-ch-58"
}