{
    "title": "Angels and Guardians Pt. 06",
    "pages": [
        "Author's note:\n\nPart six. To understand where the characters come from, it is recommended to read the first five parts.\n\nPlease remember to vote at the end.\n\n***\n\nChapter 20\n\nAll Things Must Change\n\nAshley was watching Joe's face. His expression of concern when he left the classroom hadn't changed any, but the blood drained, making him appear as white as a sheet. She grabbed his hand.\n\n\"Joe? Did you hear me?\" Cindy asked when Joe didn't respond.\n\n\"Yeah,\" he said finally. \"Where?\"\n\n\"In Denver, Joe.\" The way she said this made Joe start to understand what she was calling for. He strode quickly toward the front doors with Ashley still holding his hand. \"Do you want me to send the helicopter?\"\n\nHe stopped in his tracks, and Ashley felt him squeeze her hand hard. \"Only Dad can authorize aircraft use,\" he said.\n\nCindy knew Joe was aware of the chain of authority of his parents' assets, and so only repeated the question. \"Do you want me to send it to pick you up?\"\n\nIt dawned on Joe what the question was hiding. Things are bad. He resumed his near run for the car. To Ashley, it seemed something flipped on inside Joe as he changed his demeanor. Up to now, she'd only seen him this determined just before he took over games. She heard him say ahead of her, \"No, by the time it gets up and running, I could already be halfway to the airport. I'll just drive there. What flights are available?\"\n\nCindy clicked over to her efficient business mode as well. \"Your parents flew commercial to Denver, so the jet is still here. I'll have police meet up with you on your way for an escort.\"\n\nJoe burst through the hall doors and headed directly for Ashley's car. \"Very well,\" he said. \"I'll meet you at the plane in ten minutes.\" Then he hung up the phone. As they approached the car, he used his spare set to unlock it. \"I have to go to Denver, you better stay here,\" he said to Ashley as he dumped his bag behind the driver's seat and slid in.\n\n\"I'm coming with you,\" Ashley said determinedly as she opened the passenger door and hopped in.\n\nJoe slammed the car into reverse, barely letting Ashley close her door. Then he tore off toward the airport. \"I guess you are, now. We might be gone a while.\"\n\nAshley watched Joe deftly pick through traffic, easily holding the speed over 80. \"What's going on?\" she asked nervously.\n\n\"My folks were in an accident,\" he said plainly. \n\nShe slapped her hand over her mouth. \"Are they okay?\" she asked.\n\n\"I don't think so. Cindy asked me for permission to use the helicopter. I don't have that authority to decide unless both my mom and dad are unable to give it.\"\n\nA police cruiser spotted them and spun around to pull them over. Joe didn't slow down, and apparently the call came in over the radio, because the cruiser whipped around them and started leading them to the airport.\n\nAshley started to ask, \"Are they...?\"\n\n\"I don't think so. If they were dead, Cindy wouldn't rush me.\"\n\nJoe didn't follow the screaming police vehicle to the terminal, instead, he pulled off into the driveway for general aviation. He threw the car into park and jumped out, running for the chain link gate while Ashley locked the car. She caught up to him as he started climbing the steps of a sleek business jet where a fuel truck was hooked up to one of the wings. One of the pilots said to Joe, \"we're taking on additional fuel to top up. We'll fly non-stop to Denver for you.\" Joe replied, \"thanks. When you file the flight plan, request higher speeds. Get us there as quick as you can.\" Both pilots responded, \"Yes, sir!\" Ashley followed as he turned toward the seating area. Joe sat down next to a very young woman who was waiting for him. Ashley sat in one of the seats opposite.\n\n\"You must be Ashley,\" the lady extended her hand. \"I'm Cindy, executive assistant to Mr. and Mrs. Smith.\"\n\nAshley took the petite hand and shook it slightly. \"That's correct. Pleased to meet you, Cindy,\" she responded as she appraised her. Cindy did not look much older than Ashley was. She was very attractive and her straight brown hair was pulled back and fell like a waterfall behind her shoulders. Joe would later tell Ashley that a couple of years ago, Cindy responded to his dad's ad for her current position right after her high school graduation. She interviewed well, telling his dad that she wasn't interested in college, and nothing would make her happier than help plan out some busy executive's schedule. She got hired, and for the two years since then, she had not faltered and performed exceptionally well.\n\nOne of the pilots pulled up the stairs after the last few minutes of fueling and latched the door. The engines revved up and before long, the aircraft soared on its way.\n\nOnce in the air, Cindy briefed Joe on what she knew. His dad's panic button had gone off, and the security office notified Denver police of the position. At first they didn't find anything, but then an alert officer noticed some tracks leading into a ravine that crossed under the interstate. They found the car, and the driver was already dead. His parents were taken to a hospital. \"There's something you should know, Joe,\" she added. \"They're looking into this as a homicide attempt.\" She told him that because of something discovered at the accident site, some of the security team stationed at the plant in Denver was at the hospital.\n\nCindy left them and sat a few rows back for a bit while she made some calls ahead to Denver to prepare for their arrival. Ashley was appalled. \"Who would want to kill your parents?\" she asked.\n\n\"Well, that covers a wide range. Everything from lunatics who are jealous of their money to foreign enemies.\"\n\n\"Why terrorists?\"\n\n\"Just because,\" was all he'd say, and then he stared at the floor, lost in thought.\n\nAshley got up and approached Cindy when she was between calls. \"Yes, Ashley?\"\n\n\"I was wondering if I'm allowed to use my phone on this plane.\"\n\n\"Yes, it's okay. The commercial airlines got the FAA to make that stupid rule because they wanted passengers to use the seat phones. Was there anything else?\"\n\n\"I hate to ask, in this sort of time, but is there any food for later? Our lunch period was going to be next when you called him. I'm fine, but I'm worried about Joe.\"\n\n\"Of course, dear. I had the staff stock the fridge up front with some sandwiches and drinks when I called to activate the plane.\"\n\n\"Dang, your staff is fast then, cause it only took us like seven minutes to get to the airport.\"\n\n\"That's how I work,\" Cindy joked, even though Joe's dad would often accuse her of working miracles. \"But, seriously, I had called up the jet before I called Joe, so they could get here and start getting it ready.\"\n\nAshley then asked if there was a restroom, and Cindy pointed to a door at the tail of the plane. She stepped inside, withdrew her phone from where she tucked it under the uniform skirt waistband, and placed it on the small counter. Ashley pulled down her skirt and underwear, and sat on the commode. As she relieved herself, she started typing, \"Joe's parents hurt in accident. We're flying to Denver now. Will keep you updated. Jill, please let our coaches know.\" Then she checked off her parents, Jill, Jasmine, and Kim on the send list. She hit send and her phone broadcasted the text to the five phones.\n\nJill and Jasmine met at lunch, and asked each other what was going on. In fact, everyone was asking them the same thing. All they knew was the message was sent throughout the school's PA system and now Ashley's car was missing, along with her and Joe. A rumor circulated that someone saw Joe and Ashley bolt through the front doors, got in the sports car, and Joe peeled off in a cloud of smoke. Jill thought it odd that Joe would be driving. Just before lunch was to end, her and Jasmine's phones chirped at the same time. They both read the message, and Jill grabbed her stuff and ran out the door at breakneck speed to tell Sister Kate and their coaches. Jasmine stayed and put away their garbage. She found Sally, Allison, and Marybeth with their boyfriends, gathered them into a corner and showed Ashley's message to them. They stood looking at Jasmine as if asking her for ideas on what to say. Jasmine didn't know, either, and they just stood silent in each others' company until the end of lunch period bell.\n\nJust before the end of the day, the intercom system crackled to life. Sister Kate's voice said, \"ladies and gentlemen. I wanted to put to rest some rumors that are circulating. Joe Smith's parents were seriously injured in an accident. Joe and Ashley Roberts are flying to his parents in Denver to be with them. Contrary to rumors, there is no threat to Joe nor Ashley's life. The school is also not in danger. I ask that you all join me as we pray for his parents' return to health, and our two students' safe journey. Our Father, who art in heaven...\" The school's air filled with the somber voices of students and teachers reciting The Lord's Prayer. After the prayer, Sister Kate continued by saying, \"tonight is the district championship game. Your team needs your support more now than ever, as their thoughts will be on Joe and his family. I have chartered a bus, and anyone who wants to go, can at no cost. We have contacted Bonifay and told them the circumstances. They agreed to push back the game to 8p.m. Our buses will leave the school at 5:30. Thank you.\"\n\nAllison and Sally found Jill after the final bell. They asked if she heard anything more. Jill said no, the flight from here to Denver would take about 6 hours, and the announcement for Joe was made a little over three hours ago. She promised them that she would tell them what Ashley knew after they land sometime after 6p.m. She asked if they or Marybeth wanted a ride to the game. They declined, saying that the trip to Tallahassee was a lot of fun on the bus. Jill said she doubted there would be any cheer on the team bus with their star quarterback gone in such a manner. Then she asked them who started the rumor that Joe and Ashley left suddenly because a terrorist was coming for Joe. Sally said a sophomore in her class was talking about that in her 7th period. Allison said someone was trying to start a rumor that Bill went psycho, and Joe raced Ashley out of town to hide her from him. Jill shook her head. \"Fucking teenaged imaginations,\" she muttered.\n\nAshley returned to the cabin and went directly for the galley near the front of the plane. She overheard one of the pilots talking into the radio, \"negative, Atlanta Center. Bombardier seven zero one niner requests speed four niner zero.\" She knew they were doing what they could to shave minutes off the flight. She looked in the fridge and pulled out two wrapped turkey sandwiches and two cans of soda. She went back to Joe and handed one of each to him. At first, he pushed it back to her, but she insisted, \"Joe, you gotta eat. There's nothing else you can do right now, so you might as well get some nourishment.\" He gave her a weak smile and took the sandwich and drink. By the way he was eating, Ashley doubted he even tasted it. His face was blank, staring at the wall behind her seat. Joe took small bites, and seemed to chew by means of auto pilot. Compared to how she was used to seeing Joe eat, he seemed to be only nibbling. Her heart broke for what he must be feeling.\n\nShe finished half of her sandwich and rewrapped the other half. Joe finished his drink, and she took the empty can and wrapper from him and threw them in the garbage container she saw earlier in the galley. Ashley went back, and saw that Joe had nodded off. So, she picked up the other half of her sandwich and took it to Cindy. \"I can't finish this, Cindy. Do you want it?\"\n\nCindy accepted the other half and said thank you. \"Here, sit with me for a second,\" she said. Ashley sat next to her as she busily typed on her laptop. \"Do you have your driver's license with you?\"\n\nAshley slapped her hand on the armrest as she remembered just now that she only had her phone with her. \"No, it's in my locker at school. I didn't have time...\"\n\nCindy cut her off. \"That's okay. I've worked with less.\" She changed screens on her computer and typed some more, taking a bite of her sandwich half in between strings. After a bit, she flipped her screen around and pointed the built in camera at Ashley. \"Look at the top of the screen and give me a pretty smile,\" she said.\n\nAshley did her best, and Cindy struck a key, making the computer play the sound of an old camera snapping its shutter. As she spun the screen around and started typing some more, Ashley asked what that was for.\n\n\"To add you to my Facebook album, of course!\" Cindy chided. Then after a pause she said, \"actually, it's for your secret clearance ID. You're going to need it if you want to stay with Joe in Denver. Actually, you'll need it even if you're gonna stay around me for that matter.\"\n\nAshley was really starting to like Cindy. She had a quick wit that could put you at ease even in times like this. Yet, at the same time, she was professional, knew what she was doing, and very efficient. She wished she could be more like her. \"Why would I need that to be around Joe? Or, why would I need to stay near you?\"\n\nCindy smiled, still typing away. \"Well,\" she said. \"If I don't finish this up for you, you'd have to be out of the room when Joe has meetings about his parents and our company. So, that means you'll probably want to be with me during those times. Then, there's the thing about me taking phone calls that could be sensitive, which we couldn't have you overhear. So then, you'd end up being chaperoned by an Air Force MP. I have a feeling you'd rather be able to be with one of us than the MP. MP's tend not to talk very much when on duty.\"\n\nAshley was confused and started to worry about what she was getting into with Joe. \"I don't understand. Guarded from my boyfriend by a military policeman?\"\n\n\"Probably policewoman,\" Cindy corrected. \"Men aren't allowed to go in with you to restrooms.\"\n\n\"What the hell?!\" Ashley demanded. \"Why would a guard need to be with me while I pee?\"\n\n\"I can tell you a little, just as soon as we finish this.\" Cindy flipped the screen around and closed it, transforming her laptop into a tablet. \"Just trust me. Raise your right hand. Good. Do you swear that you are Ashley Roberts, as identified by your boyfriend, Joe Smith?\"\n\n\"Yes...\" she replied, unsure of what was happening.\n\n\"Do you swear to me that any government assets that you might read, see, hear, touch, taste, or smell will be guarded inside you, never to be repeated by voice, signal, writing, or any other means that could be conveyed to enemies of The United States?\"\n\n\"I do.\"\n\n\"No matter how trivial they may seem to you?\"\n\n\"Yes.\"\n\nCindy handed her a stylus. \"Sign your full name inside the box, please.\" And she handed the tablet to Ashley.\n\nAshley signed, then asked, \"what was that about?\"\n\n\"I've been appointed as a notary for the Air Force, so that Mr. and Mrs. Smith could sign documents without having to go down to a federal building every time they entered a contract.\"\n\n\"Can you tell me what's going on, now?\"\n\nCindy told her, \"just a minute,\" and she clicked a few buttons to fax by Internet the papers she was working on to the federal office in Denver. While she waited for an email response, she said, \"I'm sure it will go through, but all I can tell you until it does is that Carter Electronics is a contractor for the Air Force. Once I get emailed that you're approved, I can tell you a little more.\" She could tell Ashley's wheels were spinning. \"Oh, don't worry, we don't assemble atom bombs or anything silly like that.\" Then she continued just to mess with Ashley's head a little, \"we just make the chips telling the bombs where to go.\"\n\nAshley snapped her head around to Cindy. \"What?!\"\n\nCindy patted Ashley's bare knee. \"I'm kidding!\" When she saw Ashley settle a bit, she added, \"we actually do make the bombs themselves.\"\n\nAshley looked at her, about to be shocked again, but caught her own gullibility. \"You're funny,\" she said. \"But, please don't do that again.\"\n\n\"I'm trying to prep you so you won't be shocked when we land in Denver, sweetie.\"\n\n\"But don't clearance passes take time? Like weeks, to get?\"\n\n\"I started on yours about a week and a half ago, when Joe's parents found it getting harder to talk to him without you around. Yesterday, I received the last of your references from teachers and your principal back in California.\" Just then, an email popped up and Cindy opened it to read.\n\nAshley asked, \"why did they request I get a clearance? I mean, before I met Joe, he was going out with Kim. And Jill was before her?\"\n\n\"I've gotten clearances for both of them. Jasmine holds one as well because she was always near Jill. Joe dated the others in your group at some point or another, but they never got past the occasional fling, so we didn't need to get them one.\"\n\n\"But Jill and Jasmine never mentioned anything about clearance, nor about the company...\"\n\n\"Keep that in mind when you might be tempted to let something slip,\" Cindy warned. \"They approved you, and they'll get the badge to us at the airport.\"\n\n\"So...\" Ashley tried to lead Cindy on.\n\nCindy finished the last two bites of the sandwich. \"Okay, remember your oath,\" she began. She went on to tell Ashley a bit about the history of Carter Electronics. She explained how Joe's dad did a little program for the Air Force that helped spawn the development of their UAV's, or Unmanned Aerial Vehicles. The Air Force knew they could pilot the drones remotely, but didn't want to risk having the aircraft crash into an innocent population if the remote pilot got discovered and killed, or if the remote signal got jammed. Joe's dad came up with a chip that would fly the drone automatically in a random pattern near where it lost it's signal. If it ran low on fuel, it was programmed to return to the point it was launched and attempt a safe landing. With those safeguards in place, the military was more confident investing in building the weapon. He came up with a few more ideas, and soon the military considered Joe's father a national security asset. \"I told you that story to tell you this,\" Cindy said. \"This meeting in Denver is big. Most of the details are top secret, even over my clearance. But, it involved Mr. Smith pitching a new encryption system to all branches of the military. Our security office wanted to shadow Mr. Smith throughout the trip, but he declined, thinking it would be better to move around anonymously. He also thought any threat to him or his family was perceived and imagined by security members trained to be paranoid. But now, I think he was mistaken...\" Her voice cracked during the next part, \"God, I hope they're okay.\"\n\nAshley listened intently, and when Cindy's voice cracked, it suddenly dawned on her that Cindy would be affected by worry almost as much as Joe, as she spent a lot of time working with his parents. Ashley leaned over and instinctively hugged Cindy. \"I know,\" she said. \"Me too.\"\n\nA couple of hours later, Ashley was napping next to Joe, resting her head on his shoulder. The co-pilot gently shook Joe's opposite shoulder, waking the couple. \"We're descending into Denver now, Mr. Smith. I'm sorry we couldn't do better.\" Joe thanked him, saying he was sure they did what they could. Ashley looked out the window as they fell through the cloud banks. \"Oh man, I don't even have a sweater,\" she said to Joe as she saw the white ground far below through the openings between clouds.\n\nAs if she read her mind, Cindy came up to sit with them for the landing. She said, \"One of the things I requested when I called ahead was that coats be bought and waiting for you two in the car when we land. It'll be a very short trip from the plane's steps to the car, so it shouldn't be too bad.\" Ashley thanked her and looked at Joe. ",
        "\"She's awesome,\" Joe confirmed, reading her look.\n\nThe plane landed and taxied to the aircraft parking apron. It pulled up to a small motorcade consisting of a limousine and three police cars. Joe and Ashley thanked the pilots as they opened the door and lowered the steps. They hurried to the limo waiting for them, mere feet away. Cindy stopped to retrieve her coat and bag from the suit closet, and handed the pilots an envelope containing vouchers for their hotel and restaurants. \"I'll keep in touch. Anything else you need while you wait for our return flight, use the company card in that envelope wisely.\" \n\nThey answered, \"yes ma'am,\" and set about securing the aircraft after she disappeared inside the limo. \n\nThe coats were laying on the seat as promised, and Joe popped the tags off, handing the smaller one to Ashley. The driver handed Cindy an envelope, which she opened and assembled the badge to the lanyard, then handed it to Ashley. \"Some of the security teams might know about your relationship with Joe, but most won't. Your necklace is enough ID for our people, but means nothing to the military. Wearing that badge will make your life a bit easier following him around.\" \n\nThe police vehicles rushed their escort to the hospital, taking turns to race ahead and block intersections. The three were silent during the ride there, and Ashley sent a text to her same group, \"We've landed. I'll know more in a little bit.\"\n\nJill and Jasmine were eating at a popular fast food place near the school, killing time until the convoy was due to leave for the game. Their phones beeped, and Jill said after reading the message, \"DAMN, his pilots are good. It's only 4:30.\" Jasmine nodded as Jill's phone started ringing. \"Hey Kim,\" she answered sadly.\n\n\"What the hell is going on? I just turned on my phone to check messages, and I've got two from Ashley that has me really worried. I tried calling, but her phone is turned off.\"\n\nJill answered, \"I know. She and Joe left so suddenly, she doesn't have her charger with her. She's probably trying to save juice.\"\n\n\"Okay, so what happened? I can't talk long, our game here starts in 30.\"\n\nJill told her about the PA announcement, then Ashley's first text after rumors started flying about how she and Joe left the school.\n\n\"What time did they leave?\"\n\n\"As far as I could guess, about 11:30 this morning.\"\n\nKim was shocked. \"Holy crap they got there fast. Joe took me once to see the plant, and it took their jet 6 hours, plus a refueling stop.\"\n\nJill answered, \"yeah, I've been there, too. They must have crammed the plane with gas until it started leaking from the seams. I think they went nonstop.\"\n\n\"Well, what does Ashley have with her? Does she have a coat? We're playing in a snow storm tonight.\"\n\nJill got more than a little concerned. She hadn't thought about that. \"Nothing, I think. I mean we are all wearing our cheer stuff. I got her wallet and keys from her locker after school for safe keeping. I think she's just got her uniform, and that phone she keeps tucked under her waistband. Oh, and she has Joe.\"\n\n\"He'll take care of her, I'm sure.\"\n\n\"Yeah, he would, but he's never had to deal with anything like this before.\"\n\n\"True. Well, good luck in your game. We're going to lose, again I think.\"\n\n\"We'll need the luck without Joe. Thanks. I'll talk to you soon.\" Jill hung up the phone, and said to Jasmine, \"Kim says it's snowing where she is.\"\n\nJasmine replied, \"yeah, I remember something about a cold snap up there.\"\n\nJill looked at her up and down to make her point. \"Look how we're dressed.\"\n\nA light went on in Jasmine's head. \"Oh. I see.\" She thought about her friend for a minute, then said, \"Well, I'm sure Cindy is with them.\"\n\n\"Oh yeah! I forgot about her. I hope she is, that would make me feel better.\"\n\nThe limousine stopped at the front entrance of the hospital, greeted by a horde of reporters and cameras. The group got out and was ushered inside by four large police officers. The mob was held outside, fearful to cross the line of six armed military guards. Once inside, Ashley asked Joe, \"Why would they have your parents at a military hospital?\"\n\n\"It's not,\" he answered, hurrying behind a hospital security guard who was leading them through the hallway.\n\nIn the elevator, Cindy told Ashley that the extra guards were called in to protect Joe's parents from another attempt. Ashley said she thought the company's security team was supposed to be there, but she didn't see them. \"You're not supposed to,\" Cindy answered. \"That's how they work. Remember what I told you on the plane about being shocked? It's easier to just accept it and move on as if the distractions aren't there.\"\n\nAshley vowed to herself not to ask Joe any more questions for a while. She knew he would be too distracted to entertain her curiosities.\n\nThey were lead into a waiting room outside the critical care unit located next to the rooftop helicopter pad. A few minutes passed before a doctor appeared through a door marked \"conference room.\" He addressed Joe, \"Mr. Smith? If you could step in here for a minute.\" Ashley stood with Joe. The doctor asked her, \"are you family?\" \n\nShe croaked, \"I'm his girlfriend...\" \n\nThe doctor answered, \"works for me, if Mr. Smith is okay with it.\" Joe nodded. \"Alright, then, come on in. You don't want to miss the show.\" \n\nOnce alone, Cindy started crying softly, as she guessed why the couple was lead into the conference room instead of the patient rooms through the other door.\n\nThe doctor shut the door behind him and started saying, \"Mr. Smith...\" \n\n\"Please call me Joe. This is Ashley.\" \n\nThe doctor continued, \"Very well, Joe, Ashley. Nice to meet you, though I wish it were under better circumstances.\" Joe sat quiet at the table opposite the doctor. Ashley remained standing behind Joe, rubbing his shoulders and neck softly as they listened. The doctor methodically recounted how Joe's parents were brought to the hospital via two helicopters, what injuries they had, and the process of treating them. He explained how both entered emergency surgery for treatment and had survived the operations. Joe was wishing against hope that the next part would be how the hospital planned to continue their recovery. But, the next statement crushed those wishes. \"The surgeries were successful in repairing most of the damage, however, an hour later, the blood loss was too much to overcome. Mr. Smith unfortunately passed away from complications stemming from oxygen starvation in the brain. Mrs. Smith followed twenty minutes later. Please be assured that we did everything possible. Had they survived, they would have had a very difficult life, as their brains were permanently damaged from not getting enough blood. I was told that their car was in a difficult area to reach, and that your dad was unconscious for a while before he came to briefly and was able to press his button. Aside from that brief moment, I do not believe your parents were awake enough to feel any pain. They passed very quietly. I am very sorry for your loss.\" Joe thanked the doctor for his part in their efforts, and asked if it were possible to see his parents. \"Of course. Take as long as you need. When you're ready, just step through this door, and I'll take you to them.\" He stepped out and left them alone.\n\nAshley had tears streaming down her face, and she squeezed her arms around Joe's chest, planting kisses on the back of his head. \"I'm so sorry, Joe. I just don't know what else to say,\" she comforted, squeezing him tighter.\n\nHe turned to her and said, \"I know, sweetie. I'm sorry, too. I know you loved them as well.\"\n\nShe sat in his lap and wrapped him in a tight hug, seemingly trying to bring his whole body inside of hers. After a bit, he picked her up by her ribs and set her standing on the floor next to him. He sniffed once, and rubbed the mist from his eyes. It was the closest she'd seen him get to crying.\n\nJoe told her, \"I'd like to do this alone, if you don't mind.\"\n\n\"Of course, whatever you need, Joe,\" she answered.\n\n\"Thank you. Would you mind telling Cindy? That way she can start the ball rolling.\"\n\nAshley nodded as he stood up. She hugged him again and planted a very soft kiss at his throat. \"I'll be right out here, if you need me.\" He nodded and stepped through the door at the other end of the room.\n\nCindy started sobbing, knowing her fears were confirmed when she saw Ashley's face as she returned to the waiting room. Ashley sat next to her and gathered Cindy into her arms. \"They're gone,\" she said softly.\n\n\"Yeah, I guessed,\" Cindy said through sobs. \"What happened?\"\n\nAshley held Cindy's head against her shoulder, softly stroking her hair as she related what the doctor had told them. She tightened her hug when Cindy broke into fresh sobs at the mention of the doctor's attempt at reassuring Joe that they didn't suffer. She sat silent after finishing, letting Cindy cry against her for several long moments. \"Joe still needs you,\" she said finally.\n\n\"Where is he?\"\n\n\"He asked to see them to say goodbye. I'm sure they have some papers for him to sign, as well.\"\n\nCindy slowly regained her composure, and backed off from Ashley's embrace. \"Thanks for letting me...\" she started.\n\n\"Shh, it'll be our secret,\" Ashley answered, wiping tears from Cindy's face. \"Joe wanted me to ask you to start the ball rolling?\"\n\nCindy clicked back over to work mode the best she could. \"Yes, of course.\" She plucked her phone from the inside jacket pocket, and started dialing. Ashley used the moment to fire up her own phone to give the bad news.\n\nJill and Jasmine were milling around the growing band of students who wanted to make the trip to the away game. A tour bus arrived, and it became very apparent quickly that a second one would be needed. The school called to hire another bus and it arrived a short time later. It was about 15 minutes before their departure time when the two cheerleaders' phones beeped. Scores of students gathered around, hoping for an update. Jill stared at her screen for several seconds, trying to will the words into changing to something else.\n\n\"I am sad to tell you all that they didn't make it. We got here fast, but they passed an hour before. Joe is saying goodbye now.\"\n\nA second beep was heard, and Ashley's message continued.\n\n\"Joe appears well, but I can tell he is hurt. Keep him in your prayers. Cindy is scheduling a news conference for 6:30, Denver time. 7:30, yours.\"\n\nA short time later, another beep.\n\n\"My phone keeps dying, Cindy is gonna give me a cord to recharge. I'll stream the news conference to you. She also set up a conference call for us that will start at 9, your time. Dial 888-222-5555, passcode 8524. I hope Coach will excuse you at that time to call in. Love Ash.\"\n\n\"Is that about Joe?\" one of the students asked. The coaches and principal stepped closer.\n\nJill said quietly, \"Yeah...His parents didn't make it.\" With that, her and Jasmine's eyes started shedding tears. Sister Kate gathered the two into her arms, trying her best to comfort them. The crowd of students fell silent, and sporadic sniffles could be heard.\n\nCindy arranged a conference room with the hospital administrator, and was busily setting hospital scratch pads and pencils at the seats. Joe sat at an end of the long table, quiet in his thoughts, while Ashley plugged her phone into the wall and set it on the floor as close to the baseboard as she could. She sat next to Joe and said, \"hey, next design, maybe you could work in a pull-out plug.\"\n\nHe appreciated her attempt to keep him out of depression. He snorted in a shallow laugh, all that he could manage at the moment. \"I was just thinking that as I saw you fiddle with that thing.\"\n\nThe first group Cindy arranged for Joe to meet were the first responders and the investigative unit. They filed in and took seats around the table. The police chief introduced Joe to the emergency and law enforcement workers. \"Thanks for coming,\" said Joe. \"I apologize for not standing, I'm still in a bit of shock.\"\n\nThe chief replied, \"not necessary. We understand, as Cindy told us of your loss. We are very sorry.\"\n\nJoe nodded and continued, \"Let's start at the beginning, when you received our security office's call...\"\n\nAshley was amazed at how Joe sat patiently, listening to the various accounts about what the crews found and what they did to retrieve his parents from the shallow ravine. His ability to lead such a grim meeting about his own parents' demise was nearly beyond her comprehension. Joe asked thoughtful and intelligent questions to get the most out of the information that was available. Toward the end of the fifteen minute meeting, Joe asked why the accident was being considered a homicide. He was told that a half mile up from the accident was a car whose paint matched scuff marks on the one his parents were in. The engine was still warm, and it was abandoned. Joe thanked each one for their part in assisting his parents.\n\nThe next meeting followed immediately after, and high level managers from his parents' company filed in and took their seats. A few seemed to scoff at the teenagers dressed in a football jersey and a cheerleader uniform at the head of the table. Ashley hated them immediately. Apparently, so did Joe, as he wasted no time in getting to the heart of the matter. Once all were seated, he asked, \"who here thinks I should sell the company to Greedy?\" The three who scoffed earlier showed their hands. Joe said, \"keep those hands up. Who isn't sure, but thinks we should look into it?\" Four more raised their hands. Joe was surprised that one of his dad's closest friends was one of them. No wonder talks weren't going well. \"Very well. Cindy, put their final check in the raised hands. Bob, too. You're all fired, effective immediately. Security at the home office will have your personal effects ready in the lobby for your pickup on Monday.\" Several stood menacingly, but two huge men in suits stepped into the room, making them change their mind. As Cindy made out the checks and started handing them out, Joe said, \"you'll have no problem finding a job over at Greedy, I'm sure. You have wanted to go there anyway, I'm just letting you.\"\n\nAfter they got their check and left, escorted by the brutes loyal to him, Joe looked at the remaining five managers and said, \"this is going to be tough as it is. I don't want them undermining my efforts to keep your company strong.\"\n\nOne of the remaining asked, \"our company? It's your company, now.\"\n\nJoe explained how he never wanted to take over for his parents. He told them that in the best interest for those who were loyal to his folks, he planned to issue an IPO at the beginning of the year. So, since they would have an opportunity to purchase shares, it would be their company. It was argued that all Greedy would have to do is buy as little as 40% of the stock in order to control the company. \"Not if I'm still holding 51% of the shares,\" Joe countered. \n\nCindy came over and told him that there was 20 minutes until the press conference. \"Should I handle it?\" she asked. \n\nJoe told her no. He promised he would meet with the managers soon after the funeral, then asked for a quick brief on where his parents left off in talks with the military. Then he dismissed that meeting.\n\nSeveral military men of various uniforms walked into the conference room. Ashley saw that many had stars on their collars. They started to grab the chairs when Joe stopped them. \"No, don't sit. This will only be a moment.\" When everybody was inside and the door closed, he said, \"My parents are dead, however, I still have a strong team working for me. Will you continue your business with our company?\" They looked around the room, as if trying to find someone who had an easy way to say no. Joe continued, \"we will finish your current orders in the timetable already set. You have a contract with us that says you will purchase what you've ordered. My question is, do you want the encryption technology or not?\"\n\nOne of the generals spoke, \"frankly, son, our faith resided in your father. As tragic as your parents' departure may be, I must be honest in telling you that not even he could confidently answer our questions. What makes you think we'd listen to you?\"\n\nJoe looked at Cindy, and she took the cue and tapped Ashley on the shoulder, telling her to come with her. \"Ten minutes,\" she reminded Joe as she and Ashley walked out the door.\n\nJoe looked the general in the eye and said, \"don't call me son. The only two people who could call me that are gone, now. I thought you'd want to listen to me, as I'm the one who came up with it.\"\n\nThe general laughed, \"'it' and 'device' he says! You don't even know what your parents were pitching!\"\n\nJoe cocked his head to the side and said, \"very well, maybe Fox News would like to do a story on how an unbreakable encryption system that is undetectable, because it sounds like birds chirping and singing to all other radios and microphones, wound up being passed over by our military and sold to Japan, or France, maybe?\"\n\nThe jab hit its mark, as the officers turned to face Joe squarely. \"How do you know that?\" the general asked.\n\n\"I told you.\"\n\n\"Yeah, but you don't know how it works.\"\n\n\"Well, I understand that unless you have a device that looks for the code, you'll never see what's hidden in the carrier frequency wa...oh wait. You haven't bought it from me, yet, so I can't tell you. You see, General, my parents may be dead, but their ideas you've had wet dreams over for the last five years didn't come solely from them. They had more than a few, sure. But the rest came from either myself or the team that works for me now. So, I'm asking the question again, will you continue your business with our company?\"\n\nThe General looked sourly at Joe, not expecting such a hard-nosed negotiation from someone so young. \"We'll be in touch with Cindy after the funeral,\" he said, leading the other officers out of the room. Joe exhaled sharply, knowing he had just won a high-stakes gamble in a bid to save the company. He got up from his chair as Ashley and Cindy reentered the room.\n\nCindy led them down to the hospital lobby, where a podium with a solid bank of microphones and mini voice recorders were set up. She helped Ashley set her phone up to broadcast streaming video, and before long, her phone screen confirmed connection with the other five.\n\nJill and Jasmine's phones sounded a tone, asking if its owner wanted to receive a video from Ashley. They had just finished warm-ups, and Jill called to her coach, \"it's starting!\" She and Jasmine hit their accept buttons, and their schoolmates huddled around each girls' phone.\n\nThe screen streaked around as Ashley fiddled with her phone. \"Wow, that's cool,\" she was heard telling Cindy quietly. The view settled onto the podium, briefly obstructed as Joe walked in front of her to take his place. It was an odd sight. From Ashley's angle, you could see reporters and hospital officials in nice suits, and then there was Joe, addressing them in his jersey and faded blue jeans.\n\n\"Good evening. I apologize for my attire, I was called away suddenly from Florida, and haven't had a chance to change. It is my sad duty to inform you that the world has lost two beautiful and intelligent people who were my parents. At around nine this morning, they were on their way to a meeting when their car slid off the interstate and into a small ravine. At nine thirty, my dad was able to activate an emergency response button he carried with him, but fell out of consciousness shortly after. Carter Electronics received the signal and notified Denver police. Their car was not located right away, due to fresh snowfall covering most of their tracks. After several minutes of looking, Officer Ken Berg noticed an impression in the snow that led him to discovering my parents' car. Rescue teams worked to retrieve the car, and flew them to this hospital at 10 a.m. I was notified of the accident while at school by my parents' secretary at 11:30, Florida time, or 10:30 here. My girlfriend, Ashley, and I flew here and landed at 3:30. However, despite heroic attempts by the staff of this hospital, they had succumbed to their injuries an hour earlier.",
        "\"The reason for this conference is to put aside any fears relating to my family's company. We employ over 250,000 people. Many of the talented groups have been to my house and were recruited personally by my parents. To those employees, I assure you that your livelihood is safe. Any change in job status has already been made. To allow a grieving period for all you loyal employees who cared deeply enough to stay with my family's company, I am ordering all non-critical personnel to take the days off from now through midnight Wednesday morning.\n\n\"To our clients, our company will change eventually, but know that your orders will be completed on time, and that we still have the best people working on your projects. Yes, including the special ones.\n\n\"I'd like to thank my parents' secretary, Cindy for her dedicated two years serving my folks. She's been a Godsend on this horrible trip, and I hope she will agree to continue her role with me.\n\n\"To my friends in Florida, who are playing for the district title tonight, GO SPARTANS! I am sorry that I could not be there tonight, but I know you'll succeed if you do your best. Know that Ashley is here safe with me, and I'm not sure I'd be sane right now without her comfort and support.\n\n\"I'll take a few questions, if there are any.\"\n\n\"Will you sell the company to Greedy?\"\n\n\"No.\"\n\nThere was sporadic chuckles as the media was expecting a longer answer.\n\n\"Will you elaborate?\"\n\n\"No need to. Next?\"\n\n\"You mentioned that Carter may change eventually, what does that mean?\"\n\n\"Well, I'm sure you don't wear that suit to bed, or even put the same one on every day. Everything changes at some point. I'm working with the senior management team to make things run smoothly while I finish my high school career, and head to college.\"\n\n\"So, you're still planning to go to Florida State?\"\n\n\"I wasn't aware that information was public yet, but yes.\"\n\n\"Aren't you afraid that clients, and specifically the military, would be skittish to deal with an owner who may be stretched too thin?\"\n\n\"I've received a renewed commitment from the military this afternoon.\"\n\n\"There are reports that this was a homicide?\"\n\n\"The accident is under investigation, as I am sure all fatal crashes are. I'd like to add that my heart and condolences go out to the family of James Birch, the driver of the car. If there is anything I can do to help ease your suffering, please call our office. Thank you all for your concern. Good Night.\"\n\nWith that, he walked back toward the screen. The scene blurred around and Ashley's face appeared, sad and tired. \"I hope you all got to see that.\" She bobbed a bit when a blast of cold night air breezed in from the main doors opening. \"It's freakin' cold here. Good luck on the game. I'll talk to y'all later, at 9, I hope. Love yas!\" She blew a kiss, and the screen blurred as they heard her say, \"how you turn it off?\" Then it went blank. Some of those around the girls chuckled at Ashley's ignorance on how to end the transmission, but they were weak.\n\nJill could hardly see, her eyes were tearing up so bad. Jasmine came up to her and said, \"I saw her wearing a coat. Someone is looking out for her.\" \n\nJill grabbed her in a hug and started sobbing, \"I feel so bad for them! To rush all the way up there, only to find out they still didn't make it in time.\"\n\nJasmine said to her, \"Joe's still with it, that's a good sign.\"\n\n\"Yeah, but for how long? He's running on adrenaline, did you see his eyes?\" Jill sniffed.\n\nJasmine broke down, sobbing while she said, \"of course I did. I was trying to make you feel better, you idiot.\"\n\nJill hugged her friend tighter. \"I know, sweetheart. I know. It's just that I feel so bad for him. He's so sweet, he even gave the driver's family his sympathy, yet the reporters were questioning whether he could run the company. The whole thing just sucks.\"\n\nTheir coaches started working to get the teams in place for the beginning of the game. Bonifay's PA system called for a moment of silence, honoring the memory of Joe's parents. After the coin toss, Coach Mike pleaded with his team to play for Joe. It roused them, but towards the end of the half, their hearts just weren't in the game.\n\nChapter 21\n\nDetails, Details\n\nCindy noticed Ashley stamping her feet in the cool lobby, even though she was still wearing the coat. \"Ashley, why don't you come with me to the hotel? I've got some things in my bag that could fit you.\"\n\n\"Thanks, Cindy, but I can get my own.\" She paused. \"Wait, damnit. My wallet is still in my locker. Oh man!\"\n\nJoe said, \"Cindy, if you could get us a ride to the nearest mall, I'll get some things for Ashley and me. You can go ahead to the hotel.\"\n\nCindy said okay and gave Joe the hotel information. \"Just check in at the desk, and they'll give you the keys. My room is next to yours, if you need anything.\" She reached into her briefcase pocket and pulled out a battery. \"Ashley give me your phone.\" She did and Cindy swapped out the battery pack. She reached in and handed Joe one as well, which he swapped quickly and handed her the spent one. \"I'll throw these on the charger in my room. Take care, and I'll talk to you soon for the conference call.\"\n\nJoe and Ashley went outside to find the limo waiting for them, already warmed up. Joe asked the driver to take them to the mall nearest their hotel, and they rode off. As Joe sat next to Ashley, he could feel the chill of her legs through his jeans. He picked one of her legs up and swung it over his lap, starting to rub it briskly. He barely noticed that his maneuver had opened up her panties to his view.\n\n\"Your legs are so cold,\" he said, rubbing it furiously.\n\n\"Yes, but you don't have to worry about that.\" She closed her eyes. \"Although your hands feel marvelously hot.\"\n\nHe grabbed her other leg and brought it next to her previous one, and he started rubbing both. \"Well, thanks for coming with me. I hope you don't get in trouble for leaving class like that. I meant what I said to the reporters. I'd have gone berserk if you weren't with me.\"\n\nAshley laid back, allowing herself to be warmed by Joe's rubbing. \"I would be beside myself if I hadn't come. It's the least I could do, and I'll pay you back for my things.\"\n\n\"Meh, don't worry about that.\"\n\n\"Joe, how did you know you could thunder away like that to the general?\"\n\nJoe looked at her in surprise. \"What were you able to hear through the door?\"\n\nShe propped her head up with her arms. \"Nothing, just your voice got loud. I couldn't make out what you were saying, but he didn't look happy when he left.\"\n\nJoe said quietly, \"he started it by calling me son. I gambled that dressing him down in front of his peers would make him listen. It did, because he said he would talk with Cindy to set something up after the funeral.\"\n\nShe sat up as they pulled into a large mall parking lot, leaned over, and kissed Joe sweetly. \"You're amazing,\" she said.\n\n\"As are you,\" he returned.\n\nThe driver pulled up to the main entrance and handed back a business card to Joe. \"When you're ready, just give me a call, and I'll meet you right here.\" Joe thanked him, and they got out. They crunched gingerly through the snow to the front door, taking care not to slip.\n\nAshley received several odd looks as she stood there just inside the entrance, teeth chattering audibly. Her hair was still tied in a pony tail with a green and gold ribbon, her new coat covered her top and would-be exposed stomach, but her flat-front cheer skirt looked impossibly short for the weather outside, given her bare legs, and shoes covered in melting snow. \"You fucking come straight from Florida to this and see how you look,\" she muttered under her shaking breath.\n\nJoe asked her, \"are you okay?\"\n\nShe looked at him, lips shivering, \"do I look okay? I just peed myself a little, I'm so cold.\" His eyes shot down to her legs. \"No, not that bad. I'm trying not to be a wuss, but I can't help it. I'm shaking so bad, I went just a little. Let's find something quick before it gets worse.\"\n\nHe suggested they go to a department store, as they might find everything they need in one stop. She agreed, and they headed in the direction that the directory pointed them to. Ashley ducked off into a hallway advertising restrooms, and rejoined Joe. \"Much better, but I think they were colder than outside,\" she quipped. \"I thought my butt was going to freeze to the seat.\" She was happy that Joe gave a little laugh.\n\nInside the department store, they decided it would be quicker to split up and shop. Ashley headed to the petites section and started looking around. She grabbed a pair of cute jeans and a Broncos sweatshirt, when she noticed the department manager eyeing her closely. She marched up to the woman and said, \"excuse me, I just flew here from Florida on emergency. Do you think I could change into these and hand you the tags while I shop some more? My boyfriend will pay for them shortly...\"\n\nThe woman got a look of realization and said, \"the news was talking about a football player losing his parents. Was that y'all?\" Ashley nodded. \"Oh, I'm very sorry for your loss. Sure, I'll help you with whatever you need.\"\n\nAshley gave her a look of relief. She grabbed a pair of underwear and headed back to the manager, plucked off the tags on what she got so far and handed them to her. \"Could I also get maybe a plastic shopping bag? I'd like to put what I got on in it.\" \n\n\"Oh you poor dear. Certainly. Here's your bag, and the dressing rooms are right here.\"\n\nAshley thanked her and went in. She came back out looking refreshed in her warmer clothes. \"Oh, thanks a million. I feel so much better!\" she said to the woman. The manager shrugged it off and set about helping Ashley pick out clothing she'd need the next couple of days before heading back to Florida. She even thought of something Ashley didn't, her shoes.\n\n\"Those won't do in this snow. They're designed for tumbling on a non-slip gym floor. Out there, they're good for nothing but you ending up on your hind end.\" She helped Ashley pick through some pairs, and Ashley settled on some hiking boots that looked cute on her, and a pair of flats that had flexible rubber soles. She put on the warm, comfortable boots, swapping them for her cheer shoes in the box. About that time, Joe came over, wearing his same jeans, but subbed the jersey for a flannel shirt that looked handsome on him. Oddly, he was empty handed.\n\n\"You look great,\" he said. \"I really like your shoes and jeans.\"\n\nShe bounced up to him, giving him a kiss. \"Thanks, honey,\" she said. \"Thanks to Ms. Wright here, I feel much better.\"\n\nHer playful approach to Joe amused the manager. \"This must be your boyfriend. I am very sorry to hear of your loss.\"\n\n\"Thanks, I appreciate that. How much damage did she do?\"\n\n\"Not bad. Actually, under the circumstances, I'll give you half off.\"\n\n\"That's not necessary...\" he started.\n\n\"No, it is. I wasn't particularly friendly when this poor dear came up, and I want to make it up to her.\" With that, she rang the purchases up and told him the total was $158.\n\nJoe paused, and Ashley thought he was thinking it was too much. \"Oh, I'm sorry. I said I'll pay you back when we get home...\"\n\n\"No, that's not it. It's too little. You have like six outfits here, and two pairs of nice shoes. Plus all that ladies' underwear costs a bit, doesn't it? It should be way more.\"\n\nAshley said, \"It's only three bras and six panties.\"\n\nThe manager offered, \"well, two of the outfits were on clearance, and the shoes and her underwear were on sale, plus my discount.\"\n\nJoe looked at Ashley. \"You sure you don't need more? Look, it all fits in two bags.\"\n\n\"Well, I don't know. How long are we staying? It doesn't matter to me, I'll stay with you until you're done, but I was thinking we might be heading back on Tuesday. Just tell me, and I can plan what I need better.\"\n\nMs. Wright tried to help. \"You could start with this and if you need more, you can come back. I'll fix you up.\"\n\nAshley said, \"yeah, I would, but my wallet is still in my locker. In Florida.\"\n\nJoe looked like he made up his mind. \"No, this is fine. I'm not trying to fight. Just trying to make sure you're comfortable.\"\n\nAshley grabbed his arm and led him a short distance away. Quietly, but firmly she said, \"Joe, I know you're trying to help. But you can't help everyone. Not all at once. If I had my debit card with me we wouldn't be having this conversation. Let's agree that on this trip, I'll be able to decide what I really need, and I'll agree you'll tell me what you need from me. Okay?\" Joe nodded and she released his arm.\n\nThey went back to the counter, and Joe handed his card to the manager. \"That will be all for this evening. Thank you.\"\n\nShe finished the transaction and went in the dressing room and retrieved Ashley's things. She handed the coat to her. \"The rest of your purchases, can I take them to package pickup for you? You can shop around the mall unencumbered and have your taxi pick you up there.\"\n\nJoe dialed a number on his phone and smiled at her. \"That won't be necessary, but thank you.\"\n\nHis phone's speaker crackled, \"Yes, Mr. Smith?\"\n\n\"Yeah, could you come over here and take our stuff to our driver?\"\n\n\"Certainly, sir.\"\n\nAshley looked at Joe, not understanding. In a few seconds, a large man in a suit came over and collected Ashley's purchases, along with her makeshift laundry bag. \"I'll put them with the others and load them in the car for you, Mr. Smith.\"\n\n\"Thank you.\" He looked at the dumbfounded manager. \"If I'm gonna have security agents follow me around, they might as well be put to good use, right?\" He winked at her as he led Ashley downstairs and into the mall.\n\n\"We're being tailed?\" she asked.\n\n\"Yes. When we split up, an Air Force officer in plain clothes was keeping an eye on you.\"\n\n\"Well, I don't know how to feel about that, Joe. Better that I'm safe, or worse because I know we might have someone after us.\"\n\nJoe sighed and said, \"let's go eat.\" He led them to where he remembered the directory said the food court was.\n\nAshley started to feel more comfortable now, being dressed in warmer clothing, and no one stared at her, aside from the occasional roaming male eyes she was used to. She pulled her phone out of her coat pocket and turned it on. She was relieved that her friends and family got the hint, as there were no messages and no more missed calls. Ashley glanced behind her and in the packed Friday night mall, made eye contact with a female in a sweater and jeans. She had seen her before outside the restroom, then again in the department store, and knew immediately it was her shadow. Cindy's words earlier about being shocked came back to her, and she pushed the knowledge she was being followed to the side. Cindy was right, it is easier to just go with it.\n\nThey found a sit down restaurant at the far end of the food court and went inside. Her and Joe's shadows took up a table together, two over from theirs. \"Jesus, do they have to be everywhere we are?\" she asked.\n\nHe said, \"yes. But I don't think we're in any real danger.\"\n\n\"What makes you think that?\"\n\n\"Well, I think that second car they found will turn out to be just a stalled vehicle, and my parents' driver accidentally clipped it in the snow. You saw how slick it was, just walking in from the limo.\"\n\n\"I hope you're right.\" She grabbed his hand. \"How are you doing? With...all this?\"\n\nHe squeezed it and said, \"I really don't know. Part of me feels like we'll get back home, and they'll be there. Yet, I know I saw them in the hospital, and their skin was cold when I kissed their foreheads. I'm just gonna take things as they come, like this afternoon.\"\n\nThe waiter came, and they placed their orders. After he left and went to their shadows' table, she thought of something. \"Do you think those guys you fired will contest the termination, and say it was because of your grief? Or would they come after us?\"\n\nJoe shrugged. \"Either way, my decision is final. It was something my parents should have done a while ago. I was surprised that Bob was one of the one's against us. I had planned on making him CEO when I take Carter public.\"\n\n\"Who's it going to be now?\"\n\n\"Not sure. Maybe Ben, but definitely one of the five you saw today. Whoever it is, I'm naming the other four to the board of directors. They're good guys.\"\n\nTheir meals came, and they chitchatted about random things. Joe talked easily, now, but Ashley could tell that today's events weighed heavier on him than he tried to let on. When they finished their dinner, the waiter cleared their plates and they sipped on the refilled sodas. Ashley's phone rang, and she fished it out of her coat pocket.\n\n\"Hi Cindy.\"\n\n\"Hey. Y'all ready for your conference call?\"\n\n\"Hey Joe, turn on your phone. It's time. Yes, we're ready.\"\n\n\"Okay. You've got the number?\"\n\n\"Yes. I'll give it to Joe, so he can call in on his phone, too.\"\n\n\"Perfect. I'll hang up now and call in in a few seconds to start the meeting, so y'all can chat freely without hearing that recording every 15 seconds.\"\n\n\"Thanks, Cindy.\"\n\nAshley hung up and she and Joe dialed the number and the code. They were greeted with a recording, \"The moderator has not yet started this meeting. Please wait a few more moments.\" As they held the line, a few two-toned beeps signaled that people were signing in. The recorded phrase repeated, and after it finished, someone said, \"hello?\"\n\nAshley replied, \"hey Kim. Cindy's coming on in a second to get rid of the recording.\"\n\n\"Okay. You sound tired, are you okay?\"\n\n\"Yeah, thanks. Joe just got us some warmer stuff, so I'm better now. How do you take the cold in Minneapolis?\"\n\nKim said, \"well, tonight definitely was not fun. It started snowing hard in the second quarter. Didn't let up the rest of the game.\"\n\nThrough the exchange, the line beeped several times as more joined the call. A recording played just as Kim finished her thought. \"The moderator for this call has started the meeting. Thank you for using AT&T Business Services.\"\n\nCindy's voice came over, \"good evening everyone. Before y'all start, I'd like to do a voice check to make sure everyone can hear each other. Joe?\"\n\n\"Here.\"\n\n\"Ashley?\" \n\n\"Here\" \n\n\"Mr. Roberts?\" \n\n\"Present\" \n\n\"Mrs. Roberts?\" \n\n\"I'm here\" \n\n\"Jasmine.\" \n\n\"Hey Cindy!\" \n\n\"Hi sweetheart. Jill?\" \n\n\"Hey Cindy.\" \n\n\"Hello, darlin'. Kim?\" \n\n\"I missed you Cindy.\" \n\n\"You as well, dear. I was given a list for seven, but there's eight participants. Who else is on the line?\" \n\n\"This is Sister Kate.\"\n\nJill said, \"I gave her the number, I hope you all don't mind.\"\n\nCindy answered, \"Not a problem. I've scheduled the call for an hour. I'll hang up now, but if you need more time, I've assigned administrator privileges to Ashley's connection. She can add more time when the recording prompts. Good night, everyone.\" A double beep announced her disconnection.\n\nSister Kate came on. \"I won't be long. I know I speak for the entire school and community when I say that we are very sorry for your loss, Joe.\"\n\n\"Thank you, Sister K. It means a lot.\"\n\n\"Well, your parents were fantastic advocates of Catholic High, but more than that, I got to know them personally, and they will be truly missed. Take as long as you need, I'll work on exemptions with the state for attendance requirements if you take off through January 1.\"\n\n\"Thanks again, I don't think that will be necessary, though. I should be back by Friday, I hope.\"\n\n\"Well, you have some leeway, if you change your mind. Ashley, I wish you hadn't left suddenly, but I can understand your reasons. The state high school board won't give you much room for your absence, as you are not directly related to Joe or his parents. I have to advise you to return by the following Monday, if you wish to graduate with your class. They allow three weeks excused absence during the year. You've already had to use two for the accident recovery. Not trying to pick bones with you. I'm trying to keep you on schedule.\"",
        "\"Yes, ma'am. I'll be sure to be there on that Monday, if not sooner.\"\n\n\"Very well. I'm glad you two are safe, and I hope you have a safe return. Take care.\" The beeps announced that she left the call.\n\n\"That goes double for us, Ashley. I'm glad to hear you're safe.\"\n\n\"Thanks Mom. The last few hours have sucked, is all.\"\n\n\"You sound tired, kitten.\"\n\n\"Yes, Dad. We haven't stopped since we ran out of class this morning.\"\n\nHer mom said, \"Well, we won't keep you.\"\n\nJoe answered, \"Mr. and Mrs. Roberts, there's nothing we're gonna say that you shouldn't hear. You can stay on and listen in if you like.\"\n\nKim asked, \"How you holding up, Joe?\"\n\n\"I'm okay. I feel like I want to hit something, but I assume that will pass with time.\"\n\n\"You sound tired, too.\"\n\n\"Well, I'm still awake. It's only a little after 8 here. How'd your game go?\"\n\nKim answered, \"I know how Ashley felt. The snow sucks. The game's ending now...riiiight now. Yup, we lost again. Our team isn't very good here. What about you, Jill or Jasmine. Y'all won, right?\"\n\nJill answered, \"no, we're losing.\"\n\n\"Losing? The game should almost be over there,\" said Joe.\n\n\"We just entered halftime. Bonifay allowed us to start the game at 8, out of respect for your parents. And, Kim? It's 62 degrees here.\"\n\n\"You suck, Jill!\" Kim and Ashley shot playfully. The group laughed. Even hundreds of miles apart, the two new friends still thought alike.\n\n\"Well, if it's halftime, Jill can you get to the locker room and put me on speaker?\"\n\n\"Yeah, I'm not far away.\"\n\nWhile Jill headed for the locker room, Jasmine said, \"This is cool! All of us able to talk together.\"\n\nAshley answered, \"Yeah. I was telling Cindy that I wished there was like a 10-way calling. Then she said she could set up a conference for us. It's way easier than having to repeat the same stuff to everyone. No offense to any of you, but I'd still be on the phone at 2 in the morning relaying information.\"\n\nJasmine said, \"We understand, honey.\"\n\nJill's voice was muffled a bit, then she said, \"Okay, Joe's on speaker, guys.\"\n\nCoach Mike said, \"Hey Joe. The team is sorry to hear about your parents.\" The group could hear a chorus of guys saying things like, \"Yeah, man. Sorry Joe.\"\n\n\"Thanks. All of y'all. What's the score?\"\n\nCoach Mike said, \"We're down 3 to 10.\"\n\n\"What defense they running?\"\n\nA bunch of guys said at the same time, \"Man on man.\"\n\n\"Who's running the ball? 22 or 34?\"\n\nPractically the whole team said, \"34!\"\n\n\"Okay, judging by that, I'd say he's beating y'all up.\"\n\nThe coach said, \"Yeah, he's kicking our ass.\"\n\n\"He likes to cock his knees in the direction he's running. Left knee slightly bent, he's running left, etc. It's hard to see, you gotta look for it. If they're straight, it's either pass or he'll wait to see the where a hole opens when he gets the ball. At that point, blitz around the ends. You should be able to get to the QB or catch 34 behind the line. Now, if he bends a knee, then straightens it after an audible, it's pass all the way. If they start figuring out he can't run against you any more, they might put in 22. He's easy. Just contain the ends, since he's too scared to run up the middle.\"\n\nCoach Mike said, \"Wow, thanks Joe. I bet you're fun to play poker with.\"\n\n\"If you still scratch your tit when you have a good hand, I'll play with you anytime.\" They could hear the players laugh. \"Guys? I didn't come back from the dead just to have you lose now. I didn't win those games, y'all did. You know how to block, you know how to open holes. Just get out there and freaking do it! I better hear someone call me in an hour to tell me you won, got it?\"\n\nA solid chorus replied, \"YES SIR!\"\n\nThe cheering died away, then Jill said, \"Okay, I'm back. What are y'all doing now? Or should I ask?\" \n\nAshley groaned.\n\nKim said, \"Gees, Jill...parentals?\"\n\nAshley's dad spoke up, \"That's okay, Kim. Her mom and I were 18 once, too.\"\n\nJill felt like a heel. \"Sorry, Ash.\"\n\nAshley sounded a bit upset. \"Well, it's out there, now. Thanks, Jill! Yeah, Mom and Dad, we're screwing like deprived bunnies right now.\"\n\nJasmine was shocked. \"Oh shit, really?\"\n\nAshley replied, \"I'd so slap you if I were there. NO! We're in a restaurant, sipping soda.\"\n\nKim jumped in, \"Well, since it's out there...yeah right you are.\"\n\nAshley said, \"Grrr, Kim! Our shadows are two tables over, you want me to have them confirm what I said? Just a second...Miss? I'm sorry I don't know your name...Lieutenant Murphy. You've been watching me for what, two hours?...Two and a half hours. Would you tell my friends what I'm doing right now?\"\n\nMurphy said into Ashley's phone, \"sipping soda at a table in a restaurant, talking on your phone.\"\n\n\"And what am I wearing?\"\n\n\"You're wearing a Bronco sweatshirt, jeans, and a military clearance badge.\"\n\n\"Thanks!\" Ashley went back to sit with Joe. \"You satisfied, guys?\" While she waited for an answer, Ashley tucked her badge inside her shirt at the reminder. Lieutenant Murphy smiled at her.\n\nFinally her mom answered, \"You didn't have to go to a stranger's table. I think we know you're crazy enough to do that.\"\n\nJoe spoke up, \"Not exactly strangers, Mrs. Roberts.\"\n\nJasmine said, \"You're really being followed?\"\n\nHe answered, \"Yeah, they're still investigating the wreck. Besides, I also fired 7 high-level trouble makers in the company today.\"\n\nAshley's dad said, \"That explains the comment you made about the employees job statuses having already changed if they were going to.\"\n\n\"Yes, Commander.\"\n\n\"Did Lieutenant say you're wearing a badge?\"\n\n\"Yes, Mom. It's my ID, since I don't have my wallet or my license with me. And, the only way I was allowed to stay with Joe when he met with the generals his parents were supposed to today.\"\n\n\"What was that about?\"\n\nKim broke in, \"easy Ashley.\"\n\nAshley knew what Kim meant. \"I didn't understand a lot of it, but basically, Joe asked for their business.\"\n\nAshley went on to give the group a play-by-play of their day, starting with the unusual PA announcement that morning. When she finished, the group could hear Kim chattering.\n\n\"For God's sakes, Kim. Get on the bus if your game's done,\" Joe told her.\n\n\"I'm in my dad's car. It's still freaking cold, though. I think Ashley knows what I'm talking about. Anyway, my phone's about dead. I'll call you later, Ash.\" She signed off.\n\nHer mom asked, \"Ashley, did you bring anything warm?\"\n\n\"Mom! I left school and came straight here. It's game night, and was supposed to be a low of 58. What do you think I brought?\"\n\n\"So, you bought something, then?\"\n\n\"No...my wallet and stuff is still in my locker. Joe just took me shopping.\"\n\nJill said, \"I have your keys and wallet with me in the car.\"\n\n\"Oh, thanks!\"\n\nHer dad said, \"Joe we'll pay you back for her clothes.\"\n\n\"Not necessary. I was happy to do it.\"\n\nAshley said, \"Yeah, I already offered. Jill, can you and Jasmine pick up my car from the airport? I don't want it scratched.\"\n\n\"Sure. We'll do that tomorrow. You want me or Jasmine to drive it?\"\n\n\"Flip for it,\" Ashley said with a grin.\n\n\"Fuck! Jasmine, you can drive. You're mean, Ashley.\"\n\nHer mom said, \"Why'd you say Ashley's mean?\"\n\nJoe answered, \"Ashley knows Jasmine can out back flip Jill any day of the week.\"\n\nJill and Jasmine said at the same time, \"game's about to start.\"\n\nJoe told them, \"Good luck guys. Get the crowd behind the team, eh?\"\n\nJill answered, \"Oh yeah, I forgot to tell you, Sister K chartered two buses. There's a big crowd here.\"\n\n\"Great! Get 'em fired up for me, okay?\"\n\n\"Will do. I'll call with the final score.\"\n\n\"Bye, hon.\"\n\n\"Later sweetie.\" Two sets of beeps said that Jill and Jasmine hung up.\n\n\"Well, Ashley, take care of yourself and Joe, okay?\"\n\n\"I will, Mom. Don't worry, we'll be fine. I'll let you all know tomorrow about arrangements. Cindy has an appointment set up with a funeral home here in the morning.\"\n\n\"Joe? If you or Ashley need anything, or whatever, just give us a call.\"\n\n\"Thanks, Mr. Roberts. I'll keep the offer in mind. See y'all later.\"\n\n\"Bye.\"\n\nAshley ended the call. \"So what now?\"\n\nJoe told her, \"let's just head to the hotel. I don't feel like anything else right now.\" He called the limo driver, settled the bill, and they headed toward the front entrance.\n\nIn the car, they put their bags from the store inside two carry-on suitcases Joe had bought. They wheeled the bags with them to the front desk of the hotel, where Joe checked in and handed the clerk his card for incidentals.\n\nTheir room was a large plush suite, complete with kitchenette, small wet bar, a decent sized sitting room/work area with two desks, a spacious bedroom with a king size bed, and a bathroom that could fit a dozen people comfortably. Ashley hung up their purchases and coats, and stashed the suitcases in the closet. She asked Joe if he wanted anything, but he declined, lying on the bed and flipping on the TV. Ashley took off her shoes, and padded barefoot to the door joining the room next door. Instinctively, she thought she should see Cindy.\n\nCindy answered the soft knock in a robe, and invited Ashley in. Ashley looked around the much smaller room and said, \"I'd have thought it would be the same as ours.\" Cindy answered that it was all she needed, and added that most hotels are set up in this manner. \"Why did you get us such a big room?\"\n\nCindy replied, \"That's the standard that we use.\"\n\nSomething dawned on Ashley. \"It's not his...or is it?\"\n\n\"No, it's not their room. Joe's parents stayed at a hotel a few miles from here. I called there to settle up the bill, but the hotel told me they checked out this morning.\"\n\n\"So, where's their things? I mean, a four day trip, there's got to be clothes, and the like.\"\n\nCindy half-laughed, being impressed. \"Boy am I glad I found this job before you did! Here, sit with me for a while.\" Ashley surprised Cindy by crawling on the bed and sitting with her back against the headboard. She was accustomed to visitors grabbing a chair, but then, Ashley was different, and Cindy liked her more and more.\n\nOnce settling with a pillow behind her, and Cindy taking a similar position next to Ashley on the bed, Ashley asked, \"Why did you say that?\"\n\n\"Say what? Oh, about the finding job bit? You think of things most people wouldn't. That's what this job is all about. An executive assistant is expected to prepare for the unexpected. And it's what separates us from ordinary secretaries.\"\n\nAshley nodded. \"You're awesome, so I'm sure you thought of what I just did.\"\n\nCindy smiled. \"Yes, their things are in the trunk of the car they were in. And the car is at the impound. The police department said once the investigation was over, they would ship the Smiths' personal effects to me.\"\n\n\"Why to you and not Joe?\"\n\n\"Because, I'd rather not have Joe receive a box full of his parents' things in two weeks or later, with a label that just blares 'here's yer shit.' I'll go through the box, remove the valuables and sentimental things and present them with respect to Joe. The meaningless stuff, like clothes and perfume, I'll donate to charity. It's what his parents would have wanted.\" Ashley yawned, and Cindy paused. \"You've had a long day, and I don't want to keep you.\"\n\nAshley started taking what she perceived to be a hint. \"Oh, I'm sorry. You wanted to go to bed. I'll leave you be, then.\"\n\n\"Oh, Ashley, it's not that. I didn't want to keep you up. You can stay if you like, but I do think I'll have a drink. You want one?\"\n\n\"Uh...something easy? I don't want to put you through any trouble...\"\n\n\"Two rum 'n cokes it is.\" Cindy went to Ashley and Joe's suite and fixed the drinks. She came back with them and dialed the front desk. \"Yes, suite 1905 will have used some drinks from the bar. Please put them on my tab, they're for me...okay, thank you.\"\n\nAshley sipped her drink, and it was strong enough for her to think \"Dr. Pepper, Dr. Pepper\" to keep from coughing. \"Wow, that's strong.\"\n\n\"I'm sorry,\" Cindy apologized. \"I should have asked. I figured, since I'm paying, why water it down?\"\n\n\"Yeah...about that. What was that call about?\"\n\n\"To the desk? Oh, I'd have invited you to the bar downstairs, but you're not 21 yet. I didn't want you two to get in trouble for being underage and having a bill for liquor.\"\n\nThat lead to Ashley asking Cindy's age (21 last month) and then about whether she dated. Cindy told her she never had a chance to, and really had too much fun working for Joe's parents to want the hassle of a boyfriend.\n\nJoe walked in and said, \"You two look cozy.\"\n\nAshley was starting to get affected by the drink and giggled, \"We're just getting to know each other.\" She slid over close to Cindy. \"You want to have a drink with us?\"\n\nHe smiled at her. \"No thanks. But enjoy yourselves. I just came over to tell you that Jill just called and said that we won 23-20. Barry nailed a 49 yard field goal as time expired to keep the game from going into overtime.\"\n\n\"That's great!\" Ashley beamed.\n\n\"Yeah, it is,\" Joe sighed.\n\nAshley fretted. \"You want me to come over there?\" She started to get up.\n\n\"No, no. I'll leave you two to it. I just wish I could have been there.\"\n\n\"Aww, I know. I'll finish my drink and be back over soon.\"\n\n\"Take your time, Ash. I won't be going to sleep for a while.\" He closed the partition door softly behind him.\n\nAshley said to Cindy, \"I'm worried about him. How long do you think he can keep running the company and do everything else?\"\n\n\"Oh, knowing Joe, probably forever. But, he doesn't want that life. I think that's why he's going to get rid of it, mostly.\"\n\nAshley asked what Cindy meant, and she was given a short education on how incorporation worked. Cindy explained that by selling shares, Joe was in effect selling pieces of the company's title. He stood to gain a lot of money by selling the shares. Cindy said Joe indicated that he would hang onto enough shares so that he would get the final say in who ran the company, etc.\n\n\"Is this a good thing?\" Ashley asked.\n\n\"Personally, I secretly hoped his dad did this a year ago. Joe won't have to be as involved if he didn't want to, and the company can become self reliant without any detriment to the owners, except the value of their stock in the company.\"\n\nAshley was about to change the subject to lighter things when Cindy's phone rang. She could only hear Cindy's side of the conversation.\n\n\"Yes, sir. What can I do for you?...No, he's still up...well, I'd rather not, his parents just...yes...I know, but...I'll see if he'll take your call.\" She turned to Ashley, putting her hand over the phone's mic. \"Fucking asshole Labor Union president,\" she said as she got up and walked over to Joe in the suite.\n\nJoe was watching preview shows for the college games tomorrow when Cindy walked in. \"Yes?\" he asked.\n\n\"I'm sorry. The union president is demanding to talk to you.\"\n\n\"Alright, give it here. Hello?\"\n\n\"Hello, Joe. I'm sorry to hear about your parents.\"\n\n\"You can call me Mr. Smith. What can I do for you?\" Joe said, ignoring the faked sentiment.\n\n\"Very well. Mr. Smith, I've received a grievance from seven managers who claim they were terminated unfairly. I am hoping this was just a misunderstanding, and that I don't have to get lawyers to change your mind.\"\n\n\"No misunderstanding. They were fired for undermining the stability of my company.\"\n\n\"Maybe you aren't as familiar in dealing with a union as your parents were. An employee cannot be fired without notification to the union. That is so we can have a chance to mediate any differences.\"\n\n\"Well, maybe you aren't familiar with your geography. The seven in question resided and worked in an office inside the state of Florida. That state has at-will labor laws. It means they can quit or I can fire at any time and without explanation or notice. Send your lawyer after me, if you like. I'll win that argument every day and twice on Sunday.\"\n\nThe president sounded flustered, \"well, union contract says...\"\n\n\"Says squat about termination inside Florida,\" interrupted Joe. \"Now, is there anything else I can help clear up for you?\"\n\n\"Well, actually, there is a complaint that you are making my workers take some days off?\"\n\n\"Gee, forgive me not spelling everything out in a soundbite. Every worker, regardless where they work for me, will have a four day paid grieving leave, whether they were scheduled to work or not. The critical personnel who I need to keep working to babysit the facilities for security and other reasons will be granted four days paid leave as their schedule rotations allow. Does that seem fair to you?\"\n\n\"I suppose we can work with that.\"\n\n\"Damn right you can. A four-day paid weekend off. If they can't deal with it, the door is wide open in front of them. Good luck finding that generosity anywhere else. What other childish complaint can you come up with to bother me so late the night my parents died?\"\n\n\"Uh, thank you for your time.\"\n\n\"No problem.\" Joe slapped the phone shut and lightly tossed it to Cindy. \"Fucking moron!\" he hissed. \"How many of our total employees are unionized?\"\n\n\"About 1200, sir. 300 are management.\" Cindy said.\n\nJoe closed his eyes and took a deep breath through his nose. \"How many managers at the top were union?\"\n\n\"Including the ones terminated today, six. The next highest union manager is at region level, sir.\"\n\n\"Cindy, when we're alone, please call me Joe. I'm younger than you, for crying out loud.\"\n\n\"Yes, sir.\"\n\n\"Alright, out of...how many total employees?\"\n\n\"Including myself, 251,309.\"\n\n\"So, out of 251,000, this guy has contracts with us for 1200 of them.\"\n\n\"Yes.\"\n\n\"Any other unions the company has contracts with?\"\n\n\"No sir.\"\n\n\"Alright, if I break a contract, like fire without permission, what would the penalty be?\"\n\n\"They would strike until the dispute is solved or a new agreement was made.\"\n\nJoe looked at her and said sarcastically, \"Oh no...what would we do? Not a very strong position, they have.\"\n\nCindy answered, \"Stronger than you might think. They account for nearly the entire workforce located at two of our 'special order' plants.\"\n\n\"Let me guess, the six managers were promoted from those plants?\"\n\n\"Yes, all the ones you fired, minus Bob.\"\n\n\"Alright, that gives me an idea of what we're facing. Thank you, Cindy.\"\n\n\"You're welcome, sir.\"\n\n\"Oh, Cindy? If any more morons happen to call you tonight, you have my permission to hang up on their ass.\"\n\n\"Yes, sir. Anything else for me tonight?\"\n\n\"No, thank you. Good night, Cindy.\"\n\n\"Good night, Joe,\" she said. \n\nJoe knew she set the parameters for their friendship just then. When talking business, he would be \"sir.\" When outside of work, he would be \"Joe.\" He smiled to himself, \"Dad was right. She's damn good.\"\n\nShortly after Cindy left to give Joe the phone call, Ashley received one from Kim. They consoled each other about Joe's parents, and then were talking about various subjects at random. Topics flew from Cindy to the football games that night, to Joe's new responsibilities. Ashley saw Cindy return, still in her robe, and broke the conversation off. \"Well, she's back, so I better go.\"\n\n\"Alright, Ashley. Take care,\" Kim said.\n\n\"You too. I'll let you know what I find out tomorrow about everything.\"\n\nKim said thanks and they hung up.\n\nAshley looked at Cindy and asked, \"what happened?\"\n\n\"Oh, Joe chewed him a new one and then held a mirror up, so the idiot could see the handiwork.\"\n\n\"It went that well, huh?\"\n\nCindy smiled. \"Yeah, I'm impressed. Joe knows his shit.\" She downed the last of her drink, and then said, \"I'm sorry. It must be the liquor talking. I meant to say Joe knows his stuff.\"\n\nAshley patted her arm. \"That's ok. I'd like to think of you as my friend. You don't have to hold back when you talk with me.\"\n\nCindy gave her a quick hug. \"Aww, you're sweet. But, I think you might better go over there and calm your boyfriend down, so he can get some sleep.\"",
        "Ashley crawled over and gave Cindy a tight hug and a kiss on her cheek. \"Thanks, Cindy. For everything you're doing.\"\n\n\"You're welcome. I enjoyed chatting with you. Good night.\"\n\nAshley stepped through the door and closed it behind her. She used the bathroom, and padded into the bedroom, taking off her shirt and jeans before slipping under the covers in her bra and panties beside Joe. He was still watching TV, but stripped to his boxers when Ashley came in the room. Joe snuggled close to her and started toying with the outline of her bra. She sat up for a second and removed the bra. When she laid back down, Joe reached over and played with her breasts. Ashley had committed to herself that she would be available to him physically, but she wouldn't actively encourage or deny him. Whatever he wanted to do, he could. She didn't want to influence him into or out of something he didn't want. Joe still had the TV on, but leaned down and kissed and sucked her nipples almost absently. She played with his hair as she allowed him to comfort himself at her breasts. Ashley expected him to take her, and she braced emotionally for him to be rough with her. She had seen and felt firsthand how males take their frustration out either through violence or sexually. She prepared her body for the latter, since she knew Joe would never strike her, but the rough stuff didn't come. He seemed content to play gently at her chest until suddenly, he stopped, as he had fallen asleep. She reached over and grabbed the remote to power off the TV, and fell asleep herself, with his head still on her chest. \n\nShe woke a few hours later to Joe fumbling with her panties. She raised her hips, slid them down her legs, and kicked them off to the floor from under the covers. Ashley laid back down, facing away from Joe and tilted her hips toward him, letting his hardness slide between her legs. She looked back at him and said, \"go ahead. I know what you need to do.\"\n\nThe next morning, Cindy woke them by calling Joe's phone. \"Wake up sleepy heads! I have room service bringing breakfast in an half hour.\"\n\n\"Okay, thanks,\" Joe mumbled into the phone and hung it up. He took his shower and came back into the bedroom, waking Ashley by kissing her forehead. \"Your turn for the shower.\" She slid out from under the covers and Joe sucked in a breath through his teeth. \"Oh, damn. I'm sorry.\"\n\nShe looked down to see small spots of faint bruising dotting her breasts, especially around her nipples. \"It's okay,\" she said. \"You feel better now?\"\n\n\"I did until I saw that. I didn't mean to...\"\n\nShe stood to kiss him on the mouth. \"Shh. I knew you needed to, and I let it. You didn't break me. See? I can still walk,\" she said as she slipped past him toward the other room.\n\n\"Yeah, but not very fast,\" he said in punishment to himself.\n\nAshley emerged from the bathroom wearing a white turtleneck shirt, emerald green vest, and black dress slacks. She knocked on the partition door and Cindy answered. \"Do you have any makeup I can borrow?\" Ashley asked.\n\n\"Of course, come in.\" Cindy was fully dressed and ready for the day. She handed Ashley a small bag, and Ashley sat at the vanity, plucking out what she wanted to use. As she started applying the colors to her face, Cindy grabbed a brush and pulled it gently through Ashley's hair. \"You have a good night?\" she asked.\n\n\"Yeah. Joe should be feeling a bit better, now.\"\n\n\"Oh? Your gait did seem to be slightly off,\" she said knowingly.\n\n\"Yeah, well. I sort of let him work through his frustrations.\"\n\nCindy worked with Ashley's hair, pulling it back and holding it neatly in place with a couple of barrettes. \"He needed to. You should have seen him on the phone with the union guy.\"\n\n\"I know. Trust me, I know,\" she said as she finished the last of her eyeliner. She looked in the mirror at her hair. \"Oh, that's cute! I don't have the patience for barrettes. I just throw it up in a ponytail, usually.\"\n\n\"Well, the color of your hair contrasts so well against the green of your vest, I thought it would look nice to display it like this.\"\n\nThere was a knock on the suite door, and Cindy went over to accept the breakfast. They ate together in the sitting area, while Cindy ran through the appointments with Ashley and Joe. When they finished, Cindy called for the car, and they grabbed their coats and headed to the elevator to go downstairs.\n\nThe first stop was the funeral home that Cindy selected. The director took the information Cindy gave him on Joe's parents' life insurance policies and disappeared to the business office for a few minutes. He returned and told Joe that the policies were substantial, and included several beneficiaries. Joe asked who the beneficiaries were, and the director said that Joe received the majority of the benefit, minus funeral expenses. The others were Kim, Jill, Jasmine, Sally, Allison, Marybeth, Ashley, and Cindy, who all would receive an equal lesser, yet significant amount. Ashley cried a tear upon hearing of their generosity. The director told Joe that the insurance company would mail the checks to his house for disbursement.\n\nThe meeting continued to settle details about casket or cremation, whether to have a memorial locally, obituary write-ups, transportation of the remains back to Florida, and service arrangements back home. Ashley helped Joe pick out caskets for his parents, and he settled on two identical elegant wood ones. He agreed with Ashley that his parents were modest, even in the face of their success. The vessels were expensive looking, without being showy. Joe signed various forms and the funeral director told him that they would pick up the remains from the hospital morgue that afternoon, and begin preparing the bodies for the services to be held on Monday morning. Joe thanked him for his time and they left.\n\nThe next stop was at the regional offices for the plant and some retail units around Denver. Cindy had set up a meeting with one of the company lawyers there. Joe thanked him for spending some of the promised day off to see him, and the lawyer brushed the sentiment off, saying, \"anything you need, let us know.\" Joe nodded and proceeded to relate what he did yesterday regarding the seven he canned. The lawyer told him that the bylaws of the company were written so that if something did happen to his parents, control and ownership would instantly be handed over to Joe, without going through probate, wills, or any other nonsense. Joe was the only heir to his parents' estate, as the next closest relative was a distant cousin, tied to the family only through a complicated series of failed marriages and relatives who'd already passed. He assured Joe that he had the authority to run the company as he saw fit. Joe then asked if his interpretation of Florida labor law was correct. Yes, Florida is an at-will state, he was told. The attorney answered a series of questions regarding the union contracts at the two plants in the Midwest. \"If you think you can run those plants without the workers, by all means you can fire them. Just remember, you'll be removing income from 1200 families counting on that support,\" he said as Joe got up to leave. Joe thanked him for his advice and wished him to enjoy the rest of the time off if he could.\n\nThey ate lunch next, and Joe said that he wanted to stop by the plant to personally thank the workers who couldn't leave their shifts. Cindy called ahead to set it up, and they got in the car to make the 45 minute trip. Ashley used the time to text her usual group.\n\n\"Memorial service here Mon morning. We're flying back Tue. Should be there by 3, your time. Wake is at 5 on Wed. night at Faith Chapel North. Funeral at 9 Thur. Morn. at Sacred Heart, burial following at Barrancas National Cemetery, since his dad was retired USAF engineer. Might be back at school Fri. We'll see. Take care.\"\n\nShe replied to the sporadic answers and questions that came back to her phone. One said, \"Hey, we're here.\" Ashley looked up to see Cindy putting her phone in her pocket, grinning broadly. Cindy said to Joe, \"she loves that phone, doesn't she?\"\n\nJoe was putting on his coat when he answered, \"She sure does. Sometimes I wonder if her heart would stop beating if the phone battery died.\"\n\n\"Hardy har,\" Ashley said as she slipped the phone under the waistband of her slacks. She donned her coat, took the lanyard from it's pocket, and draped the badge around her neck as the car pulled up to the front gate.\n\nWord had gotten out about their pending arrival, as a band of reporters and workers met them at the gate. Joe got out and made a few comments to the reporters, mostly saying he was there to thank the critical support team. He stepped over to where a makeshift shrine had been set up the night before near the fence. Joe relit one of the candles in the snow, softly touching a picture showing his parents together. The media ate it up, even though that wasn't Joe's intention. He went over to one of the guards in the hut and leaned in, telling the guard so that only he could hear to not let the memorial get messy and to clean it up with respect Wednesday afternoon. The guard nodded, then stepped over to the car and checked Ashley's badge. He noticed her necklace late as it was partially hidden by the collar of her coat and said, \"oh! Sorry, miss. I should have seen that earlier.\" \n\nShe leaned toward him and answered, \"quite alright. I'm not used to it meaning something to others, myself.\" Joe returned inside the limo and they rode up to the plant's entrance.\n\nJoe and Cindy showed Ashley around, while Joe would stop to thank an occasional supervisor or guard they came across for working during the tough time. Now that Ashley had her coat open, they passed through different secured areas without the guard giving her a second look. There were two areas that were guarded by both a military and company guard. The company one noted the necklace and said ok, but the military guard scrutinized her clearance pass before letting her through. The first area was a bit boring to her, especially with so few workers around. Just a bunch of tables with electronic scopes and instruments littering them. Joe explained that this area was used to manufacture the radio chips for the Air Force's UAV's. \"Oh,\" she said non-noncommittally. Cindy grinned, because that was her same reaction when she first saw this room. \n\nThe second secure area was of more interest. They viewed the room from a balcony that lined the walls. Below were what resembled large model planes. To Ashley, they looked like elaborate paper airplanes clipped to model stands. \"I didn't know you built planes. Even if they are small.\" Joe explained that she saw the frames and shells of UAV's that are shipped to them by Boeing. The bare-bones units they receive weigh only about 15 pounds. Carter Electronics installs the encrypted radio chips and connects them to the control boards. The aircraft, now fitted with \"brains\" are shipped to another Boeing plant, where they will be outfitted with engines, cameras, and missile mount points. The finished product will weigh somewhere around 60 pounds. \"That's cool. Those things can fire missiles?\" she asked. \n\nCindy answered, \"yes, and we make the chips that ensure only us good guys can control it.\"\n\nThey finished the impromptu tour, and Ashley left impressed. This was only one plant that employed 10,000 and yet, she saw assembly rooms for laptops, cell phones, and calculators, plus where they did their part to bring an important weapon to life. She had no idea his parents' company was this large, or important. They got in the car and headed back toward toward the hotel. Joe had the driver take them to a nice restaurant. They were dropped off at Joe's request, and found the place to be both popular and packed. Cindy went inside to give their names, and came back out to join Joe, Cindy, and about 50 others in their wait in the fresh falling snow. Any other time, the weather and place would have made for a romantic evening, but Joe simply wanted good food and a distraction. He asked Ashley ahead of him if she was warm enough. She turned to face him and said that she was fine for now. He gave her a hug to be spontaneous, but she winced and gave a squeak.\n\nCindy noticed and asked, \"you okay?\"\n\nThe question caught the attention of several ahead of them, and Ashley decided to be in a playful mood. Talking loud enough so those eavesdropping could hear, she said, \"yeah, I'm fine. Joe got a bit carried away with me last night, and my tits are still tender as hell.\" She smiled and winked at Cindy when she got the groaning reaction she aimed for from the nosy people around them.\n\nCindy caught onto the game and decided to play along. She matched the volume Ashley used. Not loud enough to attract more attention, but just enough to let the nosy ones hear. \"Yeah, he gets like that with me, too. Don't you hate it when he leaves hickeys on your nips? Ugh! It chafes like crazy!\"\n\nAshley didn't expect Cindy to join in, and mouthed, \"really?\" Cindy rolled her eyes and looked pointedly at her, shaking her head. Duh. \"Well, next time he does that, just wear a satin bra the next day. It won't chafe as bad. But I tell you what, it is delicious while he sucks that hard!\"\n\nCindy mouthed to her, \"you're bad!\" Then, for the benefit of the snoops, and not to be outdone in this game, \"That's ok, but I like it better when he leaves little hickeys around my puss. I get so hot, I go at it for hours.\"\n\nAshley mouthed back, \"what the hell?\" Cindy raised her eyebrows in a challenge. Oh, no she didn't! Ashley thought to herself. \"Well, you ain't getting none of him tonight. The week isn't over, so you can't touch him until tomorrow.\"\n\nCindy replied, \"tomorrow happens at midnight. I plan to make him forget he was ever with you.\"\n\nAshley was determined to win this. \"I don't see how you can, cause when I'm done with him, the neighbors will be screaming my name and scrambling for their cigarettes!\"\n\nThe group ahead of them had stopped snooping, and were blatantly watching now.\n\nCindy upped the ante a bit with, \"of course they'll be screaming your name. You're so loud, they'll be shouting for you to shut up.\"\n\nAshley pushed further, saying, \"you didn't complain when you had your head between my legs!\"\n\nJoe had caught on to their game and noticed the gawking group was being called inside. He added for effect, \"pipe down you two, or I'll leave you both here in the snow and go screw Amy, instead!\"\n\nThe snoops shot them dirty looks as they went inside, sending Ashley and Cindy into giggling fits. Cindy said, \"I haven't done that in years. Oh, that was fun!\"\n\n\"Yeah, it was,\" Ashley said. \"Did you see that grandma of a hag? She looked like she was gonna stroke out when you said 'puss'!\" They laughed for a while, then when it died down, Ashley said quietly this time, \"my tits do kinda hurt, though.\" Cindy snorted into fresh giggles, infecting Ashley with them as well.\n\nChapter 22\n\nTrust Renewed\n\nWhen his last name was called, Joe was relieved that the group that watched Cindy and Ashley's performance was seated in a different part of the restaurant. The food was good, and Cindy entertained them by telling some humorous stories from working with his parents. She remarked at one point how similarly Joe handled last night's phone call to what his mother would have done. \"She was a tigress,\" Cindy recalled. \"Mrs. Smith knew exactly how to turn any conversation into her favor, and she wasn't afraid to step on toes. I'd receive some calls where very influential people would timidly ask to speak with her.\" Joe agreed, and told some stories of his own about growing up under their care.\n\nDuring desert, Ashley asked what was planned for tomorrow. Cindy replied that nothing was pressing. Ashley suggested that they take the day off, then, and try to enjoy it. Joe asked what she had in mind. She listed off some things like shopping, seeing a museum, just bum around in the hotel, but the others could tell her heart wasn't really into any of them.\n\nWhen none of her suggestions got a response, Ashley said, \"I don't know. I just thought it'd be nice to have a day to decompress and forget about things for a while. I'm not familiar with Denver. What's there to do?\"\n\nCindy got an idea. \"The Broncos are in town. You two want to see the game?\"\n\nAshley answered, \"Yeah, but the night before, we'd never get tickets...at least ones worth while. Besides, I got clothes that let me dart between where we're going and back to the car. They wouldn't work for surviving three hours in the cold.\" Joe and Cindy started laughing. \"I'm glad I could entertain you with my thin blood,\" Ashley pouted.\n\nJoe put his arm around her and said, \"no, it's not that. We think it's funny that you don't know Cindy very well, yet.\"\n\n\"What do you mean by that?\"\n\nCindy piped up and asked, \"do you want to go or not?\"\n\n\"Sure, sounds like fun, if I can stay warm enough. We're gonna have to stop by the mall again, Joe.\"\n\nCindy shook her head. \"No you won't. You'll see why when you get inside Mile High Stadium.\" She picked up her phone, got up from the table, and started dialing, saying, \"two tickets coming up.\"\n\nBefore she stepped away from the table, Joe said, \"get yourself one, too.\" She nodded has she headed out to talk.\n\nAshley looked at Joe, \"thanks, but I don't think I could stand being that cold for long.\"\n\n\"You won't be, you'll see,\" he answered. \"Besides, you'll have me to keep you warm.\" He leaned over in the booth and gave her a long kiss.\n\nCindy returned a short while later, snow sticking to her elegant coat. \"It's really starting to come down out there! Anyway, it's all set up. Tickets will be waiting for us at the will call window.\"\n\nAshley said, \"that was quick, must not be an interesting game, or no one wants to go in the weather.\"\n\nCindy smiled, \"oh no, it's sold out because they're playing the Cowboys. I'm just that good.\"\n\nJoe frowned, \"there's some irony for you.\"\n\nCindy shook her head slightly, chastising herself. \"Oh, I'm sorry. I should have thought of that, since your parents just got back from seeing them. I'll cancel, if you want.\"\n\n\"No, it's fine. It'll be fun with you two there.\"\n\nHe paid for the meal, and they were picked up to go back to the hotel. Cindy excused herself for the night, wanting to take care of some office housekeeping on her laptop while she had time. Joe engrossed himself with a late college game on TV. Ashley changed out of her outfit and into a t-shirt and undies, taking advantage of the toasty room. She laid next to Joe for a while, but he didn't seem to notice her. She didn't mind, but she was getting bored and something weighed on her mind. She asked Joe if he minded her calling Kim. \"No, go ahead, sweetie,\" he said. He was a bit surprised that she closed the door when she left the room, but he figured she wanted some private time to talk to her friend.\n\n\"Hey Ashley!\" Kim answered.\n\n\"Hey Kim. How are you?\" Ashley asked quietly.\n\n\"I'm fine. But, something's up. You sound down.\"\n\n\"Eh, I'm okay. Just kind of bored. Cindy is doing some work stuff and Joe's watching football. So, I thought I'd call you. We're you busy?\"\n\n\"Honestly, my hand was, but I'd rather talk to you.\"\n\nAshley sighed. \"I'm sorry. You can keep going, if you want.\"\n\n\"Ashley, I said I'd rather talk to you. My kitty can wait.\"\n\n\"I meant keep going while you talk to me. I won't mind.\"\n\nKim gave a short laugh. \"I'm sure you wouldn't. My heart wasn't in it, anyway. I was just killing time. What's up, besides being bored? Something is eating at you, other than the expected stuff. I can tell.\"\n\n\"We had sex last night,\" Ashley said flatly.\n\n\"Yeah, well, it's natural and healthy to get rid of tension that way.\"\n\n\"I know, but Joe was trying to be all gentle and shit, when I knew he really needed to tear into something.\"",
        "\"So?\"\n\n\"What do you mean, so?\"\n\n\"So...what? You're the one needing to talk, Ashley. Spill what's on your mind.\"\n\n\"Well, it's hard, cause I'm embarrassed.\"\n\n\"I don't care if you're calling me to ask what 2+2 is, or if you're calling me to brag about some nasty sex fetish you discovered and enjoyed. You know I won't judge you. I know you know, and that's why you're calling, right?\"\n\n\"I guess.\"\n\n\"So, what is it?\"\n\n\"I told him I knew he needed to let go, but he still held back. So, I encouraged him to go for it by squeezing him inside me.\"\n\n\"Okay, sounds fine, still.\"\n\n\"Yeah, so he starts to get into it, and then his need for stress relief took over. He started slamming into me. Hard. Hard enough that my head kept tapping the wall.\"\n\n\"Ashley, that's fine. In fact it's kind of hot. You keep talking like that and I'll start having phone sex with you.\"\n\n\"Like I said, I wouldn't mind if you did, but you might want to hear me out before you get too excited.\"\n\n\"Why? What happened?\"\n\n\"Well, it stopped being about love, or even sex. I knew that might happen when someone needs relief bad enough. Lord knows he had a pile of stress loaded on him yesterday. But, man! He was a different person, completely.\"\n\n\"Did he hurt you?\"\n\n\"Well, not like you're thinking. He never struck me, or punched me like Bill did those times. But, oh my God! Joe went wild. He tore at my breasts, grabbing and mashing them, pounding his dick into me over and over.\"\n\n\"Did you try to stop him? Maybe tell him to ease up just a little?\"\n\n\"No, and that's why I guess I'm calling you to talk. I knew the act wasn't about sex or love, and it was borderline brutal, but I didn't want to stop him. I wanted him to let everything out, and if taking it out on me in that way helped him get through this, I was glad to take it. But, more than that, even knowing he was trying so hard to shed the pain, and the force he was going at it with me, I...I still, ugh. Kim, I came, even though he was hurting me.\"\n\n\"Like towards the end when he finished?\"\n\n\"No!\" Ashley started choking up. \"I had like four orgasms while he drove into me. They weren't huge or anything, but...my tits are actually sore and bruised from him grabbing and sucking them so hard. He went at it for like an hour, I think even my cervix is bruised, and yet I kept coming...like out of nowhere. Am I sick like that? I mean, do I enjoy being used so much that I have uninvited climaxes?\"\n\n\"Aw, sweetheart. It's okay.\" She heard Ashley sniff. \"Baby, don't cry. Once you start, I won't stop. I think your body was just responding to the sex.\"\n\n\"I thought about that, too, but aren't female orgasms generated mostly by emotions?\"\n\n\"Maybe mostly, and most of the time, but think about it, Ash. You are one highly sexually charged girl. I mean, you even were able to seduce me, and I normally don't like girls that way.\"\n\n\"Neither did I, until Jasmine diddled me that first time. Now, it seems natural to be with her if I see that look in her eye. Then there was you coming down the other week, and I wanted you to feel...no I wanted to feel good with you. Oh God, am I a lesbian, too?\"\n\n\"Well, ask yourself this, if you were, would it be so bad?\"\n\n\"Kinda. How hard would that life be?\"\n\n\"I know what you mean. I've asked myself that question several times since you and I slept together. But then I gave myself this test. Do you find yourself looking at random girls and wishing you could bed them?\"\n\n\"No, sometimes I crave it with you or Jasmine. But, no, I don't go looking. Although I've wondered if Cindy might be interested, but I dismissed that.\"\n\n\"Cindy is hot, now that I think about it... Anyway, how do you feel when you're with Jasmine, or...well, when you were with me?\"\n\n\"I don't know what you're looking for.\"\n\n\"Then, I don't know how else to ask the question. I'd like to know how you felt.\"\n\n\"You and Jasmine are my closest friends, now. Aside from Joe, that is. It felt right when we enjoyed each other. However, no offense to you, but I don't want to spend my life with either of you. At least not in the frame of marriage. I guess I feel like sex with y'all is like candy. A pleasant treat to enjoy once in a while.\"\n\n\"Really? That's exactly what I came up with! But, do you like being with Joe? Or, do you put up with having sex with him, just because you think that's what normal should be?\"\n\nAshley thought about that for a second. \"No, I really like being with him that way. He can make me blow my mind, it feels that good.\"\n\n\"Yeah, me, too.\"\n\n\"Are you saying you want him? To yourself?\"\n\n\"No...well, yeah, I want him. But he's with you, now, and I'm happy for you both. I was just saying I remember what he was like.\" Kim asked, \"Are you scared to be alone with him? If you think he'd lose it and hurt you, I'm sure Cindy wouldn't mind if you stayed with her.\"\n\n\"No! I love him. I'm pretty sure he loves me, and he wouldn't knowingly hurt me. I'm just scared that if I came so much from him being rough, would it start to get harder for me to enjoy him being his normal, gentle self?\"\n\nKim pondered this and asked, \"Have you talked about it with him?\"\n\n\"What the fuck do you think? Am I supposed to be like, hey honey, I know you just picked out your parents' coffins, but I'm having concerns about me creaming while you roughed me up sexually. Can we talk?\"\n\n\"Easy, Ashley! I'm on your side. I had to ask.\"\n\n\"I know, sorry. I'm just so confused about my reaction to the rough stuff.\"\n\n\"You don't have to apologize. I'm fine with you yelling at me once in a while. Besides, you had a valid point. I'm just saying don't get yourself worked up over me asking you a sensitive question.\"\n\n\"Okay.\"\n\nKim asked, \"Did you want to test your theory about gentle versus rough play tonight?\"\n\nAshley was confused. \"What do you mean?\"\n\n\"Well, you could start something with Joe and see if gentle rocks your world, still.\"\n\nAshley sighed. \"He seemed much calmer today, so I know he got his frustration and hurt out. There'd be no problem with him being gentle. But, I don't want to bother him with my curiosity...or my wish to be with him. Not for a while, at least. He's got enough on his mind.\"\n\n\"So, you admit that you're horny?\"\n\nAshley pouted into the phone. \"Why do you ask that? I'm sitting here with tears still on my cheeks. Why on earth would I be horny?\"\n\n\"Because, I've come to know you, and you said you wanted to be with him. What are you wearing?\"\n\n\"A new t-shirt and panties...What's it to you? What are you wearing?\"\n\n\"Panties, no shirt...check to see if you're horny.\"\n\n\"How do you propose I do that?\"\n\nKim sighed, \"put your hand inside your cute-ass undies and tell me you're not wet.\"\n\n\"Well, I don't see the point of thi...damn, how did you know? I've never thought of myself as sexually charged, but now I'm starting to wonder.\"\n\n\"Told you I know you. I've missed you and missed talking to you so openly, I've gotten a bit worked up myself,\" Kim breathed into the phone. \"I was hoping it did the same for you.\"\n\n\"Kim, are you starting to play with yourself?\"\n\n\"Mmm, yeah. If you don't want to disturb Joe, then maybe you want to join me?\"\n\n\"I already am,\" Ashley sighed.\n\nThe next morning they got up and ate breakfast downstairs. Ashley started getting used to the guards watching them, and she didn't notice them anymore. Later on, their car pulled into the Invesco at Mile High parking lot. Ashley was wondering last night that if Joe and Cindy weren't worried about her keeping warm, maybe the stadium was a dome. But, her heart sank when she saw there was no roof. Timidly, she stepped out and walked through the slush with Joe and Cindy to the will call window. She tugged on Cindy's sleeve and said, \"I really don't want to be a baby, and I'm ok right now, but I don't think I can take the cold for the whole game. I'll just go back to the car and have him take me to the mall. You two enjoy the game.\"\n\nCindy stopped her from going back. \"Nonsense. Come with us. I promise you'll feel better inside.\"\n\n\"That's just it. There is no inside.\"\n\nA guy waiting in line behind them said, \"good thing she isn't a Packer's fan!\"\n\nAshley spun on her heel and hissed, \"oh you hush! I've lived in either California or Florida my whole life. I'm just visiting.\"\n\nHe put his arms up, \"excuse me, princess! If you sit with me, I'll keep you both warm.\"\n\nJoe stepped between the guy who appeared to have been tailgating a bit too long, and Ashley. \"That's not up to you, but thank you for your concern.\"\n\nThe guy braced for an argument, and maybe a fight, but the look in Joe's eyes made him back down immediately. \"Sorry. Didn't know they were with you.\"\n\n\"Quite alright.\"\n\nJoe turned to Ashley and said, \"just go in with us. If you are still unhappy when we sit, I swear we'll leave right then and find something else to do. Okay?\"\n\nAshley nodded, still not convinced. He seemed to really want to go, and wanted her to be with him. She decided that even if it meant pneumonia later, she'd tough it out. They got to the window and Cindy said to the clerk, \"Carter Electronics?\" The clerk typed on her terminal, and three tickets printed out. \"Enter the doors just to your right, elevator to the top floor. Enjoy the game!\" the clerk beamed.\n\nAshley said, \"she seemed taken with you.\"\n\nCindy smiled, \"no...she has to be extra friendly when tickets like these print out.\"\n\nAshley was puzzled, but didn't say anything. They couldn't be that good if they have to ride an elevator to the top floor, she thought. They stepped out of the elevator, and to Ashley it seemed as though they just warped to a different place. Instead of the cold, breezy concrete floor and steel girders she was expecting, the floor was carpeted, and the air warm. They headed down the somewhat narrow hallway, and she noted that the walls were finished with drywall board, complete with paintings and well-framed prints of the Broncos' best moments in history. Cindy stopped at the second to last door. \"This is us,\" she said as she opened it. Ashley was presented with a view that took her breath away. Large windows overlooked the field. Two rows of five stadium seats filled the smallish room, each covered in soft blue leather. Behind the seats was a breakfast bar type table, complete with four barstools. TV's hung in every corner, and a large flatscreen hung top-center of the windows.\n\n\"What the hell,\" Ashley finally breathed. \"Who are we sharing this with?\"\n\nCindy answered, \"nobody.\" She pointed to the Carter Electronics name plate on the door before she closed it. \"We own the license to use this for the season.\" She stepped down to where Ashley was taking in the view from the windows. \"So, I lied. I'm not THAT good. Since Denver is where we do a lot of research and client meetings, Joe's parents bought the license a few years back to entertain clients, recruit researchers, and give perks to reward good employee performance. I called last night to see if any of the local management had reserved it. Two had, but they understood when I kicked them out.\"\n\nAshley walked back up a couple of steps and sat in one of the plush seats in the second row. Joe sat down beside her, grinning. \"What?\" she asked.\n\n\"You still want to leave?\" he asked, holding out his credit card.\n\nShe pushed his hand away from her face. \"No, stop teasing me. You could have told me about this. Then I wouldn't have acted like a fool outside,\" she pouted.\n\nJoe pulled her to him and kissed her forehead. \"Aw, and miss the priceless look on your face when Cindy opened the door?\"\n\nShe gave him a playful punch on the arm. \"Shut up...I'm happy to entertain, as usual.\"\n\nCindy chuckled, half standing, half sitting on the ledge in front of the windows. A peppy waiter knocked on the door and stepped in. \"Hello folks! I'm Jerome and I'll be taking care of this end of the suites. Can I get any of you a drink?\"\n\nCindy caught his eye with a nod up of her head. \"Yeah, I'll have a Miller Lite still in the bottle, please.\"\n\n\"Sure thing, but you have a full bar, here. You don't want anything else? A Cosmo, perhaps?\"\n\n\"Nope. It's a football game. Beer's perfect for today.\"\n\n\"Very well, frosty Miller Lite, retail style for the lady,\" he said as he reached down into the fridge under the bar. He popped off the cap, wrapped the bottle in a napkin and brought it to Cindy. \"Anything for the two lovebirds in the middle?\"\n\n\"I could go for hot chocolate,\" said Ashley. \n\n\"Dr. Pepper,\" said Joe.\n\n\"Sure thing. I'll round those up and be right back.\" He ducked out the door.\n\nCindy took a swig, then walked over and put the bottle down on the table behind the pair. \"Man, that's good,\" she said. She noticed Ashley removing her coat and retrieved it from her, putting it in the closet. \"See? I told you there was nothing to worry about,\" she chided her.\n\nAshley smiled. \"Not in here. This is awesome!\" she answered, watching the crowd outside making their way to their seats.\n\nAshley made a show of thoroughly enjoying the game, entertaining Joe and Cindy with her heckling, cheering, singing, and dancing to the stadium music. During a TV time out, the stadium played a popular rock tune, and Ashley used the relative privacy of the suite to treat Joe to a fully clothed version of a lap dance. Even Cindy thought it was sexy as hell. Ashley didn't really care who would win the game, but she rooted for the Broncos, since it was their home game. Besides, she was wearing their sweatshirt. She feigned disappointment when the Cowboys pulled away at the end, but bent herself way back in a neat, tight reverse cartwheel in front of the windows when the Broncos recovered a fumble late in the game. The spontaneous stunt seemed to be as comfortable to her as walking. Cindy and Joe were amused with Ashley's playfulness almost more than they were entertained by the game. For about four hours, the group forgot about the weight of recent events.\n\nThey stayed a bit after the game, watching highlights from it and other games on the big screen in their suite. \"What was that?\" Cindy asked Ashley.\n\n\"What was what?\"\n\n\"Your...performance during the game. Where did that come from?\"\n\n\"Oh,\" Ashley giggled. \"I didn't get to cheer Friday night, and I guess it came out for this game. I'm sorry, did it annoy you? You should have said something, if it did.\"\n\nJoe laughed. \"Oh no! And miss that show? I had more fun watching and hearing you than I did watching the game. You were a perfect distraction for me.\" He kissed her, then said, \"thank you so much.\" He stepped back and looked at her. \"How come you don't cheer like that when I'm playing?\"\n\nShe cocked her head. \"I do. You mean you didn't hear me in the rain in Tallahassee?\" Her eyes got glassy, as if she were visualizing a memory of a critical moment in that game. Then in a voice that seemed to collide and ricochet off the walls, \"That's right, asshole! Oh, BALL BALL! Run, boy, RUN! Move your ass! YES! TOUCHDOWN!\"\n\nCindy jumped at the sudden outburst, and Joe laughed. \"That was you?\" he asked. \"I remember hearing that when I hit the ball from the quarterback in that game. I thought it was some drunk college student yelling that.\"\n\nAshley pouted. \"Gee, thanks a lot.\"\n\n\"No, I meant I didn't think it was you. I guess I expected 'rah rah, go team go' from the cheerleaders.\"\n\n\"Well, we do that between plays. But when you're out there making plays, I cheer, yell, and scream my heart out for you.\"\n\n\"I'll keep that in mind if I'm playing at Florida State.\"\n\nCindy interjected, \"Why not listen for her Friday night during the state playoffs?\"\n\nJoe answered, \"I won't be able to play.\"\n\n\"Why not?\"\n\n\"State rules say an athlete must complete at least one full day of school during the week to play, if they've been out. I'm planning on returning on Friday, but Jill told me the teams will have to leave early to play in Jacksonville. So, I wouldn't be eligible to play.\"\n\nAshley said, \"that's right. I wouldn't be able to cheer, either. That's okay, Joe. I'll keep you company.\" She hugged him, and was briefly reminded of the tenderness still lingering on her chest.\n\nCindy asked, \"Then, why don't you take the jet, or helicopter, even?\"\n\n\"Yeah, right,\" said Joe. \"I don't want to abuse company stuff for personal reasons.\"\n\n\"Why not? You're dad would use them to go golfing or whatever. He bought them for himself, and used them occasionally for business. Not the other way around.\"\n\n\"I don't want to be seen as getting special treatment.\"\n\nCindy said, \"at the beginning of the year, your mom signed a waiver for the school to allow you to go to games in your personal vehicle, rather than by bus. The helicopter is one of your vehicles, now. You get out of school just before three, so meet the chopper inside the track at school, and they'll have you at the regional airport in Jacksonville by 4:30, well, 5:30 their time. A car can drive you to the game, and you'd be there well ahead of an hour before kickoff.\"\n\nJoe pondered her scenario. \"I guess that could work. I just don't like to show off, I guess.\"\n\n\"The media has already done that for you. Everyone in town knows you now. So what does it matter if you use what you have this time around? You need it, so use it.\"\n\n\"Alright. We'll see how I feel after Thursday's funeral.\"\n\nBy the time traffic allowed their driver to get clear of the stadium area, it was after 8. Joe asked him to take them to the hotel. Cindy went straight to her room, wanting to make an early night, so she could be fresh for the memorial in the morning. Once inside their suite, Joe grabbed Ashley's shoulders lightly and turned her to face him. \"You dancing in those jeans all afternoon drove me crazy,\" he said. He knelt before her and lifted her sweatshirt to just below her breasts, leaned into her and licked her tight stomach around her belly button. \"Would you mind dancing for me without them?\"\n\nShe would have been nervous from his actions, were it not for the gentle touch he used. She reached under the hem of the thick shirt and brought it over her head, shaking her hair loose. Ashley reached before her and tangled her fingers in his hair, rolling her eyes back in pleasure as he tenderly kissed and licked her belly. Her eyes snapped open when he attempted to undo the button on her jeans. \"I'm sorry, sir. Customers are not allowed to touch performers,\" she said, slipping into the role she guessed he wanted her to play. She guided him up to sit on the couch. \"If you insist on continuing to touch me, I'll have to have you thrown out of the establishment.\" Ashley slid her hand out of his, and stepped two paces back, beginning to sway her hips. She moved her body to the rhythm in her head, periodically bringing her hands up to run her fingers through her red hair. The move was designed to show off her breasts' curves, still encased in her lacy bra. As she continued to dance slowly, her fingers found the button and zipper of her jeans and she gracefully slid the pants down her legs, taking what seemed an eternity to Joe. Still swaying, her bra was next, being removed in a manner so smooth that Joe only noticed it was suddenly gone. Ashley knelt in between Joe's legs, and started moving her head so that her hair wisped across his hands and lap. \n\nHer next move brought her forward, the top of her head resting gently against his chest, as she moved her breasts against the back of his hands resting on his thighs. He started to turn his hands over to feel the warm soft flesh better, but she said, \"ah ah ah...no touching, remember?\" He groaned his disappointed response. Ashley looked up at him and smiled. \"That's a good boy,\" she cooed, then kissed his chest. She glided up, gracefully placing one knee on either side of him, reaching up into her hair again as she twisted and moved to taunt his face with her breasts. He leaned forward a tad when a nipple got particularly close, causing the breast to collide with his nose. \"Mmm, you're being naughty,\" Ashley purred. \"That's not allowed here. Should I get the bouncer now? Or, are you going to behave?\" He sat back in reply. \"Good, I'd hate for you to miss the ending.\" She cupped the twins and presented them to his eyes, gently rolling her nipples between her fingers. Then she placed her hands on his shoulders and leaned forward, brushing his face with her hair. He could smell her fading perfume as she brushed her cheek against his ear. The sight and smell of her intoxicated him, making his pulse race. "
    ],
    "authorname": "photodad",
    "tags": [
        "cheerleader",
        "friends",
        "funeral",
        "phone sex",
        "masturbation",
        "striptease"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/angels-and-guardians-pt-06"
}