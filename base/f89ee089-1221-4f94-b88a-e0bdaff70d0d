{
    "title": "Holiday #195",
    "pages": [
        "\"So, are you gonna finally tell me what today's holiday is?\"\n\nPete took his eyes off the desolate country road just long enough to cast a glance at Amy, his best friend since grade school, where she rode shotgun with her bare feet up on the dash. She just gave him an innocent shrug and knowing smile.\n\n\"Number 195,\" she said. \"Now, eyes on the road.\"\n\n\"Not even a hint?\" He did as she asked, not that there was much to see out on the road save endless miles of trees and the heat mirage coming off baked pavement from the late morning July sun. They hadn't seen another car in nearly ten minutes.\n\n\"You're welcome to guess.\"\n\nPete sighed. \"Well, I know it's out of town and we're bringing a picnic lunch. And you said I should wear a swimsuit and bring a towel. So...National Picnic Lunch Day? Go Swimming Day?\"\n\n\"Both perfectly good guesses, but wrong. Although we'll likely be doing both.\"\n\n\"More fun that Donut Day?\"\n\nAmy chuckled. \"Hopefully. Could we have found any worse donuts on earth that day? Pathetic, really.\"\n\nYes, the donuts had been disappointingly stale, but it was the time they'd spent together on that day seeking out donuts and on every other day of the year so far without fail, celebrating one obscure made-up holiday after another, that Pete had really savored. It was at a New Year's Eve party last winter, as high school seniors, that Amy had put forth the idea.\n\n\"I wish we could celebrate holidays every day,\" she'd said to him as the clock ticked down the last few seconds until 2017.\n\n\"That'd certainly be a challenge to keep up,\" he'd countered, assuming she was just making up stuff to talk about.\n\n\"Challenge accepted, then.\"\n\n\"What do you mean?\"\n\n\"Starting in one minute, with the new year, I'm going to celebrate a holiday every day of the year,\" she said. \"And, of course, day one will be to honor New Year's Day by making that my resolution.\"\n\n\"Okay, you do that.\"\n\n\"And you're going to do it with me.\"\n\nShe'd given him a pointed look, one that told him she fully expected him to join her in this bizarre endeavor. It was exactly the sort of thing she would do and he believed if anyone could keep it up for an entire year, it would be her. Were it anyone else, he'd have politely declined, but this was Amy. If it made her happy, he was in.\n\n\"Okay, sure,\" he'd said. \"But you're in charge of finding the holidays.\"\n\n\"Deal.\"\n\nThey shook on it and then joined the others at the party in counting down the final seconds to the new year. When it happened, Amy leaned up and gave him a quick kiss. He'd been so flummoxed that he barely kissed her back. Afterward, she'd looked as embarrassed as he felt. That had been their first and still only kiss. He'd wondered if she'd done it out of holiday tradition or because she felt something more for him than she'd ever confessed before. He knew he had feelings for her, but had never felt the right moment to express them and was afraid to ruin their friendship if he did. She treated him like her best bud and there had never been a hint of interest in anything other than that. Even when February 14th came around and he thought she might open the door to something, she'd instead had them celebrate International Book Giving Day, and she'd given him a copy of Island of the Sequined Love Nun.\n\nOver half the year had gone by since that resolution was made -- 194 days of memories and laughs in celebrating peculiar holidays like Pink Shirt Day, International Pancake Day, Toy Soldier Day, Middle Name Pride Day (when they only answered to Miranda and Charles), Save a Spider Day, Be Mad Day (hard to keep a straight face through that one), Bunsen Burner Day (their AP chemistry teacher was not amused), and nearly two hundred others so far. It had been a lot of work in some cases, but he'd treasured the effort and time they'd put in together in accomplishing it. Now, over halfway done, neither was willing to do anything but take it the distance.\n\nHe didn't mind that Amy was being evasive about today's holiday, though it was unusual for her not to say something up front. Secretive was not usually her thing. On top of that, she'd been in a slightly \"off\" mood since he'd picked her up that morning. She said she was fine when he'd asked, so he let it drop, but he knew her well enough to know something was weighing on her.\n\n\"See that post with the reflectors up ahead? That's our turn.\"\n\nPete wasn't sure there was even a turn where she'd pointed until they were almost upon it. A small, weed-choked gravel road split off the desolate country route and cut into the woods. It was blocked by a dilapidated gate, one that turned out to be unlocked when Amy hopped out to open and then close after he pulled his car through.\n\n\"Just where are we?\"\n\n\"My grandma's property,\" she said, sitting upright now. \"We went camping here a few times growing up, but there's not a whole lot out here. There's a cabin that's in such bad shape I wouldn't dare set foot inside any longer. Dad keeps talking about rebuilding it, but I'd be surprised if that happens before he retires, if ever.\"\n\n\"So, if something happens to us, no one will be able to find us aside from maybe your family?\"\n\n\"Bad time to mention this is big foot country, then?\"\n\nPete rolled his eyes. \"Dork.\"\n\n\"You love it.\" She gave him a playful punch on the shoulder.\n\n\"Of course I do.\"\n\nAfter a couple hundred yards of carefully navigating through the overgrown drive, they broke out of the woods into a flower-dotted meadow with an idyllic reed-lined pond in the middle. Not too far from the water was the derelict cabin, whose roof appeared to have collapsed. Dense woods surrounded the entire area and Pete had the impression from the drive in that there might not be another human being within a couple miles of this spot right now. There probably wasn't any running water, electricity, or plumbing, either.\n\nIt was scenic, he had to admit, and quiet. He was increasingly curious as to what had inspired Amy to bring him here.\n\n\"Just park over by the cabin,\" she said, that curious vibe to her returning in both voice and body language. \"Should be plenty of room to get the car turned around.\"\n\nPete did as instructed. Closer, he could begin to make out how the area around the cabin had once likely been cleared and possibly mowed regularly. There was a deck on the cabin facing the pond and someone had once brought in a considerable amount of sand to create a small beach. Weeds were threatening to overtake it, but it wouldn't take too much effort for them to clear some space and have their own private beach. Had they ever become a couple, this would have made for a very romantic little spot.\n\n\"Well, this is it,\" she said as he turned off the car. \"What do you think?\"\n\n\"It's cool. Definitely could use some cleaning up, but yeah, I like it.\"\n\n\"Sorry it's so rustic, but I thought it would work.\"\n\n\"You gonna tell me what the holiday we're celebrating is now, then?\"\n\nAmy met his eyes for the briefest of moments and then looked away. Was she nervous? Her behavior was making him uncomfortable.\n\n\"How about we clear off the beach a little first,\" she said, opening her door. \"Then I'll tell you.\"\n\nPete sighed and followed her out, stretching his legs and taking in a deep breath of the fresh air. It was hot, but there was a steady breeze that made it tolerable. Birds and insects provided the background music while puffy clouds slowly rolled by, marking the passage of time.\n\n\"No hints, even?\"\n\nAmy started pulling weeds and pointed to where he should start. \"Oh, fine. How about I tell you what I passed on?\"\n\nPete chuckled. She had told him before of many holidays she'd passed up, so this could be fun in its own right. \"Fire away.\"\n\n\"We're not celebrating Collector Car Appreciation Day.\"\n\n\"Whew, thank goodness.\"\n\n\"You're welcome.\" Amy threw two handfuls of weeds into some deeper brush off to the side of the strip of sand.\n\n\"What else?\"\n\n\"I also passed on National Motorcycle Day.\"\n\n\"Good call,\" he said. \"My skills with four wheels are sketchy enough as it is.\"\n\n\"I gave a long, hard thought to National Macaroni and Cheese Day.\"\n\nPete stood up. \"What? You passed on that? I love mac and cheese.\"\n\nShe winked. \"I know. It was a close one.\"\n\nHe smiled in return. \"Well, whatever you settled on must be pretty freaking awesome to have beaten that one out.\"\n\nAmy flashed that look again and bit her lower lip. \"Better than Shark Awareness Day?\"\n\nPete gave her a puzzled look. \"What, that's what we're doing? I'm having trouble believing your grandma keeps sharks in this little pond.\"\n\nAmy threw a weed at him, forcing him to duck. \"No! But that was an option, too.\"\n\n\"Better than Hug a Shark Day.\"\n\n\"True.\" Amy turned back to her work. \"I'll tell you soon, since I think we've almost cleared enough.\"\n\n\"I can't wait.\"\n\nWithout looking up, she said, \"You'll either love it or hate it.\"\n\n\"Really?\" He couldn't imagine anything that would go to either extreme like that. \"And you don't know how I'll take it?\"\n\nShe paused and looked up at him. There it was again -- nerves. \"Honestly, no, I don't. That's why I've been all weirded out this morning.\"\n\nWell, at least it hadn't been his imagination.\n\n\"C'mon, you know I can roll with just about anything,\" he said, trying to put her at ease. \"I didn't blink when you told me it was International Sushi Day, did I? Me, the sushi virgin.\"\n\nAmy forced a smile. \"No, you were a good sport, and I knew that would test you.\"\n\n\"See?\"\n\n\"So you say now.\"\n\nPete did his best to put on a confident face, but her nerves kept rubbing off on him. Just what could have her so out of sorts? And, more curiously, why would she have chosen it when there were other low-hanging fruit from which to pick on this day?\n\nWithout too much effort, they had a good portion of the little beach cleared up and Amy led him back to the car to fetch their towels, a blanket, a bag of goodies, and the cooler. He helped her spread the blanket out on the sand and was already looking forward to seeing what she'd packed for lunch. Was that where the surprise lay -- something more off-putting and exotic for lunch than sushi had been? If so, he couldn't understand why the trek all the way out here.\n\n\"Okay, now are you ready to tell me?\"\n\nAmy stood before him, shifting her weight from foot to foot and clasping one hand in the other. To his eyes, she was adorable -- long, auburn hair pulled back in a ponytail, scintillating green eyes, petite and curvy. She'd been self-conscious about carrying an extra ten or fifteen pounds all through high school, but he rather liked her figure as it was, and had told her more times than he could remember that she looked good. He could tell she was wearing a bikini under her shorts and tank top and he'd been secretly looking forward to seeing her in it the entire drive up.\n\n\"I'm questioning my sanity,\" she said, stalling.\n\n\"Oh, enough already,\" Pete said, affecting as unthreatening a posture as possible. \"Just out with it already.\"\n\n\"Fine.\" She stared at him, almost challengingly, but blushed furiously while doing so. \"It's National Nude Day. There.\"\n\nPete's heart skipped a beat as his brain tried to comprehend what she'd just told him. National Nude Day. Nude. Naked. No clothes. Him? Her? In front of each other? She wasn't the only one with body image issues -- he'd always thought himself too skinny, not to mention severely under-tanned from too much time spent indoors. He was uncomfortable getting undressed in front of anyone and had never done so in front of a girl. He didn't know for certain, but he suspected the same was true of Amy in front of a boy.\n\nHe was terrified of what she'd think of him and of embarrassing himself in front of her. On the other hand, she knew full well when she'd picked this day that she would have to get naked as well. How was she not nervous as hell about it? Or was she and she'd wanted to do it anyway? And why? He thought back to that one brief kiss on New Year's Eve. If she did have a secret romantic interest in him, this sure seemed like a crazy way to try to make it known.\n\n\"See, I told you you'd hate it,\" she said, looking humiliated, likely mistaking his silence for a definitive reaction.\n\n\"No!\" He held out his hands. \"No, it's not that. I'm just a bit, shocked. You did manage to put me off my game, more than with the sushi.\"\n\nShe studied him in silence, forcing her hands apart to stop fidgeting.\n\nHe pressed on. \"And, I'm still trying to figure out how I feel about it. How do you feel about it? I mean, you picked it and all.\"\n\nAmy bit her lower lip and took a deep breath. \"Honestly, I'm nervous as hell. I picked it, I guess, because it sounded like one of those crazy things everyone does at some point in their life to have a good story to tell. I feel like I've lived my life pretty...safe...to this point. This isn't that. But, I don't think I could dare do something this crazy with anyone but you.\"\n\nPete felt his heart flutter at her words. \"Thanks. It's just skinny dipping, right? Doesn't everyone do that?\"\n\nAmy smiled. \"Everyone less boring than us.\"\n\nHe could do this. It was Amy, his best friend who would stand by him through anything. He just had to focus on not getting aroused in front of her and thereby embarrass himself beyond ever being able to face her again. Fortunately, for the moment at least, the thought of seeing her naked was completely overwhelmed by his nerves and he didn't feel so much as a twitch down below.\n\n\"Okay,\" he said, taking a deep breath. \"As long as you don't have a stash of mac and cheese in that cooler, then I'm in. Would hate to break our streak here.\"\n\n\"No mac and cheese, sorry.\" She shrugged. Something in her body language had eased, even if she still looked as nervous as he felt.\n\n\"So, uh, how do you want to do this? Now? After lunch?\"\n\n\"Now. If I wait any longer, I'll probably talk myself back out of it.\"\n\n\"Okay. I guess we're both pretty used to the getting undressed part.\"\n\nAmy chuckled. \"Yeah. Not that much to it. And then we use a metric ass-load of sunscreen, because I am not getting burned in any of those places.\"\n\n\"No kidding.\" He relaxed. If she could joke about this, then everything else felt easier.\n\n\"Ready?\" She looked at him, nervous but determined.\n\n\"No.\" No meaning yes, but not really, but I'll go ahead anyway for pride and because I won't let you do this alone.\n\n\"Shirts?\"\n\nPete nodded in agreement and peeled his t-shirt off, trying not to worry too much about her reaction to seeing that skinny, pasty torso. \"You might want your sunglasses if you're going to look this direction.\"\n\n\"Ditto,\" she said, shedding her own shirt and revealing the lime green bikini top he'd been waiting to see. He'd never expected its appearance would be so short-lived. It was almost a shame, too, since it was a cute little number that cradled her modest breasts invitingly. The suit was easily the most risqu\u00e9 thing he'd seen her wear, even if it was relatively tame as far as women's swimwear went.\n\n\"Ah, my eyes!\" He held up his hands.\n\n\"Ass.\" She flung her shirt into his face. \"And to think you were this close to seeing my tits.\"\n\n\"Just kidding!\" He put on his best apologetic smile. He knew her well enough to know she'd take it as he meant it -- a joke to lighten the mood. And, from her reaction, it sounded like it worked. \"Please, continue.\"\n\n\"I said shirts, not tops,\" she said.\n\n\"Well, if we do shorts next, I'll be naked since I'm just in swim trunks and you'll still have tops and bottoms on.\"\n\nAmy frowned. \"Oh, right. I suppose. Fine.\"\n\nPete was pretty sure that she was playing at being miffed. She reached behind her neck and began to undo the ties. Now, after lightening the mood and knowing that he would see the breasts he'd fantasized about countless times over the last few years, Pete felt the blood begin to flow to his cock. It wasn't a full boner, but he was acutely aware of it and worried how his friend would react when he finished undressing. Why did things have to be so difficult?\n\n\"You do realize you're the first guy to see me, right?\"\n\nPete wasn't sure how he was supposed to take that. Should he act all honored or just take it in stride? Was she expecting some sort of reaction and he was letting her down by not immediately responding just so?\n\n\"I kinda gathered,\" he said, knowing it sounded a bit lame. \"And you'll, well, you're my first, too.\"\n\nShe nodded. \"I had a hunch.\"\n\nHe watched as she took a deep breath and lowered her arms to chest height and bringing the ties along. She held the bikini top over her breasts for a moment before lowering her hands and letting the fabric fall over. Pete had seen more than his fair share of bare breasts on the internet, but this was the first time in person in any meaningful way, and his heart skipped a beat at the final reveal.\n\nAmy's breasts were full, but hardly oversized. Just big enough to hang under their own weight. The areolas were small, nearly all bound up in the pair of perfectly erect nipples. He loved them and adored her for trusting him enough to partner with her in this intimate adventure.\n\n\"Happy?\" Amy's question could have been in annoyance, but her tone was genuine.\n\n\"They're beautiful.\"\n\nShe blushed and gave him a dubious expression. \"Uh huh.\"\n\n\"I'm serious.\"\n\nAmy met his eyes and the tension seemed to drain from her body. \"Well, try not to drool or anything. This isn't like when we watch Game of Thrones.\"\n\nPete smiled. \"I don't drool.\"\n\nAmy turned her bikini top around so she could undo the second tie around her mid-section. \"You don't blink, either.\"\n\n\"Whatever.\" Pete didn't want to argue further. She was probably right on that count, and he wouldn't put it past her to have noticed his shorts bulge on occasion as well. No need to prod her further and have that brought up.\n\nShe dropped her top onto the blanket and turned back to him, making no effort whatsoever to hide. If they were both going to get naked and spend time together like that, he supposed there was no point.\n\n\"Okay, drop em.\" Amy grinned a bit as she looked to him and then his shorts.\n\n\"But you still have two layers on.\" Pete knew he was delaying, still afraid of exposing himself completely.\n\nAmy rolled her eyes and immediately shucked her shorts, leaving her standing there in just the matching lime green bikini bottoms. \"Better?\"\n\nPete felt his cock twitch just a bit, now very acutely aware of every curve on his friend's body. \"I guess. Together?\"\n\nAmy shook her head. \"No, you first. You got to watch me, so I want to watch you.\"\n\nThe way she said it, Pete got the impression that her seeing him naked was very much part of the reason she'd chosen for them to celebrate this holiday. He wasn't sure if that made him feel better or not. Either way, trying to talk his way out of it would sound petty. Nervous as he was, she had taken the first step. She trusted him. He owed it to her to do the same.\n\n\"Okay,\" he said, trying to calm his nerves with a couple deep breaths. It didn't help. \n\nHe fumbled at his swimsuit's ties with shaking, sweaty hands. Finally, he got the strings straightened out, and hitched his thumbs into the waistbands. He looked up at Amy and found her giving him a warm, encouraging smile. No teasing, no leering.\n\nIt wasn't exactly like ripping off a Band-Aid, but Pete managed to pull his trunks down over his hips in a fairly smooth move and then let them drop the rest of the way to the ground. The first thing he was acutely aware of was the feel of the breeze cooling his balls -- something he'd never experienced before. The second was the heat of the sun on his slightly engorged cock. Sunscreen was most definitely in order.\n\n\"Oh my god!\" \n\nPete looked up, startled, having turned his attention away from Amy for a moment in the final disrobing. She was staring at him with wide eyes, hand over her mouth.",
        "\"What?\" He wasn't exactly sporting something shocking like a full-on erection, nor was he particularly noteworthy as far as cock sizes went. \n\n\"You have a penis!\"\n\nPete looked at her blankly for a moment before realizing she was just messing with him. She managed to simultaneously address the elephant in the room, so to speak, as well as break the tension he felt. A good friend indeed.\n\n\"Yes, I have a penis,\" he said, kicking up his suit and then throwing it at her. \"Dork.\"\n\n\"Thanks,\" she said, catching his suit before it hit her in the face. \"Maybe I should just toss these in the middle of the pond. Not like you'll be needing them today.\"\n\n\"Uh, no,\" he said, thinking she might actually do it. \"I need those for the ride home.\"\n\nAmy looked back down at his crotch. \"Nah, I actually rather like this look for you.\"\n\nPete felt himself blush a bit at her comment, but he liked how she sounded as if she meant it. \"And when I got home?\"\n\n\"Details.\" She winked and dropped his shorts beside her clothes. \"Very nice, by the way. Best specimen I've ever seen in person.\"\n\nPete rolled his eyes. \"Thanks. Sample size of one?\"\n\n\"Details.\"\n\nFor as terrified as he'd been to get undressed in front of his friend, he found he was considerably less bothered now that it was a done deal. Amy had looked at him, acknowledged his nakedness, and she was still the same girl he'd been friends with forever. Mostly. She was topless, after all.\n\n\"Okay,\" he said. \"Only one of us seems to be fully in the holiday spirit. Time to get with the program.\"\n\n\"Yes sir,\" Amy said, giving him a sharp salute that caused her breasts to jiggle in a manner impossible to ignore. Whether it was having already passed the threshold of losing her top or seeing him fully naked, she wasted no time and exhibited no nerves in sliding down her bottoms and stepping free. He noted immediately that she had trimmed her pubes, leaving only a thin shading of brown in a narrow strip. Between her legs, he could just make out a the slightly distended lips of her labia. It took all his will to fight down an involuntary response to the sight of her.\n\n\"Oh my god!\" Amy said again, smiling.\n\n\"You have a pussy!\" He said, clearly finishing her prompt in the expected manner based on her expression.\n\n\"Crazy, I know,\" she said, putting her hands on her hips and affecting a pose for him. \"I'm naked, you're naked, and the world hasn't come to a screeching halt.\"\n\n\"Somehow.\"\n\n\"Happy National Nude Day!\"\n\n\"You too. You're crazy, but we did it.\"\n\n\"We're crazy. And, yes, we did. I'm proud of us. This makes us cool, right?\"\n\nPete shrugged. \"Well, I wouldn't go that far. Maybe a little less dorky, though.\"\n\nAmy turned to reach into her bag, giving him a nice little view of her round ass as she bent over. A moment later, the show ended and she tossed him a bottle of spray-on sunscreen. \"Do me first?\"\n\nPete blushed. Well, at least she wasn't asking him to apply lotion by hand. While that would be a dream come true in one sense, there was no way he'd be able to do so without getting a full-blown erection. This was already testing his limits.\n\n\"Sure,\" he said, fumbling with the cap. \n\nAmy stood facing him, holding her arms wide. Pete did his best to keep his eyes and mind strictly on the business of applying a generous layer of spray on his friend's body. He started with the arms, thinking that relatively safe, and she helped by rotating them around. Next, he worked over her collarbone and neck. Her breasts were next and his pulse quickened as he tried to be methodical yet efficient.\n\n\"Remember, generous,\" she said, perhaps teasing his discomfort. \"Don't want to burn the girls the first time they've come out to play.\"\n\n\"No, don't want that,\" he said, feeling yet another little twitch in his cock at her word choice. He followed her instructions, though, and gave both breasts another slow pass with the spray. On one breast, the lotion landed a bit thick and she reached up with a hand to spread it around. He was riveted by the way her breast moved under her hand and he could imagine it doing so under his own attention. Those thoughts betrayed his growing arousal, though, and he could feel his cock hanging heavy, on the very brink of becoming erect.\n\nAfter she's smoothed out the spot, he continued spraying down her tummy and hips. Her crotch presented another conundrum as there were all manner of challenging curves and angles for him to attack. She spread her legs ever so slightly, perhaps in acknowledgement that she did need a bit of coverage but still too modest to expose herself fully to him. He hurried through the process, trying to focus on being thorough rather than lingering on what he was looking at.\n\nHer legs, thankfully, were a relatively safe spot, and he knelt to get them. When he finished the fronts, she turned and he worked his way back up the legs to her butt. Her very cute, full butt. With her back turned, he took a quick look down at his cock and noted it was just like what it felt -- close to erect in size, but still pointing more or less down. Was it more embarrassing to be seen nearly erect or shrunken down like after swimming in cold water? He might get the opportunity to test both extremes. There was little to be done about it now, though.\n\nPete finished up her back and shoulders. Amy turned and had him spray her hands so she could get her face and ears.\n\n\"Perfect, thanks,\" she said, taking the bottle from him. \"I'll do you, if you want.\"\n\nHe considered turning her down, but she looked expectant. He had a horrible, sinking feeling that his near-erection would stand at full attention by the time she started spraying him down there. What could he do, though? Did she really expect he would be able to restrain himself?\n\n\"Yeah, sure,\" he said, turning so she could start with his back.\n\nPete felt a cool tingle as the mist of sunscreen landed across his shoulders and the back of his neck. He extended his arms out and she made quick work of them before proceeding down his back and butt. Was she checking him out as he had her? How could she not? What he didn't know was what she thought about his naked body.\n\n\"Okay, turn,\" she said. He did, fully expecting to find her attention on his cock, but instead she had risen back to standing and looked him in the eye. She gave him a quick smile and began working over his chest.\n\n\"I was thinking we could do lunch next, if you're hungry,\" she said. \"That'd give the sunscreen a little time to dry. Then maybe a dip in the pond.\"\n\nIntentional or not, Amy's casual conversation served to get Pete's mind off his embarrassment and maybe even diminish his arousal slightly. \"Yeah, sure,\" he said.\n\nThen the cool mist made direct contact with his cock. He glanced down and saw her giving him a thorough spraying, and the attention made him twitch. She flinched ever so slightly at his involuntary reaction and he could feel his cheeks burn.\n\n\"Do you, uh, want to lift it up, maybe?\" Amy glanced up and he could tell she was just as flustered as he by their proximity and the nature of the request. \"Should probably make sure it's covered on all sides.\"\n\nHe gulped. Whether she was just being pragmatic or secretly wanted to see him touch his cock, he had to agree that getting full coverage was for the best. With this kind of attention, though, they could do nothing else for the next half minute and he'd probably be fully erect and pointing to the sky, allowing her to easily reach all sides.\n\n\"Good thinking,\" he said. He lifted his cock by the tip, exposing the underside to his friend. She gave it a quick spray and then continued down his legs.\n\n\"Hands,\" she said, standing. She seemed to be doing a much better job than he of adapting to the unprecedented circumstances. He held out his hands and she gave them a quick spray so he could cover his face as she had done.\n\nFinished, Amy dropped the sunscreen back in her bag and held her arms wide, turning to face the sun with eyes closed. \"I gotta say, this actually feels kinda good. Weird, but good. I like the feel of the wind on my skin.\"\n\nPete closed his eyes and faced the sun as well, making a conscious effort to shift his focus outward rather than get lost in his internal struggles. She was right, the breeze touching his body, especially now that it felt cooler with the damp sheen of fresh sunscreen, was amazing. It was particularly noticeable on his genitals, but not in a sexually stimulating way.\n\n\"Yeah, it is nice,\" he said. \n\n\"Thanks for doing this with me,\" she said. He opened his eyes and found she was looking at him. \"I'm sure it'll be one of our more memorable holidays.\"\n\nPete chuckled. \"That's an understatement. Wait, you're gonna have to put this on your blog, aren't you?\"\n\nAmy had been documenting their journey on her blog. Many entries were little more than a title stating the holiday she'd chosen and a picture to show what they'd done. Some were more detailed and in a few cases, like appreciation holidays, the entire celebration had been in the writing of the post. If she mentioned Nude Day, it would be assumed they had gotten naked together. If the blog was entirely anonymous, that would be one thing, but several of their friends and family were following their adventure.\n\n\"Uh, I haven't really decided how to handle that one yet,\" she said, clear from her tone that she had some of the same reservations as him. \"We'll worry about it later. No pictures, though. I can promise you that much.\"\n\n\"Whew.\"\n\n\"Well, no pictures published, anyway,\" she said, winking. \"Maybe a couple for my own use.\"\n\nPete opened his mouth, but no words came out. She burst into laughter and patted him on the shoulder. \n\n\"You should see the look on your face,\" she said. \"What, you don't want me taking nude pictures of you? Or you just don't want me 'using' them?\"\n\n\"Uh...\"\n\nShe sighed and then turned and knelt beside the cooler. \"Relax. I'm just messing with you. A bit. You look fine. Nothing to be ashamed of and maybe a picture to remember this by wouldn't be all bad. But not if you're uncomfortable.\"\n\nPete wondered at what she had in mind. She was the one who hinted at ulterior motives for a picture, so it had to have at least crossed her mind. He knew if he had a naked picture of Amy, it would be put to good use -- repeatedly. Maybe letting her take a picture wouldn't be so bad if he could have one as well.\n\n\"I'll think about it,\" he said, kneeling beside her and helping prep lunch by taking containers as she unloaded the cooler. \"But only on the promise we never let anyone else see them. And we both get copies.\"\n\nAmy paused to raise an eyebrow at him. \"Oh, I see. You want a naked picture of me. Can't imagine what a guy would do with one of those.\"\n\nPete felt his entire body flush. He probably looked like he'd already burned under the sun's intense rays.\n\nAmy burst out laughing again. \"Geez, I'm just messing. If we can't make fun of each other about this, then it's going to be a really long day. Or a really short one.\"\n\n\"Sorry.\"\n\nAmy gave him a sympathetic look. \"Don't. I'm sorry if I made you uncomfortable. I don't want that. I want the opposite. I want us to both be us...talking shit and giving each other even more. Like usual. I'm naked, you're naked, and we don't have to pretend we're not.\"\n\n\"Agreed,\" he said, nodding. \"I'm still just getting used to the idea. You at least had some time to mentally prepare yourself.\"\n\n\"Fair enough,\" she said, handing him a container of potato salad. \"And, if you really want a picture of me, I can't think of anyone else I'd trust with it. Even if I know what you'd probably do with it.\"\n\nPete knew she was testing him, probing to see if he'd crumple or fire back like normal. He steeled his nerves.\n\n\"Ah, I get it now,\" he said.\n\n\"What?\"\n\n\"This was all just some grand scheme to get a naked picture of you in my possession.\" Pete laid it out as if he were Sherlock explaining the mysteries of a case to Watson. \"You're jealous that I jerk off to pictures of other girls and couldn't find another way to get me wanking to you without it being painfully obvious that was your intent. So, conveniently, you found a way to get naked and a built-in excuse for us to 'document' the event. Very clever, but I see through your ploy, missy.\"\n\nAmy stared at him with mouth open. The way she blushed, Pete wondered if he might not have hit a little closer to home than he'd realized.\n\n\"Well, shit,\" she said, regaining her composure. \"You saw right through it all. Damn.\"\n\n\"Uh huh. Try to fool me, will you?\"\n\nAmy sighed melodramatically. \"I'll know better next time. So, just to be clear, you don't want a naked picture of me, then?\" \n\nPete did, but he didn't want to sound all pervy about it. \"Well, seeing as it would make you happy if I had one, then I suppose I could take one. For your sake, of course.\"\n\n\"Way to take one for the team, there. So chivalrous.\"\n\nPete, already on his knees, bowed his head dramatically. \"I live to serve, m'lady.\"\n\nAmy chuckled. \"Well, don't forget this lady wants your picture, too. My handmaidens and I will titter over it for days.\"\n\n\"M'lady's handmaidens?\" Pete worried that she meant to show it to friends, though she'd already agreed they would be kept private. That and he couldn't think of any other friends she would trust with something like this.\n\n\"Well, maybe more like my man-servant. Singular.\"\n\nPete gave her a puzzled look. He was pretty certain she didn't have a boyfriend or some other guy friend on the side. \"Man-servant?\"\n\n\"Chuck. You've never met.\"\n\nA wave of jealousy washed over Pete, leaving him feeling more humiliated than he had when first undressing. Who the hell was Chuck? \n\nAmy gave him a wry grin, apparently picking up on his discomfort. \"Don't worry about Chuck. He doesn't talk much. And he's small. Pretty good at scratching a certain itch from time to time, but that's about it.\"\n\nPete got the sense she was having great fun putting him on. \"Okay...\"\n\nShe rolled her eyes and sighed, probably surprised that he wasn't getting her joke. \"He's pink, about the size of a small cucumber, and is a lot more fun when you shove a couple batteries up his bum.\"\n\nPete felt a renewed flush of embarrassment to go along with his relief. Chuck was apparently her pet name for a vibrator or dildo of some sort. She'd never mentioned having any toys before, but sex had always been a topic they skirted around. He wondered briefly about the name she'd given the toy, as Chuck was often short for Charles, which she knew was his middle name. Was it too much of a stretch to think she'd nicknamed a dildo after him?\n\nAmy held her hand over her eyes and winced. \"Ah, the light bulb just turned on!\"\n\nPete groaned. \"Ass.\"\n\nAmy winked. \"No, no. Chuck's never gone there before.\"\n\n\"I can't believe we're actually talking about this,\" he said. That much was true. Yet, at the same time, he was glad they were breaking down some of these long-standing barriers. Perhaps it signaled a prelude to breaking other barriers? He was having trouble reading her signals.\n\n\"We're friends and adults. No reason we can't act like it.\"\n\nThey settled into lunch and safer conversation. Amy had certainly put some thought into the meal, preparing one of his favorites -- ham and swiss with Dijon mustard -- and rounding it out with potato salad, fresh cut strawberries, and sparkling pear juice in plastic cups. He was surprised at how quickly he'd settled into their nudity as being almost incidental. Sure, he still checked out her breasts on occasion and peered toward the trimmed fuzz leading between her legs (otherwise hidden from view as she sat on one hip with her legs pressed together), and he caught her glancing down at him as well, but the nerves and mortified embarrassment were gone. They were still the same two friends they'd always been.\n\n\"Excellent lunch, thanks.\" Pete patted his stomach and rolled onto his back with a sigh.\n\n\"You're welcome.\" Amy tucked the last of the leftovers into the cooler and shut the lid. \"I know we're supposed to wait like an hour or something before swimming, but I could really stand to cool off a bit. I mean, look at this -- boob sweat!\"\n\nPete couldn't help but look as his friend drew her fingers down through the valley between her breasts, collecting the sheen of perspiration. He felt a slight twitch in his otherwise now safely soft cock. Much as he enjoyed watching Amy touch herself, he was feeling the heat as well and a dip sounded wonderful.\n\n\"Not boob sweat! Can't have that.\"\n\n\"Only one thing worse than boob sweat...\" Amy flicked her fingers at Pete, though if any of her sweat hit him it was too little to notice.\n\nPete grinned at her insinuation. \"Are you sure that's sweat, or are you just happy to see me?\" The words snuck out of his mouth before he had time to consider the consequences.\n\nAmy's eyes went wide, then she gave a short snort. \"Wouldn't you like to know?\"\n\nPete breathed an inward sigh of relief. She hadn't gotten upset at his suggestive joke. Which was more remarkable -- that he'd said it or that she took it?\n\n\"We'll just pretend it's sweat, for your sake.\" Pete, grinned and then hurried to his feet in case he had to beat a hasty retreat.\n\nAmy rolled her eyes and made for the water. \"Just watch that potty mouth of yours. If you cramp up and start drowning, I'm not sure I could bring myself to give you mouth to mouth.\"\n\nA retort popped into Pete's head as he followed her into the pond. Should he or shouldn't he? The mood felt right and he decided to press his luck.\n\n\"Well, if that's the case, just remember there's more than one way to blow a guy.\"\n\nAmy, almost hip deep, froze and turned on him, jaw hanging. It took her a few moments to recover. \"You'd like that, wouldn't you?\"\n\nPete couldn't quite read the tone of her voice. She wasn't pissed -- he could at least tell that much. He shrugged. \"Maybe. Never tried it before.\"\n\nAmy's expression remained unreadable, almost neutral. She glanced down at his cock, now slightly tumescent at the turn of the conversation, and then looked away, walking further out into the water. \"Maybe someday you'll find out.\"\n\nPete felt a little guilty. Had he put her on the spot? Made her too uncomfortable with the thinly veiled suggestion? She could have taken the opening and pushed back, further escalating things. But she turned away instead. He worried that he'd screwed something up.\n\nThe water, as he'd hoped, was just cool enough to feel very refreshing. It was a bit murky, to be expected for a pond, which was slightly off-putting, but the sand extended out quite a way and felt better under his feet than the slimy mud or weeds he'd half expected. As he caught up with Amy, deep enough that the water was kissing the underside of her breasts, Pete began to marvel at the novel sensation of his cock being unconstrained underwater. Liberating was the best word he could think of for it, and he knew it would spoil him for future swimming where suits were required.\n\n\"Wow, this feels nice,\" he said, sinking in to let the water reach up to his neck.\n\nAmy dunked in as well, removing her breasts from sight. She sighed. \"Yeah, it does. I'm starting to think those nudists might be on to something.\"\n\n\"Are you one of the converted, then?\"\n\nShe faced him, only a couple feet separating them. \"I don't know. Maybe. I mean, I think I could see myself doing this again. At least with you. I'm still not sure about having a bunch of strangers around.\"\n\nPete nodded in agreement. \"Yeah, same. At least it's easier on you, being a girl and all.\"\n\nAmy arched an eyebrow at him. \"What's that supposed to mean?\"\n\nPete expected that response when he'd phrased the statement. \"Well, girls are a heck of a lot better looking naked than guys. Less to be self-conscious about.\"\n\nAmy threw her head back and laughed. \"Oh, you think so, huh? Less self-conscious? Have you never heard a woman complain about her body before?\"",
        "\"Of course I have. All the time. It's just, well, most of them are wrong and it's all self-inflicted. I think most women are beautiful. Perfect isn't required.\"\n\nAmy studied him long and hard and Pete did his best to maintain a sincere, neutral expression. He'd meant ever word he'd said and he desperately needed her to believe it. He knew perfectly well that she fit into the typical woman category regarding body image and, perhaps more than anything else today, he'd been proud of her for finding the confidence to expose herself before him.\n\n\"It's a nice thought, but easier said than done.\"\n\nPete shrugged. \"Well, you certainly have nothing to be self-conscious about. Not a damn thing.\"\n\n\"Thanks,\" Amy said, her voice barely a whisper. She did crack a tiny smile, though, which warmed Pete's heart.\n\n\"I still don't buy your premise, though,\" she continued. \"I mean, guys don't care what they look like.\"\n\nPete groaned. \"Oh, we do. We're just less likely to complain to others about it. Think I wasn't scared to death of showing off my skinny, pasty white body?\"\n\nAmy waved him off. \"Nonsense. You look good. Okay, maybe a bit pale, but we're working on that, right?\"\n\nPete smiled. \"Maybe. And then there's the worrying about...it...making its presence known at the worst possible time.\"\n\nAmy gave him a sly look. \"I did wonder about that. I noticed you've managed to keep things under control.\"\n\nPete felt his cheeks flush a bit. Well, at least it was out in the open now. Maybe it would be easier to deal with his insecurities if she was understanding of it.\n\n\"So far,\" he said. \"And barely.\"\n\nAmy's expression softened. \"Well, I'd be lying if I said that I would be offended if I had that effect on you. Makes an insecure girl feel a little better about herself.\"\n\nPete recognized the vulnerability she was exposing and knew this was most definitely not the time to crack a joke. Well, not too much of one.\n\n\"If I'd known that, maybe I wouldn't have spent the first half hour freaking out about what my body was trying to do against my will.\"\n\nAmy smiled and nodded. \"How about neither of us freak out if something comes up, okay?\"\n\nIn spite of the fact they were talking about him getting an erection in front of her, Pete actually felt more at ease. It was out in the open and that made it so much less daunting. \"No freaking. Got it.\"\n\n\"It's a totally natural thing, right?\" Amy said. \"No sense making a big deal out of an erection. I mean, boners happen. Guys get stiffies at the most inopportune times. It's just the nature of the one-eyed trouser snake.\"\n\nPete gaped at the words coming out of her mouth. So much for being sensitive about the subject. But, deep down, he knew that this was better. \"Yeah, something like that...\"\n\n\"Who's to say what really causes a ding dong to go to full staff? A morning glory to become wood? Man's best friend to turn into a raging pocket rocket?\"\n\n\"Okay, I think we get it,\" Pete said, shaking his head in amazement.\n\nAmy, grinning evilly, pressed on. \"Just because you can use your tent pole to sling custard...\"\n\nPete splashed Amy in hopes of distracting her from the unrelenting barrage of embarrassment. She ducked, futilely, and returned verbal fire. \"Ever consider trimming the hedges around the old twig and berries?\"\n\nHe splashed harder, eliciting a joyous shriek as Amy got completely soaked. She retreated a step and retorted with, \"Can we roast hot dogs tonight with your poker?\"\n\nHe lunged for his friend and wrapped her in his arms, not unaware of how he had a forearm pressed across her breasts. She struggled, but it was a half-hearted effort at best.\n\n\"Enough, vile wench!\" he cried.\n\n\"Oh, fine!\" she said. \"No hot dogs, just your mighty salami!\"\n\nPete felt his cock, the target of her mirth, brush up against her hip. He was, indeed, nearing the multitude of conditions she'd named and wondered if she recognized the contact for what it was or just dismissed it as his hips. Under the circumstances, he didn't much care if she knew it or not.\n\n\"Is there an end to all this?\" he said, pulling her closer.\n\n\"What? You gonna try to stop me with your fun gun?\" She wiggled in his grasp, to all appearances having entirely too much fun in the process. \n\n\"I might,\" he said. That got her to pause a moment and Pete thought he saw something in her eyes. Something terrifying and wonderful. In a softer voice he said, \"Or maybe I'll just try this.\"\n\nHe leaned in and placed his lips on hers. Pete had little experience in kissing girls and this was less of a kiss and more of a blocking her mouth with his own -- pure pressure, but gentle. His heart thudded at least three times, each a step closer to him fearing he'd made a terrible miscalculation, while she remained frozen in his grasp. Then she moved, just her lips, and kissed him. That tiniest of motions made him happier than he'd ever been in his life and he kissed her back. \n\nWhile Pete was elated to be kissing Amy, fulfilling a dream he'd harbored for years, he was equally terrified that he might somehow screw this up. What if he was a bad kisser? What if she hadn't really wanted him to kiss her? With every passing moment of locked lips, however, those fears evaporated. He could feel her lips part beneath his and he mirrored in kind, finding her tongue playfully teasing.\n\nTime stopped while they stood there, chest deep in water, unleashing pent up feelings for one another. Pete was vaguely aware of his erection as it poked her hip and the way her breasts mashed into his chest. He resisted all impulses to shift or touch anything, remaining firmly focused on her soft, sweet lips.\n\nAfter some time, they paused for a breather. Still holding each other, their eyes met. In Amy, he saw a reflection of his own relief and passion. She must have wanted this as much as he had. If only one of them had been brave enough to broach the subject.\n\nShe smiled and said, \"Were you planning on doing some spear-fishing, or are you just happy to be kissing me?\"\n\nPete felt himself blush, but he was so flush with arousal it was unlikely she would notice. He just shook his head and leaned in to kiss her again. \"It is Shark Awareness Day. What do you think?\"\n\n\"I think you might poke some poor shark's eye out,\" she said, pulling his head down to kiss him fiercely. He felt her hip push into his erection.\n\n\"So much for thinking a kiss would shut you up,\" Pete said between kisses. \"Maybe I'm not trying hard enough.\"\n\n\"Try as hard as you need,\" she said, her breath heavy.\n\nHe did, and this time it seemed to do the trick for a good while. Pete let his hands explore up and down Amy's back and ultimately her butt. He was reluctant to touch her anywhere more intimate until she made a more overt move, and she seemed perfectly content to just kiss him with her arms wrapped around his waist.\n\nAmy broke the kiss and licked her lips. \"Take me for a little walk?\"\n\nPete thought the kissing was much more fun than a walk, but perhaps she was had something else in mind. If it was with her, he didn't much care what they did. \n\n\"Sure.\"\n\nPete entwined his hand in hers as they waded back toward shore. When the water reached waist level, he was painfully aware of how conspicuous his cock would be -- pointing just above straight ahead. After the relentless, humorous ribbing she'd given him, he expected a renewed bout. To his relief, though, Amy said nothing and barely even seemed to take note of it.\n\nPausing only long enough to don sandals, Amy led them along a narrow path through the long grasses that cut between the pond and the dilapidated cabin. He asked about the trail, since she'd said that no one came up here much anymore.\n\n\"Deer trails, I think,\" she said. \"I imagine they come to the pond pretty regularly to drink. I remember there being these little networks of trails all over the meadow from when we were kids. We'd play tag and other games with the rule that you couldn't leave the trails.\"\n\nThe path was narrow enough they were forced to walk single file. Amy wouldn't let go of his hand, though, so they stayed in very close proximity. He followed her lead, happily watching the sway of her full butt. To his relief, even with the visual stimulation, his erection settled down to a slightly more manageable state.\n\nPete felt he should say something about what happened, find some way to reinforce his feelings for her with something more than a kiss. Cautiously, he said, \"Thanks for kissing me back.\"\n\nAmy paused and turned to face him, instantly making him curse himself for saying something so cheesy. Her expression softened, though, and his fear faded.\n\n\"Thanks for making the first move,\" she said, giving his hand a squeeze. \"You have no idea how badly I wanted that.\"\n\n\"Me too. I was just...\"\n\n\"Too afraid to screw things up?\"\n\n\"Yeah, that.\"\n\n\"Me too.\" She shook her head, but smiled. \"Can you imagine how things would be different if one of us had said something last year? A couple years ago?\"\n\nPete shrugged. \"It could have been great. Or, maybe we weren't ready and would have screwed things up.\"\n\nAmy raised up on her tip toes to kiss him. \"I like that idea. Makes me feel like less of a fool for burying my feelings.\"\n\n\"Then it is so.\" He kissed her back.\n\nShe resumed their walk. Over her shoulder, she asked, \"I know you never had a girlfriend and only went on what, one or two dates. Was that because of me?\"\n\nPete shrugged, but realized she wouldn't see the gesture. \"Some, yeah. I guess I did compare everyone to you and they always came up short. That and I wasn't very confident asking girls. And you?\"\n\n\"Same, mostly,\" she said. \"Guys didn't ask me out. I used to think it was because I wasn't attractive enough, but Becky said something to me a couple weeks ago that set me straight.\"\n\n\"What's that?\"\n\n\"She said that because you and I spent so much time together in high school, everyone pretty much assumed we were already a couple. Guys figured there was no point in asking me out.\"\n\nPete saw the reason in that. \"A couple of my friends asked about you. Us. I think at least one might have been interested. But even after I told him that you and I weren't dating, I think he was still put off by our friendship.\"\n\nShe glanced over her shoulder. \"Well, I think you were worth the wait, however it happened.\"\n\nPete's heart swelled. He had no doubt about their friendship, and it seemed impossible that adding love on top of that could make things worse. He could think of a lot of ways it could make things better.\n\nAmy, having led them almost to the opposite side of the pond, found a game trail that led into the woods and took it. Pete didn't inquire as to whether she knew where she was going. She seemed confident enough and he was curious as to where they would end up.\n\n\"This is it, I think,\" she said, her pace quickening. \"Been a long time.\"\n\nThe trees were clearly thinning out ahead of them, but it didn't appear to be another grassy meadow. Rather, it seemed empty beyond the trees and underbrush. As they got closer to the edge, he realized why -- they were atop a bluff overlooking a dozen or more miles of rolling woods, hills, and farmland.\n\n\"Proclamation Point,\" Amy said, pushing through the last stretch of undergrowth until breaking free onto a flat, bare rock that jutted out over the bluff. The vista was impressive while the view down was daunting -- nearly two hundred feet almost straight down to a meandering stream lined with old growth trees. \"That's what my dad called it, anyway.\"\n\n\"Hell of a view,\" Pete said, reluctant to get too close to the edge.\n\n\"I think I was too young to really understand what the name meant back then, but now I get it.\"\n\nAmy let go of his hand and turned to face the vista. She spread her arms wide, took a deep breath, and shouted out for the world to hear. \"I have a boyfriend! And he's the greatest!\"\n\nThere was no echo and the gentle buzz of insects scarcely missed a beat at the interruption. Pete, however, knew that while she's shouted the words to the world, they were really meant for him. This was about exposing one's truths and, in their case, maybe a bit more.\n\n\"When do I get to meet him?\" Pete said as she turned back to him. She rolled her eyes, but still gave him a lingering kiss.\n\n\"Dork,\" she said. \"You want a turn?\"\n\nPete took a tentative step forward, still wary of the drop even though he was a good four feet from the edge. He was surprised to find that he felt more self-conscious about yelling out some truth than he was in standing naked high on a bluff where anyone down below could see him. And what was he going to say?\n\nHe went with the first thing that popped into his head. \"I am an idiot for waiting so long to reveal my love for Amy!\"\n\nShit! He'd just said love, less than half an hour after their first true kiss. Would that seem a bit premature or needy? He was afraid to turn around and see Amy's reaction.\n\nShe placed her hands on his arms and turned him around. There was nothing on her face but joy.\n\n\"But you're my idiot,\" she said, her voice barely a whisper. She pulled him down into a kiss.\n\n\"Woohoo! Congrats you two!\"\n\nPete's heart skipped a beat at the distant voice yelling out, clearly to the two of them. He was so startled at the revelation of having been overheard that he forgot about their nakedness. Amy, however, pressed herself fully into him to hide and immediately looked for the source of the voice.\n\nDown on the stream, having just rounded a corner, were a guy and girl floating side by side in tubes. They were too far away to tell much about them aside from guessing they were probably in their twenties, each in swimsuits and hoisting beverages in their general direction. There was no chance the pair missed their nakedness, but at least they hadn't made any crude comment about it.\n\nPete, one arm still wrapped around Amy, waved back at them. \"Thanks!\" \n\nAmy burst out into giggles and dragged him away from the edge and back into the cover of the woods. He could only imagine the vision they presented to those below -- two pale butts vanishing after having been caught in a slightly compromising position. They would surely have a good laugh about it later.\n\n\"Sorry,\" Amy said. \"That's the first time I've ever seen anyone from there.\"\n\n\"It's fine,\" he said. \"It's not like they knew us.\"\n\n\"Of course it had to happen when we're naked.\"\n\n\"Wouldn't be much of a Nude Day if no one else saw us, right?\"\n\n\"Sure,\" she said, sighing. \"Speaking of being naked, I think we'd both better get another dose of sunscreen on. I know I certainly don't want anything getting burned.\"\n\n\"Lead on, girlfriend.\" \n\nShe glowed at his first use of the word. \"Happily, boyfriend.\"\n\nHand in hand, they emerged from the shelter of the woods back into the hot sun of the meadow. He was half tempted to suggest they move entirely back into the woods, but the mosquitoes had managed to quickly find them any time they stopped moving. Another dip in the pond was certainly on the table, too.\n\nBack at the little beach, Amy dug into her bag and came up with a tube of sunscreen and tossed it to Pete. He noted that this was different from the aerosol spray they'd used earlier -- this kind had to be rubbed on. The implication was not lost on him. She laid on her stomach on their blanket and said he could do her first.\n\nShe closed her eyes and turned her head to face away from him. Pete knelt beside her, squirted a glob on his hand, and began to work it over her neck, shoulders, and back. Where previously this would have felt a bit too intimate an act to share with a naked friend, he now savored the chance to run his hands over her body. Her sighs were encouraging and he took his time, turning the application into a brief massage.\n\nHe worked over her arms and then down her sides. Her breasts were flattened under her body, squeezing just a bit out to the sides. He didn't reach that far down, but his attention was drawn to them and his cock began to swell again at the thought of touching her there. Would she expect him to do her frontside as well?\n\nPete applied the cream across her lower back and then over her butt cheeks. He was alert to any sign of having overstepped his bounds, but Amy didn't react to his touch. He worked a bit quicker and was careful not to go too far down between her legs. It might have been his imagination, but he thought she might have parted her legs ever so slightly as he covered her.\n\nWith her butt done, Pete moved down to her feet and began working his way up her legs, massaging her calves and then thighs. While his hands were doing all the work, he couldn't help but look up between Amy's legs. The lips of her labia were just barely visible between the shade and the trimmed fuzz. That little glimpse was more than enough to bring his cock to full staff. He knew she would eventually see it and figured, at this point, she had no reason to be bothered by the response she evoked in him. He ran his hands up the inside of her thighs just until the edge of his fingers brushed against her pussy, then he retreated.\n\n\"Think that covers the back,\" he said, leaving it to her to decide if that was all or if he was to continue.\n\nAmy rolled over, her eyes remaining closed. The corners of her mouth tilted up ever so slightly, though, and she settled in with the clear expectation that he should do her front side as well.\n\nAlready by her legs, Pete began the front from the bottom up. As he approached her pussy, he decided to just be quick but thorough. He ran his fingers through the thin fuzz and down the cleft between her legs, feeling the yielding folds and a hint of dampness. His touch caused Amy to gasp silently, but she neither opened or closed her legs any further from where they already were. Pete ran his fingers up along the other side, giving her another quick flutter while making sure it was sufficiently covered.\n\nHe moved to her side and noted how his cock, jutting straight out, cast a shadow on her tummy like a sundial. He couldn't help but chuckle a bit at the thought.\n\n\"Something funny, mister?\" Amy's tone suggested she wasn't suspicious or irritated.\n\n\"Sorry,\" he said. \"Just making shadow puppets on your stomach.\"\n\nAmy cracked her eyes and clearly saw what he meant. She just shook her head, groaned, and closed her eyes again. \"Dork.\"\n\nPete squirted out another glob of sunscreen and worked it over her tummy and up her sides. He avoided her breasts, flattened out to the sides under their own weight, and took care of her arms, shoulders, and neck. Each stroke of his hands, though, ultimately got closer and closer to the twins, and Amy's breathing seemed to grow increasingly labored.\n\nFinally, with nothing left to cover, Pete rubbed a fresh dollop of lotion between his hands and ran them up over both breasts from the bottom up. Slow, smooth, his palms slid over her hard nipples. He marveled at the shape, the juxtaposition of soft and firm, the subtle texture of the darker nipples. Amy must have enjoyed the attention as she moaned softly and laid there patiently while he took his time exploring.\n\nIt was still new territory to Pete, but he knew that girls' nipples were usually the most sensitive part. Not knowing what she liked, he cautiously began to focus his attention on them -- rubbing his fingers just around the tip, then lightly across, and ultimately giving each a gentle pinch.\n\n\"That's nice,\" she said, sighing and stretching out her arms and legs. \"But if we don't get some sunscreen on you, you'll be a disagreeable lobster for the next week.\"\n\n\"Can't have that,\" he said, only slightly disappointed to have to stop.\n\n\"Lay down,\" she said, taking the lotion from him and rolling up to a sitting position beside him.\n\nFollowing Amy's lead, he sprawled out on his stomach. His erection was pinned underneath him, doing nothing to ease its condition. She wasted no time in getting sunscreen spread across his neck, shoulders, and back -- her efforts landing somewhere between quick application and massage. He savored the contact of her fingers on his skin, like energy was being passed between them. She covered his butt, doing so in the same efficient manner he'd done hers, and then covered the back of his legs.",
        "\"Okay, flip,\" she said.\n\nPete obeyed, quite conscious of the way his erection flopped against his stomach. He saw her attention go to it briefly, but she was quickly back to working on his legs. He couldn't help but wonder if or how she would deal with the object of her earlier amusement.\n\nUnsurprisingly, Amy rubbed lotion on his hips but mostly avoided his cock as she worked her way up his frontside. She did brush against the side of it briefly while covering his lower abdomen, and even that tiniest of contacts caused him to twitch involuntarily. Her lack of conversation spoke volumes.\n\nPete's own attention turned back to Amy as she rubbed his chest and arms. She leaned over him to do so and her breasts swayed just a scant distance above. He resisted the urge to reach up and touch her, or to even just brush her leg or hip. It was her turn to do the touching. \n\nAmy looked down and him and smiled. \"What?\" He realized she must have caught him staring.\n\n\"Sorry,\" he said. \"Just...it's a heck of a view from down here.\"\n\nAmy gave him a dirty look, but clearly in fun. She leaned over him further and shook side to side.\n\n\"Like I said.\"\n\nShe chuckled. \"Yeah, well, the view from up here ain't so bad, either.\"\n\nHaving covered everything else, Amy slid back down and knelt beside his hip. With dramatic effect, she squirted a large dollop of lotion into one hand, set aside the bottle, and rubbed both of her hands together.\n\n\"Definitely can't leave the old battering ram unprotected,\" she said.\n\n\"No ma'am.\" \n\nHis cock twitched again in anticipation, causing her to laugh. \"Jumpy little guy, isn't he?\"\n\n\"Excitable.\"\n\nAmy bit her lip, still surveying his manhood. \"You know, I haven't touched a guy like this before. I don't want to do anything that might be...uncomfortable.\"\n\nPete was relieved to hear her concerns. He wasn't worried about her hurting him, but rather it was nice to know she was every bit as eager and nervous as he.\n\n\"Don't worry,\" he said, patting her on the leg. \n\nAmy took a breath and reached out with both hands. One hand tenderly cupped his balls while the other ran along the length of his shaft. Pete sighed and forced the rest of his body to relax. It was considerably nicer having someone else touching him for a change.\n\n\"That feels nice,\" he said, encouraging her. \n\nShe smiled but never took her eyes off his cock. The fingers wrapped around his scrotum massaged in the lotion and it was clear she could feel his testicles as she gently began to test their size and shape. With her other hand, Amy rubbed lotion around each side of his cock and then over the tip with her thumb.\n\nPete closed his eyes, focused entirely on the physical sensation. Moments later, though, Amy froze. He looked back up at her. \"What?\"\n\nShe gave him a neutral look. \"Well, I think I got everything.\"\n\nPete felt his heart drop. With her hand wrapped around his cock, she was going to stop just like that? Then she cracked a big smile, letting him know she was messing with him.\n\n\"Unfortunately, I have way more lotion on my hands than I needed.\" Amy batted her eyes at him as if it was a horrible oversight on her part. \"I mean, you're big and all, but... What do you think I should do with it?\"\n\nPete felt himself flush. He could scarcely believe Amy was talking to him this way, and yet on another level it seemed perfectly in her nature. Things were definitely going to be different between them.\n\n\"Well, huh.\" It occurred to him he could probably suggest she rub it on her breasts and she would, but he knew they both had something else in mind. For all he knew, she'd planned all of this out, even down to what she would say at this very moment. No sense ruining it by trying to be cute. \"I really don't want to get burned down there. Maybe you should just keep working it in? Little extra won't hurt.\"\n\nAmy smiled. \"If you think that's best.\"\n\nShe resumed moving her fingers, the one hand fondling his balls while with the other she began sliding up and down his shaft. Between the squishy sound and smooth effort, he realized she really had gotten far more lotion on her hands than necessary. Intentional? He suspected so.\n\nThe sensation, now that she was focused on stimulating him, was unbelievable. There was nothing she did that was any different from what he'd done to himself, but not knowing exactly what was coming next -- speed, length of stroke, pressure of touch -- made the experience far more intense. That it was being done by his best friend, and because she wanted to please him, pushed it over the top.\n\n\"Am I doing it right?\" Amy couldn't be that concerned about her efforts, since Pete couldn't help but moan contentedly and thrust his hips into her hand.\n\n\"Are you sure you've never done this before?\"\n\n\"Only in my imagination.\"\n\nPete knew the feeling. He'd done a great many things with Amy in his imagination; things he hoped to soon reap from his mind's fertile fields.\n\n\"Oh yeah? You've imagined this?\"\n\nAmy began stroking him just a little bit faster and with a touch more pressure. It was either beginner's luck or natural skill, because Pete could feel the orgasm building quickly.\n\n\"Many times,\" she said. \n\nPete lost himself in the rising tension and Amy seemed intent on bringing him to a climax. As his breathing grew shallow and ragged, she upped her pace yet again. Then, with the hand that had been wrapped around his balls all this time, she rubbed a slippery finger down his perineum and across his sphincter. That contact, completely unexpected and far more sensitive than he'd ever realized, was the trigger that pushed him over the top. He thrust his hips up into her hand and felt pulse after pulse throb through his cock while her hand held him firmly.\n\nAfter the last pulse and several breaths later, Pete let his weight settle back down on the blanket. He looked up at Amy and found a cat who ate the canary grin on her face.\n\n\"Acceptable?\"\n\n\"Oh my god... That?\"\n\n\"I read that one online somewhere,\" she said, shrugging. \"Guess it worked, huh?\"\n\n\"Yeah. Wow.\"\n\nPete watched as Amy released her hand from his shaft and ran her fingers lazily through the mess he'd left all over his stomach. Her other hand, still wrapped around his balls, massaged him gently.\n\n\"That was so cool,\" she said, sounding every bit like his old friend. \"Especially the end, there. The look on your face, the stuff shooting out. Definitely better than my imagination.\"\n\nPete chuckled. \"Yeah, no argument here.\"\n\nThey looked at one another, hands gently touching the other, basking in the glow of their newly expressed feelings. There was still that awkward sense that comes with unfamiliarity -- what was proper to do or say next? \n\nAmy raised up on her knees. \"How about a quick dip? Cool off and, uh, rinse off.\"\n\nPete agreed and rolled up to his feet, slightly embarrassed by the mess on his stomach as it began to run down his sweat and sunscreen glistening skin. Amy took his hand and led him out until they were nearly chest deep in the refreshing water. He gave his stomach a good wipe to help clean up.\n\nAmy wrapped her arms around Pete and pulled herself in close. \"Are you happy?\"\n\nPete blinked. \"You need to ask?\"\n\nAmy shrank for a moment, but smiled. \"Sorry. I'm just, well, I'm waiting for the bad news to come. I'm never this lucky.\"\n\nPete pulled her in tight and kissed her. \"I've never been happier, thanks to you.\"\n\nShe kissed back hard and opened her mouth to Pete. He joined her and they experimented with a wide variety of kisses and licks and nibbles.\n\nWhile their lips remained locked, Pete ventured a hand up to Amy's breasts and resumed the exploration he'd begun earlier with the sunscreen. The fullness of her breasts was a perfect fit in his hand. She moaned and pressed into him each time he focused his attention on her nipples, so he stuck with that.\n\n\"Use your mouth,\" she whispered in a ragged voice after breaking off their kiss.\n\nPete was more than eager to obey. He sank down in the water until his chin brushed the surface of the water. Holding a breast in one hand, he placed a gentle kiss on the top and then began to work his way down. Amy lifted her chest to meet his mouth as he continued to pepper her with light kisses in a circle around her hard nipple, just grazing it with the edge of his lips.\n\nAmy moaned and wrapped her fingers through his hair, pulling him in closer.\n\nPete kissed the very tip of her nipple, teasing. When she pulled his head in harder, though, he relented and opened wide, taking it into his mouth and latching on. He ran the flat of his tongue across the nub, like licking a lollipop, only the taste...\n\n\"Ugh!\" Pete recoiled, sputtering.\n\n\"What?\" Amy sounded horribly disappointed, a sentiment Pete understood all too well.\n\n\"Sorry! That sunscreen. Oh my god does it taste awful!\"\n\nHe felt bad for not being able to suck it up, literally and figuratively, and keep at it until her nipple was clean. The reaction had been reflexive, though, and it was too late to undo the damage. Fortunately, Amy just burst out laughing, far from offended by his brutal honesty.\n\nShe cupped his face in her hands. \"Well, we certainly don't want to turn you off from sucking my nipples.\"\n\n\"No, definitely not.\" Pete looked in disappointment at the two nipples hanging just above the water -- so close and yet so far.\n\n\"Why do you think I only gave you a handjob?\"\n\nPete looked up and met the twinkle in her eyes. \"You wanted to...?\"\n\nAmy grinned. \"Of course. But when you have less sunscreen on.\"\n\n\"Right.\"\n\nAmy took his hand and pulled him up and after her as she made for shore with purpose in her stride. \"C'mon. I've got some baby wipes in the bag. Then you can pick back up where you left off.\"\n\nPete appreciated her good-natured humor and candor about the situation. \"I think this is exactly why the real thing is nothing like porn.\"\n\n\"Awkward? Clumsy? Messy? And so much more fun?\"\n\n\"Yeah.\"\n\nAt the blanket, Amy dug out her wipes and gave both of her breasts a thorough working over. Just watching brought some life back to his cock, but his focus remained pointedly on giving her some measure of pleasure in return for the hand job. Satisfied, she tossed the wipe aside and laid down on the blanket, patting the ground beside her.\n\n\"Okay, I need a taste tester to make sure I'm all clean. Volunteers?\"\n\nPete shook his head as he knelt beside her. \"We're such dorks, you know.\"\n\n\"What was that movie we watched, where the woman had poisoned lipstick? Maybe an assassin could have poison applied to her nipples instead. Less likely to ingest it herself, right?\"\n\nPete ran his fingers across her nipples, not that they needed any additional stimulation. \"Should I be worried?\"\n\n\"Can't speak for what's in the sunscreen, but otherwise, no.\"\n\n\"I wonder if there's work in that field, like a king's food taster testing for poison. The king would need someone to kiss and lick his lovers first, just to make sure they're clean.\"\n\nAmy smiled. \"I bet you'd like that job, huh?\"\n\n\"Does sound pretty cushy.\"\n\n\"I'd leave your options open. But, in the meantime, why don't you start training?\"\n\nPete leaned over and took one of Amy's hard nipples into his mouth without the teasing kisses first. He could still pick up and hint of the sunscreen and maybe a little something else from the wipe, but within a moment they were almost undetectable. He sucked and used his tongue to flick across the tip.\n\n\"Mmmm... Poison or not?\"\n\nPete disengaged only long enough to answer. \"Verdict's still out.\"\n\nHe returned to working over her nipple with a mixture of kissed, licking, and sucking. Amy closed her eyes and responded with little more than heavy breathing, whimpers, and sighs. Pete savored those responses and constantly tweaked his technique in trying to make them stronger.\n\nAmy took one of his hands in hers and dragged it down to her crotch. He happily took her lead and slid his fingers across the curve of her pubic mound, smooth with sweat, sunscreen, and her soft, trimmed fuzz. Stretching further, he finally felt the slit between her legs, slick with arousal. He ran his fingers up and down the length, exploring the folds of her labia.\n\n\"Mmmm...yes...\" Amy spread her legs wider at his touch and removed her hand from his, allowing him to do as he wished. She, meanwhile, reached out and teased her fingertips along the underside of his engorged cock.\n\nPete, still uncertain what to do in the unfamiliar territory, gently pressed his middle finger along her slit until it sank deeper and ultimately inside Amy's pussy. She was gloriously wet, slippery, and tight. He wondered at how accommodating she would be of his cock if and when they reached that point. Responding to her thrusting hips, he slid his finger in and out several times. He vaguely recalled something about hooking his finger to stimulate her g-spot and gave it a try. He couldn't tell any difference between one spot inside her and another, but she didn't appear to be bothered by his change in approach.\n\nNeeding to shift his weight, Pete relinquished his lip lock on Amy's nipple and laid beside her. She was more than eager to resume kissing with a healthy dose of tongue while he continued to finger her pussy. He could feel her hand wrap around his cock, though she seemed more inclined just to hold on than in stimulating him.\n\n\"Little higher,\" Amy whispered. \n\nBefore Pete could worry about how to interpret that, she placed her hand over the one he had buried inside her and pulled it up and out. She directed his fingers to a spot just above her slit -- her clit, he presumed -- and guided him in rubbing along and around that little area. Once he got into the rhythm, she let go of his hand, her head rolled back, and she began moaning openly. Watching her response to his touch washed away his concerns about being up to the task of bringing her pleasure commensurate with what she'd given him.\n\nFor several minutes, making slight adjustments in his technique and pace in response to her body language, Pete found the sweet spot. Amy, half talking and half gasping, urged \"more, more.\" She rode his fingers to an all-encompassing orgasm, gasping when it hit and clamping down on his hand with both her hands and her legs. He got the impression that she couldn't handle any additional stimulation, so he just left his hand locked in her grasp and watched in adulation the changing expressions on her face.\n\nAmy's body finally relaxed and Pete ran his released hand gently up her sweat-soaked tummy and across her breasts. She turned to him and gave him a long kiss.\n\n\"You don't suck,\" she said.\n\n\"Gee, thanks,\" he said, kissing her again.\n\n\"So worth the wait.\"\n\n\"Let's hope the next wait isn't so long.\"\n\nAmy rolled onto her side, pressing her breasts into him while throwing a leg over his. She gave his cock, pinned between them, a playful squeeze. \"What, impatient already?\"\n\nPete responded by giving her butt a gentle swat. \"If you were in my position, with this gorgeous, wonderful girl in my arms, you would be too.\"\n\nAmy kissed him. \"Watch it, mister. Talk like that might get you laid.\"\n\nHe looked her in the eye and said, \"Threaten me like that, missy?\"\n\nAmy wagged her eyebrows at him, then pushed him back slightly. \"Hand me my phone, will ya?\"\n\nPete groaned, but rolled over and reached into her bag, fumbling around until he found her phone. He rolled back into her arms and handed it to her but she wouldn't take it.\n\n\"You have longer arms,\" she said. \"You take our picture.\"\n\nPete thumbed to selfie mode and held the phone above them to get their faces together in the picture. It was too bright to tell if it was any good, but they were at least centered. They took several, smiling and laughing and then kissing.\n\n\"Hold it further back,\" she said. \"Can you get our bodies into the pic?\"\n\nPete gave her a look. \"You want nude selfies?\"\n\n\"I want to remember this day forever,\" she said. \"And we're hiding all the good bits by laying like this.\"\n\nPete conceded the point and reached out as far as he could and tilted the camera down. The camera was able to capture from the top of their heads down to their hips -- plenty enough to prove they were both naked while pressing together face to face.\n\n\"Good?\" He showed her the picture.\n\n\"I like.\" She gave him a kiss and then rolled onto her back. \"How about another?\"\n\nPete realized they would both be fully exposed to the camera. He was a little nervous about that, especially given that he was still quite erect, but he liked the idea that Amy would have the picture. He trusted her enough to know that it wouldn't go beyond the two of them. He lined up the picture and took several -- including the last in which she reached out and took his cock.\n\n\"You're distracting the photographer,\" he said.\n\n\"Is that a problem?\" Amy waved for him to hand over the phone with her free hand. She held it near his cock which she posed in an upright manner for the camera and took at least a couple pictures.\n\n\"Really?\" He was more amused by this point than self-conscious.\n\n\"In case I need to file a police report for missing property.\"\n\nPete sat up and groaned even as Amy retreated, laughing. \"Your property now, huh?\"\n\n\"Uh huh. No one else better touch it. Well, except for you, when I allow it.\" There was an evil glint in her eye when she said it that both gave Pete a thrill and set off alarm bells.\n\nPete lunged at Amy and snatched her phone back away, though he didn't get the sense she was putting up much of a fight. She just rolled away onto her back while he knelt above her. He lined up a photo that captured her entire body in a rather flattering manner -- laying back while propped up on her elbows, legs tastefully closed.\n\n\"I should be using my own phone for these,\" he said as he captured several images of his girl.\n\n\"I'd ask if you needed it for personal gratification later, but I'm hoping you won't have enough left after I'm done with you.\"\n\nPete still marveled at how comfortably Amy had integrated an openness to sexuality to her playful and taunting personality. However she'd managed it, he appreciated the way it took the edge off his own nerves. Even better, it sounded like she was far from being done with their playing with one another.\n\n\"Well, you can't be with me twenty-four seven,\" he said, snapping another as she twisted onto her hips to give him a profile shot of her breasts.\n\n\"Maybe if you ask nicely, I'll share,\" she said. \"Or even send you some new ones.\"\n\n\"Smut peddler!\"\n\n\"And you're, what, a connoisseur, I suppose?\"\n\nPete gave her a wink and then glanced at her crotch, still hidden away between closed legs. \"I clearly have excellent taste.\"\n\nAmy clearly picked up on his subtle glance. She laid back and began to spread her legs. Just as her pussy began to come into view, though, she reached down and blocked the view with a fully extended middle finger. He took a picture anyway.\n\n\"Spoilsport.\"\n\nShe blew a raspberry at him. \"A connoisseur prefers tasteful.\"\n\n\"Most of the time.\" \n\nHe set her camera aside and knelt in between her legs. As he leaned forward, her hands retreated and wrapped around his shoulders. He kissed his way up from her belly button to her breasts, lavishing each with loving attention, and then worked his way up her neck until finally meeting her waiting lips. At that point, even while holding himself above her with an extended arm, he could feel his cock as it brushed along the short fuzz on her pubis.\n\n\"I'm all yours, Sneaky Pete,\" she said between kisses, her voice softening.\n\nPete was more than ready to take her, but that nagging little worry about pregnancy threatened to steal his mojo. The last thing he'd thought to bring on their excursion had been condoms.\n\n\"I didn't, uh, bring...\"\n\n\"Blast shield?\"\n",
        "She wrapped her legs around his thighs, pulling him in closer. \"Don't worry. Internal protection mechanisms have been deployed for a couple months now.\"\n\nPete realized she must have been planning something like this for a while now, probably tired of waiting and hoping that he would break their awkward stalemate. Had he missed signals earlier? Perhaps. That was a conversation for another time, though.\n\nAmy reached down between them and guided his cock to the proper spot. She wiggled him around a little bit, a slippery stimulation right on the tip that was almost painful in its intensity. When she stopped and held him still, he gently thrust forward. The folds parted to his penetration, a smooth and constant pressure enveloping him. In the back of his mind, his subconscious' cheering section went crazy -- he'd just crossed the line between virgin and...non-virgin. As wonderful as that distinction was, it was a hundred times better that it was with Amy and not rushed or frantic or (too) awkward. It was just right. Perfect.\n\nHe nudged just a little further in, perhaps an inch or two, and met Amy's eyes. Her smile beckoned him onward. There was no doubt that she was sharing many of the same feelings as him.\n\n\"You don't have to worry about hurting me,\" she whispered. \"Chuck took care of that a while ago.\"\n\nIt took Pete a moment to process what she'd implied about her toy and he blushed and laughed all at once. Even now, on the cusp of that magical union, she was still Amy through and through. He pushed in further until he could go no deeper, and the sensation of being completely engulfed in her was sheer bliss.\n\n\"Lucky bastard,\" he said, settling more of weight on Amy and kissing her.\n\nAmy purred. \"I think we're the lucky ones right now.\"\n\nPete, slowly at first and building as he became comfortable and familiar with the process, made love to his best friend. No cheesy porn music started playing -- only the chirps of birds and insects serenaded them. They didn't try half a dozen different acrobatic positions, each with an increasing degree of difficulty sufficient to test an Olympian's resolve -- missionary all the way, baby! At the end, there was no earth-shattering simultaneous climax -- Pete came and Amy just rode a pleasant wave, after which she chastised him for his complete failure and demanded he keep at it every single day (or several times a day) until he got it right. He gracefully accepted his punishment. And when they were finished, cuddled side-by-side, they were not ready for an after-glow romantic close-up -- hair was disheveled, bodies were blotchy red with sun and exertion, and they dripped in sweat. A happier couple was nowhere to be found on this 195th holiday at that very moment.\n\n\"You know, I think this was better than National Burrito Day,\" Amy said, running her hand over Pete's chest while settling her head on his shoulder.\n\n\"Canadian Maple Syrup Day might have given it a run for its money, if not for the weather cooperating,\" Pete said, brushing the back of her hand.\n\n\"Eat Ice Cream for Breakfast Day. Hard to top that, but I think this might have edged it out, too.\"\n\n\"Close. Very close. So, what's tomorrow?\"\n\nPete could feel Amy grin. \"Oh, tomorrow's easy. You'll love it.\"\n\n\"Let me guess. Repeat Yesterday Day? I'd be down with that.\"\n\nAmy chuckled. \"Oh, I can't imagine why. But, sadly, no.\"\n\n\"Oral Sex Awareness Day?\"\n\n\"Nope. But if there isn't one, we might have to start it.\"\n\n\"Don't Get Out of Bed Day?\"\n\nAmy nudged him in the ribs. \"One Track Mind Day?\"\n\n\"Fine, I give up. What is it?\"\n\n\"Seriously, it's our day. It's perfect.\"\n\n\"So tell me already.\" Pete twisted, giving her an impatient look.\n\n\"Be a Dork Day.\" She, somehow, managed to maintain a straight face.\n\n\"You're so full of it.\"\n\nAmy grabbed her phone, pulled it up, and showed him. Sure enough, right behind National Nude Day was July 15 -- Be a Dork Day.\n\n\"Well, okay then. I'm calling shotgun!\" "
    ],
    "authorname": "WatchingCloud",
    "tags": [
        "nudity",
        "his first time",
        "male virgin",
        "swimming",
        "public",
        "picnic",
        "friends",
        "nude day",
        "holiday",
        "sunbathing"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/holiday-195"
}