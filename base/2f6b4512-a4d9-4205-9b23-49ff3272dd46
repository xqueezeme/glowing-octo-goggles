{
    "title": "Jeff Thousandaire Ch. 02",
    "pages": [
        "***\n\n-- CHAPTER 2: Architectural Connections --\n\n***\n\n*MONDAY*\n\n\"Good morning, boss.\"\n\nI looked up from my computer. \"Good morning, Melody,\" I answered easily. My eyes flitted to the clock. She was right on time for a Monday morning.\n\n\"Coffee? Your usual?\"\n\n\"Thanks, that would be great.\" I relaxed into my chair as the pretty blonde nodded and headed out. Maybe everything would be alright, despite the animosity she'd been showing last Friday. Maybe we would be back to normal.\n\nA few minutes later, I heard the hollow knocking on glass as Melody returned with my coffee. I watched her legs in the tight skirt as she circled around the desk, setting the mug down next to the keyboard and then leaning back against the desk. \"So? Did you sleep with her?\"\n\n\"Huh?\" My hand stopped halfway to the coffee mug and I turned in surprise. I hadn't been expecting that question.\n\n\"Did you?\"\n\nMy eyes answered before I could verbalize anything. Taylor Brynn had sex with me... ME. Taylor-fucking-Brynn, international supermodel, billionaire socialite, and all around gorgeous sexpot, had fucked me, and even brought her beautiful assistant into our bed. I could already feel my chest swelling with obscene pride. Even if it never happened again, I would always have that memory. I started drawling, \"Well...\"\n\nBefore I could finish my sentence, Melody's hand whipped out lightning quick and then I felt my head rotate to the side with the impact.\n\nI winced in pain but managed not to yell, instead holding my own hand to my quickly reddening cheek as I faced her with a look of disbelief. \"What the hell was THAT for?\"\n\n\"Can you honestly tell me you DON'T think you deserved that?\"\n\n\"What?\"\n\nShe slapped me again, this time on my other, unprotected, cheek.\n\nThis time I squalled, \"Oww!!!\"\n\nMelody just got up in a huff, muttering, \"MotherFUCKer...\" And with that, she left my office and plunked herself heavily into her own chair.\n\nSo much for back to normal.\n\n***\n\nAt five o'clock, the hollow rapping on the glass stirred me from my stupor. Gradually, my head pulled out of the virtual design world and I managed to focus across my desk to the door.\n\nMelody was still standing outside, but with her head through the open doorway. \"Come on, we're going to O'Brien's.\"\n\n\"But I-\" I gestured to my computer.\n\n\"*NOW*,\" Melody growled, and then pulled her head back and closed the door. Through the clear glass, I could see her turn away and start packing up her purse.\n\nMelody was not my girlfriend. She was my subordinate. She worked for me. She had no right to be giving me orders and then walk away expecting my compliance. I WAS THE FUCKING BOSS HERE.\n\nAnd yet I rose from my seat, grabbed my jacket, and went out the door to join her. As I came through the door, she turned to walk in front of me and led the way to the elevators, never looking back. She always did have me wrapped around her little finger.\n\nWe were silent through the whole ride down and the short walk to the pub, and a sense of foreboding started to creep down my spine. Melody's demeanor was all ice queen, standing aloof from me, not looking in my direction and generally radiating get-the-fuck-away-from-me signals. If we didn't resolve this... whatever... and soon... it was going to make our worklife unbearable.\n\nMelody's attitude completely changed the moment we got to the pub. We caught sight of our friends, who had already snagged a booth, and with a bubbly smile Melody scampered over. \"Hey guys!\"\n\n\"Gawd, I hate Mondays...\" Frank, the draftsman, sighed immediately as he nursed his beer and sank lower into his seat.\n\n\"You say that every week,\" Erica, the admin, scoffed.\n\n\"Enjoy these Mondays while you can, Frank,\" Melody warned. \"Once this Kwong project gets rolling you're going to have more work than you know what to do with.\"\n\n\"Aww, Mel. You know JUST how to cheer a guy up,\" George complained before chugging the rest of his beer and then burping loudly. \"Now I'm going to need another one of these.\"\n\nOur other two coworkers just grinned and we all settled down. It took me a minute, but once I got comfortable everything started to flow and I settled in for a relaxing afternoon. I was especially relieved when midway through our evening, Melody slipped her hand onto my thigh beneath the table. Again, I started to believe that despite our awkwardness, Melody and I would be alright in the long run.\n\nWhen it was time to leave, I briefly toyed with the idea of going back upstairs to work. But just when I was about to make that announcement and leave the group, Melody slipped her hand into mine and leaned over to say, \"We're going back to your place.\" It was not a request.\n\nI glanced down, seeing her baby brown eyes hard-edged... not with desire, but with determination. I nodded in agreement. We did nothing to hide that we were getting a cab together. This group of friends had figured out months ago that we were banging each other.\n\nStill, most of the times Melody and I had shared a cab, she had her hands all over me as if she couldn't wait to strip me naked. This night, she simply gripped my hand as if holding me on a leash lest I try to get away.\n\nShe held onto me all the way to my apartment. Once we got inside, I found myself at a slight loss over what to do. We were fuck-buddies. Every time we got into an apartment alone together, we were usually sucking each other's faces, hurriedly getting to the main event so we could be on our way within thirty minutes or so.\n\nBut the urgent lust wasn't there this time, and since I wasn't sure what to do, I simply went through my usual routine of depositing my keys and hanging up my jacket.\n\nI turned back to Melody, and then that stinging pain was once again on my face and my whole body had been twisted to the side with the force of impact. \"Oww!!!\"\n\nI was holding my cheek and if her hand wasn't already rocking me back on my heels, Melody's mood swings would be enough to give me whiplash. \"What???\" I cried.\n\n\"How could you sleep with her?!\" Melody was already on the verge of tears. \"You said nothing was going to happen.\"\n\n\"I didn't think anything was going to happen!\"\n\n\"But something DID. You fucked her!\"\n\n\"I never promised I wouldn't!\" I rubbed my sore jaw and righteous annoyance flared inside me. \"Am I missing something? Did we agree to be exclusive and I just forgot?\"\n\nShe didn't answer my question. Instead she just yelled, \"Why? Why'd you do it?\"\n\nMy eyes were wild and my volume went up to match hers. \"Because! She wanted to! I wanted to! It just happened!\" Melody had laid out the rules a long time ago. I didn't own her and she didn't own me.\n\nShe sputtered a little more and paced my room, waving her hands in frustration. But at least she wasn't hitting me anymore. She growled through her teeth and once she finally turned to face me, her eyes were aflame and she exclaimed, \"You fucking CHEATED on me!\"\n\n\"*I* cheated?\" I couldn't believe what was happening. Not two weeks ago, the night we'd won the design contract, I'd broached the idea of stepping up our intimacy. I'd been willing to move in the direction of a real relationship with Melody and she'd shot me down cold. But now? Now that *I* might *dare* to sleep with another woman she wanted to play the scorned girlfriend? This was just unfair and I was getting pissed. \"What do you call that kid in the mail room? And don't tell me you didn't boink Sanderson after the Christmas party.\"\n\nShe tossed her hands aside. \"You keep bringing up the mail room intern! Those were one-time hookups. Those don't count!\"\n\n\"Then what do you call this? How many times did I hook up with Taylor? One time!!!\" I shook my index finger in her face. And then frustrated, I took two steps away. \"Don't you get it? You don't OWN me, Mel. We-\" I waved my hands back and forth between us. \"-don't get to tell each other who we can and cannot fuck.\"\n\nThe pretty blonde's eyes went wide and her jaw clenched as she got right up in my face. \"Get this. You fuck Taylor one more time and you're never touching me AGAIN.\" And with that, she gave me a healthy shove to the chest. \"You got that?\" she raged.\n\n\"Melody...\" I sagged. I didn't want to give Melody up but the thought of being with my goddess again was just too enticing. \"Be reasonable...\"\n\n\"You're such a fucking MAN,\" she spat. \"Words or not, titles or not, didn't you think I was special? I thought I meant more to you than just that.\" She paused and started pacing away fro me. \"FUCK, Jeff! We've been fucking for six months! I've swallowed your cum more times than I can remember! Doesn't that count for something? You can't just screw me every other day for six months and think it's not going to MEAN something!\"\n\nI sighed. \"Isn't this EXACTLY what we didn't want? All the hassles and expectations and obligations of a relationship?\"\n\nAt her wit's end, Melody moaned and turned away from me, her back bending like a willow in the wind. She clamped her hands onto her head and spun around, finally staggering over to the couch and sitting down heavily. Half of the tension in the room evaporated as she sat down.\n\nI took a deep breath, calming myself as blissful silence reigned for just a brief while. When I felt like I could speak without yelling, I went to her. \"Mel... What's going on? I never thought you'd react like this.\" \n\nShe wore a haunted expression I'd only seen once before: the morning after we'd spent the night together. It was a look of desire and fear and utter confusion all at the same time. \"I don't know. I wasn't expecting to feel like this. We were good. We were friends. We had our benefits. I guess... I guess I just got used to having you all to myself.\"\n\n\"I don't belong to you, Mel,\" I said softly, laying my hand on hers and ever alert in case she tried to hit me again.\n\n\"Don't you?\" she asked, her voice cracking.\n\nI sighed. \"I'm not supposed to.\"\n\n\"I know,\" she sniffled again. \"But I can't help how I feel. I'm fucking jealous of her.\"\n\n\"Why? You didn't seem to have a problem when Mary down in accounting was flirting with me last week. And after that kid in the mail room, you flat out told me you wouldn't begrudge me a hookup of my own.\"\n\n\"But you never DID. In six months, I was your only one. And then Miss fucking- gorgeous-supermodel had to go and show up. You think I don't see the big fucking poster of her in your bedroom? And that gorgeous sketch? Why do you think I wanted you to sketch ME so badly? You made me look so incredibly beautiful! That PROVED something, didn't it?\"\n\n\"YES! Alright, dammit. YES! I care about you! You are a dear friend to me, Mel, and like it or not, what we have shared together has changed us!\" My emotions burst out. \"I want to see you happy, but Melody...\" I hung my head and sighed. \"Do you want to start dating? Do you want to be my girlfriend? Do you want that kind of commitment?\" \n\n\"NO!\" Melody cried. \"I just want things to be the way they always were...\"\n\n\"Meaning what? We're just fuck-buddies with no ownership of each other? You can do what you want and I can do whoever I want and we can just come together for a good time every once in a while?\"\n\n\"NO! I want...!\" She started shaking. \"I want... I want my freedom but I want you to only be mine! Okay! There! I said it!\"\n\nI exhaled loudly, my shoulders sagging as I finally came to a realization. If we couldn't make a commitment to each other, mutually, and if we couldn't continue the way things were with freedom on both sides, then Melody and I were just a disaster waiting to happen. If she really just wanted to have her cake and eat it to, I would only end up resenting her for it. \"I'm not your beck and call, Mel,\" I said coldly but quietly.\n\nShe didn't answer. Instead, she just stared at some point away from me and trembled.\n\nI sighed and pinched my forehead, feeling a massive migraine coming on. \"Maybe it's best that we stop now. Mel, I can't give you what you want, and I don't want to hurt you. It was great while it lasted, but-\"\n\n\"FUCK YOU!\" Before I could react, Melody had slapped me again, my jaw still sore from the last times she'd smacked me. The pretty blonde before me choked, her eyes trembling. She looked stricken, as if I had just run over her beloved cat or something. The tears tumbled forth, and this time, she got up, grabbed her jacket, and fled out my door, sobbing the entire way.\n\nI gripped the coffee table beneath me and hung my head. This was baaaad.\n\n***\n\n*TUESDAY*\n\nThe next day, Melody never came to her desk.\n\nShe didn't call in sick or send me a text message. She simply didn't show up. I figured she was mad at me or otherwise unable to face me in the office. So I got my own coffee and went to work; there was simply too much to do. Besides, this was for Taylor, and there was no way I could disappoint Taylor.\n\nBut by lunchtime, I started to worry. I called Melody's cell, just to make sure she wasn't dead in an alley somewhere, but after a few rings the call went to her voicemail. Mildly starting to panic as my brain dreamt up further worst-case scenarios, I called Erica, one of Melody's best friends and another admin with the firm.\n\nErica quickly reassured me. \"She's here, Jeff. Just... well, it's complicated. Sit tight, okay? But she's alright and she's in the building. I'm sure she'll be talking to you later this afternoon.\"\n\nAnd so I relaxed. I wanted to puzzle over Melody's little mystery, but Jonathan Kwong wanted stables on the property, something about how Cassandra Cooper always loved horses, and I had to make the new building.\n\nI actually left for lunch since I didn't have an admin to pick up a sandwich for me. And I had just returned and was settling back into my work when a hollow knock sounded off by the door.\n\nI looked up and Sheldon was walking into my office, followed by both Melody and Erica.\n\nThe balding man stood up to his full height and glared down at me. \"Jeffrey, I'll get to the point. I don't pretend to know EVERYTHING that's going on but I understand that you and Melody are having... well... a relationship that is inappropriate for your positions.\" Sheldon's diction was clipped and formal, and from his posture he seemed to be speaking on behalf of the company's laws, and not from his own personal opinion.\n\nI waited for the inevitable bad news, something perhaps along the lines of \"You're fired.\" But fortunately it didn't turn out that way.\n\n\"As such, it is the board's decision that the two of you be separated from your current working relationship. Neither of you will be disciplined, and should you choose to pursue this relationship, you will be able to do so without violating any further rules governing interpersonal behavior.\" He arched an eyebrow at me with a little grin. \"Please keep your frolicking OUTSIDE of the building.\"\n\nI realized then that Sheldon was under the impression I was going to start dating Melody. She was standing behind and to the right of him, nodding in agreement with everything he said. Just what had Melody told him?\n\n\"Now, obviously the Kwong project is an extremely high priority to the firm, and we can't leave you without a replacement admin. I assume you already know Erica?\"\n\nYeah, I just had a beer with her last night at O'Brien's. \"Uh, yes we are acquainted, sir.\"\n\n\"Splendid! Erica is being assigned as your new admin, effective immediately.\"\n\nI glanced over at the pleasant-looking brunette. Erica shrugged, the look in her eyes clearly saying 'I don't know any more about this than you do.' I figured it was just a coincidence that out of all the other admins in the firm, they were pairing me with someone I knew.\n\nSheldon continued. \"Also, Melody will not be assigned new responsibilities until we are sure that the handover is running smoothly. She will be training Erica until you deem it no longer necessary, understood?\"\n\n\"Yes, sir.\"\n\n\"Well, that's that. Carry on.\" Sheldon spun on his heel and left.\n\nI looked back and forth between the pretty blonde and the more comely brunette. Melody turned and smiled at her friend. \"Wow, this was unexpected, but quite cool. This is a good move for you, Erica. This project is VERY high-profile.\"\n\n\"What am I getting myself into?\" the brunette asked.\n\n\"Don't worry, I'll train you on EVERYTHING. Piece of cake.\" Melody looked over the both of us. \"Everything will be EXACTLY the same as when I was running things.\"\n\n\"One thing will certainly be different,\" Erica declared.\n\n\"What's that?\"\n\nErica turned and smiled at me. \"Jeff, I will NEVER give you a blowjob in this office.\" She grinned and Melody blushed.\n\nI just raised an eyebrow, a smart-assed remark already on my lips. \"What about outside this office?\"\n\nErica rolled her eyes. \"You really want to go down the sexual harassment road?\"\n\nInstantly, I was defensive. \"Hey! You started it!\"\n\nErica smiled and waved me off. \"It certainly will be interesting. Anyways, I'm going to head back to my cube. I've got to start packing.\" And with that, my new admin left the room.\n\nThis left Melody and me together and alone for the first time since last night's implosion. I let my amused grin disappear as I looked at her intensely. \"Mel, what's going on? You told Sheldon we're dating?\"\n\nShe pinched her lips together and shrugged. \"I can't help how I feel, Jeffie. And I thought about it a lot last night... about us. Don't you see? This is how it has to be. We can't be employer/admin anymore. I can't just fetch your coffee or sandwich and take orders from you. Not after last night.\"\n\n\"So... what, that whole thing with Sheldon was just a ruse to get yourself reassigned away from me? You don't really want to start dating?\"\n\n\"It's... it's complicated.\" Melody looked at the floor, clearly looking like she'd rather be anywhere but in my office at that moment. She sniffled just once and then composed herself. \"I'd better start clearing out my desk.\"\n\nWith a little frown, the pretty blonde turned away and went to the door. She stopped just before grabbing the handle and said, \"Look. We'll talk later, alright?\"\n\nAnd before I could say anything else, she left the room.\n\n***\n\nThe feminine ass in my hands was absolutely perfect. The hips flared prettily around perfectly-shaped tight globes. The skin was milky white and unblemished save for the red blush where my hand had been spanking her.\n\n\"God, Taylor, you are so fucking hot...\" I groaned as my cock pistoned in and out of her body. I could stare at this sight all day.\n\n\"I know...\" she answered confidently, then moaned once again. \"Spank me again...\"\n\nImmediately, I let fly with my left hand, leaving a faint red imprint on her buttcheek that quickly disappeared. I absolutely adored that this gorgeous supermodel would let me spank her. It was kind of a fetish of mine. There was no heat in my slaps, but the jarring sensation certainly spurred Taylor on even further. We were back in her guest bedroom, just the two of us this time, and as I felt her wondrous pussy walls clasping at my naked rod, I felt like I was in heaven.\n\nIt had been 1pm when Taylor called my cell phone and demanded I come over to their apartment and fuck her. I'd thought her fianc\u00e9 was back in town, but she assured me he was in LA for business.\n\nI'd barely gotten any work done the whole day. I was lost in my thoughts, staring through the plate glass to watch Melody as she puttered around showing Erica where everything was. Had we made the right decision to cut things off? Should I have probed to find the real depths of her feelings for me? Should I have pressed her harder for a relationship? Did I even WANT a relationship with her anymore?\n\nTaylor's call had been like a burst of cold wind that blew aside all the clutter in my mind. The thick haze in my brain cleared out and all that was left was the burning desire for my raven-haired goddess, rooted deep inside me from the time I was fifteen. Between my flaming lust and Taylor's husky pleas, I readily agreed to meet her.",
        "Melody and Erica were poring over something on the computer. I simply strode past them, curtly informing the two admins that I was going out for a couple of hours and would be back late in the afternoon. Then it was a short cab ride to Kwong's apartment building.\n\nUpon arrival, Edward simply took my jacket and then escorted me directly to the guest room. Two minutes after that, Taylor strode in wearing nothing but a silk teddy and a skimpy thong.\n\nA few minutes after that, Taylor was moaning, \"Spank me again...\"\n\nWith my hands gripping her hips and my cock rhythmically plunging in and out of her juicy snatch, Taylor rapidly climbed up to orgasm, shrieking loud enough that I swore I could heard her scream echoing down the hallway. And when she came down from her high, she slowly stopped and I sat back on my heels, resting for a moment and ducking my head down to take a taste of her feminine juices. I reveled in the power trip as my goddess wriggled her sensitive clit on my tongue.\n\n\"Ooh, you're almost as good at that as Charlotte...\" Taylor giggled, craning her head around and flashing her eyes at me.\n\n\"I can't help it. You taste so delicious.\" I moved back and kissed the globes of her asscheeks. \"Mm... and you have a PERFECT ass...\" I rubbed it lovingly.\n\n\"Do you wanna fuck it?\" Taylor grinned.\n\n\"Hm?\" I sat up.\n\n\"Fuck my ass, Jeffrey. Sink your big, fat cock up my little asshole. I want to feel your spunk swimming around in my bowels.\"\n\n\"Holy shit!\" I gasped, my eyes wide in disbelief. My goddess, my dream, was asking me to bugger her ass.\n\nShe wriggled the object of my desire in my direction and then pointed to the nightstand with her left hand. \"There should be a bottle of lube in the drawer.\"\n\nI'd been backing away from my orgasm after Taylor's climax, and my cock had softened slightly while I was licking her. But now I was back at full mast and my hard dick wobbled in the air as I clambered over to the nightstand. I fondly remembered the blindfold and handcuffs in there, but rooted around until I retrieved the lube. Sitting back up, I poured a healthy dollop into my hands and started rubbing them for warmth.\n\n\"Don't baby me, Jeffrey. Oil yourself up and then just shove the nozzle into my ass and squeeze. I can't wait any longer to feel your dick up my tight asshole!\"\n\nI was dizzy again. I don't think anyone's mind is set up to be blown this many times. Taylor was absofrigginlutely the sexiest, naughtiest, most seductive vixen in the frikkin' universe. I did as she said, coating myself and then squirting a few globs of lube directly through her anus.\n\nShe wriggled her hips at me again as I settled into position, nudging my mushroom head forward and gasping when it popped through her sphincter more easily than I'd expected. Taylor then backed herself up, impaling me to the hilt up her rear entrance. \"Fuuuuuck!\" she growled.\n\nI just breathed shallow breaths, trying to absorb every little sensation, for certainly this would be the last time I would ever feel something like this again.\n\nStill on her knees, Taylor ground her ass against me, carving my rod inside her bowels as she panted lustfully. And then she sat up straight, her back arching to me as she reached around, grabbed both my hands, and planted my palms on her round tits.\n\nI still had some lube on my palms, and she directed me to begin rubbing her. My fingers took over from there, instinctively squeezing and massaging her mammaries while she began to buck her ass back at my dick.\n\nWe were almost vertical, kneeling on the bed with Taylor between my thighs as we humped each other. I used her slickened tits as handholds to guide Taylor's gyrations, experimenting to find every possible angle with my dick up her ass.\n\nTaylor's mouth gaped open the whole time as she whimpered and panted constantly, her eyelids fluttering as she soaked up the pleasurable pain while I split her asshole wide open. And I was just enjoying the ride.\n\nTaylor's ass was so tight, so hot, and I felt like I was melting in a sauna from the heat. I had no concept of control, and I already felt my orgasm boiling in my balls.\n\n\"Oh, Taylor! Oh, Taylor!\" I groaned.\n\n\"Fuck me, fuck my ass. Cornhole the hell out of me, Jeffrey!\"\n\n\"Taylor! Taylor!\" I whimpered just before the bubbling explosion inside of me let loose.\n\n\"Cum! Cum in my ass!\" She cried.\n\nAnd then I detonated. Volley after volley of jism flew out of me, blasting away into Taylor's rectum while she continually wriggled her butt in my crotch. I felt the blissful relief settling into my brain after the third shot and then I felt her internal squeeze as Taylor found a release of her own.\n\nLike a locomotive coming to a halt, we pulsed in unison, bouncing up and down but moving slower and slower and slower until my butt hit the bed and we stopped, my cock still embedded up Taylor's backdoor.\n\nMy muscles relaxed and my head lolled forward onto Taylor's shoulder, and she simply clutched my palms to her big tits as we both panted for oxygen. Then Taylor laughed, \"Thanks for coming... and for cumming...\"\n\n\"My pleasure,\" I answered her honestly.\n\n***\n\nThe residue from her scented shampoo gave off a wonderful fragrance. The feel of her body molded to mine, as if there were a trillion points of skin-to-skin contact between us, was absolutely incredible. Our simple embrace felt almost as pleasurable as my greatest orgasm. She smelled so good and I never wanted to let her go; but when Taylor released her grip behind my back, I knew I had to.\n\nStill, I didn't let her completely out of my grasp. I just leaned back and looked into her royal blue eyes. \"Taylor, why are you doing this? With me?\"\n\n\"What, fucking? Because it feels good. Why? Do you want to stop or something?\"\n\n\"No, no!\" I said hurriedly. \"But... where is this going?\"\n\n\"Jeffrey...\" she reached her hand up and rubbed my cheek. \"This isn't going anywhere. I thought you knew that. I love Johnny.\"\n\nI sighed. \"I... I do, I do.\" My mind went back over something Melody had said. \"But... we can't just keep screwing forever without it meaning *something*.\"\n\n\"It won't be forever, Jeffrey. Things will be very different once I'm married. Maybe we can still continue, maybe not. But let's not think about that right now, okay? Just enjoy it for what it is.\"\n\n\"Right, right.\"\n\nShe leaned in and kissed me softly. It was a tender kiss, more affectionate that passionate. And before she pulled away she gave me a firm hug. \"You're a great guy, Jeffrey. I've already found the one for me, but you'll make some pretty young thing very happy one day.\"\n\nTaylor's eyes clicked to the side rapidly and for a second, it was like a lightbulb went off in her head. She quickly looked right back at me with an excited expression on her face.\n\n\"What?\" I was just a little nervous at the eager look in Taylor's eyes.\n\n\"Nothing... architect... I just can't believe I didn't think of it before.\"\n\n\"Huh?\"\n\n\"Oh, you'll see...\"\n\n***\n\n-- KAITLYN --\n\n\"Hi, Taylor!\" I gushed into the phone. \"Are you getting lonely without John? Do you need me to come cheer you up?\"\n\n\"No, no, kitten,\" Taylor laughed. \"I'm doing just fine.\"\n\n\"Hmph, no fair,\" I pouted. \"*Some* people don't have pretty personal assistants to keep them company when John goes away on business. I'm going CRAZY around here.\" For the umpteenth time I wished Lindsay hadn't moved away.\n\n\"Actually, that's why I'm calling,\" Taylor said in a sultry voice. \"There's a... a friend of mine I think you should meet.\"\n\n\"Friend?\" I heard the catch in Taylor's voice. \"How intimately do you know this friend?\"\n\nTaylor started laughing again. \"Well... how can I put this delicately... he just creamed a gallon of spunk up my ass twenty minutes ago.\"\n\n\"THAT'S 'delicately'?\" I giggled. \"Well if *you're* already using him, then why are you calling me?\"\n\n\"Well for one, I can't keep him. And two, I think you and he might have something in common. I can certainly vouch for his bedroom prowess. Some girl has taught him well.\"\n\n\"In common?\" My mind flickered back as I pondered what she could mean by that. \"Wait, is he the design architect you were asking John permission to seduce?\"\n\n\"That's the one.\"\n\n\"Is he cute?\" The last guy Taylor tried to push in my direction was built like a Mack Truck but had the face of a Mack Truck as well.\n\n\"Cute enough, I think.\" Taylor's voice was a little wishy-washy on that point. \"Seems more of a brain than brawn, honestly. But think of it this way, kitten. Even if you don't want to screw him, he'll probably have some architectural connections. Couldn't hurt for your career, Miss I-wanna-design-skyscrapers.\"\n\n\"I've got classes tomorrow. How about the day after?\"\n\n\"I'll call you.\"\n\n***\n\n-- JEFFREY --\n\n\"You take a shower or something?\" Erica asked as I walked back into the office. My hair was indeed still damp after my quick shower at Taylor's place.\n\n\"Something like that,\" I shrugged and then went into my office.\n\n\"Oh, you're back,\" Melody stood up from my desk. She motioned to the computer. \"I was just looking for the guest house file.\"\n\n\"No need to explain,\" I waved her off. It was no problem. Nothing could be a problem. After one of the greatest orgasms of my life, there were few things in this world that could ruin my mood.\n\nMelody stood up straight and folded her arms across her chest. In a stern, lecturing voice, she said, \"Jeffrey, where were you?\"\n\nI stopped dead in my tracks. THAT was one of them.\n\nI sighed. \"That's really none of your business, now is it?\"\n\nI saw the flare of anger rise up in Melody's eyes, and she tightened her arms around her torso while grinding her teeth. But she tamped down on her anger and sighed. \"Fine, fine. I don't own you. I can guess anyways. Look, we need to talk. Alright? I'm not going to give you some righteously hurt speech. We just need to talk, okay?\"\n\nLast night we'd fought over my supposed infidelity to a non-exclusive relationship and Melody subsequently walked out. Today, Melody had went and gotten herself reassigned by Sheldon so that we would no longer be working together. But she and I had never sat down and resolved where we would go from now on. She was right, we needed to talk.\n\nI sighed and checked my watch. Then I looked over to Melody, who was standing tensely with her toes kind of pinched together. I was expecting her to be angry that I'd gone to visit Taylor, but instead she just looked nervous as hell, a rare thing for a girl of her perky friendliness and beauty. \"Let's do dinner. How about that? We'll find a nice restaurant, we'll chat, and go from there.\"\n\n\"Great! Thanks, Jeffie.\" Melody visibly relaxed. \"Oh, and the three of us should sit down tomorrow morning to go over your contact list, okay? Erica will need to know how to prioritize your incoming messages.\"\n\nI relaxed at the innocent comment about doing work tomorrow. At least Melody wasn't planning to murder me tonight. \"Sure.\"\n\n***\n\nThe maitre'd led us to our table. I was tempted to pull out Melody's chair for her, but I tamped down on that chivalrous impulse. It wouldn't do me any good to lead her on any further. I knew what had to be done. We needed to stop sleeping together. We needed to just be friends now, without even those \"benefits\".\n\nOnce we were seated, the pretty blonde reached out and put her hands on top of mine. \"Do you realize that this is our first date?\"\n\nI arched an eyebrow. \"This is a date?\"\n\n\"Fancy dinner, just the two of us, having a conversation about relationships.\"\n\n\"Can't be. We've gone out to dinner lots of times.\"\n\nMelody blushed. \"Always in a group or just some noisy diner. This is the first time we've been alone in a decent restaurant together.\"\n\nI visibly sagged in my chair. \"Mel, I don't want you to get any ideas. You know where I stand. I can't just be your beck and call.\"\n\n\"I know. That's why I feel like I can talk you into this.\"\n\n\"Into what?\"\n\n\"Dating me.\"\n\nI was confused. I sat up straight, leaning forward. \"Excuse me?\"\n\nOur waiter chose that moment to arrive. Melody released my hands and sat up straight. The waiter took our drink orders and then disappeared.\n\nMelody put an elbow on the table and leaned her head into her palm. She looked unbearably cute and she let her tongue run out along her lower lip. \"Do you wanna keep fucking me?\"\n\nMy eyebrows went up. \"Well...\"\n\n\"I do,\" she interrupted. \"You're right, it's not fair for me to think of you as my beck and call, even though that's pretty much how you've been for these past six months.\"\n\n\"No I haven't,\" I protested.\n\n\"Jeff, any time I wanted to get laid I called and you came. That's a beck and call.\"\n\n\"Well...\" I fidgeted. \"But we still had no limitations on each other. You could have flings on the side and I could, too.\"\n\n\"But you didn't. In six months you never had a single fling on the side. I guess I got used to it. And when you finally did hook up with Taylor, I guess I just wasn't prepared.\" She reached out and squeezed both my hands in her own. \"Jeff, I'm sorry for the way I reacted. I realize how unfair it was for me to want my own freedom and demand that you be faithful to me at the same time.\"\n\nI nodded. \"Apology accepted.\"\n\n\"Good. So that brings us back to the question: what do we do now?\" Melody smiled warmly.\n\n\"Mel, I don't want to hurt you, but I'm not sure anymore if I want to take things to the next level with you. Besides, I don't really have TIME for a relationship. My last relationship imploded because I spent all my time working, and this Kwong project doesn't exactly help that situation.\"\n\n\"Who said anything about a relationship? Dating is just... dating. I don't want the complications either. At least, I definitely don't want the living-together-see-each- other-every-night kind of relationship. But Jeffie, I... I'm not in love with you, but you're a great guy.\"\n\n\"Okay...\" I wasn't following just yet.\n\n\"I've done a lot of thinking. We're friends. We're good-looking. We like sex. Okay. But... and here's my proposal... I want to start dating. Nothing serious. In fact, it shouldn't be much different than what we've already been doing for six months, except now we won't have to hide it.\"\n\nJust then, the waiter returned with our drinks. My mind was whirling trying to keep up, and I grabbed my vodka tonic and took a healthy swig. We paused our conversation a minute to order, and once we were alone once again I fixed Melody with an intense look and arched an eyebrow. \"Explain.\"\n\nShe picked up right where we'd left off. \"We keep having sex. Only now we don't have to hide our affection from co-workers. We keep hanging out with our friends at O'Brien's. And afterwards, instead of just screwing our brains out and then going home, maybe we can go for a walk and get to know each other. Maybe I'll stay the night and wake up in your arms. But not every day. And if you've got to focus on your work, I promise I won't try to hold you back.\"\n\nMelody rubbed her foot against my leg beneath the table. \"Of course, whenever I get that little itch... I'm hoping you can make the time for me...\" She grinned and ran her tongue across her lower lip.\n\nI chuckled and felt an involuntary twinge at my crotch. \"You know that goes both ways, Mel,\" I said hesitantly, thinking of all the times I was horny and she just 'wasn't in the mood.'\n\nShe flicked her eyes down. \"I know. And I know I've kind of been a controlling bitch about it, only taking the time out of MY life whenever convenient for me. After that abusive excuse of a boyfriend, I was afraid to let go of any control. Now I'm not saying that I can get in the mood as easily as you do, but... well... we'll work it out.\"\n\nShe sighed and started running her fingertips over the back of my hand, rubbing my knuckles. \"I guess I never really thought I'd lose you, Jeffie. You were like a reliable pet, always there for me. I took you for granted. I'm sorry. It wasn't till I almost lost you that I realized how good I had it.\"\n\n\"And what about commitment?\" I asked softly. \"What you're proposing IS some form of commitment.\"\n\nMelody visibly flinched. She had gotten used to her freedom and she was loathe to relinquish it. Her last boyfriend had simply been the domineering-type and I'd heard more than one bitch session from her complaining about it.\n\nShe took a deep breath and looked at me cautiously. \"I don't want you to try and control me, Jeff.\"\n\n\"I'm not looking to. This isn't a relationship. We're just... dating, right? But I do think we need some ground rules. Are we going to be exclusive?\"\n\n\"I...\" Melody grimaced and looked away for a second. \"Okay, it's not fair for me to ask you to be exclusive if I don't want to be. So no. Really, I want this to be as much the same way we were, only out in the open. We're fuck-buddies with some dates and I'm open to seeing where we go. But for now... I...\"\n\nMelody bowed her head. \"Damn, I'm going to sound like such a slut.\" She picked her head up and her light brown eyes glistened. \"I might want more than just your dick. You know, on the side, keep things interesting. We're just dating, we're not married or anything. Let's be realistic, we're making a relationship based on sex here.\"\n\n\"Fair enough,\" I shrugged. \"I'm not going to try and demand more from you than you want. But you realize that openness has to be mutual.\"\n\n\"I do.\" She nodded.\n\n\"Even Taylor?\"\n\nMelody smirked. \"I'm not worried about Taylor anymore. I've thought about that one.\"\n\nThat brought me up short. Melody had already slapped me at least three times for sleeping with Taylor.\n\n\"I'll be honest. I was scared to death I would lose you to her. But she's just a dream, Jeffie. You've built this person in your head for the past decade, based on your imagination. Taylor's a real-live human being. She's not going to be exactly what you expect. And besides, she's engaged to a good-looking, wealthy industrialist. She's not going to leave him for you. So you'll have your fling and when she cuts you off, I'll still be around.\" Melody said it with such sweetness and warmth that it took me a moment to realize how depressing the thought was.\n\nI still wasn't sure on the best course of action. All the cards were on the table, and everything SEEMED to make sense. But a warning in the back of my head screamed that this had disaster written all over it. We both were making promises that our emotions might not be able to fulfill. Not get jealous? Not get clingy? Like Melody said, we can't control how we feel.\n\nBut it was worth a shot. I'd gotten comfortable with Melody and she was dead- right about one thing: you can't sleep with someone for six months straight and NOT form some kind of emotional attachment. I still wanted to be with Melody. And my body definitely still wanted to keep fucking her. I turned my palm over and beckoned her to slide her hand into mine. \"Okay. I'm willing to try.\"\n\n\"Great!\" Melody bubbled. \"Now where's our food? I'm hungry and I'm horny.\"\n\n***\n\nMelody had her ankles wrapped around my foot by the time our entrees were served. The touch was flirty and it was familiar, and I grinned as we played footsie.\n\nAfter the food was taken away and we were sipping wine and waiting for the check, Melody slipped her hand into mine mid-conversation. I was feeling pleasantly buzzed and comfortable, and made no move to remove her hand. I liked the touch of her fingers entwined with mine, and she barely let go of me until we got back to my apartment.\n\nOnce we got inside, I don't think there was a moment where some part of our bodies *wasn't* touching. Her hands were on my chest as I pulled my shirt away. Our lips were attached as we disrobed below the waist. And after pinning me onto my back across my bed, we were soon pressed even closer together as my shaft ascended upwards into Melody's welcoming pussy.",
        "As her fingers interlaced through mine, our arms guiding our rhythmic thrusting motions, I felt a surprising warmth spread through my body. We weren't just fucking. This wasn't just a booty call. It was something more than that.\n\nI didn't get the same adrenaline rush like when I was banging Taylor, but my lovemaking with Melody right now was far from disappointing. We had always had good sex, else we wouldn't have kept it up for six months. But now the good sex was infused with a tenderness we'd only briefly touched after I'd drawn that sketch of Melody.\n\nMy hands were on Mel's hips. But rather than just use them as handholds to ram her down around my cock, I found myself stroking and caressing. I let my fingertips run along her spine and glide along her arms, and I delighted in hearing her little whimpers of pleasure.\n\nMelody leaned forward, rubbing her tits against my chest, and she kissed my cheek softly. \"I didn't dream it could be this good,\" she whispered into my ear even while her rolling hips maintained their metronomic rhythm.\n\nI had to agree. The rush I was getting from actually making love to Melody, not just fucking her, felt REALLY good.\n\nAnd when I finally released, erupting scalding hot blasts into Melody's pussy, I wasn't just fulfilling the naughty fantasy of sperming my secretary. I was sharing my intimacy with a woman I was very, very fond of.\n\n***\n\nHer laugh was musical and filled with delight. Her angelic face, wide-eyed and innocent, was the picture of happiness as she rolled back and I tumbled after her. Her blonde hair bounced around her face as we continued to play together, our naked skin rubbing up against each other.\n\nAnd then her electric green eyes captured my attention and held it. She opened her mouth and the sound of a million birds singing came out. It was then that I knew I was dreaming... of her... again...\n\nWhat was going on? Just when things were starting to develop with Melody, why was I dreaming of her? I didn't even know her. And since I knew it was a dream...\n\nBlinking, my eyes opened to the darkness. Focus... Jeff. She's just a dream girl. Melody is flesh and blood and here beside you.\n\nI spun in the bed, spooning myself back up to Melody and letting my arm circle over her torso to wrap around her waist.\n\nFocus... Melody...\n\nJust before I fell back asleep, SHE... Kaitlyn... flashed into mind.\n\n***\n\n*WEDNESDAY*\n\nI was awake before my eyelids opened. I could see the haze of light filtering in through the translucent flesh, and after taking a deep breath, I finally opened up to see the sun's luminescence peeking through my window shades.\n\nThere was soft blonde hair on the pillow before me, and as the warm itchiness of feeling started filling my limbs, I realized I was cuddling a warm naked body in my arms. And ohhh... it felt so good just to be able to hold her.\n\nMelody smelled good, and her tight naked ass was wedged over my morning wood. My left arm circled her shoulders and my right hand had been cupping her firm breast in my sleep.\n\nOnce Melody realized I was awake, she gave her butt a wiggle against my erection. Then she turned in my grasp, spinning to face me. \"Morning,\" she said happily.\n\n\"Morning,\" I answered groggily. Melody. Melody. I repeated the name. Focus. \"Mmm...\" I sighed happily and wrapped her up more tightly in my arms.\n\nMelody giggled, \"C'mon, Jeffie. Lemme go.\"\n\n\"No,\" I moaned. \"I just want to hold you a little longer.\"\n\nMelody rolled her eyes. \"You and cuddling...\" She let me hold her for all of five more seconds before she started struggling again. \"C'mon, I've got a better idea.\"\n\n\"What?\" I finally released her from my arms.\n\nWithout another word, Melody slinked down beneath the covers until her head was over my crotch. I felt her warm hand wrapping around the throbbing meat, and then she swallowed half my length into her mouth.\n\nMelody was right. This was a VERY good idea.\n\n***\n\n*THURSDAY*\n\n\"Jeff, Taylor on Line 1,\" Erica's voice came through the speakerphone.\n\nErica herself looked at me through the plate glass wall separating my office from her desk. I simply nodded and picked up the headset, hooking it over my ear. Erica immediately turned back to her own monitor.\n\n\"Hi, Taylor,\" I said casually, half-dreaming about another quickie at her 5th Avenue apartment.\n\n\"Morning, Jeffrey! Why weren't you picking up your cell phone?\"\n\nI looked down at my belt and rolled my eyes. \"Sorry. I turned it off for a meeting this morning and forgot to turn it back on.\"\n\n\"Don't worry. How are you?\" Taylor's voice was pure honey.\n\n\"I'm good, I'm good. And the design is right on schedule. Once the draftsmen have it out, we should be able to break ground by next week.\"\n\n\"Now Jeffrey, I told you. When I ask 'how are you' I'm asking about YOU, not the work.\"\n\nI smiled and leaned back in my chair. \"I'm doing great. What's up?\"\n\n\"Well, a girlfriend and I were shopping in the area, and I thought it might be nice to meet for lunch! There's this GREAT little caf\u00e9 just around the corner from your office.\"\n\n\"Hmm... Geno's?\"\n\n\"That's the one! How'd you know?\"\n\nMy mind flashed back to the first scoops on Taylor's and Jonathan's new relationship. \"Lucky guess. And what about after lunch?\" The note in my voice made my intentions clear. I wanted to know if Taylor wanted a booty call. Despite the new developments with Melody, I still hungered for the gorgeous supermodel. And besides, Mel had given her express permission, Taylor especially, even beyond the 'open relationship' agreement.\n\n\"We'll see...\" Her voice was smokily mysterious. \"Twenty minutes?\"\n\n\"I'll be there.\"\n\n***\n\nI entered into the little caf\u00e9 and glanced around to see if Taylor had beaten me there. She had. She was sitting at a corner window, gesturing expressively as she chatted with a blonde woman who had her back to me. I'd almost forgotten she mentioned that she was shopping with a girlfriend.\n\nThe morning sun reflected off the towering grey buildings around us, casting pale light through the windows and illuminating Taylor's face in a white glow, as if she were in a cosmetics commercial. It also lit up her blue eyes, making them stand out as sparkles on her Venusian face. And as I approached, her eyes swiveled up to catch mine while a pleased smile spread across her face.\n\nI smiled right back, enraptured by the goddess before me as I approached their table. I could stare at her face for eternity. \"Have you been waiting long?\" I asked.\n\n\"No. We just sat down,\" Taylor answered, but already I wasn't listening.\n\nWhen I'd reached the table, the blonde woman turned to look up at me and my spine went rigid so suddenly I actually jerked in astonishment. I knew who she was. The blonde was completely familiar to me, and my jaw dropped in abject surprise at seeing her. Could it really be?\n\nShe was perfect. Her face was an exquisite work of art. Her fine blonde hair shone in the afternoon light. And most especially, her vermillion green eyes would have lit up the room on their own.\n\nHer worldly New York chic attire would have fit right in on any runway and she had a wondrous youthful energy. And as I looked upon her surpassing beauty, lightning bolts practically fried my spine to a crisp. And now as I was able to simply stand and gaze upon her, I knew why I'd been obsessing about seeing her again for weeks. She was simply THAT stunning and she was permanently imprinted on my mind.\n\nTaylor cleared her throat and leaned forward, actually poking my rigid body in the side. \"What?\"\n\nStaring at the blonde, without thought I blurted, \"Before, I hadn't thought there was a woman on Earth who could rival Taylor's beauty.\" I blinked several times. \"I was wrong.\"\n\nThe blonde blushed a pretty pink and glanced down for a moment before looking back up and focusing right in on my eyes. \"That's quite the compliment,\" she said, her voice light and airy and seductively sweet.\n\nJust now realizing that I'd been staring quite obviously, I blinked several times rapidly and then started to loosen my shoulders. \"Uh, I'm sorry. I don't usually stare like that. I'm actually quite used to seeing pretty women.\"\n\n\"I'll say,\" Taylor complained. \"You didn't lock up like that seeing me for the first time.\" She wrinkled her nose and gave me a mock-angry glare before breaking into a smile.\n\nNow I blushed and looked down. Actually, I nearly had. But I wasn't going to mention that.\n\nTaylor gestured with her hands. \"Jeffrey, this is my friend-\"\n\n\"Kaitlyn,\" I interrupted, still gazing rapturously at the gorgeous young woman.\n\nTaylor looked surprised. \"Right... Have you two met before?\"\n\nKaitlyn's smile was dazzling. She gave off a glow that would have lit up the whole caf\u00e9 even if all the lights were off. \"Just once...\"\n\nI inhaled sharply. There was no WAY she could have remembered.\n\n\"In the smoothie shop off Broadway. Maybe a month ago?\" She grinned seeing the stunned expression on my face. \"You were staring at me then the same way as you are now.\"\n\nSteeling my spine and taking a deep breath to recover what dignity I had left, I reached my hand down in greetings.\n\n\"Pleased to meet you, Jeffrey,\" she said casually as she took my hand.\n\n\"'Jeff', please. I'm just Jeff. Only my bosses... and Taylor... use the full name.\"\n\n\"Jeff it is.\" The gorgeous blonde shook my hand in return and then gestured to the empty seat beside her. There was already a place setting for me, while Taylor had already spread out on her side of the table.\n\n\"Hmph,\" Taylor pouted. \"I get this brilliant idea to set you two up and I find out you've already met.\"\n\n\"Well, I wouldn't exactly call it a meeting,\" I blushed. \"We never even spoke. I only got her name because the smoothie guy called it out.\"\n\nKaitlyn was smiling as she evaluated me. \"You were so cute and staring at me with such adoration. Normally, that kind of thing is kind of pathetic. But there was something about you...\"\n\nI blushed again, but before I could come up with a response, a waiter came by. \"Would you like anything to drink?\"\n\n\"Cosmopolitan,\" Taylor tossed off.\n\n\"For lunch?\" I asked.\n\n\"What? It's not like I'm working.\" She smiled.\n\n\"Me, too,\" Kaitlyn added to the waiter.\n\n\"Now you shouldn't be drinking young lady,\" Taylor admonished.\n\n\"Pssht. Like I've never had a Cosmo before.\"\n\nTaylor looked up at the waiter and told him, \"Check her I.D.\"\n\nKaitlyn huffed at her friend and then dourly said to the waiter. \"Iced Tea.\"\n\n\"Just a Sprite,\" I nodded to the waiter, who then left to get our orders.\n\n\"That was mean,\" the blonde growled.\n\n\"Just trying to keep you out of trouble, sweetie. You're only 19. You've got lots of time to get crazy later on.\"\n\nKaitlyn, for just a moment, pouted like a whiny teenager before she took a deep breath and re-composed herself, once again appearing to be a worldly New York socialite years older than her actual age.\n\nI felt the beginnings of an awkward silence and started conversationally, \"So? How do you and Taylor know each other?\"\n\nKaitlyn smiled at the memory and glanced over at her friend. \"Well, I was John's downstairs neighbor when he moved into the apartment on 5th Avenue.\" Kaitlyn left it at that, but from the way she blushed, I assumed there was much more to the story that she wasn't letting on.\n\n\"And you're the designer who's doing Taylor's new place in Montauk?\" she queried, seeming to already know the answer.\n\nI nodded and Kaitlyn leaned towards me with new interest. \"What's it like?\" she asked. \"Being in the design world. Figuring out all the angles and dreaming up the perfect landscape. Creating something grand out of nothing.\"\n\nI smiled and sat back in my chair and grinned. Kaitlyn's choice of words instantly I was reminded of why I went into architecture. I loved the creativity. I loved the minute details. I loved the total control. It made me feel a little like a god. And when I created something grand...?\n\nI looked up at Taylor with a twinkle in my eye and said dramatically, \"It's better than sex.\"\n\nTaylor grinned back at me, knowing just how much we liked sex. And then I turned back to Kaitlyn.\n\nThe blonde had her own twinkle in her eye, and she panted softly as if she'd just had an orgasm. \"Yeah...\"\n\nTaylor explained. \"Kaitlyn wants to be an architect. It's what made me think of you two.\"\n\nThe beautiful blonde now had my full attention. \"Really?\" I asked her.\n\nKaitlyn blushed and nodded.\n\nTaylor put in. \"She's studying at Columbia. She got a late start, but she'll be graduating in a couple years.\"\n\n\"Really?\" I was impressed.\n\nKaitlyn nodded again. \"Taylor talked me into it. You could say that meeting John and Taylor changed my life.\" Her focus drifted away again as nostalgia took her for a minute. But then she smiled and her gaze zeroed in on mine again. \"So tell me, what's it really like being an architect?\"\n\nI grinned. My favorite subject.\n\n***\n\n-- KAITLYN --\n\nIt was HIM. Taylor's design architect, the guy she'd been screwing when John had to leave on business, was HIM. And he had that Look.\n\nMy insides melted and I felt my panties getting wet just from that look. It was a look of utter rapture, as if I were the only thing in the universe.\n\nHe was so adorable when he nervously blurted, \"Before, I hadn't thought there was a woman on Earth who could rival Taylor's beauty.\" He blinked rapidly. \"I was wrong.\"\n\nI felt the warmth of blush in my cheeks and I glanced down for a moment in embarrassment before looking back up and focusing right on his eyes, so soft and yet intense. \"That's quite the compliment,\" I managed to say.\n\nI felt it then. I felt it inside me. I WANTED this man. It was a feeling I'd never really experienced before.\n\nThere had been guys I wanted to screw before: cute boys in school, handsome and wealthy men in town. There had been guys I wanted to seduce. I wanted John for his money and because I saw how good an orgasm he could give Cassandra. But that whole love at first sight thing? I wanted to think it was possible, but never really believed.\n\nThis may not have been love. But for the first time in my life, I WANTED someone. I didn't just want his body. I'd certainly known better-looking or better- built guys. I wanted HIM. I wanted this man who could make me wet just by looking at me.\n\nHe was something special. He wouldn't disappoint me. I could see it in his eyes.\n\nThe three of us settled down, ordered, and struck up a conversation. I could barely keep my eyes off of him the whole time.\n\nI felt the crackle of electricity between us and for a moment I could feel that we were on the same wavelength. We both wanted the same things. We'd both been going through life having our flings on the side and enjoying the people we were with without ever really settling down. We hadn't found THE ONE.\n\nIt would be nice to settle down and have a relationship, but something had always held us back. I was young and now that I'd outgrown the whole seduce- rich-man-and-become-trophy-wife plan, I was focused on my studies and wanted to get my degree. I wanted to be an independent and strong-willed woman like Taylor.\n\nAnd Jeff certainly looked rather young to be lead designer for a project like John and Taylor's estate in Montauk. Maybe he'd been too focused on his career to find love. And when he talked about architecture, there was a passion in Jeff's voice that I found incredibly sexy.\n\nI asked more questions and he eagerly leapt into his answers. I found my neck was starting to strain from all the nodding in agreement I was doing.\n\nMore than once, I caught Taylor glancing back and forth between the two of us with a silly grin on her face. I knew she was quite pleased with herself seeing Jeff and I getting along.\n\nNow if only I could think of a good excuse to get rid of Taylor and find out if her statements about Jeff's bedroom prowess were really true.\n\n***\n\n-- JEFFREY --\n\n\"Now you PROMISE you'll let me see the blueprints?\" Kaitlyn pointed both hands straight down in front of her hips, pulling her knees together and rolling her shoulders while pouting. The effect was devastatingly seductive and from the sparkle in her emerald eyes, she knew exactly what she was doing.\n\n\"Of course. Stop by the office any time and I'd be happy to show you our progress, under one condition: you can't tell Taylor ANYTHING. Deal?\"\n\n\"Deal.\" Excitedly, Kaitlyn stepped forward and hugged me. We were standing on the sidewalk outside of Geno's, a full two hours after we'd gone in. I'd been very comfortable chatting with Taylor and Kaitlyn, and now I felt a little thrill shoot through me as Kaitlyn hugged me. I felt like a schoolboy with a crush. And since she was just a couple of inches shorter than me, I let myself breathe in the sweet scent of her hair just under my nose.\n\n\"Spoilsport,\" Taylor complained in reference to the blueprints.\n\n\"You'll see them eventually, Taylor,\" I nodded. And then Kaitlyn backed away from my grasp. Taylor stepped forward to take her place, the taller, dark-haired woman hugging me with a little more familiarity.\n\nI asked, \"Will I be seeing you soon?\"\n\nTaylor leaned back and shook her head. \"Probably not. Johnny's back in town, so I'm good.\"\n\nTaylor glanced at Kaitlyn, who just raised her eyebrows knowingly and smiled. The blonde clearly knew about me and the gorgeous brunette.\n\nTaylor shrugged. \"You don't mind, do you?\" she asked me.\n\n\"Mind what?\"\n\nTaylor grinned and glanced over at her friend again before slinking back up to me, placing her hand on my chest. \"Being my living dildo.\"\n\nI chuckled, feeling relief that my fantasy notions of settling down and marrying Taylor were no longer in the back of my mind. \"Of course I don't mind. We have fun, don't we?\"\n\n\"Yeah...\" Taylor leaned in and kissed me, more than a short peck but less than a French liplock.\n\nWhen we broke, I saw Kaitlyn putting her cell phone away and then a black Towncar was pulling up to the curb. Taylor smiled to me. \"Besides, isn't she so pretty?\"\n\nI followed Taylor's gaze and stared at the beautiful blonde. \"Yeah...\"\n\nKaitlyn looked up at me just before she stepped into the car. \"Be seeing you,\" she waved. Taylor then left to get in the car as well.\n\nI waved and then turned around, heading back for my office. But before I got out of earshot, I heard Kaitlyn's sweet voice on the wind asking \"Is he really that good?\"\n\nAnd then the limo door shut, blocking out any further comments. As I strode down the sidewalk, I allowed myself a little grin.\n\n***\n\nA hollow knock sounded from the direction of my office door. Internally, I groaned in annoyance. Ever since returning from lunch with Taylor and Kaitlyn, I hadn't been able to focus. My workload was piling up and every time I tried to clear my head I started daydreaming about Kaitlyn.\n\nBy now, it was already almost 5pm, I was in the middle of a very complicated redesign of the grand foyer, and I'd told Erica that I did not want to be disturbed. I HAD to catch up.\n\nNow I'd always been able to count on Melody to follow my instructions unless it was an emergency. With the knocking at my door, I swore it had better be an emergency or I'd need to have a chat with my new admin about the definition of \"Do not disturb\".\n\nI looked up and immediately rolled my eyes. Melody was still standing on the other side of the glass. She had the hopeful little smile of a girl who just wanted my attention. Cute or not, this did NOT qualify as an emergency.\n\nSighing, I waved her in. Melody turned and said something to Erica, who smiled and nodded, and then the perky bottle-blonde girl stepped in. \"Hi, Jeffie.\"\n\n\"I'm busy,\" I growled and then pointedly looked back to my screen. \"I gave Erica the 'Do not disturb' order. You remember that one, right?\"\n\n\"Too busy for your girlfriend? Don't I get some special priority?\" Melody sashayed over and sat on my desk, her hip right next to my keyboard.",
        "I glared at her leg. \"You're in my way.\"\n\nMelody bopped me on the back of my head, then got up and slid out of the way. \"What good is this dating thing if I don't get special rank? I was hoping we could grab dinner together.\"\n\n\"We went out last night, Mel,\" I pointed out with mild exasperation. \"And the night before. Three nights in a row would be more than just occasional dating. (A) I thought you didn't want the see-each-other-every-day kind of relationship. And (B) what happened to 'no obligations'? I'm not your beck and call, remember?\"\n\n\"Fine, fine.\" Melody waved me off and started for the door.\n\nPinching my forehead, I realized I was sounding like an inconsiderate jerk. She had just about reached it when I sighed and called, \"Wait.\"\n\nMelody quickly spun back to face me, arching an eyebrow in annoyance. A part of me wanted to just cave, shut down my computer, and go grab some food with her. Mel and I really did get along quite well (as long as she was getting her way), and the thought of spending time with her WAS a good one. She was always pleasant company and our evening was certain to end up in bed.\n\n\"Mel, it would really be nice to grab dinner with you. But I can't. I'm working on a really important design element and I just don't want to leave until it's finished. Okay? It's just my work. It's who I am, remember?\"\n\nShe pursed her lips together and nodded. \"I understand. It's okay.\" Her words were accepting, but I saw the light dim in her eyes. \"Maybe tomorrow?\"\n\n\"Fine. Tomorrow after work. It's a date.\" I waved her off and as I looked to my monitor, my mind was already settling back into design mode. And with typical male tunnel vision, once I was locked in, I was oblivious to the rest of the world. But Melody brought me back up with her parting comment.\n\n\"Richie Solomon has been hitting on me for weeks. Maybe I'll just see how good his hardware really is.\" And then with a smirk, Melody was gone.\n\n***\n\n*FRIDAY*\n\nThe next day, I was standing at a urinal in the men's room at my office. I was doing my thing when the door opened and a male voice started chuckling. \"Woo- hoo!\"\n\nI turned my head to see Richie Solomon, an I.T. Manager, settling over the urinal next to me. \"Wow, Lee. I gotta hand it to you. Your girlfriend is quite the hellcat.\"\n\nMy stream dribbled out and I started zipping up. \"Wait, what?\" I started giving him the stinkeye.\n\nHe looked over and saw my look and he almost stopped mid-stream. \"Oh, hey, hey...\" Solomon held up his off-hand in a 'stop' gesture. \"She said you were cool with it. Open relationship. I had one shot and that was it.\"\n\nI forced myself to remember my agreements with Melody. We didn't own each other. And in a way, it was my fault. She'd wanted to go out last night and I was too busy. \"Naw, it's cool. She DID tell me.\"\n\n\"Good, good. I'm not usually one to go messing with another man's business. Hell, I didn't even know Melody was yours until she told me. And I gotta admit, I'm fucking jealous of you, man. That girl is WILD.\"\n\nBy now, I'd moved to the sink and was washing my hands. I worked the paper towel dispenser and started drying off..\n\n\"Whew, I wouldn't mind another chance,\" he kept talking as he finished up. \"I mean, she told me one time and that was it. But if you were cool with it, you think she'd let me-\"\n\n\"You know, Solomon,\" I interrupted. \"Melody can do her thing and that's her deal. But you know, I REALLY don't want to hear about it. Okay?\"\n\nHe shut up. \"Sure, man.\"\n\nI left the bathroom.\n\n***\n\nIt took me ten minutes to put visions of Melody with that greasy prick out of my head. The only good thing about them was that it stopped me from daydreaming about Kaitlyn again. Then I was able to bury myself in the latest design revisions and like usual, once I got into focus everything was better.\n\nI was just finishing up the backyard pavilion when Erica's voice came through the speakerphone. \"Jeff, you have a visitor.\"\n\nI looked up through the glass wall and immediately my heart started racing. Kaitlyn was standing next to Erica's desk, rows of pearly white teeth beaming at me. She was dressed stylishly with a chic blouse and short skirt to show off her tanned legs. An amber pair of oversized sunglasses were pushed up onto her head, helping to hold back her light blonde hair tied up by a clip. And as her green eyes sparkled in the afternoon light, her youthful exuberance hit me even on the other side of the wall.\n\nI hit the button on my phone. \"Send her in.\" And then I got up to greet my guest.\n\n\"This is a surprise,\" I exclaimed as Kaitlyn walked through the door.\n\n\"I TOLD you I was coming,\" Kaitlyn laughed and then stepped forward to give me a chaste hug and a peck on the cheek. Just yesterday I'd had lunch with her and Taylor. I'd known the girl for barely more than 24 hours, but I didn't mind the coy affection.\n\nWhen she pulled away she pouted prettily and said, \"Now I believe I was promised blueprints on John and Taylor's place.\"\n\n\"Yes, you were.\" Thinking quickly, I tugged on a drawer and blindly grabbed a stack of papers, as many as I could hold with one hand. With a heavy thump, I dropped them onto my desk. \"Now, if you'll just sign the various confidentiality agreements, have them notarized and reviewed by your lawyer, in about three weeks you can come back and we'll-\"\n\nI was interrupted when Kaitlyn pushed my shoulder. \"Jerk.\"\n\nI started chuckling. Kaitlyn had taken on a stricken expression when I started in on my bureaucratic ramble, but her sharp eyes scanned the top sheet of paper, which clearly wasn't non-disclosure related, and she'd realized I was pulling her chain.\n\n\"Seriously, I probably shouldn't be showing you these. But somehow I don't think Taylor is going to sue me over it.\"\n\n\"Not likely.\" Kaitlyn followed as I crossed the room to the small conference table in my room. I went to a wide file drawer and started pulling out some of the finished blueprints. I figured I would start with the main house.\n\nI first showed her the isometric view, a 3-D model placed into a rough outline of the landscape. Basically, it was how the house would look if a person were standing on the driveway leading up to the estate. You could see the entire front profile of the house, from courtyard fountain to circular driveway to the main entrance. The sloping roofline curved with the landscape and rolling hills. One of the draftsmen had added theoretical trees and shrubbery.\n\nKaitlyn seemed suitably impressed, but I didn't really pique her interest until I switched to the architectural blueprints of the main floor. Almost immediately, she planted her hands on the table and bent over to get a closer look.\n\nKaitlyn had been standing opposite of me while I unfurled each print. And when she bent down, my eyes naturally gravitated to the neckline of her blouse, which drooped noticeably and gave me an easy view straight down to the creamy swells of her large breasts, hanging pendulously downward while suspended in a lacey red bra.\n\nMy heartbeat, which had began to slow down as I got used to her presence in the room, picked back up a few BPM. Twice, I tried to look away. What was I? A high school teenager? But inexorably, I found my gaze drawn back.\n\nKaitlyn glanced up at me, and if she noticed my staring she didn't comment. I had to blink twice before I realized she was looking at me, and then she smiled and asked, \"How are you pulling off this beam over the foyer? That CAN'T be safe.\"\n\nI shrugged. \"Computer models show we can do it safely. It's my job to dream. It's the civil engineer's job to make sure it works.\"\n\nWe chatted back and forth for the next few minutes, Kaitlyn rapid-firing questions at me that proved her architectural knowledge. To look at her, you'd think she was just another New York spoiled socialite: youth, beauty, expensive jewelry, trendy fashion style. But her quick eyes belied her intelligence and she spoke with a confidence and maturity I wouldn't have expected.\n\nThere was a lot more to this girl than just a pretty face and a smokin' body.\n\nKaitlyn took one last glance across the print and then stood up straight. \"What else have you got?\"\n\nI grinned and turned back to the file drawer.\n\n***\n\nA couple of hours later, Kaitlyn was reclining back into my wing chair with a silly grin on her face. \"Time sure flies when you're having fun.\"\n\nI smirked. \"There aren't many people in the world who find blueprints to be 'fun'.\"\n\n\"That just makes the two of us unique,\" Kaitlyn sighed and slunk deeper into her chair. She'd kicked her legs up onto my desk, and I couldn't help but let my eyes run along her supple musculature every now and again. She didn't seem to mind, even going so far as to cross her ankles and flex her legs for me while grinning salaciously.\n\n\"You know,\" I began, \"You're a sharp cookie. If you want, I'm positive I could get you an internship here. Then after you graduate, you'll almost be guaranteed a job.\"\n\n\"Really?\" She sat up and put her elbows on my desk, leaning forward eagerly.\n\n\"Certainly. Although, with your connections to Jonathan Kwong, you could probably get any job you wanted already.\"\n\n\"Maybe,\" she said thoughtfully. \"But he's already done so much for me. I'd like to think I could still be successful without his help. Getting a job somewhere without his influence would make me feel more confident in my own abilities.\"\n\n\"Say no more. I'll look into it tomorrow.\"\n\n\"Thanks,\" she smiled. \"Really, thanks...\" Kaitlyn giggled then, and her face turned from youthful exuberance to sultry in a heartbeat. \"Aww, if *only* there were someway I could repay you.\"\n\nMy heartbeat fluttered again for a moment as illicit thoughts ran through my head. \"Well... I'm sure you'll find a way.\"\n\nWe both went silent for a moment, just eyeing each other hungrily. And then Kaitlyn sat up quickly. \"You got plans tonight?\"\n\n\"Nothing I can think of,\" I answered honestly, with a trace of hope in my voice.\n\n\"You sure? It's a Friday.\"\n\nI smiled. \"I'm open to your suggestion.\"\n\n\"Come on. Let's grab a bite to eat.\" Kaitlyn stood and held out her hand.\n\nAutomatically, I grabbed my keys and walked around the desk while she pulled her purse over one shoulder. Then I slipped my hand into hers and let the beautiful young blonde lead me out of my office.\n\nErica looked up in surprise as I headed past her. \"I'm leaving for the day,\" I said while she checked the clock. It wasn't yet 4:30pm.\n\nOnce we got in the elevator, Kaitlyn leaned in and wrapped her hands around my arm. \"You like sushi?\"\n\n\"Sure thing.\"\n\n\"I know JUST the place.\"\n\n***\n\n\"Come on. No offense, but my family's probably a lot more loaded than yours.\"\n\n\"No, no,\" I put my hand out, keeping Kaitlyn at bay while I held the check back with my other hand. \"I may not be a Jonathan Kwong, but I do alright for myself.\"\n\n\"I'm supposed to be thanking you.\"\n\n\"You KNOW you don't need to. Besides, I haven't actually got you an internship or anything just yet.\"\n\n\"Hmph,\" Kaitlyn huffed. \"At least let me split it with you.\"\n\n\"A gentleman would never consider such a thing.\"\n\nKaitlyn smirked and eyed me up and down. \"And *you're* a gentleman?\" She capped her query by leaning forward and proudly showing me her cleavage, which instantly drew my eyes downwards.\n\nI licked my lips. \"Do you really want me to be?\"\n\nShe giggled. \"No. I think I want a naughty pervert tonight!\"\n\n\"Really?\" I leaned across the table and Kaitlyn leaned in as well. She was six years younger than me, but right now we were just two consenting adults feeling the pleasant buzz of hot sake and the fuzzy warmth of mutual attraction.\n\n\"I can be naughty...\" I growled as I leaned further towards her.\n\n\"Mmm... so naughty...\" Kaitlyn hummed and then closed the gap between us, bringing our lips together in a fierce, but brief, kiss. When I first met her at the caf\u00e9, lightning bolts had gone up and down my spine. The same crackle shot through me again. Thunderbolt City.\n\nWhen she pulled away, Kaitlyn panted and gazed at me through heavy-lidded eyes. \"My parents are in the Bahamas for the weekend.\"\n\n\"What are we waiting for?\"\n\nTwenty minutes later, I found myself back at Taylor's apartment building on 5th Avenue. Only this time, the elevator stopped one floor short of the top. Kaitlyn's tongue was shoved so far down my throat that I couldn't move, and ten seconds after the final ding, the heavy doors started to close back up.\n\nAt the last moment, I managed to shove a foot into the gap, triggering the doors to retract. And then with my arms firmly wrapped around Kaitlyn's waist, I half- carried her into the hallway.\n\nA minute after that, we shut the door to Kaitlyn's bedroom and she sat me down on a bench at the foot of her bed, holding up one finger to silence me while she took two steps back.\n\nReaching up, she released the hair clip first, tossing her head to let her fine blonde hair roll out with perfect waves and a bit of a curl at the tips. Next, she slowly opened the buttons of her blouse, getting down to the tails and then pulling each half to the side to show off her toned tummy and that lacey red bra I'd briefly been glimpsing all day.\n\nShe was actually thinner than I'd realized, making her look even taller than she was. If she'd actually been my height or taller, she could have given Taylor a run for her money in the modeling world.\n\nWith a teasing grin, the beautiful young blonde brought her hands up to the front clasp of her bra, and then with a gleeful smile, she pulled her hands away and waved them in front of me, leaving her bra untouched and causing a groan of disappointment to emerge from my throat.\n\n\"Just kidding,\" she teased and then deftly unhooked the enclosure, freeing her big tits to my naked view. Sitting high and firm on the 19-year-old's chest, the round orbs were simply amazing. But just when I started to memorize how they looked, Kaitlyn turned her back to me.\n\n\"Aww...\" I moaned. But then she bent over at the waist, dropping her skirt to her ankles, and I no longer had anything to complain about. Kaitlyn wore a matching red lace panty set, of which the cloth only covered the upper hemispheres of her buttcheeks, and outlined in great detail that which it did cover.\n\nMy mouth started to water as I was seized with a sudden impulse to nibble on the firm flesh of her ass, so wonderfully rounded with a shallow cleft like the sweetest peach. There wasn't an ounce of excess fat on that tight ass.\n\nKaitlyn giggled and I looked down to see her smirking at me upside-down from between her knees. She then spun around and stood up, still wearing her panties as she approached the bench and then knelt before me.\n\n\"Take your shirt off,\" she commanded.\n\nMy hands immediately went to my own button-down, and Kaitlyn busied herself opening the clasp to my pants and then dragging both them and my shorts down to my ankles.\n\nMy cock was hard, dark, and throbbing with urgency. Kaitlyn's vermillion eyes went wide as she wrapped both hands around the shaft. \"Niiice cock, Jeff.\"\n\n\"Thanks,\" I grunted and then whipped my undershirt over my head, leaving me naked from the knees up.\n\nNo more words were spoken as Kaitlyn simply bent over and took the first few inches into her mouth, gently squeezing her lips around the crown and suckling softly while both her hands began to jack along the length of my shaft.\n\nKaitlyn knew exactly which nerves to touch. My dick lurched in her mouth, twitching like a live animal with a mind and instinct of its own, and she knew exactly how to manipulate it. When my skin tightened up, she relaxed her grip. When my hips automatically bucked forward, she changed the angle of her mouth. When I groaned happily, her hot mouth suckled around my sensitive skin. And everywhere her tongue simply DANCED.\n\nIt was the best blowjob of my life.\n\nIt only got even better when Kaitlyn popped me out of her mouth and lay the length of my cock into the valley of her lush cleavage. Then she took both hands and began to massage her own breasts around my shaft, squeezing her tits together to form a tunnel of pillowy flesh while she began to lift and lower her chest around me.\n\n\"Like that, Jeff?\"\n\nI grunted, \"Oh, yeah.\"\n\n\"I'll bet you love it, Jeff. Feel my big boobs squeezing around your cock. Mm, I love it when a guy is long enough that I can wrap my lips around your head while he's fucking my tits. Don't you love it? I'm not old enough to legally drink but I'm plenty old enough to fuck your brains out.\n\n\"Yes! Yes! I love it!\" I moaned, teetering on the edge of eruption.\n\nKaitlyn suddenly pulled me free of her breasts and then bent down. And like a talented sword swallower, my shaft hurtled through her throat all the way down until her mouth was pressed tightly to my scrotum. I'd never had a girl deep- throat me in one thrust like that. And when her tongue extended out to begin lapping at my balls, I completely lost control.\n\nMy eyes rolled up into my head and I made a sickly choking noise. Before I realized it, Kaitlyn had my head back in her mouth, just in time to catch the first volley of hot jism that burst forth and exploded against her tongue.\n\n\"Mmph,\" she moaned as her lips formed an airtight seal around my shaft, and she was jacking me with both hands again, coaxing out shot after shot of sperm to continually splatter inside her sucking mouth.\n\nWhen sanity returned, I realized my hands were on Kaitlyn's shoulders, my grip much harder than I would have wanted. Quickly, I let go and saw the darker red against her skin where my fingers had been pressing. Inwardly, I groaned. Those would probably bruise in an hour or so. But Kaitlyn didn't seem to mind as her mouth was still working at my twitching rod in her mouth.\n\nEventually, she popped off with a wet smack of air and panted happily. \"Mm, that was a *good* cum.\"\n\n\"Good lord that was aMAZing!\" I exclaimed. \"Where did you learn to do that?\"\n\n\"I had great teachers,\" Kaitlyn giggled.\n\n\"Let me return the favor?\" I asked.\n\nShe smiled happily and stood up. This time, she dropped her red panties to the floor, showing me a smooth, bald beaver already glistening with her excitement. With a gleeful cheer, Kaitlyn vaulted herself onto the bed, laying back and spreading her legs in invitation while her hands went to massaging her own tits and tweaking her own nipples.\n\nI managed to free my ankles from my pants, and now we were both completely naked. And with a confident grin, I moved into position laying down between Kaitlyn's spread thighs. I knew my hands were dextrous and precise, a necessity for any true artist. And my tongue was pretty coordinated as well. Kaitlyn had just shown me the absolute best. I owed her nothing less.\n\nWith the same determined focus I brought to a work of architectural beauty, I concentrated on reading Kaitlyn's body while I set to my tasks. My tongue quickly discerned the appropriate angles for attacking her protruding nub of a clit and my fingers went spelunking to explore the inner chambers of Kaitlyn's magnificent temple of pleasure.\n\nEvery building has a center, a key point from which all good things take their cue. By the third try, I found Kaitlyn's pleasure center, and once my finger started scraping against that G-spot again and again, her thighs quickly wrapped around my head as she shrieked in absolute ecstasy.\n\n\"Fuuuuuck!\" the teen blonde screamed. \"Oh, Jeff! Oh, oh! Fucking EAT ME!\"\n\nI was only too happy to oblige.\n\nAnd as my fingers explored further, I found that her asshole was MUCH more than just decorational. When my tongue plunged deep through the front entrance and I popped my index finger to the hilt through the back, her hips bucked at me, lifting my chest off the bed as her second climax was even harder than her first.\n\nAnd when her butt settled back down onto the comforter, Kaitlyn panted deliriously. \"Fuck me, Jeff! Fuck me!\"",
        "My cock was ready once again, and so was I. Quickly, I slid up Kaitlyn's body while she lifted her legs and spread them to the sides, pulling her knees back with her own hands as she opened herself before me.\n\nMy own hands reached out and gripped her thighs as I settled into position and aimed my hips in the right direction. Repeated orgasms had opened Kaitlyn's pussy lips and her copious juices lubricated the way. And while squeezing her legs, I thrust forward to embed my cock into her deliciously tight tunnel.\n\n\"OHHH! YES!\" the ecstatic blonde cried as I buried myself to the hilt, and then her legs scissored behind my neck as she began to buck herself up to meet my thrusts.\n\nEverything about this girl was incredible. Her kiss was a thunderbolt of excitement. Her face was sculpted perfection. Her body was to die for. And she fucked with overwhelming energy. Every muscle of Kaitlyn's body was in motion. Her legs were flexing to undulate her body in a constant fucking rhythm. Her arms braced against the bed until the only parts of her body still on the mattress were her shoulders and the back of her head.\n\nI held Kaitlyn's rock-hard ass in my hands, guiding her back and forth on my shaft as her upper body twisted and turned and jiggled enticingly. I was in heaven.\n\nKaitlyn's eyes flared neon green. \"Mmm, don't you love my tight teenage pussy? Pound that tight pussy, Jeff. Make me yours. Harder. Harder!\"\n\nI could feel the burn in my forearms as I was doing my damndest to fulfill her wishes. Our pelvic bones were clapping together with audible slapping on each thrust, and I knew that my hips would be bruised by morning.\n\nI continued to try and read her signals, and when my hands tightened on her she squealed louder and wriggled even more. When I reached forward and pinched a nipple, Kaitlyn practically went ballistic. \"Fuck me! Harder! Jeff! Hurt me!\"\n\nMy eyes popped open, and then she said it again.\n\n\"Hurt me!\"\n\nWith a burst of adrenaline, I seized one leg from off my shoulder and used it as a lever to flip Kaitlyn's light body over onto her stomach. She fell to the mattress with a thud and I quickly yanked her legs back open for me. And with my muscles flexing, I put all my strength into manuevering her into a doggy position before I cruelly impaled her pussy on my dick once again.\n\n\"Yes! Fuck me!\"\n\nMy eyes went wide and without thinking, I reached my hand back and SPANKED her... *hard*.\n\n\"YES! AGAIN!\"\n\nI let fly with another spank on the same cheek, as hard as I could do it.\n\n\"YES! Fuck me! Hurt me! Rape me!\"\n\nA switch was thrown somewhere inside me, and the animal was turned loose. He came out every once in a while, whispering perverted thoughts into my ear when I was drunk and at a barl. His was the voice urging me on whenever Melody got in one of her naughty moods. His was the urge fueling my desire to take whatever sex I could get from whatever hot babes I could find and give them nothing in return.\n\nHe was all my baser instincts.\n\nAnd he was the one in charge now.\n\nWith a raging fury, I gripped Kaitlyn's hips in my hands, squeezing so tightly she moaned in pain and tried to wriggle free, though I wouldn't let her. I began ramming her backside so hard and so fast that I threatened to hyperventilate from the exertion. My cock was a steel rod, penetrating and carving and roughly driving into Kaitlyn's spasming pussy over and over and over again.\n\n\"AAAAGH!\" she screamed louder than anything, and mid-thrust I felt the inner clamping of her muscles as she tightened up and came.\n\nAnd still I kept machine-fucking her.\n\nWhen her orgasm subsided, Kaitlyn's legs gave out and she collapsed face-first onto the mattress. I no longer had a good angle and with regret, I let her fall off of my cock. But I wasn't done with her yet. My anal session with Taylor had put a nasty thought into my head.\n\n'DO IT' the voice inside my head urged. 'TAKE IT.'\n\nI blinked and then my right thumb was embedded into Kaitlyn's asshole, and she whimpered and moaned as I began tugging the inner walls of her anus to the side. I blinked again and then my left thumb had joined my right, tugging the other direction.\n\nAnd with an animalistic roar, I brutally shoved my cock through Kaitlyn's anus and into her rectum.\n\n\"FUUUCK!\" she shrieked. And then she was moaning in rapturous wonder as I began to saw back and forth out of her sphincter.\n\n\"Fuck my ass! Take my ass! Violate me! Rape me!\"\n\nI was doing my best. They say you can't rape the willing, but this was still the roughest sex I'd ever had. With my hands holding her asscheeks wide, I forced myself in and out, giving Kaitlyn the reaming of her life.\n\nShe was screaming constantly and blubbering her ecstatic moans. Over and over again I lunged with my hips, my cock burning against her sensitive anal chute, lubricated only by her own orgasmic fluids coated on my rod. \"Fuck me!\" she cried again.\n\nI found myself angered by her ability to speak. And in a blind moment of rage, I reached forward and wrapped my hands around her neck, squeezing even as my cock continued to pound its way through the young girl's asshole.\n\n\"Ack-\" Kaitlyn managed to croak before I cut off her air supply, and then her eyes bugged out as she turned her head to the side. Despite my previous rough handling of her body, for the first time she actually looked afraid. And then before I could react, her eyes rolled up in her head and she gaped her mouth open in a silent scream as her body went completely rigid, locking up entirely.\n\nIn a panic, I let go of her neck, only now letting my conscience pop up and warn me that I was truly hurting her. But even with her body rigid, I felt the clamping of her anal muscles so tightly around my cock. And with her windpipe no longer being crushed, Kaitlyn howled like a banshee, the sound tearing its way out of her throat as she climaxed powerfully, her whole body jerking just once backwards.\n\nThe sudden motion lifted her torso up as her back arched, and it thrust her ass back around my cock to the hilt. All the pressure around my sensitive shaft and the rippling of her internal muscles set me off as well, and then I was geysering a torrent of jism deep into the darkest recesses of Kaitlyn's bowels.\n\nI hunched over, barely supporting myself on my arms as I felt each twitch of cum burst out of me and dribble deeper into the teen blonde's rectum. My eyes fluttered on the brink of unconsciousness as inky blackness creeped into my vision. I was dizzy and light-headed and I very nearly collapsed, but I managed to ride out the sensations and then blinking slowly, I got my bearings and stilled my wobbly form.\n\nAs my vision cleared, I realized that Kaitlyn was out cold. Her body was limp beneath me and only the slow rise and fall of her torso told me she was still breathing. My cock was still embedded in Kaitlyn's tight asshole, and after licking my lips while my body fully awoke, I did a push-up and slowly pulled my dick free of her tight chute.\n\nThat simple motion robbed me of the rest of my energy, and with the last of my strength, I managed to flop onto my back and let the dark of unconsciousness take me.\n\n***\n\n*SATURDAY*\n\nI awoke in a strange room, on a strange bed. A shot of adrenaline went through me and I jerked upwards, trying to get my bearings. I looked beside me on the bed, and then it all came back to me.\n\nKaitlyn was face-down, sleeping peacefully with her head turned towards me. Her perfectly-formed face looked positively angelic on the white linens with her golden hair piling around her. As I'd sat up, the sheets had been tugged lower, exposing a wide expanse of Kaitlyn's naked back, clearly showing the curve of her muscles and shoulder blades.\n\nA buzzing sound then caught my attention. I realized it was the same noise that had woken me up. Trying to move as softly as possible, I scrambled over the foot of the bed and realized the noise was coming from my pants.\n\nThe buzzing stopped before I could get there, but eventually I fished out my cell phone and flipped it open to see that I had five missed calls. The phone had been on vibrate, and in my rapturous attention to Kaitlyn last night, I must have not noticed a single incoming call.\n\nThey were all from Melody, including the call I'd just missed.\n\nI sat there pondering that. Five calls. Was there something I was missing? Was Melody hurt? Or did she still feel like she owned me and simply got indignant when I didn't immediately leap to give her attention when she called?\n\nI was interrupted from my ruminations when a warm hand settled onto my hip. I turned to see that Kaitlyn was awake and turned to her side. Her left hand was touching me and she'd instinctively pulled the sheets up to cover her nakedness.\n\n\"Morning,\" I said warmly.\n\n***\n\n-- KAITLYN --\n\n\"Morning,\" Jeff said warmly.\n\n\"Morning,\" I answered as I blinked away the cobwebs.\n\nHe leaned back across the bed to me and gently kissed my forehead. I felt a flutter pass through my body as he did that. The butterflies kicked up in my stomach as well and I reveled in the sensations I'd never felt before. I was falling in love.\n\nHow could I not when he was looking at me that way? I saw it in his eyes. He loved me, loved ME, even if he didn't know it yet.\n\nAutomatically, he scooted forward until his arms wrapped around my body and held me close to him. He cocooned me in his grasp, squeezing gently and I felt a rush of pleasure running through my limbs. I giggled at the idea that he was actually cuddling with me, the way I always saw John do with Taylor but never with me. And that thought surprised me for a moment. Could it really be? Could he be the one? And what if he wasn't?\n\nI frowned briefly, and with worry on his face, he asked softly, \"How are you feeling?\"\n\n\"Mm... sore...\" I winced and then smiled. I felt like Jeff had fucked the shit out of me. And the pleasurable pain was oh, so heavenly. \"But in a good way.\"\n\nThere was honest concern in his eyes. \"I didn't mean to hurt you. I'm sorry.\"\n\nI shook my head slowly. \"Don't be. That was some of the greatest sex of my life.\" My hand went to my neck, feeling where he'd squeezed my throat last night. I felt a shudder pass through me at the memory of him strangling me. \"It was scary... but that was an INCREDIBLE orgasm... You were even better than Taylor promised,\" I crooned and then smiled. I couldn't help it. The corners of my lips refused to come down from my cheeks.\n\nI rolled onto my back and then elevated myself up onto my elbows, the sheets sliding down. I pretended not to notice that the fabric slipped off my chest, revealing my bounteous bosom to his gaze. Jeff gulped appreciatively.\n\n\"Mm... got time for another?\" I asked, fluttering my eyelashes rapidly and letting the sizzle into my gaze upon him. \"I told you. My parents are out of town all weekend.\"\n\n\"Well, I think I can be persuaded to go another round,\" Jeff said as he began crawling over my body.\n\nI giggled and then we came together for a soft kiss, me moaning into his mouth erotically as I jerked the sheet away to leave nothing between our naked bodies.\n\n\"Cum in my tight little pussy this time,\" I growled. I felt myself getting even wetter at the thought. With John refusing to risk impregnating me, even though I was on the pill, I salivated at the thought of Jeff's sperm swimming around inside my womb.\n\n\"Whatever you desire,\" he drawled before turning his lips to my neck while his right hand came up to play with a round boob.\n\nI shuddered in arousal. He really meant it. Whatever I desired, he would do for me. It felt absolutely incredible that someone could feel that way about me. John cared about me, but not like that. Taylor cared about me, but not like that. But Jeff felt EVERYTHING for me. He would really do anything I wanted.\n\n\"In that case...\" I husked as I stretched my arms back to the headboard and came up with a shiny pair of fur-lined handcuffs. I felt my face burn with heat as a little grin crossed my face. \"Hurt me...\"\n\n***\n\n-- JEFFREY --\n\nI was in the cab riding home when I finally flipped my phone on and held the speed-dial to Melody. Annoyed by her clinginess or not, I owed her at least a return phone call.\n\n\"WHERE ARE YOU?\" The phone had only rung twice before it picked up and Melody's anguished wail was loud enough to make my jerk away from the phone.\n\n\"Huh?\"\n\n\"I called and called! I thought you were dead! Where are you?\" Melody's voice was still quite shrill.\n\n\"I'm- I'm in a cab going home!\" Was Melody really worried about my well-being?\n\n\"Okay...\" There was a long pause as I could hear Melody breathing to compose herself. Then her next question came loud enough to make me jerk away from the speaker once again. \"WHERE THE FUCK WERE YOU LAST NIGHT?\"\n\n\"Whoa! Whoa!\"\n\n\"You promised to have dinner with me!\"\n\nI had? And then my mind flashed back... 'Fine. Tomorrow after work. It's a date.' SHIT. I HAD. \"Oh, Mel. Ohmigod, I'm sorry. I completely forgot.\"\n\n\"Who was she?\"\n\n\"Huh?\"\n\n\"Erica said you left the office with this gorgeous blonde teenager or something. Who the FUCK was she?\"\n\n\"Mel-\"\n\n\"WHO???\"\n\n\"Calm down! Jeez. She was just a friend of Taylor's. She's an architecture student.\"\n\n\"Did you fuck her?\"\n\n\"Mel...\"\n\n\"ARRGGGHHHH!!!!\" Her scream was so loud I had to hold the cell phone away again, and this time even the cab driver winced.\n\nWhen she finally stopped screaming I put the cell phone back to my ear and quietly asked, \"Mel?\"\n\n\"You know, what, Jeff? Fuck you.\" Her voice was cold. \"No, better yet, NOT fuck you. I'm never touching you again you piece of shit slimeball. What's the point of dating if you're just going to sleep around with whoever the fuck you want whenever the fuck you want?\"\n\nI rolled my eyes. \"Richie Solomon.\"\n\nThat brought her up short. \"What?\"\n\n\"Richie Solomon,\" I stated firmly. \"Did you or did you not fuck him Thursday night?\"\n\n\"Well, well-\" she spluttered.\n\n\"That was the deal, Mel: you can do your thing; I can do mine, right?\"\n\n\"You shot me down! I wanted to go out with you, have sex with you, but NO, you were too busy! I wouldn't have laid a finger on that greasy man if you would have just come out with me! And when I DID have a date with you, you blew me off for some dumb blonde teenager!\"\n\n\"Look, I was wrong. What do you want from me?\"\n\n\"Nothing! Don't ever talk to me again! We're done! Broken up! Whatever! Fuck off and die!\"\n\n*click*\n\n***\n\nGod damn that woman! After dropping my keys, wallet, and cell phone onto the nighstand, I simply stretched my arms wide and then let myself fall heavily onto my bed.\n\nFor six months, Melody had me eating out of the palm of her hand. For six months, I was her beck and call. True, she had to work around my crazy hours in the office, and as a red-blooded man, I had no reason to complain about hot sex with no strings attached.\n\nBut still, Melody could have stepped up our relationship really whenever she wanted. I would have been willing to work it out. But she made clear that we were just fuck-buddies, not even dates.\n\nAnd then the instant another woman showed up in my life, Melody got all jealous and started slapping me around. It's okay for HER to go have one-night stands but it's not okay for me? How the hell was THAT fair?\n\nMelody could be sweet when she wanted to. We had the capacity for tenderness and when things were going well between us, they went REALLY well. But then again, it's always easy to have a relationship when everything's going well. The hard part is sticking through the rough patches. And Melody's typical response to a rough patch was to hit me and then blame it all on me.\n\nShe wanted to break up? Fine. I'd already been thinking we should stop just fucking around, and now was as good a time as any. Melody didn't work for me anymore and after she calmed down, we'd figure out a way to avoid pissing each other off.\n\nStill... it would have been nice to have some hope of romance in my future. I was still dedicated to my career... but the idea of living forever alone was not appealing. Sex was nice, but part of what made it so good for me was that little hope beyond all hope that Melody and I might someday work out. She was right about one thing, you can't bang somebody for six months and not have it mean SOMETHING.\n\nI didn't have that hope with Taylor. She really was just a fantasy woman; and I'd lived that fantasy. The real Taylor was just using me for sex (not that I terribly minded), but her heart belonged to Jonathan Kwong. She would tire of me soon and that would be the end of that.\n\nBut Kaitlyn on the other hand... A wide smile spread across my face as I thought of the stunningly beautiful young blonde. Was she just a one-night stand? Could she be something more? I realized then that I knew almost nothing about her.\n\nOkay, she'd just turned nineteen and she was an Architecture student at Columbia. She was the neighbor and friend of Jonathan and Taylor, and she was incredibly kinky in bed... but that was really it. Did she have a boyfriend I didn't know about? Was she just screwing me for the hell of it on Taylor's recommendation?\n\nThere was... something... about Kaitlyn. The mere sight of her had sent lightning up and down my spine. Her intelligence, and especially her architectural savvy, intrigued the hell out of me. And her raw sexuality triggered some animal instinct deep inside me that both thrilled and scared me at the same time.\n\nKaitlyn simply had an incredible effect on me. Just being in her presence had made me forget I'd scheduled a date with Melody, and now that she was in my mind, I couldn't imagine stopping my thoughts about her.\n\nAnd hoping beyond hope, could she possibly be thinking of me right now?\n\n*Bah Bah BAP!* My cell phone erupted in a riot of noise. The pop song sounded much better as a full track, but at least I recognized the ring tone. And for a brief moment, my heart leaped up as I imagined that Kaitlyn might be calling me.\n\nA couple of days ago, I never would have thought I might feel disappointed to see Taylor's name flashing on the caller I.D. But... well, I was.\n\nI hit the answer button and said, \"Hey, Taylor.\"\n\n\"Mm... Jeffrey... I hear you and my little friend Kaitlyn had a good time last night.\"\n\n\"Ahem, well,\" I stumbled for a moment. \"I'll let the lady speak for herself. I'm not one to brag.\"\n\n\"Oh, but she's been bragging about you... She's been absolutely effervescent with thanks to me for introducing you two.\"\n\n\"Really?\" I couldn't help but let the glee show through in my voice.\n\n\"Mm... in fact, she's here right now...\" Taylor giggled, and then her laughter was cut off by a low, sensual moan, \"Ohhh...\"\n\n\"Taylor?\" I queried in curiosity. What was going on over there?\n\n\"Did I ever tell you Kaitlyn and I were more than just friends?\"\n\n\"Hmm?\" I'd known Taylor was bisexual. Hell, I'd had a threesome with her and her personal assistant Charlotte. My heartbeat, already rapid from my daydreaming about Kaitlyn, sped up even more as I added mental visuals to the sounds I was hearing through the phone.\n\n\"Well, let me put it bluntly,\" Taylor panted lightly around her words. \"I know in intimate detail just how sweet Kaitlyn's pussy tastes. And this morning, she still had a cum deposit inside for me to suck out of her.\"\n\nMy heart thumped so hard I was surprised it didn't burst out of my chest.\n\n\"To be perfectly honest,\" Taylor continued. \"She's tasting MY pussy *right now*, while I'm talking to you...\"\n\n\"Oh, gawd...\" I groaned.\n\n\"Now don't go jerking off or anything Jeffrey. Wouldn't want your tasty cum to go to waste. Now if you want to see this up close and in person, live and with full audio, come by the apartment tonight at seven.\"\n\n\"I'll be there.\"\n\n\"I know you will.\"\n\n***\n\n-- KAITLYN --\n\n\"Again!\" I gasped as Taylor hung up the phone. I lifted my head away from her bare-shaven crotch and flopped onto my back.",
        "\"Kitten, you've already come three times. And there's no more spunk for me to suck out of you,\" Taylor purred.\n\n\"Get the strap-on! I need cock! Please!\" I was delirious with pleasure. Memories of Jeff were still running through my mind and I needed to find release while I was being filled up with something big and hard. \"Just a quickie! It'll take less than two minutes! I just need to cum one more time!\"\n\n\"I've got a better idea.\" With that, Taylor got up and strode naked out of the bedroom.\n\n\"Aww...\" I moaned and reached down to diddle my clit, writhing in unfulfilled ecstasy as I twisted the sheets. I wanted it so bad and I started whimpering pitifully, getting depressed at being left alone with nothing but my ravenous desire.\n\n\"What have we here?\" John's deep voice filled the room and I felt an extra twitch in my hips.\n\nI looked up to see he was fully dressed, although Taylor had his pants around his ankles while her head bobbed back and forth along his growing shaft.\n\n\"Please... just a quickie...\" I panted and reached for him. \"I need... I need...\"\n\nTaylor stepped aside and aimed her fianc\u00e9 towards my glistening wet snatch. I bit my lip in anticipation and then let out a long moan as he penetrated into me. \"Ohhh....\"\n\nJohn reached down to my hips and set himself into a fast but steady rhythm. I closed my eyes and felt his throbbing heat inside of me. It felt so good... so deep... And I let my mind drift... to him. I could see Jeff... looking at me in adoration. I could see the love in his eyes. Mentally, I felt myself smiling. And as I was filled with ecstatic bliss, the orgasm I craved rushed up and overtook me.\n\n\"AAAAHHHHH!!!\" I screamed louder than I'd ever done before. My body locked up as my back arched, thrusting my tits into the air. Lightning bolts... Jeff's lightning bolts... shot through me. And then when it was done I collapsed onto the bed with a satisfied grin on my face.\n\nJohn, his duty done, pulled out of me. Taylor was wiping him off and tucking him back into his pants, despite his protestations. \"Save it for tonight, honey.\"\n\n\"Thank you,\" I murmured as I went limp. I couldn't wait to see Jeff again.\n\n***\n\n-- JEFFREY --\n\n\"Good evening, Mr. Lee.\"\n\n\"Good evening, Edward.\" I nodded to the distinguished elderly butler. He took my jacket and then asked if I wanted a drink.\n\nFeeling a nervous tremor run through my limbs, I nodded and said, \"I hear you make the world's greatest martini.\"\n\n\"Coming right up, sir.\" And with that, he left me alone in the formal living room.\n\nI sat down on the sofa and checked my watch. I was ten minutes early. Still, I half-expected Taylor to come waltzing in wearing nothing but lingerie. If I was really lucky, Kaitlyn would be with her and similarly attired.\n\nBut in the end, no one came save for Edward when he brought me my martini. He paused and waited while I took my first sip. The dangerous concoction was somehow as smooth as flat water and simply melted down my throat without any burn. \"Wow, that's quite good,\" I toasted him.\n\n\"Thank you, sir. Now, Miss Brynn told me to escort you to her when you arrived.\" He held a hand out to indicate the direction.\n\nI swallowed my latest sip and said, \"Please, lead on.\"\n\nWith some surprise, we didn't head in the direction of the guest rooms nor the master suite. Instead, Edward led me down a secondary hallway I'd never been down before. Just as we were entering the hallway, I let out a gasp of surprise and stopped dead in my tracks as a half-naked Cassandra Cooper stepped out of what seemed to be her bedroom.\n\n\"Evening, Mr. Lee,\" the statuesque blonde personal assistant to Jonathan Kwong smiled at me, oblivious to the fact that she wore nothing but a blue teddy and matching french cut panties. Her voluminous breasts strained at the pitifully thin fabric, threatening to spill over the top.\n\n\"Uh, Miss Cooper,\" I stammered while my eyes bugged out, trying to view as much mammary flesh as possible. And then she turned and headed down a different hallway, deeper into the apartment.\n\nBlinking rapidly, I saw that Edward was waiting for me by the next doorway. When I came up to him, he merely knocked, cracked the door open, and then walked away, heading back towards the front door from which we came.\n\nWith more than a little nervousness, I pushed the door open and looked inside. My jaw hit the floor a split-second later.\n\nTaylor was fully naked saved for black, high-heeled boots and what appeared to be black leather chaps. The heavy leather hung down the front of her legs and was tied around each of them, but the material left her ass completely bare and when she turned to face me, I saw that they were widely cut to expose her naked crotch as well. Her proud tits jutted straight out into the cool air, nipples rock hard. And she smiled at me as she let the riding crop in her right hand come to rest against her shoulder. \"You're early...\"\n\n\"Couldn't wait,\" I stammered as my eyes took in the rest of the situation. On the bed before Taylor were two exquisite asses. More specifically, Charlotte and Kaitlyn both were buck naked on all fours, their buttcheeks raw and red from the spankings they were receiving. I noticed then that Charlotte was wearing some kind of harness over her head, the straps covering her eyes to blindfold her while another strap retained a bright orange ball gag in her mouth. Her hands were cuffed together at the wrists, although she could still freely move her arms.\n\nKaitlyn, however, was not restrained and at the sound of my voice she flipped onto her back and licked her lips. \"Jeff! Oh, you're here! Come here! C'mere. Please! I need a cock!\"\n\n\"You've got one,\" Taylor mused, pointing to the slender vibrator currently buzzing in Kaitlyn's cunt.\n\nAlmost violently, Kaitlyn ripped the plastic device out of her and threw it aside, then resumed her urgent hand gestures while I cautiously approached.\n\n\"Aww...\" Taylor complained. \"I do all the work to get her revved up and get no reward for it.\" She flicked her eyes to a wall clock. \"It's only been twenty minutes.\"\n\n\"Clothes. OFF,\" Kaitlyn growled at me as I finally got within her reach on the bed. I was struck by the strangeness of the situation. I barely knew the girl. She had gone from beautiful stranger I once saw in a smoothie shop to wanton sex goddess writhing in agony and pleading for my dick in the span of two days. I'd come expecting a little conversation and drinking with Kaitlyn and Taylor before retiring to a bedroom. Maybe, if I was really lucky, I hoped to see the two beauties greet me wearing only lingerie before immediately going into a bedroom. Things weren't working out as expected.\n\nBut there was no denying the lightning bolts still sparking inside as Kaitlyn's green gaze fixed on me. There was no denying that the mere sight of the blonde teenager had me harder than steel. And I wasn't about to question Kaitlyn's desire to get to the fucking immediately.\n\nWhile Kaitlyn fiddled with my slacks and I stripped off my shirts, Taylor sighed. \"I had this wonderful little scene in my head of me and Kaitlyn in a sixty-nine when you arrived.\"\n\nThe lustful animal in me answered, \"You will.\"\n\nBy then, Kaitlyn managed to shove my slacks down to my ankles. I wasn't naked, but it was good enough. She wrapped her legs around my waist and sat up to guide me to her, and then with a squeal of joy she pulled my cock into her dripping wet snatch. \"Ohhh.... Fuuuuck...\"\n\nAnd like a junkie who'd FINALLY gotten her fix, she sighed and collapsed unmoving onto the bed, her hips twitching in the aftershocks of her quick orgasm. Meanwhile, I was so turned on by the sight that had greeted me on arrival, I was worried I would pop off rather quickly.\n\n\"Mmph,\" Charlotte moaned from around her ball gag, blindly turning left and right as if to see what was going on.\n\nTaylor lashed out with the riding crop, stinging Charlotte's left buttcheek. \"Quiet.\"\n\nCharlotte moaned again, much more happily and she wriggled her ass as if asking for more.\n\nTaylor checked the time again while I was pumping in and out of Kaitlyn. \"Maybe we should just move to the main room,\" Taylor suggested.\n\n\"Not yet,\" Kaitlyn gasped as humped her hips back at me while I gradually sped up my thrusting. \"Gawd I've been craving this all fucking day!\"\n\nMy control was already slipping away, and when Kaitlyn hefted her own tits in her hands and began tweaking the nipples, I groaned as my body started down the path towards imminent release. Ordinarily, I would have felt some embarrassment at such a short performance. But right now, the tightness of Kaitlyn's wet box coupled with the my mental amazement that I was fucking her brought me so much pleasure that I didn't even care.\n\n\"He's almost there,\" the blonde teen gasped. \"And after he fills me, I want to let him see you suck it out of me.\"\n\nThat was all it took, the mere image of Taylor slurping my jism directly out of Kaitlyn more than enough to set me off. And so, less than three minutes after entry, my eyes rolled up into my head and I slammed forward, my hips twitching as my cock cannon began blasting loads of cum into Kaitlyn's young pussy.\n\n\"Ooh... fill me... fill me up with your tasty cream, Jeff,\" Kaitlyn crooned into my ear as she clutched me to her chest. \"Mm... so much of it! You must have been excited to see me! More, baby... more. The more you stuff into me the more Taylor's going to have to suck out and the longer you get to watch that gorgeous supermodel cramming her tongue into my tight little pussy.\"\n\nIncredibly, I got a few extra squeezes out and then collapsed down while Kaitlyn patted my back. She let me lay there for a few seconds as I got my breathing under control. And then when I seemingly caught my breath, she looked past my shoulder. \"Dinner is served, madame.\"\n\nI rolled off of Kaitlyn while Taylor knelt on the floor between Kaitlyn's outstretched legs.\n\n\"Mm, twice in one day. Who'd have thought?\" The gorgeous brunette mused before diving into Kaitlyn's muff.\n\nI was quite possibly the most erotic sight of my life.\n\nFor a moment, things started to quiet down. I got my breathing under control and Kaitlyn was whimpering softly while Taylor's head wriggled in her crotch and I heard the soft slurping noises of the beautiful model draining the blonde teenager of my cum. But then a new sound caught my attention.\n\nLooking to the side, I saw that a still blindfolded and gagged Charlotte had rolled over and she was pumping a pink vibrator in and out of her pussy, her hands still cuffed together. Now that she was on her back, I could see what looked like alligator clips attached to her nipples, and more light welts on her breasts bespoke of further whipping from Taylor.\n\nCharlotte was such an obscene sight that almost immediately I felt a fresh twitching in my cock. The animal instinct awoke inside me, flooding my body with new testosterone and my lustful urges came to the fore. I circled around the bed and knelt on the mattress beside Charlotte's head.\n\nLeaning down, I started to unclasp the strap with her orange ball gag. Charlotte went still at the unexpected attention, and she stopped pumping her pussy, although the vibrator kept on humming. She gasped for air once I pulled away the gag, working her jaw to loosen it up once she was released.\n\nBut that freedom only lasted briefly. Kaitlyn saw what I was doing and she gave me a little smile before squeezing her eyes shut to absorb a particularly good lick from Taylor.\n\nAnd then with a darkly satisfied grin on my own face, I grabbed Charlotte's head in my hands and hunched forward with my hips, feeding my half-hard cock into Taylor's pretty assistant's mouth.\n\nEven through the blindfolding harness, I could tell the surprise on Charlotte's face when she realized my cock was being fed to her, but she just moaned and quickly extended her lips to gobble me up. And then I patted her head approvingly as she began sucking me back to life.\n\nI surveyed the room before me. Kaitlyn, the stunningly beautiful blonde teenager lay back across the bed, her volcanic tits pointing to the ceiling and gyrating enticingly as she wriggled with pleasure. Taylor, my fantasy woman, was still munching and slurping out MY cum out of her teenaged friend's twat. And Charlotte, the pretty brunette submissive was blindfolded and blowing MY cock.\n\nI could get used to this kind of life.\n\n***\n\nA chime went off somewhere. Taylor had moved up and was laying directly on top of Kaitlyn where they'd been passing my cum back and forth between their mouths and grinding their crotches into one another. Charlotte had flipped around onto all fours as she continued to fellate me, bringing me to full hardness.\n\nBut at the sound, the other three stopped what they were doing. I groaned unhappily, my body instinctively wanting to blow inside of Charlotte's mouth.\n\nTaylor stood up and held a hand out to Kaitlyn, \"Shall we?\"\n\nKaitlyn reached up and let Taylor help her to her feet. Charlotte reached behind her head, unsnapping the harness and pulling it off before blinking to refocus her eyes. Meanwhile, Kaitlyn came around and took both of my hands in hers. \"Come on.\"\n\n\"Where?\" I stammered, briefly looking around for my clothes even though no one else was making a move to get dressed.\n\n\"You'll see,\" the bubbly teenager giggled.\n\nAnd so, self-conscious of my nudity and with my left hand over my crotch, I let Kaitlyn tug on my right hand as she led me outside to follow Taylor and Charlotte down the hall.\n\nWe soon came to what could ostensibly be called a \"Family Room\", with plush carpeting, overstuffed couches slung low to the ground, and a media center along one wall. The d\u00e9cor and colors were warm and inviting, a stark contrast to the formality of the living room back by the front door.\n\nBut from state of dress of the people in the room, I don't think \"family\" would be the appropriate term. As my gaze swept up from Taylor's, Charlotte's, and Kaitlyn's naked backsides, I saw John Kwong, Cassandra Cooper, and an attractively muscular couple already in the room and similarly clad in their birthday suits.\n\nTaylor, as hostess, made the introductions. \"You've already met Johnny and Cassandra. The gorgeous brunette on the other couch is Rebecca and the gentleman who looks like he could break you in half is her boyfriend Jeremy.\"\n\nShe turned to me. \"Everyone, this is Jeffrey.\" And then Taylor turned to me. \"Ready to play?\"\n\nMy eyes flew open wide as my mind was suitably blown. The foursome we'd briefly had was already the kinkiest sexual experience of my life in terms of number of participants. Now I was in a room about to launch an orgy with two other men and five women, eight total people, and I scarcely believed I wasn't dreaming.\n\nI think I just stood there, stupified, for a minute. By the time I blinked again Taylor was returning from a wet bar off to the side where she handed Kaitlyn a martini glass. \"Cosmo?\"\n\n\"Oh, NOW you let me,\" Kaitlyn giggled, taking a sip.\n\n\"And what would you like?\" Taylor asked me, shifting her weight so that her hips jutted out and she proudly displayed her naked breasts to my gaze. Her body position immediately made me think of sex. And yet, despite all my long-term fantasies for the gorgeous supermodel, despite the five beautiful naked options I had in the room before me, I knew exactly what, and who, I wanted.\n\nI'd gotten over my boyhood fantasies. Taylor was amazing, but reality had replaced the fantasy. Charlotte stirred my lust and fed my natural male impulse for dominance, but she was really just another pretty face. Cassandra and Rebecca were unknowns, the allure of strange pussy always intoxicating. But none of them sparked that feeling deep inside me... like HER.\n\nI slid my hand around Kaitlyn's waist. And with total sincerity, I stated, \"All I want is right here.\"\n\n***\n\n-- KAITLYN --\n\n\"All I want is right here.\"\n\nJeff's statement caught me by surprise, and I turned around to look at him, still holding my drink up in alcoholus interruptus. I felt lightning crawl up my spine.\n\nAnd then setting down my drink, I looked deeply into his eyes before grabbing Jeff's head in my hands and launching my face at his. Our kiss was an explosion of passion that took my breath away. Now I've had a few moments where I felt like the world had shrunk down to just me and the lover I was with. Usually those moments happened during a great orgasm. But this was different.\n\nAll light and sound ceased to exist around us. My ears tingled at the sudden vacuum, as if all the air had been sucked out of the room in less than a second, leaving nothing but the hollow pants of me and Jeff breathing. There was nothing but darkness around, as if we were floating in space. We weren't even doing anything but kissing. And it felt so wonderfully perfect.\n\nJeff moaned into my mouth as my hands clutched him tighter to me. My right leg lifted up around his hip and I ground my crotch against his hard pelvic bone. And somewhere along the line, just when the dizzy pleasure from our lips threatened to render me unconscious, I crammed my tongue into his mouth and came, a wailing cry ripping out of my throat.\n\nThe air rushed back in and suddenly I realized that Jeff was lying flat on his back, shaggy carpet cocooning his naked body. I was lying atop him and I felt the wetness of my orgasm leaking out against my thighs. I pulled my head away slowly, panting heavily as I looked down at this incredible man in wonder. How could he make me feel like this? How could he make me orgasm just from kissing?\n\nJeff looked right back into my eyes with a smile on his face. That had been one of the most intense moments of my life and he wasn't even inside of me.\n\nI lowered my head back down to kiss him once again. This time, even though it felt great, we didn't whisk off to our own little world. I could hear the low thumping bass of some mood music and the arias of grunts and moans of six other people giving in to their lustful urges. But all my attention was on the one person with me right now.\n\nAs if like minded, Jeff never turned his gaze away from me as I simply reached down and guided his rock hard cock to my wet tunnel. And then sitting back, I cooed as I took him deep inside of me.\n\n\"Mm... do you feel it, Jeff?\" I whispered as I flexed my inner muscles while beginning to ride him.\n\n\"Feel what, baby?\" he moaned.\n\n\"This... perfection... I never thought... ohhh... never thought it could be like this...\"\n\n***\n\n-- JEFFREY --\n\n\"This... perfection... I never thought... ohhh... never thought it could be like this...\"\n\nIf Kaitlyn was talking about how incredibly powerful our lovemaking felt, then yes, I felt it. Sex with Taylor had always been thrilling, made even better by the mental knowledge that it was Taylor-fucking-Brynn I had my cock inside of. Sex with Melody was always good, mostly because we just fit well together and we knew how to pleasure each other. But neither of them ever felt the way Kaitlyn did. There was an emotional attachment, a chemistry, that I'd never felt before.\n\n\"It's amazing, Kaitlyn...\" I gasped, guiding her lithe body up and down my shaft with my hands firmly gripping her hips.\n\n\"Oh, love me, Jeff. Make love to me. Fill me up and never let me go!\"\n\n\"I do! I am! I will!\"\n\n\"Ungghhhh!\" Kaitlyn moaned as she crested over her first orgasm, dumping more honey into my lap and lubricating further so that she could practically glide effortlessly along my rod, moving faster and faster.\n\nAnd when she caught her breath, she used it to moaned erotically. \"Oh, Jeff... oh, baby... cum in me... I want to feel you cum in me again... I never want you to stop cumming in me!\"\n\n\"Oh, Kaitlyn. Kaitlyn!\" I groaned as we both sped up. I felt my soul lock onto hers as our eyes locked onto each other. I could actually read in her irises how close she was getting to another climax, and as my hips began to buck up off the carpet, I could feel my own orgasmic impulse automatically matching to hers.",
        "We were going to come together.\n\nAnd it was going to be spectacular.\n\nThe heavens opened up and their light shone down upon us. The trumpeting of angels sounded off in my ears. The brassy noise filled my senses and then melted away into an erotic cry.\n\n\"I'm CUMMING!\" The blonde teenager cried and slammed herself down on me, bending forward and jamming her tongue into my mouth at the same time.\n\nI couldn't answer verbally with her tongue in my throat, but I moaned in response and thrust upward, holding my hips there as my cum poured out of my cock and began flooding Kaitlyn's inner chamber.\n\n\"Mmph!\" she mumbled into our kiss as she felt the blasts impacting against her inner walls. And all the while her pussy muscles were spasming and caressing and squeezing, certain to pull every drop out of me.\n\nDrained, in more ways than one, I let my head drop back onto the carpet as I gasped for air. Kaitlyn turned her head and rested her cheek against my shoulder, resting her weight on top of me while I circled my arms around her, hugging her tightly. My cock slowly began to wilt inside of her.\n\nOnce again, I hadn't lasted very long. The orgy was still going on around us, and as I looked to the side, I could see that two threesomes had formed. Taylor was getting drilled from behind by Jeremy, the muscle-bound hunk, while she was lapping away at Charlotte's snatch in front of her. John Kwong had Rebecca riding his cock as he reclined lengthwise on a couch. His assistant Cassandra was riding his face while she looked down into his eyes between her legs.\n\nAnd then I turned my attention back to the sweet young woman still in my arms.\n\n\"Wow...\" I breathed.\n\n\"Amazing, wasn't it?\" she smiled at me, eyes sparkling. \"I always wondered what that would be like.\"\n\n\"What?\"\n\n\"Making love. Really making love...\" she breathed and then set her head back down onto my shoulder as I stroked her back. She was starting to get heavy, but I wouldn't have moved her for the world, just enjoying the pleasure of holding her in my arms the way Melody never really let me.\n\nIt felt like we cuddled together for an eternity before a sharp voice roused us from our semi-slumber. My eyelids fluttered open and I saw Taylor's spectacular naked form hovering over me.\n\n\"This is what happens?\" Taylor whined. \"I bring you to a party and you just cuddle up with Kaitlyn for the whole time?\"\n\nI just smiled pleasantly. Kaitlyn blindly reached a hand back and gave Taylor the bird.\n\nChuckling, Taylor knelt beside us and ran her hand along Kaitlyn's back. The teen finally opened her eyes and turned to look at her friend.\n\n\"That good, huh?\" Taylor asked.\n\n\"Mm...\" Kaitlyn hummed happily and squeezed me tighter. \"I think I'm in love...\" she purred.\n\n\"Hmph. A guy goes googly-eyed over you, gives you great sex, and you think you're falling in love,\" the blue-eyed beauty shook her head with a wry grin.\n\nKaitlyn went still at that comment, then picked her head up and look at me intently. And then matter-of-factly she turned and glared at Taylor with an intense green gaze. \"I've had plenty of guys who looked at me like I was hot and sexy. John looked at me with as much lust in his eyes as he felt for anyone, including you. But there's something in the way John looks at both you and Cassandra that was never there when he looked at me. He LOVES you two. Every fiber of his being wants to be near you two, and he would move heaven and earth to make sure of it.\" \n\nKaitlyn smiled and then returned her gaze to mine. \"Jeff looks at me that way.\" And then with an even bigger grin, she bent over to kiss me again.\n\n\"Wow...\" Taylor whistled. \"I mean, I was hoping you two would hit it off. But... wow...\" Taylor chuckled and stood back up. \"Maybe I should get you two a room.\"\n\nKaitlyn hugged me before sliding back and getting upright on her knees, my limp cock still just barely trapped inside her tight pussy. The pretty blonde surveyed the other nubile bodies in the room and then held her hand down to me. \"Well, I think we'll have plenty of one-on-one time in the future. But what do you think, Jeff? Should we join the party?\"\n\n\"You're all I need,\" I told her sincerely, even though my cock started twitching again, something Kaitlyn did not fail to notice.\n\n\"Hmm,\" Kaitlyn giggled. \"How about what you 'want'?\" She wriggled her hips, spurring new sensation into my growing prick.\n\n\"Well...\"\n\n\"It won't change the way I feel about you, Jeff. But for now, let's have some fun.\"\n\nI grinned. I couldn't believe my reality was turning out even better than my fantasy.\n\n***\n\nNEXT: CHAPTER 3"
    ],
    "authorname": "bluedragonauthor",
    "tags": [
        "billionaire",
        "anal",
        "kaitlyn",
        "taylor brynn",
        "secretary"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/jeff-thousandaire-ch-02"
}