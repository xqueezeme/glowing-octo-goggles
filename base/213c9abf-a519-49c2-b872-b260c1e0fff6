{
    "title": "Wilderwood Ch. 09",
    "pages": [
        "Chapter Nine: Just Between You and Me\n\nEmma has always been the confident one. I've been living on the edge of my nerves more often than I like to remember since we got together, but Emma has almost never lost her cool. Even when Zack walked in on us in the back room at Pop! she was the calm one. Our relationship has changed in incredible ways but she's still my big sister, looking out for me like she always did.\n\nRight now her dazzling green eyes are anxious in a way I haven't seen for a long time. Emma hasn't been this shaken up since the day after we first got together, and it's not hard to guess why even before she puts it into whispered words.\n\n\"This is what it's going to be like, isn't it? If they ever find out about -\"\n\n\"Shh, Sis.\"\n\nShe's not wrong. The scene in the ballroom of the Wilderwood Hotel is like a preview of what we can expect the day we're found out, only we both know that this is only a taste. The reality of it will be much, much worse.\n\nI want to put my arms around her. I want to hold her tight and kiss her and tell her we're fine. I want to give my big sister some shred of the reassurance she's always given me. Only I don't dare do any of this because there's two hundred people in this room and most of them are looking right at us.\n\nNews travels fast in a small town like this one, and bad news travels even faster. The contents of Alex Trowley's last video have gone around the room at the speed of light. I doubt many people in here have actually watched the whole thing yet - except for me and maybe Penny Knight - but after twenty minutes of smirking asides and whispers and huddled chatter there can't be anyone who hasn't been given the edited highlights.\n\nIt's like in the movies when they look at the map that's tracking the spread of the zombie plague. The society columnist of the Wilderwood Gazette was Patient Zero and now the map is all red and there's nothing left to do but pull the survivors out and then nuke the site from orbit.\n\nMom is over at one side of the room, in among a group of her friends. They're crowded around her and every so often one of them looks over her shoulder and shoots a poisonous glare across the room to where Dad is standing in among a group of his friends. Right now I'm surprised he's got any friends left. Girls on one side of the room, boys on the other. It's like it used to be back in high school. Any minute now they'll start giggling and pushing each other out onto the dance floor.\n\nThere actually are a few people up dancing. After Morgan fled the stage in tears, Harold Dawes, the manager of the hotel, came up onto the stage and said that wouldn't it be a splendid if everyone were to put this aside and step up to the dance floor. He was so desperately polite about it that it was almost funny.\n\nNot that it had much effect. The people in here tonight came out to celebrate, or at least watch, the return of our family to the elevated place in town society that's always gone with the Wilderwood name. They seem to be having much more fun watching us come crashing down again, and a few of them aren't even trying to hide it.\n\nDuring all the awkward shuffling of the last twenty minutes Emma and I have ended up near the front of the room, next to the table displaying the archtectural model of the Wilderwood project that was being launched tonight. Magic the cat, having jumped down from the stage after Morgan left the room, is sprawled out asleep in among the little buildings like a very chilled and very furry Godzilla.\n\nA couple of our friends have come over to join us. Jennifer's here, and Chris and his girlfriend, Haley. Chris has been drifting away from our group since he started dating Haley - she's a cheerleader and that's a betrayal of our agreement that the Coven are the hottest girls in town - but I appreciate him being here right now. All the more because he's one of the Lakes, and his parents are probably loving every second of this.\n\n\"Dude, what the fuck...\"\n\nHe's got no more idea of what to say to us than Haley or Jennifer, and just stands there as awkward as everyone else, but he's a big guy and his bulk - and the fact he's a Lake - helps discourage people from swarming around us.\n\nMost people. Penny Knight slides around him and gives me and my sister a look that's dripping in fake sympathy. I'm in no mood to play any more society games tonight and I step in front of her before she can swoop down on Emma.\n\n\"You just couldn't wait. You had to tell our mom and you had to tell her in front of the entire fucking town.\"\n\nShe doesn't even blink, just reaches out a claw and pats me on the shoulder. \"I thought it was better that she hear it from a friend,\" she says, and I wonder idly if it will knock the story about Dad off the front page of the Wilderwood Gazette if I punch their society columnist in the face. I'm really tempted to find out.\n\nPenny gives a little pout and backs off.\n\n\"Let's go,\" Emma says. She's picked up Magic and is absently scritching him behind the ears. He purrs and rubs his head against her neck. I'd do the same if I was in his position, and I really wish I was.\n\n\"Yeah.\"\n\nI walk over to where Uncle Nathan is standing. He's talking to Pete Warren in a low, controlled voice.\n\n\"...and under no circumstances will I allow further development of the valley beyond the boundaries of what has already been agreed upon. You may tell your friend, the congressman, that.\"\n\n\"Let's not be hasty, Nathan.\"\n\n\"You may also tell him that I'm well aware of when he is next up for re-election.\"\n\nWarren smirks. \"Even you couldn't flip this seat.\"\n\nUncle Nathan just stares him down until the smirk disappears. It doesn't take long. \"Perhaps not, but if I put my support behind a challenger from inside the party your man won't even be on the ballot. The Wilderwood is mine and my family's, Peter, and if you and your associates try to bite off any more than the scraps I throw you I'll make you choke on it.\"\n\nHe doesn't wait for a reply, just turns away from him and looks over to me. Pete glowers at his back for a moment and then backs off into the crowd.\n\n\"Hey, listen,\" I say to my great-uncle. \"We're getting out of here.\" I shrug as I'm saying it, like I'm trying to shake off all the eyes i can feel on me.\n\nUncle Nathan takes one more glance around the room. It's interesting to see how many people who've been watching us avert their eyes when he looks their way. \"Yes,\" he says, \"I think the Wilderwoods have provided enough entertainment for one evening.\"\n\nEmma joins us and we follow him to the doors. Everyone watches us go but the crowd melts alway in front of the head of the family like they're being pushed aside by the aura of wealth and power that seems to surround him.\n\nMy sister is still holding Magic.\n\n\"You're taking the cat with you?\"\n\n\"Yes.\"\n\nSince Dad and Morgan were going to send him back to the shelter tomorrow morning I guess that's okay. I also guess we've got a cat now.\n\nAs we pass by the group she's standing with I catch Mom's eye and she walks over to join us. At the door I glance back and see Dad is still standing with the people he's been talking to since this all blew up. He's got a wary, hunted look on his face, but if he's worried about how Morgan is taking this he's hiding it well, seeing as she left the room twenty minutes ago and I'm not sure that he's even noticed.\n\n* * * * *\n\nThere's a big, black car pulled up out in front of the hotel. It's one of those old British cars, a Jaguar, with a hood so long the front of the car is in a different timezone from the back. At least that's how it always looked to me and my sister when we were kids.\n\nIt belongs to Felix, who works up at the Hall. We used to think of him as Uncle Nathan's butler, because we figured a house as big and old as Wilderwood Hall should have a butler. Really he's his secretary, chauffeur and everything else besides. Felix could do anything, we decided back then, and if Uncle Nathan was only distantly friendly to us when we were younger then Felix was an ally. We called him Felix the Fixer, though the mess we've left behind us in the hotel tonight is surely beyond even his ability to fix.\n\nHe was only in his mid-twenties when we first met him, but ten years on he hasn't changed. He's still slim and sleek and sharp suited, though his tangle of red hair is as messy as ever. Felix never could get his hair to sit right and it always made a weird contrast with the rest of his appearance.\n\nHe wasn't at the event tonight so I guess Uncle Nathan must have called him after what happened. He gives us a quick nod and an even quicker smile as he comes up the steps and then he and Uncle Nathan walk off to the side to talk. Their voices are hushed and I can't hear what they're saying but I see Felix nod several times.\n\nIt's a warm night still but Mom shivers and pulls at the fur around her shoulders. She's more self controlled than I'd have thought possible, though she's always been fairly aloof. We've never been close really, and even when she was at her most affectionate with me and my sister when we were younger it was still like she was playing the part of a loving mom rather than being one, though we didn't pick up on that until we were into our teens. That's another depressing thought to throw in with the rest of this awful night.\n\nMom looks over to Emma, who's standing nearby, looking down at the cat she's holding.\n\n\"What are you doing with that?\"\n\nI'm looking at my sister, though she's not looking my way, and willing her not to start yet another fight with our mom. Yeah, Mom has been a non-stop bitch to her ever since she came home from college, but we don't need any more drama tonight.\n\n\"I'm taking him to Lauren's,\" Emma says, not looking at her. \"I'll be staying there for a few days.\"\n\nShe lifts her head and glances over to me. I get it. As calm as she is it's obvious our mom is incredibly pissed and my sister doesn't want to be around when she finally explodes. I'm less likely to set her off than Emma is.\n\nUncle Nathan walks back over to us with Felix, and Mom tells them Emma's going to her friend's house.\n\nUncle Nathan nods. \"Felix will drive her.\"\n\nFelix gives a small, careful smile and runs his fingers through his hair. It's not like he could make it any messier.\n\n\"It's been a while,\" he says to Emma. \"I hope you don't mind if I drive a bit slower than you're used to.\"\n\nWe didn't always go up to the Hall with our parents. A few times they'd go away for a weekend together, just the two of them, and we'd go and stay with Uncle Nathan while they were away. If we were lucky Felix would come and collect us in the Big Cat, as we called it. We'd sit in the back of the beast and when we came to the long, twisting road that led up through the forest to Wilderwood Hall my sister would lean in between the head rests of the front seats and urge Felix to go faster. He'd smile and say \"Well, just this once...\" and then he'd do something with the pedals and the gear stick that would make the Big Cat leap forward with a roar while Emma squealed with delight.\n\nEmma gives a quick, involuntary smile at the memory of those wild rides, which I'm sure is why he said it.\n\n\"Were we actually going any faster?\" she asks him.\n\nHe gives an exageratedly evasive look to the side. \"Well...\"\n\n\"I knew it!\"\n\nI walk down to the Big Cat with them and after opening the door for her Felix strolls around to the other side of the car. Emma glances over to me and I can see she's still tense and anxious. On an impulse I lean in and give her a kiss. It's nothing, a brotherly peck on the cheek, but for the briefest moment my sister's eyes go wide.\n\n\"I'll call you later, okay?\" I say quietly.\n\nEmma gives me a soft, shy smile that's unlike any I've ever seen from her, then she nods and hugs the cat in her arms a little tighter. \"Yeah, do that.\"\n\nThey get into the car and it pulls smoothly out from the driveway of the hotel. As it passes onto the main road the quiet of the night is suddenly broken by an engine howl as the Big Cat roars. It sounds exactly like I remember.\n\n* * * * *\n\nA word from Uncle Nathan to one of the hotel staff waiting by the entrance sends them off to fetch up a car up to take me and my mom home. While they wait me and Mom stand at the top of the steps, side by side. She's only wearing low heels tonight, but she's still taller than him, very poised and elegant in her evening gown with her fur draped on her shoulders. When Mom reaches up to pull the fur tighter around her I'm reminded of the way Emma sometimes sinks into her leather jacket like she's trying to burrow into it.\n\nThey don't say a word, or even look at each other, until the car pulls up.\n\n\"I'm sorry about tonight, Cynthia,\" Uncle Nathan says quietly.\n\nMom turns to look at him and her voice is colder than I've ever heard it. She's never liked him, ever, and it all seems to boil up now, though her voice stays so low I doubt any of what she says can be heard by the hotel staff behind them by the doors.\n\n\"Are you really, Nathan? I don't know if I believe that. You've played your own games with us so how is this any different?\"\n\nUncle Nathan meets her glare evenly, unmoving and expressionless.\n\n\"We've never been good enough for you, have we? Never good enough for the family name. Oh, I know you don't even think of me as a Wilderwood. I just married into the family, I'm not of the blood.\" She spits that last word out with such cold fury that my great-uncle actually flinches, but she's not done yet.\n\n\"My grandmother warned me. She said the Wilderwoods were cursed. I should have listened to her.\" She gives a short, bitter laugh and then her shoulders sag as the last of her energy drains out of her.\n\n\"Whatever I think of James now,\" she says softly, \"he was right about you.\" \n\nUncle Nathan drums his fingers on the head of his cane, and then he nods to me. \"Jamie, you should take your mother home.\"\n\nHe's still standing there as our car pulls away from the hotel. He doesn't watch us go, but he's leaning on his cane more heavily than he has all night.\n\n* * * * *\n\nWe don't say much in the car, and once we get home Mom takes a sleeping pill and goes up to her room. The house has never felt so quiet, and I wander around restlessly for a while before I remember that I said I'd call Emma.\n\nI dial her number and it's not until I hear the phone ringing in her room that I remember that she forgot to take it with her tonight. I walk in and find it lying on a chair under the glossy folds of the latex dress Emma was wearing before she changed into the one she actually wore to the event.\n\nI'm exhausted after the night we've had and drop down onto Emma's bed, nudging the Wilderwood Devil plushy off her pillow before lying back and dialling Lauren's number. She answers pretty quickly and I hear her go upstairs to pass the phone to my sister.\n\n\"Hey, you.\"\n\n\"Hey.\"\n\n\"Where are you?\"\n\n\"Lying on the bed in one of the guest rooms. It's huge. The room, I mean, but also the bed. Where are you?\"\n\n\"At home. Lying on your bed.\"\n\nEmma giggles. \"I should be lying on top of you.\"\n\n\"Yup.\"\n\n\"I almost died when you kissed me outside the hotel.\"\n\n\"Yeah, sorry about that.\"\n\n\"Don't be.\" Emma gives a dreamy little sigh. \"I needed that, after tonight.\"\n\nWe've done so many wild things this summer that a brotherly kiss on the cheek hardly seems like something to get emotional over. Sometimes I still don't understand my sister.\n\n\"I'm going to stay up here for a couple of days,\" Emma says. \"Away from the noise.\"\n\n\"Want me to bring you up some of your clothes?\"\n\n\"Sounds like you want an excuse to go through my underwear drawer, little brother.\"\n\n\"I never did that, Sis.\"\n\n\"Never?\"\n\n\"Okay, maybe once.\"\n\nEmma laughs. \"I'll just borrow Lauren's gear, like I did upstate.\"\n\nI give an involuntary little groan at the recollection of the story she told me earlier, and she laughs again.\n\n\"How's the cat?\"\n\n\"You mean how's our cat?\"\n\nYeah, I saw that coming.\n\n\"He's fine. We didn't have any cat food but Lauren found some salmon from DeVillier's in the fridge and he chowed that down.\"\n\nDeVillier's being a crazy expensive delicatessen where you probably need to speak French and Italian just to understand the signs in the window. Mom shops there when we have guests for dinner and she wants to impress.\n\n\"Great, so we've got a cat with very expensive tastes.\"\n\n\"We'll get him some cat food tomorrow.\" Emma pauses before asking, \"So, how's Mom?\"\n\nI'm almost surprised she's asking. \"She's... okay, I guess. She had an argument with Uncle Nathan after you left.\" That feels like playing it down, but I still don't know what to make of what she said.\n\n\"She's never liked him.\"\n\n\"Yeah.\" She never has. Even when things were good and we were regular guests up at the Hall our mom was never more than polite to our great-uncle. Like so much else it's something we only realised much later.\n\n\"So you think they'll get back together? Mom and Dad?\"\n\n\"No, I think this is it.\" It's not so much the scene inside the hotel that makes me think that, but the scene outside.\n\n\"Our grandfather was divorced, wasn't he?\"\n\n\"Was he?\" James Sr. died when we were very young, so we never really knew him.\n\n\"I think Mom said something about it once.\" Emma sounds thoughtful. \"Remember when we were looking up the family history? Our great grandfather was divorced as well. Richard.\"\n\nYeah. Twice.\"\n\n\"Now Mom and Dad. Wow, the Wilderwoods suck at marriage, don't they?\"\n\n\"We'll be the exception.\"\n\n\"We're not married,\" says Emma, and gives a short, nervous laugh.\n\nThe last time we drifted onto this subject we both backed away from it immediately, but it's been a stressful night and I want to reassure Emma that we're okay. I could do with some of that reassurance myself.\n\n\"If I asked you, Sis, would you say yes?\"\n\n\"No.\"\n\n\"Huh?\"\n\nEmma laughs. \"Not when we're still in college, little brother.\"\n\n\"Okay. After we graduate then.\"\n\n\"For sure.\"\n\nIt's a fantasy and we both know it. I don't even know if it's legal, but I know there's no way it can ever happen, and Emma knows it too. For an hour or so we forget about that though, and have a chilled, playful chat about the details of the wedding we'll never have.\n\nWe discuss Emma's dress (black, of course, with a very tight corset and a lot of lace), and our vows. Emma is very insistent on saying love, honor and obey, and the emphasis she puts on that last word is so hot I give another little groan into the phone. It's crazy how easily my sister can push my buttons.\n\nWe don't get very far with the guest list (Lauren, Zack, Lucy and... um...) but we agree on Europe for our honeymoon. I mention Las Vegas but Emma says she'll break up with me if I so much as hint that we get wed by an Elvis impersonator.\n\n\"Hey, what happened to love, honor and obey?\"\n\n\"Don't push your luck, little brother,\" she says in her big sister voice, the one she'd use when she was annoyed with me. I heard it a lot for a few years during high school, and it never sounded as good as it does tonight.\n\nSo we laugh about that and talk some more until we're both too sleepy to talk anymore. It's a good way to end a bad day.\n\n* * * * *\n\nIn the morning Mom tells me that she's going to go and stay with her sister for a few days. Her sister's family don't live in Wilderwood so that will take her out of town until all this dies down. We have an awkward, stilted conversation over breakfast that goes nowhere until the cab arrives to take her to the train station.\n\nToday's edition of the Wilderwood Gazette has already been delivered and is lying unread on the kitchen table. The family photo with the cat is on the front page but it's obvious that the accompanying article was written before the event, and Cody just sent off her pics as she took them. There's a couple of pages of pictures in the inside pages as well and it's mostly the ones she took of people arriving at the start of the evening, including one of Emma and I. I study it for a while and try to work out if we look like brother and sister or like a couple. It looks so obvious to me, but I guess to anyone who didn't know about us it would look different.",
        "It's Saturday, so I go into Pop! like I usually do. I'll see Emma later, up at Lauren's, but right now I just want to act like everything is normal. It's a young crowd that hangs out there - from high school and college mostly - and I tell myself that they won't be that interested in the society drama of last night.\n\nI'm such a fucking optimist.\n\nZack has the day off but Tina is there, working the cafe counter with a couple of part-time staff who come in when it's busy. As the mayor's daughter she was at the event, with a ringside seat at the same table as the Lakes and Penny Knight. Now she keeps giving me these worried, nervous looks and after a while I start to feel really bad for her, because Tina's one of the nicest people I know and the scene last night must have made her super uncomfortable. I wait for a lull at the counter and then wander over to talk to her.\n\n\"Hey, at least the food was good and the cat was cute, right?\"\n\nTina blushes and nods and gives a little half smile. She stammers out a few words and asks if I'm okay and if Emma's okay and if Mom's okay, and I spend a few minutes playing it all down and acting like it's no big deal. Eventually she relaxes and can actually look me in the eye again.\n\nTrent and Kenny on the other hand...\n\nit's not like I expect much from Kenny, and Trent subscribes to Trowley's channel, so when those two roll in around midday I know what's coming.\n\n\"So hey, did you know your dad's been fucking his secretary?\" is Kenny's subtle way of bringing it up.\n\n\"No, I thought he was too busy fucking your mom.\"\n\n\"Dude!\"\n\nTrent at least tries to look uncomfortable. \"Trowley really went for it.\"\n\n\"He's got the fucking hotel bugged.\" It's good to think that the cops are probably going to want to talk to him about that. No one has ever taken Trowley to court over anything he's said - because it's usually too out there to be taken seriously - but he's surely gone too far this time.\n\n\"He said he got the recording from an anonymous source.\"\n\n\"Bullshit.\"\n\nSo we do a few minutes on Trowley's 'anonymous sources' over coffee before Kenny gets onto a topic they both find a lot more interesting.\n\n\"You didn't tell us you've been dating Lauren Whitley.\"\n\nOh yeah. That.\n\nIt takes no time at all to work out how this story got out. Jennifer was at the table when it came up, and since Emma decided it would be funny to act like it was a real thing Jennifer will have told her friends, and they will have told their friends, and now everyone knows it. When gossip travels this fast it's a wonder this town even needs a daily paper.\n\nIt's not that long ago that my friends were in awe of me for just having casual, friendly conversations with the Queen of the Coven, though that lessened a lot after Zack started dating Lucy and they shifted their awe (and disbelief) onto him instead. Now that look is back, and I figure I might as well enjoy it while it lasts.\n\n\"Yeah,\" I say as casually as I can, \"she's going back upstate in a week or so... but we're still friends.\"\n\nI lean on the word 'friends' just enough and reap the rewards.\n\n\"Dude...\"\n\n\"Wow...\"\n\n\"Yeah,\" I say. \"Lauren's cool.\"\n\nI don't even have to mention the sex dungeon Lauren is rumored to have up at her place. I know they're thinking it.\n\n* * * * *\n\nThat's about as good as the day gets. Nobody else says anything to my face but I see some looks and hear some whispers. I don't know if I've felt quite this conscious of being a Wilderwood since Mr. Alderney took my high school class on a history walk that took us around every one of the statues of my ancestors that stand in this town.\n\nSteve says nothing about any of it and spends most of the morning either in his office at the back of the store or prowling around giving his customers looks that are disdainful even for him. He brightens up in the early afternoon though when one particular customer walks in.\n\nSlim and blonde, about thirty, with piercing blue eyes behind her steel rimmed glasses, the director of the Newley Institute is widely agreed to be the hottest woman in town, except maybe for Officer Rydell. We don't count the Coven. They're girls. Dr. Reinmar is a woman.\n\nShe's in here only ocassionally, and I've talked to her a few times when she's come in for a coffee. She's friendly enough, but I won't deny she intimidates the hell out of me. It's not just her movie star looks or that she's so obviously the most intelligent person I've ever met, it's that her eyes are like lasers and whenever they lock onto me I feel like she knows everything about me. She's dressed casually today, in a loose patterned jacket and skinny pants, but the glasses still give her an air of authority. Dr. Reinmar is super hot, but she scares me too.\n\nWhich is also hot.\n\nSteve leaves off from glowering at some high school kids who've been nudging each other and giggling in my direction and walks over to greet her as she comes in.\n\n\"Dr. Reinmar,\" he drags out doc-tor into two distinct syllables. \"To what do we owe the pleasure of your company?\"\n\nShe arches a dark, perfect eyebrow. \"Do all your customers get such a personal welcome, Mr. Whittier?\" She's got this dry, impossibly well spoken accent, like even the oldest families in town can hardly pull off these days.\n\nSteve shrugs. \"Only the ones I think might steal something. This way I can keep an eye on you.\"\n\n\"Why would I want to steal anything of yours?\"\n\n\"You tell me. Crazy people are your speciality, not mine.\"\n\nThey're always like this. Everyone knows that Steve has a massive crush on the doc, though no one ever says so to his face. They both seem to enjoy the back and forth though, and at least now I know my boss will be in a good mood for the rest of the day.\n\nLater though, after Dr. Reinmar has left, Steve taps me on the shoulder and points one finger toward the back of the store. I follow him into the dark pit of his office and he drops into his chair and gives me an unusually direct look.\n\n\"You've had a lousy couple of days, haven't you?\"\n\nSteve rarely talks about personal stuff and even more rarely sounds like he's taking it seriously. He's doing both now and it's so unexpected I'm not sure how to react.\n\n\"Yeah, I guess.\"\n\nHaving looked at me for a good thirty seconds longer than he usually does Steve now curls his fingers and studies at his nails. \"You're okay, Jamie. At least you're not especially annoying. I wasn't sure about having the Prince of Wilderwood around here but you don't seem to give a shit about that even if everybody else does, and I like that. That's my advice to you now. Keep not giving a shit, because this is a three day wonder and when it's over you'll still be you and everyone that's smirking about this now will go back to treating you like the young lord of the manor. Might as well make that work for you, because they'll do it anyway, whether you want them to or not.\"\n\n\"Yeah.\" He's probably not wrong about that.\n\nSteve looks up from his nails. \"I've been wondering though...\"\n\nUh oh.\n\n\"You knew this was coming, didn't you? That's why you were asking me about Trowley a few days ago.\"\n\nI nod. \"I knew something was coming. He's been asking questions.\"\n\n\"Thought so.\" Steve sighs. \"Since I'm handing out life lessons today here's another. Trowley's done a number on your family and you probably want to get even with him. Don't. Stay away from him. He's dangerous.\"\n\n\"'Only to my sanity.'\" I'm actually quoting Steve, from our last conversation about Trowley, but he just grimaces.\n\n\"Seven or eight years ago Trowley spent six months up at the Newley Institute, in one of the rooms that don't open from the inside. They still have those, but it's kept very quiet. I don't know exactly why but he was categorised as dangerously unstable.\"\n\n\"I didn't know that.\"\n\n\"Nobody does. It was kept very quiet. Anyway, little Alex went off to the rubber room and nobody was any the wiser when he resurfaced six months later. Cured.\" Steve gives a contemptuous snort. \"He was cured alright.\"\n\n\"Why was it hushed up?\"\n\n\"Your guess is as good as mine. It's not like Trowley has many friends in this town. Jamie, I shouldn't even be telling you about this, but I don't want you going off half cocked and challenging Trowley to pistols at dawn or whatever it is you blue bloods do.\"\n\nI smile. \"I don't think there's any chance of that.\"\n\n\"You say that now, but I know how touchy you aristocrats can be when your family honor is impugned.\" He shakes his head. \"It's not worth it.\"\n\n\"Yeah. Thanks, Steve.\"\n\n\"Yeah, yeah.\" He makes a vague, dismissive gesture. \"Now get out of here. Take the rest of the day off.\"\n\n\"I'm fine. Really.\"\n\n\"I'm sure you are, but I'd still like to not spend the rest of the day fighting the urge to ban every single person I see giving you the sideeye and whispering behind your back. Come back on Monday. They'll have found something else to get excited about by then.\"\n\n* * * * *\n\nI'm not going to challenge Trowley to a duel. Now that the shock of it has passed I'm not even that pissed at him. He's taken a swing at just about every prominent family in town so why not us too? He's done two videos about Lauren and she just laughs it off. Anyway, the last thing I'm ever going to do is get bent out of shape about the good name of the Wilderwoods. I'm just relieved it was about Dad and not about Emma and I.\n\nSteve acts like he doesn't care about all the gossip and drama and social rivalry that goes on in this town, and he's always been indifferent at best to me being a Wilderwood, which I liked. I guess he does take some of it seriously though, and just hides it behind that snarky Brit attitude.\n\nI've left Pop! now and as I cross the street I'm wondering how Steve knows about the thing with Trowley since, if I've got the dates right in my head, it must have happened before he even came to Wilderwood. He couldn't have heard about it at the time and if it was all hushed up then he could only have heard about it later from Trowley himself (seriously unlikely) or from someone who worked up at the Institute then, or has access to the records now.\n\nWhen the image of Dr. Reinmar pops into my head I literally stop in the middle of the street. Oh no, no fucking way...\n\nA middle aged couple huff as step around me on the narrow sidewalk. From the look they give me I guess I must have said that out loud. Wonderful. Now they can tell their friends that the young Mr. Wilderwood is standing in the middle of the street muttering to himself like a crazy person.\n\nAs hard as it is for me to get my head around the idea that my boss might have hooked up with one of the hottest women in town it would explain a lot, like why Trowley is banned from Pop! and why Steve so completely loathes him. Trowley's always had an obsession with the Newley Institute - and I guess I know why now - but it's only got worse since Dr. Reinmar took over as the director a year ago.\n\nOf course they might just be friends, but somehow I find that idea even more unlikely.\n\nI need to go home and pick up some stuff for Emma before I head up to Lauren's place. At least that's the plan, but as I come up the street I see Dad's BMW parked in the driveway. I've no idea what I have to say to him, and as it turns out the answer is not much, because if the conversation I had this morning with Mom was awkward the one I have now with Dad is even worse.\n\nHe's shaken off that wary look from last night and follows me around as I go upstairs. He stands outside the bathroom while I take a shower, and outside the door of my bedroom as I change my clothes, and all the time he's coming out with the full range of Dad Speak.\n\n\"Your mom and I...\" and \"You'll understand that one day\" and \"We'll get through this, as a family\" and all the rest of it. I'm hardly even listening to most of it, and answering mostly in one or two words, but he doesn't seem to notice and goes on rewriting the events of last night until he's more or less saying that everything would have been fine if Mom hadn't made a scene.\n\nIt's not an act. He really believes it. In Dad's world sleeping around is just something that men do (but not women, though that goes unsaid) and the rest of it he shrugs off as just Man Talk. He doesn't mention Morgan at all.\n\n\"You've got to show balls in business, Junior,\" he says, and I'm not sure he doesn't actually thump his chest as he says it. \"People respect that. Your mom... well, women let their emotions run away with them. Like that girl, Lauren, right?\"\n\nOh for fuck's sake.\n\nI've always known Dad isn't a deep thinker - I don't think I've ever seen him with a book in his hands - but the level of self delusion here is off the fucking charts, and I can't even be bothered arguing with him about it. I had thought about asking him about what Mom said to Uncle Nathan last night, but I know if I do I'll only get more of his bullshit, so I go into Emma's room and since I can't rummage through her clothes while Dad's standing there I just grab her phone and then get the hell out of there as quick as I can.\n\n* * * * *\n\nIt's late afternoon by the time I get back into the centre of town. I could head up to Hamilton Hill now but I'm still wondering about the story Steve told me, and I decide to do some research, so I go into the bookstore across the street from where I work.\n\nBarton Books is smaller than Pop!, and inside it's sunny and comfortable, with a couple of couches off to one side where the book clubs have their meetings. Emma is more of a reader than I am but the owner of the bookstore, Howard Barton, has always been nice to me. He's nice to everyone, which makes me wonder how he can get along so well with Steve, who's nice to no one.\n\nHe does though, and Steve often wanders across to talk to Howard when he's in a mood. If he's talked to anyone else about Trowley it's going to be Howard. I'll have to be subtle though, since I don't want Steve to know I'm still asking questions about this.\n\nWhen I walk in Howard is making adjustments to the books on one of the display tables. His wife is standing nearby, chatting with a couple of customers. The Bartons are pretty old; not as old as Uncle Nathan but not too far from it, and Mrs. Barton used to be a teacher at the elementary school before she retired. They're not actually from the town originally, though they have lived here for as long as I remember.\n\n\"Hello, Jamie,\" Mrs. Barton says with a smile. \"I haven't seen you in here for a while.\"\n\n\"Hey, Mrs. Barton.\"\n\n\"You're a long way out of elementary school, Jamie. I think you can call me Gloria now.\"\n\n\"Sure, Mrs... Gloria.\"\n\nHoward grunts. \"Leave the boy alone. If he needs anything I'm sure he'll let us know.\"\n\n\"Don't mind him,\" his wife says. \"He's just in a mood because the college released this year's reading list and he doesn't approve.\"\n\nThe back and forth between them reminds me weirdly of Steve and Dr. Reinmar, except that it's much more obvious that it's all meant in fun. I try to imagine Emma and i talking to each other like this fifty years from now but I can't get my head around the idea. We can play around and chat about our long term plans but I don't think either of us think of any of that as entirely real.\n\n\"I criticise three titles and she makes it sound like I want to burn the lot,\" Howard is saying now. \"You could help me with this, instead of just loitering around pestering our customers.\"\n\nI leave them to it and go and browse among the shelves. A book with the title 'Master of Her Heart' makes me think of the conversation I had with Emma up on the roof of the hotel last night. I pick up the book and sure enough it looks just like the ones my sister used to read. There's a big dark house with one window lit upon the cover, with ominous clouds in the sky and a woman in a long dress looking agitated. Like there always is. I flip the book open at random and read a few lines...\n\n...his gold flecked eyes glittered dangerously in the flickering candlelight. Arabella trembled beneath that unwavering auric gaze and her breasts heaved against the imprisoning lacing of her red velvet bodice. How she yearned to be free, free of these feelings that tormented her so, free of the mysteries of her past and the uncertainties of her future, free of the unbreakable chains that his every word and gesture forged more tightly around her heart. Dark and terrible secrets hung like a thunderous black cloud over this place, a place to which she should have never come again, and yet...\n\n...Yeah, it's definitely in the same style.\n\nI browse through the rest of the Romance section looking for a copy of 'The Master of Wilderwood Hall' but I don't find one. Emma said she read it years ago but the way she was talking last night it definitely made an impression on her and I am curious about it now. Also there's the stuff about riding crops and yeah, I'm curious about that too, though I seem to remember that there was never any actual sex in those books. All the good stuff always seemed to happen in between the end of one chapter and the start of the next.\n\nHoward does sell old, second hand books as well, and I think about asking him if he's got a copy of that one, but the thought that he might have read it puts me off that idea. I can imagine the looks I might get if I ask them about a romance novel involving two characters with the exact same names as me and my sister.\n\nSo I don't ask, and I'm still wondering how to ask the questions I want to ask. So I do some more browsing.\n\nThe display tables all have little signs standing on them. 'New Fiction', 'New Non-Fiction', 'Best Sellers' and so on, including one that says 'Local Interest'. I spent the whole of high school trying to avoid this subject, but I'm interested now. I'm not surprised to see the family name is well represented in the tourist guides and local histories - there's two full pages of entries under the names of various Wilderwoods in the index of a thick history of the town - and there's a couple of other titles that catch my eye.\n\nThere's a book about Jonathan Wilderwood, 'The Mayberry Letters: Jonathan Wilderwood and the Revolutionary War', and another, 'The Devil Went Down to Georgia: a biography of Colonel Ethan Wilderwood.' The cover of that one shows a sabre driven into the ground through a tattered Confederate flag against a background of a burning forest.\n\nThere's also a couple of books about the actual Wilderwood Devil - 'In Search of...' and 'The Mystery of...' as well as a children's book called 'Wildy and the Witch.' That one has a cover illustration showing the familiar form of the furry red bear-wolf next to a girl of about 12 who's wearing a witch's hat. They're both smiling (at least I think Wildy is smiling, it's hard to tell with those teeth) and it's really cheesy looking but I pick it up anyway. Emma might get a kick out of it since she's so fond of our family fiend.\n\nThe other customers who were in have left by now and when Howard looks over my way I tap the two more serious looking books on the Devil. \"Are either of these any good?\"\n\nHe rubs his beard. \"I don't think I'm spoiling the ending of 'In Search of...' if I tell you that he doesn't find him.\"\n\n\"I kind of guessed that.\"\n\n\"There's some nice photos of the Wilderwood though.\"\n\n\"He just didn't look in the right places,\" says Gloria, coming over to join us around the table. She winks at her husband. \"We met the Wilderwood Devil once, didn't we?\"\n\n\"Huh?\"\n\n\"Stop teasing the boy.\" Howard chuckles and turns back to me. \"The name has sometimes been attached to certain members of your family,\" he nods toward the book on Ethan Wilderwood. \"Like so.\"\n\n\"So you just meant Uncle Nathan.\" I'm weirdly disappointed at that.\n\n\"Oh no. We know Nathan, of course, but I meant his father. Richard.\"\n\n\"I didn't think you'd lived here that long.\" ",
        "\"We haven't,\" Howard says, \"but we passed through back in... what was it... '71?\" His wife nods. \"We took the camper van along one of the old roads that go down into the valley and camped by the river for a few days one summer.\"\n\nThey smile fondly across the table at each other. It's clearly a good memory for both of them.\n\n\"On the second day we were there your great grandfather came walking through the woods to where we were camped. We didn't know who he was, of course. Just saw an old man, very smartly dressed, walking with a stick.\"\n\n\"Sounds like Uncle Nathan.\"\n\nGloria smiles. \"Oh no, Richard was taller, and much more handsome. He was very old then but it was easy to believe the stories about him.\"\n\n\"Stories?\"\n\n\"That he'd been quite the rogue back in the old days, and that he'd had a succession of glamorous movie star mistresses all through the Roaring Twenties.\" She winks at her husband again.\n\n\"Gloria, you're embarassing the boy.\"\n\n\"He's eighteen, Howie, and I doubt he minds me telling him that he's descended from a dashing, dangerous man who had beautiful women falling at his feet.\"\n\nHoward snorts. \"Hard to believe you were once such a champion of Women's Lib.\"\n\n\"I still am.\" Gloria rolls her eyes. \"Nearly fifty years together and he still grumbles when I compliment another man.\"\n\n\"It's not the compliments I mind, it's the drooling.\"\n\nShe ignores that. \n\n\"What was he like?\" I ask.\n\n\"He was very charming - be quiet, Howie, he was - and after telling us who he was he said we were welcome to camp in the Wilderwood as long as we wished. Then he asked if we were married and Howie said something about how we didn't hold with society's rules, man.\"\n\n\"Now look at us...\"\n\nShe ignores that too.\n\n\"Richard just smiled and said perhaps we were right.\" Gloria sighs. \"It was such a sad smile. He didn't stay long after that, just pointed out a couple of areas of the valley we should avoid because the ground was bad, and then wished us a good day and walked off back the way he'd come.\"\n\nI guess it's a nice little story but it doesn't really tell me anything I didn't already know, so I try to switch the subject onto what I came in for.\n\n\"Hey, you know how the Newley Institute used to be an asylum...\" I begin, then stop because another look passes between them and it's nothing like the others. It's very uncomfortable.\n\n\"That was a very long time ago,\" says Howard.\n\n\"If it even happened,\" his wife adds.\n\nThey're not talking about Alex Trowley, I know that instantly. It takes me a moment longer to realise they must think I'm still on the subject of my family, and that I've stumbled onto another loose thread of the history of the Wilderwoods. So I pull it.\n\nI have to prompt them some, but eventually they tell me another story, and by the time they're finished I wish I'd never asked.\n\n* * * * *\n\nThe Wilderwood Devil has been one of the local legends for as long as anyone can remember, but was never that closely linked to our family except in the way that we're linked to so much of the town's history. In the stories that Uncle Nathan would ocassionally tell us up at the Hall the Devil was friendly, at least to us. That would be our secret, he'd add, and we'd nod and promise not to tell anyone because our friends would be jealous that Wildy liked us. That must be close to 10 years ago but Emma and I still joke about the family fiend.\n\nBack in the '30s the Devil got national attention after a series of sightings in Wilderwood Forest. He became our very own Bigfoot, and the town made a lot of that then and later. I guess it's what Wilderwood is best known for still, and even if it's not as big a deal as it used to be the Devil still gets mentioned in New England tourist guides. Ocassionally someone writes a book or makes a documentary.\n\nOne of those books was called 'The Devil's Blood' and in it the author rehashed all of the same stuff that all of these books do, but he also put a lot of emphasis on a couple of murders that took place in the valley around the time of the first sightings in the thirties.\n\nThe town has always been really touchy about this side of things, and whenever possible any unexplained deaths are written off as accidents or bear attacks. There are bears in the forest, further north toward the state line, but I've never heard of any in the Wilderwood. It's a big, spooky forest though, so it inevitably gets linked to every unsolved murder and missing persons case for miles around. The thing with the Hook Man twenty years ago didn't help with that either, though he's been hunted all over New England and was only linked to Wilderwood that one time.\n\nThe town authorities have always played all of this down though, so any book that dragged it up again was never going to be popular. This one went further though. It suggested that the murders in the Wilderwood were the work of a madman, and that it had all been hushed up because the killer was a member of a very old and very well connected family.\n\nThe author didn't actually say it was one of the Wilderwoods, but he did mention that Joseph Wilderwood, Richard's younger brother, had been locked up in the Wilderwood Insane Asylum - as the Newley Institute was known back then - not long after the last of three killings in the early thirties.\n\nThe book also implied that this wasn't an isolated incident, and that there was a streak of hereditary madness in this unnamed but very old family, and that the stories of the Wilderwood Devil were nothing more than a way to explain it away whenever one of them went insane and started prowling around in the Wilderwood and eating people.\n\nIs any of it true? Howard and Gloria are quick to assure me that they don't believe a word of it. I don't even think about going back to the newspaper archives at the library to look for any record of this, because even if Joseph had been committed there's no way that would have made it into the Gazette back then.\n\n'The Devil's Blood' came out five or six years ago, they tell me. Howard got one of the preview copies and he and his wife may be the only people in town to have read it, because it was withdrawn almost immediately. Howard assumes that Uncle Nathan must have threatened to sue the author and/or his pubiisher into oblivion if they didn't pull it. That, at least, I find very easy to believe.\n\nI'm not saying a thing about this to Emma. Not until I know more. I just want us to relax tonight. We need that.\n\n* * * * *\n\nHamilton Hill is where the oldest of the old money families of Wilderwood live, in big, colonial era mansions spaced out along a long road that curves along the edge of the hill on the southern edge of the town. The houses up here are all on one side of the road, facing north to where the rest of town lies below like a model layout. The residents of Hamilton Hill look down on the rest of Wilderwood in every way.\n\nSome of the houses up here as about as old as Wilderwood Hall, but none of them are as big or as grand.\n\nA lot of the people who live up here would have been at the event last night, though Lauren wasn't and wouldn't have been invited. Her dad bought the house when he married her mom and that was over twenty years ago, but Lauren says they're still seen as outsiders, and even more so after her parents split up and her mom left Wilderwood. Lauren's dad isn't from here originally, and is hardly ever here now, so the house spends a lot of time empty except like now when Lauren is home from college.\n\nIt's Lauren who answers the door when I arrive. She looks great, in a loose, black, off the shoulder t-shirt that's barely hanging onto her breasts, a broad leather corset just visible under top, a short leather skirt, fishnet stockings and high gloss buckled boots, along with a leather collar around her neck. Her hair is the same blend of blonde and pink it's been all summer, though Emma tells me she changes it quite often.\n\n\"Emma!\" she calls as she lets me in and closes the door behind us, \"it's your boyfriend!\"\n\nEmma laughs as she comes down the stairs. She's a bit more casual than her friend, in a soft black hoodie, snug fitting leather shorts and the ankle boots she was wearing last night. I step up to her and give her a good, tight hug.\n\n\"Hey, Bro.\"\n\n\"Hey, Sis.\"\n\nLauren looks over at us. \"Seriously? That's how you guys say hello? I was expecting some tongue action at least.\"\n\nEmma laughs and looks up at me, then stands on her toes as I take hold of her firm ass and draw her up into a deep kiss. My sister's tongue slips into my mouth and plays with mine, and I realise this is the first time we've ever kissed like this in front of anyone. The thought of it is enough to stiffen me and my sister feels that through her leather shorts and makes a little noise in the back of her throat as she presses her body against me.\n\n\"Okay, okay,\" says Lauren, laughing. \"I'm convinced!\"\n\nWe let go of each other.\n\n\"C'mon,\" says Lauren. \"Let's get some food and then I'll show you around.\"\n\nI've been in most of the houses up here at one time or another, when we'd go with our parents to birthdays and dinner parties and so on. There weren't quite as many invitations after the falling out with Uncle Nathan (I wonder if I should now be thinking of that as the first falling out, but it's too early to tell) but we're still far from strangers up here.\n\nThis is the first time I've been in Lauren's place though, and it's totally different from what I'd expected. The houses up on Hamilton Hill are old and they look it. The interiors are all dark wood panelling and antique furniture and oil paintings of long dead relatives, like up at the Hall only on a smaller scale. This one is different. It looks the same as the others from the outside, but inside it's all black and white and grey and very modern. It's like the front door is a magic portal and I've been transported across the country into some west coast mansion that was only built last month.\n\n\"Daddy had the place renovated a few years ago,\" Lauren says casually. It seems like an understatement.\n\n\"Renovated?\"\n\n\"Yeah, he basically had the entire inside of the house ripped out and rebuilt.\" She waggles her eyebrows. \"The neighbors were not pleased.\"\n\n\"Why does he even keep this place?\" asks Emma. \"He's never here.\"\n\nLauren shrugs. \"I guess it has some nice memories for him.\"\n\nMy sister looks around, like she's trying to find some trace of the original interior. \"Oh yeah,\" she says, \"he's obviously the sentimental type.\"\n\nThe kitchen is a big square of black marble and chrome, and the two bright plastic food bowls on the floor look really out of place. The black cat nomming away at them doesn't seem to mind though, and at least he fits in with the rest of the color scheme. Emma leans down to give Magic a pet while Lauren browses the fridge, then announces she'll call out for pizza.\n\nWhen the pizza arrives we head into the lounge, which is another big space, mostly white this time, with chunky, square edged couches in black or white leather and chrome, and a massive home entertainment set up that probably cost more than Dad's BMW. Lauren puts on some music and brings us some beers, though she's drinking red wine.\n\nIt's a good night. We talk about everything and nothing and while we don't avoid any mention of the night before we don't dwell on it either. I have to smile when Lauren does touch on the subject.\n\n\"You're still Wilderwoods, and the people in this town won't forget that, even if they're having fun being vicariously thrilled at your bad behaviour right now.\"\n\n\"Steve said the same thing.\"\n\n\"Steve? Oh yeah, the British guy at Pop!\" Lauren nods. \"Well, listen to your elders, because we know things.\"\n\n\"Elders?\"\n\n\"\"Yup,\" says Lauren. \"It was my 20th like two months ago, which makes me six months older than your sister and two years older than you, so...\"\n\n\"Got it, Miss Whitley.\"\n\nLauren lazily gives me the finger, and Emma laughs. She's sitting beside me with my arm draped lightly over her, and now she snuggles in a little closer, resting her head on my shoulder. Like our kiss in the hallway earlier it feels different to be sitting here together, exchanging glances and little touches and the ocassional kiss while someone else's eyes are on us. Sure, Lauren has known about us for a while - and I do wonder exactly how long she has known - but it's still a new experience for us both, and it's utterly relaxing.\n\nIt's what we both need and Lauren seems to know that too. I get now why she's the Queen of the Coven. She's smart and funny and sexy and confident, but she's perceptive too, and now she casually shifts the talk away from the family dramas of the Wilderwoods and onto the adventures she has when she goes out to L.A.\n\nEmma's probably heard some of these stories before so I guess a lot of this is for my benefit, but Lauren easily keeps our attention with insider gossip about the movie business and stories of encounters with teasingly unnamed celebrities. I've no idea how much of it is true, although I wouldn't be totally surprised if it all was, and that she was still holding back. No wonder she doesn't give a shit about what Trowley says about her. His videos about her seem kind of mundane by comparison with what she tells us now.\n\nHer relationship with her dad is... interesting? She spends half her time talking about how well they get along and the other half talking about how she fucks his friends, gets into trouble he has to bail her out of, and breaks his stuff.\n\n\"...and that was when I rolled Daddy's Porsche off the cliff.\" We must be looking sceptical because she shrugs and add, \"It's not like I was driving it at the time.\"\n\n\"What did he say?\"\n\nLauren smirks. \"He knows what a brat I can be.\"\n\nFollowed by another story about how her dad broke up with his girlfriend at the time after Lauren slept with her. If she's trying to convince us that we're not the only dysfunctional family around here she totally knows how to do it.\n\nLater, much later, Emma stretches and gets up. \"Back in a bit,\" she says. \"I've got that thing to do.\"\n\nLauren nods. \"Oh yeah. That.\"\n\nThroughout the night they've both ocassionally had their phones out, texting back and forth with their friends and, I'm pretty sure, even to each other. I'm used to that, and to these half unsaid exchanges that might as well be in code.\n\nSo Emma wanders out of the lounge and Lauren watches her go and smiles and reaches up to pet Magic, who's currently sitting on the back of the couch above her head like a witch's familiar.\n\n\"You guys are so cute together.\"\n\n\"Were you shocked, when Emma told you about us?\"\n\nLauren shakes her head. \"No. I knew there was something going on, and when she told me it was you... I'd kind of guessed already.\"\n\n\"Yeah?\"\n\n\"She'd talked about you a couple of times when we were upstate. Nothing serious. Just girl talk.\" She stretches across the couch like she's mimicking the cat sitting behind her. \"Usually after she'd broken up with some guy.\"\n\n\"Did she do that a lot? Break up with guys, I mean.\"\n\nLauren gives me a sidelong look. \"She had boyfriends, Jamie, if that's what you're asking.\"\n\nI was, but the look in the eyes of my sister's best friend makes me really reluctant to admit it. \"I just wondered...\"\n\n\"How many guys your sister has fucked?\"\n\nThey're both staring at me now. Cats always look judgemental to me, but it's hard to say if Lauren's look is any less so than Magic's.\n\nIt does feel like she's about to rip into me about the double standard that guys can fuck around but girls can't, and I'm not saying I wouldn't deserve it if she did, and all the more because I must sound like my dad.\n\nShe doesn't though, just gives a little half smile and leans back again.\n\n\"Emma had relationships upstate, and she probably doesn't talk to you about them because they were all short and shitty and wrong for her.\" Her smile softens. \"You're the first guy she's dated that I approve of, Jamie, and maybe that sounds weird but it's true.\"\n\nI nod, and to defuse any tension between us I offer some truth back to her.\n\n\"I don't ask her about it because... I guess sometimes I'm nervous about not measuring up. Emma's the only girl I've ever been with.\"\n\nLauren grins. \"You're so cute.\" She slides off the couch and up onto her feet, wandering over to me. \"Don't worry about that. I've never heard Emma talk about any other guy the way she talks about you.\"\n\nThat's good to know.\n\n\"C'mon,\" she says, pulling me up, \"I didn't finish showing you around earlier.\"\n\nWe head out of the lounge. Magic is still sitting on the back of the couch and he does still look judgemental, but he's a cat, so of course he is.\n\n* * * * *\n\nIt's late now and once we're out of the lounge the house is barely lit except by beams of moonlight filtering through the windows. Lauren leads me back into the hallway and down a narrow side passage she'd passed by during the earlier tour. There's two doors at the end of the passage, one on either side, and she gestures casually to the one on the right.\n\n\"That leads down to the cellar,\" she says, then turns to the other one, \"and this...\"\n\nit's a very secure looking door, and the only one I've seen in the house with a keypad lock. Lauren glances over at me as she taps the keys. The door gives a metallic click and she pushes it open, revealing a set of steps leading down.\n\nThere are more wild stories about the Wilderwood than there are about anywhere else around here but, at least among guys, Lauren Whitley's Secret Sex Dungeon runs the valley a close second. Sooner or later someone will probably write an 'In Search of...' book about it.\n\n\"Emma says it's just a den,\" I say as I follow Lauren down the steps.\n\nLauren smirks over her shoulder at me. \"Emma needs a good, firm spanking to teach her not to tell lies to her brother.\"\n\nShe flicks a switch and recessed and hidden lights illuminate the room in dark, shifting shades.\n\n\"Oh... wow,\" is all I can say.\n\nIt's a long room, divided up by broad stone arches that remind me of the cellars up at the Hall. That's about as far as any resemblance goes though, because the cellars up at the hall are all rough stone and old, dusty wood, whereas everything in here is smooth and polished and gleams in the subtle lighting. Even the stone of the arches looks sharp and new.\n\nAlso there aren't chromed steel rings bolted to any of the walls up at the Hall, and the last arch up there doesn't have vertical steel bars set into it that turn the far end of the room into what I can only think of as a cell.\n\nThere's an area that I guess could be called a den, with a semi-circular black leather couch facing a bar with some very unusual bar stools. The rest of the furnishings in the room - and there's a lot of them - are mostly benches of different shapes and sizes, complicated looking chairs and cross bars. It almost looks like a gym, if all of the workout equipment was made of polished wood, padded rubber and smooth leather, and with fittings of steel and leather, chains and cuffs. The most incredible thing about it is that it all looks like it's part of a set, like the entire place was designed and built to order, which, thinking about it, it probably was.\n\nI take a few steps into the room, looking around in disbelief. \"Holy shit, Lauren, does your dad know about this place?\"\n\nLauren laughs. \"It's his house, so duh.\"\n\nAfter the stories she's told tonight about her dad's Hollywood lifestyle, and what she does when she goes out there, I guess I shouldn't be that surprised, but even so this place is so wildly extravagant it's hard to believe. The entire Coven could party in here, with room to spare.\n\n\"He knows you know about it?\"\n\nLauren laughs again and looks past me over my shoulder. \"Emma, I think your brother is in shock.\"\n\nI hadn't heard her come down the stairs behind me but now my sister presses up against me and wraps her arms around me, stroking my chest as she laughs softly in my ear. \"He doesn't know you as well as I do.\"",
        "\"We should do somthing about that,\" says Lauren, walking over to stand on one side of me, leaning on one of my shouders as Emma moves round to lean on the other. My sister has changed her clothes and she's now wearing a near copy of her friend's outfit, from the ringed leather collar at her neck to the glossy black heeled boots on her feet. The only real difference is that unlike Lauren there's no top over her corset, and the lights in the room glint on the shiny steel rings in the nipples of her bare tits.\n\n\"Lauren's going back upstate next week, so...\" Emma purrs. \"No risk, no interruptions, little brother. We can stay here all night.\"\n\nA few months ago I'd have given anything for a chance like this (except not with my sister, not back then) but now I hesitate for a moment. I don't have to ask Emma but I do glance at Lauren.\n\n\"You sure about this?\"\n\nLauren grins. \"You think I'd pass up on being double teamed by a brother and sister? You're not the only ones with fantasies, you know.\"\n\nEmma leans up and presses her lips to mine, her tongue flickering out to make it a lick as much as it's a kiss. Then she slips one hand up to the back of my head and the other into the ring on Lauren's collar and draws me into a kiss with her best friend. Lauren's mouth has a different feel, a different taste, but her breath is hot and she slides her tongue between my lips as Emma watches, and then she leans in to lock her own lips onto Lauren's.\n\nWe form a triangle like that, swapping kisses that are playful or deep, quick or very slow, as the girls deftly strip me of my clothes and i let my hands roam over their bodies, stroking and squeezing Lauren's shoulders, her slim back and her firm ass with one hand while the other runs over the more familiar body of my sister. \n\nLauren shrugs off her top and tosses it on the polished dungeon floor, so now they really do match. Lauren's nipples are pierced, like my sister's, but with bars instead of rings, and I lean down and cup one of her tits and nibble on the nipple, teasing the little bar with my tongue. She runs her fingers through my hair and grins over my head at Emma.\n\n\"He's good at this.\"\n\n\"I taught him everything he knows.\"\n\n\"That's what big sisters are for,\" Lauren says and gives an appreciative little groan as I switch to the other nipple, my other hand still around Emma's waist.\n\nThey lead me over to one of the chairs (at least I think it's a chair, some of the stuff in here looks like it needs an instruction manual to use safely) and I sit on it/against it/in it as the two of them drop down to their knees and run their hands up my thighs. It's Emma who takes my cock into her mouth first, and Lauren watches, suddenly wide eyed.\n\n\"Oh wow...\" she breathes. \"Oh fucking wow.\" She's known about us for a while, and been so cool about it all night, but I guess maybe it's still a shock for her to see my sister sucking my cock. Emma is making a show of it too, with a lot of low moans as she slathers my length with her saliva. Maybe it's Lauren's presence, or our surroundings, or maybe she's just really fucking horny.\n\nLauren's shock doesn't last for long, as Emma drags her mouth slowly up and off of me, then grins at her friend and again reaches out to take Lauren's collar and pull her forward. \"Go on,\" she says softly. \"Suck my brother's cock.\" Lauren grins back at her and wraps her lips around the top of my shaft, letting her tongue slide around it before she sinks down and takes my full length into her mouth.\n\nThey take turns, back and forth, up and down, and then both of them start licking up and down my length at the same time. I've got my hands in their hair and they're reaching over to run their hands over each others tits and down to their leather-clad asses, though both mini-skirts are soon lying in slick, shiny pools on the floor at my feet as they slide out of them.\n\nEmma takes one last slow lick up my shaft and then looks up at me. \"So, little brother,\" she asks me, \"which one of us do you want to fuck first?\"\n\nMy first instinct is to reach for my sister, but I know that's not what she wants right now.\n\n\"C'mere, Lauren.\"\n\nI tug on Lauren's blonde/pink hair and draw her up to me as I stand, giving her a deep, open mouthed kiss and sliding my hand down the front of her corset to her pussy. She's shaved as smooth as Emma, but isn't pierced, which surprises me.\n\nWe go over to a low 'A' framed bench and Lauren turns and leans against it, her booted feet parted. Emma wanders over to a rack on the wall and picks up some things, then comes back and climbs onto the bench, setting down most of what she's carrying behind her. She kneels on the bench, facing her friend, and slips Lauren's wrists into black leather cuffs with short chains which she then attaches to rings set into the sides of the bench. By now I'm behind Lauren, kissing her neck as I take hold of her slim hips. Lauren had to bend over further when my sister locked the cuffs on her and her pussy is now totally exposed. I look across her back and into Emma's eyes as I push into her.\n\nLauren gives a low groan and clenches around me, and Emma kisses her hungrily. Lauren returns the kiss and their tongues are all over each other's lips as I slide deeper into her and start to fuck her with slow, steady thrusts. Slow because I'm so incredibly turned on it's hard not to cum already.\n\n\"He's fantasised about fucking you even longer than he's fantasised about fucking me,\" Emma murmurs to her between wet kisses. \"How does it feel?\"\n\n\"Feels... good...\" Lauren gasps.\n\n\"Now you know why I love taking my brother's cock so much,\" murmurs Emma in her hottest, horniest voice, and fuck does it sound good. \"This is why I want him in me all the time.\"\n\nEmma kisses Lauren again, sliding a hand down to stroke her own pussy as she watches her friend get fucked. Lauren is pushing back against me now, her fingers locked around the chains of her cuffs, and she's groaning with each stroke of my cock into her. \n\n\"Fuck me harder, Jamie,\" she gasps. \"Fuck me like you fuck your sister.\"\n\nEmma gives Lauren's lips another lick and then slides off the bench and comes over to me. She rests her hand on my shoulder and leans across Lauren's back to kiss me while I continue to thrust into her. My sister's green eyes are bright and excited and she reaches down to stroke Lauren's back, her fingers playing with the lacing of the leather corset.\n\nI put my hand on the top of Emma's head, sinking my fingers into her dark hair. \"Down, Sis,\" I tell her, and lightly push her down onto her knees before sliding out of Lauren and offering my cock to her. Emma doesn't hesitate, wrapping her lips around my shaft and tasting Lauren's juices on my length. When I push back into Lauren she stays down there, alternating her tongue between my balls and her friend's clit, and sucking my cock whenever i pull it out of Lauren.\n\n\"She's such a slut,\" Emma grins up at me as she tastes her again. \"I'd better gag her before you fuck her ass, little brother.\" I slow my movements again, barely moving inside Lauren as I watch my sister go back around and kiss her again before reaching down to the little pile of toys she picked up earlier and selecting a gag. Lauren moans loudly as Emma pushes the fat, red rubber ball into her mouth, and she squirms and bucks against me when I reach down to help my sister buckle the leather strap of the gag at the back of her head.\n\nA fat tube of lubricant is the last thing Emma had brought over and now she drizzles it over my cock and in and around Lauren's tight rear. She uses a lot, and spreads it around my length with her mouth before lowering her head and using her tongue to ready her friend's ass for me. When she's done she wraps her fingers around my shaft and we work together to push my cock deep into Lauren's asshole.\n\n\"Fuck...\" My hands clench tightly around Lauren's leather-clad waist as I slide into her. She's tight but takes my cock in this hole more easily than Emma ever does. My sister watches as I start to stroke back and forth into Lauren's rear, then slides off the bench again to return her attention to her friend's clit and pussy, and her own.\n\nEmma has her scorpion tattoo on her upper arm, and Lauren has a thin circle of thorns in the same place. She has more ink on her lower back, but it's mostly covered by what she's still wearing, and all I can see of it is an 's' and a 'G' under the laces in between the glossy black panels of her corset.\n\nIt's not long before Lauren climaxes hard, with my cock in her ass and my sister's tongue in her pussy, and even with the gag locked in her mouth she's loud. If I'd been fucking her rather than my sister we'd have been found out the first night because our neighbors would have heard. Emma's orgasms are almost always soft, urgent gasps and whimpers that she can barely hold in, but Lauren screams through her gag. I'm guessing this place is well soundproofed.\n\nLauren's writhing and clenching as she rides out her climax is more than enough to take me over the edge as well, and Emma too when I pull out of Lauren and push my cock back into her mouth. My sister moans and sucks me hard as her fingers work on her own clit and then I slide free of her lips and sink my length back into Lauren's soaking wet pussy to cum inside her as Emma brings herself to her climax at our feet.\n\nI'm not sure exactly how many of my previously unrealised sexual fantasies I'm fulfilling tonight, but as I lean back, panting for breath and watching my sister lick my cum out of her best friend, I know it's a lot.\n\n* * * * *\n\nWe release Lauren from her restraints and move over to the bar, exchanging knowing smiles and quiet laughs and light touches. I'm completely at ease with Lauren now, though it's totally different from the intimacy I share with Emma. With Lauren it's pure, physical sexuality, and it's great, but the look in her dark eyes isn't the same as the look in the glinting green of my sister's.\n\nIt's hot down here, and the sheen of sweat on the girls' bodies goes well with the shine of their corsets and boots. Lauren slips behind the bar and mixes us up some drinks. As she slides them across to me she winks at Emma. \"Don't worry, there's nothing in these that you wouldn't approve of.\" She smirks across the bar at me. \"Your sister's so straight laced.\"\n\n\"Tight laced,\" murmurs Emma, rubbing up against me, \"and you do too much of that stuff, Lauren.\"\n\n\"Still a small town girl at heart,\" teases Lauren, her eyes bright over the rim of her glass as she drinks.\n\n\"Yeah,\" says Emma, squeezing my hand, \"a nice small town girl dating the boy next door.\"\n\n\"We live in the same house, Sis.\"\n\nMy sister grins. \"Yes, and your bedroom is like ten steps away from mine. Can't get any more next door than that, right?\"\n\nI lean into her and kiss her softly. \"I guess you can't.\"\n\n\"Get a room, you two.\"\n\nEmma giggles and turns back to her friend. \"We love you too, Lauren,\" and to prove it she leans across the bar and draws her friend into a long kiss. They reach out for one another, hands on each other's tits, and glasses are hastily pushed aside as Lauren and Emma climb onto the top of the bar. I've barely taken a sip of my drink before they intertwine on the bar and start to eat each other out.\n\nIt's a fantastic show. They're totally uninhibited with one another and if they were like this upstate I'm surprised my sister had time to date guys, but maybe this is just an ocassional thing they do. Or maybe this is what they're like every time they're together. Emma's spent as much time with Lauren and her other friends as she has with me this summer, if not more. I'm a lot more easy with that idea than with thoughts of my sister with other guys. Unsurprisingly.\n\nWatching them go at each other does a lot more than the drink to revitalise me. Emma lifts her head up from between Lauren's legs and slides her glistening wet fingers out of her friend's pussy and into her mouth, her eyes on mine as she sucks her fingers clean before lowering her head again. She's looking at me too when Lauren's own fingers, and her tongue in her ass, bring my sister to a shivering, gasping climax that, along with Lauren's, almost rolls them both off the top of the bar.\n\nAfter that we move over to the circular couch and for a while we're just a tangle of bodies, arms and legs, touching and stroking, playing and probing, and not totally sure of exactly who is on who a lot of the time. At least until Emma climbs onto me and sinks herself down onto my cock, and Lauren turns most of her attention to my sister's tits, making her gasp when she takes her nipple rings between her teeth in the same way that I do. I stroke Lauren's soft blonde and pink hair and toy with the bars in her nipples and my sister leans in to kiss her and kiss me and we both slide fingers down either side of Lauren's tightly corseted waist and into her slick, wet pussy.\n\n\"Oh wow...\" Lauren moans into our mouths as she switches back and forth between us, \"you guys...\" She gives a sobbing whimper as our fingers twist together inside her and cums again, over and over this time, drenching us both in her juices.\n\nMy sister rides me some more, with Lauren's lips and teeth and tongue back on her nipples, and when I'm close she slides off of my cock and down to the floor to take my cum in her mouth, then crawls back up unto the couch to give Lauren an eager, open mouthed kiss. They pass the thick, sticky mouthful back and forth between them until they both swallow, then lick their lips and smirk at one another and let themselves fall back onto the couch either side of me.\n\n\"I had no idea...\" Lauren starts to say.\n\n\"Of what?\" Emma asks.\n\n\"You're so in tune with each other. It's like I'm being fucked by one soul split into two bodies.\" Lauren smiles dreamily. She said there was nothing in our drinks, but she didn't say anything about her own. \"Is it always like this... between you two?\"\n\n\"Uh huh.\"\n\n\"No wonder you want each other so much.\"\n\nIt's true. From the very first time it's always been so good between me and my sister, and it only gets better. Any awkwardness or uncertainty we ever felt is long gone, and so often now we seem to know instinctively what we want from each other. Tonight we've been more focused on Lauren, but even that is something we've both done, without having to say a word.\n\nLauren soon sits up and gives us both a wide smile. \"So... where were we?\"\n\nThey then take advantage of me and drag me over to a broad, low bench where they cuff me down. Then the two of them climb onto the bench and straddle me, facing one another and giggling and playing together until the sight and sound and feel of them has me hard again. They take their time in uncuffing me though, and by the time they're finally through with me this time I don't so much fall asleep as pass out.\n\n* * * * *\n\nI wake up the next morning still sprawled across the bench. Neither Emma or Lauren are there, but one of them's thrown a bathrobe over me as I slept. I peel myself off the sweat sticky leather and crawl into the robe. I'm incredibly stiff and aching all over, which isn't surprising after last night. Neither of them said this was a one time thing, but maybe it's a good thing if it is, because right now I feel like another few nights of this would finish me off.\n\nI stand up and stretch and wince at the aches in my limbs. Whatever else a leather padded bondage bench is good for it's not the best place to spend the night, at least not sleeping. The rest of it though... I can't quite believe Emma set this up for me. She really is the best big sister any guy ever had.\n\nI find them upstairs, eating at the breakfast bar. They're both extremely perky, and look just as sexy - Lauren in a hoodie and cut-off denim shorts, and Emma in a t-shirt and leather shorts - as they did last night in collars and corsets.\n\nWell, almost.\n\nLauren gives me a wave as I shuffle into the room. \"Hey, morning,\" she says cheerfully. \"Wow, you look really bad.\"\n\n\"He does not!\" Emma slides off her barstool and gives me a light kiss on the lips, then leans back and squints at me. \"Okay, maybe he does. A bit.\"\n\nLauren snickers.\n\n\"Yeah.\" I look around blearily in search of coffee, but Emma takes hold of the my robe and pulls me close, leaning her head against mine.\n\n\"You'll feel better after we take a shower, right, Bro?\"\n\nI smile as she nuzzles me. \"For sure, Sis.\"\n\n\"Oh my god,\" says Lauren. \"Do you two ever let up?\"\n\n* * * * *\n\nI'd been wondering if it would be a bit awkward after last night, but Lauren is totally casual about it all and the first she even mentions it is when she says at least now I'll know what my ex-girlfriend looks like naked.\n\nI laugh. \"Oh yeah. My friends are amazed.\"\n\nLauren smirks. \"They'd be even more amazed if they knew about last night.\"\n\nThat's an understatement. When I first got together with Emma I remember thinking about how I was dating one of the Coven and couldn't tell anyone. Now I've had a threesome with two of them, and in Lauren's fabled sex dungeon, and I still can't tell anyone. The thought doesn't bother me like it used to though.\n\n\"Shit,\" Lauren adds, \"I forgot to turn on the cameras last night.\"\n\nShe laughs at our expressions. Neither of us even want to think of what would happen if Alex Trowley got his hands on a Wilderwood sex tape.\n\n\"What?\" says Lauren, mock innocently. \"Daddy works in Hollywood. Voyeurism is in my blood.\"\n\nI'm not totally sure she's kidding.\n\nWe have a lazy Sunday morning and just chill in front of the tv. Around midday Emma says she's going to go home and pick up some stuff, seeing as I couldn't do that yesterday. She asks me if I want to come along but I tell her I've got a thing I need to do this afternoon and so she goes by herself.\n\nThat thing being to head up to the Newley Institute to try and find out if Joseph Wilderwood actually was committed back in the thirties, and more importantly, why. It's not even the idea that one of the family was a murderer that bothers me as much as the other thing. I've been distracted from thinking about it since I walked into Lauren's house, and in the best possible ways, but it's back in my head now. Two words.\n\nHereditary insanity.\n\nI don't leave right away, but sit on the couch zoning out to Netflix and thinking up reasons not to go up to the Institute today. Lauren must notice my silence, and that I'm preoccupied with something, because after a while she sits down on the couch beside me.\n\n\"Have you talked about it?\" she asks. \"How this is all going to work out?\"\n\n\"Kind of.\"\n\n\"I mean, like, long term.\"\n\n\"Kind of. It's... we haven't talked about it a lot. Why?\"\n\nLauren sighs and literally bites her tongue, but not for long. She turns to looks straight at me, her dark eyes locked on mine.\n\n\"This time next week I'll be back upstate,\" she says, very seriously \"so I don't have time to be subtle about this. Emma wants to have kids, Jamie.\"\n\nI stare at her.\n\n\"Not now. Not any time soon, but one day. After you graduate. After you're married. After you come into your inheritance and you're living up at the Hall. I don't know.\" She shrugs. \"There really is still a lot of the small town good girl in your sister, and she wants the whole deal. With you.\"\n\n\"We've never talked about it.\" It's one of those topics. The ones that we still stay away from.\n\n\"She doesn't want to ask you,\" Lauren says. \"You guys are so close, and that's so great, but there's still things she'll say to me that she won't say to you.\" She looks away from me and groans. \"I get it. I really do. You've got this amazing thing going on between you, something that you could never have with anyone else in the world, and it's wonderful... but there are still lines you're scared to cross, even if you want to so badly.\"\n\n\"Lauren...\"",
        "\"I had to tell you, Jamie, because you need to think about it. Emma is going to ask you about this one day,\" she sighs again, \"and if she sees the same look on your face that I just did it'll break her heart.\"\n\n\"I didn't...\" I start to say but I stop myself. Did I? Did I unconsciously flinch at the thought of us having kids? I honestly don't know.\n\nI've got to up to the Institute. I have to keep digging until I've unearthed every secret about the Wilderwoods that's been hidden from us our whole lives, because even if I stop looking the uncertainty of not knowing will hang over Emma and I until it destroys what we have together. \n\nDestroys what we have as surely as it will if we find out the truth, if it's as bad as I'm starting to think it is."
    ],
    "authorname": "Scorpio_Six",
    "tags": [
        "brother sister",
        "goth",
        "gothic",
        "leather",
        "bondage"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/wilderwood-ch-09"
}