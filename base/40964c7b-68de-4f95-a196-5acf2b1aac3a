{
    "title": "The Rask Rebellion",
    "pages": [
        "Authors Note: It took a while, but here's something substantial to read through while you're all in quarantine. Remember to deploy chemical countermeasures against hostile organisms, and wear your rebreather if you go EVA!<br ><br >Special thanks to my buddy SketchyWarrior for his help with the UNN armored vehicles and their tactics.\n\nCHAPTER 1: PREEMPTIVE STRIKE\n\nThe sound of claws scratching against the metal deck echoed through the cramped corridor as the Crewmaster made his way to the bridge, ducking under exposed pipes and bundles of electrical cables. This warren of winding passages was made for humans, not Borealans, his eight-foot stature requiring him to hunch over to avoid hitting his head. Their smell still permeated the vessel, but it was fading now, overcome by the scents of oil and alien machinery.\n\nHis furry ears brushed the doorframe as he emerged into a more open space, finally able to stand upright. Before him was a room occupied by half a dozen console banks, more of his kind hunched over before the glowing, holographic displays. They waved their clawed fingers through the projections, adjusting their course, and tracking radar contacts. The bridge was a little more homely than the rest of the ship. As the command center, the bare hull had been decorated with crimson drapes in the traditional style, the flowing fabric cascading from the ceiling to the carpeted floor. A large window wrapped around the room, occupying his entire field of view. The glass doubled as a monitor, displaying information in small boxes that the crew were moving around with gestures from their furry hands, the angular hull of the frigate visible beyond.\n\nIt extended into the distance like an artificial horizon, tapering into a dull point a good two hundred meters in front of them, the subtly raised conning tower giving them a fine view. It was broken up in places by the streamlined blisters that housed the ship's railgun turrets, and the closed hatches of the torpedo launch tubes. The vessel bristled with weaponry, but it was all stowed, as they were not on a combat patrol. The hull had once been painted with a stealth coating that was as black as the space beyond, but it now sported a more fitting red, the color of Elysia. Intricate scenes of battle and hunting flowed across its surface like a tapestry, their brilliant gold gleaming under the light of the system's twin suns.\n\nThe finely engraved, ruby-red armor that the Crewmaster wore over his silken tunic clanked as he rolled his shoulders, a long cape sewn from rainbow spider fur glittering with iridescence as it trailed behind him. He stalked over to his throne, taking a seat on the padded chair, his long tail slotting through a hole in the backrest as he leaned into the crimson leather. Most of his crew were wearing their pressure suits, but the Furious Swipe was a sound vessel, she would not forsake her master.\n\n\"Report,\" he grumbled, resting his face in his palm as he gazed out at the starfield. \"What is our present course?\"\n\n\"We sail over the territory of the Rask, my Alpha,\" one of his crewmen replied with a deferent bow of his head.\n\n\"Radar contacts?\" he asked, scratching idly at his fiery mane of orange hair.\n\n\"Some Coalition, and one jump merchant, but we have adjusted our trajectory accordingly.\"\n\n\"Very good,\" the Crewmaster muttered, waving a hand at the viewport. \"Show me the ground.\"\n\nThe inky blackness of space faded, replaced with a camera view from the underside of the frigate. The planet beneath them was mostly desert, its surface blasted by the heat of the system's primary, scant wisps of white cloud drifting through the atmosphere. Borealis had no oceans, no continents, all of its water was locked within the great lakes. They shimmered as their sapphire surfaces reflected the suns, encircled by bands of lush, green jungle that served as bulwarks against the ever-encroaching deserts. The greenery trapped moisture to create a micro-climate, swirling clouds seeming to cluster over the country-sized oases, their borders dividing up the different territories.\n\nElysia was one of them, his home. How he longed to return to the shore of its endless lake, to walk between the stone edifices of its capital once again, to feel the wind in his hair. Captaining a ship of the Elysian Navy was a noble station, one earned through great deeds, but it tended to get a little dreary.\n\nHis feline eyes turned to the territory that they were cruising over. Unlike most, the jungle band that should have shielded it from the sands was broken in places, the desert spilling through the breaches. It almost looked like a giant grazing animal had taken huge bites out of it. The lake itself was relatively small, a puddle compared to that of his own nation. He could only just make it out, as it was sandstorm season, the obscuring clouds visible from space.\n\nIts inhabitants, the Rask, were a hardy people who were more accustomed to desert life than most. They were notorious bandits and pirates, raiding caravans, and making incursions into neighboring territories in ages past. Their admittance into the Coalition had somewhat curbed that behavior as of late. Rask and Elysia were technically allies, but old rivalries persisted.\n\nThe Rask did not have a Navy, nor did any of the other Borealan territories, which meant that Elysia ruled the skies. The Patriarch had been forward-thinking enough to cooperate closely with the Coalition when the aliens had made contact, the resulting prosperity allowing him to purchase technologies that were hundreds of years more advanced than anything available on Borealis. Many other territories now followed Elysia's lead, but their headstart had expanded their influence greatly, making them the planet's only superpower.\n\nThe radar operator to the Crewmaster's right faltered, his round ears twitching as he frantically scanned the holographic readout of his console. A crimson warning light bathed the bridge in its glow, alien icons flashing on the window.\n\n\"What is the meaning of this?\" the Crewmaster demanded, rising from his chair. He didn't recognize the symbols, and it wasn't his station to know them.\n\n\"The ship's mind warns that we are being locked, my Alpha,\" a flustered crewman replied.\n\n\"Locked?\" he demanded. \"By what?\"\n\n\"I...I do not know, my Alpha. The skies are clear of enemies, there are no hostile ships in radar range.\"\n\n\"Put out a call to all ships in the vicinity and warn them that we are being erroneously targeted,\" the Crewmaster ordered with a wave of his hand. \"The humans must have mistaken us for a pirate skiff, or perhaps our systems are malfunctioning. Order the ship to run a diagnostic on her sensors.\"\n\n\"As you command,\" the crewman sitting at the comms console replied, the other Borealans on the bridge turning their heads to look back at the Crewmaster. One of them paused to wipe her pink nose with the back of her furry hand, her ears swiveling to track him, her reflective eyes darting about the room. This had never happened before. The Elysian Navy had never seen combat, let alone in orbit above their own planet. Nobody quite knew how to react.\n\n\"Eyes on your stations!\" the Crewmaster snapped, the bridge crew hastily turning their attention back to their displays. \"You are like a litter of frightened kittens! The humans built this vessel for war, and she is crewed by Elysia's bravest. There is no excuse for doubt.\"\n\n\"The ship reports no fault in her sensors,\" the radar operator continued, his fingers moving through the orange projection.\n\n\"Coalition vessels report no lock,\" the comms officer added. \"Should we ask them what to do?\"\n\n\"No,\" the Crewmaster replied. \"Tell the ship that she is to locate the source of the lock.\"\n\n\"She is triangulating,\" the radar operator said, watching his readout intently.\n\n\"My Alpha,\" the comms officer began, the Crewmaster turning to face him. \"The Coalition vessel Rubin wishes to speak with you.\"\n\n\"Very well,\" he grumbled, \"put them through on the main speakers.\"\n\nThere was a hiss of static, and then an alien voice rang out.\n\n\"Captain of the Furious Swipe, this is the UNN CIWS frigate Rubin. Our sensors show that you're being locked from the ground. Are you in need of assistance?\"\n\n\"From the ground?\" the Crewmaster hissed in the Elysian tongue, the radar operator shaking his head in reply. He switched back to English, the language of the humans, clearing his throat before replying. \"Captain of the Rubin, this is the Furious Swipe. Our radar systems are unable to determine the origin of the lock. We thought that it might be one of yours.\"\n\n\"The sensors on those old Mk I Clovis frigates are a little slower than what we're using,\" the Captain of the Rubin replied. \"Our systems show a missile lock originating from the surface of the planet, we're burning to cover you.\"\n\n\"Very well, Rubin. We await your arrival,\" the Crewmaster replied. \"What could be targeting us from the ground?\" he asked once the connection had been closed. \"A Betelgeusian fleet could not have slipped through our defenses, there is an entire Coalition flotilla stationed in orbit.\"\n\n\"Still scanning,\" the radar operator replied. The Crewmaster waited a few moments longer, his furry, orange tail flicking back and forth beneath his cloak in irritation. \"She has it,\" the crewman declared, swiping to bring the image up on the viewport. \"Something just launched from the Rask territory, it moves to intercept us.\"\n\n\"What is it?\" the Crewmaster demanded, \"a missile?\"\n\n\"Ship's mind reports that the speed and mass of the object correspond with a missile,\" he confirmed, failing to mask the uncertainty in his voice. \"Three minutes until contact.\"\n\n\"Arm all weapons!\" the Crewmaster snarled. \"Prepare to launch torpedoes, activate the defensive guns!\"\n\nThe blisters on the hull began to open up, railgun turrets rising from their protective housings, pivoting their long barrels as their systems ran diagnostic checks. He watched as one of the ball-shaped defensive turrets swiveled, its long cannon rotating as it angled in the direction of the incoming projectile.\n\n\"Put our bow towards the missile, present as small a target as possible,\" the Crewmaster ordered. \"How far out is the Rubin?\"\n\n\"The humans are maneuvering between us and the projectile now.\"\n\n\"Show me.\"\n\nOne of the crewmen brought up a telescopic camera view on the bridge window, zooming in on the human vessel. It was close, but being close in space still put them hundreds of kilometers apart. The frigate was not unlike their own, perhaps a little bulkier in design, its hull painted jet black save for some blue trim here and there. It bristled with defensive cannons, its engines burning with blue flame as it decelerated, appearing to fly backwards relative to the Furious Swipe. The purpose of CIWS frigates was fleet protection, their guns and missiles were designed to shoot down torpedoes and fighter craft. As much as the Crewmaster resented needing help, he already felt safer in the frigate's presence.\n\n\"Let the ship's mind manage the defensive guns,\" he warned, \"the last thing we need is friendly fire.\"\n\n\"The Captain of the Rubin wishes to speak with you again, my Alpha,\" the radio operator said.\n\n\"Very well, put him through.\"\n\nThere was another crackle of static before the human's voice was transmitted. Their Captain was remarkably calm and casual, considering the situation. Unlike the Borealan crew, the aliens were battle-hardened.\n\n\"You've got an ASAT headed your way, Furious Swipe,\" the human began. \"It's a fast-mover, but nothin' that we can't handle. It's leveling out and entering high orbit now, maintain your present course.\"\n\n\"ASAT?\" the Crewmaster asked, his question directed at the weapons officer.\n\n\"An anti-satellite weapon, my Alpha, designed to destroy targets in orbit.\"\n\n\"Make sure that the Patriarchy knows what's happening,\" the Crewmaster began, addressing the radio operator. \"Ask them for further instructions. Once this threat has been eliminated, I want the Lord Patriarch's blessing to answer this Rask treachery with a rain of fire.\"\n\n\"Aye, Crewmaster.\"\n\nAs they watched, the CIWS frigate loosed a stream of interceptor missiles, rising from its angular hull in all directions on plumes of blue hydrogen flame. They angled themselves towards their target, shooting off into the darkness in a swarm. In mere seconds, their thrusters had grown dimmer than the stars surrounding them, the projectiles fading from view. The Crewmaster sank back down into his leather chair, watching intently.\n\nThere were a series of bright flashes, and he pounded his fist on the armrest.\n\n\"Ha! Report. Was the missile intercepted?\"\n\n\"I-I do not know, my Alpha,\" the radar operator replied hesitantly. \"Sensors show that...all of the intercepting missiles are gone, as is the Rask missile. But I now see a cloud of smaller objects heading towards us.\"\n\n\"Debris?\" the Crewmaster demanded.\n\n\"I...I do not know.\"\n\n\"Emergency call from the Rubin,\" the radio operator announced, the Crewmaster nodding.\n\n\"Furious Swipe, take evasive action,\" the human Captain said. He sounded alarmed now, his calm demeanor forgotten. \"Angle your nose up ninety degrees and start burning.\"\n\n\"What has happened, Rubin?\" the Crewmaster asked. \"What is your situation?\"\n\nAs he watched, the CIWS frigate began to pivot, the small thrusters along its length shooting jets of flame. It started to burn away, its main engines flaring brightly.\n\n\"There's an expanding cloud of shrapnel heading our way at about eight kilometers per second. Our CIWS guns can't stop it. You gotta move, now!\"\n\n\"Do as he says!\" the Crewmaster bellowed, the helmsman almost jumping out his skin before keying in the commands. The frigate began to climb away from the planet, the G-forces pressing the crew into their seats, the view on the window still tracking the Rubin.\n\nTracer fire began to spew from its many guns, painting glowing trails across the blackness of space, its point defense systems trying desperately to ward off the incoming projectiles. They wound together, the overlapping streams of bullets putting on a beautiful display, but it was too late.\n\nThe Rubin was ripped apart, innumerable slivers of jagged metal tearing through it like a giant shotgun blast, its armor no match for something moving at that velocity. The Crewmaster watched in horror as the state-of-the-art warship began to drift, its engines sputtering out, the guns going silent. There was a sudden, violent explosion as the ruptured fuel tanks ignited, a blue-tinted ball of flame blasting the entire aft section to pieces.\n\nThey only had a scant few seconds before the deadly cloud reached them, the Crewmaster's claws digging into the leather of his armrests, the acceleration making him feel like there was a Krell standing on his chest.\n\n\"Brace for impact!\" he hissed through gritted teeth, watching as their own point defense guns began to fire. Time seemed to slow, what couldn't have been more than twenty seconds feeling like an eternity was passing by. There was a sudden sensation of cold, then everything went dark and silent...\n\n***\n\nThe Admirals stood around a circular table in their pristine, white uniforms, their breasts adorned with medals and colored ribbons. Many of them couldn't physically attend the meeting, as they were light-years away from the station. Instead, they appeared as shimmering, life-sized holograms. The lights in the conference room had been dimmed, the dark mahogany paneling on the walls contributing to the dingy atmosphere. The great wheel that gave Fort Hamilton its nickname rotated past outside the windows, providing artificial gravity, the field of stars beyond seeming to spin around them.\n\nFrom within the center of the table was projected a holographic image in wavering blue, lighting up the grim faces of those physically present with its pale glow. It showed the curvature of a planet, a smattering of numbered icons displaying the positions of nearby ships, clustered in fleets and squadrons. As they watched, a dotted line was drawn along the path of a projectile as it rose through the atmosphere, moving towards two of the targets. It broke into pieces, sending a spreading cone of shrapnel in their direction, the men watching in silence as the vessels were erased.\n\nAdmiral Murray straightened his cap, the golden UN insignia above the rim catching the light. He was an older man, in his late fifties, and his Australian accent complimented his tanned complexion well. All eyes in the room turned to him as he began to speak.\n\n\"This morning, at oh-nine-hundred hours, there was an unprovoked attack in Borealan orbit. A projectile was launched from the planet's surface, striking the UNN Rubin and the Elysian frigate Furious Swipe. All hands were lost.\"\n\nA worried murmur passed through the ring of Admirals, Murray gesturing to the hologram with a gloved hand.\n\n\"The projectile was a MAST, a Multi-stage, Anti-capital Spread Torpedo. It's a weapon manufactured by the UNN, usually destined for planetary defense forces on remote colony worlds where a fleet cannot reasonably be stationed. Its purpose is to counter all known methods of point defense, including cannons, missiles, and lasers.\"\n\nThe hologram shifted to show an exploded diagram of the weapon, a long, white tube with stabilizing fins that was adorned with Navy markings. The Admiral zoomed in on the nose cone, the model opening up to show what looked like a tightly-packed bundle of railway spikes.\n\n\"This is the warhead. Once the missile is traveling at about eight kilometers per second, and the target is lined up, it releases these kinetic energy penetrators. This creates a cloud of high-speed, armor-piercing projectiles that spread out over a large area, making getting out of the way very difficult. At those velocities, even battleship armor is not impervious. We designed this weapon to kill Hive fleets. The idea was that a colony could fire a cluster of these and shred anything in orbit while they waited for a support fleet to arrive.\"\n\n\"Where was it fired from?\" one of the Admirals asked.\n\nThe hologram zoomed in on the planet, showing a ring of dense jungle. Within its bounds was a body of water that would have given Lake Superior a run for its money.\n\n\"The Rask territory,\" Admiral Murray continued, clasping his hands behind his back as he began to pace in front of the table. \"We now know that this was a preemptive strike. Shortly after the attack, a message was broadcast across all frequencies. It was in English, they wanted to be sure that we would hear it.\"\n\nThe hologram shifted yet again, this time displaying a visualization of a sound clip. A female voice came through on the speakers, harsh and rasping, her rolling accent immediately recognizable as that of a Borealan.\n\n\"Today, the Rask Matriarchy demonstrated its power by destroying the spacecraft of the interlopers, once thought to be untouchable. Let it serve as a warning, for there will not be a second. For too long, our people have been subject to the will of others, and our voices have been ignored. With the backing of the aliens, the Elysians spread their influence across Borealis, trading their dignity for trinkets and favors. The Coalition, while it proclaims to represent all, makes pariahs of the Rask. We face unjust suspicion and scrutiny from our supposed allies, and our Security Council vote counts for nothing when we are drowned out by a mob of sycophants. Our way of life has been eroded, our pride wounded, our trust betrayed. Our warriors die selflessly for their cause, and our only reward is scorn. But no more. We will not allow ourselves to become clawless, we will not grovel for the approval of those who do not understand our ways. Today, we have severed ties with the Coalition, and we have declared war on Elysia. The sands of Borealis belong to her hardiest children by right, and we mean to restore that natural order.\"",
        "\"Quite the speech,\" one of the Admirals muttered, his holographic form flickering. \"What does clawless mean?\"\n\n\"It's their word for slave,\" Murray replied. \"They usually use it to describe a Borealan who isn't adhering to their pack structure, where the meanest son of a bitch is the Alpha dog.\"\n\n\"What do they hope to accomplish?\" another added, leaning on the table as the hologram returned to a visualization of the planet. \"They can't possibly believe that they can defeat the Coalition, let alone the UNN. They don't even have a Navy!\"\n\n\"Our intelligence is spotty,\" Murray replied. \"The Rask have never used the communications infrastructure that we set up on the planet, so our listening post at the pole hasn't been able to trawl their comms. We've suspected for some time that they've been surreptitiously engaging in piracy and raiding, even after signing a treaty that forbade it, but it's been hard to prove. The recent investigation into their incursions into the Araxie territory seems to have confirmed that they've been violating the Coalition charter. That report should be due any day now.\"\n\n\"Maybe they're trying to get ahead of the investigation,\" another Admiral suggested. \"If they know that they've been found out, maybe they'd rather flip the table than face the sanctions. Seems like a very Rask way of going about it.\"\n\n\"That may be a contributing factor,\" Murray replied with a nod. \"Our analysts believe that the Rask intend to fight a guerrilla war, asymmetrical combat. We should expect to face a full-blown insurgency.\"\n\n\"Then they needn't defeat us,\" an Admiral on the far side of the table mused, \"they need only make the war too costly and difficult for us to fight. They know that our attention is focused on the Betelgeusian threat to our colonies, they've been a member of the Coalition for years, they understand our inner workings. Perhaps they think that by bogging us down in an endless ground war, they can wear us out and get us to abandon the planet.\"\n\n\"Then they must also know that we have a responsibility to protect our allies,\" another Admiral interjected, his voice hissing with static as his projection lagged for a moment. \"Elysia is an important member of the Coalition, there's no way that we would abandon them. And even if we did, I doubt that the Rask could successfully defeat the Elysians. They have a functioning Navy, for the most part, and better equipment.\"\n\n\"I'm more concerned about where the Rask obtained the MAST,\" another added. \"How many more of them do they have, and what else might they have gotten their paws on? We haven't supplied any of those weapons to any of the Borealan territories to my knowledge. There's always a fleet stationed in orbit as part of our treaty with them, there would be no need.\"\n\n\"We haven't been able to determine that,\" Murray replied. \"That said, the smuggling of arms destined for PDF on outlying colonies is not a new phenomenon. We all remember what happened with the crime syndicate on Hades a few years back. Even ignoring the MAST problem, we've been arming the Rask with modern weapons for some time. Their soldiers have access to Shock Trooper armor, and XMRs, the same armament we provide to the auxiliaries. They've been trading openly with the rest of the Galaxy for a while now. Those who have served alongside the UNN will know our tactics and our capabilities very well, which further complicates the situation.\"\n\n\"What has been done about this so far?\" one of the Admirals asked.\n\n\"Because we don't know how many MASTs the Rask still have, we've pulled our fleet out of their theoretical range, clearing a bubble of space over their territory that extends a good two thousand kilometers in every direction. Usually, we'd land troops on the ground and restore order, but we obviously can't risk that in this situation.\"\n\n\"Why not locate the launchers using long-range imaging and conduct railgun strikes to disable them?\" another Admiral suggested, his holographic hands clipping through the table. \"We could easily hit them from outside the range of the MASTs, even if our accuracy would take a bit of a hit.\"\n\n\"Not an option,\" Murray replied. \"The Rask have certainly hidden the launchers in their territory's population centers, knowing that we won't risk civilian casualties on that scale. They know our doctrine well, lord knows we've explained it to them enough that it's probably been drilled into their brains. It would violate a hundred conventions. There's also the issue of the sandstorms. It seems that the Rask have timed their attack to coincide with the seasonal storms that plague the area, meaning that satellite imaging is going to be unreliable for weeks, maybe even months.\"\n\n\"So,\" an Admiral who was standing to Murray's right mused, crossing his arms as he examined the display. \"We can't land troops in the territory without the risk of them being shot down by the MASTs, and we can't conduct orbital strikes to destroy the launchers. What options are left?\"\n\n\"I've been talking with the Captain of the UNN Samar via quantum link,\" Murray replied. \"His carrier fleet is currently on-site.\"\n\nHe tapped some commands into the touch screen that was mounted on the table, the hologram shifting to show a flat view of the planet's arid surface. A red line extended from one of the giant oases to the next, weaving around one or two smaller lakes, the blue dome over its destination indicating that it was the Rask territory.\n\n\"It's his belief that a small, mobile force of ground vehicles could land in Elysia, then drive across the Borealan desert. Once they reached Rask, they could easily overwhelm their defenses, move into the territory, and disable the launchers. When that's done, the fleet can move in and take things from there.\"\n\n\"Are there any assault carriers in that fleet?\" someone asked.\n\n\"Yes,\" Murray replied, \"the UNN Okinawa is ready to go. She's loaded with a full tank battalion, and three thousand Marines. The Martians have also asked if they can test one of their new toys, some kind of prototype super-heavy vehicle.\"\n\n\"All in favor?\" one of them asked, a chorus of ayes echoing through the conference room in response. \"Then it's unanimous, we dispatch the Okinawa immediately.\"\n\n\"What of the situation on the station, and on deployed carriers?\" one of the holographic Admirals added. \"This crisis is not confined to Borealis alone. There are thousands of Rask serving as auxiliaries in the UNN, many of whom won't even know that their government has defected yet. What are we going to do with all of the Rask on the station, for example? Do we intern them? Encourage them to return home?\"\n\n\"Trying to incarcerate them won't go down well,\" Murray muttered, his tone dour. \"They're a fierce people in more ways than one, and many of them have served in integrated units alongside UNN Marines. They have friends, comrades, people who won't accept that decision. They haven't done anything wrong...yet. This is a very delicate situation, it could go downhill very quickly.\"\n\n\"Surely we can't allow them to just stay on the station? What about spying, sabotage? The Rask are loyal to their Matriarchy and their Alphas first, and the Coalition second.\"\n\nMurray scratched his chin, considering for a moment before replying.\n\n\"Is the Rask Ambassador still on the station?\" he asked.\n\n\"I believe so,\" one of the Admirals replied. \"They'll probably be recalled to the homeworld in short order.\"\n\n\"We need to work with them and make sure that this goes smoothly,\" Murray added. \"If we can find a way to just get them off the station, all the better. Reassign a carrier, or commandeer a civilian liner, whatever it takes. Worst case scenario, we can just park them in orbit until the situation on the ground is resolved. They don't have their own ships, they can't go anywhere under their own power.\"\n\n\"I'll have the Chief of Security see to it,\" another Admiral said. \"He's a capable fellow.\"\n\n***\n\nChief Moralez marched through the crowd, weaving his way towards the source of the commotion. The Pinwheel's torus was usually busy at the best of times, but today, it was even more congested than usual. The giant, ring-shaped structure had been designed to simulate the environment of a planet. Its ceiling was painted with a blue sky and wisps of white cloud, the bright lamps that were spaced out at intervals approximating the light and heat of Earth's sun. The wide walkway was lined with planters that were filled with trees and shrubs to add a touch of color to the otherwise matte-white of the hull material, the walls to either side of it decorated with sculpted facades that were facsimiles of terrestrial buildings. He was in the military quarter right now, the section of the station that housed the barracks and the majority of the hangars. Most of the buildings were blocky and functional, huge pressure doors that extended from the floor to the concave ceiling breaking up the monotony at intervals.\n\nHis prosthetic foot tapped against the metal deck of the station's torus as he marched, the subtle whir of the electric motor barely audible over the sound of a hundred muddled conversations. The Chief of Security was a grizzled veteran of the Kruger campaign, his leathery skin a patchwork of healed scars and plasma burns. Three of his limbs had been lost in the line of duty, two arms and a leg, replaced with advanced prosthetics. His leg was little more than a skeletal frame with a functional skid for a foot, while his arms were more filled out, the black polymer of their housings blending seamlessly with the UNN combat armor that he wore over his uniform.\n\nThe throngs of onlookers parted before him, both out of respect for the Chief and for fear of being crushed beneath the feet of the two towering Krell who flanked him. The reptiles stood over eight feet tall despite their hunched postures, and they must weigh close to a ton. The distance between their dragging, oar-like tails and their crocodilian snouts was a good sixteen feet. Their bodies were covered in a layer of tough scales and bony scutes that served as natural armor, a spinach-green in color that tapered into a lighter beige on their underbellies. Jagged teeth jutted from their jaws, their yellow eyes scanning the crowd as they lumbered along. They resembled bipedal, musclebound alligators, but their fearsome appearance belied their gentle nature. These two wore only a black poncho that hung from their broad shoulders, doubling as a plate carrier and a chest rig, and they were clutching suitably large rifles in their many-fingered hands. Moralez wasn't fucking around today, order had to be maintained.\n\nA group of Marines moved aside to let him pass, their faces obscured behind the opaque visors of their helmets, a component of their ceramic armor. There were also engineers clad in yellow overalls and a few personnel in civilian clothing who were probably off-duty. Here and there, a few alien heads rose above the sea of people. There were a couple more Krell, and a few packs of Borealans, the feline aliens looking on and whispering to one another.\n\nThey were basically humanoid in appearance, with flat brows, and cat-like noses. They stood on a pair of digitigrade legs that ended in paw-like feet, their thick fingers tipped with hooked claws. While they had fur, it was confined to their forearms and lower legs, giving the impression that they were wearing gloves and socks. It came in varying shades, sometimes patterned with spots or stripes, and sometimes not. From their hair protruded a pair of small, round ears that pivoted to track sounds like little radar dishes, their eyes reflecting the light as they peered over at him. They were also taller than humans, averaging about eight feet, the high gravity of their home planet making them naturally muscular. They wore either the same black armor as the Marines, identifying them as Shock Troopers, or their blue coveralls.\n\nMoralez finally emerged at the front of the crowd, stepping through a line of MPs who were maintaining order, their black armor accented by their white helmets and sashes. He arrived before one of the massive bay doors, which was currently open. Beyond it was one of the station's many cavernous hangars, the deck reflecting the harsh glare of the bright halogen lights in its ceiling a good seventy feet above them. It was open to space, a shimmering, blue force field the only thing preventing it from depressurizing.\n\nThere were a couple of frigates being serviced, their angular, black hulls surrounded by gantries that projected from the nearby walls. The vessels were shaped like tapering arrowheads, their relatively flat profile, and their stealth design helping them to avoid radar detection. The only windows were up on the cockpit, on a kind of conning tower that was subtly raised above the hull towards the aft. They sat on sets of hefty landing gear, supported by sturdy hydraulic pistons that were adorned with hanging cables, their thick tires taller than a man.\n\nClogging the hangar door was a gaggle of maybe a hundred Rask. They were a race of Borealan, distinguished from their cousins by their dusky skin, and hair that looked as though it had been bleached by the sun. This was not a riot or a protest, however. Most of them looked bewildered, frightened, Moralez recognizing their bared teeth as a sign of insecurity rather than aggression. He'd had his fair share of dealings with the aliens in the past, to put it lightly. They were all wearing the same UNN uniforms as everyone else, save for one.\n\nHer clothing was all tight leather in shades of black and brown, her pants leaving little to the imagination as they strained against her muscular thighs and rump. They ended just above the heel joints of her digitigrade legs, giving way to her sandy fur. Belts and holsters hung from her wide hips, housing a veritable arsenal of knives and unwieldy, primitive revolvers.\n\nHer leather jacket was a little looser, reminding Moralez of something that a biker might have worn. It was lined with thick padding like a stab vest, filling it out, and providing some measure of protection from blades and claws. It seemed to be handmade, the stitching clearly visible, but its quality was undeniable. The fine leather was adorned with golden studs and badges, decorative patterns were pressed into the material, and there were patches sewn into it.\n\nThere was a spark of recognition in her yellow eyes as he made his way towards her, her ears tracking him intently. He gestured for his Krell guards to wait, the aliens turning silently to keep the crowds at bay.\n\n\"Ambassador Korbaz,\" he began, \"it's always a pleasure. We really have to stop meeting like this.\"\n\n\"Tin man,\" she replied, seeming genuinely relieved to see him. Her tail was whipping back and forth behind her, a sign of uncertainty or irritation. \"I am glad to see a familiar face.\"\n\n\"I do have a rather memorable one,\" he joked. \"I just heard about what happened,\" he continued, sparing a glance at a Rask who was glaring at him from behind her. \"Seems like your government has decided to make us enemies.\"\n\n\"So it appears,\" she grumbled, seeming about as unhappy with the situation as he was.\n\n\"The MPs are just here to keep the peace until we can figure this thing out. Come on,\" he said, gesturing to the interior of the hangar with a prosthetic finger. \"Let's go talk this over somewhere we can hear ourselves think.\"\n\nShe nodded, leading him through the tightly-packed group of Rask. Moralez felt their angry stares as they parted to let him pass, a hundred pairs of feline eyes scrutinizing him. He was generally well-liked by the Borealan denizens of the station. Battle scars were worn like a badge of honor in their culture, and he understood their ways better than most, which allowed him to resolve most situations peacefully where others might resort to force. It was also no secret that, if provoked, he could put any one of these cats on their ass with his prosthetic fists. But the vibe was different now, he could feel a palpable tension in the air. These aliens were wound up like a spring. He'd seen reactionary aggression from the Borealans, he expected it, but this was something else...\n\nThe two emerged into the hangar proper, their footsteps echoing, the ruckus on the torus fading to a dull murmur. They moved over to the near wall, standing beneath a hunk of nondescript machinery that protruded from the otherwise smooth surface.\n\n\"So, want to tell me what the hell is going on?\" Moralez asked as he spread his robotic arms in exasperation. \"I woke up today with an Admiral yelling into my earpiece about some kind of rebellion. They told me to get down here ASAP and make sure that nobody started a riot. What the hell is the Matriarchy thinking, launching an attack on the Coalition?\"\n\n\"You know my feelings on this matter already,\" she replied as she crossed her arms over her ample chest, her leather getup creaking. \"This is a culmination of the Coalition's mistreatment of us, their disregard. Over and over, we express our concerns, and yet they go ignored. I have a seat on the Coalition Security Council, I've watched our objections be dismissed, our votes count for nothing. The admittance of the Araxie, the travesty with the Jarilan Hive, the favoritism shown towards the Elysians. It cannot continue.\"\n\n\"You don't need to remind me,\" he grumbled. \"Whenever we meet, you usually give me a lecture about Rask superiority, and how your people should be heading the Coalition. I believe you once told me that the humans have a chain around the necks of the Borealan people.\"\n\n\"Indeed,\" she replied tersely. \"Your so-called integration training strips our warriors of what makes them Borealan, turns them into docile slaves.\"\n\n\"We teach them not to resolve every confrontation with their claws, and how to respect the Coalition's command structure,\" Moralez shot back. \"The Rask have always been malcontents, sure, but I never...\"\n\n\"You never took us seriously,\" Korbaz replied, glaring at him pointedly. \"That's exactly the problem, Security Chief. Nobody ever took us seriously, the Coalition felt safe ignoring us. They were just shown the error of their ways.\"\n\n\"Did you know that they were going to do this?\" he asked.\n\n\"No,\" she replied, shaking her head and making her short-cropped hair bounce. \"It is as much a surprise to me as it is to you.\"\n\n\"Is this...what you would have wanted to happen?\"\n\nShe hesitated for a moment, seeming uncertain. She would never question her superiors, that was not the Borealan way. They lived in intensely competitive packs, led by the strongest and most willful individuals.\n\nMoralez had never seen her like this before, her usual self-assuredness seemed absent. Their interactions were usually good-natured, if rather antagonistic, and more than a little sexually-charged. She liked to make trouble for him by smuggling weapons into secure areas of the station and generally being uncooperative, usually in an attempt to get his attention. She'd made more than one failed pass at him over the years.\n\n\"I do as my Matriarch wills,\" she replied, Moralez daring to roll his eyes at her.\n\n\"Listen, we've got hundreds of Rask all over the station who are enemy combatants as of this morning thanks to your Matriarch's little stunt. The Admiralty wants them off the station as soon as possible, they can't stay here. They were also auxiliaries until a few hours ago, they've shed blood for the Coalition, we're not going to shove them all out of an airlock. I have Rask friends myself.\"\n\n\"We have been recalled to the Rask territory,\" she said, \"our orders are to leave the station.\"\n\n\"Then we want the same thing,\" Moralez insisted. \"We have an understanding, you and I, right? We've known each other for a while, we have what you might call a working relationship. If this is going to go down smoothly, without anyone getting hurt, then I need your cooperation on this. You're their Vice Admiral, they'll do whatever you say without question.\"",
        "\"What do you propose?\" she asked, watching him warily.\n\n\"We need to do this fast, before word spreads,\" he said as he gestured frantically with his prosthetic hands. \"Once the Elysians find out what's happened, we're going to have a full-blown catfight on our hands. I don't think all the Krell and pepper spray in the Galaxy is going to keep the two sides separated.\"\n\n\"If they want to start a fight, then they shall have one,\" Korbaz snarled.\n\n\"Not on my station they won't,\" Moralez shot back, pointing an accusing finger at her with a whir of his electric motors. \"Don't forget, I've put you in the brig before, and I can do it again.\"\n\nRather than responding with anger, the corners of her lips curled into a smile. She respected his brashness, she always had.\n\n\"Very well, tin man, tell me your plan.\"\n\n\"There's a civilian liner docked right now that can carry a good two thousand passengers. I just need to say the word, and the UNN can commandeer it. My proposal is that you and I work together to get every Rask on the station onto that ship and bound for home in the shortest amount of time humanly possible. Sorry,\" he added, \"the shortest amount of time Borealanly possible.\"\n\n\"A sound plan,\" she replied. \"A clever strategist might wait until said liner was clear of the station, and then use the defensive guns to destroy it. They could kill a Vice Admiral of the Rask and hundreds of Matriarchy troops in one fell swoop, rather than sending them home to join the fight.\"\n\n\"Do you really think the UNN would do that?\" Moralez asked, scowling at her.\n\n\"No,\" she replied after a moment. \"I'm sure that one of your foolish conventions or treaties would prohibit it.\"\n\n\"It's not like you have much of a choice in either case. I don't want to try interning a few hundred angry Rask. I guess we'd have to seal you up in one of the hangars and toss a crate of MREs in there every couple of days.\"\n\n\"Does it not worry your Admiralty that we will be bolstering the forces on the ground?\" she asked skeptically.\n\n\"Bolstering the forces on the ground?\" Moralez scoffed. \"If the entire Rask population mobilized for war, it would be a drop in the bucket compared to the armies that the UNN can field, let alone the Coalition. You have no fleet, no technology, how on Earth does your Matriarchy expect to win this war?\"\n\n\"Do you think that we would stumble into battle unprepared?\" Korbaz replied, her tail flicking in irritation. \"You underestimate us. You always do.\"\n\n\"And what happens if a Bug fleet jumps into orbit and starts shooting drop pods into your territory? What are you going to do then? That's the reason the Coalition exists in the first place, might I remind you.\"\n\n\"The Matriarchy has more pressing concerns,\" she replied dismissively.\n\n\"Let's just get this done,\" Moralez sighed. \"Get your people moving, and I'll start organizing escorts for them. Stay in touch,\" he added, tapping at his ear. \"We need to coordinate this carefully.\"\n\n***\n\nThe captain of the liner had been less than happy about the change, but after a few threats and promises, they had finally gotten to a point where they could start loading the Rask onto the ship. Moralez's MPs had sectioned off a chunk of the torus and had been escorting them from the barracks in groups of a few dozen at a time, shipping them out to the waiting vessel in troop transports. Just as Moralez had feared, word about what the Rask had done on Borealis had spread fast, but he and Korbaz had moved faster. They were almost done loading the aliens, and only a couple of hours had passed since he had first suggested the idea to the Vice Admiral.\n\nThe two of them were standing side by side next to one of the idling dropships in one of the hangars, its troop ramp open. It was designed to ferry personnel to and fro, its hull painted in a shade of ocean-grey. It had a pair of stubby wings for gliding in atmosphere, and a cockpit situated high on the stunted nose for maximum visibility.\n\nAnother procession of Rask entered from the torus, flanked on both sides by armed MPs. They were wearing the Navy-blue coveralls that had been issued to them when they had first arrived on the station to begin their training, duffle bags full of what few possessions they wanted to take home slung over their shoulders. Most of them looked more confused than angry. It hadn't been their idea to start a war with the Coalition, they were merely caught in the crossfire. Many of them were just kids, some of them might only have been on the station for a matter of weeks.\n\nAs they marched towards the shuttle, one of their number stopped, a confused MP at the back of the line pausing to wait beside him. Moralez turned to ask Korbaz what was going on, but her ears were already pricked up. She knew instinctively that something was wrong.\n\nAnother of the aliens turned around and left the formation, followed by a handful more. There were five of them in all. These must be that Rask's packmates. The Borealans tended to self-organize into small social units of half a dozen or so, each one led by an Alpha who commanded total obedience. The taller of them stepped forward, a couple of MPs following, one of them looking to Moralez for guidance from beneath his white helmet. The Chief began to move, but Korbaz placed a hand on his shoulder.\n\n\"Wait,\" she whispered, watching intently.\n\n\"Nugza, get back in line,\" the Alpha snapped. He looked mean, even for a Rask, the dark skin on his face crisscrossed with faded scars. The solitary male's ears flattened against his blonde hair, his amber eyes turning to the deck. \"I said...get back in line,\" the Alpha repeated in a menacing tone, his packmates sharing uncertain glances.\n\n\"No,\" the male replied.\n\n\"What?\" the Alpha hissed, his tail puffing up like a feather duster. It might not be apparent to the uninitiated, but a Borealan refusing a direct order from their Alpha was practically unheard of. It was a violation of their social hierarchy, a spit in the face that warranted immediate reprisal. Moralez had never seen such defiance before, not unless a challenge for dominance was about to be issued.\n\n\"I don't want to go,\" the male replied, clenching his fists as he stared at the floor. He was frozen as still as a statue, as if afraid that any movement might provoke an attack from his superior.\n\n\"Nobody has given you a choice,\" the Alpha snapped, taking a couple of steps closer. \"I'd scar you for your insolence right here if we weren't pressed for time. Get back into line, and pray that my anger cools before we find ourselves alone together.\"\n\nEverything seemed to have come to a standstill, as though someone had pressed the pause button on the scene. The Rask were all watching the confrontation, and the MPs were standing around, not really sure of how to deal with it.\n\n\"This isn't right,\" Nugza continued, baring his teeth in a grimace. \"These humans have shown us kindness, as have the Elysians. They are my friends. The Matriarch orders us into war against them, and I...I cannot.\"\n\n\"You question a decree from the Matriarch?\" the Alpha asked in disbelief, his jaw hanging agape. \"How dare you! Nugza, you have spent too long in the company of these aliens, you forget yourself. What of your loyalty to your people, to the pack who fills your stomach with food and your hands with steel?\"\n\n\"I will not shed their blood!\" Nugza yelled, his voice echoing in the hangar. \"They are as my pack, my kin.\"\n\n\"Traitor!\" the Alpha sneered.\n\nMoralez wasn't sure what was about to happen. Disagreements of this nature usually ended in a physical bout in which one participant emerged victorious, while the other submitted, but this was bizarre.\n\n\"I won't go either,\" someone shouted, all eyes turning to another Rask as she stepped out of line. She brandished a prosthetic arm, not dissimilar from Moralez's, the motors whirring as she flexed her polymer fingers. It seemed that she had lost her original limb just below the elbow. It had three thick digits and a thumb, each one tipped with a claw that was decidedly duller than her natural ones. Perhaps that was due to weaponized prosthetics being prohibited under UNN treaties.\n\n\"I owe the humans my life,\" she continued. \"Without their help, I would have surely died, and without their medicine, I would be living out the rest of my days as a cripple. I will not raise arms against them.\"\n\nThis one seemed to be from a different pack, her own Alpha swiping at her. The female leapt clear, brandishing her claws and crouching low as her furious superior began to circle her, the two gearing up for a scuffle.\n\n\"Korbaz, you gotta nip this in the bud before I have my guys break out the mace,\" Moralez warned. The Vice Admiral stepped forward, her voice carrying through the hangar as she bellowed loud enough that even a couple of the MPs were startled.\n\n\"There will be no fighting!\"\n\nEven the disobedient Rask stopped what they were doing and turned to look at her, Nugza swallowing conspicuously as he stood up as straight as a board.\n\nMoralez approached the gaggle of aliens, their feline eyes tracking him. He waved over the pair of dissidents, their Alphas watching with barely contained fury, a chorus of low muttering coming from the others.\n\n\"I appreciate what you're doing,\" he began. \"Really, I do. It takes a lot of guts to refuse an order that you know is wrong, to go against your Alpha like that. But if you choose to stay, I'm going to have no choice but to lock you in the brig. There's no way for us to be sure that you're not spies or saboteurs.\"\n\n\"Very well,\" the female with the prosthetic arm replied. \"Better that, than to be forced to kill our comrades.\"\n\nThe male, Nugza, seemed less sure of himself. As Borealans often do, he looked to the more brash female for reassurance, eventually nodding his head.\n\n\"I will accept imprisonment,\" he added, stony-faced.\n\nMoralez called over a couple of the MPs and instructed them to escort the pair to the security building, where they'd be interned until further notice. Maybe he could pull some strings, get them out early on the condition that they'd be kept under surveillance. He couldn't deny that their stunt had moved him. Korbaz wandered over to stand beside him as the pair were marched out of the hangar, the remaining Rask seeming content to board the shuttle.\n\n\"Thanks for handling that,\" he muttered, Korbaz nodding. \"I guess the war isn't all that popular with the Rask, either.\"\n\n\"I understand their sentiment,\" she replied, \"it is...difficult to raise arms against someone that you once called a friend. But the Matriarch does not require our sentiment, only our obedience. A Borealan must obey their Alpha in all things, and the Matriarch is the Alpha of Alphas. This is something that humans understand also. A Private would never defy the orders of an Admiral, a Marine must obey his commander in all things. You labor under the misapprehension that your way of life is different from ours, but you merely practice obedience selectively. It is something that I have always hated about you...\"\n\n\"Damn,\" he chuckled, giving her a sideways glance. \"You go straight for the throat, don't you? I used to hate Borealans too, you know. These,\" he said as he waved his prosthetic hands in front of her, \"are partly the fault of a Borealan. Eventually, I came to understand them, learned that there was a method to their madness. I don't hate them anymore, I don't hate you.\"\n\n\"I...don't hate you either,\" she sighed, seeming to regret the sharpness of her tongue. \"You just frustrate me sometimes.\"\n\n\"Are we talking about the human race, or me in particular?\" he asked with a wink.\n\n\"A little of both,\" she replied, giving him a weary smile. \"Perhaps, when the Rask are victorious, I will take you as my concubine. A Security Chief would make for a fitting trophy.\"\n\n\"Well, that's something to look forward to,\" he laughed. He wasn't quite sure if she was joking or not. \"If you wanted to stay,\" he continued, \"I could probably swing it so that you'd be put under house arrest in one of the suites. You could claim political asylum, and we could stick you in a five-star hotel for the duration of the war. Under surveillance, of course,\" he added.\n\n\"Thank you for the offer,\" she said, \"but my place is at my Matriarch's side. I must return to her, I have been summoned.\"\n\n\"Have it your way,\" he said with a shrug. \"By the way, I never got the whole Vice Admiral thing. What does that mean, exactly? Borealis has no oceans, and the Rask have no fleet, so what kind of ships are you responsible for?\"\n\n\"We sail oceans of sand,\" she replied cryptically, Moralez raising an eyebrow.\n\n\"There are only a couple more groups of Rask to bring through,\" he said as they turned to watch the troop ramp of the shuttle seal. They walked clear as the engines flickered to life, a blue glow emanating from within the nozzles as the pilot ran a pre-flight check. \"I take it you're heading back home on the liner with your troops?\"\n\n\"No,\" she replied. \"My Matriarch has chartered a private Courser to take me back. Our business cannot wait the two weeks that it will take the liner to make the jumps.\"\n\n\"Courser'll get you there in about a day,\" Moralez said with a nod, watching the shuttle rise from the deck. It hovered over to the blue force field on its thrusters, passing through the shimmering barrier as it headed out into open space. \"I don't think this will be a long war. For all the grief you give me, I'll be sorry if you don't make it out. My job would be a lot less interesting without you around.\"\n\n\"Do not worry,\" she said, giving him a pat on the shoulder. \"I must return to claim my trophy, remember?\"\n\nCHAPTER 2: SANDSTALKER\n\nThe Courser emerged from superlight like a needle piercing the fabric of the cosmos, a cloud of colorful gas spreading behind it as the vessel tore a hole in reality. It drifted for a moment, the thrusters along its chassis flickering as the autopilot righted it, emitting jets of blue flame. It was shaped vaguely like a torpedo, pointed and streamlined, the engines and the nuclear reactor that powered its drive housed far at the back of the sleek hull. The cockpit and the limited cargo area was situated at the pointed front of the craft, linked by a long, skeletal scaffold that helped to reduce its mass. A Courser was the most optimal ratio between mass, carrying capacity, and power consumption that the Navy could build. They were designed to be as fast as possible, ferrying important personnel and critical information over great distances where slower methods just wouldn't suffice.\n\nFrom within its passenger compartment, Korbaz slowly came to, spitting out her plastic bit and releasing the manacles that were secured around her wrists. She leaned forward in the padded crash couch, cradling her head in her furry hands. Superlight travel was supposed to get easier over time, but she didn't see it that way. After every jump, she felt like someone had beaten her with clubs. The wracking energies of these arcane, human engines had a strange effect on living nervous systems, sending the occupants of the craft into varying degrees of seizure and unconsciousness. It was one aspect of being an Ambassador that she wasn't going to miss.\n\nA human voice came through on the nearby intercom, her ears flattening against her head as the sudden noise exacerbated her lingering migraine.\n\n\"There's a shuttle en route to pick you up,\" he said, followed by a crackle of static. \"Hurry up and get your gear, I ain't hangin' around for any longer than I have to. Your boss paid me to drop you off, not to stare down the railgun barrels of a UNN fleet. I just got hit with a dozen fuckin' radar pulses.\"\n\nHow she would have loved to tear the insolent whelp from his cockpit and teach him a lesson about respect, but now was not the time. Every moment that she wasted was a moment that she was not serving her Matriarch.\n\nShe rose from her seat on legs that were still unsteady, slinging her pack over her shoulder. The passenger compartment was cramped, even by human standards, and she narrowly avoided hitting her head on a protruding pipe as she made her way across the metal deck. The docking umbilical was already extending from the ship when she arrived at the pressure door, Korbaz watching through a tiny porthole as the flimsy tube telescoped outwards into space. It looked like a metal frame wrapped in flexible material, hardly sure footing. A shuttle appeared from her right, its retros flaring as it decelerated. It was similar to the troop transports used by the UNN, albeit an older model. While the Matriarchy didn't have the resources to buy frigates and gunboats like the Elysians, owning a few private shuttles was a necessity.\n\nThe two vessels lined up, then there was a loud thud as they locked together. The pressure doors opened automatically, a rush of stale air blowing her hair as she took a step forward. The shuttle door was perhaps fifty feet away, the white material that served as her only protection from the vacuum beyond couldn't have been much sturdier than a plastic tarp. The metal walkway creaked underfoot as she slowly made her way over, loosing a sigh of relief when she stepped onto the shuttle.\n\nThe pilot was a Rask, and he greeted her with a respectful bow of his head. There wasn't much room for him to do anything else considering how cramped the cockpit was, so she didn't expect a more formal reception.\n\n\"Take me to the palace,\" she muttered, tossing her bag to the floor before taking a seat on one of the crash couches. She strapped in as the pressure door sealed with a hermetic hiss, the shuttle beginning to drift away from the Courser. Through the cockpit's canopy, she got a view of her homeworld, the sprawling deserts seeming to stretch infinitely. Coming home should be a good feeling, but all she felt was a twinge of apprehension. She didn't know what the Matriarch expected of her, what her role might be in the coming conflict.\n\nKorbaz would never dare to openly question her superiors, but as the shuttle banked towards the planet, doubts swirled in her mind. The Matriarch had never left the homeworld, she hadn't seen the might of the Coalition with her own eyes. The humans had mass drivers that could crack planets mounted on their battleships, they had nuclear weapons that could turn the entire territory into an irradiated crater if they so wished. Did she really know who she was picking a fight with?\n\nThe aliens were obsessed with their laws, their regulations, their rules of engagement. They went to such lengths to avoid what they called war crimes, collateral damage, but was it safe to assume that they could not be provoked into breaking those rules?\n\nThey descended through the atmosphere, turbulence buffeting the little craft as the flames of reentry began to lick at its nose, the Rask territory coming into view. Where many territories were encircled by a protective wall of verdant jungle, Rask was exposed, the desert sands spilling through the miles-wide breaches between the trees. These broken bands of jungle did a poor job of trapping moisture and creating a micro-climate, resulting in the territory's interior being dryer and harsher than any other. There was water, and there was forest, but Borealis had not bestowed the same gifts upon all of her children.\n\nIts people were a reflection of their environment in many ways. Like their home, they were scarred, inhospitable. The Rask prided themselves on their tenacity, their ability to face the hardships of daily life and thrive on them.\n\nThe Elysians had a lake that was bigger than the entire Rask territory, ringed by jungle so dense that not a grain of sand could reach the interior. Being within its bounds was like stepping into a different world. Food was plentiful, they never had to range far to find a gourd hanging from a vine, they never had to swim far to find a shoal of fish. The Rask had to fight for everything that they had.",
        "The shuttle began to circle above the territory, spiraling down towards the sparse jungle canopy, shedding velocity as it glided on its stubby wings. It was sandstorm season, and there was already a roiling wall of dust drifting over the territory from the West. I would soon blanket everything in an obscuring, orange haze that would limit visibility to only a scant few feet, the harsh winds that carried it buffeting their little craft.\n\nThey flew low over the lake, the city rising up before them as they neared the far shore. The squat buildings were constructed from blocks of yellow sandstone, overlaid with protective mortar that gave them a hand-sculpted appearance, the wooden support beams that helped to reinforce the structures protruding from their facades at intervals. They had no windows, all the better to keep the interiors cool, and to prevent the ever-present sand from finding its way inside. Few were more than one or two stories high, as the Borealan gravity made building tall structures architecturally challenging. The larger and more decorative buildings had stone arches and domed roofs that were self-supporting, and stout, load-bearing pillars that were carved with murals and inscriptions. Between them, the cobbled streets were already packed with drifts of sand from the previous storm. There was no point clearing it away at this time of the year, as it would soon be deposited again. What few figures that could be made out at this altitude were wrapped in robes that protected them from the airborne particles, the wind tearing at the fabric. Most of the citizens would be taking refuge inside right now.\n\nKorbaz spied the Matriarch's palace in the distance, sitting in the center of the city. Land was at a premium in the Rask territory, the sprawling compound a testament to her wealth and power. It occupied a space of about fifteen thousand square feet, most of which consisted of a large courtyard, the complex surrounded by tall walls. At each corner was a needle-like spire that reached as high into the air as the Rask dared to build, the white marble caps ensuring that they could be seen from a great distance.\n\nThe main building was a sprawling cluster of domed structures that almost look like soap bubbles from the air, each one tipped with another towering spire. Every needle was adorned with a finely embroidered flag that fluttered in the wind, their edges tattered by generations of sandstorms. They depicted various triumphs and important historical events in the territory's history, some of them now too damaged to make out clearly.\n\nThe courtyard itself was overlaid with a covering of red marble, veins of lighter yellows and oranges winding their way through the massive blocks of stone. It gradually gave way to dirt and sand, the center of the space occupied by an artificial oasis. The pool of water shimmered as it caught the light of the suns, as clear as a mirror, the colorful desert flowers and spindly trees that encircled it adding a splash of color and greenery.\n\nUnlike the streets outside, everything inside the palace walls was spotless. There were people seeing to its upkeep around the clock.\n\nThe shuttle banked, heading towards a clearing on the far side of the palace, just outside of its walls. The sandstorm was coming in fast, already darkening the blue sky as they began to descend. There was a thud as the craft touched down, bouncing on its landing gear for a moment as the engines wound down. Korbaz collected her bag, waiting by the troop ramp as it began to slowly descend. The heat hit her like a wall, but she welcomed it, feeling it warm her to the very bone. As she left the artificial gravity field of the shuttle, she had to save herself from stumbling, Borealis' gravity tugging at her. Her body had been hardened by this environment, but she had spent many months on the Pinwheel, where the humans kept the gravity thirty percent lower.\n\nShe was greeted by a pair of Palace Guards who were dressed in a blend of the UNN Shock Trooper armor that had been supplied to them by the aliens, and the traditional Rask armor. The Matriarch wanted to make use of the best technology available, but she liked to give everything a little native flair. They were wearing thick, padded jackets over the high-tech battlesuits, left open to expose the ceramic chest piece beneath. On their right shoulders were short, purple capes that were embroidered with gold threads, a holdover from their traditional uniform. Rather than the tactical rigs favored by the Marines, they wore slings and holsters that were filled with knives and handguns, the majority of which hung from belts around their waists. Their boots were more suited to the desert, and the leather cuisse armor that they wore helped to break up the clean, artificial lines of the alien suits. There was no danger of them overheating, Korbaz knew that the armor was climate-controlled as long as its batteries were charged.\n\n\"Welcome home, Vice Admiral,\" one of the guards said, his voice muffled by his opaque visor. \"The Matriarch awaits your arrival. We have been sent to escort you to the palace.\"\n\n\"I know the way,\" she replied, the pair flanking her as she set off towards an arched entrance in one of the towering walls of the compound. There were two more guards posted to either side of it, long rifles clutched in their hands, the barrels lined with copper-colored rings. Those were XMRs, the standard-issue railguns of the UNN. They were designed with a modular frame that could be scaled up or down based on the stature of the wielder. The bayonets mounted to their long barrels had been replaced with a decidedly more wicked design, making them look more like spears than rifles.\n\nThey emerged into the courtyard, Korbaz admiring the reflective sheen of the polished marble beneath her paws. The fronds of the trees that encircled the oasis waved in the wind, the flowering shrubs seeming to flutter. She looked to her left, seeing that the ominous shadow of the storm was still encroaching.\n\nAs she neared the main structure, the two guards broke off, returning to their posts. She passed beneath another ornate arch built from blocks of ochre-colored marble that was streaked with veins of white, the temperature cooling as she stepped inside the building proper, as though she was entering an underground cave. The interior was also decorated with varying colors of marble, masterfully sculpted pillars from which were suspended tapestries and banners lining the long, sandstone hallways. The walls were at least ten feet apart, the ceiling twice that height. The floor was paved with smooth, black stone, reflecting the glow from the burning chandeliers that hung from the wooden beams above. Mineral deposits were one of the few resources that the Rask possessed in abundance.\n\nShe pressed on, steeling herself for an audience with the Matriarch herself. Her heart began to beat faster as she approached the audience chamber, finding a pair of heavy doors blocking her path. The wood was engraved with scenes of battle, the reliefs depicting the victories and massacres of the territory's storied history. Korbaz stopped before them, taking a moment to collect her thoughts. She fought the impulse to relinquish the myriad of weapons that hung from her belt, as she was required to do when entering secure areas on the Pinwheel. That was a human custom. In Rask culture, everyone attending an official function was expected to be armed. If one attendant drew their weapon, then so would everyone else. It was mutually-assured destruction, a guaranteed blood bath.\n\nThe Vice Admiral swallowed the lump in her throat, then pushed the great doors ajar with a loud creak, stepping through into a vast chamber. The main dome of the palace rose high above her head, perhaps thirty feet at its apex, opulent pillars carved from solid chunks of black marble ringing the circular room to support its immense weight. There was almost no sandstone visible here, it was all covered up by flowing drapes in shades of deep purple, the delicate fabrics extending from the beginning of the dome to the ground. Between each pillar was a stone column topped with a ceramic pan that was filled with burning coals, the bright flames licking at the air. They served as the chamber's only illumination, casting dancing shadows, their light reflecting off the polished floor.\n\nAt the far wall was a subtly raised platform, the steps that led up to it made from the same black marble. Upon it sat a massive throne hewn from a single block of red stone that was crisscrossed with white veins of ore, giving it an uncanny resemblance to fresh meat. It was carved with more intricate reliefs, the armrests ending in the sculpted heads of Rask hounds.\n\nOne of the creatures was sitting beside it obediently, an especially large specimen, its long snout covered in faded scars from past dominance battles. It stared at Korbaz with its glassy, beady eyes as she approached, its sagging lips pulling back to reveal an impressive set of pearly tusks as it snarled menacingly. The archeox were beasts bred for war, quadrupedal pack hunters and scavengers native to the Borealan deserts. As fearsome as they appeared, their social system made them ideally suited to domestication. Its pointed ears swiveled to face her, the thing rising to its feet, the dull claws on its splayed paws scratching at the platform. It was about five feet tall at the shoulder, the wobbling hump on its back rising a good foot higher, its ample store of fat indicating that the animal was well-fed. Its coat was sand-colored, patterned with horizontal stripes, and there was a comb of raised fur running from its skull to the tip of its tail that was a darker shade of brown.\n\nThe large figure that occupied the throne reached down to tug at the chain that was attached to its leather collar, the beast returning obediently to its reclining position.\n\nThe Matriarch was imposing, even by Borealan standards, reaching almost nine feet in height. Her sun-kissed skin was covered in the remnants of healed scars, and she wore an eyepatch over one eye that had been lost in battle, the other a striking shade of amber. Her mane of long, blonde hair had a feathery, puffy quality to it. It cascaded over her shoulders like a golden waterfall, almost reaching her clavicle. Her appearance was not especially regal. She wore no elaborate jewelry, no cape or crown, only a leather jacket and pants in the usual Rask style. The only indication of her high rank besides her stature was a purple sash that she wore across her chest, which was adorned with golden badges and medals. The jacket, too, was finer than most. The various zippers and buttons were all made from gold, and the lining was fashioned from soft, purple satin that was only really visible on the collar.\n\nThe jacket was open, revealing the grey tank top that she wore beneath it. The garment exposed her impressive cleavage, along with the sculpted rows of her abdominal muscles. Her body had been honed by a lifetime of Borealan gravity and savage battle, bestowing her with a figure that looked as though it had been chiseled from the same marble as the palace halls. She was the epitome of everything that a Borealan strived to be. Confident, powerful, commanding. She sat with her stout thighs parted, the dimples of her muscles visible through the clinging leather, lounging on the padded cushions of her chair.\n\nShe was not alone. On soft cushions that were arranged around the foot of the throne sat half a dozen consorts, a display of youth and beauty that Korbaz couldn't help but drink in. Male and female bodies in their prime were on display, clad in delicate, flowing fabrics that left nothing to the imagination. This was not the Matriarch's pack, these people had been selected to sate her appetites and nothing more, their fresh faces and full lips drawing the Vice Admiral's gaze. These were not slaves. Any sound-minded Rask would revel in the opportunity to serve their Matriarch in any way that she required.\n\nKorbaz took a knee as she reached the foot of the platform, bowing her head. The marble floor was so polished that she could almost see her reflection in it as she stared intently at the ground.\n\n\"My Matriarch, I answer your summons.\"\n\n\"Rise,\" a deep, gravelly voice replied. Korbaz dared to lift her eyes, watching as the towering figure began to descend the steps. \"You have made good time, Vice Admiral.\"\n\n\"Only thanks to your foresight, my Matriarch,\" she said as she stood up straight. \"It was wise to hire a Courser. The troops stationed on the Pinwheel will not be returning for two weeks, maybe more if the humans take measures to delay them, as I expect they will.\"\n\n\"I needed you at my side,\" the monarch replied, Korbaz turning to walk beside her as she made her way to the wooden doors. \"You have dwelt among the aliens, you know them better than anyone.\"\n\n\"Their politics, certainly,\" Korbaz said as the pair stepped into the long hallway.\n\n\"I need that expertise,\" the Matriarch continued. \"Their laws, their rules of engagement, what measures they will and won't take against us. You are also an accomplished Crewmaster, you made a name for yourself as a sand sailor.\"\n\n\"Yes, my Matriarch,\" Korbaz replied as she hurried to keep up with her long strides. \"I have experience commanding raiding parties.\"<br >\"You must be wondering what my plans are, what preparations I have made,\" the Matriarch continued. \"I could not warn you in advance, the humans have spies everywhere. It would be foolish not to assume that they have full control over the communications technology that they created, that they can intercept messages, listen in on our conversations when we think ourselves alone.\"\n\n\"You are wise, my Matriarch. I know that to be the case.\"\n\nThey exited beneath the marble arch, walking across the courtyard. The wind whipped at the Matriarch's golden hair, Korbaz glancing to her left, seeing that the sandstorm was nearly upon them.\n\n\"For some time now, I have been building my forces in secret, knowing that the day would come when we would be at odds with the Coalition. From the outset, I knew that they did not understand our ways, that they did not respect our traditions. But we needed their weapons, we had no hope of countering Elysia's forces unless we made a pact with the humans. Now, we have their weapons, their technology. Our warriors have been put through the crucible of war on a dozen worlds, they've been trained in the alien's tactics, their battle doctrine. The humans have unknowingly sharpened the blade that we will be putting to their throats.\"\n\n\"My Matriarch,\" Korbaz began hesitantly. Phrasing her question as a criticism could earn her another scar for her insolence. \"The humans are as numerous as they are powerful. We face a far superior force, one which has capabilities that we do not. In your wisdom, how do you plan to achieve your goals?\"\n\n\"Your doubts are well-founded,\" she replied, \"but you merely lack the keystone that holds up the arch. Defeating the Coalition is not our goal, nor could it ever be. As you say, they are far beyond us. Yet their strength is not that of an Alpha, they do everything in half-measures. They have the power to induct the entire Galaxy into their pack, but not the will to do it. The Rask bow only to true strength, our fealty cannot be bartered for trinkets and toys.\"\n\n\"So...how does one win a war without...winning a war?\" Korbaz asked, confused.\n\n\"This is why I value your expertise so greatly,\" the Matriarch replied as she led the Vice Admiral towards the far wall of the lavish compound, her leather pants creaking with every step. \"Your station has been to learn their laws, their conventions, the terms of their treaties. You know how their laws permit them to respond, in what ways their sacred conventions will stay their hand. This war will be a careful balancing act. We must defeat them in the field, but we must never provoke them into using their full strength against us. We will exploit their civility, their pity, their compassion. We will strike from the sands and fade away before they can react. We will out-maneuver them, trap them, sabotage them.\"\n\n\"A guerrilla war,\" Korbaz mused, nodding her understanding.\n\n\"Just as our ancestors have always done, we will use our maneuverability and our knowledge of the land to our advantage. We will exhaust them, and when the war becomes too costly for them to continue, they will abandon it. They do not care about Borealis, they never have, their focus is on protecting their colonies from the insect hordes. They use our people as cannon fodder, they shield our world only to deny a foothold to their enemies.\"\n\n\"And you have secured weapons, equipment?\" Korbaz asked.\n\n\"The Coalition has been providing us with defensive weapons as part of our treaty with them for some time. Armor, firearms, ammunition. Enough to outfit our warriors. But they have never fully trusted us. They will not provide us with ships, vehicles, orbital weapons. They correctly suspected that we were still engaging in raiding and piracy. Yet we have been able to get around those limitations in...creative ways, as you will soon see.\"\n\nThey emerged onto one of the cobbled streets, the two guards who were posted at the entrance to the compound bowing as they passed. They waited for a moment, standing between the mortar facades of the buildings. A pack of civilians passed them by, their bodies wrapped tightly in shawls to protect them from the blowing sand, lowering their heads in submission when they noticed the Matriarch.\n\nAfter a minute, Korbaz heard the rumbling of an engine. From the street to their right came a wheeled vehicle, the bright beams of its headlights piercing the haze that the sandstorm was beginning to create. It rolled to a stop in front of them, the Matriarch crossing her muscular arms and looking on with a grin as Korbaz began to walk along its length. It was of human design, that much was obvious by the sleek, rounded nose of the craft. But once she reached the vehicle's glass canopy, it took on a more Rask quality, welded armor plates making up the rest of its chassis. At the rear was a flatbed upon which was mounted a railgun turret, currently uncrewed.\n\n\"If the humans will not sell us armored vehicles, then we must make our own,\" the Matriarch explained. She gestured for the pilot of the vehicle to leave its cockpit, and he stepped out, rounding the curving front section to stand before her. Simply by his body language, Korbaz could tell that he was of low social standing. He stank of insecurity, his eyes darting between the two females nervously. He was not wearing any UNN armor under his leather clothing, but he did have one of their holographic gauntlets attached to his wrist. Korbaz knew them to be onboard computers, the humans used them frequently to view data and to interface with their machines.\n\n\"This is Vitza, I have made him my Chief Engineer. He has been overseeing the acquisition and modification of our new technologies. I have given him the authority to make decisions in that regard, and he is not to be challenged.\"\n\n\"Yes, Matriarch,\" Korbaz replied. It was not uncommon for those of special knowledge or skill to be appointed roles within the social hierarchy that they had not earned through dominance bouts. Otherwise, stronger and more aggressive Borealans would simply overrule them, and no work would get done.\n\n\"Vitza,\" the Matriarch continued, \"explain to the Vice Admiral what this vehicle does.\"\n\n\"This is what they call an SUV,\" he replied, becoming a little more confident as he began to talk about his subject of interest. \"It's a civilian transport. We bought a fleet of them and have been outfitting them for battle. Our people could not fit inside them, so they had to be stripped down to the engine and drive train, then rebuilt to better suit us. They run on hydrogen engines, making them fast and fuel-efficient. They have a range of about a hundred leagues before the fuel must be replenished. We replaced the tires with something more suitable for desert travel and upgraded the suspension. Unlike our sand skiffs, they do not rely on the wind for power.\"",
        "\"It certainly has the maneuverability and firepower needed,\" Korbaz mused, inspecting the mounted gun. It was the same as those that she had seen the Krell carrying on the station, an LMG with a gun shield, and a drum magazine. It was large enough that even a Rask might have found it unwieldy to lug into battle.\n\n\"This is just the beginning,\" the Matriarch continued, walking around the side of the vehicle. She climbed inside and gripped the wheel-shaped control device in her hands, Korbaz slipping into the bucket seat beside her. Vitza slid into one of the seats at the rear, there were four in all. They began to drive, the Matriarch seeming to take pleasure in revving the engine as they weaved through the narrow streets, the treaded tires kicking up clouds of dust.\n\n\"The humans cannot even control their own territory, let alone ours,\" she sneered. \"We are in contact with several pirate syndicates who have been able to smuggle us a great deal of advanced equipment over the years. They provided us with torpedoes for the right price. Vitza?\"\n\nThe male would not speak without her permission, leaning between their seats as he began to elaborate.\n\n\"They are called MASTs, interdiction weapons that have cleared the skies of Coalition ships, denying them their greatest advantage. We've been able to create a three hundred and sixty league perimeter around our territory in which we can operate without fear of attack from the skies. Once the sandstorms are at their worst, they will be unable to track our movements from space.\"\n\n\"Then, you have forced them to the ground?\" Korbaz asked, impressed.\n\n\"Their vaunted ships dare not come within range,\" the Matriarch chuckled. \"It is my belief that the humans will attempt to cross the desert by land and disable the launchers so that their fleet can restore control. I have ordered them to be hidden within the city to deter the aliens from simply calculating the origin point of the launch, and firing on it from space.\"\n\n\"How many do we have?\" Korbaz asked.\n\n\"Fewer than I would have our enemies believe, but it matters not,\" the Matriarch replied. \"The humans will assume that we have the power to down more of their ships until they are all secure and accounted for. Am I correct in my assessment?\"\n\n\"Indeed, Matriarch,\" Korbaz replied as the vehicle rounded a tight corner. \"They will not risk their assets as long as doubt remains.\"\n\nThey cleared the city streets before long, driving out into the barren scrubland between the jungle band and the lake. The glint of metal was visible in the distance, even through the swirling sand that was filling the air, Korbaz narrowing her eyes as she tried to make it out. A giant shadow slowly took form, a behemoth, the Matriarch smiling at her shocked expression.\n\nAs they neared, it only grew larger, a gigantic vehicle on a set of four tracks coming into view. It was like a mobile fortress, at least eighty meters long, and maybe fifteen meters high. The monstrous tracks alone were the size of an average building. The rows of round wheels drove enormous treads made from interlocking slabs of metal, like the tracks of a giant tank. It had a flat deck, upon which were mounted a litany of weapons. There were triple-barreled cannons with strange, white bulbs mounted atop them, what looked like camera lenses catching the sun as they swiveled around of their own accord. She could make out three massive railgun turrets from this angle, along with a missile launcher that was positioned towards the front of the craft, elevated on a large piston. The whole thing had been painted in desert colors, the ocean-grey of the gun turrets masked by crude desert camo. Towards the rear of the deck was a blocky building that rose into the air, a radar dish mounted on top of what looked almost like a conning tower. Its walls had been reinforced with armored plates, the windows protected by metal slats.\n\n\"How have you done this?\" Korbaz asked, her tone of voice conveying her awe.\n\n\"They would not sell us ships or tanks, and so we made our own,\" the Matriarch replied proudly as she drove towards the thing. \"These were by far our most costly purchase, but it was necessary if we were going to enact our plan. Vitza, elaborate.\"\n\n\"These are called crawlers,\" he explained from the back seat. \"They are used to transport ultra-heavy cargo and launch vehicles in human spaceports. They move very slowly, but they can carry an enormous load. We were able to buy several of them under the pretense of using them for mining operations.\"\n\nAs the Matriarch began to circle the crawler, Korbaz was able to examine it in more detail. It was indeed industrial in nature, everything was huge, overengineered. It was almost square in shape, perhaps sixty meters wide, with one of the reinforced treads positioned on each corner to spread the weight out evenly. Each one was like a tank in its own right, with two sets of tracks, seemingly able to turn and pivot where it joined to the chassis. She could see now that there were six of the railgun turrets mounted on the deck, and four cannons on each corner, situated just above the tracks. There was a girth to the thing, the doors that were spaced out along its chassis at intervals suggesting that one could go inside it. An extending gantry led up to a platform that ringed the entire thing, and she could see the spots where the Rask had been welding sheets of scrap to its hull to serve as supplemental protection.\n\n\"This one is equipped with six Naval railguns that were salvaged from a scrapped UNN frigate,\" Vitza continued, \"and the missile launcher was taken from the bed of an old military truck. Those four cannons are called CIWS guns, they are automated defensive weapons, able to engage incoming threats under their own power. They were recovered from an abandoned UNN base on Hades, smuggled to us before the operation there was disrupted. The crawlers are powered by a nuclear reactor, allowing them to run indefinitely, for all intents and purposes.\"\n\n\"Are you speechless, Vice Admiral?\" the Matriarch asked. She spared her a satisfied glance before turning her eyes back to the path ahead. \"Tell me what you think.\"\n\n\"They will be...more effective than sandships,\" Korbaz replied, the Matriarch's booming laughter filling the cab. \"I do not understand, my Matriarch. How did you build something like this? For all our ingenuity, surely this must be beyond our means?\"\n\n\"When we bought the crawlers, the company sent teams of engineers to assemble them on the ground,\" she explained. \"The service was included as part of the purchase. As for the modifications, well, humans are ruled by wealth. The trader who obtained the salvaged railgun turrets for us was happy to oversee their installation for an extra fee. The rest, I left up to Vitza and his team.\"\n\n\"How do you expect they will perform against the UNN?\" Korbaz asked the timid male.\n\n\"They would not be used to engage the aliens directly, of course,\" he replied. \"The main gun of a UNN tank could easily cripple them. But these weapons will allow indirect fire, which means that the crews can hit targets from over the horizon with explosive shells and missiles as long as our scouts can spot them. More importantly, they will remain mobile, always on the move to avoid detection.\"\n\n\"How many do you have?\" Korbaz asked.\n\n\"Six, including this one. We have built two battleships, three carriers, and one command ship.\"\n\n\"Carriers?\" Korbaz inquired, leaning out of the cab and craning her neck as they passed beneath the titanic vehicle. It was like looking up at a metal sky, its underside crisscrossed by structural supports and unidentifiable machinery.\n\n\"They'll be carrying vehicles such as this one, deploying them to harass the Coalition's ground forces. It will extend their range immensely, and it allows us to service and rearm them in the field. We've used prefab buildings to serve as barracks and garages for the crews, the same that humans use to establish their colonies on remote planets. They're a little cramped by our standards, but I think we can make do.\"\n\n\"And the command ship?\" Korbaz continued, turning her attention back to the Matriarch.\n\n\"It is the flagship of our fleet,\" she replied, \"designed to coordinate the rest of the crawlers. It now belongs to you.\"\n\n\"It's...mine?\" Korbaz asked, not understanding what she was hearing.\n\n\"I am promoting you to Fleet Admiral, Korbaz. You will captain the command crawler and oversee the operation. You have the experience, the loyalty, the necessary knowledge of the humans. This will be the largest and most costly raid ever undertaken by our people. It must not fail.\"\n\n\"You honor me, Matriarch,\" Korbaz replied with a bow of her head. \"I will not let you down.\"\n\n\"Once the UNN has been expelled from our lands, we will use these titans to control the deserts. With just one or two of these, we could hold entire territories hostage, dominate all trade on the planet. Imagine one of these pulling up outside Elysia, threatening to bombard their city from beyond the jungle band unless they pay a tithe. We can plow through the Araxie jungle and snap their precious trees like twigs, churning up their damned ghosts under our treads.\"\n\n\"We could rekindle the glory of our ancestors,\" Korbaz nodded, feeling pride well in her chest.\n\nThe Matriarch pulled up beside the battleship, their vehicle skidding to a stop as she hit the brakes. She seemed to have quite some experience with this machine, perhaps she had been practicing for her own amusement. The sandstorm was in full swing now, limiting their visibility, the sound of airborne particles whipping against their vehicle's chassis like rain on a tin roof. The three of them dismounted, turning to face the crawler side-on, the colossal machine partially obscured by the sepia haze. Before them was a group of maybe fifty Rask who must comprise part of its crew, their helmets and goggles shielding them from the sand. They wore the usual Rask garments, lots of thick leather, the buttons and badges adorning their chests denoting their rank in the hierarchy.\n\nOne of the crewmen walked out to meet them, the wind tearing at the scarf that was wrapped around her face, her tinted goggles reflecting the sunlight. The brown leather of her jacket was embossed with intricate scenes of battle, depicting raiders disembarking from a sandship, their machetes raised. She wore a Crewmaster's sash, her collection of medals informing Korbaz that she had participated in many successful operations.\n\n\"My Matriarch,\" she said, raising her voice over the howling storm. \"The battleship Landslide stands ready to deploy. Fleet Admiral Korbaz, we were told to expect you. It will be an honor to serve under you, my crew stands ready to carry out your orders.\"\n\n\"You will be riding the Landslide through the East Gate and out to the rally point,\" the Matriarch explained, beginning to walk towards the crawler's extended gantry. Korbaz and the battleship's Crewmaster flanked her, while Vitza trailed behind them. \"There, you will transfer to the command crawler Wildfire, and assume your duties.\"\n\nThe Crewmaster broke ranks suddenly, waving a gloved hand at the gaggle of crewmen.\n\n\"What do you think you're doing, whelps!? Shield your Matriarch from the storm, or I'll flay your hides!\"\n\nThey scrambled to form a line to the right of their superiors, using their bodies as windbreaks. The flying sand hammered their backs, but they endured it, Korbaz feeling the gale lessen as she made her way into the shadow of the crawler. The Crewmaster ran a tight ship. Korbaz got the impression that if one of her charges even flinched in front of the Matriarch, they'd be in for a savage correction.\n\nThey reached the foot of the gantry, gripping the guard rail as they began to climb the steps, the metal frame creaking under their combined weight. They soon emerged onto the platform that ringed the crawler's chassis, Korbaz peering over the railing to see the crewmen fifteen meters below, now scarcely larger than her claw. The wind was even wilder up here, and she was glad when they entered through one of the low doors that led inside the main body of the vehicle.\n\nThe sound of the wind faded as the hatch closed behind them, replaced by the far-off roar of the idling engines, Korbaz shaking the sand out of her hair as she looked down the corridor ahead. It wasn't as cramped as she had been anticipating. The ceiling was maybe seven feet high, so she had to crouch to avoid hitting her head, but it could have been worse. It was made up of metal panels that were secured with bolts, winding pipes, and bundles of electrical cables snaking their way along it. There were dim lights at intervals that did a fair enough job of illuminating everything. The floor was made up of a metal grill, she could feel it vibrating beneath her paws, and the walls were similarly packed with miscellaneous machinery and electronics. All in all, it wasn't too different from being aboard a human spacecraft.\n\n\"Please, this way,\" the Crewmaster said as she guided them through the winding passages. The smell of oil was everywhere, as well as the scent of burnt metal that Korbaz had come to associate with electronics. They came across a few more crew members who were engaged in their usual duties, each one stepping out of their path and bowing low, making themselves as submissive and as non-threatening as possible before the Matriarch. They didn't even dare to look at her, lest that be taken as a challenge to her authority.\n\nThey came to a ladder that led to a hatch in the ceiling, and they began to climb, emerging into a more open space. This was a room in one of the prefab buildings that Vitza had spoken of, a human dwelling that was made to specification in a factory, only to be dropped into place wherever it was needed. There was no artistry to it, no soul. It held as much meaning as a tungsten slug or a piece of cutlery. This one at least had been furnished by Rask, making it a little more homely than its cold, metal beginnings. They had laid down a carpet to cover up the exposed material, while the furniture that had once been welded to the floor had been removed, replaced with wooden counterparts more befitting its current occupants. There was a window nearby that had been partially obscured by steel bars, but Korbaz could still see out onto the crawler's windswept deck beyond, the six railgun turrets standing ready.\n\nShe could stand up straight in here, the room was rather spacious. From the ground, the prefab had looked to be about nine meters high, at least that wide, and a little over twice that in length. There were two stories to it, it was an entire house designed to be deployed as one unit, with zero construction time required before colonists could start living in it.\n\nThey made their way through the structure, finding that there were kitchens, bathrooms, pantries. Anything that the crew might require to live comfortably in the long-term. Not everything had been scaled up for Borealan use, there was nothing to be done about a fridge or a shower cubicle, but it was far more luxurious than the wooden cabins of traditional sandships.\n\nThey mounted a flight of stairs, arriving at the second level, then proceeded to a third. What Vitza had referred to as the conning tower was, in fact, another smaller prefab module that had been placed on top of the first. The single room had been filled with all of the equipment and tools required to pilot the craft. There were control systems, camera feeds showing views from all angles, radio and radar equipment. It was all very makeshift, with lots of exposed wiring and electrical tape, but it all seemed functional. She walked over to the forward window, able to see clear across the deck. It was like standing on the balcony of the Patriarch's tower in Elysia's capital.\n\n\"This is where I leave you,\" the Matriarch said, sidling up beside her. \"I know that my new fleet will be in capable hands. Keep me abreast of your situation, and remember, each of these vessels represents a significant investment. My treasury is looking about as barren as the scrublands. Do not sacrifice them without good cause.\"\n\n\"Of course, Matriarch,\" Korbaz replied. \"I cannot thank you enough for this honor. Truth be told, as much as I have enjoyed serving you in the capacity of Ambassador, the desert calls to me. I hear her voice still, the promise of glory and riches.\"\n\n\"It's in your blood,\" the Matriarch said with an approving nod. \"I know that living amongst the aliens has been trying, being curtailed by their laws and customs. Having to suppress your nature, being forced to deny what makes you Borealan, enduring their insults and slights. It must have been maddening. But what made you the ideal candidate for that role, and why I have brought you here today, is your uncommon patience. You are a hunter, Admiral, a sandstalker. I know that you will not make rash decisions, you will not charge headlong into certain defeat. It is your nature to weigh every engagement carefully, but when battle is joined, be fierce. Show the interlopers no quarter.\"\n\n\"They shall see no pity from me,\" she snarled, baring her teeth in a grin. Her heart was beating so quickly, the anticipation rising up inside her belly, electrifying her. How long had it been since she had commanded a sandship, the wind filling its sails as it crested a dune, a juicy trading caravan in her sights? This would be a raid like no other, it would go down in history, there would be tapestries woven about her exploits. She felt like she was waking up after a long sleep, stretching her stiff limbs for the first time in eons.\n\n\"Vitza will remain by your side,\" the Matriarch added, gesturing to the meek male. \"He will be your Chief Engineer, for he alone understands the intricacies of these crawlers. Make it known amongst your crew that he carries my authority and that he is not to be questioned on matters of engines and steel.\"\n\n\"It shall be so.\"\n\n\"One more thing,\" the Matriarch said, leaning a little closer to Korbaz. \"I have a...special request to make of you.\"\n\n\"If it is within my power to give, then you shall have it,\" Korbaz replied without hesitation.\n\n\"I want a human,\" she whispered. \"Bring one back for me, a handsome one. Male or female, it matters not. I mean to keep it as a pet.\"\n\n\"A-as you wish, Matriarch,\" Korbaz stammered.\n\n\"I hear they make admirable bed warmers, and I grow weary of my consorts as of late.\"\n\nThe two shared a chuckle, the Matriarch placing an encouraging hand on Korbaz's shoulder as she rose to full height.\n\n\"Next time I see you, Admiral, I expect you to be returning through the East Gate victorious.\"\n\nCHAPTER 3: STEEL RAIN\n\nThe garage was a bustle of activity, the sounds of power tools, and the revving of engine checks echoing through the space. Everywhere Ben looked, engineers were rushing back and forth, inspecting the rows of vehicles as the deployment window neared. The tanks were stacked practically bumper to bumper, six long and five deep, leaving just enough room for the scurrying personnel to get between them so that they could be serviced. They were all anchored to yellow trolleys, which were sitting on a rail system that would deliver them to the stern gate for transfer, or to one of the five elevators towards the bow. There were five of the tiered garages on the Okinawa, stacked one on top of the other to maximize the available space, not unlike an automated parking lot that one might find in a city. With such an efficient system, it meant that they could cram a maximum of one hundred and fifty vehicles into the two hundred and fifty-meter assault carrier.\n\nThe ceiling scarcely cleared the MBTs by a foot, trailing cables and bunches of electrical wiring winding their way across the metal panels. Some of them hung loose like vines from a jungle canopy, while others were hooked up to the vehicles, charging their batteries or running diagnostics on their onboard computers. He watched as one of the remote turrets on top of the sloping hull of a nearby IFV rotated of its own accord. The dome-shaped camera array examined him with its reflective lenses, its simple machine intelligence making sure that he wasn't a threat.",
        "Ben proceeded along the walkway between the trolleys, the side skirts of the tanks rising up to either side of him like walls of composite armor. He dodged around an engineer who was inspecting the tracks of the vehicle to his right, a tablet computer held in his hand, his fingers tapping frantically at the touch screen. The crews were already beginning to line up beside their respective vehicles, standing in rows as they prepared to follow them to the dropships when their number was up. Vehicle crews wearing their pressure suits and helmets stood idle, chatting with one another as they adjusted their seals, and slotted on their helmets. There were Marines gearing up beside their troop transports, their signature black body armor reflecting the glow from the halogen lights above as they checked their weapons and loaded their rigs with fresh magazines.\n\nThey were almost all human, there were very few aliens in sight. Most of the vehicles hadn't been designed with Borealans or Krell in mind, they were too tall to fit inside them, but the IFVs were an exception. Ben could make out a few of the eight-foot felines a row over, their Shock Trooper gear similar to that of the Marines in color and design, the ceramic plating of their battlesuits the same shade of onyx. They sported wicked XMRs that were as long as a human was tall, the barrels lined with tightly-packed rows of magnetic rings, the bayonets making them look as much like spears as rifles.\n\nVehicle crews didn't wear the same armor as the Marines. Their gear consisted of a pressure suit that would keep them from decompressing in the event that their hull was breached on a planet with an atmosphere that didn't support human life, and a flak jacket to provide them some protection from spalling. It was little more than a black jumpsuit that was connected to the boots, gloves, and helmet via pressure seals. His visor was currently open, and his gloves were in his pocket, as there was still a little time before the drop.\n\nHe brought up the wrist guard on his forearm, tapping at the holographic display as he checked which vehicle he had been assigned to. Golf-six, a Timberwolf. He walked along the rows of trolleys, weaving past groups of Marines and engineers until he came across the right one.\n\nThe Timberwolf was a six-wheeled scout truck designed for a crew of three. It operated ahead of the main formation, scanning for hostiles and obstacles with the help of a small drone fleet and a suite of sensors. It had a sloping, angular hull designed to help deflect enemy fire, the composite plates currently sporting a desert camo paint job. At around twenty-five tons and seven meters long, it was on the smaller side, but that made it fast and maneuverable. There was no visible canopy or windshield, that would only serve to create a weak point. The crew were expected to use the arrays of cameras that were spaced out around the chassis instead, but Ben knew from experience that the armor plating above the bullbar could be raised to expose the viewport in an emergency.\n\nThe six wheels had a diameter of about five feet, and the tires were made from a honeycomb structure that eliminated the possibility of flats, the deep treads providing excellent traction even on soft surfaces. The vehicle had smoke launchers and an active protection system that would help to supplement its armor, as well as a remote-controlled thirty-millimeter railgun turret mounted on the top.\n\nWhat he wasn't expecting to see, however, was a little Valbaran standing on the roof beside the hatch. It was perched on the edge of the vehicle like a bird, peering down at him with a pair of striking, violet eyes. It had a basically humanoid body plan, its digitigrade legs ending in two-toed feet, its long tail held out straight behind it for balance. It was maybe four and a half feet tall, and it couldn't have weighed more than about sixty pounds. The pressure suit that it was wearing was similar to his own, black in color, electrical cables visible just beneath the lining as they wound their way across its surface like blood vessels. The form-fitting material gave him a good view of its figure. The alien had a feminine shape, with wide hips, powerful thighs for its stature, and a relatively short torso.\n\nIts helmet seemed to open up like a clamshell, leaving most of its face exposed, a pair of twin tubes dangling from the back of its head. Ben assumed that they were connected to an oxygen supply of some kind, but upon closer inspection, they were hanging free.\n\nIts face immediately made him think of a lizard. It had a long snout, and its glassy, olive-green skin was made up of a mosaic of fine scales. When it opened its mouth to speak, he saw that it was lined with rows of tiny, sharp teeth.\n\n\"You must be my commander,\" it said. Its voice was tinny, high-pitched, and it had a strange flanging quality that made it sound like two different people were speaking in harmony. \"My name's Mizi'pal'otl, equivalent rank of Private, First Class. Pleased to meet you, Sir. Female, by the way,\" she added. \"I know that humans have a hard time telling our genders apart.\"\n\n\"Hi,\" he replied sheepishly, giving the alien a wave. She returned it, mimicking the gesture with her three-fingered hand. \"Yeah, I'm Sergeant Rhodes. I've been assigned as Golf-six's commander.\"\n\n\"I'm the driver,\" she continued, Ben taking a step back as she leapt from the roof. She landed beside him effortlessly, she was so light on her feet, cocking her head curiously as she peered up at him. He noticed that there were light panels on her forearms, and on the two tubes that extended from her helmet, their colors shifting between green and yellow. \"Also a qualified engineer, if need be.\"\n\n\"You're a Valbaran, right?\" he asked. \"I've seen you guys around the mess. Don't you usually work in groups?\"\n\n\"Yup,\" she replied, reaching up and giving the vehicle's tire a tap with her fist. \"But a Timberwolf doesn't need six crew.\"\n\n\"I guess not,\" he chuckled. \"Sorry, Private...what was the name again?\"\n\n\"Just call me Mizi,\" she replied.\n\n\"Alright, Mizi. You prepped for the drop? Where's our third?\"\n\n\"Dunno,\" she replied with a shrug of her narrow shoulders. \"They'd better get here pretty soon, or we'll be short a gunner.\"\n\nShe spoke good English, though her accent was hard to place. It almost sounded like she was speaking with several accents, as if she was mimicking multiple different people as a parrot would.\n\nA klaxon rang out through the garage as red warning lights began to flash, a voice alerting them that they had five minutes until drop. Ben and Mizi began to secure their suits and close their helmets, as did all of the personnel around them. By the time the next klaxon sounded, they were ready, the stern gate beginning to open.\n\nIn front of the forward row of vehicles, a large shutter that spanned the length of the garage began to rise from the deck. As it receded into the ceiling, it revealed a row of vaguely square docking ports, each one covered by a shimmering, blue force field.\n\nTheir purpose was to allow the heavy dropships that were already docked to the exterior of the garages to load up their vehicles as quickly as possible using the rail system. Twenty-five of them could connect to the stern gate at once, meaning that in only six trips, the entire contents of the five garages could be unloaded onto the surface of a planet. Ben could see five of them right now, the rails on the floors of their cargo bays lining up perfectly with those on the assault carrier's deck. Each one was spacious enough to accommodate a vehicle up to the size of an MBT, and as many crew as could fit in an armored personnel carrier.\n\nAlthough he couldn't see it right now, he knew that the hull of the assault carrier beyond was starting to open like a giant maw. The entire aft section of the vessel could split apart like the jaws of a trap, exposing the tiered garages to space when open, and protecting the dropships from enemy fire when closed. Unlike most UNN vessels, the main engines were mounted in nacelles to the port and starboard, rather than directly at the stern.\n\nGolf-six was second in line, Ben watching as the IFV in front of them began to slide forward on its yellow trolley. It made its way through the flickering energy barrier and into the waiting bay of the dropship, slamming to a stop inside, and locking into place. Its crew jogged in after it, strapping into the crash couches that lined the walls, securing their harnesses tightly.\n\nThe same procedure was happening with the four other dropships that he could see, as well at the twenty that he couldn't. When they were all loaded up, the landers began to separate from the assault carrier, their ramps closing as they used their thrusters to get clear. They were bulky vessels, able to lift as much as a hundred tons under their own power, their hulls painted in the traditional ocean-grey of the Navy. They had upward-swept noses due to their tendency to enter the atmosphere belly-first, giving them the profile of an archaic landing craft from the twentieth century, the cockpit raised high on the chassis. Plumes of blue hydrogen flame spewed from their rear engines as they began to pull away, shrinking from the size of a building to the size of his fist in a few scant seconds. As they angled towards the planet below, he got a better look at their stubby wings and the four downward-facing boosters that helped them to land and take off with a full payload.\n\nGolf-six slid forwards on its trolley, locking into position in front of the docking port. Ben and Mizi jogged along after it, stopping just short of the translucent force field. It would keep in the atmosphere, but allow solid objects to pass through it, meaning that one could potentially trip and fall through the insubstantial barrier into the vacuum of space.\n\nHis heart raced as he waited for the dropships to return, and after maybe fifteen minutes, he was rewarded with the sight of one of the bulky vessels lining up to dock. The thrusters flared as the pilot carefully lined up his cargo bay, mating it to the assault carrier and blocking out the twinkling stars beyond. Their vehicle rolled forward on its rail, slipping past the force field and into the bay, slamming into place. He and Mizi followed after it, Ben feeling the hairs on his arms and neck stand on end as he transitioned through the barrier of energy. All sound was silenced, his own muffled breathing all that he could hear inside his helmet as he stepped into the depressurized lander.\n\nThe cargo bay looked so large with just the Timberwolf inside it, it was so much smaller and lighter than the tanks. The two crewmen sat side by side as they fastened their harnesses, Ben realizing that his hands were trembling as he secured the buckle about his chest. The drop was his least favorite part of the process.\n\nHe glanced to his left to check that Mizi was strapped in, noting that she had slipped her long tail through the hole that was present in all of the seats. They allowed species with tails to sit more comfortably, and it was no inconvenience to a human. She was so short that her feet were dangling off the floor like a child sitting in a highchair. How was she even going to reach the pedals once they were on the ground?\n\nA rumble passed through the deck as the dropship uncoupled from the garage, the Timberwolf rocking on its trolley. Ben looked over Mizi's head as he watched the cargo bay door begin to close, catching a glance at the five rows of five docking ports as they shrank down to the size of pennies. Once it was sealed, there was a hiss as the bay was pressurized, the clanking and rumbling sounds of the lander slowly returning as though someone was pulling wads of cotton from his ears.\n\nHis stomach lurched as he felt the ship began to fall, his fingers digging into the padded armrests of his crash couch as he was buffeted and shaken. They had hit the planet's atmosphere, he could feel the turbulence, he could see the bright flames erupting beneath the vessel's belly in his mind's eye. These landers were not graceful, they were plummeting towards the ground like a brick, the stresses making the structure of the thing creak worryingly. Ben kept reminding himself that this was what it was designed for, that it had performed this same maneuver a thousand times, but he couldn't shake the feeling that it was going to crater into the ground like an asteroid.\n\nG-forces tore at him as the downward-facing engines belched plumes of fire, slowing their descent as they cleared the upper atmosphere. It felt like there was an elephant standing on his head, like he was being pressed into the deck by a giant rolling pin. He focused on breathing, feeling his pressure suit constrict around his limbs in an attempt to keep his blood where it was supposed to be.\n\nFinally, the feeling of being crushed was alleviated, the dropship emitting a few more jarring bursts from its engines before he felt it bounce on its landing gear. He allowed himself a sigh of relief, glancing over at Mizi to see that she was already raising the visor on her helmet. Ben did the same, the two sharing a knowing glance for a moment.\n\n\"First time?\" he panted.\n\n\"First time in one of these,\" she replied, pausing to swallow. \"It's a little less...graceful than a troop transport.\"\n\n\"Stay seated while the vehicle deploys,\" he warned, \"you don't want it clipping you on its way out.\"\n\nBright sunlight flooded into the bay as the ramp began to lower, a cloud of dust kicking into the air as it hit the ground. The scene beyond was that of a desert, a flat plain of sand with what looked like a wall of greenery rising up in the distance, a forest that must be miles away. He could make out a few more vehicles, their crews milling about nearby.\n\nThe locks on the Timberwolf's trolley released, sending it sliding down the rails and onto the planet's surface, skidding for a couple of feet before coming to a stop. Now that the vehicle was clear, Ben and Mizi unfastened their harnesses, following it out of the bay. As soon as Ben's boot touched the sand, he buckled, grunting in alarm as the planet's gravity gripped him. The dropship had an AG field set to Earth-standard, but Borealan gravity was thirty-percent higher. It felt like someone had just dropped a barbell across his shoulders. Mizi had a similar reaction as she stepped down from the ramp, her bobbing gait slowing, her tail drooping.\n\nThey stumbled over to their vehicle, Ben leaning against its chassis as though that might somehow alleviate his discomfort. The heat was incredible, weighing down on him almost as much as the gravity. He shielded his eyes as he peered up at the twin suns. The primary was a huge, white sphere of bright light, while the yellow secondary was more akin to Earth's sun.\n\nThe staging point seemed to be in the middle of a desert. The immediate area was sandy scrubland, completely flat save for a few clumps of alien plants that were clinging to life here and there. To his right was the wall of forest, it looked like a tropical jungle, extending from horizon to horizon. To his left, the desert dunes rose up like mountains in the distance, contrasting sharply with the azure sky. All around him, the first two waves of vehicles were gearing up, the roar of their engines carrying across the flatland.\n\n\"Where is our third?\" Mizi asked anxiously, crawling her way up onto the roof of the Timberwolf with some difficulty. She certainly seemed to like being in high places. The Valbaran peered about frantically, searching for their missing gunner, the sun reflecting off her smooth scales as her head swiveled on her flexible neck.\n\n\"Maybe they're supposed to meet us down here?\" Ben suggested with a shrug.\n\n\"But the mission briefing said that we would have three crew, and the manual lists three crew as being necessary for the Timberwolf's operation,\" Mizi insisted as she wrung her gloved hands. \"A commander, a driver, and a gunner. Where is our gunner? This was not what was planned.\"\n\n\"Don't worry about it, Private,\" he replied in an attempt to calm the agitated creature. He noted that the light panels on her forearms had turned purple, did they indicate her emotional state? \"If one doesn't turn up, I'll go find someone to complain to. It's not your responsibility. Now, let's get this Wolf running.\"\n\n\"System check!\" she declared, opening the hatch on the roof and dropping down inside. After a moment, the headlights lit up, the vehicle rumbling to life. Ben followed behind as she drove it down off the trolley and clear of the dropship, its large tires leaving furrows in the sand. It rolled to a stop, the top hatch opening again, her little head popping out. \"All systems green, Commander!\"\n\n\"That was quick,\" he replied skeptically.\n\n\"I have memorized the pre-operation checklist,\" she replied, \"all systems are within tolerances.\"\n\n\"Do you have a lot of hands-on experience with Timberwolfs?\"\n\n\"No,\" she said, shaking her head. \"But I read the manual.\"\n\n\"Alright,\" he muttered. At least she was qualified.\n\nBehind them, the dropship began to lift off the ground, its four ventral engines sending a cloud of sand swirling as they fired. Ben hastily closed his visor as the air was filled with dust, looking up to watch it accelerate into the blue sky once it was clear, several other landers following behind it. There was pretty much constant traffic, a couple more dropships descending on plumes of bright flame as they decelerated, their bellies charred black by the heat of reentry.\n\nHe pulled up the display on his wrist computer, checking the local ad-hoc network. Mizi wasn't entirely overreacting. Where the hell was their gunner? He put a call through to his Lieutenant, keeping his visor closed so that he could hear himself think over the din of two dozen Kodiaks revving their engines. After being put on hold for a minute, he was put through to the platoon commander.\n\n\"Lieutenant? This is Sergeant Rhodes, commanding Golf-six. We're short a gunner getting off the boat. Any idea where they're at?\"\n\n\"Hang tight, Sergeant,\" the Lieutenant replied. \"They're en route.\"\n\n\"Hang tight?\" Ben muttered to himself after closing the line, gazing around at his barren surroundings. \"Where the hell would I go?\"\n\nHe rapped his knuckles on the Timberwolf's hull, the little Valbaran popping out again like a scaly gopher.\n\n\"Gunner's on the way,\" he said, which seemed to put her more at ease. \"Let's sit tight until then.\"\n\nHe tried to climb up onto the hull of the scout vehicle, but the sun had already heated it to the point that it was hot to the touch, so he decided to sit in the shade that it created instead. So, this was Borealis? It was hot, desolate, the gravity already making the muscles in his legs burn like he had just run a two-K. He was starting to get a better understanding of why the Borealans were all so ripped. They didn't need to be gym rats, just existing here was workout enough to make most Marines look scrawny by comparison.\n\nThere was a banging sound as the hatch swung open, then the Valbaran dropped down beside him, stumbling as she landed in the sand. She was decidedly less graceful under these conditions, and he couldn't blame her. She didn't sit, seeming to lock the joints in her digitigrade legs to take a load off instead, letting her arms hang at her sides.\n\n\"I think this planet has one too many suns,\" she grumbled.\n\n\"I hear that,\" Ben chuckled, wiping his brow beneath his helmet. Mizi watched him curiously, and he gave her a sideways glance. \"What's wrong?\"\n\n\"Nothing, I just...Valbarans don't sweat. It's strange to see.\"\n\n\"How the hell are you going to last down here if you don't sweat?\" he asked, cocking an eyebrow at her.\n\n\"My suit keeps me moist,\" she explained. \"As long as the battery bank has a charge, the condensers will stop me from drying out. It can't keep me cool in this heat, unfortunately, but the Timberwolf has climate control. We like it a little hotter than your kind do, but also a lot more humid than this. I bet those jungles are lovely,\" she sighed as she peered at the wall of greenery on the horizon."
    ],
    "authorname": "Snekguy",
    "tags": [
        "aliens",
        "group sex",
        "harem",
        "hetero",
        "large breasts",
        "long tongue",
        "muscle",
        "oral",
        "size difference",
        "war"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-rask-rebellion"
}