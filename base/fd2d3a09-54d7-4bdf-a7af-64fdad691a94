{
    "title": "David Number Four",
    "pages": [
        "Sydney's trip to Amsterdam was exactly what she wanted it to be; a little alone time to wander around a new city, relax, and let loose for a few days. She biked everywhere, enjoyed the cafes, met some locals in Vondelpark, and saw as many Van Goghs as she could. All up and down the canals, flowers were blooming beneath rows of ornate, narrow houses.\n\nOf course, she also devoted plenty of time to a wide-eyed exploration of the red light district, eager to engage an intense curiosity with the comfortable anonymity of a foreign traveler.\n\nIn particular, Sydney spent a fair amount of time exploring a small sex shop halfway down a narrow alleyway that looked rather mysterious, like something out of a movie. In the front of the store she found the expected array of merchandise: lingerie, plugs, harnesses, instructional books and DVDs, a wide variety of dildos and vibrators, cock rings, edible panties, lube, massage oils, and a host of other things that she allowed herself to relish in the sheer scandal of. However, what interested her the most was a section toward the back of the store simply labeled, \"Curios.\"\n\nIn this section of the store, Sydney found herself surrounded by an assortment of vintage fetish objects, x-rated antiques, and archaic examples of early pornography. She found herself drawn to a large wooden box with a tarnished iron crank and a peephole. Sydney looked inside and began to turn the crank, discovering a primitive black and white movie that played on a loop.\n\nIt featured a young woman being pursued by a man, who turned him away. The man looked heartbroken, then had an idea, illustrating this fact with an upward pointed finger. In the next shot, he popped out from behind a curtain with his hands on his hips, completely nude and sporting a comically resplendent erection. The woman threw her arms up and appeared shocked.\n\n\"Where are your clothes?\" a caption read. She gave a dramatic look downward before his erect penis filled the screen in closeup.\n\nThe woman laughed as the man chased her. Their garish makeup and erratic movements made the whole thing seem surreal and wildly antiquated. The woman was finally captured and her clothes flew off as if by some unseen force. She swooned like every actress of the silver screen seemed to do in those days. Moments later they were shown in bed, full of wanton excitement, her legs flung apart as the man swung his hips forward and back; their shockingly hairy bodies moving in a strange, exaggerated manner, almost like mechanical dolls.\n\nThe object, although outdated and somewhat creepy, seemed nevertheless fascinating to her, as did all the curios she discovered there. They revealed a world of desires and carnal lust stretching back for hundreds of years, deliciously disturbing the image of times she had always thought of as more innocent than modern days.\n\nSydney eventually approached a large glass case filled with a hodgepodge of erotic baubles. However, one in particular, arrested her full attention. In the center of the case stood a vertical dildo, as magnificent and extravagant in form as it was priced. Sydney found herself strangely aroused by its striking robustness and girth. She scrutinized the small details; a thick vein, the generous ridge of its cockhead, the plump, round balls resting at its base. As far as erect penises go, she found it perhaps the most sensationally crafted specimen she'd ever seen.\n\nA gaunt, tattooed woman with intense eyes and wild black hair walked by. Sydney recognized her as the shop owner who briefly welcomed her when she entered.\n\n\"Excuse me, what's this?\" Sydney asked, mildly self-conscious about her display of interest.\n\n\"Oh!\" the woman laughed. \"I see that you're feasting your eyes upon greatness. Literally.\"\n\n\"Huh?\"\n\n\"You happen to be admiring the cock belonging to Alexander the Great himself.\"\n\n\"Seriously?!\" Sydney replied, turning back to give it a second look, given this new knowledge. \"Aren't military commanders famously supposed to be... um... making up for certain shortcomings?\"\n\nThe woman laughed. \"Apparently he was no Napoleon! I purchased this copy from a collector in Berlin. He claimed to have received it as a gift from a friend working at the Kunstmuseum, which has the original.\"\n\n\"How do you know if it's real?\"\n\n\"Well, the original phallus is a beautiful piece, carved from solid marble. I wasn't previously aware of its existence but it seems there are historic references to its creation. It's not available for public viewing. However, I was able to request a private viewing at the museum and determined that this is, in fact, an authentic reproduction. I believe the collector's friend made exactly ten copies, so this piece is extremely rare.\"\n\n\"Well that explains the price,\" Sydney mused. \"Is it... used?\"\n\nThe woman laughed again. \"Sadly, no. Not by me, at least. I would like to claim that I try out all our merchandise first, but... Alas, this copy may very well still be a virgin... much unlike its papa!\" She wandered off, still chuckling to herself.\n\n\"So... you belonged to Alexander the Great, did you?\" Sydney whispered to herself. She continued to gaze at the phallic object in wonder, thinking about the stories it might tell if it could only talk. She thought of the legendary man it once belonged to, having built one of the largest empires of the ancient world by the age of just thirty. She found herself even wondering what it would feel like inside her...\n\nSydney's fascination over this object continued to take hold and grow throughout the remainder of that day. When she returned to the hostel it continued to linger in her mind, haunting her with the idea of using a custom-molded dildo from a real person; someone with a distinct history and a precise personality.\n\nAfter waving goodbye to a perfectly friendly roommate from Prague the following morning, Sydney nevertheless expressed relief at having the room to herself. She guided her hand down to the top of her panties and slipped it inside. Sydney found herself wet and highly sensitive, the result of an expected lust fueled by visions of dildos fashioned from the bodies of all the desirable guys she knew. She quickly wrestled off her underwear and parted her hips.\n\nAs her head sunk back into the pillow she slipped a couple fingers inside, imagining one sturdy cock after the other, filling her from the inside and somehow communicating the individual characteristics of its owner. Matt's from the gym was muscular and strong. Tyler, her coworker, had one that was crafty and full of playfulness. Giles, the bartender and British expat she'd met the previous night, possessed the manifestation of masculine refinement and polish. Suppose she owned reproductions from all their bodies, able to enjoy them at any time, without the pressure of a pesky relationship?\n\nSydney soon found herself using the pillow to muffle her screams, delighted as she was to climax at the birth of a wild new fantasy which she felt taking root deep within the erotic recesses of her mind.\n\nHowever, like all the best fantasies, it held the seed of real possibilities.\n\n***\n\nThe one thing that prevented Sydney's long journey home from being a bittersweet one was the fact that she was about to meet with David to tell him all the details about her trip. Or, at least the ones she could share openly...\n\nSydney and David had grown up together since they were born. Their families were friends due to the fact that their mothers were college roommates. As Sydney and David had always been inseparable, the running joke in her family was that they would inevitably get married to each other one day and have lots of babies together. This joke caused Sydney a lot of embarrassment at an early age but privately she had always taken it as fact- and certainly not one that she disliked.\n\nThe reality was, David had always tugged at her heartstrings like no other guy ever had. As they grew older, they began to see themselves as best friends. They shared mutual interests, compared notes regularly on life experiences, and knew most of each other's deepest secrets. Even when David had girlfriends, Sydney felt that she was somehow closer to him than they ever were.\n\nIt was, however, not easy. Despite her family's prediction about their relationship, she never told David how she really felt, nor did he reveal any feelings to her beyond their deep friendship. In high school, when they turned eighteen together, she had imagined that they would consecrate the event by becoming adults together, doing certain things that only adults did. However, her persistent crush became the source of great sadness the day he acquired a date to the prom... and it was not her. He had asked Jessica Wilson and later she had reluctantly accepted the invitation of Brian Mulroney.\n\nIt wasn't that Brian was a bad guy, or unattractive. Sydney and Brian lost their virginity together that night but she was cruelly aware that she lost it with the wrong person; the same Brian Mulroney who then went off to college and that she had spoken with exactly once since graduation. Later, crushingly, she found out that David had lost his virginity to Jessica that night. Sydney had exactly one chance for a dream to come true and she missed it.\n\nYears later, this endless circling of their destiny continued.\n\n\"David! What's up!?\" Sydney exclaimed, finding him sitting at a high top at Martin's Bar and Grill where they often liked to meet.\n\n\"Hey! There you are!\" he replied, abandoning his seat to give her a warm hug.\n\n\"I have so much to tell you!\" she laughed.\n\n\"I'll bet! I've been thinking about you at work...\" He chuckled. \"Wishing that I could be off on an adventure, too.\"\n\n\"Oh my god, it was so much fun. I wish I could move there and smoke pot and ride my bike all day.\"\n\nDavid laughed. \"You mean like we did the weekend before you left?\"\n\nSydney snorted. \"I guess that's true...\"\n\nShe began to narrate the details of her trip, from start to finish. David listened intently, smiling happily and occasionally commenting on her experiences. She even dared to tell him about her trip through the red light district. Sydney felt that strange, tingly feeling she always got when risqu\u00e9 subjects came up around her best friend.\n\nThese were the same feelings that had haunted her relentlessly in the run-up to that fateful prom. At an age when her hormones were raging, she had felt guilty about how much time she spent masturbating to the thought of them spending casual time together in the nude, sunbathing in the backyard, skinny dipping, and other activities, endlessly evoking the possibilities of what his body might look like. This was the product of one of their favorite things to do together, enjoy his family's backyard pool, something they did regularly in that summer after senior year.\n\nAt that age, her fantasies began to develop into full-on erotic scenarios. A recurring daydream involved David inviting her back to his room after swimming, something that he often did in reality, albeit innocently. Having sufficiently dried off, she imagined them sitting on his bed watching videos on his laptop, still in their swimsuits. She would notice something was gnawing at him and would ask if he wanted to talk. David would reluctantly admit that he was having trouble hanging out with her on his bed.\n\n\"You might be my best friend since childhood, but you're really beautiful,\" he would explain, awkwardly. She would blush and reassure him that she always thought he was good-looking too. Sydney would look down and realize his swimsuit was starting to tent. He would become embarrassed and try to hide it without her noticing.\n\nShe would show sympathy, saying with a degree of boldness that only existed in fantasy, \"That's okay, don't be embarrassed. I understand.\" He would sheepishly relax and allow it to reach a full erection beneath his clothes. They'd go back to watching videos but he would continue to shift about uncontrollably. Sydney would pause a video, look at him squarely in the eyes, and say, \"Do you want to just take them off? I don't mind, like, seeing you in that way, or anything.\"\n\nHer heart would start racing as she saw her best friend growing tense, nervous, and aroused. \"Oh... okay...\" he would mumble. Then he would become to slowly slide down his swimsuit. Sydney's eyes would grow wide as his erection would spring free, bobbing stiffly in the air.\n\n\"You have a really nice penis...\" she would say, gazing at it and wanting to offer him a compliment, overwhelmed with the feelings of anxious infatuation swirling inside her, but finding it difficult and awkward to talk about his body.\n\nSydney imagined their eyes would meet. They'd lean in toward each other, neither sure about the other's reception to their actions until finally, they would kiss. In her fantasy, they would kiss not in a casual way, but like lovers. She would lower down toward his lap, reach for his sturdy and desperate manhood, and then guide her best friend's erect penis into her mouth. As she offered him pleasure the way she had learned about from her friends, their passions would ignite. He would rush to pull off her bikini and they would quickly curl up together, cocooned in his soft sheets, their warm bodies snuggled closely, still mildly damp and lightly scented with chlorine.\n\nShe would feel David inserting his cock smoothly inside her body as they each found themselves lost in the other's loving gaze. Soon she would feel his body moving desperately against hers, grasping excitedly at her spritely breasts with a mesmerized look on his face, much like her unwanted prom date had done. They would soon be laughing together, fueled by their mutual pleasure, each of them bewildered with excitement over the unexpected thrill of having sex together after so many years of secret yearning.\n\nTo this day, Sydney returned to this fantasy, making herself come faster and harder than any other fantasy she had. It became a frequent necessity, in fact, to relieve her during times of greatest need. It became her deepest secret. The one she could never share with him.\n\n\"Is something the matter?\" David asked, finding Sydney briefly lost in his eyes at the conclusion of her travel stories.\n\n\"Oh! No, just hungry. What are you getting?\"\n\nDavid looked down at his menu. \"Just the buffalo ones I think. Spicy, obviously.\"\n\n\"I think I'll get the jerk sauce today, actually,\" Sydney replied.\n\nThey talked late into the evening over beers. She learned everything that had happened to him while she was away. Sydney felt herself relax into the comfortable, detached state that alcohol afforded her. She enjoyed the little bubble that formed around them as they talked. Nothing else needed to exist at that moment.\n\nGone was the reality where they were not together... Gone was the reality where David had a girlfriend.\n\n***\n\nSydney slipped back into the daily grind as the last remnants of her lingering memories from Amsterdam began to recede into the background of her consciousness. The one thing that persisted in bubbling up, however, was that fantasy she had about the dildo. She dwelt on how the task of taking a cast from a real man's body would be such an erotic encounter and how that experience could be made to last in the form of the object that was produced, as it somehow represented the person it was modeled after.\n\nThis fantasy recurred in her head over and over, sometimes at unexpected times; at the grocery store, in the middle of a concert, while laying on the couch watching a cooking show. It haunted her until she finally relented, realizing that it would not be resolved until she played along- until she gave in and engaged it somehow.\n\nSydney took a sculpture class on the weekends, learning how to mold objects herself. She took a keen interest in using silicone, although she aimed to keep secret her reasons for expressing an interest in this material. The teacher obliged and gave her the relevant know-how. At first, the class was merely a superficial means to give life to the fantasy in her head, allowing her to fully imagine what the process would be like to make a custom dildo out of a man's fully-erect penis. However, upon learning that the process was rather straightforward and came natural to her, she began to suppose it could be a real hobby.\n\nWhat if, she wondered, it became an actual business venture? It wasn't such a far-fetched idea, she ultimately reasoned.\n\nHer private fantasy was now firmly in the driver's seat, and she, merely along for the ride. It wasn't long before Sydney rented a small studio space downtown where numerous decrepit vacancies made for many inexpensive opportunities. Setting no expectations whatsoever, she tried it out, unsure and uneasy about what might come of the experiment. Too embarrassed to advertise, she relied solely on walk-ins amused by a sign placed outside. Her visitors were mostly groups of young men who came in to ask lots of lewd questions and laugh. None took it seriously and all of them soon walked out in hysterics, joking about what it would be like to have their cocks cast and molded into a sex toy.\n\nThat is, until one day a man finally took her seriously and gave it a try.\n\nHe was shy, nervous, and quite possibly in it for a cheap sexual thrill. Still, she did her best to act professionally. She led him into the back and asked him to undress from the waist down. The process was painfully awkward. In consideration of her client, she left the room after asking him to make himself erect, then returned to find him holding his erection and breathing rapidly. She approached this deer-in-headlights, finding his growing anxiety a threat to maintaining his state of arousal, and had to ask him to stroke himself a few times, making them both further uncomfortable.\n\nShe had worked quickly, clumsily applying the materials involved in the process and doing a half-assed job borne out of sheer anxiety and distraction. Only on the following day was Sydney finally able to suppress her cringing and look upon that experience in a way that permitted any amount of erotic enjoyment about seeing a stranger's arousal.\n\nIt gave her a strange power. There she had been seated, literally holding this man's erotic destiny in the palms of her hands. She had possessed his sexuality. Taken control of it. Fashioned it into something else in service of her own whims and the whims of other women.\n\nSydney wised up overnight and hired an assistant; a petite, bubbly Latina named Jacinta who was full of enthusiasm and showered Sydney with praise over how bold and entrepreneurial she was for daring to start such a business. Together they put their heads together and sorted out a new system with greater efficiency and designed around the comfort of their customers. They gave their product a humorous name: Replicocks, and advertised them as \"fine, lifelike dildos molded from the bodies of real men.\" In addition to the whimsical name, the new look, fabrication experience, and beautiful packaging finally made the business feel like a professional boutique rather than a joke.\n\nFrom the very first day after the retooling, it was a complete transformation. Business immediately began to pick up. Replicocks were mentioned on a local morning radio show. Men began to amble in, as nervous as before but were quickly reassured by the spa-like atmosphere. Erotic but highly tasteful prints hung on the wall; black and white abstract close-ups depicting sensual landscapes of naked flesh. Underneath were a series of rectangular boxes with little bows and an information tag, the product of an intense reworking of the packaging used to deliver the finished product. A small leather couch ran along one side of the room behind a coffee table containing a thin but slickly designed catalog of dildos available for purchase which, admittedly, was cobbled together from the very few customers Sydney had managed to acquire so far.",
        "Sydney collapsed onto the couch after the transformation finally began to sink in. She surveyed the results of her hard work, as astonished and scandalized by her very own idea as she had been the day she thought of it, but perhaps well on her way to finally being able to tell herself that her venture was as legit as it was deeply titillating.\n\n***\n\nA week after the grand reopening, Jacinta sat at the front desk, taut, excited, and ready for a new day with a new set of curious men. Now and then they trickled in. The occasional woman popped in as well to flip through the catalog, some of them ordering a dildo, although the majority of female customers were ordering online under a veil of secrecy and curiosity.\n\nJacinta heard a jingle and looked up as an attractive young man opened the door and entered, looking momentarily startled by his surroundings. He watched Jacinta nervously as he approached the desk. Finding him gorgeous, her interest was immediately piqued. The man was in good shape, clean cut, with dark, mysterious eyes and a minuscule dimple that briefly appeared and then vanished as he struggled to manage a nervous smile.\n\n\"Hi,\" he said, briefly rubbing his palms on his pants.\n\n\"Hi there!\" exclaimed Jacinta. She sat up straight, thrusting her chest out and batting her eyes.\n\n\"I'd... uh... like to know about getting a custom... uh... dildo made,\" he explained quietly.\n\n\"Sure! Here's the price list,\" she said, pushing a laminated card forward toward him, which he began to study. \"The process is really simple. There's a quick form to fill out and then the casting process is done in the back by our artist in a comfortable and private environment.\"\n\n\"I'd just like this first option, the basic one,\" he mumbled.\n\n\"Okay, great!\" Jacinta replied enthusiastically. She hid her jealousy and frustration well. Here was this gorgeous bombshell of a man standing before her, agreeing to drop his pants, and it was her job to hand the experience over to someone else. It had already begun to drive her insane, sitting there alone with her curiosity at the front desk, thinking about what was going on behind her while she sat there fiddling with her thumbs.\n\nJacinta placed a clipboard on the desk in front of the customer, shaking off her envy and deploying her spirited personality to calm his nerves and take him through how the process works.\n\n\"So we'll start by having you fill out this form. Fill in your first name here. We use that to label the finished product molded from your body. For privacy purposes, we don't ask for or file your last name, but we do need the rest of the contact info for internal use so we can reach you when it's finished and available for in-store pick-up.\"\n\n\"Okay,\" the man said.\n\n\"After filling in the rest of your contact information, you'll see a box down below. Please read the terms and conditions carefully. If you check that off, you are agreeing to have your mold placed in our archives so that your dildo can be added to our catalog. This allows women to browse a variety of toys cast from past male customers and purchase one for themselves.\"\n\nHe nodded.\n\n\"If you agree to this, then we ask you to list your top five interests, your dream job, what kind of pet you have if you have one, and what you typically like to do on a first date. Along with your first name, we use this information to create a little information card to go along with it. This gives your dildo a personality and helps our female customers get a sense of who the appendage belongs to. It makes using the dildo more fun and realistic for her!\"\n\nJacinta grins at the man. He gives an embarrassed smile and nods again.\n\n\"You'll also be able to select a color for your finished product. We have a variety of skin tones as well as a rainbow of fun colors. We're currently working on making a harness attachment and a vibrating insert, so make sure to check the website about new features in the future.\"\n\nJacinta handed the clipboard to the customer and pointed to the couch. \"You can have a seat there and fill this out.\" He took a seat and began filling out the form.\n\nShe waited patiently, sneaking glances at the man and trying to determine if he was checking the box. When he finished, he approached the front desk and handed the completed form back to Jacinta. She accepted it happily and was thrilled to see that he'd checked the box and filled everything in.\n\n\"Gary,\" she thought. \"You don't look like a Gary...\" Jacinta smirked and rose from her seat, having imagined him as an Ethan, or maybe a Jackson.\n\nJacinta began to ring him up. \"After processing your payment, I will lead you into the back room. There's no one being cast right now,\" she said as he swiped his card. \"Okay, let's go!\" she exclaimed, once the transaction was complete.\n\nGary followed Jacinta down a narrow hallway and turned left into a small room. The light was dim. Soft music was being piped in. There was a tall plant in the corner and some scented candles placed here and there, taking inspiration from the local massage businesses.\n\n\"You'll have this room to yourself, in complete privacy,\" Jacinta explained. \"The whole process can take anywhere from thirty to forty-five minutes. Once I leave, you can lock the door and undress.\" She pointed to a chair that was slightly reclined. \"Have a seat on the chair. It has a disposable paper covering, so it's completely sanitary. There are also disposable packets of lubricant that you are free to use. Also, this remote controls the screen on the wall which you can use to flip through several adult videos.\"\n\nGary looked up at the screen with surprise. Jacinta felt a tingle. She always got excited at this part and relished the looks on the customer's faces when she gave them further instruction.\n\n\"They are arranged by category; male-female, male-on-male, lesbian, et cetera, so just pick whichever one floats your boat. The important thing is that you become fully aroused in order for the artist to take a cast of your erect penis.\"\n\nGary began to turn slightly red.\n\nJacinta continued, \"We ask that you take no more than five or ten minutes engaged in self-stimulation so that there's sufficient time for your cast to be applied and the mold to properly set within your service window. When you're ready, you can move to the table.\" She pointed to a long, cushioned table on the other side of the room. Half of the table fit through an opening in the wall.\n\n\"Lie down on your back so that your penis is angled upward, and then shift forward placing your lower body through the opening so that the artist on the other side can begin working. She won't be able to see you, nor you her, so just relax and let her do her job. If you're worried about not being able to sustain an erection, you may certainly leave one of the videos running.\"\n\nGary continued to nod nervously at everything she said.\n\n\"When she's done, she'll give you a tap on the leg. There is a small sink you can use to clean off. Then get dressed and head back out to the front desk. In three to five business days, you can come back and pick up the perfect gift for your girlfriend... or boyfriend!\"\n\n\"Okay, thank you,\" Gary replied, his voice breaking and triggering more embarrassment.\n\nJacinta skipped out of the room and closed the door behind her, then made her way back to the desk. She sat there, sighing. After a few moments, she got up and tiptoed back down the hallway. She put her ear to the door.\n\nJacinta had skimmed through everyone one of the videos that were available to watch. The one involving the man and woman was her favorite; wildly erotic and sensual, although she thought about the man-on-man video the most, discovering it to be startlingly arousing and fascinating. She was familiar enough with all of them by now that she could hear which one each customer chose.\n\nListening through the door, Jacinta heard the distinct sound of female voices. \"Okay, good. He's not gay,\" she said to herself, imagining that he might have found her attractive and potential date material, perhaps even remembering her after he moved on from whomever his dildo was being made for.\n\nShe could see the video he was watching clearly in her head. Those two young women sunbathing by the pool, best friends and apparently oblivious of their sexual orientation as they talked and laughed together. One of them joked about sunbathing topless. The other would be shocked by her friend's boldness and hesitantly join in. After a noticeable gap in explanatory narrative, they were somehow excitedly tugging off the remainder of each other's bikinis. Soon they were squealing and caressing each other's breasts, suckling at their nipples, then thrusting open each other's legs and munching happily at each other's crotches.\n\nJacinta smiled and imagined Gary's mind blown by that silliness. She could see him there, laying back in the chair, his massive, distended cock sprouting triumphantly from between his muscular legs. She imagined his tight grip sailing up and down the full length of his thick shaft. She felt dizzy with the vision of his gorgeous body and his intense arousal flooding her head.\n\nOverwhelmed, she hurried back to her seat. Her face felt hot. Her own arousal began to fade, making way for irritation and sexual frustration. She sat there quietly watching the slow passing of cars out on the street and passersby arguing with one another.\n\nSydney, on the other hand, was able to sustain her giddiness about coming to work through the entire day. She sat in the studio, patiently awaiting one fascinating experience after another. One by one, anonymous males would insert their naked, lower halves through the opening. No matter how many times it happened, she still suffered an erotic shock and thrill each time she saw their long, muscular legs slide through, followed by a gigantic, bobbing erection that launched skyward from his pelvis.\n\nAfter swinging about erratically, the man would settle into place, allowing his exposed, erect cock to come to a stand-still and remain there sticking proudly upward. She wanted to laugh every time. A few of them weren't so attractive, but many of them were adorable. She liked to give each penis a name while she worked, infusing them with a personality that arose from their subtle physical characteristics.\n\nShe would put on a pair of disposable gloves and begin to moisten the customer's penis with a solution that prepared it for the casting process. Some were circumcised. Some were uncircumcised. There were big ones, small ones. Some bent upward, others were ramrod straight, while an occasional penis curved a little to the left or right.\n\nSydney was also fascinated by the varieties of grooming styles her customers had. Some men had big bushy masses of pubic hair. Other men were neatly trimmed. Still others were fully shaven or waxed until smooth. It was a thrill to touch each unique penis and pair of testicles, examining them as she worked, handling them like priceless artifacts in a museum, just like the magnificent cock of Alexander the Great which had inspired the entire venture.\n\nGiven the more comfortable setup, her clients rarely had difficulty remaining erect. On the rare occasion where they began to go soft, Sydney devised an appropriately subtle way to enhance the sensation of having a thick paste slathered all over their genitals, ensuring that they were soon revitalized and twitching back to life with even more vigor than before but without letting it develop into a full-blown hand job.\n\nSecretly, Sydney often found herself becoming wet while the equally intense arousal of her clients worked its way into her consciousness. She could distinctly feel the dull throbbing of their cocks as she worked. She could sometimes even smell their arousal as she received the occasional whiff of their masculine musk which emanated from their erotically-charged bodies. There were times Sydney became frustrated not being able to see the customers' faces, but there was a tradeoff. She knew there was no way she could study the intricate details of her favorite cocks if they could see what she was doing.\n\nIn fact, Sydney found that she began to need deliberate time to clear her head. She had always thought of herself as a sexual person but the constant stimulation she received it work left her, at times, unable to avoid dwelling idly on the titillating experiences at work and imagining the lives behind the bodies she encountered. All of Sydney's buttons were engaged, at all times, lit up like a fire and making her a slave to a growing sexual appetite.\n\n***\n\nJacinta often asked about Sydney's experience during breaks at work, sitting there resting her head in her hands, captivated by her boss' somewhat censored descriptions, utterly fascinated and teeming with jealousy. She did just this, days later, recalling the customer named Gary which she had confessed to Sydney about drooling over.\n\n\"You know, his is finished,\" Sydney said casually.\n\n\"It is?!\" Jacinta explained, becoming suddenly alert.\n\n\"Yeah. I photographed it yesterday. It's right there in that stack.\"\n\nJacinta quickly shuffled through a small stack of cards being prepared for the catalog. One phallus after the next passed beneath her eyes until she came to a dildo named \"Gary.\"\n\n\"Oh my god!\" Jacinta squealed. \"Wow... So this is Gary's penis! He's biiiig. Damn!\" She cocked her head at it, then rested the photo in her hands wistfully, gazing in wonder and sadness at it.\n\nSydney laughed. \"You look like my dog when he peeks under the couch and can't reach his squeaky toy.\"\n\nJacinta giggled. \"You have to make me one- can I have a Gary?!\"\n\n\"Ha! Sure, I can make you one.\"\n\n\"Yes!\" Jacinta exclaimed. \"I'm so excited! Give me a heads up, then. I'll make sure to keep my schedule totally clear that night.\" They grinned at each other. \"What was it like? Touching his cock,\" Jacinta asked, her eyes sparkling.\n\nSydney snickered. \"Oh, you know. Awesome,\" she teased.\n\nJacinta's mind was racing. \"Hey- I meant to ask. Has any guy ever... you know... jizzed while you worked on him?\"\n\n\"Oh my god, Jacinta! No!\" Sydney laughed, nearly spitting out a sip of coffee. \"Boy, you have a dirty mind,\" she added with a groan.\n\n\"Hey, it's an obvious question,\" Jacinta replied with a shrug. \"Besides, I'm not the one who built an entire business as an excuse to check out a bunch of men's cocks!\"\n\nSydney chuckled. \"Touch\u00e9.\"\n\nJacinta got up with a sigh. \"Okay, I'm starved.\"\n\n\"Where are you going to get lunch? If you're going to your cousin's Puerto Rican place, can you get me that chicken and rice?\"\n\n\"Tina's. Yeah. Why don't you come?\"\n\n\"That guy at the counter last time called me 'the boner lady.'\"\n\nJacinta burst out laughing. \"Hector called you 'the boner lady'?!\"\n\n\"Yes! In front of everyone!\"\n\nJacinta continued to laugh as she wandered out of the studio. \"Okay, I'll be right back. One arroz con pollo for the boner lady, coming right up!\" she cackled.\n\n***\n\nLater that week, Sydney opened the door to Martin's and slipped into her favorite haunt. As she waltzed past the long banister separating the dining area from the bar seating, she caught glimpses of David sitting there with his girlfriend, Lauren. They'd left one seat for her.\n\n\"Happy-fucking-Birthday!\" Sydney laughed when she saw them recognize her. Lauren grinned and they shared a hug. As jealous as Sydney was of Lauren, she couldn't take it out on her. She'd done nothing wrong and Sydney begrudgingly admitted that they'd probably be friends if it weren't for her feelings for David.\n\n\"Thanks!\" Lauren exclaimed. \"Have a seat, we just got here.\"\n\n\"Hey there,\" Sydney said with a quiet smile. David smiled back. They shared a hug that lasted longer than Lauren's. The tension between them was undeniably thick.\n\n\"The beer list, madame,\" he said as they sat back down, presenting her with the card which listed everything currently on draft.\n\n\"Why thank you,\" Sydney replied, giving it a brief study.\n\n\"So what's new? Kaitlyn said you quit your job!\" said Lauren, conspicuously interrupting their banter.\n\nSydney looked up with surprise. \"News travels fast,\" she thought. She felt relieved that she hadn't told anyone why she quit, or else the gig would be up and everyone would know about her new venture. With Jacinta running the show up front, she felt reasonably sure that it wasn't widely known what she did in the back studio all day. David glanced at her expectantly and she realized he would wonder why they hadn't discussed the matter yet.\n\n\"Oh, yeah. I did. Only recently. It still hasn't sunk in yet. I guess I just needed a change. But I'll figure out what's next.\" Sydney felt her on-the-spot explanation was a little unfocused but didn't appear to conjure any suspicion.\n\n\"Well, that's not such a bad thing, I guess. If you weren't happy, it's time to move on. I like that you're always gung-ho for a new adventure,\" David said.\n\n\"Exactly. And what about you two? Any adventures lately? What did you do for your birthday?!\"\n\n\"Oh, we went out by the lake. David found this really nice place for dinner.\" Lauren cracked a wide smile suddenly. \"He also brought along a fun surprise gift...\"\n\nDavid's eyes shot open and he began to turn red. \"Don't you dare...\" he sputtered.\n\n\"What?!\" said Sydney, eager to hear her dish the details.\n\nLauren snickered. \"He's gonna be so embarrassed...\" Sydney saw David nudge Lauren under the table. She stuck her tongue out at him.\n\n\"Okay, NOW you really have to tell me,\" Sydney added.\n\nLauren laughed as David took a deep swig of beer and then put his head in his hands.\n\n\"Are you sure you want to know?\" Lauren teased.\n\n\"Yes!\" Sydney exclaimed.\n\n\"It's naughty...\"\n\n\"Go on...\"\n\nLauren huddled in close to the table as if about to reveal a scandalous fact. Sydney leaned in too, grinning and full of curiosity.\n\n\"Well...\" Lauren began. \"Apparently there's this studio downtown.\" Sydney's heart immediately sank. \"They make custom dildos. Any guy can just go in there and have one modeled from his own body.\"\n\nSydney stared at Lauren, the look of anticipation frozen on her face. She feared if she let go of it, she'd give away the fact that her mind was currently doing backflips.\n\n\"So... he went down there and got one for me!\" Lauren leaned back into her chair triumphantly, a look of delicious glee washed across her face.\n\n\"Wh-what? Seriously?\" Sydney muttered. She glanced at David. He seemed full of embarrassment and refused to look at her.\n\nReality and fantasy had come crashing together, just like that. For a moment, Sydney was sent reeling. After all those years of secretly daydreaming about her crush, David had been one of her recent clients. She had unknowingly seen his naked body. She had fondled his penis!\n\nBut which one was he?\n\n\"Oh my god, look at her. She doesn't know what to think!\" Lauren laughed, still amused by her own reveal.\n\nDavid quickly looked over with curiosity and caught Sydney's eyes. \"You seriously had to tell her this? She's my best friend since childhood...\" he groaned.\n\nSydney laughed and pretended to be unfazed. \"Whatever. We're all adults here. But gosh... I had no idea such a place existed!\" she said, anxious to feed them with a white lie.\n\n\"Yeah!\" Lauren exclaimed. \"It's actually great. I'm even planning to take my... 'other-David' on my next business trip.\"\n\n\"Lauren!\" David erupted. Sydney and Lauren were in hysterics. \"At least you didn't call it your 'little-David' or something.\"\n\n\"Ha! Actually, I almost did, but I realized that would have been wildly inaccurate,\" Lauren added with a wink. David smirked at her.\n\nSydney sunk into a quiet pensiveness. She didn't know whether to be excited by the discovery of her encounter with David's body or hurt by the fact that he and Lauren were enjoying her work together. She gazed at them with jealousy lurking behind her quivering smile.",
        "***\n\nThe next day was slow and Sydney was grateful for this because it gave her plenty of time to respond to the shocking news she had received the evening before. She used her downtime to meticulously pull all customers named \"David\" from the catalog and study their information. Having closed their accounts, the only information she had to go by was their mutual first name and the responses to the questions that they provided, to be used in the product packaging.\n\nSydney thought for sure that the answers to the questions would provide enough clues for her to make a match to her David, but she discovered that this task was infuriatingly difficult. There were too many shared interests, several of which she knew David enjoyed. Her David enjoyed his job, but it was not listed in any answers, and there were various answers he might provide when forced to come up with another that he'd love to have. The only other question she felt could narrow the results was the pet question, but he didn't have one on account of his tiny apartment and only two Davids could be excluded because they had a pet.\n\nThat left six. Six Davids, one of which was an exact replica of the penis belonging to her longtime childhood crush and best friend; the man who relentlessly and tragically occupied the deepest and most tender place in her heart.\n\nSydney lined up an archival copy of their dildos, arranging them in order beneath the windows of the studio, and labeling them \"David #1\" through \"David #6.\" She took a step back and studied them, examining their varying shapes and sizes, trying to find some way to determine which was his, even if it meant having to unlock some repressed, alien part of her brain and recover the latent powers of ESP.\n\nJacinta poked her head into the studio. \"Still here? I've started to lock up.\"\n\n\"Mmm...\" Sydney mumbled.\n\n\"What are you up to?\"\n\n\"Oh, nothing,\" Sydney replied, snapping out of her trance. \"Just... um... looking at my work. I'm my own worst critic.\"\n\nJacinta laughed. \"Maybe you should just try 'em all out. No way to know how good they are until you use them!\"\n\nSydney laughed and rolled her eyes. \"You can go, I'll lock up today.\"\n\n\"Okay, have fun!\" Jacinta added with a snicker.\n\nSydney returned to the lineup and resumed the examination, trying to determine which might be her David's, but she finally accepted that she had no other way to tell besides gut feeling. Furthermore, she didn't even know if he agreed to enter himself into the catalog, so it could potentially be none of the cocks standing before her.\n\nSydney bit her lip. She walked toward the door and peeked out. Jacinta had just left. She locked the front door and hurried back into the studio, relieved that she was now alone. She approached David #1. She began to caress him, imagining that it belonged to her friend, that it was real live flesh and blood, warm to the touch, responding to her sensual contact. She moved on to the next one, stroking it lovingly. Sydney could feel herself getting hot and antsy. A flush developed on her neck.\n\nShe worked her way down the line, handing each dildo with care and deep, studious attention, listening inward for a stirring that would tell her, \"This is the one.\" However, that inner voice never spoke up.\n\nSydney couldn't help but think about what Jacinta had said. After first laughing it off and shaking her head, she soon returned to the suggestion. In fact, it wasn't a bad idea to try each one. Maybe that was the thing; she would only know which one was his once she felt him finally penetrate her body, sinking deep inside at that moment she had fantasized about a thousand times over the years.\n\nShe carefully removed her clothes, slipping off her jeans, folding them, and placing them on the chair. She pulled off her shirt and placed that on top. Her heart was beating quickly. \"Suppose Jacinta forgot something and comes back?\" she asked herself, before forcing the thought to leave her mind.\n\nSydney continued, carefully unsnapping and removing her bra, feeling the need to simulate a full erotic encounter. She felt the cool rush of air dance across her nipples as her breasts fell free in the middle of the room. She had forgotten to pull the shade down on the windows but couldn't see anyone in the windows of the building across the street. Quickly, Sydney slipped down her panties and tossed them on the pile of clothes forming beside her.\n\nShe felt terrifyingly exposed, standing there completely nude, except for a pair of cushy socks, in the middle of her studio. Sydney glanced over at the table that the men used at the far side of the room. She imagined one was there now, trembling, sporting a massively erect penis. Suddenly she knew exactly how her own customers felt, laying there exposed for her to see.\n\nSydney walked slowly back to the line of dildos which she had arranged one after the other, upright and ready to provide pleasure. The rapid thud of her heart rattled against her chest as she approached the first one, straddling over the cock of David #1. She lowered herself down onto it and watched as it pressed against her body until it forced its way through her dark layer of pubic hair, finding its way into her pink cavity, and then gliding smoothly into her body. She felt herself stretch and expand to fit the cock inside her. It was snug but comfortable.\n\nSydney tried the next one. It felt even better than the first. Becoming increasingly aroused by what she was doing, she began to slowly move up and down on it, trying to imagine what it would be like to ride David. She began to moan. She had six Davids all to herself, one of whom was the supreme master of all.\n\nOne by one she rode each cock until she had sampled them all. By the time she pulled herself off the last one, it was glistening and coated with a thick layer of her body's eager emissions. She found herself buzzing, her mind obsessing over the fact that maybe, just maybe, she now knew what it felt like to have her best friend's cock deep inside her.\n\nSydney wanted to come. She couldn't stand it. Taking a step back to examine the wet phalluses that stood before her, she began to rub her clit. \"Oh, David...\" she whimpered. \"Fuck me...\" She rubbed herself faster. \"Fuck my pussy...\" she moaned louder, anxious to see the expression on his face when he spoke to him in a way she'd never spoken to him before. It was the first time she'd provided an actual voice to her secret fantasy.\n\nShe could feel herself sloshing as she rubbed her fingers in vicious circles, skirting passionately across her budding clit. She scanned the row of cocks as she masturbated, intoxicated by the sight of their skyward thrust. Suddenly she began to fixate on David #4. More than any of the others, she could feel it still inside her body. She began to finger fuck herself, replaying the earlier moments in which she rode it. She wondered... could it be that her body was instinctively telling her that this was the one?\n\nThe faster she pleasured herself, the more intense a magnetism she felt from it. \"Oh god, David...\" she whimpered. \"I think I just had your big cock inside me...\"\n\nSydney felt a sudden wave of pleasure welling up inside her. She widened her stance and gasped as the whipping motion of her hand became more frantic. She stopped abruptly, opening her mouth as if for a silent scream.\n\nHer hips jerked violently and she frantically resumed rubbing her clit. \"Oh fuck, fuck!\" she finally exclaimed as she began gushing and squirting, relentlessly overtaken by wild spasms. She bent suddenly in half, gasping for air and struggling to maintain composure as she felt her body release the fire that had built so quickly inside her.\n\nWhen these powerful sensations subsided, she stumbled backward and found her way to the chair, collapsing into it. She sat there, first gazing at the glistening coating on her messy fingers and then directing her attention to silently offer David #4 a hard, curious stare. Finally, Sydney cleaned up, got dressed, and hurried home, reeling from the experience during the commute that followed and then on late into the evening.\n\n***\n\nSydney had an epiphany.\n\nIt didn't come to her right away. She had spent days dwelling on what she had done in private at the studio, her secret tryst with an inanimate object in the hopes of determining the true identity of its source. Sydney couldn't help but want to find some way to engage the powerful erotic nature of the situation which she was becoming obsessed with.\n\nThe fact was, a sexual channel had opened between her and David for the first time in their lives. An object stood between them as the conduit. However, it was a pleasure that Sydney alone could enjoy, being the sole beneficiary of what she believed to be the very likeness of his physical masculinity.\n\nBut what could she do to draw David into the exchange? And how could it proceed with the same safe level of anonymity that she found herself hiding behind at that moment?\n\nThe answer seemed obvious when it finally dawned on her. Sydney realized she had to learn how to cast a human vulva. She needed to develop a masturbation aid for men, modeled after a real woman's body, and she had to do it without telling Jacinta.\n\nAll week long Sydney stayed late after work, sometimes leaving and coming back after Jacinta had left so as to not make her suspicious. She practiced on herself late into the evening, squatting pantiless over a white plastic bucket, smearing a thick paste across her own pussy and allowing it to set until she managed to get the process right.\n\nSydney worked anxiously, fearing that one day Jacinta would return unexpectedly having left something behind, only to find her in an uncompromising position, picking at her sticky labia, or wincing as the mold tugged at her pubic hair during removal. Her fears were never actualized and, instead, Sydney soon found herself carefully destroying the evidence of repeated failures before a new style of sex toy emerged. She had successfully created her first soft, flexible tube with the mold of a real woman's pussy as the mouth at one end.\n\nAs a prototype, she designed it to fit David #4's cock perfectly, working to produce just the right amount of snugness and resistance when the lubricated object was inserted inside. The opening at the other end allowed for it to be easily washed by running water through and wiping it clean. She even managed to work out a means of two-color fabrication, allowing her to use a pinkish coloration for the inner labia and entrance to the vagina while deploying flesh tones elsewhere.\n\nAlthough a mild concern lingered in the back of her mind, having no easy way to ask a man to test it for her, she forged ahead with a similar approach to packaging as she was used to producing for the dildos. The \"Copycat\" as she called it, was the \"purrfect pussy for a man to enjoy the sensation of a real vagina,\" enhanced by the knowledge that it was developed from a real woman who's identity was described on the information card it came with.\n\nSydney's first Copycat was named \"Sarah.\" Using her real name would give everything away, especially because hers was not common. She included several fun facts about the supposed model, which were all interests she shared with David as a means to prompt him to think of her while using it. She modified the information slightly, tailoring it for men, such as including her bra cup size.\n\nLastly, she needed a reason to send it to David, so Sydney included a letter in the box. It read:\n\n\"David- Please accept our sincere apologies! During the handling of your order, we discovered that you were charged twice for your purchase. Upon discovering this, we immediately refunded the erroneous charge. To set things right, we hope you enjoy this prototype of our latest product, the Copycat. Cast from a real woman's body, we think you'll find that this pussy will be the purrfect companion to act out all your secret desires with. We hope that you enjoy both our products and visit us again soon!\"\n\n\"There, it's done,\" she said, walking back to the studio, having sent it off to his apartment. In a brief moment of panic, she realized that she would normally not have the customer's home address, due to their privacy policy of calling for in-store pickup, but she sucked it up and accepted that what was done was done. Sydney wandered down the street, contemplating what she had done, trying to come to terms with the fact that she'd just sent her crush a mold of her own private parts. Before long, she knew that he would be masturbating with it, with her; that both of them will have come to know each other's body so intimately, even if he did not realize it.\n\nWould he think of her, she wondered, through the veil of her alter-ego, Sarah? Would the hints she provided through the description of the real-life female model cause him to fantasize about his best friend as he used the object she crafted to simulate the act of their passionate lovemaking?\n\nShe tried to imagine what it would be like for him. If only she could be a fly on his wall, watching him stroking himself, pumping his hard cock through the tight, wet tube, moaning with pleasure and calling out her real name, \"Sydney!\" She wanted to be there for the moment he climaxed, ejaculating into the device that she carefully and lovingly crafted to envelop his body so perfectly.\n\nSydney wanted to see that look written across on his face. She wanted to see his crisis. She wanted to see what she should have seen so long ago as the two of them fit together perfectly, beautifully, long into the evening while the nervous excitement of prom night faded into history, carrying with it their youthful innocence.\n\n***\n\nTwo weeks passed. If the experiment had been a success, Sydney began to feel resigned to the idea that she'd never know. After all, there was nothing to necessarily prompt David to reply to the letter and prototype at all. Worse, for all she knew, she'd only given David and Lauren another toy for them to enjoy together. She cringed at the thought of her using it on him, helping him fuck her own pussy, without her even being there.\n\nThe best thing Sydney could do to banish these thoughts from her head was to engage in a little downtime with David #4, which she left permanently mounted by the side of the studio. Sometimes, when Jacinta was out to lunch, Sydney would quickly slide down her pants and panties and rush to sit on his cock. After a morning of working with men's bodies so intimately, an act that she'd become increasingly bold and confident about, she often found that a quick ride on her prized handy-work was just the thing that her body was screaming for.\n\nOne afternoon she did just that. With her back to the windows, Sydney found herself bouncing briskly up and down on the beautiful object, listening to the soft slap of her own buttocks against the counter she had mounted him on. She rode him smoothly, having by now memorized the exact feeling of his cock. It was unmistakable. Distinct from all the other models she tested.\n\nSydney heard a jingle coming from the front of the store and realized that Jacinta had returned early. She scrambled to tug her clothes back up as quickly as possible, with one smooth motion. Fumbling with panic, she frantically tried to fasten the button on her pants.\n\nJacinta walked in with a couple cartons of Chinese food. She stopped short. Sydney quickly recovered, throwing her arms down by her side, having just finished wrestling the button into place. For a moment they stared at each other, stony-faced and silent. \n\n\"Were you just...\" Jacinta said, pointing at the dildo nearby with her eyes widening.\n\n\"N-no... I...\"\n\n\"You WERE, weren't you!\" Jacinta exclaimed, her face suddenly lighting up.\n\n\"Um...\"\n\n\"I KNEW it! You fucking ride that thing when I'm gone!\" Jacinta laughed. She quickly placed the food on a table and raced toward the dildo. Sydney laughed and attempted to block Jacinta but she got close enough to see the shaft of the dildo still glistening from Sydney's body, having not had time to clean it before she returned.\n\nJacinta peeked around Sydney's arm, her face awash with amusement. \"Oh man, I can even fucking smell you. That must have been hoooottt...\"\n\nSydney turned red-faced from embarrassment. \"Okay, okay... Fine!\"\n\nJacinta stepped back and observed Sydney with satisfaction, then made a \"tsk tsk\" sound and waved her finger back and forth.\n\n\"Fine, I said! You caught me...\" Sydney laughed.\n\n\"All right...\" Jacinta said with a whistle, wandering back to the table. \"Shall I leave you two alone then? I can eat up front today.\"\n\nSydney groaned. \"No... it's fine.\" She joined Jacinta at the table, who was struggling to swallow a mouthful of beef lo mein on account of her grin. \"You're never gonna let me live this one down, are you?\"\n\n\"Nope,\" replied Jacinta without missing a beat. She plucked a floret of broccoli from her carton and popped it into her mouth with visible glee.\n\n***\n\nLate that afternoon, Sydney took a stretch and rose from her chair. She glanced around her workspace as she did every day, taking stock of what needed to be cleaned up before heading home for the evening.\n\nJacinta popped her head into the studio. \"Hey there.\"\n\n\"Hey, Jacinta. Are we all set for the day?\"\n\n\"Almost. Do you have a minute to just talk to a customer before we close?\"\n\n\"Talk? Sure. What's up?\" Sydney asked, curious as to what it was about. She began to walk toward the door to reception.\n\n\"I'm not really sure!\" replied Jacinta. \"Are we, like, casting pussies now too?\"\n\n\"Huh? Why?\" After a long day of work, it took Sydney a moment to snap out of the fog she was in. She followed after Jacinta, not quite processing what this was all about until it was too late.\n\n\"He claims you sent him a female model. He wants to buy a second one for a friend or something,\" Jacinta was saying. \"By the way, he's Gary-level cuuuuute. I might need you to make me a 'David' soon.\"\n\nEverything Jacinta was saying suddenly snapped into focus but she had already begun to step through the door. The moment she heard the D-word, her heart skipped a beat and she froze. She looked up and there was David, standing there like a bomb had just gone off.\n\nTheir eyes met.\n\n\"David, this is Sydney. She's the owner and the artist that does all the modeling. You can speak with her,\" Jacinta said politely. She saw David staring at Sydney and immediately picked up on the awkwardness between them. Jacinta glanced back at Sydney, her eyebrows screwing into an expression of confusion and intrigue.\n\nDavid's jaw was quivering. \"Uh...\" was all he could muster.\n\nSydney could feel herself trembling. A hot flash exploded across her body. She felt her armpits sweating.\n\n\"Um... Thanks, Jacinta,\" Sydney scrambled to say, not wishing to trigger any suspicion in her assistant's mind. \"That's fine. You can go. I'll finish here and lock up.\"\n\nJacinta gave Sydney a surprised look, taken aback by the abruptness of her dismissal. Sydney stood there as if waiting for Jacinta to leave. \"Oh, okay. I'll see you tomorrow then!\" Jacinta replied before quickly grabbing her things and hurrying out.\n\nA few moments of deeply uncomfortable silence ensued as Sydney and David stared at one another in disbelief. A fear began to gnaw at her. Would he be upset? After all, she had basically lied to him at Martin's, feigning ignorance about the business which she in fact owned. Or, would he understand why she did that? She wanted to believe their bond was too strong to be broken by this snafu.\n\n\"S-so you... you're the one that... does the work back there? When I came and...\" David began to stammer, still trying to confirm the shocking revelations.\n\n\"Yeah...\" Sydney said, frantic with worry. \"But... like... don't worry about it. I don't even know who I'm working on. Here- do you want to see the studio?\" She was anxious to command his attention and act like nothing was unusual at all.",
        "David still looked startled. \"Okay...\" he said.\n\nSydney motioned to him to follow her back. Together they moved into the studio. David walked in and immediately reacted to the size and scope of Sydney's workshop. Tools and supplies lay scattered everywhere, freshly used here, carefully stored and stacked away there. Piles of promotional materials lay spread out on the tables. He caught sight of her workspace where the familiar hole was arranged that he understood to be the opening his body had once passed through.\n\nThough Sydney observed his surprise upon seeing the numerous erect phalluses that lay about the room, she felt she also saw a brief glimpse of wonder and pride as he scanned his surroundings, cast as they were in a pale orange glow from the low afternoon sun that streamed in through the tall windows.\n\n\"What do you think? Pretty neat, huh?\"\n\n\"Yeah...\" he said with a mild breathlessness. \"I can't believe you managed to put all this together. I mean... I can, actually... you're good at everything you put your mind to. But... how did you- what gave you the idea to do this?\"\n\n\"Amsterdam...\" she mumbled, before chuckling to herself. For the first time, David relaxed a little as he, too, laughed. \"Anyway, feel free to look around. I have to run to the bathroom. Be right back!\"\n\nSydney raced off to the rudimentary bathroom at the back of the studio. She did indeed feel a nervous urge to pee but mostly she just needed a moment to collect herself and think. She moved aside the curtain, stepped inside, and slid it back, then quickly slipped down her underwear and sat on the toilet, her breath quickening as she began to reflect on what just happened. Her mind raced with panicked thoughts which became impossible to control as she peed in fits and starts, embarrassed by the way the tinkling sound would carry into the studio through the bare-bones configuration of the studio's awkward excuse for a restroom stall.\n\nOne central question was burning in her mind: how did David feel about her secret interactions with the most intimate parts of his body?\n\nIn her absence, David quickly moved about the room, his emotions moving in waves that fluctuated between arousal and embarrassment. He tried to make sense of the fact that she had seen him naked from the waist down. He was desperate to know how she felt about him having been there. Moreover, he wanted to know if she had really not been aware it was his body at the time.\n\nDavid thumbed through Sydney's notes. He picked up and examined her tools. He bent down and examined a freshly-molded penis, trying to imagine what it must be like for her to experience so many men's bodies intimately. Did she get aroused, he wondered? The very question alone turned him on and he became self-conscious at the sudden swelling of his cock within his pants, something that he absurdly feared Sydney would notice even though she had in fact already seen his cock standing at full mast.\n\nFinally, David came across a finished model of a penis standing upright by the windows. Immediately, it seemed strangely familiar to him. He walked over to take a closer look. David's heart immediately began to pound as he saw a small label beneath it. \"David #4\" it read.\n\nHe whipped his head around and saw that the curtain was still pulled across the entrance to the small bathroom stall at the other end of the room. David quickly turned back and hesitantly reached out to touch the cock in front of him. It felt mildly tacky. He checked the bathroom again. The coast was still clear. He lurched forward and briefly sniffed the dildo out of curiosity. The faint but unmistakably earthy smell of a pussy flooded his nose.\n\nDavid's heart threatened to beat down the walls of his chest as he wondered if he just savored the intimate scent of his best friend, a girl he had dreamed of in secret for years.\n\nFrantic for more answers, David shuffled through some nearby papers until he stopped abruptly at the appearance of a small notebook comically labeled, \"My pussy.\" He flipped through. Sydney had detailed notes of her experiments, with sketches of her body, including one very realistic rendering of her spread vulva and the wide, gaping portal to her body.\n\nRecent memories flashed through David's mind; all the times he had masturbated with the sex toy he had mysteriously received in the mail and which he was too embarrassed to reveal to Lauren. He'd only reluctantly even told his best male friend about it. In an instant, he recalled exactly how it felt the first time he had tried it, sitting at the edge of his bed with his boxers down around his ankles and his freshly lubricated cock twitching with anticipation between his legs. He recalled how comfortable and slippery it felt as he plunged himself inside and began moving the object back and forth, milking himself more and more rapidly with absolutely no awareness of whom it was modeled from.\n\nThe revelation hit him like a ton of bricks. It was Sydney's pussy all along. Through that surrogate object, he had been intimate with her, penetrated her body in precisely the way he had imagined his entire life. Even now, despite the relief his own actual girlfriend gave him, it was an activity he began to crave every opportunity for. David discovered himself to be rock hard. There was no hope of gaining control before Sydney returned. It was too late, anyway. The curtain slid back open and there was Sydney, shooting him a look across the room.\n\nSydney watched David with curiosity. It dawned on her that he'd just discovered David #4 and she kicked herself for not remembering to quickly hide it when she brought him in. However, it was too late. This was happening. Now she needed courage. Everything was about to come to light and it would either be the best day of her life or ruin her.\n\nAs she approached him, Sydney noticed the notebook lying out of place. Her heart sank again. The cat was out of the bag, so to speak. He knew the object she sent him was hers.\n\n\"Did you...\" she began, gesturing to the notebook.\n\n\"Oh... um...\"\n\n\"Err... so I guess you know now.\"\n\n\"It was...\"\n\n\"It's mine. Yeah,\" she said with a nod and a sigh.\n\n\"Wow,\" was all David could say.\n\nSydney tried to shake off her nervousness. \"Listen- I... um... Are you... okay? Like, I don't want you to be ashamed that I... touched you. I mean... you're my best friend. I love you.\"\n\nSydney wondered, \"Did I really just say that?\" She quickly moved past her faux pas.\n\n\"I didn't realize that I made a mold of you... honestly. I don't really get to know who's who. At least, not for sure. It wasn't until Lauren's birthday that I found out you'd been here. But honestly? I'm okay with it. Are you upset? That...\" She cringed. \"... that I've seen your penis?\" Sydney realized she'd been rambling, but was desperate to see how he'd react.\n\n\"Um...\" David mumbled. \"I mean... I'm fine with it if you're fine with it...\" The faintest glimmer of a smile began to quiver at the edges of his lips.\n\nSydney smiled. \"It's not like you haven't... you know... seen mine too, now.\" She pointed to the notebook.\n\nDavid's smile finally came alive. He seemed to turn flush. Seeing his embarrassment only turned Sydney on more.\n\n\"Yeah...\" he added, struggling to contain the amused excitement that began to emerge.\n\nEncouraged by his reaction, Sydney grew bolder. \"Have you... used it?\"\n\nDavid gulped visibly. \"Um. Yeah.\"\n\n\"How was it? Tell me honestly.\"\n\n\"I guess... I was really good,\" he chuckled.\n\n\"Like... not too tight? Not too loose?\"\n\n\"No, just right.\"\n\n\"Nailed it!\" she laughed, offering him an awkward fist bump. He laughed and returned it.\n\n\"You're a real-life sex-toy Goldilocks!\" he chuckled. They laughed. Sydney grew excited at the release of tension between them.\n\n\"Okay, good,\" she said, exhaling with relief.\n\n\"You're really okay knowing that I... masturbated... with your...\"\n\n\"Yeah, it's fine,\" Sydney quickly interjected. \"Honestly, I... may have tried yours. Out of curiosity,\" she said with a shrug and a smile. \"At least the one I thought might be yours...\"\n\nDavid glanced over at David #4 with a cryptic smile. Sydney's body lit up with a myriad of wild sensations as she saw him confirming his own suspicions. It was the first time she'd admitted her curiosity about him. It felt wonderful to get it out, at long last.\n\n\"I thought as much...\" he said, returning his gaze to her with a smile.\n\n\"Yeah. Your... you... have a nice one. Your penis, I mean.\"\n\nAgain, reality and fantasy crashed into each other. She suddenly found herself in her favorite secret fantasy, saying almost the same words to him as she always imagined. Sydney's eyes briefly shot down to David's pants. It looked like he might have an erection but she couldn't be absolutely sure. David shifted nervously. It was clear to Sydney that he didn't have a response, so she hastily decided to make a stupid joke.\n\n\"Hmm, do I detect a little disturbance in the Force downstairs?\" she giggled.\n\nDavid laughed nervously. \"Well, what do you expect?\" He seemed like he wanted to hide his growing bulge but had no means to do so.\n\n\"It's okay. It's not like you've got anything I haven't seen before. I mean... we're standing here next to a model of your gigantic erect penis.\" She pointed to David #4.\n\n\"I know... seriously. Maybe we should go somewhere a little bit less awkward,\" he chuckled.\n\n\"Naw. This is fun. I like this spot.\" She grinned at him. David laughed. \"Anyway, don't worry about it. I'm aroused by the whole thing too. Who wouldn't be?\"\n\n\"You are?\" David said, with mild surprise.\n\n\"Sure. Does it make you uncomfortable to know that... it's making me really wet?\" Sydney gave him a hard stare.\n\n\"... N-no,\" he replied, staring back at her in awe.\n\nSydney was suddenly burning with desire. She'd now passed the point of no return. All sense and caution were out the window. This was a train that had been building speed for years. There was no stopping it. She inhaled deeply- and then went for it.\n\n\"Do you want to see how it's done? The process, I mean. I won't actually do it. But I can show you how I do it. Like... on us.\"\n\nDavid almost choked on his own words. \"You mean you want to- Like, right now?\"\n\n\"Sure. Right now. Right here.\"\n\n\"Okay...\"\n\n\"Okay, start undressing and I'll demonstrate on you.\" Sydney felt a rush of endorphins flood her body. She raced to get the necessary supplies, making a very conscious decision to skip the gloves she'd normally wear.\n\nFor a few moments, David stood there blinking in disbelief as Sydney hurried to collect her things. Slowly, he reached for the fly on his jeans and tugged it downward. A tingling sensation fell like rain through his body from his skull down to his feet. As he slid down his pants and stepped out of them, he felt the sweet release of his semi-hardened cock partly freed from the constraints of his clothing which had become increasingly tight and uncomfortable. He stood there, trembling, frequently glancing down at the embarrassing bulge of his soft cotton boxers.\n\nSydney turned around and saw him standing there, stiffening in his underwear, hesitant to embrace the final reveal. She briefly abandoned her workstation and returned to his side, saying softly, \"May I take these down?\"\n\nDavid nodded slowly. Sydney squatted down in front of his body. Jerking with soft twitches, she watched the plastic button of his boxers lift further away from his body. She could feel him aching. The tingling between her legs was relentless. Carefully, she reached forward and took the waist of his boxers, then began to slide them down.\n\nIn mere moments, she found herself watching the carefully groomed layer of David's pubic hair begin to emerge. Next, the base of his cock appeared. The long, hardening shaft of his penis slowly emerged as it strained against the elastic waistband that slid across it. Finally, it popped free and bounced stiffly in the air. The thick head of his cock pointed outward toward her face, swollen and surging with intense arousal. Trembling herself, Sydney quickly tugged his boxers down the rest of the way and allowed David to step out of them.\n\n\"I guess we don't need you to watch any adult videos,\" she chuckled, standing back up and eying his erection. David laughed nervously. \"Follow me,\" she added, taking his hand.\n\nSydney led David to a stool next to her workstation and sat him down, then guided his legs apart. She observed his painful embarrassment, sitting there with a massive boner sprouting from his lap and gently wavering from side to side.\n\n\"It's okay, just relax,\" she said with a soothing whisper.\n\nDavid watched as Sydney picked up a tube and squirted what appeared to be a clear gel into the palm of her hand. She briefly rubbed her palms together to spread it around.\n\n\"So I take your penis, like this,\" she began. Sydney reached out and carefully grasp his shaft. She felt him flinch then relax again. Lifting his shaft, she began to admire it secretly while starting to rub the gel back and forth over his erection.\n\n\"And then I apply this solution all over it. It's similar to vaseline. This helps prime the surface and prevent the alginate from adhering too painfully to skin and hair after it sets.\" She continued to massage the ointment up and down the hard shaft of his cock. It was an entirely different sensation than she'd become accustomed to when she wore disposable gloves with her customers. This was more sensual, more erotic. It was skin-on-skin.\n\nSydney could smell the synthetic odor of the solution reaching her nose, mixed with the pheromonic blossoming of his natural masculine scent which quickly emerged as a result of his intense arousal. She smiled.\n\n\"This must feel really good...\"\n\n\"Yeah...\" he muttered through a grin.\n\n\"So now that you're nice and erect and primed for the casting process, I take this paste that I've mixed. It's just a plaster powder that reacts with water. I apply it to your body like so.\" She began to slather some paste over his cock, ensuring that it was sufficiently thick by repeating the process until it was well coated but not heavy enough to slide off.\n\n\"And then we'd wait for it to set! It firms up quickly and becomes pretty easy to remove. But we don't have to do that now. Let me clean you off.\" Sydney ran to the sink and brought back a pile of moistened paper towels. She began to lovingly wipe the paste from his cock before it had time to set.\n\nIn a few moments, the soft, damp flesh of David's engorged cock emerged and glistened with fresh moisture. Sydney briefly wondered how he must be feeling, desperate to know the details of his arousal. All the tell-tale signs were there. She even noticed a small trickle of clear fluid escape the tip of his cock and knew that their interaction was already triggering the release of precum.\n\n\"That's cool,\" David said, fidgeting in his seat. \"And... how did you do yours?\"\n\nThere was no question in Sydney's mind at that point where this was headed. David was still playing it cool but it was obvious what he wanted to see.\n\n\"Casting a girl's genitals is a little more difficult. You know? There's less external stuff to work with.\" David nodded with understanding. Sydney took a deep breath. \"Would it be okay if I took off my clothes to show you?\" She watched out of the corner of her eye as David's cock twitched back to life, throbbing wildly between them.\n\n\"Sure,\" he replied with a transparent eagerness.\n\nEverything was about to change between them. She wanted desperately to level the playing field. She wanted him to feel the same desire for her body as she did for his. Never in a million years did she imagine it would happen this way, here, under these circumstances, but she bit her lip and stood up, then prepared to do something that struck her with great anxiety and terror.\n\nSydney pulled her shirt up and over her head, revealing her bra. She watched David sitting there frozen, charged, bewildered, as she slid down her pants and stood back up. David was absorbed in the sight of her thin cotton panties which clung tightly to her soft mound. Sydney realized that it was unnecessary to be nude from the waist up but she needed to show David what he was missing out on, what he'd been missing for so many years.\n\nShe carefully unfastened her bra. Sydney felt the straps fall loose as she held the cups against her chest for a moment longer, absorbing what she was about to do and what it meant to their relationship. She moved the bra aside and tossed it down by her feet. The heavy weight of her breasts sent her chest briefly bouncing free, attracting David's full attention. He seemed not to be breathing.\n\nSydney tried to hide the shaking of her hands as she reached for her panties. Bending slightly forward, she felt her breasts jostling about and only became more self-conscious. She began to slide them down until they cleared her groin and could be removed completely. Sydney stood back up, completely bare, studying David's expression.\n\nDavid gazed back at her, his eyes darting straight between Sydney's legs. He appeared to be in awe. She cringed as he studied the soft patch of brown pubic hair that covered her mons and the two rounded lips of her pussy nestled into the dark fuzz.\n\n\"Wow...\" he said with a dumbfounded expression. \"You're beautiful...\"\n\nSydney exhaled deeply, thankful to hear his words and relieved at his response, as scant and inhibited as it was. She quickly sat back down across from him then threw each leg to the side. They both directed their attention between her legs.\n\n\"I used the same materials as I do for men. So I'd start with the ointment, as well. I just...\" Sydney became increasingly awkward having to explain the scandalous details. \"... I have to spread open my pussy a little bit, like this.\" She reached down and began to lightly separate the two hairy lips of her outer labia exposing the velvety pink flesh within. Sydney felt completely exposed but at the same time incredibly turned on, being aware of the arousal it would cause him.\n\nShe made a motion around her privates as if to illustrate how she'd coat every nook and cranny with the goo. \"Originally, I shaved myself for this, but it's all grown back now,\" she said, sheepishly. \"Anyway... do you want to try it?\" Sydney began reaching for the ointment.\n\nDavid quickly nodded and accepted the tube from her. He squirted a coin-sized amount in his hand and then reached out to apply it to Sydney's genitals. The moment David's fingers touched her sensitive flesh she felt herself let out a small gasp. She closed her eyes and felt herself shiver. Then she collected herself and relaxed into the sensation of David's slick fingers moving back and forth over her loose flesh and budding clit.\n\nSydney opened her eyes. David was looking at her and they connected. Lost in his eyes she succumbed to his gentle caresses which felt as loving as they were fueled by an increasing lust, freed from the burden of years of repression. David turned his attention back downward, slipping his fingers through her folds, exploring every inch of her femininity with generous care and great curiosity. Finally, he sat back and rested his hand on his thigh while his chest expanded and compressed with a series of heavy breaths.\n\n\"After I apply the paste and let it harden, I can carefully remove the resulting cast,\" she continued, her voice quaking as she struggled to get the words out. \"Then I can use it as a mold to pour the silicone and make the finished product as many times as I want, from the original casting.\"\n\n\"That's amazing,\" David said, still gazing between her legs.\n\nFor the next few moments, an awkward silence ensued. Sydney realized she had nothing more to say. There they sat, one partially nude and the other completely bare. Each of them surging with sensations bottled up and ready to boil over while neither had the courage to take that final leap.",
        "\"David...\" she finally whispered out of desperation. \"Talk to me. Open up. How are you feeling?\"\n\nDavid chuckled nervously. \"Sorry, I'm still sort of shocked this is all happening. Especially after knowing you for all these years.\"\n\n\"Have I made you uncomfortable?\" she asked, gritting her teeth.\n\n\"Oh! No, not at all...\" he quickly reassured her.\n\n\"So... you're okay with touching me?\"\n\nDavid gave a hard swallow. \"Yeah.\"\n\n\"Because I... enjoyed it,\" she said sheepishly. \"I wanted you to touch me.\"\n\n\"Y- you did?\" he mumbled.\n\nSydney nodded. She felt herself becoming so wet and wild with desire for David that she wanted to scream. She reached forward and took his member in her hand again, gently moving it up and down his shaft.\n\n\"And I really loved demonstrating on you. Normally I wear gloves...\" she admitted, \"... but... I wanted to stroke your penis. I wanted to feel your body. I've always wanted to feel it.\"\n\nSydney closed her eyes and anchored herself mentally for the moment of silence that followed. When she finally had the courage to open them David was gazing back at her. He seemed to be at wit's end.\n\n\"Sydney... fuck... I can't... I can't deal with this anymore...\" She perked up. \"I've basically been in love with you my whole fucking life. I didn't know how- if...\"\n\nShe felt her entire body swell and come alive as he drowned hopelessly in the sight of her body. They exchanged a look of tender affection. As in her fantasy, she began to lean in slowly. He matched her advances. Their lips touched. In an explosion of emotion, Sydney thrust her body up against David's. She felt the soft fabric of his shirt brush teasingly against her nipples.\n\nSydney's parted her lips and went searching desperately for his tongue until they connected. They kissed with a fierce urgency, moving together closer and closer, anxious to feel the proximity of each other's body. After a few moments, Sydney pulled away and frantically wrestled David's shirt off, rendering him as naked as she was. They sat there huffing and puffing, overwhelmed by the rapid shift in a friendship long-cemented in sexual frustration.\n\nShe rose to her feet and grabbed David's hand, dragging him toward the passage between the customer's room and her workstation. She felt him stumbling along behind her. Sydney grabbed the cushioned table and tugged it all the way through the passage, then locked the wheels and pulled David forward until he climbed onto it. She hoisted herself up and lowered onto him until they found themselves skin-to-skin, absorbed in the soothing warmth of each other's naked body.\n\nDavid moaned softly as they rolled together on the table; the soft mounds of her breasts pressed firmly against his chest, their lips eagerly searching for one another, parting, and then finding their way back again.\n\n\"Sydney...\" David whispered, as if delirious.\n\nShe moved down his body, planting kisses as she went, delighted by his muscles, his coin-sized red nipples, and the little trail of hair beneath the deep well of his bellybutton.\n\n\"I want to kiss your penis,\" she whispered, grasping it in her hand. He moaned as she lowered down and placed a soft kiss on the tip then traveled along his shaft, planting one after the other until she reached the base. \"Mmm...\" She sat back up, running her hand gently up and down his shaft.\n\n\"Sydney...\" he repeated.\n\nShe gave him a serious look, recognizing in his expression an acute anguish. Sydney lowered herself again, guiding his cock to her lips, and then plunged her best friend's erect penis into her mouth. She felt his bulbous head sliding over her tongue toward the back of her throat, then back over her tongue again. She began to massage it, exploring the most sensitive parts as it surged in her mouth, tracing the ridge along the head of his cock and then giving him a long, slow lick over his steely shaft.\n\n\"Oh my god...\" he droned.\n\nSydney's head began to bob back and forth as she began to drive his cock back and forth through the warm hollow of her mouth. She tasted the slight saltiness of his precum, licked the tip, and plunged him deeper still. She used every bit of enthusiasm she imagined she would have had so many years ago, on the night she had been so hopeful for.\n\n\"Wow... are you sure that you- I can't believe you're sucking my cock,\" David groaned, increasingly bewildered by what was happening.\n\nSydney slid back up his body, setting his wet cock free to bounce about and slap excitedly against the flat plane of her stomach. She returned to his lips, answering him with a few more scatters of frantic kisses.\n\n\"Can I... tell you something? I need to confess,\" she asked, feeling his member softly pulsing against her body.\n\n\"Okay...\"\n\n\"So... do you remember how I used to come over a lot and swim in your family's pool?\"\n\n\"Of course.\"\n\n\"Well... I used to imagine that your mom and dad would leave for an errand or something and we'd end up taking off our bathing suits and skinny dip together. Especially that summer after we graduated. I thought it would be my last chance...\" She saw David's eyes light up. Sydney continued, \"I was so horny every time we went swimming. I dunno why, maybe just because we were in our bathing suits.\" She looked away for a moment. \"Sorry, I just had to tell you that. I've been keeping this a secret for so long...\"\n\n\"I used to imagine the same thing!\" David laughed.\n\n\"Really?!\" she exclaimed, returning her attention to him.\n\n\"Yeah! Do you remember that time you climbed up the ladder and your bathing suit slipped down a little? I saw your butt crack...\"\n\n\"Oh my god! I had forgotten about that. I was so embarrassed. I was never sure if you saw...\"\n\n\"Of course I saw. I couldn't take my eyes off you.\" Sydney continued to laugh and covered her face. \"I... Nevermind...\" David said, suddenly embarrassed.\n\n\"No, tell me!\"\n\n\"Well, I couldn't stop... you know... masturbating,\" he explained, lowering his voice. \"For days. Thinking about that. Even though it was just a small glimpse of your body.\"\n\nSydney was in hysterics. \"What did you think about- when you were doing it?\" she asked, eager to hear all the details.\n\n\"Um. I used to imagine that your bathing suit had accidentally fallen completely off and you were really embarrassed because I had seen you naked. But you made me take mine off to make it fair. Then, I dunno, we ended up kinda chasing each other all over the yard and laughing...\" His voice trailed off.\n\nSydney snickered. \"That's such a guy fantasy! I'm sure you imagined me giggling incessantly and trying to hide my unnaturally big boobies.\"\n\n\"Yes!\" he laughed. \"It was exactly like that. Then for some reason, we just ran inside naked and had sex on the couch in the living room.\" She rolled her eyes. \"Did you... ever...\"\n\nSydney was quick to interject and tell him about her recurring fantasy. She told him every last detail. She told him how many times she thought about it, how she still thought about it.\n\n\"I just wanted to see your body so badly...\" she mused, becoming lost in thought. \"I wanted us to share our bodies. Honestly, I wanted to do that for the first time with you.\"\n\nDavid noticed she was becoming wistful. \"Yeah...\" he uttered. \"Me too.\"\n\nFor several moments they gazed at one another, coming to terms with their wild admissions to each other. Finally, Sydney took David's hand. It was trembling. She guided it down between her legs and then dragged his fingers over her body to demonstrate the dampness of her sex.\n\n\"David...\" she whimpered. \"I'm really, really wet...\" She gave him a pleading look.\n\nIf there was any hesitation left on David's part, it was no longer apparent. He wasted no time in flipping Sydney over and throwing her legs open. Within an instant he dove between her thighs, giving a deep inhale before he spread her supple flesh and unleashed his warm tongue through the intimate recesses of her body.\n\nSydney began to purr. \"Ohh yeah...\" He grew increasingly eager at her delight. \"Nnnh! Yes... this is what you've missed...\" she whispered.\n\nShe watched him munching hungrily at her body as she felt herself becoming sloppy and began to lightly jerk her hips. His tongue playfully navigated every nook and cranny of her sex, teasing her labia, circling her clit, sweeping through the sweet, creamy divide of her intimate femininity.\n\n\"David...\" she whined, becoming almost delirious with pleasure, \"Yes... eat my pussy...\"\n\nDavid glanced up at her with surprise as his lips began to smack with juicy enthusiasm. His eyes were filled with devastation and craving.\n\n\"You make me so wet...\" She gave him an anxious look. \"Do you like my taste?\"\n\n\"Mmm-hmm,\" he mumbled, his voice muffled by the slippery flesh she boldly offered him. David's body seized up with emotion. He frantically kissed her budding clit, alert and sparkling with pleasure. His tongue became taut and agile, fiendishly streaking across her tingling button until it became almost too much to bear.\n\n\"Nnnnngh,\" she groaned, wrapping her hands around his head and mussing his hair. An electric thrill ran straight through her body and unraveled her senses. \"My body has been waiting for you for so many years. I think you should kiss it and apologize...\" she said breathlessly.\n\nHe moved back up her body, kissing every inch until he reached her breasts and buried himself in them. He felt his breath releasing as he relaxed into her body, anxious to drown himself in the generous mounds of her yielding flesh. He rose from her cleavage as if desperate for air, then assaulted her nipples, suckling feverishly at her raised, pink nubs.\n\nDavid made his way back to her neck and then to her lips, his senses overwhelmed by the erotic landscape of her body. They kissed. He tasted earthy and sweet, the fragrant nectar of her own body still glazing his mouth and chin.\n\n\"Fuck... David... put it inside- I want to feel you inside me,\" she moaned, unable to bear any more of the growing desire to unite their bodies.\n\nWithout any hesitation, David shot upward, positioning himself before her body on his knees. He seemed desperate with wild, carnal hunger, as eager to feel their bodies deeply connected as she was. She observed him shaking as he parted the intimate folds of her body until she bloomed forth before his eyes, ready as ever to receive him with her welcoming body. He angled his cock at the entrance of her vagina, preparing to ease it forward and glide smoothly into her tight cavity.\n\nSydney recognized the importance of that moment. Every day and night she had obsessed about a single burning question: was David #4 actually his? She felt she knew the answer in her bones and yet still she wanted absolute clarity and confirmation. Furthermore, the simple act he was about to perform was the answer to years upon years of anguish, always asking \"what if.\"\n\nWhat if things were different between them? What if their relationship, as deep and sturdy as it was, received the blessing of a beautiful act of lovemaking?\n\nIn a moment of breathless anticipation, Sydney watched David push his cock forward, forcing apart the tender flesh of her labia and sinking inch by inch into her body until she had swallowed him whole. She felt her body stretch and expand to receive him, the stiff extension of his body massaging the silken inner contours of her body. She gripped him, surrounded his girth, and welcomed him comfortably into a warm, expanding glow of pleasure.\n\nWhen he entered her, it was a familiar sensation. Familiar because she had imagined it a thousand times.\n\nShe imagined it lying in her bed that summer so long ago. She imagined it time and again every time they saw each other, or whenever he invaded her mind at will.\n\nIt felt familiar because she had been right all along. It was the unmistakable presence of David #4, only better, more real. Somehow, despite having no real evidence, she had discovered exactly which cast belonged to him. His cock was The One. It was perfect. She mused that it alone deserved a place in Berlin's Kunstmuseum.\n\nSydney moaned as she saw David go weak and fall into her arms. Her arms enclosed around his body as they grasped fiercely for each other and he began to move his hips back and forth with a rhythmic motion. His warm breath showered over her neck as his desperate humping motions revealed a deep urge to find a home within her body. She listened to the metallic squeak of the table as the pressure of their grinding bodies strained against the scarcely stabilized wheels.\n\nSydney burst out laughing. He started laughing too, excited by her outburst.\n\n\"What?\" he asked.\n\nShe shook her head in disbelief. \"Nothing... I'm just happy,\" she said. He grinned at her.\n\nDavid rose from her body and gazed down as their hips moved together with increasing speed. A look of pure joy and wonder lingered on his face as he watched the playful motion of her breasts that swayed happily back and forth in response to his thrusts. He reached out and cupped them happily, feeling her nipples dancing in circles against the smooth palms of his hands.\n\n\"Oh man... I can't believe we're doing this!\" he erupted with astonishment.\n\n\"I know!\" she laughed.\n\n\"Like... you're my best friend! I can't believe we're fucking after all this time!\"\n\n\"It took us long enough!\"\n\nStill grinning, he leaned down and buried his face again in the hollow between her spirited breasts, squeezing them and nuzzling his face between her soft flesh.\n\n\"They're all yours...\" she whispered.\n\nPositioning himself to fuck her harder and faster, he began to enthusiastically drive his cock through her body with feverish jerking motions. She felt her breasts jostling uncontrollably. She felt his thick cock throbbing deep within her, generating waves of pleasure with its viscous friction.\n\n\"Oh fuck... yes! David!\" she groaned as she arched her back and quaked with delicious sensations. A shiny gloss began to spread across his forehead as he gazed down at the way he penetrated her body, gliding so smoothly into the deep pink hole surrounded by a slick, sloppy mass of hair dripping with cum.\n\n\"Ohh god, you're so wet...\" he groaned. His eyes seemed fixed on the length of his cock as it drove deep into her body and emerged again, over and over, glossy and saturated with her thick fluids.\n\nSydney reached up and cupped David's face. \"Jesus- why didn't you ask me to the prom?\" she blurted out.\n\nHis answer was immediate as if he had asked himself the very same question before. \"I wanted to! I didn't... I was nervous. I didn't realize you liked me that way!\"\n\n\"Goddammit!\" she groaned.\n\n\"Oh man... why couldn't I have known this back then!\"\n\n\"I know!\" she exclaimed. \"Now you owe me.\"\n\nDavid grinned. \"I owe you, do I?\"\n\n\"Yup. You made me wait so long, now you gotta make amends.\"\n\n\"And how do I do that?\" he asked.\n\n\"You owe me SO many sessions like this! We've got a lot to catch up on.\"\n\n\"Really...\"\n\n\"Yeah...\"\n\n\"What kind of sessions?\" he teased.\n\nShe hissed at him. \"Wild, unhinged, I'm-sorry-I-never-told-you-I-wanted-to-fuck-you fucks. Shit! We can even do it on your parents' couch. Or use your old bedroom when they're not home. I don't care.\" Sydney whimpered and scanned downward over his torso, settling at the place where their bodies connected. \"I just want that big cock...\"\n\n\"Which cock, this one?\" he laughed, slowly sinking it back inside her and drawing it back out of her pussy.\n\n\"Ohh, yeah. That one...\" she growled.\n\nSydney flipped over on top of him and pressed David down onto the cushion. She quickly guided his cock to her hips and sunk down onto it. Sydney began to ride David slowly at first, maximizing the sensuality of it and dividing her attention between his dizzy gaze and the deep pleasure of his body merging with hers. Then she began scooping her hips forward and back with an earnest milking motion until the music of his moans began to reach her ears.\n\nExcited by the sight and sound of his pleasure, Sydney began to bounce enthusiastically on his body, feeling the force of her buttocks thundering against his thighs as her body lurched up and down. David began groaning then reached up and grasped at her swinging breasts, delighted by the way they danced about in his hands.\n\nShe could feel his desperation, one that needed to satisfy an urge that went unaddressed for years. One that she shared. The urgency, the total unfettered need to fulfill an erotic desire that had gnawed at them for far too long. Their peals of laughter rang across the room, a joyous expression of the explosion of their sexual thrills.\n\nDavid took control next, gesturing to Sydney to move to her hands and knees. She widened and eased her hips backward, allowing her sex to expand in his direction. The fierceness of his desire caused David to pulse almost painfully as his cock extended itself achingly toward the shadowy entrance to her sex. Her lips were reddish with friction and still creamy from their previous activities.\n\nSydney's outer labia widened and expanded to swallow his girth as he eased himself back into her tight, rosy cavity. Her slick lubrication granted him easy entry as he felt her inner walls encircle his member and cling to his body with the same aching desire that he felt. She could feel him throbbing in the core of her body as he gently squeezed her cheeks and ran the long shaft of his cock forward and back, driving himself through her liquid depths and carrying with it tingling waves of pleasure.\n\nSydney moaned softly to herself as her head swung gently back and forth. She felt dizzy and drunk. Intoxicated on the swell of bliss that rose up from inside and consumed her whole body with a mad rush of indulgence. Two warm hands reached forward and feverishly clutched for her swinging breasts. She felt her nipples, hardened and sensitive, press back firmly into the palms of David's hands as he thrust his body wildly against the soft cushion of her buttocks.\n\nShe glanced back at her new lover's face. His eyes remained fixed between her legs with a look of wild lust and determination. The sight of his pure gratification, his delight at this intrepid encounter that arose so suddenly out of his discovery of her secret venture, sent her spinning into an unrestrained revery as her thoughts and emotions unwound into a progression toward absolute climax.\n\n\"David...\" she moaned suddenly, feeling herself approaching the limits of what her body could take before crashing through the boundaries of her own desires.\n\n\"Oh god... Sydney...\" he groaned, sensing that she was close to the edge.\n\n\"Ngh! Yes!\" she wailed, contorting her body as it began to quake with an excess of physical satisfaction. \"I'm coming! I'm coming!\"\n\nDavid continued to fuck her with a fierce urgency, his own internal crisis briefly distorting the sound of her screams. He felt a warm gush surge around his cock as Sydney's face dropped into the cushion and muffled her cries. After a moment she seemed to recover, becoming ravenous with the desire to provide him with the same release.\n\nShe switched back to missionary and guided his cock back inside her body. Fucking her again, faster and harder, David became frantic with his own desire to climax.\n\n\"Mmm... David...\" she whispered, reaching up to caress his chest. \"You made me come so hard... I'm so wet...\" His eyes grew wide and alert with a growing sense of crisis. She continued to egg him on. \"Yes, keep going. I want to see you squirt all over me. You can come on my boobs.\"\n\nAll of a sudden, David withdrew himself with a frantic urgency. He began sliding his hand back and forth along the length of his saturated cock as Sydney quickly rose onto her elbows and extended her chest, breathing rapidly.\n\nWith a loud groan, a thick stream of white fluid launched from his swollen cock and splashed across her chest, following by another, and another. Sydney felt herself stop breathing for a moment as the warm onslaught crossed the divide between them and showered her body, filling the air with the scent of fresh semen. She watched his handsome face overwhelmed with fervor as his pelvis lurched forward with each frenzied ejection. When he finished, she gasped for air and threw open her arms.",
        "David collapsed into her body, weakened and spent from a punishing orgasm. She enclosed him in her arms and they began to catch their breath together. The room smelled of their bodies. David rolled to one side and she curled herself against his chest, reaching down to gently stroke his body, quietly amused as he continued to dribble.\n\n\"Why didn't we ever do this?\" she mused softly.\n\n\"I don't know!\" he laughed. \"I think... I just worried that it might ruin our relationship by trying to take it to...\"\n\n\"Here.\"\n\n\"Yeah.\"\n\n\"You know what, though?\"\n\n\"What?\"\n\n\"I don't fucking regret finally doing it. At all.\"\n\nDavid grinned. \"Me neither.\" He exhaled across her neck as if letting go of something that had been nagging at him his entire life.\n\nSydney turned and gazed across the room.\n\n\"What?\" David asked, after observing her for a few moments.\n\n\"Oh, nothing,\" she said with a secret smile, gazing with amusement at the upright image of David's cock by the windows.\n\nIt sat there innocently, silhouetted against a bright future.\n\n***\n\nLater that night, Jacinta wandered back down the street from the North Star Diner. It was late, midnight, and her strawberry milkshake was giving her cramps but she couldn't wait any longer. She reached the studio and expressed relief that the windows were dark. She fished out her keys, unlocked the door, and slipped inside, anxious to finish executing her secret plans which the mysterious last-minute customer had ruined, forcing Sydney to lock up for the day instead of her.\n\nShe hurried back into the studio. The room was dark and quiet. She switched on the flashlight function of her phone and followed the beam to the storage rack facing Sydney's work area. Jacinta found her hidden camera. It was still recording. The duct tape she had placed over the little indicator light had done its job keeping its presence secret. She stopped and unplugged it.\n\nAs Jacinta stuffed it into her bag, a surge of wicked excitement flooded her mind. She thought of all the footage it had captured that day, all the men that had come to have a cast taken from their bodies. She'd get to see how Sydney worked. Moreover, she'd get to see all those men insert themselves through the opening, brandishing their thick, manly erections.\n\nThe thought of what she was about to see made her increasingly horny. All day long she had wondered what Anthony was packing that morning, what sort of member Tim was hiding in his pants that afternoon. She even derived a sinister satisfaction over the fact that she'd caught Sydney red-handed after riding the dildo before lunch. Every bit of deliciously incriminating evidence was now hers, as the camera angle had allowed her to capture anything and everything that went on in that room.\n\nMost of all, she wondered what that final visit from a handsome customer named David was all about. She hoped Sydney had led him back into the studio to address whatever matters he wanted to discuss. She'd hear their whole conversation, potentially addressing that perplexing claim of a female casting.\n\nIn just a matter of time, she'd know everything.\n\nJacinta rushed back out onto the street and locked up again, anxious to get home and view all the juicy details. No longer would she have to wait at the reception desk unaware of what was happening behind her in the studio, suffering that awful curiosity and the endless desire to sneak a peek at those men in a state of undress.\n\nNo, a wild night awaited her. A little private playtime with her favorite toys. Yes, she'd even pull out her Gary #1. Just a girl to herself having some naughty fun as she watched the show with voyeuristic glee.\n\nOne thing was certain. Work would never be the same again..."
    ],
    "authorname": "SolarRay",
    "tags": [
        "cfnm",
        "nude modeling",
        "dildo",
        "female masturbation",
        "fantasy",
        "toys",
        "voyeurism",
        "romance",
        "couple",
        "friends"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/david-number-four"
}