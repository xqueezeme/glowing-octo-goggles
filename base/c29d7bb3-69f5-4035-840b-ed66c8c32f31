{
    "title": "Three Strikes Ch. 10",
    "pages": [
        "It was Sunday morning and I decided to text Drew, Aaron, and Kurt. \n\n[Shane]: Hey, guys. Since we haven't gotten together for a while and I miss you, how about doing breakfast or lunch? \n\nAt least, that's what I told them. They didn't need to know the truth\u2014Donovan was working and I needed to distract myself. \n\nIt wasn't until I stepped out of the shower that I regretted making plans with them. It wasn't them, it was the fact it looked like Donovan had beaten my neck and chest with a golf club. How I did I not notice what he was doing? I asked myself as I moved my head from side to side and ran my fingers along each bruise. I counted one, two, three...eleven hickies. Eleven? \n\nIf I thought about it, it kind of made sense. Donovan had flawless and impeccable skin, a youthful vibrance, and he appeared to be impossibly strong for his size\u2014he was clearly a vampire. \n\nThe real question was, how would I get through breakfast with the guys without any of them noticing this bout of domestic violence? \n\nThe love bites both annoyed me and turned me on. Donovan must've enjoyed last night as much as I did to cause this much damage. I smiled at the mirror and finished drying off while catching glimpses of Donovan's passion along the way. Did I want to hide them or show them off? \n\nHide them. \n\nI snapped a picture of the damage and sent it to Donovan. I'd just finished getting dressed when I received his reply. \n\n[Donovan]: Looks like you could use an iron supplement. [link to article about anemia] \n\n[Shane]: Funny. Or you could not eat me alive. \n\nI waited a minute for his reply. When it didn't come so I shoved my phone into my pocket or I'd end up staring at it for way too long. \n\nIt was July and it was hotter than normal, but I had a neck full of bruises I needed to cover up. After a lengthy inner debate, I decided the truck had air conditioning and so would the restaurant. I grabbed a fleece and zipped it all the way up, covering most of the bites, but there were still a few that could be detected if you were paying attention. I was banking on the fact the guys wouldn't pay attention. \n\n****** \n\nHe yanked my collar down, revealing the marks they weren't supposed to notice. \n\n\"Oh, my god! Look at your neck!\" Drew yelled. \n\nI ripped his hand away and readjusted my jacket to cover my neck as the group animatedly laughed at my expense. There was no use fighting it, so I decided to let them get it out of their system knowing, once they were over it, it would be closed business. \n\n\"Shane has a boyfriend! Shane has a boyfriend!\" Aaron sang. \n\n\"Shane and Donovan, kissing in a tree. K-I-S-S-I-N-G,\" Kurt added. \n\n\"We haven't seen Donovan, but it doesn't look like there was much kissing happening, not mutually anyway,\" Aaron teased. \n\nThe guys went on for ten minutes before they finally tired of bashing me and moved on. At least, Drew tired of it and decided to change the subject. \n\n\"Guess who I talked to, yesterday?\" \n\nAfter a few impossible possibilities were thrown out, Drew filled us in. \n\n\"Thad! He's back in town for a few weeks and, since Eddie had to leave to help his mom, he said he'll play on the team.\" \n\nThad was an ex of mine. He and I dated ten years ago, when we were both in our mid-twenties. We only dated because we hung out with the same people, liked the same things, and we were both gay. I guess those are valid points for a relationship but what we had was always more of a deep friendship than anything romantic. Moving in together or a long term future were never conversations that crossed our lips. After two and a half years we decided there wasn't anything solid between us, so we split but have remained friends. \n\n\"That's great, I haven't seen him for...six or seven years,\" I said, after realizing how long it had been. \n\n\"I don't think any of us have, but he's actually going to join us this morning. He just texted me that he's parking.\" \n\n\"This won't be a problem with your boyfriend, will it?\" Drew looked at me with concern. \n\nOf course, Drew would be the one concerned about Donovan in all of this. I rolled my eyes. \n\n\"First of all, he's not my boyfriend and second of all, there's nothing to be upset about, so I don't imagine it will be an issue.\" \n\n\"Mm-hmm.\" \n\nHe wasn't convinced, but it didn't matter since it wasn't any of his business, so I let the conversation drop. I saw Kurt and Aaron look up and smile. When I turned around, I saw Thad Kerrington walk through the door. He'd always been good looking, but thirty-five looked to be his best year yet. \n\nHis hair was still as blonde as ever, eyes grey sparkling. If anything had changed, it was the fact he was wearing an additional ten pounds of muscle. He walked over, smiling, and we all got up and greeted him with a round of 'hey mans' and bro hugs. \n\nWe were in the middle of catching up when I felt my phone vibrate. I wasn't a big texter and everyone I talked to was at the table with me, so that meant only one thing, Donovan. \n\n[Donovan]: Not eat you alive? That's absolutely no fun, plus I didn't hear you complaining...unless the moaning and thrashing was your way of telling me you didn't like what was happening...and I doubt that. I g2g. Dinner? \n\nI took a deep breath and bit the inside of my cheek to stop myself from smiling too much. There was no reason to overreact because it was only Donovan saying sexual things then asking me to dinner. It wasn't a big deal. \n\nBut it was a big deal and I smiled as if it was a big deal, and then I almost laughed because I couldn't believe how giddy I was feeling. Giddy was definitely a word my dad would've frowned upon to use when describing feelings of masculinity. \n\n[Shane]: It's about time I get wined and dined. \n\nI smiled again and put my phone away, all the while thinking about dinner with Donovan. That's when I noticed it was unusually quiet and looked up to find everyone staring at me. \n\n\"What?\" I looked around the group as they burst into laughter. \n\n\"Oh, man, you should've seen your face.\" \n\nAaron looked at his phone and mocked me by making dopey looking faces until Thad made a comment. \n\n\"I'm surprised to see you so lovesick.\" \n\nDrew took it upon himself to reach over and pull my collar down, once again showing off Donovan's bites. Thad's mouth dropped with surprise. \n\n\"I can't believe what I'm seeing. Shane Kelly with not one hickey, but a baker's dozen? This from the same guy that barely acknowledged having a boyfriend in public and would freak out at the thought of necking? Who is this man? I must meet him.\"  \n\n\"Donovan, and he's like no one you've ever met before,\" Drew gushed. \n\nAaron playfully hit the back of his hand against Drew's shoulder in a joking manner. \n\n\"It says a lot that he managed to get Shane and Drew to fall in love with him.\" \n\nWe'd been teasing Drew, for a while, about how he was secretly in love with Donovan and that he was pining after a gay man. To my knowledge, he wasn't bi nor had he ever messed around with a guy before, but he'd made a few comments over the years, which made it seem like he wasn't appalled by it, either. If the right gay type situation presented itself, he might see where it went. \n\nWe might have been joking about him and Donovan, but I knew there was a shred of truth about it and it's probably why he never really fought us on it. It didn't bother me because I understood where he was coming from and how easy it was to be attracted to Donovan. Drew turned his attention to Thad as if he were about to tell the secrets of the world to him. \n\n\"They can joke all they want, but Donovan's a fucking badass. Hypothetically, if I was to be gay or whatever...hell ya, it'd be with him! He's nice, he's funny, he doesn't give a shit, he's good at baseball, and he's as cute as hell...you know, for a guy.\" \n\nWe all laughed when he tried to shrug off his love confession as if it was no big thing. I felt my own heart swell a bit while listening to Drew talk so highly of Donovan. I knew all of the things he said were true, but it felt good to hear my friends agree. I'd been nervous they'd have a lot to say about me dating someone who was so...unlike anyone I'd ever dated before. Someone who took an hour to do his hair, had the skin of an angel, and was not the typical manly man that we were accustomed to. \n\nI gripped the base of Drew's neck and squeezed enough to be moderately intimidating. \n\n\"You better watch it because he's my b\u2014friend.\" I recovered quickly from my almost faux pas. \n\nDonovan wasn't my boyfriend, but he also wasn't not my boyfriend and the look on my face must've been amusing because the boys roared with laughter and resumed their relentless teasing. \n\nKurt flicked my neck and laughed. \n\n\"Well, he's some kind of friend to mark you up like that. Drew has a point. I'm not in love with the guy like Drew is, but Donovan's a cool dude. I think he's a good match for Shane.\" \n\nThad looked at Aaron. \n\n\"Drew and Kurt have been won over, what are your thoughts?\" \n\n\"Let's just say, if it came down to Shane or Donovan...\" he removed his hat, put it over his heart, and bowed his head with respect. \"Rest in peace, Shane. It was nice knowing you.\" \n\nThe group erupted again and I punched his arm. I was smiling though and glad Donovan was so easily accepted by my friends. Thad asked more questions and my friends filled him in on pretty much every detail from baseball to the club, sex, morning after, me being weird at the bar, and on and on. \n\nThad was getting a kick out of the stories and even though I was embarrassed, I loved the fact Donovan was so easily a part of the conversations. After we'd finished breakfast and were just sitting around, Thad looked at me, seriously. \n\n\"Drew was right, this guy sounds like no one I've ever met, but I can't help but wonder...at some point, are you planning to take him home to meet your parents?\" \n\nSpecifically, he was actually asking if I was going to introduce Donovan to my dad, who we all knew wouldn't care for him too much. I hadn't known Donovan for long, but it would be a lie to say I hadn't spent a substantial amount of time worrying about my dad's reactions. It wasn't only worrying about what my dad might say or how he'd act toward him, it was also what he'd say and how he'd act toward me. \n\nI would've loved to say, 'if it came down to it, I'd pick love', but the truth was, as hard as my dad was sometimes, he was my dad and I loved him. He was a great father and dedicated his life to his kids. That's not something easy to walk away from or stand up against, no matter how much of an asshole he can be. I care about my dad's opinion and it was tearing me apart. \n\n\"We're not there, yet. When and if, we do make it that far, I'm not going to hide him from my dad, but I'm not going to rush a meeting between them either. We'll see. I'm not going to overthink it.\" \n\nLie. \n\nI felt my phone vibrate. This time I didn't try to contain my smile and I didn't care about the smug ass smiles my friends were wearing as they watched me. I only thought of Donovan. \n\nShut the fuck up bitch! I'm happy, would've been Donovan's response and it made me smile. \n\n\"Suck my dick. I hate you all,\" I flipped them off then quickly swiped my phone to read what he wrote. \n\n[Donovan]: Shit, you thinkin I'm gunna be your sugga daddy and yet you don't put out? Boi, you be confused as fuck. Pick me up at 7. \n\nEveryone watched me laugh, then eagerly responded. \n\n[Shane]: Oh? I have to put out to get nice things? Well, we'll see how dinner goes and maybe... \n\nI heard a camera phone shutter and looked up to find Kurt pointing his phone at me and laughing. Thad and Aaron leaned in, looked at Kurt's phone and immediately started laughing, too. Of course, Drew wanted in and begged to see what the commotion was and, of course, he started laughing also. \n\nFinally, I grabbed his phone so I could see for myself what the big deal was\u2014it was a picture of me texting Donovan. I was biting my lip, trying to hide my smile while I intently stared at the phone. The picture was both embarrassing and cute, but mostly embarrassing. \n\n\"Dude, you have it so bad.\" \n\nThey made a few more comments before they finally moved the conversation on and started talking about going out for drinks Monday after practice, but I mostly ignoring them when I felt my phone vibrate, again. \n\n[Donovan]: In that case, we'll go anywhere you want. ;) \n\n[Shane]: Unfortunately, we can't go anywhere nice. \n\n[Donovan]: What? Why? I need to wine and dine you ASAP!! 8===D \n\n[Shane]: Maybe you should have thought about that last night before you made me look like a two dollar whore. \n\n[Donovan]: Maybe you shouldn't act like a two dollar whore! Or take iron sups. Dinner in? Take out? \n\nWe texted a little while longer and finalized details. I tried to keep it toned down because I already sucked at communication and the last thing I needed was the added complication of trying to read into a text message without actual tone or facial expressions and having him misinterpret one of my texts. \n\n*** *** *** *** \n\nI picked up wings and fries and arrived at Donovan's around seven that evening. I'd wanted him to come over to my house, but it'd been torn apart from the remodel for a while and wasn't really ready for company since, depending on the phase, I was living between my house and Aaron's spare room. \n\nDonovan had set the table very nicely with place settings, candles, and fancy decor. I looked at his Martha Stewart presentation and smiled. \n\n\"This is quite the set up for finger food,\"I said as I set down the Styrofoam boxes full of chicken wings and French fries and started dividing them among the two plates. \n\nHe was holding fancy cloth napkins and used one to hit my shoulder. \n\n\"I'm trying to wine and dine you. I didn't realize you were such high maintenance.\" \n\nHe started mocking me using a ridiculous valley girl tone. \n\n\"Omg! Don't pull my shirt up because I'm a fucking virgin and we can't have sex because I'm trying to be intentional and shit. Aren't you going to take me fancy places and spend all of your spare time with me? I mean, I don't put out for nothing. Oh, wait! I look like a whore so now you have to figure out how to impress me over a plate of fucking chicken wings since I can't be seen in public.\" \n\nThe way he covered his neck you'd think his carotid artery got slashed. Onec he felt like he'd made a big enough scene, he dropped his hand and smiled brightly. \n\n\"You impress me plenty.\" I slid my hand around the back of his head and pulled his lips to mine. \n\nI gave him the most intense and passionate kiss I could manage without ripping his clothes off right there in the dining room. Everything about Donovan assaulted my senses\u2014his silk hair, his soft and smooth skin, his sensual lips and tongue, plus he smelled happy, light, gentle, fresh, and manly\u2014like no one I've ever known. \n\nI could tell he was really starting to get into the kiss because he started to grasp on to me like I might slip through his fingertips, which is exactly what I was planning on doing. As much as I wanted to take him then and there, I also thought it'd be enjoyable to build things up and keep him wanting. It's satisfying to enjoy the bounty of a slow harvest. \n\nI abruptly pulled away, leaving him standing against the wall, trying to collect himself, as I continued to prep dinner. \n\n\"How many wings do you think you want?\" I asked, as if nothing had just happened. \n\n\"Oh. Uh. Whatever.\" \n\nHe was panting as he staggered over and carelessly sat down on the chair. Power was a strange and addicting thing to have. I smiled as I watched him try to pretend he was unaffected by me. \n\n\"What did you end up doing today, Shane?\" \n\n\"I went out to breakfast with the guys and Thad joined us, then I worked on my house a little, texted you, and now I'm here.\" \n\nWe smiled at each other and he curiously asked. \n\n\"Who's Thad?\" \n\n\"We all went to college together and I dated him briefly after graduation. He's in town for a few weeks and is going to be filling in on our team, now that Eddie's out.\" \n\n\"An ex, huh? That's juicy,\" Donovan gave me a playful look. \n\nI laughed. \"Juicy? No, we're going out for drinks Monday night, though. Would you like to come?\" \n\n\"And meet the one who got away?\" \n\n\"The one who got away? As in, an empty pop can that falls out of your truck but you're too lazy to bend over and pick it up so you watch it roll away? Sure, come and meet the one who got away.\" \n\nWe laughed and both started cleaning the dinner mess. \n\n\"Sounds fun. Where are we going?\" \n\n\"Ballers and Beers.\" \n\nDonovan jumped up and down in faux excitement. \"Oh, yay! A butch night! We can all drink Jack and Coke, grunt into the wind, and stare at the slutty waitresses.\" \n\nHe pretended to stick his finger down his throat and gag. I pulled him toward me as I stepped backward until I sat on one of the chairs, pulling him onto my lap. His green eyes lit up when I wrapped my arms around him and he kissed me on the lips. \n\n\"You don't have to go, I just thought it'd be nice.\" \n\nHe let out a huff as his shoulders sagged and he rolled his eyes in annoyance and...concern. \n\n\"No, its fine. I just don't really fit in at places like that.\" \n\nHis fingers were fidgeting with my shirt and he wasn't holding eye contact. His discomfort was obvious, and I felt bad that this was something he was concerned about. I squeezed his cheeks together, puckering him like a fish, and kissed his lips.  \n\n\"Don't worry, my friends like you more than they like me and they won't let anyone say or do anything to you...and neither will I.\" \n\nEncouraged by my words and maybe my kisses, Donovan sat up straight and smiled confidently. \n\n\"I suppose, if my big, strong...\" \n\nPanic flashed in his eyes as he looked away. I raised my brow and I waited for him to finish the sentence. Big, strong...boyfriend? Friend? Fellow ball player? One-time fuck buddy? \n\nHe cautiously finished his statement. \n\n\"...friend\" his voice caught slightly, \"...is there with his friends, everything will be okay.\" \n\nI narrowed my eyes at his use of the word friend. I wasn't going to make a big deal out of it. He clearly wasn't interested in a title change. At least, not yet. Instead, I pulled him down and kissed him, for real that time and he encouraged me by wrapping his arms around my neck and pulling us closer together. \n\nHe straddled my lap and we made out for a while. I couldn't help but move my hands up and down the smooth skin of his back and over the curve of his waist. Starting at his hips, I traced the waistband of his pants with my fingers until they met below his navel where his pants were buttoned. \n\nHis tight stomach trembled as I dipped my fingers and, using the fabric, I pulled his hips to mine. I kept my fingertips anchored on his pants as he rocked his hips against mine, encouraging me to unbutton him. \n\nI smiled at his sluttiness and decided to play with him for a while. It was only fair since I felt as though he had wrapped me tightly around his perfect little finger. I moved my hands enough to create the illusion that I was about to undo his pants. When the moment didn't come he moaned, pressed his hips forward, and kissed me harder and with more desperation than before. I was drowning so deep in lust I thought I'd never find my way to the surface again. \n\nHe knew how to use his body with expert precision. My arousal peaked when he started sucking on my ear. I thought I might actually melt into the chair. He was gorgeous, absolutely stunning as he grinded himself against me like an erotic dancer, lost in a haze of lust. ",
        "\"We should go upstairs,\" he whispered between licks and nips. \n\nI forgot about my plan to drive him crazy. His words were like fuel to my fire and I didn't wanna do anything to squelch it. The new goal was to go upstairs, strip him naked, and have my way with him before he came to his senses. \n\nI stood with him wrapped around my waist. I could feel his excitement intensify by the way he kissed my lips. Everything he did was frantic and hurried...and I loved it. Passionate Donovan was teetering on edge of being overwhelming. He doesn't half ass anything. He held onto my neck like it was his personal life line. I entertained the idea that there was nothing he wanted more than for me to carry him upstairs, and that thought made me very happy. \n\nI know I wasn't good at showing it, but my life changed the moment I saw Donovan. The things I felt for him terrified the very fiber of my being. I was walking a tightrope of fear. One side was fear of the unknown and the desire to protect myself. The otherside was fear that I was going to mess up...trying to protect myself. \n\nThen there was this knot in my stomach that no matter what, there was no way that Donovan shared the same feelings I had for him. I understood, I hadn't made a good impression. \n\nInstead of taking him upstairs like he wanted, like I wanted, I walked to the front door where I tried to carefully set him down. 'Tried' being the key word. Donovan clung to my waist like a garter does on an opera singer and there was no way he was going to let go. When he realized what I was trying to do, he looked at me with panic and confusion. \n\n\"What are you doing?\" \n\nThe look on his face was enough to resolve what little self control I had. His face was flushed, his lips were swollen, and his eyes held all his emotions. My heart swelled at his reaction. I gave him a gentle kiss and disengaged his legs until he had no choice but to slide down my body until he was standing on his own two feet. His giant puppy-dog eyes were both asking what's happening and begging me to stay. \n\n\"I'm going to go home.\" \n\n\"Umm, no? I think you should stay.\" \n\nHe grabbed my hand and pressed it to his crotch where I easily felt his rock hard erection. He dug his fingers into my shoulders in an effort to keep himself standing as I gently kneaded his denim clad erection. He made it impossible to say no, but I had to. I continued touching him as I leaned forward to whisper into his ear. \n\n\"Too bad I'm only a big, strong...friend.\" \n\nI pressed into his lips with one last steamy kiss before completely pulling away. I smiled when I heard him whimper and mumble as I gently closed the door behind me. \n\nI wanted Donovan so badly. How I ever made it out of his house was a miracle I'd never understand, and whatever superpower I had a few moments ago had vanished the second I was safe in my truck. My skin was still tingling with aftershocks of Donovan's frantic desire. \n\nI'd like to think I had more self control in my mid thirties than I actually did, but I didn't. I pulled over in the first deserted parking lot I came across. I unfastened my pants, pulled my throbbing cock out, and started stroking myself. \n\nDonovan. \n\nDonovan gyrating on my lap. His fingers pressed against my skin. His eyes lost in a haze of desire. His skin trembling from my touch. \n\nWith the image of Donovan fresh in my memory, it didn't take much effort to release the pent up desire I had for the guy, right there in my seat. \n\n*** *** *** *** \n\nMy job was a mixture of presentations, meetings, working from my office, and supervising job sites. I was glad to be stuck in the office Monday since my neck looked worse than it did Sunday and July isn't the month to sport a turtleneck without losing potential clients because they'll think you're a whacko. \n\nThe whole day passed quickly\u2014the way it does under the looming pressure of deadlines. Before I knew it, I was going out the door and on my way to practice. I checked my phone a few times throughout the day, in case I'd missed anything important. Besides a few business calls, and expected texts from the guys regarding baseball and drinks afterward, I hadn't received anything. Nothing. Zilch. Radio silence. \n\nA thousand possibilities crossed my mind as to why I hadn't heard from Donovan. Most probable? He was upset that I left him high and dry last night. If he thought it was easy for me than he needs his head checked. And I didn't do it to play games. I have no disillusion, even though he was humping me last night, I'm on his shit list. If we would've slept together who knows how he would've felt afterward. I want\u2014need him to want me as much as I want him. That's the only reason I left. I feel powerless around him and I need something, some semblance of control. \n\nIf he was upset, then I wasn't about to text him and chance a case of preventable miscommunication. In the best situations\u2014I suck at communication. Texting? Forget it, I will fuck shit up more than I already have. I decided to leave it alone until baseball. \n\n*** *** *** *** \n\nIt was fun having Thad back. Back in the day, we played ball together. Sometimes just the five of us and sometimes in group settings such as men's league or coed. With regard to my time spent with an ex, having him back on the team was one walk down memory lane that I wasn't opposed to. We always got on well enough and having him here proved that nothing had changed, that we were still friends. \n\nIt was the last play before practice ended. I sent a really crappy throw. It bounced off of the ground and nailed Thad on the knee. It wouldn't have been a big deal except I knew he had a bum knee. He'd had problem with it since a skiing accident when he was twenty. Two surgeries and half dozen hardware pieces later, he was a walking weather station. Although I doubt anyone else noticed, I saw the wince on his face and I immediately felt guilty for aggravating a old injury. He ended the play by throwing the ball to first, who threw to third, who sent it home. While everyone ran off the field, I ran straight to him. I gripped the back of his neck and pulled his head to my shoulder. \n\n\"I'm so fucking sorry. I didn't mean to give you such a shit throw.\" \n\nStill gripping the base of his neck, I pulled him back and looked at him in his eyes. Being the macho man he was, I knew he liked to downplay stuff like this. But I knew him well enough to know when he was full of shit. \n\n\"Are you okay?\" \n\n\"Ya, I'll be fine,\" he smiled, although a bit strained. \n\nI pulled his face closer and gave him a serious stare down, \"Don't fucking lie to me.\" \n\nHe rolled his eyes and pulled away from me. \n\n\"Okay, fine. It hurts like a mother fucker. Are you happy? Can we not make a big deal about this in front of everyone?\" \n\nI nodded happily and patted his cheek with a bit of excessive force; a reward for good behavior. As I walked with him toward the dugout I saw Donovan waiting with a few other guys, including Drew and Kurt. I was happy to see him. He looked a little irritated but it was expected that after I left him high and dry. I wasn't too worried, nothing a little extra attention wouldn't fix. \n\nI hit Thad's shoulder and pointed in Donovan's direction. \n\n\"Do you think you can move a little faster, gimpy? Donovan's here and I'd like you to meet him.\" \n\n\"Fuck you. You're the one that tried to take my knee out,\" he laughed. \n\nWe raced the rest of the way to the dugout and gathered our stuff before finding everyone else. Donovan was watching intently as Thad and I approached the group. I wasn't sure what to do since we were still in that awkward phase where we weren't dating, but we weren't not dating. Was I supposed to kiss him or awkwardly stand next to him? I'm just a big strong friend after all. \n\nI stood next to him, because I wanted to. I tried to lessen the awkwardness by discreetly leaning against him. \n\n\"Hi.\" \n\n\"Hi,\" he lightly chuckled at my lame attempt at discreteness. He tried to pretend like he was unimpressed by my presence but I knew he was happy to have me there. Our eyes caught for a minute, we looked at each other and smiled\u2014it was the best fucking minute of my life. \n\nWe were interrupted when Thad stuck his hand out toward Donovan. \n\n\"I'm Thad, longtime friend of Shane.\" \n\n\"I'm Donovan, shiny and new boyfriend of Shane,\" Donovan teased as they shook hands. \n\nThey made small talk while I stared at Donovan in disbelief. I knew he knew I was staring, but he wasn't about to look me in my eyes and acknowledge that he'd just officially made me his big, strong boyfriend. \n\nWhen finally looked at me and my smug grin he did his classic eye roll and tried not to smile as everyone dispersed, either to the field or home. \n\n\"Shut up. I have to go to practice,\" he started to walk away, but I yanked him back. \n\n\"Doesn't your big, strong boyfriend get a kiss goodbye?\" I leaned in to kiss him, but he ducked away before I had a chance to drive one home. \n\n\"After last night? Not a chance in hell. You have some making up to do and you can start by being half naked with your lips around my dick...begging for forgiveness. Then we'll talk about a damn fucking kiss. I'll call you after practice when I'm on my way to the bar. Later, skater.\" \n\nHe was already walking away when he threw a peace sign over his shoulder before ducking into the dugout. There was no doubt he meant business. He wasn't going to let me get away with leaving him cold turkey again. But hey, we were boyfriends. \n\n*** *** *** *** \n\nWe arrived at the bar after practice and found a comfortable booth. We decided to start with a few drinks and appetizers as we (mostly I) waited for Donovan to join us. We spent the majority of the hour asking Thad questions about life since he'd moved to Atlanta. \n\n\"Sounds like things are going pretty good for you. Is there any chance you'll move back?\" Aaron asked. \n\n\"Nah, not in the foreseeable future anyway.\" \n\n\"Why not? Boyfriend?\" \n\nThad smiled and nodded. \"Yeah, something like that. Nothing serious, yet, but who knows.\" \n\nHe shrugged, but the group wasn't buying it. They wanted to know everything\u2014name, age, job, and what he was like. They didn't let up until he was singing like a songbird. \n\n\"His name is Jordan, he's thirty, physical therapist, and he's tall, dark, and handsome, just like I like 'em.\" \n\n\"You haven't really strayed much, have you? I don't think you've ever dated anyone that didn't fit that description,\" Kurt added. \n\nThad looked at me, \"Unlike some people, I like to stick with what I know.\" \n\nHe was teasing, but the comment still pissed me off. I was already hyper aware of our differences and potential obstacles they might cause with my family. Plus, after last night, I was aware Donovan was worried about rude comments from ignorant strangers and I didn't want that to include my friends. \n\n\"Well, what I knew clearly wasn't working.\" \n\nThere might have been a bit of bite to my words but I didn't want to deal with this shit from my friends. I wanted Donovan to be easily accept, just like Thad was, only I wanted more with Donovan then I ever wanted with Thad. \n\nHe raised his hands and backed off, \"I didn't mean anything by it, it's just\u2014he's nothing like your usual picks. I have to admit, he's a bit more...\" \n\nEveryone turned their attention to Thad, waiting for him to finish his sentence. It looked like everyone was ready to snap at the wrong reply. He noticed and decided to choose his next words carefully. \n\n\"...well-kept, than I was expecting,\" his voice broke on his word choice. \n\nMy phone started ringing before I had a chance to slap him upside the head. It was Donovan, letting me know he was pulling into the parking lot and he'd be in soon. Since we hadn't had a proper hello, I decided to slip out of the booth and meet him outside. The group was looking at me strangely when I stood. \n\n\"Donovan's here so I'm going to meet him outside,\" I smiled innocently. \n\n\"Oh, does he need an escort?\" Thad joked. \n\n\"No, I just don't want to suck his dick in front of you pervs.\" \n\nDrew snapped his fingers with disappointment and everyone laughed. I stepped outside just as he was getting out of his 4Runner and started walking toward me. He looked amazing in his skin-tight jeans; a tight, long sleeve shirt with the sleeves pushed up to his elbows and showing off his long lean body and of course, his hair was perfectly styled\u2014you never would've guessed he'd just finished baseball practice. He smiled as he got closer and playfully winked at me. \n\n\"Hey, cutie.\" \n\n\"Hey, yourself.\" \n\nThe second he was within reach I grabbed his hand and dragged him toward my truck. \n\n\"Wha...where are we going?\" He asked as he stumbled behind me, thrown off by the suddenness of my movements. \n\nI was parked at the edge of the lot, next to a tall chain link fence with green plastic slats for privacy. I opened the back door then faced Donovan and put my hands on his waist. \n\n\"Ready.\" \n\n\"What the fuck for?\" \n\n\"To forgive me.\" \n\nBefore he could say anything I tossed him on the seat, ripped his pants down, and wrapped my lips around his cock in one fluid motion. I didn't give myself a chance to worry about the fact it was summer and still light out or that we could've easily been caught. My truck was partially hidden but it was definitely not totally secure. \n\nHe cried out as he watched me bring his unexpecting cock to life. I closed my eyes as I felt him expand in my mouth and between my fingers as I stroked, licked, and sucked him as if my life had depended on it. I wouldn't say I loved giving head, but I sure as hell loved making Donovan happy. There was nothing more satisfying than feeling his body shake with pleasure because of me. His fingers gripped my hair and the cute noises he made as I brought him closer and closer to release made everything in me swell. \n\n\"Oh, Shay, I'm close,\" he warned out as his stomach clenched. \n\nI don't know if he thought I was going to stop, crazy boy. No, I doubled my efforts until his body tightened and I felt his flavor flood my mouth. When I was sure he was done I released him but only to carefully licked him clean while he tried to catch his breath. \n\nI pulled him to a sitting position then claimed my well-deserved kiss. \n\n\"What the fuck was that for?\" He was looking all sorts of dazed and confused. \n\n\"I wanted to kiss you and you gave me very explicit instructions.\" \n\nDonovan's smile was so bright it burned my soul. \n\n\"A man who follows directions, I fucking love it,\" he pulled me forward and kissed me with the same passion I had while sucking his dick only a minute before. \n\n\"I'd love to stay here longer and keep doing this but you should probably pull up your pants. Everyone's waiting for us.\" \n\nHe obliged and I helped him get his clothes situated, spending a little extra time making sure he was property tucked in. I laughed when his brow perked at the extra attention. \n\n\"What?\" I feigned a genuine innocence. He simply mumbled and rolled his eyes, but never stopped me. \n\n\"I'm just making sure everything put away properly.\" \n\nI checked his hair for him, not that there was anything out of place, before walking toward the front door. He tugged my arm slightly before we stepped inside. \n\n\"You failed to mention Thad was actually Thor: hulking hot superhero,\" he teasingly smiled, but I didn't miss the underlying insecurity, or maybe it was jealousy. Inwardly it made me happy to think Donovan was jealous. I'm not exactly in high demand and I've never had anyone jealous over me, so this was new. \n\n\"I guess?\" I shrugged. \"I'm not a fan of Thor myself so...\" \n\n\"Why can't your ex be ugly?\" \n\nI tried to slip my hand down the back of his pants to give him a quick and crude squeeze but they were so tight it took a lot more effort than I'd originally anticipated. \n\nDonovan looked at me with a grin and teased, \"Problems?\" \n\n\"Yes, you like to wear stuff that makes you really difficult to access,\" I kissed his forehead as my hand burrowed it's way until it was squished against his firm buttcheek. \n\n\"I'll tell you what. Come to my house tonight and I'll make sure everything is very, very accessible.\" \n\nI had literally blown him two minutes ago, yet you'd think I was a virgin the way my body responded to his insinuation of sex. My breath hitched, my heart jumped, my brain seized, and my dick twitched. I must've stopped moving because he tugged me forward. \n\n\"First, we have to hang out with your friends,\" he laughed. \n\nFriends? What friends? Why the fuck did I have friends again? \n\nI gathered my bearings and wondered how I'd make it all evening knowing I'd get to have Donovan, again, in just a few (long) hours. I don't know what changed from last night but suddenly I wasn't nearly as worried about waiting. It was probably the fact he admitted that we were dating, paired with the fact he wanted sex immediately after getting off, so I knew it wasn't just a hormone induced decision. Donovan wanted me. The best part? Since it would happen in his bed, I felt confident he'd be there when I woke up. Waking up next to Donovan was something I'd fantasized about ever since the first morning I stopped by, unannounced, and saw him in his morning glory. \n\nI was almost thankful he'd slammed the door in my face because I needed a moment to process what I'd seen. Donovan was always showcase presentable, always had a manicured, well put together, and confident air about him that could sometimes be a little overwhelming. \n\nSeeing his blank canvas was like looking through a window into another dimension\u2014innocent, soft, vulnerable, childlike, and a different level of fucking hot as hell. So hot, in fact, I couldn't stop myself from chasing after him and pinning him down onto the stairs so I could try to burn his image into my head. Of course, I had to kiss him after that because...biological response. Yes, it was science. \n\nAs we approached the table, Drew started yelling and waving. \n\n\"Donovan!\" \n\nHe got up and they exchanged the European-style cheek kisses, which made me roll my eyes and laugh inwardly because it was Drew's way of not being gay for Donovan. Aaron, Kurt, and I made knowing eye contact and laughed. Drew is so fucking gay for Donovan. \n\nThad looked at us and silently demanded, \"What's going on?\" \n\nAaron nudged his head toward a drooling Drew and flirty Donovan, then joined his fingers together in a heart shape and thumped it over his chest. Thad caught on and joined us in our silent mockery of the strange love affair between my best friend and boyfriend. \n\n\"Donovan, can I get you anything to drink?\" Drew asked. \n\n\"If you don't mind, I think I'll buy my boyfriend's drinks.\" \n\nI'd be damned if another man, gay or straight, was going to buy my boyfriend anything. I looked at Donovan, who was wearing a smug grin and asked if he wanted his usual. He nodded and winked. I went to the bar after expressing myself as Donovan's dominate and the thought made me chuckle. I was pretty sure I'd need Donovan's permission first, which he'd given me in the way of his smile and a wink. It's okay Shane, you can be the big boss tonight. *smile* *wink*' \n\nWe talked a ton about baseball and I was impressed by how knowledgeable Donovan was. In fact, there were a few times when Donovan would challenge something someone else had said with an opposing argument or different fact or figure, such as a player's batting average, number of home runs in one game, draft pick statistics, or overall rankings. \n\nWe'd have to google the answer and Donovan came out ahead, every time. I had a suspicion he'd spent the last two days googling everything about baseball so he could try to show off in front of the guys. I kind of like the thought. Was he trying to impress me or my friends? Impress my friends so he could impress me? He didn't need to, he'd made an impression already. ",
        "I never liked PDA and I still don't, but I was finding it increasingly difficult to not want to touch him in some way\u2014a hand on his thigh, arm around his shoulder, or silent footsie under the table. I was very proud of him. He was more than a beautiful face\u2014he was smart, talented, funny, and if his last minute google research was any indication, he likely had a photographic memory. \n\nI'd gone to the bar a few times for fresh drinks and to the restroom while Donovan appeared to hold his own with the group, specifically Thad. They'd been left alone a few times during my excursions out, which happened to align with the rest of the group, and they appeared to get along just fine, which made me happy. \n\nI was on my way back, after using the bathroom, when I saw Drew chatting extra intimately with Donovan. I wasn't worried or jealous, but I still pulled Donovan close to me when I sat down. I still wanted to asserted myself as his boyfriend. Drew noticed and rolled his eyes. \n\n\"Calm down there, Richard Gere. I'm not going to steal your pretty woman.\" \n\n\"Excusez moi? Exactly when did I become a female prostitute? If anything, I'm Richard Gere. It was only a few nights ago when Julia Roberts here (pointed his thumb at me), demanded I wine and dine him if I wanted him to put out. Then he was all high maintenance like, 'but we can't go out because you gave me a couple tiny little bruises, you asshole'.\" Donovan was overly dramatic as he told his version of the situation. \n\n\"Why is it that every time you impersonate me, I sound like a fourteen-year-old valley girl? And they aren't a couple of tiny little bruises!\" I barely fought back laughter as I showed off my still very apparent, bite marks. \"I had someone ask me if I needed the eight hundred number for the domestic violence hotline.\" \n\n\"Oh-my-god, shut up! You're such a fucking drama queen. As if you weren't moaning like a heifer in heat. A few more minutes and you would've been on all fours, with your ass in the air, and begging to be inseminated,\" he retorted. \n\nEveryone at the table was laughing hysterically, including myself. Donovan's theatrics made everything he said funnier. \n\n\"That'd be the day,\" Thad laughed. He thought the comment was funnier than anyone else. \n\nDonovan shot Thad a quizzical look. \n\n\"The day Shane has his ass in the air for anyone? The guy's the top of the tops. Have you ever tried to touch his butt?\" \n\n\"Uh, yeah,\" Donovan hesitantly replied. He looked at me and I could see the pieces come together. He hadn't noticed, until then, the few times he'd touched my butt, I'd always rerouted the situation. \n\nThad laughed, \"Exactly. Shane has a weird complex about his monster butt. Two and half years and I never got close and you better believe I tried hard for it.\" \n\nI rolled my eyes. Hearing things like monster butt definitely didn't help alleviate the insecurities that'd built up over a lifetime of literally being the butt of the jokes. I saw Donovan's mood change ever so slightly. I couldn't read him but it irritated me that he was uncomfortable. I narrowed my eyes at Thad, trying to tell him to shut the hell up, but he only laughed. \n\nThe next hour passed, but not fast enough since most of it was Thad and the guys reliving the glory days, of which Thad appeared to overly enjoy highlighting different aspects of our relationship. All of which made me look really undesirable. It also wasn't lost on me that Donovan seemed to throw back his drink quicker than before and, by the time the evening was drawing to a close\u2014was borderline shitfaced. \n\nI've been on the receiving end of angry Gordy, and he didn't seem to be angry, but he wasn't as happy as before. It's possible I was over analyzing everything, worrying because of Thad. \n\nDonovan, not so innocently, slid his hand up my thigh and graze it across my crotch. Not expecting him to be quite so brazen, my eyes whip in his direction only to find him fully engaged with the rest of the group...even though his hand is all over my junk. \n\nI wonder if he knew how hot he looked. Not just because he was touching my crotch, but because he's stunning. I wanted to take him to the bathroom and bang, but Donovan was wasted. The last time he was wasted we had fantastic sex, that was followed by his 'great escape'. Except, as far as I was concerned, there was nothing great about it and I wasn't exactly keen on re-living it. \n\nTo make matters worse, I started to wonder if he only wanted to have sex with me when he was drunk. It made sense, since the first time we had sex, he was wasted and the last time we almost had sex, he'd had a few drinks with dinner. He was still rubbing my crotch and not getting a quick reaction since my mind was stressing about everything. \n\n\"Well, I think it's time to call it quits. Work comes early, regardless of the night before,\" Aaron said. \n\nEveryone followed his lead and started grabbing their jackets, called cabs, and closed out their tabs. I didn't drink much\u2014three beers\u2014over the course of five hours so I grabbed Donovan's keys and drove him home. He was still under the impression we were going home to have sex, so he spent the whole car ride leaning over the center console as he kissed and rubbed on me. \n\nI'd liked to say I was unaffected by it, but I can't. He was hot and I could probably get aroused watching him make a sandwich. It still didn't change the fact I wasn't going to allow our first official time together to be a repeat of our actual first time together. If I'd been on the fence about throwing caution to the wind, the fact he reeked of booze and his dirty talk was slurred as well as borderline incoherent, nipped my desire right in the bud. \n\nI tried to get him to stay in his seat and after a few minutes of obedience, I looked over only to find he'd passed out. He looked cute though. His head was drooped at a weird angle. I'm sure if he saw a picture he'd cry about his double chin, but I could have easily sat there in my car and watched him all night. \n\nParked in his driveway, I took a moment to run my thumb across his soft cheek, then across the side of his head just above his ear. With a kiss on the forehead, I carried him bridal style to his room, stripped him to his ridiculously hot boxer briefs, and put him to bed with minimal issues. I even made sure his alarm was set for work. \n\nI glanced back one last time, just to see his sleeping form one more time. My heart clenched at the view, it was what I wanted to see the night we were together; to wake up to him like that. Maybe someday, but it wasn't going to right now.  \n\n*** *** *** *** \n\nThe next morning, I was happily surprised when Donovan called me instead of texting. \n\n\"Hey, you,\" I greeted him. \n\n\"Hey, you're not in my bed.\" \n\nI heard the disappointment in his voice. \n\n\"I wanted to be, but...,\" I trailed off, not wanting to say something wrong. \"How are you feeling after last night?\" \n\nThere was a slight pause before he hesitantly responded. \n\n\"Uh, how are you feeling after last night?\" \n\nHis words were slow and his voice was full of uncertainty. He was passed out when we got home so there's a solid chance he had no idea what happened. I decided to play with him and see how far I could take it. \n\n\"How could I be anything other than awesome after last night?\" \n\nThere was another pause before he sputtered, \"Yeah, exactly...me, too.\" \n\nI covered the receiver and I tried not to laugh. While listening to Donovan try to casually play off the previous night, I asked. \n\n\"So, are you going to ask me?\" \n\n\"Uh, ask you what?\" \n\n\"What my answer is to the question you asked me last night?\" I feigned disappointment at his lack of enthusiasm. \n\n\"The question I asked you?...Yes...I'd love to know...the answer...to the question I asked you...last night,\" he slowly reiterated to himself. \n\n\"The answer is...yes!\" I said, with a little too much excitement. \n\nI smiled as I imagined him panicking and, maybe, pacing around his room wondering he asked and what I'd agreed to. \n\n\"That's great? Can you tell me the answer, again, but this time in a whole sentence? You know, so I can really feel your excitement.\" \n\nTry as he might, he sounded totally un-enthusiastic. \n\nI had to mute my phone because I was having trouble holding back my laugh. He was trying so hard to dig his way out of the predicament he knew nothing about and honestly, he was doing a good job. \n\nI quickly composed myself and unmuted the phone. \n\n\"I, Shane Kelly, would love to move-in with you, Gordy!\" I enthusiastically shouted. \n\nAs soon as he heard me he let out a half sob, half choke, which he caught halfway through and tried to change it into something that sounded less mortified at the potential living arrangement. In reality though, it sounded like the cry of a dying man and I was having too much fun with it. He deserved it after getting shitfaced and passing out when we were suppose to spend our first night together. \n\n\"I know you wanted me to start moving in Wednesday, but I think this weekend would be better. We could start Friday. I already talked to the guys and they're happy to help. I know we disagreed about the big, neon, Bud Light sign, but I really think we can make it work in the living room. I promise, it'll be a great conversation piece. And I think my John Deere camouflage bedding will really bring our two worlds together. If it's really a deal breaker, I'm willing to get pink camo...just for you.\" \n\n\"Ah, um, ah,\" he stuttered. \n\nI could tell he was freaking out and I wasn't going to make him suffer forever, just a while longer. \n\n\"Do you want to have lunch today? We can talk about it more and hash out all of the details?\" I asked. \n\n\"Lunch? Today? To talk about how I asked you to move in with me, and your accepting said offer? Sounds, fucking, awesome.\" \n\nExcept, he clearly didn't think it sounded fucking awesome and I was loving every minute of it. We finalized plans with me being excited and him sounding seriously on the verge of a mental break. I couldn't blame him, if I was in his shoes I'd probably have up and left town. No joke. \n\n*** *** *** *** \n\nI was already at the table when Donovan arrived and he didn't look overly enthused to see me. I plastered the biggest smile on my face and stood anxiously as he approached. After giving him a few overly happy kisses, I ushered him to sit down. He was wearing purple scrubs, which wouldn't have been my first color pick, but he looked good, of course. The purple made his skin look tanner and his eyes greener. The thing about Donovan was, he could pull off anything. \n\n\"We have so much to talk about,\" I smiled, broadly. \n\nHe looked like he might actually be sick. I actually felt bad because he'd probably spent the last several hours hungover while stressing over a total joke. I'd been looking forward to making him squirm, but I couldn't bear the sadness on his face any longer. \n\n\"You can calm down. You didn't ask me to move in. In fact, you passed out before I got you home, so you didn't do anything at all.\" \n\nHe visibly melted into his chair and I could see the weight lift from his shoulders. \n\n\"Thank. Fucking. God.\" He quickly looked at me with wide eyes. \"No offense, but I'm not ready for that shit and fuck you for being an asshole!\" \n\n\"Yeah? The asshole who got you home safely, carried you to bed, set your alarm, and didn't take advantage of you? At least I didn't need to be wasted to consider having sex with my boyfriend.\" \n\n\"What are you talking about?\" He looked confused. \n\n\"Why else would you feel the need to suddenly start drinking excessively on the evening you insinuated we'd have sex?\" \n\nHe looked up from the menu and laughed. \n\n\"It wasn't because the thought of sex was revolting, that's for sure.\" \n\n\"Then please, enlighten me.\" I crossed my arms over my chest and patiently waited. \n\nDonovan shifted slightly on his chair and looked mildly uncomfortable. He shrugged. \n\n\"It's stupid, but your ex is smoking hot and clearly knows you better than I do. He has all of this history with you, knows everything about you. It was hard not to feel completely out of place. I guess I drank too much liquid courage.\" \n\n\"So, you're not upset that I'm a top of the tops?\" \n\nHe laughed. \n\n\"No, not really. It's a little disappointing that I can't do anything because, believe me, your ass has been the center of my fantasies and it's not just about having my dick in it. I want to squeeze it and bite it, too (he was doing all the lewd gestures to go with it).\" \n\nI interrupted him, not liking all the talk of my backside. \"Okay, okay. No need for details.\" \n\n\"Maybe we'll find a happy medium?\" He asked. \n\nA happy medium when my butt will be the center of someone's attention? Not likely. I shrugged and counted my blessings that lunch had arrived at that very moment, which distracted us from finishing the conversation. We spent the rest of our lunch having enjoyable conversation and agreed I'd go to his house after work, for dinner. \n\n*** *** *** *** \n\nGetting ready for dinner that night was nerve wracking. It'd be dinner, but with a fifty percent chance of staying the night, or at least, I hoped. I showered, shaved, cleaned up really well, and then packed an overnight bag, which I kept in the car so I wouldn't appear too desperate or assuming. If he wasn't planning to have me stay the night then I'd leave, disappointed but not embarrassed. \n\nDinner was great. Donovan cooked a nice salsa chicken with veggies and he asked me a bunch of questions, which I happily answered. We were still taking it slow, trying to learn information about each other on the sly, but direct questions were good, too. \n\nDonovan looked so cool and casual, like he didn't have a care in the world as he leaned over the kitchen sink and cleaned up the last of the dishes. Of course he did, he wasn't overanalyzing what would, or wouldn't, happen after dinner like I was. \n\nWas I waiting for him to make a move and, if so, when did I become such a pansy? \n\nI'd forced him to dance with me, I'd asked him out, I'd stormed into his house unannounced and practically raped his face on his own staircase, and I'd given him a very public blowjob, yet, I was nervous about tonight? I couldn't believe my own cowardness and mentally berated myself for being such a sissy. \n\nThe fact I'd received confirmation from the clinic earlier in the day, that my test came back clean wasn't helping my nerves. I assumed Donovan got the same confirmation. If so, what would that mean? Sex? Condom? No condom? \n\nI decided to move things forward, or at least feel it out. I got up from the table and walked until I was standing behind him. I wrapped my arms around his waist and pressed the side of my face so I could watch him do the dishes. \n\n\"I have a question for you.\" \n\n\"We're not living together,\" he deadpanned, without hesitation. \n\nI felt his cheek pull into a sly smile and I chuckled at the memory of the little joke. \n\n\"And give up my gutted and trashed house? Not a chance.\" \n\nI squeezed him and kissed his temple before continuing. \n\n\"Actually, I was wondering if you have plans tomorrow. I was thinking we could spend the day together.\" Starting when we both wake up in your bed together? I thought. \n\nDonovan didn't say anything as he casually finished washing the last pan before setting it on the drying mat. His lack of response was a little unnerving until he turned and I saw his adorable, little, smug grin. How he looked cute, sexy, and sassy all the same time, I'd never know. \n\n\"It depends. Would I have a wake up early?\" \n\nI couldn't tell what he wanted the answer to be since his expression could've been serious or playful as his fingers played with my cotton sleeves, which strangely made me feel extra big and strong. \n\n\"It depends. Do you want to wake up early?\" \n\n\"It depends on what you want to wake me up for.\" \n\nHe bit his perfect lip and stretched it for a moment before letting it go. He didn't bite his lip because he was nervous, oh no, he was trying to drive me crazy with lust. \n\n\"I guess that depends if you want me to stay the night.\" \n\nHe pressed his finger to his lip, thought hard for a moment then innocently smiled. \n\n\"Sure, I think the guest room is made up.\" \n\nI narrowed my eyes at him and growled at his response, which made him lightly laugh with amusement. I loved how his green eyes were happy and content, and how his smile was genuine and soul melting. I lost myself for a long moment, unable to pull away from him. \n\nThe way he looked at me sent chills down my spine\u2014it was almost like he thought he was the lucky one. During that moment, a herd of buffalo couldn't have stopped me from leaning in and kissing his sweet lips. I groaned when he pulled away too soon. \n\n\"You can stay the night, but there's one condition,\" a perfect smile stretched across his face. \n\nI couldn't imagine anything during that moment, which would've been a deal breaker, not with the way he was looking at me. He grabbed my hand and pulled me behind him. Like the lost puppy I was, I followed him blindly as he turned off all of the lights and locked the doors before leading me upstairs to meet the fate of his said condition. \n\nHis room was big. I'd seen it the night before when I carried his lifeless body to bed, but my mind had been focused on the task at hand. It was nothing like my room, which was grey and boring. His bed was solid colors of cream, peach, and different shades of yellow. \n\nIt looked like an explosion of bridal flowers\u2014it was nothing I would've picked in a million years\u2014but it was soft, fluffy and honestly, a little cozy. It could've been neon pink for all I cared, as long as Donovan was going to be naked on it. \n\nHe placed me a few feet away from the bed. He took a few steps back until he was sitting on his bed facing me. \n\n\"Strip,\" he commanded. \n\nMy eyes widened. I wasn't insecure by any means, but it was still a little intense to have all of Donovan's attention the way I did then. \n\n\"My clothes?\" I stupidly asked. \n\n\"No, the paint on the walls,\" he retorted. \n\nHe must've sensed my hesitation and added. \"Don't worry, I'll strip for you next.\" \n\nMy hesitation had nothing to do with getting naked with him, but more to do with getting naked for him. Was that the condition he was talking about? Was he wanting a seductive striptease or something? \n\nI'm sure Donovan could pull off the perfect, seductive striptease that would land me in the hospital with a cardiac arrest, but I had to admit, I didn't have any experience or technique in that area. Whatever I could manage to pull off wouldn't be labelled as seductive, sexy, or a turn on. And as much as I'd loved to see Donovan work his way out of his own clothes, I wanted to do it for him. \n\n\"No, you won't. I plan on stripping you myself,\" I replied. \n\nIn an effort to speed things along so I could unwrap Donovan sooner, I forwent the striptease since there was no need to make things awkward or embarrassing for either of us. I simply undressed, starting with my shirt\u2014the way I did when getting ready for a shower. Nothing sexy at all. \n\nDonovan stood and put his hand on my chest to stop me. \n\n\"You're right. Stripping you would be much more enjoyable,\" his voice was thick and heavy, so unlike his normal upbeat self. \n\nI watched him as his eyes studied every inch of my body while he slowly unveiled my body with his fingers before moving to the next item that stood between us. I've had a lot of sex, but I'd never been touched with the desire Donovan showed. It was intimidating, but addicting. Even with my past boyfriend's, sex was only sex. Donovan's touch was like lava as he peeled away my clothing so slowly, you'd think he was removing gauze from a burn victim, which was fitting considering the way I was burning with desire. ",
        "The time it took Donovan to undress me was agonizingly slow. Every moment that passed was torture I thought might not end, but eventually, I stood naked in front of him. His hands and eyes simultaneously wandered over my body. The look in his eyes was a mix of predatory and Christmas morning. My body pulsed as his fingers traced down my back. His touch drifted from my lower back toward the curve of my butt and that wasn't going to fly with me. He gave me a knowing look when I diverted his hands and started undressing him. \n\nI wasn't nearly as smooth or seductive as he was as I quickly pulled his shirt off. Where he went through the whole alphabet to get from A to B, I took the more direct approach. I just wanted him naked, immediately. Once I got him where I wanted him, there'd be no holding back. I needed him and I couldn't get him fast enough. I barely had time to appreciate his beautifully lean tummy, flawless skin, or long legs before I was pushing his perfectly naked body toward the bed with mine. \n\n\"Whoa,\" he pulled away before we got to the bridal flower showroom of a bed. \"I'm not done with my one condition, yet.\" \n\nI was going to argue or maybe even pout, I was so desperate for him, but then he kissed me and everything was lost in an instant. I'd been feeling rushed, but his kiss was slow and soft. He lingered on my lips for a moment, or hours, before pulling away painfully and slowly. I tried to follow the kiss but he gently pushed me away. As his fingers travelled slowly to my waist, I was sure I'd never been so hard in my life. \n\n\"I didn't get to enjoy the view last time, but this time...\" \n\nHis eyes picked up where his words left off. This time he was going to enjoy it all. Much like earlier, he touched me with so much heat that there was no questioning how much he wanted me. I tried to touch him, to feel his supple skin and his lean muscles, but he kept pushing my hands away. \n\nWe smiled and kissed our way through a power play, each of us wanting the other to submit to our own selfish desires.Finally Gordy stilled and let me enjoy his body. \n\nI enjoyed his body the first time we were together and I've enjoyed it a few times since, but I still didn't feel prepared for how amazingly perfect he was. My eyes followed my hands as I felt his arms, down his chest, and over his stomach. He was athletic and hard, yet, soft and delicate. I traveled over the curve of his perfectly tight, round butt. There wasn't a bump or blemish on any part of his body\u2014he was literally as smooth as silk...everywhere. \n\n\"You don't have any tan lines.\" \n\nIt was something I'd noticed before. His tanned skin stretched across every inch of his body. I expected a response or explanation, but nothing came. I looked at his face only to find him transfixed on something in the distance, so I turned my head to follow his line of sight. That's when I noticed his room was a dressing room with two walls of mirrors. My backside was fucking everywhere! \n\nThis time he was looking in my eyes and there wasn't an ounce of apology or regret. He looked proud of himself. \n\nI used my size advantage to effortlessly toss him onto the bed and, as he landed with a bounce, chastised him. \n\n\"I can't believe you.\" \n\nHe tried to look innocent, but he couldn't hide his victorious smile. \n\n\"What? It was my condition! Do you want me to apologize?\" He smiled as he moved himself back. \n\nI nodded as I stalked closer and slowly crawled onto the bed. Donovan narrowed his eyes and bit his lip to hold back a laugh. \n\n\"Okay, I'm sorry...for finding your ass delicious enough to eat.\" \n\nHe firmly grabbed my ass with both hands and pulled me between his legs. His kisses were venomous and caused my whole body to shut down. Naked Donovan was under me, his soft lips were on me, and his hands were grabbing me with desire. Heaven. Simply heaven. I was temporarily distracted until I felt his fingers graze my ass again. \n\n\"Stop that!\" I laughed. \n\nI tried to grab his hands to pin them to the bed, but he kept slipping away. \n\n\"Never,\" he said breathlessly as he tried to fight me for control. \n\nI kind of enjoyed the playful fighting. It was a bittersweet when I pinned one of his hands above his head and used my free hand to stroke his cock in an effort to distract him. It worked, until he realized his other hand was unrestrained, so he started stroking me. Tit for tat. I dropped my forehead onto his shoulder as I moved in rhythm with his strokes. The harder I stroked him, the harder he stroked me and soon we were fighting a different kind of control. \n\nI let go and kissed his neck and jaw as I enjoyed the sensation of his hand against my hard flesh. \n\nI managed to get the lube while I ravaged his neck and his movements stilled when he felt my fingers glide along his sensitive bhyd. I worked him until I had three fingers deep inside of his tight ass. The more I worked, the harder his fingers dug into my shoulder blades, and the more turned on I became. I felt his legs wrap around my waist, like an anchor, as he locked his ankles together and pulled me toward him. \n\nI couldn't look away from his green orbs. They way they lit up when my aching cock rub against his soft ass drove me wild with need. They were light, but dark and demanding. Demanding for more. I reached across to the night stand to grab a condom and started to tear it with my teeth when Donovan stopped me with a quick head shake. \n\n\"We don't have to..\" \n\nHe was looking at the condom when his words trailed off. \n\n\"But you said...\" \n\n\"I know what I said, but...\" \n\nHe looked slightly agitated as I hovered over his body. \n\n\"What? Do you want to throw this one across the room too?\" I teased. \n\n\"Okay, you win! Jesus, Shay, just fuck me already.\" \n\nHe was stroking me with his ass as I gave him the condom to do with as he pleased. Of course, he threw it across the room and smiled. His eyes sparkled and we laughed at the hilarity of it all. He quickly grabbed the lube bottle and raised it so we could see it. \n\n\"How about this instead?\" \n\nI guided myself between his soft flesh, making him moan every pass that I brushed against his twitching hole. With his encouragement, I pressed forward. It was only a moment of resistance before I slowly slid into his velvet heat. I watched him with a questioning smirk. \n\n\"I'm not a slut. You had three of your giant fingers in my ass for the last twenty minutes plus, I'm as horny as hell from looking at your fine ass.\" \n\n\"You're the worst,\" I playfully growled at his constant mentions of my ass. \n\nHe smiled and looked at me with his deep-green eyes. I was deeply and truly fucked. I ducked my face into the curve of his neck and pressed deeper. The pulse in his neck vibrated against my face as I continued deeper and deeper until I couldn't move anymore. I closed my eyes and kissed whatever part of him was nearest my lips. His smell was intoxicating and I couldn't deny the heat and chemistry between us. \n\n\"Impossibly close,\" I nuzzled into his jaw. \n\n\"Impossibly close,\" he repeated in a deep whisper. \n\nI didn't know about him, but I meant it in more than one way. At first, I closed my eyes and felt every movement, every contraction, and every detail as I slowly moved in and out of him. I allowed my lips to wander over every inch of him that I could reach and I tried to hear every sound and the way his breathing changed. I could've stayed in that perfect rhythm for days. \n\n\"Flip me over.\" \n\nHis demand was more of a plead as he arched his back under me. I flipped him quickly and pulled his ass high in the air. It was the sexiest thing I'd ever seen, the perfect sight if you ask me. I ran my hands over his tight mounds. The arch of his back and the curve of his butt and waist were overwhelmingly beautiful. I used my knees to spread his legs while using my thumbs to spread his ass, as I entered him with one long motion. \n\n\"Oh, so you get to grab my ass, but I can't touch yours?\" \n\n\"Exactly, I'm glad we see eye to eye.\" \n\nI smiled at his timing, but that was Donovan. I held his waist and watched my thick post slide in and out of his body as I tried to steady my breathing. It was a difficult task being everything about him was overly simulating. Donovan pushed himself up so his back was flush against my chest. I kept my hands firmly on his waist as I moved him in perfect harmony. Donovan laid his head on my shoulder and ran his fingers through my hair before gripping my neck. \n\n\"I don't think we see eye to eye, but...\" \n\nHis words slipped to mumbles then moans as I started stroking him in time with my movements. It didn't take long before his knees started buckling and he fell forward. Refusing to release his grip, I was forced to follow him down. \n\n\"Stay close...so close,\" he commanded. \"Yes, like that. Oh (grunt), Shay. Shay, Shay, Shay. Harder (grunt). Yes. Squeeze me tighter.\" \n\nI didn't have a choice, something inside me had to do what he wanted. In order to oblige his command, we ended up in the same position we were in our very first night together. I had him immobilized with my arms wrapped tightly around his chest as I alternated between grinding and pounding him from behind. It was raw and animalistic, yet intimate and intense as we connected at every point possible. He lifted his hips so he could touch himself. \n\n\"Tighter...hold me tight,\" his voice was barely audible. I only heard him because I was so close to him. \"I'm so close,\" he whined. \n\nI squeezed tighter against him and pounded as hard as I could and climbed higher and higher with every stroke of his warm channel. His breathing was stressed and his body, ragged. When I felt him twitch and squeeze me deep within his body, I came so hard it felt like I was going to combust, like it'd never end as I pressed him deep into the mattress. \n\nIt finally subsided and I laid lifelessly on top of him, I didn't want to kill him so I tried to move. \n\n\"Don't move, stay.\" \n\nI smiled into his ear. \"Impossibly close?\" \n\n\"Yes, impossibly close,\" he whispered. \n\nI wrapped myself around him and fell asleep with my face buried against the back of his neck and the rest of our bodies intertwined all the way down to our toes."
    ],
    "authorname": "Mrsgnomie",
    "tags": [
        "gay",
        "gay male",
        "gay romance",
        "baseball",
        "romance",
        "romantic"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/three-strikes-ch-10"
}