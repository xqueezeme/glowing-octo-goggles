{
    "title": "Aztec Treasure Ch. 81: End",
    "pages": [
        "Provincial Constable Lynette St. Claire's POV\n\nTrans-Canada Highway, 20 km north of Sault Ste. Marie\n\nThe dispatcher's voice cut through the drone of the traffic passing by. I had the unmarked police cruiser in one of my favorite ticket farms, where the laser had a good view of traffic coming north along the lake, and trees hid us from view. \"Attention all units, we have a child abduction alert. The kidnapping victim is Maritza Meztli, a one-year-old Hispanic female, taken from Sault Area Hospital approximately fifteen minutes ago. The suspect is driving a silver Honda sedan, last seen on Great Northern Road approaching Fourth Line East. The suspect is armed with a pistol and is a suspect in a shooting at the hospital.\"\n\n\"They're coming our way,\" Provisional Constable Curtis LeGrange said. He'd been training under me for a month now and was pretty sharp for a rookie.\n\nThe dispatcher paused, and when she started talking again, I could tell she couldn't believe what she was reading. \"Photographs of the victim have been sent to your cars. The victim may appear as a jaguar cub, yellow with black and dark brown rosettes, approximately twelve kilos.\"\n\nSomeone called her back. \"Dispatch, Patrol Fourteen, repeat your last?\"\n\n\"The victim is a werecat, traveling with Arrowhead Pack werewolves. I can't make this up, Fourteen.\"\n\n\"Holy crap, look at this,\" Curtis said. He turned the computer towards me; on the screen was a picture of a cute little Hispanic girl in jeans and a t-shirt, along with an adorable Jaguar cub playing on the beach. \"I read about her. She and her mother are the only jaguar shifters left in the world.\"\n\nWe could talk about that later. Our position was good to cover a northern escape. \"Dispatch, Patrol Five, my unit is just south of the Goulee River on 17. We will hold and watch for silver Hondas.\"\n\n\"Roger, Five. Fourteen, proceed to 556 and hold watch there.\"\n\nThat made sense; if he was going north, those were the only two roads going anywhere. Everything else ran into the lake or ended with the woods. We were in a good spot to watch the road, angled so both of us could see northbound traffic.\n\nA few minutes later, we got an update with a license plate number and clarification the suspect vehicle was a four-door Honda Accord. \"Must have got it off the cameras at the hospital,\" I said as I wrote the plate number down. I had binoculars out, searching the oncoming traffic for silver Honda sedans.\n\nIt hadn't been ten minutes before I saw the first car matching the description. The plate number was wrong, but the tax sticker on it was an expired color. As it passed, I pulled out behind him and accelerated to catch up. It wasn't the right plate, but something was wrong. \"Call it in,\" I told Curtis. He got on the radio and called in the plate number. It came back expired, no longer in use. I told Curtis to request backup as I dropped back a little. I didn't want to spook him.\n\n\"Backup is four minutes out,\" Curtis told me. He'd reported in what we'd seen so far; one person in the car, a white male in his fifties. We passed over the Goulee River and approached Karalash Corners when the patrol cruiser turned behind us and came up fast. \"Light him up?\"\n\n\"Do it,\" I said. He hit the lights and siren, and the man reacted by taking off. \"Patrol Five in pursuit of silver Honda Accord, on 17 approaching Karalash Corners. Requesting backup and air support.\"\n\n\"Patrol Ten is secondary,\" the car behind us radioed in.\n\nThe Honda sped up, recklessly pushing its speed to over 170 km/hr. It wasn't getting away from us in an economy car, though. \"All units, silver Honda is potentially carrying a young child that may be on the floor or in the trunk.\"\n\n\"The pit maneuver is out,\" I said. \"I hope he doesn't lose control of that thing.\"\n\nWe stayed behind him as he continued north towards the Superior coast. A new voice came over the radio. \"This is Air One. I have the pursuit in sight.\"\n\nMy supervisor got on the radio. \"All units, drop back and let the air unit track the car. Continued high-speed pursuit is too dangerous.\"\n\n\"10-4, slowing down,\" Curtis responded. We slowed to a hundred as the Accord kept going. He wasn't getting away, though; other units were converging on our position.\n\nAs soon as the Honda thought he'd gotten away, he got off the main road before reaching Havilland. He headed northwest on a service road, and the air unit tracked him as he drove deeper into the woods. \"Units in Havilland, head west on Havilland Shores Drive and set up a roadblock at the other end of the service road. Units in pursuit close in from behind.\"\n\nWe accelerated to catch up, braking just in time to turn left onto the gravel road. Our SUV could go a lot faster over the bumpy road than a Honda, so it didn't take long before we had him in sight again. When he saw the roadblock ahead, he locked up his brakes.\n\nHe was out of the car and firing before we came to a stop. \"Hold fire,\" I told Curtis as we skidded to a stop. \"Nothing near the car.\" We bailed out my side, using the vehicle for cover, and covered him with our weapons.\n\nThe man fired a few shots our way, then reached back into the car and released the trunk. As soon as it opened, I saw a spotted cat, twice the size of a domestic one, jump out and run into the trees. \"MARITZA IS CLEAR,\" I yelled. When the man turned and fired towards us, we returned fire. One of my shots hit him in the left hip and knocked him down.\n\nHe tossed his gun and surrendered, knowing he wasn't getting away now.\n\nWe waited for our backup to move up before we made the arrest. \"Suspect is in custody. Air One, can you see where the cat ran off to?\"\n\n\"Negative, tree cover is too thick.\"\n\nMy Sergeant was almost to the scene. \"All units remain in position. DO NOT attempt to locate the werecat. A unit from Sault is bringing her mother up to retrieve her.\"\n\nThat was good news. It took twenty minutes for the ambulance to show up but only fifteen for Maria Meztli. She could barely walk after a recent motorcycle accident, so we had to improvise. Curtis was a big guy, and Maria got on piggyback and told him where to go. They walked for a few minutes as Maria followed her daughter's scent into the woods. She found a shivering Maritza's hiding place under a downed tree, and Maria called her out. She shifted back to a little girl as soon as she was in Mom's arms.\n\nI'd never seen anything like it. Maritza was one cool cat.\n\nCh. 82\n\nChase Nygaard's POV\n\nHighway 556 West\n\nI was kicking myself for my foolishness as our group raced west at high speed for Sault Area Hospital.\n\n\"How could I be so stupid?\"\n\nRori tried to calm me down; she was in a group that was following at a more normal speed. Only the experienced bikers were with me. \"It wasn't just you. I've been with the babies the whole trip, and I picked today to go off and have fun. I should have been there to stop it.\"\n\n\"I thought this trip would be safe for Maria because she was with hundreds of wolves and bikers. Then, as soon as her FBI bodyguard is out of the picture, we strip the protections away! And we do it in Canada, where we don't have our guns!\"\n\n\"Roadkill already called home and asked them to bring the hardware on the jet coming for Lana, but that means they have to land on the US side.\"\n\nI would feel better with armed wolves and bikers around. \"We need to get Maria across the border by the time the plane arrives, with or without Maritza. She's not up for a search anyway.\"\n\nI could feel Rori laughing in my head. \"You can TRY telling her that she's running away while her baby is missing. Maria will be one pissed-off werecat.\" I suppose so. \"When we get back there, remember this isn't the fault of Brent, Laura, or James. Today is all on us; we were in charge. We thought it would be enough, and it wasn't. Not after two of the men had to go inside the hospital with Maria.\"\n\n\"I could never be mad at a warrior who takes a bullet to protect the vulnerable.\"\n\n\"And Brent is doing all he can to hold it together.\" The phone rang on my Bluetooth; it was Brent. I opened the link to all the wolves in range. \"What's going on, Brent?\"\n\n\"The children are under guard inside the hospital with James and the police. Maria got a ping north of us from the tracker on Maritza's ankle, but we think it's been disabled now. She left with patrol officers to go to the scene.\"\n\n\"You let her out of your sight?\"\n\n\"Maria's call. She figures Maritza will be afraid and needs to be the one to bring her out. We don't want any humans to get hurt or for someone to shoot her in self-defense. Maria's also the logical choice to try and link up with Maritza as she heads north.\"\n\nI didn't like her being away from Pack, but it made sense. With the nearest wolves stuck on a boat on the canal, we were out of other options right now. \"Make sure Maria knows to stay with the police and keep her phone on.\"\n\n\"I will. We did get some good news; surveillance video had the kidnapping on tape, and we got a plate number. Sault Police, Ontario Provincial Police, and Customs/Border Patrol are all looking for this guy.\"\n\n\"And so are we, Brent. If Maritza is hurt, this guy better pray that the police get him before we do.\"\n\n\"He shot my Laura. Don't kill him without me.\"\n\n\"I won't. I'm sorry this all got dumped on you, Brent. Do your best, and I'll be back in an hour.\" I hung up before we got to another set of twisting curves that forced us to slow down. We were riding hard, as were the other groups. Brent's plan made sense, but it depended on either recognizing the car or having Maritza awake to link with us. If the guy sedated her like he did the adults, he might sneak past us.\n\nWe rode for another twenty minutes before I got an update from Brent. \"Alpha, the Ontario Provincial Police are following a silver Honda with fake plates, on 17 heading towards Wawa.\" That meant Maritza wasn't coming our way since he was already north of where 556 connected.\n\n\"Have you contacted Roadkill and the northern loop riders?\" Roadkill was leading the men that were racing west for 17 well north along the lake.\n\n\"Yes, but he's still an hour away. They are balls to the wall getting there.\"\n\nIf the guy got away, they'd have to chase him down from behind. \"They need to keep going. Call the southern group, tell them to wait for instructions at their stop points until we know the cops have the right car. And call me when we know.\"\n\n\"Yes, Alpha.\" I'd opened the link to the wolves, so we were up to speed. I signaled for the column to pull over, and soon we did, and I had the Brotherhood officers around me. \"It looks like he's heading north, not this way. I'm going to take the wolves with me to the hospital. The rest of you wait for the trail group to catch up, then head back to this morning's hotel and order enough food for everyone. I'll call Mongo as soon as I know more.\" With that, half of us took off again while the rest waited.\n\nThe relief was dramatic when we heard from Brent that Maritza had been found safe. \"I'm still racing for the hospital. Tell the other groups to slow down and regroup with the RVs at the hotel and arrange for food.\"\n\n\"I know a barbecue place,\" Brent said.\n\n\"Make it happen. I'll be there in thirty-two minutes.\"\n\nWe arrived in twenty-eight, and the parking lot still looked like a cop convention. Shootings and child kidnappings were rare up here, after all. I sent half the wolves to Brent at the crime scene while I ran into the Emergency Room entrance. The wolves with me took over watching the young ones from James, who I sent to watch over his mate upstairs. \"Doctor Chance Nygaard,\" I said as I showed my identification to the woman at the desk. \"I'm here to check on my people.\"\n\nShe made a call, and a doctor came out in surgical scrubs a few minutes later. \"Dr. Nygaard, I'm Doctor Tom Clarkson. I operated on your wolf.\"\n\n\"How is she?\"\n\n\"Stable now. The slug was a through-and-through on Laura's left shoulder. It missed the joint but shattered her scapula before exiting. I had to reinflate her left lung and repair the damage, but it was surprisingly like operating on a human.\"\n\n\"The greater size helps, I've found,\" I said.\n\n\"The kidnapper sedated her, so getting her intubated was a challenge. Lance had Doctor Olson from Oxbow Lake do a video call into the operating room, and he helped with my questions. In addition to the gunshot wound, the kidnapper landed on her. She has three broken ribs and one cracked rib, but none punctured her lung.\"\n\n\"She's lucky you were here for her, Doc.\"\n\n\"It's been interesting, that's for sure. Laura should wake up in an hour or two. Doc Olsen said she shouldn't change back to her human form for a few days.\"\n\nI was about to tell him that. \"When we shift, things move around. We don't want to tear any stitches or cause bones to shift until they've healed a bit more. What about the other women?\"\n\n\"Sleeping it off in exam rooms. The dosage wasn't excessive; the autoinjectors would be good for three to five hours depending on the weight of the person injected. They'll be fine.\"\n\nThere was one other problem, a mate problem. \"Laura's husband is still with the police, but he'll want to see her as soon as they let him go.\"\n\n\"I'll be moving her from recovery to a hospital room after she wakes up. He can visit her there.\"\n\n\"Put her in the same room as Lana Black, her FBI bodyguard who was injured last night in a motorcycle accident. It will make security easier for all of us.\"\n\n\"I'll let the administrator know.\" He waved me through the double doors. \"You can wait in the exam room with the two women who were drugged if you want. Let the nurses know when they wake up.\"\n\nThe local police had posted an officer at the exam room door. It took a minute for her to get permission from her supervisors to let me in since I wasn't a hospital employee. She looked closely at my ID when she got the callback. \"I heard the Prime Minister got a call from your President when they found out who the guy was that took Maritza,\" she said. \"The Mounties are watching the recovery room and your friend upstairs.\" The Royal Canadian Mounted Police were a Federal agency, not as active in this province as others.\n\n\"Really?\"\n\n\"Richard Todd was a CIA man stationed in Ottawa. Todd's wanted in the conspiracy against the President. Our government pledged full cooperation with the investigation.\"\n\n\"Good. I'm sorry this landed on your doorstep, officer, but everyone should live except Richard.\"\n\n\"We don't have the death penalty in Canada, and we won't extradite unless it is off the table,\" the officer replied.\n\nI just smiled at her. \"Richard is a dead man; he doesn't know it just yet. He'll be dead soon.\"\n\n\"If that's a threat against him, I have to report it.\"\n\n\"It's a statement of fact, Officer. There isn't a thing anyone can do to stop it now.\" She still had her mouth open when I walked past her into the room. Possum was on the exam table, while Three Tequila was on the gurney. I checked their vitals and their charts, agreeing with the doctor they would both be fine.\n\nOne of my Omegas volunteered to go back to the hotel and drive an RV back so we could get the kids out of the waiting room. Brent said he might be stuck out there for hours, so I agreed with her but sent two warriors along for protection. I would move them out but not send the RV to the hotel until the others arrived.\n\nI'd been in there for ten minutes when the officer stuck her head in and got my attention. \"Sir, there are people here who wish to speak to you,\" she said. She looked a little guilty. \"I had to report what you said about Mr. Todd.\"\n\nCh. 83\n\nChase Nygaard's POV\n\nSault Area Hospital\n\nI was escorted by another officer upstairs to a conference room. In the room sat the Sault Ste. Marie Police Chief, the Ontario Provincial Police Northeast Sector Superintendent, the RCMP Ontario Division Chief Superintendent, the Hospital Chief of Staff, and representatives from Diplomatic Services and the Canadian Security Intelligence Service. \"Thank you for seeing us,\" the Police Chief said.\n\n\"First off, thank you all for recovering Maritza safely and capturing her kidnapper.\"\n\n\"You are welcome,\" the OPP Superintendent replied. \"That brings us to the problems.\"\n\n\"What problems?\"\n\n\"The kidnapper will arrive here in a few minutes. The doctors will treat a gunshot wound, plus other injuries he sustained. I wanted your assurances that you and your people will not make any attempts on his life while he is here.\"\n\n\"I can't promise we won't yell at him, but I've given the order. None of my people will harm him,\" I said evenly. \"They don't have to.\"\n\n\"What do you mean,\" the Police Chief said. \"You told my officer he was a dead man, and none of us could stop it.\"\n\n\"How much do you know about werecats,\" I asked.\n\n\"Very little, just what I've read in the papers,\" he said.\n\n\"Maria reported that Richard Todd had two puncture wounds in his right ankle from where Maritza bit him during the kidnapping,\" I said. A few of the people around the table had wide eyes as they were figuring it out. \"The bite of a werejaguar in cat form, just like a werewolf bite, is fatal to humans without extraordinary measures. He will get a fever tonight; you can try and hold it down, but it won't work. He'll die sometime tomorrow, driven mad and suffering with every labored breath. Any interrogations you will have to do tonight while he's still lucid. He deserves every moment of the agony coming to him.\"\n\nThey didn't like this answer, especially the Chief of Staff, who started getting up from his chair. \"You have to do something! You're a DOCTOR, dammit! You took an oath!\"\n\nI stared at him until he sat down again. \"I wouldn't piss on him if he was on fire. You can use ice baths for the fever, but they will eventually stop working. There is simply nothing I can do to stop his death.\"\n\nOne of the intelligence guys thought he knew better. \"That's not true; you saved that deputy who got bitten in Duluth. You have a responsibility to do the same here. You don't want that poor child to be a murderer.\"\n\nI rolled my eyes. \"Maritza acted to protect her friends; killing a man in the act of kidnapping is far from MURDER. I'm going to buy her all the ice cream she wants as soon as we're together because she was a brave little warrior today.\"\n\n\"This isn't a joke,\" the Chief of Police said.\n\n\"I said I couldn't help. Look, I need two things to save someone who a werecat has bitten. First, I need four to six units of werecat blood. There are exactly two werecats left in the world; one is a traumatized toddler too young to donate, the other an injured teen female. It is unlawful to compel Maria to give blood, and there is no way in HELL she will do anything to help the man who took her daughter.\"\n\nI didn't convince the doctor yet. \"Couldn't you use werewolf blood?\"\n\n\"It doesn't work; we tried with the President's husband. Although we are both shifters, our blood isn't interchangeable for humans. It's more than just type and match,\" I said. \"The other thing we need is his mate. We think only the mate bond can pull the new cat through the change. It could be any of the billions of people in the world, but most likely, he doesn't have one.\"\n\nThe Chief of Staff was running numbers in his head. \"It wouldn't be a werewolf?\"\n\n\"There are fewer than fifty single female werewolves in the entire world. How many of them would be willing to drop everything and fly here to see if their mate is a traitor and a child kidnapper? They would be better off to let Todd die and wait for Luna to assign them a second chance mate.\" I let that sink in. \"Richard Todd will die, and none of my people will do anything to hasten his demise.\"",
        "It started to sink in that Richard would die in their custody. I could sense they were already thinking ahead to how to tell the Americans and minimize the damage. No one wanted to say the obvious.\n\nI looked around the room. \"Are we done? I'm starving, and the guys back at the hotel are ordering some barbecue.\"\n\nThe men looked at each other, then nodded. \"Thank you, Alpha Chase.\" I left them behind, smiling as I walked away.\n\nTodd would get what he deserved.\n\nI joined the group in the waiting room, holding my son and daughter as they played in an area of the waiting room discreetly lined with Pack. The RV had just arrived in front of the entrance, and Rori was within link range. They would be passing the hospital in five minutes. \"Let's go,\" I told everyone as I stood up with my twins. The entire group stood and formed a perimeter as we got the kids secured on the couch. While we were loading, others were heading for their motorcycles. I watched as they escorted the RV out of the light, sliding in place between the bikers and the support vehicles from the run.\n\nI updated Rori on everything that was going on. \"Richard Todd is here, probably in surgery. We're staying away from that mess. I got a text from Frank Grimes; he is in the air. He'll arrive at Mackinac County Airport at 7:20 tonight. I need to stay here for a while to watch over things.\"\n\n\"How long will Brent be needed there?\"\n\n\"A few more hours, probably. I need to stay until Possum and Three Tequila are released, and we'll need to keep some people here to support Brent and Laura. It will be a few days until she can shift, maybe four days until the release.\"\n\n\"We don't have hotels here, but the rooms Maria arranged for tonight aren't far away on the Michigan side. It makes sense to move most of us there,\" she said.\n\n\"I agree. Let's rally everyone at the hotel from this morning. Designate a van and some riders to get Frank and take him to the casino hotel. At least on the US side of the border, we'll be able to arm everyone who has a concealed carry permit.\" \n\n\"Is it too dangerous? Should we cancel the rest of the trip?\"\n\nIt was a question I'd been mulling over on the ride back. \"I think it's prudent to send the little ones home,\" I finally said. \"They can fly back with Grandpa Frank and stay at Oxbow Lake for a few days. I'll leave it up to my brothers whether they continue. It just sucks; this trip has been a blast, and now this crap.\"\n\n\"I'll make the offer to your brothers, but I want our babies to come home with me in the RV after they release it. We have vans and SUVs that can drive overnight while swapping drivers, and we'll be heavily armed. Chase, it's only an eight-hour trip.\"\n\n\"Should we send them all back that way? Should I go with you?\"\n\n\"We don't want all the kids vulnerable in one place again,\" Rori said. \"We don't need to pull anyone back home for security with my Aunt and Uncle taking them. You need a vacation, Chase, and you're a Brotherhood President now.\"\n\n\"What about Maria? And Maritza?\"\n\n\"I'd like Maritza to go home on the jet with Frank, but it's up to Maria.\"\n\n\"She should be able to ride by tomorrow, and it's her trip,\" I agreed. \"I think we lay out the options and let people decide what they want to do.\"\n\nI figured the Brotherhood would stay on, while some of the wolves might leave early. The best riding of the trip was still ahead of us. \"I agree. Pass the word when you rally, and make the travel arrangements. The doctors want to observe her for one more night as her concussion symptoms have been slow to clear. We should hold Frank's departure until we can get her to the airport.\"\n\n\"I will. Eventually, we should run out of people who want to harm us, right?\"\n\nI laughed at that. \"Rich, powerful, and were means we're always targets, love. Cheryl is in danger until she is mated and has her first daughter, and our jaguars may always be a target because they're the last ones. Add in the crazies who want us to change them, a government we have a shaky relationship with, and Alphas jealous of our wealth and influence?\"\n\n\"I don't want us living like prisoners, Chase. Security has to be a consideration, but we can't let it stop us from having fun.\" I had to agree.\n\n\"I'm going to check up on Lana and fill her in. I love you, Rori.\"\n\n\"I love you to the moon and back, my mate.\"\n\nI went up the elevator to Lana's floor and walked to where the Mountie was sitting at her door. I showed him my identification as another man, maybe six-foot-five and covered in tattoos, came to the door. He was wearing a biker jacket, dark blue FBI T-shirt, jeans, and boots. \"Who are you,\" the bearded man asked.\n\n\"I'm Frame, President of the Arrowhead Chapter of the Steel Brotherhood, and Pack Alpha,\" I replied as I held my hand out to him.\n\nHe looked at the Mountie, who nodded as he handed my identification back. \"Special Agent Cole Brackers. We've been waiting for you.\"\n\nJames was sitting by the bed, and Lana was happy to see me and appreciated all the updates I had. \"This wouldn't have happened if I hadn't been here,\" she sadly said when I finished.\n\n\"Shit happened the way it did, and it was my responsibility to protect them,\" I told her. \"Your charge was Maria, and James protected you both.\" I could see James' shoulders relaxing; he wanted to transfer, and he was worried he'd done something to jeopardize that. \"Frank's jet is arriving tonight and leaving for Minnesota in the morning. I plan to send you and James home on it, along with some of the young ones.\"\n\n\"Fine by me, I'd rather rehab by the pool,\" Lana said. \"I'm officially on medical leave, but I will get my gun and badge back when I leave. I've filled Cole in on his duties.\"\n\n\"I can't wait. It's the first time the Bureau is paying me to ride since I was undercover with the Iron Coffins.\"\n\nBrent's send cut in. \"Alpha, the food is here. Should I send some up?\"\n\n\"Sure. Enough for four werewolves and some for the nurses if we have enough. Cole looks like he can keep up with James and me.\" I smiled at Lana. \"How about some barbecue instead of hospital food?\"\n\n\"Oh, hell yea,\" she said with a smile as she sat up. Yeah, she's going to fit in just fine at Arrowhead.\n\nCh. 84\n\nMaria (Meztli) Skollson's POV\n\nNorth of Sault Ste. Marie, Ontario, Canada\n\nOne of the officers following us had a blanket, and she helped me wrap Maritza up and carry her out of the woods. She didn't want me to let her go, but I had to get carried out too! We arrived back at the scene of the shootout after the ambulance had left with the kidnapper. Curtis set me down on the back seat of their cruiser, keeping the door open. Maritza got handed over and I rocked her to calm her down. One of the detectives came to see me, but I had questions first. \"How is her kidnapper doing?\"\n\n\"He's messed up. He took a ten-mil round to the hip, plus he has a broken wrist and a bite mark on his ankle.\"\n\n\"Bite mark?\"\n\n\"Yeah, it's not a big one. Two punctures on each side, about three centimeters apart.\"\n\n\"And the bite drew blood?\"\n\n\"Yes, his sock was bloodstained.\"\n\n\"Did he say why he did it?\"\n\n\"He hasn't said anything at all, unless you count begging for painkillers.\" He knelt by the car so he'd be more on Maritza's level. \"I'd like to get your statement for the investigation,\" he said.\n\n\"There's not much to say.\" I told him about going to the hospital to see Lana Black, the three of us leaving the rest in the RV. \"I got just two words from Laura when he attacked. She sent us the words 'gun' and 'help.' I knew something was wrong, and I could feel Maritza's fear over the bond.\"\n\n\"The bond?\"\n\n\"A mental link between members of a family or Pack. It allows us to talk to each other as long as we are within a few miles of each other. The only Pack members around were Brent, who is Laura's mate, and me. Brent yelled at James to protect me and Lana, and ran outside. Everything I know about what happened down there came from him.\"\n\n\"So you didn't see anything?\"\n\n\"Couldn't from our room, and James wouldn't let me leave until the scene was secure.\" I told him about the previous attempts on my life, my recent windfall from the court case, and Maritza's uniqueness. \"The FBI sent Lana along because of the continuing threats. If Richard was rogue CIA, he would want revenge against our Pack for our part in taking down their group.\" We talked for another ten minutes as Maritza started to act up, and I gave him my contact information. \"Can I go now? She's tired and hungry.\"\n\n\"Yes, thank you.\"\n\nThe Sault officers were under orders to return us to the hospital. They helped us back to their police SUV, and turned around to head back to the Trans-Canada Highway. I'd had Pack voices checking on me for a few minutes, so I wasn't surprised at all when I saw our escort. The group on the northern run, led by Roadkill, fell in behind the police car as we turned onto the highway. There were twenty or so riders, a mix of wolves and Brotherhood riders, all of whom had raced back here at high speed to find me. I smiled as they got in formation behind us; I felt safer already.\n\nI pulled out my cellphone and updated Lance that I was headed to the hospital; he and the prospect had just crossed the border. Then I called Chase, but his phone went to message. I sent him a text instead. \"Maritza is fine, we're on our way back to the hospital and we'll see you in half an hour or so. Maritza bit her kidnapper and drew blood.\" I called Roadkill next, then Lana's room at the hospital. Everyone was relieved that Maritza was safe.\n\nShe wasn't unhurt, though. Richard had kicked her into a cabinet, and I could see bruises forming on her chest and back. The EMTs suggested x-rays, but I refused the ambulance ride because I could sense she wasn't badly hurt. She fell asleep in my arms soon after we got up to speed.\n\nWhen I was able to raise Chase on the link, I told him we were less than ten minutes away. He met our procession at the Emergency Room entrance, taking Maritza as one of the Brothers pushed over a wheelchair for me. The doctors did an examination and took a chest x-ray, finding no fractures. The investigators also took photos of her injuries for their file. \"She's a lucky girl,\" he told me as I dressed her in clothes brought from the RV.\n\nWe were both starving by now, so as soon as I got released, we headed for the RV that had been driven up from the hotel. The riders were already there, eating barbecue and talking about the ride. They all cheered when Chase pushed us back out in my wheelchair.\n\nI didn't have a chance to see Brent and Laura, because they still had the two-person limit, and Brent plus FBI Special Agent Cole Brackers made the limit. I found out Possum and Three Tequila had woken, and Roadkill and Mongo were in with them. They still had to give statements to the investigators before they'd be allowed to go, and we weren't leaving without them. Cole did come down to eat and introduce himself; he looked like he could hold his own in a fight.\n\nThe good news was that the crime scene guys had finally released Chase's RV. Some of the Ladies had done a quick cleanup of the inside so we could use it again. I used about six wet wipes to clean the barbecue sauce off Maritza's face and hands, then carried her inside. \"How much damage did he do?\"\n\nChase pointed at the damage. \"That door is cracked where Maritza hit it, we had to toss out the carpet by the door, and they cut into the bench seat over there to retrieve the bullet. It could have been worse.\" I could see duct tape over the cut in the leather upholstery, and a throw rug covered the missing carpet section.\n\nTheir old men brought Three T and Possum out to join us, setting them on the couch. My new FBI bodyguard, Chase went forward to the driver's seat, and a few minutes later, the whole caravan departed for the hotels.\n\nEveryone else was waiting to see us, and there were a lot of hugs and tears as we reconnected. \"We should load up and head for the hotel in Michigan,\" Sawyer said. \"That idea of yours to send people home was dumb.\"\n\n\"What do you mean?\"\n\n\"Safety in numbers,\" Bear said. \"You fuck with one of us, you fuck with us all. We got sloppy and left you exposed. It won't happen again, the Brotherhood won't stand for it.\"\n\n\"And we are having a great time and want to finish the trip,\" Howler added.\n\n\"What about the kids?\" Chase looked at his brothers and twin sister. \"We should send them home.\"\n\n\"Aren't you listening,\" Coral said as she smacked Chase on the back of the head. \"Plane rides? Thunder runs? Not happening, Chase, not on our first motorcycle vacation. We ride together. The kids are always surrounded by at least twenty of us, no exceptions, and we'll be armed this time.\"\n\nI had to agree. \"Alpha Chase, we won't make that mistake again. I don't want to go home, and I'll feel better with Maritza along. This part of the trip is SO cool!\"\n\nChase asked, \"What about Frank and the plane?\"\n\nSawyer answered that question. \"He's bringing our injured home tomorrow. Possum volunteered to go as a nurse, so we'll bring Laura home to the Oxbow Pack Clinic with Lana. James and Brent will go with them.\" I couldn't imagine the hospital liked treating a werewolf in her fur form.\n\n\"This trip is only half over,\" I told them. \"I'll be riding again by the time Lance gets his bike back.\" Another night rest and some shifting a few times would help heal me.\n\nChase looked over at Rori, who just nodded at him. \"I guess we stick together then,\" he said. It took a while to get us all over the border, and we headed west through Upper Michigan to the casino hotel. Chase and Rori volunteered to keep Maritza in the RV overnight, so Lance and I got a room to ourselves. I couldn't stay in the jacuzzi overlooking the lake for long while pregnant, but Lance spent a lot of time massaging my shoulder and leg. As always, massaging turned into sex, slow and tender and careful.\n\nLance helped me through one more round of ice treatments before bed. I took a pain pill and tucked into my mate's side, quickly falling asleep.\n\nCh. 84\n\nMaria (Meztli) Skollson's POV\n\nBay Mills Resort and Casino\n\nI felt better when I woke up, and ditched the wheelchair after breakfast. The first I found out about the schedule change was when I asked about checkout, and Chase said we were all staying another night. \"A few of us planned a run that will allow us to escort Lana and Laura to the airport,\" he said. \"We added a run along the southern part of the Upper Peninsula afterwards.\"\n\nOur group got on the road at nine, heading back east. Most of the party with carry permits was now armed, so a smaller group had departed earlier to go into Canada to retrieve our people. We waited near I-75 until they were through Customs.\n\nWe formed up our column again after our people crossed back over, and headed south to the Mackinaw County Airport. A few vehicles split off to escort Lance to the Harley-Davidson dealer across the bridge in Mackinaw City. Why only vehicles? The Mackinaw Bridge was several miles long, and used a lot of metal grating which wasn't fun to ride on, plus the winds could be gusty and dangerous. Lance was going to put his Harley on the trailer and drive it back over before he'd get back on.\n\nI said goodbye to Possum as they loaded up the patients into the jet. It was a little painful getting onto Lance's bike, but once I was in place with my arms around him, I felt better. We rolled out of there as the plane took off, then we headed south until we picked up Highway 2 West. This road ran along the northern shore of Lake Michigan, and some great scenery. We stopped in Naubinway for lunch, taking over three restaurants. They couldn't seat us all, so we sent groups through the Top of the Lakes Snowmobile Museum across the street while we were waiting.\n\nWe picked up 123 just west of town, and followed it north and east until we got back to Whitefish Bay. From there, we headed north to the Great Lakes Shipwreck Museum on Whitefish Point, where I had guided tour times reserved for our group. I really liked this stop; the views were beautiful, though I wasn't climbing up on the light tower with my bad leg! Lance did go and take pictures, as did many others.\n\nI learned a lot at the museum, including how of the 550 major shipwrecks in Lake Superior, 200 of them were in the vicinity of Whitefish Point. I had picture of us taken next to the Edmund Fitgerald's bell, and watched as Maritza and Lance searched the shore for agates.\n\nWe left in the late afternoon, stopping at the bottom of Whitefish Bay to visit the Point Iriquois Lighthouse. I enjoyed this stop as well, but kept comparing them to Split Rock Lighthouse back in Minnesota, and finding them a little tame in comparison. We got back on the road and returned to the casino with big appetites.\n\nWe had a section reserved in Sacey's, the all-you-can-eat buffet restaurant. I felt bad for them; two hundred bikers and werewolves laid waste to the buffet like a locust plague. Our little girls, who got in free, did a little damage of their own. Maritza and the others all left with rounded bellies and tired faces; they would sleep well tonight.\n\nChase's RV was surrounded by others in our group at the back of the RV park. Rori and her nannies took Maritza again, giving us a chance to have more adult time in our room. Hey, it is our honeymoon, right?\n\nLance was resting against the headboard and I was between his legs with my head on his chest as we rested between rounds and watched cable news. The anchor followed the 'breaking news' sounder with this. \"The Ontario Provincial Police reported child kidnapper and suspected CIA conspiracist Richard Todd died this afternoon in the Sault Area Hospital. Authorities said he died of a high fever, the result of a werejaguar bite. Police confirmed that kidnapped one-year-old Maritza Meztli bit him in a struggle yesterday morning in the parking lot of the hospital which left three people in the hospital, one seriously injured with a gunshot wound.\"\n\nThe co-anchor didn't seem to mind. \"I'd call this one getting what you deserve, Ann. His conspiracy group tried to take down Air Force One, and made money with drug cartels. We all heard how painful the First Husband's death was, and I won't shed a tear that Todd is gone the same way. Mess with kids, and you deserve this and more,\" he opined.\n\nA guest commentator wasn't so positive. \"What you all are missing is the dangers these were-kind present to the human race. Their animal forms are dangerous; even a nibble by a kitten is enough to kill a full-grown male. We know they've killed in the past, but can we trust them not to do so in the future? The safe thing for us to do is to isolate them to protect us all.\"\n\nThe show's female host rolled her eyes. \"And what? Imprison them on reservations because of how they were born? Are we going to force them to sew paw prints on their clothing to warn us?\" The guest didn't know what to say to that. \"As long as the only people dead are the ones that deserve it, I'm fine with what happened. If they murder someone, they can be held responsible in a court of law.\"\n\n\"How do you hold a one-year-old accountable? The kid can't even understand the charges, so how can you hold her accountable? No, the adults in the room, her parents, THEY should be held accountable for what the child does.\"\n\nThe host just stared at him. \"Nicholas, if she was here right now I'd throw her a party. Come back to me when it's murder, not self-defense. After the break, a wind power project off Nantucket is blocked again by the rich and famous.\"",
        "\"That was interesting,\" Lance said. \"He's probably not the only one freaked out by Maritza.\"\n\n\"More reason to keep her protected. Some whacko might take a shot at her and claim self-defense.\" I linked the news to the rest of the Pack as I thought about what it meant. The Internet was forever, and it would show Maritza to be a killer kitty. \"I'm glad Maritza isn't old enough to understand what she did.\"\n\n\"Our daughter fought like a fierce little warrior,\" Lance said.\n\n\"She did,\" I said. \"I just wish she hadn't had to.\" We made love twice more before falling off to sleep.\n\nThe next day, we headed back out on our updated schedule. We had a nice ride along the southern shore of Lake Superior, stopping for lunch in Grand Marais, the Michigan one! We made it to the docks a Munising by four in the afternoon, where I had a special treat for everyone. We'd seen some of the Pictured Rocks National Lakeshore from the land side, and now we'd see it from the water. I'd chartered two boats, each capable of holding a hundred people.\n\nMaritza loved big boats, so we dressed her and the other young ones in warm clothes with waterproof outer shells. The afternoon sun was still warm, but the breezes off the lake were freezing! We started out on the top deck in the wind, but moved inside after we got out of the harbor. The cruise was a big hit with everyone, and we took a lot of pictures of the sandstone cliffs and formations that make this such a special place. Lover's Leap, a point with a passage underneath, and Indian Head were my favorites. Best of all, it was a social time for the Club while we watched the scenery go by. Many people stopped by to talk to us and to see our fierce little warrior, who if I didn't hold her, was usually in Three Tequila's lap.\n\nWe got back to the docks and headed to the hotels to check in. It was a challenge to stay in larger groups, as none of the hotels in town could take us all, and the RV parking area was down by the water. \"Stay in groups of twelve,\" Chase had told everyone. \"Maria, your group size is twenty-plus.\" I just had to laugh at that.\n\nA bunch of the Ladies decided to stay with us in the RV park and get pizza delivered from a place near the docks while Lance headed out with the Brotherhood. Others hit the smaller restaurants, or got take-out food and brought it to the East Channel Brewing Company, which didn't serve their own food. After the kids were asleep, the girls got out the wine, and the party really started. I don't know if I've ever blushed as much in my LIFE! Get a bunch of Steel Ladies together with a case of wine, and you realize just how innocent and sheltered you really are.\n\nThe next morning, we were heading north for one of my favorite stops, Copper Harbor. It was a fun ride, and we arrived in the early afternoon. The RVs and some of the group set up at the Fanny Hooe Campground, on a lake a few blocks from the big lake, while others scattered into available hotel rooms. The nice thing about the lake was that it wasn't FREEZING COLD, and Maritza and the kids got to swim and play on the small beach. No restaurant in the small town was big enough, but that didn't matter to the Brotherhood. They sent prospects to buy all the fixings for a steak cookout, and brought out the grills to add to what the campground had.\n\nWe ate and talked and played into the night. We'd pretty much taken over the campground, and the owners didn't mind us shifting, so a lot of us did. Maritza and I shifted, and she promptly fell asleep in Three Tequila's lap. I couldn't talk with the Steel Ladies in cat form, so I shifted back soon after. The wolves ran around the woods or played frisbee with their biker friends.\n\nThe prospects headed out early the next morning, returning with coffee, mountain dew, and lots of baked goods from Jamsen's Fish Market and Bakery. We spent the day on a series of short, unhurried rides, stopping for pictures or to shop as we made our way back down the long peninsula. We wanted to take our time on this part of the trip, so we stopped for the night at Houghton. The RVs went to the city park, while the others checked in to hotels on either side of the river bridge. Dinner was, of course, at The Den. The owners were thrilled to have us there, even taking pictures of our Pack members for their wall of fame. The overflow ended up at one of the other restaurants on the street, with many ending up at Keweenaw Brewery, within walking distance of the hotel.\n\nWe were isolated from the others at the RV park, but we planned for this. We had all the RV's parked together, with guards working shifts to keep us safe. Maritza, Brenda, and I ended up in a puppy pile in the sleeping area above the driver's seats, with the other children snuggled into our fur.\n\nThe rest of the trip went the same way; lots of good riding, camaraderie, food, and fun. When our group pulled into Arrowhead on our last day, I felt sad it was over. The rest of the Pack was waiting and welcomed us home.\n\nLance pulled into Roadkill's driveway and inside the open garage, parking next to my Harley. I left my gear in the garage as we headed to the Pack House for our welcome home dinner. The Brotherhood riders who hadn't left us at Duluth were going to stay the night before heading back home, but Lana and Laura were both here.\n\nWhat I didn't know until we walked in was that the \"closing meal\" was actually a wedding reception, complete with cake and a band.\n\nMy blush could have lit up the night sky.\n\nCh. 86\n\nMaria (Meztli) Skollson's POV\n\nArrowhead Pack House\n\nI don't know how they pulled this off with so many Pack members on the trip, but they did. When we walked into the dining area, the Pack had decorated with flowers and blown-up photos of our waterfall wedding the week earlier. \"Congratulations to Lance and Maria,\" read the banner behind the front table. A four-piece band was playing, the members all from Oxbow Lakes. Along one side of the room, they set up three long buffet tables so people could go down both sides. I started drooling when I saw my favorite meal; smoked prime rib roast, mashed potatoes and gravy, corn, and honey-glazed dinner rolls. In addition, a drink table included several kegs of local craft beer.\n\nChase and Rori were there to greet people as they arrived. On the other side of the entrance was a gift table, already filling with boxes. \"How?\"\n\n\"We don't just talk about motorcycles all the time, Maria,\" Chase said with a grin. \"With the Brotherhood and Ladies here, we've got plenty of people who know how to throw a party. So we split up the planning responsibilities and worked with the people still here.\"\n\n\"But all this food?\" Prime rib roasts took a LONG time to cook right.\n\n\"Not that complicated to make, but they had to use all the smokers here and at Oxbow Lakes to get them all done.\" I'd seen the barbecue hardware here, and it was extensive.\n\nI looked around, not knowing what to say. \"Thank you,\" I finally said as I hugged Chase. \"And thank you, Rori. I know you're behind this.\" She licked my face as I hugged her red-furred neck.\n\n\"Come on, baby. We should socialize.\" We went by the drink table, where he got me a glass of cider while getting himself a tall glass of Bent Paddle Ale. The room was rapidly filling up as people dropped their stuff off and came over.\n\nI saw Maritza and the young ones come in from the hallway and nearly choked on my drink. \"Lance,\" I said as I tapped his arm. \"Too early?\"\n\nHe started laughing as he figured out why I was asking. Maritza was wearing a pink T-shirt with a baby jaguar print and \"Daddy's Little Anklebiter\" on the front. The others had matching T-shirts that said \"2021 Arrowhead Loop\" with a map of the lake, our stops marked with stars, and a wolf riding a motorcycle in the middle. The logos of the Steel Brotherhood and Steel Ladies were on the back. The kids ran to their parents, and Lance picked up Maritza and held her on his hip. He moved her so she could kiss me. \"Those are SO cool,\" I told Three Tequila as she came up to us.\n\nShe was wearing a matching tour shirt already. \"The nannies have Maritza's T-shirt, and we just put boxes of T-shirts by the door for everyone,\" she said. I looked over and started to laugh. Do you know how werewolves aren't shy about their bodies? Biker chicks aren't either. So most people coming in doffed their cuts, stripped off their shirts without regard to bras or bellies and put the tour shirt on right there. \"The Brotherhood took care of getting them printed as a thank-you to your Pack for setting this up. This trip went better than I imagined. Club and Pack leadership met and decided we were going to do these rides twice a year from now on.\"\n\n\"Every year? TWICE?\" My eyes got big; it had been a LOT of work, and I wouldn't have made it without Possum's help.\n\n\"Yes, but we're not doing them all here, silly. We decided it makes more sense to have the Packs rotate as hosts for a run in the summer, and the Brotherhood hosts the runs in the winter. Sawyer volunteered to take it next summer; he knew some fantastic rides around Lake Tahoe and the mountains. It's going to be huge because Tahoe and Reno have plenty of hotel rooms.\"\n\nThat did sound fun. We'd vacationed on Lake Tahoe when I was a kid. \"You set up the rotation?\"\n\n\"Yep. After Sawyer, it goes to Carson, then Coral. You're going to have to do this every fourth year, so don't throw away your notes. Chapters in Fort Lauderdale, Vegas, Orlando, and New Orleans are hosting Spring Break runs over the next four years.\"\n\nI just rolled my eyes. \"You better tell Sawyer to break out the checkbook, then. These runs aren't cheap.\" I'd been a little shocked at how much money I'd put on the debit card during the trip. Feeding two hundred people cost a ton, and it was hard to find rooms together.\n\n\"Chase himself said this trip was a gift from Arrowhead; no one expects a full-ride bikership. Set a date, and we'll be there,\" Howler told me. \"We had a great time, and it's good riding.\"\n\nTen minutes later, Chase told us it was time to assemble at the head table to start this off. All of the Alphas and Club Presidents were soon at the head table, with Lance and me in the center. Chase stood up, and the room went silent as he held up his glass for a toast. \"Bikers and Old Ladies, Friends, and Family, tonight we celebrate the mating and marriage of Lance and Maria. May they have a long, happy life together and many pups.\" Lance told me that was the traditional blessing. \"Or kittens.\" That got everyone smiling. \"To Lance and Maria Skollson!\" Lance and I clinked our glasses together, then those on our sides before taking a sip. \"Our guests of honor will open the buffet.\"\n\nWe walked hand-in-hand to the buffet, with the members of the head table following. We moved through quickly and returned, waiting for everyone to get their food before starting. The food was excellent, though dinner was interrupted multiple times by people demanding we kiss. Finally, we had the cake to cut. Like so many things, it wasn't your typical wedding cake. It was a big sheet cake with Lake Superior on it, with Lance on his Harley chasing me around the lake with my wedding veil trailing behind me. We made the first cut, fed each other, then let the professionals take over.\n\nTwenty minutes later, the nannies told me Maritza was falling asleep. I went over to the table with the high chairs; sure enough, she was covered with bits of cake and melted ice cream as she fought to stay awake. \"We're taking them to the nursery,\" Zoe said as she cleaned her face.\n\n\"Make sure you rotate so you can have fun tonight,\" I told her. We were home now, and we all had jobs, but I wanted everyone to relax as well. The nannies and guards had been under a lot of pressure after Maritza's kidnapping.\n\nI picked up my little girl and carried her out, settling her on the bed before returning to the room. The band was starting up, and it was time for the first dance. Lance and I led off, and then for the next song, I danced with Chase while Lance took Possum out. After that, the floor was open.\n\nI was sitting with the Ladies and taking a break when I saw Warrior Monica slow-dancing with FBI Special Agent Cole Brackers. I realized they had been together all night and had eaten together every meal on the way home. Maybe there was more to their relationship than two professionals working together? \"Monica? Is he your mate?\"\n\n\"He is, but I haven't told him yet. He's not ready for that,\" Monica sent back. \"He is leaving for Detroit tomorrow morning, even though it's going to suck going through Chicago in the middle of the day. The Alphas are allowing me to return with him, but I haven't asked him yet if I can go along.\"\n\n\"Congratulations on finding your mate,\" I sent back to her. \"You know, there's a ferry that leaves Milwaukee and another that leaves Manitowoc, heading straight across. It's a nice break from the freeway ride and a lot of fun. You should look into it; the one we took even had little bedrooms you could rent.\" \n\n\"I will,\" she said. I watched her clinging to the big agent, remembering the faint pull I'd felt to Lance that built up to the bond we had now. I hoped they found a way to work it out, and Cole would take the change. He'd be one big-ass wolf, that was for sure.\n\nI tried to stay up, but I was exhausted. Finally, Lance picked up on it over the bond. \"Time to say our goodnights,\" he told me. \"After all, it's our bonus wedding night.\"\n\nWe said goodbye to the leadership first, then the others. It took us twenty minutes to make it out the door, and for some reason, everyone followed. A golf cart with \"Just Married\" and streamers waited by the door. Lance drove away to cheers, a short ride down to Roadkill's home.\n\nWe made love once in the shower and again on the bed before I fell asleep on his chest.\n\nCh. 87\n\nEpilogue\n\nMaria Skollson's POV\n\nArrowhead Pack Pool, February 28<sup>th</sup>, 2022\n\n\"I still look fat and pregnant,\" I complained to Lance as I took off my clothes in the locker room. \"Have you seen these stretch marks?\"\n\n\"You look like you gave birth two weeks ago. No one will make fun of you for that; Pack society is so pup-centric it's a badge of honor. You're still as beautiful as the day we met, Maria.\" Lance tried to sound patient and supportive all the time, even when he was lying his ass off. You try to feel beautiful when you were barely a hundred pounds on your wedding day, and you put on fifty during pregnancy. I'd driven Lance nuts with my morning sickness, my cravings, my mood swings, and my labor. Fifteen fucking HOURS of back labor I suffered through!\n\nI was so jealous of the ones who had easy labors. Colletta barely got to the clinic before Cassandra came out like she was on the waterslide at the pool. Thirty minutes and it was over! I know she'd had four children before, but that was ridiculous. If Frank got her pregnant again, it would be like the opening of Monty Python's Meaning of Life; she wouldn't even notice until the baby started crying! Unfair.\n\nRori's labor was almost as long as mine, and she did it in wolf form to deliver Nancy. Since she was a wolf, so was the pup inside her. Werewolf pups have larger heads than wild wolf pups, so they are harder to deliver. However, since Rori is the Blessed One with Luna granting her frequent fertility cycles, I'm sure she'll have it down to a science after three or four more. Heather also delivered in wolf form for her twins Kelly and Connie. Her wolf belly was huge by the end, but at least her babies were smaller at thirty-four weeks gestation.\n\nAshley's labor matched mine in length before she delivered Shane. At nine pounds six ounces, he was one big boy. I had a new respect for Sawyer's mate now.\n\nColletta was right about one thing. As soon as I looked into Maya's eyes, I forgot about all the pain and suffering involved in pushing a seven-pound two-ounce baby out of my body. My little girl was a miracle, the first known mating between a werejaguar and a werewolf. Doctor Olson was diligently documenting her development, checking on her weekly since her birth sixteen days ago. So far, everything was progressing normally. Maya was a good eater, taking to breastfeeding quickly and gaining her birth weight back by the end of the first week. I wasn't sleeping much yet. I was hyper-protective of my baby, a result of my jaguar instincts kicking in. Since werejaguars are more solitary than wolves and don't have a mate to protect us, we tend to isolate ourselves and the child after birth. I stayed with Maya in our bedroom, and I'd get nervous if anyone other than Lance, Possum, or Doc Olson came in.\n\nIt got better as I became more confident as a mother. By the second week, I'd started to have visitors. The Alpha pair was the first to visit, with Chase and Rori bringing their baby while the toddlers played in the next room. My cat didn't like it at first, but the Pack bond and my mate helped me accept them.\n\nThe next day, one of our Beta pairs stopped by. Beta James did transfer to Arrowhead after the Superior run. He bonded with Lana as she healed and rehabilitated her shoulder, and she accepted him as her mate in late July. Her change went well, and she ended up a Beta-strength wolf with a white coat and black socks. The pair purchased Vic and Spider Monkey's home from the Pack and settled into Pack life. Lana became a close friend, and I could tell she was getting baby fever as she held Maya in her arms.\n\nThey weren't the only newcomers to the Pack. Monica was gone all summer in Detroit, working her way into Cole Brackers' heart and bed. He was stubborn, divorced, and had just reached retirement age. She was just as determined, never mated, and three times his age. Eventually, the mating bond made it happen, and he retired in September and took the change in October. The pair rented the basement of the Beta house while they planned a build for this year. Cole was a big ol' teddy wolf, and Maritza loved playing with him in both forms.\n\nAll the visits were building up to tonight's outing. I'd never worked up the courage to take Maya to Pack meals or the pool until now, despite Lance's encouragement and Maritza's pouting. Having Daddy play with her in the pool was all right, but not as fun as having Mom's cat around. I looked down at Maya in the baby carrier at my feet and took a deep breath.\n\nThe door to the pool opened, and Rori came in. \"Are you all right?\"\n\n\"I think so. I need to do this,\" I told my Alpha.\n\n\"Everyone knows how nervous you are, and no one will crowd you. Lance and Maritza are waiting for you in the shallows, and the other Moms are there with their young ones.\"\n\n\"All right.\" Maya was already in swim diapers, so I held her as I rinsed off in the shower before putting her back in the carrier. Rori held the door open, and I heard the pool noise die off as people waited for us to make our appearance. The Pack members stayed where they were, smiling as they tried to get a better look at my baby.\n\n\"MAMA! MAMA SWIM!\" Maritza's voice cut through the nervousness, and I walked carefully over to where she was sitting in the shallow water. Cheryl and Mark were next to her, and Chase had Nancy between his legs at the edge. I sat next to Chase, taking Maya out of the carrier and putting her on a foam baby mat between my legs. She'd taken baths before, but this water was colder.\n\n\"Momma? Cat?\" Maritza loved being in her jaguar form in the water and swam like a fish that way. Unfortunately, wolves don't shift until their teen years, so Maritza was the only child who could play this way until now.\n\n\"Go ahead and shift, and we'll watch Maya,\" Lance said.\n\nHe had to watch because Maya would change to match my form. Maya had already shifted a few times in my den, but only recently was she able to hold her oversized head up in kitten form. Maritza had a little more freedom; she could be ordered not to shift, or I could tell her to shift on her own. Only once had she changed without permission, and that was the day of her kidnapping. \"Shift, Maritza,\" I told her as I pulled my cat forward.",
        "My body lengthened and changed as my yellow and black fur sprouted out. A moment after and I was in my jaguar form. Maritza padded over in the water to her baby sister, who had shifted into her cat as well. Maya's cat was small and fuzzy, with a body that had to grow into her head and paws. I moved over and lay down next to the pad, and she started crawling for a teat.\n\nI relaxed as she started feeding, and Lance asked if I'd allow people to walk up and look at the baby. \"As long as they don't touch,\" I told him. The Pack members started filing by, but none reached down. I could handle that.\n\nMaya finished eating and started to crawl around, unafraid of the shallow water. I kept a close eye on her as Lance watched Maritza play in the deeper section of the kiddie area. \"You should shift too,\" I told him. \"Take Maritza to the slides.\" She LOVED swimming in the deeper water after going down the waterslide in her cat form.\n\nLance knelt by us and shifted into his wolf.\n\nMaya looked at him and shifted into a wolf pup.\n\nThe pool area got quiet as word spread of what had just happened.\n\nLance and I didn't know what to think. Lance's wolf leaned down, sniffing and licking his pup. \"Wow.\" Sitting up, he raised his head and let out a howl to the Moon Goddess. When it finished, Chase and Rori shifted, quickly followed by the rest of the Pack. The Alphas started the next howl, with the rest of the Pack changing and joining them.\n\nMaya raised her head and added her little 'ah-whoo' to the chorus.\n\nThe End"
    ],
    "authorname": "partwolf",
    "tags": [
        "werewolf",
        "werecat",
        "panther",
        "alpha",
        "luna",
        "pack",
        "biker",
        "harley"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/aztec-treasure-ch-81-end"
}