{
    "title": "At His Majesty's Pleasure Ch. 15",
    "pages": [
        "Authors: Thank you, as always, for bearing with our spotty activity! We couldn't ask for a better readership. Here's to another somewhat longer-than-average chapter!\n\nAnd in case you missed it, this was our latest update in the comments, where we explained our absence:\n\n\"First of all, I want to make it clear that we have no intention of abandoning the story. We have the whole plot planned out, we're excited to share it with you, and we promise to see it through. It just might be a bit slow getting there, as things come up in our lives. Secondly, and no less importantly, I want to apologize for how much time has passed since our last update. We wanted to wait until we had some good news before posting, so we kept putting an update off until we could tell you that we'd finished the next chapter. Unfortunately, that took a lot longer than anticipated - we certainly didn't mean to go silent for so long. \n\n\"The reason this took so long is partially because of a new job starting for one of us, but also because of some personal issues and (admittedly) poor time management. We will do our best to get better, but unfortunately this story remains a hobby and we aren't able to give it first priority in our lives, no matter how much we'd like to be able to. I hope you guys can understand that. If not, and the wait is too frustrating for you, then you are of course free to simply stop reading. :P On the other hand, thank you for all the patience and enthusiasm that some of you have shared in the comments. It really means a lot, and it keeps us going!\" \n\n*****\n\nAlexander eased back in his armchair, drink in hand. His mind was on the day's events and its many surprises - least of all the apparent threat that had marred the end: the headless statue of himself, no doubt a symbolic challenge to his rule. The perpetrators did have nerve (he'd give them that), staging that display in the midst on his wedding. Death wouldn't be good enough for these intrepid revolutionaries. He'd see them dismantled by agony. Slowly. \n\nHe sipped his drink, thinking to himself. He'd already caught most of the conspirators, in typically efficient fashion; mentally, he ticked off each of the names one by one. Duke Nolan, the financier of the scheme. Ser Lucas, a spy planted among his personal guard. Count Jarrett, the messenger. And the assassin himself, naturally. \n\nAll disposed of. But he was missing one piece - and the most important piece, at that. There was a mastermind behind all of these players, one who evaded justice even now. If Jarrett was to be believed, this puppeteer was even on the council itself. But who? It was as if he'd chopped off larger and larger parts of a serpent, but the head of the snake remained at large, ready to replenish its energy and strike again.\n\nHe had work to do. But now was not the time to resume his investigation, for it was his wedding night, and he intended to enjoy himself. Accordingly, his eyes wandered back to the door of the dressing room, where he'd instructed his bride to be stripped bare for him.\n\nShe had been radiant, his queen. A lesser beauty might have been swallowed up by the lavish attire, perhaps overshadowed - but not her. The luxurious gown had only accented her natural charms; the shimmering jewels had brought out the brightness in her eyes. \n\nHe knew he had been the envy of every man at that wedding, and he relished it. \n\nBut of course, the day hadn't been without its blemishes. His mind went to a less welcome memory - that of his wife, in all her grace, dancing happily on the arm of King Jehan. Even the thought of it summoned residual feelings of frustration. Disobedience from anyone was a rarity in his life; disobedience of an explicit command, on purpose, was still rarer. Few people challenged him these days, and there was a reason for that. Did she really want to try her luck?\n\nIt was true, though, that most of his anger had been dulled by a rather surprising discovery: she had been jealous. The idea fascinated him, and all the more because she had been so reluctant to admit it. He wondered what other secrets he could wrest from her tonight.\n\nNeither would her jealousy, for all that it gratified him, save her fully from her fate. She had disobeyed him regardless, and there would be consequences for that - lest she think to make a habit of it. No, she would be punished.\n\nAnd he was going to enjoy it.\n\n*****\n\nHer handmaidens (notwithstanding Bimba, who had been sent to rest for the remainder of the evening) removed each garment piece-wise; blessedly, the task of undressing was much less tedious than dressing, allowing them to finish long before their first candles needed replacing. As Alais stood waiting, a sickly knot had settled in the pit of her stomach.\n\nHe'd specifically commanded her to dance with no other man today, but it seemed such a trifling matter. Why did he care so much? It had just been the one.\n\nDeep down, she knew it was the principle of the thing. He didn't like to be disobeyed, and now he was going to impress upon her the consequences. The satisfaction of defying him had not been fully extinguished yet, but she felt a shiver all the same at what lay in wait for her. Was it worth it? What would he do? He'd almost seemed amused by her jealousy (not that it was jealousy, she thought stubbornly), so perhaps that would dull the brunt of his vengeance?\n\nShe had almost felt affectionate of him, a few hours ago, after his procession of gifts - first, her handmaiden from home, and then, surprises of surprises, that thoughtful piece of dessert that had so oddly humanized him. Alais tried to bury such thoughts away. It was irrational for her, after all the injury that he had visited upon her. What about her revenge? What of her plans? She could not afford to soften against her resolve, or allow herself to lose sight of where her fake \"love\" ended and her true feelings began.\n\nAnd she would only be disappointed if she formed any hope of his fondness lasting. He was notorious for his moods, and his interest in women was always fleeting. He was indulgent now, even charming, but would he not become cruel again once he grew bored? Was there a chance he would not? Would this \"punishment\" change things already?\n\nShe hated that a small part of her was also a little...excited by the prospect. She remembered the last time he'd punished her - the caress of that riding crop, the tingling arousal that he had elicited despite herself. Alais bit her lip, trying not to linger on the thought.\n\nAll these emotions whirred rapidly in her mind, but there was no time to delay any further as her handmaidens ushered her out. She emerged from the dressing room covered in a robe and shift, the garments thin and cool against her skin. She caught a glimpse of him seated in an armchair; her head tipped toward him very briefly before she made toward the bed, as though with no memory of his promise from before. Perhaps the scandal with his headless monument served distraction enough. Perhaps he would forget.  \n\nBut no, she wasn't that lucky.\n\n\"Ah ah ah,\" said a chiding voice behind her. \"And where are we going?\"\n\nAlais froze mid-step, the frequency of her heart palpitations rising as she turned slowly to face him.\n\nThe King lounged lazily in his armchair, wineglass in hand. He had changed out of his outer garments as well, and was currently clothed in only a loose-fitting tunic and dark pants; his shirt was light enough that the candles shed light over the toned muscles underneath. \n\nShe looked away, back to his face, hoping he hadn't caught her staring.\n\nHe took a casual sip, his blue eyes never leaving her. \"As eager as you are to warm my bed,\" he said, with an amused quirk of his lips, \"I've yet to punish you to my liking. Isn't that so?\"\n\nIndeed. Punishment. The King no longer seemed angry as he did, but she found that she couldn't always rely on her perception of his ever mercurial moods. While he sounded teasing, perhaps, she was prepared not to like this punishment, and could only steel herself for further humiliation, as her hands bunched against the collar of her robe.\n\nIn what ways could he degrade her more than he already had? No, there were still ways, and her body tensed a little with the onset of her rising anxieties. Eyes lingering on his chin, her features had settled into the expression of one who was only sheepishly bashful. She wouldn't allow him the victory of seeing her more heartfelt discomforts if she could help it.\n\n\"... If Your Majesty insists?\" she quietly replied.\n\nThe King's gaze roamed her features as if searching for those very vulnerabilities that she was attempting to hide. In contrast to her apprehension, he seemed - as usual - relaxed and wholly at ease, as if he were treating himself languidly to some diversion.\n\n\"Oh, I do,\" he answered. \"However, I am not unreasonable. If you entertain me well enough, I can find it in myself to be more merciful with your punishment.\" He offered a teasing look, as if to convey the generosity of this sentiment.\n\nHer brows lifted, a breath emerging from her lips. There were innocent flavors of entertainment like singing or playing an instrument or dancing fully-clothed. Alais had no faith in his taste for innocence, but she was resolved to play her game nonetheless, her lashes blinking with confusion.\n\n\"But if you resist, I'm afraid I would have to resort to being more... stern with my discipline.\" He adopted a look of sympathy that was utterly unconvincing (not the least because of his smirk). \"As loathe as I am to take these measures, how else would you learn the error of your ways?\"\n\nAlais shifted uncomfortably. While she hadn't planned on resisting, she wasn't quite confident that she could contain the more visceral of her reactions. \"...Entertain, how?\"\n\n\"Well,\" he drawled, \"you could start by ridding yourself of your clothes.\" His grin was unapologetic, and he raised his eyebrows expectantly as if waiting for her to commence. \n\nAlais kept herself steady, despite the hammering of her heart. Outwardly, her doe-eyed expression didn't change, didn't so much as blink. So far, so good.\n\n\"And yes, I remember how clinical you were last time. None of that now. You do love me, don't you?\" He lifted his glass, as if in toast, a smile still playing at his lips. \"Slowly,\" he instructed. \"Sensually. Please me, and your punishment will be less severe.\"\n\nWhat happened after wasn't prompt (he explicitly said the word slowly, after all), but there was nothing that could be described as resistance in her bearings. Her cheeks warmed at the instruction, but this wasn't so bad. She had lain with him dozens of times by now; to consider this too demeaning to bear would've been an odd contradiction to what she'd already endured. Right?\n\nShe could feel the cadence of her breath in her ears as she came up with the questionably novel idea to undress backwards, giving her a little more time (slowly) if not for the sake of it. After a little finagling and twisting of her limbs through her skirts, she managed to pull her smallclothes down to an ankle. She lowered her foot back and stepped out of the undergarment, eyes pinned to the floor all the while.\n\nA chuckle sounded from the King, at her methodology. \"Wanted to get that one out of the way, didn't you?\" \n\nHe leaned back, making himself (if possible) even more comfortable upon his armchair. \"Go on, then,\" he ordered. \"And Alais - look at me while you do it.\" \n\nHer eyes darted up toward his at the command with a swiftness which surprised even her. She understood the intent behind this command: he would not have her detach herself and make it easier - she was to see who she was doing this for, and what enjoyment she provided to him. His gaze was intent and penetrating, such that she tried to focus on his chin instead.\n\nMeanwhile, Alais tucked her hands underneath the folds of her robe, maneuvering with the straps of the shift beneath her sleeves until they finally came loose. One of the nightgown straps caught near her elbow, where she twisted for a moment before the whole piece came tumbling down to her ankles in a pile of silk.\n\nShe felt him watching all the while, still lounging comfortably as she was forced to bare herself to him. It should have been nothing to disrobe, when he'd seen her nude so many times already, but somehow it felt different. He was so often the one to tear the clothes from her body; now it was by her own hand that each layer of protection was slowly unraveled. Did he notice her trepidation? Was he enjoying it?\n\nAll that remained was the gauzy robe, which she kept tightly wound about her with both arms hugging her chest. Nothing lay underneath.\n\nWhen she paused at this final step, the King chuckled. \"How many times have I seen you bare before me?\" he asked. \"And still you struggle with your modesty?\" \n\nShe wrinkled her nose at him, just short of huffing at his remark.\n\nAnother slow sip from his glass. As he set it aside, however, he uncoiled from his seat, rising to his towering height before her. Leisurely, he approached, his footsteps echoing ominously across the oak floor. \n\nHer heart hammered yet louder, and she fought the immediate impulse to back away. But she stood her ground, even as that knot in her stomach grew tighter.\n\n\"Not very sensual, as performances go,\" he commented. He was before her, so close she could almost feel the heat of his body; the candlelight outlined his tall figure and bathed him in its warm glow. (She hated how handsome he looked in the dim light.) His fingers came to her chin, directing her upwards. \"And still you avoid looking at me.\" \n\nHe did not seem necessarily displeased by her performance, however hesitant and embarrassed it had been. If anything - despite his words - she suspected he enjoyed her show of vulnerability. His smile was ever present as he continued, \"Perhaps you do wish to earn a greater punishment. It would make sense of the rest of your actions, after all.\"\n\nAt his accusation her eyes widened, sparks of indignation emerging in her brightly green eyes. \"What? Do you know how difficult that was? More than it looked! You try stripping from inside-out.\" She made an audible puff of her cheeks, matched his gaze for a moment, before finally casting her eyes aside.\n\nHonestly, though, there really was some deftness of hand involved. Certainly more so than your usual undress.\n\nThe King chuckled at her indignation. \"I didn't ask for such a feat. You took it upon yourself.\"\n\nHe lowered his hand from her chin, allowing it to skim lightly over her neck. As a result of her backward maneuvers, the thin robe was the only fabric that separated her from him; it left her chest bare where it parted, and there it was that his warm fingers slowly drifted across, evoking a trail of goosebumps and gentle shivers in their wake. \"What I did ask was for something sensual.\" His eyes were back to hers, a wicked smile at his lips. \"Do you know how to be sensual, Alais?\"\n\nShe was insistent enough to keep her arms clutched about her belly so that her rosebud nipples were still barely concealed beneath the sides of the robe. \"I don't see what was so unsensual about that,\" she retorted back, continuing to latch onto her indignation - lest her nerves reclaim her. Her lips formed a pout.\n\n\"Then you have a lot to learn,\" he replied. His smirk widened. \"How fortunate that I am an experienced teacher.\"\n\nHis hands found her wrists, gently prying them from her chest, and was not met with struggle but a dull sort of resignation.\n\n\"You have such lovely assets, my queen - if only you'd display them to your advantage,\" he chided, teasingly. And as with any monarch, commands issued easily from him. \"Clasp your hands behind your back. You will keep them there until I tell you otherwise, yes? Or I will bind them instead.\"\n\nHe released his grip, so that she might attend to his order. She hesitated, but knew this was not the hill to die on. Her hands slid toward the small of her back until one wrist was loosely set on top of the other. \n\n\"Arch your back,\" he continued, casually. \"Spread your legs a little.\"\n\n\"I don't\u2014I don't see how that is more sensual,\" she said, clearing her throat. No, she did see why. But she was stalling, and they both knew it.\n\n\"That wasn't a request, Alais.\" It was subtle, she could sense it - that touch of danger in his voice that could always show itself at any time. She familiar enough with his moods now to know not to test it.\n\nReluctantly, she stood a little straighter. Her legs parted a touch, where they had previously remained carefully tucked next to each other.\n\n\"More.\"\n\nHe wedged his own foot between hers, and with a careless sort of presumption, nudged at her ankle so that she was forced to widen her stance even further. She gasped, but relented; it was not like she could overpower him when it came to physical strength. Instead, she could only let him maneuver her to his liking: her feet were now planted wide apart. \n\nBut he wasn't done, of course. His hand settled over her waist, smoothing around to the small of her back. He eased her forward there, at the same time as his other hand pressed back on her shoulder. \"I want you to arch further,\" he told her. \"Like this.\" \n\nAnd he continued guiding her body into his desired shape, his touch firm and unyielding; under his handling, he had her emphasize the jut of her hips and the thrust of her chest - such that her breasts were proffered forth, as if she were coyly presenting those assets. The arching felt unnatural and lewd - and deeply vulnerable. Alais could not shake the suspicion that he was mocking her in some way, even with the warmth of his skin sliding meticulously over hers.\n\nA smirk tugged as his lips again, as he looked over his handiwork. \"Yes, just so,\" he commented, allowing his gaze to linger at the swell of her curves, now barely concealed by the gauzy robe. The robe, parting at her navel, still barely preserved the modesty of her breasts, and the silk string tied loosely about her waist kept the bottom of it closed.\n\n\"You see?\" said the King. She was conscious that he remained close, enough that she could feel his body heat. \"Sensuality is about the idea of suggestion, Alais. The way you present yourself now invites me to imagine what pleasures I might inflict on you.\" \n\nHis gaze drifted down. \"See how your legs are spread - as if in want of something to thrust between them.\"\n\nA slight, but wicked tingle shot through her spine. She felt an emptiness at the junction of her thighs, and she could almost feel his cock - hard and thick - plunge into her.\n\nIt was as if he could read the desire in her eyes, for his gaze was lit with a gleam of self-satisfaction. But she could see that he was also affected, for his voice was growing more low and husky. \"...And how your lovely breasts are presented, as if inviting someone to attend to them.\" \n\nShe inhaled deeply as his hand came to rest over her breast, heavy and warm past the thin cloth. She was trying her hardest to remain impassive, but she couldn't help the tiny tremors that claimed her as his fingers fondled and squeezed. Her own hands were still clasped helplessly behind her, where he'd commanded they remain.\n\n\"Of course,\" he continued, \"sensuality can be subtle as well. A certain turn of phrase might be sensual. A smile might be sensual. A look...\"\n\nHis eyes met hers. The lust in his gaze was easy to perceive, smoldering as it was, and somehow it was enough to make her knees feel weak. She resisted the temptation to look down from his face and catch a glimpse of where his hands roamed at his leisure, for she was transfixed. His eyes did seem a touch mocking, but even then they drew her in like a magnet, holding her captive. In a single look, his meaning was clear: you are mine.",
        "Then his smile returned, mischievously. \"You can keep the pout though.\"\n\nIt took a moment to register, but at those words, she attempted to banish the sullen look from her face. \"I wasn't pouting.\"\n\n\"You shouldn't be ashamed. You pout very charmingly.\" He drew a finger over her lips, as if feeling their softness. \"Especially with such pretty lips.\"\n\nHe released her a moment later. \"Remember this position, Alais,\" he said. As he circled around, looking over her appraisingly, she willed her fingers to stop fidgeting behind her back. \"Remember it exactly. From now on, whenever I tell you to 'present yourself,' you will assume this stance for me.\"\n\nWhat was she, a dog being taught tricks? Indignation sparked within her, but there was also something alluring about the way he asserted his control. In her mind's eye, she imagined herself straightening into this provocative pose at nothing more than his casual directive. The image had her feeling equal parts disgusted and amused, and perhaps with an inkling of shame.\n\n\"Do you understand?\" he prompted.\n\nHer mouth parted, some witty retort halfway formed, but she decided against it. She wasn't going to give him the satisfaction of riling her. Hadn't she promised herself that? And it wouldn't benefit her. What would benefit her was to get through this night as quickly as possible. In a word: survive. So instead, she simply nodded, not meeting his eyes.\n\n\"Hmm. Good,\" said the King. He'd come full circle, and was before her again. \"But I see I am overwhelming you,\" he remarked. \"Perhaps that is enough of a lesson for tonight.\" His smile turned wicked. \"After all, we haven't discussed the matter of your punishment yet. But first...\"\n\nHis fingers found the collar of her robe, and there tugged down. Slowly, he unraveled her last protection, and when the cloth fell to her feet, it left her entirely bare before his eyes. It was all she could manage not to shiver.\n\n\"Much better,\" he murmured, his gaze admiring as he looked over her. \"Now, follow me.\"\n\nShe flinched as a swift slap fell upon her backside, as if to prompt her forward - timed, of course, with his laughter again. \n\n\"You're terrible,\" she managed, even as she eyed his movements with some curiosity. Where were they going?\n\nAs he brushed ahead of her, she swept the discarded robe off the floor and clutched the silken material to her chest. She'd made a feeble attempt to shield herself again, and perhaps the gesture served her only in spirit. Internally, she tried to reassure herself - she didn't think this punishment would be too painful. His mood no longer seemed so foul, and felt even playful now. One could hope.\n\nThe King was making his way to a bookcase just besides the crackling fireplace. At first she observed him curiously as he seemed to skim along the shelves' contents, only for her skepticism to give way to surprised realization as his withdrawal of a key drew her attention to the intricately hidden doorway camouflaged within the array of books. She moved to follow obediently, to some level even enchanted by the intrigue of secret doors. Alais was no stranger to the concept, after all.\n\nAn uneasy anticipation stirred in her belly, however, and she clutched her robe a bit more tightly. \"But yes, your depravity can get a little overwhelming,\" she chimed belatedly. For safety's sake, she pitched her voice to be teasing as opposed to insulting.\n\n\"Perhaps your tolerance for my depravity is too low,\" he replied, as the unlocking mechanism echoed ominously. \"We shall have to acclimatize you.\"\n\nHe swung open the heavy door, books rattling, and stepped aside so that she might enter first.\n\nThere were no windows inside, but the room was well-illuminated by the presence of several torches. Within, there were all manner of strange contraptions, the design of which varied sharply from piece to piece - some seemed instruments of pleasure, made of rich leather and soft velvet, and others resembled methods of torture, formed of chains and cold metal. The device closest to them appeared to be a large, X-shaped cross, upon which unfurled several straps - no doubt to confine an unfortunate prisoner; a lavish divan sat adjacent, as if to allow the tormentor a comfortable viewing prospect. \n\nAgainst the nearby wall were elegantly carved shelves and tables, whose wares appeared to include both objects of restraint (cuffs and rope) and pain (whips, floggers, and riding crops), along with ordinary books and scrolls. Other recognizable objects included two differently designed pillories, a human-sized cage, and what appeared to be a modified rack. Still more furnishings were entirely alien to her, such as a coffin-shaped chest resting squarely in the center of it all.\n\nIt looked like some kind of...pleasure dungeon.\n\n\"I hope I haven't alarmed you,\" said the King, in his mildest voice. Behind them, the door closed, sealing her inside.\n\nA discomfited silence settling over her, and she squeezed the bunched up robe a little more tightly to her chest. Casting torch-lit shadows, the alien contraptions nearly seemed to flicker in her eyes. Her stomach dropped as she swept each stainless inch of metal for something, like droplets of blood, or anything to indicate the worst of what he intended to inflict. How he intended to punish. She imagined the straps of the rack binding her, or the bars of the cage imprisoning her within. And all of this, a few paces from his parlor? Did his servants and slaves enter this chamber often, scrubbing every corner and insuring the torches were consistently well lit? Why hadn't she heard of this up until now?\n\nDid he really have this?\n\nMore subtly, she felt a niggling of anticipatory thrills, a horrifying excitement threatening to undermine her dignity for the umpteenth time since he had laid his claim over her.\n\nIt was natural. Besides, she did not rationally think that great pains were in store for her that night, lest her husband damage her irreversibly. He wouldn't ruin an object he clearly held to some material value, not this early on. And didn't he seem to care for her at least a little, in that way of his? Of course, it could all be part of his manipulation, and she was naive to believe it possible.\n\nShe did attempt to console herself that the chamber seemed more fitted for recreation than torture, even to her unstudied eye.\n\n\"...Should I expect to be very uncomfortable,\" she whispered after a long pause, glancing over to him. She still felt her heart thundering inside.\n\n\"Would that excite you?\" was the King's response, his smile undiminished. \"Being uncomfortable?\"\n\n\"Most people don't react to discomfort with excitement, so probably no...\"\n\n\"No?\" he said. \"I seem to recall you becoming rather excited when I took my crop to you. And I imagine that was quite uncomfortable, wasn't it?\" His expression was smug, though that also appeared to be his default state of being. \n\nHe seemed to take some pleasure in her dismayed reaction, his eyes (amused as always) studying her for a few moments. That was, before they drifted down to spy the robe she clutched to her chest.\n\n\"The point of disrobing you was to do away with your modesty,\" he pointed out, with a chuckle. He reached out, tugging the bundle of cloth from her with minimal resistance; from her there'd only been a small sigh of resignation mixed with frustration. \"And I recollect telling you to keep your hands clasped behind you until I told you otherwise - isn't that so?\" His voice took on that of casual command again. \"Correct your mistake.\"\n\nShe decided to seal her lips following that, looking straight on ahead as her arms slid behind her, again, her hands gripping one another by the wrist. This was preferable to the rope, and she didn't doubt he would resort to bondage after enough displays of defiance. She hadn't even intended for defiance. It was just not comfortable.\n\nA tingle danced along her spine, though, again at the assertion of his control. Even more uncomfortable.\n\nThe King seemed satisfied with her obedience, and motioned her forward, as if to examine the first exhibit - the X-shaped cross. \"And it's not entirely unusual, you know,\" he said, with mischief back in his smile. \"I've been told it can be very pleasurable to be at my mercy.\"\n\nTrying to appear noncommittal (though more curious than she knew she should be), she followed the guidance of his gestures with a painfully distinct awareness of her nakedness, feeling the chilling smoothness of wooden flooring beneath her toes. Her eyes were raised momentarily toward the cross before flickering toward him, again, with a cautiously inquisitive glint in her large and vaguely unsettled gaze.\n\nThere seemed to be an unspoken question of whether they could move on. Out of everything, she thought the concept of this cross the most uncomfortable of the bunch. \n\nThe King, however, did not seem interested in wandering past the device without subjecting her to some reflection on it. \"It isn't a bad view, you know - having a beautiful woman mounted there.\" He grinned, probing his stubbled chin as he glanced from the cross to her, as if in earnest consideration. \"What do you think? Would it be a good fit?\"\n\nThe prospect of her entire body being strapped to that cross - every limb locked helplessly in place - was stifling. She looked away. \"I think it might be wiser to consider your other options first.\"\n\n\"You shouldn't be so reluctant until you've tried it,\" he remarked, with another chuckle. \"But very well, let us consider all prospects. We want to be thorough, don't we?\"\n\nOne hand came to rest at the small of her back, guiding her forward as if in some gentleman-like manner (as if she weren't fully nude, in his dungeon).\n\nHe steered her to the two pillories next, laid out side by side. Each one sported three holes, one for the head and two for the hands, so that a prisoner would be kept constrained on her knees. She noticed that those holes were lined with soft velvet, and there was even a cushioned pad supplied for where one's knees might go. \n\n\"One is more comfortable than the other,\" he imparted, slyly. \"Which one I use depends on my mood. Both present a favorable position for a good whipping, though.\" He gestured informatively.\n\nShe examined each pillory with what seemed to be thoughtful scrutiny, while her insides continued to churn. Pillories for pleasure and recreation. Her ability to feel shock had been much too blunted by then, and perhaps she ought to have considered that a blessing. \n\nBeyond them was a horizontal rack, which resembled a simple table, albeit one that was extendable from both sides and sported leather straps. \"Fully functional,\" said the King, jovially, as he demonstrated.\n\nIn a way, it was almost as though she were being escorted through some grand tour. \"What...sort of people are brought here?\" she heard herself ask.\n\n\"What do you think?\" he replied, turning it back to her. His spirit was playful, at least, instead of threatening. Or playfully threatening, which seemed to be his brand of doing things.\n\n\"Mistresses?\" An innocent guess.\n\n\"What gave it away?\" he said, with a smirk. \"Yes. Though I do occasionally use it for more serious purposes, circumstances obliging.\" How reassuring to know that the room could be applied to true torment. Then again, he might have been joking.\n\nThey left the pillories and rack behind, next approaching the cage that was their neighbor. \"More comfortable than it looks,\" he supplied, opening it for her to see the cushioned interior.\n\nAfter deliberately positioning herself in a way that would not allow him to shove her inside with a push, she peered into the cage. Locked behind those narrow bars, it occurred to her that he wouldn't have a way to touch her while she was trapped inside - probably. But to be kept inside a cage at all, like some animal? \n\n\"I see...\" she commented, with as much detachment as she could muster.\n\nHe continued walking her through his furnishings, explaining the purpose and effect of each one; his manner was nonchalant, as if they were speaking of everyday objects, though it was unquestionable that some of his jokes seemed calculated to unnerve her. Near the coffin apparatus, for example, he merely said, \"We can speak of that if you've deserved it.\"\n\n\"I see,\" she repeated, with a little less color.\n\nSome brave soul should try shoving him inside that coffin.\n\nOnce they had fully circled through the room, he smoothed his hands together. \"Let's see, what's left? Oh yes.\" He walked them to his shelves, where a row of riding crops was the first to greet them. \"Though of course, you've some familiarity with these already.\"\n\nShe timed the cadence of her breath to maintain a pretense of not being too cowed. He still had yet to mention what her punishment would be. Did walking about naked count as punishment? It felt punishment enough for her, but she didn't dare hope he was benevolent enough to end the tour here.\n\nBesides the riding crops were a similar assortment of whips and floggers, all arranged in increasing size and apparent severity. \"Oh good, these have been cleaned recently,\" he commented, picking one of the more sinister looking whips to appraise. \"So unappealing when there are lingering traces of blood.\"\n\nHe was grinning again. It was highly likely that he was only teasing, preying on her fears - but it was also possible he was being serious. She wouldn't put either past him.\n\n\"Very well. Should we have you choose one for tonight's session?\"\n\nHer mind looped in circles. He wouldn't hurt her. He wouldn't mark her in ways that would draw blood. He would toy with her in other ways. He was toying with her now, and if she could see past that, this would not be so unbearable.\n\nShe kept breathing slowly, but not too deeply; her chest was so vulnerably bare, and the steady rise and fall of it too obvious. \"I wouldn't know the difference between any of them,\" replied Alais.\n\n\"That's the fun of it, isn't it?\" It was evident that he was having fun, at least. His fingers went to her hair, playing with the strands. \"Go on, choose one.\"\n\n\"I don't know.\" Bristling was still her natural instinct, with the way he was all but goading her. But this was also nothing new from the past weeks, and she did not break. She would have crossed her arms, were they not still obediently clasped behind her. \"Must I?\"\n\n\"By all means, abstain. But if you don't, I will have to choose for you,\" he replied, his manner nonchalant in the most misleading of ways. His smile was not reassuring. \"And you may not like my choice.\"\n\nShe swallowed a little, looking back to the selection. There were so many, and of all different shapes and sizes and models - from the short and springy to the long and winding. Her eyes lingered on a leather cat o'nine tails in particular, and the way its plaited cords were laid out spiral-like in an almost artistic fashion. Not that, she'd decided.\n\n\"The leftmost?\" she spoke up, finally.\n\nThe King picked up one of the smaller choices, turning it over in his hands. \"Flexible. I imagine it will sting.\" He smirked, even as her heartbeat picked up at the prospect. \"Good choice. Now...\"\n\nHe turned her about so that they regarded the room again, indicating the two pillories before them. \"Where would you like to be imprisoned?\"\n\nFeeling his hands on her again, she paused. Fear was ever present, but she quickly hammered the unease away. He would not mar his prized object with unsavory scars this early on, she ratnioalized to herself, for the upteenth time. Her mind went white. \"How about the cage?\"\n\nHe laughed. \"Of course, a hiding place would appeal to you,\" he said, eyeing the little enclosure as well. \"But no, you must choose a pillory, Alais. Perhaps you'd like to examine each before making a decision?\"\n\nThis time, his \"encouragement\" came in the form of a swift whipcrack against her rear - enough to bite, though playful and nowhere near his full force. It was more of a swat, and at least the extent of her reaction was a flinch; she bit back a yelp while giving him an indignant look. \n\nBut he was already walking to the two furnishings in question, and reluctantly, she followed. She never thought she would be held in stocks before, but if his intent was to shame her, she supposed she could at least cling onto the luxury of almost-privacy. No one would see her like this, except for him. She held onto that like a shield. \n\nAs for the pillories, it was difficult to tell which was the supposedly more comfortable one. She imagined herself thus ensnared - her wrists and neck locked within velvet, her back bent into a submissive position of supplication on her knees. And, of course, being completely helpless and bare before him, as he rained lashes upon her squirming body at his leisure. \n\nIn spite of her efforts, a flush was blooming prettily on her cheeks. She knew what he was doing, by making her choose her punishments. In doing so, she would have to think about it all the more, and was not her own imagination the most powerful source of humiliation? Alais decided to make the choice quickly, if only to get it over.\n\n\"The one on the left,\" she indicated. If only because it was the one furthest from where they stood. \n\n\"Very well,\" said the King. \"The choice is made.\" He moved past her, resting her chosen whip atop the pillory. \n\nShe breathed in deeply, body tensed in anticipation of his next command.\n\nThe King grinned at her, almost conspiratorially. \"...And next time you disobey me, this will be your punishment.\"\n\nAt first, the meaning of his words didn't fully register, and she stood confused for the sparsest of heartbeats. Then she blinked, sliding her eyes toward him, then back at the pillory... then back at him again. \n\n\"Oh,\" she said. So she wouldn't be suffering the whip this time - it had all been to scare her. \n\n\"Oh,\" she caught herself repeating. \"You\u2014\" The rest of the would-be accusation died in her throat. Her eyes were wide, that faint scarlet still tinting her cheeks. There no quip in the world she could make that would have felt anywhere close to satisfying. He'd scared her, the bastard.\n\nHis grin gave way to a full laugh, at her reaction, and he looked at her as if she should be sharing his mirth. \"You truly believed me, didn't you?\"\n\nHe reached out, his palm resting against her warm cheek. \"Such redness in your cheeks. You must have been petrified,\" he said, though he gave no indication of remorse. Quite the opposite. \n\nThere was something inappropriately boyish to his delight that it drew her pouting again. \"How cruel of you,\" she chastised. And she liked to think that they had reached the stage where she could chastise him, in this helplessly mild-mannered and abashed way, without calling for further punishment.\n\nOf course, if she was being honest, what she really wanted to do was to slap him. \n\n\"Not cruel,\" the King replied, with a chuckle. \"I'm merely allowing you to envision the consequences should you disobey me again in the future. Is it so terrible for me to wish my queen be well-informed?\"\n\nAs terrible as his mind games were, she couldn't deny that her strongest feeling was that of relief. He'd just wanted to frighten her. There would be no whip or pillories tonight. It made sense, in a way. He hadn't seemed so furious with her toward the end of that evening, at least not anymore. \n\n\"So then, are - are we done?\" she asked, but doubt surfaced even as she voiced the question. It seemed too easy.\n\nHe shook his head. \"Would that I could declare this the end of your trials tonight,\" he said. \"But no - how would you learn? I would be negligent in my duties if I did not administer some lesson.\"\n\nHis hand came to the skin of her back again, guiding her forward with him. She was cognizant again of her nakedness, and her hands still clasped behind her back. \"But as I am feeling generous tonight,\" he continued, \"it need not be too harsh.\"",
        "He had steered her toward the least threatening of the furnishings - the inviting divan of soft velvet and richly scarlet hues. It did look much less ominous than the furnishings around it, and she was able to shuffle toward it with less trepidation in her heart.\n\nAnd she could stomach being steered this way and that, even in the nude, as long as his were the only eyes to witness. There was no point in feigning dignity for the sake of it, not when he'd already stripped it of her long past. On the other hand, perhaps a strategic showing of her discomfort and vulnerability could appease his sadism a little. Maybe to the point of deterring, if not just a little, the trend of escalation.\n\nBecause he was a sadist. If she resisted too much, it'd only serve to bring greater discomforts upon herself, and more enjoyment for him. She really didn't want to give him the satisfaction. But what was there to be done about it?\n\nShe watched as the King lazily reclined onto the sofa, easing down and settling his hand upon the armrest. There was an exaggerated quality to his slowness that suggested he was making himself comfortable. \n\nThen he regarded her. \"Lay over my lap, Alais.\"\n\nShe didn't need to feign the flush in her cheeks. Were she in the position to move her hands freely, she might have lifted them up to cover her face. \n\nHe was going to spank her. Over his knee.\n\n\"That's - that's so childish,\" she protested.\n\nHis expression remained unchanged as he gazed upon her expectantly. She realized he was serious.\n\n\"But - \"\n\n\"Would you prefer the whip, then?\"\n\nImages of being locked in that pillory flashed through her mind again. \n\n\"No,\" was her quick answer. \n\nReluctantly, she moved toward him, her bare feet padding over the cold floor and onto the warmer throw rug accenting the ground beneath the seat. With her hands still clasped behind her back, as instructed, she laid herself sideways over his lap so that the armrest was under her cheek. She felt his hand start to pet her, starting from her hair.\n\nHer perch wasn't...uncomfortable, at least. The armrest was plush and soft, the cushioning of the divan providing ample support for her legs; the lap she nestled into was warm, the heat of him feeling more intimate in her nudity. Even the way his hand traced down her back had an almost soothing quality - if one ignored the humiliating aspect of her position. \n\nBesides, he couldn't see her face like this. At least there was that.\n\n\"So tense,\" the King remarked, that hint of amusement never far from his voice. \"I hope it's not on my account.\"\n\nHis hand found hers, still clasped dutifully behind her. Idly, his fingers wrapped around her wrists, locking them into position. Now they were truly constrained, and she would not be able to slip from him. \n\n\"After all, I think my decision will be quite fair. Let's see,\" he mused. \"I promised that your punishment would correlate to how well you followed my instructions. You weren't very sensual, but I suppose you took to my lessons readily enough.\" His other hand continued its exploration, down the lowermost ridges of her spine. It almost tickled. \"You neglected to keep your hands where I wanted them. But you also corrected yourself. And who among us has not made mistakes?\"\n\nThe hand now smoothed past her hip, lingering to cup the curve of her ass. \"Let's call it an even twenty. What do you think?\"\n\nThere was nothing intrinsically diabolical about this, she repeated to herself, like it was chant. Every note of humiliation or discomfort was a construct of her own making. No one would look at her differently the next morning. Her family would never know. No one would know but the King, and the King seemed inclined to grant her at least that much respect.\n\nCheek on the armrest, she was faced away from him. Her hair cascaded past the slope of her shoulder, leaving her back open to his touches. His calloused fingers weren't unfamiliar anymore, but still they elicited tingles in their wake. His words barely registered, and yet she found it in herself to haggle.\n\n\"I ... what about fifteen?\" Since he asked.\n\n\"I suppose it would be a shame if you couldn't sit properly,\" said the King, as if he were earnestly considering this suggestion - though it was likely he had already made up his mind, and was only dragging out his decision to toy with her. \"Then again, I feel it my husbandly duty to be firm with you. What to do, what to do...\"\n\nHis fingers drummed on her. More almost-tickles. What was she, a table?\n\n\"Oh, I know,\" he said. \"I can let you earn my leniency. As I punish you, I will ask you questions. Depending on your answers - or lack thereof - I will either reduce or lengthen your sentence. Fair, yes?\"\n\nHer toes curled during these moments of uncomfortable anticipation. She had half a mind to quiet herself until this was all over and behind her. Perhaps she was making this a little more difficult for herself, and being held over his lap like this did not make for a good position to dignify his musings with responses. Even if she was supposed to be so at ease with her husband now.\n\n\"Lengthen?\" she repeated. \"Is there no maximum sentence?\"\n\n\"What, you don't trust me to be fair?\" was the teasing response. \n\nNot one bit, she wanted to tell him. Fair was the last thing he was.\n\nHis hand flattened against her backside, smoothing over her skin as if warming it up for what was to come. In doing so, it was clear that he was taking his time, drawing out the suspense as if to allow her to anticipate the first blow that much more. And even though she knew what he was doing, it didn't make his strategy any less effective. She closed her eyes, already tense in anticipation of the pain to come.\n\nStill nothing. Was he not going to -\n\nHe brought his hand down upon her posterior, striking her soundly. It was almost certainly nowhere near as painful as he could have made it, had he been using his full strength - nonetheless, it was firm enough to be painful. \n\nFor one held as so delicate and dainty, Alais liked to think her tolerance for pain was actually decent. So long as he wasn't ripping the nails off her fingers, there wouldn't be much thrashing and screaming from her that night. The shock of it, though, was raw. She flinched, suppressing a gasp as he inflicting a sharp and stinging sensation over her - over her ass. This was so shameful.\n\nBut bearable. And he still wouldn't have the satisfaction of relishing the blush on her cheeks, not with her face buried into the soft armrest of the divan.\n\n\"First question,\" he began, pleasantly, somewhere above her. \"Whose wife are you?\"\n\nIf he was being condescending, it had to be intentional.\n\n\"Yours, Your Majesty.\" Her voice was quiet but audible.\n\n\"Very good,\" he said. His palm rubbed soothingly over her skin, right where the blow had fallen, as if to reward her by easing her pain. He was surprisingly gentle as he did this, so much so that she was almost lulled into a sense of security - and that was when he struck again, this time on the other cheek.\n\nShe sucked in what would've been another yelp, her knuckles whitening. Those, he could see, and she eased them appropriately. She had jolted, though, and she heard him chuckling, the fingers around her wrist tightening a little to keep her still. \n\n\"And therefore, who do you belong to?\" he continued, matter-of-factly. \n\n\"You, Your Majesty.\"\n\nThere was also something undeniably sensual about the whole ordeal\u2014about the intimacy of being nestled up against him like this, of being soothed and punished by his hand. There was nothing she could do about it. Her wrists remained trapped behind her, and his steady grip might as well have been iron. No, she was forced to lay there, face down before him, as he spanked her and made her acknowledge his claim over her. Why did it have to be so damnably titillating? She didn't want to give him this.\n\nTwo slaps followed, this time in quick succession. When his hand came to rest over her plump curves, however, it was again contrastingly gentle in its fondling. \n\nThree and four. She kept track of the count in her mind, each noise loud and sharp to her ears. Like thunder\u2014the sound, not the tiger. The meanderings of her thoughts made it a little easier, even as she shuddered underneath his deceptively sweet caress and tried to numb away that stinging.\n\n\"Who must you obey?\" he asked, in the same tone.\n\n\"You, Your Majesty,\" she answered, also in the same tone. She was fine. This was fine. Show as little as possible.\n\n\"Very good,\" he drawled. His hand lifted, as if to come down upon her again - but in the following moments there was only a tense stillness. She clenched her legs close together, holding her breath, but at length, he only began stroking her again. \"And yet, I found - to my great displeasure - that you did disobey me. And on our wedding day, of all days.\"\n\nAmusement was not far from his voice, but with him, it never seemed to diminish the danger. \n\n\"Tell me why, Alais.\"\n\nShe gave no response at first, because she understood that she didn't quite know why she disobeyed him. The cheekiness in her would have insisted that she did no such thing, or that she had scarcely another choice provided the circumstances. But she understood that she had disobeyed both the letter and spirit of his request. His command.\n\nSo she provided an answer that she thought might satisfy him instead, and hoped her hesitation lent it more credence than discredit. \n\n\"Because I was jealous, Your Majesty.\"\n\nEven as she said it, she felt the warmth of a blush suffuse over her face. It was a ridiculous sentiment to feel for him; he was cruel and controlling and arrogant, and he had taken her with no regard for her consent. She wished she was only mouthing a shallow platitude, which would have made the whole thing so much more bearable. Playing a detached role had been the plan, after all. But she wasn't, at least not entirely, for she feared a small grain of truth was beginning to stick to the falsehoods. Perhaps that was why it was so infuriating.\n\nThere was silence above her, as the King paused, as if he were surprised she had conceded it. But before long, he was chuckling. \"My Alais, jealous? It can't be that you do have some real regard for me, can it?\"\n\nAnother succession of slaps followed, two upon each cheek. They were up to eight now. It might have been her imagination, but his blows felt lighter, less painful. Perhaps he was pleased. Something in her dared to nurse a spark of hope, until she thought she could feel his erection stiffening just below her stomach. He was enjoying this.\n\n\"But...\" he continued, in pondering tones, \"I know how clever you are. Perhaps you are merely saying what you wish for me to hear.\" The slyness in his voice gave way to his next question. \"How did it feel, that jealousy? Describe it to me.\"\n\nHer eyes were fixed to the luxurious throw rug. Her stomach sank as though she had been called on her bluff; in a sense, that was exactly the thing that had happened. No doubt her backside now glowed a lovely shade of scarlet regardless of how much lighter the slaps by his standards. She pressed her knees together and fidgeted with her toes.\n\n\"It was a feeling like annoyance,\" she started carefully, beginning with truths that were sprinkled with (maybe) falsehoods. The less she made up utterly, the more convincing. Hopefully. \"Like an itch.\"\n\n\"Like an itch, hm?\" On cue, his fingers scrunched up, niggling against her. \"And that itch bothered you so much that you just had to get my attention, didn't you? What a little troublemaker you are.\" \n\nSlap. Slap. Nine and ten. She could only squirm so much caught within his grasp, her wrists wriggling weakly against his fingers. \n\n\"Do you desire my attention?\" he said.\n\n\"Maybe not like this, Your Majesty,\" she mumbled back.\n\n\"Like what?\" he asked, innocently. Another spank landed smack in the middle. \"Like this?\"\n\nThis time, his hand lingered, and before she could protest, he slipped slowly down and between her legs - toward the soft petals that were slick with arousal in spite of herself, in spite of everything. \"You don't enjoy this even a little bit?\" A warm index finger intruded inward, feeling for further evidence of her pleasure. \"I think you might.\"\n\nHer thighs tensed reflexively as she fought against building dismay, that he would force her to enjoy this degradation. Commanding her to find pleasure while being spanked and diminished by his hand\u2014when she didn't want to. This was another line, however thin and narrow, that he would drag her across. She scrambled to think of some safe rationale, even as his touch sparked an involuntary thrill in her. The body would sometimes lubricate to protected itself in situations such as this; was that not also the case? Yes, that was it.\n\nEleven, she reminded herself. The count was at eleven.\n\nWavering now of all times would deliver her nothing but further humiliation. \"I said maybe.\" Quivering a little, she was acting plaintively and perhaps even a little coy. \"You're already embarrassing me so much...\" \n\n\"I suspected as much,\" said the King, with a low chuckle, as he felt her slickness, pressing experimentally against her walls, tormenting her. If possible, he sounded even more self-satisfied than before, that stiffness beneath her hardening even further. \"Oh, don't feel embarrassed,\" he continued, though it was evident he enjoyed that embarrassment. \"I've found that it's not uncommon to derive pleasure from pain - when it is administered the right way, of course.\"\n\nA second finger joined the first in its probing, tantalizingly, introducing a little friction to his rubbing. \"Some women like being punished.\" His voice lowered, as he continued stroking her deeper, evoking white, searing-hot blotches of pleasure that lanced up her body; she bit her lip, trying to stymie the moans threatening to break forth. \"Like being... put in their place.\"\n\nHis movements paused, as his voice took on that of expectant questioning again. \"Is that how you feel, Alais?\"\n\n\"I don't - I don't know.\" She was half whimpering her words, with her head pressed over the armrest, eyes blinking rapidly. A sinister euphoria was expanding from his ministrations, that horrible and exquisite pressure building with each stroke. It took everything in her not to press down and closer to his dexterous fingers. \"How would that even be a punishment?\"\n\n\"I think humiliating you is as good a punishment as any,\" he replied. \"That you enjoy it only makes it that much more effective.\"\n\nHis fingers worked a little more, devious and knowing as he explored her folds. \"But I require a better answer, Alais.\" His hand eased away, leaving her unsatisfied. \"Do you enjoy being punished?\"\n\nAs if to remind her, he dealt another blow; the pain was sharp and stinging, in contrast to the pleasures he'd inflicted just moments before. She loosened a gasp, or perhaps more of a squeak, at the sudden impact. The instinct to curl up into a ball was overpowering, but being constrained and held to his lap like this made that physically impossible. \n\nIt didn't take away from the burgeoning ache in her sex, though. If anything, the mingling of pleasure and pain made for a more potent concoction, heightening her senses in some strange and overwhelming way. She wanted...more, but what more was, she couldn't quite say.\n\n\"...Yes and no.\" And the way he tantalized and teased, prompting and withdrawing pleasure to manipulate her answers\u2014she knew exactly where his strategies lay and again couldn't help but fall victim to it regardless. \"Maybe, maybe I don't enjoy the...enjoyment.\"\n\n\"That's evident enough,\" he said, amused. \"You don't wish to enjoy my depravities, I know. But your enjoyment is nonetheless very real.\"\n\nAnother blow came down, more painful still. Thirteen, now.\n\n\"Enough equivocation, Alais.\" His fingers curved around, back to where they'd left off before. Soon, his dexterous fingers were coaxing and caressing between her folds again, toying with her nub in such a way that sent unwanted pleasure blooming fresh and raw. \"You like this, don't you?\"\n\nHis fingers traversed deeper into her core, as if to defy her to say otherwise. \"Tell me you do.\"\n\nHer toes curled, knees bending as her calves folded toward herself. The back of her mind set awash by an encroaching daze, that pressure increasing, so close but not quite, she was all but squirming against him. Nothing about this was fair, but it seemed that she only needed to relinquish pride again (and again and again) before he could generously release her over the edge.\n\nJust give in, a voice in her urged - the part of her that right now craved, with all of her being, that sweet release that only he could grant. Just say yes.\n\nWasn't her whole plan to appease him? Lull him into a sense of complacency, so she could survive long enough for revenge? What good would defiance serve her?\n\nAnd yet, another part of her recoiled. He had already taken so much from her. Why did he have to take this, too? Was it not enough that she acted the part of the loving wife? Must she also be forced to admit to those desires most dark and shameful? \n\nIt was hard to think, with the way his hand was still pleasuring her and robbing her of rational thought. She knew it was intentional. He wanted to reduce her to a quivering body that was hungry for relief...and would submit to any command to get it. \n\nAlais felt a sudden, irrational spike of anger. \n\n\"I...\" She swallowed, her voice unsteady. Her throat cleared, a wave of agitation taking hold of her. \"Thanks, but I'd rather not. This is infantile.\"\n\nThere was a pause in his movements, as if he were actually surprised by the resistance. Then his fingers wiggled a little more, tauntingly, before withdrawing completely and leaving her woefully empty. The lesson was obvious, though not necessarily less effective for its simplicity.\n\n\"I confess myself disappointed, Alais,\" he drawled. \"And here I thought you were doing so well.\"\n\nHis fingers traced over the curve of her ass tauntingly, leaving her skin stained with a trail of her own juice to cool in the air. Then his hand rose. When the blow came, this time it was sharper and more painful, the sound of his palm against flesh sending an echo across the chamber.\n\nAlais bit against her teeth to keep from yelping like some animal on his knee, an involuntary jolt shaking through her. \"I don't like this, now, because it hurts,\" she endured again, otherwise finding her statement perfectly logical.\n\n\"But you liked it before, is that right?\" he returned, as if it was a confession. \"Judging by how wet you are, that much is evident to both of us. It's only admitting it that seems to present an obstacle to you. Why are you so afraid to enjoy this?\"\n\nHis hand lifted again, perhaps on the precipice of delivering another slap - if her answer did not satisfy.\n\nHer words lingered indecisively on her tongue before she uttered them aloud. Then she quietly answered, \"It isn't abnormal to be afraid of you, especially when you are spanking me.\"\n\n\"Oh, but I didn't ask why you were afraid of me. I asked why you were afraid of yourself, and your own reactions,\" said the King. \"You are being purposefully evasive.\"\n\nThe hand came down - hard. Twice more did he strike, a merciless assault that left no doubt that he had been holding back before. She tried, without avail and perhaps instinctively, to squirm away from his hand - and the erection that she could feel stiffening yet further under his breeches.\n\n\"And if you really did fear me,\" he continued, \"you would obey me. You would abandon your pride and pronounce a simple truth: that this gives you pleasure.\" His hand rubbed soothingly over her inflamed skin, as if coaxing her. \"On the other hand, continue to defy me and you will pay the price.\"",
        "He tapped his hand lightly, suggestively. \"But I would think carefully about the choice this time, Alais. My patience is growing thin.\"\n\nGive in, the little voice in her head urged her again. Just give in. Make it stop.\n\nBut despite the pain, despite everything, that irrational flare of anger still hadn't been quenched. It was almost as if the danger of a precipice provoked her to run that must faster toward the cliff. \n\nShe exhaled slowly, before gathering what little courage was left in her. \"Do you listen to yourself, by any chance?\" she said, and was even able to sound halfway mocking. \"Why do you always sound so villainous?\"\n\nA longer silence stretched out. She knew it would be short-lived, but she triumphed all the same at having caught him off guard. \n\nThat was, of course, before he recovered. \"Villainous? On the contrary. I think I'm being perfectly reasonable,\" he said, silkily. \"It is my wife who continues to prove herself disobedient.\" His voice grew a little more ominous. \"But very well, if you are so eager to refuse my command, you've earned yourself five more.\"\n\nScarcely had he finished speaking when he commenced, landing a sharp blow that sent spikes of pain riveting through her body - causing a muffled cry that suddenly broke from her.\n\nThis was worse. Much worse. Without thinking, she struggled to escape, attempting to slip out of the seat or pull herself up by her knees. But his grip remained unbroken, easily keeping her where he wanted; she was forced to flatten again before him, forced to remain pressed against his lap.\n\n\"You cannot avoid this, Alais.\" \n\nSlap. Gods, that hurt. She wrestled with all her might now, but it was of no consequence to a man twice her size. She might as well have been shackled.\n\n\"After all, you must know that I was only going to let you hide behind your denials for so long.\"\n\nSlap. His blows were, if possible, landing harder and harder.\n\n\"Stop,\" she gasped, the floor beneath her now obscured to her watery eyes. Her body was a mess of tingling nerves - pain, mostly, but somehow still with a sliver of toxic pleasure. \"Just stop.\"\n\nHe chuckled. \"I don't think so.\" \n\nSlap.\n\n\"You will bare your desires before this is over,\" he told her. \"The only variable is how much you squirm for me before that happens.\" \n\nThere was something subtly different about his demeanor now - less playful, and more cruel. There was no more of his warm hand soothing away the pain after each blow, no reprieve in the form of his more gentle teasing. Her defiance seemed to have brought out that other side of him - the more dangerous side that sought control and tolerated nothing but absolute submission. \n\nThe change could be sensed even as her eyes were pinned listlessly to the plush arm of the divan, and as they squeezed tight. She tried to suppress her frail but startled gasping, the sharpness of the stinging augmented with each strike as her eyes misted with more confused and terrible tears. Was this worth it? It could always be worse, but Alais decided then that she didn't care to experience worse. She feared the very palpable possibility that his strikes would soon leave lasting, painful welts on that tender and raw flesh, and she said no more. \n\nSlap.\n\nTime seemed to have slowed to a crawl; every sensation felt heightened. She could see every color in the intricate rug, from warm red to deep gold. She could hear his breaths, slow and deep, in contrast to her own helpless pants. She could feel the heat of his lap, the fine texture of his breeches, the smell of familiar musk and warmth that exuded from him.\n\nAnd she could feel his hard manhood, as stiff and rigid as ever, a testament to his sadism if nothing else was. He was still enjoying this. A nagging thought troubled her: aren't you too? She could still feel the mortifying moistness between her legs like a stain on her dignity, and the perversely aroused thrills that coursed through her even as she fought against them. There was something almost hypnotic about being this powerless.\n\nSlap.\n\nHe had only struck her five times, but it seemed an eternity before he finally stopped.\n\nWas it over? The realization dawned on her belatedly as she lay over him, nearly gasping in relief. The world seemed to slowly come back into focus.\n\n\"Is that enough?\" \n\nHer mind almost went white at the prospect of more than she had already endured. \n\nNo, she couldn't. Perhaps some part of her had vainly hoped that he would not hurt her this much. Perhaps it had even been a way, subconsciously, for her to test what he was capable of - to see what she was really dealing with. He had answered, loud and clear.\n\n\"...Yes,\" she answered feebly, almost quaking as she did.\n\n\"Yes?\" he echoed, a mocking note in his voice. \"You will obey? Or do you want five more?\"\n\nEven as she lay there, in apparent weakness, her anger had not truly left her. If anything, it was churning quietly, nourished into something fuller and more bitter amidst the confusion of all her other feelings. Oddly enough, it made her head clearer than it had been in many hours.\n\nSurvive. She must survive. It made little sense to withhold her apparent (and, reluctantly, genuine) shame aside for her own pride, and pride held no value. Pride brought closer to promises of true danger and pain surely worse than ... whatever this was.\n\n\"...I'll obey.\" For now.\n\nThere was a pause, and then when his hand lowered, it was suddenly warm and gentle again, in almost incomprehensible contrast. Slowly, with each caress, he soothed away the pain and stinging with each tender stroke. Distantly, it occurred to her that she had lost count of the ultimate toll.\n\n\"Good. Now tell me you like this,\" he crooned.\n\n\"I like this,\" she obeyed, trembling, and sniffed. It was even the truth - just an unappealing truth. \n\n\"Very good, Alais,\" said the King. \"And what is 'it' that you like?\" he continued prodding her. Even as he resumed these questions, those two wicked fingers were slipping back to pleasure her, easily igniting the spark that had been left to simmer.\n\nHer hips stirred and shifted slightly before she realized what they were doing, and she bade them to still, if not belatedly. Pride or no, pretense or no, she still felt uncomfortably awkward and subjugated giving voice to her admission. \"The pleasure.\"\n\n\"And the punishment as well?\" He continued to prompt, not allowing her to leave any of it unacknowledged. \"My depravity, so to speak?\"\n\nHis fingers trespassed deeper, now sheathed fully inside of her. There they rubbed, in and out, building up that intoxicating heat within her core. \n\n\"Do you enjoy that too?\"\n\n\"Yes,\" breathed Alais. Once she had committed to forsaking her pride, it was frighteningly easy to tumble down further and further. \"I enjoy...your depravity.\" \n\nAnd as control slipped further away from her fingertips, the gears in her mind attempted to wind and rationalize: why should she not enjoy this even with the peaks of humiliation? What good would martyrdom be? What was the difference between giving into his 'love'-making and... this?\n\nHer creamy hips and thighs were stirring just ever so slightly again. The stark contrast of that stinging had only heightened the cresting waves of pleasure. Her breaths were shallow, muffled as her head nestled against the plush armrest. Palpable warmth built up and threatened to expand from her lower abdomen, to set her awash and\u2014but still she was just shy of it. It really wasn't fair.\n\n\"In a way,\" mused the King, \"that makes you 'depraved' as well - doesn't it?\"\n\nHis fingers slowed, making it evident that he would not continue his ministrations unless she answered appropriately. (And that, if she waited too long, he would be all too willing to inflict pain again.)\n\n\"It does.\" In that moment, she wished she could bury him.\n\nHe must have been pleased, for he resumed, granting her the pleasurable friction she craved. \"Yes, yes... so let us not have any illusions about your innocence or detachment. Deep down - \" he emphasized the double meaning with the further intrusion of his fingers \" - very deep down, you do want my attention, don't you?\"\n\n\"I do.\" In that moment, she wished she could bury herself for admitting this truth that she did... want more of him.\n\n\"And thus you were jealous when my attention strayed.\" A third finger slipped in, stretching her wide and taut. When she realized, in her disarray of thoughts, her whimpers grew a little more frightened as imaginary spots flashed before her vision. \"That is why you disobeyed me, isn't it? And part of you was a little curious what your punishment would entail.\"\n\nAbruptly, his movements stopped, leaving her mercilessly at the precipice. She bit her teeth together to prevent herself from groaning in frustration. \"Very flattering, Alais.\" His hand withdrew altogether. \"But unacceptable.\"\n\nHe pulled her upright, sitting her so that she faced him and straddled his lap, where she felt again the promise of his hardened manhood prodding at her through his breeches; all the while, his grip did not leave her wrists, leaving them still pinioned behind her. She bit back a wince as her tender bottom settled over him. Her own thighs were still trembling, her nerves left astray and confused over the conflicting vestiges of stinging pain and frustratingly unrealized pleasure. It showed on her face, tinted with a shade of abashed pink.\n\nHis other hand traced over her breasts, along her delicate skin, before idly encircling her neck - his manner was leisurely, but the feel of his fingers at her throat was inherently threatening. \"From now on, you will do as you're told,\" he said, his eyes fixed on hers. \"I do not want to see another man's hands upon my property.\"\n\nHis thumb brushed casually over her vulnerable neck. \"Nor do I like seeing myself disobeyed. It is a rare occurrence, and most who have defied me have not emerged as unscathed as you did tonight,\" he continued, almost conversationally. She realized that to him, this had been merciful. \"I enjoy you, Alais, but I won't spoil you like this in the future. Next time, I can promise you it will be much worse.\"\n\nSomehow, she didn't doubt him at all. A chill sneaked up her spine. Her mind went briefly to the secret tea she was drinking to keep herself childless - what manner of cruelty would he inflict if he ever found out? No, he wouldn't. He couldn't.\n\nIt was still annoyingly provocative, the way he asserted his control over her. But she also felt her indignation flare up for the hundredth time. Property, was she? Yes, a wife was technically property of her husband under the kingdom's laws. But was that all she was to him? Was she foolish for having even entertained the hope for more?\n\nHe smiled, though it did nothing to soften the intensity of his gaze. \"Do you understand?\"\n\nThere were still remnants of tears - barely a pebble each - in the corners of her large eyes, which she blinked back even as he forced her to meet his gaze.\n\nShe nodded her answer slowly. Yes, let him that that this merciful punishment of his had cowed her accordingly. Let him believe what he wanted. She could not afford to do battle directly.\n\nThe King's smirk was all satisfaction. His eyes roamed over her features appreciatively as if satisfied by his own handiwork, and she felt the bulge underneath his breeches stiffen even further.\n\nIt was distracting. But after a pause, though, and still between gentle sniffs, she dared to venture, \"...May I say something?\"\n\n\"You may.\"\n\n\"What if\u2014what if I were to disobey you, but to Your Majesty's benefit. Say I dance with someone\u2014to make them feel welcome in your court. They... would have that satisfaction, yes, but perhaps be easier to be dealt with in more significant matters. And I would be no less loyal to my husband.\" She blinked at him again, still cultivating that plaintive and submissive look about her.\n\nHis gaze narrowed just a touch at her hypothetical, even as the grip about her wrists tightened. \"Jehan is not one to be made more tractable by conceding to his requests. It only encourages his entitlement. No, with someone like him, I intend to stand my ground.\" His smile was barely humorous. \"Not that it's in my nature to make concessions in the first place.\"\n\nHis description of the other king was, ironically, applicable to himself. Was he not guilty of entitlement? And despite the appeasement of other countries, had not such behavior only strengthened his appetite?\n\nWhat would happen if she kept encouraging his entitlement?\n\n\"If there is a circumstance in which you truly believe I would be better served by your disobedience, then you'd do best to ask my permission. Or if the situation is urgent, then yes, you should follow the spirit of my command rather than the letter of it. But...\" His thumb caressed the base of her neck again, almost playfully. \"Helping me wasn't your motivation here, was it? As you've already conceded, you were moved by jealousy.\"\n\nA smirk claimed his lips again. \"If you're still unclear on this point, I could always give you another lesson.\" His hand finally left her throat, only to give a teasing pat pat on her bottom, sending light pinpricks of pain shooting through her.\n\nThat very slight pain shone easily in her eyes for how close they were, lashes fluttering. Her gaze lowered, as if to hide something sulky in her face. \"I think the point is clear.\"\n\n\"I thought so,\" he said, smugly.\n\nHer legs were still parted obscenely about him, with the way he kept her straddled. And yet she felt something as miserable as a lack of tension on top of a strange and aching arousal\u2014it wasn't fair, but the next best thing for her was to see this session ended at last. She was still recovering from the intensity of the experience, and hardly felt herself. She needed time to recover. \n\nWriggling her wrists idly in his grasp, she added in softer tones, \"Well. I would not want to distract you from more important matters. Like ruling.\"\n\n\"How considerate of you,\" he said, with a chuckle. \"Yes, I do have business to attend to. But first...\" He captured her in a kiss, his lips claiming hers as easily as always - the strength of the motion an indication of his own hunger - so deep that she feared (and frightfully, felt thrills for) drowning in him. His tongue slipped in, toying with hers; he finally relinquished her wrists, so that he might cup the back of her head instead. There, they mussed about in her soft auburn hair, as his other hand squeezed teasingly where they lingered at her posterior. When he withdrew, his eyes were still on her. \"You know, you're pretty when you sulk.\"\n\nShe was breathless from the attention. She shouldn't even have been susceptible to his romancing, after that discipline he'd inflicted. But somehow, it only lent a more perverse and exotic thrill to their intimacy. \"I wasn't sulking - \"\n\nShe was cut off by another kiss, his hungry mouth intent on exploring hers. And then he rose, slinging her over his shoulder and bearing her back to the bedroom. She felt the vertigo of being upturned, and then the scenery was upside down.\n\nEven when he was plying her with his doting attention, he would never come to respect her like this. She would never be anything to him but a pretty and discardable whore, albeit momentarily glorified, for the time being, as his queen and broodmare for his heirs. One way or another, even if she somehow managed to remain free from his ire, he was going to be the end of her. One day, after the novelty of her finally wore off.\n\nIt was a shame. If not for this, she could have seen herself growing complacent toward his... so-called depravities, even his obsessive need for control. But she needed to survive above all, so she promised herself that this mistreatment was only temporary, until salvation in some form was within reach. All the more reason to... try... and enjoy the experience, the intoxicating kisses and being tossed and carried about like a doll, while she could. \n\nBecause it would be temporary. Alais had decided that. This experience solidified her resolve; she could not afford to hesitate any longer. How could she have been jealous, of all things? But meanwhile, she needed to keep playing her part.\n\n\"What if I go into seclusion?\" she stammered from behind his back, \"I wouldn't get into any trouble - and upset you, probably.\"\n\n\"Nonsense,\" said the King, breezily, as he continued forward with her hoisted over his shoulder. The pleasure dungeon - and all its exotic contraptions - fell behind them, and then was sealed and hidden away completely when he closed the bookshelf door. \"And miss out on the opportunity to display you to my advantage?\"\n\nHe didn't seem to have taken the suggestion seriously - not that it had been offered as such. This did not stop him from his teases, though. \"Though I'm surprised you're so eager to hide away. Surely Lady Reina wasn't that ferocious?\"\n\nShe felt a pinprick of discomfort at the name, even now. \"I admit, I won't be distraught if I never see her again.\"\n\nTo her wayward and backwards and upsidedown senses, the floor moved in this direction and that as he strode along. Disoriented, she tried to shift so that she was a little more upright, only to realize the strain wasn't worth the labor after some struggle. Sniffing in a mixture of residual shame and indignation, she patted hard against his back with open palms\u2014like drums\u2014wondering just how structurally sound he was.\n\nThe King chuckled to himself, even as he paused by his desk. Her weight was evidently insubstantial enough for him to stand there and leisurely rifle through some papers.\n\n\"And here I thought you would be fast friends.\" He picked up an ornate scroll, handing it to her. \"Take this.\"\n\nWhat was she, a satchel now? She found herself peering curiously at the scroll nonetheless, and scarcely had time to recognize the seal before, a few steps later, being dropped unceremoniously upon the gigantic bed, face down on the decadent silk with her hair in a disarray about her. A dip in the mattress behind her indicated he was not far behind.\n\nA common ritual, come to think of it. She flipped over quickly enough, happy enough to be resting on her back (how low her standards had fallen) in spite of the still lingering tingling on her bottom.\n\nFrowning, she held the scroll to the candlelight. \"Why are you giving this to me?\"\n\n\"I thought that obvious,\" replied the King, not far from her. \"You will read it to me, aloud. After all, you acknowledged you were taking me away from business. It's only fair that you do your part in making it up to me, hmm?\"\n\nHe pulled off his tunic, and she couldn't help but notice how the candlelight flickered flatteringly over his defined muscles. Then she saw his hands go to the drawstrings of his trousers next.\n\nInstinctively, she backed herself against the headboard and sought to wrap one of the many silken bedsheets around her as he undressed. There she huddled and, in trying to distract herself, turned her attention to the letter clutched in her hands instead. Quietly, she broke the seal with mildly apprehensive fingers.\n\n\"From the seat of His Divinity Pontifex Shiev ...\" She broke off there, blinking back her surprise as she levelled a stare at him. Surely she wasn't going to read a letter by the Holy Pontifex while he had his way with her? \n\n\"Such modesty,\" observed the King, eyeing the way she clung to the bedsheets. \"I assure you the Pontifex cannot see us, even if you read his words.\"\n\nHe smirked, as he drew closer, now entirely unclothed - his erection visible and hard. He drew away the cover of the sheets, as easily as he had her robe just before; his hands settled on her ankles, drawing them wide before him.",
        "\"Isn't this inappropriate?\" she interjected pensively, protesting to the last. Every single time. The divine letter fell to the wayside as she struggled to keep hold of the sheet. \"It's not modesty,\" she lied. \"I was cold.\" \n\nThe soles of her feet were a bit icy from their excursion in his dungeon. The spreading of her legs still filled her with wary anticipation, but at least his hands were warm and pleasant as they smoothed over her cold skin.\n\nAs always, she made the effort of looking away from his manhood at every possible turn, and so stared at his face with a frown. \"It was cool in your dungeon.\"\n\n\"Well then, I'll have to do my best to warm you up. Won't I?\" he said, in that way of his. He went so far as to rub the pads of her feet a little with his thumb, before running his warm hands slowly up her legs. When they reached her thighs, they pried her even wider.\n\n\"Pick up the letter, Alais,\" he added, playfully scolding. \"How can you expect to read it when it's not even before you?\"\n\nAs if her attention would be on the letter as he made these encroachments, Alais thought ruefully. As a petty response to his condescension, she pressed one set of icy toes against his warm chest (which admittedly also felt nice thanks to his seemingly magical body heat), adopting a flat expression even as she retrieved the letter at her side. How was that for retaliation?\n\nThe letter itself came in two parchments: one was more ornate and looked like a certificate, while the other resembled more of an actual letter with a body of long and slanting penmanship. \n\nShe read from the certificate first. \"...His Divinity Pontifex Shiev Nine cordially imparts the blessings of the Gods to King Ale\u2014\" she broke off with a subconscious wrinkle of her nose, flipping to the second page. No need to read from the official blessing if he already surely knew what it was about.\n\n\"Oh, so he did give us his blessings. What a relief,\" said the King, with a twitch of his lips. He didn't sound relieved at all - he was probably too self-complacent to think it had ever been in doubt. Not that his expectation was unreasonable; the Pontifex had no reason to desire war from one of the most militant kingdoms in the continent.\n\nHe shifted forward, looming over her. What came next was no longer as strange or unfamiliar as it had been before, but still filled her with nervous anticipation: she felt his stiff member rub against her entrance, before he pressed into her and slowly forced himself inside. There was a part of her who welcomed the warm hands on her skin, and the initial pain of her inexperience had long since given way to a tension and fullness without, necessarily, that pain. Breath escaped her momentarily as her body struggled to adjust and give way to his large girth. She would always be a little too tight for him, whispers of painful friction never too far away despite time and practice.\n\nAnd there was no questioning his enjoyment of that tightness, judging by the half-lidded quality of his eyes. A sigh of pleasure escape him, as he sheathed himself fully, his hands settled over her hips to keep her still. \"Well? What else did he have to say?\"\n\nHow could he expect her to concentrate when he was buried deep inside her, stretching her so intensely and pleasurably? She suspected he was doing this on purpose. Swallowing thickly, she pulled the papers between their faces as she glanced them over once more. \"The... rest were just titles. Half a page worth of titles.\" Her husband had a ridiculous amount of titles. \"As for the other page...\"\n\nThe King had enough self-control to begin his thrusts slowly - almost agonizingly slowly - retreating only to stretch her taut. \"Yes,\" he said, huskily. \"Go on then.\"\n\nShe gasped a little from his movements, quivering under him, and only with great resolve was she able to focus on the letters before her. \"Our dear boy,\" she started between gentle shivers, \"it is with great pride and pleasant surprise that\u2014\" a slight jerk and quake of her hips \"\u2014that we see you are finally wed.\"\n\nHe continued to press into her, his tempo only increasing at that painstakingly slow pace. His hands grappled at her hips, where he had struck only moments before, causing more flickers of pain to intermingle with heady pleasure. \"Yes...go on...\"\n\nThe letters on the parchment began to blur here and there. Her eyes squeezed closed before blinking open, another shuddering sigh coursing through her. \"Small - small shame that you were unable to come to us for... counsel - as, ah, that would have surely quelled the manifold... concerns of...\"\n\nHer voice unsteady as it were, she bit her teeth together to stifle another gasp. As if there was not already enough distraction, he had lowered his mouth to her breast, his lips and tongue plying her with doting attention.\n\n\"What's the matter, Alais?\" he murmured. He grinned wickedly as his tongue flicked over her nipple, further stimulating her. \"Does it usually take you so long to read correspondence?\" \n\nHis cock continued to impale her; she hated how he was so gloriously thick and hard, how he was capable of provoking such pleasure in her body even when she fought against it. And how he knew it. \n\nHis eyes were on her. \"Is my queen...distracted?\"\n\nTrying to ignore his teases, she focused on the page and the writings scribed there. \"...the concerns of your fellow sovereigns, as we have heard from their emissaries. There is speak of a grave shifting in powers prompted by your union, as both your houses are great and their influence extensive. Alas\u2014\" Another shudder rippled through her, a soft moan caught barely in her throat. \"\u2014these - these are not our affairs, as you are all the...Gods' children.\"\n\nShe pressed her lips together, closing her eyes again for a moment. \"Is my husband even listening?\"\n\n\"Oh, I listen to every word you say,\" said the King. His mouth left her breasts, only to be replaced by his hands, heavy and fondling. \"Why, do you want me to stop distracting you?\" Judging by the smug look in his eyes, it seemed like he doubted this was the case.\n\nShe ignored that too.\n\nEvery nerve in her body felt coiled and tightly wound, and she stiffened even further as his calloused fingers kneaded her soft breasts. She peaked over the page momentarily, catching his eyes as she gave her unsteady, quaking voice to the line: \"...Your Majesty seems to have come into possession of a - coveted jewel indeed. You would not be remiss... to treat her kindly, and to send Queen Alais our regards.\"\n\n\"Ever wise in his advice, isn't he?\" He paused in his movements - his manhood remaining buried in her - to take up the letter, glancing briefly over it as if to assure the accuracy of his reading. Satisfied, he set it aside, looking back to her. \"Though in this case, a little superfluous. After all, don't you think I've treated you kindly already?\"\n\n\"Striking me was kind?\" she questioned skeptically, now trying to worm her way off his cock in playful protest.\n\nHis hands found her wrists, pinning her to the bed and putting an end to her attempts at escape. \"Of course. I was teaching you a valuable lesson. What's the saying? It hurt me more than it hurt you?\" he said, with that awful humor of his. \"But I am curious... if you do think I'm unkind, how can you still be in love, as you claim?\" He alluded to her pretense with, as usual, a satirical expression.\n\nWith her cunt still stuffed with him and no means of wriggling out, she curled a slender leg about his thigh in a seemingly affectionate gesture. At least he was still warm. He was very warm. \"You can love someone who is unkind. I would only prefer it if you were less unkind.\"\n\nHe chuckled. \"And what is the rationale for your love, then? What is it about me that has won your admiration, in this pretense of yours?\"\n\nHe had asked this more than once. She noticed this, and if her reading of him was right, she suspected it was secretly a source of frustration for him - her pretense, her composure. But it was all she had. She would not give up this last refuge. And so, her lips actually curved into a thin smile, an impossible courage gathering in her. \"Love does not need to be rational,\" she said, sweetly. \"Perhaps I don't understand it myself.\"\n\nHe looked at her oddly for a moment. It might have been a trick of the light, but there seemed to be - for a moment at least - a flicker of disappointment in his eyes.\n\nThen he began moving again, slowly, teasing out that pleasurable friction again. \"You are ever so convincing, Alais,\" he said. \"But I have noticed a fault in your performance.\"\n\nHer thoughts jumbled away with a light, involuntary jerk of her body as he pushed out and into her again. Still, breathlessly, she tried to ask, \"What do you mean?\"\n\n\"This is our wedding night,\" he said. \"We are man and wife now, under the eyes of the Gods.\"\n\nHis cock penetrated her deeper with every thrust, his hands back to massaging her breasts. She arched her back involuntarily, trying to stifle the panting that threatened to break from her lips. \"Our - second wedding night,\" she corrected between shaky breaths.\n\n\"And still,\" he continued, \"you have yet to ever address me by the intimacy of my name.\"\n\nIt was true - she had only ever said \"Your Majesty.\" It had not, oddly, occurred to her to do otherwise. Calling him \"Alexander\" seemed almost too...humanizing, for one such as him. In any case, her real reaction to the accusation was well camouflaged between her twists of expression and tensing of limbs with each of his urgent thrusts. She even managed to sound casual in her reply. \"Perhaps a force of habit?\"\n\n\"Habit, or tactical avoidance?\" the King returned. His smile became knowing. \"I think, in your little ways, you are trying to detach yourself from your performance. From giving into me fully. From...letting the lines blur.\"\n\nHis manhood rammed into her with more force, the tendrils of pain and pleasure spiraling deep into her core. These sensations were fuller than those his nimble fingers had wrought before - it was like comparing crumbs to a feast. She let out another gasp, eyes closing and opening rapidly.\n\nHe chuckled upon seeing the effect he had. \"Because the lines are blurring, aren't they, Alais? Imagine, you were even jealous. How that must have horrified you.\" Yes, she was horrified to feel even the sparsest twinges of attachment - yet there she was. It was so hard to concentrate. His hands were so warm and coaxing at her breasts, each fondle and twist eliciting sparks of fresh stimulation. \"So whether or not it was conscious, you have adopted little mechanisms to keep me at bay. And I won't have that.\"\n\nHe lowered his mouth to her neck, to that tender spot where she had always been the most vulnerable - like he had been saving it for last. There, he bit softly into her skin; she almost moaned as she felt his hot breath and doting tongue not long after. \"Say my name,\" he murmured. \"I want to hear you say it.\"\n\nHer hands, as though unsure, slowly snaked around his neck. She wondered how much force it would take to crush it. With some level understanding that the answer was probably more than she could give, she did not refrain herself from squeezing as tightly as she could, her quaking legs following suit around his muscled hips.\n\n\"Your name...?\" It sounded like such a simple command which cost her nothing to obey, and surely he would reward her for it while upon this very bed. \"But why?\" she said instead, stifling the whimpers from his attentions. \"What does that matter?\"\n\n\"It matters because I desire it, and that is enough,\" said the King, his voice a low and masculine thrum. There was another thrust, his hard length breaching her yet further while she quaked beneath him. \"You have pledged your obedience to me. You will honor it.\"\n\nHis lips continued to tease at her exposed neck, and she felt the light graze of his teeth as he suckled. His tongue had slipped out to taste of her, warm and wet as it swirled here and flicked there. It felt like he was devouring her - if devouring could feel so pleasurable and dangerous and heady all at once. She tried to slip away, but there was no escape. He had her pinioned beneath him, and he was so heavy and strong. \"I...\"\n\n\"Say it,\" he murmured again. She could feel his stiffness deep inside her, firm and unmoving; he meant to deny her the release she craved unless she gave into his demands. \"Say who it is that you belong to now.\"\n\nShivering again and again from his touches, from the thickness of him, she somehow managed to slide her arms back, settling her palms along his stubble.\n\n\"What if my respect for His Majesty is too great...?\" she quietly returned.\n\n\"If you truly respect me, you would submit to my commands.\" He still sounded halfway amused, but there was an edge of impatience in his voice that she was right to fear. \n\nHe forced himself deeper, claiming yet more of her; the move was aggressive enough to cause tendrils of pain (along with hazy pleasure) to snake through her, coercing almost a yelp. There he remained lodged again, firmly in possession of her despite any attempts at writhing or struggling against him.\n\n\"I enjoy your mischief, but you must learn to submit to me.\" He took her hands from him, depriving her of free movement and pinning them over her head. \"Say it,\" he repeated. He kissed along her neck, his lips slowly drifting up and up, until they brushed against her own. Even then, his grip tightened over her wrists, a casual threat against further dawdling. \"With your next breath, Alais.\"\n\nThere it was again - an inclination to apply pressure until she gave him his way. Was this not an echo of what had happened earlier in the pleasure dungeon, when she had defied him? It seemed second nature for him to forcibly bend others to his will. In retrospect, she should not have been surprised. Here was a king who ruled with an iron fist, and who was accustomed to getting his way in every aspect of his life. How many kingdoms had he brought to their knees? How many dissidents had he broken? \n\nIt was his way of life. Did he even know otherwise?\n\nSome (small) part of her found it alluring, this uncompromising way he wielded his power. The other part despised him for it.\n\nAnother muffled whimper tore from her throat. Trapped beneath his weight, and upon the precipice of that intoxicating tension, she couldn't so much as squirm - though she could still feel her legs quaking still. The mixed intensity and helplessness of it all was downright stifling, and her thoughts again took a turn for the hazy and overwhelmed. Her skin tingled against the sensation of his lips, and her unfocused, half-lidded eyes found his. Her fingers curled, wrists twisting slightly against his iron hold. She winced at the prickles of pain.\n\n\"Your hands are going to leave prints,\" whined Alais. And yet she was not going to make the same mistake again in challenging him directly. That besides, he had given her no choice. She opened her eyes, managing to breathe, \"Alexander.\" \n\nHer voice was soft, but she never tore her eyes away from his unfairly mesmerizing blue depths as she said it.\n\nHis eyes in turn seemed to alight with something unfathomable. \"You whisper it so sweetly,\" he murmured, as he studied her face. \"How can I be blamed for coaxing it from you?\"\n\nIn an instant, his fingers had relaxed their grip to a force more gentle, and when he kissed her, the hunger there was almost softened by equal tenderness. Nor did he stay still, now that she'd submitted to his desires. His rigid manhood - already so deeply impaled - trespassed further, plunging into her soft core; he pumped in and out, exciting shocks of hot pleasure that had already been so terribly teased and inflamed.\n\nHe was almost artful in the way he swept her toward climax. Her eyes were heavy-lidded as she caught herself drawn more steadily into his - scarcely readable and blue and unbearably captivating for all her knowledge of his wickedness. Unfathomable, indeed, for her to have discerned any vulnerability in them even now, and there was none, and still she was woefully drawn to them.\n\nHer lithe body bucked as she gasped into his lips. \"It's not fair,\" she murmured against him, \"not fair at all.\"\n\nA smirk crossed his face at this allegation, for even her half-hearted resistance appeared to satisfy him. \"I don't play fair, Alais.\"\n\nThat was before the inexorable pleasure swept over her, seeming to rob of her both thought and breath. For a few moments, the world was reduced only to physical sensation - the heavy caresses of his hands, the doting touch of his lips, the relentless thrusts of his cock into her tight sex. Unearthly warmth flooded through her, expanding all the way to her fingers and toes, as she clung to him and desperately willed for him to never stop.\n\n*\n\nThat was not the last of the night's debaucheries, either. As if he was only made more hungry every time he devoured her, the King took his fill of her again and again, each time no less a beast possessed. It was almost as if he were addicted to her.\n\nIt was only when they were both utterly exhausted that he finally allowed sleep to claim them for good.\n\nThe morning was still dark and chilled when she awoke. Alais heard the gentle rhythm of his breaths, felt them against her skin, and she lay still with eyes wide open, counting each pulse in her thoughts.\n\nThis was new. When they shared the same bed he had always, without fail, been the first to regain consciousness before she so much as stirred. With this in mind she carefully untangled herself from him, gently propped herself with an elbow against the luxurious mattress, so that she could simply... watch.\n\nAn intrusive thought sliced its way through her musings, wondering what would happen if she tried to plunge a hairpin through his exposed neck. How his handsome face would react, and how she would probably end up dying for it, one way or another.\n\nIt was odd - he had never looked so peaceful and devoid of ill intent. No smugness twisted his lips; no slyness glimmered in his gaze. His muscular chest rose and fell with his breaths, but he was otherwise utterly still. It was as harmless as he could be, and she felt like she had the rare opportunity of watching a sleeping dragon. Was this man really the source of all her fear and anxiety? \n\nHe was such a complicated creature, this King that she had wedded. He could be charming or he could be cold. He could be generous or he could be selfish. He could be gentle or he could be cruel. She scarcely knew how to feel about him.\n\nNo, she knew exactly how to feel. He would be the end of her, if she did not find some way to destroy him first. But why did she feel so conflicted about it, after all he had done to her?\n\nShe lost track of how much time had slipped away in her quiet vigilance. Something in his face nearly beckoned for her to trace with a fingertip - perhaps the prominent line of his scar or the softness of his lips - but she dared not break the spell of stillness, and moved only to adjust the silken sheet over the slope of her breasts.\n\nHe eventually did stir. A slow exhale came from him, and then his eyes blinked open - meeting hers almost immediately, since she had been watching. His expression softened for a fraction of an instant, before that familiar smirk stole over his expression. \"Enjoying the view?\"\n\nShe blinked in return, flickers of annoyance washing over her with the return of his smirk. It was almost like he'd ruined something precious. \"Has no one tried to murder you in your sleep?\"\n\nSince his eyes were still locked onto hers, her fingers ghosted down and gave him a gentle jab where even he was so ticklish.\n\nA chuckle escaped his lips, before his fingers closed around her wrist and drew her away from his vulnerable spot. \"They've tried,\" he merely said, in what had to be an intentionally enigmatic answer. His other hand curved about her waist, bringing her close enough that she could feel his breath on her skin. \"Why, is my queen getting some ideas?\"",
        "She found his warmth comforting rather than stifling. If not only just physically. After pursing her lips, she surmised what must have been his thought process, an equally enigmatic smile shining through. \"You can't rule out any possibilities. I am not to be trusted, after all.\" This, she expressed with the undertones of a tease.\n\n\"Perhaps,\" said the King. His hand felt heavier on her. \"But you're too clever for that. Aren't you?\" \n\nThe unvoiced implication was clear. They both knew that, even if she were to succeed, she would never escape the consequences. Neither would her family.\n\nShe was so close to his face, their noses almost touching, such that even the slightest flinch in her features would have been easily caught. Her smile remained steady. She really was too clever (and too risk-adverse) for that. \n\n\"Of course,\" she replied, looking him in the eye. The night's rest had been enough for her to compose herself for his games.\n\nHis eyes were back to scrutinizing her, his gaze too sharp to let any variance in her expression go uncaught. But he seemed satisfied - or perhaps unsatisfied - for he smiled idly again, pressing a kiss to her forehead. \"I thought so. And besides, it would make for poor gratitude after my generous procession of gifts, don't you think?\"\n\n\"Are you saying my loyalty can be bought?\"\n\n\"Oh, I'm saying exactly that.\" \n\n\"Then I suppose you've insured yourself.\" Outside, the lilt of birdsong filtered through, and she almost felt peaceful as she lay nestled in his arms and they listened. A fair number of questions circled her mind, however, and she felt his mood was good enough that she could give voice to at least one of them. \"Now that I'm back in the capital, what should I expect my days to be like?\"\n\n\"Well, there are scores of noblewomen who are clamoring to be acquainted,\" he replied. Idly, his fingers brushed through her hair. \"I have dissuaded them for now, given that you are still in the process of settling in. But there is a backlog of invitations waiting for you, should you ever feel your popularity in doubt.\"\n\nShe wasn't surprised that her role would entail a good deal of socializing - or politicking, however cynical she wanted to be about it. Neither was she altogether worried; if she was being immodest she'd consider herself fairly competent when it came to intrigue and that sort of thing.\n\n\"In the coming months, you will also be provided an education in Obsivian history, lore, and etiquette. Although I'm sure you are already very learned, it always pays to have a more nuanced understanding.\" \n\nHis tone was still passably pleasant, but it was telling that he had not presented this as a choice. It didn't even seem that it was consciously done - it probably didn't occur to him not to be dictating her life. \n\n\"I see,\" she said. She could handle culture and etiquette. She was all but bred for handling culture and etiquette - and it wasn't a terrible thing to be further legitimized in this way as his consort. \n\n\"Of course, those aren't the only lessons you'll be receiving.\"\n\n\"What do you mean?\" she asked, but part of her already knew, judging by the wicked glint that gleamed in his eyes.\n\n\"I mean,\" he said, with a smirk, \"that when I taught you how to present yourself sensually last night, that was but a taste of what I have in store for you.\" His fingers found her chin, tilting her up so he could look upon her. \"You are still fairly inexperienced in the art of pleasure. I intend to fully educate you. In all aspects.\"\n\nThe shiver that crept up her spine was nervous and a little excited. \"What - what kinds of lessons will there be?\"\n\n\"I wouldn't want to ruin the surprise,\" he replied, his smile not fading. As his hand roamed casually along her waist, his expression turned pensive. \"Though since you seem particularly...anxious around me, perhaps you would benefit from the occasional other tutor.\"\n\nAlais was surprised. \"I thought you didn't share,\" she pointed out, repeating his own words.\n\n\"I don't,\" he agreed. \"Which is why, if I do entertain the idea, they would be women.\"\n\nHer eyes widened at the implications of this scandalous arrangement. To lay with another woman? And one that her husband ostensibly had relations with, if he could be certain of their expertise in the bedroom arts? \n\n...then again, after all his other depravities, this didn't even seem so unbearable. Although such practices were considered shameful in the north, she'd heard of Scalyrian men and women who had affairs (and even married!) within their own sex, and they had yet to be smited by some disapproving god. \n\nThe King - Alexander, she corrected herself - laughed as he looked upon her. \"It's so easy to embarrass you,\" he observed. \"And you always flush the same way.\"\n\nShe thought this terribly unfair, given that anyone in her position would have been just as embarrassed - if not more. If anything, she was fairly even-tempered. \"And you never get embarrassed,\" she accused in turn. No, that was not strictly true; he had those small glimmers here and there. But for the most part, he was remarkably without shame. \"Does that mean you weren't being serious? Will my tutors really be women?\"\n\nHe only grinned. \"Oh, who knows? After all, who among us could know the future certain?\"\n\nShe swatted at him indignantly (to which he only laughed). \"You know,\" she retorted. \"Why do you never tell me anything?\"\n\n\"Because it's more fun this way.\" He leaned down, bestowing a kiss on her forehead. \"Now, as much as I'd like to keep you in this bed all day, I'm afraid our retreat is over and ruling must be the first order of the day.\"\n\nHis hand gaze a little squeeze at her waist, and then he was shifting away, rising from the bed. She watched as he pulled on his breeches and strode over to his desk to rifle through its contents.\n\nHer eyes lingered over his (annoyingly) well-defined backside a moment too long. Then she set about fishing for any sort of garment that might pass for morning clothes - and finding his discarded shirt the closest before begrudgingly pulling it over her head and rising out of the bed herself. She found that the hem of the shirt dipped as far as her knees.\n\nMoving about reminded her how sore she was on her backside - his handiwork. Her steps were accordingly dainty and ginger, and she tried not to wince as she became accustomed to the feeling.\n\n\"While I'm at my...lessons,\" she said, perhaps to distract herself, \"what will you be doing - Alexander?\" There had come a self-conflicted pause before she uttered his name, slowly, as though still testing the way it sounded from her lips.\n\nAnd that sound had him turning. His eyes lit with a glimmer of mischief, as if remembering the last time she'd breathed it under the influence of passion...but his smile looked oddly sincere. \n\n\"Why, hunting down this conspirator of mine,\" he answered. \"Treason does not go lightly punished in my kingdom.\" His attention drifted back to his scrolls, one of which he picked out from the crowd. \"And, of course, planning my next war.\"\n\nThough unsurprising, his answers piqued her curiosity. Alais blinked, still gazing absentmindedly at the contours of his muscular shoulder blades, and wondered if it was worthwhile to probe for further detail.\n\nShe decided not to press her luck that morning, instead tiptoeing toward his back with a different undertaking in mind. Yesterday, there had been a break in her compliance; she intended not to make the same mistake, and to resume the role she had undertaken before - that of the loving wife. Ever so quietly, her arms snaked about his waist where she gave a gentle squeeze.\n\n\"In the meanwhile, I'll try not to get lost in your castle.\"\n\nHis gaze rose briefly to her. His smile flickered, but only for a moment. \"I have a feeling that if you get lost, it would be purposeful on your part.\" \n\nHe turned, drawing her in for a kiss. His hand steadied her, at the small of her back, even as the kiss deepened and she began feeling heady and light-headed again. \n\nWhen he broke off, there was an unevenness to his breaths that suggested the feeling was not one-sided. He chuckled. \"Go on, then,\" he said. \"Before I change my mind and bear you back to the bed after all.\"\n\nShe stepped back, and, after regaining her faculties, decided that she didn't need to be told twice. With a quick curtsey, she was off in search of a robe and slippers in his wardrobe (as comfortably and at home as any wife ought to be), and wandered her way out the door while slipping on the garment over his shirt.\n\nAs it turned out, her own chambers were nearly overflowing with the excess from the day before - wedding gifts decked every floor and surface, heaped one on top of one another for lack of room. Her handmaidens were scattered here and there, apparently in the process of making order from the chaos. Their various states of confusion were almost humorous, so harried and agitated as they seemed. Fiona had ten necklaces dangling from her wrists as she fumbled with a jewelry box; Belle, Beatrice, and Beth were barely visible under the armfuls of silken garments they carried; and Eleanor and Maerion were in the midst of directing slaves in the placement of her new armoire. \n\nIt took some looking to find her dear friend Bimba, who was attempting to drag her new harp to one corner of the room. Indeed, it was the other woman who spotted her first. \"Your High- Majesty!\" \n\nThis sufficiently alerted the other ladies-in-waiting as well, each of whom left off their tasks to curtsy in her direction.\n\n\"Oh, we're very sorry for you to come upon this mess,\" said Fiona, still fumbling with the jewelry. \"We'd hoped to have most of the clutter out of your way, but it was...\"\n\n\"There was just so much,\" said Belle. \"We hardly knew what to do with it!\"\n\n\"But Your Majesty must be so delighted to be the recipient of such generosity,\" sighed Beth, looking with wonder at their surroundings.\n\n\"Truly, the King outdid himself,\" said Eleanor, more wryly.\n\nAlais had more the impression of stepping into a museum than her bedchambers. A genteel smile spread automatically across her features nonetheless, as she tipped her head.\n\n\"It's quite a lot to organize, isn't it?\" she observed. \"Well - I should probably get dressed.\" Her gaze slid meaningfully toward Bimba.\n\n\"Oh, of course,\" said Bimba, taking the cue with hardly a blink of her eye.\n\n\"I can help too,\" inserted Fiona cheerily, while a few others nodded behind her.\n\n\"I wouldn't want to interrupt more of you than I need to,\" Alais returned with equal cheer, and already she was breezing her way toward the dressing room.\n\n\"Yes, and I should make up for my absence, after leaving the bulk of the wedding work to all of you!\" Bimba said agreeably. She blithely trotted after, which left Fiona no recourse but to reluctantly return to sorting through the jewelry box. \n\nHer one true friend not far behind, Alais picked her way around this chest and that, trying not to trip over any one of the generous gifts her husband the King had left for her; although the prospect of accidentally kicking down one of the busts sculpted in his image tempted her a little.\n\nOnce they were through, Bimba closed the door gently behind them, though she paused to press her ear to the door for a few moments. She scrunched her nose up irritably, making a pantomime indication that she suspected the others had drawn closer and were listening outside.\n\n\"It's alright, we have nothing to hide,\" Alais mildly expressed as she turned to face the wardrobe, sifting through all the clothes and gowns she had probably never seen before that morning. \"How is everyone?\"\n\n\"Oh, you know. Very...curious about you,\" said Bimba, which was probably code for \"they asked a lot of questions about you.\" She added, with a wink, \"You know, they want to make sure they know your preferences well enough. I can hardly blame them!\"\n\nYes, that sounded like her new ladies-in-waiting - actually beginning to feel a seed of embarrassment for all the gossip she was sure to be the center of. \"Ha ... I hope they're doing fine with the ... abrupt change.\" She cleared her throat. \"Is my brother well?\"\n\n\"He seemed well enough, last I saw,\" said Bimba. She paused, probably to find a way to answer the real import of the question without giving anything away to tany would-be listeners. \"He's been taking lots of walks lately. Even went on a hunt!\"\n\n\"That's good...\" Alais did not know whether to be concerned or relieved, but that was neither here nor there.\n\nBimba left the door to come to her queen's side, bending to help sort through the garments. \"It's really good to see you,\" she added, in a rather dramatic whisper. \"We were so worried.\"\n\nA dull pain thudded in Alais's chest. By the next heartbeat, she had pulled her arms around Bimba and given the blonde a little squeeze - a gesture that was returned twicefold by her handmaiden. \"Oh, nothing to worry about. All will be well.\" Her tone took a more hushed dip, as she continued, \"How did they like my artwork?\"\n\nBimba's expression looked more furtive too, in the way she used to when they were younger and she'd been caught carousing with some lordling's son. Though, of course, the stakes had never been this high. \"Your doodle of the cat with the canary?\" she said. She giggled a little, though her eyes were lit with understanding. \"It was darling! They agreed it was one of your finest.\"\n\nGood, so they had gotten the secret message. Alais had known she could not attempt any sort of letter code on the missive they had allowed her to send home - any patterns would be caught and deciphered by his codebreakers. No, she'd drawn a picture instead, one that could easily be dismissed as a benign way to confirm her identity.\n\nThere was no way any outsider could know that she and her brother used to communicate with little doodles just like that, back when they were naught but children sneaking notes under the eyes of tutors. Neither would they have known that the cat had always represented herself, and the canary had always represented canary grass - a shorthand of referring to her supplies. It had been a request.\n\nBimba paused, before adding, as if on a different subject, \"Your grandfather sent along some of your plants with me, by the way. They know how very fond you are of gardening.\" \n\nThose plants - or rather the product of those plants - served a function beyond recreation, but that need not be announced aloud.\n\nPicking out a reasonably looking dress, Alais let out a small and innocent giggle of delight. \"How thoughtful!\" She wasn't certain how she was to manage without them - no doubt Nanna had picked out a very special selection just for this.\n\n\"Well, they had to provide some gifts of their own for the wedding, I think,\" said Bimba, gamely. \"Though I don't know if any gift could compare with that procession yesterday! It was so dizzying that it even put me to sleep.\" Her eyes widened a little. \"I'm sorry about that! I must have been awfully tired from the trip, and all that food only made me drowsier - imagine! Falling asleep at your wedding, of all things! Will you ever forgive me?\"\n\nAlais waved her hand at the plea. \"I'm just happy you're here.\" Although a lingering glint in her eye, accompanied by a faint tightness to her smile, hinted that all may not entirely be well. That it might not be safe - that it could have been by Alexander's machinations that there was now someone else in this palace that she was certain to care for.\n\n\"I'm happy as well,\" said Bimba, earnestly. Her expression was guileless now, and not tarnished by one mote of regret or uncertainty. \"I'm so glad you sent for me, and that I can be here with you. Regardless of...the circumstances.\" That was probably as clean a euphemism as she could manage. \"Besides,\" she added, with a more light-hearted air, \"you know I've always wanted to travel! And this gives me an excuse to do so, while I can claim to simply be doing my duty or what have you.\"\n\n\"It is like an adventure, isn't it?\" Tone growing furtive once more, she pressed the elegant gown toward Bimba. Her eyes glanced to the doorway, as if to be cautious of unbidden presences or creaks. \"... you know,\" she was saying discreetly, \"you're welcome to my closet. No one has to know.\"\n\n\"Oh, I don't know,\" said Bimba, blinking around at the volumes upon volumes of dresses that surrounded them - in every shape, fashion, and color. Here was one in an eastern style, silk smooth with invisible stitches; there was a lavish ballgown of lace and crushed velvet. \"Would it be proper? You're a queen now, after all.\" Her smile was a little nostalgic. \"It's not like it was in Vvaria.\"\n\n\"It would be even less proper for most of these to go to waste,\" replied Alais, with a sagely nod.\n\nBimba giggled again, this time more genuinely. \"Well, I suppose it would be untoward of me to refuse such a generous gesture.\" Her gaze passed over all the racks of garments appraisingly. \"Well, at least he seems to...spoil you?\" \n\nHer handmaiden's expression took on one of curiously and concern as she looked back - as close as she could to asking after her real welfare here.\n\nSpoil indeed. Alais was silent, but only briefly so, as her features glazed pensively over. When she blinked back into focus once more, she smiled gently. \"Alexander leaves me in want of nothing,\" she answered, almost fondly - but not quite so.\n\nIt was impossible to speak of anything clearly like this, not when they had to hide behind innocent words and double meanings. There had to be some way of speaking more candidly. She needed to tell Bimba her plan, or else everything would have been for naught. But how?\n\nAn idea clicked into place.\n\n\"You know,\" Alais started again, \"I have an idea about that harp.\"\n\n*****\n\nAuthors: What is Alais's plan? Will she be caught? And will Alexander find the traitor on his council? Stay tuned, etc.!\n\nAnd we hope you enjoyed Alais's punishment. ;) \n\nAs always, check out our profile if you want to be alerted when a new chapter comes out. It's probably more useful now than before, since we're a bit slower between each chapter and it'll save you from checking too much!"
    ],
    "authorname": "lady_temily",
    "tags": [
        "medieval",
        "historical",
        "royalty",
        "punishment",
        "reluctance",
        "spanking",
        "dominance",
        "submission",
        "stripping",
        "forced"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/at-his-majestys-pleasure-ch-15"
}