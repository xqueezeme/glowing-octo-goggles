{
    "title": "Navy Wives Club Changes Course",
    "pages": [
        "For those who did not read the first chapter here are a few paragraphs from that chapter to bring you quickly up to date.\n\n=============================================\n\nOnce upon a time back before vibrators had been invented and we ladies had to depend on our imagination I was a Navy wife.\n\nI was (and still am) reasonably attractive and as sexy as was allowed in those days. I was 31 and I am named Ann. I am a high school graduate as were most of my friends. \n\nMy husband was career Navy and looking forward to becoming a Chief Petty Officer. He was an Aviation Machinist and also a Aircraft Crew Chief. \n\nOne day during our morning exercise club meeting Leila, the wife of another First Class Petty Officer said. \"Damn. Larry's been gone for two weeks now and my substitute husband is almost worn out.\n\nOf course we all jumped on the remark and pestered her until she explained. It turned out that she had a dildo passed on to her by a maiden aunt. According to her it had served her well for about fifteen years.\n\nWell I had read of such a thing but had never encountered one nor had several of the other ladies. We pestered Leila some more and she agreed to bring it with her the following day. She did and it was beautiful and admired by all.\n\nThat night I passed on my new found knowledge to my husband Andy. When he pinned me down I had to admit to having tried out a few things including a banana, a small squash and the long glass stopper from the decanter that we kept our best bourbon in.\n\nAndy laughed and said that he could do much better and that all he needed was a little imagination and some privacy to work in. He said that the next time he had weekend duty he said he would make me something. \n\nAbout two weeks later he came home after having had the weekend duty and handed me a bag. Before I could open it he shushed me and said that I should open it in our bedroom. He then proceeded to distract our two youngsters so that I could go and examine my present.\n\nI hurried up to the bedroom and locked the door behind me before spilling my treasure out on to the bed. They were beautiful. Two were somewhat flexible penis like devices. One was red and looked to be a bit larger than Andy. The other was what might be called Purple Passion in color and about Andy's size. \n\nThe third was machined and polished aluminum about ten inches long. It had a knob on one end then got slender then came to an egg shape. The other end was an oversize egg shape. We later named it the 'double ender'. \n\nSoon all the girls had something. Soon after that the fleet was called out. A week or so after that I visited my best friend Shirl and found her masturbating. Not to be outdone I lay down on the bed and Shirl and I watched other masturbate. It was very exciting stuff. Then we showered and dressed and then go out to lunch.\n\nOne thing was different about that lunch. We were both totally naked under our dress. \n\nOver the next week we joined each other several times and each time was it's own erotic experience. Between that and screwing myself to sleep I set several personal orgasm records.\n\nWe talked it over and decided that it was an experience too good not to be shared. So on the following Wednesday we invited Leila to lunch and 'confessed' our sin to her and asked her to join us. She was excited by the idea that she asked to join us before we could ask her. Then she said that she was sure that Amy would like to join also. \n\nThat night Leila called and said that Amy was not only willing but very eager. The four of us got together that Friday morning after exercise at Leila's house. \n\nThat was the beginning of the Navy Wives (Masturbation) Club.\n\n==============================================\n\n2\n\nOver the next two weeks the meetings were very much the same. The exceptions being that we decided on Tuesdays and Fridays since we weren't getting any real sex. At least I wasn't. We also debated trying to get two more members. \n\nMeanwhile there seemed to be an increased closeness between Amy and Leila and between Shirl and I. None rose to the level of lesbianism but we were all more bold toward each other then we had been weeks before. \n\nOnce walking home together Shirl looked at me and at me and said. \"God, I can't wait for Sam to get home. If Andy gets home before Sam I want to borrow him for a few hours.\"\n\n\"Fat chance. You can't have him until he has me walking bow legged.\" Actually I wasn't at all upset at Shirl's request even though it was half in jest. I was willing for Andy to 'service' my best friend so long as Shirl was the equal opportunity friend which I thought she was. I was sure that Sam could be a lot of fun in bed.\n\nAndy did get home first and we were true to the old joke where the sailor is asked. \"Tell me, what was the SECOND thing you did when you got home?\"\n\nIn our case it was to put the phone back on the hook.\n\nOur good luck was that it was just after the kids left for school when Andy got home. We locked the doors and took the phone off the hook and didn't come up for air for several hours. \n\nAfter we showered we did put the phone back on the hook. Within a minute Shirl called. \"Andy must be home you lucky girl. I was sure of it when your house was locked and your phone didn't answer but both cars were there.\" \n\n\"Yes he's home. No you can't have him. For one reason he hasn't got enough stuff left to service you. Be calm for a week or so and then I'll bring the subject up. \n\n\"Are you going to the meeting Friday? How about exercise tomorrow. The girls will be expecting a full report.\"\n\n\"If I know them they'll want to inspect my pussy and take bets on how many times we did it.\"\n\n\"Well?\"\n\n\"NOYB, but I think we set some kind of personal record. Each time Andy lagged any I'd bring up the club and tell him of another incident. Then he'd get rock hard and start pumping away and come very quickly.\"\n\n\"You going to bring him to the meeting.\"\n\n\"Are you kidding! That would turn it into an orgy.\"\n\n\"You going to let me borrow him?\"\n\n\"You see me walking bow legged yet?\"\n\n\"That's not an answer.\"\n\n\"Truthfully. I may offer it up to Andy if the time ever seems right. I doubt that he would do it though. If he didn't know Sam he might but since he does I'd be surprised if he would. He has his own set of rules on that subject.\" \n\n\"I'll have Sam send him a permission slip.\"\n\n\"You do that. Pick me up for the exercise tomorrow please. Andy will be needing my car.\"\n\nIt was two weeks later that Shirl showed me a note from Sam which read. 'Permission granted to Andy for any activity you can dream up that doesn't involve skin to skin contact.'\n\n\"That doesn't leave us much room.\" said I \"even assuming that I am willing to share.\"\n\nAfter much discussion Andy came up with one idea. \"Maybe she would like to watch us. She could play with herself as we lick, suck and fuck.\"\n\n\"Don't be so crude.\"\n\n\"Sorry. Perform cunnilingus, fellatio and sexual intercourse.\"\n\n\"That's more like it wise guy. I see what Shirl thinks.\n\nI ran the idea past Shirl and she said that we should all three discuss everything together. Then she said that she had been thinking about she and I and Andy masturbating together. She said that she loved to watch Sam do it. \n\nShe followed that up saying. \"I used to love jerking guys off if I could watch them come. I jerked off several guys before Sam and loved doing it. I'd love to watch Andy come and I'm sure that he'd love to watch us.\"\n\nThat's how late that Saturday night while Shirl's kids were under the protection of a sitter and ours were sound asleep we three were sitting around our living room. We had consumed a bottle of wine by means of wine coolers and were getting down to the business of the evening.\n\n\"OK, so I don't get to drag Andy off to a bedroom. My suggestion is still that we all get naked and masturbate together. Andy's suggestion is that I watch you guys in action. Ann, what do you have in mind?\"\n\nActually what I really wanted at that moment was some kind of threesome but that wasn't going to happen. So I answered the only way that I could and said.\n\n\"Why argue, no reason that we can't do both.\"\n\nSo it was agreed and Andy wasted no time taking us both by the hand and leading us to our bedroom. We were fortunate in owning what had once been a five bedroom house. The two front bedrooms had been combined into one and was now a bedroom/sitting room with a fireplace. We had turned it into a very sexy place.\n\nAs he locked the door Andy who had earlier stripped down to running shorts dropped them the to the floor. His excitement was obvious to me as I glanced at his crotch. I was wearing only a tank top and a pair of shorts and sheer panties. As I began undressing Shirl was already naked stepped over to help me.\n\nIt shot a thrill through me to have her do that as she said. \"Sam said no skin to skin. I'm sure that he meant no screwing or oral. I'm going to assume that fingers and hand are OK. That is if you have no objection.'\n\nJust that quick she had the finger of one hand inside of my cunt and her other hand on Andy's hard on. I was flabbergasted. Andy and I looked at each other but neither of us protested.\n\n\"Just trying to get you two in the mood for my show time.\" \n\n\"Alright.\" was the word that came out of my lips as a croak. I was filled with desire and that desire was for something new and different with Shirl.\n\n\"Keep that up and I'm going to come.\" was Andy's comment. I looked and could see that Shirl was stroking his cock with four fingers as her thumb played a tune on his cockhead.\n\nI couldn't help myself. My hands were doing nothing and there was Shirl's cunt not being properly tended to. Then without conscious thought two of my fingers slid inside of Shirl. \n\nWe did each other for a minute before Andy stepped back and said. \"Much as I regret saying it this is getting out of hand.\" He had taken Shirl's hand from his cock and had one hand on each of our busy ones. I was near orgasm but I knew that he was right. \n\nApparently Shirl did also as she slowed down and stopped and we all three formed a circle. \n\nWe held hands and touched our heads together until we had ourselves under come semblance of control. \"Sorry.\" said Shirl. \"A mix of wine and horniness. I'll be careful. Now. How about showing me something?\"\n\nAndy released our hands and put one on my crotch and the other on my right boob and began playing with my nipple. Shirl walked around the far side of our bed and pulled down the cover and sheets and kneeled on the far upper corner with her fingers busy, busy, busy. \n\n\"This look's like a good seat. You guys forget that I'm here.\"\n\n\"No.\" said Andy. \"I'm so close to coming that I'd come before I got in her. Let's just masturbate together.\"\n\n\"OK, but you have to come on me.\" said Shirl.\n\nI was holding onto the bed post with one hand and fingering myself with three fingers. Andy walked around to the other side of the bed and then began stroking himself. Shirl laid back with her head on the pillow. She was fucking herself with one hand and playing with her breast and fingering her nipple with the other.\n\nShe looked at me and then at Andy and said. \"Andy, Andy shoot that cum right here. I need to massage it into my breast. It's great for the skin.\"\n\nWith that Andy did come. Shirl spread her hands wide in the air as Andy came on her body. The first spurt hit Shirl in the face and Andy quickly aimed at her tit. When her nipple was covered he still had some left and he aimed it at her crotch and she got about three spurts there which covered her well trimmed bush.\n\nAs I watched Shirl began a three pronged attack on Andy's cum. She used her tongue to drag into her mouth what she could. She used her left hand to massage some into her breast. Meanwhile she coated two fingers with the cum from her bush and began to finger fuck herself. \n\nThat was all to much for me and my body began to tremble and my pelvic area began to quake and an orgasm started deep inside of my cunt and rolled outward from there until my whole middle section erupted in the quaking that had started in my pelvis. \n\nAfter I came down and Andy had a chance to recover we moved together. I looked over at Shirl who was showing no signs of slowing down and asked her. \"How do you want us to do it?\" Shirl didn't seem to be in any hurry to answer so I prodded her. \"Make up your mind quick or I'll do it for you.\"\n\n\"How about like doggies. Right close to me so I can see it up close.\"\n\n\"You called it.\" said Andy and he guided me around so that I was bent over on my knees with my butt only inches from Shirl's face. I was dripping wet as Andy kneeled behind me and his hard dick found it's way into me.\n\nThen we were hard at it. His dick sliding deep into me with every stroke and then back almost all the way out. I had my face on the mattress which gave us the maximum penetration. Shirl moved her head around so that she was as close as it was possible for her to get from the action. \n\nMeanwhile her fingers were flying in and out of her cunt not very far from my face and I was getting a close in view that was unmatched even in our club encounters. The odor was intoxicating and the sight as erotic as any I had ever experienced. The result was I was already well on my was to orgasm when Shirl began to speak.\n\n\"Come please! I want to watch Andy come in Ann's cunt and for Ann to come at the same time. Please. Please.\n\nThat did it for Andy. He began to come. As I felt his hot cum deep inside of me I began to come too. It was wonderful. It was of course too much for Shirl too and it was a three way orgasm which so far had no peer. \n\nShirl told me later that a little of Andy's cum squirted out and landed on his thigh and that she had licked it off.\n\nWe were done, finished, kaput. In a few minutes we were lying side by side across the bed with Andy in the middle. Shirl got up saying that that she had to get her sitter home. Before I could object she planted a kiss on Andy which involved a lot of tongue. I didn't see Andy resist too much.\n\nThen she walked around to my side and before I could get up she laid on top of me. Her knee pushed my thighs apart and she kissed me as she had previously kissed Andy. I didn't object too much either. As she kissed me her thigh pushed against my pussy which of course was sloppy with cum, his and mine.\n\nAs we broke apart Shirl said. \"Almost a real threesome. Let me know when you're ready for the rest of the action.\" \n\nTwo mornings later Shirl wasn't answering the phone or her door and Andy found out that Sam's ship had slipped back into port. As the week wore on the other two husbands were back.\n\nFor the next two weeks even though attendance at the exercise club was pretty much as usual the club meetings were canceled.\n\nThen one day while we were showering we all decided to grab some take out and have a planning meeting to decide where were going with the club.\n\nAn hour or so later we were sitting around Amy's patio pigging out on Chinese and easing into the subject of the meeting.\n\n\"I don't see why we shouldn't continue said Leila. I'm back to masturbating twice most days and Larry is after me to push for more meetings so that I can tell him all the details.\"\n\n\"I'm with you.\" voiced Amy. \"We had so much fun. Each meeting was an adventure and we weren't cheating the guys. My guy loves the whole idea. In fact he wants to join.\"\n\n\"Why not. I'd love to watch him. Watching Andy was a thrill I won't soon forget.\" said Shirl.   \n\n\"What do you mean? Watching Andy. When did you watch Andy?\" \n\n\"Oh shit. I forgot. I'm so sorry Ann. Me and my big mouth.\"\n\n\"It's no problem.\" I said and I proceed to give the others a thumbnail version of our 'threesome' and they applauded and made raunchy remarks. \n\nThen the discussion continued with us all agreeing that we were ready to continue. Then Amy asked if we had any thought of enlarging the group.\n\n\"Who did you have in mind.\" was the obvious question. \n\n\"Nancy Peters or maybe Jane Evans or maybe both. I have reason to think that they may already be doing it together.\"\n\n\"Actually they are.\" said Leila. \"Or rather I should say that they have. Jane told me once about when they went to Washington on that seminar that they were in a double room together and that they both got horny and did it together several times. Each in their own bed.\"\n\n\"I won't ask how she came to share that tid bit but they are welcome if my vote counts.\" said Shirl. I agreed and Leila was appointed to ask Jane and to then get her advice about asking Nancy.\n\nThus it was that the next time we got together there were six girls present and fourteen dildos on the table. We each could try two or three. Each experience would be something like that of having a new lover. \n\nAs I said earlier we didn't know about vibrators so they were all hand powered. The idea was floated but the voting postponed both about us doing each other and also about inviting the guys to join us.\n\nThe two new girls Nancy and Jane were shy for only a minute or two. As they saw us get getting naked and making our choice of which dildo to start with they lost their inhibitions, got naked and joined us around the table. \n\nI spotted one that I had not seen before and reached out for it. It was a carved replica of a penis and painted a bright red. It looked to be about the right size for me and Jane smiled and said. \"That's mine. You'll like it. It's a wonder I haven't worn the paint off it I love it so much. His name is 'Big Red' for obvious reasons.\"\n\nI was sopping wet as usual and I simply spread my legs and leaned forward a bit in case I needed to support myself on the table. I positioned it at my cunt opening and without hesitation pushed it into me. It's shape did feel real but I had never felt a real cock that was that hard. As the thought of having a real one that hard went through my brain my cunt spasmed around it in appreciation. \n\nJane had picked out my double ender and retired to the couch. I didn't see what Nancy picked but she sat on the couch close to Jane. It appeared that Helen was left handed as she was working the dildo in and out rapidly using that hand. Jane was right handed and they sat with their non dominate hand on the other's thigh.\n\nShirl had made her choice and stood next to me for a moment and then as she often did she put her arm around my waist as she fucked herself. Nobody saw as she slid her hand upward and cupped my breast as her first orgasm ripped through her.\n\nSoon we were in our normal club mode with the room beginning to fill with erotic sounds and odors. Six of us fucking ourselves both enjoying our own physical sensations but the sounds and smells of others doing the same. Sometimes someone would abandon the dildo and use what God had given them. \n\nHaving the two extra girls added that much to the mix and on this day something new seemed to develop. It turned into confession time as we diddled. This added much to the event and there were many deeply buried secrets revealed. Jane confessed to fucking her brother. Leila confessed a lesbian affair and then propositioned both me and Shirl.\n\nThere followed a couple of 'I'd love to .............\" statements that might or might not be followed up on but which would certainly fuel some masturbation fantasies.\n\nOn our way home Shirl said that she told Sam the details of our 'threesome' and that Sam had been thrilled by the discussion. He had also wanted to know if he could be equally blessed. \n\n\"I said that it was fine with me but that it would be up to you and Andy.\"\n\nThen she added. \"It need not be only three a foursome would be fine with us also.\n\nI waited for the right time to feel out Andy on the idea. I did that a couple of days later and Andy said that he and Sam would discuss it. Andy and Sam were fishing buddies and apparently while waiting for the fish to bite they shared tales and fantasies.",
        "That Sunday night while we were in the middle of our post sex pillow talk Andy said that he and Sam had agreed to do something together but they had not made any real plan. They wanted to get together with Shirl and I and plan something agreeable to all.\n\n\nWednesday Andy came home from work all excited. A friend had a houseboat on a huge lake about a hundred miles away. He would rent it to us for a small fee if we wanted to use it during weekdays.\n\nWe four got together that evening and kicked it around. It was mid May already and the weather should be pleasant. The boat had one bedroom area with two double beds. We agreed that we were all open to group masturbation and to same room sex with our spouse. While not said we all understood that if all agreed that the swap option was open.\n\nShirl's parents lived nearby and were happy to care for her kids. Andy's parents were retired and willing to stop and sit for a few days before leaving for a vacation trip. Everything fell nicely into place and the following Tuesday found us on our way.\n\n\nWe located the boat about noon and we got everything loaded aboard quickly. We ate lunch dockside and then took off for our adventure. Sam was generally familiar with that lake and had an idea where he wanted to anchor. \n\nIt was a beautiful and warm day and as soon as the boat cleared the Marina we all stripped down to bathing suits which covered practically nothing. When Sam first looked at me I was already looking at the bulge in his skimpy suit. I saw it swell as he took me in and I knew that my appearance excited him.\n\nHis reaction sent a tickle through me and I felt juices develop in my pussy. Of course Andy and Shirl had already seen each other's naked body but apparently the significance of what we were about to do had an effect on them both. \n\nAndy had a significant hard on and Shirl had a definite wet spot in her bottoms. Seeing that I checked myself and I did also. At first I was embarrassed but only briefly. \n\nWe spent about an hour or so sight seeing and checking for places to anchor. Finally we found two islands which almost touched and which between them curved around and formed a cove. Sam said the lake level went up and down and that at lower water levels the islands were connected. Neither was very big and the place was perfect for our purpose. \n\nWe found a place where we could beach the boat just enough to hold it steady and then tied it down securely. There was enough sandy bottom for swimming and soon we were cooling off in the water. \n\nThen followed a little 'grab ass' with a few feels here and there. When Shirl suggested skinny dipping no one protested. Just that quick everyone's suit was off and the four of us were naked together for the first time. \n\nFor a few minutes we were somewhat quiet. We were all waist deep in the water when finally Andy made a move. He started splashing each of us which of course made us gang up on him. It was an obvious opportunity to get things started and I did my part.\n\nI managed to stroke Sam a couple of times, probe Shirl's pussy with a quick finger and finished up with Andy in my hand. \n\n\"How about I start things rolling by pumping Andy?\" I asked. \n\n\"Great idea.\" Responded Shirl. \"I think Sam's bashful too. I'll get him started until he's learned enough to do it by himself.\" \n\nI pushed Andy toward the shore until his dick was up in plain sight. By then he had pushed my hand aside and doing very nicely by himself. Sam not to be out done was also stroking himself hard and had an very happy look on his face.\n\nI moved around until I was close in front of him. I extended my hand to him and he held it as he neared his climax. I moved closer to him and said. \"Come on me Sam. Come on me please.\"\n\nWith that he did just that. Several globs of cum covered the distance between us and landed on my breasts and belly. Shirl clapped and then said. \"OK Andy. Your turn. Shoot your hot cum on me I want to feel it against my bare skin.\"\n\nThat's all it took to send Andy over the edge and he promptly shot streams of cum all over Shirl. It took a few minutes for us all to settle down after that and to rinse ourselves off in the cool water.\n\n\"OK girls, you're on.\" Announced Steve. I looked at Shirl and we both nodded but I had to inform the guys that we needed shallower water.\n\n\"It's pretty hard to lube our fingers if the water keeps washing it away.\" Without waiting for an answer I moved into water that was only up to mid thigh. I spread my pussy lips and found that the juices were flowing and that they were rapidly getting it wet. \n\nI guess all the activities of the past period was turning me into somewhat of an exhibitionist. I was eager to masturbate for the enjoyment of Sam. My three companions closed in around me and we formed ourselves into a circle. Sam and Andy were about half hard as I plunged two fingers into my slippery cunt.\n\nI was watching my husband as I did being very curious about his reaction. His reaction was obvious. His cock was suddenly full hard again. I looked then at Shirl and she was following my lead and beginning to finger fuck herself. \n\nThat special look that she gets when satisfying herself came over her face as I turned myself to her husband Sam's reaction. Like Andy he was hard as the proverbial rock. Sam was to my left and I put my left hand to his neck as I got more into what I was doing. \n\nAbout then Andy said. \"If nobody minds this is too much for me. I need to come again.\" With that said he began stroking himself. \n\n\"I'm in.\" Sam announced and he too was stroking his hard penis. \"I believe that this closely related to what is called a 'circle jerk' and I like it.\"\n\n\"You've been keeping secrets from me.\" said Shirl. \"What about you Andy. Did you ever?\"\n\n\"Never had the pleasure. But this sure is nice.\" \n\nI looked at my three companions and the look of arousal and pleasure on their faces sent an adrenalin rush through me. I had to fight back the orgasm that almost overtook me at that moment.\n\nBy then we were all holding on to the person on our left. About then Andy pulled closer to me and kissed me. We enjoyed a minute or two of erotic tongue dueling. Then we broke apart and turned the other way and soon Andy was visibly involved with Shirl and Sam and I were doing our best to help the other come.\n\nI felt my cunt tighten around my fingers and begin to pulse. Then I was humping myself and trembling all over and crying for the others to join me.\n\nI was watching a as the familiar movements which signified Shirl's impending orgasm began in her face. Meanwhile there was cum flying from two directions. As the hot blobs struck my water chilled skin another mini orgasm followed my first. \n\nAs we wound down I heard Andy say. \"Damn. As much fun as that was I can't wait until we get into the next round.\"\n\nWe rinsed off and by now we were all chilly and we ran to the boat to get some clothes on. Not too many clothes you understand. I drew a long sweater on but that was all. The others took their clue from me and dressed much the same. \n\nAfter a moment we were warm enough and Sam passed around beer and we found chairs and sat in a circle playing toe games. \"You know Andy.\" Offered Sam. \"I think we are two very lucky guys to have found ourselves these two sexpots. I would never have believed this afternoon if someone else told it to me.\" \n\nAndy finished his beer and put the empty back in the carton. He took me by the hand and announced. \n\n\"Sorry folks I'm about dead on my feet. I need about two hours of sleep. Hopefully with my bride tucked in beside me and away from the temptations of the flesh that you two offer. When I awake I shall rustle up a protein rich supper so that we may have plenty of energy for the sins that we contemplate committing in the near future.\"\"\n\nWith that we fell onto the furthest bed and fell asleep promptly at least I assume that the others did I certainly was gone. I awoke later to the sounds and pleasant odor of food being prepared. I looked around and saw that the guys were doing the work.\n\n\nThen I felt a pleasant pressure against my rump and I checked to find that Shirl was back to back with me and our bare rumps were in contact. Finding that it was Shirl's rump that I was enjoying made me flush all over. Whether in embarrassment or desire I couldn't quite discern.\n\nI stayed somewhat still for awhile until I decided that Shirl's butt felt very nice against mine. I gave mine a little wiggle and got a wiggle in return. We both rolled over and our faces were only inches apart.\n\nShirl grinned at me and in response I stuck my tongue out at her. She promptly whispered that old saw. \"Do you kiss that way too?\"\n\n\"Sure do.\" I replied. \"Want a sample?\"\n\nWith that Shirl moved closer and stuck out her tongue. Soon our tongues were in contact and we spent a few minutes indulging in some kind of tongue to tongue engagement without our lips becoming involved. Meanwhile we were holding hands and my bare pussy was about ready to start dripping.\n\nAbout then I heard someone walk closer and Andy said. \"Hey Sam. Catch this act. I think the wives are holding out. Maybe we can get them to do an act for us.\"\n\nI shot right back with. \"We'll be the second act. Right after you guys do Act 1.\"\n\nI heard Sam say in the background. \"If the price is right. I'm game.\" Andy didn't say anything but he did flush a little. \n\n\"I'm with you.\" Whispered Shirl.\n\n\"Regarding what.\" I whispered back.\n\n\"I'd really love to watch them. Also it would be the perfect excuse for us to do whatever we want to each other.\" With that she pressed her lips to mine and kissed me softly for a minute as she flicked her tongue against my lips. \n\nFor just a second I thought that I was going to come but again I held it back letting the anticipation build the excitement throughout my body. I got up from the bed and went outside. I looked around for observers and seeing none stripped off my sweater and dove off the stern. I needed cooling off and rinsing off.\n\nAfter I toweled off we sat around the open stern area drinking wine coolers as Sam did steaks on a charcoal grill. Andy made a salad and that was our supper. It was one of my most enjoyable meals ever. \n\nShirl and I did the cleanup and then we all explored the island. Andy who is usually right about such things said that it was about two acres. We were by then dressed lightly against the night air. Soon we decided to build a fire as there was enough kindling lying around to keep it going for a long time. \n\nThe guys built the fire Shirl and I went back to the boat and picked up some blankets and beer. We sat around for awhile swapping tales of our early sexual experiences. \n\nAs the fire settled down we lay down on the towels with our own mate and began necking and petting. It didn't take long until we were all naked and Shirl's' body was visible in the glow of the fire as she rode Sam's pole to a very vocal climax.\n\nAs Sam was ready to come Shirl pulled away and held his spurting cock a few inches away from her hot cunt. The cum did nothing to cool her off and she immediately bent down in an attempt to give Sam's cock life again with her mouth.\n\nThe sights and sound of our friends did serve to spur Andy on and he pounded himself into me harder than I had ever felt him do. Apparently the rest had given both men's bodies a chance to replenish their juices as Andy's eruption certainly filled me with a copious quantity of hot cum.\n\nThat did it for me and I was almost instantly asleep. I heard later that Andy stayed awake watching Sam and Shirl. Apparently when it seemed as if Sam was having a problem keeping up with Shirl he decided to help.\n\nHe went over behind Shirl and played with her tits. This almost instantly revived Sam and he came through with a great final climax. Shirl was so happy with the result that she sucked Andy for a moment before he woke me and we all found our way back to the boat.\n\nIt was about 10:30 the following morning before we were all up and sheepishly drinking our coffee and wondering how to get the conversation started. Finally I broke the ice saying. \"OK gang. That was a great rehearsal. When do we put the show on the road.\"\n\n\"Ann darling. My pussy is just a bit sore and I for one would like to postpone activities for at least another half hour.\" She paused as we laughed and then Sam said.\n\n\"How about we cruise the lake and then have lunch in town and then come back here for a swim and a nap and by then these old batteries will be fully charged.\"\n\nI knew he was right and I said. \"That plan has my vote. Andy?\"\n\nAndy nodded. I think maybe he was relieved and then said. \"Fine with me now how about breakfast orders.\"\n\nWe ate breakfast. Cleaned up. Untied the boat and cruised the lake and various tributaries until at about 1:00 we tied up at the municipal dock. There were several eating establishments within walking distance. We settled on a sandwich shoppe and had a pleasant lunch jawing about the sights that we had seen.\n\nAfter we made our way back to the boat we decided that it was nap time so we locked the outer door and fell into bed. I awoke about an hour later and found that I was wide awake. I made some instant coffee and sat outside and watched the world go by for about a half hour.\n\nBeing a bit bored and being perfectly capable of handling the boat. I quietly cast off then drifted away from the dock and then started the engines. I found my way back to our island paradise and awoke the others by beaching the boat. \n\nThe water level had changed a bit so we needed to reposition the boat. That done we repeated our previous days start by getting naked. Opening some beer and cooling ourselves off in the clean clear lake water.\n\nWe only cooled for awhile though. Soon the pleasant memories of yesterday invaded out thoughts and the tension started to build. Shirl finally broke the ice by going to the boat and coming back with two dildos. \n\nAs her feet entered the water she stopped and handed one to me. I watched as Shirl spread her legs and pushed her's into her pussy until most of it disappeared inside of her. She continued to walk until the water was to her knees.\n\nI walked over and stood facing her and put the head of my dildo to my cunt. I moved it around a little until the juices had coated it's tip and slowly inserted it into myself. By then Shirl was stroking herself with her's and as I glanced around the guys had moved into lower water and were masturbating also.\n\nShirl and I gravitated to each other and were soon only a foot or so apart. As we had done several times before we held the others shoulder and were bent a little and pounding our dildos in and out rapidly. \n\nAndy and Sam were now next to us and standing so close together that their cocks were almost touching. As I saw the closeness I had and intense desire to see them come on each other. I gave my desire voice and Shirl added her voice to mine.\n\nI think that all they needed was an excuse. As I started to come so did Andy. His hot cum hit Sam's belly and then his hand and then his cock. With that Sam came too. He had more cum than Andy but it landed pretty much the same. Some on Andy's belly and some on Andy's cock. \n\nWe were all laughing with excitement and at that moment Shirl began to hump her dildo. I couldn't help myself. I reached over and held it for her as she put her other hand on my shoulder as she humped and rode her dildo into a solid and joyful orgasm.\n\nAs she wound down she looked at me and said. \"Thanks friend I do the same for you next time.\"\n\nSince I wasn't holding it anymore my dildo slid out of me and floated on the water glistening from the bright sun on it's wet surface.\n\n\"I've got an idea.\" Said Andy. \"How about we leave the dildos in the sun for awhile and let them get warm. I'll bet they would really feel good then.\" \n\nRemembering that the first time we tried one that it had been pre-warmed and very enjoyable I was all for it. Thus we rinsed them and set them near the stern where the boat was not shaded by the trees.\n\nWe were still in the water and kidding around when Andy said. \"I enjoyed that. I'll bet I could come again if someone would help me. Any volunteers?\"\n\n\"I'll try.\" Shirl offered. \"I've got it. I'll do Andy and Ann can do Sam. Loosing team fixes lunch.\"\n\nI was still horny and I needed no urging and reached out and shook Sam's hand saying. \"Are you ready. Partner?\" \n\n\"What about us girls. What are we? Poor orphans.\"\n\n\"How about this the guys can do anything to their partner that will make them come faster?\" Offered Sam.\n\nThat proposal won quick approval. \"Where shall we go?\" asked Shirl. \n\n\"Blankets on the beach.\" said I, \"I'm kinda chilled.\"\n\nWe took time to pee gather up the blankets and get ourselves a pre lunch beer. We found a sunny stretch of beach and spread the blankets. \"How about a little kissing to make ourselves comfortable. No touching cocks until we are all ready.\" This from Sam.\n\nNo discussion was needed as Shirl promptly pushed Andy down onto his back and put a lip lock on him. In just seconds they were kissing like old friends and Shirl was massaging Andy's belly.\n\n\"Careful there no cheating.\"\n\n\"Just trying to gauge the distance so that I can position myself. By the way. Oiling allowed?\"\n\n\"Let's save that for an encore.\" I replied.\n\n\"How about the dildos? They should be warm by now.\" Said Andy. \"Want me to get them?\" Without waiting for an answer he got up and trotted off to the boat. He was back in a minute saying. \"They feel hot to me. Here try them.\" With that he handed me one which was my 'double ender'. \n\nMeanwhile Sam had laid down and was holding his arm outstretched. We had been trying to find a position that would allow me to stroke him and him to finger fuck me. Now that I had my dildo we needed to change positions slightly.\n\nAs Sam examined the dildo he said. \"You know Ann. To be honest I don't care if we win or loose. I just want to do this with you.\"\n\n\"I agree.\" I said as I bent and kissed Sam. As our lips and tongues met and played for the first time ever I knew that I was in for a very pleasant experience. As we kissed we adjusted our positions until we had it just about right. \n\nI heard Andy say. \"We're ready here. How about you?\"\n\n\"Ready, get set.\" I paused a second. \"Go.\" I took Sam's cock in my hand and it felt like a steel rod. It was about the same size as Andy but while Andy was usually straight out from his body Sam's tended to point up toward his chest.\n\nI broke our kiss and looked over at Shirl and Andy whose blanket was close by. I caught a familiar whiff of what I recognized as Shirl's arousal odor. Meanwhile Shirl turned and saw that my face really wasn't very far from Sam's cock. \n\n\"No blow jobs Ann. That would be cheating.\"\n\n\"OK. But maybe later for that too.\" I felt Sam's hand holding the dildo as it entered my cunt. I paused for a second or two to savor the feeling. I repositioned myself to take full advantage of it as I stroked Sam even faster.\n\n\"That's so nice.\" I whispered between kisses. \"I love it. I love it.\"\n\nSam pulled his lips from mine. \"I'm coming. I'm coming.\" His voice came out as a labored gasp. He didn't need to tell me. I've held enough ready to explode cocks to be able to feel the signs. I could feel his cock pulsing and seconds later a hot blob of what I instantly knew was cum struck me in the cheek.\n\n\"You heard.\" I said. \"Do you need to see?\"\n\n\"No. I'm busy. Andy is ready to explode. As long as you've won I'm going to finish him off with my mouth.\" With that Shirl had Andy's cock buried in her mouth and I watched and saw that he was coming and she was swallowing.\n\nI was tempted to follow suit but I was close to coming myself and I didn't want to be distracted. I began to slam my body against Sam's hand as I tried to get the fat end of the dildo further inside of me. Sam was doing his best and added a wiggling finger inside of me having somehow managed to get it in there too.",
        "That did it for me and I was over the top. My body was feeling things that a dildo or fingers had never produced before. As I came down my head moved down also and I gave Sam several deep wet sucks as a promise of things yet to come. \n\nAs usual after we began to come alive again we rinsed in the water, washed each other's privates and kissed all around. Andy and Shirl did lunch and the dishes and all lay down on one of the beds. \n\nBy some coincidence when we awoke the guys were facing each other and Shirl and I were on the outsides. We were also both holding our spouses semi hard cock. Shirl and I looked at each other and we both had the same mischievous inspiration.\n\nWe each very softly and gently removed our hands and then took our husbands hand and placed it on the other's cock. We gave them a few strokes to get them started and then gently rolled ourselves out of bed.\n\nWe moved the coffee pot outside and in a few minutes we were sitting in the sun quietly sipping. We were still naked and after about ten minutes of silent but erotic inter play we each had our foot in between the other's thighs and against the other's rapidly moistening pussy.\n\nThe sun was starting to become too much so we journeyed back inside and onto the other bed. This time our kisses were the real thing and we quickly worked a thigh against the other's now sopping pussy. Then _________ \n\n_____________. \n\nWell I'm sure that you can all write the rest of the weekend story.\n\nIn conclusion the Navy Wives Club gradually became what is sometimes called a swinger's club. The difference being hat we were all loyal to the group as there was always someone to supply whatever was in demand"
    ],
    "authorname": "Cousin-Barb",
    "tags": [],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/navy-wives-club-changes-course"
}