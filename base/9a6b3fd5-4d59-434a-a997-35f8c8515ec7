{
    "title": "Healing the Bloodlands",
    "pages": [
        "Author's Note: Warning, this story contains violence and some dark concepts. Neither are part of the sex or romance, but paint the background which drives the heroism bringing the characters together. If violence is a specific turn off for you, this may not be the story for you. \n\nSpecial thanks to livingforfun for editing and improving this story. \n\n***** \n\nA bit of mystery, a drop of magic, a flurry of violence, and a breath of romance bring Emma and Sarah together to save the Bloodlands. \n\nScene 1 \n\nEmma twisted the piping bag slowly, letting the red dye seep ever so slightly into the surrounding frosting. The master had been very specific about how the tarts were to look and she didn't have time to remake them. There were still ten different kinds of pie to make in addition to all of the pastries. She counted herself lucky though, none of her items had to reach the table hot. \n\nThe kitchen was abuzz with servants rushing to prepare for the gala, an event their master would do anything to make perfect. There was something special about this one. Emma wasn't sure what and it definitely wasn't her place to ask. Her place was here by the stoves, preparing the evening's confectionaries and generally staying out of everyone else's way. \n\nStaying out of the way was something Emma was very good at. At just over five foot, she was skinny and small. She could fit into small spaces, blend in with a wall or piece of furniture, or simply scurry underfoot. That and her subservient, giving nature made her a good servant. Servitude had been her lot in life since she turned fourteen and left her parents' farm to seek an income eight years ago. She had five younger siblings and the last thing the family needed was another mouth to feed. Instead, she sent money home every few months. \n\nShe'd just finished frosting the last tart when the master burst into the kitchen, eyes flaring behind a guise of stoic command. The tall, sophisticated man hardly ever graced the servants' areas with his presence unless it was to deal punishment. The room fell silent in trepidation. \n\n\"Everything must be perfect tonight,\" The master announced for what must have been the dozenth time. \"Hors d'oeuvres at six. The food is to be on the tables hot two minutes before seven. By the time the doors open at exactly seven, there should not be a servant in sight. You will integrate the other servants into your routine as necessary to achieve efficiency and accuracy. At exactly eight, you are to switch the main courses for the desserts. The blast of the first firework will be your cue. By the time the last has burst, you are to be gone again, the tables changed and ready. Then you are to report to the kitchens, taking the other servants with you. No one is to leave or go anywhere else in the manor.\" They'd heard this all before. It wasn't until he reached the end of his speech that anything changed. Here, he locked eyes with each servant in the room for what was the first time for all of them in each of their tenures at the Belmont manor. \"If any servant is found anywhere in the manor outside the kitchens and servant quarters after eight-ten, they will be dragged behind my carriage across the Bloodlands until dead. Do I make myself clear?\" \n\n\"Yes, master.\" The room said as one. They were silent a moment longer as the master gave a small threatening smile. His eyes dragged over them once more, slowly, like a rancher assessing his herd for the last time, before he turned and left. \n\n\"Something is happening tonight,\" the butcher's assistant breathed, breaking the stunned silence. \"Something we need to know about.\" \n\nThere was a general grunt of disapproval. It wasn't just the master's obsession. Having all of his guests bring their servants to assist had been confusing at best. The master could be a perfectionist on regular days, but the strict time table and continuous threats were more than concerning. \n\n\"What? You want to go ask him, boy?\" The butcher challenged, turning back to his chopping block and picking up his cleaver. \n\n\"Ben's right. Master Belmont has never acted like this before,\" the scullery maid took a small step forward into the center of the kitchen to be heard better despite her tiny voice. \"I'm scared.\" \n\nEmboldened, the assistant spoke again. \"We need to know. No one threatens death unless what they are hiding is worth killing for.\" The statement seemed fairly simple, but the room came to a complete halt to consider the idea. \n\n\"Is knowing worth dying for?\" the bread baker asked, making it clear she had no interest in that trade. \n\n\"I think not knowing may be what kills us surely as finding out.\" The head waiter was known for his quick wit and charming smile, but there was none of it in his expression. \n\n\"And how do you propose we find out?\" It was the head cook who spoke this time. She was a portly older woman with wispy grey hair, pulled back in a tight bun. She ran a tight kitchen and seemed to care for little besides efficiency, practicality, and butter. \n\n\"Someone could stay when we switch over the dinner to the desserts,\" the maid suggested, purposefully not drawing attention to herself lest she imply she was volunteering. \n\n\"Hide under the table,\" the assistant provided. \n\nThe butcher scoffed. \"They would be found and killed. They will check every time we enter to make sure we have all left. If someone wants to be there, they will have to have been there from the beginning.\" \n\n\"Right, and where would they hide? The grand hall may be large but it's open. There's nowhere to hide, no closets, no curtains. There's not even a bloody tapestry.\" The bread baker countered. \n\n\"A guest,\" the scullery maid interjected drawing the group's stares. \"We disguise a servant as a guest. They will be coming from all across the Bloodlands. There are bound to be people no one knows. Wear the right clothes. Say the right things. No one will know.\" \n\nThe kitchen servants didn't stop staring. It was madness. \n\n\"I'm serious. Do you think they know our faces? I don't know about you, but that's the first time the master has ever looked me in the eyes. There are like a thousand people in the Bloodlands. We steal the right clothes and makeup. No one will pick our spy from the crowd.\" \n\n\"You volunteering?\" The butcher challenged again. Emma was sure he was a formidable poker player, though she avoided the Monday night games herself. \n\n\"No,\" the maid sounded halfway between apologizing and defending herself. \"We would need someone who blends and that certainly isn't me.\" Tall and gangly, the woman had wiry black hair and horrible teeth. It wasn't self-deprecating or even an excuse, but simply the truth. \n\nIn one collective gasp, a single idea dawned on the room as a whole and every head turned slowly to stare at their confectioner. Emma didn't think she'd ever had that many people looking at her at once in her life. \n\nEmma felt as though she was being stared down by a pack of dogs, pinned against a wall with nowhere to run. They were all suddenly of one mind set, their target chosen, and somehow the proposition seemed less mad. \n\n\"She would fit in one of Jane's dresses,\" the cook's assistants said, running her gaze over Emma's thread-bare, dull green dress that had once been the color of her eyes. \n\n\"It would be easy to steal,\" the scullery maid chimed in. Jane had been Master Belmont's second daughter. She'd died of consumption nine years ago at the age of sixteen. Her room had been abandoned by the rest of the family, first for fear of contracting the disease and then because it was easier than trying to deal with their lost family member's things. That was an advantage of a large manor. You could bury the things you never wanted to think about in any number of walk-in closets. \"There would be makeup too. \n\n\"She's pretty enough,\" the butcher's assistant added, giving her an appraising look that made Emma feel even more vulnerable under their collective gaze. The butcher and his assistant didn't even look at meat like this. Like they had plans. \n\n\"I can't.\" Emma said, finally finding her voice, though there wasn't much to it. \n\nIt was the head cook who stepped in. Waddling ever so slightly, she approached Emma and placed both large hands on Emma's slim shoulders. \"You have to.\" \n\n\"They'll recognize me. Someone will recognize me.\" Emma pleaded. \n\n\"No one notices a servant. Least of all you.\" The cook said sternly. \n\n\"I can't,\" Emma repeated, breathless. \n\n\"You will.\" The cook replied. She didn't take her eyes off Emma's and the small woman found she had no ability to look away. They stood locked like that as the cook gave orders in her typical no-nonsense fashion. It was as if she were directing the preparation of a roast, not a pyre. \"Gretchen, get the dress, shoes, and the makeup. Lily, clean Emma up, get her hair and makeup done. We'll organize with my husband to arrange a carriage to circle back around with Emma after enough guests have arrived. Ben will cover Lily's work and Rita will finish what Emma cannot on the pies and pastries. We had little time as it was. I expect everything you have and more. This must be perfect.\" Her repeated words from the master were not lost on their audience and the group burst into frenzied action, working as the well-oiled machine they might just have to be to survive. \n\nEmma could see the blur of motion in her peripheral vision, but her eyes were still locked with the cook's. She wanted to beg. Get down on her knees if she had to, but there was an unbreakable determination in the brown eyes that stared at her. The cook spoke three words to Emma before releasing her, the words her eyes had been conveying, the words Emma knew she was helpless to defy. \"We need you.\" \n\n\"My...my pies,\" was all Emma could think to say. \n\n\"Get as far as you can. You have fifteen minutes.\" The cook responded then moved into the rushing crowd of servants to play her essential role as the machine's engine and engineer. \n\nEmma had never worked with so much focus in her life. Her efforts put all previous definitions of multi-tasking to shame. It was the only thing that kept her mind from what exactly she had been recruited for. I'm going to die and all I can think about is having the perfect thickness of pie crust, Emma chastised herself in a singular moment of mental clarity as she rolled out the tenth crust to an even parchment thickness. \n\nIt was with robotic emotionlessness that Emma handed the unfinished pies over to Rita and followed Lily and Gretchen to be bathed, primmed and propered. It was nearly six when the trio finished their work and stepped back to observe their success. \n\n\"Wow,\" Lily gave a small gasp. \n\n\"Damn girls,\" Gretchen added with a satisfied smirk. \"We are good.\" \n\n\"What now?\" Lily asked, still staring at their silent subject. Emma's long brown hair hung around her shoulders in soft ringlets. Her green eyes sparkled under long dark lashes, accented by soft blue eyeshadow. \n\n\"We show Mabel and then get her to the stables. The first guests will be arriving in a few minutes.\" Gretchen provided, grabbing Emma by the nail polished hand and pulling her back towards the kitchen. \n\nThe cook paused in her work long enough to look Emma over from head to foot approvingly, then dismissed them, \"Good luck, Emma. Remember, no one notices a servant. Just blend in.\" \n\nScene 2 \n\nEmma was quickly discovering that heels would be the bane of her existence if not the end of it. How was she supposed to look natural in these impractical things that sank into the ground with every step? She gripped the edges of the frilly blue dress stolen from the master's dead daughter, hoping to keep the dirt from reaching it. She'd never been this clean in her life and she was expected to stay that way. The trip to the stables made that task almost impossible. \n\nThe small group worked their way along the edge of the tree line, trying to keep Emma and her bright blue dress from standing out as much as they obviously did. The fact that every available eye was focused on the front of the house and the main entry hall was the group's only saving grace. \n\nThe stable master immediately refused to provide the requested services and for a moment Emma thought she might be saved. When Lily explained that his wife was the one giving the orders, the large statured man gave a growling sigh and several choice curses before ordering his underlings to quietly rig up one of the carriages. There was barely time to realize this was all really happening before Emma found herself shoved into the awaiting carriage and she was off. \n\nThe beating of the horse's hoofs on the hard-packed dirt path matched Emma's heart beat as it thudded in her ears. She stared out at the deep orange and pink sky and wondered why she'd never appreciated its beauty before. The trees along the side of the road seemed to be waving at her in the gentle evening breeze, a calm tranquility in stark contrast to her feeling of impending doom. \n\nThey all expected her to somehow pull this off. Blend in and then what? Learn some vital piece of information and report back? Her stomach did a barrel roll as she realized she had no escape plan. No way to call for help or to share what she learned. They'd worked so hard to get her here, with no thought of what would happen next. \n\nAs the carriage pulled up in front of the Belmont manor, Emma tried desperately to contain the panic that was threatening to overwhelm her. All she wanted to do was make a break for it. Throw these god damned shoes as far as she could chuck them and bolt into the trees. But then, the carriage door was being opened and a somewhat familiar head was tipped down, offering his hand to help her out without offending her by making eye contact. She took it for lack of anything else to do and slowly stepped out of the carriage onto the manor's front entryway. \n\nEmma's mouth gaped open as she took in the scene before her. She wasn't sure she'd ever even seen the front of the house before, let alone all strung up with lights. It was beautiful. Every inch of the front fa\u00e7ade sparkled like the night sky. A perfectly manicured lawn spread out before her, flowers flanking on either side providing an aisle by which she would reach the front of the house and the dark double oak doors. The doors stood open and from them poured music, laughter, light, the smell of delicious food, and even from this distance a touch of warmth that fought off the evening chill. She wandered forward, drawn like a moth to the flame. \n\nAs she reached the door, the luxuries of a life she'd never had washing towards her, a familiar face turned towards her from his place at the door. Suddenly, Emma was rooted to the spot, her breath caught in her throat. Master Belmont had turned his piercing gaze on her and he was smiling. \n\n\"Welcome,\" her master said, extending his hand towards her. There was a charm to his voice that Emma had never heard before. \"I don't believe I've ever had the pleasure. I'm Ranald Belmont, mayor of the Bloodlands and your host.\" When Emma didn't react, he reached his extended hand down and took her hand in his, bringing it to his lips for a quick kiss. \"And you are?\" He prompted. \n\n\"Mary Jessip,\" Emma tried not to stammer as she gave the name Gretchen and Lily had come up with. She'd thought their backstory efforts were ridiculous and fanciful, but now, standing in front of her master in his daughter's clothes, the lengthy if flimsy tale of her life was her life raft. \n\n\"Jessip?\" Emma's master asked running the name and face through his mind slowly. \n\nThis is it. How did anyone think this would work? Emma thought, not sure if she was more disappointed in her colleagues or herself. \n\n\"I don't think I've had your family as my honored guests before, Miss Jessip.\" Her master provided, releasing her hand and giving a tiny bow. \n\nOr not. \"My father just bought land at the edge of the Bloodlands. My uncles inherited the family land in the Dales and my father felt his fortune would be of more use if he wasn't under the shadow of his brothers.\" Emma quoted Gretchen trying to add the accents and affectations the scullery maid had used. The frivolous novels Gretchen's boyfriend, Ben, had poo pooed had come through in the end. Master Belmont smiled brightly at Emma's story and ushered her through the door into the grand entry, accepting her apology for having no servants at the new manor to bring to the party. \n\nEmma was escorted from one end of the room to the other and introduced to the masters of the families around the whole of the Bloodlands. Some faces were familiar while others she doubted she'd ever seen, but no matter how many times she had seen them, these people had apparently never seen her. No one notices a servant, Emma repeated to herself over and over again, watching as the guests' servants retreated into the background to be completely ignored. It had become her mantra, her calming phrase with each reintroduction to a master she knew well already. \n\nIt was seven o'clock before Emma was finally released from her master's eager attention. The hors d'oeuvres were all but devoured and the crowd was being led to the grand hall for the main course. Emma followed directions, moving with the stream as the buffet tables against the far wall were systematically swarmed. Guests with mounded plates milled through the half of the room by the buffet tables before finding seats around the large wooden tables with their red table cloths. The other half of the room stood empty. The scraping of chairs against the hardwood floor and the buzz of voices filled the large space, bouncing off the hard walls. The guests didn't seem to mind the noise, only increasing their volume when their conversation partner was more than a seat away. \n\nEmma filled a plate and took a seat. Blend in. She spoke when asked a direct question, but for the most part she simply listened to the idle gossip, the business updates, and the daily life complaints of the people around her. It all seemed so trivial to her. These were the heads of rich families that kept the money of the area flowing, yet nothing they said seemed to matter. They had the same trials and triumphs that she heard shared daily in the kitchen, just on a larger scale. Emma had been told to listen and report back, but what was there to report? That Edmund Gretten had caught the bugger stealing his chickens? That George Fischer was renting a room to his wife's cousin's son? That Rodney Coleson couldn't get his plow to turn the soil which was hard and dry? \n\nAs the last of the guests finished their meals, the crowd was invited to abandon their plates for refreshments and dancing. A line of servants, the ones who had ushered in the guests at the front of the house, removed the covering from a long line of tables housing bottles of every kind of liquor and mixer Emma had ever seen. Interspersed with the bottles and punch bowls were several of her own confectioneries. The servants took the covering, then all of the plates and disappeared into the back of the manor. Clearly, they had been ordered from the party and to their quarters the same as the kitchen servants had been. \n\nOnce again, the crowd surged forward, though this time not all for the tables. The band, which had been playing light music throughout the dinner had picked up a loud and steady dance tune and partners were taking to the floor. Emma stood at the edge of the dance floor, blending in with the guests who stood watching the dancers. It was enthralling. The beat of the music exactly matching the beating of the dancers' feet. The swirl of beautiful dresses as the women in them were spun in slow circles. The flow of partners in step with each other streaming around other partners like the dance of autumn leaves caught in a breeze. ",
        "After three songs, Emma found the composure to tear her eyes away from the magnificence in front of her and work her way towards the refreshments table. The conversations around her were proving useless and she reminded herself that she was here with a mission. If people weren't talking about anything of value here, maybe she just needed to keep moving. \n\nAs Emma reached the table she pulled closer to a pair of men discussing something in hushed voices. The music and clamor made their hushed attempts somewhat futile. \"Some kind of ceremony, but he wouldn't say anything else.\" The one man was saying. \"He was very upset when I thought I wasn't going to be able to make it. You know with Maude doing as poorly as she is. But, he was very insistent. So here I am.\" \n\nEmma took a small glass and added a ladleful of punch to give her an excuse to stay close and listen. \n\n\"Yes, very odd.\" The other man agreed. \n\nEmma stared at the table in front of her, trying to drown out the other sounds of the room and hear what these men were saying. There was a man in a fancy hunting uniform standing next to her on the other side, but she didn't bother to look over. The first man was starting to say something but he was turning his face away and she couldn't quite make out what he was talking about. Something about seeing all the heads of the families. \n\n\"Those are my favorites,\" a soft voice said next to Emma and she realized a little too late that she was being addressed. She turned to the uniformed figure next to her, realizing that it was neither a man nor a stranger. Sarah Weatherly stood looking down at her with a broad smile. Her short brown hair was pulled back by several small metal clips and she was wearing a man's hunting uniform perfectly tailored to fit her toned figure. She was in her late twenties and tall for a woman, though not ungainly so. Her brown eyes were warm and inviting, same as her voice. She was a regular at the Belmont manor. She rode over every Friday to spend the day in Master Belmont's library, trading in several of the books she'd borrowed the week before for new ones. She would sit for hours in the bay window of the library reading and snacking on whatever the master sent in the way of food by way of his many kitchen servants. Emma had been that servant on many occasions, though Sarah had always been deeply engrossed in her books. No one notices a servant. \n\nEmma was vaguely aware that she should respond, but had missed what Sarah said entirely. \"Hmm?\" \n\n\"Those tarts,\" Sarah said, pointing to the grouping of small tarts with red and white swirled frosting that Emma had inadvertently been staring at while she was listening to the men. \"Those are my favorites.\" \n\n\"Oh,\" Emma blushed at the compliment the other woman couldn't know she had given. \"Sorry,\" she added and stepped away to give Sarah access to her favorite treat. \n\n\"No,\" Sarah smiled even wider, her expression somehow becoming even more gentle. \"I meant you should try one. You've been staring at them.\" \n\n\"Oh, yeah,\" Emma sputtered, reaching out to take one as directed. Looking down at the creation in her hand, Emma realized that despite having made hundreds of these in her time here, she'd never actually eaten a finished one. She took a slow bite under the watchful eye of the woman beside her. \"Mmm,\" she moaned involuntarily. Damn I'm good, Emma thought to herself before chastising her lack of humility. I've taken on too much of Gretchen into my character. \n\nSarah was staring at her. Her eyes had taken on a glow and for a moment Emma found she couldn't look away. Luckily, Sarah released her, closing her eyes to chuckle at Emma's reaction. \"See, I told you.\" \n\nThe rest of the tart followed as Emma finished her treat and smiled sheepishly. Sarah was watching her again and she wasn't sure what she should do. Suddenly remembering the men and the conversation she had been listening to, Emma turned to her left only to find the men had moved on and she had no idea where. She was back to square one and Miss Weatherly was still staring at her. She must recognize me. Emma realized, slowly turning back to the striking woman beside her. The thought of running struck her again, but what good would it do. There were a hundred people between her and the door. Even if she ran out the back towards the servant's areas, they would catch her sooner or later. Maybe Sarah would stay silent if Emma begged. \n\nSarah wasn't smiling when Emma turned back towards her. She had a look of confidence and determination on her face instead. Emma opened her mouth to defend herself and her actions, but found she had no words. \n\n\"May I have this dance?\" Sarah asked, extending her hand towards Emma, palm up and inviting. The smile was back but this time laced with that same determination and confidence that had been the only thing there only a second before. \n\nRelief washed over Emma. It wasn't recognition that she was seeing in Sarah's face, it was interest. Emma had always been considered pretty and apparently her duo of dressers had brought out a whole other level of attractive. Maybe this woman found her comely. That was why people asked someone to dance, right? \"I don't know how,\" Emma admitted, sadly. She was pretty sure she would enjoy dancing with this woman very much. \n\n\"That's okay,\" Sarah said, clearly encouraged by the fact Emma had not technically said no. \"I'll show you.\" \n\nThe outstretched hand hadn't moved, so hesitantly, Emma took it and followed a grinning Sarah onto the dance floor. They started simple, Sarah placing Emma's left hand on the taller woman's shoulder and holding her right hand. Sarah's right hand was at the small of Emma's back, holding her several inches away from her own body. \"Push back into my hand,\" Sarah instructed and Emma felt a tingle run to the tip of her toes as doing so increased the contact of Sarah's hand just above the hoop of her skirt. \"Think of your right hand as the reins. I'll use it and my hand on your back to guide you. Just follow my lead and keep pressure against my hands so you can feel the instructions.\" \n\nEmma nodded. Following directions was something she was very good at. She hoped the skill would transfer over. \n\nFor the first song, Emma's eyes remained locked on the floor, trying to make her feet match Sarah's. She couldn't get the timing right. The music wasn't matching the dancers' feet. They were matching the music and she couldn't find the beat they all seemed to follow instinctively. Instead, she kept stepping on Sarah's finely polished boots and bumping into her, constantly reminding herself to put pressure on Sarah's hands. \n\nThe song seemed to last forever and no time at all as she struggled through every second only to get to the end feeling like she'd accomplished nothing. She pushed back from Sarah, shaking her head apologetically. \"I'm sorry. I...I can't...clearly.\" She felt on the verge of tears half from embarrassment and half for how desperately she wanted to be good at this just so she could stay here in Sarah's arms. Despite every step being a struggle, the warmth of Sarah's hand on her back and in her hand felt reassuring and safe. \n\n\"Try again,\" Sarah replied, her tone almost begging. Her hands gripped Emma as if she were a lifeline. \n\nEmma stopped trying to pull away and allowed herself to be brought back into the dancer's hold again. \n\n\"This time don't look down. Keep your eyes on mine and just feel how I move. Let the top half of your body follow mine and your feet will figure out where to be to keep you next to me.\" Sarah coached, reaching out to tuck an errant hair behind Emma's ear. \n\nThe music was picking up again and around them the dancers were finding the beat once again and flowing around the floor. Emma locked on Sarah's eyes and for a moment her breath caught at the glow that had returned to them. They were almost golden in the light from the chandeliers. There was a contentedness and a want in them that Emma didn't think she'd ever seen in anyone's eyes before and she had the vague idea that this look was for her. \n\nEmma didn't even feel her feet beneath her, all sense of consciousness was in her eyes and the two spots where Sarah was touching her. She was floating. Stepping on clouds as much as the floor until she felt her foot come down on Sarah's boot again. Her eyes lurched to the floor and she was back in the grand hall stumbling to not look like an idiot. \n\nFingers curled under her chin tipping her face up and she was lost in Sarah's gaze and movements again. She tripped three more times before the new song ended, but she was pulled back in every time. She didn't even consider pulling away this time and was immediately swept into the next song. Sarah introduced turns and spins, giggling kindly when the pair stumbled and caught themselves. Emma found her strain and fear slowly slipping away and even joined Sarah in her giggles after the fourth trip. \n\nBy the fifth song, Sarah and Emma moved across the floor like one entity. It wasn't perfect and Emma guessed it wasn't exactly beautiful to watch but she felt beautiful doing it. Sarah made her feel beautiful. She was looking at her like she was the only person in the room, using solely her peripheral vision to keep from knocking into other couples. \n\nAs the sixth song came to an end, Sarah slowed and Emma was afraid she was going to thank her for her time and move on. She'd successfully taught the small woman to dance and now she would move on to other prospects. Maybe ones who really could dance. \n\nThey'd stopped dancing, but Sarah hadn't let go. Emma wasn't sure what she was supposed to do. She was trying to read the odd look in Sarah's eyes, but was getting very little in terms of what she intended. \n\nAfter several beats, Sarah leaned forward, her face only inches from Emma's. \"May I kiss you?\" She breathed. \n\nEmma gasped. She supposed the night had been leading to this but she still hadn't expected it. But one thing she knew for sure, she definitely wanted Sarah to kiss her. She wanted to feel those pink lips on hers and know how they tasted, how they felt, what she would do with them. She'd been kissed before, by masters, by fellow servants, but they'd never asked permission. They'd simply grabbed her when they felt like it and done as little or as much with her body as they wanted and then left when they were satisfied. At fourteen, her mother had taught her about sex before she left the farm. She was to avoid it as long as possible, to do it with as few people as possible, until she found a man she loved and then marry him. But her mother had also been a practical woman who understood what happened to women who were both small and poor. The most important thing was to be safe and sometimes that meant letting men do what they wanted with meek limitations. It had been eight years since she'd left the farm and Emma had managed to avoid both pregnancy and marriage. \n\nShe'd never been asked and more than that, she'd never been asked by a woman. The idea thrilled and scared her. How would it be different? Would she be expected to be different? What would people think? \n\nThe idea of other people brought Emma harshly back to the reality around her. She was supposed to be blending in. She was supposed to be listening to find out anything that might prove important for her fellow servants. Kissing a woman in the middle of the dance floor didn't seem like blending in. \"Won't everyone else...?\" She started, not knowing what exactly she was afraid everyone would do and not wanting to say no either. \n\nSarah clearly heard the lack of a no. She was leaning even closer, her forehead all but touching Emma's. Emma could feel their hair intermingling as Sarah's rough breathing lifted and lowered her head against Emma almost imperceptibly. \"They don't care,\" Sarah whispered. \"They know who I am. They take advantage of it when it pleases them and the rest of the time they make a concerted effort to ignore me.\" \n\nSarah was intoxicatingly close. Emma could feel the taller woman's breath washing over her with just a hint of the smell of her strawberry tarts. Their foreheads were fully touching now and their noses brushed as Sarah rocked her chin forward, offering again. When Emma hesitated, still unsure of herself, Sarah pulled back, taking it as silent rejection. \n\n\"Please,\" Emma managed to plead as Sarah started to retreat. A relieved and excited smile spread across Sarah's face. Emma saw it for only a moment before she felt it, Sarah's smile pressed against hers. And then Sarah was kissing her like no one had ever kissed Emma before. It was soft and gentle yet excited and passionate. It had none of the force or coercion that had defined Emma's experiences before this, but there was no denying the hunger that Sarah put into the kiss. Sarah wanted more than this, but she also wanted this. The first kiss was long and slow, then Sarah pulled back ever so slightly, just enough that their lips separated entirely with a soft smacking noise. Emma felt exhilarated but also deeply disappointed. It had been so wonderful but it felt so short. Had she done something wrong? Maybe Sarah would let her try again like with the dancing. \n\nEmma barely had time to question herself before Sarah tipped her head to the side and pressed in again, her lips quickly finding Emma's in a searing kiss that made Emma pull back to gasp for air. It was Sarah's turn to look concerned but the expression didn't last as Emma took the initiative, wrapping her arms around Sarah's neck to pull her down again. \n\nSarah's fingers were in Emma's hair tipping her head back and pulling her deeper into the kiss. Emma's whole body was on fire in a way she'd never felt before. It tingled in her fingers and toes but centered in her gut and lower between her legs. She wanted to stay in this moment forever, her heart pounding in her ears and Sarah's body pressed against her own. \n\nSarah pulled back again, smiling down at Emma as if in awe. \"You are so beautiful, Emma.\" \n\nThe pounding of Emma's heart skipped a beat and suddenly the room was spinning. She tried to pull away, but Sarah held on. It was a good thing as Emma's knees went weak beneath her. I never told her my name. If she had it would have been Mary. Her brain replayed the moments of the evening as if her life were passing before her eyes in the abridged, recent history version. She'd definitely not told Sarah her name, nor gotten Sarah's in return. They had simply danced together as if they already knew. \n\n\"You know who I am?\" Emma gasped as Sarah held her up, fear written across her face. \n\n\"Of course, I know who you are. I've seen you almost every week for years.\" Sarah replied still clearly confused by Emma's reaction. \n\nEmma swallowed hard, trying to get her feet under her. She would need them in order to run. \"No one notices a servant,\" Emma whispered, tears springing to her eyes unbidden. And tonight had been going so well. She tried to pull away again, but Sarah's grip was too tight around her upper arms. Maybe if she struck Sarah everyone would think she was reacting to the kiss. Maybe they would be on the stranger's side just long enough for her to make a break for it. \n\n\"No one dances with me,\" Sarah said. And for a moment, she had Emma's attention. She didn't waste the moment of undivided attention. \"No one notices a servant, but I do. No one dances with me, but you do.\" \n\n\"I...You...\" Emma tried to find words but her thoughts were too jumbled to even find a subject to her sentence. \n\n\"Miss Jessip, is this woman bothering you?\" Their not so private moment had caught the attention of their host, for whom Emma knew this evening was supposed to be perfect. Now he had to figure out how to address two women whose money he clearly valued. \n\nThe grip on Emma's arms was immediately released as Sarah took in the scene from an outsider's perspective. She took a step back, smiling as if nothing were the matter. Emma for one was simply happy that she managed to stay on her own two feet. \"No,\" Emma replied, finding her voice. The last thing she needed was to put her word against Miss Weatherly. The sooner everyone returned to their party, the sooner she could get the Hell out of it. \"I'm fine. Thank you.\" Emma fixed her gaze on Sarah, silently pleading with her to say the same. \n\n\"She just got a little dizzy,\" Sarah said by way of explanation. \"I'm told I do that to women,\" she added with a suggestive wink. \n\nMaster Belmont's jaw hung slack for half a second and his cheeks reddened before he could pull himself fully back together. \"Yes, well, Miss Jessip is my guest. I expect her to be treated well.\" The charming gentleman mask was back on if somewhat askew. \n\n\"Oh, I intend to, Ranald\" Sarah winked again, dismissing Master Belmont better than any other statement could have. \n\n\"How do you do that?\" Emma asked once the master was fully out of earshot and everyone around them had gone back to ignoring the degenerate display in front of them. As much as she wanted to get back to the safety of the servants' quarters, this woman continued to captivate her. \n\nSarah smiled at the small woman in front of her, apparently pleased just by her continued presence. \"I scare them. I disgust them. It used to make me feel horrible, but one day I realized that they need me a lot more than I need them. And so, when I want them to leave me alone, I rub it in their faces and they run like the cowards they are.\" She said it so matter-of-factly that Emma found herself wanting to object. How could anything about this wonderful woman be disgusting. Scary, sure, she'd been scared too, but never disgusted. \n\nNow what? Emma wondered. She couldn't stay, but she really, really didn't want to leave. \"I have to...\" She began, stepping away. \n\n\"Please don't leave,\" Sarah said, stepping forward into the vacated space. Her long stride put her within inches of Emma and the servant felt the intoxicating presence once more. \"Emma, I really like you. I don't know what you're afraid of, but you don't need to be afraid of me. If you don't want me to kiss you again, I won't. Just please don't leave.\" \n\nEmma didn't know what to say and for once was glad of it. The music stopped abruptly and she could only imagine what her loudly spoken response might have been. Instead, Emma's answer was provided for her. \n\n\"Fireworks!\" Master Belmont called to the room. \"To the balcony.\" \n\nSarah reached out her hand in offering and Emma took it, letting her guide the way to the balcony and the start of the fireworks show. Behind her, servants poured into the room silent and unseen. They removed the drinks and remaining refreshments, replacing them with Emma's confectioneries and then disappearing as they had been instructed. \n\nThe sky lit up with blues, greens, reds, and golds as the crowd oohed and aahed. The crack of small explosions and smell of gunpowder filled the air. Emma stared up at the display with captivated wonder, unknowingly matching the expression of the woman watching her instead of the light show. Both were sure they were witnessing the most beautiful thing they would ever see. \n\nAn especially large explosion lit up the crowd and Emma caught her admirer out of the corner of her eye. She turned to smile at the taller woman, no longer so enthralled by the fireworks. \n\n\"I want to...\" Sarah began, running her hand up Emma's shoulder and neck to cup her face. \n\n\"I want you to,\" Emma provided, leaning into the space and meeting Sarah's lips half way. They kissed as they had on the dance floor, the rest of the world dissolving around them. \n\nThe brush of people streaming past them, being none too careful to avoid minor collisions, broke the kiss. Emma and Sarah grinned at each other before turning to follow their fellow party-goers back into the grand hall. As the group collected on the dance floor, Sarah pulled Emma towards the back of the room. They would have more privacy and could continue their making out in peace while the rest of the crowd moved on with whatever was planned next. ",
        "Emma had pulled Sarah half way to her lips when Master Belmont interrupted, his voice booming around the room. \"Ladies and gentlemen, thank you all for being here tonight as my honored guests. I know you have all been waiting to know what is so special about tonight. It is a long story and I will attempt to tell it in as few words as possible so as to still convey the pivotal importance of tonight. As you all know, your land makes up what is known as the Bloodlands. What you most likely don't know is how the name came to be. Six hundred years ago, a great feud was fought on top of the fertile land we now own. It was barren and dead but with every life shed on it, every drop of blood that leaked down into the soil from the end of a life, new life grew. The victors of the feud took the land and discovered the devilish woodland creatures known as the fey that had begun to enchant the land with great fertility in exchange for the blood it held. They didn't want the land or the fruit of their enchantment and the victors were free to use it, passing it and the story of how their land had grown fertile down to their children. One hundred years later to the date, the land dried up and the masters began to fight again, looking to place blame for their sudden poverty and their abandonment by the fey. Once again, the blood spilled in the violence brought the fey's magic and new life with it. The words of their great grandfathers came back to the masters and they spread the blood of their dead across the soil and it again bore them wealth.\" \n\nA cold wind whistled into the room through the open balcony doors and a collective shiver ran through the crowd. Emma wondered vaguely why the servants hadn't closed the doors, but her attention was on the gruesome story being presented and her own attempts to not envision it. \n\n\"A hundred years passed and it happened again. The fey magic was brought back in the conflict over sudden poverty. A hundred years later, the smartest of the masters were ready. The eldest head of each household gave his life to keep the family land alive, but the fey were not pleased with the self-sacrifice. They wanted murder. So, the families turned on each other once more and blood was spilled. The land stayed fertile. Two hundred years ago, the masters came up with a new plan, a way to spare their families and keep their riches while appeasing the fey. The blood did not have to be from their own families. Any blood would do and who better to sacrifice than the same men and women whose blood, sweat, and labor was given to the manor already.\" \n\n\"The servants,\" Master Belmont, Emma, and Sarah said together. \n\n\"Oh my god,\" Sarah gulped, grabbing onto Emma. \n\n\"I have to warn them,\" Emma whispered trying to pull away once again. \n\n\"You have to get them the Hell out of here,\" Sarah corrected. Her eyes had lost their glow. They were the color of the cold, hard ground the master's plows had been unable to cut earlier that day. \"Get everyone to the river, swim downstream a mile and a half. You'll see a blue barn to the right. That's my land. I'll delay everyone as long as I can and then join you. Keep to the river, the dogs won't be able to follow your scent.\" \n\nEmma was shoved back towards the doors to the servants' area while Sarah made a beeline through the crowd towards the front of the room. Please don't let that have been goodbye, Emma prayed as she slipped silently out of the room and bolted down the narrow hallway. \n\nScene 3 \n\n\"Not everyone was willing to make the sacrifice two hundred years ago, nor were they all willing to do so one hundred years ago. Those families that did not sacrifice found their land dead and could not grow in the easy way they always had with the fey magic. They eventually abandoned the land to those who knew how to restore its wealth when the time came again. The Fallows were left as a reminder of what happens to land that is not fertilized with the life of another. Those of you who have been in your fields today know that something has changed. Your land no longer has the fey magic and will grow nothing more until you spread blood over it. Luckily for you, my great grandfather was entrusted with passing on the ceremony which we will complete tonight. All of your great grandfathers paid dues into the fund that has kept this manor heavily staffed and I have an entire wing of all your servants that are as good as livestock waiting at the slaughter.\" \n\nJesus, Sarah cursed under her breath, this man is insane. \n\n\"This is mad,\" someone in the crowd echoed Sarah's thoughts. \n\n\"Is it?\" Ranald asked. \"Rodney, your land would not sow. Loren, your crops were withered. Oscar, your well is dry and your seedlings have died in one day. If we do not act soon, the land will be dead for another hundred years. The fey will not help those who do not give them the sustenance they demand. You have neither the knowledge nor the tools to do for your land what they can do. Will you let your family fall to poverty for the life of a couple servants?\" \n\n\"What about animal blood?\" Sarah called from the audience, not wanting to let Ranald finish his rallying call. She could already feel the tension in the room building. When it broke she would have a mob on her hands. \n\n\"They tried it two hundred years ago. It doesn't work. Only human blood will suffice and it can't be just a little either. Our ancestors tried that too. Everyone giving a bit. No, only the sacrifice of a human life will bring the fey to cultivate the land.\" Ranald replied from the front of the crowd. \n\n\"How many servants must die?\" Sarah was grateful for the question, but less so for the implied foregone conclusion that they were moving forward with this plan. She was already on the move to another part of the room. The more the dissent seemed to be spread out the longer the group would be immobilized by indecision. \n\n\"If you spread sparingly and get every drop, each plot will take only two.\" Ranald provided. \n\n\"But my plot is larger than his,\" Sarah objected, still on the move. She had no idea who's plot it was she was comparing hers to, but it didn't really matter. \n\n\"The largest of the plots may take three, but if we all start with two - \" Ranald seemed to be growing frustrated with this line of questioning. He had assumed the tone of someone not used to working with kindergarteners now being asked to run show and tell. \n\n\"What if there aren't enough servants?\" Sarah had made it to the far end of the crowd and was now doubling back. Perhaps she could even sow dissent among the masters, get them fighting over the servants before they went to look for them. \n\nRanald huffed. \"There are.\" \n\nFor a moment the room was silent and Sarah cursed them all. She knew they were a bunch of bigots and idiots, first hand, but why was she the only one seriously objecting? God Sarah, think of something! They'd heard her voice too many times. Even from different parts of the room, it was going to become obvious eventually that she was the only one holding the mob back and then what would she do? She needed to buy Emma and the other servants time, but she also needed to get out herself. \n\n\"There should be a fair process.\" Sarah mumbled next to the ear of the man who happened to be standing next to her. When he didn't react, she shifted slightly, repeating herself in four ears before finally someone called out, \"There should be a process shouldn't there? Something that makes sure it's fair.\" \n\nGod, you people are fucking idiots! \n\n\"Fine! Fine!\" Ranald yelled. Clearly his well thought out plan was not so well thought out. He grouped the families together, dividing them into groups of servants based on sleeping arrangement when someone in the crowd insisted upon it. He was impatient, but not manic, having no idea that as he organized and reorganized one Mary Jessip was hopefully tearing people from their beds and leading them to safety. \n\nWhen the group finally had a plan including exactly how the murder could take place such that the blood was not spilled prematurely, Sarah sent a short prayer up to a God she wasn't sure she believed in and silently abandoned the group to their snipe hunt. \n\nShe reached the stables at a dead run. She doubled over, gasping to the singular servant who had not been sent to the kitchens or servant quarters for the night that she needed two carriages rigged up as quickly as humanly possible. The attentive stable master, he followed her instructions, moving quickly until he heard the smashing of metal on wood. \n\nSarah looked up from the broken carriage wheel long enough to order the man to keep working before swinging the splitting maul into another carriage wheel. \n\n\"Miss, what are you doing?\" The man protested. \n\n\"They will try to follow us. They'll kill us if they catch us. Do you understand me? Get the two carriages ready. We don't have much time.\" Sarah demanded as she laid waste to the second carriage wheel. She would drive one carriage and him the other. They would need as many as they could manage to steal. What she would give to have more of the burly stable hands here at this moment. \n\nThe stable master hadn't moved. \"My wife.\" \n\n\"She'll be with the others escaping down the river,\" Sarah explained as she moved onto a new carriage, hoping she was telling him the truth. \"Her best chance of survival is if we meet them with these carriages so move!\" \n\nAs the stable master clipped the last of the harnesses into place, Sarah turned to her final task in this dreadful place. She ripped open the stable door she'd used so many times over the years, unwrapped her horse's tether and guided her out into the entrance. \"Go home,\" she ordered hoping those intelligent eyes would pick up on her meaning. She gave the mare a sharp slap on the rear before leaping into the driver's seat of the carriage. \n\n\"You've driven a carriage before?\" The stable master asked. \n\n\"Never.\" Sarah stated, flicking the reins hard in her hands. She didn't need to know how. She'd always found horses to be smarter than people. She just had to tell them where they were going and perhaps try to get across just how much of a time crunch they were on. The carriage took off. Sarah could hear the stable master behind her, trying to keep her pace while following the rather underrated techniques that kept all four wheels on the ground. \n\nAs they reached the edge of the property, Sarah could hear the barking of dogs. Clearly the masters had found empty beds. She just hoped she'd given Emma enough time. God how she wished she'd kissed that beautiful woman goodbye. It was hypocritical she knew to regret that last missed kiss and at the same time regret not giving her more time to save her fellow servants and herself. But Emma had felt so good in her arms, felt so good against her lips. Emma had kissed her back, had wanted her back. For a brief moment, everything had been perfect. Beyond perfect. This was all Ranald Belmont's fault. If anything happened to Emma, she would kill him. \n\nThe carriages careened into the front lot, throwing gravel out onto the quickly dying flowers. From the front of the manor, nothing looked different. Had they beaten the Bloodlands' servants here? Were the servants coming at all? \n\nSarah ran to the front door, throwing it open to the best sight she'd ever seen. The entire front hall was filled with servants, a few of them her own, some she'd seen on her weekly visits to the Belmont manor, but most she didn't recognize. Standing in the front center, with her back to Sarah, wet from head to foot, was Emma, completely naked. All around her, equally wet servants were in different states of undress, pulling on dry clothes as they were provided. Sarah felt her mouth go dry and all the moisture in her body collect in a very specific location. \n\nThe image of Emma naked was not a new one for Sarah. She'd pictured it every time the young woman brought her treats in the library. Each time, Sarah had chastised herself for her lewd mind. Now, she realized she should have been chastising herself for selling this woman short. Her curves were perfect, slim and defined, down to the small dimples in her back. \n\nSarah crossed the room in as few strides as possible, her long legs allowing her to reach Emma just as the woman finished pulling bloomers up onto her hips. In her head, the move was smooth and romantic, but she was sure it failed on both accounts. She grabbed Emma by the shoulders, spun her around, pulled her in close, and brought their lips together with bruising force. Emma melted into the kiss, leaning her topless body in for even more contact. Sarah could feel Emma's breasts pressing into the wool of her uniform. She'd never hated her father's uniforms before. She'd had them retailored to fit her after his death so she could wear them in his honor. At this moment, she hated them. Hated the thickness that kept the warmth and plush feel of Emma's body from touching her own. \n\nWhen Sarah finally pulled back, her only intention in doing so to get a better look at the body she held, she realized the entire room, some seven dozen servants, was staring at the partially clothed couple in the middle of the entry hall. Much as she wanted to strip off the few layers that stood between her and Emma, now was absolutely not the time. She was the master and everyone was relying on her to keep them safe. \n\n\"We don't have much time,\" Sarah announced to the room. \"They'll figure out what's happened sooner rather than later so grab the most valuable items you can and let's get out of here. We'll go to Uncle Arthur's,\" she added for the benefit of the minority of servants for whom that meant anything. \"We have two carriages outside and another six in the stable. Rig them. We leave in five minutes.\" \n\nLike glass shattering on a stone floor, the servants scattered, those few that knew the house and the property leading the way for those that could only guess at what might constitute as valuable to this crazy servant-kissing woman...female-servant-kissing woman. \n\nTrying to keep her lust in check, Sarah turned her attention back to Emma. Focus on her eyes, not those perfect lips or beautiful brea - eyes, Sarah! \"I'm so glad you're okay,\" she managed. \n\n\"Thanks to you,\" Emma gave a small smile. \"What can I do to help?\" \n\nSadly, putting on a shirt or I'm going to start - eyes, Sarah! \"Help load the carriages,\" Sarah said, looking over her shoulder at a group of servants already loading trays of real silver ware into the awaiting carriage. \"No! People inside. Stuff on top.\" Sarah ordered, before turning back to Emma. \"I need you to make sure they leave room for everyone. We've got some ten people to cram on and in each carriage and we're not leaving anyone behind.\" With that she bee-lined for the study. Valuables and people were important, but there were a few things of her daddy's that she would rather not have fall into vengeful hands. Others she would simply be heartbroken to lose. \n\nAfter five minutes, Sarah called the group to a halt. They had as much as they were going to get, now it was time to say goodbye to Weatherly manor and hope it was still there to return to when the chaos cleared. As if called, the last possession Sarah had hoped to leave the manor with came trotting to the overloaded carriages. Sarah swung up onto her saddle and the party moved out. It would be an all-night ride to Uncle Arthur's manor, pursued in the dark, only a few of the deceased Timothy Weatherly's hunting rifles to protect them. \n\nThey heard their pursuers before they saw them. The crack of rifles announced attackers too desperate to wait until they could \"see the whites of their eyes\" or even more than the outline of their carriage. Sarah thanked God she'd had the foresight to hand out her father's rifles to the men who sat beside each carriage driver. They were about to need them. I'll be a Christian by the end of the night, she joked to herself sarcastically as she thanked God she hadn't sold the bulk of the rifles to a tradesman a couple years back. \n\nSarah had been leading the pack. She shifted in her saddle to face her soon-to-be soldiers and saw the raw terror in their eyes. They gripped the weapons in their laps not with determination but as if the gun were a snake they were holding back and likely to throw once they worked up the courage. \"Kneel on the bench and aim the rifle over the top of the carriage, rest it on the top to steady your shot,\" Lord knew they were going to need all the help they could get in that department, \"and use the carriage as cover.\" \n\n\"I...I can't shoot a master.\" One of the men stammered, his knuckles turning white. \n\n\"I can't shoot.\" Another admitted. \n\n\"Dear Lord,\" Sarah sighed in place of a few choice swear words. \"Drivers just keep driving as fast as you can. Those of you with a rifle listen up because here's the basics and it's about to be you or them. Worse, it's about to be you and the people you love, everyone in these carriages, or them.\" Sarah flipped around, straddling her horse backwards and drawing her rifle out of its saddle holster. She gave the briefest explanation on how to aim, fire, and reload the single action rifles that she could, then gave the advice her father had once given her, \"Exhale before you pull the trigger and don't close your eyes. Much as you're going to want to look away, don't. If you miss you have to know how to correct.\" Tim Weatherly had been telling a twelve-year-old girl who wasn't sure she could watch a bleeding deer. The words rang truer now than she ever thought they would. \n\n\"You have your people, your family to protect. Don't stop...and please don't shoot me.\" She added, pulling off the road and into the woods. \n\n\"Where are you going?\" Several voices called at the edge of hysteria. \n\n\"To flank,\" Sarah hissed hoping they wouldn't blab her plan to the enemy. She broke through the trees and underbrush, cutting at a forty-five-degree angle from the road to blend the sound of hooves and crashing undergrowth with the commotion of the carriages until she came to a stop several yards behind thick woods. She watched eight masters ride up and then past her down the barrel of her rifle. She almost wished she'd had the foresight to incapacitate the horses at Belmont manor the way she had the carriages, but in the end, she knew she wouldn't have been able to hurt innocent horses for the actions of their cruel masters. \n\nAs the first shot rang out from the servants, Sarah burst onto the road behind them and the firefight began in earnest. \n\nWhen the final shot had been fired and all the masters had been incapacitated in one way or another, Sarah took stock of the situation around her. The last master's shot had struck her in the shoulder and it burned with a growing fire that was quickly making her fingers go numb. But at the moment, that was the least of her concerns. The need to get further from the scene towards safety stood in direct conflict with Sarah's need to stop the group and know if everyone was okay. And Emma. Was Emma okay? \n\nThey ran the horses another mile before Sarah felt safe calling the carriages to a halt and swung down from her steed. As the carriages came to a complete stop, the dozens of servants jammed into each carriage poured out, each desperate to escape their terrified claustrophobia. Many of them found their feet only to fall to the ground sobbing, uttering unintelligible pleas and moans. \n\n\"She's dead!\" A horrified female voice called out. Sarah was at the damaged carriage in seconds. Within the carriage, a brunette lay face down, bloody and unmoving. \n\nHer body was the wrong size and the wrong shape. It wore the wrong clothing, but Sarah had to see her face before she could be certain, before she could breathe. The woman was dead. Her name was Lily or Lillian, Sarah was fairly sure. ",
        "\"You've been hit,\" Sarah heard a small voice say from behind her. It was whispered in a horrified awe. Sarah spun on her heels to once again take the uninjured, beautiful young woman into her arms. She hissed at the immense pain that flared in her shoulder and felt her legs go weak beneath her. \n\n\"Sit.\" Emma ordered. Sarah obeyed mainly from the inability to disobey. She folded her legs under her to soften the fall and sat staring up into watery, green eyes. \n\nEmma knelt in front of Sarah, first removing the woman's good arm from her uniform coat and then sliding it off the wounded side. The undershirt proved more difficult as its proper removal required both of Sarah's arms to go over her head. After a second of contemplation, Emma grabbed the shirt collar in both of her hands and with a ferocity Sarah had never seen in this small woman, tore it down the center. She removed it the same way she had the coat. \n\nThis wasn't exactly how Sarah had envisioned Emma stripping her, but she still felt her breathing fail as her bare chest was exposed to the small woman's probing gaze. But Emma's eyes were not on Sarah's small sized chest, but the bleeding wound in her shoulder. She needed to stop the bleeding or Sarah was going to pass out from blood loss. Her face was already concerningly pale and adrenaline was the only thing keeping her eyes from floating back in her head. \n\nEmma bundled the torn shirt into a wad, and pressed it firmly against the wound with the blood-soaked quarter against Sarah's flesh. She turned to the crowd that had gathered around them, \"How much farther to her uncle?\" \n\n\"An hour by trotting,\" one of Sarah's servants responded. \n\nEmma looked from the crowd to the bleeding woman and back, searching for someone to tell her what to do. One head, poking out above the others as if called, caught Emma's attention. \"Help me get her back on her horse,\" Emma ordered no one in particular, keeping her gaze fixed on the soft brown eyes of the mare as if she could somehow convey everything she needed in that single look. \n\nIt took three men to lift Sarah into the saddle and help Emma into place behind her. \n\nSarah could barely feel the wind against her face and in her hair, the rock of the saddle, tight with an extra person jammed in, or even the press of Emma's clothed body against her own bare back. Oh, how the tables have turned. The only feeling that held her to consciousness all while threatening to send her into oblivion was the burning of her shoulder where Emma was still gripping the soaking rag that had once been her shirt. \n\nSarah tried to hold onto enough consciousness to help Emma keep her in the saddle, but she could feel her head lolling and bouncing around on her shoulders. Each rock sent flares of pain out from her wound and black dots danced around from the edge of her vision in until the blackness had all but consumed her. \n\nScene 4 \n\nThey galloped until the mare was too tired, then walked until she could muster at least a lope. Emma had heard that a horse could die from exhaustion. Though the horse's life for Sarah's was a trade Emma was more than prepared to make, she was quickly learning that Sarah valued lives very differently from most masters. She would keep the horse alive for Sarah if both lives could be spared. \n\nEmma explained very little to the grey-haired man that came to the door after an even shorter explanation to the servant who answered the door. It was an hour or so before dawn and the manor had been silent when the trio had arrived: Emma, Sarah, and the horse Emma had taken to calling Angel. A doctor had been fetched and Sarah was resting comfortably, the bullet removed from her shoulder and the wound stitched shut, when the rest of the servants arrived with the dawn. They were welcomed in by Arthur Weatherly, who proved to be just as crazy as his niece, if not more. \n\nThough they'd ridden through the night, Sarah was the only one in the manor to sleep that day. The rest of the manor was abuzz with frantic activity. Defenses were prepped and manned, an impromptu council was created, and eventually beds were put together for the almost one hundred Bloodlands refugees. \n\nThe initial council contained Arthur, the Belmont butcher and stable master, two of the more boisterous women from other manors, and of course, Emma. Overnight, she had gone from disregarded to respected, ignored to venerated. Though the council contained six members, it was Arthur and Emma who made the real decisions. They would stay on the defensive, protect themselves and stay out of the battle. Emma had been resolute on their withdrawal, though no one seemed to truly want to go back into that nightmare. Arthur had pointed out with dry humorlessness that once the servants were all gone, the masters were likely to wipe each other out trying to save their riches and covet each other's lands. \n\nWhen she awoke, feeling about as good as the people around her who had been up for thirty-six hours straight, Sarah joined the council. She was furious to discover that they had done nothing to intervene in the carnage that was likely taking place. The day laborers would arrive tomorrow and were likely to be raised up, or rather cut down, as human sacrifices if Ranald's call to act quickly hadn't fully turned the families against each other past the point of needing more death. When her uncle asked what she expected them to do about it, Sarah's composure broke, though there hadn't been much to start with. \"This isn't the twelve hundreds anymore! Call the bloody constable. Have them arrested before they're all dead.\" \n\n\"You killed them too,\" Arthur objected, watching his niece wince at the truth. \n\n\"That was self-defense. And, Hell, I'll go to prison if it means the killing stops.\" Sarah said defiantly. \n\nAnd so, the constable was called, statements were taken and a team of officers set off into the early evening for the Bloodlands to see what was left. \n\nFeeling moderately safer, the inhabitants of the second Weatherly manor dispersed to the beds that had been set up, stumbling over their own feet in exhaustion. Sarah found Emma in the middle of the trudge, directing the masses who seemed to be unable to avoid walls without her direction. Sarah didn't interrupt, only wrapped her good arm around the small woman's waist and held her close as she continued to direct. Her right arm hung in a sling between their bodies. \n\nWhen the last barely conscious body had disappeared, Emma turned in Sarah's hold and happily accepted the kiss that was offered. \"You must be exhausted,\" Sarah said, pulling back just enough to speak. \n\n\"I have way too much of this pumping through my body right now.\" Emma replied, sweeping her arms around the room to indicate the people, the manor, the Bloodlands beyond, and the whole world most likely. \"And way too much of this,\" she added with a smile, pointing her finger back and forth between herself and Sarah. Seeing Sarah covered in her own blood had been the worst moment of Emma's life. She had never felt like a leader or thought she could be one, even when she was ordering the servants from the Belmont kitchen and forging the path to the river, until that moment. At that moment, she could have done anything just to keep Sarah in her life. Now she finally had the tall woman in her arms again and she didn't want to let go. \n\n\"You should try to sleep,\" Sarah said, brushing her fingers through Emma's tangled hair. \"I understand they got a bed for everyone, but you are more than welcome to stay with me.\" The offer came with a small smile that managed to be both shy and seductive. \n\n\"You want to sleep with me?\" Emma asked, understanding both connotations of the word. She knew she wanted it, her body was making that abundantly clear, though she wasn't sure she knew exactly what that entailed without the complementary set of body parts she was used to. Regardless, as with the dancing and the kissing, she was ready to learn and knew Sarah would be an excellent teacher. \n\nScene 5 \n\n\"Yes,\" Sarah breathed. She'd meant to say, 'It's an invitation, but the choice is yours,' but complex sentences were beyond her at the moment. \n\nEmma leaned in for another kiss, whispering just before their lips met, \"In that case, I'd like to try to sleep.\" \n\nWere she in top fighting form, Sarah would have lifted Emma into her arms and carried her to the bedroom. As it was, she took Emma's hand in her left one and jogged down the long hallway. She didn't want to drag Emma along and was happy to feel the woman running of her own volition to keep up and even outpace her. \n\nSarah used Emma's body to close the bedroom door behind them. Her hold was firm but gentle as she pressed the small woman against the wood with her own body, kissing her hungrily. Her left hand roamed Emma's body, eliciting soft moans as she squeezed first the woman's beautiful ass and then her perfect breasts. Each filled Sarah's hand perfectly and she bemoaned not being able to hold both at the same time. The woman wasn't wearing a bra (the dress she'd worn at the party hadn't needed or allowed for one) and Sarah could feel Emma's hard nipples through the thin cotton of her borrowed dress. Sarah shifted, placing her thigh between Emma's and began to rub against Emma's groin, slowly hiking the skirt of the servant's dress with each hump. \n\nSarah's tongue flicked out, wetting her lips and brushing against Emma's. Emma immediately opened her mouth to the welcome invasion and gave a throaty purr as Sarah's tongue tangled with her own. Sarah's tongue retreated, inviting Emma's to follow. She smiled further into the kiss as Emma did, deepening the kiss with each stroke of her tongue. \n\nEmma was turning to jelly against Sarah's body and as much fun as this was, Sarah wanted more of the continuous groans escaping Emma's mouth into hers. Putting the strain on her left shoulder to favor the right, Sarah pivoted and half tossed, half dragged her new lover the several paces to the large bed. \n\nA tiny gasp filled the room as Sarah worked her hand up Emma's thighs, bringing the hem of her dress with it. Emma lifted her hips automatically as Sarah reached them, inadvertently allowing Sarah to work the dress further up her body. Sarah leaned down to kiss the exposed flesh of Emma's stomach, raising goosebumps across the sensitive skin. \n\nEmma's shoulders came off the bed next, inviting Sarah to finish removing the dress and turn her attention to the flesh they had both been thinking about since it had been pressed against a thick wool suit what felt like years ago. Sarah didn't have to be asked. She pulled the dress off and immediately brought her lips to the straining nipples that now stood at attention on Emma's chest. \n\nThe small body under Sarah was on fire. Emma was sweating, panting, and moaning, and Sarah hadn't even gotten to the best part. None of the other women Sarah had been with had reacted this strongly to her touch and she was excited to see just how far she could take this beauty. \n\nSarah wrapped her left arm under and around Emma's heaving rib cage as her mouth went from one breast to the other, sucking, licking, and gently biting. All the while, she humped her hip against Emma's quickly moistening bloomers. When she'd delayed as long as she could bear and Emma had been worked into a clear frenzy, she used her grip on the small woman to lift her higher on the bed and focus on her next sensitive target. \n\nSarah was still fully clothed but that was how she always did it. The women she pleasured had no interest in seeing her body and some had even threatened to leave if she revealed any more of it than normal. \n\nNormally, Sarah would have supported her weight on her left arm and used her right to remove the last remaining barrier between herself and Emma. As it was, she pulled Emma's bloomers and panties down and off with her left hand and teeth, feeling no less sexy for her injury. She spread Emma's folds slowly, reveling in just how wet Emma was. Emma was gasping and bucking against Sarah's light ministrations, desperate for more and yet loving every moment of what she was already getting. Sarah wanted to drag the experience out longer, but Emma clearly had different ideas. \n\nShe's not like the others, Sarah reminded herself. She'll be here in the morning. She sent up yet another prayer that she was right. She didn't think she'd ever prayed so many times in such a short time before. If she's here in the morning I promise to pray every day, she thought, though she still hadn't decided who exactly the target of her promise was. \n\nSarah slipped a finger inside Emma's waiting, dripping pussy and grinned at the loud moan that escaped the woman's lips as her hips rose off the bed to meet her invader. Sarah and Emma quickly found a rhythm, the walls of Emma's pussy pulling Sarah's finger deeper as she thrust upwards to get more of it. Sarah slipped a second finger in and curled them, finding Emma's g-spot easily. She could feel Emma riding the knife's edge and knew the woman was about to cum. She wanted to make the last moment as intensely pleasurable as possible. It was by far the best part on her end as well. The moment she put every ounce of effort into her partner's climax and was rewarded by the obvious effect of her work. \n\nAs Emma's orgasm crested, Sarah brought her lips down to Emma's clit, trying not to rest too much of her weight on the woman's legs. She sucked the hard nub into her mouth and began to lap at it as quickly as she could while corkscrewing her fingers inside the thrashing, bucking woman. Her right hand could do this faster and harder, but her left was proving up to the task. \n\n\"Sarah!\" It came out as a scream and was followed by moan after moan of her name as Emma rode Sarah's face and her orgasm. Sarah loved it when they said her name. It happened so rarely. And, the way Emma said it and kept saying it was more like a mantra than an accidental recognition. All the women had wanted what Sarah did to them, but Emma actually wanted Sarah to be the one doing it. \n\nSarah continued to lap at Emma's clit, though she stilled her fingers. She wasn't sure she'd be able to move them anyway with the death grip Emma's body had on them. When Emma's moans turned to heavy breathing, Sarah pulled back, smiling down at the grinning woman who looked in utter bliss. She withdrew her fingers slowly, earning a whimper and momentary pout from Emma. She knew she shouldn't but Sarah couldn't hold back. She dipped her head to kiss that adorable face. \n\nArms immediately wrapped around Sarah's head pulling her more deeply into the kiss. She wants this, Sarah half reminded herself, half realized in joyous shock. But Emma had far more she wanted. She pushed up to a seated position, looking at the kneeling woman in front of her, with dilated pupils and bright red cheeks. With as much care as her rush would allow, Emma tore the front of Sarah's shirt open, unbuttoning what released easily and popping the stitching on the buttons that didn't. \n\nFor a moment, all Sarah could do was stare down at what Emma was doing in confusion and excitement. Emma pushed Sarah's left arm out of her way, then brushed the shirt aside to wrap her lips around Sarah's small, pert breast. \"Oh God,\" Sarah moaned as Emma rolled her tongue over the hard nipple over and over. Her other breast ached from want, but she couldn't get to it. Her frustrated groan communicated her need enough. Emma licked her finger tips then slipped her left hand under the right side of Sarah's shirt to reach and tease the nipple on that side without bumping or moving Sarah's arm too much. Sarah arched into the touch, straining the damaged muscles of her shoulder, but she didn't care. Her whole body seemed to ache with pain and pleasure and the drive for more. \n\nThe hint of pain in Sarah's groans was not lost on Emma. She twisted, moving her mouth temporarily back to Sarah's lips as she forced the woman onto her back on the bed. Once Sarah was prone, Emma moved back to her chest. Sarah had always loved other women's breast but never found her own very exciting. She had always focused her personal attention between her legs. But, what Emma was doing was all kinds of exciting. \n\nWithout removing her lips from Sarah's skin, Emma reached down utilizing the fact she had two capable hands to unbutton Sarah's trousers and push them down strong, toned thighs along with her soaking panties. Sarah hadn't considered herself to be a virgin for the last ten years. She'd had sex with over two dozen women in that time, most of them multiple times. But as Emma began to slowly run her fingers up and down the slick lips of Sarah's pussy, the reality of her virginity struck her. She'd had sex with many women but they'd never actually had sex with her. \n\nShe was the Bloodlands' resident lesbian. Most people blamed her lack of a mother or mother figure growing up for her sexual deviance. When she was young, her peers had tried to pressure and then to beat her sexuality out of her. The death of her father when she was sixteen had left her the head of the Weatherly household and all of a sudden she was the sole heir of the Bloodlands' second largest fortune after Ranald Belmont. Her peers, or more correctly the parents of her peers, realized that if she decided the fertility of her land wasn't worth the abuse, she would take her fortune with her and likely go live with her uncle. That was unacceptable. What was worse, she clearly had no interest in marrying any of the master's sons to integrate her fortune with another family. Their best chance was to make her want to stay there and single until she passed away and left her land and fortune unclaimed. \n\nBeing the local pariah had its benefits, but the best part was the fascination that came with being one of a kind. While none of them would ever admit it to their fathers or husbands, plenty of the local women wanted to know what Sarah did behind closed doors. Her first lover had been Rachel Portinghouse when she was eighteen. Sarah was to keep her clothing on, Rachel was very clear about that. She could do \"whatever it is you lesbians do\" with Rachel's body, but should expect none in return. Rachel wasn't a lesbian after all. She'd threatened Sarah with death if she told anyone, but apparently the nondisclosure clause was one-sided because Sarah got three more offers that year and had buried her face between the legs of a young woman from just about every major family in the Bloodlands by the time she was twenty-three. \n\nIt wasn't a bad gig in Sarah's opinion. She liked women's bodies even if she didn't like the women in them. She also liked the way she made them moan and scream. She knew she was good, not just from the sounds they made, but the fact that she rarely went a month without someone showing up at her door. Every time was the same. She'd bring them to a raging orgasm, they'd get dressed and leave, and then she would get herself off remembering the feel of their skin, the movements of their bodies, the sound of their cries. As she reached the crest of her orgasm, she'd flick out her tongue, tasting them on her lips and pump her fingers inside herself hard and deep, remembering the sound of her name on their lips or inventing it more often than not. \n\nHer own fingers were nothing like the ones currently spreading her open. Emma's were small and dexterous and though she'd never been with another woman, she seemed to know exactly how to touch Sarah. Emma slid first one and then two fingers inside Sarah, moaning around Sarah's left breast in response to Sarah's wetness and guttural groan of pleasure. \n\n\"P...please,\" Sarah begged, not entirely sure what she was begging for except that Emma not stop. \n\nEmma took the plea as the desire for her tongue to move lower. Sarah gave a small cry as Emma released her nipple with a soft smack of her lips. But she didn't miss Emma's mouth long. \"Oh, bloody Hell,\" Sarah moaned as Emma flicked her tongue across her inflamed clit. If this was what she had given all those women all those years, part of her wanted to go back and make them pay her back. Her self-made orgasms had been good and, without comparison, she'd never realized just how much they paled in comparison. Then again, none of those women could have given Sarah what Emma was giving her. The passion and drive was clear in every lap of Emma's tongue, every pump of her fingers. ",
        "Up to this point, Emma had been replicating what she'd received, but encouraged by Sarah's writhing, she went off book. She swapped her tongue and fingers, driving her tongue between Sarah's folds into her pussy as deeply as she could reach. Her fingers, soaked with Sarah's slick juices, went to Sarah's clit, rubbing it in circles one direction and then the other. \n\nSarah's orgasm was racing up on her and she knew it was going to be the biggest she'd ever had. She wanted to hold off as long as she could, enjoy this overpowering pleasure for hours, but she had no power to hold back the freight train that was her climax. \"Emma,\" Sarah moaned. She'd started to say Emma's name to warn her what was coming...her, but once the word was out, all she could do was call her lover's name over and over as she rose higher and higher. \n\n\"Sarah,\" Emma gasped, pulling her tongue back long enough to utter the name before driving her tongue deep again and finding that spot Sarah had hit so easily. \n\nIf hitting her g-spot hadn't sent Sarah over the edge, hearing her name would have. She flicked out her tongue, still tasting Emma on her lips and it was better than any time she'd done it before. Sarah was sure she was covering this beautiful woman's face with her cum, but Emma didn't seem to mind. On the contrary, she was lapping at Sarah's pussy and rubbing Sarah's clit as if it were the pump supplying her mouth with the blessed liquid. And her orgasm kept going. Each time she thought she'd crested the final wave, another would hit her. Her self-made orgasms had never lasted more than a second or two. It was hard to keep herself going while coming apart, but that was exactly what Emma seemed Hell bent on doing. \n\nAs a final, insurmountable wave hit Sarah, she sat bolt upright, inadvertently pulling herself from Emma's face. She gasped for air before falling back onto the mattress, tears streaming from eyes that stared blankly at the ceiling. Her shoulder burned again, but she barely noticed. She was lost. Unable to focus on anything but her breathing just to keep doing it. The tingling and thudding of her orgasm was still racing through every nerve as if she'd never truly come down from the cloud she'd landed on. \n\nThe first thing Sarah became aware of was Emma's face, her beautiful, glistening face looking down at her. Emma's expression was concerned and she was asking Sarah something, but the words didn't seem to form coherent sentences. A giant grin spread across Sarah's face as she watched the woman who had brought her this much bliss. \n\n\"Are you okay?\" Emma asked again, some of the fear in her face dissipating with Sarah's goofy grin. \n\n\"I've never been this okay in my life,\" Sarah breathed. Emma returned the grin and ducked her head to kiss Sarah. For the first time, Sarah tasted herself on another woman's lips and felt the buzzing in her body intensify for a second before returning to the dull rumble it had become. \n\nEmma watched her lover for another minute before her grin lifted to one side. \"You know, how are we supposed to sleep together when you're on top of the covers, huh?\" \n\nSarah chuckled. She'll be here in the morning, she reminded herself again. Her chest ached in a way that had nothing to do with her shoulder. She let Emma help her slide under the sheets and remove the torn blouse from her damaged arm. After tossing the shirt aside, Emma slipped under the covers with her lover, curling up on Sarah's left side with a contented sigh. She was asleep before the end of the sound. \n\nSarah pulled the sleeping woman tighter against her. No, she had never been this okay in her life. \n\nScene 6 \n\nSarah woke to the wonderful and foreign feel of a body in bed next to her. A naked body, twined with her own. Emma's body. Thank you, Sarah prayed. She'd made a promise after all and thanks could be a prayer, right? She supposed there had to be more to praying than just asking. That seemed rude and shouldn't there be a prayer for when your prayers were answered. She pulled the sleeping woman in to place a short kiss on her forehead. Emma mumbled happily in her sleep, but showed no signs of waking. So, Sarah simply repositioned the small woman against her body and thought. \n\nThe first thoughts to play through her mind were memories of the night before, of Emma's body, what she'd done to that body, and what it had done to her. Those thoughts, however, were going to get Sarah all sorts of horny and that was not what Emma needed right now. The poor woman needed sleep and lots of it. \n\nSo, Sarah turned her thoughts to the people outside this room. There was still so much that had to be done. The constables would have raided the Bloodlands last night and they would likely return today to inform the Weatherlys of the fate of the previous masters. The constables had given no indication that they planned to arrest Sarah for her part in the blood bath that was likely raging across her homeland. Though to be honest, they showed little indication that they fully believed her story either. Would they ride up on the eight dead bodies Sarah and the servants had killed or had the other masters already come to retrieve their dead? Had her kills already become fertilizer? \n\nThose thoughts were simply getting too dark. She kissed the top of Emma's head again and turned to the slightly lighter and much more difficult topic of what they were going to do now. Assuming she didn't go to prison, and assuming the heads of the Bloodlands did, that left her to solve seven thousand acres of untillable, infertile soil. \n\n\"Fertilizer!\" Sarah blurted, jostling the woman in her arm. \n\n\"Huh?\" Emma groaned, rolling over and trying to bury her face in the crook of Sarah's arm to escape the sounds that were waking her up. \n\n\"In my entire life, I never saw my father use fertilizer nor have I used it since he died. None of the families have. The soil didn't need it. We've never done shit for the land, literally. So when the 'blood magic' or whatever the Hell you want to call this fey thing runs out, the land has nothing going for it. The only reason I even know about fertilizer is reading about it in Ranald's library.\" Sarah was sitting up now, ready to leap from the bed and go yell her findings to the world. Well, maybe put on clothes and then announce her findings to the world. \n\n\"What kind of idiot doesn't fertilize?\" Emma mumbled. Sarah couldn't help but smile down at the woman who never would have said that if she were fully awake. \n\n\"Rich asshole idiots who can murder once a century rather than touch poop once a season.\" Sarah replied. \n\nEmma opened her eyes slowly, Sarah's continued talking was making it hard for her to stay asleep and words like asshole and murder were making the task impossible. \n\nSarah continued, \"Of course animal blood didn't work because it's not actually fertilizer, but I'll bet you anything those idiots never even tried real fertilizer. That's why Ranald said we don't have the knowledge or the tools to do what the fey do. Not because we need magic, but because without magic we'd actually have to work hard. Who uses the mundane stuff when you have magic.\" \n\n\"Wait,\" Emma said, finally catching up with the conversation. \"You think we can fix the Bloodlands with the same techniques my family used on the farm growing up?\" \n\nA bright and scheming smile spread across Sarah's face, \"With my book knowledge and your actual knowledge, yes, I think we can.\" \n\nThe day blurred by as the crowded house tried to get everything done and find something to do all at the same time. These hands had so rarely been idle and the kitchen could only have so many cooks. In this case, the saying held true literally and the house was soon completely out of food. Too many people were doing exactly what they did best. \n\nA funeral was held for Lily in the morning and every servant attended. Morning was the time for the innocent to be laid to rest. Those who actually knew her gave a short eulogy while those who had seen her die performed the cremation ritual. Most had never seen someone die and it was uncle Arthur who instructed the process. He had been there when his brother Tim Weatherly died. They'd been hunting when he'd stepped on a nest of ground hornets and been stung to death. Arthur had heard the screaming and run to find Tim, but the hornets had moved on by the time he reached his dying brother. Tim left everything to Sarah as his dying wish and Arthur respected his brother's wishes regardless of his ability to keep silent and inherit the Bloodlands' fertile soil as the next male heir. As far as Sarah could tell, her uncle had never bemoaned his lesser wealth and had treated Sarah as a daughter since that day. \n\nSarah couldn't help but think of her father's funeral as she watched the flames climb up the wooden pyre to lick at the body resting upon it. She wondered if the sixteen-year-old girl who had attended that funeral could have done what she had done only two nights before. Glancing to her right, Sarah looked at the beautiful woman she'd taken to bed the night before and wondered if sixteen-year-old Sarah could have imagined that night either. This is a funeral, Sarah, getting horny is so far from okay. \n\nAfter the funeral feast, of which there was plenty, Sarah and Emma interviewed all of the servants about their knowledge of fertilizer and their master's use of it. As predicted, the only experience they had with any land preparation besides plowing and dropping seeds in the dirt came from agricultural work before becoming a servant in the Bloodlands. And it wasn't just fertilizer. The masters had never used any of the techniques Sarah had read about or Emma knew from direct experience. No irrigation, no natural pesticides, no crop rotation. \n\nMuch as this gave the Bloodlands a long way to go, it also meant the land had a great deal to gain from simple practices. 'We can actually do this,' Sarah wanted to scream, though she supposed it was not quite the right tone for just after a funeral, violent attack, and drying up of thousands of acres. \n\nThe day ended with a visit from the constables. Of the 15 main Bloodlands' families aside from Sarah, two had been completely killed off. Another five were left with only orphans and widows. Of the remaining eight manors, all living male heirs were in prison for the crimes of murder and desecration of the dead. There were a small scattering dead and injured among the minor families with names Sarah didn't recognize. No head of household of a major family remained free and alive aside from Sarah. \n\nThere was no precedent for a female mayor, but there was precedent for ending feuds. Whistleblowers were incentivized to speak out and entrusted to preserve the peace with the power to do exactly that. Sarah Weatherly was the new mayor of the Bloodlands. The fortunes of the dead families would be added to her own, the land was hers to redistribute, and the families, especially the orphans, hers to provide for. The constables would keep the peace until Miss Weatherly was ready to take her new position and hopefully save a dead countryside. \n\nSarah was glad she had a plan and a vision for the Bloodlands. The responsibility dropped on her shoulders was immense. Again, she was reminded of the sixteen-year-old girl who had suddenly been in charge of an entire manor: servants, planting and harvesting, financial management, social status management. Though she supposed there hadn't been a lot of the last item. Part of her felt like that child again, out of her depth and desperately trying not to drown under the pressure. At least then she'd only had her own life at risk. Now that was far from true. \n\nThat night, Sarah took Emma to her bedroom again. Every nerve buzzed with the desire that had been building all day simply being in the same room as her lover. The stress and excitement had only built upon the fever. But their first night had been fast and hungry. Tonight, she wanted to truly get to know Emma, in the personal as well as Biblical sense. \n\nSarah put a record on the phonograph and pulled Emma into a slow sensual dance around the spacious bedroom. Together they recreated their first night dancing and making out without the audience to judge wandering hands. They stripped each other slowly, kissing every inch of skin as it was exposed before returning to their dancing. Sarah marveled at the feel of Emma's naked body against hers as she pulled Emma in tight to spin around the room. She loved feeling Emma's hard nipples against her stomach and the brush of Emma's shoulders against her own breasts. \n\nWhen their mouths weren't too busy exploring, Emma described the life she'd lived on her family's small farm, while Sarah told Emma about her father and the adventures the two had shared. It had been just the two of them, Sarah and her father, for most of her life and her favorite life memories were all at his side...until now she supposed, though it seemed wrong to classify what had taken place over the last few days as positive life memories. \n\nAs the record ended, Emma pushed Sarah backwards onto the bed. With Sarah on her back to give her shoulder what respite she would allow it, Emma laid herself across the taller woman and kissed her, slowly at first, but with rising vigor. The feeling of Emma's breasts pushing into her own, their nipples rubbing with every heated lurch forward was quickly driving Sarah mad. She lifted her lower body with the intention of rubbing her thigh between Emma's legs, but met her half way as Emma sought the same thing. Sarah say stars as their legs slipped together to brush clit on clit. Emma moaned and bucked seeking more of the stimulus and Sarah reacted with her own desperate humps. Emma leaned back, wrapping her legs around Sarah's torso, careful to not hit her shoulder, and began to ride Sarah's mound the way she had ridden her face the night before. \n\nEach woman tried to hold off her orgasm as long as possible. Sarah could feel herself riding the edge of another powerful climax but didn't want to fall alone. \"Emma, please,\" Sarah moaned, not sure how to communicate what she wanted. \n\nWords were unnecessary. Emma ground hard gasping, \"Come with me!\" Sarah did as she was told, her orgasm all the better for the feeling of Emma spasming wetly against her. \n\nEmma collapsed forward onto Sarah's left side, kissing her deeply with a probing tongue. Sarah's hand wandered up and down Emma's side, indecisive about whether it was Emma's butt or breast that she wanted to hold more. She was leaving a trail of goosebumps with every pass and was surprised to realize not only how turned on Emma was getting, but how quickly she was getting hot and bothered as well. \n\nOn her next pass downwards, Sarah scooped forward instead of back, bringing her skilled fingers between Emma's legs to roll the woman's clit between her thumb and forefinger. It was still slick from the combination of her and Emma's orgasms and slipped easily in Sarah's loose hold. Emma was whimpering and arching her back in search of more pressure. Keeping her thumb in place, Sarah extended her wrist to slip three fingers inside Emma's waiting pussy. Emma was bucking hard now, making up for Sarah's odd angle by fucking herself with Sarah's hand. \n\nSarah leaned forward, sucking Emma's breast into her mouth as far as she could get it and smiled around it as Emma's body first gripped and then flooded her lover's hand. \n\nThe evening's slow build up meant both women were more than ready to continue. Emma had every intention of licking Sarah to another explosive climax, but was more than happy when Sarah refused to allow her access unless she was granted the same access at the same time. They fought to bring the other to more orgasms in an erotic competition until they were too tired and satisfied to do anything but collapse into each other's arms. \n\nThe third day since escaping death and murder, Sarah woke with a sense of determination and direction. She'd spoken with her uncle about her plans after the constables had left and knew that the sooner she put her plans into action, the sooner the Bloodlands could attempt to find normality and humanity again. \n\nShe gave the beautiful young woman in her arms a kiss and left the bed to dress and make final preparations. She would never get tired of waking up with Emma next to her, but she hoped she would get a chance to try. \n\nSarah left her bedroom in search of her uncle. He would know the process for retitling land and could also help her put together a training on how to be a new head of household. She didn't get far before she heard a female voice call out to her. Cynthia, or was it Sydney...Cindy, she was working on learning all of their names because it showed she valued them as people, which continued to take the servants by surprise. Who could blame them after they'd all just found out their masters planned to kill them. \n\nCindy took a deep breath and plunged into her clearly pre-planned speech. \"I want to offer my services,\" She said pointing her finger over her shoulder at the bedroom Sarah had just left. \"Emma is our leader, but it isn't fair that she should have to take all the burden of repaying you for your protection and kindness. She is exhausted. Can't you see that? It's her way of keeping us safe, but she doesn't have to do it on her own. Let someone else take her place. I know I'm not as beautiful, but I could be so good to you.\" \n\n\"Wha\u2014\" was all Sarah could get out before Cindy was on her, wrapping her arms around Sarah's head and pulling her into a wet, sloppy kiss. She was pulling Sarah's hair painfully and using far more teeth and tongue than seemed necessary in isolation let alone together. Her whole body gyrated against Sarah's in a way that could have been erotic if not so over the top. \n\nSarah's good hand ran quickly up Cindy's back, trying to get a good hand hold to pull the woman off. Grabbing a fistful of hair, Sarah yanked back as a door slammed in the background. Sarah glanced over Cindy's shoulder to see Emma staring down the hall at her, shocked. \n\nFor a moment, Sarah rolled Cindy's words through her head. Burden of repayment. It made a lot of sense from what she knew of Emma. The woman had risked sacrificing her life multiple times to protect the other servants. What was giving her body after an act like that? Sarah had thought she'd actually had something here, but she supposed she'd only been kidding herself, blinded by passion to believe that maybe, perhaps Emma could feel about her the way she felt about Emma. \n\nThe look of betrayal in Emma's eyes made Sarah stop short in her self-berating. She watched as a single tear ran down Emma's cheek. \n\nSarah wasn't the only one to see it. \"See what you're doing to her,\" Cindy said, jabbing her finger at Emma as if Sarah had caused this, not Cindy. Taken out of context, Sarah could tell this was only making the situation that much worse. \n\n\"Leave,\" she told Cindy angrily. She wanted to say so much more, but Cindy was not her concern right now. Emma was. Cindy looked confused and a little scared. It was the first time Miss Weatherly had raised her voice at any of the servants, but it didn't mean she didn't have the ability to command with the same air of power and the edge of a threat. Cindy left without argument. \n\n\"What? So, this is what it's been about this whole time. Didn't want us dead because you couldn't get what it was you wanted from the servants if they were bled-dry corpses. You going to tell me to leave next? The masters were right. You are disgusting.\" Emma wiped at the tears now streaming freely down her cheeks. \n\nSarah's heart was in her throat and racing faster than she could manage. If she'd still had any question of Emma's intentions after her outburst, the look in Emma's eyes told her the answer. She saw the same look of rejection in Emma that she had felt before the small woman began speaking. She asked anyway, hoping it would clarify the situation for Emma as much as for herself, \"Are you only sleeping with me because you think you owe me for saving everyone?\" ",
        "\"How could you even ask that?\" Emma shot back, backing away and looking as though she was about to run. \n\n\"That's what Cindy thought,\" Sarah said as explanation for the question, for the kiss, for everything. \n\n\"And that's all it took?\" Emma asked. When Sarah's mouth opened but nothing came out, Emma turned and ran. Sarah's calls for her to wait, to listen went unheeded. \n\nSarah wanted to run after her, to explain everything, to tell her how she felt, but she didn't even know what she would say. That had been all it took. Not for Sarah to turn to other prospects as Emma thought, but for Sarah to question Emma's intentions. Was she so without faith in Emma that Cindy's words were all it took for her to doubt the woman. Sure, it was Sarah's doubt in herself and her own worth that had manifested itself, but there was no denying that in the end it was Emma she had questioned just as much as herself. She'd had something wonderful and she'd let her fear get in the way of happiness. \n\nDisgusting. Emma had called her disgusting. And at the moment she felt every bit the part. She fled in the opposite direction. She found uncle Arthur's room and had the door closed before the tears came. Tears for Emma, tears for Lily, for the men she'd killed and watch be killed, for the men, women, and children of the Bloodlands who had died, for the immense pressure resting on her shoulders to fix all of it, and for years of self-doubt and abuse she'd endured as if it didn't bother her. \n\nUncle Arthur held her and consoled her until she'd confessed every sin and fear to him. She imagined it was far more information than he'd ever really wanted to know about his brother's only daughter, a girl he thought of as his own child, but he took it all in great stead. Much of it he knew of course, it was the details that she had not spared that she'd expected to make him pull away. When she finished her story, he brushed the tears from her cheeks and patted her head. \"Poppet, you are the most capable and loving woman I have ever met. You will solve this with the same unerring compassion and intelligence that you bring to every aspect of your life. You have a strong head on your shoulders, a great heart in your chest, and a good vision for the Bloodlands. Go share those with them. Tell them what you think and how you feel and if she feels about you the way I think she does, everything will come together.\" \n\nSarah gave a small smile and rubbed at her red eyes. How did he always know the right thing to say? She hoped it ran in the family, because she had a lot to say. \n\nWith Arthur's help, Sarah called all the servants together into the front foyer. Standing on the entry stairs, she could just barely see every servant but her eyes kept going back to the short woman dwarfed by the crowd, who refused to meet her gaze. \n\n\"I have several announcements,\" Sarah said in a voice she hoped was more leader than master. \"First, I have been made the new mayor of the Bloodlands and am now responsible for the land and the people who rely on it. I have a plan to return the land to its former glory without any bloodshed. In a word: fertilizer, but more on that later. Many of the families were lost in the violence of a few nights ago and all have been left without a head of household. This brings me to my second point. The land of the deceased families as well as the Fallows will be given to you. Couples will receive their own plots while larger plots will be given to what are called cooperatives, or groups of people who share in the responsibility and profits of the land. You will be trained on how to be a head of a Bloodlands' family as will the new heads of the old families. You do not have to stay here and I will understand if you never want to set foot on the Bloodlands again. But if you do stay, if you accept a grant of land, you will be expected to help restore peace and goodwill to a destroyed community. In exchange for this land, I expect two things of you. One, that you will take care of each other and the people that were once your masters. Innocent children have been left orphans and families have been torn apart. Two, that you will give me your loyalty. I need a constituent base that will support me and I have no idea what kind of hate I will be returning to from the remaining families of the Bloodlands. You owe me nothing else beyond those two things: loyalty to me and care for each other if you stay, which brings me to my third and final announcement.\" \n\nSarah took a deep breath and focused on the woman who still refused to meet her gaze. \"It has been brought to my attention that some of you think my actions with Miss Emma have been an effort to obtain payment for my services to you. None of you owe me anything, least of all Emma. I have been sleeping with her because I love her and will continue to love her whether she returns to the Bloodlands or not. The choice is hers just as it is all of yours.\" \n\nEmma's green gaze rose to meet Sarah's soft brown eyes. Despite the fact that the whole room was looking from one woman to the other, Sarah felt as if it were just the two of them again. \"I love you,\" she said, putting every ounce of herself into those three words. \"I was scared. I've never loved anyone, never been loved by anyone. There's only you.\" \n\nA whole new stream of tears had started down Emma's cheeks. She crossed the room, servants stepping aside to let her past. She climbed the stairs until she was at Sarah's level. \"No one is loved by you, but I am. No one loves you, but I do.\" Emma adapted the lines from after their first kiss as best she could. \"I love you Sarah Weatherly.\" \n\nThe two kissed to the cheers and hoots of the crowd gathered below them. Anywhere Sarah went, Emma would follow her. She'd be her right-hand woman. They had seven thousand acres to save after all and all the shit that came with it. \n\nEpilogue: \n\nEmma and Sarah's carriage rolled up to the small farm cottage. It was much smaller than Emma remembered, though she supposed age and something grand to compare it to, did that to the house you grew up in. The roof was old and should have been replaced the last time she was here. The fields looked good, Emma was happy to see. There wasn't a lot of land, a dozen acres or so but it was farmed with hours of love and devotion. \n\n\"Emmy!\" A small voice called from the door of the chicken house. Sophie would be ten now. The last time Emma had seen her she'd been seven and had just reached Emma's hip in height. The girl bolted through the fenced in front yard, sending chickens squawking and flapping to get out of her way. She threw open the front gate, but turned to close it behind her and make sure the catch was in place. Even if the fields were on fire, you locked the gate behind you to keep the chickens in and any other critters out. Sophie ran the rest of the way to Emma and leapt into her arms to be swung around in a laughing, squealing hug. \n\n\"Can this really be my Soph?\" Emma asked, gently squeezing Sophie's nose with a honking noise. \"You're so big.\" She rested the girl on her hip, carrying her towards the house despite the fact that she was about two-thirds Emma's size. \n\nSarah hurried forward and got the gate for them so Emma could keep both hands under Sophie as she walked. She was sure to close the gate again when the three had passed through, even snagging a chicken with a death wish as it tried to get by. \"Not on my watch,\" she chuckled letting the hen go once she was sure the gate was locked again. \n\nEmma glanced across the small yard, struck by how little things had changed. It seemed everything outside of this little patch had gone to Hell and back, but somehow her memories and reality matched in this one piece of Earth. \n\nAn old brown dog, lay next to the cottage door. He lifted an eyelid to consider the intruders and wagged his tail in recognition of Emma. \"Good boy,\" she said giving him the same soft welcome she always had. She was sad to think that he probably won't be here the next time she came by. Certainly not if coming by was as rare as it had been the last almost nine years. \n\nHer mother and father met the trio at the door. Emma had sent them a letter telling them she was coming. She sent a letter along with a bit of money every couple months. She'd made sure to get one sent just after returning to the Bloodlands with Sarah. News spread quickly even over such distances and she hoped her letter would reach her parents before news of what had gone down. Her parents rarely sent a reply, but that letter had received a lengthy one, asking Emma to come home and leave that terrible place. Emma had tried to explain some of why she couldn't leave. She'd mentioned Sarah, but had left out the important details. That had been nearly ten months ago. She hoped to break the news to them in person. Her parents were practical but very traditional and she had no idea how they would take fact that their daughter was the lover of a female mayor. \n\nEmma had warned Sarah that her parents might not be especially welcoming. They would be suspicious of her for her wealth and status long before they found out about any sort of \"indiscretions.\" Sarah brushed off the warning though Emma could sense the nervousness in her lover over the whole journey to the small farmhouse. \n\nThe reason Emma and Sarah had given for their visit was a tutorial on good farming practices. The Bloodlands had come a long way with what Emma and Sarah could piece together, but the new planting season was upon them and they needed more if they wanted to keep the Bloodlands' families happy and healthy. Emma's family had passed down that knowledge from generation to generation while Sarah's ancestors were killing each other. \n\nAfter introductions, in which 'Master Weatherly' told Emma's family to call her Sarah and received skeptical looks, Jerome and his two youngest sons led Sarah through the fields describing each step in the cultivation process from pre-planting to post-harvest. Emma hung back with Sophie and her mother, Anne. She wanted to hear about her brother and sister who were now each married and living off in other provinces and to reassure her mother that the Bloodlands were a safe place where she needed to stay. Jerome might be the head of the household, but Emma knew who made the important decisions about the family. \n\nSarah and the male members of Emma's family returned just as Emma's conversation with her mother had reached the subject of the odd, tall woman. \"She's brilliant, mama.\" Emma said, knowing Sarah could hear her. \"She saved all of the servants when the masters planned to kill us. She risked her life to preserve ours and then when she became mayor she distributed the lands, enforcing peace and equality among former servants and masters.\" \n\n\"She gives me all the credit, but it was Emma who saved everyone that night, including me,\" Sarah objected. She took the chair that Anne offered and sipped from the glass of water Sophie brought her. \"I oversee seven thousand acres. I govern fifty-eight households. I have the largest fortune among them, almost equal to all fifty-eight combined.\" Sarah said matter-of-factly. \"With the farming techniques you have shared with me as well as those I have read about, the Bloodlands will be some of the most profitable in the province. With my land plus the dues paid by the households under my mayorship I will make more money than any other mayor in the province.\" \n\nOh my God, Sarah, what are you doing? Please shut up, just please shut up! Things had been going so well. Okay, no they'd been quite mediocre, but her family had finally stopped saying \"Sarah\" as if it were a foreign word they were afraid of mispronouncing. She'd warned Sarah that money and status would make her family uncomfortable and now the woman seemed to be doing everything she could to rub those two things in their faces. She was trying to stare her lover down. Get her attention just enough to flash her a 'stop it!' look. But, Sarah made no indication of stopping any time soon. \n\n\"My position gives me the ability to pass local laws and regulations as well. I may also call upon a small standing army pulled from the families under me as well as provided by the province in exchange for the taxes I pay every year.\" Sarah paused and everyone seemed to squirm uncomfortably in their seats, especially Emma. \n\nSarah took a deep breath and despite Emma's silent pleading opened her mouth again. \"I'm sorry if it was rude for me to say any or all of that, but in my culture when someone wants to marry a woman and get her father's blessing, they have to prove that they can care for and protect the woman. I have the wealth and the power to do just that.\" Sarah didn't pause, clearly not wanting anyone else to get a word in before she presented her full case. \"I understand that yours is a dowry culture. Therefore, I would like to offer you fifty acres and fourteen cows for your daughter's hand in marriage.\" \n\nFor a slow count of three, the whole household just stared at Sarah. Emma wasn't sure she was even breathing. Finally, Anne spoke, her voice and expression full of utter confusion. \"Can you do that?\" \n\n\"Which part?\" Sarah asked, she looked completely calm, though Emma could see her rubbing sweaty palms on her trousers in slow rhythmic circles. \"The dowry or can I marry her?\" \n\n\"Both.\" Jerome answered. \n\n\"Yes, to both.\" Sarah answered, the circles on her trousers becoming slow squeezing. \"I have the assets to give. The Bloodlands aren't as fertile as yours, but with a little time, attention, and know-how they'll get there quickly. And, as mayor I am allowed to change any local law as long as it doesn't contradict provincial law. The Bloodlands may not allow marriage between a master and a servant or between two women, but the province has no such laws.\" \n\nProbably because they never thought it would come up, Emma thought, surprising herself that she was able to process that when she was still struggling to wrap her mind around one simple fact. \"You want to marry me?\" \n\n\"Yes,\" Sarah breathed. This time she didn't skip the part she should have said when she invited Emma into her bed for the first time. \"It's an invitation, but the choice is yours.\" She turned to Jerome, \"And yours.\" Technically she had the power to marry Emma with or without their blessing or acceptance of her dowry, but Emma was sure that was not how Sarah wanted to do it. She wondered exactly how long Sarah had planned to make this visit a marriage proposal. Probably since she had suggested the farm tutorial a couple months prior. \n\nJerome, Anne, and Emma's siblings were still staring at Sarah with slightly gaping mouths. Emma figured Sarah must be getting used to it by this point. \"I'm only worth about two cows, Sarah.\" Emma whispered trying to explain that Sarah's gender and position weren't the only things making her family look like a tray of drowning fish. \n\n\"No, honey,\" Sarah corrected, shaking her head, \"You are worth more than every cow in the world.\" \n\nEmma gave a small, tearful smile. Sarah hadn't picked fourteen cows and fifty acres because it was what she could afford or because it was how much she thought she needed or even because she thought it was the norm. Sarah had picked what she felt was the highest amount that wouldn't make Emma's family drastically uncomfortable. She'd missed her mark by a fair margin. \n\n\"I love you,\" Emma whispered, drawn to Sarah. She rose from her chair to close the foot or so of space between them. \n\n\"I love you too,\" Sarah whispered, closing the last of the distance between their lips. \n\nEmma pulled back after a second, realizing that she was kissing her lover in front of her family. Even if the woman was her fianc\u00e9, or hopefully so, it seemed like an inappropriate thing to do at the family dinner table. \n\n\"Say yes,\" Emma heard her mother say almost under her breath. \n\n\"Wh-what?\" Jerome stammered, looking from his wife to his daughter and back. \n\n\"Say yes, Jerome.\" Anne repeated. \"Look at them.\" \n\nEmma was pretty sure her father was looking at them and didn't think it was helping. \n\n\"I've never seen Emma so happy in her life.\" Anne continued. \"It's not about the dowry or anything else about this woman. It's about that look right there.\" Anne was pointing at Emma's face where Emma was sure she had a broad grin, passion flushed cheeks, and eyes that burned with love. \"Say yes.\" Anne said for a third time. \n\nThis time, Jerome did as his wife instructed. \"Yes.\" \n\nEmma ran to her father to hug him and then her mother for a much longer embrace. \n\nA small brunette girl danced up to Sarah and drew everyone's smile as she asked, \"Does this mean you're going to be my sister too?\" \n\n\"Yes,\" Sarah laughed, leaning down to the girl's level. \"As long as that's okay with you.\" \n\n\"Will you bring Emma around more often?\" Sophie asked. \n\nSarah seemed to take the question with full seriousness. She held out her right hand to shake and said, \"I promise.\" \n\n\"Good, then I approve.\" Sophie said, taking Sarah's hand in her own and giving it a vigorous shake. \n\nSarah looked up from one sister to the other and smiled that bright, brilliant smile. Emma didn't think there was anything she didn't love about that woman."
    ],
    "authorname": "Homophilic_LadyJ",
    "tags": [
        "lesbian",
        "lesbian sex",
        "lesbian romance",
        "oral",
        "cunnilingus",
        "love",
        "fantasy",
        "lesbian love",
        "adventure",
        "magic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/healing-the-bloodlands"
}