{
    "title": "Elger and Leah Pt. 03",
    "pages": [
        "I was still laughing at Elger after telling me he'd been hit on by a woman at the pizza place. I laughed even harder when he told me it was widow Pearson. I didn't think I had much to worry about. Still, I asked him how he knew she was hitting on him.\n\n\"Because as I was leaving, she beckoned me to lean down toward her and told me I could park my shoes under her bed anytime. That's how I know, I'm a married man, surely she knows that.\" \n\nNow I was laughing even harder, here's my six foot something handsome strong as an ox guy flummoxed by a late 60's widow, and not a slim nicely fit older woman, a slightly overweight and frumpy woman missing half her front teeth. The more we joked about it during supper the more relaxed he became. \n\n\"Leah, do guys hit on you?\"\n\n\"They do El, not all the time, but they do. You have an attractive sexy woman on your hands you know. Better make sure you meet my needs buddy.\"\n\nI could see the confusion and hurt in his eyes as I quickly rose and squeezed my way onto his lap. \n\n\"Stop that you lunk. You know I'm fooling around, there will never be anyone but you in my life Elger. I thought we'd settled this some time ago, I have never given you reason to be jealous, and I won't start now. I'm afraid you're stuck with me for life.\"\n\nKissing me he apologized, and said I was right, I had never given him a reason to be jealous, the comment had caught him off guard. The afternoon romp in the woods was enough to keep us satisfied, neither of us was overly amorous, after watching the evening news and Gunsmoke we called it a night and turned in early.\n\nWith the garden area tilled we set about buying seeds and a few plants already started. We wanted earlier tomato's, so I bought six plants along with pepper plants, the remainder were seeds. It took us an entire Saturday to get our garden planted, from there on it would be watering, weeding and an eventual harvest. We'd cleared out the root cellar, El had installed shelves from some cedar he had, we were set to store what we canned later in the summer. \n\nElger had enough shingles purchased to put a new roof on Lou's house, discontinuing cutting for two weeks he was spending his afternoons doing that. He was able to get it all stripped in two afternoons, replaced the few rotted boards and laid down tar paper by the third day. He had watched the weather closely making sure we had clear skies for the time the roof was bare. With tar paper down he was less anxious if a rain squall were to appear. \n\nThere were no pneumatic nail guns around then, no Lowe's, Home Depot's, or Menards, it was hammer and nails, manual labor. It took El three full afternoons to lay down the shingles and finish Lou's house, sore knees each night, empty belly, sore shoulders and arms from hefting 70 pound bundles of shingles up the ladder and across the roof. He would carry five or six bundles up, rest and do it again until he had enough to lay down five or six courses. Then do it all again, I had one very tired man on my hands each night when he dragged himself through the door for supper. \n\nWe made love once that week, and I gave him a blow job once just to keep those balls empty. Over time I had learned to enjoy the control I had over him when his cock was in my mouth, I also liked the feel of him cumming, the taste of his essence, the taste and feel of MY man. Like most men he thought with his dick and I was the happy recipient of those thoughts. In the first stage of my pregnancy I was hornier than normal, now that I was several months along, I wasn't as horny as before. I made sure I kept Elger happy and sated, but it wasn't the driving force it had been in the beginning. \n\nWith the garden in it was time to start cutting and splitting wood for the winter, assuring it would be dried enough to burn properly by fall. If Elger didn't have logs to cut he was in the woods, cutting tops and hauling them home to split. He'd been at it for several weeks and nearly had the basement filled with cord after cord of wood. Once our winter supply was replenished, he set about getting wood cut and split for Lou, once he'd finished that he started cutting trees the forestry management people said we should cut first. As he would cut them, he'd bring them to the log staging area, when he had 5 or 6 logs ready to go, he'd cut and stack them in the mow. \n\nMid-summer brought about the 4th with its many celebrations for the nations 200th birthday, our small city as well. I was concerned Elger wouldn't be able to cope during the military salutes, the fireworks and kids lighting firecrackers, but with Willy and Eileen next to us he did quite well. I was so proud of him, it had been several years since our first encounter with the noises and blasts, he had been able to put most of it behind him. Memorial weekend was always the hardest for him, it still is. It used to be a phone call from one of his platoon buddies every year thanking God their name wasn't on the wall, now it's a text. \n\nIt was late summer, time to start harvesting and canning, we had been able to stay ahead of the weeds and had a decent harvest to put up. Earlier in the summer we had frozen several quart bags of sweet corn and I'd made sweet pickles with the smaller cukes. After canning carrots, green beans, stewed tomatoes, and making dill pickles we were ready to dig potatos and onions, which we stored on racks in the root cellar. The few apple trees we had didn't produce much more than deer feed, we decided we'd pay more attention to them next summer. \n\nElger had reached the point where he needed to spend his time sawing logs and it was time to start building sample pieces of furniture to sell. With Burt's grandson doing so well El approached Burt about possibly not working at all, not surprisingly, Burt was a step ahead of him. \n\n\"Readin my mind boy.\"\n\nSeems that a local football star found college a lot more challenging than he thought, he was home and looking for work. Being his grandson's best friend, Burt told him he'd see if something could be worked out. \n\n\"This boy needs someplace to build his confidence again, this will be a good place to do that.\" Then he chuckled. \"Besides, folks are used to havin a white face around the yard and store, if you go, he can fill that void.\" \n\nBurt hired the boy full time, asking El to stay on two weeks to help orient him to the tasks at hand. With me in my eighth month I was what Elger called a waddle machine, he said I didn't walk anymore, I waddled, my big belly swinging from side to side. It was my last week at work as well until the baby was at least three months old, then we'd make the decision whether I would return or not. A temporary replacement had been found and was working out well. \n\nElger was such a great husband, he pampered me constantly, being upset with me if I dared lift much of anything, cooking supper many nights, running my bath, helping me in and out of the tub. All of those were usually the precursor to some play time later on, as much as I like sex it was never an issue, especially with him being so gentle and un-demanding of me at the end of my pregnancy. I was due late September, ma says apples don't fall of the tree until they're ripe, by early October I was miserable, no position was comfortable, calling Eileen she told me she'd stop by after clinic hours. \n\nWe had finished supper, Elger was cleaning the kitchen and doing dishes when Eileen arrived. I had tried to be comfortable laying on the couch but having no luck. After Eileen checked me over, smiled and said she thought I was about ready to go into labor, if my water didn't break tonight, she figured it would tomorrow for sure. I was laying sideways with my knee on Elger's stomach trying to sleep when we both startled, the mattress was soaked, my water had broken. El called Eileen to meet us at the hospital, though she wasn't a pediatrician Dr. Rollins was more than happy to have her there to assist, in fact, he let Eileen be the one who pulled our little Bridgette out the last few inches. \n\nWe entered the phase of little to no sleep, changing diapers, bathing a tiny creature in the kitchen sink, little clothes and endless joy. Mom and Earl had come the week after I was home and stayed for ten days, it was so good to have her there, not only to help, but to show me what to do and not do. Elger was a great daddy, he'd bring Bridgette to me for her two am feeding, then walk and burp her so I could go back to sleep. I loved listening to him talk to her when he was burping or bathing her, he'd have a one sided conversation telling her all about his day, as though she understood it all. \n\nI'd had a minimal amount of tearing at birth, though I'd been stitched, and it healed quickly, Eileen wanted me to wait for sex until my six week checkup. On that afternoon she smiled and told me if I was ready to give that boy a roll in the hay my body was as well. After Bridgette was down, I took a bath and donned my sexiest lingerie, stepping into the family room Elgers chin dropped and I heard a loud groan. \n\nI had on very tiny red lace panties with a matching bra, a white garter belt and silk stockings with a thin red robe over the top. \n\nOn the edge of his seat he said, \"Tonight Leah, really, you aren't teasing, are you?\"\n\n\"Tonight Elger, follow me to our playground, mama has some candy for her good boy.\"\n\nI hadn't made it three steps when I felt him lift me in his arms, kissing me he carried me down the hall to our bedroom. Setting me on my feet he untied my robe letting it fall to the floor, unhooked my bra and lay it on the bed, though the baby had fed they weren't completely empty. As El played with them milk dripped out onto his hands, he looked at me pleadingly.\n\n\"Can I suck Leah, please, I won't drink it all, promise.\"\n\nI sat him on the bed, cupped a breast and fed the nipple into his mouth telling him to be gentle. Within two sucks my milk let down and he had plenty to taste, I let him nurse a little then switched breasts doing the same. When I pulled his head back I looked at him lovingly. \n\n\"You understand I'll need to put my nursing bra back on, right? If I don't, we'll be full of sticky milk, and I want to ride tonight without my breast milk flying all over the place.\"\n\nHe hooked his thumbs into the waistband and slid those tiny little things down my legs. My pediatrician was fairly old school and still believed in shaving the pubis completely before birth, thankfully mine had grown back in with minimal itching and discomfort. Elger had watched and played as it grew back in, but tonight would be the first time for penetration of any kind since Bridgette had been born. He buried his face in my muff and breathed deeply.\n\n\"You're still my Leah, your scent is still the same, it still makes my dick hard. Oh how I've missed this baby. Lay down so I can eat you.\"\n\nAs he was disrobing I lay down with my legs draped over the edge of the mattress and my hairy pussy anticipating a good tongue lashing. Elger didn't disappoint, he began at the bottom and teased his way to the top where he licked once and my clit popped into view, as though it had been caught in a game of hide and seek. He knew exactly what to do to take me over the top, licking my hot spot with the exact amount of pressure as he formed a circle over my clit with his mouth and sucked softly. \n\nWith hips pushing my pussy into his face and my hands holding him tight I gushed juice across his mouth and down his chin, his tongue lapping like a kitten with a bowl of milk, my hips bucking up and down. My breathing was staggered and choppy as I settled a bit. \n\n\"My God El, that was wonderful, oh how I've missed that tongue.\"\n\nPulling out from between my legs he scooted me forward on the bed, with my legs raised he entered me in three short but tender strokes, when he was balls deep, we both moaned. We had a good rhythm going when I stopped him and asked. \n\n\"I want to ride you tonight babe, will you have enuf to fill me twice?\"\n\n\"Are we stopping at twice?\" He asked. \n\nI smiled and raised my hips into him, in no time we were back in sync once again. As we neared our climax I groaned for him to go faster and harder, the pace picked up immediately which took us over the edge in little to no time at all. The feeling of him cumming inside was something I had missed the most, but here we were, his warm thick gobs of sperm hitting my cervix once again, my orgasm spurred on further just knowing Elgers seed was inside me, right where it belonged. \n\nWith me in his arms, him kissing me repeatedly I spoke. \"El honey. After I ride you, I won't be able to go any more tonight, riding you might be over doing things, I don't care, I'll put up with the soreness tomorrow, but I need to sit on your cock tonight.\"\n\n\"I was surprised when you said you wanted to go twice, I figured once would be all. I don't want you to hurt yourself Leah, there'll be plenty of time for making love after tonight.\"\n\nI answered him by lowering myself, slurping his cock into my mouth and bringing him to full hardness, then lifted my leg over his hips, put the tip of his cock on my pussy and sank all the way with one slow even stroke. We smiled, neither of us expected that. After adjusting I began riding him what is now called cowgirl, back then we simply called it the girl being on top. \n\nI was so close when I felt the head of his dick swell and knew I was about to be filled with his spunk, I sped slightly and BAM, I was falling over the waterfalls with no hope of stopping, but then, who wanted to. While feeling Elger shoot into me I quaked, undulated my hips, my pubis smashed as tightly to him as possible, no light between our bodies, me grinding back and forth. Damn, I hadn't cum that hard in months, it felt soooooo good. \n\nWith him still inside me I flopped forward, the breast pads inside my bra were soaked, my breasts had apparently liked the action and stimulation as well. I lay there on top of my love, our hearts beating against the others chest, our breaths were deep, no words, no kissing, just laying with me on top, his hands cupping my ass. We cleaned up, I replaced my wet bra and nipple pads, put on a pair of cotton bikini panties and crawled in next to Elger, in his arms I heard him whisper into the darkness, \"I love you Leah.\"\n\nHe was up at two for little Bridgette's feeding, cooing and talking to her trying to soften her fussing. She was cradled in my arms as I opened my bra, the moment she smelled mommy's milk she began hunting for the nipple, slamming her little face into my breast trying to find her meal. When I used my finger to push the nipple into her mouth, I thought the little hog was going to swallow the entire tit. She had latched so hard it startled me, which in turn startled her and she began crying, a nipple back in her mouth stopped that. \n\nI had arranged with Dr. Morgan to take another three months before being back on the roster. Thanksgiving was at Eileen and Willy's, we decided to do Christmas with mom and Earl, the baby would be old enough to travel by then. I could feed her on the way, there were no child safety seat requirements then, I kept her in a carrier, but would lift her out and feed her as we drove. Both of our kids were raised without child safety seats, somehow, they survived, along with millions of other children. Elger had a gas furnace installed in the summer as a back up to the wood furnace if needed, we wouldn't need to find anyone to stoke the fire while we were gone, the gas furnace would heat our house. \n\nChristmas at mom and Earl's was joyous. He's quite wealthy and nothing was spared as far as decorations or planned events. Mom had taken a spare bedroom and made it into a nursery for her grandbaby. I let her dote and primp over Bridgette all she wanted, she had to be with me to feed, it wasn't like I didn't see her. She was on light cereal in the morning and before bed, filling her little tummy enough for her to sleep most of the night. I let mom feed her cereal, bathe her, change her britches, whatever she wanted to do within reason, I simply stood and watched. \n\nOur time with them was the happiest I'd seen mother in years, being a grandma fit her perfectly. Once back home El decided he was going to start getting the old machine shed straightened out to use as a wood shop. He would keep 25 feet on one end for the tractor and maintenance but use the remaining 45 feet for a shop. With the building being 40 feet wide, the space would give him plenty of room to build furniture. Between what he made sawing logs and my paycheck along with his, we had been able to save a sizeable amount of money by 1977 standards. \n\nWith over sixteen thousand in the bank, not including our inheritance money, we weren't concerned about spending three or four on improvements and equipment. There was no shortage of people wanting logs sawed, we knew the income would continue even if we weren't working in town. Roof repairs were first, once done he built a wall to separate the two areas. He had a concrete floor poured in the shop area, installed a new breaker panel, wired the building and insulated what would be a wood shop. He used a new product to cover the walls and ceiling, today it's known as OSB, back then we knew it as chip-board. \n\nWhen the walls were insulated and done he had a wood burning furnace installed along with a smaller hanging gas heater people referred to as a Modine, he wanted to be able to keep the temp above 35 overnight so his glues didn't freeze. Insulation was blown in above the ceiling and it was ready to be put into use. He had enough cut offs, known as culls, to keep the wood fire going all through the day, not having to use gas except at night saved a huge amount of money.\n\nOn Valentine Day he brought me a dozen red roses along with a small box of my favorite chocolates. Little did he know I had an all red surprise for him at bed time, there wasn't much to it and he had it off in seconds with his face buried between my legs. I make him sound like an incorrigible letch, but in reality, he wouldn't do anything I didn't thoroughly enjoy, him burying his face in between my legs is just one of those things I really enjoy. He made me cum three times before he climaxed, twice from behind, the third was with my ankles on his shoulders, yes, it was a good Valentine's Day in my opinion. \n\nShopping around and watching the for sale ads in the local papers El found the equipment he wanted to get started. He was dividing his time between the shop and the sawmill, which worked out fine. He'd built several pieces but had nowhere to market them, he'd put the word out and ran a few ads, but nothing caught on. The Ben Franklin inside Burts building was getting smaller, fewer and fewer people were shopping there anymore, Sandy (Burts daughter) had begun moving items to the front with nothing in the rear of the store. \n\nElger made a proposal to her to split the store down the middle. She could have all her items on one side, he would put his furniture on the other side. He would take care of moving shelving racks and anything else she needed done and they would split the rent and utilities in half. After talking with her dad, Sandy thought that would work out well, it would give her some financial relief and the building would be utilized to full potential. \n\nElger called his portion of the store The Wood Shed. He moved pieces in for display, people could order via phone if they wanted a different wood or buy what was available. Sandy would take care of both sides when he wasn't there, and he would pay her 15% of anything she sold on her own. It didn't burden her and gave her additional income at the same time, sales were slow to begin with but picked up substantially once people started talking. We didn't sell to very many folks in our area, word had gotten out to the big city people that handmade furniture was available without having to pay exorbitant prices. ",
        "Elger needed more space and Sandy who was in her 40's was ready to close the Ben Franklin if her mom was agreeable. El told Burt's wife that he'd rent the entire area if Sandy decided to close, which satisfied her, she simply didn't want the building sitting dormant. With The Wood Shed now occupying a larger space Elger asked Sandy if she'd like to work for him full time. They would work out an equitable salary and sales commission package for her if she said yes. Too young to sit home and do nothing, knowing the product and knowing Elger wouldn't cheat her, she accepted. \n\nSales increased steadily over the next few months, Sandy was enthusiastic and designed a form to let people order what they wanted in woods, colors and finishes without Elger having to be there full time. Sales at Burt's also increased, making Burt both happy and appreciative. With the store doing well on both sides Burt thought it might be a good time to cash out and retire. Elger wanted it badly, but we didn't know how we'd swing it without emptying our savings and inheritance money. In the end it was Burt's wife who had the solution to our dilemma.\n\nWe would pay them $50,000 up front and then make bi-yearly payments for four years on a land contract. If at the end of four years we still had a balance, we would need to get a conventional loan and pay them in full. With what little interest we'd accrued on the inheritance money we had shy of $140,000 dollars left. After two days of debate between El and I we made the hard choice and agreed to the sale terms. Within two years of our running away from Iowa, we were owners of a sawmill business, a furniture making business and now a hardware/lumber store. It was time to put the brakes on for a season. \n\nWe kept the name Burt's when we took over, it's what everyone was used to, why change a good thing. With furniture sales increasing Elger needed more help, turning to Burt's grandson he asked if he knew anybody from school who might have taken woodshop and would be interested in working for him. In fact, he knew two guys, one already working in a shop in Nashville but wanted to come home and one who loved wood but was working as a mason's tender to pay the bills. \n\nThe boy working in Nashville was a tall black kid with a sparkling personality, the other a husky red headed Irish kid from the next town over. They'd graduated together, had four years of woodshop together, and dated cousins. The Irish kid dated the black kid's cousin, the black kid dated the Irish kid's cousin. Small world indeed. The tall kid was named William, the Irish kid was named Shawn. We took an evening having the boys come over with their girlfriends for supper, then we all went into the shop. \n\nThe girls slobbered and cooed over the baby while Elger had the boys make something different from each other, not difficult, but would exhibit their knowledge of basic skills. I had a reason for the girls being there, if they happened to marry, they needed to know what their husband would be involved with. Both were impressed with what their boyfriend was doing, neither realizing previously the skill level necessary to not only operate the machinery safely but to put the pieces all together for a finished product. Being sufficiently satisfied we hired them that night. \n\nThrough the following months both guys increased in skill level and ideas for new designs. Within the year they both married their sweethearts and had settled into married life. I was back at the dental clinic, deciding to stay there for the health insurance. Williams older sister had a daycare less than a quarter mile from where I worked which worked out wonderfully for me. Elger had kept Burt's other daughter running the hardware and lumber yard, she'd done it all her life and seldom needed any input from us. We increased her salary and added a life insurance policy to her wage package. \n\nWith the store and the wood businesses operating smoothly and in the black, Elger approached Lou to see if he was interested in selling the rest of the farm. To his surprise Lou was, he was near 90 and wanted to go into assisted living where his sister was. After working out all the details we were the owners of another twenty acres, a remodeled house, a small barn and two outbuildings. With Bridgette now two it was time for us to put another loaf in the oven so to speak. \n\nWith gusto we went into baby making mode, on my back, hands and knees, on my tummy, on my side, me on top, you name it, we tried it. And it worked, within six weeks I was knocked up again. Ironically William and Denise announced they were having a child as well, they were living in a one bedroom apartment and were concerned about room once the baby came. They'd been looking but hadn't found a house they could afford to buy or rent. Elger and I talked about it in bed one night as we screwed slow and easy, stopping long enough to climax and then resumed our conversation. \n\nI asked why we didn't sell Lou's old place to them on a land contract, we were having no luck finding reliable renters and winter was once again on its way. Lou hadn't burned even half of his wood the past winter so there was a half basement full, William was free to cut tops all he wanted if they chose to buy, which they did. We included five acres of land and they could cut downed trees or older tie tops for firewood.\n\nMom and Earl had retired and were visiting at least every three months. I told them once the new baby arrived they'd lose their spare room when it was old enough to be on it's own. No problem, they'd bought a motor home as their retirement present to each other and would park it in the yard. They could hook up to power and use the facilities inside instead of filling the waste tanks on the motor home. Rodney was born in June of 1980, Ronald Reagan was president, the return of the hostages was being negotiated and the nation was on a new path. As were we.\n\nWith an upturn in the economy we were able to add health insurance to our employee's salary packages, including us. Not needing insurance from work any longer I asked Dr. Morgan if it would inconvenience her terribly if I didn't return until the kids were in school. She said she had plenty of candidates to fill my spot and I was welcome to return anytime I'd like. With Rodney on the breast and business booming, me being able to stay home or go into the store was a huge benefit. \n\nWe made a conscious decision to stay at two children, we knew we didn't want a single child, and now with one of each Elger and I decided it was time for him to get snipped. We felt completely blessed and fulfilled, having worried that we wouldn't be able to have children, here we were with two healthy little ones. Following his vasectomy Elger was to bring in a sperm sample after 21 ejaculations, when he returned seven days later the woman mumbled something about his poor wife. In all actuality, not having to be concerned about another pregnancy I was having the time of my life. \n\nRodney was a very quiet little guy, he seldom fussed unless hungry or in need of a diaper change, he took to the breast immediately and was content to simply be in the room with me in his little carrier. Bridgette thought it was pretty cool to have a live dolly, causing me to keep a constant eye on the little stinker. George was as attentive with Rodney as he had been with Bridgette, he also took on a greater role taking care of Bridgette now that we had two. He loved bathing and getting her ready for bed telling her all about the latest piece of furniture he was making. She'd ask lots of silly questions and he gave her lots of silly answers. \n\nBridgette and daddy had quickly become nearly inseparable, she would go to town with him, to the store and lumber yard, everyone seemed to know little Bridgette and loved her. Even with safety glasses and ear plugs he limited her time with him in the shop, there were just too many areas she could get hurt. If he was doing something menial she could help with, he would take her to the shop with him, otherwise she stayed in the house with me or played in the yard. She was all girl and he was all daddy, he loved her long pigtails, her little dresses, her little rhumba panties with the frills on the back. \n\nTo say he was wrapped around her finger is true, within reason, he could be had, but only when he wanted to. The first time he had to give her a swat on the butt I think he cried as much as she did, she was crying because her daddy had spanked her, he was crying because he had to break his little girls heart. Their bedtime ritual after a bath was him reading to her while she was snuggled into his lap, there was many a night he carried a sleeping little girl to bed and tucked her in for the night. \n\nOn a Saturday morning we were in the kitchen with Rodney asleep and Bridgette watching Bugs Bunny. I lifted my skirt to show El I had no panties on, he quickly looked around, unzipped and pulled out his hardening cock. I was wet enough that it penetrated me as I lowered myself onto his lap. \n\nIn no time at all he was fully erect, and I was slowly bouncing, his dick buried deep within my hungry pussy, knowing I wouldn't get pregnant brought about an entirely new freedom to our sex life. I was moving up and down that love muscle at a steady pace, eyes closed, head tilted back, Elger playing with my breasts through the shirt and bra when our lust filled moment was shattered by, \"Mommy, I'm thirsty.\"\n\nMy dress had us completely covered so nothing was showing, it sure messed with our rhythm though. \n\nElger spoke, \"Honey, go watch your cartoons, I'll bring you a glass of water in a minute.\" Which was all she needed to hear. \n\nI kissed him deeply, our tongues dancing as they have for so many years, me grinding into him anxious to get off before there was another interruption, I moved my head next to his, \n\n\"Fill my pussy Elger, I can moan into your shoulder and be quiet. Please baby, cum with me.\"\n\nHe began lifting as I was dropping, within a few minutes his body went rigid as he pushed upward, shooting spunk all over the inside of me while I shook and quivered, screaming into his shoulder, not realizing at first that I was biting him. As we caught our breath, he pulled his shirt back revealing two huge dark red bite marks. \n\n\"Oh my gosh El, I'm so sorry. I didn't mean to bite you, but damn it was so good.\"\n\n\"Don't be sorry, I kinda liked it, made me know I was sending you over the moon.\"\n\nTaking a glass of water to Bridgette I was greeted with, \"No, I want daddy to bring my water.\"\n\nWell okay then, I returned to the kitchen, handed El the glass and told him I was going to go and wash off the cum running down my legs. Having cleaned ourselves, me putting panties on and the two of us putting ourselves together for the day there was a knock at the door. Willy and Eileen stood on the porch giving us the \"I know what you were doing\" look. \n\nSmiling I looked at Eileen and asked if it was that obvious. \"Well you know I seldom cuss, but you look thoroughly screwed girl, hope it was as good as it looks like it was.\"\n\nI invited them in and smiled at her, \"It was, believe me it was. What's up?\"\n\nWilly took the floor. \"I've got a nephew who lives with his folks in Nashville, he's due to graduate this year but my sister told me he's starting to run with the wrong kids. He's taken three years of woodshop and two years of mechanical drawing, I was wondering if you might have a spot for him when he's out of school? If he has something to look forward to, he might stay away from that crowd.\"\n\nWith the holidays coming upon us I suggested he have his sister and family come to our home for turkey day. He said she wouldn't, she was too much a yuppy and city girl to darken his door, although he thought she'd allow James to come. He said James had a girlfriend that he'd been together with for three years, would we mind her being at dinner as well? Heavens no, the more the merrier. Elger had been building a large dining table for us from Black Walnut when he had time here and there. With folks coming for Thanksgiving it created a deadline, and for Elger, deadlines are a good thing. He finished the table and had it in the house the Tuesday prior to the holiday. \n\nJames caught us off guard completely, we hadn't asked Willy anything about him prior to them coming for Thanksgiving dinner. He was a huge lad, at least 6'3\" and solid as a brick wall, had been an all-star guard on the football team and had a free ride to a smaller four year school, but wasn't really that interested. He wanted to get a good job in carpentry, marry Miriam, raise a family and not live in a big city. Miriam was the exact opposite of James, extremely tall for a girl at 6'1\", and skinny as a rail, tiny butt, narrow hips, if she had any more than an A cup I'd be surprised, but their devotion to each other was evident. He did for and doted over her like she was made of fine porcelain. \n\nWilly and El took him out to the shop for a demonstration, El wanted to see what James could do, and was impressed. In the house Willy, Eileen, Elger and me sat with the kids asking what they saw as a future. James reiterated what he'd said earlier, Miriam wasn't sure, but thought she wanted to become a graphic artist. Our local tech outreach had classes in graphic arts which would work in her favor, at first glance you wouldn't have a clue that they were both straight A students on the honor roll every semester. Nothing about them stood out except their height and body differences, just two black kids in love. \n\nBy the time we were finished James and Elger had written and signed an agreement that if James stayed out of trouble and graduated, we would hire him full time in June. Miriam wondered if she would be able to come with him after telling us her mom wanted her out as soon a school was finished, her mom wanted to move to California to take a new position, the only thing holding her back was making sure her last child was taken care of. I told Miriam we'd find a way to make it all work and she should let her mom know she has somewhere to go after graduation. \n\nChristmas was so much fun that year with a three year old. The lights, the ornaments, the decorations, everything was a wonder to her. Mom and Earl came which made it all the more festive, staying with us until the second of January. Elger was going into the store three days a week now, Burt was bored silly with retirement so Elger hired him to work the days he wasn't. Burt was happy as a pig in mud. \n\nWith June approaching we were busier than ever, Burt and his eldest grandson were basically running the yard, Elger offered his grandson a position of general manager for the lumber yard, with a salary increase, his Aunt Cynthia would still run the business as a whole. She would oversee the day to day operations and take care of the other store employees. Sandy had a reputation as being what we called \"loose\" back then, today I think it's called a skank. On a day when I stopped in to see Elger I wandered over into the Wood Shed. Talking with Sandy she told me she would never make a move on Elger, she liked and respected us too much to do that. Why she felt she needed to say that I'll never understand. \n\nWith store responsibilities taken care of El was back in the shop almost full time helping to complete orders. There hadn't been enough time to cut a winters worth of wood which meant we used the gas furnace much more, liking it better than having to feed the monster two or three times a day and even more when it turned very cold. It cut down on the dust as well, I told El I no longer wanted to burn wood unless it was an emergency. Gee, not having to cut and split wood didn't seem to break his heart. \n\nThere was a small cabin a half mile from our home that hadn't been lived in the entire time we'd been in our home. Elger found out it belonged to a family in Northern Kentucky, it had been the parents get away in years past but none of the kids cared about it any longer. If they could get rid of it they would. Elger arranged to meet with the oldest son at the cabin on a Saturday morning. The kids and I went along to see what it was like, and whether it was worth buying, it set on 7 acres of land and had an unattached two car garage. Talking with the son we learned it hadn't been inhabited since his folks passed on 8 years ago.\n\nThe interior wasn't in bad shape, it was horribly outdated and needed upgrades, but nothing was ruined, the water and electric had been shut off so there was no fear of damage in freezing weather. There were two bedrooms, a full bath with a walk in shower his folks added in their final years, a reasonable sized galley kitchen, a laundry area and a large living area. Roof was only ten years old and the exterior was cedar, the paint was faded but the boards were all intact. The garage door would need to be replaced but the rest of the structure was in good shape. \n\nWe invited him back to our house for lunch and to possibly talk about selling the place. Taxes on it were running them over a $1000 a year mainly because four of the seven acres were what was classified as tillable ag land. They hadn't paid last years or this year's taxes, he told El he'd sell the place for the back taxes and fifteen grand, Elger told him he'd give him fifteen thousand cash sale, no waiting for financing, Elger explained we'd have to put at least ten into it before it could be rented. Elger refused to budge and in the end the guy relented, agreeing to sell at fifteen. We drew up a quick handwritten agreement and gave him a postdated check for $2000 as a down payment to solidify the deal until the lawyers could take care of things next week. \n\nI called Burt's wife Monday morning, told her what we'd done and gave her his info. Ten days later we closed. Elger and I had talked about what we'd do with the cabin, we both had the same idea, rent it to James and Miriam. It was obvious when they were at our house they were sexually active, they were far too comfortable with each other as well as several other signs. We wondered how that worked, he was a hulk of a man and she made Olive Oil look stacked, they had obviously found ways to get together without his size hurting her. \n\nIt was nearing time to wean Rodney, sitting on the couch one evening after Elger showered, I told El to lay in my arms, I had a treat for him. As he lay in my arms I opened my blouse to bare breasts, putting a nipple in his mouth, he knew what to do. \n\n\"Enjoy this little treat babe, I just fed the baby so there isn't much left, but I'm gonna start weaning Rodney, I'll be close to dry in a few weeks. When this one is empty drain the other as well.\"\n\nPulling off he ask if he was going to get his toys back. \n\n\"Yes hon, no more little hands squeezing and kneading, no more little lips sucking my nipples an inch long, they'll be all yours once again. I'm looking forward to sharing my body with you and only you, I wouldn't trade the experience for anything, but it's time to be over.\"\n\nWilly drove to Nashville to pick up James and Miriam the weekend before graduation, bringing them to our house. The cabin remodel was done other than fresh paint and cleaning. We asked the kids what their plans were concerning marriage, their response was they would marry right away if they had somewhere to live. I smiled at El and he at me. We had upgraded to a newer vehicle as a family car but had never gotten rid of the Ford station wagon, handing the keys to James, Elger told them to follow us. At the cabin we gave them the fifty cent tour and asked if they liked it, they thought it was great. \n\nBack at the house El told them that what needed to be done before it could be rented was painting and final clean up. \n\n\"If you guys could live there would you?\" Elger asked.\n\nJames responded, \"Yes sir, we'd live there, we talked about how neat it would be to live there as we drove back to your place. I'd be close enough to walk to work, we don't have enough saved for somewhere like that though.\"",
        "\"Here's the deal kids. Leah and I want you to have that cabin, we'll wave any security deposit and the first month rent if you guys will paint and then do final cleaning. We know you don't have a car, so if you aren't too proud to drive that old wagon until you can afford better, it's yours to use with the following stipulation, when you purchase a nicer car you bring this one back to us, it has sentimental value. If they agreed we'd add the two of them to our insurance. Does that sound okay?\"\n\nMiriam was crying, James holding her trying to console, he was doing all he could to keep the water in his eyes from dropping. They finally composed themselves and nodded their heads together, yes, they'd love to accept that deal, and no they weren't too proud to drive the station wagon. Miriam said she would start looking for work as soon as they moved. I had other ideas.\n\n\"Miriam, would you consider working for me? I want to spend more time at the stores and helping run the businesses, with two little ones it won't work. If I could hire you to watch the kids it would free me up to do what I want, and if you decide your going to take classes, I'll make other arrangements so you can attend. Is that something you would consider?\"\n\n\"Yes ma'am, all the money I make now is from babysitting and watching kids on weekends, I'm acquainted with what needs to be done with little kids. Thank you, we've never been treated this nice, we don't know what to say.\"\n\nI answered her, \"Say nothing, we've been where you're at with no one to help, let us help you and then later in life you help somebody. It all balances if you do that.\"\n\nJames was a huge young man, yet his demeanor was as gentle as can be imagined, he was lighter skinned and Miriam was a dark brown, they made the perfect couple, him always doting over her, she loving him unconditionally. They graduated on a Friday and moved to the cabin on Saturday, the old wagon piled full of their meager worldly belongings. We had stocked the cupboards and filled the fridge with the basics before we helped them move in. More crying, more humble thanks, more hugs, it felt so good to know we'd helped.\n\nJames fit into the operation like a fine silk glove, he had several ideas he collaborated with William and Shawn for some new looks on older designs. Miriam was a huge help to me, the kids loved her, Bridgette said she was her big sister, Miriam played along and in doing so could convince Bridgette to do anything she needed to do but didn't want to. As she and I sat talking one afternoon she asked if I wore all the different intimate wear she'd seen in the laundry or if it was just for the bedroom. \n\n\"Oh no honey, I wear it all the time. Elger loves it, so I love it, he never asks me to dress inappropriately. I dress like June Cleaver on the outside, but under this house dress what I'm wearing screams screw me. I feel sexy, desirable, and sought after by my husband without anyone else knowing it. Excuse my language, but El calls them my \"take me home and fuck me\" clothes.\"\n\nShe never flinched at my language or that I wore it because Elger liked it. She wondered if James would.\n\n\"He'll like it Miriam, just make sure you're ready for him to screw you into the mattress if you do. Or do you usually mount him?\"\n\n\"No, no, no, we do it both ways. I love having that mountain of a man over the top of me holding himself up and making love to me. He is so gentle with me Leah, I have to tell him when I want it harder and faster. Is that the right thing to do?\"\n\n\"Sounds like you have things under control hon. If you want to order some sexy undies we can do that now, I'll make the first order my gift to you up to a hundred dollars.\"\n\nBecause she's so slender it was hard to find certain items she would have liked, and yet we were able to order a large amount of lingerie. I was excited for her and anxious to hear the good reports once it arrived. She and James had set a mid-July date for their wedding, choosing to hold it in town instead of returning to Nashville. Miriam had purchased a pair of see through panties as a treat for James, she told me after seeing her in those panties James wanted to make love to her every night, without fail, and more on the weekends. Miriam was off kilter for three days in a row, I sat her down and asked if she was getting cold feet. \n\n\"No, nothing like that. James wants to do some things in the bedroom that I'm wrestling with. Since puberty my mom told me only sluts enjoy sex and that a good girl never ever lets a man lick between her legs or sucks on him. James and I are smart and have read all about this stuff but that crap my mom put in my head is messing things up. Do you and Elger do those things?\" \n\n\"Oh my yes, I think he has his face between my legs as much as his dick. I'm certainly no Bible scholar but if I'm not mistaken it says in the Book of Hebrews that the marriage bed is undefiled. Honey that means if you and James enjoy it and no ones being hurt or abused, then by all means enjoy yourselves. Oral sex is a huge part of our intimacy.\"\n\n\"We haven't ever done anything like that though.\"\n\n\"Correct me if I'm wrong, but aren't both of you grade A students? You are? Okay, I have a book the two of you can read, it'll explain the basics and then you can fine tune things as you learn. Miriam it'll change your lives for the better, sex doesn't have to be one position, it can be many things.\"\n\n\"What about from behind? Don't they call that doggy? Will it hurt if we do it like that?\"\n\nIs James an overly large man in that department??\n\n\"I don't know, I measured him once and he was six and a half inches. Is that overly big?\"\n\n\"That's normal, most men are between five and a half and seven, so James is right in that area. Does it hurt when you're on your back, does he hit your cervix?\"\n\n\"He did at first after we lost our virginity, but then something changed and it doesn't hit anymore.\"\n\n\"Your body adjusted Miriam, and if he isn't hurting you on your back, though he'll go a little deeper from behind that shouldn't hurt either. If it does ask him to stay stationary for a minute while your body adjusts. I had to do that with Elger in the beginning, now I'm like a starved animal down there. I'm eager to take everything he has to give me.\"\n\nI got the book El and I had read so many years ago and sent it home with her. The next day when she got to the house I recognized that bowlegged stance. When I asked if she was okay, she smiled and nodded. \n\n\"Is it safe to say you and James did things a little differently last night? Are you okay to work today?\"\n\n\"I'm okay, just sore and I think bruised, swollen for sure. I let James lick me last night and that opened the door to try it from behind, we did it three times before midnight. I've never seen him so sexy before, he was so gentle, but he sure hammered it to me. After the first time we went into the shower to clean up and he did it to me again in the shower, with my arms around his neck and my legs being held up in his arms as he slammed into me. I've never climaxed so hard. He wants to know if you have any more books?\"\n\n\"Did you try oral on him?\n\n\"Not yet, but I'm going to. We talked about it and if I go slow, I think it will be alright. I just need to get past that mental block. James is so understanding, I promised him it will be soon, and it will.\" \n\n\"You mentioned three times.\"\n\n\"Oh yeah, we saw the illustration of the lady with her legs on the guys shoulders, damn does it go deep like that. We really liked that one. His big dick in my tiny little beaver was all too much, I had stuff running out of me even after I went to the bathroom and put on fresh panties. Is that normal?\"\n\n\"Yes honey, and it only gets better from here on.\"\n\nJames and Leah married in the small Methodist church on the edge of town with a reception at our place afterward. It wasn't a big thing, 20 or 30 people at most, her mom had delayed the trip to California so she could see her baby girl married. When James and Miriam took her to see where they lived she was impressed and happy for them. She could leave her little girl knowing she was well looked after and provided for. \n\nMiriam's lingerie arrived two weeks later on a Friday afternoon, no one saw hide nor hair of them until Monday when James walked to work across the field looking completely worn out. He stopped at the house to tell me Miriam would be a half hour late.\n\nSmiling I put my hand on his shoulder, \"Miriam's lingerie arrive?\" He nodded. \"You'll both live James, one day you'll remember this weekend and laugh.\"\n\n\"Sure hope so Miss Leah.\"\n\nElger said that when James walked in the shop everyone knew instantly why he looked like he'd been rode hard and put away wet. He said Shawn asked if it was a busy weekend, James uttered something about that woman trying to screw him to death and went about his work. When Miriam brought him lunch there were snickers and low chuckles in the shop, she didn't seem to mind, she'd taken care of her man and left him drained. Mission accomplished. \n\nWe rented a large area at the county fair in the education building where we set up several pieces of our furniture, these were made of lower cost lumber and therefore became more affordable to local residents. El let the boys and their wives manned the booth, Shawn drew the most attention, having a red haired lily white guy standing with his ebony colored wife was something our little town wasn't used to, but thankfully they took it in stride. Somehow they had accepted William being married to a white girl more easily than the reverse with Shawn. It didn't become a factor, we kept the kids focus on being available to answer questions and help customers, by Sunday night when the fair closed we had sold all but three of the more expensive pieces. \n\nWith all the business activity of the past two years along with raising our babies we made the decision to slow down for a while. We'd watched too many families be so busy they ended up missing their kids growing up. We wanted to hold back and let everything settle in for a time, we needed some us time. We'd paid off the land purchase six months ahead of schedule, William and Denise had secured a conventional loan and paid off the remainder on Lou's old place, which freed us up to sell James and Miriam the cabin on a land contract. \n\nIt was also at a time when we were glad things had slowed. Our local clinic which was a part of the small hospital in Richmond had been sold and the clinic in town would be closing in December. Eileen, Willy and us sat down one evening and kicked around the idea of her opening a clinic, seeing if she could connect with the larger hospital in Mount Sterling. After several weeks of negotiation and ideas back and forth the hospital in Mount Sterling agreed to be bring her into their medical group if she could get a clinic opened by years end. \n\nThe Richmond hospital owned the building the clinic was located in and more than happy to sell it. The clinic had been remodeled and upgraded just three years prior, Eileen wanted to add some new equipment but by and large it could be a turn-key operation if the financing could be secured. After haggling with the town and county boards for six weeks we finally laid it on the line. Eileen addressed the powers that be. \n\n\"Ladies and gentlemen, you have a decision to make. Do you want a local clinic or not? Are the 3000 plus people in this city enough for you to get off your lazy rear ends and do something, or are they worthless in your eyes? If they have value then stop screwing around, give my corporation the tax breaks I need and let me get back to serving this community. \"\n\nOld lady Emerson of the local fish wrap covered all the city and county meetings, when she printed the minutes of those two meetings the phone lines nearly melted. An emergency meeting was called for both the city and county boards where the TIF's and other incentives were immediately approved. Willy and Eileen used their property as collateral, along with Elger and me using two of our properties as collateral the financing was approved, and Eileen announced the opening of the Mid-State Medical Clinic in November. The mortgage on that property was paid off in less than three years. \n\nOur workers were all three in the early stages of family life, Miriam, Denise and Dorah were all pregnant, with Miriam due first. It was an exciting time in life, our kids were now in grade school which gave Elger and I more time to be with each other and them. They were into all the activities our community had for kids and youth, we spent many a Saturday sitting our butts on bleachers watching our kids in sports.\n\nOn an afternoon when two of the guys were delivering some pieces to a furniture store in Nashville and Shawn was at the store until five, I walked out to the shop. Sitting on the bench talking with Elger I kept hiking my dress higher and higher until it was just starting to show my pretty bright pink panties.\n\nElger walked to the door, locked it, turned off the overhead lights and walked to me. \n\n\"You little slut, you've been trying to make my dick hard for a half hour, now you're gonna get fucked the way slutty girls should, hard and deep. Lift up.\"\n\nAs I did he slid my panties off and raised the hydraulic table they used for assembling furniture, he fluffed my bush and buried his face in my vulva. Using his tongue to take me over the edge I shuddered and bucked, my hips jerking every few seconds. Lowering the table, he leaned over and kissed me. I whispered to him. \n\n\"Fuck me El, I've been a naughty girl and I need you to punish me with your rod of correction.\"\n\nSliding me up onto the table he lowered himself into my wet and throbbing cunt. With my ass on a solid surface there was no mattress to sink into, El hammered my pussy as hard as he could, and I took every ounce of energy he exerted into my body. With no mattress to absorb the thrust his cock seemed to go deeper than normal, tickling my inner being and bringing me to an overwhelming climax. \n\nGrabbing some tissues he put them in my panties, slid them up my legs and told me I should be able to get to the house before I started leaking. As he raised the table I put my arms around his neck and kissed him intimately, wrapping my legs around his waist. \n\n\"Just because you dropped a load in the shop don't think for a second you're going to weasel your way out of fucking me tonight little brother. That cock is mine and I want it buried in my cunt with me on my tummy within fifteen minutes of the kids going to sleep.\"\n\nHe smiled, kissed me tenderly, lifted me off the bench and whispered in my ear, \"Your wish is my command big sis.\" \n\nWe hadn't called each other brother or sister for years, somehow today it all seemed so very erotic. \n\nOur three workers having their babies seemed to close out the 80's. With three new little ones in our midst life became very interesting and exciting. The early 90's had us attending band concerts, chorus productions, sports events and all the other activities teens are into. We were also introduced to something called the internet, we wondered if it might be a way to market our products. Finding a guy to help us set it up we launched a website featuring our furniture pieces using the three guys as the listed builders. It was also our first real scare in over 15 years. Elger recognized a customer's name from our hometown, after having the guys get his address, he confirmed it was indeed someone we'd grown up with. \n\nElger explained to the guys that he would take charge of the order, they'd build it and he'd get it shipped. Another wrinkle, the guy wanted to pick it up. Elger told him we had a truck delivering in Iowa and it would save him shipping and transportation costs if he wanted to meet the truck and then haul it home. Thankfully the guy accepted the deal, we had far too much to lose if someone like him were to find and recognize us. Within two weeks of that sale we shut down the website, concentrating all our efforts within a hundred miles of our town. We had plenty of money, we didn't need more so badly that it would expose our existence as husband, wife and parents. \n\nIt was also a time when cell phones were on the rise. Both of us were reluctant to use them in place of a land line, but soon realized they could be a useful tool. Progress, or was it? In 1996 we made another monumental move in our business. We wanted to expand the hardware store but had nowhere to go with the furniture portion. On the east edge of town where the main road entered the downtown stood the old McCluskey Implement building, 100 x 55. It had been empty for over ten years and the city desperately wanted a business in there paying taxes. \n\nElger called Willy and asked him about the history of the building. After researching city records we learned it had been built in 1966, the implement dealer went belly up within three years and it had only been occupied sporadically since. It had three phase power with an 800 amp disconnect, all the power we would need, and the bonus. It was located on four acres designated as industrial/commercial. \n\nFollowing much negotiating and screwing around Elger was able to move the belligerent lawyers off their high horses and get serious about selling the property. Just over three months later we owned the property lock, stock, and barrel. We hired a crew to go in and completely clean the building, we hired plumbers to re-do the bathrooms and an electrician to install all new lighting. The original office area had been kept in decent shape and didn't need any immediate upgrades. \n\nIt sounds like a lot, and it was, but the largest part of our move was putting up a building to house our new vertical band saw sawmill. It had the capability of sawing up to a 24\" log, was all hydraulically driven except the saw and had a one inch carbide tipped blade. Elger had ordered it with a feature that scanned the log for metal and would automatically stop the bed from moving forward if any was detected, thus saving on multi-hundred dollar blades. Between erecting the building, mounting the saw and setting up everything that went with it we were operational within three months. With easier access and the ability to cut larger logs faster the sawmill business expanded so fast we had to hire three more guys to meet the demand. \n\nElger and I had taken a ride into town late one Friday evening while the kids were at the high school football game. After a leisurely pizza date, we drove to the new mill site. Toward the back where it was darkest El lifted my dress, shimmied my panties down and had me lean forward against the building, I was wiggling my ass side to side teasing him as he got his dick out. I was wet enough that as soon as his dick entered, we buried it all the way. I felt his hands tug up my blouse, slide my bra up and cup my breasts, a position he loved, behind with my tits in his hands. \n\nFollowing a rousing fuck we had just gotten ourselves put back together when we saw the blue lights come on. Walking toward us was none other than the gentleman who'd caught us years ago. As his flashlight moved up our bodies and he saw who it was he smiled big. \n\n\"You two again, you know most folks do that stuff at home, you should try it.\" \n\nHe turned and drove away, as his car left the lot we broke out laughing, what were the chances of being caught by the same guy so many years apart. That, by the way, was our last escapade of fucking off the homestead. Nowhere was off limits at home, but we didn't need any notoriety for doing the deed in public. As we picked up the kids Bridgette kept asking what we were chuckling about. How do you tell your children you just got caught screwing by the police? \n\nOnce the cleaning and remodeling of the main building was done the guys shut down production for a month to build the shop. The three guys had a brilliant idea, use the front forty feet of the building as a store and display area, put up a wall the entire width of the building with windows all the way across except for a service door area and make it possible for people to watch furniture being built. Elger and I loved the idea telling them to run with it. ",
        "We found a contractor that was willing to let us supply the materials for the wall and we'd cover his labor. At the same time, Elger had an HVAC company come in and install overhead infra-red \n\nheating throughout, the central air units had been replaced approximately five years before we purchased and were operational. As the contractors finished up at the end of the third week the new shop equipment was arriving. \n\nWe were able to get the electricians back right away and by Friday they had all the new equipment wired in. Elger and the guys spent most of Saturday calibrating and checking out the new machinery. Monday, they moved all the furniture pieces from the Wood Shed into the new Wood Shed showroom and on Tuesday morning were back in production. With production demands increasing we were forced to hire three more people to work in the shop, two guys and a girl. They fit in well, El had made William the lead man in the shop, all were in agreement and he wisely did not let it go to his head. \n\nWe had so much business with the sawmill we put up a storage shed with open ends but covered sides where we could stack and store the wood. It was forty wide by seventy long and sixteen feet high, high enough to pull a semi through. \n\nThe year two thousand brought about the graduation of our son from high school, Bridgette was about to enter her third year of college. Folks in our small city blew off all the hype and rhetoric of the year 2000 scare, choosing rather to simply go on with life. The boys had been busy, William and Denise were the parents of four, James and Miriam had three kids, Shawn and Dorah had four with another on the way. A prolific bunch indeed. The early 2000's were boom years, we had orders three years out, until the economic crash in '08. We had wisely put money away knowing it wouldn't last forever, we still had plenty of work with orders a year in advance, but it wasn't as it had been. The guys decided to re-open the web page without any mention of Elger and I, it opened new doors and added much needed revenue to an already burgeoning business. \n\nMother had died three months after Rodney's graduation from high school, Earl died within weeks of mother passing. I think he died of an empty heart more than anything, he wouldn't eat sometimes for days, had no enthusiasm or spunk whatsoever, in the end he was a shriveled up, broken hearted lonely old man. \n\nBoth kids finished university, each found a spouse and have families. Rodney lives in Billings Montana having married a lovely girl off the local reservation, she teaches high school English and he teaches of all things, woodshop. Go figure. Bridgette's husband is a Naval officer stationed in Japan. We took a trip to visit both last year just before Elgers heart episode, we got to see all five grandbabies, spending two weeks with each family before returning home. \n\nHere we are in 2014, we have a phone that's smarter than we are, a computer we only use to facetime with the kids, and we're financially set for life. We sold the hardware store three years ago to Burt's grandson and his wife. The boys have taken over the furniture business, their wives helping in the sales area when they can, we've learned through the grapevine that all three couples have individually christened the shop at one time or another. According to Miriam there's nothing more erotic than the smell of sawdust and sex together. She also said it's gives an entirely different meaning to the terminology, \"morning wood.\" \n\nElger is still building different pieces in his shop, then selling them in the store. He only spends four or five hours a day in the shop, and then sits with me the remainder of most days. We're planning to gift those three boys, William, Shawn and James, (they're grown men, but we still call them boys) as three equal partners in The Wood Shed after the first of the year. They've all gotten along superbly through the years, their wives and kids are close friends and we don't see where there will be any issues. We're sure there will be some tax issues, but they have a lawyer to work all that out. As I mentioned, we're financially set, why not bless these kids and their families. \n\nWhich brings us to this day in 2014, me cuddled in his arms after being drilled by his cock while on my tummy with my ass in the air, Elger with his meat buried to the hilt. We don't know how long we'll be able to continue such activities, but we're going to keep on being a horny couple until the end. \n\nWhen Elger returned from Nam we had no idea how we would stay together or where, we only knew it was what we wanted. Nobody and nothing was ever going to separate us again, and it hasn't. Other than hospital stays neither of us has slept apart from the other since we left Iowa, we're planning for it to stay that way until we die."
    ],
    "authorname": "R410a",
    "tags": [
        "incest",
        "taboo"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/elger-and-leah-pt-03"
}