{
    "title": "On Vacation - An X-Change Novella Ch. 01",
    "pages": [
        "Look...I know that I'm not getting any red H's because this story is too long and it takes awhile before there's any sex. I just let it take me where it wanted to go. I had two goals when I started it, 1- Create a believable way that X-Change could work, and 2- Write a love story. I feel that I accomplished both goals and wrote a nice story as well. Did I mention it's very long?\n\n------------------------------\n\nI smiled as soon as I saw my best bud Danny standing at the rooftop bar. It had been a month since we had seen each other, which was long for us. Work had been crushing me lately and Dan had been crushing it at the law firm he worked for to keep his mind off his recent break up. We had known each other ever since freshman year when we were on the same dormitory floor. We had instant rapport which turned into trust, friendship and allegiance. We then roomed together for the rest of college and then decided to start out in Seattle. He went with a hi-rise condo, while I was stuck in a studio as my career in CGI went through its apprentice phase.\n\n\"Whazzup Jace!\"\n\n\"Yo Danny Boy!\"\n\nWe moved in to a bro hug.\n\n\"Hey Jason, they have Dragon's Milk on tap. Here you go dude.\"\n\nI drained half the glass in one big chug. \"Oh that's fantastic. Thanks Dan.\" We fist bumped.\n\nHe took a couple of sips from his glass. He had a nervous look on his face.\n\n\"So Dan, how's the broken heart?\"\n\n\"Let's go grab a table. There's some stuff I need to talk to you about.\"\n\nThis was concerning. When it came to the ladies we had always been each other's wingman and confidant. It was easier in college when we would go through a girl or two per semester. Sometimes they cut you off and sometimes we got dumped. A couple of too many shots evenings, a tough midterm, or an important paper later and we were fine. The stakes were low, so no big deal.\n\nReal world, new city, money tight, I tried to keep things casual. I went through a pattern of dating for a month or two, breakup, on the hunt for a month or two, back to dating. I wasn't ready for any real commitments and the woman could smell that on me. In another year or two, I should be pulling down much better bucks, so things would probably change. Danny started out in Seattle in a similar mode, but after a couple of years he began to start talking about settling down. Then he met Pamela. They went exclusive within a month, and she moved into his place a few months later. She and I got along OK, but I was \"Daniel's\" past and she was his future, so there was always some coolness between us. I did like how she dressed, very classy, very impressive. It seemed that I was heading to best man territory. \n\nAbout two months ago, Pamela was on a business trip. She ran into an old boyfriend and came back to the ultimate \"it's not you, it's me\" situation with Dan. When Pam and that guy were younger they weren't ready, but now they were both successful and still in love. She moved her things out of the condo while Dan was at the office and left the key with the concierge. \n\nThe weekend after the breakup was the last time I had seen Danny before today. He hadn't been mopey or depressed. He mostly was in shock. One day you're coming home to someone every night and you're thinking about shopping for rings, and the next thing you know, Grub Hub is delivering dinner for one. We didn't even get drunk. We decided last minute to drive across the border and get some skiing in.\n\nWe grabbed a table and looked out across the bay while we finished our beers. \"Jace, I really screwed up. I wasn't thinking, I didn't want to think. I've been working 70 hour weeks to stop myself from thinking. I forgot something important, maybe I forgot intentionally. Buddy, I need a favor, a really big favor.\"\n\n\"What the hell did you forget Dan?\"\n\n\"Jason, you know my father's has been fighting cancer, and it has been a real ordeal for my mother. A few months ago, I told them about Pam, and how it was getting serious. A few days later my mother called me back to tell me that Dad's prognosis took a significant turn for the better. To celebrate, she was planning a vacation to Hawaii and wanted us to join them. They were going to take a week long cruise around the islands. She wanted us to come out a couple of days early and meet them. They would then board the ship while Pam and I would be on our own. We would then get back together for the night the ship disembarked. I think she was hoping the romantic setting would inspire me to propose.\n\nDude, I forgot all about it till a few days ago, when my mother called to tell me everything's been finalized. It's in three weeks.\"\n\n\"Danny, just tell them you broke up. Things happen, they'll just have to deal with it.\"\n\n\"You don't understand. Planning this trip was my mother's way of coping. Ten days in paradise, healthy husband, grown son, and a possible daughter in law as well. She would be devastated. She might even cancel the whole damn thing and be depressed and angry for weeks or months. I'm not sure if my father is ready for that.\"\n\n\"So, how can I help Danny?\"\n\n\"I want you to replace Pamela. Go on the trip with me.\"\n\n\"How the hell will that help? I've never actually met your parents. I've only talked on the phone with them a few times and accepted their Facebook invites. Other than their knowing their boy wouldn't be alone for the week, I don't see any benefit. It might even piss your mother off more.\"\n\n\"I said replace Pamela. Replace. After completing an X-Change process.\"\n\n\"X-Change? What is that?\"\n\n\"It's a very safe medical procedure that's been around for a few years. They've haven't publicized it too much because of all the insurance ramifications, plus it is currently pretty expensive. They temporarily or permanently rewrite your genetic code. Turn your Y chromosome to X or an X into a Y. Overnight they can turn a man into a woman or a woman into a man. It can be effective for a few days, a few weeks, or for the rest of your life. \n\nI want you to come on this vacation with me and pretend to be my girlfriend. I can tell my parents that Pam and I split up, but I met someone new. I think our natural rapport with each other will show. I can sell that. A few weeks after we get back, I tell them that we're better as friends and I go back to looking for a wife. I really think this will work.\"\n\nNow, I was in shock. I couldn't speak, I couldn't even look at him. I grabbed a waitress and asked for another beer and a double shot of Four Roses as well. Every time Danny tried to speak I just held up my hand and shook my head no.\n\nI did the bourbon as soon as it was brought to the table and then had a couple of sips of beer.\n\n\"You want...you want to turn me into a girl for ten days?\n\n\"Two weeks. They have a two week program. And it's on my dime. My parents are paying for the actual trip. You get an all expense, first class trip to Hawaii and get to spend it with your best friend. We can hike, try surfboarding, go diving, see the sights. What's wrong with that?\"\n\n\"But I would be a girl Dan. A girl.\"\n\n\"Yeah Jace, I realize that. That's why I said I needed a BIG favor. But remember, you were always the adventurous one.\"\n\nJeez, did he really have to bring that up? When it came to sex, I have always been open to new experiences. If the girl wanted to do a little S&M, I was OK to give it a try. Hands tied, blindfold, what the hell. In a hot tub, out in public, role playing, I'm game. \n\nA couple of years ago, this girl I was seeing brought me to a resort for the weekend. We took ecstasy and the next thing I know we're in a large suite where an orgy was going on. From what I could remember, my dick was only inserted into several snatches. However, I could not swear that every mouth I kissed was female, nor that every mouth that licked and sucked my schlong left lipstick marks. I am sure that with all the touching and caressing, a cock or two did find a way into my grasp. And of course, I revealed that to Dan.\n\n\"Holy crap Danny. Because I got stoned once and grabbed a couple of dicks that were not my own, you thought I would be ok with turning into a girl and spending a vacation with you in the same hotel room?\"\n\n\"Is that what's bothering you bro? Look, three things...first, I said this was first class accommodations. We're going to be in one bedroom suites the entire time. You get the bedroom, I sleep on the pullout sofa. We'll share a bathroom so close the door when you're using the facilities. Second...you're my best friend. No matter what you look like, I will know who you are, especially when you're doing me such a solid.\n\nLastly, I know how hard you work and how small your bank account is. How long will it be before you could splurge on something as great as this? Five years? Ten years? Dude, I'm talking Halekulani. I'm talking about hopping over to Maui. Doing the big island right. And none of it will cost you a dime. I'll even pay for any Hawaiian shirts you may want to get as souvenirs.\n\nLook, I know that I sprung this on you out of the blue. I don't expect an answer right away. Can you at least go for a consult at X-Change Corp? They can tell you how they do what they do and what you can expect. After you've talked it over with them, you can give me your final answer, yes or no. Would you at least do that for me?\"\n\nFive days later, I'm sitting in a small room that overlooks the Space Needle. I'm sitting on a very comfortable couch and there's a matching easy chair facing it at a ninety degree angle. The room looks like a psychiatrists office, which considering what they do here is probably not too far off. \n\nA refined and attractive older woman dressed in scrubs and a lab coat came into the room holding a tablet. \"Good afternoon Mr. Dixon, I'm Doctor Peter Jacobs. I'm one of the founders of X-Change Corp.\"\n\n\"Peter?\"\n\n\"Well, I go by Peri when it's my turn in the rotation. We have several associates who utilize our services for research purposes. It gives us a better understanding of what our clients will be experiencing.\"\n\n\"Are you married Doctor?\"\n\n\"That's one of the first questions I'm usually asked. Yes, in fact, I am married to a very lovely, understanding woman who has had a chance to live out a few fantasies. We are partners, best friends, girlfriends and lovers. I would say it's a fantastic marriage.\"\n\n\"And the staff members who go through the process, they're all volunteers?\"\n\n\"Of course. Mr. Dixon, we have found that no one is 100% anything. Men have their feminine side and vice versa. Under the right circumstances, many people would try some homosexuality.\n\nOur company is currently setting up offices in most major cities in North America and Europe. We've been keeping the promotion of our services to word of mouth, but when we decide the time is ready to publicize, we expect an overwhelming demand for our services. Especially for the temporary switches that you're looking into. \n\nFor the time being we can give a level of service and attention that we may not be able to sustain in the future. So, I can sit down with you and explain procedure and see if it is something that you can take advantage of. Today's session will be a verbal exchange of information. Should you decide to proceed, there will be a decent amount of paperwork. We already have some preliminary material given to us by Daniel Armstrong. So here's how this works.\n\nWe take a DNA sample from you. We then edit the strand and replace the Y chromosome with an X and introduce the strand into an inert virus. To prepare for the procedure, you take similar steps to preparing for a colonoscopy. No food or water after midnight. In the morning you take a strong laxative and in the afternoon you give yourself two enemas. Otherwise, the process can be a bit messy. You come into our facility in the early evening as the process happens overnight. Generally, it takes eight to twelve hours to complete.\n\nYou remove all your clothes and put on a hospital gown. We will insert an intravenous line which will be used to deliver medication as well as the virus. We will put you under with propofol but that will be switched to regular sleep medications after the process has been started. The changeover can be quite uncomfortable and you would likely pass out anyway. Once you are under, we will attach TENS devices to all of your major muscle groups. This will stimulate the muscles during the process and will avoid any prolonged soreness the next morning. We will also give you some mild pain medications before you awake.\n\nOnce prepped we introduce the virus. You will become feverish. We have cooling equipment that will be used to keep your temperature at or below 102 degrees. Your body will then begin to conform to exactly what you would have looked like had you been conceived with the X chromosome originally. You will lose body mass and height. Your hips will shift and expand, you will grow breasts. Your penis will shrink and become a clitoris and vulva. A body cavity will form, and your scrotum will revert back inside your body and grow into a set of ovaries. Some of the mass that you lose will burn off as the power source for the change, some of it will grow out your hair. You can expect five to eight inches of growth.\n\nOnce we detect that the change has completed we will stop all medications and remove the line. You will likely wake up within an hour. You will be thirsty. We will leave a bottle of Gatorade beside your bed. You will be alone but we will ask you to press the call button to let us know you're up. You will be a bit groggy so we will remind you to take a shower. You will be a bit rank because of how much fluid you sweated out. During the shower you will find yourself energized. When you're ready, there will be a robe for you to put on. \n\nThe virus can be manipulated so that its effects can last one day, three days, one week, two weeks, one month, or permanent. I was exposed to the one month virus. With all programs except the permanent one, your body will not have a female cycle. You will not ovulate or menstruate. With the permanent program the cycle starts immediately, but the body takes several cycles before eggs are produced. Even the permanent process could be reversed by going through a second program with one exception. Once the female becomes pregnant the process will no longer work. The process will not work on birth females that want to become male but have become pregnant at some point, even if they did not carry to term. We continue to work on that, but there's something about progesterone that locks the DNA.\n\nBecause all people are different we add a little cushion to the length of the change. Someone on the one week program may not naturally change back until nine days. The reversion can also be uncomfortable so we prefer you return to our facilities at a scheduled time which will allow us to initiate the change back and put you to sleep. Going from female to male, we will also introduce protein during the change but you will wake up hungry. Even though you will be back in your male form, you will likely have lost weight from before the original change. In the rare chance that the change back starts naturally before you can get back to us, it would start out with you feeling crampy and you might be lightheaded as well. You probably will have two or three hours before it gets real bad. \n\nThat's our program Mr. Dixon. I'm sure you have questions but first I have a few for you. Are you sexually active?\"\n\n\"Yes.\"\n\n\"Hetero, Homo, or Bi?\"\n\n\"Hetero.\"\n\n\"Do you know what gender dysphoria is?\"\n\n\"Yes. It is the belief that you were born into the wrong body. That you're a female trapped in a male body or a male trapped in a female body.\"\n\n\"Have you ever been treated for gender dysphoria?\"\n\n\"No.\"\n\n\"Do you believe you have gender dysphoria?\"\n\n\"No.\"\n\n\"Have you ever felt the urge to dress up in female clothing? Even as a Halloween costume.\"\n\n\"I dated this girl who was into role playing. One time she wanted to pretend we were lesbian lovers. She shaved my legs and chest and dressed me in stockings, a garter belt and a bustier. It was a fun night.\"\n\n\"Did that become part of your regular sexual activity with her?\"\n\n\"Nope. The next week I was a doctor and she was my nurse.\"\n\n\"Mr. Dixon, why are you interested in our services?\"\n\n\"Danny Armstrong is my best friend. He was recently dumped by his girlfriend and he thinks his mother will not be able to handle the news. He wants me to pretend I'm his new girlfriend for a family vacation they're about to take. He thinks our compatibility will convince his mother that everything is fine. I know that seems like a dumb reason when so many people have a legitimate reason for your procedure, but I trust Danny wants to do this for the best of intentions.\"\n\n\"Mr. Dixon, we have been doing these procedures for years. I have seen men who have been living as a female, taking hormones, complete woman's wardrobe come in, take the one month process as a trial run, change back, grab male clothes and never come back. I have seen men change to woman because they fall in love with a lesbian. The biggest surprise I have had is how many people do this to help out a friend. Pretend to be a girlfriend to help their buddy get into a frat. Be a date for their friend's high school reunion. Make another woman jealous. We even have nerd pacts. Two friends who have trouble meeting girls trade off and pretend to be each other's girlfriends. They're hoping that when other girls see them, they will be more likely to go out with someone who is a little popular.\"\n\n\"So, this can work?\"\n\n\"Yes, and we can help. I see that the vacation is ten days and that you would want the two week procedure. So, you wake up and it's day one. When you come out of the shower you will be greeted by our birth female counselor. She will be your guide in all things female. We will then send in our team. They will take your measurements and get you a basic set of clothes. Then you will get a manicure, a pedicure, and a hair styling.\n\nYour counselor will show you how to put on a bra, walk in heels, and sit with your legs crossed properly. She will teach you how to put on makeup. When you're ready she will show you how to wipe. Then she will take you out shopping. She will provide a checklist of what a normal woman will pack for a ten day Hawaiian vacation. Mr. Armstrong has already approved these charges should you decide to go ahead with the process.\n\nWe have a guest suite on premises where you will sleep. You will not be returning to your apartment until you are male again. Day two we bring in Mr. Armstrong. Together we will review videos of normal couples and go over their body language. We will have the two of you practice things like hand holding and sitting with his arm around you until it isn't awkward. We will go over subtle things that couples usually do like eye contact and a quick squeeze of an arm.\n\nThese will be long days. We want you to be successful. Day three is when you leave for Oahu. We would rather you come home a day too soon then a day too late. \n\nThat's our program. Do you have any questions?\"\n\n\"Well Doctor Jacobs...my main concern, um, well do you think any differently? Behave any differently?\"\n\n\"Because you're not a gender dysphoria patient? Because you're a healthy, sexually active, straight guy? I can speak to that. I volunteered to be part of our ongoing research because I believe in our project and I believe in the science. If we hadn't been successful, I could easily see myself not having a need to put on lipstick or pee sitting down.\n\nThere's one school of thought that once your brain is bathed in estrogen, you start taking on female thinking and actions. I can tell you that I still love my wife and still find her desirable. I still watch sports and I continue to be the main bug killer in my house.",
        "If there's any change in your perception I find that the main issue is that people treat you differently. Out in the world, men will hold doors for me, they let me on the elevator first. And you do get checked out and it is not very inconspicuous. When my wife and I are out and about, we've been hit on and we're both in our fifties and wearing wedding rings. Now, you're going to be on vacation and spending most of your time in Mr. Armstrong's company so you will probably be able to avoid most of that, but you can't avoid the eyes. Men do it without even thinking. You do it and I do it. Honestly, I still do it, despite wearing pantyhose. \n\nWe really don't have enough information to give you a decisive answer. I seriously doubt you will have a strong urge to read Cosmo and watch Real Housewives of New Jersey.\"\n\n\"So you don't think it will change me?\"\n\n\"Spending two weeks as the other sex is an intense experience. It probably will change you in some way, but it's impossible to say how. I don't know how you treat the woman in your life, but maybe after seeing the world through female eyes you will be nicer to them. Perhaps you will just grow the bushiest beard possible and start chewing tobacco. This isn't a risk free situation. We will do all we can to make this easy for you, but under the circumstances, you really are going all out for your friend. I'm sure he will understand if you decide to back out.\n\nMr. Dixon, I was part of a team that created something that I believe will help many people, now and long after I'm gone. I'm proud of what we've accomplished. Knowing that my main objective is to help you as well, I have to ask you...why the hell are you here? Why are you even considering such a drastic response to Mr. Armstrong's situation?\"\n\nThe room was quiet for a minute\n\n\"Dr. Jacobs...I have a pretty decent family. I'm the youngest, with an older sister and brother. I was treated well, but I never felt that they really understood me. It was like they didn't get my sense of...anything. Then I met Danny. He laughed at my jokes, he harmonized to my songs, and he could finish my sentences. We were always able to make each other's worst days better.\n\nIf Danny needed a kidney I would get tested the same day he told me and I would pray that we were a match. I know he would do the same for me. Is this that different? Two weeks, what is two weeks? Two weeks will come and go no matter what I decide to do. If I go ahead with this, two weeks later I'm back in the same skin I'm in now. I'll see some sights, have some fun, get some sun, and have some strange tan lines for a week or two. It's a lot to ask, and then again it really isn't.\"\n\n\"So, Mr. Armstrong, have you decided?\"\n\nI knew I was awake, but it was so difficult to open my eyes. I was so thirsty and I knew this would be my main motivation in finally getting moving. Once I got my eyes open, the first thing I saw was a bottle of red Gatorade. Gawd, I have to get up...Now!\n\nI lifted myself up on my elbows and swung my legs over the side of the bed. I sat up grabbed the bottle and chugged the cool liquid down. One dragon slain. I became aware of my surroundings. I felt sore, like I had spent the day before playing pickup basketball. I pressed the call button.\n\n\"I'm awake.\" Although scratchy, my voice was a much higher pitch.\n\n\"Good Morning Jaci. Remember to shower. Take as long as you want. Your counselor, Rebecca will be ready as soon as you call back in.\"\n\nJaci. That's what we decided my name would be. Close enough to my real name and it should be easy enough for Danny to use as well. \n\nI got out of bed and stood up. Most of the fog had lifted. The change was now a reality. I could feel the weight of my breasts. I seemed to be shorter. I felt my hair on my shoulders. I also reeked. I headed towards the bathroom. You're so used to your penis you don't even think about it when you walk...until it's not there. I didn't need to use my hands or my eyes to tell that it wasn't there.\n\nI got into the bathroom, turned on the shower and removed the hospital gown. While I waited for the water to get hot, I took my first look at myself in the floor length mirror. My first thought was that I could have been my mother's sister. I could see my mother in my eyes and nose, but the rest of the face was different and the hair was a different shade. I would guess that I had a C cup. My mother's side of the family was pretty well endowed.\n\nI was attractive. Actually, very attractive. I had nice legs. I turned around and saw a very shapely butt. I climbed into the shower. I just stood in the warm spray for a few minutes. Just like Dr. Jacobs said, I began to feel really good and strong. It was time to clean myself up, but I wasn't exactly sure what to do. Normally I would just shampoo and soap up. I had so much hair, how much shampoo should I use? I squirted about five times more than usual into my hands and began to apply it. I started on top but there was so much more, I wasn't sure if I could make it all the way to the bottom. I then realized I would have to do the back as well. I kept squirting more shampoo into my hands and applying until it felt like I got everything. \n\nI grabbed the soap and started to use it, which was also the first time I got to touch myself. My arms were much thinner. My breasts were...quite nice. Although large, they were pretty perky. I guessed this was a byproduct of being only a couple of hours old. Gravity hadn't yet grabbed these puppies. I was aware that breasts could be sensitive, even an erogenous zone, but the bar of soap didn't do anything for me.\n\nThe bar of soap didn't do anything for me down there either. There was a step in the shower so I raised my left leg and decided to go exploring. Yep, I had a pussy all right. It felt just the same as any of the woman that I had fingered. Two full lips, clitoris on top, a little tight. It felt weird to insert a finger there. I didn't try to insert too far. There wasn't any arousal, but there were plenty of times when you touched your dick and it wasn't sexual.\n\nI got back under the spray and washed off the soap and shampoo. I ran my hand through my hair and it got caught in some tangles. Only then did I realize that with hair this long I would need to condition it as well. Once again I went through squirt and apply until all my hair had conditioner. I knew it had to stay in for a few minutes so I gave myself a once over with my hands and eyes. I noticed that my fingernails had grown. Dr. Jacobs forgot to mention that possibility.\n\nI washed out the conditioner, turned off the water and grabbed a towel. I knew that there was some major process of toweling off the hair and wrapping it, but I was clueless so I just did the best I could. As expected, there was a robe hanging on the wall.\n\nI walked back to the bed and pressed the call button again. \"I'm finished with the shower.\" My voice was much better now but still sounded weird to be coming from my mouth.\n\n\"Ok Jaci, Rebecca will be there in a minute.\"\n\nI had too much energy to sit down and wait so I walked around the room to get used to my new size. The door opened Rebecca walked in. I had met her the day before when I was being prepped. \n\n\"Happy Birthday Jaci. Ten fingers and ten toes?\"\n\n\"Two tits and one clit Rebecca.\"\n\n\"Well, let's see them. Lose the robe. Our measurement person will be in any second now. I have a set of scrubs you can wear if you want.\"\n\n\"That's OK. Never been shy to be naked in front of woman before. Don't think this is a reason to start.\"\n\nI took the robe off and threw it on the bed. Rebecca stared at me for about ten second.\n\n\"Jaci...you're a hottie.\"\n\nLooking away from her I replied \"Yeah, I know.\"\n\n\"In the preliminary, you said you wanted to go for a stylish look. This works for that. It is easier to tone down sensuous. If you were plainer we would have had to slut you up to get the right look. We're good.\"\n\n\"I'll have to trust you. You know, you don't really think about your mother in certain ways, but looking in the mirror just now, I first realized that she's a real MILF. Really nice rack...just like her son. I guess my sister got my father's side. I would much rather have had a small B.\"\n\nThe door opened and a woman with a tape measure came in. All the numbers were entered into a tablet. She left to get me some clothes to wear. I put the robe back on as the hair stylist came in.\n\nRebecca told her \"We need something that will be very easy to care for. Something medium in length. Layered away from the face so she won't be constantly brushing back hair from her eyes. A junior vice president look.\"\n\nI had never sat for this long a haircut before. There was spraying, and snipping, and blowing, and brushing. But when it was over, I had sort of a regal look. Attractive, not sexy. A bit intimidating. Rebecca gave a look of approval. She stood over me with several items of clothing. \n\n\"Before you get dressed Jaci, we need to know what you want done with that.\" She was pointing at my crotch.\n\n\"What! What the hell are you talking about? No one's going to see down there. I want nothing done with that.\"\n\n\"Like most men, you don't pay attention to the subtleties. It is not about anyone seeing what's down there. It's about how you feel, how you present to the world on a subliminal level. You want to be perceived as stylish, as classy. Do you think that mess is classy? Well, maybe in Europe, but not at the Halekulani.\n\nAnd another thing, how do you know no one will see? What if Daniel's mother wants to take you to the Spa? Sure, you will be wrapped in towels, but things can slip, and trust me she will be looking. And lastly, you're going to Hawaii. That means beaches and pools. That means bathing suits. How sophisticated is it to have pubes sticking out of your suit?\"\n\n\"Ok, Ok. I'm going to need your help. This is something I never have really thought about.\"\n\n\"Well, Jaci...what do you like? What did you find attractive?\"\n\n\"I was never a fan of a big bush, surprise, surprise. But totally hairless looked weird to me. Trimming it into weird shapes like hearts or letters is way too cutesy. Would it be possible to remove the hair between my legs, you know, from my butt to my clit, and trim down the pubic patch smaller, but keep the triangle shape?\"\n\n\"Sure. Untie your robe and lie back on the bed. I'll have the cosmetologists come in. Jaci, it's a new sensation for you and it can be painful. It's really only a 2 or 3 out of ten, but because you know it's coming, it seems worse. It's over quick, and you won't need another in the two weeks. After it's over, you can get dressed and we can start on your mani/pedi.\"\n\n\"I don't think Danny knows about these subtleties. When this is over he's going to owe me a big ass steak from the Metropolitan Grill.\"\n\nIt hurt. Not punched in the balls hurt, but painful.\n\nAfterwards, I got dressed. I started with a pair of Jockey's for her. Pink and lilac stripes. Simple, cotton, comfortable. I then pulled on a pair of light wash Levi's. The measurements were perfect. They fit amazingly well. I was surprised that I didn't need a belt. With my hips flaring out, there was no way these would come off unless they were unbuttoned.\n\nI turned to Rebecca with more than a hint of dread. It was bra time.\n\n\"Jaci, you are about to experience something that most woman haven't. With all the measurements we took, your very first bra is going to fit you perfectly. This is a T-Shirt bra. It is tan colored, lightly padded, seamless, without an underwire. It supports without pushing up. This is as comfortable as a bra gets, but every bra gets annoying after eight to ten hours, especially to someone who has never worn one before.\n\nI want you to take the bra and put it on backwards with the cups facing backwards and the hooks in the front below your breasts. Do not put your arms in the straps yet. Fasten the hooks, spin the bra so the cups are now in the front, place your breasts in the cups and put your arms in the straps.\"\n\nI did what she said but it didn't feel right, so I pulled the cups out and down and reseated the breasts.\n\n\"Good. That was going to be my next instruction to you anyway. Ok. Now we need to make some adjustments on the straps. How does it feel?\"\n\n\"Ok, I guess. Nothing's pinching or too tight. It's actually nice that they're not pulling down, that they're supported.\"\n\n\"Welcome to female 101. You should know that almost all woman your age don't put on a bra that way. We can practice the real way later today, but I'm not sure you will have the knack down by the time you're heading to the airport. Now this is important. If you have to continue to put your bra on this way, make sure that Daniel's mother doesn't see you. \n\nThis is a good bra to start things off. We will need to stop at Victoria's Secret or Soma to get you the rest.\"\n\n\"It's only a ten day trip. How many bras do I need?\"\n\n\"More. Several more.\"\n\nI put on a blue T-shirt as another cosmetologist came in.\n\n\"Jaci, you're going to find this hard to believe but most woman find the pampering in getting a manicure and pedicure to very relaxing. We all know how to do it ourselves, and in a pinch we will, but having someone do it for you is very satisfying and looks much nicer. \n\nI have picked out for you a strawberry color. The reds are really the most attractive, but there are certain reds that are just too provocative. This one's more subtle. \n\nNow this is important. If your nails get chipped or break, every hotel you're staying at will have a salon. Should you go with Daniel's mother, have them change the color to a mauve, or clear with French tips. Tell her that when you go back to work there's an executive meeting that you need to prepare for. Now, repeat that back to me.\"\n\n\"Mauve or French tips, executive meeting.\"\n\n\"Excellent. I've just texted that information to your new phone.\"\n\n\"New phone?\"\n\n\"You're not bringing Jason's phone to Hawaii. We got you a phone with a bunch of girly apps loaded. I'm in your contacts along with Peri Jacobs and several other female staffers. Later we're going to take some pictures of you. We're going to Photoshop you into some pictures of Daniel and upload them to the phone. Fortunately, the story is that you haven't been dating that long so we won't need to do too many. We'll include some local's images of Seattle as well. We will play around and get a few pictures of you onto his phone too.\"\n\n\"Pretty damn thorough.\"\n\n\"It's the little things that sells the big things. Enjoy your treatments. I have to run out and get you something.\"\n\n\"What?\"\n\n\"You'll see. Later.\"\n\nThe ladies doing the manicure and pedicure set up a laptop and played several how to videos on putting on makeup. They also brought equipment that dried the polish quickly.\n\nRebecca came back holding a shoebox.\n\n\"I have in here a beige female loafer with a modest one inch heel. That's a good started shoe but we'll get into larger heels later. You lost 3 inches in height. You're now at 5 foot seven inches. Daniel is 5' 11\". That's not too bad a height difference, so we can get away with a 2 or 3 inch heel.\n\nHow were the makeup videos?\"\n\n\"Complicated.\"\n\n\"As soon as your toes are dry, we can hit the mall. You'll get some one on one instruction at the Estee Lauder counter. I think we'll go with Beautiful as your perfume. Very elegant with a slightly different smell depending on who wears it. We can try some others but I'm guessing you'll be overwhelmed.\"\n\nI walked around the room and down the hallway a few times in the shoes. It was different, something to get used to, but not too difficult. Right before we left she told me she had gotten me something else and tossed over a jeans jacket. Just after she parked at West Lake Center. She turned to me.\n\n\"Jaci...you're wearing jeans, which are not particularly tight or form fitting. You've got on a t-shirt, so you have no cleavage. You're actually showing a minimum of skin. The shoes you have on don't make your butt sway. Still, you're about to be in public for the first time as a woman. It can take a very long time to ignore the stares, and you don't have much time. Talk to me. Get it out of your system. I'm here to help you through this.\"\n\n\"Rebecca, this is one lesson that you didn't need to remind me about. I've been thinking about this moment since I agreed to do this. I even walked around this very mall last week, watching the guys watching the girls. Even when I was doing that, I couldn't help checking out the woman as well. I know that deep down, 99.9% of it is harmless, even if it leads to thoughts that I wouldn't want my mother to know about. I'm going to try to be pragmatic about it. Looks, glances and stares are not contact, not interactions. At least I'm not alone. I'm very thankful you're here. Just keep talking to me. That will keep my mind off of it.\"\n\n\"Look Jaci, I could use a latte and you probably should take the edge off with a glass of wine. Let's go find a place and I can show you the game plan.\"\n\nA few minutes later I was rolling my eyes on how good my white wine tasted.\n\n\"Yeah, we're still researching that. For the most part, the changeover doesn't affect your favorite foods, with heavily smoked meats the exception for male to female. But there does seem to be perceptible differences in other fare. We have found that converted females actually find salads taste better. Although many men can love white wine, our new women react exactly like you, especially with that particular brand, Cakebread's Chardonnay.\"\n\nShe took out her tablet and moved her chair next to mine so we could both view the screen.\n\n\"The next few hours will be grueling. We're going to be going to many stores and trying on a lot of clothes. And yes, you have to try things on. Depending on the outfit, you could be a size 6, 8, or 10. Here's is the shopping list I put together for a ten day Hawaiian vacation.\"\n\n\"Holy Crap!\"\n\n\"You're going to be spending three evenings with Daniel's parents. On those three nights you will need to be able to change into a second, dressier outfit. And well-dressed does mean dresses, although probably not for each night. I figure two dresses and a third just in case. During the six days you're alone with Daniel you can probably get away with one outfit per day, but I think three extra to be on the safe side. That means seventeen outfits but while they're on the cruise, you will be able to send out the laundry. That brings it down to about thirteen outfits. Your casual outfits can be some mix of t-shirts, tank tops, blouses, skirts, shorts, skorts, capri's and jeans. In the islands, you're going to want a couple of sundresses, but I can accommodate your sensibilities with a print maxi dress. One or two pairs of nice slacks would be in the mix for your evening wear.\n\nI'm figuring eight pairs of underwear. You're probably inclined to go with the boy shorts, but I would only suggest two of those plus two bikinis, two hipsters, and depending on the outfits we get, two thongs. Don't fight me on that please. Your outfits will also dictate what other bras we get you. Two, possibly three more, plus two sports bras for hiking and working out. You will probably need one or two pairs of yoga pants as well. There will be socks. Maybe pantyhose, for the fancier evenings. In Hawaii you can get away with bare legs in a skirt.\n\nWhich brings us to our most difficult subject. Hawaii means beaches and pools. You cannot confine yourself to only one piece suits. Mrs. Armstrong will think there's something wrong with you. You can get a one piece, and a compromise Tankini, but you are going to have to be seen in a bikini at least for one day. It doesn't have to be a thong or a micro. There are plenty of classy two pieces. Don't worry, we will also get you a cover up.\"\n\n\"Why would she think there's something wrong?\"",
        "\"Wearing one pieces, twice in a row? The first thing she may think is that you lack confidence in yourself, you a young, beautiful woman. She also might think that you're toning it down on purpose, to give a good impression. Or you have a skin condition, or you were once assaulted. You're unnecessarily raising her suspicions.\n\nNow what do you normally sleep in?\"\n\n\"I just leave my boxer briefs on and sleep in that. Naked if I have company.\"\n\n\"You're likely going to share a bathroom. We'll get you a couple of pairs of sleep shorts and a couple of sleep shirts with built in support. Your girls will thank you. If you had your sister's B, you could have gotten away with just a t-shirt.\n\nSo here's our strategy. Clothes first, swimwear next, then shoes, underwear, and finally accessories.\"\n\n\"Honestly Danny, I think the most clothes shopping I ever did in one trip before yesterday was two pairs of chinos, three shirts, some socks and a baseball cap. We bought more than that from the juniors department at Nordstrom's...or was it the misses department? Don't ask me what the difference is.\"\n\nAfter watching videos for most of the morning, while being forced to hold hands, Rebecca thought it would be a good idea for us to go out to lunch to get used to being a couple. I was trying to explain to him some of the subtleties he had not taken into account when he asked me for this favor. I had decided not to volunteer any information that involved hot wax.\n\n\"Jeez Jace. How much stuff are they making you bring?\"\n\n\"Jaci. You have to remember to call me Jaci.\"\n\n\"Sorry Dude. It's just that despite the girly clothes, lipstick, and jewelry, I can sort of see you in there.\"\n\nI was wearing the same jeans as yesterday, but with a lilac buttoned blouse. I had a jumping dolphin silver necklace around my neck and an amethyst tennis bracelet on my wrist. After much practice I had done a Rebecca acceptable job with lipstick, mascara, and eye shadow.\n\n\"I'm checking a suitcase and a garment bag. On the plane I'll have a tote bag and ... a purse.\"\n\n\"And the garment bag is for...?\"\n\n\"Dresses. Five dresses, three being evening dresses, one sun dress and one maxi dress. Also, two pairs of slacks and one pleated skirt.\"\n\n\"What's a maxi dress?\"\n\n\"It's a dress that goes from your shoulders to your ankles. Very comfortable. Casual, with a touch of elegance.\"\n\n\"Wow. You're really getting into this. You even ordered a salad.\"\n\nI slumped my forehead into the palms of my hands.\n\n\"It actually tastes good. It's a side effect. Never mind.\"\n\nWhen I looked up, Danny looked a little flustered.\n\n\"Dude, I want you to know how much this means to me. This is above and beyond even the best of friendships.\"\n\n\"Danny, you also have to stop calling me dude. JAY-CEE! Actually, you're going to also figure out how to throw in a honey or babe every now and then. Really Dan, you're better than this. What's wrong, what are you holding back?\"\n\nHe looked down at his plate with his chin in his chest.\n\n\"You're right. It's just that...you are so beautiful. I know that doesn't do anything for you and probably makes things a little awkward. I knew that you were going to be a girl, but I didn't expect this ... you.\"\n\nI waited a few seconds and then I playfully slapped him in the head.\n\n\"Listen Danny, I agreed to do this. Trust me, there have been a few situations come up that were unexpected, but now I'm getting motivated. I'm not going through all of this just to flop out. This HAS to work. I will make your parent's like me. Your mother has to leave Hawaii believing her son is in good hands.\n\nYou're a little uneasy telling me I'm beautiful? Danny...I'm freakin gorgeous. Beautiful makes this easier. Beautiful is first down on the two yard line. Beautiful is what Barbara Armstrong's son deserves.\n\nAt first, it was awkward to hold your hand this morning. But it's just a hand. And it's actually nice to hold a hand. This afternoon, Rebecca is going to make us do some other awkward things. I'm going to spin it in the same way, because we need to do these things to make all this work. So stop being a wuss and start being my boyfriend.\"\n\nDanny looked up at me and began to laugh. After that it became normal between the two of us. He told me about having to handoff some cases. I brought up sports. As we got up to head back to the X-Change facility, I said \"Damn!\"\n\n\"What's wrong?\"\n\n\"I have to go to the bathroom.\"\n\n\"So?\"\n\n\"I have never gone to the ladies room before. I've only used the one in my room.\"\n\n\"Can you hold it till we make it back?\"\n\n\"Don't want to risk it. Still not 100% sure of the equipment. Besides, we have airports, restaurants, tourist sites, and hotel pool decks ahead of us. Might as well get used to it.\"\n\nWhen I came out he asked me how it went.\n\n\"Well any na\u00efve fantasies we may have had about girls prancing about in their underwear and admiring each other's body parts are dashed. It's a bathroom, all stalls, and the doors are closed. Rebecca gave me the heads up to always first check if there's toilet paper before dropping your drawers. That was after the wiping lesson. Anything else you need to know?\"\n\n\"Was it cleaner in there?\"\n\n\"As far as I could tell, yes. No puddles, no pubes. I hear that some woman won't fully sit down at a public toilet, which probably causes more inadvertent spray. I checked, looked clean.\"\n\nWhen we got back, Rebecca continued our awkward boot camp. She had us sit on a couch with Danny's arm around me while she asked us questions to keep a conversation going. At one point, Danny was quiet for too long, so I asked him what the problem was.\n\n\"You really smell good.\"\n\n\"I'm wearing perfume, and...\" Rebecca interrupted.\n\n\"And she's going to be wearing perfume anytime that she might run into your mother with the exception of going to use the gym. She will wear perfume on the beach, she will wear perfume at the pool, and she will wear perfume on top of Diamondhead.\n\nAnd that segues into our next subject. Danny, throw her a compliment once in a while. Babe, you smell good. Your hair looks great today. Jaci, that blouse is pretty, is it new? Not constantly. Not every hour on the hour. Once or twice a day, in front of your mother or in range of your mother. Got it?\"\n\nRebecca then reached into a bag, pulled out some clothing and threw it at Danny.\n\n\"Go put on those athletic shorts. Jaci, change into that denim skirt that we got at Old Navy.\"\n\nDanny went into the bedroom and I changed in the bathroom. When we finished, Rebecca had us sit side by side on the couch.\n\n\"Ok Danny, put your hand on her thigh.\"\n\nHe hesitated for a second then dropped his hand on my right leg.\n\n\"Give it a squeeze, rub it a little. Nothing gropey, a little playful. Your parents are going to expect something a little more involved than holding hands. Yes, it's possessive, but a couple should be possessive of each other. And that means that you put your hand on his thigh Jaci. Same story, squeeze and rub.\"\n\nLike Danny, at first I just dropped my hand on his leg. I then gave it the tiniest of squeezes. I took a deep breath in order to dissipate the awkwardness. When I started to rub his leg in a small circular motion, a calm came over me. Suddenly, it began to feel right to touch him. That 'This is going to work' feeling came over me. I gave him one more hard squeeze and then slapped his thigh.\n\nRebecca had us change back and she decided we should walk to a close by restaurant for dinner. \"Remember to grab your purse dear.\"\n\nWe didn't even go half a block before she turned to us and raised an eyebrow. I grabbed Danny's hand and walked the rest of the way like that. When we got to the restaurant, Rebecca asked for a booth. She made us sit side by side and close. Half way through dinner she asked Danny if his pasta was good. When he replied that it was excellent she scornfully said \"Jaci, this pasta is great. Would you like to try some?\"\n\nHe repeated \"Jaci, this pasta is great. Would you like to try some?\"\n\n\"Now, feed her.\"\n\nWe both said \"Is that really necessary?\"\n\n\"Once. Wait till the food is really good or unusual. Then do it once, in front of the folks. Or, it could be Jaci feeding you Danny. Either way, take a quick bite, acting like it's the most natural thing for two people to do. Work out some signal for when and who. Now feed her and then you feed him. Or wait for desert, but it's going to happen.\"\n\nAfter dinner we went back to the facility. She did two more hours of only verbal coaching and conversation. No more touching. I was mentally exhausted so she told Danny to scram. \n\n\"No scrubs tonight. Try one of the sleep outfits we bought. We'll run a quick laundry in the morning so everything is fresh.\"\n\nIt was so good to lose the bra. I put on a magenta night shirt that had some support and a pair of pink shorts. Parents wake up first, parents knock on hotel doors. It was actually very comfortable and I was asleep within minutes.\n\n------------------------------\n\nShowtime. \n\nThe cab was pulling up to the Halekulani. My brain was going a thousand miles per hour. I was trying to remember all the things that Rebecca had taught me. She had also told Danny to use the flight over to fill me in on all the things about his parents that he had told Pamela. There were things that you tell a girlfriend that you may not tell your buddies from college.\n\nI also took to heart the final two things that she told me when I left. \"You're a girl, not a fake girl. No one is going to associate you with a brand new genetic procedure. If you make a mistake, or do something male, the worst thing that's going to happen is that people will think you're a weird girl.\" She also told me to remember to keep my knees together when I swing my legs to get out of the cab.\n\nRebecca had picked out my outfit. I was in a floral print, A-line skirt with a silk top. She also had someone do my makeup. \"You're doing fine with the casual, basic stuff, but you're going to be meeting Daniel's parents today. Let's look our best.\"\n\nThe cab came to a stop and I immediately grabbed my purse. Inside was a pack of Tic Tacs, lipstick, mascara, vials of other makeup, tissues, a couple of pens, two tampons (\"you never know who's looking\"), and my new phone in a wallet case. Inside the wallet were a couple of Jason's credit cards (\"for decoration only. Don't pull them out, don't use them. Use Apple Pay if necessary.\"), a fake gym membership card, a Safeway card, and the answer to one of my biggest questions, a fake driver's license. I had no idea how I was going to get on the plane till this morning. The license read Jacqueline Carole Mann. It turned out that X-Change had arrangements with the DMV. My new license was tied into Jason Dixon's license, so if Jaci got a ticket it would go on Jason's record. I asked them about the \"Mann\" last name. They said it was attempt at humor. All temporary male to females got the last name of Mann. Naturally, I asked about the temporary female to males. \"Actually, the first dozen or so temporary changeovers were Male to female. When we got our first female to male we went with the last name of \"Newman\". Guess we could have gone with \"Oldman\" for the male to females, but by then it was established.\" X-Change had also been able to get the plane tickets under my new name.\n\nThe Valet opened the car door. I squeezed my knees together, swung my legs out, and accepted his hand as I stood to exit the cab. Danny and I had practiced this move a few times at the airport parking lot. Once Danny confirmed that all the luggage had been loaded onto the cart, I took his arm and we walked into the hotel. A gentleman in a suit approached us. \"Mr. Armstrong? Ms. Mann?\n\n\"Yes, that's us.\"\n\n\"Good afternoon sir. I'm Mr. Hale. I will be expediting your check in. Please come with me.\"\n\nHe brought us to an area near a small pool of water.\n\n\"Please wait here for two minutes Mr. Armstrong. If I can get your driver's license and a credit card, I will go complete your check in and get you the keys to your suite.\"\n\nApparently first class accommodations actually meant first class. As he walked away I heard a woman's voice call out \"Daniel...Daniel!\"\n\n\"Ma!\" He met them half way and gave her a big hug. \"Omigod Dad! You look terrific.\" \n\n\"I hope you weren't expecting to see me in a hospital gown Danny boy.\" They embraced.\n\nHis father was in khaki shorts and a salmon Ralph Lauren polo. His mother had on a tan skort and a sky blue t-shirt.\n\n\"Well Daniel. You look fit, but a little lean.\"\n\n\"Some long hours at the firm Ma. I promise I'll eat plenty of Spam and pineapple while I'm here.\"\n\nShe turned to me. \"And this must be Jacqueline.\"\n\n\"Good afternoon, Mr. and Mrs. Armstrong. So very good to meet you. Thank you so much for all you've done for us.\"\n\nJust then Mr. Hale returned.\n\n\"Ah, Mr. and Mrs. Armstrong. As you can see, I have found your son. Here are the keys to your suite.\"\n\n\"Thank you Mr. Hale. Would it be possible for you to get someone to bring our luggage up to the room? I haven't seen my parents in almost two years and we would like to catch up.\"\n\n\"Certainly Mr. Armstrong.\" He called over a bellman and I saw Danny slip him a twenty.\n\nI then took his arm and said \"Daniel, there's some nice sofa's near the window. Why don't we sit down and talk over there?\"\n\nMy calling him Daniel was our signal to carry out the plan we came up with on the plane. Once the four of us sat down I turned to his parents and said \"Mr. and Mrs. Armstrong, I am so very sorry that you had to learn about me the way you did. After all the two of you have been through, he just didn't want to burden you with the news of his breakup.\"\n\n\"Mom, Dad, this is all on me. You didn't want me to visit, so I got into the habit of being upbeat on my calls home.\"\n\n\"Son, I didn't want you to see me like that. Even though the prognosis was good, I lost a lot of weight and my hair. But your phone calls always were the best part of my week.\"\n\n\"Daniel, why didn't the two of you just pick up the phone and make introductions?\"\n\n\"Ma, Jaci was out of the country for work. She just got back last week. At that point I just thought it would be better for you to meet her in person.\"\n\n\"Where were you dear?\"\n\n\"Croatia. We have a team of developers out there that I needed to work with.\"\n\n\"Jaci? Daniel's best friend from college is Jason. He calls him Jace. That must get confusing.\"\n\n\"I know Jason. I actually work with him. That's how I met Danny.\"\n\n\"You work with Jason? Were you two ever...together?\"\n\n\"Oh, no Mrs. Armstrong. First of all, I don't date people at work. Besides, as soon as I met Jason I felt like a big sister, even though we're the same age. We're just good friends.\"\n\n\"Did you know Pamela?\"\n\n\"Yes Ma'am. I've known Danny before during and after Pamela.\"\n\n\"And what was your impression?\"\n\n\"That's not really a fair question. Things were cool between us. I think she recognized me as a threat. Still, she was a very smart and confident woman. Pretty, down to earth. I just didn't think they would last.\"\n\n\"You were a threat? You've been attracted to Daniel?\"\n\n\"Danny and I had bad timing. I had a boyfriend when we first met. Then he had a girlfriend, then I was seeing someone, and along came Pamela. If it wasn't for Jason, we would probably still be side stepping each other.\"\n\n\"Jason got you two together?\"\n\n\"A few months ago, the three of us were meeting up after work. At the last second he texted us that he had an emergency at the office that he had to deal with. He knew that I wasn't seriously dating anyone and he was tired of Danny moping about Pamela.\" \n\n\"So now you're the rebound girl.\"\n\n\"That's true, but I like to think of myself as the favorable circumstances girl. I think Jason would think of me as the It's About Time girl.\"\n\n\"And how are you and Daniel's circumstances?\"\n\n\"It's really going well, but I can give you a much better answer when you and Mr. Armstrong return from the cruise. I am comfortable enough with Danny to actually look forward to this uncomfortable situation. Thank you again Mr. & Mrs. Armstrong for this wonderful break.\"\n\n\"Please call me Barbara.\" \n\n\"And I'm Ted. So we figured that we would all be a bit jet lagged, so we think we should have dinner at the hotel's casual outdoor place early tonight. They have live music. We have reservations for their fancy place for tomorrow night. Why don't the four of us take a walk around the resort to get our bearings?\"\n\nShowtime...and this time, I was the show.\n\nThat's probably an exaggeration because of how much I've been dreading going out in public in a bathing suit. Actually, most of the other girls at the pool were showing a lot more skin as I just couldn't do a bikini my first time and went with the blue one piece. I also had a cover up for walking round the resort although it was somewhat sheer. I did get a good look at myself in the bathroom's full length mirror. I was eye candy, so not all the stares were in my imagination.\n\nTo deflect any nervousness that I was projecting, I told Barbara that I was uneasy about my \"Seattle Tan.\" She replied that it was better to be a bit pale than a lot burnt and told me to get some SPF 30. By the time I finished the Mai Tai Danny got me to give me the courage to leave the room, there wasn't four lounge chairs together, so we ended up by ourselves. That was fine by me as this was really the first time I could relax since check in.\n\nAfter touring the resort with Danny's parents, we finally got to our suite. I immediately began unpacking and planning. I was trying to figure out what to wear for dinner.\n\n\"Why do you need to change? Dad said the place was casual.\"\n\n\"Rebecca said that I should change. I don't need to shower, and I can keep the makeup on, but I have to change clothes. Besides, your mother will change, so I need to change.\"\n\n\"My mother probably changed as soon as she got to their room. She won't change again.\"\n\n\"She is spending an evening with her son's new girlfriend. She'll change.\"\n\n\"What can we bet?\"\n\n\"We're in Hawaii. Let's bet a Mai Tai.\"\n\nWhen we met at the restaurant, Barbara was now wearing a floral sun dress. I had gone with white capris and a sleeveless denim shirt. The evening went well. They asked me a lot of questions, so I stuck as close to the truth as possible. I had to change what college I attended, so I borrowed some stories from people I worked with who had also gone to technical schools. I was still amazed how good Chardonnay tasted.\n\nJet lag was the reason for ending the evening early. When we got back to the room, I had to wash off the makeup and change it to my sleep outfit. By the time I left the bathroom, Danny was out on the couch. I closed the bedroom door and was unconscious as soon as my head hit the pillow.\n\nWe woke up to our phone alarms. His parents had arranged for an early private tour that took us to the top of Diamondhead and then to Pearl Harbor. Our guide was very chatty which took the focus off of me.\n\nSo now, as Ted said \"We can relax by the pool and then get ready for our fancy, schmancy five star dinner.\"\n\nAn afternoon in paradise. Barbara was reading a book. Ted was sipping a beer. Danny was in the chair next to me with his air buds in. I was stretched out, sunglasses on, listening to some pop on my headset, decent buzz going, under mostly clear skies. \n\nAfter ten minutes with just my thoughts, I began to have concerns in two areas. Physically, I had a very warm sensation which had nothing to do with the sun. It felt like it was generating internally rather than externally. It was a strange feeling that I've never felt before. I wondered if after all the massive changes only a few days ago, maybe something was off. Mentally, I had an overwhelming impression that I either had forgotten something or was missing something important. I just looked around the pool area, hoping that the answer would just pop into my head.",
        "My eye caught a young couple who had just grabbed some drinks and were heading back to their chairs. They both had big smiles on their faces and even though they weren't touching, they walked side by side very close to each other. When she sat down, he sat right next to her on the same chair. They were talking and sipping and laughing. They seemed to be nudging each other and then he turned to her and...HOLY CRAP!\n\nI had my answer but at the same time, that warm feeling seemed to double instantly. I tapped Danny's shoulder. He pulled out his buds. \"Danny, lets head down to the beach area. I want to try swimming in the bay.\" He gave me a questioning look, but I didn't want to say anymore in case his parents were able to hear us. I grabbed his hand and pulled him toward the water.\n\n\"What's going on Jace?\"\n\n\"Hold on a sec Danny. I want to try to cool off.\"\n\nI dove under the water and swam out about twenty feet and then swam back.\n\n\"Damn!\"\n\n\"What's wrong?\"\n\n\"I was feeling really warm and I was hoping I could cool off, but the water isn't cool enough to have much effect.\"\n\n\"Talk to me. You looked like you had something on your mind.\"\n\n\"I believe that Rebecca forgot to tell us something. Actually, she more likely intentionally didn't bring it up, maybe hoping we would figure it out ourselves.\"\n\n\"What is it?\"\n\n\"She made us practice all sorts of physical contact so that we would look like a real couple. We got used to holding hands, being close and all sorts of touching. But there's something that your mother would be expecting to see. Something that would seal the deal.\"\n\n\"What? What is it?\"\n\n\"Danny, you have to kiss me.\"\n\n\"Holy crap!\"\n\n\"Nothing major. Just a quick smooch. Something playful, something familiar. I know your parents are a ways off, but I can tell that she's watching us. If we've been dating for a couple of months, if you felt strong enough to bring me on vacation to meet the parents, your mother would expect something more than a shoulder rub.\"\n\n\"And you're OK with this?\"\n\n\"I told you before, all this must work. Really, it's just a quarter of a second, but it will calm your mother for the rest of the trip. Look, we'll make it something fun. I'll start splashing you. Then you splash me back and chase after me when I try to get away. You grab me, plant a fast one, and I'll try to push you into the water. You game?\"\n\n\"If you really think this is necessary. Sounds like a plan.\"\n\n\"OK. My initial splashing should get your mother's attention. When I splash you a second time it means that she's looking over here. You do your thing.\"\n\n\"Got it.\"\n\nI looked back to where the Armstrong's were sitting. They were a distance so our staging did not have to be perfect. I began splashing Danny. I saw a slight movement of Barbara's head towards us, so I splashed him again. He splashed me back and I took a few steps away from him. He caught up to me, put his arms around me, turned me towards him and quickly kissed me. When our faces separated I was frozen. Suddenly, I was aware of what that warmth I had been feeling really was. Although it radiated throughout my body, it centered between my legs. We stared at each other for several seconds, both of us breathing heavily. Then are lips crashed into each other again. We both pulled the other closer and tighter. With our tongues dancing in each other's mouths, and our bodies clasped to one another's, I felt Danny's cock growing. I pushed back and detached myself. I shook my head, stunned.\n\n\"Danny, I've got to be by myself. I'm heading back to the room. Tell your parents I wasn't feeling well, that I may have got too much sun.\"\n\n\"Jace. Wait. I...uh, I'm not sure what to say.\"\n\n\"Just give me some time alone. It's...umm, it's fine. Just need to clear my head.\"\n\nWe went back to the pool together. He went over to his parents while I collected my things and headed away. I walked through the air conditioned lobby, but I still felt feverish. I got to the suite and sat down on the balcony. I could see the pool area and spotted Danny. He was walking towards the little boardwalk that the resort had. I went back inside and grabbed my phone.\n\n\"Hello Rebecca, its Jaci.\"\n\n\"What's wrong?\"\n\n\"Have any of your clients reported any problems? Perhaps a hormone imbalance?\"\n\n\"What has happened? What are your symptoms?\"\n\n\"We're spending the afternoon at the pool. I'm wearing the blue one piece. As soon as I sat down, I began to feel very warm all over. I think it effected my thinking. As part of the show for Danny's parents, I actually thought it would be a good idea that we kiss. When we did, I realized that the warm feeling was arousal. It is so different from a guy. It got a whole lot stronger.\"\n\n\"Where are you now? Where's Danny?\"\n\n\"I'm alone in the room. Danny's still at the pool. Could something have screwed up during the process? Is there something I should do, something I can take?\"\n\n\"Let me ask you some questions. Scale of one through ten. You're at the pool. You're wearing very little clothing and so is everyone else. What is your arousal level?\"\n\n\"Two.\"\n\n\"You decide that you should stage a kiss. What is your arousal level?\"\n\n\"Four maybe five.\"\n\n\"When you do kiss, what's the number?\"\n\n\"For the first kiss, it jumps to an eight.\"\n\n\"First kiss?\"\n\n\"The first kiss was quick. The second kiss was the real thing. The second kiss turned things up to eleven.\"\n\n\"Ok, ok. So the two of you are now apart. What's the number now?\"\n\n\"It goes down to a five until I start thinking about the kiss and especially...oh gawd.\"\n\n\"What?\"\n\n\"Rebecca, I'm not the only one who was aroused. We were holding each other. I felt...I felt.\"\n\n\"Danny got hard?\"\n\n\"Yes. And when I think about the kiss and his erection. It's back to eleven. And I can't stop thinking about it.\"\n\n\"Ok Jaci. If you're not sitting down, I think it would be better if you did. As we explained, our process can be a very intense experience. We are still analyzing the data. So far, we do not have any way to predict how people will react. For the most part, people who go through our process remain the people they were. They may experiment, but when they change back they are still the same although with a broader view point. Some however, go down a path they never, ever thought they would go.\n\nJaci, there is no hormonal imbalance. Right now, you are exactly as you would have been if you had been born with two X chromosomes. If anything, your brain is reacting to the estrogen. Usually, the self is strong enough to deal with the shift in hormones. For reasons that we can't anticipate, your brain doesn't want to fight your new female nature.\"\n\n\"Is there anything that I can do? These feelings are so strong?\"\n\n\"Your aroused Jaci. You can take a cold shower, but from how you sound you would be spending half your time in the bathroom. You can get pissing drunk and hope that you can drown the feelings, but many times that just makes it worse. Besides, that's a tough one to pull off for another eight days. So you're basically down to the same two choices that all of us have. Handle it yourself, or get assistance.\"\n\n\"But that means...\"\n\n\"You're a grown woman. You know exactly what that means. \n\nI don't mean to be abrupt. You knew that you were going to wake up with a fully functional vagina along with all the usual erogenous zones. You should have at the very least considered what would happen if you got horny.\"\n\n\"I kind of did. I really didn't give it too much thought as I was thinking so much about dealing with his parents. In the back of my mind, I figured I would rub one out in the shower or maybe try to find a lesbian bar.\"\n\n\"Yep... handle it yourself, or get assistance.\"\n\n\"Thanks Rebecca. I guess I have some thinking to do.\"\n\n\"Give me an update when you can. I want you to know that I've always thought you were an amazing person to be doing what you're doing. I'm on your side. I will help as much as I can.\"\n\n\"Ok. I'll call you soon.\"\n\nI ended the call. I went back out on the balcony. I couldn't see Danny. Handle it myself or...\n\nI looked down at my hand. I didn't think that would ruin my manicure. I walked into the bathroom and sure enough the shower had a detachable spray head with a whole variety of settings. Handle it myself...I may not have had all the needed materials, but I had enough to get the job done. Or...\n\nI felt his lips on mine. I could still taste him. I could smell the mix of ocean, sweat, and cologne on his skin. And I could feel his cock growing on my leg. Right back to eleven. The thought of the shower head did not make me almost hyperventilate. In my head, I heard Dr. Jacobs say \"So, have you decided?\"\n\nI picked up my phone and texted Danny \"Come to the room\" and hit send. I waited about five seconds and texted him \"NOW!\" I waited another minute and texted him \"Alone.\"\n\nI was standing in the main room of the suite, near the sofa. I kicked off my shoes. I untied the halter of the bathing suit and rolled the rest to the floor. I picked it up and placed it on the edge of the couch. I then put the cover up back on. It was sheer. He will know that I'm naked underneath. I hope that was enough to avoid the words \"Are you sure?\"\n\nI was sure, and having been at level eleven since I texted him, I was also wet, and not from the pool. It wasn't a very sexy word, but I could feel the mucus escape my labia and begin to make its way down the inside of my thigh.\n\nI half jumped when I heard the key card in the door. He came in and was just staring at me. I had known him over eight years and had never seen that expression on his face. Inside my head I kept hearing \"It better be desire.\" We were still about fifteen feet apart. He stopped at the sink area and put down his key card and phone. Slowly he walked towards me.\n\nHe saw my bathing suit, thrown on the couch and gave me and even more intense look. He began to smile and stopped. I took a step towards him and stopped. We were now only four feet apart. I couldn't stop my eyes. I looked down to see something his bathing suit no longer hid. I was at a twelve when gravity took over. We kissed even stronger and longer than before. Our hands coiled around each other's bodies, feeling skin, muscle, and bone. There was no plan, no coordination. No do A then B, and circle around to C, back to A. It was pure animal. \n\nSomehow the cover up was gone and his bathing suit had been kicked halfway to the balcony. We were naked, passionately entangled with one another. Dan roughly lifted me up and then gently placed me on the couch. My right foot was on the floor, my left wedged between the cushions. We broke off our kiss with Dan continuing small pecks and nibbles down my neck and my lips and tongue at his ear. And then his dick slipped inside me. No hands, no help, it just found its way to my entrance and parted my lips. It was an amazing sensation, making me feel that I was now an extension of Dan. There was no number I could give this feeling. It was pure heat and getting hotter. He pulled out more than half way and then slammed back inside. I was wondering why he was moaning so persistently, but realized that I was making all that noise. He did the same move two more times and I went over the edge. Wave after wave of pleasure washed over me and I held tight to Dan to keep from falling.\n\nWhen I came back to earth, Dan was fucking me in a steady rhythm. Instead of just reacting, I was now feeling his dick almost pull out of me and then slide back inside. This was a much more intimate than sex as a man. He was within me. And it felt so great. I started moving my body to be in rhythm with him. Earlier, my arousal seemed to be throughout my body, but now my lust was centered on his down stroke when our friction was stimulated my clitoris. MY CLIT! There was also another area of passion, deeper inside. I adjusted my body and grabbed his ass to shift his angle slightly. Now I strongly felt him on each movement. The pleasure began to surge again. Dan began to drive faster and stronger. My excitement kept rising and I began to feel small twitches within my depths. Higher and higher the passion climbed until my pussy let go and I could feel muscle contractions throughout the orgasm. This was too much for Dan as he arched his back and shoved his cock as deep as it could go. I could feel it pulse as he came.\n\nAll of a sudden, the only sound was our heavy breathing together. With his cock still in me, he lifted himself up and looked down at me. For a few seconds, we both stared into each other's eyes, and then we said at the same time \"That was incredible!\"  \n\n\"Omigawd Jace, you had a female orgasm. I felt it.\"\n\n\"Dude, I had two.\"\n\n\"You had multiples? That's amazing!\"\n\n\"It feels even better than it sounds.\"\n\nWe then started laughing as he gather me up in his arms as we held each other tight. \n\nI began to feel him soften.\n\n\"Dan, I would really like to stay like this for the rest of the afternoon, but if you don't go get me a towel, we're going to seriously stain this couch.\"\n\nHe got up and headed toward the bathroom and I immediately missed the closeness. Doing my best to hold everything together down there, I also stood up. Danny threw me a hand towel, and I wiped up a little cum that had dribbled onto the cushion and also wiped up between my legs. I then got a bigger towel, pulled back the bedspread, laid the towel down on the sheets and planted my butt down on the bed. Danny laid down next to me and I cuddled up on his shoulder.\n\nI could hear his heart beat as my head went up and down with his breathing. I kind of went into a hypnotic trance. I didn't fall asleep but I didn't feel time moving. I was very calm, very content. When I came out of it, I was naked on the bed with a naked Danny next to me. Danny was casually caressing my hair, my shoulders, down to my hip. My eyes focused on his cock. \n\nWith the orgy, I was high and those dicks found their way into my hands, but I had not sought them out or let them linger. Now, I wanted to touch the flesh that had just given me so much pleasure. I reached down and caressed his flaccid penis. It was soft and warm and felt pleasant to explore. Danny began to fondle one of my boobs. \n\nWhen a woman would touch my chest, it was pleasing, but it didn't do any more than her rubbing my arms or shoulders. Danny's playing turned my motor on again, especially when he lightly pinched my nipples. My rubbing was having an equal effect on him. He was getting hard, in my hand. What an amazing feeling. I was creating this, this was my erection. I felt how his balls were pulled tighter to his body. I took the tips of my strawberry red nails and delicately scratched the bottom of his scrotum. He softly moaned. I stroked his shaft till he was fully hard. Apparently, I hadn't used up all my womanly fluids as I felt like I was practically gushing down there.\n\nI lifted up my body and straddled him. I reached back and took hold of his cock. I rubbed the tip up and down against my lips. Then I sunk my pussy down until he filled me up. This time, I was in control. I rose and dropped, up and down. In this position, Danny was able to really give my tits a workout. He rubbed and squeezed them in the same rhythm as my movements. I began to have little orgasms. I knew that he would last longer so I started moving faster. Danny pinched my nipples really hard and I moaned loudly and came.\n\nAlthough slower, I continued to fuck him. Danny raised me a bit and sat up with his back on the headboard. I kept on humping him but now his face was in my breasts. He sucked back and forth on each nipple. His hands pushed on each tit with his face in the middle. Then he lifted his face up and began to kiss me. My god, we were fucking and breathing together, like we were just one entity. He too moaned loud as I felt him let go, as I came again.\n\nWe rolled to the side and collapsed in the bed. My tits hurt, my legs hurt, and I felt wonderful. This time, I did fall asleep. When I woke up, Danny was spooning me and the clock showed we had 45 minutes to meet his parents for dinner. I roused Danny awake and told him I had to grab a quick shower. He looked at the clock and said that we needed to shower together to save time. I said ok, \"but no more fucking. We'll be late.\"\n\nWe didn't fuck in the shower but there was a lot of soaping up and grabbing. I got out and wrapped a towel around me the way Rebecca had shown me. I took hold of a brush and the room's hair dryer and tried to replicate what I had been taught just a few days ago. I worked on it till it was presentable. With a practiced hand I put on my makeup. I stopped for a second and just looked at the mirror. I was so pretty. And I felt pretty. \n\nDanny was sitting on the bed in a dress shirt and slacks about to put on his socks and shoes. I walked over to the drawer where I unpacked my underwear.\n\n\"Hey Daniel, I didn't think I was going to wear these, but I think you deserve this.\"\n\nI dropped the towel and his eyes got wide. I stood naked in front of him, in full makeup and proceeded to slip on a black lacey thong. \n\n\"Oh, that isn't even close to fair.\" He reached for me and pulled me close while he massaged my ass. I playfully slapped him. \"I've got to finish dressing.\n\nFeeling sexy, I tried putting my matching bra on the correct way. It took me three tries, but I don't think Danny clued in on my awkwardness. I then slipped into this Champagne Lace sheath dress that Rebecca said made me look elegant.\n\n\"I never thought I would ever say these words...Danny, zip me up.\"\n\n\"Oh my, Jace. You look stunning.\"\n\n\"Yes, WE do. But Danny, you've got to call me Jaci. Don't screw up in front of your mother. Go put on your jacket\"\n\nWe left the room and went down to the lobby. When the elevator doors parted I took his arm. We must have looked like a striking couple. Up ahead, I saw the Armstrong's. Barbara turned and said something to Ted and he had a quick laugh. When we got close, she had a pirates smile as she asked \"Feeling better dear.\"\n\nShe knew! Was it how I walked? Was it the closeness? Was it a thousand other subliminal messages? Somehow she guessed correctly that her son and I had been screwing the afternoon away. Ted looked like he just saw his son hit a bottom of the ninth homer. My face probably matched my nails.\n\nBarbara said \"C'mon Jaci, you look like you can use some wine.\"\n\nWe then proceeded to have a truly wonderful evening. Barbara started out with Chardonnay before switching to foo foo drinks. Ted was sucking down the scotch while Danny discovered a taste for Singapore Slings. The food was French and delicious. The laughs were plentiful. \n\nBarbara and Ted had arranged for another early morning tour of Kualoa Ranch so Ted could see where all them Hollywood films had been filmed. They wanted to be sure they would get back in time to board their cruise. So Dan and I stumbled back to our suite where he barely had time to unzip my dress before he passed out. I did the same a minute later.\n\nI woke up in the middle of the night, tore off my thong dashed to the bathroom and emptied my bladder. I fell back naked into bed with Danny who had somehow removed all of his clothes as well. The next time I woke up the room was glowing from the sunrise. I wasn't hungover, in fact I felt awake and amazing. I looked over at Danny's naked body and had a thought. My thought led to a conflict in my mind. The struggle that I was having wasn't whether I wanted to do it. I wanted to because I know how great it is to be awakened that way. It was whether or not I could do it well. Then I remembered what we used to say back in our college days. It was like pizza, a bad one was still pretty damn good.\n\nI pulled back the sheet so he was completely uncovered. I crawled down his body and reached for his dick. I stroked it a couple of times and then I started to kiss it. I alternated tiny licks with sloppy kisses. Then I opened my mouth and sucked the crown in while swirling my tongue all around the head. ",
        "\"Holy shit, holy shit!\" Danny was awake. I started to slowly bob my mouth up and down. I then pulled off and began licking the shaft like an ice cream cone. Once it was good and moist, I popped it back in my mouth and sucked and swirled while my hand started to jerk the shaft. I quickly realized that this was just a variation on a French kiss, with his dick substituting for a tongue. So while I bobbed I also played tongue hockey. I've been told that I'm a good kisser.\n\nI was still jerking the shaft up and down with one hand and with the other I reached down and repeated the little scratches on his sac that drove him crazy yesterday. His breathing was getting very heavy. I knew he was getting close. He was pumping his hips, taking a shot at fucking my face. I was bobbing faster, stroking firmer, I really desired this. Danny pulled back, deep into the bed and then pushed his hips up and exploded. I could feel his cock spasm as he cummed into my mouth. Jet after jet of liquid. After yesterday I didn't think he would have much left, but it was still a mouthful. I waited till he stopped and began to go soft. I removed his dick and swirled the warm liquid around with my tongue. It tasted fine, maybe even a little sweet. Perhaps the result of those Singapore slings. I swallowed it down.\n\n\"Good morning Danny. You are welcome! We got to get dressed.\"\n\nWe busied ourselves with finding clothes and doing our morning toilet routines. As Danny was finishing up, I sat down on the couch, in the exact spot where I got pounded the day before and made a gesture for Dan to sit down next to me.\n\n\"Danny, the last thing I want to do is to talk about what has been happening. We're on vacation. I'm going on pure instinct. What do people do on vacation? They push themselves, try new things, and have fun. That's all I'm doing. When you're back at home, you don't leave work to go zip lining. You don't eat out at fancy restaurants every night. You don't hang out at the pool every day.\n\nFor whatever reason, what happened has happened. I don't want to waste time looking for some deeper meaning. In about a week, I'll go back to my normal life. Vacation will be over. Till then, let's just live. With your parents gone, I'm no longer your fake girlfriend. I'm your real girlfriend. Just another young couple having a good time in Hawaii. Can you do that Danny? Can we just fully enjoy each other's company?\"\n\nHe reached out, pulled me close and kissed me deeply. \"Sure thing Jaci, baby.\"\n\n------------------------------\n\nDanny and I were standing at the portico of the hotel, waving goodbye as his parent's taxi left for the port. After another tour together, my competitive juices were fully satisfied. As far as they were concerned, their son was dating a wonderful girl that he was able to find after getting his heart broken. It had taken a highly unexpected turn, but I was fulfilled with the results.\n\nDanny grabbed my hand and began tugging on my arm. I looked up to see a lascivious smile on his face as he tilted his head to point back to the lobby. I giggled and then nodded. We floated towards the elevators, holding back the desire to run. We had the elevator to ourselves, so as soon as the doors closed, he spun me around, began to kiss me, unbuttoned my shorts, and stuck his hand in to grab my bare ass. When we got to our floor we actually did run down the hall to get to our room. As soon as we got inside, he picked me up, carried me to the bedroom, threw me on the bed, pulled off my shorts and underwear and exclaimed \"Payback Time!\"\n\nHe grabbed the back of my thighs, spread apart my legs, and pushed them down in order to raise my crotch. He then began to plant kisses all over my labia. With his tongue he opened up the lips and began lapping up my juices. Holy crap, this was an incredible new sensation. It was intense and tender, like slipping into a warm bath instead of taking a shower. He slipped his hands down so that his fingers spread the lips apart as he concentrated his lips and tongue directly onto my clit. The pleasure was exquisite. I couldn't figure what to do with my hands as I went from grabbing tightly to the blanket to holding Danny's head, to playing with my tits.\n\nAnd then he inserted a finger into my pussy, then two and began to finger fuck me. I began to continuously moan. I started to hump his face. He was licking my clit, fingering my cunt and with his thumb he started to massage my butt hole. I climbed past the point of no return. I just came and came. It seemed like it lasted minutes. He pulled his mouth off of me and said \"Best tasting pussy ever.\"\n\nHe quickly undid his belt and pulled down his shorts and underwear, positioned himself and slipped inside me. The combination of me coming down from an intense orgasm, with having a hard dick enter me, was the single best sexual sensation I had ever felt. I just laid back, closed my eyes, and relished the feeling of being fucked. I enjoyed the mixed sounds of the mattress being buckled, my pussy being squished, and Danny's loud breathing. I came again and then Danny filled me up with his spunk. We held onto each other, with most of our clothes still on.\n\nHe stood up and pulled up his drawers and shorts. \"Well, girlfriend Jacquelyn, what do we do now?\"\n\n\"Boyfriend Daniel, we're young, gorgeous, and on our own. Let's see what the concierge suggests.\"\n\nIt was past mid-afternoon, so they signed us up for a sunset dinner cruise. We went back to the room to shower off the sex and change clothes. Danny put on khaki's and a polo, and I wore one of my sun dresses. It was our first time out alone as a couple.\n\nThe cruise began as a party out on deck. Everyone was on vacation so they were happy and social. Over and over \"Where you from? How long have you been in Oahu? Where are you staying?\" Probably 75% of the crowd were married couples, so Danny and I stood out. We received the second wave of questions. \"Where did you meet? How long have you been dating?\" For the first time since we got to Honolulu, we didn't need to fool anyone. I could almost be myself except for wearing two inch heels and making sure my skirt didn't ride up when I sat down.\n\nAs the sun got close to the horizon, everyone stopped mingling and watched it set as couples. It was spontaneous and sweet. Dan put his arm around me and I instinctively snuggled up to his chest.\n\nGood times, good times!\n\nEnjoy the ride!\n\nHang loose!\n\nSix days in Utopia, three on the Big Island, and three on Maui. Spending time with your best friend in one of the most beautiful, adventurous, and exhilarating places on the planet. The conversation never lagged. The jokes were plentiful (he good naturedly called me a cunt and I called him a dickhead...well I've always called him a dickhead). No money problems (he's loaded). We drank, we sang...ok, we screwed every chance we got. I was having regular sex with my best buddy, but it was sex without consequences. No worries about pregnancy. No periods. No stress about diseases (he actually had more to worry about me, with him only having one girl in the past two years, but he knew I used condoms). No concerns about commitments. Maybe I would have a stray thought concerning my sexuality, but they were easily overcome by these mind-blowing female orgasms. Besides, once I was back on testosterone, I doubt I would be taking it doggie style again (yeah...we tried doggie style...and it was outdoors, off of a deserted hiking trail...and it was so good, we did it several more times).\n\nMost of the time when our clothes were on, we were the same friends as always. But there were moments when Danny seemed more attentive than normal, and sometimes he was very protective. I was probably treating Danny a little differently as well. From time to time, I would find myself just staring at him which gave me a warm feeling of calm.\n\nWe spent so much time together that there was very little chance to reflect about going back to Seattle. However, once we got to Maui, it turned out I was a lighter sleeper than Danny, so I was able to get up and go get coffee by myself. Over a cup of Kona I began to think about going back to my life. How was I going to return to normal when I had seen my best buddy's penis, both flaccid and erect? I had touched, groped, and tasted it. It has been inside me and he had ejaculated. I had swallowed his sperm. I found myself stoically sipping from my cup. Jaci had done all those things. When Jason comes back next week, there will be memories, but they will be her memories. As for Danny, he had been intimate with Jaci. His pal Jason had never been to Hawaii. I finished the Kona, poured one for Danny and headed back to the room to make some more memories.\n\nToday, our first day waking up in Maui was going to be an interesting day for me. Today was going to be the first day that I was really a woman and a girlfriend. The first couple of days in Oahu, I was basically playacting. Sure, we started to have sex, but it was more fun and games than anything else. We may have been a couple when we got to the Big Island, but I was more of a Tomboy. We did mostly outdoor things. A lot of hiking, snorkeling and biking. I wore shorts and t-shirts the whole time we were there. By the time we got back to our hotel, we were so exhausted, we just grabbed a sandwich and some beers and went to bed. We didn't even fuck at night.\n\nThe itinerary for today was different. Today, we were going to wallow in the luxury of the resort. I was going to spend a good portion of the day in a bikini down by the pool and beach. We planned to sip umbrella drinks and had even scheduled couples massages. Tonight I going to wear a flared cocktail dress with a fair amount of cleavage, as Danny had reserved a private table that overlooked the beach at sunset. In reality, Danny and I were going on our first date and for some reason I was enchanted.\n\nI dropped off the coffee with a semi awake Danny and headed into the bathroom. First I did my business. I did miss the ability to accurately aim, but sitting down was like a small window of meditation. Plus, I really felt like I emptied my bladder, where standing up I mostly felt that I had just a little left to go. I wiped out of new found habit even though my next step was to turn on the shower. I brushed my teeth while the water got hot and then climbed in. Washing my hair had gotten much easier after that first time, as I had a much better idea of how much and what to do with my hands.\n\nJust as I was finishing up on my hair, the door slid open and Danny joined me. He encircled me with his arms from behind and gently began to caress my breasts. I could feel his erection between my butt cheeks. He was nuzzling my neck from my shoulders to my ear. When he nibbled on my ear it drove me crazy and a small moan escaped. He tenderly pinched my nipples till they became erect. I reached down and grabbed his cock. I didn't jerk it, I just wanted to feel its hardness and warmth.\n\nWe were in a multi-head shower, but despite being enveloped in hot spray, I could still feel my pussy getting wet. Holding his dick, I turned around and we passionately kissed as he roughly grabbed my ass. We were rhythmically sliding our wet bodies up and down against each other. I separated from him, grabbed the hand rail and bent over from the waist. He lined himself up to me and plunged himself into me. \n\nLike I said, we enjoyed doggie style although this was the first time we had done it standing up. The high humidity and hot spray combined with our movements with each other was glorious. He had a tight hold of my hips and the pain was wonderful. My orgasm seemed to come out of nowhere and continued until Dan lifted me up with his groin while arching his back and groaning.\n\nWe detached and settled back into the mist of the shower. Between kisses we soaped each other up. We were both going to have extremely clean butts, and my tits would be immaculate. Trying to be subtle, I made sure I washed all the cum out of my snatch. I showered off and got out while Danny washed his hair. I wrapped myself up in a towel and went back to the bedroom to find my bikini.\n\nWhen Danny came out of the bathroom, he exclaimed \"I don't think I have ever started a day feeling this good.\" I was standing in only my bikini bottom as I was trying to unfold the top so I can put it on. \"And I don't think I've ever seen anyone look that beautiful.\"\n\nBlushing, I threw the top at his head.\n\n\"Rebecca helped me adjust this damn thing when we bought it. I wasn't sure if I would get the nerve to actually wear it, so I'm trying to remember how to put it on.\"\n\nHanding the top back to me he said \"Well, I think it somehow covers up your lovely boobs.\"\n\nSeeing his half chub...\"Thanks a lot dickhead. You need to put on your suit as well so you can put that thing away.\"\n\nI figured out my top and put on the cover up. Danny put on his swimsuit and threw on a t-shirt. Into the sun we went. When we got to the entranceway to the pool and beach, Danny grabbed my hand, leaned into my ear and said \"Courage Merry, Courage for our friends.\" Off we went to the two person lounge chair called a \"Casabellas\" that we had reserved in between the beach and the pool. I decided to try some liquid courage in the form of a Blue Hawaii. With a lovely buzz, I set off for the Pacific, no longer caring how many guys were picturing me naked. We swam, lazed out, and lunched on Hawaiian fish tacos.\n\nWe spent time socializing with other couples in the hot tub. Here were woman that the week before I would have been crushing on, and we were talking about where I liked to shop back in Seattle (so I channeled my best Rebecca imitation). We happily rubbed sun tan lotion onto each other's bodies. After the massages we napped in our casabellas. We rented a pair of aqua gliders and danced around the tranquil waters. When we finally got back to the room, we showered one at a time and vegged out entwined in bed with neither of us horny enough to do more than cuddle.\n\nEventually I found the stamina to get up and per a suggestion that must have affixed to my subconscious, I headed to the salon to get my hair and makeup done. Once there I was able to get an iced Kona that was the perfect fuel for the evening at hand. When I got back to the room, Danny had hijacked the bathroom, so I got dressed in the bedroom. When he came out he was dressed in a tan suit with a navy blue silk shirt and matching tie. We just stared at each other for about ten seconds. I then went into the bathroom to spray some perfume, but I was tingling down there.\n\nWhen we got to the restaurant, the Ma\u00eetre D said they were getting our table ready, but asked us if we would be interested in getting our photo taken. We both said yes at the same time. They had a photographer setup on a deck with the late afternoon Pacific in the background. The woman took both couples shots and single portraits, head and shoulder and full length. She said the images could be viewed the next day in the lobby. We were then escorted to our table and ordered wine just as the sun went below the horizon.\n\nOnce again, I lapped up the chardonnay. Danny had the filet and lobster and I chose the Mahi Mahi. We watched the sky and ocean slowly darken. We split a pineapple cake for dessert. By the time we finished the night had fully crept in. We decided to take a walk by the beach. We both removed our shoes and walked carefully along the shore away from the water's edge. Despite the beauty of our surroundings, the beach was deserted. We turned to each other and embraced and began to make out like two teenagers. When we stopped for a few seconds to breath, I whispered in Danny's ear the magic words \"I went commando.\"\n\nWe dashed to one of the casabellas with Danny taking off his jacket and throwing it to one side. I pushed him onto his back and straddled him while we continued to kiss and nuzzle each other. I reached down and undid his belt and unzipped the slacks. I pulled out his cock and with my dress draping over his torso, I lined him up and pushed him inside me. I had been tingling for over two hours so my first climax came fast. I continued to pump up and down on him, with my hands on his shoulders, and my head up high. I could feel him throb as he let go which sent me over the edge again. He pulled me back down and we kissed again.\n\nI pulled myself off of him, being mindful not to drip anything onto his suit. I sat on the edge of the cushion and he zipped up and redid his belt and joined me to look out at the water. He put his arm around me and said \"That may have been the best damn day of my life.\" I didn't say anything and continued to stare at the waves, but I thought \"Pretty damn good day.\"\n\nWe slowly walked back to our room. Danny was asleep in seconds. I picked up his suit, took off my dress and put them both into the dry clean bag and hung it up near the door. I got into bed, snuggled up as close as I could and it was lights out.\n\nAs soon as we entered the Halekulani lobby we were greeted by Mr. Hale.\n\n\"Welcome back Ms. Mann and Mr. Armstrong. I already had all your information on file. Here are your room keys. We have you back in the same suite as last week.\"\n\nDanny looked impressed and said \"That's amazing Mr. Hale.\"\n\n\"It's software Mr. Armstrong, and a willingness to use it. Mr. & Mrs. Armstrong send their apologies. They are out shopping, but would like you to meet them at 6:30 at our \"House without a Key\" restaurant, which is the place you had dinner on your first evening with us.\"\n\nI was glad they had decided to go casual. I had already packed the garment bag with all more dressy outfits, so I wouldn't need to touch that again for the flight back to Seattle tomorrow. And since we wouldn't see Barbara and Ted till later, I didn't need to change out of the white skort and fuchsia polo I was wearing. \n\nWhen we got back to the suite, while Danny was moving the luggage, I sat down on the sofa and did a once over for any stains we may have missed. I was feeling a little melancholy, so I went out on the balcony and stared out at the ocean.\n\nDespite our amazing relaxed day at the resort in Maui, we were back at it the next day. We were up early to do a dive, and from there we went zip lining. We went horseback riding on the beach, and found ourselves hiking the afternoon away. We found a secluded waterfall late in the day and since I was still in my tankini from the morning dive, we went swimming and were able to hike and climb around the stream. The day was hot and the spray refreshingly cool, so of course we ended up having sex in a hollow behind the waterfall. We didn't get back to the resort till after dark and still in our swim suits we hit the hot tub and had a liquid dinner. When we got back to the room, we finally peeled out of the suits and fell into bed naked and slept entwined in each other's arms.\n\nEarlier this morning, we woke up famished and had a huge island breakfast. We packed up, checked out but our flight wasn't till midafternoon, so we left the luggage at the hotel and like his parents we went shopping. Danny even bought Jason an authentic Hawaiian shirt. \n\nWe had a little more than an hour to kill, so I suggested we first stop off at the wine bar. Of course we ran into other couples there, so the time flew by till we had to meet his parents. They looked tan and happy and there were hugs and smiles all around. Barbara went over the cruise and was telling us about how good the food was but Ted kept talking about a hot dog place that he had found in Maui.\n\n\"They take a whole long roll, and spear it with a hot spike. They then throw the hot dog into the hole it made, squirt some toppings in, and serve it to you that way. It was amazing.\"\n\nWith dinner, we kept trading stories back and forth on all that we had done in the past week. Then, the discussion turned to plans in the week ahead and going back to work. All at once, I began to feel clammy and dizzy. I tried rhythmic breathing and sipping some cold water, but it wasn't getting better. I excused myself to go to the restroom. When I closed the stall door I was nauseous, but not enough to really throw up. I wasn't having any issues in the other direction, but I dropped skort and took a whiz and just sat there for a while till I was reasonably close to normal.",
        "When I left the bathroom, Barbara was waiting with a full glass of white wine. \"I sent the men to go bond, or whatever they do. Let's go sit by the beach.\" It was now night, so it was easy to find a table near the sand, with a couple of empty chairs.\n\n\"Jaci, are you feeling any better? Your face lost all color. I think you just had an anxiety attack. What's going on dear?\n\nI sighed and drank down a third of the wine. \"Barbara, this is the first vacation I have been on since being on my own. I've been using my time off the last few years for Christmas and New Year's and heading back home. Otherwise, I take a long weekend every now and then and head off to Vancouver or Portland, but nothing like the last week. Reality hit me. Tomorrow it ends. It has just been so wonderful.\" I actually felt some tears falling down my face. I held tight to the wine glass to keep myself from wiping them away.\n\n\"Are you sure that's all it is? Has anything happened between you and Daniel?\" \n\n\"Obviously, we're not fighting, so you're really wanting to know if we're getting serious.\" I downed another third of the glass. \"Barbara, I have known your son for a few years and he is a terrific person. We have always had fun together, even before we started dating. But...we've only been going out a couple of months. I'm a software developer, so I believe in linear logic. From that point of view, this vacation was not a good idea. One strong possibility was that spending so much time with each other so soon in the relationship, would drive one or both of us crazy. I'm happy to report we dodged that bullet.\n\nAnother consideration is that the trip would be fantastic, but that it would have more to do with beaches, food, wine, music, sunsets, volcanos, and waterfalls, and not the two people sharing them. Here, there's no laundry, no grocery shopping, no taking out the garbage. Logically, you wouldn't take a vacation like this till you've been seeing each other for at least a year. But I went with the intangibles, Danny's concerns about you and Ted.\"\n\nI then drained my glass. \"But what the hell, I'm nothing but the rebound girl.\"\n\n\"Or maybe you are the 'It's about time' girl. Jaci, you strike me to be a very smart as well as sensible person. You're right, this was a risk, and it still could blow up in your faces. But I know Daniel. With his other girlfriends, and especially with Pamela, he was always very reserved around us. With you, he is much more relaxed and I don't think it has anything to do with the weather. There's a happiness between the two of you, but more important, there seems to be trust. Trust is much more difficult to achieve, even for couples together for years. That doesn't go away just because you have to load the dishwasher.\n\nBy the way, sometimes the couple who met in middle school spend the rest of their lives together. Sometimes the blind date turns into five children and thirteen grandchildren. Sometimes, two people locked up in the friend zone find a way to a tux and a white dress.\n\nLook, I know I'm the mother of the guy you're seeing, and you make him happy, so I want that to continue. And I don't know you well, but you seem like a person that I can get along with. I would like that to continue as well. Looking ahead, I can understand why you would be anxious. So, take a little breather. Be a little selfish. Go out and get drunk with the girls. Do what you need to do, but remember, today, this week, things were really good. \n\nNow, this old girl is heading back to her room to listen to her husband snore for a while. Good night my dear.\"\n\nAs I watched her walk away, I realized that I had achieved exactly what I had set out to do. She likes me. She thinks I'm good for her son. I looked down at my empty glass. I raised it and whispered \"Hip Hip for me.\" I took off my shoes and walked down to the water's edge. I stared out at the exact spot where everything changed. I replayed in my mind that second kiss. I smiled and thought \"Best laid plans, often go astray.\" \n\nI did a circle of the pool and also walked through the lobby. I thought about going to the bar and getting a last umbrella drink, but then dismissed the idea and headed to the suite. When I got in, Danny was asleep with his lamp on. I went to the bathroom and relieved myself of the white wine. I brushed my teeth and took off all my clothes. I placed them into the laundry bag I was using, and took out an outfit for the morning. I opened the drapes and then I turned off Danny's light. The moon was bright enough for me to see.\n\nI climbed under the sheet and wrapped myself around Danny. I reached down and started to stroke his dick. I placed my lips on his and as soon as he started to awaken he began to kiss me. I enjoyed the feel of making him hard. He pulled his head back and said \"Jaci!\" I replied \"Shh.\"\n\n\"Jaci!\"\n\n\"Shh, no words, no words.\"\n\nI climbed on top and began to kiss him again while I slid him into me. I wanted both his tongue and cock inside me while I slid up and down his body. We just moved rhythmically against each other for a long while. We were still kissing and humping when he turned me over and climbed on top. I threw my legs around his back. And still we kept fucking as neither one of us felt like climaxing. We rolled onto our side and we disengaged. I then rolled to my other side with my back towards him. He entered me again from behind. Now, while he was sliding in and out his hands were moving up and down, squeezing my hips then moving up to rub and pinch my breasts. He was now moving faster and more deliberate. When he finally let go, so did I. While we were still moaning I turned my head back towards him and planted kisses all over his face. He held me tight and softly nibbled on my neck and shoulder. I looked out at the Hawaiian night and fell asleep in his arms.\n\nI was awakened by the brightening Hawaiian sky which had no effect on Danny. I felt the dried cum in my small pubic patch so I went to the bathroom and turned on the shower. I peed in the shower and washed all over. After getting out I spent some time drying off as I did not want to waken Danny up with the hair dryer.\n\nI went into the living area to get dressed. As I was putting on the slacks, I realized that this was the first time that I had put on pants since I wore the jeans for dinner with Rebecca and Danny. Since then, it had been nothing but shorts, capri's, skirts, dresses, and bathing suits. I combined the slacks with a cashmere top which Rebecca said would be breathable in Hawaii and warm enough for Seattle. Once fully dressed, I looked in on sleeping Danny a last time, grabbed my purse and the rolling garment bag and left the room with my card key still inside. \n\nI strolled to the portico and grabbed a taxi to the airport. When I got there, I went to the counter and was able to transfer to an earlier flight. I had a little less than an hour to kill. I found an empty gate where a flight had just left from. With that privacy, I left Danny a voice text.\n\n\"Danny, I'm sorry I wasn't there when you woke up. I couldn't deal with a bleak ride with you to the airport and a gloomy flight sitting next to you. Jason will be back, so I decided to deal with that alone. Tell your parents that I checked my email and saw an emergency at work that I had to deal with immediately. Tell them I really enjoyed meeting them and tell your mother thank you for our talk last night. \n\nI took the garment bag, so you will have to deal with the other suitcase. You paid for everything that is in there so it's up to you to decide what to do with all that stuff. If you want, you can donate the clothes to X-Change as they can always use them for their next clients. There is a laundry bag, so you will need to get those cleaned before you decide what to do with the rest.\n\nDanny, my leaving early has nothing to do with you or my feelings about our vacation. It pretty much was the best week of my life. I have zero regrets.\n\nI do have a favor to ask of you and it's a pretty big one, so we will be even Steven. Please, please, please, allow Jason to let you know when he's ready. No calls, no texts, no surprise run-ins. I know that a few 70 hour weeks might be needed for you to be patient. Jason may need a couple of those as well. Your mother says that your trust in me is apparent. Please trust me on this.\n\nOne last thing, don't let my leaving early cast a shadow on our trip. We have some amazing memories, enjoy them, I know that I will.\n\nAloha Daniel!\"\n\nI hit Send and then called Rebecca.\n\n\"Hi Rebecca its Jaci.\"\n\n\"Hey girl. Are you having any problems?\"\n\n\"Just that I decided to take an earlier flight. Would it be possible to come by a few hours early to get the change back process started?\"\n\n\"I'll have to make a couple of calls but I think that it will be fine. My phone can track yours so I will know when you're back in town. Just grab a ride back to our offices and I'll meet you there. I'll text you in flight if there's anything you need to know.\"\n\n\"Thanks so much Rebecca, you're the best.\"\n\n\"We'll talk later. Have a good flight.\"\n\nThey called first class boarding and I no longer had to worry about some asshole hitting on me for an entire flight as they put me next to a retired nurse who talked about her grandchildren until we both decided to watch videos. I also had three last glasses of white wine so I was able to sleep away the last 90 minutes of the flight.\n\nWhen I arrived at X-Change Corp, Rebecca was there to greet me. She escorted me to the guest room that I woke up in.\n\n\"Jaci, before we start the process, I need to ask you if there's anything wrong that caused you to come in early. I noticed that you came alone.\"\n\n\"Nothing really wrong. If you look at the goals that we had, the trip was a great success. Daniel's parents like me, everyone had a great time. Jaci did her job. Vacation's over. Might as well...might as well let Jason come home.\"\n\nI could barely get above a whisper for the last sentence. Rebecca just looked at me for several seconds. She then picked up her phone and made some quick movements.\n\n\"The lab technician will be here in a minute to take blood. After they're done, you will need to undress and put on a hospital gown. This will be similar to your previous experience, but you only need to take a laxative, no enemas. While waiting for the results of the blood test, here's your phone. You can try to catch up. Where's the phone we gave you?\"\n\n\"It's in my purse. Here you go.\"\n\n\"Thanks. There's a laundry bag in the bathroom. We will get what you're wearing clean. Do you know what you want done with all your clothes and accessories?\"\n\n\"I only brought the garment bag that has most of the dressier outfits. Danny has the other suitcase. Since he paid for them, he should decide what happens.\"\n\n\"I'll contact him tomorrow. We will keep them in storage till he makes a decision. I'll be back with your test results.\"\n\nThey drew my blood and gave me the laxative. I was glad I had my phone back, because I spent about twenty minutes on the toilet. I decided to take a quick shower before putting on the gown. I had one last look at my reflection in the full length mirror. Damn, I was hot.\n\nWhile I waited I replied back to several texts, telling everyone that my phone had broken just before I went on vacation and that I would get back with them later in the week. My email had already been set up with an out of office reply, so I just saved the important ones to review later, but did not reply back yet. I listened to my voice mails including an interesting one from Angela, which I would deal with when I had some time. \n\nRebecca returned.\n\n\"Your blood work shows that you could remain as Jaci for another two days. I'm obligated to ask you this...Are you positive you want to change back now?\"\n\nI just nodded.\n\n\"Understood. Well, goodbye Jaci, It was very nice working with you. They'll be coming to put you to sleep soon.\"\n\n\"Good night Rebecca. Thanks for everything.\"\n\nI could feel some tears running down my face."
    ],
    "authorname": "FCat_X",
    "tags": [
        "gender transformation",
        "love story",
        "male to female",
        "x change",
        "x-change",
        "xchange"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/on-vacation-an-x-change-novella-ch-01"
}