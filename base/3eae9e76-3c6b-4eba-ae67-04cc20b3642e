{
    "title": "The Chance at Willow Manor",
    "pages": [
        "This is the tale of a man in his 40's, who loses his wife. Then, he meets a ghost (which, depending on your point of view about ghosts, may or may not require you to suspend your reality checks). That leads, in its own strange way, to him meeting the woman of his future, who is also in her 40's. This is primarily a romance. It just comes about in a bit of a different way.\n\nAnd, there is little actual sex, though it too, has a bit of a twist.\n\nThis is my entry for the Nude Day 2020 Contest, so please vote if you read the whole story. I really appreciate comments, as they confirm, or add perspective to, my awareness of what this audience appreciates, or dislikes. However, pedantic nit-picking comments that do not comment on the storyline will be deleted.\n\nTHE CHANCE AT WILLOW MANOR\n\n\"This is IT!\" she said, as her voice rose in pitch, to a near squeal. That was her first comment as we pulled into the tree-lined drive, and the manor house came into view.\n\n\"You haven't even seen the inside, Jill. They said no one has lived here since the 70's. It might be a wreck!\"\n\n\"Teddy, you can make it look so beautiful. Your architectural skills have made everything you have touched look spectacular...just, spectacular.\"\n\nI chuckled in my mind, as she had, once again, used her favorite word, \"spectacular.\" But, still in discouraging mode, I continued, \"Jill, there are 20 acres here! Think of all the grounds maintenance that'll be required.\"\n\n\"But, Teddy! Just think what it'd be like to sit on that upper porch in the morning sun. This is where I want to be...when...\"\n\n\"Jill, the renovations could take years...and you don't...\"\n\n\"No, I don't, Teddy. You know, as well as I, that they told us one, maybe two. But when my time comes, you can put me under that weeping willow, and I can look back at this grand house, and this porch.\"\n\nI stopped the car, and then went around and opened her door.\n\n\"Please don't talk about that,\" I pleaded, \"And I want to spend the time with you, not managing a major remodeling project.\"\n\n\"You'll still have plenty of time for me, and you'll be around a lot. You know it won't happen to me suddenly, so you'll have plenty of warning. Now please, put the key they gave us in that lock and let me see the inside!\"\n\nI sighed, knowing it would probably take a gaping hole in the roof for her to drop her enthusiasm back to a level that I could have any hope of containing. I opened the door.\n\n\"Oh! There it is, Teddy! The double curving staircase, the chandelier, the vintage skylight...this is why I said we had to move to the south. Nothing in Michigan was this spectacular!\"\n\nThe manor wasn't really as bad as my worst fears...just only as bad as my lesser fears. \"It will take a month just to get this place dusted!\" I sighed. I knew I was reaching. I could see all the work and upheaval ahead. I envisioned half-peeled wall paper, scaffolds and drop cloths everywhere, walls torn open for new wiring...nothing looking completed. Jill may not live long enough to see even a single room finished. And there I would be in the middle of this upheaval, holding her hand as all that charming personality, that I loved so much and had married her for, just seeped up into the ether and out of my life.\n\n\"Teddy, Please! This is everything I dreamed of. Just do your best! I will never complain, nor blame you for anything that's not finished. I just want to see its progress. Let me imagine how beautiful it will be when you're done!\"\n\n\"When we're done,\" I corrected.\n\n\"Maybe,\" she said, as her eyes wandered into the corners of the two-story ceiling.\n\n\"House: 1, My Future: 0.\" I grimaced to myself.\n\n=+=+=+=+=+=+=\n\nThe house took 2\u00bd years, and it was magnificent. I had retained much of it retained classic elements, while utilizing many modern details. Such as, indirect LED lighting, which added a flair that something built in the 1840's could never have hoped for. Jill got to see her kitchen nearly completed, the master bedroom and bath were far enough along to recognize their potential, the library was complete except for the shelving, and her grand entrance room only needed its final paint. Now, I prayed that she liked the view from under that weeping willow, where she had been for the last year.\n\nIt was such beautiful home. It was large, grand, sparkling, and...empty. Some evenings, I couldn't turn the TV up loud enough to drown out the emptiness of not having Jill in my life. Moments came, and were quickly dismissed, where I thought I should sell this place, and escape its memories. Yet I knew, in my heart, that I was committed to keeping Jill's dream.\n\nAnd it was Jill's grace that my mind replayed, too often, from the last time we had made love. It was the last time she had the strength to project her love of me through sex, as she gently rocked, forcing me deep inside her. As she began calming from the last orgasm I ever knew her to have, she whispered, \"Promise me one thing, Teddy.\"\n\n\"Anything, Jill...anything,\" I whispered back.\n\nShe settled on top of me, and spoke softly into my ear, \"Ted, you're a good man...but you're a great one when you're in love. Don't let your greatness end with me. Promise me you won't let my memory get in the way of you loving again?!\"\n\nAs I sniffled against her ear, I could only form a \"But...\" before further words failed me.\n\n\"No 'Buts' at all, Theodore Taegen!\" she said, squeezing her cheek tight to me, \"I'm not going to spend the rest of your life watching you be sad, or lonely, or unhappy, or unloved...or any other 'Un...'!\"\n\n\"I will try,\" I said, as my tears ran onto her cheek.\n\n\"Not 'will try',\" Jill commanded, \"Just 'will'!\"\n\n=+=+=+=+=+=+=\n\nThe last thing to get finished was my office. At 48 years old, I knew I had plenty of ideas left in me, and now I had my first proposals to complete, since moving to the South. I was hoping this home would be an advertisement for my talents.\n\nMoving out the last pieces of construction equipment, I put them in the storage area, which I had included in the newly built garage, behind the house. As I closed the doors, I looked farther back on the property at the old, dilapidated servant/slave quarters. As I had been continually busy with the manor house for so long, I'd never done more than walk around those quarters.\n\nI pondered what I should do with them. There were eight buildings originally, one larger than the rest. It, and three others, were still standing, though those three looked too feeble to be safe to enter. Should I try to preserve all of them, both for their character and history? Or, should I tear them down for safety and to reduce my insurance costs?\n\nI wandered out to the larger building to start my examination. I gingerly pulled on the door, and the hinges immediately broke loose. I lifted the door and moved it aside. Vertical blades of light knifed through the gaps in the simple plank walls, giving enough light for my eyes to see an old table tilted onto one corner from a broken leg. Another pile of finished wood shapes seemed to indicate the passing of a chair.\n\nThen, there was a moderate creak and groan from the wood somewhere in here, and I hurriedly scanned the room for any dangers of collapse. Seeing no problems, not even dust floating in those slices of sunlight, I took a couple more steps inside. The creaks and groans were louder this time, and I looked around my feet for indications of loose or weakened boards.\n\nWhen I looked back up, I froze. Her eyes shown like the headlights of a car in the night, as her skin was so dark. Despite my shock, my mind registered the beauty of her form, as ribbons of light played over her. And there was a lot to see, as she had no clothes. I could not see her face too clearly, for it was burrowed in the shadows, but those eyes glowed with fear.\n\n\"Who are you?\" I asked, in the most reassuring tone my shocked brain could compose.\n\n\"Please, Suh! Don't hurt me!\" lips below those eyes pleaded, over a backdrop of white teeth.\n\n\"I don't want to hurt you,\" I said, \"But I need to know who you are and why you are on my land? And without clothes?\"\n\n\"Suh,\" she started, faltering, \"My name is Emmi-Anne...and I live here. But, I don't what has happened!\"\n\n\"You live here?\" I gently asked, as my mind scurried about, searching for possible scenarios in which her presence would make any sense.\n\n\"Yes, suh!\" she announced, with some authority, \"but my home is so broken and I don't know how that happened. And my clothes are just gone, too, suh! Please, suh, do not think me a harlot. I am shamed to have you see me in this way!\"\n\n\"It's not safe in here,\" I proclaimed, \"Let's get you out of here!\"\n\n\"You own this land?\" she asked, with obvious concern.\n\n\"Yes, I do. I bought it over two years ago. Now let's get you out of this place before it falls around our ears,\" I said, as I extended my hand to assist her.\n\n\"If you own Willow Manor, then you own me, too, suh,\" she said, matter-of-factly, \"So, I do whatevers you please.\"\n\nMy mind reeled that she thought I could \"own\" her, but I kept my hand out and wiggled my fingers for her to reach for it.\n\n\"You want me to touch you, suh?\" she exclaimed, \"You, honestly, want my slave skin against my master's?\"\n\n\"YES!\" I barked, a bit too sharply, while disliking being called \"master.\"\n\nEmmi-Anne reached for my hand, and her fingers passed through mine. I don't mean her fingers slipped through my fingers, I mean the substance of her hand just passed right through my flesh! It left the faintest sense of an energy, rather like a glow, residing in my hand. I gasped, and stepped back.\n\nShe looked like she'd seen a ghost, as she pulled her hand quickly back, and the blazing white eyes became as round as they could go. \"Lordy! Are you come kind of spirit!?\" she nearly yelled.\n\nWe both paused, stupefied, as our eyes hunted in the other's for the truth of what had just happened. Finally, I cautiously said, \"I am no spirit. I'm as real as you are!\"\n\n\"How is such a thing possible!?\" Emmi-Anne exclaimed, as she examined her own hands.\n\nTaking a deep breath, to try to slow the adrenaline that raced through me, I offered my hand and said, \"Let's try it again. And,'No', no harm will come to you if you touch me. I don't have any concerns about contact with a black woman...or person.\"\n\nHer hand eased towards mine, in hesitating steps. She finally placed her fingers on my palm...and they disappeared into my skin. \"Lordy, lordy! This must be evil spirits!\"\n\nI was surprised that she didn't pull back. Instead she brought her other hand forward and tried to grasp my wrist. He fingers curled into themselves, with none of me in her grasp.\n\nShe gasped, \"It is my hand that hides inside yours! Your skin does not disappear! Am I the spirit?!\"\n\nMy mind desperately tried to make some sense of all this! For want of a better idea, and from some strange place in my thoughts, I asked, \"Emmi-Anne, what year is this?\"\n\n\"Well, 1852 of course, suh,\" she immediately responded, but then seemed to reconsider her answer, \"Maybe 1854, if you have owned the manor for two years.\"\n\n\"Oh my!\" I exclaimed, and stumbled back, bumping into the door frame. I coughed to clear my throat and thoughts. Then I said, quietly, \"Emmi-Anne, why don't you step outside with me?\"\n\n\"Yes...suh,\" she responded, caution filling out her tones. As she took her first steps towards me, from across the room, more light crossed over her. I caught glimpses of the beautiful features of her face, and her sleek, taught body. Her skin had a faint luminescence, and even iridescence, as she moved through light and shadow.\n\nI stepped back out of the door to make room for her exit, and then she stepped into the light. Her arm crossed her chest and the other arm had its hand over her pubic hair, in modesty. \"Good lord!\" she exclaimed, as her eyes hurriedly circulated among the remodeled house, the new garage, my Cadillac Escalade XL, and then behind her at the ramshackle remains of the slave quarters.\n\nHer mouth fell open for a long time, before she finally said, \"You have done many fine things with the manor in two years, suh! And that is a beautiful, but strange carriage!\"\n\n\"Emmi-Anne\" I said, instinctively stepping behind her and trying to grasp her shoulders to brace her...only to have my hands fall through her body with gentle waves of energy flowing around my hands. I sucked in a breath, both to prepare myself for what I would tell her, and to prepare for her reaction. \"That 'carriage' that you are seeing is something I bought new, just this year.\"\n\n\"Very fine, suh,\" she nodded, still in awe of the new surroundings.\n\n\"That carriage,\" I continued, \"was constructed in the year 2018... two thousand and eighteen. This is the year 2018! Do you understand? That is 166 years after the year 1852!\"\n\nEmmi-Anne's arms dropped, her modesty lost in the complexity of what she had just heard. Those arms searched, blindly, for purchase on the old horse trough that was still in front of her 'home'. \"One HUNDRED...and Sixty-Six...YEARS!?\" she exhaled, in disbelief.\n\n\"Yes,\" I confirmed, and I waited for the depth of her astonishment to subside. I couldn't help but notice the exquisite beauty of her body. Her flawless skin was so dark that you could have thought it some shade of black, were it not for the contrast of her black hair and areolas, demonstrating what blacker really was. I thought she was the darkest black-brown you could ever imagine, as she sat on the edge of that horse trough with her elbows on her knees, and her head shaking side-to-side in her hands. Her decent-sized and nicely rounded breasts only marginally drooped, and her hips were trim.\n\n\"So, I am...\" she paused, struggling with the incongruity, \"...186 years old!? I cannot be alive, then! I thought I went unconscious when master choked me, in '52. But, I must have died! Now, I am a spook!\" Her eyes came up, searching my eyes for more answers.\n\nAll I felt I could offer was sympathy, as I fought to comprehend the reality of all this. This felt nothing like a dream...there would be no awaking to find that it was only sleep-induced thoughts that had chewed on the edges of reason. As I watched her lost face, I could also see the faint iridescence residing on her skin, which played out like tiny rainbows, twisting her skin color to innumerable rich hues.\n\n\"Come on, Emmi-Anne. Let's get you inside, and get you some clothes to wear. Plus, whatever else may help,\" I offered.\n\nAs we both walked, her with uneven, wandering steps, she mumbled, \"All gone! Mum and Dadda! Sister Carry-Sue, gone. Everyone, gone!\"\n\n\"I'm afraid so,\" I quietly answered.\n\nShe suddenly stopped, and turned to look at me, \"Why am I here, Master, suh!!? Is it because Master - Old Master - murdered me when I denied wanting his manhood insides me!?\"\n\n\"I, honestly, don't know. I don't understand what has happened to either of us. But, I assure you that you are safe here with me, and no one...living anyway...will force you to...fornicate.\"\n\n\"Thank you, Master, suh. Your kindness does me great comfort.\"\n\nI let her in through the back door, into the mudroom and then the kitchen.\n\n\"This duh kitchen?\" she said, eyes wide, wanting to find anything familiar.\n\n\"Yes,\" I answered, \"I'm sure you will have many such questions. But, let me get you a robe to cover yourself. Then you can sit and rest your mind. Come on, the rest of the house should look quite different from when you last saw it.\"\n\n\"I was learning to cook,\" Emmi-Anne stated, \"but, I was never allowed in the rest of the house, suh!\"\n\n\"Then come...see it now. You can go anywhere you like...even without me.\" I informed her.\n\nStill in a seeming daze, she looked around, then whistled, \"This so fine! So, very, very fine! Like nothin' I ever saw!\"\n\nI led her to the family room, with the big, comfy leather sofa, and had her sit, while I went and got my wife's old bathrobe. I held the bathrobe open for her, and she looked puzzled. Realizing my mistake, I said, \"Turn around, and put your arms into the sleeves. I am holding it to make it easier for you.\"\n\n\"A right, nice gentleman you are, Master, suh. Thank yuh,\" she said, with a more confident and kind tone. I could feel the tug of her body on Jill's slightly small-for-her robe as she slid in.\n\n\"Please sit,\" I requested, \"We have things to discuss.\"\n\n\"I am at your mercy, Master. It is with the most gratitude that I serve you,\" she said, slightly bowing her head.\n\nI sighed, heavily, as I knew the information to follow would further rock her world, nearly as much as finding out that she was dead, \"Some very important things have changed since 1852. The most important, is that slavery was outlawed 13 years after you died. Therefore, I am not your master...no one is...and I, nor anyone else, has any ownership of you...no one except Emmi-Anne.\"\n\nHer face was a blank for a while. Then, a small smile once again revealed those white teeth. \"I am free?\" she whispered.\n\n\"Well,\" I said, perplexed, \"I don't think that the law applies to someone who is dead. But, as I have never known of a real ghost, I can only say that you're probably as free as you want to be...or can be, given whatever limitations being a ghost puts on you. You are certainly free in my home.\"\n\n\"Thank yuh, Suh!\" she exclaimed.\n\n\"AND,\" I emphasized, \"Please stop calling me 'SIR', like that! My name is Theodore Taegen, and people call me 'Ted', and you can, too.\"\n\n\"Yes, Ted...suh!\" escaped her lips, and she grinned at the error. That was the first time I had seen something approaching happiness show in her eyes. It was lovely. She added, \"My family call me 'Em' or 'Emmie'. I would be proud if you would call me that...SIR.\" She had clearly enunciated that last word, and laughed at my frowning face.\n\n\"A Joke! How wonderful.\" \"That's the last time you call me 'sir', right?!\" I laughed.\n\n\"I will try, s....TED! But, I have been doing it for over 180 years!\"\n\nI was surprised she was handling her situation with any humor and fairly calmly, as well. \"Do you know if you need to eat, drink, sleep, or go to the bathroom?\"\n\n\"Go to the bathroom?\" she repeated.\n\n\"Where the toilets are located,\" I informed.\n\n\"Never used one of those. But, all of those things you asked...just don't know. I only remember old master choking me, and then you walking into my home, or your home...or whatever you call that place you found me in. No knowing what being dead is like. I does have lots of questions!\"\n\n\"I don't think I have many answers about being dead, or about being a ghost. Ghosts have been rumors for many years, with no scientific answers.\"\n\n\"Then, I guess we learn together...if you willin' to let me stay?\" she asked, with her eyes dropping.\n\n\"Of course you can stay!\" I blurted, \"Hell, this was your home a long time before it was mine.\"\n\n\"I never owned it,\" she chuckled, \"but I appreciates your meanin'!\"\n\n\"Let me show you to your room,\" I said, standing, and gesturing in the direction of the back staircase.\n\nShe stood, but then looked at my face, in confusion, \"You mean I have a room...just for me? No one else?\"\n\n\"That's right,\" I smiled. \"Just for you. Top of the stairs, on the left. And it has a private bathroom.\"\n\n\"Ain't this wonderful!\" she chirped, to herself, as she went ahead of me.\n\nI showed her the guest room, which was next to my bedroom. \"Bless me!\" she exclaimed, as she sat on the bed.\n\n\"Tomorrow,\" I said, \"We'll have to get you some clothes. I think you are too tall to fit into any of my wife's clothes.\"\n\n\"Your wife! Where is she...Ted?\" a startled Emmi asked.\n\n\"She passed, a year ago, Em,\" I sighed, slowly, \"this house was her dream. She is buried under the willow.\"\n\n\"I'm so sorry, s...! You must have loved her very much to give her this fine home,\" she said, in a polite softness.",
        "\"Yes,\" I responded, \"As much as I knew how to love, she was my one and only.\"\n\n\"Never known love, myself. Always working,\" she said, \"But some boys on the plantation say they want to put their 'love muscle' inside me, the way the old master did. I say 'No' to them...couldn't say 'No' to old master.\"\n\n\"How horrible.\" I proclaimed, \"To be raped by the man who owned you, like that!\"\n\n\"Weren't so bad,\" Em said, \"Just raise my skirt, he pulls out his little bit, and then huffs and grunts for a couple minutes. Then, I could get back to work, after I clean him off me. Blessed I never had no little ones growin' in me!\"\n\n\"Well, women are not treated like that today, unless someone is breaking the law,\" I said, \"And, I'm sorry that you never knew the joy of lying with a man you were attracted to.\"\n\n\"Heard it could be somethin' real special,\" she said, with a knowing grin.\n\n\"Yes, it is really special,\" I agreed, \"Now, let me show you the rest of the house.\"\n\nFrom there, she was a barrage of questions, with me explaining flushing toilets, water faucets, electricity, telephones, television, computers, refrigerators and stove, disposals, trash compactors, and more. I was very impressed how quickly she grasped modern technology, amidst her astonishment, and how insightful her questions were. Clearly, and understandably, she was most curious about TV and the internet.\n\nNeeding to eat for myself, I asked if she was hungry. Emmi said she was not, which surprised her, as she said that she ate a lot, when she was alive. She said I should eat and not to worry about her. I pulled out a frozen meal and she wanted to know how it was cooked. I saw her try to read the package, but she had a hard time. She obviously read a little, but was very inexperienced. She understood the numbers, and with my guidance was able to cook my meal in the microwave. She laughed and grinned, as she felt how hot the microwave had made my food, in only four minutes.\n\nWhen my meal cooled down, I asked if she wanted to taste it, and she agreed. Taking a small bite, she looked puzzled when she chewed, then a bit alarmed. She went to the sink and spat it out. Coming back to the table, she said, \"Sorry, Ted. I tastes nothing, just nothing at all. Then, my body told me I should not swallow. That is not fair! I used to love food!\"\n\n\"Sorry, Emmi!\" I grinned, \"I guess we are both learning what it means to be a ghost.\"\n\nShe gave me a little pout, but the twinkle in her eye spoke of her humor.\n\n\"This has been quite a day, Emmi. I think I should get some sleep. Do you want to sleep?\"\n\nShe shook her head, and the hundreds of small ringlets of her hair shuffled to and fro, \"I think I would likes to watch that tee vee thing...if that alright?\"\n\n\"Certainly,\" I responded, \"There is a TV in your room, too. I will show you how to use it. But, you should be aware that many programs may shock you, as the morals of society have changed quite a bit. Also, many shows are just stories someone has made up, and are not really true. Just because it is on TV, or especially on the internet, does not mean it's the truth. Lastly, many of those stories are told like they happened in some past time, but were made for the TV in a later time. So, don't believe that all the things you see are as old they look.\"\n\n\"Likes a play on the stage, s...Ted?\" she asked, once again stifling her automatic \"Sir.\"\n\n\"Kind of like that, Emmi,\" I chuckled, \"Just don't let anything you see get you too worried.\" Then I showed her how to use the TV control.\n\n= = = = = = =\n\nI woke and turned over several times during the night, and each time I caught the sound of the TV before I fell back asleep.\n\nThe next morning, I awoke to faint TV sounds. I put my bathrobe on, and went downstairs. Emmi was in the family room, watching the big LED TV. Her long, dark legs were crossed on top of the coffee table. \"Morning, Emmi. Did you sleep at all?\"\n\nWithout even turning, she said, \"Hi Ted. No, I didn't sleep at all. Never needed to.\"\n\nI heard what she said, but also, how she said it. There was something a bit different. Some of the 1800's tones in her voices were subdued. Her speech sounded more modern, more concise, and she had even used a contraction. \"Did you enjoy the television last night?\"\n\nShe put her feet down, and turned to face me, \"This world is Amazing! What we know about the stars, medicine, and life is hard to believe. There are cars, planes, trains, and men have been on the moon! Then we have sports; the football, the basketball, the Olympics, and more! So many of the men are 'Black', as you call us, now! Black men are in government! I like this world!\" I listened and nodded as she continued her exclamations.\n\nHer transformation was amazing. It wasn't humanly possible. But, then she wasn't human, despite her appearance. She seemed to have absorbed everything and comprehended so much. Then her comments shifted, and caught me off guard, \"People have sex, just for the enjoyment, due to birth control! Men and women often show most of their bodies in swimsuits. This TV presents men &amp; women lying together. Even men with men, and women with women! This freedom is thrilling!\"\n\nEmmi continued, barely taking a breath (if she needed to actually breathe), \"I was 20 years old and thought I might never get married at that old age. Now, I may not age, but if I were alive, I could clearly hope to get married at any time and to someone of my choice! Plus I could expect to reach 80 years of age, and to have the health of someone of my time only dreamed of at age 50!\"\n\nI was smiling at her enthusiasm, while astounded at the changes in her. I was quickly reassessing what having her in the house would be like.\n\n\"And, I found out last night, that I am tied to you!\" she said, in a quieter voice.\n\n\"I'm not sure what you mean,\" I said, as my mind played catchup to this twist.\n\n\"I watched that Discovery story on the stars. So, I decided to walk outside and look at them. When I was about halfway down the driveway, I saw and felt myself starting to fade away. Moving back closer to the manor returned me to normal. So, I tried walking in a circle around the manor, and I started to fade, whichever direction I went, whenever I was too far from the house. Or rather you.\"\n\n\"Really?\" I said, \"As the driveway is 300 feet long, then the approximate limit of your range from me is about 150 feet. But why do you think it is me, and not the house that you are tied to?\"\n\n\"I could just feel it,\" she smiled, \"As I faded, I felt my connection to you fade, as well. None of my sensations were related to the house.\"\n\n\"Wow\" I said, in understated amazement. Not knowing quite where to go with this information, I punted with, \"Didn't you get cold out there?\"\n\n\"It was interesting,\" she replied, sitting back and looking rather thoughtful, \"I could sense that the temperature was cool, yet I didn't feel chilled at all. I realized that I have not felt either warm or cold, for my own comfort. But I can recognize different temperatures.\"\n\n\"Then we'll not need to buy you any clothes for different temperatures,\" I said, \"We only need to buy them for fashion or comfort.\"\n\n\"That brings up something else that's interesting,\" she smiled slyly, \"and leads to a question which I have for you.\"\n\n\"What is that,\" I said, unsuspecting of what was to come.\n\n\"While I was outside last night, a few of those cars passed by, and I got a faint sensation from the people inside. Then, a young couple steered into your drive to the manor, in their car. I was at the side of the house. The car went dark, but I could feel their passion for each other. However, I also sensed that they could not see me; that to them, I did not exist. It seems I only exist to you and Jill.\n\n\"Jill!\" I exclaimed, \"Did you talk to her?! What was it like? What...\"\n\nEmmi cut me off, with a grin and a wave, \"I cannot speak to her, nor her to me. Yet, I could feel her watching...and her contentment. Sort of the way I could sense the passion of the two people in the car, with the steam on the windows.\"\n\n\"But, you did say that Jill was contented and watching?!\"\n\n\"Yes,\" Emmi smiled, pleased to be able to inform me of this.\n\n\"Wow. Really, wow!\" I said, knowing my focus seemed elsewhere. Pulling myself back, I said, \"Oh...you said you had a question?\"\n\nNow Emmi got a bit shy, as she looked up at me with the tops of her eyes, \"Since I now know that only you can see me, that I can be neither cold nor warm, and that with what I learned from the television about current American behavior...then...would you be offended if I simply did not wear clothes?\"\n\n\"Definitely did not see that coming!\" Flustered, I started speaking before I really had made a decision, \"Uh...well...I suppose...\"\n\nImpatient with my slow answer, she added, \"You are the only I would be wearing the clothes for anyway, and our bodies pass through the others, which should limit your physical temptations. And, I would kind of like to try being so daring! You can always change your mind, if you do not like seeing me that way.\"\n\nHad I liked seeing her nude, yesterday? Absolutely! So, why did this even to need to contemplated? \"Yes, you may go without clothes,\" I suddenly said, in clarity. Emmi, I think you have a beautiful face, and a lovely, smooth and lean body. I think it would be a pleasure to see you in the nude, all the time.\"\n\nThe compliments seemed to catch her by surprise, and she turned her face away, and covered her mouth &amp; nose with her hand. Maybe she was blushing, but her dark color hid it. Then she stood, and said, \"Before I change my mind!\" and she unabashedly slid the robe off, and placed it on the arm of the couch.\n\nEmmi smiled, a bit shyly, and bluntly asked, \"What do you think the men of 2018 would think, if they could see me like this?\"\n\nI had to laugh, \"Probably a lot like the men of 1852, except your lean body is even more in fashion now, and thus more desirable. They all would want to have sex with you. However, I think you'd find a larger number of men, today, would be concerned with your pleasure, and not just their own. They'd want to make sure that you had an orgasm, as well.\"\n\n\"I heard mention of this orgasm, but what is it?\" she asked, with amazing innocence.\n\nI rolled my eyes. I never expected to be trying to explain an orgasm to a woman! \"WELL,\" I began, \"I'm not sure where to begin...Do you know what the orgasm is for a man?\n\n\"Yes,\" she said, nodding, \"It is when old Master would get larger and then put the warm mess of his seed inside me.\n\n\"That is the physical part of the man's orgasm,\" I explained, \"Did you notice how his face looked strange, maybe very happy, or even unfocused, sometimes, when he had his orgasm?\"\n\n\"Yes, sometimes,\" she replied, in curiosity, \"He would look like his mind was far away, and his face would look like he felt some pleasurable pain.\"\n\n\"That would be the emotional side of a good orgasm, I replied, \"And you have never felt something similar to that, yourself?\"\n\nShe shook her head, \"When old Master was moving in me, I felt a little pleasure. But when I tried to recreate it with my fingers one day, my mum got really mad and dadda whipped me with his rope belt.\"\n\n\"As I know it,\" I sighed, \"for a woman, you will feel a building pleasure that urges you to want more and more pleasure, until it reaches a point that all that stored pleasure is released at once. Your body releases substances into your blood which floods your senses with the most wonderful sense of completion. In a woman, the nearing of your orgasm may be indicated by an uncontrolled shaking in your legs, and possibly shudders through your body. When the orgasm occurs, you may also have uncontrolled muscle reactions throughout your body.\"\n\n\"That sounds both exciting, but a bit scary!\" she said, eyes a bit wider.\n\n\"I think you will find it so pleasurable, that it wouldn't seem scary,\" I offered, then corrected, \"Well, could find it pleasurable. As a ghost, I don't know if you can create your own orgasm, or even if you can have an orgasm.\"\n\n\"An interesting question,\" she contemplated, looking down at her thick patch of pubic hair.\n\n\"Well, I think I need some breakfast,\" I said, \"And just asking; are you hungry\"?\n\nShe shook her head, then added, \"But, thank you, Ted.\"\n\nShe followed me into the kitchen. \"May I operate the mini-wave again?\" she asked, with a hopeful grin.\n\nI chuckled, \"It's called a micro-wave oven, not 'mini'! And I'm planning 'old-fashioned' cooking, this morning.\"\n\nShe laughed, and her lovely breasts jiggled, \"Yes, 'micro' right!\"\n\nI made eggs, bacon, and rye toast. I let her turn the dial to start the toaster oven, and she stood and watched it work. Her fascination was quite endearing. After breakfast, I needed to get some architectural work started for my first, potentially paying client in the South. Asking if she wanted to learn and work on my other computer, the laptop, she readily agreed. It had a touch screen, as well as a mouse. However, we found that when she tried to touch the screen, it did not respond as desired. Instead, the image distorted and her finger glowed. So, left with the mouse or trackpad, I gave her some basic instructions, including how to prioritize words for a search.\n\nHer understanding of the process, as well as her reading skills, were astounding, and I left her in the family room to try searches while I showered and dressed. Going back into the family room, I walked up behind her, and found her lovely naked back was tilted forward, with her face scanning the screen.\n\n\"Find very much?\" I asked.\n\nWithout turning, she replied, \"This is amazing! There is so much about anything I can think of! But how do you know what is the truth? And why do so many places try to sell me whatever I search about, but then say that \"The search returned '0' results?\"\n\nI chucked, \"Before I answer, I just want to make sure I'm not scaring you when I walk up behind you like that?\"\n\nEmmi turned to smile at me, \"What do I have to be scared of? Anyway, I know where you are, nearly all the time.\"\n\n\"You do?!\" I asked, in surprise.\n\n\"Yes\" she said, \"I sense it.\"\n\n\"Really?\" I said, \"Anyway, as to your questions, I guess they are both issues about truth. The internet, as with most anything mankind does, is most popular for people to make money with. Those obnoxious search responses simply repeat whatever you are searching for, and then say that they sell it, even if it is something that cannot be sold. They just want you to go to their 'website', as it's called, and then maybe find something else you might want to buy.\"\n\n\"But, that is deceitful! Don't people get offended at that, and then refuse to buy from them?\" she asked.\n\nI answered, \"Some people probably do, but such deceit is so common on the internet that we, as humans, get rather indifferent to it. The sellers must have found that that they sell more than they seem to lose, so they continue doing it.\"\n\n\"That is shameful!\" she said.\n\n\"Yes, it is,\" I lightly groaned, \"Despite all the great things that mankind has created and achieved, human nature has not changed enough. And, as to your other question about 'truth'. I think it is much like it was in your day. If two men say they saw the same horse, but one man claims it was gray and running, while the other man claims it was brown, and trotting; then what is the truth? We can't really know, with no other information. So, we try to find other information that makes one answer more likely to be true than the other. If the horse's owner says he does not own a brown horse, then we may conclude that gray is correct, however usually without questioning whether it may have been a third color, instead.\"\n\n\"And,\" I continued, \"If the one man says 'The horse seemed to be gray, and appeared to be running,' while the other man demands 'The horse was absolutely brown, no question, and anybody that says it was running is a fool!' then many of us shy away from his arrogance, and see his rigid position as more about convincing himself of his own doubts.\"\n\n\"I do see,\" she said.\n\n\"From experience, we come to believe that certain sources of information on the internet are generally more reliable, and that they strive to provide unbiased, accurate information. We seek those out first, as corroboration,\" I informed.\n\n\"Thank you. You should be a teacher!\" she grinned, \"And I will try not to bother you while you work, today.\"\n\nI leaned closer to her ear, and said, \"Your beauty will always be a pleasant interruption!\" She turned her face away from me. \"Stop it,\" she chuckled, after she had worked through a big swallow.\n\nI found myself with a longing to touch her smooth skin, to see what the contrast of my white skin would look like against her magnificent darkness, and to see what my touch would do to that fascinating iridescence that seem to reside just a fraction away from her skin. Knowing contact would be forever fruitless, I turned and left for my office.\n\nAround noon, I heard her call my name softly, from behind me. I turned and saw her leaning against the door frame. \"God, she is magnificent to look at, even if that is all I can do with her.\"\n\n\"I know I said I wouldn't bother you, but I was getting a little lonely,\" she said, with a surprisingly coy grin, \"Mind if I come in and see what you are doing?\"\n\n\"I don't mind at all,\" I said, and let myself ogle her as she walked over to me. She looked over my shoulder at my twin, large computer monitors, where I was working on a design proposal for the Groman estate.\n\n\"Is this a home that you are designing?\" she asked.\n\n\"Yes\" I replied, \"That is the work I do. I design homes. With Willow Manor, I reworked many things, which is called 'remodeling'. Sometimes I create the whole home, like the one you see here, so that it can be built.\"\n\n\"When will this home be built?\" she asked.\n\n\"Well, if the Gromans choose my design over my competition, and make only minor changes, then this home should take about 2 years to complete.\"\n\n\"You must be very smart that you can take a plan like this, and imagine how it will look when you're standing inside it, looking through its windows, and how to use all the things in the house.\".\n\n\"I hope I am smart enough. It can be hard. But the computer software that I use helps by letting me see what it can look like with walls, floors, and ceilings. Even windows and furniture, if I ask it to do those things. Here, I'll show you.\" I tapped the designated \"F\" key, and the main monitor switched to a 3D view. Then I moved the mouse, showing her how you could look around, and 'walk' through the design.\n\nShe watched intently for some time, before saying, \"Things in this time are so amazing!\" Slowly, she stood up, \"Are you hungry?\"\n\n\"I could eat,\" I smiled, \"I will probably get up and make something, in a few minutes.\"\n\nEmmi smiled, \"Would you let my try to make something for you for dinner?\"\n\n\"I'd rather have some lunch, now. Did you have something specific in mind?\" I asked.\n\nIn recognition, she said, \"Lunch? Oh, yes! You call 'lunch' what we called 'dinner'. As for what to make; no, not really. I don't know what foods you have. I thought maybe you could suggest something, and I could look it up on the computer?\"\n\nI thought for a moment, and then answered, \"I did have leftover bacon from breakfast. How about you try a BLT sandwich, with potato chips on the side?\"\n\n\"Then you will let me try?\" she said, with a hopeful grin.\n\n\"Yes, you can,\" I chuckled, as I watched her enthusiasm bubble out.\n\nLike counting on her fingers for memory, she hummed happily to herself, \"Look up; sandwich, BLT, and potato chips!\" as she bounced out of the room.\n\nIt took nearly an hour, but she finally came back and chirped, \"Lunch is ready!\"\n\nI followed her delightful ass back to the kitchen, where she had set it everything out for me. She had put the food one of the good plates, and she waited, rather anxiously, for me to sit and partake. Before me was a quite thick sandwich, with a huge pile of potato chips, the latter from the bag I had bought.",
        "Shifting from foot to foot impatiently, Emmi watched as I got a paper towel, and as I pulled a Diet Coke out of the fridge, popped it open, and sat. I found a corner of the sandwich that I thought I could get my mouth around and took my first bite. I used my tongue to corral a length of bacon that slid out, and then wiped my mouth with the paper towel, because of the mayonnaise that was everywhere.\n\n\"Is it good, Ted?!\" she asked, her impatience too strong to contain any longer.\n\nAfter I swallowed, I smirked, \"Pretty good for a first try. Next time, you could reduce the ingredients, except the bread, by almost half. And half the chips would be fine. I don't do enough physical work to need this much food!\"\n\n\"Sorry,\" she sighed, \"It was harder than I thought, since I cannot taste, or even smell, anything. And I have never made a sandwich before.\"\n\n\"Thank you, Emmi,\" I said, and gave her big smile. She smiled back, and it really hit me how much she had changed in just barely one day. And how used to her company I already was. I wasn't quite that used to her nudity...but, I sure liked it.\n\nI was just finishing my food, and feeling stuffed, when Emmi's face changed to a slightly less cheerful one, and she said, \"You will have a visitor, soon.\"\n\n\"How do you...\" I started, then just said, \"Never mind that question!\" as I got up shaking my head, with another realization how different my life was now. A bit deep in those thoughts, I heard the doorbell ring, and automatically went to the front door. I opened the door.\n\n\"Mr. Groman?\" I blurted, then quickly recovered, \"Please, come in, come in.\" I gestured for him to enter, closed the door, and turned to him.\n\n\"Ted, I just had to stop by and give you these new ideas I had. Sorry, to come unannounced, but I was having lunch just down the road at Rod's Landing. I got sketching on these napkins, and had to stop by while these exciting ideas are so fresh! If you have the time, I'd like to...Ted?...Did I interrupt something?...Ted?...are you listening?\"\n\nEmmi was standing in the doorway at the back of the foyer, smiling -- and nude, of course.\n\n\"Uh...sorry...YES! I heard you. Of course we can go over your ideas! Let's go to my office. I was just working on your design, before lunch.\" I hurriedly recovered, trying to steer him away from Emmi. It didn't work. He stopped in the middle of the foyer.\n\n\"Gosh, Damn!\" he exclaimed, \"If this in an example of your work, I may not even get a competitive bid! She is superb!\"\n\nI swallowed hard, as I glanced at a grinning Emmi, who was standing right in front of him. \"Her?\" I choked and then held my breath.\n\n\"That detailing of the railing with the hidden lighting. Those vented windows! Remote control I presume? You've done the old girl proud, Ted!\" he gushed, \"I assume those are all your talented touches?\"\n\n\"Yes, they are,\" I said, trying to disguise the deep breath I was taking in. I watched his eyes scan more of the room. Emmi waved, and walked back towards the kitchen. Mr. Groman's eyes never showed any signs of noticing anything unusual...like the heavenly naked women that had only been inches in front of him.\n\nComing down from that momentary adrenaline rush, I asked, \"Would you like a tour, or do you want to get to those ideas of yours?\"\n\n\"I'd love a tour of this beauty,\" he exhaled, \"but let's get to my ideas, first. Tour afterwards?\"\n\n\"Certainly\" I said, as I saw Emmi reenter the room.\n\n\"Kitchen is clean,\" she said, \"I'll go up and tidy up our rooms.\"\n\n\"Lead on, Ted!\" Groman almost boomed. I heard Emmi climbing the stairs, as I led Mr. Groman to my office.\n\nLater, following the tour that Emmi had accompanied us on, I waved to Mr. Groman as he drove off. Turning, I said to her, \"Alright, you proved your point, Emmi! No one else sees you or hears you. But you nearly gave me a heart attack!\"\n\n\"Heart attack?\" she asked, then followed up with, \"OH! Like palpitations! Right?\"\n\n\"Close enough,\" I chuckled. Then I grinned, \"So, how did you like being 'daring' with Mr. Groman?\"\n\n\"Thought it was scary for a moment, but the thrill quickly went away when it was apparent that he had no idea that anything was unusual.\"\n\nWalking back to the family room, I asked, \"Do you realize how much you have changed since yesterday?\"\n\n\"I don't know how being a ghost, spook, spirit, or whatever I am, works. But I know I am changing...for you. I am here because of you. That I do know. I am here to be what you need me to be...and I'm enjoying, immensely!\"\n\n\"Oh, Emmi,\" I sighed, and forgetfully tried to take her hand. We both looked down as her hand passed through mine. I felt that same pale caress of energy as her dark hand disappeared into and out of my hand. This time, I also noticed the iridescence on her forearm seem to swirl more. Letting my hand drop to my side, I bemoaned, \"I'm not sure what I'm supposed to do with you, but I certainly like having you here, with me.\"\n\nShe smiled, and tilted her head, \"Can I try making you supper?\"\n\n\"How about we try making it, together?\" I asked, watching her eyes.\n\nThose eyes twinkled with delight at my answer, before the words came, \"I would be honored to have your assistance and guidance...SIR!\" The giggle quickly followed as she saw my frown.\n\n=+=+=+=+=+=\n\nNearly two weeks had passed since Emmi-Anne had come into my life, and to my continuing amazement, she was as much a modern women as any women. I don't know where all that idealism, knowledge, and self-assurance came from, but she certainly was wonderful company.\n\nAnd the more I expected her to be in my life at every moment, and to see the beauty of her on display, the more I longed to caress her face, hug her, and just give her the physical pleasure she had never known. As for that pleasure, she found out that she could not induce an orgasm by her own hand. Even when I gave her Jill's vibrator. It had no effect on her beyond simple pleasure.\n\nEmmi called me to supper and, finally, after my computer took a bit too long to shut down because of updates, I walked towards the kitchen. Just as I neared the doorway, she suddenly stepped into it, calling \"Ted? Supp...\" With surprise on both our faces, I bumped into her, sending her stumbling back. I instinctively reached for her hand to catch her, and was unable to get a hold of her. I knew immediately why I couldn't grab her, but I was still filled with embarrassment and concern as she sat on the floor, laughing.\n\n\"I'm so sorry,\" I anxiously said, \"I didn't see you in time. Are you...\"\n\n\"Ted!\" she laughed, cutting me off, as she started standing up, \"Remember, I don't feel pain. It was nothing. But, I'm sorry too. And are you okay? You're the one that can feel pain!\"\n\n\"I'm fine,\" I assured, even though I rubbed my shoulder where we had most heavily impacted.\n\n\"Then please sit, and try this chicken recipe,\" she implored, as she gestured at the beautifully set table.\n\nI started to pull out the chair, when it suddenly struck me. \"Emmi!\" I nearly yelled.\n\n\"What?!\" she exclaimed, in sudden alert.\n\n\"Come here!\" I said, in astonishment.\n\nShe slowly walked up to me, studying my face.\n\n\"Put your hand on my shirt!\" I whispered, excitedly.\n\nShe did, and I felt her hand there. Then her luminescence swirled noticeably, and it traveled up her arm. She looked at me, wide-eyed and speechless.\n\nIn disbelief, I had to test my theory. I picked up the linen napkin she had set out, unfolded it, and placed it against her cheek, with my hand holding it there. I felt no warmth or cold, but I felt the softness of her cheek. I stared in amazement at her cheek with my hand there.\n\nHer desperate whisper of \"Oh, Ted,\" shook me loose from my frozen state, and I looked to see her eyes delicately closed.\n\n\"It seems that if you can touch an object, and I can too, then we can feel each other through that object!\" I exclaimed, in a hushed voice.\n\n\"It's wonderful,\" Emmi whispered, then suddenly pulled away, turned, and said, \"Let me serve you supper.\"\n\nAlready full of confusion about what this touching sensation meant, I now was concerned that I had somehow offended or hurt her, by touching her. \"Are ghosts not supposed to be touched?\" my mind pleaded, so wishing for an answer.\n\nShe served me, but never met my worried eyes. I wanted to find some bridge across the sudden distance between us. Before I could sift through all the thoughts that raced around in me, she announced, \"Excuse me, Ted. I'm...I am just going to sit in the family room while you eat. If you need anything...any more food anyway, just say so. You know I will hear you, wherever I am.\"\n\n\"Okay,\" I said, weakly. Finishing the food, I barely remembered eating my meal. My mind was too preoccupied with what had happened between us. After I had set the tableware in the sink, I slowly walked to the family room. I hurriedly tried to decide the best way to broach conversation, but recognized nothing as clever or appropriate enough to risk. I defaulted to, \"Are you okay,\" as I walked in.\n\nEmmi was on the couch, watching the TV, with a muted game show on the screen. She was positioned sideways on that couch, with her feet tucked up against her and with her arms wrapped around her knees. The small blanket I kept nearby covered her legs and waist. She was clearly blocking my view of her body. \"I'm okay,\" she said, sounding very uncommitted to that answer.\n\n\"Do you want to talk about it?\" I asked, hopefully.\n\n\"No\" she said, with abrupt certainty.\n\n\"Do you want me to leave?\" I offered.\n\nShe shook her head, and then let her forehead come to rest on her knees. After a moment, her head slowly rose, and she reached down, picked up the TV remote, and tossed it to me. \"You choose,\" she said, \"Maybe some science or history show. Even Ancient Aliens would be okay. Just no...no...Hallmark stuff.\"\n\nDisappointedly, I brought up the guide, and went into On Demand, and pulled up the Discovery Channel. I chose one of their 3-hour composites of previous shows about black holes, as I knew she was really fascinated by discussions of our universe.\n\nWe didn't talk, except for me excusing myself after an hour, to get a beer.\n\nI felt so wounded, not knowing how to move our relationship back to a better place. Solemnly, I stood and stated, \"I guess I'm going to bed, now.\" I placed the remote on the coffee table near her, where she remained in her knees-up position.\n\n\"Sleep well,\" she said, sounding tired, \"I'll probably stay down here.\"\n\n\"Alright,\" I replied, and then tried for parting humor, \"And don't watch too many of those news shows. You know how infuriated you get!\"\n\n\"Hmmmph\" she said, which came out like a single, weak chuckle.\n\nI went to bed, and finally fell asleep sometime after 12:33, as that is the last time I remembered seeing on the clock.\n\n= = = = = = =\n\nHer voice softly called, \"Ted?\"\n\nI awoke and glanced at the clock: 2:17 it stoically glared. I could feel her weight on the edge of the mattress, behind my back. I turned over, and saw her facing me, glowing with her faint luminescence, which showed only on her in such low light conditions. Event against the backdrop of the window, I could see the tears on her face. Strangely, the tears gathered her luminescence off of her face and into bright little pearls. When the tears fell off of her cheeks, the tears disappeared a fraction of a moment later, before contacting anything. If I hadn't been so concerned about our touching earlier, and the cause of the tears, now, I would have been fascinated to watch those tears.\n\nI turned on the dim table lamp. \"What is it, Emmi?\" I said, hoping my voice carried as much concern as I felt about her, as she had become so special in my life.\n\n\"Things are happening to me that I don't understand!\" she whispered.\n\n\"Can I help? Want to talk?\"\n\nShe looked at me with a kind of sad longing in her expression, \"When you touched my cheek earlier, it felt so, so good. Then, out of nowhere, I was scared and lonely.\"\n\n\"That seems a very strange reaction!\" I said, as I watched her search the wall behind my head, \"Can you tell me anymore?\"\n\n\"I don't know,\" she said, after a pause, \"After you touched me, through that napkin, I suddenly felt the weight of wanting to be touched, often and everywhere, and of never having known a touch like that before. There was a fear that I would never be able to know what it was like to be touched so gently by the man...that I am in love with.\"\n\n\"Emmi!\" I exclaimed in joy at her feelings, \"Of course I want to touch you! I have wanted that almost since the first day you were here. I care about you so very much. I'd probably love you, if you were real! Why would that make you lonely or scared?\"\n\n\"I'm not sure,\" she replied cautiously, \"Something seems to be telling me that such joy is also an ending.\"\n\n\"What kind of ending?\" I asked.\n\nShe shrugged, and slowly lowered her head, \"I just don't know. I feel like I want something, so badly. But, if I get what I want, I'll also lose what I want.\"\n\n\"That sounds so odd, I'm not sure what I should say,\" I responded, \"Can you tell me what you want me to do? Do you feel like you'd have any warning if you got to close to this 'danger' you're sensing?\"\n\n\"No idea,\" she said, shaking her drooped head, \"But, I have been downstairs, thinking, and I have made a decision.\" She paused, appearing to be trying to commit to the words that would follow.\n\n\"And?\" I encouraged.\n\n\"I'm not alive, really,\" Emmi said, \"I've already had a 'real', but short, life. Whatever existence I have now comes with no instructions and no guarantees. It could end at any moment and with no warning, for whatever reasons there may be that brought me to you. The only paths I seem to have are to never touch you, or be touched by you, and then maybe exist for years to come with my love, but also the loneliness, I now feel.\"\n\nAgain she paused, and I encouraged her with an, \"Or?\"\n\n\"Or\" she confirmed, \"As I have decided, I can risk your touch and maybe feel a joy and completeness that I would otherwise never know. That may cut short my existence. It could leave me in pain for eternity, or maybe I just stop...being, at all. Who knows? Of course, this all depends on you, as well, wanting to risk what we have, and wanting to touch me in the ways I desire...which are not even clear to me!\"\n\n\"I don't want to lose you, Emmi dear. But, I couldn't get through life without the caring touch of another person. May I touch you now?\" I grinned.\n\nShe nodded, with a hesitant smile.\n\nI turned the bedspread back, leaving just the satin sheet over me. Raising my hand, I placed it over her knee, which was nearest to me. I slowly rubbed the sheet over her knee and lower thigh, and her eyes closed. She stayed still, seemingly concentrating on absorbing the sensation. I tried to pull the sheet up to her face, but the fabric was tangled. Twisting and tugging did not yield immediate movement, so I settled for her upper arm. Trying to stroke her arm was complicated by the weight of sheet pulling it into pleats under my hand. Her head lolled towards where I touched her.\n\nFrustrated, and needing a better solution, I mentally searched the house for something suitable for the kind of freedom we needed. Finding an idea, I said, \"Emmi, give me moment. I will be right back!\"\n\nShe rose off of the bed, which let me out. I pulled the covers back, and went down the stairs, two-at-a-time. My silks pajamas flowed back as I hurried to what Jill &amp; I had named the \"Sewing Room.\" It was still mainly a storage room, but we had used the original multitude of small drawers for a number of things. One of those was the thin, white cloth gloves we had used to handle some of the hidden antique items and photos we had discovered, during remodeling.\n\nI took two pair of the gloves and hurried back upstairs. I held out a pair to her, and after a moment's hesitation, a smile grew across those full lips, and she took the gloves and put them on. I put my pair on, and then sat on the bed. She slowly sat next to me, watching my eyes. I made the first move, simply running a single finger down the ridge of her nose. Her happy eyes started to well up, as her hand rose up, but then hesitated. With fingers spread, she hovered near the side of my face.\n\nThen she let her hand close the gap, and I felt the pressure of her touch as her fingers began to explore the features of my face. Glowing tears ran down her cheeks, and then disappeared. I tried to catch one, and it transferred to my gloved hand, but was gone in an instant. Her hand went into my hair, and she looked up there. In response, I cupped her chin and drew it back down, where I used a finger of my other hand to brush her lips. Hers eyes settled closed, at the same time as her lips parted slightly.\n\n\"Ted?\" she whispered, \"May I lay myself beside you?\"\n\n\"Of course, my dear,\" I answered, \"but there is something else I want to get. So, you go ahead and get comfortable. I saw her settling as I went into my walk-in closet. I got into one of the drawers and pulled out a silk handkerchief. As I returned, I had to stop for moment and just take in the beauty of her form, as she lounged in my bed. She smiled as she saw me looking. I set the handkerchief on the night stand and settled in next to her, on her left.\n\nAs much as I wanted the contact of skin, it was still exquisite to feel her body against my silk pajamas. Even then, it was odd not to feel her feet, but only bits of energy flowing in my feet. After a short time, she brought her gloved right hand across her body and hovered over my chest. With the cutest, childish giggle, she asked, \"May I touch you, here?\"\n\n\"Em, my lovely, you may touch me anywhere you please.\"\n\nAs she brought her hand down to touch me, she said to me, \"Not sure I am prepared for it, but I'll make you the same offer.\" She rolled onto her left side, and I felt a soft breast brush across my arm.\n\nAfter slowly stroking my chest and shoulder, she whispered \"Oh, Ted!\" as she then rested her head on my chest. She sighed with a huge, slow rise and fall of her chest, yet I never felt any air movement. \"This is what I was so lonely for,\" she said, quietly. I wrapped my arm around her back, and held her to me. I felt a gap in the sensation of her where my long sleeve pajama shirt had slid part way down my forearm. I could see her curls just below my eyes, but I could not feel them with my bare skin.\n\n\"How's the fear part?\" I asked.\n\n\"There, but no worse,\" she softly replied.\n\nI brought my left hand up and slowly surrounded her breast. She gasped and flinched slightly, but then relaxed back into my hand. \"My Lord, that feels so good!\" she hummed. When I brushed my thumb over her thick nipple, it firmed quickly, and she uttered a weak moan. When I squeezed her breast and pinched her nipple, the moan was much more distinct. And, her luminescence swirled around her breast.\n\n\"You sound like someone who could have an orgasm!\" I quipped.\n\n\"Do I?\" she replied, with a bit of pleasurable tension in her voice.\n\n\"Why don't you lie on your back?\"\n\nShe did, and I turned my attention to her other breast. That got a happy moan. I reached behind me, and picked up the silk handkerchief. I unfolded it as she watched. Then her eyes looked a bit surprised when I laid it over her nose and mouth. When I put my lips to hers through the silk, she let out a squeal of surprise which melted into a moan. It certainly felt right, but unusual, to kiss her like this. After a bit, I moved to kissing the covered parts of her face, which got her giggling with a high pitched, \"Ted!\"\n\nI pulled back and smiled, and she grinned happily through the silk. Her eyes tried to watch as I slid the silk down and over her breast. When my lips surrounded her nipple and my tongue tickled the end of it, her back arched off of the bed as she gasped sharply. Even if she wasn't actually moving air for breathing, her seeming breaths sped up. She started squirming a bit, and I felt her legs spread. Mentally crossing my fingers I slid my gloved down her stomach and between her legs.",
        "\"TED? What are you doing!...You can't...I mean...\" she gasped.\n\nThen I massaged small circles over her clit, making sure to keep her labia over it to protect it from the cloth gloves. Everything happened in a short time from there. Her hand gripped my hair, her breathing was now rapid, her legs squirmed, and her mouth took off, \"Lord Almighty!...what are...Ted!...ooooohhh!...you can't...don't stop, NO!... don't stop!...MMMMMmmm!...\" and she went on from there. The way she was going, it was clear she was heading for an orgasm.\n\nI slid down and put the silk over her hairy vulva and then moved between her legs. \"TED!?\" she squealed. After parting her pubic hair, I put my mouth on her and I started massaging her clit with my tongue. It was clear I was being successful, judging by her disjointed chatter. When her shaking legs joined in, I had to smile while still pressed against her. I continued, sucking on her through the wet silk, rubbing &amp; flicking too, even though her hips were dancing against me. It was really strange when her legs snapped close, passing through my head. I only felt the pressure where the silk covered her. Her astonished agonizing yell was delightful. Then she just sagged into the bed.\n\nI slid up to be next to her face, and asked, \"Well, what do think?\"\n\n\"That was an orgasm, right?!\" she laughed, tiredly.\n\n\"Yeah, and it sounded like a good one!\" I chuckled.\n\n\"Why did I have to die and wait 166 years to find out about this!\" she whined as her gloved hands rested over her breasts. \"Thank you, Ted! I do love you! But that was a bit scarier.\"\n\nI stroked her cheek with my gloved hand and she closed her eyes, contentedly.\n\n\"What about you?!\" she suddenly said, \"Can I do this for you?\"\n\n\"In a normal world, yes. But since we need something between us, I'm not sure. These gloves, or even the silk, might be awfully rough on my skin.\n\n\"Ow! Yes! You don't want abrasion there. It's a penis, right? And, I assume it is sensitive?\"\n\n\"Yes,\" I chuckled, \"It's a penis and sensitive. And it would hurt if it were rubbed raw.\"\n\nRolling over on me, she plopped her gloved hands on my chest, with her gleeful face in front of mine. \"May I please try? PLEASE!? I promise to be gentle, and stop whenever you say!\"\n\n\"Please,\" I laughed, \"Enjoy yourself.\"\n\nShe quickly moved down to my groin, and then smiled back at me, waiting for final approval. I nodded, and she cautiously pulled my tented pajama bottoms down, while raising them to clear my waiting erection. \"You're so much bigger than old master!\" she exclaimed.\n\nI gave a short laugh, \"I'm only slightly above average, so old master must have been pretty small!\"\n\n\"When he put his hand around it, I almost couldn't see it!\" she chuckled, \"But yours is...nice! I've never really got to look at one very much.\" She reached out and poked my penis, and commented, \"It's so hard! Is that the way it's supposed to be?\"\n\n\"When you're ready for sex, that's the way you want it.\"\n\nShe slowly curled her gloved hand around it. \"I think I would really feel something this big inside me...well, would have felt it, anyway.\"\n\nIt felt great when she tried lightly stroking me, as the glove didn't feel that abrasive with her gentle touch. I got even harder, and my erection struggled in her hand.\n\n\"MMmmm, Ted. I can almost imagine this inside me and giving me an orgasm. I bet it would feel amazing!\"\n\n\"Wait!\" I said, suddenly, as an idea came to me. \"Sorry, my lovely, but I need to get up for a moment. She let go of me, and pulled up my pajama bottoms before I scampered into the guest bathroom, with my dick leading the way. After looking through a couple drawers, I hurried back in to our bedroom. \"This! It might work!\" I dropped back in beside her.\n\n\"What is it?\" she asked, rather excitedly.\n\n\"It's a condom,\" I said. Seeing her puzzled look, I added, \"It's a type of birth control. We have a few in there for guests that might have 'similar ambitions.' It's a very thin rubber-like tube that goes over my penis.\" I showed it to her, as I tore open the package. I put my dick up through the unbuttoned fly and then rolled it down over my penis. \"Take off your glove and see if you can touch it,\" I instructed.\n\nEmmi took off her right glove, and cautiously wrapped her bare hand around my shaft. Her smile got really big.\n\n\"You ready to give sex a try?\" I grinned.\n\n\"YES...Lord, Yes!\" she shot back, \"Where should I be?\"\n\n\"I think it best if you are on top. That should keep the fabric of my pajamas from interfering.\"\n\n\"May I?\" she grinned.\n\n\"Please do, Emmi dear!\"\n\nThen she took hold of me and positioned herself above me. I wasn't laughing anymore. She hesitated, then slowly sat. I felt it as I entered her, and, my god, she was tight!\n\n\"Definitely bigger!\" she said, in a grunt.\n\n\"I'm not hurting you, am?\"\n\nShe chuckled around another grunt, and rather huffed out, \"Remember who you are talking to! I'm all pleasure, no pain.\" She looked so pleased when she finally pressed our pubes together. Then she put the cloth glove back on.\n\n\"This is where you belong, Mr. Taegen!\" she sighed, \"But, I do have to warn you that the fear level has gone up.\"\n\n\"Should we stop?\" I quietly asked.\n\n\"Don't you dare!\" she growled, \"I said I was going to experience this, come what may.\" She took her first rise &amp; plunge, and her face melted in pleasure. She immediately started into an up &amp; down rhythm.\n\nI really had to stop thinking about how good she felt or I was going to be done way ahead of her. I did my best to think about the Groman's designs, while her moans kept building. After a few minutes, she started her chanting in whispers, \"Lordy!...Ted!...Yes!!... ...\" That and the occasional quivers of her legs told me I could stop thinking of the Groman house.\n\nThen her movements got more forceful, slapping down on me. Her voice got louder, the chanting more urgent. And the glow of her luminescence got brighter, especially around her wet-sounding pussy. The sweat on her body was like the tears; little bright beads, that disappeared if they left her body. I was loving the ecstasy on her face as her half open eyes looked down at me. My ecstasy was close, too.\n\nA smile lit on her face as she looked down at me, and then she gave out a long, agonized grunt as her body began shaking. I lost my view of that delighted smile as my eyes squeezed close. I barked, \"Fuck!\" as I filled that condom when her internal muscles clutched me. Her glow was even brighter.\n\nSpent, we both paused, gathering our breaths. She laughed, tiredly, \"That was worth waiting 166 years for!?\"\n\nHer glow was returning to a normal level and I grinned back, \"I have a few more condoms, if you'd like to try it again, later?\"\n\nHer head sagged in long nods, \"That was spectacular...just, spectacular!\"\n\nHer use of Jill's favorite phrase startled me, and I looked at her with such puzzlement. I noticed her glow was barely visible now.\n\nI was going to ask why she had chosen those particular words. But, before I could, her head suddenly came up, and she abruptly pleaded into the room, \"No!...NO!!\"\n\n\"What is it?\" I urged. Then I hurriedly added, \"What's happening, Emmi!?\" as I saw her body was turning translucent and her glow was gone.\n\n\"Teddy! I love you!!\" she cried out, as she became harder to see.\n\n\"EMMI!?...What?...I Love...\" my voice appealed, hoarse with the volume.\n\nIt was too late. Emmi-Anne was gone.\n\n=+=+=+=+=+=+=\n\nI called out to her for days. I checked everywhere, even the old slave quarters. \"Where had she gone? Why did she have to go?!\" I finally yielded to reality on the fifth day, when Mr. Groman called for the third time, asking for progress on his design.\n\nI set my mind to the Groman project, trying to keep both Emmi and Jill from worming into my consciousness. I didn't want to feel the pain and the loss. I wasn't that successful. No one called me to lunch. No one asked what I was working on. No one made noises as they worked elsewhere in the house, or when they climbed the stairs. No one cared...when the tears came at night.\n\nAt least with Jill, I had a gravesite to go talk to...to believe she could listen. With Emmi, I tried just talking to her in the house...anywhere. It just didn't work. So, a week later, I ordered a brass marker. When it was ready, I had set into a rock that was placed in front of the large slave quarters. It simply read, \"In Memory of Emmi-Anne.\" It helped, some, to have somewhere to go, just to talk to her.\n\n=+=+=+=+=+=+=\n\nSeveral months later, I had finished my work on the large slave quarters, doing most of the work myself. I had chosen to demolish the three other, smaller buildings that had barely managed to stay upright all these years. I reclaimed as much of the wood, and vintage hardware &amp; nails, as I could. Using those, I did my best to recreate what was my estimate of how the building would have looked when Emmi was alive. I even found some basic furnishings for it.\n\nI had planned to take a break from all the physical labor, which had put a few pounds of muscle on me, and which I kind of enjoyed seeing in the mirror. I walked out the main drive to get Saturdays' mail, and when I went to open the mailbox, I nearly pulled it over. The post had been loose for weeks, but never like this.\n\nSighing, I thought of how this afternoon was now toast. I considered setting the post in cement, but finally decided I would have someone else do it, along with a whole new box &amp; post, a little later. For now, I was just going try and brace it up with rocks from the old rock wall that was nearby. I took the mail back to house. Those 100 yards gave me plenty of time to sort out the junk mail.\n\nIn the kitchen, I pulled out the leftover half of the huge club sandwich I had gotten at Rod's Landing two days ago, when I had met Mr. Groman for some detail updates. I grabbed a large bottle of spring water, as it was pretty warm today. A few chips went down between bites of sandwich, and then I was off to fill my yard cart with some tools for the mailbox post. I towed the cart by hand out to the pullout at the main road. That pullout is where my home's drive starts and where the 'leaning tower of mailbox' looked ready to fall flat on its face.\n\nAfter I had removed the mailbox from the post, I also took off the decorative wrought iron support bracket. \"That should save my scalp\" I congratulated myself for that forethought. I took off my shirt, and set about working the post out, and then selected some rocks that appeared suitable as temporary reinforcements for the post.\n\nPutting the post back in, I wrestled with a particularly obnoxious, but crucial rock. My mind also noticed that the car that just went by had stopped, and it sounded like it was backing up. Stuck holding the post and wrestling that rock, I took only a quick glance and saw a stylish white car. It crunched the gravel as it backed into the pullout. Since its engine was still running, I didn't give it much attention, yet. Grabbing a smaller rock, I tried to use it as a wedge to hold the big rock in place, to hold the post in place.\n\nThe car's motor shut off, and I took a longer glance. I had a close view of the front end, and it was a Lexus LC500; a very dramatically styled car and uncommon to see.\n\nI heard a door open, but my shifting post brought my attention back to the rock puzzle. Then I used my gloved hand to drag some fine gravel over to hold the small rock in place, which kept the big rock in place, which would hopefully keep the post in place.\n\n\"Hello\" came from a mildly accented, rich feminine voice.\n\n\"Hello\" I acknowledged a bit loudly, so that the sound would carry back over my shoulder.\n\n\"Can you tell me if this is Willow Manor?\" the voice asked, a bit cautiously.\n\n\"Yes, it is,\" I said over my shoulder, as I let go of the rocks and watched them for any sign of movement.\n\nIn an oddly hushed tone, the voice said, \"I'm here...I'm actually here!\" Unsure if she was speaking to me, I mentally commanded the rocks to \"STAY!\", and swiveled on my knees to look at the source of the voice.\n\nShe was as dramatically elegant as her car. Golden brown skin adorned taught, yet soft features, which came from an indistinguishable heritage. She was certainly striking, but her beauty was unique, in that it made me add another category in my mind, for what a beautiful woman could look like. A flowing mass of carefully arranged, large blackish curls framed a face that was rigidly aimed at my home. One hand, with long, graceful fingers was gripping the top of her car's door. Actually, 'long' and 'graceful' seemed an apt description for any of part of her that I could see. Her stylish, long-sleeved, white blouse ruffled in the light breeze.\n\nWithout looking at me, she asked, slowly, \"Can you tell me...if Ted...sorry...Mr. Taegen...is at home?\"\n\nI stood up and replied, \"I'm Mr. Taegen...and Ted,\" the latter said with a chuckle.\n\nHer eyes turned to me, before the rest of her head followed. Large, almost mystical looking emerald eyes scanned me, pondering my reply. She had the strangest expression on her face. There was confusion, disbelief, and that blank look of someone who's mind is virtually consumed trying to process some thought.\n\nI got as far as, \"Can I...\" before the emerald green in her eyes disappeared up into her eyelids, and she slumped out of sight. I ran around the car to her door and found her fainted, crumpled form on the gravel. My mind raced, as I had never dealt with a fainting person before. I didn't think I could carry her the 100 yards to the house. The yard cart would take too long to empty out. The car was my next thought. I ran around to the passenger door, opened it out to its stop, then ran back around to her. I carefully picked up her slender body, and went around and put her in the passenger seat. After closing the car's doors, I drove her to the house.\n\nAs I was lifting her out of her car, she started to come around. \"Where!?...Wha... Ted?\" she mumbled.\n\n\"You fainted!\" I immediately replied, \"And I'm taking you inside.\" I set her down, prone, on the family room couch and then put pillows under her feet. Hurrying to the kitchen, I got her a bottle of water and returned. I sat on the edge of the coffee table near her, waiting to do whatever I could. While I waited, I got to do a quick survey of my \"guest\". On her rather slender build, she was wearing deep gray, straight-leg slacks. I didn't know what they were made of, but it looked like an expensive, high-quality material. I noted her shoes were very nicely made and were driving shoes, which have no heels and have those rear protection pads. She had on thin gold belt, a couple delicate, gold bracelets, and a gold watch and necklace. She had on no rings. And her nails were perfectly finished, but surprisingly not that long for someone so fashionable in other respects.\n\nHer long fingers languidly covered her eyes, as she exhaled a \"Wow. What happened to me?\"\n\n\"To review,\" I said, \"I was out by the road working on my mailbox, when you drove up. You asked if this was Willow Manor, and if I was Ted Taeger. Then you fainted, and I used your car to drive you up to the house, and carried you in here.\"\n\n\"I'm so sorry!\" she whispered, slightly shaking her head.\n\n\"Don't worry about it!\" I urged her, \"Are you feeling any better?\"\n\n\"Some\" she said.\n\n\"Water?\" I asked.\n\n\"Yes, thank you,\" she said, and then slowly swiveled to sit up and put her feet on the floor. I flipped up the cap of the water bottle and handed it to her, staying ready to catch it if her grip faltered. It didn't, and she took several long sips. The way her succulent lips surrounded that bottle was not lost on me.\n\n\"Is there anything else I can get you, or do?\" I asked, studying her for signs of how she was doing.\n\n\"You're very kind, thank you,\" she said. The first hint of smile showed, as her big eyes finally came up and glanced at the room, \"I think I just need to take it slowly. I've never fainted before, and it's rather disorienting.\"\n\n\"I can imagine,\" I stated, \"Do you think you're sick or anything?...Any idea what might have caused this?\"\n\nThat seemed to get her attention. She responded, hesitantly, \"No, not sick...that I recognize anyway. Not sure why...or what caused it.\"\n\n\"Would it help if you ate something?\" I inquired.\n\n\"Not just yet,\" she said, \"But may I use your bathroom?\"\n\n\"Of course,\" I said, but I tensed with readiness to help her, as she quickly stood up and starting walking out of the family room . A bit surprised, I was slow starting to say, \"It's in the...\" That's when I heard the door close on the bathroom. It was behind a fairly hidden door, in a hallway just off of the foyer.\n\nI moved to a chair, and plopped into it as I reviewed what had happened today. \"She drives up in a car that is atypical for this area, which is more rural since we're 20 miles outside the state capital. She is dressed elegantly, but again, not typically for this area. Her lovely mix of racial features are certainly unusual anywhere, but more so in this part of the South. Then she sounds surprised to have found Willow Manor, and astonished that I'm Ted. In fact, why would she call me 'Ted', as we have never met? Then comes her fainting, and now she seems to know where a bathroom is that nobody else has noticed, unless it has been pointed out to them. Who is she?!\"\n\nI heard the bathroom door close again, and she walked back in, putting a few fingers against the molding of the doorway to steady herself. \"I should introduce myself to my rescuer,\" she said, with a better smile. I could see that if she put on a big smile, it was going to take over her face and result in glorious collage of just full hair, big eyes, and huge smile. \"My name is Arsoola Matelli. Please, please, call me 'Soola'.\"\n\n\"Right,\" I said, unable to stop my sudden chuckling, \"You wouldn't want to be called...\"\n\n\"NO, I wouldn't!\" she said, quickly intercepting my conclusion, pointing one of those long fingers at me, and giving me wonderful wink. She sat down, gingerly, and then fashionably crossed her legs. \"Well,\" she sighed, and brushed back the curls that had crept in front of her face. She crossed her wrists over her leg, with a practiced poise that was quite clear, and effective. \"I'm sure you have some questions, and I certainly owe you some answers.\"\n\n\"Why?\" I chuckled, further, \"Can't I just be satisfied with a beautiful women fainting after saying my name, and then being in my arms as carry her into my home?\"\n\nHer face looked up towards the ceiling, with hints of blushing, and it displayed her delicious throat and long neck. Then, she cleared her throat and smirked, \"I see. That is when I fainted?\"\n\n\"Mmm hmm,\" I acknowledged with a grin, \"You made quite an entrance!\"\n\n\"Not quite what I planned,\" she said with a returned grin, and a small roll of her eyes, which finished with her looking over at the large bookshelf. She rocked the toe of her shoe.\n\n\"I'll admit,\" I began, \"a few questions do come to mind. Such as, 'Your features are unique and very appealing. Where do they come from?\"\n\nThose green eyes stared directly at me with a menacing frown, \"From my parents! Don't tell me we are going to play 20 bar questions!\"\n\n\"Ouch!\" I exclaimed, \"Shot down on the first question. I'm really out of practice!\"\n\n\"I'm sorry,\" she said, with her eyes lowered, and her foot swinging, \"I said I'd answer some questions, and then I give you a hard time. I'm just so used to my racial background being the opening line for every guy that approaches me, that I automatically bristled. Again, sorry. And my father is Italian, and my mother, Ethiopian.\"\n\n\"Don't run across that combination every day,\" I said, in true surprise, \"especially down here. So, you drive up in that super stylish LC500, which is rare enough down here. Then you get out, looking like the inside cover of Vogue. And, you are wearing driving shoes, which someone is unlikely to use for a short trip. Makes me think you are not a local?\"",
        "\"Correct, Sherlock,\" she smirked.\n\n\"How 'not local'?\" I prodded.\n\nShe mumbled something, as she looked away.\n\n\"Sorry, I didn't hear that,\" I chided.\n\n\"Chicago\" Soola repeated, in defeat.\n\n\"CHICAGO,\" I exclaimed.\n\nHer eyes rolled bigger this time.\n\n\"You've driven 700 plus miles. What kind of trip are you on? Some vacation tour, on which somebody told you stop here and see me. And that makes you faint?\"\n\n\"Sort of\" she answered, in a clipped fashion.\n\n\"Okay...'sort of'...hmmph,\" I sighed, with some exasperation, \"Then what did you come here for?\"\n\n\"Ummmm...\" Soola said, as her eyes wandered away from mine, \"...fishing.\"\n\n\"And, am I going to find fishing poles in the trunk of your Lexus?\" I asked, half in humor, half in frustration.\n\n\"I think I should be going,\" she said, abruptly and a bit aloofly, \"I want to find a hotel and get out of these dusty clothes. Can you recommend somewhere?\"\n\n\"NO\"\n\n\"Why?!\" she said, the aloofness vanishing.\n\n\"The nearest hotel worthy of you is probably 12 miles away,\" I said, \"You will stay here!\"\n\n\"What!\" Stay here with you? Alone?\" she said, with unconvincing shock on her face, \"And what? Have you creep into my bed in the middle of the night?\"\n\n\"If you thought I would do that, you wouldn't have driven 700 miles just to come to Willow Manor, and meet me,\" I said, staring her down.\n\nHer calm, cool demeanor was fraying, \"Who said I came all this way just to be here and meet you!? Your arrogance does not befit your reputation!\"\n\nI grinned, \"Ah ha! So, you know my reputation, do you? And arrogant, huh? That's it! I'm not letting you get away until I know what this is all about!\"\n\nHer eyes went back down, and she slumped, \"That might take a while!\"\n\n\"I like a good mystery,\" I said, again approaching exasperation, \"You saw all those mystery books on the bookshelf, didn't you?\"\n\n\"Yes\"\n\nI mildly growled, \"I'm getting the luggage, which I assume you brought, and putting you in the guest room. I still have the key fob for that fashion statement of a car, Are you going to fight me on this?\n\n\"No\" she said, in resignation.\n\n\"Good! I'll be back in a minute.\" I walked out, still wondering what this was all about. She did have two beautiful pieces of luggage, which I carried back in through the front door.\n\n\"Where is she?\" Looking around, I didn't see her, anywhere.\n\nI called out in frustration, \"Soola, my little sneak. Where are you!\"\n\n\"In the guest room. The one on the left at the top of the stairs!\"\n\nI almost dropped her bags. \"How did she know where that guest room was? And the house had 3 guest rooms. She was in Emmi's old room, next to my bedroom. Was that just luck?\"\n\nI went up the stairs and walked into \"her\" room.\n\n\"Thank you,\" she said, \"And I'm sorry - again. I forgot my manners. This is a lovely room, and Willow Manor is very beautiful. You did a truly amazing job with the renovation.\"\n\n\"You knew that from my reputation, right?\" I asked, certainly curious.\n\nSoola turned so that I could not see her face, \"Of course...by your reputation.\"\n\n\"I assume you can find everything on your own?\" I said, expecting she might already know where anything was.\n\n\"I'm fine,\" she said, \"Give me some time to change, and I'll come back down, if that is acceptable to my 'jailer'?\"\n\n\"The family room, again, when you're ready,\" I said, exhaling my confusion. I turned and went into my room. I took a quick shower to wash the sweat from the mail box post project off of me. Then, I changed out of my work jeans and into casual clothes. As I was going downstairs, I realized I had left the yard cart with my tools and shirt by the road. So I walked out and towed them back.\n\nAround 5 minutes later, I heard her coming down the stairs. She even walked gracefully, as I heard her casual cadence.\n\nSoola walked in with her hair pulled back into an explosion of a ponytail. It really set off her cheek bones, and those were what made her sumptuous eyes look deeper set. She had on short spike heels, but the legs of her fitted, denim pants nearly hid them. Above that was a billowy, peasant top in a deep tan. That color was an enticing compliment to the rich color of her skin. The gold bracelets were gone, but gold earrings were now visible.\n\nHer eyes looked at me, waiting. My eyes didn't notice that as I hadn't finished devouring her, yet. She smirked, \"Maybe I should get that hotel room after all, given the look on your face? My virtue appears to be in danger.\"\n\n\"Sorry!\" I said, snapping back to polite. \"You are quite...well...appealing to observe.\"\n\n\"I wouldn't dress like this if I didn't want to be 'observed'!\" she said, and her full wattage smile took over her face. \"And you put a shirt on in my absence...how unfortunate.\"\n\n\"That smile could be the death of me!\" I mentally groaned, while I felt the blush rise on my face.\n\nSoola pivoted, neatly, in a 360 degree circle, \"Still Vogue, inside cover?\"\n\n\"I would rate that as worthy of...mmm...page 8 of Town &amp; Country,\" I said, as I tried to stifle a chuckle, which resulted in a small snort.\n\nThat humor, or the snort, or whatever, must have caught her off guard, because her huge smile broke into rolling, wondrous laughs.\n\nI closed my eyes and soaked in that magnificent laugh. \"Okay, that laugh will be the death of me. The smile will just make me a helpless male!\"\n\n\"Excuse me for that!\" she said, chuckles still filtering through, \"I do like your sense of humor, Ted! Can I call you 'Ted', since I have been so impolite as to assume, and not to ask?\"\n\n\"'Ted' away, all you want!\" I grinned, gesturing for her to sit. She sat back on the couch, and I in a chair, facing her. Once again, her poise shown with neatly crossed legs, and crossed wrists on top of those.\n\nLeaning forward on her wrists, she smiled slyly, \"Given the inquisition I was put through earlier...\"\n\nI gave her playful glare.\n\n\"....then, I suppose, I must reveal a few details about myself. I am a successful interior designer in Chicago. I was born in Milan, Italy, and came to the USA with my parents and little brother when I was seven. That was 34 years ago. For the sake of my 'modesty'...\" and she let her eyebrows rise, \"...I will let you do the math.\"\n\n\"Then, did you come to Willow Manor looking for business?\" I asked, while still stunned that she was actually 10 years older than I had predicted.\n\nHer smile dimmed, \"No, certainly not...more to get away from business, and Chicago, and...well...other things.\"\n\n\"I'm sorry,\" I suddenly blurted, and that seemed to cause a quick ripple of surprise in her posture, \"I'm being a poor host! Here it is late afternoon, and all I have offered you is water.\"\n\n\"I'm fine,\" she said, \"But thank you. I think you've been quite tolerant of someone who just, literally, 'dropped' in.\"\n\nI grimaced, \"And you will have to be tolerant if you are to eat my cooking!\"\n\nSoola immediately replied, with a chuckle, \"Oh, I heard it wasn't so bad.\" Then her expression sharply changed, as she sat up and clumsily backtracked, \"Well! Not that I actually 'heard'...I just...well assumed, since you live alone...Never mind, please, it was just a poorly phrased remark!\"\n\nI could see on her face that she knew I wasn't buying that.\n\nShe cleared her throat, and looked at my collection of mystery books, \"Have you read some of these?\" she said, gesturing at the books.\n\n\"All of them,\" I said, as I tried to decipher all of her remarks that had indicated a prior knowledge of me.\n\n\"Any favorites?\" she asked, once again politely clearing her throat.\n\nI didn't answer right away, as I was still concentrating. Then yielding, I replied, \"Anything by Harlan Coben in the Myron Bolitar series.\" I just decided I would let this game play out, as outside of the strange foreknowledge she seemed to have of me and this house, she was charming, intelligent, and achingly beautiful.\n\n\"Whether or not you trust my latent culinary skills, how about I take you out to Rod's Landing, just down the road? Not fancy. Food is simple, American cuisine, but perfectly prepared. They have a deck on the lake and the heat outside should be coming down. You're probably over dressed, but I think no matter how you were dressed, you would get lots of attention.\"\n\nLooking very relieved, probably from the change of conversation, she responded, \"I would like that. I'm no snob when offered good smoked ribs, or a steak...and French fries.\"\n\n\"You ready to leave now?\"\n\n\"I assume my purse is still in my car?\"\n\n\"Passenger foot well,\" I confirmed.\n\n\"Then let's take my car, and you drive,\" she grinned, \"Since you look 4-5 inches taller than me, I assume you have already adjusted the seat, when you drove my car?\n\n\"Yes, I did,\" I confirmed\n\n\"Then take me to your 'evil lair' and ply me with alcohol,\" she said, the smile bursting on her face. To emphasize the flirtation in that remark, she took the clip off that had held her ponytail. Those lush curls rushed to surround her face and frame those dangerous green eyes.\n\n\"As you wish,\" I said, gesturing to the front door. I was enjoying this flirtation, even though it seemed odd for only having known her for such a short, and unusual, time.\n\nThe drive to Rod's Landing was only a few minutes, and she asked a few innocuous questions about the area. I provided equally innocuous answers as I focused on the driving and the simple comfort of her presence.\n\nWhen we went into the restaurant, she put on her huge smile, and we were taken to the deck. She didn't just attract attention, she stole it like master thief once inside the bank vault. I put my hand on her back to emphasize that she was here with me.\n\nThe chatter in the room had dropped in half as she glided among the patrons. From fisherman just off of the lake, to the local gentry, to Rod, and even other women -- nobody ignored her. After I pulled her chair out, and she sat, I looked back through the big glass windows to see numerous pairs of eyes, and a couple gaping mouths. \"Okay, it wasn't just me that thinks her looks are dramatic!\"\n\nOnce I had sat down, she offered, \"Lovely view...very relaxing,\" while her eyes were off checking out the scenery. I slid the laminated drink menu her way while I took in her appealing profile, since the breeze had blown her curls back to her ear.\n\n\"I'm enjoying my lovely view,\" I smirked, looking directly at her face.\n\nAfter an obvious pause, Soola turned her eyes to me, and found me looking at her. Her smile slowly grew larger, and larger, \"Well...Mr. Taeger! Is this a convenient dinner for your surprise house guest, or is this a date?\"\n\nBefore I could answer, I heard our server clear their throat. Soola and I both turned to find Rod waiting, with a smile so big that I thought I might need to put on my sunglasses. My mind laughed, \"What? Rod never waits tables?...and never smiles? A good smirk is all I ever got for one of my best jokes!\"\n\n\"Rod?\" I said, a bit warily.\n\n\"Good afternoon...er...or evening...whichever you think it is?\" Rod stumbled.\n\n\"My dear,\" I began, while stifling the humor of seeing Rod nervous, \"This is the owner of this fine establishment. And no, his name is not 'Landing'. However, it is 'Rod'.\" As I said that, she turned to look at me. I think she could tell I was suppressing chuckling. Her eyes twinkled as her cheeks rose for an impending smile, and she gave me a conspiratorial wink.\n\nShe turned to Rod, and let her full wattage smile loose, as she extended her hand to him, \"Soola Matelli. Very nice to meet you, Rod!\" With her other hand, she lazily moved some curls that had drifted over her face. Then, she twisted the end of one strand through her long fingers, as she waited out his stupefied pause.\n\nRod suddenly came back to life, wiping his hand on his pants before extending his arm and shaking her hand. \"Welcome to my restaurant...Ms. Matelli! Can me -- I mean 'we'-- Can we get you something?\" She finally had to withdraw her fingers from within his, to get her hand back.\n\n\"I think he would like to know what I should ply you with, Soola?\" I said, still fighting the snickers. She glanced at me, and I could tell she was not going to let Rod off easy.\n\n\"Well...let me see,\" she said, in a delicious purr. Then she pointed one slender finger at the drink menu and drew down, across the choices. Turning that wicked smile back to his eyes, she tilted her head, \"How about...hmm...a vodka tonic, but with a twist of lemon?\"\n\n\"Excellent choice,\" Rod grinned, \"Oh...any preference on the Vodka?\"\n\n\"Do you carry Finlandia?\" she smiled.\n\n\"Oh, sorry, no!\" Rod said, as he shifted on his feet, \"Would Stoli be alright?\"\n\n\"Certainly!\" Soola oozed.\n\nRod gushed, \"I'll look into getting the Finlandia...if you think you might be coming back?\"\n\nShe turned to look at me, and cocked her head, \"Ted?\"\n\nThat caught me off guard, and my mind sprinted among the possibilities. Then, I just gave up, knowing I would be glad to have her here with me again, \"I think that would be a great idea, Rod. Thank you.\"\n\nRod snapped to, \"Stoli Vodka Tonic, with a twist. Coming right up!\" and he turned to leave.\n\n\"ROD?\" I chuckled.\n\nRod stopped and turned, \"Yeah, Ted?\"\n\n\"My usual, please?\"\n\n\"Oh, sure! Comin' Right up,\" and he left, hustling though the glass doors.\n\nSoola looked at me, with a satisfied smile.\n\n\"Miss Matelli, you are a naught lady!\" I laughed.\n\nShe relaxed and sat back into her chair, with a few laughs, \"Always flirt with the owner. You'll, absolutely, get great service...forever.\"\n\nChuckling, I opened my menu, \"Guess I'd better decide what to have for dinner, in case he forgets to ask me that, too.\"\n\nI heard Soola chuckle, as I scanned the first few items, but then a finger reached over the top of my menu and pushed it down. With a slight twist to the small smile on her face, she said, \"Question still stands.\"\n\n\"Question?\" I said, as my mind worked backwards through our recent moments involving the menu and then the drinks. Before I got back far enough, she responded to my apparent puzzled expression.\n\n\"Is this a date?\"\n\nMy mind was getting lost with all the strange turns our conversations seem to have taken, since she had arrived earlier today. I just went with my instincts at that moment, \"I hope so.\"\n\n\"Good\" she smirked as she tilted up her menu.\n\nDeciding I should try to play into this date idea, I reached out and drew her menu down. She looked up through the top of her smiling eyes. I grinned, \"So, will you come home with me, tonight?\"\n\nShe laughed, \"Is this your smooth, suave approach? Ask a girl to go home with you before she has even gotten her first drink?\"\n\n\"I'm out practice!\" I pleaded, \"And calling you simply \"a girl' seems, somehow, more like an insult.\"\n\nHer face rose up, eye-to-eye, \"Not so out of practice as you think...thank you! Now let me study this menu, so I can focus on curling Rod's toes when he comes back\"\n\nI let her read over the menu. \"I think I'm favoring the beef brisket,\" she finally said, \"Can you recommend it?\"\n\n\"Most definitely,\" I promptly replied, \"Moist, yet still very smoky. Don't know how Rod does it.\"\n\n\"Sold\" she said, and smiling as she laid her menu down.\n\nThat was when Rod returned with our drinks. He set them down and his eyes never left Soola after that. She'd given him that big smile again. \"Sorry,\" he said, but I have to get to some things, in back...so, I'm going to have Carla wait on you from here.\"\n\n\"Again, nice meeting you,\" she said, while extending her hand.\n\nRod took her hand, \"Delighted. You're welcome anytime. You can even bring this guy again...if you have to,\" he smirked, as he glanced at me.\n\n\"So glad you appreciate all my business, Rod!\" I sighed, \"One pretty face, and I'm out on my ear!\"\n\n\"Pretty?\" he swallowed, \"This lady is stunning! -- Sorry to be so forward, miss, but we don't see the likes of you very often...And sorry Ted, no offense to Jill. She was a very pretty women, but...OH! I'm so sorry Ted, I shouldn't have brought up Jill. I'd better get to those things...in back...that I have to get to.\" He turned, quickly, and walked away.\n\nCarla passed him as she came to our table, \"I see you met Rod. Not like him to come out to a table, but I can see why he made an exception!\" and she winked at Soola, who smiled back, \"Like to start with an appetizer?\"\n\n\"Soola, see anything tempting?\" I asked.\n\n\"I forgot to review those,\" she said, \"Please, you select.\"\n\n\"Pickled shrimp,\" I requested.\n\n\"My favorite!\" Karla giggled, \"Did you want to put in your order now, Ted?\"\n\n\"She'll have the brisket plate,\" I answered.\n\n\"For sides, we have corn on the cob, steak fries, broccoli...\"\n\n\"Fries!\" Soola interjected, with a cheerful smile.\n\n\"For you, Ted?\" Carla inquired.\n\n\"You know I'm a sucker for your New York strip. As always, medium, please. Baked potato, heavy on the butter, plus those bacon bits.\"\n\n\"Okay,\" Carla said, \"Any libations, in the lovely lady's honor?\"\n\n\"Libations?\" I laughed, \"Is Rod making you up your game?\"\n\n\"Common, Ted!\" she sighed, \"I'm fishin' for a bigger tip. Play along!\"\n\n\"Okay,\" I laughed, again, \"So, Soola...Libations?\"\n\nShe gave me a flirtatious look, \"It is our first date. Dare I request champagne?\"\n\n\"Do I need to bring the wine list?\" Carla sighed.\n\n\"You have one?\" I asked, in surprise.\n\n\"Are you kidding?...Rod? Come on!\" Carla laughed, \"But I'm trying to make us look classier, for you date!\"\n\nSoola laughed, \"You're doing fine! Now do you have any bubbly?\"\n\n\"Tattinger, Moet &amp; Chandon, Perriet-Jouet, and that one...Veuve Clic... something.\n\n\"Veuve Clicquot,\" Soola added, \"Ted, what is your choice for plying me?\"\n\n\"Definitely the Perriet-Jouet,\" I said. It was another of those moments that reminded me of just how much I was enjoying this woman, who had dropped into my life today.\n\n\"Glad that's settled,\" Carla exhaled, \"So, Brisket with Steak Fries, New York Strip, medium, baked spud, heavy butter, and bacon. Any salads first?\"\n\n\"House salad, oil and vinegar,\" for me, and please bring the pepper mill. I looked at Soola.\n\n\"Same for me,\" she said.\n\n\"Got it,\" Carla said, \"Last chance, anything else?\"\n\nI looked at Soola and she shook her head, as she chuckled. \"Nope, that's it, Carla Thank you.\" I said.\n\nAs Carla zipped away, Soola asked, \"I take it you're a regular here?\"\n\n\"Yeah, my 'go to' place,\" I shrugged.\n\nThen Soola leaned forward, elbows on the table, hands crossed, and her chin on her hands. She had an expression that was hard to determine, but she didn't seem upset. \"So, this Jill? Anything I should be aware of?\"\n\nI took a deep breath, and held Soola's eyes as much as I could, \"My late wife. I lost Jill less than two years ago. Jill's the one that loved Willow Manor. She's buried under the weeping willow, out front.\n\nSoola's surprise was sharp, but brief. Then her face turned gentle, and she sat back and picked up her vodka tonic, \"Then, let's toast to Jill.\"\n\nI waited for Carla to set the pickled shrimp appetizer down, with two small plates and two forks. Once Carla left, I raised my glass. \"To Jill,\" I agreed, tapping our glasses together. Soola's eyes and mine stayed together as we drank a couple sips. We both smiled, softly. I missed Jill so much, to this very day. But, I was still so attracted to Soola. She hummed satisfaction at her first bite of the shrimp, and gave me a wink.\n\nI was enthralled with the way she could go from playful to soft, from funny to quiet, flirtatious to a calm poise. At any moment, she could almost be another person, the way her face changed. And, I wasn't finding any excessive ego or jealousy that I might have expected from her, given her fancy car, her very fashionable clothes, her apparent business success, and her highly desirable looks. I hoped Jill, and even Emmi, could forgive me, for Soola was quickly burrowing into my soul.",
        "Soola set her drink down, and leaned towards me, \"I know you loved her very, very, much. I can feel it and see it when you think of her. She was a lucky woman to have you.\"\n\nNow I couldn't hold Soola's gaze, as my eyes welled up. So, I turned to look towards the sun, which was just starting to drop behind the line of trees around the lake. With a small sniff, I shrugged, \"Always thought I was the lucky one...to have Jill.\" Drawing my fingers under my eyes, I let out a muddled chuckle, \"Not exactly the best topic for a first date!\"\n\nSoola reached over and took my damp hand, \"I think it's the perfect topic! We could flirt all evening, joke, or even end up in bed. And I still wouldn't have known, if it weren't for this moment, just what a really sincere, caring...and just genuine man you are! You're a very impressive man, Teddy.\"\n\nHer use of \"Teddy\" brought Jill to mind, and that just heightened the conflict of what I was feeling for Soola. I kind of gurgled through a chuckle, as I tried to keep my emotions in check, when I responded, \"I'm pretty impressed with you, too.\"\n\nSoola let her hand slip away, while she smiled, as our salads had arrived. Carla cranked the pepper grinder, until I finally waved her off. Soola took two twists of pepper and then signaled for Carla to stop. We went to work on the salads, both of us crunching a crouton at the same time, and then smiling. Too soon, our meal arrived, as we had barely eaten half of our salads. Soola scooted her salad aside, while I decided to continue with mine.\n\n\"You were right,\" Soola smiled, \"This brisket is wonderful.\"\n\nCarla then arrived with the Perriet-Jouet, and properly tilted the flutes to fill them. I raised my flute, and Soola quickly swallowed and raised her glass. \"Here's to fainting on someone's doorstep!\" I toasted. She let out one of her wonderful, rich laughs, and then nodded as she tapped the glasses together.\n\n\"It was the end of your driveway, you know?\" she chuckled.\n\n\"You drove all the way from Chicago, and you want to quibble over the last 300 feet? I want to remember it as my doorstep!\"\n\n\"Doorstep, it is,\" she said, still chuckling as she bit into one of the steak fries.\n\nAs she chewed, the sparkle in her eyes wavered and her face tensed. \"I suppose I should tell you about Jack,\" she said.\n\n\"Jack and Jill,\" I joked, wanting to brighten her face.\n\nWith one tired chuckle, she nodded, \"My Jack, your Jill. He's my ex,\" she sighed, \"Three years now. I was married to him for 14 years. The only man I have ever loved, but that love stopped 4 years ago.\"\n\nHer story continued around our pauses for eating. \"I always thought he loved me for who I was, not just for my looks. I still don't know when it started. But, he just found himself a young, slinky twit. He also started to secretly divert money from our joint accounts. Once I found out, I had to file for divorce, just for financial protection. Biggest problem is that he was my business partner in the interior design business.\"\n\n\"That has to hurt. And you never found out why?\" I asked.\n\n\"Not really,\" she said, shaking her curls strongly, \"However, and forgive me the language, but his little twit bitch was so stupid as to march up to our front door when he was out of town on business. She proclaimed to me the Jack was hers now, and that the house &amp; business would be hers, too, 'because her Jackie said so!' And I should just clear out, now, before he threw me out, since I couldn't give him any children. I've never so badly wanted to wipe a smirk off of anyone's face as I did hers that day. I resisted, though, and slammed the damn door in that bitch's smug face.\"\n\n\"And that is how you found out about his cheating?\" I asked.\n\n\"Nice, huh?\"\n\n\"My Jill couldn't have children, either,\" I added, \"But I knew it when I married her. Childhood injury.\"\n\nSoola looked into my eyes for the first time since the \"Jack\" dissertation had begun, \"And not having children never bothered you?\"\n\n\"Not really,\" I replied, \"I mean, I think I would have been a good father. But, I didn't feel that strong need to 'leave a legacy of family behind me' or to live my life through my children. It was a joy to be able focus just on the women I loved, and share my life with her, without all the distractions and interruptions that children entail. I'm happy to leave populating the world to others, like my older brother and his clan of six kids...I'm sorry, Soola. I didn't think about your feelings. I hope my thoughts on children didn't offend you?\"\n\n\"No!\" she almost barked, \"Not at all.\" It was a delight to see a modest smile return to her face.\n\n\"Good,\" I sighed, \"And how was the dinner\"?\n\n\"Just like you said, perfectly prepared,\" she replied. She picked up the champagne bottle and examined it. \"And I had never had this champagne before. I'll have to remember it. I have been, and still am, enjoying it, a lot. Of course, I am enjoying the company even more!\"\n\nI liked the sound of that, and asked, \"Need I ply you with anything more?\"\n\n\"No, I'm so full I can't even think about desert!\" she exclaimed.\n\n\"Want to go when we finish the champagne?\" I asked.\n\n\"That sounds great,\"\n\n\"Okay,\" and I waved at Carla for the check.\n\nWhen we left, Soola got another round of rapt attention, with Rod even coming out to wave goodbye. As we passed him, he caught my arm, \"Are we going to see more of her, Ted?\"\n\n\"Which parts of her were you hoping to see more of...eh, Rod?\" I grinned.\n\nRod blushed, \"I meant...well, just don't let her get away, Rod. There's something special about her, and it's more than her looks!\" He let go of my arm.\n\nI saw Soola waiting at the door, smiling broadly. \"Agreed!\" I said to Rod, and hurried to catch up with her.\n\nBack at Willow Manor, I put her car in the garage next to my Escalade, after moving my side-by-side UTV outside. Inside the house, she took my hand as we walked to the front of the house. Holding her hand felt so familiar and comfortable, and the strength of those feelings were so oddly out of proportion to this simple moment.\n\n\"Now that I have plied you with food and liquor, what would you like to do? Talk some more? Turn in early? You're welcome to read any of my books. Or would...\"\n\nShe stopped me there, \"I've had a pretty long day, but I'm not ready to go to sleep, yet. And, since I'm not the kind of woman that faints on your doorstep and then jumps in your bed on the first date...\" She waited for my laughs to subside. \"...What I'd like is to watch TV...with you.\n\n\"Sure\" I said, \"The family room okay?\"\n\nShe nodded, \"I have one more special request.\"\n\n\"Which is?\"\n\n\"I'd like to curl up with you on the couch,\" she said, with a hopeful smile.\n\n\"I really like that idea,\" I hummed, for it used to be one of Jill' favorite things, too. That memory combined with this lovely woman was so very appealing.\n\n\"How about we change into more comfortable clothes and meet back here in 10 to 15 minutes?\" she asked.\n\nI was in the family room in a light track suit when she came in, wearing a knee length night shirt in a green that picked up on her eye color. She sat right next to me on the couch. Then she brushed my hair back and looked into my eyes. \"I hope I'm not making you uncomfortable, Teddy. Even though we have only known each other for half a day, there is something in me that finds you so satisfyingly comfortable.\"\n\n\"I can agree with that,\" I happily smiled, as I took my turn to brush some of her curls aside, \"There is a surprising satisfaction in being around you, and not just because you are wonderful to look at. It's...well...rather like we've done this before.\"\n\n\"Exactly!\" she said, with a big smile. Then she got a mischievous look on her face, and pushed me onto my side. She stood, lifted my legs up, putting them against the back cushions, and sat down. Soola got on her side, positioned herself to spoon against me, and then snuggled in with a happy purr. \"Pick something for us to watch,\" she requested, as she moved some of her long curls out of my way.\n\n\"What do you like to watch?\" I asked, loving her warm body against me.\n\n\"What would you think I think I like? Let's test this familiarity thing,\" and she snuggled to fit me a little closer, \"Come on. Guess, Teddy!\"\n\nI sighed, liking the way that I was pressed against her back, \"Well, I doubt you like shows with too much graphic violence. And probably don't like shows that are F'n this and F'n that.\"\n\n\"Correct, so far,\" she said, \"Keep going,\" and now I could feel her body vibrate as she spoke.\n\n\"Alright, you probably like an intelligent, clever romance, so not ones where every word is virtually predictable. You'll like humor, but not slapstick. So, some of my hunches, in older favorites, would be, Downton Abbey, nearly any Pixar, the Harry Potter series, maybe even Lords of the Rings. And You've Got Mail, plus...ummm...\"\n\n\"That was very good,\" she said, \"So what's on right now?\"\n\nI turned on the TV and brought up the guide, \"Ah! There's The Incredibles 2!\"\n\n\"Perfect,\" she hummed into me, \"I love the baby, Jack-Jack!\"\n\nWe both laughed at the movie, and it felt so good to feel her laugh while snuggled up against me. Then I started to get an erection. So, I gently tried to shift to move it away from her.\n\n\"Ted?\"\n\n\"Yes?\"\n\n\"Stop moving away, and put it back against me. I like it!\" And then she snuggled her butt closer to emphasize her preference. Feeling a bit awkward, I did as she asked, and she moved her butt around, almost seeming to encourage my erection. I was just starting to smile to myself at the delight of her, when she grabbed my wrist, and wrapped my arm over her breasts, placing my palm squarely on her breast.\n\n\"Comfortable, now?\" she asked.\n\n\"I certainly am!\" I chimed.\n\n\"Good. This is the best way to watch a movie,\" she said.\n\nShe'd get no argument from me. It turned into one of those magical times when you're with someone, and having clearly erotic contact, and yet you don't want it to escalate to sex, because it would just disturb the special comfort you were so fully enjoying.\n\nErections came &amp; went, and my dick would occasionally bounce against her, which she'd answer with a quick wiggle. My hand was surrounding her unexpectedly full breast, and her nipple would harden for a while, when one of us shifted. Sometimes, she seemed to unconsciously stroke the top of my foot with her toes. Other times, she slid her fingers between mine and pressed my hand more firmly onto her breast. Then she'd sigh at the resulting firmer contact.\n\nWe didn't talk, except for comments about the movie. She had been quiet for a while towards the end of the movie, and when the credits came on, I heard and felt a small snort.\n\n\"I'm falling asleep,\" Soola mumbled, \"Thank you, Teddy. I think I'm going to bed now.\" She sat up, and all her thick curls shuffled into a new equilibrium.\n\nI clicked the TV off, replying, \"Me, too. I'll walk you up.\" All I could think of, as I followed her up the stairs, was that I wanted to take her to my bed, and just listen to her sleep. Just to see that mass of dark curls on the pillow beside me. I wanted to watch the morning light slowly illuminate the lovely gold tones of her skin. To see those emerald green eyes awake from a sound sleep. To hear her inevitable morning yawn and stretch.\n\nBut, I just said, \"Sleep as long as you want.\" She gave me a groggy, \"Nite\" and a clumsy, brief hug.\n\nIn my room, I looked out through the sheer curtains, as the moonlight lit Jill's willow tree. The room was quiet for too long. So, my mind asked Jill, \"What do you think of her, dear? Special, right? Dramatic looking, for sure. Why does she seem so familiar, though? Is she the one you would have wanted me to be with? But, why is she here? Why would she come from Chicago to this place...to me? And, will she go back to Chicago?\" I wished Jill could help, while never having thought that she really could. It took me over an hour to get my brain to shut out Soola, and let me sleep.\n\n= = = = = = =\n\n\"Teddy?\n\n\"mmmm...yeah?\"\n\n\"Can I come in?\" she asked, in a low voice.\n\n\"Uh...sure\"\n\n\"Can I sit?\" were her cautious words.\n\n\"Of course...uh...what time is it?\" I said, as I felt the bed sag slightly.\n\n\"3:41...sorry,\"\n\nI could just see the outline of her and that hair against the faint light through the window. \"What is it, beautiful?\" I asked, trying to get my eyes and brain to work.\n\nEven with so little light, I could see the big smile, though it didn't last long. \"This is so unlike me!\" she said, in a higher pitched voice than I had heard before, and she sounded frustrated.\n\n\"What is?\" I asked, covering a yawn.\n\n\"To have...impulses this strong...To feel so compelled...to need like this,\" she said, and her voice sounded shy, and rather sultry.\n\n\"Maybe I sound a bit na\u00efve, Soola, but I have to ask you, to be clear...what is it you need?\" I said, waiting for the desire for sex I thought would be coming.\n\nIn the dark of the room, I heard her sniff. Then she spoke, and her voice was rather choked, \"I'm not the kind of woman who just jumps into bed with a man I just met...\"\n\n\"I sensed that, Soola,\" I interjected, softly.\n\nThen she suddenly blurted, and her words came fast, \"I'm great in bed, Teddy! I love sex, and I can stay in bed all day, doing all kind of things to my man. Sweat 'til we drop, shower, and then do it all again. I can play the mouse or the tiger! Since my divorce, I have gone wild, and now I have men who beg me for another night!\"\n\n\"Okay, you have my attention!\" I exclaimed, startled, and now much more awake, as I looked up at her slumped shadow.\n\n\"But...\" she said, before a pause.\n\n\"Just talk to me, Soola. Whatever it is, I'm sure it will be okay.\"\n\nI heard her deep sigh, \"It was always Soola that was in control in those relationships. Jack, that asshole, really hurt me, and I wasn't going to let myself get sucker punched like that again. If I didn't see one man again, no problem. I could get another.\"\n\n\"This all sounds a bit strange,\" I said, \"As the Soola I met, and have already grown quite fond of, doesn't seem like that person.\" Then, I chuckled, \"Well, maybe she is great at sex, but I haven't seen that side of her, so I can't agree or disagree.\"\n\nShe gave me a punch in the leg. \"Ted, you jerk. You aren't one of those men I'm talking about. You're the problem...suddenly, my defenses are failing me. I don't feel in control. Out of nowhere, I'm feeling contentment like when I was still happy in my marriage. Like what we have between us was here before, and will be here tomorrow, too.\"\n\n\"I like the sound of that Soola...a tomorrow with you in it. Is that a problem for you? I still don't know why you'd drive from Chicago to specifically come here?\"\n\n\"I can't explain coming here, right now,\" she said, with frustration returning to her voice, \"But, I'm frustrated that my defensive self isn't working. I'm vulnerable because I find myself needing just one man...specifically you! And no offense to your ego, please, but it's not the sex that I'm finding I have this urgent need for. Though I am sure our sex would be great! It's the sharing and the closeness. The talking over dinner was so special, and then curled up with you in front of the TV was wonderful. Much more than my emotions expected. Part of me wants to run back to Chicago to be safe from you.\"\n\n\"And the other part?\" I asked, as I tried to convey hope with my voice, and by reaching out and taking her hand.\n\n\"The other part says I'd be a fool to leave you and that there is so much more to you that I need to know about. It says I should just let myself enjoy you and that all men are not like Jack. And it says, I should just let myself be held close to this man, in body and heart, plus to believe that trust can last.\"\n\n\"I would never want to hurt you or disappoint you, Soola. But, what can I do for you, right now?\"\n\nSoola let out a big sigh, and hesitated, \"This is the moment I have to believe my own words...Teddy, please let me into your bed and hold me close, and let me wake there later this morning?\"\n\n\"With pleasure, anytime\" I said. She stood up, and I flipped the covers back. Then she further surprised me by pulling her nightshirt over her head, before she slid into bed and against me, beautifully naked.\n\nShe spooned back against my silk pajamas, and then swept her hair under her neck, so that it didn't fill my face. \"Where's that wonderful hand I had on my breast earlier?\"\n\n\"It's busy,\" I said, and kissed her shoulder. I had too much temptation in my arms to not take at least one tour of her magnificent body. I took the backs of my fingers, and slowly drew them down the side of her sleek body, behind her arm, then over the edge of her buttock, and down her leg, as far as her knees.\n\n\"Definitely a busy hand,\" Soola purred and slowly squirmed to match where I was touching her.\n\nTurning my hand over, and using the pads of my fingers, I drew back up her body. This time, a little farther forward, I traversed her hip bone and came up to her ribs, where I met her arm. Then I just slid up her arm to her shoulder, and lastly up to her neck.\n\nShe held her breath as I went up her neck to her ear, and then exhaled \"MMMmmm...\" as I relocated my hand back to her waist. When I felt her relax again, with my happy erection cradled against her butt, I surprised her by sliding my hand around and onto her taught stomach. Then let it creep downward. She let out a hushed hiss as my fingers covered the small strip of pubic hair that I had found, and her back arched while she stretched her legs out straight.\n\nAs she slowly twisted her body against me, I whispered, \"Now, go to sleep!\"\n\n\"What?!\" she said, in disbelief, as she added another squirm to reiterate her question.\n\n\"Go to sleep!\" I confirmed as I kept my fingers on her small, furry patch, \"It's nearly 4:15.\"\n\n\"Well...okay...SIR!\" she said, and giggled, as she snuggled back into a spooning position, and once again parked her hair under her neck.\n\nWith my chin just behind her shoulder, I replayed that \"SIR!\" and the appended giggle. \"Was that just a coincidence!? It had to be!\"\n\n= = = = = = =\n\nI woke up at 7:30 and got everything I had wanted when I had walked her upstairs last night. Soola was no longer right against me, but very close. She was sleeping on the pillow next to me, lying on her stomach. The covers were off of her to the point her she was exposed from her tailbone up. Her thick curls of hair were all around her, hiding her face. I could hear the little huffs of breath as she slept. The sunlight was coming in and it highlighted the exquisite curve of her back, as well as covering her in hues of golds and browns.\n\nI need to use the bathroom, and tried to slide away, but she awoke, twisted, yawned, and stretched, and then opened those eyes. It was also my first sighting of her lovely breasts. \"Morning\" she said, with her second yawn.\n\n\"Morning, gorgeous. Sleep well?\" I asked, with a smile.\n\n\"Oh, Yes!\" she said, \"I seem to remember drifting off to sleep with someone caressing my skin.\"\n\n\"Is that right? If I find him, I send him back in,\" I said, as I slid out of the bed.\n\nShe gave me that big smile, \"Well, when you find him, tell him I'll book him for tonight, too, if he's not already booked up.\"\n\nI stopped just as I was entering the bathroom, \"I think anyone would make room for you in their schedule.\"\n\nWhen I came out of the bathroom, she wasn't on the bed. I looked around and found the silhouette of her. She was sitting in Jill's favorite chair on the balcony. Memories of Jill in her last mornings flooded back, but I kept them in check as I went out onto the balcony, through the sliding door.\n\n\"This is a wonderful spot to take in the mornings,\" Soola said, as she sat in her nightshirt with her feet tucked beside her.",
        "\"It's one of the reasons we bought this house,\" I said.\n\n\"It was Jill's favorite spot, wasn't it?\" she sighed, \"It's so beautiful, it must have been.\"\n\n\"Yes\" I replied, \"It's why she asked to be buried there, under the willow, so that she could look up here.\"\n\n\"Ted?\"\n\n\"Yes?\"\n\n\"If I'm intruding on any private spots...or even memories, please tell me?\" she asked, with concern wrinkling her brow.\n\n\"Your fine,\" I assured, \"Now, would you like coffee, or something else?\"\n\n\"If you're sure I am not intruding...then I will take coffee with half to a whole teaspoon of sugar, depending on how dark the coffee is,\" she asked.\n\n\"Coming right up,\" I said.\n\nBefore I could turn, she commanded, \"Come here Mr. Taeger.\"\n\nI moved closer to her and she reached up, grabbed the lapels of my pajamas, and pulled me down into a light kiss. Letting me go, she said, \"That's for being who you are.\"\n\n\"You make it easy to do that, Soola,\" I smiled, before I opened the sliding door. I could only think of the taste of her, and the feel of those soft lips, as I went down to the kitchen.\n\nComing back with the coffee, I handed hers to her, and then sat in the chair next to her.\n\n\"Thank you,\" she said, as she put her hands around the hot mug. In the slightly cool morning air, she looked into the distance and revealed, \"There are some things I need to tell you, before we go much further.\"\n\n\"I'm listening,\" I responded, \"But, not concerned.\"\n\n\"I am,\" she replied, \"It feels a bit like I'm going nuts.\"\n\n\"Doesn't show,\" I joked, \"I'll call the squirrels over for a second opinion!\"\n\nShe gave one laugh, and then said, \"I'm not kidding. If you tell me to go home, I'll understand.\"\n\n\"Alright\" I said, in a quieter, reassuring tone.\n\n\"As for why I am here from Chicago...well...I'm not really sure,\" she sighed, \"Calling it playing a hunch, or whatever. And I'm not one that plays hunches, typically. I take risks in my interior designs, but much less with my money or my life. It was around two years ago, that I suddenly began having occasional words coming into my mind, words that I didn't remember thinking. And there would be a strong burst of emotion attached to each word, every time I 'heard' it.\" She had added finger quotes, when she had said, \"heard\".\n\n\"Nothing medical, I assume,\" I asked.\n\n\"No. My doctor found nothing,\" Soola said, and then sipped on her coffee, \"The words came to me infrequently. It was if they were nagging me. I fought to ignore them, and do my job. I even tried dating certain men to appease the intrusive words, without success.\"\n\n\"What words could have influenced you to date certain men, if I may ask?\"\n\nHer head turned down to look at her coffee after taking a sip. \"Teddy, Love, Trust, and Strength\" she murmured, \"So, I dated 'Teds'!\"\n\n\"So you hear voices?\" I asked, working hard to understand this.\n\n\"Only single words at a time,\" she exhaled, \"At first I didn't hear them as a voice, just in my own mind's voice, as it were. Then, three or four months ago, new words were added, and it was then that I recognized a sort of 'voice' as some of words came with a different edge to the emotions. I'm really unsure whether to consider the new words to be from the same source, or from another one. For some reason, I came to call the source of all the words 'Gem', as in 'gemstone'.\" It was the addition of these new words that pushed me to try and solve what they meant.\"\n\n\"And the new words were what?\" I prodded, since the words were key pieces of her puzzle.\n\n\"Hmmm\" she chuckled, \"The new words Gem added were 'Lover, Gentle, Willow, Manor,' and again, 'Ted'. It still didn't give me enough direction, until one of our furniture suppliers just happened to mention 'Willow Manor' when referring to different order.\"\n\n\"Seagraves in Des Plaines!?\" I coughed in shock.\n\n\"Yeah. Bill. He's the one who said his order was going to Theodore Taeger,\" she smirked, \"At hearing that, I nearly collapsed into one of his precious antique chairs! Bill gave me your address. I wasn't supposed to say where I got it, but you guessed it, and I don't think you plan on complaining, do you?\"\n\n\"Not at all!\" I crowed, happily, \"So, when was this?\"\n\n\"That was about a month ago,\" she replied, \"So, for Gem's clues, I then had 'Ted/Teddy at Willow Manor' and then, 'Love, Trust, Strength, Lover, and Gentle.' I wanted all those attributes in a man, and I was still dealing with all the daily crap of working with my asshole Ex. So, I just made a decision to track you down. It would get me out of the office for a while, and I could meet you, probably write you off, and then the words might leave me alone. Then, I could head back home.\"\n\n\"And will you go back?\" I asked, taking her hand.\n\nShe turned to look at me, and then stroked my cheek with the fingers of her other hand, \"I'm finding the idea of staying with you to be very appealing. But, this has been such a whirlwind of emotions since I arrived yesterday, that I'm not sure I trust myself, yet. I don't do 'love at first sight', or so I thought, until I got here. And there is still the question of whether you want to move forward with a woman of questionable sanity, who hears words and then travels 700 miles to chase an unknown man?\"\n\n\"That was 700 plus miles, my dear,\" I chuckled.\n\n\"Corrected again,\" she laughed tiredly, \"Fainted on your Doorstep after traveling 700 Plus miles!\"\n\n\"Now you've got it,\" I smiled, \"And I have you, I hope.\"\n\n\"Really?\" Soola said, \"This all isn't just too crazy a way to meet a woman?\"\n\n\"We all have 'ghosts' in our past,\" I said, \"So, please stay and see how this all works out.\"\n\n\"You know,\" she smiled, \"You are all those things the 'voices' said you were, and more.\"\n\nI thought to ask, \"Did the 'voices' tell you anything about the house, as you seem to know where things are?\"\n\n\"No, they didn't,\" she said, looking puzzled, \"But, I know what you mean. I didn't need to even consider where rooms and things were. I just instinctively go to them. I wonder why I can do that, too?\"\n\n\"I'd love to keep talking about this,\" I said, as I glanced inside at a clock, \"But, I have potential new clients coming at 10 this morning, the Karlfeldts, and I need to get prepared, as I didn't get it done yesterday with your 'interruption'. Can I leave you to your own devices? If you actually don't know where something is, just ask. I'll be in my office. I'm going to jump in the shower.\" I opened the sliding patio door.\n\n\"Interruption, am I!\" she cried, playing impugned, \"WELL, I'll just leave then!\" As she passed me and picked up my empty coffee mug, she swatted my butt. \"Ace the deal, Teddy.\"\n\n= = = = = = =\n\nClean and dressed, I went down to my office. Soola's door had been closed, so I got another cup of coffee for myself and sat down at my desk. I needed to do all the double checks on the figures for the Karlfeldts' proposal, and then have everything prepared for the presentation.\n\nA couple numbers weren't adding correctly on the roofing costs when I felt those long fingers slide over my shoulders, followed by arms that wrapped around my neck. Dark curls came into my peripheral vision on my right, and then I got a soft nip on my ear. \"I forgot to thank my host for the wonderful few hours that I got to sleep in his bed. Falling asleep after your caresses, and with your hand resting on my landing strip, was magical.\"\n\n\"If I said it was 'my pleasure',\" I chuckled, \"It would be an understatement.\" I saw more curls in front of me before her blurry face appeared, and gave me warm kiss. Then she unwrapped herself. I swiveled around to find today's fashion was a delightful, yellow sundress with matching yellow sandals, and plenty of gold jewelry. \"Do you always look so stunning, or is this just for me?\"\n\nHer look was soft, her smile sweet, \"I have to use everything I have to make you keep this crazy woman around for a while.\"\n\n\"Then I think you 'Aced the deal', my lovely,\" I grinned.\n\nSoola moved and sat on my lap, \"How can this only have been a single day? The comfort level feels like it has been months, or even years. I can't believe I feel like this. It goes against common sense.\"\n\n\"I vote to forget common sense, and just enjoy this,\" I said, happily, \"I have this wonderful woman that fell into my lap...\"\n\nSoola laughed, put her cheek against mine, and hugged my neck.\n\nI continued, whispering in her ear, \"...and all I want to do is to say, \"I love you, I love you!\" Then, I wrapped my arms around her, having to slide my fingers under the ties of her dress, where they hung, long, from her neck.\n\nSoola gasped in my ear, and squeezed me tight.\n\nI was choking back the emotions, \"It wasn't like something I had to discover and convince myself that was real. I've felt it almost from the beginning and I just have to stop denying the reality!\"\n\nSoola sniffled in my ear, \"I was falling for the idea of you back in Chicago! I drove down here repeating a mantra; that I would realize you were just some fantasy, and then I could go home and be done with the words in my brain. But you're better than my fantasy...and I don't want to leave!\"\n\n\"Then don't!\" I said, and I exhaled a deep breath, \"Despite all the things I'd like to say or do to you right now, I have to get ready for this meeting.\"\n\n\"Of course!\" Soola said, as she popped off of my lap, with wet eyes and brushed her skirt back down. \"Let me get you some breakfast while you work.\"\n\n\"That'd be great, but keep it quick and simple,\" I smiled, \"Maybe two scrambled eggs and toast?\"\n\n\"Deal\" she said, \"But another day I'm going to make you my Ethiopian omelet!\"\n\n\"I look forward to that,\" I said, \"But I've got to work now.\"\n\nShe turned and sashayed her delicious ass out of the room. I sighed, trying to quiet my loins and focus on the preparations. She came back with the food a short time later, though I hardly remember eating it. She removed my plate, adding a stroke to my cheek. I smiled but stay focused on my computer.\n\nA bit later, I was hurriedly arranging the signature papers in the folder, when I heard Soola's voice, \"Welcome Mr. &amp; Mrs. Karlfeldt. Please come in.\"\n\n\"Did I miss the doorbell!?\" I jumped up and headed for the foyer. I heard Mrs. Karlfeldt's voice, \"Oh, this home is magnificent!\"\n\n\"Isn't it spectacular...just spectacular!\" Soola said, as I came up to the group. That those words were Jill's shot through me, but I had to focus on business.\n\nMr. Karlfeldt laughed, \"Even allowing for your prejudice, Mrs. Taeger, I have to agree with you.\" As I stood by Soola, she found my hand and squeezed it. He continued, \"And Ted, great to see you. Are you ready for us?\"\n\n\"I certainly am,\" I chimed as I glanced at the silly grin on Soola's face, \"This way please.\"\n\n= = = = = = =\n\nThe meeting went well, and 40 minutes later I had new clients in Stan &amp; Cynthia. As I walked them to the front door, Soola was waiting, perfectly posed.\n\n\"Your husband has great ideas, Mrs. Taeger! I look forward to our future meetings,\" Stan said.\n\nSoola glanced at me with a smirk. With her hands still clasped in front of her, those green eyes shyly dropped, \"I think he is very talented, too, Mr. Karlfeldt. However, I should say that we are not married, actually.\"\n\n\"What?!\" Cynthia exclaimed, \"Ted, you must rectify that immediately! I want to see you and this stunning woman at our house for dinner, soon!\"\n\n\"Ted, my man! Don't let her get away!\" Stan laughed, \"I thought she was your inspiration for this beautiful home?\"\n\nI smiled, broadly, \"Stan &amp; Cynthia, may I introduce Ms. Soola Matelli.\"\n\nStan &amp; Cynthia both smiled and reached out their hands. After Stan's, Soola shook Cynthia's hand, and Cynthia queried, \"Sue La?\"\n\nSoola chuckled, \"One word. It's short for Arsoola, and is spelled 'S-o-o-l-a'.\"\n\n\"Well, it's lovely!\" Then Cynthia winked at Soola, \"Now, if Ted doesn't propose soon, you just come see me! If you need a spot for...you know, we've got a beautiful gazebo set among acres of trees. But you might want to hurry, in case Ted gets ideas about remodeling it, too.\"\n\nSoola's smirk went high up into her cheeks, and her eyes sparkled as she winked back at Cynthia, \"Good to know I have somebody on my side! And we'd love to have dinner with you, wouldn't we DEAR?\"\n\n\"We'd love to, DEAR,\" I replied, with equal emphasis.\n\nStan laughed, and Cynthia grinned, saying, \"Come on, Stan. We better get the gazebo cleaned up. They're going to need it - soon!\" Then they both left with a wave.\n\nSoola closed the door behind them, and then leaned back against the door. We both looked at each other and broke out laughing.\n\n\"They just met us!\" she laughed, \"And they're trying to marry us off! What is going on here?\"\n\nI laughed, \"Do you think whatever is happening to us is apparent to others, too?\"\n\n\"I seems that way,\" she said, still chuckling, \"By the way, I have been meaning to ask if you have time to show me the land you have. I do not have a sense of it, the way that I do with the house.\"\n\nSure I said, and we walked outside. I told her what I knew of the history. How it had once been part of a large plantation, with all but these 20 acres sold off, years ago.\n\nShe started tugging at my hand, \"This is Jill's grave?\" as she pointed toward the headstone under the willow, which we now approached. Soola stood there looking at the marker. I looked at the gravestone and had such torn feelings: A love of some many years, never to return, but a new love beside me.\n\n\"She was the same age as me, when...you lost her,\" Soola said wistfully.\n\nI gulped, \"I suppose that's right.\" I looked at Soola's face, as she still studied Jill's grave. It was the first time that I had studied Soola in the sunlight. I was amazed that I had never been able to find an angle to view her, in which she didn't look...well...spectacular. Then, I said to her, \"A question?\"\n\nShe looked up, a bit curious, \"Sure.\"\n\n\"When the Karlfeldts first came in, you said, 'Spectacular...just spectacular.' Do you remember why you chose those particular words?\"\n\n\"I did feel something,\" she responded, \"I mean, the words just came to me like any words would, though I would say I don't usually use 'spectacular.\" But when I said it, there was this...'boost' of happiness I felt, that was kind of like what I felt with some of those 'words' that brought me here. Why do you ask?\"\n\n\"That was Jill's favorite exclamation -- 'spectacular, just spectacular'.\"\n\nSoola looked shocked. She turned from me, to the headstone, and then back to me. \"Okay...this is getting rather weird!\" she said, with obvious concern. Then, she squatted, put her fingers to her lips, and then pressed those fingers to the headstone, \"Bless you, Jill.\" Then she requested, \"How about we move on?\"\n\n\"Sure,\" I agreed, \"Let me run around back and get the UTV.\" I jogged around back, fired it up, and came back to her within a minute or two.\n\n\"So, this is the deluxe tour?\" she smiled, as she smoothed her dress under her, after sitting.\n\nWe started to drive off, when I replied, \"There ought to be some funny clich\u00e9 response to that, but I can't think of one.\"\n\n\"Ah!\" Soola said, as she surrounded my arm, \"The memory is going! Maybe I should be falling for a younger man?\"\n\n\"Yeah?...Anyway...this used to be cotton fields back here, but nature was given its way, many years ago I believe,\" I said, as we rumbled along the dirt tracks at the fence line of my land.\n\n\"You have any plans for it?\" she asked, in a happy tone.\n\n\"I thought maybe I'd create a few trails, especially where the land borders the creek, with all those big trees.\"\n\nShe cooed, \"That would be lovely...to wander through those big trees with the running water.\"\n\n\"I once considered putting in an indoor pool, on the opposite side of the house from the willow.\"\n\n\"Ted?\"\n\n\"Yes?\"\n\n\"Would you consider that pool again, if I stay?\" she said, looking to catch my eyes as I drove up the trail adjacent to the creek.\n\n\"Oh, so now this \"old\" man needs to bribe you to stay?\" I chuckled.\n\nShe hugged my arm tighter, \"I won't even joke about that. I want to stay because I want You. A pool would just make it...nicer...to spend that time with you. Interesting things can happen in a properly equipped cabana.\"\n\n\"And you, the decorator,\" I smirked, \"would know how to 'properly equip' said cabana?\"\n\n\"Of course!\" she chirped, then transitioned to sultry, \"I'm very good at what I do.\"\n\n\"Would that be the 'mouse' or the 'tiger' speaking?\" I asked.\n\n\"Which would you like?\" she purred, close to my ear.\n\n\"Maybe I'd start with a 'kitty', and try the others later,\" I chuckled, as I pulled to a halt and stopped by the slave quarters.\n\nSoola got out and sauntered over to the large building. Turning off the ignition and setting the brake, I was just getting out when she asked, \"Who's Emmi-Anne?\"\n\nWith a bit of a sigh, I said, \"She was a girl that died here.\"\n\n\"But she's not buried here?\" Soola asked.\n\n\"Not that I know.\"\n\n\"How interesting someone put in a marker for her, here,\" Soola said, \"Do you know anything about her?\"\n\n\"She was murdered in this building, at age 20.\"\n\nSoola reached down and rubbed the plaque with her finger, \"This looks quite new. Did you replace it? This is modern casting...\" With that, Soola froze, looking at the marker with her finger on it, but not moving.\n\n\"Ted!?\"\n\n\"What?\"\n\n\"You knew her, didn't you!?\" Soola exclaimed.\n\nI wasn't prepared to explain my relationship with Emmi-Anne, yet. If Soola thought she was crazy for hearing some 'words', what would she think if she knew that I had a relationship with a ghost, who, for all I knew, might still be here? Failing at a prompt response, I stumbled, \"I...she...\"\n\nSoola bolted up and started backing away, \"You didn't?...murdered!...No, you couldn't!...\" She almost fell as she backed into the old horse trough.\n\n\"OH MY GOD! She thinks I murdered Emmi!\" I felt wildly desperate, as I waved my open palms at Soola, \"NO! I DID NOT! Please, Soola! It's something very different!\"\n\nAt least that, and the horse trough, got Soola to stop backing up. I could see a bit more questioning in her face, replacing some of the astonished fear.\n\n\"She was a slave, killed by her master, in 1852!\" I pleaded.\n\nI saw Soola's body start to relax, but I could see the wheels spinning wildly behind distant green eyes.\n\n\"I can feel you knew her, Ted! And I don't know how I can do that!\" Soola said, looking at me warily, \"But she's long dead?! So, how could you know her!?\n\n\"Soola, please? Let's sit on the lawn furniture over here. Let me get some lemonade, and let try to explain it before you think that I am the crazy one of the two of us!\"\n\nI could see her start to focus on my face, \"But, how...alright, I'll sit,\" she said, and she wandered slowly over to the furniture and sat on the edge of a chaise lounge.\n\nI jumped inside and grabbed the partially full pitcher of lemonade and a couple glasses, plus napkins, and then hurried back outside. I poured her glass and handed it to her.\n\nShe held it with both hands, and looked at me in utter confusion, \"Ted, this makes no sense. Please explain, soon?\"\n\n\"I hope I can,\" I sighed, \"But Soola, I have to ask you to believe me. Everything I will tell you is the truth, not my imagination nor a hallucination. You trusted me with your fears about the 'words' this morning, so please trust me with this.\"\n\nClearly hesitant, she offered, \"Alright. That's fair.\"\n\nI took in deep breath, \"This won't be short. Maybe four months ago, I was considering what to do with the old slave quarters back here, as I had not paid attention to the question while the manor was in remodeling. There were originally eight buildings, and this one was the largest. Four had collapsed, and recently I took down the other three dilapidated ones, salvaging the wood &amp; hardware. I restored this one larger building, both for its cultural heritage...and because it is where I met Emmi-Anne.\"",
        "\"You...you MET her!?\" Soola stared at me. I could see it in her face. She didn't want what she thought I was going to tell her, to be true.\n\n\"I don't think I would believe me either, if it hadn't happened to me, Soola,\" I said, tiredly, \"I went into this building, and there was a girl there. She was scared and huddled in a corner. When I tried to give her a hand to help her up, her hand just disappeared into my hand, right through me.\"\n\nSoola gasped, and almost spilled the lemonade, which she then set down on the side table, \"So, Emmi-Anne was, or is,...a ghost!?\"\n\n\"Ghost, spirit, spook...whatever you want to call it. She didn't know that at first, thinking I was the spirit. But when she found out it had been 166 years since she was last alive, she understood her situation. She proved extremely adaptable and became a nearly modern woman, overnight.\"\n\n\"Was she...did she...float around, go through walls, make noises in the attic?\" Soola asked, and I noted genuine curiosity.\n\n\"No, she was pretty much like you or me. However she had an amazing ability to assimilate knowledge and a keen awareness. She was a stunning, very fit, young black woman. Dark as the night, as term goes. However, I was the only one that could see her, and if she got more than 150 feet away from me, she would start to fade away. She also had some connection, though vague, to Jill.\"\n\nOpenly curious now, Soola asked, \"So she was here because of you, or even for you?\"\n\n\"That is my assumption. She knew nothing of her existence from 1852, when she died, strangled by her master for denying him sex, to when I found her, in there. She never had to sleep or eat. Never felt too warm or too cold. I gave her the run of the house. She made me meals. We watched TV together. And she was nude the whole time, since no one else could see her...and she wanted to be both modern and daring.\"\n\nNow a bit of humor showed on Soola's face, \"Well, that must have been an interesting bit of titillation! A beautiful naked women that you couldn't touch or feel?\"\n\n\"Yes, it sure was...until we found a way to virtually touch,\" I said, sadly.\n\n\"You could touch...how?\" Soola asked.\n\n\"I bumped into Emmi, or Em as I called her sometimes, one day, and that triggered the realization that if we both could touch an object, then we could effectively feel the other through the object. My clothes provided the object between us that had allowed me to bump into her. Then I discovered that I could place a silk handkerchief on her skin and 'touch' her through it.\"\n\n\"So you went to bed with her, I expect?\" Soola asked, with a hint of jealousy.\n\n\"Yes. She actually came to me, but I wanted her in my bed anyway. I gave her her first orgasm. We found a condom made sex possible.\"\n\n\"Do I need to worry about this sexy ghost returning?\" Soola asked, clearly bothered.\n\n\"I don't think so,\" I said, \"We had sex the one time, and at the end of it she just vanished...into thin air, as the phrase goes. I've had no indication since that she is here, or even exists any longer.\"\n\n\"And did she have feelings for you, or you for her?\" Soola asked.\n\n\"Yes, very much,\" I replied, and then I needed to swallow.\n\n\"Like...very, very?\"\n\n\"Yes,\" I confirmed.\n\n\"WOW\" Soola said, flopping back on the lounge, \"That's an astounding...and heartbreaking...story. In love with a real ghost, and then you lose her, too. Jill, then Em!\"\n\nSoola's eyes suddenly shot wide open, her hands flew to cover her mouth, \"SHIT!!...OH MY GOD!!\"\n\n\"What!?!? I exclaimed, as I bolted up straight, and then moved to be next to Soola.\n\n\"Jill and Emmie!! It wasn't 'Gem' that put those 'words' in my head, it was 'J And Em...Jem! That's why some later 'words' felt different, emotionally. They were Emmi's words!\"\n\n\"So they both wanted you to come to me?\" I said, trying to fathom that.\n\n\"What else could it be, Ted?\" Soola said, swirling in her own astonishment, \"They let me feel their emotions for you...their love! They wanted me to come to you! That's why everything seems familiar! They have shared it with me, and maybe I am familiar to you because they are in me...or something! Hell, I'm not sure.\"\n\n\"Before Jill died, she made me promise that I would try to love again,\" I said, quietly.\n\nSoola's face had softened and stray tears rolled out of those amazing green eyes and over her high cheekbones, \"Then she DID want this love between us. She set us up and...Oh NO!...Ted! , TED!\" she cried, and started yanking at my shirt, \"Jill SENT Emmi to you. It was to prove you could love again! Once Emmi was gone, I was sent to...to...\"\n\n\"...be loved...be my wife?\" I said. My own tears let loose, and I grabbed Soola's napkin to absorb my tears, as the love from three women overwhelmed me.\n\n=+=+=+=+=+=+=\n\nIt was nearly two months later that we stood under the Karlfeldt's gazebo. We said we were officially engaged a week after we met, but that was really just how long it took the jeweler to install the gorgeous emerald in the engagement ring we had selected.\n\n\"Arsoola Matelli, I ask you to be my wife, today and forever. We will never know what tomorrow may bring, so I give you this promise; to try to be the best person I am capable, every single day. For if there comes a day that my life is taken from your grasp, I will have left knowing it was the best day. And, in each day, I will cherish the moments that speak of our bond and the mysteries that brought us together. I place this ring on your finger, not as a sign of ownership, but as my promise that I want to surround you with my love, always.\"\n\nSoola pulled a tissue from the sleeve of her elegant wedding dress, and dabbed at her eyes. Then she reached up and dabbed at mine.\n\n\"Theodore Taeger, my Teddy...you - and two women I will never have the honor to meet - made sure that I can stand here today with a restored heart. Now, that once broken heart has no room for the past, only for my future with the man I love, so dearly. Except, there's a small corner reserved for my love for Jillian &amp; Emmi-Anne. May their souls rest happy in the union of you &amp; I. With my ring, which I place on your finger now, I want you to be reminded of the joy you bring to my life. That joy is from your kindness, your understanding, your humor, the comfort of your arms around me, the whispers of love you put in my ear, and so much more. I am the luckiest woman; to be so loved by you, and I will never forget that, for a single second.\"\n\nWe knew no one else would fully understand the meaning of those vows...they were just for us. Well, us, plus Jill &amp; Em."
    ],
    "authorname": "GoneGray",
    "tags": [
        "drama",
        "ghost",
        "interracial romance",
        "love story",
        "marriage",
        "mature",
        "nudity",
        "orgasm",
        "romantic",
        "slave"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-chance-at-willow-manor"
}