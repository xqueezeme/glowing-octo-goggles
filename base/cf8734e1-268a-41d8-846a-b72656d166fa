{
    "title": "Toofy Ch. 18",
    "pages": [
        "Toofy wasn't sure why she'd expected that Mia's invite would only go out to salamanders and not all of the dragonkinds, but she was sure that she didn't even know all the kinds that had turned up.\n\nThe creatures, naturally, had split up and brawled until there were a half-dozen challengers for her dragongirl when she returned.\n\nToofy frowned. She wasn't sure if Meerakeilian was still a dragongirl. Was she in the middle of transitioning into a dragonboy? Were the tits a temporary thing, now?\n\nDragonboys were just as capable of laying an egg as the girls. The sex organs were sort of... Incidental, to the point of fertility. Dragonkind used sex to either dominate, or be dominated. That was their only purpose.\n\nToofy was still quite frightened of Mia.\n\nThe lizard might be in love with her, or as close as dragonkind got to love, but even if the cat was willing, the new organ of Mia's was... It would hurt, just to fit it.\n\nShe knew that she would need to be on her guard around the salamander. That Mia would find it difficult to know when Toofy was coming on to her, or not.\n\nThe obsession to make an egg together wouldn't be an easy one to ignore.\n\nEspecially as Toofy was currently caught up in a confrontation with one of the would-be challengers. The thing was all annoyed that Mia hadn't been waiting, and more annoyed when the cat had said it was because she had sent them off.\n\nThe male in front of her was a guivrik. His face was framed by little blue scales that glittered in the sun, but unlike Mia his wings and arms were the same thing.\n\nHe snarled at her, mouth dripping a foaming acid everywhere, saying something boring about how she was an insult to his existence, and he was going to kill Mia, and then Toofy would be his appetiser.\n\nThe cat blinked her golden eyes slowly, got bored, and pounced.\n\nThe guivrik threw her onto her back with a roar of burning spittle. He lifted a hand to strike her, and Toofy growled around the ear she currently held in her teeth.\n\nHe hesitated, and she slipped free from his grasp, ducking backwards and onto her feet. She spoke around the thing she had stolen, \"Attack Toofy, she swallows.\"\n\nHe sneered at her, \"Cat want dead. I grant.\"\n\n\"Toofy not eat your ear, idiot.\" She snarled, eyes sparkling, \"Toofy devour it. Just like Toofy is Mia's Devourer. Is snakeboy stupid enough?\"\n\nThe creature hesitated, staring at her, \"Summoner. You devoured summoner?\"\n\n\"Mmm. Her tail. Cooked with peppercorns.\" Toofy smiled happily and frowned, \"Mmm... Ten years ago? Something like that. Toofy didn't much like. Very chewy, all muscles, no fat. Much prefer fish.\"\n\nHe stared at her.\n\nShe tilted her head a little, threatening to swallow the pointed ear.\n\nHe took a step backwards from her, with a small puff of white smoke.\n\nToofy spat the ear onto the ground, and rolled her shoulders, looking around at the crowd. The catgirl smiled, \"Toofy really doesn't mind if you fight each other. But threaten Toofy, or her toys, again, and she will hurt all of you. She is not in a good mood.\"\n\n\"Just a neko.\" Spat one of the others, a blue salamander, and stepped towards her.\n\nShe rolled her eyes and flicked a fireball from her hand and into his face. \"He should really think before he attacks the granddaughter of a nekan bucktooth. Little blues are easy to hurt.\"\n\nThe man screamed, clutching the burns on his face. Not nearly as brave as the guivrik that hadn't even reacted to the pain of having an ear torn off his head.\n\nShe sat down cross-legged, instinctively holding her stomach as she did. Toofy looked around at them all with her glittering eyes, and then over to the other army, and the two elves screaming at each other.\n\nShe giggled.\n\nAstadia was cuter than she thought she'd be. So desperate to protect her family, and willing to do anything at all to keep them safe.\n\nOrli was also adorable. Still holding onto Trician's hand tightly, even though the human was practically shitting themselves, being so close to a highly skilled necromancer.\n\nThe cat briefly wondered if the princess knew just how much of a shine the human had taken to her. Probably not.\n\nToofy looked back to the dragons, some of which had taken her hint and had also sat down. Showing patience, one of a soldier's best skills. Those who didn't, had just failed her first test of them.\n\nShe played with her golden bell idly, noting which dragons caught the motion. The ones that saw any treasure and just wanted to own it. Not necessarily a bad trait, but one that was easy to manipulate.\n\nIt was true that Toofy would need the most powerful army ever assembled if she was to take on the emperor.\n\nHowever, if she was going to attack the palace, then what she needed was so much more than just someone who could fight. She needed those who could play politics whilst the world around them burned.\n\nKnow when to save the frightened minister waving around a sword, or when to end their pathetic existence.\n\nMistakes would be made. That was inevitable.\n\nToofy was determined to do whatever it took to make the palace hers. She didn't know if she was remotely ready for it, but soon she would have her cheating Sai back by her side.\n\nShe swallowed nervously as she realised she needed to tell him about the kittens. Even though he had cheated on her with a fucking fox, he deserved to know.\n\nAfter she had slapped him.\n\nA lot.\n\n---\n\nEfina stepped out of a shadow, returning to the world of solidity with a quiet sucking sound as the darkness tried to cling onto her.\n\nThe priestess viewed her empty private room, noting that the nearby desk had been disturbed differently than the rest. The floor by the legs was scraped, repeatedly.\n\nSomeone had used it for sex.\n\nThe smell was also another clue, but Efina wasn't sure what to make of it. One of the participants was probably an elf, but she she had no idea what the other was. Too subtle a smell for her.\n\nThat was one of the things she had always been jealous of Twenty Four for. The catgirl could walk in anywhere, take a single whiff, and tell you a full day's history of the place.\n\nShe was fairly certain both were female. Men didn't smell as musty.\n\nEfina reached behind the desk, wondering how close to discovery the latch had come whilst a couple of her temple girls had made use of her absence to enjoy themselves.\n\nThe floor beneath the desk creaked, and then sprang open.\n\nEfina preferred to use magic to hide the ordinary, so that when people hunted for enchantments, they would find that.\n\nThe truly precious, she hid with mechanics. Most would think little of an alcove beneath the floor, dismissing it as a place to hide things because no enchantments were in use.\n\nThe box inside the hole was extremely small, no larger than a jewellery box.\n\nEfina lifted it onto the desk, tapping a series of draconic runes on it in the right order. The lockbox was older than she was. As old as the gateways, utilising the same difficult-to-detect magic.\n\nShe removed the lid cautiously, and looked at the green pearl inside.\n\nAt the end of the war, when Sai had first brought it to her, she had promised to find a way to destroy it.\n\nThe surviving fragments of Menes' soul were held by those the warlock had twisted, but this was more than just a fragment. Sai had found it, when he dug up the orc's body.\n\nThe orcs had done their best to ensure Menes couldn't return, and had been successful, as far as Sai could tell. However, they had also failed to notice something critical.\n\nA core of a soul.\n\nIt wasn't Menes', but it wasn't not Menes' either.\n\nTwo souls existed in this small pearl, joined to the point where nobody and nothing could separate them. For all of her attempts, Efina had never been able to destroy it.\n\nShe was grateful for that, now.\n\nEfina picked up the pearl, intending to swallow it, and bind her own soul to it. It might be foul magic, but she had need of evil.\n\nA hand caught her wrist, and deft fingers plucked the pearl away.\n\nShe glared over at the calm-looking Lord Han. Minister of Justice. He was eyeing the artefact with a dispassionate eye. He made it disappear to somewhere, and then released her wrist.\n\nShe seethed, glaring at him, \"Today is not a good day to attempt to prove your manly strength, Lord Han.\"\n\n\"Perhaps not. You are quite pursued.\" He agreed, \"However, I am the one who sent so many to dog your path. The warrant is not for your arrest, dear Efina, it is for your execution.\"\n\nShe sneered, \"The emperor sends his loyal dog, to end the life of one who has done more for the empire than he ever has. He's a fucking bastard! In both the meanings of the word.\"\n\n\"His lack of a pure bloodline means nothing to me. As for the other meaning,\" Han smiled at her, \"The ministers are considering whether or not to depose him over the recent unrest. The plague spreading through the farmlands is of worrying concern, but the emperor has not addressed it.\"\n\nEfina glared at him, \"You should be afraid of me. I have had a very bad time. The goddess cursed me, stole my womanhood. So... Unless wish to die an agonising -\"\n\n\"The goddess of mischief.\" Han stated to her surprise, \"Seems she has quite the number of plans for Ambassador Twenty Four. Plans that you knew of, for quite some time. I found her drawing. Assembled it.\"\n\nThe priestess sighed heavily, \"True. It took a number of years, before that drawing was completed. It wasn't even drawn in any sensible order.\"\n\n\"Twenty Four was chosen by the goddess of mischief, a betrayer god, to resurrect the old empire, wasn't she?\" Han raised an eyebrow.\n\nEfina smiled, \"Yes. Yes, she was.\"\n\n\"Why do you hate humanity so much, dearest Efina?\" He asked her curiously, \"Is it so hard to support your own?\"\n\nShe smiled at him, \"My entire life has been spent in the temple, Lord Han. An entire life of watching, and hiding, corruption. It stretches from the highest peak of the empire, to its lowliest denizens. I have covered up sins for too long.\"\n\n\"Are the beastkinds so much more moralistic? Less prone to corruption?\" He scoffed.\n\nEfina smiled broadly, \"They eat the ones who betray their pride, their honour. They don't pretend and hide behind propriety. They are proud that they killed to get where they are. They are honest. Something you would know little of. How many have you killed? How many have you bribed? How many times have you looked the other way? How many innocents have been destroyed by your word?\"\n\n\"One hundred and twenty seven.\" Han answered without hesitation, and shook his head, \"Soon to be one hundred and twenty eight. I must fulfil the warrant, dearest Efina. You have created an enemy of an emperor, who we are not yet ready to depose. Time was against you.\"\n\nThe priestess smiled and nodded, \"I do understand. I hope that you understand that I won't be coming quietly.\"\n\n\"Of course not.\" He shrugged, \"However, though you have not asked it of me, I will give you this promise. As I have thus far, I will continue to do my best to protect Ambassador Twenty Four, to the very best of my abilities.\"\n\nEfina frowned, rolling the thought around in her head, \"Lord Han... Did you manage to confirm if she killed Isaac? Intended to kill Lord Castelle until that became... Bad timing?\"\n\n\"I have not. If I were to, I would be required to report it.\" He replied diplomatically.\n\nShe nodded sadly, \"Indeed. I must confess that I was surprised by her actions. I was not aware that she had quite so... Ruthless a streak, in her character. Let us pray that whoever survives here, does nothing to have that wrath turned against them.\"\n\n\"Your confusion is unsurprising. There is ample evidence that though consuming Elatham's spirit saved the neko's life, it has also corrupted her soul.\" He said grimly, \"Our precious ambassador's soul is as dark and lost as your own.\"\n\nEfina frowned, considering it.\n\nShe did know that the death magic of the deceased elf was as dark as the most bitter places of the void. It was an evil that had eluded Efina's attempts to discover even an origin.\n\nElatham's death magic was unique, in all the world.\n\nAlmost as unique as Menes' magic, though not quite as soul-rotting. The priestess had failed to learn even a single spell of this less dark magic, and yet the neko had stolen it - even whilst she lay dying.\n\nEfina smiled sadly, \"Do you know from whence it sprang, Minister Han? I know a little of the elf's misdoings. His... Experiments. He dared to steal a few of my girls. Yet I could not find where his inspiration came from. Is that not a danger to the empire, as well?\"\n\n\"I do know it.\" He replied flatly, \"It is draconic in origin. Well, the dragons are all that have a memory of it. The magic is likely older yet. From a time when all races were not born with magic, but gifted it by the gods.\"\n\nEfina chuckled, \"Ah, everything always goes back to the war of the gods. Our gods we call betrayers, who were exiled away, who dared to give power to mortal kind. Who dared to dream that we could walk alongside them.\"\n\n\"It is so.\" Han nodded, and then spoke quietly, \"Your neko, who dreams of the future, and has luck untold... Also holds in her palm, the magic of the gods. Our precious little Twenty Four... Born as a slave, unable to rise by mortal custom, and yet... I would be committing treason to name what I believe she was born to do.\"\n\nThe priestess nodded, \"It is so. She was born as the granddaughter of Resic. Do you recall that name?\"\n\n\"The hooktooth. A nekan warlock who caused no end of problems in the war.\" Han said hesitantly.\n\nEfina smiled slowly, \"If I must die, then I will grant you one last little secret, Minister Han. Our Lady Twenty Four, is not the last of her bloodline to have survived the emperor's genocide.\"\n\nThe priestess gasped quietly as she felt the blade of ice slide smoothly between her ribs and into her heart. She looked at Han with a flash of green in her eyes, but her magic didn't come.\n\nA familiar voice whispered in her ear, \"Did you think I let you go, so that you'd stay alive? You think we're predictable. That I, of all the fucking things, am predictable. I do what I like, my little bitch.\"\n\n\"Goddess.\" Efina breathed her last, closing her eyes.\n\nShe heard Han distantly, as if speaking through a pillow, \"I am sorry, dearest Efina. I cannot know what it is that you were implying, or I would have to take action.\"\n\nAs she slipped into the void, she felt the chains wrapping around her, as the goddess claimed her soul.\n\nChose it, so that she could punish it, for the rest of all days.\n\n---\n\n\"Lord Castelle.\" The half-elf said nervously, speaking to the man who was supposed to carry her fate. She wasn't supposed to raise her voice to him, unless he first spoke to her.\n\nThe man looked up from one of the books in the library, looking at her in surprise. He turned his head sideways, \"Does my mother call for me, wench?\"\n\n\"No, sir. But she has sent me.\" Xivian bowed her head towards him, \"May I approach, sir?\"\n\n\"I'm bored. You're being... Intriguing.\" He replied and waved at her to approach. \"Though I doubt my mother would indulge my less couth desires. So, tell me. What is this about?\"\n\nXivian walked up beside him, \"It would be better to show you, sir.\"\n\nThe knife slipped from her sleeve and she clumsily thrust it into his side, grazing a rib and seizing with a notch.\n\nHe tossed her backwards to the ground staggering for a moment before he sprinted bleeding from the room.\n\n\"Shit.\" Xivian cursed and ran after him.\n\nThe younger Castelle led her on a winding and staggering trail out and into Elizabeth's gardens. Down and passed several different and extremely poisonous flower beds, and to the altar of the goddess where Arina had worshipped.\n\nWhen Xivian caught up to him... He'd vanished.\n\nThe woman seethed, looking around the space desperately. The blood told her that he had taken shelter here. The room was tiny. Barely encircling the statue in the centre, and yet... He was gone.\n\nXivian's hands tightened into fists.\n\nShe rolled her jaw, looking around desperately for any sign of where the man had gone. There were no convenient scraps of torn cloth, nor bloody fingerprints.\n\nThe elf kicked the altar angrily.\n\nA dull thud echoed backwards.\n\nShe breathed in sharply and crouched in front of the space, and examined the symbols on the surface. She ran her hands over the square of stone until she felt a click and the door swung inwards.\n\nInside, she found a small tunnel, barely the wider than her shoulders. She could see dirt shifted by a desperate and fleeing man. Blood from the wound she had inflicted.\n\nXivian dove in head-first. Skittering down the tunnel and noting fresh wood, reinforcing the channel. She could see tiny claw marks on it, claws that she recognised.\n\nThis was Toofy's work.\n\nWhere in the hell did it lead, and how was it that Castelle knew about it?\n\nThe half-elf slipped from the end of the tunnel, landing on stone as her eyes adjusted to the total darkness in a way that human eyes couldn't.\n\nShe smiled as she saw Castelle leaning up against a wall, trying to hold his breath. Frightened and alone.\n\nHe would bleed out here, if she simply guarded against his return... But Xivian was filled with a ridiculous number of questions. How was there a freaking city beneath her mistress' estate?\n\n\"Will you run, m'lord? Try and hide in this vast place? Or do you have allies waiting to end me, for my great offence?\" She spoke more confidently than she was feeling.\n\nCastelle coughed, \"I've never been here. Apparently I can't hide from you, here, either. Say what you want to say. I'm doomed all the same.\"\n\n\"There's a city. Beneath the city.\" Xivian said tightly.\n\nThe lord laughed weakly, \"Lady Twenty Four... Told me... That it was built during... The purge. Dug in... Under the city. Hundred years ago. Didn't... Believe her.\"\n\n\"She does lie, as often as she tells the truth.\" Xivian agreed, looking around, \"I don't recognise any of the symbols in the architecture. They look almost... Elven. But not. I don't recognise any of it.\"\n\nHe nodded tiredly, \"I... Was intrigued... Researched. I... I think it... Is ancient. Very ancient.\"\n\nThe elf looked at the symbols embedded into the archways of the buildings. Looking like shop signs, maybe. The symbols had the familiar curves, similar to the written language of the Golden Mountain, but it was... Nonsense to her.\n\n\"Not elven.\" He coughed weakly, \"Draconic.\"\n\nShe raised an eyebrow, \"Not salamander. Another of the dragonkinds? Dragons built a city, here?\"\n\n\"Older.\" He coughed weakly, \"One or two symbols... I've seen. On the gateways. Are you going to... Put me out of my... Misery? This freaking hurts.\"\n\nXivian sighed heavily, \"I've never killed anyone before, sir. I... Am not in a hurry to commit that sin. I love Lady Elizabeth, and so I will do as she asks, but... It is not something I wish to do. The city is as old as the gateways?\"\n\nHe closed his eyes tiredly, \"A journal... On the desk. I was writing... In it. You'll find... Answers... There. Another empire. Old as the sky... Please. End the pain.\"\n\n\"You don't want to know... Why?\" She asked hesitantly.\n\nHe laughed with a spray of red mist, revealing a punctured lung. \"I already... Know... Why. I am a pain. My mother... Wants her... Freedom. To have you. To have the estate. She can't... Whilst she has... Me. In her... Way.\"\n\nXivian pulled a second knife slowly, \"The Castelle name will not be forgotten. I will carry the banner of that name proudly.\"\n\nHe just nodded tiredly.\n\n---\n\nDomina Florence began with what looked like a deep curtsy, before her knees found the ground, and she transitioned into a bow, her head briefly touching the ground.\n\nShe stayed bent over, waiting for the voice hidden behind the curtain to speak.\n\nAt length, the eunuch made a show of exasperation before speaking. \"His grace acknowledges you, Domina. For what reason do you beg of his indulgent mercy?\"",
        "\"I know it is late in the day, however it is my belief that the matter has been neglected by the ministers of this court for too long, already.\" She spoke with a humble tone, still not raising her head.\n\nThe eunuch tsk'd, \"Explain, before patience is forgotten. Stand not on ceremony.\"\n\n\"Whilst the betrayal of the temple's priestess is a painful blow against us all, it has left the temple in an untenable state, your most revered highness.\" Florence said quickly. \"Lord Yu tends to be... Too preoccupied to ensure the smooth functioning of one of our city's most powerful institutions.\"\n\nThe man scoffed, \"And you believe yourself suited for this task? The responsibility cannot fall to one so willing to offend the gods. Your arrogance is insufferable.\"\n\n\"I agree I would not be suited, your grace.\" She touched her head to the ground, \"Nor am I suited to naming an adequate replacement. I come merely with a suggestion to tide the empire through uncertainty. One who was raised by the temple, and would thus be suited in a temporary capacity. However, as a slave, they would willingly step aside when the correct heir has been appointed by the ministerial council.\"\n\nThe eunuch listened intently to the curtain for some time, and then spoke, \"It is understood that you intend the Madame Florence, Esmerelda, for such a role. It is beyond her abilities, and station. However, as this is a time of crisis, then perhaps she can be of use. She will share the role, with the younger Lady Vanhern. Both will answer to Lord Yu.\"\n\n\"A most considered and gracious answer, your majesty.\" She touched her head to the ground.\n\nHowever, before she could go through the necessary ceremony for dismissal, a guard burst through the doors, \"M'lord!\"\n\n\"What is this!?\" The eunuch yelled, \"Speak, before you lose your head.\"\n\n\"A dragon!\" The guard yelled in terror, \"A salamander has been sighted, flying over the city, m'lord.\"\n\nThe eunuch scoffed, \"That is hardly a -\"\n\n\"We could not identify it. All saw it clearly. The markings of it are not known among the scholars.\" The guard cut him off, \"Captain ordered us to shoot it down. A ballista bolt struck, it was not a glancing blow, but the creature ignored it. It flew onwards, towards the west.\"\n\nFlorence flinched as she heard the curtain tossed aside, and the emperor's own voice. \"Describe this creature. Every detail.\"\n\n\"Scales of black and red. Wings with a span six times of a man's shoulders.\" The guard said confidently, \"We could not determine the sex. There was disagreement.\"\n\n\"Transitioning. Fuck.\" The emperor cursed, \"That thing was the one responsible for the roar. A challenge made. Organise a posse, at once. That thing is trying to unite the clans. Bring me its head. Go!\"\n\nThe guard sprinted from the room, and the emperor punched a wall, shaking it. \"Meerakeilian. Why do you betray me? Ungrateful bitch. Ah... Lady Florence, you are dismissed. Get your elf searching. Efina kept records on a dragon egg. We need them.\"\n\nShe touched her head to the ground again, \"Immediately, your grace.\"\n\n---\n\nSai grabbed Khild's hair and drew the reluctant ork off his member with a popping noise. Her green eyes glared at him, but he put a finger to his lips and reached for his sword belt.\n\nThe woman immediately understood, hauling him to his feet as her eyes took on a deeper glow. Beneath her motley skin, her muscles flexed and hardened.\n\nThe nearby kitsune, on the other hand, yawned and curled into a ball.\n\nSai yanked on some pants, and drew his sword, but that was as far as he could get before the ground rolled with a cacophonic thump that sprayed rock and dirt through the walls of the tent.\n\nHe'd heard a crack of distant thunder that wasn't thunder. That was what had alerted him to what was approaching. Something that was moving like he could, fast enough to break through the resistance of the air into a godlike speed.\n\nHis tent was ruptured by a thunder of his own, as he flashed out and into the open, already swinging his sword towards the place he had heard the enemy touch down.\n\nBlack and red scales deflected and warped the metal of the blade. The woman in front of him shrugging off the attack with a scream of rage that nearly knocked him off his feet.\n\n\"Hold!\" Sai cried out to his soldiers, raising a hand. If they attacked, all they would do is get in his way. None of them stood a chance against something like this.\n\nHe didn't know what they were, exactly. Not a red salamander, nor a black. Maybe a hybrid... But he had never heard of such a thing ever being born.\n\nHe sneered, \"I am the commander. What property do you come for?\"\n\n\"It belongs to Devourer.\" The creature named something that it had bowed down to. Making him notice the swirl on its cheek from the Rite.\n\nSomething had actually forced this thing to submit?\n\n\"What belongs to your Devourer?\" He asked, spying the stump at the end of the tail incredulously. What in the fuck could fight something as strong as this and survive?\n\nWeapons were pointless against a beast like this.\n\nBlacks could shrug off most magical attacks as well. Even if you managed to break through the scales and into the skin below, all you would do is piss the dragon off even more.\n\nIt puffed black smoke at him, \"Sai. Bring forth the Sai. Or every morsel will be devoured!\"\n\nHe blinked his green eyes uncertainly, \"I am Lord Sai. Who the hell is your Devourer?\"\n\nThe... Well, he wasn't so certain it was a woman anymore. He had finally noticed that the thing was rather publicly displaying an impressive swinging dick.\n\nThe lizard, smiled lopsidedly, \"Toofy. Toofy is its Devourer. You are the Sai. You will return with me.\"\n\n\"What the godsdamned fuck?\" He said in confusion.\n\nThe thing grabbed him by the throat, and he found himself suddenly among the clouds. A moment later he heard the crack of thunder, as he tried to adjust to the fact he was now at a height he could not survive a fall from.\n\nIt was difficult to even breathe up here, and he could feel his brain recoiling, not coping with the sudden acceleration. If he wasn't the Thunderstep, he probably would have been vomiting and darkness would be threatening to take him.\n\nThis monstrous thing was somehow beaten down by his neko?\n\nHis stomach lurched and he rethought just how well the thunderstep had prepared him to survive a flight like this. The damned thing had suddenly started accelerating even more, somehow.\n\nHow could a couple beats of their wings propel him so rapidly across the landscape of the world that he couldn't look to it without feeling ill?\n\nHow could a physical and living creature move at such a pace without the aid of magic? He couldn't feel it. There was no spell at work here. The thing was just fucking strong.\n\nStrong, and agile.\n\nMost things that could fly did so by being lightweight. Hollow and weak little bones. This... Was not that.\n\nThe thing might not be holding Sai to its chest, but he could see the usual overlapping skeleton there. An impenetrable natural armour that could protect against most weaponry.\n\nSai was only conscious because of magic. If he relaxed his grip on it for even a moment, the forces straining against his body would win out.\n\nThe thing suddenly pulled Sai tight against its chest, revealing a surprising softness, before wrapping its wings around the both of them. He felt their speed increase ridiculously, and felt his grip on the world slipping.\n\nThey spiralled as they plunged downwards, rattling his teeth together in the turbulence as the darkness dragged at the edges of his vision and he struggled to keep his eyes open at all.\n\nHis heart and lungs felt like they'd been immobilised, crushed flat by the sheer pressure of it all.\n\nSai barely felt it when they struck the ground. He was so far gone that it took him minutes to realise that the two of them had stopped moving, and he was now being carried limply by the salamander.\n\nHe reached a hand up to his dull head, rubbing at it weakly, before trying to fall onto his feet.\n\nThe thing caught him, righting him gently. It said something, but he had no idea what. Felt like his eardrums might have burst.\n\nHe blinked and looked around weakly.\n\nThe salamander was not the only dragonkind in this area. He was surrounded by the usually-rare species. Hundreds of them gathered into the one place.\n\nSai blinked again, rubbing at his temples, and spoke hoarsely, \"I... Don't feel well.\"\n\nHe stiffened as his entire body felt like it was suddenly filled with cold water. He was thrust back into full attention like he'd shoved his face into a bucket of ice water.\n\nHe looked down to see a nervous girl with intensely blue eyes. She smiled briefly, and then stepped back and curtsied, \"Lord Sai. It is... Temporary. But should help you feel a little better.\"\n\n\"Where... Where am I? Why am I here?\"\n\nThe dragons fell backwards, stepping aside as someone walked through the crowd. All of them bowing their heads as the newcomer passed by them. Showing deference to something stronger than they were.\n\nHe tensed up, ready to reach for his magic and run.\n\nNot that it would do much good.\n\nThe newcomer paused as they reached him, looking up with bright and golden eyes, \"A fucking fox, Sai? A motherfucking kitsune!?\"\n\n---\n\nArina blinked in surprise at the knife that pierced her hand.\n\nIt did hurt. It really, really, fucking hurt. Yet, she couldn't find it in her to let out so much as a groan. It was almost as if it were happening to somebody else.\n\nShe looked up at the frazzled man trying to threaten her with a tired boredom, \"What is it you wanted, again? Sir?\"\n\n\"Where is Twenty Four!?\" He roared at her, \"Where is Elia!? Tell me where the traitors are! What are they doing? What is Twenty Four planning!?\"\n\nArina snorted, \"Fuck if I know. Sorry, sir. That was rude of me, but I am afraid that I have never once known what my mistress is thinking. I have no idea what she would possibly be planning.\"\n\nHe grabbed her by the throat, like that was more of a threat than the blade already pinning her to the table. Growling at her angrily, \"I have had a shit few days, handmaiden. Your succubus dropped me in Tauren territory. Give me an excuse not to hurt you. Please. Or you'll end up... Dead.\"\n\n\"I am but a servant, as you have already acknowledged.\" Arina shrugged, looking idly at the blood leaking from her wound with a distant fascination. \"My mistress may convince me to ignore my beliefs, may turn me into a sinner, because I love her... But that does not mean I have the slightest idea what she is up to, sir. I am just a servant.\"\n\nHe slapped her.\n\nArina laughed at him, despite the pain and feeling a loosening of several of her teeth. It was just... Comical to her. If he was going to kill her, he may as well get it over with.\n\nHe was being nothing but a brat. Taking out his anger and frustration at being bested by Elia, on Arina. It wasn't like the two of them were even particularly close.\n\nThey were both shared by Twenty Four. That was as far as the similarities went.\n\nArina had been sickened when her mistress had killed the one who had hurt her. She expected Elia would have revelled in the moment, and quite possibly having experienced an orgasm.\n\nThey were worlds apart.\n\nThough... Since trying to sacrifice herself for her mistress, Arina seemed to have lost that. She no longer felt sick when she remembered the loss of Isaac.\n\nInstead she felt... Bored.\n\nLike she did, right at this moment.\n\n\"Fascinating.\" A voice that was familiar spoke, and the man in front of her froze, midswing for another slap.\n\nA cloaked figure rose up behind him, leaning tiredly on a piece of farming equipment like it was a walking stick. They pushed aside the immobilised man, and plucked the knife from the back of her hand.\n\nArina blinked tiredly.\n\nThe hood fell backwards and the man who had tortured her licked at the blood on the knife, \"I've missed your taste, my little Arina.\"\n\n\"Toofy will never be yours.\" She replied, looking at the deity with apprehension, wondering what they were going to do to her, this time.\n\nThe figure shrugged, smiling at her with hollow eyes, \"I'm not here about the neko. I am here... For you. I expected that I had broken you. Expected that being dragged back by your vulva would break you. Instead... You have been remade. Into something... More.\"\n\n\"Toofy is still, never going to be yours.\" She insisted.\n\nThe man laughed, \"Oh, that's between the cat and I. And apparently also the foxgod who is utterly besotted with your cat. I'm not here for them. You have become... Interesting.\"\n\n\"That sounds bad.\" Arina said with a small flicker of fear.\n\nHe shrugged, \"Not as such. Not altogether. You could die here and now, tortured to death by someone... Inelegant. Or, you could remain interesting to me, and send his soul to me.\"\n\nShe turned her head slowly sideways, \"You tortured me. Burning my soul, for eternity... And now... You want me to... Become a priestess? For you?\"\n\n\"Less a priestess and more... An avatar.\" He shrugged, \"I will grant you a portion of my power. And you will ferry souls of those you believe deserve it, to me. I won't interfere with your choices. You'll never see me again, in all likelihood.\"\n\nArina nodded slowly, \"You know I would use that power, to protect her, don't you? It would stop her from entering your realm.\"\n\n\"I don't mind.\" They replied, \"I am the god of Death. Whilst I do crave the neko's soul... The woman is about to start a civil war. Keeping her alive, for the moment, serves me.\"\n\nShe stiffened, \"She's making her move against the emperor?\"\n\n\"The fox forced her hand. She's quite resentful.\" He chuckled, and then leaned down.\n\nHis lips kissed the back of her hand gently, taking away the pain. She watched as she felt the skin almost shrivel, as the injury disappeared in its entirety.\n\nArina took a deep breath, \"I will do anything to assist Twenty Four. Anything.\"\n\n\"Well, then. Take me as your patron, and you will find yourself... Less helpless.\" He replied to her.\n\nShe nodded.\n\n\"It isn't so simple as all that, I'm afraid. I'm a god, you're a mortal.\" He chuckled at her naivety, \"To transfer from one to the other requires that we... Connect. On a spiritual level. At least briefly.\"\n\nArina cringed, \"I've been raped, and you're telling me I have to have sex with you?\"\n\n\"I am not Isaac.\" The god growled angrily, and sighed heavily, \"A simple kiss. We need go no further.\"\n\nShe nodded slowly, \"That is why you've chosen to appear male, this time. Despite being a woman, in the past. To fulfil my preference.\"\n\n\"Yes.\"\n\nEven though it would give her the power to protect her mistress, to be able to stand at Toofy's side proudly, instead of cowering in her shadow... It felt like she was cheating on her mistress.\n\nWould Toofy forgive her for this?\n\n\"I want what you have offered. I don't much care for the way it is being offered.\" Arina tried to say politely. She might not like the figure, but they were still a deity, and some habits were harder than others to shake.\n\n\"If I was allowed to offer it another way, I would.\" He replied, and brushed her cheek, \"I will leave. If, you decide in the future, that this is acceptable, then simply call on me, and I will come.\"\n\nShe smiled at the way he put it, imagining how Toofy would giggle madly at it. She turned her attention to the frazzled man who was frozen, still in mid-swing.\n\nDeath cocked his head, \"Would you like me to kill him, for you? Then you won't need to carry the guilt. Blame the deity for acting out. For treating life as so little.\"\n\n\"Every soul holds value.\" Arina said quietly, \"Whether they are my greatest enemy, or closest friend, or a total stranger. You know this more than most. It is the values you deal in.\"\n\n\"Admirable that you can see it.\"\n\nShe shook her head, \"The value of all life is easy to see. It is only our wrath, our hate, that blinds us to this. Forces us to divide the world into classes... A slave is worth as much to the gods, as the emperor. And that is why my faith has always been so strong. You see us... As we should be seen.\"\n\n\"I see things that I want. I wouldn't ascribe anything more to it. That is a little altruistic.\" Death sounded amused.\n\nArina frowned, surprised, \"You sound just like her.\"\n\n\"Why do you think I desire her soul?\"\n\nThe handmaiden burst into laughter, grinning, \"Oh my. Gods and deities, all. You have all fallen for my mistress, haven't you? And she despises the lot of you.\"\n\n\"She is... Stunningly different to Eratigan.\" Death said hesitantly, \"Her mother, I would happily destroy. But as she can't comprehend me, and has the magic of a demigod, I can't touch her. It is... Frustrating.\"\n\nArina shrugged, \"I am afraid I was not aware that the mistress had a mother.\"\n\n\"The comparison makes it easy to desire the daughter.\" He shrugged, \"But, you've distracted me. Does this petty fool live or die?\"\n\nArina bit her lip, \"It isn't your choice to make. I've decided. I would do anything to help m'lady. Anything. Is your kiss going to kill me? Steal my soul?\"\n\n\"It will.\" He nodded as if he expected it to be obvious. \"But you are my chosen avatar. I grant you leave, not to die.\"\n\nShe nodded, \"Then I will use you. Grant me the power to protect her.\"\n\n---\n\nShe burst through the doors of the stronghold, throwing aside one of the guards who rushed to try and stop her. Glaring and growling at anyone who went to stand in her way.\n\nKhild stepped through and into her old master's abode, and found him in the middle of his morning routine. Occupied with a half dozen women all over him.\n\nThe red-skinned man looked at her in surprise, \"Didn't you sleep with the Slag? You belong to him. Why are you here?\"\n\n\"Slag was taken.\" She growled, glaring at him, \"By a dragonkind I have never known. It threatens all of us. Sent by a stronger master.\"\n\nHammerhand chuckled, \"My, my. Seems that Sai has been playing the game of human politics for too long. Too many enemies.\"\n\n\"We have to help him!\" She roared, \"The salamander is a threat to you, as well. A threat cannot be tolerated.\"\n\nHe growled at her, \"You're not even part of the clan, halfling. Don't try and be telling me, my business, mongrel. I'm the one who decides what the threats are.\"\n\nKhild stared back at him, both sets of green eyes unflinching and filled with utter rage.\n\nShe wouldn't be here, if she thought that there was another way. She had known how this was going to end even before she returned to this place.\n\n\"I challenge.\"\n\nThe warlock launched to his feet, tossing his surprised concubines with sounds of complaint at the brutal movement. He clenched a fist, intending to strike her, \"You dare to -\"\n\n\"A challenge has been issued.\" Khild stated, \"You know the law. The law is the law. We are all bound to it, and to the covenant. Strike me down and become nothing.\"\n\nHe rolled his jaw, \"Then the challenge must be answered.\"\n\nThe two of them walked out of the hut, and into the circle that served both as a town centre, and as the arena for these sorts of things.\n\nIt was the ork way.\n\nAny moment that one ork had a problem with another, they were allowed to issue a challenge. The town would gather and observe, and the two would fight until death.\n\nIf either surrendered, they would be allowed to live, but they would be exiled. Banned from entering any other stronghold without returning to complete their challenge.\n\nA dull gong sounded as one of Hammerhand's concubines alerted the others that a challenge had been issued. The townsfolk emerging with complaints about one being made so early.\n\nAll of them fell silent when they saw that someone had been daft enough to issue it against their warlock.\n\nThere was no law against using magic in a challenge, even if it was discouraged. Orks preferred to get their hands dirty, but the only real rules were that you had to stay in the circle, and someone had to die.",
        "Stepping outside the circle was surrendering.\n\nThat the one now facing the heroic warlock who had fought against human armies, whose name was known throughout every stronghold, was themselves only a halfbreed... She could already hear the muttering of complaints.\n\nThe insult taken by those watching.\n\nTo them, she was never supposed to be anything more than a slave. She was born to be mistreated. Yet, she had given herself to Sai because he rejected that idea.\n\nSo when the skybeast had stolen him, she knew that she would risk everything, give everything, for a chance to save him.\n\nTo do that, she needed her people. She needed to control the army. She had hoped that Hammerhand might see a danger in the return of a dragon of influence.\n\nThe man was cocky in his confidence that nought could kill him.\n\nThe red-skinned warlock spread his hands, \"A challenge has been issued!\"\n\n\"It must be answered.\" The crowd growled back, and began to stomp their feet in time.\n\nKhild's hackles stood up, and she spread her hands, glaring at the warlock and growling. She had no need to explain herself. Nobody cared why anyone issued a challenge.\n\nIt was only the outcome that mattered.\n\nOne that everyone in this room thought was already a given. There was no possible way that this halfbreed could stand up against the blood red hand that broke waves of attacks on the human empire.\n\nKhild felt the surge as Hammerhand didn't even both to try and do things honourably. He reached into the magic, and he reached for her soul. Aiming to strip her from her body.\n\nShe touched the field, feeling it wrapping around her, remembering the movements of her master.\n\nThe air collapsed and then expanded behind her with an deafening boom, as Khild was flung across the space between them, delivering her elbow into Hammerhand's jaw with enough force to dislocate it.\n\nThe man hit the ground in a daze, but managed to catch her stomping foot towards his head. He twisted, shattering her ankle and tossing her face-first into the ground.\n\nHer tusks dug into the dirt as he turned her fall into a toss, flinging her across the arena with a bellow.\n\nAs she coasted in the air she saw the victory on his proud face. Even with his jaw askew, the ork was confident he was about to end her. Lifting a hand towards her, with small and violent sparks.\n\nKhild screamed out her defiance, and the thunderstep turned her graceful flight into an explosion that sent her slamming right back into him.\n\nAs the ork hit the ground with her knees on his shoulders, she unleashed a roar into his face, spit flying. Then she grabbed him by the tusks and wrenched.\n\nThe warlock went still.\n\nKhild broke off one tusk, staggering upright and held it into the air. She glared around at the crowd with her green eyes, daring anyone to speak up.\n\nHer top lip lifted and she snarled, \"The challenge has been answered.\"\n\nShe was exhausted. She didn't know how her master managed to use that particular spell more than once or twice. It was hell on her body, and left her feeling broken.\n\nShe probably couldn't survive if someone else called her bluff, and tried to take the role from her.\n\nThe chieftain lumbered over, looking down at the fallen warlock, and then back up at her. \"All property of the dead belongs to the living. What now, warlock of the tribe?\"\n\n\"Prepare to march.\" Khild snarled, \"We have a dragon to hunt. Make sure to consecrate the skull, before you bury this shit. He knew of Menes' magic.\"\n\n---\n\nToofy slapped him hard enough that it didn't just hurt her hand, but jarred her shoulder. She let out a whine of pain as her master hit the ground. \"A. Kitsune! You cheated on me!\"\n\nSai shook his head, looking up at her with those sweet green eyes, and she pounced on him. She let out another whine as she rubbed her face into the side of his neck, her voice barely above a whisper, \"Cheated.\"\n\nHe put his arms around her back, holding her limply, \"I missed you, too, Toofy.\"\n\n\"My Sai!\" She wailed, tears instantly streaming down her face, \"Why did he fuck a fox? Why wasn't Toofy good enough for him? He hates her... He hates her...\"\n\nHe took a deep breath, \"Is that an honest question, from my favourite mistress whom I love deeply? Or has she yet to move beyond the pain?\"\n\nToofy snarled and scraped her teeth against the side of his neck, \"Sai hurt her. Sai deserves to hurt. He's a bastard!\"\n\nWhilst the two of them were speaking, the dragonkind crowd was gathering around them. Some watching the two of them with a kind of mirth, others looking at Mia who had calmly sat down beside to wait.\n\nToofy glared at the salamander, \"Doesn't she have somewhere to be? Mia is dragonking. Needs to make them know it.\"\n\n\"They know who I am.\" The salamander replied confidently, \"None would attack me. None. None. Mmm... Want egg?\"\n\nToofy stuck out her tongue at her, and snuggled tighter into Sai. \"Go away. Leave her with her master. Toofy has lots to say.\"\n\n\"We could... Go inside.\" Sai offered.\n\nShe sniffled, \"Don't wanna move. Has her Sai back. Her bastard, cheating, master. She loves him. She hates him.\"\n\nSai squeezed his arms around her waist. \"Can I ask what happened to your arm?\"\n\n\"Mia tried to eat it. So Toofy had to use the rite.\" She whispered to him, and smiled weakly, \"Mia friend, now. Sai not hate her for it. She ate someone who tried to hurt Toofy.\"\n\nHe stiffened, \"Hurt you?\"\n\n\"Neko boy. All hormones.\" She said quietly, \"He hurt Toofy. So Mia ate him. Sai is not to hurt Mia for hurting Toofy. She saved her... Even if Mia really friggin' wants to have an egg with Toofy. Which she doesn't.\"\n\nHe chuckled, \"You don't even want kittens. I think inspiring a salamander to drop an egg is a bit much.\"\n\n\"Needs to talk...\" She whispered even quieter.\n\nSai lifted up her chin, looking into her eyes, \"Toofy? Are you... Pregnant?\"\n\nShe cringed.\n\nHe sat up, with her still leaning into him, and stared at her. \"Twenty Four. Answer me.\"\n\n\"Y-yes.\"\n\n\"Holy shit. I'm going to be a father.\" He breathed out slowly, and then kissed her cheek. \"We're going to be parents. I... I have no idea how to raise a bunch of kittens. What are neko children like? Do you have any idea?\"\n\n\"Toofy was a little shit.\" She giggled, and then winced, \"Toofy... Has three kittens inside her. One is -\"\n\n\"Sick.\" Sai said, and she noticed his eyes glowing. He was seeing through her, and into her womb. \"My son is ill, because of me... I don't... I don't think he'll survive. Shit.\"\n\nShe sniffed weakly, \"Two daughters. Must protect. The Sai has to help Toofy protect them!\"\n\n\"I will move the heavens, and kill the fucking gods, to protect my children, Toofy.\" Sai said earnestly, \"I will do everything I can for you, and our children. I love you.\"\n\nShe bit her lip, \"One not... Yours.\"\n\n\"She will still be my daughter.\" He said, making it clear that he had noticed her elven heritage. His tone showing that he knew that it would hurt her forever, that Elatham had a legacy.\n\nAlso showing that he had no intention of treating one of their children differently to the others.\n\n\"Save son?\" Mia asked cautiously from beside them.\n\nSai gave a heavy sigh, \"He inherited a part of Menes' soul. A brutal fucking warlock, and an ork. I don't know... I just don't know.\"\n\nToofy glared at him, \"Sai also fucked an ork.\"\n\n\"Eh... I have no clue how you know that.\" He said hesitantly, \"But I took another mistress. It was the war effort. You are still the one I love. And I do let you have Arina and Elia...\"\n\n\"Not forgiving for fox.\" She said, her jaw cracking tightly.\n\nSai smiled, \"But the ork, you forgive?\"\n\n\"Mmm... Not yet. But soon.\" Toofy shook her head, \"She needed Sai to bed the ork. They will come for him, and he will use the army they will bring. Toofy... Toofy will be empress.\"\n\n\"Oh, shit.\"\n\nShe shrugged sheepishly and waved, \"Toofy has two armies. Sai's new bitch will bring another. We will meet, when Toofy takes her palace.\"\n\n\"By the gods, Toofy!\" Sai exclaimed, \"We're pregnant. Isn't enough for us just to survive, rather than launching down the path to civil war?\"\n\n\"Too late.\" She muttered. \"She didn't mean to have kittens.\"\n\nHe cupped a hand to her cheek, \"If the game is already afoot, my sweet, then I suppose we no longer need to stand on ceremony. Become my wife, Empress Toofy.\"\n\nShe launched to her feet, dragging him upwards by his wrist and headed towards the tavern.\n\n\"Toofy?\"\n\nShe smiled nervously back at him, \"Toofy is taking him to bed.\"\n\n\"So... I'm forgiven?\"\n\nShe shook her head, \"No. But master has made her realise just how much she has missed him, and how much she loves him. Toofy can get angry about the kitsune later. For now, she wants to show him that she appreciates him.\"\n\nThere was a thud as Meerakeilian launched to her feet, the salamander racing over excitedly. Black eyes peering at Toofy, as she came way too close.\n\nThe dragon whispered into Toofy's ear, \"Have after? Egg?\"\n\n\"Toofy has already told you to stop that.\" She said as firmly as she dared, still utterly terrified of the lizard and their overwhelming strength.\n\nSai frowned for a moment, \"My dear neko, have you ended up with a salamander who is completely besotted with you?\"\n\n\"Mmm.\" Meerakeilian answered for her.\n\nToofy's tail drooped, \"No. No, Mia! You may not follow Toofy! She is going to play with her master, and no one is interrupting. Not Mia, not Saia, nobody! Is she clear enough?\"\n\nThe dragon cocked their head, made a somewhat sad face, and then nodded. \"Much to do. Much to do. I will fight the others. Find ones that are strong enough. Much to do.\"\n\n\"One without an ear is an arrogant bitch.\" Toofy said then turned around and kept going, \"Mmm... Master, don't get surprised when we go inside. Or distracted. You will know some of the people that are helping Toofy.\"\n\n\"I can already sense Tyre.\" He replied stiffly, \"Who else have you dragged into your little coup, my little neko?\"\n\nToofy pulled him into the main area of the tavern. It was being repaired slowly by some clumsy draug, as Astadia supervised. The undead elf was seething, as usual.\n\nShe felt Sai's hand nearly break her hand as he saw Astadia, and tried not to react.\n\nThe neko smiled weakly, \"Trician is here, as well. She mostly hates Toofy, so is in her room. Also very angry at her sister.\"\n\n\"So, Sai's back.\" Astadia spat, without turning to face them, \"Get whatever loving you have left out of your systems. We have a war to fight.\"\n\n\"Toofy intends to just that.\" She grinned proudly, and pulled him down the hallway, \"Saia... Um... Used to be Elia. She had Toofy name her, when Toofy freed her... And maybe um... Got a tail... Where only master belongs.\"\n\nSai chuckled softly, \"That sounds intimate. I allowed you the succubus... Eventually. It wasn't my preference, but I know that you care for her.\"\n\n\"Toofy was planning to let her die.\" She whispered with even more guilt, \"Means to an end. To get rid of the Yu and the Efina. But... Things happen. Saia has gone to put down Yu, for good. The Westcolm saved him, framed Efina. Bastard.\"\n\nSai took a deep sigh, \"Yes. Lord Westcolm has a habit of... Getting in the way.\"\n\n\"Mia melted him.\"\n\nHer master coughed nervously, \"Your dragon did what?\"\n\n\"When she embraced her role as Irrlichdan's heir. She turned the Westcolm into gooey pile for helping to kill her parent... And then she grew a dick.\" Toofy giggled at the end, \"Not sure she is a she, anymore. Mia is Mia, though. And she has bad habit of cornering Toofy.\"\n\nHe shook his head, \"You have accomplished far more than I did. More than I could imagine you could. Unifying the princesses of the elven realm, under your control. Finding the dragonking. Destabilising the temple. And here I was, afraid that you might not even survive.\"\n\n\"Toofy... Was scared.\" She admitted as she pulled him into her room, pouncing onto her bed and curling into a little ball. She looked up at him, her golden eyes dull. \"Alone. Might have friends, lovers, but not her master. Toofy only wanted you. Only her Sai.\"\n\nShe burst into tears as he sat down beside her, and ran a hand through her long and flowing hair. Not touching her head, just running it down her back.\n\nSai leaned down and kissed her forehead, \"Every moment that we were apart, my thoughts were on you. On what Lord Castelle might do. On what the emperor might. I... I have been so scared that I would lose you... Arina was your salve. Is she here, as well?\"\n\n\"Uh uh.\" She shook her head, \"A... Arina... She was sick. Saved Toofy. She was... She couldn't wake up. So Toofy had to leave her with Lady Liz. Toofy's fault she got sick. She... She used death magic to save the Lord Castelle. Lost herself in it.\"\n\nHe hugged her tightly, lying down behind her, and curling around her. \"Then our first priority, will be rescuing your dear little handmaiden. I can't have you worrying about her, when we burn the city.\"\n\n\"Don't you burn my city.\" She snapped at him, and then giggled, \"Toofy has a secret way into the city. Sai will teach it to his ork mistress. Astadia will bring the undead to distract the emperor. And Mia will take the palace.\"\n\nHe held her tightly, \"I don't wish to speak of war. Nor of the throne. We... We really have children? I... I am ecstatic. And terrified.\"\n\n\"That's also why Toofy wanted this.\" She said quietly, rolling over and unravelling herself. She winced as she leaned onto her weak arm, and kissed his nose quickly. \"Kittens will kick the Sai, soon. Won't be able to have him where he belongs. Toofy will have to be sad, as the Sai has his other mistresses.\"\n\n\"You're my bride. The one I want to be my wife.\" He whispered to her.\n\nShe smiled and kissed him briefly, \"She loves him, so much. Toofy... Toofy wants her Sai, inside her. Her master, her husband, her love.\"\n\nHe kissed her back, \"I know I betrayed your trust. I knew it at the time. I am... Sorry.\"\n\n\"She loves him too much.\" Toofy shook her head, and pulled herself in closer. She hooked a leg up and around his waist, kissing each of his cheeks, \"Just... Please say kitsune was not last thing on Sai's... Manhood. Or Toofy is going to insist on washing him.\"\n\nHe chuckled, \"Actually... The ork was in the process of... Cleaning me. When your dragon arrived.\"\n\n\"Cleaning?\" She narrowed her eyes.\n\n\"With her mouth.\"\n\nToofy shook her head, struggling not to look completely pissed off. Her ears betrayed her, flattening out. Her tail curled in tightly against her leg.\n\nSai winced, \"Better than Tammy?\"\n\n\"Tam... Mmy.\" Toofy said slowly, and then hissed, \"Tamamo de Mae! The fucking bitch who tried to kill the emperor? By... She better not be hiding her soul inside my Sai!\"\n\nHe shook his head, \"I doubt she even got out of bed after you took me. She wasn't interested in fighting the salamander. Might have been different if she knew you were the one to send them... Tammy... Is obsessed with trying to piss you off. I don't know why.\"\n\n\"She's kitsune. Toofy is neko.\"\n\nSai shrugged, \"Seriously? Is that all it takes? All nekos despise all kitsune, and vice versa?\"\n\nToofy blinked at him, \"Oh. The Sai really doesn't know. Yes, that's all it takes. Toofy has never met Tammy, but she hates her. Especially as master was stupid enough to become her mate.\"\n\n\"Yes. It wasn't that wise.\" He sighed heavily, \"If it helps, the experience of being inside her was thoroughly disturbing. Not unlike stepping into a bear trap.\"\n\nToofy's mouth split into a wide grin and she giggled, \"Clamp down! Kitsune's little cunts are big fat traps. Did the Sai know that if he wouldn't make her spill, then Tammy's bits would have held onto him? Up to half a day.\"\n\n\"That is... Horrifying.\"\n\nShe nodded, \"Mmm. So he should only sleep with his kitty.\"\n\nHis green eyes looked into hers, and she saw the loving mirth there. He was perfectly content to lie in her arms, without a thought to anything else.\n\nToofy's eyes glittered as she felt loved, and spoke quietly, \"Master still hasn't learned the meaning of haste. Could be attacked by the emperor at any moment.\"\n\n\"You deserve more than just haste, my dear neko.\"\n\nShe kissed his nose, \"Toofy doesn't disagree. But she's been wanting. So... Can the Sai do something for her? Have the others taught him how to... Clean a woman?\"\n\n\"I... Have not done that.\" He said nervously.\n\nShe grinned, rolling onto her back, and kicking her legs into the air momentarily so she could throw aside her underwear. She flinched as her arm ached, but managed to also reach across and unbutton the side of her skirt, to also throw that away.\n\nToofy turned her head and kissed him. Snaking her rough and grippy tongue into his mouth. Telling him that in all the world, she loved him the most.\n\nWith her sore arm lying between them, she couldn't grab his hand and redirect its position. It was vaguely irritating how he was so content to just kiss her, even when she was half naked.\n\n\"Master.\" She begged him.\n\nSai smiled at her, and pulled her closer to him, \"I never want to let you go, again. I hate that I had to. Hate how little time we've had together.\"\n\n\"Master!\" Toofy snapped, \"Can you stop romancing Toofy? She's already romanced. Very romanced. And now, she wants him to stop talking, but his tongue to keep moving. Please.\"\n\nHe ignored her, kissing her deeply. The cat found herself purring, despite herself. Giving in and kissing him back as he ignored her demands for him to move quicker.\n\nShe knew that he loved her, and she loved the way he was showing her.\n\nShe couldn't resist him at all.\n\nFor all the sexual things the temple taught, love was only ever taught as a weakness to exploit. Another knife in the kit of the companion, a vulnerability.\n\nShe didn't know how to live with it. She didn't understand it. It filled her to overflowing, and made her know that her Sai was the only thing that mattered to her.\n\nShe might also love her Arina and Saia, but it wasn't the same. The love was different with all three of them. An emotion she couldn't fight, with any of them.\n\nWith Saia, her love was aggressive, possessive. She had disliked sharing the succubus with Tyre, but she had done it because she knew the woman liked that beastly thing.\n\nOn the reverse side, everything about her and Arina was tender. It was soft and quiet. Toofy would be more than content to sleep every night in her handmaiden's arms.\n\nThen... Then there was her love for Sai.\n\nAnytime she even thought about her master, it felt like her heart was bursting. She knew that she was technically free. No more slave title, in the empire, or her own little colony that was springing up.\n\nShe wanted Sai to be her master.\n\nShe enjoyed the feeling of him being able to do anything with her, but refusing to. That his instinct was to protect her, and cherish her. He didn't even know that he was doing it.\n\nShe ached for him in a way that made the others pale by comparison.\n\nThe catgirl pulled back from the kiss, \"Master... If you don't fuck Toofy soon, she's going to end up crying. She's missed you. Please... She wants to feel you.\"\n\n\"You always say exactly what you want.\" He grinned, \"No politics. No lords and -\"\n\n\"Toofy's going to dry up if master keeps going.\" She said flatly.\n\nHe brushed her cheek, \"Did I ever tell you about my childhood?\"\n\n\"Master!\" She tried to insist.\n\nHe ignored her, \"I was an orphan, Toofy. My parents were... Well, it was an ork raid. I was raised in the stronghold. It's why Menes chose me to become... Something worse. Because I was already familiar with ork magic.\"\n\nShe let out an exasperated sigh.\n\n\"Orks always speak their mind. It's one of the things I found most attractive about you, when I met you.\" Sai smiled proudly at her. \"I had already chosen you, because you infuriated Lady Efina and broke all the rules, but... Being talked back to, upon our first meeting... I adored it.\"",
        "She rolled onto her back and crossed her good arm under her breasts with a huff.\n\n\"That's when I decided that I wanted to marry you.\"\n\nShe tightened her jaw, \"Master never listens to her.\"\n\n\"Oh, he does. And he does intend to play with her, as well. You'll get to tell me how poor I am at cunnilingus, momentarily.\" He said, and sat up slowly, \"But first, there is something I had the blacksmith create whilst I was away. Partly because I was feeling guilty and partly because I wanted a reminder of what I was fighting for.\"\n\nShe glared at him. \"You think Toofy is putting out, after this?\"\n\nHe fished into his clothes, and pulled out something wrapped in a grubby handkerchief, and held it out to her. \"Will you accept this gift, my ever-patient neko?\"\n\n\"Not patient.\" She growled.\n\n\"Please. Take a look.\" Sai said softly.\n\nShe lurched upright, grinding her teeth in irritation. The catgirl took the package and tossed it open unceremoniously.\n\nToofy squealed and pounced on him.\n\nShe kissed all over his face, as she slipped the silver bracelet onto her left wrist. Then she grabbed at his chest and dragged in close against him, a deep and throbbing purr bursting out of her throat.\n\nShe'd been too distracted to realise what he'd been leading her towards.\n\nThat he had been about to propose to her properly.\n\nToofy pulled back momentarily, \"Does master have one?\"\n\n\"Gold for me.\" He replied, and lifted it out of his cloak, and slipped it on. \"I take it... That this is you accepting? You will be my wife?\"\n\n\"Toofy's going to be your fucking empress.\" Her eyes glowed momentarily and she grinned happily, \"You know that Saia and Arina are going to be jealous, right? Not to mention Mia. Sai is going to have keep his wits about him.\"\n\nHe shrugged, \"So long as I get to call you wife, I will take the challenge of a dragon. As long as I get to name you as my wife, I'll put up with a succubus looking to put a knife through my spine. As long as you're my wife, I can accept the handmaiden's look of hatred.\"\n\n\"Call me empress.\" She pouted.\n\nHe reached up and cupped her face, \"You're more than my empress, Toofy. You're my precious neko, whom I adore.\"\n\n\"She hasn't forgot you fucked the fox.\" The catgirl said stubbornly, and then stared at her silver bracelet, cheeks flushing. The design carved into it was intricate and beautiful.\n\nA neko pawprint stamped atop of a loveheart, with a cross through the middle of it.\n\nSai shifted beneath her, \"You do realise that you're wearing nothing, and sitting on me, don't you?\"\n\n\"Mmm.\" She giggled, rubbing herself against him momentarily, \"Tell her what it means. The symbols.\"\n\n\"You. And me.\" He said quietly, \"The cross is the symbol for the House of Sai. It... We needed something. Pulled it out of a random old book on a shelf. Supposedly it is the eye of an immortal. The pawprint is you. The two of us, bound by love. Corny, I know.\"\n\nA tear slipped down her cheek, \"Toofy... Was so focused on just making love to her Sai... But he's so much sweeter than she deserves. Fills her heart with cavities, too sweet.\"\n\n\"I adore you, my wife.\" He spoke quietly, \"Even if your mouth tastes like... I don't want to actually know. I got a spider leg before.\"\n\nShe giggled nervously, biting her lip, \"Oops.\"\n\n\"Still not going to call you empress, though.\"\n\nHer ears flattened and she glared at him, \"Why not?\"\n\n\"Not until I get to put the crown on your head, whilst you sit on the throne, and make every single one of those arrogant ministers bow down to you.\" Sai replied with a smile, \"I'll call you empress, then.\"\n\nShe glared at him, \"Sai is sweeter than toffee apple. It's annoying.\"\n\n\"Have I told you how beautiful you look, when you're pissed off?\" He grinned at her.\n\nThe cat rolled her eyes, flicked a claw and sliced open his shirt. At this point, she'd had enough.\n\nHe laughed, pulling her down to kiss at her neck, as she tore open his belt and dragged out something that she'd been begging to get inside her.\n\nShe stiffened as she felt it at her entrance, and then let out a quiet moan as she slid down his length until he was filling her completely.\n\nShe flexed around him as she bottomed out, her golden eyes glowing with desire. Her bell sounded as she leaned down to peck a kiss at his face, as he ran his hands through her black hair.\n\n\"Oh, Toofy.\" He moaned, \"Oh, gods above.\"\n\n\"She's better, isn't she?\" The catgirl demanded, beginning to rock her hips, \"Better than the fox.\"\n\nShe blepped her tongue as she moved from just rotating her hips to rising and falling along him. Feeling him sluicing in and out of her chasm. Staring at him with her focused eyes.\n\nHe moaned, unable to speak as she concentrated, massaging his cock inside her, even as she began to pick up the pace. Demonstrating all the skill and knowledge of a true temple companion.\n\nSai grunted every time he bottomed out inside her, his animalistic sounds sending a thrill through her.\n\n\"Mmm, master.\" Toofy moaned, \"She loves him. Toofy loves her master.\"\n\nShe jealously noted that he was matching her thrusts. That was something he hadn't learned to do, last time she'd had him inside her.\n\nHe was holding onto her hips, instead of just lying there and letting her do the work. Shocking her with each joy as his dick entered into her.\n\nShe didn't know whether to moan or purr, lost in the ecstasy of feeling him after so long apart.\n\nToofy leaned down, arms going behind him and giving him a better angle to continue to hammer into her. She moaned quietly into his ear, kissing at his neck.\n\nShe regretted not removing her dress as she tried to crush her chest into his, \"Yes. Please. Oh, master. Oh, Sai. Fuck her! Fuck Toofy! Harder!\"\n\nHe rolled the two of them over, pinning her good arm above her head with one hand, as the other pressed into the bed beside her head. Picking up the pace from the new position.\n\nPushing deeper inside her.\n\nToofy cried out, moaning desperately, \"Yes, yes! Oh, fuck! Fuck! Oh, Sai. Oh... Oh, just like... That!\"\n\nShe felt it building up, making her eyes roll back in her head. The first time she'd slept with him, he'd been premature inside her. She hadn't come close to finishing.\n\nNow, she felt like she was going to finish first.\n\nThere weren't enough cursewords in human or nekan to describe how much she hated the kitsune, right at that moment.\n\n\"Yes, master.\" She begged, \"Yes. Please. Toofy's... Toofy... Cum with her! Give her your seed! Please!\"\n\nShe cried out loudly as her entire body rippled, muscles going taught before collapsing.\n\nSai thrust into her deeply, and let out a bellow right into her ear, before he fell against her.\n\nThe catgirl smirked as she felt the warmth filling her up.\n\nShe brushed a bead of sweat from her forehead, \"That... Feels better. Mmm. Toofy loves her Sai.\"\n\n\"Gods.\" Sai breathed raggedly, as she began to practice her kegals on him. \"Sensitive, woman.\"\n\nShe nipped at his chin, \"Toofy wants more of him. Until she can't walk at all.\"\n\n\"Fuck.\"\n\nShe sighed, lifting her wrist to look at her new piece of jewellery with a grin. \"But... We have things to do. A battle to coordinate. People to kill. Toofy will have to settle for just this.\"\n\nThe two of them jerked in astonishment and looked down.\n\nA small fist slowly receded from inside her stomach, and Toofy made a face, \"Eugh! Did not like! Fuck, did not like!\"\n\nSai rolled aside, \"Apparently you have some jealous kittens.\"\n\n\"Did not like.\" She shivered."
    ],
    "authorname": "shakna",
    "tags": [
        "catgirl",
        "neko",
        "dragon",
        "creampie",
        "ork",
        "god"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/toofy-ch-18"
}