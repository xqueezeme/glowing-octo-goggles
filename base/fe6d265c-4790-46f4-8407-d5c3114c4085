{
    "title": "A Love for Micah Ch. 03",
    "pages": [
        "Chapter 3: You. Are. Loved.\n\nTwo weeks he made me wait.\n\nWe saw each other every morning, talked in the evenings and had dinner Friday nights. Then I would stay over and we would not have sex. We asked each other questions, and shared stories about our childhood and past relationships. We kissed and cuddled but we never took it any further than shirts off. He practiced restraint so I did too. I wanted to respect his process because I knew he needed to do this for himself. So I waited for two full weeks before he began to show me signs.\n\nWhen Jo walked into the Bright Box Cafe that Monday morning of the third week at 7:10am like clockwork, I gave him my customary, \"Good morning, Jo.\"\n\nHe smiled at me and greeted me back. \"Good morning, Micah.\"\n\nHe sat in his usual chair and Marisol served him while I busied myself at the counter. I tried not to stare at him, in his crimson blue Armani suit, crisp white shirt and dark blue patterned tie to accent the look. He read the paper, which I now know as The Wall Street Journal, and made notes in the column as he sipped his medium roast Green Mountain coffee, one cream, two sugars. He didn't look at me as I worked the floor in my usual attire of black shirt, black pants and black comfortable loafers, my hair for once not in a messy bun but braided stylishly. I added eyeliner that morning but that was my only makeup.\n\nAt 7:38am I went over to his table. I had to catch him before he rose at exactly 7:40am to catch his 7:55am train into Center City. Even though the train station was less than a five minute walk from the cafe, he likes to be early for everything. If you're early, you're on time; If you're on time, you're late. It's his motto.\n\nI walked over and playfully blocked his exit from the table. Because it is pushed against the wall he had to go through me to leave. I just wanted him to touch me. He slowly looked up at me, his wide dark brown eyes into my light brown ones. Then he produced a purple flower from behind his newspaper, a single lavender rose. \"You're beautiful today,\" he said softly as he held it out to me. Be still my beating heart.\n\nMy mouth opened slightly and I whispered his name, \"Joseph.\" I took it from him and leaned down daring him to hesitate and he didn't, he closed his eyes, lifted his chin and met my lips. First public kiss. We kissed softly and I stepped back. I looked around to see if anyone noticed before I said to him, \"Have a good day, Jojo.\"\n\nHe stood up, towering over me at six feet. He grabbed his jacket and briefcase, stepped forward and kissed me right on the mouth, grabbing my top lip with his two. \"You have a great day, Angel.\" He stepped around me and walked out.\n\nI floated back to the counter and sat down, a permanent smile on my face. Shelly, who definitely noticed said, \"Shit sure did change in a week, didn't it?\"\n\nMarisol walked by and quipped, \"Check his knees for rug burns first, then it will all make sense.\" I didn't even retort back, I just laughed out loud. She turned back to me bewildered that I didn't curse her out. \"Ay dios mio, you're in love,\" she scoffed. I didn't refute her assessment.\n\nBecause Jo and his business partner Gary are still in the growing their business stage phase of their financial brokerage company, he gets in the office before 9am and works until 6pm or 7pm, sometimes as late as 9pm, so I don't always hear from him in the evenings. But he called me from his desk phone and stayed on speaker as I cleaned my house and got ready for bed.\n\nOn Tuesday he came in and before he sat at the table he approached me with a single white rose. I smiled widely. \"Good morning, Micah,\" he said with a smile.\n\n\"Good morning, Jo,\" I cooed. I lifted up on my toes and kissed his lips softly. We kissed again before he left and clipped my second rose on the notice board behind the counter. He called me again in the evening and tried to explain his work day to me as I did laundry.\n\nWednesday he showed up with another rose, pink this time. \"Oh honey, you are doing the damn thing,\" I gushed when he approached me. He smiled widely and greeted me with a simple kiss. On his way out I straightened up his tie and kissed his lips. Because apparently we kiss in public now.\n\nWhen I added the pink flower next to the white one Shelly said to me, \"He's sending you messages.\"\n\nI gave her a confused look. \"What do you mean?\"\n\nShe opened up her phone and showed me the meaning of rose colors. She told me, \"The purple rose means love at first sight. He's saying he was into you from the beginning. The white rose means innocence and purity. But it can also mean honor and respect and worthiness.\"\n\n\"Gaaawwd,\" I gushed happily. \"What about pink?\"\n\n\"Pink is romance, elegance and happiness. Also appreciation and gratitude.\"\n\n\"So he appreciates me and he's grateful for me.\"\n\n\"And you make him happy!\" she squealed.\n\nI put my hand on my heart and closed my eyes. \"If you're right and he's sending me messages, then I'm ready for this puzzle. Let's look up all the colors!\"\n\nI didn't say anything that evening about the rose colors when he called me from the train ride home, we just casually talked about other stuff. But on Thursday I was ready. I was hoping it was red or even orange, but it just better not be blue or yellow!\n\nHe showed up not in a work suit but still business casual with dress pants and a tie so I knew he wasn't going to the office. He walked up to me with a rose that wasn't quite pink or red and it took me a moment to realize it was coral. I wracked my brain to remember what coral was and it hit me: Desire. Was he telling me that he's ready?\n\nHe answered my question. \"I can't stay for breakfast. I have to go to Wilmington, Delaware for a work meeting so I won't be available all day but I'll be back around 5 o'clock. Have dinner with me at my house. Then stay the night.\"\n\n\"Yes,\" I breathed. He kissed my lips softly, then pushed his tongue in and kissed me with more passion. I forgot I was at my place of business and wrapped my arms around his neck in the middle of the cafe and moaned in his mouth.\n\nHe pulled back first. \"I gotta go. I'll text you when I can.\" He disappeared through the door leaving my heart beating outside of my chest. I turned around and all eyes were on me, including Landon and Ali from the back, Shelly at the counter, Lea the new waitress and Marisol.\n\nMarisol spoke first. \"\u00a1Oh chico! He's in love, tambi\u00e9n.\"\n\nI tried not to think about it all day. But as soon as Fen, the Taiwanese cafe owner, came to settle the books for the day, I immediately left and went straight to my waxing appointment. I had to call in an emergency favor with them and since I'm a regular they fit me in. I went home and cleaned my bottom, then scrubbed and exfoliated my skin and smoothed it out with lavender scented baby oil, then topped it off with a light spray of CK One. I choose my outfit carefully, light blue skinny jeans ripped at the knees, a black tank top and an oversized white and fluffy asymmetrical sweater over it.\n\nAt 5pm on the dot he texted me: Sorry I'm late, traffic. I'm just getting in, gonna start dinner and then pick you up at 6:30pm.\n\nMe: Okay\n\nJojo: You're staying through Sunday.\n\nMe: Okay\n\nJojo: I hope you like Italian sausages in your tuna casserole.\n\nMe: First of all, I like sausages everywhere in me.\n\nJojo: I'm not making tuna casserole. I just wanted you to say something other than: okay.\n\nI laughed at that and sent him an emoji with a halo. Then I added more clothes to my overnight bag. At 6:20pm he was at my door, sexy as ever in loose fitting jeans, a light pink button down shirt with the two top buttons opened and his brown leather jacket. He waited in the doorway for me to lock up, took my bag from me and then we got in his car to head to his house.\n\nHis home was warm and smelled of some kind of pasta. The table was set with scented candles of cinnamon and vanilla, a big bowl of freshly made garden salad and buttered french rolls. I set the plastic container I was holding down on the island, then I went upstairs to his room to put my bag down and the fireplace was already roaring. By the time I made it back down he had cut up perfect lasagna squares with fresh bay leaves on top and set two plates next to each other.\n\n\"Oh one more thing,\" he said and went to the counter and showed me the Maker Mark's 46. I gasped loudly and excitedly but he said, \"After dinner. For now, do you want wine or water?\"\n\n\"Wine. White.\"\n\n\"Good choice.\"\n\nHe pulled out white Zinfandel from the wine fridge and I gasped again. \"Cheap wine!? Who are you!?\"\n\nHe smiled at me. \"Well I knew you were coming so...\"\n\n\"Fucker!\" I yelled at him dramatically and he laughed out loud. I added the container to the table and told him as I sat down, \"Abby's apple pie. She made it on Sunday.\"\n\n\"Can't wait to try it,\" he said as he sat down. Then he looked at me closely. \"You did that for me?\"\n\nI smiled slyly. \"Did what?\" I added eyeliner, gold eyeshadow to compliment my eyes, curled my long eyelashes and shaped my eyebrows.\n\n\"You're gorgeous,\" he said seriously. Then he leaned in my neck and sniffed me. \"Hmmm... what else did you do for me?\" he said in my ear all husky. My dick immediately swelled and I almost told him fuck this dinner shit and take me on this table.\n\nBut I know he planned a romantic evening for us so I kept it in my pants, literally, and said, \"Guess you'll just have to wait and see.\"\n\nI reached for my fork and took a bite of the heavenly lasagna he made. He leaned back and also started eating. We made small talk about work and how Randy is doing, pretty stable at the moment. I caught him up on Devin's love life: he finally ended it with Wally but they still talk everyday so that's not going to last long, they'll be back in bed by Christmas. My stomach is a bottomless pit but I wanted to be light for him so I ate less than normal and drank more.\n\nAfter dinner he grabbed ice cream and we ate the pie \u00e0 la mode, talking less, staring more. Eventually I stood up, grabbed the bourbon and two glasses from the cabinet like I already lived there and started walking toward the foyer. At the entryway I looked over my shoulder and asked him, \"Are you coming?\"\n\nHe stood up. \"Lead the way, sexy.\"\n\nHe followed me upstairs to his room. I left my shoes by the door, poured two full glasses and handed him one, then plopped in one of the oversize chairs in front of the fireplace, drawing my knees up and tucking my feet underneath me. I was already feeling nice from the three glasses of wine at dinner, so the smooth and sweet taste of the liquor was putting me all the way in the mood. He rolled up his sleeves to his elbow and sat in the other chair. Here we sat and sipped, quietly watching the fire.\n\nI broke the silence. \"So. Have you done all the soul searching you need to do? Consulted the planets and all the mediums? Prayed for guidance from your ancestors?\"\n\nHe didn't answer my question, instead he said without looking at me, \"You make me feel....cared for. In ways that no one has ever done for me. When I'm with you I feel youthful. Joyful. Excited. Desired. Courageous. You challenge me, force me to be unconventional in my habitual life. You're so imperfectly perfect for me. It hit me so fast, I didn't even realize it until I was already deep in. I just needed my head to catch up to my heart.\"\n\nHe let his words hang in the air. I smirked and finished my glass. \"Guess all my voodoo dolls and prayers to the orishas worked.\"\n\nHe smiled and stood up. \"You're impossible.\"\n\n\"But I'm also looking very probable to you right now,\" I stated amusingly.\n\nHe walked over and towered over me. \"You're gonna make jokes all night?\"\n\n\"Not unless you put something in my mouth and shut me up.\"\n\nJo leaned over, put his hands on the armrest and got inches from my face. \"You're gorgeous,\" he said softly.\n\n\"You said that already,\" I said softly back. \"Tell me something else.\"\n\n\"I've fallen in love with you.\"\n\nI gasped. \"Be still my beating heart,\" I whispered.\n\n\"What?\"\n\n\"Nothing. Say it again.\"\n\n\"I'd rather show you,\" he said, and kissed me softly on the lips, then leaned into my neck and kissed me there.\n\nI reached up and held onto his neck and he wrapped his arms around me and pulled me from the chair into a standing position. He continued to kiss my face and my neck, holding me close to his body. He needed more skin so he leaned back, grabbed my sweater from the bottom and pulled it up over my head in one swoop, then resumed kissing me all over. I felt him move his hands further down to my butt cheeks and lift me up. I instinctively wrapped my legs around his waist and held onto his neck tighter, put my head on his shoulder and sighed. He held me this way for ten full seconds before he moved me to the bed.\n\nHe laid me down gently and kissed me again. I took note that his kisses were not needy tonight but sweet and sensual. His mouth made it to my tank top and kissed and sucked my hard nipples through the cotton, then moved it up, started at my belly button and kissed his way back up to my pec, putting my right nub between his lips and pulled upward, making me moan. He moved over to give my left nipple the same treatment, then kissed his way back to my groin. He leaned up to a stand and began to remove my belt buckle, then the button, then the zipper. I sat up to help him but he put one palm flat on my chest and pushed me back on the bed, making me giggle. He grabbed my jeans at the hips and pulled. They slid down inside out and off my body.\n\nHe grabbed my hard dick and squeezed and I moaned really loud. Then he stepped back and started taking off his clothes. I reached down to pull off my blue and black colored briefs but he shook his head firmly as his shirt slid off, revealing his broad and hairy chest. I understood. I was his present and he was going to unwrap me all by himself. So instead I moved further up the bed and watched him step out of his jeans and throw them on the chair. He wore burgundy trunks that barely held his huge cock, already stained with pre-cum making its way out. Then he dropped them.\n\nHe reached up and held onto the top part of his four poster bed and cocked his head to the side. He stood there and I smiled, figuring out what he wanted. He wanted me to see him in all of his glory first and to know that all of him was mine to claim too. And he wanted permission to claim me so I gave it to him. \"C'mere,\" I told him softly. Only then did he crawl up the bed toward me.\n\nHe started at my inner thighs, smooth and hairless, kissed and sucked them, marking his territory, the top of his head brushing against my balls as he did so. Once satisfied with the two hickeys on opposite sides of me, he knelt on the bed and pulled my underwear down. Although my cock was stiff as a board he went for my nuts first, kissing, sucking, nudging them with his nose, licking them. Then he pushed my thighs back and went straight for it, putting his tongue directly in my hole, his beard sexy and scratchy against me. I moaned so loud if he had close neighbors they would have absolutely heard me while he rimmed me.\n\nHe kissed his way back up to my balls, licked them a few times, then came up a little further and held my cock straight up. I didn't know if he was stalling because he hasn't sucked a cock in 12 years or if he was teasing me but my body was dying to feel his mouth on me. He started licking me from base to tip, gathering all the pre-cum on his tongue, circling the head and making his way back down. When he had licked me as clean as he could with me still leaking a steady drip from the slit, he finally, thankfully, mercifully put my horn in his mouth and began to blow.\n\nIf he hadn't told me that he hasn't given a blow job in over a decade I would have never believed him. His suction was immaculate and he deep throated my seven inches every single time, with his tight fist chasing his way up. While riding my orgasmic waves to ecstasy I realized something. His touch, his kisses, everything he was doing was purposeful and intentional. He wanted to be in complete control while I lost control. He wanted to bring me to my metaphorical knees, to torture me with pleasure until I begged for sweet release. This is how he will claim me, own me, make me his. When all is said and done tonight, he will be all I'll ever want and need.\n\nSo I gave him what he wanted, what he needed. I let myself go, called out his name and begged him to make my cum. And cum I did, I jizzed in his mouth repeatedly, my spunk filling his cheeks and dribbling out the side of his mouth. He dutifully swallowed, leaned up on his knees and wiped his mouth with the back of his hand. He smiled at me like he was proud of himself, making me laugh.\n\n\"Yes, you did very very well,\" I praised him. \"Want a cookie?\"\n\n\"I'm about to get the cookie,\" he said, making me giggle. \"Reach under the pillow.\"\n\nI looked at him curiously, then reached up. I felt a bunch of unopened Magnum XL wrappers and I threw one at him. It bounced off his chest and I laughed again. He said, \"Now get the other thing.\"\n\nI reached further around until my fingers closed on a cylinder bottle of lube. I sat up to hand it to him then turned around, got on my knees and leaned all the way down giving him full access. He lubed me up with two fingers inside, then wet my outside too until my entire crack was glistening. I braced myself for impact when he reached around my waist and turned me over.\n\n\"I need to see your face the first time,\" he told me. He held my legs up and toward my chest and I took that responsibility from him. He put the condom on as I watched him, then added lube to the rubber. He stroked himself a few times then looked at me.\n\nHe placed the tip at my pucker. And right before he was about to thrust I told him unequivocally, \"I love you, Jo.\"\n\nHe looked at me, partly surprised like he couldn't believe I chose that moment to tell him and also elated that I chose that moment to tell him. I nodded my truth at him. We locked eyes for a moment, then he pushed through the ring. I cried out and instinctively bore down as he didn't stop, sliding in like he always belonged there. He kept pushing past my prostate to the hilt, leaned in and kissed me. I let my legs drop keeping my knees up and my feet flat, the flexibility in my hips and pelvic bone allowing me to grant him full access in the position, and I held onto him.\n\nHis kisses relaxed me as I got used to his size, then when he knew I was ready he began to move, pulling back slowly, pushing in smoothly. We stared at each other as he made love to me. This slow march went on and on, meaningfully, intentionally. He needed me to feel how deeply he cared about me. I didn't mean to, but I couldn't help it. My eyes started welling up, then the tears started falling down the side of my face. I quickly figured out why. I've had sex, I've been unwillingly sodomized, I've been pounded, I've been fucked, but no one has ever made love to me until now.\n\nHe slowed down even more and asked softly, \"Are you okay?\"\n\n\"Please don't stop, Joseph,\" I responded instead of answering his direct question. \"Don't ever, ever stop.\"\n\nHe nodded and went back to his steady pace. I closed my eyes and held onto him tightly, my entire body alive and tingling, my mouth open slightly as I moaned with every other thrust. He leaned up and held onto my thighs, bringing me toward him rather than him pushing in, slowly at first, then much faster, harder. He gathered my legs and put them on his shoulders, then pushed all the way into my chest so that my bottom was no longer on the bed. He thrusted harder, his deep strokes wanting to go deeper. We had been here long enough. He needed to cum.\n\nI let him fuck me. I told him to, screamed at him, \"Fuck me harder!\"",
        "He obliged, slamming into me quickly and repeatedly. I dug my nails into the sides of him as he dug himself deeper in me. He leaned up again, and held out my legs in a V formation and I reached back to hold onto the pillow, my elbows at the side of my head. It wouldn't be long now. He started moving erratically, moaning audibly, biting his bottom lip hard, his body involuntarily spasming, mine trembling. I reached out and pinched his nipples, making it worse.\n\n\"Mi...cah.\" His voice shook. I pinched him again and again. Quick hard pinches on his nipples bringing him to the brink. He said one word. \"Cumming.\"\n\nHis hands slid down my legs to my cheeks and he pushed in and pulled me to him at the same time, threw his head back and moaned. I could feel him pulse out cum into the condom as he moved his waist in a circular motion right up against my sweet spot. I moaned with him as my cock spurted out cum spontaneously on my chest. Then he collapsed on me, the full weight of him on my smaller frame.\n\nI played with the sweat on his back with my fingertips as he caught his breath. Once he did, he kissed my neck first, the closest thing to his face then made his way to my mouth. We kissed and he stayed inside of me until he had to move. He sat back on his knees between my legs and pulled out slowly. He carefully rolled down the condom, left me on the bed alone to go to the bathroom giving me enough time to get into the covers, as our entire love making session happened right on the green patterned leaves of his comforter. He quickly came back, wiped my chest down with a wet rag and slid next to me.\n\nI put my head on his chest and said, \"Ah. May. Zing.\"\n\nHe laughed. \"One hour. Then we go again.\"\n\n\"You do know we have to actually go to work in the morning,\" I reminded him.\n\n\"Take the day off.\"\n\n\"I can't. Because you have to show up with another color rose and then Shelly and I have to figure out your hidden message.\"\n\n\"Who said I have a hidden message?\" I looked up at him to see his sly smile. \"Take the day off. I'm working from home,\" he said as he held me, rubbing my shoulders.\n\n\"Okay Jojo.\" I got out of the bed to go to my jeans pocket, grab my phone and send Marisol and Fen a text to say I was sick and would not be in, then I got into bed with my lover.\n\nWe didn't talk as we laid together and I dozed off. Somehow in the middle of the night I ended up on my side in front of him, and I felt his cock rub up against my bum over and over again. I reached under the pillow and wordlessly handed him another condom. I felt him prepare me with lube first, heard the wrapper tear, the rubber snap and then he was inside of me again. He moved with a more hurried pace. I caught on quickly, there will be no slow and steady this time. He was going to dominate.\n\nHe wrapped one arm around my neck and with the other he touched my torso, as he buried his cock inside of me over and over again. The needy feeling was back. I felt it as he bit my neck, pinched my nipples, pounded my ass. He pushed me completely onto my stomach, put his hand on the back of my head burying one side my face in the pillow and fucked me harder. I moaned, I screamed, I cried and I let him take me. And when he was good and ready, he pulled the condom off, moved to the side of me, stroked himself and came on my face and open mouth, spraying me with hot cum. I grabbed his meaty cock from him and sucked the rest out, and licked him clean.\n\nHe laid down next to me, rubbing my back to my bottom, tonguing me sweetly, licked cum off my cheek and kissed me again. \"You're mine,\" he mandated.\n\n\"I'm yours,\" I submitted. Then I kissed him and asked, \"You're mine?\"\n\n\"I'm yours,\" he said without hesitation. \"All yours.\"\n\n~~~\n\nI woke up in the morning alone, the room much cooler as the fireplace logs had burned out but deep in the covers that provided me with more than enough warmth. I sat up and there was a single red rose on the empty pillow with a small note card with words written in impeccable cursive:\n\nMy Angel,\n\nLavender for your enchanting first impression. You are enchanting.\n\nWhite for your youthfulness and worthiness. You are worthy.\n\nPink for your elegant spirit and inner joy. You are joyful.\n\nCoral for your passion and sexiness. You are desired.\n\nRed for your beauty and courageous heart, but also an expression of what I feel for you.\n\nYou Are Loved.\n\nI closed my eyes and held the card and the rose to my chest. I am loved.\n\n~~~\n\nI brushed my teeth, put on my oversized sweater, left the room and went to find him, bringing a condom and the bottle of lube with me. I could hear him talking in the office so I walked two doors down. The door was open and he was sitting behind his large oak desk in the leather executive high back chair.\n\n\"...and that leaves you with a profit margin of 4.5. I'm not sure if it's worth the risk...right, but... yeah...\" He noticed me in the doorway and motioned me to come in, but then held his finger up for me to wait for him.\n\nI put the condom and the lube on the edge of his desk and he smirked at me. \"You may get better odds going with the first option...\" he said in his headset.\n\nI busied myself by looking around the room. The den downstairs was nice but I could tell this was where he spent his time. The bookshelf had personal effects, pictures and knickknacks. He had a picture of himself as a child with a beagle and then another picture of him much older with a rottweiler. There were financial books on one side and his personal books on the other, like the Autobiography of Malcolm X, The Isis Papers, The New Jim Crow, a whole row of Eric Jerome Dickey books, Zane books and surprise surprise, all of E. Lynn Harris books. I chuckled to myself at him reading gay African American fiction. Jo knew deep down who he was all along.\n\nI moved to his wall of accolades: Bachelors from Penn State, MBA from Howard University, and all his certifications: CPA, CFA, CFP, CMA, ChFC. In front of the picture window were two comfy chairs and a low level coffee table. I can tell these chairs have been used. I sat in the one with the powder blue cotton throw on it and lifted up the book that was already open on the table. It was Pete Souza's Obama: An Intimate Portrait. I sat there for the next ten minutes and went through the stunning picture book until I heard him call my name.\n\n\"Micah.\" I stood up and he moved his chair out from underneath his desk and motioned for me to come closer. I sat on his lap, put my arm around his neck and he kissed me. \"Good morning, Angel.\"\n\n\"Mooorning!\" I sang, and leaned over to kiss him again. \"How's your day so far?\"\n\n\"A little stressful,\" he admitted, his forehead scrunching up. \"It's hard when you give people sound advice and they do the opposite of what you suggested. But at the end of the day, it's their money. Now I just have to figure out how to make this deal work for them.\" His hand traveled up my thigh and brushed up against my genitals. He smiled. \"No draws?\"\n\n\"I mean, I figured that's why you wanted me here with you today, so what's the point of wearing them?\" I batted my eyelashes at him.\n\n\"This is true,\" he said as he cupped and fondled my balls.\n\nI moaned but then I held his wrist to make him stop. He looked at me curiously but quickly caught on when I slid off his lap and onto my knees. He opened his legs and gave me full access. I rubbed my face along his house pants before I reached into them. He must have showered because he smelled like Zest instead of a night of passionate sex.\n\nHe was also not wearing any underwear and I laughed. I looked up at him as I pulled his cock out. \"Yeah? No draws?\"\n\nHe smirked. \"What's the point in wearing them?\"\n\n\"This is true,\" I mimicked him and motioned for him to lift up his bottom so I could pull his pants down and off. I immediately got to work. I put him in my mouth and bobbed on him. I purposely gagged to produce more slimy saliva to stroke him into a full erection. I reached to the desk and grabbed the condom to slide on him. Then I got up and straddled him in his executive chair. He lifted my sweater off and slouched a bit to give me better access as I lowered myself on his cock, connecting my arms around his neck. Little did he know, I had already prepared my bum for him.\n\nI pulled his t-shirt off and kissed him first. He groaned in his throat as I began to move like the waves of the ocean on top of him, belly dancing, reggae dancing, hip dancing on him. He leaned his head back, closed his eyes and put his hands on my waist while I danced my best dances with him inside of me. He moved one hand to the middle of us, grabbed my cock and began to stroke me. I rode his cock like it was going to take me places, and it did.\n\nI leaned closer to his body and began to bounce on him. I too closed my eyes and held on, massaging him against my internal nub, firing electricity all through my body. I got loud and aggressive, digging my nails into the nape of his neck, calling out his name. He started slapping my ass with one hand and stroking me faster with the other. \"Oh God!\" I called out first as the heat flushed through my body. I squeezed my rectum and told him, \"I'm cumming baby!\" My cock started spurting out straight up between us, landing on his hairy chest. He groaned and came as well.\n\nI fell against his chest, sweaty and exhausted. He lifted me up and removed himself from inside of me and held me closer to him. I kissed and sucked his neck, returning one of the many hickeys he had left on my body. He took the condom off, tied the top and tossed it into the small trash can under the desk. He ran his hand down my back to my cheeks, then up to my neck, and back down again. Eventually I leaned up and looked him in the eyes.\n\n\"You got any Coco Puffs?\"\n\nHe laughed out loud. \"You hungry?\"\n\n<br >\"After that ride? Famished.\"\n\nHe kissed my lips. \"I ordered breakfast. It's downstairs on the table.\"\n\n\"IHOP To Go?\"\n\n\"Not quite. A bit fancier than that. Come on.\" He stood up taking me with him. We found our clothes, or lack thereof on my part, and went downstairs. It was an entire feast spread out.\n\n\"Jojo honey, I'm already spoiled,\" I told him as I made my way to the table. I didn't even sit down, I grabbed a fork and dipped it in each bowl and plate to sample: scrambled eggs, fried eggs, thick pork sausage links, regular bacon, Canadian bacon, steak strips with grilled peppers, baked salmon, fried chicken strips, fried whiting, pancakes, waffles, crepes, fresh fruit, yogurt, granola and a bunch of dipping sauces. Eventually I dropped the fork and began to eat with my hands.\n\nHe came over to the table and sat down, and started pilling food onto his plate. \"You're not gonna sit?\"\n\nI moved a plate aside and plopped my bare ass on the table sitting right next to him. His eyebrow went up and I ignored him. \"You need to fuck me on this table. This table is built for intense, hardcore fucking,\" I told him as I wrapped a piece of sausage in a pancake and dipped it in syrup before putting it in my mouth.\n\nHe looked at me, then said, \"Take your braids out so I can pull your hair while I'm fucking you on this table.\"\n\nI scoffed. \"I just got these done. I'm not taking my braids out, bruh.\"\n\n\"Bruh?\" he asked incredulously. \"I'm not your bruh, bro. Take your fucking braids out,\" he ordered.\n\nHmpf. He done lost all his mind. \"I paid 50 dollars for this style, I'm not going to take it out just because you want to pull my hair. What kind of shit is that?\"\n\nHe stood up and over me. \"I will give you 50 dollars. I will give you 50 dollars a week to get your hair braided from this moment on. Take. Your fucking. Braids out. Today.\"\n\nI cocked my head to the side and said, \"So is this what it's gonna be like? You tell me what to do and I just do it? Because that's just not going to work for me.\" I crossed my legs, took another bite of my made up Pig in a Blanket and looked him in the eyes defiantly.\n\nHe smirked, then kissed my lips. \"Today, Micah. Combs are in the hallway bathroom. Don't make me have to tell you again. There will be consequences.\"\n\nHe grabbed his plate and headed back to his office, leaving me to decide if I wanted to obey his command and get fucked on the table or deliberately disobey him and have him spank me then fuck me.\n\n~~~\n\nI showed up Saturday morning at the Bright Box Cafe in an Uber to work the day and make up for missed hours the day before. I left my lover sucked and fucked in bed before I kissed him with a promise to be done work at 3pm when the shop closed. I suspect he expected me to feel all safe and secure because of his financial security, be okay with him taking care of all my wants and needs, but I don't. As much as he would love for me to be his Stepford wife, I've been taking care of myself since I was 16 years old and will continue to do so, and that includes working.\n\nWe heard the roar of the motorcycle outside the cafe just as we finished putting the chairs up in the cafe. I watched him take off his blue and white helmet which matched his black leather motorcycle jacket with the blue and white patches on his shoulder, which matched the blue and white seats of his Ducati Scrambler. He came to the glass door and knocked on it.\n\nMarisol opened it and said, \"We're officially closed but Micah is always open.\"\n\nHe laughed out loud and I hissed at her playfully, \"Puta!\" She laughed and grabbed her purse to head out. I turned to him. \"What are you doing here? And on that?\" I pointed to his bike through the window.\n\n\"We're going for a ride.\"\n\n\"Where?\"\n\n\"King of Prussia Mall. I need to pick up some stuff.\"\n\n\"Fooooor?\" I asked with an eyebrow raised. He smiled at me. \"Are you trying to buy my love and affection, Jojo?\"\n\n\"I don't need to buy your love and affection, you give it to me for free. That's why I want to do things for you.\"\n\n\"Okay, listen,\" I started. \"There is understandably a huge part of me that is screaming inside that I have this rich boyfriend that wants to be all Mr. Fifty Shades of Grey and spend all his money on me but there is a realist side of me that is extremely cautious of this turning into a suga daddy/suga baby situation. Yes I like dinners and riding in your Benz but those are things we do together, not things you do for me. I'm not interested in you taking care of me in that way. I can buy my own clothes, I can pay for my hair appointments, I will never ask you for money for bills, rent, food or necessities. We can joke around about you owning me, but the truth is, nobody owns me. I take care of me. Comprende?\"\n\nHe had crossed his arms during my speech and watched me intently. He cleared his throat and said, \"Can we compromise? Because I like to pamper the person that I am with and you work hard and deserve to be pampered. I won't do it all the time, but there will be times like today, that all I want to do is make you feel as special as you make me feel. And on other days and times you can pamper me in ways you see fit. Even if it's monetary. So let me do it today. Please? Por Favor?\"\n\nI was thoughtful. \"Okay. I get to treat you too. Starting today. I'll pay for dinner tonight. Even if it's mall food.\"\n\nHe smiled. \"Okay.\"\n\n\"Gaaawd, I look a mess too, \"I said as I touched my curly afro mane. Of course I took out my braids and let him pull my hair and blow my back out on the table. The opportunity was too good to pass up. I grabbed my murse and my jacket and followed him outside. Intense fear hit me suddenly. \"I've never been on a bike,\" I reminded him.\n\n\"I know.\" He looked back at me and took my hand. \"I got you. I'll stay on the main roads and off the interstate.\"\n\n\"Okay.\"\n\nHe fit a helmet on me and got on. He motioned for me to get behind him and said, \"Just connect your hands around my waist and don't let go, no matter what. Can you do that?\"\n\n\"Yeah,\" I said nervously.\n\n\"You trust me?\"\n\n\"Only one way to find out,\" I joked and then got on.\n\nHe turned on the ignition and the biked roared. We balanced and he took off, slowly at first. He turned west on US-30 and headed to the mall. I have to admit, it was fun. He didn't do anything crazy, just drove a steady pace and weaved in and out of traffic. We'll definitely have to go faster on our way home.\n\nOf course he started on the expensive side of KOP. We went to Nordstroms and the first thing he bought me was a black leather motorcycle jacket with red stripes on the arm. I balked at the price, but he reminded me that I agreed to him getting me what I wanted and me buying mall food for dinner. We went over to Neiman Marcus and I picked up a few cute men's oversized sweaters that were less than $100 each and Jo went for the suits.\n\n\"Do you really need another suit?\" I challenged him.\n\n\"Clothes make the man,\" he quipped.\n\n\"Okay, that is definitely a line from a movie.\"\n\nHe laughed and held out two suits. He asked, \"Which one?\"\n\nI gave him an exasperated look. They were both the exact same color of navy blue. \"You do not need another suit. Especially another blue one.\" He smiled and waited. \"Ugh,\" I rolled my eyes. I took one from him and held it closer to the light. It was Armani, wool but felt so smooth. It was also $2100 and that was on sale. I scoffed again. \"Oh no, let me see the other one.\"\n\nHe handed it to me. Versace, also wool, but it had a metallic tint to it under the light. This would look so good on his skin. Then I made the mistake of looking at the price. \"Twenty-Nine Nifty-Five, what the fuuuuuck?\" I practically yelled at him.\n\nHe chuckled as people turned to see what the commotion was about. \"So you like this one.\"\n\nI leaned closer and said through my teeth, \"Do not buy a $3000 suit, Joseph.\"\n\nHe looked at me intently and said, \"Okay, then let me buy you a suit. Don't look at the price, just pick what you like.\"\n\n\"And where would I wear a suit?\"\n\n\"Doesn't matter. Every man needs a perfect suit. Even Billy Porter has suits.\"\n\nI laughed and asked, \"You want me to dress like Billy Porter?\"\n\n\"I want you to wear whatever makes you happy, Angel.\" I gave him a soft smile. He took the suit from my hand and said, \"I won't buy a suit for me. But let me buy you a suit. Your choice.\"\n\nI looked around and sighed. Then I started going through suits and looking at the mannequins. Eventually I saw it. Burgundy. Slim fit. Vest included. I even wanted the black shirt the mannequin had on with the black and burgundy silk tie. I went to touch it and it was so smooth. The sign said Tom Ford so I knew it was expensive. I reached for the tag but Jo gently grabbed my wrist. \"Just try it on first. See how it makes you feel.\"\n\nI gave him a wryly look but I waited for him to call over an assistant, gave him my measurements and before I knew it, I was standing in the dressing room in front of the full length mirror in this amazing suit. Jo came over and straightened out the lapels, then touched me from the shoulders down to my wrist, walked around me grazing my lower back with his fingers, then came from to the front of me again.\n\n\"You are gorgeous. Handsome. Beautiful. And I'm getting it for you,\" he said definitively. I wanted to argue, but boy did I look good in that suit. So instead I nodded.\n\nI relaxed a bit after that. We went into American Outfitters and got a couple of slim fit jeans and at Eddie Bauer I picked up black work pants. We went to Aldo's and he bought me shoes to match my new suit. After the fourth store I remembered, \"Jojo! We came on a motorcycle, how are we getting this stuff home?\"\n\n\"Oh I'll just call for a service to drop them at the house.\"\n\nMy mouth was still agape. \"People do that?\"\n\nHe smiled. \"Yeah.\" He put his arm around my waist. \"What do you want to do next?\"\n\n\"Umm...\" I looked up and saw Sephora. \"Can we go there?\"",
        "He looked like he did not want to go into a cosmetic store and I giggled at his face that was trying to be diplomatic. \"Why don't you let me take these packages and send them to the house and you go get pretty for me?\" he suggested.\n\n\"Shut up!\" I laughed.\n\nHe went into his wallet and handed me a Visa check card. \"The pin is my birthday backwards, 17-05. Feel free to keep shopping after that. I'm going to be around, just call me when you're done.\" He took the bags from me, leaving me with my new motorcycle jacket and gave me a peck kiss on my lips. He started walking away but I grabbed his arm and kissed him again, letting my lips linger on his. He had no hands to hold me but it didn't matter.\n\nHe pulled back, searched my face with his eyes and kissed me again. \"You're welcome. Anything for you, Angel.\"\n\nFor all my bravado earlier about not wanting to spend this man's money, I have to admit, it felt good to have his card in my hand and not know the limit. I skipped happily to Sephora and got two new eyeshadow palettes, one for fall colors and one bolder sparkly colors. I stopped at Fendi and got a pair of shades, stopped at Louis Vuitton and bought the most expensive thing at almost $1000, a satchel that was going to be my new murse, and went back to Neiman Marcus for men's lingerie. It's hard to find if you aren't looking but I found them, lace men's briefs and lace boy shorts. I settled on a couple of black, blue and red ones and then bought a black, see-through three quarter length robe.\n\nI dumped everything in my LV murse and texted him to meet me at Maggianos. It was expensive enough but my paycheck could handle it. He got there first and had a table when I showed up with my Fendi glasses on and new satchel hanging off my motorcycle jacket.\n\nHe laughed out loud. \"Somebody went shopping.\"\n\n\"New phone, who dis?\" I joked, making him laugh again.\n\nI slid his card across the table to him but he stopped me and pushed it back toward me. \"Keep it.\"\n\nI frowned at him. \"Joseph,\" I said his name warningly.\n\nHe threw his hands up in surrender. \"You said you don't want me to do things for you, and I'm not. But if you have an emergency, I want to make sure you're okay. So think of it as an emergency credit card.\"\n\n\"But it's not a credit card. It's a check card, which means it's tied to a bank account.\"\n\n\"Uh-hmm...\" he said with a straight face.\n\n\"Your personal bank account.\"\n\n\"I have a lot of bank accounts for different reasons. That's a very small account that I use for emergencies.\"\n\n\"How much is in the account?\" I asked with my eyes narrowed at him.\n\nHe shrugged. \"Maybe ten.\"\n\nI double blinked. \"Ten thousand dollars!?\" I tried to slide it back to him again shaking my head but he pushed it back to me.\n\nHe tried to backpedal. \"Maybe not ten. Maybe somewhere between five and eight.\"\n\nI left the card in the middle of the table and scolded him. \"Jesus fucking Christ, Jo, you can't just give me ten thousand dollars for being your boyfriend and riding your dick!\"\n\nHe smiled. \"Well when you say it like that...\"\n\nI folded my arms and pursed my lips. \"No.\"\n\n\"Come on, just take the card.\" he pleaded. \"If you never need it, don't use it. But if you need it, it's there.\"\n\n\"Lower it. Significantly.\"\n\nHe was thoughtful. \"Eight.\"\n\nI scoffed. \"Two! That's what I thought I was working with.\"\n\n\"Seven.\"\n\n\"Two!\"\n\n\"Come on. Meet me halfway, for my own peace of mind.\"\n\nI rolled my eyes. \"Four.\"\n\nHe smiled. \"Five. That's my final offer.\"\n\nIt was my turn to be thoughtful. \"Why do I feel like that's the number you wanted to get to anyway? I feel like I've been hoodwinked.\"\n\nHe grinned. \"It's what I do for a living,\" he said with a wink.\n\n~~~\n\nAfter dinner as we walked back to his Ducati I told him, \"Take 76. Go fast.\"\n\nAnd he did. We got on the highway and he moved through traffic at 80 miles per hour at twilight. The wind wasn't as biting with a motorcycle jacket on compared to my polyester one. I felt the power of the machine between my legs and I knew I was ready to feel his power between my legs again too. We made it to his house just as the sun finally disappeared and the outside dimmed lights were already one.\n\nI got off the bike and looked around. \"Where are the packages?\"\n\n\"They're already inside. Lana brought them in.\"\n\nI'm sorry, what? \"And who the fuck is Lana?\" I asked with an attitude as he opened the door. Sure enough our packages were at the bottom of the stairs in the foyer. \"And why does she have a key to your house!?\" I said even louder.\n\nHe smiled and pulled me close. \"Relax Angel. Lana and Koya manage and clean the house. They share the responsibility. Lana lives closer so I asked her to wait for the car service and bring them in.\"\n\n\"Why is this the first time I'm hearing about this?\"\n\n\"I don't know, \"Jo said as he kissed my jaw. \"It never came up. They are two middle aged Eastern European ladies that come twice a week, Wednesday and Sunday mornings. They clean the house and get groceries for the week.\"\n\n\"Oh, okay. Can I meet them?\"\n\n\"You'll be here Sunday right?\" He kissed my jaw again.\n\nMy eyes lit up. \"Does that mean we aren't going to the gym?\"\n\n\"Nice try. They'll be here until the afternoon, they leave around two o'clock. So if we come straight back, we'll catch them.\"\n\n\"Okay.\" I reached down and grabbed my bags. \"I'm going to soak in the tub. You're not allowed to follow me.\"\n\nHe laughed and said okay. I went to his room and put the bags on the bed. I pulled out my clothes but then decided to leave them here. I went through one of the dressers in his walk-in closet and moved things aside, leaving two pairs of jeans and two sweaters there. I know he's not going to mind. I went back to the bed and zipped the plastic down that was covering the suit.\n\nThe threads were perfect in my hand. Then I remembered and went looking for the tag. $3990. I dropped it like a hot potato and my hands went to my mouth. I was about to call his name angrily but then I took a couple of deep breaths. I have to find a balance between being happy with him spending money on me, and not getting upset when he spends a lot of money on me. This will take some getting used to.\n\nI went into my expensive murse and took out the small bag of underwear. He likes that I'm a man and that I like feminine things, like makeup. And nothing screams I'm a man comfortable with my feminine side than something as intimate as men's lingerie. I picked the blue one and put the rest back in the bag, then slid the bag underneath my clothes in the drawer I claimed for myself. I also hung the suit there. Until or unless we have somewhere four thousand dollar worth to be, this will stay right here. I took my underwear and sheer robe and stepped into the bathroom.\n\nI don't have a tub, just a small shower stall in my studio apartment so I was going to enjoy this. I used the Shea Butter body wash and made huge bubbles in the soaking tub, then sank inside and closed my eyes. Less than six months ago I was staring at this man from afar and now here I am in his house as his... boyfriend? Partner? Lover?\n\nAll of those things I guess. For how long, I do not know. A part of me is scared that this is still some kind of experiment for him. That one day he's going to wake up and realize that what he really wants is a woman with a vagina, not a boy who likes to express the femininity in him. Anxiety started creeping in but then I remembered his words on the card to me. You are loved. It's all I ever wanted, to truly be loved by someone. And if only for this moment in time, I believe that he does love me.\n\nThe barn doors opened and I quickly sat up. My eyes went to the other counter as he walked in, thankful that I threw a towel over my outfit that is sure to knock his socks off. Ironically he had my pajama pants in his hand and said, \"You forgot to bring these in here with you.\"\n\n\"Thanks,\" I said nonchalantly. \"Please place them on the towel.\"\n\nHe did, but then he took off his clothes and came into the shower room. I told him, \"You're not coming in here with me. This is my bath and mine alone.\"\n\n\"Someone's a bit selfish tonight,\" he said amusingly.\n\nHe went over to the other side and turned on the showers heads, all three. I watched him stand under the shower for a moment soaking his body before he grabbed a washcloth. He squeezed the sea salt and lime body wash on it and began to rub it all over. My cock stood at attention as I watched him wash himself, white soapy suds mixing in with his curly black chest hair that bundled at the center of him and trailed in wide V formation down to his actual V at the groin. I can tell that he trims his pubes down for hygienic purposes but never shaves it all off.\n\nHis cock is absolutely perfect, long and thick with a slight lean to the right. Same brown color throughout, but his balls are a bit darker. They hang like two golf balls encased in brown sacs, thick and full. His thighs and calves are big and muscular. His butt isn't round and sticks out like mine does, but still shapely. He has the head of a bull tattoo on his upper back right between the shoulder blades. It's a homage to his astrology sign, but that is his only tattoo. No one knows he has it unless he shows it to you.\n\nI have a couple of tats, the infinity tramp stamp right on my lower back, my father's name, Michael Allen Cooley in cursive on the inside of my left wrist, and a number of stars on my right lower leg right above my ankle, representing people who have wronged me. I'm up to six so far, praying Jo does not become number seven.\n\nHe knew I was watching him shower. I could tell by the movements he made, small strokes along his genital area, getting into all the corners, running his hands over and over again on his pecs, pinching his own nipples, rubbing his chest hair. He knows his body is godlike, and he likes nothing better than for me to admire him. When he was all done, he turned the shower off but instead of heading back to the glass door, he headed toward me, dripping. Manly. Beautiful.\n\nHe looked down at me, then stepped closer to where he cock was in my face. Since all that was visible was my head, the rest of my body hidden behind fluffy bubbles, I opened my mouth for him to do the work. He smirked, then held his flaccid cock straight and put the head in my mouth. I immediately sucked and he pushed in more, until he was about halfway in, then pulled back, then pushed in halfway again. I let him slowly face fuck me a few times growing on my tongue, then he pulled all the way out. He leaned down and kissed my mouth.\n\n\"Hurry up,\" he said softly but demandingly.\n\n\"Trust me, you're going to want me to take my time,\" I told him seductively. He smiled and kissed my lips again. He left the bathroom still dripping wet, his cock now standing straight up.\n\nAs soon as he closed the door I stood up and went to the shower to properly wash and rinse, then dried off. I did my makeup first, electric blue eyeshadow with a glittery silver overlay and black eyeliner. I rubbed baby oil on my body and prelubed myself. I put on the cobalt blue lace boy shorts and the sheer robe over it but left it open and I dramatically opened up the barn doors.\n\nJo was standing at the fireplace in his boxer briefs and two glasses of bourbon waiting for me, but one look at me and he immediately lost all sense of himself. His eyes bugged out of his head and he almost dropped one of the glasses.\n\n\"Fuck!\" he said breathlessly and had to catch the second glass in the crook of his elbow, spilling it on himself a little. \"Fuck!\" he said again, this time to himself.\n\nI stood in the same spot and watched him fumble, then gather himself. He put the glass he was holding onto the mantle to free up his hand and take the other from his arm, took a big gulp and set the second glass down. Then he slowly looked up at me.\n\nHe was speechless and his feet seemed to be stuck in quicksand. So I moved toward him as graceful as a swan, unsmiling, slowly. I wanted the full effect of me to fully affect him. As soon as I was within arms length he reached out with both hands, caressed my face and put his fingers in my wet hair. He pulled me close to his face and I thought he was going to kiss me but instead said softly, \"Was this the face that launched a thousand ships, and burnt the topless towers of Ilium?\"\n\nI really wanted to be serious but that was a bit much. \"Okay, that is definitely from a movie. I've heard that before.\"\n\nHe whispered on my lips, \"It's from Doctor Faustus, a play. An Elizabethian tragedy. But it's used in reference to Helen of Troy because of her beauty.\"\n\n\"Oh.\" I didn't know what else to say.\n\nHe pulled back to get a look at my face and said, \"You are so gorgeous. So unbelievably fucking sexy. What did I do to deserve you?\"\n\n\"Funny,\" I said back softly. \"I could say the same about you.\" I reached out and touched his waist.\n\nHe lifted up my chin and kissed me passionately. We kissed for a while, mostly tongue from his mouth to mine and back again, our salivas coating our lips. Finally he let my face go and slid both hands down, grazing against my pecs making me shudder. He touched the top part of the blue lace and trailed it with a finger, then used the back of his finger to rub the pouch that held my achingly hard cock making me moan.\n\nHe moved his finger back to the top of the lace and trailed it from one side to the next, then looked at me with a sly smile. \"Holy shit. I didn't even know they make these.\"\n\n\"They do. And I bought a couple for you to enjoy on me.\"\n\nHe nodded slowly, his hands now cupping the bottom of my ass cheeks that were hanging out of my panties. He asked, \"What do you want to see me in? What's sexy to you?\"\n\n\"Tight boxer briefs. Regular, size too small briefs. A jockstrap would be nice.\"\n\n\"Done,\" he said immediately. \"Buying them on Amazon first thing tomorrow.\" I giggled. \"But for tonight...\"\n\nJo slid the sheer robe off me slowly. He got on his knees and put his face in my crotch. He licked the pre-cum that was seeping right through the fabric. He licked the bottom half of the lace along my thigh, all the way around to my backside, crawling on his knees and holding onto my waist. He nibbled the bottom of my cheeks that were hanging out, licked my crack and kissed my tattoo. He continued to trail the lace with his tongue all the way to the other side of me and back in front of me. He pulled down the front of the lace just enough for my cock to spring out and it literally hit him in the face.\n\nI giggled but he was all business. He grabbed it, opened his mouth and put the tip on his tongue, then licked the slit. A pearl of pre-cum immediately formed again and licked that one as well. He played this game with my liquid a couple more times, then just put my entire cock in his mouth, his chin up against my balls that were still hidden in the lacy fabric. I moaned loudly and touched his head. He pulled back slowly, then pushed me back into his throat.\n\nHe held onto my butt cheeks and made me face fuck him until I got the hint of what he wanted. He was on his knees begging for me to make him mine. He was never going to bottom for me and we both knew it. That wasn't our roles. I'm a hungry and happy bottom and he is unequivocally a top, but this was the way we could reverse roles, I could dominate him, claim him, possess him, make him mine.\n\nI grabbed his head and slammed my pelvic bone into his face, hard, repeatedly. He allowed all of it. And when I knew I was close, I slipped my cock from his lips and began to stroke. He held out his long tongue and I placed my cock head on it, moaning out my orgasm and ejaculation, hitting the back of his throat and right on his tongue. With the last squeeze at the tip of my cock I coated his lips with it, made it nice and shiny with my jizz, then got on my knees in front of him and kissed him, this time my tongue leading the dance. He waited until I had had enough and was ready, and silently we agreed to switch back.\n\nHe turned me around and put me on all fours right on the area rug in front of the fireplace, the heat doing me no favors to calm my own temperature rising. Then he left me there and I knew not to move. He came back with the condom and swiftly put it on. I thought he was going to pull them off me but then I knew better. He simply stretched it a bit and pushed them aside and guided himself inside of me. When he bottomed out he leaned over and kissed the back of my neck and held me.\n\n\"I love you, Micah. Mi Angelo. My Angel. I love you.\"\n\nHe didn't need a response from me and I didn't give him one just yet. He leaned up, grabbed a fist full of hair and fucked me. Slowly at first, getting me used to his intentional strokes. Then a moderate pace, like he had nowhere else to be in the world but inside of me. He kept me in this position for a while, palms flat on the ground, arched back, rug burns sure to form on my knees. None of that mattered. Before he was mine to do what I willed and now I was his. He alternated from his hands in my hair to his hands on my waist to his hands on my shoulder. Eventually, his body needed a release.\n\nOnce again, I felt it, the surge of his power in his erratic movements. He slammed into me harder and I reacted in kind, pushing back with force. We moaned together, moved together and then we came together. When I knew I was about to cum I squeezed my insides not giving him much of a choice. He pulsed out cum in me in the condom the same time I released hands free on his light gray, light blue and ivory white French rug.\n\nEven though my body was warm I was trembling, that orgasm was intensely electric. I wanted to curl up in a ball, I couldn't move and he noticed. He lifted me up and carried me to the bed, and tucked me in with a kiss on my forehead. He went to the bathroom to remove the condom and by the time he came back I was already falling asleep. He slid in the bed beside me and held me from behind. My last words before I drifted off to sleep was to respond to his declaration.\n\n\"I love you too, Jo. My Joseph. My Jojo.\"\n\n~~~\n\nTrying something different and putting together a playlist for this story, mostly pop music. For this chapter here are the songs:\n\nSelena Gomez, Bad Liar\n\nColdplay, Magic\n\nJ Holiday, Suffocate,\n\nJessie James, Bang Bang\n\nThe Script, I'm Yours\n\nI would love any comments and feedback you have, and please don't forget to vote!"
    ],
    "authorname": "Kabba118",
    "tags": [
        "african american",
        "drama",
        "gay love",
        "gay sex",
        "muscle",
        "romance",
        "spanish",
        "twink"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/a-love-for-micah-ch-03"
}