{
    "title": "Jack's Wage Slavery Pt. 01",
    "pages": [
        "Author's Notes:\n\n'Jack's Wage Slavery Part 1 &amp; 2' is the fourth story in the saga of Jack Danner. Minimal effort is made in this tale to explain the backstory so it is highly recommended you read the first three stories in the following order:\n\n<ul> <li> Jack's New Job</li>\n\n<li> Jack's New Position</li>\n\n<li> Jack's Daily Grind</li> </ul>\n\nAll characters engaging in sexual relationships or activities are 18 years old or older.\n\n********\n\nJack's Wage Slavery - Part 1\n\nChapter 1\n\nJack struggled to move his arms but they remained lifeless dead weights pinned to the platform he was trapped on. He couldn't see anything in the inky darkness of the chamber he was being held captive in. Oppressive heat bathed his body and sweat covered his limbs. He struggled to draw a breath but something was blocking his nose and mouth.\n\nA deep rumbling droned on and on in his ear.\n\nHe tried to call out but he couldn't get a breath and his voice was drowned out by the rumbling.\n\nHe suddenly realized he was going to die in this pit of darkness and heat.\n\nAlone.\n\nJack woke up gasping for air as his heart pounded with his dread. His gasp was rewarded with a mouthful of fur and hair.\n\nTurning his face to clear his mouth, he blinked the sleep from his eyes and realized he was pinned to his mattress under the hot bodies of two females. Diana, a tall ebony haired human, was lying on her right side covering his right arm, the round dome of her pregnant stomach resting on the mattress. Her back was tucked up tight against his side and her long hair was flowing back over his face.\n\nSennLann, the ebony furred Phem Kalos who resembled a tailless cat, was squeezed up against his left side, her smaller but still bulging tummy resting on his left arm. Her furry left arm was flung up over his face and she was purring loudly in his ear as she slept.\n\nJack realized his arms really were dead weight from the two ladies sleeping on them.\n\n\"Diana! SennLann! Wake up!\" he called to them and felt them begin to stir. The purring immediately stopped and he felt the feline's nose pressing against his cheek.\n\n\"You're lying on my arms!\" he complained to get them to move quicker.\n\n\"Ugh, you're all sweaty!\" Diana growled as she slid herself away from him. SennLan stretched and accidentally scratched Jack's chest with one of her sharp claws.\n\n\"Ouch! Hey! Be careful!\" he yelped.\n\n\"Don't be a crybaby! I'm moving!\" Diana replied thinking he was talking to her.\n\n\"No, SennLann just scratched me!\"\n\n\"Are you the baby who cries Jack?\" the feline female grinned sleepily as she rolled away from him, flicking her large tufted ears.\n\nJack gritted his teeth as his arms began to 'wake up' from their trapped state. Millions of pins and needles stabbed him up and down his arms.\n\nHe frowned at Diana who was rubbing her stomach fondly. \"I wasn't sweaty when I went to bed alone last night. I thought you were more comfortable in the guest room.\"\n\nShe blinked her beautiful green eyes at him and pouted. \"I woke up and needed to feel you close by.\"\n\nHe tore his eyes away from hers with difficulty and looked into the gold eyes looking back at him from his other side. \"I know for a fact that you were sleeping in your own room when I went to bed last night. How did you end up here?\"\n\n\"I entered the final phase of my pregnancy last night. I am drawing very close to my delivery date so I must be close to my mate. As he's still on Phem Kalos playing those silly war games you introduced him to I naturally came to your bed. Crybaby,\" she grinned at his frown.\n\nHe really was a sweaty mess and the ladies weren't much better. He'd have to wash the sheets as well.\n\nJack was finally able to lift his arms from the bed though his control hadn't completely returned. He grimaced as he flexed his hands feeling the numbness slowly fading. He looked at the clock and realized he was up an hour early. The cold, sick dread from his nightmare was still lingering so he didn't feel like trying to get more sleep. He decided to go for a run. Hopefully he'd be able to clear his mind of the remnants of the nightmare with exercise.\n\nHe pushed himself awkwardly off the bed and padded over to the washroom. He drained his bladder then quickly stepped into the shower to rinse his body. There was no real point in fully washing himself if he was going to run but he didn't want to start out looking and feeling like a drowned rat. He stepped out and quickly dried himself in front of the mirror.\n\nHe'd been able to get back to his routine of running in the morning. He'd managed to tighten up his muscles and lose the jiggly stuff that had begun to accumulate. He was back to his normal lean body... well, almost. He looked up.\n\nHorns.\n\nHe stared at himself in the mirror and wondered if he would ever get used to seeing the large black horns rising from his forehead and curving back over his head. At least they'd stopped growing. Three inches wide at the base and ten inches from base to their deadly sharp points. He'd learned just how dense they were when he'd actually deflected bullets from them, leaving behind brilliant streaks of silver from the bullets. With the extra mass on his head the muscles on his neck, shoulder, chest, and back had grown to compensate and his skeletal system had altered to support the extra mass as well. He wasn't hugely muscled but he no longer had the slim runner's body he once did. He thought he looked a little top heavy but he was a little biased towards his original shape.\n\nHe'd been concerned the horns and the extra muscle mass would affect his running but so far it hadn't.\n\nHe walked back into the bedroom and heard two appreciative growls. He looked to the bed and saw green and gold eyes glowing back at him. Both licked their lips as they looked at his naked body.\n\n\"No! I'm going for a run. I need... to clear the cobwebs from my mind,\" he said sternly.\n\n\"Oh poo! You never want to have morning sex!\" Diana pouted.\n\nJack looked at her incredulously. \"Excuse me? What about yesterday when you had me take you on the kitchen table? And the day before that in the shower? What was the day before that...oh yes. We never made it from the bedroom until I was late for work!\"\n\nDiana was smiling now, recalling the delicious sex from the previous days.\n\nSennLann was about to say something when Jack interrupted her. \"For you it was when I got home from work last night. You're not a morning person.\"\n\nThe princess smiled and nodded.\n\nHe pulled on his running shorts, socks, and a tight running shirt. As he pulled it over his head he heard the telltale ripping sound of the fabric tearing as it snagged on the point of one of his horns. \"Dammit! There goes another shirt!\" he cursed. He pulled it off and sure enough there was a large tear down the back. He dug in his drawer and the only thing he could find was an oversized, stretched out t-shirt Diana had taken to wearing which he was NOT going to wear. He decided he'd just go without this morning. He'd need to do some shopping again.\n\nHe strapped his music player to his arm and put his ear buds in.\n\nJack looked back at the bed and the women were still drinking him in with their eyes. He grinned. \"Have you ladies seen the Gun Show?\" he quipped and flexed his muscles at them. Delighted giggles erupted and he headed to the kitchen with a grin on his face. He drank one of his energy shakes while he looked into the fridge to see what he'd make for breakfast when he got back. Then made his way to the front door, sat on the bench and put on his running shoes. When he stood up he was face to face with Diana.\n\n\"When will you be back?\" she said running her finger over his muscles. She bit her lower lip as she gazed at his broad chest.\n\nJack took her hands in his and lifted her fingers to his lips. He sensually kissed the tips causing her to gasp. \"I'll be back in about an hour.\" He slipped out the door as he heard her moan behind him.\n\nHe took the lift to the ground floor and started his music. He waved to the building's security staff as he crossed the lobby but he didn't see them staring at his body or hear the burst of giggles that followed him outside.\n\nJack loved his neighborhood. The building was within walking distance of work and was surrounded by seemingly endless walking and running paths. He could set off in any direction and run for hours without the scenery becoming dull or repetitive. Today he thought he'd go... right.\n\nBefore he did, he began his stretches as he was feeling a little residual tightness from his unusual start to the day. He rarely had nightmares and this one really disturbed him. He pulled his mind away from that and concentrated on easing his muscles into a better state. He leaned against a pillar supporting the building's front awning and bent slowly and deeply. He repeated this until he felt his muscles begin to warm and loosen. It was going to be a good run today.\n\nHis sandy blond hair fell forward over his face as he bent over. He pushed it aside with an annoyed swipe. He'd forgotten to tie it back with a rubber band when he left the bedroom. He really wanted to cut his hair short like he used to wear it on Earth but he'd have a mutiny on his hands at the Trade Commission and Embassy where he worked. The staff in both offices had let him know in no uncertain terms that as the Earth's Trade Commissioner for Altaria and Altaria's Ambassador he had to represent them by looking his best. ALL of his staff insisted this meant no haircuts though they understood his bangs got into his eyes so trimming there was allowed. He still had no idea where the clippings went... and he really didn't want to know.\n\nHe alternated mornings in the two offices and when he arrived one of his staff, the lucky winner apparently, got to braid his hair and tie it with a ribbon. He sighed with frustration. It now reached the middle of his back. He didn't feel like going back upstairs to get the band. He'd never make it past Diana.\n\nHe stood up and threw his hair back and glanced back at the building. He saw the three Altarian ladies from the security desk pressed up against the window watching him with rapt attention. He nodded to them and watched them scurry back to their station.\n\nAltarians were... beautiful! Jack was always dazzled by their grace and gentle natures. They resembled the Satyrs of ancient Greek mythology. Petite with cloven hooved feet and hands with two strong fingers and opposable thumbs on both sides. Their bodies were covered with a felt like fur which ranged in color from blond to chocolate brown. The traditional garb was gossamer flowing gowns. Their heads were humanoid but their eyes were twice as large as a human's, had diagonal pupils, and the lids had long lashes. Their ears were long, pointed, expressively mobile, and typically projected horizontally. They had slim noses and wide, black lipped mouths. As a race of herbivores they had beautiful white teeth with a definite lack of fangs.\n\nMales were rare with the birth ratio being ten females to every male. Generations ago the ratio had moved from eight to one and the subsequent upheaval in their society led to the males taking less of an active role in... well, just about everything. They were now creatures of leisure and Jack had little time for the 'self-absorbed loafs' as he considered them.\n\nWhile they may have appeared shy and docile when it came to sex Altarian females were anything but passive. They had no bias towards Altarian males. Jack had discovered on his first meeting that they were very sexually liberated and energetic partners. He smiled thinking of Leffera and Karrel and his 'interview'.\n\nSince his horns had grown in he was embarrassed to realize he'd become something of a celebrity for the female population who instinctively found them very attractive. Altarian males no longer had horns, the gene having become dormant.\n\nHe started jogging down the path to the right and took it slow at first. The little aches and pains surfaced and faded after a short time when his muscles smoothed out so he increased his pace.\n\nThis early in the morning the paths were mostly empty and it felt like he had the world to himself. After the nightmare he had this morning that thought wasn't as exhilarating as it should have been. He was actually kind of relieved when he saw three Altarian females crossing his path up ahead in a small cart.\n\nOne of the women noticed him running and frantically gestured to the other two. The cart wobbled as they altered their course to find a way back onto the path he was following.\n\nJack continued running. One of his favorite music tracks had begun playing and he felt his stride opening up to his ground eating pace. His heart beat strongly and his lungs worked like a bellows to keep his muscles fed. He was really getting into the zone.\n\nSuddenly the cart was right next to him and he jumped to the side to give himself a little space.\n\nHe looked at the female sitting next to the driver and recognized her from the morning show Diana watched every day. She was the host. What was she doing out on the path at this hour? He glanced back and saw the passenger in the back of the cart, the one who had spotted him, was now pointing a camera at him. Actually she was panning the camera down his body which he found a little unnerving.\n\nThe host was trying to get his attention so he turned off his music.\n\n\"-m Kihani from Morning Light! Could I take a moment of your time to ask you a few questions for my show?\" she was saying.\n\n\"Sorry... did you say... your name was... Kihani?\" he gasped as he slowed his running back down to his slower pace. He wasn't giving up his morning run.\n\nThe woman smiled widely and nodded. \"Yes, Kihani. My viewers are your biggest fans and this morning you look especially...\" the female seemed to be at a loss for words then she glanced at the camera and he realized she was just playing for her viewer's sake. \"...delicious!\" she finished with a grin. She turned back to him. \"Is this going to be your new running outfit? Small pants, shoes, and hair flowing in the wind?\" She bit her lower lip as her eyes ate him up.\n\n\"No. I tore my... shirt on my... horns.\"\n\nThe woman with the camera panned it up and the driver accelerated a little to let her get a better shot of the front of his face to see the horns in all their glory.\n\n\"Yes, your beautiful horns! This is my first time seeing them in person and they are much more... impressive than I expected!\" Kihani sighed, practically drooling.\n\nJack was beginning to feel really uncomfortable about the direction the 'interview' was taking. \"Thanks... I should get... back to my run.... Busy day ahead,\" he said.\n\nKihani saw she was losing her star so she began talking before he could turn on his music. \"Karrel introduced us to Alexander, your beautiful first child. Queen Elissa has Maximilian your second son and Gendolee-\"\n\n\"Gwendolyn,\" he corrected.\n\n\"Yes, Gwen-do-lyn your daughter, but word is she's not your first female child.\"\n\n\"Word is?\" he repeated with raised eyebrows.\n\n\"Yes, we received information that you had a daughter with another female. A close friend and secret lover!\" Kihani smiled at the camera as if the viewers were in on the secret.\n\nJack suddenly realized the true nature of Morning Light. It was a gossip show! He'd thought it was a local news show! How disappointing.\n\n\"You are slipping... outside the realm... of public knowledge... reporting on... speculation and... rumor... personal information.\" Jack gave her a disapproving frown.\n\n\"Jack, you're a celebrity-\" Kihani began.\n\n\"No, I'm a... public servant... Not the same... Right now I'm... just Jack Danner... private citizen.\" Jack was struggling to talk while jogging and he really wanted to get back to his run. As the conversation was slipping away from anything he was willing to discuss it was time to end it. He gave a wave and accelerated off down a path to the right before the driver could react and follow.\n\n\"What about the son you had with Judge Aaros!\" Kihani yelled before they were out of range.\n\nJack scowled back at the morning show host but kept running. Judge Aaros was a very private woman. She'd been born with the monochromatism genetic disorder that for him resulted in his horns. For her its 'gift' was fur of purest white. Shunned by Altarian males for her rare coloration, she was a vision to behold, in Jack's opinion. Equally beautiful was her gentle and caring soul. The child they been blessed with didn't need to be exposed to the likes of Kihani.\n\nAs their son Douglas was born to such unique parents with the altered genes his coloration was unique as well. His fur was darkest black with bold zigzagging streaks of brilliant white. One of a kind and absolutely gorgeous in his parent's opinion. During his last visit Aaros showed him with delight that Douglas was growing horns as well. Just tiny buds for now but that's how they grew.\n\nKihani was right about Gwendolyn not being his first daughter. Leffera, his first Altarian lover, had given birth to his first daughter, Lillian, who was named after his mother. Leffera shed tears of joy when he shared his mother's story with her. He didn't often talk about his parents but he wanted Leffera to know how special his mother had been and the sacrifices she'd made to give him a safe and happy home when he was just a young boy. He was honored to be able to pass along her name to his daughter and he wanted to ensure the child would understand the significance. He'd also given Queen Elissa the story of Gwendolyn, his maternal grandmother. He had only a few direct memories of her but heard tales from his mother of the woman's strength and character. Elissa was delighted.\n\nJack turned his music on again and glanced at the time. He still had half an hour thanks to getting up so early. He picked up the pace and swung back onto a main path which would take him in a sweeping loop back to his apartment building. He spotted Kihani and her crew some distance away, frantically scanning the paths looking for him. He groaned when Kihani suddenly pointed in his direction and slapped at her driver to get them back on his tail. He did his best to ignore her but recalling how reckless the driver was he kept their position in the corner of his eye.\n\nThey were closing in. With a grin Jack saw his escape route. There was a series of small bridges crossing a narrow canal. If he could get to the bridges before they got to him he could put the water between them. He picked up his pace but seeing their progress he realized they really had no chance.\n\nThat's when he caught sight of the mother out for a morning walk with a baby carrier mounted on her stroller.\n\nKihani was still slapping her driver to get her to go faster so they didn't see the woman pushing her child into their path. The woman pushing the stroller wasn't expecting someone to be driving so recklessly fast.\n\nScreaming and waving to get the driver's attention back on where they were going Jack changed his course and ran as hard as he could towards them but he knew he wasn't going to get there in time.\n\nThe camera operator was filming Jack and wondered what he was waving about. She looked away from the camera for a second and screamed as she saw the woman in their path. She leapt over the seat between the fighting women to wrench the steering wheel to the side. The cart was moving too fast to take such a vector change and it began to tip over. The cart's roof struck the mother across her shoulders slamming her forward against the stroller and she went down hard on the path and tumbled off into the grass. The stroller shot forward and careened down the path.\n\nThere was a horrible crash noise as the cart flipped onto its side and went into an uncontrolled slide. Its bumper caught the stroller and sent it airborne over the rail into the canal just before the cart slammed to a halt against the low retaining wall.",
        "Jack vaulted over the rail to follow the stroller into the water. When he surfaced he had a grip on the side of the baby carrier but the weight was dragging him down under the surface. The water was deeper than he'd expected. Frantically he slapped the carrier's release lever and the metal wheeled cart dropped away and sunk. The carrier was surprisingly buoyant and bobbed on the surface. Jack looked over the lip of the carrier fearing the worst but its cover had kept most of the water out. The baby began to wail and sputter from being cold and wet.\n\nHe sighed with relief and swam to the edge of the canal. His next problem was there was no way to get out of the water.\n\nSuddenly he heard the whoosh of a flying craft coming in fast for a landing. Soon hands reached down and took the baby carrier. His burst of adrenaline had worn off and he was struggling to tread water, barely keeping his head above the surface. He felt about as buoyant as the metal stroller had been.\n\nSomething clamped onto his horns and he felt himself being lifted clear of the water. The sensation was very uncomfortable but at least he wasn't drowning. When his feet touched down on the pathway the pressure released and he wobbled. Gee and Bal caught his arms and were looking up at him in concern. A retractable crane was folding itself back into the Altarian Security Ministry vehicle the two had flown here.\n\nHe shivered as the water had been cold. A large medical support craft landed next to Gee and Bal's ride. Several police vehicles landed and set up a perimeter to keep the curious away.\n\nJack ran his hands back through his hair and squeezed as much water out of it as he could as he set course for the medical team looking after the mother in the grass. She seemed to be conscious but badly dazed. She was calling out for her child. Jack knelt down beside her and took her hand. Frantic eyes locked onto his and he smiled.\n\n\"Your child is fine. Just a little cranky at getting such a rude awakening,\" he said. \"You chose an excellent carrier. It protected...\" he looked expectantly at the woman.\n\n\"Meela,\" the woman said.\n\n\"It protected Meela very well! Meela is a lovely name!\" he said with a wide smile and the woman was looking at him with a star struck grin. \"I'm so sorry you were injured by those reckless women. They were chasing me, driving irresponsibly and weren't paying attention to anyone else on the path.\"\n\n\"Why are you wet?\" the mother asked through the haze of the painkillers she'd been injected with as Jack distracted her. Her arm was broken and Jack knew what came next.\n\n\"I had to go for a little swim when the carrier was knocked into the canal. Not to worry though Meela is fine.\" He grimaced as the medic reset the bone but the mother was beyond feeling pain by this point. All she did was stare at Jack with a silly grin.\n\n\"Take care...\" he looked at her again.\n\n\"Miro.\"\n\n\"Take care of yourself Miro.\" Jack said as he released the woman's hand and stood. Miro's eyes went wide as he towered over her. She bit her lip. The medic smiled at him gratefully.\n\nJack turned to move towards the cart which had been flipped back upright. The three occupants were now sitting on the ground being watched by the police. On the left sat the driver with a bad gash on her forehead which had been taped closed. On the right was the camera woman with the blasted device gently cradled against her chest. Kihani sat in the middle favoring her left arm. He stood in front of them unaware of his trembling. Gee and Bal came over with a blanket from the ambulance and pulled it over his shoulders.\n\nKihani seeing she had his undivided attention smiled up at him. \"Could you answer my questions now?\"\n\nHe surged forward knocking loose his blanket. Gee and Bal grabbed his arms holding him back but he slowly pulled forward until his face was right in front of the frightened host.\n\n\"Your completely irresponsible actions almost cost the life of a mother and her CHILD! A BABY! Now you want me to REWARD you?!? That baby would have DROWNED! DO YOU UNDERSTAND THAT IT WAS YOUR FAULT?\" he growled menacingly.\n\nThe two security agents were struggling to keep his arms back as he wanted to throttle her until that vacant look was replaced by something resembling an acknowledgment of guilt. Two police officers joined Gee and Bal in pulling Jack away from the three ladies who were all gasping and wide eyed with fright. Once he was moving towards the Security Agency's vehicle the police let go but the two agents continued to pull.\n\n\"Oh my god! Did you see how fierce he was? That was SO SEXY! I hope you got that on camera! What a treat for our viewers!\" Kihani gasped to her camera woman who was nodding frantically as she stared at the man's muscular back.\n\nJack didn't recall spinning in place or stalking back towards Kihani. He didn't hear their screams as they watched him approach. Gee took him down with a stunner from her position on the ground where he'd flung her with his spin. He was unconscious before his face hit the grass at the hooves of the three screaming females.\n\nChapter 2\n\nEverything hurt. Jack cracked open his eyes and even his eyelids complained. He saw he was in his bedroom on his bed. Then he saw the green and gold eyes peering down at him.\n\n\"He's awake.\"\n\n\"What-\" he croaked and immediately regretted talking.\n\nStrong hands slipped behind him and pulled his head and shoulders up. Other hands tucked pillows behind him. He was set back against the pillows and a straw was pressed between his lips. He sucked up the cool water and his throat felt better.\n\n\"What happened?\" he whispered.\n\n\"Show him.\" Queen Elissa said as she entered his bedroom with Maximilian and Gwendolyn in her arms. He smiled seeing the happy grin on his son's face. Max was such a happy child. His daughter was sleeping peacefully.\n\nDiana lifted a tablet and played the queued video. Jack watched himself confronting the women, being dragged away then flinging the two agents off his arms like they weighed nothing. He was striding back towards the camera, rage on his face, teeth bared, eyes glaring, nostrils flaring, looking like he was about to eat someone. Then the flash of the stun gun and his boneless collapse amidst screams.\n\n\"Stun gun,\" he said.\n\n\"Agent Gee had to set it to maximum to take you down. That's why you hurt,\" the Queen explained.\n\n\"Why are you here?\" he said looking at her.\n\n\"That footage was from their live show. All of Kihani's broadcasts are live. More realism and her fans love it. My office staff watch her show and when they saw her try to interview you I was called. I got to see the accident and you going into the canal. Your genuine concern for the injured woman and her child was wonderful to see but your reaction to that airhead Kihani needs to be addressed. Nobody is blaming you but you frightened a lot of people. No one has seen you direct that much rage towards an Altarian and it's shaken their faith in you.\"\n\n\"WHAT?!? THAT'S INSANE! The woman showed NO concern that she put Miro and Meela's life at risk. No remorse at all! SHE'S THE ONE who the Altarian's should be fearing, not ME!\"\n\n\"Agreed and she will be receiving a psych evaluation in her court case. But you Jack, you looked like you were going to eat her. Your fangs were showing and suddenly the populace of Altaria saw... what's that Earth phrase? Oh yes, we saw that we may have a wolf in our midst. Instinct is a very strong force in Altarians. We listen to it.\"\n\n\"I wouldn't have killed her!\" Jack sputtered.\n\n\"Maybe not but your body language certainly suggested you might have.\" Elissa insisted.\n\nJack frowned but couldn't deny that he had looked pretty enraged in the video.\n\n\"You were scary sexy!\" Diana said with a confused smile.\n\nHe looked at the woman and recalled her record of dating abusive men and suddenly his righteous indignation dried up and blew away. He looked at Elissa in dismay.\n\n\"There's my Jack,\" she said with a smile.\n\n\"Maybe I could make a statement to the press, apologizing for my behavior?\" he suggested and she nodded with a smile. She glanced at the two females sitting on the edge of his bed.\n\nDiana and SennLann got up from the bed and left the room. Jack watched them go and looked at the Queen with a questioning look. The doorway was suddenly full of people as reporters began to file in with their cameras. He recognized some of the news stations and some of the reporters from the interview he'd given in front of Queen Elissa's home after the birth of Max. He glanced at her and she moved to the side of the bed and placed the two babies in his arms. He grinned widely as he sniffed their sweet scents and nuzzled them. Elissa stood next to the bed and nodded to the press. The cameras began rolling and suddenly Jack was very conscious he was only covered by his blanket from the waist down, he was shirtless, and his long hair was unbraided. The upside was he had his babies in his arms. He gave them another kiss then looked up at the gathered members of the press at the end of his bed. It felt kind of surreal but he'd just have to deal with it.\n\n\"If I may, I'd like to start with a brief statement. An apology actually. I was pretty shaken up by the near drowning of baby Meela. It was close. A second or so longer and the story might have been far more tragic. When I heard the unconcerned comments Kihani made afterwards I'm afraid in my distressed state I behaved very poorly. I'm terribly sorry for my actions and I'm thankful for Security Agents Gee and Bal for their intervention. I still hold Kihani directly responsible for her reckless behavior and the injuries sustained by Miro and Meela. I trust she will be held accountable and justice will be served.\"\n\nOne of the reporters gestured to ask a question. Queen Elissa nodded to her.\n\n\"You were baring your fangs at Kihani as you approached her. Was it your intent to bite her?\" the reporter asked.\n\n\"I've never bitten anyone... in anger,\" he unconsciously glanced at Elissa then blushed furiously. The Queen was a little flustered and looked out the window. The reporters all had wide grins on their faces. A second one had a question.\n\n\"The footage shows you leapt into the canal without pausing. Were you aware of the depth of the water? Are you a good swimmer?\"\n\n\"Actually, I didn't even think about how deep the water was. Thinking about it now I could have really hurt myself if the water had been shallow,\" he said with a blink. \"I used to be a really good swimmer but now with the extra headgear I don't float as well so I tired out really quickly. If Bal and Gee hadn't arrived when they did we might not have had this interview.\"\n\nQueen Elissa allowed a few more questions but when a reporter boldly slipped in Kihani's question about the child he and the judge had she scowled and indicated the interview was over.\n\n\"Actually, I'd like to say something about that. Sorry, I'm not going to directly answer the question because it's rude. I'll be honest. I thought the obsession with 'celebrities' was a human failing. I was really disappointed to find Altarians were afflicted with this issue too. I don't understand the compulsion to know intimate personal information of people who are basically strangers. Knowing doesn't make you friends with that person. That's an illusion and an unhealthy one. There are people I admire but I act on that admiration by respecting their privacy.\"\n\nJack turned his face back to Gwendolyn who cooed as she awoke and he nuzzled her once more. He grinned in delight as a smile appeared on her little face.\n\nQueen Elissa and Diana guided the reporters out of his room then he was alone with his children. He suddenly realized why Elissa had brought them along. She was showing the Altarian people that she trusted him, the big bad wolf, with her babies. There could be no greater display of trust and faith than that! When she returned he gave her a look of awe and she knew he'd figured it out.\n\n\"That's why I'm Queen,\" she said quietly with a smile.\n\n\"May I kiss the Queen?\"\n\n\"May you? I think you'd better!\" she grinned as she sat on the edge of the bed and leaned in to take her reward.\n\nWhen she pulled back they were both panting just a little.\n\n\"Wow! The Queen is very sexy!\" Jack rumbled.\n\nMax took that moment to sneeze and the intimacy was lost as they both chuckled.\n\n\"What time is it?\" Jack asked suddenly. The clock beside the bed indicated it was almost noon! He was late for work!\n\n\"That's the second reason I'm here. It appears you haven't been taking your vacation days. Any of them. Both of your offices got in touch with my office and they brought it to my attention. As of today you are on vacation!\"\n\n\"But- but I don't need a vacation! I love my job!\" Jack exclaimed.\n\n\"We know you love your job and you will love it even more after you've taken your legally mandated vacation time,\" Elissa said patting his knee.\n\nJack sagged back against the pillows and cuddled the babies a little more. He snorted out a breath and nodded. \"Well... I can handle a week. Shouldn't be too bad.\"\n\n\"Four.\"\n\nJack gaped at Elissa. \"Four!?!\" he barked.\n\nMaximilian and Gwendolyn weren't impressed with their Dad's outburst and began to fuss. Elissa reached in and scooped up her children and carried them out towards the living room. She paused at the doorway and looked back.\n\n\"Four weeks. You are not to set foot in either of your offices for four weeks. You may see your coworkers socially, I know you enjoy your movie nights, but no discussing business. They will all report to me if you are violating this rule and that will just extend your vacation time. Is that understood?\"\n\n\"I know it may sound strange but I feel like I'm being punished.\" Jack complained.\n\n\"You're not. This actually helps defuse the public's unease as we are spinning today's little emotional outburst as a symptom of your fatigue. Your work record is public knowledge. The people will see that you haven't taken a break in a long time so they will accept you need some downtime. Well, they'd need it at least so they'd expect you to as well. Try to enjoy your time off!\" With that said and a smile on her face she left.\n\nOnce again, Jack was amazed at how well Queen Elissa took care of her people. She knew he was no danger to the Altarians but she also knew how to ease the instinctive fears of her people. The Altarians were a civilized and reasonable race of beings. Give them a reasonable answer to explain his reaction and they would gratefully accept it. He'd just have to be on his best behavior for a while.\n\nFour weeks! The longest he'd been away from work was eight weeks but that was during a bad time between jobs back on Earth. His upbringing drove his need for work. The tough times his parents had gone through really honed his work ethic. His father in particular taught him the value of a solid days work. It didn't really matter what it was as long as you did your best and made a contribution to the improvement of the lives around you. His mother had the same ethic but women had a particularly difficult time finding work on Earth during that time. These were bitter sweet memories for Jack so he gave his head a shake and threw back the sheet to get out of bed.\n\nThat's when he saw he was naked. All those reporters had been in his bedroom and the only thing between them and his nakedness was a single, thin sheet? He scowled at the bedroom door but smartly the ladies were leaving him alone.\n\nHe stepped into the bathroom and took a quick shower as he still felt a little funky from his run. Someone had given him a sponge bath but he needed to be clean. The residual ache from the stun gun gave way to the heat of his shower.\n\nThat taken care of, he dressed casually and left the bedroom.\n\nQueen Elissa had left with his babies but Diana and SennLann were relaxing on the couch. Jack could hear the Phem Kalos female purring from where he stood as Diana massaged the other's feet.\n\nDiana's face was a little flushed as she rubbed her thumbs against the other's foot pads and gently stroked her fingers over the bridges.\n\n\"Jaaaaaack, Diana's making my feet feel soooooo gooood,\" the feline purred.\n\nHe knew Diana's xenophilia was kicking in as she moved her hands over the Phem Kalos' feet. He'd left her in a sexually charged state when he left the apartment this morning so he supposed he was at least partially responsible for this.\n\nThere was a high pitched ringing from down the hall and SennLann's mobile ears twitched and swung in that direction. \"FennLann!\" she squeaked and pulled her feet back from Diana's hands. She quickly leaned forward and kissed the woman on the lips then shot over the couch to sprint down the hall to get her lover's call.\n\nDiana looked after the fleeing female then looked up at Jack with wide desperate eyes.\n\n\"Hello woman,\" he whispered breathily as he knelt over her on the couch and brought his mouth to hers. Her mouth was demanding and he went with it, giving her as much passion as she was demanding.\n\nWhen he pulled back she looked into his eyes and he saw something new in her gaze. A need. He looked at her questioningly.\n\n\"The fierceness... from earlier... take me. Hard,\" she whispered as she begged him with her eyes.\n\nAh, the rage. She'd had a flash back to one of her previous boyfriends and her confusion of passion vs brutality was in full swing. He couldn't be cruel to her but he could definitely give her pleasure hard and fast. He could give her what she needed without giving her what she'd had.\n\nJack sat up quickly and pulled her to her knees. He spun her around and took a grip on the luxurious hair on the back of her head and pushed her down onto the arm of the couch. This left her ass sticking up in the air.\n\nWith his other hand he yanked down her yoga pants and panties. She squealed at his rough handling and he gave her ass a quick couple of slaps, one for each cheek. She gasped at the stinging and her head went back. He pushed it back down and rubbed her wet pussy lips with his other hand. He felt her fingers rubbing her clit in circles. She was dripping wet and moaning loudly as she pushed back against his fingers. He licked them clean then shoved them deeply into her pussy. Up came her head again as she wailed out her pleasure. She needed no further foreplay so he released her hair, yanked down his shorts and underwear and wiped her juices over his cock.\n\nDiana looked back at him with a hot look then howled when he drove his cock deep into her pussy in one hard thrust. He gripped her hair once more and pulled her head back as he slammed himself deep again and again. The wet slap of his pelvis against her ass showed how wet she'd become. He slid a hand up under her shirt and squeezed her breast, tugging her nipple roughly through her bra.\n\n\"FUUUUCK! OH JACK! FUCK ME!\" Diana cried out.\n\nHe ducked his head down next to hers and growled menacingly in her ear as he rubbed his horns against the side of her head. He felt her immediate response as her pussy clamped down on his cock. It worked for the Altarians and apparently it worked for Diana as well.\n\n\"AAAAHHHHHH!!!\" she screamed as her orgasm shook through her catching Jack off guard. He didn't expect her to reach release just yet and he was a ways off. He ground against her and her body tremored and shook through the aftershocks. He felt her trying to pull away so he slipped himself out of her and she slumped to the cushions of the couch.\n\nHe kissed her cheek and she smiled with her eyes closed.\n\nJack walked into his bedroom and cleaned himself up in his washroom. When he returned to the living room SennLann was sitting on a chair watching Diana. She'd pulled a blanket up over the woman. When Jack caught her bleak expression he gestured for her to follow him out onto the patio. He sat on a chair and SennLann took the other one across from him.",
        "\"What's wrong? What happened? Is FennLann ok?\" Jack blurted.\n\n\"FennLann is dead to me,\" she murmured.\n\nJack's body jolted. \"FennLann is DEAD!?!\"\n\n\"No, I said he was dead to me. It is not the same thing. Well... not exactly the same,\" she said with a frown.\n\n\"What happened?\"\n\n\"FennLann's father and his councillors were killed when their transport was struck by lightning as they flew through the mountains. The bodies are recovered. The King is dead.\"\n\n\"Long live the Queen?\" he said carefully.\n\n\"She will be buried with her husband. If she is lucky she has already taken poison.\"\n\nJack shuddered at the implication. \"Does this mean FennLann is going to be King? Will he be able to change those ancient laws so you can be together?\"\n\nSennLann looked at him with sadness in her eyes. \"No. He will be King but he called to tell me he will no longer be coming to Altaria. He is to be wed to the daughter of one of his new councillors within the day. He said our future is... gone. He has shunned me.\"\n\n\"Oh SennLann, I am so sorry!\"\n\n\"He did have a message for you. If my child is born male you are to kill it. There can be no illegitimate children of the King.\"\n\n\"WHAT?!?! I WILL DO NO SUCH THING!\"\n\n\"If you do not then Phem Kalos and Altaria will go to war until either the King or the child is dead,\" she said sadly.\n\n\"THAT'S INSANE! FennLann would kill his own son?\" Jack exclaimed.\n\n\"As King, he must and... would. Huhnnn!\" SennLann convulsed.\n\n\"What? What's happening?\"\n\n\"The baby is arriving. Too soon,\" she grunted.\n\nJack leapt to his feet and opened the patio door. \"DIANA! Call for an ambulance NOW!\"\n\nThe woman jolted awake and looked at him in panic. \"Bring me the comm!\" he called out then turned back to SennLann. She was slumped back in the chair with her hands on her belly.\n\nDiana stumbled out onto the patio with the comm in her hand. He snatched it away and called for an ambulance and gave directions. \"Diana, make sure the front door isn't locked. Let the paramedics in when they get here.\" She glanced at the Phem Kalos female as fluids gushed from her. \"Diana! Go!\" She broke free from her panic and headed back inside.\n\nJack knelt between the spread legs of SennLann. \"What do I do?\"\n\n\"I don't know. I've never had a baby before!\" she growled.\n\n\"I guess they never gave you any sex education classes in school.\" Jack growled.\n\n\"Phem Kalos females don't go to school.\"\n\n\"Right.\"\n\n\"HHUUUHHNNNN!\" she moaned loudly and not knowing what else to do he placed his hands between her legs. Seconds later he was holding a large, wet, gooey mass.\n\nSennLann was panting but looked relieved to have expelled the mass. Jack noticed it was moving gently. He held it closer to her face when she gestured for him to do so. She licked it then bit the edge of the sac and it tore open gushing its contents over her chest.\n\nJack caught the two small wet bodies before they slipped off of SennLann's chest with the fluids. He braced each with a hand on SennLann's chest.\n\nShe looked down in shock. \"Two?!?\"\n\nJack smiled. \"Congratulations, you have twin... girls. That's a relief!\"\n\nSennLann began licking the faces of the babies and they wiggled weakly in protest.\n\nA team of medics burst out onto the patio but stopped before they stepped in the slick fluids on the floor.\n\n\"Hold on tight to them. I'm going to lift you.\" Jack said to SennLann and she wrapped her arms around the babies. He slipped his arms under her and lifted her onto the medic's gurney.\n\n\"I'll meet you at the hospital SennLann! I'll be right there.\" He called out as the medics rushed her out the door. Diana stood by the door looking lost.\n\nJack wiped his feet as best he could then started for his bedroom. \"Diana! Come with me, please.\"\n\nHe pulled off his clothes and stepped into his shower. The woman stood in the bathroom until he gestured for her to get undressed. He then took her hand and led her into the shower with him. They quickly rinsed off and got clean. They dried off and went into the bedroom to get dressed. He realized he had very few casual clothes. He decided he would have to make a quick trip to Earth to do some shopping. Something to do on his time off he supposed.\n\n\"I'm so sorry Jack! I completely froze! I was useless to you,\" she apologized as they took the lift to the ground floor.\n\n\"No need to apologize. I yelled instructions at you while you were sleeping. My fault,\" he replied.\n\nThey pressed a button at the concierge desk in the lobby and walked outside to meet the automated taxi that descended to the driveway. Jack helped Diana in then got in as well.\n\n\"Hospital please.\"\n\n\"Is this a medical emergency?\" a voice from the taxi asked.\n\n\"No, but a friend of mine was just rushed to the hospital and needs me to be there as soon as possible.\" Jack asked.\n\n\"Is this Ambassador Danner?\" the voice asked.\n\n\"Yes,\" he answered.\n\n\"Setting flight mode as priority one. Please sit back.\"\n\nNo sooner were they seated than the taxi leapt into the air and raced to the hospital. Diana squeezed herself against him as she wasn't too keen on flying and this vehicle was being very aggressive. They landed moments later and he thanked the voice as they got out.\n\nThey made their way to the reception area and Jack explained that SennLann was there. He was given directions and they set off to the fourth floor. They met his doctor Jinnae, the hospital's Chief Physician, who was thrilled to see them again and even happier to have a Phem Kalos female as a patient though there wasn't much need for doctoring in SennLann's case. Outside of some lethargy which might have been brought on by exhaustion from the labor she seemed to be in good health.\n\nJinnae pulled Diana in for some tests as Jack went into the room where SennLann was resting. The female was lying back on the bed and there were two small incubator beds next to her, one for each infant. Jack took a look at them first and noticed they were fussing weakly. The monitors were showing erratic readings. It seemed wrong to see them apart so he opened the incubators and carefully lifted one small form and moved it to the other incubator next to its sister. Once they were in contact both settled and rested comfortably. The monitors in the empty incubator were flat lined but the other one showed a distinct improvement.\n\nA nurse entered the room. \"What are you doing?\"\n\n\"They need to be together. Don't separate them.\" Jack said pointing to the screen.\n\n\"The doctor needs both on a monitoring system. That means one per incubator,\" the nurse insisted but Jack wouldn't budge. She left to find the Chief Physician.\n\nJack turned back to the babies and they seemed to be sleeping comfortably. He looked over at SennLann and saw she was watching him through the slits of her eyelids. She wasn't looking so good. He moved to her side.\n\n\"You'll take good care of my children, won't you.\" SennLann said to him with a dull voice.\n\n\"What's wrong?\" Jack was immediately on edge at her tone.\n\n\"Promise me.\"\n\n\"WE will take good care of your children.\" Jack insisted.\n\n\"I have no place in this world. I've been cut loose.\" SennLann's voice was dropping to a whisper.\n\nJack realized she was giving up because her mate had abandoned her. He was watching her slip away and it terrified him that she could do this. She was willing herself into death!\n\nHe remembered seeing FennLann symbolically biting SennLann and when Jack had asked her about it she just shrugged as said she was his. Now he'd tossed her away. To be King of his people. He probably knew this was going to happen! Suddenly Jack was filled with rage and desperation. He pressed his lips tight against her temple and spoke to her in a deep growl.\n\n\"SennLann, have you forgotten who you TRULY belong to? Didn't FennLann lose to me in battle? Didn't he offer you over to me? Have you FORGOTTEN YOU'RE MINE?\"\n\nThen Jack did something he'd never done to any living being ever in his life. He stretched his jaws as wide as he could and he clamped down on the female's skull. He felt her body jolt and go absolutely still. Not even the slightest movement. Her heart rate, however, increased rapidly.\n\nThen she began to purr.\n\nHe heard a gasp and the squeak of a stifled scream coming from the doorway. He held up his hand to stop them from moving and gently disengaged his teeth from the Phem Kalos. He remembered he had to lick her where his teeth had been so he did that, causing a surge in her purring, then he pulled back. Bright gold eyes locked in his and her purring got much louder.\n\n\"WE will take care of OUR babies. IS. THAT. UNDERSTOOD?\" he growled deeply at her.\n\nShe nodded rapidly and her body was trembling with joy.\n\n\"Rest. I have to speak with the doctor and the nurse. I'll find out when I can take you home.\"\n\nHe walked over to the two Altarians standing in the doorway frozen in shock. He gestured for them to move out into the hall and they quickly did. When the door closed he looked at them in exasperation.\n\n\"Would you two please stop looking like I'm going to eat you? That's ridiculous!\" he complained.\n\nJinnae got her voice back first. \"You... ah... bit the Phem Kalos... on her face!\"\n\n\"That wasn't a bite. That was a hold. I held her face in my teeth. Trust me, it's a much different thing. Especially for the Phem Kalos. Her mate just abandoned her. She'd given up. I might have lost her. I had to remind her that she belongs to me... wait... that came out wrong.\"\n\nThe doctor's eyes lit up with excitement. \"The lethargy! She wasn't exhausted! She'd lost the will to live but you saved her! Fascinating!\"\n\nThe nurse was still eying him cautiously. \"What about the incubators?\"\n\n\"The twins were distressed by being separated. I don't know why but I know that when I put them back together they relaxed and the distress went away. If you can have two monitors on one incubator that would be best but don't separate them.\" He turned to Jinnae. \"When can I take them home?\"\n\n\"Tomorrow morning would be best,\" Jinnae said. \"I want to confirm the children have completed their gestation period. The mother indicated they were early.\"\n\nHe nodded to the two then entered SennLann's room again. Bright gold eyes tracked him across the room until he stood beside the bed.\n\n\"The doctor is going to release you and the children in the morning. I will pick you up then.\"\n\nShe nodded staring up at him with a slight smile on her lips.\n\n\"You seemed surprised to have twins. Are they uncommon?\" he asked.\n\n\"I have never heard of twins being born to the Phem Kalos. We have single births only.\" She looked up at him with a nervous expression.\n\n\"Well, they're beautiful, like their mother. The doctor is just going to run some scans to make sure they have developed fully since you mentioned they are early.\" He looked at her. \"How early were they?\"\n\n\"A full day!\"\n\n\"A day. Just one. On a gestation period of a little over six months.\" He stared at SennLann with exasperation. \"I think they will be fine.\"\n\n\"What are their names?\" SennLann sat up and looked at him eagerly. His eyebrows went up.\n\n\"Uh, I wasn't expecting to have to come up with names for them,\" he said hesitantly.\n\n\"You have claimed them, so you must name them,\" she insisted. More uneasiness for Jack.\n\n\"The Phem Kalos seem to have very structured names, SennLann du Kess for instance. I don't know how this structure works so picking a name that follows-\"\n\n\"Do not use Phem Kalos names for the children. They are not from Phem Kalos. They are the first of us to be born on another planet! They deserve something new!\"\n\nJack grinned. \"Ok. I will think on it tonight and have something by tomorrow.\" He dipped his face down and kissed SennLann. She purred as he pulled back. \"You get some sleep and I will see you in the morning.\"\n\n\"I must feed the babies before I sleep. Could you bring them to me?\" she smiled up at him.\n\nHe nodded and lifted one and held it up to his face. It really did have the sweetest face. He set the child down on SennLann's chest and went back for the other. He thought this one's face was slightly more heart shaped than her sister's. He had something to work with in identifying them with new names. He set the child on the other side of SennLann and both babies began feeding.\n\nIt took around fifteen minutes for them to get their fill and SennLann was fading so Jack carried the twins back to the incubator and left the three beauties sleeping. He left and found Diana talking with the Chief Physician.\n\n\"Ah, Jack! I was just telling Diana that her baby is doing very well. Less than three months to go!\" Jinnae said.\n\n\"That's wonderful!\" Jack said with a wide grin. He walked over and gave Diana a hug and kiss and he felt the woman relax in his arms. He pulled back to give her a questioning look but she just shrugged it off with a smile. He turned back to the doctor. \"SennLann told me the children were born a day early.\"\n\n\"A day? That's it?\"\n\n\"Yup, so...\"\n\n\"I'll still check but that shouldn't have much of an impact on their development,\" Jinnae said with a frown.\n\nJack nodded with a smile. \"Can I take this one home now?\" he said with his arm around Diana's shoulders. The doctor nodded and smiled in return. She set off to look in on her three new patients.\n\nAs Jack walked Diana back down to the lobby he looked her in the eye. \"What was that before?\"\n\n\"What was what?\" she replied.\n\n\"You were all tense when I hugged you.\"\n\nShe blushed and looked away. \"It was nothing.\"\n\n\"No. Talk to me.\" He stopped in the hall and took her hands in his.\n\nShe hesitated then looked down as she spoke. \"The doctor told me how you saved SennLann. How you told her she belonged to you.\"\n\nHe shifted from foot to foot in his embarrassment. \"It was a Phem Kalos thing. I saw FennLann doing it with her and saw how it seemed to comfort her. She was slipping away. I was terrified she was going to die. I didn't want to lose her.\n\n\"Sometimes... sometimes I need to be bitten too.\" Diana said meekly.\n\nJack glanced at the nurse who overheard Diana's comment as she passed by and saw the woman was looking at him with wide nervous eyes.\n\n\"It's just a figure of speech!\" he said to her and the female rushed away leaving behind the scent of her spicy musk.\n\n\"Let's go home before I'm accused of being a serial biter!\" he moaned.\n\nChapter 3\n\nJack managed to go for a good and uneventful run the next morning though he realized his runners were shot from the previous days dunking in the canal.\n\nWhen he got back Diana joined him in the shower and he took her hard and fast from behind pressing her against the wall. She was particularly energetic that morning. He playfully bit her on the shoulder with a growl afterwards and for the rest of the morning she was walking around with a content, satisfied smile on her face. He could only shake his head at her behavior. He went to the hospital and brought SennLann home with the girls.\n\nQueen Elissa and Karrel visited in the afternoon for an informal naming ceremony. He asked for their patience as he arranged a call to FennLann. Once connected he brought up the video on his display in the living room. Jack had SennLann wait in the bedroom doorway out of the camera's range.\n\n\"Hello Jack Danner! Greetings Queen Elissa and Karrel, Diana Haven. To what do I owe this honor?\"\n\nJack spoke first. \"First off we'd like to give you our condolences for the loss of your father.\" FennLann smiled and nodded so he wasn't in too much pain from that.\n\n\"Second, I suppose a congratulations is in order. I understand you're now the King of Phem Kalos.\" A broader smile and a nod from FennLann again. \"Also a congratulations on your wedding.\" FennLann's face broke into a full grin on this one and Jack had to grit his teeth to keep the smile on his face.\n\n\"It's been an eventful week for you.\" Jack said calmly.\n\n\"Indeed it has!\" FennLann smiled.\n\n\"SennLann gave me your message yesterday.\"\n\nFennLann's smile froze. He carefully adjusted his facial muscles into something resembling a neutral expression. \"Was it mal-\"\n\n\"Female.\"\n\nJack saw the relief sweep through the frame of the Phem Kalos ruler. \"good... good...\" he murmured to himself and looked back at the screen.\n\n\"You shed yourself of all responsibility for SennLann yesterday. You... shunned her.\" Jack said with a carefully controlled voice.\n\nFennLann must have picked up something as his eyes showed wariness. \"It is the Phem Kalos way.\"\n\n\"You knew what this would do to her-\"\n\n\"IT IS THE PHEM KALOS WAY!\"\n\n\"Did you forget that you lost her in combat to me? Did you forget this?\" Jack asked as he lifted the amulet FennLann had awarded him from inside his shirt.\n\nFennLann's mouth worked but he couldn't speak. He gave himself a shake. \"But I was with her in your home! You made no objection! Did this not mean you rejected her?\"\n\n\"NO! I didn't object because you made her happy and what I wanted for SennLann was to be happy! She was no longer yours yet you acted like she was. Again, this made her happy. What you did yesterday voided ANY claim you have on her or her offspring.\"\n\nHe looked offended. \"Of course it does. That was its purpose. As I said it is the Phem Kalos way.\" FennLann was getting control of himself back. \"I am sorry for your loss as well.\"\n\n\"Hold that thought.\" Jack gestured for SennLann to enter the room and to stand next to him, holding the twins.\n\nIf FennLann's eyes could have popped completely out of his head in surprise they would have. Not only was SennLann still alive but she was holding... two children. \"Two?\" he squeaked.\n\n\"Twins. My twins. May I present Adina and Zaina Danner, citizens of Altaria.\" He'd have to confirm that last part with the Queen but it had just come to him and it felt right. SennLann was purring loudly and FennLann must have heard this. He looked shaken.\n\n\"There haven't been Phem Kalos twins since the beginnings of our recorded history. This means-\" he began.\n\n\"Checkmate.\"\n\nFennLann jolted and looked at Jack, puzzled at first, then it sunk in. Jack had introduced him to the Earth game Chess and he'd become very frustrated at not being able to master it. Quite frankly, he sucked at it and much preferred Arm Wrestling. In this meeting he was King and he was facing a Queen and her Knight. He'd already admitted he'd sacrificed his pawn. There was nothing for him to do.\n\n\"Well played Jack.\" He paused to get control over himself. \"Much happiness to you... and your family. Queen Elissa, Karrel, Diana Haven.\" The line disconnected.\n\nJack turned to his guests sitting on the couch.\n\n\"Next time you'll inform me BEFORE you potentially drag us into a war!\" Queen Elissa barked at him.\n\n\"Mother, there was no way FennLann would have gone to war. Jack was right when he said Checkmate.\" Karrel said with admiration in her voice. Unlike FennLann, Karrel took to Chess immediately. She also cleaned Jack's clock each time they played. Truth be told he didn't much care for the game either.\n\n\"My apologies Queen Elissa but I needed to ensure he wouldn't pull any stupid moves to get control of the twins. As he confirmed, they are beyond rare and likely highly valued. Considering how poorly the Phem Kalos treat their women I had no idea what that would have meant for them. By formally acknowledging he had no claim to them in front of you I took that threat from the table.\" Jack said and bowed respectfully to her.\n\n\"Adina and Zaina Danner. Why does only one of them have your last name?\" Karrel asked.\n\n\"No, they both have Danner as a last name. It's just a less awkward way to say it. Less repetition. Adina Danner and Zaina Danner.\" Jack explained. \"Can they get Altarian citizenship?\" Jack asked the Queen.\n\n\"Unless the children were born within an embassy's walls, within its sovereign territory, Altarian citizenship is automatically granted,\" she answered. \"Where were they born?\"",
        "Diana pointed to the patio. \"Out there.\"\n\n\"Well that counts as Altarian property.\" Elissa smiled. \"I'll arrange for their records to show their citizenship. Tell me Jack, what's the significance of the names?\"\n\n\"Both are Earth names that mean 'beautiful'. They come from different cultures that never found peace together. Seeing the two babies only at peace when they were together made me think of them for some reason,\" he said looking fondly at the sleeping infants in SennLann's arms.\n\n\"Have you thought of what you are going to do with your off time?\"\n\n\"Not yet. I haven't come up with anything fun yet. There are things I need to do like shop for clothes. I'm thinking of a quick trip to Earth to hit a few stores.\"\n\nKarrel shared a nervous look with her mother. \"Isn't that something you can order online?\"\n\n\"I really need new runners and I'd like to see what they have and try some different ones on. This isn't something I can do online. The running shirts and shorts will be a quick purchase. I need casual clothes as all I have are work clothes and shorts. All of this is the kind of stuff you find at a mall. It will only take an afternoon. I can slip in and out, no fuss, no drama. Just a little shopping.\"\n\n\"Not without a security detail.\" Elissa said firmly.\n\n\"Do you know how much attention Altarians draw on Earth?\" Jack complained.\n\n\"Non-negotiable,\" she said with finality.\n\nJack sighed. \"Sure, ok. Can we do it tomorrow?\"\n\n\"Yes, the sooner the better. Don't give anyone time to plan something,\" the Queen agreed.\n\n\"You make it sound like there's some evil group of conspirators waiting to pounce on me!\" Jack snorted.\n\nElissa shared a look with Karrel and Jack caught it. His eyebrows went up.\n\n\"What was that? Is there something you know and are keeping from me?\" Jack blurted.\n\n\"No, Hellna's team keeps a close watch on the net, looking for patterns such as the one that led to her stopping the Sinosian assassin. We don't know of any current plots against you but it has happened in the past and you tend to dismiss the possibility too readily. You're important and not just to us!\" the Queen answered.\n\nJack looked at the women who were all looking back at him. His shoulders dropped in defeat. \"Right. I'm sorry for dismissing your concerns. I will be careful. I wouldn't even go if there was a reasonable alternative.\"\n\n\"Thank you Jack.\" Elissa said with a smile. \"I'll call Hellna to make the arrangements for your security detail.\"\n\nHe nodded and sat on the chair facing the couch. SennLann quickly crawled up on his lap and proceeded to feed her babies. The ladies on the couch all smiled at his surprised look. The visit settled into the normal pattern of talking about their kids. Diana would soon have her own to talk about and she shared a smile with Jack.\n\nChapter 4\n\nJack was actually rather excited to be visiting Earth again. While his last few visits hadn't been so pleasant, he still felt a connection to the planet. He could visit any of the larger malls for what he needed so he informed the security team of this and left the selection up to them.\n\nUnlike many worlds in the Interplanetary Gate Network, Earth had multiple gates. It was a hub. The reason for this had something to do with the contribution Earth originally made to the network. It also meant he could enter a gate on warm Altaria and exit into one of several equally warm locations on Earth. As he was wearing a t-shirt, shorts, runners, and his hoodie (to cover his horns) selecting a warm destination just made sense.\n\nJack waited at the gate terminal for his escort. The terminal staff had orders not to allow him through any of the gates unaccompanied. He smiled at the obvious work of the Queen.\n\nFour black furred Altarians walked in the terminal entrance and made their way over to Jack. He recognized Gee and Bal but the other two... nope. No recollection of them.\n\n\"Hi Gee, Bal. Who're your shadows?\" he asked with a smirk at his own cleverness.\n\nHis 'usual escorts' were familiar with his informality with them so they ignored the question and moved him to the Customs and Security agent desk. He gave her the details of the trip and they were assigned a gate to pass through. The group went down the hall to the gate. The large mirror surface showed him surrounded by dark shadows. He pointed at their reflection.\n\n\"You see this? I thought we were supposed to be inconspicuous! That isn't happening if we walk around the mall looking like this. Couldn't you have worn disguises?\"\n\nBal and Gee each took a hand and pulled him forward through their reflection. A brief tingle later they were walking up to the customs desk for government officials. It would have taken them much longer to get through the general traffic line.\n\n\"Welcome to Earth, Las Vegas Gate Terminal. Name, Department, and reason for your visit please,\" the agent behind the glass said.\n\n\"Las Vegas? How did they get a gate?\" Jack thought. \"Jack Danner, Altarian Ambassador, personal shopping trip.\"\n\n\"Your hood please. Remove it,\" the agent's voice said blandly.\n\nJack forgot he was wearing it so he reached up and pushed it back.\n\n\"Geez- excuse me. You said this was a personal trip?\" the man said not even trying to stop himself from staring at the large black horns growing from Jack's forehead.\n\n\"Yes, there are no human clothing stores on Altaria. So I shop on Earth. Where the clothes are.\"\n\n\"Right. How about these... people.\"\n\n\"They are my security escort. They fall under my diplomatic authority and I accept responsibility for them.\"\n\nThe agent looked at him then turned back to his terminal and four tracker bands slid out of the slot on the desk. Jack handed them out and they quickly disappeared into pockets.\n\n\"They're supposed to wear them,\" the agent blurted.\n\n\"I take that under my diplomatic authority too. Have a lovely day.\"\n\n\"It's night.\"\n\n\"Oh! Well, good evening then.\"\n\nJack and his four escorts made their way out of the terminal and indeed it was night. He could tell by the small patches of black sky he could see between the flashes of holographic advertising for the casinos. He looked at Bal.\n\n\"Why the hell did we go to Las Vegas?\"\n\n\"A night cycle location with an open mall should be quieter,\" she explained.\n\nJack stared back at the agent with an incredulous look. \"Do you understand what Las Vegas is? There is no quiet time here.\" Jack growled then shook his head. He was drawing looks from the crowded night time streets so he flipped up his hood and headed off towards the huge signs indicating the mall was in that direction.\n\nHe really didn't want to be in Vegas. He'd worked here a long time ago. He'd been eighteen... no, nineteen at the time. On his own for a number of years by that point but now able to take on jobs legally. He'd actually had a number of jobs in this town. From dishwasher in one of the smaller casino's kitchen, housekeeping in one of the larger hotels, then moved by his manager into a regrettable stint as pool boy at the hotel's spa. He'd had to flee the city when one of the ladies at the spa got a little frisky and had her way with him in a cabana. He had no idea the woman was the wife of one of the casino bosses. Word got out and his manager took pity on him and gave him a five hour head start. He lost his meager savings but he wasn't buried in a shallow grave in the desert so he considered that he came out ahead. He hadn't told anyone about this but he hadn't ever expected to come back either.\n\nThe Las Vegas of his initial visit looked nothing like the present day but this was a city that reinvented itself on a constant basis. Buildings came and went and the only constant was change.\n\nThe group made their way down the strip ignoring the siren calls of the casino's that lined the street. They ignored the street level entertainment of the Buskers and the invitations from the prostitutes. They bypassed the stalls where the scents of exotic foods cooking wafted out, though Jack's mouth salivated a little. OK, more than a little.\n\nFinally they reached the entrance to the mall and pushed inside. The crowds inside were a little smaller but the press of humanity was beginning to get to Jack. It had been a while since he'd been exposed to so many humans. He shook his head at that thought.\n\nHe spotted a shop with sportswear and made a beeline for it. Once inside the crowd thinned out considerably so he began to relax. He found a number of running shirts, shorts and socks so he picked them up. They had a terrible selection of running shoes but a young male clerk with a multitude of tattoos and piercings took pity on him and told him which shop in the mall to go to for the best selection of running shoes for actual running.\n\nThe clerk kept glancing up at Jack's hood. As the man had done him a solid he lifted the front of the hood and watched the man's eyes go wide with shock.\n\n\"OMIGOD, dude! You're him!\" the clerk gushed. Jack glanced at his name tag.\n\n\"Yes Dane it's me, but please keep that under your hood until tomorrow morning. It's almost impossible to get shopping done these days. Thanks for your help!\"\n\n\"Sure! Sure! Uh, can I- can I get a shot of us together? My Clicki will be so fucking jealous!\" the young man asked. Jack wasn't sure what the hell a Clicki was but he'd been away from Earth for some time. Some of the lingo was going to bypass him.\n\n\"Yeah, sure.\" Jack saw they were sheltered from the front of the store by the cash desk so he flipped the hood back and the clerk grinned madly.\n\n\"I'm so freaking spent!\" Dane gushed.\n\n\"That's good, right?\" Jack smiled and Dane got his shot.\n\nJack flipped the hood back up and picked up his bags. Dane shook his hand and wished him luck.\n\nOnce he was back in the mall Gee maneuvered herself closer. \"Do you plan on displaying yourself to everyone you meet? You are supposed to be keeping a low profile!\" she hissed.\n\n\"Said one of my four black shadows,\" he retorted.\n\nGee growled and moved off a distance to track the crowd.\n\nFollowing the directions Dane gave him they made their way across the mall. He stopped in a shop to buy some jeans, some khakis, three casual shirts, and some underwear. Finally he found the running shoe store. He went to move inside but a large man suddenly barred his way. \"The store is temporarily closed. Come ba-\" the man began then his eyes went wide as he saw inside the hood. He whispered something into a wrist mic, listened, then stood aside. Bal stepped up to him, gave him a once over, and moved inside first. Moments later Gee tapped Jack's hip and he went inside with a nod to the man who was obviously someone's security.\n\nJack saw the variety of running shoes offered here and a satisfied grin spread over his face. He began to work his way along the shoes displayed on the wall. Some were just gimmicks but some of them had some serious engineering behind them. He was so engrossed he missed the fact that he was being watched.\n\nHe reached for another one but a woman's hand was on it before him. He glanced to the side and saw a young woman dressed in white leggings, a white yoga top, and white hoodie. She had blonde hair, lots of it, and a pretty face and she was staring at him expectantly.\n\n\"Hi, do you work here?\" he asked.\n\n\"You have no idea who I am do you?\" the woman said. Her voice was a little gravelly/squeaky. Maybe she had a cold?\n\n\"Sorry no. I guess you aren't one of the clerks then,\" he said.\n\n\"Nope, not a clerk. I know who you are though,\" she said with a smirk.\n\n\"Yeah, I'm trying not so successfully to go incognito.\" He gestured towards his horns. \"These things make that rather difficult. You're here with the security guards? They're yours?\" He'd noted three other large men in suits while they talked.\n\n\"Yes,\" she said with a challenging look.\n\n\"I don't follow celebrity news, I don't watch much Earth based TV, and I've been out of the loop for some time. So it's no reflection on your popularity or success. Are you shopping for runners too?\"\n\nShe finally gave in and nodded. \"I try to get in a run as often as I can. I'm Meagan. Meagan Lane.\" She smiled as she waited for a look of recognition to bloom on his face but he just smiled.\n\n\"Jack Danner.\" He held out his hand and they shook. He looked around. \"Is there a clerk in the shop? I'd really like to try these on,\" he said holding up the highly engineered runners.\n\n\"Are they good?\" she asked as she waved at the woman waiting by the cash desk.\n\n\"I'll tell you when I've tried them on,\" he replied with a grin.\n\nThe woman with the name tag saying Vicki rushed up to them and once she got a look at who was standing next to her favorite celebrity it looked like she was going to hyperventilate.\n\n\"Vicki? Take a nice slow breath. I'm just another dumb customer looking to try on a shoe. Do you have these in a size ten and a half?\" he asked gently.\n\nVicki took a few deep breaths and did look better. She smiled weakly at him and took the shoe he was holding to go into the back room.\n\n\"How do you deal with this kind of reaction all the time?\" Jack asked Meagan as he sat on a bench.\n\n\"What do you mean? I've seen you on TV dealing with it too! You were just being chased by one of those gossip show hosts.\" Meagan smiled and sat next to him.\n\n\"That was shown on Earth?\" She nodded. \"That was just once. For the most part Altarians don't behave like that. Most will just smile at you and let you go on your way.\" Jack insisted.\n\n\"How do you know if you're famous or not?\" Meagan asked.\n\n\"Who wants to be famous?\" Jack asked with a visible shudder. Meagan looked at him thoughtfully.\n\nVicki returned with a shoebox and helped Jack put the runners on. He bounced on his toes and jogged up and down the aisle a few times.\n\n\"Ooo, these are wonderful! How many more do you have in ten and a half?\" he asked.\n\nVicki blinked. \"Uh, I believe we have three more.\"\n\n\"I'll take all of them.\" Jack replied. \"Do you have a woman's version of this model?\"\n\nVicki nodded and went to the wall of women's shoes and returned with it. It wasn't as fancy looking as the others and Meagan raised her eyebrow skeptically at Jack.\n\n\"Try it on. What have you got to lose?\" he suggested.\n\n\"A size six please.\" Meagan said still looking at Jack who sat and put his new shoes back in their box. He laced up his old shoes.\n\n\"How's your singing voice Jack?\" Meagan asked suddenly.\n\n\"Terrible! Well, not bad in the shower but... no it's bad there too,\" he grinned.\n\n\"It would be a lot of fun getting you up on stage.\" Meagan said contemplatively.\n\n\"Sorry, that's not going to happen.\" He pointed to his face. \"Attention phobic.\"\n\nGee approached them. \"Jack, we should move on. There is a crowd forming outside in the hallway.\" The Altarian turned to the woman. \"Ms. Lane, it is an honor to meet you. My partner and I enjoy your music very much. I wish you a speedy recovery for your vocal cords.\"\n\nMeagan looked at Jack with a pleased smile as he gaped at his bodyguard.\n\nVicki returned with arms loaded with boxes. She looked at the Altarian and wobbled a little on her feet.\n\nJack caught her elbow and gently sat her on the bench. He carried the four pairs of shoes over to the cashier's station and Vicki's star struck coworker ran the transaction for him.\n\nHe carried his bags back over to where Meagan was tucking the size sixes into their box. Vicki was nowhere to be seen.\n\n\"OK, you were right. They were really good! I'm getting all the size sixes they have.\" Meagan admitted.\n\n\"I have to go but it was really nice to meet you. I also hope your throat heals quickly.\" Jack said.\n\n\"Hey, I feel weird asking this because I'm usually on the other end of the question but could I get a shot of us together?\" the woman asked timidly.\n\n\"Sure.\"\n\n\"Could you...\" she pointed up at his hoodie.\n\nWhere they were standing was a little too exposed. \"How about back by the cash desk. It's not so visible.\" he pointed out.\n\nVicki returned and they all walked over to the cashier station. With a final look around Jack pushed the hood back. Vicki and her coworker gasped. Meagan just looked up and froze.\n\n\"Oh god, they're... real,\" she mumbled.\n\n\"And very, very sharp so avoid the points,\" he mentioned as the women automatically began reaching to touch them.\n\nThree hands rubbed the surface of his horns until he began to feel a little weird about it and gently pulled back. Comms came out and everyone was taking pictures. Of Jack, of Meagan, of Jack and Meagan, of Vicki and Brenda with the celebs. Finally Gee returned to Jack's side.\n\n\"We must leave NOW,\" she said.\n\nJack caught the tension in his bodyguard's voice so he tied his shopping bags together and turned to the clerks.\n\n\"Vicki, could I ask you to get all of these packages delivered to the Gate Terminal and shipped to me?\" Jack asked and Gee handed her a card that would pay for the delivery.\n\nThe woman nodded with a huge smile. Jack nodded to the ladies and followed Gee to the front doors. There was a large crowd gathered there so they moved back into the store.\n\n\"Is there a back way out of this store?\" Bal asked. Brenda led then to the back room and opened the door to the employee access way. With a final nod they headed down the hall at a brisk pace.\n\n\"Aren't we moving away from the Gate Terminal?\" Jack asked.\n\n\"We are going to have to go around. There were some people in the crowd who appeared to be soldiers. Not by their clothes but by how they moved and watched the store and the crowd,\" Gee explained.\n\nOne of the other bodyguards returned from scouting ahead. \"We cannot go further, the way ahead is blocked by some of those soldiers. We will have to cut through here.\" She pushed through a side door followed by her partner. The hall beyond was dimly lit.\n\nJack stepped inside and looked back at Gee. \"Where does this lead?\"\n\nGee looked at her comm. \"A casino. The Gemstone.\"\n\nJack froze causing Bal and Gee to collide with his back.\n\nA bolt of fear went through Jack. The Gemstone was Maury Levine's casino. The man who chased Jack from Vegas before. His mind was saying it couldn't be a coincidence that their only escape route went through this casino.\n\n\"We can't be here. It's a trap.\" Jack spun and pushed Bal and Gee back into the hallway. There was a sudden blinding flash behind Jack. The two agents who'd entered the dark corridor slammed into the wall behind him, broken and bloody. Jack's body had shielded Gee and Bal so they weren't blinded and saw the commandos racing up the corridor from the side.\n\nWhen the electroshock weapon's darts struck his back Jack had no time to do anything before he was lit up. He fell to the floor, dropping on his face, the world spiraling into a dark pit.\n\nChapter 5\n\nQueen Elissa's secretary Veena burst into her office with a frantic expression. Elissa already knew what the news was going to be.\n\n\"Jack's been abducted!\" the woman blurted.\n\nElissa called Hellna at the Altarian Security Ministry and was put right through. \"What happened?\"\n\nHellna's voice was calm and collected as she gave her report.\n\n\"Two of our agents are dead. Gee and Bal are injured but managed to escape when they saw Jack being taken with non-lethal force. It was an abduction not an assassination. Gee and Bal enlisted the help of a personal security team from a nearby store to help extract them from the location so they could report.\n\n\"Jack is being tracked?\"\n\n\"He had three separate active trackers on him and one sleeper. The active ones all went dead thirty minutes after the event.\"\n\n\"Any identification on who it might have been?\" Elissa said, calling upon her training to lock down her rising panic.\n\n\"Gee reported that Jack seemed to be aware of the trap before it was sprung. He recognized the name of the casino they were entering and pushed Gee and Bal back out into the service corridor. It was lucky for them that he did. They spotted the mercenaries attempting to flank them and were able to open fire first. Then Jack was shot with some form of stun weapon from inside the corridor and was rendered unconscious. When he hit the floor the mercenary's from inside attacked in earnest and the two agents barely managed to escape. Both were shot. They're coming through the gate now. I'm putting a call through to the Minister of Earth's Security Council. Stay on the line so we can both address him.\"",
        "\"Minister of Earth Security Council, Mr. Steyn's office, how may I help you,\" a voice answered with a crisp professional tone.\n\n\"This is Hellna, the Altarian Security Minister, and I have Queen Elissa of Altaria on the line with me. We need to speak with Mr. Steyn immediately.\"\n\nThe caller identification system must have confirmed their location as the voice became just a little crisper. \"I will connect you now.\"\n\nHellna and Elissa endured almost a minute of bland music before it was cut off and a deep voice rough with sleep answered. \"Ruan Steyn here. How may I help you this morning?\"\n\n\"Our Ambassador Jack Danner has been abducted at gunpoint in Las Vegas. Two of his security detail were killed, the other two injured. Mobilize your teams immediately. Begin with the Gemstone Casino where the abduction took place approximately forty five minutes ago.\" Hellna said firmly.\n\n\"Mr. Danner has been kidnapped again?\" Steyn's voice almost sounded amused.\n\n\"Mr. Steyn, this is Queen Elissa. Please be aware than all trade with Earth will be suspended until our Ambassador is returned safe and sound. Does that clarify how seriously we are taking this assault?\"\n\n\"Perfectly.\" The amusement was gone.\n\n\"I look forward to hearing your progress on this matter soon.\" Elissa said and Hellna disconnected.\n\n\"I don't understand. We gave no advance notice that Jack was visiting Earth yet a commando team was able to abduct him from this random location. Was there anything in the net regarding a contract on Jack?\" Elissa growled.\n\n\"Nothing more than the typical hate mail from the occasional social malcontent. Nothing that suggested a team of professionals would be watching.\n\n\"Is there anything we can do from here?\" Elissa asked Hellna.\n\n\"Just keep the pressure on,\" Hellna answered.\n\nChapter 6\n\nCold water splashed onto his face and Jack woke with a jolt then moaned from the pain of his knotted muscles.\n\nHe blinked and his mind slipped back to the last time he was woken this way. It hadn't been pleasant.\n\n\"Is he awake?\" an older voice asked.\n\nSomething sharp jabbed Jack in the side and he cried out. He also realized he was naked. Another unpleasant surprise. Why did they strip him of his clothes? Ah, looking for trackers most likely.\n\n\"Mr. Danner do open your eyes so we may speak face to face.\"\n\nJack cracked his eyes open and he saw he was in a dark room. He couldn't see the edges of it but the room didn't sound big.\n\nA single light from above cast weird shadows.\n\nIn front of him stood Maury Levine. A much, much older version of the man than Jack recalled. He didn't look well. His skin had a sick yellow tone.\n\n\"Good. I just wanted to meet you in person and let you know this isn't personal. I've watched you doing good things for Earth. I'm a fan but the bounty on you is just too extreme to pass up. I won't be around much longer and I need to ensure the ones I leave behind are taken care of. It's just business.\"\n\n\"And now you feel better?\" Jack said, teeth chattering from the cold.\n\nThe smile slid from the man's face. \"No, I don't feel better. I'm dying.\"\n\n\"That sucks but then so does being abducted.\" Jack said and Maury's frown deepened. He realized antagonizing the man who arranged his abduction probably wasn't a smart move. He sighed. \"I'm sorry. That was rude. Have you spoken to a Chuuruthian doctor?\"\n\n\"I don't like aliens. The only reason I can be in the room with you now is because I know you were once fully human. If I ignore the horns you could still be taken for human. Mostly.\" Maury said as a shudder went through his weakened frame.\n\nGreat, a xenophobe. That could be bad. \"Business, you were saying. Who wanted me abducted? I haven't heard about anyone being particularly upset with me recently.\"\n\n\"That's the way they wanted it. Keep the snoops from sticking their nose in their business. Even I don't know who it is. I capture you. I bring you here. I get paid. Well, good luck!\" He turned to leave.\n\n\"Could I ask you one more question?\" Jack called out and Maury stopped. \"How did you find me? We didn't announce my visit. It was a last minute decision. I didn't even know I was going to be in Vegas until we stepped through the gate.\"\n\nMaury smiled. \"Don't you understand the nature of Vegas? There are more cameras watching than people know. When a man in a hoodie arrives with black Altarian escorts who else would it be? You lit up the gambling boards the second you stepped onto the strip. Fortunes were made and lost betting on everything from the purpose of your trip, if you'd take off the hood, and whether or not you'd be able to leave unscathed.\"\n\n\"Just Lady Luck then.\" Jack said and Maury grinned.\n\n\"Yeah, ain't she a bitch. Much like my ex-wife.\" The man left with his security team. The door they exited in the dark closed with an odd metallic bang. Sheet metal?\n\nJack tried to relax. Maury wasn't planning on killing him at least. He wasn't sure if that last comment was a reference to the cabana event. He certainly wasn't going to ask and it didn't seem to matter now.\n\nHe looked around himself but all he could see was a grey concrete floor with the occasional smudge of grease. A garage? The chair he was chained to was bolted to the floor. No matter how hard he rocked it didn't budge. His bindings showed no loosening after his rocking. If anything they felt a little tighter.\n\nHe listened and heard nothing but silence. He was naked, wet, and cold. Worse, he was alone.\n\nShit.\n\nChapter 7\n\nGee and Bal were sitting in side by side cubicles in the Emergency wing of the hospital when Hellna burst into the department looking for her agents. Hellna took in the bandages and sighed with relief. She understood the injuries were minor but Gee and Bal were her best operatives and she wanted them on this case.\n\nWhen they saw her the two agents got to their hooves but she waved them back down.\n\n\"Report. Has anything else surfaced from your memories of the attack,\" she asked them.\n\nBoth shook their heads with frowns.\n\nThe doctor joined them and released the agents to Hellna's care.\n\n\"Come with me,\" she said as she headed back out to her vehicle. Hellna took the bench with her back to the driver and the agents sat on the seat facing her as the driver got them underway.\n\n\"I'm sending you back to Earth. London Gate Terminus. You'll meet with the squad Earth's Security Council Force have put in charge of locating and extracting Jack. You will be special advisors to the team. They have global jurisdiction so local law enforcement will support their efforts. Or should.\" Gee and Bal nodded soberly.\n\nShe pointed to the seat the two agents were sitting on. \"You will find everything you need to restock your supplies in the seat.\"\n\nThe agents knelt on the floor and flipped up the cushion. Inside was an arsenal. They swapped out the gossamer black gowns they were wearing with fresh ones from inside the compartment then quickly pocketed the items they needed. They noted the small handguns. Each picked one up and looked back at Hellna who nodded.\n\n\"Earth's Security Council only accepted your presence in an advisory capacity but the Queen has authorized you to carry these and expects you to use them at your discretion. She will support your actions but you know the drill.\" The guns disappeared into their gowns.\n\nThe vehicle landed outside the Gate building and they made their way inside. A brief word with the customs agent and they were walking towards a gate. They stopped just before the threshold.\n\n\"Your contact is Major Cha'Risa Ash. She'll pick you up on the other side.\"\n\nHellna looked into their eyes. She saw the grim determination there.\n\n\"Bring him home safe,\" she said. They nodded and stepped through.\n\nThe other side of the gate was a large chamber and the noise from the travellers moving to and fro put Gee and Bal immediately on edge. They scanned the room as they made their way towards the 'Government Officials' Customs desk. A tired looking man with disheveled hair looked at them.\n\n\"Name, Department, and reason for your visit.\"\n\nThe agents both touched the biometric reader. Gee spoke for them.\n\n\"Gee and Bal. Altarian Security. Here on Earth's Security Council business.\"\n\nThe man watched his screen and nodded. He looked back over his desk's wall and waved to someone.\n\nMoments later Gee and Bal were looking up into the sharp hazel eyes of a tall, muscular woman. She was wearing black combat gear, an armored vest with many pockets over that. Weapons were attached to her hip, slung on her back and several knives were strapped to her legs.\n\nWhat little skin was exposed was a deep rich brown showing her Native American heritage. She had high cheekbones and a strong nose. Her straight black hair was braided tightly and bound under her vest.\n\nThe woman sighed when she saw the light and airy gowns they were wearing. \"I'm Major Ash. I understand you're my Altarian 'advisors'?\" Her voice gave away her frustration for being forced to include them on her team. \"We're potentially going into a firefight and you aren't wearing body armor-\"\n\n\"Please do not worry about us. We will be fine.\" Gee said.\n\n\"I'm not going to be responsible-\" the Major began again.\n\n\"You are not responsible for us. We are.\" Bal finished.\n\nThe tall woman stared at the two Altarians in frustration.\n\n\"Please, time is of the essence if we are to find the trail of the mercenary team who abducted Ambassador Danner,\" Gee insisted.\n\nWith a final scowl Ash spun on her heels and strode quickly across the floor towards another gate, Gee and Bal following immediately behind her.\n\nA group of people in combat gear were waiting for the Major before the smooth mirror surface of the gate.\n\nThere were four other members in the team. Two almost identical looking men who were just a little shorter than the Major were inspecting their weapons one more time. Their greying hair was cut military short and their cold blue eyes assessed the approaching group quickly dismissing the Altarians as a threat. Standing next to them reading a small tablet was a lanky red haired woman wearing a minimal augmentation suit. This suit helped her carry and use the heavy, sniper rail gun currently folded up against the chassis of her suit on her back. Next to her was a shorter man whose skin rivaled the Altarian's fur for blackness. He had the assault weapons too but he was cradling a portable data terminal like a lover.\n\nThe group came to attention when the Major stopped before them. She introduced her team to the Altarians.\n\n\"This is Corporal Leo Orlov and Corporal Maxim Volkov, our assault and demolition specialists. Captain Nann Graf, our recon and suppression specialist. Finally Lieutenant Ray Sharif, our comm tech specialist. People this is...\" she realized she'd forgotten to ask their names.\n\n\"Gee and Bal, Altarian Security Agents.\" Bal offered.\n\n\"Where is their body armor?\" Maxim asked.\n\n\"We will be fine. We must begin as soon as we can. The trail is growing cold,\" Gee insisted.\n\n\"You heard the... lady. Let's go.\" Ash replied. Maxim and Leo just shared a look and stepped through the gate followed by Nann and Ray. Gee and Bal stepped through closely followed by the Major.\n\nThen they were in the Las Vegas Gate Terminal once more. The Major addressed the team.\n\n\"Our target was taken from a rear access corridor behind the Gemstone Casino leading to the mall. A team of armed assailants used a flashbang to temporarily blind the target's security team and proceeded to kill two of the agents with shots from their assault weapons.\" She stared at Gee and Bal to see if they understood her concerns.\n\n\"That is not completely accurate.\" Gee began and the group turned to look at her. \"The location and the use of the flashbang is correct but it should be noted that the assailants were ex-military, well trained, and well equipped. Their weapons were state of the art and well maintained. Our agents weren't killed from being shot by assault rifles but rather a grenade launcher. They had moved too far ahead of Ambassador Danner making the grenade launcher a more effective means to take them out.\"\n\n\"What's the source of that information?\" the Major asked with a scowl.\n\nGee looked at her. \"First hand. We were the two agents who survived the attack.\"\n\nThe group stared back at the Altarians with wide eyes.\n\nBal took up the story. \"Ambassador Danner recognized the name of the casino and took immediate steps to exit the trap almost before it had been sprung. He protected Gee and I from the flash bang and pushed us out into the service corridor where we observed the group attempting to flank us. We opened fire on them but Ambassador Danner was rendered unconscious. When he was down we began to take fire from the team inside the corridor so we had to retreat. As the weapon used on the Ambassador was non-lethal we identified their purpose was to abduct him and our escaping to report would serve him better.\"\n\nThe Major was quickly reassessing the value of her 'advisors'. \"Trackers?\"\n\n\"Three active ones which all went offline thirty minutes after the abduction. In three different locations within Las Vegas. There is one more tracker which may still be viable. It's a sleeper. It has a range of around a mile and will activate when it detects an echo pulse.\"\n\n\"Damn. These are not amateurs. We need a larger team, Major.\" Nann commented.\n\n\"We have permission to call in local law enforcement and any military resources available in our locale.\" Ash responded. \"First we have to establish a location. I assume we will be visiting the casino?\"\n\nGee nodded. \"We might have been directed there considering Jack's- Ambassador Danner's response.\" She avoided looking at the Major after her little slip. Nann traded looks with her boss.\n\nThey made their way outside of the Terminal building and Gee saw a woman outside the barricade waving at her. She recognized the woman as the clerk from the last store. She had Jack's shopping bags in her other hand.\n\n\"Major Ash, one moment please.\" Gee said and walked over to speak with the shop clerk who recognized Gee.\n\n\"OMIGOD! Did you find him?\" Vicki gushed, her face wet with tears.\n\n\"We are hunting for him now. Rest assured we will find him,\" Gee said to assure the young woman.\n\n\"I- I haven't been able- they won't let me-\" Vickie gestured at the shopping bags helplessly.\n\nGee took Vicki's hand to calm her. \"Do you have the card I gave you?\" The woman nodded. Gee gestured for one of the Gate Security Agents to come over to them.\n\n\"This woman has Altarian Embassy business inside. She is to be given the same courtesy any Altarian courier would be shown. Please escort her inside and guide her back out.\" The man looked like he was about to protest but Vicki held up the card and the words died on his lips. He held the barricade open for her to step through. Vicki smiled widely at Gee and walked into the building after the man. Gee walked back to the team.\n\n\"What was that about?\" the Major asked.\n\n\"A courtesy returned,\" was all Gee would say but Bal nodded.\n\nThey wasted no further time in getting to the Casino entrance. They were met by a group of security personnel and some administrators.\n\n\"I'm Major Ash from Earth's Security Council Force. Who's in charge here?\" she said showing her badge.\n\nA slight man in a dark grey suit stepped forward. \"I'm Walter Jensen, Senior Executive Administrator of Gemstone. How may we be of service?\" He waved away the security team now that they knew who they were dealing with.\n\n\"Earlier this evening there was an abduction of the Altarian Ambassador in a back corridor of your establishment,\" the major began.\n\n\"Yes, the police came by to secure the service corridor and to do their investigation. Could we possibly continue this discussion in my office? It will make the customers more comfortable without all the hardware on display.\n\nThe Major nodded and they followed him through the front hall and past the lounge.\n\nBal suddenly stopped and gestured to Gee. The two turned and walked into the lounge. Ray followed then Nann. The Major stopped Walter and the rest followed the Altarians into the entrance way of the lounge.\n\nBal turned to face the team. \"How frequently is this board updated?\" On one wall of the lounge above the bar was an odds board. A huge display showing all of the pending events people could bet on. Jack's name was on the board in several places. The first one was pretty mundane. Place a bet for the purpose of his visit but further along there was a bet for his ability to leave, alive.\n\n\"When did this first entry go on the board?\" Gee asked Walter.\n\n\"I don't know. Why?\" he said, definitely looking uncomfortable.\n\n\"It sets a time line for when our presence in Las Vegas was noted. As the first set of odds are related to his purpose for visiting it had to be just after our arrival. This means we were made the moment we arrived. It doesn't explain why Ambassador Danner was abducted but based on the fact that we identified these ex-military mercenaries approximately forty minutes after our arrival it means someone received the notification of our arrival the moment we were identified. The personnel were likely already in place and our arrival was an opportunity to be taken.\"\n\nThe Major nodded with that analysis. She glanced and nodded at Ray then looked over to Walter. \"Who updates the odds board?\"\n\nThe man was beginning to sweat. \"It's automated. It comes in on a feed from a central data collection center. These odds are in the Celebrity category so that comes from news stories and camera feeds. Facial recognition identifies people of interest who arrive and the odds are based on recent events they've been involved in. The 'What are they here for' is a low payout introductory bet.\"\n\n\"But if someone were to set an alert on the system to activate when a particular person arrived, like an Altarian Ambassador, that would lead us to a potential suspect, wouldn't it?\" the Major asked the executive who had the deer in the headlights look.\n\n\"Got it Major. It was erased and the system was purged but the backup still had a reference.\" Ray commented looking at his terminal. \"Uh, this originated from the Chief Executive's terminal, a Maury Levine.\"\n\n\"Mr. Jensen, we'll need to speak with Mr. Levine,\" the Major said.\n\n\"That's, uh, not going to be possible,\" Walter mumbled.\n\n\"Sure, it is. You tell us where he is and we go to him and ask him a few questions. Simple,\" she replied casually.\n\n\"He's not here and we don't know where he is.\" Jensen said with a wince.\n\n\"Hey, I found a reference to a 'Jack Danner' working for the Gemstone... a long time ago.\" Ray said with surprise in his voice.\n\n\"ARE YOU IN OUR HUMAN RESOURCES FILES?!?\" Walter squeaked in outrage.\n\n\"We have the authority to take this place apart digitally. Every credit, every data packet, for as long as it takes to get answers to our investigation.\" Major Ash said coldly.\n\n\"Look, I told you I don't know where he is!\" Walter barked.\n\n\"Who does?\"\n\nJensen's mouth opened and closed as he struggled to come up with something he could say to protect himself AND his employer.\n\n\"Major, I've tapped into the security system and I have a recording of Maury Levine being escorted by several men who appear to be ex-military. He got into an Empress ground skimmer and left the building approximately fifteen minutes after the abduction.\" Ray said.\n\n\"An Empress? What's the range on that model?\" Ash asked.\n\n\"Around 2000 kilometers.\"\n\n\"Cross country capable?\"\n\n\"Yes Major. In comfort, stealthed, and armored.\" Ray said with just a little envy in his tone.\n\n\"Shit!\"\n\n\"You can still track it.\" Gee said calmly. \"The Empress uses four independent antigrav panels which present a very distinct energy output pattern.\n\nRay looked at the Altarian. \"How do I track that?\"",
        "\"The skimmer turned right when it exited the garage. That would take it to the end of the block and a traffic light. There should be a camera on that corner of the casino which register transponder IDs as vehicles pass.\"\n\n\"The Empress is stealthed. No transponder.\" Ray explained.\n\n\"Check.\" Gee said.\n\nRay scanned through the security feeds and found the image of the skimmer passing by but as he said, no transponder code. Gee reached past him and opened up the vehicle maintenance tab. Once more the fields were empty as the car hadn't been broadcasting anything when it went past. \"See! Nothing!\"\n\n\"Scroll down please.\"\n\nRay looked at the bottom of the maintenance page and saw four numbers. Energy output values for the four antigrav units. These could not be stealthed as the units could not be modified without destroying them.\n\n\"You will note the four values aren't equal as the load in the vehicle isn't evenly distributed. This is the pattern you must track from every intersection sensor.\" Gee explained.\n\nRay's eyes lit up. \"Holy shit! I can do this!\" He bent over his terminal and hammered out a search algorithm for the pattern and linked into the city's network to run the algorithm. With a grin, he patched his screen into the large display above the bar and everyone got to see a huge map of Las Vegas and a blinking red light at each intersection the pattern was identified at. The line of dots moved away from the Gemstone Casino heading to the western edge of the city then it veered north before the last intersection leading to the highway. It went through three intersections then stopped which meant the skimmer had to have turned west once more as there were no more sensors in that direction.\n\n\"That's where we start!\" the Major said. \"Ray, freeze the assets and all accounts for Maury Levine and the Gemstone.\"\n\n\"WHAT? You can't do that!\" Walter yelled.\n\n\"Indeed I can and I did. Maury Levine is a suspect in this investigation and is on the run. We are authorized to cut off access to his funds to prevent him from fleeing the jurisdiction. Let's go people.\"\n\nThe team moved out of the casino double time and once they reached the sidewalk they boarded a large personnel carrier. The moment the door closed they were in the air moving towards the coordinates Ray sent to the driver.\n\nIt took just ten minutes to get to the neighborhood where the skimmer disappeared. The road they determined the skimmer turned onto ended with a dirt track leading out into the desert. The empty desert.\n\n\"Now what?\" the Major asked.\n\n\"Are there any flight centers or high velocity ground transport centers out there? Someplace they'd be able to move him more quickly?\" Gee asked.\n\nRay looked at his tablet and shook his head. \"Nothing that's being actively used. There are three old airstrips but the use of airplanes is prohibited... oh right.\"\n\n\"If they get him onto one of these 'planes' tracking his next location is going to be very difficult.\" Gee said looking at Bal who was staring out into the inky blackness thinking that Jack was out there in that darkness.\n\nThey shivered.\n\nChapter 8\n\nThe first 'airport' they checked was little more than a barn and a strip of cracked concrete. Gee and Bal urged the team to hurry back to the transport to go to the next one quickly. They just got into the air once more when Ray called out that they had a hit on the Empress skimmer in Baker, California and it was heading west.\n\n\"Set course for Baker!\" Major Ash called out to the pilot.\n\n\"Major, we believe continuing our current search would be more effective use of our limited time. The Empress is now heading on a course which likely intersects with the gate in Los Angeles where we can easily detain him or you can have local authorities pick him up anywhere in between. If Mr. Levine was simply running for the other gate, why the diversion out into the desert. There was no roadblock he was avoiding. More likely he came out here for a purpose. Searching for the alternate transport site is still a viable plan.\"\n\n\"That plan is just guesswork while capturing Mr. Levine will give us real answers.\" Ash growled.\n\n\"At the cost of time we may not have.\" Gee pushed.\n\n\"Thank you for your 'advice'. We're going after Levine,\" the Major said, reminding Gee and Bal what their official position was. Gee sat back and shared a look with Bal who was equally unhappy.\n\nChapter 9\n\nJack's shivering caused his chains to rattle. This prevented him from hearing the sound of the plane until the screech of its wheels touching down some distance away. His head came up as he strained to hear anything above the jingle of the metal links. He struggled to make sense of the roar until it finally connected in his brain as the drone of an airplane propeller. He hadn't heard that sound since he was a kid. The sound got louder then suddenly cut off as the engine was shut off somewhere close by. Jack listened and shivered then finally the door opened. Moments later someone entered and Jack heard the distinct sound of two sets of boots.\n\nTwo men walked into the light and looked at him. He looked back but he was shivering too hard to see clearly.\n\n\"It's Danner. Let him know,\" a cool voice said.\n\n\"Shit. He's naked. Why the fuck is he naked!\" the second one said pulling a sat comm from his pocket. He pressed a button and waited. \"Package confirmed,\" he said and hung up.\n\n\"Find him something to wear,\" the first one ordered and the second one walked off into the darkness.\n\n\"I- I d-don't- s-s-sup-pose your h-h-here t-t-t-to res-rescue me.\" Jack forced out between his chattering teeth.\n\nThe man walked closer and jabbed Jack in the chest with a rod. Jack cried out in agony as a painful shock ripped through his nerves.\n\n\"No talking. Understood?\"\n\nJack nodded the moment he could control his muscles.\n\n\"Smart.\"\n\nThe other man walked back with a bundle of... something in his arms. \"I found some clothes he can wear.\"\n\nThe man with the shock rod snorted and nodded. The clothes were dumped on the floor at Jack's feet. He looked down and saw a dusty white one piece leather jump suit with red accents and... a cape? Cheap looking rhinestones covered the chest, arms and legs which flared wide at the bottom. There was a red scarf which Jack hoped was warmer than it looked. The man also brought a pair of boots. Hopefully they'd fit as Jack could barely feel his toes.\n\nThe man who'd got the clothes pulled out a gun while the other went behind Jack and undid the locks, pulling the chain back through the chair's frame. Jack almost fell forward but caught himself. He hadn't realized how much he'd been leaning against the chains.\n\n\"Get dressed,\" the man behind him said.\n\nJack's muscles shook from being locked in place for hours then shocked. He carefully bent down and it took three attempts to get his fingers to grip the jumpsuit. He picked it up and undid the zipper down the chest. He braced himself against the chair and put one leg in then the other. He pulled it up and was grateful to discover it had a little room to spare around the waist/groin/ass area. The previous wearer must have been a little heavier. The problem began once he got his arms in the sleeves. His chest, shoulders and neck were too big to allow him to pull the zipper up further than the top of his stomach. He tied the red scarf around his neck and pulled the ends down over his chest.\n\nHe lucked out as the boots fit well enough. Maybe a little loose but better than nothing. He looked down at himself, seeing the suit glitter like little sparks firing off and felt ridiculous. He looked up just in time to see the shock rod thrusting in to jab him in the neck. Lightning flashed behind his eyes and he crumpled to the floor.\n\nChapter 10\n\nEven at the personnel carrier's top speed, which they were using, it took them close to ninety minutes to catch the Empress skimmer on the outskirts of Barstow. They were two minutes out and closing.\n\n\"Mr. Sharif, can you pull up the energy output of the antigravs again?\" Gee asked.\n\nRay looked at the Major as he'd felt the climate definitely become chilly. She frowned and nodded.\n\nHe tapped into the network and pulled up the last sensor reading.\n\n\"How does it compare to the one in Las Vegas?\"\n\n\"The vehicle was moving faster through the intersection in Barstow so all readings are higher.\" Rey said.\n\n\"I'm interested in the ratios between the four units,\" Gee explained.\n\nRay did some calculations and froze when he saw where this was going. \"The rear units are using less power than they were in Las Vegas.\"\n\n\"I do not believe Ambassador Danner is within the vehicle at this time.\" Gee suggested and earned a glare from the Major. Bal nodded to her partner.\n\n\"We're within range to take control of the vehicle, Major,\" the pilot called out.\n\n\"Do it,\" she barked.\n\n\"System breached. Communication system open, Major.\"\n\n\"Mr. Levine, this is Major Cha'Risa Ash of Earth's Security Council Force. We have taken control of your vehicle. We will be stopping you for questioning in the abduction of the Altarian Ambassador Jack Danner. Have your security team drop their weapons out the window when the vehicle stops. Thank you for your cooperation with this matter.\" She switched off and looked over at Nann. \"You're up.\"\n\nThe woman grinned and positioned herself at the side door and locked her boots into the mounts there.\n\n\"Major! Gunfire inside the vehicle! One shot!\" the pilot called out.\n\n\"SHIT! Get us down there and stop that vehicle!\"\n\nThe side door retracted up into the ceiling and Nann's sniper gun came online. The barrel snapped into place and the electromagnetic coils instantly charged with a high pitched hum. The gunsight on Nann's helmet snapped down in place in front of her eyes and she grabbed the handles which directed the barrel and held the triggers.\n\n\"Bring the windows down,\" Ash ordered.\n\nThey could see the large vehicle coming to a stop just ahead on the road. The moment the windows dropped two of the mercs inside leaned out and opened up on them.\n\nNann tapped her triggers twice and the heads of the shooters disappeared in a red mist.\n\n\"Mr. Sharif! You must get the navigation records from the vehicle as quickly as you can!\" Gee exclaimed.\n\n\"They are attempting to lock us out. That's not going to happen.\" Ray said, his hands flying over his controls.\n\nBal looked at Gee. \"I believe the soldiers may have killed Mr. Levine.\"\n\nNann chambered a special round and fired it into the open window of the luxury vehicle. The payload went off and the car filled with a caustic gas. Extremely uncomfortable when breathed and especially reactive on tattooed skin. Two more mercs burst from the vehicle firing on the carrier. Nann hit one in the spine taking his legs out from under him and punched a hole in the other one's chest. The crippled merc ate his gun rather than be captured.\n\nThe round that went through the window also had a sensor pack which reported no one alive in the back. No one with Altarian genetic material. Maury Levine was dead. The driver in the front was dead sitting next to the last remaining merc who was trying to do something nasty to the vehicle's computer.\n\n\"Fuck you pal!\" Ray barked and set off the emergency restraint system around the man. He was hit from three sides by cushions at maximum pressure. Unfortunately this broke his neck so they lost their last chance to question one of the mercs.\n\n\"Why the fuck did they do that?\" Ash barked.\n\n\"They are mercenaries. Perhaps they were paid by Mr. Levine or a third party to ensure they were not taken alive.\" Bal suggested.\n\nThen they were on the ground and the back door opened. Leo and Maxim rushed out and dashed to the vehicle but they confirmed that Jack was not inside.\n\n\"Did you get the locations they traveled to?\" Gee asked Ray.\n\nThe man looked at the Major and she gritted her teeth. \"They stopped at the second airport on our list,\" he confirmed.\n\n\"We must go there now.\" Gee said.\n\n\"We have to wait for local law enforcement to arrive and take control of the scene. They are on their way. Ten minutes out.\" Gee sat back and shared a worried look with Bal.\n\nDue to the ill prepared nature of the local police who arrived it took another fifteen minutes to get additional units on scene to guard the crime scene until the state police could come. Only then were they able to get underway to head for the airport.\n\nMajor Ash sat across from Gee and felt her cheeks burning. \"I want to apologize for not listening before.\"\n\n\"We understand your decision.\" Gee said.\n\n\"I'm grateful for that understanding. You were right and I wasn't. You could be telling me 'I told you so',\" she said contritely.\n\n\"That would not be helpful behavior. We cannot afford to waste energy on such trivial matters. Nothing matters but finding Jack- Ambassador Danner,\" Gee slipped once more.\n\nAsh smiled and Nann leaned forward. \"What kind of man is Jack Danner that he inspires such fierce devotion?\" the redhead said with a grin.\n\nGee looked at the woman with nervousness but nodded. \"Jack is a good man. He strives to do his best in all things though he is not always successful. He cares deeply for his family and friends and does not hesitate to act in protecting them even at risk to himself. He is also silly and playful and often exasperating.\"\n\nBal frowned and nodded but they saw a fondness in her as well. Ash and Nann shared glances.\n\n\"Then let's find him,\" the Major said.\n\nChapter 11\n\nJack's next recollection was a loud droning which was murdering his thumping brain. He cracked open his eyes and saw... almost nothing. The interior of the plane he was in, shackled once more to a chair, was pitch black except for the dimmed lights from the controls in the cockpit. The two men were up in the first two seats flying the plane. Or rather the one on the left was flying and the other one didn't look so good. His left arm was wrapped in bandages which were soaked through with blood. The pilot was wearing some kind of goggles. Night vision? Jack looked out the window and saw the tree tops racing by seemingly just under the plane. His stomach threatened to climb up into his throat and he must have made a sound as the injured man peered back at him with a look of pure hatred.\n\n\"YOU! Shut the fuck up!\" he grunted.\n\n\"Dave. Conserve your strength.\"\n\nSo injured guy was named Dave. Jack took stock of his situation. He was shackled to a chair in a small vintage, propeller driven airplane, flying ridiculously low... to avoid detection maybe? He still had on the glittery suit and one of his captors had a very bad injury on his arm. Potentially a mortal wound. How it happened he had no idea as it must have happened while he'd been unconscious.\n\nHe glanced out the window again and looked up this time. He found some familiar constellations and determined they were heading west. He was going to go out on a limb and say they were headed towards Los Angeles. As good a guess as any he supposed.\n\nA short time later the radio crackled. The pilot looked over at Dave but he was breathing shallowly and looked unconscious. He flipped on his mic. \"Inbound,\" was all he said.\n\nJack looked out the window and could see a wide glow on the horizon but everything below was blackness. He held his breath as the pilot made adjustments to slow them and take them even lower. Jack began to see spots in front of his eyes when the wheels screeched as they landed. He gasped in a breath and tried to settle his nerves. The plane taxied for a long time then stopped. The interior lights went off and Jack couldn't see anything.\n\n\"Dave, we're here.\"\n\nSilence.\n\n\"Dave?\"\n\nHeadlights from a car outside suddenly lit up the inside of the plane. Dave was dead. His bandage was saturated with his blood. The pilot was staring at Jack with murder in his eyes. He picked up the shock stick and jammed it against Jack's chest.\n\nOnce more lightning shot through Jack's body. Then he heard a sharp crack sound and the pilot dropped to the floor, his blood and brains splashing against the opposite window.\n\nJack's consciousness began to slip away once again as a face outside his window peered in at him. Something familiar... then nothing.\n\nChapter 12\n\nIt took twenty more minutes before the personnel carrier reached the remote airfield.\n\nThey landed and fanned out as they approached the building. Bal discovered a large drum behind the building which still had some residual heat from an intense fire within it. Something was burned in the drum recently. They moved to the front door and saw it was open. Gee noted the marks in the dust indicating a number of feet recently moving through the door. She slipped inside with Bal following closely. Leo and Maxim were at their heels but gave the all clear shortly after confirming the building was empty.\n\nThe Major entered with Ray and found Gee and Bal staring at a chair bolted to the middle of the floor in the otherwise empty garage. A pile of chains lay on the floor behind the chair. Bal knelt to scan the chains.\n\n\"Traces of Jack's cells on the chains. He was here.\"\n\n\"The barrel.\" Gee asked and the hair on Leo's and Max's necks stood on end from her tone.\n\n\"Not enough residue inside to be a body and the temperatures required to turn his bones to ash would have slagged the barrel as well.\" Bal explained. Gee sighed with relief as did the two soldiers.\n\nThey spread out and Leo called out when he found something. Gee and Bal were immediately at his side. He looked a little uncomfortable being the focus of their attention so he just pointed to his finding.\n\n\"The dust is thick along this bench except for here. The stack of clothing has been disturbed. There is also boot shaped gaps in the dust.\n\n\"They burned his clothes and dressed him in something from here.\" Gee guessed. She picked up the next garment on the pile and unfolded it.\n\nThere was a snort from the doorway. Gee and Bal turned to look at the Major.\n\n\"They dressed him as Elvis?\" she grinned.\n\n\"That they dressed him at all is a good sign,\" Bal indicated and the Major's grin dimmed as she nodded.\n\n\"Major! I have blood!\" Nann called out over their comms. Bal took a quick image of the suit Gee was holding up and they all rushed outside to join the sniper.\n\n\"I followed the tracks from the door and some led to a spot where the Empress was parked. The other tracks led to the paved surface leading to the runway. Then I saw this.\" Nann explained as she pointed to the ground.\n\nThe dirt was disturbed quite a bit and there were splashes of blood in the sand. Bal knelt beside the area and ran her scanner over it.\n\n\"A struggle?\" the Major asked. \"Did Jack fight back?\"\n\n\"Not sure. Look here. There are two deep divots in the ground and one seems to have blood on it. The divots are likely from Jack's horns when he fell on his back here. The fact that there's blood on the hole likely means his horn had blood on it-\"\n\n\"Which wasn't his.\" Bal remarked. \"None of the blood is his. There's some flesh in the hole as well which also isn't his. From the foot prints and Jack's impression in the sand I think he was being carried by two men and one dropped him, Jack's horn injuring the man in the process.\"\n\n\"How sharp are his horns?\" the Major asked.\n\n\"It's just the points you must avoid but they're sharper than your sharpest blade. Does your blade sharpen itself constantly?\" Gee asked and the team's eyes widened.\n\nGee returned to examining the patterns and footprints in the sand. \"The injured man was led onto the pavement. Then Jack was dragged to the pavement as well.\" She looked out at the dark strip of concrete. \"What kind of air craft could carry three passengers, travel without being detected, and what kind of range would it have? What abandoned airports are within that range?\" She looked over at Ray whose fingers were flying over his terminal.",
        "\"I got one better than that. This place made me think of those old movies involving drug smugglers. They used small planes and flew really low to avoid detection. I tapped into the weather imaging satellites and found a thermographic image of this region taken about an hour ago. There is an anomalous heat signature about two hundred miles due west where nothing should be. The streak pattern it made could be the exhaust from a propeller plane. Internal combustion engines give off a lot of heat.\"\n\n\"Where would it land?\" Gee asked intensely.\n\n\"Only two places along that course and one is owned by the air force so that's not a likely candidate. The other is next to a Gate Shipping Terminus. Where goods are placed in shipping containers for sending through the larger gates at the Los Angeles Gate Terminal.\"\n\n\"THAT'S IT! That's how they are going to get Jack off planet!\" Gee yelped and started to run for the personnel carrier. Bal was right behind her and the others quickly caught up. Once they were inside the Major barked out an order to head for Los Angeles at top speed.\n\n\"We have a little problem, Major. We've been flying a maximum speed all night so we're going to have to stop to refuel. That means stopping in Baker but they have no rapid recharging stations. It will take thirty minutes to recharge there. We could reach Barstow which does have rapid recharging stations if we didn't use top speed. But we'll lose more time that way.\"\n\n\"FUCK! Get us to Baker!\" the Major barked and the carrier lifted immediately. She cursed herself once more for not listening to the Altarian. She wouldn't make that mistake twice. \"Ray, get me in touch with the Los Angeles Gate Terminal.\"\n\nMoments later a face appeared on the screen before Ash. \"Los Angeles Gate Terminal, how may I direct your call?\"\n\n\"This is Major Cha'Risa Ash of Earth's Security Council Force. I'm placing the Commercial section of the Terminal on lockdown. The Altarian Ambassador Jack Danner has been abducted and we believe he is being smuggled off planet through one of the cargo gates.\"\n\nThe man's face showed his shock. \"I'll have to contact my supervisor.\"\n\n\"DO IT NOW!\" the Major barked. The screen snapped to the hold image of the Terminal buildings at night. A current image. Sappy music played and the Major groaned.\n\nA minute later the image snapped back to the clerk. He looked definitely frazzled. \"Uh, I can't locate my supervisor and the Terminal Administrator isn't answering her comm. I don't have access to the codes needed for a lock down!\"\n\n\"Find them and lock it down! Contact me when it's done!\" she growled and hung up.\n\n\"Holy fuck! What does it take to light a fire under their asses!\" she said incredulously.\n\n\"Maybe you could just order an airstrike and set the place on fire,\" Ray said with a grin.\n\nChapter 13\n\nFuck he was hot! Jack struggled to breathe. His head pounded from his repeated experiences with the shock stick but he opened his eyes and saw he was now chained to a metal rack inside a long metal box. It looked like a shipping container. Like the ones they shipped products through the gates to other worlds in. He got a really bad feeling about this.\n\nHe was wearing a breathing mask but it was too loose and the scorching temperatures in the container were drying out his lungs. He couldn't snug down the straps on his mask so... he was going to die.\n\nCrap, crap, CRAP!\n\nHis head slammed back against the rack and a hand covered the face plate of his mask. The straps were pulled tight and the cool moist air being fed to the mask were a welcome balm for his lungs.\n\nThe hand pulled away and he could see a man standing in front of him. He was wearing his own protective mask but he also had a suit to protect his skin. The leather and rhinestones weren't doing much to keep the moisture in Jack's body.\n\nJack looked closer at the man inside the mask. The scruffy beard was new but he recognized him! \"Director Goodson?\"\n\n\"No, just Goodson now. I no longer work for the agency. You should know that. You've had them hunting for me since... since before you turned into a freak.\"\n\n\"Hey, I'm not badmouthing your crazed lunatic beard... oops.\" Jack jabbed back.\n\n\"As much as I'd like to rip that mask off and watch you shrivel into a sad little raisin, my customer wants you alive and is paying me a great deal of money to deliver you in that state. So for now it's just good night.\"\n\n\"But I'm not sleepy! Tell me a story! You know, the one where you think you're going to get a lot of money for me but really you're just going to end up dead in a gutter on some alien world. Discarded like so much trash.\"\n\nThe man glowered at him but Jack had scored a point. There was real fear in the man's eyes. Fear and doubt. Jack could work with that.\n\n\"Seriously, tell me what you're involved in. I may be able to help,\" Jack ventured.\n\nGoodson scowled and reached up beside the breathing mask. Jack heard a hissing noise and his vision began to go blurry.\n\n\"No! Wait...\" he started then darkness.\n\nCold. Jack's mind protested the ping ponging between temperature extremes. A shiver shook through his body and he suddenly needed to vomit. His eyes flashed open and he saw he was still wearing the mask so he fought the nausea with everything he had and barely kept it down.\n\nHis body continued to shake but in his weakened state even that was feeble.\n\nHe heard voices in the distance, still too far away to recognize words, so he took in his surroundings. Still chained to the rack but no longer in the shipping container. He wasn't sure what that meant.\n\n\"I don't understand why I can't deal directly with the client!\" argued a voice he recognized, Goodson.\n\n\"They don't works without a middlemans. I keeps telling yous\" replied a slurring voice Jack didn't recognize. \"I verify the products is genuine and yous get paid and leaves. That's how it's done.\"\n\nGoodson grumbled and opened the door leading into the room where Jack remained on the rack.\n\nThey walked in and Goodson reached up and yanked the mask off of Jack's head roughly. He stepped aside so the other being could see Jack clearly.\n\nThe short scaled Sinosian stepped forward to peer up at Jack's face. It had pox all over its body and rot had set in. It probably didn't have long to live.\n\nThe stench hit Jack and his weakened stomach rebelled. He couldn't hold it back this time so his stomach contents surged up and out, over the face and body of the Sinosian. It screamed in terror as it tripped over its own feet in its haste to escape and fell onto its back.\n\n\"YOUS POISONS ME!\" it wailed trying to scrape the stuff from its scales.\n\nGoodson watched the Sinosian with amusement. \"It's just vomit. He had a reaction to the gas. Don't get so excited!\"\n\nThe Sinosian went into shock, trembled violently, and died. Goodson stared at it in dismay and just a little panic.\n\nJack saw movement by the doorway and saw the three cowled figures enter the room.\n\n\"Oh fuck.\" Jack moaned in dread.\n\n\"Exactly! Oh fuck! That was my contact!\" Goodson growled.\n\n\"No. You made a deal with the Allsa Komanae? They don't honor deals. We're both good as dead.\"\n\nGoodson looked up to see the three cowled figures standing before them.\n\n\"Mr. Goodson. You attempted to sell our product to a Sinosian? You tried to double cross us?\" said the Allsa Komanae in the center, menacingly.\n\n\"No! He said he represented you-\"\n\n\"LIES!!!\" the voice hissed harshly.\n\n\"Hold on-\"\n\n\"Save your breath Goodson. They hired the Sinosian so they could accuse you of cheating them. They probably poisoned the fool so he'd die as they arrived. It's how these bastards operate.\" Jack growled.\n\nGoodson stared at Jack, the hate in his eyes plain to see.\n\n\"Hey, you're the one making deals with the devil. This mess is on you man. You've killed us both.\" Jack wheezed as his strength ran out. He rested his head back against the rack as he looked at the three, waiting for his death.\n\n\"Now wai-\" Goodson stepped forward and found himself impaled upon a fine metallic filament. It didn't hurt... until all he felt was pain. Every nerve in his body was screaming in absolute, unending agony. He couldn't even make a sound though his jaw dropped open in a rictus of despair. There was a sudden crackling sound and Goodson toppled onto his back. Jack looked down to see the expression of agony frozen on the man's face, his eyes bright red from the burst blood vessels. Jack shuddered and closed his eyes.\n\n\"It's your turn Mr. Danner. Would you like to beg for your life?\" the cold voice from the cowl whispered in delight.\n\n\"No.\"\n\nThere was a pause. \"No?\"\n\n\"You hold no significance. I no longer see you.\" Jack decided he'd go out giving his foes one last kick in the balls. He'd learned the Allsa Komanae's greatest obsession was status. Mattering mattered most to them. So, they did not exist. The ultimate insult.\n\nThree almost identical squeals of rage vented from three cowls and went on and on. Yet... he was alive. Interesting.\n\nMiddle guy's scream went up another octave as Jack looked away undisturbed by their outburst. The Allsa Komanae began to attack but was quickly knocked to the ground by the others and stomped a few times. His squeals became high pitched plaintive wails and the stomping immediately stopped. A little push and shove ensued between the two still on their feet then the one on the left took center position. The one on the ground picked itself up and took its new position. The new center reached out and touched Jack's throat with a metal rod and Jack's nerves overloaded. As he tumbled into oblivion he worried about the effect these constant shocks might have.\n\nChapter 14\n\n\"What do you mean not ALL shipments are stopped during a lock down! What the hell do you think lock down means!!!\" Major Ash yelled at the Terminal Administrator as they questioned her in the main boardroom of the Terminal building. Two police officers stood by the doors waiting to take the Administrator once she'd been questioned.\n\nThe clerk they'd spoken to had performed a miracle in locating his supervisor and got the codes for the lockdown. But when the Major arrived at the Terminal they discovered a dozen containers had been sent through the gates to a number of different destinations during the lockdown.\n\nThe clerk had grilled his supervisor's secretary and bluffed she would be facing criminal charges for obstructing an order from Earth's Security Council Force if she didn't talk. She caved and told him her boss was having an affair with the Terminal Administrator. Triangulating on the Supervisor's active but muted comm, they'd finally been found in a hotel across the street.\n\nThe Major would put in a good word for the clerk to be promoted into the supervisor's position as that position would be opening up very soon as would the Administrator's.\n\n\"Containers flagged as medical supplies being rushed to their destination due to medical emergencies like plague outbreaks cannot be delayed,\" the Administrator insisted.\n\n\"Did you verify the destinations have officially registered these emergencies?\" Gee asked.\n\n\"I don't recognize your authority,\" the woman belligerently answered the Altarian.\n\n\"Answer the question!\" the Major yelled.\n\nThe woman jumped and looked at the officer. \"It's standard policy!\"\n\n\"Only if the emergency is officially registered, which you must verify. Your policy is suspiciously incomplete.\" Gee said and received a sour look from the woman.\n\n\"Well, even these containers are scanned prior to being shipped through the gate. No one could be inside the containers without being detected. Many have internal environmental conditions no one could survive,\" she suggested.\n\n\"We will need to see these scans for the containers.\" Gee said to the Major. \"If we eliminate them then the Ambassador is likely still on Earth.\n\nThe Major gestured for the police to take the Terminal Administrator into their custody. There would be charges filed. At least she would be fired for incompetence. At worst she was looking at time for smuggling.\n\nOnce they had the room to themselves Ray flipped on the boardroom's huge display wall. \"Here are the scans. Only one of the emergencies was registered. The scan is clean. Medical supplies only. The other eleven went out to planets known for dealing in contraband. Someone in the Terminal may be working for smugglers,\" Ray said.\n\n\"Put a bookmark in that issue for now. Anything anomalous in the scans? Any heat signatures from stowaways?\" Ash asked Ray. He frowned and shook his head.\n\n\"Silver. Can you detect silver content in the composition of the shipments?\" Bal asked.\n\nRay looked puzzled but ran a search algorithm against the scan values of the containers and one had a large quantity and a second had only a small amount.\n\n\"The second one. What was in it and where was it going?\"\n\nRay pulled up the details. \"It indicates it was filled with a growth enzymes. Used for manufacturing pharmaceuticals. The interior was kept at close to 170 degrees and almost zero humidity to keep the enzyme dormant. It was shipped to Rehm.\"\n\nThe Altarians froze and glanced at each other in worry.\n\n\"Why silver and what's significant about Rehm?\" Ray asked.\n\n\"Ambassador Danner's horns both contain pure silver in small amounts. Approximately the amount the scan detected. Rehm is a hub world like Earth but with fewer destinations. The Grellians, the Jhan Jnneg, the Dankerel Protocol... and the Allsa Komanae are all direct trade partners with the Rehm.\" Gee said.\n\n\"The Grellians I've heard of and everyone knows about the Allsa Komanae but the other two are new to me,\" the Major said.\n\n\"The Jhan Jnneg are hive mind insectoid race who cannot travel through the gates themselves. No one knows why but their mental link breaks once they cross the threshold of a gate and they become catatonic in a singular state. The theory is their consciousness is somehow bonded to their planet. The Dankerel Protocol don't see any need to leave their world when others can come to them. Only on the rarest occasions will you see one traveling and rarely will it travel for long. No, we don't know why they call themselves that.\" The question died on Ray's lips.\n\n\"The Rehm are facilitators for the others. Their entire society is based on acting as agents for the others. The Grellians are racists and restrict their interactions to their own kind and the Rehm. They do travel through the gates but will only interact with others when they must.\n\nGee sighed and had a sick look in her eyes. \"The only race amongst these who might have an interest in Jack are the Allsa Komanae. He was attacked by one and injured it badly. Its companions stomped it to death. The abduction may be retribution from that event.\"\n\nEveryone was silent as the words sunk in. If Jack was in the hands of the Allsa Komanae his continued survival was not likely.\n\n\"We need to report but first we need to follow the lead to Rehm. Bal and I will go alone. I understand your authority does not extend beyond Earth.\" Gee said calmly.\n\nThe Major looked at the two black Altarians and admired their bravery but she'd be damned if she'd let them step into what could be a trap and was at minimum very hostile territory. Besides, Ambassador Danner might not have been in the hands of the Allsa Komanae if she'd listened to Gee in the first place.\n\n\"I'll be going with you as a private citizen to assist in the search and rescue of the Ambassador,\" she said.\n\n\"I will too. Leo and Maxim have always wanted to visit Rehm, right boys?\" Nann grinned and the grins they gave her in return were just a little blood thirsty.\n\n\"Ray, I need you to find the source of the contract. It's possible Maury Levine grabbed the Ambassador for his own purposes but he handed him off to parties unknown who somehow had connections to get him through the security of a major Gate Terminal. Follow the money. Also, have the local authorities find the transport that got the Ambassador to the Gate Shipping Terminus. Find me evidence of his presence. I'll need that report when we get back,\" the Major ordered.\n\nRay breathed a sigh of relief as his tech skills would be useless to them on Rehm. While he was skilled at using his weapons his favorite was his brain. He nodded to his boss and caught Nann's smirk. He flipped her the bird.\n\n\"Are we going to be able to get through Rehm's Gate Terminal with our weapons?\" Nann asked.\n\n\"How much will you need to carry?\" Bal asked.\n\nNann frowned sadly at her rail gun and stepped out of the augmentation suit. She looked to Ray and he linked it to his terminal and walked it over to stand behind him. Maxim handed Nann a slim rifle from the pack at his feet. She took off the barrel and snapped it in place against the stock.\n\nLeo and Maxim both showed their compact assault rifles which matched the one the Major was carrying.\n\nBal and Gee nodded. \"You can carry your ammo in your pockets but we will carry the weapons through. You'll get them back once we are outside the terminal.\"\n\nThe team looked at the two agents in surprise.\n\nGee and Bal held their hands out for the weapons. The Major was first to hand over her assault rifle which disappeared inside Bal's gown. Nann gave her the slim rifle and that disappeared as well. Bal's gown now only looked a little bit more bulky than before. Gee took Leo and Maxim's weapons and everyone confirmed they had sufficient ammo in their pockets.\n\nThey had to move so they nodded to Ray who was already lost inside his digital world and headed to the Commercial Gate Building. The Gates weren't any different than the passenger ones except for size. They ranged from large to huge depending on what was being shipped.\n\nThey marched directly up to the Custom's desk. A Tik was operating the cargo gates as these were large enough to allow for military invasion, something the sentient mechanical race would not allow with the Gate Network they administered, managed, and maintained. Tik's resembled large chrome garbage cans except for their sensory bands, metallic, retractable tentacles, and their ability to fly courtesy of their internal antigrav. There was a tense moment when the Tik passed a scan over the two Altarians. It paused before it spoke with the security agents.\n\n\"Greeting Gee and Bal! I am Jerrican. What is your destination and purpose of your visit?\"\n\n\"We are on a search and rescue mission for the Altarian Ambassador Jack Danner who was abducted. We have reason to believe he was smuggled through this terminal in a transport container delivered to Rehm,\" Gee stated calmly.\n\n\"The scans of all recent containers did not register illicit passengers,\" the Tik responded.\n\n\"The container in question had environmental conditions to hide the passengers.\" Gee held up her comm to show the Tik the ID for the container. \"If you scan for silver you will find silver content which is a reasonable match to the silver on his horns,\" she finished. The Tik interfaced with its terminal using one of its metallic tentacles.\n\n\"The silver content and composition is an exact match to the records the Tik have for Jack Danner, born of Earth and resident of Altaria. Good luck in your search. Gate one is being directed for Rehm.\"\n\nThe others relaxed and followed the two Altarians to the huge gate.\n\n\"What a relief! I was sure the Tik detected the weapons!\" the Major sighed quietly.\n\n\"It did. Our gowns do not shield against Tik sensor sweeps.\" Gee responded just as quietly.\n\nThe Major stared at Gee in shock. \"Then why-\"\n\n\"The Tik are the most civilized beings in the Network. While they are mechanical in nature and have lifespans beyond any organic species they value life more highly than any other. That said they are also highly practical and ethical beings who know when to look the other way for the greater good. Our mission is just and righteous. The Tik have recorded Jack Danner's history and while they will not participate they approve of our mission,\" Gee explained.",
        "Before they stepped through Nann began to laugh. Ash looked at her. \"What?\"\n\n\"I just got it! Its name, Jerrican! Jerry Can!\" the redhead chuckled.\n\n\"Yes, the Tik have an odd obsession with asking Humans to give them names when they go into service shortly after their Instantiation. I am not sure when that practice began but it has resulted in some odd and sometimes less than flattering designations.\" Gee sighed.\n\nThe group stepped through and found themselves in a large and noisy space, a far cry from the cool efficiency of the LA Terminal. They made their way to the customs desk and faced the Rehm clerk. Generally short, they had round bodies with two long arms, two short ones and strong but short legs. Their skin was a dull grey green. Otherwise unremarkable, the Rehm were good at their jobs.\n\n\"Names and purpose of your visit,\" it said barely looking up from its terminal which was busy scanning them.\n\n\"Gee and Bal, Altarian Security. Searching for our Ambassador. Hired a crew for heavy lifting.\" Gee said blandly.\n\n\"Reward?\" the clerk said brightening up.\n\n\"Not my department. We're just the transport.\"\n\nThe clerk's expression dulled once more. \"One day pass for six?\"\n\n\"Yes.\" Gee answered.\n\n\"6000 credits.\"\n\nThe Major jolted at the expense but Gee just tapped her comm on the pay pad and the clerk's eyes lit up when it saw the included gratuity.\n\n\"Information?\" Gee asked.\n\nThe smile froze then a subtle nod.\n\n\"Growth enzyme shipment some hours ago. Destination?\" Gee asked casually.\n\nThe clerk placed it's comm on the surface of its desk near the edge. It scanned its records then looked towards the exit. \"Hot box. Yes. Third sector, tenth zone, grid four. Closest approximation... the Cowled Ones.\" Meaning that was the recorded destination which still covered a large area. The last bit was the most important information. Confirmation of the enemy.\n\n\"Good Business,\" Gee said tapping her comm against the other's before putting it back in her gown.\n\n\"Good Business,\" it responded with a broad smile as it read his intake of credits. The group made their way out of the terminal through the exit.\n\n\"We will need to hire a transport as the destination is not achievable on foot in the time we have.\" Bal remarked. Gee nodded and looked around. A delivery wagon was parked across the lot and the driver was eating a lunch that was putting up a fight.\n\n\"For hire?\" Gee asked it as she approached.\n\nIt crunched down on the flailing creature it was eating and looked at the group standing before it. It swallowed and took a gulp of the liquid from a bulb at its side.\n\n\"For six? Where?\"\n\n\"Third sector, tenth zone... third grid.\"\n\nEyes lit up. \"Rough zone. Hazard pay.\"\n\nGee nodded. \"There and back.\"\n\nThe driver's excitement dimmed a little. \"How long in the zone?\"\n\n\"Two hours max. We'll camo the vehicle while you are there.\"\n\nIt relaxed as the danger to it and its truck would be reduced significantly by the camouflage. \"10,000 credits. Each way.\"\n\nGee turned to walk away.\n\n\"6000 credits each way!\" it yelped before it lost her business.\n\nGee turned back and the driver quickly tidied up its meal and climbed into the truck. The team stepped through the cab to take seats on the benches in the back. Bal stepped into the back and gave the Major and Nann their weapons. She returned to the cab and Gee delivered Leo and Maxim's weapons to them. The men grinned in delight to have their weapons back and ran a quick inspection on them.\n\nAs Gee returned to the cab the driver looked nervously in the back. \"Double hazard pay.\"\n\nThe Altarians scowled at the Rehm driver and it squirmed. It was very bad business to change the deal once agreed upon.\n\n\"Already paying hazard though none to you. IF such a hazard does occur, THEN bonus on existing hazard.\" Gee growled and the Rehm meekly nodded. Gee paid it for the outbound trip and it got them underway with no further delay.\n\n\"What's our ETA?\" the Major called out.\n\n\"Seventy five minutes.\" Gee remarked as Bal moved to set up sentry at the back door, watching out the back window.\n\nThe commandos nodded and all proceeded to close their eyes. The Altarians were on watch.\n\nThere really wasn't much to see along the way. Countless rows of similar grey five story buildings and slightly taller warehouses. Only the changing location identifiers at the intersections showed they were getting closer to their destination. It was a little mind numbing but Gee and Bal maintained their vigilance through intense discipline.\n\n\"Entering third sector, tenth zone, third grid.\" the driver said.\n\n\"Take us to the far side of the grid and turn right at the intersection before the fourth grid.\" Gee instructed and got a nod in return.\n\nFinally they turned and Bal came forward again. She'd woken the team as she passed.\n\n\"Pull into this alley and pull up against that wall.\" The driver took them into the spot and shut off the engine.\n\n\"Two hours begins now. Camo truck,\" it blurted as it looked out the window nervously at the deserted lane. Not much traffic in this neighborhood at all. Traffic had been much heavier nearer the Gate Terminal and the public transit didn't even seem to come out this far.\n\nGee and Bal stepped outside and placed small metal pucks against the surface of the truck at either end. With a buzz the truck disappeared... mostly. For a casual glance the space appeared empty.\n\nThe commandos stepped out and looked back in surprise. The driver followed and smiled.\n\n\"Stay inside the truck. Within two hours we will be back.\" Gee barked.\n\nIt nodded and stepped back inside, disappearing from view.\n\nThey moved out.\n\n\"What guarantee do we have that it won't just drive away?\" the Major asked.\n\n\"The vehicle won't start while the camo is engaged and only we can turn the camo off.\" Bal stated.\n\nNann shared a grin with Leo and Maxim who were looking at the Altarian's with new respect.\n\n\"We are going to move up to the edge of grid four and begin a sensor sweep. This is likely to generate some interest as the scan is detectable. We will move fast and if you see Allsa Komanae don't hesitate to shoot as you won't be given a second chance. The Rehm's confirmation means Altaria is at war with Allsa Komanae as of this moment. Our mission has become top secret and no longer exists officially. The Queen must be given this information and will make the statement of intent.\"\n\nEyebrows went up and the hair on the back of their necks stood on end. They were involved in, no, they were making history but few would ever know.\n\nThe team's eyes scanned for enemies as Gee and Bal prepared their scanners. They angled the devices outwards away from each other to cover a roughly spherical zone. With a nod they set off at a trot with the commandos in pursuit. Twenty minutes later they had covered thirty percent of grid four without picking up anything. The occasional Rehm office worker ignored them as did the Rehm warehouse techs.\n\nThey were moving into the older, less used part of grid four when Bal's device flashed a green light. It picked up human DNA ahead. They heard an odd warbling and Gee gestured for everyone to scatter. Nann was the first to disappear from view as she darted into a side alley. The men split and moved to flanking positions. Gee and Bal tucked away the sensors and pulled out their pistols.\n\nThe Major looked at their compact weapons and wondered at their firepower. She felt comforted by the solidity of her assault rifle.\n\n\"Major, we will take center. If you could cover our retreat that would be helpful.\" Gee said.\n\nAn Allsa Komanae tumbled from the rooftop just behind them. Then two more on roof tops ahead of them. The warbling ahead got louder then cut short with a squeal.\n\nMajor Ash smiled to herself. That would be Nann.\n\nThey glanced around a corner to see a wide courtyard next to an old warehouse. Three dead Allsa Komanae lay next to the shipping container they were looking for.\n\nThe space acted like an acoustic amplifier. They heard the distant chuff sounds of Leo and Maxim's assault rifles firing and the lighter snap of Nann sniping from a rooftop somewhere.\n\n\"I need one of the Allsa Komanae for questioning,\" Gee said quietly to the Major. She relayed that to Nann.\n\nSix Allsa Komanae suddenly burst from the warehouse doorway with guns blazing. Gee and Bal each snapped off three shots painting the hoods of their targets as tiny missiles launched from their guns. The Altarians dove for cover pulling the Major behind a building's corner as their rounds reached Mach one racing towards each target. The ground shook as the six missiles detonated within the six cloaks.\n\n\"Apologies, we did not have time to calibrate the output on the rounds for personnel,\" Gee explained to the Major than the Altarians helped her up. They peered around the corner and a trench had been blasted into the ground in front of the warehouse which no longer had any glass in its windows. A single Allsa Komanae stumbled out of the building and paused in front of the trench.\n\nBal tapped her weapon's controls quickly and fired on the stunned enemy. This time the round went off with a smaller concussive blast six feet before the remaining Allsa Komanae tossing it back against the wall of the building to fall slumped in a pile. Nodding to each other the Altarians bolted from cover and raced across the open space to leap over the trench and grab the robes of the downed enemy. They dragged it inside and covered the room with their weapons.\n\nThe Major ran across the space after the surprisingly fleet Altarians and glanced down to either end of the courtyard. Maxim and Leo guarded their flanks and a glance up and behind caught Nann's wave as she indicated she was watching from above.\n\n\"Clear?\" Ash called out.\n\n\"All clear.\" Gee's voice called in return.\n\nThe Major stepped inside and saw Bal leaning over and speaking quietly to a whimpering Allsa Komanae which was lying on the floor. She followed Gee into the next room and the stench made her gag. There was a body on the floor being dissolved from the feet upwards. The goo had only reached the stomach so they saw the face clearly. Human. Male. Older Caucasian with a rough unkempt beard. Look of horror and pain frozen on his face.\n\nA second body was off to one side. A Sinosian, in an advanced state of rot.\n\nGee touched a device to the man's neck. She looked back at the Major. \"I recognize this man. Director Goodson of Earth's Trade Commission. He was a wanted criminal, responsible for a previous abduction. He obviously still has deep connections to have pulled off such an operation but he had no experience with dealing with the Allsa Komanae. We were lucky to have gotten here when we did. The clean-up team didn't have time to finish so we must be close.\"\n\nThe agent scanned the metal rack and picked up traces of Jack's genetic material where he'd gripped and scraped his fingers against the rough edges of the metal. Jack had been here and he'd been alive.\n\n\"Major! We have incoming! A large number of Allsa Komanae. I slowed them down a little by taking out their drivers from a distance but they are all on foot now making their way to your location. You need to make tracks.\" Nann said over the comm.\n\nGee and Ash rushed back into the outer room to see Bal backing away from the moaning Allsa Komanae. She gestured for them to be quiet and led them out. Then all three raced for the other side of the courtyard. Leo and Maxim were double timing back to their location as well.\n\nNann was already on the ground and they ran as quickly as they could. A minute later there was an enormous thump and the ground heaved under their feet causing them to stumble.\n\nThe Major and Gee looked at Bal who was smiling. \"They found my present.\"\n\n\"How much did you use?\" Gee asked.\n\n\"All of it.\" Bal grinned. An enormous fireball was climbing into the sky behind them. Leo and Maxim grinned widely as well.\n\nThey picked up their pace once more and managed to get back to the alley in a quarter of the time they'd taken to get to the warehouse. As they rushed up to the spot where the truck should have been the Major felt a knot of dread forming in her stomach. Gee tapped her comm and the truck was suddenly there. She and Bal pulled their camo devices from the truck's sides and they all piled in as the Rehm screamed at them for disabling the truck.\n\n\"How did you know it was disabled unless you attempted to leave prior to the arranged two hour window?\" Gee growled and the Rehm instantly shut up.\n\n\"Make haste as we likely have a large group of very angry Allsa Komanae following us.\" Bal mentioned.\n\nThe Rehm screeched and got the truck back out on the main thoroughfare. It pushed its speed up just a little higher than the limit and cursed under its breath.\n\n\"Take the next main left.\" Bal called out from the back window.\n\nThe Rehm's curses turned to whimpers but it slowed and turned as directed.\n\n\"Take the next right.\" They went right. This route was far less traveled but moments later a large armored personnel carrier swung into position behind them and began to accelerate.\n\n\"We have a tail. We can't outrun them and they are in an armored vehicle. Suggestions?\" Bal asked.\n\n\"Do you have any more of that stuff you used back at the warehouse?\" the Major asked Bal.\n\n\"No but Gee does.\"\n\n\"How is it triggered and how much would we need to take out the windshield?\" Ash asked.\n\n\"Exposure to air causes the reaction and only three seeds.\"\n\n\"Seeds. Geezus, it's organic?\" she gasped then looked at her sniper. \"Nann, I need you to hit the windshield with a payload round. Guys, you know what to do once the windshield is down.\"\n\nLeo and Maxim grinned widely and prepared their guns.\n\n\"Give me the round.\" Gee said and Nann placed it in her hand. The tip was soft and would collapse letting the payload chamber break open on impact. Gee saw the payload chamber was filled with a gel. This would support and isolate the seeds but not for long. She looked at the sniper. \"From the time I hand it to you, you will only have ten seconds to fire the round before it begins to react... explosively.\"\n\nNann nodded with an intense smile on her face.\n\nLeo and Maxim stood by the rear windows. They could see the carrier getting closer and an Allsa Komanae popped up in the gunner's position on top. Leo looked at Maxim. \"Bonus target.\"\n\nGee turned her back on the others and carefully injected the gel with four seeds, one extra just in case, and sealed the round. She handed it to Nann who chambered it in the rifle and nodded. The men knocked the windows out and immediately leaned away. Nann aimed and pulled the trigger before the carrier driver recognized that the window panes had popped out of the back doors. Nann's bullet hit the window dead center and the gel flashed away as it was designed to do. The seeds were burning their way into the reinforced polymer when they went critical and blew the entire windshield into the cabin. The shockwave shoved the delivery truck forward and everyone grabbed a support.\n\nLeo and Maxim leaned back in and fired two grenades into the carriers open window to turn the injured bodies into giblets. Maxim beat Leo to punching a hole in the gunner on top. The carrier continued to accelerate towards them.\n\n\"Hard right!\" Bal yelled and the truck took the next turn at speed. It bounced off the wall of a building then got back on track. Their tail continued in a straight line continuing to accelerate.\n\n\"Hard left at the intersection and push the speed to maximum.\" Bal called out.\n\nThe Rehm was moaning constantly now. Gee leaned in close. \"Double hazard pay and we'll replace the truck.\" That stiffened the lip of the driver and the accelerator went to max.\n\nGee's comm pinged with an incoming message. The Customs agent was informing her that the terminal was blockaded by Allsa Komanae vehicles. Gee sent the agent credits for the information.\n\n\"We have a problem ahead. The terminal is surrounded by Allsa Komanae vehicles.\"\n\n\"Hard left!\" Bal called out and the truck screeched around the corner and bounced off the building once more. \"Hard right!\"\n\nThey swung out onto the road they'd been on previously but now they were behind the runaway carrier which was crushing through everything in its path. Gee caught on to her partner's idea immediately.\n\n\"Stay behind it but not too far back,\" she said to the driver. It just nodded as it glanced at the carnage of twisted metal on the sides of the road.\n\nGee heard the chuff of the assault weapons being fired in the back and looked to Bal.\n\n\"Nothing to worry about.\" Bal reported.\n\nThey continued on with Leo and Maxim gleefully picking off the reckless few who took up the chase. Then suddenly no one was following.\n\n\"They're falling back as the rest are all gathering at the Commercial Gate Terminal,\" the Major surmised.\n\nGee shared a look with Bal then tapped out a message. The response came back momentarily and she sent off more credits. It might work.\n\nChapter 15\n\nThe Allsa Komanae techs had been trying to remotely connect to the controls of the carrier but it was too badly damaged. They pulled the vehicles back from the street it would exit from. Even with its armor it couldn't breech the wall surrounding the Gate Terminal. Their runaway would be destroyed against the impenetrable wall and in the chaos the cursed Altarians and the savage Humans would attempt to breach their line to get back into the Terminal and through their gate.\n\nThe Field Leader surveyed the Secondaries prepared to fight and smiled. Their numbers were just too great and they had their second carrier parked before the entrance to the Terminal. There would be no escape. The Field Leader had gambled highly when it brought through so many Secondaries to deal with this loose end. So many had already been lost!\n\nIt passed a command down the line. Any who allowed their target to get past would lose their current standing. It felt the tension ripple through the ranks and smiled.\n\nMoments later they heard the rumble of the runaway carrier approaching. The noise got louder and louder until the vehicle burst out from between the buildings. It was pushing a small fuel transport!\n\nThe carrier struck the wall and crushed the fuel pod against it. As it was designed to do the wall held and deflected the blast wave down its surface in all directions. The Secondaries closest to the blast were torn apart. Further back they were tossed like leaves in the wind to break against the parked vehicles, the wall, the ground, and each other.\n\nStanding atop the carrier the Field Leader was able to brace against the shockwave. It looked for the truck but... it wasn't there! Just as it began to issue orders the truck shot out of the roadway and drove straight into the hellish mess of the destroyed carrier. The wall continued to hold as the truck exploded far more violently than is should have. A second, larger blastwave ripped through the nearby Secondaries and the death count increased dramatically.\n\nThe remaining Secondaries hesitantly moved forward to seek out their targets but they must have died in the crash. How incredibly useless!\n\nChapter 16\n\n\"Names and Destination.\"\n\n\"Gee and Bal. Travelling with four hired hands to Earth.\"\n\nThe clerk at the Passenger Gate Terminal frowned as it looked at its screen. \"I don't see your ingress record.\" Its personal comm beeped with an incoming message from the Commercial Gate clerk. \"Oh.\"\n\nIt placed the comm on the edge of its desk and Gee tapped it with hers giving a tip for services.\n\n\"Gate 3\" the clerk smiled.\n\n\"Good Business.\" Gee said calmly as she slipped her comm away. They walked down the hall towards the gate.\n\nMajor Ash felt every hair on her body standing on end as did Nann, Leo, and Maxim. Weaponless they followed the Altarians down the hall. The Major was stunned by how simple their escape had been. They'd stopped the truck to get out and Gee slaved it to chase the carrier. Off it went struggling to catch up. Bal had left a surprise in the back.",
        "Gee paid their driver on the sidewalk with an Altarian credit slip which would pay for a replacement truck and paid it the remaining balance she owed. Then the Altarian agents had the group simply board a public bus going to the Passenger Gate Terminal. They'd seen a fireball as they rode the bus then a second much larger one which made Bal smile. Once they'd arrived they just walked in the Terminal's front door.\n\nThey knew shit was going to hit the fan any second but... it didn't. They stepped through the gate to Earth and found themselves facing armed troops pointing weapons at them.\n\n\"FREEZE! Hands up and stay where you are!\"\n\nThe two Altarians stood at the Gate's threshold with the four humans crowded up behind them. Gee took a quick glance to the left and saw Jerrican resting against the floor recharging at an outlet. One of its other tentacles was running along the floor to the bottom edge of the gate.\n\n\"By the authority of Earth's Security Council I hereby place you under arrest for possible war crimes. Step away from the gate,\" a loud voice called out. Then quieter, \"Why isn't that gate shut down?\"\n\nGee glanced over one more time and saw the word \"Go\" flash up on Jerrican's interface. She grabbed her partners hand and they leapt back with their arms stretched out, pushing the team back through the gate. They tumbled to the floor amidst yells and scrambling. The Gate closed. A siren went off.\n\n\"Unauthorized Entry! This is Altarian Security! Remain where you are!\" blared over the loudspeaker. Gee and Bal relaxed as did the Major and her people.\n\n\"Altaria? How the hell did we get to Altaria! The gate was set for Rehm!\" Ash asked. \"Did you do that?\"\n\nGee smiled at the woman. \"As powerful as that would seem to make me, no. That was done by Jerrican.\"\n\n\"As much as we appreciate the save we should go back to Earth to get this mess straightened out,\" the Major said.\n\n\"No one is going anywhere until- Oh! Agent Gee, Agent Bal! Shall I arrange transport for you to the Ministry?\" the Terminal security agent asked.\n\n\"Yes please and could you store these for my friends here for when they return?\" Gee said and handed the agent Leo and Maxim's guns. She heard the men make a little noise of disappointment. A second agent took the Major's and Nann's guns into safe keeping. Gee faced the team. \"Rest assured you will get them back on your way to Earth. If you would please join us for our debriefing at the Ministry of Security we would greatly appreciate it.\"\n\nThe three commandos looked to their leader who sighed then nodded.\n\nThe transport to the Ministry was a far smoother ride than their experience in the delivery truck. They were led to a comfortable lounge and served food and drinks.\n\n\"What are we waiting for?\" the Major asked Gee.\n\nThe door behind them pushed open and a strong voice rang out.\n\n\"The question should be 'Who are you waiting for' and I'm sorry to say it was me. My apologies for the delay. I was in meetings with my council. Did you find Jack?\"\n\nEveryone turned to see Queen Elissa standing next to Hellna, Altaria's Security Minister. Both women had looks of concern on their faces.\n\nGee and Bal approached them and bowed to the Queen and nodded to their boss.\n\n\"I'm afraid not but we do have the name of the being who ordered the abduction and a second name which could be a potential location.\" Gee began.\n\nMajor Ash perked up. This was a bit of information they hadn't heard yet.\n\n\"With the help of Major Cha'Risa Ash, Captain Nann Graf, Corporal Leo Orlov and Corporal Maxim Volkov,\" Gee gestured to each person as she addressed them, \"and Lieutenant Ray Sharif who remained on Earth, we tracked Jack as far as Rehm where we discovered he was finally collected by the instigators of the contract, the Allsa Komanae. Bal interrogated one we managed to catch alive.\" She turned to her partner.\n\n\"The Allsa Komanae was badly injured but I was able to extract a name from it as well as a second name which as Gee mentioned could be a location or the name of her race. I cannot verify the accuracy of either but it's the best lead we have. The one who ordered the abduction was Prime Ossiliss. The other name is Mahrell Drun.\"\n\n\"What? Wait? WHAT?!?\" Elissa gasped and staggered, her eyes wild. Hellna gripped the Queen's elbow and helped her sit on a sofa.\n\n\"That name... it hasn't been spoken in millennia. When I became Queen I read the histories. The Mahrell Drun... they were the only race to ever have their gate revoked. Violently. A Prime? Oh... the Allsa Komanae... their hierarchy is ruled by position. If this Prime Ossiliss is indeed from Mahrell Drun... damn their evil souls. The Allsa Komanae must be the decendents of the Mahrell Drun left behind when their gate was destroyed. Now they're being led by a Prime? This information needs to be brought to the attention of the rest of the Network Worlds.\" Elissa said.\n\n\"Sorry, who are the Mahrell Drun and what did they do to deserve having their gate destroyed?\" Major Ash asked.\n\n\"Secretly they attempted to take over the Gateway worlds through treachery and horrifying acts of violence. While presenting a face of peace and harmony they spread fear, paranoia, and rage amongst the member races and drove them to war against each other. Some races never recovered from the devastation these wars inflicted and the Mahrell Drun were almost successful. It took the full might of the oldest race in the Network who also ruled the Network with an iron fist, to put a stop to them and destroy their gate. The Allsa Komanae use some of their old techniques but without a Prime to lead them they're just a shadow of their former evil. The Mahrell Drun were said to be beautiful and charismatic but evil to their very core.\" Elissa suddenly jolted. \"And now one has Jack!\" she wailed then quickly locked her emotions down. She'd deal with them later.\n\n\"Could this abduction have been one of their actions to draw Altaria and Earth into dispute,\" the Major asked.\n\nEveryone turned to face her and expressions turned thoughtful.\n\n\"There seems to be a power at work within Earth's agencies that allowed the Allsa Komanae to expedite an abduction. Humans are the new kids in the Gateway neighborhood and we're a greedy race so we'd be ripe for manipulation. While Director Goodson was involved, he may have just been a tool used by others. I need to speak with Ray. I need to learn what he's found.\"\n\n\"Perhaps our first call should be to Earth's Security Council. I'll put a call through immediately.\"\n\nHellna used the lounge's comm to make the call and put the image up on the large screen.\n\n\"Minister of Earth Security, Mr. Steyn's office, how may I help you,\" a professional looking clerk answered.\n\n\"This is Hellna, the Altarian Security Minister. I have Queen Elissa of Altaria on the line with me and the security team in charge of locating our Ambassador. We need to speak with Mr. Steyn immediately.\"\n\n\"I will connect you now.\"\n\nThere was no lag this time. An angry looking man appeared on the screen and glared at the group before him. \"Ruan Steyn here. Am I addressing the group who started a war on Rehm? Are you harboring criminals Queen Elissa or was this action based on your orders?\"\n\nWhile the Queen was taken aback by his hostility she maintained her cool. \"Mr. Steyn, I assure you the actions that took place on Rehm were the direct result of the Allsa Komanae's abduction of our Ambassador and are therefore their responsibility.\" Queen Elissa explained.\n\n\"That doesn't line up at all with the evidence we've uncovered. The Allsa Komanae were not identified as suspects in the abduction while both the casino operator and Mr. Danner's previous employer both had motives. I'm afraid attempting to drag the Allsa Komanae into this to justify the actions of your agents on Rehm just isn't going to fly this time. We want our officers back on Earth to face the charges filed against them. If you tell me that you intend to continue to harbor them then I believe our conversation is at an end.\"\n\nThe man glared at the room of people stunned into silence.\n\nAsh stepped forward. \"Sir, if I may. Have you spoken to Lieutenant Ray Shakir? I'd asked him to follow the money trail and the evidence he collected corroborates the facts that we have gathered-\"\n\n\"Lieutenant Shakir is dead. He was killed by the Terminal Administrator who was involved in a smuggling ring at the LA Gate Terminal. She and a Terminal Security Officer were killed when Mr. Shakir returned fire before expiring. The evidence I'm quoting came from his files.\"\n\nAsh stared in disbelief at the man on the screen. Nann was on her feet, a silent scream of denial on her lips, frozen by her shock. Leo and Maxim were looking like they wanted to kill someone very soon.\n\n\"Major, don't let this situation become worse than it is. Come home.\" Ruan said to the officer.\n\n\"Mr. Steyn, rest assured we are not attempting to disrupt relations between Altaria and Earth. Nor are we looking for made up reasons to attack another race in the Network. Altarians are proud of our record for coming to peaceful resolutions. That speaks for itself. We didn't instigate this event and we will share with you all the evidence we collected as a sign of our deep respect for your legal process. We will not restrict movements of your people to keep them here on Altaria but we will also not force them to leave. Once you've reviewed the information we believe you will come to realize the true nature and scope of the matter at hand.\" Queen Elissa explained.\n\n\"I see. I'd hoped we could resolve this matter more expeditiously. It seems this has to be done the hard way. You will be hearing from me.\" Ruan ended the call.\n\nHellna looked at Queen Elissa and they shared a nervous glance. \"Without trying to sound paranoid, could he be one of the infiltrators?\" Hellna asked.\n\nMore worried glances.\n\n\"I am terribly sorry for your loss. Ray Shakir was a brilliant and good man. His murder is both tragic and terribly suspicious as his investigation would have identified the true instigators.\" Gee said sincerely.\n\nThe Major frowned deeply as she looked at Gee and Bal. \"We need to get his findings.\"\n\n\"I could send a request to Earth's Security Council-\" Hellna began.\n\n\"No, I need his report unaltered and unfiltered. The backup he kept in his personal data vault.\" Ash said.\n\n\"How do you access that?\" Hellna asked.\n\nThe Major looked at Nann and saw tears in the woman's eyes. The redhead returned her look and nodded, a steely resolve returning to her gaze. \"The Major's right. We need Ray's data and there's only one way to get it. We'll have to return to Earth.\"\n\nEnd of Part 1 "
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "nonhuman",
        "science fiction",
        "romantic"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/jacks-wage-slavery-pt-01"
}