{
    "title": "Chinatown Sunset",
    "pages": [
        "<center>NOTE: The multiple POV's are limited to the prologue..</center>\n\nI found solace amongst the dead.\n\nThey never left Montauk, not completely. Their spirits rose with the mists off the water, and I sat there on the hill watching them gather. It was the same hill where I'd witnessed my aunt's sacrifice all those years ago. We were just north of another hill, the one where my brother buried Dink, our family's other protector. \n\nThe men who tried to help me and whose lives I threw away, the men and women that I'd killed, the people who died because I couldn't save them; they all came back with the mist to remind me of how Death waited for us all. There was a peace there, an accord between them and me. By my action or inaction, they were dead. No ambiguity, no questions, just always the dead who might still be alive if I were a little better, a little smarter, a little faster. \n\nShrouds gathering, they lingered and kept me company, silent and accepting. I had no secrets from the dead. I played no role with them. Aunt. Sister. Daughter. Mother. Wife. Failure. Protector. With the dead, there is no artifice. \n\nThe living didn't get me. They prattled on about the inconsequential while I offered empty smiles. They didn't understand. There was no reason for them to. If they refused to look, they wouldn't have to see Death as he stood beside them. With normal jobs and busy lives, they could ignore his fetid breath on the back of their neck. If their nerves were ever ajangle, they didn't have to turn and confront Death, they instead turned to me.\n\nMy loved ones didn't have to worry about the dangers in the night. That was my job. \n\nThe Politician:\n\nHe looked like someone's grandpa, except for the eyes. I'd never seen such dead eyes. \n\n\"Look, this is... This is crazy. I have no intention of voting against the bill. You'll get your money.\"\n\nThe lao ban smiled. \"Maybe, but you've disappointed us in the past, Senator. Your successor will not. He will remember who owns him.\"\n\n\"Wait! Wait! The cops, they'll know I was killed. You can't risk that. We're too closely linked. I\u2014\"\n\n\"Cops like this? Senator, have you met Captain Donaghy?\"\n\nThe gweilo stepped out from the shadows. \"Sorry, Senator. Nothing personal.\"\n\nI was going to die in this squalid alley surrounded by the stench of failure and despair. As the big cop pulled out his gun, I didn't even try to scream. I just turned my head towards the discarded pallets so I wouldn't have to watch. That's when I saw the kid hiding there, her hand clenched over her mouth to stop from screaming. \n\nI nodded at her. That's right, kid. Keep quiet. Live until tomorrow. You saw nothing.\n\nThe Kid:\n\nThe lady looked just like Grandma Hu. I swear, I went after her for like a minute, but when I turned around my class was gone. It totally wasn't my fault. When I tried to find them, some other kids got in front of me. One grabbed my arm and started talking fast and in Cantonese. \n\n\"I... Do you speak English? Or can you speak slower? I'm not that good with Chinese.\"\n\nThere were people everywhere, but they ignored the six of us. He smacked me on the side of the head. \"Give. Me. Your. Money. Understand that, kid?\"\n\nHe was a lot bigger than me, and so were his friends. \"Yeah. Yeah, I understand.\" \n\nI pretended to reach into my pockets before stepping in closer and kneeing him in the balls. Turning, I began to run. He screamed and his friends followed me. My brain had no idea where I was going, but my feet took me from one street to the next, from alley to alley. \n\nMy back to a wall, I was trying to catch a breath when I heard them yelling at each other. I wound up behind a restaurant and looked around. I could choose the dumpster or some pallets. The alley already smelled real bad, so the dumpster was out. They ran right past the alley when the back door burst open. \n\nThree men stepped out. One was in a nice suit and was being pushed. A young guy shoved him behind a stack of metal drums while an old guy talked to him. The door opened again and a big white man followed.\n\nMy heart was beating hard, and I felt sick. Maybe I could sneak into the restaurant and call Mom and Dad. Pulling my phone out, I was going to take a picture of the restaurant's name. I didn't read Chinese and there was no American sign. \n\nI was waiting for the men to leave when the guy that was pushed started to cry. He was very handsome and for some reason, I liked his hair. I began filming.\n\nWhen they were done talking, he looked my way and seemed to nod at me. The white guy pulled out a gun and shot him three times. Don't scream. Don't scream. Don't scream.\n\nI tried not to move or make a sound. When the men went back into the restaurant, I put my phone back in my pocket, counted to a hundred, and began running again. \n\n\"Hey! Hey kid!\"\n\nThe voice was the white guy's. I kept running.\n\nThe Priest:\n\n\"Yes, of course we can pray for Cecelia. What's the matter?\"\n\n\"Monsignor, she... Something happened on a field trip with her school. She got separated from her class and she says she saw someone get shot. She's lost and... I... I...\"\n\n\"Okay, I'm sure her teacher is looking for her. You called the school?\"\n\n\"Yes, they're reaching out to the teacher. Father, Andrew said she sounded so scared. She's just a child. She\u2014\"\n\nThe volume was off on the TV, but I was watching as we spoke. It was the news and the reporter was speaking in front of some yellow police tape and the small crowds watching were mostly Asian people. The crawler on the bottom of the screen said that State Senator Michael Chang had been killed.\n\n\"Amanda, I'm sorry. Let me interrupt for two seconds. I have a friend. Someone who specializes in this sort of thing. I'm going to give her a call and then head over to your house. You and Andrew are home?\"\n\nThe Guardian:\n\nHe was my brother. Why would he try to destroy me? Running had been a pain in the ass since I'd healed from my broken leg. Try the rowing machine, he said. It would be less strain on the knee, he said. It got me off the crutches and then off the cane, he said. \n\nIt wasn't a piece of exercise machinery; it was a torture device. \n\nHe was right, though. Three months of daily abuse and the leg was stronger and more flexible. I had reasonable cardio without further damage to the knee. After mopping off the sweat, I threw the towel near the hamper and walked into the sauna. Stripping down in front of the mirror, I stared at my reflection. Tilting my head, I let my finger trace the contour of my oft-broken nose. Glancing at the index finger that needed surgery to repair, I used it to follow the two larger scars on my abdomen. When I twisted, the pursed, pouting evidence of the exit wound on my back caught my eye.\n\nShaking my head, I moved on before looking below the waist. Grabbing a fresh towel, I sat in the sauna and let the wet heat soothe my aching muscles. In a gentler time, this had been the garage where my Aunt Cynthia kept her cars. When I inherited the home, I converted the garage to a state-of-the-art gym. It helped keep my husband and me in shape, but now it's used just as often by our daughters as they play in their jungle gym and ball pit.\n\nMy head was resting against the tile and as I slowed my breathing, the phone rang. \n\n\"Dammit.\" \n\nSighing, I got to my feet, went back out to my clothes, and picked them up. It was Father Jesse. Straightening my left leg, I clenched the muscles twice and walked back to the bench. \n\n\"Hello, Father.\"\n\n\"Daisy, I need help. Your sort of help.\"\n\nThe Billionaire:\n\nI sat patiently and listened until she finished. \n\n\"Aren't we past this, Shiv? I appreciate your being polite and asking and everything, but just tell me what you need and you'll get it. If it was just for the kid, I'd do it. If it was just for you, I'd do it. If it was just for Father Jesse, I'd do it. For all three? Just let me know what you need.\"\n\nShe was on her second bowl of the stew I'd made last night. In many ways, our lives hadn't changed a bit. Siobhan still came by to scarf up my leftovers and was still the overprotective little sister who couldn't help but put herself on the line for those she loved. My wife and daughter were out shopping and William was on campus. The house was empty aside from me, Shiv, and Buttercup, who had her head resting on my sister's lap.\n\n\"Thanks. I know. It's... I just feel weird.\" She paused and looked at me. \"Don't give me that look. I know you'll help out. I just have to do things my way, okay? I have to actually go through the motions, make my case and ask.\"\n\nI shrugged. \"Sure. I'll get you a list of what we have available within the hour. Have you called her yet?\"\n\n\"Who?\"\n\nShe looked so innocent when she asked. I rolled my eyes. \n\n\"Oh, I don't know, Shiv. Do we happen to know anyone who is protective of kids, speaks Mandarin and Cantonese, and is deadlier than Ebola?\"\n\nHer eyes turned hard, switching from loving sister to killing machine in an instant. \n\n\"I don't need her.\"\n\n\"Shiv, call her.\"\n\n\"I don't need her.\"\n\n\"What about the little girl? Think she might need her?\"\n\n\"You play dirty, Finn.\"\n\nI smiled and shrugged. \n\nThe Killer:\n\nMy adopted niece's parents were very wealthy. Before I returned to Kentucky, they gave me a special phone so they could reach me in the cabin I had shared with my brother. It seems this phone would work anywhere and now it did in a most inopportune time. I felt it buzz and retrieved it from my pocket as I watched the men.\n\nThis was a call I could not ignore. Stealth was lost, but it wasn't needed with these men. Telephone etiquette was not something I was versed in.\n\n\"Hello, Siobhan. I apologize, but I will have to return your call in a few moments. Please do not be offended.\"\n\nStepping forward as I disconnected the call. I was on the first man before he could turn. The pommel of my knife slammed into his temple and he fell to the ground. One of his friends began raising his rifle as my knife took him in the shoulder. My boot met his head as I made my way to the third, who had been dressing the deer. \n\nIt was the first animal they had killed that I had seen them harvest. They were drunkards and petty and cruel. They'd hunt the animals for sport and not follow up to put them out of their misery. As their prey bounded away, trailing blood and in pain, the men would laugh and brag to each other. \n\nMy brother Robert would have slipped amongst them unseen and slit their throats for engaging in such barbarism on his land. Their behavior towards the helpless animals would enrage my brother Alistair, and he would encourage them forcefully to cease such depraved indulgences. Today I followed Alistair's path. If they returned, I might follow Robert's.\n\n\"What the fuck?\" \n\nHe stood, brandishing the knife, fear, and confusion on his face. Looking from one friend to the other and then back to me, he slowly stepped away from the deer and held his knife at waist height. \n\n\"Put the knife down and I will not hurt you.\"\n\nHe didn't, and I shrugged. The man made his choice. As I stepped in, he slowly and awkwardly lunged forward. Shifting, I let the blade slide past me. With his arm extended, I continued my pivot and wrapped my right arm above his elbow, and my left hand grabbed his wrist. My back was now to his front. He was a tall man, but I was also tall. I had to squat down a bit as I raised his arm, palm to the sky, placed his elbow on my shoulder, and yanked down. \n\nThe screaming ended as I spun and hit the side of his head with my left elbow.\n\nPulling out the phone, I called her back as I walked over and reclaimed my knife. \n\n\"Hello, Siobhan. I apologize for the disconnecting. Is Cynthia all right?\"\n\n*****\n\n<center>CHINATOWN SUNSET</center>\n\nOpening the tab for Wednesday, I looked at the array of supplements in the plastic container. Slowly and deliberately, I stuck my finger in and removed the Celexa. It sat on the counter while I poured the rest in my hand and swallowed them down. \n\nI needed to be me; I needed to feel if I was going to be on top of my game. The antidepressant stayed where it was when I left the bathroom. It was a game I played with myself. The effects wouldn't leave my body the same day I stopped taking the pill, but if the boost was psychological, it was still welcome.\n\nManhattan was a hundred and eighteen miles away as the crow flies. If there was no traffic, I could be there in two hours. Sadly, there is never a time when there is no traffic on Long Island. It would take me over four hours to drive in. The helicopter took ninety minutes. I read the briefing material that Finn had assembled as we flew and was comfortable with the information I had, knowing he'd update me as he found out more. And he was Finn, so he'd be finding out more. \n\nThe headphones crackled. \n\n\"Mrs. Oliviera, we're about five minutes out.\"\n\n\"Thanks.\"\n\nPutting away the folder, I enjoyed the view of the East River and lower Manhattan as we approached the heliport. I'd had a bad experience with rooftops in both Reno and Hong Kong and had to studiously concentrate on the here and now as we landed. No matter what you've seen and where you've been, you're never too jaded to appreciate the Manhattan skyline. I watched the Staten Island Ferry slowly make its way across the river and saw the South Street Seaport before we touched down. \n\nMy hip clicked as I stepped out of the helicopter. Ten years ago I could have arrived, jogged into Chinatown, kicked some ass, jogged back, and spent the night partying with Tommy. Those days were long past. I actually had to stretch as I stood on the helipad. Growing old sucked but it beat the alternative. \n\nBag slung over my shoulder, I kept the Oakley sunglasses on as I walked past the seven other helicopters and to the small parking field. A man in black slacks and a turtleneck was there with a sign that read \"Finn Corrigan.\"\n\n\"Hi. Finn's my brother. I think you're here for me?\"\n\n\"Oh, sure. Do you have some ID?\"\n\nHe checked it, called Finn, and went to grab my bag.\n\n\"It's fine. I've got it. You have the address?\"\n\n\"Yes, ma'am.\"\n\n\"Great.\"\n\nFinn rented an apartment in Chinatown for me, probably dramatically overpaying. We were there within a few minutes and I got out, still holding the bag. Chinatown had lost any authenticity a generation ago. Now it was mostly a tourist trap, but Wo Hop and other places still had atmosphere. Looking around as I got out, I smiled. I tipped the driver a fifty, walked up the two flights of stairs, went into the apartment, and emptied the contents of the bag onto the bed.\n\nI looked down at the three pistols, two knives, laced gloves, and vest.\n\n\"Hello, my darlings.\"\n\n*****\n\nOpening both windows in the room, I let the sounds and smells of Chinatown filter in, surround me, and put me in the right frame of mind. I wasn't a tourist; this was a job. After stretching out, I went through the maps I'd put on my phone. Grid by grid, I examined the area. Landmarks were noted, major street names memorized. I'd forget many of the details, but the big-picture stuff would stick. \n\nThe heat was heavy and lingering, like an unwanted guest that was still there two hours after everyone else had left. Putting my hair in a ponytail, I read over Finn's notes a final time. There were details on the State Senator that was killed, the Fifth Precinct, which covers Chinatown, and the restaurant bordering on the alley where the shooting took place.\n\nPlacing a key and a credit card in the center of a large bandage, I affixed it to my lower left back. Better safe than sorry. After strapping up and choosing my ID, I grabbed a water from the minibar. Sighing, I opened the door, ready to begin. I couldn't force myself into the hallway. I closed the door and went back to the bed. Kneeling down, I crossed myself. \n\n\"Um, I'm not really sure what to say. Isn't that a kick? All these years with one of your guys as a second dad and I still don't know how to pray. The thing is, it's sort of arrogant, right? Why would you be paying attention to what I need? There're children out there that are starving, innocent people in prison, mothers worrying about children in war, and somehow I'm special enough that I warrant your attention? \n\n\"Okay, whatever. If you are listening, thank you. If you could keep this little girl safe, I'd appreciate it. Just buy her time until I can find her. Things can go bad; I know that better than most. If something happens to me, please watch over my girls and Tommy. \n\n\"I, uh, I don't really know what else to say. Thank you for everything you've given me. I'm sorry I don't talk to you enough. I'll try to do better.\"\n\nI drew a blank on other things to cover, so I crossed myself, got up, and headed out. My knee was barking at me for the first few steps, but I was hitting my stride by the time I got to the street. It didn't take me long to get to G\u01d4 L\u01ceo De L\u00f3ng Restaurant, where the shooting had occurred. It had been bedlam earlier, and there were still reporters around now. The staff would be gearing up for the dinner rush soon, so I needed to work quickly. \n\nNews stations were doing remote broadcasts from the site and I approached the reporter from WNWS radio. \n\n\"Hey, it's Kenny, right?\"\n\nHe smiled and I took a quick look around. There had to be more money spent on orthodontia in this little group than in the rest of Manhattan. The TV people had smiles that could be seen from space. Kenny seemed happy to see me. Radio people aren't recognized nearly as frequently as TV reporters but they still had an ego. Kenny threw some bass in his voice as he responded. \n\n\"Absolutely.\" He did his opening schtick. \"Ken Silmore with the news you can trust, 740 on your AM dial.\"\n\nI wasn't sure if he expected applause or for me to toss him a fish like he was a trained seal. \n\n\"That's great, Kenny. Are you familiar with Finn Corrigan? He runs a... Well, I don't know what you'd call it, but he hires lots of reporters.\"\n\n\"I've never had the pleasure, but I've certainly heard of him. Mr. Corrigan is sort of a legend, like bigfoot.\" He pitched his voice low. \"The mysterious man in the shadows with the deep pockets.\"\n\nI chuckled good-naturedly and resisted rolling my eyes. \"Yeah, that's him. He's my brother. Do you think you can do me a favor and get me caught up?\"\n\n\"On?\"\n\nWas this guy an idiot? I waved behind me towards the caution tape the cops had put up.\n\n\"The shooting, Kenny.\"\n\n\"Right. Of course. Well, it went down around 10:30 this morning. No one knows anything. Rumor has it that he owed serious gambling money to some people in Jersey. Much more than you could make on a State Senator's salary. My sources say that it was five Italian guys and that the cops have video. My guess? It will be wrapped up by the 11:00 news.\"\n\nFinn's report had nothing about mobbed-up Jersey guys or gambling. He threw the information together quickly, but he would have a whiff of something if that was accurate. I took Kenny's information with a grain of salt. \n\n\"Okay, thanks, Kenny.\"\n\n\"You'll mention me to Finn?\"\n\n\"Sure will.\"\n\nThe shooting was in the alley, so the restaurant's entrance was clear. I went in and placed a large order. It gave me a reason to be inside and I could hand off the food to the news staff and give the credit to Finn. I chatted with the staff while waiting. \n\nA few politely smiled and said they didn't know anything about it or pretended not to speak English. One teenager kept looking at me nervously as he waited for an order. He had on bike shorts and half-gloves, so I assumed he was a delivery guy. \n\n\"Pretty crazy, right?\"\n\nHe gave me a half-smile, shrugged, and turned to look towards the kitchen, clearly not wanting to talk. \n\n\"Were you working this morning?\"",
        "I was ignored, which annoyed the hell out of me.\n\n\"When everything went down. Were you here?\"\n\nHe turned back to me. \"No, I had class. Sorry.\"\n\nThe kid was sweating, and there was nowhere reasonable to turn his attention. Aside from deliveries, the restaurant was dead. \n\n\"Okay, no problem.\"\n\nHis foot was tapping impatiently as he waited for the order, and he looked over his shoulder at me a few times. When he got the order, he headed outside. I followed him. Unlocking his bike from a stand, he walked it up past the reporters, between two parked cars, and was waiting for a break in traffic. \n\n\"Hey, give me two minutes.\"\n\nHe nearly jumped when he heard my voice. He twisted to look at me and then quickly back to the street. \n\n\"Can't. Gotta delivery.\"\n\n\"Hold up. I'll make it worth your while.\"\n\nI pulled out a wad of bills in a money clip. There was a larger bundle in my other pocket. His eyes widened. \n\n\"Look, lady, I gotta go!\" \n\nHe was way too loud, and he gestured up the street with his eyes. I could take a hint. \n\n\"Yeah, got it.\" \n\nI walked away, and in the direction he'd indicated. There was a current that ran through the streets and down my spine. My senses crackled like a downed power line and I could see absolutely everything. Threats were assessed and dismissed, windows scanned for weapons, children checked against my memory of the girl's photo. I was alive.\n\nGoing to get Chinese food as a girl was a rare treat. We'd drive into Queens and make a day of it, walking for hours through the small Chinatown near La Guardia. My grandparents on one side or the other would join us, and it was one of my strongest childhood memories. The wonderful aromas and the sounds of the language so foreign to my ears were part of the experience, and that all came rushing back as I stood there waiting. My meds evened me out, but I was glad I left them at home.\n\nA few minutes later, the kid rode slowly by me and spoke quickly.\n\n\"Around the corner.\"\n\nOkay, around the corner it was. He was waiting for me and kept furtively looking around. \n\nEyeing my pocket with the cash, he wiped some sweat from his brow.\n\n\"I... I don't know much.\"\n\n\"What do you know?\"\n\n\"I could get in a lot of trouble. I should just keep my mouth shut.\"\n\n\"Yeah, I get that. You're going to college? Maybe I could cover your books for next semester, say, three grand?\"\n\nHe was rail thin and looked like the proverbial starving student. \"Um...\"\n\n\"And I'll make sure your name stays out of it.\"\n\nHe sighed. \"David Chin was there this morning.\"\n\n\"David Chin?\"\n\n\"You're kidding me. You're asking around and you don't know Chin? Lady, you're walking around blind. He runs most of the heroin in Chinatown.\"\n\nHe seemed awfully knowledgeable for a delivery guy.\n\n\"Uh-huh. Okay. And Mr. Chin was alone?\"\n\n\"Look, this is just what I heard from the kitchen guys, and no, he's never alone. He has at least four tong guys with him all the time.\"\n\n\"Okay, that's not worth anything like three grand.\"\n\n\"Are you kidding? What I just told you is worth my life!\"\n\nI nodded. \"Alright. Anything else?\"\n\nHe looked at my pocket again. \"He had a cop with him. Not a street cop, someone higher up.\"\n\n\"Now we're getting somewhere. Do you have a name?\"\n\n\"No, just that he was a cop. Look, I have to go.\"\n\nKnowing if someone is lying is a useful trait. I was decent, Finn was better. \"Okay. Finish this order and call in sick. Lie low for a couple of days.\"\n\nI handed him the cash. It was probably closer to four grand. \n\nGetting back in time to get my order, I had them give me a bunch of paper plates, napkins, and plastic forks. The hissing of ingredients hitting a wok, the aromas of cooking ginger, garlic char siu and the ordered cacophony of the kitchen was intoxicating. I scarfed down a pint of pork as I walked back outside. The news crews ate well. \n\nI started questioning the cops. They brushed me off until a detective asked me for ID. I showed him mine from Newsday, the Long Island paper that Finn partially owned. \n\n\"All media inquiries are going through downtown.\"\n\n\"Come on, just a few questions.\"\n\n\"Look, I'm not going to repeat myself. Back up and stay away from the tape.\"\n\nHe turned and walked away. I approached another uniformed cop. The detective came roaring back. \n\n\"What the fuck? You deaf? Back off.\"\n\nAnother cop that was likely his partner, walked over. \"What was your name?\"\n\n\"Siobhan Oliviera.\"\n\nHe looked at my ring finger. \"Maiden name?\"\n\n\"Corrigan.\"\n\nA smile broke out on his weathered face. \n\n\"Well, look at you! Little Siobhan, all grown up. I was your Uncle William's last partner. He was a good man.\"\n\nI nodded. Damn right, he was a good man. The guy looked vaguely familiar. He stuck his hand out. \n\n\"Mike Flannery.\"\n\n\"Right. I remember you a bit. Listen, can you help me out here?\"\n\nHe nodded. \"Yeah, let's grab a coffee.\"\n\nWe sat down at a little place on the corner. Flannery was an expert on getting everything he wanted from you and offering nothing in return. It was frustrating, but I dealt with it. I needed allies. He gave me his card, and I gave him my phone number. The only valuable information I got from him was that Kenny the reporter was full of shit. There was no 'mobsters from New Jersey' angle. \n\nFlannery wanted to know why I was interested, so I played up the Newsday angle. If anyone checked, they'd find I didn't have any bylines but was credited as a research reporter. I had no idea if such a thing even existed and didn't care. The detective praised my uncle and went back to the scene.\n\nStanding at the corner, I tried to think like a scared, lost kid while I listened to the honking of horns and watched the traffic. I looked down the block and pictured myself coming out of the alley. Picking a direction almost at random, I began walking. Within half a block, I had a call from Finn. \n\n\"Where are you?\"\n\nI gave him the cross streets.\n\n\"Okay, don't go too far. Pete is through the tunnel and should be to you within half an hour.\"\n\n\"Why on Earth is Pete coming?\" Pete was a nice guy and sort of our uncle, but this wasn't his arena.\n\nFinn paused before answering. \"He's driving Yekong.\"\n\n\"Oh, for fuck's sake. Listen, she's a lunatic. She'll just slow me down.\"\n\n\"Shiv, give her a chance. You know how she is about kids. She's almost as bad as Alistair. And she speaks the language, and you know she's good in a fight.\"\n\n\"Yeah, whatever. Fine.\"\n\nHitting a few stores that sold crap I thought kids would like, I purchased nun-chuks, a ninja costume, incense, candles, some spices for Finn and a bunch of other stuff in a vain hope of getting the merchants to like me. Whether it worked or not, they didn't recognize the girl from the photo I showed them on my phone. I found a FedEx store and had them mail everything I bought back to my house. \n\nA seedy-looking pawnshop had some game consoles in the window and I thought that might attract a kid. It was a little isolated, with closed storefronts on either side. About to go in, I felt an itch between my shoulders. Someone was watching me.\n\n\"Hello, Siobhan.\"\n\nI didn't bother turning around.\n\n\"You're here to help. If I need you to do something, I'll let you know. Stay close and try not to murder anyone.\"\n\n\"I understand. I am glad you called me. Cynthia is well?\"\n\n\"She's fine, Yekong. Let's get this over with.\" \n\nIt didn't matter what I said. She was going to do whatever she wanted. It was her nature. Scorpion and frog.\n\n\"Your brother had a private plane take me to an airport in Teterboro. It was a very nice flight. Pete drove me here. I do not believe I am dressed properly for Manhattan. Will this be a problem?\"\n\nShe was wearing what she normally wore; Army/Navy surplus. The only thing new was a pair of Timberlands that looked pristine. I didn't care about her travel arrangements or her clothes. She was a killer who was too attached to my niece. Yekong should have stayed lost in the woods of Kentucky. \n\n\"Whatever. It's fine.\"\n\nThe shop was dim and long. Unlike the stuff in the windows, everything else looked dusty and dull. The place was depressing and smelled like mold. The air hung unmoving and still, as if it was too depressed to expend any energy by circulating. I wiped some sweat off the back of my neck and pretended to look at some laptops under the lucite cases as I listened to the Muzak.\n\nYekong finally lost her patience as I scanned the place for security cameras. She walked up to the bullet-proof glass. \n\n\"Hello. My name is Yekong. I am looking for a girl. My friend seems to believe you could help us.\"\n\nThe guy behind the glass cleared his phlegmy throat. A thin man with a gut, he was quite the contradiction. Sweat glistened under the five or six strands of hair he used to try to cover his bald spot. \n\n\"You two are together?\"\n\nYekong replied. \"Yes.\"\n\n\"Together, together?\"\n\n\"Um, yes?\"\n\n\"I don't know anything about getting kids. You have money?\"\n\n\"My friend is very wealthy.\"\n\n\"How do I know you're not cops?\"\n\n\"That is an interesting question. I do not know, but I assure you, I am not a cop. Ah, wait! I believe I am too old. I could show you my ID. Would that help?\"\n\nWhat the hell was I listening to? Was this really happening?\n\nThe greasy bastard continued his conversation. \"Too old for what?\"\n\n\"Aren't police officers young?\"\n\nYekong definitely did not look her age. Actually, she looked closer to my age than her own. \n\n\"Nah, there's plenty of old cops. Listen, I'm not saying I could set you up, but from what I understand, that sort of thing for a kid that's clean would run you five grand. You good with that?\"\n\nI kept clenching and unclenching my fists. There were three cameras watching the interior of the shop, and I didn't know where they fed to.\n\n\"Yekong, come here for a minute.\"\n\n\"Just a moment.\"\n\n\"Yekong, now.\"\n\nTurning to me, she raised an eyebrow. A chill went through me, and all I could think of was the few times I'd seen Dink, my brother's dog, truly angry. She walked over to where I stood.\n\n\"He thinks you want to pay him to use a child. Sexually.\"\n\n\"This...\" She seemed stunned. \"This happens? In...\" \n\nLooking out at the street, it was as if she couldn't quite comprehend what I was telling her, and such a thing couldn't occur in seemingly civilized Manhattan. Then her face went blank, as if a mask slid over her features. Yekong strode towards the door.\n\nThe creature behind the glass called out. \"Hey, you don't have to go. We can discuss the money. Maybe you and I can work something out. I mean, you're not so bad.\"\n\nShe never turned around. \"I was not leaving.\"\n\nYekong locked the door, turned the sign that said open on one side and closed on the other around, and then walked over and slammed her hand against the mechanism that held up the sliding security gate. It fell, locking us in with the pimp.\n\n\"I wasn't leaving at all.\"\n\nShe turned to him and began running down the long aisle towards the bullet-proof glass. The pimp and I gawped as she picked up speed and launched herself against the glass. Yekong seemed like a madwoman. There was no way she could break the bullet-proof glass. As I saw her impact reverberate, I realized she didn't have to break the glass, just whatever it was moored to.\n\nYekong growled. She literally growled as she backed up and took another running start. Slamming once again into the glass, the entire pane shuddered. There were times when this woman couldn't be more alien than if she came from Mars. That my grandfather hated my pseudo-aunt was an open secret in my family. He was a cop and couldn't figure out why an eccentric billionaire was obsessed with his grandson. I felt the same way about Yekong. She was obsessed with Finn's daughter, my niece.\n\nOn the other hand, she had almost single-handedly saved my brother, niece, and nephew from mercenaries who wanted them dead, so I gave her some leeway. She wasn't right, and it was obvious to anyone who spent more than five minutes with her. Yekong's mannerisms were slightly off, but lots of people were like that. The difference was that she was the deadliest person I'd ever met, and it wasn't close. \n\nThe man stood behind the glass, gazing at her like a rabbit that stood stock still and stared at a hunter. After the third impact the glass rattled and shook in its moorings. The pawn shop had metal stanchions that used a retractable cord to form lines, like a bank or a movie theater. She picked one up and began slamming it into the formica at the edge of the glass. \n\nYekong was going to destroy what held the bulletproof glass in place, remove it and then kill the shop owner, and I had zero fucks to give for the safety of some pimp that sells children. By the time she was able to slip her fingers past the crumbling half-wall and up to grab the glass, the man snapped out of it and began moving to a door behind him. \n\nI ran to the front, lifted the gate, rushed out to the sidewalk and down an alley. Cameras were a concern, but what sort of peddler of children would have the back entrance to his shop recorded? The door flew open, and he came barreling out. I collapsed his knee, grabbed his shirt and half-lifted him back up. My HK45 was in his sweaty, pockmarked face as I pushed him back inside and pulled the door closed behind me.\n\nThe least he could have done was keep a fan running. I had to deal with his rancid body odor for the few seconds it took Yekong to join us. Part of her obsession with my niece was that Yekong saw her as a surrogate for the child she could have been if she hadn't been enslaved and forced into fighting in pits for the amusement of Hong Kong's business and criminal elites.\n\nTo say that pimping out children was the worst thing someone could do around her was an understatement. He may as well have signed his own death certificate. \n\nThere was an arrogance to her stance, to the tilt of her head as she looked down on the pimp. Yekong stared down like an unchecked apex predator whose prey was not quite beneath her contempt. As much as I knew who and what she was, it was still difficult to reconcile this killer with the woman who would spend hours trying to decide what doll to buy my niece.\n\nHer brother was like an uncle to me, and I'd told him once that if I ever decided she was a threat to my niece or nephew, that I'd kill her without a second thought. That was still true, but I'd do it from a distance and still count myself lucky if I lived to tell the tale. \n\n\"I saw all the things you sell.\" She said. \"Computers. Televisions. Jewelry. And the games you attach to the televisions. They are played by children. That is correct, is it not? You sell games for children?\"\n\nShe placed her foot against his crotch. He scooted up, so she lifted the foot and slammed the heel down on his sternum. As he moaned and writhed, her foot returned to his crotch. \n\n\"And you also sell children. Did you let them play these games? Or maybe you used these games to...\" She turned to me. \"What is the word, Siobhan? Attract? To attract these children? And then you take them from their mother? Is that what you did?\"\n\nHe was dead. I knew it, he knew it, and Yekong knew it. Rarely, very rarely, she would mention her mother and how she was taken from her when she was a child. Yekong couldn't remember how old she was when she was abducted, but she thought it was around five. She didn't know her father, but her mother had been everything to the young Yekong.\n\nHer foot returned to the sternum and pushed down. The man was crying and trying to breathe. \"Look, I... I never did anything...\" He gasped. \"With kids. I just know people.\" Another gasp. \"I could have put you in touch, that's all.\" One more gasp. \"Please. I can't breathe.\"\n\n\"Look at me.\" I tapped his head with my boot. \"Look at me. Why should I convince her not to kill you? Where can we find out about the people that have the kids?\"\n\nHis face was a painting by Bosch, pain and nightmares etched in every pore and crevice. \"A laptop. Under the pillow in the back. Please. Everything is on there. Pictures, contact info, everything. They have a website.\"\n\n\"They have a website. A fucking website. Like Amazon for pedos.\" A shiver ran up my back, and I had to refrain from shooting him in the head. \"If you're lying, she'll kill you. I'll be right back.\"\n\nShe was going to kill him either way, but he didn't need to know that. It took me less than three minutes to find the laptop. I doubled up on my gloves before opening it. His browser history was like tiptoeing through layers of Hell that Dante had never reached. I made a quick call to Cherie. She was a computer expert of some sort and the wife of the woman who ran the clinic Finn funded. \n\nCherie had me download TeamViewer and give her access, and then she took over. I'm sure she loaded a bunch of other crap on there and downloaded everything. I left her to it and went back to Yekong and the pimp.\n\n\"Do you have everything you need, Siobhan?\"\n\nI nodded and then heard a squelching noise as she pushed her foot down on his groin. I'd be hearing that noise in my nightmares for months. She then put her foot under his chin and lifted until he was looking up at her, tears streaming down his face, pain too intense to scream. \n\n\"Goodbye, thief of children. Goodbye, pervert. Goodbye, disgusting man.\"\n\nHer Timberland boot slid up his face. When her heel was on his chin and her toes on his forehead she pressed down. That was when he found his voice. It didn't last long. The screams were replaced by a cracking sound and I looked away. \n\n\"So, do you have a description or photo of this little girl? Does she speak Mandarin or Cantonese? Her parents love her very much?\"\n\nYekong had just crushed a man's skull underfoot and she seemed less concerned than if her bagel was poppy seed instead of sesame. \n\n\"Yeah.\" You psycho. \"I have some photos on my phone and she speaks a little Cantonese.\"\n\n\"May I see these photos?\"\n\nI sighed. \"Sure.\"\n\nWhen she was done I called Cherie back.\n\n\"How long are you going to need?\"\n\n\"Not long. An hour, tops.\"\n\n\"Okay. I'm going to head over to the precinct and give them a heads up. I'll give you ninety minutes.\"\n\n\"Fair enough. What am I doing with this information? I'll store it, of course, but what then?\"\n\n\"Get me details. I need to know where the children are and who's running their operation. Yekong and I'll take care of the rest.\"\n\n\"I'll see what I can do.\"\n\nWe made our way up to the Fifth Precinct, stopping at businesses and asking people along the way if they had seen Cecelia. Showing them the phone got tedious, so I called Finn and had him print me out a few hundred fliers for each of the photos we had of the girl. When we finally got to the police station we were given directions and went upstairs. \n\nA voice called out. \"Siobhan? Siobhan Oliviera?\"\n\nPeople were everywhere and I had to slip past a few to see who had called me. \n\n\"John! Hey, how are you?\"\n\n\"Good! Better than good, actually. How are you?\"\n\nI'd gone to school with John and my grandfather had given him a letter of recommendation when he wanted to work in civilian administration for the NYPD. Having a police commissioner vouch for you is pretty big when you want to work for the police department. \n\n\"I'm good, John. Thanks. Listen, I need to speak to Detective Flannery, but I'd love to catch up. Can I get your number?\"\n\n\"Of course. I'll jot it down for you while you're talking to the detective. Give me two seconds.\"\n\nHe made a phone call and a few seconds later Flannery came out. \n\n\"Hey, Corrigan. Sorry for the crowd. Half the NYPD is down here today. Found the kid already?\"\n\nHe was smiling, like a lost child was a joke. \n\n\"No, not yet. Can we talk? Something else is going on.\"\n\n\"Yeah, sure. C'mon back. Is she with you?\"",
        "\"Sorry, yes. Detective Flannery, this is Yekong.\"\n\n\"Yekong.\" He looked her up and down and I could tell he liked what he saw. \"A pleasure.\"\n\n\"Thank you. I am not a police officer.\"\n\n\"What?\"\n\n\"I have been told that I appear to be a police officer, but I am not.\"\n\nHe looked from Yekong to me and raised an eyebrow. \"Okayyy.\" Flannery drew the word out. \n\nWe went into a good sized room with a cage to hold suspects, file cabinets and a long table with chairs. I was assuming it was an interview room but it looked archaic. Flannery grabbed a mug and walked towards a mini-fridge.\n\n\"Coffee? Water?\"\n\nI shook my head. \"I'm good, thanks. Yekong?\"\n\n\"I would enjoy a water. Thank you. Any type would be fine.\"\n\nShe kept eyeing the small cell, and I wondered how close it was to the pen she was kept in most of her life. \n\n\"So, Siobhan, what did we need to talk about?\"\n\nThe place smelled like recycled air and stale coffee. I marshalled my thoughts and began. \n\n\"Yeah, okay. Uh, we were asking around about the girl and I saw a pawn shop. There were consoles in the window, things a kid would be into, so we went in to ask if the owner had seen her. When we got to the front, we saw the clerk on the floor, dead.\"\n\nHe looked to the door and back to me. \"Dead? You sure?\"\n\n\"Uh, yeah. Definitely dead. Skull caved in sort of dead.\"\n\n\"Fuck. You have an address?\"\n\nI gave it to him. \"And you need to check out his laptop.\"\n\n\"Why?\"\n\n\"It was open, and he was perusing some site that looked like it was pimping kids.\"\n\nFlannery closed his eyes for a second and shook his head. \"Fan-fucking-tastic. How'd you see that?\"\n\n\"I, uh, ran around to the back of the store to see if there was a door or something. There was, and I checked on him.\"\n\n\"Someone that was clearly dead.\"\n\n\"Right. Sounds stupid now, but I panicked.\"\n\nHe tilted his head slightly. \"You don't seem like someone that panics, Siobhan.\"\n\nYekong leaned forward. \"Siobhan said that she panicked. Please do not... I do not know. Insinuate? Insinuate that she is a liar.\"\n\nWell, that went sideways quickly. I tried to smile.\n\n\"Look, I had no idea what was going on. Maybe there was someone else that was there that was hurt, and I didn't fully see him until I came through the back. At that point it was clear he was dead.\"\n\n\"Right. Okay, let me talk to my lieutenant about this.\"\n\nHe was back in a few minutes. \"Listen, we're going to have you stay here while we go check this out.\"\n\n\"No, we need to be looking for the girl.\"\n\n\"Do you have any leads?\"\n\n\"Not yet.\"\n\n\"Okay, then I'm going to have to insist.\"\n\nI shook my head. \"Insist all you want. If I'm not under arrest or being officially detained, I'm leaving. If I am being detained, I'll have a lawyer down here within half an hour.\"\n\nHe was quiet for a moment, and then raised his eyebrows and nodded. \n\n\"If that's the way you're going to play it. Okay, let me walk you out.\"\n\nAs we were leaving he stopped by a large distinguished-looking guy. \n\n\"Hey, Captain, you remember William Corrigan? Worked out of the one-nine? This is his niece, Siobhan.\"\n\n\"Of course. He was a hell of a detective and a cop's cop. Old school. How are you, Siobhan? I'm Kevin Donaghy.\"\n\nSomething about the guy screamed 'creep' at me. \"Good. How are you?\"\n\n\"Excellent, thanks. I'd like to stay but I have to get back to my precinct. It was good to meet you. Everyone respected your uncle.\"\n\n\"Thanks.\"\n\nThere were a few cops who kept a close eye on Yekong. Maybe it was a second nature cops or soldiers developed for knowing when they were in a room with a killer, maybe she was just attractive. I didn't care. We went out into the hallway and were halfway to the stairs when I remembered John. Going back to get his phone number, I turned the corner and saw Flannery huddled up with Donaghy. Their conversation looked intense.\n\nPeeling my eyes off them, I stepped over to John's desk. \n\n\"Hey, Shiv, how's your brother? Finn, right?\"\n\n\"Yeah, he's fine. Thanks for asking. Married, two kids.\"\n\nWe chatted for a few minutes between his answering calls and we exchanged numbers. \n\nI nodded towards Donaghy. \"Is he from here?\"\n\n\"No, the sixtieth in Brooklyn. Brighton Beach.\"\n\n\"Really? What's he doing all the way up here?\"\n\n\"Something to do with the shooting, I guess. Lots of brass have been in and out all day.\"\n\n\"Okay, thanks. I'll call you. We'll do dinner and you can meet Tommy.\"\n\n\"Sounds great.\"\n\nWhen I got back to the stairs Yekong was still drawing attention. It wasn't that surprising. She looked like an Asian Amazon. Mentioning Tommy had reminded me that I owed him a call. Our lack of communication about situations like this and my willingness to put myself in harm's way had almost destroyed our relationship. It took years and a lot of effort to get back to where we were now, and I wasn't going to do anything to endanger who we were and what we had.\n\nTommy answered my call on the second ring. I could tell that he was on edge but was hiding it. We talked about our daughter and the classes he had to teach that night and how his mother was making him dinner. He spoke about everything but what I was doing. He didn't ask me to be careful, didn't tell me to be safe and didn't express concerns. Well, not in words. I heard it in his tone, in his pauses and as he searched for things to talk about that didn't involve me and danger. I heard his love in the way his voice softened and how he tried to lie without words and express that he was okay with what I was doing. \n\nWe had a detente in our relationship. He let me be me and I agreed not to be the lone wolf that I was when I was younger. \n\nI was taller than most of the women on the streets and Yekong towered over them. We made quite the pair as we headed down Elizabeth Street to Canal. We were looking for a human needle in a metropolitan haystack. Cutting back down Mott Street, I decided to hit Columbus Park. \n\n\"Siobhan.\"\n\nI turned to Yekong. \"Yeah?\"\n\n\"I would like to purchase a water.\"\n\nYekong was standing next to a hot-dog vendor as the late spring sun beat down on us. She probably would have preferred the sweet smoked nuts some vendors sold over the dirty water dogs, but if she just wanted water, fine. Whatever.\n\nShrugging, I looked from her to the pedestrians, constantly scanning for kids. \"Okay, go ahead.\"\n\n\"I have no money.\"\n\n\"Yeah, okay.\"\n\nWalking over, I paid the guy for two bottles of water. Yekong leaned in and spoke softly. \n\n\"We are being followed. Three men. Asian. Early twenties. Two in blue shirts. Third in red with sunglasses. They are spread out. You continue. I will go into a store, and when they follow you I will come behind them and end things.\"\n\n\"Um, no. We're not killing people for following us. Let them follow for a while.\"\n\n\"I do not like enemies at my back.\"\n\n\"Yekong, they know where we are, but now we know where they are.\"\n\n\"That makes no sense. We shall also know where their corpses are after we are done.\"\n\nSighing, I rolled my eyes. Yekong was a straight-line thinker. It was also irritating that she spotted them before I did. \n\n\"Let's walk a block or two and see what we can find out. \n\nShe nodded and we continued towards the park. It took me less than fifty yards to realize that she was right. Seriously annoying. It's as if she had a preternatural gift for the skills that took me years to develop. The ambient sound of the city wasn't as intense as I'd have liked. Honking of cabs, yelling of business owners, loud music, and the chattering of tourists wouldn't cover the sounds of one of our pursuers screaming.\n\nAs we approached the trees I thought of another park in Manhattan when I'd been followed. That had been one of the worst times in my life and part of the issues that developed with my husband. His niece, who we treated like a sister, was abducted, filmed and abused. After she was rescued, she committed suicide. I knew that Tommy would have killed anyone involved and I couldn't let that happen, so I did it. \n\nI left a trail of blood through New York City and almost got myself killed in the process. Like I had at the Tesla museum. Like I had in California. Like I had in Vegas. Everytime I returned to Tommy another piece of me was missing. He deserved better.\n\nTaking a deep breath, I kept walking. \n\nWe were on Pell heading west, and I was hoping that the park had changed since the last time I'd been there. We needed a younger demographic than the college students who usually took up residence. As we made our way we would show the photo of Cecelia to workers and pedestrians. The problem was that she looked like any other kid. She wasn't wearing anything weird, didn't have a limp or a scar or dyed hair. \n\nGetting to the park, we saw what I was afraid of. Lots of late teens and early twenties throwing a Frisbee or kicking around a hacky-sack, some moms walking kids in strollers and a few old men playing chess. I needed younger kids. We walked around, spoke to people and showed the picture but got no hits. The only ones interested were the three guys following us. \n\nWe were about to head back up towards Canal when a guy with almost white hair jogged up to us. When Yekong turned and seemed as tense as a coil about to be sprung I put my hand on her arm. \n\nUp close he was much younger than I assumed. The man was about twenty-five and carried a five year stench on him. \n\n\"Hey, you guys looking for a kid?\"\n\nI nodded. \"Yeah. Here's her picture. Have you seen her?\"\n\n\"Uh, no. Maybe. No. But I know where kids her age hang out.\"\n\n\"Okay.\"\n\nThe conversation came to a screeching halt as he just looked at me.\n\n\"Um, so, yeah, uh, life's been a little hard lately. Maybe you could spare something so I can get something to eat?\"\n\n\"I could do that. Not a problem. What's your name?\"\n\n\"Gary.\"\n\n\"Okay, Gary. Tell us what you know and I'll help you out with food.\"\n\n\"And maybe some spending money.\"\n\n\"Sure, Gary.\"\n\nHe licked his lips and ran his hand through his thin hair. \"Chinatown Fair. It's an arcade over on Mott. Close. A couple of blocks. They got kids there that age. Like, all of them are that age. They're open 'till eleven or twelve.\"\n\n\"An arcade? Gary, arcades haven't been a thing in decades.\"\n\n\"I'm not fucking with you, lady! Straight up, tons of kids there. They play these fighting games. If I'm lying, come back and get your money.\" He nodded towards Yekong. \"I'm not stupid, just hungry. I wouldn't lie, especially to her. And if you think people can't see your vest under that shirt you're nuts.\"\n\nI was surprised. It would be a good guess that any money I gave Gary would be in his arm by the end of the night. I didn't expect him to notice my vest. It was top of the line and not bulky at all. \n\n\"Okay. Walk with us a bit.\"\n\nWhen he pointed out the arcade, we stopped at a Famous Ray's and I bought him eight slices, a two-liter of soda, and three bottles of water.\n\nThey gave him a bag for the drinks and a box for the slices. \n\n\"Uh, so, um, the cash?\"\n\n\"Do you know Hotel 50?\"\n\n\"On Bowery? Yeah.\"\n\n\"Give me two hours and then head over. My name is Siobhan Oliviera. They'll have a room for you for four days. You can charge whatever you want to room service. No alcohol.\"\n\nHe looked eastward, towards the Bowery. \"And, uh, a few dollars, maybe?\"\n\nSighing, I pulled out a twenty and handed it to him. \"Hold on to this, okay? Use it for food or something.\"\n\nI could have given him more. I could have given him a great deal more, but it wouldn't have helped him. He thanked us and walked off, and I called Finn. Having a big brother like mine made a lot of things easier. He set up the room.\n\nYekong touched my arm. \"Why did you provide a place to stay for that man?\"\n\n\"Um, he was homeless. I thought he could get a shower, maybe make some calls to family. Just... I don't know. Get off the streets for a few days.\"\n\n\"You are a nice person, Siobhan. I am glad you are Cynthia's aunt.\"\n\n\"Yeah, great. Thanks.\"\n\nWe were about to cross the street and head into the arcade when my phone rang. It was John from the precinct. I was about to deny the call, but answered on a whim.\n\n\"Hey, John. I'm sort of in the middle of\u2014\"\n\n\"Siobhan, I don't have time. I told them I was taking my lunch and I need to get back.\"\n\n\"Told who?\"\n\n\"Just listen. When I went to the bathroom, I saw Detective Flannery talking to Captain Donaghy. All the interview rooms were taken, so they were huddled in a corner. The captain looked extremely angry and as I passed them, I heard your name mentioned. I think they have someone watching you. Be careful.\"\n\n\"I... Why would they be watching me? And how is a captain from Brighton Beach involved in a case in Chinatown?\"\n\n\"I don't know, Shiv. Just be careful, okay? I have to go.\" He hung up.\n\nWell, that was bizarre. I went back into the pizzeria and Yekong followed. She seemed willing to follow my lead, which was excellent. I wasn't sure if I'd be able to stop her if she went her own way. I grabbed a slice and watched the foot traffic. Quickly spotting the three guys following us, I wondered if any or all of them were cops. \n\nFinishing the slice, I grabbed two more and gave one to Yekong. \n\n\"You are always eating, Siobhan. I do not understand.\"\n\n\"Yeah, well, it's a gift. Listen, that was my friend John on the phone. He said the detective and captain were talking about us after we left, and they both gave me the creeps. I don't remember either of them from my uncle's funeral. I'm concerned that those guys out there might be cops keeping an eye on us.\"\n\nShe raised an eyebrow. \"So, we should eliminate them?\"\n\n\"No! Seriously? We shouldn't 'eliminate them.' If they are cops, they might just be doing their job and regardless, we'd be hunted by everyone in the city with a badge. Just... stay alert and if we have to do something, be gentle. Or gentler. Whatever.\"\n\n\"I see.\"\n\n\"Have you ever been in an arcade?\"\n\n\"Yes, in Hong Kong.\"\n\nThat wasn't the answer I was expecting. \"Okay, well, you know what to expect. Loud noises, flashing lights, kids running around. You ready?\"\n\n\"Yes. Thank you for the pizza.\"\n\n\"Um, yeah. You're welcome. Before we go, can I ask you something?\"\n\nShe nodded. \"You can always ask me questions.\"\n\n\"Why are you here? After everything that went down you went back to Kentucky, right? You thought you couldn't be trusted not to hurt people and wanted to get away. What changed?\"\n\nYekong seemed confused. \"You asked me to come. Of course I said yes. And Finn said you needed help, that there was danger. He was concerned for you. The two of you helped Alistair. How could I not help someone who helped my brothers and sisters? And there was a child involved.\"\n\nShe had killed dozens of people in Brazil when her brother, Robert, was shot and died while saving her. Yekong had retreated from the world to ensure that wouldn't happen again and now was here and acting as if her motivation should be obvious. I shook my head. \n\n\"Okay, let's go.\"\n\nI left my change from the pizza on the counter for the young guy serving the slices and we headed across the street. Mott was nowhere near as busy as Canal Street, but it was still hectic. Cars honked, drivers yelled at each other and we were among the pedestrians scurrying across between traffic. \n\nThe building was in the middle of the block and was four stories high. A large white sign with red lettering announced the Chinatown Fair Family Fun Center. It looked a little run-down from the sidewalk. I'd imagined something closer to a Dave and Buster's. As we stepped through the door it felt like we'd entered a new world. The airconditioning was on point and the dinging, clanging and thumping bass wrapped around us, luring us from the mundane city just a few feet behind us.\n\nThey had a small area where they sold warm pretzels, hot dogs, slushies, popcorn,and candy. Adjacent to the food service were glass cases filled with tchotchkes you could win with tickets from games. Continuing along the walls were traditional old-school games like skeeball, shooting hoops, and driving games.\n\nThe interior was filled with rows of video games, dance games, and first-person shooters. The Fair was deceptively large and took up the entire first floor of the building. It was mobbed with children who seemed to have the same ability to ignore the presence of adults as adults had to ignore kids. \n\nWe did an initial walkthrough and I spotted a few possibilities that turned out not to be Cecelia. \n\n\"Siobhan, there\u2014\"\n\n\"I know. Our three friends are here and four more. The additional four look different. Less stiff.\"\n\n\"They are not the same.\" She pitched her voice low. \"Less... orderly. I do not believe the four are police officers.\"\n\n\"Okay, let's keep doing our job.\"\n\nWe did another circuit around the arcade, this time stopping random kids to show them Cecelia's picture. I was hesitant to offer them anything. As a mother I would lose my mind if an adult were able to interest my daughter with a shiny prize of some sort, but I couldn't think of an alternative. I held out the allure of filling game cards if someone had information. \n\nWe asked a girl who was watching two other kids playing Dance, Dance Revolution. She seemed annoyed by us and gave us a flat no. As we walked away one of the dancers caught up to us, sweaty and tugging on Yekong's shirt. I immediately stepped forward and gently touched her arm. She looked at me in something like disgust, probably sensing I was concerned about anyone she didn't know grabbing her or her clothing. Okay, she'd never hurt a kid. Got it. She'd still gone on a murder spree in Brazil, so I was going to be careful.\n\n\"Hi. I'm Siobhan. We're looking for a girl about your age. She was separated from a school trip and is lost. Have you seen her?\"\n\nHe looked at the photo and then began speaking to Yekong in what I guessed was Chinese. \n\nShe turned to me. \"The girl was seen by him a few hours ago. She asked him if he had a phone charger she could borrow.\"\n\nI smiled for the first time all day. \"Where?\"\n\nYekong spoke to him again. He responded and she translated. \n\n\"A full Gold card and a large pretzel.\"\n\nRolling my eyes, I took in a deep breath. \"Fine. Tell him it's a deal.\"\n\nWe walked over to the concession area and filled his card. When we got to the food he spoke to Yekong again. \n\n\"He has changed his mind. He wants three pretzels and a slushie. What is a slushie?\"\n\n\"A frozen drink.\" I got him the pretzels and the slushie and threw in a water. \"Ask him where.\"\n\nShe did and translated again.\n\n\"The Chatham Square Library on Henry Street. A Marie St. Croix does readings for children there and the girl was listening. He said she looked as if she had been crying.\"\n\n\"I'm sure she's scared out of her mind. Okay. Tell him thanks and let's get going.\"\n\nShe did and we headed towards the door. As we neared the exit I saw two of the new four that were following us grab the boy and push him into a storage closet.\n\n\"Did you see that?\"\n\nI didn't like the expression on her face as Yekong replied. \"Yes.\"\n\n\"Keep everyone out of there. Don't kill anyone.\"\n\nI pushed through the crowd, got to the door and found it locked. Yekong pushed me to the side and slammed her foot against the door. It flung open and I entered. One of the men was watching the door, the other held the boy by the hair. \n\nThe one closest to me started yammering something in what I assumed was Chinese. The other one yelled out in English for him to take me out. He tried. The idiot hadn't even taken off his sunglasses. Stepping forward, he feinted a kick and then a quick jab. I kicked him as hard as I could in the calf of his lead leg, my shin bone slamming into the meat. He stumbled back and when he tried to put weight on the bad leg, stumbled further. I kicked him in the chest. When he bounced against the wall and slid to the floor, I kicked him a third time, this one in the head.",
        "His friend stared at me. \"What the hell was that?\"\n\n\"Oh, a little of this, a little of that. Mostly adapted muay thai. Let the kid go and I won't kill you.\"\n\n\"How about you get out of here and I won't hurt the kid?\"\n\nI shook my head. \"No deal. How about you let him go and I won't pull out my gun and shoot you in the head? I'd prefer not to make this messy and loud, but if I have to to save the kid, I will.\"\n\n\"Bullshit. You don't have a gun.\"\n\n\"You're in the wrong line of work.\" I pulled out the H&K. \"And I've got it's twin as well.\"\n\nI heard a thump behind me. Turning quickly, I saw Yekong throw a body into the small room with me and close the door again. The man kept looking from the body to me. Keeping calm, I ignored the clutter of mops and cleaning supplies and the smell of disinfectant.\n\nSmiling, I raised my eyebrow. \"Friend of yours? That would leave one more in the arcade. I wouldn't bet on him getting in here to help you. Let the kid go or I'm leaving your brains on the wall.\"\n\nHe did. I called out as the boy rushed to the door. \"Wait for me!\"\n\nThe man didn't want to tell me who he worked for. I decided to ask again a little harder. He gave up a couple of names but didn't know much. He was supposed to watch us and if we found anything out they were supposed to get the same information and call it in. He was run-of-the-mill muscle for low-level protection rackets and keeping drug runners in line.\n\nWhen I left the storage room Yekong had another body crumpled on the floor between her and the door. The boy was gone. Our original three followers were again in play as we hit the street and began walking to the library.\n\nIt always took me time to adjust to being back in the city. Out east things were rural with little pockets of suburbia. If you wanted to get anywhere, you had to be prepared to drive. Like most neighborhoods in Manhattan, Chinatown was narrow but deep. You could walk it's expanse quickly but still spend countless hours exploring. Everything was on top of something else and tightly packed together. There was a unique energy of welcoming-but-guarded residents and business owners. \n\nWithin a few minutes we were on the street for the Chatham Square Library. It had a different vibe. Everything was newer, the street was wider and it felt more a part of Manhattan than its own idiosyncratic area. The heart of Chinatown was just shy of claustrophobic with narrow streets, crowded sidewalks, and decades of cliched expectations looming over you. The library, on the other hand, was large, modern and pristine, like the rest of the area it was found in. \n\nTo one side of the library was a gleaming MetroMedic walk-in healthcare facility and next to that was a six-story Asian bank with a blue glass facade and kanji I couldn't read on the front. The other side of the library had an upscale Asian stationery and bookstore. \n\nPassing under the gargantuan American flag hanging off the front of the library, I used opening the door for Yekong as a pretense to scan for our three followers. I spotted them. They seemed too clean-cut to be enforcers, so my guess was cops. Thinking of my girls, I was depressed to see metal detectors in the foyer. \n\nChildren needed to walk through a metal detector to get to a story-time reading by a volunteer. It was depressing.\n\nFrom what we gathered from the kid, the reading was scheduled for hours ago. I was hoping that Cecelia would be smart enough to stay put. A library was lit, filled with adults, and relatively safe. She could sit and watch the doors while waiting to charge her phone. That's what I'd hope my daughters would do. \n\nThere was a listing of community activities on a wall near the entrance. Running my finger down the listing, I found \"Mrs. St. Croix's StoryTime\". It had been over for almost three hours. \n\nYekong had been scoping things out. \"Three floors. No balconies, each floor enclosed. Stairs at back left are open but there is no angle for firing due to bookshelves. Elevator is to our right. Children's section straight back. There is no obvious security.\"\n\nI nodded and we headed to the children's section. When Yekong went through the scanner I surreptitiously used my foot to unplug it. I waltzed through a moment later. The library was large, but not by New York City standards. There were people in comfortable chairs reading, kids on computers, private rooms to the side, and librarians behind counters along the left wall.\n\nIn the children's section an old woman with a cane was sitting on a normal-size chair that was surrounded by a semicircle of smaller chairs. A college-aged kid was breaking down an easel. The woman gesticulated with her cane as she lectured the young man, pointing to a large leather bag. \n\n\"Pack it between the pieces of cardboard so it doesn't curl.\"\n\n\"Yes, Aunt Marie. I'll be very careful, as this is the first time I've ever done this. It's not like you've dragooned me into helping you every week since I was ten. Please, explain again how I should pack things up.\"\n\nShe swatted him in the butt with her cane, but was smiling. \n\n\"The smart mouth on you. Respect your elders.\"\n\nThere didn't seem to be any vanity in this woman. The photo on the poster hadn't been touched up. It showed every wrinkle on her rich brown face, and the one eye that was covered in what I guessed was cataracts. She tilted her head towards us, peering with her good eye. \n\n\"Ladies, are you here to see me?\"\n\nHer nephew had a Caribbean accent that was much thicker than hers. I wasn't good enough to tell what island it was from. Hell, I didn't even know if the accents differed. \n\n\"Um, yes, ma'am. My friend is Yekong and I'm Siobhan. We were wondering if this girl was at your reading today?\"\n\nTaking out my phone, I showed her Cecelia's photo. \n\n\"Such pretty names. And unusual. What's your last name, dear?\"\n\n\"Oliviera.\"\n\nShe nodded. \"My friend had a niece named Siobhan. Different last name. I'm sorry, but lots of children come to the readings and my eyesight isn't what it used to be.\"\n\n\"Understood. Thank you for your time.\" \n\nI turned to her nephew. \"Excuse me, I was wondering\u2014\"\n\nThe old woman tapped my leg with her cane. \"Why are you asking about this girl?\"\n\n\"She was on a school field trip, got separated, and we're trying to find her.\"\n\n\"Why aren't her parents here? This seems peculiar, if you don't mind me saying. You're a rather intimidating young woman and your friend isn't right.\" The old woman tilted her blind eye towards Yekong. \"She isn't normal. She is... extra.\"\n\nTurning to face her full on, I stared for a second. \"What does extra mean?\"\n\nShe tapped her head near the bad eye. \"This may be blind, but it still has the Sight. Your friend is not... one of us, is she?\"\n\n\"You're freaking me out lady. What are you trying to say?\"\n\n\"You don't know? She does. She isn't of the same stuff as us. This woman is loa taken flesh.\"\n\nGreat. The old lady was nuts. \"Right. Thanks for the heads up. We're in a bit of a rush. Her parents are staying back in Montauk waiting for her to call while I'm\u2014\"\n\n\"Montauk? Is Oliviera your married name?\"\n\nThis was getting weird. \"Yes, why?\"\n\n\"Are you Siobhan Corrigan?\"\n\nOkay, now it was more than weird. This woman was quickly slipping into the 'treat as a threat until we know more' category.\n\n\"How did you know that?\"\n\n\"Your Aunt Cynthia was a dear friend. She talked about you and your brother all of the time.\"\n\nI began to relax. \"You knew Cynthia?\"\n\n\"Yes and I can see now why you'd be looking for this little girl. George would have if he were around, wouldn't he?\"\n\nTalking about George hurt. He'd been my mentor and someone I'd idolized. I nodded.\n\n\"Yes, he would.\"\n\n\"The girl was here, Siobhan. She's over by the reference desk now. When this is all over, you come visit me. Marie St. Croix. How are your niece and nephew?\"\n\n\"Um, they're good, thank you. I'll reach out. We need to get to Cecelia.\" \n\nShe made a shooing gesture and Yekong followed me, albeit slowly. \n\n\"That woman knew your aunt? The one who was Alistair's aunt?\"\n\n\"Seems so.\"\n\n\"I do not like her. She knew too much about me.\"\n\n\"Yeah, we'll talk about it later.\"\n\nThis whole situation was bizarre. Yekong thought she knew too much about her when the old woman was spouting bizarre stories about her like she was an alien or something.\n\nIt took us a couple of minutes to find Cecelia. She was quiet as a mouse and was curled up with her feet tucked under her butt. The girl had a book but kept looking from it to the door to a phone she was trying to charge. \n\n\"Cecelia?\"\n\nShe startled and said something in Chinese. Yekong replied and then spoke to me.\n\n\"She says she's not Cecelia and then said she's a potato. Her Chinese is not very good.\"\n\nFrowning, I squatted down near the girl. \"Honey, we're not here to hurt you. Your mom and dad are looking for you and we're going to take you home.\"\n\n\"I'm not Cecelia. I'm Lindsey.\"\n\n\"Okay, Lindsey. How about I call Cecelia's parents and you speak to them? Would that be okay?\" When she nodded I continued. \"I need to call Father Jesse first.\"\n\n\"You know Father Jesse?\"\n\n\"I do. He's sort of an uncle to me. My name is Siobhan. He calls me Shiv. This is Yekong. Are you okay, Cecelia?\"\n\nShe took a deep breath. \"Yeah, but my phone is broke. A lady lent me her charger but it's really slow and I have to hold it at an angle like this.\"\n\nHolding the phone, she showed me. It was plugged into an outlet behind her.\n\n\"Okay, it's going to be fine. You want to use mine? Call your folks?\"\n\n\"Can I?\"\n\n\"Sure.\"\n\nI gave her mine and held hers at the precise angle to keep the charge going while she dialed. \n\nYekong put her hand on my shoulder. \"Siobhan, we\u2014\"\n\n\"Corrigan! Put your hands on your head, interlacing your fingers.\" \n\nIt was Flannery, the fucking detective. I'd had my back to the library as I spoke to Cecelia. Flannery continued.\n\n\"You. Yekong. Get on your knees and do the same thing. Siobhan, don't be stupid. Think of the kid. You pull your weapons here, I can't promise the kid doesn't get caught in a crossfire. We'll go down to the house and get this straightened out.\"\n\nI was so stupid. I deserved this. Yekong and I should have separated with her watching my back from a distance. There were too many high shelves, twists, and turns in this labyrinth of a library.\n\n\"What's the charge, Flannery?\"\n\n\"Homicide and assault and battery.\"\n\n\"The pawn shop?\"\n\n\"And the arcade. Siobhan, don't get the kid in the middle of this.\"\n\nI wasn't sure if he was concerned for her or if he was threatening her. Was it 'come quietly or she'll get hurt?'\n\n\"Yeah, okay.\"\n\nWhen my hands were on my head, someone came over and handcuffed me. I kept speaking to Yekong in a low, steady voice. Keeping her calm was paramount. When both of us were standing up, a thin voice called out.\n\n\"Siobhan, I will call your brother. Finn will know.\"\n\nI smiled. She may be crazy, but she was useful. \"Thanks, Mrs. St. Croix.\"\n\nThe cops had two unmarked cars parked out front. A crowd had formed and I could see Yekong flexing and rolling her shoulders. \n\n\"Just stay calm. Finn will get us out. We need to be viable for the girl. Yekong, you hearing me?\"\n\nShe nodded. One of the cops was backing people up as the others walked us over to the cars. Yekong and I went into the back of one, and Cecelia went into another. She was with Flannery, and two of the guys that had been following us were in the front of ours. \n\nAs soon as we were in I reached for the key under my shirt and the bandage I had on my back. Peeling it up, I carefully grabbed the key with my fingers and got to work. Yekong leaned over as far as she could and rested her shoulder against me. She nodded, as if she had just verified something.\n\nI was surprised to see that Yekong had popped her seatbelt out of where it attached and was quietly wedging the metal between the bands of one of her cuffs. She twisted, spreading the two bands. I turned back to face forward so if they looked back the cops wouldn't notice anything. The car with Cecelia slowly pulled into traffic, and ours followed. \n\nThey didn't have their lights or sirens on, and they weren't heading in the precinct's direction. \n\nAngling my fingers just right and keeping the tension on the key was difficult, but not impossible. By the time I was out of the cuffs, Yekong had the bands separated enough that the locking mechanism on hers slid open. \n\nSitting back, hands free but out of sight, I memorized the license plate number of the car with Cecelia. We were half a block away from the library when I saw a van pass us on the right. Tires screeching, it cut us off and slammed into the rear of the car Cecelia was in. Both vehicles came to an abrupt stop. \n\nDoors on the side of the van flew open, and four big guys poured out. Another got out of the front passenger side. They were all wearing ski masks. \n\nCecelia's car had slammed into the car ahead of it. The rear left quarter panel was shot, and I couldn't see the front from where I was. Without hesitation, one of the men from the van calmly shot the two cops in the front of our car as they fumbled for their weapons. Another car had barrelled down the other side of the street and stopped next to Flannery's. \n\nLeaning against me, Yekong yelled and slammed both of her feet against her locked door. The shooter took two steps towards us, getting within a few feet of the door and raised his gun. She loosed a primal scream and kicked it again. The door flew out and hit the guy, knocking him down. \n\nYekong scrambled out of the car and I followed. The cops had my guns, so I took the shooter's after I punted him in the head. Yekong ran into one of the men and launched him into a second. That was three down. The driver of the van stepped halfway out and drew a bead on her. I shot him three times. Four down. \n\nThe final guy from the van was aiming at Yekong as she rushed the car with Cecelia. I was about to shoot him when his head turned into a red mist almost simultaneously with my hearing the shot. Trying to scan the area while moving forward, I saw no shooter.\n\nBy the time I got to the car, the girl was being dragged out and to the vehicle that had just arrived. Flannery was dead with a gun in his hand. One of the new guys shot at me and barely missed. He switched over to Yekong and joined his friend in losing his skull. Who the fuck was helping us? The two guys that Yekong had knocked down were back up. I shot one and the other tackled her. \n\nShe killed him quickly, but the new guys had Cecelia in her car and were driving in reverse back the way they came. Yekong was running after the car and it was terrifying to see that she was gaining on it. She had to be running over twenty miles an hour. The car swung around, was thrown into drive, and took off. \n\nI grabbed one of the guys on the ground and ripped off his mask. He had a stylized star with cyrillic lettering at the base of his neck. Russian mob. Brighton Beach was also called Little Odessa. What the fuck was Captain Donaghy involved with?\n\nGoing back to Flannery's car, I grabbed the evidence bag with my guns and knives. Hearing someone approach from behind me, I whirled towards them, H&K drawn.\n\nThe Asian man held up his hands. \"I'm no threat, ma'am. Just passing on a message. Peter Lo Fan would like to meet with you about the girl.\"\n\nHe held out a business card. When I took it, he walked away and blended into the growing crowd.\n\n\"Yekong, let's get going.\"\n\n\"Should we not examine them for identification?\"\n\n\"No, we should be getting the hell out of here. They're not going to be carrying any ID. None that are real, anyway. And I'm sure that van was stolen. Cops are on their way. Let's go.\"\n\n\"We... We are going to just leave this little girl?\"\n\n\"What do you want to do, walk up and down Canal? 'Cause that makes a lot of sense. I'm sure they parked and are just doing some shopping instead of hightailing it over the bridge.\" I wasn't sure if she got sarcasm. \"Right now we need to get off the streets.\"\n\nHer voice became a scary monotone. \"Alright, Siobhan. We shall wait.\"\n\nWithin half an hour we were at Benjy's, a small restaurant in Little Italy. \n\n\"We just had the pizza. Are you hungry again?\"\n\nI glared at her and turned to the host. \"Two, please. Maybe something quiet where we can talk?\"\n\nHe walked us to a two-top towards the back. I ordered some baked clams, insalata, and a Sprite while Yekong ordered two waters and an orange juice. When the waiter came back I asked for a second bowl of the focaccia bread. Yekong shook her head. So, I ate a lot. I wasn't unhealthy, so who cared? \n\nI drank my Sprite. \"You still have the phone Finn gave you?\"\n\nShe ignored me, staring towards the floor.\n\n\"Yekong?\"\n\nMore ignoring.\n\n\"Yekong!\"\n\n\"I heard you.\"\n\n\"Okay, so do you still have that phone?\"\n\nShe was still looking down. \"There is blood on my boot.\"\n\n\"And?\"\n\n\"It is right there. On the boot.\"\n\n\"Okay, so we'll get it cleaned.\"\n\n\"No, I need to do it now.\"\n\nShe dipped her napkin in her glass of water and then began untying the Timberland.\n\n\"Yekong, calm down. I'll get you a new pair of boots.\"\n\nLooking up at me, I could see the anguish in her eyes.\n\n\"They... They were the last thing Robert purchased for me. He said I needed good, sturdy clothes and strong boots. I do not remember the word he used. Like sturdy. It... They were the last things I have of him.\"\n\nI thought of her brother and how he'd taken the bullets destined for her and sighed. As disconcerting as she was, she'd saved Finn and his children. I should have checked in on her and seen how she was holding up when she retreated to the woods and the cabin she shared with Robert. \n\n\"Okay. We'll get it taken care of. Don't use water on them. We'll go to a professional and have the blood removed.\"\n\nBiting her lip, she looked at me, and nodded. \"Thank you.\"\n\n\"Yeah. Let's see what we can do about Cecelia. You have that phone?\"\n\nShe handed it to me and I called Finn. \n\n\"Hello, Yekong. Is everything okay?\"\n\n\"Finn, it's me. We need your help. Some guys grabbed up the girl. We found her, cops took her from us and had us in custody. Russians took out the cops and took off with her.\"\n\n\"Are you alright?\"\n\n\"Fine.\"\n\nOkay, what can I do?\"\n\n\"Her phone is messed up and she wanted to talk to her parents. I gave her mine and I have hers.\"\n\nHe saw the implications immediately. Sometimes it was good to have a genius for a brother. \n\n\"I'll start tracing it and see if Pete can get back to you to get her phone. I have some people in Manhattan that can get everything off of hers while being discreet. What else can I do?\"\n\nI took out the business card. \"Can you find out anything about a guy named Peter Lo Fan?\"\n\n\"Sure. Enjoy your dinner and I'll call you back.\"\n\n\"Okay.\" I hung up. \"How did he know we were having dinner?\"\n\nYekong shrugged. \"He knows you.\"\n\nI raised an eyebrow. \"Funny.\"\n\nI didn't want anything heavy after dinner, so I had a raspberry torte with my espresso. Yekong's phone rang just as I was finishing. I looked at her, but she nodded so I answered. \n\n\"Yes?\"\n\n\"It's me. I have the location of the phone. It's in Brighton Beach. Someone should be where you are in less than five minutes for the girl's phone. Lo Fan is either number one or number two in the New York tong.\"\n\n\"You're the best. No one but me or you sees what's on her phone. Yekong and I are going to go talk to this Lo Fan and then we're going for the girl. If anything happens to us, I have my letters in the safe. Make sure they're handed out, okay?\"\n\nTo the best of my ability, I had put my thoughts to words for the people that I loved. He knew what I was talking about, and Finn would get them to the people that mattered in my life. Finn's tech guy was there in less than the promised five minutes. ",
        "\"Seriously? An iPhone? Piece of cake. Give me a couple of hours. I'll get the data to Mr. Corrigan.\"\n\nWe paid and headed out the door behind the twitchy little tech guy. Consulting the business card again, we got an Uber to the address listed for Lo Fan. It would have been a fairly quick walk, but we wanted to stay out of view. We'd been involved in a scene where cops were killed. There was no way that they weren't looking for us. \n\nAs we sat in the backseat of the car, Yekong stared at her boot. \n\n\"I held him as he died.\"\n\nI didn't know what to say. What were the right words for something like that?\n\n\"I know. I'm sorry. He must have really loved you.\"\n\n\"He did.\"\n\nI awkwardly patted her shoulder. \n\nThe driver pulled up in front of a large brick house. There were six Asian men standing outside the house and another two sitting at a table on the sidewalk playing some game with tiles. We were still in Chinatown and I was surprised at this locked-away bit of opulence. It looked like a brownstone from the Upper West Side or the better parts of Nassau County instead of on a small side street in Chinatown.\n\nWe got out and began walking to the steps when one of the men stepped in front of us.\n\n\"Can we help you?\n\n\"Yeah. We're here to see Peter Lo Fan.\" I handed him the business card.\n\n\"Give me two minutes.\"\n\nIt was closer to three, but he escorted us inside politely. We went up three flights of stairs before he stopped us. I'm not sure what I expected, maybe a design with an oriental aesthetic, but it looked like any other rich man's home.\n\n\"I'm going to have to pat you down.\"\n\n\"Don't bother, I'll tell you what I'm carrying. I have two guns, two knives and I'm wearing a vest.\"\n\n\"I'm going to have to hold the weapons.\"\n\n\"That doesn't work for us. We're here because he wanted to speak to us, not because he's doing us a favor. I'm just as happy to turn around and walk out.\"\n\n\"I'm not trying to press this, lady, but that's not going to happen. Mr. Lo Fan wants to speak to you, and that's not going to happen while you're carrying.\"\n\nThis guy was insanely arrogant. He had no idea who we were or what we were capable of and yet he was trying to dictate rules of engagement.\n\n\"I suggest you go speak to Mr. Lo Fan. We're not going in there without being able to protect ourselves and you're not going to be able to stop us if we want to leave.\"\n\nHe seemed to think about it for a moment then took out his phone and made a quick call. Something was exchanged in what I assumed was Mandarin or Cantonese and he hung up. While he was doing that I took out Yekong's phone and opened a Chinese to English app.\n\n\"I guess you are the exception to the rule. You can keep your weapons on you.\"\n\nWe went up one more flight of stairs and out onto a rooftop. There was an old balding man with a wispy beard holding onto a cane as he opened up a pigeon coop. The roof had four long banks of coops, which meant that there could have been more than just the six obvious guards with him. I didn't like having my vision blocked and potential threats lurking around the corner.\n\n\"Mrs. Oliviera!\" He called out in a strangely robust voice. \"Welcome to my home. Are you a fan of birds? Remarkably loyal animals. Maybe that's not the right word though, what do you think? Predictable? Maybe that is better. I find myself needing your assistance. The men who have taken the girl... I cannot touch them. There are agreements in place. If she was taken from my men I would have free reign, but she was taken from the police.\"\n\nI expected slow and gentle but his hand darted into the cage with speed and accuracy, like a snake striking a rabbit. He pulled out a pigeon whispered to it and tossed it into the air. It took off flying east. \n\n\"So instead I need you and your formidable friend to go for me and bring that girl back here.\"\n\nHe knew who I was and yet seemed to believe that I would deliver up Cecilia to him. He clearly didn't know enough about me.\n\n\"And why would I do that?\"\n\n\"I cannot reach out and touch this girl, but I have no such restrictions when it comes to your daughters, your niece, and your nephew. I don't want to harm this girl, I just need certain assurances. Someone who works for us may have overstepped, and I don't want any of the baggage he is carrying to come back on the rest of us. I will explain that to the girl, compensate her parents, and we shall be done.\"\n\nDid this motherfucker just threaten my family? I was about to explain the error of his ways when Yekong began speaking rapidly in Chinese. I looked down at the phone.\n\nIf you mention her daughter or my niece and nephew again I will kill you. it doesn't matter how many men you have on your roof. You will be dead within seconds of uttering your empty threats.\n\nHe assessed Yekong like an equestrian would examine a horse. Coldly and analytically, he made his judgment.\n\n\"I believe you believe that. My men are exceptional. You may want to revise your opinions.\"\n\nShe spoke again in Chinese in spite of his using English. Again, I looked down at the app. \n\nI have killed scores of men more capable than these. Your threats are toothless, old man. I'm considering hurling you from the roof just to watch you fall. Finish saying what you had us come here to hear so we can be on our way.\n\nLo Fan looked from Yekong to me before speaking again. \"You have an opportunity here. The road ahead of you splits. You can make a friend or you can make an enemy. I give you my word no harm will come to the child. Bring her back and let us talk to her or once she is no longer under the care of the Russians we shall come take her from you.\" \n\nYekong looked at me. This time I took the lead in speaking. \"I get it. You're a very big fish in a small pond called Chinatown. Let me give you a bit of advice. Dig deeper when you're doing research. You come after that girl and I will burn you to the ground and chase the flames back to mainland China. We're leaving now. You do anything to us on the way out and we will kill every fucking person in this house and that includes you. If we miss anyone, my brother will have people come and get the rest.\"\n\nThe hair on the back of my neck stood up as we made our way back down the stairs and out the front door. I kept expecting a bullet in the back of my head. We had to walk two blocks before we found a cab. \n\nThe driver took a cigar out of his mouth. \"Where to?\"\n\nI peeled four fifties off my roll and slid them into the payment slot. \"Little Odessa. Any restaurant will be fine.\"\n\n***** \n\nNo one was stopping traffic at the Manhattan Bridge and I didn't see a huge influx of cops in Chinatown. Something was seriously off. How could four plainclothes detectives be killed in the streets and not have all of the city shut down?\n\nMost people lacked the perspective to fully understand the geography of New York City. Folks from smaller cities like Columbus or Philly thought that things would be next to each other. For those coming from Los Angeles, they expected everything to be spread apart. New York was a combination of both. It would take us less than half an hour to get from the skyscrapers of Manhattan to Brighton Beach.\n\nAs we drove, I looked out at the graying sky and hoped for some rain to break the heat and humidity. We were on the Belt Parkway when Yekong's phone rang. I knew it was for me but let her answer.\n\nShe spoke and turned to me. \"It is your brother, Siobhan. He would like to speak to you.\"\n\nI took the phone. \"Hey, Finn. What do you have for me?\"\n\n\"It didn't take my guy long at all. He just sent me the dumped contents of the phone. It's not good. You're not going to believe this shit. That little girl has a video of a cop murdering that politician.\"\n\n\"Let me guess, Captain Donaghy?\"\n\n\"I'm not going to ask how you do that, but yeah. Shiv, if they know this video is out there, that girl is less safe than we thought.\"\n\n\"Are you still tracking my phone?\" \n\n\"Yes. It traveled for a while, but it's not moving now. It's just off of Coney Island Ave. I'll send you the address. What else can I do to help?\"\n\n\"Finn, what do you think is going on here?\"\n\n\"The same thing as you. Somehow, the Russians found out what happened. Whatever. They probably have someone on their payroll inside the tong. They figured if they had control of the girl they would have some serious leverage. They'd have a witness who saw a corrupt cop kill a politician at the orders of a senior member of the tong. Imagine if they had the video? It would be a hundred times worse. Shiv, if they've hurt this girl, she probably told them everything. Hell, she probably told them everything anyway. They're going to be expecting you. I need to know what I can do to help.\"\n\n\"Yeah, okay, stay close to your phone. I'll reach out.\"\n\nAfter hanging up I was quiet for a while as I stared out the window at the traffic and the ocean. Yekong was like a statue sitting next to me. It was eerie. She was just too damned still. I finally turned to her.\n\n\"I freaking hate Coney Island.\"\n\n\"Is Coney Island near Brighton Beach?\" \n\n\"Yeah. Very. When I was younger and was first dating Tommy, Finn convinced him that I was going to be competing in the 4th of July hot-dog-eating contest. He had shirts made up and signs to root me on. The worst part was that Tommy thought it was feasible. He was all excited about going to Coney Island to watch me win. I was mortified. OK, so I have a fast metabolism and eat a little more than the average person. That doesn't mean I'm entering hot-dog-eating contests. Finn still enters me every year.\" \n\n\"That seems... cruel.\"\n\n\"Sort of. Not really, I guess. Just a brother thing. He still talks about how I put dye in his fish tank to make him think his fish were sick. I was twelve. Turns out three did die. Brothers and sisters. You take the good with the bad.\"\n\n\"I see.\"\n\nShe didn't. Yekong grew up without a family and only met her brothers late in life. It felt petty to bring up the hot dog thing in front of her. Talking helps to settle me, so I'd let myself ramble. I shut up and watched the darkening skies. By the time the driver was getting off at exit eight on the Belt, I was studying maps on Yekong's phone. I had him drop us off at a diner about ten blocks away from the building Cecilia was in. At least I hoped it was her and not just my phone.\n\nGetting hit by a raindrop, I looked up at the skies and scowled.\n\n\"OK, this can change, but here is what I'm thinking. Unless something else jumps out at us, I'll try to get into their backyard and go through the back door. You'll go to the front and make some sort of a spectacle of yourself. I'm not saying start killing people. Just create a distraction while I go through the back and find Cecilia. Our goal is pretty simple. Get the girl out. That's it. If it's a choice between her or me, choose her every time.\"\n\n\"I agree with this. The child takes priority.\"\n\nI smiled. No, Siobhan. I'd never leave you behind. We'd always find a way. That would never happen. So much for sentimentality.\n\nYekong was looking around Little Odessa like a tourist. \n\n\"This is not what I expected. I thought it would be some homes where people lived, a pier by the water, and maybe a restaurant or two.\"\n\nI knew what she meant. Brighton Beach was loaded with busy streets, five and six-story high condominium buildings, trains that ran overhead, and stores everywhere. There were a disproportionate amount of grandmothers who, in spite of the heat, wore jackets with collars up. And many wore gloves. There were street vendors galore. Most sold tchotchkes, but some sold pastries.\n\nWe kept walking, making our way southward towards the beach, and the raindrops began to fall consistently.\n\nAs we passed United Citizens Gymnasium, Yekong grabbed hold of my forearm. Her grip was like iron and it hurt. As I stepped towards her, I applied pressure to her thumb and twisted around her wrist, breaking her grip. I thought I was going to have to either threaten her or pull my gun. The large no-neck men coming from the gym helped me rule out the possibility of the gun. When I looked up, I noticed her expression. She seemed terrified.\n\n\"I... Siobhan, I think I just saw...\"\n\n\"Who? Cecilia?\"\n\nShe shook her head silently. \"No. It's impossible, I must have been mistaken.\" Her voice was shaky.\n\nYekong began walking briskly, and I almost had to jog to keep up. Who or what could scare Yekong?\n\n\"Was it someone you know?\"\n\nGlaring at me for a second, she turned back to the sidewalks and kept walking. \"I said it was a mistake. Let us find this girl.\"\n\nI shrugged, and we kept walking. As we walked towards the water, the neighborhood had less of a community feel and began to grow more touristy. We were about a block from the beach when I had us turn left onto a smaller street. The house was one block up and one block south. I pulled up a street view from Google Maps and showed Yekong.\n\nWhile she took a look, I scanned the streets. The lighting was excellent, much better than I would have preferred. My hopes were to hop over some fences and go through some backyards to get to the rear of the house where they were holding Cecilia. It looked more difficult to do so unnoticed than I had anticipated. \n\nSighing, I turned to Yekong. \"Okay, give me twenty minutes and make some sort of commotion at the front door. Whatever it takes, I'll go through the back door. Hopefully, nobody will notice me. If you hear yelling or shooting, feel free to do what you want in the front. Otherwise, try to give me some time to get the girl out.\"\n\nThere was a small alley between rows of overpriced homes. People kept garbage cans, dirt bikes, and other claptrap back there. I tried to be as unobtrusive as possible as I made my way down the alley. When I saw a house without lights on, I climbed over the fence and hid in some bushes before moving to their neighbor's yard, then another. I was now adjacent to the house where my phone was.\n\nChecking my watch, I let the minutes tick away to when I expected Yekong. The backyard of the house had a large paved area with two propane grills and some patio furniture. There was a large guy in the backyard wearing a grey turtleneck under his shoulder holster. He'd look around, take a drag from his cigarette, and stare at the door angrily. Smoking felt so anachronistic. At least I knew it was probably Cecelia rather than just my phone at this house. They rarely have armed thugs guarding Weber grills.\n\nThere were bushes on both sides of the fence. I was crouched down low, brushing up against the fence and watching him. He paused for a moment in his meandering, stared where I was crouching, and headed my way. I checked my watch. Three minutes to go. When he got to the bushes, he looked over his shoulder furtively and then pushed his way in. My H&K was out and in my hand as he made his way forward.\n\nThe drizzle had turned into rain and I regretted not bringing something with a hood.\n\nWhen he was a few feet away from me, he stopped and started unzipping his pants. He was about to pee on his neighbor's bushes. The goon looked astonished as I sprung up, reached over the fence and slammed the heel of the gun against his temple. Unstable, he tottered forward. I grabbed the collar of his turtleneck and yanked him towards me. He was half over the fence as I wrapped my arm over the back of his neck and applied a guillotine choke. Grabbing the top of the fence, he pushed upwards. I couldn't collapse his knee, so I just exerted more pressure. His meaty fingers grabbed my arm and pulled frantically, slowed, weakened, and dropped to his side as he lost consciousness.\n\nI climbed over the fence and dashed over to the back door. It was twenty-one minutes. Where was Yekong? I was going to give her another minute before checking to see if the back door was unlocked. After sixteen seconds, I heard some yelling in what I assumed was Russian from inside the house. I took that as my signal. Thankfully, the door was unlocked. I slipped inside and made a quick sweep of the back of the house. The front and back doors were along the same hallway, so I quickly ducked out of sight. I could hear voices coming from the front and saw three men by the door yelling in broken English at Yekong.\n\nHalfway between the two doors were stairs leading upwards. Behind the door in the kitchen were more stairs that led down to a basement. Would Russian thugs keep a child in a nice upstairs or in a dank basement?\n\nDefinitely downstairs.\n\nI was about to head down when I heard three shots. Peeking my head around the corner, I saw one of the guys by the door on the ground face first, bullet wounds on his back. Someone was firing at them from the stairs to the second floor. The two others that were yelling at Yekong spun and began firing. Another hit the ground as shots began coming from another area in the front of the house. It was chaos and Yekong hadn't even entered yet.\n\nThe back door slammed open, and Yekong stood there looking as calm as if she had been out bird watching. She saw the door to the basement was open and scanned the kitchen.\n\n\"The girl is downstairs?\"\n\n\"Just a guess, but I'm thinking so.\"\n\nShe opened the refrigerator door, put her foot against its side, and ripped it off its hinges.\n\n\"I shall go first.\"\n\nSometimes it pays to have an Asian Amazon on your side. I raised my eyebrows and made a sweeping gesture towards the stairs. \n\nLike she was some junkyard Captain America, Yekong went down the stairs using the refrigerator door as a shield. I stayed as close as possible so I could fire past her if necessary. Two men were down there. One had an AK, the other a pistol. The door from an appliance wouldn't stop an AK, so Yekong improvised. They started shooting as soon as we rounded the corner so Yikong hurled the refrigerator door at the one with the AK and I put three in his friend.\n\nThe one I shot lay unmoving, and Yekong had picked up the door and slammed it down on the other one. Looking around I saw a pair of skinny legs scrambling through a window and out to the side of the house. It was Cecilia.\n\nGood for you, kid. Run fast and far. I nodded at Yekong and she returned the gesture. We headed back upstairs. \n\nIf you took a step back and thought about it, she should look ridiculous. A large, unarmed Asian woman carrying a refrigerator door against a possible cadre of Ukrainian thugs. Instead, she looked like she stepped out of an action movie and was about to take out a hidden band of Nazis. It was annoying. No one should look that good when they were carrying part of an appliance into a gunfight.\n\nIt didn't matter. The main floor looked like an abattoir. There were nine bodies and no one moving. Six of the Eastern Bloc mooks and three Asian guys. Taking a deep breath, I gloved up and checked the body of one of the outsiders. The tong wanted us to do their dirty work so they couldn't be accused of breaching some deal in place, so I assumed these three were cops. Finding a badge on the first one, I realized I was right. \n\n\"This isn't going to be good.\"\n\nYekong looked out the rain-swept window.\n\n\"Should we not find the girl?\"\n\n\"Yeah, we definitely should. Keep an ear out for sirens. There's no way neighbors didn't hear what was going on here.\"\n\nThe window Cecelia had climbed out of faced south, so that was the direction we headed. She couldn't have been more than three minutes ahead of us. If she found a place to hide and we couldn't find her, there would be a serious issue. We had no way to tell if any cops coming down were corrupt and working for Donaghy. She could run to someone she thought was a safe harbor only to be... Well, I wasn't going to think about that. We'd find her. End of story. \n\nYekong and I were in a small pocket of purely residential buildings. Hustling south, we quickly made it to the boardwalk. When we got there the skies opened and the rain came down in sheets. What now?",
        "\"Would it be advisable for us to split up? I shall go east and you go west?\"\n\n\"Yeah, maybe ten minutes and then we check back here? Can I hold onto your phone? I'll call Finn and see if he can check on mine. Maybe Cecelia's still carrying it.\"\n\n\"Of course.\"\n\nThere were few obvious tourists but plenty of neighborhood folks ambling about. A man was packing up an accordion and the few home-style restaurants on the pier had customers peering out and looking to the sky. Umbrellas were going up as pedestrians braved the rain. I was sure that I looked like a hot mess as Yekong stood there impassive, rain slicking back her hair as if she should be standing on the prow of a pirate ship ready to lead cutthroats into battle. She was nauseating. \n\nShe headed east while I walked west, dialing Finn. Cecelia would recognize me, so I tried walking in the middle of the boardwalk and stayed visible. My eyes peeled for the cops or the child, I made slow progress. I was five minutes into my search when I heard a gunshot from whatever the Ukrainian equivalent of a bodega was. \n\nDropping into a crouch, I scanned the storefront as my heart thundered in my chest. Professionals against professionals was one thing. Professionals against a child was another. A middle-aged man came running out the door, and I hoped he'd be enough of a distraction to allow me to get close without getting shot. \n\nThere was some yelling in Russian or Ukrainian before a deep voice barked out in English.\n\n\"Shaddup! I'm police. Kid, you can come out. I'm here to take you to your parents. They're worried sick. You can trust me. Your folks told you that, right? Look for a police officer when there's trouble. Well, that's me. C'mon out.\"\n\nI could hear him moving around as he spoke. \n\nA second voice spoke. \"Donaghy, she's over here.\"\n\nFuck. There were at least two of them. Hoping there was no bell on the door, I slowly pulled it open and, still crouched down, made my way in. Four rows ran the length of the store with the register and counter at the end. \n\n\"Hey, darlin'. You led me on a merry chase and I've had a hell of a day. Your running is over. Let's head on out to my car and we'll get you home.\"\n\nHis tone had changed. Donaghy was in the same aisle as Cecelia. I could tell. He was talking right to her as opposed to trying to lure her out. There were breaks in the aisles halfway down, effectively turning the four long aisles into eight that were shorter. I had to wager that she would be on the side of the aisle closer to the street and would be behind me. I stepped from my aisle into theirs at the break and pointed my H&K at Donaghy. \n\n\"Drop it. Don't push me, Donaghy. I'll put a fucking hole in you and count it a good day. Cecelia, can you hear me? Run. Get out and head left. Look for my friend from the library.\"\n\nThe voice from behind me wasn't that of a little girl. \"No, Cecelia's going to come with me.\"\n\nSpinning around, I saw a tall, thin Asian man grab her up. I couldn't fire without risking hurting the girl. I could, however, beat the crap out of him if I wasn't shot. I took a step towards him and caught a glimpse of someone moving towards me quickly and to my left. What I assumed was a third cop thought that movie martial arts worked in real life. He came at me with a flying side kick. \n\nTaking a half step forward, I slammed my elbow into his chest. His kick had left him defenseless as well as robbing his attack of any power. He toppled backward into a display of what looked like Russian Twinkies, got his bearings and came at me again. Donaghy ran around the end of the aisle towards the one I had just left, probably heading towards the exit. The guy with Cecelia dragged her toward the front of the store. \n\nTwinkie Guy took up a Wing Chun stance and began waving his hands like he was Bruce Lee reincarnated. There was a reason there were no successful kung fu fighters in MMA. That shit hadn't worked in thirty years. He stepped forward quickly and was about to snap a front kick at me when I used a front stomp on his shin. \n\nHe stumbled backwards and toppled into the display again. As he yelled out in pain, his hand snuck to his waist and under his jacket. \n\nFuck. \n\nI got to my H&K before he got to his service revolver. The store owner had a dead cop in aisle one. A dirty cop, yeah, but still dead. \n\nRunning to the front of the store, I saw the first Asian guy holding Cecelia and pointing a gun. He fired and I dove back into the store. Peeking my head up, I saw him holding her up and in front of him, gun extended, waiting for me to pop out again. Where was Donaghy?\n\nCecelia leaned down and bit his hand. It must have been hard. I saw blood and that piece of shit yelled as he dropped her. She began running for the beach as he pivoted and began turning his gun in her direction. Everything slowed down and I slipped into hyperfocus. Jumping back out of the store, I raised my gun knowing I was going to be too late. \n\nA 55-gallon drum hurtled through the rain and slammed into him. His two shots went wide as he fell forward. Yekong stalked forward like a nightmare brought to the waking world. Her face was contorted into a mask of rage. Reaching down, she grabbed his foot and yanked. He fired at her twice before she lifted him from the ground and twisted. His back to her front, she snaked one arm around his neck while the other hand grabbed the side of his head. \n\nWith a sudden twist and a sickening crack, the second cop died on the boardwalk. There was blood seeping into Yekong's shirt. She'd been hit. Gritting my teeth, I knew I had to do what I could to save the girl. I'd come back for Yekong as soon as possible. \n\nI began running in the same direction Cecelia went, hoping I didn't slip and fall on the rain-slickened wood. My line of sight was horrible. It was almost fully dark and the wind was picking up. The light poles had large gaps in their coverage. Did she run to the water? Was she on the beach?\n\n\"Kid, those two women are trying to kill you. C'mon out. I'll get you home.\"\n\nFuck, fuck, fuck. Donaghy was under the boardwalk, and I had to assume that Cecelia was as well. Stepping over the guard rail, I let myself hang down and then released. The twelve-foot drop was mitigated by my hanging and the soft sand, but my knees were aching. \n\nCrouching once again didn't help the creaking in my knees, but I went under the boardwalk, gun out. There was no sign of either of them, and I couldn't hear anything over the rain slamming into the wood and the surf crashing into the sand. Moving slowly and deliberately, I made my way to the center of the boardwalk, trying to keep my back to a support beam at all times. \n\n\"Cecelia, I spoke to your mom and dad. Other cops are bringing them into the city. We need to get you out of here and keep you safe. My car's right on the street. We can use the lights and the siren. You'd like that right? I'm sure you have to be exhausted. Where are you?\"\n\nThat fucking piece of shit. \n\nI made a decision and hoped that I wouldn't regret it. \"Cecelia, stay where you are. Don't go with that man. Ever.\"\n\nThat was the last voice for at least two minutes. \n\n\"You're as big a pain in the ass as your uncle, Corrigan. I suppose money wouldn't work. They'd pay you to just walk away.\"\n\n\"I'll take whatever's in your wallet, Donaghy. Why don't you come over here and give it to me? We can settle this, just you and me.\"\n\nHe laughed. \n\n\"What the hell is in the water out there in Montauk? Everyone thinks they're a hero? Your uncle had the biggest stick up his ass I've ever seen. Wouldn't even take free coffee and you're going to get killed for a kid you don't know. Fucking idiots, both of you.\"\n\n\"Yeah, well\u2014\"\n\nA bullet hit a wood beam not too far from me. Why the hell was I talking to this guy? I had a rough idea of where he was, but his shot was way too close. \n\nWe were in a stand-off that I couldn't win. Cops would be arriving soon. Donaghy could wait me out. I needed help. As I pulled out Yekong's phone I caught a movement in my peripheral vision. Cecelia was making a break for it, running towards the water and out from under the boardwalk. \n\nA form dropped down from above and crushed her to the sand just as Donaghy fired three times. Stepping around the pillar I was behind, I fired at where I thought he was. And then again. And again. And again. And again. The shots echoed under our wooden ceiling and reverberated off the sound, echoing as if it were a mantra of death. I prayed it was his death and not Cecelia's. \n\nHe didn't fire again and I heard moaning. Throwing caution to the wind, I jogged toward the noise. I had to deal with Donaghy before handling whoever had Cecelia. He was lying in the sand, pivoting back and forth in pain, clutching his side. I'd hit him twice. After kicking away his gun, I quickly patted him down. He grabbed my wrist lightly.\n\n\"I... I need an ambulance. Call... Tell them there's an officer down. 10-58. Code 10-58.\"\n\n\"Yeah, Donaghy. I'll get right on that.\"\n\nGrabbing his revolver, I headed to where I saw Cecelia. She was yelling and I could barely make her and the person carrying her in the distance. I knew my knees were going to hate me the next day, but I ran. The person stumbled and I gained on them. Another stumble, but they kept going. \n\nWhen I was within ten yards I realized it was Yekong. \n\n\"Stop! Yekong, it's me. Stop!\"\n\nStumbling again, she put Cecelia on the sand behind her and turned to face me, her hands up and ready to attack. \n\n\"Yekong, it's Siobhan. Let me help the girl.\"\n\nI walked forward slowly, my hands out to my sides.\n\n\"Did you hear me? It's Siobhan. It's over.\"\n\nShe nodded and fell to her knees.\n\n\"Siobhan... There is blood on my boots. They...\"\n\n\"Well get them cleaned, Yekong. We'll get them cleaned.\"\n\n*****\n\nPete picked us up and we drove to an animal clinic in Brooklyn that Finn supports. The manager met us there and let us in. Yekong had taken three bullets from Donaghy that were meant for Cecelia. I desperately wanted to take her to an ER, but she insisted she'd had worse and could hold on. She wanted Dr. Khalil, the same physician that had helped her brother when he was on death's door. \n\nFinn said he'd had the doctor waiting in Queens and she'd be there soon.\n\nIt was a series of events I didn't want to have to relive. Dr. Khalil meeting me at the animal clinic so she could fix me up after a killing spree had happened before. This time it wasn't me that needed the fixing, it was Yekong. Dr. Khalil raised an eyebrow at me as she walked in and I shrugged.\n\nShe made sure Yekong was stable enough to make it back to Montauk. While she did that I held Cecelia and we spoke to her parents. I called Father Jesse, explained that the girl was alright and then called home. I was probably the only one that would be able to tell how much of a mess Tommy was, but we spoke and I reassured him that I was okay.\n\nHe put me on with my girls, for my sake, not theirs. They told me about their day and I just leaned back, rested my head against the wall and closed my eyes while I listened to the voices of the people I loved the most. \n\nThere was a shitstorm that night with the NYPD and the media. The street in front of my house was crawling with cops and so was Finn's. We stayed at Pete's home, which was only a few miles away. \n\nCecelia's parents couldn't stop crying, hugging her and thanking me. Yekong was in the same clinic that her brother had been in. I fell into a deep sleep and the next day I took my pills again. All of them, even the anti-depressants. \n\nThe video from Cecelia's phone changed the narrative, but I was still in deep shit. Then we discovered that she had used my phone to record the audio under the boardwalk. We released that wide and everything was quickly swept under the rug. This was a PR nightmare for the NYPD, and our lawyer was the best that money could buy. Yekong and I were cleared after jumping through a mile of hoops and dealing with a mountain of red tape.\n\nMy hatred for bureaucrats burned bright.\n\n*****\n\nAfter knocking, I opened the door and walked through the house to Finn's kitchen. He always had something good in his fridge. I chatted with my niece and nephew while eating some cold fried chicken until my brother walked in. \n\nHe looked at me and the plate of food. \"You about ready?\"\n\n\"Yeah. They're cool doing this with Zoom?\"\n\nFinn shrugged. \"I don't care if they are cool with it or not. They want what we have, so they'll deal with it. Before we get started, you have a guest out on the dock.\"\n\n\"Yeah? Who?\"\n\n\"Go see.\"\n\nYekong looked up as I approached. A month had passed and she looked just as good as she always had. There was something so alien to her that it freaked me out. How does someone walk around and save a girl with four bullets lodged in their body? How do they heal that quickly? She'd returned to Kentucky two weeks ago and now she was in my brother's backyard.\n\n\"Hello, Siobhan.\"\n\n\"Hey. Can I ask you a question?\"\n\n\"Yes, of course.\"\n\n\"What freaked you out in Little Odessa?\"\n\nShe sighed. \"Do you remember outside of the library? Someone shot those Russians?\"\n\n\"I do.\"\n\n\"It is not possible, but in Little Odessa, I thought I saw Ghost.\"\n\n\"Robert? Your brother? He's...\"\n\n\"Dead. Yes. I know. I held him as he died. There must be something wrong with me,\" she tapped her forehead, \"here.\"\n\nI had no idea how to respond to that. \n\n\"Um, okay. We'll figure it out. Maybe someone that looked like him, and the stress and... Yeah, I'm not sure, but we'll figure it out. Why did you come back?\"\n\n\"You are dealing with the people from the pawnshop today, yes? I thought you might need help.\"\n\n\"Well, we're not dealing with them like that. Finn dug up a bunch of information and we're walking the authorities through it all. The FBI is handling it.\"\n\n\"Ah. I see. I did not know that.\"\n\n\"Yekong... Don't take this the wrong way, but what's the connection? I could handle it on my own, either way. Why come all this way to help me?\"\n\nShe looked to the water. \"I now have family. You know this. My brother and sisters. My niece. I have many people in my family now.\"\n\n\"Okay, I get that.\"\n\nYekong still looked out to the sea. \"I have allies, such as Pete or Jim or your brother or Jennifer. I have a number of allies.\"\n\n\"Right.\"\n\n\"I thought you were going to be in danger. I only have one friend, Siobhan. In all the world, I only have one friend.\"\n\nCrap. How the hell was I supposed to reply to something like that?\n\nIt took me a minute to get my bearings. \"Okay. Yeah. I see.\" I paused for a moment. \"When we're done talking to the FBI, you want to come back to my place? I think my kids might like having another aunt.\"\n\n*****\n\nWith thanks to the members of the Alphabet Attackers and my continued appreciation goes out to Brad, Jerry, Vik, Racing, Timothy, MrZ, Leon, Phillip, Laurence, Adam, Ken, Mark, Nora, Cheryl, Kerry, RP, Zachary, Alex, Mike, George, and Charles.\n\nAlso, a tip of the hat goes to Chloe, organizer of ."
    ],
    "authorname": "Bebop3",
    "tags": [
        "hammered an ode to mickey spillane",
        "siobhan",
        "montauk",
        "yekong",
        "no dr pepper",
        "chinatown"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/chinatown-sunset"
}