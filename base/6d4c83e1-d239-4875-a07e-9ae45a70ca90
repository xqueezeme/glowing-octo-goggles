{
    "title": "Beneath the Ice Ch. 06",
    "pages": [
        "Since Joelle was also attending the black-tie dinner, she offered to arrange for the same make-up and hair stylist that she used to visit Charlotte the same day. Alexei told her to do it, and not worry about the expense. It still made Charlotte feel a little funny, accepting such expensive favors from Alexei, but he insisted and she could admit that she enjoyed being spoiled. It was such a novel experience. So she allowed it, this one time.\n\nThe day of the event, a Sunday, Zoe watched with wide eyes and a grin as her mom was made over to look like a princess.\n\n\"You look just like Ariel, Mommy.\"\n\nCharlotte grinned at her daughter, where she was perched on the couch with Sarah, who'd agreed to babysit for the evening. \"Do you think so?\"\n\n\"Better.\" Sarah winked and patted Zoe's back. \"You want me to do your hair, Gremlin?\"\n\nZoe bounced up and down and clapped her hands. \"Yes! I want to look like Mommy.\"\n\n\"You're well on your way, my dear.\" Sarah smacked a kiss on top of Zoe's red head, so like Charlotte's own. \"Now sit tight, and I'll get supplies.\"\n\nCharlotte pointed at Zoe's bathroom. \"There's a basket under the sink with all her stuff.\"\n\n\"Got it.\"\n\nThe hair stylist and make-up artist, Jane, finished in another few minutes with Charlotte's hair. \"Now, what sort of look do you want for your face?\" As she spoke, she popped open a large plastic box full of creams, powders, and color palettes that made Charlotte gape. The most make-up she wore these days was a bit of concealer, mascara, and lip gloss. Since this woman's business was traveling to people's homes to make them over for events or photo shoots, she had a shade for everything.\n\n\"I don't know.\" Charlotte touched her cheek. \"What do you suggest?\"\n\n\"Well, it's black tie, right?\" Jane lifted out a few containers and set them on the kitchen table beside them. \"I'd say let's go with something really dramatic. I can do some smoky eyes and with your coloring, a deep lip color and dark shadow would really make your eyes pop.\"\n\nCharlotte shrugged. \"You're the expert. Let's do it.\"\n\nZoe continued to watch, entranced as Jane flicked her brushes and wands over Charlotte's face. Sarah had no trouble taming Zoe's locks since the little girl was so preoccupied.\n\n\"When is Alexei picking you up?\" Sarah asked as she popped another barrette into Zoe's hair, tucking her bangs out of her eyes.\n\nCharlotte snorted out a laugh. \"Picking me up? He's downstairs.\"\n\n\"Yeah, well, he's not here so I assumed he'd insisted on picking you up, like a proper date and everything.\" Sarah picked up the brush and shot Charlotte a wink before working the brush through the ends of Zoe's hair. \"Didn't you say you were sharing a limo with your friends, Olle and Joelle?\"\n\n\"We are.\" Charlotte closed her eyes and held still as Jane continued to work. When she could speak again, she lifted her phone from the table to check the time. \"The only reason he's not here getting ready is because they all had a team meeting after lunch.\"\n\n\"I see. So he's pretty much moved in then?\"\n\n\"What?\" Charlotte laughed. \"Of course not.\"\n\n\"Oh please.\" Sarah scoffed and cupped Zoe's slender shoulders before leaning forward to look into the little girl's face. \"Does Grumpy have dinner with you every night? And breakfast every morning?\"\n\nZoe nodded, turning a grin up to her 'Auntie' Sarah. \"Oh yeah. Every night he's not playing a game.\"\n\n\"Right. And he picks you up from daycare every so often, right?\"\n\nZoe nodded again. \"Yeah. He's the only person besides Mommy who's allowed to.\"\n\nCharlotte narrowed her eyes at her friend. \"So? We're spending a lot of time together. Doesn't mean we're living together.\"\n\n\"Gremlin, can you do me a favor and go run and count how many shirts and pants Alexei has in the closet?\"\n\nWith her usual enthusiasm, Zoe vaulted to the floor with a thud and dashed into the master bedroom. From there, she shouted her findings, making all three women laugh.\n\n\"There's so many! Like a hundred shirts and ten pants, at least!\" She bolted back out and onto the couch, high fiving Sarah's outstretched hand. \"And his shoes are in the closet over there too.\" She pointed to the front hall closet as she clambered back to her position in front of Sarah to finish getting her hair done.\n\nCharlotte made a noise in the back of her throat at Sarah's pointed look. \"He still rents his place downstairs. That means we're not living together.\"\n\nIt was Jane who laughed in response. She patted Charlotte's shoulder. \"Sorry, sweetheart. He's moved in and you're stuck with him now.\"\n\n\"Stuck with who?\" Alexei asked as he swept in the door, already dressed in his tuxedo.\n\nSilence greeted his entrance as they all took him in. Charlotte was pretty sure she swallowed her tongue at the sight of him ready for this event. His suit had to be custom made to fit his broad shape and his hair was freshly cut. Charlotte's fingers itched to slide through it.\n\nJane's hand on her shoulder tightened for a second and it was Zoe who broke the stunned silence.\n\n\"Grumpy.\" She sounded shocked beyond belief. \"You look like a prince.\"\n\n\"Do I?\" He ran a palm down the front of his black dinner jacket. \"Is that good?\"\n\nFour heads nodded in response.\n\n\"Then it's a good thing I brought you something to make you a princess.\" He held up the bag in his hand and Zoe jumped up with an excited cry. She bolted right into his arms and squeezed him tight around the neck.\n\nJane made a sound and Charlotte tore her gaze away from Alexei to look up at the woman. She was clutching a hand to her chest, her eyes soft as she took in the genuine affection between the man and the little girl.\n\n\"Can I put it on now?\" Zoe grasped the bag as Alexei set her back on her feet. \"Mommy? Can I?\"\n\n\"Of course, sweetheart.\"\n\nShe squealed in excitement and bolted to her room, where she proceeded to throw her clothes off without closing the door behind her. Sarah stood with a laugh and went to help her.\n\nCharlotte looked up as Alexei moved to stand in front of her. \"You look--\"\n\nHe gave her a wicked grin that made her heart skip around in her chest. \"Like a prince?\"\n\n\"Better.\" She beamed up at him. \"How was the meeting?\"\n\nHe shrugged and stepped to one side to take the seat next to her at the table, allowing Jane to finish. \"It was fine. The usual. We leave on a road trip tomorrow, so we discussed those games.\"\n\n\"Right.\" Charlotte let out a breath and closed her eyes again at Jane's direction. She didn't like to think about this road trip. He'd been gone for a night or two here or there since they became an item, but this stretch of away games would take them right up to Christmas Eve.\n\nThey all fell silent as Jane finished with Charlotte's face, exchanging smiles as they listened to Zoe's excited exclamations beyond her bedroom door. A few minutes later, Jane was finished and Sarah swept out of Zoe's bedroom.\n\n\"May I introduce you all to Princess Zoeblossom Splendida!\"\n\nCharlotte laughed at the made-up title and melted when Zoe walked out behind Sarah, in a sparkling pink princess dress, complete with a starry wand and golden tiara.\n\n\"Oh my goodness.\" Jane bent down to greet Zoe with a formal curtsy. \"Princess, may I have the honor of doing your make-up?\"\n\nZoe turned shining eyes to her mother for permission and Charlotte nodded, knowing Jane wouldn't do anything crazy. Sure enough, she sat Zoe on the edge of the table and swept lightly dusted brushes over Zoe's cheeks, leaving the barest smear of blush there. Jane also swept clean brushes over Zoe's eyes and pretended to draw on eye liner. She did finish with some bright pink shiny lip gloss that smelled faintly of strawberries.\n\n\"Thank you for that.\" Charlotte smiled after Zoe rushed off to look at herself in the mirror.\n\n\"My daughter was the same way at her age.\" Jane grinned and started piling all her stuff back into her massive box. \"Anything else I can do for anyone today? How about you sir? A little eye liner to make those eyes really stand out?\"\n\nAlexei chuckled and shook his head. \"Thank you. I'm fine.\"\n\nJane hummed in agreement, giving him another once over that had them all laughing. \"Well, you have a wonderful time tonight.\"\n\n\"Thank you.\" Charlotte stood to see her out, after Alexei paid her.\n\n\"Now, let's get you into your dress, Princess Charlotte.\" Sarah wrapped an arm around her shoulders, leaving Zoe and Alexei to compare fancy outfits.\n\n\"Girl.\" Sarah closed the bedroom door and sank back against it. \"Would you ever consider a loan one weekend?\"\n\nCharlotte burst out laughing. \"What are you talking about?\"\n\n\"That man out there--\" Sarah fanned herself. \"Did you not see him? You're dating the Russian James Bond!\"\n\n\"He is super dreamy.\" Charlotte didn't bother to hide her satisfied smirk. \"And he's all mine. No sharing or loans, sorry.\"\n\nSarah blew a raspberry and straightened from the door. \"I'll find someone all my own one day. Wait and see.\"\n\n\"There are some single dudes on the team, you know.\" Charlotte unzipped her dress from the bag and glanced up at her friend. \"I could introduce you?\"\n\n\"Hmm. An athlete? Maybe. Only if he speaks English as well as Alexei. I couldn't be with someone who doesn't get my jokes. They're not nearly as funny when I have to explain them.\"\n\nCharlotte grinned and nodded before tugging the ties of her robe. She wasn't shy about undressing before her friend and they quickly got her zipped up into the dress.\n\n\"Oh, honey.\" Sarah clasped her hands together in front of her as Charlotte slid her feet into the plain black pumps she'd picked. \"You do look like a princess.\"\n\n\"Thanks, Sarah.\" Charlotte had to admit, she felt like a princess. She twirled once, grinning as her skirt flared. She couldn't remember the last time she'd been so dressed up. Probably her high school prom.\n\n\"Thank goodness you let Alexei spoil you and get this dress.\" Sarah fussed around her for a moment, making sure the straps across her back were flat. \"If he hadn't pushed, I'm sure you'd be wearing that sad little black dress in your closet, wouldn't you?\"\n\n\"Well, it's not like I have a budget for black tie dresses.\" Charlotte's tone was dry, even as she smiled at her friend.\n\n\"Still, it's nice to have the option now, anyway.\" Sarah came back around to her front, brushing her hands over the straps at her shoulders. \"Let him spoil you and shower you with gifts. I sure would, if I had a rich boyfriend.\" She added a wink and turned away, heading for the door.\n\nCharlotte blinked. She knew her friend didn't mean anything by it. Of course she didn't. Sarah knew she prided herself on making her own way, but something about the sentiment rubbed her the wrong way. She shook it off a moment later. No, it had just been a light-hearted comment. A joke, really. No big deal.\n\nClearing her throat, she turned to the items remaining on her bed. \"So, I'll have my phone on me if anything comes up tonight.\" She picked up said phone and tucked it into the bejeweled black clutch she'd borrowed from Ursula for the night. \"And you have Alexei's number, right?\"\n\n\"We'll be fine.\" Sarah flapped a hand at her and smiled. \"Go, and have a wonderful time.\" She paused with her hand on the doorknob, grinning at Charlotte. \"You want me to introduce you like I did Zoe?\"\n\n\"I'm good.\" Charlotte smiled and followed her friend out of the room.\n\nAlexei and Zoe were sitting on the couch, chatting with each other. Sarah cleared her throat and gestured with showman's hands at Charlotte, who laughed.\n\n\"Mommy!\" Zoe stood up on the couch, her wand in her hand. \"You're a princess like me!\"\n\nAlexei stood up and walked over to stand before Charlotte. The look in his eyes made her heart beat harder, which wasn't unusual. \"You look gorgeous, lyubov moya.\"\n\n\"Oh my God.\" Sarah held her phone up. \"I have to get pictures of you guys. You too, Gremlin. Go pose with Mommy and Alexei.\"\n\nZoe scrambled over to the two fancy grown-ups and grinned for Sarah. Sarah fussed, taking several shots before Alexei's phone dinged, announcing the arrival of Olle and Joelle in the limo downstairs.\n\n\"We have to go.\" Alexei put his phone back in his pocket and walked to the front closet. He tugged out his coat and wrapped Charlotte up in hers as well.\n\nCharlotte bent to press a kiss to Zoe's head. \"Have fun and be good for Auntie Sarah. We'll see you in the morning, okay?\"\n\n\"Okay, Mommy.\"\n\nZoe and Sarah waved them off as they headed out the door. Downstairs on the windswept wintery street, Olle popped out of the waiting black limo and grinned in greeting.\n\n\"Hey guys. You look amazing!\"\n\n\"Thanks, Olle. So do you.\" Charlotte ducked her head to climb into the limo ahead of the men. \"Hi, Joelle.\"\n\n\"Hi.\" Joelle lifted her hand in a little wave. \"Ready to party tonight?\"\n\nCharlotte laughed as she shifted over to sit next to her friend. \"I don't even know what this function is for.\"\n\n\"It's the owners' dinner.\" Joelle turned a bit to face Charlotte better. \"The owners of the team, that is. They invite everyone in town worth knowing and hold a silent auction to raise money for some charity they've selected each year, so it doesn't seem so much like a self-indulgent evening.\"\n\nCharlotte snickered. \"Awesome. I could bid twenty bucks on something.\"\n\n\"Me too.\" They laughed together.\n\nThe ride to the convention center didn't take long, considering the weather, and they made their way inside to the main room, already crowded with so many guests and decorated to the gills for the holiday season.\n\n\"Holy cow, this is everyone worth knowing?\" Charlotte leaned close to Joelle as they strode into the function room.\n\n\"Plus a few, I'm sure.\"\n\n\"There has to be three hundred people in here.\"\n\nJoelle nodded. \"Probably.\" She rubbed a hand over her belly. \"Okay, let's hit the bar. I think I need some Sprite or something to settle my stomach.\"\n\n\"Ah. Morning sickness?\"\n\nJoelle nodded. \"More like strike-any-time-of-the-day-sickness, for me.\"\n\n\"I was sick mostly in the mornings with Zoe.\" With the men trailing behind them by a few steps, Charlotte walked with Joelle around the edge of the crowd to one of the several small bars set up around the space. \"I know it's different for everyone.\"\n\n\"Yeah. I should warn you now, we may steal the limo to duck out early if I don't feel up to staying all night.\"\n\n\"Oh yeah, don't worry about it.\" Charlotte reached over to squeeze her arm. \"I wouldn't blame you in the slightest.\"\n\nThey reached the bar and Charlotte got herself a white wine, thinking anything with color wouldn't be a good idea in her brand new couture dress. Joelle got her non-alcoholic soda, and the men ordered their drinks as well.\n\nA few players and their spouses approached as they moved away from the bar. They all greeted each other, offering introductions as Charlotte hadn't met everyone yet. Chatter turned to the event itself and where they would all be seated for the evening. As a larger group, they moved to the seating map and located their tables.\n\nAfter taking their places at the big tables, thankfully seated with Olle and Joelle, Charlotte turned to Alexei, who had his customary 'grumpy' expression in place. \"Joelle was telling me there's a silent auction?\"\n\nHe nodded. \"You want to go bid on something?\"\n\n\"Well, not bid, but I'd like to look. I've never been to anything like this before, so I'd like to take it all in.\"\n\n\"Of course.\" He ran his knuckles over her cheek, such a casual gesture but it set her heart racing. \"Let's go see before they start dinner.\"\n\n\"Great.\" Charlotte turned to Joelle. \"Can you watch my purse?\"\n\n\"Of course.\" Joelle grinned and sipped her drink, one hand still on the slight curve of her belly. \"Enjoy yourselves. We won't be moving from here.\"\n\nCharlotte slid her hand through Alexei's offered arm and walked with him through the crowd towards one corner of the big room. They were stopped several times, by other players, team executives, and a few other local celebrities that Charlotte recognized. She was awestruck by the time they made their way to the silent auction area.\n\n\"So how does this work?\"\n\nAlexei glanced down at the long tables set up in a wide U. He pointed at one of the little ship models nearest to them. Along the tables, there were also little airplanes, little paintings or sculptures, and a few other items. \"Each display represents the item being sold. This is a cruise in the Bahamas.\" He pointed at the first ship. \"That's a boat trip on the lake. The ones with airplanes are probably trips to different places. Each item has a paper with it, and if you want to bid, you put your name down along with an amount you're bidding. At the end of the night, whoever has made the highest bid, wins the item.\"\n\n\"I get it.\" Charlotte did wonder whether it could be called 'winning' when you had to pay for it, but whatever worked for this rich crowd. \"Oh, I wonder if there's a trip to Monaco.\"\n\n\"Monaco?\"\n\n\"Yeah.\" She smiled up at him. \"It's on my bucket list of places to see. I don't know why, but it just seems so exotic to me. I've always wanted to go.\"\n\nAlexei nodded and they moved along the tables, taking in each item up for auction. There were indeed several cruises, a few boat cruises on the lake, lakefront cabin rentals, jewelry and watches, artwork, tickets to sporting events and upcoming concerts, plays, operas, and at least a dozen or more different trips. There was a safari in Africa, two weeks in Australia, a weekend in Las Vegas, and a Mediterranean cruise on a private yacht.\n\nCharlotte paused next to that one, eyeing the description of everything that came with the prize. It had stops in Italy, France, Spain, and Greece, and even her dream destination, Monaco.\n\n\"You want to bid on this?\" Alexei rubbed a hand on the small of her back.\n\nShe looked up at him with a laugh. \"With what? My meager savings wouldn't come close to being a winning bid for this, no matter how much I'd love to donate to this year's charity.\"\n\nAlexei studied her face and she could see he was considering bidding on it for her. She reached back and clasped his hand. \"Come on. Let's check out the rest and head back to the table. They must be getting ready to serve dinner soon.\"\n\nHe nodded and followed her around the rest of the tables, and back across the busy room to their table.\n\n\"Did you bid on anything?\" Joelle asked with a grin as they sat down.\n\n\"Oh yeah, put a million down on the weekend in Vegas.\" Charlotte winked at her, making the other woman burst into laughter.\n\nThere were some other new faces at the table and more introductions were made. A short while after that, dinner started to be served. Charlotte was underwhelmed with the beef dish, considering the wealth behind the event. But perhaps they'd skimped on the meal in order to put more money into the charity. What did she know about this sort of thing anyway? After, she was happy with her fruit and cream dessert, and was glad the meal ended on a high note.\n\nJoelle leaned close on her one side. \"I'll never understand why they can't get a five-star meal for these things.\"\n\nCharlotte covered a laugh with her hand. \"Is it always the same?\"\n\nThe other woman shrugged and reached for her soda. \"For these really fancy dos, yeah, it's all basically the same. I like the events that are more family-centric, like the kids' fairs and that sort of thing.\"\n\n\"Sure. I mean, I had fun getting all dressed up for tonight but doing this all the time? It would get old.\"\n\nJoelle nodded and eyed Charlotte with a smile. \"I bet Alexei can't wait to take you and Zoe to some of the events. There's one coming up in January, a sort of carnival where kids from underprivileged areas get to attend and play the games for free and all the money raised goes towards sports programs for schools.\"\n\nCharlotte glanced at Alexei who was speaking to the man on his other side. \"He hasn't mentioned it.\"",
        "\"Well, look how long it took him to bring up tonight.\"\n\n\"Did you know he was going to surprise me with the dress fitting last week?\"\n\nJoelle grinned and nodded. \"He asked me where to take you.\"\n\n\"Well, that was very thoughtful of him.\"\n\n\"I thought so.\" Joelle reached over and patted her arm. \"He's devoted to you. To you and Zoe, you know.\"\n\nCharlotte blushed and nodded, looking down at her hands on the table. \"I know. He's wonderful. I don't know that I deserve him.\"\n\n\"I'm sure you do.\"\n\nDrawing in a deep breath, Charlotte struggled for a change in subject. The last thing she wanted was to get all weepy and make her make-up run. \"So, have you started nesting yet? Painting the nursery or anything?\"\n\nJoelle laughed and shook her head. \"Mostly I've been sleeping and trying not to throw up.\"\n\n\"I get it.\" Charlotte looked around again and squinted at the edges of the big room. \"Do you know which direction the ladies' room is?\"\n\n\"I think you have to go back out to the hall. Do you want me to come with you?\"\n\n\"No, I'll be all right.\" Alexei was still deep in conversation with his other table companion. \"Can you tell Alexei where I've gone?\"\n\n\"Of course.\"\n\nCharlotte smiled and shoved back from the table. She wove through the after-dinner crowd, smiling when she saw people starting to move around on the dance floor. There was a band and people did seem to be enjoying themselves, in spite of the lackluster dinner.\n\nOut in the hall, it was a little quieter and she found the ladies' room. Inside, there were a few other women but when Charlotte washed up after finishing in a stall, she was alone. As she turned to dry her hands, a woman walked in. They smiled at each other in that way of strangers passing, but both did a double take a moment later.\n\n\"Charlotte?\"\n\nCharlotte squeezed the living daylights out of the paper towel in her hands. \"Theresa?\" She hadn't seen her sister in years. Not since the summer she'd told her family she was keeping her baby. \"Oh my God. It's so nice to see you.\" That's what you're supposed to say to family, right?\n\nShe tossed the paper towel in the garbage and walked towards her older sister, wondering if she should hug her or not. Theresa opened her arms though, and they did embrace. Briefly, and not without some awkwardness, but it was a hug nonetheless.\n\nCharlotte stepped back with a smile. \"How are you?\"\n\nSmoothing a hand over her darker red hair up in an intricate, tight knot, Theresa gave her a hesitant smile. \"I'm well, thank you. And yourself?\"\n\n\"I'm great.\" Charlotte folded her hands in front of her, surprised at how much she meant her response.\n\n\"What on earth are you doing here?\" Theresa's icy blue eyes swept over Charlotte from head-to-toe.\n\n\"Oh, well, would you believe my boyfriend brought me?\" Charlotte brushed a hand over the gold trim at her waist before meeting her sister's eyes again. \"Would you like to come into the big room and meet him?\"\n\nTheresa pursed her lips and gave a short nod a moment later. \"Sure. Give me a minute and I'll walk back with you.\"\n\nCharlotte nodded and they moved around each other. She stepped out into the hall to wait for Theresa, looking up in surprise when Alexei called out her name.\n\n\"There you are.\" He strode up to her side, one big hand settling low on her back as he bent to kiss her.\n\nShe smiled and pressed her hands to his chest. \"Here I am.\"\n\nHe kissed her again, lingering longer this time, so that Charlotte's skin burned with desire when he stepped back.\n\n\"Are you ready to leave?\" His voice was low and growly, just how she loved it.\n\nStifling a laugh at his eager look, she shook her head. \"We can't leave yet. Even Joelle and Olle are still here.\"\n\nAlexei made a disgruntled noise and lifted one of her hands to his lips. As he did that, the ladies' room door swung open and Theresa walked out. She halted a few feet from the door, taking in the sight of Charlotte with Alexei and her lips curled into a smile that Charlotte couldn't read. Was she pleased? Embarrassed to have caught her sister in a PDA?\n\nNerves fluttering, Charlotte moved a step away from Alexei and held his hand in hers. \"Alexei, this is my sister, Theresa.\"\n\nAlexei started at the introduction, shooting a wide-eyed glance at her before lifting a hand to shake Theresa's. Charlotte returned his gaze and shook her head once, indicating that they could discuss the surprise appearance of Theresa later.\n\n\"Theresa, this is Alexei Novikov.\" Charlotte cupped a hand around his arm, smiling up at him.\n\n\"Nice to meet you, Miss Woods.\"\n\nTheresa's mouth twisted as she shook Alexei's hand. \"It's Helmsford, actually.\"\n\n\"Oh.\" Charlotte swallowed hard. \"Right. Sorry, I forgot about that.\" Easy to forget when she hadn't been invited to the wedding a little more than a year ago. To be fair, Theresa had eloped to Hawaii, and no one had been invited. At least she'd received a picture of the happy couple in the weeks following, complete with a caption about said elopement.\n\nTheresa met Charlotte's gaze and nodded. \"Understandable, considering.\"\n\nAlexei's gaze bounced back and forth between the women. \"Are you here with your husband?\"\n\n\"Yes. Clyde Helmsford. You've probably heard of him.\" She said it more as a statement than a question, but Alexei nodded anyway.\n\n\"I have met him once. Nice man. His firm was invited here tonight, I believe.\"\n\nTheresa lifted her chin, a more genuine smile covering her face. \"Indeed. So.\" She glanced at Charlotte again. \"What are you two doing here?\"\n\n\"Alexei is a player for the Blackhawks.\" Charlotte pressed herself closer to his side, desperate for his warmth.\n\n\"Really?\" Theresa's eyebrows shot up and she gave the big man a once-over. \"I see.\"\n\nAn awkward silence fell between them until someone called Alexei's name from down the hall. Alexei squeezed Charlotte's hand before giving Theresa a brief nod.\n\n\"Please, excuse me.\"\n\nCharlotte watched him go and turned back to her sister, wondering what to say now.\n\n\"Does he know about-- everything?\"\n\nCharlotte blinked at Theresa's abrupt question. \"What?\"\n\nHer sister tilted her head to one side, her expression one of genuine concern. \"Does he know our family's... issues?\"\n\nCharlotte almost laughed at the way she phrased it. Issues indeed. At least Theresa wasn't sweeping it under the rug. However awkward this whole encounter was, it would be worse if her sister tried to pretend nothing was wrong.\n\n\"He does.\" Charlotte exhaled and straightened her shoulders. \"I've told him everything, and he's met Zoe. They get along wonderfully.\"\n\nTheresa nodded, her expression softening a bit. She still looked concerned but didn't say anything else about it. Charlotte could only assume her sister hadn't wanted to say the wrong thing in front of Alexei but they didn't know each other well enough for her to be sure. Not anymore.\n\nThey started walking side-by-side, heading back to the main room.\n\n\"Have you spoken to our parents recently?\"\n\nCharlotte sighed. \"No. How are they doing?\"\n\n\"I haven't talked to them in a few months either.\" Theresa glanced at her. \"They ask about you now and again. I never know what to tell them.\"\n\n\"That's surprising.\" Charlotte held back her scoff. \"Don't you tell them that we don't talk either?\"\n\n\"I do. Last time they got a little snarky about it, and that's why I haven't talked to them since.\"\n\n\"What? They got mad at you because you weren't talking to me?\" She did scoff then. \"That's rich, considering they barely take my call every Christmas.\"\n\n\"Maybe they don't know what to say.\"\n\n\"Only one way to rectify that.\"\n\nTheresa stopped walking a few yards short of the big doors to the main function space. She faced Charlotte with a frown marring her face. \"I think I feel the same way, Charlotte.\"\n\nCharlotte was shocked by Theresa's candor. On the other hand, after so much time, she supposed she wasn't sure what to say either. \"You can't go wrong with 'hi, how are you'.\"\n\nHer sister's lips twitched in what might have been a smile. \"I suppose you're right. To be fair, it's not like you've tried reaching out to me either.\"\n\n\"I call on the holidays.\" Charlotte crossed her arms over her chest. \"And if you recall, I tried reaching out plenty of times when I first moved to the city.\" She left the rest unspoken, the parts about being desperate for any contact, any sort of relationship with the only person she'd known in the whole of the city. Back when Charlotte had been alone, with a newborn baby and no idea how to live on her own. Now was not the time to bring any of that up.\n\n\"You're right.\" Theresa sighed and fussed with her purse for a moment before extracting a card. \"Here. This has all my contact information. If you want to call, I'd like to hear from you.\"\n\nCharlotte blinked, staring down at the little rectangle in her hand. \"Are you serious? What about Mom and Dad?\"\n\n\"They've been asking about you more recently.\" Theresa snapped her little clutch closed. \"I think they might be interested in reaching out, but if you're not ready for that, I won't push you.\"\n\n\"They have my number.\" Charlotte wouldn't be the one to make the first move. She'd done that for the whole of the first year after they'd all written her off. She was fine now, with friends, a home, and a good job. She didn't need to cobble together a relationship with her estranged parents, particularly if they didn't genuinely want one with her.\n\n\"Charlotte--\"\n\nShe wasn't sure what Theresa was about to say, since her sister cut herself off. She looked nervous again and stepped closer to Charlotte. \"I hope you call, truly. I don't want you to think I'll only talk to you if Mom and Dad say it's okay.\"\n\nCharlotte nodded after a moment's hesitation, unsure of what to say. Once upon a time, that had been exactly the case. She wasn't sure if she believed her but she nodded anyway. Maybe they could reconnect but this fancy event surrounded by strangers wasn't the best setting for that.\n\n\"Sure.\"\n\nAlexei appeared at her side, his arm circling her back. \"Hello again.\"\n\nTheresa smiled at him, some of her apprehension fading away. \"Would you both like to come and meet my husband?\"\n\nCharlotte glanced up at Alexei, who looked back down at her, letting her know he'd go along with whatever she wanted. \"Yeah, okay. I'd like that.\"\n\nTheresa led the way through the crowd to her table, where a middle-aged man with a receding hairline stood and kissed Theresa's cheek as they approached.\n\n\"Hello there.\" He reached out to shake Alexei's hand. \"Alexei Novikov, right? We met at the homecoming gala a few months ago.\"\n\nAlexei nodded as he shook the man's hand. \"Yes. Nice to see you again, Mr. Helmsford.\"\n\n\"Clyde, darling, this is my sister, Charlotte.\"\n\nClyde did a double-take before his face broke out in a wide grin. \"Oh, Charlotte. How wonderful to meet you.\" Instead of shaking her hand, he swept her up into a massive hug, surprising the rest of them. He stood back with his hands on Charlotte's shoulders. \"Of course you're Theresa's sister. Look at the two of you.\"\n\n\"It's nice to meet you.\" Charlotte didn't know what else to say, either about his comments or his effusive greeting. She stepped back up to Alexei's side, eager to lean on his quiet strength.\n\n\"Theresa has told me so much about you, I feel as if I know you already.\"\n\nCharlotte darted a look at her sister, who gave her a crooked smile. Swallowing, Charlotte managed a smile for Clyde. His tone wasn't malicious by any stretch, and in spite of their awkwardness, Theresa hadn't said anything rude either, so Charlotte decided to take Clyde at his word. \"Well, I'm not sure what to say to that. I hope she hasn't been too hard on me.\"\n\n\"Not at all.\" Clyde's big brown eyes softened as he wrapped an arm around his wife and reached out to clasp Charlotte's shoulder with his free hand. He dropped his voice so no one around them would be privy to their conversation. \"She's told me time and again how she wished that you two could reconcile. I've been encouraging her to reach out to you for months.\"\n\nCharlotte didn't know what to make of Clyde's statement. She blinked hard a few times and shot a quick look at her sister. \"I'm glad to hear that. I've missed spending time with Theresa as well.\"\n\n\"Wonderful. You must both come to dinner at our place. Soon.\" Clyde looked up at Alexei with a grin and dropped his hand from Charlotte's shoulder. \"We can all get to know each other.\"\n\n\"Oh, well, Alexei is leaving tomorrow and we already have plans over the holidays.\" Charlotte looked up when Alexei squeezed her side. \"But, perhaps I could come over one night before that.\" She cleared her throat and lifted her chin. \"With Zoe.\"\n\nClyde's face brightened. \"Is that your daughter? Zoe? What a beautiful name. Yes, you must come over, both of you. Isn't that right, my darling?\"\n\nTheresa's cheeks were a little more pink than before and Charlotte couldn't help but smile. Was Theresa embarrassed by her husband's effusive affection?\n\n\"Yes, of course. Any night that works best for you, Charlotte. Our schedules are pretty empty from now until the New Year, actually.\"\n\n\"Okay.\" Charlotte tapped the card she still held in her hand. \"Can I call you tomorrow?\"\n\n\"Yes, please do.\" Theresa stepped closer and pulled Charlotte in for a hug, much more easily than that first moment in the ladies room. \"I mean it, Charlotte. I'd love to see you again.\" She pulled back so they could see each other's eyes. \"And not years from now.\"\n\nCharlotte nodded, swallowing back the thick lump in her throat. Alexei's warm hand smoothed around her back in circles, soothing her, as if he knew exactly how difficult this whole scene was for her. \"I will call, I promise.\"\n\nTheresa nodded, her own familiar blue eyes misty as well, if Charlotte wasn't mistaken. They drew apart and Theresa turned to slide back into Clyde's embrace. To Charlotte's further surprise, Clyde planted an affectionate kiss on Theresa's forehead, his arm hugging her close.\n\n\"Wonderful.\" Clyde faced Alexei and Charlotte, Theresa tucked tight to his side. \"We'll let you get back to your evening, and your other companions. So wonderful to have run into you here, Charlotte.\"\n\nShe smiled in reply and turned away as Alexei guided her from their table. She didn't speak, just clung to her date as they moved through the crowd. Instead of heading back to their table, she found herself in the center of the dance floor, Alexei tugging her into position as a new song started up.\n\n\"What are we doing?\"\n\nHe gave her a soft smile and squeezed his hand around her fingers, plucking the card from her fingers and tucking it into a pocket. \"We're dancing.\"\n\nShe smiled back, some of her tension easing away as she moved into his arms. \"Okay.\"\n\nThey moved around the hardwood floor for several beats until Charlotte let out a slow breath and sagged in his hold.\n\n\"Are you all right? Would you like to leave?\"\n\nShe shook her head. \"I'm okay. That was just-- unexpected.\"\n\n\"I can only imagine.\"\n\nThey fell silent again, moving in wide circles in and around the other dancers until the song ended. Instead of moving off, Alexei kept her close, twirling her around for another song.\n\nFinally, as a third song started, Charlotte tugged on his hand. \"Come on. Let's get some drinks and see how everyone else is doing.\"\n\n\"Are you sure?\"\n\nShe nodded and pushed up on her toes to kiss his cheek. She knew now that he'd spun her around the dance floor long enough for her to get her bearings again. \"Thank you, Alexei.\"\n\nHe cupped her cheek in his hand and brushed the softest of kisses over her lips. \"You never have to thank me for that, lyubov moya.\"\n\nShe sighed and let his warmth seep into her skin. They moved off the dance floor together a few seconds later and got fresh drinks from the bar before heading back to their table. There, Olle and Joelle were getting ready to leave.\n\nJoelle hugged Charlotte close as she stood from the table. \"Sorry to bail so early. I can barely keep my eyes open.\"\n\nCharlotte smiled and hugged the woman close. \"Don't worry about it. Go home, get some rest. We'll talk later this week.\"\n\nJoelle nodded and released her, turning to Alexei to give him a kiss on the cheek and a quick hug. They walked off, waving good-bye to their other table-mates as Charlotte and Alexei took their seats again.\n\nAn hour or so later, Charlotte let herself get swept out of the room and out of the event altogether. Alexei had decided he'd had enough and after the earlier surprising emotional reunion, Charlotte was more than ready to go as well.\n\nAt home, Sarah was dozing on the couch but roused enough to give Charlotte a quick rundown of her evening with Zoe.\n\n\"She insisted on sleeping in her dress.\" Sarah grinned as she stood from the couch and stretched. \"So good luck getting her out of it tomorrow.\"\n\nAlexei smirked as he peeked in on the little girl. \"We'll figure something out.\"\n\n\"Thank you so much, Sarah.\" Charlotte walked her friend to the door and gave her a hug before locking up after she was gone.\n\nIn the bedroom after brushing her teeth, she let Alexei undress her and tug her down into bed, both of them naked.\n\nAt first, he held her against his chest, running a soothing hand up and down her back. But Charlotte wasn't sleepy. Her mind was buzzing far too much in the aftermath of everything that had happened over the evening. She lifted her head and ran her fingers over his face, down his cheek, and across his lower lip. He bared his teeth and nipped at her fingertip, making her giggle.\n\n\"Shh.\" He rolled her to her back, kissed her silent, and she let him.\n\n\u2500\u2500\u2500\u2500\u2500\n\nAs promised, Charlotte called her sister the next day. Their conversation was stilted but they managed to make plans for Charlotte and Zoe to go to their house for dinner the next Sunday night.\n\n\"Zoe doesn't have any allergies to any foods or anything, does she?\" Theresa asked.\n\n\"Nothing has come up. She doesn't like brussel sprouts, but that's about it.\"\n\nTo Charlotte's surprise, Theresa had laughed. \"Of course she doesn't. You used to throw them across the room when you were little.\"\n\n\"Did I? I don't remember that at all.\"\n\n\"Well, Mom and Dad didn't try to force the vegetable on you again after the third try, I think.\"\n\n\"Wow.\" Charlotte shook her head. \"I don't mind them now, so long as they're cooked properly.\"\n\n\"We'll leave them off the menu, to be safe.\" Theresa chuckled. \"You two can come over any time after six. We usually eat around seven.\"\n\n\"Sounds great. See you then.\"\n\n\"See you.\"\n\nCharlotte ended the call and walked out of her bedroom to see Zoe right where she'd left her, on the couch, watching Moana.\n\n\"Mommy, I want to be a wayfinder.\"\n\nCharlotte grinned and sat beside her daughter. Wayfinder, princess, Wonder Woman. Was every child the same with their brief obsessions? \"Yeah? Out on the ocean and everything?\"\n\nZoe nodded, her expression earnest.\n\nThey settled in to finish watching the movie together. Later that evening, Alexei called from the team's first stop on their lengthy road trip, Winnipeg.\n\n\"I spoke to my sister.\"\n\nAlexei made a rough noise and Charlotte heard rustling as he moved around. \"And?\"\n\n\"We made plans for dinner on the weekend.\"\n\n\"That's good.\"\n\nCharlotte hesitated. \"Yeah, I guess it is.\"\n\n\"You don't want to go for dinner?\"\n\n\"I don't know. I mean, you saw how we were last night. What are we even going to talk about?\"\n\nAlexei chuckled. \"You won't be alone with her, will you? Zoe and Clyde will also be there.\"\n\n\"Yeah.\"\n\n\"Clyde talked enough for all of you last night.\"\n\nCharlotte smiled and shifted over in bed, facing her window. \"You're probably right. It's just so strange, after all these years, that's all.\"\n\n\"I understand. I'm not sure if I'd be as calm as you are if I had family suddenly appearing before you.\"",
        "\"I should think not.\" Charlotte let out a soft laugh. She never wanted to make light of his lack of family, but he was so matter-of-fact about it all the time.\n\n\"So you'll go to dinner, and you can talk about what you've done in your life since you last saw her.\"\n\n\"I don't know that she'll care.\"\n\n\"She wouldn't have invited you to dinner if she didn't.\"\n\nHe had a point. Theresa had admitted herself that she hadn't known how to bridge the gap between them, all those years, the missed life events, the ignored phone calls. In all honesty, Charlotte wouldn't have known either, if their positions were reversed.\n\n\"I think it's a good thing to have family, lyubov. Zoe would benefit from having grandparents and an aunt and uncle.\"\n\n\"I know.\" Guilt pricked at Charlotte when she considered keeping her distance from Theresa or her parents. Should she have tried harder to connect with all of them, for Zoe's sake?\n\n\"And you will as well, even if you can't see it yet.\"\n\n\"I don't need them.\" She didn't mean to sound indignant, even as guilt continue to claw at her. \"Not like I used to.\"\n\n\"Maybe, maybe not. Try to give it an honest chance though.\"\n\nCharlotte huffed and settled on her back again, staring at the glowing circle of light cast by her bedside lamp on the ceiling. \"When did you get so wise?\"\n\nHis deep chuckle settled in her veins, warming her all the way through, even from so far away. \"I don't know about wise. I only want what's best for you and Zoe.\"\n\n\"And you think me reconnecting with my family is what's best?\"\n\n\"I don't know, not for sure. You won't know until you all talk about things, about everything. After that, you can decide if it's healthy or right to stay connected. All I'm saying is give them a chance.\"\n\n\"All right. I can do that.\" And she meant it. Maybe it would work out and they could all become a real family again and Zoe could have more than Charlotte could offer her on her own.\n\n\"What's that hockey saying?\"\n\n\"What?\" He sounded so confused at her non-sequitur that she giggled.\n\n\"That quote.\" She squeezed her eyes shut, trying to recall. \"'You miss one hundred percent of the shots you don't take'.\"\n\nAlexei made a noise of acknowledgment. \"Wayne Gretzky.\"\n\n\"Yeah.\" Charlotte smiled. \"I'll take a shot.\"\n\n\"Good girl.\"\n\nOh, hell. That shouldn't fill her with such sudden and instant heat as it did. She sucked in a breath and couldn't think of a single thing to say in response.\n\nAs if sensing it, Alexei let out a deep chuckle and there was more rustling, like he was shifting in bed. \"Are you my good girl, lyubov?\"\n\nCharlotte swallowed hard. \"Yes.\"\n\n\"Can you keep quiet?\"\n\n\"Quiet?\"\n\n\"When I tell you the things we'll do when I come home.\"\n\n\"Yes.\" She was at his mercy. Always. Especially now, when his rough, accented voice filled her head, flooding her with visions of his lips and hands on her body.\n\nHer last thought when she drifted off to sleep later, her skin warm all over from what he'd done, what he'd told her to do to herself until he could return, was that she could live without her family, but she was long past being able to live without Alexei."
    ],
    "authorname": "MugsyB",
    "tags": [
        "hockey romance",
        "hockey player",
        "hockey",
        "hockey team",
        "athlete",
        "sports romance",
        "sports",
        "single mom"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/beneath-the-ice-ch-06"
}