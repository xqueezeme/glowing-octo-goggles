{
    "title": "Ann: A Love Story Ch. 97",
    "pages": [
        "Many thanks to my friend Annanova for editing this latest, and final chapter. I cannot tell you how much fun this has been to do this with you. To my loyal readers, thank you for sticking with this for so long. It's been an incredible journey. Enjoy!\n\n\u00a9 2013, All rights reserved -- mimaster\n\n~*~*~*~*~*~*~\n\nAnn sat across from me eating a chicken sandwich. Actually, we both were since we'd stopped to get gas and have a bite to eat. That and to spend some quality time together for the first time in a couple of hours.\n\n\"I love how this feels,\" she sighed, her gray sweatshirt hanging loosely off her bare right shoulder, showing she wasn't wearing a bra. At some point after she bought it, she'd modified the shirt to show more skin by cutting away much of the neckline. She looked a bit like Jennifer Beals in Flashdance.\n\nThat thought had me thinking of another scene from the movie, and I began dreaming of Ann sitting in a chair on a stage in a much skimpier outfit, reaching for the cord that would dump gallons of water all over her hot body in an erotic splash. Then again, she was just as sexy sitting there as she was, and I found myself putting that fantasy out of my mind.\n\nInstead, I followed up on her comment. \"You love how what feels?\" I asked innocently.\n\n\"You know,\" she winked, squirming in her seat again. \"I'm just glad my sweatpants are white.\"\n\n\"And why would that be?\" I wondered, happily playing along.\n\n\"So the cum stains won't show too much, silly. Imagine how big the wet spot would be if they were grey.\"\n\nIt took everything in my power not to duck my head underneath the table and try to peer between her legs. Not that I'd have been able to really see anything, but the mere idea made me tingle with excitement.\n\nWe were at a roadside plaza in Eastern Ohio, eating at a rather pedestrian fast food restaurant as we made our way to our new home the Thursday after the wedding. We'd left early that morning, hoping to beat a lot of the weekday traffic and give ourselves as much daylight as possible for the drive. Not to mention time in general. Neither of us liked the idea of having to rush, and going on Thursday would give us a three-day weekend at our new house before I had to return to work on Monday.\n\nAnn was in a giddy mood, bubbling over with joy; the pause in our trip coming at a welcome time for both of us. We were traveling together, but we were apart, each of us having to drive our respective cars. She had literally been following my lead, but as promised, I kept looking in my rear view mirror to check on her as we drove in tandem. Not that I thought I'd lose her or anything. She'd made the trip before on her own, and she had an incredible knack of driving the trail vehicle. And as such, I was letting her decide when she needed to stop for a break along the way.\n\nWhen she flashed her lights, I started looking for a place for us to eat, finding the plaza a few miles later. She caught me off-guard when she whipped her tiny car around mine, pulling into a secluded parking spot far away from the building. She was already outside her car when I pulled into the space beside her. The next thing I knew, she was opening my door. Before I could climb out, she climbed in, reaching for the button on my jeans.\n\n\"What are you doing?\"\n\n\"It's what we're doing. And that's fucking.\"\n\n'What?\" I asked, shaking my head while my face contorted into a question mark.\n\n\"You're the one that came up with the rule that we have to have sex in every state we pass through, Neil. Or are we not doing that part of the game?\"\n\nTwo minutes later I was fully reclined in my seat and she was riding my cock like she'd never had one before. I was amazed I hadn't seen it coming, so to speak. After all, I was the one that had decided to pick up where we'd left off on our cross country trip months before.\n\n~*~*~*~*~*~*~\n\nWhen I pulled over at the state line upon entering Ohio, Ann thought at first something was terribly wrong. We'd only been on the road a little more than an hour, and we were out in the country. She didn't see the welcome sign as I got out of the car, camera in hand.\n\n\"Is everything okay?\" she asked as she rolled down her window.\n\nHolding up the camera, I pointed at the sign. \"It will be once you get undressed,\" I winked.\n\n\"You're kidding,\" she exclaimed, quickly realizing that I wasn't. \"Neil, it's freezing outside.\"\n\n\"We said we were going to do this in every state, Anna.\"\n\n\"That was three months ago.\"\n\n\"Pretty sure I'm still in charge. Besides, we did before. I think it's kind of implied that we're doing it from now on.\"\n\n\"Okay, but you were in charge over the weekend.\"\n\n\"I don't remember you ever saying there was a time limit, babe.\"\n\nThe sexy smirk on her face made my cock jump. Reaching to unzip her coat, she winked, \"Okay, lover. You've got me until you go back to work on Monday.\"\n\n\"I've got you?\"\n\n\"Yep. You wanted a time limit. You have me until then. I'm going to be Annabelle on Sunday anyway. What are a few more days of following your lead while I'm Anna?\"\n\n\"Wait...you're going to be Annabelle?\" I wondered aloud, suddenly recalling that she'd committed to being my love slave our first Sunday in our new home.\n\nPulling her top over her head inside her car, she looked at me through her open window, her nipples becoming rock hard from the chilly air. \"Yes... and suddenly I'm really looking forward to it. Now do me a favor and get me something to wear that's easier to get in and out of. If we're going to do this, I don't want to be struggling with jeans all day.\"\n\n~*~*~*~*~*~*~\n\nAnn posed for me in front of the Ohio welcome sign. In some ways, it was like we'd never stopped. She struck the same seductive positions that she'd done on our trip from California to Indiana months before. The only discernible difference was the wedding ring on her finger. Well that, the pussy ring now adorning her labia, and her white landing strip. She made sure all three were noticeable whenever I took a picture that offered a view of her suddenly wet cunt.\n\nIt was obvious that she'd become turned on from what we'd just done. Even though she was cold, it didn't stop her from showing how hot she was getting as I peered through the lens. When we finished she got dressed, slipping on the loose sweatshirt and the sweatpants I'd found in the back of her car. She practically raped my mouth with her tongue when she kissed me just before we left.\n\nThe fire that ignited only grew inside her as we drove down the two-lane roads of Western Ohio. By the time we got to the beltway circling Columbus, our escapades by the roadside welcome sign seemed like a distant memory to me. I was too busy concentrating on looking out for speed traps. I wanted to go as fast as we could, but I wasn't taking any chances. I'd seen set-ups in that area where there would be multiple police patrolling together, pulling cars over for going too fast. I wanted no part of having both of us getting stopped.\n\nYet with each passing mile, Ann apparently was becoming more and more turned on. Making her take off her clothes and pose for the camera was the catalyst; her mind was racing, thinking back to all the stops we'd made traveling across the other half of the country. Not just the ones to take pictures, but others where we'd pull over just to have sex. She got so worked up, she finally started flashing her lights, the signal we'd come up with to let me know she wanted to stop. Of course, based on what she wanted to do, it might have been a more appropriate signal to flash her tits at me.\n\nIt was a fast, energetic, passionate fuck. She wasted no time, digging out my cock while she lowered her sweatpants. I was amazed how hard I got in such a short time. There was no foreplay; she grabbed my shaft, stroked it a couple of times, and impaled her soaked pussy over my length. The fact that neither one of us got totally undressed seemed to make the romp even hotter.\n\nMy hands ran underneath her loose sweatshirt, cupping her breasts. She rolled her hips in response, rocking them in a way that made each stroke long and powerful. When I ran my thumbs over her hard nipples, she arched her back slightly, ramming harder into my crotch. Letting my hands glide down the sides of her sexy frame, I gripped her ass, squeezing it tight, my middle fingers touching her puckered asshole, pressing against it.\n\nThat aggressive move set her off like a rocket, my cock flooded at she came all over it. She bit into my shoulder to stifle her scream, and that had me cumming seconds later, my balls spewing sperm deep up into her tight cunt.\n\n\"God I needed that,\" she said as she nibbled at my ear.\n\n\"Apparently,\" I chuckled and ran my finger up and down the crack of her ass.\n\n\"How many more states do we have today, baby?\"\n\n\"Three.\"\n\n\"Mmm...we're going to have a busy day then, aren't we?\"\n\n\"We're not going to be able to fuck in all of them, Anna.\"\n\n\"Why not?\"\n\n\"Because... I want to fuck you tonight when we get to our new home.\"\n\n\"I don't know, Neil. We've got a streak going. I don't think we should start breaking our own rules so early in our marriage. Do you?\"\n\n\"I'm just being practical. We can fuck again in Pennsylvania if you want. I'll be recovered by then.\"\n\n\"So you're suggesting we skip Maryland?\" she asked, suddenly remembering the route we were taking.\n\n\"Not altogether... just for now. It's only like twenty-five minutes from the house. I'm thinking we might do that one Saturday.\"\n\n\"You are, are you?\"\n\n\"Uh-huh. Besides, the state signs for West Virginia are pretty unsafe both times we're going to see them,\" I said, referring to how we'd be going through the northern panhandle on our way to the eastern one where we'd be residing. \"The one close to home hangs over the road, right by the bridge over the Potomac River. So we're going to have to find a better place for those pictures anyway... and since it's where we're going to live, I think we need to make sure we get some really good ones. Don't you?\"\n\n\"Anything you say, Neil\" she winked. \"You're in charge.\"\n\n~*~*~*~*~*~*~\n\nAnn seemed a little distant, which was odd since she'd just made such an electric comment about having cum stains on her sweatpants. I watched her mood as we ate; the festive, playful banter we'd been sharing replaced by sudden silence.\n\nAfter letting that settle over the table for a while, I grew tired of it. We were going to be alone in our cars again very shortly. Not talking when we had the chance seemed like such a waste.\n\n\"Something bothering you?\" I asked.\n\n\"Huh? Oh...no, baby. I'm sorry. Everything's fine. Amazing actually,\" she smiled as she wiggled in her seat again. \"I can feel your cum moving inside me. That is such a rush.\"\n\n\"So why the silent treatment all of a sudden? What were you thinking about?\"\n\n\"Everything.\"\n\n\"Oh... is that all?\" I laughed.\n\n\"I... I was just thinking about Sunday.\"\n\n\"About being Annabelle?\"\n\n\"No... not this Sunday. Last Sunday.\"\n\n~*~*~*~*~*~*~\n\nI knew what Ann was talking about the moment she said it. It had been a pretty incredible day.\n\nWe'd had an unbelievable time the night of our wedding at the suite. In fact, the morning after had been pretty amazing too. We'd made love again when we finally woke up. Then we went back to bed after showering so we could fuck, which meant we had to shower all over again. When we finally checked out sometime after two in the afternoon, we were worn out. The wedding had taken its toll, for sure. But add in the sex and we were both exhausted.\n\nAt least, we thought we were, until we picked up Tina. She'd spent the night with Alex, the man who owned the limousine rental company. Limping toward my car, she looked... used. She also had the naughtiest smile I'd ever seen on her face. Climbing into the back, she laid down on the seat, winching in pain as she tried to find a position that was comfortable to her.\n\n\"Are you all right?\" I asked, concerned about driving her home in a prone position.\n\n\"She's fine, Neil,\" Ann said as she patted me on the cheek. \"It's a straight road on the way home. Just drive carefully.\"\n\n\"She doesn't look fine,\" I said, taking another look.\n\n\"She is. If you remember, I don't think I looked much different than that the first time I was Annabelle.\"\n\n\"Huh?\"\n\nAnn pointed at Tina's wrist, the telltale signs of rope marks adorning them. \"It looks like she finally got her wish.\"\n\nI didn't know it at the time, but Ann had found a way once again to rub off on one of her friends. All the stories she'd told Tina, combined with some of the pictures she'd shown her had peaked her interest in the world of bondage. That was why she was so excited about being able to borrow the nipple clamps Ann had received as a gift from our friend Nancy. In fact, she was still wearing them; the revealing bulges they created were almost obscene as they pressed into her tight shirt. It was hard not to look at them as she took off her jacket to use it as a pillow.\n\nWe didn't find out much about her night with Alex. At least I didn't. She fell asleep in the back seat before we were a block away from his tasteful home on the west side of Fort Wayne. She ended up telling Ann about her night a few days later, and it was indeed one of forbidden pleasure, being tied up and abused in ways she found both painful and exhilarating beyond belief.\n\nIt also brought her closer to Alex. The fact that she'd allowed herself to give such control to someone she barely knew was in some ways a questionable move on her part. But she felt she could trust him, and it proved her gut was right. He not only was respectful in wanting to give her the night she'd been erotically dreaming of, he also made sure she felt safe and cared for throughout.\n\n\"I think she's falling for him,\" Ann said days later, when she recounted what Tina shared about their night, as well as the sexless date they had two days later to better get to know one another.\n\n\"Really?\"\n\n\"Fate has a funny way of bringing people together that are meant to be.\"\n\nBut as we drove home that Sunday, it was fascinating to watch Tina sleeping in the back seat. I found myself stealing little glances in the rear view mirror, checking her body for other signs of what she might have endured. However Ann's mind had gone in another direction entirely.\n\n\"So, are you ever going to ask me?\" she smiled as she put her hand on my thigh, her other reaching underneath her short skirt.\n\n\"It's really bugging you, isn't it?\" I teased.\n\n\"I wouldn't say it's bugging me. It was actually kind of exciting at first. I know how much you love it, which really turns me on.\" Turning her body slightly to face me, she spread her thighs; my eyes darting to catch a glimpse of the pussy ring she was talking about... and playing with.\n\n\"So it was exciting at first; but now it bugs you.\"\n\n\"No. It intrigues me. You used to focus on 'the how' whenever I surprised you. I love how you've gotten past that. You take it in stride and just go with it.\"\n\n\"I can't promise that's going to happen every time. But yes, I love the ring. I just wasn't going to let it get me distracted last night.\"\n\nShe leaned over and gave me a hug, kissing me near my ear. Patting my cock, she said, \"You didn't baby. The way you fucked me last night, I was more concerned that you might melt it.\"\n\nWith the conversation officially started, it was silly to pretend that I didn't have questions any longer. But instead of my having to beg for the details, she decided that she was going to share. She didn't make me drag the story out of her like she usually did; she became an open book, spilling information like a witness being interrogated.\n\n\"So, I did it the week after I came back from visiting you,\" she started, leaning back against the door while she continued to play with it. \"Tina and I were bored one night... I think it was Wednesday, and she said something about going to Fort Wayne to see a movie.\"\n\n\"How do you go from seeing a movie to getting your pussy pierced?\"\n\n\"We took her car,\" she joked. \"Actually, we never made it to the movie. We got halfway to Fort Wayne and she started talking about going to the sex shop again. The next thing I knew, we were pulling into the parking lot and she was dragging me inside.\"\n\n\"Against your will, no doubt.\"\n\n\"I never said that. But I certainly didn't go inside thinking I'd get my pussy pierced.\"\n\n\"And yet you did,\" I laughed.\n\n\"I almost didn't. When we went into that part of the shop, I was just joking around. But the longer I stood in there, the more excited I got just thinking about it. Then I decided not to.\"\n\n\"Okay, now you lost me.\"\n\n\"Well, I got to thinking that we were just a month away from getting married, and I didn't know how long it would take to heal from something like that. I said that to Tina, and of course she goes and asks the guy who worked there.\"\n\n\"So... a guy did it?\"\n\n\"Don't get sidetracked, baby. It's not about him and you know it.\"\n\n\"Yeah, you're right. Go on.\"\n\n\"Anyway, he said because I was getting my inner labia done, and there's a lot of blood flow there, it could take anywhere from four to six weeks to heal.\"\n\n\"And you had it done anyway? That was pretty risky, don't you think?\"\n\n\"A little. But I've always been a quick healer. I told you that the first time we ever tried bondage. I rarely bruise that much, and whenever I've cut myself I heal really fast. So I was banking on the shorter time. It was a risk, but it was calculated...and it turned out I was right. I was pretty much good to go a little over two weeks after I had it done. I was sore, but nothing too horrible. I just had to make sure I kept an eye on it and I did all the things he told me to do to keep it clean. I was worried though.\"\n\n\"About not healing fast enough?\"\n\n\"Not really. I knew after the first week that I'd be okay by the wedding. I was more worried that you'd notice that I'd gotten pierced when you came back for Thanksgiving. I took the ring out that first night at your parents' house, even though I wasn't really supposed to. I figured you might see the little hole, but you never did. You were too busy fucking me to see it. And if you remember, I never let you eat my pussy that weekend.\"\n\n\"I...didn't?\"\n\n\"No. We fucked at your parents' house that night... a lot. But if you recall, I never took off my outfit, and I controlled the action in bed. Of course, I didn't expect you to fuck me twice in the bathroom the next morning, but all we did was fuck. The biggest chance I took was when I masturbated at the park. I kind of forgot in the heat of the moment, and you could have seen the hole then, I suppose. Then again, it's pretty tiny, you were sitting on the bench and my hand was kind of in the way. After that I got my period, and I knew I'd be able to surprise you like I did.\" \n\n\"So you put the ring back in then?\"\n\n\"I did until the day you left when you fucked me in the ass. I took it out that morning, and then I put it back when you left Tina's. Well, not this one. The one I bought when I got pierced.\"\n\n\"What?\"\n\n\"The one I got for myself is silver. It's pretty much like Missy's.\"\n\nI looked at the golden one that she was toying with, the little diamonds sparkling as if on cue. Glancing at the wedding ring on my finger, I took another peek between her legs. 'So where did you get that one?\"\n\n\"Missy,\" she giggled.\n\n\"I should have known,\" I said, because...well, I should have known that.\n\n\"I called her the night I got pieced to tell her. And that gave her the idea. She'd just gotten Tina's special invitation to give something personal. She didn't know until a couple of weeks later that she'd be bringing it out herself, but that just made it even better. She knew I'd gotten our wedding bands from Dave, so she went to see him, and he had it made to look like yours.\"",
        "\"That must have been expensive.\"\n\n\"I suppose, but I'm sure he helped her out with a discount. Anyway, that's what we were doing during the reception.\"\n\n\"What?\"\n\n\"Remember? Tina told you she didn't want to miss what we were doing, and it was a surprise? Missy had me open the gift in the back room, and then she put it on me.\"\n\n\"You're kidding.\"\n\n\"Nope. Tina had all the girls that were at the bachelorette party come back to watch Missy do it. Dana and Billie came back too. Oh, and so did Rebecca,\" she giggled.\n\n\"Rebecca?\" I said, shocked that she mentioned my brother's wife.\n\n\"She's my new sister-in-law, Neil. I didn't want to leave her out.\"\n\n\"What about Shelly? She's your sister-in-law too,\" I said of her brother's wife.\n\n\"Yeah, well... she also tries to compete with me. You know that. I decided I'd rather have one up on her. Besides, I wanted Rebecca to feel a part of the fun. She really loved it.\"\n\nAnn's revelations started to sink in. Like a light going on over my head, I blurted, \"Wait... so does that mean Dawn was there?\"\n\nWinking, she nodded, \"I just told you, baby, if they were at the bachelorette party, they were in the back watching.\"\n\n\"Is... is that all Missy did?\"\n\n\"I didn't do anything sexual, Neil. Although I did let Rose take a few photos for our X-rated wedding album.\"\n\n~*~*~*~*~*~*~\n\nAs amazing as that was, Ann wasn't even thinking about the talk we shared on our drive back to her family home that Sunday. As we sat in the plaza restaurant, it was what happened once we got to her that made her go silent as we ate, a wistful smile coming to her face.\n\n\"You're thinking about the presents again, aren't you?\" I nodded, knowing before I asked that I was right.\n\nShe got a little misty, the emotion of the moment coming back to her. \"Yes. It's still kind of hard to believe, you know?\"\n\n\"Yeah, I do.\"\n\nWe'd dropped Tina off, actually helping her into her home, making sure she was comfortable. At first she protested, wanting to come to the gift opening celebration. She'd said it was part of her job as maid of honor to write down what we got from whom. But Ann and I both knew she wasn't up to it. She was sore and exhausted, her body needing time to rest up and heal. Alex hadn't hurt her, at least not permanently. But he'd definitely tested her limits.\n\nKnowing the way she normally liked her sex, it wasn't hard for me to believe that she wanted to be pushed hard when it came to bondage. In fact, I could actually envision her begging for it, the need to live, breathe and feel the experience firsthand driving her to plead for more.\n\nShe took off her pants, showing stripe marks on her beautiful bare ass; leftover reminders that she'd been whipped. Her blissful grin as she crawled gingerly under the covers made Ann moan. \"I kind of wish that was me, Tina,\" I heard her whisper as she leaned down to give her tired friend a sweet, tender kiss.\n\n\"Take off the clamps, Ann,\" she requested, carefully pulling her shirt up, exposing her breasts. They were reddened and raw; rope marks deep in her skin from where they'd been bound tightly. There were hickies all over them; Alex obviously leaving his mark behind on purpose. Her nipples were swollen and slightly chafed, the teeth of the clamps distorting their natural shape.\n\n\"Maybe I should let you keep them.\"\n\n\"No. They're yours. I'll get with Nancy to find out where she got them.\"\n\n\"I'm pretty sure we both know where that is,\" Ann giggled, thinking about the sex shop they loved to frequent together.\n\n\"All the more reason for you to take them. I know where to get my own.\"\n\nAnn reached down and pressed both of the clamps at the same time, opening the biting teeth. Tina emitted a low scream as the blood flowed into her abused buds, making them throb in pain.\n\n\"FUCK... that feels so fucking good,\" she seethed, her eyes wild with desire. \"You mind reaching into my drawer and getting my dildo for me, Neil?\"\n\nI did as she asked; handing her the same model Ann had become rather famous for endorsing, at least with her friends. \"Here you go.\"\n\nReaching underneath the sheets, she grimaced as she rubbed it along her pussy. \"Thanks guys. Have a good time,\" she said, leaning back and closing her eyes. A gasp escaped her beautiful mouth as she eased the thick rubber dick inside her.\n\n\"You too,\" I grinned as we turned to leave.\n\nTen minutes later we were at the Franklins', a small group of people on hand to watch us open the normal wedding gifts we'd received. In addition my parents and Ann's, there was my brother Gene and his wife Rebecca, as well as Matt and Maria. But that was it. Everyone else had left after the wedding. Not that we'd expected anyone to stick around just for us to come back to open the gifts. We wanted to limit the number of people, mainly because we wanted to be able to relax.\n\nAnd we did, at least to start. We took our time, opening presents along with the attached cards. Maria took Tina's role, writing down each gift in a little book so we'd have a record. Ann wanted to hand write thank you cards, and she wanted them to be personal. Knowing her, I had no doubt they'd end up being the most important cards she'd ever send. Personal to her meant personal.\n\nWe got a lot of the standard fare: pots and pans, Tupperware, tons of place settings and silverware. There were a few small appliances, including a huge Crockpot that had Ann practically giddy with excitement. And there were towels and linens galore. Most of the items that were on our registry list were there, all of them greatly needed and appreciated.\n\nBut it was the envelopes that changed the mood in the room. Sure, we both expected some of our guests to simply give us cash. Well, checks. And those were obviously just as appreciated. But when we got to the last couple, it became rather evident that something was up. First because we didn't know they existed. We thought we'd finished opening all the presents, but there was Matt, his affectionate grin spreading among the rest of those gathered as if it were contagious.\n\n\"What are you smiling about?\" Ann asked.\n\n\"Yeah, wipe that goofy grin off your face,\" I kidded, wondering why he looked so... well, brotherly all of a sudden. We could both see the love he had for us in his eyes.\n\n\"Sorry. I can't help it. I love seeing you two together.\"\n\n\"Sure you do.\"\n\n\"I DO,\" he chuckled, \"Are you doubting my sincerity?\"\n\n\"Yes I am, Matthew. I've seen that look before, many times. What are you up to?\" Ann demanded, sounding just like she must have hundreds of times when she was babysitting him and Maria when they were little.\n\nReaching into the inside pocket of his coat hanging on the back of his chair, he shook his head. \"You always could tell, couldn't you, Ann?\"\n\n\"What are those?\" I asked, looking at the two envelopes he was holding.\n\n\"The last of your gifts. I was asked to kind of save these until the end. I hope you don't mind.\" He handed me the first one, which was rather thick, saying, \"You're supposed to open this one, Neil.\"\n\nI slowly opened the envelope, pulling out the card to read. It was the traditional wedding variety, congratulating the happy couple. But it wasn't signed. Instead, there were two other envelopes inside. One was a rather small, and I knew it contained some kind of note. The other was one of those special envelopes designed to put money or checks inside.\n\nOpening the smaller one, I unfolded the paper, surprised at how big it was. \"Read it out loud, baby,\" Ann said, not wanting to be left out.\n\n\"Okay,\" I replied, taking a deep breath as I looked at the perfect penmanship printed on the paper.\n\nDear Ann and Neil,\n\nTara and I can't thank you enough for letting us be a part of your wedding. It was such a wonderful blessing just being invited. That we ended up being able to play at your reception turned into one of the great joys of our marriage. We were able to reconnect with some very dear friends, and reignite a passion we both have felt has been missing in our lives.\n\nGetting back together with the band had been an unfulfilled dream of ours for years. We wanted to do it, but never had a good enough reason to drop everything and try. Somehow, just inviting us to share in your day set things in motion in a way that we not only got to live out that dream once again, now we're looking for ways to keep playing. We're not going to start touring, but we are definitely going to do more live performances together in the future. Tara already has two lined up.\n\nWe also wanted to let you know that there's a wrong that we feel horribly about; one that I can no longer wait to make right, and Tara agrees with me. This wouldn't be necessary if I had paid more attention to what was going on in your department and done my job at the time. I can't help but feel that you've already forgiven me, Neil. That's just who you are, and why we both care for you and Ann so much. Yet that doesn't mean I don't feel obligated to make up for it.\n\nPlease accept our gift for how it is intended. It's not only to show you how we feel about you both, it's also our way of helping you get off to the financial start you would have had if my company had taken care of you the way we should have from the start.\n\nThanks again for letting us rock your wedding.\n\nGeoff and Tara Beck\n\nAnn and I stared at each other in disbelief. She reached over and touched my arm, my fingers trembling as I held the other envelope \"What do you think is in there?\" she asked.\n\n\"Only one way to find out,\" I shrugged as I opened it. Pulling out a personal check, my mouth fell open. \"Oh my God,\" I whispered.\n\nShowing it to Ann, her hand covered her mouth, her gasp followed by a nervous giggle. \"Is that REAL?\" she screamed.\n\nIt was. The Becks had written us a check for twenty-five thousand dollars, the notation in the bottom corner saying it was just a wedding gift. Everyone in the room seemed to already know what it was, because they weren't surprised. At least they didn't act like it. Instead, they were all beaming.\n\nLooking at my dad, he simply nodded and said, \"Geoff felt bad about not knowing you were never on salary when you should have been. When he told Tara, she said he needed to do something about it.\"\n\n\"But Dad... this is twenty-five grand!\"\n\n\"I know, son. But when you think about it, that's about what it would have been.\"\n\n\"What?\"\n\n\"It's back pay, plus interest. Plus a little extra from him and Tara for what the wedding gift would be.\"\n\n\"I can't believe this is real,\" Ann said as she looked at the check, feeling the edge like she thought it might be a fake or something.\n\n\"It is,\" Matt grinned. \"And so is this one.\" He handed Ann the other envelope, and she kind of pointed at herself like she was shocked he was giving it to her. \"Yes... you're supposed to open that one.\"\n\nShe looked at it with a nervous smile. \"I'm scared to open it, Neil.\"\n\n\"I'm sure it's going to be fine, babe.\"\n\nShe opened the wedding card, seeing it was similar to the one I'd opened. But instead of two envelopes inside, there weren't any at all. There was just a folded piece of elegant stationary inside. She opened it to see it was handwritten as well, the beautiful cursive strokes of the pen etched in black ink. Clearing her throat, she started to read.\n\nCongratulations Ann and Neil,\n\nSince we first met, you've been such an inspiration to both of us. The joy you bring with you everywhere you go, the way you take each encounter and make it personal and special; those things rub off on everyone you meet, including us. We're so grateful to be able to call you true friends.\n\nWe know you're going to have an amazing life together, filled with love, happiness, and yes, many more moments of naughtiness. However, in any life there are bound to be struggles and worries. While we know you'll get through those times because of the way you love and trust each other, we'd like to take away one of the future burdens before it happens, just to make things a little easier.\n\nAnn, you once mentioned to me that you want children someday, even saying that you would likely only have two. So, we're going to go with that to start. Todd and I are setting up two college trust funds. If you change your mind and end up having more children, just let us know and we'll take care of them too. For now, rest assured that whenever you decide to start your family, education will be taken care of.\n\nWe realize it's an unconventional gift, but most people only look at the short term, and you two are very different in that regard. You seem to always think of the bigger picture. It was that outlook that helped us become friends in the first place. We're so grateful for that, and to have you both in our lives.\n\nLove,\n\nTodd and Gracie\n\nP.S. In the unlikely event that you change your mind and decide not to have children, the trust funds would become your retirement when you reach that age. Either way, we're looking at this as a loving investment in you and your family. Enjoy!\n\nAnn burst into tears, the emotion of it all catching up with her quickly. I was right there with her, the tears rolling down my cheeks as I held her in my arms.\n\n\"I can't believe this, Neil. It's all too much. We can't accept all of this.\"\n\nI was about to agree when Marlin sat down next to his daughter, patting her on her leg.\n\n\"Sweetie, I know this is a lot to process right now. Believe me, all of us were amazed when we first found out about the generosity of the Becks and the Armstrongs after you left last night... but they were genuine in wanting to give these gifts to you. Don't insult them by thinking it's too much, or that you shouldn't take it.\"\n\n\"But, Dad --\"\n\n\"Anna, I'm so proud of you. You're an amazing daughter; you've married an amazing man. Both of you have always been so incredible about giving of yourselves to others. It's one of the many things we all love about you. But can I give you a piece of advice?\"\n\n\"Well, sure.\"\n\n\"Remember that it's okay to receive too.\"\n\n\"What?\"\n\n\"I know we always taught you that it's better to give than to receive. I'm sure Neil was taught that too. But you know what... there comes a time when you have to be humble, and let the people that love you give back.\"\n\n\"Yeah Dad, but this is soooo much. It's TOO much.\"\n\n\"Says who? I'm sure that they don't think so. Otherwise they wouldn't have done it. Besides, they wouldn't be doing it if they didn't want to, or if they couldn't afford it.\n\n\"It's not about them being able to afford it. I know they can afford it. It's about --\"\n\nPutting his arm around her, he gave her a gentle kiss on the cheek. \"It's about being loved, sweetie. That's all they're trying to do. They just want you to know how much they love you and Neil. So accept it.\"\n\n~*~*~*~*~*~*~\n\nAnn had learned to accept it. We both had. But that didn't mean we didn't think about it. As she finished her sandwich, using her napkin to dab the corners of her mouth before putting in on the tray in front of her, she let out a happy sigh.\n\n\"I still can't believe it Neil,\" she said as she shook her head.\n\n\"Me either, babe.\"\n\n\"Did you have any idea that's how much you missed out on by not being on salary all those years?\"\n\n\"No. I never let myself think about the money. It was always the principle of it anyway. That's what upset me. I felt like I had earned the title. I guess I should have been upset that I didn't get all the benefits the other managers had, but for me it was more about the position. Every day that I had to clock in, it reminded me that I wasn't really a manager in my boss's eyes.\"\n\n\"Well, it's says a lot about Geoff that he wanted to compensate you for it.\"\n\n\"Are you okay with what the Armstrongs did?\"\n\nShe smirked and said, \"You mean putting pressure on us to have kids?\"\n\n\"Ha... you know better than that.\"\n\n\"Yeah. I was fine with it once I got to talk to Gracie. It's still a little overwhelming, but Dad was right. I have to learn to be more accepting. I'm just not used to it.\"\n\nIt was different for her. She'd spent most of her life doing things for other people, wanting to give of herself whenever she could. It was all part of her makeup; a sense of selflessness that ran deep inside her very core. Now the tables had been turned a little. It was only natural that those that Ann loved would want to love her back.\n\nShe looked at me, that smirk turning into a sexy, erotic smile. \"You know, if I would have thought of it before, it really shouldn't have been so hard for me to let people give me things.\"\n\n'What makes you say that?\"\n\n\"Because you've been so amazing at giving me what I need, I should be used to it by now,\" she winked.\n\n\"I'm not sure sex counts, Anna.\"\n\nReaching across the table, she took my hands, her eyes melting as she squeezed my palms with her fingers. \"You give me more than that baby. But trust me, it does count.\"\n\n\"See, I knew it.\"\n\n\"If you know so much, we should get going then.\"\n\n\"Why's that?\"\n\n\"I want to get to Pennsylvania so I can let you give me some more.\"\n\n~*~*~*~*~*~*~\n\nSeeing the sign announcing we were entering West Virginia was a welcome sight. Even more so since it was the second time we'd passed one, which meant we were about a half-hour or so from our new home. We'd made pretty good time since we'd stopped at another plaza, that one more of the traditional kind along the Pennsylvania Turnpike, somewhere in the Allegheny Mountains.\n\nWe didn't need to get gas, we didn't need to eat, we didn't even need to stretch our legs. Ann flashed her lights because we needed to add the Keystone State to the list of ones we had sex in. And since we were simply passing through, we needed a place to stop. The plaza seemed as good a place as any, and it was certainly safer than just pulling off the side of the road. It would also attract less attention.\n\nWe caught a break in a way. Even though the plazas along the Turnpike tend to be a lot more crowded, we had encountered some iffy weather as we started crossing the mountains. Normally I hated driving in cold, drizzly conditions, especially when there was a chance the light rain could switch over to snow at any time. But I decided to look at the glass as half-full like Ann always seemed to, and the sudden benefit of the weather was that we were also dealing with some pockets of dense fog.\n\nThe plaza where we stopped was shrouded in a thick, white, misty cloud. When I pulled into the first empty space I could find, I couldn't even see the buildings. In fact, I barely saw Ann's blue Honda pulling into the spot right next to me.\n\nI got out of my car, walking over to hers, which surprised her. \"We're going to use my place?\" she questioned, her phrasing making me laugh. \"Yours has so much more room.\"\n\nI had to agree, and as I opened her door, I thought about taking her back to my car so we'd be more comfortable. But then I heard a car approaching and I didn't see it until it passed us about fifteen yards away, and I became inspired.\n\n\"I think we should compromise,\" I grinned, leaving her sitting in her seat as I walked to the back of her car. Opening the hatch, I started digging around.\n\n\"What are you doing, Neil?\"\n\nGrabbing the horse blanket her Aunt Helen gave her from a box in the back, I laid it on the pavement between our two cars. Taking her by the hand, I helped her up, bringing her into my arms as I closed the door. \"I'm going to fuck you, babe.\"\n\nShe bit her lip, the wondrous expression on her face highlighted by the sparkle in her eyes. \"Right h... here?\" she gasped, her words catching in her throat.\n\nI nodded, pressing my lips against hers for a quick, passionate kiss. That set off a frenzied rendezvous, as Ann dropped to her hands and knees while I moved in behind her. Unzipping my fly, I pulled out my growing cock while she lowered her sweatpants over her shapely rear. I was tempted to fuck her ass, but the glimpse of the dripping pussy winking at me from between her tightly closed legs made my blood boil.",
        "We fucked in relative silence; the fog seemed to amplify anything we said or any sound we made. Yet the way our bodies slapped against each other and the little moans we'd make became so erotic. She was leaning down on her elbows, the hood of her coat covering her head from the drizzle. I did the same with my hooded sweatshirt, covering myself as I bucked into her hard and fast. It was almost an anonymous fuck, like we'd just met at a rest stop and decided to have at each other.\n\nAnother car passed us just when she was about to explode, her body shuddering from the recognition of what we were doing and where we were doing it. It was a powerful orgasm, made all the more intense by her having to keep quiet. Minutes later I was ready to cum too, my balls churning, the walls of her pussy rippled over my shaft. She pulled off and spun around on the blanket, taking the head of my cock into her warm mouth as her hand found my shaft. Jerking me off, I held her head with both hands and growled, unloading my sperm over her waiting tongue.\n\nAfter a quick kiss and some giggling, we were scrambling to get back into our cars so we could warm up and get on our way. She pulled up her sweatpants while I grabbed the blanket, stuffing my deflating cock back in my jeans as I went along.\n\nDriving past the main part of the plaza, seeing the hundred or so cars and trucks and all of the people milling about as they went in and out of the building, the enormity of the chance we'd just taken hit me. When I pulled out onto the Turnpike, Ann following close behind, I realized we hadn't even said anything to each other when we were done. We'd just fucked and ran, the serendipity of the moment making my heart pound. It was a surreal, and as the miles passed, I began to wonder if I'd somehow just imagined the whole thing.\n\nIt was still on our minds when I opened her door a couple of hours later. We were stopped along the side of I-70 near the sign announcing we had entered Maryland. She couldn't wait to blurt out what was on her mind.\n\n\"I loved fucking you like that, baby! I can't believe we did that. Did you see all of those people as we drove past?\"\n\n\"Yeah. Good thing we had the fog,\" I grinned.\n\n\"Fate,\" she said as she kissed me. \"Sorry I didn't say anything after we finished. I was cold, and I kind of forgot we weren't in the same car.\"\n\nI laughed, amazed she'd had the same thoughts I'd had. \"That's okay. I did the same thing.\"\n\n\"I'm just glad we're out of the fog now,\" she sighed, \"I thought we were going to be traveling in it the rest of the way. It's funny how it changed so fast.\"\n\n\"We're out of the mountains, babe,\" I said as I pointed at the welcome sign.\n\n\"Oh... well that makes sense. I guess it's time for me to pose again, isn't it?\"\n\n\"Yeah. And we have to do it twice.\"\n\n\"Twice?\"\n\n\"Uh huh. We never did it going into Pennsylvania, remember?\"\n\n\"Oh... yeah.\"\n\nSo, Ann did her magnificent poses next to the sign welcoming us to Maryland, and then we carefully crossed the interstate, making our way the fifty yards or so across the median to the north side of the interstate so we she could do the same thing in front of the Pennsylvania sign.\n\nUnfortunately, the two signs didn't line up very well, one being farther up the interstate on the other side, so it became a bit of a hike. I let her put her clothes on in between, not wanting to get stranded too far away from the cars with her being naked. But it was still a rush. Ten minutes later, we were heading back to our cars, the thrill of what we'd just done feeling as fresh as the first time we'd done it at the California-Nevada border months before.\n\nDriving underneath the West Virginia sign an hour and a half later, I felt a twinge of excitement run through me. Not because we were going to be stopping for another set of erotic pictures by the roadside. I'd already told her we'd be doing that sometime on Saturday, promising to take her back into Maryland so we could add that state to our list. Instead, the excitement I was feeling was because we were suddenly very close to our new home.\n\nBut before we went to there, I decided to make a stop at my old home, so to speak. I hadn't discussed it with Ann, but being that I was hungry anyway, it seemed as good as place as any to eat. Getting off at the familiar exit, I whipped my car around the curve and turned at the light, going up the little hill toward the Sheraton. Pulling into the parking lot, I was out of the car when she pulled in behind me, an odd look on her face as she parked her car.\n\n\"What are we doing here?\" she said as I opened the door for her.\n\n\"We're going to go eat. There isn't any food at the house yet, so I figured we'd stop here and....\"\n\n\"Say hello to HEATHER!\" Ann became excited, but I put up my hand as she started to get out. \"What... we're not going to say hi to Heather?\"\n\n\"Of course we are. But you're not wearing that. We're going into a nice restaurant.\"\n\n\"I seem to remember wearing nothing but a robe in there before, baby. You too.\"\n\n\"That's when we lived here. Get undressed.\"\n\nShe giggled as she quickly stripped off her outfit, putting on the jeans and the tight white Henley shirt she'd been wearing when she started the day. Slipping on her high heels instead of the Nikes she'd spent the majority of the day wearing, she stood up. \"Better?\"\n\n\"Much,\" I said, holding out my hand. She let out a little laugh as we walked toward the entrance, and it caught me off guard. \"What's so funny?\"\n\n\"I just can't believe I've gotten to the point where I really don't look around anymore when you tell me to get naked. I just do it. I wonder if anyone saw me.\"\n\n\"I was watching for you, Anna. No one did.\"\n\n\"Hmm... that's a shame,\" she winked.\n\nTo say Heather was excited to see us was an understatement. I thought she was going to leap over the counter to hug us. Instead, she jumped up and down, telling us to come into the back so she could give us a proper hello. We each got bear hugs, her sweet southern hospitality coming out as she made us feel welcome in our new home town.\n\n\"I can't believe you stopped by just to see me,\" she sighed, a tear streaming down her cheek.\n\n\"We didn't. We came to eat too,\" I joked.\n\nAnn slugged me playfully on the shoulder. \"Behave, Neil. You know the only reason we came here to eat was because Heather's here. It was your idea!\"\n\n\"Really?\" Heather asked as she batted her eyes. I just kind of shrugged and nodded with a crooked smile. She practically jumped into my arms to hug me again, the tears flowing from her pretty eyes. \"You didn't forget me!\" she sobbed as she buried her head into my shoulder.\n\n\"I told you we wouldn't, Heather,\" I whispered as I looked at Ann, her face beaming as she clutched her hands over her heart.\n\nWhen she finally composed herself, Heather pulled back; sniffing and wiping her cheeks as she looked at the two of us. \"Okay... let's see those rings!\"\n\nI saw Ann's devilish grin flash, knowing the ring she was thinking about. But I shook my head slightly, letting her know we weren't going to be starting anything with Heather... at least not right away. And truthfully, Ann wouldn't have wanted to. We'd already decided we were going to take things slower now that we were married. It's what we both wanted. Still, the little pout she gave me before holding out her hand to show Heather made my heart skip a beat.\n\nEating dinner a half-hour later, Ann was playing with her wedding ring, looking at it in the dim light of the restaurant. \"You know, if I was wearing a skirt, I would have shown her my other one,\" she said calmly as I took a bite of my salad.\n\nI finished chewing, contemplating how I wanted to answer her. Swallowing, I looked deep into her eyes, watching the colors seem to change as she moved. \"If I would have let you,\" I replied, smiling softly.\n\nOur mood was playful, but reserved. It was the beginning of our first night together in our new home town, and it was like we were feeling each other out. But at the same time, I was letting her know in my own subtle way that I was still in charge. And based on her reaction to my comment, I knew she wanted me to be.\n\nShe shuddered, grabbing the table with her hands; the way she closed her eyes and moaned almost made me drop my fork. When she looked at me, her irises swirling as she bit at her bottom lip, I could tell she was thinking of all the things I might make her do once we got to the house. At least, that was my impression. All I knew for sure was she was definitely feeling naughty.\n\n\"I suppose you're right,\" she nodded, eating a bite of her pasta. \"Showing Heather might have led to something... and I'm not in the mood to share you right now.\"\n\n\"Actually, that's not going to happen for quite a while. We're not doing that anymore, remember?\"\n\n\"Other than Carol, right?\" she asked nervously, thinking I might have changed my mind.\n\n\"Right. Other than Carol,\" I grinned.\n\n\"Phew,\" she said in mock relief, wiping her brow with the back of her hand. \"I was worried. I'm not sure I can handle you all by myself all the time.\"\n\n\"What's that supposed to mean?\"\n\n\"I was kidding, baby,\" she giggled. \"I'm looking forward to finding ways to keep you happy. Although I am a little worried about gaining weight.\"\n\n\"Okay... what's that supposed to mean?\"\n\n\"Well, without any other girls to take a load or two off my plate, so to speak, I'm going to be swallowing a lot more cum. And as much as you make, I could get fat in a hurry.\"\n\nI smirked as I leaned forward. \"I'm more worried you'll lose weight from all the exercise you're going to get fucking me all the time. The cum is just going to help you gain it back.\"\n\n\"Hmm... I love the sound of that,\" she moaned, licking her lips.\n\n~*~*~*~*~*~*~\n\nMy heart pounded as I drove down the dark winding road. I was constantly checking my rearview mirror, making sure I didn't lose Ann. But I knew better, really. She was one of the best tandem drivers I'd ever met. The entire trip from Indiana, she had been on my tail, following me perfectly.\n\nThere's more to trailing someone on a long trip than just driving the second car. There's an actual art to it. She had it down to a science, anticipating traffic and always staying a step ahead. If we came up on a slower car and we needed to move to the left lane on the interstate, she'd foresee it, turning on her blinker and moving over to make sure she gave me an opening, blocking traffic behind us so we could both move safely and stay together. If we came up to a stoplight, she made sure she was close to my rear, trusting that I'd keep going if the light turned yellow so we'd both make it through. We were a team, and every time I looked in the mirror, there she was, following my lead.\n\nBut that didn't mean I ever stopped looking. It was dark and the roads were unfamiliar to her. They weren't all that familiar to me yet, but I knew my way around. And I knew where we were going, which was the reason my heart was beating so fast. Every mile brought us closer, and I couldn't wait to be there.\n\nIt was odd, because we were pretty much going to an empty house. There would be a few things there, including the hide-a-bed couch we purchased when she came out, and a matching loveseat. And there would also be our toy chest, filled with items for sexual adventure. But other than some of my clothes, and Ann's clothes that filled both our cars, that would be it until our stuff arrived on the moving van, which would likely be delivering on the following Monday or Tuesday. But we'd be home, and that excited me to no end.\n\nSeeing the front porch in my headlights as we drove down the hill of the dead end street into our driveway, I could hardly contain the thrill I felt. But that was nothing compared to what I saw when I glanced into my mirror again. Ann was about to burst, her eyes bugging out like she was seeing the place for the first time; her smile seeming as wide as the windshield of her car.\n\nI pulled into the turnaround in front of the house, knowing that's where I'd be parking my car from then on. I was going to let her have the garage, being that it was just the one-car variety. She whipped her car around, maneuvering it so that she could back down the driveway to make it easier to unload.\n\n\"I've got to get us a garage door opener,\" I said to myself, already making plans for things I needed to do to the house to make it more of a home. Since we were renting to own, there wasn't a lot I could do before we cashed in her stock to actually make the purchase, but a door opener was one of them. That thought was short lived as I climbed out of the Nissan, stretching a little as I waited for Ann to finish backing up. I was by the side of her car when she put it in park, rolling down the window with the engine still on.\n\n\"Why don't you open up the garage so I can pull in,\" she suggested.\n\nOpening her door, I shook my head. \"We've got plenty of time to unload, Anna. Besides, brides don't walk into their new home through the garage. They get carried in the front door, over the threshold.\"\n\n\"You are such a romantic,\" she whimpered, turning off the engine.\n\n\"I'm more of an eroticist.\"\n\n\"Well I like the sound of that,\" she laughed.\n\n\"Good. I'm going to go open the front door. You need to get undressed.\"\n\n\"Excuse me?\"\n\n\"Take your clothes off, Anna,\" I grinned as I walked down the sidewalk to the front porch.\n\n\"Oh my God,\" she said aloud in the dark as I inserted the key to the front door. When I got back to the car, I could see the nervousness in her eyes as she slipped her heels back on.\n\n\"Are you okay?\"\n\n\"Just an hour or so ago, I was telling you that I don't look around anymore when you tell me to do this, and then you go and find a way to make me self-conscious again. The way you keep me on edge amazes me sometimes.\"\n\n\"Weren't you saying how you were looking forward to finding ways to keep me happy?\"\n\n\"Yeah, why?\"\n\n\"Then why would it be any different for me?\" I asked, crooking my finger and motioning for her to stand up. \"The thing that turns you on the most is being made to do things, especially when you least expect them. I'm just trying to find ways to keep doing that to you.\"\n\nShe got on her feet, glancing around to see if any of our new neighbors might be looking. But there was no streetlight nearby, and it was already dark out. With no lights coming from inside the house, all anyone would have seen if they bothered to look out would be shadows. Still, she was standing in our new driveway, totally naked except for the heels.\n\nHer hard nipples led the way as I took her hand, walking beside her down the sidewalk. I made sure she was away from the house, not wanting to block her in any way. She felt exposed, the cold air flowing over her skin, making goose bumps appear. Then again, they were more likely caused from her sudden state of arousal. I didn't have to feel her pussy to know she was dripping wet. But that didn't stop me from doing it.\n\nWe stepped up onto the long front porch, the white railing stretching across the front of the house. Ann froze, waiting for me to take her in my arms. Instead, I reached between her legs, feeling her mound, letting my middle finger slide through the folds of her labia. As my fingertip brushed against her labia ring, she moaned, her knees buckling. Anticipating, I swept her off her feet, cradling her in my arms.\n\nCarrying her into the house, she nestled her head into my shoulder, sighing as I closed the door with my foot before I made my way across the great room. \"You have this way of making me feel so vulnerable... and so safe at the same time,\" she whispered, kissing me on the cheek.\n\n\"I'm about to make you feel all kinds of things,\" I grinned as I set her down gently on the loveseat.\n\nShe looked up at me in wonder as I stood there, my eyes gazing over her incredible body. I felt something of my own, my cock stirring as a flash of pride ran through me. \"God... she's my wife,\" I said to myself as I stared. \"How did I ever get so lucky?\"\n\nShe didn't move. Well, she did, but she didn't budge from the seat. She put her arms along the back, and slowly spread her legs, opening herself up for me. In essence, she was doing just what she said... making herself vulnerable. And that turned her on in so many ways.\n\n\"What are you going to do to me, baby?\"\n\nDropping to my knees, I crawled over to her. \"The first thing I'm going to do is make you feel at home here, Anna. And the best way to do that is to make you cum.\"\n\nThere was no need for foreplay. We'd been doing that pretty much since we left Indiana. Sure, there were hours and hours where we were each alone in our cars; but I know my mind seldom strayed from Ann and the thought of sex. Looking at her sitting on the loveseat, it was hard for me to believe she hadn't done the same.\n\nReaching under her ass, I pulled her closer to the edge of the cushions. She caught her breath, the primal desire in my eyes letting her know I was about to take her. I pressed my face forward, licking from her ass to her clit with one hard, aggressive swipe of my tongue. I'd flattened it out, dragging it over her pussy to cover as much area as possible, and she growled in response. I could tell she was grasping the top of the tiny couch from the way she moved, silently preparing for what I was about to do to her.\n\nShe still didn't see it coming. Not the way I attacked her pussy. It was raw and wild; nothing like the way I usually ate her out. I'd had my fair share of sloppy blowjobs, the kind where it was more about the intensity and the passion than it was about the technique. And truthfully, those of the wet, slobbery, sex-crazed variety were often the most memorable; fueled by lust. I was giving Ann the cunnilingus version of that experience.\n\nI was drooling, my mouth trying to cover her entire pussy. My tongue was all over, licking here and lapping there. I sucked at her labia, pulling the lips in a lewd, wicked way. She spread her legs wider, stretching herself, making her pussy widen for me to ravage with my mouth. I dug deep inside, forcing as much of my tongue into that gaping hole as I could; doing the same to her ass from time to time just to let her know I hadn't forgotten about that forbidden pleasure zone.\n\nLatching onto her clit, I grabbed her thighs from underneath, curling my arms around them to hold her in place while I assaulted her swollen bud with my teeth and tongue. She screamed, announcing to her new neighbors that a slut had arrived to live next door, her orgasm echoing around the cavernous room; the emptiness of the place making the cries of passion seem louder and longer.\n\nShe drenched my face, yet I continued, sucking and slurping at her cunt, holding my lips tight against her pussy to create a vacuum. Hollowing my cheeks, I batted the little appendage around, feeling her hands fly to my head. She gripped my hair violently, her legs clamping shut around my ears, holding me in place as she arched her back. Her thighs started shaking as I pawed at her ass, pulling her cheeks apart. She felt my fingertips stabbing at her asshole and she finally let go of my scalp, her body slumping into the cushions as she struggled to catch her breath.\n\n\"God... th... that was... amazing!\" she panted, her perfect breasts rising and falling rapidly as she sucked in oxygen.\n\nI reached up and pinched one of her nipples, making her eyes dart in my direction, a growl coming from deep inside her chest. \"Good. Your first orgasm in our house should be amazing.\"\n\n\"Yours is going to be too, baby,\" she said as she started to get up.\n\nI put my hand on her chest, letting her know I didn't want her to move. Grabbing the camera I'd snuck into the house when I opened front door, I held it up to my face, catching the disheveled look of a woman still in the afterglow of her powerful climax in my lens. She spread her legs wider, offering an unobstructed view of her cunt and the damp cushion underneath.",
        "After a few pictures, I went out and opened the garage, backing her car inside so I could unload it. She was undeterred, walking out with me, uncaring if someone might peer outside and see her standing naked in the light coming from the sixty watt bulb overhead. We carried her things inside, and then I told her she should go get cleaned up while I unloaded my car. She pouted, but grabbed her overnight bag to head down the hallway.\n\nMy intention was to get the hide-a-bed pulled out and made for the night. In fact, I'd told her that I was going to hang some old sheets over the front windows so we'd have some privacy. The front two windows of the living room were the only ones in the house where someone could see inside. Unfortunately, that was the room we'd be sleeping in, and while I didn't have a problem eating her pussy in a darkened house when no one knew we were moving in, I didn't think it would be wise to wake up in a room where the neighbors would be able to watch us sleeping... and whatever else we might feel like doing.\n\nSince we'd be sleeping in the great room until my old bed arrived with the movers early the next week, it made sense to find a way to temporarily cover the windows. That would also give us time to find window treatments that we actually liked instead of having to rush. I quickly unloaded my car, putting everything in what would be the dining room area of the great room. Putting Ann's car back into the garage for the night and closing the overhead door by hand, I walked into the house and started throwing the cushions of the couch onto the floor, ready to pull out the bed.\n\nShe had been in the hallway bathroom, mainly because it was closest and centralized in the house, with no windows for anyone to see in. It was an odd bit of modesty on her part, since the only room where anyone could see inside was great room, and she'd just been naked in there while I ate her. Hearing the toilet flush, she walked out, carrying her bag, saying she'd decided that she'd rather use the master bathroom after all. Laughing as I shook my head, I yanked on the handle, the bed easily popping up out of the frame.\n\nI'd just started to put on a fitted sheet over the mattress when I saw her out of the corner of my eye. She had come back down the hallway, and stood frozen at the entrance of the room. \"You don't need to do that,\" she said, her voice sounding like she'd just seen the shark in Jaws and she was telling me we needed a bigger boat.\n\n\"What?\" I asked, unsure I'd heard her right.\n\n\"I think you need to come see this,\" she motioned.\n\nI found myself being led down the hall, watching her sexy ass sway seductively in front of me as she held my hand. I followed her into the master bedroom, where she turned and pointed like a showroom model.\n\n\"What the....\" I mouthed; my voice catching in my throat.\n\n\"My words exactly,\" she said, clutching onto my arm as she leaned her head against my shoulder. \"I think we'll be sleeping in here.\"\n\nShe was right. We weren't going to be sleeping on the hide-a-bed. In fact, we likely weren't going to be sleeping, at least for a while. Whatever we'd end up doing, we'd be doing it in the master bedroom on the majestic king-sized bed that was centered on the wall to our left as we entered the room. I circled the bed, making my way around to the foot, the toy chest placed prominently there in perfect position. I continued to make my way to the other side, standing between the two windows along the back of the room, the little hallway leading to the master bath and the walk-in closet to my right as I stared across the huge mattress toward Ann, who was still by the door.\n\n\"Where did this come from?\" I asked, the question resonating through the room.\n\n\"The furniture store... in Virginia,\" she replied, a wicked smile on her face as she moved toward the bed, her hands pressing against the mattress like she was testing it. \"This is going to be comfortable, baby.\"\n\nIgnoring the second comment, I remained focused on the first. \"What do you mean the furniture store?\"\n\n\"This is the one we picked out, Neil. Remember?\"\n\nLooking at the headboard, the silvery black metal frame with the ornate gold trimming became familiar. It was one of the beds we'd picked out at the store in my old home town in Virginia; the same store where we'd purchased the couch and love set. Ann and I had actually looked at several beds there, and we'd settled on two of them. One was a queen-sized, which was the one we were going to buy when we had the money, as it was more reasonably priced. The one that currently resided in the bedroom was the one we wished we could buy.\n\nTruth be told, I was going to buy it. I'd thought about it several times on the trip home. With the cash gift the Becks had given us, it was going to allow us to do some things for the house that we previously knew we'd have to put off; getting a proper bed for my new wife being one of them. We'd originally planned on using my old bed from my room at my parents' house, which was currently on a moving van somewhere heading east from Indiana. And the original plan was when we had enough money, we were going to get the queen bed. Instead of doing any of that, somehow it was a king, and it had been done for us.\n\nAnn reached for an envelope that was taped to one of the round black bars of the headboard. I smiled, thinking of a conversation I'd had with her at the furniture store, teasing her about how it would be perfect for those nights she was in a more submissive mood. It was lighthearted banter as we went back and forth, trying to turn each other on that day, like every other day we'd ever been together; but we both knew we couldn't afford the bed. Instead of dwelling on that disappointment, she reminded me that we were going to use the big spare bedroom as our makeshift bondage playground. It was her way of letting me know that the bed didn't matter... I did.\n\nStill, she caught me staring at the headboard. Her eyes quickly shifted to the toy chest at the other end, before bringing them back to mine. Reading my mind, she said, \"Since we won't have the other bed until next week, we can use this one on Sunday, baby... but just this one time.\"\n\n\"What are you talking about?\" I asked, playing dumb.\n\n\"After this weekend, any time I'm Annabelle, we're going to be using the dungeon,\" she smiled.\n\n\"The dungeon? What are you talking about... the crawl space?\" I wondered, thinking about the area underneath the house, which actually was big enough on one end that we could probably use it that way.\n\nShe arched her eyebrow, flashing another wicked grin. \"I was talking about the guest room, although now I'm going to have to call it the playroom.\"\n\n\"So there's no dungeon, then,\" I laughed.\n\n\"There might be,\" she winked. \"I might be willing to try the crawlspace once... and we'll see if it stays on our list.\" I felt myself actually flush with excitement, although I didn't know why. She saw my reaction and held up her hand. \"Let's not get ahead of ourselves, baby. First, that's one I'd have to approve ahead of time, and it would have to be a lot warmer than it is now. But I'd be lying if I said it didn't excite me.\"\n\n\"Ann, I was just teasing.\"\n\n\"So? Some of our best ideas come from us teasing each other.\" She waved at me, letting me know it was a subject for another time. \"Back to my point, I'm willing to let you use our new bed this weekend when I'm Annabelle. After that, it's off limits.\"\n\n\"Seems a bit extreme, doesn't it?\" I laughed.\n\n\"Not really,\" she replied as she opened the envelope, pulling out a card. \"You already know I want to keep that side of me detached from the other parts. The easiest way to do that is to have a separate place for when I'm her.\"\n\n\"Well, if that's the case, we'll just have to find some other way on Sunday.\"\n\nShe shrugged and said, \"Suit yourself, baby. I'm just letting you know if you want to do it, I'm okay with it this one time.\" Sitting on the edge of the bed, she opened the card, her eyes widening as she read it to herself. Looking up at me, I could see the little tear falling from the corner of her eye.\n\n\"It's from Carol, isn't it?\"\n\nShe nodded, reading the card to me.\n\nNeil and Ann,\n\nI suppose saying 'surprise' right now is like putting the cart before the horse, but I can't help it. Surprise!\n\nAnn, if you could have seen the look on Neil's face and how upset he was about the thought of bringing you home to your new house without a real bed to sleep in on your first night, you'd know exactly why there's one in your bedroom right now. And this isn't just any bed. I was told by Adele from the furniture store that this is the one you really wanted all along. I can see why.\n\nShe said you were actually going to get a different one. She even had it set aside. But I asked her to show me all the ones you looked at. When I saw this one and she said it was the one you dreamed about, I knew I needed to get for you. It's my wedding gift for the two of you. While the other one was nice, this one is big enough for three people. I suppose I'm being a little presumptuous, but the selfish side of me is hoping that little added benefit is going to be important in the near future.\n\nCongratulations on your wedding. Tina told me it was a beautiful ceremony. I wish I could have been there. I can't wait to see some pictures. Enjoy the bed tonight. I'm sure it's going to get a real workout.\n\nLove,\n\nCarol\n\nAnn looked at me, her eyes misty as she gripped the card. \"I... I --\"\n\n\"I know, babe,\" I said as I got on the mattress, crawling across the large space between us to hold her. \n\n\"How did she get it in here?\"\n\n\"She introduced us to our realtor. We don't own the house yet.\"\n\n\"And he has a key,\" she nodded.\n\nNodding, I said, \"I can't believe Carol actually thinks we're going to share this bed with her.\"\n\nAnn laughed; the mood lightening as she pressed her head into my shoulder. \"I can't either. She's such a slut.\"\n\n\"So are you, Anna,\" I whispered as I kissed her on the forehead.\n\nShe giggled, her infectious laugh filling the room. \"I know I am. I'm thinking we should invite her over right now,' she moaned.\n\n\"I don't think so, babe.\"\n\nMy answer surprised her, and she pulled back, her big brown eyes batting in front of me. \"Really?\"\n\n\"Really. You're the only woman I'll ever need.\"\n\n\"Aw... that's so sweet baby.\n\n\"It's true.\"\n\n\"I know... but we are going to do it someday, right?\"\n\n\"Ha! Yes, Anna. I wouldn't go back on our word with her. She's too good of a friend, and she's done so much for us. But right now --\"\n\n\"Right now I'm the only woman you need.\"\n\n\"You're the only woman I'll ever need.\"\n\n\"Mmm,\" she moaned as she kissed me. \"And that's one of the reasons I love sharing you so much.\"\n\n~*~*~*~*~*~*~\n\nThere wasn't going to be any sharing, at least not for the foreseeable future, and we were both okay with that. But it was exciting to know that those possibilities were still going to exist somewhere down the line. Sure, there might come a time when Ann and I would mutually decide that we were going to permanently curtail our extracurricular sexual activities... at least as far as having additional people in them. But that seemed unlikely, even though those instances were going to be happening far more seldom than before. We both loved the idea of keeping that option open.\n\nBut it was closed for now. All my thoughts and dreams were fulfilled by the woman who had given her vows to me, just like I had to her. She was everything I could have hoped for in a wife, and more. And now that I had her in our home, all to myself, all I could do was think about how I wanted to make her happy.\n\nShe must have been thinking of doing the same thing for me. We kissed again, her passion making my heart pound as she tongued my mouth. But just as quickly as she started, she stopped, hopping up off the bed.\n\n\"I'm going to take that shower now, baby. You get the bed ready... and take your shower in the hall bath. I'll meet you in here in an hour, okay?\"\n\nWith that, she ushered me out the open bedroom door, giggling as she walked around the corner, locking herself in the master bathroom.\n\nI was suddenly thankful that we'd gotten the set king-sized red satin sheets from Gloria as a sexy wedding gift. I never dreamed we'd actually get to use them, thinking when Ann opened them that we'd be getting the queen-sized bed instead. Once I made the bed, I went down the hall, taking a long, steamy shower to get the day's grime off of me. It was incredible how something as simple as soaping myself under the hot spray could rejuvenate me, but it did. It had been a long day, and I was hoping it would go on a little longer. Actually, the way my cock was throbbing when I dried myself off, I was counting on it.\n\nWhen I got out of the bathroom, I turned to head toward the bedroom, only to find the door closed and locked. I knew she had her reasons, so I walked into the great room, taking the time to put the hide-a-bed back into the couch. Sitting on the cushions in the dark, my body still warm from the shower, I closed my eyes, feeling my shaft pulse.\n\nBy the time the door to the bedroom opened, I had no idea how long I'd been there. I only knew my erection was gone, and I was now on the cold side. I might have even dozed off for a moment.\n\n\"I'm ready, Neil,\" she called down the hallway, her sexy voice enough to arouse my libido once again.\n\nI got up, making my way down the hall, closing the door behind me as I turned to my left to see her lying on the bed. She'd lit a couple of candles, placing them on the windowsills to give us some light, the flickering flames showing the fire in her eyes. \n\nShe was wearing a sexy black teddy, the sheer fabric hiding very little. It came down just past her crotch, but that didn't matter with her lying down. She'd pulled it up, showing off the black g-string covering her pussy. I could see her erect nipples through the top, smiling that she'd gone without the matching bra. It was a simple outfit, yet it was like the hottest thing I'd ever seen her wear, partly because of the way it contrasted against the silken red sheets.\n\nI also noticed she'd gone without any heels, a subtle hint of what she was hoping was about to happen. Had she been wearing them, it would have been an obvious sign that she wanted to fuck. But with her bare feet pointing toward the foot of the bed as she lay curled on her side, it was easy to read her body language. She wanted me to make love to her. I couldn't think of a better way to break in the bed.\n\nCrawling up next to her, she pressed her hand against my chest, rolling me onto my back. \"My turn,\" she hissed, kissing me deeply.\n\nHer mouth trailed down my body, kissing my neck and shoulders before taking a long, slow trip down my torso. She inched along, licking, sucking and nibbling as she went. She spent forever toying with my nipples, playing with them in her mouth. I let out a long sigh and she giggled in response, knowing she was getting to me.\n\nMoving further, she dragged her tongue, snaking it along my skin. When Ann dug her tongue into my navel, my cock lurched against her body, and I felt her hand grab it. She squeezed gently as she licked toward my crotch.\n\nShe sucked on my balls with such love and attention that I almost felt spoiled. She looked at me, her eyes capturing mine as she licked along the length of my shaft. I'd never seen her look more confident as she took the head of my cock past her lips, sucking on the tip as she pressed it against my stomach.\n\nI groaned at the way she moved, taking me into her mouth. Her tongue was twirling, making me buck my hips as she pulled my shaft straight up. She began sucking me deep, the head of my cock easing down her throat as she inched more and more inside. Finally her lips pressed against the base, creating a seal as she breathed through her nose. She held herself still, humming over my cock as her hands massaged my thighs.\n\nJust as I was getting used to the magical things she was doing with her mouth, she pulled off. In seconds, she stripped off the g-string, lifting her leg over my body as she grabbed my prick, sinking her pussy over me in a long, seductive stroke.\n\n\"Oh God,\" she exhaled, her hands finding my shoulders as she started riding me.\n\nMy hands went under her teddy, cupping her breasts as she rose up and down. Taking that as some kind of cue, she reached down and lifted the bottom of the black top, pulling it off and tossing it onto the floor with her panties. It was such a rush to see her reflection in the open window, the candles making the image all the more seductive. I loved the idea that we could leave the windows uncovered and no one could see inside, offering an erotic ambiance that I knew we'd take advantage of often.\n\nHaving cum twice earlier in the day, we both knew we had a lot of time. She was taking it slow to start, rolling her hips, making the strokes long and deep. After a time, she was tiring, even though she wasn't going that fast. Sensing the need to change things up, I put my arm around her lower back, rolling her over with my cock still impaled deep inside her.\n\nI began humping into her, letting her relax as I did all the work. I was lying on top of her, barely moving my pelvis, wanting her to feel full constantly. I began kissing her, and her hands went around my head, holding us. We kissed more than we made love, paying more attention to what we were doing with our mouths than what was happening below our waists.\n\nShe held my head, and I brushed her hair, my groin moving every so often to remind her that I was buried inside. Not that she needed that reminder. The way her pussy was gripping at my shaft, I knew she was letting me know how much she loved having it stuffed full.\n\nAs her tongue probed my mouth, our passion slowly started to build once more. I could feel her getting wetter around my shaft and she let out a moan. \"I just came,\" she sighed, even though it was but a tremor. It still counted in her mind, and I knew a bigger one was on the horizon once we decided to finally start again.\n\nIt wasn't like I was teasing her, or drawing things out. It was just how things evolved, and it seemed so natural. We were coupled, and that was more than enough for us at the moment. In some silent way we were letting things happen; letting the lovemaking come to us.\n\nIt finally did. Ann's right hand drifted down my back, her left leg moving up along my thigh until it rested on my hip. Her fingers started playing with my ass, feeling along the top of my crack, toying with me. As she bent her body to do that, it spread her pussy, making my cock slip deeper inside her tight, wet hole.\n\n\"Oh baby,\" she cooed, a simple cry of passion to let me know she needed more.\n\nMy left hand went to her breast, squeezing it as I pulled my cock almost all the way out, before slowly grinding it back inside. She let out a hiss when I did that again, bucking into me slightly the second time. On my third stroke, my hips fired harder, making her shake.\n\n\"Uh-huh,\" she grunted, a little nod of her head as she licked her lips.\n\nI moved up, my knees pulling forward, widening to lower my shaft and give me more leverage. She opened her thighs, her knees bending so that she could put the soles of her feet on my hips. I could feel her labia stretching around my shaft, tightening as she spread herself for me. It was a more vulnerable position, one predicated on a desired result. She wanted to make love... but she wanted it to feel like she was being fucked.\n\nThat sounded strange in my head, but I knew what she needed. I grabbed her knees, pressing down on them to make her groin flex. The look in her eyes said it all, even though they were half-closed. She was ready to be taken.\n\nI pulled out until just the tip of my cock was inside her pussy. Then I thrust into her, my cock ripping deep until I bottomed out.",
        "\"Oh FUCK!\" she yelped, her hands going to her breasts, cupping them.\n\nAs I began hammering her pussy, a controlled rage ran through me as I tried to maintain the love-making and not have it spill over into all-out, animalistic sex. Her fingers wandered. She began pinching her nipples, rolling them between her fingers and thumbs as I pounded away. My balls were slapping into her ass, my pelvis hitting her clit over and over in a steady rhythm.\n\nShe pulled her nipples, stretching them out, grunting as she closed her eyes. I pressed her knees to the mattress, and she yelped again, her chest rising as she tried to adjust her body to the way I was treating her lower half. I could feel her clit dragging across my shaft, along with her pussy ring. Even though she was soaked, the friction we were creating was building inside her. And the load was building in my balls.\n\nWhen her back arched, her mouth opened. Nothing came out at first as her climax hit her. But seconds later, she let out a loud, earth shattering scream.\n\n\"OH NEIL! I'M CUUUUMMIIIINNNGGGGGG!\"\n\n\"I'M CUMMING TOOOOOOOOOO!\" I yelled with her, our orgasms hitting us at the exact same moment, the stars aligning in the skies just outside our window.\n\n~*~*~*~*~*~*~\n\nAnn was curled up on her side, my arm draped over her body as I played with her nipple. We were snuggling under the covers, the warmth of her body making my heart smile as the two of us stared through the window toward the stars in the clear night sky.\n\nShe let out a loving moan; one of those that let me know she was thinking about something. All I had to do was ask.\n\n\"What's on your mind, babe?\"\n\n\"Hmm... I was just thinking about something you told me once.\"\n\n\"Yeah, what's that?\"\n\n\"We were talking about how people think their wedding is the most important day of their life, and you said if that's true, what do you have to look forward to the next day?\"\n\n\"I didn't say that, babe. Rebecca did. I just told you about it during the reception, remember?\"\n\n\"Okay. But you said it to me, and that was what I was thinking about. Of course, I was thinking more along the lines of sex.\"\n\nI chuckled, thinking about how she always seemed to twist things in that direction. \"What about it?\"\n\n\"I was just thinking that as amazing as today has been, I have tomorrow to look forward to.\"\n\nI kissed her on the neck, squeezing her breast tenderly. \"Me too.\"\n\nShe sighed contentedly. \"I'm just can't get over how I'm going to be thinking that every night the rest of my life. I love you, Neil.\"\n\n\"I love you too, Anna.\"\n\n~*~*~*~*~*~*~\n\nAgain, many thanks to my faithful readers. You've made this such a joy. But fear not... I'm already working on other projects that I'm extremely excited about. And one of them includes a sequel to Ann! "
    ],
    "authorname": "mimaster",
    "tags": [
        "exhibitionism",
        "public sex",
        "love"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/ann-a-love-story-ch-97"
}