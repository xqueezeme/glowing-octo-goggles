{
    "title": "Demonbreaker",
    "pages": [
        "See? Chapter 8, like I promised. Yes, I know the last chapter was very upsetting! I promise it's not over for Claire just yet. Have faith in me, people. I couldn't kill her off. That would make all of us miserable.\n\n*\n\nShe refused to move, barely even daring to breathe. Not that she really could move, anyway. Claire simply declined to give the mist any small feeling of strength or triumph by struggling. Laying still allowed her to have some small semblance of control over her now hellish life. Silently, she dared it to attack her, baiting it with her stillness.\n\nIt likes me because I'm new and exciting. Let's see how fun I am when I don't cooperate.\n\nFor the moment, her plan worked. The mist had been expecting her to fight, to struggle for her life and call out to those she cared for. Instead, she lay still, offering no entertainment or surprises. She'd confused it. One moment, she was fighting tooth and nail to protect her lover; the next, she lay motionless inside its soft swirls. The mist raged at her once again, confounded by this human girl's incredible ability to drive it insane.\n\nClaire cracked a small smile. Knowing her captor was unsure of what to do with her made a small flicker of pride start to burn in her soul. It wanted her for control, for the ability to mask its intentions from the world. Walking around, she was able to decipher its darkest secrets and alert those in charge to any plans it may have. Trapped here, she was unable to be the alarm to any uprisings the mist had in mind. Here, she wouldn't be a threat.\n\nA long, painful silence deadened her soul. Despite her stillness and refusal to fight back, the mist still planned on finding a way to break her. Closing her eyes, she could hear the broken, indistinct whispers of its mind. Nothing clear or valid came through, but Claire nonetheless stayed alert. With her away from her lovers, without Darrow or anyone else to protect her, it had free reign over her fate. It could kill her if it wanted, break her into tiny pieces or shatter her soul completely. Being so completely at its mercy made her gut twist.\n\nAn icy coldness brushed against her arm, making her body jerk away automatically. The chill followed her, pressing hard against her skin, refusing to lose contact. She twitched again when the coldness began to seep into her skin, sinking through her flesh and into her bones. Her flesh tingled with the contact, drawing a harsh gasp from her throat as it sunk further into her skin.\n\nFear flowed through her, though she still remained silent. Realization followed soon after, the awareness that the mist was slowly soaking into her, becoming part of her. This must be what Tarrin had gone through when the mist took his mind. And now she was suffering the same fate: the possibility of becoming another mindless puppet it could use to wreak havoc. She shivered, pity, anger and fear melding together in her mind.\n\nOh, poor Tarrin. Not even that shithead deserved this.\n\nTears streamed down her cheeks, the horror and sorrow finally breaking through to the surface. She was terrified of losing herself, of losing everything she was to this awful, malicious coldness. She hated it, loathed it, wished it dead more than she'd ever wished for anything. She began to cry, her fa\u00e7ade of strength and silence finally beginning to crack.\n\nBut through her fear, a small flame of happiness glowed softly. Even though she would lose herself, at least her lovers were safe. She'd let them go at the last minute, sparing them the same fate. Yes, they would weep for her and swear revenge upon the mist for taking her, but they would recover eventually. They'd find a new girl, someone who would make them just as happy but without the heartache and pain she'd caused. They'd be fine. Grief-stricken, but fine.\n\nAnother rush of cold swept across her back, sending a shiver up her spine. Again the cold sank into her skin, becoming part of her bit by bit. She felt her heartbeat starting to slow. Her breathing became more labored. Her eyes slowly began to close. She was losing herself, her soul being broken down into a useless pile of memories and dreams.\n\nI love you. Take care of yourselves for me.\n\nA final brush of cold shattered her completely. Taking a final deep breath, Claire sank down through the mist, settling gently onto the soft peat of the marsh. Her thoughts dissipated, leaving her mind an empty husk. Her eyes, once a warm gray, slowly faded to a sickly white color. Though her chest rose and fell in a slow rhythm and her heart still beat, her body was now an empty shell of its former glory. No life, no fire, no passion now existed inside her. She was as cold and hollow as the mist itself, but lived without the malice or ideologies of her new owner.\n\n\"Yes.\" A soft voice, lighter than air and quiet as the wind, whispered by her ear. \"Good girl. So compliant and gentle. You're perfect, just as I'd imagined.\"\n\nClaire remained motionless, unable to respond or move.\n\n\"Sit,\" the voice commanded.\n\nMoving slowly, almost mechanically, Claire rolled onto her stomach and pushed herself up. She rested on her knees, her slender hands folded in her lap. Small clouds of hot breath slid from her mouth, stained white by the chill of the mist.\n\n\"Excellent. You're more malleable than I'd imagined.\" A thin strand slid up the length of her spine, caressing her skin with its icy chill. \"Oh, the things I could do with you.\"\n\nClaire nodded silently.\n\n\"Now stand.\"\n\nSlowly, she pushed herself up from the ground. She stood on her feet, wobbling slightly as her now soulless body regained its balance.\n\n\"Good. Spin for me.\"\n\nShe nodded again, turning slowly on the balls of her feet. She spun around and around, her nakedness on full display as she turned.\n\n\"Ah, yes. Perfection. Small and slender, but perfect.\" The voice, still soft and low, had hints of lust and desire mixed within the whispered words. \"You may stop.\"\n\nClaire stood completely still. Her pale eyes peered out into the marsh, staring at all yet seeing none.\n\nIn the shadows, dozens of human souls cowards behind the skeletal remains of trees, staring at her with horrified eyes. The old woman who had attempted to warn her days ago, the one who had smiled at her when she'd dropped grapes down into her withered hands, cried silently for her. The innocent she'd tried to protect had been lost. Those around her did their best to console her grief, yet they also watched the girl in horror.\n\nThe poor thing, they thought, she won't survive long here.\n\nClaire stared at them silently, waiting for instruction. Tendrils of mist wrapped lovingly around her arms and waist, caressing her gently as flashes of crimson and gold flickered across the silver surface.\n\n\"Ah, yes. The old hag,\" The mist growled through her mind. \"Do you remember her?\"\n\nClaire nodded slowly.\n\n\"Good. She's been a nuisance for me from the start. Always keeping me from claiming more delicious souls like yours.\" The voice purred in her ear and another tendril slid around her waist. \"I want you to teach her a lesson for me, my dear. Teach her not to interfere again.\"\n\nClaire's eyes narrowed, her mouth twisting into a disgusted grimace. Her body tensed, the lean muscles in her legs tightening, preparing for flight. Her fingers twitched restlessly. Her breathing quickened as excitement rushed through her veins. Her skin itched in anticipation, her thoughtless mind now focused solely on crushing her target.\n\n\"Go. Show that old witch the reason I rule this marsh.\"\n\nClaire snarled and leapt forward, charging across the quagmire and straight towards the old woman. Her eyes were wide with rage and joy, her chestnut hair flying wild behind her as she rushed forward.\n\nOther souls scattered to the shadows, desperate to dodge her attack. The woman stayed where she was, never daring to move an inch. Recognizing Claire was no longer really Claire, she decided to take her punishment in silence. She quietly muttered prayers of solace and apology for the girl, hoping with the remainder of her heart that she may have a chance to break away. She gasped in surprise when Claire crashed into her, losing her breath when she fell to the ground.\n\nGrowling softly, Claire crawled forward and straddled the woman's chest, her weight nearly crushing the fragile ribs. Pinning her former friend to the ground, Claire began dealing a series of blows to the woman's face, giggling with insane laughter as tears streamed down her wrinkled cheeks. Fresh sprays of blood erupted from the woman's mouth with every blow, staining her own face and hands a deep red. Claire's smile turned feral, joy flooding her mind as she watched the woman's strength fade through lifeless eyes.\n\nShe squealed with laughter after every hit, her cackles turning more manic with every spray of liquid ruby. Any sense of logic, reasoning or morality had left her the moment the mist had claimed her mind. She no longer felt guilt or pain; hunger and anger had replaced her old emotions. Spurred on by the screeching cheers of the mist, she continued to crush the old woman's skull with her fists.\n\nA strand of sticky rope shot through the clouds of mist, latching on to Claire's hand an instant before she dealt the next blow. It pulled her wrist back sharply, nearly hauling her off the woman's chest. Claire whirled around, screaming in rage as she clawed at the sticky substance. Another rope latched onto her free hand, jerking her sharply forward. She pitched headfirst onto the ground, still howling with fury.\n\n\"Damn you! I should have known better than to leave her unattended with you watching!\" Kerion's voice roared through the dark.\n\nThe mist screeched again, this time out of rage. Threads of silver lashed out, slicing at the webbing the held her wrists. They sliced through bit by bit, only to find that new strands would shootout of the dark and wrap tighter around her limbs. Gently but quickly, the strands of webbing dragged Claire forward, hauling her though the clouds of mist. She struggled fiercely, using her teeth to bit through one of her restraints. A final wisp of web covered her mouth, silencing her furious cries as she was pulled back.\n\n\"No!\" the mist shrieked. \"The girl belongs to me!\" Another tendril lashed out, slicing at the air in fury.\n\n\"The girl has been claimed already. It's too late for you to place your mark.\"\n\nKerion continued to drag Claire along the soft ground, pulling her farther back despite the relentless attacks from the mist. The strands of webbing held her tight, never breaking their hold on her even after she'd reached the enormous wall surrounding the marsh.\n\n\"Quickly, my children! Move swiftly but do not harm her. She is not of sound mind.\"\n\nSoft squeals of excitement startled Claire out of her struggles. Seconds later, the gentle tickle of dozens of tiny legs crawling on her skin sent her into a fresh burst of screams and thrashing. Kerion's children worked silently despite her resistance. Most of the tiny arachnids began to spin their own webbing, looping the soft strands of silk around her limbs to contain her. Others gently stroked her skin in a small effort to clam her. She still thrashed against them, but her struggles had become considerably less with the added stands of web.\n\nThe mist screeched again, sending threads of silver whipping out to impede her saviors. A few found their mark, slicing at the tiny spiders and splitting them open. But the mist struck out too late. Kerion and his brood had finished binding Claire with their webs. They hauled the small bundle up along the edge of the wall, pulling her over the railing and onto the hard stone floor.\n\nBelow the wall, the mist howled again. Tendrils of silver whirled about, reaching up over the ledge and whipping blindly for their prey. They found nothing. Kerion and his children retreated to the far side of the wall, well out of the reach of the mist.\n\nClaire still writhed against her bonds, glaring out of the small slits of webbing at the mass of spiders. They'd been kind enough to leave holes in their net for her to breathe, a move that allowed her to continue her rage-filled screams. Her memories had not returned yet, keeping her mind in eternal silence as her friends did their best to save her.\n\n\"I'll take her, Kerion.\" Tarrin's deeps voice echoed through her hollow mind. She was lifted into strong arms, pressed against a hard, warm body.\n\n\"Move quickly, Tarrin. She needs to be reunited with her owners. They can break this damned spell.\" Kerion's voice dropped low. \"The quicker she gets back, the better our chances of getting her back. Don't you dare think of taking her for yourself.\"\n\n\"I'll move as fast as I can.\" Tarrin spun of his heels and took off with Claire in his arms.\n\nShe watched through the holes in the webbing as Kerion and his children scampered up the walls of the fortress, jumping to avoid the relentless attacks of the mist as they scrambled backwards. The tiny spiders gave soft yelps of joy as she was carried back to her room. Kerion turned to give her one final look before he and his brood dispersed into the shadows. She glared at them with pale eyes, fury still burning deep within her heart.\n\nTarrin cradled her as he moved, dodging pillars of rock and any remaining threads of mist that followed. She writhed in his arms, still struggling to escape. Despite her mind remaining hollow and her soul shattered into pieces, Claire slowly began to relax. Step by step, Tarrin carried her farther away from the mist, its influence slowly waning with every shadow they passed through. By the time Tarrin had reached the main hall, Claire lay still in his arms, refusing to fight but still glaring up at him though the holes in the webbing.\n\nFinally, he reached the pools of shadows the lead to her room. Stepping through quickly, Tarrin made his way to the enormous table in the center of the room, depositing her gently on one of the chairs. Carefully, he used one of his sharp nails to split open her bindings, cutting through every restraint. His blood-red eyes never left hers, searching her expression for any hit of resistance as he released her.\n\nHe moved too quickly, tearing the webs away too anxiously. Her eyes narrowed an instant before she swiped a hand at his face. He dodged away, staring at her intensely. Taking a deep breath, Tarrin tore more of her restraints away and ducked from another haymaker.\n\n\"You got her back!\" Silthos shot up from the bed and raced over. His eyes narrowed as he stared at her. \"How is she?\"\n\n\"Quieter, but probably still a bit hostile. She put up a hell of a fight with Kerion.\" He cut through the last of her bindings, throwing an arm out to block Silthos from stepping closer. \"Her mind's still fucked up, so don't get too close.\"\n\n\"Damn it,\" Silthos growled through his teeth.\n\n\"She's been glaring at me the entire time I was carrying her back here.\" Tarrin stepped back and brushed his hands on the bedding, leaving behind streaks of black blood. \"That disgusting mist got me good.\"\n\n\"I owe you for this.\" Darrow's deep growl rumbled through her ears. She watched as he stepped forward and clapped a hand on his old friend's shoulder. \"You know I'm not one to give apologies or appreciation, but we'll consider this a special circumstance.\"\n\n\"Indeed. Apology accepted.\" Tarrin offered a sarcastic smile to Darrow. \"I hate to see the damned cloud get a hold on someone that doesn't belong there. Especially your girl.\" He gave Darrow a sinister wink. \"I mean, she's a beauty after all-\"\n\nDarrow nudged him in the shoulders. \"No.\"\n\nTarrin's smile fell, though he took the disappointment in stride. \"So...I get a reprieve form this, right?\"\n\n\"We'll see. It's up to the Counsil, but we're willing to throw in a few good words for you.\" Darrow's attention had turned to her, his dark eyes worried and heartbroken.\n\nSilthos had crouched down beside her, his twilight eyes staring into her won. She stared at him silently, her hands folded into her lap, her body completely still. Carefully, Silthos stretched out a hand and cupped her cheek in his warm palm. He stroked his thumb along her cheekbone, his lips twitching up in a tiny smile.\n\n\"She's not so hostile. I think if we use a gentle touch, she'll be more compliant.\"\n\n\"You sure?\" Darrow's brows raised a bit.\n\n\"Seems like it. The mist has wiped her mind of any thoughts of memories, so she's acting on instinct. The slower and gentler we are, the easier she'll be to work with.\" Silthos continued to caress her face, smiling at her as he did so.\n\nShe stared back silently, calmer but still hollow on the inside.\n\n\"So how do we break this?\" Silthos turned to look at Thaltos.\n\nThe old demon sat on the sat bed staring at the wall, his eyes cold and focused. The hold he'd previously cut for her -- the window she'd been dragged through -- had been completely sealed. The wall was smooth now; no trace of the hole had been left, lest the mist make another attempt at snatching her back.\n\n\"It will take a drastic measure to break her of this spell.\" Thaltos' voice was cold, emotionless. \"The mist gave Tarrin up easily because it didn't truly want Tarrin. Its target was Claire, so its hold will be much stronger on her.\"\n\n\"What do you mean by something drastic?\" Silthos stood, his eyes narrowing. \"We can't hurt her. She's done nothing!\"\n\nThaltos waved a pale hand. \"No, never. But we'll have to do something fairly unusual to shock her back to her normal self. The mist had to break her down before it could claim her. We need to break her back.\"\n\nSilthos sighed and returned to kneeling beside her. Cautiously, he reached out and stroked her thigh, running his nails teasingly along her tender skin. Claire turned her head to watch him stroke her, her breathing still shallow. Silthos smiled up at her, a mix of disappointment and relief in his eyes. He'd guessed correctly about a gentle touch. Though her expression remained empty and her mind hollow, she made no move against him as he teased her. That was a good sign. If she didn't resist every card they played, they still had a chance to bring her back.\n\n\"What do you have in mind, Thaltos?\" Darrow stepped forward and crouched down to peer at her. \"You know how tiny she is. She probably won't be able to take much more than we've already tried.\"\n\n\"Yes. But unfortunately, this circumstance may call for more than she's used to.\" Thaltos stood slowly, his enormous frame casting a shadow across all three beds. \"Tarrin, I must ask you to leave us. I do appreciate your help, we all do, but this is something that must be handled here and now.\"\n\nTarrin nodded. \"Don't worry, I get it. Where do you want me to go?\"\n\n\"Outside is fine. We'll need privacy until we've managed to bring Claire back.\"\n\nThe young demon's eyes widened. \"Fuck no! The guards are still on a manhunt for me. If I step outside, I'm dead.\"\n\nThaltos raised a hand to silence him. \"I've informed the Counsil of your actions here. The hunt for you has been called off, as have the orders for your execution. You may step out without fear of being killed off. The guards will notice you, but they're under strict orders not to touch you until the issue with Claire has been resolved.\"\n\nTarrin relaxed a bit. \"You talked to them?\"\n\n\"Believe me, the Counsil knows everything. The mist, Kerion, your help with Claire. They know enough to grant you a reprieve for your previous action.\" Thaltos turned to face Tarrin, his eyes still cold. \"Now I ask you again, please leave.\"\n\nSighing, Tarrin nodded and turned to leave. Darrow stood and walked over to his old friend, clapping his on the back and whispering incoherent words in his ear. Tarrin threw his head back and laughed loudly. The two demons, reunited and forgiven, exchanged goodbyes before Tarrin slipped through the pool of shadow that led to the hallway.",
        "\"You're sure they won't arrest him anyway?\" Silthos inquired. His gentle caress on her thigh never ceased.\n\n\"I'm positive. The Counsil informed me that he'll be released if they do attempt anything on him. He's free until we get Claire back. After that, he'll go to trial and receive his acquittal.\" Thaltos made his way towards the main bed, shoving the smaller side beds out of the way. \"Silthos, bring her here. We need to handle this quickly.\"\n\nSilthos nodded and stood up, towering over Claire. She stared up at him, her features still blank, her eyes still pale and hollow. Carefully, he slid one hand under her legs, his other hand cupping her back as he lifted her from the chair. He carried her over to the bed, stepping quickly to avoid any chance of her making a move against him.\n\n\"Set her down gently.\" Thaltos moved to pull back the sheets of the bed, tossing the heaps of fabric to the side.\n\nSlowly, Silthos lowered her onto the bed, rolling her over so she rested on her stomach. He took a seat beside her, running his clawed fingers along the length of her spine. She lay completely still, never requesting or resisting his touch.\n\n\"Darrow, we need you over here. If we're going to break her back to normal, all three of us need to be a part of this.\"\n\nThe young demon stared at the wall an instant longer before nodding. He turned and made his way to the bed, stopping at the end to stare down at her. She stared back at him with her vacant eyes. The lack of soul behind her expression, the loss of her warm smile, nearly moved him to tears. Darrow's eyes flicked away, his heart barely able to take in the sight of her.\n\n\"Darrow, you're underneath. I'll be in the back. Silthos, you move to her front.\" Thaltos began to make his way to the other side of the bed.\n\nSilthos continued to stare at her. \"You're sure about this?\"\n\nThaltos sighed. \"It's the only thing I can think of that will shock her system enough to bring her back. If this doesn't work, we'll have to go to the Counsil for help.\"\n\n\"You want me at her mouth?\" Silthos questioned.\n\n\"She owes you a blowjob, doesn't she?\" Thaltos now stood before him, peering down at his friend with apologetic eyes.\n\n\"Yes, but...this isn't exactly the way I wanted her to repay me.\" He stroked her spine over and over, his heart sinking farther with every caress of his fingers.\n\nThaltos rested a clawed hand on his shoulder. \"If she breaks out of this, I'll think she'll be more than happy to pay you back exactly how you'd want her to.\"\n\nSilthos nodded and twisted his body around, sliding off the opposite side of the bed. He stood and moved in front of her, staring down at her with pained eyes. Claire stared through him, her pale eyes unable to make contact with his own.\n\nDarrow moved as well, lying down on the bed beside her. Tenderly, he and Thaltos lifted her lithe frame and moved her so she straddled him. With one quick, fluid motion, Darrow pressed her hips down, impaling her on his thick cock. She let out a soft gasp, but nothing more.\n\nDarrow scowled. \"It's not as much fun when she's not here.\"\n\n\"I know,\" Thaltos muttered. \"Hopefully this will bring her back.\"\n\nDarrow pulled her forward, inching her body closer to his own. She went willingly, never giving an ounce of resistance to their gentle touches. Thaltos stepped forward, his warm hands cupping the soft flesh of her ass. He spread them wide, revealing the tight hole hidden between. One finger moved away for an instant, returning to slick her flesh with a silky fluid. He moved quickly, pressing the head of his cock against her hole just long enough to take away the shock. Shifting his hips forward, Thaltos slipped inside her tiny hole.\n\nClaire whipped her head around to glare at him, baring her teeth and snarling. She didn't mind their gentleness or soft words. She did mind the suddenness of his exploration, the burning that seared up her spine. Though still mindless, her body was able to react with all the reflexive instinct of a cornered animal.\n\nSilthos' hand stroked her back again, quieting her angry growls. His palm cupped her cheek as he turned her head towards him. He stared down at her with apologetic eyes, stroking the curve of her lip with his thumb.\n\n\"I'm sorry,\" he whispered. \"This isn't what I wanted for you. Not like this.\" He slipped his thumb between her lips, coaxing her mouth open. \"This should have been something we shared with you.\"\n\nHe stepped forward, the tip of his cock pressing against her soft lips. He inched forward, the thick length of his penis slipping slowly past her lips. Her jaw went slack, her body now more malleable from his touch. He slid deeper, farther and farther into her mouth until he pressed against the back of her throat. He eased back a bit, giving her room to breathe.\n\n\"Warm as always,\" he smiled. \"Damn.\"\n\n\"Are we ready then?\" Thaltos inquired.\n\nBoth Darrow and Silthos nodded silently. Without needing direction, all three began a slow, rhythmic dance with her body. Each moved in time with the other, never too fast or too slow. Instead, an unspoken beat had been set between them; a silent cadence that set the stage for what they hoped would be her revival.\n\nClaire never moved as they teased her. She remained completely still, her body only shifting to the time of her lover's movements. Her eyes remained hollow, her mind thoughtless. The empty husk that once held a young, vibrant soul simply waited patiently as three alien demons ravaged her form.\n\n\"Anything?\" Darrow gasped.\n\nSilthos tilted her chin a fraction of an inch, searching her eyes for any sign of life. He shook his head, disappointment settling in his heart. \"Nothing.\"\n\n\"Damn it.\" Darrow growled again. \"Come on, Claire.\"\n\nA spark raced up her spine, brought forth by a particularly good stroke by Darrow's cock. It rocketed up through the numerous nerve endings, bursting forth into the empty hole of her mind. She groaned instinctively, bucking against him and arching her back. This was unusual, something she hadn't experienced with the mist.\n\n\"Well, that's something!\" Silthos called out.\n\nA shift occurred inside her; tiny, like the speck of sand in an oyster shell that is the bare beginnings of a luminous pearl. A flash of memory ripped through her hollow mind, one of her very first day in this place when Thaltos and the others first introduced themselves. She shook her head a bit, trying to clear her head of the thick haze now beginning to settle there. Another scene flashed by: Darrow sitting with her on the bed as they devoured breakfast. She squeezed her eyes shut, a desperate attempt to block out those damned memories from her mind.\n\nHer lovers continued their assault, never once faltering in their efforts to save her. More sparks of heat raced through her veins, each bringing a new memory of them three men she was fused to. Her first blowjob, the tour of her new home, her trying to convince Silthos she was ready for anal when she really wasn't...each new memory carried fresh emotions that rocked her core and cracked her soul.\n\nHer eyes, once blinded by the mist to a sickly pale white, slowly began to regains their color. Tears now spilled from her cheeks, the soft grey of her eyes starting the show through the veil of confusion and despair. A fresh batch of memories -- of the church, Darrow's ravaging and the loss of her virginity -- finally shattered any vestiges of corruption that remained in her soul.\n\nHer breathing quickened, her soft gasps and cries muffled by Silthos' cock. Tears fell from her cheeks, the tiny cool drops falling onto the scarlet skin of Darrow's chest.\n\nHe looked up at her, shock and hope in his eyes. \"Claire?\"\n\nShe closed her eyes, a useless attempt to stop the flow of emotion rolling out of her in waves.\n\n\"Silthos! Stop!\" Darrow commanded.\n\nWith one smooth motion, Silthos stepped away, freeing her mouth of his body. The pain and anger and despair burst forth, flowing out of her as she wept in her own personal misery. She collapsed onto Darrow's chest, wrapping her arms tightly around his neck as she screaming into his skin. Thick arms circled her back, holding her tight as she cried.\n\n\"Thank god,\" Thaltos whispered. He stepped away as well, freeing her body from yet another restricting bond.\n\n\"Claire.\" Darrow's tail reached up to wrap around her waist. \"You're alright. You're safe here. I've got you.\"\n\n\"I'm sorry,\" she whispered between breathless gasps. \"I'm...sorry.\"\n\n\"No, no. Don't be,\" he whispered. \"None of this is your fault.\"<br> \"I let go.\" Her voice was soft, barely audible through her breathless gasps.\n\nHe sighed, stroking her back with clawed fingers. \"To save us. That's why you let go, isn't it? You knew it would pull us in, too.\"\n\nShe nodded and buried her face into the warm flesh of his shoulder. It felt good to be back in his arms, safe and protected from the world outside. All the pain and fear she'd kept locked inside was released now. She could finally relax, guarded by her three lovers and shielded by their adoration for her.\n\nSlowly, her breathing returned to normal. She pressed her cheek to Darrow's shoulder, finding comfort in his hot skin. Her fingertips dug into his thick muscles, anchoring her slender frame to him. She didn't want to let go, not after the hell she'd just been through. All Claire wanted was to stay here in his arms, able to cry out her anguish in peace.\n\n\"Are you alright now?\" Darrow whispered into her hair.\n\nShaking, she nodded and pulled away slightly, enough to slide down and rest her head against his chest. She closed her eyes and inhaled the scent of smoke, sweat and warm food. So familiar, so comforting. Like she was back home again. Wiping away the last of her tears, Clair settled into the bedding, feeling fare than ever yet still incredibly exposed.\n\n\"Hey, there.\" Silthos sat down on the bed, running his fingers along her back. \"Feel better?\"\n\nShe nodded and inched closer to him. She winced slightly as a spark of pain seared the tender flesh of her ass.\n\n\"What? What's wrong?\" He stared at her worriedly.\n\nRegaining herself, Claire managed a small giggle. \"Thaltos, you're too big.\"\n\nThe old demon barked out a laugh and found a seat beside her. \"I apologize. We needed something to shock you back into normalcy. It was the only thing I could think of.\"\n\nShe smiled up at him, reaching out a hand toward him. He grasped it lightly, holding her palm to his warm chest. Beneath the leathery skin, she could feel a strong, pounding heartbeat resounding through her fingers. She grinned, happy to have evidence that demons do, in fact, have hearts.\n\n\"Good to have you back,\" he smiled.\n\n\"It's good to be back.\" She nuzzled Darrow's chest again.\n\n\"Now what?\" Silthos asked. \"We have her back and that's fantastic. But we still have that damned cloud to deal with.\"\n\n\"That can wait. We'll inform the Counsil and Lucifer once Claire's settled in again.\" Thaltos rubbed the back of her hand with his thumb. \"I think someone's still a bit shaky.\"\n\nShe shook her head and gently pulled away, pushing herself up to sit on the bed. She sat on the bed staring at the three of them, her eyes eventually finding Silthos. He watched her carefully, still searching for any residual trace of hostility or reluctance. She leaned forward and kissed his lips, proving their plan had worked completely. She kissed him again, pressing harder, trying to coax a bit of playfulness out of his stunned mind.\n\nFinally, he returned her efforts and pressed his mouth firmly against her own. Happy to have enticed him back into his old self, she pulled away and smiled warmly at him.\n\n\"I think...I still owe someone a blowjob?\" She bit her lip innocently toad effect.\n\nSilthos stared at her, dumbstruck. \"Claire, you've just come out of that disgusting mist. We can wait a while before that has to happen.\"\n\nShe shook her head. \"I want to. I think I kind of need to.\" She scooted closer. \"The closer I am to you, the better I feel. The more I do, the more relaxed I get.\"\n\nHis expression softened. \"Are you sure?\"<br> She nodded, hoping silently that he would allow her the chance to repay him. What she'd said was true: after surviving her hellish ordeal, her soul needed some way to start the mending process. Immediately, it had focused on her lovers, symbols of security love and comfort. The closer she was to the three of them, the safer she felt.\n\nShe also felt the need to repay him for more than just her teasing him. All three of them had put up with the madness that had centered on her, nearly sacrificed their lives for her, and eventually losing her. They recovered quickly, regrouping and enlisting some unusual help to chase her down and bring her back. She had to repay them for all of the love they'd given her and the sacrifices they'd made. She'd start with Silthos first; she would think up ways to reimburse Thaltos and Darrow later.\n\nShe watched a flood of emotions flicker through Silthos' eyes: pain, agony, confusion, guilt. He didn't have any reason to feel any of them. None of this was the fault of any of them. It was the fault of an evil, demented cloud of mist that had a mind of its own and wanted control over everything. Guilt for what had happened should be the last emotion he should feel.\n\nSilthos sighed quietly and smiled at her. \"If it will make you feel better, then go ahead.\"\n\nClaire smiled, her mind and her soul relaxing a bit. She crawled forward on the bed and rested her head on his shoulder. The feel of his skin of her cheek made another rush of security and happiness flow through her veins. His clawed fingers raked gently down her back, drawing out a slight shiver.\n\nShe pressed her hands against his chest and pushed against him, forcing him back onto the bed. He went willingly, relieved to have his old girl back. She reached back, her fingers gliding down the taught muscles of his abdomen. They teased the skin of his cock, making him twitch and moan softly.\n\n\"You're really stressed,\" she whispered. \"I'm the one who should be freaked out, not you.\"\n\nHe grunted as her fingers encircled him. \"I'm only stressed because I thought we'd lost you.\"\n\nShe leaned forward and kissed him again. \"But you have me back now, so you can relax.\"\n\nHe groaned as she slowly began to stroke him. Her hand moved up and down in an agonizing rhythm, one designed to calm him down and let his mind wander elsewhere. His body settled into the warm bed, a signal to her that she could start soon. Though he was thoroughly relaxed, she continued to stroke him, trying to get him aroused enough that she could work. Having his body limp wasn't going to help her reimburse him.\n\nSoon enough, his body was more than ready for her attention. She looked down towards his feet and smiled. Thick as a tree branch and jet black in color, is cock stood up proudly through her fingers, begging for more attention.\n\nKissing his lips one last time, Claire slowly inched down his body, dolling out tender kisses on his flesh as she descended. His body twitched in anticipation with every kiss, making her feel steadier and more in control. She was comfortable here, something she needed to feel. Doing this would solidify her strength once again, rendering her fears and worries useless.\n\nFinally, after what must have been several agonizing minutes of teasing, she reached Silthos' most prized possession. She stared at it for a moment, gazing in wonder at his glorious asset. She flicked the taught skin of is cock with her tongue, giggling when it twitched in response. Pausing, she decided to skip formalities. He'd waited too long and fought too hard for her to draw this out any longer. Taking a deep breath, she lowered her head and slipped her lips over the head of his shaft.\n\nHis hips bucked instinctively, but Claire managed to stay put. Once he'd settled down she began to move. Taking it slow at first, she swirled her tongued around the head of his cock, trying to ease him into a more pliable state. If she went too fast too soon, she might break his state of relaxation and ruin the experience. She dipped her head an inch, forcing a harsh gasp from his throat.\n\nMoving inch by inch, Claire slowly managed to force his entire length down her throat. She eased back a bit until she was comfortable, making sure he was still in place. Her eyes flicked up to him, silently asking if he was ready. He stared back, his eyes holding a mixture of relief and excitement. She smiled and began to move, slowly at first to ease him into the motion.\n\nComfortable now, she quickened her pace, trying to coax another sound of surrender out of him. It worked. His nails dug into the soft bedding, desperate to hold onto some tiny aspect of control as she teased him. But Claire would have none of his resistance and moved fasted to break him down.\n\nHe gave in easily, groaning loudly as his hands gently twisted into her hair. His grip was soft yet steady, enough to hold her close while still giving her room to move. She took advantage of his willingness, moving slower but with more force on every downward stroke. His grip tightened for an instant, a result of her teasing him so expertly. He regained control and relaxed his hands again, letting her continue her work.\n\nClaire moved quickly now, abandoning her plan to take him slow. She could feel it in his twitching muscles that he needed release. Taking another deep breath, she pulled back until just the head of his cock remained in her mouth. She alternated between twirling her tongue around and sucking hard on the tip, driving him insane with her skill.\n\nOnly my second blowjob and he's acting like I'm a professional. I should be in porn.\n\nHe groaned again, begging her to continue even though he was slowly losing his mind. She acquiesced, continuing to spin her tongue in circles as he writhed beneath her.\n\nHe came faster than she'd expected. His hands forced her down onto his cock as his body jerked. Warm streams of his seed spilled into her mouth, flooding her senses with the taste of honey mixed with cinnamon and smoke. She swallowed quickly, worried that she might be overwhelmed by the sheer volume of his release. Thankfully, his climax didn't last an absurdly long time. A few more swallows and she pulled away, smiling up at him with victorious glee.\n\n\"You okay?\" She traced a line of muscle on his thigh with one finger.\n\nSilthos inhaled deeply, trying to catch his breath. Gathering himself, he managed a harsh laugh. \"I've said it before. You're fucking fantastic at that.\"\n\nShe beamed with pride. \"You're welcome.\"\n\nSilthos managed to push himself up and sat on the bed, still breathing heavily. Locking eyes with her, he reached out and cupped her face in his hands, stroking her cheek with his thumb. \"Are you okay?\"\n\nShe nodded. \"Much better.\"\n\nHe smiled. \"Good.\"\n\nShe grinned back, relieved to seem him finally at ease. A good thing, since it meant she could now turn her attention to Thaltos and Darrow. Those two had fought just as hard and hurt just as much as Silthos had. Claire needed to repay them as well; she just had to find a way to do it.\n\n\"Well, now that one of them is relaxed, I think we can start working on the other.\" Thaltos' deep voice shattered her attention.\n\nStrong hands gripped her hips, pulling her backwards. She cried out in surprise, not frightened but startled enough to try to scramble free. Her resistance was useless, however, and she was dragged back to the edge of the bed. Her legs dangled over the edge, her feet barely an inch from the floor. Those thick hands lifted her hips, raising her off the bed until her ass was high and her chest remained pressed against the sheets.\n\n\"I must say, Claire. This is a wonderful position for you.\" One of Thaltos' fingers scraped lightly down her spine. \"It's quite a view.\"",
        "She giggled and relaxed into the bed. She twitched as his finger moved farther south, moaning softly when it traced the delicate lips of her pussy. He sank his finger in, spinning it around and pulsing it back and forth, trying to get a rise out of her. It worked well. Claire let out a variety of soft moans and whimpers, bucking her hips slightly in an effort to move him faster. He obliged willingly, adding a second finger and driving them faster until she squirmed under his touch.\n\nToying with her, Thaltos decided to add another playful feature to their game. His thumb pressed lightly against her clit, sending a fresh burst of fire through her veins. It spun in slow, gentle circles, making her head spin and her legs twitch. She heard his deep laughter, a sound that made a shiver race up her spine and goosebumps rise on her flesh.\n\nHe pulled away too soon, making her whimper for his touch. Her body was on fire now, burning and starving from his teasing. She groaned his name, begging him for more yet too blinded by lust to force the words out.\n\n\"I know, my dear. I know.\" He planted his feet on the floor, holding himself back just a moment longer. \"Trust me, I have no intention of leaving you bereft of your satisfaction.\"\n\nThe head of his cock pressed against her sex, making her shiver. She tried to lean back, attempting to force him in and find relief. Instead, Thaltos moved with her, leaning back when she did to keep his distance.\n\n\"Not yet,\" he purred. \"I want you to make me a promise.\"\n\n\"Anything,\" she gasped.\n\n\"First, I want you to promise me that you'll be more vocal.\" He leaned forward and placed his hands on the bed, dipping his head so his lips brushed her ear. \"I want to hears your screams, girl. Show me how wild you can get.\"\n\nShe nodded vigorously. \"I swear.\"\n\nHe kissed her neck. \"Second,\" his hand reached up to cup her breast. \"What happened with the mist...you never let us go again.\"\n\nHis question caught her off guard, rendering her silent for an instant. Thaltos squeezed her breast, pressing his hips forward an inch. The head of his cock split the lips of her pussy and pressed against her tight hole, making her squirm again.\n\n\"Promise me,\" he pressed his cheek to hers.\n\n\"I promise,\" she whispered.\n\n\"Good girl.\" He kissed her neck again and bucked his hips forward.\n\nHis cock speared into her sex, cleaving her wide open and sinking deep inside her. Claire moaned, her body finally relaxing against his. This was where she felt most comfortable, most loved. She could let go of control here and allow herself to be ravaged in the most wonderful way by people who knew exactly what they were doing. She could rest here and find herself again.\n\nThaltos wasted no time with her. He moved his hips quickly, driving his cock deep inside in a beautiful pounding rhythm that made her head spin. Attempting to keep her promise, Claire let out a low cry for more. She begged him to continue, shocked yet reveling in her own openness. This was easy, something she could do anytime she felt like letting go of control. Hand her body over and she'd be well taken care of. Yes, that was something she could do.\n\nThaltos obliged to her request all too easily, rocking his hips faster and with more force than usual. She let out a yelp and gripped the sheets tightly. The sparks of fire now plundered her body mercilessly, roaring through her veins and searing her nerves to dust.\n\n\"Tell me, Claire,\" he bucked hard against her. \"Tell me what you want.\"\n\nShe gasped, breathless from his delicious play. \"More. I want more. Please.\"\n\n\"More of what? Tell me exactly what you want.\"\n\nClaire groaned into the soft bedding. \"Harder. Please, harder.\"\n\nBooming laughter echoed in her ears. \"As you wish.\"\n\nHis thrusts turned rougher, more animalistic. She cried out, digging her nails into the sheets, tearing small hole in the fabric. She called his name, bucking her hips against him in an effort to drive him deeper.\n\n\"Oh, oooh, yes! Don't stop! That's perfect!\"\n\nHer cries spurred him on. The faster he moved, the deeper he went, the more her body began to loosen its grip on her mind. Slowly, she began to settle into the mattress, allowing Thaltos have his way with her while she enjoyed the spoils of his efforts. She simply reacted now, her mind having lost any ability to process a thought or idea. Not that Claire minded. Her body rejoiced in the feeling of being ravaged without having to be involved. She buried her face into the bed, letting her litany of cries give him reason to continue.\n\nHer climax came quickly, a sweet burning that seared her skin and reduced her bones to ash. Her pussy pulsed around him, exaggerating his size and holding him tight. Claire managed to raise her head an inch, enough to inhale sharply before her cry escaped. She screamed out her pleasure, letting the world know just how good he could work her over. Collapsing into the bed, her fingers twitched as the pulses of ecstasy slowly dissipated from her veins.\n\nThaltos continued to slam his hips against her, seeking his own release after she had claimed hers. She didn't mind; it was only fair that he was able to have an orgasm, too. Besides, the motion of his body against her stoked the small flame her climax had faded to. Not enough to set her off again, but just enough to keep her in the game.\n\nHe moved faster now, ramming his body against her own. His rhythm was brutal, nearly painful, something she was unused to with the normally unassuming Thaltos. This was different; something in him had shifted, bringing out the darker side of her lover. She could hear his harsh growls, feel his hot breath on her back. Every so often, she could catch him whispering a word or two: dark, ancient curses she didn't dare repeat. Claire lay there quietly, wincing occasionally from his vicious pounding.\n\nHis climax, while expected, caught her by surprise. This one was louder, stronger than the others. His thrusts had more power, as did his roar. His body bucked hard against hers, fingers digging painfully into the soft flesh at her hips. She winced at the sting, knowing that none of it was intentional but unavoidable nonetheless. He roared again, his seed pouring into her. His body jerked with each fresh spurt, driving him deeper into her despite his powerful finish.\n\nPanting, Thaltos pulled away from her, stumbling back and landing on the smaller bed behind him. Claire collapsed onto the bed, her body exhausted from being ravaged so thoroughly. Using a monumental amount of effort, she pushed her body up an inch and rolled to one side, burying her head in a heap of blankets. She jumped when Silthos' fingers caressed her back, though she settled almost immediately into his touch.\n\n\"Are you alright, Thaltos?\" Darrow's voice pierced through the silence. \"I've never seen you that enthusiastic.\"\n\nThaltos inhaled a few long breaths before he could answer. \"Fine. To be honest, I don't remember ever being like that, either.\"\n\n\"Claire?\" Silthos' deep voice coaxed her back into reality.\n\n\"I'm okay,\" she whispered.\n\nShe was, honesty, just a bit taken aback. Thaltos was usually the most reserved and controlled of the group. Having him snap like that and practically crush her made a knot twist in her gut. Panic set in quickly. Surely the mist hadn't...no, that was impossible. They were completely sealed off from that despicable cloud. There was no way it could have reached him.\n\nAnother hand gently rested on her shoulder. She looked up to see Thaltos staring down at her, his slate eyes nervous and sorrowful.\n\n\"Forgive me,\" Thaltos pleaded, his voice dark and apologetic. \"I didn't mean to lose myself like that. You're not hurt, are you?\"\n\nShe smiled softly. \"I'm fine. You scared me, though.\" She reached up to cup his pale cheek in her hand. \"I was worried that the mist had...\"\n\nHe let out a soft laugh. \"No, no. What happened just no was entirely my fault. A temporary lapse in my control, nothing more.\" He rolled his head to the side, pressing his face into her hand and kissing her fingers. \"Besides, it would take far more than the twisted desired of an evil fog to make me harm you.\"\n\nShe smiled back at him, relieved to know his forcefulness was the result of his own self and not an outside influence. She pulled her hand away, stretching her limbs enough to crack her bones back into place.\n\n\"What now? Darrow?\" she asked dreamily. All this sex had started to make her sleepy.\n\nThaltos laughed again. \"No, no, no. I think you're done for the night.\"\n\nShe frowned. \"Thaltos, I'm fine.\"\n\nHe smirked. \"I believe not, miss Harding. Your day has been quite an adventure. The last thing you need is to exhaust yourself even more.\"\n\nShe scowled. Her body, her mind, her very soul wanted more. And nothing -- not a loving demon or an evil mist -- would stand in the way of what her body wanted. Pushing herself up, she sat back on the bed and folded her arms across her chest, putting as much 'spoiled brat' emotion into her face as she could.\n\n\"You do realize that the decision over when my body is done or not is mine, correct?\" She tried her hardest to sound as snotty and spoiled as she could. Granted, throwing a fit to get her way wasn't her strongest feature, but she gave it her best shot.\n\nDarrow stepped up, sliding beside Thaltos to back up his friend. \"Yes, that is more than clear to us. But do you realize that we can vote down your decision if we feel you've had enough?\"\n\nHer face fell, disappointment sweeping over her. Her faux-tantrum hadn't budged them an inch.\n\n\"I agree with Thaltos. You've had enough excitement for tonight.\" Darrow smiled sweetly yet mockingly at her.\n\nShe dropped her head, frustrated. In a last-ditch effort, she looked over at Silthos, staring into his twilight eyes. He stared back, his expression of patient expectation never faltering.\n\n\"You agree with them, don't you?\" Her voice was soft, fragile.\n\nHe nodded, reaching out his hand to stroke her shoulder. \"We've nearly lost you, gained you back and managed to get two good rounds of sex in all in one night. You're done, Claire. Don't take it personally. We just don't want to see you wear yourself out after such a stressful day.\"\n\nShe sighed and nodded begrudgingly. They were right. She'd had one hell of a day being corrupted by a mist, then brought back and ravaged. Though she didn't really feel it, Claire knew her body was completely drained. Even if she wanted to she might no be able to handle Darrow tonight. It would have to wait until tomorrow when her body had rested and her strength had returned.\n\n\"Fine, you win. I'll sleep.\" She sighed again, defeated.\n\nSilthos leaned over and kissed the side of her neck. \"Good girl. I'm sure Darrow has no issue promising to work you over in the morning.\" His eyes slid to the young demon, expectant.\n\nDarrow grinned back. \"Believe me, the pleasure will be all mine.\"\n\nShe rolled her eyes and fell back into the bed, splaying her limbs out to take up as much room as possible. A pang of sudden soreness, followed by an actual struggle to breathe, rammed into her. Now she felt her body's fatigue and it hurt like nothing she'd ever felt before. Her skin, muscles, even her bones ached, begging her to take the rest of the night off so they could heal.\n\nOkay! Fine, I'll rest for now. But those three owe me some serious personal time in the morning.\n\nShe rolled over, groaning as she did so, and settled into bed. Her head sank into the soft pillow, surrounded by fluffy softness. Almost instantly, her body relaxed completely, sinking into the sheets and refusing to be moved. She sighed again, reluctantly agreeing to her body's demands.\n\n\"Darrow?\" Her voice was muffled by the softness of the pillow. \"Would you sleep with me tonight?\"\n\nDeep laughter echoed in her ears. \"Of course.\"\n\nThe bed dipped as he slipped in next to her. Thick arms looped around her waist, pulling her close and holding her tight. She nestled in against him, surrounded by warm flesh and hot breath. He pulled the blankets over their bodies, his own form relaxing against hers as sleep slowly took over his mind.\n\nSilthos and Thaltos both kissed her goodnight before resigning to each of their beds. Thaltos took the one in front of her, smiling as he slipped beneath his own sheets. His eyes apologized one last time. She silenced his apology with a smile of her own. Her eyes narrowed at him, questioning.\n\nWhat about Tarrin? she asked silently.\n\nHe'll be fine. The guards won't arrest him until his trial is set. We'll deal with him in the morning. He smiled one last time before closing his eyes.\n\nShe nodded and closed her own eyes, drifting easily into sleep. Her dreams were quiet and unexciting, no cryptic warnings or psychic predictions. For the first time, Claire's life was slightly normal. She liked it, hoped it would stay that way. Wanted to know that she was safe and loved and cared for and had nothing to worry about. For now, in the safe confines of her dreams, she was.\n\nUnfortunately, knowing her luck, things were bound to go from good to shit within milliseconds.\n\n*\n\nSee? Everything worked out okay, didn't it? I couldn't kill of Claire or do her any real harm. That would break your hearts. I would never do that to you. I care too much.\n\nUp next...'Boneshaker'"
    ],
    "authorname": "Kindasortacrazy",
    "tags": [
        "demon",
        "oral"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/demonbreaker"
}