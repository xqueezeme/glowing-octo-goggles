{
    "title": "Big Flipping Deal Ch. 05",
    "pages": [
        "[The story so far: Nick and Lindsey are renovating a house together thanks to the unusual provisions of Lindsey's aunt's will. Nick has grown progressively more attracted to Lindsey, despite the fact that he's straight and she's a pre-op MTF transsexual. Lindsey has been trying to keep Nick at arm's length. But then Lindsey's bigoted father shows up at the house, and when Nick tries to defend her against the man's insults and verbal abuse, he gets punched hard enough that Lindsey takes him to the ER to be checked for a concussion. After that, Lindsey's barriers begin to come down ...] \n\nThursday at work, my cousin Sam called. I saw it was him, and I knew why he was calling, and I thought about letting it go to voicemail, but decided to face the music instead of being an asshole. \n\n\"Yeah, Sam, hi,\" I said, hoping my tired tone would give him the hint. \n\n\"So are you coming or what, Nick?\" His tone said he was tired of me trying to give him hints. \n\n\"Sam,\" I complained with a sigh, \"my car's still out of commission. Plus, I haven't gotten a present.\" \n\n\"Dude.\" He only said the one word, but I could hear the other three in his voice: don't be a dick. Then he gave his own sigh and tried another tack. \"Okay, look, let's work it this way, then. Come to the bachelor party, be our designated driver, you can drive Pete's car home and bring it to the wedding Saturday. I'm telling you, you don't want to miss this wedding. Seven bridesmaids, all single, all fucking hot except Denise, and she's our cousin so you wouldn't want her to be hot anyway. You need to get off the shelf and back in the action.\" \n\nI really didn't want to go to Sam's sister's wedding, and I even less wanted to go to her fianc\u00e9 Pete's bachelor party. So I gave the first excuse that popped into my mind. \"Sam, I don't need to be hitting on bridesmaids. There's kind of someone I'm already interested in.\" \n\nWhy the hell did I say that? \n\n\"Even better! Bring her Saturday and maybe she'll catch the bouquet. She catches the bouquet, you're gonna score for sure.\" \n\nOh, fuck. I literally could not even respond. \n\nThen Sam pulled out the big guns. \"Dude, Aunt Kim told my mom she's making the drive from Houston. You really want Kim to go back home afterwards and tell your mom you skipped? Because you know she will. It'll be the first thing she says when they see each other at church.\" \n\nMy fate was sealed. I told him I'd go and asked when he'd pick me up for the bachelor party. \n\n\"That's the spirit. Seven o'clock.\" And before I could agree and hang up, he added, \"And bring this chick you're seeing to the wedding. Seriously, that bouquet is an aphrodisiac.\" \n\n* * * \n\nThat night: painting the front hall and living room. Right at the start, I told Lindsey I'd only be able to work until 6:30 Friday because of the bachelor party, and only until 4:00 on Saturday because of the wedding. She was totally cool with it. \n\nAnd right at the end, when we'd sealed up all the paint cans and were about to head out, my mouth opened itself and asked her about the wedding. \n\n\"Hey, listen, do you want to go on Saturday? The bride's parents are loaded. It'll be open bar and a hell of a spread at the reception.\" \n\nHer face made a start on two or three different expressions, settled on one I'd call here-comes-the-sympathetic-apology - and then stopped itself when her eyes met mine. They rested there, looking into me with their perfect, penetrating blueness, and then her mouth kinked to one side and she said, \"Sure. Why not.\" \n\nWhen I got to my front door, I was still blinking, and I didn't even remember walking home from Mrs. P's place. \n\n* * * \n\nSaturday we tore out the front hall and living room carpet, spent several hours getting padding and tack strips up, then put down the laminate flooring. I installed the floor in the hallway while Lindsey did the front room, so we wouldn't be in each other's way as we clicked the interlocking flats into place. Over the half-wall that divided the two spaces, I gave a brief description of the bachelor party, which was really more of a pub crawl with stops at some strip joints. It had been a pretty boring night for me as everybody else got steadily more plastered and I drank soda. \n\n\"Well, at least you got to see some boobs at the strip joints, right?\" She sounded distracted as she said it ... pretty much how she'd sounded ever since we got there that morning. \n\nProbably trying to figure out a way to back out of going, I thought. Aloud, I just said I'd never really been into that sort of thing. \n\n\"Strip joints, I mean,\" I clarified. \"I'm generally into seeing boobs, just under more natural circumstances.\" \n\nOh, great. Way to remind her her boobs aren't natural. \n\nBy two we'd gotten the flooring done and split up to get ready for the wedding. If she'd been working up the courage to cancel, she didn't manage it. Instead, she just said she'd see me in a couple of hours. \n\nPlenty of time for her to back out by phone. \n\nBut as of 5:00, no last-minute cancelation call had arrived, and after parking Pete's car at the Reunion hotel where he and my cousin Sandy would be spending their wedding night, I made my way through the underground connecting tunnel to Union Station, the venue for both the wedding and the reception. Up on the second floor, I signed the guestbook and then loitered outside the hall in my blazer, slacks, and tie - a collection of navy and tan that made me feel like the poor relation I was as Sandy's more affluent family and friends arrived. \n\nAnd then there she was, coming up the stairs, and my mind had lots of other things to do besides being self-conscious. \n\n\"Hey,\" she said with a slight smile and up-tilt of her chin. She had on a pale green satin evening gown that went asymmetrically over the right shoulder and gathered in a subtle flower design at the left side of her waist, falling in elegant curtains that hinted at the amazing legs beneath them with every step she took. \"You clean up pretty good, Nick.\" \n\nUndercutting the compliment a little, she reached out and straightened my tie as she got close. I swallowed. \n\n\"I'm glad you came,\" I said. \n\n\"Sure.\" Her eyes swept across my face and landed on the left side of it, where I still had the bruise from her dad hitting me. \"Only you look like you got beat up at the bachelor party. Come on, let's fix that.\" \n\nLooking around, she led me to a nook down the corridor where we could step into the shadow of a high column. There, she fished a little compact out of her handbag and quickly patted some foundation around my eye. \n\n\"Not great,\" she said, examining her work when she'd finished. \"But it'll do unless somebody's looking really close.\" \n\nWhich they won't be doing as long as I'm standing next to you, I thought. Aloud, I just said, \"Thanks.\" \n\nWe made our way into the hall, a huge, vaulted space that had once been the waiting area for the train station. The usher led us to the bride's side, where we sat midway back as the place filled up. \n\n\"You look amazing, by the way,\" I told her. \n\nShe laughed. \"I'd better. This fucking dress cost me enough.\" \n\nShe smelled really good too - something faint and sweet and floral mixed in with the scent of fresh-washed hair. But I didn't say anything about that. \n\n\"You didn't buy a new dress just for this, did you?\" \n\nThe question brought a frank expression from her. \"Do I look like the kind of girl who passes up an excuse to go dress-shopping?\" Without giving me a chance to answer, and with her eyes wandering the venue and the guests, she went on, \"So tell me about this cousin of yours who's getting hitched.\" \n\nI gave her a bit of a rundown on Sandy and how I was really closer to her brother - Sam being a year older than me and Sandy a few years younger. The conversation passed the time until things started happening up at the wedding arch and the whole hall quieted down. \n\nWeddings give me mixed feelings. \n\nI can get pretty sappy about the idea of romance and true love. And being in a room with so many women dressed to celebrate those ideas, to commemorate a supposed example of them - it usually fills me up with a combination of hope, anticipation that something similar could happen to me, and envy of the bride and groom and of the husbands and dates of every attractive female in the room. Plus, there's the music. The bridal march almost always really gets to me. \n\nBut today, all those yearnings and jealousies and joys slunk quietly into the background, because my brain couldn't escape the fact that I was sitting next to the most beautiful woman in the entire room and I didn't even know if I should technically be thinking of her as a woman at all. \n\nAt least, I didn't know until Pete and Sandy said their I do's and I heard Lindsey sniff, just once, and looked and saw a tiny well of tears in the corner of her eye. \n\nGod, I am so fucked, I thought as I turned back to watch the happy couple receive the minister's go-ahead to kiss. My own eyes did their best to turn on the waterworks as the celebratory fanfare struck up and Pete and Sandy made their beaming, ecstatic way down the aisle past us. Thankfully I got it turned back off by the time the wedding party finished exiting and the rest of us had to vacate our seats so they could rearrange the hall for the reception. \n\nAt this point we had a couple hundred people stampeding for the open bar that Sandy's dad announced when the wedding party had gone. I asked Lindsey if she wanted anything. \n\n\"Yeah, I could go for a White Russian. But first I have to hit the ladies room.\" \n\nSo I headed for the bar line and she made her way toward the hall exit. On my way to the bar, I had two different near-misses with other guests because my head was turned trying to watch Lindsey weave through the crowds. Then I got in line, and it became a little safer to spare a glance away from the people in front of me, though it turned out Lindsey had almost made it to the far door. I don't know why I felt so compelled to grab every glimpse I could of her, but I did, and I felt disappointed that she was almost out of sight. \n\nLuckily, though, my cousin Sam bumped into her and stopped her to chat. That gave me several steps up in line to observe her hair, the way she stood, the way that pale green dress flowed down her form, off one shoulder, delicate and splendid. Then a cluster of other wedding guests walked between us, breaking my line of sight. \n\nThe line moved pretty briskly, all things considered. They had several bartenders behind the counter, and clearly good ones. Still, it was a lot of people to serve, and my wait crept on for a couple more minutes before someone gave my shoulder a squeeze from behind. \n\nHoly shit, was that the fastest women's room line in the universe, or did she go to the guys'? But when I turned, it was Sam, not Lindsey. \n\n\"Oh, hey, Sam,\" I said, trying to keep the smile from flattening out on my face where it would be obvious I expected someone else. \"Beautiful ceremony, right?\" \n\n\"Yeah, gorgeous,\" he replied. But his expression looked less than enthusiastic. \"Listen, Nick, about this girl you're dating ...\" \n\nHe'd stepped in close to keep his voice down. I didn't like where this might be going, so I said, \"I didn't really say we were dating.\" \n\n\"Whatever, you brought her to a wedding.\" He looked around and stepped even closer. \"The point is, she's an interior designer, right? Well, Pete's aunt and uncle apparently hired her a while back, and she's not really a she, she's a he. Pete's uncle was sitting next to me before the ceremony, and he said, 'Who's that with the she-male decorator?' Some gay friend of the aunt's recommended this person, and anyway, let slip that she's ... he's ... whatever's a transsexual. I thought you should know.\"  \n\nTrying to keep my face blank, I said, \"Wow. Thanks for telling me, I guess.\" \n\n\"Look, I'm sorry, dude,\" he said with a consolingly masculine slap to my back. \"I've got to say, it's no wonder you were fooled. He's fucking hot. Better you find out now though, right?\" \n\nMy tongue itched to tell him I already knew. It itched even more to tell him not to call Lindsey 'he.' But I didn't have the balls. I told myself it wasn't like he'd really badmouthed her - he was just being ignorant, not nasty. But it still felt like I wasn't sticking up for her the way I should be. \n\nThe best I could manage was, \"Sure. No harm, no foul. Could you not spread it around, though? I don't want the Bible-thumper part of the family looking down their noses.\" \n\n\"I gotcha.\" He made a lip-zipping motion, then said, \"Don't worry, though. I'm sure even the Jesus-crew will give you the benefit of the doubt.\" He used the Spanish pronunciation to make it rhyme - Hay-soose crew. \n\nAt least he's being equal opportunity offensive, I thought. \n\nSam disappeared, I made it to the head of the line, ordered two White Russians, then found a corner from which to watch the venue crew expertly replacing the rows of seating with dining tables. Eventually, Lindsey showed up at my elbow, looking annoyed. \n\n\"So ... your cousin tells me you're straight,\" she said. \"I think he needs to work on his conversation skills. 'Hey, are you Nick's date?' 'Your name's Lindsey, right? And you're a decorator?' 'You do know Nick's straight, don't you?'\" \n\n\"I'm sorry. He's not usually such a dick.\" I handed her drink to her. She took it and sipped, then dismissed Sam with an eye-roll and a little wave of her hand. \n\n\"I've had lots worse.\" \n\n\"You don't want to go, do you?\" Just asking the question made my heart rate go up from stress. \n\n\"Fuck no,\" she said, sipping her drink. \"Open bar, free food, and as much as I paid for this dress?\" She looked at her glass. \"This is a damn good White Russian. You tip the guy?\" \n\n\"It was a girl,\" I said. \"But yeah, I tried to. She and the other bartenders were turning tips away, though. I guess they're paying them well enough to keep the bar open-open, not just open-plus-tips open.\" \n\n\"Well that's nice.\" \n\nWe wandered a bit, working away at our drinks. A couple of cousins, aunts, and uncles bumped into us, and I introduced Lindsey to them, then told her any funny stories about them I could once they'd passed out of earshot. \n\nWhen everything was ready and they seated us for dinner, we had the bad luck to end up next to that aunt and uncle of Pete's. They gushed about Lindsey's design work and how amazed everyone who came to their house was, and at no point did the conversation veer toward the aunt's gay friend or Lindsey being transgender. But knowing that they knew kept me tensed up all through the meal, expecting some kind of bombshell to drop. With the size of the guest list, tables got served in waves, and ours had to wait a bit, so we hadn't finished eating when the DJ started up the music for dancing. That took some edge off my nerves; the sound system would keep any embarrassing revelations from reaching too many ears. \n\nFinally, dessert rolled around, and because the aunt was diabetic and it was getting late, they excused themselves to say their congratulations to the new couple. \n\nLindsey had the tiramisu, and I had the dark-chocolate-marbled cheesecake, and before she'd made it three bites in, she pointed her fork at her dessert and said, \"Damn, we should have had Gus and Wendy order theirs before they left so we could double up. Is your cheesecake as good as this is?\" \n\n\"You want to try it?\" I asked, cutting a bite loose with my fork and holding it her direction. She glanced around, then said, \"Sure.\" \n\nParting those glossy red lips, she leaned slightly forward, and I raised the fork, edged it carefully nearer and nearer her mouth until she opened wide and let the bite pass her teeth - her eyes on mine the whole time. Closing, she slid her mouth back off the fork and chewed. \n\n\"Mmm,\" she said, nodding and creasing her eyebrows. \"Mm, yeah, that's good. I don't know if it's as good as mine, but I admit I have a big coffee bias.\" \n\nI waited to see if she would offer me a bite in exchange. Instead, she put her cheek in one palm, elbow on the table, regarding me. \n\n\"Nick,\" she said, \"when Sam told me you were straight earlier, I shrugged and said we were just friends, so I didn't know why it mattered. You know what he told me?\" \n\nI shook my head. \n\n\"He said, 'That's not how I heard it.' What do you think he meant by that, Nick?\" \n\nWith my face rapidly heating up, I decided to just go with the truth. \"The other day, he was pestering me to come tonight, and he tried to bait the hook by telling me about all the hot bridesmaids. So I said something about having someone I was already interested in. I thought it might get him to stop bugging me.\" \n\n\"That's all?\" she asked, cheek still resting on her hand. \n\n\"That's all,\" I said. Her lower lip moved in a way I couldn't quite read. So I went on. \"I mean, that's the only reason I told him. I don't mean it wasn't true.\" \n\nHer eyes closed slowly and then opened again after a solemn breath. \n\n\"What are you doing, Nick?\" \n\nThe reprieve my nerves had gotten when Gus and Wendy left now officially came to an end. My whole body tensed. I think my toenails tensed. \n\n\"Honestly?\" I asked. \n\nShe nodded against her palm. \n\n\"I have no idea.\" \n\n\"You know this can't possibly work.\" \n\nThe cheesecake in my stomach tried to calcify into solid rock - and then my brain turned her words over, heard them again, and suddenly filled up like a helium balloon. \n\nShe must have seen the change on my face, because her brows furrowed and she asked, \"What?\" \n\n\"You just admitted that there's a 'this.' I kind of assumed it was just me. But you just said it. 'This.'\" \n\nHer head was off her hand now, and she leaned back and folded her arms across her chest. \"Okay, so there's a 'this.' But I also just said it was impossible. Was your cousin wrong? Aren't you straight?\" \n\n\"What I am is confused as hell,\" I said. \"But I'm not confused about the fact that you're amazing, Lindsey. And I don't mean the way you look, I mean everything about you. You're fantastic.\" \n\nShe blushed a little, maybe searching for something to say, not immediately finding it. \n\n\"And,\" I went on, \"I've been watching nothing but transgender porn lately, and it's not even freaking me out anymore.\" \n\nHer arms squeezed tighter across her chest. She had that vulnerable look again. Was she shaking? \n\n\"What are your friends going to think? What's your family going to think?\" \n\n\"I don't care.\" I said. \"Want me to prove it? I'll kiss you right here.\" \n\nI realized I was probably overcompensating for my cowardice talking to Sam earlier. \n\nThen I realized that was a good thing. \n\nLindsey uncrossed her arms and leaned very slightly toward me. I could see her working to keep her breathing steady. \n\nSomething told me to go for it. \n\nAlmost of their own will, my hands went around her - one to the nape of her neck, the other to that floral design at the side of her waist. They drew her to me, and I saw her lips part again, in a way that was different and yet not so different from when she'd opened her mouth for the bite of cheesecake a minute earlier. The look in her eyes, too, echoed the cheesecake-bite look. Not because preparing for a kiss meant nothing, but because we'd both known what was happening before was more than a bite of dessert. \n\nAnd then her eyes closed and her lips were on mine and the music and soft lighting of the banquet hall faded away somewhere distant. \n\nI felt her, soft, in my arms - tasted the sweetness of her mouth, floated through the mingled scents of her perfume and her hair. I let my eyes close to match hers as our lips moved against one another, flower-petal soft, mother's-breast warm, hungry yet also fulfilled, searching yet also calm. The wet, slippery delight of her tongue peeked into my mouth, bumped against my own tongue's tip, withdrew again. Her hands laced through my hair. Her breasts grazed my chest, eased back with an outrush of breath through her nose, then settled against me with steadily increasing certainty. ",
        "Whatever her mouth had done to me in the car that first day we met, whatever I'd imagined it doing in the weeks since, nothing compared to what it did to me now. \n\nThen she broke away with a gasp and our eyes opened together, focused together. \n\n\"Oh my god, this is a terrible idea.\" \n\nBut no sooner had she said it than her head ducked toward mine once more, and our lips met like the sea and shore on a dark, moonless night. We kissed deep and fast now, as though the tide were quickening, until her lips escaped mine and feathered along my jaw to my ear, where she said in a voice roughed by passion: \n\n\"I want you to come home with me.\" \n\nIt wasn't a question, and her eyes held no question when she drew back and I looked in them. Only an intense need speaking to that same need in me. \n\nAnd I thought, out of nowhere, Who am I? And the answer came just as quickly, I'm a guy who absolutely wants to go home with her. \n\nI nodded to Lindsey then, and we got up from our chairs in the same single motion. \n\n* * * \n\nWe made out the whole cab ride back to her place. The trip wasn't that long, but I almost came three different times from her rubbing my crotch with her hand. She made this cleft between her middle and ring fingers and used it to stroke the length of my granite-hard cock through my pants, slowly widening and narrowing the furrow she worked me with, increasing and decreasing the pressure through a range that never went too delicate or too firm. For the whipped cream and cherry on top of this treatment, she would occasionally roll the heel of her palm against my root, right where the fabric of my underwear forced the erection to take its bend. And either she had some psychic power that served as an orgasm thermometer, or she kept her head better than I did through the hot, wet, Olympian gymnastics of our lips and tongues, so that some particular tone in my gasps alerted her when I was close. Each time I got ready to blow, she backed off and put the hand on the side of my face or neck and focused solely on kissing me. \n\nIn addition to this show, the cab driver got a really good tip from her at the end of the ride. I offered to pick up the fare, but she just laughed. \"We needed a cab because I knew I'd be drinking, not because I'm bringing you back here.\" \n\n\"Yeah, but I still, uh ...\" I scratched my head as the cab drove off. \"... benefited from the ride.\" \n\nShe gave me a narrow-eyed grin. \"Then you'll have to make sure I benefit from a ride sometime in return.\" \n\nMy cock surged in my pants. Jesus. \n\nClimbing the stairs to her place, I vaguely registered what a nice complex she lived in. Big, airy windows. Spacious balconies. Fancy cut-stone walls. Her key went in the lock with a slide and a click, then turned to work the latch. Everything sounded sexual to me, even the breeze sliding through the leafy branches of trees next to the stairway. Inside, she clicked on the light, and the front room of her apartment bloomed into color. \n\nThe place had hardwood floors, a little darker than the blonde laminate we were putting into Mrs. P's house. One red-brick wall held the fireplace, faced by a low, modern couch in tangerine against a light-green wall that slanted down toward us because it backed up against the stairs to a loft. The entryway, the other two walls, and the way up to the loft were all white, with accents in red, like the drapes of the big front window. Diagonally across from us, an archway showed the kitchen, which looked to be mostly yellows, chrome, and glass. \n\n\"Wow.\" The clean and vivid perfection of the room momentarily dialed down my sex volume so that I could almost think again. \"Wow, Lindsey, this is all you, right? It's beautiful.\" \n\nShe closed the door behind us and turned me with a hand inside my upper arm. I noticed the green of her dress fit in perfectly with the decor. Her lips - smiling - even matched the curtains. \n\n\"Thanks,\" she said, and pulled me close for another kiss. \n\nHer mouth and mine made the only noise in the room - a strange contrast to the traffic sounds we'd made out to in the taxi and the dance music we'd kissed to in the banquet hall. With her arms around me, clasping my back, moving through my hair, Lindsey guided us across the room. I kept my eyes closed and let her. My calf bumped against the sofa. We sat down, still kissing. \n\nIn the quiet, sightless ocean of that kiss, I ran one thumb along her jaw and down her throat, feeling the quick whisper of her pulse there before my hand settled to her bare shoulder and collarbone. Even with my eyes shut, everything beautiful about her seemed to penetrate my senses - the blue of her eyes, the gold of her hair, the soft texture of her flesh, the scent of her, the brilliance of her ability with color and space, the way she breathed. She traced one fingertip around my shoulder blade, down my spine, forward along my ribs. Then her palm pressed against my waist, her fingers clutched, and her nails drew a path around and down my abdomen until she turned her hand and once again embraced my straining erection with that cleft between her fingers. \n\n\"Oh my god, that feels good,\" I whispered. \n\n\"Mmm,\" she said. \n\nIn the quiet of her apartment, I could now hear the brush of her hand along the fabric that held my cock in. I felt suddenly unobserved - something I hadn't consciously thought about in the banquet hall or in the cab, but which had been there nonetheless: the presence of other eyes upon us, now vanished. My hand glided down from her shoulder to cup her breast, and she sighed and gripped my hard-on more firmly than at any point so far. I took it as approval, so I gently kneaded the soft flesh that filled my hand. In response, she worked me in her grasp, ferociously, with quick, rolling strokes. It felt incredible. But it also threw a thought into my head. \n\nYou ought to be doing more for her. \n\nSuddenly, my hand felt awkward on her boob, which I realized might not be as sensitive as a typical woman's. But her hand didn't feel at all awkward on my crotch, and her questing, welcoming lips and tongue certainly didn't feel awkward to mine. So I trailed my fingers down the curves of her dress, easing them along her belly, moving lower, finding the hard ridge of her pubic arch, right above the valley formed by her two perfect legs within that green satin dress. She made a little noise into my mouth, tilted her hips slightly. Her grip along my rod tightened further, with another uptick in her breathing. \n\n\"Mmmm,\" she murmured as I walked my fingertips back and forth across her pubis, not yet in contact with anything truly sexual. Her hips moved again, yearningly. Something about her anticipation made my chest burn. Instead of continuing directly downward, I skated my hand over and along her thigh, caressing almost to her knee before beginning a slow, sweeping slalom from one leg to the other, climbing back toward the head of the valley in a series of delicate switchbacks. \n\nI hope she doesn't think I'm procrastinating, I thought. And then, self-consciously, Am I procrastinating? \n\nBut the way she moaned into my mouth, eased her legs wider, and accelerated the delicious tugging of her hand all told me not to worry about it. \n\nAnd then I was there. The ball of my thumb lodged against a swell of flesh that was stiff yet yielding - solid but not skeletal. \n\n\"Hnhh ... Nick ...\" \n\nThe tone of pleasure in her voice overwhelmed any hesitation I had left. My hand descended into the fabric of her skirt to cup and explore what lay concealed there. A kind of shock ran through me, wild and high and hot. What my hand now touched, I had felt before - but had also never felt, and never expected to feel. Lindsey groaned. Her hand went motionless around my rigid length, still holding tight but without movement. Her kisses became small, her breathing tremorous. \n\nI glided my hand up, and then down, once, along the bulge between her legs. A lifetime of shaming social pressures told me I ought to be revolted - but the way she quivered and pleaded against me with the language of her body gave me something, a strength and a confidence that all the nagging neuroses couldn't hold a candle to. \n\nTaking hold of her, I began to pump. Without hesitation, her hips responded, thrusting her erection up in time to my movements. Her teeth scraped a path along my jaw to my ear, where she moaned. \n\n\"Aauhhhh ...\" \n\nAs I kept rubbing, her hand repeatedly squeezed and released me, then returned to that glorious finger-parted stroking. \n\n\"Fuckkkk ...\" she gasped. The whole thing had a kind of magical, high-school-flashback, never-done-anything-sexual electricity to it - at least, it did for me, and it certainly sounded like things were going well for her too. For a couple of minutes, we both just panted and kissed and caressed and rubbed. I could feel that glandular crescendo approaching with every glide of her fingers along my shaft - the pleasure thickening and swelling and working its way toward an inevitable jolt. At the same time, Lindsey fucked my hand hard with her hips, and went through a circling series of staccato groans and glissading sighs. Then, in between kisses, she said, \"Uh ... Nick ... I'm so ... close ... ah ... are you ...?\" \n\n\"Uh-huhh,\" I gasped. \n\nWithout warning, her fingers left my crotch, bringing my eyes open in surprise. The blue of her gaze and the heat on her face, though, steamed away any alarm I might have felt. She took hold of me by both shoulders and pushed gently. \n\n\"Lie down so I can dry-hump the shit out of you.\" \n\nI slid over and relaxed to horizontal under the pressure of her hands, and in a heartbeat, she hopped up, hiked her skirt above her waist, and straddled me. In the moment of her position change, I caught just a glimpse of her panties and the un-feminine fullness within them. Then the green silky cloth swaddled both of our crotches from view and I felt her ease into place firm against me. \n\nHer mouth came down to meet mine again, her eyes closing, hair dangling thick around both of our faces. She moved her hips up and down, sliding her length along mine, separated only by the soft cotton of her panties and the relatively thin fabric of my dress pants and underwear. If I hadn't already been at the very edge of orgasm, I'm not sure how much it would have done for me. But in my condition at that moment, she probably could have just breathed on it a while and gotten me to come. \n\n\"God, Lindsey ...\" \n\n\"Mm-hmmm. Oh ... uh ...\" She started panting in time to her thrusts. \"Uh - uh - uh - ohhhhh -\" \n\nThere's a dick dry-humping my dick, I thought. And it wasn't a bad thought, just surprise at a completely unexpected sensation - her thick, full, rigid roundness gliding back and forth past mine, then rolling across it and doing the same on the other side. Holy shit, here it comes ... \n\n\"Ah!\" I gasped. \"Ah, Lindsey!\" \n\n\"Yessssssss,\" she groaned in my ear, pumping faster. \n\n\"Fuck - Lindsey - fuck - oh god, fuck me!\" \n\n\"Uh-huh ... Uh! Huh!\" \n\nHeat washed up and out of my groin, and I squeezed her tight to me and exploded. The sluicing pulses of orgasm rolled through my muscles in electric waves. And somewhere in the middle of it, I felt a resonant throbbing against my blurting cock and heard in her voice that she was coming too. \n\n\"Shit, Nick! YES!\" \n\nAnd then we were holding each other, kissing, our groins pressed together in a slowly subsiding cascade of hot twitches and throbs, her beautiful form soft and trembling under my hands, her gentle fingers tracing along my cheeks and through my hair. \n\nIt took a long time to come down from that orgasmic high, but eventually I looked up and found her looking down at me with a warm and happy presence in her eyes. \n\nI wanted to say something, but nothing came to mind, and after a while I stopped wanting to say anything and just enjoyed seeing her expression. Then she kissed me, once, twice, three times, and buried her face against my neck and we lay there warm and sated and at rest. \n\n* * * \n\nEventually, the afterglow faded enough for me to be aware of the gloppy wetness in my boxer-briefs. And then another wet spot at what felt like the left corner of my pubic hair. \n\nHoly crap, that's her cum. I knew none of mine could have made it up that high. It must have run down inside her panties and dripped out. This is so fucking weird. \n\n\"Hey, Lindsey,\" I said, rubbing her shoulder. \"I could lie here until I fall right asleep, but do we need to check that we're not getting splooge all over your nice couch?\" \n\nShe didn't answer immediately. \n\nDid she already fall asleep? \n\n\"Lindsey?\" \n\n\"Sorry. I was thinking.\" She lifted up and looked at me - not nearly the same spellbinding look as a few minutes earlier. This one had a wistful edge to it. \"It's got one of those lifetime guarantee stain-guard things on it, but I guess you're right.\" \n\nRolling off of me, she stood with her skirt still hiked up - presumably to keep from dripping cum on it. Then she bent to check what was going on down there, before looking toward my crotch. \n\n\"Looks like mine all spilled on you,\" she said, dropping the green satin curtain of her dress so that her panties, low-hanging and damp, disappeared back into mystery. \"Sorry.\" \n\nI sat up and found a glistening wet spot almost as big as my palm spreading from the left side of my fly nearly to the inseam of my crotch. Man. That's a lot of cum ... and that's just what spilled out. She must spew like a horse. \n\n\"You're not freaked out, are you?\" \n\n\"No, that was awesome,\" I said, frowning. \"Are you?\" \n\n\"No,\" she said. Then: \"Maybe a little bit. I haven't had sex that good in forever. And it wasn't even sex. But ...\" \n\n\"What, was it too teenagers-in-the-back-seat-with-no-idea-what-they're-doing for you? I mean, I admit, I haven't been that amazed by dry-humping since high school.\" \n\n\"I was going to say middle school,\" she said, with a smirk that quieted some of my worry. \n\n\"Middle school ... I guess you've always been two steps ahead of me at everything,\" I said, relieved to be able to banter, even if it was at my expense. \n\nShe laughed a little. \"I'm kidding, Nick. I was the gender-confused kid in middle school, remember? I didn't even get to kiss a guy until college.\" \n\n\"Oh. Right.\" I tried to get a handle on her expression, but didn't have any luck. \"So what's wrong?\" \n\n\"Nothing's wrong,\" she said, pacing a few steps. \"Not really. I just ... part of me wants to take you upstairs, Nick. Get naked with you, climb in bed. But part of me's worried about how you'll react when you see me with my clothes off. Isn't part of you worried too?\" \n\n\"Sure.\" I shrugged as I said it, but inside I realized I wasn't as casual about the admission as I would have liked. \"But I'm totally willing to give it a shot. No, I said that wrong. I really want to give it a shot, even if I've got some nerves about it.\" \n\nShe nodded - although slowly. \n\n\"Okay,\" she said. \"Okay, but can we maybe just sit together for a little bit, and you can hold me, and we can take that shot some other night? Because what we just did was great, and I kind of want to hold onto it for a while before we risk spoiling it with something that might turn awkward.\" \n\nI was about 90/10 disappointed/relieved at that suggestion. But I realized that if I was even ten percent relieved, that meant it was probably a suggestion I ought to take. \n\n\"I can deal with that,\" I said. \"Actually, sitting and holding you for a while sounds really good.\" \n\nLindsey smiled, then came over and sat next to me again. \n\n* * * \n\nThe next day was weird. \n\nAfter cuddling on the couch a while and a few more kisses, Lindsey had taken me home and I'd done a little web surfing (non-porn) and then gotten to bed at a pretty reasonable hour. So waking up in time for our nine o'clock Sunday start time didn't give me any trouble. \n\nBut Lindsey didn't show up until nine-thirty. \n\nYeah, it was only half an hour, but she'd never been even a second late before, and if anything, she arrived early more often than on time. So half an hour made me nervous, and I was about to text her when I heard the BMW pull into the driveway. She apologized for being late, but didn't give a reason - just grabbed a paint pan and roller and started in on the guest bedroom wall opposite the one I was working on. \n\nPainting is pretty low-brainpower work, but we still finished the whole room with virtually no conversation. All I could think of to talk about was last night, and it seemed pretty likely that last night was part of the reason for her being so quiet. Well, there was something else I wanted to talk to her about, but it didn't seem like the right topic to throw into an awkward silence. \n\nI finally broke the ice by asking her why she didn't have any of her paintings up around her apartment, and she said kept them upstairs because she didn't want to look egotistical. \n\n\"I don't think they're bad,\" she explained. \"I enjoy doing them, and once in a while I'm really happy with one. But if I put them up on my walls, it's like I'm announcing what an artist I am.\" \n\n\"But you designed your own rooms, right? Isn't that like announcing what a great designer you are?\" \n\n\"Yeah,\" she said. \"Because I'm a fucking awesome interior designer. But I'm just an okay painter, so I don't want to look like I'm full of myself about it. I mean, you don't have your music compositions playing on a loop in your house when people walk in, do you?\" \n\nI opened my mouth to reply, but my phone rang, and when I looked at it, I saw it was Sam. With a scowl, I told Lindsey to hang on a second while I answered. \n\n\"Yeah, what's up?\" I asked. \n\n\"Dude, Denise said you were kissing that she-male decorator last night. She was all happy to see you hooked up with someone hot, and I didn't spill the beans, but what the heck?\" \n\nI glanced at Lindsey, who'd gone back to painting. What the hell should I say? Give him the piece of my mind I ought to have when he stuck his nose in it the first time? Make an excuse and tell him I'd talk about it later? Leave the room so Lindsey wouldn't get uncomfortable if she realized we were talking about her? \n\nFinally, mad at Sam for being Sam, and mad at Denise for telling Sam, I said, \"Look, Sam, do you really care?\" \n\n\"What?\" \n\n\"We see each other maybe four times a year, right? And family is family, and if one of us needs something, we know who to call. But do you really care about this, or does it just have your attention because you think it's off the wall?\" \n\n\"Well dude, yeah, it's pretty fucking off the wall.\" He went quiet for a moment. I just waited. \"Are you seeing this ... uh ... person? Does your mom know?\" \n\n\"Sam, I don't even know. But maybe this is a chance for you to broaden your mind.\" \n\nI didn't wait to see what he said. I just hung up. Not because I was mad - because I had no interest in making Lindsey listen while I tried to help Sam get his head around something that wasn't his business anyway. \n\nShe glanced at me, and I said, \"That was my cousin Sam.\" \n\n\"Yeah,\" she said. \"I heard.\" \n\nAnd she went back to painting again. \n\nWhen we got the room done, Lindsey said she wanted a salad for lunch and that she was going to a drive-through to get one. She offered to pick something up for me, but I said I was good, went home to feed Mister Whiskerdoodle, and made myself a sandwich. The afternoon was a repeat of the morning, but in the master bedroom and with a different color of paint. \n\nBy four or so, we'd finished the room and cleaned up. \n\nWe'd barely had half a conversation the whole day, and my mood was in the toilet. I'd gone to bed floating the night before, and woke up with a strange, energetic anticipation inside, and now all that pent-up positive energy seemed to have deserted me. But I wasn't ready to give up yet, and I worked up my courage to say something before she could slip away for the evening. ",
        "On the porch, after shutting and locking the door, I opened my mouth. And right as I opened my mouth, Lindsey opened hers. And the same word came out of both of us: \n\n\"Listen -\" \n\nWe both stopped ourselves. From my point of view, she was the one being mysterious all day, so thinking she might be about to explain, I said, \"You first.\" \n\nWith a deep breath, she launched into it. And what she said had the ring of having been thought about a lot, even though it didn't come out all that fluidly: \"So last night - I mean, we'd both had a few drinks, right? And it was a wedding, and I don't know about you, but they go to my head. What I'm trying to say is, we both know this isn't ... I mean, Christ, that call from your cousin, I get it. So I think we should just agree it was fun and really nice, but a fluke, and we can put it behind us and forget about it. I mean, we should, right?\" \n\nWhat do you say to that? \n\n\"Uh, yeah,\" was all that came to me. \"Probably.\" \n\n\"Okay.\" She took a deep breath and settled herself. \"Well. I guess if that's out of the way, what were you going to say?\" \n\n\"I was going to ask you if you wanted to go on a date with me.\" \n\nHer nose twitched. \"A date.\" \n\n\"The Modern Art Museum over in Fort Worth has this exhibition starting, a guy who does nothing but paintings of bathrooms. I figure nothing says 'I want in your pants' like showing a girl toilet paintings.\" \n\n\"Nick ...\" \n\n\"I like you, Lindsey.\" I said it simply, but I said it with everything I had. \"I like being around you, I like talking to you, I like kissing you. I liked ... doing things with you, even if it was weird. And I don't know how far I can get myself to go, but you're the first girl I've kissed who's actually really nice - nice all the way through. I don't feel like I can just write that off.\" \n\n\"It's not going to work, Nick.\" Her head was shaking and her voice was too. \"It's not going to work, and you're the nicest guy who's ever been interested in me, and I'm totally going to fall for you if we go on with this. And then it's not going to work.\" \n\nI nodded. \"Yeah, of course it's not going to work. So we shouldn't go out at all. But in another couple of days, my willpower's going to tank, and I'm going to ask you again. And then we'll have this conversation again, and I'll agree with you again. And then I'll keep getting all worked up and asking you and asking you, and sooner or later you'll say yes and we'll go out. So why don't you just save us both the time and stress and go to the museum with me on Wednesday? We can have a totally awkward date and it'll throw cold water on the whole idea and we can get back to our remodeling.\" \n\nShe looked at me, and looked at me, and I waited for her to answer."
    ],
    "authorname": "IanSaulWhitcomb",
    "tags": [
        "wedding",
        "dry-hump",
        "taxi ride",
        "transsexual",
        "open bar",
        "white russian",
        "tiramisu",
        "first kiss",
        "first deliberate kiss",
        "sex on couch"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/big-flipping-deal-ch-05"
}