{
    "title": "Raw Ch. 07",
    "pages": [
        "I was a strong, independent woman.\n\nMalcolm had been the first to tell me that. Now I said it every time I started to think I'd never get back to being the person I had been six months ago. Before my life was flipped upside down. Before when everything was going great. And yet, it was that same life I resisted returning to.\n\nI wanted to stay at the beach house with him, isolated from the rest of the world. I'd write in my study overlooking the ocean while listening to the waves crash just yards away. He' teach math to preppy high-school kids who went up to the Hamptons on the weekend. And in our free time, we would lay on the beach or perfect the art of kink in the Black Room.\n\nIt wasn't going to happen, but it didn't stop me from dreaming about it. While I could write anywhere, I wouldn't make him give up his job and move out here permanently. I'd probably try to talk him out of it if he even suggested it.\n\nAs much as I did not want to return to Chicago, we had to go back. My big brother, Drake, was getting married in just over a month, and I wouldn't miss it for the world. I was honored when Daphne had asked me to be a bridesmaid. I had been to many weddings before, I had just never been in one. I think I might have been a bit more excited than they were.\n\nBut the moment the car door closed, I wanted to cry. I stared out the passenger window at the three-and-a-half story building that had served as my refuge for the past four months. Like a child moving away, I turned and watched out the back window as Malcolm pulled the car out of the cul-de-sac. The house grew smaller and smaller until I could just see the top of the observation room peeking above the archway of trees as we drove under it. Then any trace of the house disappeared from sight as we turned onto the highway. So long, my friend.\n\nWe arrived in Chicago from Baltimore after ten o'clock. It was dark, and we were both exhausted. Yet as tired as I was, sleep did not come easily. I probably kicked Malcolm at least a dozen times while I tossed and turned. Bless his heart that he didn't move to the guest room...or force me to.\n\nThe sun was shining through the bedroom window when I opened my eyes. It took me a moment to realize where I was. I took a deep breath and smiled as I snuggled deeper into the pillow, pulling the sheet and blanket tighter around myself.\n\nThis was home. Familiar. Comforting. And I had missed it.\n\nWhen I inhaled again, I smelled bacon and moaned.\n\nBefore Malcolm, I had never been the type of person to wake up before there were double digits on the left side of the colon of the alarm clock. Now, I was more apt to if the reason was morning sex. Or someone making breakfast.\n\nWith some effort, I crawled out of the cozy cocoon I'd created. I scrounged up a pair of sweats to go with Malcolm's confiscated T-shirt that I wore regularly to bed now, pulled my hair into a messy ponytail, and followed my nose downstairs. He'd better have made enough for two.\n\nI found my boyfriend at the stove with a spatula in one hand and the handle of the frying pan in the other. He had on a pair of boxers and a T-shirt, the latter pulled taut over his broad shoulders. My smile widened as I thought of how lucky I was to have such a handsome man as my lover and best friend. And a cook, to boot!\n\nI kissed the middle of his back between his shoulderblades and ran my hair through his thick hair. I'd convinced him to get a trim before we came back, but it still was long enough to get a little messy from sleeping. It just added to his charm.\n\n\"You'll make a morning person of me yet. I could get used to waking up to this.\" I peaked around his shoulder to see that he was making scrambled eggs.\n\nHe twisted in my embrace long enough to kiss my lips. \"Trust me, you're not the only one.\"\n\nI pressed my face against his backside and sighed. Then I frowned. There were some newly-added contents to my modern kitchen: a pile of boxes stacked against the wall by the fridge. They were severely out of place and did nothing for the d\u00e9cor.\n\n\"You didn't waste any time, did you?\"\n\n\"Your brother dropped them off last week. But since they are here, and he was free today, Drake is going to be by later with a trailer. The opportunity presented itself. Why delay the inevitable?\"\n\nI ran one hand down the front of his chest, rubbing my breasts against his back now. \"Because I can think of something better to do with our time right now. Why rush it? Especially since you're on sabbatical until January.\"\n\nHe pushed my hand away just before I could slide it lower. \"Can you set the table, please?\"\n\nI stuck out my lower lip but obeyed. When I was done, I sat at in one of the chairs\u2014one leg bent under me and my other foot perched on the edge of the seat\u2014and stared out the window. Two birds flitted around the oak tree that was a brilliant combination of orange and yellow. I would miss that view every morning. I would miss making breakfast\u2014even though that was usually just a bagel with cream cheese if I even ate at all\u2014in my own kitchen.\n\nAnd then I realized I would be missing a whole hell of a lot more than this room. Waking up in my own bed. Taking a shower in my own bathroom. Writing in my own office. Cuddling up by the fire in my own living room during the winter. Walking to the farmer's market for fresh veggies and fruit. Being so close to wherever I wanted to go in the city. Whenever I wanted to go.\n\nA shudder ran through me, and my sigh came out shaky. No. I would not cry. I sucked up what little courage hadn't drained out of me in the last few minutes and sat up straighter. \"I just don't understand why we have to do it today.\"\n\nMalcolm kept his back to me while he dished up our plates. He didn't speak until he had sat down across from me and took my hand in his. \"You are a strong\u2014\"\n\n\"Cut the bullshit!\" I yanked my hand away and stabbed at my breakfast. With a plastic fork. What the hell? Of course, it pierced the paper plate and got stuck.\n\n\"Becca!\"\n\n\"I'm not procrastinating or having commitment issues or anything like that. I was merely making a comment that I don't see the need to rush into making this change. We just got back.\"\n\nI wanted my real plates and silverware. I wanted to relax this morning after being away so long. I wanted normalcy. I almost swiped the plate\u2014food and all\u2014to the floor, but I resisted. Barely.\n\n\"I thought it would be easier for you to not have to be reminded\u2014\"\n\n\"He didn't fucking rape me in my condo!\" The fork squeaked as I pulled it free.\n\n\"I know!\" He inhaled deeply and let out a loud, slow breath.\n\nWithout even lifting my eyes to his face, I knew his eyes were closed. It was his way of trying to stay calm. I imagined he was counting in his head. Imagining what he was doing while counting, I couldn't be one-hundred percent sure, but it was probably spanking me.\n\nAfter a couple of more loud exhales, he said, \"I'm sorry.\"\n\n\"Yeah, well, apology accepted,\" I mumbled around a mouthful of eggs.\n\n\"I'm going to help you. You're not in this alone. We're not taking it all, anyway. It'll still be here for you.\"\n\nThe longer I stared at the stack of cardboard, the more I thought of it like dirty dishes or laundry. It was something I loathed to do. Okay, maybe I was procrastinating. I really did want to be with Malcolm. But I just didn't want to give up who I was, either.\n\nAs much time as I'd been spending with him the past two years, moving in with him was a huge shift out of my comfort zone. Because deep down, I knew I wasn't doing this because I had chosen to. I had been told\u2014no, instructed\u2014to do this. My heart skipped a beat when he usurped control like that. I craved it. But that strong, independent woman he kept reminding me I was? That person also knew that going forward with this meant I was relinquishing a little bit of those very same characteristics by even being in this relationship.\n\nHow much would I have to let go of who I was in order to be who he wanted me to be?\n\n\"Eat your breakfast, then we'll get started.\"\n\nI frowned but obeyed. Again. Because I knew he was right. At least this time.\n\nWe were both quiet while we ate, but I could feel his eyes on me. Boring into my head like a watchful parent. And for some reason, I felt guilty. As if he could read my thoughts and knew I was having reservations. Damn him and his ability to know me so well.\n\nTrue to his word, after he'd cleaned up the frying pan and disposable dishes, Malcolm helped me pack up what I deemed were the priority necessities. Clothes and personal items. Office supplies and research material for my writing. Special pieces of furniture and knickknacks that would make his place feel more familiar and cozy for me. I should have been grateful that he hadn't demanded I just pack a single, overnight bag and leave everything else behind.\n\nDrake showed up around noon with his truck and the U-Haul trailer attached. He helped us load the boxes and larger, harder-to-pack items. We made plans to meet up with him and Daphne later to get some dinner, and then he took off for Wheaton.\n\nWhen I'd inherited the condo, I had moved in little-by-little over the course of a few months without any help. It was surreal, this time, watching my brother drive away with my things. In the end, I had chosen to leave most of it behind. I wasn't ready to sell, and it made more sense to keep the place furnished for when I was in the city. An easy place to crash.\n\nMalcolm had been right: I wasn't losing my place completely. But it still tugged at my heartstrings that things were changing. I had yet to accept that it was all for good.\n\nSue was sad to know I was leaving the city so soon, but she said she understood when I rang her after Drake left. I promised to call or E-mail regularly, and I'd visit at least once a month if not more so we could have lunch together and discuss progress on my chapters in person. I reminded myself that while I'd wanted to stay at the beach house and could write from there, this made a hell of a lot more sense. Plus, we could always visit the coast during the summers when Malcolm wasn't teaching.\n\nI stood in my kitchen that looked exactly the same as it had that morning\u2014and every morning before\u2014with the exception of the missing cardboard boxes. This was probably the one room that I hadn't taken anything out of. Just for the hell of it, I grabbed a coffee mug from the cupboard and put it by my purse on the counter, even though I never drank coffee. I could use it for hot chocolate or something.\n\n\"I'm proud of you.\" Malcolm's hand was warm on my left shoulder.\n\n\"Thanks.\" I smiled out the window at my lovely autumn tree, silently saying goodbye. My hands splayed out on the round tabletop as I leaned forward to watch two squirrels race across the branches. They knocked several leaves loose in their wake that fluttered in a rainbow swirl to the ground.\n\n\"How about one last hurrah?\"\n\nI tilted my head back. \"Huh?\"\n\nHe spun me around to face him, his hands at my waist. \"I think you deserve a little playtime, Lady Becca. A little reward.\"\n\nGoosebumps prickled my arms. I gulped back my breath as the shorts I'd changed into to pack were suddenly tugged to my ankles. My panties were not far behind.\n\n\"Now, what shall it be?\"\n\nI lost contact with his face as he tugged my sweaty T-shirt over my head and it got caught on my chin. He left it covering my face and pinning my arms up in the air above my head as his hands wrapped around my bared hips and lifted me onto the tabletop. Then he was unhooking my bra. Finally, he removed my shirt the rest of the way and slipped the bra's straps down my arms.\n\n\"I think we'll start with an Australian kiss.\"\n\n\"A what?\" The last syllable came out as a squeal as he'd tugged my hips closer to the edge and I fell backwards, my head bumping the table.\n\n\"Don't tell me you've never heard of one.\"\n\nI couldn't tell if that was mock horror in his voice or if he was serious. I tried to sit up, but he gently pushed on my shoulder. I was left to stare at him over the swell of my breasts.\n\n\"You see, it goes like this. You push her thighs apart,\" he said as his hands moved between my legs. \"Press your mouth against her lips. And use a lot of tongue.\"\n\nMy giggle morphed into a moan, my back arching off the table as he acted out his instructions. Holy cow! He'd gone down on me many times, but something about this angle where he was slightly below me really made his tongue delve in deeper.\n\nMy head lolled back and forth, and my hands gripped my breasts now. Just under the encouraging sounds that spilled from my mouth, I could hear the slurping sounds he made as he kept it up. His nose bumped my clit as he moved his head around, his hair brushing the insides of my thighs.\n\nSoon enough, I was delirious. But there was an itch deep inside, and no matter how he thrusted his tongue into me, it just wasn't enough. My hands moved to lace in in his hair. I tugged gently, hoping he'd get the picture. He ignored me.\n\nI almost regretted wanting him to stop as I took in the image of his head between my legs, his hands gripping my thighs. But when my clit tingled as he nipped at it with his teeth, I growled and tugged on his hair one more time. Finally, he lifted his gaze to meet mine.\n\nFor a moment, he just stared at me. Darkness completely filled his eyes. His tongue had stopped licking, but his breath still heated my pussy in sharp gasps. I held my own breath as I propped myself up on one elbow, trying to read in his mostly blank expression what he was thinking.\n\nHis tongue swept up my pussy one more time. Then he was standing. Shoving down his pants. Pulling my hips even closer, making me lie flat again.\n\nHe thrust into me so hard my whole body rose up as I cried out. His hands slid behind my back and held me in that partially-sitting position while he plunged his cock into me over and over again. I came, screaming his name. My fingers clutched at his arms, trying to pull him deeper inside me.\n\nIt was over too soon. Had it even happened? I was panting, my back flush with the table again. His head was between my legs, lapping at my pussy in a leisurely manner as if he had never stopped.\n\nWhen I could speak again, I mumbled, \"What the hell was that?\"\n\n\"I told you. An Australian kiss.\"\n\n\"Damn.\"\n\nI shrieked as he suddenly stood up and flipped me onto my stomach. As soon as my toes touched the ground, his cock sunk into me until my ass connected with his pelvis.\n\n\"It's like a French kiss, but down under,\" he said between grunts.\n\n\"Huh.\" I rested my forehead on my folded arms. \n\n\"See? We have plenty of time to play now that the work is all done.\"\n\nI moaned as his cock bumped my G-spot. I turned my head and laughed as I stared out the window and saw the two squirrels staring back. I let out a sharp squeal as Malcolm smacked my ass. The squirrels scampered off, and I laughed again.\n\n\"Is something funny, Lady Becca? Do you want me to stop so you can tell me all about it?\"\n\nI gulped. \"No, Sir.\"\n\n\"Good girl.\" He thrust harder, his fingers digging into my hips.\n\nAfter I came again, he gathered me into his arms and carried me upstairs. In the shower, I knelt before him and sucked his cock. His hands fisted in my wet hair, guiding my head until he let go and groaned his release across my breasts while the hot streams of water rained down on us.\n\nLater, while he drove my car to Wheaton, I nodded off, a smile plastered to my face. Of all the things that amazed me about Malcolm, his stamina during sex was always near the top. It prolonged the pleasure for both of us. I never got tired of it. And he didn't even need drugs to feel that way.\n\nI did it for him. And he for me. What an awesome, natural high.\n\n###\n\nI spent the next week getting acclimated to living fulltime in Malcolm's house. I'd absconded a large guestroom on the first floor with a view of the backyard as my new office. After painting the walls, I brought in an oversized chair that unfolded to a single bed. I'd had it in my den back home, and the bed had rarely been used. Hopefully, it would come in handy now for late nights of writing.\n\nMalcolm found a colorful rug in one of the private play rooms from the basement that was just the right size to cover enough of the hardwood floor to make the room feel cozier. I arranged the hide-a-bed with my favorite end table and reading lamp in a corner. A desk unit that had just happened to mysteriously be waiting for me had replaced the room's previous occupants, a double bed and dresser. I wondered if it had been Drake's doing. I would have to thank him for selecting a layout that provided enough room for my laptop, printer, and workspace.\n\nOverall, I really hadn't brought that much with me, unless you counted my clothes and personal hygiene items. I don't know what I'd been so upset about. Thankfully, he had ample closet space, and I found a place for everything in his\u2014no, our\u2014bedroom and bathroom. I was still having a hard time calling it that despite having spent so much time staying here the past two years. Malcolm kept telling me that everything was ours now, but I knew it would be a long while before I believed that.\n\nWe had gotten into the routine out East of having a small breakfast together and then going our own ways for the morning. His was to take a run on the beach like he used to do back home. Mine was to work on my book. We both agreed to try to keep that up once we were in Illinois again. I hoped we could continue that schedule once he went back to work in two months for the spring semester, too, because it gave me a little bit of stability in my still-chaotic world. Which I was blaming partially on my big brother.\n\nIt was the week of Thanksgiving, and we were running around helping Drake and Daphne with last minute preparations for their wedding on Saturday. Who the hell got married on Thanksgiving weekend anyway? What was the rush?\n\nMaybe it was her long-term training in submission, but Daphne was the calmest bride I'd ever encountered. She had all of her ducks in a row, and she hadn't even used a wedding planner. Not for the first time, I envied her.\n\nWe celebrated Thanksgiving at Drake's house, and my mother and other brother, Alexander, joined us with his on-again/off-again girlfriend, Cameron. I cherished these times we could spend together as a family. They were too few and far between now that us kids were all grown up.\n\nThe conversation during and after dinner was primarily about last minute details for the ceremony and reception. It was all happening too soon. Hell, I'd barely had time to find and get a dress fitted! But I was glad we'd come back to the Midwest in time to be a part of it all.\n\nThe entire celebration\u2014not to mention the happy couple\u2014was absolutely beautiful. Elegant, much like Daphne was, yet formal like my brother. They couldn't have wished for a better day. Although I would have preferred it to be warmer. I was still freezing despite the harvest-gold colored shawl we'd found to wear over my burgundy, floor-length gown. With my ample cleavage from the dress's V-cut neckline and my bouquet of autumn flowers, I felt a little like a cornucopia on display.\n\nFor several hours, I talked with family and friends at the reception. I ate too much, and I didn't think I'd be able to walk for a few days, especially after having eaten Thanksgiving dinner two days earlier and a big rehearsal dinner last night. But I was happy for my brother and his new wife.\n\nBy the time we got home, I was so exhausted that I fell face-first into bed still wearing my dress.\n\n\"They looked so amazing today. I think it was perfect for them.\" Malcolm's voice came from all directions, as if he was walking around the room.\n\n\"Mmm,\" was all I could say. This bed had never felt so soft before. Then I moaned long and loud as he removed my shoes.",
        "Malcolm chuckled. \"Is that all I have to do to get you to sound like that?\"\n\nMy own laugh was muffled by the pillow. And it morphed into another moan as he sat on the bed and massaged my feet one by one.\n\nWhen he was done, he undressed me and joined me under the covers. His body was warm next to mine, and I wanted to snuggle up closer, but I couldn't move. I sighed as he began to massage my back. When his hands began to roam to my sides and breasts, my insides began spiraling with arousal.\n\nI whimpered. \"I'd love to, but I think I'm too tired. I can barely blink.\"\n\n\"Shh, you don't have to do anything but lay there.\"\n\n\"Perfect.\" I was oozing romance. I knew it.\n\nHis hands played at the sides of my breasts for another moment before they grazed my sides, over my hips, and stroked my thighs. Then he slid them all of the way up my back and then down again so that he now cupped my cheeks. \"You have such a beautiful body.\"\n\n\"Thank you.\" I smiled into the pillow.\n\nHe moved lower to my thighs. His thumbs slid back and forth, going deeper between them. Suddenly, he sat up and threw back the covers.\n\nI shivered. But I didn't have time to think about being cold as he parted my legs and rested one hand on my ass. The other slid down over my pussy, his fingers gently rubbing back and forth. He avoided my clit, and as weary as I was, I tried pressing my groin against the mattress to get some pressure there.\n\nHis fingers dipped in and spread my wetness around. Teased but did not enter me. It was maddening. Then the bed shifted.\n\nI flung my head back with a cry as I felt his cock press for entrance and then glide into me in one, long motion. In my state of being half-asleep, I wasn't sure if I was dreaming or not. But I didn't care as he slowly stroked in and out of me in this prone position. The pleasure wrapped around me, filling my head. My arms reached out, and I grasped the sheets.\n\n\"Taking you like this,\" he grunted as his knees straddled my legs, his fingers gripping my hips and his thumbs pressing into my lower back, \"you're so tight. It feels so damn good.\"\n\nShort cries came out of my mouth in gasps each time he entered fully and pulled back. I wanted to reach beneath me and rub my clit, but I was afraid to move. Afraid I'd wake up and break the spell. So I clenched my eyes shut and fell deeper into the dreamlike state where I could feel his cock filling me.\n\nAt one point, he paused, and I whimpered, calling his name. He shushed me as he adjusted his position. No longer resting on my legs, I felt his hands near my breasts, his thumbs barely grazing the sensitive sides. And then he began thrusting again.\n\nIn my muddled mind, I imagined him doing push ups over me, as with each inward movement with his cock, I felt the heat of his body against my back, ass, and calves. On his withdrawal, the sensation disappeared. After awhile, he shifted again and sat on the back of my thighs.\n\nAs he stroked now, he massaged my ass. His thumbs pulled and pushed my cheeks apart and then together. Over and over again.\n\nHe fell out once. I bit the pillow when he rubbed the tip of his cock back and forth against the length of my pussy, grazing over my clit twice, and then he drove back into me.\n\nI don't know how long it went on, but eventually I came. Not as hard as I had hoped, which made me think I truly had been dreaming. But I felt the warmth of his body as he laid down over me and wrapped me in his arms and the covers. My last conscious thought was wondering if he had found release or just intense pleasure like I had.\n\nI awoke the next day feeling like I should remember something important. Malcolm had left a note that he'd gone out early for his jog and wanted to let me sleep in. So I wandered the house, walking from room to room, looking for answers.\n\nThe tears started falling the moment I picked up a photo of Malcolm, myself, Drake, and Daphne at my party earlier this summer. The same party where I'd disappeared for almost two weeks. Sue had taken the picture right after I had opened a little plaque she'd had made for me commemorating the minor milestone in my writing career. She'd made me wear a tiny sombrero, and we were all laughing. I wondered where that little hat had gone.\n\nMalcolm found me curled up on the oversized chair in my office, still sniffling from my crying spell.\n\n\"Becca?\" He pried the frame from my hands and gathered me onto his lap. \"Talk to me.\"\n\n\"I really don't know what to say.\" I ran the back of my hand under my nose and pressed my cheek to his chest. \"I can't stop crying. What is wrong with me?\"\n\n\"You don't remember?\"\n\n\"That?\" I pointed behind him, indicating the picture wherever he'd set it. \"Of course I remember.\"\n\n\"No, sweetie. I think you were in shock yesterday. We'd had such a wonderful day. When you heard the news...well, I'm surprised you took it so well.\"\n\n\"What news?\" I pushed away from him. \"Am I pregnant? How would I have forgotten that? Much less that I took a test or went to the doctor?\"\n\n\"God, no!\"\n\nMy face must have reflected my unspoken horror to that kind of response because his own face was suddenly devoid of color.\n\nHe shook his head as he tried to backpedal. \"Not that I wouldn't be happy to hear that news. I just don't think we're ready for that yet.\"\n\nI made a mental note that we needed to revisit that topic. Soon. But for now... \"Then what? What could possibly have happened that I would be in too much shock to remember?\"\n\nHe took my hands and held them tight. \"Becca, last night at the reception, Drake told you that he and Daphne were moving out of state.\"\n\nI stared at him and blinked several times. \"What the fuck did you just say?\"\n\n\"I'm sorry, sweetie.\" He brushed a strand of hair behind my ear, his hand remaining there to cup the side of my head as his thumb caressed my cheek. \"He is leaving.\"\n\n\"You're wrong.\" I shook my head and pressed my fists to his chest, pushing as he pulled me to him again. \"He can't leave me. I need him.\"\n\n\"I know. I know.\" Malcolm kissed my head and rocked me until I felt like all of my strength had drained away along with my tears.\n\nI couldn't imagine my life without my brother. I knew he wasn't dead or dying, but it felt the same. Sure, Alexander was still only a couple of hours away, but we didn't have the bond that I had with Drake. Especially these last two years since I'd embraced a similar lifestyle as he did.\n\nWho would I lean on? Who would I talk to? And if Drake was leaving, Daphne was as well, which meant I'd be losing my new sister-in-law. My support when it came to questions on submission.\n\nAs if reading my thoughts, Malcolm said, \"You still have me.\"\n\nI wrapped my arms around his neck and nuzzled my head under his chin. \"I know. I'm sorry.\"\n\n\"It's okay.\" He let out a deep sigh. \"This is how I expected you to react. Not all jumping up and down, clapping and smiling and hugging everyone, wishing them the best.\"\n\nI leaned back and raised an eyebrow. \"Seriously? I did that?\"\n\n\"You'd had quite a bit to drink,\" he laughed and nodded. \"You're not a cold-hearted person. But hearing news like that? We expected...well, tears and begging. When you didn't do that, we were all very concerned. Your brother made me promise to make sure you were okay.\"\n\n\"I will be. Eventually.\"\n\n\"I know you will. You're a strong, independent woman.\"\n\n\"Oh, shut up,\" I mumbled against his shoulder.\n\nHe kissed me on the lips and helped me stand up. \"Now, how about we get some lunch? I think we should both get some nourishment before I take you upstairs and ravage you senseless.\"\n\nI screeched as he chased me out of the room, his hands groping my ass.\n\n###\n\nI had my calendar marked for when Drake and Daphne were leaving. I cried every time I put another red X on a square. We had just this weekend, and then they'd be gone on Monday. We'd thrown them a going-away party last Sunday after they'd returned from their weeklong honeymoon in Hawaii. I couldn't believe another week had almost passed.\n\nWhen Malcolm had said \"out of state,\" he really meant it. They were going all the way to California. Drake had been offered a promotion at his advertising agency, but he had to relocate to accept it. The move was actually good for Daphne, too, as she'd have opportunities to pursue more lucrative modeling jobs on the West Coast. All in all, I was happy for them.\n\nBut as I'd helped them pack during the past four days, a deep depression set in like I'd never experienced. I knew I would see him again. He promised to return for Christmas\u2014which was less than two weeks away\u2014and they'd extended an invitation for Malcolm and I to fly out to spend New Year's with them. Yet I felt a part of me was being ripped out and couldn't be replaced.\n\nI lay awake in bed Friday morning. Alone. Although I'd weaned Malcolm from staying with me until I woke up now that it had been seven months from my kidnapping ordeal, I'd wished he'd stayed with me today. I was losing my big, kinky brother, and I wanted all of the emotional support I could get as I wallowed in self-pity. I only felt slightly pathetic.\n\nI found a note that Malcolm was running errands and would bring back lunch. I wanted to keep to my routine, so I found myself at my desk. But I just stared at my laptop. For the life of me, my mind was as blank as the page before me. I tried doing some proofreading, but none of the words on the page made sense, so I shut down the program without saving any changes. I was contemplating going upstairs to just crawl back into bed when my cell phone buzzed that I had a new text.\n\nDaphne's name appeared with the message, \"You're not busy tonight, are you?\"\n\nI choked back a sob. I was going to miss these impromptu requests to go out with my new sister-in-law. My bestie, if adults could have those. I texted back, \"He hasn't said if we have plans. And I'm bored as hell right now.\"\n\n\"Good!\"\n\n\"Good that I'm bored or good that I have no social life since I moved here?\" I added, \"Especially since you're moving across the country,\" but I deleted the addendum before tapping the button to send the message. It wasn't her fault they were moving, and she'd said several times these last few days about how horrible she felt for them leaving me.\n\nThere was a swooshing sound as her answer came through. \"LOL Stop it. It's good that you're free tonight. I'll be at your house in 30.\"\n\nI shook my head and pressed the main button to put the phone to sleep.\n\n\"Your house.\" My house. Our house. I let out a big sigh.\n\nDaphne arrived half-an-hour later, and by the way her eyes sparkled when I opened the front door, she had some big news. I prayed that they had changed their minds about leaving, but I knew I couldn't be that lucky. And if she was pregnant...\n\nI closed the door and turned to watch her as she went into the open kitchen, retrieved a mug, removed a box of tea from a cupboard, and then set a kettle to boil on the stove. I didn't even know Malcolm owned a kettle. Why didn't I feel that comfortable in this house yet?\n\n\"So when are you going to tell me why you're so chipper?\"\n\nShe leaned on the lunch counter. \"We're having my bachelorette party tonight.\"\n\nI laughed and took a seat across from her. I shook off the feeling of d\u00e9j\u00e0 vu\u2014her at home in this kitchen, me the newbie getting advice. \"I could be wrong, but didn't you already get married? You're not longer a bachelorette. And you said you didn't want one, so I didn't throw you one.\"\n\nShe waved her hand in the air. \"I changed my mind. I'm a woman. I can do what I want.\"\n\n\"Don't let my brother hear you say that!\"\n\nHer eyes widened for the briefest moments as she froze, then she smiled and said, \"Well, consider it my last night of freedom.\"\n\nI laughed. I could play along. \"So what do you have planned on such short notice?\"\n\n\"A little road trip into the city. We'll take my car.\" She reached out and grasped one of my hands between hers. \"But the rest is a surprise.\"\n\n\"Now you have me intrigued. And possibly a little scared.\"\n\n\"Don't be scared. You'll enjoy it.\"\n\n\"I thought this was your bachelorette party? I'm not the one who's engaged.\"\n\n\"Not yet,\" she said with a wink.\n\n\"Whatever.\" I tried not to think about that topic too much. I was afraid it would jinx my relationship with Malcolm, and I was happy with our current circumstances. For now.\n\nShe finished doctoring her cup of tea and then started across the living room. When I didn't follow, she glanced back over her shoulder. \"Aren't you coming?\"\n\n\"Where?\"\n\n\"To pick out what you're going to wear.\"\n\nSometimes, my head hurt from trying to figure her out. Today was one of those days. The fact that it would probably be the last one for a long time popped to the front of my thoughts. I shook my head and joined her as she went upstairs to my new bedroom.\n\nWe spent at least an hour trying on different combinations of tops and bottoms. Or rather I was the one trying on the clothes. When we were done, there were two piles on the bed: one huge and full of discards, the other small with possibilities. Literally. There were only two options for a top and one for a bottom. I hated to find out what her opinion would be if I let her choose my underwear for tonight.\n\n\"Are you telling me you don't like my style?\" I fingered the tight, black pants she'd laid out beside me. \"Out of my entire wardrobe, this is all you think is suitable for tonight?\"\n\n\"Not at all. You've expanded your closet quite well since you started dating Malcolm.\"\n\n\"But?\"\n\n\"No butts.\" She picked up one of the top options, if you could even call it that. \"It's a special occasion. I want you to feel comfortable but also sexy.\"\n\n\"And you think that that top gives off the impression that the wearer is comfortable? It practically screams prostitute! I don't think it's even been out of the closet. See, the tags are still on it.\"\n\n\"What better time to break it in than tonight?\" She held up the black material by the barely-there straps. It was mostly just a front panel with a halter strap around the neck and two strings that tied around the mid-section. The light glimmered off the silver flower decals surrounding two Chinese letters. \"Put it on. I want to see.\"\n\nI rolled my eyes but took the scrap of fabric from her. She would see in a second why I'd never worn it. Hell, I couldn't even remember why I'd bought it!\n\nI popped into the bathroom, yanked off my T-shirt and bra, and managed to put the \"top\" on without dying of laughter. Then I strutted back into the bedroom with my hands out, a stupid grin on my face, and said, \"Ta da!\"\n\nHer eyes widened, and she clapped her hands. \"It's perfect!\"\n\n\"Oh, shit.\" I mumbled and put my hands on my hips when she circled her finger in the air. I turned around and let out a deep sigh.\n\nThe thing I was wearing revealed my entire backside and was supposed to stop just above my bellybutton in the front. But with my ample chest\u2014which the fabric barely covered\u2014the bottom hem landed much higher up, making the top look more like half of a tube top.\n\nDaphne laid back, supporting herself with her forearms. \"What do the symbols mean?\"\n\nI shrugged. \"Probably 'fuck me.' It would be my luck.\"\n\nOur eyes met, and we both laughed so hard tears were running down our faces in a matter of seconds.\n\nWhen I could speak again, I asked, \"Can I at least try the other one on?\"\n\n\"Yes, I was just kidding anyway. I would never have let you out of the house in that.\" She tossed me the second top along with a big grin, and I returned to the bathroom to change, shaking my head.\n\nI felt much more comfortable in the navy, baby-doll shirt. And I felt sexy. It had spaghetti-straps and a plunging neckline that showed off my girls. In fact, the bustier part of the top was overlaid with navy lace. The Lycra skirt of the top hung down just past my pelvis in the front and my ass in the back. If I hadn't found it in the regular clothes section of the store, I would have thought it was lingerie.\n\nWhen I came out of the bathroom this time, Daphne started crying again. She had her hands pressed to her cheeks.\n\n\"Don't tell me you don't like it.\" I did a slow turn, trying to catch a glimpse in the dresser mirror of how it looked in the back.\n\n\"No, I love it.\" She stood and gave me a hug. \"You look amazing.\"\n\n\"Uh, thanks.\" I hugged her back. We really did need this one last hurrah. \"Do you think I could wear something else with this, though? It is December.\"\n\nShe wiped away her tears and nodded. \"Fine, but you have to wear the black leather jacket with the silver grommets. Oh, and your black boots.\"\n\n\"Yes, Ma'am.\"\n\nDaphne disappeared into my closet, assumedly to search out the two items.\n\nI'd texted Malcolm to bring back enough lunch for three. Daphne and I took off to the city after we put away the rest of my wardrobe and ate. We made a pit stop at my condo to get ready where I allowed her to curl my hair and do my makeup after she had insisted. I felt like a Barbie doll, and here she was the model. But she wasn't looking too bad herself in a red, mini-skirt dress with a corseted top, and thigh-high black boots, her hair in a low ponytail. Very sleek and runway ready.\n\nOnce I'd passed her inspection, we took a cab downtown to a popular bar where we had a couple of drinks. It was a little odd, this unexpected after-the-wedding bachelorette party. But she seemed to be enjoying herself as she swayed in her seat to the heavy base from a DJ, her eyes closed and a smile turning up the corners of her dainty mouth.\n\nI had just finished my cocktail and was going to order another round when she tugged on my hand.\n\n\"We gotta go!\"\n\n\"Already?\" I tried to check my watch, but she was already at the door. We were in the backseat of a cab before I could take a deep breath. \"What was that all about?\"\n\n\"Don't want to be late. We have a schedule to keep.\" Daphne rattled off an address to the driver and then sat back with a heavy sigh. The window beside her went down a couple of inches, and she turned to me with a smile. \"Are you enjoying yourself?\"\n\n\"Shouldn't I be asking you that question? It's your party.\" I cocked an eyebrow at her, and she laughed as we passed under a streetlight.\n\n\"You look so serious.\"\n\n\"Mostly curious.\"\n\nShe grinned. \"Just relax.\"\n\nThe traffic thinned out as we headed north of the city and into a more residential area. I laid my head back and stared out my own window, shivering a little from the winter breeze drifting in from her side of the car. Relax? I'd try to. But this whole day was just so confusing.\n\nI was lost in my thoughts and hadn't realized we'd stopped until Daphne was nudging me to slide out of the car. She paid the driver and scooted out after me. I followed her up a short sidewalk to a Victorian-style house all lit up against the night sky. The rest of the street was mostly dark with only a few cars in sight. A sense of dread slid up my back as the cab pulled away, leaving us standing there alone in a strange neighborhood.\n\n\"Where are we?\" I resisted the urge to grab her hand.\n\n\"A surprise.\"\n\nI rolled my eyes and rubbed my hands up and down my arms to stay warm.\n\nWe ascended the steps to the porch, and the front door to the house opened a minute after Daphne rang the doorbell. She gave a man our names, and he said something about going straight to the last door on the right.\n\nThe light from inside was bright, and I blinked several times as my eyes tried to acclimate to the change. When I didn't move, Daphne took my elbow and guided me through the house to wherever God knew we were going. I think we passed through a living room and a kitchen. By the time I could see clearly again, we were descending to a lower level.\n\nWe'd barely hit the last step when I heard it. The repetitive taps of the closed hi-hat between the snicks of the snare drum under the Gregorian chants. They all wrapped around my head and crept through my veins like ice.",
        "My hand gripped the railing tighter. This wasn't the cold I'd felt outside. This was worse.\n\nI couldn't breathe. My chest hurt. I was afraid to close my eyes to try to block the familiar music lest it enhance the feeling that I was immobilized and somewhere else, not freely standing in a stranger's basement. I tried to tell myself to calm down. It didn't work.\n\n\"Becca?\"\n\nDaphne's face swam before my vision. Her frown and searching eyes indicated that she was worried. Just as soon as it had appeared, the brief feeling of paralysis was gone.\n\n\"Are you okay?\"\n\n\"That song.\" My voice was hoarse. \"I know it may sound irrational...\"\n\nDaphne squeezed my hand as we weaved through small groups of three-to-four people. \"It's okay, you don't need to explain. Rest assured that he's not here. You'll stop automatically associating bad memories with things you enjoy. It'll just take time.\"\n\nI nodded and tried to tune out what had been one of my favorite songs, \"Sadeness\" by what had been my one of my favorite artists, Enigma. Thankfully, my nemesis had only ruined that artist for me and not music entirely during sex. Malcolm had been more than happy to research and introduced me to new songs for our scenes.\n\nWhen Daphne gave advice, I listened. I wasn't privy to all of the details of her past, but I did know she'd been in an abusive relationship before. A kinky one. And she'd willingly stayed until he'd decided one day he was moving on. Thankfully, she'd formed some friendships with other women \"in the scene\"\u2014as they sometimes called living in the lifestyle\u2014and they'd introduced her to the private club I'd been taken to two years ago now. The same club where she'd met Drake. If she said I'd get over my fears, I knew I would. Eventually.\n\nWe had approached the other side of the basement by now. Daphne pointed out two seats with her name on them in the first of three rows of twelve chairs set up in a semi-circular fashion. Although she chose to sit down, I used the ruse of discarding my jacket and putting it on the back of my chair to scope out the room.\n\nThe arranged chairs faced an inset into the wall the size of my new office at Malcolm's, which was about twelve feet wide by ten feet deep. Also like my office, it had probably been a small bedroom at one time. Take out a wall, and it was now what appeared to be a stage.\n\nA single step led up to a platform about a foot from ground level. The floor looked like it had wooden boards that had been painted black, and the room itself had black walls. A table with a long, narrow box on top sat against one wall. Both were black, of course. I assumed that the ceiling was the same color, but I couldn't be sure since it was hidden by a soffit. In black. The whole thing looked like a permanent backdrop from a dismal play, complete with matching curtains framing the set.\n\nAt the center of the stage was a dulled-metal contraption with a rectangular base, a thick vertical pipe at the back, and a rectangular grid up above. The entire device reminded me of the picture we used to draw on the chalkboard at school to play the hangman game. The one difference in this case was the variety of hooks that dangled from the top grid instead of a rope noose.\n\nHangman 2.0. Adult Version. I stifled my giggle.\n\nThe rest of the basement was the typical man-cave. Bookshelves with sports memorabilia lined the wall by the staircase. Framed movie posters decorated the one farthest away where a couple of couches and a flatscreen TV flanked a fireplace. The wall on my left housed a bar with mirrored shelves of glasses and colorful bottles of alcohol. Just like at Malcolm's house, this would have looked like a normal lower-level when the curtains were drawn over the stage area.\n\nSeveral men were imbibing at the bar. One of them glanced away from the group, the light shining off his bald head. He smiled at me when our gazes met, and I gave him a polite smile in return.\n\n\"Daphne, is this a dungeon party?\"\n\n\"Yes. Put this on.\"\n\nI finally sat down and noticed my friend was holding out a red, rubber bracelet. I put it on my left wrist. She pulled another one out of her purse and put it on her own wrist. They were just like the glowing ones we'd worn at the private club. Red meant we were taken.\n\nI was going to ask her if it was really necessary, but I had glanced back at the bar again just in time to see the baldheaded man approaching. I nervously ran my hand through my hair and smiled at him again. Suddenly, he stopped, gave me a brief nod, and went back to his buddies.\n\nThe bracelet caught my eye as I lowered my hand and I groaned. \"Good grief, does this thing ward off vampires and werewolves, too?\"\n\nDaphne grinned. \"Only if they're kinky and a Dom.\"\n\n\"Of course.\" I shook my head and checked my watch. It showed we'd been here for a good ten minutes. \"So give me the scoop on this party. Do we have to watch them have sex?\"\n\nShe rested her arm on the back of her chair as she turned to face me. \"I don't know about the sex. It depends on what the host has planned. I don't think it's usually advertised what the topic will be on. And speaking of our host, his name is Jesse. Malcolm trained under him for several years in Europe.\"\n\n\"Ah! The French connection.\" My interest had been piqued when Malcolm had understood the Frenchman at the bar that I'd been kidnapped from earlier this year. Malcolm had later filled me in that he'd once lived over in France for awhile. He had never gone into what he'd done over there, though. Now, I had a little more insight...and an opening to needle him on the topic.\n\n\"Yes. Drake has met him a couple of times, too. Malcolm and Jesse are still really good friends from what I've been told, but Jesse has been living abroad until recently. When Malcolm found out that he was back, he procured us invites since you missed that dungeon party.\"\n\nThat had been the same night we'd gone to the private club...because we'd missed the party due to having to go to the police station to press charges against Brian after I'd slugged him for molesting me in a restaurant's bathroom hallway. I only wished he'd gotten the picture then. \"Well I'm glad you wanted to share your special night with me in this way.\"\n\n\"My pleasure.\" Daphne patted my knee. \"While he had hoped to be with you at your first party\u2014which is long overdue, in my opinion\u2014Malcolm knew you'd be comfortable with me. Plus, we needed a girls' night out.\"\n\nYes, we did. I didn't want to think about the fact that it would probably be the last one for a very long time now. The lights flickered at that moment, and the din of chatter grew softer. I could hear the rustling of clothes and soft squeaking of the metal folding chairs as the rest of the guests sat down.\n\nThe bald-headed man who had chosen to avoid me stepped up onto the platform. He drew the curtains across the stage and turned to face us. \"Thank you all for coming to our little soiree tonight. It's been a long time for most of you. Let me just say I'm glad we're all back here again. I do see a few new faces in the crowd. Don't be nervous. Just sit back, relax, and enjoy the show.\"\n\nThe main lights went off completely a moment later, making it very dark. I glanced down to see that my bracelet was glowing. I tucked my wrist under the edge of my shirt and leaned toward Daphne as I heard other voices whispering around us.\n\n\"Was that Jesse?\"\n\n\"No. There's usually a spokesperson for these parties so the performers can get prepared both physically and mentally. But we'll see him soon. Drake said Jesse will find us afterwards to make introductions.\"\n\n\"That's very nice of him.\"\n\nThe curtains suddenly parted. Whatever lighting that was hidden by the soffit was focused on the contraption. Which was now accompanied by a woman. The man who had opened the curtains joined her. I hadn't seen or heard them sneak past us.\n\nThis had to be Jesse. He had dark, buzzed hair and was dressed all in black. His military-esque upper body stretched his T-Shirt, and tattoos peeked out from the shirtsleeves on both biceps. The lights made his tanned skin glow. His eyes sparkled. His mouth settled into a polite smile as he stared out at us. He was standing beside the contraption, and had to be only a few inches shorter than the top grid.\n\nI gulped and slid down a little in my chair.\n\nLess than ten feet away, everything about the man exuded dominance. His presence alone commanded attention. I wouldn't necessarily call him handsome. And I wasn't really into the overly-defined muscles of the body-builder type. Yet, something about Jesse's physicality made him attractive. \n\nI leaned toward Daphne. \"I wonder what it's like to be under his control?\"\n\nShe pinched my arm. \"No matter what happens tonight, remember this: you belong to Malcolm.\"\n\nI sat up straighter. Her choice of words irked me a little. I wasn't an object. Something to be owned.\n\nDrake and Daphne were married now. Did she consider herself not just his wife but also belonging to my brother as a result? His possession? And was that her natural concept of marriage, or was it onset by being in this lifestyle?\n\nI wasn't wearing a ring, so in my mind, Malcolm laid no permanent claim to me, vanilla or otherwise. Did he feel the same? Not for the first time\u2014although, I'd done well to suppress my thoughts and feelings on the subject of marriage\u2014I wondered when it would be my turn. Did he think about taking that step with me? Did it include more than what we currently had besides an official license of the state?\n\nI was still rolling those thoughts over in my head while I studied the woman beside Jesse. She was shorter than he was but only just barely. Her blonde hair was in a thick braid that almost reached her ass, and she wore a short, silky-red robe with nothing on her feet.\n\nShe had stepped up onto the base of the contraption. Our host had bound each of her wrists with a leather cuff. He was currently removing her robe, and revealed that she was wearing a nude-colored bra and thong underneath.\n\nMy first thought was that she looked like she belonged on an X-rated Victoria's Secret commercial, all tanned, curvy skin with just enough coverage to still leave a little to the imagination. Albeit very little. I heard more than a few moans, presumably from the men in the audience.\n\nJesse pulled a blindfold out of his back pocket and placed it over the woman's eyes. He attached a chain to each of the cuffs on her wrists and secured each chain to a hook on the grid above. Then he left her while he unpacked the box on the tabletop.\n\nShe just stood there, as if she were a trophy on display. Her face was relaxed. She didn't even fidget. So I moved my gaze to see what Jesse was doing. He set what looked like a red, taper candle on the table and chose a flogger with red and black strips from the options he had laid before him.\n\n\"Lady Juliet, are you ready to begin?\" His voice was deep, gravelly. I imagined he smoked, which made him less attractive in my eyes. Which was good, because it helped ebb the building lust in my head.\n\n\"Oui, Master Jesse.\" Her accent made me think she was French. She sounded like a vampire\u2014her s's pronounced as z's\u2014and his name came out as 'Mazta Yehzee.'\n\n\"Today's safe word is red. Please repeat the safe word out loud, Lady Juliet.\"\n\n\"Zee zafe word eez reed, Mazta Yehzee.\"\n\nI pressed a fist to my mouth and nose to stifle a snort as I thought, \"Zees waz going to be an eenteresting evening.\"\n\n\"Very good,\" Jesse said. \"We shall begin.\"\n\nA song with a gentle beat filled the air. I held my breath, expecting him to flog her right off the bat. To my surprise, he slowly dragged the strands up the front her left leg from her toes to her hip. I got goosebumps just from watching it.\n\nThe lyrics and rhythm of the song entranced me as Jesse trailed a path up the back of her leg and then repeated the motions on the front and back of her right leg.\n\n\"This is my word. This is my way. Show me a sign. Sweep me away. This is my word. Heartbreaker. Gatekeeper. I'm feeling far away. I'm feeling right there.\"\n\nI was falling in love with this song. I managed to get my iPhone out of my jacket pocket without taking my eyes off the couple. Keeping the screen as close to my shirt as possible to avoid the light disrupting anyone else, I opened the Shazam app. The words \"Smoke and Mirrors, Imagine Dragons\" appeared on the screen after a few seconds. I was tucking the phone back into my jacket pocket when Daphne elbowed me. So much for being discreet.\n\nOn stage, Jesse had moved to stroke the flogger across Juliet's abdomen. Her breasts. Her arms.\n\nI saw Juliet's mouth part in what I assumed was a gasp, but that was her only evident reaction.\n\nThroughout the entire song, Jesse just glided the strips over her skin. Slowly. Methodically.\n\nSo. Fucking. Erotic.\n\nI licked my dry lips and fidgeted a little in my chair. Deep inside, something clenched, and my breathing grew more shallow. I could feel my heart beating faster.\n\nJesse switched to a riding crop as the music changed to something instrumental. I struggled not to hyperventilate as the familiar strands of another Enigma song met my ears. When Daphne's fingers curled around mine as I searched for her hand, I almost cried. I bit my lip instead, concentrating on the scene as Jesse stroked the end of the crop across Juliet's skin.\n\nNo matter what he did, her body remained stoic. Was she not affected? Or was her restraint that good?\n\nDespite the song, I found myself imagining that crop moving over my own body. And damn it all, Jesse was the one doing it to me. It was easier to picture that when he wasn't talking.\n\nI wondered if I could have been on stage with all of these people watching me, even blindfolded and wearing just underwear. Hell, I'd done it the one time in Malcolm's basement for the rope-bondage demonstration\u2014and in front of my brother no less. But this? Evidently, I was into voyeurism. Not so sure about exhibitionism.\n\nJesse paused to retrieve something else off the table. He unhooked Juliet's bra, releasing her breasts that bounced only slightly as they settled into round orbs with quarter-sized, rose-colored areolas and stiff nipples the size of pencil erasers. Good Lord, even her breasts were perfect.\n\nHe raised the straps up her extended arms and unhooked each chain from the grid just long enough to remove the bra. When she was standing in only her thong, Jesse secured a small clamp on her left nipple. She merely pressed her lips together. Even as he looped the long chain attached to the clamp around her neck, which pulled her nipple up, raising the weight of her whole breast in the process. The other clamp was attached to her right nipple, and he adjusted the chain so that her breasts hung evenly.\n\nMy own nipples hardened. Painfully. I crossed my arms and hoped it wasn't obvious that I was rubbing them against my breasts.\n\nWhen he smacked Juliet's breast with the flat, leather end of the riding crop, I jolted upright. I thought I heard a cry, but Juliet's mouth was closed. He repeated striking the underside of her breasts at least a dozen more times each. He gave her a moment of respite while he walked behind her. The song ended. When another one did not begin, it felt like the room was holding a collective breath.\n\nI was expecting it, but I still jumped when Jesse struck the back of Juliet's legs. I could hear gasps echoing around me. The whooshing sound and resulting sharp thwack as he landed each blow.\n\nHer knees were bent now, although she was still supporting herself with her legs. I expected that by the end of this session, she'd be hanging by her arms. I wondered how long she could last like that. Would she even get that far without saying the safe word? I knew I probably wouldn't.\n\nAt one point, Jesse turned Juliet around so that she was facing the post, her backside to us. There were pinkish marks up and down her legs. He switched to the flogger with leather strips again and alternated between stroking and whipping.\n\nI crossed my legs and hugged my arms tighter to my chest as I watched the pink areas turned red. It was arousing. And yet a little disturbing.\n\n\"Lady Juliet, would you like to come?\"\n\n\"Oui, Mazta Yehzee.\"\n\nHe continued to flog her for another minute. Suddenly, he yelled, \"Come!\"\n\nJuliet's cry broke through the otherwise stillness of the room as she flung her head back. While she was still shaking, he turned her around again. Her legs went a little more slack as she rested her ass against the post. Her hands clenched and unclenched several times in their restraints.\n\nWhen Jesse unhooked the chains from the grid, I was a little disappointed but also glad that it was all done. The scene had affected me in ways I hadn't dreamed of. It wasn't like a porno movie. They weren't acting. Hell, there hadn't even been any sex. But it still left me with the feeling like I had just witnessed that firsthand. And I couldn't find quick release being that I was in a room full of other people.\n\nI took several shuddering deep breaths and glanced at Daphne. She was still watching Jesse and Juliet, the corner of her mouth turned up and her head tilted to the side. She looked enraptured.\n\nA rattling sound returned my attention back to the stage. The chains had been reattached further back on the grid. Juliet, herself, had backed up to the pole on the contraption.\n\nI sat up and crossed my legs the other way. Act II. Bring it on.\n\nJesse suddenly removed the clamps. Juliet's nipples looked red and swollen. She rose up on her tiptoes. Her lips parted, but she did not make an audible sound.\n\nI wondered, if I were closer, would I be able to hear her labored breathing? I know that's what my reaction always was when Malcolm released the clamps he used on me. I tended to cry and moan, too, especially when my throbbing nipples were soothed by his hands or lips. I could be such a wuss when it came to pain.\n\nJesse? He did nothing to comfort his partner. In fact, he turned his back on her and toyed around with the objects on the table.\n\nMy pelvic muscles clenched again as I watched him pour a clear liquid into his hands and then rub it over her abdomen. I inhaled sharply when he covered her breasts with the liquid as well. He didn't even do it in a sensuous manner, yet I would have been writhing from finally being touched by human hands.\n\nJuliet? She was still. Silent. Although she could not see, was she privy to what was coming next? Or was her partner just choosing what to do on a whim and she was at his mercy?\n\nFittingly, the sounds of Bruce Springsteen's \"I'm On Fire\" met my ears as Jesse picked up the red, taper candle and lit it.\n\nI had heard of playing with candle wax, but we had never attempted it ourselves. And I had never seen it done except in videos online. I stared transfixed as the candle tipped. Sucked in my breath as the wax spilled out in slow motion.\n\nJuliet hissed as the red liquid touched her right nipple, and the chains rattled above her as her arms belied the strength she was trying to convey. I saw her bite her lower lip as Jesse dripped wax on the swell of her breast. I swallowed with effort, trying to imagine what she must be feeling, both the pleasure and the pain. Which was greater? Which did she desire more? Or were they the same to her?\n\nWax was applied to her left nipple and breast in the same fashion. Down the valley between her breasts. Some of it dribbled in a tear-shape to her bellybutton before it hardened. He dotted the flat part of her chest between her neck and the top of her breasts. Then he trailed lines along the sensitive juncture of her pelvic region where it met her legs on either side of the meager fabric swatch covering her. He had to light the candle again to give her legs a similar treatment.\n\nWhen he was done, her upper body looked like a tan painter's canvas with red paint splattered on it.",
        "\"Lady Juliet, would you like to come again?\"\n\n\"Oui, Mazta Yehzee.\" Her voice was barely audible.\n\n\"Come!\"\n\nShe shook so hard I thought she might break the chains. Her mouth gaped in a silent cry. Some of the dried wax cracked as she convulsed, flaking off and falling to the floor. She hung now by her arms, her legs bent and no longer supporting her body. And Jesse stood there watching her. He had not put his hands on her in any intimate way except to rub what smelled like baby oil on her body, and she'd achieved orgasm not only once but twice.\n\nI had been expecting full-on, hardcore sex from a dungeon party. What I got instead was an awakening to a whole new world. One that I couldn't wait to experiment in. With Malcolm, of course.\n\n###\n\n\"Becca, close your mouth. You're drooling.\"\n\nI swiped the back of my hand across my lips and looked around. The lights were coming up in the main room, and the curtains were closed again.\n\nMr. Baldhead had stepped up on stage. \"I hope you all enjoyed tonight's show.\"\n\nThere was a loud round of applause and a few whistles.\n\n\"There are refreshments upstairs. For those of you who are going to stick around, please see me for your room assignments. A reminder for those of you leaving us, please ensure that you have all of your belongings as we will be closing the doors in an hour at promptly ten o'clock. They will not be opened again until nine tomorrow morning.\" With a wink, he added, \"Thank you, for coming. Goodnight!\"\n\nI could hear the people around us laughing and talking. Daphne's voice joined theirs. My hands lay limply in my lap. I felt like I'd been elevated to the peak and left wanting. I hadn't been touched physically, yet my body was reacting as if I had been.\n\nIt was almost as if I were in a dream. Images of the scene kept flashing through my head. I'd wanted so badly to have Jesse just take Juliet after all he'd put her through. Give her some relief. But Malcolm had talked to me extensively during our hiatus on the East Coast about not always expecting the norm in the scene. Not everyone found fulfillment the same way. Therefore, I shouldn't be so disappointed when things didn't go the way I thought they should and just enjoy the moment for what it was.\n\nMy thoughts turned to Juliet and her tolerance. I'd had plenty of training in resilience these past two years since meeting Malcolm. I was able to resist my own impulses much better now. And I was able to withhold release for the most part until allowed. But to actually orgasm on command when Malcolm hadn't touched me with some part of his body? I don't know if I would be able to do that. And I still struggled with tampering down the noises that I'd adapted to using when I wasn't supposed to speak in a scene.\n\n\"Are you okay, Becca?\" Daphne's voice brought me out of my haze.\n\n\"Hmm?\" I shook my head and smiled. \"That was...amazing.\"\n\n\"I'm glad you liked it.\" She handed me my jacket as she checked her watch. \"We only have about thirty minutes to meet Jesse and get out of here before they lock us in for the rest of the night.\"\n\nI noticed everyone else had departed to go upstairs. Before we could head that way, the curtains rustled. Jesse and Juliet\u2014now clean and in a red, sheath dress\u2014emerged. They were talking to each other but stopped when they saw us.\n\n\"I'm sorry, we were just leaving,\" I said, pointing blindly towards the stairs.\n\n\"No apologies needed.\" Jesse' s smile was pure white and radiant.\n\nOkay, maybe I'd been wrong about him smoking. His charm went back up a notch on my mental meter. My legs felt wobbly, and it was suddenly hot in the room.\n\nHe glanced between the two of us for a moment. \"You must be Lady Daphne?\"\n\n\"Yes,\" my friend said, taking his outstretched hand. I heard her sigh, which made me giggle. Did he have this affect on every woman he came into contact with?\n\n\"So you would be Lady Becca.\" His eyes trained on me as his warm hand enveloped mine. \"I have heard a lot about you.\"\n\nI'm sure my smile looked cheesy. \"I hope nothing bad.\"\n\n\"Oh, not at all. Welcome to my home.\" He turned and put his hand on his partner's shoulder. \"May I introduce Lady Juliet?\"\n\n\"Eet eez a pleazure,\" Julie said in her vampiric-French accent.\n\nI just smiled and gave her a brief nod since she did not offer her hand. \"Likewise.\"\n\nHer eyes dipped and then returned to mine. As her mouth curved into a smirk, I wished I could read her mind. Whatever impression she'd just read of me, she seemed to be amused. I was not.\n\n\"You have such restraint,\" Daphne said, breaking the awkward silence. She waved her hand between Jesse and Juliet. \"The show was wonderful. Thank you very much for the invitations.\"\n\n\"Did you enjoy it?\" Jesse asked, his eyes focused on me.\n\nI nodded. \"Yes, very much so.\"\n\n\"I believe Malcolm said this was your first party? I am honored.\"\n\n\"Yes, it was. We feel privileged to be here. Thank you.\"\n\n\"Veuillez consulter nos autres invit\u00e9s,\" Jesse said to Juliet.\n\nShe gave a slight nod. \"Bien s\u00fbr, Monsieur.\"\n\nJesse kissed both of her cheeks and turned back to us as she departed. \"I apologize. Lady Juliet is more comfortable in her native French. She is going to see to our guests.\"\n\n\"I need to excuse myself, as well, to find the ladies' room.\" Daphne squeezed my hand.\n\n\"Let us go somewhere a little more comfortable,\" Jesse said as soon as Daphne was out of earshot. He gestured to the stage area.\n\nI raised one eyebrow and laughed. \"As enjoyable as your show was, that didn't look like the most comfortable position for a conversation.\"\n\n\"And as intriguing as the image is in my head right now, it will have to wait for another time.\" He flashed me that lightning-white smile, and my heart skipped a beat.\n\nI was hesitant to follow, but he had piqued my curiosity. Especially when he pushed the curtain aside and walked up to the wall. My jaw dropped as a pocket door slid open, he reached inside the doorway, and a hidden room lit up. So that's how they got on stage in the dark without us seeing or hearing them!\n\n\"Ladies first.\"\n\nThe new space was fairly large and had been divided by a large, Oriental-themed screen. On one side was a walk-in shower, pedestal sink, and a toilet. The other half held a couch, a dressing table, and a rolling clothes rack with Juliet's red robe. There was another door next to the rack.\n\n\"Let me guess. Your house used to be an old speakeasy?\"\n\n\"You have found out my secret.\" Jesse chuckled and pointed to the far end of the couch as he sat down. \"To be honest, it is just another access to my personal rooms.\"\n\n\"Plural? Interesting.\" I wondered what his tastes encompassed to require multiple rooms to hold them as I sat facing him and pulled my inside leg up under me. \"I take it that you are a very private man to have hidden away your hobbies as you have.\"\n\nHe studied me for a moment and then said, \"You are very observant.\"\n\nI shrugged. \"A casualty of being a writer for so long.\"\n\n\"A very good writer, from what I am told. Alas, I have yet to you read your work. I shall rectify that soon.\" He stroked his chin with his forefinger and thumb. \"Observance is also a good quality for a submissive to have, Lady Becca. It helps in knowing what her Dominant wants or needs.\"\n\nGoosebumps prickled my arms. \"Shouldn't you just call me Becca? I understood titles are used only in scenes or during parties.\"\n\n\"What are we at, if not a party? The main attraction may be over, but the show does not officially end until the morning.\" His grin suddenly looked less honorable and more lascivious as he tilted his head to the open door and the room beyond where three dozen people had sat until only a few minutes ago. \"Besides, one in my position does not always adhere to traditions if they do not support common courtesy. I refer to all of my guests\u2014and especially partners\u2014with their proper title regardless of whether or not we are in a scene. It is a term of respect in my home.\"\n\nMy eyes narrowed. \"All of your\u2014\"\n\n\"Yes, I have many partners under my tutelage, however not always at the same time. Most relate to the role of a slave, which I prefer. But it is not for everyone. Some\u2014like yourself\u2014are unwilling to give completely of themselves and therefore remain at the submissive or bottom level. While they find the role pleasurable, they are barely skimming the surface of what they could be enjoying. Being a slave delves below the surface, down into the abyss. Harvesting what is found there. It requires complete commitment and is much more rigorous and consuming in regards to training. But the end result is so much more rewarding. Then there are the switches, who are a whole other dynamic.\"\n\nI was going to object to his opinion that I\u2014or anyone else\u2014who related to being a submissive was basically just being stubborn, but his last comment distracted me. \"Switches?\"\n\n\"The men and women who enjoy alternating being the one in control and the one being controlled in a scene. I have trained a few myself.\"\n\n\"Do you define yourself as a switch then?\"\n\n\"No, I am a Master. Although I have allowed others to dominate me, it has only been in training. It is understood that I am not relinquishing control but controlling the situation by allowing one to think they are controlling me. It is a fine line.\"\n\nA fine line named Ego.\n\n\"Tell me, Lady Becca, how long have you been in the lifestyle?\"\n\n\"About three years.\"\n\n\"With just the one partner?\"\n\n\"No, two.\" My cheeks burned. I didn't want to go down that road and prayed that he didn't want me to elaborate any further.\n\n\"You are nubile. Give it time. Put yourself out there. Attend parties such as mine.\" He shifted his eyes to where my left arm rested on the back of the couch. The arm with the red bracelet still encircling my wrist. \"It is important to be approachable. Do not be afraid to accept leadership. Be open to learning all that you can. Not all Dominants are the same. With time, you will combine and use your experiences to grow and be more responsive with each passing partner.\"\n\n\"That's merely a matter of opinion. I prefer to stay monogamous and see where it goes.\" It was impossible to ignore the smirk that curled one corner of his lips, as if my comment only proved his theory that I was hard-headed with antiquated beliefs. He probably thought one couldn't just have a single partner and truly be in this lifestyle. Instead of rattling me, his reaction stoked the fire under my already smoldering soapbox. \"Are you against having a relationship? Besides it not being safe having multiple partners, don't you want more than just sex?\"\n\n\"Being in this lifestyle requires mental maturity. Understanding that this is not a dating pool for casual flings but a world of adults who want to nurture that innate desire to either control or be controlled. And those desires are met mostly through having sex in some form or another. I make it clear from the onset what the partnership entails. Including using the utmost protection possible if my partners request it, although I have permanently seen fit to ensure there are no surprises on my end.\"\n\nI blinked at him. He'd had a vasectomy to prevent knocking up his girls? While he may have thought it a noble gesture to consider his partners in that aspect, in all truth, it was conscientious of him to the rest of society to assure that no egotistical mini-Master Jesse's roamed the earth. And that still left STDs.\n\n\"While emotions cannot be avoided,\" Jesse continued, \"it is important not to let them get in the way of the goal: to achieve the ultimate satisfaction possible through whatever means the scene entails. Usually, it is just for the Dominant partner. A subordinate should never assume they will always receive pleasure from a scene, as it is not about them but about pleasing their Dominant. The subordinate will experience release and pleasure only if the Dominant desires and allows it.\"\n\nGood grief, he was another Christian Grey wannabe. Or Brian Hughes for that matter. And that made me shiver. Was the whole world so obsessed with those books\u2014and now the movie\u2014that even the most hardcore practitioners of the BDSM trade were taking after a fictitious character? I bet that Jesse required an NDA as well with his plethora of partners.\n\nStill, I was curious. \"So no relationships. Not even with Juliet?\"\n\n\"Lady Juliet is special.\" His smile softened to something more wistful for a long moment. Then he shook his head slightly, as if remembering I was still there. \"The sex has been good, yes? Amazing, even?\"\n\nWay to flip the focus onto me. Thanks. But I smiled politely. \"I would be lying if I said no.\"\n\nHe nodded slowly, his smile now grim, as if he had shifted completely from camaraderie mode into teacher-student mode. \"Subordinate partners tend to see their obedience as an end to get to that means. If I obey him, he will fuck me. But as I said, sex and pleasure should not be an expectation every time. It is unfortunate for all parties involved that one cannot or will not obey just because they want to, even if they get nothing in return. Continual resistance of a subordinate reflects poorly on their partner's skills as a Dominant. If one cannot get his subordinate in line, how effective of a Dominant is he? How truly invested is the subordinate?\"\n\nI opened my mouth to object, but he held up a finger.\n\n\"To the Dominant, the sex is highly enjoyable. But it is the control that is the most important. It demands respect from the subordinate, who learns that respect is earned once it is given. But it is not just about being able to tell the subordinate partner what to do. It is also about knowing you were able to help them open up and understand their true, inner self. To balance them on that careful precipice with complete trust. \"\n\nI waited for him to add, 'To catch them when they fall,' but he did not. It was such a shame. I simply said, \"I see.\"\n\nBy the way his lips pursed and his brow creased, he probably thought I was mocking him. But I didn't really care anymore. I would wager he'd claim there was no way I could understand what he was talking about because I wasn't a Master. And of course, I'd never feel the way he thought a woman should feel because I didn't embrace the life of a sex slave.\n\nThat made me angry. Very angry. Because if Jesse really thought that way about me without knowing me, then he definitely didn't think very highly of Malcolm, the same man who had trained under him for several years and apparently still considered Jesse to be an important friend.\n\nI crossed my arms and sat up straighter. \"I think you have the wrong impression of me and other submissives entirely. We are not any lesser of a partner just because we do not identify with a specific level or have the same predilections as you or any other Dominant partner would prefer. Everyone has their own opinions and preferences. Liking something different to a different degree doesn't make them wrong or inferior, just different. And this lifestyle means a hell of a lot more to me than just sex. I\u2014\"\n\n\"You are more lovely than Malcolm led me to believe.\" Jesse leaned toward me suddenly and caressed my cheek ever so lightly with the back of his fingers. \"I do not mean just physically. Intelligence has its own exquisiteness. Even more so with a desirable body.\"\n\nMy mouth went dry. My skin tingled. I tried to retreat, but there was nowhere to go with the arm of the couch already pressing into my back.\n\n\"He has impeccable taste. You are a rare beauty. Where ever did he find you?\"\n\nI clenched my jaw lest I offend him more by opening my mouth again. It would only support his belief that one such as I was not up to par with his preferable type of woman. Not that I had any intention of joining his harem. Then again, maybe I needed to make that clear.\n\n\"I am sorry if I have troubled you, Lady Becca. It was not my intent.\" He lowered his hand. \"Please accept my apology.\"\n\nI gave him a single, stiff nod. I hoped it was sufficient because that was all he was getting. Respect begat respect, eh? So far, none had been shown to me, and I wasn't about to freely give it to one who thought so lowly of me as a person based merely on my sexual preferences. And yet, he was apparently attracted to me. Talk about an enigma.\n\n\"Tell me. What did you really think of the show?\"\n\nNow that he was no longer touching me, I relaxed. But only a little. \"It was...different. Good. But not what I was expecting.\"\n\n\"Like sex?\" He chuckled and did not wait for me to respond in the affirmative. As if I would have admitted my expectations aloud based on the conversation we'd had thus far even if he'd allowed me the chance. \"Most parties do not involve any form of penetration. In my opinion, they are not intended to be peep shows. Rather, they should focus on a specific art form. Like flogging, or spanking, or needle play. It should be both tutorial as well as stimulating entertainment rolled into one.\"\n\nI lowered my gaze. I had no reason to be embarrassed, but he was so easy on the eyes... I had to remember I was mad at him. What were we talking about anyway? Oh, yes. We were both adults, and there was no reason to deny that the show had been arousing. He had accomplished his goal. Bravo. Another point scored for Jesse's ego.\n\n\"Sensation play is one of my favorite hobbies.\"\n\n\"Excuse me?\" My eyes jumped up to his again to see him smiling at me. I wished he would stop being so good looking. It did not match his personality at all. It was distracting. Deceiving.\n\n\"Sensation play. Building the partner up to release by plying the senses. It can vary from light or moderate levels like tonight, to more hardcore ones with S&M when direct pain is intentionally inflicted. The results also vary depending on the time and the intensity involved. It is mostly done with touch, but I like to incorporate sound as well with the music. Combined... well ,you saw what they can do.\"\n\nHe was absolutely right. Just talking about it was making me lick my lips as memories flashed in my head again. Even after he'd offended me. Damn him.\n\n\"I'm sure that Malcolm would entertain any desires you have. Although you are his submissive, you should feel free to tell him what you like. What you would like to learn. That does not mean you are being insubordinate, or that he has to agree to your every wish. But you should never be afraid to speak up and offer new ideas.\"\n\nI was so confused with his mood swings. First, he implied that Malcolm was an ineffectual Dominant partner because I was resistant to completely giving up my will since I related to being a submissive, not a sex slave. But now, he was encouraging me to speak my mind, which meant I could still have a will. I could only imagine that his own partners grew frustrated with him over time. Maybe that's why he'd had so many.\n\nHe took up my hand suddenly, his thumb caressing my skin. The gentle motion made my insides swirl, slowly gathering momentum the longer he did it. It wasn't an entirely uncomfortable feeling.\n\n\"Tell me, Lady Becca, do you have self-control? Has he taught you that yet?\"\n\nLittle jolts of electricity seemed to race up my arm. I struggled to swallow. My hand looked so tiny, engulfed in his. I was too stunned to pull away. Or to speak.\n\n\"You do not need a cock inside you, or hands on your breasts to find release. You can achieve the same results with just a simple touch on your arm or a thought. Release is all in your head, anyway. But it takes practice.\"\n\nI opened my mouth to once again object to him assuming I was some mindless bimbo reliant on sex.\n\n\"Shh.\" He placed his finger over my lips. \"I could show you how, Lady Becca.\"\n\nI shook my head as I added 'dangerous' to the words I could use to describe him. He was a triple-D threat. But I kept imagining how Juliet had looked. How I'd wanted to be in her place.\n\n\"Close your eyes.\" He moved his hand to caress my cheek. \"Just feel. Let it build up until you are wound so tight that you hang over the abyss, anticipating for that magic word that will break you free.\"",
        "For some God-forsaken reason, I obeyed.\n\nThe couch springs squeaked as Jesse adjusted his position. I felt the heat of his body as he leaned closer. Smelled the warm scent of butterscotch on his breath as his lips brushed my jawline. I loved butterscotch. God help me, I wanted him to kiss me so I could taste him.\n\n\"It is all about giving up your will,\" he whispered against my ear. \"Letting go so that even the lightest touch brings the greatest response.\"\n\nI gasped as he brushed a strand of meticulously-curled hair off my shoulder. It felt like a slow current was being pumped through my veins. When his fingers moved further back behind my neck, I tilted my head away, sighing. \n\n\"Yes, just like that. Do not fight it.\"\n\nHis hand was on my right thigh now. Skimming over the material of my pants. Pulling my leg up to his hip. His touch made my nipples harden for what seemed like the dozenth time that night. Or maybe it had just been one long, ongoing nipple-perking session since I'd stepped foot in this house.\n\nMy breathing grew more shallow. I shivered. Then a moan escaped as his fingers danced under the curve of my knee, his thumb stroking the side.\n\n\"Mmm. That is a beautiful sound.\"\n\nI arched my back, conforming to the arm of the couch, as his chest brushed mine.\n\n\"The next step is feeling but not instinctively reacting.\"\n\nNo shit. But every minute I'd had with Malcolm about not reacting had gone down the drain with just one touch from this man. Maybe I was getting soft. Complacent. No man could be that good to make someone forget two years of teachings. Right?\n\n\"Becca?\" Daphne called.\n\nHer voice broke the spell Jesse had put over me. My leg dropped suddenly, and my eyes flew open. I was sitting by myself on the couch. Jesse was standing at the open doorway to the stage, his eyes trained in my direction but definitely not on my face.\n\n\"It is time to go.\"\n\nI wanted to scream. To hit him. But my heart was beating so fast and loud in my head that I couldn't form the words to spew at him. Ultimately, I wanted to crawl into a hole for falling for his seduction.\n\nSomehow, I managed to get up and make it to the door. I flinched as he put his hand on the small of my back and gently ushered me through to the stage. My top was so thin, I could feel the heat of his touch straight through to my skin. And it was no longer welcome.\n\nI tried to be casual about putting my jacket on, but my arm got stuck and he had to help me. Then I couldn't find the opening in the curtain. When he finally showed me the way, I hurried through ahead of him, a fake smile pasted to my face.\n\n\"There you are. I was getting worried,\" Daphne said, glancing between us.\n\n\"I was just giving Lady Becca a tour of the aftercare room,\" Jesse said. \"I am sorry you had to miss it. Perhaps another time.\"\n\nHis voice was calm and sickeningly sweet. As if nothing had just happened between us. What an ass.\n\nI managed a brief \"goodnight\" and started upstairs. I barely heard him as he thanked Daphne and I for visiting. The first floor was empty except for a couple of stragglers, the rest of the guests gone or retired to their assigned rooms for private play and eventual sleep.\n\nAs soon as we were standing outside, a tear slipped down my cheek. Then another. And another.\n\n\"Becca?\"\n\n\"Take me home.\"\n\nI heard her call for a ride on her phone. I shrugged away when she tried to hug me. I didn't want anyone to touch me right now. I could still feel his hands on me. His lips. Hear his voice. My insides curled in disgust. I'd been such a fool.\n\nOnce the cab arrived, I stared blindly out the window. Despite the constant pressure in my chest and head, I refused to break down here. I told myself to hang on until I was alone. When I could escape to my bedroom and give into the pain that was setting in. The confusion. The guilt.\n\nBut the scenery didn't look right once we reached the city. We were heading downtown when I lived uptown. Or where the condo was, at least, because I had to remind myself that I didn't live here anymore. I turned to yell at Daphne for forcing me to continue with her party when the cab stopped and my door opened.\n\nI let out a sob when Malcolm's face appeared. I grabbed his outstretched hand and practically fell out of the car into his arms.\n\n\"What's wrong?\"\n\nMy thoughts swirled around in my head like a tornado. I couldn't put them into words. Although his arm circled my shoulders, it did little to calm me down. Then I noticed where we were. I hissed through clenched teeth, \"I need you. Now. Please.\"\n\nHis embrace tightened for only a moment before he took just my hand. He whispered something to Daphne, then we were moving. Entering the non-descript building. Hurrying down the dark hallway. Pausing only to show his identity card.\n\nThe sounds and lights inside were a muffled blur as he ushered me past dancing couples and flashes of red, green, and yellow neon bracelets. I roughly pushed the beaded curtain aside when we reached the hall that led to the stairway to the private rooms. Unfortunately, we had to go up another flight to the third floor to find an empty one. Everyone must have had sex on the brain tonight.\n\nMy pants were off before he'd locked the door.\n\n\"Becca?\"\n\n\"Fuck first. Talk later.\" I caught myself and added softly, \"Please, Sir?\"\n\nHe didn't speak but pulled his shirt over his head. I gulped and froze, staring at his toned abs. The V that defined his hips and revealed where it pointed as his pants lowered. I bit my lower lip as he hooked his thumbs in the waistband of his boxer briefs. Then he lifted his eyes to me, and the spell broke.\n\nI started to lift my top.\n\n\"Leave it on,\" he growled.\n\nI shoved my thong down instead and walked backwards toward the bed, licking my lips as I watched him stroke his thickening cock as he followed me.\n\n\"Get on the bed. On your knees.\"\n\nI crawled up and faced away from him. I tucked my arms under my chest and had just taken a shuddering breath as my tears dispersed when he slammed into me. I choked and shook from the impact. It only took a couple of strokes before I came, screaming his name.\n\nHe did not relent, and I relished the forcefulness he took with me. He eventually flipped me over onto my back. I rubbed my clit as he changed angles, his hands holding my thighs up and apart. My other hand kneaded one breast through my top, easing the ache there.\n\nBy the time that Malcolm found release, I'd had two more orgasms. My top had found its way to the floor when it got in the way of him grabbing my breasts. I preferred us this way, skin to skin.\n\nAs I lay panting in his arms, his lips nuzzling my neck, I was reminded that I wasn't just a partner for Malcolm. I was his girlfriend. We had a relationship that went beyond just fuck buddies in a scene. I knew he wasn't going to set me aside on a whim to be with another submissive to do some other kinky trick I wasn't into. Or neglect my needs to meet his own.\n\nRegardless of what Jesse thought of submissives\u2014of me, or my Dominant partner for that matter\u2014Malcolm and I were not merely skimming the surface. He wasn't in it just for the control, and I didn't obey just to get sex or pleasure. Our feelings went down to the core for us. Part of me was saddened that no matter how many partners Jesse or Juliet had, they would never find what Malcolm and I shared. That I was certain.\n\n###\n\n\"So are you ready to talk?\"\n\nI battled with wanting to turn to face Malcolm or staying where I was, his naked body still curved around mine. We'd rested for only a few minutes. I felt like I could just fall asleep for hours despite the fact that the bed was just a covered mattress with no sheets and no pillows. But sleep would allow me to escape, though I knew it was just temporary relief. Fleeting. Like those feelings tonight after\u2014\n\n\"It was the show.\" His voice was quiet. Knowing.\n\nI nodded against his arm under my head.\n\n\"I should have gone with you.\" His free hand caressed my hip, which made me wiggle against him. \"I should have at least warned you.\"\n\nHis cock pressed against my ass cheeks, and I moaned. My hand covered his, sliding it inward and further south. His fingers danced over nerves so sensitive I gasped and flung my head back against his shoulder. He turned my chin so that our lips could meet as his fingers pressed between my thighs. Then he paused.\n\n\"Tell me.\"\n\nI groaned, rolling backwards just enough that I could part my legs. \"About what?\"\n\n\"The show. What did he do?\"\n\nAs long as I spoke, he slowly stroked one finger against my clit. If I stopped to catch my breath, he stopped as well. By the time I'd relayed what I could remember of the show, I had been on the brink at least half a dozen times without falling over. It was maddening.\n\n\"Did you come?\"\n\n\"Not yet,\" I panted.\n\nHe removed his hand, and I clutched at air trying to put it back.\n\n\"Did you come at the show?\" His growl was so deep I barely heard the words.\n\nI whimpered.\n\n\"Lady Becca, it's a simple question. Did you or didn't you\u2014\"\n\n\"No!\"\n\nHis hand returned, delving deeper and thrusting upwards. My thighs clamped around his wrist, my hands clinging to his arm as his fingers moved inside me. I shook so hard, my screams were silent. All I could hear was the thumping base from the music of the club beneath us. Or maybe that was my blood pumping through my head.\n\n\"Good girl.\" He kissed my shoulder and wrapped his arms around me as the shudders waned. \"Did you enjoy the show?\"\n\nI nodded weakly.\n\n\"They can be so arousing that the people in the audience have the same reactions as those on stage.\"\n\nAfter what I'd experienced tonight, I was sure that was entirely possible.\n\nHe got up and pulled on his boxer briefs. \"We need to go. Drake and Daphne will wonder what's become of us. I don't want to worry them any more than they already are.\"\n\n\"I'm sorry.\"\n\nMalcolm squatted down beside the bed. His eyes were still dark and glossy from our session, but the seriousness in them made my breath catch. \"Don't be sorry. You have done nothing wrong. It's only natural to have the unbridled desire built up like that and feel frustrated when it's not released.\"\n\n\"Okay.\" I pressed my cheek into his palm when he rested his hand there.\n\n\"And don't ever apologize for wanting me.\" He stood again and tossed me my shirt. \"You can have me wherever and whenever you want. I hope you know that.\"\n\n\"But not at school.\" God, where did that come from?\n\nHe growled. \"Oh, honey, I'd find a way.\"\n\nI stared at him, my shirt pressed to my sweaty breasts, as he pulled on the rest of his clothes and walked to the door.\n\n\"Get dressed and meet me downstairs. You have ten minutes.\"\n\nIt took almost half of the time he gave me to get my pants back on. Unfortunately, there was no mirror in the room\u2014it was intended for sex, not for primping\u2014so I had to resort to using a compact mirror in my purse as I ran my fingers through my hair. Men had it so easy. They could just fuck and go.\n\nI glanced at my watch and saw that I had two minutes to spare. Hoping I looked somewhat presentable but not overly concerned since it was dark downstairs, I took a deep breath and opened the door. Despite my emotional rollercoaster during the past hour, I was getting a second wind. I was ready for some drinking and dancing. Time to get this belated bachelorette party going for real.\n\nBut something seemed off. I didn't realize what it was until I had descended to the main level: it was quiet. So quiet I could actually hear talking further down the hall. As I got closer, I could see the silhouettes of three people under the red glow of the overhead lights.\n\n\"She's going to hate us,\" one of them said with a soft sob. Daphne.\n\n\"So be it. My decision is final.\" That was Drake. \"Please respect that.\"\n\n\"Is this how you want to leave? She won't understand. Not after\u2014\"\n\n\"I'll explain it to her,\" I heard Malcolm say.\n\nI was still a couple of feet away from the group when I said, \"You'll explain what?\"\n\n\"Oh, Becca!\" Daphne cried, running towards me.\n\n\"Stop!\" Drake barked.\n\nBoth Daphne and I froze in our tracks. I stared at my brother. Never had I heard him so...demanding.\n\n\"I'm so sorry, Becca.\" Daphne put her hand over her heart. \"I never meant to deceive you.\"\n\n\"What do you mean?\" I crossed my arms. \"What is going on?\"\n\n\"Come, Daphne,\" Drake said. \"We must get ready. We've delayed long enough.\"\n\nHis voice was hard. Cold. Not at all like the brother I knew.\n\nDaphne dipped her head and turned around. She took my brother's hand and followed him down the hallway towards the main club area. The echo of her heels clicking on the cement floor sounded so forlorn. The red beaded-barrier that separated the private rooms from the rest of the club tinkled into place as they pushed through. Then it was silent again.\n\nBefore I could speak, Malcolm guided me back down the hall. Once we were in the stairwell, he gripped my chin. His other hand was still on my upper-arm.\n\n\"Don't say a word until I am done.\" He stared into my eyes as he added, \"Nod if you understand.\"\n\nI obeyed, which was a little difficult with him holding my chin like he was.\n\n\"Drake and Daphne are preparing for a collaring ceremony.\"\n\nI gasped, trying to pull free. A mantra of \"No! No! No!\" ran through my head as he pressed my back against the wall. I whimpered but stopped struggling. I lost my grip on my jacket and purse. I knew my whole body would follow them to the floor if he and the wall weren't holding me upright.\n\n\"I know this is difficult for you with what happened this summer. I didn't agree with letting you know. They should have done it after they had moved. I told them their timing sucks, too. You're still dealing with them leaving.\"\n\nI closed my eyes. It was the only way I could retreat at the moment.\n\n\"But Drake wanted you here. You are his sister. You are the only family he has that knows of his involvement in this lifestyle. He wanted you to share in this celebration. Because that's what this is, even though you may not agree with the concept.\"\n\nThe coppery taste of blood touched my tongue as I bit my lip too hard. A hot tear trickled down my cheek. Was the rest of the evening just a ploy to get me here? Is that what Daphne had meant?\n\n\"Do you understand?\"\n\nI managed a weak nod.\n\n\"We will discuss this later between the two of us. You can pout. You can be angry. You can take it out on me even though it's not my decision. But right now, you are going to put a smile on your face and walk out there with me.\"\n\nHe pulled me into his arms, kissed my lips, and held my head to his shoulder. When he finally released me, I faltered. My hand managed to find the railing of the stairs, which helped, but my legs were still wobbly. I flinched as his fingers grazed my cheek while he arranged my hair over my shoulders. When I was apparently suitable, he picked up my jacket, offered me his other arm, and led me down the hall.\n\nThe once bouncing, multi-colored main room was dark. People were seated in folding chairs on the dance floor, facing the stage where the DJ was usually set up. An arrangement of candles lit up said stage instead. And standing amongst them was my brother, Drake, dressed in a loose black shirt and black pants.\n\nMalcolm deposited my jacket and purse on an empty chair and guided me up the aisle between the two groupings of guests. Once we had reached a set of stairs leading up to the stage, he assisted me to two empty chairs situated just within the edge of the candlelight's reach.\n\nI let out a soft whimper as he gestured for me to sit.\n\nHe squeezed my hand and waited until I had taken a seat before descending the stairs again.\n\nI tried to glare at Drake, but his eye contact was focused out into the crowd. My heart was beating so fast and loud I was sure everyone there could hear it. I clenched my jaw and wrung my hands in my lap.\n\nWhy was he doing this? Wasn't his marriage enough? Was this what I had to look forward to with Malcolm if I stayed with him?\n\nSlow, instrumental music with a heavy base filled the room suddenly. It was difficult to see with the lights so low, but I heard the audience stand up en masse. I wasn't sure if I was supposed to as well, but I caught the slight nod from my brother who had finally looked at me. I stood reluctantly.\n\nAfter a very awkward moment\u2014during which I regretted having come into the city at all\u2014I saw my boyfriend walking my brother's wife down the aisle as if they were at a wedding.\n\nDaphne had changed into a white strapless, flowing, knee-length dress and matching flats. As she got closer, I saw that she had pulled her hair up into a braided bun, revealing her neck, and her smile was wider than usual. In her right hand, she clutched something black to her chest like a bride carrying a bouquet, but I could not tell what the object was.\n\nMalcolm escorted Daphne up the stairs to the stage and brought her to my brother's side. Drake bowed to Malcolm, and Malcom bowed to Drake. Malcolm put Daphne's free hand in Drake's, then he retrieved me and brought me to the middle of the stage where we faced the crowd.\n\n\"We would like to thank everyone for providing your support to Master Drake and Lady Daphne. For joining myself, Master Malcolm, and my partner and Master Drake's sister, Lady Becca, as witnesses to this collaring ceremony.\"\n\nIt took every ounce of strength to not cross my arms or scowl.\n\n\"Drake first met Daphne here at this club over two years ago during a munch when he was a guest of mine. They officially became a D/s couple a month later, and have only grown fuller within their relationship and the scene since then. Therefore, it is only fitting that they take the next step together here as well.\"\n\nI swallowed the desire to object\u2014could I even do that?\u2014and concentrated instead on not doing anything like fainting or throwing up that would embarrass not only myself, but also my brother, as much as I despised him right now.\n\nMalcolm continued to speak\u2014relaying how he had met both Drake and Daphne, and his understanding of their commitments in regards to BDSM\u2014but I didn't catch all of his words. My mind was still reeling from my knowledge of what being collared meant. My brother was proclaiming he would now own Daphne. That she would be his slave. She definitely 'belonged' to him now.\n\nWhat had happened to \"submission is mostly in the bedroom for us,\" as she had insisted all those times we'd talked? To most D/s couples, being a slave meant full-time obedience, both in and out of the bedroom as well as the house. Doing whatever the Dominant partner said without question. No longer having a matter of opinion. It was Jesse's world. Definitely not mine. And not my big brother's. Or so I had thought.\n\nI blinked as Malcolm tugged on my arm so I would follow him to sit down. He grasped my hand in his once we were seated and held our intertwined fingers in his lap. My mouth was dry. My ears were ringing. It was surreal as I dragged my eyes back up to see that Daphne had removed her shoes, and my brother had helped her kneel before him on a white pillow.\n\nAfter what must have been the kinky version of vows based on the few words they said that had slipped through the haze in my head, Drake retrieved an item from a small table. He held it up, facing Daphne. The candlelight glinted off the polished silver of the choker and attached ring.\n\n\"I present this collar to you, Lady Daphne. It symbolizes your willingness to accept a lifetime of complete submission and servitude to me.\"\n\nA sudden wave of nausea crept up my throat as my brother bent down and fastened the collar around Daphne's neck.\n\nShe gave the object in her right hand to Drake, who held it up with both hands.\n\nMalcolm stroked his thumb over the back of my hand, but it did nothing to quell the memories that flooded in. Of being chained to a wall. Led around like a dog. Tethered to a bed for hours so some sadistic man could dope me up and fuck me at his will.",
        "\"And I accept this leash from you, Lady Daphne. It symbolizes the surrender of your will to mine and the guidance I promise to give you in our life together.\"\n\nDrake hooked the leash to the ring on Daphne's collar. She bowed before him and pressed her face to his feet. When she sat up with her chin tucked, he placed a hand on her head.\n\n\"Two weeks ago, Lady Daphne, you honored me by becoming my wife. Tonight, you have completed me by becoming the partner that we have both dreamed about. Thank you.\"\n\nHe helped Daphne to her feet and kissed her. Together, they faced the crowd. Applause and whistles resounded in the vast, open room. As Drake and Daphne descended from the stage, he held the loop of the leash in his hand. She walked slightly behind him with her head bowed.\n\nMalcolm stood and led me down the stairs. I kept my head up tall and walked beside my boyfriend. My other hand was shaking at my side. How I didn't stumble, I'll never know. When we reached the end of the aisle, and my brother and sister-in-law finally turned in our direction, Malcolm let go of my hand to approach Drake.\n\nI took the chance and bolted, grabbing my jacket and purse on the way. I heard Malcolm yell, \"Shit!\" as I raced across the remaining half of the dance floor in a beeline towards the exit. I made it as far as the bar before they caught up with me.\n\n\"Becca, stop!\" Drake called behind me in that same demanding tone he'd used in the hallway to make Daphne...well...heel. It was a fitting word for the situation.\n\nSomeone grabbed my arm, and I raised my other hand as I turned around. I heard a loud crack as my open palm made contact with a face. I saw the red mark on Drake's cheek as his eyes widened.\n\n\"Don't touch me!\" I yanked away from his reach, ignoring the lingering sting in my hand. I glared at my brother, at Daphne. \"And don't you dare tell me what to do! How could you? After everything...\"\n\nSuddenly, my chest was on fire, and I had to grip the edge of the bar for support. Malcolm was by my side. I felt him more than saw him as I had doubled over on a barstool. My view consisted of the chrome fa\u00e7ade of the bar\u2014which glowed blue from a neon ropelight along the underside of the bar top that I could see all-too-well from that position\u2014and several bright stars. I closed my eyes and reopened them, but the stars were still there. Possibly more of them.\n\n\"Becca, are you okay?\" Malcolm said, his voice cracking.\n\nI shook my head and tried to drag in more air with deep breaths. That only made it worse. My left arm felt numb, and when I tried to grab it with my right hand, I started falling.\n\nThe next thing I knew, I was laying flat on my back. Malcolm held my hand as one EMT strapped me to a gurney while another asked questions about what had happened. Multiple voices tried to answer at once. I wished they would all just shut up so the pounding in my head would dissipate. I would have said it out loud, but I was afraid I was going to throw up, and I had an oxygen mask over my nose and mouth. Oh, what a night.\n\n###\n\nI lay on my right side, staring at the avocado-green drapes that had been pulled across the big picture window of my hospital room. I could inhale and exhale without too much pain now. I could feel my left arm again, too. Especially where the nurse had jabbed me with a needle to start an IV.\n\nThere was a knock, and I heard the soft whooshing sound the big door made as it opened and closed. I'd heard it at least a dozen times since I'd been brought up from the emergency room because the doctor wanted to keep me for observation. The door opening usually resulted in a night nurse coming to check my vitals to make sure I was still alive. How anyone ever recuperated in a hospital with being poked and prodded every fifteen minutes was beyond me.\n\n\"Becca?\" Malcolm's voice came from behind me. I smiled at the welcome sound and started to roll onto my back to greet him.\n\n\"She's sleeping,\" Drake answered, which made me freeze.\n\nHe had dragged a chair to the side of my bed at least an hour ago, which had woken me from the few winks I'd been able to catch. I'd heard the whooshing door since then and silence after that, so I thought he'd left. I had been too exhausted to roll over to check, though, so I just stared at the curtain, thinking.\n\n\"Is she going to be okay?\" Malcolm's voice was closer, quieter.\n\n\"Yep. Just a little anxiety. Nothing serious.\" He seemed very short with my boyfriend. Almost as if he believed I'd intentionally caused a stir and there was nothing to be concerned about.\n\nIf I was such a nuisance\u2014ruining his first night with a slave for a wife\u2014and he wasn't concerned, why was he still here?\n\n\"A panic attack?\" Malcolm let out a deep breath, and I imagined him running his hand back through his hair. \"I was so sure\u2014\"\n\n\"She's fine,\" Drake snapped.\n\n\"Lose the attitude. There's no one here you need to impress.\"\n\n\"I'm her brother. I'm allowed to stay. You are not family.\"\n\n\"Yeah, you are her brother. Which means you should have thought about her feelings before putting her in this predicament. She's here because of you!\"\n\nA chair scraped the floor. \"I'm not asking you to leave. I'm telling you!\"\n\n\"I will leave, Drake. But first, you need to listen. And listen good. Becca adores you. She always has.\"\n\n\"I know that.\"\n\n\"No, you don't. If you really did, we would still be at that club saying our goodbyes and she'd still be in the dark, which is safer sometimes. You were her anchor when she entered this lifestyle. She already had you on a pedestal. Knowing you're an experienced Dominant just ratcheted you up a few more feet. She had someone to go to, to confide in. It put a sense of pride in her for you. But you've only let her see what you want her to see of your own world. You've kept the most important parts of who you are shut away from her.\"\n\n\"What's your point?\"\n\nI tried to keep my breathing even as I listened lest they realize I was awake and stopped talking.\n\n\"We both know that our vanilla lives are intertwined with our kinky ones. We're in so deep it's almost impossible to separate them. Decisions we make in one affect the other without us even realizing it. I know your decision tonight was not made lightly. And I'm not saying it was the wrong decision\u2014that's completely between you and Daphne. But forcing Becca to be involved? Did you even think how it would affect her knowing what she's been through this year?\"\n\n\"She'll get over it. She's an adult.\"\n\n\"Maybe. But that pedestal? You knocked it over all by yourself when you expected her to be there merely because she was your sister. That decision? It showed her that you're not the brother she thought she knew. That what really mattered most was your own feelings because when it all boils down, you are a Master, and she is a submissive. Your true colors came out tonight, and she wasn't prepared for it. I was foolish to make her stand there and pretend to support something she doesn't believe in. But you're the bigger fool for knowingly crushing your little sister's heart.\"\n\nThere were footsteps and the sound of the whooshing door as Malcolm left. A thud and scrape as Drake sat down so heavily, the chair moved. He sighed deeply, and then it was silent.\n\nHot tears coated my cheeks, wetting my pillow. My heart ached. Every word Malcolm had spoken was true. I couldn't have said it better myself. That is, if I'd had the courage to confront my brother. Had he always been so selfish, or had something changed in the past couple of years to make him that callous?\n\nIt was getting uncomfortable, lying on my side for so long and not being asleep. I considered pretending to wake up, but the conversation had drained me emotionally. Hell, the whole night had. So I just rolled onto my back and let out a shuddering breath. And almost had a real heart attack.\n\n\"You're awake!\" Malcolm pulled me into his arms, his heart thumping wildly against my ear.\n\nI buried my face against his chest. The masculine scent of him\u2014his sandalwood cologne and sweat and remnants of sex\u2014filled my head as I inhaled. \"You're here!\"\n\n\"Yes. Drake just left.\" His lips pressed to my head. \"How much did you hear?\"\n\n\"All of it.\"\n\nHis sigh was ragged. \"I expected him to defend himself. To put up a fight. But he just looked at you and walked out. I'm so sorry.\"\n\nNestled between Malcolm's arm and his warm body as he brushed my hair from my forehead over and over again, I closed my eyes. A tear trickled down my cheek as I whispered, \"I am, too.\"\n\n###\n\nChristmas arrived, but Drake and Daphne did not.\n\nMy mother had received a card with a note expressing their regret that they wouldn't be able to make it back this year as they were still trying to settle into their new house and new jobs. How had I not seen that coming?\n\nWhen she asked me if I had gotten a card from them, I lied. I wasn't going to tell her we'd had a fight over preferences in sexual relationships and Drake was ignoring me. I wondered if he'd even opened the card I sent him, or if it had just been thrown away?\n\nIt was pretty much a given that New Year's was out now. I didn't care if I ever saw him again. Sibling rivalry at its finest. Someone should take a flogger to the both of us.\n\nMalcolm and I spent Christmas Day at our house with my mother. She was so elated to find out she didn't have to cook the turkey this year. But she couldn't help fussing from her seat at the breakfast counter as we prepared the meal. I guess old habits died hard.\n\nAlexander and Cameron joined us in the evening after visiting with her family. I stood in kitchen, the knife hovering over the pecan pie they'd brought, and watched them chatting in the living room with Malcolm and my mother. I felt a pang in my chest realizing that this Christmas marked ten years without my father for the holidays. And now, the first without my eldest brother. Was this a glimpse of what was to come?\n\nOver the next five days, I corralled myself in my home-office, intent on hammering out another chapter. Sue called on the morning of New Year's Eve, and we talked at length about what I had sent her the day before. She'd found three timeline errors, two places where the wrong character's name was used, and a slew of typos. She chastised me for not being more focused, which, of course, made her ask if everything was okay because it wasn't like me to give her shoddy work.\n\nI had never revealed my own sexual proclivities to her, despite the direction my latest series was heading. It was difficult to not give away too much personal information and yet let her know why I was so distracted. We were very close, despite being in a business relationship. For years, she was the only real friend I had, mostly because she knew my deepest, darkest secret: I was Drake Alexander. So little did she know.\n\nIn the end, I ended up telling her I was still trying to get over my brother moving out of state after he had been nearby my whole life. It was a partial truth, and she seemed to buy it. Or at least she gave me the impression that she had.\n\nI hung up the phone and stared at the screen on my laptop. While I was contemplating whether or not I wanted to work on making corrections now or procrastinate until tomorrow, Malcolm came in and sat down in the oversized chair. His hair had that wet look to it like he'd just taken a shower.\n\n\"Everything okay?\"\n\n\"Yep.\" I closed the lid on the laptop and crossed my arms on the desktop, resting my chin on top.\n\nHe leaned forward with his elbows on his knees. \"She says, 'Yes,' but her body says, 'No.' Now what should I believe?\"\n\nI cracked a smile. \"I swear I've heard that line before. But it was in the reverse. And probably came from a guy who couldn't decide if he was getting laid that night.\"\n\nMalcolm chuckled. \"Do I have to worry about that?\"\n\n\"Not at all.\" I stood up and moved to sit on his lap.\n\n\"Well, that's good. Because it is New Year's Eve.\" He gave me a quick peck on the lips. \"Feel like going into the city?\"\n\nMy gut reaction was to groan and decline. But we hadn't been out in over a month, and he would be going back to work next week. I had better seize the opportunity while I could.\n\n\"Sure. Do you want to crash at my place?\"\n\n\"Already counting on it. I was thinking of leaving the car there and taking a taxi to dinner.\"\n\n\"Let me get cleaned up, but I can change once we get there.\"\n\nHe gave me another kiss and then shooed me off to take a shower of my own. I was a little disappointed that he hadn't planned on joining me. But I let it slide. I always got a little giddy about spending New Year's Eve in the city.\n\nA few hours later, we were getting into a cab outside my condo. I gave Malcolm a sideways glance when he told the driver to take us to the Hancock building. And I still didn't say anything when we entered the special elevator for the Signature Room on the 95th floor.\n\nIn all of my years living in the city, I had never been to the elegant restaurant with a 360-degree view of Chicago. I couldn't think of a better place to spend the last night of the year. Or a better person to spend it with.\n\nThe place was very crowded, and from the chatter around us as we took our seats, I discovered that reservations were in high demand. Someone said it was $100 apiece for the time we were eating, however a second seating after eight o'clock cost $225 and included an additional course for dinner with dancing and a balloon drop at midnight. I tried not to be disappointed that we wouldn't be hanging around for that.\n\nAfter the first of three courses, I took advantage of the down time and wandered around to see my city from the seventh tallest skyscraper in the world according to the information I'd read online using my iPhone. It was breathtaking. I could think of no other word to describe it.\n\nWe were treated to a live band while we ate the rest of our meal and sipped champagne. My watch showed it was barely half-past-eight by the time a cab dropped us off at my condo. I was hoping we would be going somewhere else to ring in the new year. The night was still early, but I was grateful for the peace and quiet as we walked in the front door to a warm foyer. God bless Malcolm for remembering to turn on the heat!\n\nAll in all, it had been a special night. And now that I was home, I had to admit that I was actually a little tired. I sighed as I removed my heels. Shoes in hand, I started up the stairs intent on changing into something more comfortable. Maybe even crawling under the covers for a little end-of-the-year nooky before drifting off to dreamland. But Malcolm took my free hand.\n\n\"Come into the living room?\"\n\nI raised an eyebrow and let him lead me. The room was dark except for the sparkling white lights of the Christmas tree. He stopped us in front of the tree, my hand still in his.\n\n\"I'm glad you had the courage to wear that dress again. You look absolutely stunning in it.\"\n\nMy cheeks burned as I glanced down at the blue, velvet dress overlaid with lace. The same dress I'd worn on my first date with Brian. I'd been able to stop associating the dress with him and had pulled it out of the back of the closet earlier in the month to get it dry-cleaned. I'd surprised Malcolm by coming downstairs in it this evening.\n\n\"But even when you're wearing my old, stained T-shirt\u2014or nothing at all, for that matter\u2014I think you're stunning.\" His free hand slid behind my neck and pulled me close as his lips covered mine. \"I love how passionate you are with everything you do. Your strength. Your compassion. Even your stubbornness. I love how you make me laugh. How you make me want to be a better person, both vanilla and kinky.\"\n\nI sucked in my breath and took a step back from him. \"Malcolm\u2014\"\n\n\"Shh, I'm not done yet.\" He knelt down suddenly and held up a black box. \"I love you, Rebecca Rockland. Or Drake Alexander. Or Lady Becca. I love all of your personalities. Would you do me the honor of being my partner for the rest of my life?\"\n\nMy knees wobbled as he opened the box and a teardrop-shaped diamond battled with the tree for brightness. It was gorgeous, and my hand shook as I instinctively reached out to touch the ring. I don't know what came over me, but I said, \"I didn't hear the words.\"\n\n\"Fine.\" Malcolm closed the box and started to stand up.\n\n\"No! Wait!\" Oh, my God, I was going to have another panic attack. I was going be spending New Year's in the damn hospital.\n\nHe shook his head, his mouth curling up. He went back down on one knee, presented the open ring box again, and cleared his throat. \"Will you marry me, Becca?\"\n\nIn all of my dreams of this moment, I was so ladylike. Not crying or jumping up and down but just giving a romantic, \"Yes!\" Reality rarely matches one's expectations. The truth is, I couldn't nod fast enough, and when I opened my mouth, what came out this time was, \"Uh-huh.\"\n\nI guess it counted because he slid the ring on my finger. Then he gathered me up in his arms, smothering me with kisses. By the time I could breathe again, I felt his cock pressing against my thigh through the layers of his slacks and my dress. \n\n\"Please, Sir, make love to me until next year?\" I breathed in his ear. I could see the clock on the mantle over his shoulder, and we still had three hours left.\n\n\"Absolutely. I hope you're wearing stockings under that dress,\" he said, his hand cinching up the material covering my ass. \"And nothing else.\"\n\nI broke free and raced to the foyer, shrieking as he bounded up the stairs after me. \"You will just have to catch me to find out!\"\n\n~ H"
    ],
    "authorname": "secretsxywriter",
    "tags": [
        "dominance",
        "submission",
        "voyerism"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/raw-ch-07"
}