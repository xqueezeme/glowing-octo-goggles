{
    "title": "The Mechanic Pt. 03",
    "pages": [
        "Eagerly awaited, here is the third part in The Mechanic series. If you haven't read part 1 and 2, I'd encourage you to read those first - things probably make more sense then. I know some of you can't get enough of Riley and Rowan, and you have had to be so patient for their journey to continue. You'll be pleased to hear that while writing part 3, I realised I need to give them some more time after this. Stay tuned... I'd love to hear what you think in the comments. As always, happy reading!\n\n* * * * *\n\nRiley pushed open the door of the coffee shop and looked around. When she didn't see Megan, she got herself a coffee and sat down at a table near the window. She wondered yet again what Megan wanted to talk about. She had been racking her brain about this from the moment she received the bartender's message last night. 'We need to talk,' the simple message had been. It had to be something to do with Rowan, as that was the only thing the girls had in common. But what was it about Rowan? And how did Megan get her number? \n\nA part of Riley wanted to be optimistic and think that Rowan wanted to get in touch with her. She'd been pining over the handsome mechanic since she'd left her on that Sunday morning many weeks ago. She had been sorely tempted to go back to the 'Ride Again' garage many times, but she was worried Rowan would not want to see her. She'd actually made it over once, but as soon as she saw Rowan - she came out to throw out the trash - she'd gotten cold feet and had left.\n\nIt was more likely that Megan would tell her to leave Rowan alone; that she didn't want to see her. But Riley had been leaving her alone; what was there to talk about? Feeling herself get sucked into the pointless circles her brain had been going round in since last night, Riley tried to focus on something else. She poked at her phone idly and saw that she had a new message. It was from Jenny.\n\n[Hey sweetie... Not sure how to say this... Ollie met Rowan last night. So now we know... Oh honey, are you alright? Can we talk? I haven't said anything to Sarah or Finn. Neither will Ollie. Call me, please!]\n\nRiley felt a wave of panic rushing over her. If Oliver really met Rowan the secret was out of the box. Her friends knew that Riley's handsome stranger wasn't a man, as they all had expected. Riley would have a lot of explaining to do. Perhaps less so about the fact that Rowan was a woman than the fact that she hadn't told them that. Why hadn't she just said something from the beginning? She cursed herself. It would have saved her so much trouble now. But even then, her friends would never have expected her to fall for a woman. How would they react?\n\nRiley fought a wave of nausea. Why was this happening all at once? First Megan's message, completely out of the blue. Now this message from Jenny. Unless they were somehow related. Did Ollie bumping into Rowan have something to do with Megan wanting to talk to her? Was Megan there too?\n\nBefore Riley could give this any further thought, Megan entered the coffee shop. She looked slightly flushed and had a big grin on her face. At least someone was feeling happy.\n\n\"Hey, sorry I'm late!\" Megan said, as she flopped down on the chair opposite Riley.\n\n\"No problem. I haven't been here long either.\"\n\n\"So, long time no see! How have you been?\" Megan acted as if they were long-time friends who were due for a catch-up.\n\n\"Erm... Alright, I guess.\"\n\n\"Good, good.\" Megan looked out the window, as if she was trying to gather her thoughts. She got some reprieve from the waitress who took her order.\n\nAfter some smalltalk and the delivery of Megan's coffee, Riley started to feel impatient and asked: \"So, what did you want talk about?\"\n\n\"Right...\" Megan looked a bit uncomfortable, almost as if she regretted doing this. \"It's about Rowan.\" She paused. Riley's heart skipped a beat. It wasn't a surprise, but hearing Rowan's name still made her belly flutter. She didn't say anything; what about Rowan?\n\n\"God, where do I even begin?\" Megan sighed. \"I wasn't expecting to see you so soon. I thought I'd have more time to prepare a bit.\" She smiled apologetically.\n\nWhat was there to prepare? Riley was now starting to worry that something was really wrong. She had to get Megan talking; just get her to start somewhere. \n\n\"How did you get my number, anyway?\" She asked.\n\n\"Oh,\" Megan said, seeming relieved that she could at least answer this question. \"We... Rowan and I, I mean, saw your friend Oliver last night. I... got your number from him.\"\n\nThe events were indeed related then, but Riley still couldn't comprehend why Ollie would have just given Megan her number. She threw Megan a puzzled look.\n\n\"Yeah, I know. It doesn't make any sense, does it?\" Megan said. \"Okay, let me explain. Rowan and I were having drinks last night. Oliver must have recognised us from that time at the bar; he came up to us. He was going on about how he wanted to beat the shit out of Rowan for what she'd done to you. He seemed quite shocked that she was a woman though.\" Megan chuckled. \"Did you not tell your friends that part?\"\n\nRiley's brain was trying to keep up. \"He did what!?\"\n\n\"He was quite drunk. I think he meant well.\" Megan snickered again, clearly finding her groove in the conversation now. \"He just wanted to let her know that it wasn't cool that she'd never called you, while you were clearly very much into her. How did he put it? 'Head over heels'?\" Megan looked at her quizzically, challenging her to counter the statement.\n\n\"Oh my god...\" Riley tried to keep her panic down. \"I can't believe he did that. He actually said that? She knows!?\"\n\n\"So it's true?\"\n\nRiley couldn't look at Megan. What was it about this girl that made Riley say things she didn't mean to say; to give herself away?\n\n\"Yeah, I thought so...,\" Megan continued, unperturbed. \"Anyway, I guess that's what I want to talk to you about.\" She paused. \n\nRiley didn't reply - she was still fighting her blind panic over the fact that Rowan now knew how she felt about her. There was no playing it cool or not showing up at her garage that could combat that. She knew. What did that mean? What would Rowan do about it? Up to now, Riley could have convinced herself that Rowan wasn't aware of her feelings and therefore it was understandable that she hadn't contacted her. But now... If Rowan continued ignoring her, it would break her already cracked heart.\n\n\"Look, I totally get it... Besides, I think you two could really work together,\" Megan then added.\n\n\"Really?\" Riley asked before she could stop herself. \"You think so?\"\n\nMegan smiled kindly: \"Yeah, really.\"\n\n\"Did she say anything?\" Riley asked, a bit annoyed that Megan was being so evasive.\n\n\"Not specifically, but I've known her for a long time and I can tell when someone is more to her than a quick fling.\"\n\n\"But she never called. She basically told me straightaway that she wouldn't. She said it was because she doesn't use her phone, but it was pretty obvious that she just wasn't interested. That's why I've been trying to forget about her. But I just can't stop thinking about her.\" The words came out of Riley's mouth like a whirlwind. She wasn't sure why she was spilling her heart out to Rowan's friend, who was sure to be on Rowan's side.\n\n\"Is that why you've never tried to get in touch with her again?\" Megan looked at her intently. Riley wasn't sure if it was meant as a criticism.\n\n\"Well, yeah. I tried to stay away. But I really wanted to see her again. I thought maybe she would change her mind if I was standing right in front of her. So I did go to the garage one day, but I didn't actually go through with it. She came out and I got cold feet. I'm such a wuss.\"\n\n\"No, you're not,\" Megan said emphatically. \"She can be a bit intimidating.\"\n\n\"I just don't get it... She was so sweet and caring when we were... you know, together... but then, the next morning, it was like she flipped a switch in her head. She couldn't get me out of her apartment quick enough.\" Riley felt herself welling up. The last thing she wanted to do was cry in front of Megan.\n\n\"Yeah, that sounds like her... Look, there's a few things you need to know about Rowan. By telling you, I just want to give you a fair chance with her.\"\n\nRiley looked at Megan with tears in her eyes. \"Why are you doing this?\" Surely, she would take her friend's side?\n\n\"Because I think you two could be amazing together. I've seen the change in Rowan when she talks about you. Call me romantic, but I think that's worth something; worth giving a chance anyway. I tried to make her see it. I actually tried to get her to give you a call, but she's being her usual stubborn self. She has these self-imposed rules, you see? They prevent her from... well, from letting herself be happy, basically. Of course, she doesn't see it that way.\"\n\n\"What are you talking about? What rules?\"\n\n\"Let's see, there's the 'never the same girl twice' rule and then there's the 'no relationships' rule. I guess they are related. They are both designed to never let anyone develop feelings for anyone else, ever.\"\n\n\"What? You mean she doesn't sleep with a girl again, and she doesn't do relationships?\" Riley thought for a moment. That certainly threw a major spanner in the works. \n\n\"Yeah, exactly. She's got this idea in her head that this way she will prevent a girl from falling for her and start expecting more from her than she's able, or willing, to give.\"\n\nRiley couldn't suppress a surprised snort. \"Well, that didn't work!\"\n\nMegan laughed. \"Tell me about it... To be honest with you, I think it's also a self-preservation thing. She...\" Megan stopped abruptly and stared into her empty coffee cup for a moment, clearly unwilling to disclose any more. After a moment she said: \"I could do another coffee. How about you?\"\n\nRiley shrugged. Who cared about coffee now? She waited impatiently as Megan waved over the waitress and ordered. When they were finally on their own again and Megan had nothing else to distract herself with, Riley attempted to pick up where the conversation had left off. She tried to keep the desperation out of her voice when she asked: \"But why...? I mean, why the 'no feelings' thing?\"\n\n\"Ah, there's the million dollar question.\" Megan looked uncomfortable, as if she'd arrived at a part of the story she didn't really want to address. She sighed. \"Oh man, she would kill me if she knew I'm telling you all of this...\"\n\nRiley didn't care. She had to know. She looked at Megan encouragingly.\n\n\"Look, it's really not my story to tell, but I guess it explains a lot about who Rowan is and why she behaves the way she does. Like I said, the only reason I'm telling you is to give you a fair chance with her. If I ever find out you've used any of it against her...\" Megan trailed off threateningly.\n\n\"I won't, I promise,\" Riley said quickly, willing the other girl to continue her story.\n\n\"Alright... Well, Rowan wasn't always a mechanic. In fact, she was really quite successful in the finance industry for a number of years after university.\"\n\nRiley couldn't stop herself from interrupting. \"Really?\" She asked in disbelief. There were so many surprises in that one sentence. She couldn't picture Rowan at a university, let alone in the finance industry. It was hard to imagine her in a power suit and high heels. Although, she would probably look hot as hell - awkward, but hot!\n\n\"I know. Can't see that, right?\" Megan smiled. \"She's definitely much happier being a mechanic. She was born to do this. Her dad was a mechanic and she grew up playing with engine parts. Anyway, she did this big career change a few years ago. She desperately needed a change and by then she'd proved to everyone and herself that she could survive after Diana.\"\n\nSensing that Megan was getting to the core of the story, Riley probed carefully: \"Diana?\"\n\n\"Diana was Rowan's first - and only, I guess - big love. She was much older than Rowan, in her forties then, I think. They met at a job fair: Rowan was in the last year of university and was figuring out what she wanted to do next; Diana was recruiting new talent for her company. They exchanged details and started chatting. It was all professional at first, I think, or maybe Rowan already liked her then. Either way, Rowan went to work for the same company and quickly became very close to Diana. She became her prodigy, I guess you could say. Before long, that went beyond the workplace and they became lovers.\"\n\nMegan paused to take a sip of her coffee. Riley waited, scared that anything she would say would stop Megan telling her more.\n\n\"The problem was, Diana was married. She kept telling Rowan she wanted to be with her instead, promising she would leave her husband, but she never did. I think she was enjoying herself too much, having it both ways. And she definitely loved the power she had over Rowan. Rowan had fallen for her completely; she would do anything for her. Whatever Diana did to her; no matter how many times she would let her down, stand her up, lie to her, Rowan would always come back to her. She became a total workaholic. And when she wasn't in the office with Diana, she was in her bed. Anyone could have seen that was going to blow up sooner or later. But I lost touch with Rowan in that period. She just disappeared on everyone.\"\n\nRiley had so many questions about Diana, and she was intrigued about Rowan and Megan's relationship too: how long had they known each other? She'd gotten the impression a few times that they'd been more than friends at one point. What was their story? But asking these questions would distract from the main story, so she simply asked: \"What happened?\"\n\n\"This went on for a few years, in which Rowan became increasingly unhappy. She told me later that she was doing really well at work, earning big commissions, but she felt like she was being used. She eventually decided to cut ties with Diana, who she now knew was never going to leave her husband. She asked to be transferred to a different branch and moved back here. Diana begged for her to come back, if not at work then certainly back to her. She said she loved Rowan; that she was sorry. She promised everything would be different. When Rowan didn't budge, Diana started to badmouth her in the industry. She tried to ruin Rowan's reputation, everything she worked so hard for. The messed-up thing was that Rowan felt guilty for leaving. She thought that as much as Diana had screwed her over, she had also taught her everything she knew. Rowan wouldn't have climbed so quickly if it hadn't been for Diana. But I guess that was all part of Diana's manipulative powers.\"\n\nMegan looked angry just talking about it. Once again Riley got a glimpse of how much Rowan meant to her. Megan hadn't even been around at the time to see the effect of Diana's actions on Rowan, but she looked ready to rip her to pieces.\n\n\"Did it work, the badmouthing? Is that why she left?\" Riley asked carefully.\n\n\"Hell no! That bitch couldn't get Rowan down if she brought a whole army. Rowan chose to be the bigger person and keep her head down. She worked even harder for another two years or so, earning more commissions and squirrelling away all her money. Finally, she landed a big client and with the commission from that and the bonus she was given for her hard work, she had saved enough to pursue her dream of leaving that world. That's when she bought the garage space and the apartment.\"\n\nRiley felt like cheering for the happy ending. \"That's so impressive,\" she said, adding everything up that Rowan had been through in her life and comparing it to her simple and straightforward journey.\n\nMegan nodded earnestly. \"She set up the garage from scratch. She had a bit of a slow start in which she focused on honing her skills and making a name for herself, but it has been going really well for a few years. She landed on her feet, that one.\"\n\n\"So, Diana is the reason she won't get involved with anyone?\" Riley had been backtracking the story and thought she understood what Megan was getting at.\n\n\"Ah yes, I knew there was a reason I was telling you all that.\" Megan laughed heartily, more relaxed now that the cat was out of the bag. \"Basically, yes. Having been someone's plaything herself, Rowan is terrified of making anyone hers. She doesn't believe in relationships, or happy-ever-afters. She's convinced it will always get uneven at some point: someone will feel more than the other, and someone will end up getting hurt. So she goes through life just enjoying herself with anyone who tickles her fancy in that moment.\"\n\nRiley's face must have shown her hurt feelings about this last statement, because Megan's expression instantly softened and she quickly added: \"Sorry.\"\n\n\"But if it's just sex she wants, I can do that!\" Riley cried out in desperation. She wasn't sure if this was true, but if it was the best she could get... She pictured herself in a sweaty, blissful mess with the sexy mechanic and felt her body responding to that image.\n\nMegan looked at her skeptically. \"Can you, really?\"\n\nRiley looked down at her hands. The scene in her head moved on to Rowan kicking her out unceremoniously in the middle of the night, with Riley wondering if she was already calling the next girl on her speed dial. She couldn't do that, she realised. She didn't say anything.\n\n\"Yeah, didn't think so,\" Megan correctly interpreted her silence. \"I couldn't either, as much as I tried to tell myself I could. Besides, that's where the second rule comes into play: she won't sleep with the same girl twice.\"\n\n\"You and Rowan were together then?\" The question had slipped out before Riley could make up her mind about what the most important information was to get next.\n\n\"As much as Rowan is ever together with anyone... This was before her second rule. I may have contributed to her putting that in place, actually.\" Megan laughed as if this whole predicament was terribly funny. Riley didn't think it was funny at all.\n\nSeeing Riley's stressed face, Megan clarified: \"After the whole Diana thing, Rowan and I randomly bumped into each other in town and reconnected. We were friends with benefits for a while, but she gradually started to mean much more to me. I think Rowan realised this, but knew she couldn't give me what I wanted. I guess she didn't want to be the Diana in our relationship. So we took our distance for a while, let things cool off. And now we're friends without benefits.\" Megan laughed.\n\n\"But... sleeping with someone twice doesn't make it a relationship,\" Riley said, grasping at straws. There was so much information to take in. She felt like she was walking in a minefield.\n\n\"No, it doesn't in anyone's mind but Rowan's.\" Megan paused, but seeing that Riley was not satisfied with that answer, she continued: \"Look, she's well aware of the effect she has on girls. She knows it doesn't take her much effort to sweep a girl off her feet, even if she doesn't intend to. And despite all the cool bravado, she actually cares about not hurting people. That's why she won't take any chances and won't allow anyone to come too close. None of that makes a lot of sense to you or me, but you can kind of see where she's coming from, can't you?\"\n\n\"I guess,\" Riley sighed. \"But that can change right? I mean, if she meets someone she really cares for too?\" Riley didn't even dare hope that she could be that person, but there had to be something she could do.\n\n\"Well, in Rowan's own words: 'A tiger doesn't change its stripes'. She believes this won't change for her.\" Megan shrugged as if to say that was the end of it.\n\n\"So what do I do?\" It was much as much a question for herself as it was for Megan. \n\nDid she really want to get into such an uphill battle? Was Rowan really worth the pain and effort that would invariably come her way? She considered walking away and trying to forget about Rowan. She was surprised by the clenching sensation that engulfed her. She felt as if someone had wrapped a fist around her throat and was slowly closing it. She had tried to forget about Rowan; she had tried for weeks. The harder she tried, the more she thought about her, wanted her, despaired for her.",
        "Megan clearly interpreted her question as a request for advice. \"If you want her...\" She paused and looked at Riley with a knowing grin. 'I know you do,' that grin said. Riley rolled her eyes impatiently; of course she wanted her. She wished she didn't, but she was miles deep into the rabbit hole now.\n\n\"... You'll have to win her over. Show her that you're different than all the other girls.\"\n\nRiley felt like she had been stabbed; 'all the other girls'!? Excruciating thoughts entered her mind: how many girls had there been? Tens? Hundreds? Thousands!? \n\n\"Shit, I didn't mean it like that!\" Megan said quickly, grabbing her hand for emphasis. \"I mean, you'll have to show her that you're worth putting aside her principles; that you're worth a shot; that she can really like you if she lets herself. She needs to let herself acknowledge those feelings. You have to give her no choice. She has to fall for you, hard!\"\n\nRiley felt overwhelmed by the enormity of that task. \"How?\" She asked, tears once again appearing in her eyes.\n\n\"Date her. Show her who you really are. Show her what makes you tick; that you have a connection. Remind her of the good conversations you had; then have more of those. Get her to open up to you. Show her that you're more than a hot girl.\" Megan looked satisfied with her advice, but then added quickly: \"Whatever you do, do not sleep with her!\"\n\n\"I already did...,\" Riley said quietly, ashamed to admit she had been so easy.\n\n\"I know, don't do it again!\"\n\nRiley huffed. That was easier said than done. If she was going to convince Rowan to see her again, being around her was going to be very tempting. Somehow she wasn't convinced that if she got to that stage, Rowan would be so precious about her 'no girl twice' rule. \n\nMegan laughed. \"I know! She's hard to resist, isn't she? Don't I know it... I guess you'll just have to stick to public places. Don't go to the bathroom at the same time. Don't go up to her apartment. Use chaperons. Avoid dark alleys.\" Megan winked.\n\nRiley's mind filled with images of Rowan feeling her up in an alley. She blushed profusely. Megan laughed and started grabbing her stuff, making a move to leave. That was all Riley was going to get then.\n\n\"I have to go. Good luck! Text me if I can help with anything.\"\n\nAt that, she was gone. Riley was left alone with a million thoughts and questions; many more than she ever had before meeting with Megan.\n\n* * * * *\n\n\"Riley! Hey babe, what's up?\" Sarah's voice sounded out of breath.\n\n\"Did I catch you at a bad time?\" Riley hoped her friend had just been running for a bus, but with Sarah you never knew.\n\nSarah didn't clarify, which made Riley even more suspicious. \"No, not at all. Plus, I haven't seen you in ages so anything else can wait! What's new?\"\n\n\"Well...\" Riley had decided to come right out with it, but now that the moment was here, it was so difficult to find the words. \"Do you remember a while ago, erm... Rowan...?\"\n\n\"The guy you magically hooked up with again after walking away without his last name or phone number, and have been pining over for weeks? How could I forget?\"\n\n\"Yes, well, kind of...\"\n\n\"So, any new developments? Did he finally call?\"\n\nThis was going to be such a long story. Riley wanted to cut right to the chase and get Sarah on board with her plan, but she knew her friend wouldn't let her take any shortcuts. She tried anyway: \"That isn't the most important thing, actually...\" She heard Sarah start to protest, so she added quickly: \"Rowan isn't a guy...\"\n\n\"What do you mean, he isn't a guy? I know, he's definitely a pig for not calling you, but...\"\n\n\"No, what I mean is...,\" Riley interrupted again. She sighed... \"Sarah, Rowan is a woman.\"\n\nThere was silence at the other end of the line. Suddenly, Sarah started laughing. She was inconsolable for valuable seconds, in which Riley fretted about how to proceed from here. \"Well, that is new. That explains a lot!\"\n\n\"Really? What does that explain?\" Riley asked, allowing herself to get distracted from her main purpose.\n\n\"You being so secretive and weird. Usually when you have a crush, you can't shut about the guy and won't miss any opportunity to drag us into your analyses of every word he said to you. And now, at least after the first rush, you were just suffering in silence, not mentioning it once - even though we could all see how hung up you were from a mile away.\"\n\n\"I didn't know how to tell you guys...\" Riley said meekly.\n\n\"I have to be honest, I can't say I'm not surprised... But sweetie, it doesn't matter! It doesn't change who you are, or how we see you... Just who we need to try and hook you up with! I guess it broadens the horizon somewhat.\" Sarah laughed loudly again.\n\nRiley felt a weight lifting off her shoulders. \"Are you sure?\"\n\n\"Of course I'm sure.\" She chuckled. \"Finn may be a little weird at first. You know how he feels about lesbians, the perv. But wait... Are you a lesbian now, then?\"\n\n\"I don't know,\" Riley said honestly. She'd been asking herself the same question for weeks. \"I haven't felt this way about a woman before. And I only went up to her because I thought she was a man... But then we got talking. She's so interesting and smart and funny. And then... I don't know, there's something about her...\" \n\nShe sighed. She caught herself just in time; she'd almost added how she'd felt when she'd slept with Rowan. How this had, completely unexpectedly, been an experience unlike any she'd ever had with any guy. It had been heaven. If that didn't make her a lesbian, then what did?\n\n\"You're definitely gay for her, though,\" Sarah laughed.\n\nRiley had to laugh too, relieved her friend took this so lightly. \"Oh yeah... So gay!\"\n\nOf course, Sarah wanted to know exactly what had happened when Riley had met up with Rowan. What had they done? What had happened since? Riley gave her a fairly PG-13 account of her visit to the garage. She also told Sarah about Oliver's encounter with Rowan - at least, the titbits she knew - and the chat she had with Megan.\n\n\"Wow, Ri... I have to say: go you! Sleeping with a woman? That's something even I haven't done!\" Sarah concluded after Riley's story, clearly impressed with her previously believed to be vanilla friend. \"So you're madly in love with her and want to do something epic to make her fall for you, right?\"\n\nRiley didn't think she'd said that in so many words, but that was indeed the gist of it.\n\n\"Even though she hasn't called you and she's being a complete ass?\"\n\n\"Yes...,\" Riley said, with a hint of shame that she still wanted Rowan more than anything, regardless of how the mechanic was treating her.\n\n\"Alright, you're gonna need all the help you can get then. All hands on deck! Do you have any ideas?\"\n\nFilled with gratitude, Riley outlined her idea to Sarah, causing her friend to kick into full-on project manager mode. \"It's brilliant, Ri. Leave it with me, I got this.\"\n\n\"You really think it will work?\"\n\n\"If it doesn't, she's a complete idiot.\" Riley thought that in this respect Rowan could well be a complete idiot. \"It will work,\" Sarah added, full of confidence Riley didn't feel.\n\nRiley hung up the phone and placed another call to arrange the final prop. Now it was time to land the main character. With trembling fingers, Riley dialled the next number.\n\n\"Good afternoon, Ride Again, Motorbike Mechanics. How can I help?\" \n\nRiley's heart skipped a bit when Rowan's husky voice came on the line almost immediately. The mechanic must have been close to the phone. Riley imagined her - looking gorgeous as ever - wiping her greasy hands on her coveralls as she unsuspectingly answered the call that would change her future. At least Riley hoped it would. She felt her mouth go dry. 'Talk,' she urged her brain, 'say something, now!'\n\n\"Hey Rowan, it's Riley.\" \n\nRiley wasn't sure what she had expected - a chuckle, a cocky yet friendly 'hey straight girl', maybe even a 'who?' - but there was only silence on the other end of the line. Now what? A wave of panic rushed over her. What if Rowan didn't even remember her; what if Megan had it all wrong?\n\nAfter what seemed like forever, Rowan's reply sounded strained, as if she was trying - but failing - to make it sound like a joke: \"I guess you're not calling about a motorbike?\" \n\nPart of Riley was glad to hear Rowan struggling to play it cool; whatever that meant. \"No, I'm not.\" Riley took a deep breath and forced herself to say the words she'd had rehearsed so many times. \"I'm calling to tell you we're going on a date on Friday. I'll pick you up at 8.\"\n\nRiley held her breath and waited. How would that go down? Again there was nothing but silence on the other end of the line. No quick, cheeky come-back; no confident twist of the conversation to suit Rowan; not even a laugh or any sound of surprise.\n\n\"I don't date,\" Rowan's curt reply sounded eventually.\n\nRiley forced a breezy tone: \"Why not? What's the worst that could happen?\" \n\nShe didn't expect Rowan to answer that. It was the cheesy movie line that persuaded the cute girl to follow the wrong but hot guy into mischief. It was a Rowan line, and Riley surprised herself with her bravery in saying it. The tables were turned; Riley was calling the shots. But for how long? She expected Rowan to take back control at any moment.\n\nThere was a big sigh at the other end of the line. \"What if I have plans?\" \n\nRowan's reply was uncharacteristically weak. Riley was starting to feel she might actually agree. Could it really be this easy?\n\n\"Do you?\" she asked, steadying her voice to keep her excitement at bay.\n\nAfter a hesitating silence that made Riley think Rowan considered lying, the mechanic simply said: \"No.\"\n\nRiley's heart was racing. Was this it? Was the deal sealed? \"Great. See you Friday then,\" she pressed on quickly. \"Oh and Rowan... A parcel will arrive at the garage. That's what you'll wear.\" Riley knew she was pushing her luck, so she hung up quickly, before Rowan could protest.\n\nShe did it! Technically, Rowan hadn't agreed to the date, but she hadn't turned her down either. Riley knew it was still possible she'd encounter a locked door on Friday. It would be easy for Rowan to stand her up. She pushed this thought to the back of her mind; she had to keep believing this was going to happen.\n\nOver the moon excited and sick with nerves, she sent a message to Sarah: [We're on! Or at least she didn't say no...]\n\nSarah's response was quick and encouraging: [That's my girl! I'll make sure everything will be ready. She won't know what hit her!]\n\n'Let's hope so...,' was all Riley could think. This had to work. She only had one chance to sweep Rowan off her feet and she'd better not blow it.\n\n* * * * *\n\nRiley straightened her dress and rang the door bell. She'd probably never been this nervous in her life. What if Rowan wasn't there? What if she was, but she was upset about the way Riley had played this? What if Riley would mess this all up? What if... Her thoughts were interrupted by the sound of footsteps on the stairs, followed by the door being unlatched. She was here! \n\nRowan's tall and slender frame appeared in the doorway. Her eyes visibly expanded as she took in the sight of Riley. Riley knew she looked stunning in her black cocktail dress, which showed off her figure and ended just above her knees. She had paired this with a set of black heels and had tied up her blond hair in an intricate swirl. She felt every inch of her body heat up in turn as Rowan's appreciative stare slid slowly over it. She squared her shoulders under Rowan's gaze and tried to ooze confidence she didn't feel.\n\n\"Wow, you look amazing...,\" Rowan said, her eyes still glued to Riley's body.\n\n\"Thank you,\" Riley said, with what she hoped was an enchanting smile. \"You look... different than expected.\"\n\nThe mechanic looked handsome as ever and Riley felt compelled to let her eyes roam over her - to save the sight in her memory utterly and completely, just in case it was the last time she would see her; just in case Rowan had only opened the door to tell her to go away. Wearing black chinos and a neat army green jersey over a black button-down, the mechanic looked like she had made the effort to dress nicely. However, she had clearly ignored the instructions Riley had given her. Was that because she wasn't planning to go on a date at all?\n\nRiley made a point of critically looking over Rowan's outfit. \"Did you not get the parcel?\"\n\n\"You weren't serious about putting that on?\" Rowan asked incredulous.\n\n\"Of course I was! Why did you think I wouldn't be?\"\n\nRowan looked slightly embarrassed - an expression Riley had never expected to see on the confident woman's face. \"Well, I can see that now.\" She gestured at Riley's outfit and then shrugged. \"Sorry about that. Shall we go?\"\n\n\"No, you're not dressed appropriately,\" Riley stood her ground. In fact, Rowan would be absolutely fine in her current outfit, but it wasn't the picture Riley had in her head and she wanted this to be perfect. \n\n\"I don't like people telling me what to do,\" Rowan said earnestly but with a hint of a grin on her face.\n\n\"Yeah, no kidding,\" Riley mumbled and then, with brashness that came out of nowhere, she said: \"Well, either you go change or you're not coming with - your choice.\" As soon as she'd said the words, she regretted them. She was giving Rowan an easy out. She prayed the mechanic wouldn't take it.\n\nTo her surprise, Rowan just grinned and shook her head. Riley could understand her surprise. She must be wondering what had happened to the shy, impressionable girl who swooned at her every word. Riley knew that girl was very much still present on the inside, but she was trying her best to be a more confident and determined version of herself.\n\n\"Okay fine, give me five minutes,\" Rowan said then, causing Riley's insides to jerk ecstatically. She really was going to come on this date! Rowan jogged up the first steps of the stairs. As if it was an afterthought, she turned round and asked: \"Do you want to come up?\"\n\nAlarm bells went off in Riley's head as memories rushed in of her and Rowan entangled in various places in the apartment. Megan's voice came back to her, warning her to stay in public places and not be alone with Rowan, if she didn't trust herself to resist her. She certainly didn't, so she said coolly: \"No, I'll wait out here. Hurry, we'll be late.\"\n\n\"Late for what?\"\n\n\"You'll see...\" Riley smiled mysteriously, receiving another grin from Rowan in return before the mechanic disappeared up the stairs.\n\nAfter ten minutes of impatiently waiting, Riley heard the upstairs door being closed and a moment later Rowan came into view. She spread out her arms and gave Riley a look of played resignation.\n\n\"Really? This is what you had in mind?\" She asked.\n\nRiley barely suppressed a gasp. Rowan looked even more dapper than she'd imagined in the black tux Riley had rented for her. It was a perfect fit and it accentuated her tall leanness. She had slicked her dark hair back and had paired the suit with a pair of black oxfords. Riley hadn't rented those and she was amazed to see Rowan's owned shoes like those. She realised she'd been ogling the handsome figure in front of her for some time and quickly looked up to see the mechanic watching with an amused grin.\n\n\"Much better,\" Riley said, trying to sound more indifferent than she felt. \"Although you took longer than five minutes.\"\n\n\"I would have been quicker if I didn't have to look up how to tie this bloody thing.\" Rowan pulled at her bow tie. \"You do know they sell these pre-done too?\"\n\nRiley took one step towards Rowan and straightened the tie. \"Well, you did an okay job with it.\" She winked at Rowan. Where did that come from? Since when did she wink? Having Rowan actually going along with her plan was giving her confidence, which was slowly seeping into her words and her actions.\n\nRowan gave her another amused grin as if she too noticed the change in Riley's demeanour. \"Not bad for a simple mechanic, hey?\"\n\nShe was much more than a simple mechanic and Riley suddenly wondered if she'd worn an outfit like this before. Was that why she pulled it off with such ease; why she had the perfect pair of shoes to go with it? Had Diana taken her to fancy events before, dangling Rowan off her arm like the perfect little tomboy toy, while she drank expensive champagne? No, of course not. She reminded herself that Diana was married and probably couldn't be seen with Rowan in public. Still, she couldn't shake the image of a dashing younger version of Rowan smiling lovingly at a fiercely attractive older woman.\n\n\"Let's go then, simple mechanic,\" she said, forcing a smile.\n\n\"We're walking? Or do you want to take the bike?\"\n\n\"I'm not getting on that bike of yours in a dress again!\" Riley joked, causing Rowan to burst out laughing. \n\n\"And I'm not walking in these heels either,\" she added. \"We're driving, come on.\"\n\nRiley had deliberately parked a little way down the street so the car she'd borrowed for the occasion wouldn't steal her thunder. She had to beg and plead with her uncle to lend her his 1969 Ford Mustang, which was his single most prized possession. Riley had always teased him about it, saying it was a midlife crisis car, which obviously he had loved to throw back at her when she had called him with her request. He had caved eventually but made her promise not to leave any traces of her interactions with whichever lucky guy she was planning to make out with in the car. That was an easy promise to keep.\n\nThe old-timer had the effect Riley had hoped for. \"Woo-hoow! Mustang Sally! This is your car!? You're full of surprises...,\" Rowan burst out as she did an appreciative lap around the sledge.\n\n\"You're not the only one who likes vintage.\"\n\nRowan touched the paintwork lovingly and then crouched down, scrutinising the wheels. \n\n\"Clearly... They really don't make them like this anymore, you know,\" she said, now having moved on to the car's grill.\n\nRiley smiled at her enthusiasm. \"Are you done or should I leave you two alone for a moment?\"\n\nRowan looked over with one of her heart-melting crooked grins. \"So much beauty... Makes me want to pop this baby's hood.\" Something in that naughty smile, and the way she let her gaze wander over Riley's body once more, told Riley she wasn't talking about the car. Riley smiled at her. She could flirt all she wanted; she wasn't getting any. At least, so Riley's mind firmly stated. Her body had other ideas and was sending hot shock-waves to her lower regions.\n\n\"I bet... But unfortunately, we don't have time for any of that. Hop in, we really have to go now.\"\n\n\"Maybe later then...\" Rowan winked.\n\nThe short ride was filled with Rowan praising the car. Had Riley seen these leather seats? That quality of stitching was hard to come by now. Listen to the sound of that engine; wasn't that beautiful? And, Riley's personal favourite, from what year was this car? \"69? Ah, even better,\" obviously accompanied by another wide grin. Rowan's enthusiasm was adorable. Riley could hear her passion for anything mechanical shining through in every word. They reached their destination sooner than Riley would have liked. She took a deep breath and tried to swallow her nerves. Showtime.\n\nAs they crossed the parking lot, Rowan looked curiously at the building. \"This is the theatre,\" she observed the quite obvious. \"This is where we're going?\" Riley was pleased to hear that Rowan didn't seem disappointed or bored by the prospect. If anything, she may have been slightly impressed.\n\n\"Can I get you a drink?\" Rowan asked, as they entered the foyer a moment later. \"Do we have time?\"\n\nRiley nodded and asked for a prosecco, drawing an amused look from Rowan. Why did she seem to find everything Riley did and said funny? Riley felt more and more need for a bit of Dutch courage. What if this had been a mistake and Rowan hated it? ",
        "\"Hey, there she is!\"\n\nRiley turned round to see her friends walking up to her. They were in on the plan and had been waiting for Riley and Rowan to arrive. They had been so excited they would finally meet Rowan, although the boys were much better at hiding it than the girls. Riley had pleaded with them not to make a scene and be on their best behaviour. She felt nervous about all of them being here. Although only Sarah was pivotal, the others couldn't just be stripped out of her master plan for impressing Rowan. However, this did mean springing her friends on Rowan all at once, without warning. But then, she'd have to bite the bullet sometime, if she and Rowan were going to be together. She reprimanded herself for getting ahead of herself. They were still very far from being together.\n\n\"Damn girl, you look stunning!\" Finn said, provoking a poke in his ribs from his girlfriend, Sarah. \"Ouch. I just meant to say, Rowan is a lucky lady. If I were her I'd be trying very hard to get even luckier tonight, if you know what I mean.\" He grinned sleazily.\n\n\"Everyone knows what you mean, honey. And Riley is not going to put out tonight!\" Sarah gave both of them a stern look. As if Riley needed reminding. She had a feeling that despite the challenging task she had set herself tonight, the main ordeal would be to resist getting physical with Rowan.\n\n\"Where is she, anyway?\" asked Jenny, barely containing her excitement at meeting her friend's enigmatic heartthrob.\n\n\"Over there.\" Her boyfriend, Ollie, nodded towards the bar. Out of the four friends, he was the only one who had met Rowan before, having called her out drunkenly in the pub for not calling Riley back. Understandably, he seemed a bit on edge about seeing her again.\n\n\"So you actually did it. She is here, wearing the tux and all,\" Sarah said, beaming like a proud mother praising her child's incomprehensibly scribbled drawing.\n\nRiley nodded, now getting really nervous about the moment Rowan and her friends would meet. What if they didn't behave? What if Rowan didn't? She didn't have much time to consider this, as Rowan was now coming over with the drinks. She was clearly surprised to see Riley surrounded by a group of people.\n\n\"I don't think I brought enough drinks,\" she said casually while giving Riley a curious glance. Did she look annoyed? Riley couldn't tell.\n\n\"So you are the infamous Rowan,\" Sarah couldn't help jumping in there, looking Rowan up and down, assessing what Riley saw in her. She gave Riley an approving look, as if Rowan wasn't standing right in front of her. Riley was mortified; there it was, someone was misbehaving already.\n\n\"Infamous?\" Rowan chuckled, \"I know I may look like I belong in a Mafia movie, but infamous...?\"\n\n\"James Bond, more like,\" Finn countered.\n\n\"I don't usually dress like this - you know, can't blow my cover - but this one here had me convinced I would stand out without this.\" Rowan deliberately looked around the room at the crowd, which was, on average, dressed much more casually. \"Clearly, I'm not standing out at all now,\" she grinned.\n\nRiley smiled and shrugged. Rowan would stand out wherever she went, whatever she wore. Riley cursed herself for swooning like a schoolgirl. \n\n\"Rowan, let me introduce you to my friends,\" she said quickly. She addressed each of them in turn while Rowan shook their hands and said it was nice to meet them. \n\nWhen she got to Ollie, Rowan interrupted her: \"Oliver, right? I remember you.\" She grinned cheekily at him and Ollie looked away embarrassed. Riley was amazed to see her cavalier charm didn't only work on naive straight girls like she had once believed herself to be.\n\n\"Yeah, I'm sorry about that. I had a few too many that night. I shouldn't have said all of that,\" Ollie mumbled.\n\n\"It's all good. Drunk people are the most honest. Isn't that what they say?\" She winked at Ollie, who actually blushed a little. Riley felt her own cheeks redden too. Ollie's drunken confessions had told Rowan everything she needed to know about Riley's true feelings for her.\n\n\"You guys are so late. We almost thought you weren't coming,\" Jenny said then, her voice containing a hint of worry and her eyes questioning Riley.\n\n\"Well, someone wasn't ready when she was being picked up...,\" Riley said with a nod towards Rowan.\n\nRowan huffed. \"Do you see how many pieces this thing has?\" She gestured at the tux. \"And then I had to find my shoes. I figured you would send me back up if I'd worn sneakers.\"\n\n\"You're absolutely right. And then you had to have a little moment about the Mustang.\" Riley looked at her friends and added: \"There may have been some drooling...\"\n\n\"It wasn't just the car that caused that,\" Rowan countered with a sly grin, easily taking back control of the situation and making Riley blush again.\n\n\"Drooling or not, you missed the opportunity to enjoy my lovely company. I have to run. I'll catch you in the intermission,\" Sarah said then. She gave Finn a quick kiss and rushed off. \n\nWhen none of the friends seemed surprised by this, Rowan gave Riley a questioning look. She didn't ask anything, though. In fact, she hadn't asked much at all; not what they were here to see; why she needed to wear a tux; why all her friends were here too. She seemed relaxed and quite happy to take things as they came. She wasn't being particularly affectionate or romantic towards Riley, but what could she expect, really, from someone who didn't date? Thankfully, there were still Rowan's cheeky flirtations, which made Riley feel that she was at least somewhat enjoying herself.\n\nAn announcement was made that the show was about to start and the group made their way into the theatre. As they sat down, Rowan took in the setting on the stage. Several people were already milling around, sorting through their sheet music and tuning their instruments. \n\n\"An orchestra? I should have known...,\" Rowan mused.\n\n\"Yeah,\" Riley replied, \"what do you think? Is it alright?\" Why did she have to ask that? She had been doing so well, playing it cool. But her need for a sign of appreciation had gotten the better of her. She needed to know that Rowan was having a good time; that she wasn't regretting being here; ideally, that Riley's actions were beginning to melt Rowan's stoic no-romance attitude.\n\nThankfully, Rowan smiled at her. \"Yeah, it's alright.\" Riley had hoped for a little more but Rowan seemed genuine, so that would have to do for now.\n\n\"Hey, isn't that Harley, I mean your friend, Sarah, on the stage?\" Rowan pointed towards the string section, where Sarah had entered and was now settling down with her cello.\n\nRiley nodded. \"She's part of the orchestra. What did you call her? Harley?\"\n\nRowan smiled. \"That's just the motorbike she reminds me of, so that's what I've called her in my head.\"\n\n\"You remember that?\" Riley asked, strangely moved that - despite her obviously frequent habit of picking up girls in bars - Rowan remembered such a small detail about the conversations they'd had when they had first met. She allowed herself to think that bode well for tonight. \n\n\"Of course I remember. I never forget a motorbike,\" Rowan said in the same way people say they never forget a face. It made Riley smile. Somehow she knew it was true; Rowan would forget faces, but not bikes. \n\nRiley, of course, remembered that night well too, having replayed it so many times in her head; how Rowan had given such accurate choices of motorbikes that matches her and her friends' personalities; how she had surprised Riley by asking what music she would play for her. Did the mechanic remember what Riley had answered?\n\nThe lights in the audience were dimmed and the conductor entered the stage. The audience applauded and then quieted down. Soon, the tones of the first of Vivaldi's Four Seasons swept through the theatre. \n\nAfter a while, still nervous about how this date was received, Riley glanced at Rowan, whose eyes were glued to the stage. Riley, on the other hand, struggled to drag hers away from the mechanic's handsome profile. A strand of her dark hair had escaped and hung nonchalantly across her forehead. The stage lights reflected enchantingly in her brown eyes, adding to the mesmerising draw she had on Riley. \n\nRowan's tattooed hand was resting lightly on the armrest between their chairs, so close Riley would touch it if she moved but an inch. She felt sorely tempted to hold Rowan's hand. Could she do that? Was that too date-y? Another wave of insecurity rushed through her and she decided against it. Instead she shuffled in her seat so her leg brushed against Rowan's knee, which was man-spread in her direction. When Rowan didn't retreat, Riley allowed her knees to gently lean against Rowan's, enjoying the physical contact. She directed her gaze firmly at the stage so as to not make 'a thing' out of it and scare Rowan off.\n\nVivaldi was followed by Brahms and Chopin, each piece briefly introduced by the conductor, who made it accessible even to those not very familiar with classical music. When the orchestra broke up for the intermission, so also broke Riley and Rowan's tenuous contact. When they were leaving for the foyer, Riley felt Rowan's hand lightly touch her lower back to steady her as she made her way up the stairs. It sent shivers down her spine and Riley wished the stairs would go on forever.\n\n\"What did you think, Rowan?\" Jenny took the words out of Riley's mouth as they were gathered in the foyer, sipping their drinks. In a way, Riley was glad she didn't have to ask the question and risk coming across insecure again.\n\nRowan swallowed the last bite of the canape she'd been eating. Riley saw that she had another two in a napkin. She gave Rowan an amused look, which the mechanic returned with an apologetic grin.\n\n\"You didn't tell me anything about what we were doing. I didn't have dinner. I thought that might have been part of the plan,\" she whispered to Riley, before turning to Jenny and saying sincerely: \"That was great. And Sarah is clearly very talented.\"\n\n\"Have you ever been to something like this before?\" Finn asked. Riley felt her hackles going up. He was being so rude, implying a mechanic surely wouldn't frequent theatres and classical music performances. Or was Riley just being sensitive?\n\nRowan certainly didn't seem fazed by the question. \"I have, a few times,\" she said vaguely. Once again, Riley pictured her at fancy events with Diana, being the older woman's most dazzling accessory; better than a limited edition Gucci bag.\n\nHer thoughts were stopped from going down that depressing trail by Sarah joining them. Everyone congratulated her on a great performance, which Sarah accepted with exaggerated bows.\n\n\"Right, I need the bathroom like there's no tomorrow,\" Sarah said unceremoniously. Riley nodded. This was her cue.\n\n\"I'll join you,\" she said quickly, shooting a quick glance at Rowan. She'd be alright, wouldn't she? Jenny and the boys knew what to do. They wouldn't let Rowan run off, or let her come looking for Riley. They had strict instructions to usher Rowan back to her seat when the show was about to continue.\n\nSarah and Riley made a beeline for the restrooms before veering off towards the backstage area as soon as they were out of sight.\n\n\"I've put your music out and Jim here is happy to be your page turner. The conductor will announce you first thing after the break. So we should be all ready to go.\"\n\nRiley nodded nervously. Of course, she'd been on stage quite a few times and it was far from her first rodeo when it came to playing with an orchestra, but this time she was the special guest and she was trying to impress a special guest of her own.\n\n\"Are you okay, sweetie? Nervous?\" Sarah asked kindly. Riley nodded again.\n\n\"You'll be great. You are going to sweep her off her feet.\"\n\nRiley smiled and hugged Sarah gratefully. She was so glad to have her friend with her on the stage for this. It felt good to have her support, musically and emotionally.\n\n\"I better go and take my place. See you up there. Good luck!\" At that Sarah left her to fret nervously at the side of the stage, while more and more musicians went back onstage. She could also see the audience slowly trickle back into the theatre. She couldn't see Rowan from where she was standing, so she just had to trust her friends to have brought her back in, despite Riley not having reappeared in the foyer.\n\nThe conductor went on next and after the applause had quieted down, he started his announcement. Riley heard him introduce her and the piece they were going to play next. He told the audience how its composer, Gershwin, had been inspired by the mechanical noises on a train journey, which to Riley seemed such a nice parallel with Rowan's excitement for engine sounds. She hoped the piece would resonate with Rowan as much as it reminded Riley of her: its multi-layered, bold, and unapologetic character; how it stood out from the rest of the concert - from anything else around it, just as Rowan herself did.\n\nThe applause swelled again and Riley knew it was time to go on. 'Don't stumble', she urged herself. This was so much more nerve-racking than any other time she'd played. She made it to the piano unscathed and faced the audience for a quick acknowledgement. She couldn't see into the crowd with the bright lights in her face but made a deliberate effort to look in the direction of her friends and her date.\n\nSitting down, her hands hovering over the keys, Riley saw they were trembling slightly. That was normal; she always had that. It would stop after the first note. She nodded at the page-turner, at the conductor: ready. And she started. \n\nAs soon as her fingers touched the keys, Riley's nerves dissipated. She lost herself in the music and felt the familiar thrill when the orchestra joined in. Even Rowan disappeared from her mind as her fingers touched the keys lovingly in ever-changing combinations, creating those unique jazz-like sequences that characterised this 'Rhapsody in Blue'. \n\nAs usual, it was over too quickly. Riley could have played on forever; she enjoyed the challenge this piece provided, the sense of accomplishment when she nailed it. In a daze, Riley took a bow, only vaguely aware of the volume of the standing ovation she received.\n\nIt wasn't until she was backstage again that she slowly came back to her senses. When planning this evening, she had never thought past this moment. This was what it had all been about; she wasn't sure what to do next. After a moment's reflection, she decided she would sneak back into the audience and find her seat, like nothing had happened. However, as she emerged from the stage door, she was startled by a familiar husky voice: \"So this is where you disappeared off to...\"\n\nRowan was leaning casually against the wall, clearly waiting for her. Riley smiled shyly. Now that her great moment of surprise had passed, she had no bravado left to face Rowan. She wished she had at least prepared a little bit; knew at least one thing to say afterwards.\n\n\"That was it, wasn't it? The piece you said you would play for me?\" Rowan looked at her intently, no hint of her usual amusement or cockiness on her face. Riley nodded, still not knowing what to add.\n\nRowan took her hand and gently pulled her closer. She intertwined her fingers with Riley's. Riley's nerves surged back in full force. She decided there and then that this was even scarier than getting on that stage.\n\n\"I can see why you picked it. That was great... Thank you.\" Rowan's dark eyes held her gaze with an unprecedented intensity and Riley could see a whirlwind of emotions in them. What was the mechanic thinking? More than ever, Riley was dying to know what was going on inside Rowan's head. \n\n\"Really...,\" Rowan added after a moment, \"that was beautiful. I can't believe you just did that for me.\"\n\n\"You're welcome. I'm glad you liked it,\" Riley replied meekly. What happened to her brilliant plans to sweep Rowan off her feet? It appeared she was the one being swept off her feet again. And unlike her, Rowan didn't even have to make any grand gestures; all she had to do was look into Riley's eyes. What was wrong with her!?\n\nRiley suddenly felt very insecure about standing in the empty foyer, in such close proximity to this stunning woman, who she sensed was having some pretty intense feelings in this very moment too. Megan's warnings came back to her again: 'Don't be alone with her.' Riley felt the temptation grow with every second Rowan was still looking at her, letting her eyes roam over Riley's lips. She was doing her magic again: flirting with her eyes, with her body; making Riley weak at the knees without saying a single word.\n\n\"Shall we go back inside?\" Riley asked softly, not wanting - but needing - this moment to end.\n\n\"If we have to...\" Rowan smiled, a hint of sadness shining through.\n\nFighting the urge to usher Rowan into the nearest restroom cubicle instead, Riley nodded and started towards the theatre hall, not letting go of Rowan's hand. They slipped quietly back into their seats, Riley receiving meaningful glances from her friends upon seeing their connected hands. Riley willed them not to comment, not to make a scene that would undoubtedly burst this beautiful bubble she found herself in. But her concerns were ungrounded; her friends didn't say anything and Rowan seemed happy to keep holding her hand, resting it lightly on Riley's thigh. Riley was acutely aware of the back of Rowan's hand on her leg. She could feel its warmth, despite the fabric of her dress preventing their skin from touching.\n\nAs the sweet tones of the violins swept over the audience, Riley looked at Rowan in the semi-darkness. This time Rowan turned to meet her eyes and smiled at her. Riley smiled back, feeling a surge of affection for this woman, who still remained such a mystery to her. Encouraged by the intimacy of the moment, Riley laid her head on Rowan's broad shoulder, still half expecting to be gently shrugged off. Instead, she felt Rowan briefly touching her head to Riley's, before directing her gaze back to the stage. \n\nRiley stayed there for the remainder of the concert, despite her ear being pressed into the mechanic's muscular shoulder, providing a distorted musical experience. She couldn't believe that she was sitting here so closely connected with Rowan, so date-y, so couple-y. Riley enjoyed it to the fullest, knowing full on well that it may not last.\n\nWhen they walked out a while later, Rowan sure seemed to have gotten into the date spirit, letting Riley hold her arm. She seemed a bit lost in thought and wasn't her usual boisterous self. Riley hoped that she was in awe of the music and, even better, of Riley playing for her; instead of wondering how she got here and figuring out a way out.\n\n\"Allow me,\" Rowan said, as they reached the car, before gallantly opening the driver's door for Riley. Riley stepped inside and turned round just in time to catch Rowan looking at her backside. Rowan was back to being herself, it seemed. She grinned cheekily, unperturbed about the fact she'd been caught red-handed. Not a complete gentleman after all then.\n\nThe drive home was spent with Riley grasping Rowan's hand after every time she had to switch gears. She knew she was being needy but she couldn't help it. It was so great feeling Rowan's skin, after all this time she'd been fantasising about it. Rowan sported a grin like a schoolboy, which formed a stark contrast with her pensive mood earlier. Somehow, this made Riley less nervous. At least now she was getting an idea of what was going on in Rowan's head; seeing her steal glances at Riley's long legs as she moved the pedals.\n\n\"Can I take her round the block?\" Rowan asked when Riley stopped the car outside the garage. \"Just to see what she feels like?\"\n\nRiley sensed that Rowan wasn't being ambiguous this time; she really was talking about the car. It was just like her that the car was the primary thing on her mind now. It reminded Riley of the moment they had come back to the garage after the test drive all those weeks ago; how she had been lost and forgotten to her motorbike alter-ego.",
        "\"Erm, no! You have been drinking,\" she said firmly.\n\n\"Aaah... True. Okay, you're right. I'd love to take her for a ride sometime though,\" Rowan replied. There was that 'sometime' again; the same way she'd used it when they first met, implying they would meet again. Was she doing the same now? Did she want to see Riley again?\n\n\"It's not actually my car. It's my uncle's,\" Riley confessed, much later than she should have.\n\nRowan looked taken aback for a moment, before laughing heartily. \"So you only brought it to impress me?\"\n\nRiley was embarrassed at being so transparent. She tried to save face: \"Did it work?\"\n\n\"Kinda, yeah...\" Rowan leaned closer, making Riley's heart stop. Riley caught a waft of whiskey on her breath, which also brought her back to the night they met. That night Riley had let her walk away. She would do the same tonight - she had to. Rowan's closeness was intoxicating. Riley fought the urge to kiss her. Kissing wasn't a strict no-go but she didn't trust herself not to go any further.\n\nRowan's eyes roamed over Riley's body. \"Although this dress did its part too,\" she said, without taking her eyes off Riley's cleavage. She reached towards Riley's chest. Riley had to use all her will-power to stop Rowan's hand before it touched her.\n\n\"God, you really are like a teenage boy. What do you think this is, prom night?\" Riley said, relieved at having survived the close call, and sounding much more nonchalant than she felt.\n\nRowan laughed. \"We do look the part, don't we?\" She gave Riley another sweeping gaze and added: \"You know what they say about prom night... About panties on prom night, in particular...\"\n\n\"Yeah, that's not going to happen.\" Riley forced herself to say, despite every fibre of her being screaming the opposite.\n\nRowan gave her an amused look. \"Really?\"\n\n\"Yeah, really. Now get out of my car.\" 'Before I change my mind,' she added in her head.\n\nRowan grinned and swung her long legs out of the low ride. \"You mean your uncle's car.\" She got out and leaned into the car, directing her piercing brown eyes at Riley. \"You sure you don't want to come up?\"\n\nRiley cursed Rowan in her head for asking her that. Why wasn't Rowan thinking about her stupid no-girl-twice rule now? Why did she have to make this so difficult and tempting? Riley knew what she had to do. It would put Rowan in charge, give her another easy way to get out, but it was the only way to find out how Rowan really felt.\n\n\"Do I look like the kind of girl who would put out on the first date?\" She said, with what she hoped was a seductive grin. \"By the way, you're up for organising the next date.\"\n\nAt that she reached over and pulled the door closed, leaving Rowan standing on the sidewalk with a look of utter disbelief on her face. Riley put the car in gear and drove off quickly, feeling her resolve crumble with every second she could still see the mechanic in her rear-view mirror. She took a deep sigh of relief. She did well. She did more than well; she nailed it. But resisting Rowan had been much harder than she'd ever anticipated. And she had a feeling it would get harder and harder with every date they went on, if indeed, there were more to come.\n\n* * * * *\n\nRiley's office phone started ringing as soon as she'd returned to her desk. It was one of those days; she'd been in and out of meetings non-stop since lunchtime and she was actually looking forward to spending the last hour of the day catching up on her emails and not talking to anyone. She sincerely hoped the person on the other line wasn't one of her more difficult clients.\n\nShe saw on the display that it was the reception calling. \"Hello, Riley speaking,\" she answered with her internal greeting.\n\n\"Hi Riley, I've got your 4 o'clock here for you.\"\n\nHer 4 o'clock? Riley wasn't aware of any meetings at this time. She opened her calender quickly to double-check. A gloriously empty block stared back at her. She racked her brain; did she forget anything?\n\n\"Are you sure? I'm not expecting anyone,\" she replied.\n\n\"That's what the lady here says. Hang on...\" Riley heard the receptionist turn to whoever was with her and ask: \"What did you say your name was?\" \n\nRiley rolled her eyes. The receptionist was meant to ask that before calling up, so she could tell people who was there straightaway. However, usually she was too busy tending to her nails or checking social media. Riley couldn't hear the other person's reply but shortly after the receptionist came back on the line. \"It's Ms Gershwin, here for the meeting about cyber-security.\" \n\nRiley's brain was struggling to process the information. A meeting about cyber-security? That didn't help; that was a one-word summary of her whole job. She sighed. She'd better go check out what was going on. Hopefully it was all a misunderstanding and she could get back to her desk right-away.\n\nWhen she got to the reception desk, she didn't immediately see her visitor. She looked questioningly at the receptionist, who nodded with a curious expression towards the one lonely sofa that constituted their waiting area. Riley's heart skipped a beat before starting to race frantically as if to make up for the missed beat. She would recognise that slender body anywhere.\n\n\"Hello, straight girl,\" Rowan grinned her crooked smile as she got up from the sofa.\n\nRiley struggled to pull herself together. \"Ms Gershwin?\"\n\n\"I wasn't sure you would come down if you knew it was me,\" Rowan said with a wink.\n\nRiley had no idea why she would think that; she would walk to the end of the world just for a glimpse of the mechanic - pathetic as that was. Surely, Rowan knew that by now. \n\n\"I don't have a meeting with you in my diary, Ms Gershwin. Are you sure you have the right date?\" Riley teased, still too shell-shocked to fully remember that she was actually upset with Rowan. \n\nThat realisation was now slowly getting back to her. She had been waiting to hear from the mechanic for almost three weeks. She'd been convinced she'd nailed their first date and Rowan was starting to warm up to the idea of her. She'd been floating on a pink cloud for the first few days after, expecting Rowan to call to ask her out at any moment. \n\nWhen the call hadn't come, Riley had at first thought there must be something wrong with her phone. She'd kept checking it over and over again, getting her friends to call her to make sure it was ringing. Classic denial. Since then, she'd gone through the other stages of grief. Anger at the mechanic - how dared she just disappear without a trace again? Bargaining - what if she just called Rowan herself instead? Depression - did she really not want to see Riley again? And finally, acceptance - maybe it was for the best, she should just forget about her. No, who was she kidding? She wasn't anywhere near acceptance; she was solidly stuck on depression and anger.\n\n\"I was hoping you could sneak out early.\" Rowan paused and then added softly, almost shy: \"You know, for that second date you mentioned.\"\n\nRiley tried to keep her excitement from showing. She wanted to be angry with Rowan for taking so long, but her heart had already forgiven the mechanic. What was it about her that made Riley drop everything - even her most heartfelt frustrations? She realised she would have to start giving Rowan some counterweight. Maybe next time.\n\nShe shot a quick glance at the receptionist, who was trying her best to look as if she was not listening in. Riley knew that anything she did hear would go round the company in no time. She ushered Rowan outside and around the corner, just in case anything could be derived from their body language.\n\n\"Well, that took you long enough,\" she said, trying to make even a hint of her annoyance of the past weeks known.\n\nRowan shrugged. \"I lost your number,\" she said simply. \n\nClearly, that was all the explanation Riley was going to get, so she asked: \"How did you find me now then?\"\n\n\"For a cyber-security specialist, you are surprisingly easy to find. I found your company in no time.\" Rowan grinned and waved her hand impatiently. \"Anyway, shall we go?\"\n\nRiley huffed. She just assumed Riley would be able to drop everything and play hooky, even if it was just an hour early? She looked at her watch; actually, 50 minutes now.\n\n\"Where are we going?\"\n\n\"It's a surprise.\" Rowan looked her up and down. \"But at least you're dressed appropriately for it.\"\n\nRiley followed Rowan's look along her body. She was in jeans and a blouse; what was that appropriate for? Rowan didn't say any more and Riley knew there was no point asking. She could be infuriatingly mysterious. Ironically, that was also part of her charm.\n\n\"Fine, let me just go pack up upstairs.\" Riley realised she'd made up her mind about going the moment she saw Rowan. However, waiting to admit it somehow made her feel less like a smitten school girl. Rowan grinned triumphantly. \n\n\"Wait here!\" Riley urged her. If the mechanic would come inside, it would be the talk of the town. Riley had enough damage control to do as it was.\n\n\"Just a misunderstanding. She had the wrong company,\" Riley said breezily to the receptionist, before rushing upstairs and chucking her stuff in her bag. She dashed into the bathroom to check her hair and make-up. She looked tired, exactly as was to be expected after the busy day she'd had, but not at all the way she wanted to look for Rowan on a second date. There was no time or hope for fixing anything, though, so she made her way downstairs.\n\nThe receptionist gave her a sly smile, which puzzled Riley until she looked through the big glass doors and saw Rowan outside on her motorbike. She sighed. Which part of 'wait around the corner' did she not understand? She really was too stubborn for her own good. It was a lost case trying to keep up appearances so Riley held her head high and walked outside to meet Rowan.\n\n\"Very inconspicuous,\" she said, suppressing a smile.\n\n\"Should I be? Are you ashamed of me?\"\n\nRiley shook her head wearily. \"The receptionist is the biggest gossip in town. Who knows what she will make of this.\"\n\nRowan laughed. \"Oh, you are worried she'll tell everyone you slipped out of work early to ride off into the sunset with a big old dike?\"\n\nRiley started to laugh too, until Rowan put her arm around her waist and pulled her closer. \"Let's see what she makes of this then.\" At that, she pressed her lips onto Riley's. Riley was too shocked to appreciate the moment. She recoiled from Rowan and shot a furtive glance at the building.\n\n\"Rowan! Not here!\"\n\nRowan chuckled at her distress. \"Alright, let's get out of here then.\" She handed Riley a helmet, which she put on quickly to hide the blush that was spreading rapidly. She got on the bike behind Rowan. She still had no idea where they were going, but anywhere that was not right in front of her work sounded like paradise now.\n\nAs the bike sped off, Riley pressed herself into the mechanic's back and wrapped her arms around her to steady herself. Memories rushed into her head from the last time she'd been on this very bike; the exhilarating test ride and everything that had happened after. Where was Rowan taking her now? Did she have any ideas that resembled that first time? If so, Riley would have to find a way to resist; to prevent herself from slipping too deep into the tempting world that was Rowan.\n\nRowan led the bike out of the city and onto long winding country lanes with sweeping views of fields and rolling hills. The ride itself was clearly part of the plan, as they'd already been driving much longer than before. While the city disappeared from view, Riley started to relax. She moved closer to Rowan with the increasing speed of the bike, and enjoyed the feeling of their bodies pressed together.\n\n\"It's so beautiful here!\" Riley shouted over the noise of the bike. Rowan didn't reply but Riley saw her smile in the rear-view mirror. A wave of paranoia swept over Riley: how many girls had Rowan taken on rides like this? She reprimanded herself; she had to stop thinking this way. Rowan had clearly chosen to see her again - something that was firmly against her own rules. That had to mean something.\n\nRowan eventually slowed down to a halt in a seemingly random place. There was a thick hedge on one side of the road and a slight hill on the other. What were they doing here; there was nothing here? Still, upon Rowan's instruction they got off the bike and locked it up. Clearly, they had reached their destination. Riley looked around confusedly.\n\nRowan didn't say anything but took her hand and started walking along the hedge. Riley marvelled at how good her hand felt in Rowan's and how easily they slipped back into the familiarity with which their last date had ended. It was like they'd been holding hands forever and Rowan didn't seem remotely reluctant to engage in that typical dating behaviour.\n\nThey reached a gap in the hedge and Rowan led the way through it. Tucked away in a hidden courtyard was the cutest ice cream parlour Riley had ever seen. There were only a few tables, which were all taken by people enjoying massive frozen feasts. Clearly, this place was a hidden yet popular gem.\n\n\"Ice cream?\" Rowan asked needlessly.\n\n\"Sure!\" Riley replied enthusiastically. She had started to think the bike ride was the date, but this was the icing on the cake; she loved ice cream.\n\n\"I'm afraid it's going to be take-away. This place is always heaving in summer. But you'll see why. Their stuff is delicious.\"\n\nThey ordered their ice creams, making fun of each other's choices. Rowan went for chocolate and coffee, while Riley picked a fruity mix of cherry and honeycomb - girly, according to Rowan.\n\n\"Well, that works for me. I am a girl, after all.\" Riley stuck her tongue out at Rowan.\n\n\"Oh, I know,\" Rowan replied with a sleazy grin, \"that's what I like about you.\"\n\nHow did she turn everything into an opportunity to be salacious? \"Oh really, just that? Lucky me,\" Riley teased.\n\n\"Hmmm, that and a few other things.\"\n\n\"Like what?\"\n\nRowan grinned. \"Wouldn't you like to know? Come on, straight girl. I know the perfect place to enjoy this.\"\n\nRowan led Riley up the hill across the road. They walked a short distance further and got to a spot where the trees gave way to a beautiful view of the fields below and a glistering lake in the distance.\n\n\"Great, right? I come here sometimes to clear my head. There's never a soul around. It's so peaceful. I love it here,\" Rowan said, gazing into the distance.\n\nRiley hadn't pictured her as the reflective, being peaceful in nature type. Once again the mechanic surprised her with a new facet of her personality. \n\nThey sat down and ate their ice creams, both of them lost in their own thoughts for a moment. When Riley realised this, she marvelled at how comfortable their mutual silence was. She didn't feel the need to fill it with random babble, and it appeared Rowan didn't either. Rowan must have sensed her attention returning to the present moment; she looked over at Riley and smiled.\n\n\"You've got some ice cream on your nose.\" \n\nRiley rubbed at her nose. Did she? She couldn't feel anything. \"Really? Is it gone now?\"\n\n\"Not quite. Hang on, it's just there.\" \n\nRowan leaned closer to her and in a quick motion dipped her ice cream on Riley's nose. Riley started to protest the sudden cold sensation. Then the mechanic's lips were on her, her tongue swiftly cleaning the stickiness off her nose. Riley was too shocked by the sudden intimacy to know whether to be grossed out or pleased. \n\nHer mind was made up for her when Rowan's mouth moved slowly to hers. Their lips touched and Rowan's tongue slipped into her mouth as if it had done so hundreds of times before. It probably wasn't far off, adding everything up that had happened in that one steamy night they'd had together. For the briefest of moments, Riley enjoyed the feeling of their tongues caressing, before Rowan pulled back.\n\n\"You taste like cherries,\" she said, with an exaggerated look of disgust.\n\n\"Maybe if you'll kiss me long enough it will wear off.\" Riley surprised herself with her quick come-back. She knew she shouldn't encourage Rowan to take her onto this slippery slope, but the feeling of Rowan's lips was too good to resist.\n\nThat amused Rowan. \"Oh, wouldn't you like that?\"\n\n\"Wouldn't you?\" Riley countered with a challenging grin.\n\n\"Hmmm... kinda...\" Rowan leaned in and kissed her again, more intensely this time, as if she really was trying to get rid of the cherry taste as effectively as possible. Riley reciprocated, her pent-up passion for the gorgeous woman urging her on.\n\n\"Okay, it's gone now,\" Rowan said, when their kiss ended eventually.\n\nRiley quickly took another lick of her ice cream. \"Not anymore...\"\n\nThey both laughed and easily slid back into silently eating their ice creams. Riley felt so happy she was sure it must be showing on her face.\n\nOnce again, it was Rowan who broke the silence. \"So, what do you think? Good date?\" She kept gazing in the distance but Riley sensed that she genuinely expected an answer; possibly she was even a bit anxious about the answer. Riley felt a rush of affection. Despite Rowan's nonchalant attitude and proclaimed reluctance to dating, she did care.\n\n\"Not bad, for someone who doesn't date,\" she said teasingly. She couldn't help it; it was nice being on the other end of the stick for a change. She was sure it wouldn't last long.\n\nRowan laughed softly. After another moment of silence, she sighed and lay down on her back, propping her jacket under her head as a pillow. \"Well, I think this is nice,\" she said with satisfaction, putting on her aviators and directing her face at the sun.\n\nRiley appreciated her tall, stretched-out body for a moment and wished she had aviators to hide her lustful stares. \"Nice for you, with your comfy pillow,\" she said.\n\nRowan patted her belly. \"Here's yours.\"\n\nRiley didn't hesitate. She lay down perpendicular to Rowan and rested her head on Rowan's belly. She had to shuffle a bit to get comfortable but between the mechanic's bony hip and rib cage there was a spot that was slightly less hard. It was far from comfortable - there wasn't one squishy bit on Rowan's body - but Riley didn't care.\n\n\"Can I ask you something?\"\n\nRiley felt Rowan's voice resonating through her body as clearly as she heard it, as if there was an additional layer of communication between them. \n\nRiley didn't answer the rhetorical question immediately, so Rowan continued: \"Why did you call me, that first time? When you asked me out?\"\n\nRiley was confused. Wasn't it obvious? \"Because I wanted to see you again. And if I had to wait for you, I'd be old and grey. You probably wouldn't dig that look.\"\n\nRowan laughed, making Riley's head bounce a little. Then she got serious again. \"Yeah, but why? I mean, I kinda kicked you out. I never called you. I didn't see you again. I was a bit of a dick.\"\n\nRiley smiled. The self-awareness of this one... \"A bit? You were a total dick! To be fair, you did warn me that you didn't use your phone... And I already knew you were a player, but I guess I still had some hope...\"\n\n\"I'm not a player!\" \n\nRiley snorted loudly. Rowan continued: \"I don't mean to be anyway... The last thing I want to do is to play anyone...\" After what Riley had heard about Rowan's past, she did believe that. But surely Rowan knew the effect her actions had on girls?\n\n\"Clearly that doesn't always work out...,\" Rowan sighed unhappily.\n\nRiley wanted to comfort her; to tell her that it was alright. But was it, really? Could she step over the disappointment and hurt of the past weeks so easily?\n\n\"So what made you come back in the end?\" The mechanic asked then.\n\nRiley thought for a moment. Why had she come back? She probably wouldn't have if Megan hadn't contacted her. She had tried to but she had lost her nerve, having had no indication Rowan wanted to see her again before speaking to Megan. She didn't want to throw Megan under the bus, though.",
        "\"I thought it was worth one more shot, just to see what would happen,\" she said vaguely.\n\n\"Sounds familiar.\"\n\n\"What do you mean?\" Riley glanced up. Rowan was smiling.\n\n\"It's something Megan would say... has been saying... to me.\" She lifted her sunglasses and caught Riley's eyes.\n\nShe knew, Riley realised. She knew Riley had been talking to Megan. \"Okay, fine. I met up with Megan. We chatted.\"\n\n\"I know.\"\n\n\"She told you?\" She could have told Riley that too. It would have saved her this awkward moment.\n\n\"I figured it out and asked her. It was too much of a coincidence, you calling me a few days after we bumped into your friend with his drunken confessions. And I saw Meg pick up your phone number. The whole thing had her name written all over it.\"\n\nRiley bit her lip uncomfortably. She didn't know what to say.\n\n\"You two are getting quite good at ganging up on me, aren't you?\" Rowan winked and put her sunglasses back on. Clearly, she wasn't upset then.\n\n\"And when has that not worked out for the best for you? We have your best interests at heart,\" Riley countered.\n\nRowan laughed. \"Okay Megan II... So she convinced you to call me?\"\n\nShe really wasn't going to let this go then? She had to know the details. Riley reflected on what Megan had told her. It was true that Megan had convinced her, but it wasn't like Riley didn't want to. She'd been desperate to see Rowan, but had thought Rowan would not want this. Megan had rekindled her hope that she might. She decided to be honest about this.\n\n\"She convinced me I may have a shot at seeing you again... And that I deserved a chance. That was enough to convince me to call you.\"\n\nRowan didn't say anything for a while, leaving Riley to simmer in her nerves. What was Rowan thinking now?\n\n\"So? How do you feel about that?\" Riley couldn't help but ask, after what felt like a lifetime of silence.\n\n\"Well... I'm here, ain't I?\" Rowan draped her arm over Riley's body and gave her an awkward side hug, leaving her hand resting on Riley's waist. Riley put her hand on Rowan's and intertwined their fingers. Yes, she was here.\n\nAfter another long pause, Rowan asked: \"What else did she tell you?\"\n\nEither Megan hadn't told her much about their conversation at all, or Rowan was trying to corroborate her account. Riley saw no reason to lie. She didn't think there were many secrets between Megan and Rowan.\n\n\"She told me you had some bad experiences with relationships.\"\n\n\"She told you about Diana, didn't she?\"\n\n\"She gave me a summary...\" Riley was surprised by Rowan's openness. She had been quite secretive about anything personal in the past, often saying she may answer Riley's questions 'sometime'. Would she tell her more about Diana now? Riley still had so many questions about the business woman who had swept a younger, more impressionable Rowan off her feet and had held her attention for years.\n\n\"Ah yeah, it's such a long story... And certainly not one we need to ruin this moment with.\"\n\nIt didn't look like she'd be getting more than that. \"Is she the reason you don't date?\" Riley tried, although she already knew the answer. \"Oh, you didn't date, I should say,\" she corrected.\n\nRowan laughed softly. \"Ah, touch\u00e9. I guess I am dating now, aren't I?\"\n\nRiley thought she was going to avoid the question, but she continued: \"Yeah, since being with her, I guess I've just been disillusioned by the idea of romance and relationships. I really thought what her and I had meant something, you know. And for her to just throw it away like that. Or maybe she never took it serious to begin with...\" She paused. \"I don't ever want to do that to another person.\"\n\nTouched by the personal nature of the statement, Riley turned to look at Rowan. She was still staring at the sky. Riley rolled onto her side so she could face her, resting her cheek on Rowan's stomach.\n\n\"What makes you think you will?\"\n\nRowan sighed. \"Because I can't give a girl love or affection I don't feel. It just wouldn't be real. It would be the same as what she did to me. In that case I think it's better to not start anything at all. And I just haven't felt anything beyond friendship or... you know, sheer horniness, until...\" She suddenly stopped, before concluding: \"... for a long time.\" \n\nRiley's heart had stopped with Rowan's sentence. Until what?\n\nIt seemed Rowan wanted to move on quickly, glide over her misstep: \"I nearly lost Megan like that too.\"\n\n\"What happened with Megan?\" As much as Riley wanted to go back to that careless earlier comment, she was too curious about this to let this pass her by.\n\n\"She didn't tell you?\"\n\n\"Not so much. She just said you guys were friends with benefits for a while.\"\n\nRowan chuckled. \"Typical Megan: she'll talk about anything but herself... I met Megan again when I moved back to town. She was already working at Velvet then - that's the lesbian bar, she still works there. I knew her from back at uni but we'd lost touch. She was two years behind me at uni but we'd become friends. She spilt a drink on me in the student bar; I tried to get into her pants. She didn't realise she was gay or what I was trying to do, so we ended up being friends. You know how it goes.\"\n\nRowan smiled fondly. Riley had no idea how this went; she was from a completely different world, but she loved that Rowan was opening up to her.\n\n\"Anyway, when I did bump into her again she was out and proud. She actually had a Mohawk at the time; can you imagine? We got drunk that night after her shift and shared memories of uni days until the early hours of the morning. One thing led to another and we ended up going out for a while. She was the first person I was with after Diana. Meg and I were both in turbulent places in our lives and we were just having fun, blowing off some steam. That was a great time actually.\" She sighed reminiscently. \n\n\"Oi!\" Riley said, feeling jealous now. \"Snap out of it!\" She poked Rowan's side, causing her to double up and squish Riley's head.\n\n\"Ah, okay, okay! It didn't last anyway. Things changed for Megan. She started to want things I couldn't give her. I didn't want anything serious. I didn't want to hurt her, but I could see her disappointment grow every time we were together. So we split up. Didn't see each other at all for a while. We had to, but it nearly broke our friendship...\" Another sigh, a sad one this time. \"That's when I realised... dating, relationships: it's just not for me.\"\n\nSomehow, that wasn't the conclusion Riley had reached after all these confessions. \"Yet, here you are...,\" she said, more to herself than to Rowan.\n\n\"Yet, here I am...,\" Rowan repeated pensively.\n\n\"Why?\" Riley asked, after a pause in which both of them were deep in thought. As she'd asked it, she wasn't sure she wanted to hear the answer.\n\n\"Why, what?\" Rowan sounded like she was trying to buy time.\n\n\"Why are you here? Why did you say yes to going on a date with me?\" Riley pressed on. There was no point backing down now. It was clearly a day for laying bare their most personal feelings.\n\n\"I guess I agreed with you and Megan that you deserved a chance...\"\n\nThere was another long pause, in which Riley held her breath and willed Rowan to go on. This was promising.\n\n\"You took me by surprise: calling me, then showing up dressed like that, in that car, the music... You really pulled out all the stops, didn't you?\"\n\n\"I tried to,\" Riley confessed. \"Did it work?\" She wasn't sure what she expected Rowan to say; to admit it had worked and to confess her undying love? \n\n\"It really meant a lot to me, what you did, playing that music for me...\"\n\nRiley felt her heart glow, despite the slightly evasive answer. She propped her head up, leaning on her elbow so she could look at Rowan when she asked:\n\n\"Then why did you take so long to see me again?\"\n\nRowan sighed. It seemed she was reaching the limits of what she was willing to disclose. She didn't look at Riley when she replied: \"I... had some things to work out. I still do... Things in my head...\"\n\n\"Okay...\" Riley didn't know what to say. These were positive things she was talking about, right? At least for Riley - things that had made her want to see Riley again?\n\nRowan flung her arm across her forehead as if she was trying to hide behind it. \"Like I said, you surprised me. You have done, every time. I'm not usually such a big fan of surprises, but yours... I don't mind them, somehow...\"\n\n\"You don't mind them? Oh, I am glad, that was exactly what I was aiming for,\" Riley teased, her insides jumping with glee.\n\nRowan laughed. \"Okay, fine. I like them. Now enough with the questions!\" She tickled Riley's side, who couldn't suppress a giggling fit. She hated that she was so ticklish; she loved that Rowan remembered.\n\n\"Enough about me. What about you?\" Rowan asked, after Riley had calmed down. \"When did you break up with your boyfriend?\"\n\n\"What? How did you know that?\" Had she mentioned Dan to Rowan? Why would she have done that?\n\n\"Oh, just something you said when we met, about not being a happy couple anymore.\"\n\n\"You remember a lot more than you like to let on, don't you?\" Riley marvelled.\n\n\"I remember everything. About some people, anyway.\" Rowan winked and gave her a flirtatious grin. Riley couldn't fault herself for getting gooey all over again. How could a girl ever resist that?\n\n\"So? When was it?\" Rowan urged.\n\n\"About six months ago... But we'd kind of grown apart before then.\" After all that Rowan had shared about herself, the least Riley could do was answer her questions in return.\n\n\"What happened?\"\n\n\"I guess we weren't on the same page. We hadn't been for a while. He was gearing towards settling down: marriage, buy a house, kids...\"\n\n\"And that wasn't what you were looking for?\" Rowan's eyes were full of curiosity, and something else. Full of hope. Clearly, this was more up her alley.\n\n\"I thought it was...,\" Riley answered truthfully. \"But when he asked me to marry him, I panicked.\"\n\nRowan nodded understandingly, as if to say she would have panicked too.\n\n\"I pictured us together: living the suburban life, with the children and the pets and the mortgage and I realised I wasn't ready for that. Or at least, I couldn't see myself doing that forever after with him... He was very understanding. I think he knew. He'd been waiting for me to get there with him. The proposal was sort of a last attempt, but I don't think he was surprised when I said no. He's such a sweet guy and the whole thing would have been perfect for any other girl...\"\n\n\"But it wasn't for you.\" It wasn't a question. Riley still sometimes wondered why it hadn't been perfect for her, but she had no doubt she'd made the right decision. She shook her head.\n\n\"I realised I couldn't make him wait for me any longer. He needed to move on and find someone who wanted all those things. So we decided to go our separate ways. It was a bit of a shock to our friends; no one saw that coming.\"\n\n\"How long had you been together?\"\n\n\"Almost five years.\"\n\nRowan whistled between her teeth. \"That's a long time.\"\n\n\"Yeah... And there's all the expectations that come with being together that long. You start to be complacent and stop questioning things; stop wondering if you really are where you need to be in life.\" That sounded so philosophical. Riley smiled ruefully.\n\n\"I bet... Can't say that I've been there - I've never been with anyone that long,\" Rowan said pensively. Then she grinned cheekily and said: \"Do I need to be worried I am just a rebound to you?\"\n\nRiley smiled at Rowan's attempt of lightening the mood. \"Would you care?\" She teased.\n\n\"Hmmm maybe... I have feelings, you know.\"\n\n\"Do you?\"\n\n\"One or two...\" Another wink. \"Hey, you never did tell me how you felt about your first lesbian experience.\"\n\nRiley sensed that this was something Rowan genuinely wanted to hear from her, just like she'd asked Riley's opinion on their date. She would have thought the confident woman would be more than happy just assuming that obviously she'd blown Riley out of the water with her skills in the bedroom. It was little surprises like these that made Riley more and more lost to the mechanic.\n\n\"Well... I'm here, ain't I?\" Riley loved the rare opportunities when she could turn the tables.\n\nRowan laughed. \"True. Back for more then?\" \n\nShe lifted herself up suddenly and pulled Riley on top of her. Then her lips were on Riley's, her hands on her back, applying gentle yet determined pressure. Clearly, talking time was over. Riley knew she should stop but her body was responding strongly to Rowan's touch. Her temperature rose, radiating towards her lower body. How could it be wrong, if it felt this good? \n\nRowan prised her legs open slightly and pulled Riley firmly onto her thigh. Her hands moved to Riley's buttocks, while her kisses grew even more passionate. Riley's head was swimming. She shouldn't be doing this. She pressed herself into Rowan's thigh, squeezing it between her legs. Her hand moved to Rowan's chest and then under her shirt as if it had a life of its own. She stroked the thin fabric of Rowan's sports bra, feeling her nipple strain against the other side, eager to meet her touch. She should stop. Now. Stop. She fought to gain control over her senses, over her limbs.\n\n\"Stop!\" She panted, breaking loose from Rowan lips and retreating her hand from her shirt. \n\nRowan looked at her in surprise. \"What's wrong?\"\n\n\"I shouldn't...\"\n\nNow that the impossible mission of interrupting their passionate embrace was accomplished, Riley felt her brain kick back into action. She slid off Rowan with great reluctance and settled down on her side next to the mechanic.\n\n\"Why not?\" Rowan turned on her side too and faced her.\n\nRiley couldn't stop her hand from reaching out to Rowan's flat belly, which was exposed now that her shirt had ridden up. She traced the outline of Rowan's abs and avoided Rowan's eyes when she said: \"I don't trust myself around you.\"\n\nRowan chuckled. \"I don't trust you around me either, but why should you?\"\n\nRiley didn't reply. She'd already said too much. Rowan leaned over and gave her a quick kiss. When Riley didn't respond, she kissed her again, this time letting her tongue slip into Riley's mouth again. Now, Riley stopped her and uttered in desperation: \"Because you never sleep with the same girl twice!\"\n\nRowan sighed. \"Megan...\" Then she muttered, as if speaking more to herself than to Riley: \"It wouldn't be the first time you made me break one of my rules...\" She seemed to respect Riley's reluctance, though; slightly increasing the distance between their bodies.\n\n\"What if you get bored of me?\" Riley mumbled, feeling all her insecurities rush back at her. Rowan must have slept with hundreds of women, many probably much more beautiful and much more interesting than her.\n\nRowan looked at her kindly. \"I doubt that... Besides, I have some ideas for keeping things interesting.\" She could never keep the sleazy grin off her face for very long. It made Riley smile, despite her shaky confidence.\n\n\"Like what?\"\n\n\"Ah, wouldn't you like to know? Maybe I'll show you sometime.\" The 'sometime' had by now become a running joke between them, both of them teasingly firing it at the other to indicate a tantalising experience would be had at some point later in time - never quite making it clear if and when this would take place.\n\n\"Right now I should take you home, though. You're clearly getting a bit too frisky. And no groping me on the way home!\"\n\nRowan was right. The sun had set and they had a fair ride ahead of them. So at that, they were off, back onto the bike and onto the road. Riley passed the ride back in a haze, replaying their conversation and reflecting on what all of it meant. She couldn't help but feel that there had been a change in Rowan. She had opened up a lot more and had even come close to admitting some personal feelings for their situation, for Riley.\n\nRiley guided Rowan to her house, where they shared a final goodnight kiss. Riley had to stop herself from asking Rowan to come inside. Not yet. It was still too early. \"Thank you for a lovely date,\" she said instead.\n\n\"You're up for the next one,\" was Rowan's reply, as always accompanied by a wink.\n\n* * * * *\n\nRiley had to admit she was in a bit of a state. She had been ever since her second date with Rowan. If she'd had a mad crush on the mechanic before, she was now hopelessly in love. And hopelessly in lust. There had been something about their conversation, about Rowan admitting that she was starting to question things - whatever those things were - that set Riley's whole being on fire. She couldn't stop thinking about Rowan: the way she'd looked at Riley, the things she'd said, the way she'd kissed her.\n\nRiley knew the ball was in her court. She could initiate another date whenever she wanted. Rowan was expecting it. But it had only been three days now - three long, lonely days. Surely that was too soon? Despite her increased confidence that Rowan was receptive to dating her now, she still didn't want to go all needy on her. There was still a very real chance that that would chase Rowan away. \n\nTherefore, she kept telling herself she had to be patient. If this was anyone else, she'd send them a quick message, just to let them know she was thinking about them. But Rowan didn't use her phone and still hadn't volunteered her number. Frustratingly, there was no light-weight way of getting in touch with her. It was all or nothing.\n\nThat didn't take away all the ways in which Riley got in touch with Rowan in her mind. And the ways in which she got in touch with herself when doing so. She felt like a teenager who had just discovered masturbation; she was horny all day long. She even had to rush into the bathroom at work a few times to relieve some of her tension when Rowan had popped into her mind again. \n\nDeep in the sensible part of her mind, she knew there was a reason she was intent on not sleeping with Rowan yet, but she struggled more and more to remember that reason. Rowan had already shown that she was interested in seeing more of her. She'd even said she didn't think she'd get bored of her anytime soon. So why shouldn't Riley jump her bones? \n\nSure enough, Rowan's track record with sticking with girls wasn't great and 'Don't sleep with her' had been Megan's most pressing advice. That had to count for something, but honestly, Riley wasn't sure how long she could keep up this no sex thing with Rowan. Absence made the heart fonder, so much fonder. And certainly not only her heart.\n\nIt couldn't hurt to be prepared, Riley decided, for when the time came. She got behind her laptop to do some research. All she knew about lesbian sex was what she'd learnt from Rowan. She wanted to be good for Rowan, though, perhaps even surprise her with her knowledge and skills. \n\nAs expected, her search resulted in a lot of graphic material. Interested, Riley scrolled through some pictures and clicked on a few videos - this wasn't a bad way to learn stuff. She surprised herself by getting turned on watching two girls have oral sex in the 69 position. She was such a lesbian. Watching gay porn now? What was next? \n\nShe recalled Rowan eating her out on her sofa, and in her bed, and in the kitchen. The mechanic couldn't get enough of it. And she was so good at it, Riley remembered, as she slipped her hand into her trousers for the umpteenth time today. Especially compared to her ex Dan's clumsy attempts at pleasing her, Rowan's art had been exquisite; her tongue creating miracles like Michelangelo's paint brush. Riley chuckled to herself. That would make her pussy the Sistine Chapel. To Rowan it had certainly seemed like it was.\n\nAs Riley's fingers expertly made their way around her sex, she relived the moment where Rowan had pressed her into the kitchen counter, kneeling in front of her to 'have her breakfast'. She gently slid a finger inside her hot pussy and spread her wetness. She started gently rubbing the area around her clit, it being too sensitive to touch directly. She pictured Rowan now picking her up and laying her down on the breakfast bar in her kitchen, firmly prising her legs open and lowering her head between Riley's thighs.",
        "Her fingers were rubbing frantically and her sex was on fire. Her clit started throbbing and Riley felt the build-up becoming explosive. In her mind, Rowan's tongue now flicked her clit and her hands were under Riley's apron, gently pinching her sensitive nipples. Riley tilted her head back and pushed her hips up, tensing all her muscles. She let her fingers push her over the edge and let the explosion wash over her. Her body convulsed as she enjoyed the warmth and intense pleasure of her orgasm. She slid two fingers inside her wet slit and pushed her clit against her palm as she rode out her climax. \n\nShe remembered the feeling of Rowan's pussy: the softness and wetness of the folds, contrasted with the hardness of her swollen clit. She wondered what it would be like to suck that clit into her mouth, like Rowan had done with hers. Being intimidated by the whole first time with a woman thing, she hadn't gone down on Rowan when they were together. She hadn't deliberately avoided it but the natural flow of their actions hadn't led her there and Rowan hadn't encouraged her, clearly more than satisfied spending most of her time focusing on Riley's pussy. Now however, Riley felt a strong desire to try that; to know what Rowan tasted like; to make her squirm under her tongue, like Rowan had done to her. \n\nSoon the tingles that remained from her orgasm turned into more as she continued fucking herself with her fingers and rubbing herself against her palm. Riley realised she was going to come again. She rarely stopped at one orgasm these days. She rocked against her hand and expertly made use of the sensitivity of her clit to lead herself to another orgasm. The intensity of this second explosion took her by surprise and she couldn't suppress a moan. She gave into the full sensation, breathing heavily and squeezing her fingers inside her.\n\nKeeping her hand pressed between her legs, she allowed the throbbing to calm down gradually. Rowan-induced orgasms really were amazing. And Riley knew that the ones she got from fantasy-Rowan paled in comparison to the ones from real-life Rowan. So much to look forward to.\n\nAdmitting that she had gotten a bit carried away and distracted from her research, Riley set out to find some more educational sources of information. Browsing around forums and blogs, she was amazed to discover the existence of strap-ons. Of course, she'd seen vibrators and dildos before - in pictures, and then there was the one in Rowan's bedroom - but she never realised they were so pivotal to the sex lives of so many lesbians. Somehow she had just imagined that lesbians wouldn't want anything to do with such penis-like objects, let alone attaching them and having sex with them as if they were guys. The thought excited her more than she liked to admit.\n\nDid Rowan know about strap-ons? Had she ever used one? Riley rebuked her own naivety. Of course she had. She had been a lesbian all her life and had probably slept with more women than Riley had even spoken to. She probably had a collection of the things. Riley relished the image of Rowan with a strap-on, which became clearer and clearer in her head, while trying not to dwell on the probability that she'd used it on tons of other women. \n\nRiley had previously wondered if she may over time start to miss the feeling of a penis inside her, if she ended up being with Rowan. These fears were now alleviated as she pictured Rowan wielding a strap-on and taking her, much like a guy would. She felt herself drip into her knickers as her pussy started demanding her attention again. Somehow, the idea of Rowan with a penis was hotter than the idea of any man. And she knew she wanted that. More than anything. More than Rowan's tongue between her thighs again, more than hers between Rowan's.\n\nBut not, she realised suddenly, with a strap-on that Rowan had used on another woman with just as much vigour, as if it didn't matter where she put it. Riley wanted it to matter. She wanted this to be something between her and Rowan, and the strap-on. A brand-new strap-on that would see no action but that between her and Rowan. A new start for Rowan, as well as for Riley.\n\nFascinated, she searched for an online sex shop and browsed their collection. She was blown away by the amount of choice. There were big ones and small ones; ones that vibrated and ones that didn't; ones with one end and ones with two; ones to wear on a thigh or in the middle; ones with straps and without. Riley was intrigued by the strapless ones. \n\nShe found a purple one that reminded her of the vibrator Rowan had used so eagerly on her. It had a bulbous head on the end of the giver, which was clearly meant to be worn inside to keep it in place. Unlike the strap-versions, there was no awkward fabric or elastic in the way and it looked like the angle would be perfect for allowing the two parties to rub their pussies together. The thought of the toy being inside Rowan too while she fucked her made Riley horny again and she paused to masturbate. Then, still breathing hard she clicked 'Order now'.\n\nWhen the eagerly anticipated box arrived a few days later - in discrete packaging, thankfully - Riley was as excited as a child on Christmas day. She ripped open the box and pulled out the order. The images on the packaging were cheesy and cheap, displaying a redhead with big boobs and garter belts, but Riley was most taken aback by the silicon shape staring at her through the transparent plastic. It was huge. If she'd been a cartoon character, Riley would have swallowed audibly. Clearly, she'd not paid attention to the dimensions before she ordered and it was a lot bigger than she'd expected. Certainly bigger than Dan had been. Would it even fit?\n\nThinking about that going inside her made her blush. She was scared, but intrigued too. If they sold them in this size, surely it would work? She imaged it filling her up completely; Rowan sliding it inside her slowly; deeper and deeper until she felt Rowan's pussy press into hers and knew she'd gotten it all the way in. The idea was exhilarating and, despite her nerves, she couldn't wait to try. \n\nShe imagined herself bringing up the topic with Rowan, presenting her with the sex toy and casually letting her know she wanted Rowan to fuck her blind with it. She felt her cheeks redden. How could she possibly weave that into conversation? \n\nThe idea came to her in a flash and even as she thought it, she wasn't sure it was a good one. But it would certainly get the message across, without Riley having to find a time to whip out the thing and keep her senses. It would be a surprise; that much was certain. Rowan wouldn't know what to do with herself. Riley chuckled as she thought about it. Urging herself on before she lost her nerve, she put the strap-on back into the postal box and taped up the bits she'd ripped open. She stuck a piece of paper over her address, on which she wrote the address of the 'Ride Again' garage.\n\nShe scribbled a note to accompany the present: [To Rowan. You said you had some ideas to keep things interesting. I do too. I'd like you to use this on me sometime... X Riley PS. Don't you dare use it on other girls in the meantime!]. \n\nShe wrote her phone number at the bottom of the note - someday Rowan may actually keep it and not lose it, accidentally or on purpose. She thought for a moment and then added her home address. If Rowan didn't use her phone, maybe she was so old-school that she did use the post.\n\nAbout a week passed, in which Riley wondered if Rowan had received her package; if she'd opened it; what she thought about it. Perhaps it was just sitting in a corner of the workshop, assumed to be some replacement parts for a repair. Riley snickered to herself: what if Rowan unsuspectingly opened the box in front of customers. Of course, that would be mortifying to anyone, but somehow she could imagine Rowan easily turning that situation around.\n\nRiley wasn't sure if she'd even expected Rowan to contact her. If she was perfectly honest, she'd hoped for a phone call. However, she certainly hadn't pictured what she found on her doormat one evening. It was an envelope addressed to her in an unknown handwriting that drew her attention. Somehow, she knew it was from Rowan. She ripped it open while her heart pounded in her chest. Inside was a photograph, printed on plain paper using a printer that had left slight lines from where the ink wasn't quite evenly spread. Riley gasped. \n\nThe photo showed a torso, from the thighs to the chest. Riley would have recognised that flat stomach anywhere: it was a picture of Rowan. Her upper body was bare, apart from a black tank top that was bunched up to just below her small breasts, which were just outside the picture. More prominent, however, was the bottom-half of the image. Rowan was wearing her faded jeans, which were unbuttoned and hung loose around her boyish hips. From there, a pair of black boxer-shorts with a broad elastic band were visible. The purple strap-on Riley had sent her protruded from the fly, standing firm and proud; challenging and inviting Riley all at once. Rowan's tattooed hand had a loose, casual grip on the base of the dick, as to say she was ready to start using it whenever Riley wanted.\n\nRiley tried to process what the image was doing to her. Her head was swimming, her breathing ragged. She couldn't draw her eyes away from the spot where the silicon length exited the underwear. It was an even bigger turn-on than it had been in her imagination, to see Rowan actually wearing the toy; ready for action. Ready to give Riley what she really wanted. As much as she thought about that length going inside her, she considered the bulbous other side, which was clearly wedged firmly inside Rowan's hot, wet pussy at the moment she'd taken this picture. Riley imagined Rowan receiving her gift and getting herself wet enough to insert it. Did she have to make much of an effort, or was the thought of using this with Riley enough to get her there?\n\nWhen she eventually managed to draw her attention away for a moment, Riley discovered that Rowan had written on the back of the photo: [Is this your version of sexting? It's... very creative. Thank you for the present. Just like the tux: perfect fit, as you can see. And it's a yes for trying it. I'd like that, sometime... PS. There haven't been any other girls.]\n\nRiley heart made a giddy jump as she read the last sentence. Could it really be true? It sounded too good to be true, but Riley had never known Rowan to be dishonest. Even when the truth may hurt, she'd been upfront. So why would she lie about this? Why would she even mention it if it weren't true? \n\nOf course, Riley would like Rowan to have sworn off all other girls, but she never really expected it. After all, she wasn't giving Rowan anything physical, and it was overly clear how much the woman needed it. Surely, she would still be getting it elsewhere? Especially since it was so easy for her. Megan would probably know and Riley considered messaging her, but the more she thought about it, the more she realised she didn't actually doubt the truthfulness of Rowan's volunteered statement. And that was big. Really big.\n\nRiley lay down on her bed and propped the photo up on the nightstand next to her. A big smile spread across her face as she got comfortable, looking at the picture. She unzipped her trousers and eased her hand inside her soaked knickers. 'Sometime' may come a lot sooner than Rowan thought..."
    ],
    "authorname": "Salandar",
    "tags": [
        "butch lesbian",
        "flirting",
        "lesbian dating",
        "lesbian friendship",
        "masturbation",
        "straight girl"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/the-mechanic-pt-03"
}