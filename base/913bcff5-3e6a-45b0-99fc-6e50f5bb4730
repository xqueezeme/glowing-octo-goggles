{
    "title": "Three Square Meals Ch. 080",
    "pages": [
        "\"I thought you weren't mad at me?!\" Dana protested, but she shifted nervously on her feet, knowing she was on very shaky ground.\n\n\"Just look at it!\" John exclaimed waving his hand at the Valkyrie. \"You couldn't have been hit by more laser fire if you ran around diving into shots!\"\n\nHer eyes darted up at the dense patchwork of laser burns across every single piece of armour plating and Dana couldn't help wincing. \"I was trying to shoot down dropships! I didn't want the Ashanath to get eaten,\" she said defensively.\n\n\"I told you, no heroics!\" he said, his voice angry now. \"It looks like you were so focused on killing dropships, you didn't even bother dodging incoming laser fire. Am I right?\"\n\nDana started to deny it, but she stopped herself and mumbled, \"Yeah, you're right.\"\n\nHis eyes narrowed as he pointed towards the savage rents in the Valkyrie's head and said furiously, \"And I bet you were so fixated on your shooting, you lost situational awareness... let that dropship ram you?\"\n\n\"Yes,\" Dana squeaked, her eyes welling up with tears.\n\nJohn paused in his diatribe as he saw her starting to cry, then took a deep breath to calm himself. He pulled her into his arms and said, \"Honey, I'm upset because you were that close to being killed.\" His voice softened as he continued, \"I wanted to help the Ashanath, but never at the cost of your life. You can't even imagine how broken I'd be if I lost you.\"\n\n\"I'm sorry,\" she said, her voice muffled against his chest.\n\nHe held her tight, stroking her back as he said quietly, \"Keep this to yourself, but I was really close to just calling off our intervention to save the Ashanath. I knew how dangerous it was going to be and I wasn't planning to throw away any of your lives because of their lack of defensive preparations.\" He grimaced as he added, \"If saving them had meant sacrificing you, I'd have just walked away.\"\n\n\"Really?\" she asked, looking up at him with tear-rimmed eyes.\n\n\"You're one in a billion. I'd be a fool to risk losing something so precious,\" he said, squeezing her tight.\n\nDana brushed away her tears then grabbed him and planted a fierce kiss on his lips. John returned her kiss, but she appeared to have no plans of letting him go anytime soon, so he embraced her and enjoyed the passionate liplock with the overwhelmed young woman.\n\nWhen they finally separated to take a breath, she looked at him shyly and murmured, \"No one's ever said anything like that to me before.\"\n\n\"That's because everybody else is stupid,\" he said with a playful smile. John hesitated and corrected himself, \"Not the girls obviously, but you know what I mean.\"\n\nHer eyes filled with love and she said, \"I know what you mean.\"\n\nHe gave her a brief kiss on the nose, making her giggle, then glanced up at the battered mech. \"Alright, let's do this. I've reviewed the battle footage with Calara, so I saw how you tore up those Drakkar cruisers. The Valkyrie did seem effective, but I'm sure we can make it better.\" Returning his focus to the girl in his arms, he added, \"What kind of upgrades can we make to this thing?\"\n\nShe looked surprised and replied hesitantly, \"Am I still going to be able to-\" \n\nJohn cut her off, knowing what she was about to ask and said firmly, \"We can discuss that later. Let's talk about ways we can improve the mech first - this was just a prototype after all.\"\n\nDana nodded and said with an eager grin, \"Actually, I came up with a list of ideas during the battle.\"\n\n\"Great! What did you have in mind?\" John asked, releasing her from his embrace.\n\nDana slipped away from him and walked around the Valkyrie's massive foot, pointing up at the orbital insertion pack. \"The first thing to do is sort out the engines,\" she explained, frowning at the damage to the right thruster. \"I originally designed the mech to be a super-powered ground support platform, so the engines were only really there to slow its descent from orbit. I think it'll be a lot more useful if we design it primarily for space combat, because then it'll still be capable of ground support anyway.\"\n\n\"So just make it faster?\" John asked, nodding as he looked up at the pack.\n\n\"Yes, exactly!\" she agreed enthusiastically. \"At least the same speed as the Raptor, which shouldn't be that hard as the gunship is bigger and has more mass. We'll just remove that drop pack and I'll design something with a bit more poke.\"\n\n\"Sounds like a good start. That way the Valkyrie and Raptor can support each other more effectively,\" John said, rubbing his chin as he tried envisioning them in combat.\n\nDana placed her hand on the mech's armoured foot, giving him a shifty look as she repositioned her hand away from the blast crater left by a laser cannon bolt. \"The second thing is more hull reshaping.\"\n\n\"To make it immune to laser fire?\" John asked wryly. \"Yeah, I can't imagine how you came up with that idea.\"\n\n\"Not just to protect it against laser cannons, but to be able to shrug off Beam Lasers too,\" Dana elaborated with a self-conscious smile. \"They seem much more common in the big fights we've been involved in, what with all the heavier ship classifications on both sides of these massive battles.\"\n\n\"I agree in principle, but it's a big machine,\" John said, sizing it up warily. \"Alyssa really struggled with octo-shaping the swords for me and Sakura. I don't think she's anywhere near strong enough yet to replate the entire Valkyrie in fully reflective armour.\"\n\n\"Is it really that hard?\" Dana asked him curiously. \"Alyssa normally makes it look so easy.\"\n\n\"The Invictus is only plated in quad-shaped armour, and this mech has penta-shaped Alyssium. Believe me, it gets a LOT harder as you go up each classification,\" John explained, grimacing at the memory. \"I can't even imagine how hard it would be to octo-plate anything; I'm amazed she can even try it.\"\n\n\"Which shows how much of a badass Athena is,\" Dana said thoughtfully. She smiled at him and added, \"Maybe you should find a way to start porking her? You're fantastic in the sack and we really want to stay on her good side.\"\n\nJohn laughed and rolled his eyes, but his laughter died out and he said emphatically, \"Now that things have calmed down a bit, we have to try and come up with some ideas on how to save her. She's been there for us countless times, never asking for anything in return. I've got to help her from being absorbed and destroyed.\"\n\nDana nodded and said, \"It's way outside my area of expertise but I'll wrack my brain for ideas. I might be able to come up with something useful.\"\n\n\"Good girl, thank you,\" John said, smiling at her appreciatively. He glanced up at the mech and added, \"Anything else you had planned for the Valkyrie?\"\n\n\"Yeah, a couple of other things,\" Dana replied with a nod. \"One of them is only minor, but the arm vibrates when firing the Punisher Gatling.\"\n\n\"Is that because it's using a hand-held weapon rather than having the gun built directly into its arm?\" he asked, stepping back a few paces to look at the gigantic weapon.\n\nShe walked over to join him, then followed his curious gaze towards the mech's weapon. \"I suspect so. I could either remove the forearm and incorporate the cannon as a replacement, or I could improve the vibration dampening, check the mountings and balancers that kind of thing.\"\n\n\"Do you gain anything by having a second hand?\" he pondered, staring at the enormous metallic fists.\n\n\"It gives us more utility. We could use the Valkyrie to help with refits,\" she replied thoughtfully. \"Also, if it ever has to grapple anything big, having the second fist would be more useful than a gun arm if the target is too close to shoot at, or if it runs out of ammo. Actually, that reminds me, I was thinking I could incorporate some kind of energy blades into its arms, or maybe give it a big crystal Alyssium sword. What do you reckon?\"\n\n\"For chopping your way free from docking claws? Yeah I can see how that could be useful,\" John said, giving her a knowing look.\n\n\"That would be one way of using them, yes,\" Dana said with a guilty grin.\n\n\"Anything else?\" John asked, studying the enormous metal titan.\n\nShe pointed to its shoulders, saying, \"Just one other minor item. The pauldrons on the Valkyrie are big enough to fit a couple of Pulse Cannon turrets.\"\n\n\"Ah right, to shoot down incoming missiles?\" John asked, recalling their earlier conversation by the Raptor.\n\n\"Yes, exactly! They'd be a huge help against strike craft too, like fighters that kind of thing,\" Dana clarified.\n\n\"Sounds like a quick and really useful upgrade,\" John agreed as he started walking towards the steps leading up to the maintenance gantry. He turned and beckoned her to follow. \"Come on, I want to take a closer look at the damage to the cockpit.\"\n\nDana followed after him, dragging her feet reluctantly as she knew exactly how he was going to react when he saw inside the Valkyrie's head. When they reached the top of the maintenance gantry, he didn't disappoint.\n\n\"Fuck me!\" John swore, going pale as he peered inside the gaping hole in the mech's cockpit. \n\nThe Pilot's chair had been ripped from its base and tipped over on its side, barely anchored to the floor by the cabling that was now exposed. There was a deep gouge through the side of the chair and that trough in the metal was covered in dark-red blood. He turned around and just pulled Dana into a hug, not saying anything for a couple of minutes as he held her. \n\nAs much as Dana knew she should be feeling remorseful, John's strong arms wrapped around her felt lovely and she rested her chin on his shoulder, a happy smile on her face. When he started to pull away, she quickly did her best to look chagrined as she turned to look at him.\n\n\"Alright, you big faker,\" he said, smiling at her in amusement. \"You can drop the act, I can tell you're too happy at the moment to pretend to be contrite.\"\n\n\"That's your fault, not mine,\" she said with an impish grin.\n\nJohn glanced back at the cockpit and jerked a thumb in its direction. \"Is there any way we can stop this happening again? Maybe stick the cockpit in the chest, something like that?\"\n\nDana wrinkled her nose with distaste and replied, \"In its chest? That'd look really weird and would fuck up the emergency ejection system. Besides, the Power Core and ammunition hopper for the Punisher Gatling are built into the chest, there's no room for the cockpit in there.\"\n\n\"Alright, it was just a suggestion,\" John said with a smile.\n\n\"I actually do have something else in mind for the cockpit!\" Dana said enthusiastically. \"One of the problems I found, was that the controls just weren't responsive enough. I thought we could remove the chair and replace it with some kind of anti-grav field that responds to the Pilot's actions. It would make fighting in the mech much more natural, as the Valkyrie would essentially just mimic the movements of the person controlling it.\"\n\n\"That sounds like an excellent idea,\" John agreed, looking thoughtful. \"Exactly how responsive could you make it?\"\n\nShe smiled at him and replied, \"With a few upgrades to the joints, very quick indeed. You could make it do cartwheels if you wanted.\"\n\nHe laughed at the thought of the thirty-metre-tall mech performing acrobatics.\n\n\"Hey, guys!\" Sakura called up to them from the deck of the Launch Bay. \"I've brought breakfast!\"\n\nJohn leaned over the safety railing and exclaimed, \"You're a life saver! We'll be right down.\"\n\nJohn and Dana were both feeling famished and they raced down the steps from the gantry taking them two at a time. Sakura watched them both in amusement, then handed over a couple of breakfast baps, fully loaded with sausage, fried eggs, and rashers of bacon. She also had bottles of water, quickly handing them over too.\n\n\"Oh God, this is heaven,\" John said after swallowing the first bite. \"It's still hot from the oven!\"\n\n\"I didn't want it getting cold, so I ran all the way here,\" Sakura explained, before taking a bite from her own. Once she'd swallowed she added, \"Jade's a great cook!\"\n\n\"Thanks for the express delivery,\" John said with a grin. \"I take it when you said you ran, you enhanced your speed too? Are you fully recharged this morning?\"\n\nShe nodded to both questions before replying, \"I feel fine today, in fact I'm full of energy and raring to go. I'm planning to work off some off that energy in the Training Dojo later, so you're welcome to join me if you'd like to have a duel?\"\n\n\"I'd love that, thanks,\" John said with a smile. \n\nThe three of them ate together, sitting on the Valkyrie's foot and making light chit-chat as they finished their breakfast. As soon as they were done, Sakura rose to her feet and gave them both a wave goodbye. Before she could leave, Dana suddenly wrapped her in a huge hug, taking the Asian girl by surprise.\n\n\"Rachel told me how you saved her life,\" Dana murmured in her ear. \"I really liked you before that and now I think you're fucking awesome! Thank you so much.\"\n\nSakura smiled at John over the redhead's shoulder, gratefully returning the hug. She turned her head to kiss Dana's cheek and said, \"You guys saved my life, so it felt wonderful to be able to protect Rachel in return. You stay safe though, okay? I'll feel even happier if you never end up needing my help like that!\"\n\nDana nodded and smiled at her in gratitude. With that, Sakura waved them goodbye again and accelerated away, sprinting with her enhanced speed to rush from the Launch Bay in a blur.\n\n\"She's really growing on me,\" Dana said, smiling at John once Sakura had left. \"I must admit it felt a bit weird having her join the crew to start with, especially after how much Shinatobe fucked us over, but that's way in the past now.\"\n\n\"Yeah, I'm very fond of her too,\" John said, a little half-smile forming on his face. \"I know I wanted her to go her own way and have a fresh start, but I'm really glad she talked me round. I must admit, it's great having someone that shares my interest in swordsmanship, but more than that, she's very bright and great company too. Relaxing to be around - you know what I mean?\"\n\nDana gave him a sly grin and said, \"It sounds like you're falling for her.\"\n\nHe laughed self-consciously and admitted, \"Yeah, I guess I am.\" He smiled at her and added, \"That makes eight women now though, that's not too unreasonable, is it?\"\n\nShe grinned at him and replied, \"For someone with your stamina, we need all the help we can get!\"\n\nJohn returned her grin then slipped his arm around her, stroking her back. \"I think we're pretty much done with the review of the Valkyrie. Do you fancy relaxing with me in the Observatory for a while? There's a few of things I wanted to chat to you about.\" \n\n\"If that's another way of saying, 'fancy a fuck, baby?' then sure!\" Dana replied, nodding eagerly.\n\nJohn laughed as he jumped off the mech's foot, then held out his arms for her and helped her down. She grinned at him and they walked out of the Launch Bay hand-in-hand. The fore grav-tube was just to the right of the doors, so they stepped into the glowing blue field and floated upwards past deck after deck until they reached Deck Three.\n\nDana jogged ahead to hit the button that opened the door at the end of the short corridor, revealing the oval-shaped observatory as the door slid aside. She kicked off her boots, then bounded onto the huge, pillow strewn bed in the centre of the room, tugging her top off as she did so. John was a little more restrained, removing his boots before walking over to join her. Dana had already pulled off her trousers, leaving her wearing a beautiful set of lacy white underwear as he reached her side. \n\n\"Very nice,\" he said appreciatively, admiring the way the bra cupped her full breasts as though offering them up for his enjoyment.\n\n\"I picked it up from Rachel's store on Gravitus,\" Dana explained, reaching behind herself to unclasp it. \"We spend so much time naked in bed, I haven't really had a chance to wear it for you yet.\"\n\nHe laughed, then ran his fingers over her succulent cleavage, following the mouth-watering curves. \"Leave it on. You look ravishing and I really do want to talk to you first. We both know we'll be too distracted once I'm inside you.\" He let his hand slide lower so that the back of his fingers gently brushed over her svelte lower belly and said, \"We were rudely interrupted last time, because I got far too turned on at the thought of getting you pregnant. I promise I'll show more restraint this time, but I really want to finish what we started.\"\n\nDana let out a low moan and protested, \"I was already really fucking horny! How am I supposed to concentrate on talking to you now?!\"\n\nJohn smiled at her and sat down on the oval bed, guiding her down with him. \"You'll manage, I've got every confidence in you,\" he said, laying her back and resting his hand on her slender stomach.\n\nShe sucked in her breath, watching with a smouldering look in her sky-blue eyes as his gentle fingers traced a circle around her navel. Finally looking up at him, she said, \"Alright, what do you want to talk about? The sooner we get this over with, then we can really have some fun!\"\n\nHe studied her face for a moment, enjoying her eagerness, so he hesitated before he spoke, reluctant to bring down her happy mood.\n\nDana could see him pause and asked with concern, \"What's up, John? You look like you swallowed a turd.\"\n\nDeciding to just come straight out with it, he replied, \"I'm sorry, honey, but I'm not sure you're the best choice of pilot for the Valkyrie.\"\n\nHer face fell and she looked forlorn. \"I'm really sorry I screwed up. If you let me try again, I promise I'll be more careful next time!\"\n\nShaking his head, he replied, \"Don't blame yourself. It's not your fault, it's mine.\"\n\n\"What?\" Dana asked in confusion. \"How could it be your fault?\"\n\nJohn sat up a little and placed his fingers on her temple, then traced them down her body, across her sternum, then lower over her ribs to rest on her abdomen again. \"When I enhanced all of you girls, you each received the same amazing bodies, but you also gained specialised gifts beyond that.\" He smiled at her as he added, \"It can't be news to you that you're incredibly smart and a truly amazing engineer.\"\n\nShe blushed at his praise and shrugged. \"Yeah, I guess there's no point in being modest. I am awesome with tech.\"\n\n\"Exactly,\" he agreed. He stroked the side of her head again as though he were handling a precious jewel and continued, \"That single-minded dedication to your work has literally transformed our lives. Every technical innovation we have has been down to you and I'm not exaggerating when I say that all our victories were only possible due to that hard work. You're like the unsung heroine behind everything: Saving Terra, the wins against Nexus, the Kintark, the Drakkar, I won't list them all, but you know what you've accomplished.\"\n\nDana was quiet for a moment as she digested that, remembering all the battles they'd been in. Then she beamed at him, saying breathlessly, \"I hadn't really thought of it like that before. That's really fucking cool!\"\n\n\"Too right, you are,\" he agreed with a smile. He looked into her eyes and said sombrely, \"Unfortunately, that single-minded focus that makes you so amazing with tech, is making you vulnerable in battle. I've nearly lost you twice now for the same reason. The first time was against Kindralax and then yesterday against the Drakkar; both times due to target fixation. Once is a mistake, twice is a pattern, three times...\"\n\n\"Is a habit,\" she finished quietly, eyes going wide. \n\nHe sighed as he continued, \"We might be able to train you out of it, but I'm not sure I want to take that chance, especially with something as dangerous as the Valkyrie. At least when we're fighting on the ground, I can be there to protect you. I can't do anything to keep you safe out in space.\"\n\nShe let out a heavy sigh and said, \"Alright, I see your point. Who were you thinking of instead?\"",
        "\"Sakura,\" John replied, watching Dana's face for her reaction. \"She's not had any combat piloting experience, but I know she was into hoverbikes in a big way. I'm sure she'll pick it up very quickly.\"\n\n\"She should find it fairly easy to learn; piloting the mech isn't that difficult,\" Dana reluctantly agreed.\n\nHe nodded, continuing, \"If you can greatly improve the control sensitivity and the mech's responsiveness, I think we could be looking at something pretty special. Sakura's also had far more combat experience than any of us, me included.\"\n\nDana frowned at that. \"Hang on a minute, I thought you were a marine for ten years?\"\n\nJohn smiled at her and explained, \"Most of that time was spent waiting around on ships. Training, giving orders, overseeing logistics as I climbed through the ranks, that kind of thing. Sakura spent almost two solid years in non-stop combat. It was spread out over seven decades because of the cryostasis, but that's not the point. Her combat instincts are extremely refined and I'm sure that'll translate just as well into ship battles.\"\n\nShe chuckled and said, \"Alright, I don't feel so bad now. I can't really compete with that, can I?\"\n\n\"That's the spirit,\" he said with a smile. \"You're also in a much better position to help during ship combat as the Invictus' engineer, with handling repairs, using the tractor beam, rerouting power, that kind of thing. Sakura hasn't got much to do unless we get boarded and let's face it, with me and Alyssa around, anyone boarding has got no chance.\"\n\nNodding decisively now, Dana said, \"That makes a lot of sense actually. I agree, I think she'll make an excellent pilot.\"\n\n\"Thanks for being so understanding,\" John said gratefully. \"I meant what I said earlier, I wasn't just buttering you up. I consider you the lynchpin to the entire team.\"\n\nShe blushed and stroked his face as she said, \"You're very sweet. Thanks for trying so hard not to hurt my feelings.\"\n\n\"You're welcome,\" he said, leaning down to give her a kiss.\n\n\"Time to get naked yet?\" she asked eagerly, biting her lower lip with anticipation.\n\nHe laughed and replied, \"Nearly, I just wanted to talk to you about one other thing.\"\n\n\"My new psychic abilities?\" she asked, somehow managing to get even more excited. \"I still can't believe I was able to just make the mech's fist and the gun's handle magnetic! That was totally crazy!\"\n\nJohn nodded in confirmation, giving her a broad grin. \"Yeah, your ability is quite different from anything the other girls can do.\" He hesitated for a moment, then continued cautiously, \"I'd like to be able to tell you the specifics, but I'm afraid I'm not entirely sure what they are.\"\n\n\"But you rewrote my genetic code! You must know what you did?\" she marvelled, gazing up at him with a look of wonder on her beautiful face.\n\n\"It doesn't work like that. Or at least, Athena doesn't think I'm ready for that precise level of control. When I enhanced your third helix I just had a vague idea, I was clutching at straws for a way to try and help you.\"\n\nDana stroked his arm affectionately and asked, \"What were you thinking about at the time?\" \n\nJohn looked away, his eyes unfocused as he tried to remember his exact thoughts. \"I was trying to give you a way of grabbing the mech's gun; altering the metal to make it more magnetic was the only thing I could think of.\" He gave her an apologetic smile and added, \"You might need to do some experimenting and find out more precisely what you can do.\"\n\n\"I can't wait to find out!\" she gasped gleefully. \"Shit! This is even more fun than if you'd just told me straight out - it's like the gift that keeps on giving!\"\n\n\"No regrets then about joining the psychic club?\" he joked, but his face was pensive as he gazed down at her, worried about the extent to which he'd enhanced her nubile body.\n\nShe saw the tension in his face and quickly sat up, moving to straddle his lap. She cupped his face with both hands and planted a gentle kiss on his lips, a warm smile appearing on her face. He started to speak, but she kissed him again to silence him.\n\n\"We've spoken about this before; how you enhance girls like I used to upgrade guns for the Diablos.\" She smiled as she leaned back and waved her hand over her lithe, athletic figure and continued, \"Your normal handiwork is really fucking impressive, but that just made me look like a hot Maliri girl and there's millions of them.\" Her voice dropped a few octaves as she added intently, \"My normal work was good too, but my favourite was the custom work I did. I used to put a little bit of my soul into each of those custom jobs - they were like a labour of love for me. Now you've made me like Alyssa, the special custom job that you devoted months to working on. So no, I've got absolutely no regrets whatsoever!\"\n\nJohn felt greatly relieved and replied, \"Thanks, Sparks, I'm really glad you see it that way.\" He smiled as he added, \"I appreciate the metaphor, although I'd really rather not think of you girls as weapons. I am glad you realise how special you are to me though, it's important you know that.\"\n\n\"Why don't you show me how special I am?\" she asked him coyly, unclasping her bra and releasing her spectacular breasts. There was no sag whatsoever as she removed the lingerie, her perfect tits sitting high and pert on her chest.\n\nThey just stared into each other's eyes as they removed the rest of their clothing, until Dana lay back, drawing him with her. They maintained that intense eye contact as she spread her legs for him and he pushed his way inside her, her luscious young body yielding to his penetration. Her eyelids fluttered as he sank all the way up to his balls, her pliant flesh moulding around his shaft and squeezing him in encouragement as he fully impaled her.\n\n\"Am I yours?\" she murmured, arms and legs wrapping around him like a limpet. \n\nCradling her head in his hands, he nodded, saying, \"You're my special custom job that I've grown so attached to, I'm never going to let go. I've put too much of my soul into you.\" \n\n\"Oh, John...\" she whispered breathlessly, eyes welling up as she gave him a loving kiss. \n\nThey were quiet as they moved together, staring into each other's eyes as he held her protectively. He'd never felt this level of connection to her before, it felt so much deeper and far more intense than normal. She felt it too, the golden coronas around her pupils flaring wide with her arousal. Dana was the first to climax, and the second, then the third, so she was practically sobbing with ecstasy when he finally held her still and drove all the way into her womb as he flooded her with cum.\n\nShe held onto him as long as she could, until her rapidly growing tummy made her relax her grip, letting him lean back and give her more room to expand. Dana didn't take her eyes from his as he filled her though, interlacing her slender fingers with his broader ones as he pumped her full of his sperm. The temptation for John to bring this act to its logical conclusion and have her carry his baby in her swollen belly was just as intense as it had been with Rachel. Dana could tell and the doe-eyed look of yearning didn't make it any easier for him to resist.\n\nFinally, he was done, his quad drained dry and she drew up her right leg then rolled to the side, so that he could spoon with her without having to pull out. He gladly did so, wrapped his arms around her and placed a possessive hand on the heavy weight now rounding out her waist.\n\n\"It's never been like that before,\" Dana said quietly, placing her hand atop his. \"You made me feel so special. Thank you.\"\n\nHe drew back her hair and placed a loving kiss on her cheek, using that simple gesture to silently convey his strength of feeling for her. She sighed with contentment, then snuggled into his arms, relaxed and deliriously happy.\n\n***\n\nEdraele groaned in agony as she finally awoke, cringing from the throbbing headache that made her feel every rhythmic pulse in her brain. This was worse than any hangover she'd ever experienced, more akin to the splitting migraines that her tumour used to trigger.\n\n\"Are you alright, Edraele?\" someone asked, sounding deeply concerned but very far away. \n\n\"Painkillers, in my drawer,\" she mumbled desperately, her hands moving up to massage her temples. \n\nShe was vaguely aware that there were warm bodies nestled against her flanks, one of them shifting away and leaving her feeling suddenly vulnerable and exposed. When they returned a few moments later, she put her arm around that female form, hugging her fiercely as she held herself tense, still, and rigid to avoid jostling her pounding head. A short moment later, gentle hands moved hers away from her head and she felt the cool metal of the dispenser against her temple. The familiar waves of pain-relief swept through her body, soothing away the thumping in her brain and finally letting her relax.\n\n\"Thank you so much...\" she said gratefully, still not daring to open her eyes.\n\n\"Shh, let us take care of you,\" someone murmured and Edraele felt movement on the bed as her companions shifted around her. \n\nCaring hands lifted her gently, before settling her back into someone's warm embrace, a firm pair of breasts providing her a lovely pillow. Dexterous fingers began to massage her head, while many more sets of hands began to stroke her body, soothing away any remaining tension. She sighed with relief, her eyes fluttering open to find herself surrounded by Almari, Ilyana, and the Young Matriarchs, who all looked on with worried faces. \n\nShe smiled at them now and said, \"Thank you, my darlings. I feel so much better now.\"\n\n\"What happened, Edraele?\" a richly timbred voice asked from above her head, the question tinged with an undercurrent of worry. \"I've never seen you in so much pain before.\"\n\nEdraele glanced up and saw Luna's anxious yellow eyes staring down at her. Smiling at her bodyguard, she reached up to caress her cheek and said, \"I think I overdid it, Luna. I'm alright now, the pain has subsided.\"\n\n\"You should still rest for a while to recover, so just lie back against me,\" Luna said, brushing a stray lock from Edraele's face before continuing to massage her temples. \"What do you mean, you overdid it?\"\n\nLetting out a rueful sigh, Edraele glanced down at the concerned faces of the Maliri women who surrounded her on the bed. \"John needed psychic energy to fuel his abilities - he was fighting Drakkar and trying to save the Ashanath from extinction. I exhausted my normal power reserves, so I was forced to pull some from each of you, too.\"\n\n\"I felt you draw energy from me,\" Kali murmured, staring at her with wide indigo eyes. She was lying on the bed beside Edraele, pressed against her left flank. \n\nEdraele stroked her back and asked with concern, \"I hope I didn't hurt you, my sweet girl?\"\n\nShaking her head, Kali replied, \"No, but it felt very strange, like a strong tugging sensation.\"\n\n\"Are the rest of you unharmed too?\" Edraele asked, looking around anxiously at the cluster of women on the bed.\n\nLeena smiled at her, cuddling her right flank and replied, \"We're all fine, Edraele, just concerned about you. What happened? Why were you so badly affected?\"\n\nEdraele looked at them guiltily, reluctant to reply, but she could tell they weren't going to relent until they had an answer. \"John still needed more energy, but I wasn't prepared to risk harming any of you by taking more than was safe - you're all far too precious to me for that. I... tapped into some of my own life-force to aid him instead.\"\n\nThere were shocked gasps from all around, the girls looking horrified. \"Did he make you do that?\" Tsarra asked in alarm.\n\n\"No, absolutely not!\" Edraele exclaimed. She leaned forward to clasp the House Perfaren Matriarch's hand and begged her, \"Please don't tell him! He'd be mortified!\"\n\n\"I promise, I won't say a word,\" Tsarra said earnestly.\n\nEdraele gave her a grateful smile. \"You're a good girl, thank you so much.\"\n\n\"I feel like I've let you down,\" Valani murmured, looking abashed and glancing at the rest of the group. \n\n\"Of course you haven't, my darling. Why would you think that?\" Edraele said reassuringly, reaching out to gently stroke the girl's smooth cheek.\n\nNyrelle nodded sombrely and said, \"We all have Edraele. If we'd built stronger connections with you, you could have safely drawn more energy from us. Then you wouldn't have felt it necessary to harm yourself.\"\n\nShaking her head, Edraele replied, \"You mustn't blame yourself for th-. Oh!\" \n\nShe glanced down in surprise as two full sets of lips surrounded her nipples and began to lap and suck on them. Kali and Leena's smiling eyes looked up to meet her curious gaze as they gently started to nurse at her breasts. Edraele's only regret was that she had nothing to give them and she smiled back as she cupped their heads, stroking them affectionately.\n\n\"We need to work much harder to help you,\" Nyrelle said earnestly, placing her hands around Edraele's left thigh and slowly drawing it back. She darted a lusty glance at Valani, who did the same to the right. \n\nTsarra knelt between her splayed thighs and Edraele stared at her in surprise as the green-eyed girl nuzzled into her pussy for the first time. Her tongue was quick and eager as she followed Ilyana's and Almari's advice, the two former assassins stroking her short white hair affectionately as they murmured words of encouragement.\n\nWhen Valani and Nyrelle began to suck on her toes, Edraele arched her back and cried out with pleasure at the sensory overload. \n\n\"Just let us know when you get too exhausted to continue. We'll play together until you recover, then we can start again,\" Luna said, giving her a loving smile. \"By the time we're done, you'll have more energy than you know what to do with. You'll never have to put yourself in that position again.\"\n\n\"Oh! My beautiful angels!\" Edraele screamed, bucking against Tsarra's probing tongue as she reached a thunderous climax.\n\n***\n\nJohn had dozed off with his arms around Dana, so it came as a shock when Edraele's distinctive voice suddenly filled his mind with her frantic cries.\n\n*Edraele! Are you alright?!* John thought to her, sitting bolt upright in alarm.\n\nA long keening cry of ecstasy reverberated through his thoughts, and he immediately relaxed, being extremely well versed with the sound of a woman mid-orgasm. He chuckled and Dana rolled onto her back, giving him a languid smile.\n\n\"Everything okay?\" she asked, noting him sitting up on his haunches. \n\nJohn placed a hand on her rounded tummy and stroked her as he smiled. \"Edraele just gave me a rather vocal wake-up call. It seems like it's not just us having fun this morning.\"\n\nThe redhead giggled, then stuck out her hand for assistance. \"Help me up, would you? That reminds me, I need to go and feed your load to her daughter...\"\n\nHe did as she asked, then quickly dressed while Dana just gathered her clothes in a bundle and stood there wearing only a smile. Offering her an arm, they walked towards the door leading to the Lagoon, with John hitting the button to open the way for his curvaceous partner. Sounds of splashing water reached his ears and when they strolled out across the arching bridge, he spotted a bevy of exotic beauties in the clear aquamarine pool. \n\nJade leapt clear of the crystal surface as she raced around the lagoon, her aquatic form giving her plenty of propulsion to drive through the water. Meanwhile Irillith and Tashana were shrieking with laughter as they splashed each other in a frenetic water fight. John stopped at the top of the arch, admiring the twins in their matching white bikinis and enjoying hearing them have so much fun together.\n\n*I'm sorry John,* Edraele panted as she tried to respond to him. *The Young Matriarchs and my bodyguards... they're trying to... Oh my...!* Her voice trailed off and he felt a rich surge of pleasure over their empathic bond.\n\n*Tell me later, beautiful. I'm just glad you're okay,* he thought to her amiably, a relieved smile on his face.\n\n\"Oops!\" Dana suddenly exclaimed, taking advantage of his distracted state and deliberately shoving him off the bridge.\n\nThe last thing he heard before he plunged headfirst into the water was the sound of her peals of raucous laughter. He'd barely had time to right himself to swim back up towards the surface, when he felt strong arms circling him and saw Jade's gorgeous face inches from his own. She smiled at him as she propelled him upwards, holding him safe in her arms as they broke the surface.\n\n\"Are you alright, John?\" she asked, easily supporting his weight as she floated in front of him.\n\nHe laughed and looked up at the giggling redhead on the bridge, wagging a finger at her and said, \"I'm going to get you back for that, you little imp!\" Turning to look at Jade, he gave her a kiss and added, \"I'm fine, she just caught me by surprise.\"\n\nHe stripped off in the water, throwing his clothes and boots over to the beach and waving at the other girls. Irillith returned his wave, until Tashana jumped on her back, ducking her sister under the water with a big splash. He smiled at their antics, then spotted Sakura and Rachel, who were lying on sun loungers watching the rest of the group. They waved back at him, beaming grins on their faces.\n\nJade slipped around behind him, her cool skin gliding across his as she kissed his neck. \"When I said I wanted to try swimming in the Lagoon for the first time, everyone wanted to come along.\" \n\n\"Does it get my Nymph's seal of approval?\" he asked, kicking lazily in the water to keep himself afloat. \"Let me know if there's any improvements you'd like to make, Dana and I designed this Lagoon with you in mind.\"\n\n\"I absolutely love it,\" she purred in his ear, literally in her case as he could feel the reverberations in her throat. \"It's large enough and the water's sufficiently deep for me to really stretch my fins.\"\n\n\"Perfect,\" he said, turning around to give her a kiss. \n\nWhen their lips parted, she stared at him intently, emerald eyes gazing into his. \"John, would you mind if I asked you a personal question?\" she inquired politely, suddenly seeming unsure of herself.\n\n\"Of course,\" he agreed, twisting around so that she was facing him now. \n\nShe took a deep breath then asked, \"Why do you treat me differently to the other girls?\"\n\nHe shook his head and frowned as he replied, \"I promise I don't mean to. Please don't think I don't care abo-\"\n\nPressing her lips to his mouth, she silenced him with a tender kiss, her long tongue wrapping around his. It began stroking him reassuringly and he relaxed and enjoyed the strangely soothing caress, mainly concentrating on keeping them both afloat as he trod water. Jade wrapped her limbs around him and deliberately trapped his arms and legs, stopping him from swimming so that they sank silently below the smooth surface of the water. \n\nJohn was a good swimmer and able to hold his breath for a long time, but his eyes widened after they'd been underwater for over a minute. The Nymph stroked his head soothingly as she continued to kiss him, but she exhaled into his mouth now. Cool, fresh oxygen filled his lungs and he blinked at her in surprise as she supplied him breathable air. She reached for his hand and brought it up to her neck, letting him feel the gills that were letting her breathe for them both. It was a disconcerting but strangely comforting feeling to be entirely dependent on her for survival and he relaxed, letting himself get used to the surreal experience.\n\nEventually he swam backwards, carrying the dark-green girl into one of the little grottos that was cleverly concealed around the edge of the Lagoon. They broke the surface and he sat down on a submerged rock shelf that was actually a comfortable seat, then placed his hands on her hips, feeling her cool skin beneath his fingertips.",
        "Jade pulled back, her long tongue slipping back into her mouth as she smiled at him lovingly. \"I know how much you care about me. Please don't be alarmed, that wasn't what I was asking.\" Twisting slightly in his lap, she gestured out at the Lagoon and added, \"You built all this for me. I just wondered why?\"\n\nHe smiled at her and answered, \"Dana has her workshop and I built the Training Dojo for Calara and Sakura.\" He paused, then grinned as he added, \"Alright, the Dojo was for me as well, but the same applies to the Lagoon. You know I enjoy a good swim.\"\n\n\"The trip to Oceanus?\" she asked, a curious expression on her face.\n\nJohn faltered, knowing full well that he'd chosen that luxurious destination specifically with her in mind.\n\nJade waited patiently, placing gentle kisses on his cheek as her cat-like eyes stared into his, \"Take your time, I'm in no hurry,\" she said with a small smile, letting him know that she expected an answer.\n\nHe sat back and really thought about it, stroking her back as she nuzzled at his throat, her cool lips intent on kissing every inch of his skin. Finally, he looked down at her and said quietly, \"I suppose I just wanted to be different to the other men you've known.\"\n\nShe laughed uproariously and exclaimed, \"Oh, Master! Please trust me when I tell you you're nothing like them. At all.\"\n\nShaking his head, he continued, \"Don't get me wrong, I love the physical side of our relationship, but that's what all your previous masters have always expected of you. With the trip to Oceanus and building the Lagoon, I just wanted to do something nice that was purely focused on your enjoyment, with no expectations in return. Seeing you look so free on Oceanus was absolutely priceless.\"\n\nThe Nymph sat there quietly, her vertical pupils expanding into deep black pools as she gazed at him. She reached out a shaking finger to trace his jawline and whispered, \"I wish I had something special to give you, other than my body, to show my love for you in the same way.\"\n\nHe pulled her in close and said earnestly, \"Jade, you already have! You're with me of your own free will. In over ten thousand years, no other man - not even your creator - has been able to say the same thing. I couldn't ask for a more precious gift.\"\n\nJade didn't say a word, but simply enfolded him in her arms and rested her head against his chest. He could feel her trembling as she clung to him, the beautiful girl quite overcome with emotion.\n\nThey sat together like that for some time, John stroking her hair with one hand, the other wrapped around her comfortingly. Without the obvious sexual frisson that was normally such an integral part of their relationship, such a simple thing as a tender hug felt far more intimate than the most heated of their lustful encounters.\n\nFor her part, Jade just listened to the powerful beat of her Master's heart, sounding so strong and vital in his chest. He had restored her own crystalline heart, bringing her back to life again when she thought she had drawn her last breath. The rhythmic sound filled her every thought, the resplendent crystal within her chest pulsating in perfect synchronisation to that same insistent beat.\n\n***\n\nAlyssa let out a muffled moan. She felt just like that time she'd swiped that miner's stash of rotgut and then got hammered with Sparks - it had taken an entire day before she'd been able to see again. Her tongue felt thick in her mouth and she winced against the light as she tried to open her eyes.\n\n\"Alyssa!\" Calara gasped with relief. \"Thank God you're alright!\"\n\n\"Lights are bright,\" she grumbled, covering her sensitive eyes with her forearm.\n\n\"Faye, the lights!\" the Latina called out urgently, the illumination in the room immediately dimming to a muted glow. \"Thank you!\"\n\nRolling over, Alyssa buried her face in her girlfriend's shoulder, sighing with relief as Calara caressed her throbbing head. Through the foggy shroud over her mind, she vaguely remembered that her boyfriend could work wonders. Perhaps he had the ultimate hangover cure up his sleeve? Or more accurately, in his pants.\n\n*John! Can you load me up?! My head's pounding!* she muttered weakly.\n\n*We'll be right there!* he responded the moment she had finished speaking, his thoughts sounding like a granite drill battering her subconscious.\n\nAlyssa chose not to respond, just in case doing so prompted further conversation. She carefully withdrew her thoughts from everyone else as well, just in case they decided to all speak to her at once. If they did so, she wasn't sure she'd be able to refrain from throwing up all over her girlfriend and considering Calara was being so caring, and felt so nice, it hardly seemed like a fair way of repaying her. She just nestled against the Latina's neck, feeling the soft smoothness of her breasts squashed against her own. \n\nThe sound of lots of bare feet running down the corridor reached her ears and she felt the tremors on the bed as people climbed on to join her and Calara. In the months that she'd known John, this was the one time she felt really reluctant to give him a blowjob, not relishing all that bobbing for a second. She suddenly remembered that Jade would be able to help her out and suckling from her massively inflated bosom sounded just the ticket. Jade would croon a lullaby to her while stroking her hair - it would be perfect; a little maternal affection was just what she needed right now.\n\nIt therefore came as a bit of a surprise when she felt a pair of soft hands tentatively touching her forehead. \n\n\"She really is a Progenitor... but different! You two aren't the same!\" Rachel gasped, sounding astonished. \"Alyssa isn't masked by a shroud the way you are! Her aura is so beautiful!\"\n\nAlyssa really loved the girl, but her perfect diction sounded gratingly loud and annoying this morning. It didn't really help that she wasn't making the slightest bit of sense either.\n\n\"Can you help her?\" John asked curiously. \n\nFrowning at this unnecessary delay, Alyssa wondered why he wasn't buried down Jade's throat, the eager Nymph just as eager to feed her as she was to get loaded up. \n\n\"She's suffering from shock due to empathic psychic resonance,\" Rachel declared boldly. She faltered then, adding, \"But, I'm not sure what that means, exactly.\"\n\nCalara's quiet voice washed over her, the girl's deliberate use of a whisper making Alyssa fall in love with her all over again. \"Alyssa was in quite a bit of distress, could you just heal her, please?\"\n\n\"Sorry! Yes, of course!\" Rachel murmured in barely audible tones, putting her back in Alyssa's good books again.\n\nAlyssa felt soothing waves pouring out from the point that Rachel's fingers were touching her head, the light contact suddenly reminding her of the gentle brush of cotton wool. That soft fluffiness pervaded her every thought, wrapping up her mind in a misty swirl that left her shivering at the exquisite touch. The gentle fog faded away just as quickly as it had cuddled her subconscious back to health and she felt sharp, clear, and pain free once more. \n\nHer eyes snapped open and she rolled away from Calara, then did a double-take when she laid eyes on Rachel. The brunette's stormy-grey eyes had softened, lit with an inner light that reminded Alyssa of one of Gravitus' moons, shining through a cloudy night sky.\n\nHer face lit up in delight, having not been genuinely surprised by anything in months. It was an unfortunate drawback to being in constant telepathic communication with everyone around her, but one she gladly accepted for the wondrous perks she gained in exchange. She sat bolt upright and saw that all her adoptive sisters were there, sitting around her on the bed in a semicircle. \n\n*Okay my loves, bring me up to speed,* Alyssa requested from everyone in the room - except Faye of course and also Tashana, who couldn't respond telepathically with her yet.\n\nShe closed her eyes and listened to John and six of the girls fill her in on everything that had happened since she'd been knocked unconscious on the Legacy. She smiled as she listened to their tales, greatly relieved to hear that they had won the battle and saved the Ashanath. However, she was particularly interested in John's version of his recent intimate encounters with the girls, while comparing them to their own fascinating perspectives. \n\nThere'd been a marked shift from Calara, Sakura, and Rachel in the strength of their feelings towards John, but Dana and Jade were practically giddy with excitement as they filled her in on all the touching details of their talks with him. She opened her eyes again, quickly studying the redhead and the Nymph and smiled as they darted adoring looks John's way.\n\n\"You have been a busy boy,\" Alyssa said to John playfully, then stretched in the tantalising way that she knew he loved. \"Maybe I should get knocked out more often!\"\n\nJohn was kneeling beside her and he lifted her in his arms, repositioning her so that she was straddling his lap. \"Please don't,\" he requested emphatically, embracing her tightly in a heartfelt hug. \"I'm not sure I can go a whole day without hearing your voice.\"\n\n\"Oh alright, since you asked so nicely,\" she replied, hugging him back and letting out a happy sigh.\n\nHe kissed her on the shoulder, then asked, \"What happened? Rachel said something about psychic shock?\"\n\nHe released her from his tight embrace then settled back against the headboard, so she twisted around to sit in his lap, snuggling back against his muscular chest to face the gathering of girls. She noted Tashana's enormously rounded tummy, which explained where John's most recent load had gone. She felt doubly thankful that he'd enhanced Rachel to be able to heal, thereby saving herself several hours of feeling like death until his quad restocked.\n\nShe took a deep breath, then replied to John's question, \"The old parts of the Legacy are all from an ancient Progenitor vessel, as I'm sure you're all well aware. What you probably don't know, is that the ship is filled with the psychic imprints of all the women who died there.\" She shivered as she recalled the horrific deaths all those Maliri girls had suffered. Her expression was grim as she added, \"I saw hundreds of women have the life sucked right out of them, leaving them little more than hollowed-out husks. It was the most horrible thing I've ever seen.\"\n\n\"I'm sorry you had to witness that,\" John said gently, putting his arms around her again. \"I've seen the same thing in the nightmares on the Astral Plane.\" His voice caught as he added, \"Anyone who could do that is utterly vile.\"\n\nAlyssa turned to look at him, concern written all over her face. She couldn't hear his thoughts when he was on the Astral Plane, so she hadn't realised he'd been tormented by visions of her and the girls having the life sucked from them. They shared a quick kiss, before she settled down in his arms once more.\n\nShe glanced at the twins, then around at the rest of the group and announced, \"It was Mael'nerak's ship, I'm sure of it.\"\n\n\"How can you be so certain?\" Tashana asked, before sharing a conflicted glance with her sister. They put their arms around each other for support, then turned to watch Alyssa with equally pensive expressions on their identical blue faces.\n\n\"The vast majority of the women being killed were Maliri and it was obvious that they were the crew aboard that ship,\" Alyssa explained, giving the twins a sympathetic look. \"Mael'nerak might have turned good in the end, but he was an evil bastard in his prime. I saw him suck the life out of a bunch of invading Thralls - they definitely weren't Maliri as they had yellow skin and bright red hair.\"\n\n\"Can you remember any details about what you saw?\" John asked, massaging her shoulders.\n\n\"It was from his really early days; Mael'nerak looked just like those first images we saw of him in the Nexus files. White robe, short goatee, stern faced, which must date it from at least forty-thousand years ago. If I had to guess, I'd say that echo might have even predated his invasion of the Achonin.\" She glanced at Tashana and asked, \"Unless you've read about another Progenitor invasion he fought off, prior to the one we all saw in your memories?\"\n\nThe Maliri girl shook her head and replied, \"Valada never mentioned Mael'nerak fighting off anyone else. It's possible that something happened in the time before she was made into his Matriarch, but I've not seen any mention of thwarted Progenitor invasions.\"\n\nJohn asked quietly, \"So, if his ship got destroyed, does that mean Mael'nerak didn't survive his assault on this other Progenitor?\"\n\n\"Are we certain the Ashanath didn't reclaim the ship on Arcadia? The one Jessica Blake found,\" Irillith interjected before anyone could speculate on John's question.\n\nDana shook her head and replied, \"No, I don't think so. The ship that crashed on Arcadia was badly damaged but still in a much better state than this one. Mael'nerak's ship was totally fucked.\"\n\n\"We can ask them this afternoon,\" John said, smiling with anticipation at getting some answers. \"Ularean's promised to tell us everything this time.\"\n\n\"It's just a shame they weren't completely honest with us from the start,\" Calara said, giving him a look of regret.\n\n\"If you'd pushed them too hard at the time, you might have been in trouble,\" Rachel said quietly. \"They were obviously very frightened of you and people make rash decisions when they're afraid.\" \n\nJohn nodded, then shrugged helplessly as he said, \"Events played out the way they did, so we just had to roll with them. You knew they were hiding something, but we just didn't have the leverage to get them to open up about it.\" He looked around the group and continued, \"Anyway, now that Alyssa's back in the land of the living, now's probably a good time for the battle recap.\"\n\n\"Sorry to keep everyone waiting,\" she said airily.\n\nHe squeezed her gently in his arms, then looked around at the women on the bed, making eye contact with each of them in turn. \"I've already been through the battle with Calara, so I know what happened on the Invictus while I was aboard the Legacy. There's no point in going through everything in laborious detail, but I'll just go through the key points.\" He took a deep breath before continuing, \"Before we get into that, let me just say that this was by far the most intense combat we've been involved in so far. Every one of you made me proud; you worked together flawlessly as a team, protecting each other and meeting our objectives. Thanks to all of you, the Ashanath were saved from extinction at the hands of the Drakkar. Well done girls, you were magnificent.\"\n\nThe crew beamed with his generous praise, sitting taller and grinning at one another as they looked around at their friends. John smiled as he watched them react, pleased to see them looking so happy. \n\nWhen he'd let them enjoy the moment of victory for a little while, he spoke up again, \"There were a few rather dramatic developments during the battle that I'll quickly mention. Dana and Rachel both have new psychic talents now and you've all seen what they were able to do. Sakura's powers have continued to expand to include Cryokinesis, which is the ability to manipulate ice. Alyssa and I will help train you where we can, but I suspect that you'll simply need to practice and get more familiar with the full range of capabilities at your disposal.\" He glanced at Irillith and added, \"Using that electric field to short out the Drakkar's shields was inspired. Well done coming up with that.\"\n\nThe Maliri girl smiled at him as she replied, \"It wasn't too hard to adjust the strength and volume of the electrical field. Once their shields were out, Tashana and me were able to tear them to pieces with railgun rounds.\"\n\n\"I wish we'd had you two with us the first time we got boarded!\" Dana exclaimed, patting Irillith on her bare blue shoulder and darting a grin at Tashana.\n\nTashana smiled back at her hesitantly, still feeling conflicted about gunning down the Drakkar marines. John was watching her at that moment and he took note of her slightly pensive expression, resolving to talk to her about it when he got a chance.\n\n*You saw that too?* Alyssa prompted him. *She feels regret about something.*\n\n*Thanks, beautiful. I'll try and find out what's bothering her,* John replied thoughtfully.\n\nShe tensed for a moment, then said carefully, *I think I know what it is. I'll tell you about it later.*\n\nJohn stroked her shoulder in acknowledgement, then glanced at Dana and said, \"Let's move on to talking about our equipment.\"\n\n\"Actually I have something I wanted to mention,\" Rachel interjected, turning to look at the redhead beside her. \"I don't think our current guns are adequate against shielded opponents. If Alyssa hadn't been able to use telekinesis to batter her way through the Drakkar, we'd have been in serious trouble. Having to split different weapon types up between teammates is just halving our firepower as Alyssa couldn't fire her Punisher rifle until their shields were down and my Justice Laser wasn't able to penetrate their armour.\"\n\n\"I could miniaturise a Progenitor Power Core and upgrade the rifle that way,\" Dana suggested thoughtfully. \"We haven't been using the integral grenade launcher much, I could combine the best of both weapons and try an over-and-under railgun and laser combo?\"\n\nJohn shook his head in amazement and replied, \"You could do that?\"\n\nShe grinned at him and replied, \"Yeah, it shouldn't be too hard. I won't be able to increase the firepower too much though, as we're still limited by heat dissipation on the barrels.\"\n\n\"How about the Drakkar's gear?\" Alyssa asked curiously. \"Did anyone get a chance to loot their dead?\"\n\nJohn winced at her unfortunate choice of phrase and said, \"I've spoken to Ularean, his people are going to collect undamaged samples of all the Drakkar's weapons and armour for Dana to take a look at.\" He turned back to look at the redhead and added, \"Those guns of theirs had a lot of penetrating power. Getting hit by one felt like being battered by a sledgehammer.\"\n\nRachel nodded emphatically and said, \"I was very lucky I was hit by a glancing blow on the helmet, considering the trauma I suffered to my shoulder.\"\n\n\"Their guns were much more advanced than anything they used in our last encounter with them,\" John said soberly. \"If the Progenitor could supply them with that black armour for their ships, there's no reason the weapons and armour didn't come from him too.\"\n\nSakura frowned as she recalled hacking through the black battlesuits and said, \"The Drakkar's armour was very sturdy. Even my crystal Alyssium blades struggled a little with slicing through it.\"\n\n\"Maybe this Progenitor gave the Drakkar some kind of low-grade version of the gear his Thralls use?\" Irillith speculated. \"We've previously spoken about the armour plating the Progenitor gave them being a crude version of the armour on his black ship.\"\n\n\"Shit! We'll be able to find out if that's true!\" Dana gasped in delight. \"I'll be able to study the black armour on the Legacy and find out!\"\n\n\"Do you think you'll be able to reproduce that armour plating, if that is true?\" Calara asked, eyes going wide at the thought. \"That would be incredible if that's the case. Considering how powerful the Progenitor ship's guns are, just think how tough that ship's armour must be!\"\n\n\"I don't see why not!\" Dana said with a joyful grin. Her smile suddenly faded as she added, \"Unless it's fabricated by some kind of process which John hasn't felt like sharing with me yet.\"\n\nHolding his hands up in the air, John protested, \"Hey! It's not me blocking our access to this tech!\"\n\n\"I know, I was just teasing you,\" Dana replied, blowing him a kiss.\n\nThe girls laughed at her banter, all except for Sakura who frowned with worry. She said quietly, \"If the armour the thralls use is greatly superior to the Drakkar gear, exactly how tough is that going to be? I think we need to be prepared to face battle-armoured Thralls eventually.\"",
        "Tashana sat up with interest and said, \"I've seen stylised depictions of Thrall body armour, it's definitely fully shielded if the images weren't exaggerated. It showed shots bouncing harmlessly from ovals surrounding the women.\"\n\n\"Oh! I actually saw some of the psychic echoes wearing Thrall body armour!\" Alyssa suddenly blurted out, eyes widening as she remembered. She tilted her head back to look up at John and added, \"I thought I was being creative when I designed our Paragon suits, but I know where I got the inspiration now. They look extremely similar to Thrall armour!\"\n\nEveryone went quiet at that bit of news, glancing at John when he said, \"Is it just me who finds that profoundly disturbing? We're instinctively guiding ourselves down the same path that other Progenitors have followed.\"\n\n\"Yes, but at a much slower pace,\" Dana said grimly. \"We're being throttled by whatever you can force out of your Progenitor Guide.\"\n\nJohn nodded, his expression bleak at the thought. After letting out a sigh of frustration, he forced himself to smile as he said, \"Alright, let's get back to the battle review.\"\n\n\"The new weapons on the Invictus were well worth all the effort we put in on the refit,\" Calara said, smiling at Dana in appreciation. \"Being able to repeatedly fire the Nova Lances was incredibly useful and coupled with the Singularity Drivers, our firepower was devastating!\"\n\nThe redhead smiled with satisfaction, then asked, \"What about the Heavy Cannons and Gauss Cannons?\"\n\n\"They were certainly very effective,\" the Latina replied thoughtfully. \"Being able to strip off the black armour plating like that left ships vulnerable for the Ashanath to finish off - any we didn't just kill outright that is.\"\n\n\"You don't sound very impressed,\" Dana said, looking crestfallen.\n\nCalara gave her an apologetic smile. \"I'm sorry Sparks. It's just that after seeing the Nova Lances and Singularity Drivers in action, I've been a bit spoilt with sheer destructive power. The new munitions based weaponry weren't as dramatic, but they did work exactly as you designed them to.\"\n\nDana's eyes narrowed as she said, \"Hmm, maybe I'll have to get a bit creative.\"\n\n\"The Photon Lasers on the Raptor were an excellent upgrade to the old Beam Lasers,\" Jade said enthusiastically in an attempt to cheer her up. \n\nThe Latina nodded enthusiastically and said, \"The Raptor and the Valkyrie tearing apart cruisers like that was incredible! If we could upgrade the Invictus' Beam Laser batteries to Photon Lasers that would be a massive upgrade!\"\n\nDana winced as she replied, \"The amount of power needed for that would be insane!\" Tapping her finger on her chin, her mind whirred as she mulled over a number of possible areas of future research, then continued, \"Those Photon Lasers were just initial prototypes. I'll keep looking at ways to improve them; maybe I can make them more energy efficient.\"\n\n\"Thanks, Dana,\" Calara said gratefully. \n\nJohn turned to look at his Chief Engineer and said, \"While we're discussing the Valkyrie, that reminds me about something important. The Invictus took a few nasty hits to the hull in that battle and if she'd suffered serious damage, you're the best chance we've got at keeping our main source of firepower in the fight. I've been thinking about it and it might be a wise precaution to keep you on the Bridge in future battles, just to be on the safe side. What do you think, honey?\"\n\nDana looked at him in surprise and her expression softened as she realised what he was doing. \"You're right, making sure the Invictus is fully operational is the most important thing I could be doing.\"\n\nHe looked around at the gathering of girls and asked, \"Is anyone else an expert at damage control and coordinating emergency repairs?\"\n\nThey all shook their heads, having no experience or expertise in that field.\n\nJohn smiled at her apologetically, and said, \"In that case, I'll have to insist you stay at your Engineer Station, Dana. We can't risk the Invictus taking damage and not having you around to fix it.\"\n\nDana let out a dramatic sigh, then said, \"Alright, but I'll really miss piloting the mech, that was fun!\" She glanced at Faye and added, \"We should definitely increase your team of maintenance bots. If we take major damage, I'll need your help to actually patch the ship back together again!\"\n\nFaye nodded eagerly, her purple face lighting up at the prospect of being able to assist her friend. \"I can directly oversee as many robots as I have avatars, but for simpler work I could control lots more! As long as they have programs for their tasks, they should be fairly autonomous.\"\n\n\"We'll start with bringing your team up to twelve for now,\" Dana said thoughtfully. \"Then if we need to go into emergency repair mode, all of your avatars can coordinate their work. We can't predict the severity of any damage we take, so I think you'll struggle to create repair programs sophisticated enough to handle so many random factors.\"\n\n\"That sounds like a good idea to me!\" Faye exclaimed, bobbing her head in agreement.\n\nJohn looked around at the girls and said, \"Unfortunately that leaves the Valkyrie short a pilot. I've got someone in mind who I think would be perfect for it, but I haven't had a chance to speak to her about it yet.\" \n\nWhen he turned to look at Sakura, her almond-shaped eyes widened in surprise and she blurted out, \"You want me to fly the Valkyrie?\"\n\nHe nodded firmly and replied, \"You flew a hoverbike, so piloting isn't something totally new to you. You've got exceptional combat awareness and Dana's working to improve the mech's control mechanisms to make it very responsive. For someone as athletic as you, I think you'll be a superb choice for it.\"\n\nSakura mulled the idea over for a few seconds, nodding slowly as she thought about it. \"I have been feeling like a bit of a fifth wheel on the Bridge. Unless we get boarded, I'm not really able to contribute in most ship battles. It was so different when we boarded the Legacy though! Saving all those Ashanath from the Drakkar, then rescuing Rachel and Alyssa felt tremendously rewarding.\"\n\n\"I'll still need you for boarding actions and ground missions,\" John said firmly. \"If you're up for piloting the mech, then you'll be able to assist in the same way during space combat.\"\n\n\"I get the same feeling saving friendly ships from hostile ones,\" Calara said, darting a perceptive look at John. She met Sakura's gaze when she looked her way and continued, \"I think John's right. With your athleticism, focus, and temperament, you're the perfect choice as a replacement pilot for the Valkyrie.\"\n\nSakura smiled at her gratefully, then turned to beam at John with enthusiasm as she exclaimed, \"Alright, I'm your girl!\" \n\nHe grinned back at her. \"Fantastic! I knew I could count on you.\"\n\nSakura giggled then, her brown eyes sparkling with delight. \n\n\"What?\" he asked, looking at her curiously.\n\nShe grinned at him as she explained, \"You know you've really gone for the clich\u00e9 now? Putting the only Japanese girl on your crew in the giant mecha!\"\n\nHe laughed and nodded, spreading his hands helplessly. \"Sorry honey, it was unavoidable really. I could only resist for so long.\"\n\nAlyssa shook her head and her cerulean eyes twinkled playfully as she said, \"Actually we haven't gone for the full clich\u00e9 yet! To do that, we'll need to dress you up in a school uniform and have our resident tentacle monster violate you.\"\n\n\"I've got a great outfit you can borrow!\" Dana gasped with delight.\n\n\"You only have to ask and I'm sure something could be arranged,\" Jade purred, smiling flirtatiously at the Asian girl.\n\nWhen they saw the lusty look on Sakura's face, everyone cheered and burst into laughter, making her blush furiously.\n\n\"Hey! I can't help having a few naughty fantasies!\" Sakura objected, grinning at her friends.\n\nWhile Calara gave her a playful hug and the girls all giggled with each other, Alyssa glanced up at John and said, *I'm impressed, you handled that very delicately. Thank you for making such an effort to spare Dana's feelings, she really appreciated it.*\n\n*I felt bad about effectively taking the mech away from her, but she's too vulnerable out there without either of us to keep an eye on her.* John explained, winking at Dana when she blew him a grateful kiss.\n\n*We nearly lost her months ago aboard that Drakkar battleship because she was so fixated on blowing up its reactor,* Alyssa replied, gently stroking his arm. *We both think you made the right call.*\n\nHe leaned down to give her a kiss, while waiting for the girls' laughter and chattering to subside. When they finally quieted, he sat up straight again and smiled at them as he tried to recall the other points he wanted to raise.\n\n\"There was one last thing I wanted to bring up before we end the post-battle review. Now this one is mainly my fault, but I think we badly overextended ourselves in this battle. We were so busy going for the big win and trying to help everyone, we were courting disaster by taking too many risks,\" he said, before turning to look at Calara. \"Commander, what was our primary objective in this battle?\"\n\n\"To destroy the nineteen black-armoured Drakkar battleships and eighteen cruisers, thereby relieving pressure on the Ashanath forces, Admiral,\" she replied promptly, in a clear voice.\n\nHe nodded and said quietly, \"Which we achieved and is a breathtaking accomplishment. However, just think about the amount of mission creep we had.\" He raised his hand and began ticking off items, \"We intercepted the cruisers going for the Ashanath carriers, then cleared the way for the Ashanath strike craft to shoot down the planetary raiders. We protected the Legacy from dropships, then boarded it to rescue the Ashanath High Council. Finally, we took out scores of dropships to save the remnants of the Ashanath forces from boarding actions.\"\n\nThe girls shook their heads in amazement, realising the sheer scale of everything they had achieved.\n\n\"I don't want to take away anything from our victory, which was truly outstanding,\" John began, looking worried. \"But, we were in real danger of spreading ourselves too thin, which is when bad things started to happen. The Invictus took damage because we re-entered the battle rather than hanging back to fight at a distance and recharge our shields. Rachel was injured because Sakura and I weren't there to back her up - we boarded the Legacy from three entry points to save as many Grey crew as possible. This also meant that when Alyssa was incapacitated, the shock distracted everyone and the Invictus got boarded.\" \n\n\"We pulled through by the skin of our teeth, but it could have all gone very badly wrong. Now, if you see me getting sucked into this kind of over-commitment in the future, I want you to let me know. Saving the Ashanath was a worthy goal and I'm very glad we did so, but it wasn't our fault they got attacked and you girls shouldn't have to pay the price because they didn't adequately protect their homeworld.\"\n\nAlyssa turned around and said quietly, \"We all understand.\" She smiled at him and stroked his face as she added, \"Immortality might seem like a blessing, but to spend an eternity grieving for girls you've loved and lost - that would be a terrible curse.\"\n\nHe nodded, pulling her into his arms, then beckoned the other girls in for a group hug. Calara, Sakura, and Jade from the left, Dana, Rachel, and Tashana from the right, surrounding them, and leaning in for a hug. As Irillith paused to peel away her spirit form, John beckoned Faye closer and she knelt behind Alyssa as Irillith wrapped her arms around her. \n\n\"All of you are the most precious thing to me,\" he said earnestly. \"Always be careful and take special care of each other, because I don't want to lose any of you. Okay?\"\n\nThey all murmured their agreement, nodding and smiling first at him then each other. \n\nHe smiled back at them and said, \"Alright then, we've got the normal after-battle work to do, so we'll fly down to Ashana now and repair the Invictus.\" Glancing around at the semi-clad girls, he added, \"I absolutely love the bikinis, but we better get showered and semi-presentable since we're off to meet the leaders of the Ashanath.\"\n\n\"I'm sure they'd appreciate it more if we turned up like this,\" Alyssa said with a sly grin. \"You know the Greys are all obsessed with curves?\"\n\nJohn chuckled and replied, \"You're naked at the moment! We want to find out information from them, not give them a collective heart attack!\" As the girls laughed along with him, he smacked her on her pert little rump and continued, \"Come on, time for a shower, then we can all head up to the Bridge.\"\n\n\"Just wait until you see Ashana!\" Dana exclaimed as she nudged Rachel. \"It's fucking crazy!\"\n\n\"I haven't seen it either,\" Tashana admitted, her curiosity piqued.\n\nIrillith smiled at her as she gave Faye a kiss on the cheek and released her from her arms. \"I've never been, but I've seen plenty of images of the place. I'd love to see it in person.\"\n\nThe group broke apart then and they all headed into the shower. Alyssa waited for John at the foot of the bed and took his hand as he climbed off - he was last after being in the centre of the group hug.\n\n*Nice motivational speech, handsome,* she said, giving him a tender kiss as they walked into the bathroom.\n\nHe glanced her way, unsure if she was being serious or sarcastic. *Are you sure? It felt like I got a bit too bleak at the end there. It wasn't quite the rousing toast to a glorious victory I'd originally planned, but I got a bit caught up in it and let my emotions get the better of me.*\n\nThe girls welcomed them into the warm cascades of water and as everyone got soaped up, Alyssa glanced at him over her shoulder. Calara and Sakura were busy getting her very clean, but she focused on him as she replied, *As we discussed before the battle, the girls aren't a normal crew. Believe me, everything you've been saying to them has been having a big impact.*\n\n*I've just been honest about how much they mean to me,* he said in confusion.\n\nShe smiled at him and replied, *I know. Keep doing that, they love it.*\n\nThe crew quickly showered, dried, and got dressed, gathering in the huge bedroom while they waited for everyone to get ready. Alyssa sent out a few mental commands to coordinate their attire and the girls began to reappear in smart business wear, as their militaristic uniforms would have felt inappropriate. John had dressed relatively quickly in his charcoal suit, so he got to see each girl as she made her appearance. \n\n\"You look like you're having fun,\" Alyssa quipped as she sauntered out of the walk-in wardrobe in a fetching pencil-skirt suit. \n\nJohn was stroking Irillith's slender stomach and Tashana's slightly rounded cum-filled one, the Maliri twins grinning at him indulgently. He laughed and said, \"I feel like I've died and gone to heaven!\"\n\nNoting the sister's identical business suits, Sakura smiled and said, \"It's like a before and after picture!\"\n\nHe stepped back to admire the whole group, but just as he was about to tell his girls how stunning they looked, he paused. The two blue-faces of the Maliri twins and their long white hair made them look exactly like the Thralls on the stone monoliths, then there was the identical Amazonian body shape shared by all eight women. Considering that the Ashanath seemed to know far more about Progenitors than they'd originally revealed, he wondered if it was wise to bring the whole crew. The Greys were his allies and he didn't want to terrify them into silence.\n\n\"We saved their species from extinction,\" Alyssa reminded him gently, running her elegant fingers along his shoulder and caressing his neck. \"They won't be afraid of us, not now.\"\n\nNodding his agreement he said, \"Alright, let's head to the Bridge and we can take the Invictus down to Ashana.\"\n\nHe led the way up to the Bridge, primarily to avoid following after all the girls. As much as he would have loved to follow in their wake, he knew he'd never be able to concentrate after seeing them all gliding along in high heels and the enchanting effect they had on their tight derrieres. He jogged up the steps of the Command Podium as the girls fanned out to take their stations, Alyssa smirking at him in amusement as she took her seat at the Executive Officer's Station to his right.\n\nA quick glance up at the holographic Tactical Map swept away all thoughts of beautiful women. He stared in silence at the melancholy battlefield where the Battle of Ashana had taken place, the massive sprawl of wrecked spacecraft like an archipelago of battered islands in that vast, dense sea of debris.\n\nThe beleaguered Ashanath survivors were picking their way through the derelicts, still rescuing trapped colleagues from vessels that had been merely crippled rather than destroyed. He watched a pair of cruisers attempting to tow a marooned battleship from the centre of the metallic wasteland, the huge disc having lost all its engines to Drakkar Beam Laser fire. Everywhere he looked, the salvage and recovery efforts were in full swing, with civilian vessels aiding the few remaining military ships in their endeavours.\n\nThe extent of the devastation inflicted on the Drakkar meant that their ships were too badly mauled for crew to have survived. The Ashanath wouldn't have been brave or foolhardy enough to attempt such a rescue in any case, knowing recovery teams were more likely to be attacked and eaten than met with gratitude for their salvation. It made for grim viewing and John had soon seen his fill.\n\n\"Take us down to the shipyard please, Jade,\" he requested, averting his gaze from the scenes of carnage.\n\n\"Course is already set,\" she replied with a smile, having remembered the way from their last visit.\n\nShe pushed forward with the throttle and the Invictus' six massive Trankaran engines blazed with an orange flare of light as the battlecruiser began to accelerate forwards. A green guide path led their way down towards the surface and the reddish-orange planet grew larger and larger in the screens as they descended through the atmosphere. It was a dry, arid world, the dusty red surface dotted with silvery-grey settlements that glinted as they reflected the light from the system's yellow sun.\n\nEach cluster of buildings primarily consisted of tall, lofty towers and perfectly rounded domes, with each settlement built atop floating islands of orange rock. The island homes of the Ashanath were anchored to the surface of the planet by glowing beams of white energy, creating a strange multi-levelled vista on the otherwise flat plateau they were flying over. \n\n\"I see what you mean!\" Rachel marvelled, staring at the screens in amazement. \"It's like the outer crust of the planet is trying to float away, but the Ashanath have desperately tethered as much of it as they can.\"\n\n\"It's due to the low gravity on their homeworld,\" Dana explained sagely. \"It makes those floating rocks easy to manipulate and manoeuvre into position. You won't notice the difference when we land at the shipyard as they've built artificial gravity into each of those levitating islands.\"\n\nJohn turned to look at the Maliri twin to his left and asked, \"What do you think of the Grey's homeworld, Tashana? Dramatically different to what you're used to on Valaden, I'd imagine?\"\n\nShe tore her eyes away from the view and smiled at him as she replied, \"I have visited a number of different planet types before while searching for Progenitor relics.\" She glanced back at the view of Ashana and continued, \"You're right though, their homeworld is nothing like most of the worlds in Maliri Space. The majority of Maliri planets are lush and full of life; I find it hard to believe that anything can flourish in such a dry, inhospitable ecosystem.\"\n\nJade brought the Invictus lower and they soared low over silver settlements, close enough to see the shallow gullies and troughs in the earth. ",
        "John pointed out slender columns sticking up out of the orange dirt around one particular raised floating rock. \"That's a condenser farm, the planet is covered in them. Those columns pull water from the atmosphere and draw it down into subterranean reservoirs. Most of the vegetation on Ashana is below the planet's surface, grown in vast underground caves.\"\n\n\"What kind of plant-life do they have here?\" Rachel asked him in fascination. \"Are there any Terran species, or all indigenous to Ashana?\"\n\n\"I've only seen one of the reservoirs once, I did some sightseeing about five years ago,\" he explained, thinking back to what he'd seen. \"The Grey's are vegetarians and processed lichen makes up the bulk of their diet.\"\n\nJade wrinkled her nose and said, \"That doesn't sound very appetising.\"\n\n\"They're culinary masters with Fungi and algae, but you're right, I think you have to be an Ashanath to appreciate the taste,\" he said with a smile.\n\nThe crevices in the surface of the planet began to get more pronounced, until they ran off into a huge series of canyons and ravines. Floating above the fractured ground was a colossal plateau, far bigger than any of the other floating islands. Its upper surface carried a shining silver city, with hundreds of towers reaching skyward and casting long shadows over the domes that formed the roofs of the building below. \n\nJade dipped the Invictus into that rocky canyon that led under Ashana's capital, slipping into the traffic flowing towards the hangars beneath the city. Now that the Drakkar invasion had been averted, Ashana was open to business once more and all the merchant vessels that had fled from the city were now flooding back. The Nymph stayed under the port speed limit, weaving between Bract merchantmen and Trankaran heavy traders as she neared the centre of the enormous facility. \n\nThe shipyard was in the northern sector of the city, so she peeled away from the main flow of civilian traffic, following the deep rents in the ground as she wove her way closer. When they got closer to the drydock area built into the underbelly of the city, they could see that every docking bay was filled with battered Ashanath discs except for one, near the centre of the drydock. It was a different hangar to the one they had landed in last time, the Invictus having grown too large with the refit.\n\nA warning chime let them know they had reached their allocated landing area and Jade followed the green guide path up to the inverted drydock above them. Using retro-thrusters to slow their ascent, she lifted the battlecruiser into the welcoming embrace of a set of massive robotic arms. Each enormous limb ended in a broad docking clamp, with the magnets firmly affixing to the Invictus' hull. The arms raised the ship while rotating it through one-hundred-and-eighty degrees about the horizontal axis.\n\nThere were several Ashanath waiting for them in the hangar, one of them wearing distinctive white robes of a High Councillor. They appeared to be a welcoming committee and were waiting patiently beside covered trolleys.\n\n\"We better not keep our hosts waiting,\" John said, rising to his feet. He smiled at the purple girl who was perched on his Command Console and added, \"Would you mind keeping an eye on the ship please, Faye? I'll leave a comm channel open on my watch, so you can listen to our discussion with the High Council.\"\n\nShe gazed at him with her big eyes and gave him a big smile. \"Of course! I'll keep the ship safe. We have twenty-two dead Drakkar in the simulator room on Deck Three and a Drakkar dropship attached to the hull. Would you like me to begin the cleanup operation?\"\n\n\"That would be very helpful, thanks Faye,\" he said, smiling at her in gratitude. He turned and offered Alyssa an arm and they glided down the illuminated steps of the Command Podium together, before following their excited shipmates into the grav-tube.\n\n***\n\nFaye watched them leave, the smile dying on her face as she switched to watching them on the ship's internal cameras. She began to nibble anxiously on a nail as they left the ship, while her secondary avatar reran the images of Dana in the Valkyrie being rammed by the Drakkar dropship. She flinched as she saw her friend bloodied and battered in the pilot's chair all over again, while not being able to do anything to save her. Her tertiary avatar was occupied reviewing the footage of Rachel getting shot in the shoulder, the brunette's beautiful face twisted in pain. Faye experienced that same acute feeling of helplessness all over again, a vicious feedback loop that ratcheted up her worry for her friends.\n\nThe galaxy was such a dangerous place and the girls meant so much to John. It had been unbearable to see him get injured and Faye knew how much he'd be hurt if anything happened to one of the crew. She hated the thought of them being away from the Invictus' protective shell, where she was unable to help protect them...\n\n\"It'll be alright, he'll keep them all safe,\" she murmured nervously to herself, a flicker of light rolling up her purple form.\n\n***\n\n\"Sergeant Gibbons?!\" Lieutenant Grace Wallis called out as she strode through the barracks.\n\nOne of the Port Medea troopers nodded towards the shower block. \"He's takin' a shower Lieutenant, just got off the mornin' shift.\"\n\nThe young woman smiled at the trooper in gratitude, then strode purposefully towards the back of the barracks. \"David, are you in there?\" she called out loudly, so she could be heard over the splashing sound of running water.\n\n\"One second, I'll be right out!\" he called back, the shower turning off a few seconds later.\n\nThe Terran Federation Lieutenant leaned against the wall while she waited, glancing out of the window at the blue-white light from the Iota-Leonis system's bright star. One of the border patrols was just returning to Port Medea, the distinctive predatory shape of the cruisers silhouetted against the glare from the sun. She watched them glide closer, their grey titanium hulls unmarred by plasma burns - it looked like another quiet patrol. Maybe the talk around Port Medea was right? Perhaps the Lion really had broken the Kintark at the Battle of Regulus...\n\n\"What can I do for you, Lieutenant?\" Sergeant Gibbons asked, breaking her out of her reverie.\n\nShe turned to smile at the wet, bare-chested man, who had a towel wrapped around his waist. \"I've got some great news, David! Your orders just came through!\"\n\nHe laughed and shook his head in disbelief. \"You're shitting me?!\"\n\n\"No, I promise! Look...\" She held out the holo-reader with the executive orders listed clearly for him to see. \n\nThere it was, right before his eyes: Immediate transfer authorised for Sergeant David Gibbons to Terra's elite ComGuard. \"Holy shit!\" he muttered, the reality finally starting to sink in.\n\n\"The finest unit in the Terran Federation...\" the young woman marvelled. \"Congratulations, David!\"\n\nHe scratched the short stubble on his cheek self-consciously and muttered, \"I don't feel like I earned it. I bet it was that commendation from the Lion that swung it.\"\n\nShaking her head, Grace was earnest as she replied, \"Don't doubt yourself! I couldn't have asked for a finer Sergeant - I would've been lost without your guidance over the last few months. I was greener than Kintark plasma fire when I joined this unit, but you stopped me from fucking up too badly!\" \n\nHe winked at her and said, \"True, keeping you out of trouble was tougher than fighting off a dozen lizard marines singlehanded!\" He smiled at her affectionately then added, \"Take care, Ma'am. If I ever hear of a vacancy for a Lieutenant in the ComGuard I'll put in a good word for you.\"\n\n\"The guys with the biggest guns get the best girls?\" she asked him with a laugh, quoting the unit's informal motto. \"I'm not sure I'm the right fit, I'm a straight shooter!\"\n\nSergeant Gibbons laughed along with her and said, \"Yeah, those guys have quite the reputation.\"\n\nShe hesitated for a moment, then glanced to her right to make sure no one was nearby. When she saw the coast was clear she gave him a tight hug, not caring about the water dripping from his chest. \"I'm going to miss you, Dave. Thanks for everything.\"\n\nHe patted her slightly awkwardly on the shoulder and whispered, \"I'll miss you too, Grace.\"\n\nGazing out of the window behind the young woman, his mind raced as he watched the ships patrolling outside Port Medea. A transfer to Terra - he could hardly believe it.\n\n***\n\nJohn placed his hand on the DNA reader, and the green light swiped across the panel as it scanned his genetic code. The airlock door spiralled open and a gust of dry air swept into the corridor. After the pristine atmosphere aboard the Invictus, it felt dusty in his throat and briefly made him want to cough.\n\n\"After you, ladies,\" he said politely, ushering the girls through. \n\nThey left the airlock and walked out into the large docking bay, with the girls who had never visited the planet before looking around curiously. He saw Alyssa, Calara, Dana, and Jade grinning at him mischievously, while darting furtive glances at the new girls.\n\n*Go on, you know you want to,* Alyssa said, trying to stifle a laugh.\n\nHe smiled back then turned to look at Rachel, Irillith, Tashana, and Sakura before he said, \"Hey girls, what's that up there?!\"\n\nThe four of them immediately looked upwards, then shrieked in alarm, crouching to the ground as though desperately trying to cling on for dear life. With the artificial gravity of the docking bay, they were now looking upside down at the surface of the planet, giving them the disconcerting feeling that they were about to fall towards Ashana. \n\nSakura's eyes flared with a white light, before the glow faded away just as quickly when she realised they weren't about to fall to their deaths. Rachel groaned as she realised he was playing a trick on them, while Tashana laughed good-naturedly. Irillith gave him a level stare of disapproval, although a smile teased at her luscious lips.\n\n\"He pulled that shit on us as well,\" Dana said with a grin, slipping her arm around her girlfriend.\n\n\"Consider it a rite of passage,\" Alyssa chuckled as she put her arms around the twins.\n\nJohn held his hand out for Sakura, squeezing it gently as she stood straight once more. \"Sorry, honey, I didn't mean to scare you.\"\n\n\"Yes, you did,\" she replied with a chuckle. The Asian girl looked thoughtful and added, \"I wasn't scared though, just... ready.\"\n\n\"What do you mean?\" he asked, as he stroked her hand with his thumb.\n\nShe shook her head and replied hesitantly, \"I'm not sure. It was an odd feeling.\"\n\nThey were interrupted by the white robed Councillor gliding across the docking bay to greet them as he said in his eerie voice, \"The High Council has gathered to meet with you, JohnBlake. We are eager to answer any questions that you might have.\" He turned to gaze at Alyssa and his telepathic voice throbbed with gratitude as he exclaimed, *It is wonderful to see you again, Alyssa! I am so grateful to all of you for saving my people from the depredations of the Drakkar!*\n\nImmediately recognising the Grey's distinctive telepathic voice, Alyssa replied aloud, \"It's fantastic to see you too, Talari! Thanks for coming to meet us.\"\n\nCouncillor Talari responded with a short bow, then said, \"We have gathered the samples of Drakkar weaponry and armour that you requested, JohnBlake.\" He turned to face the covered grav-sled, before gesturing towards it with a hand.\n\nDana bounded over to the covered trolley and threw back the silver sheet that concealed the items beneath. With the cover thrown back, they saw a bulky black battlesuit, one of the sinister looking black rifles, an even more ferocious-looking rotary cannon, and one each of Vekrok's powered swords and maces.\n\n\"Awesome! I'll check them out when I get back,\" Dana said gratefully. She turned and pointed towards the Cargo Bay, adding, \"Can you guys leave the gear in there, please?\"\n\nThe moment she had finished speaking, the huge door into the Cargo Bay began to lift, Faye having overheard the entire conversation. The Ashanath ground crew accompanying Talari gave Dana a short bow, then started to move the grav-sled towards the ponderously rising door. \n\nJohn met Talari's black-eyed stare and asked, \"Shall we go and meet with the High Council?\"\n\n\"Of course, JohnBlake,\" Talari replied. \"If you would care to follow me, I shall lead you to the audience chamber now.\" He turned around and walked at a smooth pace towards the doors at the back of the hangar. There was an Ashanath-style gravity tunnel there and he rotated around in the anti-grav field, then disappeared out of sight, ascending up through the plateau at a slow pace. \n\nJohn led Sakura into the base of the tunnel and they followed Talari's lead, turning in the artificial gravity before using the metal rungs in the walls to propel themselves after their Ashanath guide. The rest of their group fanned out so they wouldn't bump into each other, rising up through the tunnel towards the surface of the enormous city.\n\n\"Are the High Council meeting us in the same place as last time?\" John asked, wondering if they had an air-car ride ahead of them to get to the lofty tower when they had first met Ularean.\n\n\"For your convenience, we are meeting at a much closer location this time,\" Talari explained, tilting his bulbous head down so that he could see John floating along the tunnel below him. \"This location is also near the medical facility where Ularean was being kept for observation after RachelBlake's miraculous healing efforts.\"\n\n\"How is he today?\" Rachel asked, her voice tinged with concern for her patient.\n\nTalari turned to look in her direction. \"Ularean was suffering from exhaustion, but he has fully recovered today. The Ashanath Collective owes you a considerable debt for saving him. He has served as a wise and capable Senior Councillor for seventeen years; his loss would have been felt keenly by the High Council.\"\n\n\"You're welcome, I was just glad I could help,\" Rachel replied, throwing John a warm look of gratitude.\n\nJohn glanced through the long glass windows that flanked the tube and saw they were rising through a well-lit cavern in the centre of the city's landmass. Strange phosphorescent lighting was provided by the lichens surrounding the limpid pool in its centre, the light making a forest of Etherite crystal trees shimmer before his eyes. He watched glowing winged insects buzzing over that underground lake, the creatures darting around erratically as they hunted for food.\n\n\"Take a look at that cavern girls,\" he said quietly, bringing the otherworldly view to their attention. \n\nThey made appropriately impressed gasps as they turned to look through the windows themselves, pointing out the abundance of exotic animal life in the huge cave. Rachel was particularly animated, taking pictures of the alien flora and fauna to catalogue and research. John got distracted watching the fascinating subterranean scene, so before he knew it, they were nearing the surface and the cavern disappeared from view. Talari stepped out of the tube at the top level and they all followed, gathering on the pavement until the whole group had arrived. The road was covered in light swirls of red dust, a thin layer of it giving the silver road a bronze cast. \n\n\"We are to meet in that building,\" Talari informed them, pointing a thin, reedy arm at the imposing silver edifice a few hundred metres down the street.\n\nThere were several Ashanath civilians walking along the pavement beside the boulevard and they stopped to stare at John and the girls. Alyssa could hear their thoughts and she gave them a flirtatious wink and a put more sway in her hips as the Ashanath gazed in wonder at the gloriously shapely women. John ignored the gaping spectators and followed Talari across to the large domed building, then through a big arched door. Strange runes and Ashanath glyphs surrounded the curved doorframe and he couldn't help wondering what they meant as he strolled inside.\n\nSilver-armoured Ashanath soldiers were on guard duty in the foyer area, but they took one look at the High Councillor accompanying the group and stayed at attention, making no attempt to halt their progress. John spotted a couple of them blinking as they watched the eclectic group pass through another set of doors, heading deeper into the building. \n\nHe'd been expecting a reception room or more corridors, so it came as a bit of a surprise when Talari guided them into a large, circular meeting room. The High Council were already there waiting for them, seated on eight of the nine chairs facing them in a semi-circle. Opposite were nine vacant, comfortable-looking chairs which had obviously been set out for John and the girls. The white robed Grey in the centre chair rose from his seat and bowed respectfully to them. \n\n\"I wish to offer a warm welcome to the saviours of Ashana,\" the Senior Councillor said, his impassive face not showing any hint of emotion. \"Our species was facing extinction and if you had not intervened, we would have lost everything.\"\n\n\"I'm just glad we were able to make it in time to help,\" John said, smiling at the diminutive alien. He looked at the Senior Councillor curiously, noting that he seemed much more robust after a full night's rest. \"Are you feeling better now, Ularean? Rachel was just asking after you a moment ago.\"\n\n\"Filled with a newfound zest for life,\" Ularean replied, his whispering voice and unexpressive face hardly conveying the vigour he proclaimed. \"I will never forget what you have done for me RachelBlake.\"\n\nRachel gave him a kind smile and said, \"It always feels wonderful to see a patient make a full recovery after surgery.\" Her full lips lifted into a grin as she added, \"Although this is the first time I've done a post psychic-surgery consultation!\"\n\n\"How are your people doing after the battle, Ularean?\" John asked sympathetically. \"We saw the state of the battlefield, it looked like the casualties your fleet sustained were horrendous.\"\n\n\"Our wounded number in the tens-of-thousands,\" the Senior Councillor replied. \"Almost every medical centre on the planet is providing succour to those injured in the battle.\"\n\nJohn studied Ularean for a moment, then said quietly, \"There was no need for the battle to have been that close. Your forces sustained terrible losses, but that could have been prevented if you'd trusted us enough to tell us about the Legacy beforehand. We would have planned accordingly and integrated that ship and its weapon into the defence of your planet - the entire battle would have played out very differently.\"\n\n\"I am extremely sorry, JohnBlake,\" Ularean murmured, sounding full of remorse. \"There was a culture of secrecy around the Legacy that stretched back thousands of years. At the time, the thought of revealing details about the vessel to you simply didn't occur to anyone in the High Council. I promise that we shall place our full trust in you from now on.\"\n\n\"That's good to hear,\" John said with a smile. \"We're your allies Ularean and we'll need to work together to avoid such disasters in the future.\" \n\nUlarean gave him a solemn nod. \"It has become clear that you are a steadfast ally, JohnBlake. Thank you.\"\n\n\"I'd like to help with your wounded if you'd like some assistance?\" Rachel volunteered, walking up to stand at John's side.\n\nHe gave her a worried look and said, \"Psychic healing takes up a lot of energy. I'm not sure you'll be able to heal more than a handful, so be careful not to exhaust yourself.\"\n\nThe brunette smiled at him and said, \"I'm still a doctor. I can try and help with conventional medicine too.\"\n\n\"We would certainly appreciate your assistance, RachelBlake. I am sure you must be curious to hear the extent of our knowledge on Progenitors , but we will gladly escort you to the nearest treatment centre after our discussion is complete,\" Ularean said, the voice module managing to convey his gratitude.",
        "\"You're right, I'd love to hear whatever you can reveal about Progenitors,\" she said, giving him a grateful nod.\n\nUlarean gestured towards the nine chairs. \"Please be seated and we shall begin. We have arranged for refreshments should any of you be thirsty.\"\n\nThere were cylindrical goblets perched on slender tables at the side of each chair and John took the central seat opposite Ularean, then gladly took a sip from the glass, the dusty air having made him feel quite parched. The girls sat down too, as did Ularean and Talari, a momentary silence descending on the group with no one sure where to begin.\n\n\"You may consider us an open book, JohnBlake,\" Ularean finally said, his words reinforced by nods from the rest of the High Council. \"Ask us whatever you wish, we will answer honestly and to the best of our ability.\"\n\n\"Thank you, Ularean,\" John said, smiling at him in gratitude. He leaned forward in anticipation and continued, \"If it's alright with you, let's start with the Legacy. You obviously rebuilt a wrecked Progenitor vessel, but where the hell did you find it?\"\n\n\"Our ancestors recovered the remains of the Progenitor vessel nearly nine-thousand years ago,\" Ularean explained. \"It had been destroyed in a cataclysmic battle.\"\n\nNone of the Ashanath High Council moved, but a holographic map suddenly appeared in the centre of the room. It was an empire map and clearly showed the existing boundaries of the various empires in this section of the galaxy. A red hexagon began to blink towards the top of the map, very close to the border between the Terran Federation and the Trankaran Republic.\n\n\"That's the Zeta-Pegasus system,\" Alyssa said thoughtfully. She sat bolt upright in her chair and gasped, \"Wait! You found the Legacy in the Niryean Rift?!\"\n\n\"That is correct. It was discovered on the outer reaches of the system,\" Ularean replied with a slight nod. \n\nDana glanced at Rachel in confusion, but her girlfriend gave her an equally blank look in return, so the redhead asked, \"Err, what's the Near-Ian Rift?\" \n\nJohn grinned at her and said, \"I can't believe you've never heard of the Niryean Rift! The place is legendary amongst spacers!\"\n\nShe pointed to herself and replied, \"Asteroid-orphan out on the Rim, remember? I've never even heard of it!\"\n\n\"Shipping's been going missing there for centuries, Sparks,\" John explained, giving her an apologetic smile. \"The system is densely packed with rich asteroid belts and it sometimes draws in miners bold or crazy enough to try mining there. Sometimes they come back rich men, sometimes they don't...\"\n\n\"With no wreckage ever found... It's as though their ships disappeared without a trace!\" Alyssa elaborated in a theatrically spooky voice. She abruptly went quiet, lost in her thoughts.\n\nJohn turned to look at her curiously and asked, \"What's on your mind, beautiful?\"\n\nAlyssa smiled at him, before she glancing at the Senior Councillor and asked politely, \"Ularean, can you zoom into the Zeta-Pegasus system and mark where you discovered the Legacy, please.\"\n\nUlarean didn't reply, but without making so much as a twitch, the map zoomed in to the Zeta-Pegasus system. The star at its centre was a blue giant, casting its cool light over the multitude of asteroid belts in the system. The patterns of the dense asteroid belts were strange, forming looping spirals quite unlike any that John had seen before. On the extreme outer edge of the system, a red hexagonal mark appeared, highlighting where the Legacy had been found.\n\n\"Holy shit...\" Alyssa cursed under her breath. Leaping from her chair - an impressive feat in four inch heels - she waved excitedly at the map, spinning her slender hand in a counter-clockwise motion. \"Can you wind this back, Ularean?\"\n\nHe tilted his head slightly to one side, looking at her intently as he said, \"I must apologise, Alyssa, I'm not entirely certain what you mean. Could you elaborate, please?\"\n\n\"No problem, I wasn't being clear,\" she said, giving him an apologetic smile. \"If you can, I'd like you to project how this system would look ten thousand years ago. Rotate the asteroid belts back counter-clockwise, taking into account the drift that would occur from the different lengths in orbital paths from the star.\"\n\n\"It might take a minute or two to process the calculations and model our predictions...\" he replied, issuing the appropriate telepathic orders to begin work immediately.\n\n\"That's fine,\" she said with a quick nod, before walking closer to the map to take a closer look.\n\nJohn watched her in bemusement, wondering exactly what she'd seen that had got her so excited. In just over a minute the Ashanath's calculations were complete and the image in the map began to revolve backwards. It started off slowly, but he gradually increased the speed, sending the asteroid belts spinning around the sun like hands on a clock face. As Ularean wound back the centuries, the asteroid belts began to straighten out, forming long neat lines rather than the swirls that had been there before. \n\n\"Stop!\" Alyssa suddenly blurted out. \"That's a bit too much, wind it forward now for four seconds at the same pace.\"\n\nUlarean did as he was bid, moving the asteroid belts forward now, clockwise around the blue star. \n\n\"Freeze!\" the blonde exclaimed, before turning around to beam at John in delight. \"I knew it!\"\n\nJohn slowly rose to his feet and approached the map, gazing at the Zeta-Pegasus system. All the asteroid belts were laid out in rigid lines now, all pointing directly towards a single point of focus to the lower right of the map. The streams of rock swept away from seven distinct points around the map, all at different orbital paths around the star.\n\n\"They were all planets,\" he marvelled, glancing at Alyssa in amazement.\n\nDana nodded and blurted out, \"Yeah! Until something blasted the shit out of them and wasted the entire fucking system!\"\n\n\"How remarkable,\" Ularean murmured, gazing at the map in awe. Several members of the High Council rose from their seats and were now staring intently at the image.\n\n\"What kind of weapon could do that?!\" Calara whispered, giving John a look of consternation.\n\nShaking her head, Alyssa replied in a sombre voice, \"I don't think a weapon did this. Or at least not a conventional one.\" She glanced at Dana, nodding as she added, \"Yeah, that's what I was thinking too.\"\n\n\"Can you share with the rest of the class?\" Rachel asked, nudging Dana with a playful elbow.\n\n\"It's just a guess, but it all fits,\" the redhead said, tapping her chin thoughtfully. She shared a look with Alyssa before continuing, \"Mael'nerak must have sabotaged his wormhole generator, or at least done something to disrupt the fabric of space-time. The force from the explosion destroyed the planets in Zeta-Pegasus, leaving behind asteroid belts in their place.\"\n\n\"The remains of his ship must have been carried out here by the blastwave,\" Alyssa explained, tracing the path from the centre of the explosion to the point where the Ashanath had discovered the Legacy. \"It would explain why that area of space is so unstable, with miners getting sucked into randomly spawning wormholes and then vanishing.\"\n\nTashana looked strangely ambivalent as she murmured, \"At least we know what happened to Mael'nerak now. He sacrificed himself to defeat the other Progenitor and must have destroyed the rest of their fleets in the process. That's why he was never able to return to Valada.\"\n\n\"It looks that way,\" John agreed, nodding slowly as he considered Alyssa's hypothesis.\n\n\"The system was the site of a vast starship graveyard,\" Ularean clarified, his eerie voice sending shivers up John's spine. \"I have read the records and the Legacy was the only partly salvageable vessel, every other ship was smashed beyond any hope of recovery. Our ancestors gathered what they could of the derelict Progenitor vessel and towed it back to Ashana.\"\n\n\"I wonder why the Maliri never found it?\" John pondered curiously, watching as the High Councillors returned to their seats.\n\n\"From the war maps we saw in Valada's video archive, Zeta-Pegasus was deep amongst the systems that the other Progenitor had conquered,\" Alyssa said thoughtfully. \"Maybe it was too deep in enemy territory?\"\n\nShaking his head, John replied, \"The other Progenitor's invasion had been halted, presumably by his death. If Mael'nerak destroyed the bulk of his opponent's fleet as well, there would've been nothing to stop the Maliri from recovering the wreck.\"\n\nTashana glanced his way and said confidently, \"The Maliri only had a handful of ships left after the war as Mael'nerak took his fleets of Thralls with him. In the recording, Valada said that she recalled all her people and then rebuilt their fleets. When they sealed themselves off from the Ashanath and the Trankarans, what used to be Mael'nerak's territory contracted to the space where the Regency exists today.\"\n\n\"Why didn't the Trankarans find the Legacy?\" John wondered, looking at the map. \"Zeta-Pegasus looks like it's right near the border with the Republic. This was thousands of years before the Terran Federation existed, so the Trankarans should have stumbled across it long before the Ashanath got there.\"\n\nUlarean had been waiting patiently while they discussed this amongst themselves. When John posed that question, the Senior Councillor spoke up once again in his whispering voice, \"The wreck lay dormant for over a thousand years, before my ancestors extended the borders of the Ashanath Collective sufficiently far to encompass Zeta-Pegasus. The Trankarans possess a quite different mindset to Terrans. You are both a mostly benign people, but the Trankarans are much more conservative and reserved in their outlook and not inclined towards aggressive expansionism.\"\n\nJohn paused a moment and meeting Ularean's black-eyed gaze, he asked quietly, \"Why did the Ashanath Collective give away so much territory, Ularean? When humanity first developed space flight, the Ashanath had a huge tech advantage and you could have stopped us in our tracks. I've always wanted to know the reason.\"\n\n\"It was hoped that humanity would mature as the centuries passed and grow out of their need to assert their territorial dominance. As it transpired, that has not come to pass, but we have been content to cede worlds and remain at peace,\" Ularean explained in his eerie voice.\n\n\"Maintaining the peace is an admirable goal, but you've given away three-quarters of your territory!\" John exclaimed, shaking his head in confusion. \n\nUlarean paused for a moment, holding a silent telepathic conversation with the rest of the Council, before saying, \"We had not colonised those worlds, so to lose them was no great loss. We are kindred peoples, JohnBlake, both created by the same Progenitor Master. It was far more important to maintain a united front with our energetic new neighbours, standing together against more hostile and outwardly malevolent species. The Terran Federation provides a strong buttress against the Kirrix and the Drakkar, who have become a much greater threat in recent years. Without the Federation's continued support, the Ashanath Collective would have eventually fallen.\"\n\n\"So you already knew your people were created by Mael'nerak,\" John noted, giving the High Councillors a wry smile. \"We only recently found out that he created Terrans as an experiment.\"\n\n\"Please accept our apologies for not being forthcoming about our shared lineage when we first met with you,\" Ularean explained. \"The idea of a Progenitor here on Ashana was terrifying. We had no wish to become slaves once again.\"\n\n\"We had to find out about the origins of humanity the hard way,\" John explained, his tone grim. \"Mael'nerak built an AI called Nexus and established it as the caretaker over his experiments on Terra. He set Nexus up with a Quantum Annihilator buried in the moon, just in case he wanted to bring it all to an abrupt end. It seems that Mael'nerak was slain before he finished his experiments.\"\n\n\"Word reached us of your confrontation with the Rogue AI,\" Ularean confirmed with a brief nod. \"When our distant ancestors spread out from Ashana to explore nearby worlds, they immediately recognised humanity as a distantly related species to our own. Please believe me that we had no idea such a threat was looming over Terra. Had my people known, they would have taken steps to eliminate that danger before humanity first travelled amongst the stars.\"\n\nLeaning forward in his chair, John asked, \"Do you know the real reason behind Mael'nerak's experimentation with Terrans?\" Or why he created the Ashanath?\"\n\n\"We do not know the background to your species, but the purpose behind our own creation is known to us,\" Ularean answered quietly. \"Mael'nerak was active amongst the first several generations of the Ashanath, spending centuries living on our homeworld and training my people.\"\n\n\"Training them?\" John asked intently. \"To do what?\"\n\n\"He taught them how to harness their psychic potential,\" Ularean murmured, while the rest of the High Council stared at John with their huge black eyes.\n\n\"Do you have any idea why Mael'nerak would create an entire species of psychic creatures?\" John asked, quite fascinated at the thought.\n\n\"Mael'nerak was quite open with what he wished to accomplish,\" the Senior Councillor explained. \"The Ashanath were created as an experiment in collective psychic consciousness.\"\n\n\"Your telepathic Command Web!\" Alyssa exclaimed, eyes widening in surprise. \n\nUlarean turned to her and bowed as he replied, \"That is correct, Alyssa. Your presence there made quite the impact, thank you for providing leadership to our fleet while the High Council was incapacitated.\"\n\nShe grinned at him and said, \"You can thank Calara for that, I was just passing on her orders.\"\n\nJohn stayed silent while Ularean inclined his head in gratitude to the Latina, frowning as he mulled over the Senior Councillor's revelations. \n\nCorrectly guessing the reason for John's pensive expression, Ularean said, \"As to Mael'nerak's true motives, I am afraid he never shared them with my people. He taught the Ashanath how to form thought-clusters and create Astral sub-planes, but never explained why he did so.\"\n\n\"What about the monoliths you showed us?\" Jade asked, her face alight with curiosity. \"Is there anything more you can tell us about those now?\"\n\nCouncillor Talari rose from his chair and replied, \"Please accept my most sincere apologies. I am afraid I deceived you regarding the origins of the stone monoliths. When you arrived on Ashana, it was apparent that JohnBlake had not yet subjugated the Maliri, so I-\"\n\n\"I still haven't and I don't intend to either,\" John said firmly, glancing towards Irillith and Tashana. \"I've allied with the Maliri Matriarchs to stop them murdering each other, but I haven't 'subjugated' them.\"\n\nTalari bowed to him and said quickly, \"I am sorry for my poor turn of phrase. You have already proven on numerous occasions that your motivations are benign; I meant no offense.\"\n\n\"That's okay, sorry to interrupt you,\" John replied, encouraging him to continue with a smile.\n\nThe High Councillor paused for a moment to collect his thoughts then continued his explanation, \"The stone monoliths were not taken from the destroyed homeworlds of conquered species, but from the Gaia-classification world that your people call New Eden. The temple where they were discovered was a Thrall recruiting facility and the monoliths described the history of Mael'nerak's various conquests. The surrounding Maliri settlements had been badly damaged by an orbital bombardment, which left the temple partially demolished.\"\n\nTashana's violet eyes sparkled with excitement as she exclaimed, \"That sounds just like the Thrall facility I found in the Epsilon-Aquarii system!\"\n\n\"I don't remember ever hearing about ancient alien ruins on New Eden,\" Rachel murmured, her brow wrinkling in confusion as she glanced at Sakura.\n\nThe Asian girl shook her head. \"I don't recall anyone mentioning them to me either. If there was anything like that on the planet, it was long-gone by the time my parents settled there.\"\n\nA second later, Rachel's eyes widened as she suddenly blurted out, \"The Ashanath must have destroyed them!\"\n\n\"That depends on your perspective, but is essentially correct,\" Talari said in his whispery voice. \"When it became clear that humanity was on the cusp of interstellar flight, the ruins on New Eden were carefully excavated then brought back to Ashana seven hundred years ago. We removed all trace of Maliri settlements on the Gaia worlds that were eventually ceded to the Terran Federation.\"\n\n\"Why would you do that?\" Tashana asked, frowning in disapproval at the thought of tearing up an archaeological site in such a fashion. \n\nTalari turned to look pointedly at the Maliri twins and replied, \"If we had left clues as to the real nature of the Maliri, it would have not ended well for humanity.\"\n\nJohn let out a sigh. \"Yeah, I see your point.\"\n\nTashana's lovely blue face became a mask of confusion as she admitted, \"I'm afraid I don't understand. Would you mind explaining, please?\"\n\nHe smiled at Tashana and Irillith as he replied, \"If you hadn't realised already, Maliri women are stunningly beautiful.\"\n\n\"The men are very handsome too!\" Alyssa interjected with a playful grin. \"Ceraden will have women throwing themselves at him if he ever decides to indulge his curiosity about Terran girls!\"\n\n\"I'll have to take your word for that,\" John said with a chuckle. His smile faded as he continued, \"When humanity does eventually realise that there's a species of gorgeous blue space elves on their doorstep, things will probably get ugly very quickly. If they find out that the women outnumber the men twenty-to-one, there'll be a flood of men rushing the border.\"\n\nIrillith shook her head and replied, \"What about the 'Warning'? Surely Terrans wouldn't be so foolish as to risk certain death by invading Maliri Space!\"\n\n\"Slavers, pirates, the desperate, they'd all still take the risk if the reward was high enough for capturing Maliri women. The Maliri would respond by annihilating any ship that trespassed in their territory, which would quickly ratchet up the tensions between the two empires,\" John explained quietly.\n\n\"Maybe it would be better if we didn't attend the award ceremony after all,\" Tashana suggested, looking alarmed.\n\n\"It might be worth thinking twice about it,\" John was forced to reluctantly agree.\n\nJade had been listening to the conversation with a pensive expression on her face. She finally looked at Talari and asked mournfully, \"Why did the Ashanath give Lenarra to the Terran Federation if you knew humanity would react that way to exotic female aliens? By handing over my planet, you doomed the Nymphs to extinction!\"\n\n\"That decision was made several centuries ago, long before any of us were born,\" Ularean replied, although his voice sounded remorseful despite the neutral tones of his voice modulator. \"The High Council at the time were intent on appeasing Terran demands and averting any chance of war. I am afraid they did not stop to consider the ramifications for your species.\"\n\nJade nodded her understanding, her emerald eyes heavy with grief for her lost Lenarran sisters. Calara was sitting next to her and she reached out to stroke the Nymph's arm sympathetically. Alyssa simply got up and walked over to kneel at Jade's side, then pulled her into a comforting hug.\n\nJohn gave Jade a concerned look, then turned to ask Ularean, \"Can you tell us any more about Nymphs? We know they're another of Mael'nerak's creations, but that's all we've been able to discover so far.\"\n\n\"I wish that I could give you the answers you seek, but I am afraid I do not know,\" the Senior Councillor replied sorrowfully.\n\nThe room went quiet, the silence broken by Alyssa whispering comforting words to Jade. Eventually the Nymph sat back with a sad look on her face, but she gave John a smile and gestured for him to continue. He nodded, then turned back to look at the High Council."
    ],
    "authorname": "Tefler",
    "tags": [
        "teenager",
        "cum inflation",
        "deep throat",
        "swallow",
        "psychic",
        "group sex",
        "bisexual",
        "alien11111"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-80"
}