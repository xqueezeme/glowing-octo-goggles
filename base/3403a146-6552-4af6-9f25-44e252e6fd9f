{
    "title": "Sizzling Embrace Ch. 05",
    "pages": [
        "Comments, critiques and tips are welcome. \n\nTyler Tyron Wesley vs. Tanesha Ashton \n\nDedicated to MPA. (#you'resimplythebest)\n\nParting!\n\n***\n\nIt was a day neither Ty nor Tanesha would ever forget. For Tanesha, Skull was a totally different Skull. A Skull she'd never had a glimpse of. He was like a robot that had been programmed to kill. And kill, he did. Ty on the other hand had never felt so numb during an operation. Initially he thought he had everything under control. Then he'd realized that Ghost had more men than he'd counted. Apparently he'd dispatched men to the Island the day before. As he put it, his own special army. Ty was totally outnumbered. He therefore had to think fast, act fast, use all the skills he had...otherwise neither he nor Tanesha were getting off that Island alive. It was kill or be killed.\n\nImmediately Ghost, not too subtly, made Ty aware that he was onto him, Ty was ready to act. He knew the kind of people ZONKAI was. They killed before they asked questions. But it was even worse if they decided to torture someone for information. They were ruthlessly sadistic. If his life was the only one at stake, he might have drawn it out...gathered as much information as he could. But Tanesha's life was also on the line. He couldn't take chances. So when Ghost smugly told Skull what he planned to do, he knew he had to act fast. \n\n\"You see, I know you feds have been looking for me for a long time.\" Ghost drawled arrogantly. \"Can you imagine looking for a ghost?\" He turned to ask his men, who burst into laughter. \"Who does that? This is the closest you've ever come though, and I'd very much love to know how you managed that. I'm grateful actually.\" He gave a salute. \"Because this has made me realize that it's time I cleaned house. You wouldn't have been able to get this far if you hadn't gotten help from some of my people. So you, my friend, are going to help me identify all the traitors in my kingdom.\" He grinned. \"And don't try anything stupid because the Island is crawling with my men. I didn't want to take chances so I dispatched them to the Island yesterday. So you better start giving me names before I start cutting your little bitch.\"\n\nThat was all it took for Ty to snap. Cut Tanesha? Hell no! Ty didn't blink. He didn't even try to deny. He simply went into action...his move so fluid and swift Ghost and his men were left awed and shocked...well, those who drew breath long enough to see Ty in action that is. Almost as though it was in slow motion, Ty ducked under the table, drawing out his guns whilst smartly shielding himself with the table. And before anyone could say jack, all six men standing in the living room were on the floor, dead. \n\n\"What...\" But before Ghost could complete whatever he'd been about to say, Ty's knife was piercing through the back of his hand and right through the table...pinning his hand to the table. \"Fuck!\" He screamed in agony. And as if that wasn't enough, Ty swiftly brought out a zip-tie handcuff and cuffed Ghost's thumbs together. He wasn't going anywhere...he was pinned to the table.\n\nThen he finally spoke. \"Stay.\"\n\n\"Fuck you, I'm not a dog.\" Ghost screamed, but Ty didn't wait around because he knew the idiot's screams would bring the other guys to the living room. \n\nThanks to the silencers attached to his guns, killing the six criminals had been quiet. If only he had a duct tape, Ty thought even as he saw Shark's raised gun out of the corner of his eye. He shot the idiot. Next came Rambo, the other criminal and Jess. \n\n\"Drop your gun you mother...\" But Rambo was dead before he could complete his order.\n\nThe other guy started firing at Ty, who expertly rolled away to crouch behind the couch, effectively dodging the bullets. When Ty got an opening, he pointed right at the head of the fool and shot him between his eyes. Ty stood up slowly, his gun pointed at Jess who was unarmed. He simply stared at Ty like a deer caught in the headlights of a car. Ty tilted his head to the side as he looked at Jess, as if to ask whether they were going to have a problem. Jess slowly shook his head, his khaki pants wet with urine. Ty gave a slight nod and then pressed the trigger. Jess fell, unconscious...which had been Ty's aim. Let no one say Ty Wesley was a monster. Even as he wondered where Donk and Mickey were, he heard the unmistakable sound of a chopper. Ty didn't even waste time feeling relief. The Arrowheads were in. He'd know the sound of a military chopper anywhere. Then Ty heard a voice that made his heart almost stop beating inside his chest.\n\n\"Skull?\" Tanesha's shaky voice made him turn around swiftly.\n\nWhat Ty saw almost brought him to his knees. Even the gunshots coming from outside suddenly seemed very far away. Donk had a gun to the back of Tanesha's head and Mickey had a grenade in his hand with the pin out. If it fell from his hand, Tanesha would blast into pieces. Ty couldn't shoot him.\n\n\"Mickey...\" Ty didn't recognize his own voice. \"Please.\" Ty's voice shook. He'd never been more scared in his life.\n\n\"Release my uncle, Skull.\" Mickey said quietly.\n\n\"Mickey, you don't want to do this.\" Ty breathed. \"I'm not going to kill your uncle. If that was my intention, he would be dead already, trust me. Please let Tanesha go.\"\n\n\"I can't do that.\" Mickey responded. \"We both know he's good as dead if you take him alive. You see, my uncle saved my life once and I think it's only natural that I save his don't you think?\"\n\n\"He's a very bad man Mickey...\"\n\n\"And you're not?\" Mickey growled. \"Look around you Skull. Is this the work of a good man? You betrayed someone who trusted you and you expect me to see you as a good person? In my books, that's the worst thing any human being can do.\"\n\n\"You're betraying Tanesha now, Mickey. She trusted you.\" Ty pointed out, quickly trying to think of how to save the situation.\n\n\"She knows I'm doing my job. I had my job before I even got to know her. The job therefore comes first.\" Mickey shrugged.\n\n\"You're better than this, Mickey.\" Ty growled. \"You know...\"\n\n\"What makes you think I'm better?\" Mickey's voice raised. \"I killed my father.\" He bellowed. \"Yes, I snapped one day when he beat my mother till she fell unconscious but the fact still remains that I'm a murderer. When my mother regained consciousness, she wanted to kill me. She called the cops to take me away. Then she killed herself. She couldn't live without the love of her life.\" He gave a humorless laugh. \"I guess you can rightly say I killed my parents. My uncle busted me out and gave me a new life. I owe him my life. So now we're going to do this my way. Sorry Tanesha.\"\n\n\"Mickey...\" Tanesha turned her eyes on Mickey then. She couldn't believe she'd allowed herself to be tricked by Mickey to open the door. But she saw him as a friend and therefore had no reason to believe he would actually lie to her that Skull sent him to bring her. \"Please.\"\n\nBut Mickey didn't even look at her. \"You're going to release my uncle and then we're all going to leave here. How you'll get us past your people out there is up to you Skull.\"\n\nTy knew when he was cornered. He went to Ghost and pulled out the knife, almost smirking at his cry of pain. It sounded as if a war was going on outside. Ty almost felt sorry for Ghost's so called army. He knew his colleagues were having a field day. He released the cuffs and pulled Ghost to his feet. But just as they were about to move, three criminals burst into the living room and started firing. And even as he heard Tanesha's screams, Ty started firing at the criminals. From the corner of his eye he saw Tanesha running away from Mickey. There was no time to go after her as more criminals burst into the room. By the time the Arrowheads entered the room to lend a hand, Ghost, Mickey, Donk and Tanesha were nowhere to be found. \n\n\"I'm going after the girl and Ghost.\" Ty screamed to his team as he sprinted through the backdoor. He was going ballistic.\n\n***\n\nTanesha screamed and kicked when she felt Mickey grab her hand. \"Let go of me you son of a bitch.\"\n\n\"Stop it, Tanesha.\" Mickey growled. \"I'm not going to hurt you.\"\n\nTanesha saw Ghost coming towards them with a gun and froze. She turned to look at Mickey and realized he no longer had the grenade. He rather had a gun. What was that Skull had said about struggling with a man holding a gun again? She turned again in Ghost's direction and realized that he was almost beside them.\n\n\"Fuck this.\" Tanesha muttered and yanked her hand out of Mickey's grip. Then she took off.\n\n\"No, don't.\" Tanesha heard Mickey scream and then heard Ghost curse. She took a quick peek behind her and saw Ghost bending down to pick his gun off the floor. Mickey had obviously slapped the gun out of his uncle's hand.\n\n\"Are you crazy?\" Tanesha heard Ghost's angry bellow. \"She has to die.\"\n\n\"No she doesn't.\" Mickey countered.\n\nImmediately Tanesha faced forward again, she smashed into Donk and fell down. Then she watched as Donk pointed his gun at her head. His intent was clear...he was going to shoot her.\n\n\"Shoot the worm, Donkey.\" Ghost commanded, finally confirming the real meaning behind Donk's name. Too bad she was about to be killed by the donkey-faced man, Tanesha thought as she watched Donk release the safety catch on his gun. \n\nBut before Donk could pull the trigger, a bullet hit him in the chest and he fell down beside her, dead. Tanesha screamed and turned her around just in time to see Mickey lowering his gun. Both Tanesha and Ghost stared at Mickey in shock. Tanesha's shock was due to the fact that Mickey had actually killed for her. And Ghost's was for the fact that his nephew had actually killed one of his men just to save the bitch. He didn't need to be a genius to know that the boy was head over heels in love.\n\n\"Boss, let's go.\" Tanesha saw a man covered in tattoos scream at Ghost but Ghost couldn't seem to tear his eyes away from Mickey.\n\n\"Grab the girl, Cronus.\" Ghost said without looking at his pilot. \"We'll use her as hostage. Mickey?\"\n\n\"Yes Uncle.\" Mickey responded quietly, looking slightly dazed. He looked like he couldn't believe he'd actually killed Donk.\n\n\"I must say you really made me proud today with that grenade move.\" Ghost said hoarsely. \"Today, you also proved that you're your mother's son. My sister has always acted blindly...crazily, when it comes to love. As you know, she gave up her only child for the love of a stupid maniac who beat her senseless. That is the weakness I've always hated about my dear twin sister. Today you've proved that you have the same weakness, Mickey. That is a dangerous trait to have in our line of work.\"\n\n\"Uncle...\"\n\n\"Say hello to my sister when you see her.\" With that, Ghost swiftly lifted his gun to Mickey's temple and pulled the trigger.\n\n\"No!\" Tanesha screamed just as Ty burst into the clearing.\n\nTy's eyes went to Mickey as he fell, his eyes wide open in death. Ghost raised his gun to take a shot at Ty but Ty swiftly shot his gun out of his hand, making the head ZONKAI scream in pain. Ty didn't see Ghost's pilot who'd quickly began to raise his own gun with an obvious intention of finishing what his wicked boss hadn't been able to do. \n\nTanesha saw the man raise his gun and acted without thought. As if in a trance, she reached down to pull Donk's gun out of his hand and took aim...and then she pulled the trigger. Everything happened so fast it was almost a blur. Ty heard a man's cry and turned in time to see a man who was obviously one of Ghost's goons, fall down dead. Ty realized the man not only had a gun in his hand, he was also turned in his direction. He didn't need to be Einstein to know that he'd nearly gotten shot. Then he saw Tanesha, holding a still smoking gun. She'd saved his life.\n\nTy saw Ghost turn around to ran and shot his leg without even looking. Then he started towards Tanesha, who had just realized what she'd done. When he got to her he gently took the gun out of her hand, clicked the safety catch in place and threw it down. Then he took her into his arms as she broke down.\n\n\"Oh God, I killed him.\" Tanesha sobbed, trembling badly. \"I killed a human being. Oh God, oh God, oh God... I'm so sorry. He...he was going to shoot you. I couldn't allow that.\" She sobbed.\n\n\"Shhh... It's okay baby.\" Ty soothed a bawling Tanesha. \"It's okay.\"\n\nFrom the corner of her eyes, she saw Ghost limping away. \"He's ge...getting away.\" She said through her sobs.\n\n\"He won't get very far.\" Ty assured her.\n\n\"He killed Mickey because he saved my life.\" Tanesha still couldn't wrap her head around that part. \"His own uncle killed him, Skull. He was his family.\" She sobbed.\n\nTy rocked her as he would a child. He knew what she was going through. It wasn't easy being around so much violence and death. And as if that wasn't enough, she'd had to kill. That was not an easy thing for anyone to go through. She was going to need a lot of therapy to be able to put that past her.\n\n\"Listen baby.\" Ty said softly. \"I need to go after Ghost. Wait here till you're rescued. I've seen some military guys around. They will take you home okay?\"\n\n\"Please don't leave me.\" Tanesha's eyes widened in alarm. \"I'll tell them you saved me. Surely they will understand and pardon you. Please Skull.\"\n\n\"I can't do that Tanesha. I can't be here when they come.\" The disadvantages of undercover work, Ty thought grimly. It had to be acted out till the very end. \"I have to go.\"\n\n\"Then I'm coming with you.\" Tanesha bawled. The thought of not seeing Ty even for a moment caused such pain within her chest. It almost felt as if someone was actually ripping her heart out of her chest.\n\n\"You can't baby.\" Ty's heart was breaking. \"Just go with...\"\n\n\"No.\" She sobbed. \"I love you, Skull.\" She finally let it out. \"I'm in love with you. I don't care where you're going. I just want to be with you.\"\n\nTy was speechless. He stared at Tanesha, feeling his chest tighten. Tanesha loved him. The feeling was surreal. Fuck. \"Tan, I will look for you, I promise.\" Ty's breath snagged. The lump inside his throat felt so huge it was difficult to talk. \"Rem...\" He cleared his throat and tried again. \"Remember when I said if anything happened to you I'd die?\" He asked and waited till Tanesha nodded. \"I meant that with all my heart. Now, if you don't want me to die, wait here for the soldiers.\"\n\n\"No. I'm coming with you.\" Tanesha looked determined and Ty was getting desperate.\n\n\"Baby, please do that for me if you really love me as you say.\" Ty knew it was mean to use Tanesha's declaration of love against her but he needed her safe.\n\n\"Oh my God, don't do this Skull.\" Tanesha couldn't believe what Skull was asking of her.\n\n\"I will find you.\"\n\n\"Promise?\" Tanesha's cheeks were wet with tears. \n\n\"I promise.\" Ty said, kissing Tanesha lightly and quickly on the lips.\n\n\"Oh God...Skull...I don't know what I'll do if I never see you again.\" She whispered with such a heart-wrenchingly sad look on her face Skull crushed her to him with a growl. \"Be safe. Please.\"\n\n\"You will see me again. I have to go now. Don't move.\" And with a final kiss to her forehead, Ty was sprinting off in the direction of where Ghost had limped off to. He heard Tanesha's desperate sobs but he didn't turn around. He knew he wouldn't be able to leave her if he did.\n\nTy spotted Ghost hiding behind a boulder and almost laughed. How the mighty are fallen, he thought amused despite his heavy heart. He caught a quick signal from a grinning Jackson, one of his crazy colleagues and ducked just as a grenade flew over his head into the mist of a group of Ghost's men. The Arrowheads were in their element, Ty thought as he shook his head in amusement.\n\n***\n\n\"Ma'am, you have to come with us.\" Tanesha heard a man in a military uniform say beside her just as a super loud blast went off where Skull had disappeared mere seconds earlier. \n\nTanesha screamed. \"Oh my God. Please save him. That explosion...oh please he just went that way...\" She charged towards the blast but one of the soldiers grabbed her hand. \"Please help him.\" Tanesha screamed till her throat was raw. \n\n\"We have to go Miss.\" One of the soldiers picked Tanesha up as if she weighed nothing, ignoring her screams.\n\nTanesha cried until her eyes felt raw and she had nothing left. And when she heard gunshots and screams as she was being handed over to another soldier in a helicopter, she broke down again. What if Skull was amongst the men who were screaming? She had to tell them that he was innocent. \n\n\"Plea...please you ha...have to list...listen to me.\" Tanesha grabbed one of the soldiers. \"Ghost is the one you wa...want. Skull is innocent. Please you ha...have to listen to me. Please...\" Tanesha was getting hysterical. She didn't see the nod that one of the soldiers gave the one she was talking to. Neither did she see the hand that moved towards the back of her neck. One moment she was hysterically trying to explain herself, the next, she was dead to the world. \n\nTy watched the military chopper with Tanesha lift into the sky and screamed into his hands. He was missing her already. Though everything turned out just fine, his heart was still pounding at how close he'd come to losing her. Immediately the sound of the chopper disappeared, Ty went directly to where Ghost sat and gave him a hard punch on the nose. But even the sound of breaking bones and the criminal's agonized scream didn't erase the pain and emptiness within his heart. Fuck!\n\n***\n\n'Even if you were a million miles away\n\nI can still feel you in my bed\n\nNear me, touch me, feel me\n\nAnd even at the bottom of the sea\n\nI could still hear inside my head\n\nTelling me, touch me, feel me\n\nAnd all the time, you were telling me lies\n\nSo tonight, I'm gonna find a way to make it without you\n\nTonight, I'm gonna find a way to make it without you\n\nI'm gonna hold on to the times that we had\n\nTonight, I'm gonna find a way to make it without you'\n\nTanesha wept bitterly into her pillow as Alicia Keys' beautiful voice belted out the lyrics of 'Try Sleeping With A Broken Heart.' \n\n\"Oh God...\" She sobbed as an image of Skull's face filled her mind. Though she hadn't known him for long, she felt so lost without him.\n\nI'll find you, he'd said. And that was a months ago. A whole month of not seeing or hearing from Skull. Tanesha thought the pain in her heart would lessen with time but on the contrary, it kept getting worse. She still couldn't stop crying. The accuracy of the words of the song brought so much sadness into her heart. She could feel Skull as though she'd seen him just that morning. But she also recalled that blast, all the gunshots and screams of men. Tanesha didn't know whether Skull was alive or dead. He'd said he was going to find her...which was very easy to do knowing who she was. But Skull had still not come after four weeks. The only explanation she could deduce from his no show act was that he was dead. Why else wouldn't Skull come to her as promised?  \n\nBut much as Tanesha was devastated by the possibility of Skull's death, she couldn't help but feel like she'd been lied to by Skull. He'd promised. He'd promised to come to her, promised that if she left, he wouldn't die, promised to find her. And he'd broken his promises and died. She didn't even have anything of his to remember him by except the memories she had of their time together. Tanesha had actually started using strawberry flavoured shampoo because she knew how Skull had loved that fragrance on her. The emotions she felt towards Skull never ceased to amaze her due to their complex nature. She would feel miserable one moment, and then be very angry the next. Therapy hadn't helped at all. And the dreams! Sometimes she woke up screaming, other times, crying. On one occasion she'd woken up to an intense orgasm after an erotic dream about Skull. That had left her totally shattered because she'd ended up being so horny and angry and strangely, ashamed. ",
        "After her initial queries about a man with a skull tattooed on his forehead, Tanesha stopped asking because it had occurred to her that if for whatever miraculous intervention, Skull had survived that bloodbath, telling people about who he was could actually put him into trouble. So she'd stopped asking. She'd become a shell. After a month of intense therapy, she'd finally gone back to school two days earlier. Everyone knew there was not going to be a problem at all catching up after two months of absence as Tanesha was a really bright student. But the Tanesha who joined her class was a totally different one. She didn't talk much. Even her crazy friend, Caroline, couldn't get Tanesha to be lively. Lance, the boy she'd started dating before her kidnap had stayed by her side, been supportive and generally been a good friend even after Tanesha had explained to him that she wasn't in the right frame of mind for a relationship. Lance didn't care. He still stayed by her. Not only was he good looking, he was also a real gentleman and a good person...but he just wasn't Skull.\n\n\"Oh God...\" Tanesha screamed into a pillow and then almost jumped out of her skin when she heard a knock on her door. She couldn't bring herself to tell whoever it was to come in. But after a while the door opened to reveal the worried face of her father. \"Daddy...\" She whispered as she quickly wiped her face.\n\n\"Oh angel.\" Her father breathed as he took in her wet face and puffy eyes. The former Prime Minister of Jamaica sat on his daughter's bed and gathered her into his arms. He just held her, allowing her to cry her eyes out. \"I'm so sorry, baby girl. So, so sorry.\"\n\nThe impact on her family was much worse than Tanesha thought possible. What worried Tanesha even more was how withdrawn her father had become after what had happened to her. He couldn't forgive himself no matter what Tanesha told him. He couldn't believe his only daughter had gone through all that because of him. Tanesha tried as much as possible to look cheerful whenever her father was around but sometimes he caught her on a bad day...as was happening at that moment. Her family just wasn't the same again. For one, they walked on egg shells around her, treated as if she were something fragile. It was so upsetting to see her once happy family so broken. \n\n\"I'm okay Daddy.\" She said through her tears. \"Really.\"\n\n\"No you're not\" Paul Ashton countered. \"Don't think for one moment you're fooling me with that artificial cheerful act you've been putting up. Listen to me Tanny. I know it's difficult but please try and put it behind you.\" Paul told his daughter. \"If you don't become strong and overcome this, it will mean in a way you're still a captive. Please angel. Do it for Daddy.\"\n\n\"I'm trying.\" She sobbed. She hadn't told anyone about her relationship with Skull. And since she hadn't gotten pregnant, no one could tell.\n\n\"Try harder. Please...\" Her father's voice shook so badly Tanesha lifted her head to look at him and gasped.\n\n\"Oh my God, Daddy.\" Her strong powerful father...her rock... had tears streaming down his face. Tanesha had never seen her father cry. Never! She moved to curl herself up in his lap like she used to when she was a kid. \"Oh daddy, I promise I'm going to snap myself out of this. Life must go on, right?\" She couldn't imagine how she could go forward without Skull and live but seeing how distraught her father was, she suddenly wanted to make an effort.\n\n\"I just want my daughter back.\" Paul rasped. \"I know I'm being selfish but please baby...\"\n\n\"No you're not.\" Tanesha shook her head. \"Starting tomorrow, you're going to see your old Tanny back. At least peeks...\"\n\n\"That's all I ask honey. I love you so much.\"\n\n\"Love you too daddy.\" Tanesha snuggled closer as she heard her bedroom door open. She didn't have to turn around to know it was her mother. \n\nDora Ashton's lovely fragrance, which had been 'anais anais' since Tanesha was a kid, wafted to her nose, making her smile. Her beautiful, elegant mother never ceased to bring her some inner calm whenever she was around. Tanesha felt her bed dip when her mother sat beside them and began to soothingly rub her on her back. When she heard her dad's softly murmured thanks, she knew her mother had just wiped his tears away. They were the most loving couple ever. Tanesha had always dreamt and wished for a relationship like what her parents had. Just her luck to be robbed of her first love. And from the way she felt about Skull, Tanesha didn't think she would ever love any other man again. She'd already given her heart out and was never going to get it back. Tanesha gave a deep sigh and resolved to at least start getting out of the house, gradually get used to getting back that feel of being around people. So far, she hadn't hung out with any of her friends like she used to. Going to school and lectures was almost mechanical. She would start going out alone for a while...get a feel of being outside the house and school, and then gradually begin to hang out with her pals again. That way, she would flow better with them. They had been so understanding and tolerant...giving her the space she needed. It was about time she started living...or pretended to, for her father's sake.\n\nIt was about time she found a way to make it without Skull.\n\n***\n\n\"You have to go home.\" Ty softly informed the pretty girl who had her head in his lap. \"I'm not good company right now.\"\n\nTy was semi-sprawled on his expensive leather upholstery, with his head thrown back and his fingers combing soothingly through the silky hair of his little sister, Thea, who was currently groaning in protest. She'd come to visit him, her intentions being to spend the whole day. But after two hours of spending time with his sister, Ty felt he wasn't good company as his thoughts had drifted to Tanesha as they always did.\n\nThey were in his not only expensive, but classically magnificent glass mansion. Most people thought living in such a house, where everything that went on inside could be seen by everyone outside, was weird and dangerous but it had always been his dream to own such a house. On the subject of not feeling safe, Ty always told people that any person who had any intention of harming him was rather the one in danger. What most people didn't know was that the house actually had concealed automatic blinds, which Ty never bothered to use anyway. He'd contracted one of the top Architectural firms in the world to build it for him at the age of twenty-one. And that was how he'd become friends with Dean Broody and in effect, the squad...made up of Matt, Damon, Chris, Michael, Kyle, Cole, Dean and then himself. They were a group of eight wealthy guys who virtually acted like brothers. Though Ty was very close with his twin siblings, Theo and Thea, he felt complete and contented whenever he was amongst the squad. He loved his guys to bits. \n\n\"You know you've become a recluse, right?\" Thea groaned. \"You're staying at home all the time. Not having any fun. I know this house is awesome and fabulous and in \"the most beautiful houses in the world\" category but dude, you need to live.\" Thea suddenly sat up and looked her brother in the eye. \"What happened to you on that last mission bro? You've been a totally different person since you got back. Come on! What the fuck is going on?\"\n\n\"Language, Thea.\" Ty gave a mock growl, pulling Thea to him for a hug. \"I'll be fine.\"\n\nDespite the age difference between the twins and himself, they were as close as any siblings could be. They treated him with love and respect though they had different mothers. Ty's mother, an heiress to the famous Young-Smith Fortune, had died giving birth to Ty. Sarah Young-Smith had been a very fragile person due to her sickle cell status and had known she wouldn't survive the birth. She'd therefore bequeathed all her wealth to her son, to be given to him on his eighteenth birthday. Ty's father was a simple florist who had fallen for a beautiful heiress. But he hadn't been able to marry her as he would have wished because her family wouldn't allow it. Ty's mother had loved his father so much she'd left him a sizable amount of money too. When Ty was eight, his father had gotten married to a really lovely woman, and then had the twins. His stepmother had treated him well and Ty therefore loved her very much. With the counsel of his mother's lawyers, Ty had multiplied his inheritance so much that it was not surprising that his name had made it to Forbes top ten richest men under twenty-five when he was twenty-three years old. \n\nJoining the army had always been Ty's dream so when he got the opportunity, he'd jumped right in. He'd excelled too if what his superiors told him was anything to go by. He loved being in the army, loved the excitement, loved the adrenaline when there was a mission, loved being there for his country. Sometimes it was tough, other times it was a piece of cake. His last assignment had however been something else. Hell, he didn't remember the last time he'd cried for fuck's sake. He'd probably been a toddler. Maybe it had to do with his stature but Ty had always been a strong person and never showed weakness... Till he met Tanesha. Damn! Ty could still not believe he'd actually cried in the presence of a woman. The squad would have a field day if they heard that. Thank God they were never going to. The ZONKAI mission had been the most draining and gut-wrenchingly dangerous mission ever. It had changed Ty. Even his Admiral had told him to take some time off. Admiral Mathias had been shocked when Ty told him that he intended to see Tanesha Ashton. Nothing the man had said would sway Ty. When Ty had at a point opted out of the force, the shocked Admiral had quickly relented. But the shrewd man had given a condition.\n\n\"We are yet to officially brief the President. He already knows we were successful and Ghost has been captured but we're yet to meet him officially. You will wait till after that, Lieutenant. Do I make myself clear?\" The elderly man had asked sternly.\n\n\"Perfectly Sir.\" Ty responded.\n\n\"Good. Now take some time off and don't let us talk about this again.\" It was an order. \n\nNo way in hell was Admiral Robert Mathias going to allow the boy to quit the force when the president himself was planning on awarding the boy with a big promotion. What would he tell the president? Mr. President, we had to let him go because he was bent on fucking the Former Prime Minister of Jamaica's daughter? Hell no. No one stood in the way of a good fuck. Definitely not him. Especially not when from the reaction of the lady during the rescue, it was obviously consensual. Admiral Mathias had read the report on the girl's reaction during the rescue and put two and two together. The son of a bitch had obviously fucked the shit out of the girl. Once it obviously hadn't been rape, he wasn't going to stand by and allow such a fine soldier's career to end.\n\n\"Noted Sir.\" Ty had turned to go but stopped when the Admiral called his name quietly. \"Sir?\"\n\n\"I'm not going to ask exactly what went down on that Island between you and the girl. Apart from the fact that I'm not stupid, you're old enough to know what you're doing.\" The Admiral had a naughty glint in his eyes. \"But what I'll say is that the girl's father is a very powerful man. So be very careful how you go about...\" He threw his hands up. \"Things.\"\n\n\"I will Sir. Thanks.\" Ty neither denied nor admitted anything. The man was already on to him.\n\nNow Ty was waiting to be told that whatever briefing that had to be done, was done so that he could go to his woman. And the wait was driving him crazy. \n\n\"Okay, I'll go.\" Thea murmured when Ty released her from his tight embrace. \"But know that you can't get rid of Theo so easily when he comes tomorrow. He plans on sleeping over.\"\n\nTy groaned, making Thea laugh. \"I know. At least he will be occupied with video games and would therefore not get the time to play the 'shrink' with me.\" He smirked, giving the word quotation with his fingers, and then quickly ducked to avoid the punch headed his way from his sister. \"Still enjoying the car? Or you want me to change it?\" He asked, watching as Thea adjusted her jeans.\n\n\"No way am I going to change it.\" Her eyes widened warningly. \"At least not anytime soon. I'm still in love with it.\"\n\n\"Glad to know you still love it.\" Ty drawled. He'd gotten Thea a Pink Audi TT Roadster convertible for her seventeenth birthday and a metallic blue Audi Q7 TDI for Theo who claimed he needed a big car that could carry all his friends. He loved to spoil his siblings. \n\n\"Just look at it.\" Thea grinned dreamily as she stared at her car through Ty's glass house. \"Isn't it just...what the... I think you have visitors, Ty.\" Thea shouted smugly. \"So much for wanting me out so you can be the hermit that you...\"\n\n\"What the fuck!\" Ty muttered as he watched cars park one after the other on his compound. Of course the silly security guard wouldn't say anything to him because it was the idiots. He didn't blame him. Who in their right minds would dare stop Chris or Matt or any other member of the squad for that matter, from entering his house? Ty laughed despite himself. \"Come on Thea.\" He said taking his sister's hand in his and heading for the door.\n\nAll the guys were getting out of their cars as Ty stepped outside with Thea. He couldn't help the grin that brightened his face when he saw one of the cars open to reveal Kate, Chris's housekeeper and a pretty blonde...who Ty had never seen before. They had huge food warmers in their hands. And from what he could see, there were more food warmers inside the car. The guys had brought with them a feast. Well it was good they brought Kate because he'd given his own housekeeper some days off. \n\n\"I don't recall it being my turn to host today's get-together.\" Ty said loudly enough for the guys to hear. It was a tradition of theirs to spend each Saturday in the house of one member.\n\n\"Suck my dick.\" Dean quickly retorted from where he stood beside his car. \"You look like shit.\" He added, making Thea burst into laughter. \n\n\"You're not getting sick or anything like that, I hope.\" Michael added with a look of concern. Always the doctor, Ty thought, stopping himself just in time from rolling his eyes. Thea was a bad influence. \n\n\"I'm fine.\" Ty said, watching as all the guys hugged Thea. She loved seeing the guys because they made her laugh. \"Hey Shane.\" Ty gave Chris' husband a one-armed hug and introduced Thea to him. Then he put his sister in her car and waved at her.\n\n\"My man, you're anything but fine.\" Shane said softly to Ty.\n\n\"That obvious huh?\" Ty grimaced as he ushered Shane into his spectacularly elegant home.\n\n\"Yep. Lovely house you've got here by the way.\" Shane complimented. \n\n\"Thanks. Dean's handiwork.\" Ty gestured towards the comfortable couches in his living room. \n\n\"So I hear.\" Shane took a seat. \"Brilliant. By the way that's my cook, Abigail.\" Shane informed Ty. \"After preparing the food, she decided to help Kate see to us.\"\n\n\"Cool.\" Ty grinned. \"Finally I get to meet the amazing Abigail. All Chris does is brag about her culinary skills.\"\n\n\"He doesn't exaggerate.\" Shane laughed. \"Wait till you taste her food.\"\n\n\"Can't wait.\" Ty was feeling better already. He loved being around the guys.\n\n\"Hey, if you're coming down with Ebola or something...\" Dean trailed off when Ty glared at him, lifting his hands in mock surrender. \"What? I don't know where you went. All I know is that you've been in isolation since you got back. Don't crucify me for asking. Just curious that's all.\" The guys erupted into laughter.\n\n\"More like an asshole.\" Ty muttered, joining in the laughter. \"Where're Kyle and Aaron?\" He asked, looking towards the gate.\n\n\"They'll join us later.\" Cole said from the bar where he was pouring some cognac for himself. \"Wedding preparations.\"\n\n\"Finally.\" Ty chuckled. Kyle and his fianc\u00e9 Aaron had been engaged for a while, waiting for Kyle's twin brother's soldier fianc\u00e9 to come back from a Peace Keeping Mission so that they could have a double wedding. \"Stephen is back huh?\"\n\n\"Yep, he's back.\" Damon responded, giving Ty a hug. \"It's going to be a great wedding...weddings...whatever.\" Everyone laughed.\n\nAs usual, they had a blast. By evening, Ty was buzzed and feeling no pain. He finally opened up to the guys, telling them about Tanesha and how worried he was that he still hadn't been to see her. What worried him most was the fact that Tanesha might think he'd used her.\n\n\"Fuck, she doesn't even know whether I'm dead or alive.\" Ty exploded at a point. \"Can you imagine what she's going through right now? I just want to know whether she's ok.\"\n\n\"She's definitely not okay.\" Damon said. \"I mean look at you. You're as jittery as a junkie, desperate for a hit. And you're the guy. She can't be okay.\n\n\"I know.\" Ty groaned. \"I spend every minute feeling like someone has hacked out my heart and left a gaping hole in my chest. I...\" Ty struggled to articulate his chaotic thoughts. \"I just feel dead inside.\"\n\n\"I'll be damned.\" Dean breathed, staring at Ty. And like him, all the guys saw exactly what Ty himself didn't even seem to know. He'd fallen for the girl.\n\n\"I need to take care of her.\" Ty went on, the look on his face pure frustration. \"After what she's been through...I need to be there for her.\" He groaned. \"She killed to save my life for fuck's sake.\" Ty wanted to kick at something. \"She's suffered so fucking much it's almost too much for me to think about sometimes.\" \n\n\"Then try not to think about it.\" Kyle said quietly. \"You will see her, Ty. Thinking yourself to sickness is not going to help.\"\n\n\"What is stopping you from going to her school?\" Chris asked. \"Just to catch a glimpse or something...see that she's okay. Then maybe you won't think so much.\"\n\n\"You mean stalk her like you stalked me?\" Shane murmured dryly, earning himself a quick kiss from an amused Chris.\n\n\"That's exactly what I was going to say.\" Tristan, Damon's husband chipped in. \"Trust a psycho stalker to give such an advice.\" Even as he spoke he was moving to hide beside Dean, who he knew would not allow Chris to attack him. \"But I think I would have done exactly as Chris said if I were in your shoes, Ty.\" Tristan added. \"Just make sure she doesn't see you.\"\n\nTy gave a bitter laugh. \"If I set eyes on her, I won't be able to stop myself.\" Ty groaned. \"If I see her, I'll talk to her. And if I talk to her, I'll have to have her. I just... I'm going nuts, guys.\"\n\n\"Hang in there soldier.\" Matt said. \"Whatever the fuckers claim they're doing, it's going to end soon. In the meantime...\"\n\n\"Drink your fucking arse off.\" Dean said, raising his glass.\n\n\"What if we...\" Kyle started, but then trailed off. \"Never mind.\" He said, suddenly looking at his wrist watch. \"I think we better break up this party. Ty go to bed. Have a good sleep. We'll talk tomorrow okay?\"\n\nThe guys looked at Kyle weirdly but followed his lead. It was past one a.m. anyway so they all said their goodbyes and left Ty's house. But before the squad even got to their various homes, they were linked up on a conference call...without Ty of course. And by the time the call was killed, a plan had been hatched. \n\n***\n\nTanesha looked at herself in the mirror. She looked smashingly good in a yellow and white color block sheath dress. The form-fitting sleeveless frock had a round neck with a hidden back zip, and it looked mouthwateringly good on Tanesha's curvy body. Completing her look was a black monochromatic stiletto heels with hidden platform and curved toe. The shoes had a strap, bow, and buckle across the foot below the ankle, creating an essential and elegant look. She looked simply classy and amazing. \n\nThe Ashton family had been invited to the White House for an award ceremony of sorts. According to her father, the president wanted to award an officer and a team of navy seals who headed the operation that saved her. If only she could tell them that it was Skull who saved her and not some Navy SEALS. The awards ceremony was to take place that morning, and a dinner was to be held that evening in honour of the SEALS and the Former Prime Minister of Jamaica. After all, his daughter had been kidnapped on American soil by American criminals. The dinner was obviously the president's way of apologizing for what had taken place. Tanesha wished she could stay home but her father said the president wanted to meet her and personally apologize for what happened. So there she was, getting ready for the event. Tanesha couldn't believe someone was actually going to get recognized for another's job. It just wasn't fair. But even if they acknowledged that Skull saved the day, he wasn't around to be awarded because he... Well her new friends had advised her to be positive and believe that Skull was alive so she'd been trying not to think about the fact that he might be dead. Tanesha heard her cell phone ringing and couldn't help the smile that spilt her face when she saw the caller I.D. Talk of her new friends...",
        "\"Damon, hey...\"\n\n\"Hey gorgeous.\" Damon chuckled. \"Tell me I'm the first...\"\n\nTanesha burst into laughter. \"Sorry darling. Chris has already called.\"\n\n\"The asshole...\" Damon groaned.\n\n\"And Matt...\"\n\n\"Fuck.\"\n\n\"And Kyle, and Michael and...\"\n\n\"Am I the fucking last person?\" Damon growled, making Tanesha laugh even harder.\n\n\"No you're not the last.\" Tanesha was laughing so hard. \"Tristan called first though. Didn't he tell you?\"\n\n\"The jerk.\" Damon muttered but he couldn't mask the amusement in his voice. \"So who did I beat?\"\n\n\"Cole is calling even as we speak. I'll have to call him back. Dean sent a message that they're taking the baby to the hospital for a checkup so...\"\n\n\"So I'm the last.\"\n\n\"I'm yet to hear from Shane. I've been chatting with Aaron since dawn. So you beat Cole and Shane.\" Tanesha sat on the couch in her bedroom.\"\n\n\"Great. Ready?\" Damon's voice softened. \n\n\"Yep. Waiting to be called down. Are you at work?\"\n\n\"Yes. Been in meetings since seven thirty this morning. I'm tired already. Try and have fun okay?\"\n\n\"I'll try not to scream that Skull deserves the award and not those soldiers.\" Tanesha said dryly.\n\n\"That would be the talk of the tabloids. Please don't disgrace us.\"\n\nTanesha laughed. \"I won't.\"\n\n\"Thank you very much your highness.\" Damon purred mockingly, sending Tanesha into another bout of laughter. \"Talk to you later.\"\n\nTanesha was still laughing when she hung up. God, she just loved the guys. She was so glad she'd become friends with them. After promising her father to try and loosen up, Tanesha had started frequenting a particular coffee shop. She would go and sit there just to read and create the impression that she was actually getting back into the fold. She did promise after all. On her fourth visit to the coffee shop, an architect called Dean, who Tanesha could have sworn was a comedian, had come to sit at her table and engaged her in conversation. She'd been initially reluctant to talk to him but he'd been so funny she'd started laughing at every word that fell out of his mouth. The following day, Dean had showed up with two other friends, Aaron and Chris. By the end of that week, Tanesha had met seven more guys and one beautiful lady called Briana, who were all Dean's friends. And what a great experience she'd had so far. \n\nThe guys were not only strikingly good looking, they obviously had class. Tanesha could also tell they were all very well to do by looking at how they dressed and their taste in food. After all, she came from a similar background. The guys were all obviously wealthy. She got along particularly well with Tristan, Aaron and Briana as they were closer to her in age. The others treated her like a little sister. And Cole gave her pointers whenever she had assignments as he was a lawyer himself. What surprised Tanesha was the fact that none of the guys ever showed any sexual interest towards her. She knew they were all attached but that had never stopped guys who saw her from trying to get inside her pants. The guys not being interested in her in that way was actually very refreshing. She enjoyed being with them so much. \n\nThe only time the guys had acted weirdly in the two months that she'd known them, had been the day they'd suggested they all go clubbing. They said they were all going to come with their spouses and fianc\u00e9es so that she could meet them. Tanesha had asked them whether she could also bring a friend so she could at least have someone to dance with but they'd quickly and vehemently changed the plan, saying they were no longer going to bring any women after all. Tanesha was to come alone as she was going to have all of them at her beck and call that evening. Their vehement reaction to her bringing someone had rather taken Tanesha aback but she realized she actually trusted them so she'd thought nothing of it. That evening, she'd had so much fun she'd pinched herself to see whether it was real. \n\nSomehow Tanesha had grown so close to them that she found herself telling them about her kidnap and how she'd fallen hopelessly in love with one of her kidnappers. She told them that the person, Skull, had liked her too. She'd added that for a fierce Alpha male such as Skull to actually cry in her arms, it showed that he had a soft side and wasn't all bad. At that, the guys had looked at one another and then tried very hard to stifle their laughter. Tanesha hadn't missed it. They however wouldn't tell her what was so funny when she quizzed them about their reaction. But they'd all told her that from her story, Skull was definitely crazy about her. When with a crushed look she'd told them that there was a very high probability that Skull was dead, they'd quickly advised her to be positive and rather hope she'll meet Skull again. \n\nMichael had made her consult with his wife Mary, who was a psychologist, for a whole week...for free. And all the sessions had been great. Tanesha couldn't be happier. Then as if that wasn't enough, all the guys made it a point to call her every morning...well, except for the gorgeous Shane who usually called her in the evenings. He claimed that since his husband checked up on her in the morning, he would do his in the evening. And for the two months that she'd known the guys, Tanesha had been able to deal with her misery better. She still cried when she was in bed alone at night, but the pain had become more bearable as she could call and talk to any of the guys whenever she was feeling down. They actually insisted that she did. They were such a lovely bunch and she felt so lucky and privileged to know them. At least her father was now very happy with her genuinely cheerful attitude.\n\nTanesha heard a sharp rap on her door and knew who was about to enter. \"Damn Sis. You look phat!\" Her big brother, Leon drawled from the doorway.\n\nTanesha laughed and stood up to twirl around for Leon, who gave a piercing whistle. \"Will you stop with the whistling, Leon.\" She glared at her brother, covering her ears with her hands.\n\nBut she laughingly allowed him to draw her into his arms and twirl her around her beautiful bedroom. \"You look beautiful.\" Leon murmured.\n\n\"And you, my handsome brother, look absolutely fly in this suit. Where's Jamal?\" Tanesha asked, stepping out of Leon's arms and reaching for her clutch.\n\n\"Right here Tanny.\" Her little brother responded, entering the room. \"Oooh Mama Mia.\" He purred making his siblings laugh. \"Looking gorgeous, Sis. Dad says it's time. Come on.\"\n\n***\n\nTy knew he had to breathe...he needed to breathe. His chest hurt for lack of oxygen but he felt as though if he so much as exhaled, Tanesha would disappear. Eventually common sense and the need to live won and he slowly let out the breath he'd been holding. \n\n\"Oh my God, she's beautiful.\" He breathed to himself. \n\nTy was standing in one of the six doorways of the Blue Room in the White House. The Arrowheads were to be honoured by the president of the United States that morning. His Admiral had surprised him by actually ordering him to invite all the important people in his life. He'd been surprised because his colleagues had been told to invite only a guest each. But then it occurred to Ty that he was obviously being given that privilege because of the dangerous role he'd played in the mission so he'd gone ahead and invited all the people that meant a lot to him. His dad, step-mum and siblings were already seated. So were his squad and their partners. There was no way he could receive an honour without his friends present. Even Kayla, Dean's wife was there with their four month old baby. Ty was thrilled to see all his loved ones there to support him but nothing thrilled him more than the sight of Tanesha. \n\nIt had been three months. Three months without seeing her, hearing her voice, seeing her beautiful smile, burying himself deep inside her tight warmth. It had been too long. Though the guys had assured him that she was okay...and unfortunately not pregnant, Ty had still been dying to hear it from Tanesha herself. Seeing her right then, with her gorgeous elegant self, Ty couldn't help but think his imagination hadn't done Tanesha justice. She was even more beautiful than he remembered. And that dress... She looked absolutely fabulous. How the fuck was he going to be able to sit through the ceremony without doing something scandalous like ignoring all protocol and just going to her and crushing their lips together? Ty wanted to devour her right there in front of everyone. And the need to do that was so intense it left him trembling. Shit!\n\n\"Going in anytime soon?\" Ty heard his Admiral's voice behind him and tore his eyes off the beautiful face of Tanesha with effort.\n\n\"Sorry, Sir.\" Ty moved aside to make way for the Admiral but the elderly man didn't move. \n\n\"So that's her huh?\" Admiral Mathias murmured with his eyes on an oblivious Tanesha. \"Figures. Well, Lieutenant, finish hard. After this ceremony, she's all yours. Let's go take our seats. The president is about to enter.\" With that the man moved past Ty and went to take his seat.\n\nTaking a deep breath, Ty followed the Admiral and went to take his seat as well. He couldn't wait for the ceremony to end so he could talk to Tanesha. The Arrowheads were already seated. So were other high ranking members of the Navy. It was supposed to be a very short ceremony. He and his team would probably be decorated with a star each for their hard work, and then the president would probably give him a plaque or something for his role in the capture of Ghost, then speeches would be made, and then the ceremony would come to an end. He was supposed to read a thank you speech by the Arrowhead...which was very short. Then everything would be over. Ty couldn't wait. The anticipation was killing him. \n\n***\n\nThe look on Tanesha's face was priceless. She couldn't believe her new friends were actually there with her in the White House. She had to suppress her squeals of surprise and joy.\n\n\"Are you guys for real?\" She gushed, reaching out to pinch Aaron.\n\n\"Ouch! What was that for?\" Aaron gave a surprised laugh.\n\n\"Just checking to see if this is real...if you guys are really here.\" Tanesha laughed, stepping into Shane's arms for a hug.\n\n\"Well, you're supposed to pinch yourself.\" Aaron gave a mock scowl. \"You didn't think we were going to let you come alone did you?\"\n\n\"But how did you get invites?\" She asked moving into Damon's arms.\n\n\"I called in some favours.\" Damon said with mock arrogance. \"What can I say? It's good to know people in high placed.\" He added, making the others smirk.\n\n\"I can't believe you guys didn't tell me this morning that you would all be here.\" Tanesha gushed reaching out to take Dean's adorable baby from his wife Kayla, who actually leaned forward to kiss her on the cheek.\n\n\"I'm so happy to finally meet you my dear.\" Kayla gave her the most brilliant smile. \"They didn't exaggerate. You are beautiful.\"\n\n\"Oh my God, I'm happy to see you too and Baby Raby.\" Tanesha laughed. \"She so adorable and you're so hot. Love your haircut.\" She gushed and turned to receive a hug from Jen, Matt's fianc\u00e9e, who she'd spoken to on phone once. \"Oh my God, you're gorgeous.\" Tanesha told the lawyer who actually looked like a model. She felt as if she was in the presence of celebrities. \"I've heard so much about you ladies it feels like I've known you for years.\" Tanesha was beyond thrilled. \n\nShe wanted to sit with them but Dean took the baby from her and insisted she went back to sit with her family. \"Go on. The ceremony is about to begin.\" Dean said. \"And don't pout.\" He'd added, making Kayla laugh.\n\n\"We'll talk after the ceremony darling.\" Kayla said, hugging her again. But even as Tanesha went back to her seat, she couldn't wait for the ceremony to be over so that she could hang out with them.\n\nAfter observing a minute silence for Gustav, one of Ty's colleagues, the ceremony began. And throughout the initial speeches by some senior military personals, Tanesha kept looking at the squad with a beaming smile on her face. She didn't care much for what was going on as in her opinion, the right person was not the one being honoured. Her Skull deserved the award and not the bunch of smartly dressed Navy guys seated. Yes, they did help, but the one who did the real job was Skull and Tanesha was pissed he wasn't and couldn't be acknowledged. She felt her cell phone vibrate and looked down to see she had a message from Chris.\n\nChris: Listen to what is being said Tanesha.\n\nTanesha smiled and quickly replied: Why should I bother? The one who deserves it is not here.\n\nChris: This is not going to take very long so please listen. Okay?\n\nTanesha: (frowning smiley face) Alright, alright.\n\nTanesha automatically began clapping with everyone else as the first speaker, an Admiral Martin or something, had finished giving his speech. The President came next. He spoke about how fearless the Arrowheads had been in their quest to capture Ghost. He thanked them for making the country and him in particular proud as he'd promised a very noble man, Ex-Prime Minister Paul Ashton, to save his daughter. There was thunderous applauds when the president actually walked over to where each member of the team sat and pinned on their left breast pocket, a Star of Honour. \n\nOne officer in particular seemed to attract Tanesha's full attention. From where she sat, she could only see his back. But Tanesha could have sworn she knew him. The way he stood and his mannerisms...there was something so familiar about him. For some reason, Tanesha's heart started pounding so hard she wondered whether her mother, who was sitting beside her, could hear it. Her palms grew clammy and she wiped them on her dress.\n\nThe president asked the men to sit down and went back to stand behind the lectern to continue with his speech. He spoke about a particular person, who to him, had performed spectacularly well. According to the president, that person had actually given them more than they'd bargained for. Not only had he ensured the safety of the Former Prime Minister's daughter, he'd also captured Ghost alive. And as if that wasn't enough, thanks to him, they'd uncovered the biggest human trafficking syndicate ever. The pride in the president's voice and the awe on his face couldn't be missed. \n\n\"Will Lt. Tyler Tyron Wesley please stand.\" Tanesha watched as the officer who she thought looked eerily familiar stood up. \"It is with great honour that I promote you, Lt. Tyler Tyron Wesley of the Arrowheads, from the rank of Lieutenant, to Lieutenant Commander. This makes you the youngest Lieutenant Commander in the history of this country.\"\n\nThe applauds was deafening. Everyone was on their feet at that point. The lieutenant's fellow Arrowheads were ecstatic. Tanesha couldn't help but notice how the Blue Room suddenly looked charged. What shocked her even more was the joy her new friends portrayed at the president's words. Dean, Matt, Cole and Tristan were making piercing whistling sounds. They were actually cheering as if they knew the guy receiving the award, Tanesha thought confused. She turned to look at Lt. Wesley as he went to stand before the beaming president. She still couldn't see his face but she kept her eyes on the back of his head. \n\nThe president raised high an insignia of a gold oak leaf collar device for all to see, which attracted another round of applauds. Then with a happy grin, he pinned it to the collar of Ty. Then the president attached to Ty's shoulder, shoulder boards bearing a single gold quarter-inch stripe between two gold half-inch strips. Finally, the president pinned a specialty insignia, which was also a star, above the stripes. Then after taking a step back to admire his handiwork with a brilliant grin, he gave Ty a handshake and then a hug. The president seemed to be telling the obviously emotional officer something. Whatever it was, it took a while but the applause didn't subside even for a second. The Arrowheads, made up of Ty's colleagues and the squad, made up of his friend, clapped and cheered nonstop. It was so touching Tanesha felt goose bumps spread across her skin.\n\nFinally, the two men separated, freeing LtCdr. Wesley to give his mandatory salute. Then the president gestured for the newly decorated lieutenant commander to take his place behind the lectern. When a still shocked LtCdr. Wesley took his place behind the stand and finally looked up at the loudly cheering audience, Tanesha gasped.\n\n\"Skull.\" She breathed, feeling herself begin to shake.\n\nThere was no tattoo of a skull on his forehead but Tanesha would know her Skull any day. To say Tanesha was shocked would be an understatement. She didn't even notice when everyone sat down to listen to Ty. Her mother had to prompt her to sit. \n\nTy cleared his throat, and then the applauds and cheers started again. He stood still, waiting for the raucous from his team and his squad to end so that he could speak. The look of shock on his face was clear for everyone to see. He'd definitely not been expecting to be promoted. It all felt so surreal. He turned his head in Tanesha's direction and locked eyes with her. She looked stunned, angry and...hurt. Fuck. Ty saw her lower lip begin to quiver and knew she was going to lose it right there. There was nothing he could do from where he stood. Ty gave a slight shake of his head as he stared into her brimming eyes. She blinked, obviously surprised at his gesture. Unfortunately, blinking only caused a tear to slide down her cheek. Ty suppressed the groan that almost erupted from his throat when he saw that tear. He wished he could lick the trail of the droplet off her cheek. Ty saw a beautiful lady who looked like an older version of Tanesha...her mother obviously...push a tissue into her daughter's palm. The applauds had finally stopped but Ty waited till Tanesha cleaned her eyes before he started addressing the audience. Besides the fact that he needed to compose himself too after seeing Tanesha tear up, Ty had to gather his thoughts as he had to say more than what he'd planned to read...thanks to the rather shocking matter of his promotion. \n\n\"Mr. President, the Secretary of Defense...\" Ty began. \n\nWhen Tanesha heard that amazingly sexy voice...that raw, deep and sensual masculine tone that only Skull had, the impact on her senses was as hard-hitting as it had been the first time she'd heard it. It called to something hungry and primitive inside her that instantly left her short of breath. She would probably have climaxed there and then had it not been for the fact that she still felt so shaken. Despite the feeling of heartrending betrayal that she felt for what Ty had done...not coming to her despite the fact that he was very much alive, and also hiding his real identity from her, Tanesha couldn't help but admire the man. She'd always found him sexy as all fuck in jeans and a T-shirt. But in the white Navy ceremonial attire, the man looked mind-blowingly hot. His confident and more than a little arrogant posture made him looked dark and dangerous...seemingly unattainable. And that strikingly beautiful face...the sexy chiseled mouth... Christ! But then, even with that obviously fake tattoo, Tanesha knew that the man was gorgeous so she wasn't surprised at all. She suddenly wanted Ty so desperately she began to panic. Surely, it was against the military rule or something for a soldier to be that hot, she thought trying to control her breathing. Just watching Ty speak made Tanesha squirm in her seat with arousal, her body craving what it had been denied for three months. She was a fucking mess. \n\nTanesha was so much focused on Ty that she didn't notice her mother's curious gaze on her. Neither did she hear a word Ty said during his speech. After the short ceremony, people went around congratulating Ty and the Arrowheads but Tanesha stayed in her seat. At a point she felt eyes on her and looked up to catch Ty's penetrating gaze on her. His eyes stared into hers with such scorching hunger and possessiveness Tanesha's breath hitched in her throat.",
        "\"Angel, the president is asking of you.\" Her father said at her side. Her brothers had already left to probably look around the white house.\n\nWithout a word, Tanesha followed her father to where the president stood, talking to the Secretary of Defense, two elderly military men and Ty. Tanesha choked up when the president took her into his arms and gave her a tight hug. She however composed herself and politely answered the president's questions. She thanked the military men for their help and finally turned her smiling face on Ty, who actually looked slightly wary.\n\n\"Thank you very much for your help LtCdr. Tyler Tyron Wesley.\" She mentioned Ty's new title and full name, drawing amused laughter from the people around. \"And congratulations.\"\n\n\"Thank you Ma'am.\" Ty responded politely, not missing Admiral Mathias' knowing smirk.\n\n\"May I have a quick word with you please?\" Tanesha asked sweetly.\n\n\"Of course, Ms. Ashton.\" Ty responded. \"After you.\" He gestured to one of the doors leading out of the Blue Room.\n\nDesire simmered in Ty's blood as he followed Tanesha, watching the alluring sway of her lusciously curvy body. Those beautiful long legs... He imagined them wrapped around his hips and groaned low in his throat. He was as hard as rock. Ty opened a door to an empty office and waited for Tanesha to enter first, then he entered and shut the door behind him.\n\nImmediately the door shut behind them, Ty found himself pinned to the door with strength he didn't know Tanesha had. Before he could utter a word, Tanesha was yanking his head down and crushing their lips together. The feel of those succulent lips against his and the unmistakable possessiveness of Tanesha's actions undid Ty. Wrapping an arm around her tiny waist and tangling his fingers in the long strands of her hair, Ty gave as good as he got. Both moaned into the kiss, pouring everything they felt into it. It was so fiery and intense, Ty felt his knees go weak. They couldn't get enough of each other. Ty groaned deep in his throat as he breathed Tanesha in, allowing the delicate fragrance of her perfume and the provocative scent of her strawberry scented hair, which he associated with only Tanesha, intoxicate him. Ty could taste the saltiness of Tanesha's tears. He didn't know whether they were tears of joy, anger, pain or lust and for the very first time, didn't really care. Just having those sweet lips against his was all that mattered. He was on cloud nine. \n\nTanesha's lips were soft but firm against Ty's, not demanding, but rather taking. Her tongue dueled with his, licking, sucking, teasing, pushing both of them to lustful heights which neither even knew existed. Tanesha had been kissed by Ty several times. But this time, it was totally different. There was this feeling of desperation...as if they had to feed on the strength of each other. The feel of Ty's fingers digging into her scalp, the taste of his mouth, his scent, his hard body against hers, the erotic sounds of longing he made in the back of his throat...everything drove Tanesha crazy. If time were to freeze at that moment...with her in the arms of the man who had her heart...Tanesha would have been the happiest woman on earth. The feeling was heady. \n\nAfter what felt like hours, the kiss was broken by the need for air. They both stared at each other, breathing harshly. Ty felt dizzy from the myriad of intense emotions running through him at that particular moment. \n\n\"Tan...baby...\" Ty breathed, staring down into Tanesha's tear streaked face. Those tear-filled eyes however didn't conceal the fact that Tanesha wanted him. He remembered that look. \"Tanesha...\" He whispered, wanting nothing more than to give her what she wanted right there, right then. \n\nBut Tanesha did something that although didn't surprise Ty, left him feeling extremely regretful and angry at himself for not damning the consequence and going after Tanesha like he'd wanted to. Her hand swung up with speed and strength and landed on his cheek, the sound reverberating through the tiny office. Ty had seen it coming but did nothing to stop it. And even when Tanesha landed a second slap on his other cheek, Ty took the hit unflinchingly. If hitting him was going to make Tanesha feel better, he sure as fuck wasn't going to stop her. One thing however remained constant... Ty's erection didn't wane for even a second. Angry or not, he wanted Tanesha with a ferocity he couldn't fight.\n\nWithout a word, Tanesha pulled out of Ty's embrace and then furiously wiped at her cheeks. Then she nudged a crestfallen Ty away from the door, opened it, and then with sexy confidence, headed back towards the Blue Room.\n\nFuck Skull...or Tyler...or Tyron or whatever he called himself!"
    ],
    "authorname": "adjoaq",
    "tags": [
        "rescue",
        "award",
        "friends",
        "seal",
        "misery"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/sizzling-embrace-ch-05"
}