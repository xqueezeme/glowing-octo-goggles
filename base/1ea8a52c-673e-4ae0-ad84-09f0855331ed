{
    "title": "Karma",
    "pages": [
        "Author's Note: Two things about this story. One, if this story seems familiar to you, it is possible you have seen it before. A couple of months ago some lit authors got together for an anonymous writers challenge. We could not use our names and all stories went into the little read chain story category. After the contest I pulled the story and am now releasing it under my name and in its proper category of Mature. Second point is ever since I wrote Home is Where The Heart is, people have been asking me to do another story that focused more on romance than taboo, or hardcore erotica. \"Home\" was a very different story for me and I did not think I had another one in me, but my muse said otherwise and here is my second attempt to show off my softer side. On that note, keep in mind that being a bit of a romance it takes a while to get to the fun stuff. I hope you enjoy. LC68 \n\n\n\n\n\nI sat on the couch waiting to hear the tell tale creak of the stairs signaling my landlords inevitable visit. Toying with the locket my mother had given me four years ago on my sixteenth birthday; I stared at the two suitcases on the floor, hoping I wouldn't need them. I shouldn't have to; after all I was a big believer in my namesake and had been doing all the right things. I was a full time student; worked four mornings a week at the diner, didn't party like many of my girlfriends, and was proud to be referred to as a prude rather than a slut by the asshole frat boys at school. \n\nMy grades were good; I was responsible, reliable and had my own place. Well now it was my own place, which was the problem. Up until two weeks ago, I had shared the cute little two-bedroom apartment with my former best friend Jen. Former because she had dropped the bomb on me she was moving out to go live with her boyfriend. Not so bad, if she hadn't meant that night, and worse, stiffed me her half of the rent due the next day. \n\nBecause wait staff received tips, state law only required we be paid two fifty an hour. Billy, the owner of Kim's Kitchen, was a sport and paid us an extra dollar an hour so between hourly and tips I had been able to pay my half of the five hundred dollar a month rent. I had given Hal my half on the first and told him the story, but he was unsympathetic and started on about how easy he could get somebody else to take the apartment seeing it was only two blocks from the university. \n\nI had to all but beg him to give me a little time and he said he would give me a week to get the other half or get a roommate. I'd put an ad on every bulletin board at school, but had no takers and I'd had to buy books for the semester with the last of my savings. The money accessible money I had left from mom's life insurance had been used to fix the transmission in my car only to have the motor blow a month later. Per mom's will, her attorney would use the rest of the money only to pay my tuition each year.\n\nI had tried to get some of it to get a cheap used car and he seemed to sincerely feel bad for me, but said his hands were tied. It would be a waste of time to ask for help with the rent. My stomach twisted at the sound of the steps creaking from beyond my front door. I held my breath then released it when the footsteps passed my room and headed down the hallway. I had no idea what to tell Hal and truth was he could have the place rented before my bed grew cold. \n\nHal had a deal with the school that students received a discount from him and the school paid the rest, which was covered in my tuition. This allowed him to charge close to a thousand dollars a month for what really was only worth what we paid. But the lease stated in order to get that discounted rate the rent could not be more than three days late. If this had happened early in the semester I could have found a roomie easily, but this far in everyone was settled in. \n\nI looked down at the locket I'd been fondling and felt that all too familiar burning sensation in my eyes, I glanced over at the cheap end table I had bought at a yard sale and looked at the picture of mom and I taken at my high school graduation. \n\nMom hadn't come from the best of stock as she'd put it and I was the first in her family to finish high school. The fact I'd graduated with honors and was now in college was a source of great pride for her and she would tell anyone who would stand still long enough about it. Mom had quit school, but when I was barely a year old earned her GED and through a state program to help young mother's received a bachelor of science in hospitality, which had led to her running a local Marriott. \n\nMom was making good money, but tended to spend it, mostly on spoiling me and going on cruises. She had some money put away, but not much. After all she probably figured she had plenty of time to do that. She certainly hadn't planned on being diagnosed with stage four liver cancer at the age of thirty five. She had passed away six months later, mercifully quick according to the doctors who said she suffered much less that way. \n\nI'd sat and cried by her side and told her many times she was too young, but mom's response had been because of her past many people had though she would never make it past eighteen so for her the last eighteen years had been a bonus. She had made me promise to graduate and continue to do the right things because good things came to people who did them. That's why she had named me...\n\n\"Carmen!\" \n\nThe voice from the other side of the door startled me and was followed by a loud knock. Dropping the charm back against the old baggy Nickelback t-shirt I was wearing, I called out \"Coming!\"\n\nI took a deep breath and crossed the room on trembling legs. I paused in front of the door and flipping my long brown hair back out of my face, squeezed my locket for luck and opened the door.\n\n\"Hey were you sleeping?\" Hal asked without so much as a hello, \"I knocked twice.\"\n\n\"Oh,\" I gave him a nervous laugh while stepping back to let him into the living room, \"Guess I was just kind of zoning on the couch.\"\n\n\"Zoning or boning?\" he leered at me.\n\nSaying Hal was a pervert was like saying the sun was warm. He blatantly stared at every girl in the building and was always making lewd remarks. Most of the time it was under his breath, but he had been pretty forward with me in our last conversation and was already starting in, probably because he knew I was in a bind and wouldn't say anything. As if to enforce my point he had turned around to look at me and was staring at my legs. I was wearing a pair of loose jogging shorts, which combined with my mussed hair and unflattering t-shirt, left me feeling far from sexy, but he was all but licking his lips. \n\n\"I told you before, I don't have a boyfriend.\" I told him as I walked past him.\n\nI could feel his eyes on me and knew they were glued to my ass. What he was seeing I had no idea. I was on the thin side, but had run track throughout high school. I knew my legs and ass were my best feature body wise, which was good compensation for the fact I didn't have a whole lot on top. But I doubted the shorts were showing anything. \n\n\"Oh? Cute little thing like you? Why not?\"\n\n\"I need to work and study, no time for that right now.\" Sitting down, I pointed at the old armchair across from the couch, \"Would you like to sit?\"\n\n\"I own the place kid, I don't need your permission.\" He smirked, \"So you play a lot of sticky finger?\"\n\n\"What's that mean?\" I widened my big brown eyes, feigning ignorance.\n\n\"Oh come on!\" he waved his hand at me, \"You know.\"\n\nI shook my head and shrugged and he rolled his eyes. He didn't sit, but instead walked over to the couch until he was only an arm's length from me. Hal was a big guy, around six feet, with broad shoulders and what at one point, was probably a decent set of arms. But his gut hung past his belt and his arms appeared to have as much flab as muscle. His face was always red and he was sporting a pretty decent whiskey bloom as my mother had always referred to the tell tale sign of a serious drinker. \n\nI could smell beer on his breath now and his eyes seemed brighter than usual. That explained his more forward behavior and I did the best I could to try not to look nervous. I wasn't worried he would hurt me, but I doubted I would get any leeway in his current state.\n\n\"Well maybe you kill a lot of batteries instead; I forget you girls watch as much smut as guys these days.\"\n\n\"I don't watch...\"\n\n\"Whatever, your goody two shoes bullshit doesn't fool me. The nicest girls are always the biggest sluts.\" He paused, waiting for me to bite, but I let it go. He frowned, then with the grin returning shrugged, \"Anyway Carmen.\"\n\n\"Karma.\" I corrected him.\n\n\"What?\" he asked, while wiping at his watery blue eyes.\n\n\"My name isn't Carmen, its Karma.\"\n\n\"Like Sutra.\"\n\n\"Like what comes around goes around.\" I said with an edge in my voice.\n\n\"Ohh, feisty! I like that!\" he laughed and I sighed, realizing I should just say as little as possible.\n\n\"Well let's see if you're a feisty girl who has the rent.\"\n\n\"I...\" As always my hand found my locket, trying to draw strength from it, \"I'm sorry Hal, but I don't.\"\n\n\"I gave you an extra week kid.\" He spread his arms, \"You work don't you?\"\n\n\"Yes, but I had to pay off my books and I have to eat and do laundry and...\"\n\n\"Maybe you should get another job.\" The leer was back, \"stead of serving coffee you should be showing some of that cute little body of yours and making some real money.\"\n\n\"I'm not like that. But I promise I can have half again on the first and I'm looking for a roommate and...\"\n\n\"The first? Kid, you think you're going to live here for half?\"\n\n\"I promise I'll catch up!' My voice cracked and I wanted to kick myself for showing I was nervous.\n\n\"You can't pay current never mind catch up and I can have my full rent in no time, I have a waiting list for this place.\"\n\n\"But the students are all set until next semester.\"\n\n\"I don't have to rent to students; I can get full boat from people who work at the school too.\"\n\n\"Please give me some more time Hal, I'll figure something out!\"\n\nHe sighed as if I was getting to him and lowered his voice, \"Look Carmen, you seem like a good kid, but...\"\n\n\"Karma.\" I said automatically.\n\n\"What's with that weird name anyway?\" \n\n\"It meant something to my mother.\"\n\n\"Speaking of your mother, why not get the money from her?\"\n\n\"Because she passed away a year ago.\" \n\n\"Shit don't I feel like a fucking asshole?\" he looked like he genuinely felt bad and as bad as it was, I tried to push that advantage.\n\n\"My mom named me Karma, because she always believed good things come to people who do good things.\" \n\n\"Do a good deed and get one in return you mean?\" he asked, rubbing one of his two chins. \n\n\"Exactly.\" I gave him a big smile and deliberately widened my already large expressive eyes, \"So if you were to be a good guy and give me a break then maybe something good will happen to you!\"\n\n\"I like that idea\" He returned the smile, flashing his nicotine stained teeth. \n\nReleasing the locket, I felt my stomach unclench itself, \"Good, so I can stay?\"\n\n\"Sure.\" He said cheerily, \"But seeing you need the good deed from me, you should be the one doing one, right?\"\n\n\"Um, well....\" My stomach immediately began to tighten again. \n\n\"And I think you know what you could do for me.\" Stepping up to the couch so his crotch was directly in front of me he placed his hand on his zipper. \n\n\"I don't do those things.\" I said, shaking my head.\n\n\"You don't suck cock? Give me a break kid, I don't buy you're a twenty year old virgin.\"\n\n\"I'm not, but I...I don't just do that stuff.\" \n\n\"Stuff? Grow up honey, it's called a blow job.\" \n\nMy cheeks became warm and he laughed as I blushed. \"Man you are a good girl aren't you?\"\n\n\"I am and that's why I won't do it.\"\n\n\"But it's a good deed to get one remember?\"\n\n\"It's disgusting.\" I pointed at the door, \"Get out.\"\n\n\"Get out? Kid you don't own the place, I do, and you're late enough for me to kick you out.\"\n\n\"It's blackmail.\" I crossed my arms and gave my hair a toss.\n\n\"Whatever,\" he unzipped his fly. \"Listen Karma, you take care of me, I'll take care of you.\"\n\n\"This how you get your kicks?\" I asked, staring him in the eye.\n\n\"Not usually; the other girls pay their rent, besides they're slutty and I like slutty, but getting a little prude like you to suck my cock would be a lot more fun.\"\n\n\"I won't...\"\n\n\"Would it be so bad?\" he waved at the apartment, \"This is a nice place kid, and you could stay here and all it would take is you getting on your knees and being a bad little girl for a few minutes. Come on, you know you've sucked cock before.\"\n\nI didn't reply and had to force myself not to grab the locket again. I kept my hands folded in my lap and found myself staring at his crotch. Appalled at what was going on, I turned my head and was now staring at the suitcases. I had nowhere to go. My friends either lived in the dorm or apartments like this where it was against the rules to have other people move in. Where would I end up?\n\n\"That's right.\" Hal said softly as if reading my thoughts, \"You'll be on the street and let me tell you, what I'll ask you to do will be nothing compared to what you'll end up doing when the pimps find you.\"\n\nI looked back at his crotch and to my dismay, began to think about it. I didn't have a lot of experience. My first time wasn't until a month after my eighteenth birthday and I had been dating Roger for over a year before we did it. I'd been with two guys since, both of which I'd dated a few months. \n\nBut I'd gotten no complaints from any of them and had to admit I enjoyed oral sex, but I had liked them and they had been good to me. Hal was an old fat asshole who would probably go around telling his friends all about how he got sucked off by the little whore who couldn't pay her rent. \n\nI swallowed hard and told myself I could do it, he'd probably go off in two minutes. It would buy me time to find a roommate and...\n\n\"Tell you what, honey,\" Hal leaned over and I flinched as he brushed my long hair away from my neck so he could speak in my ear. \"I'll make a deal with you. You take care of me once a week and you can stay here by yourself and just pay me half for as long as you want.\"\n\n\"I...\" I turned my head to look at him,\n\n\"I mean it; think about it, not only staying, but the whole place is yours. All you have to do is play around with me on Friday nights and we have a deal, how's that sound?\"\n\nI released a startled yelp when he grabbed my wrist and pulling my arm up, placed my hand on his crotch. I could feel he was hard through his baggy jeans and noticed he wasn't small. \n\n\"Easy, Karma,\" he let my hand go, \"I'm not going to hurt you, I just want to have fun with you.\" He tried what he probably considered a sexy smile, \"It can be fun, trust me those kids you've been with don't know what to do with a hot little thing like you.\"\n\nI forced myself to keep my hand on his dick and reaching out with the other, grabbed the snap of his jeans.\n\n\"That's a good girl\" he told me. \"I knew you were a smart kid.\"\n\nMy hands were trembling and I tried to work myself up to pull his pants down and get this over with. I began to tug on his jeans and turning my head away I sought out the suitcases as an inspiration to do what I had to. Instead, my eyes found the picture of mom. I recalled her telling me of her troubled past and some of the terrible things she had done to get by. Removing my hands I shook my head. \n\n\"Kid, this is your last chance.\" He said in a tone that told me he wasn't kidding.\n\n\"You know.\" I fought to keep my voice steady. \"Like I said what comes around goes around and if you make me do this then something bad might....\"\n\n\"Karma, the only thing that should be cumming around is my cock all over your pretty face, now we both know you need this, so stop pretending you're not going to do it.\"\n\nI looked up into his eyes and taking a deep breath braced myself for what was to come and began to slide off the couch. \n\n*****\n\n\"Excuse me, Miss?\"\n\nI jumped at the sound of the voice in front of me, and then released a sound somewhere between a squeal and a scream at the feeling of someone grabbing my shoulder. Before my eyes were completely open I was bringing up the small can of pepper spray I'd fallen asleep with in my hand.\n\n\"Whoa!\" The man, who to my chagrin was a police officer, raised his hands, \"Easy Miss, I didn't mean to startle you.\"\n\n\"I...I'm sorry sir.\" I exclaimed, putting the spray down next to me on the bench I'd chosen as my bed last night.\n\n\"That's okay.\" He said, \"I shouldn't have touched you, but you know you're not supposed to be sleeping here, right?\"\n\n\"I know.\" I gave a small shrug, \"But I got thrown out of my apartment last night and I really don't have anywhere to go.\"\n\n\"Last night?\"\n\n\"Yes, I...I couldn't pay my rent.\" And had decided not to offer services for it I added to myself.\n\nHal had stared in disbelief when I'd stood up from the couch and grabbing my suitcases took them into the bedroom and began throwing my clothes and other small belongings into them. He watched me pack, probably hoping I would change my mind and when I dragged the suitcases past him and tossed my keys at him he declared, \"You'll be back you little slut and you better be crawling because it'll save you the time to get on your knees for me.\"\n\nI'd resisted the urge to tell him to go fuck himself. I was raised better than that. Well, okay, my throat was so tight I was afraid I would cry and wouldn't give him that satisfaction. I'd lugged the suitcases down the road and past the university, heading for the diner, figuring that wherever I stopped for the night I wanted to be close to work. When I could no longer keep the cases off the ground I spotted the benches in front of the Hilton and sat down planning on just catching my breath.\n\nBut by then it had been after eleven and the street was quiet and I'd decided to close my eyes and see if I could sleep. After all benches and I were about to become good friends. \n\n\"What's your name, miss?\" \n\n\"Karma, sir.\" \n\n\"Well Karma, you certainly don't look like the usual type I find on the benches, but I still have to tell you to leave. The manager of the hotel saw you and called it in.\" he shrugged, \"They're pretty snooty around here.\" \n\n\"Sorry.\" I said meekly and slipping the spray into the pocket of the jeans I'd slipped on over my shorts grabbed the handles of the suitcases. \"I...I won't do it again.\"\n\n\"You really have nowhere to go? No family or friends?\"\n\n\"No family and my friends can't let me stay, they all live on campus.\"\n\n\"Well I wouldn't suggest sleeping on benches. You'll get arrested in the decent parts of town and that would be a good thing compared to what might happen if you sleep in the park or other parts of town.\"\n\n\"I...I don't know where to go!\" I fought to keep from sobbing, how the hell was this happening to me?\n\n\"There's a woman's shelter over on Elmwood Avenue. They might be able to find you a place.\" He watched as I nodded dumbly still wondering if this wasn't just a bad dream, then asked, \"Have you eaten yet?\"\n\n\"No.\" My stomach reaffirmed that response with an ominous grumble and it hit me I had been too nervous to eat dinner last night and had not thought to grab any food from the cupboard.\n\n\"Well Crossroads is only a few blocks that way,\" he pointed across the street. \"They serve a hot breakfast and dinner.\"\n\n\"A soup kitchen.\" I said softly my eyes filling up. \"I can't eat there.\"\n\n\"You don't look like you've ever had to, but it's a meal.\"\n\n\"I just...can't.\" \n\n\"Your choice Karma,\" he shrugged, \"But let me tell you something, humble pie is a lot more filling than chewing on your pride.\"\n\nHis words stung and his face had changed from one of sympathy to a slight smirk. Probably thinking I felt I was better than my circumstances. I nodded and standing, grabbed the suitcases. ",
        "\"Thank you for your help.\" I told him, \"I...\"\n\nI stopped and my eyes widened as his words echoed in my head; humble pie, pie...\n\n\"Shit!\" I exclaimed, digging my phone out of my pocket and looking at the time.\n\n\"What's the matter?\"\n\n\"Oh no!\" \n\nIt was eight fifteen and I was supposed to be in work for seven. Since my car shit the bed, I'd been busing and was late almost every day and Billy kept threatening to fire me. Even if a bus drove by me right now it would have to go downtown first and I would get there well after nine. \n\n\"What is it?\" The officer repeated.\n\n\"I overslept and I'm late for work!\" \n\n\"You work?\" he raised his eyebrows skeptically.\n\n\"Yes!\" I snapped, \"I know what you probably think of me, but I'm not like the rest of the people with no place to go, I go to school too!\"I fought back another frustrated sob, \"I'm going to get fired!\"\n\n\"Where do you work?\"\n\n\"Kim's Diner and its ....\"\n\n\"I'll give you a ride, how's that?\" \n\n\"You will?\" I asked, surprised.\n\n\"Sure,\" he nodded, \"I know everyone thinks cops are around just to write tickets and act like jerks, but we are here to help when we can and at least I can help you, most people in your place I can't.\"\n\n\"Thank you officer!\" I had to resist the urge to hug him, \"This means so much!\"\n\n\"Well,\" he gave me a wink, \"I figured with a name like yours it can't hurt to be nice to you,\" \n\nIt was eight thirty five when I got dropped off by the officer who'd told me his name was Rob and also let me know that Crossroads had beds, but they were first come first serve and they may be full. That thought caused another feeling of the surreal; a homeless shelter? Nevertheless, I thanked him and after I got my bags out of the back seat, started to walk towards the entrance to the diner. I stopped when it dawned on me how it would look; coming in with the suitcases.\n\nDucking into the alley alongside the diner I walked around to the back and was relieved to see the back door was open to let some air in. I entered quickly and saw my luck had held out. Billy was busy in front of the huge grill and while his back was to me, I moved as quickly as I could across the room until I had reached the storage room. I slipped inside and closing the door fumbled around in the dark until I found the string attached to the lone bulb that lit the room.\n\nPlacing my grey suitcase on a box I opened it and removed the less wrinkled of my three black Kim's Diner t-shirts and stuck my name tag to it. I stripped last night's clothes off and pulled on my black jeans. I tugged the shirt over my head and frowned as I caught a whiff of something funky. I rolled my eyes when I discovered it was under my arms that smelled funky. \n\nGrabbing my deodorant the thought of where the hell was I going to shower tried to creep into my head. Talk about taking the little things for granted. With that in mind I took a minute to plug my lap top and phone into the outlet behind one of the long unused racks and closed the lid of the suitcase over them. Picking up a couple of empty boxes that I swore had been there since I started two years ago, I placed them on top of the case and shoved the other behind the rack. \n\nI let my hair out of its pony tail and trying not to think about the fact I hadn't washed it since the night before last, I peeked out of the room. Billy was now at the tall counter and yelling at Maria that the eggs had been there so long they were turning into chickens. Exiting the room, I closed the door and walked quickly up behind Billy as if I had just come in. \n\n\"Morning!\" I declared with false cheer.\n\nBilly turned around and seeing me began to clap, \"Way to go kid, you actually made it!\"\n\n\"I'm sorry! I missed the first bus and...\"\n\n\"Karma for the last two months you've been late more than you're on time.\" He pointed out while wiping his greasy hands off on an apron that looked as if it hadn't seen a washing machine in this decade. \n\n\"I know, I promise it won't...\" I stopped when he made a farting sound with his lips.\n\n\"Man if I had a buck for every time you said that, look, I like you, the other girls like you and the customers like you,\" he grinned, \"Especially one in particular.\"\n\n\"Oh, stop that!\" I waved my hand, \"I could be his daughter.\"\n\n\"If I could I'd be all over a girl my daughter's age,\" he sighed, \"But I suppose only way that would happen is if I paid for it.\"\n\n\"Well,\" I started to walk past him, \"Let me get out there and...\"\n\nI stopped when Billy put his hand up.\n\n\"Seriously Karma, it's not fair to Maria and Pat. I start you at seven because from seven to nine is our busiest time. We were so jammed today I had to go out and pour some coffee. Now I think we both know, no one wants to see my ugly ass out there.\"\n\n\"I'll be on time.\" I said, \"You have my word.\"\n\n\"Until tomorrow.\" He shook his head, \"I'm thinking of cutting one of your weekday shifts, Maria could use more hours and...\"\n\n\"No please don't!\" I couldn't lose any hours, my only hope of getting a place was to try to bank my pay and somehow live on as little as possible. \"I really need the money!\"\n\n\"Then you should be on time! Christ, you're over an hour late.\"\n\n\"I'll do better! I...I'm living closer now.\"\n\n\"You moved?\" he narrowed his eyes.\n\n\"Yeah, I'm over near...the Hilton!\"\n\n\"But you were even later today,\" he pointed out.\n\n\"Different route, this bus runs later and...\"\n\nHe was staring down at me and had crossed his arms over his chest. His body language was trying to tell me he was still mad, but his eyes didn't seem as angry.\n\n\"Please Billy?\" I pushed my lip out into a pout, \"Please give me another chance?\"\n\n\"Don't do that!\" he snapped.\n\n\"Do what?\" I made my already big brown eyes even wider.\n\n\"You know, that's not fair!\"\n\n\"I don't know what you mean, but I'm awfully sorry Billy, please, please?\" I was now using a little girl voice and with a disgusted grunt he threw his thumb over his shoulder,\n\n\"Get your ass out there and you better be on time tomorrow!\" \n\n\"Thank you!\" I stood up on my toes and gave him a peck on his unshaved cheek before heading past him,\n\n\"Well at least I can tell people a girl half my age kissed me today,\" he muttered.\n\n\"And for free,\" I added then quickly scooted through the swinging door and out into the diner.\n\n\"Well, look what the cat dragged in.\" Pat said from behind the cash register as I walked up to the counter. \n\n\"Yeah, I know, I'm late.\"\n\n\"And you do look like the cat dragged you in,\" she grinned at me, \"You're a mess honey, was he worth it?\" \n\n\"I was alone last night.\" I told her while grabbing menus to take over to a couple who were just sitting down.\n\n\"Please, over an hour late, no makeup, hair's a mess.\" She laughed, \"It's been a long time, but I remember those nights.\"\n\n\"Um, sure.\" I shrugged, \"You're right I stayed out all night. He gave me a ride in,\" I winked \"and dropped me off!\"\n\nPat laughed and gave me a smack on my ass when I walked by her and started over to the couple. \n\n\"Too late sweetie,\" Maria, smirked cutting in front of me and heading over to the table that was in my section.\n\n\"Number twelve is mine,\" I said just loud enough for her to hear.\n\nShe turned around so quickly I almost bumped into her and stuck her finger in my chest, \"Not when you're an hour late sweetie. Your ass should have been fired, but I guess Billy likes looking at your cute little ass.\"\n\n\"No, it's because I...\"\n\n\"I had to cover your section for the last hour and I'm taking this one too. I can't get any more hours cause of you so I may as well get some extra tips seeing you can't tell time.\"\n\nShe turned away and I noticed the people at a couple of tables near us were staring at me. I gave them a forced smile as if nothing were wrong and headed back to the counter.\n\n\"What's wrong with her?\" I asked Pat.\n\n\"She is.\" She laughed, \"You know Maria, not happy less she's not happy.\"\n\nI looked around and seeing the diner was a slower than usual for this time of day. rolled my eyes. I needed my tips now more than ever. Well I hadn't been kidding I would be closer to work from now on, the shelter was only a few blocks away if I could bring myself to go there. Grabbing a towel from under the counter I gave it a squirt of Windex and started wiping the already clean countertop for something to do.\n\n\"Besides,\" Pat continued, \"You were really late today and the place was swamped just before eight.\"\n\n\"Looks dead now.\" I glumly surveyed the mostly empty diner. \n\n\"It was a bunch of people all heading off on a tour or something. But you know why I really think Maria is mad?\"\n\n\"Why's that?\" \n\n\"Well,\" Pat began with a big grin, \"It's just before nine and I think Maria thought she would get a chance to serve your best regular.\"\n\n\"Joe?\" I was confused, \"Why is that a big deal?\"\n\n\"Karma, are you really that na\u00efve?\" she paused then with a laugh placed her hand on my arm, \"Never mind, I forget you really are oblivious.\"\n\n\"Thanks,\" placing the rag under the counter I started checking the salt and pepper shakers along the counter. \n\nApparently with nothing else to do at the moment Pat followed me.\n\n\"Don't take it the wrong way; I think its part of what makes you so sweet. So do you want to know?\"\n\n\"You're going to tell me anyway.\"\n\n\"Of course I am, when you get to be on the wrong side of sixty like me all you have is gossip.\"\n\n\"So cluck away then,\" I told her while opening a couple of jars of sugar to refill them. \n\n\"Honey, Joe's about five years older than Maria, he's good looking, he's a nice guy, he makes damn good money and ever since his wife past two years ago Maria's been trying to line him up in her sights.\"\n\n\"Oh.\" I nodded while pulling the bag of sugar out from under the counter and trying to pour it into the jar without spilling any. \"So why be rude to me?\"\n\n\"Joe asks for you specifically and that pisses her off because you have no interest and she does.\"\n\n\"So what am I supposed to do, let her take care of him?\"\n\n\"No, he's been coming here since the place opened, hell Billy's daughter Kim used to wait on him and his wife everyday and she moved to Florida had to be almost twelve years ago. He's Billy's best customer, rumor has it he even helped him get the loan he needed a few years back to stay open, who Joe wants, Joe gets.\"\n\n\"That must suck, coming here alone and missing his wife every day.\" I rolled my eyes looking at the sugar all over the counter. \"Don't know if I could do it.\"\n\n\"You're seeing it wrong, he had good memories with her here and its how he keeps them alive.\" She sighed, \"Remember you're talking to someone who lost their husband five years ago.\"\n\n\"Sorry. I didn't mean to sound like a jerk.\"\n\n\"You're not and I'm sure you have things that make you smile and think of your mom.\" Pat put her arm around my shoulders and said softly, \"She's proud of you Karma, school, work and you're the sweetest girl I know.\"\n\n\"I'm sure she would be proud of these days,\" I muttered slipping out from under her arm.\n\n\"As long as you do the right thing she will.\"\n\nThat caused me to pause. Pat was right, Mom would be more proud of me sleeping on a bench than blowing some pervert in trade for rent. \n\n\"Thanks Pat.\"\n\n\"For what?\" \n\n\"For what you said, I needed that.\"\n\n\"Okay, glad I could help.\" She stopped as Maria bustled past us, giving us her best, \"Must be nice to stand there and do nothing look\" when she'd past, Pat continued, \"But you never let me finish. Maria is mad at you because you're young, you're pretty, all the customers like you; especially the guys and\" she winked, \"Especially Joe.\"\n\n\"You too?\" I waved my hand at her, \"Billy made that same crack, Joe just likes to chat with me, he doesn't want to you know, do anything with me.\"\n\n\"Don't be so sure, Karma. He's single now, in his late forties, money, he's the perfect sugar daddy type.\"\n\n\"Joe's not like that.\" I snapped, \"He's a good man, not some pig.\"\n\nPat smiled causing her brown eyes to all but disappear in the wrinkles that action caused. \n\n\"Hmm, maybe it's not just Joe that has some feelings.\"\n\n\"Not true.\" I told her, making sure I said it calmly, \"I like him as a friend. He came to my mom's wake and funeral and sent flowers too. He's just a nice guy, why doesn't anyone ever think someone can just be nice?\"\n\n\"Because we've been around longer than you, but like I said, stuff like that is what makes you so adorable.\" She shook her head, \"And I was only kidding earlier, I know you weren't out screwing or on some bender, you were probably up all night studying.\"\n\n\"I might have been with a guy.\" I gave my head a shake,\" I am cute you know.\"\n\n\"Nope, you have no boyfriend and would never just hop in bed with someone you just met. Am I right?\"\n\n\"Right.\" I shrugged, \"What can I say, I'm a prude.\"\n\n\"Nah, just a nice girl.\" Pat laughed again, \"So I guess you prove your own point you make me believe you're that nice.\"\n\n\"Lead by example I guess.\"\n\n\"And just so you know, if Joe was interested it doesn't mean he's not nice. It means he's a nice guy who is into a nice girl.\"\n\n\"Joe's way too old for...\"\n\n\"Watch it honey, I got fifteen years on Joe.\"\n\n\"Okay, sorry.\" \n\nWe both looked up at the bells jingling, signaling the door opening and Joe walked in.\n\n\"Nine o'clock on the dot.\" Pat said, \"For over ten years you can set your clock by him.\" she nudged me with her elbow, \"You could learn from that you know.\"\n\nShe released an exaggerated sigh, \"I wouldn't mind being Joe's second wife that's for sure, but I'm thinking he's looking to go younger these days.\"\n\nI ignored her remark and watched Joe make his way through the diner. Despite the heat he was wearing a suit as he did every day. This one was basic black accompanied by a tie of the same color. The shirt however was a stunning shade of teal that seemed flashy for a guy in his late forties, but he pulled it off. Aside from the shirt everything about Joe was old fashioned and professional. \n\nHis shoes were always polished, his salt and pepper hair, which these days was leaning more towards salt, was brushed back with nary a hair out of place. He was always freshly shaved and his tie impeccably knotted even though he didn't go in until after ten these days. Something told me the tie was knotted well before he left his house and stayed that way until he got home.\n\n\"Hey Joe,\" Maria called out, \"Got an empty table for you right here,\" she followed that comment with a big smile as she leaned over and wiped the already clean table off.\n\nThat move caused her more than ample chest to almost fall out of the low cut black shirt she was wearing.\n\n\"Guess she's trying to interest him in today's special.\" Pat chuckled. \n\n\"Hey Pat, how about some more coffee?\" A voice called from the other end of the counter.\n\n\"Well gotta run, just watch the look on Maria's face when she gets blown off cause he don't want to be blown off.\"\n\nPat turned around and grabbing a pot of coffee headed down the other end.\n\n\"Jeez Karma, I think you scared away the business.\" Billy said, leaning his forearms on the window he placed orders on. Maybe you're bad Karma today.\"\n\n\"You've said that a hundred times, since I've worked here,\" I said without looking at him.\n\n\"Well do something good for once and I'll change it, how's that?\"\n\nI resisted replying to him. It wasn't about not giving him the satisfaction, but I knew he did it as part of his grouch persona he worked hard to keep up. He started to say something and I said, \"Yes sir, sorry sir, don't beat me sir.\"\n\nThat got a few laughs from the regulars at the counter, but I was watching Joe saying something to Maria. She was leaning with one hand on the table, thrusting her hip up while pushing her chest out. Joe flashed the big easy smile that was always either on his face or looking as if it were about to be. He said something to her and gestured towards the counter. \n\nMaria looked over at me and if looks could kill my ass would be six feet under. But when she looked back at him, she gave him a smile and nodded okay. Joe approached the counter and as he sat down, I walked over to begin our morning ritual. \n\n\"Must be nine,\" I said, \"You wouldn't be here a minute before or after. So,\" I gave a mock sigh, \"Whatever will it be today?\"\n\n\"Hmm,\" Joe made a show of perusing the menu as if he were going to order something different. \"Well now the special looks good; prime rib hash what do you think?\"\n\n\"Nope, that's how Billy gets rid of the prime rib he doesn't sell for dinner the night before.\"\n\n\"Oh.\" He nodded, \"Good looking out as you kids say. Well I guess that means I'll go with...\" he closed the menu and laughed, \"The sunrise special.\"\n\n\"Wow, you haven't had that since yesterday,\" turning I yelled, \"Billy, Joe just ordered.\"\n\n\"Sunrise special coming up!\" Billy shouted back.\n\n\"And to drink?\" I raised my eyebrows.\n\n\"I think I'll have a cup of me, how's that?\" \n\n\"Not funny today, or yesterday or a year ago.\" I told him, \"You need new material or at least one other joke.\"\n\n\"Keep it up the joke will be your tip young lady.\" He said, his blue eyes twinkling, \"So how's things?\"\n\n\"Same as yesterday.\" I lied while pouring his coffee.\n\n\"You sure? You look tired.\" I'd barely finished filling his cup when he lifted it and took two swallows of the hot coffee as if it were cold water.\n\n\"Studying.\" Boy this lying thing was getting pretty easy.\n\n\"You sure,\" he lowered the cup and his eyes probed mine, \"You look nervous and since when don't you have one of those things in your hair? I forgot what you call them.\"\n\n\"A scrunchi and I was in a hurry.\"\n\nHe'd raised his cup again and placing it back on the counter tapped it. \n\n\"Jeez Joe I've never seen anyone drink so much coffee so fast.\" I told him, refilling the cup.\n\n\"Guess I'm appropriately named,\" he grinned, \"Now how about you tell me what's wrong?\"\n\n\"Nothing at all.\" I said as my fingers found my locket and started rubbing it.\n\n\"Then why you rubbing your locket?\"\n\n\"Huh?\"\n\n\"You grab that whenever you seem nervous. In the world of poker it's called a tell, so fess up.\"\n\n\"Nothing really,\" I let the locket go, but my laugh sounded phony.\n\n\"School okay?\"\n\n\"School's great.\" At least that was not a lie unless I totally tanked my finals in two weeks My GPA would be close to four. \n\n\"Orders up Karma.\" Billy hit the bell behind me, \"Hey Joe, how's tricks?\"\n\n\"I'm neither a magician nor a pimp, so I wouldn't know.\" Joe laughed at his own joke.\n\n\"Not a comedian either,\" Billy told him, \"Good thing you don't have to be funny to count money.\" \n\n\"Or a chef to run a diner.\" Joe countered.\n\n\"Ouch,\" Billy laughed, \"Good thing I already spit in your eggs.\"\n\n\"In this place I heard that's called seasoning!\" one of the regulars called from down the counter.\n\n\"Funny,\" Billy muttered, \"But you guys all keep coming back.\"\n\n\"We come for the ambiance,\" someone yelled.\n\n\"I come for the company,\" Joe winked at me, \"And the view.\"\n\n\"I thought you came here cause you have OCD and can't change.\" I told him, but smiling nonetheless at the compliment.\n\n\"Views better over here.\" Maria said from the table behind Joe.\n\n\"Yeah, but everyone's seen it.\" Billy quipped causing half the diner to explode into laughter. \n\nTo avoid anymore jealousy on her part, I didn't look over to see the expression on her face. Instead I turned around and going to the window went to grab Joe's food. I knocked over a bottle of ketchup someone had left on the counter in front of it and bent over to grab it. Fortunately the lid was still on, but when I was picking it up, I looked into the metal fridge under the counter. In its reflection I could see Joe staring directly at my ass. \n\nOr he seemed to be, I really didn't think he had any interest in me. For the hell of it, I stayed bent over pretending to fumble with something and moved my ass back and forth slightly. I saw him grin and felt myself start to flush; he really was checking me out. Apparently so was someone else \"Hey Karma, pick something else up, that was the best show I've had in awhile.\"",
        "\"Knock it off, she's a good kid.\" Pat came to my defense.\n\n\"Yeah, they all are.\"\n\nIgnoring the remarks, I grabbed Joe's food and when I placed it in front of him; I saw he had killed another cup of coffee. I didn't need to be asked and pouring him a third cup remarked, \"Damn, Joe you must be up all night.\"\n\n\"Honey, its been a long time since I've been up all night.\"\n\n\"You mean you can sleep with all the coffee you...\" I stopped and felt the blush returning, \"Oh, um I get it.\"\n\n\"I don't.\" Joe smiled, \"That's why it's been awhile.\"\n\nI gave him an awkward nod and his smile widened, \"I love it when you blush, you truly are a breath of fresh air.\"\n\n\"Thanks, I guess.\" I looked around and seeing no new customers coming in leaned against the counter, after now business was a trickle until lunch and I had to leave at one for class, today would be a lousy day for tips. \n\n\"So you never told me what's wrong?\" Joe reminded me while spreading strawberry jam on his toast.\n\n\"I did, I said nothing.\"\n\n\"School's good?\"\n\n\"You asked that already.\"\n\n\"Is it,\" he lowered his voice, \"Your mom, you missing her?\"\n\n\"Every day.\" I said softly, \"But most days its good stuff and I'm okay.\"\n\n\"I know that feeling well.\" He frowned, an expression that seemed out of place on him. \"All too well.\" He shook his head as if trying to dispel the upsetting thoughts entering his mind then continued, \"Boy trouble.\"\n\n\"No, the only all nighters I have are from studying.\"\n\n\"Nice try, but I don't blush. Difference is I'm old and used up, you're way too cute to be spending every night alone.\" My face started to heat up again and he laughed, \"You are way too easy.\"\n\n\"Nope, I'm a prude remember?\"\n\n\"I prefer to think of you as a good girl, they're rare these days. So what's the problem? Billy treating you okay?\"\n\n\"As okay as he treats anyone,\" I shrugged. \"He rides me for being late, but I can't blame him.\"\n\n\"Well that will change now that you moved.\" Pat said walking behind me.\n\n\"How did you know I moved?\" \n\n\"Heard you with Billy,\" she shrugged, \"Remember all I have is gossip.\"\n\n\"You moved?\" Joe asked, \"When?\"\n\n\"Um, yesterday, that's why I look kind of crappy.\"\n\n\"Then why didn't you say that?\"\n\n\"I don't know.\"\n\n\"Where did you move to?\" he picked up his cup and I resisted grabbing my locket while watching him chug the coffee.\n\n\"Closer.\"\n\n\"Closer where?\"\n\n\"Near the Hilton.\"\n\n\"Are you getting something off the rent through the school like the other place?\"\n\n\"No, not really.\"\n\nThen why the move?\" his eyes narrowed, \"Everything okay?\"\n\n\"I, well I had a problem with the landlord and decided to leave.\" At least that was pretty much the truth.\n\n\"Is it settled, you need any help?\"\n\n\"I'm fine, Joe really.\"\n\n\"Okay, well just make sure if you need a little help you ask okay?\"\n\n\"Okay.\"\n\nI poured his fourth cup of coffee and wondered if Joe would lend me a month's rent and if he did would Hal take it? No, even if he did, I couldn't pay it back and would be right back at square one next month. \n\n\"So is your new place nice?\" Joe asked, already bringing the mug to his lips.\n\n\"Yeah,\" I gave him what I hoped was a convincing smile; \"It's a lot bigger than my old place and has a great view of the park.\"\n\n*****\n\nI looked up from my laptop and checked to see how much time was left on the dryer. I saw it was a half hour and leaning back in the chair thought about how much I used to hate the Laundromat. I'd always thought it was a long boring ordeal, but since I'd had nowhere to live I had come to appreciate it as a place I could stay for a couple of hours and not be bothered. I'd started doing laundry more often so I knew I had somewhere to go for a little while. \n\nIt had been three weeks since I'd decided not to whore myself to Hal and things hadn't been easy. Because I had a job I knew I wasn't as bad off as the other people I had seen sleeping on benches and in the parks. I could at least buy a cup of coffee and a meal if I had to. The first couple of days I'd been homeless I had lugged my bags everywhere with me until I remembered the gym I had a membership to offered lockers. \n\nIt was twenty dollars a month to rent one and although it hurt to part with the money it was worth it. The gym was a twenty minute walk from Kim's and each day I got there early, did a half hour work out to not look suspicious and after using one of their showers grabbed my clothes for the day out of the locker, along with my book bag and lap top and headed over to work. \n\nThe four days I worked were easier on me. The six hour shifts gave me a place to be as well as a way to try to save enough to get into a small apartment. I was also able to eat a meal there and make a couple of sandwiches for later. Two of those days I had class and that was another three hours I wasn't wandering around. The rest of the week I did what I could to try to hang out with friends from school, savoring every moment I could be in someone's house.\n\nHere and there I got lucky and was able to sleep over, but didn't want to look bad and keep asking. After four nights of sleeping outside, I swallowed my pride and went down to Crossroads. I got lucky the first week, getting a bed each night, but more and more families were coming in and those with children received priority for the beds. \n\nWhen they had no room I slept wherever I thought I could while still being somewhat visible. There were far too many stories of women being beaten and raped in the park at night to try that so I spent nights sleeping sitting up on the benches of bus stops and a couple of times at the train station until the security guards began to recognize me and started throwing me out. Speaking of being recognized I had been lucky so far that no one I knew had ever seen me camping out anywhere.\n\nTonight I was going to try the shelter again. It was only four and once my laundry was done I could get there by five. If they had no beds I could at least get a decent dinner then go wandering off in search of somewhere not the street. I was in a catch twenty two with the money I did make. On one hand if I put most of my money in the bank I could afford to get into the building near the diner that rented weekly apartments. The rent was literally my entire paycheck, but I would have a roof over my head and only have to worry about eating. \n\nThe semester was over in a couple of weeks and if I could squeak by for the summer I would be able to get into an apartment similar to where I had been with a roommate. But that was going to be a twelve weeks stretch of hoping my tips would give me enough to pay rent every week. The other problem was I had to spend some money. I needed clean clothes and bus fare to get to school. A few nights I had missed dinner at the shelter and bought something. I would only spend a couple of dollars, but they added up.\n\nI jumped when the buzzer on the dryer went off and taking my time folding the clothes thought for the thousandth time that I was lucky it was decent weather, this would be hell in the winter. I packed my clean clothes in the smaller of my suitcases I had brought with me and unplugging the lap top and my phone from the wall left the Laundromat and headed for the shelter. I made good time walking and got there before there was too much of a line.\n\nI walked up behind an old man who smelled like he'd rolled around in booze and as I always did put my head down, trying to avoid eye contact or conversation with anyone. It's not that I thought I was better than they were, but I didn't look like them and had gotten some unwanted attention from some of the guys. More than once their comments and lewd stares had caused me to leave the shelter and head off without eating as I didn't want them sitting with me or trying to follow me.\n\nI glanced up when the guy in front of me began shuffling forward and saw they had opened the doors. Keeping my eyes lowered I followed the line into the large cafeteria. I picked up a tray and staring down at it tried not to think about unfair this was, that I tried to do the right things and had ended up like this. The fact I had gotten tossed for not wanting to give an asshole a blowjob added to my frustration. That pig had a place to live and here I was taking free food from a shelter. \n\nI picked up a bottle of water from a large barrel and placing my tray on the metal counter looked down at what the options were. I had decided on what they passed off as lasagna when the person serving it walked away, heading down to the other end of the line to pass out pieces of fruit.\n\n\"Hey, can we get someone else out here?\" A woman server called towards the kitchen, \"I need another pair of hands.\"\n\nI had just reached her and held my tray up for her to put a couple of tablespoons of corn onto it when I saw an all too familiar face come out of the back room, slipping on a pair of rubber gloves and picking up a spatula; it was Joe. I'd heard him mention he did some volunteer work, but he had never said where. My stomach lurched and I started to step out of the line, but it was too late; he was looking right at me. His blue eyes widened when he recognized me, \"Karma? What are you doing here?\"\n\n\"I...uh....\" I could feel my face burning and dropping the tray on the counter turned and ran, tears off humiliation already flowing down my face as I shoved past the people filing though the door. I gained the street and with my suit case clutched against my chest, ran down the street. I had no idea where I was going, but at this point didn't care. I had never been so embarrassed in my life.\n\n*****\n\n\"Karma!\"\n\nI jumped at the sound of Billy behind me, but didn't turn around. Instead I continued to load the dishwasher, hoping he would leave me alone, but knowing he wouldn't.\n\n\"What are you doing back here?\"\n\n\"The dishes.\"\n\n\"No shit.\" Billy grunted, \"Look at me.\"\n\nWith a sigh I turned to face him.\n\n\"Why aren't you out there?\"\n\n\"Well the dishes were piling up and...\"\n\n\"There's a good crowd out there, Maria just took your table again because you weren't around.\"\n\n\"That's okay.\"\n\n\"Hey, you feeling alright?\"\n\n\"Yeah, why?\"\n\nBilly peered closely at me and shook his head, \"You look like shit kid.\"\n\n\"Thanks.\" I said dryly, but knew he was right.\n\nI'd ended up going where I always did when I was upset these days, the cemetery. I'd sat and cried by the side of mom's grave and wished I could talk to her. After awhile I'd calmed down and debated trying to stay in the cemetery for the night, but in the end the thought creeped me out and I ended up sitting in Barnes and Noble, nursing a coffee and trying to study.\n\nWhen the store closed at nine I went and sat at the bus stop and tried to sleep. My mind kept picturing the mixed emotions of surprise and concern on Joe's face and I thought about not going to work the next day. There was no way he would not bring it up and I didn't want anyone's pity. I could take care of myself. In fact I had been taking care of myself since mom passed and even now I was getting by. \n\nI dozed off at some point and was awoken by a man's voice. When I opened my eyes I found myself staring at a tall guy in a suit who was grinning down at me and asked me if I wouldn't rather sleep in a bed. As my hand strayed to my pocket, seeking the pepper spray, he went on to tell me how he could rent a room at the motel down the street and we could spend the night partying.\n\nI'd told him no thanks and when he looked annoyed I'd brought out the spray. He rolled his eyes and backed off, telling me I was pretty fussy for a street slut and got in his car and took off. I was going to leave when an older woman who'd spent a couple of nights sharing the stop with me showed up. She said hello, gave me a smile that would drive a dentist to drink and placing the large garbage bag she lugged around all the time under the bench curled up and was immediately asleep.\n\nStrangely I took some comfort from her presence and as I drifted off wondered who she was and if she had any family. The alarm in my phone went off at five am and I remained on the bench, once again contemplating calling out, but I needed the money. I rose and seeing the woman was awake watched as she rummaged around in her bag. She had brought out half of a bagel and looking over at me spoke, \"You want a piece? They only threw them away yesterday.\"\n\nI shook my head and started to walk away. I stopped and reached into my pocket. For fear of being robbed while on the street I kept most of my money in the bank, but had twelve dollars on me. It wasn't much, but it occurred to me it would seem a small fortune to a woman eating food she'd picked from the trash. As bad as things were I was heading off to work where I would eat for free and get some food for later tonight.\n\nAs bad as I had it, I was much better off than this poor soul. At least I knew worst case scenario I would spend a summer like this, she would most likely spend the rest of her life out here. Turning around I quickly approached her and put my hand out offering the money. Her eyes widened at the sight of a ten and started to reach out, then stopped.\n\n\"That's yours.\" She told me, \"Go get some food, you're too young and pretty to end up looking like me.\"\n\n\"No, it's yours I have a place I can go eat and I'll have a place to live soon. I want you to have it.\"\n\nThis time she didn't hesitate and taking the money from my hand placed the other one over mine. Her skin was hot and clammy, but when she squeezed my hand she gave me a smile, that in spite of its lack of hygiene was genuine and touched her usually dull brown eyes. \n\n\"God bless you honey and your mother, she raised a good girl.\"\n\n\"How do you know I was only raised by my mom?\" I asked.\n\n\"Women teach grace, men teach pain.\" Her eyes darkened and she released my hand. \"You're better off with just your mom. I bet she's proud of you.\"\n\n\"She passed away.\" Even as I said it I wondered why I would bother telling this woman about my mother.\n\n\"Doesn't mean she can't be proud.\" She smiled again, \"In fact she's even more proud because she can see everything you're doing.\" She tucked the money away into the shapeless black sweater she always wore no matter how hot it was. \"What's your name honey?\"\n\n\"Karma.\"\n\n\"That's an odd name, but a good one for you.\" She nodded, \"That means something good should be coming your way soon.\"\n\n\"Hello? Kid you in there?\"\n\n\"Huh?\" I blinked my stinging eyes and realized I'd completely zoned out on Billy.\n\n\"I asked if you were sick?\"\n\n\"No, I'm not sick,\" I spoke up quickly knowing if he thought I was sick he would send me home, well if I had one anyway, because I worked around food.\n\n\"You look it,\" he frowned, \"It is, you know....that time?\"\n\n\"No. I just figured I would do the dishes.\"\n\n\"Karma for the last three weeks you've begged for extra hours and done everything short of dressing like Maria to get tips, why are you back here?\"\n\n\"I...I just have some things on my mind and want to be alone.\"\n\n\"Well you can be alone all you want after one, now get your ass out there.\" He pointed at the large round clock hanging over the doorway, \"Your favorite regular is due any minute.\"\n\nThat's what I was afraid of. Nodding meekly to Billy I turned the dishwasher on and walked through the swinging door. I poured refills to a couple of people while working my way down the end of the long counter to where Maria was leaning on the counter flashing her cleavage to a table full of construction workers.\n\n\"Hey Maria.\" \n\n\"Why hello princess,\" she gave me a mock curtsey \"What can I do for you?\"\n\n\"Wanna switch ends of the counter?\"\n\n\"No, I....wait, what?\"\n\n\"I always have that end, I thought we could switch.\"\n\n\"Is this a joke?\" she asked, crossing her arms and pushing her breasts out even more. \"You know what time it is right?\"\n\n\"I...I do and I know you're kind of interested in Joe so I thought you could wait on him.\"\n\n\"What's in it for you?\"\n\n\"Doing a good deed I guess.\" \n\nMaria stared suspiciously at me for a moment, and then smiled, \"I don't know what you're up to, but I'll take you up on it.\" Giving her long dark hair a toss, she added, \"Maybe I can show Joe its okay to try something different.\"\n\n\"Hey Karma,\" One of the construction workers called out. \"You work this end you have to wear a shirt like Maria's.\"\n\n\"She wouldn't have anything to hold it up.\" Maria said over her shoulder as she sauntered down my end of the counter.\n\n\"Just can't be nice to some people.\" I muttered.\n\nThe bell rang and I looked over to see Joe walk in; this time sporting a pink shirt and a black and pink striped tie to go along with his plain black suit. I put my back to that end of the counter and turning my attention to Maria's table asked, \"You guys need anything?\"\n\n\"I do,\" one of them said patting his leg, \"A cute little brunette to keep me company.\"\n\n\"Knock it off,\" The guy across from him said, \"She's a nice girl, not the pigs you have to settle for.\"\n\n\"You date pigs?\" I asked. \"Wow, that's cruelty to animals.\" \n\nI allowed myself a satisfied smile as the three guys began laughing at their friend and went back to leaning on the counter, careful to not look over my shoulder. I opened the cooler in front of me and began lining up the bottles of juice and milk to stay occupied. \n\n\"Hey Princess.\" Maria said from directly behind me.\n\n\"What?\" I asked without turning around.\n\n\"Thanks anyway, but I guess Joe likes them young and cute.\"\n\n\"What do you mean?\"\n\n\"What do you think? He's asking for you.\"\n\nWith a feeling of resignation I slowly made my way over to Joe already feeling my face flushing.\n\n\"So,\" I said with what was probably a pathetic attempt at a smile. \"What'll it be today?\"\n\n\"Hey,\" he pointed at me, \"I thought we were friends?\"\n\n\"We are.\" I hoped we still were anyway.\n\n\"Then why would you do that to me?\" he spread his arms out dramatically \"What did I do to you?\"\n\n\"I...I'm sorry Joe.\" I stammered, \"I...shouldn't have...\"\n\n\"I mean trying to stick me with Maria? Man, I thought you were a nice girl!\"\n\nI stopped speaking and stood there staring at him. His blue eyes were as bright as ever and he burst out laughing, \"Just messing with you! Now how about the special and a cup of me?\"\n\nFeeling relieved I widened my eyes and gave a mock gasp, \"The special? Really? You're getting to be a rebel in your old age!\" Joe winked at me and as I poured the first of the four cups he would drink I felt a wave of gratitude that he wasn't going to bring last night up. I was still embarrassed, but at least he wasn't going to make it worse on me. From there it was the typical morning visit; Joe drank a ton of coffee, asked about my classes and bitched about all the old stiffs he worked with.\n\n\"I'm way too young to be hanging around with these people.\" He said at one point, \"And the women? All they care about is my portfolio and my life insurance policy. I should start hanging around with girls your age.\"\n\n\"Better bring your blue pills.\" I told him.\n\n\"I am proud to say I don't need those.\"\n\n\"Oh, no?\"\n\n\"Nope.\" He thumped his chest \"As soon as my hand gets close I'm as ready as ever.\" \n\n\"You know, it doesn't have to be your hand,\" I pointed down to Maria, \"I think she would be happy to volunteer.\"\n\n\"I'll stick with my hand; I know where it's been.\" \n\nI laughed and glancing at his watch Joe said, \"Well I have to get going, maybe I'll come back tomorrow.\"\n\n\"Maybe?\" I raised my eyebrows.\n\n\"Maybe.\"\n\n\"Sometime around nine maybe?\"\n\n\"I'll try.\"\n\nJoe picked up the check which was for seven dollars and put a twenty on the counter.\n\n\"I'll get you some change.\"\n\n\"It's all set,\" he slid off the stool.\n\n\"That's too big of a tip Joe.\" I shook my head, \"I can't take that.\"\n\n\"You will.\" he said and giving Billy a wave turned and walked out of the diner.",
        "I stared down at the twenty knowing he'd given me a few extra dollars because of last night. My eyes narrowed when I noticed a paperclip attached to the twenty. Picking it up I turned it over to see a piece of paper clipped to the back. On it was a hand written note.\n\nKarma, I consider you a friend and value that friendship, if you value mine you'll meet me at two at Panera. Please come, I will be hurt if you don't. Joe.\"\n\n*****\n\nI sat at the corner table in Panera bread idly stirring the tea I didn't feel like drinking and trying to avoid making eye contact with Joe who had just come in and sat down across from me. We sat there for a couple of minutes the only sound being his placing his mug on the table after practically chugging the coffee he'd brought over with him. Finally he cleared his throat and when my only reaction was to begin toying with my locket he broke the silence.\n\n\"Karma, what were you doing at Crossroads last night?\"\n\n\"Well, I...\" I was already blushing, \"Money's been tight and I...I figured I could get a free meal and...\"\n\n\"So you went to a homeless shelter? Try again.\"\n\nWhen I didn't speak he finished his coffee in one long swallow and asked, \"So where is your new place?\"\n\n\"I told you it's near...\"\n\n\"What's the exact address?\"\n\n\"I moved into William's hall.\"\n\n\"Really? That's a little pricey for you.\"\n\n\"It is, but I had to move in a hurry and the rent eats up my entire check and I couldn't afford food this week so...\"\n\n\"I know Jack Williams.\" Joe said, \"He's one of my clients, once offered me a chance to buy into the building. I checked it out pretty thoroughly. So tell me what floor are you on?\"\n\nI forced my hand away from my locket and staring into his eyes answered, \"The fourth.\"\n\n\"Ah, that's not too expensive; they're only one bedrooms there.\"\n\n\"That's what I have, but its expensive for me and...\"\n\n\"The only one bedroom's in that building are on the first floor.\" He sighed, \"Why are you lying to me Karma?\"\n\n\"I...I just don't like people to know my business.\"\n\n\"Karma, are you living in the street?\" Leaning forward he put his hand over mine, \"You can tell me, I'm not going to judge you, but I'm worried about you.\" \n\nI could see he was sincere and had to admit his hand on mine had a comforting effect. \n\n\"Yes, I...I couldn't pay my rent last month.\"\n\n\"You lived there over a year; the landlord wouldn't work something out with you?\"\n\n\"He offered a deal, but I didn't like the terms.\"\n\n\"What do you mean?\"\n\nTaking a deep breath I told Joe everything. From how Jen screwed me, to Hal's offering a discount for giving him a blow job. I described how I had been getting by the last few weeks and by the time I was done my eyes had filled up and I was struggling not to cry. The entire time Joe kept his hand over mine and more than once I noticed a couple of people staring. I idly wondered if they thought I was his daughter or his girlfriend. I hoped the former because it would bother me for people to think of him that way.\n\nWhen I had finished he squeezed my hand before releasing it and leaning back against his seat. He picked his cup up and frowned when he saw it was empty.\n\n\"That's the problem with this place, self service.\" He placed the cup on the table and began tapping it while he appeared lost in thought.\n\n\"I'm sorry I ran out on you. I was just so humiliated.\"\n\n\"I understand. What I don't understand is why you didn't say anything.\" He spread his hands out. \"You know I would have helped you, I could have lent you some money.\"\n\n\"But how would I pay it back? Then I would be in the same boat the following month.\"\n\n\"I have plenty of money you could have paid me back whenever, or never for that matter.\" \n\n\"But I do.\"\n\n\"So your plan is to what? Finish school living in the street?\"\n\n\"No, in another two weeks I should have enough money to pay security and two weeks rent to get into the Ivy. Then...\"\n\n\"The Ivy? That's in one of the worse places in town!\" he rolled his eyes, \"You're safer on the street in the neighborhood then you would be in an apartment there.\"\n\n\"But I can afford it.\"\n\n\"You can?\"\n\n\"Mostly, I mean I wouldn't have much left, but I already have my name in to get into a place like where I was with a roommate.\" \n\n\"So you'll live in a shitty place and cross your fingers you can eat for the next three months?\"\n\n\"Well....\"\n\n\"And what about next semester's books? If all your money is rent how will you buy them?\"\n\n\"Oh, I didn't think of that.\" I frowned.\n\n\"Karma, here is what I would like to do.\"\n\n\"I don't want money Joe.\" I crossed my arms and shook my head hard enough to cause my pony tail to swing back and forth. \"I can't pay you back and I don't want a hand out.\"\n\n\"I'm not going to give you money.\"\n\n\"I don't want you paying for an apartment for me either.\"\n\n\"Not that either. What you're going to do is move in with me for the summer.\"\n\n\"What? I can't do that!\"\n\n\"Why not?\"\n\n\"Well because...\" I paused trying to think of a good reason other than I didn't want people to think anything was going on. Coming up with nothing I went with that, \"What would people think?\"\n\n\"What people?\" he waved his hand, \"Billy and that slut Maria? If that's what you're worried about who says they have to know.\"\n\n\"What about your neighbors?\"\n\n\"The guys will think wow good for him, the women will think...\"\n\n\"You're a pig and I don't want that. You're a nice guy and it would bother me for them to think you're a sugar daddy.\"\n\n\"Wouldn't bother me,\" he laughed. \"Hey if anything it would help. Half the women there are my age and single. A couple of them are after me to the point they make Maria look subtle.\"\n\n\"So why not have some fun then.\"\n\n\"That's my business!\" He snapped with an uncharacteristic heat.\n\n\"Sorry.\" \n\n\"No, I'm sorry it's just I get that question a lot. I guess my wife dying is supposed to be a license to act like a dog in heat. Anyway don't worry about the neighbors.\"\n\n\"But...\"\n\n\"Look, five years ago when my daughter Karen graduated, Laura and I thought she was going to come back home for awhile. I had most of the basement turned into a three room apartment with its own bathroom and a separate entrance. She ended up staying in California and we never bothered renting it. Anyone asks I'm renting it to a college student.\" He shrugged, \"The fact you're very attractive will cause some talk, but it's not like we're in the same space.\"\n\n\"I can't pay you much.\"\n\n\"I don't want your money. You live there for the summer, bank your money and come fall you move in with someone and can afford your books.\" He smiled, \"I never did anything with Karen's Toyota. I keep it as a spare for when mine is in the shop; you can use it if you want.\"\n\n\"Joe I can't take that from you at least not for nothing. I don't want handouts.\"\n\n\"It's a hand up. Dinner at Crossroads is a hand out.\"\n\n\"Ouch.\" I clutched at my chest.\n\n\"Well stop being stubborn.\" He pointed at me, \"Besides, it won't be for free.\"\n\n\"You'll take money?\"\n\n\"No, I'll take trade.\"\n\n\"What?\" My eyes widened.\n\n\"Not that!\" Joe exclaimed and for the first time since I knew him he began to blush, \"Jeez I should have known better after the story you told me.\"\n\n\"Sorry, I shouldn't have thought that.\" I sighed, \"Not thinking straight these days.\"\n\n\"Stress, and sooner or later it will affect your grades. You need this Karma, its okay to need something.\"\n\n\"So what's the trade?\"\n\nJoe grinned and for a moment I found myself thinking that if he had wanted what Hal did there was a chance I might not be so quick to say no. Joe was a good looking man and the fact he was so nice made him that much more attractive. I blinked and rubbed at my eyes; where the hell had that come from? Then again I hadn't been with anyone since I'd broken up with Rob six months ago. \n\n\"Well I know looking at the way I dress you would think I'm a neat freak.\"\n\n\"Yup.\" I agreed looking at his still impeccably knotted tie.\n\n\"But I'm only that careful with my personal appearance at home I'm pretty sloppy. I had a cleaning lady, but she left the agency for a permanent job. So I figure you can do the cleaning.\"\n\n\"I could do that.\" I nodded beginning to consider the idea.\n\n\"Also I can't cook to save my life and eat way too much take out so how about you make dinner every night?\"\n\n\"I'm not the greatest cook.\" I noted.\n\n\"If you can make more than grilled cheese you have me beat.\"\n\n\"Then I'd be able to cook.\" I laughed.\n\n\"One more thing.\"\n\n\"What?\"\n\n\"We eat together.\" His smile faded. \"Dinner is the time of the day that I feel alone. I get up early go for run, go to the diner then work all day. But when I'm home I stop and,\" he shrugged, \"I miss having someone to talk to. So,\" the smile returned, \"Now you see my ulterior motive. I am a sick man who is looking to make you endure my boring conversation and bad jokes.\"\n\n\"You're not boring at all.\"\n\n\"What about the jokes?\"\n\n\"You're not funny at all either.\" I laughed and after trying to keep a straight face he did as well.\n\n\"See that's what I want, the house is like a mor...\" he caught himself. \"It's too quiet.\"\n\n\"Joe?\"\n\n\"What are you going to come up with now?\" he rolled his eyes, \"never met a twenty year old who worried so much.\"\n\n\"Twenty one last month.\" I said indignantly.\n\n\"Oh! I forgot, then we can have wine at dinner and I won't feel like I'm corrupting a minor.\"\n\n\"Joe, why are you doing this?\"\n\n\"Because we're friends and friends help friends.\"\n\n\"Yeah, but it's a big deal.\"\n\n\"Karma, let me bore you with a little bit about me. I am a lucky man for the most part. My father had money and I never wanted for anything. I went to a private high school where I met the woman who became the love of my life and eventually my wife. I went to a good college and landed a great job. I live in a beautiful home, raised an amazing daughter and make damn good money doing what I enjoy. In fact up until Laura passed the word I always used was blessed.\"\n\nHe paused and once again staring wistfully at his empty cup sighed, \"But my grandfather who started the old family business never wanted my father to be spoiled and made him work as well as give time to charities. My father did the same. As a teenager I had part time jobs and every Sunday my father took me to the soup kitchen he volunteered at and we would help serve dinner, something that as you saw I still do as well as a few other things when I can.\"\n\n\"That's really nice.\"\n\n\"The reason my father said we did this was twofold. One was too give back. We'd been fortunate and it was only right to try to share some of that fortune. The second was to teach humility. To spend time with people to whom a lot of people in our class so to speak would look down upon. The only difference between those people and us was who we were born too and some good luck. Without either we could be them. So I do what I can to help those who need it.\"\n\n\"That's...\" I started to choke up, \"That's really nice Joe. Seems like all I hear about are jerks like Hal.\"\n\n\"Hal will get his.\" Joe grunted disgustedly, and then grinned, \"But I shouldn't have to explain Karma to you now should I?\"\n\n\"I guess not.\"\n\n\"Why did your mom name you that?\"\n\n\"That's my business.\" I gave my hair a toss for emphasis.\n\n\"Oh, touch\u00e9,\" He nodded, \"Okay, maybe another time. So deal? You move in?\"\n\n\"I...\" he slapped his forehead when I hesitated.\n\n\"Karma, think of your mom.\"\n\n\"That's not fair.\"\n\n\"Life isn't all the time as we both recently learned. But don't forget I met her a few times. I thought it was great she would drive across town to come visit you while you worked. When you were busy I had time to talk to her and she was so proud of you said you were everything she always wanted to be. You were everything to her.\"\n\n\"And she was the same to me.\" This time I lost the fight and could feel the tears on my cheek. \n\nJoe removed his yellow handkerchief from his pocket and reaching out gently wiped the tears from my cheeks. It was a sweet gesture which for some reason caused me to cry a little harder.\n\n\"I'm sorry, I'm not trying to upset you, but ask yourself, would your mother want you on the street or in the home of someone who can do what she can't anymore, look out for you?\" \n\nJoe put the handkerchief in my hand and as he leaned back I dabbed at my eyes hoping people weren't watching. His words had hit home; mom would want me to do the smart thing or as she would always say the next right thing. Joe was right, although not drastically my grades were down a little and no doubt would continue that way. What was I going to do study for finals at the bus stop? Pulling myself together I nodded, \"Okay I'll move in.\"\n\n\"Good.\" He smiled, then snapped his fingers, \"Oh I forgot, there is one more thing you're going to need to do.\"\n\n\"What's that?\"\n\n\"The rule is that at dinner you have to laugh at one of my jokes. So what do you say?\"\n\nWith a mock sigh I shrugged, \"Maybe the park bench isn't so bad after all.\"\n\n*****\n\nI pulled the six year old red Camry into the driveway and as I did every day, smiled. I had moved in with Joe a little over a month ago and still loved the sight of the large blue colonial style house. Even though I knew it wasn't mine and I was only staying for the summer I found it hard to believe I was living in a home this nice. Mom had done well enough to buy a small condo in a good area, but to me condo's were little different from apartments; this was a home! \n\nI got out of the air conditioned car and blinked at the wave of heat that assaulted me. It was unseasonably warm for the end of June, but that caused my smile to spread. Joe hadn't mentioned he had an in ground swimming pool and tonight would be another night for a lazy early evening swim. Walking up the driveway towards my back entrance I saw Ralph, the next door neighbor watering his flowers.\n\nHe was watching me as he always did and I gave him a big wave. He waved back and once I passed him I could feel him staring at me. I was wearing a cute little black sundress that displayed quite a bit of my long legs and the heeled sandals I was wearing did good things for them. I'm sure Ralph liked what he saw, but knew not anywhere as much what he would see when I went swimming.\n\nI had splurged on a new red bikini and although it was not one of those strings that some of the girls wore, it did show me off quite a bit. I'd caught Ralph, as well as George, the neighbor on the other side, watching me every time I lay out to catch some sun. As I figured, Joe's male neighbors were very friendly, but their wives all but meowed whenever they saw me. In the beginning I did feel bad about Joe's reputation, but he made it pretty clear he was getting a kick out of people thinking he had a little trophy girl as he called it living with him.\n\nStill, when I occasionally spoke to the neighbors I stressed how much I loved the little apartment I was staying in and even though I didn't go downstairs for the night until late, I always made a show of using my entrance. That wasn't a lie; the apartment was fantastic, the three rooms took up most of the basement and were completely furnished, including a flat screen TV and a nice desk to use for studying. \n\nThe semester had ended two weeks ago so I wouldn't be using the desk too much anymore, but that would leave me more pool time! Although I had felt odd moving in, Joe had been right. I was able to sleep soundly and get back to focusing on my classes. I'd aced my finals and finished with my highest GPA to date. The use of the car was even better than the pool. I had been busing for months and had forgotten how good it felt to drive. \n\nI hadn't been late for work since I'd moved in and now got a kick out of seeing Joe before I left in the morning then seeing him at the diner and playing out our usual routine. We had both agreed it wouldn't be a good idea to say anything and it was kind of fun to play it up and feel like I knew something others didn't.\n\nI went to put my key in the door and dropped it. When I bent over to pick it up I could see Ralph staring and realized the back of my dress had risen. I grabbed the keys and quickly turning waved again so he would know I caught him. I saw his eyes widen from across the driveway and even as he gave a weak wave back he turned and headed into his back yard.\n\nI laughed while letting myself in and tossing my purse on the small coffee table walked through the apartment and headed upstairs. It dawned on me that in the past I had always felt funny when I noticed someone looking at me, but lately, as long as the guy didn't look creepy or add a lewd remark to his stare, I was starting to get a kick out of it. Especially by the pool and even more so when it was Joe I noticed looking. \n\nJoe didn't swim much, but enjoyed sitting in a lounge chair while reading the stock reports he brought home with him or a magazine. The first few times I'd gone swimming it seemed every time I looked his way, he seemed to look away. In the beginning I thought I was imagining things. I'd been listening to Pat, Billy and Maria bust me up for months that he had a thing for me and figured it had gotten to me. \n\nBut after a few times I started trying to catch him; I made sure I was lying on the side of the pool near the sliding glass doors and if the sun was just right I could see him reflected in the glass. I would keep my back to him and make a show of stretching. Sure enough his eyes were looking straight ahead, the magazine leaning against his chest as he stared. Once I knew I found myself uncharacteristically showing off. \n\nI would stretch my legs out and slowly rub lotion on them and then roll over on my stomach and kick my legs back and forth while flipping through a magazine. Once I had wondered what he would do if I asked him to put lotion on my back. I drew the line at that; there was a difference between a little tease and being too forward. Letting myself into the kitchen I went over to the fridge and opening it peered in to see what I felt like making for dinner.\n\nAs I perused the contents of the freezer, I recalled how although I'd not pulled the lotion stunt in real life I'd done it a few times in my sleep. I tried to shake that thought off, but it wasn't easy. Fact was Joe wasn't the only one doing a little peeking. I'd known he was an attractive guy for his age, but had now changed that to being good looking period. \n\nSeeing him around the house in a t-shirt and jeans I noticed he was in pretty good shape and true to his word he did go running every morning. I'd only seen him without a shirt a couple of times when he did take a quick dip in the pool and had to admit the sight was far from unpleasant. Of course neither of us said a word about it or even made any jokes. If he felt as I did, he probably felt it didn't seem right. \n\nI had no illusion he was interested. But was pretty sure he didn't mind the occasional distraction of checking out his young boarder. But the fact I'd had a couple of far from innocent dreams about him did bother me a little. Maybe it was time to get out and have some fun. There were a couple of guys at school that had given me their number, but anytime I thought of calling, I ended up changing my mind and hanging out with Joe.\n\nJoe had the same easy going personality at home as at the diner and his rule of us eating together was one of the best parts of staying with him. We talked about everything and nothing and laughed quite a bit although never at his jokes unless it was at how bad they were. I found I enjoyed his company far more than that of the guys my age.\n\nJoe was laid back and fun and I never had to worry about everything I said being interpreted as \"let's fuck\" which is what most of the guys in school seemed hear no matter what I had actually said. I guess the word was safe, Joe was safe. I could be myself and not worry about putting on an act or feeling obligated to do anything. Joe also exuded a confidence that was something else I discovered I was a bit attracted to. Boys my age were just that; boys. ",
        "They were grabby, impatient and always looking for something. Joe just kicked back and seemed completely relaxed at all times as if he knew whatever he wanted would come to him. The first week I would go down to my place after I did the dishes, but one night Joe asked if I wanted to watch the Sox game with him. We sat on the couch watching the game and laughing as Joe mocked pretty much everything the players did.\n\nI could tell he enjoyed the company and I did as well. If there was no game he would rent a movie which is where I discovered he had a fondness for old really bad sci fi and horror movies. I would make popcorn and we'd sit around and like with the games he would have a running commentary that was more entertaining than the movie. He'd shut the lights off and while sharing the popcorn would sit close to me. \n\nHe never touched me, but occasionally, and more so lately, I kept wondering if he wanted to and if he did I may not mind. Two nights ago he had yawned and stretched, his arm going behind me and I had exclaimed, \"Wow, that old move?\" Joe had blushed redder than I ever did and stammered he wasn't trying to do that. During the rest of the movie I'd wondered if he really hadn't wanted to, or I had actually caught on to it. \n\nThat night I'd had what could really only be described as a wet dream about him doing a lot more than putting his arm around me on the big comfortable couch. I'd woken up feeling guilty, but more than a little horny and for the first time in a long time, slipped my hand between my legs and eased the tension so to speak. I'd tried to focus my thoughts on Rob who had been pretty good to me in bed, but he was quickly replaced by Joe.\n\nA girl in one of my classes had told me she had dated a guy in his thirties and raved about how good the sex was. How older men knew what they were doing and took their time and were thrilled to be with a pretty young girl. With a start I realized my nipples were hard and tried to tell myself it was from standing in front of the freezer. \n\n\"Don't be a pig.\" I said aloud. \"He's a good guy and doesn't see me that way.\"\n\nI rolled my eyes as I was now telling myself what I kept telling others. Trying to get my mind off my inappropriate thoughts, I decided I would grill and closing the freezer went to open the fridge to look for the steaks Joe had bought a couple of days ago. I jumped when my phone vibrated against my chest. I had it tucked into my bra and when it went off again, the sensation of it against my nipple caused me to gasp. Yup, it was time to think about dating again.\n\nI pulled the phone out and seeing it was Joe answered, \"Everything okay?\"\n\n\"Yes, why?\"\n\n\"Because you always work until six and never call until you're on your way home. It's only a little after five thirty.\"\n\n\"Wow, am I really that bad?\"\n\n\"You're pretty predictable.\" \n\n\"Oh, really? Well I'm about to prove you wrong young lady. Did you start cooking yet?\"\n\n\"I was just about to, how's steak on the grill sound?\"\n\n\"How's Victor's sound?\"\n\n\"Victor's?\" I pursed my lips as I thought, \"They're too uppity to do take out.\"\n\n\"Careful, I know the uppity owner.\" Joe said, \"But not take out, I mean take you out.\"\n\n\"Take me out?\" I felt my heart start to beat faster, \"Um, like some kind of date?\"\n\nI felt like an idiot as soon as I said it and he didn't make me feel any better.\n\n\"No, no!\" he said quickly, \"I...I just...it would be nice to get out. It's been a long time since I went to a nice restaurant with someone other than a client.\"\n\n\"I know,\" I lied, \"I was only messing with you. I didn't really think you were a creepy old guy.\"\n\n\"Thanks.\" He sighed, \"Tell you what, creepy is fine, can we leave out old?\"\n\n\"Okay creep.\" I laughed.\n\n\"Anyway how about I get us a table for seven thirty?\"\n\n\"I don't have anything I could wear there. That place is kind of fancy for a sundress or a jean skirt.\"\n\n\"You have something you can wear.\" Joe told me, \"It's on your bed.\" He laughed, \"You're predictable too, you're always upstairs.\"\n\n\"You bought me a dress?\"\n\n\"Sure, I figured you could use something nice and well, it hit me that I've never seen you dressed up.\"\n\n\"You want to see me dressed up?\"\n\n\"Are you turning parrot on me?\" he asked, \"Let's try this; Joe, you're the best looking guy I know! A man amongst men!\"\n\n\"Sorry, I don't think I could get that out without laughing.\"\n\n\"Had a hard time myself. So what do you say?\"\n\n\"Sure I guess. I just don't get why.\"\n\n\"Tonight's kind of special to me and I don't want to just stay home and I would love some company.\"\n\n\"Then why not you know, go out with some women who...\"\n\n\"Women my age bore me. And we've been over this; my reasons for not dating are mine.\" He had gotten a tone, the same one he got whenever I brought up the subject of his not dating. \"Karma, can't you just say yes like most girls would do when they get a chance to be treated to a nice dinner?\"\n\n\"Okay, then yes.\"\n\n\"See was that hard? I'll be home by six thirty and we'll head out okay?\"\n\n\"Sounds good.\" \n\n\"Great and Karma?\"\n\n\"What?\"\n\n\"Thank you.\"\n\n\"For what?\" I asked, confused.\n\n\"For more than you know.\"\n\n*****\n\n\"So let me get this straight,\" I began, pointing across the table at Joe, \"I dress up and you dress down?\"\n\nJoe looked down at the plain short sleeved black polo shirt he was wearing to go along with a pair of grey Dockers and shrugged, \"You always see me dressed up and you never are so I figured we'd switch it up tonight.\"\n\n\"You switch something up?\" I laughed and reaching out tapped the bottle of red wine on the table. \"How much of this have you had?\"\n\n\"Two glasses,\" he grinned, \"So two less than you.\"\n\n\"It's really good!\" I giggled and could just imagine my face becoming as flushed as the red dress Joe had left on my bed for me.\n\n\"Good.\" He smiled, \"I'm glad you're having a good time.\"\n\n\"A great time!\" I exclaimed.\n\nAlthough my great time was most likely enhanced by the four glasses of wine, it really had been an amazing dinner. The dress Joe had bought for me was long, but had a slit that went more than halfway up my left thigh. It was a little lower cut than what I would normally wear, but not to the point it was inappropriate. The first thing I had thought when I put it on was that it was a dress a woman would wear, not something a kid like me would normally be seen in.\n\n\"I am as well.\" He lifted his wine glass and reaching across the table tapped it against mine. \"Here's to good food, better drink and absolutely beautiful company.\"\n\n\"No,\" I waved my hand at him, \"I'm not beautiful.\" I giggled again, \"Cute maybe, but I'm not all that.\"\n\n\"Trust me Karma, you are beautiful.\"\n\nI felt my face grow warmer and knew this time it wasn't just the wine. Figuring I was wearing a nice dress, I put on the diamond earrings that had belonged to my mom and had put on makeup. Normally I wore hardly any, but tonight was wearing a shade of lipstick that perfectly matched the dress and had added some blush, not that I needed it at the moment. I curled my long lashes and was even wearing some eye shadow. \n\n\"Thank you. I don't think anyone's called me that before.\"\n\n\"No? What do they call you, hot?\"\n\n\"Nah, usually they call me skinny.\" I laughed, \"Or stuck up frigid bitch.\" \n\n\"You're not frigid, just a good girl.\"\n\n\"I guess.\" I shrugged and staring at the way the shirt hugged his arms and shoulders thought that I was not exactly feeling like a good girl at the moment. \n\nStaring at the half full glass in front of me, I figured it was time to quit. I rarely drank and the wine was hitting me hard. If I drank anymore I might say something stupid.\n\n\"Desert?\" The waiter asked, pulling me from my thoughts.\n\n\"I'm all set.\" I said.\n\n\"Me too, but I'll have some coffee.\"\n\n\"Would you like a cup as well Miss?\"\n\n\"No thank you.\" \n\nThe waiter nodded and as he hurried away I sat back in the chair and sighed. This had to be the nicest place I'd ever been too and the food had been delicious. As usual Joe and I had chatted away, but even though he seemed to be in a good mood he seemed at times to be somewhere else and sometimes when he looked at me his eyes seemed to have a strange look in them as if he wanted to say something.\n\n\"Are you enjoying yourself tonight?\" he asked.\n\n\"Can't you tell?\" I asked. \"Tell you what, when I finish school and get a good start in advertising I'm going to eat at places like this all the time! Its amazing.\"\n\n\"It is, but its not the food, it's the company.\" He tapped the table, \"You see it's never about the place, but about the people. Two people who have everything you could imagine could be in a place like this and feel nothing,\" a wistful smile appeared on his face, \"But two people who have nothing between them but the enjoyment of one another can have an amazing time anywhere.\"\n\n\"That's pretty deep.\" I smiled, \"The wine making you philosophical?\"\n\n\"No, just the day I guess.\"\n\n\"What do you mean?\"\n\n\"Well...\" Joe paused as the waiter put a cup down in front of him along with a creamer and some sugar. He reached for the cup, but taking it and the sugar said, \n\n\"Let me, I'm a professional remember?\"\n\n\"Okay, you make it better anyway, in a variety of ways.\"\n\nI avoided looking at him after that remark and wondered what he meant. Was he flirting? Nah, more effects of the wine. \"So what did you mean by the day?\"\n\n\"Today would have been my twenty fifth wedding anniversary.\" \n\n\"Oh, I'm sorry.\" I didn't know what else to say and used the act of pouring cream and stirring his coffee as an excuse not to add anything.\n\n\"Don't be.\" He took the coffee from me and after taking only a small sip said, \"Its hard Karma.\"\n\n\"I'm sure it is. For me Mother's day was the worst.\"\n\n\"I can imagine. You know I'm pretty confident and feel I'm the take charge make my decision and live with it type. But tonight is confusing.\"\n\n\"What do you mean?\"\n\n\"When the Doctors decided to stop Laura's treatment and we knew the end was close, she made me promise her that I would at some point move on. That I was too full of life to mope all the time and to spend my life alone.\"\n\nHe started to raise the coffee and with a frown put it down, \"I...I don't feel like finishing it.\"\n\n\"Wow that's a first. I should call CNN.\"\n\nJoe gave a weak smile at my joke and with a somber expression that seemed unusual on him continued, \"All the years we were together I never lied to her about anything, even little things, but I feel as if I lied to her about that. I do still enjoy life, but not in the way she meant and I...I am lonely.\" He gave me a sad smile, \"Well I was anyway, and you've been very good for me Karma.\"\n\n\"No, trust me;\" I tapped my chest, \"You've been far better to me. Joe, you letting me live with you is the best thing that has happened to me in a long time. I wish I could thank you somehow.\"\n\n\"You do every night we have dinner together. I know you think you have the better of this deal, but it's more even than you know. I look forward to coming home for the first time since Laura passed. I love sitting with you and listening to you talk and joking with you. I feel like there's life in my life again. So never think you owe me anything.\"\n\n\"I still think I do.\"\n\n\"Then that's something you need to work out with yourself, because I know you don't. Especially coming out with me; I'd forgotten what it's like to sit across from a pretty woman.\"\n\n\"Thank you.\" I laughed, \"Pretty I'll take, Beautiful sounds like pillow talk.\"\n\n\"Really? I'll write that down then I'm badly out of practice, but that's the problem. As much as I am enjoying the night, I feel like an asshole, out with a woman on what would have been our anniversary.\"\n\n\"But she wanted you too and she didn't want you to mope.\" I pointed out, \"And I think if you were home tonight you would be moping. Besides, it's not like I'm a real date or anything.\" I shrugged, \"Just friends having dinner.\"\n\nHe didn't answer right away, but instead his eyes stared into mine. I could see they were a little bright from the wine, but I'm sure nowhere near as bad as mine were. I returned his stare and again felt as if he wanted to say something. He blinked and pushing the coffee aside poured another glass of wine.\n\n\"Right, good friends.\" Raising his glass again he said \"To my best friend.\"\n\n\"Really?\" I clicked my glass to his, \"I'm your best friend?\"\n\n\"I think you are, if nothing else my closest.\" \n\nAs I took a sip of my wine trying to go easy, he chugged his downing more than half before stopping.\n\n\"So,\" he said putting the glass down, \"Seeing as how we're such close friends, how about you answer a question for me?\"\n\n\"Okay.\"\n\n\"What's the story behind your name?\"\n\n\"It meant something to my...\"\n\n\"Oh, please.\" He cut me off, \"I've heard you say that to other people, \"I thought we were good friends?\"\n\nI frowned, it's not that I didn't want to, but sometimes talking about mom got to me and Joe was already kind of down; he didn't need me getting that way. But he had been so good to me. Picking up my glass I finished it in several long swallows. I blinked as the alcohol went straight to my head and carefully placing it on the table got an idea.\n\n\"Okay. I'll tell you, but on one condition.\"\n\n\"Oh, and what's that?\"\n\n\"After I tell you, you have to answer a question for me.\"\n\n\"What question,\" he narrowed his eyes.\n\n\"For me to know and you to find out,\" I giggled, \"So like you told me when you taught me to play poker, you in or you folding?\"\n\n\"Oh, playing tough girl are we?\" for the first time in awhile his smile seemed genuine. \"Okay, I'll see your bet, but I'm calling.\"\n\n\"Fine.\" I folded my arms on the table and leaned forward in order to speak quietly. \n\nThat move pushed my small breasts out and Joe's eyes immediately went to them. He looked away quickly, but I felt a warm sensation that had nothing to do with wine at that fact he had looked.\n\n\"My mom had a pretty rough life. Her father was an alcoholic and beat her mother to the point the police arrested him. Her mother wasn't into drugs or booze, but was pretty messed up and really had no idea how to take care of her. They had hardly any money and mom told me she was pretty sure her mother...\"\n\n\"Wait; shouldn't that be your grandmother?\"\n\n\"Mom said to never refer to her that way. I never met her and I think Mom blamed a lot of what happened to her on her mother. I'm not even sure if she is alive, I don't even know her name.\"\n\n\"Sorry.\" He sighed, \"That's the problem with having a good life, you ask stupid questions.\"\n\n\"Not stupid, grandparents are a normal thing; mom just didn't have a normal life. Anyway she ran away at thirteen and you can imagine the rest. She started drinking and smoking pot. Screwing around with guys older than her and eventually got into coke and after that heroin.\"\n\nI paused and looked at the nearly empty bottle of wine. Joe saw me and picking it up poured the last of it into my glass. I hesitated for another moment before picking it up and sipping at it. When I moved my arm, Joe reached out and put his hand over mine like he did in Panera the day he asked me to live with him. That time though it was comfort I'd felt. This time it sent a pleasant tingle through me and I swore no more wine, no matter what.\n\n\"Mom started living with different dealers trading sex for drugs and well, you know, ended up being a prostitute. She told me some of the things she did and...\"\n\n\"Why would she give you details?\"\n\n\"To drive it into my head to never let it come to that for me. To get to the point you would do something that humiliating. Mom said there were times she was in tears while, you know...\"\n\nI trailed off as I felt my own tears beginning to build. \n\n\"But she did it anyway because she was an addict. In the beginning she would always swear it would be the last time. After awhile she said she gave up pretending and started doing more drugs which meant she was doing even worse things for them.\" Swallowing back my emotions I added softly, \"I...I was going to go down on Hal. I was so scared of what would happen if I didn't, but I thought of my mom and I know she can still see me and that's what stopped me.\"\n\n\"You did the right thing.\" He squeezed my hand, \"And that's why things are better for you now.\" He winked. \"Karma.\"\n\n\"Right.\" I looked at his large hand over mine and deciding I didn't care how it looked, turned mine over so were now holding hands.\n\nJoe looked surprised, but made no effort to move.\n\n\"Mom ended up with a dealer slash boyfriend slash pimp and got pregnant. The guy told her to get rid of the baby that he would leave if she didn't. Mom said she didn't care so much about that, but instead thought who the hell was she to have a baby, she was under eighteen, but had already done so many drugs she looked like she was in her thirties. She had track marks and scabs and cold sores and...\" I stopped, \"I...I'm sorry.\"\n\n\"No, its okay.\" He placed his other hand over ours. \"I'm happy to hear what no one else has.\"\n\n\"It's not a happy story.\" Using my free hand I picked up a napkin and dabbed at my eyes hoping my make up wasn't running.\n\n\"But it's your story.\"\n\n\"And this is about where I am about to come into it. Mom knew she wasn't worthy of having me and thought the best thing would be to not have me rather than have a baby born addicted or lose it. She went to a clinic and they talked to her about carrying me and giving me up for adoption. They told her they could get her help for her addiction, but she insisted on the abortion. She had no parent with her, but did have a fake id that the clinic either believed or just figured it didn't matter.\"\n\n\"They gave her an appointment and she showed up, but had to wait because there was an emergency and they were short staffed. While she was sitting there Mom said a woman started talking to her asking why she was there. Mom told her and she asked why she would want to give up her gift? Mom's answer was only bad things had ever happened to her and she didn't want bad things to happen to her baby because of her.\"\n\nJoe nodded, but I saw him looking to the left, I followed his gaze and saw an older couple two tables away staring at us. The guy was grinning, the woman frowning in distaste. I started to move my hand and Joe said simply, \"Screw them. If I cared what people thought I'd stop telling crappy jokes.\"\n\nAs always that caused me to smile and now it was me who squeezed his hand.\n\n\"The woman told Mom that wasn't the way to think about it. She told her, that she was right bad brought on more bad, but if that was the case wouldn't good bring more good? Mom told me she wanted to tell the woman to mind her own business, but there was something about her that made her want to listen to her. She told the woman the problem was there was nothing good about her. The woman put her hand on her stomach and told her there was something good inside her right now and that good would bring more all she had to do was give it a chance.\"\n\n\"Mom said the woman then said she had to leave and just like that got up, but before she left she told my mother, 'I already know what you're going to do and so do you.' and left. \n\n\"Who was she, she work there?\"\n\n\"I have no idea. Mom said she went back to the clinic a few times, but no one knew who she was talking about.\"\n\n\"I take it your mother listened.\"\n\n\"She did, when they called her name she went into the room and when they told her to get undressed she started crying and said she changed her mind. They were thrilled and got her into a home for women in her situation and got her clean. Mom never had another drink or touched any drugs since. When I was born she named me Karma because I was the one good thing she did and became a better person because of me. She didn't just stay clean, but went back to school, got a degree and had a good job before...\"",
        "I stopped to get a grip on myself. \"She said every day after she made her decision was a blessing and she did everything she could to enjoy her new life and make sure I would never go through what she did. Before she died, I kept saying she was too young, but her answer was she had lived twice as long as she should have and it was all because of me.\"\n\nI gave up saying anymore and putting my head down, pressed the napkin to my eyes.\n\n\"That's a sad story, but a beautiful one.\" Joe said softly, \"Your mother was right; she beat the odds and left the world something wonderful to remember her by.\"\n\n\"I just wish she were here.\" I said in a choked whisper. \"I need her.\"\n\n\"Life always gives us what we need.\" Joe said, \"But it's up to us to realize what it is and use it.\"\n\n\"Have you found it then?\" I asked.\n\n\"I think maybe I have.\" He said quietly.\n\n\"What is it?\"\n\n\"I don't want to jinx myself,\" he gave me a nervous smile, \"You know me; I don't like to change things up.\"\n\n\"It would change things?\" \n\n\"That would be an understatement.\" He said more to himself than to me.\n\nHe didn't say anything else and trying to get my mind off of my mother I said, \"Okay, well you saw my hand, you ready to show yours?\"\n\n\"That Karma, is a more loaded question than you think.\"\n\n\"What's that mean?\" I tried to meet his gaze, to see if I could figure out what he meant.\n\n\"What's your question?\" he asked, his eyes avoiding mine.\n\n\"Why no one?\"\n\n\"Why does everyone ask that?\"\n\n\"Because you're a good looking guy with a good heart and a great personality. You have too much going for you to be alone.\"\n\n\"Don't forget my sense of humor.\"\n\n\"Let's stick with good heart and good looking.\" I grinned.\n\n\"You think I'm good looking?\" \n\n\"For an older guy.\" I winked.\n\n\"Ouch.\"\n\n\"Kidding, I think you're very attractive.\" That wasn't a lie; he'd been getting more attractive the longer I lived with him and was looking damn good tonight. \"Quit ducking the question and don't give me you work a lot or they're out for your money. Like you told me, I want the real story, I deserve it after that.\"\n\n\"You do.\" He took a deep breath, \"Just understand it's hard because it's a little embarrassing in a way.\"\n\n\"So is eating at a soup kitchen, but you told me that didn't matter.\"\n\n\"How old are you?\" he frowned, \"You sound like a wise old lady sometimes.\"\n\n\"Answer.\" I tapped my long red nail on the table.\n\n\"For the answer we have to go way back to high school which is when I met Laura. We were sophomores and I sat next to her in geometry. She was the prettiest girl I'd ever seen and I would blush every time she looked at me.\" He smiled at the memory, \"but she would do the same. Not sure how you kids do it now, but back in that day it came down to having a mutual friend ask if the other person was interested. I sent my best friend to ask Laura's best friend. Her answer was only if he has the balls to ask himself.\"\n\n\"Fortunately I did have them and we went out to a movie and just kept going out from there. I had a part time summer job at my grandfather's company and saved my check for three weeks so after the winter ball I could afford a motel room that an older friend rented for us. We had friends covering us for where we would be and our first time was that night.\"\n\n\"That's sweet.\" \n\nI smiled, but felt a little envious envisioning my first time with Roger in his room while his younger brother sat out in the living room blasting music and watching out for his parents. It had lasted all of two minutes and all I had gotten out of it was a little pain and a sticky mess all over my stomach. That and his little brother chanting 'you guys had sex' over and over.\n\n\"We were both forty four when she died and had been together for just shy of thirty years. During that entire time there was never anyone else. She was the only woman I wanted to be with.\" He stared at me as if waiting for me to say something. When I didn't answer he continued, \"Thing is Karma she was the only woman I have ever slept with and ....I've been too nervous to be with anyone else.\"\n\n\"What? You nervous?\" I shook my head, \"That is hard to believe.\"\n\n\"It's not just nerves, but missing her. Think about it she was my lover for longer than you have been alive. We knew everything about each other. Knew just what the other liked and didn't like and it wasn't just about sex, the way I would hold her. I couldn't imagine another woman ever feeling that way.\"\n\n\"Maybe not that way, but you could find someone who feels good.\" I pointed at him, \"You just have to try.\"\n\n\"You don't think I haven't?\" he rolled his eyes. \"Just because I don't take Maria up on her free lunch offer or talk about it doesn't mean I haven't gone out with anyone.\"\n\n\"So you have tried?\"\n\n\"That's what I just said.\" He said with an edge to his voice. \"Not for the first year. After all our time together it wouldn't have been right to have another woman in our bed.\" He paused and laughed, \"Shit, I felt so bad about that I bought a new bed and changed bedrooms.\"\n\n\"There was a woman I'd met at a net working seminar. A couple of years younger than me, attractive, sweet. We went on a few dates and she invited me up for a drink. We started on the couch, kissing, petting, a little fondling.\" He was now making it a point not to look at me. \"Everything was working okay at that point shall we say and I was feeling nervous, but pretty good.\"\n\n\"We moved to the bedroom and undressed and....as soon as I tried, I lost it, I just couldn't. She, well let's say she tried to help, but nothing. Then I got embarrassed and when that happens to a man it's not easy to shake off. She was good about it, said she understood and how about we try again another time. Next time was at my place and same thing. I got closer this time, but just kept thinking 'what do I do, how should I do it?\"\n\n\"You don't forget.\" I joked.\n\n\"No, it wasn't that it was just all that time one woman, what if I couldn't make this one happy, what if I wasn't any good? Or what if she didn't make me feel good? Laura liked this, would she? Any way you start thinking and it's all over. Long story short by the third time it happened she was done being patient.\"\n\n\"I've tried with two other women since and same thing. I'm interested shall we say in the beginning, but when it comes down to it, I just....I think of her and feel it's wrong, or remember what happened and nothing. Understand women my age are not patient.\" He laughed, \"All that milf cougar porn is not far off, women my age want a guy who can take charge and they don't want to have to teach.\"\n\n\"Have you, you know,\" I tried to choose my words carefully, \"Tried taking anything?\"\n\n\"Thanks for embarrassing me.\" He grunted, \"But yes I did. Thing is that only works if the desire is there. It doesn't help with nerves.\" He laughed, \"Big one controls the little one you know.\"\n\n\"Have you talked to anyone?\"\n\n\"Professionally? No, but I did confide in a good friend. His suggestion was a prostitute. His theory was I could just lay there and let her work for it as he said, but I'm not going to do that. I read some stuff online about sexual surrogates, but all they are, are prostitutes that take Blue Cross.\"\n\n\"So you don't date because you...\"\n\n\"Because I can't do anything else and its getting more and more frustrating. I know she would want me happy, but I just can't meet someone I'm comfortable with.\"\n\n\"Maybe you need to give it more time with someone, get to know them better.\"\n\n\"Back to the patience thing again and at this point it's mine as much as theirs because I do want to, just can't seem to,\" he shrugged. \"Break the ice.\"\n\n\"If you could once do you think you would be okay?\" I asked staring down at our hands.\n\n\"I would think so. At least I would know I could.\" He slid his hand from mine and I saw the waiter approaching.\n\n\"Anymore coffee or change your mind on dessert?\" \n\nJoe gestured to me and I shook my head.\n\n\"Me either, just the check\" Joe told him.\n\nWhen he walked away Joe laughed, \"Know why I never have desert?\"\n\n\"No, why?\"\n\n\"Because I never have dessert, ever, and it seems to be a problem for me to ever do anything differently.\"\n\n\"Then that might be your problem.\" I snapped my fingers. \"Being with another woman isn't just about your wife, but about it being someone different. You need to start making changes, and then maybe that will get better.\"\n\n\"Thank you Doctor Ruth.\" He said with more than a hint of sarcasm. \"Having desert will fix my sexual issues?\"\n\n\"Hey it was a thought,\" I waved my hand at him, but to myself thought it would depend on the dessert. \n\nThe waiter came back with the bill and as Joe pulled out his wallet, I picked up my glass and taking the last couple of swallows decided I had found the perfect way to thank Joe for all he had done for me.\n\n*****\n\nI entered my bedroom disgusted. I had told myself I would make a move on Joe. For the last couple of weeks it seemed that he might be interested and several moments tonight where I was positive he was. I knew I was. Whether it was the wine lowering my inhibitions or the fact that we had bared our souls to each other I knew without hesitation I wanted him. His problem with women did nothing to dampen that desire, in fact it added to it.\n\nThe thought of not only enjoying him, but being the first woman to show him he could still feel something for someone else had me ready to do something I had never done before, make the first move. During the ride home Joe was silent and I left him alone in his thoughts as mine were consumed with how I would seduce him. Would I be subtle? Would I say screw it and come on strong? \n\nI kept looking over at him, taking in his broad shoulders and the way his shirt hugged his arms and was getting to the point I was starting to squirm in my seat. I'd never been this worked up. When we got back home, I asked Joe if he was up for a movie figuring I would get close to him on the couch, but he said he was tired. He seemed lost in thought and I asked if maybe we could play some cards or just talk. His reply was,\n\n\"I think I've talked enough, in fact talking seems to be all I can do.\"\n\nThat comment wasn't like him and it through me off. While I stood there he walked over and leaning forward gave me a peck on the cheek.\n\n\"Thank you for coming out with me tonight.\" He said, \"And thank you for sharing how you got your name, it meant a lot.\"\n\nHe was speaking close to my ear and the feeling of his breath on my neck caused me to turn and try to kiss him. As soon as I began to move he pulled his head back and I caught him awkwardly on the cheek. Undaunted I went to kiss him again, but he was already starting to turn and I caught myself before I kissed the side of his head. \n\n\"Good night Karma. I'll see you some time tomorrow.\"\n\nI told myself to go after him, get in front of him, put my arms around him and kiss him. Maybe even untie the dress and let it fall, but instead I stood there. Watching him walk away the doubts crept in. What was I thinking? I was a young girl, a kid to him. His daughter was a year older than me for God's sake. More importantly I wasn't exactly a porn star. I hadn't had sex more than a couple of dozen times and only with guys my age who really had no clue what the hell they were doing and neither did I so it didn't matter.\n\nJoe had walked out of sight down the hallway and a moment later I heard his bedroom door shut and defeated I had come down here. Sitting on the bed, I took my heels off and tossed them into the corner of the room. I reached back behind my neck to untie the dress and seeing myself in the mirror stopped. I had to admit I did look good tonight. The dress and make up made me look older and getting up and walking up to the mirror it dawned on me I didn't look like a cute young girl, but more like a woman. \n\nA woman was what Joe needed. Not the nervous girl upstairs who couldn't even manage to get a kiss in, but a confident woman. One who could get him to relax, who could take control and show him he could feel the way he used to. He was attracted to me, I could see that tonight and replaying some of his remarks in my head it dawned on me that he may have been hinting. He would never make the first move because...\n\nI began to smile at my reflection. That was it. Joe was a good man and in his mind for him to make the first move would be wrong. He would feel as if he were taking advantage of me. Still looking in the mirror I did reach back and untie the dress, letting it fall to the floor. I didn't have much in the way of sexy lingerie, but the bra was red lace and I was wearing the only thong I owned which happened to be red. I'd worn it tonight because I thought it would make me feel even sexier and grown up than the dress did.\n\nI stared at my slender body and imagined Joe looking at me. My bikini didn't show a lot less and he had stared plenty by the pool. Reaching back I unclasped my bra and sliding the straps down my arms, tossed it to the side. My pink nipples were hard and cupping my small breasts I held them up, \"Do you like them, Joe?\" I whispered.\n\nHe would, it would just be a matter of getting him to see me as a woman and not a young waif he was trying to help. I rubbed my thumbs across my nipples and groaned. They were so hard they were aching and I was aware of the thin strip of material between my legs sticking to my moist skin. I would have to make the move I thought as I turned and going over to the bed stretched out on it.\n\nMy hand slid across my flat stomach and slipping into the thong dipped between my legs. The breath hissed from between my lips as my fingers caressed my swollen button. I envisioned Joe touching me, his large strong hands wandering over my body, exploring every bit of it and lingering in the good parts. He would slide up over me and...\n\nI stopped moving my fingers. He would move over me and in his mind not be able to do it. Was it that and not my age that had kept him from trying anything? Because he was afraid he wouldn't be able to? My fingers began to move again as in my mind he would have no problem. He would be hard and ready for me. My finger entered my hot moist flesh and closing my eyes I began to move it, thinking of him thrusting in and out of me. \n\nMy eyes snapped open. What the hell was I doing laying here playing sticky finger as Hal had so eloquently referred to it, when what I really wanted was upstairs and hopefully wanting me? Quickly getting off the bed I went to pick up the dress thinking I would put it back on. As I held it, I saw the short black robe that I wore over my bikini hanging on my doorknob. Dropping the dress I put it on and checked myself out on the mirror. The robe barely went past my ass and I'd always thought I looked good in it. It hid my small chest and flattered my legs, perfect for me. Taking a deep breath I smiled seductively in the mirror, \"Good things come to good people.\" I whispered.\n\n*****\n\nI could feel my legs trembling while I walked down the hallway to Joe's room. My stomach was in a knot as well, but the rest of my body was telling me this was what I wanted, more than wanted, needed. I stopped in front of the door and grasping my locket in one hand, knocked softly with the other. I didn't get a response and was getting ready to knock louder; when it dawned on me I was giving him a chance to turn me away. \n\nGrasping the doorknob I release the locket and let myself into his room. There was a small reading lamp on next to his bed and Joe was sitting up against the head board. His eyes were closed and he was shirtless. The sight of him did little discourage my intentions and I took a couple of steps towards the bed. That was when I noticed his hand was under the sheet, which was moving up and down. \n\nI instantly felt my face flush and at that moment Joe opened his eyes. \n\n\"Holy shit!\" he exclaimed, his hand quickly coming out from under the covers. \"Karma, what the hell are you doing in here?\"\n\n\"I...\" catching him masturbating had thrown me off a little, but staring at the sheet which was still raised up I wondered what he had been thinking about; maybe a pretty young brunette?\n\n\"Don't you knock?\"\n\n\"Sorry, I didn't mean to interrupt.\"\n\nHe looked pissed, but waving his hand disgustedly at me, he said, \"It was pretty obvious what you saw me doing and I'm not some teenager who thinks they're in trouble and would deny it, but having said that, do you think whatever you wanted can wait until tomorrow?\"\n\n\"Nope.\" I shook my head and slowly approached the bed.\n\nI pulled my eyes from the rather impressive bulge under the sheet and looked up to see him staring at my legs. \n\n\"Why did you come up here?\" he asked, raising his gaze to my face.\n\n\"Couldn't sleep.\" \n\nI had reached the bed and looking down at him gave him a mischievous smile, \"If it makes you feel any better, I was doing what you were doing.\"\n\n\"You were?\" he looked confused, then to my delight started to blush, \"Oh.\" He said simply his blue eyes widening. \n\n\"I was.\" Placing my hand on the bed, I swung one leg up, placing my knee next to his leg. \n\nThe robe fell away, not only exposing my leg up to the hip but also showing the thin string of the thong over it. The look on Joe's face was almost comical, his eyes looked as if they were going to pop out of his head and his mouth was open. \n\n\"Do you think we were thinking the same thing?\" I asked, placing my hand on his thigh and squeezing it through the sheet.\n\n\"Karma, what are you doing?\"\n\n\"Not fair answering a question with a question, Joe.\" Bracing my hand on his thigh, I swung my other leg up so I was now kneeling on the bed next to him. My heart was starting to beat faster, but in excitement more than nerves. Joe's eyes couldn't' look away from me and he hadn't told me to get out.\n\n\"I don't know what you're talking about and I, think...\"\n\n\"You think way too much.\" I made a clucking sound while beginning to rub his leg. \"And lately so have I, but it's time to do something besides think.\"\n\n\"Karma, are you drunk?\"\n\n\"No, but I'll tell you what I am.\" Leaning over him so my lips were only inches from his ear I whispered, \"What I am is horny and when I'm horny I like to play.\" I blew in his ear, \"Do you want to play with me Joe?\"\n\n\"I...can't.\" he shook his head, \"You're....\"\n\n\"A pretty girl who wants to have some fun with a good looking guy.\" I leaned back far enough to be able to look at him and saw his eyes immediately go to my chest. \n\nThe robe was loosely tied and I knew he could see everything. \n\n\"Like the view?\"\n\nHe turned even redder and started to look away, but grabbing his chin, I stopped him. \n\n\"You can look, it's not like you haven't before.\"\n\n\"You...you're a beautiful girl Karma, but...\"\n\n\"I like when you look,\" I purred, ignoring his protests. \"I like to look too.\"\n\nI let my hand drift down to his chest and a shiver went through him as I trailed my long nails down towards his stomach. \"I like what I see.\" \n\nI swung my left leg over his legs and let my weight go so I was now straddling him. I could feel him pressing into my ass and cooed, \"Oh, I think you do like what you see.\"\n\nI ground my hips against him and he released a soft moan that sent a wave of heat flowing though me. \n\n\"I think he wants to play,\" lowering my head, I pushed my lips out in a pout and batting my lashes asked in my little girl voice, \"Don't you want to play with me?\"\n\n\"We can't do this.\" He shook his head, but he didn't sound very convincing and his eyes were glued to my chest.\n\n\"Sure we can.\" Grabbing the tie to the robe I pulled on it and paused, \"You want to see?\"\n\n\"It's not about that, Karma this wouldn't be...oh goddamn.\" \n\nI'd pulled the robe open and letting it slide off my shoulders asked, \"Do you like them?\" As I had done downstairs, I cupped them, \"I know they're a little small, but...\"",
        "\"They're perfect.\" He whispered, \"Just like the rest of you.\"\n\nI looked into his eyes and felt a thrill at the look of desire in them. Between that look and the fact I was on top of him, almost completely naked, my hips began to rock as my body yearned to be touched. Leaning over I slid my arms around his neck and kissing his cheek said softly in his ear, \"Remember, good things come to good people. You've been good to me, now let me be very good to you.\" \n\nMy words were followed by my lips sliding across his neck and I could feel him trembling beneath me. I could feel my own hands shaking where I had them pressed to his back, but again I had no doubt this was exactly where I was meant to be. I let my lips glide across his cheek and found his. Joe groaned deep in his throat as my soft lips pressed against his and it was my turn to make a soft sound of pleasure as he lifted his arms and put them around my waist. \n\nAt first he sat back, letting me kiss him and I had no problem with that. I began to tease him, sliding my lips back and forth across his. His strong hands were rubbing up and down my bare back and my hips were rocking harder against his very interested flesh. I silently cursed the damn sheet that was between us, but for the moment let that go as his lips began to work against mine. \n\nHis hand slid up my back and I moaned as it ran through my long hair. He cradled the back of my head and held my face to his. He had no need to hold me there. If anything it would take a serious effort to pull me away. His lips were now pressing hard against mine and I could feel the urgency in his kiss. Parting my lips I flicked my tongue out and moaned in delight when his lips parted and I felt his tongue dart out and caress mine. \n\nHe pulled me closer and I whimpered at the feeling of my aching nipples pinned to his chest. I started moving back and forth sliding them across his chest and I could feel him breathing heavier into my mouth. Pulling his lips from mine he lowered his head and my eyes rolled back when they found the soft skin between my neck and shoulder. \n\nJoe's fingers were running through my hair and he had begun to suck gently on my neck. I started bouncing up and down, rubbing his excited flesh against my ass, but still through that damn sheet. Joe's lips left my neck and my breath caught as they trailed down my chest. I leaned back and his head darting forward, Joe sucked my nipple into his mouth.\n\n\"Oh yes!\" I cried out, arching my back and shoving my breast deeper into his mouth. Joe was moaning as he sucked my swollen flesh and sliding my hands up I grabbed the back of his head keeping his mouth on my breast. Not that he seemed to mind. His tongue was swirling around my pink nub and I gasped when his fingers found my other nipple.\n\n\"That feels sooo good!\" \n\n\"Damn they're amazing!\" he exclaimed switching his tongue over to the other side. \n\n\"They're all yours.\" I moaned, \"I'm all yours.\" \n\nReleasing my nipple, Joe took my face in his hands and pulled me down into a long deep kiss that had my hips grinding and my legs trembling. Our tongues played across each other and I could feel him thrusting his covered cock against the back of my thigh. He was making a sound between a moan and a whimper and his hips began to move faster. Knowing it had been a long time for him and selfishly wanting to enjoy him when it came time for him to take me, I removed my lips from his and with a sexy smile lowered my head and began tonguing his nipple.\n\nJoe grabbed my upper arms and started to try to pull me back up to him, but I said, \"Uh-huh, I never had desert remember?\"\n\n\"You... Oh shit.\"\n\nI had slid down the bed, and was trailing my tongue down his chest and across his flat hard stomach. Speaking of hard he was now poking me in my stomach and it took everything I had not to just pull my thong off and get him inside me. But I so wanted to be good to him and show him how much I wanted him and truth be told I was yearning to have him in my mouth.\n\nEven as I slid further down and my tongue was now teasing across the edge of the sheet along his waist that thought stuck with me. I'd always been a little shy in bed, but not tonight. Tonight I knew what I wanted and was hell bent on getting it. Sitting up, I grabbed the sheet, \"Let's get rid of this damn thing!\"I said and pulled it down as far as I could. \n\n\"Wow.\" I smiled down at his very excited cock, \"I think you were thinking what I was thinking.\"\n\n\"I was.\" He said, his eyes fixed on my nipples, \"I've been thinking about you every night.\"\n\n\"Now what did I say about thinking?\" I asked while grabbing him.\n\nJoe groaned and I felt the wet spot between my legs growing as I began to stroke him. He was bigger than any of the guys I'd been with, not just longer, but thicker and I licked my lips at the thought of what he would feel like inside me, but right now I wanted to lick something other than my lips and letting my legs stretch out beneath me, propped myself up on my elbows between his legs and slowly pumped him.\n\n\"Oh fuck, that feels good.\" He groaned.\n\n\"Bet I can make it feel even better!\"\n\nI placed my tongue at the base of his shaft and shuddered as I ran it along the length and swirled it across his swollen head. Joe moaned and I repeated the motion, licking down the other side. I gave the head a kiss and smiling up at him began to rub him against my cheek. He was oozing and I could feel my face getting sticky from it. I turned my head, rubbing it on the other side of my face, then with a wink, opened my mouth and slowly took him into it. \n\n\"Oh, Karma,\" he moaned, \"Damn you look good down there!\"\n\nI giggled around the spongy head of his cock and opening wider took him as far down my throat as I dared. Closing my eyes I sighed, enjoying the sensation of his hard flesh in my mouth. Almost as good as that was his little moans and whimpers when I began to bob my head. Joe reached down and brushing my hair from my face so he could watch, started playing with my hair as I pleased him. \n\nWrapping my slender fingers around the base I began following my lips with my hand, stroking him while giving him head. Joe's fingers clenched in my hair and his hips started moving, pushing his cock deeper into my mouth. Moaning around him, I pressed my tongue against his shaft and slowed my movements, letting him feel my soft tongue along every inch of him. Bringing my other hand into play I began caressing his balls and when he moaned his approval, I removed him from my mouth and ducking my head started licking them.\n\n\"Maybe you're not such a good girl after all\n\n\"Really?\" I asked, sliding the side of my face along his cock again \"I think I'm being a very good girl!\"\n\n\"I...I can't argue with....\"\n\nHis words turned into a long groan when I quickly took him back into my mouth and began bobbing my head faster than before. Joe's hips were thrusting harder and my own were grinding into the bed as my aching clit sought relief. I began taking him deeper and stroking and sucking faster. Joe was moaning continuously and I could feel his thighs shaking.\n\n\"Oh damn,\" he gasped, \"Just like that, don't stop, please don't!\"\n\nHis begging caused my hips to begin moving even faster and I sucked him as fast as I could.\n\n\"Yes, okay, okay, I...I'm close you don't have to...\"\n\nIgnoring him I gave his balls a squeeze and he cried out as he exploded in my mouth. I moaned and my eyes rolled back as he filled my mouth with his warm sticky cum. I'd never minded it in my mouth, but this time I felt as if I were close to cumming by just feeling it oozing down my throat. Joe was pulling my hair, but I didn't care, nor did his hips thrusting into my mouth bother me. \n\nRight now if there was anything bothering me it was that I needed to cum as hard as he just had. Joe whimpered as I sucked harder, trying to coax every drop from him. Sliding him from my mouth, I licked my lips, and giving him a big smile said, \"Is that a proper thank you?\"\n\n\"It's...it's a damn good start.\" He panted, trying to catch his breath. \n\n\"Yes it is,\" I said pumping his still hard cock. \n\nI was wondering if I would be able to keep him hard so he could give me what I needed, but sitting up, he smiled at me. \"Lay back.\"\n\n\"What?\" \n\n\"Well one good thing deserves another, no?\"\n\nBefore I could say anything he grabbed my shoulders and I yelped in surprise when with a wrench of his powerful shoulders he flipped me over onto my back. He rolled over so that his hands were on either side of my head and he was looking down at me. Staring into his blue eyes, I whispered, \"I want to feel you.\" \n\n\"Not yet.\" He said and I thought I saw his eyes lose their gleam for a moment. \n\nI quickly lost interest in his eyes when he slid down and caught my nipple between his lips. I moaned at not just how good it felt, but the sight of him from that angle. I was torn between watching his tongue circle my nipple and looking at his broad shoulders and down his back to his ass as he began sliding further down the bed.\n\nJoe sat up on his knees and reaching down grabbed the sides of my thong. Breathing hard and with my heart pounding, I lifted my hips and watched him slide the thong down my legs. I moaned at the sensation of it peeling from where it was stuck to my wet pussy and raised my legs so he could remove it completely. Joe's eyes were filled with what now could only be described as lust as he took in my smooth pink skin and tossing the thong aside, he licked his lips.\n\n\"Have I mentioned I've had a good life?\" he asked.\n\n\"It can still get better,\" I replied, sliding my leg around his waist and pulling him forward. \"Now where were you?\"\n\nJoe leaned over me and once again took my nipple into his mouth. This time however, his fingers were sliding through my wet lips and my hips jerked at his touch. He didn't touch my clit or slide his fingers inside; instead he just lightly caressed my at this point dripping pussy.\n\nJoe gave each of my nipples equal attention before working his way further down the bed and sucking on the soft skin of my stomach.\n\n\"Oh please!\" I moaned in anticipation of where he was heading.\n\nAs I had done to him Joe continued licking my stomach all the while teasing the tips of his fingers up and down between my trembling thighs. He seemed to be trying to tease me, but when I lost patience and pushed on his shoulders, he quickly slid the rest of the way down the bed and practically dove into me. \n\n\"Oh God!\" I cried out at the sensation of his tongue plunging deep inside me. \n\nI squeezed his shoulders tightly as he swirled his tongue around. His tongue slid from inside and began working upwards. I moaned and had to make an effort not to move my hips and shove it in his face. Instead I lay there panting and moaning in anticipation as his tongue worked its way through my soft wet folds. He reached the top and I cooed in delight when his tongue traced a circle around my clit. \n\n\"Hmm, that's the spot.\" I breathed as he pressed his tongue harder to it. \n\n\"Yes it is.\" He said against my thigh, \"You really are perfect.\"\n\n\"You like her?\" I laughed, then gasped when he sucked my clit into his mouth, \n\n\"Like her?\" he playfully flicked his tongue across my swollen button, \"I think I'm in love!\" I giggled then stopped when looking into my eyes he added, \"And I like her too.\"\n\nHad he just...my thoughts trailed off and I moaned as he eased a finger inside me and began to pump it while he sucked gently on my clit. Lifting my legs, I put my feet on his shoulders and bringing my hands up began caressing my nipples as he continued to lick me. I let my head fall back on the pillow and closing my eyes, lost myself in the amazing pleasure he was giving me. \n\nI lost track of time as Joe licked, sucked and teased me; playing my pussy as if he knew it better than I did. Several times he brought me right to the edge to the point my back was arching and my legs shaking only to back off and begin kissing my inner thighs until I'd slowed down. I groaned when he added a second finger inside and heard him breath, \"Damn you're tight.\"\n\nHe started pumping both fingers and fastening his lips to my clit began to suck it in and out in time with his thrusting fingers. Again I felt my hips leave the bed and this time pleaded, \"Please don't tease me anymore!\"\n\nJoe started sucking harder on my clit and sliding his hand up captured my nipple between his fingers. I was playing with the other and my breath caught as I could feel my body gathering for its release. \n\n\"Right there.\" I moaned, \"Oh just like that, just like that! Oh, oh....\"\n\nMy back arched and throwing my head back I released a long loud squeal. I could feel my body tightening around his fingers and as my hips started bucking wildly, clamped my legs around his head, pinning his face to my quivering pink pussy. Joe was still sucking and his fingers pumping as I started emitting a series of short sharp yelps while riding the strongest orgasm I'd ever had. \n\nI let out a long shuddering moan when the last waves of pleasure flowed through me and slumping back on the bed moaned, \"Wow, that was....wow.\" I giggled.\n\n\"I'll take that reaction.\" Joe laughed, sitting up between my legs and wiping off his glistening cheeks. I looked down and was thrilled to see he was hard again.\n\n\"I hope that's not all you're taking.\" Beckoning him with my finger I said, \"Come up here.\"\n\nJoe seemed to hesitate, but crawled back up the bed until he was over me. Wrapping my arms around him, I smiled and whispered, \"I want you Joe, I want you so bad.\"\n\nJoe started to lower himself, and then stopped; a strange look in his eyes. \n\n\"What's the matter?\"\n\n\"I can't.\" he said, \"I...I just can't.\"\n\n\"Course you can.\" Reaching down between us, I grabbed him and found he was only semi hard. I began stroking it, \"Don't worry, you'll be able to.\"\n\n\"No, it...it's not going to work.\" He began to try to pull away from me, but I wanted this too badly to let him give up. Keeping my arm around him, I said, \"Don't think about it. Just let it happen.\"\n\n\"Karma, please, we had fun and maybe...hey!\"\n\nI pushed him as hard as I could and as he sat up, I sat up with him and pushed him again. He fell back on the bed and swinging my leg over him; I slid down and with no hesitation took his soft cock into my mouth. I began rubbing his balls as I slowly sucked on him.\n\n\"You...you don't have to.\" He said, \"It's okay, you...oh.\"\n\n\"Hmmm,\" I moaned encouragingly at the feeling of his cock swelling in my mouth. I began sucking faster and his hips were moving even as he still tried to tell me to stop.\n\nHis protests soon turned to moans and I added one of my own at the feeling of him once again fully hard. Removing him from my mouth, I slid up and reaching back guided him inside me. I let my weight go and we both cried out as his impressive cock plunged into my tight pussy. When he was fully inside me, I braced my hands on his chest and began rocking slowly up and down.\n\n\"Easy,\" I moaned, \"Let me get used to it.\"\n\n\"I hope you get used to it.\" He said, as he put his hands on my hips.\n\nI started rocking faster and his hands began pushing and pulling on my hips, helping me to ride him. My body had stretched enough to accommodate him and I began moving more confidently. I looked down at Joe and smiled at the look of pure pleasure on his face. Leaning over, I placed my nipple at his lips and began moving side to side teasing them across his mouth. Joe had begun moving his hips as well and I quickly matched his rhythm.\n\nI couldn't believe how good he felt and the moans coming from him and the way I could feel his him twitching inside me told me he was having a pretty good time as well. Sitting straight up, I gasped as that move drove him deeper, but I continued to ride him. Feeling more desirable than I ever had before, I lifted my arms over my head and slowed my hips so I was moving more sensually. \n\n\"Goddamn, look at you.\" Joe said, \"God you're beautiful.\"\n\n\"You make me feel beautiful.\".\n\n\"Come down here.\" He opened his arms and letting myself down on top of him slid my arms under his. \n\nJoe wrapped his arms around me and holding me close started moving inside me with long slow thrusts that felt better than I could have ever imagined. Nuzzling my face into his neck I began kissing it and moving side to side enough to cause my nipples to slide across his chest again. \n\n\"You look good over me.\" He said in my ear.\n\nFeeling even sexier than before, I said, \"How about you see my best angle?\"\n\nPushing myself up from his chest, I swung off him and getting on my knees pushed my ass in the air and waited for him. Joe sat up and I took great pride in seeing there was nothing soft about him now. He kneeled behind me and whistled, \"That is a hell of a view.\"\n\n\"Glad you like it, maybe I'll let you see it again.\"\n\nJoe grabbed my hips and as he eased inside me I thought Maybe? Who was I kidding, there was no way I would let this be the only time. I groaned as my pussy stretched around him, getting used to him being even deeper. Joe started thrusting in and out with those long slow strokes and I moaned at each one of them. He was moving in a steady rhythm that felt amazing, but I didn't want him to have to feel like he had to hold back and began thrusting back into him.\n\nHe didn't move any faster, but his strong hands slid up my back and grabbing my shoulders, started pulling me back into him, causing him to plunge deeper than before. Releasing one of my shoulders, Joe noved my hair from my back and began rubbing it as he slowed down even more.\n\n\"Damn you feel so good,\" he said softly, \"Look pretty good too.\"\n\n\"You can go faster, if you want.\" I encouraged, \"I'm not going to break\" He gave me a couple of harder thrusts and I sighed \"You can have anything, anyway you want.\"\n\n\"Well in that case.\" Joe withdrew from inside me and grabbing my hips caused me to yelp as he flipped me over on my back. \n\nIn one smooth motion, he quickly slid up between my legs and entered me. I moaned and wrapped my arms and legs around him, pulling him down to me. Joe began kissing my neck and as he slid his arms beneath me and hugged me to him. I lay there sighing contentedly each time he eased deep inside me before sliding back out. I began to move my hips in time with him and closing my eyes turned my head, allowing him better access to my neck.\n\nI purred as he took the cue and began nibbling at my neck and ear. I tightened my legs around him and groaned as his shaft was caressing my clit each time he entered me. My legs were starting to tremble and I groaned at the thought I was going to cum with him inside of me. Joe was breathing heavily in my ear and I could feel his heart beating against my chest as he continued the deliciously slow thrusts that were going to bring me to climax.\n\n\"Joe, you feel so good.\" I told him, \"I've never felt this good.\"\n\nThat wasn't a lie, I'd never had sex like this before and it occurred to me this wasn't sex, but what people referred to as making love. A lot of people made fun of it as if it were a bad thing, but as far as I was concerned there was nothing bad about it. \n\n\"Faster.\" I implored him, \"Please a little faster?\"Joe picked up the pace and I gasped and pushed up into him as my body clung to the edge. Sensing it, Joe gave me a few hard thrusts and I screamed in his ear as my orgasm crashed through me. This time it was his cock my pussy was convulsing around and it felt incredible. I let loose with a squeal so loud I wondered if the neighbors could hear it and what would they think? Well who the hell cared what they thought? I released another loud howl as Joe sped up and was now giving it to me pretty damn hard. \n\nAs the last waves of pleasure crashed through me I bucked my hips, encouraging him to go as fast as he wanted. He was gasping in my ear with every thrust and I could feel his entire body tensing up. ",
        "\"There you go,\" I moaned in his ear, \"Let me feel it. Let me....hmmm.\"\n\nI purred at the sensation of feeling his cock twitch and send a warm stream of cum inside me. Joe slowed his thrusting and I whimpered each time I felt another spurt. His body shook and he sighed in my ear as he relaxed on top of me. We held each other close and feeling a wave of emotion come over me I put my heart on the line, \"I love you Joe.\" I whispered. \"I really do.\"\n\nHe was silent just long enough for me to think I might have made a mistake when he replied, \"I love you too Karma. I think I was in love with you before you moved in, but kept saying I shouldn't be.\"\n\nI sighed at the feeling of him softening inside me and running my fingers through his hair asked, \"Still think you shouldn't be?\"\n\n\"I think you were right and I'm going to do a lot less thinking.\"\n\n\"Good.\" I laughed, kissing his neck. \"Think in work, have fun at home.\"\n\n\"That's a good mantra.\" Pushing himself up, he rolled over on his back, but put his arm out to me.\n\nWith a smile, I slid over to him and resting my head on his shoulder, put my arm around his waist.\n\n\"Speaking of home.\" He said, \"You still leaving after the summer?\"\n\n\"Summer? I'm leaving now.\"\n\n\"What?\"\n\n\"I'm packing my stuff and leaving the basement and coming up here,\" I laughed. \"This bed is a lot nicer.\"\n\n\"Nah, just the company.\" Kissing the top of my head he said, \"Karma that was amazing, I never thought I would feel that good again, or,\" he pulled me closer to him, \"Feel this again.\"\n\n\"I told you, you would. You just needed the right person.\" Thinking back to earlier I asked, \"Joe, were you trying to tell me something at dinner?\"\n\n\"Karma, I've wanted to tell you I've had feelings for you for weeks, I just kept thinking how bad it sounded coming from me. But from you,\" he kissed me again, \"That's different.\"\n\n\"I told you different is okay.\" I reminded him.\n\n\"You're right. Trying something different is fun!\"\n\n\"So let me ask you, now that you know different is okay, you going to try something different at the diner tomorrow?\"\n\n\"You're off tomorrow right?\"\n\n\"Yup.\" I said snuggling closer to him.\n\n\"Then screw the diner, I have somewhere better to be at nine tomorrow.\"\n\n\"Really?\"\n\n\"Really, but I still think I'll keep having the same thing, but in a different way.\"\n\n\"What do you mean?\"\n\n\"Well,\" Joe began as he slid his hand down my back and gave my ass a squeeze, \"Something tells me with you here, there'll be a whole new meaning to sunrise special!\"\n\nI burst out laughing, \"Hey that was pretty funny.\"\n\n\"Wow, you really do love me.\"\n\n\"Why do you say that?\"\n\n\"Because after a year and a half, you finally laughed at one of my jokes.\"\n\n\n\n\nAuthors note: Well I hope you enjoyed this story and also hope you got the message. I am a firm believer in Karma or more bluntly what comes around goes around. Life does not make it easy, nor do some people, but I always try to let my actions be ones that will bring about something good, not bad. Speaking of good or bad, as I always say the only payment we authors receive here is through votes and comments so please take the time to let me know what you thought of Karma. Thank you for reading and supporting my work. LC68"
    ],
    "authorname": "lovecraft68",
    "tags": [
        "mature",
        "older man younger woman",
        "may december romanceq",
        "romance",
        "brunette",
        "oral sex",
        "love",
        "erotic romance"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/karma-7"
}