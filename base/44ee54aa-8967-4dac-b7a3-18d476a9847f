{
    "title": "M Club Ch. 08",
    "pages": [
        "The first rule of M Club is: You don't talk about M Club. The second rule of M Club is: You don't talk about M Club. Third rule of M Club: No touching anyone but yourself. Fourth rule: No recording devices. Fifth rule: No clothing below the waist. Sixth rule: If this is your first time at M Club, you must masturbate. \n\n* * *\n\nSean knocked on Lisa's front door at the scheduled 3:30, realizing this was the first time he would see inside her house. He'd dropped off and picked up Denby there on a couple occasions, but Lisa had been cagey about letting boys inside after the little dust up her younger sister had with her parents over a visiting boyfriend. Today, however, Lisa had the house to herself as her parents and sister were all gone for the weekend at a soccer tournament. She'd offered to host an M Club meeting there, following Denby and Andy's return from their state solo and ensemble contest.\n\nHe caught a quick glimpse of Lisa peering through the curtain on the window beside the door and then it unlocked and opened slightly. Lisa peered around the corner as if hiding behind it for safety. She smiled at Sean and then looked up and down the street.\n\n\"Hi,\" Sean said. \"Worried about your parents having the placed staked out or something?\"\n\n\"Hey yourself,\" she said, backing up and swinging the door ever so slightly wider. \"And, something, yeah.\"\n\nCurious, Sean stepped inside and Lisa immediately closed it behind him. It didn't take but a moment to realize why - Lisa wore not a stitch of clothing on her pale, freckled body. Her red hair was pulled back in a pony-tail and she gave him a slightly shy, slightly devious look as she bit her lower lip. He thought she was waiting for him to comment on her unusual state of attire. What sort of response was she fishing for?\n\n\"Dressed for the occasion?\" \n\nLisa smiled and shrugged. \"Kinda, yeah. And you'll probably think I'm nuts, but this is something I've wanted to do for a long time.\"\n\n\"What's that?\"\n\n\"Twenty-four hour naked challenge,\" she said, leading him in through a tastefully decorated and clean living room. \"It's the first time I've ever had the house to myself that long and I've had this urge to get naked for a long time. Go figure.\"\n\n\"I'd have never guessed,\" Sean said, winking.\n\n\"And you already know I kinda have this fantasy about being naked in front of others. Just figured with you three coming over today, I might never have a better chance. So before I could talk myself out of it, I swore I'd go the full twenty-four hours, starting at about six this morning when everyone else left.\"\n\n\"Cool, good for you,\" he said, genuinely impressed with her conviction and courage. \"I'm sure you won't be the only one naked before too long. Speaking of which, have you heard anything from Denby yet? I didn't want to send a text in case I interrupted her solo or anything.\"\n\nSean followed Lisa into the kitchen, unable to help but watch as her cute, full butt wiggled side to side. He felt the early hint of a stirring in his shorts and urged his little guy to take it easy. Lisa's body was definitely different from Denby's - fuller, softer, and curvier. Definitely cute.\n\nBefore Lisa could answer, both Sean's phone in his pocket and Lisa's on the kitchen table chimed less than a second apart. It was Denby, apologizing for contest running late and saying that they were about to load the bus. It was nearly an hour drive from where the contest had been hosted and they would still have a few minutes' drive over to Lisa's once the bus got back to the high school. That was quite a bit of time to spend with his girlfriend's very naked BFF.\n\n\"Well, that answers that,\" Lisa said. \"You wanna text her back?\"\n\n\"Sure,\" he said, firing off a quick group text acknowledgement and saying that he'd just arrived at Lisa's. \n\n\"Does she know about...\" Sean looked Lisa up and down quick. \"Your challenge?\"\n\n\"No,\" Lisa said. \"Why, should I tell her?\"\n\nSean shrugged. \"She'll find out one way or another. Hope she's okay with just the two of us being here for a while.\"\n\nLisa shot him a challenging look. \"Why wouldn't she be?\"\n\nSean could feel the heat rise in his cheeks. \"Uh, well...you know...\"\n\nLisa cracked a big grin. \"Just messing with you. Yeah, we should probably tell her, though. Better to be upfront than have her wondering if we were hiding something.\"\n\nLisa composed a quick text, which Sean got copied on as well: Sean forgot to mention I'm doing a 24hr no clothes challenge. Don't be too long!\n\nSean looked up. \"Yeah, that'll go over well.\" He could only imagine what Denby was thinking, and it was a minute before the reply came: Go you! I made the mistake of telling Andy I wasn't wearing panties. Who'll have worse blue balls by the time we get there?\n\nSean could hardly believe Denby had just said that, or that she'd confided in Andy about being panty-less. She hadn't even teased him with that little tidbit yet. Most surprising, she didn't seem bothered by the fact that a nude Lisa would undoubtedly get him aroused.\n\nLisa chuckled. \"Poor guy. At least Den doesn't seem too worried.\"\n\n\"No, guess not,\" Sean said, still unsure what to make of that.\n\n\"Suppose that's a contest you'd rather not win, huh?\" Lisa said, casting a quick look toward his crotch. \n\n* * *\n\nDenby glanced up as Andy settled into the bus seat beside her. She was a little surprised that he wasn't sitting in the back with the rest of his buddies like he had on the ride to contest, but then again that was before she'd told him about her missing panties. She still wasn't quite sure why she'd said anything to him, other than perhaps as a bit of payback for the state he'd left her in at school earlier in the week. It was clear she could twist him up into a hormonal pretzel with little effort, and she rather liked that sense of power. Without Sean here, Andy was an easy fill-in.\n\n\"Texting the others?\" He asked.\n\n\"Yeah,\" she said, then leaned in closer to whisper. \"And apparently Lisa's doing some all-day naked thing. Probably gonna torment poor Sean until we get there.\"\n\n\"Gee, how rough,\" Andy said, rolling his eyes. \"And you're not freaking out about him hanging out with your naked best friend for the next hour or so?\"\n\nDenby wondered at her own feelings on the matter. She knew about Lisa's fantasy of being naked in front of a group of people and just being naked in general, so that she would choose today to try it wasn't a complete surprise. Yes, there was a bit of a jealous, nervous angle to Sean being there alone with her, but she'd already fantasized about sharing him with Lisa. And she trusted both of them. Was this asking too much of them, though? What if something did happen? At worst, he might get naked and jerk off with her, which wasn't really any different than what they'd been doing with the club already. And given her little indiscretion with Andy in the band practice room, who was she to judge?\n\n\"I'm sure they'll behave,\" she said.\n\nAndy seemed to consider it for a minute, then had to agree. \"Knowing those two, yeah, probably.\"\n\nDenby noted a bit of an unhappy discussion going on up at the front of the bus. She propped herself up enough to see over the seats and was able to overhear the bus driver telling their band director that the bus wouldn't start and he would have to call for a service tech. How long would that take?\n\n\"That doesn't sound good,\" Andy said, clearly listening in along with her. \"Text the others?\"\n\n\"Let's find out how long, first.\"\n\nOnly a few minutes later, they got the first bit of bad news from Mr. Thurmon as he announced it would be at least an hour for the service technician just to take a look at the bus and probably another hour for it to get fixed or to get a new bus delivered. Since it was a bit chilly outside, the host school had agreed to leave the building open for them to hang out in while they waited on a resolution.\n\n\"Well, crap,\" Andy said as he walked back into the school beside Denby. \"Three hours, probably, until we can get to Lisa's. That's torture.\"\n\n\"Sean'll never make it that long,\" Denby said, remembering his case of blue balls from that make out session several weeks ago - the one which had inadvertently led to the M Club. Expecting any teenaged boy hanging out with a cute, naked girl for several hours to not be aroused for much of that time was an impossibility.\n\n\"You think I'll do much better?\" Andy gave her a conspiratorial grin. \"You're the one who told me you weren't wearing panties under that dress.\"\n\nDenby sighed. \"Yeah, bad move, I know.\"\n\n\"So now what? We'll have to let them know.\"\n\nSeveral thoughts ricocheted through Denby's head, crazy and impulsive and perhaps a bit irrational if she dared to spend too long thinking about them. Throwing caution to the wind had become something of the theme for this week, though, and so far she hadn't been burned.\n\n\"Give me a minute,\" she said, indicating he could continue inside while she held up outside the school. \"I'll call Lisa and give her a heads up.\"\n\nAndy nodded and said he'd meet her inside. Denby took a deep breath and called her best friend.\n\n* * *\n\nLisa had just finished giving Sean the nickel tour of her house, including the nicely secluded backyard hot tub where she'd suggested they might have a little M Club time later that evening if everyone was so inclined, when her phone began to ring. He followed a short distance behind as she hurried to the kitchen to answer. \n\n\"Den,\" she said as she picked up, probably as much for his sake as by way of greeting her friend.\n\nSean couldn't make out any of the words from the other end, so he interpreted Lisa's reaction of surprise and annoyance to realize something had gone wrong. \"Bus won't start,\" Lisa said to him. \"Looking at an extra two hours, probably.\"\n\n\"Well, crap,\" he said. It wasn't that he minded hanging out with Lisa, as he really got on well with her and there was never anything wrong with a naked girl. At some point, though, it might get a bit awkward and he didn't want that getting to Denby.\n\nLisa turned away and continued listening. \"Wait, what? Seriously?\" She looked back at Sean with an unreadable expression. \"You're serious? I mean, yeah, I suppose. Okay. And Andy?\" Another unreadable look from Lisa, before she turned away from him again. Sean was getting nervous. \"What if he's not okay with it? Well, yeah, I guess. You're positive? Uh-huh. Okay, well, have fun and I hope the bus doesn't take too long. And, missy, you and I need to have a long conversation about this later. Yeah. Okay. See ya.\"\n\nLisa set her phone down and Sean could see her take a deep breath before turning back to him. Her eyes were as wide and prominent as her nipples.\n\n\"What was all that?\"\n\nLisa bit her lip and swallowed hard before answering. \"Since it's going to be a while before they can get here, and she knows it'd be hard on you to...wait...Den suggested that I should...um...entertain you.\"\n\nSean felt his pulse quicken and could tell Lisa was just as flustered by the suggestion. \"What exactly did she mean by that?\" He assumed it mean they could masturbate together, ala M Club business. It would certainly be weird doing it without Denby present, but it wasn't that far removed from what they'd already done together on several occasions.\n\nLisa took another deep breath. \"Just don't do anything I wouldn't do. Her words.\"\n\n\"Wait, what?\"\n\n\"I think she just gave us her blessing to make out,\" Lisa said, sounding a bit uncertain. \"I mean, you'd do that with her. Just anything but touching the private bits.\"\n\nSean felt both hot and clammy, aroused and nervous, eager and uncertain. Would Denby have really told Lisa to do that with him? Maybe. He couldn't completely rule it out. But why?\n\n\"Are you sure that's what she meant? I mean, not that I'm not attracted to your or anything, but I'd like to be sure. And even then...\"\n\n\"I know,\" she said, clearly not taking any offense. \"I'm pretty sure, and I'm also not quite sure what to make of it.\"\n\nSean's phone chimed and he found a text from Denby: Show my girl a good time until we get there. Yes, really. Love you both. Off to torture Andy for a bit. ;)\n\n\"What'd she say?\" Lisa sidled up beside him and he showed her the text. \"Guess that answers that.\"\n\n\"What'd she mean by 'torturing Andy?'\"\n\n\"I think she was intending, more or less, to make sure he's got the worst case of blue balls in history by the time they get here,\" she said. \"Unless they can find somewhere to get off and have a little private M Club.\"\n\nSean felt his stomach twist just a bit at that. Was there something going on between the two of them? Aside from their little M Club gatherings, he didn't think they were really in contact with one another. Was that why she was so eager for him and Lisa to hook up - she was more interested in Andy? \n\n\"If you're not cool with that, we shut it down now,\" Lisa said, clearly reading his expression. \"I asked her as much and she said to let her know. Honestly, I think she's just going to be teasing him.\"\n\n\"And you're okay with her messing with Andy? Aren't the two of you dating?\"\n\nLisa sighed and leaned back against the kitchen counter. \"We went on just the one date. Made out a bit afterward. I wouldn't exactly say we're a couple, though, and I'm not sure it'll really go much further.\"\n\n\"Oh. Sorry.\"\n\nLisa smiled and touched Sean on the arm. \"Nothing to be sorry about. I like him, just not really what I'm looking for a couple months before moving away for college. Maybe we'll go out a bit more, play around a bit, but I doubt it'll ever be more than that.\"\n\nSean understood her position and didn't blame her at all. That relationship had always been the hope of he and Denby rather than anything destined to happen on its own. At least she was honest about it rather than trying to force it to work.\n\n\"Should I tell Den not to mess with Andy?\"\n\nSean shook his head no. \"Nah, let them mess around a little. I trust her. And him. Well, her more than him. I don't know. It's not like they haven't seen each other naked.\"\n\n\"Exactly.\" Lisa's hand slid down his arm until it rested in his hand. She then reached out and took his other hand.\n\nSean saw the sparkle in her eye as she looked up at him. While she had been rather suggestive in some of her flirting with him before, he'd always assumed it was just playful banter to tweak both him and Denby. Now, though, he saw a real lust there.\n\n\"And you're okay with...this?\"\n\nShe nodded. \"I think so, yeah. Willing to find out if I'm wrong, at least.\"\n\nSomething occurred to Sean and he gave Lisa a quizzical look. \"Did you and Den set this up?\"\n\nLisa looked surprised. \"No. What, you think she sabotaged the bus?\"\n\nSean shook his head, embarrassed with himself. \"No, suppose not. Just, seemed almost too convenient.\"\n\nLisa slid in closer and wrapped her arms around his waist, pressing her breasts into his chest. \"Based on a few things Den said after that first time we played together, I think she's secretly wanted us to get together. You and me, and her. Maybe this is her way of trying to make that happen.\"\n\nSean felt his half-hard cock twitch at that idea. He let his own arms wrap around Lisa and caress the soft, warm skin of her lower back.\n\n\"I didn't know that,\" he said. \"I mean, the three of us? You and her? Are you two...?\"\n\nLisa bit her lower lip. \"No. Nothing like that. Not really, anyway.\"\n\nSean could read between the lines that there was something there, though it was probably nothing like a full-blown relationship. Had they maybe messed around a little? Or perhaps they'd just talked about fantasies and what-ifs before. If Lisa wouldn't tell him, then maybe he could get it out of Denby later.\n\n\"Not really, huh?\"\n\n\"Not really.\"\n\nLisa lifted up on her tip-toes and wrapped a hand around the back of Sean's neck. He let her pull him down until their noses touched. They looked into one another's eyes and he could just make out a hint of a fruity smell about her. \n\nHe didn't know who moved that final fraction of an inch, but once they began kissing he stopped worrying about it.\n\n* * *\n\nDenby entered the school and found most of her fellow band members sitting around the cafeteria tables, most either chatting or gazing into their phones. She finally found Andy at the far side, talking with a couple of his fellow trombonists. Having a pretty good idea what she'd just set in motion between her boyfriend and best friend, she was in the mood to tease Andy while building her own arousal up to a fevered pitch for tonight, whenever they finally did make it to Lisa's house.\n\nAndy glanced up and met her eyes. She gave an almost imperceptible nod to the side and then wandered off down a hallway. Halfway down the unoccupied corridor lined with lockers she heard footsteps approaching from behind. Glancing back, she found Andy walking quickly to catch up with her.\n\n\"How'd they take the news?\"\n\n\"Oh, well enough,\" she said, not breaking stride as he fell in beside her. \"I told Lisa to keep Sean entertained, so I'm sure they'll figure something out.\"\n\n\"Entertained?\" Andy sounded. \"Like watch a movie, entertained?\"\n\nDenby looked at Andy and gave him a sly smile. \"Probably something a bit more hands on than that.\"\n\nAndy boggled and then grinned. \"You seriously told her to do that? My maybe someday girlfriend with your boyfriend?\"\n\nDenby was still processing her own feelings on the matter, but she liked the edge, the confidence, of having made that decision. She felt worldly, mature, adult. She liked feeling that way in front of Andy. And, judging by the expression on his face, he didn't seem to mind the arrangement either.\n\n\"He's gonna be hanging out with my best friend for two or three hours, all while she's naked,\" she said and then shrugged. \"Better to give them permission now than to expect nothing will happen and deal with the fallout when it does.\"\n\nAndy shook his head but never stopped smiling. \"You're just full of surprises.\"\n\nDenby stopped and smiled. \"I am, aren't I?\"\n\nShe stepped around Andy and peered through the window in the door to the school's library. Her quartet had performed in there earlier and she thought it might make for a nice, quiet place where she could tease Andy while waiting on the repairs to get finished. Assuming it wasn't already locked up, that was. Chairs were up on the tables and half of the lights were off, but otherwise it appeared unoccupied. Looking side to side to make sure no one else was in the hallway, she tested the door. To her surprise, it was unlocked, and she pushed it open and gestured for Andy to follow.\n\n\"Got any more surprises for me in here?\" Andy peered around the empty room as the door shut behind them.\n\n\"Perhaps.\" She let that word hang in the stifling silence of the library while she looked for a suitably dark and hidden corner. \"Sorry I didn't wear any panties for you to cum in.\"\n\nDenby could feel his head snap around at her words, even though she had already walked past him toward a collection of taller book cases. She smiled, confident she had his complete attention. Just for good measure, she gave her hips an extra bit of wiggle.\n\n\"That's okay,\" he said. \"I can think of a couple other good places I could put a load.\"\n\nWell, he wasn't about to allow himself to be embarrassed by her suggestiveness. This could be fun, she thought, but could just as easily get out of hand.\n\nShe led Andy around the book cases into the corner furthest from the library's main entrance. They were almost completely obscured from the rest of the library and no one would be able to see or likely hear them from the door. Good enough.\n\nDenby turned to face Andy and felt a flutter of nerves at his confident posture and the hungry look in his eyes. Perhaps she had pushed things too far. What had she expected to happen? She had wanted to play, to tease, to perhaps get a bit of release without having to wait several hours until the bus issue was resolved. It was all before her, as long as she had the resolve to keep from letting it get too carried away.",
        "\"Oh really? Such as?\"\n\nAndy grinned and shrugged. \"Well, the librarians probably wouldn't be happy to find that all over the books.\"\n\nDenby shook her head. \"No, probably not.\" She took a step toward him, leaving scarcely more than an arm's length between them. \"Got a better idea?\"\n\nAndy shuffled a half step forward. He wasn't nearly as tall as Sean, so he couldn't loom over her like her boyfriend often did, but he had a solid build that gave him a commanding presence. On top of that, he was undeniably confident.\n\n\"Well, every beautiful woman deserves a pearl necklace.\"\n\nDenby gave him a quizzical look.\n\nAndy drew his fingers across his pecs from shoulder to shoulder. \"Across the neck and tits. String of pearls?\"\n\nDenby caught on and thought it was a bold suggestion. She rather liked the idea, too, though not necessarily here and now with her dress and bra on.\n\n\"Not bad. Where else?\"\n\nEmboldened, Andy pressed on. \"Another excellent option is in the waiting mouth of a lovely lady.\"\n\nDenby purred, surprising even herself. Because of her promise to her mother, she'd never so much as touched a cock let along sucked one off. She had, however, tasted a drop of Sean's cum when he'd inadvertently climaxed on her leg a couple weeks back. It hadn't been much, but that little drop had served to get her past an innate fear of what sucking a guy to climax would be like. Now, she couldn't wait to try it.\n\nShe licked her lips dramatically. \"An excellent choice. Got any others?\"\n\nAndy shifted forward another half step, close enough she could smell his natural musk - manly, subtly different from Sean, and not at all unpleasant. His breathing was deep and caressed her cheek.\n\n\"Well, there's the classic,\" he said, words soft and smooth even as his eyes smoldered. \"Deep inside a lover's hot, wet, eager pussy. Best delivered after long, hard fuck when she's begging for it and nothing else in the world matters.\"\n\nDenby realized she had stopped breathing. Her heart pounded, her pussy quivered, and her legs could barely keep her upright. Fuck, she knew Andy was confident, but this was beyond anything she'd experienced before. She couldn't imagine Sean talking to her this way - he was too nice, too polite, too reserved. There wasn't a sliver of doubt in her mind that Andy wanted her and would take her if she let him.\n\n\"That...that sounds nice.\" Denby knew she'd completely lost the upper hand in this little encounter and, hopefully, wouldn't lose complete control as well.\n\n* * *\n\nSean never thought he'd kiss another girl while still dating Denby, yet here he was in Lisa's kitchen in a desperate duel of tongues with his girlfriend's best friend. Lisa may not have had as much experience with kissing boys, but she more than made up for it in enthusiasm. Sean's fears about how this could affect his relationship were quickly drowning beneath the rising tide of hormones.\n\nLisa broke off their kiss for a moment and locked eyes. He was startled by the unabashed lust he saw there. Just how long had she wanted him?\n\n\"Nothing Denby wouldn't do with you, right?\"\n\nSean nodded. \"If that's what she said.\"\n\n\"She lets you play with her tits.\" She leaned back just enough to create a space between them so he could see her girls. While he adored Denby's small, firm breasts with their captivating curves and responsive nipples, he couldn't deny the attraction to Lisa's larger bust and the curiosity of how they would feel under his hands.\n\n\"That sounds like an invitation,\" Sean said, trying to sound smooth in spite of nearly shaking with nervous excitement.\n\nLisa grinned. \"Do you need it in writing?\"\n\nSean slid a hand up her bare side and cupped a breast. His long fingers barely encompassed its entirety and there was a distinct weight and heft to it that Denby lacked. The flesh was softer and yielding, though firmer than he'd have guessed. Her nipple was smaller than her friend's, but still beckoned his fingers and lips.\n\nLisa closed her eyes under his touch and sighed. Emboldened, he cupped her other breast and massaged both in tandem. He drew circles around her nipples with his thumbs and he could feel them harden further under his touch.\n\n\"Denby said you had good hands,\" she said. \"And even better lips.\"\n\nIf he'd had any doubt before, none was left now - Lisa had every intention of taking full advantage of Denby's hall pass. Sean had no resolve to deny her.\n\n\"How about we take this somewhere we can sit or lay down?\"\n\nLisa opened her eyes and nodded. She took one of his hands in hers and he reluctantly disengaged from the other breast. Without a word, she led him through the house back to her bedroom. While the living room couch was both closer and would have perhaps given a less intimate weight to their make-out, having space on her bed was an attractive proposition.\n\nPausing at the edge of her bed, Lisa turned and lifted up on her toes to kiss him again. \"You're still okay with this?\"\n\nSean swallowed hard, unsure just what all \"this\" would entail. \"Just what Denby and I would do.\"\n\nLisa cocked an eyebrow at him. \"I have a pretty good idea what you two have done together. Think we could fit it all in?\"\n\nThere was something different about Lisa that he couldn't quite put his finger on. Maybe it was the way she looked at him? Or how she spoke? Confidence? Aggression? He didn't know what it was, but he was perfectly aware of the effect it was having on him. He wanted what she wanted - everything they were permitted to do.\n\n\"Let's find out.\"\n\nLisa lifted at the hem of his shirt and he helped her get it up and over his head. She ran her hands across his bare chest, following the lines of his muscles and even pausing to tweak his nipples.\n\n\"Sensitive?\"\n\n\"A little,\" he said. Denby had never teased him like that and he was surprised at his reaction.\n\nShe leaned in and kissed and then sucked one of his nipples. That elicited a much stronger reaction than he'd expected - very pleasurable and surprisingly sensitive. She must have noted his reaction as she kept working at the one nipple before switching to the other side.\n\n\"You like?\"\n\n\"Yeah, actually.\" He ran his fingers across one of her nipples and gave it a playful pinch in response.\n\n\"I know, we're here so you can play with mine,\" she said, smiling. \"Just wanted to see.\"\n\nShe unzipped his shorts and worked them off, leaving him standing in just his boxers. The thin fabric did nothing to hide his rampaging erection, though thanks to their previous experiences he had no sense of embarrassment at the showing. If anything, he was eager for her to remove them completely.\n\n\"Much as I hate to, I think we should probably leave those on for now,\" she said, giving him a mock pout. \"I doubt we'd be able to stay within the bounds of Den's rules otherwise.\"\n\n\"Oh? You don't think I could restrain myself?\"\n\nLisa chuckled. \"Maybe it's not you I'm worried about.\"\n\nSean raised his eyebrows. \"Really? How so?\" He liked teasing her, especially since he got the impression that she enjoyed it.\n\nShe bit her lip as if shy, but he could see through it as an act. \"I've wanted to touch you since the first time I saw...it.\"\n\n\"Yeah?\"\n\n\"Uh huh. And if Den would let me, I'd touch it. And rub it. And lick and kiss it.\"\n\nSean's heart thudded and he felt lightheaded as blood rushed down to the organ of her attention. He felt himself twitch repeatedly and her attention was clearly on his shorts.\n\n\"That would be nice.\"\n\nLisa rubbed her hands up and down his hips, her thumbs wrapping around the front until they were perilously close to his erection under that thin layer of fabric.\n\n\"I know it's killing Den not to touch you like that.\"\n\nSean felt a pang of guilt at the mention of Den's needs, desires, and the limits imposed by her promise to her mother. He'd suffered just as much by honoring them. Still, he respected the promise.\n\n\"That makes two of us.\"\n\nDenby looked up at him. In a voice that was scarcely a whisper, she said, \"Three.\"\n\nFuck. She really did want him. She was probably in love with him, and he wasn't sure that he didn't feel the same way about her. He could easily have seen himself dating Lisa instead of Denby. Were it not for a chance meeting at that party over winter break, it could have happened that way.\n\nHe leaned in and kissed her fiercely. Lisa opened her mouth to him and met his tongue with equal force and desperation. With one hand holding her breast, he reached around with the other and brought her gently down to the mattress. His crotch ground into hers at the edge of the bed and he knew without a shadow of a doubt that he'd have taken her then and there if he could have. She wrapped her legs around his waist and pulled him in tight.\n\nSean continued to kiss Lisa's lips with brief pauses to nibble her neck and behind her ears. He played with both breasts and teased her nipples mercilessly with his fingers, eliciting moan after gasp from the beautiful young woman. Each time he got her just right, she would pull his crotch harder into her own and thrust against him.\n\nEventually and almost reluctantly, he slid down her body, planting a line of kisses that led from her lips down her cheek and neck, across her collarbone, and eventually to the valley between her breasts. Unlike Denby's breasts which were firm enough to remain mostly upright when laying back, Lisa's spread out wide under their own weight. He cupped one and gently squeezed it together, lifting the nipple to his waiting mouth. He teased the tip with his tongue, kissed it, and then sucked in the entire areola.\n\nLisa bucked underneath him, whimpering. Sean indulged her by gently suckling on the hard nipple, occasionally flicking the tip of his tongue across it between long, steady pressure. He gave equal treatment to her other breast, all while Lisa ran her fingers through his hair.\n\n\"God, now I know why Den raves about you sucking her tits.\" Lisa's voice was raspy, yet dreamy.\n\n\"Not that it's my business, but did you and Andy do this?\" Sean sucked a nipple back into his mouth as he finished the last word.\n\n\"Yeah, a little,\" she said. \"But he's nowhere near as skilled. Enthusiastic. I'll give him that.\"\n\nSean lavished her with attention in silence for a while, then Denby began to tug him up. \"C'mere, you.\"\n\nSean crawled back up and met her lips - so soft, warm, and yielding. After a few moments of that, she patted the bed beside her and he climbed the rest of the way onto the bed to comply. Lisa nudged him until he rolled over on his back while she sat up and knelt beside him. He appreciated the view, looking up at her breasts as they hung over him.\n\n\"No second thoughts?\"\n\nSean wondered if she asked because she was having some. \"I might later, but not right now,\" he said. \"Not from where I'm lying.\"\n\nLisa nodded thoughtfully and then crawled down to the end of her bed. She knelt between his feet and playfully tickled his soles. When he couldn't hold back from squirming any longer, she laughed and then ran her fingertips up along his calves and to his thighs where she pressed firmly, massaging his muscles.\n\nSean was mesmerized by the sway of her breasts, his attention only occasionally straying up to the sparkling green eyes framed by her long, red hair, or drifting down to the shadowed cleft between her legs where the red curls had since been trimmed away.\n\nShe must have caught him staring, because when he met her eyes again she blushed and quickly looked down. He smiled at the innocent response, a smile which only grew when he realized she was now staring at the tent in his boxers. The tip of his cock was pressing against the waistband, threatening to poke out.\n\nLisa bent down and planted a kiss on one of Sean's knees. It was a short, soft kiss, followed by another and another, each just a bit further up his thigh. As she worked her way up his leg, she bent further forward until one of her breasts contacted his leg. His cock, already growing harder with her attention, throbbed emphatically in response.\n\nAs her lips reached the bottom of his shorts, Sean wondered what she would do next. Denby's rules were a little bit fuzzy, but pretty much meant no direct genital contact. Rubbing with fingers, even though fabric, was off-limits. Dry humping, however, had been okay. If she kissed his cock, even through his shorts, he felt they would have violated the spirit of Denby's permissiveness and he knew he'd feel guilty about it. He didn't think he had the strength to warn her off, though.\n\nLisa stopped kissing and hovered over his boxers. She licked her lips, a mere inch above his twitching member, clearly wrestling with the same desires and reservations. Rather than give in, she leaned further forward and resumed her kisses just above his waistband, following the fine line of hair up to his navel. The gesture successfully averted a directly questionable contact, but moments later he felt her breasts slide along either side of his cock. He gasped uncontrollably and thrust up into her chest.\n\nLisa paused and looked up with an evil grin. \"Everything okay?\"\n\n\"Yeah,\" he whispered.\n\n\"Good.\" She resumed kissing his abs, but rather than continue climbing up, she took her time to kiss all over his lower abdomen, leaving her breasts abusing his poor member. It wasn't something he and Denby had ever done, though his girlfriend's breasts were fair game and she had pressed into his erection with body parts other than her hands on many an occasion. The combination had the feel of something that should be out of bounds, yet he let it continue.\n\nWhat would Denby think of him, of them, right now if she knew what they were doing?\n\n* * *\n\nDenby felt light-headed, standing before Andy as he all but proclaimed his desire to fuck her mouth or her pussy, and wanting nothing more than to let it happen. Was it a result of all her pent-up sexual frustration from not being able to have sex with Sean? Would she have the same response to any other half-way attractive guy standing before her or was there something special about Andy? And which was holding her back more at this point - the promise to her mother not to have sexual relations with a boy before graduation or her relationship with Sean? \n\n\"Which would you prefer?\" Andy said. His grin said he knew exactly what state she was in.\n\n\"Prefer?\" Denby could scarcely put together a coherent thought.\n\n\"If you could, would you rather take my cock in your mouth or that sweet, sweet pussy of yours?\" Andy's hand reached for the bulge in his khaki's and rubbed suggestively.\n\nDenby trembled, wishing she could sit because she no longer trusted her legs. \"We...we know that won't happen.\"\n\nAndy shrugged. \"Didn't say it would. I just asked which you would want.\"\n\nDenby looked back to his crotch as he began to unzip. His brazenness surprised her, yet why should it? What had she expected would happen when she'd led him to a quiet corner of the empty library?\n\nMoments later, Andy extracted his thick cock from his fly, the tip less than a foot away from her waist. As usual, it appeared red and angry, with veins bulging like roided body-builder's biceps. In her mind, it had the characteristics of a bull - strong, stout, and violent. He stroked it slowly, clearly for show.\n\nDenby collected herself as best she could. \"I...I think my mouth. I'd first kneel down a lick the tip.\"\n\nHer attention was given entirely to his cock, so she couldn't see quite what Andy's reaction to her words was. His member twitched in his hand, though, and he rubbed a finger over the tip of his cock as if simulating her hypothetical act. A line of clear fluid stretched from his finger as he lifted it away from the tip.\n\n\"Just a lick?\"\n\nDenby licked her lips at the sight of his pre-cum. \"I'd lick up that little bit you have leaking out, there,\" she said, feeling emboldened. \"Get my first taste of you.\"\n\nAndy moaned deep in his chest and then smeared the liquid around the head of his cock, leaving it glistening.\n\n\"Then I'd kiss it and lick all around the head. And kiss and lick my way down that thick shaft, feeling how hard you are.\"\n\nHe ran his hand up and down several times, slowly and patiently.\n\nDenby smiled. \"And, well, I'd love to run my tongue all over your balls, but they seem to be tucked away. Such a shame.\"\n\nAndy tried to fish his scrotum out through the fly, but there didn't appear to be enough room. She barely refrained from giggling at the frantic effort to produce his family jewels. Ultimately, he unbuckled his belt, undid the button, and dropped both his pants and underwear nearly to his knees.\n\n\"Problem solved,\" he said, perhaps having lost a little bit of his cocky edge. Denby didn't mind regaining a little bit of control.\n\n\"Mmmm...yes, I would definitely want to feel those balls, see how heavy they are. And after using my hand, I'd double-check with my tongue. Need to be thorough.\"\n\nAndy grunted as he continued to stroke. He wasn't going at a very fast pace, but she wondered if he wasn't already on the brink just from sheer arousal. While she liked the idea of him climaxing because of her teasing, she didn't really want him doing it all over the library carpeting. Or, worse, the front of her dress.\n\n\"If you did all that, I don't think I could hold back.\"\n\nDenby looked up from his cock, meeting his eyes. There was an undeniable desperate hunger behind them that made her simultaneously nervous and aroused. Sean, in their play together, had always been polite and playful, never like that.\n\n\"Guess I'd have to take it all in my mouth then, huh?\"\n\nAndy grinned. \"Think you could swallow it all?\"\n\nDenby wasn't sure if he meant his cock or his cum. Did it really matter? \"I'd certainly give it my best.\"\n\n\"I'm sure you would.\" Andy took another quarter step closer, his cock nearly brushing her now. \"And after you finished, it'd be my turn.\"\n\nDenby's heart trip-hammered. \"Oh yeah? And just what would you do?\"\n\nAndy reached down, took the hem of her dress, and lifted it up above her waist. She felt the cool library air touch her soaked, bare pussy. Knowing he was seeing her, probably smelling her as well, sent a thrill through her body.\n\nHe released his cock and placed his other hand on her waist, the first time he'd ever touched her directly in anything resembling an intimate gesture. She shuddered but didn't push him away. Gently, he nudged her to move backward. She complied, shuffling back until her butt bumped up against a table.\n\n\"First, I'd get you up on the edge of this table.\" Denby complied, sliding up until her legs were dangling off the edge. \"Then I'd kneel down between your legs.\"\n\nDenby watched as Andy did exactly as he said, kneeling before her. He left her hem bunched around her waist, leaving her pussy exposed to him, and he gently nudged her legs wider apart. In their numerous masturbation sessions, Denby had let the boys see her girly bits, but never quite so brazenly spread wide and certainly not this close. She could feel his breath. He wouldn't dare actually touch her, would he?\n\nBarely able to speak, she asked, \"And then what?\"\n\n\"I'd explore every last inch of your beautiful pussy with my tongue. Starting at the bottom and working my way up until I reached that lovely little nub I see poking out.\"\n\nDenby was so turned on she could practically feel the moisture dripping out of her. She reached down with one hand and ran her fingertips along her labia, confirming just how slick she was while sending a tremor through her body. It wasn't much of a stretch to imagine it was his tongue touching her.\n\n\"Yes, just like that,\" he said, somehow keeping his voice soft and even despite the tension that crept through. \"And I'd dip my tongue deep inside, tasting that sweet nectar.\"\n\nDenby knew oral sex was something many guys (and some girls) were really into. She'd never quite wrapped her head around how a guy could be interested in tasting her pussy, though. The smell was often pungent and she'd assumed it would be off-putting. Now, however, in the heat of the moment, she began to understand. She had, after all, changed her opinion about tasting a guy after having that lick of Sean's semen. There was an inherent intimacy to the act when in a state of arousal that superseded inhibitions.",
        "She slipped her middle finger into her pussy at least a couple knuckles deep and sighed. \"Just like that?\"\n\n\"Fuck. Yes, just like that. Oh how I want to taste you.\"\n\nDenby had no doubt he meant ever word of it. She almost hoped he would do it, so aroused she was. She removed her finger and slid it up and across her clit.\n\n\"Den, give me your hand.\"\n\nDenby could hear the nerves in his voice clearly now. He'd projected confidence like a master to this point, but even he had limits. She knew exactly which hand he wanted, and she extended it without hesitation.\n\nAndy glanced up, perhaps in asking permission or to give her a chance to say no. She just watched, saying nothing, and he took her hand in his. She trembled as he leaned forward and took that same middle finger into his mouth and closed his lips around the digit. He shut his eyes and she felt his tongue work its way around, languidly lapping up every last drop of her juices as if it was the most delectable food on Earth.\n\nHer finger emerged with a soft pop and he opened his eyes, grinning widely. \"Perfect.\"\n\nDenby felt she was on the brink of orgasm, and that was without hardly having even touched herself. \"If you say so.\" It sounded lame in her ear, but she knew she wasn't thinking straight.\n\n\"You ever taste yourself before?\"\n\nShe shook her head. \"No. I'm...I'm not sure I could do that.\"\n\nHis smile was soothing. \"Nothing to worry about. You taste amazing. Besides, after I slid my cock inside, you wouldn't want to be afraid of sucking me off again.\"\n\nDenby couldn't help but picture that - Andy's thick cock stretching her and then coming back out, glistening with her own arousal. She was so hot that the idea of tasting herself on his cock, normally a turn-off, was now a huge turn on.\n\n\"You'd like that, wouldn't you?\" \n\nAndy blew across her pussy, sending another shock through her body. \"Every bit as much as you would.\"\n\nDenby felt a sudden pang of guilt. She wanted nothing more in this moment than for Andy to fuck her brains out. Yes, she would suck his cock after it had been inside her. Yes, she would swallow his cum. Yes, she would beg him to lick her clit again and again. It was so wrong of her to want this so bad with Andy when it should be Sean.\n\n* * * \n\nSean could feel the deep ache of impending blue balls settling in from Lisa's relentless teasing. He wasn't sore yet, but another five or ten minutes of her breasts dangling and draping across the erection in his boxers would do the trick. He couldn't bring himself to ask her to stop, though. The view down his body was magnificent and he could do little but watch and gently run his fingers through her long, coppery hair.\n\nMercifully, Lisa began to kiss her way up his chest, cutting off the physical contact with his cock. She paused to suck each of his nipples and then licked and nibbled her way up his neck until finally their lips locked again. While tongues probed and dueled, Lisa straddled Sean's waist and he could feel a more insistent pressure settle in against his erection as it became trapped between her legs.\n\nAfter a couple minutes of passionate kissing and light grinding, Lisa sat upright, her weight fully settled on his painfully hard cock. She glowed with perspiration and arousal, her pale skin now rosy. Her breasts seemed to have swelled and her nipples were certainly as engorged as he'd ever seen them. \n\n\"I'd guess you're having a good time,\" she said with a grin, sliding her crotch up and down the length of his cock.\n\n\"Uh huh,\" Sean said, hips thrusting up into her. \"And you?\"\n\n\"Very much so.\" She ran her hands over her breasts, pausing to pinch each nipple in an exhibitionist act. \"Think Den will let me borrow you again?\"\n\nSean wished she hadn't brought up Den, as it injected a small dose of doubt and guilt into an otherwise perfect moment. Still, it didn't make it any less a reality. There would be a reckoning, and hopefully it would be a minor one if Denby had truly envisioned things going like this.\n\n\"Maybe if you ask nicely. What about Andy?\"\n\nThere was a flash in her eyes, gone in a blink, that made him wish he hadn't said anything. She smiled serenely, making him doubt what he'd seen.\n\n\"There's only one man right now who I'd feel comfortable with being my first.\"\n\nLisa didn't give him any time to reflect on her response as she leaned forward and kissed him with a passion bordering on desperation. Their hips met with similar force and purpose, denied only by the thin layer of fabric. Somewhere in the back of Sean's mind he grappled with the realization that Lisa wanted this to go all the way, if not now then later. Between her and Denby, that just sounded like a dangerous path, no matter how much he wanted to believe it could be made to work.\n\n\"Play with my tits,\" Lisa demanded as she came up for breath, sitting upright. She ground her pussy hard along his cock and leaned over him, eyes glazed with lust.\n\nSean obeyed, cupping each breast and holding them still against the quickening pace of her grinding. She was, he realized, masturbating herself on his cock. The fabric of his boxers was irritating and he wished they didn't have to be in the way. Were they not, however, it was unlikely he wouldn't have slipped inside her and neither could have stopped what would happen next.\n\n\"Mmmm...hello there.\" Lisa's words were playful yet labored. He followed her gaze and realized that the head of his cock had worked its way above the waistband. Her forward movement brought her slit right over the tip and he could feel the slick moisture coat him. This most definitely crossed Denby's line, if they hadn't already, but he kept on thrusting back at her.\n\nLisa ground harder and faster. Soon she was moaning, something guttural between a cry and bliss. He felt his own orgasm imminent and moved his hands to her hips, stabilizing himself and meeting her thrust for thrust. Moments later he erupted, rope after rope of cum shooting across his chest.\n\nLisa clearly saw it happen, gazing down as she was, but she kept grinding with even greater intensity. Sean felt the last few dribbles of cum squeezed out of him when Lisa's moans became a gasp and near shriek. From their club experiences, he knew she could be a bit vocal with her orgasms, but this was unrestrained and primal. She stopped moving but pressed harder into his cock, her entire body shaking and eyes clamped shut.\n\nIt was, without a doubt, the sexiest thing he'd ever witnessed or experienced. Better than the first time he'd seen and sucked Denby's tits. Better than masturbating for her or the first time he'd played with both Den and Lisa. On some level, he knew it should have been Denby above him, riding him to orgasm, but he wasn't disappointed it was Lisa.\n\nSlowly, Lisa opened her eyes. Between deep breaths, she smiled. If there was any doubt or guilt there, he couldn't see it. Maybe it would come later. For now, she was as blissfully satisfied and contented as he.\n\n\"Were you...entertained?\"\n\nSean laughed. \"Very much so. That was...intense.\"\n\n\"Incredible.\"\n\nLisa sat a bit more upright, but didn't disengage from his still mostly firm cock. She looked down at his chest and the mess he'd created. With an index finger, she scooped up a dollop and studied it.\n\n\"May I?\" \n\nSean was fascinated that she would want to taste him, but understood the curiosity angle. It was unlikely she'd ever had the chance before.\n\n\"Sure.\"\n\nLisa brought it to her lips and made a show of licking it off with her tongue. Sean felt his cock twitch at the display. Between that and the pressure, he might not even lose his erection. It certainly wasn't fading at the usual rate.\n\nAfter considering the flavor and swallowing the drop, Lisa sucked her finger clean. \"I like your taste, Sean Gregg.\"\n\n\"Good,\" he said. \"You're welcome to it any time.\"\n\nShe licked her lips melodramatically and winked. \"Any time?\"\n\nSean shrugged. \"Well, take it up with Den. Maybe you can share.\"\n\nLisa grinned. \"I like that idea.\"\n\nSean did as well. The idea of playing with both girls at the same time, or each separately, had already worked its way into his regular fantasy rotation. In reality, it always seemed like an impossibility, but now he was wondering.\n\n\"You ever taste yourself?\" She asked the question with a sparkle in her eye.\n\nSean blushed. \"Yeah. Once. Just a little, out of curiosity.\"\n\n\"Well, I haven't seen you licking up your mess after our little club meetings, so I'm guessing it's not quite your thing.\"\n\n\"It wasn't all that.\"\n\nShe chuckled. \"Well, to each their own, I suppose. Hopefully you have a taste for the fairer sex.\"\n\n\"Hope so.\"\n\nLisa pursed her lips for a moment. \"I know Den hasn't ever let you touch her there, but has she ever let you lick her fingers after playing?\"\n\nSean felt his face flush. \"No.\"\n\n\"Want to?\" She looked slightly hesitant, but sounded eager. \"I mean, licking fingers isn't against the rules, is it?\"\n\nThey'd already skirted or outright exceeded the rules already, so Sean doubted this was much worse. It did feel a bit like cheating, like his first taste should be Den, but Lisa had just tasted him so did it really matter any longer? He was curious, and still a bit too turned on to decline the opportunity.\n\n\"Sure.\"\n\nLisa smiled and lifted herself off his hips, allowing blood to surge back into parts he hadn't realized were cut off. His attention was fixated on the fingers - yes, two of them - on her right hand that she slid deep inside her pussy. Slowly, dramatically, she withdrew them and held the glistening digits before his face. He could smell her sex on them and found it intoxicating, different and perhaps a little sweeter than his girlfriend's. \n\nHe lifted his head a bit and guided her fingers into his mouth. The taste was far milder than the powerful aroma - just a hint of sweetness and salt. He certainly wouldn't mind lapping that up from her, or Denby's, pussy.\n\n\"Very nice,\" he said as he reluctantly released her fingers. \"Much better than mine.\"\n\nLisa shrugged. \"If you say so. Now, about that offer...\"\n\nSean was confused for a moment while Lisa slid down his legs a bit. When she leaned forward with her tongue extended, however, he realized she meant to lick his cum from his chest. There was a lot of it, as he'd made a point to refrain from masturbating the last two days in anticipation of their club get together today. She took her time to thoroughly gather up every drop save the little bit that clung to the tip of his fully-reinvigorated cock.\n\nFinished, she smiled at him and leaned in to give him a kiss. Was she challenging his squirminess or did she perhaps have some sort of fantasy about this? Regardless her intent, Sean returned the kiss and didn't even hesitate to meet her open mouth and tongue. He thought he could taste a little of himself on her, but it was hardly anything to bother him. If it turned her on, that was good enough for him.\n\nLisa eventually broke off the kiss and rolled off him completely.\n\n\"Perhaps I should throw your shorts in the wash quick,\" she said, tugging at the bottom of his boxers. \"I might have made a wee bit of a mess on them.\"\n\nSean glanced down and realized she wasn't exaggerating. The entire front was saturated and undoubtedly smelled of Lisa. No matter what Denby had expected would happen between him and her best friend, finding him soaked and reeking of another girl's sex probably wouldn't go over very well.\n\n\"Yeah, okay,\" he said, lifting his butt off the bed so she could finish pulling his shorts free. She paused to give his erection a long look before heading out of the bedroom with his shorts in hand.\n\n\"Back in a few.\"\n\nSean watched her curvy butt all the way out of sight, wondering how or what he would say to Denby when she and Andy finally arrived.\n\n* * *\n\nDenby held her breath as Andy stood up, his cock bobbing and pointing directly at her splayed pussy, mere inches away from penetrating her. He looked down as if studying her and reached out to gently brush her cheek with the back of his fingers. The contact was like a spark, allowing her to breathe again but only in a gasp. With a gentleness that contrasted sharply with his previous demeanor, he continued to trace his fingers all over her face - her lips, ears, chin, nose.\n\nHe cupped her face in both hands and leaned down as if to kiss her. She almost panicked, unsure if she would turn away from him or accept the intimate gesture. Flashing and masturbating before each other had been one thing, but a kiss seemed too much a betrayal of Sean.\n\nAndy, however, did not kiss her. Their heads were mere inches apart, far enough only so they could clearly focus on one another. She felt his hot breath caress her skin while her heart pounded in anticipation of what might come next.\n\nHe smiled and reached behind her back. A moment later, she heard the zipper on her dress being undone. Again, he managed to both startle her with his boldness, yet deftly avoid overstepping her hard boundaries.\n\n\"What do you think you're doing, mister?\" she said with far more sass than she felt.\n\n\"I'm releasing your lovely breasts to their natural state.\"\n\nDenby, for all her excitement, was suddenly very nervous about being caught. Hiking the hem of her skirt up was one thing - she could slip that down in a fraction of a second. There was no quick recovery from pulling down the top of her dress and her bra, especially when she couldn't zip the dress on her own. Granted, Andy was already bare from the waist to his knees, but he could probably pull that up in a hurry if the library door opened.\n\nWhen she said nothing, Andy must have assumed she was okay with him continuing. Was she? Why hadn't she told him to stop, that her pussy was plenty of a show for right now? As the zipper reached her mid-back and he slipped the straps off her shoulder, she came to realize just how intoxicating the risk was. It was insanity, what they were doing, yet that made it even more desirable to continue. The group masturbating had opened the door to certain deeply hidden aspects to her personality. This felt like she was stepping through a door into an entirely different house, one full of new surprises waiting to be discovered.\n\nUnder Andy's fingers, her bra straps joined the dress around her arms. He didn't undo the clasp, but still managed to pull the cups down just enough to reveal her modest breasts to his eyes and the chill air. Her nipples were hard as bullets and ached to be touched.\n\n\"Those what you were looking for?\" \n\nAndy nodded, taking in her beauties and filling her with pride at the attention. She wanted him to touch them. Maybe even lick and suck them. Was that what Sean was doing with Lisa, right now? It's what she had granted permission for them to do, in not so many words. But Sean hadn't given her the same license with Andy. She knew it was assuming too much that he would be okay with it. If he and Lisa had taken her up on the offer, then yes, he'd probably be okay with this. If he'd declined, however, this could be very bad. Worse than it already was. She certainly wasn't going to ask Andy to pause so she could send Lisa a text to compare notes.\n\n\"Magnificent,\" he said, leaning back so he could take them in. He gave his cock a quick tug for emphasis. \"May I?\"\n\nAt least he was asking. \"God, I'd love to let you play with them right now. I'm so fucking horny. But...\"\n\nAndy was quick to nod in agreement. \"Best to stick with M Club rules until or unless permission is granted otherwise.\"\n\nDenby gave him an apologetic smile. \"Exactly.\"\n\n\"At least I'm still allowed to look at you,\" he said, doing exactly that. \"And tell you in explicit detail all the things I'd like to do with you and to you. All while jerking off and watching you...\"\n\nThat tiny sliver of relief did Denby a world of good. She didn't have to worry about Andy, the bold and cocky side of him that was increasingly making its presence felt, pushing her too far. All she had to do was masturbate with him, which is all she'd really wanted or intended to do anyway. That she was considerably more naked and in a school library where someone could walk on them at any moment...\n\n\"Tell me,\" she said, reaching down to slide her fingers along her pussy with one hand while pinching a nipple with the other. \"Tell me what you'd do with my tits. Tell me where you'd stick that cock.\"\n\nAndy, standing between her legs while slowly stroking, got a hungry glint in his eye. \"First, I'd feel those tits, find out if they're as firm as they look. And I'd rub my fingers around your nipples, make sure they're good and hard.\"\n\nDenby acted out his words with one hand while the other continued to play between her legs. \"Oh, they're hard.\"\n\n\"Then I'd kiss each side. And lick and suck a nipple until you were moaning.\" He paused to flick his tongue at her suggestively. \"Of course, I'd have to give the other nip the same treatment. Wouldn't want one feeling left out.\"\n\n\"Of course.\" She pinched and tugged each nipple in turn.\n\n\"And while I'm doing all that, I'll have to slip a finger into your pussy, to see just how wet and hot you are.\"\n\nDenby slid her middle finger into her pussy as deep as she could, sighing as she did and imagining that it was Andy doing the penetrating. \"So wet. So hot. It's totally ready for that thick cock of yours.\"\n\nAndy's stroking had clearly intensified. He watched her hand intently, probably imagining it was his fingers as well.\n\n\"Good, because I can't wait a second longer to slide inside you,\" he said, thrusting his hips forward, the angry tip of his cock firing in and out through his encircled hand. \"I'd put the head of my cock at your hole and slide it up and down just to make sure I'm good and wet.\"\n\nDenby slid her fingers up and down her slit, spreading her moisture all over. \"Oh, I like that.\"\n\n\"Then I'd slide inside, just an inch.\"\n\nDenby eased two fingers into her pussy. It was easily wetter than she'd ever felt, though it wasn't usually her style to put her fingers in there. She compared his cock with her fingers and realized that she wasn't even close to approximating the girth with which he could penetrate her if allowed. Was that really supposed to fit? She added a third finger as a poor approximation, surprised that it fit as well as it did.\n\n\"More,\" she said, her voice becoming hoarse. \"Give me all of it.\"\n\n\"It's all yours, baby. Until I can't go any deeper.\"\n\nDenby thrust her fingers as deeply as she could while Andy's hand pumped furiously. She abandoned her nipple to get her other hand working at her clit, sending wave after wave of heat through her body. She knew it was an incredibly slutty display, yet she didn't care - they were both getting off, charging toward a release so desperately needed.\n\n\"Oh, god,\" he moaned. \"You're so hot and tight and wet. Such a perfect pussy. Such a hot, sexy woman.\"\n\nDenby went at herself frantically, feeling her orgasm imminent and suspecting he was also close. \"Your cock feels incredible inside. So full, so thick. Cum in me! Please! Now!\"\n\nHer words must have done the trick, as Andy clasped his cock with what must have been painful force and pumped at a blinding speed right until he came. His hand froze and he came all over her hands, her crotch, and the inside of her bunched up dress. With a grunt and a quick stroke, another thick rope of cum followed.\n\nDenby was equally turned on and annoyed that he'd left his mess all over her. Her imminent orgasm won out and she continued the fluttering of her fingers across her clit until it finally arrived. The room went dark and as her entire world vanished in that cascade of sexual release. She rode out several aftershocks until she could finally open her eyes again.\n\nAndy looked down at her with an expression of open adoration and a hint of guilt. He knew he'd made quite a mess and was probably desperately hoping she wouldn't get pissed at him. That show of concern was enough to diffuse any recrimination she might have unleashed.",
        "\"That was...intense,\" she said.\n\n\"Fucking incredible. You're amazing.\"\n\nDenby glowed at his compliment, knowing he meant it.\n\n\"Don't suppose you could find me a tissue or five?\" Denby was reluctant to even move her hands away from her sodden pussy for fear of spreading the mess further - hers and his.\n\nAndy's eyes went wide. \"Oh, right. Right away!\" He quickly pulled up his pants and began to fasten his belt even as he hurried across the library toward the check-out desk.\n\n\"Oh, fuck!\"\n\nDenby's heart skipped a beat at Andy's exclamation. She could hardly see him through the gaps in the book shelves. \"What?\"\n\nAfter a moment's pause, Andy answered. \"Huh? Oh, sorry...it's nothing. Just noticed I got some on my own hand. Hoping I didn't get it on my pants or shirt.\"\n\n\"Well, hurry it up,\" she said, only slightly annoyed. \"I'm not getting any cleaner and this would be a hell of a sight for someone coming into the library.\"\n\n\"Found some,\" Andy said a moment later. He trotted back with a handful of tissues.\n\nIn a slightly awkward arrangement, he bent to wipe some of his mess off her hands and dress. He looked at her bare pussy and was clearly struggling with whether he was allowed to go any further in helping to get her clean.\n\n\"Thanks,\" she said, taking a couple unused tissues. \"I'll get the rest.\"\n\nAndy nodded and occupied himself with blotting a few drips that had gotten on the floor. When Denby felt she was as cleaned up as she was likely to get, she stood up and let her dress fall to her calves. She got her bra back into position and then pulled the shoulder straps of her dress up.\n\n\"Zip?\"\n\nAndy got her dress zipped up and then gave her a thorough inspection. \"You look clean.\"\n\n\"Good. You too.\"\n\nDenby felt spent, like she'd just run a long race. The combination of physical exertion, sexual tension and release, and the psychological angle of what this meant about her as a person and her relationship with both Sean and perhaps Andy left her wanting nothing more than to go curl up for a little while and reflect. She hoped Andy wouldn't take that the wrong way.\n\n\"Say, I'm gonna go hit the girls' room,\" she said. \"Wait a minute or two before you leave. Don't need to risk spreading too many rumors, right?\"\n\nAndy gave her a single curt nod. She got the sense there was something bothering him. But what? Did he think this made them a couple? What did it make them? Friends didn't really do this sort of thing. She'd expected to have self-doubt to work through, but strangely never considered Andy's feelings. He was a guy - they just wanted to get off and move on, right?\n\n\"We good?\"\n\nA smile quickly crossed Andy's face and he wrapped an arm around her. \"Very good. That was fantastic. Any time you want to go another round, just let me know.\"\n\n\"I will,\" she said and raised on her toes to give him a quick peck on his cheek.\n\nBefore the awkwardness could settle back in, she slipped out of the library and made her way down to the nearest restroom to clean up and regroup her thoughts. Her impulsiveness could make things a mess; perhaps already had. Yet, for it all, she had enjoyed the hell out of it. She loved the feeling of sexual empowerment, the heightened experience of having been so exposed and risky. She had definitely learned more about herself.\n\nWhat was waiting for her back at Lisa's house? More answers, or more questions?"
    ],
    "authorname": "WatchingCloud",
    "tags": [
        "masturbation",
        "public",
        "school",
        "library",
        "dry humping",
        "dirty talk",
        "friend",
        "sharing",
        "sharing boyfriend",
        "exhibitionist"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/m-club-ch-08"
}