{
    "title": "Nash",
    "pages": [
        "When her mother told her she wanted her to come spend winter break with her new husband's family, Nash was less than excited. She had zero desire to spend her entire break with strangers and a stepfather she had met twice. But family was super important to him and he wanted her to come. Her mother had pleaded with her, telling her it would be a one time thing since this was my last winter break in college. Next year she would have a job and be too busy to spend the holidays at home. \n\nNash had agreed, reluctantly.\n\nThat was how she found herself pulling up to a giant farmhouse surrounded by huge outbuildings and a plowed cornfield on both sides. She had never been to a farm before and she stared in horror at all of the chickens running around the huge yard. She also stared at all of the people watching them pull in, gathered around some sort of small cleared away dirt patch with benches on each end, like it was for a game. She imagined it was horse shoes. \n\nFan-fucking-tastic. She sighed and fell back in her seat as they pulled all the way up to the house, parking between two old trucks. This was going to be hell.\n\n\"Hank!\" an older woman was calling as she hurried out of the house, wiping her hands on an apron. \"Oh, my Hanky, you came!\" she laughed, running up as her step dad jumped out of the car and hugged the woman. \n\n\"Hey Ma!\" he laughed. \"Supper almost ready?\"\n\n\"Always with the jokes! Come on now and introduce!\"\n\n\"Elle, come on out here! You too Nash!\"\n\nHer mother hurried around the car, but Nash was more slow, watching all of the approaching people. \n\n\"This is my wife, Elle and our daughter Nash,\" Hank told all of them proudly as people started hugging Hank and even her mom. Nash stepped back when it looked like people were coming to her for hugs, giving Hank a hard look. HIS daughter?!? Her mother gave her a worried look, but Nash stayed quiet, gritting her teeth. \n\nShe still dodged hugs, moving around the car as all of the people talked at once, asking about the long drive and how was work and how had he met her mother. So many questions! Her mother was smiling, happily answering questions and letting Hank's mom hold her hand as the woman looked down at her. \n\n\"All of you, come inside!\" his mother finally called, shooing away most of the gathered people. \"Let them breathe! Go back to your game and let me catch up with my boy! Joey, you go and get your pa, he's in the pig barn. Come on inside, all of you,\" she called, leading Nash's mother by the hand. \n\nNash skirted wide of all of the people watching her curiously and followed her mom and stepdad into the huge house. The kitchen was large, with a huge table and very old fashioned with the wooden floors and worn wooden cabinets. It looked rustic enough to be in an old time movie. \n\nHis mother led Nash's mother to a stool at the island and Hank sat next to her. Her mother looked back at her and patted the other stool next to her. Nash rolled her eyes and sat down. \n\n\"Well aren't you just a darling?\" his mother asked, stroking Nash's hair back and taking her shoulders to turn her to face her. \"Nash, what is that short for?\"\n\n\"It's just Nash,\" she answered, a little tersely. People always asked that. \n\n\"When she was younger, we called her by her first and middle name together,\" her mom said quickly. \"Nash Ella.\"\n\n\"Oh, is she named after you?\"\n\n\"No, I am Elleanora, she is named after my grandmother, Glenella. She went by Ella. Nash was from her other grandmother, Berinash. She was from Europe.\"\n\n\"I've never heard that name!\"\n\n\"I've never heard it since, but I grew up hearing it so I didn't know how unusual it was. Still, it's a lovely name and I thought Nash was so cute for a little girl.\"\n\n\"It's adorable, just like her. How old are you, Nash? What grade are you in?\"\n\nNash gritted her teeth and looked at her mother in misery.\n\n\"She's a senior in college,\" Hank volunteered quickly. \"Just short like her mother and her mother's mother.\"\n\n\"Oh, well isn't that wonderful! You will be just the second college graduate in our family! It's not a big thing around here, most people go into farming or work at the factories.\"\n\n\"Even the women?\" Nash asked, a little surprised. \n\n\"Well no, of course not. Most are married right out of school and start their own families. The few that don't work up at the diner or one of the shops in town.\"\n\nNash flinched again.\n\n\"What are you going to school for, sweetheart?\"\n\n\"Engineering.\"\n\n\"Oh! Well, goodness, aren't you just a little smarty pants!\" the woman giggled. \"Hanky, you never told me she was so smart! Just that you had a daughter now!\"\n\n\"I'm not his daughter,\" Nash interjected quickly. \"I've met the man twice. I have a father and his name is Eric.\"\n\n\"Oh...\" his mother answered, her face falling as she looked at Hank, who blushed. \"Well, we are all family here and we are glad to have all of you. I'm glad you came!\"\n\n\"Nash!\" her mother whispered. \"He is so proud of you and proud to call you his daughter! You don't have to hurt him like that!\"\n\n\"I don't even know the guy! I met him after your honeymoon for like, fifteen minutes and then at Felicia's wedding for about ten minutes.\"\n\n\"Well if you had sat with us...\"\n\n\"I was IN the wedding party! I had to sit at the main table, I told you that!\"\n\n\"Well you could have come around after!\" \n\nI stayed long enough for the dance with the groomsman and pictures, then I had to go. I told you I had a project due on Monday that I had to go over and double check that night. You could have invited me to your wedding, you know.\"\n\n\"I told you, we just went to Vegas! Neither of us wanted to wait or have a big to-do!\"\n\n\"You can't lay it on me that I don't know this guy. You guilted me into coming on this trip when you know how I feel about crowds and animals. You failed to mention his family was enormous and they lived on a farm with more animals than there are people!\" \n\n\"Well, sweetheart,\" Hank's mother interrupted sweetly, \"we have things besides animals. An orchard where you can have your space! And your room will be nice and cozy and you don't have to share. We have a television and all kinds of movies too, and an older TV in the basement with a video game machine. Hank used to love to play his games on it!\"\n\n\"Thanks, but not really into TV,\" Nash mumbled. \"I brought books and homework.\"\n\n\"Oh... well, I will make sure you aren't disturbed then! I do hope you'll be able to join us for Christmas dinner and gifts? There will be a lot of people, but it's only a few hours?\"\n\nThe woman was trying to be so nice and accommodating that Nash could only nod and blush. \n\n\"Wonderful then, it's all set! If I may ask? Most people just love animals, you don't like them?\"\n\n\"Nash is allergic,\" her mother said quickly. \"We got a dog when she was younger and her eyes swelled shut and she had a hard time breathing. The same with her friend's cat. It's such a severe reaction and a little bit terrifying to her. She was tested and she has to have shots every month because of her allergy to so many animals.\"\n\n\"Well, goodness! That's just terrible! Well we have plenty of places where there aren't any animals and none ever go. Hank will be happy to show you a few!\"\n\n\"I'd be glad to,\" Hank offered with a tight smile, his look hurt.\n\nNash sighed again. \"Thanks,\" she half whispered, feeling a little bad. \"Can I get my bag and go to my room?\"\n\n\"Of course, I'll bring in the bags!\" Hank smiled. \"Come on with me and I'll point out a few places to you!\"\n\nNash followed him, hugging herself and keeping her head down. \"That's the hay barn there, it has a loft and a window that gets good light. I used to read there myself when I was younger. No animals in there. Over there is the orchard, we keep that fenced off too, no animals. Right up in there, that's the combine. It's got an enclosed cab and a comfy seat to sit in. Lots of light and stays nice and warm.\"\n\n\"Thanks,\" she offered, grabbing her laptop bag and backpack. Hank grabbed her clothes bag before she could, then his and her moms bag. He showed her to her room first and she looked around at the tiny room with the slanted ceiling that was more like a glorified storage space. The bed was tiny, the mattress thin. She sighed and turned on the light, sitting down next to her bag that Hank had set on the bed. It smelled musty and like it was ancient. 9 days here was going to be worse than hell. There wasn't even a window and it was stuffy in there. \n\nShe left her other things but grabbed her book and went back downstairs, sitting next to her mother who was happily telling his mom about her job selling art for artists. Hank gave her a tight smile as she sat and she quickly looked away.\n\n\"Nash, sweetheart, there's a game of Rolle Bolle going on outside. Do you like games?\"\n\n\"What's Rolle Bolle?\" she asked, confused.\n\n\"It's sort of a cross between horseshoes and bowling. You have a bolle and it's a beveled wheel and you try to get it to curve into the peg. Closest team to the peg gets the points,\" Hank quickly told her.\n\n\"Umm... no thanks. I think I may go walk around a bit though,\" she mumbled, hopping off the stool and going outside. Looking around, she decided to go around back and not near the people. She was halfway to the combine when someone yelled. \n\n\"Hey!\" a male voice called and she turned around. Three young men were walking towards her, grinning. \"You're Hank's daughter?\" the tall one asked.\n\n\"Step,\" she corrected quickly.\n\n\"I'm Bill's boy, Uncle Hank told dad all about you.\"\n\n\"I don't really know who anyone is... I don't even really know Hank at all. I've spoken to him twice before the trip and I had my headphones on the whole trip here. Umm... excuse me,\" she offered, turning to head to the huge machine.\n\n\"What's your name?\" one of the other boys asked, all of them keeping up with her.\n\n\"Nash.\"\n\n\"Like... Nashville?\"\n\n\"No, like Nash.\"\n\n\"Hank said you were a real city girl,\" the first boy grinned.\n\n\"I am, but I'm also not gullible, so don't try anything.\"\n\n\"Wasn't gonna. You have a boyfriend?\"\n\n\"Are you really asking me that? You're literally my cousin.\"\n\n\"Step,\" he shrugged. \"No real relation.\"\n\n\"It's none of your business.\"\n\n\"I'm Gavin, this is my little brother Darren. This is my cousin Beau. You really in college?\"\n\n\"Yes.\"\n\n\"Come on, Gav, she's kind of a bitch. Let's go,\" Beau scowled.\n\n\"She's hot but not worth it,\" Darren agreed.\n\n\"Y'all go ahead,\" Gavin grinned. He turned back to Nash who was eyeing the steps of the machine, wondering how she was supposed to get up to the first one. \"You ever been in one of these?\"\n\n\"No. Hank said I could be alone in here, I wanted to see it.\"\n\n\"Here,\" he offered while the other two boys walked away. He took Nash by the waist and lifted her up to the steps.\n\n\"Let go!\" she yelled, slapping at his hands. \"Just go away!\"\n\nGavin laughed and shrugged, leaving her up on the steps as he stepped back. \"Suit yourself,\" he called, turning to follow the other two.\n\nNash climbed the rest of the way up and opened the door, then climbed in. The space smelled... odd. Like the mechanic garage where she got her oil changed. She didn't really like it, not to mention it was incredibly bright and even a little too warm. Climbing down, she had to jump down to the ground when she hit the last step. The orchard didn't look appealing at all with all of the rotten apples on the ground. They looked squishy and gross. She headed to the hay barn and peeked in. It also smelled odd and she wondered if that smell was the hay. She could see the loft and the ladder up to it, along with the window Hank had been talking about. It looked like the most likely spot. \n\nShe climbed up the old ladder and made herself comfortable in the stream of light, then settled in to read. It was quiet and peaceful. Nice.\n\n\"Come here often?\"\n\nNash looked up and Gavin was sitting back in a huge haypile in the loft.\n\n\"I didn't know anyone was in here, Hank said it was empty and quiet,\" she scowled.\n\n\"Usually is, I nap here when I'm bored,\" he grinned, getting up and moving closer.\n\n\"Not looking for company,\" she told him as he sat down near her.\n\nHe shrugged, still smirking. \"How 'bout you let me eat your pussy?\"\n\nNash was stunned to her core, blinking at the forward and crass boy. \"Are you crazy? We're freaking cousins!\"\n\n\"Not really,\" he shrugged. \"It's kind of my thing, I fucking love making a girl come for me.\"\n\n\"As if you could! No, what the hell is wrong with you?\"\n\n\"No big deal, no strings, just having fun and passing the time is all. It's win win, you get to come and I get what I want too. What do you have to lose?\"\n\n\"You're out of your mind! No!\"\n\nHe chuckled and moved closer. \"How bout you let me fingerbang you then?\"\n\n\"What is wrong with you?!?\"\n\n\"Don't be so uptight,\" he laughed. \"Cut loose and have some fun, it's no big deal.\"\n\n\"Leave me alone!\"\n\n\"We can at least make out some,\" he grinned, scrunching his nose at her. \n\n\"I am not doing anything with you!\"\n\n\"Don't you think I'm cute?\"\n\n\"What does that have to do with it?\"\n\n\"We're both hot, we can make the most out of this, right? We'll never see each other again, really, what do we have to lose?\"\n\nNash thought about his comment a moment, a little confused. What did she have to lose? She no longer had a boyfriend, they had split amiably, having nothing in common. \n\nHe saw her hesitate and he smiled, knowing he was winning her over. He didn't wait, he leaned in and grabbed her face, pulling her into a kiss. Nash hesitated, a little surprised, then just kissed him back. Kissing was harmless and... he was actually a great kisser. \n\nBearing her back to the floor, he caught her wrist and pinned it above her as his body covered hers, grinding hard against her. She gasped and groaned, shocked at the large, hard cock pressing through his tight jeans. His hand released her wrist, sliding down her arm to cup her breast and squeeze gently.\n\n\"Mmmm,\" he smirked, pulling back slightly to look down at her. \"No bra, I fucking like that,\" he whispered, then moved back in to tease her with more kisses, sucking on her lower lip and nudging her nose with his as his hand slid further down. He stopped between her legs, rubbing gently over her yoga pants, making her whimper into his mouth. \"You getting wet for me, baby?\" he asked, dragging his teeth over her chin, his eyes shining. \n\nNash blinked up at him, a little lost in the sensation and he laughed low in his throat as he kissed her again. He eased his hand up, then into her pants and underwear. When his finger slid between her pussy lips, gliding with ease, he made a noise of appreciation. \n\n\"That's fucking perfect, baby. You're so wet for me, I fucking love that. I want to taste that wet pussy!\" he whispered, his finger gliding down and in as his thumb found her clit to rub and circle.\n\nNash gasped, her eyes going wide as her back arched. Richie had never been able to make her feel this way! \n\n\"You like that, babe?\"\n\n\"Yes!\"\n\n\"Let me lick this pussy and I'll take you all the way. Make you come for me over and over again. You want it, you know you do,\" he whispered, his thumb moving faster.\n\n\"Oh god!\" she whimpered, her hands going to his arm. It was so hard and solid as he worked her. She came hard and unexpectedly, clenching her teeth with a wail as her body shuddered. \n\n\"Oh fucking hell, babe,\" he groaned excitedly, his eyes going half glazed as her pussy spasmed around his finger. \"That's fucking right!\"\n\nNash shook her head as it overwhelmed her, panting and trying to breathe again. There was movement and she realized he was pulling her pants down and off completely. Shoving her legs high and wide, he dropped down and wrapped his mouth around her pussy, licking and sucking with a loud moan. Nash could only suck in another breath as she whimpered, arching her hips up to his mouth. Sucking her clit up hard in his mouth, he shoved two fingers into her, stroking her from the inside.\n\n\"Oh god oh god! Oh...!\" Nash panted, her hands clenching into fists as his tongue worked her clit. \"I can't! I can't! Ohh! I want it!\"\n\nHe growled around her and sucked harder, moving his fingers faster as he flicked her g-spot \n\nNash screamed as the second orgasm hit her and his free hand shot up to cover her mouth as he kept working her, even as her walls clenched down on his fingers hard enough to force them to stillness.\n\nShe yelped in breaths as she finally came down, her body still trembling and shaking. \n\nGavin licked slowly, relishing in how wet she was, then kissed her bud before leaving a trail up her hip and moving up to kiss her lips again. Nash was hardly able to kiss him back, her muscles still useless as she lay there in shock. \n\n\"Fucking perfect, babe,\" he whispered.\n\nNash blinked and part of her mind knew ths was where he tried to talk her into sex, or returning the favor. He kept kissing her as he reached down and pulled her underwear and pants on. \n\n\"I'll be fantasizing about that for a fucking month,\" he grinned, rubbing her nose with his. \"I can't fucking wait to do that again, babe.\"\n\nNash lay there panting as he got up and went to the ladder, climbing down, still smiling. She blinked up at the ceiling. That was it? No pressure? He had said that was all he wanted, but she hadn't believed him. \n\nIt took her half an hour to finally get up and fix her underwear and pants and even then she just sat there staring and wondering what the hell had happened. Had she really allowed that? It had been amazing. And he had said he wanted to do it again. That sent chills of excitement through her as she thought about it.\n\nFinally, she climbed down on still wobbly legs and headed to the house. It was full of people, most of them sitting around the huge table. \n\n\"There she is!\" Hank smiled. \"Your seat is right here by your mom!\"\n\nNash looked around, then went and sat down, trying hard not to look at Gavin down the table. He looked very smug as he sat there, his eyes full of pride. \n\nShe felt her face turning red and her mother patted her shoulder. \"This won't take long Nash Ella, if it's too much I can bring you up a plate.\"\n\n\"I think I'm ok,\" Nash whispered, glancing around again. Gavin was talking to the man next to him, but his eyes were on her and he was smiling. She tried to suppress her own smile, looking down at her plate.\n\n\"What happened to your book?\" her mother asked. \n\n\"Oh! I guess I left it in the barn. I was... looking around a bit.\"\n\nShe looked up and Darren was sitting across from her. \"You should come play Rolle Bolle after dinner,\" he told her.\n\n\"I don't know how to play,\" she answered, wondering if Gavin had told him.\n\n\"We can teach you,\" Gavin offered from down the table. \"After dinner is the under 25 crowd, no old people allowed.\"\n\n\"Hey now, boy,\" an older man scolded teasingly. \n\nGavin gave him his easy grin, then looked back down to Nash. \"It'll be fun. Come out with us, be sociable.\"\n\nNash peeked at her mother and Hank was watching her hopefully. Her mother looked a little nervous, knowing how Nash felt about being around a lot of people. \"Maybe,\" she answered with a shrug. Hank smiled like she had said yes, looking excited. Her mother still looked worried. \n\n\"Beau and Gavin are always team captains,\" Darren told her. \"Sometimes we have to switch off if a lot of people want to play. We take turns by age, gramps says that's the most fair... So, how old are you?\"\n\n\"She's 22, didn't you hear dad after Hank talked to him?\" Gavin called.\n\n\"Oh... you look more my age,\" he shrugged. \"You're in college, right?\"\n\n\"For one more semester,\" she nodded, hating that everyone was listening to them talking to her.\n\n\"What's your major?\" another man asked, much older.\n\n\"Engineering.\"\n\n\"Oh yeah? What flavor?\"\n\n\"Electrical.\"",
        "\"No kidding? My wife's nephew is an engineer, he works for Boeing. You know where you're gonna work after?\"\n\n\"Yes, actually. It's a smaller firm but they are up and coming.\"\n\n\"In the city?\"\n\n\"Yes.\"\n\n\"Still can't believe our Hank is living in the city,\" his mother shook her head. \"So far from home!\"\n\n\"I told you, ma, I have my little family there and I'll come back as often as I can. Holidays and big events. Elle doesn't have a large family, it's just me and Nash, so we can always come here for holidays.\"\n\n\"Well if it's just them, why can't you move here?\" his mother asked, sounding like her feelings were hurt and she had said it a dozen times before.\n\n\"Ma, I told you, they have a house there and they have lived there since Elle was a kid.\"\n\n\"There are places here too! Plenty of houses closeby for sale, land too! You can sell your house in the city and...\"\n\n\"Ma! Ma, her job is there and Nash goes to school just half hour away. We've been through this. Maybe when she retires.\"\n\n\"Hank...\"\n\n\"That's the end of it, Ma. Darren, you're pretty close to graduating, aren't you?\"\n\n\"One more semester! I can't wait! Already have my place all picked out and I'm fixin' up that old fifth wheel. I can stay there while I build my house.\"\n\n\"You have a girl?\"\n\n\"Sort of, but it ain't serious. She ain't marry'n material.\"\n\n\"Then you shouldn't be dating her,\" an older man snapped. \n\n\"Pop! I told you, we're good friends and we have fun, hang out. She knows it ain't serious.\"\n\n\"You get her pregnant and it will be,\" another man laughed.\n\n\"It ain't even like that! Can we talk about something else?\"\n\n\"What about you, Gav?\" Hank asked. \"You have a girl?\"\n\n\"Nope. Been too busy and ain't met the right girl. Beau has a girl though, got her a ring and everything,\" Gavin grinned, cutting his eyes at Beau who turned sheet white. \n\n\"You have?!?\" a woman practically shrieked.\n\n\"Way to go, asshole, I hadn't told my folks yet!\" Beau scowled at Gavin, who only laughed. His eyes went back to Nash and she looked down quickly, realizing she had been staring.\n\nWhat kind of guy just wants to get a girl off and not himself? Maybe he had performance issues? He'd had no issues getting hard, she had felt him, thick and long through his jeans. Just the thought of it excited her and she glanced at him again, wondering if he was thinking about what had happened too. He was talking to the man next to him again, but his eyes were on her. His smirk then was smokey, his eyes full of promises.\n\nNash turned away, looking at her mother and Hank, vowing not to look in that direction again.\n\n\"Are you alright, Nash Ella?\" her mother asked in a whisper. \n\n\"I'm ok... Not very hungry though, I might just go up to my room for a while. Work on my big project for a while.\"\n\n\"You sure?\"\n\n\"Yeah... A lot of people and everyone carrying on a dozen conversations at once, the noise is making me anxious.\"\n\n\"That's fine, whatever you need to do. Thank you, Nash, I can tell you are trying. I appreciate that.\"\n\nNash nodded, blushing, then slipped away from the table while everyone was still talking. She didn't look back at Gavin, though she really wanted to. She closed herself off in her room and chewed on her thumbnail as she thought about what had happened. It had been reckless and stupid, she didn't know this boy at all. She should have said no, told him to leave her alone. \n\nShe hoped he found her again tomorrow. \n\nShaking her head, she threw herself on the hard bed and pulled out her laptop. She wasn't going to think about Gavin anymore tonight, she was going to focus on her project. \n\nIt was midnight before she realized she was lost in her work and she was actually tired. Yawning, she saved and closed the program, then turned off the light. The bed was lumpy and uncomfortable and the blanket threadbare. She wasn't sure if she was going to be able to sleep at all, it was too uncomfortable. She could even feel the metal bar that was bracing the middle of the bed. \n\nTurning to her other side, she sighed, then blinked as her door opened, a triangle of light spreading across the ceiling. A shadow crossed the light and the door closed.\n\n\"Mom?\" she asked, sitting up.\n\n\"Not hardly,\" Gavin chuckled in a whisper, then his hands were on her, pushing her down to the bed as his mouth found hers.\n\nNash turned. \"We shouldn't be doing this! What if someone comes in?\"\n\n\"Who would come in? And we're both adults. I haven't been able to think about anything else since earlier... that was fucking amazing,\" he growled, kissing her neck, then turning her face back to his to kiss her again. \n\n\"We don't know each other! I know nothing about you! You know nothing about me!\"\n\n\"I know you come like a fucking pornstar,\" he laughed, biting gently on her ear. \"It's just fun, babe. No strings, just two people making each other feel good. I'm clean if that's what you're worried about. Kiss me, babe,\" he rumbled, turning her back to face him again. His mouth found hers and she stopped protesting, giving in to his passion. He pressed against her and once again, she could feel his hard cock through his sweatpants. Her hands slid over the smooth skin of his chest, all of the curves of his hard farmboy muscles. It was so incredibly sexy! He felt amazing. \n\nHis hand snaked down, sliding into her pants and underwear again, his fingers finding her clit immediately. Her body went rigid as she clenched her teeth, trying to be quiet. Gavin purred as he pulled back, then went to his knees and jerked her pants off almost roughly. \n\n\"Wait!\" she whispered urgently.\n\nHe did not wait, his mouth immediately covering her pussy as he moaned and sucked, licking and rolling his mouth around her entire mound. He was reveling in it, covering his face in her juices euphorically. He attacked her clit with a will and Nash yanked the blanket up to bite into, screaming into it. His growl was primal as he pushed two fingers into her and curled them, making her lock her legs around his head and grip his thick curls with her fists. Nash wailed into the blanket, and Gavin reached up again to cover her mouth. She yelped as she panted, her bliss rising higher and higher. She was so close! His hand locked down her mouth harder like he knew she was close and Nash let go, her entire body bucking and jerking violently when it hit her. She screamed into his hand as he rode her out, him roaring as she felt a different kind of release explode from her. \n\nAs she gave a final twitch and collapsed, Gavin came up laughing exultantly low in his throat. \"I've always dreamed of making a girl squirt all over me,\" he growled, moving higher and kissing Nash almost reverently. \"That was amazing. Thank you for making my biggest fantasy come true.\"\n\nNash could only lay there and try to breathe, her body still trembling.\n\nGavin rolled next to her and leaned over her, his hand stroking her face and hair as he nuzzled her jaw. \"We both need a shower,\" he rumbled. \"But we'd wake people up. Come on, I'll help you flip this mattress.\"\n\nGavin got up and helped Nash stand, then pulled the blanket and sheet off and flipped the mattress. He tossed the sheet aside, then the blanket after feeling it. \n\n\"I'll get you some new sheets and another blanket,\" he whispered. \"Or you can just come to my room with me? My bed is better than this one.\"\n\nNash shook her head, realized he couldn't see it. \"No. My mom will look for me in here in the morning.\"\n\n\"I could wake you early,\" he whispered, stroking her face again. \"You could be in the shower before your mom and Hank even wake up.\"\n\n\"I shouldn't.\"\n\n\"Fuck should and shouldn't. What do you want to do?\"\n\nNash hesitated and Gavin chuckled. \"Here, your pants. Slip'm on and let's go.\"\n\nHe snuck her down the hall to another small bedroom, but the bed was larger and alot more comfortable. Nash fell asleep almost immediately, her body worn out. \n\nGavin woke her moments later it seemed like, kissing her awake. \"Gram will be awake in about twenty minutes. Pop is already out in the barn. Go hop in the shower before anyone else is up and I will go get your bedclothes to wash.\"\n\nNash nodded, looking up at him as he smiled down at her. \n\n\"Wish I could join you,\" he told her with a wink, then got up and helped her stand.\n\nNash was sitting downstairs with a cup of coffee when her mother got up. \n\n\"There you are! I checked on you and you weren't in bed.\"\n\n\"Couldn't sleep,\" Nash smiled.\n\n\"She's been keeping me company while I make breakfast,\" Hank's mom smiled.\n\n\"She has?\" Elle asked in surprise.\n\n\"She has. She doesn't talk much, but she's been here since I came in! She's been listening to me talk! Well, look at you up bright and early!\" she said to Gavin as he came in the door, tucking his shirt into his jeans.\n\n\"Mornin' Gram,\" he grinned, going to her and kissing her on the head. \"I have to run home and check on a few things, but I'll be back before breakfast. Already smells great!\" he called, heading out the door. When he got out the door, he turned and gave Nash a wink that no one else could see. \n\nNash buried her face in her coffee mug so no one could see her smiling. \n\nThe house began filling quickly, people coming downstairs and people who lived close showing up. Nash immediately began feeling uncomfortable, but she stayed at the island as people crowded around the huge table, laughing and talking loudly.\n\nWhen Gavin came back in, her heart did a little flutter as he grinned at her with his crooked smile. He sat down next to her and spoke loudly. \"You never did come out and let us show you how to play last night.\"\n\n\"No... I was working on something for school.\"\n\n\"It's winter break, you're supposed to take a break. Tell her, Hank.\"\n\n\"Oh, you won't get her to take her nose out of her books. She's a grindstone kind of girl, single minded,\" Hank told him. \"Elle has told me all about her and how driven she is and I've seen all of her awards and certificates. She's all about overachieving.\"\n\n\"That so, Nash?\" Gavin asked. \"You an overachiever?\"\n\n\"I just like to do my best... and I have goals. A plan. A one year plan, a five year plan, a ten year plan, I have it all mapped out.\"\n\n\"That sounds terrible. Don't you do anything spontaneously?\"\n\n\"I'm here,\" she shrugged, blushing. \"This wasn't in my plans for winter break. Mom and I usually make mulled cider and cinnamon rolls, it's our tradition. Not this year. I would say this is spontaneous for both of us.\"\n\n\"So come a little more out of your comfort zone and live a little. Come out and join us and learn to play. I'll teach you.\"\n\n\"It would be nice to get to know your family!\" Hank told her, putting a hand on Gavin's shoulder to look down at her. \"Your cousins would all like to get to know you, I'm sure.\"\n\n\"They aren't my cousins!\" Nash said quickly, her face heating. \"We are no relation!\"\n\nHank flinched, but she knew he was misunderstanding her vehemence. She didn't really care, she didn't want anyone here considering her family. Not while she was fooling around with Gavin. \n\n\"Well,\" Hank said softly. \"While they aren't technically your cousins, they are my nephews and I consider you my daughter...\"\n\n\"I told you, I have a father! I have a father and he's not you! Just stop trying to force me into your life, Hank. I don't want to be your daughter!\"\n\n\"Nash!\" her mother cried, horrified.\n\n\"What? He can't force me to be his daughter! I don't even know this man! He seems nice enough and his family is nice, but they are NOT my family! Stop trying to shove it down my throat!\" she yelled, getting down from the stool and storming out of the kitchen, horrified that everyone was staring at her like she was a monster.\n\nShe ran out to the road, then turned and started walking, her arms crossed. She had no idea where she was going, but just now she didn't care. Anywhere but there. \n\nTwenty minutes into her walk, a truck pulled up and rolled to a stop. \"Need a ride?\" Gavin asked.\n\n\"No thanks.\"\n\n\"Where ya headed?\"\n\n\"Away.\"\n\n\"Hop in, we can go away together. I know a place.\"\n\nNash looked over at him and his easy grin, then sighed and got in his truck. She thought he might try to take her back, but instead he drove further down the road and pulled into an old gas station. \n\n\"C'mon,\" he told her, holding a hand out to her to help her down.\n\nHe took her inside and she looked around the old store, a little confused. It was full of antique toys. Wind up toys, hand carved wooden toys, dolls that looked a hundred years old. Some of them actually looked creepy enough to give her chills. Gavin took her through the aisles slowly, looking through all the display shelves, then stopped near the back. \n\n\"This one was always my favorite,\" he told her, touching an old metal fire engine. The two men on the back were on a lever and it had a wind up key on it. She was sure if it was wound up, the two men would be pumping the lever like they were pumping water from the truck. It was very old and kind of cool looking. She could definitely see the draw for a little boy and she could imagine Gavin coming in here as a child and feeling like this place was magical. She smiled as she kept looking around, seeing the place with fresh eyes. Imagining she was younger and how special this place would seem to her. He was sharing something from his childhood, she realized, something that he held dear in his memories. \n\n\"Uncle Hank brought me here when I was about four,\" he told her. \"Dad thought I was too young, I would touch something and break it, but uncle Hank told me he trusted me. That meant everything to me,\" Gavin told her. \"I was super careful, even though I wanted to play with so many of these things. I didn't touch anything, because uncle Hank trusted me not to. I couldn't let him down. He was always good like that, super close to all of us. Did you know? Uncle Hank can't have kids of his own. He was stomped by a bull when he was Darren's age, had to have some things removed. He can still do everything he needs to, just shootin' blanks, you know? No one wanted a family more than Uncle Hank. His first wife did too, and they talked about adopting up until the accident. He's a good guy, Nash. A real good guy and he loves with all his heart. There's no halfway with him, he's all in or all out.\"\n\n\"I know he's a nice guy... I just want him to stop trying to replace my father. My dad was a good guy too.\"\n\n\"Hank said he died in Iraq?\"\n\nNash looked down quickly, stepping close to a shelf to look at a wind up zeppelin.\n\n\"He doesn't want to replace your dad, he just wants to be there for you and your mom. He's so proud of you, the way he talks about you like you're this super amazing wonder woman. The kid he never had.\"\n\n\"He doesn't even know me.\"\n\n\"Your mom tells him all about you. He's heard all the stories about you growing up and seen all the pictures. Uncle Hank... that's just how he is. He lets someone into his heart, they are there for good. 100%. He's like that with all of us. He could tell you about my entire life from beginning to now. He can do it with all of us, if he loves you, you are important to him and he considers you his. I'm his nephew. Not my dad's kid, but his nephew. That's how he sees me and my brother and my cousins. You just have to know uncle Hank... he's about the nicest guy you ever met, just like Gram. Pops is more of a hardass, but not Gram and not uncle Hank. he just wants to love and be loved and accepted.\"\n\nNash turned and looked at an old wooden ship, stroking the smooth wood with a finger. \"When I found out mom was getting married... I was so angry. I didn't even know she was dating... She never dated. She waited until I was gone to date, and then suddenly she was getting married and I had no idea until she called me from Vegas. It felt like she was replacing me. Replacing dad and his memory. It didn't matter that Hank was nice... I didn't like him from the start. He'll never replace my dad.\"\n\n\"He doesn't want to replace him, Nash. He just wants to be part of your life and show you how much he cares about you and your mom. He wants you to be a part of his world, show you off to his family. He's so proud of you.\"\n\nNash blushed and moved down to the next display, her nose burning. \n\n\"Gavin! You're here early!\" an old man called, tottering around the counter to the aisle. \"And who's this? You go and find yourself a wife?\"\n\n\"This is Nash, Hank's step daughter.\"\n\n\"How is Hank? Ain't seen him around in over a year now!\"\n\n\"He's married and living clear out in Denver with Nash and her mom.\"\n\n\"Old Hank a city boy now? Ain't very likely, but love'll do that, heh? You're a pretty little thing, ain't ya?\" the man asked, patting Nash's shoulder. \"Had me a wife pretty as you once. Small little thing too. Lost her same time I lost my first boy. Married again and she was a lot bigger'n Lori. Beth was a fine wife, but she was no Lori. Lost her a few years back to cancer. Gavin, this here is a Lori. Don't go lettin' her slip off.\"\n\nGavin laughed. \"She's a city girl too, Ben. Has her life all planned out, college educated and big city job all lined out. No room for a farm boy in that life. Besides, she's Hank's step daughter, I'm just showing her around. Cousin to cousin.\"\n\n\"Step aint blood far as I know. Less things've changed. Time's comin' for you to settle anyway, ain't it? That girl you had... she was no Lori. She wasn't even a Beth. Didn't like her much, she was always bored when you came in. Had no imagination or spirit. This one... her eyes tell everything, eh? She has spirit and imagination. Soul might need mendin' but then so does yours, eh?\"\n\nGavin laughed. \"I'm not too torn up over Livvie, even if it wasn't over two years ago, she was never the one. Definitely don't need mending, and I'm in no hurry at all. I don't mind having a bit of fun before things get serious in my life.\"\n\n\"You wait too long and the fun'll be gone and you'll be alone. Man your age should be married round here. Don't let it go too long. Heard that Blaiser girl was single again, she's a Beth as I see it.\"\n\n\"Nah, Macy and I never got on. Stop trying to set me up! Always trying to play matchmaker, you're as bad as Beth was!\"\n\nThe old man chuckled. \"No one loved love like Beth, did they? She wasn't happy if she wasn't pushing a boy and girl together. Guess it rubbed off a bit. Here now, though, you listen to me. I know what it is to be lonely, boy. Don't wait too long!\"\n\n\"I'm not lonely, Ben, my life is as full as I need it. Thanks for letting us look around.\"\n\n\"Any time, my door is always open,\" Ben nodded, smiling.\n\nGavin led Nash out, Nash giving the old man a small smile and a wave as they left. He opened the door and put her up in the truck, then held on to her hips for a moment as he looked down at her. \"I know Hank said you have... problems with being in crowds and anxiety about a lot of things... You think you wanna try going back and letting me show you how to play with a few of the cousins? Not many will be out this early, the games won't pick up till after lunch. Maybe I can show you and Hank could show your mom. We can get you two a little bonding time so you can see he's not a bad guy.\"\n\nNash looked down at her lap, then nodded. \"Ok. If you want. Thank you... for showing me this place. It's... really cool.\"\n\n\"I always thought so,\" he grinned, letting her hips go and sliding her over as he got in.\n\nNash was stressed as Gavin left her out by the little court to go inside and get Hank and her mother. He came back out, grinning as her mother and Hank followed close behind and a few other people as well. \n\nHer mother gave her a worried look as Nash sat down on the little bench at the end of the court. \n\n\"This will be fun!\" Hank called excitedly. \"I've been trying to convince Elle to let me teach her since before we even arrived!\"",
        "\"I told you, I'm not athletic,\" Elle laughed nervously.\n\n\"Me either,\" Nash added, glancing at Gavin. \n\n\"Gav said he ran into you when he was running down to the station?\" Hank asked, sitting down on the other side of her mother and leaning up to look at Nash. \"Gave you a ride back?\"\n\n\"Ummm, yeah. I just needed a walk...\"\n\n\"Sometimes we all need walks,\" he nodded, smiling. \n\nNash looked down at her lap as Darren sat next to her. \"So you know the rules?\" he asked her.\n\n\"Let's shoot for teams!\" Beau called loudly and Nash could tell he was the competitive one. \n\n\"We don't need teams to start out, let's just play a round to teach the girls how to play,\" Hank cut in quickly. \"Come on, Elle, step up here and I'll show you how to hold the Bolle.\"\n\n\"You too, Nash,\" Gavin called. \"Come on up here, grab a bolle.\"\n\nThe game was simple enough, but Nash had never been a very strong person. She kept coming up short. Gavin kept finding excuses to put a hand on her, her hand, her waist, her arms. All in the guise of showing her how to hold and how to roll. \n\nHank and her mother weren't paying attention, Hank showing Elle how to play with his arms practically around her. Darren and Beau noticed and smirked at their cousin and Nash. \n\nWhen another man came out, Beau stood up and announced that they had enough for full teams and they should shoot for teams. \n\nBeau and Hank won the 'shootoff' and got to choose teams. Beau immediately picked Gavin and Hank picked Elle. Beau started to choose the other man who had come out, but Gavin elbowed him hard. Beau chose Nash with bad grace. Hank picked 'Lewis' and Darren ended up with his brother and cousin and Nash, not very happy that he'd been picked last. \n\n\"Shut up dumbass,\" Beau growled. \"Gav wanted his new piece.\"\n\n\"Don't be a dick,\" Gavin snapped in a whisper.\n\n\"If we lose because...\"\n\n\"Her mom has never played either, the teams are even! Just shut it and stop being an asshole!\" Gavin snarled in his cousin's face.\n\nNash glanced at Gavin as he sat down next to her. \"Piece?\" she asked in a whisper.\n\n\"He's just being an asshole, he hates losing. Don't listen to anything he says.\"\n\n\"You have... a lot of 'pieces'?\n\nHe turned to her, grinning. \"Was that jealousy?\"\n\n\"No,\" she answered, her eyebrows high. \"Fear for my health, yes.\"\n\nHis eyes were sparkling as he nodded, looking around. \"Not something you need to worry over at all. I date but that's it. I'm... pickier than you might imagine about the girls I want to... do that for.\"\n\n\"So why me, you don't even know me?\"\n\n\"One look told me all I needed to about you. No make-up, no fancy name brand clothes, hair not all done up. Clean but not covered in cloying perfume. You smell like soap and nothing else. And you're hot. Fucking adorable. I wanted those short, slender little legs wrapped around my face the second I saw you.\"\n\nNash looked away quickly so he wouldn't see how red her face was and watched her mother giggling girlishly in Hank's arms after her horrible roll. Hank looked absolutely joyous holding her and looking down at her and it tugged on Nash's heart a bit. She swallowed hard and stood up, walking off to the side a bit to pretend to watch the game. What she wanted was a little space to rethink the horrible way she had been acting.\n\nWhen Darren came and stood next to her after his turn, she turned and looked out across the road, hoping he wasn't going to say something about her or Gavin.\n\n\"Ever been in the woods?\" he asked her, looking across the road to the trees where she was looking.\n\n\"No... not an outdoor person.\"\n\n\"My dad and uncle Hank built a treehouse in those woods when they were kids. It's kind of huge. We use it as a hunting stand now when hunting's in season. Used to be real fun to explore in there, especially times like now where we're stuck here for a week with all the old folks coming in for the holidays. You think it's bad now, just wait till the day before christmas when all the further away family comes in. Me and Gav only stay for a couple of days till the extended family comes, then we stay at our houses and come for the day. Last year I asked if I could sleep out at the treehouse, but it was a lot colder last year. Would've given up my bed for one of the cousins gladly to've been able to sleep out there,\" he grinned.\n\n\"How many people?\" Nash asked nervously.\n\n\"Oh, easily three times as many as are here now. Gram and Pops have cleared out the big barn and tomorrow we'll start setting up all the tables and chairs. We spend all day on Christmas Eve in there, having the white elephant party. Christmas day is the bonfire and all the cooking and games. Everyone brings prizes for the bingo table for the winner, and most times half the white elephant gifts get dumped on that table too,\" he laughed. \"It's actually a lot of fun. It's a pretty big deal here to be close to family and make it a huge thing. I know it means everything to Hank that you came too, he was so excited when he called dad and said you'd be coming too.\"\n\nNash blushed and glanced at Hank again. He and Gavin were standing together and laughing as they talked. \n\nShe stayed quiet the rest of the game, walking in slow circles so that no one could corner her again. \n\nWhen her mother said it was fun, but she was going to go back in to help, Nash intercepted her and Hank.\n\n\"Hey... umm, sorry. Uhh... Darren mentioned you built a treehouse? I was wondering if you wanted to show it to me?\"\n\nHank looked stunned, then jubilant and her mother's eyebrows climbed almost to her hairline.\n\n\"Sure! Yeah, of course, I'd love to show you! Elle, will you be...\"\n\n\"I'll be fine!\" her mother said quickly, motioning him to go on. \"Paula and I will be making bread!\"\n\nHank grinned and kissed Elle on the head, then turned back to Nash excitedly. \"It's across the road here, in the woods a bit. You ready for a walk? Be back later, boys! I'm taking Nash for a walk!\"\n\n\"Have fun!\" Gavin called.\n\nNash looked back at him and his smile was pleased.\n\nHank talked the entire way to the old treehouse, going on about how he and his brother had built it in secret because they didn't want their siblings to know about it. How they had pretty much lived in it from the time they were 9 and 10 until Bill graduated highschool. How much he missed it and how happy he was that she wanted to see it and gave him an excuse to come back to it.\n\nNash stayed quiet and listened to him, watching her step carefully.\n\n\"Here it is!\" Hank called proudly and Nash looked up.\n\nIt was NOT what she was expecting. She was thinking a rickety platform across two limbs and an old rope, not an actual well built house up in the tree and real stairs leading up to it.\n\n\"You... built this? When you were 10?\"\n\n\"Well, I was 9, Bill was 10. We built it together.\"\n\n\"This is... amazing!\" she breathed, going up to the stairs and testing them. When they seemed solid, she climbed up and Hank followed her as she looked around the room. There was a cot along one wall and shelves and a cupboard. A lantern sitting on the counter.\n\n\"Looks like the boys are making good use of it,\" Hank grinned.\n\n\"This is... really cool,\" Nash told him again, turning a small circle. \"It... kind of makes me want to build a treehouse!\" she smiled.\n\nHank chuckled. \"It took an entire summer, but it was fun and well worth it. Now... while this place is nice and secluded... I would rather you didn't come out here alone. Lots of things can happen in the woods and this place is old. I don't care if you come out, just... be safe, ok? Bring someone with you or, you know, let someone know where you are.\"\n\n\"Oh... I wasn't going to hang out here, I just wanted to see it,\" she told him, looking out one of the windows. \"I always joke with mom about wanting my own she-shed someday, but I am thinking a treehouse would be much more fun!\"\n\n\"They don't have many trees around apartments to build treehouses in,\" Hank told her softly.\n\n\"Oh, I know. I meant, you know, someday after I move into a house and not an apartment.\"\n\n\"There are a few good trees out back of the house,\" he mentioned casually.\n\nNash gave him a tight smile. \"I like being close to where I'm going to work. A half hour commute doesn't appeal to me.\"\n\n\"Your mom said they would let you work from home?\"\n\n\"They would, but I don't really want to? I like the idea of working in an office setting. Only the five of us in there, just companionable and cozy.\"\n\nHe nodded. \"I can understand that. Still... offers there if you don't like your coworkers. Your room is still exactly like it always was, Elle hasn't touched it.\"\n\nNash gave him another tight smile, then started back down the stairs. \"Thanks for showing me. I'm going to go back and work some more on my project before things get too busy and hectic.\"\n\nHank talked to her all the way back as well, telling her about other projects him and Bill had done. He had other brothers and sisters, but him and Bill were close. There were two girls between their other brothers in both directions. \n\nWhen they got back, there were a lot more people outside on the court and a lot of laughing and yelling. Nash hurried into the house and up to her tiny room, then smiled at the new sheet and blanket on the bed. Had Gavin done that? Pulling out her laptop, she opened her program to work as she propped herself up on the bed, sitting against the wall.\n\nHer mother opening her door made her jerk and she realized she had fallen asleep, her laptop dead on her lap. \"Nash Ella? You ok?\"\n\n\"Yeah, sorry, I guess I was tired.\"\n\n\"Hank was incredibly happy that you asked him to do that... Thank you. It means a lot to me.\"\n\n\"Sure,\" Nash answered with a shrug, her face heating. \"Sorry I've been so awful. I'll try to chill.\"\n\n\"Thank you,\" her mom smiled, then hugged her close. \"You hungry? You didn't have lunch and it's dinner time now.\"\n\n\"Are there a lot of people down there?\"\n\n\"A few... but there's room at the table for you. Hank saved you a seat.\"\n\nNash sighed, but she was starved. She followed her mom down and gave Hank a small smile as she sat down. \n\n\"Where'd you get off to today?\" Darren asked Nash almost immediately.\n\n\"I have a project I need to get done for a grade... I went up to work on it.\"\n\n\"I think you should lock all her homework in the trunk, uncle Hank,\" Gavin told him without looking up. \"Make her take her vacation and have fun.\"\n\n\"Telling her she couldn't work would be like telling a fish not to swim. She'd just find another way to get something done.\"\n\n\"After dinner we're tapping a keg,\" Beau offered. \"That'd make her cut loose I bet.\"\n\n\"Nash doesn't drink,\" her mother told them quickly.\n\nNash looked down at her plate, moving her food around on it.\n\n\"Why not?\" Beau demanded.\n\n\"If she doesn't want to, no one will force her,\" Gavin cut in. \"It's no big deal and the why is none of our business. No is all she needs to say. Hey Mike, you bring your new .22?\"\n\nGavin steered the conversation away from Nash and she let out a breath of relief. She ate as quickly and as quietly as she could, then slipped back upstairs. After plugging her laptop in to charge, she went outside to the hay barn to find her book.\n\n\"Fancy meeting you here,\" Gavin called, sitting in the corner with her book. There was a blanket layed out over a bed of hay next to him. \n\nNash hesitated, then went and held her hand out for her book. He took her hand and pulled her down to sit next to him. \"Wanna talk about it?\" he asked.\n\n\"Not really.\"\n\n\"Good,\" he laughed. \"I suck at listening when all I can think about is tasting you again,\" he growled, half tackling her down to the floor to kiss her.\n\nNash grabbed his arms to push him back, but froze as his passion and need hit her. It was all consuming, his need, when he focused it on her and she didn't know why he was so hard to resist. She had told herself this wasn't going to happen again, she was going to avoid him and tell him this was too weird for her.\n\nAs he kissed her and his hands held her face though, she couldn't remember the why's of her decision and they seemed like paltry excuses in comparison to the bliss of his hands and mouth.\n\nGavin lifted just enough to pick her up and toss her on the makeshift bed, then jerked her pants off before pinning her down to kiss her again. His hand cupped her mound quickly, before she could close her legs and he rubbed and massaged her entire pussy gently. His kiss became more hungry, more needy as he groaned, then curved his middle finger in to slide into her. She was already wet for him and that made him pull back and look down at her with hooded eyes, pride showing in his features. He kissed her again, quickly, then moved down and wrapped his full lips around her pussy lips and sucked as his tongue slid through her slit. \n\nNash went limp, forgetting all of her reticence completely as ecstasy took over.\n\nHe made her come for him twice before he collapsed next to her in satisfaction, an arm across her shoulders as he smiled and kissed her temple. She could feel his hard cock against her thigh, but he was still making no move to push it further as he lay there next to her.\n\nPart of her wished he would take it further, she'd been having a great many fantasies about that fat cock. She was afraid to push the issue though, thinking if he wanted more, he would go for it. He wasn't the type of guy who had issues going for what he wanted.\n\nAfter a few minutes, he sat up and kissed her again with another grin, then helped her put her pants on and tossed her her book. Nash actually felt a little lonely as he slipped out of the barn. \n\nShe read until it was too dark to read, then she just lay there on her back, looking out the window at the stars. She could hear people outside, laughing and talking, but it seemed far away. In there, it was peaceful.\n\nShe heard the door open and close and she smiled. She knew if she waited long enough that he would come back. \n\n\"Waiting on me?\" Gavin asked, laying down next to her and looking down at her in the dim light.\n\n\"Looking at the stars. There are so many...\"\n\nHe lay back next to her to look out the window. \"Guess you don't see many in the city?\"\n\n\"Not like this.\"\n\n\"It's getting close to bedtime...\"\n\n\"Yeah?\"\n\n\"I think you should just skip trying to sleep on that awful cot and sneak into my bed again.\"\n\n\"I don't know, I kind of like it right here.\"\n\n\"It's a little cold out here and it's gonna get colder.\"\n\n\"I'm plenty warm.\"\n\n\"Only because I'm putting off heat like a furnace. You really want to sleep out here? I can get you another blanket and a couple pillows.\"\n\n\"I only need one?\"\n\n\"Well I'd need one too.\"\n\n\"Oh, are you inviting yourself to my sleepover?\"\n\n\"It can only be a sleepover if you are with a friend, right?\"\n\n\"Who said that? It's a sleepover if you sleep over somewhere you don't usually sleep.\"\n\n\"With a friend is implied. Come on,\" he laughed. \"Come in to bed. My bed. I already have a towel ready,\" he grinned, leaning close to kiss her jaw.\n\nNash smiled and closed her eyes a moment, enjoying the feel of his hands and mouth. She let out a sigh, then let him help her up. She went to her own room, but as soon as the house went quiet and all the lights were out, Gavin came in and picked her up off her bed and carried her to his room.\n\nThey got very little sleep as he teased her and tormented her and made her come for him over and over again. Nash passed out half sprawled on him and neither of them woke up until someone knocked on his door. \n\n\"You getting up today?\" Derren demanded, rattling the locked door.\n\n\"Yeah! Be right out!\" Gavin called, sitting up. He reached for his phone and hit the button, but it didn't light up. He pulled on the charging cord and it was loose, the plug not plugged into the outlet. \"Shit!\" he whispered. \"Ok... I will sneak you down and out the side door. You come in the kitchen door like you've been outside all morning. Ok?\"\n\nNash was actually giggling as he snuck her out, feeling like they were doing something forbidden. When she came in the back and sat down to lunch, she couldn't help but smile as Gavin grinned, his eyes shining.\n\n\"You were up and gone early!\" her mother noted brightly.\n\n\"Yeah, I was walking a bit and reading,\" Nash shrugged.\n\n\"Guess you forgot a brush?\" her mother asked teasingly and Nash was horrified. She yanked her scrunchie off her wrist and wrangled her hair into it quickly. Gavin was hiding his face, but she could see his shoulders shaking. \n\n\"People are going to start arriving today,\" Hank told Nash, leaning down so he could see her across her mother. \"And we will all be busy setting up the barn. You can help if you want, or just hang out in one of the places you found with a book. If you need me or your mom, we'll be at the big, white metal building, ok?\"\n\nNash nodded at him, then fled up to her room to grab her clothes and get a quick shower. Gavin was laying in her bed when she went back to her room and he laughed at her as he sat up. \n\n\"Your look was fucking priceless! Never seen anyone look more guilty in my life! Everyone there had to be wondering what you were hiding!\"\n\n\"It's not funny!\" she hissed in a whisper, peeking out her door before closing it. \n\n\"Gonna miss me today?\" he asked with a grin, pulling her into his lap.\n\n\"No! I have a lot to keep me busy.\"\n\n\"Liar,\" he chuckled, tilting her face up so he could kiss her.\n\nShe kissed him back for a moment, then pulled away. \"The playing is fun and all,\" she conceded \"but I have to have this done by the time I get back to school. Your momentary distraction is cutting into a huge grade for me.\"\n\nGaven only grinned as he got up, but his eyes looked a little hurt. \"Ok babe, I'll check on you when we're all finished then. Enjoy your work.\"\n\nNash felt a little bad as he closed the door. Had she hurt his feelings? She didn't know how, she'd told him she was having fun. \n\nShe shrugged it off and opened her project. \n\nWhen Gavin looked in on her later, he was wearing a sleeveless shirt and he was still all sweaty. \"Hey,\" he grinned. \"Dinner?\"\n\n\"Umm... I'm almost done with this, I'll be down after while.\"\n\nHe came in and shut the door, then picked her up with her laptop in her lap.\n\n\"What are you doing?\" she demanded as he sat down on her bed and put her in his lap.\n\n\"Gonna watch you work, see what it is that has you all focused.\"\n\nNash sighed, but leaned back against him and went back to what she was doing.\n\n\"What are all those numbers?\"\n\n\"Algorithms and equations...\" she answered distractedly.\n\n\"You know what they all mean?\"\n\n\"Yes.\"\n\n\"What about that, what's that?\"\n\n\"Grid for a new interface I am designing.\"\n\n\"Interface for what?\"\n\nNash turned and looked up at him and he wrinkled his nose at her, then bent down and kissed her. \"Are you going to let me do this?\" she asked him, unable to stop her smile.\n\n\"Why don't you come eat and then head out to the loft?\" he asked, ignoring her question. \"I have something I want to show you.\"\n\n\"I bet,\" she answered, still smiling. She put her laptop away and went down to dinner. Gavin didn't sit down, he went outside and she assumed he had already eaten since people seemed to rotate into the chairs as others left. \n\nWhen she made it out to the hayloft, Gavin was laying on the blanket, looking out the window. \"Come on over here,\" he called.\n\nNash laid down next to him and stared up at the stars for several long minutes. It was peaceful and nice, just laying there. Gavin turned finally and pulled her into his arms, then laid back down on his back as he held her. Nash lay on his shoulder, a hand on his chest as his thumb stroked her shoulder. \n\nShe jerked awake, shivering and started to move, but Gavin grumbled and rolled to his side, covering her with half his body as he held her in tight against him. Warmer, she fell right back to sleep. ",
        "The light in the window was dim and gray when she opened her eyes and she lay there for the longest time just watching it get lighter and lighter. She'd never been held to sleep before, or woken up in someone's arms before this trip. It felt... very different. She'd always imagined it would be annoying, waking every time they moved, or not being able to move like you wanted to. Instead, it had been like being fitted into a natural puzzle where the pieces fit perfectly. She was a little sorry she had never let her ex sleep over, this was nice.\n\nGavin woke with a sigh, his arms tightening around her as he smiled. \"Think they are wondering where we are?\" he asked with a yawn.\n\n\"I can say I fell asleep out here,\" she shrugged.\n\n\"And I just happened to fall asleep right next to you. Coincidence, no big deal.\"\n\n\"You'll have to come up with your own story,\" she smiled, pushing on him lightly.\n\n\"Family all arrives today. You ready? Tomorrow is Christmas eve. Then Christmas. The barn will be packed and we'll have to be there.\"\n\n\"As long as I can hide with a book,\" Nash mumbled, worrying a little about that.\n\n\"I know of a few places,\" he grinned. \"The storage loft above the kitchen and bathroom. Wonder if I could get you up there and keep you quiet enough that no one notices?\"\n\nNash laughed, shaking her head. \"Are you ever NOT thinking about that?\"\n\n\"Nope,\" he answered, tackling her down to the blanket and pulling her pants off. \n\nAfterward, Nash was trying to catch her breath as Gavin smiled smugly down at her as he kissed her collarbone. She heard someone yell her name and her eyes went wide.\n\n\"That's uncle Hank,\" Gavin whispered, grinning playfully.\n\n\"My pants!\" she hissed, pushing Gavin off of her and searching for her pants. \n\n\"Nash?\" Hank called, opening the door to the haybarn. \n\n\"Here! Yeah, be down in a minute, I fell asleep!\"\n\n\"You ok?\"\n\n\"Yeah! Be right down!\" she called frantically, trying to yank her pants on as Gavin laughed silently on his back, hiding from Hank.\n\nNash practically flew down the stairs and swallowed hard as Hank smiled at her. \"Fell asleep up there a few times myself,\" he offered congenially. \"Get a good book and a comfy position and next thing you know it's morning.\"\n\n\"Yeah,\" she answered breathlessly. \n\n\"You found her!\" Elle called, worry leaving her face as they came in the door.\n\n\"She was in the loft, asleep,\" Hank grinned. \n\n\"Sorry...\" Nash mumbled, then fled to her little room and grabbed clothes to shower. \n\nBy the time she got back downstairs, the living room was crowded with more people, all laughing loudly and talking. The kitchen and dining room were even more crammed. Nash escaped out the side door that Gavin had showed her, but there were people outside too, and more cars pulling in. \n\nNope.\n\nShe went back in and slipped up to the little room, closing the door behind her. It was small and stuffy, but no one else was in there with her. Curling up, she opened her project again and worked on it all morning.\n\nLate afternoon, her door opened and Gavin peeked in. \"Meet me at the white barn! I want to show you something!\" Then he was gone again.\n\nGrinning, Nash closed her laptop and got up. There were, impossibly, more people downstairs and outside, but she managed to make it out to the huge white barn. It was all set up for the next day and the only light was an overhead light in a little kitchen area that had been built in. \n\n\"Over here!\" Gavin called, stepping into the light.\n\nNash hurried to him and he took her hand, then led her to a set of stairs that had been gated off and lifted her over the gate before stepping over it with his long legs. He led her up, and then through a very narrow path full of boxes and devices and all the things stored up above the kitchen and bathroom that had been built below. He took her all the way to the far wall, then dropped down, pulling her down next to him. Turning his phone light on, he shined it into a cubby he had made with blankets and pillows and even a small lantern. It was more than big enough for her and she laughed as she crawled into it and sat up.\n\n\"This is really nice,\" she told him. \"Thank you.\"\n\nHe shrugged. \"I have ulterior motives,\" he grinned, then ducked in with her and laid her down. \n\nNash giggled as she gripped his arm and kissed him as he held her down.\n\nIt was well after dark before he let her out and led her back to the house on wobbly legs. She went in first and sat down at the table with her mom, then Gavin came in the side door through another hall to sit at the other end of the table. \n\nNash hid a smile as she piled her plate full, starving. \n\nHank's mother was talking about where people were going to sleep that night, and doubling up the beds and pallets in the basement.\n\n\"I have an extra bedroom,\" Gavin volunteered. \"And a couch. I can take a few people to my place to sleep and come back in the morning.\"\n\n\"Me too,\" Gavin's father agreed. \"Got Gav's old room and a couch.\"\n\nAfter that, a few other closer people offered couches as well.\n\n\"Well, who wants to go where then?\" Hank's mother asked, flustered.\n\n\"Nash could have my couch,\" Gavin said quickly. \"Give a couple kids that cot she's on. It's uncomfortable as heck and she hasn't been able to sleep on it.\"\n\n\"Oh, sweetheart, why didn't you say something?\" Hank's mom asked full of concern.\n\n\"Guess she did,\" Hank laughed. \"When she slept out in the hay barn instead.\"\n\nThat brought a few chuckles. \n\nNash's mother leaned close. \"Is that alright Nash Ella? Would you mind sleeping somewhere else for the night?\"\n\n\"Not at all, especially if it meant there would be fewer people around,\" she managed, trying not to show her excitement.\n\nRiding in Gavins truck pressed up against him with two older cousins sharing the bench seat was a little exciting. His house was cute as he led them in. He showed the older couple to their room immediately and got them settled in while Nash looked around the living room. There were pictures everywhere, and she found it odd that all of the ones with Gavin were with family. None of any girls, not even a prom picture. \n\nGavin came up behind her as she stood at a shelf full of pictures and slipped his arms around her shoulders. \n\n\"How come none of these are you and your girlfriends?\"\n\nHe chuckled. \"I think mom has a few somewhere, but I didn't want any of them. Come on, let me get you tucked in,\" he rumbled, pulling her back to the master bedroom. \n\nIt was an entirely masculine bachelor room. A bed with no headboard, a nightstand piled full of things emptied from pockets, a dresser that didn't match the nightstand and a laundry basket with clothes strewn all over it like he missed the basket half the time. It was so incredibly stark and normal that it made Nash smile. It could have been a dorm room. It was so unlike the living room that was full of family pictures and things and that made her realize something.\n\nIt wasn't normal for him to have people in his room. The living room was for company, but this room was his alone and people didn't come in here. He didn't bring girls here. \n\nShe no sooner had the thought that he turned her and immediately pulled her shirt off. It surprised her since it was the first time he had taken her shirt off. He didn't stop, sliding her pants down and off, then her underclothes until she was in front of him with nothing on.\n\nPicking her up, he tossed her on the bed, then stood and pulled his own clothes off. Nash stared wide eyed, wondering if this was it. This was where he was going to take it further than just going down on her. His hard cock stood out beautifully as he stood up straight and he stood there looking her face over with a smirk as she looked at him. \n\nHoly hell he was hot! And so... cut. Like only a farm boy could be. He was beautiful. \n\nHe climbed into the bed slowly, taking hold of her ankles and pulling them wide as he looked her over, his smirk proprietary. Pushing her legs wider, he forced them higher, lifting her bottom up off the bed completely. \n\nNash let out a yelp as he shot forward and ran his tongue around her anus, then licked and sucked as he toyed with it. She whimpered slightly, not really sure about that... but it did feel amazing... Closing her eyes, she relaxed and let him do as he pleased and he groaned happily. \n\nLowering her hips slightly, he moved up to lick along her slit, shoving his tongue into her hole before moving up to latch on to her clit. Nash mewled and went rigid, gripping his hair as she let her head fall back completely. \n\nHe moved his hand down and eased two fingers into her pussy, stroking slowly as he worked her, then pressed his pinky to her asshole and in as she gasped and went tense. It was already done and all she could do was blink up at the ceiling at the full and pleasant feeling as he worked her clit slowly. He fucked her slowly with his fingers and his mouth was also building her up little by little, making her squirm and beg for more. She was panting and squirming, her legs wrapped around his head before he finally started actually trying to do more than just make her crazy with need. \n\nWhen she came, her entire body jerked up off the bed, her pussy and ass clenching around his fingers and she felt the rush of fluid shoot out of her as the pleasure peaked. A hand on her mouth made her realize she was screaming as her body bucked again and again as the orgasm ripped through her. \n\nIt left her feeling completely drained and breathless as he eased his fingers out of her and kissed her hip. Laying down next to her, he pulled her close and kissed her shoulder, then her cheek. \"Fuck yeah, baby,\" he rumbled happily. \"The kind of shower I'm always happy to have.\"\n\nNash blinked at him, turning her head to look up at his satisfied face and shining eyes. \n\nShe didn't really care about his hangup just then, she wanted to return the favor. \n\nSitting up, she pushed him to his back, then grabbed his still hard cock and wrapped her lips around him.\n\n\"Oh... fuuuuck, babe,\" he groaned, his hand going to her head to guide her. \"Fuck yeah, that's perfect,\" he whispered, his hand making a fist in her hair to guide her more roughly.\n\nNash felt excitement rising up, the feel of him taking control, showing her what he liked. It was thrilling and she had a brief fantasy of him grabbing her with his other hand and fucking her mouth, then coming all over her face.\n\nWhen he yanked her off of his cock hard enough to make her yelp, she was confused as he held her head down on the bed and moved over her. His intent became apparent as he jerked her leg high, then shoved his thick cock into her still wet pussy.\n\n\"No! No, stop!\" she cried, panicked. \"A condom!\"\n\n\"No babe,\" he growled almost angrily, shoving his cock into her roughly as he bent over her. \"Can't get off with a rubber, I'll pull out. Fuck! This pussy is so fucking good, Nash! Fuck! You feel so good!\" he groaned, ramming and thrusting almost painfully hard.\n\nIt felt amazing and Nash felt her inhibitions leaving her as she closed her eyes and slid her fingers up into his hair. He would pull out and she could get a morning after pill... it was fine... he felt so amazing inside of her!\n\n\"Jesus, Nash,\" he whispered, his body trembling. \"Fuck! I fucking love you, Nash.\" he groaned.\n\nNash hardly heard him, knowing it was the bliss talking. She disregarded the words themselves and just felt his cock as he pushed into her again and again.\n\n\"I love you so much! Don't ever leave, Nash. Stay here with me, stay here and marry me. Be my wife!\" he growled, his hand tightening around her wrists as he thrust faster.\n\nNash froze up, his words yanking her out of the euphoria. \"What?\" she demanded, trying to twist out from under him. \"Stop, Gavin!\"\n\n\"I love you Nash,\" he growled, looking down at her like he was daring her to say anything about it. \"I love you and I want you to stay here! Marry me. Be my wife,\" he snarled, his hand on her hip as he rammed faster and harder.\n\n\"Stop!\" she yelled, panicking now. \"Gavin stop and get off!\"\n\nHe growled, then half fell on her and she felt his fat cock throb inside of her as he came. The hot fluid filling her made her gasp and lose herself for a moment, the thrill of it making her shudder and tremble as he buried his cock as deep as he could in her.\n\nAfter a moment, she caught her breath again and pushed him off of her. \"Get up! Get off! What the hell, Gavin?\" she demanded, yanking the sheet up to cover her as he sat up on the end of the bed facing away from her.\n\nAfter a moment, he got up and flipped the light off, then laid down next to her in the bed. \"Good night, Nash,\" he half whispered, facing away from her.\n\n\"No! No, what the hell was that?\"\n\nHe turned over angrily and pushed her down to the bed with a hand on her throat. Not hard, not hurting her, but very firmly. He put his face in hers. \"You heard me! You heard every word! Stay here, Nash. Don't leave, don't go back to the city!\"\n\n\"Gavin... this was just... no strings... just two people having fun, remember? I can't just...\"\n\n\"You can do anything you want! Just make a choice to do it and do it! You don't have to do anything just because you decided to years ago! Things change, plans change... you meet new people!\"\n\n\"Gavin... this isn't right, it's not ok. My step dad is your uncle.\"\n\n\"We aren't related!\"\n\n\"It's still... a weird situation and super awkward. Gavin...\"\n\n\"Just... at least think about it,\" he demanded, then let her go and rolled back over. \n\nNash lay staring up at the dark ceiling, so confused and upset. Finally, she slipped out of the bed and pulled her clothes on, then went out to the couch to sleep.\n\nGavin woke her in the morning with a very fake smile before taking all of them back to the huge farm. He said nothing at all as they went into the white barn for the huge breakfast, or after when he pulled her aside and led her back to the stairs, lifting her over the gate before turning and going. \n\nNash watched him go, her heart hurting, then slipped up to the little cubby he had made her. It had drinks and snacks now, as well as three of her books she had brought with her. She smiled sadly as she curled up to read, the party loud and wild below her. She spent the entire day up there and that evening, Gavin showed up. He ducked into the cubby with her and laid down with a hand behind his head. \n\n\"Bout to do the white elephant gift exchange and your folks are asking about you,\" he told her softly.\n\n\"Ok, thanks.\"\n\n\"I'm not being rash or anything. We're all like this... we know what we want and we go for it. It's not just because you come for me like a pornstar either.\"\n\n\"Watch a lot of porn?\"\n\n\"I'm male,\" he snorted. \"Not gonna deny it. Point is... It's not about what you probably think it's about. It's more. So much more. Come on,\" he sighed, getting up and grabbing her hand. He pulled her down to the party and she sat down on the floor at her mom and Hank's feet. Between them, as if saying she was their kid. She refused to look at Gavin in the huge circle as numbers began getting drawn for order. \n\nNash wasn't really interested in the gift exchange, or the outrageous things people unwrapped. She sat with her head down until it was her turn and unwrapped the gift quickly, setting it down without showing it off like everyone else did. She was anxious to leave, to get out of the crowd of people. Anxious enough that she started shaking and she turned and laid her head in her mothers lap. \n\nHer mother stroked her hair and leaned close to Hank. \"I need to get her out of here,\" she whispered to him.\n\n\"Take her up to our room for now,\" Hank told her gently, rubbing Nash's back comfortingly.\n\nHer mother stood and helped Nash up, then led her into the house and up to the little room with the double bed her and Hank were sharing. \"Lay down here, my Nash Ella. Deep breaths, do your counting and grounding exercises, ok? Can you do that?\"\n\nNash nodded quickly, curling up on her side and hugging a pillow. \"I'll be ok, mom. Go on back to the party. I'll rest here, ok? I'll be right here when you're done.\"\n\nHer mother kissed her head, then slipped out, turning the light off as she did.\n\nNash lay shaking, trying to use her grounding exercises to calm down until she was finally calm and breathing normally. With peace came exhaustion. \n\nShe woke briefly when her mother hugged her and kissed her head, laying behind her to hold her, but went right back to sleep.\n\nWhen morning came, Nash opened her eyes and stared at the wall, thinking about Gavin. Was he upset that she hadn't gone to sleep at his house? She imagined Hank had gone and slept on the couch there instead. \n\nShe sat up slowly, trying not to wake her mother, but her mother woke up immediately, and behind her, Hank. \n\nNash blinked at him in confusion. They had let her stay in their bed and made due with no room to let her rest and sleep? She turned away from them and got up, running fingers through her tangled hair. \n\n\"Thanks for letting me sleep... I guess I was tired.\"\n\n\"Of course Nash Ella,\" her mother smiled.\n\n\"Any excuse to snuggle your mother closer is worth it in my book,\" Hank grinned. \"Just glad you don't snore.\"\n\nNash managed a smile, then hurried out of the room. Not knowing where else to go, she went to the white barn and up to the cubby to curl up and think about things. As the barn below began filling up, she thought maybe she should go somewhere else. Gavin would know where to find her here and she wasn't ready to talk to him.\n\nShe decided to leave it for now, she would have to go out among all the people who were already there. Maybe he would leave her alone like he had the day before. \n\nAs the room below got louder and louder, she got more and more tense, feeling like something bad was going to happen. Something horrible. \n\nAfter lunch, Gavin did show up, ducking into the cubby with her. He said nothing, just tackled her down to the floor and kissed her. She forgot every objection in seconds as his hands held her and his mouth made her lose herself. He reached down and shoved her pants down her hips, then pressed his fingertips to her bud immediately, making her gasp.\n\nShe had no real time to focus as he brought her close, then flipped her and yanked her hips up high to move behind her. His mouth covered her pussy from behind as he licked and kissed as if fueled by an unnamed need. Nash could only bite down on a pillow to try and stay quiet. \n\nHe stopped suddenly and her eyes sprang open as she panted, so close to coming that it was about to make her crazy. His hands on her hips and his cock pressing to her opening made her realize too late what was about to happen. Yanking back on her hips, he plunged his cock into her as she cried out. His hand clamped over her mouth as he leaned over her, taking her down to the ground. He shoved into her from behind, his hand over her mouth and holding her head against his shoulder. She was already so close, the feel of his thick cock spreading her open and ramming into her wall took her over the edge. He growled through clenched teeth as he held her down though the orgasm. He groaned again as it began easing down, then began ramming even harder. \n\n\"You're mine, Nash,\" he growled almost angrily. \"You're mine and I am not letting you go without a fight! I love you and you belong to me, forever!\"\n\nShoving in hard, he held himself there as he came and Nash could only moan wantonly as she felt him throbbing and spilling into her, filling her with hot cum. It was beautiful. \n\nAs she went languid, he pulled out of her and turned her to face him, kissing her passionately and roughly before fixing his jeans and leaving her laying there. \n\nNash lay there a long moment, just trying to figure out what had just happened and half wishing he would come back and do it again. ",
        "He didn't show up again until it was dinner time. He knelt down in front of the cubby but didn't come in. \"Hey... think you could handle sitting for dinner long enough for the family prayer? You can come right back after.\"\n\nNash eyed him warily, then nodded and let him help her out. To her shock and her horror, he sat in the seat next to hers, next to her mothers. \n\nHer mother gave her a bright smile and Hank grinned at her as the huge family all settled at the tables. \n\nHank's father stood and Elle took hold of Nash's hand under the table. Gavin took her other hand and she realized it was happening all around all of the tables, everyone was holding hands.\n\nThe old man lowered his head and said the prayer, but Nash didn't hear a word of it. She was acutely aware of the way Gavin's hand held hers so tightly, so possessively and full of need. The way his thumb stroked the back of her hand pleadingly. At least she imagined it that way.\n\nThe prayer finally ended and everyone lifted their heads, her mother letting go of her hand immediately. \n\nGavin squeezed her hand with both of his before he let it go, then he stood up.\n\n\"Just a moment more, before we begin!\" he spoke loudly and everyone went quiet again, looking at him.\n\nNash felt terror surge up. What was he about to do?!?\n\n\"You've all been on me the past few years about being the oldest Van Housen to make it this far into bachelorhood. I've always told all of you the same thing. When the right one comes, I won't hesitate. I didn't hesitate. The right girl finally showed up and I spoke my mind within days, but she feels like things are too weird. The situation too awkward. Not only that, but she would have to change her plans.\"\n\nElle grabbed Nash's hand again under the table as Nash looked up at Gavin in horror. Was this really happening? In front of at least a hundred people?\n\n\"This girl, she happens to be the step daughter of uncle Hank. No relation at all to him or me, but she feels like it wouldn't work. For me to bring her into our family to be a true relation would be somehow wrong.\"\n\n\"Love is beautiful and you should take hold with both hands!\" a woman called across the room.\n\n\"Nothin' at all wrong with it, you're no kin at all!\"\n\n\"No one here would think twice about it!\"\n\n\"Say yes!\"\n\nThe whole room was yelling at her until Gavin held up his hands. \"I asked her to marry me, to be my wife and stay. She has reservations, so I would like to ask uncle Hank and Aunt Elle to consider extending their stay to the very end of winter break. Past new years and right up until she has to go back to school,\" Gavin announced, looking past Nash at Hank.\n\nHank nodded quickly, grinning with tears in his eyes as Elle turned to give him an alarmed look he didn't see. \n\n\"I would like time to convince her to change her plans, show her how readily the family would accept her. Show her how worth it it would be to come here and...\"\n\nNash couldn't take it anymore, it was all too much. She shoved her chair back and fled, sprinting out of the building with over a hundred shocked faces watching her. She ran all the way to the hay barn and climbed up to the loft, then threw herself on the blanket and sobbed. What the hell was he thinking? Why did he think that was alright, humiliating her that way and telling everyone her business? And what the hell made him think it was remotely alright for him to ask her to change her plans and quit school and leave her job behind to move here for him?\n\nThe door opened below and she went quiet, trembling. She heard movement, then the creak of the ladder and she was ready to tell Gavin to leave her alone, but it was Hank's head that popped up over the side. He came up and sat down near her, leaning on the wall. \n\nShe said nothing, just wiped her face and lay there curled up. After a long moment of silence, Hank finally spoke. \n\n\"I was married before you know. Alicia and I were married the day she turned 18, before she was even out of school. Lost her when I was only 27. I was broken after I lost her, I never thought I would be able to find a love like that again. \n\nI was passing through Denver, driving though. I was never supposed to stop, I was in a hurry to get home for the big 4th of July thing we do here. I was tired though, and I needed a coffee. I pulled off and saw this little place and went in to get a coffee and something to eat. Stretch my legs a minute. \n\nWhen I saw your mother sitting there... her eyes all lit up with awe as she looked through that portfolio of art... she was stunning. So incredibly beautiful and my heart just told me. Don't go yet. Talk to her. So I went and asked her if I could sit with her. She looked so confused for a minute, looking around the empty place, then she looked up at me. Her eyes filled with that same look she had with the art, that stunning sort of awe. She said yes and we sat there talking for more than five hours till the place closed. We left there and walked, still talking and laughing until night. When she found out I was only passing through and had no place to stay, she told me I could stay on her couch. We stayed up all night talking and fell asleep next to each other on the couch. I missed the 4th with my family, but I didn't even notice it. I had found her. The one. We drove to Vegas on the 6th and got married... neither one of us had a single doubt. We haven't had one since. \n\nThat's sort of the way of things for us, the Van Housen men. When we know, we know. We all know as soon as we find our perfect girl and we all marry young. It's... sort of a thing. \n\nI've seen the way you and Gavin look at each other, the way you've smiled more in the past few days. Your mother said she's never seen you smile as much as you have here. Never seen you so happy. I asked her once why you went to school for what you were since it didn't seem like you wanted to do it very much from your texts and emails. She said you had a teacher once tell you you had an aptitude for it and you should look into it. Since then, you just sort of picked it and ran with it. Not because you wanted to, but because it was expected of you and you had no real dreams of your own.\"\n\n\"It's not like that,\" Nash shook her head. \"Of course I like it.\"\n\n\"I haven't seen you smile once when you talked about school or your project. You never sound excited, it's only a chore. You smile every time Gavin comes in the room or looks at you though. Every time. Yes, I noticed. Your mother only noticed that you were happy, but I know my nephew. I saw the look on his face when we pulled up and he stood looking at you like a deer in the headlights. He had it hard and bad. When you started smiling so much and were so happy... I thought you felt the same way. I know you're not used to things like this and you have this idea about what your life is supposed to be... but sometimes plans change when the right person enters your life. Like the day I met your mother. My whole life changed that day and I am so incredibly happy now.\"\n\n\"Even though you live in Denver and not here anymore?\"\n\n\"Even though. Your mom works in Denver and she loves her work. You go to school close by and she doesn't want to move away from you. She even hopes you will move back home after school.\"\n\n\"I know,\" Nash whispered, hugging herself.\n\n\"Gavin's a good man. Really good. If he's given his heart to you, you deserve it and you deserve to give yourself a chance to be happy. If, though, you don't want to stay, you want to leave today, we will pack up and go. I don't want you to feel pressured into something you don't want to do. I think you do though, you're just afraid to admit it. Admit that you feel for him too because that would mean altering your plans.\"\n\n\"You would really leave today?\" Nash asked softly.\n\n\"Of course I would. I would never force you to stay in a situation that made you uncomfortable.\"\n\n\"Then I do. I want to go!\" she said quickly, sitting up and wiping her eyes. \"I want to leave right now.\"\n\nHank gave her face a searching look, then nodded. \"I'll pack our things.\"\n\n\"I'll wait in the car,\" she said breathlessly, then hurried down the ladder to go hide in the car.\n\nShe locked the doors, just in case and laid down in the back seat. It took a long time, but finally, the trunk opened as Hank started loading things in it. They got in the front and as soon as Hank started the car, the back door opened.\n\nGavin's face was red, his eyes rimmed red. \"Can I talk to you, Nash?\" he asked angrily.\n\n\"I have nothing to say,\" she answered, turning away from him.\n\n\"Then you can listen. I love you, Nash. I think you love me too. Why are you so afraid to let yourself be happy? I could...\"\n\n\"You're wrong, Gavin,\" she snapped at him, cutting him off. \"And you have no right at all to demand I change all of my plans for you! I have a single semester of school left, I am not throwing all of that away for a brief fling that was supposed to just be a fun distraction! Those were your words. A fun distraction. Let the door go, we're going home.\"\n\n\"At least stay until break is over!\"\n\n\"No! Not a chance, not after you humiliated me like you did! Close the door and leave me alone!\"\n\n\"Nash!\"\n\n\"Gavin,\" Hank called gently. \"Give her a little space. If things are meant to be, they will work out.\"\n\nGavin looked miserable, but he stepped back and shut the door. Hank looked back at Nash, hesitating before he finally looked resolute and left. Nash curled up in the back and cried almost the entire way home. Her mother stroked her arm and Hank tried to distract her with funny stories, but he never pressured her or talked about Gavin at all. \n\nAs soon as they got home, Nash left, going back to her apartment near her school to work on her project. She felt broken and listless, hating herself and hating Gavin. Why did he have to ruin everything? \n\nAt night she dreamed of him and woke up sweating and needing relief. She used her vibrator more in those few nights before school started back up than she had in her entire life. \n\nWhen school did finally start back up, she had a hard time focusing. None of it seemed to matter anymore at all. It wasn't important. A month into school, another realization hit her. \n\nShe was late. \n\nTerror filled her as she put it off and put it off, thinking she would start any day, but when a week passed and she still hadn't started, she went and got a test.\n\nPositive.\n\nShe got two more. \n\nBoth positive.\n\nShe felt completely defeated as she curled up on her couch and cried, wondering what she was going to do. \n\nShe called her mother, but it was Hank who answered.\n\n\"Hey kiddo! Your mom's in the shower, you wanna wait?\"\n\n\"How long will she be?\"\n\n\"Not long, she's about done I think. How's school going?\"\n\n\"Fine, I guess.\"\n\n\"You get your project grade yet?\"\n\n\"Yeah, I got an A. Umm... have you heard from anyone recently?\" she asked, blushing.\n\n\"I have, in fact. Got an email from my nephew just last night asking me how you were, asking what all you were up to. Like I told your mom, I won't tell him anything about you at all without your permission.\"\n\n\"Umm, you can tell him whatever, I don't care. What... how is he doing?\"\n\n\"He's... hangin' in there. Heartbroken. He emails me a couple times a week asking about you. He's even talking about visiting for spring break if you plan on coming home.\"\n\n\"Oh... umm... I don't know. Umm... can you just tell mom I called?\" she asked quickly, then hung up.\n\nGavin was coming to Denver? Next month? She looked through her calendar to see when spring break was and she felt butterflies all over her body as she realized how close it was. Should she go home? Or stay here and avoid seeing him. What was she going to do? What would she tell him? What was she going to do about being pregnant? \n\nShe paced and chewed her thumbnail all night, trying to figure out what she wanted.\n\nThe next few weeks passed slowly and Nash had come to no conclusions as to what she should do. Spring break came and she left her last class slowly, still debating on what she should do. Should she call and see if Gavin was going to be visiting Hank, or just show up? Act shocked to see him?\n\nShe trudged up to her apartment, thinking about what she might need to pack.\n\n\"Hey.\"\n\nHer head jerked up and Gavin was standing against the wall across from her door. \n\n\"Hey?\" she asked, confused, panic setting in. She wasn't ready to see him! She looked horrible! \"How...?\"\n\n\"Uncle Hank didn't tell me,\" Gavin said quickly, standing off the wall. \"I looked you up. He said he didn't know if you would be going home for break or not, so... I thought I would come to see you. You look great. You even got a little meat on your bones, you look good.\"\n\nNash blushed. She had gained twelve pounds already since she found out she was pregnant, most of it in her hips.\n\n\"Can I hug you?\" he asked, stepping closer.\n\nNash nodded slightly, then stepped closer as she dropped her bag off her shoulder. Gavin bent to hug her awkwardly, then dropped to a knee after a moment and pulled her in closer, squeezing her against him almost painfully. \n\n\"Jesus, Nash, I've missed you!\" he half wailed.\n\nNash knew then that she could say nothing about being pregnant. It would be too much for him and he was already on the edge. She pulled out of the hug and looked down. \"You shouldn't have come here. I was going to go home for a day or two, but I have a lot of work I need to get done,\" she lied.\n\n\"I can take you back, we can talk on the ride.\"\n\n\"I'd rather have my own car and... Gavin, I have nothing to say. Nothing has changed. I have school for another couple months and...\"\n\n\"I know! I know, Nash. I... I just wanted to spend some time with you on your break. Maybe you could show me around your big city?\"\n\nNash looked up at him, searching his face. Finally, she sighed and unlocked her door, letting him come in. He looked around briefly as she shut the door, then turned to her and looked down at her as she dropped her bag. \n\n\"Hey,\" he said again.\n\n\"Hey,\" she answered, going past him to the kitchenette. \"Drinks in the fridge,\" she shrugged. \"Umm... my apartment is kind of bare, sorry.\"\n\n\"It has all I need in it,\" he answered quickly. \n\nNash blushed, then poured herself some tea before curling up on her couch with a pillow in her lap. \n\nGavin sat near the middle, his elbows on his knees as he looked at her. \"You look a little different,\" he finally said. \"Still stunning... but something's changed about you.\"\n\n\"I took about eight inches off my hair?\"\n\nHe grinned. \"Not that... and I did notice even if you do still have it all piled up on your head. It's something else. Like... you're less unsure about things or something. You have... a sort of calmness about you.\"\n\nNash snorted a laugh. \"That's not it. I'm definitely not calm, not at all.\"\n\n\"Yeah, I can't place it,\" he continued, still looking over her face. He went quiet as they stared at each other for a long moment. \n\nAfter several long minutes, he cleared his throat and looked down, blushing. Nash shifted on the couch and sipped her tea. \"You never really said what you do,\" she offered, racking her brain for something to say. \"Or even how old you are. How long you've been out of school.\"\n\nHe shrugged a shoulder and gave her a half smile. \"Just turned 25 last month and I've been doin' what the family does since before I was ever out of school. Farming. You saw my place, I have all that acreage around it. Last year it was corn, but tryin' my hand at beans this year.\"\n\n\"Beans?\"\n\n\"Soy,\" he nodded. \"Had a thought on getting a few cows, but decided against it. Found out you had an allergy to animal hair.\"\n\nNash felt her face heat even more as she looked away, but she refused to comment on it. \n\n\"I guess I thought this place would be a little bigger,\" he offered, looking around.\n\n\"It's just a studio,\" she shrugged, glancing around the room. \n\n\"This like... a dorm where you stay for college?\"\n\n\"No. It's an apartment off campus. I stayed in a dorm at first, then got this apartment. It's a block from where I will be working once I graduate.\"\n\n\"So you have a job? Hank never mentioned you...\"\n\n\"No, not yet. This apartment is paid for by my dad's insurance money. I have a job waiting for me, but for now I am only a student.\"\n\n\"Maybe you can show me the place,\" he offered with a half smile. \n\n\"Maybe,\" she blushed, looking at the window again.\n\n\"Lots of buildings around here. I got lost a couple times looking for this place. I had to call Hank and he gave me directions. Even then, the whole apartment thing... Once I found yours I knocked a couple times till the lady in that one said you were in class. I thought it started today. Break, I mean. So I just sort of waited. I wasn't sure what else to do.\"\n\n\"I wish Hank had called and told me... or texted. Or had mom call.\"\n\n\"I asked him not to, I wanted to surprise you.\"\n\n\"You did.\"\n\nGavin sat there a moment, rocking slightly, then he turned to her suddenly and took hold of her hand. \"I know things feel a little awkward, Nash, but I don't want them to. I... I didn't know what else to do. I want to show you that I will try. I will have patience and wait for school to be out and all of that! But I also need you and I don't want to just pretend I don't. All I want to do is kiss you and throw you on that bed there and keep you there for the next week!\"\n\nNash stared up at him in surprise, her lips parted, then his words sank in. She went warm to her toes and hot in places down low as her eyes went to his lips. That was the only invitation he needed as he leapt on her, taking her face and kissing her with a wail of pent up need. \n\nHe didn't wait long before lifting her off the couch and carrying her to the bed, laying her down with his mouth still locked over hers. His hands pulled and tugged her clothes off, but she hardly noticed as she yanked his off as well.\n\nHer mind was only on pulling him close and making love to him, but he pulled away completely and yanked her legs wide before dropping down to lick the entire length of her pussy. Moaning euphorically, he licked again and again before wrapping his lips around her mound and sucking gently, then moving to her clit as she closed her eyes and let out a sigh of bliss.\n\nHe made her come for him, then held her down as he kept going, flipping her over and pulling her ass open wide to tongue her asshole before moving back to her clit. When he had her close again, he moved up behind her and pushed his cock into her as he moaned. Nash threw her head back as she let out a cry of ecstasy that was cut short as he slid his thumb into her ass. It felt good and full as he fucked her from behind, but it had still shocked her. She didn't object as he fucked her with his thumb too, the feeling bringing her to fulfillment much more quickly. \n\nThey didn't leave her bed that day. In the morning they only left long enough to get food and then went right back.\n\nBy the third day, her mother called to see if she was alright or planning on coming home for break. She told her she was fine, but busy and her mother didn't bother her again. Nash assumed Hank had texted Gavin as well, at least he was answering texts with grins. \n\nGavin didn't bring up marriage or anything else during the whole long week. Not even on the fifth day when she was showing him around Denver. \n\nShe was flat out exhausted when Sunday finally came, and a little sad too. She didn't really want him to leave just yet, things had been so nice with him there. Not that she could spend another week in bed with him, she was already so sore it hurt to move. \n\nThey didn't talk about when he had to leave, but Nash knew. He had his bag all ready to go Sunday night before falling into bed next to her. \n\nMonday morning, she felt mixed emotions. She didn't want to make a big deal about saying goodbye, but she also didn't want him to start in about being in love and getting married either. If she made a big deal, he might too. She didn't want that. ",
        "She got up and showered, then grabbed her bag as he was rolling out of bed. She gave him a smile, even though her heart was breaking a little. \"Lock up when you leave, k?\" was all she said before shutting the door and hurrying to her car ro go to class. \n\nShe told herself it was for the best. If he stayed, he would distract her and she would skip classes to be with him. She would totally screw up her last few weeks of school and she couldn't do that. Not when she was this close. \n\nStill, she moped through all of her classes and kept looking at her phone to see if her mom or Hank texted. Gavin would have texted Hank when he left and her mom would surely be checking on her to see how she was. Right?\n\nMaybe Gavin stopped in there before going back to Illinois. That's why her mom wasn't texting her.\n\nShe went up to her apartment after her last class and was shocked to find the door unlocked. He hadn't locked up!\n\nPushing the door open, she stared at Gavin in the little kitchenette in nothing but a pair of jeans. He looked at her and grinned. \"Your oven cooks uneven,\" he told her.\n\n\"Uhh... yeah,\" she answered, stunned. She closed the door and dropped her bag, still staring.\n\n\"Went to the store and got the fixin's for chicken pot pie, but your oven doesn't heat up as quick as mine and...\"\n\n\"Yeah... the gauge is off. If you want 350, you have to put it on 425.\"\n\n\"Well shit,\" he chuckled, turning the dial up. \n\n\"Yeah... I don't use the oven much.\"\n\n\"I could tell.\"\n\n\"I... why are you still here? Don't you have to go home?\"\n\nHe shrugged a shoulder, looking at the oven like it was important he watched what was inside. \"Everything I want is right here,\" he finally answered, his voice barely audible. \"I figure I can wait here long enough for what I want to realize I'm what they want too. Till school is out.\"\n\n\"What about your beans?\"\n\n\"Darren already said he could handle it. Figure I'd let him, since he'll be doin' it himself this time next year. Good practice and all that. And plenty of people there to help him. I ain't use to eating out as much as you, though, so I thought I would cook dinner tonight.\"\n\n\"I beg to differ,\" she laughed, moving around to sit at the island.\n\n\"What?\" he asked, grinning.\n\n\"You are way more used to eating out than I am.\"\n\nHe snorted a laugh and rolled his eyes ostentatiously. \"You joke but you love it as much as I do.\"\n\n\"Never said I didn't,\" she agreed, blushing. \n\n\"So, as I figure it, you have until May 17th to decide you want to marry me and go back with me. If you ain't decided by then, well, on the 18th I will just haul you over my shoulder and take you back with me till you figure it out.\"\n\n\"What if I want to stay here?\" she asked softly.\n\n\"You don't. This place holds nothing for you in your heart. I watched you all day when you showed me around, there's nothing special to you here. It's just a place to you, not a home.\"\n\n\"What about my job?\"\n\n\"They have places near home that need people who do what you do. My dad said they needed them local, putting the new navigation systems and ground sensors in the tractors and combines and everything.\"\n\nNash hugged herself and went to look out the window, feeling a little overwhelmed. She still hadn't told him she was pregnant, or even decided what she wanted to do yet. It all seemed like too much. \n\nShe wished she could talk to her mother right then, without Gavin or Hank or anyone else around. Just to talk to her and be able to lay it all out out loud.\n\n\"Well this still has a good 45 minutes,\" Gavin laughed, catching hold of Nash from behind and picking her up. \"I know how I want to fill that time.\"\n\nNash giggled as she threw her arms around his neck and he carried her to the bed. Her body was so hypersensitive the past couple days, it took hardly anything for her to come and she didn't know why. \n\nGavin came up with a growl as she came the second time in less than ten minutes, her body shaking uncontrollably. His smirk as he kissed her hip made her laugh shakily. \n\n\"I think you get excited as soon as I put hands on you,\" he accused, moving up and kissing her higher on her hip, and then her belly and her ribs as he slid his hand up.\n\n\"Maybe,\" she laughed, sliding her hands into his hair as he hugged her, his head on her ribs. His hand slid over her belly again, then again and she felt him go still. His hand spread over her belly and he held it there and she could feel the tiny lump his hand was pressing against inside of her.\n\n\"Nash?\" he asked softly, his voice shaky now.\n\n\"Yeah?\" she asked, half panicked. There was no way he could know! She wasn't really showing yet, she just looked a little thicker!\n\n\"I... think maybe I should run to the store.\"\n\n\"What for?\"\n\n\"Uhh... when Jerry got married, he told me about how when she got pregnant, she was super sensitive. She could come if you blew on her the wrong way. All the time... I... think maybe I should get you a test? Do you feel that?\" he asked, looking up at her as his palm rolled over the tiny knot in her belly.\n\nNash stared at him, her eyes wide, then she blushed and looked away. \"I... was waiting to tell you,\" she whispered.\n\nHe sat up, looking down at her in shock. \"You are? You KNOW you are? How far along?\"\n\n\"I haven't been to the doctor, but... it happened around Christmas.\"\n\nHe looked down at her belly in wonder, then dropped back down as his hand ever so gently slid over her stomach. \"We're going to have a baby?\" he asked, his face full of joy.\n\nNash didn't have it in her to say she wasn't sure what she was going to do yet.\n\n\"I'll have to build on to the house!\" he said excitedly, going up to his knees. \"My folks still have all kinds of baby stuff and we keep a whole storage barn full of nothing but baby stuff out at Grams. People just come and get what they need and put it back when they don't need it anymore! Have you thought of any names? When is it due do you think? Do you think it's a boy? What does your mom think?\"\n\n\"I... you're the first person I have told,\" she answered, still half paralyzed with fear. When was he going to figure out that she'd had no intention on telling him until she figured out what she was going to do?\n\nHe smiled, his face lit up as he went to an elbow beside her. Kissing her gently, he stroked her face. \"We can tell her together. My folks too. Hank will be so excited! Outside of you saying yes, this is the best news I could imagine getting, Nash,\" he breathed, pulling her close to hold in his arms. \n\nNash hugged him back, but she felt like a fraud. \n\nHe pulled back. \"Let's invite'm up this weekend! I'll make dinner and we can tell them!\"\n\nNash managed a smile and a nod, but she felt a little sick. She'd wanted to tell her mom alone and talk to her.\n\nStill grinning, Gavin grabbed up his phone and started texting Hank. Nash rolled out of bed and picked up her phone, but slipped into the bathroom just holding it. Setting it down, she got in the shower so that Gavin wouldn't know she was in there crying, she just felt so lost suddenly. \n\nHe found her there, two minutes later, hugging her knees in the bathtub as the shower streamed down on her. \n\n\"Babe? Oh, hey, now,\" he coaxed, getting in with her in his jeans and pulling her into his lap. \"Babe, it's ok. I know how it is, all emotional and you're all fragile feelings right now. I'll be here for every minute of it, I promise you. We'll do this together. I been around pregnant women my entire life, I've seen every different reaction there's ever been! High emotions is normal. Come here, I have you,\" he comforted her, stroking her hair back as he leaned back against the wall. \n\nNash laid her head on his bare chest and sobbed until she had no more tears, then just held on to him until the hot water started giving out. He kicked the water off with his foot, then lifted her out of the tub and wrapped her in a towel before peeling his own wet pants off and drying off. He carried her to the couch in the towel before hurrying to the oven and turning it off, pulling the dish out. \n\nIt smelled slightly burned. \n\nHe ignored it after setting it on the stove and hurried back to Nash, pulling her back into his lap to hold her and kiss her head over and over again. \n\nShe fell asleep right there in his arms like that and didn't wake up until he was laying her in bed.\n\nWhen her alarm went off in the morning, she ignored it, turning and hiding her eyes from the light against his arm. \n\n\"Hey babe,\" he rumbled, hugging her. \"You feelin' ok?\"\n\n\"Headache.\"\n\n\"You cried yourself to sleep, I'm guessing a headache is normal with that. Feelin better otherwise?\"\n\n\"Still a little lost,\" she admitted, saying more than she had planned to, to him.\n\n\"I know you are. I'm here. I'll help you find the way... even if it's not my way. I'll still be here.\"\n\nNash felt a relief wash over her. He wasn't going to use this to try and force her to be with him. She held her breath a moment to try and build up the courage for the next part. \"I... I'm not sure if I want to keep it.\"\n\nHe went still, his whole body going rigid. His hand slowly began stroking her arm. \"Alright,\" he told her gently. \"That's your choice to make, Nash... I'll be here for that too. If... if you don't want me and you don't want the baby but still plan to have it...\"\n\n\"I'm not sure I want to have it,\" she said quickly. \"I haven't had much time to think about it or decide.\"\n\nHe went still again. \"I wasn't supposed to know, was I?\"\n\n\"No,\" she admitted. \"I was going to tell my mom and talk to her.\"\n\n\"Alright,\" he answered slowly. \"So... how about this weekend, we go there. To your moms. Me and Hank will find something to do Saturday and you can spend the day with your mom. Talking and deciding and all that. You can let me know what you decide Sunday. Will that work?\"\n\n\"Thanks, Gavin,\" she whispered, then hugged him back just as tightly when he hugged her close. \n\n\"Alright. You have a class this morning, go get ready and I will make you breakfast and coffee and get you something for your headache.\"\n\n\"I was going to skip...\"\n\n\"The hell you will,\" he smiled. \"You aren't allowed to skip classes while I'm here, I won't let you. You're going to finish college on a damned high note and be proud of it. Come on, up. Get dressed,\" he demanded, helping her up and getting up himself.\n\nNash managed a smile as she got dressed. \n\nTo her shock, her mother and Hank were both there when she got out of class. She gave them and Gavin an alarmed smile. \n\n\"Hey,\" Gavin smiled brightly. \"I saw there was this art show down the street when I went for groceries. I thought you and your mom would like to go see it. Me and Hank can just hang here and catch up,\" he said quickly. Too quickly. \n\nShe grinned at him, thankful for him. He'd known she wouldn't be able to make it until the weekend, she needed to talk to her mother now.\n\n\"That sounds amazing,\" she told him, then went to hug her mom. \n\nThey left the apartment an hour later to walk down to the little street fair art show. Her mother looked at her and gave her a small smile. \"How far along are you?\" she asked without preamble.\n\nNash smiled faintly. \"Christmas?\"\n\n\"He knows, I assume.\"\n\n\"Yeah... he noticed last night.\"\n\nHer mother snorted a laugh. \"I noticed the second you walked in the door. Tiny as you are, you're already showing. So he knows it's his... is he pressuring you to marry him again?\"\n\nNash looked down, then told her mom what was going on and the issues she was having about not knowing what to do. Whether she should keep it or try to get her life on track first.\n\nHer mother was quiet for a long time as they walked through the art show. Finally, she spoke. \"It's easy in this day and age to say 'not now, maybe later' and not think about what that means. You know me, Nash, I am an advocate for women's rights and your body your choice... but I want you to really think about what it is you're asking. Discarding a life because you don't know if you are ready yet. No one is ever ready for a child, Nash. It happens and you learn as you go. I am not saying you shouldn't weigh your options... I am just saying that this doesn't sound like you at all. The Nash I know would never do something like this because it's inconvenient. What's really wrong? Is it Gavin? Because he's so intense and his emotions are so epic? Hank is the same, but the difference is, I adored it, still do. His heart is so big, so open, he has no fears of jumping all in. Neither did I. You are more like your father, so reserved and careful, double thinking every move you make. It's harder for you to understand someone who gives so much of themself so quickly, you keep waiting for the other shoe to drop, to see what is going to go wrong. You're too afraid to let it happen, to trust that he is genuine. I have no doubt at all that he is, Nash Ella. So if you feel for him at all what he feels for you, then don't be afraid. Let him in and let yourself be happy. This pregnancy too. You don't have to be afraid of not making the right choice. Trust yourself. Trust that he loves you without reserve. Trust your feelings for him and know that no matter what, I will be here for you. So will I and so will Hank.\"\n\n\"You know they aren't normal, right?\" Nash asked her mom, confused.\n\n\"I am well aware and I am so happy they aren't. Their whole family is just... completely and unabashedly romantic and close. They are raised to see it as a gift and not something to hide or be ashamed of. I love it about them.\"\n\nNash looked over at her mom and the winsome smile on her face, then back at a hideous tar painting. \"You want to go there, don't you?\" she asked her mom softly.\n\n\"I was considering it,\" he mom admitted. \"If you really decided not to come home after college. To live alone in your apartment. Now I don't think it will be an issue,\" her mother smiled. \"I have seen the way you two look at each other. Hank told me he had already seen it, but I hadn't. Not until you walked in today. When you walked in the door, his world walked in the door, his face said it all. And when you looked at him, the way your face lit up like you were so happy he was still there. Almost like you were afraid he might not be, but he was and you were so relieved and happy. You love him, a blind man could see that.\"\n\n\"But he's so...\"\n\n\"I know. So's Hank,\" her mother laughed. \"You get used to it. It's hard sometimes, to find ways to spoil him when he is always working so hard to spoil me. I think it's just ingrained into them, all of them, to spoil each other and always wear their hearts not just on their sleeves, but in their hands to hand over. It's both amazing and infuriating when you want to do something for them, only for them to turn it on you and make it about you.\"\n\n\"Does it ever ease up?\"\n\n\"I hope not,\" her mother laughed \"Hank and I will be coming up on a year and he is still coming at me like the day we met. So handsome and perfect standing there at my table, all charming and full of joy. So many people want to tell you about sad things in their life or bad things that have happened to them... not him. He is so full of joy and happiness and it's so refreshing. They are all like that. What did you and Gavin talk about when you met?\"\n\nNash blushed and looked away quickly, not wanting to admit that they hadn't talked much at all. \n\nHer mother gave her a wicked chuckle. \"They may have that in common too. Insatiable. I don't mind that one bit either!\"\n\n\"Mom!\" Nash hissed, horrified.\n\nHer mom only laughed and hooked her arm through her daughters as they walked back to Nash's apartment. \n\nThe men met them at the door, Gavin grinning. \"Saw you walking back. We were thinking a sit down place for dinner? Since you only have two stools and a couch here to sit on?\"\n\n\"Works for me,\" Nash shrugged, blushing again. \n\nShe slid her hand into Gavin's and he smiled down at her, pleased as they got in the back of Hank's car. She spent the evening looking over Gavin objectively and thinking about him objectively. Putting what her mom told her in with everything she knew about him and what Hank had said, as well as how his family reacted to him. She put it together like a grid, lining everything up and putting intersections in where she knew things to be true. She added in the idea of having a child with him and saw it all in her mind's eye and weighed her options. \n\nAfter the waiter came and asked them if they wanted desert, she finally sat up and turned to Hank. Taking hold of Gavin's hand on the table, she leaned up. \n\n\"So... dad. I guess Gavin and I have something to tell you. How ready are you to be a grandpa?\"\n\nHank sat up so hard he toppled his water as he laughed joyously, leaning to clap a hand on Gavin's shoulder. \n\nGavin yanked Nash out of her seat to hug her, smiling so hard he had tears in his eyes. \"Thank you,\" he whispered in her ear before kissing her temple. \"Thank you!\"\n\nShe hugged him closer and buried her face in his neck. \"Guess I should ask you how ready you are to be a dad? And a husband?\"\n\nGavin let out a whoop, jumping up and spinning her around before standing her on the chair to kiss her. He stood up straight and turned to face the whole restaurant. \"SHE SAID YES!\" he yelled joyously, then turned and kissed her again. \n\nThere was laughter and light clapping, as well as a few cheers as Hank and her mother stood up to hug them as well. \n\nNash found herself crying as well, her own tears of joy."
    ],
    "authorname": "gabthewriter",
    "tags": [
        "reluctance",
        "romance",
        "oral",
        "love",
        "farm",
        "oral sex"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/nash"
}