{
    "title": "Dead and Horny Ch. 12",
    "pages": [
        "Hi all!\n\nHere it is, the final chapter of my succubus/zombie/mimic adventure starring Lily, Dana and Tick Tock. I started this story a year ago. It's been a long hard year for many of us, and I certainly hope that I've been able to bring you just a little bit of extra joy. If it has, please make sure to leave me some stars and tell like-minded readers where to find me!\n\nIf you're a new reader, you should just pop on back to Chapter 1 so you can binge a year's worth of writing. It'll be fun, there's a Bigfoot cameo, you'll love it.\n\nReturning reader? Welcome back! Our magic road trip is officially at an end and I want to thank you for taking this journey with me. With Dana in horny jail and Lily on the loose, there's only one place left for us to go, and that's\n\nHome\n\nLily soared over the ocean, her wings spread wide as she was carried on the currents of the wind. The water of the Pacific Ocean had turned an ominous gray, a color only slightly brighter than the thick storm clouds that loomed on the horizon. She had a large backpack slung below her belly, giving her the appearance of a demonic kangaroo with wings. In one hand she held a GPS unit, in the other a pair of binoculars.\n\nOn the horizon, she spotted a dim shape and lifted the binoculars to her eyes. It looked like a container ship, but was it the one on which she had left Dana? With the storm closing in, she was hopeful that her luck had changed. If she didn't land soon, she would have to fly far above it. Not only could lightning fry her GPS, but she would also fall into the ocean. This would mean teleporting home and starting from scratch.\n\nUnable to make out the ship's name in the rolling waves, she went in for a closer look. She was flying at about a hundred feet, but climbed higher into the sky to evade detection. She would have to hope for the best in case her silhouette was spotted against the dwindling light.\n\nOnce she was closer, she moved to the starboard side to check the vessel's name. She pumped her hand in victory when she realized it was the right one.\n\nTaking care to keep out of sight, she swooped onto the deck from behind the bridge, landing just as the first few drops of rain fell. She picked her way among the containers before finding the one she needed. When she put her ear to it, she could hear the sounds of moans over the waves slapping against the hull of the ship.\n\n\"Sounds like you've been busy,\" she muttered, then looked up at the sky. The lead storm clouds had blotted out the sun, and the overhead deck lights had already turned on. She was far enough down amongst the containers that it wasn't likely she would be spotted, but caution would be for the best.\n\nPulling a length of rope from the bag, she created a safety loop on the front of the container. The last thing she wanted was for the open door to attract attention. The rope would prevent the door from opening more than a foot. Lily squeezed inside with no problem, then pulled the backpack through.\n\nOnce inside, the smell of wet pussy was overwhelming. Lily set her backpack down, then pulled out the flashlight to shine it on the sports car.\n\n\"Let's see if horny jail did you any good. Time to check your cell for contra\u2014\" The words faded from her lips when the beam of light hit Dana.\n\nThe zombie had positioned herself so that she was riding something on the center console, and her skin was covered in dark marks that looked like soot. However, the soot was shifting as Dana moved, and Lily realized that they were Dana's veins, shifting about just beneath the surface of her skin.\n\nDana looked up at Lily and let out a growl. Her eyes were bloodshot, and her forehead now had a prominent ridge that pressed against her skin.\n\n\"Oh, fuck me,\" Lily muttered.\n\n<center>\u26f5\u26f5\u26f5</center>\n\nDana heard Lily's voice as if from far away. It was so hard to think, to concentrate for more than a couple of seconds on anything but the heat that flooded her body. It was dark, wherever she was. Sometimes she could hear the wind, and it occasionally carried a throaty moan with it.\n\nShhh. Go back to sleep.\n\nShe had first heard the voice days ago, only hours after being locked away in the shipping container. Between orgasms, she had felt her mind slipping away from her body as she completely lost control. The Seed had trapped her in a permanent state of arousal, but as her desperation for climax had grown, she had slipped into the void of her own thoughts.\n\n\"I don't sleep,\" she muttered. For just a moment, she was back in the car. Someone was shining a light in her face, and she wanted to call out, to warn them that she would attack. The seed had kept her fed at first, but now she was hollow, eager to fill her belly with the flesh of the living.\n\nThat's because you're a monster, the voice reminded her. A shell of your former self. Why bother trying to change the impossible?\n\nDana nodded. The voice, as always, was right.\n\n<center>\u26f5\u26f5\u26f5</center>\n\nLily watched Dana's face shift from hopeful recognition back to something more sinister. She had wondered if Dana would puke up the Seed, or even just be really happy to see her, but other than its shape, the creature that looked back at the succubus car lacked any sort of humanity.\n\nDana growled, her teeth reflecting the light ominously.\n\nShit. Lily turned off the flashlight and frowned when she saw that Dana's eyes were glowing. \"Looks like someone is having a bad reaction to something she ate.\"\n\nDana shifted and lifted off of the center console. Curious, Lily approached the side window to get a look inside. The interior had been clawed apart, and it wasn't until Dana was almost in the back seat that Lily saw what had kept her busy.\n\nIt was Tick Tock. The center console of the car had been ripped out and replaced with the mimic in the shape of a horse's saddle. There were a pair of phallic knobs in the middle that were slick with moisture, and a little hand popped out of the pommel to wave at Lily.\n\n\"What a brave little toaster,\" Lily muttered in appreciation. \"Looks like you two have been busy.\"\n\nDana growled again. Her breath fogged up the windows, and the light in her eyes intensified. She tried the handle to open the door, but Lily held it shut, suddenly wary of how hard the zombie was pushing. If she retained enough of her faculties to use the latch, was enough of her friend still in there to bring her back?\n\n\"Brought a snack for you, in case you're interested.\" Lily opened her mouth and summoned a glob of sperm onto her tongue. \"But I need you to play\u2014\"\n\nDana shoved the door hard enough that it popped open, but Lily managed to hold it shut. The zombie let out a shriek that resonated through the container, then pressed her face against the window. She stuck out her tongue and dragged it over the glass, as if trying to get at Lily.\n\nLily scowled at the forked tip of Dana's tongue. Her friend was trapped somewhere between zombie and dragon, and it would only get worse.\n\n\"The tongue thing is hot, but you've been fucking a car all week. Time to be a big girl and participate in some self-care.\"\n\nDana screeched and slammed her head against the window, causing the glass to crack.\n\n<center>\u26f5\u26f5\u26f5</center>\n\n\"A week? It's been a whole week?\" Dana tried to open her eyes, but they were too heavy. Lily's voice had been fading in and out, but she had heard that last part clearly. The darkness was suddenly heavy, as if trying to suffocate her.\n\nShe left you behind, the voice reminded her. They all leave you behind. Because you don't belong. You're dangerous.\n\n\"That's right,\" Dana whispered. \"She left me behind.\"\n\nThat's your future now. Everyone will die, leaving poor confused Dana behind.\n\n\"I just wanna sleep,\" she whimpered.\n\nHere, in the dark, the world was no longer scary. She didn't have to worry about being alive or dead, and could just be at peace with herself. There was no hunger, no missing Alex, and no questioning of her sanity.\n\nSleep, the voice told her. For just a moment, she recognized it as her own, and then let herself float some more.\n\n<center>\u26f5\u26f5\u26f5</center>\n\nLily saw Dana pause, her eyes twitching in her sockets as if lost in contemplation.\n\n\"That's right, it's been a week. Bit longer, actually. There were complications, and I'm sorry. I tried to come back for you, but I had to drop off the choir boy and his pet soldier, and by the time I made it out here, I couldn't find this fucking boat. Dana, I'm sorry.\"\n\nIt was hard admitting to herself that she had screwed up. Once Lily realized that she needed help, she had teleported home right away. However, Mike had been missing and the home was under attack by Amir and the society. Afraid to get captured while Dana's life was on the line, Lily had fled to Oregon to get Eulalie's help in tracking a ship in the middle of the ocean. The GPS unit had been programmed with the ship's predicted routes, and she had been scouring the waves for a couple of days now.\n\nStill, the last part of the plan had hinged on getting one final batch of Mike's sperm. Lily hoped that whatever the Dragon Seed had done so far could be undone with a fresh feeding. Once she was ready to chance another trip home, she had been grateful to discover that Mike had returned and succeeded in chasing off the society again. After a quick suck and swallow, she had hopped on the first plane she could find, desperate to get back.\n\nAnd now, she wondered if maybe she was too late. Had the Seed taken over Dana's mind? Or was it something else?\n\nDana's features hardened again, and she slammed her forehead against the window, causing the glass to spiderweb.\n\nLily glared at Dana and placed her hands against the glass. Dana had gone feral. \"Don't make me do this,\" she whispered.\n\nIn the silence that followed, she could hear the steady patter of rain on the walls of the container and the deck of the ship. Thunder rumbled overhead, and she was suddenly aware of the motion of the ship. It was likely that the seas were becoming violent, and the container suddenly felt so tiny.\n\nDana let out a loud cry and launched herself forward into the front of the car. Lily blocked her exit there, but watched in amazement as Dana threw herself through the front windshield of the car. The zombie tumbled across the hood and landed on all fours with a loud hiss.\n\n\"Fuck me in the ass,\" she muttered as Dana lunged and tackled her to the ground. They rolled across the floor in a tangle of teeth and nails before Lily was able to pull Dana into a chokehold and stand. Dana threw herself backward, smashing Lily into the wall of the container hard enough that she lost her grip.\n\nDetermined, she wrapped her tail around Dana's arm before she could flee.\n\nDana grabbed onto the tail with her free hand and swung Lily through the air. The succubus fought to escape, but was smashed into the hood of the car hard enough that it caved in.\n\n\"Oh, you're being a huge bitch right now,\" Lily yelled, then summoned razor-sharp talons. The more they fought, the stronger Dana grew. Was it the seed that drove this surge in strength? Or the hunger of a desperate zombie?\n\nDana jumped onto the hood to choke Lily, but Lily turned to smoke just long enough to move behind her. It was going to be a suplex, but Dana jumped backwards, slamming them both into the door of the container.\n\nThe rope snapped, and the door swung open. They tumbled onto the wet deck of the ship and slid. The rain was coming down in sheets now, and Lily lost her hold on Dana again.\n\nDana, now naked on the deck, let out a howl of delight, then raised her face to the sky. The dark marks on her arms were glowing now, and she ran her fingers through her hair. She paused during this act and sniffed the air like a wolf on the prowl. She turned her attention toward the bridge of the ship and snarled, drool dripping from her mouth.\n\n\"Oh, I'll be damned if I let you do that to yourself.\" Lily got her footing. She had never spent much time on boats, and hated how slippery they could be. She unfurled her wings and used them with her tail to keep her balance. \"If I have to carry your ass to a deserted island just to beat it some more, I will.\"\n\nDana sprinted toward the bridge, but Lily launched herself into the air to catch her.\n\n<center>\u26f5\u26f5\u26f5</center>\n\nThere was a loud thud, and the sound of screaming. It sounded like Lily, but it was so hard to tell. When Dana opened her eyes again, all she saw was darkness in every direction.\n\nThere is nothing but pain if you go back, the voice warned her. You're safe in here. Out there, you will have to confront everything.\n\n\"I deserve this,\" she replied. \"Because of what I did.\" Suddenly, the darkness was gone, and she could see herself in the hallway full of blood. Her hands were covered in it, and she could taste it in her mouth.\n\n\"Eat,\" Alex said, then held up a piece of flesh. \"Every bite takes you further away from me.\"\n\n\"No!\" Dana tried to push the meat away, but shoved it into her mouth instead. \"Alex, I don't understand!\"\n\nAlex laughed, then vanished. She reappeared further down the hallway, and when Dana tried to chase her, she receded into an infinite void.\n\nYou can't catch her, the voice reminded her. Alex no longer wants you, remember? You eat the flesh of the living. You've destroyed your body and your morals. You fuck demons and eat sperm. You've become something she could never accept. You've become something that even you cannot accept.\n\n\"I didn't have a choice!\" Dana watched the hallway turn black. The air became so thick that she felt like she was back in the Berkeley Pit again, surrounded by poisonous water.\n\nIf you really felt that way, then why are you here?\n\nDana screamed. Nothing but bubbles came out.\n\n<center>\u26f5\u26f5\u26f5</center>\n\nLily had Dana pinned against a container now and tried to break her legs with her tail. Unfortunately, the bones realigned shortly after breaking, and Dana had thrown a haymaker that had caused the world to spin and go black.\n\nDon't fall asleep, don't fall asleep, Lily begged. She seemed to be free of the Dreamscape, but if Dana hurt her badly enough, would she slip away while her body put itself back together? What would happen to Dana?\n\nDana stood over Lily now and was shaking her like a dog with its prey. She even tried to bite off Lily's nose, but Lily used her horns to deflect the attack. She felt bad goring Dana in the cheek, but the macabre wound stitched itself shut before much blood could be spilled.\n\nHow long could she keep this up? The rain was starting to sizzle when it landed on Dana, and Lily wondered if Dana would start breathing fire. The Seed had soaked up all that onerous magic from Tristan's deeds, and now had somewhere to put it.\n\nShrieking in rage, Lily struck Dana in the throat and then used her tail to knock her back. She turned to smoke and threw herself across the deck, reappearing just before contact. They collided with a container and dented one of the support bars.\n\n\"Dana, please,\" Lily begged.\n\nDana punched Lily in the face hard enough to snap her head backward. The world went dark again. Lily wrapped her tail around Dana's neck and squeezed, knowing it would have no effect.\n\nBut she would be damned if she ever let go.\n\nDana punched Lily in the chest and then slashed her face with dark talons. Lily said nothing as they knocked each other across the ship. The rough waves caused them to bounce around as if on some giant pinball table. This was a fight of attrition, which the zombie was sure to win. At some point, would Dana start growing scales? Maybe even wings?\n\nAt what point would she be more dragon than human?\n\n\"Is this what you really want?\" Lily asked her as they smashed into a dark green container. The rain was steaming off of her skin as she allowed hellfire to roar through her veins. \"Do you want to become a monster like me?\"\n\n\"I'm already a monster!\" Dana screamed, then grabbed onto Lily's horns and smashed her face onto the deck. This caused her tail to slip free and the world began to fade.\n\nDana froze, her eyes going distant. Her lips were moving, but no sound came out.\n\nOne last trick, Lily thought, then dispelled her wings, tail and horns. Her skin darkened and her hair shrank, tightening into thick cornrows. If I can't reach her...\n\nThen maybe Alex could.\n\n<center>\u26f5\u26f5\u26f5</center>\n\nThat's right, admit it. Admit you're a monster!\n\n\"I don't want to be... monster,\" Dana whimpered. The liquid slurred her words, and she tried to swim. With no visual reference, she decided to swim up. She wasn't even sure if she was moving, because her limbs were mostly numb.\n\nBut you are. A sick, disgusting thing that feeds on the living.\n\n\"That's not true.\"\n\nIt is. The voice was louder now, and Dana could see something shiny in the distance. She kicked her legs, grateful that she could feel them again. You're no better than Lily. She's a literal demon from hell, how much worse can you get!\n\nDana stopped kicking, suddenly content to float in the dark.\n\nShe recognizes herself in you. If not for what happened, you wouldn't even associate with her. And how many times have you lusted for her? It's disgusting. You don't even love her. Every time you crawled into bed with her, you were shitting all over Alex.\n\nDoubt creased her brow, and she looked up at the distant object.\n\n\"Alex would understand.\"\n\nShe would be devastated.\n\n\"Would she?\"\n\nKnowing that you willingly touched another woman? Or worse, ate a guy's baby batter. What's next, are you going to suck his dick? Fuck him? The voice was sending waves through the fluid that pushed Dana back. What would Alex say? How would she act?\n\n\"I don't know.\" But in the back of her mind, she wondered what would happen if she needed to feed and Lily wasn't there. What other options would she have? How would she judge herself?\n\nI think you know. The voice spoke with glee, and Dana felt the darkness swallowing her up once again. She would see you for what you've become. You've betrayed your love for her and your own identity. While you were locked in that box, all you could do was cry out in misery as your mind shattered.\n\n\"Who are you?\" she asked.\n\nThe voice didn't answer.\n\nDana swam toward the light. As she moved closer, she saw that it was a mirror floating in the void. It had intricate edges that looked to be carved from a single piece of wood, and she steadied herself by grabbing the frame. Her reflection regarded her with scorn, a living version of herself wearing the Dragon's Seed around her neck.\n\n\"You're me?\" Puzzled, Dana tapped on the mirror.\n\nHer reflection scowled. I'm more you than even you are.\n\n\"How?\"\n\nI'm what you used to be. Her reflection sneered. Not that I'll ever get a chance to be me again! How are we supposed to live with ourselves, after everything you've done? This stupid little trip has been a disaster, and all you've accomplished is exactly what you were afraid of. This time, her doppelganger's lip quivered. You became the one thing you promised you wouldn't.\n\nDana looked down at the pendant. It was glowing, casting an eerie light into the void.\n\n\"Tristan,\" she muttered. How much of why she was here was because of the Seed? Was it controlling her thoughts? Magnifying her fears? She couldn't think, the void was pressing against her so hard.\n\nLook at you! Her doppelganger clawed at the air, and suddenly the mirror functioned normally. Dana saw that she was naked, and her features were distorted. A bony ridge had risen in the middle of her forehead, and she was covered in blood. Whose blood was it? Look at what you've made us into!",
        "\"No!\" Dana let out a cry and put her face in her monstrous hands. Her reflection was right, she had fallen so far from who she used to be. How could she ever manage to climb back out? How could she ever be worthy of Alex again?\n\nYou're finally getting it. The world is nothing but pain, and has been for a while. Why not stay in here with me and float? Her reflection grinned. There's peace in here, we don't have to worry about what's going on out there.\n\n\"I...\" Dana was about to agree when a third figure appeared in the mirror.\n\nIt was Alex.\n\n\"Heya, Sparks.\" Alex smiled and the world came to a stop.\n\nThis was how it had always been with Alex. The entire universe could have been on fire, but as long as they had each other, it wouldn't have mattered. Without Alex, her world had come crashing down, and there had been nobody to help her pick up the pieces.\n\nForget about her, snapped the doppelganger. She is just a memory.\n\n\"No.\" Dana looked from Alex to the doppelganger. \"How can you even say that? She goes far beyond a memory.\"\n\nBut she's gone! The doppelganger pointed at Alex accusingly. She died, and she isn't coming back! And we are never going to the other side to see her\u2014because of you!\n\nDana swallowed the lump in her throat. \"Even if that's true, how can you just choose to forget about her? What purpose does that even serve?\"\n\nBecause I miss her! The doppelganger had tears streaming down her face now. I miss her and there isn't a damn thing we can do to fix it! Don't you understand? We lost! We will never be alive again!\n\nAlex said nothing. The void suddenly felt like a dream about to crumble, and even Dana knew that what she was looking at wasn't the real Alex. But why was she even here? What had triggered this?\n\nGo away! The doppelganger tried to shove Alex into the darkness. Don't you understand how painful it is to even look at you?\n\nAlex sidestepped the doppelganger and pressed her hands to the glass. When Dana's eyes met hers, all she did was nod knowingly.\n\nThis Alex wasn't real, but Dana knew what she would have said if she had been.\n\nThe doppelganger tried to pull Alex away from the mirror. Dana stepped through the glass as if it wasn't there and grabbed her clone by the wrists.\n\n\"I'm sorry,\" she said. \"I'm sorry for everything. But I can't live the rest of my life trying to be who I was. I can't be you anymore. It just isn't possible, it's too complicated.\"\n\nPanic crossed the doppelganger's face. Of course. you can't be me again. You're not even alive!\n\n\"And neither are you.\" Dana embraced her former self. \"You stopped living the moment that Alex did.\"\n\nHer former self sobbed uncontrollably as Dana held her tight. The world around them shimmered, but she wasn't ready to go just yet. This entire trip she had been avoiding the awful truth about her situation. It was very likely that she would never be the same again, no matter what happened.\n\nAnd she would have to accept it. If she didn't, she would continue to get lost trying to chase who she used to be. She didn't want to spend the rest of eternity trying to be that heart-broken college dropout, not when she needed to spend so much time figuring out who she was right now.\n\nWhen the moment was right, she reached up and ripped the Dragon Seed away and tossed it into the void. In the darkness, she heard the roaring of a very angry dragon.\n\n<center>\u26f5\u26f5\u26f5</center>\n\nDana's mouth opened and closed like a fish out of water, her eyes settling on Lily in Alex's body. The freezing rain made her look like a drowned rat, and recognition filled her eyes.\n\n\"Heya, Sparks.\" Lily reached up and touched Dana's cheek. She didn't dare say anything else, afraid to break the spell.\n\nThey sat that way in the rain for several minutes, and Lily wondered if she would be fast enough to rip a hole in Dana before she could fight back.\n\n\"Alex.\" Dana's voice was little more than a whisper, and when she blinked, her eyes went from red to blue. There was a sudden recognition in her eyes, and she winced. \"Lily. Help me.\"\n\n\"Always.\" Lily reverted to her original form and shoved her sharp nails into Dana's belly. Dana's eyes flickered back and forth from red to blue, but she held still as Lily searched.\n\nWhen Lily pulled the Dragon Seed free of Dana's gut, they were both soaked in blood. Like a smoldering coal, the Seed steamed in the rain of the storm, its pearlescent surface covered in mottled black smudges.\n\nDana let out a loud growl, but was cut off when Lily kissed her. Mike's semen pumped through the hole in her tongue into Dana's mouth. She resisted at first, then wrapped her arms around Lily's neck and slurped greedily.\n\nWhen they parted, Dana let out a gasp and covered her face with her hands. The ridge on her forehead was already smoothing out, and when she revealed her face, her eyes were no longer bloodshot.\n\n\"More,\" she begged, and Lily kissed her again. The Seed pulsated in her hand, and Lily realized that it would only be a matter of time before it found a way to call out to her too. She helped Dana stand and the two of them wandered the deck.\n\n\"Lily,\" Dana began, then looked around. \"Where the fuck are we?\"\n\n\"A ship,\" Lily told her. \"Do you remember anything?\"\n\n\"Um...\" Dana put a hand to her forehead. \"Only bits and pieces. I think...were we fighting?\"\n\n\"Like cats and dogs.\"\n\n\"Lily, I'm sorry. I lost myself, I don't know what happened.\"\n\n\"It doesn't change anything between us.\" Lily squeezed Dana's hand reassuringly. \"Don't worry about it.\"\n\n\"I remember being locked in the dark,\" Dana continued. \"Primal instincts, rage, lust. I was out of control, I felt like I couldn't keep up with my own body. Oh, god, I wrecked a car by fucking it!\"\n\n\"I don't judge you for the car, but keep the sky daddy talk to yourself.\" Lily found the original container and went inside. \"Hey, toaster! I need you to hold onto something for me.\"\n\nThere was a loud pop and the mimic had become a backpack once again. Lily stuffed the Seed inside and zipped it shut.\n\n\"Don't give that to anybody until we get home, okay? Especially not Dana.\"\n\nThe mimic made a zipping sound that could have been in agreement. Lily turned her attention back on Dana. She slumped against the side of the container.\n\n\"I know I don't have any right to ask, but...can you help me?\" She looked up at Lily. \"I'm just...so...\"\n\n\"Horny, right?\" Lily laughed.\n\n\"Ugh. Yeah.\" Dana looked away.\n\n\"You know what?\" Lily slid down next to her. \"It's been a long week. I won't even make you beg.\"\n\n\"I thought you loved it when I begged?\"\n\nLily laughed. \"I love it when you do lots of things.\" She touched Dana's cheek, then ran her hand down Dana's body and stroked her thigh. \"Any requests? I'll do anything. Be anyone. You just have to ask.\"\n\nDana let out a laugh. \"Against my better judgement, I would like you to just be yourself.\"\n\nLily pressed herself into Dana while using her hand to spread Dana's legs. She let out a gasp when Lily nudged her clitoris with her thumb. They slid down the wall and onto the floor, and kissed each other as they took turns exploring each other's bodies. \n\nThey established a steady rhythm, taking turns fingering each other as they continued to kiss. Lily kept shifting her anatomy about just to tease Dana. Simple things like moving her clitoris, or changing the size of her breasts. She even gave herself three nipples on one breast that caused the zombie to laugh out loud before nibbling on each one of them.\n\nThough Dana came close to orgasm many times, she would push Lily away and reciprocate. Surprised that Dana wasn't eager to get off, Lily spread her legs wide and relaxed while Dana's tongue played along her labia. The sweet heat of Dana's mouth radiated through Lily, and she trembled when she came for the first time.\n\nDana was moaning constantly now, but continued her feast. Lily altered her body again and allowed pleasure to tear through her body at every flick of Dana's tongue. Dana had been fingering Lily this whole time, but was up to three fingers now. With the addition of another digit, Lily came again, and then went limp on the cool floor of the container.\n\n\"Someone's in a giving mood,\" she muttered just as Dana sat on her face.\n\n\"Maybe I should have made you beg,\" Dana replied, then tapped Lily's forehead. \"Horns, please.\"\n\n\"As you wish.\" Lily's horns curved slightly inward, and Dana grabbed them tightly. She gyrated her pussy on Lily's face, and Lily rewarded her by splitting her tongue in two. The upper tongue teased Dana's clitoris, but the lower tongue thickened and became a vibrating phallus that penetrated Dana's pussy.\n\nThis time, when the orgasms came, Dana was unable to hold back. She cried out, her voice reverberating inside of the container, but refused to let go of Lily's horns. Instead, she tightened her grip and squeezed her thighs so hard that Lily knew she could have cracked a human's skull in half.\n\nAfter another half an hour of frantic riding, Dana came one more time before going limp. Lily grabbed her by the hips and slid her down until the two of them were face to face. She was surprised when Dana kissed her again, and then nuzzled herself into Lily's shoulder.\n\nNeither of them said anything for several hours. The only sound they had was the passing storm and the creaking of the boat beneath them.\n\n\"I'm afraid of losing myself,\" Dana finally confessed in the darkness of the container. The storm had mostly passed by now, so the only other sound was the ship's engine and the slapping of the waves. \"After what happened in the Black Palace.\"\n\n\"That was the Seed's fault,\" Lily replied.\n\n\"Before that,\" Dana continued. \"After I ate what was left of those guys Tick Tock killed.\"\n\n\"The toaster killed someone?\"\n\n\"Lots of people.\"\n\nLily listened as Dana explained what had happened in the basement, then looked over at where the mimic sat with newfound admiration. She knew that Tick Tock was capable of eating someone, but a hallway massacre was above and beyond what she expected.\n\n\"Anyway, once he was done, I was hallucinating, and I saw Alex. She told me I should eat, so I did.\" Dana sighed and shifted in Lily's arms. \"And I know it was just my mind, I get it now. But the same thing happened after I ate the Dragon Seed. It was so easy to convince myself that what was happening was my own idea that I just went with it. I'm not even sure who I am anymore, and it feels like every decision I make takes me further from who I used to be.\"\n\nLily twisted Dana's hair around in her fingers while pondering her response. \"It doesn't do us any good to cling to the past,\" she said. \"Knowing who you were is important, but not nearly as important as knowing who you want to become. You need to give yourself a lot of leeway for the mistakes you're going to make, because it's possible you're going to be spinning your wheels on this for a very long time.\"\n\nDana shifted, then pressed her face into the crook of Lily's neck. \"But what if I do something unforgivable? What if I can't live with myself when all is said and done?\"\n\nLily stared into the darkness, her lips twisting into a grin.\n\n\"Nobody is beyond redemption, Sparks.\" She gave the zombie a squeeze. \"And I'll be there to kick your ass when you take it too far. Every damn time.\"\n\n<center>\u26f5\u26f5\u26f5</center>\n\nIt was almost a week before the ship made it to port. Dana was forever grateful that Lily had brought things to keep her occupied. The two of them spoke at length about many things over different card games (of which strip poker was always an option), and Lily had even brought an e-reader loaded with books along with a solar charger.\n\nThe car was a total loss, but still a better place to sit than on the cold metal floor of the container. When bored, the two of them would sometimes go digging through other containers to pass the time. Eventually they found one with a luxury SUV inside that became their new base of operations.\n\nLily filled Dana in on all that had happened at the house while they were gone. Apparently, Mike had been able to catch Lily up during her most recent feeding, and the tale of a pocket universe in the upstairs wardrobe was an interesting one. There were stories of magic rats, an evil fox demon, and apparently the society had gotten themselves blown up in a trap set by Mike inside a mirror universe. Lily had actually seen the blast from several miles away while flying over the city.\n\nDana would never have believed half of these things if she hadn't been tossed back in time by an elder god's wet dream (as Lily put it). Such was her world now.\n\nOnce they were close enough to the coast of California to receive a cell signal, Lily borrowed Dana's phone and made a couple of calls. The first one was to Eulalie and Velvet, to let them know that she had found Dana. The second one was to Mike.\n\nDana wasn't sure how to feel about Mike at this point. When she had left, it had been rather abrupt. He had been nothing but kind to her, so she wasn't certain how he would take her return. The conversation from this side didn't sound threatening, and if anything, she could hear relief in Mike's voice.\n\nAs for the magic they had collected, she had failed to get everything on her list. The Seed was the most important, so all she could do was hope that Ratu could find another solution to her problem. There was more than a little dread that the naga wouldn't be able to find one, and Dana thought back to the times she had been shot. Her brain had been so scrambled that her existence was nothing more than fragments of memories coupled with a few floating thoughts. What would it be like if she was destroyed completely? Would there be just enough of her left to realize that she was trapped in a horrifying state? Or would it be the blissful ignorance that came with complete annihilation?\n\nThere was no way of knowing, and she preferred to never find out.\n\nOnce back on land, Lily and Dana rented a car to get home. They took the scenic route, stopping only for gas and the occasional succubus snack. Dana got to see the Grand Canyon for the first time, a sight that should have filled her with wonder. Instead, it was only mildly interesting and unable to move her emotionally.\n\nYet another dead girl thing she would have to live with.\n\nThey were almost home when Lily asked if they could make a detour. In no hurry to end the trip, Dana had agreed. The GPS took her somewhere she was unfamiliar. When she looked over at Lily to ask about it, she saw that she had turned into a girl of maybe eight or nine.\n\n\"Dare I ask?\"\n\nLily stared forward for most of a block, then nodded. \"I want to see the building where the society was. I was in so much of a hurry to get back to you that I just kept on flying, but now that we're here, let's make one more stop.\"\n\n\"Do you think they're all dead?\"\n\n\"I don't.\" Lily turned her head to look at her. \"Hence the disguise.\"\n\n\"I'm not exactly inconspicuous myself,\" Dana replied. In response, Lily handed over a hat and a pair of oversized sunglasses.\n\nThe street was blocked off, so they parked the car and got out to walk. The building where the society had been located was fenced off with piles of rubble and fill dirt nearby. Dana's best guess was that the area was still being investigated, and she didn't dare get closer.\n\nLily held her hand as they circled the area, and there was no shortage of fellow onlookers. The building had been near a fancy business park. People were dropping by for a look while on a break. Circling overhead, a pair of drones watched the scene. They were unmarked, but looked expensive. She wouldn't mind getting the chance to mess with a drone someday. Perhaps now she would have the time.\n\nAfter a bit, Lily led Dana back to the car. Once they left the area, the succubus took a deep breath and inflated in her seat to her usual size.\n\n\"So. what do you think?\" asked Dana. \"There's no way they could have survived that.\"\n\n\"You would think so, but stranger things have happened.\" Lily stared out the passenger window, her forehead on the glass. \"Even if Amir was there, he survived. There's no telling what state he's in, but he's like the flu, that bastard always comes back.\"\n\n\"What of the others?\"\n\n\"Anyone in that building is likely to be gone, but it doesn't matter. They were just a symptom of the disease, and Amir will rebuild. I've seen so many members come and go, they're all just a blur of bastards at this point. I can't tell you how many times they would send me out to blackmail or torment someone. Seeing that crater in the ground was pretty cathartic, knowing that they got theirs in the end.\"\n\nDana understood. She had felt the same way when Daryl had died, grateful to know that the man who had ruined her life couldn't hurt her or anyone else ever again.\n\n\"Do you think there's a way for Amir to ever truly die?\" Dana asked.\n\nLily shrugged. \"He and I will probably be doing our dance for centuries yet. That's what happens when you get tied to someone, you never truly escape them. Even if he did die, the damage that has been done can never be changed. It's a painful truth, but acknowledging it is the first step toward healing.\"\n\n\"I'm digging insightful Lily,\" Dana told her. \"Who would have thought there was more to you than just a horny little devil?\"\n\n\"Eat my whole fucking ass.\" Lily sounded mad, but Dana could tell that she was grinning.\n\nSilence between the two of them made the last twenty minutes of the drive feel longer than they were. They drove by the pizza place where Dana had worked before dying. It was as busy as always. In a small detour of her own, Dana drove past her old apartment. The home was for sale, yet another sign that the world would keep moving on with or without her.\n\nWhen they parked the car outside of the Radley house, Dana let the car idle for a few minutes, while her thoughts tumbled around her head.\n\n\"Are we going in?\" Lily asked. \"I won't rush you. We can keep driving around, you know. Hell, we can go up to Canada for all I care, just keep driving until we reach snow.\"\n\n\"I just...it still feels weird, you know? I'm supposed to live here now, but I also don't have much of a choice.\"\n\n\"There's always a choice. It's just that some of them suck.\" Lily leaned back in her seat. \"And it's not going to be forever. You at least need to go in there and talk with Ratu.\"\n\n\"Yeah, I do.\" Dana put the car in park, then turned the key. When the car went silent, she looked over at Lily. \"Promise me something?\"\n\n\"Maybe.\" Lily arched an eyebrow. \"I never make promises before I hear them.\"\n\n\"Promise you won't ditch out on me. If you ever decide to just pack up and go, tell me first. Let me decide if I want to go with you.\"\n\n\"Only if you promise me the same. I'm going to leave from time to time, cause a girl's gotta eat. But I'll always come back to see you. You have my word.\"\n\n\"Thanks. Guess we should go inside and face the music.\"\n\n\"I do have a question, something that's been low-key bothering me,\" Lily said. \"When I put you in horny jail, how did you get into the car without breaking the windows? Wasn't it locked?\"\n\nDana reached behind her seat and patted the mimic, who was shaped like a large suitcase.\n\n\"Tick Tock opened it for me. Used those tiny little arms of his to undo the locks.\"\n\n\"What a clever little toaster. Always looking out for you.\"\n\nDana nodded. \"That makes two of you.\"\n\nLily gagged and made a barfing sound.\n\nThey got out of the car, and Dana reached into the back seat to pull out Tick Tock. As they walked up the front walkway, Dana marveled at the fact that the front of the house was now a different shape. Not only was the yard thick and lush with wild gardens, but the house now had a third story.",
        "There were centaurs, and many of them. The creatures milling about the yard looked at her, but kept about their business. They were doing work on the new garden, and many of them carried tools for pruning. Along the stone wall of the yard, a beast that looked like a dragon opened one eye to watch them.\n\n\"Jesus Christ,\" Dana whispered.\n\n\"Hey now,\" Lily warned. \"That's offensive.\"\n\nA woman sat slouched on the porch swing beneath furry blankets, her eyes on them as they approached. Dana had been expecting to see Cecilia, but didn't know who this was. However, when the woman stood, the blanket unfolded into three bushy tails that swished behind her. Large velvet ears unfolded above her hair, and her eyes narrowed.\n\n\"Who are you?\" the fox demon asked with a hint of warning in her voice.\n\n\"Settle down, Maid Marian, we live here.\" Lily stuck out her tongue. \"You should be a good girl and go tell Daddy that we're home.\"\n\nThe air had become cold, and icicles were forming on the ceiling of the porch when Abella the gargoyle leaned over the edge.\n\n\"It's okay, Yuki, they're allowed to be here.\" Abella looked at Dana and winked. \"Sorry for the chilly reception. Mike is visiting the centaurs, but he'll be back in a bit.\"\n\nYuki's cheeks turned red, and she looked down at the floor. Dana noticed that parts of the porch had frozen by her sandaled feet.\n\n\"My apologies,\" she told them, then moved back to the swing and sat. \"I'm a bit overprotective right now.\"\n\n\"It's okay, you're still a very good girl.\" Lily went to pat Yuki on the head, but she dodged away. \"Maybe I'll bring you a treat later.\"\n\n\"Just leave me alone,\" Yuki muttered. She pulled her feet up against her body and stared out into the yard.\n\nDana recognized that far-off gaze immediately. It was the same one she had worn for so long after Alex had died, the mask to let the world know that there simply wasn't enough energy left to do anything but exist.\n\n\"My name is Dana,\" she said, then held out her hand. \"The bitch next to me is Lily.\"\n\nYuki looked at Dana, then took her hand. While they were shaking hands, Yuki's nose wrinkle up.\n\n\"You smell...unwell,\" she said, her features suspicious.\n\n\"Oh, she's the very opposite of healthy,\" Lily chimed in. \"She's one-hundred-percent dead.\"\n\nYuki frowned. \"You're dead?\"\n\n\"Afraid so,\" Dana replied. \"But I'm feeling much better now.\"\n\nThis made Yuki grin. Dana grabbed Tick Tock by the handle and carried the mimic inside. She paused at the doorway to watch a squad of rats carrying small bits of lumber up the stairs. Somewhere above, Tink the goblin could be heard shouting instructions punctuated with vulgarities of every combination.\n\n\"How long were we gone?\" Dana whispered to Lily.\n\n\"Maybe not long enough,\" Lily replied. \"Welcome back to Radley's home for broken furniture. Let's go see Ratu. I'm ready to be rid of our collection.\"\n\nThe journey to the Labyrinth took them most of an hour. Dana had Tick Tock become a backpack for ease of travel, and by the time they sat in the center of the Labyrinth, Ratu was waiting for them.\n\nThey laid out the three objects they had recovered with Lily handing over the Dragon Seed. Ratu eyed it in appreciation, then used a pair of tongs to take it from the succubus. She held it up to the light, then placed it in a silken pouch which disappeared in her robes.\n\n\"That's one I think I'll lock away,\" she said. \"It should be dormant, but even I can feel that it's calling out for a host.\"\n\n\"Yeah, well the guy we took it from found a shortcut to empower it.\" Dana explained what had happened with Tristan, and Ratu listened with great interest.\n\n\"Magic doesn't like shortcuts,\" she explained once Dana was finished. \"Though his metamorphosis was quick, it came at the cost of his humanity. It will be some time before I can break this down without that malevolent energy carrying over.\"\n\n\"Well, we're not in a hurry. We couldn't find the other things you wanted.\" She felt like a little kid telling the teacher that she couldn't complete an assignment. The urge to make a bunch of excuses rose, but was easily suppressed.\n\n\"No matter. This will give me time to study what you have brought, and perhaps devise another method.\" Ratu smiled politely, then examined the bag of marbles and the flask. \"Guess you'll have to stick around?\"\n\nWith a smile, Dana looked at Lily, then nodded. \"Planning on it.\"\n\nInstead of taking the traditional shortcut through the reflecting pool at the entrance of the Labyrinth, Dana and Lily were led by a couple of rats to a portal they had made for the naga which didn't involve getting wet. They found themselves stepping out of a small closet by the back door of the house as the portal shut behind them.\n\n\"Oh. He's back.\" Lily looked toward the front of the home. \"I can feel him out there.\"\n\n\"Should we go say hi?\" Dana asked. She figured she owed him at least that. Or maybe even a sorry about running out without saying anything, and thanks for letting me live here.\n\n\"You should. I'll tell him hi in my own way later.\" With that, Lily vanished in a puff of noxious smoke.\n\n\"Thanks,\" Dana mumbled, then took Tick Tock off her back. \"You should probably go find somewhere to hang out, no need for you to see this.\"\n\nThe mimic remained where she set it. She walked to the front door and let herself out. The sun was setting now, and Mike was sitting on the porch swing, an opened bottle of beer by his feet. His hair was longer than she remembered, and he smelled like a field of flowers after a storm. He looked her way and jumped to his feet when their eyes met.\n\n\"Oh, Dana, hi, uh, shit.\" He had spilt his beer with his foot, and he knelt to pick it up. \"I was just sitting out here for a bit. Got back a few minutes ago. Yuki told me that you were back. I didn't want to bother you or anything.\"\n\n\"Can I sit with you?\" Her words had a calming effect on him and he sat down on the swing with a sigh. She sat next to him, her eyes on the activity out in the yard.\n\n\"So...I see the house has changed a bit,\" she said.\n\nHe nodded. \"We've got centaurs now. A whole village is being migrated into the greenhouse, it's rather amazing. Cecilia is off on a trip of her own. I hope she comes back soon, I miss her.\"\n\n\"Yeah.\"\n\n\"So...did you find what you needed? To undo your curse?\"\n\n\"No.\"\n\n\"\"Damn. I'm really sorry.\" There was a slight hitch in his voice, and he looked away for a moment. \"I was really hoping you'd find what you were looking for.\"\n\n\"The real treasure was all the friends I made along the way,\" she muttered with a grin. He looked at her in puzzlement, so she just shook her head. \"Maybe next time. I'm sorry about bailing on you, by the way. I guess we should have talked about it first.\"\n\n\"Yeah, well...\" He chuckled, then scratched his chin. \"You were murdered last month. You've got your own issues, I guess. Lily has no excuses and doesn't need them. I'm just grateful that you kept her out of trouble.\"\n\n\"How do you know it wasn't the other way around?\"\n\n\"Touch\u00e9.\" He laughed. \"She came back a bit ago and refused to tell me what happened. Said it was your story to tell. If you've got nothing else going on, I'd love to hear about it.\"\n\n\"You're really not mad that I left?\"\n\n\"Nope. It's your life.\" He blanched, then waved his hands apologetically. \"Sorry, is that the wrong thing to say? Should I call it your unlife? Afterlife? Undeath? Shit.\"\n\nShe opened her mouth to say something, but the front door banged open and a dark figure in a robe appeared. He stood nearly seven feet tall, and his cowl had been pulled back to reveal a polished skull with fiery orbs inside of the eye sockets.\n\n\"Mike Radley, have you seen the Earl Grey? I fear that someone may have misplaced it.\" The grim reaper spoke with a British accent, and was holding a teacup in one hand.\n\n\"Yeah, I got some for you in the mail this morning. It's in the bottom drawer of the office.\"\n\n\"Thank you. I hope you enjoy your evening.\" With that, Death walked back into the house, letting the door slam shut behind him.\n\n\"Was that who I thought it was?\" Dana asked, her eyes wide.\n\nMike turned to face her. \"You can see him? That's a long story of my own. Care to swap?\"\n\nHer trip had been filled with thousands of moments, each one burned indelibly into her memory. What had started as a simple road trip had turned into battles, new friendships, and even a fight with a naked dragon-man. Now that she sat across from Mike, she realized that he wasn't some stigma looming over her life, but someone just like her. He was on a strange, wonderful journey of his own, and would do anything in his power to help her.\n\n\"Okay, maybe just the highlights.\" She twisted to face him properly, and they took turns regaling each other with their tales as the sun set. Though she kept her promise not to mention the arachne, they swapped stories until the home behind them was dark and Mike was fighting sleep. With a promise to finish catching up in the morning, he left her behind on the porch.\n\nShe sat on the swing and watched as a quartet of fairies chased each other through the small maze that was growing in the front yard, while listening to the house as it creaked in the wind. It wasn't the home she had ever imagined living in, but it was full of people who would support her, despite the fact that she had become the prodigal daughter.\n\nWhen she went inside, the house was silent as she walked through the rooms only to find herself out back. Naia's fountain burbled quietly, and she half expected the nymph to appear and say hello. Not wanting to have a conversation right now, she kept going to the garage and let herself in the side door.\n\nThe garage was a mess.\n\nIn Dana's absence, it looked like Tink had started multiple projects but hadn't bothered cleaning any of them up. She would have been annoyed if not for the fact that it gave her something to do. The early morning hours passed as she dutifully picked up stray tools and organized them onto the wall of the garage. It reminded her of her apartment, a place where she could work on her motorcycle or a project from school.\n\nWhile cleaning, she discovered a small staircase in the back of the garage that led to an old-style oil-changing pit. It had been sealed over, which turned the space into a small room. It was even messier than above, and was home to more tools and a bunch of half-used supplies for home repairs.\n\nAs she cleaned it up, the thought occurred to her that maybe this could be a place of her own. It was away from the house and would give her privacy. It was also connected to the garage, which would give her plenty of space for her own projects She wasn't sure yet what would occupy her time, but certainly a house as old as this one would need some work done.\n\nThe room was coming together. She set Tick Tock down in the corner and had an idea that felt dumb, but needed to be done.\n\n\"Hey, can you become a mirror?\" she asked.\n\nTick Tock obliged, and she stood in front of a vanity with a mirror set deep in a braided wooden frame. Up top, the masks of tragedy and comedy had been carved in the wood. She found it oddly fitting.\n\nTaking a deep breath, she met her reflection's stare. She wondered how long she could stand here, perfectly still, judging herself.\n\n\"I forgive you,\" she said. \"And Alex would, too.\"\n\nHer reflection didn't answer, but Dana did feel better.\n\nAs morning light streamed through the garage door windows, Dana stepped outside to shake the dirt out of some old tarps before folding them up. Naia sat on the central column of her fountain, one leg crossed over the other.\n\n\"Hey there, stranger.\" Naia's voice reminded her of the tinkling of bells. \"Looks like you've been busy.\"\n\n\"Yeah, just cleaning up and making some space for myself.\" She gave the tarp a shake and then folded it. \"Gotta have a place to call my own.\"\n\n\"Does this mean you're sticking around?\" Naia's tone was hopeful, and Dana looked up at the house. It could use a few coats of paint. Up on the roof were some bad shingles that could be repaired, and there was even a spot on one of the turrets that looked like a gutter could be installed.\n\nThere was plenty of work that could be done here, and in return the house had plenty of love to give. There would be days that Dana felt like she didn't fit in, and days that she questioned herself. But the people who lived inside had been kind to her, and she knew that they would do anything they could to help her out.\n\n\"Guess I am.\" When Dana smiled at Naia, it wasn't from happiness. It was from the sense of satisfaction that came with making an overdue decision, one that she was grateful to make. She had run from this place once, but had found a bit of herself in the process. There would be many long days and nights ahead, and she would do her best to fill the restless hours with whatever she could find.\n\nBut most important of all, she would try to fill some of those hours with others. If she could make friends with a bitchy demon, why not a goblin, or a centaur? Or maybe even a rat? There was plenty at the Radley House worth exploring, all she had to do was make the effort.\n\n\"I'm so happy to hear that!\" Naia hopped up and down, causing the fountain to overflow. \"I want to hear all about your trip when you get a chance!\"\n\nDana set down the tarp she was holding, then walked over and sat on the edge of the fountain. Naia leaned forward, her chin in her hands and her body supported by a steady stream of water.\n\n\"How about now?\" She twisted around so that her feet were in the fountain. The water was cold, but she liked how it swirled around her feet. \"After all, I've got nothing but time.\"\n\n<center>\u26f5\u26f5\u26f5</center>\n\nLily sat on the swing of the front porch, her wary gaze on the street. In the early light of morning, people jogged past the front of the house. She found it to be one of the most ridiculous pastimes ever conceived by man. However, it wasn't like humans had any other reason to exercise, so she supposed at least the cause was noble. If it helped keep leggings in style, she was all for it.\n\nThe door opened and Mike stepped out with a pair of coffee mugs. He handed her one of the cups as he sat next to her.\n\n\"You know I don't need to drink this shit,\" she told him, but took it anyway.\n\n\"I'm aware.\" He sipped at his, then let out a contented sigh. \"But I wanted to have one on hand just in case.\"\n\nShe prepared a snippy retort, then decided against it and sipped her coffee instead. \"Is that cinnamon mocha?\"\n\n\"Just a bit. We're going through a ton of coffee now, especially Beth. She drinks it like it's water.\"\n\n\"I bet. That girl needs her energy. I hear she's been tackling some huge tasks recently.\"\n\n\"Really? Do you think she needs help?\"\n\nThe question had Lily snort so hard that hot coffee sprayed out her nose. She laughed, then wiped the liquid off her blouse. \"Shit, Romeo, I can't believe you're that oblivious.\"\n\n\"Oh, I'm not.\" A stupid grin appeared. \"I've heard she's really taken the bull by its horns.\"\n\n\"Please don't, no puns. I'm leaving if you're going to crack stupid jokes. You got me good, I'll let you have this one.\"\n\n\"You're so gracious.\" He sat back and looked across the yard. \"I'm happy to have you back, by the way.\"\n\nIt was so direct that Lily froze, and she felt hot inside. \"I think you're just happy to have that hot piece of college ass around.\"\n\n\"Hardly. I'm surrounded by amazing asses already.\" When he looked over at her, it caused his hair to frame his face perfectly, and his deep brown eyes drew her in. \"But speaking of Dana, thanks for looking out for her and making sure she came back safely. I saw her out back. She's been cleaning out the garage. Hope that means she's staying for good this time.\"\n\n\"You weren't worried about me?\"\n\nHe shrugged. \"Maybe I was. What of it? You're probably the strongest person I know. I don't know what could possibly hurt you. Besides, you would just give me shit if I admitted it.\"\n\nLily wasn't so sure about that. After spending so much time with Mike's soul, she had become comfortable, and was now feeling things that she had thought she could never feel again. It had been the same way, once upon a time, with Aladdin. She wondered now if Aladdin had ever been in love with her, or if it had only been her station. Power had been his Achilles heel, and it had caused them both to fall from grace.\n\n\"You're right, I would give you shit,\" she said, breaking the silence. \"And you're awfully direct this morning. You get sucked off before coming down here?\"\n\nHe blushed and looked away. She grinned, happy to have finally gotten a reaction out of him.\n\n\"Why, you hungry?\" he asked, then sipped some more coffee. \"Or do you need to feed your buddy, momma-bird style?\"\n\n\"Ooh, you've gotten so spicy while I've been gone.\" She slid a hand along his thigh. \"Mommy like. Maybe I am hungry, what do ya say?\" His cock was stiffening in his pants, and she gave it a squeeze.\n\nThe front door opened and Beth stepped outside. She was in an oversized shirt and leggings, and her hair had fallen in a tangle around her shoulders. Mike stood as if burned, and his whole face became red like a beet.\n\n\"Morning,\" Beth said. \"Sorry, I thought maybe Cecilia was back.\"\n\n\"Nah, just Romeo and I catching up.\" Lily stood and pinched Mike's ass, which caused him to jump. If there was one person in the house that still made him nervous, it was Beth. \"Talking dirty to each other, you know?\"\n\n\"I'm sure.\" Beth laughed. \"You sticking around, or are you off on another adventure?\"\n\n\"You know what?\" Lily walked by Mike and ran her hand across his chest before pinching his nipple through his shirt. He squeaked in protest, and she patted him on the cheek. Her feelings for him were complicated, but even just being with him made her feel like she could be a better person. She had a lot to atone for, to make her feel worthy of actually being loved. There was no better place to do it than here among those who accepted her for who she was. \"I think there's plenty of Hell for me to raise around the ol' homestead.\"\n\n\"Glad to hear it. Welcome home,\" Beth said, then opened the door to go back inside.\n\nWhen it clicked shut, Lily moved over to Mike and pressed herself into his arms. It caught him off guard, but he wrapped his arms around her and she felt the entire world collapse in on itself.\n\n\"It's good to be home,\" she muttered in Chinese, knowing that Mike wouldn't understand.\n\n\"What did you say?\" he asked.\n\n\"Just talking to myself,\" she told him. Maybe someday she could be direct about how she felt, but she would wait for now. Mike was still at the beginning of his journey, and she worried that something would eventually come along to turn him into a Tristan or Amir. Her already fragile heart wouldn't be able to take it, so she would guard it for as long as necessary.\n\n\"That's my Lily,\" he said, then ran his hand through her hair.\n\nThough her feet remained on the ground, she felt her heart soar.\n\n<center>\u26f5\u26f5\u26f5</center>\n\nThe window of Cyrus' bedroom looked out over the gardens. Down below, a small cluster of mages were practicing with their wands by pushing a piece of paper at each other through the air. It was a simple spell, but the exercise was actually rather complex. It was a means to instruct the men and women of the Order in how to control the flow of magic through their bodies. It was one thing to lose control of a spell, but another entirely for the spell to gain control over the caster.\n\nHe remembered one time about a decade back when an eager acolyte had been doing the same exercise and blown off his own hand. The magic had turned inward, then flayed his flesh like a blender, spilling blood across the training grounds. It was a memory he would rather forget, but far from the worst he had experienced.",
        "A similar wand to the ones being wielded sat on his desk. In an hour, it would be his turn to gather some of the younger acolytes and instruct them on the same exercise. The wand was carved of yew with ivory inlays, and weighed no more than a few ounces. Yet when he picked it up, it felt like it weighed a thousand pounds.\n\nThe Council had spent most of the previous month investigating him. While Cyrus was no stranger to the procedure itself, it had been an interesting process to endure. The Council was absolutely certain that a number of details had been missed. Cyrus had sat in a circle of runes that lit up in a certain order depending on his degree of honesty. It was apparent that his answers had not fully satisfied the Council, and he did not blame them.\n\nThe incident at the Black Palace was shrouded in more than a bit of mystery. The cleaning crew had been unable to salvage much from the wreckage except for ash and the occasional item leftover from his squad. Amida himself was the only one with a body to bury, as the rest had either been incinerated or tossed into the ocean as shark bait.\n\nCyrus attended Amida's service while sitting just behind Tasia. The knight remained motionless until the final consecration was completed, a ritual meant to ensure that Amida's soul had properly moved on.\n\nThe knight had had it especially rough. With several fractures in her ribs, it took longer than usual for her to heal, but that wasn't the main problem. The experience of being so casually dominated by Tristan had shattered her confidence. Though her sword had been found sticking out of the dragon's skull, nobody was certain how it had gotten there.\n\n\"Do you know where the succubus went?\"\n\nCyrus could hear his superior's voice clear as a bell, and once more pictured the dark room they had put him in. Surrounded only by candles, he had been unable to see who was speaking, and had shaken his head.\n\nHe had no idea what had happened after being knocked unconscious. The runes around him had flickered, but he was telling the truth. Lily's final destination or master was a mystery, and though they had cross-examined him until he was exhausted, he had been unable to give them any clues.\n\nBut what had bothered them the most was that the succubus had let him go.\n\nThere was a knock at the door, and a young mage walked in. Behind him, Cyrus could see his guards, both a knight and a mage, standing against the far wall. The Council was convinced that some deal had been made with the succubus, despite Cyrus' assurances that no such transaction had taken place. They simply could not believe that such a wicked creature had granted him clemency, and the teaching position they had offered him was a compromise. As long as he was part of the Order, he would be watched, and the best place to do it was here.\n\n\"Master Cyrus?\" The mage was a young woman with auburn hair and green eyes. He recognized her from the intel branch.\n\n\"Please.\" He waved his hand at a nearby table and she took a seat. In her hands was a folder, which she set down in front of her. He joined her at the table, then crossed his hands in his lap. \"May I offer you some tea?\"\n\n\"No, thank you,\" she told him, then removed a report from the folder. \"There was an incident in the States recently, and I was hoping you could take a look at some documents for me.\"\n\n\"Hmm.\" He took the papers, which consisted of photographs and dossiers on several men and women. \"What am I looking at?\" he asked.\n\n\"We're not entirely sure. These men and women were a known cluster of magic users, but despite decades of surveillance, we never had reason to move on them. Until now, perhaps.\" She leaned over the table and slid one of the photographs out. It was a satellite photo of a giant crater in the middle of a business park. \"This happened a few days ago. The media is running with a gas leak, but we know better. According to our investigators on site, it looks more like an implosion.\"\n\n\"I see.\"\n\nHe found the photographs interesting, because he could see in some places that it looked like someone had used a giant cosmic spoon to scoop out a section of reality. This would involve another plane of existence, or at least a dimensional shift. His mind flicked back to Dana's backpack warping and distorting in the darkness. Watching it sprout legs and crawl down the hallway on splintered limbs to shred and devour their attackers in a bloody frenzy had easily been one of the most terrifying things he had ever seen. Since the Order had no reason to ask him about the presence of a mimic, he had decided not to bring it up. It was a simple act of defiance, but serious enough that there would be major repercussions if it were ever discovered.\n\nHe glanced at the young mage before speaking. \"If you look here, the lines are clean around the blast site. The concrete on this section of street should have cracked in a blast, but it's too smooth. There is also debris in the parking lot of this building, which confirms an explosion, but there should be far more of this building to be found.\"\n\n\"We were wondering if you had any ideas on what could have caused it. There are a couple of theories, but rumor has it that you've worked a similar case.\"\n\nHe studied the pictures for a few minutes, then cycled through the dossiers. \"Did any of these people survive?\" he asked.\n\n\"Not to our knowledge. Their identities were all faked, so it's hard to know if someone walked away from it. A simple web search on the group itself revealed that someone hacked into their website and gave them all vulgar names, but they shut the site down later. We've been watching the area since the blast in the hopes that one of them comes back. The Council would like to bring them in for questioning.\"\n\nHe nodded. Whatever had happened here was of potential concern. \"This almost looks like a dimensional collapse, which would be an implosion right after an explosion. But that would be one hell of an explosion to leave a crater this big.\"\n\n\"We have records of the blast in audio format. Nearby cameras caught the sound. It's loud enough that this pit should be a lot bigger.\" She shook her head. \"It may be something new, and there's concern that maybe this may have been a summoning gone wrong.\"\n\n\"I see. Well, to my knowledge, summonings that go wrong can have a blast this size, but the dimensional collapse wouldn't be so smooth. The things that can be summoned come from terrible worlds that would leave other signs. You may also have lesser beings that escape during the explosion and\u2014\" he had been thumbing through photographs of the gathered crowds and was now looking at surveillance photos from after the fact. Anyone who came with a hundred feet of the location was being recorded in the hopes that somebody familiar would be spotted.\n\nIn this picture, a little girl with black and red hair held hands with an older woman who wore dark shades and a baseball cap. Though the woman looked young, her hair was gray.\n\n\"Master Cyrus?\"\n\n\"Just gathering my thoughts,\" he told her, then shuffled past the picture of Dana. Had they been involved? The timeline didn't match up, but it wouldn't be the first time those two had done the impossible.\n\nDana had become an enigma to the Order. During the investigation, it had been discovered that somebody had hacked into the cameras around the Black Palace and wiped any video showing her. It was almost as if someone had been watching her every move, only to erase it moments later. The prevailing theory was that she had used magic to enslave someone with government clearance, but he knew better.\n\nThis was also a fact he had kept to himself. They hadn't asked him about her true nature, which was yet another oversight on the Council's part. Bad questions meant that he could dodge the truth, a feat which reminded him constantly of Lily. What loopholes of her own had she exploited?\n\nHe shuffled through a few more papers, then set them down. \"My best guess is that this group of individuals tried to connect two planes. It is possible, but the process requires a tremendous amount of magical power. Without a proper stabilizing field, they would have lost control of the spell, which caused the explosion.\"\n\n\"And the implosion?\" The mage was hanging on his every word. Even though his superiors had good reason to doubt his recollection of events, he was still seen as an authority on magic.\n\n\"The space between planes is a mysterious one. It isn't technically a space, and you have to punch through it. When reality meets a plane without the rules of physics to dictate it, this can happen. This other place collapsed, but briefly tried to merge with our reality. Hence the vortex effect. My assumption is that anyone inside of this building is either dead or in this other place.\" He collected the papers and pushed them back over, but not before double checking the address. \"Still worth watching the site for any members of this group, but I doubt a full investigation would turn up any more information.\"\n\n\"Thank you for your time, Master Cyrus.\" She put the folder back together and then bowed her head before leaving.\n\nThe days passed, and Cyrus found no joy in teaching the next generation of mages. A single seed of doubt had been planted within him that grew larger every day, and a job that had once felt like a holy calling now filled him with too many questions. It wasn't uncommon for a knight or mage to develop doubts, especially after such a long and storied career. Yet he was the only one of his rank who had lost the faith, a fact that he could never share.\n\nAlmost a month after the incident, Tasia left. There were rumors about her disappearance, but Cyrus could not get a straight answer from anyone on the Council.\n\nOne rumor said that she had gone home to her family. Her enslavement at the hands of the dragon coupled with killing her own teammates had only been exacerbated by the humiliation of being saved by a succubus. Some thought she had left the Order entirely. Another rumor said that it was just for retraining with her father, a man who had been a legend amongst the knights for his skill with a blade. This was the more likely explanation, because Tasia had been bred for battle, and he couldn't see her turning in the towel quite yet.\n\nThe last rumor bothered him the most. There had been whispers for years about a special program that was for volunteers only. Prior to his fall, even Cyrus hadn't had the security clearance level to know about what it entailed, except that anyone who had signed up was never seen again.\n\nUnable to pursue Tasia's disappearance any further, he found himself looking into the city where Lily and Dana had last been seen. The town seemed nice, and it wasn't too far away from the ocean. A long search through local records revealed that there was a house in the area with multiple reports of noise violations, strange weather patterns, and even ghost sightings from periods the home was vacant. He found these reports interesting, but made sure not to give them more than a cursory glance.\n\nOver the decades a pattern had emerged regarding the house, though nothing definitive to alert the Order. He was still on the fence regarding his hunch, but sometime after Halloween, he saw multiple police reports about people in costumes causing havoc in the area. A social media search of the area had revealed a video of a goblin throwing toilet paper at someone's house. Though it was chalked up to just some foul-mouthed kid in a costume, Cyrus knew that he was looking at the real deal.\n\nThe home had passed to a new owner earlier in the year, a man named Mike Radley, but little else was found in the records. He didn't bother looking the man up, because the last thing he wanted was for Radley's name to be listed on any of the Order's computers as a search. Instead, after doing a proper amount of research, he went to his superiors and submitted the necessary paperwork to retire.\n\nNobody seemed surprised that he was leaving, and he was heartily commended for his many years of service. He had already found a small rental not too far from Mike Radley's home. Taking long walks around the neighborhood became part of his daily routine. Occasionally, he found himself in front of the enormous Radley estate, an old Victorian era manor with large stone lions watching over the entrance.\n\nHe always walked past without giving it a second glance. The occupants of the home didn't seem to have any interest in the outside world, and he preferred it that way. On his walks, it wasn't uncommon to see familiar faces in the neighborhood, but the one which stuck out the most was a woman in her forties with long braided hair. He had recognized her from the Order's dossier. Not only did the woman always look a little bit angry, but she also carried an aura of magic around her that left a bad taste in his mouth.\n\nIt was clear that he wasn't the only one interested in the Radley house. What would a witch even want with the place? Did she know something about its inhabitants, or the secrets that it hid? He desperately wanted to ask, but had very little doubt that her intentions were less than friendly.\n\nAnd what of his own intentions? He had become lost, a man uncertain of his future. Lily's actions had himself questioning everything he thought he knew. If Lily's master was capable of turning her away from darkness, then what other powers might they possess? Was this someone who could be persuaded to help maintain the status quo, to keep magic from the world?\n\nOr were they a threat that needed to be destroyed?\n\nHe might never have the answers. After all, he was an old man, and it could be some time before anything noteworthy happened with the house. A quiet ending was rare for a man of his knowledge and talents, but it was known to happen every century or two. It would certainly be a boring way to go, but maybe boring wouldn't be so bad.\n\nBut until death found him, he would maintain his vigil. And should the opportunity ever arise, he would find a way to pay the succubus back for her dubious kindness.\n\nAfter all, it was the right thing to do.\n\n<center>\u2728\u2728\u2728</center>\n\nThat's it, my dear readers. We have come to the end of Dead and Horny, and the tale continues in Home for Horny Monsters Book Four.\n\nThank you so very much for indulging me and my desire to give Dana and Lily both a chance to breathe outside the pages of my main storyline. This was originally going to be a simple story about retrieving magical objects while on a road trip, but Lily quickly took over with a tale of her own.\n\nI hope that this little slice of my imagination has brought you some joy in the last year. I adore spending time with my characters, though I will admit I swear a lot more after writing scenes with Lily in them.\n\nThanks to my beta readers who helped me polish this up for you. Thanks to my regular readers here on Lit who have cheered me on as I continue to put words to pages. I am slowly closing in on a hundred chapters total, and will cross that million-word mark soon enough.\n\nI hope to do other stories about my characters away from the main story line, but that will have to wait until I find a way to put more than an hour of my day into writing.\n\nIf you enjoyed this tale, please remember to click some stars and say something nice. Those kind words definitely help, especially on days where I feel like I'm just not good enough to continue. I put a lot of pressure on myself to keep improving my craft, and I really hope it shows.\n\nAnyway, I shall leave you with this: take care of yourselves and each other. Thank you again for reading my story, and I will see you next time!\n\n~Annabelle Hawthorne"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "possession",
        "im on a boat",
        "zombie succubus slugfest",
        "kiss and makeup",
        "one last car trip",
        "you can go home again"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/dead-and-horny-ch-12"
}