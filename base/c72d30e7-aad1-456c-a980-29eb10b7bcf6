{
    "title": "A Tale of Revenge Ch. 09-10",
    "pages": [
        "Thank you new and returning readers alike! Like I said the tone is changing. Let me know how you feel about it. Be prepared for a rough few chapters. And don't say I didn't warn you.\n\n I decided to join these next two chapters even though it makes for a longer post. Enjoy!\n\n Ch. 9\n\n Consciousness returned to her slowly, allowing her time to feel every pain in her body one at a time. The most pressing was the radiating throb from her temple. It felt like even her teeth ached in time with the beat of her heart, the pain was so intense. Then the pain in her shoulder called out for attention as she became aware that her hands were chained above her head, the muscles screamed after supporting the weight of her unconscious body for however long she had been there. Her legs were twisted underneath her and she couldn't tell immediately if they were also restrained. The metal collar still sat heavily around her neck, an unfamiliar and threatening weight. Voices made their way through the pain to claim her attention.\n\n \"\u2014But I still have no access!\" an angry voice was saying. \"The collar has simply contained the magic within her. And more than that I have no control, as I should. It has weakened her but her body is still free to move of her own volition.\"\n\n \"Well, find a solution,\" a harder, calmer voice spoke out. \"We are all curious why she attacked the soldiers. The king arrives tomorrow. See if you can get him answers by then.\" The heavy steps moved away from her and she heard a door close.\n\n The owner of the angry voice started muttering to himself, shuffling around the room. Anna was sorely tempted to open her eyes and learn the identities of her captors, but the angry man's muttering got louder. And she chose to remain impassive a moment longer despite the complaints of her body.\n\n \"After all I have done. Politics, politics, politics.\" He continued with something intelligible before crying out in surprise. Anna managed not to jerk at the sound but she did start somewhat. \"By the gods, Orlith, why do you insist on sneaking up on me every time?\" the angry man snapped.\n\n \"I believe our guest is awake.\" The voice of the northerner sent a shock of fear through Anna as she slowly opened her eyes. \n\n She was chained in the corner of a large tower room, the rounded walls and winds whistling through the shutters gave it away. The room was packed with tables covered in all nature of things scattered in no discernable order. The walls were lined with books, bottles, dried herbs and animal skeletons, brightly colored tapestries and glass work, stones of every conceivable mineral in all shapes and sizes, utensils of familiar use and some that looked rather ominous. In the center of the room a large fire pit that burned with an eerie green flame. This was a sorcerer's room. And the sorcerer himself stood with the northerner at the far side of the fire, both of their eyes fixed on her.\n\n Anna was set off from the room on a low stone platform that was about knee height to someone standing before her. Her arms were secured in metal shackles almost directly to the wall above her. Her ankles, she could now see, were secured by a short length of chain bolted to the floor. Next to this bolt was a drain-way, which was crusted in dark stains sending a chill up her spine. \n\n Her eyes returned to the pair of men in the room and she saw the northerner move around the fire so silently that she would not have known he had moved if she hadn't see him do it. The other man was a pale, skinny man whose face was narrow and pointed in a most unfortunate arrangement and topped with long white tufts of hair. The hair added to the unsettling quality about him as he did not appear old enough to own such a color. He had a sort of frantic energy about him that jarred with his appearance. He ambled over towards her as well, a gleam in his eye that she found decidedly unnerving. \n\n Anna did her best not to pull back from them as they approached. She would not show these men her fear. The northerner eyed her; Orlith, the thin man had called him. She felt a tremor run through her, despite her attempts to suppress her fear and her weakness. It felt as though her body had been dragged from the depths of the ocean, her energy was entirely depleted in a way she had never quite experienced before. \n\n \"Welcome, welcome,\" the thin man said with a smile that turned her stomach. \"We were beginning to think you'd never wake up.\" Anna made no answer. The cold collar on her neck felt oppressive. The proximity of the thin man seemed to make it chill further. \"We are thrilled for you to be here,\" he continued. \"Despite the fact that you left quite a bit of destruction in your wake.\"\n\n Anna's eyes shifted to the northerner's smooth face. His expression was unreadable but his eyes were burning into hers as he held her gaze. His silence seemed more natural than hers; he could out-wait her. But still she said nothing.\n\n \"My name is Evo,\" the thin man said, drawing her attention back. \"And we have much to discuss, starting with your name. So let's have it.\" His fingers moved in a strange pattern before her and she felt a bit of the strange magic inside her worm its way towards her throat, grasping at her muscles and jaw, as if to force it to move. The pressure began to burn as the icy magic clamped down on her but she refused to loosen her jaw. The pain radiated through her neck, along her skull and down her back, but the magic was slipping and finally it gave up, sliding back to its place deep inside her, guarding her magic from her reach. \n\n \"Interesting,\" Evo said, the gleam in his eyes undiminished. Anna breathed hard as the feeling receded. She felt nauseous again from the pain; her head was still throbbing from the blow she'd sustained. She tried to right herself against the chains, drawing her aching arms forward as she leaned her head back against the wall, only managing to rest her forearm on her head for a bit of reprieve. But the dizziness did not abate. She tried to force herself to remain present but black spots danced in front of her vision. Without thinking, she reached for her magic to heal some of her hurt, but the moment she touched the icy sphere around it she called out. Her muscles locked under her skin and for a moment she felt as though she was turning to ice. And then it was gone, and she was still in her sorry state, clinging to consciousness by a thread. \n\n \"We can't question her if she's out again.\" Orlith's voice sounded far away. \"I may have hit her harder than intended. Can't you take care of this?\"\n\n Evo's voice came from farther away, \"I don't heal. Get the Ionian from downstairs.\" Anna was slipping and for a brief moment all the pain was gone and she was far from the sinister room. \n\n But then she came back to full, screaming awareness as another's magic ripped through her. She called out again as a fresh wave wrapped around her brain and squeezed, lights danced in her vision and she felt as though it was ripping through her skin. And then it was gone entirely, and so was the pain in her head and shoulder from the fight, and even the lingering soreness in her muscles from her exertion and confinement. Her vision cleared and she saw a sandy-haired man in his middle age standing before her. His face was wide and a small smile touched his lips but didn't extend past them. \n\n \"Sorry about the pain,\" his voice was heavily accented but deep and soothing. \"I can only speed up the healing, it still\u2014\" his mouth snapped shut and his words were cut off. \n\n \"I had you heal her, not present a thesis on magic.\" Evo sounded at once thrilled and exasperated. Anna's eyes slipped down and saw the man was wearing a collar that looked to be the same design as the one she wore. Her eyes flew back to his and she could see him struggle though his face remained immobile. \"That's all for today, Marek, go back to your room.\" With the command, the man's body moved away from her. Despite his casual gait, Anna knew he was not moving of his own volition. \n\n Anna took stock of her surroundings once more. Was Evo the \"he\" Leena's husband had threatened her with? It seemed to make sense, given the sell-sword's uncanny familiarity with magic, that the two of them might be connected. Or was it Orlith? The man knew the soldiers, would he have known the other men who attacked the village? There must be a connection. The soldiers she had attacked were in her village, someone here must know why. \n\n Evo was muttering to himself again. Anna focused her eyes on his movements. She took a deep breath and tried to steady herself. The question of her village's fate suddenly seemed a bit less pressing. What did they want from her exactly? The man who was speaking when she first woke up had mentioned answers for attacking the soldiers, or did they know about the others as well? If they found out she was from the village they had sacked, what would they do? And now it seemed this sorcerer was looking to enslave her to him as he had with the blond man, Marek. \n\n But the king was coming. Did it really go that high? She was missing something very big. She eyed Evo again. He seemed a chatty type, one too pleased with himself to keep silent about anything for too long. She regarded her situation again. Staying silent might not be the best way to glean the information she needed.\n\n Her thoughts were disrupted, as the northerner entered the room through the only door on the far wall from where she was bound. She suppressed the fear that shot through her when his icy blue eyes fell on hers. There was something in his gaze that unnerved her greatly. He seemed to be looking at and through her all at once. She knew at once that though Evo held the leash to her magic, this man, Orlith, would be much harder to escape. \n\n The thought of escape brought her mind back to Dev. She hoped desperately that he had seen reason and run. If it was true that the last man had informed the others about her, they must have known about her companion as well. The two men spoke in low tones, though Evo was decidedly less careful about the volume of his voice. Orlith seemed to be trying to convince him of something but Evo was having none of it, shaking his head.\n\n \"No need, no need,\" he was saying as he approached Anna. \"Soon enough I'll have her under control.\" He stood before her, a crude cup in his hand. \"Drink this, now,\" he spoke to her, holding the cup out towards her. Anna looked at him incredulously; did he really expect her to listen? And if he did, how was she supposed to take the cup with her hands held above her head?\n\n Evo gave her an exasperated look and stepped up onto the platform, coming close enough to move the cup towards her lips. He leaned over, a small flash of his glittering necklace peeked over his robes and made Anna sneer. Evil and vain, perfect. Anna used the tiny range of movement provided by the precious few links at her feet to slide her foot out, bringing her heel down on his foot as hard as she could before the chains brought her up short. It was enough though. The sorcerer was more surprised than hurt and stumbled back to the edge of the step, where he promptly lost balance and crashed to the floor.\n\n Unfortunately Orlith had come up behind him, silently as ever, and grasped the cup from his hands before it too fell to the floor. Anna couldn't help but notice that he made no attempt to do the same for the man who was now at his feet. \n\n \"Would you like some assistance?\" Orlith asked, his eyes trained on Anna. She once again schooled herself against drawing away from him. He'd like it and Anna was determined not to let him get any joy out of her reactions. \n\n \"Yes, yes,\" Evo said exasperated as he climbed to his feet, straightening his robes in a flurry of self-importance. \"Make her drink it.\"\n\n With one hand Orlith struck out, managing to move before Anna could mount even the barest of defenses that she had with Evo. He wrapped one arm around her head, gripping her clenched jaw with his fingers digging into her cheek. Anna tried her best to keep her mouth closed as she struggled in his grip but there was no way out. His fingers became ever more painful until her teeth parted ever so slightly. He felt it and dug in further, parting her lips with the force of his grip. He moved the cup to her upturned mouth and poured the foul smelling liquid down her throat. He then slapped his hand over her lips to keep her from expelling it.\n\n \"Hold her nose before she spits it out,\" he ordered Evo who jumped to obey. Anna was desperate, twisting away from their punishing hold on her into the stones at her back. Her lungs screamed at her to breathe but the foul liquid was still held in her mouth. Finally instinct overcame her will and she swallowed it in her desperation to be free to breathe. \n\n The men released her and stepped back expectantly. Anna too waited for something terrible to take place, would this give him access to her magic? Would he control her movements as he had with Marek? But beyond a bitter metallic taste in her mouth, Anna didn't feel any change from the potion. Orlith turned to Evo in silent reprimand but the sorcerer was still looking at her greedily. His long fingers tapped against each other as he shifted his weight back and forth at a pace that made Anna feel decidedly irritated. \n\n She was about to snap at him when a horrible feeling erupted in her chest. It felt suddenly like writhing snakes were sitting behind her breastbone, slithering outwards, crawling through her body. She bit her lip against voicing her discomfort but she couldn't keep her body from writhing as if it might free her from the sensation. The feeling quickly became a burning itch beneath her skin that threatened to drive her mad. She closed her eyes to shut out the expectant looks from the men in front of her. By doing so she was left at the mercy of the sensations inside her, which were gradually worsening until she felt as if her insides had turned into writhing, molten fire. She held in her voice but a whimper of pain escaped her. She could hear Evo trying to command her to open her eyes but she refused to even acknowledge him. \n\n And then the writhing began to recede, the pain seemed to lessen ever so slightly. All the pain and burning seemed to be flowing out of her, out of her left arm specifically. Anna opened her eyes and looked up at her forearm where the sensations seemed to be focusing to find a long shallow cut that bled freely. Evo was drawing runes in her blood over the cut as the silvery liquid dripped from the wound. \n\n When it was out Evo stepped back, his white eyebrows drawn together in consternation. He didn't bother binding her cut, letting the blood drip along her arm down towards her shoulder. Anna shivered in the coolness of the room. The pain was all but gone, but there was a lingering discomfort that settled over her. She suddenly desperately wanted water and swallowed despite the dryness in her mouth.\n\n \"I take it that wasn't what that was supposed to do?\" Orlith asked dryly.\n\n \"No,\" Evo snapped. His gaze was severe, scrutinizing Anna as if she were a particularly gnarled knot that he just couldn't seem to untangle. \"But fear not, there are many more ways to try.\" Anna visibly tensed at this, drawing an approving gaze from the northerner. He was always watching her. \"Send her up. This will be a more delicate process than I anticipated.\"\n\n Evo went back to his tables, muttering to himself as he consulted another of his books. Orlith stood before Anna a moment more letting his gaze drift down her form and then back to her face. She met his gaze with a steely look of her own, though she felt quite the opposite inside. He wanted her to know he liked her position and he had enjoyed the show of her pain. With that he turned on his heels and left the room.\n\n Anna relaxed slightly as his form disappeared through the door. The man set her one edge, no doubt by design, but she couldn't help it. Every time he looked at her she could see the evil wheels in his head turning. She hated to think what he was coming up with.\n\n Someone else entered the room and Anna's eyes flew to the creaking door, anticipating Orlith's return. Instead she saw a woman, probably ten years older than she, with the same hateful collar chained around her neck. The woman's eyes met hers and Anna could see the haunted look in the shadows beneath them and the tightness of her mouth. The woman started towards her, raising her hand, reaching out towards Anna.\n\n \"No, no my dear,\" Evo's voice rang out. The woman's body immediately halted and her arm fell. \"Time's precious. The king will be back tomorrow and I need this little morsel a bit more compliant by then. We have work to do.\"\n\n The woman moved fluidly towards Evo and came to stand across from him at the table. Anna watched intently and she could practically see the strings Evo was pulling to make the woman move. He seemed to have lost interest in voicing his commands and simply directed her using the control he wielded through the collar. \n\n Evo began to draw runes and other, more complex symbols in the air in front of him, leaving a trail of shimmering power behind to hold the shape. Anna couldn't help but watch in wonder as the woman's hands moved. She was certain this woman was the source of the wards on the castle as she watched her weave runes of Evo's power into a delicate lace. Anna was fascinated despite herself though she quickly cooled to the scene when she realized this beautiful magic was about to be used to try and enslave her.\n\n Anna tried to bolster her spirits. There had to be a way out. She suddenly became painfully aware of the need to void her bladder. \n\n \"Excuse me?\" she spoke out, her voice cracking with the dryness in her throat. Anna decided on politeness. Evo seemed just the sod to fall for false gratitude. She swallowed painfully and tried again. \"Excuse me?\" Evo didn't look up. \"I have to pee. Can you please let me up?\"\n\n \"Quiet over there,\" he commanded, his focus wavering on the flow of runes. \n\n \"But I have to pee,\" Anna said plaintively. \"Please, sir, I'll tell you my name if you'll just let me use your chamber pot.\" \n\n \"There is a drain next to you for a reason, girl. Do not interrupt me again.\" Evo was not to be moved. Suddenly her name seemed of much less consequence to him. Anna looked over at the woman, whose face betrayed her shock as her eyes tried to look over at Anna despite her head being fixed forward. Her inexplicable escape from the sorcerer's control was probably surprising to his similarly adorned puppets. She shook her head at the unkind thought but she found she lacked the energy to properly admonish herself.\n\n How was she meant to use the drain? \"Sir, can't you release my hands so I may lift my skirts out of the way?\" Somehow she thought letting him finish whatever horrible spell he was conjuring up uninterrupted seemed like a waste of an opportunity.\n\n Evo finished tracing a complex symbol in shining fire in the air in front of him and turned his narrow face towards her. \"You, my dear, have shown yourself incapable of being trusted. After we are done with this, however, I should be able to take care of that pesky problem for you.\" Anna looked on as the woman continued working on her part of whatever they were preparing, a sinking horror expanding in her chest. Evo spent the time hopping back and forth between his side of the table and over towards Anna. His fingers twitched whenever he came towards her as if he was waiting to reach out and snatch something from her. And all she could do was glare at him.\n\n Her mind strayed to Leonid, despite her desperate attempts to keep her thoughts from him. He'd warned her, told her to turn back. She was such a fool for ignoring him at every turn. She shut her eyes tight and forced herself, with some effort, from the spiral of self-loathing she was starting down. She could almost feel his hand on her cheek, his cool fingers against her skin. She drove him from her thoughts. It would do her no good. He had told her he would not be able to help her. There was no use bemoaning a bridge already burned. ",
        "When the woman finished weaving the magic, Evo took the mesh of power from her hands and came over towards Anna again. She struggled in her bonds, truly scared of what might come. What would he make her do once he had control? The thought was too terrifying. \n\n Evo's face spread into a nasty smile as he carefully laid the spell over her head and body as if it were a blanket. The marks glowed and shifted, drawing in towards her skin. She felt them like dry, slippery fish all over her. The spell molded itself to her form, drawing in further, pressing in. Anna's heart raced and her breath caught. This was it. He'd control her and place her in his little collection. Her mind whirred in panic as the spell burned brightly against her body. How many of them were there? How many people did he keep as slaves to his whims, controlling them, using their magic? How would he use her? \n\n And then all thought ceased. The spell raced across her skin feeling like ghostly drops against her, it began to ache in the roots of her hair and the base of her teeth. What was this? Her eyes flew to Evo's face, which had lost its confident look. Oh gods, it was going wrong again. Anna's neck snapped back and her head hit the wall painfully. Her back went rigid and it felt as though bright, snapping fire was moving up and down her spine at high speeds. She whimpered in pain as her jaw was locked tight, her body felt as though it would snap. \n\n \"Get it off of her,\" Evo's voice cut through her misery. \n\n Anna's body relaxed again as the woman began gathering the spell as if it were wayward threads back into her hands. She was crushing the runes under her fingertips as she went, destroying the spell as well. When it was done, Anna looked at her. The woman had a lovely full face with deep tanned skin and pale green eyes that stood out against her darker coloring. Her voluminous curls were a deep brown and swayed around her shoulders in a great cloud of hair. Anna could see, as she had with Marek, the deep sadness in those eyes. But there was something else, a haunted pain that held a spark of fire.\n\n \"Thank you,\" she whispered. The woman looked as though she wanted to say something but she was already turning away, back to where Evo was cursing into yet another book.\n\n Anna shivered again, suddenly much colder than she had been before. She looked down at her skirts and realized she had released her bladder as the spell had released its grip on her body. \n\n The next few hours saw four more attempts to bring Anna under control and to access the power inside of her. Each time was a complete failure but to Anna's relief none were as painful as the first two had been, until the last. During that spell Anna finally slipped into blessed darkness only to be shocked out of it by a bucket of water being dumped over her head. She gasped and sputtered as another was thrown in her face and her raging eyes found Orlith before her again, empty buckets hanging from his fingertips. \n\n He cocked his head to the side and gave her a hungry look that made her want to crawl into the wall and disappear. The more miserable and weak she looked the more he looked at her like a predator who had only just begun to toy with its prey.\n\n \"Still nothing?\" he said to Evo who was banging around the room again. The older man gave him no more response than an exasperated sigh.\n\n \"Come here,\" Evo snapped. Orlith looked over his shoulder and then back at Anna. He gave her a meaningful look and then moved out of her way so she could see the pair on the far side of the fire. Evo had sat down in a large wooden chair, throwing his long arms over the armrests haphazardly. His legs were planted wide as the woman came to stand between them. Anna's stomach dropped. No, no, no, no. \n\n \"We haven't been doing well today have we?\" Evo's voice was mocking. Anna was thoroughly nauseated at the site of him placing his hands on the woman's legs and drawing her in further. \"Answer me, pet.\"\n\n \"No, master, we haven't done well,\" Anna could hear the soft accent in her voice but couldn't place it. The woman was staring stonily over his head.\n\n \"Look at me, dear,\" Evo said. Her head dropped immediately to comply and her face softened into a coy smile though her eyes still burned with a far different emotion. \"Why don't you make it up to me?\" his hands groped her body, pulling her dress down so that her full bosom spilled out from her laces. He reached up and plucked at the dark nipples as the woman slowly sank to her knees between his legs. \n\n Anna looked away. It was too horrible. She could see the woman fighting behind her eyes and yet he forced lustful groans from her throat as the room filled with wet sucking sounds. She squeezed her eyes shut, wishing she could block her ears somehow. Then Orlith's fingers sank into her hair and Anna stiffened at the sudden contact. For a moment it was almost like a gentle stroking of her hair, his fingers moving soothingly in her tangled hair. And then he gripped it painfully, ripping some from the roots as she grunted in pain. \n\n \"Look at her,\" Orlith whispered in her ear. Anna felt sick. The weakness in her body called out to her to comply but her disgust and anger required her to fight a bit longer. Orlith's other hand slid around her throat, again in a mockery of a tender gesture. His fingertips played lightly over the strained muscles as he held her head back until they came to rest in the hollow of her throat. He began to press in there and Anna felt the radiating pain and then panic as her airway was compressed. Her eyes flew open as her breath became trapped. She looked up into Orlith's serene face as he held her, twisting ineffectively in her chains as her vision blurred. And she gave in, her body too weak to fight any longer. Her eyes went to the woman at the far side of the fire and his death grip eased though never left entirely.\n\n She tried to watch dispassionately as the woman was forced to worship Evo's cock. The gangly man held great handfuls of her rich brown hair as he forced her down, again and again. She tried to imagine the woman was doing it of her own free will, that she was making those sounds of her own volition, anything to try and strip away some of the horror she was witnessing. Orlith's hand squeezed threateningly as she closed her eyes to try to hold in tears and she hated herself for opening them again. Her tears began to make their way down her cheeks, hot against her water-chilled skin. \n\n Evo shouted obscenities at the woman he was violating as he jerked his hips against her mouth until he found completion. And then Orlith's hands were gone and the man was moving away without a second look. Anna could see his self-satisfaction in his stride. She stoked her hatred against him. It was all she had to hold onto. She bowed her head, closing her eyes and trying to shut out the others in the room. Orlith and Evo were repulsive but more than anything Anna couldn't bear to look at the woman there with them. She was too afraid that she might soon find herself in the same position.\n\n How long could she hold out? Her body was worn out, her energy depleted and her spirits were failing her. Her magic was still locked in her chest by the icy cage placed there by the magic in her collar. It made her feel cold and disconnected from herself on top of all the other pain she had suffered that day. But it was impossible just to give up. She could not be enslaved to this man. No, she would have to keep fighting them, no matter what new pain they visited upon her head. She would resist them to the last and she prayed whatever power was keeping him from succeeding continued to thwart him.\n\n \"Go sit in the corner till I tell you otherwise,\" Evo snapped from the far side of the fire. Anna steadied her breath and she heard the woman move quickly away from the man.\n\n Orlith's soft murmur came from over near the door. Anna still couldn't make out what he said. Luckily Evo was not so discrete. \"Well tomorrow we may try your way. I still have at least one more thing but I'm tapped out for the time being. Send up the boy on your way out.\"\n\n Anna shuddered in her chains. Not another one surely. How many people did this man have chained to be sent to him at any moment? Her head was filled with terrible images of endless lines of people chained with their collars and kept waiting in a room forever until he asked for them. She could see herself there, broken and defeated, placed among his sick collection. \n\n The door creaked open and she braved a look up at the far side of the room. There stood a boy, no more than thirteen with a collar around his neck and wide dark eyes staring back at her. She could see he already knew about her. There was a longing in his look, a moment of hope before Evo called him over and his body was no longer his own. \n\n Evo reached his hand out and grasped the boy's hand tightly; his long pale fingers wrapped around the boy's dark brown ones like a snake coiling around its prey. Without a word Anna watched as the boy grew weaker, his posture collapsed and his body shuddered. All the while Evo grew stronger, more upright, the shadows beneath his eyes disappeared and he looked well rested. When he finally let go, the boy was kneeling and panting with shallow breaths, those bright dark eyes were glazed and stared out to nothing. \n\n Anna's anger grew like a fire inside her. She had looked into the souls of wretched, horrible men over the past several months but even then Evo's depravity surprised her. Rape and murder seemed so much simpler in comparison to the total imprisonment and continual, unrelenting violation of their will. She watched as he pushed the stumbling youth out of the door and closed it behind them. As soon as the door shut, the fire went out and Anna was cast into complete darkness. \n\n She took deep breaths to try and calm down but she found herself overwhelmed. She was trapped in a room with a sorcerer who enslaved others, used their magic and bodies as if they were no more than toys or tools. And all the while they were trapped inside themselves, unable to resist his commands. And he wanted to do the same to her, turn her into some magical puppet he could abuse as he saw fit. \n\n Her mind flashed back to the look the boy had given her when he came in. Anna realized the boy had looked at her with hope, that somehow her resistance to the collar might mean freedom for him. But how could she free him if she couldn't even keep herself together? And what of the woman and Marek? She had to do something, to find out how to get this infernal collar off of them all. And she would, she decided. She could take the pain and trust her magic was not so easily controlled. And she would find a way out of this. \n\n Her spirits thus lifted, Anna turned her attention back to her present situation. Her body screamed from being in the same position for so long. Her hands had long since lost sensation as they were held above her head for so many hours. She twisted in her bonds again, trying to find a more comfortable position and found that she had enough slack in the chains to be able to turn around to face the wall and stand up. Unfortunately it meant she had to twist her wrists in the cuffs, which meant injuring the torn skin there further. She called out softly as the metal moved over the cuts and bruises from the day. Her hands ached as the blood started to move back into her extremities. She muffled the sound of pain as the pins and needles began in earnest. \n\n \"Are you alright?\" a voice came through the darkness. Anna yelped and jumped, her entire body tingling in fear. She turned towards the sound. The woman! Evo had left her sitting in the corner and Anna had likewise forgotten her presence.\n\n \"Yes,\" Anna answered cautiously. Was she left here on purpose? Was this how Evo would try to get answers from her? It seemed unlikely. Anna had been able to tell all day that the woman hated the sorcerer. She wouldn't likely be colluding with him. \"No,\" she said a bit more honestly. \"Is he controlling you now, too?\" She tried to keep the quiver of fear out of her voice but failed. \n\n \"I'm trapped sitting here until he commands me otherwise but my mind is my own. He can force us to speak but not what we say. It's only at the very beginning that he can trick you into answering his questions.\" Her voice was soft and melodic with a purring accent Anna had never heard before. \n\n \"What's your name?\" Anna asked. She realized throughout the entire day she had never heard Evo call her by name. \n\n \"Serena,\" she said it with soft vowels and a trill in the 'r' that Anna could never hope to imitate. \n\n \"Do you know what day it is? I don't know how long I've\u2014I mean I don't know where\u2014or who\u2014I just...\" Anna was suddenly overwhelmed. She had so many questions and her exhausted mind could not formulate them into anything resembling coherent thoughts. She hoped Dev was far from here, hopefully he listened to her for once. She put her forehead against the cool stones in front of her. Her body hurt terribly and the ice at her core seemed to chill her bones.\n\n \"It's alright,\" Serena's voice was calm. Anna had the impression she was not the first of Evo's acquisitions that this woman had comforted. Is that what she was now? An acquisition? She shuddered. \"You're in the palace in the north tower. I don't know when you arrived but you were not in this room two days ago so it must be fairly recent. You find yourself in the unhappy situation of being under the power of a most evil man and in a palace full of wickedness.\" \n\n \"What's going to happen to me?\" Anna's voice was very small. She felt so foolish asking this woman, who was subjugated herself, such a selfish question but she couldn't help it.\n\n \"I don't know,\" there was a prolonged silence. \"I don't know why the collar is not affecting you as it has the rest of us.\"\n\n \"How many?\" \n\n \"There are seven.\"\n\n Anna's tired mind still felt a moment behind each bit of information but the sick feeling inside her grew into full-blooded anger again and helped to focus her attention a bit more. Serena sounded resigned rather than angry though her voice still held the slightest promise of a fight left in her.\n\n \"And the northerner?\"\n\n \"I know little of him. He appears from time to time but he serves the king and thus our paths seldom overlap.\"\n\n Anna shivered again thinking of the man's face as he stared at her. He seemed the type to be able to keep any and all information about himself quiet. \n\n \"What is the collar meant to do?\" She had to understand it if she was going to get it off of her.\n\n \"It's meant to provide its architect with control over the body of the wearer as well as access to the magic within us. He can compel us to use our magic as he sees fit and we have no choice but to comply.\"\n\n \"Why not just take the magic and be done with it?\" Anna wondered. If he could drain the boy's energy could he not just steal the magic wholesale?\n\n \"Magic is not a separate entity from those who wield it. It is as much a part of us as our flesh. And just like a limb when severed, the magic cannot survive if detached from the whole.\" The woman paused. \"But yours is not like this, is it?\"\n\n Anna went silent. She had unknowingly betrayed her inexperience with magic and her lack of understanding of its nature. Something told her that the character of her magic was not something she wanted Evo to know about. \n\n \"I won't reveal your secrets,\" Serena said. \"I would never do anything to aid him. We should be glad, at least, of his pride which keeps him from drawing the same conclusions I have.\"\n\n \"What do you mean?\" Anna asked, shifting to sit again. While standing had restored circulation to her limbs, she found she lacked the energy to maintain the posture for much longer. \n\n \"Magic is simply the power of nature amplified and filtered through those of us who can access it. We exist on a spectrum from those who possess a large amount of this power to those who seem to simply have knacks for something and even they don't realize it is due to a power beyond what the human body can offer. With this power comes certain gifts depending on the individual\u2014some of us can heal, some can make things grow and so on. But as with all things in nature, there are those who tend towards darker paths. Evo is a parasite whose power is especially apt at feeding off those around him. Yours is not like ours somehow\u2014though I can't begin to imagine where its origin might be\u2014and thus Evo's attempts have been for naught because he has begun with a faulty premise.\"\n\n \"How long has he been doing this? Why has no one stopped him?\" Anna couldn't imagine that in a country with no slavery and a functioning judicial system, a man would be permitted to live and work within the castle with a troupe of slaves at his disposal.\n\n \"He's clever and ambitious. He knew he could provide the king some of the stability he was seeking by offering up a group of individuals with power, whose gifts could be used to secure the throne. Those of us with identifiable talents are so few and far between that it would be an unprecedented advantage if we could be made to comply. \n\n \"Ten years ago he brought me here, under the pretenses of teaching me more in the ways of magic. He used me to design the first of these collars, leading me to believe we were creating chains for a criminal who possessed magic and could not be contained. The gift of these chains was to convince the king that he should employ us here. It wasn't until he closed the collar on my neck that I realized what the real offering was meant to be: a bevy of magical slaves who have no choice but to bend to the king's wishes and to Evo's will. \n\n \"It may seem to you that this is a fairly overwrought plan when we could simply be hired or coerced. But the real aim is even more profane. He has promised the king a weapon that will win any war, somehow using those of us who serve as conduits for magic in a way that we would never agree to under our own will. It may cost us our very lives if he ever completes it.\"\n\n Because of the complete darkness in the room, the silence that fell after Serena had finished her story felt more oppressive than it would have otherwise. Here, immobilized and miserable, Anna had no choice but to stare into the black and let the truth of this depravity sink in to the fullest extent. She went from denial to disgust and back to anger faster than she thought possible. Her hands clenched in rage and she barely felt the pain as she unconsciously tugged at the chains. She had to get out of these binds.\n\n \"How do I get it off?\" she said through clenched teeth.\n\n \"I have tried to imagine it many times but his influence keeps me from trying. The spell is intertwined with our souls,\" came the sad reply. \"There is no way for us to remove it.\"\n\n \"There must be some way. If you built the first one, shouldn't there have been something in the spell that would undo what was done? Does not all magic have to find a balance?\"\n\n Serena's laugh was joyless, as though she'd forgotten how to do it properly. \"I see you are not ignorant in the ways of magic, but no, we did not build the chains to be balanced, and being young and ignorant I did not know that it was not the way of our gifts. There are weak points in the spell but they are small and it would take time and immense power to pull it apart without killing the wearer.\"\n\n Anna fell silent. There must be some way. She recalled the different spells Evo had performed today in his attempts to reach the magic at her core. She considered the magic of the collar that encased her own power, barring her from using it. The book did not offer any information that might be useful especially considering that now she had irrefutable proof that the magic she possessed did not adhere to the same rules as others. Could sheer force of will achieve anything? She turned her focus inward, not to access but to observe. The icy core around her magic was always shifting, seeking a way in. She drew closer to the spell, watching the interwoven runes that made it up slide across each other. Between them she could sense flashes of her magic though she could not feel it beyond the wall of the spell. She called out to it in her mind, seeking some entry between the moving symbols. At first nothing, and then the slightest wisp of magic crept out towards her. In the flush of success, Anna threw herself towards it, hoping to grasp it before the collar's spell cut her off again. But she was too slow, or the foreign magic too strong, and as soon as it appeared, her magic seemed to be sucked down into the swirling icy spell.",
        "She opened her eyes to the darkness again, breathing hard. She hadn't realized the energy it took to focus so completely. If it was possible, she felt more tired than she had before.\n\n \"Anything?\" Serena's voice came through the dark once more. Anna could hear the hope in her voice. The same hope that she had seen in the boy's eyes when he'd entered the room. \n\n \"Your net is tightly woven,\" Anna answered, immediately regretting placing the blame on this woman who endured so much more than she could even imagine. \"I'm sorry, that was unkind.\"\n\n \"It is no more than I have said to myself thousands of times. If not for my magic and my gift of weaving spells, none of us would be here. And though I feel guilty, the fault lies with others. My guilt reminds me that I am human and feel for those around me while the ones who conspired to put us here are less than that, for they feel no compassion or remorse for their fellow man. That is their weakness, and one day it will lead them to their downfall.\"\n\n \"You sound so certain,\" Anna said after a moment. \n\n \"I am.\"\n\n \"I wish I could be.\"\n\n \"Have you never seen justice done? Those who would trample others brought to heel in the face of those they have injured?\"\n\n Anna stiffened at her words. Did she know what Anna had been doing? \n\n \"I have,\" she answered finally.\n\n \"Then we will see it again,\" Serena said with the same conviction. \n\n\n\n***\n\n\n\nCh. 10\n\n The women had spoken more throughout the night, neither able to sleep for any length of time in their chains, both physical and magical. Anna learned more about the situation in the capital, the tenuous hold the king had on the throne, and Evo's operation with the others. Finally, near morning, Anna drifted off again, her exhaustion overcoming the discomfort. \n\n Anna woke up as the fire roared to life in the center of the room. She jerked her head back as Evo strode purposefully into the room, scanning the corners till his eyes fell on Serena. She was also shaking off remnants of an uncomfortable sleep. Her body had been compelled to sit by his last command and she had spent the night thus constrained to an upright position. His eyes gleamed.\n\n \"Tricky pet,\" his voice was oozing with self-satisfaction as her body unfolded and began its forced march across the room towards him. \"Wanted me to forget you here so you could cozy up to the new girl?\" He reached his fingers out and stroked her cheek. Anna couldn't see her expression but she saw Evo's smile widen. \"Well, comfort her as you wish. I believe we have time for one more try before the king arrives. Let's see if you can't do better today.\"\n\n Anna resigned herself to the inevitability of another futile attempt but the knowledge that he would be disappointed offered some comfort. He would fail, and she would find a way to access her magic once more and he would know justice. She watched the pair of them settle across from each other as they had worked yesterday. This one was taking much more time to prepare and Evo seemed to be rushing it in parts. The king was coming after all.\n\n Anna shifted in her chains, clenching and unclenching her hands to try and get the sensation back. What would the king want from her? They had mentioned they wanted answers, but they had asked precious few questions. Orlith had wanted a chance to question her and Evo had stood in his way. She looked back at Evo, noting the sweat on his brow. Perhaps the king would be angry at his interference. She hoped he would be. Anything to cause that man a bit of hurt.\n\n Evo finished and picked up the same cup he had made her drink from yesterday. Serena came up with him and stepped onto the platform first, an apology in her eye. Her hands came to grip Anna's head as Evo came up behind her with the cup. Anna began to thrash, anything to deny him the satisfaction of another try. Serena's grip was not as strong as Orlith's had been and she still found some leeway to twist away from the cup.\n\n \"Curse it, woman, hold her still!\" Evo snapped at Serena. Instantly her grip cramped down with a strength Anna would not have expected. Evo maneuvered his way between the two of them and forced the liquid down her throat by holding her mouth and nose again. Even when he pulled back, Serena's grip remained, steel-like and unyielding. \"Release her,\" Evo said after a moment, as if he'd forgotten that he was in control of her every move. Anna got the distinct impression he did this on purpose, some sick way of constantly reestablishing his dominance over the woman. Serena's arms fell and she visibly slumped, her arms hanging limply by her sides. Anna realized he could force them to expend energy they couldn't access on their own. Anna immediately remembered what Serena had said about the weapon, wondering how far he wanted to be able to push them.\n\n But there was no time to dwell. Evo's potion was already working its way inside her. \n\nThis one felt familiar with the same icy stabbing sensations from the collar's original spell. Anna groaned in pain as the magic seemed to flow into the spell around her own magic and bolster the runes there. The spell grew, shielding her magic from her senses entirely. The runes swirled faster and the finely woven spell seemed to become disorganized and frantic. Anna's head fell back. It was as though ice ran through her veins. \n\n Briefly it seemed like the spell would finish there as the sensations seemed to subside momentarily, but she was given no such mercy. The spell exploded inside of her, sending creeping, icy points throughout her body. She closed her eyes as the reeling sensation reached up her neck and into her head. Her fingers clenched and her muscles twitched. The pain was deep and irritating, she wanted to reach inside herself and tear her organs out. In the dark behind her eyelids she was lost in a maddening spiral of her ever worsening state.\n\n She felt her right hand open of its own volition. Then it closed again. Her left hand did the same thing. Then her eyes opened and fixed themselves on Evo's grinning face. Through all the horrible sensations running through her, Anna was still able to feel the acute horror of the spell's success. Evo's lips moved but she couldn't seem to make out the words. Her ears were buzzing; the spell growing louder inside her head. The world she was looking at took on a strange unreality as the feelings inside of her sharpened to millions of points throughout her body. She was being pulled back, forced to experience each and every part of the spell burning against the tissue that made up her body.\n\n Behind Evo the door opened and a large group entered. Anna found she couldn't focus on anything and her vision blurred, though her eyes stayed open. Her horror could not distract her enough. She was conscious only of the thought that if he left this spell in her she would go mad. Her body twisted in the chains and she whimpered. It kept worsening, deepening and pulling her further away from conscious thought.\n\n Serena was still there, standing before her unfocused eyes. Evo was gone to greet whoever had come. Anna tried to call out to Serena, to tell her what was happening but she couldn't form the words. She felt an intense pressure in her head and suddenly a warm wetness began to flow from her nose. Another hazy form appeared next to Serena's and even in her misery Anna still recognized Orlith. Evo appeared and her eyes closed at his command. \n\n A sharp pinch on her arm and a subsequent easing of the pain and pressure told her Evo was once again draining the spell from her blood. Slowly the world beyond her skin came back into focus. She could hear Evo's voice as he stuttered through an explanation. The fact that he seemed nervous and slightly afraid gave her the tiniest bit of satisfaction.\n\n \"...made progress. This is the closest we've come and it still needs some tinkering, obviously this was a bit too much. But I do believe I am close to bringing her under complete control,\" he was saying. He was overstating his progress but she also knew there was some truth to it. He hurried away from her, back towards his guests.\n\n Anna slowly opened her eyes, feeling the world spin. Her head was slumped forward, so the first thing she saw was a bright red stain down the front of her dress. Her face and neck felt wet and cool in the chill of the room. Her tongue tasted blood on her lips and she realized her nose must have started bleeding due to the spell. She must look a fright. The thought amused her. She was to receive a king like this? Dirty and covered in blood? As her vision darkened again she couldn't help laugh inside her head. She could hear more voices but she found it difficult to care. She hovered there, on the edge of consciousness, lost in her disjointed thoughts, floating free of the room once again.\n\n The next thing she fully comprehended was someone gently cleaning her face and neck with a wet cloth. As she stirred, the cloth disappeared and the rim of a cup was pressed to her lips. She drank reflexively, not thinking to fight before she realized it was only cool water. She drank it all, grateful for the first water she had been provided in two days. The cup empty, she felt the cloth back on her neck, the soft drag of the fabric reassuring and gentle. After so many days of pain and starvation she reached out towards that tiny comfort.\n\n She could hear angry voices on the other side of the room but was having trouble understanding who was speaking. She opened her eyes again and pulled away immediately. Orlith's face filled her vision as he continued to clean the blood from her skin. What had felt comforting only moments before now reeked of menace. His eyes met hers as he squeezed the crimson rag over the drain and dipped it back in a rapidly reddening bowl of water next to him. He wrung the rag out again and brought it to her lips, slowly running it over her skin. He drew it down her jaw line and then her neck and chest until he came to the neckline of her dress. The whole time he looked into her eyes, his face inscrutable as he watched her. He dropped the cloth into the bowl and Anna saw Serena come to collect it. Orlith brought another cup to her lips and Anna found she was too weak to resist. Her body screamed for water and her pride was too well beaten to stop her. This time the water tasted of herbs that soothed her burning throat and help to clear her head. The gentleness with which Orlith tended to her was disconcerting and as soon as the cup was empty she pulled away. He reached out to her, ignoring her glare and attempts to avoid contact, and stroked her cheek. \n\n \"Enough!\" A powerful voice can from beyond them. \"You have had nearly two days and you have succeeded only in playing about with magic. I do not care if she is under your thumb or in a ditch, but I want answers.\" Orlith pulled away from her and stood next to the platform she was so intimately familiar with now. Before her a black-haired man approached, looking her over as one might inspect a dog they had kicked - would she snap or cower? She chose neither, finding her energy was dangerously low. \n\n \"What is your name?\" the man said. Anna only looked at him. \n\n \"Your king has addressed you, witch,\" one of the well-adorned men behind him snapped at her. \"Answer him!\"\n\n Anna was unmoved.\n\n The king nodded to Orlith and in a flash the man was back at her side, running his fingers along the cut on her arm, which still oozed bright with blood. At first the touch was just a minor annoyance but quickly he pressed in, tearing the damaged flesh further as he pressed into her skin. Once again Anna found herself twisting in pain. She tried to keep her voice under control. Her torture-addled mind wondered how often a person could experience pain before it stopped affecting them. Whatever length of time that was, she was not there yet.\n\n \"Anna,\" she gasped. Orlith's grip disappeared though he remained next to her.\n\n \"See, Evo, it's not that difficult to get her talking,\" the king said over his shoulder to the sulking sorcerer. \"You should heed Orlith's suggestions more promptly.\" He turned his gaze back to Anna and she met it this time. His eyes were so dark as to appear black and his face was cold, giving her the impression she was looking into deep pits. \"So, Anna, why are you attacking my men?\"\n\n Anna considered her options quickly. Was there harm in telling him? It seemed a fairly easy conclusion to draw if they knew about the violence to her village, one that they could not help but make themselves, if they hadn't already. She could sense Orlith preparing to hurt her again and she made her decision. \"They killed my family,\" she said simply. \n\n \"Did they now? What did your family do to bring them to this fate?\" He asked cruelly. He was trying to anger her, but she lacked the energy to respond appropriately.\n\n \"We were simple farmers who were attacked without provocation by a band of soldiers.\"\n\n \"Where was this farm of yours?\" the king asked, his interest sharpening. \n\n For a moment Anna paused. She was now quite certain that the soldiers had been sent to her village in particular but was the king, the man who ruled her country and was meant to protect its citizens, ultimately responsible? Now that she knew of the perversions of magic and power taking place behind the wall of his palace, it seemed more likely than ever before.\n\n \"Ranpur,\" she whispered.\n\n \"Ranpur,\" he repeated back to her, eyes glittering. \"I was assured by my men that there were no survivors in that village.\"\n\n There it was; the king had ordered it. After all these months of wondering and questioning who was ultimately responsible for the death of her family, she found the confirmation of his culpability almost anti-climactic. \n\n \"You sent them,\" she said simply.\n\n \"I did,\" he confirmed.\n\n \"Why?\" she asked before she could stop herself. Did it matter why? Did an explanation for such evil make it better or worse? Did she want to hear it? What possible reason could there be for the murder of an entire village? \"They were your subjects. Why would you send soldiers to terrorize and butcher your own people who were no threat to you?\" Her words were sharp but her tone lacked the outrage she couldn't seem to muster. The men behind him tensed and she felt Orlith move closer as if to silence her. \n\n The king threw his head back and laughed, the sound bouncing around Anna's aching head and sounding as hollow as she felt. The others in the room seemed equally taken aback by his sudden reaction to her. He finally stopped and looked back at her, a very different look in his dark eyes.\n\n \"Do you not see the resemblance gentlemen?\" he gestured towards Anna and turned to the rest of the room. \"Did you miss the dark, black eyes? And what of her pale skin against the raven hair? Does it not remind you of someone?\" He turned back towards her and her tired mind finally caught up with his words. He too bore the same coloring he described in her. Anna had never seen herself clearly\u2014there were no mirrors where she was from and the exact color of her eyes was never discernible from reflective surfaces in water. She knew her eyes were dark only from what people told her. She looked at his black, glittering eyes. Did she truly have the same empty look to her? \"And who can deny this beauty is not from royal blood? Look at her, gentlemen. Beneath the filth and common clothing there is the countenance of my dear great aunt.\" \n\n It couldn't be. She? A descendant of the royal family? \n\n \"No,\" she whispered. \"It's not possible.\"\n\n \"Oh yes, dear cousin, it certainly is.\"\n\n Her eyes were locked on the king's and he gave her another ferocious grin. He stalked towards her, violence in every line of his body. Between her shock and the unreality of the moment, Anna forgot to stop herself as she pulled away from his approach. He put his foot up on the platform she was on, crossing his forearms across his knee casually. \n\n \"Have you not heard the ballads of the exiled princess? I hear they are quite popular now.\" She shook her head, still denying his assertion. \"I've been looking for you, cousin.\" His voice was low, excluding those who stood behind him. \"I will tell you why I sent my men, so you understand fully what it meant and what it will mean for you.\" Anna was no longer certain she wanted to hear this story but she had little choice. \n\n \"It seems that some years ago, one of the less content lords and his friends started digging around in the records and came across the infamous story of your great grandmother, firstborn and heiress to the empire her grandmother built. It seems she got herself pregnant out of wedlock before her dear father had the courtesy to depart this plane of existence.\" He reached out and took a lock of her hair between his fingers, twirling the inky strands.\n\n \"Her younger sister, seeing the opportunity, had her banished to birth her child far from these palace walls. But eventually their doting father, in his final days, rescinded the order and entailed the throne back to his eldest. But she could not be found and so her sister was to take over temporarily after his death until they found her.\" His smile was twisted. \"Does it not make a good story?\" \n\n His grip on her hair became painful. \"Now, in order to unseat me, this long since buried tale has been repurposed by my enemies, publicized and spread throughout the land. They sing of your great grandmother in the market places and they weave tales of her decedents coming back to unseat the tyrant you look upon now. So I sought out the offspring of my great aunt to silence the traitors before they had the chance to rally to their chosen champion. \n\n \"I had little more than a vague idea of where she might have gone but Evo here helped me narrow it down some. So I took it upon myself to rehabilitate some of our former military criminals and sent them out to make sure no trace of the line remained. Evo even helped me with the selection and to make sure their more vicious tendencies were stoked against your village. And now you, the last remnant, have done me the great service of showing up on my doorstep.\" His voice was thick with excitement. \"Now we shall truly put an end to it.\"\n\n He stepped up onto the platform and crouched down in front of her, his face no more than a few inches away. \"Such a shame the reunion has to be so brief, but there are more pressing matters at hand.\" His fingers brushed the hair from her face, tucking it behind her ear. \"Nothing quite like royal blood, eh?\" His tone was mocking but his gaze swept over her face and body heatedly. For a moment Anna was not sure if he was going to kill her or move in for a kiss. Her shock had not worn off and she managed only to stare back at him in horror. He didn't seem to notice. \n\n With a flippant hop, he removed himself from her space and began to walk away from her. \"Orlith,\" he said over her shoulder. \"She dies now.\"\n\n Anna couldn't breathe. Her brain raced around the words he so easily proclaimed. This was it? The end she had once so easily embraced? Yet now it seemed impossible. How could it just be over? How could he condemn her so easily?\n\n Orlith's form filled her vision again and she recoiled in earnest this time. Dread poured through her like one of Evo's potions. Her eyes met Orlith's and his gaze seared into her with an intensity she was unprepared for. The others were conversing by the far side of the fire as if a life was not about to be extinguished a few paces away. Orlith's hand reached towards her face and she tried to back further into the wall but was forced to endure the blade of his finger running across her cheek. \n\n \"I wouldn't chose to do it this way either,\" Orlith said softly, almost conspiratorially, as if the two of them were hiding some private joke from the rest of the room. \"But the king commands it, and so it must be done.\" He continued his soft touches as Anna began to breathe hard, her blood rushing in her ears, making it hard to hear him. \"Death can be so beautiful. Seems such a waste,\" his hand moved to her neck.",
        "Anna closed her eyes. He would not be the last thing she saw. She recalled what Leonid had said about her death, and breaking the contract. She could only hope he'd be able to bring down some punishment on these men. But these thoughts were overlaid heavily with the contemplations of mortality that appear in the minds of those facing their own. She felt his hands around her neck. He ordered her to open her eyes but she ignored him easily, how much worse could he do to her? \n\n She reached for some piece of herself that was unbroken, that would comfort her in these last moments. Her mind slid over her family and her childhood, grasping for some idyllic memory and finding none. She was more comfortable in her memories of traveling with Dev, the way he had made her laugh and the nights around the fire. And then, unbidden, she felt the sliding sensations of the glowing trees about her wrists, the sensation of Leonid's hands running along her body. His face filled her vision, the memory of his kisses giving her a moment apart from the man actually standing before her.\n\n His hands closed and her breath was trapped. She clung to the memory, knowing the physical act of dying would soon cut her off from abstract thoughts. Her eyes opened involuntarily and fixed on a small bird sitting in the rafters above them where it ruffled its wings, indifferent to the violence below. \n\n But then the hands at her neck were gone and she looked down, surprised. \n\n Evo and the king were speaking again, the sorcerer stooping in a series of bows as he spoke. \"Thank you, my liege, you won't regret it.\"\n\n \"I won't. You have until Merren's night, Evo, not a moment more. And she does not join the rest of them. You either find a way to extract her magic or you don't. She cannot be allowed to live no matter how shackled she is. If you cannot deliver her I expect the rest to be ready as we discussed previously. I've waited too long on your promised goods.\" The king turned back towards the northerner. \"Orlith, you will stay and make sure that she cooperates. And when it's time, I expect her in my chambers so we can see this done.\"\n\n With that, the king marched from the room, taking his entourage with him. Anna was still breathing hard and her head spun. The realization that this was not over was at once horrifying, as it meant more pain at their hands, but also a relief. She was not ready to die. If she could find a way out of this she would.\n\n Orlith moved to speak with Evo and she felt both their eyes on her. She turned instead towards Serena who looked at her with a mixture of pity and apology. Anna wished she could reassure her she was blameless in all this but she lacked the coordination to smile. Instead, she leaned her head back against the wall and took a moment to gather herself for the days to come. Her eyes fell again on the bird above her as it ruffled its feathers and tucked its head below its wing. \n\n Evo came over and stood before her. She didn't move her gaze or show any signs she knew he was there. \n\n \"What is the source of your magic?\" the sorcerer snapped. Had she had more energy she might have reacted and given herself away but as things stood, she was in too much pain. She slowly lowered her eyes to meet his dull brown ones. \"Tell me the source of your magic!\" he said again, his voice rising at the end of his demand into almost a squeak of indignation. Anna couldn't believe his facial expression, which looked distinctly like her three year old cousin's when he wasn't going to get what he wanted. \n\n She couldn't help it and started to laugh. That audacity was comical. Evo's ears began to turn red as she continued to laugh, making her sore muscles ache but the release was worth it. \n\n \"You must be insane,\" she gasped through her laughter. \"Are you actually asking me to aid you in whatever monstrosity of magic you intend on performing? Me, who not a moment ago was condemned to die?\" Merren's night could not be more than 2 or 3 days from now. She sobered slightly, though her tone was still light. \"What could you possibly offer me to try and get me to cooperate? And what could you possibly do to me that would make me do so before your time runs out?\" \n\n Evo looked at her surprised. Clearly, none of these things had occurred to him. \n\n Orlith slid up beside Evo. \"I'm sure I can think of something.\" \n\n *\n\n She didn't know how long it had been since Evo had sent her and Orlith upstairs. It seemed to be ages since the northerner had bound her hands and feet securely before unfastening her chains and throwing her body over his shoulder. She had struggled, but even with her increased range of motion, she found in her weakened state she was no match for Orlith's grip. \n\n Once they had reached the tower's attic room above, Orlith had wasted no time binding her hands to a rafter overhead and divesting her of her clothing with almost clinical detachment. Here the morning light streamed in through the windows and cracks in the wooden roof above, warming her skin where it fell. He bound her facing away from the door and then left silently, letting her hang, her feet just barely able to support her weight. \n\n She had used the time to shore up her defenses against what she knew was coming. She had to make it through. Her best hope was to weather whatever they threw at her and find a moment for escape. She knew that it was unlikely, but she clung to it all the same. She had to get out, get the collar off, and get back to help the others. \n\n She hadn't heard him come back, but something alerted her to his presence all the same. He hadn't spoken a word or made a sound until he let the whip fly. The crack of the lash against the skin of her back shot out in the quiet room. Her breath caught in her throat and she managed only a choked cough before the next strike fell, ripping her skin from her shoulder to the opposite hip. She managed to keep from screaming at first but he was relentless as he continued. Her back was in flames now, she could feel the blood oozing over the ruined skin and stinging welts. \n\n Was he finally done? She had collapsed in the ropes some time before, unable to answer her shoulders' call for mercy as they stretched under the weight of her body. She felt something soft on the intact skin of the back of her neck. A sick feeling settled inside her when she realized it was his touch, and that it had brought her the smallest measure of comfort. But then he kept moving downwards, his fingers running over the marks he had made, bringing the generalized misery to sharp points of pain under his fingertips. Anna tried unsuccessfully to stifle the whimper that rose in her throat. The weakness she heard stung her ears. \n\n Then he was standing before her. The whip was gone as was any trace of blood from his fingertips, as if someone else entirely had done the beating. He wasn't even breathing hard from exertion.\n\n \"I'm so pleased the king has given us this time,\" his face was gentle, which confused her. It was hard for her to focus on what he was saying given the pain her arms and back. He lowered her bindings just enough so that she could stand on shaking legs, her feet finally flat against the floor beneath her. \n\n \"It's a pity we have so little of it, but I believe we can make the most of it.\" He continued. Anna looked at him. Her incredulity was met only with a small smile from him. He raised his hand to stroke her cheek and she jerked away from him, managing to wrench her arms painfully in the process.\n\n \"Your silence is delicious, Anna,\" she grit her teeth as he used her name. \"It's so satisfying to break it, to hear you call out as the lash strikes your flesh. Did you enjoy it? I must confess I did.\" His hand came to her neck and he stroked her skin, moving downwards till he cupped her breast, stroking her nipple with the pad of his thumb. \n\n \"We can make up the time we lack with intensity,\" he continued. \"It truly is art, and should not be rushed, but we are all slaves to different masters.\" Anna couldn't understand what he was talking about. Torture as art? What sort of insanity is that?\n\n \"So the source of my magic is no longer of interest?\" Anna shot him a challenging look. It was hard to keep the pain off her face. Her back was in agony. But something about this man made it impossible for her not to at least try to fight back.\n\n Orlith gave her a smile, pleased that she had spoken. \"Not to me. Evo has his own agenda and the king can be indulgent. But their plans have given me the gift of this time with you. I won't be wasting a moment of it.\" His hands continued to play with her, sliding sensually over her undamaged skin. Anna felt nothing more than disgust, though she recognized that she preferred even his revolting caresses to more time with the whip. \n\n He moved in towards her, his face very close to hers, his eyes burning with something like lust but twisted and dark. \"But please, feel free to tell me any secrets you may have in the hopes of making it all end. By the time we are done you will hide nothing from me, you will be open and willing when I finally take your life. You are all mine now, and I will enjoy showing you just how beautiful your pain can be.\"\n\n He's insane, she realized with no small amount of horror. This entire palace is filled with vicious lunatics. How could this be happening in her own country? How could the leader and those closest to him be such evil men?\n\n But this king was barely a decade into his reign, she reminded herself, ignoring Orlith's fingers as they slid down, between her legs. And since he'd been in power the country had seen more upset than it had in the past several decades combined. For almost a century things had been in decline but now there was more trouble than ever before. These things had never worried her corner of the world of course and all this information was garnered only as she drew close to the capital. She tried to close her legs as Orlith's fingers slipped against her intimate flesh. She was not wet but it seemed her body was preparing itself for his assault.\n\n Orlith smiled at her again, swirling his fingers as much as her clenched thighs would allow. \"All in good time, Anna.\" He stepped back from her, and circled back around behind her. Her tortured flesh called out to her for attention. How much could she take? Already she felt like trying to find a way out, something that would make him stop. But he wouldn't, he'd already told her that. She would endure because she had to.\n\n A black cloth slid over her eyes. His fingers danced across her weeping welts once more. \n\n *\n\n By the time Evo appeared with another spell, Anna was lying on the floor, bloody and broken from Orlith's attentions. He had been true to his word about making up for time with intensity, and the sheer onslaught of pain and damage to her body had overwhelmed her to the point where the world beyond her skin seemed a distant fantasy. All that mattered now was where he was and what he was doing, and how long it would be till he began again. She breathed with difficulty, sure that his fists had broken at least one of her ribs. \n\n \"Any progress?\" Evo asked when he saw her lying there.\n\n \"Not a word,\" Orlith said to him dryly. \"Despite my best attempts.\" \n\n Evo looked over the bloody heap on the floor, judging what Orlith considered his best. \"You've mangled her. How am I supposed to work like this? The spell could kill her in the shape she's in.\"\n\n Orlith shrugged. \"She's more resilient than you might think. But send up the Ionian to sort her out.\"\n\n Anna shuddered at the thought. Gentle fingers smoothed her matted hair away from her aching face, her good eye opened against her better judgment. Orlith's face came into view as he gazed down at her. She felt immediate relief and closed her eye, confused. Evo shuffled out of the room, muttering to himself about the brutality of the flesh and how no one appreciated the delicacy of magic. \n\n \"It's alright, Anna,\" Orlith's voice was soothing, \"we'll get back to it again soon.\" She didn't want to moan, or show her fear, but she didn't seem to have any control over her reactions. \"That's alright, let it out.\" Why was his voice so calming? Why did she feel relieved when he looked at her? Something was going on but she found she didn't have the strength to examine it more closely. Tears slid across the bridge of her nose and onto the floor. She whimpered as he stroked her hair. She knew it should not soothe her, and yet it did.\n\n Evo returned with Marek shortly and the blond man needed no compelling to heal her. \"Dear gods,\" the man breathed when he caught sight of her. \"What have you done?\" He knelt down next to her form and his magic worked its way inside her. The pain from his healing made her groan through her ruined throat. She had screamed until her voice was gone. \n\n \"Be sure to fix her voice,\" Orlith said. \"I want her to be able to...talk, should she choose.\" \n\n Marek worked systematically, fixing her from the inside out. The feeling was painful, like the itch of a scab but a million times over. In light of her current suffering the sensation registered lower for her than it had the first time. She tried to ignore it, tried to focus as her mind cleared on what was happening to her. Orlith was manipulating her somehow, but not with magic. \n\n She pushed herself up to sitting when Marek finished, and hugged her knees into her chest, crossing them to cover her nakedness. The actual pain was gone, but the memory of it deep in her body was still fresh, a phantom inside her. Worse still, she knew what was going to happen, and how the abuse would begin again. Suddenly she wished Marek had not healed her at all. She looked up at Orlith briefly, feeling trepidation and fear, but when he turned to face her she could feel a strange calm settle inside her. \n\n \"I won't be able to do that again for a day at least,\" the healer's accent was thicker with his anger. \"You'd best\u2014\" \n\n \"That's more than enough, Marek. Be a good boy and go to your room. We will call you again if you're needed.\" Evo's delight at his power over the man was still evident. \n\n Anna watched the blonde man's halting steps as he left her with the two of them, gazing down at her like she was some sort of meat. She shuddered despite herself. She felt so tired. The magic inside her was feeding off of her energies. She hadn't eaten or slept in days and she didn't know how much blood she'd lost, but by the look of the floor around her, it wasn't insignificant. Marek's healing was different than hers had been for Dev. He didn't put his magic into her but used it to help the natural healing processes already in place. The result was mixed, she felt drained by it but the reprieve from pain was invigorating. She put her head against her knees, closing them out for a moment. She should try now, her arms were shackled but not attached to anything; her legs were free. But even her exhausted mind knew she was no match for him, and that he'd enjoy her renewed fight. \n\n \"Well at least she seems subdued,\" Evo said. \n\n Anger flared in her chest. Anna suppressed the urge to snap at him, it would mean nothing to prove them wrong. Instead she used it to bolster herself up. Evo would try to poison her now and then Orlith would begin assaulting her again. She needed to hold out, keep her sanity in the midst of all this.\n\n \"She's still full of surprises.\" Orlith's voice made her stomach turn. \"You wanted to try something before we get back to it?\"\n\n Anna couldn't understand how they could speak about all of this so casually. Why didn't it bother them? Why was it so easy for them to treat people like nothing? Worse than nothing. \n\n \"Hold her still.\" Evo's voice was a bit closer. Anna managed not to react, though she wanted to throw herself as far away from them as she could possibly make it. \n\n \"Anna,\" Orlith's voice was very close now. She considered ignoring him, of fighting and thrashing against the inevitable. But she wanted to protect the small sparks of life she could feel returning to her. Better that they thought she was cowed, subdued as they called it, and save it for a more opportune moment, one when Orlith was not there to stop her.\n\n She picked her head up and looked into the northerner's face, keeping her face calm. The small upturn of his lips told her how pleased he was. \n\n \"Drink this, Anna.\" He held up a cup to her lips. She didn't want to, icy fear settled inside her, fear of pain, and fear that Evo might succeed. But if she resisted they would force her. Better to use this opportunity to make them think she was more compliant than she was, perhaps it would lessen the torture somewhat. She allowed Orlith to tip the contents into her mouth and she drank. \n\n \"Well this should make things easier,\" Evo said conversationally.\n\n Anna snapped her head up to glare at him, but he was gone. The room had disappeared and she was sitting on a writhing surface of oily darkness. Around her was a void. Terror, the likes of which she had never known, descended on her body in a shattering tidal wave. Faces full of snakes appeared before her, corpse-like arms and hands shot out of the darkness below her. Anna thrashed and screamed as the darkness flowed into her mouth, spreading through her body and destroying her from the inside. \n\n When the room returned to her, she was lying on the hard stone. Orlith was holding her arms above her head and the rest of his body had pinned her down. Her muscles felt loose and watery as if she had overused them in her fit. Her eyes met Orlith's while Evo stood over them, drawing runes in smoke above her head as the spell spilled from her nose and mouth like viscous fumes. She had no right to feel it, and yet there it was, the feeling of relief, that the pain was over for now. He saw it too, and smiled.\n\n And then Anna knew how he did it, how he engendered these conflicting feelings of revulsion and relief: he made sure she could never see or hear him while he was hurting her. He was either behind her or employed a blindfold. As soon as he finished he'd move into view, allowing her precious few moments to recover while he spoke soothingly, held and comforted her. He was making her connect his face with the end of pain, so that he could hurt her and be her reprieve. \n\n She turned her head, shifting her gaze from him to keep him for seeing the understanding in her eyes. The last thing she needed was for him to have another advantage against her. No, this she had to bury inside her for now, he must think she was close to broken if he's ever going to let up on her.\n\n \"It seems the new approach also hasn't worked,\" Orlith commented dryly to Evo as he got off of Anna and stood over her. Anna curled up on her side, hiding as much of her nakedness as she could. She also buried her face in her knees, shutting out the sight of her torture chamber. \n\n \"Damnation on this witch,\" Evo muttered more to himself than to anyone else. \"The seat of her magic is not in her body or her mind and yet she is fairly brimming with it. I feel as if I could reach out and touch her power now and yet it eludes me. Ask her again Orlith. There may still be time before tomorrow to find some way.\"\n\n Orlith came over and nudged her back with the toe of his boot. \n\n \"Girl,\" his voice was harsh and strange, as though he was play-acting the tough guard for Evo's benefit. \"You've got information the man wants. Why don't you go ahead and give it to him?\"\n\n Anna ignored him, still huddled in a ball on the floor. Her arms were jerked away from her chest as he grasped her chains, his other hand gripping her hair at the base of her skull so she was forced to look up at him. Evo stood over his shoulder expectantly. \n\n \"Well now?\" he said harshly but there was a twinkle in his eye. Anna realized that he was again bringing her in on some kind of private joke with him. He knew she would recognize the change in his tone and mannerisms. This was just another signal that the interrogation meant nothing to him, that her pain was all he wanted. But if he didn't have the interrogation as an excuse would he be allowed to hurt her? If she defied him and gave the sorcerer something to work with would she be left in peace for at least a short while? She'd risk it, anything to be left alone.",
        "\"She's still uncooperative,\" Orlith said as he released her. \"Give me a bit more time.\"\n\n \"No!\" Anna shouted as Evo turned to the door. Both men looked back at her, different looks of surprise on their faces. She ignored Orlith's anger. Hopefully she'd give Evo enough to keep him busy for a few hours. Then if she had to go back to Orlith so be it, she couldn't imagine much worse than he'd already done, and it didn't matter besides\u2014he was going to do it anyway. \"I'll tell you. I'll tell you. Please just don't let him touch me again.\"\n\n She knew that Evo loved his power over others, if she played up to his control of the situation and over Orlith she could hope that he would assert it. \n\n \"Let's hear what you have to say first.\" The sorcerer smirked down at her. She gritted her teeth at his look but she knew he'd respond better to groveling.\n\n \"Please, promise me I'll be left in peace until the king takes me. Please.\" Play-acting pitiful was unnervingly easy. She could feel Orlith's stare on her skin. She did not have to pretend much when it came to fearing him. \n\n \"Alright girl. You may have some respite while I work on the information you provide. But be warned, if you do not speak the truth I will be forced to return you to him and it will be out of my hands.\" Evo swept his arm magnanimously towards the door. \n\n \"That is unwise,\" Orlith growled. \"Her cooperation was left in my hands by the king himself. I will choose what happens to her.\"\n\n \"I can't very well hope to succeed if I have no information, which you have been responsible for extracting and have succeeded in facilitating just that. Now you will comply so that I may do my work for the king.\"\n\n \"She stays here. I will see she is unharmed until you are done working on whatever fool's errand she sends you on.\"\n\n \"Oh I don't see why you say that,\" Evo's oily voice sounded out as he paced towards the girl huddled on the floor. \"She seems ever so cooperative, thanks to you of course. Tell me girl, where is the seat of your power?\"\n\n \"I don't know,\" Anna said in a small voice. \n\n \"Well then Orlith will keep working till you do,\" Evo said in a huff and started towards the door.\n\n \"The old woman in my village performed a ceremony after the massacre,\" Anna called after him, halting his exit. \"She brought me to a place she said held a confluence of something, I don't remember what. She said she would call on the powers of the earth and bind them with the sky and with it her own connection to it all.\" Anna was piecing together different ceremonies from the book she'd practically memorized at this point. She was purposely vague, careful to sound as unknowledgeable as possible. \"I don't know how she did it. I've never seen or felt magic until that day. She said that vengeance would drive me and once I was done I would be released from it all. Please don't let him hurt me anymore. That's all I know.\" She had bowed her head towards him, further displaying her submission. Evo's fingers reached out and ran through her dark hair as if she was a well-trained dog. She kept still, disgust rising in her throat.\n\n \"That will do nicely,\" Evo said. She could hear the smile in his voice. \"I think I know just the thing.\" He turned to go.\n\n \"You said he wouldn't hurt me again!\" Anna called after him.\n\n \"Ah yes, Orlith, please keep your activities to a minimum. This will take a few hours and I will need her in good shape in order for the spell to work.\"\n\n And then he was gone. Anna's panicked breathing was the only sound in the room. She had thought she'd at least be granted a period of freedom from him. She needed a moment, just a few seconds without his overwhelming assault. When his fingers brushed her shoulder, she actually whimpered in fear and threw herself across the room. He allowed it, allowed for her to back against the wall, her eyes wide and watching him. He enjoyed the way her fear shook her body as he approached. He crouched down, crowding her space, watching as her breathing became more erratic and the pulse under her skin became visible as a ray of light fell across her neck. \n\n \"That was unwise, Anna.\" His voice was low and dangerous again. Now that he was close to her he could see her pitch-dark eyes were dilated in fear, the irises giving way to the void at their center. \"You know what we do here is between the two of us. You should not have involved another.\" He reached his hand out and ran the length of his fingers across her cheek, enjoying that her focus was once again entirely on him. He held her there, kept her on the perilous edge of her fear, just shy of total collapse. How well they worked together, how aware and coordinated in their movements. He marveled at the girl's will, at how perfectly matched they were. She would be beautiful when he finally pushed her over the edge, and was there to catch her. \n\n \"Since you've taken it upon yourself to influence my actions, I am forced to find a new way to go about this.\" His eyes were focused so totally on hers that he actually watched her fear grow, as if he could taste it just behind the darkness of her eyes. He brought his face towards hers, pressing his lips in a soft kiss on her cheekbone. He could feel her tremor but he also felt the small breath she released when there was no pain. He smiled inwardly; she was coming along nicely.\n\n He moved behind her, gripping her hair and dragging her to standing, controlling her head so she could not turn to see him. She was desperate now, twisting and struggling despite his grip. Her shackled hands came over her head to try and loosen his fist. Instead he took the short chain in his other hand, keeping her hands trapped behind her. He had filled the large basin of water for this purpose. He hadn't been planning on using it yet, but he was always willing to be flexible. Besides, he looked down at her newly intact skin, he was saving his new canvas for later. \n\n When he forced her head below the water the first time, he nearly spent in his breeches. The way her body writhed, the flailing and wrenching of her arms in his grip, the way he could feel her life beneath his fingers, all of it added up to a symphony in his mind. They were so well aligned, so in tune. He pulled her up, reveling in the sounds of her desperate inhalation, the way her ribs expanded and contracted beneath her wet skin. This was true harmony, he thought, as he pushed her head under again.\n\n *\n\n Several days later the sun was setting outside and Evo's last attempt was failing. Anna was surprised her muscles could even respond to the pain inflicted by the potion. She was wrung out, exhausted and half mad with pain. She was beginning to think Orlith had been right, that she would beg for death eventually. She just couldn't imagine taking another breath, though her body continued to defy expectation. \n\n Her nose began to bleed again, and she felt her heart shudder in her chest. Perhaps she would not have to wait for the king. Her eyes were open but foggy, the rafters above her crisscrossing into darkness. Tears rolled down from the corners of her eyes into her hair at her temples. The spell ripped through her again. How she managed to call out she didn't know. She thought her voice was gone long ago. \n\n The last few days had all blended together. She wasn't sure how long she'd been in this room with him. It could not have been more than two or three and yet time didn't seem to hold any real significance anymore. She didn't understand how he seemed never to sleep but always to be there, inflicting some new torture on her. Marek had been here twice more? Maybe three times? Each time she wished he'd never come. The physical marks removed left her more confused than ever, her pain still part of her mind though it was gone from her body. Orlith was breaking her down; she could feel it. Every moment she was one step closer to collapse. \n\n When Evo finally pulled the spell from her body,she couldn't think to move, or react when he reached for her, shaking her violently and screaming in her face to give up the seat of her magic. She turned her head away from the sorcerer's red, angry face. He had brought Serena with him this time, she stood frozen at his command in the corner, but it wasn't her face Anna was seeking. When her eyes finally fell on Orlith's calm face, she relaxed. \n\n Despite knowing that she was being manipulated, Anna realized she didn't care anymore. She just wanted a moment of peace, however false it was. It seemed like ages had gone by since she was crouching in the alleyway with Dev, hope for the future blossoming in her chest. Now she existed only in the present, the moment before and the one after. And in this moment, her tormentor would give her respite, and that was all she wanted.\n\n She reached out to him, her hands had been long since freed from her shackles as her waning strength no longer posed a threat. Her arm felt as though it weighed a thousand stone and yet she still lifted it. Orlith grinned at her, a smile full of satisfaction and victory. Evo was still shouting at her, his grip on her shoulders was in the lower registers of discomfort in her present state. Evo released her limp body just as Orlith took her offered hand and scooped her up, keeping her head from smashing on the floor.\n\n \"Why haven't you gotten her to talk?\" Evo screeched at Orlith.\n\n \"Because I haven't asked her,\" he replied, cradling her in one arm and smoothing her wet hair back from her face with his other hand. \n\n \"Why not, you sodding bastard?\" Evo was practically in hysterics.\n\n \"Because she's not ready yet,\" Orlith said. His voice was calming to her as well. She leaned into his body, letting the heat from his chest seep into her. \n\n \"She's practically panting at your feet,\" Evo, still shouting. \"And you can't get her to tell me the truth?\"\n\n Orlith didn't take his eyes off of her. \"She will tell me in time.\"\n\n \"I have no time!\" Evo started pacing back and forth. \"The king will take her life tomorrow and with it her magic. She has more power than anyone I've encountered and I want it!\" \n\n Orlith lowered her body onto a thin mattress on the floor and stood over her. \"I will find out for you by morning. But I also have little time, and your interruptions are not helping my progress. You may leave.\"\n\n The sounds Evo produced were hardly syllables but he finally slammed out of the room, cursing. Orlith had to remind him that he'd forgotten Serena again and then once again he and Anna were alone.\n\n Anna lay on her back, her legs folded to one side. She twisted despite the pain, seeking him out. He sat next to her on the floor running his hands over her skin. He brought a wet cloth to her face to clean the blood from her lips and cheeks. She let her eyes close, a deep weariness aching at her center. She could never think to sleep with him so near though, his gentle touch now was surely a prelude to something far worse shortly. She knew she had won a few moments by reaching for him but she didn't know how far he believed she had 'progressed' towards his perverse goal.\n\n For days she had been trying to find the place between complacency and defeat. If she was too resistant, the torture worsened terribly. If she were too compliant she risked actually falling for his manipulations. There was a narrow space where she was still believable to him and yet able to maintain a mental space apart from her actions, but as the days wore on, that edge grew ever more precipitous. \n\n He was speaking to her in low tones. She opened her eyes and found his eyes no longer on her face but caressing the skin. His fingers found the multitude of marks he'd left on her. Her ribs were bruised and scraped from the edge of the basin, her legs were covered in welts and cuts from multiple strappings, bruises of various sizes and causes peppered her skin, denoting the damage underneath. His fingers circled the small, deep bruises on the inner side of her elbows where he managed to induce full-body crippling pain by digging his fingers into her skin. There were layers upon layers of marks, many of them wiped away, leaving only their haunting memory behind.\n\n She couldn't make out what he was saying but something warned her that things were about to change. He was no longer simply looking at her with the interest that he'd shown since that first day. She was not just a plaything to his mighty hunter. Now he looked possessive, and exceedingly pleased with what he saw. He believed her to be his art, broken down to his will. She closed her eyes again. She could not resist him. If he saw it, he would brutalize her even more than he had. She'd survived this much, she could keep it up.\n\n It took every ounce of willpower not to tense up as he opened her legs, spreading her thighs with the touch of his fingers. She managed to hold in the sound of fear as he began to stroke her welted thighs. Evo's spell had inadvertently aided her in these efforts, as she felt utterly drained from his failed magic. Orlith's voice was still a low rumble as his fingertips ran up and down her skin. Despite her efforts to remain calm her breath picked up as his touch neared the apex of her legs. When he began to stroke her outer lips she thought she might give herself away before she heard a small chuckle.\n\n \"It's okay to feel pleasure now, pet,\" Orlith said a bit louder. \"You've pleased me and will be rewarded.\"\n\n He had mistaken her fear and compliance for excitement, but the idea was planted. She focused in on his fingers, her eyes firmly closed. She pushed the violation of his touch from her mind, a feat all too easy given that for days now he'd primed her to respond to his voice and face positively. If he intended on giving her pleasure then she would take it. She existed without the shame that one less tethered to the present might feel\u2014he had seen to that.\n\n She was breathing harder as his fingers retreated and then returned to probe deeper into her intimate flesh. The smell of oil reached her as his slippery fingers glided smoothly along her pink opening. One of his fingers slipped into her, and she moaned, the sound desperate in her ears. His finger curled inside her, stroking the spongy flesh while his thumb circled the nub above her entrance. The ache in her body, the deep hurt that still lingered, was slowly colored by the pleasure reaching upwards from her core, and that relief was more powerful than the pleasure would have been on its own. She let out a low moan as his thumb pressed harder, running occasionally directly over her clit as he continued stroking her from inside. \n\n \"That's it, release yourself to me, hold nothing back.\" His voice sounded out close to her ear and she felt him place a soft kiss on her temple. She knew he was there, just above her, watching the expression on her face. Implicitly she knew he wanted her to look at him, he'd want to watch her eyes as she gave into his ministrations. For the better part of the past few days she had learned to anticipate his desires, and he seemed to like that the most. For a moment she thought to close him out, to seek the pleasure without being assaulted with his victorious face, but she was too far-gone for that. She swore to herself that it was her pretense and not his conditioning that made her comply, but even she wasn't convinced. \n\n His face was alight in a way she had not seen him before. He had been so closed, seemingly unfeeling and cold when others were around, and even when he was pretending to care for her there was an air of falseness in his expression. She saw him now, his passions laid bare as he saw what he thought was the culmination of his efforts to produce his perfect masterpiece. He smiled at her, his hand redoubling its actions making her gasp and her back arch off the mat beneath her. \n\n His body shifted as well as he came to kneel between her legs. Without removing his hand he managed to arrange her legs so they were resting on his thighs, stretching them obscenely as he pressed them back, her entire core open to him. He was no longer looking at her face, so she turned her gaze back towards the ceiling. The hunger she saw in his gaze gave her fears purchase to make themselves known, and for now she preferred her pleasure. She struggled within herself, her alarm rising as she recognized the signs of his coming assault, but she wanted this, wanted something besides pain. She was distracted again by his thumb zeroing in on the most sensitive spot, while the finger inside her began to move back and forth, well lubricated by her own offerings now. \n\n The smell of oil hit her again and she distantly wondered why he would need it, she shifted to look at him. But then she felt the blunt end of his manhood pressing against her crinkled hole. Her eyes snapped to his face and she found him looking down at her as he pressed against her resistant backside. She looked to him for relief, reaching for the false lifeline he'd trained her to believe in. The oiled head of his cock was unyielding and she whimpered in pain as he pressed further, spreading the tight muscles that fought his entry.\n\n \"That's it, pet,\" his voice effecting her still more. \"Give in.\" And as he spoke the thick mushroom tip slipped past her tight ring. She gave a small cry of pain, all that she could manage with her raw voice. Why was he doing this? Why was he taking her this way? He felt immense inside her; a deep burning sensation radiated outwards. He gave her no pause and continued to press into her. It hurt terribly, worse than anything he'd done before. Tears started down her temples, her body cramping under his assault. She twisted weakly, searching for an escape as he forced himself inside her until he was fully lodged. Confusion set in as she looked to him, expecting relief from the pain and getting none. \n\n He looked back at her, a cruel smile on his lips as he began to pull out of her, drawing more desperate sounds from her. His hand began to move again, stimulating the flesh just above where he was violating her. The tenderness of his fingers was in sharp contrast with the pain he was inflicting on her as he began to saw back and forth. \n\n Anna was lost in conflicting sensations. He wanted this, to have her in pain, but to have her submit to him all the same. She had been so close to her peak before he'd penetrated her and he was bringing all those sensations back to life. At the same moment his violation of her ass was brutal, he spared her no time to adjust to his cock before he was pounding into her again and again. While the oil kept her from worse injuries, it barely helped the pain, given his pace. But his finger, oh gods, she closed her eyes and focused everything she could on his finger's movements, trying to relax her muscles in the process. \n\n The nauseous feeling of his rutting was difficult to ignore but the pain began to lessen despite his punishing pace. She felt herself getting lost inside the pain. She felt it and acknowledged it but she grasped onto the pleasure and threw herself at it, desperate to escape the room and his power for that one moment of ecstasy. \n\n \"Give in, Anna, love the pain and the pleasure. Accept everything and take it because I wish it.\" Orlith's voice was soothing and close. Again she opened her eyes to him, only reminding herself after that she had not done it to please him, but to assuage his knowledge of her mental rebellion. But she so badly wanted to please him, to hear his praise because it meant she would be safe, even for a moment. The torture he'd heaped on her in a never-ending barrage of pain had wormed its way inside her mind; she could feel it. Her resistance was crumbling and all that was left was compliance. \n\n Orlith smiled at her, pleased that she was so obedient now. \"You are mine, Anna.\" He growled as he picked up his pace. His fingers sliding across her clit until she was moaning beneath him. As she neared her peak her head turned to the side, baring her neck to him. He dove for it, lapping up her skin as if it were submission itself. She cried out as her climax began, her muscles clamping painfully on his cock. The burning that had subsided as she had relaxed came back triple fold as he chased his own completion. The pain and the pleasure wracked her body, her eyes rolled back into their sockets and she whimpered pitifully. The deep, stabbing pain in her rectum clashed with the powerful waves of pleasure and her confused body convulsed. Darkness closed over her and she felt the world fall away for a moment. ",
        "He was still inside her when she slipped back into the present. His hand smoothed her hair back from her sweaty skin. She opened her eyes to him and he leaned forward, gazing directly into her. \"Say it, Anna.\" His voice was low and husky, almost vulnerable. \n\n And just like that the knife-edge she had so cautiously cultivated disappeared. She had to choose: to let go or to keep fighting him. She could not play at submission any longer. She looked back at him and felt the tug of his eyes, the soothing purr of his voice. She so badly wanted to throw herself over into his twisted plans for her. She could spend whatever time she had left pleasing him and drawing pleasure from that. She could start to believe everything he said\u2014she could be his.\n\n But she wasn't, and she never could be. The stubborn streak in her roared to life, her anger rising with it. They shaded the weakness and hurt that penetrated down to her bones. She could not give into a mad man who beat and tortured her and whose idea of bonding was violating her against her will. He had done a good job of hiding himself when he hurt her but her logical mind knew it was he who had done it, and it was that mind that hated him intensely. She'd been relying on her survival instincts and not reasoning since he'd brought her up to this accursed attic. \n\n No more. \n\n She looked up at him and saw his face, still expecting her submission. His confidence that she was broken down as far as she could go was the chink in his armor, and he had actually opened himself up to her, made himself vulnerable. Ironic, she mused. \n\n She looked straight into his eyes and laughed.\n\n Instantly his face closed off, but she just kept laughing. It was insanity, poking at his pride. But she would hurt him back, no matter what it cost her. Evo had said they were out of time. Whatever he had left for her he didn't have much time to do it. Orlith jerked away from her, pulling his shaft from her ass painfully. She kept laughing as he tucked himself into his breeches and turned back to her.\n\n His fury was showing. She'd done it, dug herself into that weak point and he was fully inflamed. She'd taken his control from him, control over her, the situation, even himself. \n\n \"That is unwise,\" he growled at her, coming up and grasping the hair at the base of her skull. \n\n \"You are pathetic,\" she said through her laughter. Her voice was a hoarse remnant of what it had been days ago but she forced her words through regardless. \"You are a worm with a whip.\"\n\n He smashed her forehead down on the mattress, which dutifully did little to cushion the impact. Dark spots crowded her vision and she felt blood drip from where her skin had broken under the force of the floor. She waited till her head stopped spinning from the impact before gifting him another bitter laugh. \"Are you losing your temper, master?\" The word had never held so much disdain. \"Should I tell the king you failed?\"\n\n She could see in his eyes that he was trying to get himself back under control, retreat behind his unfeeling exterior. \"You wouldn't want to have to tell him that you spent days breaking me down only to find I wouldn't yield to you. You wouldn't want him to know that your fists and cock couldn't subdue me enough to tell you anything, much less become your little pet.\"\n\n Orlith's hand clamped down on her throat, cutting off her words. She was physically too weak to do more than grasp at his wrist but she looked up at him with defiance in her eyes, a small smile on her lips as his face grew brighter red. \n\n It was so easy to defy him now, to watch as he rose to her bait. She had worn him down as he had her. For days now he had barely slept to keep up his barrage as intensely as possible, all the time buoyed by the thought he was making process. Now she'd taken that away from him and he was weak and out of control. Anna's fingers slipped from his wrist as she began to black out. He'd punish her for it, but she'd stay herself until she had to face the king again.\n\n\n\n***\n\n Thanks for reading! \n\n Let me know what you think! Vote and comment as always..."
    ],
    "authorname": "AmoryParks",
    "tags": [
        "anna",
        "leonid",
        "magic",
        "captured",
        "chains",
        "pain",
        "forced",
        "evil",
        "broken",
        "defiance"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/a-tale-of-revenge-ch-09-10"
}