{
    "title": "At Breanna's Insistence",
    "pages": [
        "It has been a while...sorry about that. Sometimes life interferes. Anyway, I had a lot of fun writing this story and I hope you enjoy it. Please let me know what you think.\n\nAs always, this is a work of fiction and the characters are imaginary, existing only within the confines of the story and my imagination. Enjoy! \n\n*\n\nIt felt fairly strange to be back in college after nearly thirty years. Sitting amidst all those young graduate students made me feel a bit old, even though I was only fifty-one years old. Still, I was enjoying myself...feeling my love for history being recharged as I participated in the seminars...feeling renewed myself and why not -- in a sense I was starting over.\n\nI'd been a history teacher in a small eastern Kentucky high school for twenty-nine years and had been married for all but the last two of those years. Lisa, my wife, I'd caught with her boss, the bank manager in our bed one morning when I'd come home early with the flu. It had been an ugly divorce as Lisa had contested everything even as her lover was being taken to the cleaners by his wife. In the end, I walked away with a rental property we'd bought as an investment years before and over one hundred thousand dollars for my share of the house and other property. I also walked away with a serious sense of futility and depression that seemed to carry over into my work. \n\nI love teaching...or at least I had. That last school year had been a god-awful slog and at the end of it, I decided that I needed a change. I decided to pursue a long surrendered dream of getting my doctorate's degree in history and took a sabbatical to pursue it. With the settlement on the house -- I had the cash and decided that a year's change of scenery would do me good. So, I wound up attending the University of Kentucky in hot pursuit of my doctoral degree. I needed a few courses and of course my doctoral thesis which had been half finished when I'd stuck it in a drawer nearly twenty years before.\n\nI began my \"adventure\" in pursuit of a long abandoned dream, but I had no idea that one of my own former students would redirect my adventure for a new life into an entirely new direction. Her name...Breanna -- one of my unforgettables.\n\n\"MISTER HELLER!\" I was in a bookstore, perusing the mystery section when I heard my name shrieked into my ear. Before I could react, I found myself being hugged ferociously by a definitely womanly body. Although I hadn't been with a woman in a couple of years, I recognized breasts when they were mashed up against me. A sweet, spicy scent filled my nostrils as I heard, \"MISTER HELLER, I CAN'T BELIEVE IT'S YOU!\"\n\nI felt someone's aggressive embrace loosen and managed to gracefully disengage myself to find a rather stunning woman standing in front of me. Young...early twenties, dark brown hair streaked with vivid red and cut short ending in points just below her chin. Tall...taller than me by maybe an inch and I stand an even six feet tall. A long, lush body -- not fat by any means, but curvy and full bodied...those aforementioned breasts prominently displayed in a low cut T-shirt. Her dark hair framed a pale-skinned face with brilliant blue eyes, a pert nose and full and luscious lips now parted in a tremendous smile.\n\nI searched through the sizable index of students' faces accumulated in almost thirty years of teaching and quickly came up with a name. \"Breanna...how are you?\"\n\nHer smile grew even larger as she replied, \"Omigod! You remember me, Mister Heller? I can't believe it!\" She seemed to almost vibrate with delight, bouncing on the heels of her feet which drew my eyes to her rather bountiful chest which bounced in such a way that betrayed that she wasn't wearing a bra.\n\nI shrugged and said, \"It's only been what...three years, Breanna and besides, I never forget my good students!\"\n\nShe blushed slightly and said, \"I wasn't that good a student...a bit of a trouble-maker maybe.\" I laughed and shook my head in disagreement. Yes, I remembered Breanna. A consistent 'A' student and yes, a bit of a troublemaker in that she loved to argue in class...something I actually encouraged. She had also run with the Goth crowd...or at least as Goth as kids from an eastern mountain community could get...in those days favoring a lot of black leather and lace, running into trouble with the principals for dress code violation. Breanna had in high school, delighted in seeing how much of her breasts she could get on display and how high she could wear the hems of her leather minis before getting violated on dress code.\n\nThe Goth look was gone, but it was obvious she was proud of her rather impressive breasts and I wondered if she still wore her dresses short when she wasn't wearing skin tight black jeans. Breanna could still remind an old man how it felt to be young. \"Well, I hope you're still giving your teachers fits. Are you attending UK?\"\n\nBreanna nodded and said, \"Oh yes...third year, studying for physician's assistant.\" She turned as someone approached and said, \"Oh, you remember my boyfriend? Honey, look...its Mister Heller! Can you believe it?\"\n\nI turned to see a tall sallow faced young man wearing an army-surplus fatigue jacket, his hair shaggy to his shoulders and still sporting the same scraggly chin beard he'd had in high school. \"Jesse, how are you?\" \n\nI held out my hand and after a moment's hesitation, he shook it with a weak effort. There was a bit of surprise in his voice and then in an unsure tone, \"You remember me, Mister Heller?'\n\nI nodded and replied, \"Of course I do. So, you're attending UK too?\"\n\nHe nodded and said in the same glum tone I recalled him using constantly in high school, \"I suppose so.\" He didn't offer any details and I didn't press him. I imagined that he was doing just enough to plod through and pass, much as he had in the old days.\n\n\"What are you doing in Lexington, Mister Heller...on a school night?\" asked Breanna, her body still bouncing as if seeing me was the next best thing to meeting Santa Claus.\n\nI laughed and replied, \"I'm back in college myself...doctoral program. Taking a year off to work on my PhD.\"\n\nJesse managed to smile weakly while Breanna seemed to think that it was the best news she'd heard all year and I got another hug, her arms pulling my neck down so that my face was nearly nuzzling the exposed upper portions of her breasts. \"That's fucking awesome, Mister Heller!\" she exclaimed. \"I'm going to be looking for you on campus!\" She laughed and glanced over at her boyfriend whose face appeared glummer than ever. \"We can hang out sometime!\"\n\nThat caught me by surprise and I was momentarily at a loss for words. Finally, I shrugged my shoulders and replied, \"Well...you never know. School keeps me pretty busy and I'm sure it does you too!\"\n\nBreanna's eyes suddenly seemed to gleam with an odd fire and she said, \"Oh...we'll make the time. You're my favorite teacher...ever! Right, Jesse?\"\n\nJesse hesitated, his glum expression threatening to slip into a sourer look and he muttered, \"I suppose so.\" He glanced at his arm and I'm not sure if he was wearing a wristwatch or not, but he said, \"Bree...it's getting late. We got that thing...\"\n\nBreanna looked at him oddly and then slowly nodded. \"Yeah, I guess.\" Her expression brightened as she stepped up to me for the third time and hugged me again, saying softly into my ear, \"I'm so glad we saw you, Mister Heller! See you soon!\" Then she surprised me again by giving me a kiss on the cheek and grinning mischievously over her shoulder as they left.\n\nFor my part, I couldn't take my eyes off them...or more precisely, Breanna as they walked away...not just because her jean clad butt looked so sexy, but because the whole episode left me in a state of wonder. I felt a little surprise that between my legs, my cock was actually on the rise...responding to having had a woman...a lovely, young woman pressing herself against my body several times. I imagined I was just clueless, but I felt as if she'd been flirting a little with me. I touched my cheek, still feeling her luscious lips pressed against them.\n\nAs I drove back to student housing -- graduate and post-graduate students were able to rent apartments on campus, I couldn't get the young woman off my mind. In the acrimonious storm of my divorce, I had given the female gender a general pass and hadn't quite worked up an urge to date again, but that didn't mean I didn't have desires like any normal male. In the last loveless years of my marriage, it would have been next to impossible to not notice the seemingly endless parade of nubile young women who passed through my classroom and yes...I had masturbated to fantasies of having many of them...Breanna included.\n\nStill, that is all they were...fantasies of a late middle-aged man. Soon enough, meeting Breanna was lost against a tide of research on the history of the bourbon manufactures of Middle Kentucky...my thesis topic and on the heavy readings of my seminars. Still as I walked across the campus during the early days of October, I often found myself scanning passing students for Breanna.\n\nIn the end, she found me. It was nearly a month after I ran into her and Jesse at the bookstore and late in the evening, I found myself at a table in the university center cafeteria, drinking coffee and making some notes after a particular seminar. I was lost in thought and never sensed anyone approaching until I was both being hugged and heard, \"Mister Heller, how are you?\" again, finding my face nuzzling the breasts of my former student.\n\nThen Breanna was sitting across from me -- her arms folded under her breasts as she leaned forward and allowed them to bunch up in an impressive display of cleavage. I took a deep breath and gathered my composure back together, dragging my eyes from my former student's bosom and back to her lovely face. \"Breanna...how are you?\"\n\nShe grinned and said, \"I couldn't be finer now that I found you! How have you been?\"\n\n\"Good, I reckon,\" I replied. \"Classes are going well and my thesis is coming along.\" I glanced around and didn't see Jesse in the queue for coffee or food. \"Where's Jesse?\"\n\nShe rolled her eyes and said, \"Home, probably killing things on the computer instead of studying...you know, the usual. Waiting for me to get off work.\"\n\n\"Work?\" I asked.\n\nShe nodded. \"Yeah, I work here in the UC in university services -- answer the phone, type shit up...that sort of thing. It helps pay for what the scholarship doesn't cover.\" She reached out and squeezed my hand. \"I can't tell you how much I'm glad to see you, Mister Heller!\"\n\nI chuckled and said, \"Really? Feeling homesick for Jonasville High School?\"\n\n\"Oh, hell no!\" she replied. \"I never want to go back to Hicksville. I'm just...well; you're just one of my favorite people in the whole world! I just love that I can actually sit down here with you and...I don't know...talk! You'd have never done that in high school.\"\n\n\"Well...there's a reason for that. You were a teenager and I'm an old teacher. I'm shocked that any of my old students would even want to pass a word with me!\"\n\nBreanna had a wounded look for a second and shook her head violently. \"Oh, you're wrong, Mister Heller. Yeah, you were a cranky old bastard, but you had our best interests at heart...you made us learn stuff...important shit.\" She reached out and took my hand again. \"I bet you have no idea that you were a lot of kids' favorite teacher! We...I loved you!\"\n\nI felt myself blush a little. As any teacher will tell you...compliments like that don't come across too often. \"I don't know, Breanna.\" I replied. \"Jesse didn't seem too thrilled to run into me that night at the bookstore.\"\n\nIt was Breanna's turn to blush a little and she bit her lip and then laughed. \"Oh...I don't think it had anything to do with high school, Mister Heller.\"\n\n\"Oh yeah? What was it then?\"\n\nShe was silent for a moment, looking down at the table, but then looking up at me with her eyes blazing with a devilish glee. \"Well, not too shock you, but...\"\n\n\"Yeah?\" I said encouragingly.\n\n\"Well, Jesse and me, we've been an item forever and we rent a place down on the southern side of Lexington. About a year ago after fu...making love, we were talking about fantasy lovers...you know, who we'd like to fuck?\"\n\nMy blush returned, this time making my face burn. It was difficult to remember that Breanna was an adult now...not one of my teenage students. This whole conversation felt...taboo. \"Right,\" I replied a little hoarsely.\n\n\"Well, Jesse lists off Angelina Jolie and Kate Kardasian and Megan Fox and I...\" she paused as an almost belligerent grin spread across her face. \"I said my number one fantasy fuck was you, Mister Heller!\"\n\nI didn't feel my jaw hit the table, but I'm sure it did as I stared at her in shock. In my silence, Breanna pressed on. \"It's true...I had the biggest crush on you, Mister Heller...still do, I suppose and well, Jesse always has had some self confidence issues.\"\n\n\"I...I don't know what to say, Breanna. I never imagined...\" I let my voice trail off.\n\nFor her part, she looked back at me with amused skepticism. \"Oh, I bet you did, Mister Heller. God knows I teased you enough in those days and I know you used to stare at my tits and legs and you can't deny you were admiring my ass the other night at the bookstore. Her hands suddenly were cupping her breasts through her blouse and she playfully lifted them up. \"And you've been sneaking some peeks at my boobs tonight.\"\n\n\"Well...I...\" I really didn't know what to say, so I shrugged my shoulders and confessed. \"Guilty as charged. My apologies, Breanna.\"\n\nMy answer seemed to please her and she replied, \"No need to apologize, Mister Heller. I wouldn't put them out there on display if I didn't want people looking at them.\" Then she looked at me slyly with her eyes slightly hooded and said, \"I'm curious though. I wonder, Mister Heller, where I might rank on your list of fantasy fucks?\"\n\nAgain, I was caught off guard by her words, suddenly recalling how fearless Breanna had been back in High School -- never afraid to speak her mind. After a moment, I again shrugged my shoulders and said, \"I plead the Fifth, Breanna.\" I hesitated for a moment, trying to seek a way out of this strange conversation before I said, \"You can reassure Jesse...he doesn't have to worry about me. I would never try to...\"\n\nBreanna licked her lips and said in a wicked voice, \"Oh, I don't think Jesse's worried about you trying to seduce me, but he might be concerned about what I might do.\" She let that hang in the air for a moment. \"You know, Mister Heller...even in high school, I had a reputation for being...rash and impulsive. I'm even worse now!\"\n\nI suddenly understood what a rabbit felt like when it sees the wildcat stalking it and was trying to figure out what to say next when Breanna suddenly shifted gears. \"Shit, is it that late? I got an 8:00 class in the morning!\" She stood up and studied me for a moment. \"Mister Heller, would you mind walking me to my car? This late at night...well.\"\n\nIt took a moment, but her request finally sank in and I seized the opportunity to regain any sense of normalcy. The guise of the protective older male felt good and I quickly stuffed my notes into my book bag and walked out of the UC with the young woman. Outside in the cool air, I was momentarily startled when Breanna slipped her arm through mine and murmured, \"This way,\" steering us out into the mostly empty lot.\n\nAs we made our way to the far end, neither one of us said anything nor for a moment it was strangely...nice having a lovely young lady on my arm, evoking romantic memories from a lifetime ago. Finally, we arrived next to a slightly beat up Honda and she said, \"This is me,\" while reaching into her bag for the keys. She unlocked the door and I opened it while she looked on pleased and murmured, \"Thank you, Mister Heller.\"\n\nShe started to climb in, but stopped...her on one side of the door and me on the other. \"You know...Jesse should be worried, Mister Heller. You're still number one on the list of men I would love to fuck.\" She leaned forward and kissed me on the corner of my mouth. \"Goodnight.\" She fired her car up and pulled away, leaving me thunderstruck in the middle of that parking lot and feeling more than a little bit lost.\n\nIt was a long night and I surprised myself by masturbating not once but twice. The first time, I stroked off imagining what Breanna looked like completely naked...and yes, I confess that it wasn't the first time I had fantasized about that. Afterwards, I found myself unable to sleep and after tossing and turning for a long time, I got up and dug through some unpacked boxes until I came up with a yearbook from Breanna's senior year. \n\nI flipped through it until I found the photo I had vaguely recollected...a group of seniors at a class pool party and front and foremost in the picture was Breanna -- glorious at eighteen in a skimpy bikini, breasts nearly overwhelming the small top and those lovely, long legs. Her hair was soaking wet...her body glittering wetly in the camera's flash and that devil may care smile of hers as she smiled at the photographer. I masturbated to the thought of her smiling that way at me...having me, taking me as she murmured, \"You're still number one on the list of men I would love to fuck.\" I fell asleep with thoughts of the sexy, flirty young woman filling my mind and then my dreams.\n\nFor the next few days, I was a bit distracted as I was constantly expecting Breanna to turn up at any moment as I made my way around campus, but I never saw her. I wondered if in a moment of sober reflection, she had come to regret flirting with a man thirty years older and the thought of that made me oddly sad. I cursed myself for acting like a teenager afflicted with a terminal case of puppy love after I talked myself in visiting the bookstore that following weekend where I'd run into Breanna and Jesse initially. \n\nAs the following week passed, my lewd thoughts of my former student slowly receded...never completely forgotten, but mostly below the surface as I devoted myself to classes and doing research in the archives of the UK library. At quiet, idle moments, Breanna's face and body would resurface, but I forced myself not to dwell on my adolescent fantasies. Still, a part of me wondered when, not if, she would resurface again.\n\nIt happened that following Friday evening. I had had a quiet evening...a simple dinner followed by work on my thesis which was spread out on the apartment's kitchenette table and as the late news came on, I was dozing in front of the television with a murder mystery novel open face down on my chest. I was jarred awake by the irritating door bell -- a bit surprised because in two months, no one had ever rang it before.\n\nI swung it open warily and although I should have been expecting it, was still surprised to see Breanna standing there -- looking like sexy trouble in a leather jacket and jeans, a plastic bag hanging from one hand. She held it up and through the opaque plastic I could see the distinct markings of a popular beer. \"Trick or treat, Mister Heller!\" she said in a giggling voice.\n\n\"Um...about a week early, Breanna and I think I'm supposed to give you the treat...not the other way around?\"\n\nShe winked slyly at me and said, \"Well, we can work that out later. Interested in a beer?\"\n\nI felt my stomach do a nervous flip. \"Well...I -- um, I don't know if I should.\" I suddenly felt very nervous.\n\n\"Now, Mister Heller,\" Breanna began in a serious voice. \"I'm not seventeen and you're not my teacher now. We're just two legal adults...\" a giggle almost slipped out. She paused and then resumed, \"We're just two legal adults and this legal adult wants to buy you a beer.\" She looked up at actually batted her eyes at me mockingly. \"Well, aren't you going to invite me in?\"",
        "I took a deep breath and said, \"Breanna, would you like to come in?\" I felt my face burning as she brushed past me with a pleased and naughty smile. I closed the door and turned to see her as she slipped off her jacket, revealing a form fitting gray sweater that left her shoulders bare while molding itself to her breasts. I took her jacket and hung it up on the coat rack while she curled up on the small, nubby couch that came with the apartment, sitting the beer on the square coffee table in front of her.\n\nI pulled two beers out and put the rest in the refrigerator. When I came back, Breanna had removed her boots and had her feet tucked up under her on the couch. There was something evocative about her appearance and memories tugged at my mind of her wearing similar outfits in high school and how lovely she looked with her shoulders bare. I twisted the cap off her beer and handed it to her and tried to ignore her bemused expression when I sat down in the overstuffed chair I'd been dozing in earlier, figuring in distance there was safety.\n\nBreanna raised her bottle to me and I followed suit and said, \"So...what are we toasting?\"\n\nShe hesitated for a moment and replied, \"How about we drink to 'tonight' and whatever it brings us.\" The tip of her tongue peeked out momentarily between her full, ripe lips before she brought her bottle to her mouth for a drink.\n\n\"To 'tonight,'\" I replied, trying to sound more relaxed than I was. \n\nSmiling smugly, Breanna said, \"I suppose you're surprised to see me.\"\n\nI nodded and said, \"A little. I don't remember telling you where I live.\"\n\n\"I work in University Services, remember, Mister Heller? I have access to everything.\" She gave me a wicked wink. \"Never underestimate a woman when there's something she wants!\" Suddenly I felt again like the rabbit being stalked by the wildcat.\n\n\"So...how have you been, Breanna,\" asked before taking another swig of beer.\n\nShe wriggled in her seat, the motion making her breasts strain against the gray sweater's fabric. Although the room was poorly lit, it seemed as if I could see the indentations of her nipples standing hard against her outfit. \"Missing you, Mister Heller,\" she said coyly. \"You've been on my...mind a lot.\"\n\nI took another sip. \"Uh huh. And where's Jesse?\"\n\nBreanna sighed and said, \"Jesse is driving home to Mom and Dad just like he does every other weekend. He misses Jonasville something awful and goes back whenever he can.\" She leaned forward, her sizable breasts straining against the thin fabric of her sweater. \"Now, really, Mister Heller...do we really want to waste time talking about Jesse?\" She licked her lips and said in a very low voice. \"Can't you think of anything better to ask me?\"\n\nMy mouth was suddenly very dry and I replied in a raspy voice. \"Breanna...we both know we're flirting with doing something that maybe we shouldn't. I just don't want to...screw things up between you and your boyfriend.\"\n\nBreanna studied me for a long moment and then said carefully and slowly, \"Mister Heller...sometime before the end of this school year Jesse is going to drop out of school and go back to Jonasville and join his father in running his repair shop and that's where Jesse will stay for the rest of his life. He'll ask me to go and I'll tell him no and we'll officially end what I should have ended two years ago and then he'll find some hick girl and marry her and have a bunch of little Jesses and live happily ever fucking after.\" \n\nShe paused and took a long sip of beer. \"You can't screw up what's already broken. He wants different things than me and I want...well, I want you, Mister Heller.\" In one single lithe motion, Breanna was out of her seat, sitting her beer onto the table and swarming into my lap while I gawped at suddenly having a very lovely young woman squirming atop me.\n\nBreanna kissed me then, full on the lips as her arms slipped around my neck, her tongue probing my mouth until I opened up and then she kissed me with more vigor, her large soft lips warm on my mine while our tongues met and instinctively began to curl around each other. She tasted like cinnamon -- sweet and juicy and very much like I imagined Breanna would taste like. My heart was beating wildly as she pulled me against her...I could feel her breasts pillowing against my chest -- her heart beating as hard as mine. My arms came up and pulled her even tighter against mine and for a moment I was lost in the exhilaration of kissing a passionate and lovely woman.\n\nToo soon alas, the teacher in me resurfaced and I broke the kiss and as we both gasped for breath...the room suddenly much warmer, I panted, \"Breanna...we can't be doing this. I'm old enough to be...hell, I'm older than your father!\"\n\nBreanna touched a finger to my lips and said, \"Hush now. I want this. I choose this, Mister Heller.\" When I started to protest, she pressed her finger a bit more firmly before she said in a husky voice just above a whisper, \"Answer me one question and answer me honestly. Mister Heller, do you want to fuck me?\"\n\n\"Breanna, this is so wro...\" \n\nAgain she stopped me from speaking and said, \"Just tell the truth, Mister Heller, do you want to fuck me?\"\n\nBreanna stared into my eyes for what seemed an eternity -- her blue eyes merry and lusty as she already knew my answer which I finally managed to say. \"Breanna, I want to fuck you more than anything I've ever wanted to do in my life!\"\n\nShe smiled and replied, \"Why, isn't that a coincidence because it's been my life's ambition to fuck you, you lovely man!\" She gave me a quick kiss and added, \"Besides, I insist you fuck me, Mister Heller!\" And then we were kissing again, nothing held back -- letting our passion reign unbridled. Our tongues danced and celebrated while we held each other and caressed each other -- my fingers sliding through her dark, red streaked hair while her hands cupped my face, holding my mouth against her luscious lips, both of us kissing with our eyes open staring at each other.\n\nI'm not sure which of us began to move first, but suddenly the kiss was broken and I was kissing Breanna's lovely shoulders and then we were both tugging her sweater up and over her head and there they were...Breanna's breasts -- more lovely than I ever imagined!\n\nLarge, firm and meaty tits, lightly freckled and capped with two enormous aureoles and nickel sized nipples swollen up and standing up nearly half an inch -- I couldn't recall a more lovely sight! I kissed my way from Breanna's neck to her breasts, bringing her blood gorged nipples between my lips and teeth, making her gasp as I sucked and nipped at them. Somehow my own T-shirt was rendered into shreds and Breanna was licking my pebbled nipples, making me yelp and quiver as she playfully bit them as she stared up into my eyes. \n\nThen we were standing, Breanna facing the wall and leaning on it as I worked her jeans down her ankles and helped her step out of them. She was wearing white bikini panties and I stood up and leaned into her, kissing the back of her neck as I slipped my hand around her waist and then under the waistband. I felt her bush, thick and damp and then her pussy lips, swollen and slick with arousal. Her head fell back on my shoulder and we kissed as she moaned into my mouth as my fingers parted her labia and I slipped my middle finger inside her. She was furnace hot and creamy and slippery as hot butter.\n\nWe were in the short hallway that led to my bedroom and we were both suddenly naked and Breanna was squatting in front of me, knees spread wide for balance and revealing her thick, hairy but trimmed bush while her hand wrapped around my achingly hard penis as she brought her mouth closer and closer. She smiled up at me and then opened her mouth and wrapped those lush, full lips around the head of my cock and slowly took me inside her, murmuring approval as her tongue swirled around my cock\n\nBreanna was on her back in my bed, her knees pulled back and open as I knelt between them and made her croon with pleasure as my tongue traveled the length of her juicy cunt, tasting her sweet, pungent and oh, so young pussy! She flung her pelvis up to meet my tongue's thrusts between her labia, delving deep to lap up her sweet creaminess while my thumb gently feathered across her clitoris...like the rest of her body, large and lush.\n\n\"F-F-FUCK!\" she screamed as I made her cum...her whole body stiffening as if galvanized by an electric shock. I felt her juices splatter against my mouth, my lips, my face and licked her again and again with renewed desire before she finally began clawing at my head and shoulders as she cried, \"M-Mister Heller...please fuck me! Please fuck me before I absolutely die!\"\n\nI was sliding up her body, marveling at her beauty in the soft light of the bedside lamp -- her skin pale and flawless and muscles gently rippling in her flat stomach. Again, I realized that although big and tall, she was all woman -- soft in all the right places, but without an ounce of wasted fat. I felt her legs come up and wrap around my lower back as my cock moved over her wet pussy lips and then she twisted her hips just so and raised up and I cried out as my cock descended into the sweetest wet heat, both slippery and tight and she cried out, \"MR. HELLER...YESSSSS!\" as her whole body seemed to lunge upwards.\n\nI kissed her neck, smelling her scent...flowery and sweet and maddening. Then I was looking into her eyes as her left hand cupped the back of my head, fingers splicing through my peppered hair. I felt her heart pounding against my chest -- through those magnificent tits, beating in rhythm with mine...in measure with the lovely pulsating throb of her pussy wrapped around my erection. We were joined and had become one and I felt younger than I had in decades as if Breanna had shared her youth with me.\n\n\"My god, Breanna...you're beautiful!\" I breathed, our lips scant inches apart. We kissed...short, fierce kisses that were like lustful lunges and parries. I sucked at her lower lip and then she sucked on my tongue as we simply savored being joined cock to pussy. \n\nFinally, Breanna said, \"Fuck me, Mister Heller...fuck me! Say my name and fuck me hard.\" \n\nI slowly withdrew my cock from her clasping pussy, making her mewl with pleasure and then just before the head could escape the grasp of her labia, I rammed my cock back home as I said, \"Breanna!\" Thrust and \"Breanna.\" Thrust and \"Breanna.\" Again and again, I drove my cock deep into my former student, making her cry out with pleasure --her legs tightening their hold on me, working with me to thrust hard into her fiery cunt.\n\nMy mantra of \"Breanna\" seemed to help me maintain control as I felt constantly on the edge of climax, but somehow amidst the incredible ecstasy of her pussy wrapped around my cock, I kept from cumming, reveling in hearing the cries of pleasure erupting from this young woman's luscious lips. Breanna's cunt suddenly clamped down as I went deep into her womb and her lips were on mine as I felt her juices increase, bathing my cock with their creamy heat. We kissed roughly...like beasts as she went into orgasm, biting and sucking as much as kissing...I tasted blood, unsure if it was mine or hers.\n\nBreanna suddenly went limp, her legs sliding off my body to be splayed wide as she gasped and whimpered, breasts heaving as she sobbed, \"D-don't st-stop! F-fuck me, Mi-Ster Heller!\" Years of abstinence seemed to suddenly yield to a powerful, almost violent urge to fuck this young woman...to mate with her...to fuck her until she screamed and begged me to stop and with a feral growl I obeyed her tearful request and began fucking her with the zeal of a teenaged boy.\n\nBreanna lay helpless beneath me, moaning with pleasure between little fish-like gasps for air -- her eyes a mixture of desire and love and maybe a little fear as if wondering what ravenous beast she might have awakened in me. Our bodies slapped wetly together with each thrust of my cock and I struggled to keep going and not to cum, thinking of UK's starting five this coming basketball season and of my thesis and when all else failed, my ex-wife, desiring only to fuck Breanna forever and make her cum and cum and cum!\n\nSomewhere in all that, Breanna got her second wind and her legs came up again to cross behind my back, renewing her claim to my body and my cock and we were kissing again -- longer, more passionate kisses with tongues intertwined and our breath whistling raggedly from our nostrils and then Breanna broke the kiss, throwing her head back against the pillow and screaming shrilly as again her pussy juices soaked my aching cock as she fell headlong into orgasm and the indescribable sensation of how her cunt felt around my erect penis overwhelmed me and I went deep in her and with a loud cry of my own, I came -- shooting hot semen so hard that it hurt!\n\nWe clung to each other as if our lives depended on it, arms and legs entangled and holding on tight, laughing and crying and kissing and cumming and cumming -- my cock jerking inside her as I ejaculated...shooting more semen into her hot pussy than I ever imagined I possessed. And then we were simply clinging to each other, quivering as aftershocks of our orgasms reminded us of how close we'd come to heaven. I felt myself going soft inside Breanna and began to move off her, but she held me tight, not wanting to let me go -- cunt muscles working as hard to hold on to me as her arms and legs were.\n\nBreanna kissed me...silly, sloppy kisses all over my face before she stammered, \"Fuck me, but that was...ohhhh, better than I dreamed it would be! Mister Heller...you sure can fuck!\"\n\nI felt my cock throb at her words and wondered if she might inflate more than my ego. I took a deep breath and hoarsely replied, \"A man is only as good as the woman he's with. Breanna...I've never known anyone like you before. Thank you!\"\n\nWe kissed some more and then just rested...our bodies cooling slightly. Breanna finally released me from her carnal grasp and cuddled up to me as I pulled a blanket up over us and turned out the light. I wrapped my arms around her, gently stroking her shoulder and tracing a finger around her lovely face, dimly illuminated from a streetlamp out front of my apartment complex. \"I can't believe I'm lying here with you, Breanna...an old man like me.\"\n\nShe giggled and kissed me on the nose and replied, \"I can't believe I just fucked my biggest crush in high school! God...I thought you were so sexy and I just knew you'd know how to fuck a girl correctly and I was right!\" She stretched out against me, her still sweat moistened body feeling delicious rubbed up against mine, nipples still like hard rubber dragging against my chest and her sex, wet with both semen and pussy cream rubbing against my thigh -- one of her long legs draped across me.\n\nBreanna giggled again and said, \"Lauren will be so jealous!\"\n\nI cocked an eyebrow in confusion and said, \"Lauren?\"\n\nBreanna, a naughty smile on her face, nodded rapidly and said, \"Yeah, you remember her...Lauren Cunningham.\"\n\nThat rolodex that's in every teacher's head took a spin and I replied, \"Lauren Cunningham...blonde...was in your class -- cheerleader Lauren Cunningham? I didn't think you two were close.\" High School is highly regimented...Goth and Cheerleader didn't mix. I couldn't ever recall the two of them talking back in high school.\n\n\"We weren't back in Jonasville, but we ran into each other here at UK and well...\" Breanna let her tongue peek out. \"Lauren and I are really, really close here.\"\n\nThat took a moment to sink in and I felt my mouth gape open in surprise, recovering to say, \"You mean you and she are...lovers?\" as my cock began to recover at the image of my former students locked in a Sapphic embrace.\n\nBreanna leaned in and kissed me, slowly sucking on my lower lip as she looked into my eyes before replying, \"Oh yeah...I like girls too...always have. I never would have imagined when Lauren was screaming out all those stupid cheers that she had such a nasty, long tongue!\" As she talked, her hand casually slid down between us and found my recovering penis, gently stroking the sticky member as she continued. \"After making love one afternoon, we were talking about high school and stuff and she brought you up...about how she had a 'daddy' thing for you back then and how she used to fantasize about fucking your brains out. When I told her I had the same fantasies, it got us both hot and we fisted each other imagining it was you! So a week or so ago, I told her that Jesse and me had run into you and we got wet and nasty talking about finding you and fucking you.\"\n\nI felt my cock throb and grow as I saw that in my mind, but part of my brain was still having problems processing what she was saying. \"Breanna...I'm just a middle-aged history teacher...I'm not sexy -- hell, I'm boring! Ask my ex-wife!\"\n\nBreanna laughed and with a grace I envied, rolled up and over me, suddenly straddling me on her knees, her hand brushing the tip of my now erect cock against her pussy lips. \"Your ex is an idiot, Mister Heller. You're a good looking man...and I mean, MAN! You know yourself...and you were -- are sexy. God, I bet half the girls in our class thought that you were hot...so confident and smart up there teaching us -- treating us like we were human beings and not little girls that all the teenage boys were dying to paw at...not really knowing what to do with us if we actually gave them a chance.\"\n\nShe put me inside her and slowly impaled herself on my cock as she gave a little grunt and leaned down into me -- her breasts pillowing out on my chest, until our lips were nearly touching. \"I knew...Lauren knew, hell, I think all us girls knew, this was a man who knew how to treat a woman...to fuck a woman proper.\" Breanna moaned as she slowly moved up and down on me. \"And I was right, Mister Heller! You have a lovely cock and you know how to please a woman with it!\"\n\nAgonizingly slow and sweet, Breanna began to ride me, her cunt flesh clinging tightly to my cock as she slid back and forth, rising up just enough to let me lift my head and nuzzle and suck at her heavy breasts...all talk of her and Lauren forgotten as she made love to me. Breanna never looked lovelier as she rocked back and forth on me, her lower lip pouting with pleasure as she stared down at me, eyes obscured by her hair - totally caught up in the moment and savoring how my cock felt in her pussy!\n\nI'd been proud to have lasted as long as I had the first time and now with my own needs having been tempered with my first climax, I felt confident that my second erection (and it had been a while since I'd recovered so quickly), would endure for a long time. I let Breanna set the pace wanting to please her.\n\nI'd not been with such a young lover since Lisa and I had been Breanna's age and I marveled at her energy and passion which seemed to turn back the clock on my own years...I felt alive as I hadn't for decades. How could I not, a lithe, voluptuous young thing like Breanna astride my cock, slowly rising up and then slowly impaling herself on it again and again. I watched with delight as her carnal pleasure escalated -- illustrated by her facial expressions of rapturous ecstasy until she cried out, \"YESSSSSS!\" and sank slowly until I was completely inside her, collapsing atop me as she quivered in orgasm.\n\nNowhere near close to climax myself, I waited until her orgasm was on the wane and then eased her off me, rolling her around and then with both of us on our sides spooning, raised her right leg and thrust my cock back inside her creamy cunt, making her gasp. I eased us both back until I was mostly on my back and her atop me, legs spread wide, fucking her with short thrusts while my hands cupped her breasts, pinching her nipples between my fingers.\n\nBreanna moaned her approval as we fucked in this position -- more me hunching into her than long, hard strokes of my cock...the air thick with both our bestial lusty grunts and the smell of hot fucking cock and pussy. I licked the sweat off her neck, savoring its both salty and sweet flavor and enjoying the feel of her wet hair against my cheek. Breanna came again -- more explosively this time as her arms and legs flailed wildly and her pussy gushed hot juices over my cock to trickle down our thighs.",
        "Her orgasm seemed to galvanize her and she got on her elbows and knees, her shapely ass pointed skyward and offered me her pussy again -- labia spread wide and her cunt gaping open from being well fucked and she moaned, \"Fuck me hard, Mister Heller...show your naughty student how a man fucks a woman!\"\n\nMore out of instinct that measured thought, I nearly lunged into her, making her scream from the violence of my thrust into her hot, loving pussy. Clutching her hips where they flared from her waist, I began to fuck her hard and fast, driving my cock into her as if my life depended on it...our bodies slapping loudly and wetly together. I felt myself throbbing and seeming to grow harder with each carnal howl of delight that escaped her lips. Then she was coming for a third time, screaming wordlessly with pleasure as she clawed the sheets.\n\nI suddenly needed to see her face and she cried out as I suddenly withdrew from her tight, convulsing grasp in mid-orgasm and rolled her over. Her eyes went wide as I climbed between her sprawled legs and shoved my cock into her again with a single brutal thrust. \"OHHHH FUCKKK CUMCUMCUMMMING!\" she sobbed as her orgasm escalated as I began to piston madly in and out of her...her pussy sopping wet -- both slippery and tight. \n\nI felt my own climax rising and didn't fight it, driving my cock deep into her young womb and bellowing like a bull in triumph as I began to ejaculate hot semen into her cunt like I was a teenager reborn. Our mutual cries of orgasm were smothered as our lips came together and we kissed -- our tongues dancing and silently signing our mutual ecstasy!\n\nEventually we collapsed into a tangle of arms and legs -- both unclear as to who was on top and on bottom. Her luscious lips left mine long enough to allow her to gasp, \"Oh yeah, Mister Heller -- I could definitely get used to this.\"\n\nIt took me a while to answer as my heart felt like it was about to explode and my lungs had apparently forgotten how to breathe in the midst of our mutual orgasm. Finally, I wheezed, \"Me too, Breanna...if it doesn't kill me!\"\n\nShe began to giggle and I laughed too between gasps for air and then we were nuzzling and kissing until she laid her head on my chest and gently began to snore. I lay awake for a long time, savoring the feel of her body on mine and wondering what I'd done to deserve this and wondering what tomorrow would bring. When I did sleep, it was the most restful slumber I had known for many, many years.\n\nI awoke stretching, coming wide awake in a second as my muscles protested. It took me a second to realize that it was a reminder of good things not bad and then the memories of Breanna came back to me. I was alone in the bed, but her flowery sweet scent assured me that our night of lovemaking had not simply been a silly old man's dream. I climbed out of bed, groaning softly as I worked the kinks out...more a pleasant reminder of impassioned fucking than pain.\n\nI shuffled into the bathroom and did my business and was shuffling back out when I heard noise in the small kitchen off the living room. I found myself growing a bit excited as I hurried down the short hall and through the living room, pulling up short when I spied Breanna standing before my stove, stirring something in a frying pan. She had on a T-shirt I think I had worn a day or so before. It ended just shy of her bush which was revealed in all its thick, trimmed glory.\n\nShe smiled at me in such a way that I knew I'd treasure in my heart for all time even as I felt my cock respond to it's carnal quality. \"Good morning, Mister Heller!\" She nodded to the pan. \"Thought I'd fix you some breakfast before I go. You need to eat right and keep your strength up.\" She ran her gaze up and down my naked body. \"Especially if you're going to strut that fine body around naked in front of me.\"\n\nI felt myself blush to hear her describe me like that. At fifty-two, I wasn't in bad shape...playing racquetball two or three days a week and always taking the stairs. I'd kept my potbelly at bay, but 'fine naked body?' Breanna plated what appeared to be French Toast on two plates and sat them down at the small kitchenette table and then came to me and kissed me, her tongue slipping into my mouth with amazing familiarity.\n\nEnding the kiss, she led me to the table and we ate -- in silence for a few minutes before I finally spoke, unsure of what to say. \"So...what happens next? Was this a one time thing, Breanna or are we something more.\"\n\nBreanna dropped her fork in her plate and rested her chin on a fist, smiling mysteriously at me for a minute. \"I hope we're not a one time thing, Mister Heller,\" she finally said. She reached across the table and stroked my face. \"I won't say it's love and happily ever after, but...\" She sighed and said, \"I'm probably not a one man woman, but I hope we can have each other in each other's lives.\"\n\nI nodded and started to say, \"I understand...there's Jesse. I don't want to ruin...\" \n\nFor the second time at the mention of her boyfriend's name, she shushed me with her finger on my lips. \"Jesse and I are done. One night with you had made that clear. He and I are...going different directions.\" Breanna shook her head. \"No, I just mean -- I want us to be lovers, Mister Heller...for now.\"\n\nI could see that she didn't quite have the words for what she felt and I understood that. I was smitten with her as well...more love than lust, but whatever it was -- we had a bond that could not easily be ended.\n\nShe glanced up at the digital clock on the stove and winced. \"I better get a move on if I'm not going to be late.\"\n\n\"You have to go?\" \n\nBrianna smiled and nodded. \"I work in the hospital every other weekend...part of my training.\" She stood up and then leaned down and kissed me. \"And I'm pretty sure my favorite teacher wouldn't approve of me skipping my education. Finish eating, Mister Heller.\" She slipped by me as I sighed...both wistful and proud of this magnificent young woman.\n\nI finished my food -- Breanna was a good cook. I returned to the bedroom to see Breanna dressed -- back in her blouse that left her shoulders bare and jeans back on and zipping up her boots. She grinned at me and said, \"I couldn't find my panties, Mister Heller. Consider them a souvenir of a lovely, naughty night.\"\n\nHer gaze hung about me, gradually working down to where my penis was already semi-hard and swelling -- responding just to the young woman's natural sexiness. \"You are a sexy man, Mister Heller,\" she sighed. She looked around, her eyes coming to rest on the alarm clock on the bedside table. Breanna looked back around at me and grinned mischievously. \"I reckon we have time if we're quick about it!\" She crooked a finger at me and whispered throatily, \"C'mere, lover!\"\n\nI walked towards her and she opened her mouth wide, still crooking a finger at me. I couldn't believe this was happening, but walked my cock to her waiting lips, groaning as Breanna closed her lips around the head of my erect penis. Her tongue, so sweet and succulent in my mouth was a touch of an erotic heaven as it rolled across my turgid flesh.\n\nHer hands, strong and knowledgeable clamped down on my ass cheeks, providing leverage as she took me deep into her mouth, her full, sensual lips pure ecstasy on my flesh. Breanna's lovely blue eyes stared up into my face as she sucked my cock -- conveying delight and pleasure reflecting the delight and pleasure in my face. Breanna was a source of wonder...the like of which I had ever known. Yes, Lisa and I had had our passionate moments, but in almost thirty years of marriage, I never remembered her ever having reveled in the acts of sex like this young woman -- even when we had been Breanna's age.\n\nI resisted the urge to cum as best I could -- her mouth, tongue and lips were that sweet, but Breanna was on a schedule and she used her mouth, her tongue and her lips like an artist, moaning with her mouth full of cock as if it were heaven itself...sounding sexy and obscene and then I knew I was surrendering and I moaned, \"Breanna...I'm cumming!\"\n\nShe beamed up at me, sucking me all the harder and then I was cumming, feeling her tongue rolling around my cock head as I filled her mouth with thick, hot streamers of semen. Breanna moaned approvingly, her cheeks hollowing as she sucked me all the more intently as she gobbled my fresh seed. I felt dizzy -- my climax was so powerfully and steadied myself with my hands planted firmly on her graceful shoulders.\n\nBreanna sucked me until I was dry, her mouth making me shake with pleasure that quickly became so intense it bordered pain. Finally, she let me slip from between her lips. \"You're delicious too, Mister Heller. This just gets better and better.\" She stood up and we hugged as she kissed me, sharing the taste of my sperm with me. I was surprised to find her nasty action rather exciting. \n\nWe kissed for several minutes until she broke the kiss with a frustrated moan and said, \"I really have to go, Mister Heller!\" She pecked me on the cheek and I walked her to the front door, hiding behind it discreetly when we opened it.\n\n\"When will I see you again?\" I asked, wincing at the almost pleading tone in my voice.\n\nBreanna turned and grinned at me. \"You just never know when I'll turn up, Mister Heller...or where!\" She kissed me and then was out the door, leaving me trying to sort out my feelings at the whirlwind events of the last several hours.\n\nI spent the rest of the weekend expecting to hear her knock at the door at every moment. For a few hours, I was too distracted to do anything except think about my former student...wrestling briefly with the idea that I had violated some code by fucking a former student, but in the end understanding that we were both adults who'd made love...who'd fucked by mutual consent.\n\nI was surprised that I was able to refocus on my work with more ability to concentrate than in several days and made some tremendous progress on my thesis, engaging in my studies with literally a song in my heart.. True, I was a little disappointed that I didn't hear from Breanna that weekend or the next few days. As I traveled the campus, I expected to see her at any moment.\n\nI was in the UC caf\u00e9 again late in the evening the following Thursday and absorbed in an account of an early bourbon maker I'd found in the library when I felt a soft hand on my neck and then Breanna's sweet breath on my cheek before she said, \"Hello, lover!\"\n\nI looked up to get a brief glimpse of Breanna's lovely face before she kissed me on the mouth, her tongue between my lips and kissing me passionately for a long minute, drawing some amused and not so amused stares from the few folk present, no doubt wondering why a lovely young woman was French-kissing a man old enough to be her father. Breanna looked breathtaking -- wearing a skintight black sweater and a plaid skirt with black stockings and her leather jacket completing the ensemble.\n\n\"Hello, beautiful!\" I murmured, savoring the taste of her on my lips.\n\nShe ruffled my short black hair that was slightly peppered with silver. \"Walk a girl to her car?\" she said in a flirtatious tone.\n\n\"Hell, yes,\" I said, standing up and kissing her again, not really caring what those around us thought.\n\nThen we were walking across a long lot -- moving to the far side where I finally saw her car in shadows, far from any security lights. Breanna's arm was laced through mine and her head was on my shoulder as we made our way slowly towards her vehicle. \"Miss me?\" she finally said.\n\n\"Every hour...every day,\" I replied. \"And every night...especially the nights.\"\n\n\"I missed you too, Mister Heller,\" she said. \"A lot.\" She nuzzled my neck and I felt goosebumps rise up on my skin that were not caused by the chilly fall evening.\n\n\"You know, Breanna...you can call me John if you like,\" I said.\n\nShe chuckled and said, \"I know...I've practiced saying it, but it just doesn't work. You're Mister Heller...my teacher that I just fell head over heels for in high school and you'll always be Mister Heller.\" She lifted her head and kissed me on the lobe of my ear and whispered, \"Just saying 'Mister Heller' makes me wet!\" We stopped behind her car and she shifted around to face me, her arms around my waist.\n\nI looked at her mischievously grinning face and replied, \"Really?\"\n\nBreanna nodded and said, \"Really...let me prove it to you, Mister Heller!\" She walked us backwards until she bumped into the trunk of her aged Honda and then took my hand and guided it down between her legs even as she used her free hand to lift her plaid skirt. \n\nI groaned as my fingers brushed first her full and trimmed bush and then found heat and wetness...her labia already spreading with arousal. \"No panties, Breanna?\" I said hoarsely. \"What's up with that?\"\n\nShe giggled and said, \"I took them off in the restroom after I spotted you in the cafeteria. They're in my purse.\"\n\n\"Why?\" I said, trying not to laugh, feeling myself growing hard.\n\n\"Breanna shrugged and looked at me with a feeling that both melted my heart and made my cock throb with sudden urgent need. \"I thought my teacher lover might want to fuck his former student out here in the parking lot.\" Her hands dropped to the fly of my khakis and tugged the zipper down. She bit her lip as my middle finger slowly circled inside her very wet pussy. \"In fact, I insist you fuck me right now, Mister Heller!\"\n\nI opened my mouth to protest, but suddenly Breanna's lips were firmly pressed against mine -- her tongue pursuing mine while her fingers deftly captured my hardening cock and freed it, stroking it to keep it hard in the cool autumn air. I wanted to tell her we could go back to my apartment or go somewhere indoors, but instead, I found myself being guided by this reckless young woman -- led to move forward, slightly bend my knees as I stepped between her now wide spread legs and then I was moving into her as she dipped down a little and I was in her...my hard, throbbing cock sliding deep into her hot, molten wet cunt as she broke the kiss and moaned, \"Yessssss! Just like that, Mister Heller!\"\n\nSlowly, I began to fuck Breanna -- rocking into her as she braced herself against the trunk of the Honda, her legs wide apart, feet planted firmly on the pavement, accepting my thrusts, meeting them with glorious little movements of her pelvis. We had our arms around each other in a passionate embrace, staring into each other's eyes as we fucked in the shadows, hopefully appearing to anyone passing by as merely kissing.\n\nBreanna stared at me, her mouth a little slack and open, breathing heavily as we fucked, her expression sliding effortlessly between pleasure and need and carnality as orgasm teased her with its near presence, growing stronger each time cock and pussy joined and became one for sweet, agonizing seconds.\n\nEach time Breanna's pleasure threatened to make her scream, she kissed me, her moans of ecstasy muffled as our tongues danced and played. She hugged me tight as her breath quickened and my thrusts became more urgent as she whimpered, \"Yes, yes, yes...oh, fuck me, Mister Heller!\" Then she was kissing me and her whole body was shaking and she lunged herself at me, one leg rising up behind mine for leverage as she began to orgasm...her pussy bathing my cock in her hot creams and then I growled and thrust upwards and began to cum inside her and we were kissing to squelch our cries of passion as I pumped hot semen into my young lover's cunt.\n\nI'm not sure how long we clung together, arms wrapped around each other as Breanna's pussy squeezed and milked my cock for as much sperm as I could offer. We kissed and reveled in our moment of carnal ecstasy until finally, my cock shrank and slipped free of her clasping lips.\n\n\"Fuck, Mister Heller...I can't believe how good it feels when you cum inside me!\" Breanna gasped as she leaned against the car trunk, taking deep breaths of air.\n\nI shivered as my overheated body began to suddenly become aware of the chill air. \"I can't believe you and I just....here in this parking lot!\" I shook my head in wonder. \"I've never met anyone like you, Breanna...you make me feel like a teenager again!\"\n\nBreanna giggled and replied, \"I bet you were a fuck monster when you were my age, Mister Heller.\" She started to say something else, but her eyes were drawn to my crotch where I was fumbling to put my cum covered semi-erect penis back into my pants. With graceful swiftness, my young lover suddenly was squatting in front of me, saying, \"Oh no, Mister Heller...let me take care of that.\"\n\nI gasped as I felt her full, luscious lips suddenly wrapping themselves around my cock...her tongue busy as it licked my cum coated penis...cleaning me of our mutual creams before she gently and lovingly tucked my cock back into my khaki pants. With an ease I envied, Breanna stood straight up, her arms again encircling my waist. \"Didn't need to put your lovely cock back without cleaning it up first!\" she said teasingly before kissing me, sharing the taste of pussy and semen with me.\n\nWhen she released me and stepped towards the driver's door, I said, \"And what about you...I think I left you with a bit of a mess.\"\n\nBreanna grinned at me as she unlocked the door and opened it. Her free hand slid up under her dress, drawing it up before lewdly caressing her just fucked pussy. A finger slid between her still swollen labia and she brought it up, glistening it the faint light of the parking lot. \"Don't worry about me...just a nasty little snack for the ride home!\" She sucked her finger clean and winked at me before slipping into her car. \n\nThe young woman fired up the motor and then rolled her window down. I stepped up and bent down. \"Breanna...when will I see you again?\"\n\nBreanna leaned out the window and kissed me, her tongue again sharing with me the taste of our coupling. Ending the kiss, she giggled and said, \"You just never know about me, Mister Heller. I'll just show up...you never know when...or where.\" She playfully stuck her tongue out at me and said, \"I will tell you this, teacher-love of mine...next time will be extra special...it will be a surprise!\" She winked again and said, \"Conserve your strength, Mister Heller, you're going to need it!\" \n\nBreanna rolled up the window and then was gone -- her little Honda racing across the lot and out of sight. It was long walk to my car, but a pleasurable one as I relived the last several minutes...again amazed at how my former student was suddenly turning my life upside down!\n\nAgain, despite constantly being distracted by thoughts of Breanna, I found that in the aftermath of our lovemaking, my mind seemed wonderfully clear and Friday and all day Saturday were very productive days as I made progress on my thesis. As the sun went down, I pushed back from my little kitchenette table, feeling some sense of accomplishment and was considering whether to go out for some Chinese takeout or order a pizza when the doorbell rang.\n\nImmediately, I felt my heart begin to beat faster as the image of Breanna popped into my head and I hurried to open the front door only to stare in open mouth surprise. Yes, it was Breanna, looking incredibly beautiful in tight blue jeans and a very low cut and tight sweater along with her leather jacket, but...she wasn't alone. Her arm was around another young woman...shoulder length blonde ringlets framed an elfin face with a pert nose and blue eyes and moist, perfect lips. She was wearing a snugly fitting light blue sweater dress that molded itself to her very shapely body and ended at mid-thigh, accentuated by black boots...what we would have called 'go-go' boots back in earlier times. She was several inches shorter than Breanna -- maybe five foot-five inches tall, evoking a sort of erotic \"Mutt and Jeff\" appearance.\n\n\"Hi, Mister Heller,\" cooed Breanna. \"You do remember Lauren?\"",
        "I'm sure my mouth opened and closed, trying to form appropriate words, but before any sounds came out, the young blonde woman squealed with glee and rushed forward to hug me, her arms reaching up around my neck to pull me against her even as she ground her lush body against me! \"MISTER HELLER! I'M SO EXCITED TO SEE YOU!\" she screamed into my ear with what most would view as excessive glee, but which seemed normal as memories of another former student came to the fore.\n\n\"Lauren...my goodness...Lauren. You haven't changed a bit!\" I stammered, recalling the exuberant cheerleader of several years ago...always excessively cheerful and positive, greeting everyone and everything with an enthusiastic smile as if they were her most favorite person or thing in the whole wide world.\n\nSuddenly we were all three inside with Breanna shutting the door as Lauren Cunningham hugged me again, planting a sloppy kiss on the corner of my mouth as she squealed, \"I've been absolutely dying to see you since Breanna told me you were here at UK!\" while her body undulated against mine.\n\nBreanna casually shrugged off her jacket and dropped a six pack of beer on the coffee table and then inserted herself between me and Lauren, giving the shorter woman an amused glance and saying, \"Pace yourself, Lauren...it's going to be a long night.\" Breanna turned and planted a long and passionate kiss on my lips, wetly and openly offering me her tongue and making sure the former cheerleader could see our tongues slipping in and out of each other's mouths.\n\nWhen we finished, Breanna's taste thick on my tongue, Lauren had backed up a few feet and was staring at us with hungry and amazed eyes. \"OMIGOD!\" she nearly shouted in a somehow awestruck tone. \"You two are...Bree...you -- you -- you and Mister Heller...\" She paused and shook her head and then began to grin at us. \"Mister Heller, you really fucked Breanna Howell! OMIGOD!\"\n\nI felt myself blushing a little while Breanna untangled herself from me and went to Lauren and said, \"Yes, he has, honey and if you don't pass out from all the excitement, he might fuck you too!\" She kissed the blonde woman then, hard and possessively, her hands on Lauren's shoulders. Breanna ended the kiss with a playful lick of Lauren's lips and then glancing over her shoulder at me, said, \"I think we all need to sit down and have a beer.\"\n\nBreanna steered Lauren to the couch and then sat down, keeping a space between them open. My recent lover patted the cushion and said, \"Come have a seat, Mister Heller!\"\n\nI eased between them, feeling a little shy suddenly as both women scooted towards me a little -- Breanna resting a hand possessively on my upper thigh while Lauren sat so close, I could feel her covered breast which felt substantial, brush against my arm. Breanna passed out bottles of beer and we all took a few sips, remaining silent as we looked at each other...me feeling shyer and more awkward than I had in many years while Breanna looked at me with smoky, hooded eyes and Lauren looked at both of us with something akin to child-like awe.\n\nAfter a few odd minutes of tension filled silence, I managed to croak, \"So...you two...\" only to be interrupted as Lauren leaned forward, her hand coming to rest very close to where my semi-erection was beginning to throb.\n\n\"Omifucking God, Mister Heller, you would not believe how many of us wanted to fuck you back in High School!\" She leaned forward till her face was scant inches from mine, her breasts flattening against my side and chest as she stammered, \"You were...God, you were the hottest teacher we ever had. I think everyone on the basketball cheer squad masturbated to the fantasy of fucking you!\" She paused to take a deep breath, her face full of earnest intent as she blurted out, \"God, Mister Heller, you will fuck me, won't you?\"\n\nI turned to look at Breanna who was staring back amused. \"You should kiss her now, Mister Heller...otherwise, she'll just keep talking!\"\n\nI turned back to Lauren, still trying to process the possibility of doing anything remotely sexual with another student, only to find Lauren's lips pressing against mine -- her tongue eagerly making its way into my mouth. She gave a little squeal as her tongue encountered mine and I perceived that Breanna hadn't exaggerated as Lauren truly had a serpentine tongue that seemed to curl around my own, wrapping my tongue with moist, plump flesh that seemed to taste faintly of mint.\n\nOur arms went around each other and we hugged tightly as we kissed, tongues dancing intimately as I felt Lauren's breasts pillow against my chest...her nipples hardening to betray the fact that she wasn't wearing a bra under the thick material of the sweater. I could feel her heart, beating rapidly, providing a counterpoint of sorts to her heavy breathing. Lauren slipped a hand under my sweatshirt and caressed my chest, pausing to tease a pebbled nipple before trailing fingertips back down over my not quite flat stomach and then up and over my jeans to explore the bulge she found there, moaning her approval against my lips.\n\nAt some point, I felt weight shifting and without seeing her, realized that Breanna had left the couch and I could hear rustling on the coffee table, but Lauren's lusty mouth dominated my attention and I tried to match the almost scary energy of her snake-like tongue as we kept kissing. Finally, I felt Breanna's hand on my shoulder just before she said, \"Come up for air, you two...important business first, fun later.\"\n\nI broke the kiss, seeing Lauren's lower lip pooch out in a mock pout -- her eyes still bright and excited with lust. Turning, I found Breanna standing beside me...now wearing only her low cut T-shirt and a high cut pair of French bikini panties, reminding me of how splendid her long legs were. She held out to me a beer in one hand and in the other, a little orange pill. \"What's this, Breanna?\"\n\nShe smiled and putting one knee on the couch, leaned in to me until our faces were just inches apart. \"Have to be serious for a moment, Mister Heller. Any health issues I should know about...any heart problems?\" Her smile grew a little, becoming something sexy and naughty \n\n\"Um...my doctor says I need to lose ten pounds and get more exercise, but that my ticker is in tip-top condition,\" I said in reply. I glanced down at the pill resting on her extended fingers. \"Isn't that supposed to be blue?\"\n\nBreanna looked at me with evil glee and said, \"You're thinking of the standard variety...this is the new industrial strength party version. You combine this with Lauren and me and well...you are definitely going to get your exercise.\" She brought the pill to my lips and I let her place it on my tongue and I swallowed it with a couple of sips of my beer, followed by a cock swelling kiss from my former students -- first Breanna and then again, Lauren.\n\nEnding the kiss, Lauren looked at me and said, \"You are going to fuck me, aren't you, Mister Heller?\"\n\nI could only nod while Breanna stood up again and reaching down to Lauren, pulled the blonde woman to her feet. \"Patience, sweetheart,\" Breanna said softly, stroking Lauren's face with her fingers. She glanced at me and said, \"First we need to let the magic pill get into his system, so...\" Breanna's hand slipped down and cupped Lauren's sweater covered tit. \"Maybe you and I should give Mister Heller a little show and...get ourselves a little hot and bothered in the process!\"\n\nLauren giggled and looked at me -- her face blushing as Breanna casually reached down and tugged the sweater dress upwards and over the blonde girl's head, leaving her wearing only her go-go boots and a blue g-string. Her breasts were...magnificent...not nearly as big as Breanna's, but on her smaller body seeming huge...round and perfect, long dime sized nipples engorged with blood in her arousal. She shifted nervously on her feet, hands fluttering as if wanting to hide her nakedness as her face grew bright red. I found her sudden modesty both charming and erotic.\n\nSuddenly, I realized that the coffee table had been pushed away from the couch and that Breanna had retrieved a quilt from by bed and had spread it out on the floor. Kneeling on the edge of the quilted blanket, Breanna faced Lauren and helped her pull off her boots, revealing small, dainty feet with pink painted toenails. \"Lauren, why don't you help Mister Heller get a little...comfortable.\" Breanna practically purred.\n\nLauren giggled and came over, her breasts hanging provocatively as she bent over me and expertly undid my belt and began tugging my jeans off me, pausing only to hook her fingertips under the waistband of my shorts and pull them down too as I lifted my hips so she could finish her effort, smiling nastily at me as she casually tossed my clothes away. Then her eyes focused on my erection, sprouting out of my pubic hair and she reached out to grab it with one hand.\n\n\"Mister Heller...OMIGOD...I'm holding my teacher's big dick in my hand!\" Lauren looked at it and then up into my face with unadulterated lust and groaned. \"I want this inside me...NOW!\"\n\nI thought she was going to climb into my lap there and then, but Breanna reached out with a finger extended and hooked it through the waistband of Lauren's g-string and pulled her back...making the blonde woman gasp as she experienced a bit of what I assumed was a pleasurable wedgie. \"Lauren, I said we need to give Mister Heller a little time,\" she said in a mocking but stern voice. She turned Lauren around and brought her to her knees, still taller than her, but closer now to being face to face. \"Besides, you know I have what you need.\"\n\nLauren purred and giving me a momentary glance to confirm I was watching, replied, \"Fuck yes...you do, don't you?\" The two women kissed...a long and unhurried kiss between two very familiar lovers. I watched with pure awe -- not quite believing that two of my former students were locked in a Sapphic kiss -- their tongues making love as their hands roamed over each others bodies. My cock throbbed at the erotic sight, almost slapping my belly, it was becoming so hard.\n\nWhen the kiss ended, both woman were panting with excitement and Lauren roughly pulled Breanna's shirt off over her head, freeing her lovely breasts and then the young blonde ducked her head down and began tonguing Breanna's swollen nipples. My lover looked over at me and in a breathy voice, \"Y'know...it was the beginning of our sophomore year here at UK that we ran into each other the first day of American Lit...and afterwards, we went off for coffee and...\" Breanna laughed, a deep, throaty laugh of the kind that made you feel good. \"Y'know...God knows I had the rep back in Jonasville as a weird, semi-dyke Goth slut, but who the hell knew that a cute little cheerleader was a bigger lesbo than I was?\"\n\nLauren came up quick and kissed Breanna hard and quick, nipping at her lower lip. \"What she means, Mister Heller, is that I made a pass at her first!\" Her hand slipped under Breanna's panties, making the dark haired girl moan. Lauren wriggled her hand around in Breanna's crotch and said, \"And who the hell knew that the naughty Goth slut had for years had a secret crush on the cheerleader?\"\n\nBreanna kissed the blonde girl again and muttered, \"Bitch,\" as she thrust her hand into the crotch of Lauren's panties.\n\nLauren's head fell back as Breanna's fingers found their way into her pussy, purring, \"Slut!\" Then Breanna was pushing her onto her back, fingers emerging wet and shiny to roughly tug Lauren's panties off, leaving her naked on my living room floor. Lauren was, three years past High School, still in possession of a cheerleader's body -- legs and arms still athletically muscled...her skin sporting a slowly fading summer tan. As she parted her legs as Breanna playfully tossed the blonde's panties my way, I could see soft, whitish tufts of pubic hair vainly concealing her wet pussy and confirming that she was a true blonde.\n\nLauren let out a soulful cry as Breanna buried her head between the cheerleader's thighs, her tongue lashing and spreading the wet, slick lips to reveal glistening pink cunt flesh. The young blonde woman writhed under Breanna's talented mouth for several minutes while I resisted the ever growing urge to masturbate...precum dripping from the tip of my aching cock. \n\nSuddenly, in the middle of what I assumed was a bout of orgasmic ecstasy, Lauren leapt up onto her knees, kissing Breanna's pussy drenched lips before the two women seemed to aggressively wrestle for several moments -- both struggling for some kind of dominance in the midst of making love. Youthful, firm breasts were sucked and nibbled on...pussies were fingered, passionate kisses exchanged and then Breanna was on her back with Lauren between her long, askew legs, holding Breanna's panties up in triumph.\n\nNow it was Lauren's turn to lick the other woman's wet cunt and she dove in, sparing me a naughty glance and gasping, \"God, Mister Heller...I do love a hairy pussy, don't you?\" before slithering her tongue between Breanna's labia, making the dark haired girl hoot and grunt as she added fingers below her long, probing tongue with the knowledge of a long time lover. It was a carnal wonder to watch Breanna squirm and buck, completely at the mercies of Lauren who tortured her so sweetly with her long, snaky tongue.\n\nIt didn't take long for Breanna to start making moaning noises that I was coming to recognize as omen of impending orgasm, but even so, I was stunned when she suddenly bucked her pussy up against Lauren's face as her cunt seemed to spasm and then ejaculate pussy juice into the cheerleader's face. In all my life, I'd never actually see a woman orgasm so hard that she actually ejaculated her creams and it was everything I could do to not cum at that moment.\n\nIn the waning moments of Breanna's orgasm, Lauren sat up, laughing child-like with sheer pleasure, her face literally dripping with Breanna's juices. Breanna used the respite to renew the wrestling match, kissing the blonde haired woman hungrily, smearing her own creamy goodness on her face before the two fell into a sixty-nine with Lauren on top, her body stretching sinuously like a jungle cat's as the two women pleasured each other.\n\nAs my own need to orgasm receded (just barely), I became aware of the sweet and pungent scent of pussy filling the air, making my nostrils flare and my pulse quicken at the carnal scent. My erection was throbbing, my cock actually waving and slapping my stomach, demanding attention. I focused on the two lovely girls, tonguing each other and fingering each other, muffled cries rising with each passing moment until finally they exploded together, screaming as they hung on to each other in the storm of orgasm.\n\nLauren collapsed on top of Breanna, her face nuzzling the other woman's wet pussy, soaking her face in Breanna's hot and creamy juices. For a few seconds, there was little noise except for three people breathing hard and maybe my heart beating madly with excitement...my two former students' naked bodies entangled after making love was a rare erotic sight.\n\n\"I think...\"Breanna wheezed. \"I think we need to give Mister Heller a little relief, baby!\"\n\nLauren raised her head up, blonde curls damp with sweat and pussy and grinned. \"About fucking time, Bree!\" she moaned as she slithered off the dark headed girl's body and crawled towards me on all fours. She licked her lips in a lascivious manner as she approached me. \"I want to suck Mister Heller's cock!\"\n\nAs Breanna laughed and rolled over to come up on her hands and knees, Lauren reached me, her hand shooting out to wrap fingers around my cock as she levered herself up and planted a wet, messy kiss on my lips, her tongue and mouth sharing with me the sweet taste of Breanna's wet cunt. Lauren broke the kiss after a few long moments and said, \"Did you ever fantasize about me doing this to you, Mister Heller?\" as she eased herself down and took me into her mouth.\n\n\"Yessssssss!\" I groaned, both replying to her question and signifying my approval of how good my cock felt in the young blonde's mouth. Lauren looked up at me with her big blue eyes as her cheeks hollowed while she slowly slid her lips up and down my erection, her tongue doing almost supernatural things as it slithered over my shaft and seemingly encircled my swollen head. \n\nBreanna knelt beside her, her eyes shifting back and forth between the cock sucking Lauren and my face watching us with lust and envy and not a small amount of amusement. She eventually leaned in and ran her tongue over my saliva coated shaft and then her and Lauren's lips met -- converging over the tip of my cock and I nearly exploded at the sensation of having not one, but two young women's tongues pleasuring me.\n\nThen Breanna was climbing up on the couch, kneeling next to me and kissing me -- almost startling me with the taste of Lauren's wet pussy still on her lips and tongue...sweet and powerful, yet different from Breanna's own taste. When she released me from her lusty kiss, she whispered, \"Now, Mister Heller, you have a big decision to make.\" Breanna had a broad, naughty smile on her face.\n\n\"Oh yeah?\" I gasped as Lauren sucked me hungrily.\n\nBreanna nodded and said, \"Now, Lauren here is a champion cock sucker...I think that they learn that at Cheerleader camp along with everything else. You're maybe a minute or two from cumming...the question is, do you want to cum in Lauren's mouth or on her face?\"\n\nEven in the middle of having my ex student -- the blonde cheerleader -- masterfully licking and sucking my cock like a dream come true, Breanna's statement made me moan in surprise. Breanna leaned in closer, her lips almost touching mine and said softly, \"It's okay to cum on her face...Lauren likes it and lets be honest...\" Breanna gave me a conspiratorial wink. \"There's not a red-blooded American male alive that doesn't want to cum on a cute, blonde cheerleader's face.\"\n\nBreanna's words alone did the trick and I cried out as the floodgates shattered and I cried out, \"CUMMMINGGGG!\" Lauren deftly had me out of her mouth, thumb and forefinger around the base of my shaft and stroking me as the first hard spurts of hot semen exploded from my cock and splattered her face.\n\n\"YES, MISTER HELLER! SPERM MY FACE!\" Lauren squealed as she stroked me, spurring on ejaculation after ejaculation of jets of thick, whitish sperm that showered her forehead, splashed across her nose and cheeks, and covered her lips and chin. She laughed like a little girl having a birthday party as for a few moments, I wondered if I would keep cumming like that all night.\n\nBreanna giggled and kissed me and said, \"And here is the best part!\" before slipping off the couch to kneel at Lauren's side, her hands holding the blonde girl's face firmly as she began licking my semen off her face, smearing my thick heavy blobs of seed over Lauren's lips as she would pause to kiss her sloppily now and again.\n\nBreanna licked Lauren's face clean and then as both cast sly glances my way, kissed, making sure I could see their tongues swapping my semen back and forth between them. My cock which had slowly begun to flag after climax rose again and I was amazed as it nearly slapped my stomach, stimulated by their lewd display of lovely lust and no doubt by the magic of chemistry and by my own suddenly tremendous lust. \"Ladies, let's go to bed...now!\" I said solemnly in my best stern teacher voice.\n\nBreanna giggled and Lauren stared at me wide-eyed as she shivered, naked before me. \"Oh God, Mister Heller...you doing that teacher thing with your voice just made me cum!\"\n\nThen we were tumbling about on the bed, both girls playfully wrestling with me as I stole kisses from each of them, my hands finding breasts -- delighting in the difference between Breanna's larger and firm breasts and Lauren's also substantial and perky tits. I allowed them to roll me on my back -- one kissing me and then the other. Then Breanna kissed her way down my body and slipped my erect cock into her wet, warm mouth while Lauren climbed onto my chest and squirmed forward until my tongue was buried in her slick, sparsely haired pussy -- her juices pouring into my open mouth, spurred on by my tongue busy exploring her silken and creamy depths...savoring the taste of the young cheerleader's cunt.",
        "Breanna's hands caressed my stomach and thighs as she easily took my whole length down her throat, noisily sucking my cock, her tongue a whirling dervish swirling around the head of my dick. As she made exciting, lewd sounds, matching and then surpassing her were Lauren's cries of pleasure as I teased her swollen and slick labia with my tongue -- probing between them into her wet flesh and then swirling my tongue through her wrinkled folds to tease her swollen clitoris -- slender and long upon emerging from its hood.\n\n\"LOVE-LOVE YOUR TONGUE, MISTER HELLER!\" Lauren squalled as she bathed my face with her juices, her pubic bone banging frantically into my face as she bucked her pussy against my mouth before sliding down a little - away from the sweet teasing of my tongue. \"Goddamn, Mister Heller...you can sure eat pussy!\" she said, her East Kentucky drawl coming out as she slid a little further. \n\nShe leaned forward and kissed me, sharing her sweet taste with me while Breanna let me slip from between her lips and after planting a gentle, loving kiss on the tip of my cock, said, \"All yours, Lauren!\" I felt the mattress shifting as she climbed up and stretched out alongside me.\n\nLauren purred with pleasure as she slowly slid down my body, leaving a trail of pussy juice as she snaked her way towards my cock. Her voice was thick with emotion as she said to me, \"Mister Heller...I have had such a daddy thing for you like forever!\" A dim memory of a student review echoed the fact that Lauren's parents had long ago divorced and the father had been out of her life since. \"I used to dream that you were my daddy, Mister Heller, and...\" A wicked smile spread over her face as she continued, \"And then, I dreamed you were my daddy fucking me and that you were my daddy-teacher lover fucking his naughty, cheerleader daughter and I used to cum so hard imagining that.\" She was breathing hard and shivering with anticipation. \n\n\"Do you...do you think you can make my daddy-teacher fantasies come true, Mister Heller?\" Lauren asked as her labia met my upright and throbbing erection. She slowly rolled her hips so her pussy lips massaged and kissed the length of my cock as she whispered, \"Can you make my dreams come true, Mister Heller?\"\n\nIn answer, I reached out and put my hands on her waist and then feeling more flexible and strong than I had in a long time, rolled us over so that I was on top, my cock nestled between her swollen labia. \"Lauren,\" I said in my sternest teacher voice. \"Daddy's going to fuck you and make you scream.\" Then I felt Breanna's hand on my cock, placing the head between Lauren's creamy lips and with a growl, I thrust forward, reveling in hearing Lauren shriek with pleasure as I buried my cock into her furnace-like cunt in a single stroke!\n\n\"MISTER HELLER!\" Lauren cried out as her body convulsed beneath mine -- her back arching reflexively as I ground my crotch against her wispy blonde muff. Her fingers clawed at my back as I felt her athletic legs scissor around my back, attempting to cross her ankles, but unable to do so because the pleasure was so intense. Lauren's pussy tightened around my cock and my mind swirled as I realized I was living one of my most cherished and secret fantasies...fucking my former student and cheerleader.\n\nI thought I might have to exert more control to not cum...that the moment was too carnally erotic to withstand climax, but I felt more in control than I'd ever felt before...I felt like a young bull capable of fucking all night. Maybe it was the magic of Breanna's drug...maybe it was the magic of Breanna and Lauren, themselves. In any case, I began to fuck my new young lover, slowly at first and then faster, reveling in the sweet ecstasy that was her tight, hot and wet pussy.\n\nI carefully watched Lauren's face, seeing which movements brought the most pleasure to her face. Her cries of, \"Daddy...fuck me, Daddy!\" and \"Yes, Mister Heller, fuck your naughty little girl!\" spurred me on and her eyes alternated between lust and delight as our bodies slammed together. We kissed wetly, madly until she began to yelp with pleasure and then as orgasm hit her, Lauren became a wildcat under me -- almost bucking me off of her before her heels dug into my ass cheeks and her arms wrapped around me and pulled me in -- hands pressing my face against her left breast, my mouth sucking at a long, hard nipple as she wailed and sobbed in carnal joy. Lauren's hips undulated wildly, forcing her pussy to fuck me while I simply kept myself pressed against her.\n\nI spared Breanna a glance only to find her watching us with open-mouthed glee, her lovely eyes alight with lusty delight as she slowly masturbated -- fingers swirling around inside her cunt while her thumb teased her large, swollen clitoris. She caught me looking at her and blew me a kiss and then winked.\n\nLauren suddenly seemed to relax, her legs falling away from me and she cooed, \"Fuck, Mister Heller -- if I'd known how good you were in bed, I'd broke some laws back in high school!\" Her pussy pulsed around my cock and I began to thrust into the young woman again, but she exploded with energy and I found myself being rolled over, Lauren keeping my cock snugly inside her sex and then she was squatting on me -- her well defined leg muscles swelling a little as she seemed to be perfectly balanced atop me. \"My turn, Mister Heller,\" she snarled with an evil grin. \"I'm going to fuck you crazy!\"\n\nThe blond vixen made good on her words, becoming suddenly an avatar of sex maddened goddess as she began to ride me, bouncing up and down on my cock and sobbing wordlessly each time she impaled herself on my throbbing, stiff erection. Lauren was a thing of beauty as her cheerleader reflexes seemed to keep her perfectly position as she fucked me -- her large breasts bouncing just a little as only youthful, firm breasts can and her hands roamed through her blonde locks, her skin gleaming with that special sweat one only gets from intense sex!\n\nBreanna leaned in and kissed me, her tongue dancing with mine for a moment before she moved to her knees and somehow managed to kiss Lauren without the cheerleader's body slowing down for a second. Then Lauren broke the kiss and moaned, \"CUMMINGGG, MISTER HELLER!\" She collapsed to her knees, her weight driving my cock deeper into her womb as her pussy bathed my cock in hot creams. \"I LOVE FUCKING YOU, DADDY!\" she sobbed as she fell forward, her large breasts pillowing out against my chest, only her hunching pelvis seeing to work as she quivered and shook her way through a second orgasm. \n\nEventually, Lauren calmed down and rose up, still impaled on my hard penis and looked down at me with an odd, glassy-eyed expression. \"I like your cock, Mister Heller,\" she said with child-like reverence and then she rolled off me, her pussy making a wet, obscene sucking noise as she released my cock from her cunt. \"Timeout,\" she said meekly as she lay beside me, her magnificent breasts rising and falling as she tried to catch her breath.\n\nFrom the other side of my bed, Breanna was suddenly up again and throwing one long and shapely leg over me and then we were both groaning with pleasure as Breanna's hot pussy enveloped my cock. \"My turn, Mister Heller!\" she said in a purposeful voice. She began to ride me as she leaned forward until her face was just above mine. \"Mister Heller, I could fuck you forever!\" she whispered before kissing me hungrily.\n\nAs we kissed and clung to each other as she worked her hips up and down to meet my upward thrusts into her hot, wet cunt, I suddenly became aware of something. As sweet and erotic as fucking Lauren had been...there was something more with Breanna -- a connection or energy that had been missing with the blonde cheerleader. There was something so...perfect in being inside Breanna, feeling her skin slid wetly against mine as her pussy pulsed around my cock. Even our kisses seemed more...intimate, more passionate as our tongues dueled and danced around each other. The taste of Breanna's mouth, her sex filled scent touched me on a deeper and more personal level than Lauren.\n\nBreanna moved atop me as if we'd been lovers for years or decades instead of this being the third time we'd gotten together -- her womanly body knowing me and my likes in ways that only enhanced our fucking. For me, knowing how to twist my hips or plunge my cock into her just so to give her more pleasure seemed to come to me on an instinctual level. We fucked not as two sex maddened creatures, but as one organism, perfectly melded together -- cock to pussy and lips to lips.\n\nI was lost in the pleasure of Breanna's slick pussy squeezing my cock, making me crazy with lusty delight even as my cock driving deep into her womb seemed to make her quiver with ecstasy. I felt like we could fuck forever -- gazing into each other's eyes as our loins came together again and again while our tongues embraced and teased. I felt her tremble with pleasure as her swollen nipples dragged across my chest while her fingers clutched and clawed at my shoulders.\n\nSuddenly Breanna broke the kiss and sat up straight, slowly impaling herself on my cock. \"Love how you make me feel, Mister Heller!\" she moaned and then she was lost in orgasm -- her eyes rolling up in her head as she rocked her hips on my cock and with a long, drawn out cry, announced, \"CUMMINGGGG!\" Time seemed to stand still as she shivered and shook atop me, her heavy breasts jiggling ever so slightly as she seemed to vibrate with orgasmic pleasure from head to toe. Her pussy juices were like erotic fire as they bathed my cock and for the first time, I realized that there was a climax in my near future.\n\nBreanna suddenly slumped, her chin on her chest for a long moment as my cock throbbed inside her massaging cunt. She raised her head and said hoarsely, \"I love fucking you, Mister Heller!\" and then slowly slid off of me, a gush of pussy juices spraying my crotch as my cock was released. Suddenly sleepy-eyed, Breanna nodded to the other side of the bed and said, \"Take her...give Lauren what she's always wanted, Mister Heller.\"\n\nI was momentarily taken aback because in those last sweet minutes of fucking Breanna, I had literally forgotten the sexy little blonde. I turned to see Lauren looking at me expectantly, her face and chest flushed and she was breathing heavily. Her legs were wide spread and pulled back -- offering her sparsely haired mound up for inspection, labia swollen and wide spread -- her already well fucked pussy glistening and wet with anticipation.\n\nI was up on my knees and between Lauren's legs in a heartbeat and she crooned, \"Fuck me, Daddy Heller...fuck your nasty little girl,\" holding her arms out to me. She was a teacher's fantasy come to life!\n\nI moved closer, my hands grabbing her trim ankles and pulling her closer to me as I draped her legs over my shoulders even as her pussy brushed the tip of my cock, making her moan. Thickly coated with the lovely Breanna's juices, I shifted my hips just so and then Lauren was screaming as I again rammed my cock home in a single stroke.\n\n\"YESSSS, MISTER HELLER -- FUCK ME HARD!\" Lauren sobbed as I almost rolled her up in a ball, impaled by my cock and fucked her as hard and as fast as I could muster, initiating an orgasm within my blonde lover within a couple of minutes. She twisted and writhed beneath me as she came, but I didn't slow down for a moment, slamming my cock into her tight pussy again and again. I fucked Lauren through her orgasm and then we were both like wildcats, snarling and biting and clawing, her blue eyes wild with carnal lust as she worked her pelvis to meet my fast and brutal thrusts. I felt my own orgasm rapidly approaching and increased the vigor of my thrusts in my eagerness to make Lauren cum again as well.\n\nSomehow, she managed to cup one of her large breasts and lifted it just enough so that I could duck my head and tongue her nipple, straining to get my lips around it and then I sucked at her rubbery nub and then as I purposefully bit it...the pain and pleasure sent Lauren over the edge and she began to orgasm, her pussy tightening like a vise around my cock. The delicious sensation of her pussy flesh squeezing my cock pushed me over the edge as well and I let her nipple slip from my lip as I bellowed in triumph and began to shoot massive spurts of hot semen deep in her womb.\n\nOur combined orgasms seemed to grow into something greater and the pleasure was so intense, I was seeing black spots and gasping for breath as my seed jetted into her pussy again and again! Then I was suddenly spent, nearly collapsing atop the petite woman before summoning the strength to withdraw from her and fall over into the empty middle of the bed.\n\nAs I lay there, chest heaving as my lungs worked to replenish my oxygen, I felt both young women cuddling up close to me, hands stroking me and lips kissing my chest and face. \"That was the best fuck of my young life, Daddy Heller,\" stammered Lauren. She kissed me long and hard with that serpentine tongue of hers. \n\nThen Breanna's fingers were turning my face towards hers and she giggled with just a hint of sarcasm, \"Yeah, Daddy...fucking you is the most awesome thing ever!\" She again winked playfully at me and then kissed me, putting all her passion into the long kiss, producing a tremor in my semi-erect cock.\n\nAfter we ended that kiss, I looked at Lauren and then Breanna and marveled at their energy...both looking at me expectantly and lustily. \"You ladies are incredible...heaven sent, but...\" I took a deep breath and said, \"Your teacher needs to take a short nap or he might just die.\"\n\nBoth girls laughed and showered my face with kisses as I made good on my words and slowly began to fade...sleep demanding my attention. With their lush, womanly bodies bracketing me, I felt warm and safe and loved...so very much loved as I sank into the oblivion of sleep...my last waking perception that of both girls' tongues playing around my cum covered cock.\n\nThe rest of the night was like a carnal dream come to life. I awoke to discover a raging hard-on and myself alone in bed. I found Breanna and Lauren in the kitchen, eating sliced apples with caramel dip, both stopping to smile happily at me and my prominent erection. They took turns feeding me as they rode my cock slowly before our midnight snack culminated with me taking Breanna from behind, her leaning over the kitchen table and eating Lauren's cum filled pussy.\n\nWe returned to bed and I fucked Lauren's asshole while she licked Breanna to orgasm...me sleepily marveling at the fact that I was fucking a cheerleader's tight ass -- the first time I'd engaged in anal sex since I had first been in college. Lauren's cries were loud and frequent to the point of my next door neighbors beating on the wall at one point in complaint although soon enough the sounds of lovemaking echoed through the walls from their side. Lauren's cries of \"Fuck my ass, Daddy!\" became incoherent sobs as I finally shot a load of steaming semen into her vise-like asshole.\n\nSleep followed and at some point, I awoke to find someone astraddle me, slowly riding my cock, miraculously hard again. It only took a few seconds to know it was Breanna...again, the sense of something more intimate and loving pervading our lovemaking in away that was absent from Lauren.\n\nI could barely make out her shapely silhouette, but even in near total darkness, I could feel her large eyes on me -- naughtiness and desire on them as she slowly slide up and down on my cock. Somehow I could see in my mind the moment her luscious full lips parted as orgasm approached, sighing with pleasure as she slowly impaled herself on my throbbing penis again and again.\n\nI doubt if either Breanna or I were aware of Lauren beside us or whether she was asleep or awake -- the world had winnowed away to just the two of us, making love and reveling in the carnal reality that we were. It was a perfect fuck that both seemed to last forever and end too soon as Breanna's short and harsh gasps of orgasmic delight spurred me on to climax inside her, pleasing her and awing me that I seemed to still be able to produce such a quantity of hot semen after a lusty night's fucking.\n\n\"I love you, Mister Heller,\" Breanna murmured into my ear before curling up beside me, her head on my chest and falling asleep. I was tired...exhausted really in that sweet way that good sex could make you feel. Still, sleep took a while to claim me as I thought about how this former student of mine had turned my world upside down.\n\nI came sleepily awake as I heard Lauren whisper to me. \"It's been lovely, Mister Heller. I hope you'll be my daddy-teacher lover again soon!\" She kissed my cheek as I opened my eyes, surprised to see her dressed in the early morning light. \n\nLauren started to ease off the bed, but paused when I said in a raspy voice, \"Anytime, sweetheart.\" \n\nGrinning, she returned to me and gave me one last display of her long and talented tongue as we kissed. \"I can't wait,\" she replied as she climbed off the bed, gave me a wink and went to the door where a naked Breanna waited. I watched as the two women murmured to each other -- Breanna smiling sleepily and Lauren with that ever present cheerleader's exuberance. They kissed, taking their time about it, arms embracing as they shared tongues -- the appearance of one naked and one clothed seemed very erotic to me and for the fifth time in less than twelve hours, I felt my cock twitch with life, slowly becoming erect.\n\nTheir kiss ended, Lauren looked over her shoulder at me and pursed her lips in a kiss and then she was gone. My attention was now completely focused on the tall, luscious woman that was strolling back to my bed, a mysterious yet carnal smile on her face. \"Good morning, Mister Heller,\" Breanna murmured as she scrambled under the covers and curled up against me, one arm draped across my chest and one leg thrown across my thighs...her sex wetly brushing my hip.\n\n\"Good morning, Breanna.\" I replied before we kissed a while, our hands moving lazily over each other's body.\n\nWhen the kiss ended, Breanna propped her head up with one hand to look at me and after a moment's study, said, \"So, did the naughty teacher enjoy banging the sexy blonde cheerleader?\"\n\nI laughed and said, \"Hell yes...it was a dream come true, but...\"\n\nBreanna raised an eyebrow and said in a careful tone, \"But?\"\n\nI took a deep breath, trying to collect my thoughts before speaking. \"Lauren is a wonderful lover...everything I imagined...fantasized her to be, but Breanna...I discovered that making love to you...fucking you is more special...more intimate.\" I reached out and stroked her cheek as her face slightly reddened. \"Maybe I'm just an old man lost in a fantasy, but damn, Breanna -- there's something between us...something more than just having sex!\"\n\nBreanna took my hand in hers and kissed my palm before saying in a slightly husky voice, \"No, you're not imagining things, Mister Heller. I've felt it too.\" Her eyes were misty as she added, \"I'm glad we both feel it.\"\n\nThere was a long silence afterwards as we stared at each other before I said, \"I feel like there's something I need to do.\"\n\nBreanna looked at me curiously and said, \"What would that be?\"\n\nI found myself a little dry-mouthed as I replied, \"I'm not sure...maybe asking you to move in with me or...asking you to marry me, Breanna.\"\n\nHer jaw dropped at my words, but then she laughed and shaking her head, leaned into me and kissed me. \"No...I'm flattered, Mister Heller and I imagine we'd be happy together, but no.\"\n\nHer blunt truthfulness stung just a little but before I could say anything, she kissed me again and said, \"It's got nothing to do with Jesse...I love him in a way, but we're done. It's me, Mister Heller. I think I told you after that first night that I wouldn't say its love and happily ever after...maybe it is love.\" She sighed and said, \"I told you I wasn't a one man woman, but I hope we can have each other in each other's lives.\" She grinned impishly and added, \"Probably a hell of a lot more than I originally thought.\"",
        "I nodded and said, \"I can live with that, Breanna. I will always be here for you.\n\nShe grinned and began to climb on top of me. \"I know, Mister Heller...I insist,\" she said in a gasping voice as she impaled herself with my cock again.\n\nI laughed and sighed with pleasure, my hands rising to cup her breasts. \"Well, if you insist, Breanna.\" \n\n#\n\nI marked that lazy Sunday as the real beginning of what Breanna and I shared. Her magic pill allowed me to get erect twice more that day and we made love like long time lovers and watched football and chatted the day away. My life fell into a wonderful pattern over the next weeks and months. Breanna and I would get together two or three times a week, making love in my apartment and sometimes in more interesting places including an empty classroom in the History building and a stall in the lower level 'Men's' room in the University Center.\n\nLauren joined us once or twice a month as her own schedule allowed -- usually on the weekend which always left me exhausted, but spiritually renewed as if the two young women's loving was working like a fountain of youth on me...at least in the short run.\n\nBreanna's Jesse made her prediction come true. At Thanksgiving, he dropped out of school and asked her to move back to Jonasville. When she refused, he left and as far as I know, they never saw each other again. Breanna spent the holiday with me -- mostly seeking comfort from the pain of the ending of their years-long relationship. I again asked Breanna to move in, but she declined...pleased that I asked, but still adamant about not being a one man woman.\n\nBreanna spent the Christmas holidays with me as well -- giving me a glimpse of what we might be as a couple in a different time. Despite our nearly thirty year difference in age, we were as in sync with each other as any long time happily married couple. New Year's Eve was celebrated in my bed with both Breanna and Lauren in a mind boggling marathon of lusty fucking that makes me hard to this day just remembering it.\n\nBreanna was with me in spirit when I took my oral exam for my doctorate -- having moments before it begun, sucked my cock to calm me down and it must have worked because the examination committee gave me high marks all around. From the strength of my exam and my thesis, I was quickly offered a position at a small college on the outskirts of Lexington. I was delighted at the prospect of not returning to Jonasville and Breanna was ecstatic that I would be close and that our relationship could continue.\n\nI was both a proud lover and father-figure as I watched both Lauren and Breanna graduate with honors. Breanna continued at UK on her Master's degree while Lauren relocated to Cincinnati -- a hundred or so miles north of us to take a job in a sport medicine operation that catered to the local schools and professional teams. She kept busy and we missed her, but it wasn't so far that we didn't see her four or five weekends a year.\n\nI bought a small house in a nice, tree-lined neighborhood in Lexington...enjoying my life as a History professor and oft-time lover of Breanna who joined a large medical practice in Lexington and frequent guest at my place where we made my quiet neighborhood a little less quiet, making me a man of speculation amongst my neighbors, gossiping about the shameful behavior of that old man and that lovely young woman.\n\nSeveral years passed and suddenly I was two years shy of sixty and wondering how much happiness a man my age could stand. Life was good. Breanna had over the last few years been more and more in my life and while we never talked about it, I suspected that her life was almost completely about her work as a physician's assistant at which she excelled and me. We were making love three and four nights a week and almost every weekend found her here -- happy and contented.\n\nA few months before I turned fifty-eight, there was a part of her that seemed distracted...not unhappy, but I knew there was something on her mind. I tried to get her to tell me, but my Breanna just smiled and said, \"Not right now, Mister Heller...not right now.\" I had to smile...our affair was eight years old, but she still insisted on calling me Mister Heller, reminding me that just saying it, \"Makes me wet...Mister Heller.\"\n\nWe celebrated my fifty-eighth birthday with a quiet, intimate cookout -- steaks and roasted vegetables, followed by a blowjob by Lauren via Breanna at the effervescent blonde's request when she couldn't get free to visit. Later, Breanna and I made love, me between her legs, slowly coming together as we stared into each other's eyes. As I sank my aching erection deep into her womb, Breanna tightened her legs around my back and held me in place.\n\n\"Mister Heller...I have a question I need to ask.\"\n\nAs I felt her hot cunt walls pulsating around my cock, I rasped, \"Ask me anything, Breanna.\"\n\nShe was silent nearly a minute...a long and sweetly agonizing time as my cock was buried to the hilt in her pussy. \"What would you say, Mister Heller, if I were to ask you to give me a baby?\"\n\nI gasped in astonishment, not expecting to be asked that and nearly came inside her. I gathered control of myself and replied, \"Really, Breanna...you want me...ME to make you pregnant?\" Despite my shock, I couldn't help but smile at her...the thought of having a son or a daughter making me smile. Lisa had never wanted children and I had long ago given up hope of someone carrying my name forward.\n\nShe nodded and said, \"I guess my biological clock is running. I've been thinking on it for a long time. I want a child and I want to have it with the best man I've ever known...that's you, Mister Heller.\"\n\nI hardly knew what to say...my heart was pounding and my mouth was dry. \"Will I...will we both raise it?\"\n\nBreanna nodded and replied, \"God, I hope so...you'll make an awesome father.\" She caressed my face and said, \"Don't worry about your age...you're going to live forever if I have any say. Please, Mister Heller, be the father of my child.\"\n\nI felt tears running down my face even as her eyes began to mist over. \"Oh, Breanna -- I would be honored to give you a baby!\"\n\nShe wiped away my tears and kissed me, undulating her hips as we began fucking again, still moving slow, making the pleasure last a torturously long time. \"I love you, Breanna,\" I gasped as our bodies came together again and again.\n\nBreanna arched her back as her orgasm neared and panted, \"I love you too, Mister Heller.\" She grinned amidst the waves of pleasure wracking her body and said, \"Of course, if you knock me up, Mister Heller, you'll have to make an honest woman out of me.\"\n\n\"Oh my God!\" I moaned as her words caught me off guard and I exploded inside her, filling her womb with my hot semen...wishing I could make her pregnant right then and there. Breanna's orgasm swept over her as I shot jet after jet of fiery seed into her, both of us caught up in the rapture of the moment. With a few simple words, this young woman -- even now, not quite thirty years old turned my life upside down and just as before, I knew that she was changing things for the better.\n\nAs we drifted down from orgasm, I said in a husky voice, \"Does that mean...you'd marry me, Breanna?\"\n\nBreanna slung her arms around my neck and grinned evilly up at me. \"I reckon so, Mister Heller...in fact, I'd insist!\"\n\nThe End"
    ],
    "authorname": "Ahabscribe",
    "tags": [
        "older man",
        "younger woman",
        "student",
        "teacher"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/at-breannas-insistence"
}