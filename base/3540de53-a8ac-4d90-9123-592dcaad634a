{
    "title": "A Almost Perfect Awakening Ch. 19-21",
    "pages": [
        "FOREWORD\n\nLiterotica.com issued a challenge to its volunteer writer's to create stories for as many categories as possible. The following chapter is part of a novel length story relating a journey of awakenings, discovery and growth involving a number of people. For your entertainment, and mine, I'll be submitting chapters into at least 17 different story categories. I don't believe anything like this has been tried here before.\n\nNew chapter(s) will be submitted almost daily. By clicking on a blue Wm_Sexspear, you'll be taken to my Profile; at the bottom of the page you'll find a list of all the currently available chapters. THIS SHOULD MAKE IT EASY TO READ THEM ALL, IN SEQUENCE, WHICH IS HEARTILY SUGGESTED so the reader can follow the story line, character development, and catch the inside jokes.\n\nI can promise those readers who are familiar with my work that you'll find a ton of very erotic reading that will appeal a wide variety of tastes, even though I intentionally attempted to have at least one turn on for anyone visiting Literotica. This saga features mostly caring, even romantic sex, but it'll occasionally flirt mildly with a \"fetish\" so a given chapter will genuinely qualify for that category. Many of these chapters could go into many different categories.\n\nFor example, in Chapter 1 there's a small amount of male-male sex because a number of ladies have said it turns them on to picture two guys, just like the idea of girl-girl sex is arousing to many males. Yet Chapter 1's purpose is to supply important background regarding the heterosexual development of 2 young men, so I'd expect a totally hetero reader to relate to and enjoy this chapter.\n\nChapters 2~4 features voyeurism by 2 inexperienced young males and exhibitionism by a female, but also includes experimental lesbianism between sister's. So, don't judge my book by its multitude of covers. If you enjoy sex, there should be something [actually a lot of somethings] in it for everyone. LOL\n\nFinal example, Chapter 50 will be under Mind Control. Unlike many entries in this category, it fits in there because circumstances allow a female to have her every sexual whim acted out by 4 other people. \n\nFan mail, well-intentioned questions, and constructive criticism are welcome; I do my best to respond when an e-mail address is supplied. Hate mail is now instantly deleted without being read, so why waste your time and mine - life is too short. \n\nThank you. W_S\n\n\nThis story is protected by (c) copyright and may not be duplicated, reprinted, copied or placed on any Internet Website without permission of the author. All rights reserved.\n\n* * * * * \n\n\nChapter 19 - Four Play\n\nThe girls wanted to change into dry panties, apply a little baby powder, dab on a drop of perfume, and brush their hair. They weren't gone long. When they returned, Jim and I had stretched out on his bed. Lynn walked to my side; Beth went around to Jim's. Stretching out, they rolled almost on top of Jim and me.\n\nLynn beamed one of her sweet smiles, then began kissing my mouth and face. She whispered \"Hold me.\" I didn't have to be asked twice. My hands roamed over her back; sometimes I held her head as our kissing gradually became impassioned.\nI lost track of time as I lost myself in her.\n\nLynn was still fully clothed, I was naked. We only kissed, but I eventually became more aroused than I had been at any time that night. Once Lynn realized I was in an uncomfortable position, she reached between us to reposition my erection so I was straightened out between our bodies.\n\nEven though Lynn was lying fairly still on top of me, her warmth and mere presence were taking me to new heights. In large part, I knew this was due to all we'd shared recently. After all, sex for me had changed from a Playboy in my hand to a beautiful young woman in my arms. But my deepening feelings for Lynn were increasingly a factor in my growing desire for her.\n\nLynn rolled off to my left side and onto her back; her lips remained glued to mine until she fell away. Staring into my eyes, I heard, \"I think your hands are pretty well rested. Guess it's time you got to use them. How about starting with these two buttons.\" She pointed to the buttons just above and below her breasts. I'd eaten her pussy not long ago, yet my hands shook as I tried to undo those damned buttons. Finally she was allowing me to use my hands on her. \n\nWhen I finished, Lynn slipped my hand inside her blouse onto her left breast. My fingers lightly gripped then kneaded her flesh. Her teat was still encased in a satiny stretch material, it felt so, so sensuous. Seems I'd just discovered the magic of how sexy a woman's clothing could be. I'd always pictured touching a girl naked, it never occurred to me that touching one through clothing could be so erotic.\n\nHer areolas puffed and nipples enlarged as I fondled her. Please shoot me if I ever stop loving this, I thought to myself! Lynn's hand slid atop mine; her fingers guided me, she taught me how to expose her breast by lowering the cup. Her hand then left me alone to fondle her bared breast. She was so soft that I was stunned. For a long time I just stared stupidly at my hand moving inside her clothing. Lynn had a hand on the back of my neck; it guided my mouth to her nipple as her free hand pulled her blouse open far enough to uncover her aroused flesh.\n\nTime passed as I feasted on Lynn, my tongue pleased her flesh every way I could think of. Lynn whispered gentle encouragement, her tender touches taught me when to do more of one thing or less of another. When to be more gentle. When to suck harder. Somehow it felt more special than when I'd used just my mouth that first time a week ago. Maybe because I was mainly trying to pleasure the special girl attached to this firm, exquisite mound.\n\nKissing my way up to Lynn's mouth, my tongue teased all around her lips before probing, seeking her tongue. As we continued kissing, her hand led my right hand on a tour of her torso. Across her chest and other breast we went, then all over her mid-section, dipping deep into her lower regions. Finally her hand guided me under her skirt, up her thigh, onto her panties until my fingers were gently massaging the mushy lips inside the silky material.\n\nAs my fingers first touched her pussy, Lynn drew a deep breath, then speared her tongue into my mouth. Her hips gently rolled. Minutes later she stopped kissing me long enough to whisper, \"You're doing me perfect, but there's one thing that would make it better.\"\n\nHer hand found mine, guiding me to the top of her panties, then inside them. With her fingers atop mine, she steered me through her light furry covering, directing my middle finger into her slippery gash. Lynn breathed into my ear. \"This is my clit.\" Keeping her fingers atop mine for several minutes, she taught me how to give her pleasure without hurting her.\n\nLynn's hard breathing took on a sound I'd begun to recognize. Her hips rocked steadily, like waves rolling to the shore. It was amazingly hot and moist between her legs. At long last fondling her bare pussy made me feel as if I'd found The Garden of Eden.\n\nMore than anything, I wanted to give Lynn a gift of ecstasy, to thank her, for more reasons than I could list. I wanted her come by my hand. My breathing was nearly as loud as hers, the sensations I felt manipulating her pussy with my hand inside her panties were an astounding new source of toe-curling pleasure.\n\n\"I'm almost there, please help me come.\" Lynn breathed against my cheek. Guiding my middle finger to slide up and down her slit, she gently bucked her hips into my palm. As her pace increased slightly, my tongue drove deeper into her mouth.\n\nLynn exploded. Her arms crushed me, her breathing was frantic. Forming a tight circle, her lips closed around my tongue until it felt like my tongue was screwing her mouth. A wet flow coated my fingers, Lynn rode my hand, her hips undulated steadily.\n\nNeeding more air, Lynn opened her mouth. I kissed around her lips before pulling my head back so I could watch her face. Moaning, tossing her head, Lynn's body writhed against my palm. I found her a totally awesome sight; I loved watching her climax.\n\nEventually she began to relax. Wordlessly Lynn taught me how she liked being fondled for a soft landing. When at last she lay still, Lynn pulled my hand to her mouth to suck my fingers clean. I almost came.\n\nSounds from Beth getting off distracted me. Turning my head I was treated to the sight of Beth's hips churning. With a hand busy under her skirt, Jim was sucking an exposed breast; his pursed lips were actively nursing its long nipple.\n\nBeing so distracted watching Beth come, I hadn't felt Lynn move. Without a warning, her mouth engulfed my penis, a protracted bass moan rumbled through me. I wanted to watch my first blowjob, but I couldn't tear my eyes away from Beth's passionate show. Before my eyes, Beth abruptly spun around, jammed Jim's hand back onto her pussy, then wrapped a hand around his dick just before swallowing him.\n\n\"Oh God I'm going to come.\" I shouted.\n\nLynn grabbed my butt to hold me in place. I wasn't about to say no to her unspoken offer, the first of many streams of sperm began spurting into her moist, sucking mouth.\n\nSlowly Jim humped his hard, wet cock into Beth's mouth; she was clearly being fed the contents of Jim's testicles. Beth was either still coming, or having another orgasm, her skirt was up far enough to see her pussy being pushed around by Jim's fingers. Her plumped lips bulged against the soaked, clinging cloth, seeing them move around in her panties fueled my lengthy orgasm.\n\nYes, I'd had my cock in a mouth earlier tonight, but that had been a beat up VW compared to the Rolls Royce ride Lynn was giving me. Her mouth was so willing, so eager, so animated. Her tongue and lips seemed to know exactly how to give me the greatest possible pleasure. Liberally her tongue slathered my glans and shaft.\n\nMy brain understood that my reproductive organ, for the first time ever, was inside of a very desirable female. All this while I was also watching a live sex show starring Beth. I'd had dreams like this, but I now was actually seeing her sucking an angry cock just a few feet away. Is it any wonder that I kept spurting long, long after I had any more sperm to offer?\n\nEventually Jim was spent. Beth collapsed onto her back, causing Jim to slide out of her mouth with a wet pop.\n\nMy focus returned to the wonderful girl giving me such intense pleasure. My first glimpse of beautiful Lynn nursing on my gradually deflating penis triggered several more spasms, I groaned for the umpteenth time. Seeing her evoked many feelings, love and gratitude amongst them.\n\nLifting Lynn's leg, I shifted into position to eat her pussy. Pulling her wet panty out of the way, I visually located her clit. Dropping my mouth, we calmly fed off of each other until I felt Lynn achieve a modest orgasm. I slid my hand into the back of Lynn's panties to enjoy my first good exploration of her firm tush; we both enjoyed my lengthy, careful examination.\n\nAllowing my penis to slip from her mouth. Lynn enjoyed feeling up my buns for a time before moving back up into my arms.\n\nMeanwhile, Beth had returned from the dead. Slithering up behind Lynn, she hugged her sister, kissed her cheek, then asked. \"Are you ready?\"\n\nLynn purred an \"Oh, yesssss.\" in reply.\n\nThe girls got off the bed, then extended a hand to Jim and I, pulling us up to join them. Beth spoke to both Jim and I. \"Please undress us.\"\n\nNot seeing that coming, I'm afraid I froze for a second. \n\n[Undress her stupid!!]\n\nMy brain finally got me moving. I wanted to rip her clothes off, but I managed to take my time so I was able to savory the experience, and file away memories of seeing her garments being peeled away. Her blouse, then her skirt, her bra. Naturally I had to fondle both of her fully revealed breasts. Briefly I suckled both nipples, Lynn held my head, stroking my hair while I dined on her 5-star cuisine. Eventually, I kissed my way to her navel.\n\nSettling onto me knees, I stared at the almost mystical curves of her panty-clad abdomen. Mentally preparing myself to see her pussy, I lowered her panties.\n\nAs her damp sex came into view, I strove to etch every detail into my memory. This was a sight I never wanted to forget. Her light blonde hairs, her swollen lips, her aroma, the pink flesh within her slit, the barely exposed tip of her clit, the slope and curves of her pelvic region. All those images flooded my brain. If I wasn't in heaven, I was surely staring at it.\n\nStanding quietly, Lynn and Beth allowed us plenty of time to study them. When I finally looked up, Lynn was gazing at me with an expression reminiscent of my parent's faces as I'd unwrap my gifts on Christmas morning.\n\n[I think I love this woman.]  For sure, brain.\n\nShe motioned me to my feet. I felt an electric jolt as we hugged and our naked bodies melded together. Lynn whispered in my ear,\" I have a present for you, come with me.\" Lynn took my hand, leading me into her room.\n\n\nChapter 20 - Lynn Gives Larry Something To Think About\n\n\"Lay down with me, Larry.\" Lynn asked. She clambered onto the bed, stretched out invitingly, holding her arms open to me.\n\nThough trying to act nonchalant, I suspect I set a world's record reaching her. We lay together quietly for several minutes. The feel of her pelvis flush against mine was heady stuff. My penis was hyper-aware of every tiny tickle it got from her sparse pubic hair. I grew obsessed with the proximity of my penis to her pussy. Only in my dreams had I ever been this closed to having sex with a girl. I'd slowly firmed up to a point where my penis had a little heft to it, but the earlier potent orgasms had literally drained me.\n\nSince entering her bedroom, I'd been pretty quiet. Which was easy since I didn't know what to say, not to mention being afraid I'd say the wrong thing if I spoke. I was also fairly sure she still had something on her mind.\n\nI was dying to know what the present was she had for me, but lying on her bed, Lynn naked in my arms, was plenty of present to me for damned sure.\n\nFollowing a new series of soft, sweet kisses and a crushing hug; Lynn locked eyes with me again and spoke.\n\n\"Larry, I've explained a few things about Beth and myself, what do you remember?\"\n\n\"You and Beth were lonely. You both dated a little, but the boys were jerks. When I saw you and Beth, aahhh, uummh, loving each other, it was your first time. You were both ready to dismember Jim and I for ruining your... your moment.\"\n\nThat got a big smile from Lynn. \"Try castrate.\"\n\nI winced, but her eyes had a playful twinkle that was reassuring.\n\nSmiling, I continued. \"You needed to feel safe, know that neither Jim nor I would blackmail you, or be able to tease you forever.\" I paused, thought a bit.\n\n\"Lynn, I want you to know I really thought a lot about what you said. At first I was doing what you ordered because I was scared, but tonight it was because I knew you were right... I was willing to do whatever I had to do to square things with you and Beth. I think I.... Well, you are... You were just my friend's pretty sister, but these past few days I began feeling... You're really so special... I think I...\"\n\nLynn put me out of my misery. A hand behind my head slowly pulled me to her glistening parted lips. She gave me a protracted kiss that left me weak, tingling from head to toe. Lynn took over the conversation, saving me from myself.\n\n\"Larry, I think I understand what you trying to say. I've caught myself thinking you're kind of special too.\" Lynn paused; we just looked at each other for a long while. Finally, taking a deep breath Lynn continued.\n\n\"It's good to know you really were listening to what I've been telling you. Beth and I were frankly getting horny, curious, whatever you want to call it. We discovered that playing with each other was a lot nicer than just getting ourselves off. We wanted boyfriends, but not if meant settling for the unattached idiots living around here. I'll tell you more later if you're curious.\"\n\nPromptly I explained to Lynn that I understood. Since she'd trusted me with her secrets, I shared a little about the similar feelings that Jim and I experienced; even our infrequent, past experimentation.\n\n\"When Beth and I left you two alone for a long time after we caught you peeking through the bathroom wall, we discussed a lot of things. Some you know already, a few you don't. You don't know how much it effected me when Beth bumped me into your arms when she opened that door. Seeing you boys was a shock on several levels. For one thing we'd been thinking of you two as little boys for so long, we hadn't noticed you were turning into young men. You guys have grown up, you have nice bodies.\"\n\n\"Beth and I were still very worried about how immature you both might be. If you, and I mean either of you, hadn't grown up enough to act like adults about all this... Well, we were nervous. Instead, I've been very proud of you both. You haven't acted like jerks here, at school, or anywhere I'm aware of. You kept all this to yourselves.\n\nAnother thing that was important to me was you've honestly listened to us. You've kept your word and took your punishment, even when it was embarrassing for you. Look, we can talk more about all this later. Right now I want to talk about your present.\"\n\n[PRESENT?]  Lynn had my undivided attention.\n\n\"Larry, there is something VERY important to me that I want to give you. My virginity.\"\n\nProbably there was now a bruise on my chest where my chin dropped. The expression on my face was all that Lynn had hoped for I gathered from her coquettish grin.\n\nMany seconds later, when I was able to move again, I pushed Lynn onto her back, then gave her the longest, most passion-filled kiss of my life. Our tongues acted like two squirrels chasing each other around a tree, darting, playing tag, lost in the joy of the chase.\n\nInflating, my penis worked itself between her legs. Lynn opened her thighs until I was nestled against her slit. She closed her legs to trap me against her. Our hips moved very gently, we rubbed our genitals together as we kissed.\n\nFinally coming up for air, I whispered into Lynn's ear. \"I love you, Lynn.\" She held me tight, kissing all over my face and lips.\n\n\"I feel something very, very special for you too, but we need to talk a little more.\" she said tenderly.\n\n\"When I caught you two spying on us, I'd just made love to Beth. There I was, furious. And what did you do? You two dick-for-brains came on me!\"\n\n\"Beth whacks me with a door, pushing me against you. And what happens? I find myself thinking how much I want you inside me.\" Lynn laughed out loud as my dick started twitching like mad between her legs. \"Like I said, a dick-for-brains.\" But she smiled, then kissed me.\n\n\"I need you to calm down and really think about what I'm going to say.\"\n\nI nodded. Truly, I was listening to every word she had to say, it was just that my penis had wanted to applaud a couple things it really liked hearing.\n\n\"Now here's the deal.\" Lynn continued. \"Beth is having a similar conversation with Jim. Everything hinges upon both of you agreeing to what we're proposing...  You said you love me. Surprisingly, I may have some feeling for you as well, but we're really still strangers to each other.\"\n\n\"Beth and I are worried that someone will get to feeling jealous or hurt. You're NOT going to be the only boy I ever sleep with. I'm a tad older than you are, but we're all pretty young. A lot can happen. Still, I want us all to stay close, to have lots of fun... then see where things lead us.\"\n\n\"So far I've been giving orders, but there is so much I don't know myself. There are many things I want to try, things I need to learn. You with me so far?\"",
        "I nodded more positively than I actually felt.\n\n\"Larry, please think about this very, very carefully. I want a totally honest answer, not what you think I want to hear. Beth is a very beautiful girl. I've held her. I've kissed her. I've eaten her pussy and enjoyed it. Would you like to go all the way with Beth? If you knew that we could still be lovers AND you could do it with Beth, would you like to have her?\"\n\nThunderstruck doesn't come close to how I was feeling. I hadn't made love to any girl. Now I'm naked, my cock is playing patty-cake with her pussy, then Lynn asks me if I'd like to put my penis inside her sister.\n\n[ Overload! Overload! Warning! Warning! Danger Will Robinson! ]  Duuuuhh...\n\nIt took a long while for my hormones to let me communicate with my brain, though I finally got through. Eventually I replied.\n\n\"I want you to have my cherry, Lynn. I really think I love you. As for Beth, I've dreamed about both of you since I first got boners. Beth is a fox, she's fun, plus I like her a lot. I'd be lying if I said I wasn't dying to know what it would be like to make love to her. She is so much like you, but somehow I know it would feel different. Yet if it meant ruining things with you, I'd NEVER touch her.\"\n\nLynn melted me with another of her special smiles. She said, \"Larry, you're too young for me to instantly fall hopelessly in love with, but you're making it very hard for me to remember that.\" Lynn held my face and kissed me with feeling. Mentally I vowed to keep making it hard for her to remember.\n\nLynn resumed speaking. \"OK. Here's the plan. You and I will make love, but Beth and Jim will be here to watch us lose our virginity. Then you and I will quietly watch as Beth and Jim lose their cherries. If you guys are still able to tonight, we'll switch partners and all make love again.\n\nBeth is as curious about you as you are about her. Watching Jim this past week has me dying to feel him inside me, I want you both. If we all have sex with each other, hopefully none of us will have anything to feel jealous about. If I do it with Jimmy, then Beth isn't the 'sick sister' that screwed her brother. Everything equal! No secrets! Also remember this, Beth and I have the right to be with each other any time we feel like it. What do you think? Can you handle all that without going Looney Tunes?\"\n\n\"Could be you know me better than I do, Lynn. The way I've been feeling about you, I might have felt you were somehow all mine as soon as we made love. I'd never have thought of all the angles you girls did. I still think it might be a little difficult watching you doing it with Jim, but Beth is a pretty incredible consolation prize.\" I grinned.\n\n\"If we never fooled around with anyone one else, I guess there would be a lot we'd always wonder about. So it makes a weird kind of sense, and it should be a ton of fun. You can trust me to not be a jerk, or at to try my best.\"\n\nLynn hugged me tight. We held each other as minutes flew by. The discussion over, our bodies gradually became increasingly aware of each other. The room got warmer.\n\n\"Are you ready for me to bring in Beth and Jim if they're OK with everything?\" \n\n\"Oh God yes, Lynn.\" I groaned. \"I want you so much.\"\n\nLynn stood, heading for the door.\n\n\"Lynn.\" My voice stopped her.\n\n\"Sharing should be fun, but I'm so glad that you and I will always be each other's first.\"\n\nI sat up as she returned to hold me a while longer. Following some unknown signal, we put a hand onto each other's genitals at the same moment. Our kiss continued; I massaged the area surrounding her clit; Lynn gripped my shaft, slowly pumping me. Our breathing quickened.\n\nJust before we lost control, Lynn pulled away. \"Beth really wants to watch me have sex my first time. If I don't get her in here NOW, she'll never get to see it.\" Lynn shot out the door. \n\n[I really like this girl.]  I agree, brain. One hundred percent.\n\n\n\nChapter 21 - Lynn and Larry Lose It\n\nLynn came back 5 hours later. She claimed she'd only been gone 2 minutes, but I swore it was 5 hours. Beth was holding hands with Jim as they entered. It was impossible not to notice Jim sported a serious boner. Guess he and Beth had enjoyed as good a \"conversation\" as Lynn and I.\n\nDefinitely I noticed Beth. Beth was naked. Beth looked sexy. Beth wanted me inside her pussy. My penis waved hello to her even as Lynn was making a beeline for the bed.\n\nLynn had brought an extra big fluffy towel back with her. She had me stand while she spread it out. A second after it was in place with Lynn and I embracing on it. I was so turned by at that point that I completely forgot we were about to become a spectator sport. All I could think of was the fact I was about to finally get laid, AND WITH LYNN. I was going to have sex! My first ever sex!! I was hard and drooling. Of all the girls I'd met, my penis was going to go inside my first choice.\n\nWe locked lips the instant Lynn got onto the bed. We took turns slipping a tongue deep into each other's mouth. Even our difficulty breathing was a turn on. Lynn put her mouth by my ear. It's safe to come inside me tonight. There won't be any blood; I broke that riding a year ago. Oh yeah, I think I may love you to, you little shit.\"\n\nThe instant I heard that, I did something I'd been wanting, but waiting to do. I slid a finger into Lynn's vagina. The way she sucked my tongue down her throat assured me she'd been waiting for my finger also. Probing everywhere inside her, despite how much I'd expected it, I was surprised by her warmth and texture.\n\n[So soft. So damned soft.]\n\nOur hips were far enough apart that we could freely fondle each other. Lynn rubbed my clear seminal fluid all over my swollen knob, then ran her fist down my shaft to coat it as well. Her free hand roamed my ass, touching it, kneading it, pulling me towards her. Slipping a second finger into her, she drove her pussy onto them. Lynn's responses to my foreplay had me so excited that I took her hand off of my penis lest I come too soon.\n\nMoving my mouth down to her breasts, I did my best to kiss and suck them the way she'd taught me. Everything I could think of to give her the most pleasure, I tried.\n\nWhen I worked a third finger into Lynn, I felt her opening widen. My fingers found a rhythm that was clearly helping Lynn towards an orgasm. Panting, Lynn pushed me away just a bit. \"I'm ready for you, let me move.\" She lay on her back, but slightly angled so her pussy was aimed straight at her siblings. Her knees went up and out; she was ready for me to mount her.\n\nSo excited that I seemed to have tunnel vision, I moved into position between her thighs. For the briefest instant I drank in the details of the amazing girl below me. Lynn was a hundred times more exciting than any picture I'd ever seen. Pictures don't pant, don't perspire, don't have moisture oozing from a gaping vagina.\n\nHer nipples were fully erect, completely swollen. Her lips were wet and shiny, her opening quivered, ready for my penis to invade her virginal channel. Leaning forward onto one arm, I used my free hand to show Lynn that I wanted her to guide me inside her. Gradually I lowered myself. My hips adjusted as Lynn pushed or pulled to align us.\n\nThe tip reached her opening. She raised her hips slightly, causing my knob to be kissed by the petals surrounding her vagina. She held me in place while her hips slid onto then off my knob a few times. Lowering her hips a tiny bit, Lynn ran me up and down her slit repeatedly. I felt her swollen clit pushing into the small slit on my tip. She ground her pussy against my knob many times, trying to stuff my slit with her excited clit.\n\nMaking an \"uuuffff\" sound, Lynn nestled my helmet back into the cup of her opening. While holding me with one hand, the other moved back to my butt. Looking into my eyes she whispered \"Kiss me.\"\n\nAs I sank my tongue into her mouth, Lynn gently pushed down on my tush, signaling me into action. Carefully, I lowered my weight forward. Her hips undulated to ease my entry.\n\nFeeling myself gradually sinking into her liquid warmth, I had to struggle to maintain control of my muscles. Nothing had prepared me for the excruciating bliss of a woman's vagina engulfing my penis. Oral sex had give some hints, but this was far better. I was sinking, quicksand like, into a place nature had designed and perfected since the dawn of time. A place existing for the purpose of sending a penis an unmistakable message: This is home, this is where you belong, this is where your body will receive life's greatest reward.\n\nI stayed alert for a signal from Lynn to stop, or wait, or even back up and try again. She never gave it. It took a long time, but I never stopped. I pushed into Lynn's pussy until I felt her wet puckered vaginal lips kissing my pelvis. I was in her as far as I could go, yet still we pushed against each other.\n\nLynn emitted a growl, it was deep and lusty. No one hearing her could mistake what he or she heard as anything but a passion driven message of satisfaction. I held my position, gathering my wits, Lynn's hips were rotating around my cock. Her sheath was adjusting to me, contracting, then relaxing as her body readied for my thrusting. She felt wet, deliciously, wondrously moist. Had some magical creature swallowed my penis?\n\nI had to concentrate to keep myself from coming. So I could look into Lynn's sparkling eyes, I broke our kiss. Slowly I pulled back a third of my length, then slid back into her. I withdrew halfway, then plunged in to the hilt. Seeing real lust on Lynn's face inspired me to withdraw to my tip, then drive extra hard back inside of her. Her eyes closed. Hers hips thrust against me.\n\nShe groaned. \"Ohhhh, God, yes!!\"\n\nI established a steady rhythm, I allowed myself to savor the feel of driving into Lynn's depths. I compared the difference between withdrawing and thrusting. Both were divine, yet subtly different sensations.\n\nNow I was grateful she'd arranged things so I'd come a couple times earlier tonight. If I hadn't, I would've exploded during the first minute. As it was, I was barely hanging on. My pace had been speeding up, my groin tingled. My body was begging me to come inside my gorgeous, sexy lover.\n\nLynn's hips sped up; I tried to match her pace. Wrapping her legs around me, she ground her pussy into my pelvis. \"OOOOoooohhh Larry I'm coming.\"\n\nThat was all I needed to hear. My first orgasm inside a woman's pussy overcame me. Dropping my entire weight onto Lynn's body, my hips changed rhythm. I'd hesitate at the apex of my withdrawal, then drive into her pussy as if I expected to reach the floor. I became an unstoppable machine; each thrust was timed so every spurt shot deep inside her churning body. I felt the added warmth of my sperm bathing our joined flesh. This caused me to go faster, harder, I sought to pump ever more of myself into her heavenly womb.\n\nWhen my spurting slowed, my hips adjusted to the decreased pace. Still, any spasm found me driving my tingling penis as far inside her as physically possible. Lynn and I were struggling for breath. Fingers ran through my hair, kisses covered my face. Hands gravitated back to my buns, pulling me into her hips, which maintained a very slow circular grind around my semi-erect cock.\n\nI was spent. I was soon doing little more than lying atop her sweat soaked form. Feeling my remaining fluids drain inside her was pure bliss. Her vagina would contract, milking my cock. I'd respond to her body with a short instinctive thrust.\n\nWow. Oh, wow. I was drifting, floating on a cloud. My hands found Lynn's breasts, gripping her so each areola rose up to my lips as I kissed them, gently nursing on the entire ruddy peak. Heaven couldn't feel any nicer than making love with Lynn.\n\n* * * * *\n\nPlease vote if you enjoyed my story. This journey continues with Chapter 22.\n"
    ],
    "authorname": "Wm_Sexspear",
    "tags": [
        "lynn held",
        "chapter lynn",
        "lynn larry",
        "atop mine",
        "lynn pushed",
        "earlier tonight",
        "lynn opened",
        "finger lynn",
        "hard remember",
        "things beth"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/a-almost-perfect-awakening-ch-19-21"
}