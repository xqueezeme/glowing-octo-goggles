{
    "title": "No Worries",
    "pages": [
        "- - - - -\n\nTwo years after a weekend that changed his life forever, a high school senior hesitates to embrace his feelings for the girl he befriended after becoming an outcast.\n\nA novella about learning to persevere, prosper, and love, when all of it seems impossible.\n\nAuthor's note: Be warned, this is a long story, and it deals with some unpleasant topics.\n\n- - - - -\n\n26 months ago\n\nThe brisk air was chilly and smelled of wet grass. The night sky was thick with dark clouds, ominous and moonless, but far below it, bright stadium lights towered over me, and a roaring crowd surrounded me. This was what I lived for.\n\nThere were 11 seconds left in the 4<sup>th</sup> quarter. We were down 23-28. It was 1<sup>st</sup> and goal. We had the ball on their 7-yard line. The clock was stopped, but we had no timeouts left. We couldn't settle for another field goal this time. Needed a touchdown. And I was gonna get it for us. I'd never been surer about anything.\n\nIt wasn't a home game. The hostile crowd was roaring as I jogged over to huddle. I was breathing hard. Everyone's white jerseys were stained from the grass, but mine was the dirtiest of them all. The '89' on my back was more green than white.\n\nI didn't bother looking over at any of the bleachers. Mom and Dad weren't at the game. Mom had gotten worse, and Dad was staying at her side most of the time. But Mom wouldn't have me there with them. She wanted me to play, and I was glad. With as bad as things had gotten ... it was a relief to have the game to focus on.\n\nOur quarterback hollered the play call at us. \"Singleback Ace Slants, on one, on one.\"\n\nSlants. The routes that ran receivers right into the teeth of a defense. The ball was going to come my way. Who else? The guys called me 'No Worries' for a reason. I wasn't the fastest on the team, or the strongest, or the tallest, but I had the best hands. No one could catch like I could. The others would have a couple drops a game. I'd shock everyone if I had one. I worked at it constantly, at practice, at home. I would dream about football. Football was my life, and I wanted it to stay that way for years.\n\nI jogged over to the X, the spot closest to the sideline on the quarterback's left shoulder. The other team's right cornerback trotted over to me. I'd been beating him all game, getting him to bite on every fake. He stared me down as he lined up across from me. I didn't even give him a glance.\n\nI set my feet in that perfect stance: inside foot up, back foot heel just off the ground. I slipped in my mouthguard, pulled my gloves down taut, and made sure my arm sleeves were just as snug. My chinstrap remained unfastened, the two bottom straps dangling below my helmet. I never fully fastened it. It was uncomfortable. Coach didn't care enough to bench me if I didn't, so I never bothered.\n\nI looked over at our center and watched the football he held against the turf. A moment later, the quarterback barked \"Hike,\" the center snapped the ball, and I took off.\n\nThe cornerback reached his arms out to jam me. I hit him with the fastest club-punch of my life, batting his elbow away and slipping to his right, pushing him off to my left as I cut in and darted away. The football was already zipping towards me as I sprinted to the endzone, but it was coming high. I had to leap into the air. I raised my arms and cupped my hands with the perfect amount of space between them. The ball stuck between my gloves.\n\nEverything after that came in slow motion. The only sound I remember hearing was the thumping of my heart.\n\nMy feet were coming down in the endzone. I started lowering my arms, bringing the ball to my chest. An outside linebacker took his final step towards me and launched himself at me head-first, leading the way with the crown of his helmet. His crown caught against the bottom of my facemask and flung my helmet off my head. When my feet finally hit the turf, my instincts commanded me to bring my head down and curl up to protect the football. As I did that, another linebacker was coming my way, lowering his shoulder, bringing it towards my head. Neither of us could react in time.\n\nThe last thing I felt was his shoulderpad cracking me in my jaw, and my head whipping back.\n\n- - - - -\n\n15 months ago\n\nI was the first at my usual table in an otherwise crowded cafeteria. My new usual table. The table I'd banished myself to. I set down my paper plate with my two slices of pizza and sat to eat another lunch alone.\n\nThe headache was horrible that day. It felt like the worst one I'd had in months. The Tylenol I'd taken that morning didn't do shit, so all I could do was try to ignore it. With how long I'd been dealing with the headaches, with how many months it had been since that game, I should've gotten good at ignoring the pain. But I wasn't. I didn't think I ever would be.\n\nI had my sweatshirt's hood up over my head, cloaking myself. I didn't want to look at anyone, and I didn't want anyone to look at me. I didn't want to think about how I'd gone from being the approachable guy that was friends with everyone to being the grimacing loner. But I didn't resent anyone for that. I wasn't bitter, not at anyone else. I couldn't blame them; I wouldn't have wanted to be around me either.\n\nLunch that day didn't go the way it normally did. I didn't stew in silent dejection for long. A few minutes later, to my shock, someone sat at the table with me, right across from me. More shocking was who it was.\n\nIt was Mariska Janssen, a girl who all I knew about was only that she had moved here over the summer. I had only heard her speak a few times, mostly to teachers. She was basically mute. I'd never even gotten a good look at her until that day. She was skinny and tall, one of the tallest girls at school. She looked like she was five-foot-ten, maybe even five-eleven. Only a couple inches shorter than me. Most of her height was her long legs. She was as pale as I was, if not paler. Her smooth, dark-brown hair fell past her shoulders. Her diamond-shaped face was sparsely flecked with faded freckles, and her lips were full and pouty. She was pretty ... but there was something strange to her, something suffocating looming over her. I could see it in her posture, in her tightly bunched shoulders and slightly hung head. Her big, hazel eyes, the last thing I fixed on, were skittish and sheepish.\n\nI watched with disbelief as she sat across from me. She set her unopened bag of pretzels and bottle of water onto the table. She gave me a half-second of eye contact before looking down to her pretzels and pulling open the bag. She reached into it and gave me another half-second glance. \"Hi,\" she said softly.\n\nI almost stood up and walked away, to a different table, or to the doors. I didn't want to talk, not to anyone. But for some reason, I didn't go. \"Hey,\" I said flatly.\n\n\"My ... mom ... made me promise to say hi to someone,\" Mariska explained, still speaking softly, just on the edge of hearing.\n\nI was expecting her to have some exotic European accent, but she didn't. Any subtle clues of an accent were few and far between. If it wasn't for her name and knowing she'd just moved here, I would've thought she was American. \"So why'd you pick me?\" I asked.\n\nMariska shrugged.\n\n\"You could've just lied to her,\" I said. \"She's not here. She wouldn't know.\"\n\nMariska shrugged again. \"She just wants me to be happy.\"\n\nI knew that line all too well. Dad loved saying it to me. Like it made anything any easier. \"Are you not?\" I asked.\n\nShe hesitated. \"I don't know.\"\n\nI took a bite of my pizza, chewed, and swallowed. \"I thought you'd have an accent,\" I said. \"How come you don't?\"\n\n\"My dad was born here. And ... I watched a lot of American TV. And ... I practiced a lot before we moved. Practiced talking like ... you. I wanted to ... sound normal.\" Then Mariska shook her head, looking ashamed. \"It's stupid, I know.\"\n\n\"That's not stupid,\" I told her. \"That's, like, the opposite of stupid. But ... why do you sit alone? Why don't you ever talk to anyone?\"\n\nMariska looked down at her pretzels. \"I ... have anxiety,\" she said. It seemed hard for her to admit. I figured I must've been the only person at school she'd told that to.\n\n\"Are you anxious right now?\" I asked.\n\nShe nodded.\n\nI didn't know what to say to that. I didn't know if I should try to comfort her, or even how I could.\n\nMariska stared at a pretzel she held between two fingers. \"Why do you sit alone?\" she asked.\n\nI took a moment to think of what to say. That moment wasn't worth much, because I still wasn't sure how to put it. \"Because I'm a fuckin' wreck,\" I said. \"Because I'm sick in the head. Because ... I don't know how to cope.\"\n\nMariska looked up again. This time, her eyes looked straight into mine. \"Me too.\"\n\nI smiled and chuckled under my breath. Mariska gave a small, shy smile of her own. \"I'm Nathaniel,\" I said.\n\n\"I'm Mariska.\"\n\nWe didn't speak much more that lunch. But when the next bell rang, I had the feeling we'd be sitting together again tomorrow.\n\n- - - - -\n\nPresent day\n\nThe pain woke me up. It pounded in my head like a drum, throb, throb, throb, until I was wide awake.\n\nI flung off my bedsheets and grabbed my phone from my nightstand. I switched off its alarm just before the time at the top of the screen ticked to 7:50 AM. I held my phone closer. There wasn't a text from Mariska yet. That was strange. She always woke up earlier than me, and texting me was usually the first thing she did. That little 'Good morning!' text she always sent was the best part of waking up. It was odd that it wasn't there. I figured she must've overslept.\n\nBright sunlight bled from between the cracks in my window's blinds, and I grimaced when it happened to strike my eyes. I rolled out of bed with a grumble and got onto my feet. I yawned as I looked around my bedroom.\n\nI hated my room. It was so ... lifeless. There were no posters on the walls, no framed pictures on the shelves. There was no color. It wasn't always that way. There was personality in my room once. But the things that used to be there, that things that were me ... they weren't me anymore.\n\nMy phone buzzed and vibrated in my hand. I held it up and found a text bubble on the screen.\n\nMariska: Good morning!\n\nThere it was. It was late, but it brought me a smile all the same. I swiped on the text bubble and started tapping away.\n\nMe: Good morning. U oversleep?\n\nHer: No. Was doing stuff\n\nMe: What stuff?\n\nHer: Girl stuff\n\nMe: Oh\n\nHer: Are u getting ready?\n\nMe: Yeah. C ya in a bit\n\nHer: C ya\n\nI went to my closet and opened the two sliding doors. I set my phone atop my dresser and grabbed the bottle of Tylenol. I popped off the cap and poured two pills into my hand. I cocked back my head, threw the pills to the back of my throat, and swallowed.\n\nI left my room and went down the hall. I trotted down the staircase and made my way to the kitchen. Along the way was the living room, where I saw our tiny Christmas tree glowing red and green. It was a pathetic little plastic thing. Back in the day, we'd always had a huge, real tree straight from a farm. Dad had always hated the mess real trees made with all those shed needles, but he'd put up with it for Mom's sake. She loved real trees. Loved the smell of them. But now ... there wasn't any point. So, plastic we went.\n\nIn the kitchen, I glanced at the countertop, where Dad usually left notes for me before leaving town for work. Sure enough, sitting on the countertop was a sheet of printing paper he'd hastily scribbled onto. A fifty-dollar bill peeked out from beneath it.\n\nNate,\n\nI'll be at the airport before you wake up. Should be home Wednesday. Left $50 for takeout. Go out for dinner when I get back?\n\nLove ya, bud.\n\nDad thought I resented him for his job as an airline pilot always taking him away from home. I didn't. I was glad he was a pilot, and that it kept him busy. Always moving around like that, it must've made it easier to deal with losing Mom. I never took Dad for granted. I knew that if it weren't for his six-figure salary we wouldn't have had our nice house on Mercer Island just twenty minutes from Downtown Seattle. I had tried telling him all that, but I was never great at talking to him. Honestly, it was good that he was away from me so much. He was better off. Even though he'd tell me otherwise, I was convinced that being around me sapped the life out of him.\n\nI left the cash under the note. I'd pick it up later, on my way out of the house.\n\nAfter I got the coffee maker going, I left the kitchen and hurried back up the stairs, to the bathroom just outside my bedroom. I swung open the door, flipped up the light switch inside, and went to the tub. I swiped aside the shower curtain and reached over towards the faucet. I pulled the lowest handle all the way down, letting loose the water. Then I switched the water to the showerhead and turned the heat handle up to just a few notches below the 'H.' I liked my showers steaming hot.\n\nOur water always took a while to heat up. A lot of the other homes in the suburb had installed tankless water heaters, but we hadn't. With how often Dad was gone, it would be an expensive investment for the sake of one person. So, I used the time to brush my teeth. Steam was floating out from above the shower curtain by the time I finished brushing.\n\nI tugged my boxers to the floor and stepped into the tub. I rested my hand against the wall and held my head right below the showerhead. The heat helped a little with the pain ... but not enough. My head felt like a mess of twisted knots of throbbing flesh. It wasn't a crippling pain, but it was an exhausting one. It wore me out. And every time it ebbed away and I started to feel normal again, it would sneak back up on me.\n\nI had turned eighteen just before Halloween. I'd been an adult for almost two months, and yet nothing was any easier. For some reason I'd been holding out hope that it would, but ... being an adult didn't change anything.\n\nIt was always so tempting in the mornings to just get back into bed and close my eyes, but I knew better. Dad would've gotten a robocall from the school if I didn't show up, and then I'd get a long talk with him over the phone on whether I was 'okay.' It'd happened before. One time was enough. And that wasn't the only reason why I never skipped. If I didn't go to school, Mariska would've been alone. She'd walk to school alone. She'd sit in class alone. She'd eat lunch alone. And she'd walk home alone. Thinking about that was always enough to get me out of the house.\n\nOnce I was finished up, I turned off the water. After stepping out of the tub and grabbing a towel from the cupboard behind me, I wiped the steam from the mirror, revealing the reflection.\n\nI was tall, broad-shouldered and lean. And damn pale. Hadn't spent much time outside lately. I had a narrow face and strong jaw. My eyes were an icy blue, with tired shadows beneath them. My unkempt, black hair was the longest it had ever been. It reached past my ears, ending just above my shoulders. I had a dark stubble all around my face. Hadn't shaved in some days.\n\nI reached for my razor, but I stopped myself. Didn't care enough to bother with a smooth shave, and Dad wasn't there to nag me about it. If I knew what Mariska would've liked better, then maybe ... but ... we were just friends.\n\n- - - - -\n\nMariska's house was on the northeast side of Mercer Island, close to the East Channel. I pulled into her driveway in my black 2006 Monte Carlo, an old coupe that was still going strong. My car was one of the few things from that 'Before' time that I managed to keep in my life after everything happened. It was the last big thing Mom had ever taken me to buy. It had been kind of an old car, even at the time, but I didn't care. It had been in good shape, and I liked how it looked. Now it was special to me, and always would be. I didn't think I'd ever want to replace it. We'd be together until one of us died.\n\nI kept the heat off while I waited. It was a crisp 59 degrees outside, an almost record warmth for a December day in Seattle; it was plenty comfortable. The thin sheet of dust-like snow from the day before was long gone. I had on a standard crisp-Seattle-weather outfit: spring jacket, long-sleeved shirt, jeans, and sneakers.\n\nI spent the wait thinking about what Mariska and I would do over the weekend. Or, rather, what we'd binge-watch. The throbbing in my head started ebbing away. It always did around that time. The pain worked in waves, coming and going. Some parts of the day were always worse than others. Driving to school with Mariska was never one of those times.\n\nMinutes passed, and that was odd. Mariska was usually ready the second I pulled in. If she wasn't out soon, we weren't going to be able to grab breakfast at a drive-through. That was something we did every Friday. It was a ritual of ours, our first little taste of the leisure of the weekend. After the next seven hours or so, for a few wonderful days we could relax and laze together all we wanted. Sharing a breakfast in a peaceful parking lot was only the start of it.\n\nA few years ago, when I was about to be a freshman, I'd been amazed when I heard that the high school was moving its start time to forty-five minutes later. I'd always been so damn tired in the mornings back in junior high. But little did I know that in Amsterdam, where Mariska was born, schools had started at 8:30 since forever. Lucky them.\n\nAfter another few minutes, Mariska finally slipped out of her front door and started down the walkway. She was wearing a white hoodie, blue, baggy jeans, white-and-pink sneakers, and a heavy backpack strapped over each of her shoulders. Her long, chocolate-brown hair cascaded down her back, covering her ears. Her eyebrows were trimmed but still looked thick, in a good way. She had on the same minimal makeup as always: pale pink lip gloss, a touch of mascara, and a single stroke of eyeliner along each of her lashlines. If she ever wore any foundation, I couldn't tell. She never covered her freckles. I was glad she didn't. I liked them.\n\nTo me, she was a walking dream. Slender and tall, with long, long legs. Yet she never wore skirts or skinny jeans or leggings, even though she definitely could. Those were about showing off, and Mariska only ever did the opposite. She would hide herself. She didn't see herself like I did. I wished she would. I don't know what she thought she saw whenever she looked into a mirror, but she was wrong. She was beautiful, from head to toe ... and it only seemed like she was more beautiful with every passing day. Sometimes, when she and I were together, I had to just stop and admire the sight of her. I couldn't help it. It felt like I was under a spell. And I guess I was.\n\nAs she got closer to my car, Mariska's hazel eyes met mine through my windshield. She smiled at me. I smiled back.\n\nI was in love with her. Had been for a while. There was a time where I tried denying it, but that was over. There was no denying what I felt for her. There was no denying that it was stronger than anything I'd ever felt for a girl.\n\nMariska popped open my car's passenger-side door and plopped her backpack into the space in front of the seat.\n\n\"Hi, Nathaniel,\" she said as she sat down, still smiling.\n\n\"Hey,\" I said.\n\nMariska had never once called me 'Nate.' 'Nathaniel' was what Mom had named me, but most everyone else called me Nate. Dad, the guys on the football team, my cousins, everyone. Everyone except for Mom. It didn't bug me to be called Nate, whenever someone asked if they could call me that, I said sure. But Mom had made something special about Nathaniel. Even more so now that she was gone. Way back when I had told Mariska that most everyone called me Nate, she did something no one else ever had: she asked me what I liked being called more.",
        "Mariska buckled herself in and turned towards me. \"My mom and dad already left for the airport,\" she said.\n\n\"Oh, yeah?\"\n\n\"Maybe they'll see your dad there.\"\n\nI nodded. \"Maybe.\"\n\nI'd almost forgotten that Mariska's parents were flying back to the Netherlands for the weekend. Her great-grandfather on her mom's side of the family passed away, and the funeral was tomorrow. Mariska's parents didn't make her go with them. The 10-hour flight here to the States was hard enough on her. They didn't want to force her to go through all that again.\n\nI shifted the gear into reverse and looked to the back window.\n\n\"Nathaniel?\"\n\nI looked to Mariska. I met her eyes, and they stayed on mine. \"Yeah?\"\n\n\"Can I sleep at your house this weekend?\" she asked.\n\nI froze.\n\nI should've seen that coming. Why the hell didn't I see that coming? I tried to hide my unease, but it took too long to force out some words and start talking. \"Uh ... um ... wouldn't you rather sleep at home?\" I finally asked.\n\nMariska shook her head. \"I don't wanna sleep in an empty house.\"\n\n\"Uh. Okay. Yeah. Sure. You can sleep in the guest room.\"\n\n\"Can I sleep on the couch in your room?\"\n\nThat made me even more uneasy. Again I took too long with my words. \"Uh ... yeah. Of course.\" I looked away from Mariska, back to the rear window. I tried swallowing the nervous lump in my throat. I failed. \"We're running a little late,\" I said as I started backing up the car. \"You still wanna grab something to eat on the way?\"\n\n\"Do you think we'd still make it on time?\" Mariska asked.\n\nI pulled out of the driveway and into the road. No other cars were around. \"It'd be close. But yeah, I think so.\"\n\nMariska nodded. \"Then yeah.\"\n\nWhen I shifted the gear, Mariska's hand shot out and grabbed my wrist. I turned to her. Her smile was gone. There was fear in her eyes. Real, true fear. \"But don't speed,\" she said softly.\n\nI had never once gone more than 5 miles over the limit with Mariska in the car. Had never been in an accident either. Mom had drilled 'defensive driving' into me ever since I got behind the wheel. But even so, I knew Mariska couldn't stop herself from saying something like that. She couldn't help being anxious. It was a curse she carried, a sickness inside her head. Just like the headaches were mine. \"I won't,\" I assured her.\n\n- - - - -\n\nOur school looked so dreary to me. The tiled floors were a faded gray, and the walls were a sterile white. Even our school colors were nauseating: a rusty maroon and a sickly silver. Had the colors always been so faded and grim? I honestly wasn't sure. It was hard to remember things from the Before time.\n\nNo one said a word to me as I walked the halls. They never did, not anymore. That was my own fault. I'd pushed too many people away, burned too many bridges.\n\nThe first few classes of the day went by quickly. They were uneventful and easy to get through. Until 4<sup>th</sup> hour, Calculus, came around. All of a sudden, the pain blasted back, full force.\n\nI could feel my heartbeat thudding in my brow. Beads of sweat were trickling down my forehead, but that was less from my headache and more from the hot air being blown from Mr. Chen's numerous space heaters. There was some problem with the air conditioning that the school was in the process of fixing, and Mr. Chen went way overboard in compensating for that. Everyone in class had their jackets, sweatshirts, and overshirts pulled off and resting on the backs of their chairs. Still, the heat didn't make my pain any worse. I wouldn't have been able to survive being in the room if it did. It just made me more uncomfortable than the pain already had. I could survive that. For an hour, anyways.\n\nMr. Chen stood at the front of the room, by the whiteboard. He wore a maroon sweatshirt and a very baggy pair of gray sweatpants. He never dressed 'business casual' like the other teachers; he was also the basketball coach. He was a heavyset guy, and didn't have much hair. The big bald spot on his head was on full display with his back to us. He was explaining something as he scribbled equations onto the whiteboard at a breakneck pace. I wasn't paying attention. The pain was pounding.\n\nI slid my fingers up through my hair and cupped my eyes in the palms of my hands. It was a good thing all the teachers knew how fucked up I was, otherwise Mr. Chen might have actually called on me to answer something.\n\nI felt the eraser of a pencil poke into my side. I turned to Mariska's desk.\n\nShe was watching me with this look of frightened concern, the same look she always had when I was hurting. I hated seeing that look. That fear and distress and sorrow. It made me sick to see her like that. My headaches weren't a secret from her -- that would've been a damn near impossible secret to keep -- but I always tried to lie about how bad they were. I didn't want her worrying about me.\n\nEven Mariska had her sweatshirt off, down to just her plain white tee. \"Are you okay?\" she whispered.\n\nI forced a weak smile and nodded. It didn't convince her. She frowned.\n\nI wasn't good at lying to her.\n\n- - - - -\n\nEven the lunch trays in the cafeteria were a flat gray. Couldn't they have been a bright blue? Or a juicy red? Or anything other than fucking gray? I was so sick of gray.\n\nMy headache had ebbed a bit as I waited in line inside the cafeteria kitchen. I grabbed only my usual: two big slices of pizza on a paper plate, and a bottle of Gatorade. At the end of the line, the skeletal Mrs. Mitchell tapped away on the touchscreen in front of her. She stared at me with dead eyes as I pressed my finger into the scanner. The guys on the football team used to joke that she's secretly a reanimated corpse employed by the school. I didn't know what the hell was wrong with her, but at the rate I was going, she was exactly how I imagined myself being when I was her age: a dead-eyed husk.\n\nI found Mariska waiting for me on the other side of the kitchen doorway, at the dividing wall that separated the cafeteria from the lunch line hall. She was holding a bag of pretzels and a bottle of water.\n\n\"You wanna eat outside?\" she asked as I approached. \"It's still kinda warm.\" Mariska hated eating in the cafeteria. She hated it for the same reason she always had her mom cut her hair, and why she hadn't been grocery shopping since she was fourteen, and why she hadn't seen a movie in theater since she was twelve: too many people, too many eyes. She was always convinced that she was being stared at by someone somewhere, and that she looked awkward or weird. Personally, I was pretty sure that nobody in our school cared enough about either of us to stare. But it didn't make a difference to me where we ate, so I always went wherever Mariska wanted to. I would've eaten in pouring rain for her. With Seattle's weather, it was surprising that we hadn't already done that.\n\n\"Sure,\" I said.\n\nWe walked to the front doors and pushed through them. Felt closer to 50 degrees outside by then. Not too bad, not with a jacket on. Mariska and I strolled side-by-side across the sidewalk until we came up to a metal bench on the middle of the schoolgrounds. I reached down and gave it an experimental touch. It was cold, much colder than the air. Too cold for comfort.\n\n\"The grass is probably warmer,\" I said.\n\nMariska pointed at the leafless yellowwood tree just ahead of us. \"We can sit over there.\"\n\n\"Sure.\"\n\nWe sat at the tree together. The trunk was just wide enough for both of us to have our backs against it, shoulder-to-shoulder.\n\nI ripped off chunks of the pizza between my teeth. It was a little bland, and chewier than it should've been, but that's how the school's pizza always was. As far as our cafeteria went, the pizza was still one of the least offensive things a person could eat. Beside me, Mariska tore open her bag of pretzels and started eating like a bird, piece by dainty little piece.\n\nAs we sat there and ate, I could barely feel my headache. Lunch was never a bad pain time.\n\nMariska and I didn't often talk much while we ate, so I spent the time daydreaming, losing myself in my thoughts. Of course, those thoughts were locked onto the girl beside me.\n\nI wanted to confess to her, badly. I'd wanted that for a long time. It wasn't me being shy stopping me; I'd never been shy a day in my life. It was fear. I knew Mariska and I had a good thing going, being best friends. I wasn't going to risk that by trying to make us into something more, into something we maybe couldn't ever be. If I told her that I loved her and found out that she didn't love me back, then our friendship would change. I'd break my own heart, and I'd make everything weird between us. I'd ruin what we had. Forever. I just couldn't risk that. Couldn't risk losing her.\n\nMariska leaned her head against my shoulder. The scent of her hair filled my nose. It was always the same scent. I wasn't sure if it was her shampoo, or her perfume, or just her natural female pheromones, but whatever it was, it was fucking heavenly. I always wanted to just rest my nose against her hair and breathe in deep. Was I a creep for wanting that, I wondered? Was that that a creep thing, or a madly-in-love thing? I wished I knew.\n\nMariska's head shifted on my shoulder. \"Nathaniel?\"\n\nI turned my head towards hers. Our eyes met. She was watching me with this ... strange look of emotions that I couldn't quite glean. It was a look I'd never seen from her. \"Yeah?\"\n\n\"Do you think I'm pretty?\"\n\nI laughed nervously. \"Where's this coming from?\" I asked.\n\nShe shrugged.\n\nI almost didn't answer. I didn't know why she was asking, and that worried me. It could've just been an innocent question. I didn't want to overstep. But ... it was too easy to tell her the truth. \"I think you're beautiful.\"\n\nMariska kept her eyes on mine. Then, a moment later, she looked away. We didn't speak another word until the next bell.\n\n- - - - -\n\nI didn't share my 5<sup>th</sup>, 6<sup>th</sup>, or 7<sup>th</sup> hour classes with Mariska. The rest of the school day was absolutely miserable. The pain came back, and it came back without mercy.\n\nWhen the last bell finally rang, I was the first one out the door and into the hall. But I didn't go to the seniors' lockers.\n\nI normally stayed away ... but I couldn't stop myself. I had to see her again. It had been too long.\n\nIt was a short walk to her. She was right at the end of the northeast hall, within the framed photographs of past graduating classes.\n\nJUST IN TIME,\n\nCLASS OF '89\n\nThere Mom was. Fifth column, ninth row. Smiling from ear to ear, grinning like nobody else ever could. She looked so ... healthy. I'd almost forgotten what she looked like with hair. It was the same black as mine. Her eyes were the same bright blue too. I got damn near everything from her.\n\nShe was a tomboy through and through. It was her that I would go into the backyard and practice catching the football with. It was her who came to every game. And it was her who I went to when something had me down. 'Everything will be better tomorrow.' That's what she always told me. And it used to always be true. But then she got sick. Then it was never true, and the next day was never better than the last.\n\nTowards the end, she had me promise her I'd be okay when she was gone. I wondered, could she see me now? Could she see how badly I'd broken that promise?\n\nThe pain got worse and worse as I stared at her picture, until it was too much to bear. I winced and drew a hissing breath as I jammed my eyes shut and squeezed my head with my hands. Every muscle in my body was tightening. My neck stiffened so hard that I thought it would snap.\n\nI needed to get home.\n\nSquinting through the pain, I turned around and hurried down the hall, through the endless traffic of moving bodies, bumping into a dozen shoulders as I darted by. I was at my locker less than a minute later. I spun the dial of my combo lock faster than I'd ever tried, but that only made me miss my numbers, and I had to spin the final number three times before I got it. The instant the lock clicked, I flung the door open. I stuffed every binder, book and notebook I needed into my backpack, zipped it up, and slung it over my shoulders.\n\nI turned and looked towards Mariska's locker at the far end of the hall. I couldn't see it past the horde of bodies. I started towards it, but the strength suddenly left my legs, and they buckled and gave out from under me. I fell onto my hands and knees on the cold floor. The chatter and footsteps around me came to a stop.\n\nI don't know how long I was on the floor with everyone staring at me. Felt like forever.\n\nThen sneakers squeaked along the floor as someone ran towards me. They dropped onto their knees in front of me. Soft, slender fingers curled under my stubbled jaw and gently lifted my head. I found Mariska's hazel eyes. She wiped my tears away on the cuff of her hoodie. I hadn't even realized I'd cried. I hadn't felt it. How long had it been since I'd last cried?\n\n\"Come on,\" Mariska said in a sweet, hushed tone. She grabbed my arms. \"Get up.\"\n\nWith Mariska helping, I managed to stand onto my feet. When I was up, everyone around us mumbled and went back about their business. The sea of moving bodies resumed its waves.\n\n\"We should walk home,\" Mariska whispered. \"You shouldn't drive right now.\"\n\nI sniffled and mustered a weak nod. \"Okay.\"\n\n- - - - -\n\nA gray sky loomed over us, with gray clouds shadowing a gray sun. Around us were gray houses lined with gray fences. Between them were gray roads paved with gray asphalt. It seemed like gray was all I could see ... except for the colors walking beside me. The brown of her hair. The pink of her lips. The hazel of her eyes.\n\nIt was a long walk from school to my house. We strode slow and steady from one sidewalk to another, one gentle step at a time. Mariska held my hand. We'd never held hands before. Hers was so soft, with slim, smooth fingers ... I wanted to hold it until the end of time.\n\nThe headache had tapered down. The stiffness was gone from my neck. The pain was still throbbing in my head, but it was manageable. I could bear it.\n\nI knew seeing Mom's picture would give me a flare-up. It wasn't the first time. But sometimes I didn't want to play by the pain's rules. Sometimes I just wanted to be able to see my own mother again, even if it was only a picture. If that meant there was a price to pay, then I'd fucking pay it.\n\nAs we walked, I counted every time a car drove by. I did it because I knew that every time one did, it was another moment where Mariska's anxiety tugged at her heart. I started feeling bitter with guilt. We shouldn't have been walking. I shouldn't have had that meltdown and made that scene, and I shouldn't have made Mariska be a part of it. I couldn't imagine what she felt when she was helping me onto my feet, with everyone watching and staring. \"I'm sorry,\" I mumbled.\n\n\"For what?\" Mariska asked.\n\n\"Everything.\"\n\nHer fingers curled further between mine. \"Don't be.\"\n\n\n\nMariska gave me a sweet smile. \"Okay. Text me when you wake up.\"\n\n\"I will.\"\n\nAfter a pause, Mariska stepped forward and hugged me, putting her head over my shoulder. I closed my eyes and put my arms around her, beneath her backpack.\n\n\"Nathaniel.\" Mariska squeezed me in her arms. \"You're my everything.\"\n\n\"You're my everything too.\"\n\nMariska took her head from my shoulders and grabbed the scruff of my neck. I opened my eyes and gazed into hers. She raised her other hand and cupped my cheek. Her eyes flitted over my face, up and down, until they settled again on mine. She opened her mouth to speak ... but then stopped herself. Her fingers slid down from my cheek and neck, until her hand slipped away. She left my arms and stepped back. \"See you soon,\" she said softly.\n\nI nodded. \"See you.\"\n\nMariska gave me a half-wave goodbye. I gave her one back. When she turned and started off, I went to the door, unlocked it, and pushed inside.\n\nI shrugged off my jacket and hung it in the closet by the door. After I pulled off my sneakers and grabbed a cleaner, running pair, I went down the hall and up the stairs to my bedroom. Inside, I tossed my backpack onto the couch and went to my closet. I shook out another couple Tylenol from the bottle atop my dresser and threw them down the hatch. I pulled my shirt off my head and tossed it into the hamper beneath my hangers, and I changed out of my jeans into a pair of shorts. After I put on my running shoes and laced them up, I went back down the stairs and through the doorway into our home gym.\n\nI was tired, but I wasn't too tired to run. I was never too tired for that. Running was important to me. It cleared my head. And it was one of the few things in the world that dulled the pain.\n\nI didn't bother flipping on the stereo or the wall-mounted TV. I liked listening to my own breath while I ran. I stepped onto the treadmill and tapped my finger on the console touchscreen until I had it set to my custom preset, 'Until It Burns.'\n\nThe treads whirred quietly as they started at a slow, warm-up pace. I looked down and watched my feet walk, one after the other, almost of their own will. I'd done it so often that it came by instinct.\n\nAfter a few minutes, the treads' pace automatically quickened, and the whirring grew a little louder. My feet went faster. Then it quickened again, and then again, until my feet were running, my whole body bounding up and down with each trot. I looked up at the touchscreen just as the timer flipped on and started counting down from thirty minutes.\n\nWhen it hit zero, I was drenched. My black locks were slicked against my head and neck with sweat, and my dark chest hair was glistening with beads of it. My heart was thumping hard, my lungs and legs were burning, and best of all, I could barely feel my headache.\n\nAfter the treads slowed to a stop, I hopped onto the floor and flicked my wet hair out of my face. Eager to crash and nap, I left the room and jogged up the stairs. I went into my bathroom, unlaced my shoes, kicked them off, unfastened the drawstring of my shorts, tugged them down, and took one of the quickest and coldest showers of my life.\n\n- - - - -\n\nThe doorbell made me jerk awake. I sat up and groggily rubbed my eyes and face. I looked at the window blinds. The sunlight was dimming. It was already getting dark out. Daylight didn't last long in December. I would need to go get Mariska in an hour or two if I didn't want the walk to my house to be at night.\n\nThe doorbell rang again. I wrenched myself out of bed and threw on a clean t-shirt and pair of boxers from my closet. My headache was thudding in my head, but it wasn't too bad. It was a lot better than when I first got home.\n\nThe doorbell rang a third time as I went down the stairs. I scoffed under my breath and shook my head. Whoever was there was in a fucking hurry.\n\n\n\nI was confused. \"Mariska, I would've walked you over here,\" I told her. \"You didn't have to\u2014\"\n\n\"\u2014I need to tell you something,\" she said, cutting me off. \"And I ... need to tell you while I still can. While I still ... have the courage.\"\n\nI nodded, still confused, but placated. \"Oh. Okay.\"\n\nMariska came inside. I closed the door behind her. We turned and faced each other, standing close together.\n\n\"What do you need to tell me?\" I asked.",
        "\"Nathaniel, I ... I want you to know how much you mean to me,\" she said. Then she paused and fell silent. She swallowed nervously. \"You're special to me.\"\n\nMy throat swelled up.\n\n\"You always have been,\" she went on. \"And ... I've been thinking about that. The first day we ate lunch together, when I looked at you from across the cafeteria ... I was convinced that we could never be friends. I was wrong. I've never been closer to anyone than I am to you. I've never felt ... this ... for anyone. And ... now I've convinced myself that ... that we could never ...\"\n\n\"... be more,\" I finished for her. It was hard to get those words out, but I needed to.\n\nWe spent a long, silent moment looking at each other.\n\n\"I want to,\" Mariska said softly.\n\nThat was all I needed to hear.\n\nI took a step closer to her, so that I stood almost pressed against her, our faces just inches apart. All the affection I had ever felt for Mariska was bubbling up inside me. The love, the passion, the need, it all swelled inside my chest ... until it burst.\n\nI leaned into her, closed my eyes, took her into my arms, and kissed her. Her lips were soft and warm and moist ... and in that moment, they were my whole world. Mariska draped her arms over my shoulders and embraced me. Her lips were eager but clumsy. I could tell she'd never kissed anyone before. But that was alright. I was fine with leading the dance.\n\n\"I love you,\" Mariska whispered between kisses, her lips never straying far from mine.\n\n\"I love you too,\" I whispered back. I only said it out loud that once, but in my head I said it a thousand times. I love you, I love you, I love you ... I said it for every time I ever wanted to say it before.\n\nEvery smooch was a smooth stroke of catching and sucking. There was an audible smack each time our lips parted. Our noses grazed together, and our warm breath rushed out over each other's faces, but I hardly noticed any of that. My mind was locked onto those full, moist lips, on the feel of them, on the sound they made when I kissed them.\n\nI took Mariska to the nearby wall, bumping her back against it. At first, my hands roamed her neck and hair, caressing her soft skin or curling through her long, smooth locks, all as our lips danced and smacked. But then I grabbed her waist and slid my hands downwards, to her hips, where I gently squeezed her. My mind was racing with want and desire, all of it for her. I made our kiss faster, hungrier. Every catch and suck of our lips came with hotter and heavier breaths than the last. The soft smacks grew louder.\n\nWhen we paused, getting some air to gather our breath, we opened our eyes and looked to each other. Mariska was almost panting. She gave me a shy smile. \"You're good at kissing,\" she said.\n\nI smiled back at her. \"So are you.\" Sure, I had all the experience, but she did damn well at following my lead.\n\nSadness flashed in Mariska's hazel eyes, and her smile slipped away. \"I'm sorry I didn't tell you sooner.\"\n\nI shook my head. \"It's my fault too.\"\n\n\"We could've done this forever ago.\"\n\nI looked at my hands on Mariska's hips, then looked back up at her. \"Then let's make up for lost time.\"\n\nMariska's shy smile returned. She giggled beneath her breath. \"Okay.\"\n\nThat was enough talk; we'd gathered our breath. I closed my eyes and pushed my lips onto hers, resuming right where we'd left off.\n\nI took our kiss deeper. When I next brought my lips, my mouth was open a little wider, and my tongue came with it. After my tongue touched her lips, the next time my mouth came, hers was open, waiting for me. She knew what to do, and she wanted to do it. My tongue found hers. Right away, I felt the wet heat of it. The first touches of our tongues were slow, stroking brushes, but soon I wanted even more. Before long, my tongue was aggressively wrestling hers, pushing down on it. My head tilted further, and for short moments we just held our mouths open, letting our tongues make love.\n\nMy desire was running wild. I couldn't slow down. I reached a hand around Mariska and grabbed her ass, but I realized right away that might've been too much. I drew my hand back. \"Sorry,\" I said.\n\n\"It's okay,\" Mariska said. \"I liked it.\"\n\nThat's when I understood. I couldn't have gone too far if I tried. This was going fast, but that's what we wanted. We didn't want to wait; we'd waited long enough already. Like I'd said, we were making up for lost time. And Mariska wanted this as passionately as I did.\n\nI grabbed Mariska's ass with both hands, and then lifted her. She reacted quickly and locked her legs around my hips to give me some support, but I didn't need it. She was only 140-something pounds. I could carry that. Maybe not for hours, but I could get her upstairs. I could get her to my bedroom.\n\nWe never broke our kiss as I walked us around the corner and started up the staircase. I shifted one of my hands to her lower back for easier carry, and used the other to hold the wall and steady us. I took it one slow, easy step at a time. I wasn't in a hurry. I was content with kissing her until we got there. When we arrived in my bedroom, I flipped on the light switch. I dropped myself onto the middle cushion of my couch, taking Mariska with me, seating her on my lap. Mariska shrugged off the strap of her purse and let it fall off her, onto the floor. The couch was big, poofy, and plushy, and I'd often joked that it was more comfortable than my bed. Even if it really wasn't, it was perfect to be on for hours. It was a perfect place to kiss.\n\nI grabbed Mariska's hips again. I kept kissing her, playing with her lips, tugging on them, sucking them. Our tongues would touch right after our lips did. The sounds of our kiss filled my ears. It felt like we sat there kissing for half an hour, or longer. I could hardly feel the pain in my head. It was there, I knew it was there, it was always going to be there ... but I could hardly feel it. \"I love you,\" I blurted out as we kissed. That was a time where I had to say it aloud.\n\n\"I love you too,\" Mariska replied in an instant.\n\nWhen we finally broke our kiss to take another breather, Mariska rested her forehead against mine. We gazed into each other's eyes. I wondered if Mariska could see me. All of me. The things behind my eyes. The pain, and the love.\n\n\"I wanna go all the way,\" Mariska said suddenly.\n\nI almost asked if she was sure ... but I knew she was. And so was I. \"Me too,\" I said.\n\nIf there were such a thing as soulmates, Mariska was mine. We were good for each other. We gave each other shoulders to lean on. And if there was such a thing as destiny, this night was it. Dad was gone working. Mariska's parents were out of the country. It was just us. Me and her. No one else. There wasn't going to be a better night for our first time, or a better weekend for our first days together. It felt fated, in a lot of ways. I was eager for this. I'd been fantasizing about Mariska for so long. I couldn't count how many nights I dreamt about her, how many mornings I woke up hard thinking about her. But I wouldn't have to fantasize of her any longer.\n\nMy mind was racing with all these thoughts when a certain realization suddenly struck me, completely halting me. \"I don't have any condoms,\" I said. \"I'll go buy some. I'll be right back.\"\n\nI moved to get up, but Mariska stopped me with a hand on my chest. \"I'm on the pill, remember?\"\n\nI knew that. I hadn't forgotten. Mariska had taken the pill since she was fourteen, for cramps, bleeding, and other things I was glad I didn't have to deal with as a guy. It wasn't something she'd admitted out of nowhere; I'd seen the packet of pills alongside her prescriptions once when we were doing homework together. It wasn't Mariska getting pregnant that I was worried about, I knew the pill would stop that. Truth was, I'd never had sex without a condom. I didn't know what it would feel like. I didn't know how long I'd last. That made me nervous, and I didn't want to be nervous. I wanted to be confident. \"There are other reasons to use one,\" I said.\n\nMariska shook her head. \"I don't want one. I don't wanna feel ... that. I don't want something ... between us. I just want ... us. I wanna feel ... you.\"\n\nI spent a moment thinking it over, and then nodded, agreeing. \"Okay,\" I said. This changed things, but ... Mariska was the one with the courage to start all this. The least I could do was be a little courageous myself.\n\nWithout another word, Mariska grabbed her sweatshirt and started pulling it over her head. My heart had already been pounding, but it raced even faster at the sight of that. Instinctively, I did the same she did. I pulled off and tossed away my shirt, and when it was off my head, when I could see, I saw Mariska again.\n\nShe wore only a cream-colored bra. As she sat there in my lap, shirtless for the first time in front of me, I finally saw her unhidden figure. She was slim but shapely; there were smooth but pronounced curves from her narrow waist to her wide hips. She was an hourglass. I almost couldn't believe it. I couldn't believe how beautiful she was ... and I couldn't believe that something so beautiful felt like it had to be hidden. God, those hips. I couldn't stop myself from grabbing them and curling my fingers into her soft skin. As I held her, I leaned forward and kissed her taut tummy just above her navel. Mariska giggled. I gave her tummy another kiss, a wetter one, and she giggled again. She was ticklish. I laid back against the couch, so I could take in the sight of her again. I was astonished, my eyes wide. \"You're incredible,\" I muttered.\n\nMariska gave me that shy smile again. I loved that, that shy smile on that freckled face. \"Really?\" she asked.\n\n\"Really.\"\n\nMariska leaned forward, coming closer to me. She placed her hands on my bare chest. I could feel her give me a slight press here, a slight squeeze there. From that lusty look in her eyes, I had a feeling she was enjoying me as much as I was enjoying her. I wasn't as muscled as I was back in my football days, but I was still fit, and still had tone. Mariska slid a soft hand across my pecs, then slid another down my abs, and then curled her fingers through my black chest hairs. This wasn't the first time Mariska had seen me shirtless -- I'd ran shirtless in front of her before -- but this was the first time she was so close, and the first time she was touching me.\n\nMariska pulled her hands away. She did it so suddenly that I was about to ask if something was wrong, but then I saw her hands reach behind herself, behind her back. A moment later, her bra straps popped free, and she began pulling her arms out of it, until her bra was held against herself with just one hand. That hand didn't remain there for long. It lifted, taking her bra up, and taking her breasts up with it. Then, when her hand and bra were up and gone, her breasts fell into view, briefly bouncing as they did. The long locks of her smooth, brown hair partially obscured her breasts, so I brushed those locks away, casting them aside like curtains, revealing what was behind them.\n\nMariska's breasts were full, firm, and perky. They were a little bigger than I'd thought they'd be; her clothes hid them well. But they weren't large. They were just right. Two perfect handfuls. Her nipples were peach-colored, contrasting the milky paleness of the rest of her. I had wondered what her breasts looked like for so long. Now I only needed to know what it would be like to touch them.\n\nI reached forward and closed my hands around her breasts. They were soft and warm. Her nipples poked into my palms, a little stiff, and only getting stiffer. I curled in my fingers, sinking them into her breasts. They were such soft flesh, so easy to squeeze.\n\nI might've been overly eager, because once my hands were on Mariska's breasts, I started enjoying them every way I could think of. I cupped them. I squeezed them. I kneaded them. I lifted them and let them drop and bounce. I pushed them in from the sides and made them jiggle. Mariska must not have minded, because she was nibbling her lower lip, and it did not look like a pained expression. It was when I gently pinched her nipples, pulled her breasts with them, and let go of them and let them bounce away that I stopped, because that was when I drew a sudden moan out of her. \"Are your nipples sensitive?\" I asked, though I could see the answer.\n\n\"Yeah,\" she said.\n\nWithout saying anything, I shot forward up and closed my mouth around the nipple of her left breast. Mariska gave a little gasp. I hollowed my cheeks and sucked hard on her stiff nipple. I pulled her whole soft breast with my mouth alone, until the suction wasn't enough anymore and her breast popped free from my lips and fell away. Mariska moaned again. \"That feel good?\" I asked as I looked up at her, smirking.\n\nShe nodded. So, I did it all over again.\n\nWhen her left breast had been thoroughly suckled and was shining with my spit, I switched over to the other, snatching up her other nipple between my lips. I lashed her stiff nipple with my tongue as I sucked it. I circled it, brushed it, flattened it, I pleasured it with the warmth and wetness of my tongue that I knew she was loving feeling. Mariska grabbed handfuls of my hair and held on tight. I reached over and started fondling her other breast. Now I was working each of her perky tits, sucking one and squeezing the other. Mariska's moans filled my ears. Eventually, I pulled back, making her nipple pop from my lips again, and letting her breast fall away with another fleshy bounce. Mariska was practically panting, puffing hot breaths from between her parted, pouty lips.\n\nWith her breasts thoroughly enjoyed and pleasured, there was another place I still badly wanted to kiss that I hadn't yet. A part of me wanted to yank down her panties then and there -- I knew she wouldn't object to it -- but there was still something else I wanted to see first. I wanted this night to be perfect, and that meant there needed to be a sort of natural progression to things. I'd always preferred football over baseball, but even I knew you needed to get across each base before you could get to home plate.\n\nI grabbed Mariska's hips and started twisting her around. She took the message and turned around for me, switching which knee was on which side, until her backside was facing me. I hooked my fingers under the waistband of her sweatpants, then waited a moment to see if Mariska would object. She didn't. I pulled her sweatpants down to her knees. All that was left then was her matching cream-colored panties. Her panties were a little wedgied into her crack, baring most of her cheeks. Her butt wasn't big either, but her cheeks were cute and round. With that narrow waist above it, her backside was shaped like a perfect pear.\n\nI grabbed one of her cheeks and squeezed it. It was soft and supple. I lifted it and let it drop. It fell with a mesmerizing jiggle. \"Your ass is amazing,\" I said.\n\n\"Really?\" Mariska asked, looking at me from over her shoulder.\n\nI had a feeling she was going to ask that a lot that night, but that was fine by me. If she needed me to keep assuring her how crazy I was for her, I'd tell her it all night long. \"Really,\" I said, staring into her hazel eyes as I did.\n\n\"It's not big.\"\n\n\"It doesn't need to be.\" I grabbed her ass with both hands, one for each cheek. I spent a few minutes just lifting each cheek and letting them drop, giving myself a show of how they'd bounce and jiggle. When I'd done enough of that, I squeezed her cheeks so tight that my fingers left prints. I had a tiny temptation to give her a sudden spank and see what kind of jiggle that made, but I knew better. Mariska had no pain tolerance. Even a light spank would've hurt her, and I would never hurt her. Besides, groping her ass and bouncing it in my hands was more than enough fun. And even just squeezing her left some nice, if fleeting, handprints.\n\nI grabbed Mariska's hips and started twisting her again, prompting her to turn back towards me. The moment we were facing each other, I shot forward, grabbed the small of her back, and flipped us around. With an audible oomph I laid her down against the couch's backrest. I got off the couch and went down onto my knees in front of her. I pulled off her sneakers. She kicked them away. Then I pulled off the last of her sweatpants. She kicked them away too. I reached up and grabbed the waistband of her panties, but then stopped. My eyes had gone to her crotch, where I realized that her wedgie had made her panties taut in the front too. I could see it. The shape of it. It was plump, with a visible cleft in the middle. She was ... puffy down there. I was only seeing the outline of it, and I was already almost drooling. My mouth was full of saliva. I had to swallow a thick gulp of it. Otherwise there'd have been no room to talk.\n\nI leaned up and forward, closer to Mariska, and took her into a long, sweet kiss. I kept close when I finally ended it, when our eyes opened. \"Ready?\" I asked. I watched her hazel eyes carefully. I watched for anxiety, or fear, or any sudden desire not to do any of this. I didn't see it. Instead, I saw love, want, desire.\n\nMariska nodded. \"Yeah,\" she said.\n\n\"Are you nervous?\"\n\nShe smiled. \"No.\"\n\nI smiled with her. \"I love you.\"\n\n\"I love you more.\"\n\nI shook my head. \"Not possible.\" With that, I went back down, kneeling in front of the couch again. I grabbed Mariska's panties and slid them down her long legs. She lifted her feet out of them. With her panties off, I turned back towards her. As I scooted closer, she slightly opened her legs, letting me look between them and see what I'd fantasized of for so long. I had to pause when I saw it.\n\nMariska's puffy pussy had little creases on the sides and a long slit down the middle. She was shaven all around, mound and all. It was a smooth shave. Completely bald. There wasn't one stub of hair to be seen. With her legs close together, her pussy was just that long slit, but as her legs came further apart, her pussy parted with them, revealing her inner labia. Her dusky pussy lips peeked out at me. They were slim and tight, and glisteningly wet. Her clitoris was hidden inside of its slim hood, which ran out over the top of her slit. There were small, shining webs of moisture all around that had leaked out of her. She was as worked up as I was.\n\n\"You shaved?\" I asked.\n\n\"This morning,\" Mariska said. That's when I realized that was the 'girl stuff' she'd spent extra-long doing. \"I thought you'd like it that way.\" After a pause, she asked, \"You do, don't you?\"\n\n\"Yeah,\" I said with a nod, my eyes locked between her legs. As I looked upon the end result, I had to agree that it'd been worth the risk of running late to school. Well fucking worth it.\n\nI reached for Mariska's pussy and set my hand atop it, just to feel it. It was so soft. Soft and smooth. And it just radiated heat. As I petted her pussy, it was like touching a warm oven. Eager to see all of her, I placed my thumb and index finger on each side of her pussy and spread it wide open. Between her slim, dusky lips was a lot of pink, and all of it glistening. She'd gotten so wet ... and it was because of me. My erection had already been stabbing my boxers, but that thought made me even harder. Holding her open like that, I could finally see her tiny pink pea of a clit, which was no longer hidden under its hood. And with my face hovering so close to her pussy, I could smell a faint, musky scent. Her scent. My cock started to throb.\n\nI sighed as I gazed upon all those wet, pink folds ... but then I noticed something I'd never seen before. The little hole at the bottom of her spread pussy, her vagina, seemed smaller than it should be. Then I realized it was small because it had a thin, half-ring of flesh around it. I wondered, was that her ... hymen? I knew what a hymen was -- I remembered health class -- but I'd never been with a girl who had one.",
        "I knew Mariska was a virgin. She had told me she'd never had a boyfriend a long time ago. But actually seeing it with my own eyes, seeing this part of her I'd tear when we had sex, that was something else entirely. This was her first time. She'd never forget this. That thought made me nervous ... but it also made me determined. I was going to make sure this night was special.\n\n\"Do you like it?\" Mariska asked, taking me out of my thoughts. I must've been holding her pussy spread and staring at it for a good minute.\n\nI glanced up at her. \"I love it.\"\n\nI took my hand away, letting her puffy pussy close up again, her dusky lips coming back together. I couldn't hold back. Couldn't tease her any longer. I needed to kiss it. So I did. I leaned forward and planted a wet kiss on her soft mound, just above the slit of her pussy. In the motion of that kiss, I brushed my tongue over the hood of her clitoris. Mariska drew a sharp little breath, and then sighed. \"That ... felt good,\" she whispered, as though she hadn't known it would. I gave her mound another wet kiss in the same place, making a soft smacking sound with that smooch of my lips. Then I gave her another, and another. I began caressing her smooth inner thighs as I continued that series of loving, tonguing kisses.\n\nBut I couldn't stay away from the real prize for long. I had to taste her, truly taste her. I aimed my next kiss lower and deeper. I planted my lips directly onto her slit and pushed my tongue through her slick, hot inner flesh, brushing up and through her, until the tip of my tongue flicked up and off her tiny clit. That time, the smacking sound of my lips coming free was noticeably wetter. Mariska gasped and sighed again. That first lick alone was enough to coat my tongue in her grool, to make my mouth thick with the taste of her. She was a little salty and a little sour. And I wanted more.\n\nI started with broad strokes, brushing the flat of my tongue across all the pink flesh of her hot pussy. Soon she was soaking wet, and I didn't know how much of it was my saliva or her grool. From the strong taste of it, I'd have had to guess it was mostly her. I considered holding her open with a pair of fingers while I ate her out, but decided not to. I could cover more of her flesh with one lick if I wasn't spreading her. The puffiness of her pussy lent well to me pushing my tongue through her cleft it in long, slow licks. With each deep kiss my tongue slathered across all of her, her outer folds, her dusky lips, her inner flesh, and her little clit. Now Mariska was squirming. She breathed whimpering moans and raked her bottom lip between her teeth.\n\nGoing into this, I was prepared to experiment, in case she was tricky to get off. But by the time I had her squirming, I realized that wouldn't be the case. She was easy to satisfy.\n\nI eyed Mariska's tiny, pink clit. I was curious just how sensitive it was. I jutted out my tongue and quickly circled the pink button with a touch as light as a feather. And just with that quick touch, Mariska moaned sharply, and her legs shut around my head. \"Sorry,\" she said as she opened her legs back up.\n\n\"It's okay,\" I said, chuckling. Very sensitive was the answer. I decided to save her clit for a little later. I had some ideas for it. It would be the fuse for the fireworks.\n\nI wrapped my arms around her legs and shut them against me again. I liked feeling her smooth thighs around my head.\n\nI started slow, spending a minute or two with every different way I pleasured her. I gave Mariska more wet kisses on the top of her pussy, smooching and licking her clitoral hood. I took her puffy outer labia between my lips and rolled it in my mouth, and then did it while letting out a groaning rumble from my throat, sending the vibrations into her soft, sensitive flesh. Eventually, I reached up and groped her breasts with both hands. I varied how I played with them, switching from squeezing and kneading her breasts one moment to gently pinching and pulling her nipples the next.\n\nI made it a feast, eating her out. I'm not sure how long I spent between her legs. Could've been ten minutes, could've been thirty. I wasn't keeping track of time. I was on a mission. Before I started, I would've been fine with just making her feel good, if I couldn't fully get her off. But seeing her like this, seeing how great this was for her, I'd made up my mind. I wasn't going to stop until I made her cum.\n\nHer pussy seemed more inflamed as I went on. Her flesh felt hotter and wetter on my tongue, tasted a little sourer. Every touch, kiss, and lick was drawing a stronger response from her. Her cute moans were getting less whimpery and more yelpy. Her scrabbling hands eventually grabbed and gripped the couch tight, sinking her fingers into the cushions as she held on for dear life. I was getting her there. It was time for some intensity.\n\nI planted my mouth onto her pussy, with my upper lip just above her clitoral hood, and sucked it. After I hollowed my cheeks, I gave her a thorough brush with my tongue punctuated with a firm flick of her clit. I pulled back until my sucking mouth broke away with a loud pop. Then I did it all again, the sucking, the licking, and that pop, over and over. Mariska drew a sharp breath as her upper teeth chattered on her lower lip, making this fefefe sound. I'd never seen a girl do that; it almost made me laugh, but I kept my concentration. She was close.\n\nI drew my mouth back and switched to my hand for a moment, so that I could speak. \"I need you to tense up now,\" I said as I pressed my thumb onto her clitoral hood and furiously rubbed it up and down. I figured that was a good way to keep most of the pressure I'd built up and talk at the same time.\n\nMariska was panting. She seemed confused as she looked down at me. \"Why?\" she asked breathlessly.\n\n\"So you can cum, hard. You have to tense up, down here especially. Your butt, your legs, your gut, all of that. Get real tight, like a spring.\"\n\nMariska nodded. \"Okay,\" she said.\n\nWith that, I went back to work, and went straight to her clit. I lolled out my tongue and swirled it around that tiny button, fast and firm. I alternated between swirling around it and licking across it, up and down, left and right. I felt Mariska's legs lock and tighten around my head. She was moaning again, louder and sharper than before. My hands on her breasts switched to focusing solely on her sensitive nipples, on pinching them, rolling them between my fingers, playing with them every way I could. With my fingers toying with her nipples and my tongue furiously stimulating her clit, it was only a few more moments before Mariska went off.\n\nHer back suddenly arched up as she cried out. Then, just as suddenly, she leaned forward and grabbed my hair, taking two thick fistfuls of it. She moaned loudly, her chest heaving up and down. For my part, I simply flattened my tongue against her clit and kept it there, letting Mariska ride out her orgasm while I smothered that little lightning rod of pleasure. She bucked into my face as her climax coursed through her. The first contractions were incredibly strong; through those, she rode my face like I was a bull. Eventually, I could hear and feel her orgasm fade. Her moans got softer, her fingers clutching my hair loosened, and her locked legs relaxed. When the last wave of her orgasm was gone, Mariska released me and fell back against the couch like a lump.\n\nI spent a moment admiring the sight of my handiwork. Mariska's puffy pussy was swollen and a little reddened. Her grool had turned white and creamy. I leaned down and gave her pussy a final, sucking kiss, licking up her creamy cum in the process. Mariska shuddered. I reared back and caressed her smooth, long legs, running my hands up and down them.\n\n\"That was amazing,\" Mariska whispered. Seemed that she didn't have the breath to speak any louder.\n\nI climbed up, leaned over her, and kissed her. \"I'm glad,\" I whispered back.\n\n\"I love you.\"\n\n\"I love you too.\" It felt like that was the fifth time we'd said that in the past hour, but I didn't mind. I'd say it over and over if Mariska wanted to.\n\nAfter we kissed, I pulled my head back a ways, so I could gaze into Mariska's hazel eyes. She gave me a long, thoughtful look. \"Are we gonna ...\" she trailed off before she finished what she was saying, but I knew what she was about to ask.\n\n\"Yeah,\" I said. \"You ready?\"\n\nShe nodded.\n\n\"Lay across the couch,\" I said. Mariska did so, lying with her head on the right armrest and her feet almost touching the left. It was a long couch, but she was a long girl. I stood up onto my feet, grabbed my boxers, and was about to tug them down, but then paused. As I looked over Mariska, I had to stop and admire the sight of her, as I so often had in the past. Only, this time, it was for a very different reason. There was something magical about when a girl was lying naked flat on her back. I could see where her the bottom of her ribcage ended and where her soft stomach began. Her hipbones were plain to see too. And even while lying down, Mariska's breasts sat so full and perky on her chest. I loved the sight of it, of all of it, all of her. She was just fucking perfect ... and it seemed insane to me that she could ever think otherwise.\n\nI yanked down my boxers. My cock sprung free, standing stiff and long. Felt like I was harder than I'd ever been. After I stepped out of my boxers, I looked to Mariska. She was eyeing my cock. \"You're big,\" she said.\n\nReally I wasn't much bigger than average, as years of showering in locker rooms had shown me. Very humbling, that. I had a couple inches extra, maybe. But Mariska didn't have any prior experience to compare me to. \"I'll be gentle,\" I assured her.\n\nMariska's eyes flicked up, meeting mine. She smiled at me. \"I know.\"\n\nI smiled too. I climbed onto the couch, on my knees. As I scooted towards Mariska, she opened her legs for me. She opened them not crazy wide, but enough for me to put my own legs down between them. I pinned my arms into the couch on each side of her, to keep myself up over her. As I finished positioning myself, my thighs touched hers, and my hard cock grazed the mound of her pussy. Her mound seemed even softer when it was my cock touching it. Just that touch alone, that softness and warmth, was a delight. Everything was perfect then. We were at eye level, face to face; my throbbing cock was just above her pussy, ready to go, eager to be inside her; and with Mariska's head propped up on the armrest, I would only have to lower mine a little whenever I wanted to kiss her. But as I looked down at her, as I saw her splayed hair, I decided to make one last change. I moved my left arm from below her shoulder to just above it. That way I could keep myself propped up and touch her long, luscious hair at the same time. Then everything was perfect.\n\nI shifted my weight onto one arm, so I could reach down with my other. I grabbed my cock and lowered it. I prodded myself against the warm, sticky lips of her slit; that brief touch alone sent a little tickle of pleasure up my back. I rubbed my cockhead over her labia, gathering her moisture up onto myself. I wanted to make my entry as smooth as possible. As I pushed around her labia with my cock, her puffy pussy would almost jiggle each time it snapped back in place. It was so sexy how a skinny girl could still jiggle in all the right places.\n\nEventually, I decided that I'd teased around it long enough. I lowered my cock, aligning the head of it with that little hole awaiting me between her glistening inner lips. Then, at last, I gave a push of my hips. I looked down as I did, watching as my cock eased inside her. Her inner lips parted as her pussy opened up around me. As soon as my head was inside her, I felt that slick, wet heat envelop me. I pushed on through, watching as more of my cock slid and disappeared inside her. Her pussy was tight, but it was soaked and slick enough to let my stiff cock push through. Inch by inch that lovely, wet heat sheathed all of my length, until I was finally balls-deep inside her.\n\nI sighed. I looked up at Mariska. She looked up at me at the same time. \"Does it hurt?\" I asked.\n\nMariska shook her head. She gazed up at me with wide, dewy eyes, the hazel of them almost shining. That look in her eyes, it was like she was seeing me in a new way for the first time. And I knew why. I'd taken her virginity. We'd gone as far as two people could go. We were different now. What we had, was different. We were more. I wished Mariska was my first too. I really did. That's how it should've been, for us, at least. But ... if the Before time was a previous life ... and often it really felt that way ... then I guess she was my first.\n\n\"I love you,\" Mariska suddenly said. She took the words right out of my mouth.\n\n\"I love you too.\" I lowered my head and gave her a quick kiss. After I pulled away, I looked back down. I wanted to watch.\n\nWith smooth drives of my hips I pushed in and out of her. Her hot, wet flesh squeezed my stiff, hard cock as I slid back and forth inside her. The sensations were much more intense than I was used to; it felt a hell of a lot different without a rubber. I could feel everything. I could feel the textures. I started imagining all those glistening, pink folds inside her rolling over my cock, but then realized thinking about that would only make me cum quicker. I needed to pace myself. A slow start suited us both.\n\nMariska grabbed my shoulders as I eased in and out of her. She looked wherever I did. Whenever I looked at her, she looked at me, with so much love in those hazel eyes. And whenever I looked down, she looked down too, to watch her pussy take my cock, to see herself open up around me. My cock was already shining with a sheen of her wetness, and with a few spots of blood. I kept my cool, even though the sight of that blood tempted me not to. It was normal, I told myself. Virgins bled. If she wasn't hurting, then I didn't need to worry.\n\nI increased the pace gradually, moving my hips just a little faster with every gentle thrust, while still keeping the motion smooth and sensual. With that warm, wet flesh rolling over and around my rock-hard cock, I was already feeling that signature pressure building in my gut. Somehow it felt like I was getting even harder as I fucked her. As if that was possible. I wondered what it felt like for Mariska, with this rigid rod pushing in and out of her.\n\nWhen my hips were moving at a decent pace and my whole body was shifting up and down, a lock of my hair fell in front of my face, obscuring my vision. I brushed it away, only for it to fall again a moment later. I was about to give up on it when Mariska took the stray lock between her fingers and held it to the side of my head with her hand. I smiled and let out a little laugh. \"Thanks,\" I said.\n\nMariska just smiled back. Maybe it was the moment getting to me, but as I looked down at her then, that freckled face seemed even more beautiful than usual. I had to lower myself and kiss her again.\n\nSoon I'd worked myself into fucking her nice and hard. I wasn't so sensual anymore. I was hungry. Needy. I put my whole body into motion, thrusting with more than just my hips. I pumped my cock into her tight, slick pussy like a machine, grunting at the pleasure of it. Mariska started mewling those sweet moans again, and just like that, my bedroom was filled with the sounds of sex. Hot pleasure churned in my gut as that signature pressure spread out into my thighs, tightening my legs. Mariska's firm, perky breasts bounced on her chest from the force of my thrusts. I spent a while staring at them, marveling at how they bounced, but before too long I was looking down again, watching her puffy, gaping pussy swallow up the long, hard cock that was pounding it. Those hot, wet inner folds snugly rolling around my cock were getting dangerously close to milking my load out of me.\n\nI tried to keep it all going as long as possible, but it was too much. It felt too good. \"Mariska,\" I said as I looked to her, \"I'm gonna cum.\"\n\nHer hazel eyes gleamed as they met mine. \"Okay,\" she said. She raised her long legs and wrapped them snugly around my hips. \"Cum.\"\n\nThe hot pleasure and pressure were boiling over. My breath quickened. I grunted harder. I thrusted wildly, slamming between Mariska's legs. I was completely lost in the heat of the moment. I pummeled her with my hips, noisily slapping my crotch into hers. I pounded her pussy with my cock for all the pleasure I could get out of it, for all the pleasure it could squeeze out of me. With her legs folded closed around my hips, her pussy felt even tighter than it had before. There was no stopping myself anymore. Closer and closer I got, the pleasure simmering and my cock throbbing, until finally, I blew.\n\nThe pressure at the base of my cock exploded, and the pleasure I'd been feeling turned fiery. Molten bliss rhythmically coursed through my core. My whole body clenched. I gave Mariska one last thump of a thrust, burying myself balls-deep, and then fired off inside her, letting all the length of my cock delight in the heat and wetness of her pussy as I came. I could feel my cock twitch and jump inside her, spurting out my load. The pleasure was so intense, and the head of my cock was so sensitive inside her, it felt like lightning bolts were hitting it. I let out a long, loud groan. If there was anyone else in the house, they would've heard me. Mariska watched me all the while, gazing into my eyes as I endlessly came inside her.\n\nBut it did eventually end. When I finished cumming, I almost collapsed atop her. I slowly lowered myself until our bodies were touching and my forehead was resting against hers. I put just enough force in my arms to not put my full weight atop her. When one of us just barely shifted in place, I almost twitched at the sudden pleasure of my still stiff cock moving inside her pussy. My cock had gotten almost painfully sensitive. It felt noticeably warmer and wetter inside Mariska then, and I had a good idea why.\n\nI pushed myself up with my arms and rose onto my knees. Mariska unwrapped her legs from my hips and laid them at my sides. I looked down. Her puffy pussy was wide open around my cock, which was now just as wet as she was. I started slowly pulling out. My cock slid smoothly out from between her gaping slit, the passage made messily slick. The sheen on my cock was creamy now, like a white glaze. I sighed from the sweet pleasure of sliding out of that slick passage. When the head of my cock slipped out from her wet pussy with a barely audible shlick, her pussy closed into that slim slit of dusky lips that it had been before, like I'd never been inside her. Then, not a moment later, my cum poured out of her slit, flowing out from between her dusky lips in a thick river of white. The flow was steady for a good few seconds. I had really filled her. I'd never seen my cum inside a girl before, but I could damn sure get used to it.\n\nThen it suddenly clicked it my mind that it probably wasn't a good idea to let my cum pool onto my couch. I cupped my hand under Mariska's pussy to catch some of it, but it was too late. Most of my load was already out of her. \"Shit,\" I muttered. \"That's probably gonna stain.\"\n\n\"Sorry,\" Mariska said immediately.\n\n\"It's not your fault. It's my cum,\" I quipped. Then I smirked. \"Besides, this is what flipping the cushion is for.\"\n\nI went and grabbed a box of tissues and blotted up the mess I'd made. When I was finished, I tossed the soiled tissues into the little wire mesh garbage bin in my room and went back to the couch. Then I flipped the stained cushion, after Mariska had moved onto a different one. With that taken care of, I looked behind Mariska and the couch, to the window and its blinds. It was dark out.",
        "I collapsed onto the couch next to Mariska. As she shifted and cuddled up with me, I found myself struggling to keep my eyes open. I was feeling awfully tired all of a sudden, like a wave of fatigue had broken over me. \"I'm tired,\" I said.\n\nMariska nuzzled her head against mine. \"You wanna go to bed early?\" she asked.\n\n\"Yeah,\" I said. Nothing sounded better.\n\n- - - - -\n\nI woke up with thin shafts of sunlight shining over my eyes. The morning sun was burning bright behind the window blinds. The first thing I thought of was my headache, and how I barely felt it. I was amazed by how muffled it was. Normally it was horrible in the morning. Then I remembered. My second thought was Mariska.\n\nShe was in my arms, on her side in front of me. As I came to, I realized I was looking at the back of her head, at a mess of slightly frizzy, chocolate-brown hair. We were in my bed, partially under the covers. Our legs must've kicked free of them while we slept.\n\nWe had pretty much gone straight to sleep after getting up from the couch. The only thing we did in between was take turns peeing in the bathroom. I'd gone first. She probably took off her makeup after she peed, but I wasn't sure. I must've fallen asleep before she even lay down next to me, because I couldn't remember it. I'd been exhausted. But I wasn't anymore. I felt rested, and, despite the disheveled covers, warm. Most of that warmth was thanks to the soft body I held in my arms.\n\n\"Are you awake?\" Mariska asked.\n\n\"How'd you know?\"\n\nShe turned her head, to look at me in the corner of her eye. She smiled at me. \"I could tell,\" she said.\n\nI could feel that I was sleeping naked, but I wondered if Mariska was too. I moved one of my hands from her flat stomach upwards, and soon found one of her breasts. No bra there. Next, I slid my other hand down, and sure enough, I found no panties. Just a soft, smooth-shaven mound. My cock woke up with me, and before long, my erection was stabbing at her butt. Mariska giggled when she felt it. A minute later I was completely hard, but I chose to just lay there in the peace and quiet. There'd be plenty of time for sex later. At that moment, I wanted nothing more than to relax.\n\nWhen I felt Mariska's soft feet twiddling with mine, I looked down at them. That was the first time I realized just how long her feet were. They were almost as long as mine, but narrower, and a lot smoother. \"Your feet are like rabbit feet,\" I said.\n\nMariska giggled again. \"It's 'cause I'm tall.\"\n\n\"I know. I've got big feet too. But mine are like monster feet. Yours are cute.\" I rubbed my feet up and down hers, like she had been doing to me. Her feet were so soft.\n\nMariska rolled over to face me. She had this wide, happy smile. Seemed like she'd been smiling nonstop since last night. I think I might've been too. Mariska gazed deep into my eyes, so deep that I wondered if she was looking inside me. Then, suddenly, she frowned.\n\n\"What's wrong?\" I asked.\n\nI saw her throat shift with a big gulp. There was a sudden sadness in her gaze. \"I ... I hate looking into your eyes and knowing that you're hurting.\" It was almost a whisper.\n\n\"Don't. Don't think about it,\" I told her. I sat up. \"If you think about it, it'll win. Ignore it. That's what you have to do. Believe me.\" Mariska sat up too. \"It's hard, I know,\" I went on. \"I'm not always good at it. But you make it easier.\"\n\nMariska put her arms around me. She gave me a quick kiss, but then just set her head over my shoulder and squeezed me tight. \"I'm sorry,\" she said. \"I won't bring it up.\"\n\nI put my arms around her and closed my eyes. \"It's okay. You can bring it up. Just ... don't let it get to you. 'Cause then it'll have both of us.\"\n\n\"Okay. I love you.\"\n\n\"I love you too.\"\n\nWe stayed there in each other's arms for a while, just holding one another in silence. Until Mariska spoke again. \"Nathaniel,\" she said.\n\nMy eyes were still closed. \"Yeah?\"\n\n\"I wanna live here with you.\"\n\nMy eyes snapped open. Mariska leaned out of my arms, so she could look at me. \"Are ... are you sure?\" I asked. My heart was fluttering at the thought of it.\n\nShe nodded, smiling that wide, happy smile again.\n\n\"That's ... that's awesome,\" I said as I smiled too. Mine was the biggest, dumbest smile of my life, but it didn't last long. Doubt crept in quick. \"But ... what if your mom and dad don't want you to?\"\n\nMariska shrugged that off. \"I'm eighteen. I have a green card. I don't have to stay with them.\"\n\n\"Yeah, but they could cut you off. Stop paying for your phone, stop buying your clothes, not pay for college.\"\n\nMariska shook her head. \"They wouldn't do that. They want me to be happy. And they like you.\"\n\nI looked away, off into space.\n\nI'd never been sure about it, but Mariska was probably right about her parents liking me. They seemed a little distant at times, always busy ... but if they didn't like me or didn't approve of me, then they wouldn't have allowed this obvious opportunity for Mariska and me to sleep together. Though, honestly, I didn't know what it was they liked about me. I wasn't very smart. I wasn't very nice. But I guess that isn't what mattered most to them. What mattered most was that I cared about Mariska, and that I would always be there for her, even when they couldn't be.\n\n\"Will your dad care?\" Mariska asked.\n\nI was quick to shake my head. I knew Dad would be ecstatic when he found out we were a thing. He'd be completely in favor of Mariska staying here with me, so long as her parents okayed it. He always said he wanted me to have someone. He'd be happy to know that Mariska was that someone.\n\nI looked back to Mariska. \"Wanna take a shower together?\" I asked.\n\nNot a minute later, we were walking into the bathroom just outside my bedroom. Inside, I glanced at myself in the mirror. I touched a lock of my dark hair, then touched my stubble. \"Do you want me to get a haircut?\" I asked out of the blue. \"Or shave?\" I looked over to Mariska. \"I never knew what you liked better. I will if you want me to.\"\n\nMariska smiled and shook her head no. \"Not yet. I like your hair.\" She reached over and touched my face. She curled her fingers over my cheek, making a scriiitch sound. \"And your stubble. It's ... sexy.\" The way she said 'sexy' sounded almost embarrassed. It made me wonder if that was the first time she's ever said it. In English, at least.\n\nThat drew a big grin out of me. I liked knowing what she wanted.\n\nI swiped aside the shower curtains, leaned over the tub, turned on the water, and switched it to the showerhead. \"You like hot showers, right?\" I asked.\n\n\"Yeah.\"\n\n\"The water takes a while to heat up. I usually just brush my teeth while I wait.\"\n\n\"I forgot my toothbrush at home,\" Mariska said.\n\n\"Oh. We'll go get it in a bit. Need to get my car from school first, though.\"\n\n\"Yeah.\"\n\nMariska held a hand under the showerhead, feeling the water. Immediately she drew her hand back. She must've realized I wasn't kidding about the water. While she had her back to me, I couldn't help but look her up and down, admiring her narrow waist, wide hips, and cute butt. When she turned around and faced me again, I couldn't even try to hide the fact I was ogling her. My eyes were still crotch level, so instead of staring at her ass, I stared at her shaven pussy. Standing with her legs together, her pussy was a soft, puffy slit again, so tempting to touch or kiss. I wasn't sure what I liked the sight of better, seeing it as a slit like that, or seeing her pussy open and looking at the slim, dusky lips and the pink, glistening flesh in between.\n\nEventually, I wrenched my gaze away and looked up. Mariska was watching me, smiling shyly. She definitely noticed me staring. \"Sorry,\" I said.\n\nInstead of saying anything back, Mariska took my hand and led me back to my bedroom. Or, rather, our bedroom. Inside, she walked me to the couch. \"Sit,\" she said.\n\nI did. \"What are we doing?\" I asked, smirking, as I sat and leaned back against the couch. I had the idea, just didn't know the specifics. But I should've realized right away. After all, I was sitting exactly where Mariska was last night when I'd eaten her out.\n\n\"Making you feel good,\" she said sweetly as she got down on her knees. \"Like you did for me.\" She grabbed ahold of my cock, which stood at my crotch like a flagpole. Mariska's hand was soft and warm, with slim, smooth fingers. She started pumping my cock up and down my length, all the way from my flared head to my coarse scruff of black pubes. I felt myself get even harder in her hand. Mariska looked up at me while she stroked my cock, letting me see that beautiful, freckled face and those gorgeous, hazel eyes. Her strokes were a little clumsy and rough at first, but soon her hand was giving me smoother, more pleasant pumps. She was teaching herself, and she was learning fast.\n\nMariska scooted closer on her knees, so that her lips hovered right in front of my cock. I could feel the breath from her nose puff out onto my tip. While still smoothly pumping my shaft with her hand, Mariska leaned close and kissed the head of my cock. It was more than a peck. I felt a delightful little bit of a suck when her lips peeled away. It was a pleasant tickle of pleasure. She gave my head another kiss, and then another, until she was showering my crown with kisses and the room was filled with the sounds of those smooches. Brief though the touches were, the kisses were getting me even more worked up. My cock was so hard it was throbbing. Mariska had to have felt the throbs, whether with her hand or her lips. A bead of pre-cum oozed out of the slit on my tip.\n\nThen, instead of giving me another kiss. Mariska opened her mouth, lolled out her tongue, and brushed it over the head, lapping up the bead of pre-cum. That warm, wet muscle sliding over my head gave me a gentle bloom of pleasure. Mariska licked my cockhead like a lollipop, and then shifted around and licked me all along my length. She slid her tongue in every direction around my shaft, up it, down it, across it, until the better part of my cock was shining with her spit. I loosened up and relaxed against the back of the couch, eager to just enjoy seeing and feeling what was happening.\n\nMariska reared back, leaned over my cock, and drooled a big glob of spit onto my crown. As soon as that spit starting oozing down and dripping off my cock, she opened her mouth, lowered herself, and closed her mouth around my head, sealing her lips around it and surrounding it in a moist heat. She pushed her puckered lips slowly down my length, the sensitive underside of my stiff cock sliding against the flat of her tongue all the way. I groaned at the deep pleasure of it. Mariska's lips slid down until she'd taken as much of me into her mouth as she could, which was almost all of me, save only for a couple inches. It was more than enough to get me off. With her head so far down, a huge bunch of her long hair shifted and fell in front of her face. I gathered all those locks in one hand and kept them held to the side, out of her face. Mariska was looking down, focusing on my cock, on what she was doing.\n\nShe rose back up, dragging those full, sucking lips up along my length, until only my flared cockhead was still in her mouth. Suddenly, she swirled her tongue around my head. That took me by surprise, and I almost groaned. She slathered it well, and then finally pulled the rest of the way back. My slick cock slipped out of her sucking lips with a wet pop. At the same time, I grunted hard, and Mariska let out this cute little exhale that sounded like a moan. My cock thoroughly gleamed with her well-distributed spit, and a string of it stretched from my tip to her lips until it broke.\n\nWasting no time, Mariska opened her mouth again, sank down my cock, and sealed her lips around me once more. She bobbed her head up and down at a steady pace, smoothly sliding those taut, sucking lips along my stiff cock. I loved the sounds of those wet urps and urks that slipped out of her busy mouth as she sucked me off. I put my other hand onto the back of her head, not to push her down or pull her off, but just to ride the motion. My gut and legs were already getting tight and tense. I felt that familiar pressure building at the base of my cock.\n\nMariska looked up at me, staring those pretty, hazel eyes into mine, but then she looked down not long after. She was still focusing. I was fine with that. She was going to make me cum soon either way.\n\nMariska bobbed her head faster, sucking my hard cock with much swifter strokes of her mouth. The crown and underside of my cock were the secret to making me cum quick, and she was slathering both of those with her tongue inside her mouth, on top of that tight seal of her sucking lips. My toes were close to curling from the pleasure. The delightful sounds that sucking cock made, the muffled gurgles, the messy slurps, the popping lips, they all grew louder and more frequent. Mariska started moaning on top of it, and I could feel the vibration of her throat in her sealed, sucking lips.\n\nThe hot pleasure blazing at the base of my cock was past the point of no return. \"I'm about to cum,\" I grunted. I meant it as a warning, as in: 'if you don't change what you're doing or switch to a hand, you're about to get my load in your mouth.' But Mariska stayed on course, swiftly bobbing her head and noisily sucking me off. I didn't last another minute.\n\nThe pleasure boiled over, and with it surged up my load. I groaned loudly. The pleasure turned to bliss, and hot, tingly contractions worked through my core. I sat up and leaned forward as my cock jumped and spurted in Mariska's mouth. I still held the back of her head, but I didn't keep her pinned. She stayed there with my cock spurting my cum into her mouth of her own volition. She still bobbed her head and sucked off my cumming cock, stroking me with her lips and licking me with her tongue. The intensity of it left me slack-jawed, groaning from my open mouth.\n\nWhen my orgasm was over and the last of my load was up and out of me, I fell against the back of the couch. I let go of Mariska's head and hair. She rose and pulled her sealed lips up off my cock. She kept her mouth carefully closed when it slipped off my slick crown. Then, while I watched, she looked up at me and opened her mouth wide, showing me the white, gooey mess within. She wiggled her tongue around, swishing my load, making it slosh left and right. After letting me enjoy the sight of my cum in her mouth for a moment, Mariska closed it. I saw her throat shift with a gulp. She opened her mouth again. Her pink tongue was clean, no longer drowning in my cum. She'd swallowed it all. Damn was that a satisfying show. \"How'd you know to do that?\" I had to ask.\n\n\"I looked it up,\" she said with a cutely naughty smile.\n\nI laughed. \"Did it taste bad?\" I was pretty sure my taste had been complained about in the past.\n\nMariska shook her head, looking happily surprised by that. \"Just salty.\"\n\nI let out a deep sigh. \"The water's definitely hot by now.\"\n\n\"Do you wanna go first?\" Mariska asked.\n\n\"I wanna go together.\"\n\nWe were climbing into the tub a minute later. I went in first. I stood beneath the showerhead, letting the steaming water spray over my hair and back. I felt a soothing rush as the heat sank into me, warming what had been cold. Mariska started stepping into the tub next to me, but when her second foot came down, it slipped against the slick floor of the tub, taking out her balance and sending her falling. For a split second, my heart began to sink, but as I was realizing what was happening, I was already reacting. My hand shot out and grabbed Mariska by the arm, stopping her just before she tumbled out of the tub. I had to lean back to hold her weight without losing my footing as well. I pulled her back up, onto her feet. Her eyes were wide when they met mine. \"That was scary,\" she said, only half-joking. \"I, um, have non-slip stickers in my tub.\"\n\n\"We'll get some for here too.\"\n\n\"Yeah ... okay ... wow, that ... could've been bad.\" Mariska looked a little shaken up.\n\nI leaned closer to her. We were both standing under the showerhead, and by then, both of us had soaked hair. I looked into her eyes. \"But it wasn't. I caught you.\"\n\nMariska gave me a small smile, seeming comforted by that. \"How'd you react so quickly?\"\n\n\"I've got fast hands,\" I said, smirking. Before Mariska could respond to that or say out loud why that was -- I didn't want to talk about the old me -- I went behind her and grabbed the bottle of liquid soap from the rounded shelf on the wall. I squeezed a generous amount of it out over each of her shoulders, and then set the bottle back where it was. I rubbed the deep blue soap into her shoulders with circular motions. It turned to suds almost immediately. As the soap oozed down her back, I followed it with my hands, rubbing her with the sudsy soap with firm, sweeping strokes. By the time the soap trailed to her lower back, it had thinned out too much, so I grabbed the bottle again and squeezed out more where it had left off. That blue glob of soap oozed straight down right away. When it arrived at her cute butt, I crouched down and followed it there too. There, the strokes of my hand were a lot less rubby and a lot more squeezy. Less purposeful, more playful. I couldn't help myself. Mariska didn't seem to mind; I heard her giggle at least once. As I played with her butt, squeezing it and bouncing it, I got more than a few peeks at her slit pussy, and, if only for those fleeting moments, my eyes were glued to it.\n\n\"Turn around,\" I eventually said. I grabbed the soap bottle again while Mariska turned and faced me. This time I squeezed the soap over the front of her shoulders. It was only a few seconds later that it oozed down to where I really wanted it. I started kneading her firm, perky breasts, focusing much more on enjoying the feel of them than scrubbing them clean, but they soon got plenty sudsy nonetheless. When I figured I'd spent long enough playing with her tits, I squeezed out another blue dollop of soap onto her taut tummy. I rubbed the soap all around her stomach and her hips, and soon I'd crouched down and followed it to her crotch. I stared at her cleft, puffy pussy. Ignoring the soap for a moment, I raised my hand and slid my middle finger through that puffy cleft, against her slit. Her slim, inner lips were hot to the touch, and I felt their heat right away, even with the steaming water spraying over me. There was a sticky slickness too. She was wet ... and I was hard again. \"I fuckin' love your pussy,\" I muttered.\n\n\"It loves you too,\" Mariska said sweetly. I almost laughed at how cute that was. I would've, if I wasn't so worked up.\n\nI stood straight, leaned into Mariska, and took her into a sudden, deep kiss. I pushed my tongue into her mouth, into the humid heat inside. My tongue found hers and wrestled it, dominating it. I moaned as I kissed her, and a moment later, Mariska moaned too. I broke our kiss and pulled back. \"I love you,\" I said, gazing into her eyes.\n\n\"I love you too.\"\n\n\"Turn back around,\" I told her. She did. I leaned closer and kissed her neck. \"Bend over. Grab the wall.\" She did that too. Mariska was already close to the wall, so she didn't have to lean too far forward. She looked at me from over her shoulder. She nibbled her lower lip and watched with this sweet, sexy look in her eyes. She wanted this too.\n\nI grabbed my stiff cock in one hand and her squeezable ass with the other. I fumbled around her slick, slit pussy with my cock until I found where I could sink in. I prodded my head against that little hole and eased myself inside. The snug, slick heat of her pussy enveloped me. Once the first few inches were inside her, I shifted my hands to her hips, so I could hold her and keep us aligned while I slotted the rest of myself inside her. With how she stood, with her legs together, her pussy seemed especially tight around my cock. I felt so hard as I pushed inside that wet, squeezing sheath. Felt like I was made of steel. I slid the rest of the way in until I was balls-deep inside her, until my hips pressed against her ass.",
        "The steam was permeating the air around us, but the heat I felt most of all was that slick heat around my cock, the heat of the tight, wet pussy coiled around me. Achingly eager to get going, I pulled back and then slammed back in. There was a wet slap as my crotch collided with her ass, and I saw a brief but mesmerizing wave of motion jiggle through her cheeks from the force of it. Holding her hips all the while, I fucked her hard, slamming into her as I thrusted in and out.\n\nIt wasn't Mariska's first time anymore; I wasn't taking her virginity this time. I didn't need to be gentle. Showers were made for quickies, after all.\n\nI grunted as I fucked her with hard, fierce thrusts. The sound of my hips slapping her ass got almost as loud as the spraying water. My hands roamed Mariska's body, enjoying one part of her one moment and then enjoying another the next. I reached around her and grabbed her swaying tits, kneading and squeezing them. Then I grabbed her shoulders and started pulling her into me, making her meet me halfway with every crashing thrust.\n\nI drew quick, sharp breaths between my lips. The familiar, tingling pressure at the base of my cock was welling up fast. I wasn't going to last another minute. I considered where I wanted to finish, and then made my decision right away. It was an easy choice.\n\nWhen that tingling pressure had built up to the very tip of my cock, I buried myself inside Mariska, slotting my cock to the hilt of her pussy one last time. Burning bliss exploded in my core as I fired off my load inside her. The pleasure of her tight pussy coiled around my cumming cock was so intense that I gasped before I groaned. This time, my orgasm was short-lived. It was so soon after her sucking me off, all I could muster this time was a few squirts. I was running dry. I looked up at Mariska and saw those sweet, hazel eyes watching me. I leaned over and kissed her, capturing her soft lips with mine.\n\nAbout half an hour later, I was standing half-dressed in my bedroom when Mariska walked in stark naked, toweling down her hair. \"I'm guessing your purse doesn't have clothes in it,\" I said as I looked over at it.\n\n\"I grabbed some clothes to wear ... but I left them at home. I wanted to get here quick.\"\n\n\"I'm glad you did,\" I said, smiling at her. Mariska smiled back. \"You can just wear some stuff of mine.\" I went to my closet and opened up all the drawers of the big dresser inside. \"Then you can change after we get my car and drive to your house.\"\n\nMariska walked over, hung the towel over the open closet door, and started sifting through the drawers, pushing things around. She picked a pair of tube socks, a pair of boxer briefs, and a pair of sweatpants. When it came time to find a top, she rifled around in the uppermost drawer. Then, to my surprise, she pulled out something from the back of it that I didn't even know was there. It was one of my silver, school sweatshirts. Across the back of it was a big '89,' my football number, and above that was my last name, 'Wolf,' in much smaller lettering.\n\n\"I thought I got rid of all those,\" I mumbled.\n\n\"Why would you get rid of them?\" Mariska asked as she held it in front of herself.\n\n\"Because they make me remember what I don't have anymore.\"\n\nMariska gave me a caring look. There was so much love in those eyes. \"But they're good memories, aren't they?\"\n\n\"Yeah,\" I admitted. \"All but the last one.\"\n\n\"I wanna wear it.\"\n\nI sighed, relenting. \"Okay. Go ahead.\"\n\nMariska pulled it down over herself. Without wearing the same one from yesterday, she'd have to be braless until we got to her house, but that would be impossible to notice with that huge, heavy hoodie over her. Mariska tugged on it and looked over her shoulder, so she could see the back of it. She grinned. \"I like having your last name on me.\"\n\n\"I like it too.\"\n\n- - - - -\n\nI had offered to go get my car alone, but Mariska wanted to come.\n\nI had dressed myself same as Mariska had, in sweatpants and a sweatshirt. It was drizzling outside, so I'd grabbed an umbrella before we headed out. I held it over the both of us as we walked.\n\nWe made good pace. We were moving a lot more briskly than we had going home the day before. My mind wandered as we walked. \"I can't believe you never had a boyfriend,\" I said, speaking quietly for some added privacy. The rain pelleting our umbrella made for plenty of white noise, and we only occasionally passed someone walking by, but some caution couldn't have hurt. \"I mean ... you're so fuckin' pretty, and ... I know you have bad anxiety, but ...\"\n\nMariska glanced over at me. She had a somber smile. \"You think I'm prettier than I am.\"\n\nI shrugged. \"Maybe,\" I conceded. \"But isn't it what I think about you that matters most? I'm your boyfriend. I don't give a fuck what anyone else thinks, about either of us.\"\n\nMariska looked down. \"I wish I could think like you do.\"\n\n\"What, not give a fuck what other people think of you? You just gotta practice it. You got the master right here. I'll teach you.\"\n\nMariska looked over to me. She was smiling again, and more happily this time. \"I like knowing you're my boyfriend,\" she said.\n\nI looked over at her. \"I like knowing you're my girlfriend.\"\n\nWe were walking into the school parking lot then. There were a few parked cars there, but all were close to the school. My black Monte Carlo was in a huge open space all by itself, alone and awkward. I went to the passenger door and made sure Mariska was inside first, and that she got in without getting soaked. Once she was in, I folded up the umbrella, got into the driver's seat, and tossed the umbrella onto one of the rear seats behind me.\n\nMariska was already buckled in as I did so for myself. \"How's your head?\" she asked.\n\n\"It's okay,\" I said plainly. That was the truth, for once. The pain was thudding, but it wasn't bad. It was easy to ignore. I stuck my key into the ignition and revved it. With the engine going, I turned to Mariska. She was giving me this long look. She was hesitant to believe me about the pain. I couldn't blame her; I'd lied to her about the pain all the time before. \"It's okay, really,\" I said. \"I mean it. It's there, but it'll always be there. But I'm getting better at ignoring it.\"\n\nMariska leaned over and kissed me. I closed my eyes and sighed through my nose. That kiss wasn't any less sweet than our first. It felt like ... a burst of life. I wondered if that was what kissing your soulmate felt like.\n\nThe rain was pouring by the time I had us on the road. The raindrops shot up my windshield like a machinegun. The wipers were doing their best. As I drove, I got to thinking about my last thought: soulmate. That's what Mariska felt like. We meant so much to each other ... and ... someone like that ... you're supposed to tell them everything. The good and the bad. Even the things so bad I buried them six feet deep, so bad that they made me want to sleep all day long, so bad that I tried to never think about them. \"I've never told you about that weekend, have I?\"\n\nMariska looked over at me. She was smiling. That wouldn't last. \"What weekend?\" she asked.\n\n\"The weekend my life went to shit.\"\n\nThere it went; Mariska's smile slipped away. She gently shook her head. \"You mean ... your mom?\"\n\n\"Yeah.\"\n\n\"You don't have to tell me.\"\n\n\"You've probably figured some things out ... context, you know ... but ... I feel like I should say it all out loud. To you, at least. If there's ever gonna be anyone I should tell it to ... it's you.\"\n\nMariska nodded. I saw a big gulp move down her throat. \"Okay.\"\n\nI drew a deep breath ... held it ... then let it go. \"Over the summer between freshman and sophomore year, my mom got diagnosed with triple-negative breast cancer. That, um, basically means that hormonal treatments won't work, and that ... it can spread fast. But we were all confident. Her most of all. I don't think any of us were nervous at first. And even in the back of my head, when I thought of the worst case scenario, I thought, well, even if she doesn't beat it, I've probably got several more years with her. I'll have graduated by then, maybe even given her a grandkid. I, uh ... I wasn't ready for it, when it ... when it got so bad so fast. She was having chemo all the time ... she lost her hair, got really skinny ... I know that stuff fights it, but ... it just made her look really sick. I didn't wanna see her that way. So I focused on football.\n\nI was close to the other guys on the team. We'd made the state playoffs the year before, but lost in the third round. We decided to work our asses off in preparation for the next season, so we could win it all. I was glad to. I needed something to focus on, and football was it. I'd played a little baseball and basketball before, but football was my thing. I loved it, I was obsessed with it, and I was damn good at it. I wasn't the fastest, or the strongest, but nobody else could catch like I could. No one had surer hands than me. 'No Worries' is what the guys called me, 'cause of my initials, and because when you threw the ball to me, it was a done deal. I was gonna catch it. So, like I was saying, even before the season started, the guys and I would be on the field or at the park, practicing. Even the guys who played basketball or track or something were there too. We were fuckin' committed. I was sweating, I was burning, I was sore, and I ... I was having the most fun of my life. When the season started, everything we worked on just clicked. We were rolling, just smoking teams. Then, um ... our last game of the season ... we were actually down towards the end. Losing, I mean. But on this last drive, we were flying down the field, getting first down after first down. One of the last plays was gonna be a pass to me. 'Singleback Ace Slants' was the play call. I got open, my quarterback threw the ball to me, and I jumped and caught it, but as I was coming down, as I was trying to protect the ball, to complete the pass ... two guys were shooting at me like bullets ... the first one knocked my helmet off ... and the second guy sent his shoulderpad into my head.\n\nI got put in a medically induced coma. I was under for the whole weekend. The doctors said I had a severe concussion, that I had a brain bleed that they had to perform surgery on to repair. They opened up my fuckin' skull to stop the bleeding. I had this crazy scar on my head for a long time. That's actually why I grew my hair out longer at first, to hide it. I was told it was a miracle I'd survived and was back to normal. Only, I wasn't normal. When I finally woke up, everything was just ... different. And I mean everything. Mom was ... gone ... and I didn't even get to say goodbye. I almost couldn't believe it. I was almost sort of ... numb to it. But I wasn't numb to this pounding headache I had. And I still had that headache a few days later. The doctors said it was really common, that I had 'post-concussion syndrome,' and that it should gradually go away after a few weeks, or maybe a few months at the most. But then a few months passed, and it didn't go away. The pain just ... stayed. They did more brain scans, and they all came back normal. My brain looks healthy. So they diagnosed me with persistent post-concussion syndrome and sent me off to start seeing a pain management specialist. They said that's all they could do. They ... couldn't fix me. The pain doc gave me Vicodin at one point. That helped a little. More than the over-the-counter stuff. But a few months later she took me off it. Said I can't stay on it forever and that it would eventually make my pain worse. Ever since then I've just taken Tylenol and used 'coping skills.' That's what they call anything that takes your mind off the pain. Hobbies, habits, things like that. Running does it pretty well for me.\n\nI was different after the concussion. That's what everyone at school told me, and I know they're right. I couldn't play football anymore, and that made me ... really bitter. Not really at anyone else, but just at life, at what had happened. Some of the guys tried their hardest to keep me in their circle, but I was ... hostile. I pushed them away. I didn't want their sympathy. I didn't even want their friendship anymore. I guess I just ... wanted to suffer. I was standoffish, to everyone, all the time, and eventually I'd burned every bridge there was. No one would come near me. No one was gonna try anymore. No one who knew me, at least. That's why you sat with me at lunch that first day: you didn't know me. When you sat across me from that first time, I was this close to standing up and walking outside. Damn am I glad I didn't.\n\nIt drives me fuckin' crazy not being able to play football anymore, and the pain can be damn near unbearable sometimes, but ... honestly ... I can deal with that stuff. I can cope with all that. It's Mom being gone that really hits me. It's the never saying goodbye to her. It's the thinking I'd have her, and then just ... losing her. She didn't want me to be like this, you know. She wanted me to be strong. When it got bad, she had me promise her I'd be okay when she was gone. I guess I've broken that promise. After she died, every single day was hard to get through ... to just get from morning to night ... it was just this grind ... 'til I met you.\"\n\nOn cue, I pulled us into the driveway of Mariska's house. I turned and looked towards her. To my shock, she was silently crying. Her hazel eyes were reddened, and tears were running down her cheeks.\n\n\"Don't cry,\" I said. I reached over and wiped some of the tears from her face. \"I hate seeing you sad.\"\n\n\"I'm sorry,\" Mariska whimpered as she wiped away the rest of her tears on her sleeve. She sniffled. \"It's just ... really messed up. No one should have to go through that.\"\n\n\"People have gone through worse.\"\n\n\"That doesn't make it okay.\"\n\n\"I know.\" I grabbed one of Mariska's hands and squeezed it. \"But I'm here. I'm still going. And I don't plan on stopping.\"\n\nMariska's tears had dried up by the time we were walking into her bedroom. She still had some sniffles left, but she was smiling again. That was what I wanted to see. Her room was a lot more colorful than mine. Lots of pink, her favorite color. She was a little ashamed of that, on account of it being such a stereotypically girly choice, but it didn't bother me. She didn't have many framed pictures -- there was a recent one with her parents and one with her grandmother back in the Netherlands -- but it was still more than I had.\n\nI sat on Mariska's bed while she put together piles of folded clothes. She neatly sorted them all into their own stacks; sweatshirts, tee shirts, pajama tops, bras, sweatpants, baggy jeans, pajama bottoms, panties. While she was busy doing that, I just sat there, thinking and wondering. I did something I'd been stuck in the habit of doing. I let dark feelings creep into the back of my mind. Sadness ... dread ... doubt. Feelings that I'd been struggling to shake off for two years. I knew I shouldn't have been sad in that moment, but ... I guess I'd gotten too used to it. I didn't know how to be anything else.\n\nMariska turned and looked at me, holding a stack of shirts in hand. She noticed. She could read me like a book. \"What's wrong?\" she asked. She set down the stack of shirts.\n\nI stayed silent for a moment. I wasn't sure what to say. \"I'm really fucked up, aren't I?\"\n\nMariska walked over to me. \"So am I,\" she said, shrugging, like it didn't matter.\n\nI shook my head, dejected. \"I'll never be normal.\"\n\nMariska shook her head too, but differently. Resiliently. \"We don't have to be,\" she said. She went over to her desk, grabbed a notebook and pencil, and then came back, sitting beside me. She opened the notebook and flipped through the pages until she arrived at a blank one. She scribbled something and then handed the notebook to me. I looked down at what she wrote. It was a list. A short one.\n\n1. Go to Senior Prom\n\n2. Go to Golden Gardens beach\n\n3. Go to a Seahawks game\n\n\"What is this?\" I asked.\n\n\"Stuff I wanna do with you,\" Mariska said. \"It's not enough to fill a whole year, but it's a start.\"\n\nI turned and looked at her. She was smiling from ear to ear. That happiness was infectious, and I couldn't help but chuckle. I glanced over the notebook again. \"I haven't been to a Seahawks game in a long time,\" I mused.\n\n\"All the more reason to go.\"\n\nI gave Mariska a long look, gazing into her hazel eyes. \"There's gonna be a lot of people in these places, you know.\"\n\nMariska nodded, still smiling. \"I know.\" Then, after a long pause, she added, \"I wanna get better.\"\n\n\"Me too.\"\n\nMariska leaned over and kissed me. \"I love you,\" she said before pulling away, her lips still close to mine.\n\n\"I love you too.\"\n\nMariska handed me the pencil and flipped the notebook to the next page. \"Here, you start,\" she said. \"Write something you wanna do next year.\"\n\nI readied the pencil over the notebook and took a moment to think ... but I didn't have to think for long. Ideas started flooding my mind. A big grin spread around my lips as the thoughts came one after the other. It was crazy how different the world suddenly seemed in that moment, with that girl -- my girl -- sitting beside me. Every thought I dreamt up, it all seemed so ... doable. Not easy, but ... doable. I lowered my hand and brought the pencil to the paper.\n\n- - - - -\n\nAuthor's note: This story was an immense amount of effort that I labored over on-and-off for more than a year, so any and all readers who read to the end have my sincere thanks. Alas, I have only one pair of eyes, and despite many rereads, there may be some mistakes. I regret any that are there."
    ],
    "authorname": "Benjamin_Winter",
    "tags": [
        "straight",
        "eighteen",
        "high school",
        "romance",
        "drama",
        "virgin",
        "vaginal",
        "oral"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/no-worries-2"
}