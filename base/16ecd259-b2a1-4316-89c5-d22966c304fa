{
    "title": "Six Degrees Ch. 05",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n*****\n\nPart 25 - The Crime Scene \n\n\"Whaddya got, Nash?\" I growled as Captain Cindy Ross and I came up to the scene.\n\n\"Right back here, sir, ma'am.\" said Nash. He led us over to the dumpster. We were behind the Cub Club, and the alleyway was full of Police vehicles.\n\nInside the dumpster was Linda Farris, lying on her back, her eyes staring sightlessly upward, dressed tastefully as she had been on the day she tried to purloin baby Peter D. Feeley from me, though she was not wearing any shoes. Also inside the dumpster was J.R. Barnes of the Crime Lab, wearing a Tyvex suit over his clothes.\n\n\"Who called this in?\" I asked first, as I often do.\n\n\"The Club manager called it in to 9-1-1.\" said Nash. \"An employee came out to dump some trash and he noticed the top was open. They're constantly reminded to close and lock it, so he looked inside, saw the body, and ran back inside. You can see where he dropped the bag of trash, there.\"\n\n\"Someone taking his statement?\" I asked.\n\n\"Yes sir.\" said Nash.\n\n\"I'll want to speak to him, anyway.\" I replied. \"Whaddya got in there, J.R.?\"\n\n\"Not much yet, Commander.\" said Barnes. \"No visible wounds from the front, nor around the head area. I'd like to get the body out of here so I can examine the back.\"\n\n\"Make it so, Number One.\" I said. As Officers worked to remove the body, I asked Nash \"Was Farris at the Club tonight?\"\n\n\"I don't know, sir, not yet.\" said Nash. \"Theo Washington is interviewing people inside. Morton and Hicks are helping him, and I haven't had a chance to talk to them before you came up.\"\n\n\"Good enough.\" I said. I watched as Farris's body was placed on a gurney. J.R. Barnes began quickly examining it.\n\n\"No outward sign of sexual assault.\" he said, as he moved her clothes around. \"No stab wounds on the front. Okay, guys, let's turn her over.\" They did so. Barnes lifted her woolen blouse and gasped.\n\n\"Oh geez, what is this?\" he asked. I looked on as he lifted her blouse up to her neck. I saw what had made him gasp: there were two punctures in her back, one between the shoulder blades, the other near the base of the spine. It looked like a long prod had been stuck into each place.\n\nBoth had large, circular areas of scorching radiating from them. Barnes used a thin wire to gauge the depths of the wounds. \"Over two inches deep, at least.\" said Barnes. \"Sealed from bleeding by the hot flash of the obvious electric shock.\"\n\n\"Ever seen this before?\" I asked.\n\n\"No sir.\" said Barnes as I put on latex gloves. I took out my magnifying glass from my trenchcoat pocket and examined the base of the spine.\n\n\"Yep.\" I said. \"Get this photographed. Two smaller punctures. I'd say she was TASERed to subdue her.\" I then began pressing on the flesh of her back, then the sides.\n\n\"Geez.\" I said. \"Insidious.\"\n\n\"What is it?\" Cindy asked. I had her and Martin put on gloves and feel the body as I had.\n\n\"Wow, really stiff, rubbery.\" said Cindy. \"Not soft at all like normal.\"\n\n\"Yes.\" I said. \"Looks like they drove prongs into her to run a very strong electric current through her body. When the M.E. does the autopsy, I expect she is going to find that this woman is literally cooked on the inside. Whoever did this... cooked her alive from the inside out...\"\n\nJust then, there was a commotion at the back door of the Club. Patrolman Culver was holding the line, and I went to see what was going on. The owner of the Club, the legendary rapper T-Square, was trying to come out.\"\n\n\"Let him through, Culver. And his Regiment.\" I said. Culver did so. The bodyguards stayed near the door, while the lawyer came up with T-Square.\n\n\"I am seeing too much of you at my clubs without paying the cover charge, I.C.\" said T-Square. He was in a heavy black coat and was wearing his trademark shades.\n\n\"And I hate the professional visits as much as you do, T-Square.\" I said. Linda Farris had been turned back over and a sheet put over her. \"Do you recognize this woman?\"\n\nThe sheet was pulled back and he looked. \"She's the Child Protective Services woman.\" he said. \"I saw her on TV. I never met her before, though.\"\n\n\"Any idea why she's in your club's dumpster?\"\n\n\"Oh hell no.\" said T-Square. \"It's supposed to stay locked so people don't dump drugs into it, and then I have your Vice Squad crawling around.\"\n\n\"I hear ya.\" I replied. There were rumors that Captain Harold Malone would have drugs planted at black-owned businesses so that he could make raids on them. I didn't play those games, and I understood T-Square's caution.\n\n\"All right, Martin, wrap this up.\" I said. \"Expedite reports to my email inbox. A word with you, T-Square, if I may.\"\n\nWe stepped away from the scene so that we were out of hearing. \"I just wanted to congratulate you, T-Square.\"\n\n\"For what?\"\n\n\"Why the birth of your niece.\" I replied.\n\n'Which niece is that?\" asked T-Square.\n\n\"Oh, come on.\" I said. \"This is not an SBI idiot you are talking to. I know you and Paulina Patterson have the same father. He's in prison for the murder of your mother, after getting away with murdering her mother.\"\n\n\"Damn, Cracker, you really are the shit.\" said T-Square, and I could tell he was impressed. \"But don't you go telling that to nobody else.\"\n\n\"Nooooo, we wouldn't want to ruin your already useless reputation by having everyone know an A.D.A. is your sister.\" I said.\n\n\"Your reputation is about to take a dive, I.C.\" he said, then caught himself. \"From what I hear, anyway.\" Too late, I thought to myself. The cat is out of the bag, T-Square. Cat is out of the bag.\n\n\"Oh I hope not.\" I said. \"I know you wouldn't want your new niece's daddy to have a bad reputation.\"\n\n\"Shit.\" said T-Square. \"First a murder at my Club, and now the I.C. is telling me he's the baby-daddy of my sister's child. This definitely qualifies as a bad night.\"\n\n\"Good thing you don't have to pay a cover charge to drink at the bar, here.\" I replied...\n\nPart 26 - Investigation \n\nSaturday, March 5th, 9:00am. Captain Cindy Ross entered the MCD room. Only Martin Nash was there.\n\n\"Hi, Martin.\" she said. \"Anything new?\" By that she meant the Farris murder.\n\n\"M.E.'s report and the preliminary toxicology came in.\" said Nash. \"I forwarded the email to you and the Commander, even though you both probably got it already. I'm also consolidating a financial workup on her, a lot of which was already done after she was suspended and investigations opened upon her.\"\n\n\"Good.\" Cindy replied. \"So, who did you delegate this case to?\"\n\n\"Uhhh...\" said Nash, \"I guess myself. I didn't really delegate it to anyone.\"\n\n\"No problem.\" said Cindy. \"But for the future, that's something you'll need to learn to do, and one of the hallmarks of leadership. In fairness, it's difficult to do, and I'd say it's the Iron Crowbar's biggest, maybe only weakness.\"\n\n\"I hear you.\" said Nash.\n\n\"Okay, he's in his office.\" Cindy said. \"Are you ready to talk to him?\"\n\n\"I always feel like I'll never be ready enough.\" said Nash. \"But I guess I'm as ready as I'll ever be.\"\n\n* * * * * * * * * * * * * * * *\n\nI was sitting at my desk, reading the various reports logged by the Officers at the scene. I thought they were woefully inadequate, but I curbed my irritation, knowing they'd done their jobs as well as they could. From the reports, I gleaned that Linda Farris had not been seen inside the Cub Club at all. I had talked to the employee that found the body, a young black man named Jerome, and he seemed on the up-and-up. No one had heard any commotion behind the building, no one had seen any cars go back there.\n\nFilm footage was spotty. A camera in the front parking lot barely caught a black car driving around the side of the building, but it didn't catch the license plate. There were no cameras covering the back alley. It surprised me that T-Square left that area uncovered. I thought idly that I'd have to think about that some more, then I let it go and moved on.\n\nThe preliminary autopsy confirmed what I had suspected: Farris had been connected to two prods, and a steady electric current was run through her body. She died of cardiac arrest, as her heart could not take the electric current interfering with its normal function, but the autopsy report made clear that she was alive as this was being done to her. It did not take much for me to connect the dots and see that Linda Farris had been tortured to death via this method.\n\nWhat the autopsy could not show, at least not yet, was the time of death. The electricity effect on the body made the normal tests ineffective. Martha the M.E. did say that Farris had not eaten for at least sixteen hours before she died. That was of some help, I thought to myself.\n\n* * * * * * * * * * * * * * * *\n\n\"Good morning, guys.\" I said as Cindy and Martin Nash came into my office. \"Help yourselves to some coffee before you sit down.\" Being good and smart Police Officers, they both availed themselves of the offered coffee. As they sat down, I refilled my U.S. Army Airborne School coffee mug.\n\n\"Okay, I saw the autopsy report.\" I said. \"It is clear that some sadistic people tortured that woman to death. Anything new?\"\n\nMartin Nash said \"I called the Electric Company this morning when I got in. I asked if they had any power surges in the previous 48 hours that they couldn't readily account for. They said they didn't, but bringing electric service back online after the big snows a few days ago might mask other surges.\"\n\n\"That's good thinking on your part, though.\" I said. \"So let's open a few trains of thought. First, that much electricity can be drawn from a line leading to a house, but it's more likely from an industrial place. Second, they didn't just plug into the outlet and connect to the two prongs; they had to step up the amps on this, and control it to torture her like they did, so they needed a transformer of some kind. So... where would you expect to find something like that?\"\n\n\"A whole lot of places.\" said Cindy. \"Any place that does things like electrical welding, any place that uses ovens or kilns, even laboratories and schools...\"\n\n\"Sir,\" asked Nash, \"do you think the Shadow Man was personally involved in this? If so, we might can make guesses as to places he might have access to.\"\n\n\"Another good thought.\" I said. \"You ate your Wheaties for the Brain this morning, fer sure. And to answer the question... our guy is normally a Consultant of Crime, not the hired help that does the dirty work. However... the brutality of this crime suggests his personal touch. Hired guns shoot to kill, dump the body, and move along. This method of torture... was personal.\"\n\n\"Retaliation for her failing to kidnap baby Pete?\" asked Cindy.\n\n\"Maybe.\" I said. \"And maybe because the FBI investigation was getting close to her.\"\n\n\"If that was the case,\" said Martin, \"none of them said anything to me about it... while I've been the liaison between them and you.\"\n\n\"Okay...\" I said, \"Martin... have you been up all night working on this?\"\n\n\"Yes sir.\" said Nash.\n\n\"I appreciate the effort you're putting into it,\" I said, \"but right now I want you to go home and get some sleep. This is neither going to disappear nor solve itself in the next few hours. Go.\" Martin Nash did not argue; he made his goodbyes and left.\n\n\"Okay,\" I said to Cindy, \"let's look a couple of things up, here.\" I logged into my SBI Reserve account. I began looking up what they'd been doing on the Linda Farris suspension. I dug deep into their servers, which were woefully inadequately protected from a modest hacker like myself. I'm sure Myron and Mary would be laughing at them.\n\n\"Finding anything?\" Cindy asked.\n\n\"They're not exactly pushing this as a priority case.\" I said. \"They seem to be doing more to avoid working with the FBI than anything else... oh, wait... here's something. Yep, just what I figured. That makes sense.\"\n\n\"As someone around here keeps saying: 'Don't keep me in suspense'..\" Cindy said.\n\n\"Oh, I would never do that with you.\" I retorted. That was a dangerous comment, and Cindy's face made it clear to me.\n\n\"Just kidding.\" I went on. \"What I just found is that Linda Farris was in contact with the SBI. She wanted to make a deal with them, tell them what she knew in exchange for full immunity. The hitch was that she refused to cooperate in any way with the FBI or the TCPD, and wanted to work with only the SBI. They couldn't give her that, even though they wanted to, of course. So the negotiations broke down.\"\n\n\"Why couldn't they give her that, or at least say they could?\" Cindy asked.\n\n\"Because we locals technically still have jurisdiction of her case.\" I replied. \"And no Court, even the corrupt ones, would allow it.\"\n\n\"Nothing there for us, then.\" Cindy said.\n\n\"Don't be so sure.\" I said. \"This tells us a hell of a lot.\"\n\nCindy thought about it, looked at what I'd seen on the computer, then said \"I'm still the Junior Troy around here. So what are you seeing that I am not?\"\n\n\"Nothing.\" I said. \"And by that, I mean I am seeing what is not stated out loud. The point here is that Farris was trying to make a deal with the SBI. The Consultant found out. He had to know how much she'd told them. Ergo, Farris becomes a brisket in the Cub Club's dumpster.\"\n\n\"Oh.\" said Cindy. \"I see. But why the SBI? Why not the FBI?\"\n\n\"What's your inference?\" I asked, testing my partner in crime-fighting.\n\n\"She obviously trusts them in a way she doesn't trust the FBI.\" Cindy said. \"I understand her refusal to work with us, or more specifically, to work with you, but she's still got Federal issues from those adoptions...\"\n\nI let Cindy think about it, and I re-examined the SBI information. Finally, she said \"Okay, I could say a lot of things, but I don't want to waste your time, nor mine. So give me the Cliff Notes on where you are going with it.\"\n\n\"Sure.\" I said. \"It occurs to me that that Linda Farris and Louise Belfort are friends, and maybe even colleagues in crime. And Farris knows Lockhart, too. Farris may or may not know that the FBI is investigating Belfort and Lockhart, and in any case she's not going to take the risk. The FBI would want her to turn on Belfort and her gang in exchange for any deals, and she was not going to do that. Instead, she goes to who she thinks she can get the most from while giving up the least she can... the SBI. That does not speak well at all for the SBI's integrity, of course. Anyway, this case got up to Deputy SBI Director Robert Gaston, and he shot down the deal. Guess who was Farris's first contact, though?\"\n\nCindy shook her head, so I told her:\n\n\"Sergeant Leonard Sharples.\"\n\nPart 27 - It Begins \n\nDo I even need to say it?\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" she blared from in front of the Courthouse at 7:00am, Monday, March 7th. \"Channel Two News has learned that suspended Director of Child Protective Services Linda Farris, who was murdered Friday night, had been attempting to cut a deal with the SBI. That agency's Director, Jack Lewis, who is running for Governor, issued a statement saying that no deals with Farris had been made, and Deputy Director Robert Gaston confirmed that in his own statement.\n\n\"The Police Department issued a statement that they have few leads in the murder of Ms. Farris, and believe it may have been a professional hit. When asked how this matched with the autopsy report that Ms. Farris died of electrocution, the Police did not respond.\n\n\"In other news,\" said Bettina, \"every former EMT that applied for Unemployment benefits was denied by the County's office of the State Labor Department, citing that they were fired for cause as a result of their illegal actions. Their appeals have been denied, and a lawsuit filed over the weekend was dismissed with prejudice by Judge Harry Nance, who stated that the EMTs have no legal grounds to sue, and no legal standing. An emergency appeal was flatly denied.\"\n\n\"Meanwhile, a press conference has been called for 10:00am by Assistant Fire Chief William Jefferson, who was suspended by Sheriff Daniel Allgood pending an investigation into his actions last week in attempting to re-arrest former EMT Jimmy Lawson, who surprisingly was found not guilty of murder last week. Lawson is said to have left the County with his family. Channel Two News has not been able to confirm reports that Assistant Chief Jefferson is going to announce his resignation from the Fire Department. And now let's go to Nick Eastwood for Sports...\"\n\nMartin Nash was sitting at his desk, shaking his head. \"How does the Press get information like that, and so quickly?\"\n\nVice Detective Julie Newton, a.k.a. 'The Abacus', came into the MCD room, set down a can of coffee in payment, then poured a cup of brewed coffee. \"I'm not trying to be facetious when I say this, Martin,\" she said, \"but obviously someone leaked it.\"\n\n\"I get that.\" said Nash. \"But who?\"\n\n\"We have to wonder,\" said Julie, \"if the person who complains about the Press the most is actually the one doing the leaking? Like people at the top, who know the most.\"\n\n\"I don't think Chief Griswold was leaking to the Press.\" said Nash. \"And if Commander Troy ever does, he usually has an ulterior motive, and is using the Press to our advantage.\"\n\n\"I agree on the part about ulterior motives.\" Julie said. \"Anyway, if you need any help with data, come see me. It's getting boring in Vice these days. Lieutenant Croyle has scared off the drug gangs, it would seem.\"\n\n\"I hope that's not a complaint.\" said Nash. \"But thanks for the offer to help...\" \n\n* * * * * * * * * * * * * * * *\n\n\"This is Priya Ajmani, Five Alive News in the Morning!\" shouted the lovely Indian reporterette as Cindy, Teresa and I watched in my office. Cindy's eyes were glowing just a little bit as she watched the beautiful reporterette deliver KSTD's version of the news.\n\n\"A major press conference has been called by Assistant Fire Chief William Jefferson for 10:00 this morning.\" said Priya, her face molded into a smile of pleasure. \"Five Alive News will bring you the press conference alive, as we expect a major announcement. The Fire Department Union will also have comments at the press conference.\"\n\n\"Meanwhile,\" said Priya, \"the Police have no idea who murdered former Child Protective Services Director Linda Farris, nor any motive for the killing. When asked if they were in over their heads and if he needed to call in the superior skills and resources of the SBI's Major Crimes Task Force, Chief Sean Moynahan said that he had much more trust in the abilities of Commander Donald Troy than the SBI.\"\n\n\"That's not what he said.\" I said to the room. I shut off the TV with the remote.\n\n\"They're pushing that press conference.\" Cindy said. \"Any idea what it's about?\"\n\n\"No.\" I said. \"But I doubt Jefferson would call a press conference to resign. Anyway, do we have anything new on the Farris case?\"\n\n\"Just a little bit.\" said Cindy. \"Toxicology came back with results. Nothing in Farris's system. At all. Also, her car was still parked in the garage of her home. We executed a search warrant and found a house that was clean and sterile. Furniture all in place, bed made, everything clean, dishes washed and put up, no dirty clothes in any hamper. Almost like it was staged to be sold. Definitely no signs of break-in or violence.\"",
        "\"She knew her attacker or attackers. Let the person in, got TASERed, and that was that. So, no computers, no personal effects?\" I asked.\n\n\"No computers.\" said Teresa. \"Her cellphone, and her purse for that matter, have not been found at all. Cellphone is not pinging anywhere either. I would not be surprised to find it at the bottom of the River. Anyway, Uniformed Officers canvassed the neighborhood. No one out of the ordinary was noticed.\"\n\n\"Okay.\" I said. \"Unless we catch a break, this one is likely going to go down as a pro hit, and unsolved.\"\n\n* * * * * * * * * * * * * * * *\n\nAt 9:50am, I got a phone call on my personal cellphone. It was The Intendent, the lovely Adele Peabody.\n\n\"Don, I have to talk fast, so don't interrupt.\" she said quietly. \"That ten o'clock press conference is going to involve you. Something's going on, and some of the Council is very interested in it. I just called to tell you to watch your back, and don't overreact to anything. Gotta go, bye.\"\n\nWell, I thought as I hung up the phone, that was very brief.\n\nI had little time to ponder it. The Chief buzzed me on the phone. \"Mr. Crowbar,\" he said, \"can you come to the Main Conference Room, please?\"\n\n\"Yes sir.\" I said. I secured my crowbar under my desktop, where I'd put a couple of coathanger-like hooks to hold it in place. I then left the office. I knew it was big when I saw the Chief in the hallway.\n\n\"Let's go in, shall we?\" said Moynahan. He led me into the Main Conference Room. Already inside were Sheriff Daniel Allgood, Deputy Chief Della Harlow... and Fire Chief Patrick Quinlin.\n\nAfter brief hellos, we settled in to watch the press conference...\n\n* * * * * * * * * * * * * * * *\n\n\"This press conference,\" called out Assistant Fire Chief Jefferson, who was at a podium in front of the Courthouse, \"is to announce the filing of a lawsuit on my behalf by the Fire Department Union and the Concerned Citizens for Safety, a non-profit organization dedicated to the safety of citizens.\n\n\"As some of you know, some days ago a number of former EMTs, who were illegally on strike, attempted to block the progress of an ambulance attempting to reach University Hospital, putting the patient inside in grave danger. The EMTs did not care about anyone's lives but their own when they illegally impeded the ambulance.\n\n\"These illegal, dangerous, and intentionally harmful actions were video-recorded by multiple persons. This evidence was made available to Town & County Police Commander Donald Troy. Commander Troy not only refused to take action against the illegal strikers, he instead threatened Fire Department personnel with bodily harm. Furthermore, this video evidence was collected by Sheriff Daniel Allgood, and that evidence was not only not acted upon, it has disappeared. No actions were taken to arrest nor charge the illegal strikers; they were allowed to remain free, even after their lawbreaking actions.\n\n\"Our request to the Inspector General has not been acted upon. Filthy lawbreaking EMTs continue to walk free. Therefore, we are compelled to file this lawsuit to force the Inspector General to investigate the Town & County Police Department, and particularly Commander Donald Troy, for dereliction of duty, and covering up for criminals.\"\n\nThis was followed by a Union official in a five thousand dollar suit calling for my suspension without pay from the Police Force. \"We also ask for the SBI to suspend Commander Donald Troy as an SBI Reservist, and we demand the SBI open an investigation of Donald Troy for corruption.\" he said.\n\nThen the Media got their shot.\n\n\"Chief Jefferson!\" yelled Priya Ajmani, \"is this a political retaliation for Commander Troy arresting you the other day?\"\n\n\"I look forward to my day in Court to clear my good name from the smears upon it by Commander Donald Troy.\" shot back Jefferson. \"The record will show that my actions were in the right, as I and others attempted to arrest the murderer Jimmy Lawson as he attempted to flee the jurisdiction of the County\"\n\n\"Chief Jefferson, Lawson was acquitted by a jury of his peers!\" called out John Hardwood. \"Aren't you committing criminal slander now?\"\n\n\"I don't care what that rigged jury found.\" snarled Jefferson. \"That EMT Lawson is a murderer, and let me point out again that he is a filthy, lawbreaking EMT. If Lawson wants to sue me for slander, he can come right here to this Courthouse, in the jurisdiction of this County, and personally file the lawsuit. I look forward to Lawson personally coming here and facing me. I do not fear that filthy EMT punk. If he's innocent, why doesn't he show his cowardly face and stand up to me?\"\n\n\"Chief Jefferson, the Iron Crowbar stood up to you, and arrested you for your own lawbreaking actions.\" said Bettina. \"And he's legally done nothing wrong, while you not only broke the law, you assaulted a Police Officer. So why are you of all people making an issue of this?\"\n\n\"Okay, that's all the questions we're going to take.\" said Jefferson's lawyer. He hustled Jefferson and the others away. All the other reporters glared angrily at Bettina.\n\n* * * * * * * * * * * * * * * *\n\n\"I've done nothing wrong.\" I said in the Conference Room.\n\n\"It's gotta be a political ploy.\" said Daniel Allgood. \"And by the way, the evidence has not disappeared. It's in the Sheriff Department's Evidence Room.\"\n\n\"Better check on that.\" I said quietly. Allgood looked stunned at my implication.\n\n\"Don,\" said Fire Chief Quinlin, \"I came here to tell you that I had nothing to do with this. Jefferson went way over my head, not to mention the Sheriff's. He's already suspended; there's nothing else we can do to him right now, so I guess he thought he can get away with this.\"\n\n\"I know, Chief.\" I said. \"Anyway, this is not spontaneous at all. Very carefully planned, well orchestrated according to a very tight script. You may think Priya's question was hostile, but I think it was pre-planned so he could give that pre-planned answer. That was pure kabuki theatre.\"\n\n\"It may well be,\" said Chief Moynahan, with his peculiar inflection and accents, \"but it is still dangerous to you, and to all of us. The Media intends to run with this. Miss Ajmani intends to milk this for all it is worrrrth.\"\n\n\"The lawsuit will be squelched within five minutes of being filed.\" Della Harlow said. \"By the way, we've received no paperwork, no subpoenas, nothing at all.\"\n\n\"If they do file, that will come in time.\" I said.\n\n\"And they'll still run with the story until the proverbial cows come home to roossssst.\" replied Chief Moynahan, intentionally mixing his metaphors.\n\n\"We'll see how serious it is,\" I said, \"if and when the SBI says something. The locals and the Union are nothing. The SBI is the key on this.\"\n\n\"Why do you say that?\" asked Della, who was just beginning to learn my methods.\n\n\"That Union guy telegraphed it.\" I said. \"The key of that whole charade was that they wanted me suspended as an SBI Reservist. That suggests the SBI, and probably Jack Lewis himself at the top, wants me out of their way, and unable to poke my nose into their business...\"\n\nWith that, I went into a reverie..\n\n* * * * * * * * * * * * * * * *\n\n\"You've got to say something.\" said Lt. Scott Peterson, the Media Relations Officer, as we sat in the Chief's office at 2:00pm, still Monday, March 7th. \"I need something to give them, something to counter Jefferson's brazen lies.\"\n\nI sighed. \"Tell them that I will not bother dignifying his smears with a response.\"\n\n\"Chief...\" said an exasperated Peterson, \"with all due respect to the Commander, can you get him to say something, anything at all? I can't give the Press a non-statement.\"\n\n\"Sure you can.\" said Moynahan. \"Go tell them exactly what the Commander just said. You can also tell them that Chief Moynahan says he, Chief Moynahan, looks forward to Jefferson's own trial for assaulting a Police Officer.\"\n\n\"Please don't say that, Chief.\" I said. \"Our main defense right now is to call Jefferson's stunt politically motivated. If you draw attention to that, then we're going to be hit with the political retaliation theme. And guess whose side the rabidly dishonest Media is going to take?\"\n\n\"They're not all dishonest.\" said Peterson. He exhaled. \"Okay, Commander, I'll tell them what you've said. But at least think of giving one of them an interview. Bettina Wurtzburg is pretty fair to you. Her question wasn't scripted, and she's taking heat from other reporters for asking it.\"\n\n\"I'll think about it.\" I said.\n\n\"Go give them that statement now.\" said the Chief. Peterson got up and left.\n\nPart 28 - Making Amends \n\nMonday evening, March 7th.\n\nPaulina Patterson and I were sitting on the deck of the Cabin. Laura had baby Tasha inside, and was breastfeeding her. My wife liked putting her udders to good proper use instead of having to bottle the milk.\n\n\"I cannot tell you how angry I was with you when that verdict was read.\" said Paulina, sitting next to me on the metal loveseat. It was cold outside now that it was dark, but we were bundled up pretty warm.\n\n\"What changed your mind?\" I asked as I watched the light of a train coming out of the western horizon.\n\n\"I'm still a bit pissed, so don't think you're off the hook.\" Paulina said. \"But... well, after all that's happened, I thought maybe you know he's innocent but can't prove otherwise, so you let Gregory make a fool of himself.\"\n\n\"You seem intent on blaming me for this.\" I said.\n\n\"Don, we've spent hours... hours... together on trial prep.\" Paulina said. \"We worked on that Bryan Thatcher case as if the fate of the World depended on it. I know you could've helped Gregory through that---\"\n\n\"And Krasney couldn't prep him? Or Washington?\" I queried.\n\n\"I'm mad at them, too.\" Paulina said.\n\n\"So what cooled your anger at me?\" I asked.\n\n\"It's hard to stay mad at you.\" Paulina said. \"Especially every time I hold your daughter, feed your daughter...\"\n\nI smiled. \"We did something good together, there.\"\n\n\"Yes we did.\" said Paulina. \"Anyway, when I heard what Jefferson said this morning, I was livid. Even more angry than I was at you. And I realized that no matter what else, Lawson had his day in Court. The Jury made its decision. I just don't get the level of hatred of these Firemen towards the EMTs.\"\n\n\"Kind of like hating the other guy after winning the girl, eh?\" I said.\n\n\"Yeah... yeah, that's a good analogy.\" Paulina replied. \"All right, let's go inside. Think Laura will mind if we have make-up sex in the main bedroom?\"\n\n\"No, she won't mind.\" I said. \"And she'll probably join in. Why don't you go on inside. I'll be there in a minute.\" Paulina got up and went inside.\n\nI thought about it. Yes, I'd all but engineered Lawson's acquittal. But was he guilty? Of course he was.\n\nOh, yes.\n\nHe was alone with Naples. It was his scalpel. He had the knowledge and the ability to use it. And he had motive: fear for his family, fear of job loss.\n\nI could only imagine being dirt poor with a wife and baby child depending on me just to eat, and the existential threat to my life and my family. Only to be vilified, hated, robbed of my livelihood by the insidious, unappeasable, and incomprehensible hatred of others, a hatred born of a desire to squeeze every last dime out of me for their personal enrichment.\n\nAnd this done to a military veteran, a Conscientious Objector that still did his duty for his Country and served as a medic, trying to save lives from the meat grinder of war created by politicians...\n\nLawson had had little hope. But me, I was in a unique position to make it right. Even at the cost of letting a murderer go free? Maybe I was wrong. But what is 'Justice'? Really?\n\nI went inside. Lawson would be a great EMT in Texas. He would save many lives. He would not make the same mistake, born of desperation, again.\n\nI was not going to lose sleep over it. I put Lawson and my decision into their 'compartments' of the mind, and turned my attention to the future...\n\nPart 29 - Building the Pressure \n\nTuesday, March 8th. At 10:00am, Cindy came to my office and asked me to come to the front lobby.\n\nThere was a bit of a crowd there as we came up. They made way for me. Looking out the doors, I saw one person standing on the sidewalk in front of Headquarters. He was wearing a black robe with hoodie, a Guy Fawkes mask, and held up a sign that said \"STOP POLICE CORRUPTION\".\n\n\"Sir, shall I remove that trash from the premises?\" asked Sergeant Rudistan in his jovial way as Commander Harlow came up to see what was going on.\n\n\"Oh, we have an Anonymous.\" she said when she saw him.\n\n\"Let him stand there for a minute.\" I said. \"I have an idea.\" I hurried back to my office...\n\n* * * * * * * * * * * * * * * *\n\n\"I cannot believe he's doing this.\" said Cindy.\n\n\"Does he have his armored vest on under his uniform?\" asked Deputy Chief Della Harlow? Cindy affirmed that I was so attired.\n\n\"Rudistan, you're loving this, aren't you?\" Cindy asked, seeing the smile on Rudistan's jovial face.\n\n\"Oh yes ma'am, you better believe I'm loving it.\" Rudistan replied. \"I wish I'd thought of it myself.\n\nThey all watched as I walked out front to face the 'protestor'. I had gotten my Guy Fawkes mask that I'd worn last November on the cadet run, put it on, then put my Tilley hat on over it. Walking out, I came face to face with my counterpart. He seemed shocked to be confronted with... himself.\n\n\"So,\" I asked from behind my mask. \"Who do you say is corrupt? And why?\"\n\n\"Do you fear the coming retribution for your corruption?\" Anonymous said, his voice deep, weird-sounding behind his mask.\n\n\"No.\" I said. \"There is no corruption here. If you want that, go to tonight's Council meeting, or engage the Haters like Assistant Fire Chief Jefferson.\"\n\n\"Wise advice.\" said Anonymous. \"At least you have the guts to face us, Iron Crowbar. Perhaps one day, you will will wear that mask as you join with us, to face the Evil that we will not forgive, and not forget.\"\n\n\"I'm fighting them my own way.\" I replied.\n\n\"We are Legion.\" Anonymous said. \"We do not forgive. We do not forget. Expect us.\"\n\nWith that, 'Anonymous' lowered his sign, turned and walked off down the sidewalk towards Town, and City Hall. I went back inside to a throng of greatly amused Police Officers.\n\n\"Who was that, Commander?\" asked Cindy.\n\n\"I have no idea.\" I said. \"And I don't think I want to know\"\n\nWe went back to my office. I put the Guy Fawkes mask down next to my matchstick Trojan Horse and sat down. Cindy came in behind me.\n\n\"Just between us and the crowbars,\" she said, \"I spoke with Britt Maxwell a few minutes ago. She said the Fire Department Union did contact her office to make a formal report accusing you of corruption, but they have nothing backing them up, and she plans to take no action. Jack Lewis has also not said anything to her about it.\"\n\n\"Least of my worries.\" I said. \"I'm much more worried about what the Council is going to say and do tonight.\"\n\n\"I know some of them hate you.\" Cindy said. \"But come on, they can't do anything to you. You were obviously in the right when you arrested Jefferson, and you were never under obligation to arrest the EMTs... especially as they were on State property when they blocked the ambulance.\"\n\n\"Yeah, I know.\" I said. \"But my worry is not about myself... I am worried about what the Council is going to do to Tanya...\"\n\n* * * * * * * * * * * * * * * *\n\nIt was early evening, and the sun was just going down. She came into her house, setting her purse and keys on the breakfast table. As she came into the living room, she stopped short, seeing him sitting on her sofa.\n\n\"Hello, my lovely Sinon.\" he said. \"I apologize for the unannounced visit, but we have an urgent matter to discuss.\"\n\n\"You are welcome, any time.\" she replied. \"At least when I'm here alone, so you won't be recognized by anyone else. Can I get you something to drink?\"\n\n\"Thank you, no.\" he replied. \"I'm going to be busy tonight, necessitating this visit now. I'll leave as I came, on my own motorcycle, fully helmeted and masked, which will create no real chance to identify me.\"\n\nAfter a pause, he said \"My dear, the Iron Crowbar is just not getting the message. I would have thought the attempt to kill Pete Feeley's child would've been warning enough. However, that attempt was badly bungled, and we've ended up having to eliminate a good asset in Ms. Farris as a result.\"\n\nHe continued: \"I grow sick and tired of the Iron Crowbar's repeated intrusions upon my operations. He has his FBI pitbulls sniffing around me. So... I will try one more time, and a little closer to him. It will also help eliminate a distraction in one of my colleagues, who I am coming to not trust any more. So here is what you are going to do, my lovely Sinon...\"\n\n* * * * * * * * * * * * * * * *\n\nAs the Council convened at 7:30pm, a lone man stood outside, wearing a black robe and hoodie, an Anonymous/Guy Fawkes mask, and a sign that read \"Stop Government Corruption\". Walking up with Pastor Westboro, Thomas P. Cook saw him, and demanded the Police remove the man. Sergeant Rudistan refused, saying the Police Commander himself had ordered the protestor remain unmolested, provided that he remain peaceful in his protest. Cook was livid, but could do nothing.\n\n\"Let it go, Mr. Cook.\" said Westboro. \"We have our meeting to attend, and he is too much of a coward to show his face.\" Still angry, Cook allowed Westboro to persuade him.\n\n* * * * * * * * * * * * * * * *\n\n\"There being no more public business,\" said the Mayor at the Council meeting, \"we will retire to executive session to discuss personnel matters.\" It was 8:30pm, the public meeting having lasted an hour. The Council left their chairs in the auditorium chamber, and retired to the second floor private Council room, taking the seats they always took as if their names were on them.\n\n\"Okay,\" said the Mayor, \"we have one major item to discuss. Police Lieutenant Tanya Perlman is out of life-threatening danger, but is paralyzed from the waist down. We have asked her Police Department superiors for evaluations of her being able to return and her ability to do her job as the MCD Lieutenant.\"\n\n\"How is this even our business?\" asked John Colby, his baritone voice booming out of his slender body, and anger running through it in a thin thread. \"Isn't this for the Police Force to decide for itself?\"\n\n\"Not quite, Mr. Colby.\" said Pastor Raymond K. Westboro. \"The issue we're going to be discussing is a possible pension package for Lt. Perlman. There are several options, but we'll have to vote on exactly what to do.\" Colby nodded his acquiescence.\n\nThe Mayor said, reading from papers: \"Captain Ross submitted her opinion that Lt. Perlman could continue at her current position. Police Headquarters is fully compliant with the myriad Federal regulations supporting handicapped persons. Captain Ross said that Lt. Perlman does not necessarily have to go to crime scenes to do her job as the MCD leader. Captain Ross also said, quite interestingly, that Lt. Perlman could be promoted to Precinct Captain, especially if Precinct Captain Weston is considered for the Captain of Administration slot, which opened up when Harlow was promoted to Deputy Chief.\"\n\nMayor Vaughan continued: \"Commander Troy stated that Lt. Perlman will be able to function normally as MCD Lieutenant, as she has a very capable team helping both her and him get the job done. Chief Moynahan said---\"\n\n\"Wait.\" said Kelly Carnes. \"Is that all Commander Troy said?\"\n\n\"Uh, yes.\" said Mayor Vaughan. \"His reply to our email was rather terse and brief, but got his points across.\"\n\n\"I'm surprised he's not banging on the door with that crowbar of his right now.\" said Carnes. \"And I think he would be, if he really wanted to keep Lt. Perlman in her position.\"",
        "\"I sincerely hope,\" replied Dagmar Schoen, \"that Mrs. Carnes is not trying to put words into Commander Troy's mouth, especially by making assumptions based upon what the Commander has not said and is not doing.\"\n\n\"Looks to me like he came across that email as part of his routine.\" said Edward R. Steele. \"He read it, answered it, and moved along.\"\n\n\"Speaking of Commander Troy,\" said Thomas P. Cook, \"shouldn't we instead be talking about suspending him, or calling for the SBI to come in and investigate him for corruption, as Assistant Fire Chief Jefferson has requested of us?\"\n\n\"Based on what?\" thundered Colby. \"Where has Commander Troy done anything wrong, much less corrupt?\"\n\n\"Why didn't he arrest those EMTs?\" asked Pastor Westboro. \"They did have video evidence.\"\n\nJust as Colby was about to reply and a bigger argument about to erupt, the Mayor stood up. \"Ladies and gentlemen, let me stop you right there on this. I spoke with the District Attorney and the City Attorney about that issue, and I also got an opinion from a disinterested legal expert, that being my private lawyer.\n\n\"We can blow hot air all day about it, but the bottom line is that the EMTs were actually on State property, that being the University Campus, when they blocked the ambulance. Commander Troy technically did not have jurisdiction, there. So he cannot be accused of dereliction of duty in not arresting the EMTs. Period. We will have no more discussion of that.\" He sat down.\n\n\"I'll add that AFC Jefferson did block a public road with a Fire Engine.\" said Dagmar Schoen. Why aren't we talking about firing him and bringing charges against him?\"\n\n\"His intentions were honorable.\" said Thomas P. Cook. \"He was trying to stop a filthy EMT from escaping the jurisdiction, since Troy won't do his duty by that.\"\n\n\"You have a double standard about that.\" said Colby. \"You don't seem to apply it to the Iron Crowbar when you're relentlessly attacking him.\"\n\n\"Who's talking a double standard here?\" Cook angrily shot back. \"Troy should've been fired months if not years ago! Troy almost murdered Robert Brownlee, and you defended Troy. Why hasn't Troy been suspended---\"\n\n\"Robert Brownlee assaulted a woman, Mr. Cook.\" Malinda Adams said angrily, interrupting Cook. \"Brownlee deserved worse than he got. I am not a fan of Commander Troy's overly aggressive style of leadership, but if you're going to use that example, then first explain why Brownlee wasn't arrested for assault and battery upon a woman.\"\n\n\"He didn't assault her, Ms. Adams.\" said Cook. \"She attacked him first. There were witnesses, who were ignored. And stating that truth does not make me a misogynist.\"\n\nThe Mayor had a little gavel, which he rarely used. But he did so now, repeatedly banging it on the table. \"Okay, folks, that is long past history.\" he said. \"Brownlee is gone from the TCPD. Let's get back to the present, and Lt. Perlman's situation.\" \n\n\"Okay,\" said the Mayor in the tense silence of the room. \"Chief Moynahan stated that his relative time in the Department is short, but he has been impressed with Lt. Perlman's crime solving as well as leadership abilities. However, he had reservations about her mobility in the field. I then had a phone conversation with him to address that, and he admitted that she would be limited in any field operations, such as a search for a missing child, pursuing criminals, crowd control in an emergency, and so on.\"\n\n\"So what's the issue here?\" asked John Colby.\n\nPastor Westboro spoke up. \"Lieutenant Perlman does not presently meet the physical standards required of a Town & County Police Officer. She can be granted a waiver, but that is position-dependent. If she is promoted to Captain, she's automatically exempt.\"\n\n\"What about Precinct Captain?\" asked Reginald B.F. Lewis.\n\n\"They are not considered full Captains.\" said Westboro. \"They are still covered by the Police Union, not the Police Captain's Union. They're considered senior-grade Lieutenants, if you will. They are not exempt from the physical fitness requirements like full Captains are.\"\n\n\"But to this point,\" continued Westboro, \"we must consider if she should be allowed to be promoted at all. There are financial and other issues that would crop up if we do. So the time to act is now.\"\n\n\"You absolutely cannot just throw her off the Force, after what happened to her, and what she did to save her baby.\" said Dagmar Schoen, totally shocked.\n\n\"We have to do what is best for the overall Police Force, and for the People of this Town & County.\" Kelly Carnes replied with a sneer, taking a shot back at her enemy Schoen.\n\n\"We don't have to be so cold and callous about it, Mrs. Carnes.\" said J.P. Goldman. \"Pastor Westboro, what are you recommending?\"\n\n\"Yes, we can solve this with both discretion and compassion.\" said Westboro. \"My recommendation is that Ms. Perlman be offered a full disability retirement, and the full pension that goes with that. She will also have standard Police insurance for the rest of her life, as any Police retiree does.\"\n\n\"What if she doesn't accept that?\" asked Carnes. \"What if she puts up a fight? Worse, what if the Iron Crowbar backs her up and fights for her?\"\n\nHer question was met with deafening silence...\n\nPart 30 - Going Too Far \n\nVice Lieutenant Teresa Croyle entered the offices of the Chief Executive Officer of BOW Enterprises, Inc. at 8:10pm, still Tuesday, March 8th. Seeing no one at the secretary's desk, she knocked on the door and peeked inside.\n\n\"Teresa! Come on in.\" Todd Burke said. His assistant, a lovely thirtysomething Japanese woman named Mariko, was taking final notes before being sent home.\n\n\"Ah, hello Teresa-san.\" Marko said happily with a bow. \"You look lovely today.\"\n\n\"Hi, Mariko-san.\" said Teresa, bowing back. \"So do you. Forgive me for interrupting.\"\n\n\"Not at all.\" said Todd. \"We're finishing up. You can go, Mariko-san. Have a good evening, and I will see you tomorrow.\"\n\n\"Thank you, Todd-sama.\" Mariko replied. With another bow, she left the office.\n\n\"She's a very nice lady, but so formal.\" Teresa said.\n\n\"Yes, she's from a Japanese family of ancient samurai heritage. So... where do you want to go to dinner tonight?\" Todd asked.\n\n\"Anywhere you like.\" Teresa replied as Todd put on his heavy coat. Teresa knew that it had light body armor, as did his uncle's trenchcoat. She was wearing her own Police vest under her Uniform shirt and coat. They left, Todd turning off lights along the way.\n\nBOW's factory was on the west side of the River. The lights of Crown Chemicals were visible from the main entrance, which faced north. BOW Enterprises was southwest of Town, due west of Junction Station as the crow flies.\n\nAs they got to the door, Teresa was about to go out when Todd said \"Hold on.\" He was feeling something. \"Something is not right, here.\"\n\nThey both looked out, but did not see anything. Todd peered out to the right, seeing the River and the rising land on the other side, an empty field dotted by a few trees. To his left were the railroad tracks running north-and-south, and farm fields on the other side.\n\nTeresa was also peering into the darkness. \"I don't see anything.\" she said.\n\n\"Well, let's not dawdle getting to the car.\" Todd said. They walked out into the parking lot and swiftly made a beeline towards Teresa's car, parked next to Todd's.\n\nReaching the cars, Todd was about to open Teresa's door for her when time seemed to slow down. They both saw the red dot flash on the car window, then move onto Todd's shoulder and chest...\n\n\"GUN!\" Teresa shouted as she pulled Todd violently back and down. Just as they fell below the window line, Teresa's car window exploded in a shower of glass. A split-second later the crack of the rifle shot reached their ears.\n\n\"Stay down!\" Teresa ordered. Taking out her gun, she peered around the bumper of Todd's car at the field across the river. She could not see anything, but as she reached for her Police radio to call it in, she heard the sound of a motorcycle being revved up. It faded away as the rider sped away...\n\n* * * * * * * * * * * * * * * *\n\nThe SWAT Team was moving through the dark field, using night-vision devices to see in the dark. They made a thorough sweep, but found no armed perps, nor anyone else for that matter. The Crime Lab personnel later found an expended .308 Winchester shell, and the tread of a motorcycle not far away, of which they got an impression. There were no fingerprints on the shell.\n\nWhile the SWAT Team was in action, a bulletproof Police SUV came into the BOW Enterprises parking lot towards the front row of cars. Cindy Ross, riding shotgun as I drove, was looking for the two people lying on the ground between cars.\n\n\"Stop!\" she said as she saw a mass. As I stopped, a flashlight emitted the dot-dot-dot dash-dash-dash dot-dot-dot of the S.O.S. morse code sign. I pulled in at an angle, very close to the cars, to give Teresa and Todd shielding as Cindy practically crawled into the backseat to open the backdoor for them. The door also offered shielding as Todd and Teresa dove into the backseat. I then backed the SUV to the far side of the parking lot, then drove them out of there as Cindy got on the radio to announce that the intended victims had been safely extracted...\n\n* * * * * * * * * * * * * * * *\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded MILF reporterette from outside the gates of BOW Enterprises. It was Wednesday, March 9th, 7:00am. \"Channel Two News has learned that gunshots were fired at BOW Enterprises CEO Todd Burke last night!\"\n\n\"Mr. Burke was not injured,\" continued Bettina, \"and the only damage was to the vehicle of Police Lieutenant Teresa Croyle, who was on the scene and called in the Police. The TCPD has made no statement about the shooting, citing that the investigation is in the earliest stages.\n\n\"In other news,\" Bettina went on, \"The Town & County Council passed an ordinance prohibiting anyone from protesting, even peacefully, while wearing a mask. The ACLU stated in a press release that they would sue the Council if the ordinance passes next week's second reading of the bill. The measure was introduced by businessman Council Member Thomas P. Cook. However, the Council took no action with regard to the lawsuit filed by suspended Assistant Fire Chief William Jefferson against Police Commander Donald Troy. And now we go to Nick Eastwood for Sports...\"\n\n\"Damn!\" said Theo Washington as the Detectives watched in the very crowded MCD room. \"First Lt. Perlman, now Lt. Croyle. Who will the bastards try to kill next?\"\n\n\"I don't think they were trying to kill Lt. Croyle.\" said Detective Joanne Cummings. \"I think they were trying to kill the Commander's nephew, and that after trying to kill Pete Feeley's baby.\"\n\n\"Why do you think that, Joanne?\" asked Detective Julie Newton as she sipped her coffee.\n\nJoanne replied \"Todd is at work every day. He can be expected to be there, and to leave at some point in time. He parks his car in the same place every day. By way of contrast, Lt. Croyle does not go there every day, cannot be expected to, and might not park in the same place every time. If someone wanted to kill her, they'd set up outside Police Headquarters.\" There were murmurs of agreement.\n\n\"Also,\" Joanne said, \"Todd is Commander Troy's nephew. Perps stole Pete Feeley's police badge from Commander Troy's office and left it at the crime scene when they thought they'd murdered the baby. I think both these murder attempts are directed at Commander Troy himself. And I hope he's on guard, because he himself may well be the next target.\"\n\n\"Very astute of you, Detective Cummings.\" said a voice behind them. \"And yes, I am always watching behind my back.\" It was me, Your Iron Crowbar, that had said that as I came into the room. \n\nAs I poured myself a cup of coffee, I said \"But all of you need to be careful. Wear armor if you're out in the field. And watch for motorcyclists. Tire impressions of a motorcycle were found, and the sound of a bike was heard right after the shots were fired at Todd and Teresa.\"\n\n\"Any idea who did this, Commander?\" asked The Abacus, Julie Newton. \"Is there any chance of catching and stopping him?\"\n\n\"Time will tell, Detective Newton, time will tell.\" I replied. \"All right, carry on, and keep your heads on swivels out there.\" With that, I left MCD for my office.\n\nOf course, the Blue Crowbar followed the Red Crowbar into the office. Cindy had a full coffee cup as well. I called Teresa Croyle's office and asked her to step down the hall and join us, preferrably with a full coffee cup of her own. She complied.\n\n\"You did a great job last night, Teresa.\" I said after she was seated. \"But I swear to God that if you get another Purple Order, I am going to put you on desk duty for the rest of your life. Especially if it's posthumous.\"\n\n\"Yes sir.\" Teresa said, knowing that I was being half-humorous but also serious, and that my words were out of concern for her.\n\n\"So, who do you think was the target?\" I asked... though I'd asked the night before, as well.\n\n\"Sir, I still think your nephew was the target. I heard what Joanne said, and I think she's right. Someone is coming after you, but by the roundabout way of killing people close to you. I would really suggest you put your cousin on desk duty for the rest of her life, since she might be the next target.\"\n\nI laughed heartily, not only at Teresa's words, but at Cindy looking daggers at her best friend. \"That might be a very good idea.\" I said, then my humor left me as quickly as it had appeared. \"But you do have a serious point. Cindy, you be damned careful out there.\"\n\nAfter a few more minutes of talk, Teresa was called into the Chief's office, for the routine Internal Affairs review. Cindy was pensive.\n\n\"Don,\" she said quietly, and I suspected her bug-killer was on, \"I know your nephew might have been the target, but my best friend might have been killed. And Tanya was almost killed, her mother-in-law shot dead, her baby lucky to be alive, and she's in a wheelchair and the Council is about to force her off the Police Force.\"\n\nCindy was staring at something as she said \"I don't know if I can take much more of this. I know you want to to take this bastard alive, but I don't want to lose anyone else in the process. It might be Carole and Jim, or Ross and Ian and Molly he targets next.\"\n\nI just nodded. I noticed that she was staring at the Trojan Horse, and the Anonymous mask next to it.\n\n\"Yeah.\" I said. \"He's crossed the line. He's gone too far. I'm not willing to risk my family just to see him in a Courtroom. This can't go on like this.\"\n\nPart 31 - Epilogue \n\nWednesday night, about 10:30pm. He was tired as he finished up his work. He turned off the lamp and left his office, going down the hall. The attempt on Todd Burke's life had unfortunately gone wrong, and young Burke had had that Police Lieutenant with him, covering him and preventing his lovely Sinon from getting a second shot.\n\nNevertheless, he would have the paper message delivered to the Iron Crowbar's office, to be seen the next morning, and the Iron Crowbar would know that if he didn't back off, it would get uglier. Much, much uglier.\n\nGoing outside, he heard the traffic and saw the white of the snow-covered ground; it had snowed again this afternoon. He saw some people walking about, and a number of old people from the Community Center, sitting on benches in spite of the cold. He wondered why he was seeing so many of them all the time around Town.\n\nAs he got to his car, he realized he had forgotten something in his office and would have to go back and get it. Walking swiftly, he went back inside the building and down the hall to his office door.\n\nHe stopped at the door... it was cracked open. Pushing it, he looked into the office, seeing that it was empty. The desk lamp was on; he could've sworn he turned it off. And then he saw it.\n\nGoing around to the other side of his desk, as if he were going to sit down, he looked at the object. It was a Guy Fawkes mask. The eye holes seemed to look at him, the sinister smile mocked him. \n\nBeneath it was a sheet of paper. It was a photocopy of the message left on Commander Troy's wall in place of Feeley's shield, with 'Hampered' crossed out. The 'Troilus' was also crossed out, but in bright red Sharpie ink, and a message was scrawled in red on the paper:\n\n\"We are legion.\n\nI do not forgive.\n\nI do not forget.\"\n\nHe laughed derisively. What kind of puny threat is this? he asked to himself. He picked up the mask, and a slip of paper, a tiny slip, that had been attached to it floated down to the desk. He picked it up... and for the first time in his life a chill of fear raced down his spine as he read it:\n\nExpect me.\n\nFinis."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "non-erotic",
        "mystery",
        "crime drama",
        "police drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/six-degrees-ch-05"
}