{
    "title": "Pushover Ch. 05",
    "pages": [
        "And Rick and Daisy's adventures continue.\n\n*\n\nRick waited as long as he could before going to see Daisy: He managed to wait until the next afternoon. He had heeded Sarah's advice as long as he could, but he'd been stuck in a bizarre state of self-recrimination and anxiety that he couldn't wait any longer. He had barely slept, hadn't showered, and looked like hell. As he pulled up in front of her place, he took a deep breath, wondering what he was going to say.\n\nWhat the hell had happened? Rick had been wracking his brain the whole night, trying to come up with what he had done wrong. One minute they're making out in the middle of the club in front of everyone, and the next time he sees her she won't even talk to him. Did someone say something? Did she just want to stop seeing him? What was it?\n\nRick took a deep breath and released it, clearing his mind of his anger, confusion and hurt. He got out of his car slowly and walked up the path to Daisy's door, ringing the bell without opening the screen door. After a few moments the main door opened, and Lilly considered him through the screen.\n\n\"Hey Lilly. Is your sister home?\" Rick said, trying to smile. He liked Daisy's kid sister, and he hoped that whatever he had done, she didn't hate him too.\n\n\"Daisy doesn't want to speak to you,\" Lilly said simply. \"Sorry,\" she added, which Rick thought was charitable.\n\nRick tried not to visibly crumple. \"Alright, that's, uh, that's alright. Hey Lill?\"\n\n\"Yeah?\" She was already closing the door.\n\n\"Can you tell me what I did wrong? I just... I've been wracking my brain and I just don't know what I did.\"\n\nLilly frowned a little, her eyes measuring him. \"Okay,\" she said before closing the door with some finality. Rick turned and headed back to his car, wondering how he was going to handle working with Daisy from now on. He was halfway to the car when he heard the screen door slap open and turned to see Daisy stomping towards him.\n\n\"You know what you did,\" she said simply when she reached him, her arms crossed at her chest. Her face was an unreadable mask, the same mix of anger and hurt that Rick had seen the night before.\n\n\"Daze, I don't. I don't. One minute you're in my arms and the next you're telling me to fuck off. I just... I need to know what happened.\"\n\n\"I talked to Paul,\" Daisy said, as if that explained everything. Rick stood there, still not getting it. Daisy sighed, disgusted that he would keep playing innocent even as she revealed that she knew everything. \"He told me you wanted to be a back up guy, shoot some of your own scenes. So I guess I'm not enough for you? Wanted to get a few more porn stars under your belt?\"\n\n\"Wait, what?\" Rick asked, finally figuring it out. \"Daisy, that's not it at all! He called me! I just told him that he could call me as a back up-\"\n\n\"What, I can't do it but you can go and fuck oth-\"\n\n\"I told him to do that so I could just turn him down later!\" Rick half-shouted, talking over Daisy.\n\nDaisy paused. \"What?\"\n\n\"Slambros is a fucking huge company! You think I want to be a pornstar? I'm trying to build a business, but if I just tell him no flat out, maybe Paul won't think I'm helpful and he'll never call me for that security work. Remember? What I actually do for a living?\" Daisy's anger started to fade, but she was still cautious.\n\n\"But if I say 'yeah, sure, call me,' then in his mind I've done him a favor. And I can always just shoot him down later if he calls with some last minute fucking porno shoot. Sorry Paul, I've got work. Oh I'd love to, but I've got a dentist appointment. I mean, fuck Daisy, was that it? You couldn't just talk to me?\" Rick asked, a strange mixture of relief and anger rushing over him.\n\nDaisy's face crumpled, tears beginning to drip down her cheeks. \"I just...\" she began, before a deep sob ripped from her. She buried her face in one hand as she began to cry in earnest, and it was all Rick could do not to rush to her and take her in his arms. As it was, he approached her cautiously, placing a hand lightly on her arm. She came to him instantly, burying her face in his chest as he wrapped his arms around her.\n\n\"Shh, it's okay baby, it's okay,\" he said softly, kissing the top of her head, his hands rubbing along her slim, soft, back.\n\n\"Oh god, I'm so sorry,\" Daisy said, quickly wiping her eyes.\n\n\"It's okay, it is... Want to go inside? I think we should talk a bit.\" Daisy nodded and led him inside, past Lilly typing away at her laptop. Rick glanced over and saw a very pleased look on the young girl's face, and he nodded to her, suspecting that he had her to thank for all this. Daisy led Rick to her bedroom, which he was surprised to see was actually quite neat.\n\n\"I get cleany when I'm upset,\" Daisy said with a shrug, sitting heavily on the bed.\n\n\"Ah,\" Rick said, sitting on the armchair facing her. He didn't want to push her too much, so he thought it best to keep his distance. \"Hon, what happened?\"\n\n\"I dunno,\" Daisy said, looking down and toying with the hem of her t-shirt nervously. \"I... I like you Rick. I like you a lot. You aren't like the guy's I usually go with.\"\n\n\"Right. Lilly said so, remember?\"\n\nDaisy smiled. \"She wasn't wrong either. But I... It's not like I didn't know they were assholes, y'know? Like, they're nice enough at first, so they can get me, and then...\" she shrugged. \"I guess I kinda got used to it. They didn't care about me too much, so I stopped caring about them. And then that became I didn't care about them from the beginning.\"\n\n\"You don't get hurt that way,\" Rick said, understanding.\n\nDaisy nodded. \"I haven't let a guy get that close in years. And you just kinda snuck in there. How'd you do that?\"\n\nRick shrugged. \"I dunno. Wish I did.\"\n\n\"I think it's... You don't play games. I'm not used to that,\" she admitted with a rueful grin. \"But then Sally called me, because she had heard from Paul and was looking out for me. And then when I called Paul... I thought you were going behind my back, seeing if you could get some easy pussy. If Derrick, or Mike or Jeremy or any of the others had pulled that kind of shit I wouldn't have been surprised at all. But I thought...\"\n\n\"That I was different.\"\n\nDaisy nodded. \"When I thought you'd done that... I was shocked. And hurt. So hurt,\" she said softly. \"And then I got so fucking angry at you for making me feel like that! I mean, after what you said, I thought you really cared about me, and then-\"\n\n\"Wait, what'd I say?\"\n\nDaisy looked away. \"It's nothing.\"\n\n\"What?\"\n\nDaisy sighed. \"The other night, after I... Well after I fucked you senseless, you... you told me you loved me.\" Rick was about to blurt out some sort of denial, but paused, trying to remember that night. \"You... well, you were kind of asleep.\"\n\n\"Oh.\" Rick still wasn't sure how to respond. Deny it? He wasn't sure a woman, even one as commitment phobic as Daisy seemed to be, wanted to hear a guy go on and on about how he didn't love her.\n\n\"It's okay. I can't really hold what you say in your sleep against you. And after how I'd just rocked your world, I'll bet you did love me just then,\" Daisy said, smiling slightly. \"But I'd been thinking about it. And... And I kinda liked the idea.\"\n\n\"Of what?\"\n\n\"Of you loving me,\" Daisy said, looking up at him through her lashes. \"Which is why after I talked to Paul I fucking went off the handle so bad. Right after I talked to him I went back to the bar and, you know how I get, I was just filling orders like a machine while my brain just stewed. So when you came up to me, you were joining me after like a solid few hours of overactive Daisy-brain churning up all sorts of horrible ways you'd been playing me.\"\n\n\"Daisy, I-\"\n\n\"No, I know, I know,\" Daisy said, moving to her knees in front of him and taking his hand in hers. \"I was just so... I thought, like, finally I let a guy get close and he turns out to be the same kind of shitheel as the rest of them.\"\n\n\"But you believe me, right?\"\n\nDaisy nodded. \"I do. I guess I was more... I guess what I'm trying to say is that I'm a little crazy about you too and that kind of scares me a little,\" she finished in a rush, embarrassed. Rick quickly pulled her up to his lap and hugged her to his chest. They didn't say anything for a bit and Rick couldn't help but smile into her neck as he felt her melt against him.\n\n\"Rick?\"\n\n\"Hm?\"\n\n\"You stink. You didn't shower when you got home?\"\n\n\"I guess it slipped my mind. I didn't brush my teeth either, so don't kiss me.\"\n\n\"Too late,\" Daisy said as she planted one on him. The first few kisses were light, but soon sucking on each other's lips gave way to gently dueling tongues. Daisy hugged him again, her chin on his shoulder. \"You're right, you need to brush your teeth.\"\n\n\"Told you,\" her murmured into her neck.\n\n\"I wish Lilly wasn't here. I'd make up with you properly,\" Daisy whispered, kissing his shoulder.\n\n\"Let's go out.\"\n\n\"Want to go on a date?\" Daisy giggled.\n\n\"Absolutely. Let me go home and clean up and I'll take you for dinner. Then we can swing back to my place and I can show you my etchings.\"\n\n\"Dork. But okay.\" They kissed softly for a bit more before Daisy pulled him up from the chair and led him back to the front door.\n\n\"Thanks kiddo,\" Rick said to Lilly as they passed her a second time.\n\n\"Not a problem. Daze, you know I could go for a walk around the block if you two wanna-\"\n\n\"Hey,\" Daisy said firmly, pointing her finger at her kid sister. \"Watch it. This gentleman is taking me out for dinner tonight. Now let him go home so he can shower the stink of the club off of him.\" Lilly put up her hands defensively, returning to her laptop with a grin just like Daisy's.\n\n\"I'll see you later babe,\" Daisy said at the door, stepping close to give him one last quick kiss.\n\n\"Definitely,\" Rick said. Walking back to his car he felt like a massive weight had been lifted from his shoulders.\n\n~~~~~~~~~~~~~\n\n\"Well like I said, it was totally a fetish club,\" Rick explained around a mouthful of french fries. \"So you expect some freaky shit. But the dude sidles up in a bathrobe, like a blue terry cloth bathrobe.\"\n\n\"So not up to the dress code, clearly.\"\n\n\"Right. So I tell him I can't let him in dressed like that. Dude just goes 'I know,' like he's Batman or something, and just drops it, revealing...\"\n\n\"Panties. Teddy. Diaper,\" Daisy guessed.\n\n\"A completely wrapped in duct tape dick,\" Rick said with a shake of his head. Daisy could barely control herself, holding her hand over her mouth to keep herself from pulling a spit-take.\n\n\"That's... That's something else.\"\n\n\"But it was around that time that I decided that that kind of work was a bit too weird for me.\"\n\n\"So three days working the door was enough?\"\n\n\"Shit, the door was weird enough. I don't know if I was ready to even go inside. So that's what I was doing before I started at Eden... I was lucky to get anything, actually. They weren't terribly happy with my over at Kontrol.\"\n\n\"Quit after three days I wouldn't be terribly happy with you either,\" Daisy said, trying to look stern.\n\n\"Well what about you? Where were you before joining our august organization?\"\n\n\"Temping.\"\n\n\"Ugh.\"\n\n\"Exactly,\" Daisy agreed as she took another drink of beer. \"I did reception at a kitchen supply company, a doctor's office, office work at a brokerage firm... That was the worst. I think I got hit on there my than I do at Eden.\"\n\n\"Lovely.\"\n\n\"What're you gonna do?\" Daisy said with a shrug. \"But I got to talking with Sarah about it one day and she asks if I ever worked bar. I hadn't, but Stevie thought I looked the part, so...\"\n\n\"So here you are,\" Rick finished. Stevie ran Eden, and he had to remember to thank him for hiring her.\n\n\"So what's next?\"\n\n\"What do you mean?\"\n\n\"What's next, after Eden? You said you wanted to start your own company.\"\n\n\"Oh, right,\" Rick nodded, taking another bite of his burger. \"Well, there's a lot of money in freelance security work. I've got a couple of guys who would come with me if I started my own company, but it's better to have the accounts before I make any kind of move.\"\n\n\"Right. Tony, Marco?\"\n\n\"Yeah, them, some other guys I know.\"\n\n\"You're serious? You want to start your own business?\"\n\n\"Absolutely. That's why I'm trying to keep Paul happy with me. Slambros is a great account: big company with substantial, low intensity needs.\"\n\n\"Low intensity?\"\n\n\"They're concerned with overeager fans, not Mexican kidnappers.\"\n\n\"I gotcha. Lots of money without the chance you might get shot.\"\n\n\"Exactly.\" They sat in silence for a few moments, munching on their food.\n\n\"I didn't know there were places like this in Miami,\" Daisy said as she finished off her hamburger. Her fingers were covered in juices and sauce and Daisy didn't hesitate to suck her fingers clean. \"Fuck that's good.\"\n\n\"I know,\" Rick said, handing her a napkin. The Elbow Room wasn't much to look at, but they had good beer and a fantastic, cheap cheeseburger. \"I may work at Eden, but I'd never go there. Not my scene.\"\n\nDaisy shrugged. \"I do the club thing sometimes. For a hot girl it's more fun.\"\n\n\"Bet you haven't paid for a drink in years.\"\n\nDaisy waggled her eyebrows as she munched on a french fry. \"Mm, god this was good. I'm stuffed,\" Daisy said, placing her hands on her flat belly. She leaned her head on his shoulder, cuddling against him in the booth. \"This was really nice. Thanks for suggesting it.\"\n\n\"My pleasure babe,\" Rick said, finishing his own burger in one enormous bite, his cheeks bulging as he chewed.\n\n\"Gross,\" Daisy said with a laugh, finishing off her beer.\n\n\"Can't help it,\" Rick said once he finished chewing, \"it's too good. But want to go to a club? I'm sure with you on my arm we can get it in anywhere.\"\n\n\"Oh without a doubt,\" Daisy said with a grin. \"But I don't want to.\"\n\n\"No? I'll admit it: if it means I get to dance with you, I could put up with a club,\" Rick said with a grin.\n\n\"Nah.\"\n\n\"So what do you want to do?\"\n\n\"I wanna blow this joint and go back to your place,\" she said softly, biting her lip. She leaned close, gently pecking his lips. \"Please?\"\n\nNot five minutes later Rick was leading Daisy through his darkened apartment, walking slowly and cautiously so he wouldn't interrupt their deep kisses. He was slowed even further when his pants fell around his ankles and Daisy's hands gripped his cock firmly, but soon they were both naked and in his bed.\n\n\"Honey, mnh,\" Rick said between kisses, wrapping his arms around her as she settled atop him, his cock hot and hard against her, \"I... God.\"\n\n\"What?\" she asked, pressing against him, feeling his shaft spread her lips open. She rubbed along his length, hissing as his shaft dragged across her clit.\n\n\"Nothing. I just... I'm so glad you're here. You scared the hell out of me last night.\"\n\nDaisy smiled, sheepish. \"Well I promise not to flip out like that again. At least not without a good reason,\" she clarified with a laugh as Rick pulled her close, her laughter quieting as he kissed her. Daisy quickly slipped Rick's cock inside her, pressing down and gasping as she felt him filling her up. \"Oh my, mm, I'll never get tired of this baby, mm.\"\n\n\"God I hope not,\" Rick gasped, holding her tight as he sat up, cradling her against his lap as they began to thrust against each other. Their kisses were slow, frenzied, passionate. Their hips slowed as they seemed to forget about the amazing sensations from below as they were consumed by this kiss. Daisy's hands gripped at Rick's hair as she sucked at his lips, her tongue fighting against his as Rick's hands slid along her soft back. When they finally parted, they were panting.\n\n\"Wow.\"\n\n\"I know,\" Daisy said, biting her lip. Her hips slowly began to rock against him again, gasping as she felt him rubbing against her spot. Rick's hips began moving in an opposite rhythm, Daisy gasping as his shaft pierced her to the hilt again and again. \"God Rick, you're... Oh fuck...\"\n\n\"I know hon,\" Rick muttered into her neck. Daisy felt amazing as she moved on him, and Rick was worried he wasn't going to be able to hold back at all. As she ground against him, he could feel her juices beginning to drip over his balls and he hoped that she was as close as he felt. He quickly reclaimed her lips with his, kissing her as his hands went to her breasts, toying with her impossibly swollen nipples.\n\n\"Oh god baby, just like that,\" she gasped between kisses, her hip's pace increasing, her pussy flooding over his pounding cock.\n\n\"Daze, fuck, I can't...\"\n\n\"It's okay babe, I'm... I'm right there,\" Daisy gasped, her fingers digging into Rick's arms as she pounded against him. Rick filled his hands with her ass as he pushed her to the bed, pounding against her as she wrapped her legs around him.\n\n\"Daisy, I'm... Fuck, unh, oh fuck!\" Rick grunted, slipping deep into her as he came, his cock throbbing in her gripping pussy. Daisy gasped out as she felt his cum flooding her, her own orgasm shooting through her. The two lovers shuddered against each other as their pleasure seemed to build off of each other.\n\n\"Rick! Oh god, baby...\" Daisy cried out, squeezing him tight to her as she shivered beneath him. Rick held her tightly as they slowly wound down, collapsing against her. Daisy held him tightly, moaning slightly as he slipped out of her.\n\n\"I'm not crushing you am I?\"\n\n\"Nope. Stay right where you are,\" Daisy said quietly as she looked up at him with sated eyes.\n\n\"Sorry I-\"\n\n\"Stop it. That was great... Although you better not think we're done for the night baby. You know one good cum only gets me hungry for some more.\"\n\nRick laughed as he rolled over, pulling Daisy to his side. \"There's the Daisy I know and love,\" Rick said lightly, only to freeze when he realized what he had said. \"I uh, I mean-\"\n\n\"Shh,\" Daisy said softly, kissing his chest as she snuggled against him, a small smile on her lips. They lay like that in the quiet for a few minutes, Daisy's hand gently stroking along his broad chest. Rick held her closely, his own hand toying with her hair. \"We need to talk business.\"\n\n\"Hm?\"\n\n\"Our next scene.\"\n\n\"Oh. Are you sure?\"\n\n\"What do you mean?\"\n\n\"I just thought...\"\n\n\"Rick, I have to shoot at least one more scene with Slambros. Gotta. That's the agreement I signed. And for that, I need my costar.\" This last was said as she threw her leg over Rick's hip, rubbing his cock with her soft inner thigh.\n\n\"Alright. So what's next?\"\n\n\"Well I had an idea about that!\" she said. \"It's for Sport Fuckers.\"\n\nRick laughed aloud. \"What the hell is that?\"\n\n\"It's a new site they're starting! Sport Fuckers!\" She said the title as she pumped her arms, almost like a cheerleader. \"Sports themed scenes. And I had an idea for one, but... Can you use the uh, dojo for a few hours this week?\"\n\n\"What?\" Rick gave aikido lessons at a local training center, using the small dance/MMA training room they had. \"The studio? You want to shoot... Seriously?\"\n\n\"I talked to Sally, they'll put paper over the windows, film after closing, whatever you need..\"\n\n\"I dunno...\"\n\n\"It's the threesome,\" she said softly, her thigh rubbing along his cock again.\n\n\"Oh yeah?\" Rick asked, trying to be smooth. It came out more as a squeak, and Rick had to clear his throat. \"I mean, I just thought... You didn't want me shooting with other gir-\" Rick began, but Daisy stopped him with a finger on his lips.\n\n\"Two things: I thought you were going behind my back to fuck other girls. This is a threesome. I'll be there. We'll both be fucking her. We'll both be fucking you,\" she husked, her thigh still rubbing against him. \"And you two better both fuck me!\"\n\n\"Okay,\" Rick agreed. \"What's the other thing?\"\n\n\"I want... I trust you, Rick. I want to show you that I do.\"\n\n\"By sharing me?\" Rick slid a hand to her ass, sliding his hand till he could just tease her pussy with his fingertips. Her pussy was utterly soaked, Rick's cum still seeping from her. He used the moisture to toy with her pussy, slipping two thick fingers into her.",
        "\"Unh,\" Daisy grunted, her hand falling to Rick's cock, feeling him begin to swell. Daisy began to feel all over his shaft, her fingers stroking every inch before reaching low to cup and fondle his balls.\n\n\"So, uh, who is it?\"\n\n\"Who's who? Mm, rub my clit a li-unh,\" Daisy hissed. \"Have you got any lube? I... I want to play,\" she said with a grin. Rick smiled, reaching into a bedside box and producing a small bottle of KY. She quickly poured some into her palm, rubbed her hands together and returned to Rick's shaft.\n\n\"Oh, shit,\" Rick grunted as her hands proceeded to slide all over his shaft, her slick hands feeling spectacular as they explored him. \"But uh, who's in the scene? With us?\"\n\n\"You, me... And Marie Phoenix.\"\n\n\"Really?\" Rick asked, shocked. Rick liked porn as much as the next guy, at least before he suddenly found himself thrust in the middle of the business. But Rick knew Marie Phoenix. She was popular and on a bunch of different sites, and Rick liked her work. Blonde, tall, big tits, big ass. She was a deepthroating, pussy eating, ass fucking porn star. \"No shit.\"\n\n\"I knew you liked her,\" Daisy said, her hands still slipping and sliding all over his cock. \"I just felt you get harder. So here's the scene,\" she said, as she snuggled closer. \"You're the karate instructor, and Marie and I are your students.\"\n\n\"I don't teach karate, you know that. Aikido is a distinctly diff-\"\n\n\"Yes, yes, I know, fine. But you're our cute martial arts instructor.\"\n\n\"Okay.\"\n\n\"And there's an earlier scene in a locker room where we talk about how much we want to fuck you, how we've heard you have a big dick, blah blah blah. We'll have extras again! Other girls that want to fuck you and stuff. Just whatever girls are on set that day, we'll film the locker room parts earlier.\"\n\n\"You've given this some thought.\"\n\n\"I want writing credit of this thing,\" Daisy joked, biting her lip as Rick began to tease her clit with the heel of his hand as his fingers stroked deep in her. \"So, unh, so Marie and I are getting a private lesson with you. And, mm, and you'll get to show off some moves if you want. Flip us over, pin us... Actually, that can be kinda hot.\"\n\n\"Yeah,\" Rick said with a grin. \"Are you going to be in gis, or-\"\n\n\"In what?\" she asked, her hands still toying with his cock.\n\n\"A like, um, a martial arts outfit. Like what the Karate Kid wore.\"\n\n\"Ah.\"\n\n\"Or are you going to be wearing, like, hot aerobics outfits or something. Like in that Call on Me video.\"\n\n\"What video?\" Daisy laughed, her head falling back to his chest. \"You're on the internet too much hon.\"\n\n\"I'll show you on YouTube. Fucking tight, revealing aerobics outfits. Make your ass look amazing.\"\n\n\"Ah. Well, with the unh, gi, maybe like one of her tits can fall out or, unh, something,\" Daisy said, trying to cant her hips to open herself up further to Rick's stroking hands. \"But we team up on you and manage to take you down.\"\n\n\"And my cock pops out?\" Rick asked facetiously. One hand was at her front, rubbing and toying with her clit, while the other was reaching around her butt, thrusting deeply into her pussy.\n\n\"Exactly!\" Daisy agreed, her fists pumping solidly on his cock. \"And then we fuck you six ways till Sunday. Double blowjob, you eat our pussies, all sorts of oral teamwork, we take turns fucking you ever which way, you plow her asshole,\" Daisy said firmly, her hands squeezing Rick tightly. \"And then you pump your whole load all over our faces. Make sure you get some on my tongue so when I kiss her after we can make a big show of eating your load...\"\n\n\"Fuck baby...\" Rick grunted, his hips straining against her pumping hands.\n\n\"Mnh, Rick...\"\n\n\"What?\"\n\n\"Play... Play with my butt, please,\" Daisy said, hiding her face in his chest. Rick grinned, one cum-slick finger sliding from her pussy to tease her clenching anus. Daisy grunted sexily, hissing as Rick easily slipped the slick digit inside.\n\n\"That good?\" Rick asked, his other hand still filled with her pussy. Daisy nodded quickly, biting her lip as Rick's fingers continued to toy with her, alternatively filling her pussy and ass. \"Maybe you want to take Marie's place for that part of the scene...\"\n\nDaisy shook her head slightly. \"Nuh-uh. No way I'm having my ass cherry popped on camera.\"\n\n\"What?\" Rick asked, surprised, his hands stilling at her crotch.\n\n\"I've... I've never taken a cock in my ass,\" Daisy said softly, her hands slowing on his shaft. She knew that this conversation was getting to Rick, his cock pulsing in her hands, despite having cum powerfully a short while ago.\n\n\"Sorry, I-\"\n\n\"It's okay. Don't stop,\" Daisy said with a giggle, pressing back against his hands.\n\n\"I just thought...\" Rick began, but wasn't sure there was a nice way to say 'But you've been with so many guys.'\n\nDaisy shrugged a little. \"I dunno. I like it when someone plays with my butt, but...\" she paused, giggling, \"Butt but.\" Rick had to laugh too. \"But! But I just... I know it can really hurt with a guy who's not careful and... I guess I really haven't trusted anyone to uh, do it with,\" she finished quickly, uncharacteristically embarrassed.\n\n\"Easy babe, it's alright,\" Rick murmured, his fingers still stroking in her. He could tell that this conversation was turning her on: her pussy had become a flooded gripping furnace on his fingers, her breathing short and fast.\n\n\"You ever do that, baby?\" Daisy whispered, her hands moving harder on his cock. Rick couldn't respond, amazed at how turned on a simple hand job was getting him. But was anything simple the way Daisy did it? \n\nRick shook his head. \"Nuh-uh. I've never had a cock in my ass either. Ow!\" he laughed as Daisy bit his chest sharply.\n\n\"Jerk,\" she muttered, grinning despite herself. \"I'm serious.\"\n\n\"Well, yeah,\" Rick admitted, his hands returning to their delightful tasks. \"\"An old girlfriend was very... into that. I think she liked it more than, uh, the usual.\"\n\n\"The usual,\" Daisy teased. \"You mean she preferred it when you bent her over and forced your cock into her tight little asshole?\" she hissed, her hands gripping his slick cock as she stroked him powerfully. Rick gasped, pulling Daisy close as her hands pumped him firmly.\n\n\"Daze,\" Rick grunted, his slick hands groping her ass as her fists fucked his cock. The heel of his hand ground against her clit as he felt her pussy gripping him. He slipped a second finger to her ass, slowly easing it into her.\n\n\"Oh, unh, fuck honey,\" Daisy gasped, her hips stilling as she allowed him to stretch her ass with his fingers. She felt deliciously full and naughty, loving the look of absolute sexual fury she saw in Rick's eyes. \"You thinking about fucking that porn star's ass? I've seen her videos. You can pound her backdoor, make her scream... Maybe while she eats my pussy out?\"\n\n\"Daisy, fuck...\"\n\n\"Or maybe...\" Daisy whispered as she leaned close, \"maybe it's my ass you want to fuck?\" Rick grunted, turned on beyond the ability to respond. \"Is that it baby? You want to spread my cheeks and ease your cock into my ass? Feel me squeezing you as you pound into me, make me scream...\"\n\n\"God yes,\" Rick grunted, feeling her ass grip on his fingers. Daisy stilled against him, her hands slowing on his throbbing cock. She leaned close, kissing him just below his ear.\n\n\"Please be gentle,\" she whispered, pulling back and biting her bottom lip sexily. Rick looked at her, stunned beyond words for a long moment. Only Daisy could look so innocent while asking for something so naughty.\n\n\"Are you sure? You don't have to-\"\n\n\"I want to. I trust you.\" She kissed him deeply, melted against him, whimpered as his hands continued their torture of her butt. \"How do you want me?\"\n\n\"Lie down,\" Rick said as rolled her over till her butt was against his hips. Pulling one leg back, he was able to open her to his hands, which quickly returned to their tasks. Rick paused, quickly grabbing the lube and squeezing a bit more into his hands. One hand moved to her slick folds while the other returned to her butt, slowly slipping two fingers inside.\n\n\"Unh!\" Daisy gasped, tensing in his arms as his slick digits spread her ass open. She slowly relaxed against him, shivering as his hands pleasured her. His hand slid through her slick folds, sending shocks of pleasure up her spine. \"Rick, Jesus.\"\n\n\"You okay?\" Daisy nodded quickly, her eyes clenched shut. \"Hon? Deep breath. Relax baby.\" She sank against him, taking a long shaky breath.\n\n\"Sorry. Feels... Intense,\" Daisy said quietly, gasping as Rick's fingers moved to her clit. Rick pulled her lips to his, kissing her as he pulled her close. His slick fingers slipped from her ass to line his cock up with her puckered hole, smearing extra lubrication on his slick shaft. \"Mnh.\"\n\n\"Daze?\"\n\n\"Just go slow,\" Daisy said, her eyes locked with his. Rick held her tight as he pressed his broad cock head against her dark star. She shivered slightly, releasing a held breath in a sharp hiss as he pressed tightly against her. She could feel herself spread open around his fat cock. She moaned deeply as he slipped inside her, her ring closing tight around his crown. \"Oh! Oh oh oh, honey oh my god.\"\n\n\"Oh fuck Daze,\" Rick gasped, his hips stilling. Daisy felt intensely hot and tight on him and Rick had to resist the urge to press any deeper. Rick had never been more turned on in his life, but he wanted to make sure that Daisy enjoyed this as much as he did. \"Are you okay?\"\n\nDaisy nodded slowly, her hand at Rick's hip. Breathing slowly, Daisy pulled at him, and Rick slowly pressed against her. He gained a bare inch before Daisy's hand gripped him again, breathing steadily as she focused on relaxing. They repeated this again and again, pausing at one point to add a bit more lube as Rick gently began to thrust into her.\n\n\"Oh holy fuck,\" Daisy grunted as Rick's hips pressed against her firm ass, amazed that she'd taken all of him. She felt stuffed full, convinced that Rick's fat cockhead was lodged somewhere in her lungs. There was pain, but it was swamped by such an intense feeling of fullness and pleasure, like Rick was pressing against some secret button deep inside her.\n\n\"You okay baby?\"\n\n\"Shut up Rick,\" Daisy hissed, moving her hips experimentally, rotating them and feeling his thick cock spreading her open delightfully. Her hips slowly developed a stroke of their own, fucking back against Rick's hips as he groaned. \"Fuck baby.\"\n\n\"What?\"\n\n\"This feels fucking incredible,\" Daisy grunted, her voice showing a fair amount of surprise. She looked back at him, her grin returning. Rick grunted as she began to thrust back against him, her tight ass moving up and down his shaft.\n\n\"Daisy, Christ. You feel so fucking hot,\" Rick said, his voice gravelly. He pulled her close, one hand going to her breasts the other returned to her soaked pussy. Daisy gasped as his slick fingers slid along her lips, her thighs gripping his hand tightly. \"You're soaked.\"\n\n\"Baby I feel like I've been just-about-to-cum since you, unh, hit bottom,\" Daisy said with a grin. \"F-fuck, fuck me faster.\"\n\n\"You sure?\" Daisy nodded, her eyes drifting shut as Rick obeyed, his hips smacking against her ass faster. Her thighs gripped his hand harder, her whole body tensing as her orgasm rushed on her.\n\n\"Oh fuck baby. Just like that, just like that... I can't believe you're fucking my ass baby, Christ.\"\n\n\"I'm having trouble believing it too,\" Rick said with a laugh. Daisy felt incredible, her ass gripping him like a vice as he thrust into her. Daisy's moans were turning harsh, her hands gripping the sheets frantically.\n\n\"Rick, fuck, I'm cumming... I'm cumming with your cock in my ass, holy shit...\" she grunted, her whole body shivering as her orgasm crashed over her. Rick grunted as she thrashed against him, his thrusts stopping as her ass squeezed him nearly to the point of pain. She was panting, rapid short gasps as her whole body throbbed with pleasure. \"F-fuck me, keep fucking me please!\"\n\nRick obeyed, rolling till she was underneath him and he was pounding against her bottom. She cried out with each deep thrust, gasping desperately for breath. As Rick rose up above her, she slipped a hand underneath her to rub franticly at her clit as Rick hips ground against her. Lights flashed behind her clenched eyes as she cried out repeatedly, her orgasm just rolling over her again and again.\n\nRick pulled Daisy tight to him as she came. Feeling her pulse on his cock was just too much and he exploded with a strangled grunt. Daisy sighed sharply as she felt him throbbing in her. Rick slumped against her in slow motion, his hips still moving as if of their own accord.\n\n\"Oh Christ honey,\" Rick grunted. Daisy was still shivering beneath him, moaning absently as she pulled her hand out from under her, shining in her juices. Rick slowly moved to lie beside her, Daisy grunting as his wilted cock slid from her. \"You alright Daze?\"\n\n\"Yeah, yeah I'm okay... My ass is throbbing and I can't feel my toes, but I'm okay,\" she giggled, still lying on her belly. \"That was incredible baby, fucking hell. Did I do okay for my first time?\"\n\n\"When I remember how to think, I'll let you know.\"\n\nDaisy rose to her hands and knees, stretching gracefully before getting off the bed and padding to the bathroom.\n\n\"Give me a few minutes alone, then come take a shower with me. You need it too, trust me.\" Rick nodded as he watched her butt sway back and forth until the door closed. Rick managed to get out of the bed and gather up their clothes from the front room and hallway. He heard the toilet flush and the shower turn on and had a great idea. A quick trip to the kitchen and he put two frozen cookie dough balls into the oven and set the timer.\n\nThe second Rick stepped into his shower a hot, wet, naked Daisy was all over him. Rick was slammed against the tile wall as she kissed him with everything she had. As he tried to hold her tight, his hands slid all over her soapy skin, her nipples drilling into his chest. Her thighs wrapped around his, her pussy sliding against his muscular leg.\n\n\"Daisy, you can't possibly-\"\n\n\"I'm still tingling,\" she murmured between kisses. Daisy was positively kittenish, constantly kissing, stroking, squeezing. Rick had never seen her quite like this, but was enjoying the hell out of it. Daisy slowly washed him, taking special care to make sure that his cock was completely clean. Rick enjoyed the attention, but he had nothing left for her.\n\n\"I'm sorry babe, maybe-\"\n\n\"Hush. I'm just feeling very lovey right now. And I want this cock nice and clean so I can suck you off in the morning.\"\n\n\"Daisy, are you trying to kill me?\" Rick laughed, rinsing off and getting out of the shower. \"I'll meet you back in bed. It's still early, want to watch an episode of Firefly?\" Rick had been trying, without success, to get her to watch Battlestar Galactica. Firefly had been an easier sell, and she seemed to be enjoying it.\n\n\"That sounds nice,\" she murmured, a big grin still on her face.\n\nRick threw on some sweats and went to his DVD collection and grabbed the boxed set to go back to the bedroom. Setting it on the counter in the kitchen he opened the oven door just as the timer went off. He grabbed the baked cookies, put each one in a mug and put a scoop of vanilla ice cream on top of each. Daisy emerged wearing a towel wrapped around her head and nothing else, and saw him drizzling chocolate syrup over each mug.\n\n\"Are you making me a sundae?\" she asked as she slid up next to him. \"With fresh baked cookies?\"\n\n\"I call them hot cookie sundaes. I thought you'd like one.\"\n\n\"No one's ever made me a sundae before,\" Daisy said quietly, looking into the mug as he handed it to her. She looked up at him, a silly grin on her face as she took his hand, her fingers interlocking with his. \"Thanks. C'mon back to bed.\"\n\nAs she gently pulled him to the bedroom, Rick realized he felt closer to her right now, just holding her hand, than he had at any point during their frenzied sex marathon. \n\n\"My pleasure Daze.\"\n\n*\n\nPlease remember to take a moment to vote or let me know what you think."
    ],
    "authorname": "svenjolly",
    "tags": [
        "anal sex",
        "porn star"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/pushover-ch-05"
}