{
    "title": "When Worlds Collide Ch. 13",
    "pages": [
        "The house filled up with wounded Weres and others who had stayed around to assist. Luke and his two assistants were doing the best they could with what medical resources they had brought from the medical building. He was annoyed that he wasn't able to bring the injured back there but understood his Alpha's decision. It made more sense to have everyone in the one building just in case any attackers got through.\n\nHe moved swiftly to Loretta's side, pulling back the throw placed over her as she lay sleeping. He frowned slightly as he watched the bruising to her body start to fade before his eyes. Weres healed faster than humans but the speed of her recovery wasn't normal. He lowered the throw and moved away. At least she was healing, however unusually it was happening. He would ask her if anything out of the ordinary took place outside when she woke up.\n\nLacey was proving to be a great asset. She spent a moment with each Were, talking quietly with them, holding their hands and smiling soothingly. Luke noticed a renewed strength in each Were she left, as if they were determined to heal faster because of her words. Rafe was a very lucky man in finding his mate in the beautiful blonde woman.\n\nHis eyes fell on Ashleigh and he frowned slowly. The young girl was sitting in a corner in the hallway, her legs drawn up to her chest with her arms wrapped tightly around them in a purely defensive position. She wasn't injured physically but one look at her blank expression was enough to show that she was badly wounded mentally. Lacey had tried talking to her but received no response.\n\nHow did one so young deal with coming across the bodies of her parents and her siblings? Her entire family had been cut down in a hail of bullets when the humans attacked. The extent of their injuries had been too severe to allow them to heal. She was barely ninteen years old and now an orphan. The pack would look after her but it would be a long time before she recovered from this. He was worried she might even go rogue, her grief cut so deep.\n\nNors tried to ignore the increasing number of dogs in the room but it was hard when they were all talking, or groaning in pain. The incessant noise was irritating him greatly as his eyes swept over the compound from his stance at the window. He felt a dog approach and stiffened.\n\n\"You were the one who brought Ashleigh in?\" Luke asked the vampire quietly.\n\nNors turned his head frowning slightly. \"Who?\" he asked, his tone distracted as his eyes swept over the sitting room quickly, checking his three charges were in the room and safe.\n\n\"The young girl who warned of the attack against the evacuation site,\" Luke answered patiently, his eyes intent on the large vampire.\n\nNors nodded, a vision of a little pixie face staring up at him in fear, a cap of soft blonde hair framing her young face. The girl had told Caleb her name was Ashleigh. \"What of it?\" he growled turning back to the window.\n\n\"I'm afraid she's going to go rogue, vampire. None of us can get through to her. I thought maybe you could try. You saved her once by bringing her home to us. Maybe she will see you as a protector and respond to you when she won't to any of us.\"\n\nNors stiffened, growling low in his chest. \"I handed her off to you in one piece,\" he hissed. \"You allowed her to come to harm?\" Caleb had told him to protect the little bitch. He had done so to the best of his ability. That her own people had allowed her to come to harm oddly infuriated him.\n\n\"Graves hurt her, vampire. Not us,\" Luke snapped defensively. \"She's lost her entire family, the family she came back to be with, the reason she was here in the first place to warn us of the attack on the evacuation site.\"\n\nNors turned slowly, his expression completely blank as his eyes searched the room and then travelled further into the hallway, finally alighting on the little blonde girl in the corner. He sucked in a deep breath. \"Have someone watch this window and call me if they see anything,\" he bit out, striding across the room toward the girl.\n\nHe towered over her tiny figure, his fury escalating as she stared blankly ahead, not registering his presence. He didn't know what turned a Were rogue but he assumed it was some form of madness. The girl before him was sinking fast within herself and it angered him that one so fragile should feel such a wealth of loss and pain.\n\nGrowling he sat down beside her, close but not touching her. He mimicked her position resting his back against the wall. \"Now I know why my kind prefer to kill,\" he said quietly. \"It's so much easier than protecting others. We do not like to fail so we choose not to place ourselves in positions where the possibility exists. I did not want to protect you, little bitch. I did so because Caleb asked it of me. I handed you off to the first dog I could find because I wanted to be back in the fight. You were an irritation to me. Because I allowed you to be an irritation I have failed you and I am sorry.\"\n\nShe didn't speak but he thought he detected a slight stirring inside her. He contemplated trying to slip inside her mind but decided he didn't want to go there just yet. He would try with words first before he opened himself up to her mental anguish.\n\n\"Your family must have been very brave,\" he said softly. \"How could they not be when they sired such a strong, brave daughter and sister who risked her life to walk among vampires so she could protect her pack? I am sure they would have been very proud of you, little bitch. I am sure they would not want you to lose the will to live because they no longer walk beside you.\"\n\nHe heard a tortured breath whistle out of her mouth, a muffled strangled sob being choked down as her head dropped forward to rest on her knees but still she did not speak.\n\n\"I don't know much about pack life, Ashleigh,\" he murmured quietly. \"I know your people are worried about you, that they care for you very much. So much, they ask a cantankerous old vampire to come and speak with you, to try and help you. You may feel you are alone but you are not. Your pack is all around you, reaching out to be your strength when you need it most. Let them in, brave little wolf. Let them help you heal.\"\n\nAshleigh started to weep softly, the first tears she had cried since she had found her family dead. She turned, throwing her arms around the big vampire, burying her face against his chest as he shifted to accommodate her sudden movement. He seemed stunned for a moment before his large arms wrapped around her shaking body and he pulled her gently onto his lap.\n\nHe held her silently as she wept, half of him wondering how the hell he'd managed to get himself into this position and the other half of him wanting to comfort the weeping girl, to tell her it was going to be okay even though he had no idea if she would ever recover from her loss. He felt oddly protective of the little thing, angry with himself that he had failed to look after her earlier. Maybe if he had been around she wouldn't have lost herself when she discovered her family dead.\n\n\"Do you really think they were brave, Nors?\" she suddenly asked brokenly through muffled sobs.\n\n\"I am of sure of it,\" he sighed stroking her hair gently. \"They stood with their pack, willing to die for the good of your people. They gave their lives to protect the pack as would you if it was called for. There can be nothing braver than to be willing to lay down your life for those you love.\"\n\n\"I'm going to miss them so much,\" she whispered tearfully. \"I know I have the pack but it's not the same as having my family, Nors. I will always be alone now.\"\n\nHer tearful words touched a place deep inside the vampire that he had forgotten even existed anymore. His heart wrenched at her pain and he tightened his grip around her, holding her more securely. \"You will only be alone if you allow yourself to be, Ashleigh. Grieve for your family but allow your pack to help you. I will make a deal with you. Promise me you will try your hardest to do so and we will meet again, one year from now. If you still feel alone then I will adopt you into my family.\" The words came out before he even knew what he was saying and he stifled down a deep groan as he finished speaking.\n\nAshleigh raised her head, her eyes red with crying, her cheeks soaking wet and her lips trembling. \"Really?\" she whispered tremulously. \"Do you really mean that, Nors?\"\n\nHe stared into her hopeful brown eyes and stifled down another deep groan wiping at her wet cheeks in an almost unconscious gesture. He let his breath hiss out in a loud sigh. \"Yes, I mean it,\" he said in a resigned tone. \"I am sure it will not be required though. A lot can change in a year, little wolf. Your pain will ease in that time and your pack will rally around you. But I will keep my word to you. If you still feel the same despite trying your very hardest, then you will have a place in my home. Are we agreed?\"\n\nThe little blonde nodded slowly, more tears flowing as she leaned forward and grazed her lips against his cheek. \"Thank you,\" she whispered softly.\n\nNors sighed again, gently dislodging her from his arms, standing and setting her down on her feet. He could see Luke and Lacey hovering close to them, their expressions stunned. They must have heard what he had said.\n\n\"Go now, Ashleigh,\" he said firmly, pushing her gently towards Lacey, sighing with relief when she ran into the other woman's arms and began to weep loudly. Tears were healing. Now she was finally releasing them the danger point was past.\n\nLuke gave him a deep scowl and shook his head. \"That's some promise you just made, vampire,\" he said coolly. \"I wanted you to try and reach her, not promise to let her join your family. The Alpha will not be happy when he hears about this.\"\n\nA burst of cold hard rage enveloped Nors and he hissed loudly. \"I gave her what she needed, dog. Sometime to hold onto, an end goal to reach for so she can survive her pain. I don't give a fuck if you or your Alpha don't like it. At the end of the year, if she wants to come to me then she can. And no one better stand in her way.\" \n\nHe turned and stomped into the sitting room, growling at the Were beside the window until the man wisely moved out of the way. He spotted Caleb's youngling smiling as she watched him and rounded on her, glaring furiously. \"What's so fucking funny?\" he hissed.\n\n\"Nothing,\" Rhianna smiled, her lavender eyes twinkling with amusement. \"You're a very nice man, Nors. I think I like you a lot.\" She turned and went back to Mara's side leaving him boring a hole in her back with his steely gaze.\n\nNors had no idea what the youngling was so pleased about and why she thought he gave a fuck about getting her approval. Maybe she was mentally deranged or something? Maybe it had something to do with being around two of the oldest of his kind? Whatever it was he didn't need her approval or anyone else's. He growled again and turned to peer out of the window, silently watching Lacey comfort the little blonde in the reflection.\n\n______\n\nRafe caught up with Demetri in the clearing where he had sat with Rhianna the day before. The vampire was standing as still as a statue, facing another vampire with short dark hair. Graves! Rafe howled loudly, fury washing over him as he came face to face with the man who had abused his mate for two long years.\n\nGraves turned his cold gaze to the wolf and snorted in derision. \"Really, Demetri? You need to bring your little doggie to help take me down?\" His voice was loaded with contempt as he dismissed the wolf immediately and turned back to his former friend. He was perturbed to see him in his most feral state. It could only mean one thing. Sandro had failed and Demetri knew he had rescinded his earlier edict to leave his loved ones alone. Still he was confident he could take the other vampire.\n\n\"Payback's a bitch, Graves,\" Demetri laughed softly. \"You really should have paid more attention to the Weres. They're pretty formidable when riled and you've really riled my friend here. Lacey is his mate.\" \n\nGraves snorted again and waved a dismissive hand. \"As if I give a fuck,\" he drawled softly. \"I'll rip his fucking heart out and then I'll find his 'mate'. I'll make her beg for death before I finally end her miserable life.\"\n\nRafe howled and started forward but Demetri blocked his path easily. \"He's trying to rile you, Rafe. He wants you to attack him. Hold for now.\"\n\nRafe snarled furiously, his huge body trembling with his rage as he tried to get his wolf under control, tried to listen to the wisdom in the vampire's words but he so wanted to sink his teeth into Graves it was an impossible task. He sprang and Demetri's arm shot out, catching him around the side of the head and spinning him backwards into a tree.\n\n\"I said HOLD!\" Demetri roared loudly as the wolf whined in pain as he connected with the tree and Graves began to laugh loudly.\n\n\"I see your skills at leashing your little doggie are just as bad as leashing your whore, Demetri. Oops, I meant to say wife. How is the delightful Mara these days?\"\n\nDemetri growled loudly, looking back at Rafe to see he hadn't caused too much damage. The wolf looked slightly dazed but none the worse for wear. He turned back to Graves and hissed, his talons clicking against each other as he held his position. \"She is healing,\" he said in a dangerously quiet voice. \"She will live which is more than I can say for you.\"\n\n\"That's a pity,\" Graves said letting out a disappointed sigh. \"I would have preferred to hear that she died a slow, painful death. That I'd cut your balls off in a way no other has ever been able to manage before.\"\n\n\"I'd love to say I was sorry to disappoint you but I'm not really,\" Demetri laughed as Rafe once more came to his side. He looked down at the wolf who glared at him balefully. \"You understand the meaning of the word Hold, now?\" he asked with a hint of sarcasm in his voice. \"You will get your chance, brother, but me first.\"\n\nGraves frowned as he watched them interact, the word brother stunning him. \"You're claiming a dog as kin?\" he snorted in disgust.\n\nDemetri shrugged his shoulders and Rafe growled quietly at his side. \"I guess I am,\" he sighed softly. \"You are Annie's brother, Rafe. If I claim her as my sister then I have to claim you as my brother, as distasteful as I find that notion. But if you tell anyone I did so I'll rip your bloody heart out and to hell with the consequences.\"\n\nHis gaze turned once more to Graves as his talons clicked together. He smiled. \"The time for talking is over. You know why I am here and you know why you are about to die. Your army is defeated, your attack on the evacuation site failed. You have nothing left, Rich. No one's coming to help rescue you. The only thing you can look forward to is the sound of your screams as I make you pay for every second of pain you caused my Mara.\"\n\nGraves felt the first frisson of fear go through his body. If what Demetri said was true, and he had no reason to believe that he was lying to him, then things were most definitely not going his way. There was nothing for it, he would have to stand and fight. Running wasn't an option where his former friend was concerned. He had played his hand and lost. Now he only had his life left to gamble with. He hissed, transforming into his most feral state, and launching himself at Demetri.\n\nRafe moved to the side when the two vampires crashed together. His head was still ringing from the smack Demetri had given him. He was furious at the dark haired vampire but understood why he had done what he did. It was the only thing to get Wolfie back under control. Demetri knew Graves, how he thought, what his intentions were. Mindless rage was not a weapon that worked against the other ancient. Cool, calm thinking was required. He could only imagine how difficult it must have been for Demetri not to respond to Graves' taunting about Mara but he had managed to keep his head.\n\nRafe prowled around the two ancients, waiting for his moment, trusting Demetri when he said he would get his chance at Graves. He'd never heard the vampire ever lie before. He had no reason to think he would do so now. \n\nThe vampires crashed into a tree so hard the large oak snapped cleanly in half, their momentum sending them both crashing to the forest floor. Graves landed on top, his talons trying to find purchase in Demetri's throat. Rafe sprang, his teeth ripping into the back of Graves' neck even as Demetri threw the vampire away from him.\n\nRafe howled in surprise as he went tumbling backwards, flesh and blood in his mouth as he rolled over and came back to his feet less than three feet from Graves. The vampire moved so quickly, his talons catching Rafe in his front paw and ripping downwards. Rafe howled as the pain crash through him, his paw ripped clean through to the bone.\n\nDemetri was on top of Graves before he could do any more damage, slamming his hand into the man's lower back and ripping his talons upwards. He held Graves by the hair with one hand, lifting him bodily with the hand inside his body. Black eyes pierced the injured wolf with a baleful glare. \"One day you might fucking listen to me, Rafe.\"\n\nRafe silently agreed with Demetri as he limped away, his left leg in complete agony. His euphoria at tasting Graves' blood paled into insignificance compared to the pain in his leg.\n\n\"I'm done playing with you, Rich,\" Demetri said softly pulling his hand from the other vampire's body. He gripped Graves' left arm and pulled it effortlessly from his body as the other man screamed in agony. \"For Lacey,\" Demetri chanted, changing his grip on the shrieking vampire and ripping his right arm cleanly from his body. \n\n\"For Annie,\" Demetri crooned softly dropping his former friend to the forest floor and kicking him until he was lying on his back. He leaned over the fallen man, both hands coming to his chest, ten lethal talons sinking in deeply and raking down mercilessly to his groin. \n\n\"For my Mara,\" Demetri hissed furiously. \"I warned you not to fuck with me, Rich. I gave you ample opportunity to avoid this but you just wouldn't listen. You had to hurt my woman. You had to think you were better than me, stronger, faster, more lethal. But you were so very wrong.\"\n\nHe straightened, moving over to Rafe, crouching down to look at his injury which was pretty severe. \"You're not going to like this,\" he sighed before he pressed his bloody hands into the wolf's leg and smeared Graves blood over the wound.\n\nRafe's loud howl of agony changed to a muffled roar as he lost control of his wolf and shifted to human form. \"What the fuck are you doing?\" he ground out, tears of agony in his eyes.\n\n\"Poetic justice, brother,\" Demetri laughed softly, his eyes reverting back to his normal colour as he once more embraced his humanity. \"Graves' blood will heal you enough that you can do what needs to be done. You don't have a lot of time. Even with no arms he will be lethal once his chest wounds heal. You have about fifteen minutes to exact your vengeance.\"\n\nRafe felt revulsion that Graves blood was being used to heal his wound. And yet, there was a certain irony to it as Demetri had pointed out. The other vampire's blood would heal Rafe enough that he could kill him before his own vampiric healing abilities kicked in. He smiled slowly as he looked up at Demetri and felt the connection of kin with the dark haired vampire. \"You really are one sick bastard, Demetri,\" he laughed softly.\n\n\"When it's called for,\" his new brother laughed removing his hands from his leg. \"Fourteen minutes,\" he counted down.\n\nRafe shifted, rolling to his feet, stalking over to the hissing vampire lying in agony on the forest floor. Fourteen minutes to kill him. He could do a lot in fourteen minutes, cause such pain and agony that Graves would scream louder than Lacey ever had, louder than Mara, louder than his Annie. The red mist of rage consumed him as he stood over Graves, teeth bared, saliva literally dripping from them as he sought to find the place he wanted to start to his destruction.",
        "Lacey's face suddenly clouded his mind, his beautiful mate smiling lovingly at him. He halted, staring down at Graves, seeing nothing but contempt in the vampire's eyes even though he knew he was going to die. He could feel Lacey through their bond, it was muted because of the distance between them but she was anxious. Probably anxious about him. Her smiling face came to mind again and the red mist started to clear slightly.\n\nGraves was a sadistic killer, an abusive prick who delighted in others pain. But he couldn't break his Lacey. No matter what Graves had done to her, she was still able to love, still willing to join with him despite his weaknesses and poor judgement. She saw something in Rafe that was worth loving, something good and pure and gentle. He could never be like Graves. He could never take satisfaction from torturing another living being, no matter how much they deserved it.\n\nRafe wrapped his large jaws around Graves' neck and bit deep.\n\nDemetri leaned against the tree, watching Graves' head roll from his body, finally relaxing now the other ancient was dead. He had wondered if Rafe would give into the mad rage inside of him. He nodded his head in approval when the big man shifted back to human form turning his back on the Graves without a second thought. He saw peace in Rafe's eyes. Justice had been served and he had retained his very essence at the end.\n\n\"Admirable,\" Demetri smiled, moving away from the tree and meeting Rafe half way.\n\n\"I wanted to rip him to shreds,\" the big man admitted. \"But I would just have become as bad as him if I had.\"\n\n\"Just as well you're a bloody dog,\" Demetri laughed loudly. \"You'd have made a crap vampire, Rafe.\" His eyes twinkled with amusement as he turned to head out of the clearing. \"How's your head?\"\n\n\"Sore,\" the big man growled softly as he followed him from the clearing. \"Did you have to hit me so hard?\"\n\nThe vampire laughed loudly again. \"Probably not, but it felt good at the time.\"\n\nRafe snorted in annoyance, rolling his eyes as he glared at Demetri's back. The bloody man was a complete pain in the ass and he was calling himself his brother? What the fuck had he done to deserve family like Demetri Bozic? \n\nHe grinned suddenly. \"So about this whole brother thing, Demetri. Does that mean I get to come hang out at your house like I do Caleb and Annie's?\" He roared with laughter when the vampire growled loudly. \n\n\"Don't even think about it, dog!\"\n\n_____\n\nThe scent of blood was thick in the air as Caleb paused to watch the pack take down another vampire. They did it cleanly, concisely and with no injuries. Someone had told them how to kill vampires cleanly. That was what Jared had been hiding from him. He looked around; saw his people watching with undisguised hostility on their faces.\n\nHe signalled them, ordering them silently to move back. The last of Graves' vampires were backed against a wide stream. They could have jumped it and fled but they stood facing the snarling wolves, making a last stand. The pack deserved this final moment. Caleb turned to see Andrei's furious face glaring at the wolves before he turned his black eyes to him.\n\n\"Did you do this?\" he hissed, talons flexing as if he wanted to rip into Caleb's throat. \"The Council will have your head for this if you did, Cullen.\"\n\n\"I told them nothing, Romanov,\" he growled back, taking a defensive stance in case the other man did attack. \"I don't know how they discovered this but I'm not sorry that they did. If I hadn't been able to drum up enough support to defend the pack I would have told them myself.\"\n\nAndrei hissed, recoiling backwards. \"You would betray our people to a pack of dogs?\" He hadn't really believed that Caleb had told the pack how to defend against their kind. The words had just come out because of his shock, but to hear him admit that he would have done so if the need had arisen left him completely stunned.\n\n\"I would have protected my family at all costs, Andrei,\" Caleb answered quietly. \"What would you be willing to do to protect Alexei? Would you allow him to die when there was a way you could save him?\"\n\nAndrei growled spinning around and stalking off, Caleb following him, gesturing for his people to leave the Weres alone.\n\n\"This is bad, Caleb,\" Andrei growled. \"The Council may take punitive action. What if they call for a total eradication of the pack so they can't impart this knowledge to other packs?\"\n\nCaleb grabbed his arm, spinning him around and getting right in his face. He hissed loudly. \"Then you had better make sure that doesn't happen, Andrei, else you will find yourself with a civil war on your hands. I know the Council doesn't want that, do they?\"\n\nAndrei stiffened, his eyes widening as he stared at Caleb's cold, hard face, seeing knowledge there that he thought no one else knew. \"You know,\" he whispered in surprise.\n\n\"I know a great many things, Andrei,\" Caleb said silkily, his grip tightening on his arm. \"I know you are joining the Council and will have the power to make sure there is no fall out from this little incident. I know you healed Loretta too, breaking another of our kind's strictest taboos. Don't paint yourself to be lily white in this, elder. You have done our kind damage this night just as much as the person who told the Weres how to kill us. So stick your sanctimonious bullshit up your ass and figure a way out of this mess for all of us, or so help me, I will bring the Council down if I have to draw my last breath doing so.\"\n\nAndrei stumbled backwards, fear suddenly clouding his eyes as he stared at Caleb mutely. He meant what he said. He would start a civil war to protect what was his, to protect the pack. All this time he had thought Demetri was the more dangerous of the two ancients when really it was Caleb who was the one they should have been watching.\n\n\"Fuck, Caleb!\" he groaned rubbing at his arm as he shook his head wearily. \"There are limits to even what I can achieve. How the fuck do you expect me to fix this? I'm not even on the Council yet. It's not due to rotate for another year.\"\n\n\"Then you have a year to keep the current Council debating on what they should do,\" Caleb countered with a soft growl. \"I know you influence the current Council, Andrei. I know you have some way of hiding your deception from Jorge and Philippe. An interesting mental skill to have, one I wouldn't mind learning myself.\"\n\nThe other vampire paled even further, his eyes widening more as he took another step back. \"How?\" he whispered hoarsely, his fear ratcheting up a notch as he stared at Caleb as if he'd never seen him before.\n\nCaleb smiled, his amber eyes flashing with amusement as he released his vampire, exulting as his more human side reclaimed dominance of his body. \"Well, I'm hardly going to tell you that, am I?\" he said quietly. \"Just know that your 'secrets' are not really very secret, Andrei. And I make a very bad enemy to have. Your relationship with Demetri will not save you if you fuck with me and my family. I can't make it any plainer than that.\"\n\nAndrei swallowed hard, giving himself a mental shake as he tried to wrap his head around the sudden shifting of his perspective of Caleb Cullen. He took a deep breath and let it out slowly. \"I'll do what I can,\" he sighed. \"Not because you threatened me though. I have my own reasons for not wanting to see this pack destroyed. You may know my secrets, Caleb, but I won't be your puppet on the Council. If I agree with any request you have then fine, but I will not be used by you or anyone else.\"\n\nCaleb smiled again, a genuine smile this time. \"I have no wish to be embroiled in the Council's politics. My only concern is this pack's safety. Ensure that. It is the only thing I ask of you.\"\n\nThe two vampires stared silently at each other for a long moment and then Andrei nodded. The sounds of the last few vampires dying suddenly fell silent and they both looked back to see the pack running towards them.\n\n\"I see this matter is now concluded,\" Andrei said quietly. \"Instructions?\"\n\nCaleb watched Jared intently as he approached, seeing savage satisfaction in the Alpha's blue eyes. \"Round up the dead vampires. Burn the bodies, every last piece. Get the others to help you,\" Caleb told the vampire as Jared shifted before him, his expression hard, his posture defensive.\n\nCaleb waited for Andrei to leave before he sighed softly. \"Did you have fun?\" he asked lightly, seeing a flicker of surprise in Jared's eyes.\n\n\"I expected you to read me the riot act,\" the Alpha said truthfully relaxing his stance slightly.\n\n\"For protecting your pack?\" Caleb smiled softly. \"I would have told you how to if I had thought it necessary. I didn't anticipate things would go the way they did otherwise you would have known this information sooner. You had the right of it. Despite our best intentions you have lost of lot of people today, Jared.\"\n\nJared's eyes clouded in grief as he turned to walk towards his house and the dead bodies surrounding it, human and Were alike. \"What does this mean for us, Caleb? I am still angry with you for not telling me of the impending attack on Millie and the children. You should have told me. I deserved to know.\"\n\n\"I know, my friend,\" Caleb sighed softly. \"It was a judgement call, possibly an erroneous one but it seemed right at the time. You know you couldn't have done anything to help them. You asked for my help, Jared. I gave it as best as I knew how to.\" He could understand his friend's anger even though he would do the same thing again if the circumstances presented themselves.\n\n\"You're right. I did ask for your help. Now I complain because you saved my mate and the vulnerable members of our pack. It seems ungracious of me.\" Jared sighed and ran a weary hand through his hair as they approached the house. Now the fighting was done he looked down at his pack members, his eyes filling with tears.\n\n\"Poor Bill,\" he whispered softly. \"He was so frightened, so concerned for the pack and I threatened to banish him. He pleaded with me to reconsider my edict, Caleb. Now he's dead.\" His eyes roamed over more bodies, a tortured groan coming from his throat. \"Pete. Mike. Rafe is going to be beside himself with grief over this. We lost Ben in the house too. Those three were almost as pathological as Aaron for being at Rafe's side. Three Betas lost and God knows how many others. How the fuck do we recover from this?\"\n\nCaleb remained silent as Jared walked through the bodies, whispering the name of each and every fallen Were, man and woman, tears running unashamedly down his face. He couldn't ease his friend's grief but he could stand at his side as he said goodbye to people he had lived with for centuries.\n\nFinally Jared's straightened and squared his shoulders, taking a deep breath. \"Can I ask two favours of you, Caleb?\" he asked quietly.\n\n\"Whatever you need, Jared.\"\n\n\"Can your people remove the humans? I don't care what you do with them just get them the hell off my property so we can start to take care of our dead without having to wade through that offal.\" Jared's tone was cold, hard as he buried his grief deep inside him, pulling on the mantle of Alpha.\n\n\"And the other?\" Caleb asked as he crooked a finger at a hovering vampire who was not involved in clearing up the vampire bodies. The dark haired man ran forward and listened for a second as Caleb quickly imparted orders before he turned and blurred into the trees.\n\n\"The other, Jared?\" Caleb asked again when the Alpha didn't speak.\n\n\"Bring Millie home to me,\" he whispered quietly. \"Bring the pack home. Your people will get there quicker. The vehicles are on site. I need my pack safely home, Caleb, but I want them with a full protective escort.\"\n\n\"I'll get right on it,\" Caleb said quietly reaching out to place a hand on the Alpha's shoulder. \"You do know how sorry I am, Jared? I wish it hadn't been so costly for you.\"\n\nThe Alpha nodded mutely taking another deep breath and standing straight. \"Now for the living,\" he sighed stepping up the steps into the house, Caleb following him.\n\n\"Nors,\" Caleb called. He waited for the big red haired vampire to reach him in the doorway. \"Take Andrei and two others. Run over to the evacuation site and have Alexei help you escort the pack back here. Ask for Millie. Tell her Jared needs her but don't frighten her. Let her know he's fine, that the fighting is over and the Alpha needs his mate.\"\n\nNors' eyes flickered to the side, catching a glimpse of Ashleigh as she lay sleeping on the floor, her head resting on Lacey's lap, before he nodded and hurried from the house.\n\nJared was checking on the wounded, letting Luke know that the more serious ones could be moved now to the medical building if it was prudent to do so. The dead would have to wait until the living could be taken care of.\n\nCaleb walked into the sitting room, stopping beside Mara who smiled up at him. \"How are you doing, sweetie?\" he asked tenderly as he crouched down beside her.\n\n\"Almost mended,\" she said, her voice sounding clear and strong.\n\n\"Demetri will be relieved,\" Caleb smiled stroking her cheek gently. \"Do you know where Annie is?\" There were so many scents in the house it was hard to pick up his woman's.\n\n\"She said she had something to do,\" Mara answered with a little frown. \"I think she went to say goodbye to Ben and Klaus and Hub. She seemed really sad about Ben. I think she liked him a lot.\"\n\nCaleb nodded sadly. He had liked the Beta a lot too from the time he has spent at Wicked. He stroked Mara's cheek again and then rose, striding back out of the room and up the stairs. He found her sitting with her back against the wall, silently weeping as she looked at the three dead Weres. Silently he crossed to her, picking her up gently and holding her close.\n\nHe held her quietly as she cried for all the death around her, knowing she erroneously would blame herself for it when there was nothing she could have done to stop it. The fault lay with him and Demetri. They had arrogantly thought they could stop the vampires from breaching the line and they had almost paid the price by losing the most precious things in their lives.\n\nHe moved to the top of the stairs sitting down and cradling Rhianna in his lap as he watched the activity down below. He saw Demetri and Rafe arrive and let out a sigh of relief as he met Demetri's eyes. His friend's rage had gone and his brief nod told him all he needed to know. Graves was dead.\n\nRafe's eyes connected with Lacey's, his heart thudding loudly as he saw her comforting Ashleigh. He strode over to her, barely limping from his leg wound as he slid down the wall beside her. \"It's over,\" he whispered. \"He will never hurt another person again, Lacey.\"\n\nHer eyes filled with tears of relief, her hand reaching out to touch his cheek. \"I love you, Rafe,\" she said shakily.\n\n\"I love you, Lacey,\" he groaned, leaning forward and brushing his lips gently against hers, careful not to wake the sleeping girl. \" I need to go and help Jared, honey. There is a lot to do. I'll be back as quickly as I can.\" It was hard to walk away from his mate, but the pack needs came first. They would have time together when the hard, painful work had been done.\n\nHe saw Caleb sitting at the top of the stair, Rhianna cradled tightly in his arms. For a moment he felt fear as he saw the bleak expression on the vampire's face. He had been told his sister was fine. Was it a lie? He bounded up the stairs, halting when he saw Ben, Klaus and Hub. Rhianna's tearstained face said it all and he stifled down his grief as he dropped down on the stairs and brushed her cheek lightly.\n\n\"Don't you do it,\" he said fiercely. \"Don't you dare take responsibility for something you couldn't stop, Annie. I know how your mind works. You are not to blame for any of this. I will kick your ass if you even go there, baby girl.\" His dire threat was such a direct contrast to his loving expression that it brought a weak smile to his sister's face.\n\n\"I'm sorry, Rafe,\" she whispered. \"I know how much you loved Ben. I wish I could have saved him.\"\n\nRafe swallowed hard reaching to pull her into his arms as he kissed her forehead lightly. \"Yes, it's sad that so many of my pack died tonight, Annie,\" he breathed softly. \"I've lost some very close friends and I will grieve for them. But you are safe. You, Lacey and Millie. Aaron and Jen. So many others that I can't name. The pack will grieve their losses but they will celebrate the living, the survivors who will help rebuild the pack and make it strong again. The past can't be changed, baby girl, but the future can be shaped into something better.\"\n\n\"I love you so much, Rafe,\" she murmured, hugging him tightly, relief that he was alive and well coursing through her. \"You kept your promise to me. We are still standing despite everything.\"\n\n\"And we always will be because we stand together,\" Rafe whispered. \"Love you, baby girl.\" He gently disentangled her and handed her back to her vampire who gave him a warm smile.\n\n\"Glad you made it, Rafe,\" Caleb said sincerely, his arms banding around his precious woman who was sitting up a bit straighter, some of her earlier misery eased by her brother's words.\n\n\"You too, Caleb,\" the big man answered, taking one more regretful look at his friends before he turned and headed back downstairs.\n\nDemetri sank down beside Mara, his eyes flicking quickly over her face, noting her better colour as he slid his fingers gently along her rib cage, feeling for breaks. Two ribs were still broken and he struggled to dampen down the flare of rage he felt deep inside.\n\n\"Demetri, I'm fine,\" she sighed softly. \"I've even had broken ribs before a few years back when I fell down a hole on a training dig. They hurt like hell but they're not life threatening.\"\n\nHe raised one perfect eyebrow at her, his lips tightening in a firm line. \"So, you have a habit of placing yourself at needless risk, wife?\" he growled softly. \"I don't know why I'm so surprised to hear that after the way we met. Trying to prove the existence of vampires really wasn't one of your smartest ideas.\" He cut off her retort by placing his wrist at her mouth after ripping a wound in it. \"Drink.\" \n\nShe glared at him as she began to suck at his wrist, her eyes slowly closing as hot fire raced through her as his blood hit her system. She knew he was worried about her, concerned for her well being. But he was pissed as hell at her too underneath it all. He was going to make her life a complete misery for almost getting herself killed. She'd have to head him off somehow and there really was only one way to do it.\n\nShe pushed his wrist away, licking at her lips, watching as his eyes narrowed at the gesture and his thumb snaked out to wipe at a spot that she'd missed. She took a deep breath and met his gaze unflinchingly. \"I'm ready now,\" she announced softly, smiling when he stilled completely, his eyes narrowing further as they raked over her face intently.\n\n\"Seriously?\" he breathed softly, a suspicious look coming over his beautiful face. \"You're not just saying that because you know I'm going to ring your beautiful little neck?\"\n\nMara stretched tentatively, sighing with relief when no more pain wracked her body. She pushed herself up into a sitting position, feeling stiff but so much better. \"Seriously,\" she sighed, wrapping her arms around his neck. \"You can ring my neck all you want to after the deed is done.\" She heard his breath catch, felt his hands tremble as he circled her tightly in a band of steel.\n\n\"Thank you, Mara,\" he whispered into the side of her neck. \"I don't think I could stand going through this again, seeing you lying there in such pain. I thought for a moment you were dead.\"\n\n\"I'm sorry, Demetri,\" she groaned softly, hearing the naked pain in his voice as she held him tightly. \"I'm so sorry, love. I promise I'll listen to you the next time.\"",
        "For a moment she thought he was crying in the middle of a houseful of Weres but then he raised his head and she saw he was laughing, an expression of total disbelief on his face. \"Can I have that in writing?\" Demetri laughed. \"Because I know damned well you're going to deny all knowledge of ever uttering those words to me.\"\n\nMara rolled her eyes and shook her head but she smiled at him and gave him a soft kiss before she swung her legs to the floor and let Demetri help her up carefully. She took a few steps and straightened completely. \"All better,\" she sighed with relief. \"Let's find Caleb and Annie.\" She felt in the way with all that the Weres had been through. They didn't make her feel that way but she did. The pack was grieving and their presence may not be as welcome as they thought.\n\nPeople moved about constantly into the night until silence began to descend on the compound. The vampires had removed all of Graves' crew, the buses had rolled in from the evacuation site and families were reunited in the community hall. In total thirty one Weres lost their lives and four vampires. The losses seemed pretty low considering the odds stacked against the pack but it was still a crushing blow to Jared. People had lost their mates, their sons and daughters, their brothers and sisters.\n\nThe Alpha's house was empty of most of the pack now. Demetri had taken Mara home and Andrei and Alexei had disappeared not long afterwards. The only vampires to remain in the compound were Caleb and his woman and he was only there because Rhianna didn't want to leave her family. She moved from one to the other, hugging them, whispering words of comfort, crying with them when their grief spilled over.\n\n\"Take her home, Caleb,\" Jared said quietly moving to stand beside his friend. \"She's exhausting herself trying to comfort everyone.\"\n\n\"I know,\" Caleb sighed wearily. \"Every time I try to she looks at me with big pleading eyes and I can't make myself force her to leave.\"\n\n\"Then let me help,\" Jared answered softly. \"We will forever be in your debt, Caleb. I know some of the pack have looked at you with unfriendly eyes tonight but it will pass. You will always be welcome here.\"\n\n\"Thank you, Jared,\" he said quietly, watching as the Alpha strode over to his woman who was sitting with her arms around Millie.\n\n\"Come, Rhianna, it is time for you to go home,\" Jared said firmly. \"I need to get Millie to bed so she can rest and look after our babies. We all need to get some rest. You can come back tomorrow and fuss over us then.\"\n\nRhianna swallowed hard, looking up at Jared, seeing the determination in his eyes. She bowed her head and bit her lip, feeling Millie squeeze her waist gently. \"We'll be fine, Annie,\" her sister sighed softly. \"We are strong and resilient. We will recover from this. Go home, sweetie. Get some rest. We will need your strength tomorrow and in the coming days.\"\n\nNodding numbly, Rhianna hugged her and then Jared, stopping at Lacey and Rafe and kissing their cheeks as she gave them harder hugs. She turned from her family walking into Caleb's strong embrace, allowing him to lead her from the house.\n\n\"We're going to head to bed,\" Rafe said quietly, pulling Lacey with him as he escorted her from the house. Their Alphas needed the house to themselves tonight. They would stay at Rafe's small cabin.\n\nFinally alone with his mate, Jared sank down to the floor, wrapping his arms around Millie, resting his head against her stomach as she leaned forward to rest her cheek on top of his head. Silently he began to weep, feeling Millie's tears fall on the back of his neck. \"So many, Millie,\" he whispered. \"So many brave people lost their lives tonight. I keep asking myself if there was something else I could have done that could have saved more people.\"\n\n\"You did your best, love,\" Millie breathed tearfully. \"The odds were against us right from the start. We stood on the brink of annihilation but you secured strong, powerful allies. We fought and we won and yes, we lost many good people, but the pack stands strong. We will recover, love,\" she whispered softly. \n\nJared nodded, his hand coming up to touch her stomach reverently. \"I know we will, Mills. It's just going to be so tough the next few weeks, but I know life goes on and so will the pack,\" he sighed softly.\n\nRising, he gathered his mate into his arms and cradled her gently against his chest. \"Time to get some rest, baby,\" he said quietly. \"Tomorrow will be a very long day.\" \n\nTo be continued...\n\n This is the penultimate chapter in this part of the story. One more to go. Hope you all enoy the conclusion as much as you have enjoyed the rollercoater ride to get to the end :-)\n\nMany thanks to WorldHistoryBuff for editing for me as always. You're the best! And to my little ray of Sunshine :-) "
    ],
    "authorname": "JazCullen",
    "tags": [
        "vampires",
        "love",
        "werewolves",
        "mating",
        "war"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/when-worlds-collide-ch-13"
}