{
    "title": "Amnesty Program Ch. 05",
    "pages": [
        "Nathan sat in a booth across from Emily in the warm dimness of a local pub and smiled at her. She scowled back. \"If you were expecting to fuck me tonight, you can forget it.\" She was wearing a black leather jacket over a red and white striped tank top and frayed denim shorts. The jacket had slipped off her right shoulder. She left it that way.\n\n\"What I expect,\" he said, his smile only fading a little, \"is an intelligent conversation.\" He took a sip of his beer. \"I was only hoping to fuck you.\"\n\nEmily snorted and sipped her beer. \"That,\" she said, \"was a pretty good answer. What do you want to converse intelligently about- journalism or... whatever it is that you're into?\"\n\n\"I'm into environmental design modeling, but I'm a total idiot about journalism. Let's talk about that.\" He narrowed his eyes, \"Why to journalists go to such lengths to pretend to be impartial and objective when they obviously aren't?\" He watched her green eyes kindle.\n\nOver the next two hours they covered reporting ethics, fact checking, Randolph Hearst and Joseph Pulitzer, freedom of speech, yellow journalism, photo retouching, deep throats, paparazzi, tabloid sensationalism and the total train wreck that is the prime time news.\n\nEmily was nearing the bottom of her third beer. Her face was flushed and she leaned over the table in mid-argument, unaware, for once, of the effect her cleavage was having on Nathan. \"...so if you think you can invoke the libel laws again, forget it. The issues are much more foundational than dodging lawsuits.\" She finished her beer and slapped the glass down on the table.\n\n\"I'm surprised I can think at all with you leaning over the table like that.\" Nathan's eyes lingered on the place where the swells of her breasts disappeared into the fabric for another moment, then flicked up to her eyes, framed by her long curly red hair.\n\nEmily's face changed and she leaned back, considering. \"You never brought it up.\"\n\n\"What?\"\n\n\"The party. That girl's room.\"\n\n\"Yeah. Well, I thought we'd just start fresh. That was an... interesting evening.\"\n\n\"You,\" she said slyly, \"almost didn't get out of that girl's room with your virtue intact.\"\n\n\"Oh, I didn't,\" Nathan said, \"I jacked off into her underwear drawer after you left.\"\n\nEmily laughed. \"And I thought I left you with the biggest case of blue balls ever.\"\n\n\"That's a myth, you know, blue balls.\"\n\n\"Seriously?\" Emily reached for his beer, took a swig.\n\n\"Best kept secret of players everywhere.\" Nathan said, grinning to himself. \"Girls fall for that line all the time. The pain was all in my head.\"\n\n\"I knew you didn't perv that girl's room. You're such a gentleman.\" Emily's smile turned mischievous. \"So, how long was it before you got yourself off?\"\n\n\"Who says I had to do it myself?\"\n\n\"Yeah right. You turn down a no-questions-asked blowjob one minute and hunt down a one night stand the next? Not you. How long did you wait?\"\n\n\"It was the next morning,\" Nathan said, his face reddening slightly, \"in the shower. You?\"\n\nEmily hesitated, then grinned. \"Six minutes.\"\n\n\"Six minutes! How did you pull that off?\"\n\n\"My car has tinted windows.\"\n\nNathan looked at her with admiration. \"Still. That takes some courage.\"\n\n\"Nope,\" she said, finishing his beer, \"desperation.\" She looked at his face. \"Why are you looking at me like that?\"\n\n\"Nothing.\"\n\nEmily rolled her eyes. \"Out with it.\"\n\n\"I, uh, need to adjust... things.\"\n\nEmily stared at him dumbly for a moment, then her face brightened with understanding. She whispered, too loud, \"Are you getting a boner?\" Then, without waiting for an answer, \"Let me fix it!\" She scooted around to the back of the booth and slid her hand into his pants.\n\n\"Gently!\" Nathan laughed, then gasped. \"Ow!\"\n\nEmily jerked her hand out. \"Oh, I- I'm sorry. Did I scratch you?\"\n\n\"Yeah,\" Nathan said, \"scratched.\"\n\n\"You know,\" Emily said, widening her eyes sincerely, \"I'm going to have to have a look at that.\"\n\n----\n\nJason stood outside of his bedroom door, raised his hand to knock, put it down again. Rebecca was humming as she got dressed in his room, something tuneless and vague. He was still trying to decide whether to just walk in, knock, or walk away when she opened the door, looking exactly as she had when he had seen her this morning outside of Professor Suarez's office.\n\n\"You need to take me home so I can get dressed, but you need to get dressed first. I chose clothes for you.\" Rebecca breezed by him and went down the hall.\n\n\"Okay,\" he said, too quietly for her to hear. He went into his room.\n\nShe had laid out a pair of black jeans, a black dress shirt, a belt, and a pair of dusty black dress shoes.\n\nHe picked up the shirt, one he had only worn once to a wedding.\n\n\"Shine those shoes!\" he heard from the kitchen before he started undressing.\n\n----\n\nJason sat on Rebecca's couch, trying not to think about the last time he had been there, his pants around his ankles, Rebecca's roommate Emily staring at him open mouthed. He shifted awkwardly, waiting for Rebecca to finish getting ready. He got the newly printed fake IDs out of his wallet again, rubbed them and curled them absently to make them seem more worn. \n\n\"I need your help.\"\n\nRebecca's voice startled him back into the present. She stood at the hall entrance in black panties and a matching bra. \"I don't have anything slutty enough.\"\n\nHe raised his eyebrows at her. \"Really.\"\n\nShe rolled her eyes. \"This isn't slutty. My mom bought me these. I'm raiding Emily's closet. You coming?\"\n\nJason could move fast when he wanted. He found Rebecca holding Emily's leopard print miniskirt up to her hips. She grinned. \"Does this say 'bang me'?\"\n\n\"Yes. It also says '...and leave me in a shallow grave at the edge of the trailer park.'\"\n\n\"Good point,\" she said, sliding hangers out of the way, \"How about this one?\"\n\n\"I usually like blue and I usually like the plunging neckline, but that's like an office cocktail party.\" Jason pointed, \"What's that?\"\n\nIt was black. Rebecca pulled it off a hanger and held it up. \"It's a little black dress.\"\n\n\"That's the one,\" Jason said, \"It's not even on you yet and my heart is pounding.\"\n\n\"That's good, right?\" she said, sounding unsure, \"It's good that your heart is pounding?\"\n\n\"Put your hand here,\" he said, putting her hand in the center of his chest. She stepped in close and closed her eyes. She licked her lips and concentrated on his heart beating under her hand. She laid her head against his chest.\n\n\"You're right. This is the one. Go wait in the living room.\"\n\n\"But I want to watch you wiggle into it.\"\n\n\"No,\" she said, batting her eyes at him, \"that's for me. Wiggling out of it later... that's for you.\"\n\nJason grinned all the way back to the living room. He wasn't sure how that was going to happen with his mom at his house and Emily in Rebecca's apartment. \"We'll have to improvise,\" he muttered, and sat crookedly on one side of the couch.\n\nAfter what seemed like an eternity, she slipped quietly into the room. \"What do you think?\"\n\nThe dress was simple- a black tank top jersey dress that hugged every one of Rebecca's curves and stopped at mid-thigh. She had on a simple pair of black heels from Emily's closet.\n\nJason stood and stared. \"That's fantastic! Come closer so I can... Oh. You, um, you... took off your bra. Wow. \"\n\nRebecca blushed. \"I had to. Look.\" She turned around.\n\nThe back of the dress scooped deeply, leaving most of her back bare. Jason reached out and touched the skin at the small of her back.\n\n\"That's not all,\" she said, turning around and putting her hand on his chest like she had before, \"I took my panties off too. They made lines.\" She smiled a little, feeling his heart trying to break his ribs. \"Do I look like a wanton strumpet?\"\n\n\"No. But I like it.\" Jason ran his fingers all the way up her back. \"I would do anything for you.\"\n\n\"You're already doing everything I want.\" She tipped her head up and kissed him where his jaw met his neck. \"We have homework to do.\"\n\nJason sighed. \"Fine. We have to get into the pub before we can get kicked out.\"\n\nRebecca pulled her hair into a neat ponytail. \"I'm ready. Let's go.\"\n\n----\n\n\"Well, that was easier than I thought it would be,\" Jason said into Rebecca's ear as they followed a loud crowd of frat boys into the pub.\n\n\"I know,\" Rebecca said over her shoulder, \"I was kind of wondering if I'd be forced to degrade myself with transactional dalliances to get in.\"\n\n\"What sort of 'dalliances' were you concerned about?\"\n\n\"Oh, you know,\" she said, smiling vaguely, \"transactional ones.\"\n\n\"Well, I'm glad whatever it was wasn't necessary,\" he said, his hand in the small of her back, \"Let's get a booth towards the back. I owe you a drink.\"\n\nJason looked over the table at her as she read the menu, her mouth smiling faintly.\n\n\"I'll have a Coke,\" she said, finally.\n\n\"Really?\" Jason grinned at her. \"I thought you were going to try to embarrass me.\"\n\n\"Well,\" she folded the menu primly in front of her, \"It was either that or a half dozen Clitlick Shooters. After your wonderful performance of that very thing this afternoon, I was pretty sure I'd be disappointed.\"\n\nJason smiled at her. \"I'll give you anything you want.\"\n\n\"Yes, you will.\" She smiled back at him wickedly. \"But I'm kind of itching to get kicked out of here. Why don't you order something adult and try out those fake IDs?\"\n\nA barmaid swept up to the table, her attention across the bar at the thirsty crowd of frat brothers. \"What can I getcha?\"\n\n\"A Heineken and a Coke.\"\n\nShe wrote it down and headed off.\n\nJason watched her go. \"She didn't even check. No wonder underage drinking is such a problem in this county.\"\n\n\"Write a strongly worded letter to the manager...\" she stopped and the blood drained from her face. \"Don't look now, but Emily's here. She's with someone.\"\n\n\"Who is it?\"\n\n\"Well, he's cute, blonde, brown eyes.\"\n\n\"Damn,\" Jason breathed, peeking over his shoulder, \"she did it. That's got to be Nathan. We have to go meet him.\" He stood up.\n\nRebecca squealed, \"No! I can't. Not in her dress.\"\n\n\"Come on. You probably look better in it than she does.\"\n\n\"That's the problem!\" Rebecca watched Emily scoot around the booth next to Nathan and whisper something in his ear.\n\n\"It's just a dress. If she gets upset, I'll take the blame. I found it and I told you to wear it.\"\n\nRebecca stood up, still unsure. \"This isn't going to go well.\"\n\n----\n\n\"Fancy,\" Jason said, standing at Emily and Nathan's table, \"meeting you here.\"\n\nRebecca was trying to hide behind him.\n\nEmily's eyes widened, flicked over to Nathan, and back. \"Oh, hi, Jason...\" She saw Rebecca hiding behind him. \"Hi Rebecca, this is Nathan.\"\n\nNathan half-stood and shook Jason's hand. \"Have a seat.\" Jason slid into the booth after Rebecca.\n\nEmily fidgeted. \"Rebecca is my roommate and... she's wearing my dress.\"\n\nJason leaned forward, \"That's my fault- I kind of didn't give her a choice...\"\n\n\"Bullshit,\" Emily said, but she was smiling. \"She needed something naughtier than she had in her closet.\"\n\nNathan raised his eyebrows, but didn't say anything.\n\n\"I didn't have time to go shopping,\" Rebecca said, blushing slightly, \"and yes, your clothes run more to the... provocative than mine.\"\n\n\"Thank you,\" Emily said, \"I'll take that as a compliment. I have to say, though, that I think I look just a shade hotter in that dress than you do.\"\n\nJason opened his mouth, and shut it again. These two women would tear him to pieces if he got in the middle of this one. He glanced at Nathan, and Nathan shrugged, keeping his mouth shut too.\n\nRebecca straightened a little and sat primly. \"It's too bad we can't settle this scientifically. Your feelings hardly constitute anything like an empirical judgment.\"\n\n\"You would go straight to the cold science. And who says we can't prove it?\"\n\n\"To make a valid comparison, an impartial panel of judges would have to see both of us in the dress and that's not possible, since I'm the only one wearing it.\"\n\nNathan cleared his throat, \"Um...\"\n\n\"Shut up.\" The girls said it simultaneously.\n\nThe server approached the table with Jason's beer and Rebecca's coke. \"There you are. Been looking all over.\" She set the drinks down, backwards, and left. Jason traded Rebecca's coke for his beer. He sipped, made a face, set it down.\n\n\"Well?\" Emily said, raising her eyebrows at Rebecca, \"Stand up, turn around. Show us what you've got.\"\n\nRebecca stared at Emily, and decided. She nudged Jason, \"Let me out.\"\n\nJason stood and helped Rebecca up. She put her hand over his heart again, briefly, and whispered, \"I'm thinking about your tongue,\" felt his heart jerk a little, and smiled. \"You should sit down. You're going to embarrass yourself.\" Jason did.\n\nRebecca turned slowly and walked away from the table. Jason swallowed. She filled the dress perfectly. She went all thirty feet to the bar and leaned over it, the dress riding up dangerously in the back, and grabbed a stack of napkins. She came back, swinging her hips subtly more than usual. She made eye contact as she walked, with Emily, with Nathan, and finally with Jason. She stopped at the edge of the table and leaned toward him and placed the stack of napkins neatly in front of him.\n\n\"You're going to need these,\" she said, and stayed bent over.\n\nHe tried to keep his eyes on her eyes, but failed. He found himself staring at the tiny freckles at the tops of her breasts, admiring the swells that disappeared tantalizingly into the smooth black fabric.\n\nJason swallowed again and looked into her eyes. \"Thank you,\" he managed.\n\nRebecca smiled. \"You're welcome.\"\n\nEmily clapped, startling both Nathan and Jason from their thoughts. She applauded slowly, mockingly. \"Let's have a word in the ladies' room.\" She stood, grabbed Rebecca's wrist and dragged her away.\n\nNathan watched them go and took a deep breath, let it out. \"Are they always this competitive?\"\n\nJason nodded. \"You have no idea.\" He sat, lost in thought.\n\nNathan cleared his throat. \"So how is this going to go?\"\n\nJason shrugged. \"They're going to want to get us to pick a winner, which means we'll have one happy girl and one angry girl.\"\n\nNathan frowned. \"Shit. I don't think I want to see Emily angry. I had just gotten her to thaw a little.\"\n\n\"What do you think of her?\" Jason asked, suddenly.\n\n\"She's a force of nature, she's dangerous, fascinating, brilliant. I want to find out all about her.\"\n\nJason sighed. \"Yes. You're right. Okay. Here's what we'll do.\" And he laid out a plan.\n\n----\n\nEmily pushed Rebecca into the big handicapped stall at the end of the bathroom.\n\n\"Hey, easy,\" Rebecca said, grinning, \"You started it.\"\n\n\"Yes I did, and I'm going to finish it. So. Out of the dress and hand it over.\"\n\nRebecca's face reddened a little. \"I, um...\"\n\nEmily crossed her arms and raised an eyebrow at her. \"Are you seriously going to try to claim modesty now? After your little stunt back there with the napkins?\" She took off the leather jacket and hung it carefully on the hook on the back of the door. \"Well?\"\n\nRebecca closed her eyes. \"Fine, but you never tease me about being a prude again.\"\n\nEmily had her tank top off and was pulling her shorts off of her long legs. \"Never again. Also,\" she said, slipping her sandals off, \"if the boys say I look hotter than you, I get to keep it on.\"\n\n\"I guess that's fair.\" Rebecca pulled the dress off and held it out to Emily, daring her to make a comment about her nakedness.\n\nEmily took her bra off, dropped it in her purse and smiled. \"That's how I wear it too.\" She handed Rebecca her shorts and pulled off her panties.\n\n----\n\nJason nudged Nathan when Rebecca came out of the ladies' room wearing Emily's shorts and leather jacket. She swam a little in it and the sleeves came down almost to her fingertips.\n\nWhen Emily came out a minute later, you could hear conversations fizzling out to watch her. She was taller than Rebecca by at least four inches, and the effect was that the skirt was that much shorter on her. She walked to the table, turned around once, slowly, and sat down next to Nathan\n\n\"So,\" she said, grinning, do I win, or do I have to cross my legs to make my point?\"\n\nJason flicked his eyes over at Rebecca and cleared his throat. \"Well, I have to say that Rebecca fills the top of the dress quite a bit... very nicely.\"\n\nNathan shrugged. \"I guess,\" he said, conversationally, \"but I'm going with Emily's very long thighs. They trump everything.\"\n\nEmily rolled her eyes. \"A breast man against a leg man. This is going to be impossible.\"\n\n\"You have no choice then,\" Jason said, smiling. \"Make your point.\"\n\nEmily stuck her tongue out at him, but she stood up and sat on the table in front of Nathan. She crossed her legs and the dress rode up another inch. The toe of her black shoe touched him just under his chin and lifted his face so he was looking in her eyes. \n\n\"Jason,\" she said, her eyes never leaving Nathan's face, \"what do you say? Do I get to wear my dress home or not?\"\n\nNathan swallowed nervously. The plan was shot. \"Say yes, man. Please.\"\n\n\"Okay, Emily. You win this time,\" Jason said, winking at Nathan, \"but only because you were threatening a judge with bodily harm.\"\n\n\"Oh,\" she said, picking up Nathan's beer and sipping it, \"this isn't a threat. This is a bribe.\" She put one black-heeled shoe on either side of Nathan, leaned forward, and kissed his forehead, then his lips.\n\nRebecca elbowed Jason. \"Transactional dalliances,\" she whispered, outraged.\n\n\"I agree,\" Jason whispered back. \"We'll need a rematch.\"\n\nRebecca cleared her throat. \"Okay, well. Don't stain that dress. I might want to borrow it again.\"\n\nNathan smiled. \"Oh, these polyurethane-polyurea copolymers are very resistant to stains...\"\n\nRebecca frowned at him. \"Whatever. Don't rip it either.\"\n\nEmily turned her head and smiled sweetly. \"He'll do his best.\"\n\nJason steered Rebecca toward the door to keep the girls from starting another argument. \"We're going to need to find somewhere we can actually get kicked out of.\"\n\n\"You don't think we can still get kicked out of this pub?\"\n\n\"Here? No. Not without breaking expensive stuff.\"\n\n\"You're probably right. Let's walk around a little. That's something people do on dates, right?\"\n\nJason grinned at her and took her hand. \"Let's go.\"\n\n----\n\n\"Did you say you were into modeling?\" Emily said as Nathan helped her into his car. \"Because you would look cute in... anything.\"\n\nNathan shook his head. \"Not fashion modeling. Environmental design modeling.\"\n\n\"That sounds kind of boring. What is it?\"\n\n\"I try to simulate one environment in another environment. It's a bit of a niche. Disney does it all over the place, but some other corporates are curious about it for new construction.\"\n\nEmily rolled down her window and let the night air blow her hair. \"I think I'd have to see it to appreciate it.\"\n\n\"I've been experimenting with a simulator I built in my house. I'll show you sometime.\"\n\n\"Show me now. I don't want to go home yet.\"\n\n\"Okay, but it's pretty geeky.\"\n\n\"Mmm. Geeky sounds good right now.\"\n\nNathan pulled into his driveway, a suburban tract house from the fifties.\n\n\"Is this your house?\" Emily said, ready to be impressed.\n\n\"No, I wish. It's an Eichler house- he was a mass market architect that had some revolutionary ideas. I'm just renting. I'd buy it if I could though.\"\n\n\"It looks big for just one guy.\"\n\n\"It is kind of big for one person, but I've got a lot of gear in there. It wouldn't be pleasant for a roommate.\"\n\nThe inside of the house was open, with the kitchen, dining room, and living room all in the same space. The walls were white, the furniture was white, and the living room floor was covered in a deep pile white rug. What was unusual, though, was that there was large ducting installed on the inside walls, out of proportion with the house. It looked like there were very large air conditioning vents around the living room. There were also several speakers mounted to the walls of the great room and a tall black rack of electronics mounted against the black wall. The ceiling had what looked like a series of lighting racks for a rock concert.",
        "\"Wow- um,\" Emily said, \"hardware meets electronics store. Does this stuff do anything?\"\n\nNathan smiled, \"Well, it sure isn't bolted to the walls for beauty. In a final installation, it would all be invisible, but I'm doing research here and I need to get at the guts of the system.\"\n\n\"What does it do?\"\n\n\"It makes you feel like you're somewhere else. It's easier to show you than to explain it. Take off your shoes.\"\n\nEmily slipped her heels off and kicked them over by the couch. The rug felt good on her feet. \"Why is everything white?\" she asked.\n\n\"It's so I can start with a neutral atmosphere. Stand there in the middle of the rug. That's the sweet spot. Close your eyes and think of a place you like.\"\n\nEmily closed her eyes. \"The beach.\"\n\nNathan typed something into a keyboard at the equipment rack. \"Which beach?\"\n\n\"What difference does it make?\"\n\n\"Well,\" he said, and she could hear a smile in his voice, \"this would be the beach at San Francisco.\"\n\nSounds began to play on the speakers, distant traffic at first from the rear speakers, then waves, much closer and in front of Emily. Then seagulls, wind, and faint sounds of airliners taking off. She could sense a diffuse light through her closed eyelids, like an overcast day. Then a wind rushed out of the air conditioning ducts, smelling vaguely salty, and freezing.\n\n\"Gah! that's cold!\" She gasped, dodging out of the center of the room where the air ducts were aimed.\n\nNathan laughed. \"San Francisco is always cold, especially at night. Now you pick a beach- one that you like.\"\n\nEmily frowned at him, but said \"Huntington Beach. In the late morning.\"\n\nNathan typed some instructions into the equipment rack. \"It takes a minute to reset- neutralize the smells and bring the room back to the starting point.\"\n\n\"I'm still cold,\" Emily said, wrapping herself with her arms. \"Don't do that again.\"\n\n\"Oh- I can help with that right away. Go back to the center of the room and I'll warm you up.\" Nathan pushed a fader up on a lighting console and a very hot lamp blazed in the middle of the room.\n\nEmily put her bare foot into the pool of light, tentatively, then moved so she was completely in the beam. She closed her eyes and purred, soaking up the heat.\n\n\"How did you make it smell like that?\" Emily said, her eyes still closed.\n\n\"I built a smell synthesizer. It's actually fairly crude, but it has twenty two core smells that I can combine to make a few million smells. Most of those are useless, but I have a couple thousand in my database that are good for environments. The delivery system is way back in the ducts so there's no hissing in the room.\"\n\n\"So how does Huntington Beach smell different than San Francisco?\"\n\n\"Oh, the most obvious thing at first would be sunscreen. They don't need it in San Francisco, so you'll notice a little coconut in the air along with the ocean smell. The traffic is quieter, and a lot more sounds of people on the beach.\" A soft bing came from the computer in the rack. \"It will be a lot warmer too. Eighty five degrees, which is warmer than the average, but I feel bad about San Francisco.\" He tapped a key and the sounds started fading in.\n\nEmily heard the ocean first, larger waves than before, and then seagulls, children playing, faint, occasional traffic sounds. Each sound seemed to come from a real space around her, and there was a sense of distance. The seagulls seemed to be all around her. The sun lamp stayed on, dimming just a little, and a warm, gentle breeze that smelled just like Nathan had said it would, ocean smells with a hint of coconut.\n\nEmily sighed and smiled. She felt her shoulders relax, her breathing slow down. It was hot now, deliciously, and she felt beads of sweat forming on her forehead. She opened her eyes and looked over at Nathan. \"I could get used to this,\" she said, but the illusion of being on the beach disappeared as soon as she opened her eyes. The white room with all the equipment was too distracting.\n\nNathan saw the look on her face- the evaporating dream. \"You have to keep your eyes closed. I use a translucent blindfold when I'm working on presets. I can get a feel for the lighting without getting distracted.\" He hit a key and the sun lamp went out and the room cooled again to a neutral seventy two degrees.\n\nEmily shivered a little at the change in temperature. The dress was thin and did little to insulate her from the cooling air. \"It's easy to forget you're not standing in a room. Are there other places to try?\"\n\n\"Give me a list of places you'd like to experience and I'll set them up in a queue. I'll sit with you and step through them with my remote control.\"\n\n\"Anywhere?\" Emily thought for a moment. \"the Amazon river, a backyard barbecue around a pool, a sidewalk caf\u00e9 in Paris.\"\n\nNathan nodded as she rattled off her list, taking notes. \"There's a blindfold in the drawer over there behind the chair. You don't have to put it on yet - I still have to get things ready.\"\n\nNathan felt Emily come up next to him and watch what he was doing. He felt the softness of her breast against the back of his arm.\n\n\"How does this work?\" she asked, her face lit up by the screen.\n\nNathan swallowed. \"This is the user interface that syncs everything up and pulls the specifications for each environment from the database. Right now I'm making up a backyard barbecue- I didn't already have a preset for that, so I'm putting together a Texas carnival with a swimming pool. I have to readjust the sounds, especially because there wouldn't be the same kind of screaming in a back yard as at a carnival.\"\n\n\"I changed my mind,\" Emily said, \"I'd like a brothel. A Texas brothel.\"\n\nNathan grinned as he kept typing. \"As much as I'd like to do that, I don't have the appropriate media and I haven't done any research. I don't have any clue what a Texas brothel might smell like. I'm almost done with the barbecue though.\"\n\nEmily shrugged. \"Your loss. I thought we could play a little game, but no.\"\n\nNathan was silent for a moment as he finished the last touches on the barbecue preset. \"How much of an exhibitionist are you?\"\n\nEmily squinted at him. \"How can I answer that? Seven? Three point three?\"\n\nNathan took her hand and led her to the center of the carpet. \"Let's do an experiment.\" He got two chairs and put them next to each other. He sat Emily on one and sat next to her. \"Blindfold on,\" he said, and hit a button on his remote control.\n\nEmily put the blindfold on just as the sounds of tropical birds and outboard motors faded in. The blindfold was made of a soft white plastic, padded around the edges with something soft and smooth. She could see light and darkness, color impressions, but no details. The sun lamp burned hot, and the air coming out of the vents was humid, almost dripping with moisture. A rich smell of foliage filled the room and Emily started to sweat almost immediately.\n\nShe turned her head to where Nathan was and reached for his hand. He took her hand and held it. \"The first three presets are set for five minutes. The last one will run until I stop it.\"\n\n\"Five minutes! I'm going to melt.\"\n\n\"Relax. Your body will adjust. Enjoy the feelings. Pay attention to the details, to the sounds around you. I'm the only one that needs to see.\"\n\nEmily suddenly felt exposed. She was blindfolded, listening, sweating. She couldn't see him but he was looking at her in her black clinging dress, and nothing else.\n\n\"This is a game. My game, not your brothel game. Please trust me.\" He held her hand. \"I am going to tell you the truth, but the room is going to lie to you. Fun lies. I've added some surprises. You can make it all stop any time you want.\"\n\nEmily licked her lips. She nodded. \"Okay. What do I do?\"\n\n\"Nothing. Sit, feel enjoy. Talk with me.\"\n\nThe sounds of a river surrounded them, small lapping against a dugout canoe, a distant splash of a fish flopping out of the water, an immense murmur of shallow rapids.\n\n\"When you sat on the table in front of me tonight,\" Nathan said, \"you put your feet on either side of me.\"\n\nEmily's mouth grinned a little.\n\n\"How much did you think I could see?\"\n\n\"I wasn't worried about what you could see.\"\n\nNathan leaned over and kissed her just under her ear. She drew in a breath. Her skin felt hot, slick. His tongue had touched her neck, briefly. He had tasted her sweat.\n\n\"What were you worried about?\"\n\nEmily bit her lip. She could hear parrots, something big rustling in the jungle off to her right. \"I was worried about what you could smell.\"\n\nSome sort of a large bird called out in the jungle and there were hundreds of answering calls. Nathan touched his nose to her shoulder, she heard him breathing her in. He lifted her long hair from the back of her neck, breathed.\n\n\"Please,\" she said, \"this is...\"\n\n\"Shhh.\"\n\nShe felt his forehead against her chin, he breathed. She touched her knees together. He knelt down in front of her. Something in the jungle roared. She felt two of his fingers against the inside of her left knee. She let him push them apart. His cheek touched the inside of her right knee. He breathed.\n\nThe sound of a passing motorboat rose and faded. \"You smell wonderful.\"\n\nEmily shifted in her seat. Nathan sat again next to her, his hand on her thigh.\n\n\"Your nipples don't hide under that dress.\"\n\nShe turned towards him slightly, then back. \"I know.\"\n\n\"Nothing hides under that dress.\"\n\nAn animal voice called out, echoing over the water, a monkey perhaps, and a flight of birds close overhead, Emily could hear their feathers beat the air.\n\n\"The Amazon is going to go away now,\" Nathan said, \"and the room is going to reset.\"\n\nEmily could see the light dim to a low glow through the blindfold. The heat stopped and a cool, dry breeze blew across her skin, chilling her. The doorbell rang, startling her and she started to reach for the blindfold, but Nathan's hand on her arm stopped her.\n\n\"Listen,\" he said.\n\nShe heard a conversation through the door, laughter, then the door opened and a few people walked in, closed the door behind them. They whispered, indistinct words, and she heard them sit around her on the couches and chairs. There were four, she thought, she caught a whiff of a sweet perfume and the sound of a woman's voice to her left. A man laughed quietly. She heard ice tinkle in a drink. The sound of someone opening a beer came from her right, where the kitchen was. Nathan kept his hand on her knee throughout.\n\nAnother woman's voice bubbled to her right, giggling briefly and then sipping, a whiff of whisky.\n\nNathan brushed her cheek with the tips of his fingers, making her shiver, then he put his arm around her. She rested her head against his shoulder, gathering warmth from him. She put her hand on his thigh.\n\n\"Tell me the story of how we met,\" Nathan said, winding a strand of her hair around his finger.\n\n\"What?\" Emily whispered, \"now?\"\n\n\"It's just me. Tell me.\"\n\n\"I went down on you.\" Emily said, quietly, \"I didn't even know your name.\"\n\nShe felt the other people in the room, could hear all of the small noises of them, but there was no comment.\n\n\"Did you enjoy it?\"\n\nEmily shook her head. \"No. Not then.\"\n\nThe light came up, sunlight, and the air was balmy with summer. The chlorine smell of the pool filled the room, but was soon overpowered by the smoke of a barbecue. Children were laughing, splashing in the pool. There were adults around her, having conversations about sports, about shopping. The hint of whisky disappeared and a light coconut scent replaced it- the smell of sunscreen again. Emily struggled with herself. Had there been anyone else in the room besides Nathan at all? It felt like there were people all around her.\n\n\"So tell me, Emily,\" Nathan's voice matched the outdoors party feel, \"did you think about it later? Going down on me?\"\n\nEmily nodded, imagining the faces turning to hear her response.\n\n\"What was that like?\"\n\nEmily pursed her lips. \"I fantasized about it. I wished I could have finished. I wished you hadn't been such a damn gentleman.\"\n\nHis lips against hers surprised her, warm, sunny like the party, smiling. When she reached out again for him, he was gone. Children screamed in the pool, splashed. \n\n\"Did you masturbate to that memory?\" His lips were right by her ear. \"I did.\"\n\nShe caught his face with her hands and kissed him, half rising out of her chair. He embraced her, his hands on the skin of her back, pulling at the edges of the dress. She pressed herself against him. \"I rubbed myself raw thinking about your cock in my mouth.\"\n\n\"I don't like this party,\" he gasped into her mouth, and kissed her again. \"Let's go to the next one.\"\n\nThe pool smell disappeared, the children silenced, and Emily found herself clinging to Nathan, strangely afraid he would disappear like the rest of the illusions.\n\nShe felt the room change back to neutral again. The clink of drinks, the whispered conversation. It sounded like two women were on the couch to her left, one telling the other a story. The two men sounded like they were in the kitchen. She heard the refrigerator door open, close.\n\nEmily had her face buried in Nathan's neck, smelling him, knowing he, at least, was real. His hand was on her back, under the edge of her dress.\n\n\"I want you,\" she said into his shoulder. \"I want you.\"\n\n\"Mmm. Yes. I'd like that. Finish this with me, though. Sit now and listen, feel this place. It's one of my favorites.\"\n\nEmily sat, reluctantly, and felt an urban setting materializing around her. She smelled wet concrete, roasted garlic, fresh bread, coffee. The air was full of conversation, French, all of it, and the small sounds of pigeons. Traffic was close, and sometimes almost loud enough to drown out the surrounding conversations. Silverware clinked against plates, and in the distance, a church bell rang.\n\nNathan let the impression settle in. The temperature was perfect, comfortable. He remembered recording the media for this environment in Paris, one of the most peaceful afternoons of his life.\n\nEmily let the illusion take her. She listened to diners, to traffic, to a small breeze in the tree over the caf\u00e9. The smells changed in intensity, coffee becoming strong, then drifting away as the smell of roasted vegetables wafted over her. There were conversations all around her. She felt like the restaurant was packed, fifty or sixty people all there on the sidewalk. When Nathan knelt in front of her again, she wanted to pull back at first. Too many people. She let herself go though. She let the reality and the illusion come together in her mind. He pushed her knees apart again and she gripped the chair with her fingers. She felt his hair brushing up her left thigh, his lips brushing her right. His tongue touched her skin and there was a hush around her. The people seemed there, but not speaking, like they were watching.\n\nHer dress was bunching up, higher and she sank herself towards Nathan's lips, spreading for him. He took the folds of her into his mouth all at once, gentle and hot. She felt his tongue swirl once and she arched her back, one hand in his hair, one hand holding to the chair so she wouldn't slide off altogether. He licked slowly through her center, listening to her breathing, the sounds she didn't know she was making. He listened for something in Paris too, something he knew was coming. He licked her again, wide and soft, curling his tongue through her, drawing moisture from her, and sighs, and then he heard it, the accidental quiet pluck of violin strings and he knew the street musicians were about to start.\n\nEmily was lost in Paris, in Nathan's tongue, in the public space, intimate, feeling watched and played. The music started so gently, she almost thought it was her own mind making music out of the delicious things Nathan was doing to her with his tongue, then it was close, the quartet playing just for them, something springlike, light. Nathan had her left knee over his shoulder now, and he pressed into her, his tongue hard and insistent one moment, and hot liquid the next. She let her head fall back and she swam in the sensation until the edge of his tongue ran along her clitoris. Her head jerked up and now she had both hands in Nathan's hair.\n\n\"Ohh yes!\" She breathed, \"Yes!\"\n\nHe did it again, on the other side this time, running the edge of his tongue against the stiff nub. He did it again and she squealed, curling her body over him. He did it again, and her orgasm lit her up. She squealed again, through her teeth, he wouldn't pull back, he kept running the electricity of his tongue through her pussy. She gasped and let go of his head, shaking, when he did it again, gently this time, and the orgasm stayed with her, running through her thighs, making her muscles shudder and melt.\n\nHe licked her slowly, lightly, barely a tickle, even after she had slidden to the floor, her dress bunched around her waist. He kept her there on the carpet, kept her flesh singing along with the musicians, along with the sounds of the city.\n\nFinally, she took a huge, shuddering breath and let it out all at once. She got hold of Nathan's ears with her fingers and guided his mouth all the way up her body to her mouth. She kissed him, lying flat on her back, and enjoyed the profound weakness, the temporary lack of the desire or the ability to move. She felt Nathan's hands sliding the blindfold up and off of her.\n\nNathan smiled down at her. \"How would you like to experience Rio de Janeiro?\"\n\nEmily laughed and pulled his face down for a deep kiss. \"I'd like to experience your bedroom, I think, and I want it to be plain and silent, and I want the lights on, and I want to play with you.\"\n\n\"The next time you come,\" Nathan said, \"I want to see your eyes.\" He laid down next to her, his head on her stomach, listening to her breathing and the sounds of Paris. She touched a hand to his hair and trailed her fingers in lazy spirals. \n\n\"I'd like to write about this,\" Emily said, her fingers sliding over Nathan's face and exploring his lips. \"This would be a great technology story.\"\n\nNathan grinned at the ceiling. \"You'll have to interview me thoroughly.\"\n\nEmily sat up. \"Yes. I need to know a lot more about you. Show me where you sleep.\"\n\nNathan stood and helped her up. He led her down a short hallway to a small bedroom, also done entirely in white.\n\n\"Why all the white?\" Emily said, and she reached for his belt buckle.\n\n\"It gives me a sense of opportunity, of potential. The house is a blank canvas.\"\n\n\"You know,\" she said, pulling down his pants, \"you're not an engineer. You're an artist. You create into silence and darkness like a painter creates onto canvas.\"\n\n\"And you?\" Nathan said, looking down at her, \"What's your medium?\"\n\n\"This and that. Photography, writing, you know. I just have this one unfinished piece I'm itching to finish off. The canvas was your cock.\" She freed his penis from his boxers and admired it for a moment. \"It had terrific potential,\" she said, kissing the head, \"but the timing was all wrong.\"\n\nNathan's eyes rolled up into his head as Emily engulfed him slowly. \"And now?\" he managed.\n\nShe didn't answer for a long while, moving her head slowly, teasing him. \"I'm not sure,\" she purred finally, and licked his shaft deliberately, \"It still might be a little on the early side. Maybe I should come back and finish another day.\"\n\n\"I think there's no time like the present.\" Nathan said as she pumped him slowly with her hand.\n\n\"You're not thinking at all,\" she said, and nibbled at him gently. \"Now it seems I remember scratching you earlier. Was it here?\" She kissed the side of his shaft gently, watching his face.\n\nNathan shook his head.\n\n\"Here?\" she kissed a little higher.\n\nHe shook his head again.\n\n\"I can sense a conflict of interest a mile off, and you're very, very conflicted.\" Emily tapped the tip of his cock against her chin thoughtfully. \"I could spend all night kissing this spot and that, and it would never be the right spot, would it?\"",
        "Nathan shook his head.\n\n\"I'll have to try them all at once.\" She engulfed him again, her tongue soft against the base of his cock, her eyes on his. She shook her head slowly, pulled back and smiled. \"You're as hard as a steel rod.\"\n\n\"You've gotten better at this since the last time.\"\n\nEmily pouted briefly, \"I wasn't really trying last time.\" She stood and pulled her dress off in one smooth motion. \"Tonight,\" she said, laying back on the bed and scooting up toward the pillows, \"I'm making my very best effort.\"\n\nNathan pulled his shirt off and crawled after her. He lay down next to her, his head propped up on his hand, the fingertips of his other hand trailing up her stomach. \"I've been wanting to touch your breasts all night.\"\n\n\"Oh please yes,\" Emily said, smiling.\n\nNathan smoothed his hand over her left breast, enjoying the silk of her and the softness, the insistent stand of her nipple in his palm. He leaned down and kissed her right breast, just next to the nipple, then brushed his lips over it lightly. He breathed her scent in again.\n\nEmily whined impatiently and turned herself towards him.\n\nHe licked her nipple, and a warm, gentle sweetness filled Emily from the tips of her toes to her head. She held the back of his head, gently, afraid the spell would be broken if she moved too quickly. He leaned over, licked her other breast from the bottom to the top, slowly, softly. She kissed his ear as he sweetened her, bit the lobe gently, and felt his teeth on her nipple. She gasped softly, into his ear, kissed the corner of his jaw. She found his cock with her hand as he turned his face to her to kiss her. She squeezed just as his lips touched hers and she felt the moment turn. She saw his eyes go molten and she smiled and spread her legs.\n\nEmily closed her eyes, felt Nathan's lips on her navel, between her breasts, then she felt the tip of his cock touch her pussy. She grabbed his ass with both hands as he slid into her slowly, filling her. \n\n\"Mmmm,\" she said, \"I've needed this for a long time.\" She felt a tension fall away that she hadn't been aware of, and she rested like that, still, with him for long moments, just feeling full, feeling Nathan's muscles under his skin, all of them poised to move for her, waiting. He breathed into her ear.\n\n\"You are all around me,\" he said, starting to move slowly, enjoying her heat and moisture, the velvet of her pussy, and the satin of her fingers moving along his back, touching his neck. When the gentleness freshened into frantic desire, her fingers raked his back in time with his grunts, in time with her own squeals and pants. They filled the room with themselves, with their relief and urgency. She wrapped sweat-slicked legs around his back and he pinched her slippery nipple for a short moan and a speeding of her rhythm.\n\nEmily met Nathan's pounding, stroke for stroke, and when he looked her in the eye and pinched her other nipple, she came, hissing and pressing into him. Her orgasm started his, and he shook with it, pulsing into her pussy, and gasping for air.\n\nEmily's legs slid down to rest flat on the damp bed and Nathan stayed in her, softening slowly. He watched her face, fascinated with the freckles on her cheeks, the strand of red hair stuck to the sweat on her face. She was breathing heavily, watching him.\n\n\"Am I crushing you?\" he said, watching her eyes. He felt her pussy squeeze his cock, a tiny hug.\n\n\"Crush me a little more,\" she said, and welcomed his weight, holding her pressed between the softness of the bed and the hard heat of his body.\n\n----\n\nJason held Rebecca's hand as they walked lazily down the street. The night was pleasant and they walked in silence for a while. Rebecca looked cute in Emily's mildly oversized clothes, and the idea that they had swapped clothes in the bathroom kept jumping to Jason's mind.\n\n\"So...\" Jason said.\n\n\"Don't ask.\" Rebecca said, then squeezed his hand quickly. \"I'll tell you later, but it makes me mad right now and you don't want me to be mad.\"\n\n\"All right then. We have a problem. We're nerds and we couldn't get kicked out of a pub.\"\n\n\"Mmm. Yes. We need to find a place that we know how to get kicked out of.\" She stopped walking. \"Oh!\"\n\nRebecca was staring across the street, an odd grin on her face. Jason followed her gaze and laughed. \"Of course.\" He kissed her cheek and they ran across the street and into the Public Library.\n\nRebecca took a deep breath. The smell of the library had always been the entryway into other worlds for her. She smiled. \"See anyone you know?\" she said, scanning the main study room.\n\n\"No. You?\"\n\n\"No. Come with me,\" she said, raising her eyebrows mischievously, \"to the stacks.\"\n\n\"It's weird how you can make that sound like a dirty word.\"\n\nRebecca winked at him and led him to a shelf of badly worn paperbacks with pink and red spines. She stood, looking fondly at the battered books. \"This is where I learned to masturbate.\"\n\n\"Seriously?\" Jason goggled at her. \"Here?\"\n\n\"Well,\" she said, waving her hand, \"I practiced in my room, but this is where I learned.\" She touched the shelf with her finger. \"I was too embarrassed to check any of these out, so I would just grab a few, go over to a study cubicle, and read them there.\"\n\n\"Honestly,\" Jason said, \"that's the hottest thing.\"\n\n\"Ugh, I know,\" she said, looking at the cubicles. \"I'm amazed you can't see giant pink clouds of sexual frustration floating over those cubes.\"\n\nRebecca picked three books off the shelf and handed them to Jason. \"Come on,\" she said, \"I'll show you.\"\n\nJason sat in a cubicle and Rebecca pulled a chair over from the next cubicle and sat next to him. Rebecca took one of the books, \"Tangerine Seduction,\" and flipped through it quickly, scanning for something.\n\n\"You've read that?\"\n\n\"Read it?\" she said, not taking her eyes off the pages, \"Oh yes. Pretty much memorized some parts.\" Then, as an afterthought, she said, \"It was a long time ago. Listen.\"\n\n\"Cassandra blushed, wondering what Tristan would think of her now,\" Rebecca read out loud, putting on a breathy tone, \"what he would think of her alabaster fingers stroking her secret place, making circles of tingles. His eyes would narrow with desire, she knew, the way they did when she caught him looking in on her from the garden, his muscular torso shining with the sun on his sweat. She pressed around her little clitoris, and gasped, remembering the bulge in Tristan's pants, and wondering what that bulge would feel like in her small hand.\"\n\n\"Steamy,\" Jason said, thinking the girl in front of him in the tank top and leather jacket could put any Cassandra to shame.\n\n\"So I sat here, reading and squirming on my chair, trying to remember every single thing she did so I could go home and try it myself.\"\n\n\"And...\"\n\n\"Oh, it works. Then I started inventing new things, you know.\"\n\n\"Actually, I don't know...\"\n\nRebecca looked into his eyes, amused. \"Ten fingers can do a whole lot of different things. Then there's bedding, kitchen implements, costume jewelry, appliances, garden tools... you get the idea. Didn't you ever try stuff?\"\n\nJason shrugged. \"I have three main grips, and three positions- standing, sitting, laying down. That's, what? Nine possible combinations.\"\n\n\"We have a lot of stuff to try then,\" she said, and she sat on his lap, facing him. She picked up another book and handed it to him. \"You read now. Page 78, start at the last paragraph.\"\n\n\"You really know this one,\" Jason said, grinning, but he started reading when he saw the look on Rebecca's face. \"Chelsea sat on Gregory's lap,\" Jason started, and stopped when Rebecca wiggled against him. This was going to be distracting. He started over. \"Chelsea sat on Gregory's lap, running her manicured finger along his jawline. She licked her lips...\"\n\nRebecca was doing each thing he read, her finger on his jaw, her tongue licking her lips. She touched his lips with her finger. \"Go on. We're never going to get kicked out at this rate.\"\n\n\"She licked her lips and kissed his cheek, softly, tentatively, hoping nobody would notice, hoping everyone would see. Suddenly, she just didn't care any more. She...\"\n\nRebecca was all over him, her tongue slipping across his, her hair falling across both their faces. She crushed his lips with hers, his shirt in her fist, pulling him up to meet her mouth. She moaned and broke away briefly, her lips red and a little swollen. \"Come on, get your hands under this coat,\" she said, breathlessly, and kissed him again.\n\nJason ran his hands up her back, under the coat, under the tank top and she laughed. She stopped laughing when he moved his hands to her front, caressing. She rocked a little against his erection with a quick look around to see if anyone was coming, then started pressing against him in earnest. She rocked into him, over and over. She kissed him again and he pinched her nipple, making her squeal into his mouth. She was speeding up, and she felt Jason trying to slip his hand into her shorts, and then his finger was searching for her clit, he brushed across it, finally, and Rebecca felt a jolt...\n\n\"Break it up!\" the library security guard spat, poking Jason with a nightstick.\n\n\"Oh shit!\" Rebecca said, panting into Jason's shoulder.\n\n\"I'm going to have to ask you two to leave. This is a public building...\"\n\nThe guard kept talking. Jason pulled his right hand out of Rebecca's shorts, but his left hand was still covering her breast. He pinched her nipple lightly, rhythmically as he nodded to whatever the guard was saying. He felt her mound pressing into him, her face still hidden in his shoulder.\n\n\"So out with you and go home. It's a school night.\" The guard poked Jason again with the nightstick and crossed his arms.\n\nJason pinched softly, pinched again. Rebecca's breath was hot in his ear.\n\n\"Well?\" The guard was getting his nightstick out again.\n\n\"Okay. Just give us a second. We're just doing a school project here and we're almost done.\"\n\n\"School project my ass.\" The guard kept getting louder. \"You'll leave now if I have to drag you to the door myself.\" He grabbed Jason's arm.\n\nRebecca stood suddenly and rounded on the guard. \"Don't touch him!\" she yelled, pushing him in the center of the chest. He took two steps back in surprise. \"Jason, let's go. Now.\" She grabbed Jason's hand and ran. He followed her, stumbling out of the library. When they got to the sidewalk, she turned to Jason and smiled sweetly. \"I think we get credit for that one,\" she said, touching his erection through his pants, then she bit her lip. \"And... I think I got gooey on you.\n\nJason looked down and saw a darker black spot where she had been humping him. He laughed. \"I wondered why you yanked me out of there so fast.\"\n\n\"That,\" she said, grinning, \"and if you're going to get handcuffed, I want to be the one to do it.\" She took a deep breath and looked up and down the street. \"You almost made me come while that asshole was talking to us.\"\n\n\"That pink cloud of sexual frustration just got several shades darker,\" Jason said, taking her hand, \"and it's going to follow me home.\"\n\n\"Do you think I'm done with you? You didn't get to drink your beer, and then you didn't get to get off. A disappointing date, I'd say.\"\n\nJason shrugged and grinned. \"There was the little black dress, and you looked amazing in it. You almost rubbed a hole in my pants, and we probably got Emily out of your apartment for the night. Besides,\" he put his arm around her, \"you don't put out on the first date.\"\n\nRebecca punched his arm, hard, and let him take her home."
    ],
    "authorname": "Ambidentrous",
    "tags": [
        "banter",
        "intelligence",
        "oral",
        "blindfold",
        "exhibitionist",
        "library",
        "humping"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/amnesty-program-ch-05"
}