{
    "title": "I Will Love You Forever Pt. 2 Ch. 17",
    "pages": [
        "The excitement of the graduation, wedding and party had finally died down. Kenji and Patricia were getting ready to leave on their first overnight trip away. Nick and Hana had already picked the children up earlier that morning and encouraged Kenji to take Patricia away for two nights instead of one.\n\n\"You deserve it,\" Nick said. \"God only knows when you'll get another chance.\"\n\n\"That's true,\" Kenji replied as he looked over at Patricia. She was missing Penny and an extra night away would do both of them good. \"I think that we will accept your offer,\" Kenji said after a few minutes. \"I thank you on behalf of both of us.\"\n\n***\n\n\"Two nights?\" Patricia asked. \"And they don't mind keeping the kids?\"\n\n\"He all but insisted,\" Kenji replied as he loaded the car. \"It will be good for us.\"\n\nPatricia couldn't help but agree. Even though they had the entire summer ahead of them before Kenji started his internship, it was never far from her mind. Kenji stopped what he was doing and looked at her. He could see the wheels turning in her mind.\n\n\"Kirei, let's enjoy today and tomorrow,\" he said. \"Any other issues can wait until we return.\"\n\n\"You're right,\" Patricia said. \"I'm sorry.\"\n\n\"No apologies are necessary, but let's make an agreement shall we? Let's agree that while we are gone there will be no talk of children or school. This will be our time to relax and enjoy each other without worry or interruption.\"\n\n\"I agree, but before we go; can I say one thing?\" \n\n\"Of course,\" Kenji said curious about what she was going to say.\n\n\"I really miss Joel and Penny.\"\n\n\"I miss them too and if you like, when we get to San Diego; we can call them. Will that help?\"\n\n**\n\nThree hours later, Kenji was parking the car in the parking lot of the small hotel. Patricia got out of the car and looked around taking in the beauty of their surroundings. Kenji got out, stood beside her and put an arm around her. \n\n\"It is beautiful here,\" he said pulling her tight against him. \"You chose well.\"\n\nFifteen minutes later, they were checked into their room. The manager had given them a funny look when they went to the counter, but accepted their money without comment. They ate a late lunch and then went for a walk. For the most part, they were left alone. Every once in a while a comment was made, but they pretended not to hear it. They got back to the room just before supper. To save money, Patricia packed sandwiches, fruit and cookies for dessert.\n\n\"Are you ready to call Joel and Penny?\" Kenji asked after they had eaten. \"They are three hours ahead of us which will make it almost nine o'clock there.\"\n\nWithin minutes, Patricia was talking to a surprised, but thrilled Penny.\n\n\"How are you?\" Penny asked once she was over her shock.\n\n\"I'm fine-I just miss you guys,\" Patricia replied. \"Are you getting settled in?\"\n\n\"I guess so-it's just so...small. Patricia, I want to thank you again for everything. You have no idea of what you and Kenji mean to us.\"\n\n\"You're welcome- is Joel there? I want to say hello to him and Kenji wants to say hello to you.\"\n\n\"Penny, how are you and Joel doing?\" Kenji asked a few seconds later.\n\n\"We're fine,\" Penny replied. \"I was telling Patricia how small the apartment is. We had to put some of our things in mom and dad's basement which, by the way is bigger than this apartment.\"\n\n\"I am sure that you will adjust. May I speak with Joel?\"\n\nAfter Kenji spoke to Joel, he hung up and hugged Patricia.\n\n\"Do you feel better?\" \n\n\"I do, thank you,\" Patricia replied. \"And now, if you will excuse me; I need to go into the bathroom and no you can't come with me.\"\n\n\"Did you bring the green nightgown?\" Kenji asked his cock already tingling at the thought.\n\n\"You'll see. Why don't you find something to do for a few minutes?\"\n\nKenji watched as Patricia picked up a small bag and went into the bathroom. While she was gone, he unpacked their suitcase and hung up their clothes.\n\n**\n\nPatricia looked behind her to make sure that Kenji wasn't peeking through a crack in the door. Satisfied that she could change in private, she opened the small case and took out the sheer, lavender colored nightie. It was shorter and sheerer than the green one and the panties that came with it were crotch less. She undressed, quickly washed up and put the nightgown on. It was so sheer that she could see the outline of her areolas. She took a deep breath and slipped the panties on. She inspected herself in the mirror and pronounced herself presentable. The last thing she did was to take her hair down from the ponytail that she still wore because it was both practical and comfortable. She cracked the door open and saw Kenji sitting on the bed already nude and erect.\n\n\"Close your eyes,\" she called out.\n\nShe waited until his eyes were closed and slipped out of the small bathroom. She tiptoed to the bed only stopping when she was standing directly in front of him.\n\n\"Keep your eyes closed,\" she said as she knelt before him.\n\nShe moved so that she was between his knees and his cock was close enough that all she had to do in order to touch it was to stick out her tongue. She took a quick swipe at it and then blew across the tip. Kenji moaned and jerked his hips forward wanting a repeat of what just happened.\n\n\"Did you like that?\" Patricia asked thoroughly enjoying herself.\n\n\"I liked it very much,\" Kenji replied. \"Will you please do it again?\"\n\nInstead of answering, Patricia took the head of his cock into her mouth just long enough to wet it, released it and then blew on it. She jumped when Kenji jumped and then moaned.\n\n\"Oh Kirei... you torture me so,\" Kenji said, \"But remember I will get my turn to torture you.\"\n\n\"I'm counting on it,\" Patricia replied.\n\nIt wasn't often that she got the chance to play as she was now and she planned to enjoy every minute of it.\n\n\"Would you like to guess what I'm wearing?\" She asked seductively as she toyed with his swollen balls.\n\n\"Is it the green nightgown?\" \n\n\"Nope, but it is a nightgown- would you like me to describe it or would you like to see it?\"\n\n\"I... I think that I would like to see it,\" Kenji replied his voice strained. Patricia had moved from playing with his balls to lightly stroking the length of his cock.\n\n\"Are you sure?\" she asked teasing him.\n\n\"I am sure... No... yes, I am sure.\"\n\nPatricia got to her feet, opened her legs and reached for Kenji's hand.\n\n\"How about I let you feel first?\" she asked as she placed his hand on the thin material just above the slit.\n\nShe moaned softly as Kenji's hand rested on her mound and then pressed his palm against it. She knew that he had to feel her coarse pubic hair through the thin material of the panties.\n\n\"It's so thin... I feel you,\" Kenji said.\n\nBefore she could stop him, he reached around her and grabbed her ass. The next thing she knew, his face was buried against her mound and he was kissing it as he made his way down to her slit. When the material of the panties stopped and his tongue touched her clit, he stopped. He opened his eyes and looked up at her.\n\n\"Surprise!\" Patricia said as she put her hands on his head and guided it back to her wet mound. She squealed when he teased her clit with his tongue. \"What are you doing?\" she asked breathlessly when he stopped.\n\n\"Lie down, I want to see.\"\n\nPatricia lay down on the bed, raised her legs and allowed them to drop open. Instead of going back to her clit, Kenji started at her neck and worked his way down to her nipples. He sucked her nipples through the sheer material and rolled them between his lips.\n\n\"Ohhh I like that!\" Patricia cried out when Kenji took a nipple between his teeth and chewed and then sucked on it.\n\nKenji repeated the process with the other nipple as he stroked between her vaginal lips. He sucked and stroked harder until Patricia covered her face with a pillow and screamed into it. Even then, he didn't stop. He released the nipple and moved so that his face was between her legs. He inhaled her scent and took her glistening nub into his mouth and sucked it until Patricia screamed for a second time. At the end of the second orgasm, he slid into her and paused. He pressed tightly against her and began to move his hips against her without pulling out. Moments later, he came with his face buried in Patricia's neck. Patricia came for the third time that night just as Kenji's orgasm was ending.\n\nHe collapsed next to her and took her into his arms.\n\n\"Do you think that we'll always enjoy making love?\" Patricia asked.\n\n\"I know that we will,\" Kenji replied. \"In fact, I enjoy it so much; I will soon be ready to do it again.\"\n\nAfterwards, Kenji lay awake unable to sleep although he was exhausted. He moved to get into a more comfortable position thinking that it would help. It took him several minutes to realize what the problem was- he missed their bed. He closed his eyes and matched his breathing to Patricia's slower and deeper ones. Moments later, he was asleep.\n\nThe time away went by faster than they could have anticipated. Both of them were ready to go home, but at the same time wished that they had one more day.\n\n\"We will come again,\" Kenji told Patricia as he helped her pack.\n\n\"I would like that,\" Patricia replied. \"And who knows what new style of nightgown will be out by then.\" She added with a mischievous grin. \n\n***\n\nRalph alternately paced and looked out of the front window. He was glad that his parents had some much needed time away, but he was ready for them to come home. He and Marie enjoyed going to Nick and Hana's house, but they missed home. By the end of the second day, Marie was getting cranky and deliberately getting into things. He had tried to warn her that Grandpa Nick would spank her if she misbehaved, but she hadn't listened. He even reminded her that Patricia and Kenji would be disappointed in her behavior but she ignored him. The end result was that after she broke a glass figurine that she knew she wasn't to touch unless Hana or Nick was with her.\n\n**\n\nThe figurine was a wedding gift from Abby and had been in the same spot for months and Marie had never touched it without permission. Ralph saw her pick it up and told her to put it down. Marie looked at him, turned the figurine over and over in her hands and dropped it. Nick happened to be coming out of his office and saw the glass figure fall from Marie's hands to the floor and shatter. \n\n\"Marie, come here,\" Nick said as he walked in and sat on the couch.\n\nMarie hesitated. She knew that she had crossed the line and that there was going to be punishment of some kind. She looked at Ralph hoping that he would speak for her as he usually did. Confusion crossed her small features when he didn't say anything.\n\n\"Don't look at him,\" Nick said firmly. \"I saw you drop it.\"\n\nTears pooled in Marie's eyes as she walked over to Nick. She was in for another surprise- Nick ignored her tears.\n\n\"I'm sorry grandpa,\" she said softly, her head bowed.\n\n\"Why did you pick it up?\" Nick asked. \"You knew better.\"\n\nWhen Marie didn't answer, Nick continued.\n\n\"That figurine was a wedding gift from your Aunt Abby and it meant a lot to us. I don't know why you picked it up, but when Grandma Hana comes in from the garden; you have to tell her what happened. After that we'll call Aunt Abby so that you can tell her too.\"\n\nThe crocodile tears turned into real ones as Marie realized the enormity of what she had done. With a start she realized that she would have to tell her parents too. That they would be disappointed was an understatement. \n\n\"But I said that I'm sorry,\" she tearfully.\n\n\"I heard you,\" Nick said gently, \"but sweetheart there are times when saying you're sorry isn't enough. What happened wasn't an accident. You decided to pick the figurine up knowing that you weren't supposed to. I know that you're young, and I know that your mom and dad have already started to teach you about responsibility. Now you get to practice it. I expect you to go to Grandma Hana without being told to and to tell her what happened. I don't want to hear that Ralph told her for you. Do you understand?\"\n\n\"Yes Grandpa Nick,\" Marie said still looking down.\n\n\"Good-I hear her coming in from the yard. I've got things to do so I'll see you later.\"\n\nAfter Nick was gone, Marie turned to Ralph and begged him with her eyes. Ralph was tempted, but what Nick said struck him. Sometimes an apology wasn't enough. He thought back to all of the times that he had protected his sister when she had done something blatantly wrong. At the time it felt like the thing to do, but now he wasn't so sure.\n\nNick stood in the doorway of his office watching to see what would happen. He could see the conflicted look on Ralph's face and took pity on him.\n\n\"Ralph, would you come into my office please? I need your help with something.\"\n\nRalph practically ran to the office relieved that he didn't have to watch Marie tell Hana about the broken figurine.\n\n\"It's hard being a big brother isn't it?\" Nick asked. \"Sometimes it's hard to know when it's ok to protect and when it's not.\"\n\n\"Papa says that I'm supposed to help keep Marie and mama safe.\"\n\n\"That's true and you do a great job of that, but letting someone get away with doing something wrong isn't protecting them. It's allowing them to continue to do wrong. I bet that you told Marie to put the figurine down and she didn't listen to you. Is that right?\"\n\nRalph's silence was his answer.\n\n\"You did what you were supposed to,\" Nick said. \"You told her not to touch it and she decided not to listen. That was her choice and now she has to pay the consequences of that decision. You feel badly for her and that's understandable, but Marie has got to learn that she has to accept the consequences for any choices that she makes. It's the same for all of us, your mama and papa too.\"\n\n\"Papa says that it's alright to tell on someone if they're doing something wrong... but Marie is my sister. Do I tell on her too?\"\n\n\"Ralph, let me ask you something. If I hadn't seen what happened, what would you have done?\"\n\n\"I would have said that I did it,\" Ralph replied without hesitation.\n\n\"Why?\" Nick asked. \"You didn't do it and I also would have known better.\"\n\n\"I didn't want her to get into trouble.\"\n\n\"Ralph, how would that have helped Marie learn to accept the consequences of her actions?\" Nick asked. \"It would have been teaching her that you or others will accept her punishment for her. I know that your papa told you that you should protect your sister, but I don't think this is what he meant.\"\n\nWhen Ralph didn't say anything, he continued.\n\n\"It's hard to let the people we love be punished, but it's a fact of life.\"\n\n\"Is grandma Hana going to be really angry with her?\" Ralph asked.\n\n\"I think that she will be more disappointed than angry,\" Nick replied.\n\n\"Will she get a spanking?\"\n\n\"I don't think so. Your grandmother's disappointment will be punishment enough. Add your parents and Aunt Abby's disappointment to that and Marie might wish that she had been spanked.\"\n\nThat was a sentiment that Ralph understood. On the rare occasions he did something wrong, the look on his parent's face was worse than any punishment that he could have been given. Hana calling them to dinner was their indication that Marie and Hana's talk was over.\n\nRalph noticed that Marie was unusually quiet. Whenever Hana asked her to do something, Instead of complaining as she usually did, she did without being told twice. After dinner, the phone call to Abby was made. Ralph held Marie's hand as she confessed to Abby about the broken figurine. When the phone call was over, he hugged her. She had one last confession to make and it would probably be the hardest one.\n\n***\n\nAs soon as he heard the car pull into the driveway, Ralph ran out of the house yelling that they were back. He ran to Patricia first and hugged her around her waist as tight as he could.\n\n\"I missed you too,\" Patricia said hugging him back.\n\nRalph let her go, ran to Kenji and hugged him.\n\n\"I missed you papa!\"\n\n\"And I you, but where is your sister?\"\n\nPatricia had already seen Marie standing by the door and knew that something had happened just by the look on her face. She looked over at Kenji and knew that he had noticed as well.\n\n\"Let's go get your things so that we can go home,\" Kenji said as he picked Ralph up. \n\nPatricia reached Marie before the others, knelt down in front of her and pulled her into her arms.\n\n\"It isn't that bad is it?\" Patricia said softly as she kissed Marie's cheek.\n\nMarie threw her arms around Patricia's neck and started to cry.\n\n\"Tell mama what's wrong,\" Patricia said hugging the crying girl closer.\n\nBy this time, Kenji had reached them and had gotten the condensed version of what happened from Ralph.\n\n\"I believe that Marie has something to tell us,\" Kenji said. \"But let's go home first.\"\n\nAfter spending several minutes with Nick and Hana, they headed home. As soon as they were indoors and the car unloaded, Kenji and Patricia took Marie aside.\n\n\"What do you have to tell us?\" Kenji asked.\n\nTen minutes later, they had the entire story.\n\n\"Thank you for telling us, but pretty one; you knew that to touch the figurine was wrong and yet you did it anyway. You chose to do wrong and that is unacceptable. I will call your grandmother and discuss how you can repay her for the broken item. In the meantime, please go to your room and do not come down until either your mother or I come for you.\"\n\nAfter she was gone, Kenji looked at Patricia and shook his head. He loved the spirit that Marie showed, it reminded him of Patricia, but he was concerned about what he considered to be excessive impulsiveness. If it would have been an isolated incident, he wouldn't have been so concerned. \n\n\"What are you thinking?\" Patricia asked.\n\n\"I am thinking that Marie needs more structure,\" Kenji replied. \"I know that children are sometimes impulsive, but this seems different to me. Ralph told her not to touch the figurine but she did it anyway. I understand that the fact that it was him saying it and not one of us makes a difference, but she knew not to touch it before he said anything.\"\n\nThey talked a few more minutes before Kenji called his mother. Between them they worked out a repayment plan. Marie would help Hana with housework whenever the children stayed over. After he hung up, he and Patricia went to the bedroom that Ralph and Marie shared to talk to Marie. They could tell that she had been crying, but they stood firm.\n\n\"Do you understand that what you did was wrong?\" Patricia asked.\n\n\"Yes mama.\"\n\n\"Good, now this is what'd going to happen...\"\n\nDinner saw a very subdued Marie, but they had seen it before. It was only a matter of time before she was back into trouble. In the meantime, they would enjoy the peace.\n\n***\n\nThe summer flew by and before they knew it, it was time for both Ralph and Kenji to have their first days as doctor and student. The night before their first day, Kenji and Patricia spent the entire evening reassuring the children that Kenji would be back after his rotation at the hospital. What helped was that the first week would be orientation and Kenji would be home in the evenings. \n\nThe next morning, Patricia was up early to make breakfast. As was his habit, Kenji slipped down the stairs so that he could watch her while she sang with the radio as she worked. This time she didn't turn on the radio. She stood in front of the sink for several minutes before moving to the refrigerator to take out the eggs. It was then that Kenji realized that she was crying.\n\n\"Kirei?\"\n\nPatricia tried to wipe the tears away before she looked at him; but was unsuccessful. The tears kept flowing although she tried to stop them. Kenji walked over to her, took her in his arms and held her.\n\n\"He's going to do well,\" Kenji assured her. \n\n\"I'm not worried about him,\" Patricia replied. \"It's just that our babies are growing up and next it will be Marie.\"",
        "\"That isn't a bad thing,\" Kenji said kissing the top of her head. \"In a few years they will be in college and our practice will be thriving. They will marry and give us grandchildren to spoil and we will be able to travel and make love uninterrupted.\"\n\n\"There is that, but Kenji-he's so little,\" Patricia said admitting that she really was worried.\n\n\"He isn't that little,\" Kenji chuckled, \"but he will be fine, you'll see. Sit down and let me make you a cup of tea and breakfast for us.\"\n\nPatricia kissed his chest, hugged him and sat down realizing that she had hit the jackpot in men. A few minutes later, she was sipping on a cup of hot tea while Kenji made scrambled eggs and toast for breakfast. When it was ready, he went called for the children.\n\n**\n\nRalph dressed in the new shirt and slacks that had been bought for his first day of school. The book bag filled with paper, pencils and crayons sat on his bed waiting to be picked up. His heart hammered as he thought about going to school for the first time. Kenji and Patricia had already warned him that people might stare at him and call him names.\n\n\"They may call you 'Jap' or 'Gook'\" Kenji told him, \"but ignore them. They speak out of ignorance and misinformation.\"\n\n\"Baby, the other name that they may call you is because of me,\" Patricia said. \"They may call you nigger because you are half black. Just turn a deaf ear and don't listen to them.\"\n\nIt wasn't so much the name calling that worried him; it was the fact that he wanted Kenji and Patricia to be proud of him.\n\n\"I want to go too,\" Marie said from the doorway.\n\n\"You will,\" Ralph assured her with a smile. \"We'd better go eat.\" \n\nOn the way out, Ralph grabbed his book bag and hefted it over his shoulder. \n\nAfter breakfast, Kenji, Patricia and Marie walked Ralph to school and kissed him goodbye. Neither of them missed the stares that they were getting from the other parents.\n\n\"Damn gook! He probably doesn't speak a word of English.\"\n\nKenji stopped, turned around and looked at the group of people that was staring at them.\n\n\"Good morning,\" he said with a slight bow. \"I am Kenjiro Takeda and this is my wife Patricia and our daughter Marie. Our son Ralph is now a student here. Since our children are attending the same school, it is my hope that we can be at the very least civil to each other.\"\n\nNo one in the group responded, but continued to stare at them.\n\n\"Please have a pleasant day,\" Kenji said and led Patricia away ignoring the murmurings of the group.\n\nPatricia wanted to turn back and pull Ralph out of school, but Kenji wouldn't let her.\n\n\"We cannot keep him hidden from the ugly parts of life,\" Kenji said. \n\n\"I know but if this is what the adults are like, what are the kids going to be like? Why don't we take him out of school? I can homeschool him for a year-\"\n\n\"Kirei, no. That is of no benefit to him or us. What if the attitudes don't change? Will we keep him out of school for another year? If problems arise we will deal with them.\"\n\nReluctantly, Patricia agreed although she still wanted to take Ralph out of school. When they got home, Kenji kissed Marie and Patricia goodbye before leaving for his first day of orientation. Patricia wrapped her arms around him and fought back tears; it was going to be a long day.\n\n\"Come on pumpkin,\" she said to Marie, \"let's make some sugar cookies for papa and Ralph.\"\n\n**\n\nRalph sat in the seat assigned to him which was located in the back row. He frowned, but didn't say anything. Before long, the classroom was buzzing with the chatter of first graders excited about the first day of school. At first, no one seemed to notice him which was fine with him, but then one of the boys saw him sitting in the back row.\n\n\"Hey! Look!\" he called out drawing attention to himself. \"We got a gook in class!\"\n\nRalph didn't reply, but kept looking forward. \n\n\"He's in a row all by himself! Do you know what that means gook? It means that you're stupid,\" the boy said. \n\n\"Alright everyone to their seats!\" a male voice called out.\n\nA few minutes later, the room was silent as the students waited for further instructions. The teacher, Mr. Albert Martin looked over the group. His gaze moved over the class and only hesitated when he saw Ralph. Inwardly he frowned and his heart pounded, but he kept his outer face neutral. As soon as school was over for the day, he was going to see what he could do about getting Ralph out of his class.\n\n\"Please stand for the 'Pledge of Allegiance'\" he said with his eyes on Ralph. \n\nHe was surprised to see Ralph stand and then place his hand over his heart along with the other students. Afterwards when everyone was seated, he took roll call. His hands shook with anger as he held the paper containing the student's names. He didn't know who placed the half-breed in the back row, but that was exactly where he would have put him. He deliberately called Ralph's name last even though there were last names that started with letters after 'T'.\n\n\"Ralph Ta... Ta...\" \n\nHe pretended to stutter over the name. He knew exactly how to say it. It was a name that he would never forget for as long as he lived.\n\n\"Takeda,\" Ralph said softly.\n\n\"Yes, of course,\" Martin said and then deliberately mispronounced it again.\n\nRalph noticed, but didn't correct the teacher. Instinctively he knew that it would be the wrong thing to do. He ignored the tittering of the other students and knew right then that he wasn't going to fit in.\n\n\"What kind of name is Ralph for a gook?\" Someone whispered.\n\n\"That's not a Korean name,\" someone else, a boy replied.\n\n\"That's because our new student isn't Korean, are you?\" Mr. Martin asked. \"Our new student is Japanese and negro. An interesting combination I think. Maybe he goes by the name of Ralph so that he'll fit in better.\" \n\nRalph was tempted to look down, but instead; he stood up and looked the teacher in the face.\n\n\"My name is Nikorasu Ralph Takeda. My father's name is Kenjiro and my mother's name is Patricia. Ralph is the name of my uncle. You may call me Niko.\"\n\nMartin's face turned as red as his hair at what he perceived to be impertinence. Part of him felt guilty, but the other part of him was enraged.\n\n\"Get in the corner! Now!\" Martin yelled startling the other students.\n\nNiko gave a polite bow, looked at the teacher and went to a corner. He hadn't meant to be impertinent. The idea to change his name came to him when his pride about his heritage was questioned. His heart sank when he realized that he would have to tell his parents that he had been disciplined on the first day of school.\n\nHe didn't know how long he had been in the corner before he was given permission to sit down. All he knew was that his feet hurt from his new shoes and he had to go to the bathroom. Reluctantly he raised his hand and was ignored. \n\n\"Please excuse me-\"\n\n\"In the corner!\"\n\n\"But-\"\n\n\"In the corner before I take out the paddle!\" Mr. Martin yelled.\n\nEven the students who had teased him earlier looked at Niko with sympathy. Finally it was lunch time. Niko impatiently waited for his chance to use the bathroom. He washed his hands and joined the other students on the playground. He found a corner where he could eat in peace and took out his lunch.\n\n\"Hello,\" a soft voice said. \"Can I sit with you?\"\n\nNiko looked up to see a girl who was by all accounts chubby. She wore thick glasses and her mousy brown hair was in a ponytail. He recognized her as being in his class.\n\n\"Of course,\" he said politely.\n\nThe girl looked mildly surprised, but then sat down next to him.\n\n\"My name is Florence, but my mom and dad call me Florrie.\"\n\n\"I am Niko.\"\n\n\"I know- they tease anyone who's new,\" Florrie said as she took a bite of her sandwich.\n\n\"Do... do they tease you?\" Niko asked.\n\n\"Sometimes- but it's not too bad.\"\n\nBy the end of lunch, Niko had a friend. Somehow knowing that made the rest of the day easier. He took great pains not to do anything to draw attention to himself. The day couldn't end fast enough as far as he was concerned and as soon as they were dismissed, he took off. He breathed a sigh of relief when he saw Patricia and Marie waiting for him.\n\nNot caring what anyone thought, Niko threw himself into Patricia's arms and hugged her.\n\n\"Ralph?\" Patricia asked concerned, \"What happened?\"\n\n\"I... I had to stand in the corner,\" Ralph stammered.\n\n\"On your first day? Why?\"\n\nNiko quickly told her the story about how the teacher had mispronounced his name.\n\n\"I only asked that he call me Niko,\" he explained, \"and he got angry.\"\n\n\"Is your teacher still here?\" Patricia asked.\n\n\"I... I don't know,\" Niko replied recognizing the stubborn and angry expression on Patricia's face.\n\n\"Let's go find out,\" Patricia said taking Niko's hand.\n\nShe found the school office and walked in. She stopped short when she heard raised voices coming out of the principal's office.\n\n\"I want that fucking kid out of my classroom!\"\n\nThat was all that she needed to hear. She took Niko's hand and led him from the office. She and Kenji would come back without him. She also decided that Niko wasn't going back to school unless he was removed from the class.\n\nAs soon as Kenji got home, he took one look at Patricia and knew that something had happened.\n\n\"Kirei, what happened?\" he asked after he hugged and kissed her and the children.\n\n\"I'll let Ralph-I mean Niko explain while I make dinner,\" Patricia said.\n\n**\n\n\"And all you did was to ask him to call you Niko?\" Kenji asked several minutes later.\n\n\"Yes papa.\"\n\n\"Ralph, why did you request to change your name?\"\n\n\"I... I didn't want them to think that I was ashamed of who I was.\"\n\nNiko's answer reminded him of Patricia when the dean told her to use her maiden name of Middleton. Kenji looked at Niko with pride, but knew that he like Patricia; had to learn when to concede and when to fight. Today, he was in the right.\n\n\"Niko, did anything else happen?\"\n\nWhen Niko hesitated, Kenji knew that something had.\n\n\"Tell me,\" Kenji urged.\n\nNiko told Kenji about the second time he had to stand in the corner. Niko took a step backwards when he felt Kenji's anger.\n\n\"Thank you for telling me,\" Kenji said softly. \"Go help your mama in the kitchen, I will be there shortly.\"\n\nAfter he was alone, Kenji sat where he was for several minutes thinking. Finally, he got up and went to the kitchen.\n\n\"Niko, you will stay home tomorrow. Your mother and I will go talk to Mr. Martin and the principal.\"\n\n\"But papa, I want to go to school,\" Niko said.\n\n\"You will, just not tomorrow,\" Kenji said in a tone that told Niko not to argue.\n\n***\n\nMr. Martin was at the blackboard writing the vocabulary words for the day when Kenji, Patricia and the principal walked in.\n\n\"Mr. Martin, this Mr. and Mrs. Takeda; their son Niko is in your class.\"\n\n\"Yes,\" Martin said pleasantly. \"What can I do for you?\"\n\nMartin struggled to contain the trembling in his hands as he looked at Kenji. He fought the urge to cower when Kenji took a step toward him. He could actually feel his hair being pulled from his head and almost covered his head with his arms. He took a deep breath and reminded himself of where he was.\n\n\"Mr. and Mrs. Takeda have some concerns about what happened yesterday,\" the principal said.\n\n\"If you're talking about your child standing in the corner, I must tell you that it was deserved.\"\n\n\"Asking to be called by a preferred name warrants punishment?\" Kenji calmly asked. \"What about asking to use the restroom? Did that warrant punishment?\"\n\nPatricia looked around the classroom noting that Niko's seat was in the last row.\n\n\"Excuse me, but Takeda begins with a 'T', why is our son sitting in the back of the room? According to the class roster, there are several names that start with letters after 'T'.\"\n\n\"An oversight I'm sure-\"\n\n\"Mr. Martin,\" Kenji said, \"Did you happen to be a prisoner in a Japanese prisoner of war camp?\"\n\n\"That has nothing to do with it,\" Martin replied in a shaky voice.\n\n\"I beg to differ,\" Kenji replied politely. \"It has everything to do with it. My wife heard you requesting to have Niko taken out of your class. I happen to agree that it would be in his best interest if that change occurred. But my question to you is this, what will you do when other students of Japanese descent are in your class? I am sorry for what happened to you and I understand your anger, but my son and other children of Japanese descent had nothing to do with it.\"\n\nIn the end, Niko was transferred to another class but only after Kenji and Patricia met with the teacher. The teacher, Miss. Nixon assured them that Niko would be treated as any other child in her class was treated and that racism of any kind wasn't going to be tolerated. After talking to her for more than thirty minutes, Kenji and Patricia decided that they liked the teacher. They got the class assignment for the day and walked back home.\n\n\"How did you know that he was a prisoner of war?\" Patricia asked as they walked home.\n\n\"I saw it in his response to me,\" Kenji replied. \"It explains his reaction to Niko although it doesn't make it right.\"\n\n\"No, but I guess I can understand his reaction. We'd better get moving or you're going to be late,\" Patricia said quickening her step.\n\nNiko met them at the door with an anxious expression on his face.\n\n\"All is well,\" Kenji told him. \"You will go back to school tomorrow, but you will have a different teacher. We have met with her and we think that she will treat you fairly. Your mother has your assignment for today.\"\n\nNiko breathed a sigh of relief and smiled.\n\n\"I also want to tell you that Mr. Martin has had a very bad experience with our people. That is why he reacted to you as he did. That does not excuse his behavior and he is being disciplined for it, but Niko; there are more people like him in the world. As you grow older, you will learn that there are times when you must stand down and there are times to stand firm. Yesterday you were in the right. We are proud of you.\"\n\nNiko beamed at the compliment loving the look of pride that he saw in Patricia's eyes, but what he wanted was for her to be so proud of him that she cried as she did for his father.\n\n\"Kirei, I must go or I will be late,\" Kenji said as he kissed her. \"I will see you tonight- I love you.\"\n\nKenji kissed the children goodbye, picked up his lunch and left for the day.\n\n****\n\nSaul sat in the library unable to concentrate. It had been weeks since his meeting with Nick and the others. He didn't know what he thought would happen or how fast it would happen, but it felt as if nothing was being done. As the weeks passed, he fought the urge to call to see where things stood. He decided to give it one more week before calling.\n\nHis mind went from Nick to Harry. He was now convinced that Harry was into something that wasn't necessarily good. Whenever he asked Harry about it, he became secretive and changed the subject. He didn't press too much because if Harry told him, then he would be expected to tell him about going to prison and the meeting with Nick.\n\nFinally he gave up on writing the essay that was his latest assignment from Reggie. According to Reggie, he was almost ready to take his first college class. Saul took the news with a mixture of excitement and anxiety.\n\n\"You'll do fine,\" Reggie, Joshua and Cora assured him.\n\nJoshua and Cora had been thrilled when he told them that he wanted to go into the ministry. Cora actually cried as she hugged him. It wasn't long after that announcement that a visitor started coming to dinner on a weekly basis.\n\n\"I remember you,\" Saul said when he and Noah were officially introduced. \"I helped with your luggage at Christmas.\"\n\n\"You have a good memory,\" Noah replied.\n\nAfter that, Saul spent a little of each evening talking with Noah. He was as impressed with him as he was with Reggie, Joshua and Jacob. One night after dinner, he and Noah were talking.\n\n\"Tell me,\" Noah said between drags on his cigarette, \"what do you plan to do with your life? Surely you aren't planning to be a baggage boy for the rest of your life.\"\n\n\"No sir,\" Saul replied. \"I plan to go into the ministry. I was pretty far behind as far as school goes, but Reggie has been helping me get caught up.\"\n\n\"Why did you choose the ministry? Why not politics or something else?\" Noah asked.\n\n\"I never considered politics as a career,\" Saul replied. \"But then, I never considered the ministry either. To be honest, I never thought that I would get to leave South Carolina let alone be making a decision about a career. May I ask you a question?\"\n\n\"I suppose that's fair since you've answered all of mine,\" Noah replied.\n\n\"The girl that was with you at Christmas; what's her name?\"\n\nNoah gave Saul a sharp glance. His instincts had been right.\n\n\"Why are you asking?\"\n\n\"Well,\" Saul said blushing, \"I see her at church when I go that is, but she seems so... standoffish.\"\n\n\"You don't seem like the type of man that would let something like that stop you,\" Noah said with a small smile. He was remembering how Saul had defended a co-worker.\n\n\"No sir, but I don't want to offend her or anyone else by talking to her.\"\n\n\"Why would they be offended?\" Noah asked even though he knew the answer, but he wanted to see what Saul would say.\n\n\"May I speak frankly?\" Saul asked.\n\nNoah nodded and waited.\n\n\"I don't know how she and the others at church would feel about a white man approaching her. I mean, it took a while before folk stopped giving me funny looks.\"\n\n\"I'll ask the same question that I just asked,\" Noah said, \"are you the type of man that's going to let something like that stop you?\"\n\n\"No sir,\" Saul said after a moment's deliberation. \"I'm not- you aren't going to tell me her name are you?\"\n\n\"No son, I'm not,\" Noah replied as he stood up to leave. \"I would encourage you to keep up with your studies-you never know what's going to happen.\"\n\nSaul watched Noah walk away with the feeling that he had somehow just been tested. He had the same feeling when they met at the train station. But he had to admit that Noah was right. He wasn't the kind of man that would let what other people thought stand in his way. He went over his work schedule in his head. The next Sunday that he would have off would be in two weeks. He decided that if he did nothing else, he was going to introduce himself to the attractive black woman.\n\n***\n\nIsadora couldn't believe that she was entering her second year of college. It had been a busy summer with her two classes and working through the syllabus for her sophomore year. She and Maeve saw each other when time allowed and when Maeve wasn't going out with Ernie. Initially, Maeve was worried that Isadora would be upset, but soon found out that she worried for nothing.\n\n\"Maeve, I'm happy for you and Ernie's a nice guy.\"\n\nMaeve let out a sigh of relief. She didn't know what she would have done if her best friend had a problem with her boyfriend.\n\n\"Isadora, isn't there someone that's caught your eye?\"\n\n\"No and I don't want to catch anyone's eye. I've got to concentrate on school.\"\n\n\"You can still do that and have a little fun,\" Maeve said.\n\n\"Maeve, I don't want to talk about it,\" Isadora said firmly. \"I'm happy for you and Ernie, but I'm not looking nor am I interested.\"\n\n\"Isadora, we've been friends for over a year now. I think of you like a sister. I know that I could come to you with anything and you wouldn't turn me away. In fact, you would do everything possible to help me. I hope that you know that the same goes for me. I'm here for you.\"\n\n\"Thank you, I'll keep that in mind,\" Isadora said as she organized her desk.\n\n\"You aren't going to tell me are you?\" Maeve asked.\n\n\"There's nothing to tell,\" Isadora replied feeling guilty for lying. \"I have goals that I want to meet. Is there something wrong with that?\"",
        "\"Not at all-but with you they seem to be all encompassing. I'm sorry, but that isn't normal. That alone tells me that something happened to you or someone close to you. At any rate, you need to get out and have fun. Why don't you come with us tonight? Ernie won't care-\"\n\n\"No thanks. I want to get ahead on my reading.\"\n\n\"But classes don't start until next week! One night out isn't going to hurt anything,\" Maeve argued.\n\n\"Maybe the next time,\" Isadora replied. \"Have fun.\"\n\nAfter Maeve left, Isadora thought about the names on her list. She already knew who she was going to start with. She would start with the weakest of them and save the main one for last. She wanted him to be as scared as she had been. She wanted him to lose sleep as he wondered when she was going to come for him. She wanted everyone to know what he had done to her and what she had to do because of it. She wanted him to lose everything.\n\nShe stopped herself when she felt her face flush with the heat of anger and hatred. To distract herself, she went to the kitchen to see if she could help with dinner. Maybe Maeve was right, she decided. Maybe she did need a night to just relax and to do something fun. She decided that the next time Maeve asked her to go out, she would go.\n\n***\n\nThe next week flew by in a rush. Each passing day found Patricia a little more nervous even though things at school had settled down for Niko. He loved school even though there were still some minor problems. True to her word, his teacher Miss. Nixon was fair and treated Niko like he was any other student. His favorite classes were math and science which thrilled Miss Nixon. By the end of the first week, the other students had gotten used to seeing him and were slowly beginning including him in on some of their games- especially soccer.\n\nIt was Kenji's first rotation that had Patricia in knots. It would help that she had classes of her own to go to, but it was going to be the nights that were going to be the problem. The day before he had to report to the hospital, Kenji took her out for lunch. He avoided talking about leaving the next day and concentrated on their time together and future plans. He was just as nervous as she was although he didn't admit it. He was sure that he knew what was going through her mind- the nights of sleeping and waking up alone. It was something that he thought about too. He also knew that for her, it would be worse. She had to watch him leave again.\n\nThey got home in time to read with the children before making dinner. After dinner, Kenji spent time with each child telling them what was expected of them.\n\n\"This is going to be very hard for all of us and I need you to be on your best behavior,\" he told each child. \"Your mama is going to need your help and behaving is the best way to help her.\"\n\n\"When will you be home?\" Niko asked.\n\n\"I will be home in five days,\" Kenji replied. \"I know that it seems like a long time, but I will call every evening to say goodnight and to tell you that I love you.\"\n\nTo Niko he had special instructions.\n\n\"I want you to help your mama with Marie. Read to her and play with her while mama studies. Can you do that?\"\n\n\"Yes papa,\" Niko replied.\n\nHis conversation with Marie was in a different direction.\n\n\"Pretty one, I expect you to obey your mama in all things. I don't want to hear that you have misbehaved. Will you give me your word that you will be a good girl?\"\n\nMarie bit her lip and hesitated for several seconds before answering. She knew that if she said yes, she would be expected to do as she promised. Like Niko, she had seen Patricia cry, but it didn't affect her in the same way. She always felt badly when Patricia cried but not as badly as Niko. What made her feel the worst was she thought she had done something to cause the tears. That was never the case and Patricia made sure that she knew it.\n\n\"Sometimes I think about something that makes me sad,\" Patricia told her. \"You, your brother and your papa make me happy.\"\n\nMarie looked at Kenji and made her promise.\n\n\"Yes papa,\" she finally said. \"I promise.\"\n\nAfter the children were tucked in, Kenji took Patricia to bed. His bags were already packed and out of sight. She was crying even before they were settled.\n\n\"I'm sorry,\" she said through her sniffles. \"But this is too much like when you left before.\"\n\n\"I know, but Kirei; it is also different. I had no choice before and something good will come of this. When I am through I will be able to provide for you and our children without help. Do not misunderstand me, I am grateful for all of the help that we have received, but I am ready for us to be self-sufficient. I am long past ready to take care of my family.\"\n\n\"I know that, but it still feels the same,\" Patricia replied. \n\n\"This first week will be the hardest,' Kenji said. \"After that it will get easier. I've stocked up on notebooks so that we can write about our days and I promise to call you every night.\"\n\n\"You'd better,\" Patricia said making an effort to tease. \"And stay away from those pretty female interns.\"\n\n\"That will not be an issue,\" Kenji replied pulling her tight against him. \"There is and will always be only you.\"\n\nHe kissed her nose and then her lips murmuring softly against them.\n\n\"You are my Kirei. Everything that I have done and will do is because of you. I belong only to you.\"\n\nPatricia reached down between them and gently stroked Kenji's erection. He made love to her until she couldn't move. As she fell asleep, he sang softly in her ear.\n\n\"I remember that song,\" she said sleepily.\n\n\"Then you remember how it ends.\"\n\n\"You came back.\"\n\n\"I will always come back,\" Kenji replied and resumed singing.\n\nThe next morning, Hana, Nick and everyone else came over for breakfast to send Kenji off and to spend the day with Patricia and the children. As soon as she had a free minute, Patricia circled the day that Kenji would be home on the calendar.\n\n\"By the way,\" Abby said as she helped clean up the kitchen. \"I'm staying over that way you can use my car to get to classes and I can help with the children.\"\n\n\"Abby...\"\n\n\"No arguments. I'm glad to do it.\"\n\n\"Thank you.\"\n\n\"I can take you to school and pick you up if you aren't comfortable with driving,\" Nick said. \"It isn't much out of my way and you only have classes a couple of days a week.\"\n\n\"Do you mind?\" Patricia asked. \n\nShe knew how to drive, but she didn't want to be responsible for someone else's car.\n\n\"I don't mind at all,\" Nick replied with a smile.\n\n\"I think that I would prefer that option,\" Patricia replied.\n\n\"Then it's settled,\" Nick replied. \"I'll pick you up around seven which will get you there in plenty of time for your classes and me to work on time.\"\n\nNick, Hana and Patricia's parents stayed for dinner and then Nick took them home.\n\n\"I'll see you Tuesday morning at seven,\" he called as they left.\n\nKenji called just before the children's bedtime and spoke to them and then Patricia.\n\n\"I'll call you a little later after the children are settled.\"\n\nPatricia tucked the children into bed, changed clothes and made Abby sleep in her and Kenji's bed.\n\n\"I won't sleep anyway,\" she told Abby when Abby tried to refuse.\n\nAn hour later, Kenji called. Patricia smiled at the excitement in his voice.\n\n\"The rooms are small, but I will survive... Kirei, I miss you and the children.\"\n\n\"We miss you too- so what are you doing tonight?\"\n\n\"Aside from missing you I'm going to start writing in my journal. Kirei, make sure that you get your rest.\"\n\n\"You too- I'm going to start my journal tonight too.\" \n\n\"I look forward to reading it,\" Kenji said. \n\n\"You have to be up early don't you?\" Patricia asked. \"Maybe you'd better get ready for bed.\"\n\n\"I will be fine-I don't want to hang up.\"\n\n\"Neither do I, but Kenji you have a grueling schedule ahead of you. You need to sleep.\"\n\n\"You are right- Kirei, I love you. Kiss the children for me.\"\n\nAfter they hung up, Patricia wiped away a tear and began to write in her journal.\n\n***\n\nMai Kabata sat on her cot exhausted. The trip from Boston, Massachusetts to Los Angeles by train had been exhausting in more ways than one. For one, there were those who seemed to have forgotten that the war had ended and then there were those who thought that she was Korean. It was easier to feign ignorance of the English language than to explain the differences between the two groups. She realized that even if she had tried to explain; it wouldn't have mattered. \n\nIt wasn't long before she was wishing that she had taken her father up on his offer of a berth, but it was too late to change anything. She did her best to remain inconspicuous and to read her medical journals. She slept little during the long trip and was more than ready for her bed.\n\nThe acceptance letter from UCLA had come as a welcome surprise. What made it even better was that her sister lived in the city and she could stay there rent free when she was off rotation. She slowly got up, looked around the small sleeping room. She was tempted to put off unpacking, but she needed clothes for the morning and she still needed to call her father and sister to let them know that she had arrived safely.\n\nAfter thinking about it, she decided to make the phone calls first. That way she could get back to the room and be in for the rest of the night. She tried to remember where she saw a telephone and groaned when she remembered that it was on the bottom floor.\n\n\"Damn it,\" she swore as she put her shoes back on.\n\nShe thought about waiting until the next day, but her family would be worried if she didn't call when she said she would. She looked longingly at the small bed, grabbed her purse and headed to the lobby where she had seen the phone.\n\nAll of the phones were in use so she settled in to wait. The softly accented voice of the tall man using the phone closest to her caught her attention. Her heart leapt with excitement when she realized that the accent was Japanese. When she heard the term 'Kirei', she knew that she was right. She hadn't meant to eavesdrop, but it was nice to hear the voice of a countryman. \n\nShe wondered who he was talking to with such affection. It had to be a woman if he used the word 'Kirei'. Mai thought about her own betrothed Shotaro. She liked him well enough, but she didn't love him. The good thing about him was that he had no problem with her becoming a doctor. He was a resident at a Boston hospital and would be finished in a few months. The plan was that they would marry as soon as she was finished her residency. After that, she would transfer back to Boston and get a job there. The thing that she wondered about was why Shotaro didn't have a problem with her going to the other side of the country. To her it was a confirmation of the fact that he didn't want to marry her. In the end, she decided that it didn't matter. It gave her time to think about getting out of a marriage that she didn't want. She looked away and pretended that she hadn't been listening when she heard the words \"I love you and kiss the children for me.\"\n\nAfter he hung up and turned toward her, Mai's breath caught. It wasn't his height or looks that caught her attention, it was his presence. He exuded confidence and a quiet dignity that she had always liked in a man.\n\n\"Ohayo-hello,\" she said with a slight bow.\n\n\"Ohayo,\" Kenji replied after recovering from his surprise.\n\n\"I am sorry if I am being forward, but I did not expect to meet another Japanese intern,\" Mai said after a few seconds had passed.\n\n\"I am Kenjiro Takeda, welcome.\"\n\n\"I am Mai Kabata. I have just arrived from Boston.\"\n\n\"It is nice to meet you and please, if you need assistance with anything, let me know,\" Kenji said with a polite smile. \"Now if you will excuse me-\"\n\n\"Of course,\" Mai said. \"I will see you in the morning.\"\n\nMai watched Kenji walk away wondering who the lucky woman was. Shotaro had never told her that he loved her or called her by anything other than her name. But then, she never called him by anything than his name either. The bottom line was that he loved her no more than she loved him. What she didn't understand was why it suddenly bothered her.\n\nShe called her father first because of the time difference. She was more acutely aware of how curt and abrasive he was after hearing Kenji talking on the phone and then actually talking to him.\n\n\"I have safely arrived,\" she said quietly when her father answered the phone.\n\n\"Good-I do not need to remind you that I was against you going so far away when you were accepted at the same hospital Shotaro is.\"\n\n\"Yes father.\"\n\n\"To be truthful, I do not understand why he agreed to this.\"\n\n\"Yes father,\" Mai said when what she wanted to say was that it was because he didn't love her.\n\n\"You are to spend your free time at your sister's home and not socializing. Is that clear?\" Her father demanded talking to her as if she was a child.\n\n\"Yes father,\" Mai replied. \n\nA few minutes later, the phone call was over and she was talking to her sister. She knew within the first few minutes of the conversation that her sister was going to be her father's spy. She wasn't as free as she thought she was. After making arrangements to be picked up at the end of the week, Mai hung up and went back to her room.\n\n***\n\nThe next morning, Kenji was up early so that he could call Patricia before he started his day. He checked for his pens that she had given him and put the engraved stethoscope around his neck. Last, he put on the white lab coat and headed to the phones. On the way there, he met Mai who looked lost.\n\n\"Are you looking for the cafeteria?\" he asked.\n\n\"Yes, I haven't had a chance to explore my new surroundings yet,\" Mai replied.\n\n\"I understand,\" Kenji said. \"If you will give me a moment to call my wife and children, I can take you to the cafeteria. I am going there as well.\"\n\n\"Thank you,\" Mai said. \n\nShe stood back and listened as Kenji spoke to someone in low soft tones. A moment later, the tone while still soft had changed. It had taken on an almost erotic quality in that the pitch dropped a notch. Mai knew that he was now talking to the woman who had to be his wife.\n\n\"Did you sleep well?\" he asked. \"Yes Kirei, I did and I wrote two pages in the journal... You did? I cannot wait to read it...I am going now... yes... I love you too.\"\n\nAs she listened to Kenji talk, Mai realized that even if Shotaro loved her; he would never talk to her as Kenji had just spoken to his wife. Kenji intrigued her enough that she wanted to know more about him.\n\n\"Are you ready for breakfast?\" Kenji asked when he was through with the phone call.\n\nA short time later, they were in the cafeteria. She followed Kenji through the line and to a table where several other interns sat. She was impressed with the way in which they seemed to accept him.\n\n\"It's too bad that Joel and Penny had to go east,\" one of them said between bites of egg.\n\n\"Yes, but they are adjusting to New York,\" Kenji replied. \"Please allow me to introduce a new colleague. This is Mai Kabata. She arrived from Boston last night.\"\n\nKenji introduced the others at the table to Mai and ate his breakfast. One of the things Patricia was concerned about was that he wouldn't take time to eat. He had his fork partway to his mouth and stopped. He missed her and the chatter of the children. He forced himself to finish eating and participate in the conversation.\n\n\"How do you know them?\" Mai asked as they walked to the conference room for their assignments.\n\n\"I graduated from UCLA,\" Kenji replied. \"Some of those at our table graduated with me.\"\n\n\"It must be nice to have friends already,\" Mai commented looking up at him.\n\n\"You will soon make friends,\" Kenji said reassuringly. \"When we have time, I will take you on a tour of the campus if you wish.\"\n\n\"I would like that,\" Mai replied.\n\n****\n\nThe week couldn't go by fast enough as far as Patricia was concerned. It felt as though it had been a month instead of a week. Niko was standing watch by the window ready to sound the alarm as soon as he saw the car. He had so much to tell Kenji and like Marie and Patricia; he could hardly wait.\n\n\"Mama! Papa's home!\" he yelled and ran to the garage.\n\nAs soon as the car was parked and Kenji got out, Niko tackled him almost knocking him off balance. Marie was next, crying out for him as she ran toward him. That told Kenji that the little girl had indeed kept her promise to behave. Patricia stood by the door watching and waiting her turn. Finally Kenji was done with greeting the children.\n\n\"I smell dinner,\" he said with eyes glued on Patricia. \"Niko take your sister inside and get ready for dinner. I need to greet your mother.\"\n\nPatricia's body tingled as she returned Kenji's gaze. As soon as the children were indoors, Kenji was in front of her in three long strides and hugging her. Patricia bit back a moan as he rubbed against her. \n\n\"Do you feel how much I've missed you?\" He asked.\n\n\"I missed you too,\" Patricia replied as she cupped his ass in her hands and squeezed. \"I have a surprise for you.\"\n\n\"What is it?\" Kenji asked as he nuzzled his nose in her hair.\n\n\"Well, Abby is coming back later to sleep in our room. We're going to spend the night in the basement. It's already set up with water and everything else that I can think of including sugar cookies.\"\n\n\"Will there be a night gown for me to remove?\" he murmured against her lips.\n\n\"Maybe,\" Patricia teased pressing her lips against his. \"We'd better get inside. Dinner is ready.\"\n\n\"Have you been a good girl?\" Kenji asked Marie as they ate dinner.\n\n\"Yes papa,\" Marie replied. \"I helped mama clean the house and bake cookies.\"\n\n\"That is good pretty one. Thank you for keeping your word.\"\n\n\"Niko how is school?\" Kenji asked.\n\n\"I like my teacher,\" Niko replied, \"and the others are starting to let me play with them.\"\n\n\"I am pleased to hear that,\" Kenji replied.\n\n\"Papa? What is it like? Being a doctor I mean.\" Niko asked.\n\n\"I am not really a doctor yet,\" Kenji replied, \"but I aside from missing all of you, it was an enjoyable week.\"\n\n\"I think that I want to be a doctor like you and mama,\" Niko announced.\n\n\"It is a lot of work,\" Kenji said, \"but when you are ready to decide we will help you.\"\n\n\"I already know,\" Niko insisted. \"I want to be a doctor like you and mama. I have a new friend too,\" Niko added as an afterthought.\n\n\"What is the name of this friend?\" Kenji asked.\n\n\"Florrie Lane. She was in the first class with me-she was the first one to be nice to me. The other's pick on her, but I don't.\"\n\n\"Why do they pick on her?\" Kenji asked as he took a bite of pie.\n\n\"They call her names like fatso and four eyes,\" Niko replied. \"But I like her and try to get the others to leave her alone.\"\n\n\"I am glad that you have each other,\" Kenji said. \"Niko, take your sister and pick out some books. I will read with you before it is your bedtime.\"\n\n\"Dinner was delicious,\" Kenji said as he helped Patricia clear the table.\n\n\"That's because you're tired of cafeteria food- is there a refrigerator available?\"\n\n\"There is, but from what I understand; no one respects the property of others. But I appreciate the thought.\"\n\n\"I can at least send things for you to snack on,\" Patricia replied. \"We've been busy making sugar cookies for you and I can send back sandwiches this time too.\"\n\n\"I don't want to talk about going back; I just got home,\" Kenji said\n\nPatricia realized that she was already mentally preparing herself for Kenji's leaving again instead of fully enjoying the fact that he was home. The next four days would pass quickly enough.\n\n\"I'm sorry- I'm already preparing myself for when you have to leave again. Why don't you go read with the kids and I'll finish up here.\"\n\n\"It will go faster if I help you,\" Kenji replied. \"I want you with me when we read to the children. What time is Abby coming back?\"",
        "\"She said around eight,\" Patricia replied as she washed the last dish, rinsed it and handed it to Kenji. \"She's planning to stay until the afternoon so that we can sleep in.\"\n\nAbby arrived just before eight. Kenji had just finished the last story for the night and was going to help the children get ready for bed.\n\n\"Let me do that,\" Abby offered.\n\n\"Thank you, but no,\" Kenji replied. \"This is one of the things that I missed when I was away. \n\nTogether Kenji and Patricia got Niko and Marie ready for bed and sat with them until they were asleep. Afterwards, they talked with Abby.\n\n\"I can't tell you how proud I am of you,\" she said. \"I know that Ralph would be just as proud.\"\n\n\"None of this would have been possible without your help,\" Kenji replied.\n\n\"You would have found a way, but you're welcome,\" Abby replied. \"I have an idea that I want you to think about. Niko and Marie are getting too big to be sharing a room. The house that I'm in now has three bedrooms and half a bathroom in addition to the full one. The basement is finished so it would be an easy matter to turn it into an extra bedroom/ study space. What I'm suggesting is that we swap houses.\"\n\nKenji and Patricia looked at each other and then back at Abby.\n\n\"We will talk about it,\" Kenji said, \"but won't going up and down the stairs be difficult for you? Your current home is on one floor.\"\n\n\"That isn't a problem,\" Abby replied. 'I'm still steady on my feet. As I said, just think about it. Speaking of stairs, I think I'll go up to bed. I have a new book that I want to start.\"\n\nAfter giving each of them a hug and kiss, Abby slowly climbed the stairs.\n\n\"We can't let her move back in here,\" Patricia said when Abby was out of earshot. \"If she falls down the stairs, she could be on the floor for hours before anyone finds her.\"\n\n\"I agree, but we don't have to decide now,\" Kenji said as he stood and then held out a hand to her. When she took it, he pulled her to her feet and led her to the basement.\"\n\n\"Kenji what if...\"\n\n\"Later,\" Kenji said as he pulled her along. \n\nWhen they were in the basement, he stopped and turned toward Patricia.\n\n\"Are you ready for me?\"\n\n\"Not quite... I need to change and...\"\n\n\"Is the device in place?\"\n\n\"Yes but...\" \n\n\"Then you are ready-Kirei, I have missed the feel of your body next to mine,\" he said as he bent down to kiss her. \"I have missed waking up, kissing your shoulder and then falling back to sleep holding you tight against me. This past week, as wonderful as it has been was missing something-you.\"\n\n\"I'm with you in spirit,\" Patricia said as she pulled his shirt out of his slacks and began to unbutton it. She ran her hands under his t-shirt stopping to pinch his nipples. Kenji sighed in contentment.\n\n\"Kirei, undress for me. I want to look at you.\"\n\nPatricia stepped back and undressed letting the dress fall to the floor around her feet. With her eyes on Kenji's face, she slowly removed the bra and then finally the panties. She watched Kenji's breath quicken and the bulge in his slacks grow until it strained against the fabric.\n\n\"Your turn,\" she whispered. She licked her lips as he shrugged off his shirt and tossed it to a chair. The t-shirt was next and then the slacks. Kenji stood before her dressed in only his briefs. Patricia's mouth watered at the thought of tasting him. She felt moisture gathering between her legs as she walked toward him. When she was standing in front of him, she reached into his briefs and pulled his engorged member out and lovingly stroked it.\n\nKenji closed his eyes enjoying the feel of her soft hand on his cock. Suddenly, he could wait no longer. He took the briefs off, took hold of Patricia's arms and guided her to the bed. She no sooner than had her legs open than he was inside of her moaning at the contact.\n\n\"Oh Kirei- you feel so good... don't move yet...don't...\" even as he said it, he began moving against her.\n\nHe bent down and kissed her gently at first and then with more urgency. Patricia returned the kiss writhing beneath him. She cried out when he left her lips and went to the sensitive spot behind her ear and sucked on it. She buried her face in his shoulder and screamed into it as she came. Kenji came with a muffled moan just after Patricia did.\"\n\nAfterwards, he lay on top of her reluctant to move. Only when he slipped out of her did he roll off and pull her into his arms. Neither of them spoke for several minutes as they caught their breath. Patricia kissed his chest and then laid her head on it.\n\n\"Tell me about your week,\" Kenji said when she was settled.\n\n****\n\nMai looked out into the warm California sunshine and made a decision. She wasn't going back to Boston when she was done with her residency and she wasn't going to marry Shotaro. The thing was that she couldn't say anything until after she was through with the program and had taken boards. If she said anything sooner, her father would stop paying her expenses and make her go back to Boston. The wedding to Shotaro would happen immediately and she would be trapped. \n\n\"What are you thinking about?\" her sister Ani asked as she poured orange juice into the glass in front of Mai.\n\n\"Nothing really- it really is beautiful here. I could learn to like it here.\"\n\n\"Well maybe after Shotaro is finished his residency, he'll move here and you can live here. When is he coming to visit?\"\n\n\"I don't know. His schedule is very busy,\" Mai replied hoping that he never came.\n\n\"You must miss him,\" Ani said. \"I couldn't be away from Jiro like that.\"\n\n\"So you love him?\" Mai asked.\n\nAni and Jiro's marriage had been an arranged one just as hers and Shotaro's was. If Ani had been upset about being made to marry someone that she barely knew, she hadn't shown it.\n\n\"What does that have to do with it?\" Ani asked. \"Jiro is gentle, sweet and kind. It could have been worse. It could have been some old man who wanted a slave instead of a wife.\"\n\n\"So you don't love him?\" Mai asked.\n\n\"I don't dislike him,\" Ani replied evading the question.\n\n\"Don't you think that you should more than like him?\" Mai asked thinking of Kenji and the way that he had spoken to his wife and children.\n\n\"I don't know... we're not the ones to decide these things. But- it pressed for an answer, I more than like Jiro. I guess I would have to say that I love him. But why are you asking these questions about love? Have you met someone?\"\n\n\"No,\" Mai lied. \"Well, just a fellow intern who happens to be Japanese. Don't worry, he's married and has children. And besides, father would never forgive me if I went against his wishes. I am only here because you're here and Shotaro agreed to let me come.\"\n\n\"What does this intern have to do with your questions?\" Ani asked. \"And that's another thing, I have to agree with father; I don't understand why Shotaro agreed to let you leave Boston. Shouldn't you have accepted the position at his hospital? That way you could have gotten to know each other better.\"\n\nMai tried to think of a good answer. She had forgotten how astute her sister was.\n\n\"I hear him talking to his wife and children-Ani, the love that he has for them is clear in his voice. He always ends the call by telling them that he loves them. The other interns-even the married ones are already chasing the nurses, but not him. When the day is over, he goes to dinner and then to his room. As far as Shotaro is concerned, I was as surprised as you that he agreed to let me come here.\"\n\n\"Mai, be careful. I recognize that tone in your voice when you spoke of the intern. He is married and as you say, he loves his family. Even if that weren't the case, you are betrothed to Shotaro.\"\n\n\"I realize that, I was simply answering your question,\" Mai replied. \"So what are the plans for today?\" she asked changing the subject.\n\nAni gave her a sharp glance and then answered the question.\n\n\"Jiro is gone on a business trip and won't be back until tomorrow night so I thought that we could do some shopping and send a few things to father.\"\n\nRelieved that Ani had let the subject of Kenji drop, Mai quickly agreed to go shopping.\n\n\"I have some things to do for the hospital, but it can wait until later.\"\n\nAs they got ready to go, she wondered what Kenji was doing and if his wife loved him as much as he apparently loved her.\n\n****\n\nSaul couldn't wait any longer. During one of his lunch breaks he called Nick.\n\n\"It's been weeks, what's happening?\"\n\n\"I told you that this would take time,\" Nick replied. \"Your family is still safe and we're looking for present and former inmates who will attest to what you told us, but so far; no one's talking.\"\n\n\"What about your friend Charles? I thought that he had connections.\"\n\n\"He does,\" Nick replied. \"But Saul, it's only been a few weeks. The longer we keep this under wraps the better. If Ellis suspects that we're gunning for him, people will start disappearing and he will go after you, your family and anyone else that he thinks will turn on him. I know that it's hard, but you have to be patient. Is there anything that you need?\"\n\n\"No. I guess I'm a little anxious,\" Saul replied.\n\n\"That's perfectly understandable,\" Nick said. \"I'll tell you what; do you still go to the library on Thursdays?\"\n\n\"Yes.\"\n\n\"It isn't that far from me, so every Thursday I'll stop by and leave a note for you at the desk. A blank note will mean nothing and my initials will tell you to call me. Will that help ease some of your anxiety?\"\n\n\"I think so,\" Saul replied. \"Thank you.\"\n\nHe hung up feeling a little better about that situation, but now concern about another matter took precedence: Harry.\n\nOver the summer his attitude had become surlier. When Saul asked him about it, Harry told Saul that he was imagining things. If Saul pushed, Harry got angry and told him to mind his business. Instead of eating lunch together, Harry began eating lunch with Dewey and a few others that Saul didn't know. When he asked the others about the group, they became evasive. Finally one of the luggage boys pulled him aside.\n\n\"Looky here,\" he said in a harsh whisper. \"All you gots to know is that your white ass is safe. If you don't keep your questions to yourself it won't stay that way no matter what Harry says.\"\n\nBefore Saul could say anything, the man stalked off.\n\n****\n\nTwo weeks later, Saul nervously got ready for church. He was shaved, showered and dressed long before anyone else was. He was so nervous that he couldn't eat breakfast.\n\n\"Saul? Are you alright?\" Cora asked.\n\n\"I'm fine ma'am,\" Saul said as he tried to eat.\n\nReggie eyed him up and down and then grinned.\n\n\"It's a female! Look at him! He's shaved, his shirt is ironed... so who is she? Where are you meeting her?\"\n\nSaul hesitated and decided to answer the question truthfully.\n\n\"I'm meeting her at church.\"\n\n\"Church?\" Joshua asked surprised. \"You found a white woman who will step inside of a black church?\"\n\nSaul squirmed in his seat. Noah's question about the kind of man he was went through his mind.\n\n\"No sir, she attends our church.\"\n\nThree pairs of eyes stared at him, but it was Cora who spoke first.\n\n\"Saul, honey; who are you talking about?\"\n\n\"I don't know her name-yet, but I plan on finding out today.\"\n\n\"Saul, you know that we love you as if you were family-in fact, we consider you family,\" Joshua said, \"so I'm going to talk to you like family. Saul, I don't' know what you're thinking, but no good can come of it.\"\n\n\"Why? Is it because I'm white? You know, you all preach that in the eyes of god we're all the same, so why does it matter?\"\n\n\"Because it's not the eyes of god that we're talking about,\" Joshua replied, \"it's the eyes of man and his eyes aren't forgiving.\"\n\n\"First of all, aside from seeing me at church, she doesn't know that I exist so this discussion may be a moot point. But- if after today she expresses an interest in getting to know me better, then I'll pursue it. Before you say it, I know and understand what I may be getting into, but like everything that I've been through, I'll take it as it comes.\"\n\n\"Well damn,\" Reggie said after a few minutes. 'I think I might have to stick around to see how this plays out.\"\n\n****\n\nIsadora got ready for church, ate breakfast and did some reading while the others got ready. After church she planned to sit in the back yard and write a letter to her parents and Mr. Whitman. What she wanted was for him to keep her informed of the doings and whereabouts of the four that kept her focused.\n\n\"Izzy! We're ready to go! Lenny called.\n\n\"Coming!\" she called back as she grabbed her purse and fan.\n\nThe church was half full when they got there giving them a good selection of seats. They sat toward the back so that Bella or Lenny could take restless children out for a bit of fresh air with minimal disturbance. For some reason, to Isadora; once the service started; it seemed to drag. She could have sworn that the pastor's sermon went much longer than its usual hour, but when she looked at her watch, only minutes had ticked by. To help pass the time, in her mind she began to draft a letter to Whitman. She had to find a way of asking for his help without telling him why she wanted the information.\n\nFinally, after what seemed to be hours, the service was over. She turned to speak to the people who were sitting behind her and stopped.\n\n****\n\nSaul walked into the church looking for a place to sit when he saw Isadora sitting near the back of the church. There were two empty seats behind her and no one looked interested in them. He tapped Joshua on the shoulder and pointed to the empty chairs telling him that's where he was going to sit. Joshua looked at him, started to say something, but nodded and walked away.\n\nHe slid into the seat behind Isadora and only half listened to the service. He was thinking about what Joshua said about the eyes of man, but he kept thinking about the eyes of god. The bottom line was who he was going to listen to- god or man. By the end of the service, he decided to listen to himself and god. If the beautiful woman sitting in front of him wasn't meant for him, then so be it. But he wasn't going to let what anyone said or thought keep him from finding out.\n\nSaul didn't see Noah sitting far to the back and in a corner watching and waiting to see what would happen. As soon as the benediction had been said, Saul stood up. Oddly, he was no longer nervous as he waited for Isadora to stand and turn around.\n\nWhen she saw him, he saw a trace of fear and then apprehension. A second later, the look was gone replaced by a guarded curiosity.\n\n\"Hello, my name is Saul Mullins,\" he said and offered his hand.\n\nAfter several seconds, Isadora offered her hand. \n\n\"Hello, I'm Isadora Hughes.\"\n\nNoah nodded and smiled in approval as he stood to leave. Saul had just passed a major test.\n\n***\n\nEach time Kenji was home and then had to leave was as difficult as the first time, but they all adjusted. The exchanging of notebooks helped and the fact that Patricia was back in school also helped. It wasn't until Kenji's second time home that he mentioned Mai.\n\n\"She is one of the few female interns there which is difficult, but she is also one of the few Japanese interns as well.\"\n\n\"So why is she latching onto you?\" Patricia asked fully aware that she was sounding like a jealous woman.\n\n\"I was the first Japanese intern that she met,\" Kenji replied. \"I am sure that you'll meet her when you come to have lunch with me.\"\n\n\"When is that?\" she asked excitedly forgetting about Mai. \"I have to set up baby-sitting for the kids.\"\n\n\"You are already at school on Thursday and I also come home that day. I will meet you at the hospital cafeteria and we can come home together. You will have to wait for me for a couple of hours, but you can study while you wait.\"\n\n\"That sounds wonderful!\" Patricia replied.\n\nAs always, it was hard to watch Kenji go, but knowing that she would see him a few hours earlier on Thursday helped. \n\n\"Oh, by the way,\" she said, \"make sure that you look in your notebook-the one that you take your notes in. I think that there may be something in there for you.\"\n\n\"Are you going to give me a clue?\" Kenji asked as he reached for his bag.\n\n\"No and you have to wait until later to look, you're going to be late.\"\n\nKenji looked at the clock and grimaced. Patricia was right. He still needed to read with the children before he left.\n\nHe read the story, kissed the children and then Patricia.\n\n\"I will call you and the children later.\"\n\n\"Okay and let me know what you find in your notebook,\" she said hugging him.\n\nA few minutes later, Kenji was gone.\n\n**** \n\nKenji got to the hospital early enough to have his choice of rooms. But his room of choice was on the top floor. It eliminated the sounds of people walking across the ceiling above him and he had access to the roof where he practiced his martial arts during his down time. There was no problem with getting the room because it was on the top floor. He had met the resident who used the room once and they had decided to save the room for each other. Kenji was pleased that the other student was as meticulous as he was and that he didn't have to clean before he could unpack.\n\nOnce unpacked, Kenji decided to see what was in his notebook. He sat on the narrow cot and took the notebook out and opened it. Glued to the inside cover was a picture of Patricia and the children. Underneath it was a caption-'we love you!' He touched the picture and smiled. Just as he put the notebook down, another picture fell out. It was identical to the one taped to the book. Kenji held it in his hands for several seconds before deciding where to put it. Moments later, it was taped to the wall beside the bed.\n\nThe week passed quickly. Before he knew it, Thursday had arrived. His bags were already packed and the room cleaned for the intern who would be using the room after him. The last thing he did was to take the photograph down and to put it in his bags. He left the room, locked the door behind him and headed for the cafeteria.\n\n***\n\nMai had spent the week when she wasn't busy trying to find out about Kenji without being obvious. All she heard was that he had been among those interred and that he was brilliant as a student. She also heard that the hospital was planning to make him an offer to stay after his residency. That she discounted as being a rumor. She heard nothing about his family other than he loved them to a distraction- but then she already knew that. Every so often she would offer a bit of personal information about herself in the hopes that he would reciprocate. So far it hadn't happened. She watched him as he interacted with the female nurses and interns and once again noticed that he was nothing but professional. Even when he was blatantly flirted with, he ignored it. She wondered how different he would be in a social setting.\n\nThe week sped by for her as well. The only time she saw Kenji was during the pre and post round conferences. Every so often she would see him open his notebook, look at something in it and then touch it. She wondered if whatever it was had something to do with superstition although he hadn't struck her as the superstitious type. Sometime on Wednesday, she saw him talking to another resident and made a decision. She was going to ask him to lunch the next day.\n\nThursday morning, Mai dressed with care. She knew that she was treading on thin ice, but she couldn't seem to stop herself. Ani's warnings rang in her head, but she ignored them and told herself that she was inviting Kenji to lunch as a thank you for his kindness. She pushed thoughts of her obligations to Shotaro and her father out of her mind as she double checked her hair and applied a thin layer of lipstick. \n\n\"This isn't a date,\" she murmured under her breath as she wiped the lipstick off.\n\nShe met Kenji at the cafeteria with a bright smile.",
        "\"Good morning! Did you rest well?\"\n\n\"Yes, thank you,\" Kenji replied with a polite smile. Somehow the question felt too intimate to him each and every time she asked it. He finally understood why- it was something that he and Patricia asked each other every morning. Because of that, he didn't ask Mai how she slept then or in the past.\n\n\"I never properly thanked you for being so kind to me,\" Mai said. \"I would like to thank you by buying your lunch.\"\n\n\"I only did what was right,\" Kenji replied, \"But thank you for the offer. I am meeting my wife for lunch today and then we will go home together.\"\n\n\"She is coming here?\" Mai asked trying to hide the disappointment in her voice.\n\n\"She is a student at the college working toward her undergraduate degree,\" Kenji replied. \"I would like for you to meet her.\"\n\n\"Of course, what time is lunch?\" Mai asked.\n\n\"She will be here by one o'clock. She is looking forward to meeting you,\"\n\n\"I am looking forward to meeting her as well,\" Mai lied.\n\nThey parted ways to go to their assignments a moment later. Kenji excited about seeing Patricia, Mai wanting to get out of it.\n\n****\n\nPatricia felt like a schoolgirl going on her first date. While she knew many of the interns that Kenji worked with, this was the first time that she was meeting him as a doctor's wife. She looked through the closet and took out the light green dress that was Kenji's favorite. She sprayed a little perfume on her pulse points and took down her hair.\n\n\"You look very nice,\" Hana said when Patricia came down the stairs.\n\n\"Do you think so?\" Patricia asked.\n\n\"You look pretty,\" Niko said looking up from his breakfast.\n\n\"I agree,\" Nick said, \"are you ready to go?\"\n\nPatricia kissed the children goodbye and admonished them to be on their best behavior.\n\n\"Patricia, Abby is coming over to take Niko to school and then take us to do some grocery shopping, do you need anything?\" Hana asked.\n\n\"I don't think so...well maybe some eggs and bacon, if you don't mind and don't let Marie con you into buying her candy or any other sweets and you, young lady; don't bother to ask.\"\n\n\"Yes mama,\" Marie mumbled.\n\nPatricia could hardly focus on class, she was that excited. She quickly packed up her things and ran out of the classroom only stopping when she saw Isadora and Maeve.\n\n\"Look at you,\" Isadora said when she saw her. \"Where are you off to all dressed up?\"\n\n\"I'm meeting Kenji for lunch at the hospital,\" Patricia replied. \"I wanted to look nice. But I'm glad that I ran into you. I was thinking of having a party over Thanksgiving break depending on Kenji's schedule. I'll keep you posted.\"\n\n\"Ok, but Patricia; you really do look nice,\" Maeve said.\n\nThey chatted for a few more minutes before Patricia hurried off.\n\n\"She's one lucky gal,\" Maeve commented as they watched her rush out of the front door.\n\n****\n\nPatricia made it to the cafeteria entrance with ten minutes to spare. She filled the time by looking at the menu that was hanging from the wall.\n\n\"Hello Kirei,\" Kenji said from behind her, \"I am glad that you're here.\"\n\n\"Hi yourself,\" Patricia replied turning to face him.\n\nKenji looked her up and down in a way that made her tingle and smiled.\n\n\"You are wearing my favorite dress. Thank you.\"\n\n\"I didn't know what to wear so I chose this,\" Patricia replied.\n\n\"You are beautiful no matter what you wear,\" Kenji said touching her arm. \"Let's get our lunch and find a table. I have invited Mai to join us so that you can meet her.\"\n\n\"Oh... ok,\" Patricia said not sure that she really wanted to meet the intern. She had a bad feeling about her but didn't know why. She had finally chalked it up to a silly insecurity on her part but now she wasn't so sure.\n\n\"I don't believe that she will stay long, her sister is coming for her and she needs to have everything done as do I.\"\n\n\"Ok,\" Patricia said. \"So this is where you eat all of your meals.\"\n\n\"It is nowhere as delicious as the meals you make, but it fills the stomach,\" Kenji replied as he guided her through the line. \"And in a few years, you will be eating the same food.\"\n\n\"That's assuming that I get accepted,\" Patricia said as she picked up what looked like a tuna fish sandwich.\n\n\"Of course you will,\" Kenji assured her as he picked up the same kind of sandwich as her.\n\nKenji paid for their food and headed toward an empty table. Patricia looked around the large room amazed at all the doctors and interns. A sense of excitement and nervousness filled her as she saw herself in the same room wearing the stethoscope that Kenji had given her around her neck and a white lab coat.\n\n\"Where's your friend?\" she asked a few moments later.\n\n\"I don't know,\" Kenji replied. \"She must have gotten busy.\"\n\n***\n\nMai didn't want to meet Kenji's wife. In fact, she didn't want to know anything about her. She sighed and forced herself to go to the cafeteria. If she didn't, Kenji would ask what happened and what would she say?\n\nShe got to the cafeteria toward the end of the lunch break and looked around for Kenji. She spotted him across the room sitting with a black woman whom he appeared to know very well. Thinking that his wife hadn't shown up and the black woman was no more than an acquaintance, she walked boldly across the room to the table.\n\n\"Mai,\" Kenji said standing up, \"please join us.\"\n\n\"I only have a moment, I am sorry that I missed meeting your wife.\"\n\n\"No you haven't,\" Kenji said. \"Allow me to make the introductions. Mai Kabata, this is my wife Patricia. Kirei, this is Mai; the fellow intern that I told you about.\"\n\nMai was speechless. This was who Kenji called every morning and every night? This was who he never hung up without saying 'I love you 'to?\n\n\"Hello,\" Patricia said with a smile that didn't quite reach her eyes. \n\n\"Hello,\" Mai said softly still recovering from her shock. \"It is nice to meet you. Your husband has been very kind to me.\"\n\n\"Will you join us?\" Kenji asked, \"We have a few moments left.\"\n\n\"No thank you, I need to pack up my things,\" Mai said and walked away.\n\nPatricia watched Mai hurry away and wondered if Kenji was aware that the intern at the very least had a crush on him. She decided not to say anything. Their marriage had always been based on mutual love, trust and respect and it had to continue that way.\n\n****\n\nMai rushed to her room and shut the door. She still couldn't believe that Kenji was married to... to one of them. How was that even possible? She wondered as she packed her bags. And there were children too. \"Kirei\" she muttered under her breath, \"she is far from it.\"\n\nMai stopped to remind herself that it didn't matter who or what Patricia was- Kenji was married to her and he loved her. But she didn't understand it. How was that even possible? How and where would they have met? Jealousy raced through her veins as she realized that an inferior being had what she would never have if she married Shotaro.\n\nShe took a deep breath and made herself calm down so that she could think. She knew that the reasonable and right thing to do would be to leave it alone. She could also ask Kenji how he had managed to break away from tradition so that she could do the same. She would never marry an inferior, but she would be able to do as she wished.\n\nShe finished packing and returned to the conference room still undecided about what she was going to do. When she saw Kenji sitting in the front row, she was going to sit elsewhere. Instead, she took the seat next to his. Without being fully aware of it, Mai had just made her decision.\n\n***\n\nPatricia sat in the medical library with her books opened, but not looked at. She was examining her feelings about the female Japanese intern. Was her reaction because of insecurity? Kenji had been around many single women over the years and she had never reacted as she had but-none of the others had been Japanese. He had been interred with hundreds of Japanese women and she hadn't given it a thought so what was it about this woman that had her so on edge? \n\nShe tapped her fingers on the table and took a closer look at her reaction and the meeting. It was clear that the intern had been shocked. In fact, she didn't think that she and Kenji had been together, but that was understandable since Kenji obviously hadn't told the intern that she was black. Patricia picked up her pencil and began to absently draw abstract designs on her paper. \n\nThe longer she thought about it, the more Patricia came to believe that jealousy had nothing or very little to do with it. Mai Kabata was going to be trouble. She could feel it in the pit of her stomach. Since nothing had happened, she decided to let it go in the hopes that it would pass.\n\n***\n\nTwo hours later, Kenji came for her in the library.\n\n\"Are you ready to go home?\" he asked kissing her cheek.\n\n\"I am if you are,\" she replied as she gathered her books.\n\n\"Did you get much studying done?\" Kenji asked.\n\n\"Not really, I was thinking about some things-Kenji, will you do something for me?\"\n\n\"Anything- what is it?\"\n\n\"You know what? Never mind. Let's go home.\"\n\nKenji gave her a curious glance. Something was on her mind and he was going to find out what it was. If he had to guess, he would say that it had something to do with Mai. He was aware that Mai's interest in him was more personal than he was comfortable with and that's why he wanted her to meet Patricia. His hope was that Mai would see that he was very much in love with his wife and that it would end whatever it was that she was thinking. He decided to give it more time and if Mai still appeared to be too interested in him personally, he would talk to her.\n\nAs they left the building, they met Mai as she was going to her sister's car.\n\n\"Kenji! I am so sorry that I missed lunch with you and your wife. Perhaps we can try again sometime.\"\n\n\"Have a pleasant time with your family,\" Kenji said as he put his free arm around Patricia. \"Please excuse us, our children are waiting for us at home.\"\n\nPatricia listened to the exchange without comment noticing that while she was being talked about, Mai was talking around her. Kenji's response to Mai's statement told her that he was aware of the intern's interest in him. His response was a message to Mai that he wasn't interested in her in the same way. Now all that was left to do was to wait and see if she got the message.\n\n****\n\nBy the end of 1951:\n\nThe city of Seoul is captured by the North Korean and Communist Chinese forces.\n\nU.N. forces are forced to leave Inchon, Korea after a twelve hour attack.\n\nThe Commission in Internal Security and Individual Rights is created by President Truman.\n\nAtomic testing begins in the Nevada desert.\n\nAlfred Krupp and twenty-eight other German war criminals were freed.\n\nStalin states that the U.N. was becoming the weapon of aggressive war.\n\nFBI director J. Edgar Hoover initiated a nationwide program designed to remove politically suspect people from their jobs.\n\nThe 22nd amendment which limits the term of a president to two terms of office is passed.\n\nThe 38th parallel which divides North and South Korea is crossed by U.N. forces.\n\nHusband and wife Julius and Ethel Rosenberg are sentenced to death on charges of selling U.S. atomic secrets to the Soviet Union.\n\nThe draft is extended until 1955 and the draft age is lowered to eighteen.\n\nThe first commercial color telecast took place. CBS transmitted a one hour special from New York.\n\nAn artificial heart is demonstrated by Professor Youngblood.\n\nThe last all-black military unit-the US 24th Infantry Regiment is deactivated.\n\nThe North Koreans gave the Allies a list containing the names of 3,100 POWs\n\nThe number of back yards shelters as protection against the A-bomb began to grow\n\nJapan is restored to full sovereignty after the San Francisco Treaty is signed. The emperor is restored, but the parliamentary regime was installed. The Japanese military is emasculated.\n\nThe 'Cold War' begins.\n\n***\n\nCivil rights\n\nA bill was passed in NYC prohibiting racism in city-assisted housing.\n\nRacial segregation in restaurants is ruled illegal in Washington D.C.\n\nA mob attempted to prevent a black family from moving into an all-white Cicero, Ill.\n\nThe George Washington Carver National Monument located in Joplin, Missouri becomes the first national park honoring an African American.\n\nIn Delaware, a suit was placed on the behalf of black children by Louis Redding. The children were not permitted to enroll in white public schools. A court ruled in favor of the suit, but the state appealed. The suit became part of the Brown vs. Board of Education suit of 1954.\n\nIn response to the mob murder of Willie Earle, South Carolina passed an anti-lynching law. Earle was dragged from jail and hung in retaliation for the death of a cabbie. \n\n**************"
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "japanese man",
        "black woman",
        "racism",
        "post ww2",
        "historical drama",
        "drama",
        "historical romance",
        "historical",
        "interracial romance",
        "romance novella"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/i-will-love-you-forever-pt-2-ch-17"
}