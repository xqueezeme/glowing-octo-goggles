{
    "title": "Embracing the Tension Ch. 11",
    "pages": [
        "Hi guys! \n\nThis is the last chapter of Embracing the Tension. I thought about breaking it up into two smaller chapters, but I figured I've tortured you guys enough already! \n\nThanks for sticking with me through this very long journey and I hope the ending lives up to its promise! \n\nYours, \n\nHudson \n\nCopyright \u00a9 2018 by Hudson Bartholomew. All rights reserved. This story or any portion thereof may not be reproduced or used in any manner whatsoever without the express written permission of the publisher except for the use of brief quotations in a book review. \n\n***** \n\nEmbracing the Tension - Chapter 10 \n\nThe three weeks between New Year's and Amanda's wedding in San Francisco were the most difficult three weeks of his life. Bodily, he was in New York, but his mind and his heart were in Toronto, and he felt like he was living in some strange limbo state that he couldn't wake up from. He forced himself to go through the motions of life, accepted invitations to dinners and parties, drinking too much, and always coming home to crawl into bed wearing the soft red t-shirt he'd stolen from Ryan and that still held Ryan's scent. \n\nThe first thing he did every morning was wait until the clock ticked seven a.m. to give Ryan his wake-up call. It usually consisted of him chatting away while Ryan grumbled into the phone. \n\nWork was probably the only thing that seemed to be looking up. The meetings he had were productive, people who had promised to get back to him were getting back to him, and things were moving forward. The script to one project had been finalized, and a director for another project had signed his contract. He was actively negotiating terms of funding with a couple of production houses. And yet, that all felt empty. Like he was just going through the motions with no real interest or stake in the outcome. \n\nGetting on the plane to San Francisco was the first thing he had actually wanted to do in the three weeks since he'd been back in New York. And he knew that the short weekend away wasn't going to be enough to satiate his need for Ryan. \n\nErik walked out of the secured area and immediately spotted Ryan waiting for him, arms crossed, eyes intent, with bags at his feet. It was like he had some homing beacon that Erik's eyes latched onto and sought out even in the crowded airport. The lopsided grin graced Ryan's lips as Erik approached. It felt like every other time he landed in Toronto and Ryan was there to pick him up. \n\nHe stopped a foot away from Ryan and they just smiled at each other like crazy fools, letting themselves adjust to being in the same space again. Then he leaned down and gave Ryan a quick peck on the lips. The way Ryan swayed forward into the kiss made Erik want to deepen it, to pull Ryan into his arms and ravage his mouth. But he satisfied himself with a second, more lingering peck. \n\n\"Car-rental shuttle is this way.\" Ryan nodded toward the exit, and Erik followed him out the door, openly ogling his boyfriend's ass and counting down the minutes until he could reacquaint himself with it. \n\nThe drive to their hotel was pure torture. Being close enough to touch but not able to hold and lean in was the worst tease Erik had ever had to suffer through. And then the guy at the front desk had trouble finding their reservation, leaving them standing in the lobby for what felt like hours before they finally got their key and made it into their room. \n\nThey tumbled onto the bed in their room, but instead of ripping off each other's clothes, they snuggled down into the pillows and just held each other. \n\n\"I missed you,\" Erik whispered. He didn't need to speak loudly, they were too intimate for full volume. \n\n\"I missed you, too.\" Ryan's hands had found their way under Erik's shirt, his palms hot against Erik's skin. \n\n\"Three weeks feels like too long to be apart.\" \n\nRyan grunted. What had Erik expected him to say to that? They both knew of a solution to that problem and Ryan's stance on that was clear. Erik was the one keeping them apart\u2014and for what? Some over-inflated sense of self. \n\nThe idea of moving to Toronto had taken up residence in his brain, lingering in the background, taunting him whenever he felt lonely or sad in his tiny New York apartment. But he had gotten so used to objecting to it that to give in now felt like admitting defeat. And wasn't that exactly the problem Ryan had identified? Erik's goddamn pride getting in the way of their future. \n\nErik turned his face to Ryan's neck, needing to distract himself from his thoughts. He licked a path up toward the earlobe he loved. Ryan shuddered underneath him. He shifted them around so that he was on top of Ryan, hips grinding together as the rush of desire flowed through his veins. \n\nHe needed to reassure himself of Ryan's presence, of their connection, and it must have shown in the frantic way he tore at Ryan's clothes, the hardness of the kiss he planted on Ryan's lips. Ryan grunted and pressed his hands against Erik's shoulders, pushing him back. Propped up on his elbows, Erik gazed down at the man he loved and saw confusion and concern on Ryan's face. \n\n\"Are you okay?\" Ryan asked. \n\n\"Yeah,\" Erik said, though his voice shook as he said it. \"I'm fine. Did you not want to...\" \n\nRyan regarded him with skepticism and it took everything Erik had to keep his shit together. \"I don't think you're okay.\" \n\nErik tried to hang on to his fa\u00e7ade, but it didn't work. He rolled off Ryan and onto his back, arm covering his eyes. \n\n\"Hey, what's wrong?\" Ryan pulled his arm down, leaving him with nothing to hide behind. \n\n\"Nothing.\" Erik shook his head unconvincingly, his eyes shut tight. \"It's just... three weeks feels like a long time.\" \n\nHe felt the heat of Ryan's gaze on his face, but didn't expect to feel Ryan's soft lips at the edge of his mouth and along his jaw. \n\n\"You know I don't like using sex as a means to some other end,\" Ryan whispered as he kissed his way down Erik's neck. Straddling his thighs, Ryan pushed his shirt up and kissed down the middle of his chest. \"I don't like hiding behind sex; it's not some sort of escape route for me.\" \n\nErik knew all of this, felt ashamed for trying to use sex to distract himself from their problems. But then, here was Ryan, undoing his belt and unzipping his jeans. \n\n\"But sometimes, I wonder if I've become a prude. Compensating for all those years of porn by swinging far in the other direction.\" Ryan's breath was hot against the growing bulge of Erik's cock. Ryan pulled the waistband of his brief down far enough to hook under his balls. \n\n\"Maybe using sex as a distraction isn't bad all the time.\" Ryan licked his cock from the base to the tip. \"Sometimes, when we're too in our heads, sex is exactly what we need to stop thinking so much.\" \n\nRyan's lips closed around his cock and Erik gasped at the sight of Ryan's lips stretched thin. The head bumped up against the top of Ryan's mouth and the pressure held as it slid farther back to Ryan's throat. Spittle ran down the sides of his dick and Ryan used the wetness to pump the back of his cock in a tight, excruciatingly pleasurable grip. \n\nRyan's eyes watered, and he gagged for a second, then Erik felt his cock slip into Ryan's throat. \n\n\"Jesus Christ.\" Erik gripped the bedding under his hands and forced himself not to move his hips. He kept his eyes glued to where Ryan went to work on his cock: one hand at the base and the other on his balls, Ryan's tongue was magic where it teased at the head. \n\nSoon, Erik felt that rising wave start from deep in his gut. His balls retracted and every muscle in his body tensed. \n\n\"I'm coming,\" he warned. Ryan doubled down on his efforts, increasing the suction until Erik was sure his entire being would get sucked through his piss slit. When his climax hit, it felt like his whole being had been thrown into the orgasm. He let go of everything he held onto so tightly\u2014all the worries about their future, his need to succeed in life\u2014and just let himself be catapulted into the heights of pleasure. \n\nFloating down from there was warm and pleasant. Ryan's arms around him, Ryan's beard against his temple. He felt safe and happy in a way he had never found in another place in the world. \n\nThe thoughts that had plagued him earlier were still there, but they were muted\u2014Ryan had done that. He would get back to them later; for now, he would just be present in the space Ryan created for them. \n\n### \n\nA small group of Amanda's and Mitch's friends and family were scattered around the beautifully appointed suburban house that belonged to one of Mitch's aunts. It had been a chance for the happy couple to mix and mingle with those who had traveled to San Francisco for the wedding, and they had been dutifully making their rounds all evening. \n\nErik watched them, the way they beamed at each other as if the love they had could not be contained. He was happy for them, delighted even. But the longer he watched them, the more annoyed he grew. He knew it wasn't them\u2014it was himself. He could so easily see him and Ryan in the exact same position as Amanda and Mitch: happy, smiling, showing all their friends and family just how wonderful they were together. \n\nBut that wasn't going to happen. At least not any time soon. And that understanding ate away at Erik until the cavernous living room he was in shrank into a suffocatingly small cave. \n\nHe made his excuses to some uncle of Amanda's and ducked out into the back yard where the cool, winter air cleared away that stifling, muffled feeling. He probably should have grabbed a jacket, but after the few weeks of real winter in Toronto, this felt more like spring. \n\nHe last saw Ryan sitting on the couch, engrossed in some deep debate with one of Mitch's friends. There had been a furrow in his brow, and his hand lingering on his chin in thought. One finger brushed back and forth along his lips, almost as if he was reminding Erik of how good those lips tasted. \n\nErik felt a mix of emotions whenever he was in the same room as Ryan\u2014comfort, joy, excitement and pleasure, but also an increasing worry that there was a countdown clock somewhere, ticking away the hours and days until their long-distance relationship could no longer sustain the distance. It was ridiculous, Erik knew. There was no stupid clock, and he saw no reason why their current setup couldn't continue for a good while yet. And yet, he could hear the subtle tick, tick, tick at the back of his head. \n\nThe glass door slid open, and Erik was surprised to see Amanda slip outside with a tired smile. \n\n\"Hey, Erik. It's getting a little stuffy in there, isn't it?\" She slid the door shut behind her with a satisfying thump and dropped into one of the patio chairs. \"Ugh, this feels better.\" \n\nErik took the opposite chair. \"Are you tired of talking to people? I never would have guessed.\" He teased, remembering Amanda's outgoing and bubbly personality. \n\n\"Honestly, it feels like I've been making small talk for six months straight. It's like I started when we were back in New York, and it's not going to end for another couple of days yet. I love people, I do. But even I have my limits.\" \n\nErik laughed at the way Amanda rolled her eyes and leaned her head on the back of the chair. \n\n\"You look happy, though.\" \n\nAmanda smiled, weary but genuine. \"I am. We are. I can't wait for this whole wedding thing to be over so we can just be together. I mean, weddings are fun, and I'm so happy that so many of our family and friends were able to come celebrate with us and all that, but I just want to be married, you know? I just want to be husband and wife and start our life together. Sometimes I wonder why we bothered with this whole show.\" \n\nErik could understand that: the desire to just be with someone. No fanfare or spectacle, just an intimate commitment to one another to be together and then actually be together. \n\n\"But enough about me. I feel like I've been talking about me for forever. How are you? How are you and Ryan?\" Amanda sat up in her seat and turned toward him, suddenly energized and eyes bright. \n\nErik chuckled, not sure how to answer the question. \"We're fine, I guess?\" \n\n\"What the hell is that supposed to mean?\" She reached over and smacked him on the shoulder. \n\n\"Nothing!\" Erik pretended to fend off her attack. \"We're fine. We are.\" \n\n\"And?\" \n\nAmanda clearly wasn't going to let this go, so Erik figured it couldn't hurt to use her as a sounding board for his dilemma. After all, she probably knew Ryan better than anyone outside Ryan's family. \n\n\"It's this long-distance thing... it's a thing?\" He winced at his inability to explain, but it seemed as if Amanda didn't need any explaining. \n\n\"Ugh, long distance is the worst!\" She rolled her eyes dramatically and flopped back into her chair. \"I've been in long-distance relationships a few times before. It's sucks so hard. How often do you guys get to see each other?\" \n\nOnce he thought about it, it seems like they saw each other quite often considering how far apart they were. \"It's not really about that. It seems to be working fine now. But I just don't know what to do in the future. Like, are we going to be long distance forever?\" \n\n\"Oh! You're thinking about the future already!\" Amanda made those puppy-dog eyes that made Erik feel both immensely proud of them and also groan in the cheesiness of it all. \n\n\"I guess. Sort of. We haven't talked much about it.\" \n\n\"But you're thinking about it!\" She forged on. \"Eventually you guys will need to end up in the same city for this thing to work long term, right? So, either you move to Toronto, he moves back to New York, or you guys both move somewhere else. Oh! You should move to San Francisco!\" \n\nErik laughed at Amanda's exuberance but knew there was very little chance that they would move to the West Coast. \"I don't think Ryan will move back to New York.\" \n\nShe nodded. \"Yeah, I can't blame him. New York is awesome\u2014but also awful. You can't do New York half-assed.\" \n\nErik agreed. Which left only one other option. \n\n\"So?\" Amanda continued. \"Does that mean you're moving to Toronto?\" \n\nDid it? He couldn't say yes, but he couldn't quite say no, either. \n\n\"Maybe.\" \n\n\"Sounds like it's more of a yes.\" Amanda teased, grinning at him. \n\nHe sent her a mock glare but didn't correct her. Maybe it was more of a yes. \n\n\"If you want my opinion\u2014and I'm going to give it to you even if you don't\u2014don't get hung up about New York. I did when Mitch first brought up the idea of us moving out here. I was like, 'but we're New Yorkers!' And he was like, 'why do we have to be New Yorkers?'\" \n\nErik chuckled at how Amanda lowered her voice to mimic her soon-to-be husband. \n\n\"But after a while, I realized I was being stupid. What was I doing in New York that I couldn't do here? Then I listed out all the crappy things I was putting up with just to be able to say I lived there. Is being a New Yorker, really worth all the stress? I don't think so.\" Amanda wagged her finger back and forth. \n\n\"Yeah, I get what you're saying.\" And, just like that, he realized how stupid he had been about the whole thing. \n\n\"I mean, don't get me wrong! Moving to a whole other country for a guy is not easy. What if you go there and you break up? What if you hate Toronto? Then you just uprooted your whole life for what?\" Amanda was on a roll now. \n\n\"I'm not saying you guys are going to break up. I've seen you guys together and the way you look at each other? There's definitely something real there. Making big changes is never easy. You know what, though? Ryan doesn't seem like the type to ask you to move. Has he asked?\" \n\n\"No, in fact, he did the opposite of ask,\" Erik explained. \"He didn't want to ask me for the exact reasons you just mentioned. What if it didn't work out? He didn't want to feel responsible.\" \n\nAmanda nodded. \"That sounds like him. But then sometimes he wouldn't know a good thing if it smacked him in the face.\" \n\nA chuckle escaped Erik because it was true and because he wondered whether he was really a good thing. \n\n\"Seriously, though? If I had a vote, I'd say go for it. Love is worth taking risks for.\" Amanda yawned and pushed herself out of the chair. \"Do you think they'd miss me if I just ducked out for the rest of the night? I'm exhausted.\" \n\nErik smiled at the way Amanda swayed on her feet. \"You have a big day tomorrow, I'm sure they'll understand.\" \n\nShe nodded and waved goodnight before disappearing back into the house. But her words stayed with Erik: love is worth taking risks for. It was an easy thing to say, but actually doing it was another thing completely. Except the idea of going back to New York, knowing his heart was in Toronto, felt almost like a death sentence. One that no one but himself had issued. \n\nErik closed his eyes and slouched down to lean his head against the back of the chair. If he could wake up tomorrow in the city of his choice, which city would he be in? In his mind's eye, all he saw was blank whiteness, as if his brain had given up trying to figure out where in the world he was. \n\nBut then the image of Ryan next to him in bed, long dark lashes fanned across high cheekbones, came into focus. Ryan\u2014that was the answer. It didn't matter which city they were in, Erik realized. He wanted to be in whatever city Ryan was in. If that meant Toronto, then that meant Erik should move to Toronto. \n\nHe blinked his eyes open and stared up at the night sky with only the brightest of stars above able to overcome the constant light spilling out from the city. Move to Toronto\u2014could he do it? His heart hammered in his chest at the idea. \n\nThe sliding of the glass door behind him interrupted his thoughts, and the man who was constantly in his thoughts stepped through. \n\n\"Hey, Amanda said I'd find you out here. Is everything okay?\" \n\nWas everything okay? Things weren't perfect, but they were okay. Especially when Ryan was there. \n\n\"Yeah.\" Erik reached out for Ryan's hand and brought it to his lips for a kiss. \"I'm fine.\" \n\nRyan gave him a skeptical look, but Erik didn't bother elaborating. \n\n\"People are starting to head out. Want to head back?\" \n\n\"Sure.\" Erik stood and pulled Ryan into his arm\u2014not for a kiss, but just a hug, just to feel this man and soak in his warmth. \n\nRyan chuckled in his ear. \"Are you sure you're okay?\" \n\nErik gave him a squeeze before letting him go. \"Yeah, let's go.\" \n\nThat night, in their hotel bed, they made love. With Ryan's legs wrapped around his waist, and their fingers laced together, palms against palms, Erik took his fill of the man he loved. He sank his weight down onto Ryan, knowing that Ryan was strong enough to take it. And when he made that first breach into Ryan's body, it felt like he was coming home to something warm and familiar and satisfying. \n\nThey moved together, knowing just how to arch into each other, where to touch, how to kiss. Ryan's cries in his ear weaved deeply into his body, wrapping around him like the tattoos that snaked across his skin. He was caught in them, caught in a hold so powerful that to disentangle himself would mean the end of him. \n\nAfter they both reached their climaxes, Erik couldn't stop shaking. The realization that home was wherever Ryan was resonated so profoundly inside of him that it manifested in physical tremors. \n\n\"Babe? Everything all right?\" Ryan asked as Erik buried his face into the crook of Ryan's neck. \n\nThe only response he could muster was to cling even more tightly to Ryan. And Ryan held him, those boxing-trained arms solid and secure around his shoulders and back. Gradually, as the shaking receded and sleep crept in, Erik finally accepted the truth that so many others had seen from the very beginning: he was moving to Toronto. \n\n### \n\nThe wedding itself was beautiful in a trendy industrial space with brick walls and exposed-wood ceiling beams. Dainty white lights were strung up around the space, and baby's breath decorated every available surface. Amanda was stunning in her wedding dress as she walked down the aisle, and Mitch had barely been able to keep himself together as they said their vows. ",
        "In his unguarded moments, Erik let his mind wonder whether he and Ryan would ever have a wedding themselves. It would be nice to celebrate their relationship with those closest to them, but when Erik thought about his parents and siblings, he dismissed the possibility; they would never approve, let alone show up for the event. And without them there, Erik found himself rather indifferent to the idea. \n\nAnd now, as they sat through speech after speech after speech, Erik lost track of the number of glasses of wine he downed. By the time the DJ took over the evening, he was well past drunk and a little unsteady on his feet as he dragged Ryan out onto the dance floor. He wanted to dance, to move and to feel Ryan's body next to his. He wanted to forget about his family, moving to Toronto, and all the uncertainties that lay ahead. \n\nTonight was for having fun, and Erik was determined to have fun. \n\nThe music was mainly top-40 pop songs, which wasn't necessarily Erik's jam, but he decided he could work with it. The bass was loud enough that he could feel it pulsing through the air, and he let it drown out all the worries that had taken over his mind. \n\nRyan removed his jacket and rolled up the sleeves to his dress shirt. There was something about Ryan's forearms, dusted with dark hair, exposed from the elbow down that Erik just couldn't get enough of. He kept trailing his fingers across Ryan's skin, intertwining their fingers, nuzzling at Ryan's palm. \n\nWhen Ryan buried his fingers in Erik's hair and pulled them close, the rough treatment sent shocks straight to Erik's dick, and he didn't hesitate to rub it against Ryan's thigh. The growl he heard in his ear made it clear that Ryan had felt that bulge; Erik rotated his hips and ground himself even harder against Ryan. It was like the rest of the wedding didn't exist; it was just the two of them on the dance floor, sweat soaking through their shirts and hard body parts bumping up against hard body parts. \n\nAt some point, someone broke through the little world they created for each other\u2014Erik couldn't figure out who it was\u2014and dragged them off to the open bar. A shot of some sort was thrust into his hand, and he threw it back when everyone else did. Then they were back out on the dance floor, jumping up and down to the beat that had taken over the party. \n\nBack and forth they went\u2014to the bar for a shot of some disgusting mix of alcohol and then back to the dance floor to sweat it all out. Erik didn't remember when it became difficult to stand on his own two feet, let alone walk in a straight line. But at some point, Ryan became his crutch, propping him up with a shoulder under his arm and hands around his waist. \n\n\"I love you so much, you know that?\" The words sounded slurred even to Erik's drunk ears. He held Ryan's face between his hands and tried to get his lips and tongue to cooperate. \"I. Love. You.\" \n\n\"I know you do. I love you, too.\" Ryan chuckled in a way that felt too dismissive for what Erik was feeling. \n\n\"No!\" He stopped in his tracks, refusing to be budged and stumbling over his own feet even as Ryan tried to push him toward the door. \"I love you!\" \n\nRyan shushed him, but that only made Erik more adamant. \"I love you! I want to be with you! I want to live in the same house and raise Chloe and...and...and maybe other kids! I want a little boy named Nathaniel! He could have my eyes and your smile.\"  \n\nThe image of the little boy materialized in Erik's mind, and his fingers drifted to Ryan's lips as they tilted in that lopsided grin Erik loved so much. \n\n\"Okay, babe. We can get a little boy. Not sure how we're going to find one with your eyes and my smile, but we'll try to make it work.\" Ryan nudged him forward again, and Erik complied only because he was so distracted by his imaginary son. \n\n\"We can take them to the aquarium! And go skating! And we'll be a family!\" Erik gasped dramatically, so loudly that Ryan stopped their forward progression to a halt. \n\n\"What? What's wrong?\" Ryan asked. \n\n\"We can be a family!\" Erik exclaimed, ignoring how Ryan rolled his eyes. \"No! It's true! We can be a family! We should get married and be a real family! Will you marry me? Say you'll marry me. Please?\" \n\nErik held onto Ryan's shoulders as if he were drowning; Ryan was the life raft, and the answer to his question would determine whether Erik could climb aboard and be saved. He couldn't figure out why Ryan was glancing around them, as if the other people in the room had anything to do with their relationship. \n\n\"Please? Please, Ryan. Please say you'll marry me.\" Erik wasn't above begging, and his attempt to drop to a knee felt more like he was falling into a sink hole. \n\nRyan's strong hands pulled him back up. \n\n\"We can talk about this in the morning, okay?\" Ryan said under his breath, but Erik didn't want to wait until the morning. \n\n\"No. Let's talk about this now. I want to know. Do you want to marry me?\" \n\n\"Erik, come on. It's late. We're both drunk. This isn't really the right time to be talking about this.\" Ryan looked to serious, speaking quietly but with such sternness that it broke through Erik's determination and triggered some hidden well of tears. \n\nHe pulled away from Ryan's arms only to stumble and stagger against a nearby wall. His cheeks were wet, and he couldn't breathe through his nose, and he felt like curling up on the floor to die a slow death. \n\n\"Erik.\" Ryan was still right there despite Erik's attempts to push him away. \n\n\"No!\" Erik turned his face into the wall to hide. \"You don't want me. I waited too long, and now you don't want me.\" \n\n\"Erik.\" \n\nHands on his shoulders tried to turn him around, but he refused. Ryan didn't want him. Ryan was happy and settled and had a beautiful family to go home to every night. Meanwhile, Erik was still meandering along in life, hoping to hit it big but getting nowhere. He was still trying to live that impressive big-city life, pretending that he was more than he actually was. In reality, he was no more than the little boy from Utah looking for a place to call home. \n\n\"Erik!\" \n\n\"Go away!\" He didn't mean it. He didn't want Ryan to go away. But admitting that he was too much of a coward to chase after the thing he wanted most in life was too embarrassing. It exposed him for the fraud he was, and he couldn't bear for Ryan to see that. \n\n\"Jesus fucking Christ, Erik!\" \n\nStrong hands tore him away from the wall and Erik yelped when he was treated to a couple sharp slaps across his cheek. \n\n\"Hey, stop it. Whatever is running through your head right now, stop it. You're drunk and you're probably not going to remember any of this tomorrow, anyway. So, let's just get back to our room okay?\" \n\nErik sniffled. He couldn't help it; his nose was running. But he nodded because he didn't like the feeling that Ryan was angry with him. He let Ryan support him as they made their way outside to where a bus was waiting to take the wedding guests back to the hotel, and he nearly had to crawl up the steps on all fours. \n\nErik collapsed into the first empty seat and tried his best to curl his tall frame against the window. Ryan slipped in beside him, and a rush of something warm and comforting flooded his heart when Ryan pulled him away from the window. He snuggled up to Ryan as much as the tight space would allow and held his breath as Ryan sighed heavily. \n\nAs the rocking motion of the bus lulled him to sleep, Erik clutched Ryan's shirt and promised himself that he would do anything\u2014anything\u2014to make sure Ryan never left him. \n\n### \n\nErik sat on the edge of the bed, holding his head in his hands and trying not to breathe too quickly; even that slight movement triggered the hammering monkeys in his head and made him want to hurl. Why did he drink so much last night? What did he drink last night? \n\nThe last coherent memory he had of the wedding was being wrapped up in Ryan's arms on the dance floor. After that, there were some snippets of doing shots, the pulse of the bass music, and the ringing in his ears. He must have lost several hours at least, and he had absolutely no recollection of how they got back to the hotel. \n\nRyan wasn't around to tell him if he'd made a fool of himself. He had been alone in bed when he woke up, and the bathroom was silent. \n\nMoving at a snail's pace, Erik unfolded himself and held onto the nightstand as he rose to his feet. The change in elevation caused his brain to throb in his head, but he soldiered on. He winced as his feet touched the cold bathroom tile, and he had to wait for his stomach to settle after bending down to reach the knobs for the shower. \n\nFinally under the spray, he lifted his face up into the water and just stood, waiting for all the aches and pains to wash away. If only his brain could be washed as easily as his body, but no such luck. As the shower woke him to the light of day, his brain also marched out the same old laundry list of dilemmas that were making his life miserable. Apparently one drunken night of dancing and partying didn't actually resolve any of his problems. It just made him feel more pathetic the morning after. \n\nErik finished his shower, dressed for the day and was turning the TV on to catch the news, but Ryan still had not returned from wherever he had disappeared to. He made a cup of bad coffee in the hotel room's coffee machine and settled in the armchair to check his phone. No messages from Ryan, but there was a voicemail from an unknown number. \n\n\"Hey, it's Buck Cohen. We need another associate producer. If you want the job, it's yours. Call me.\" \n\nErik stared at his phone as if the shiny rectangular thing was playing a practical joke on him. Then he played the message again to make sure he had heard it correctly. \n\nBuck Cohen. From Shadowbox. Was offering him a job? Had Cohen even called the right guy? \n\nAnd yet, if it was real, the offer would change everything. Shadowbox was a great company, producing really cutting-edge films. Erik doubted they would pay very well, but it would be a steady income. Besides, he could split expenses with Ryan, and Toronto was a lot cheaper than New York. \n\nIt was almost too good to be true. Like some movie where an implausible solution falls from the sky to save the day. It couldn't be that easy. \n\nErik listened to the recording a third time and was about to call back when he realized it was Sunday. He checked the time stamp on his missed call\u2014just a few hours earlier. If Cohen was calling him on a Sunday, then he could call back on a Sunday, too, right? \n\nHis thought was interrupted by the door opening. \n\n\"Hey, babe!\" Erik called out. The throbbing in his head was masked by his newfound excitement. \n\n\"Hi.\" Ryan eyed him almost warily as he set a McDonald's paper bag and a tray with a couple of coffees down on the table. \"You're up?\" \n\n\"Yeah, god, I'm so hungover.\" Erik contemplated getting up from his seat, but decided against it. \n\nRyan nodded as he opened the bag. \"You were pretty wasted last night.\" \n\n\"I must have been, considering the condition of my head. I hope I didn't do anything too idiotic.\" He took the breakfast sandwich Ryan handed to him and groaned as the aroma of grease and fat greeted his nostril. \n\n\"You don't remember anything?\" Ryan paused with one hand inside the bag. \n\n\"Not much, to be honest.\" Erik took a bite of the Egg McMuffin, his eyes drifting shut at the salty goodness. \n\n\"Nothing at all?\" \n\nErik glanced up at Ryan's tone. \"Why? Did I do something stupid? Oh god, what did I do?\" \n\n\"Nothing.\" Ryan shrugged and settled on the other armchair with his breakfast. \n\nRyan was the worst liar in the world. He wore the guiltiest look on his face, couldn't look Erik in the eye, and curled in on himself as if trying to hide his own shame. \n\n\"Come on, what did I do?\" Erik prodded. \"I know it must have been bad. Just tell me. I can take it.\" \n\nRyan took a big bite out of his sandwich and shook his head. \n\n\"I'm just going to keep asking. You know how I don't let these things go.\" \n\nRyan looked up then, a touch of annoyance in his glare. \"Nothing.\" \n\nErik still didn't believe him, but the tone of Ryan's voice suggested he wasn't going to discuss it\u2014and that was that. New worries blossomed in Erik's mind. It must have been really bad if even Ryan was too embarrassed to make fun of him about it. \n\nThey finished their breakfasts in silence, and Erik washed his down with the coffee Ryan brought back. \"I'm sorry if I did something that embarrassed you or anything.\" \n\nRyan gaze felt hot and heavy as he scrutinized Erik. For a moment, Erik thought Ryan might actually tell him what happened, but then Ryan turned back to his coffee and said nothing. \n\n\"So, um.\" Erik had been thrilled to share the news about Shadowbox with Ryan, but in the short time it had taken them to inhale their breakfasts, he suddenly didn't know how to broach the topic. \"I got a voicemail from Shadowbox. You remember them? They make those cool documentaries.\" \n\n\"Yeah, you met with them when you were in Toronto last time, right?\" \n\n\"Yeah, that's them. So, uh, the CEO left a voicemail on my phone. He said they need a new associate producer and that I could have the job if I wanted.\" He left it at that, the implications hanging loose and undefined. \n\n\"Oh, that's good, right? It's a good opportunity?\" \n\nErik's heart hammered in his chest, and he half-wondered whether he was experiencing heartburn from eating his breakfast too fast. But Ryan's look of confusion and hopefulness, all topped with that signature reservation, made Erik second-guess himself. \n\n\"I mean, they're a great firm. They're doing great work.\" \n\n\"That's good.\" \n\nAn awkwardness that they hadn't experienced between them in a long time made the room feel too small and the TV too loud. It stretched on for several beats, and Erik didn't understand what was keeping him from just spilling everything that was on his mind. The words were stuck in his chest, right where his heart raced so quickly it was starting to make him nauseous. \n\n\"They're based in Toronto, right?\" Ryan finally asked, eyes studying the coffee he held in his hands. \n\n\"Yeah, they are.\" \n\nRyan nodded, and when he spoke again, his voice a dropped a couple of decibels. \"And the position is based in Toronto?\" \n\n\"Yeah, I think so.\" \n\nAgain, that awkward silence. \n\n\"Is it something you'd be interested in doing? The job\u2014I mean, the job description.\" That coffee cup must have been fascinating, because Ryan's gaze didn't budge. \n\n\"Well, I think it is. Honestly, there wasn't any information in the voicemail. I'll need to ask them for the details.\" When Ryan didn't respond, Erik continued. \"Actually, I was just about to call him when you got back.\" \n\n\"Oh, sorry.\" Ryan grabbed the rolled-up sandwich wrappers and tossed them back into the paper bag. \"I'll go take a walk or something if you want to call him.\" \n\nHe was halfway across the room already before Erik could react. \"No, wait.\" \n\nRyan tossed the garbage into the bin and turned with his hands on his hips, eyes still glued to the floor. \n\nErik fought the pounding in his head and went to Ryan, taking his hands and pulling him onto the bed. They sat sideways, facing each other, hands clasped between them. \n\n\"Look...\" he paused as his stomach heaved, threatening to expel the breakfast he had just eaten. Fear sliced through him, thick and visceral until it felt like all his organs had been rearranged inside his body. Something had a stranglehold on his lungs, and every breath he tried to take seemed to tighten the noose even more. \n\nHe opened his mouth and words started flowing out. \"I... it... it doesn't matter what the job is.\" He didn't know where the words were coming from or what part of his half-functioning brain had managed to string them together. But they had chosen that moment to start pouring out of him, so he just let them out. \n\n\"I don't really care about the job. I mean, I do care about the job, but that's not the point. The job just makes it convenient, an easy excuse for rationalizing the move. But it's not real.\" \n\nErik took a deep breath, forcing his lungs to fill with oxygen before he blacked out. Then he squeezed Ryan's hands, because he needed the connection, because he needed to know that it wasn't just him stepping out into the void, but that Ryan was there to catch him no matter what. Ryan squeezed back and kept his grip tight. \n\n\"I want to move to Toronto. I want to move and be with you and see where this thing goes, because it's the best thing that's ever happened to me, and I'm pretty sure nothing's ever going to beat it.\" \n\nErik glanced up, and for the first time in his life, he couldn't read Ryan's expression. Panic exploded in his heart. \"I mean, if you're still open to that. I know we've talked about it before, but I don't know if you've changed your mind. If you don't want me to move there anymore, that's okay. I mean, I might still take the job, but I can find my own place to live\u2014\" \n\nRyan stopped him with a hand to the back of Erik's neck and a kiss hard enough to make Erik's head spin. He was sure he passed out for a split second before Ryan let him go and his circulatory system managed to re-oxygenate his brain. \n\nRyan had a giant smile on his face, eyes crinkling, teeth showing. \"I've always wanted you. I don't think I'll ever stop wanting you. Whatever gave you an idea otherwise, you can just burn it, okay?\" \n\nErik nodded, tears of joy stinging his eyes. \"Okay.\" He sniffled. \n\nA chuckle that bordered on giggles erupted from Ryan. \"And we can help raise Chloe, and we can go adopt a Nathaniel. Not sure I can do anything about getting a little boy who has both of our genes. And we can definitely go to the aquarium and go skating.\" \n\nErik frowned at the teasing grin Ryan was giving him. Who the hell was Nathaniel, and what did their genes have anything to do with anything? \"What?\" \n\nRyan's smile deepened. \"You're going to have to do a better job at proposing, though. Because that was the least romantic shit I've ever seen.\" \n\n\"What?\" Erik sat up straight, grimacing as his head protested his sudden movement. \"What are you talking about?\" \n\nRyan threw his head back in a full-body laugh and ended up collapsed back on the bed. \"You really don't remember any of it.\" \n\nErik smacked him on the leg. \"What are you talking about? Did I propose to you last night?\" \n\nRyan didn't answer, but instead pulled Erik down to him. Snuggled into Ryan's side, Erik racked his memory for anything resembling a proposal but came up blank. \n\n\"Oh, babe, you should have seen yourself. It would have been kind of epic if it wasn't so sad.\" \n\nErik groaned. Maybe he didn't want to remember any of it. \n\n\"Don't worry. I didn't say yes.\" \n\nThe thought hadn't even occurred to Erik: would Ryan want to get married? He had been so engrossed in his own issues during the wedding, he hadn't even stopped to consider what Ryan wanted. \n\nHe propped himself up on an elbow to look down at Ryan. \"Do you want to get married?\" \n\nRyan frowned at him. \"Are you proposing again?\" \n\n\"No! I mean, I don't know. I'm not not proposing. I just realized we've never talked about it before.\" His hand was flat against Ryan's chest, and under his palm he could feel the rapid beating of Ryan's heart. \n\n\"I don't know. Maybe. Perhaps someday.\" Ryan whispered with full eye contact. \n\n\"Yeah,\" Erik responded. \"Perhaps someday.\" \n\nIt was Ryan who looked away first, but his heart continued to tap out a rapid rhythm under Erik's hand. \"So, are you serious about moving to Toronto?\" \n\nWith a couple of fingers on Ryan's chin, he turned Ryan's face back toward his. \"Yeah, I am.\" \n\nHe could see the skepticism in Ryan's study of him, the beginnings of hope battling with caution. \n\n\"I am.\" Erik repeated himself, determined to make good on his promise, even if Ryan doubted him. ",
        "Ryan laced their fingers together and brought them to his lips for a kiss. Looking straight into Erik's eyes, Ryan whispered, \"Okay.\" \n\nErik's world shifted on that simple action and that one word. Okay. They were going to do this. He was moving to Toronto, and they would live together and be a couple. They were going to make this work. It was happening. \n\nHe kissed Ryan, pouring the jumbled-up mix of emotions into that kiss\u2014all the hope he felt for their future, excitement and anticipation for what lay ahead, and yes, the fear of the unknown and whether they actually had what it took to make it work. Then Ryan's fingers dug into his hair, and Ryan's arm wrapped around his back, pulling him down and deepening the kiss. Erik sank into it, swiping his tongue into Ryan's mouth, taking what he needed and surrendering himself to Ryan at the same time. \n\nThe future was still shrouded in darkness, but at least he had a light now, and that light was Ryan. \n\n### \n\n\"Uncle Erik!\" Chloe came barreling out of the house as he and Ryan climbed out of the car. She must have been watching from the window, waiting for them to pull up. \n\n\"Hey Clo!\" He bent down just in time to catch her as she threw herself into his arms. \"How are you, kiddo?\" \n\nHe lifted her up and spun her in a circle as she squealed in his ear. When he finally set her down again, she jumped up and down, hands raised in fists over her head. \n\n\"You're here! You're here! Uncle Ry says you're not leaving anymore.\" \n\nErik chuckled. \"He's right. I'm not going anywhere anymore. You're stuck with me.\" \n\nShe wrapped her short arms around his waist and squeezed as if she was never planning on letting go. \n\n\"All right, Clo. You need to put on a jacket before running outside in the middle of winter. Go inside; we'll be in right away.\" \n\n\"I'll go tell Mommy you're here!\" She ran off only to stop right before the front door to turn around and wave. \n\nAs Erik waved back, his heart full of warm fuzzies, he knew he had made the right decision. He knew it the minute they drove over the US-Canada border with a carload of all his worldly possessions. With every mile they put between them and the border, it felt like another scale fell off his skin, another weight dropping from his shoulders. The atmosphere felt fresher, cleaner; the air felt more rejuvenating to breathe. \n\nThis was it, he thought as he looked at the house that was to become his home. This was his new life\u2014with the people he loved most in the world and the people who cared most about him. He turned to Ryan next to him and pulled the man of his dreams into his arms. \n\n\"I love you,\" Erik said, slipping his arms inside Ryan's unzipped coat and wrapping them around his waist. \n\n\"I love you, too,\" Ryan repeated, just as big, fat snowflakes started drifting down all around them. \n\nThere had been a time, many months earlier, when they stood on the sidewalk in front of Ryan's house with the snow falling all around them and the idea of a relationship had barely been planted in Erik's heart. That had been the start of something new and exciting, and there was no way he would have guessed that it would bring him to another snowy day on the sidewalk in front of Ryan's house. \n\nBut this didn't feel like the end. It felt like a beginning. \n\n\"You okay?\" Ryan asked. \n\nThe world was quiet, muffled by the falling snow, with only the faintest laughter of children breaking through. Erik nodded and told himself that the sniffles were from the cold rather than the emotion welling up inside of him. \n\n\"It's just so fucking cold,\" he said, but there was no conviction behind his words. \n\nRyan's lips curled into that lopsided grin. \"You've got to embrace the cold. You're Canadian now.\" \n\nErik groaned. \"I'll just embrace you. You can be my walking hot-water bottle.\" \n\nRyan's responding laugh was light and carefree, airy and animated, like the snow falling around them. \"Come on, let's get your shit inside.\" \n\nThey unloaded the car with several trips up those long flights of stairs, and when the last box was stacked in the living room, they looked at each other with silly grins on their faces. \n\n\"We can get rid of that mural, right?\" Erik nodded to the smoke detailing the wall. \n\nRyan looked sheepish as he glanced at the wall. \"I guess I have the real thing now.\" \n\n\"Damn right, you do.\" Erik stepped in close and pulled Ryan into his arms. \"And I'm not going anywhere.\" \n\nRyan tilted his head up for a sweet, lingering kiss\u2014no urgency, no haste. They had all the time in the world. \n\n\"Welcome home.\" \n\nTHE END \n\n***** \n\nThat's all folks! Took Erik long enough, didn't it? I hope you enjoyed the ups and downs that Ryan and Erik went through. They certainly earned their happily ever after, didn't they? \n\nThank you again for reading my writing! It is a pleasure and an honor to be able to write for you. Please check out my author page for updates on what I'm working on next!"
    ],
    "authorname": "hudsbart",
    "tags": [
        "gay male",
        "romance",
        "wedding",
        "toronto",
        "san francisco",
        "anal",
        "oral",
        "the end"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/embracing-the-tension-ch-11"
}