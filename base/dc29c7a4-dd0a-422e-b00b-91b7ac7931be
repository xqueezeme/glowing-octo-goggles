{
    "title": "Sex Lessons From Grandpa",
    "pages": [
        "Oh God, this is so wrong. I shouldn't be watching this video. Three giggling coeds are flouncing around my bedroom, swapping swimsuit tops, showing off their enticing bodies and unknowingly putting on an erotic show as my hard cock strains against my shorts. I rationalize that my voyeurism isn't perverted because I'm not looking directly at Samantha, my granddaughter. I'm keeping my eyes focused on her two friends, Jenna and Angela. \n\nJenna is the most voluptuous. She is laughing at her friends' much smaller breasts as she prances around the room strutting her stuff. With thick, protruding nipples and wide areolas her tits are considerably larger than either of her friends. Her gorgeous almond-shaped eyes, complements of her Asian mother, are as exotic as her mocha colored skin and voluptuous figure which I'm certain come from her African-American heritage on her father's side. \n\nI can't take my eyes off of Jenna's bouncing breasts while she dances on my bed, swinging her bikini top over her head and playfully making fun of her friends.\n\n\"You call those breasts?\" she laughs. \"These are breasts!\" she boasts as she cups her brown tits and shakes them at her friends. \n\n\"Yeah, you're lucky you can stand up straight,\" Samantha quips as she pulls her top loose and hands it to Angela. A quick glimpse of my granddaughter's lightly freckled breasts sends unexpected pleasure signals to my already hardened cock. Her quarter-sized areolas are tipped with short, pointy nipples and her deep brown tan lines beautifully accent her perfectly shaped white domes. She's not going to win any size contests but she has impeccable breasts with erotic tan lines. \n\nI tear my eyes away to check out Angela's tits before she tucks them into Sam's bikini top. Angela is a light-skinned Latina beauty with long black hair and breasts that fall just short of what you'd consider medium size. Because of her olive complexion, her tan lines aren't as pronounced and her wide areolas kind of blend into her big puffy rose-colored nipples. \n\nWhile they swap swimsuit tops and compare their breasts, Jenna is bouncing around the room topless, diverting my attention away from the other two naked girls. \n\nMy cock is throbbing but I don't want to get caught jacking off to explicit video of my granddaughter and her friends. I check my watch but I'm not even sure how long they've been gone. Seems like about an hour. Maybe I could risk a quick yank. Standing up, I glance out the window as I start unbuttoning my shorts. Damn! The subjects of my erotic video are already walking up from the beach. My hard-on will have to wait until later. \n\nYou may not believe it but this all started rather innocently. Samantha asked if she and her friends could stay with us during beach week. My wife and I retired to our beach house a couple of years ago and have been the destination vacation for our kids and grandkids ever since. We love having family around and I certainly didn't mind that Samantha and her friends wanted to spend the week after their high school graduation parading around our house in skimpy bikinis. Although all three of them are eighteen, we checked in with their parents and assured them we would be responsible chaperones. It was true at the time we said it.\n\nA couple of days after they arrived, my wife received a call from her brother-in-law saying her sister was very sick and had been admitted to the hospital. She caught the next plane to Oregon, leaving me with three beautiful young women in the house. I admit that I love seeing their nubile bodies displayed in an ever-changing array of swimwear but I swear that spying or making videos was the farthest thing from my mind. \n\nAfter breakfast, the morning after her grandma left, Sam asked if they could use our bedroom to change for the beach. This was not an unusual request. Our room is the largest bedroom and would be less cramped with three people in it.\n\n\"Sure, just let me grab my MacBook,\" I said, heading into the bedroom as Sam and her friends cleared the table. The spacious room was set up with a bed, dresser and nightstands on one side and a desk, filing cabinet and desk chair on the other. I grabbed my computer and came back into the kitchen to find them laughing and blushing as they finished washing the breakfast plates and glasses. \n\nThey were still laughing as they grabbed their swimsuits from the other bedrooms and raced each other into my bedroom. \n\nI smiled at their youthful energy as I flipped the MacBook open. It was already on and I noticed the webcam app flashing in the upper corner. Clicking on it as I took a sip of my coffee, I almost choked when the screen filled with images of my granddaughter and her friends laughing as they stripped off their clothes. Fuck! I'd forgotten about the webcam.\n\nI bought an external webcam last year when my wife and I got tired of trying to crowd in front of the laptop while Face-timing with our grandkids. We must have left the webcam on after talking with our daughter yesterday morning about my wife's travel plans. \n\nI knew what I was doing was immoral but I rationalized that it was an accident. I hadn't planned to do this. I knew the right thing to do. With one click I could cut the webcam's Bluetooth connection and no one would be the wiser. Spying on my granddaughter and her friends was absolutely wrong on so many levels but I'd figured one quick peek wouldn't hurt and then I'll click to disconnect. As I watched them pull their sleep tops over their heads; their hard bodies and alluring beauty were mesmerizing. \n\nI adjusted my shorts around my stiffening cock as these three panty-clad eighteen year olds compared their naked breasts in the mirror over my dresser. My eyes darted from one to the other, trying to take in everything at once. I've always loved looking at photos and videos of naked coeds but these are right in the next room. It was such a fucking turn on that my quick peek lasted much longer than I intended.\n\nSam was the first one to strip off her panties and it seemed so perverted to wish that my own granddaughter would turn towards me so I could see her pussy. She has a beautiful apple-cheeked ass, lightly frosted with her ever-present freckles that are more prevalent between the tan lines.\n\nJenna and Angela followed suit, revealing firm asses that were every bit as enticing as Samantha's. I stared wide-eyed at Jenna's large breasts, hanging deliciously from her chest as she bent over to remove her panties. Her nipples jutted out nearly a half of an inch and I doubt they were even aroused. I was so absorbed in Jenna's mammary display that I almost missed seeing Sam's pussy as she turned momentarily towards the camera and then back to the mirror. \n\nFuck! I only saw it for a few seconds but my cock responded instantly. Her tan lines frame a small patch of neatly trimmed blonde pubic hair. The triangular shape makes it look like a little arrow pointing down towards her hidden treasure.\n\nI knew I was taking more than the aforementioned peek and I should have already clicked to disconnect the webcam. I was honestly just going to do it when Angela turned and started walking towards my desk, directly into the camera. The webcam is on a shelf over the desk and takes in most of the room. I studied this naked beauty, taking in all of her attributes at once, from her perfectly round tits with their puffed out nipples to her thick black pubic hair. She was laughing at something Sam said as she reached out towards my desk. \n\n\"I can see why your grandma married your granddad,\" she said, holding up a copy of our wedding photo that I keep on my desk. \"He was a damn good looking guy.\" \n\n\"Still is if you ask me,\" Jenna came up behind Angela and looked over her friend's shoulder at the picture. Angela handed it to her as she turned away. My cock sprang to attention as I got my first look at Jenna's fur-lined pussy. She was standing perfectly still, almost filling my screen with her large tits and exotic looking pussy. I was devouring her body with my eyes. Her thick nipples were pointing right at me but I could barely look away from her spongy black pubic hair. \n\nI was rubbing my hard cock through my shorts as they were unintentionally putting on the most erotic show I had ever seen. I knew if I didn't click soon I'd regret it later. My hand was shaking as I finally grabbed the mouse and clicked... on the record button. \n\nWhen they finally emerged from my bedroom, I was sitting at the kitchen table innocently checking my email. I was watching the entire video again when I spotted them coming up from the beach. \n\n\"You guys weren't gone long,\" I say, looking up from my computer screen. I try to keep from staring but as I look at these three ladies in their sexy bikinis all I see are their naked bodies prancing around in my room.\n\n\"It's too hot,\" Sam says as she grabs a bottle of water from the fridge.\n\n\"And there weren't any cute guys,\" Jenna adds with a mischievous smile. \n\n\"And the old guys that were there acted like they'd never seen a girl before,\" Angela chimes in. \"I swear there was actual drool running down their chins.\" She laughs as she takes a sip of Sam's water.\n\n\"Well, I can't blame them,\" I wink. \"You three would turn heads wherever you went.\"\n\n\"Which head?\" Jenna asks with a more lascivious smile. My cock twinges at the mention of an alternative head but Sam answers before I can think a worthy comeback. \n\n\"Jenna!\" Sam yells, her face turning a bright shade of red. \"Don't say things like that in front of my grandpa.\"\n\n\"He doesn't mind, do you Granddad?\" Jenna asks. \"Anyway, I'm just playing.\"\n\n\"I don't mind,\" I answer. \"It's all in fun, Sam.\" This time my wink is specifically directed at Jenna and she rewards me with a kiss on the forehead. As she pulls back from the kiss, her barely covered tits hang enticingly just inches from my face. I swallow hard as I stare at her generous cleavage and she takes her time standing back up. Hmm. It appears she is enjoying my reaction. I don't know Jenna well, this trip is the first time we've met her and I'm not sure what to make of this. \n\n\"We're just going to hang by the pool, okay?\" Sam asks, interrupting Jenna's show. \n\nAs they head out the door it appears that Jenna has added a little more swing to her step. Her bikini-covered ass is swaying hypnotically or maybe I'm just imagining it. Perhaps I'm a little over stimulated from viewing the video and I'm reading more into this than is actually there.\n\nI check my email and then settle into my easy chair with a recent mystery novel. I find myself reading the same page over and over as my eyes wander out past the sliding glass door to where the girls are lounging on the covered patio. They've moved the lounge chairs into a circle and seem to be having a rather intense discussion. Sam gets pretty animated but the discussion seems to be focused on Angela. They go quiet for a few minutes and then Jenna points at me and the discussion picks up again. I thought I'd been caught staring at them and then I realize she was making reference to me but can't actually see me through the reflective glass. \n\n\"Um... can I talk to you for a minute?\" Sam asks, opening the patio door and stepping inside. \n\n\"Sure, honey. Is something wrong?\"\n\n\"Kind of, but not really,\" Sam answers cryptically. She sits on the ottoman a few feet to the side of my chair and pushes her hair back over her shoulder. I reflexively glance at her breasts, picturing them naked before I can catch myself. \n\n\"Whatever it is, I'm all ears.\" I smile, making eye contact to encourage her.\n\n\"It's confidential,\" she says very seriously. \n\n\"I can keep a secret.\"\n\n\"Even from our parents?\" she asks.\n\n\"Unless it is something that puts you or your friends in danger, yes.\" Samantha laughs.\n\n\"No danger but Angie has a problem and we think you can help us figure it out,\" she says quietly. \n\n\"I'll do whatever I can,\" I tell her honestly, unable to imagine what kind of problem Angela might have that I could help.\n\n\"It's about sex,\" she says, matter-of-factly. \n\n\"Okay...\" I wait for her to continue but Sam just looks at me and then glances towards her friends on the patio. \n\n\"Confidential, right?\" she asks again.\n\n\"Cross my heart, Sam. What is it?\"\n\n\"Well...\" Long pause. \"First of all, we're all sexually active, okay?\" She seems to be testing the waters to see if I'm going to freak out at this revelation.\n\n\"I'm not completely shocked,\" I answer. \"You're all over eighteen and extremely desirable young women.\"\n\n\"Thank you.\" Sam's almost blushing and she takes a deep breath before she continues. \"Angela has a steady boyfriend and they... have sex regularly.\" She pauses again and I just wait for her to continue. I think I know where this is going and I'm not sure I'm going to be able to keep my confidentiality promise.\n\n\"A lot of our friends who are having sex, including Jenna, go on and on about their orgasms and how their boyfriends leave them breathless. Angela thinks something might be wrong with her because sex isn't doing that for her.\" She stops again and just looks at me. \n\nI just nod, not trusting myself to speak. I wasn't expecting that. An hour ago I was getting ready to jack off to video of these lovely beauties getting naked and now they want to discuss their sex lives with me. Fuck!\n\n\"We've told her that nothing is wrong with her but Jenna thinks that if you talk to her it might help. You know, because you're older and more experienced.\" \n\nI don't know what to say. Of course, I'd love to hear about Angela's sex life, but I'm no therapist or doctor. What can I tell her? \n\n\"Will you please talk to her, Grandpa?\" Sam asks.\n\n\"Sure, Sam. When do you want to do it?\" I ask wondering why my wife isn't here to help with this.\n\n\"Right away before she changes her mind, okay?\" Sam is already getting up and moving towards the door as my mind races to catch up with this weird turn of events. \n\nOkay, what's the worse that can happen? I get to hear all about Angela's and maybe Jenna's sex life. Who knows, this could be better than reading erotic stories on line. I follow Sam as far as the kitchen and grab a diet coke from the fridge before sitting down at the kitchen table. \n\n\"So... you think there might be something wrong with you, Angela?\" I ask as the three of them settle in around the table. \n\n\"Yes sir,\" Angela answers quietly. \"And um... you can call me Angie, okay?\"\n\n\"Okay, Angie. Why do you think the problem is with you?\" I ask, trying to act like the responsible adult.\n\n\"Because unless these other girls are lying, I'm not like them,\" she says, hanging her head.\n\n\"I'm not lying!\" Jenna chimes in with a defiant look and maybe a little bit of a smirk as she looks right at me. \n\n\"Just because other girls are experiencing more intense orgasms doesn't mean there is anything wrong with you, Angie.\"\n\n\"That's what I told her,\" Sam adds.\n\n\"Maybe she won't take your word for it because you've only been with a guy that one time and don't have a steady boyfriend,\" Jenna almost whispers to Sam before turning to me. \"Tell her Granddad that it is as much what the guy does than what the girl does.\" I'm not sure exactly what that means but I try again with Angie.\n\n\"Why don't you just tell me what you and your boyfriend do when you're together and maybe we can figure this out.\" I tell her, unexpectedly anxious to hear all the juicy details. \n\n\"We fu... have sex. That's what we do when we're together.\"\n\n\"You can say fuck if it's more comfortable. I'm not offended,\" I answer. \"I realize you guys fuck but what else do you do?\" Angie is looking everywhere except at me, and I realize that maybe all of us sitting here isn't such a good idea.\n\n\"Would you rather we talk about this in private?\" I ask. \"We can go into my office.\" It's actually my bedroom but that might have sounded weird. \n\n\"NO!\" Her head jerks up. \"They can stay. I'm just not sure why you need to know exactly what we do or who's on top?\" she says.\n\n\"Well... I think I agree with Jenna that if you're not having an orgasm it might be because your boyfriend isn't taking enough time.\"\n\n\"My boyfriend is fine. It's me that can't have the orgasm.\" Angie is almost in tears and I wonder what I've gotten myself into. \n\n\"Angie, all I'm saying is that guys usually get off faster than girls. That's a fact. If the girl isn't getting off with the sex it can usually be fixed by increasing the foreplay. I don't know if that's the problem unless you tell me what you're doing.\"\n\n\"I told you he would know all about this stuff,\" Jenna says, smiling that same lascivious smile that she gave me when I was checking out her tits. \n\n\"Look, maybe this is a conversation that you should have with your mother...\"\n\n\"No way,\" Angie says, vigorously shaking her head. \"She thinks I'll be a virgin until I get married.\"\n\n\"Well, your doctor then. Have a check up and tell him what you've told me.\" She's shaking her head before I even get the sentence out. \n\n\"He's friends with my parents. I wouldn't trust him to keep it confidential,\" she says. \n\n\"Well...\" I don't quite know where to go with this. It seems obvious to me that her boyfriend either doesn't care enough about her needs or isn't experienced enough to know he's not satisfying her.\n\n\"What do you want to know?\" Angie says, sitting up straighter and giving me a full view of her sexy breasts. All three are still in their skimpy bikinis, which adds some nice visual effects to this erotic conversation.\n\n\"How about if I just list off some typical foreplay and you tell me if you guys engage in it?\" I ask, trying to make her comfortable with the conversation.\n\n\"Okay.\"\n\n\"Kissing is probably a yes,\" I say, trying to ease into this.\n\n\"Yes,\" she laughs and I watch Jenna role her eyes. I give her a look and she stops.\n\n\"Sucking your nipples?\" My eyes drift to her chest and I picture her tempting tits nearly filling my computer screen.\n\n\"Uh huh,\" she nods.\n\n\"Blow jobs?\" I ask, shifting in my chair and trying not to be obvious that my cock is enjoying this conversation. Jenna is smiling broadly but Angie is looking down and blushing as she nods her head. \n\n\"Does he return the favor?\" I ask.\n\n\"What?\" Angie's head jerks up and she looks confused by the question.\n\n\"Does he eat your pussy?\" Jenna blurts out before I can clarify what I meant. \"Just tell the man if he goes down on you.\" Angie is really blushing now. \n\n\"Um... yes. He does.\" She says just above a whisper.\n\n\"When you blow him does he come in your mouth?\" I ask.\n\n\"Does that matter, Grandpa?\" Sam asks, sticking up for her friend's embarrassment.\n\n\"It goes with my follow up question, Sam.\" I answer. \"Just nod if it's yes, Angie.\" She nods and I move ahead with where I was going.\n\n\"Do you cum when he eats you?\" I ask. She shakes her head, no. The look in her eyes tells me she gets the point of the question before the others. \n\n\"But it feels good, you know, when he's licking me,\" she offers in her boyfriend's defense. \n\n\"I'm sure it does but if you suck him until he gets off, shouldn't he eat you until you get off?\" All three of them are sitting up paying attention now and I'm wondering if any of them have been eaten to orgasm. \n\n\"I never thought of it that way,\" she says. \n\n\"So... he eats you and then, I'm guessing moves right over you and you guys fuck. Is that right?\" \n\n\"Usually. Sometimes I suck him again after he eats me. Because, you know, like he won't be hard enough right away for it to go in me easily,\" she seems to be getting more comfortable talking about it. \n\n\"I know this is a hard question and it's pure speculation but when he comes inside you...\" I pause to find out her boyfriend's name before I continue. \" What's his name?\"\n\n\"Rob.\"\n\n\"When Rob comes inside you, about how close to orgasm do you think you usually are?\" ",
        "\"I don't know. I get really excited and it feels so good but when he collapses on top of me, I still want to keep going.\"\n\n\"Fair enough,\" I answer and then sit back in my chair considering what to say next. \n\n\"What? What are you thinking?\" Sam asks. \n\n\"I don't think there is anything wrong with you,\" I answer. From what I've seen, everything is very right about her but I don't say that. \"I think your boyfriend isn't experienced enough yet to get you off.\" I hold up my hand to stop her interruption. \"There are a few things you can do about that.\"\n\n\"What things?\" \n\n\"You can talk to him. He probably doesn't know. Tell him what you need and ask him if he'll try a few things to help you get off like he does.\" She's shaking her head before I even finish.\n\n\"You don't know him,\" she says. \"He would feel like I'm putting him down and telling him he's not a good lover.\"\n\n\"He's not,\" I say before thinking about it. \n\n\"Trust me, that would not go over well,\" she says. \"You said a few things. What else?\"\n\n\"I have a feeling you're not going to like this one any better but you could go out with a guy who knows what he's doing and verify for yourself that it's not you.\"\n\n\"I can't go out on Rob! He's my boyfriend.\" Her head is swirling between Jenna and Sam like she's pleading with them to agree with her. \n\n\"Maybe Jenna would loan you her boyfriend just for a night so you can experience what she's getting.\" I don't really think this is a good idea but I say it just to get a rise out of Jenna. \n\n\"I got a better idea.\" Jenna says, looking right at me with that half smile of hers turning up her cheek bones and making her almond shaped eyes twinkle exotically. \"Why don't you show her, Granddad? You're experienced and seem to know a lot about female orgasms.\"\n\nI don't have a comeback for that. I'm sure my mouth is hanging open. I just stare at Jenna's defiant smile as she sits back and folds her arms across her ample chest. Touch\u00e9. I smile at her like she just made the biggest joke ever but Sam's not laughing.\n\n\"That is a great idea!\" Sam says excitedly as she sits forward and tries to gauge my reaction.\n\n\"It's a very bad idea,\" I say, not taking my eyes off Jenna.\n\n\"Why?\" Sam asks.\n\n\"Because...\" I pause momentarily, as my mind sorts through the myriad of reasons why I won't be giving Angie any orgasms. \"I'm too old, too married and she should be fucking someone her own age.\"\n\n\"You just made a pretty strong case that guys her own age aren't able to give her what she needs,\" Jenna retorts. \"You are obviously not too old to fuck,\" she continues while glancing at my crotch. I fight the urge to look down and see if my hard cock is really that obvious. \"Besides it's not like you're going to marry her or anything. You'll be like a teacher or mentor or whatever.\" \n\n\"It's the whatever that bothers me,\" I respond.\n\n\"Do I have a say in this?\" Angie asks quietly. \n\n\"There is nothing to have a say in because I'm not doing it!\" I say, pushing my chair back and standing up. I'm about to make a dramatic exit when I notice the three of them staring at my crotch. This time I do look down and sure enough, the front of my shorts are tented straight out in front of me.\n\n\"Fine, I'm human. So sue me!\" I say and make as dramatic an exit as I can, stomping off to my bedroom. \n\nFlopping down on my bed, I feel really stupid for the way I handled that. But what the fuck was I supposed to do? Why would Jenna even suggest something like that. What would happen if Angie's parents ever found out? Or my wife? What the fuck is she thinking? And Sam thinking it's a great idea. What's that about? I'm staring at the ceiling when there's a knock on the door jam of the open door. \n\n\"Hey,\" Angie says. \"Can I come in?\"\n\n\"Sure.\" I sit up on the edge of the bed. \"I'm sorry about all that. I'm sure they mean well,\" I say as Angie comes over and sits next to me. \n\n\"I understand why you got weirded out,\" Angie says with a nervous laugh. \"But... um... would you at least think about it?\" she asks. She's sitting right next to me and she turns sideways on the bed so she's facing me. \"I'd really like to know for sure if something is wrong with me.\" He eyes are welling up with tears and I instinctively put my arm around her.\n\n\"There is nothing wrong with you, sweetheart.\" I tell her as I pull her against me. She's still in her bikini and I wasn't anticipating the warmth of her bare skin. My heart thumps in my chest as I will my cock not to react. \n\n\"You don't know that for sure,\" she says, leaning her head against my shoulder. Damn! Why am I arguing with her? Because she's an eighteen-year-old girl who just needs a better boyfriend!\n\n\"I'm pretty sure,\" I say. \"And like Jenna said, I have some experience with this.\" I try for a lighter tone but instead I've spurred her on.\n\n\"That's why you would be so perfect,\" she says. \"It wouldn't be like I'd be going out on my boyfriend... well at least, not with anyone at school who would tell everyone about it. And I'd really like to know for sure. Please! Just tell me you'll think about it.\"\n\nWith a heavy sigh, I relent. \"I will think about it... but that's all... no promises, okay?\" \n\n\"Okay!\" Angie hugs me tightly and kisses me lightly on the cheek. \"Thank you,\" she says and gets up to leave.\n\n\"Angie,\" I call her name as she gets to the door. Her bikini bottom has ridden up between her cheeks and I'm treated to a wonderful view of her near naked ass. \n\n\"You need to think about this, too,\" I tell her as she stops and turns towards me. She just smiles. \"I'm serious, this shouldn't be a spur of the moment decision.\" \n\n\"I'll think about it, Granddad,\" she smiles. \"It's probably all I'll think about.\" She disappears into the hallway. \n\nFuck! Most guys would kill to be in my position -- a beautiful young woman wants me to prove she can have orgasms. It's like the ultimate fantasy. So why am I feeling so desperate? Not desperate, I'm scared shitless. It's one thing to fantasize about my granddaughter's friends and jack off to a video of their naked bodies. It's something else to actually have sex with one of them. \n\nWhen I finally emerge from my bedroom, they are out on the patio. Music is playing on one of their phones as Sam paints her toenails and Jenna braids Angie's hair. Such typical behavior makes me smile and I decide we should just have a fun afternoon.\n\n\"What do you guys want to do this afternoon?\" I ask, walking onto the patio with a cold beer. They turn almost in unison, with big wide grins. \"Besides that,\" I add and we all laugh.\n\n\"How about miniature golf?\" Sam asks, looking from me to her companions for support. \n\n\"I like that,\" Jenna says, \"since what we really want to do is off the table.\" She smiles that wonderfully lascivious smile again before turning her attention back to Angie's hair. My cock stirs and I wonder if I'd be as resistant if it were Jenna instead of Angie who wants me to fuck her. Probably, they're the same age but Jenna just seems more, I don't know, worldly than the other two, in both looks and actions. \n\n\"How about lunch at the pier and then miniature golf?\" I ask, getting nods all around. Angie is the only one who hasn't actually spoken her ascent. \n\nWe have a wonderful afternoon. All three are really fun to be with and there is relatively no sexual tension between us. It helps that their shorts outfits are much less revealing than the bikinis I was used to seeing them wear. It is also clear from their playful teasing and the way they finish each other's sentences that they are very close friends and have been for a long time. \n\nWhen we get home, I grill burgers and we eat outside. After dinner, they leave to sit on the beach until sunset and I call my wife. She says her sister is doing better but she won't be home for another week. I assure her that we are doing fine and that she doesn't need to worry about us. Or does she? I retreat to my bedroom to think.\n\nThe question is still looming out there and I haven't decided what to do about it. After having adamantly declined, I don't realize until just this moment that I'm actually considering it. She is a beautiful young woman with a problem I am certain I can solve. There is no question that her inexperienced boyfriend is the problem. \n\nI lie down on my bed and try clearing my brain of the image of her sexy body so I can treat the decision objectively. Every time I mentally list the pros and cons the cons outweigh the pros by a huge proportion. The trouble is that my dick stays hard through the whole process, tipping the scales in favor of the pros. Fuck!\n\nI hear Sam and her friends come back inside and the TV burst to life in the living room. I consider initiating another discussion to persuade them how illogical this is but decide avoidance is a better strategy. I stay in my room, trying to read my book. As you can imagine, my mind keeps wandering. \n\nI'm just putting my book on the nightstand and turning off my light when the TV shuts off and I hear them make their way down the hall to their bedrooms. A light knock on my door and Sam sticks her head it. \n\n\"Goodnight, Grandpa,\" she whispers into the dark room\n\n\"No goodnight kiss?\" I ask. \n\n\"I wasn't sure you were awake,\" she says as she makes her way to my bed and crawls up beside me. \n\n\"Just turned the light off,\" I answer, kissing the top of her head as she snuggles against me. \n\n\"I'm sorry about this morning,\" she says. \"I didn't mean to put you in such an awkward position.\"\n\n\"No, I'm sorry,\" I respond. \"I shouldn't have freaked out on you guys. My reaction was inappropriate. I should have stayed and talked it through some more.\"\n\n\"Only part of your reaction was inappropriate,\" she laughs, tickling my ribs. I'm glad she can't see me blushing in the dark thinking about my tented shorts. \n\n\"I'm sorry. I couldn't help that,\" I say, squirming away from her hand.\n\n\"At least we know you weren't repulsed by the idea,\" she laughs again before settling her head back down on my shoulder.\" \n\n\"Yeah, that was pretty obvious but you know this is wrong, don't you?\" The length of her silence gives me my answer and I realize that the right and wrong argument isn't going to get any traction.\n\n\"It's just that Angie is so self conscious, you know?\" Sam lets out a long sigh and leans up to look in my face. \"She thinks because her boyfriend is inept that there is something wrong with her. Now you won't have sex with her so she thinks there's something wrong with her. Instead of helping her, we're just making it worse!\" She blurts this all out in one breath and then plops back down. \"I just want to help her,\" she whispers. \n\nWhile I'm glad to hear that my granddaughter realizes that there is nothing wrong with Angie, I'm not sure how me fucking her is going to build her self-esteem. I choose my next words very carefully. \n\n\"Are there other examples of Angie having low self-esteem?\" I ask. Sam thinks for a long time before answering.\n\n\"No. I think it's just with sex,\" she finally answers. \"She's very confident in sports and she's really smart and graduated with honors.\" Sam takes a breath before continuing. \"I know she doesn't like her body. She's always complaining that her breasts are too small and she's always afraid of losing her boyfriend to someone with a better body. That's why she won't talk to him about sex. She's afraid of losing him.\" \n\nIt occurs to me that this is probably typical coed dramatics and I wonder if Sam feels the same way.\n\n\"You two have similar bodies, you don't feel that way do you?\"\n\n\"No, my breasts are a little larger,\" she says. \"But even if they weren't I don't think my body defines who I am and I've tried to tell Angie that but...\" her voice trails off and we're silent for a while. \n\n\"Will you at least consider helping her, Grandpa? I know you don't think it's right but is it right for her to feel rejected? And besides you could show her what a lousy fuck her boyfriend is, right?\" She kisses me on the cheek and rolls over to get off the bed.\n\n\"You've given me a lot to think about Sam,\" I answer noncommittally.\n\n\"Don't take too long,\" she says. \"We've only got tomorrow. Remember grandma said that Jenna and Angie's boyfriends can come down on Friday to join us for the weekend.\" I had forgotten that arrangement until just now. \n\n\"I'll have an answer in the morning, Sam.\" I assure her, wondering how I'm going to decide. \"But don't get your hopes up.\"\n\n\"Like my teachers always tell me, don't over think it,\" Sam says with a big smile before leaving me alone with my thoughts. \n\nI toss and turn all night as I consider the risks, not the least of which is my wife finding out. We've continued to have a very active sex life. We're not as flexible as we once were but we don't confine ourselves to the missionary position either. We have both always been addicted to oral sex. I'm not worried about whether I'll be able to give Angie several mind-blowing orgasms but I am worried about what they might say or tweet when this is over.\n\nSam and her friends usually sleep late but since I'm awake early, I run a few critical errands and I'm sitting at the table when they wander into the kitchen. \n\n\"I'll do it,\" I say without any preamble. \n\n\"Really?\" Angie's face lights up and all three of them rush over to hug me. \n\n\"But we have to talk about a few things first.\" I motion them to the chairs and they take their seats, looking at me like they are about to hear the meaning of life. \n\n\"First, you asked me for confidentiality, Sam.\" She nods. \"I have to ask you guys the same thing. No discussing, tweeting or anything else. When it's over, no one talks about it, agreed?\" All three nod their ascent. \n\n\"Second...\" I don't really have a second point. \"Well, I guess that was the main thing but I want to talk about how we're going to do this,\" I say, looking at Angie. \"How did you envision it? Will you and I just go into my bedroom while Sam and Jenna wait out here?\"\n\n\"No way,\" Jenna answers for her. \"We're all coming into the bedroom. We want to see what this is all about.\" \n\n\"That's alright isn't it?\" Sam looks questioningly at me.\n\n\"I think that's up to Angie,\" I answer, not sure how I feel about an audience.\n\n\"I just assumed they'd be there,\" Angie says. \"That makes it less like I'm cheating on my boyfriend and more like you're teaching us stuff.\" Her logic isn't infallible but if they all want to be there while I fuck their friend... damn! What have I gotten myself into?\n\n\"Okay. I've been thinking about this and we're not going to just plop down on the bed and start having sex. We're going to spend the day together and work towards it gradually, like you would in a real relationship, okay?\"\n\n\"Whatever you say,\" Angie answers, obviously eager to get past the talking stage. \n\n\"You're the boss,\" Jenna adds. Sam just smiles appreciatively at me.\n\n\"Breakfast first and then we'll go in the pool,\" I announce. \"I'll fix breakfast while you guys get your suits on.\" \n\nThey rush to the bedroom while I whip up some eggs and bacon. After the dishes are cleaned up we head out back to the pool. I don't have this all planned out but I know I want to start with a relatively normal setting and then gradually make it more erotic. \n\nI grab a beach ball and we start tossing it around in the pool. I stay focused on Angie even though Jenna's bouncing breasts are terribly distracting. We're all having fun and after a good round of innocent splashing I gradually begin touching Angie in a more familiar manner. At first I'm just playfully grabbing her around the waist, pulling her against me and then patting her fanny as I push away. I progress to kissing her neck and telling her how beautiful she is while my hands wander over her exposed skin. \n\nSam and Jenna instinctively retreat to the other side of the pool with the beach ball and I turn Angie towards me. Brushing her hair from her eyes, I kiss her tenderly on the lips. My hands are lightly caressing her shoulders as her lips part and my tongue slides inside her warm mouth. She is a surprisingly good kisser and my hands roam her naked back as our tongues dance in and out of each other's mouth. Sam and Jenna have climbed out of the pool and are sunning themselves on the deck as they watch our increasingly intimate encounter.\n\nCupping Angie's firm ass cheeks, I pull her against me and my cock makes no secret of its arousal level. Damn if she doesn't surprise me again by wrapping her legs around me and grinding her bikini-covered pussy against the bulge in my suit. With our tongues continuing their tasty probe, I untie the strings holding her bikini top and slip it out from between us. \n\nAngie halts the kiss, realizing she is topless in my backyard. Good, I was finally able to surprise her. It's fairly secluded back here and there isn't much chance anyone will see us but I have found that just the idea of being exposed outside tends to enhance the arousal. \n\n\"I'm going to lick the water drops from your naked breasts,\" I whisper, wanting to stimulate her thoughts as well as her body. Her only response is an audible sigh as she gives into her urgings and crushes her firm tits against my chest. \"I can't wait to get my mouth around your incredible nipples,\" I add.\n\nUnhooking her legs from behind me, I stand Angie back on her feet in the water. With my hands firmly on her waist, I smile at the sight of her lovely chest. It's even more enticing in person than on the video but my gawking is making her self-conscious and she moves her hands up toward her chest.\n\n\"Don't cover yourself,\" I plead, pulling her hands back down. \n\n\"They're not very big,\" she says quietly as her face blushes and she lets her arms drop to her sides. \n\n\"They're perfect,\" I counter. \"Like a masterful work of art.\" Leaning forward, I start licking the beads of water from the valley between her mounds. This is unbelievable. My cock is rock hard as I lick up and down, gradually widening my path to include the inside curves of her tits. Angie rests her hands on my shoulders as I slowly swirl my tongue all around the contours of her pert breasts, consciously avoiding her puffy nipples. \n\n\"Hmmm,\" she breathes, grabbing the hair on the back of my head as I flick my tongue across one of her nipples. Without moving my mouth from her breast, I maneuver Angie towards the side of the pool. She's a petite young woman and I easily lift her up and place her bottom on the tiled edge. Positioning her legs on either side of me, I devour her exotic nipples. \n\nDamn! I've never felt anything like these puffy tits. I'm used to more conventional nipples that jut out like Jenna's but these babies are amazing. The nipple and areola is just one big bulbous tip on her round breast. I suck the entire thing in my mouth, flicking my tongue across it and trying to distend the little bud that's buried in the middle. \n\n\"God, that feels good!\" Angie moans as I knead her soft breasts with my hands and vigorously suck on the rounded tip. Her tits may be different but they are very sensitive. I squeeze more tightly around her breast as I continue sucking and a tiny bud emerges that I can grab with my teeth. Applying just enough pressure without actually biting, I pull her nipple away from the surrounding areola and suck it into my mouth. \n\n\"Oh fuck!\" Angie cries, sliding forward on the tile and humping her horny pussy against my torso. I lightly chew on her taut nipple while continuing to maul her firm breasts with my hands. \n\nSwitching to her other tit and giving it the same treatment, I'm shocked by her incredible responsiveness. Her boyfriend must be a complete idiot not to be able to get her off.\n\nReleasing her tits, I motion Sam and Jenna over while I untie the strings on the side of her bikini bottom. Angie surprises me by grabbing my head and pulling me into a kiss, rekindling the intensity of our earlier tongue swapping. Damn! She is hot to trot!",
        "\"Grab that folded towel and put it under her head,\" I instruct the other two. I hadn't intended to take it this far in the backyard but with this level of responsiveness I don't want to risk breaking the spell. \n\nSam positions the towel as I gently push Angie onto her back on the pool decking. Jenna and Sam take up positions on either side of their friend as I peel her bikini bottom away from her skin. Fuck! I can smell her arousal without even bending down. She's already wet and ready but I remind myself to go slowly. \n\nLeaning over her prone body, I plant a light kiss on each of her bright red nipples before licking my way down her flat stomach to her navel. I tease her belly button for a couple of minutes and then raise her legs onto my shoulders to give me wide-open access to her aroused pussy. She's very wet but I don't go straight for the target. I breathe in her intoxicating aroma and then lick all around her pussy, brushing my check across her thick layer of pubic hair. \n\nI was so intent on her pussy and tits that I hadn't realized Angie had such exquisite thighs. I raise her right leg into the air and lick from the inside of her knee to the crevice at the top of her inner thigh.\n\n\"Look how wet she is and he hasn't even touched her yet,\" Jenna says as she leans in for a closer look at Angie's pussy. \n\n\"I wish he would!\" Angie says as I repeat my thigh licking on her other leg. She's squirming around trying to push her pussy into contact with my tongue as I circle closer to her juicy lips. As she wriggles, her head comes off the towel and hits the bare concrete. \n\n\"Oww!\" Angie yells, lifting her head from the deck. Sam tosses the towel aside and scoots her bottom over so her lap is positioned under Angie's head. It's kind of a surreal moment when I look up from Angie's pussy and see my granddaughter stroking Angie's hair and watching me get ready to eat her pussy. I close my eyes and take a deep breath before lowering my face to taste her delicate charms.\n\n\"Oh yeah!\" Angie cries as I take a long lick up her juicy slit, lapping up her succulent nectar. Damn! She tastes good and I love that my first touch of her pussy is with my tongue. I swirl it around in her juicy hole and nibble on her labia as she arches her back and pushes against my face. \n\n\"Mmmmm,\" Angie murmurs as I tease her wet pussy with my tongue while devouring her mouthwatering juices. I just can't seem to get enough of her succulent pussy. She is so wet and responsive and I haven't even touched her clit yet. Plunging my tongue deep inside, I drag it up to the top of her opening while she humps her horny pussy against my face.\n\n\"Ohmyfuckinggod!!\" Angie screams the instant my tongue touches her clit. She's bucking feverishly now as I lightly suck on her swollen love bud and use my hands to hold her down against the deck. This is when I would normally push a finger or two inside her pussy for extra stimulation but Angie is so close that I don't think it's necessary. I'll save that little trick for the next round. She's about to explode any second now.\n\n\"Ohhhhhh! Fuuuuucck! Yeesssss!\" Angie yells right on cue, arching her back and driving her head into Sam's lap as her body convulses and her pussy floods with a new batch of hot cream. She grabs Sam's arms squeezing them as I keep sucking her through an intensely satisfying orgasm.\n\nWhen her body drops back to the deck, I release her clit and eagerly lap up her steadily flowing juices. Jenna and Sam are staring wide-eyed at Angie as she gasps for breath. I want to continue eating her pussy but realize the deck is too rough.\n\n\"Let's take this inside,\" I say as I stand up and get out of the pool.\n\n\"That was amazing,\" Angie says dreamily.\n\n\"Only round one, Babe,\" I assure her as I scoop her into my arms and carry her limp body into the house. Angie is short and doesn't weigh much but it's still a little bit of a workout to get her into the house and into the bedroom. The other two help me lie her on the bed. \n\n\"More comfortable?\" I ask as I slip off my wet swim trunks and lie down beside her. Turning on my side, I graze my hand across her abdomen.\n\n\"Mmm hmm,\" she agrees spreading her legs as my fingers comb through her damp pubic hair. \n\n\"I'm going to let you catch your breath and then we're going to do it again... only better,\" I tell her. \n\n\"Not sure if it can get much better,\" she smiles, obviously hoping she's wrong about that.\n\n\"Aren't you going to fuck her?\" Jenna asks.\n\n\"All in due time, my dear,\" I respond, winking at Jenna. \"Watch and learn, grasshopper.\" By the looks on their faces, none of them get the reference. \n\n\"How do you feel?\" I ask Angie as my fingers glide over her slick pussy lips. Her nipples are still erect and I lightly kiss each one.\n\n\"Kind of floaty,\" she says quietly. \n\n\"Well, you're wet enough to float,\" I answer. She giggles bashfully as I dip my finger inside her frothing hole. \n\n\"Mmm,\" she moans and spreads her legs farther apart. I scoop out a gob of her hot cream and bring my finger to my lips, making eye contact with her as I suck off the tasty coating.\n\nSam and Jenna, sitting on the bed on either side of Angie's head seem captivated by my actions. Jenna's nipples in particular seem to have grown more prominent, pushing against her thin bikini top. \n\nI dip my finger a couple more times smearing her taste over her puffy, pink nipples. Both Angie and Jenna gasp as I suck her flavor from her breasts and play with her overheated pussy.\n\n\"Do you kiss your boyfriend after he's had his tongue in you, or suck him after he's fucked you?\" I ask Angie as my fingers slide back into her steamy opening.\n\n\"Sometimes,\" she whispers, clearly awe-struck that we're lying here having this conversation while I lick her sexy flavoring from my fingers and her tits. \n\n\"Then you know how sexy you taste,\" I say bringing my fingers to her lips and gently prodding them open.\n\n\"Oh...my...god,\" Jenna whispers as she watches Angie suck her juices off of my fingers. Sam's eyes seem to be more interested in me than Angie; particularly my exposed erection, which is poking Angie's thigh. \n\nAs I dip my fingers back into her hot pussy, Angie's hand encircles my cock.\n\n\"Do you want me to suck you off?\" she asks as I bring my fingers back to her lips. \n\n\"Not right now, Sweetie,\" I answer even though a blowjob from one of these sexy young ladies would be wonderfully welcome. \"This is all about you, remember.\" Jenna looks like she's going to say something but she looks at Angie and doesn't. Now her attention is on my cock, too.\n\n\"But I've had my orgasm,\" she says, stroking her hand up and down my rigid shaft. \n\n\"Only one little one,\" I say. \"There's much more where that came from.\" To prove it, I position myself between her legs and start licking all around her red-hot snatch. \n\nShe is much more sensitive this time and seems ready to climax in no time. I slow the pace, alternating frequently between tonguing her hole and sucking her clit. \n\n\"Oh God! I'm so close!\" Angie moans as I again relinquish her love bud in favor of slurping up her steadily flowing cream. Jenna and Sam are watching intently as I replace my tongue with my fingers, swirling them around inside her burning snatch as I suck her engorged clit into my mouth. \n\n\"Oh fuck! Oh Fuck! Yeah! Oh YeaaaaaAAAAAH!\" The final yeah turns into one continuous moan as Angie grabs the back of my head and bucks feverishly against my mouth. I vigorously pump my fingers in and out as I ease up a little on the sucking. Clamping her thighs against my ears, her pussy muscles pulsate around my fingers as her nails dig into my scalp. I keep sucking and lapping her juices as her body spasms and she jerks anxiously against my face. \n\n\"Holy shit,\" Jenna whispers as Angie's sweat-soaked body drops back on the bed and she gulps air into her lungs. I pull my head back but leave my fingers insider her pulsating pussy. \n\n\"There are condoms in that drawer,\" I tell Sam who raises her eyebrows at me. \"I got them when I went out earlier,\" I answer her unasked question. Before Sam can respond, Jenna has jumped off the bed and is dashing over to the nightstand. \n\n\"I'll get them,\" she says, excitedly opening the drawer. \"A three-pack,\" she smiles. \"You're prepared, Granddad,\" Jenna teases as she rips the foil package open with her teeth and extracts the lubricated sheath. \n\n\"That's all they had at the local convenience store,\" I answer, holding my hand out for the condom. \n\n\"I've got this,\" Jenna says, slapping my hand away as she steps closer. Grabbing my rigid cock, she expertly rolls the condom down the length of it, reinforcing my previous impression of her sexual experience. Her hand lingers at the base my shaft with her fingertips brushing my swollen balls as she tries to guide me towards Angie's splayed-open pussy. \n\n\"I can take it from her,\" I assure her as I gently push her arm away. \n\n\"Okay,\" Jenna smiles. \"I'll just hang onto these in case we need them,\" she says, holding up the other two condoms.\n\n\"Jenna!\" Sam hisses as I align my cock with Angie's well-lubricated pussy. \n\n\"What?\" Jenna asks, innocently without taking her eyes from mine. \"I was only trying to help.\" She sashays her way back to the other side of the bed and crawls up next to Angie.\n\n\"You ready for the finale,\" I ask. \n\n\"More than ready,\" Angie pants, having barely recovered from her recent orgasm. As my cock glides into her soggy pussy, I realize that our difference in height doesn't bode well for the missionary position. Her face will be buried in my chest while her tits are crushed against my stomach. Grabbing her thighs, I push her legs up until she's almost bent in half and drive my cock deep into her welcoming channel. \n\n\"Oh yeah! Fuck me!\" Angie cries as she reaches for her friends' hands. Sam and Jenna each take a hand and she smiles at them as I hold her legs down and start a steady rhythm.\n\nIt's been a long time since I've fucked with a condom but the snugness of her compact pussy goes a long way towards offsetting the lack of bare skin contact. Fuck! Not only am I eating and fucking an eighteen-year-old beauty but I'm doing it with her friends sitting next to her on my bed! I've never fucked with an audience before but it is surprisingly erotic and definitely arousing. \n\nMy cock has been throbbing for at least an hour before we started fucking so I slow my rhythm down to try and prolong my release but Angie is having none of it. \n\n\"Harder! Oh god! Faster! Fuck me harder and faster!\" she cries and I pick up my speed, jackhammering my cock in and out of her eager pussy. Jenna and Sam are holding Angie's hands and staring at the swollen rod connecting our sweat-soaked bodies. Thankfully, the plastic sheathing is helping hold off my own orgasm until I can get Angie off.\n\n\"Ohhhhhhhhh! Fuck! Fuck!\" Angie's knuckles are white from squeezing her friends' hands so tightly as I continue to pummel her enflamed pussy. Sensing how close she is, I let go of her legs and she instantly swings them down beside me. She arches her back and plants her heels on the bed as I grind my pelvic bone against her clit.\n\n\"Oh yeah! Oh Fuck! OhhhhhhhHHHHHHH! FUCCCCCK!\" Angie's orgasm hits her like a freight train rumbling through her body. She convulses, her pussy clenches, and her head thrashes around on the mattress as I slam my cock home and explode inside her quivering pussy. Fuck!\n\nCollapsing on top of her, I wrap my arms around her and flip us over so she's on top. Kissing the top of her head, I hold her tightly against me as I make eye contact with my granddaughter. \n\nSam has a giant smile on her face and is breathing almost as hard as Angie. She just nods her approval and pats my shoulder. Turning to my left, I'm shocked to see Jenna tearing off her bikini top and exposing her gorgeous breasts. Her thick, dark nipples are fully aroused and jutting out from her large, jiggling tits.\n\n\"Jesus, Jenna!\" What are you doing?\" Sam asks, incredulous at her friend's behavior. \n\n\"Did you see that?\" Jenna asks, nodding towards Angie. \"That was incredible. I want some of that!\" she says anxiously as she unties the strings on her bikini bottom. \n\n\"But Jenna,\" Sam pleads. \"This was for Angie.\"\n\n\"Not anymore,\" Jenna says. \"I've never seen anything like this and I'm not getting anywhere near this kind of pleasure from Matt. I don't know about you, Sam but there are two more condoms that shouldn't go to waste.\" Completely naked, Jenna kneels on the bed with her tantalizing breasts hanging inches from my face.\n\n\"How long do you need to recover, old man?\" Jenna teases as she pinches her taut nipples. I turn questioningly to Sam who just shrugs her shoulders and smiles. Jesus! My cock is still buried inside Angie's pussy, which hasn't even stopped quivering. I've barely caught my breath before Jenna starts flaunting her voluptuous body at me. \n\n\"I... um... just give us a few minutes, Jenna.\" I admonish her while staring at her unabashed nakedness. Her face assumes an exaggerated pout as she sits back on her haunches with her thighs spread. Staring directly into her glistening pussy, I guess I shouldn't be surprised at how aroused she's gotten from watching us fuck but I never expected this.\n\n\"So Angie,\" I whisper as I brush her damp hair from her forehead. \"I guess we proved it wasn't you.\" \n\n\"It's not me,\" she laughs. \"It is definitely not me! God that was... I don't even know what that was... but thank you,\" she says, leaning up to kiss my lips while being careful not to disengage my spent cock from her still fluttering pussy. \n\n\"So what is the problem,\" I probe to see if she's gotten the message.\n\n\"Rob doesn't know what he's doing,\" she smiles.\n\n\"What are you going to do about it?\" I ask as she starts rocking back and forth on my semi-soft cock.\n\n\"Hey, Doctor Phil,\" Jenna smirks. \"You've got patients waiting.\" \n\n\"I'm going to talk to him, Granddad,\" Angie answers as we both ignore Jenna.\n\n\"Good girl,\" I tell her as she leans down for another kiss. We entwine our tongues for a few minutes and then I lift her off my spent cock and lie her down beside me on the bed. \n\n\"My turn?\" Jenna asks, reaching for my cock to remove the used rubber. \"Want me to suck it hard, Granddad?\"\n\n\"Just wait a minute.\" This time I slap her hand away before she can grab my cock. \"I'm going to clean up before we can do anything. Safe sex doesn't just mean condoms, it means not trading sexual fluids between partners.\"\n\n\"He's right,\" Sam tells Jenna as she opens her mouth to complain.\n\n\"First, I'm going to get rid of this condom and then I'm going to take a shower.\" I tell them as I swing my legs off the bed.\n\n\"Granddad?\" Jenna calls to me as I near the bathroom door. She jumps off the bed as I stop to look back. \"Can I join you in the shower,\" she asks coyly. \"It'll be like the foreplay you had with Angie in the pool.\" She offers encouragingly.\n\nDoes this woman ever give up? I stare dumbfounded at her naked body. As my eyes take in her lush breasts, aroused nipples and fur-lined pussy, I warm up to the idea.\n\n\"Good idea, Jenna,\" I smile. Give me a few minutes to me get rid of this,\" I say, pointing to my condom covered cock, \"and brush my teeth then you can join me in the shower. It'll be fun.\" \n\n\"Don't I know it!\" she says, bouncing on her heels, which causes her breasts to jiggle enticingly. My cock starts responding even before I get the condom off. Whatever I've gotten myself into; it looks like it just multiplied.\n\nI wrap the used condom in some tissue and put it in the wastebasket, making a mental note to dispose of the trash before my wife gets home. Of course, the way things are going I may have more than one condom in there before the day is over. \n\nI brush my teeth, paying special attention to my pussy-coated tongue. As I wait for the shower water to heat up, I reflect on what Jenna said to Sam. Surely, she isn't suggesting that Sam include herself in our little fuckfest. Fucking her friends isn't the smartest thing I've ever done but at least it isn't incest. I'm about to step into the shower when Jenna appears in the doorway, looking downright edible. \n\n\"Ready?\" she asks. Yes! For anything! Her thick, black nipples jut out invitingly from her luscious breasts and it takes considerable constraint not to start sucking on them before I've cleaned up.\n\nJenna joins me in the shower and we face each other with the spray hitting her back. I kiss her lightly on the lips thinking we'll take this nice and slow when she picks up the soap and starts lathering it all over my cock and balls. Fuck!\n\n\"This is what we need to clean up, right?\" she asks with fake innocence while her soapy hand strokes up and down my recovering shaft. Pushing her firm tits into my chest, she teases my balls with one hand and strokes my cock with the other. She's driving me close to the edge with a simple hand job. Goddamn! Unlike Angie, this girl knows exactly what she's doing. \n\nMy cock is eagerly responding to her machinations but I don't want to waste cum down the shower drain. Forcing her to release my cock, I kiss her hungrily on the lips, sucking her tongue into my mouth as her hands glide around and cup my ass cheeks. Pulling me tightly against her, she grinds her horny pussy against my soapy cock.\n\n\"Granddad,\" she sighs next to my ear. \"You sure turn a girl on.\" She's rubbing her slick, sudsy body against me as she pinches and squeezes my ass cheeks. I lean my face down and our lips meet in a longer, more fervent kiss. Fuck! I've got to get control of this or we're going to fuck right here in the shower without any of the build up that Angie enjoyed.\n\nBreaking the kiss, I start soaping Jenna's shoulders and down over her ample chest. I consciously slow myself down, reveling in my first touch of her firm, fleshy breasts. My cock is throbbing as I graze my palms over her hard nipples and press my fingers into her tender contours. Gently pulling on her exquisite nipples, I roll them between my thumb and index finger and tug them out farther from her breasts. \n\n\"Mmmmm,\" she says, \"I want you so bad, Granddad.\" \n\n\"I want you too, Jenna,\" I whisper. \"I think it's time we took this to the bedroom?\"\n\n\"Yeah,\" she breathes, pushing me away so she can rinse off. After toweling each other dry, we head into the bedroom to join Angie and Sam on my king-sized bed. Jenna has her hand wrapped around my fully recovered cock, leading me into the bedroom like a pull toy. She is obviously going to be a handful and I can't wait to surprise her a little.\n\nAngie is splayed out on my bed looking as contented as she ought to after her multiple orgasms. Sam is sitting near her head, staring uncomfortably at Jenna's hand encircling my hard cock. Or maybe she's just staring at my cock, I'm not sure so I try for a little humor.\n\n\"You're a little overdressed, Sam,\" I quip as she blushes and looks down at her bikini with wide-eyed apprehension.\n\n\"I'm just kidding, Sweetheart,\" I tell her as Jenna and I climb onto the bed. \n\n\"Fuck! I am the only one dressed, aren't I?\" Sam laughs nervously. Jenna lies next to Angie, scooting her over a little by bumping her hip against Angie's bare ass. \n\n\"You're perfect, Sam,\" I answer, kissing her on the forehead. \"I was just teasing you.\" I assure her before taking my place next to Jenna. \n\nI kiss Jenna and her tongue slices through my barely parted lips, ramping up the passion as she swirls it around in my mouth. My hand drifts across her stomach and my fingertips come to rest against the underside of her lovely brown breast. \n\nJenna moans into my mouth as I caress her curvaceous mammary and my fingers find her taut nipple. I pinch, twist and pull on her thick protrusion as our tongues continue to dance lustfully. As good as the kiss is, I want my mouth on these nipples. I leave a quick trail of kisses as I slide down her body and encircle her left nipple with my lips. I've wanted to suck on these babies ever since they first showed up on my computer screen. ",
        "\"Oh yeah,\" Jenna breathes as I suck her nipple into my mouth and lightly drag my teeth along its length. My thought is to go slowly like I did with Angie, build up the arousal and maybe even convince Sam and Angie to join in a little too. Jenna caresses the back of my head, as I taste her nipple, teasing it to even greater tautness. \n\nI take my time ministering to her phenomenal breasts, leisurely biting, licking and sucking until I hear a slight change in her breathing that signals she's ready for more. My cock is rock solid and I want to fuck this young woman so badly but I hold these lustful thoughts in check as I kiss my way down her body and bury my face in her thick, carpet of pubic hair.\n\nI love her nipples but this other fine attribute of her African-American ancestry is like a fucking aphrodisiac. I've never been with a black woman before and although Jenna is half Asian, her sponge-like pubic hair surrounding her thick, black labia is my erotic fantasy of a sexy black pussy. \n\nI hesitate before taking a taste of her delectable juice so I can savor the exotic view. Jenna is getting anxious and spreads her thighs wider, arching her back into a not very subtle invitation.\n\n\"Don't be so impatient,\" I whisper just before taking a long lick along her velvety pussy lips.\n\n\"Ohhh fuck!\" Jenna cries, smiling at Angie. \"You know what this feels like, don't you?\" Jenna asks when Angie scoots up next to her for a better view. Angie just nods while raptly watching my tongue disappear between Jenna's swollen pussy lips. Sam is staring just as intently as Angie, and my cock's stiffening response shocks me. \n\n\"Mmm, oh yeah,\" Jenna moans as I swirl my tongue around and enjoy her sweet nectar. Damn! I have never eaten two different pussies in the same day. Hell, even in the same month. Making a comparison between Angie and Jenna is inevitable. Angie's compact pussy with its thin outer lips emitted a slightly tangy taste and a strong personal aroma. Jenna's thick, dark pussy on the other hand has a more subdued fragrance and a much sweeter flavor. They are both very tasty. \n\n\"Ohmygod!\" Jenna bellows as I suck her distended clit into my mouth. Another big difference between the two; Jenna's clit is thicker and more pronounced than Angie's smaller love bud but every bit as sensitive. The whole morning has been one long bout of foreplay for Jenna from watching Angie and I fuck to lathering soap all over each other in the shower but even so her quick climax surprises both of us.\n\nOhhhh! Fuck!\" Jenna cries as her orgasm strikes like a thunderclap, shaking her body and flooding my mouth with her frothy love juice. Damn! My tongue can't lap it up fast enough as her pulsating pussy keeps churning out more sweet syrup with each lick. \n\nSomething about Jenna's sexual cockiness makes me want to work harder to surprise her. Her bountiful chest is heaving and she's gasping for breath as I bend her legs up beside her tits and bury my hard cock in her still quivering pussy. \n\n\"Oh Fuuuuuck!\" she gasps as her eyes pop open and she tries to squeeze her trembling pussy muscles around my cock. I hold it there, balls deep in her hot, velvety snatch without moving in or out. \n\n\"I'm not going to fuck you yet,\" I whisper in answer to her unasked question about protection. \"I just want to give you a taste of what's to come,\" I say, recognizing the double entendre as it leaves my lips.\n\n\"You can fuck me!\" she cries. \"I'm ready to be fucked!\" I shake my head as I slowly withdraw my cock from her sizzling hole and lower her legs back onto the bed. \n\n\"Not yet, but soon,\" I sigh, as I position my head between her mocha colored thighs and lick her dripping juices from around her flooded pussy. Jenna responds immediately, humping her enflamed pussy against my mouth and I decide it's time to raise the stakes.\n\n\"You guys want to help?\" I ask, nodding toward Angie and Sam. \n\n\"Sure,\" Angie answers automatically while Sam looks at me uncertainly. \n\n\"Suck on her nipples,\" I tell them. All three of them look at me like I've just fallen out of the sky. \"Trust me, it will send her into an unbelievable state of orgasmic bliss.\" Neither one moves. \n\n\"She would do it for you, wouldn't you, Jenna?\" She nods euphorically, looking from one friend to the other. \n\n\"Angie, you take that breast,\" I say, nodding towards Jenna's left tit. \"Just do it,\" I encourage her with just a hint of adult authority in my voice. She shrugs and leans down, wrapping her lips around her friend's swollen nipple. \n\n\"Sam, are you with us or not?\" I ask, feeling only a little guilty for pushing her to do this. She watches Angie for a few seconds and then glances at Jenna's pleading eyes. It's obvious that Jenna wants this but Sam is still hesitant.\n\n\"Please,\" Jenna whispers. Sam scoots over, flashes me a look I can't decipher and then sucks Jenna's right nipple into her mouth. Jenna wraps her arms around their backs and sighs contentedly.\n\n\"Just do whatever comes naturally,\" I advice, knowing they've never done anything like this before. \"Tease her the way you'd want your nipples to be teased.\" Oh fuck! They're actually doing it! My cock is so fucking hard as I watch these beauties suckle at Jenna's magnificent brown breasts. I dive in, devouring Jenna's succulent pussy while keeping my eyes glued to the erotic sucking motion of their tender lips around their friend's nipples. \n\n\"Ohhh God!\" Jenna cries as the three-person assault on her body drives her into an unexpected frenzy. She's humping against my mouth, grabbing her friends' hair and moaning loudly as another orgasm rapidly approaches.\n\n\"Squeeze her breasts,\" I tell them as I push two fingers into Jenna's juicy cunt and flick my tongue across her clit. This time neither one hesitates as they knead her bountiful tits and continue sucking her taut nipples. \n\n\"Oh fuck! Oh fuck! I'm cumming again!\" Jenna screams. \"Oh god! I'm fucking cummmming!\" I piston my fingers in and out of her steaming pussy and suck her clit completely into my mouth. They're really into it now and I watch with amazement as Sam squeezes Jenna's large breast and tugs on her nipple with her teeth, stretching it out from the surrounding areola. Angie sees her and follows suit with Jenna's other nipple.\n\n\"Oh! Oh! Oh! OOOHHH! FUCK!\" Jenna's body convulses with quick, jerky tremors as her intense orgasm judders her body and saturates her pussy with fresh juice. I continue my onslaught with my lips wrapped around her clit and my fingers pumping her hole until the jerking settles down into light trembling.\n\n\"Don't stop,\" I instruct them as I push Jenna's legs in the air and slide my hard cock into her well-lubricated pussy.\n\n\"Jesusfuckingchrist!\" Jenna yells, clawing at her friends' backs and clutching her pussy muscles around my rigid cock. God, she feels so fucking good! I start pounding into Jenna's anxious pussy when Sam abruptly abandons Jenna's tit and sits up with a start. Her eyebrows arch as her wide eyes dart frantically around the room searching for who knows what. What the fuck? \n\nSam scrambles off the bed and runs over to my dresser. Shit! I forgot the fucking condom. Sam is tearing the package open and pushing against my stomach to disengage my cock from her friend's smoldering pussy. I pull out, leaving Jenna humping air as Sam wraps her hand around my slick cock. Fuck! This is my granddaughter! Her somewhat incestuous touch fuels my arousal and my cock pulsates against her fingers while I try not to hump her hand. \n\nSam isn't nearly as experienced as Jenna and she fumbles a little trying to get the condom positioned correctly on my cockhead. Her hand is shaking as she nervously rolls the lubricated sheath down the length of my cock. Is it simply inexperience or does she feel the same incestuous arousal that I'm feeling? \n\n\"Thank you,\" I whisper. Sam blushes as she smooths out the wrinkles along my shaft. With the condom firmly in place, Sam positions my cockhead against Jenna's fur-lined opening and I slowly start sliding back inside of her. Sam's fingers linger longer than necessary on my throbbing cock as it descends into her friend's tight love canal. Locking eyes with me, she brushes her fingertips across my balls as she pulls her hand away.\n\nFuck! I slam my swollen cock into Jenna's sweltering cunt as I watch Sam crawl back up on the bed to resume her place. Her face is flush as she closes her eyes and sucks Jenna's nipple back into her mouth. I may be pounding into Jenna's pussy but my eyes are fastened on my alluring granddaughter. \n\nJesus! Could Sam really be thinking about using the third condom? As Jenna's pussy pulsates around my jackhammering cock I imagine my sexy granddaughter stretched out under me. I remember how enticing I found her naked breasts and her blonde pubic hair when I saw her on the video. Now, curled up next to her friend with her long, shapely legs drawn up tightly I gape at her bikini covered ass cheeks and imagine her snug love channel as I pummel Jenna's smoldering cunt. \n\n\"Oh God!\" Jenna moans. \"Oh...my...fucking...God!\" Jenna starts shaking as I continue my unabashed assault on her battered pussy. \"I'm cumming!\" she screams. \"I'm fucking cumming again!\" She pushes Sam and Angie away from her breasts and grabs my arms to pull me down on top of her. I drop down, settling myself on her soft tits as I jam my tongue in her mouth and I slam my cock into her shuddering pussy. \n\nArching her back and vigorously bucking beneath me, Jenna is bringing me right along with her. Breaking the kiss I look toward Sam but she has scooted down by the foot of the bed. I'm trying to see why when I feel her hand lightly squeeze my ass cheek and then her fingers caressing my balls. Holy shit! I lose it right then; jerkily spurting a huge load of cum deep inside Jenna's pussy while Sam lightly strokes my balls. \n\n\"Oh yeaaaaahh!\" Jenna bellows, shaking and shivering as her orgasm overtakes her. Digging her nails into my shoulders, she clenches her pussy around my cock and rides out her pleasure. \n\nSam glides her hand up over my ass while Jenna and I gasp for breath. Before Sam moves up next to me I swear I feel her lips place a quick kiss on my ass cheek but I could be imagining it. \n\n\"That was...\" Jenna pants. \"Wow! Granddad...\" I brush her damp hair from her forehead and kiss her lightly on the lips as we both struggle to catch our breath. My spent cock is enjoying the pulsating rhythms emanating from her torrid pussy as Angie and Sam cuddle up beside us. \n\n\"You should do this!\" Jenna says, turning her head to make eye contact with Sam. \n\n\"He's my grandfather,\" Sam protests, but noticeably without a lot of conviction. \n\n\"So what?\" Janna asks. \"You're not going to marry him or have his baby. This may be a once in a lifetime thing,\" she argues. I intentionally don't look at Sam as I let Jenna make her points.\n\n\"You really should think about it, Sam,\" Angie pipes up from the other side of the bed. \"I know it's weird but you can't imagine how good it feels,\" she giggles as she pulls me into a passionate kiss. \n\nWhat the fuck! My cock is buried in one smoldering pussy while another naked coed is tongue dancing with me and they're both trying to convince my sexy granddaughter to fuck me. Somehow it seems like the most natural thing in the world even though nothing about this feels normal. I'm pretty sure that most grandfathers don't experience anything like this. \n\nI move my arm over Angie's body, fondling her firm ass cheeks as we continue our mouthwatering kiss. My cock starts to stir inside Jenna's saturated pussy and she squeezes her muscles around it. I doubt I can go another round any time soon but it's nice to know the response is still there after two orgasms. I slide my hand between Angie's legs and my fingers stroke her slick pussy lips. \n\n\"Mmmm,\" she moans into my mouth as I tease her pussy. \n\n\"You guys are incorrigible!\" Sam sighs, getting off the bed. She flips the third condom onto the side of the bed she just vacated. \"Here,\" she says. \"You guys might need this.\" Sam walks out of the bedroom as Jenna starts rocking my semi-recovered cock in and out of her drenched pussy. \n\n\"It's my turn again,\" Angie says, breaking the kiss and staring at her friend. \n\n\"It's nobody's turn yet,\" I laugh. \"I'm not that young anymore.\" Reluctantly, I pull my fingers from Angie's burning snatch and my cock from Jenna's pussy. I roll over and get off the bed, leaving these two naked ladies wanting more. What could be better than that?\n\n\"Maybe later, Granddad,\" Jenna calls after me as I head for the bathroom to dispose of the used condom. \n\n\"Maybe later,\" I agree, glancing back at these two beauties lying naked across my bed. \"Of course, later.\" I amend before ducking into the bathroom. \n\nAfter disposing of the condom, I take a long, hot shower while trying to imagine what's going through Sam's mind. After all, this was her idea... well; at least she readily endorsed it. She wanted me to fuck her friends and I never for a minute thought she was part of the deal. Well, not at first anyway. \n\nThen after she put the condom on me and intentionally caressed my balls, I started to wonder. Of course, that could be dismissed as her wanting to ensure we used protection. In fact, everything could be explained away right up until she started caressing my balls while my cock was slamming into Jenna's cunt. There's no explaining Sam touching my balls other than sheer horniness. Then why did she act so disgusted when she left the room.\n\nI towel off and step into my bedroom to get dressed. Angie and Jenna are still stretched out on my bed with their eyes closed. My cock stirs at the sight of their naked bodies. They both look well fucked but ready for more. I hesitate, wondering if I shouldn't just join them on the bed for another round. Maybe later, I sigh. I slip on my shorts and go looking for Sam. Damn. Yesterday I was watching illicit video of these naked beauties and today... well shit, the day isn't even over yet.\n\nI find Sam in the living room, flipping channels on the TV. \n\n\"Hey,\" I say, sitting down beside her. Except for a quick glance at my crotch, she ignores me.\n\n\"You okay?\" I ask.\n\n\"Sure, why wouldn't I be,\" Sam answers with typical snarkiness for her age that can mean anything from, \"I really am fine,\" to \"Get the fuck away from me.\" I decide to ignore the complex innuendo or thinly veiled sarcasm and get right to the point.\n\n\"There's any number of reasons I can think of why you wouldn't be,\" I answer as I notice how hard her nipples are, poking at the front of her bikini top. \"That was pretty intense in there,\" I offer.\n\n\"Glad you enjoyed it,\" Sam says, staring at the TV. \"I thought you three would still be going at it, maybe you can get them to eat each other's pussies since you got us to suck Jenna's nipples.\"\n\n\"Are you mad at me, Sam,\" I ask. Fuck, wasn't all of this her idea? What did she have to be mad about? The silence stretches uncomfortably and I'm about to fill it when Sam turns her head towards me.\n\n\"You wanted to do me next, didn't you, Grandpa?\" Sam asks, looking directly into my eyes. Fuck! Why did she have to pick now to look at me? I'm sure there is no right answer to this but I take a stab in the dark.\n\n\"In the heat of the moment... yes. But only if you wanted me to, Sam,\" I answer honestly. Sam goes back to flipping channels and I sit quietly, just watching the rise and fall of her breasts inside her skimpy bikini top.\n\n\"I don't know...\" she whispers barely audible above the sound of the TV. \"If you weren't my grandfather, I'd have been tearing open that third condom in a heartbeat,\" she admits. \"But that would be incest, wouldn't it?\"\n\n\"Yes, Sam, it would.\" I answer. \"And I would never want you to do anything you might regret.\" I pull her into a very platonic embrace that is a lot more grandfatherly than I've acted all day.\n\n\"I'm not mad, Grandpa,\" Sam says, snuggling into my arms and leaning her head on my shoulder. \"I'm just confused... and horny!\" she laughs. \"I had to watch all that without joining any of the fun.\" \n\n\"I understand,\" I say and it sounds lame even as I say it. \n\n\"There you are!\" Jenna says, bounding into the room with Angie right behind her. \"We were getting lonely in there,\" she smiles. They're each wearing one of my t-shirts and the thin material is doing nothing to hide their exquisite charms. \"We borrowed a couple of your shirts, Granddad,\" Jenna says, twirling around like she's showing off the latest fashion. \n\n\"What's going on?\" Angie asks, her eyes darting between the two of us and the TV. \n\n\"Nothing,\" Sam spits out the word, making it sound like she's disgusted that it's true.\n\n\"Who's hungry,\" I ask, thinking I need to quickly change the subject. \n\n\"How about if I take the three most lovely ladies I know out to dinner?\" I ask after they all admit to being famished.\n\n\"Um, I'm telling Grandma that you think we're lovelier than she is,\" Sam teases. Having broken the tension, I watch them talk over each other's sentences as they offer restaurant and attire suggestions for the evening. \n\n\"I'm starved,\" Jenna announces as the hostess at a local restaurant and bar explains the specials. \n\n\"I can't imagine why,\" Sam whispers and I wonder if I'm imagining the envious tone of voice.\n\n\"I can't help it,\" she whispers back after the hostess has left. \"Sex always makes me hungry.\" She winks and smiles invitingly at me. \n\n\"It never had that affect on me until today,\" Angie says. \"Thank you, Granddad.\"\n\n\"My pleasure,\" I answer with a broad smile.\n\n\"Mine, too!\" Angie says, picking up on my ulterior meaning. \n\n\"And mine!\" Jenna laughs but stops abruptly when Sam glowers at her two friends. Jenna just shakes her head and closes her menu. \"I know what I'm having,\" she says giving me that same lascivious look that started this mess. \n\nWe're in a small seating area on one side of the restaurant which is separated into two distinct areas by an old fashioned wooden bar sporting a half dozen bar stools. There is a small dance floor on other side of the bar and I check out the jukebox as the ladies peruse their menus. I am pleased to find it stocked with a fine selection of the kind of soul songs that we used to call beach music. \n\nWe have a wonderful dinner and the conversation even includes a few non-sexual topics. When discussion gets around to the two guys who are arriving tomorrow both Jenna and Angie get overly animated about teaching their boyfriends how to pleasure a woman. \n\n\"I think we should do it together,\" Angie says. \"Like we did with granddad this afternoon.\"\n\n\"They'll have one hotel room with two beds,\" Jenna says. \"They're probably expecting us to take turns letting each couple have the room while the other couple walks on the beach or whatever.\"\n\n\"Do you think they'll go along with doing it together?\" Sam asks no one in particular.\n\n\"They won't have a choice if they want to get laid,\" Jenna announces. \n\n\"And they definitely want to get laid,\" Angie laughs. \n\n\"Maybe we can set up a little challenge to see who can eat their girlfriend to orgasm first,\" Jenna suggests excitedly.\n\n\"They are very competitive!\" Angie agrees, her face flushing with excitement. \n\n\"What prize does the winner get?\" I ask teasingly without any expectation that there will actually be a prize. Jenna shows me that seductive smile and leans over to whisper in Angie's ear. \n\n\"OH!\" Angie gasps. \"Really? I mean... are you fucking kidding me?\" she stammers a little louder than she should and quickly covers her mouth and lowers her voice. \"Would you?\" she asks Jenna.\n\n\"If you will,\" Jenna answers without a hint of hesitation.\n\n\"What?\" Sam asks. \"What are you two plotting?\"\n\n\"The winner,\" Jenna says, pausing with a flair for the dramatic. \"Gets both of us.\"\n\n\"At the same time?\" I ask, suddenly interested in this conversation.",
        "\"Um... no... I mean... we didn't,\" Angie stutters as she looks at Jenna for confirmation.\n\n\"Why not?\" Jenna smiles.\n\n\"Yeah, why not,\" Angie goes along with her friend.\n\n\"Well, why didn't I win anything this afternoon?\" I jest. \n\n\"You've already had both of them,\" Sam says exasperatedly. \n\n\"But not together,\" I counter just to see what they'll say.\n\n\"The evening is still young,\" Jenna smiles. \n\n\"And our boyfriends don't get here until tomorrow,\" Angie adds. \"Your bed is certainly large enough for all of us to sleep comfortably.\" Whoa boy! I look at Sam who just shrugs her shoulders. \n\n\"Or not sleep...\" Jenna adds. My cock is hardening at the prospect of a night with these two beauties and I try to discreetly adjust my shorts. Sam is sitting right next to me and catches on immediately to my predicament. \n\n\"Want to dance, Granddad?\" she asks as a slow soul ballad comes on the jukebox. Standing up and holding her hand out to me, she doesn't give me much choice. The giggles from the table as we walk to the dance floor convince me that my bulging shorts did not go unnoticed. \n\nAs I take Sam in my arms she surprises me by reaching down between us and adjusting my cock so it's sandwiched between us instead of poking at her. \n\n\"Better?\" she asks with a twinkle in her eye.\n\n\"Much,\" I answer, pulling her tightly against me and enjoying the feeling of her body against my hardness. \n\n\"Are you really going to do both of them at once?\" Sam asks but doesn't give me a chance to answer. \"How do you actually do that, anyway?\"\n\n\"First, I won't do it if you don't want me to,\" I answer, lifting her chin so we are eye to eye. \"Second, there are any number of creative ways to have a threesome.\"\n\n\"Oh really?\" Sam smiles. \"You've done this before?\" \n\n\"I take the fifth,\" I answer but the memory is vivid of the only other time I was in bed with two women together. \n\n\"Was one of them grandma?\" Sam asks curiously. \n\n\"Maybe,\" I answer cryptically. \n\nActually, it was. When we were still dating we didn't have a regular place to have sex. One of her girlfriends had a one-bedroom apartment she would let us use when she was in class or at work. One night, we went over there after some serious partying and her friend said we were welcome to her bed but she wasn't leaving. We joked about a threesome and her friend readily agreed before either of us realized we'd been taken seriously. We were horny and drunk and figured, what the fuck. It's been a long time but I'm not a complete stranger to threesomes.\n\n\"Really?\" Sam smiles. \"That is so awesome!\" She raises her eyebrows at me when my cock twitches between us. \"Fond memories?\" she teases as she hugs me tighter and grinds her pussy against my hard-on. When the music stops, I'm in worse shape than when we walked over here. \n\n\"I think granddad's ready to go home,\" Jenna says with her eyes locked on the front of my shorts. \n\n\"I'm ready,\" Angie says, jumping out of her chair and looking at us anxiously. I just laugh and shake my head as these three horny young women turn towards the exit. Damn! I'm as anxious as they are to get home and let nature take its course.\n\n\"Shotgun!\" Sam calls as we exit the restaurant. She smiles and takes my hand as we walk to the car. I open the door for her and she gives me a peck on the cheek before sliding into the passenger seat. She takes my hand again once we're on the road and holds it in her lap but is surprisingly silent while we drive home. Angie and Jenna on the other hand are whispering frantically to each other during the short drive to our house. \n\nBoth of Sam's friends start stripping off their clothes as soon as we're in the house. \n\n\"It's okay to get naked, isn't it?\" Angie asks as she slips off her blouse and drops it on the end of the couch. I nod my head and plop down in my favorite chair to watch the double striptease. Sam conveniently disappears into the kitchen ostensibly to get a Diet Coke but I think she's just trying to avoid this whole thing.\n\nJenna's tits spring free as she shrugs out of her bra and tosses it at me. Catching it in one hand, I set it on the end table just as Angie's bra comes flying at me. They're are laughing hysterically as they prance around, shaking their bare tits and unzipping their shorts. My cock is rock solid as I watch them turn their asses towards me and start tugging their shorts and panties down. \n\nSam comes back into the living room just as her friends wiggle their bare asses in my direction. Sam stops midstride and just stares at my bulging crotch. I try to decipher what she's thinking but Angie and Jenna have decided I need to lose my clothes, too.\n\n\"Come on, Granddad,\" Jenna says, kneeling in front of my chair as she pulls at my zipper. \"We need you naked, too.\" As if choreographed, Angie kneels next to her and I lift my ass off the chair as these two naked nymphs pull my shorts off. \n\n\"Hmmm what have we here?\" Jenna laughs as she delicately pulls the elastic band of my boxers over the tip of my cock.\n\n\"He looks happy to see us,\" Angie quips, wrapping her hand around the base of my cock as Jenna tosses my boxers aside. Sam has moved to the doorway that leads down the hall and she's slowly sipping from her soft drink can as she watches her two friends.\n\nRaising my eyebrows, I lock eyes with my granddaughter to make sure she's okay with this. She smiles resignedly and blows me a kiss before she disappears down the hall. I don't know what that means but I'm not in any position to find out right now.\n\n\"You need to lose the shirt,\" Jenna says, grabbing the bottom of my golf shirt and pulling it up. I raise my arms as she stands up and lifts it over my head. As she stretches to pull it off my arms, she's treating me to a very nice close up view of her voluptuous breasts with their firm, dark nipples. \n\nMy shirt hits the floor and Jenna rejoins Angie on the floor in front of me. Jenna licks her lips as Angie lightly strokes the length of my hardened cock. \n\n\"I want to taste it,\" Jenna whispers, pushing her tongue out as she leans forward. Angie is on the same wavelength, moving her hand down to the base of my cock as she turns my cockhead towards Jenna's tongue. \n\n\"Oh yeah,\" I moan as Angie holds my rigid shaft and Jenna licks the end of it like an ice cream cone. Holy fuck! \n\n\"My turn,\" Angie says, pulling my cock over to her own mouth and licking it exactly the same way Jenna did. My ass slides towards the edge of my chair as they take turns liking all around my swollen cockhead. Just when I think the world couldn't get any better, Angie slowly feeds my hard cock into Jenna's wide-open mouth. \n\n\"Oh my God!\" I cry as Jenna wraps her warm, wet lips around my cock and slides them down most of its length. Angie has moved her hand down to my balls and is gently caressing them as Jenna pulls her lips back along my thick shaft, her eyes locked on mine as she flicks her tongue against the underside. Angie continues to tease my balls while I hump my cock in and out of Jenna's talented mouth. Fuck!\n\nJenna strokes my cock with her hand as she pulls her mouth off and once again her tongue does the ice cream lick all around the bulbous head. Angie nudges her friend as she continues to tease my balls and Jenna slides her mouth down on one side of my cock while Angie leans forward and starts licking up and down the other side. \n\n\"Oh fuck!\" I groan as their two tongues lick all over the sides of my throbbing cock. I'm bucking my ass off the chair; positive I won't last very long, when they start taking turns sucking my cockhead into their mouths. \n\nOh God! They're almost kissing each other around my cock head as they lick and nibble the sides of it. Angie is still playing with my balls as Jenna strokes up and down my saliva coated cock. If having their warm mouths alternately sucking on my cockhead isn't heaven, I don't know what is. These two sexy goddesses are trading my cock between their mouths and I'm about to shoot through the roof! \n\n\"Oh god yes! Oh fuck!\" I groan as my cock erupts into Angie's mouth. She must have felt my balls tighten, because she slipped her open mouth over the end just in time. Instead of keeping her lips wrapped around me, she immediately slides her mouth to the side so Jenna's mouth can take her place and swallow my second spurt of cum. They continue to alternate sliding their mouths over the end of my cock until I am completely drained and then they sit up and smile at each other as they wipe the cum from around their mouths. \n\n\"We're going to get you hard again,\" Jenna smiles. \"We're not done with this yet, are we Angie.\" \n\n\"Not even close,\" Angie says, as she licks all around my spent shaft. Jenna pushes my knees up and lowers her mouth to my balls as Angie sucks my soft cock into her mouth. With one of them licking my balls and the other one sucking my cock, I start to recover faster than I ever thought possible. With my hard cock pointing at the ceiling, both ladies lean back on their haunches and smile at me.\n\n\"Who's first?\" Jenna asks, cocking her head to the side as both of them spread their thighs apart. What a question! I stare at Angie's perfectly round medium-sized tits with their puffy pink nipples before dropping my eyes to her dark brown triangular patch pointing down to her moist pussy lips and her long shapely legs. Shifting my eyes to Jenna, I smile at her more abundant breasts with their thick, dark nipples protruding like bullets in the center of her large, round areolas. Her spongy pubic hair surrounds her puffy pussy lips and her legs are every bit as enticing as Angie's.\n\n\"Perhaps we should take this into the bedroom,\" I say without choosing who's first. \n\n\"We only have one condom,\" Angie pouts. \"What do we do?\" \n\n\"He's doesn't need a condom for his tongue,\" Jenna says, standing up and leading the parade down the hall to my bedroom. I eagerly follow behind these two nubile nymphs; mentally comparing Jenna's fully rounded ass cheeks with Angie's cute bottom. My cock is rock solid as they crawl up on my bed and await my instructions. How did I ever get this lucky?\n\nThey are laying on their backs so close that their shoulders touch when I crawl up next to them. I can't help but smile at the perfect lineup their four lovely breasts make. It's like having my own little smorgasbord of tits and an all you can eat pussy buffet. Using both my hands and my mouth, I initially leave one of Jenna's breasts without any attention but zealously switch off between all four tits as I squeeze, suck and bite them into full arousal. \n\nTheir pussies are a different matter. I've seen bunches of threesome videos and I have some ideas about how I can please them both but it kind of depends on what they are willing to do. \n\nI start by massaging Angie's pussy as I kneel between Jenna's legs.\n\n\"How are you going to do us both?\" Angie asks as I slide my thumb into her juicy pussy and rock my palm against her mound. \"Mmmmm,\" she moans as I lower my mouth to Jenna's succulent snatch. \n\n\"Oh, yeah!\" Jenna cries as my tongue snakes around her slick lips and dips into her anxious pussy.\n\n\"Are you going to trade off like you did on our breasts?\" Angie asks, obviously anxious for my tongue rather than my hand. \n\n\"I'm going to try,\" I answer, taking a breath from Jenna's pussy. \"How much are you two willing to help out each other?\" I ask as my other hand teases Jenna's cunt while I move over to suck on Angie's pussy. So much for not trading sexual fluids between partners. \n\n\"What do you mean?\" Angie pants as I lick, nibble and tease her aroused cunt. \n\n\"He means will we go down on each other,\" Jenna answers. It's exactly what I mean but I wasn't going to be so blunt about it. \n\n\"Oh!\" Angie says, giving me no indication of her thoughts on the subject.\n\n\"You've seen how exciting it is to suck each other's nipples,\" I offer as a starting point while lightly chewing on Angie's outer labia. They look at each other trying to discern what each is thinking.\n\n\"Try kissing,\" I say. \"And we'll take it from there.\" I step up my machinations of Jenna's pussy while I suck Angie's clit into my mouth.\n\n\"OhhhhhH!\" Angie quivers as I flick my tongue across her sensitive love button. I watch as their lips meet in a close-mouthed kiss. It's a start.\n\nAny guy would kill to be in my place; two willing young women with their pussies splayed open, my fingers in one and my mouth on the other. Fuck, what an erotic fantasy? So why can't I concentrate? Why is my mind drifting to my sexy granddaughter? Why did she have such an anguished look when she blew me that kiss? Wasn't this all her idea? Why isn't she here enjoying it with us? \n\n\"Oh God! Don't stop!\" Jenna cries. Damn! I'd lost focus on their pleasure as my mind wandered into the other bedroom with Sam. I switch again, sucking Jenna's clit into my mouth as I finger fuck Angie's soggy pussy.\n\n\"Oh yeah! Just like that,\" Angie moans as I flick my thumb across her aroused clit. Both of them are rocking hard towards their respective orgasms, their asses humping off the bed as I work my hand and my mouth on them. Jenna comes first with an explosion of tangy juices flooding my mouth.\n\n\"Ohhhh my GOD!\" Jenna screams as I lap up her tasty nectar. As much as I'd love to suck all of her delicious cream, Angie hasn't cum yet. Replacing my fingers with my tongue, I drive Angie over the top in less than a minute. \n\n\"Yes! Yes! YES!\" Angie cries, grabbing the back of my head and bucking her pussy against my mouth. \"Don't you fucking move!\" Angie bellows just before her orgasm rips through her body and gives me a second helping of girl cum in as many minutes.\n\nTheir chests are heaving as they gasp for breath. I gently roll them towards each other as I slip off the bed. Their bodies still trembling and yearning for comfort instinctively reach out for each other. I smile as their arms and legs entwine and they begin a slow passionate kiss. \n\nI watch for a minute before ducking into the bathroom to wash their scent off my face and hands. Walking naked into the living room, I find my shorts and pull them on before heading down the hall to see Sam. \n\nI find her in her bed, flipping through a magazine. Her swimsuit pieces are tossed casually on the floor beside her bed and she's wearing one of my t-shirts. Laying on her back with her knees pulled up, the t-shirt stretches over her knees but doesn't quite cover her ass. My cock tries to respond even before I notice that the v-neck leaves half of her right tit exposed. \n\n\"Hey,\" I say as I enter the bedroom.\n\n\"I borrowed one of your t-shirts,\" Sam says without looking up from her magazine. \n\n\"I noticed,' I smile. \"It looks better on you than it does on me.\" \n\n\"How come you're not in there with them?\" she quips, nodding her head towards the next room. \"It sounded like you were having fun.\" I hadn't thought about how thin the walls are in this place. Sam probably heard every squeal and moan from her two friends.\n\n\"Are you upset with me, Sam?\" I ask as I sit on the bed next to her. \"Because I seem to remember you almost begging me to do this.\" I say, taking the magazine out of her hands and laying it on the nightstand so she'll have to look at me. \n\n\"I'm not upset,\" she sighs. \"It's just... I don't know... it just all kind of got out of hand.\" She sits up and wraps her arms around me, leaning her head against my chest. \"I thought you'd give Angie her orgasm, we'd all see how you did it and that would be it. I didn't expect Jenna to jump into it and everything.\"\n\n\"I'm sorry, Sam,\" I tell her as I pull her into a tighter hug and feel the warmth of her body through the thin t-shirt. \n\n\"It's not your fault,\" she says. \"Are you going back in there,\" she asks, pulling away from me so she can look at my face. \n\n\"Huh-uh,\" I shake my head no. \"I'll sleep on the couch and let them have the bed.\" I hadn't really thought about where I'd sleep until just now. \n\n\"No, you don't have to sleep on the couch, Grandpa,\" Sam says. \"If you're not going back in there, please sleep here next to me.\" As she says this, she scoots over to make room for me to lie down. I'm still wearing just my shorts. I lie down next to Sam and she cuddles up to my side as I wrap my arm around her.\n\n\"Just a second,\" Sam says, sitting up and pulling the t-shirt over her head. \"I can't sleep with this on, okay?\" Without waiting for an answer she tosses the t-shirt on the floor and snuggles up next to me completely naked. Oh fuck! The warmth of her tits against my side sends erection messages to my cock. \n\n\"Are you sure, Sam?\" I ask, tentatively putting my arm back around her as she squirms around getting comfortable. \"I think I'll leave my shorts on,\" I tell her as I try to find a place for my hand that isn't on her ass cheek. The problem is my arm is just long enough to rest against her ass.\n\n\"Really, Grandpa?\" Sam laughs. \"I watched you fuck my friends, I put a condom on your... um cock,\" she says, smiling sheepishly. \"And now you're worried about me seeing you naked?\" She has a good point but I don't think that's what I'm worried about.\n\n\"I'm just worried... never mind,\" I kiss the top of her head but I leave my shorts on. We lie there quietly as I try to think of anything except the contours of my granddaughter's naked body hugging mine. After a few minutes, Sam breaks the silence with the most unexpected announcement. \n\n\"Grandma called while you were... um... busy,\" she says quietly.\n\n\"Oh?\" \n\n\"Yeah, and I... um... kind of... um... you know... told Grandma what you were doing with Jenna and Angie,\" Sam says quietly.\n\n\"What?\" I almost yell as I jerk my head up.\n\n\"She actually guessed!\" Sam says, pulling her head back to look at me. When she does I have a clear view of her breasts as they hang deliciously from her chest. \"I was telling her about Angie's problem and Grandma said it was too bad that you couldn't prove to her that it wasn't her. When I didn't answer, she guessed that you probably had.\" Sam is almost sitting up now with her eyes locked on mine.\n\n\"What did Grandma say,\" I ask as I try to process what she's saying. I am so distracted by her nakedness that I'm having trouble concentrating.\n\n\"She said you were the... um... best... you know, pussy eater in the world and that Angie was lucky to have you helping her.\" Sam tries a smile to see how I react. Damn! My wife and I have always had an adventurous sex life but I hadn't intended to tell her about Sam's friends.\n\n\"What else did Grandma say?\" I ask, seriously considering whether I should suck her closest nipple into my mouth. Before I get a chance, she settles back down with her head on my chest and her tits squished against my side. I wrap my palm firmly around her ass cheek and pull her against me.\n\n\"She said she'd call you in the morning. She didn't want to interrupt anything,\" Sam answers as she wiggles her butt gently against my hand. Fuck! \n\n\"I'm sorry, Grandpa,\" Sam says, leaning up to kiss me on my cheek. My mind is racing and my cock is feeling severely cramped inside my shorts. \n\n\"It's fine, Sam,\" I whisper, wondering if I'm going to sleep at all tonight. She settles against me and is asleep in no time at all. I keep my hand on her firm ass while trying to anticipate what tomorrow will bring.\n\nI must have finally dozed off because when I wake up, Sam has her arm across my chest and her leg draped over mine in the most provocative manner. I remind myself she's my granddaughter but the message doesn't seem to make it to my cock. \n\nThe next time I awaken, Sam is gone and I hear a hair dryer in the bathroom. I'm just starting to wonder if I dreamt it all when she walks into the bedroom with a towel around her waist. Her beautiful white breasts are on full display and while I'm appreciating them, she drops the towel and comes over to the bed for a good morning kiss.",
        "\"Good morning, Grandpa,\" Sam says, leaning over the bed to kiss me on the lips. I'm not sure if I'm imagining it or if her lips actually linger a little longer than normal. When she stands back up, I'm staring right at her neatly trimmed pussy.\n\n\"Jesus, Sam!\" I exclaim. \"Do you have to taunt me like this? I'm only human, you know?\" \n\n\"I know,\" Sam laughs. She turns away and digs through her dresser drawer. \"We're going to meet the guys down at the beach,\" she says pulling a bikini from the middle drawer and turning back towards me as she fits the material over her breasts and ties it behind her neck. \n\n\"Tie up the back, will you, Grandpa?\" Sam says, walking over to the bed and smiling before she turns around. She still hasn't put her bottoms on and my cock is as excited as it's ever been. \n\n\"You, young lady,\" I say as I playfully slap her bottom, \"are a tease!\" I tie her top and she bends forward, spreading her legs as she feeds the bikini bottom between them. I get a birds eye view of her pussy lips just before she covers them up. \n\n\"Will you tie the sides for me?\" she asks coquettishly. I comply but smack her covered ass just before she turns and kisses me again. \n\n\"See you later,\" she says over her shoulder and I watch her sweet ass cheeks undulate as she walks out the door. Fuck! I take a cold shower and make some breakfast. I'm watching the morning news when the phone rings. It's my wife.\n\n\"Hey, babe,\" I answer tentatively, wondering how this conversation is going to go. \"How's your sister?\"\n\n\"She's doing better but I'm going to stay here at least until she's out of the hospital. How are things with the girls?\" she asks so innocently that if Sam hadn't told me about their conversation I wouldn't think anything about it.\n\n\"I think you already know the answer to that,\" I say and I hear a short chortle through the phone.\n\n\"Yeah, well, did you help that young lady with her problem?\" my wife asks, getting right to the point. I clear my throat before I answer.\n\n\"Yes. She no longer believes she is the problem.\" I say.\n\n\"Good, they couldn't have asked for a better teacher, you know.\" she says. \"What about Sam? Have you and she...?\" \n\n\"No,\" I cut her off. \"I'm not sure that's a good idea.\" I say. \"I mean, her friends were one thing. I don't know them that well and will probably never see them again. This is our granddaughter. I've watched her grow up.\"\n\n\"Which is exactly why you should be more concerned about her than you are her friends,\" she states matter-of-factly. \"Don't you think she deserves to know what she can expect from a lover?\"\n\n\"Well...\"\n\n\"Can you think of anyone better able to teach her about sex?\" She doesn't wait for an answer. \"Not only are you well qualified,\" she chuckles, \"but you also love her and care about her well being.\" Now it's my turn to laugh.\n\n\"You make incest sound like I'm giving her driving lessons,\" I protest.\n\n\"Well, in a way you are. You're teaching her about sexual expectations... and setting the bar rather high, speaking from experience.\" She laughs. \"I certainly wish someone had cared enough to teach me when I was a virgin.\"\n\n\"It's not like I'm deflowering her!\" I say louder than I should.\n\n\"You might as well be from what she's told me about her first time,\" she says, pausing for effect. \"Sam and I have talked about this, please don't disappoint her.\" That explains Sam's behavior this morning, prancing around naked and the lingering kiss.\n\n\"And you're sure you're alright with this?\" I ask incredulously. \"You really think Sam and I should...?\" I leave the sentence unfinished.\n\n\"I think you're a damn fool if you don't!\" she argues. \"Hell, if the situation were reversed, I'd teach those boyfriends a thing or two. Of course, I think it's unfair that you've got such young women interested in you. I doubt there are many young men who would be interested in a sixty year old pussy.\" She laughs.\n\n\"Wait until you bring that sixty year old pussy home to me and I'll show you how much I've missed it,\" I tease but my mind is already thinking about my granddaughter's eighteen year old pussy.\n\n\"Just take care of our granddaughter,\" she says. \"I love you.\"\n\n\"I love you, too,\" I answer. After disconnecting the call, I lean back and close my eyes, picturing Sam's naked body. Damn! This is fucking unbelievable. Even with all the sex yesterday, I still didn't sleep well last night. It doesn't take long for me to doze off in my recliner. \n\nIt's mid-afternoon when I hear the screen door slam and I awaken from my sex-filled dreams. Sam comes in with her towel draped over her shoulder and her sunglasses on top of her head.\n\n\"Hey, Grandpa,\" she says, setting down her tote bag and dropping her towel. \n\n\"Where's everyone else?\" I ask, levering up the recliner as Sam approaches my chair. \n\n\"They went back to the boys' hotel room,\" she smirks. \"Seemed like a good time for me to disappear.\" \n\n\"Makes sense,\" I answer as she leans down to kiss my cheek.\n\n\"Did you talk to Grandma?\" Sam asks. I just nod. \"And...?\" she adds, her smile beaming from ear to ear.\n\n\"Are you sure about this, Sam?\" I ask. \"I mean, yesterday you weren't interested at all and now today...\"\n\n\"Oh no, Grandpa!\" Sam corrects me. \"I was always interested... just not interested in having an audience.\" \n\n\"Oh,\" I answer lamely as she starts stripping off her bikini.\n\n\"I think this is something no one else should know about,\" she says, dropping her top on the floor and untying her bikini bottom. \"Well, except Grandma,\" she snickers. \n\n\"You're a smart young lady,\" I answer as I get out of my chair. \n\n\"I'm kind of sandy from the beach. Do you want to help me wash it off?\" she asks, heading down the hall to the bathroom without waiting for an answer. My eyes are glued to her pale white ass cheeks as I follow along behind her.\n\nI strip off my clothes as she adjusts the shower temperature and in less than a minute we're standing face to face in the shower with the water spraying my back. \n\n\"What's wrong, Grandpa?\" Sam asks nervously while I just hold her thin waist and I stare at her lovely body.\n\n\"You take my breath away, Sam,\" I answer as my eyes devour her flawless round breasts with their dazzling teardrop shaped tan lines. \"I'm trying to remember to breathe,\" I whisper. Her smile is absolutely radiant as a light blush rises up her cheeks and encompasses her whole face.\n\n\"Wash me, Grandpa?\" Sam says, handing me the soap and then closing her eyes and dropping her arms submissively to her sides.\n\n\"With pleasure, Honey,\" I answer as I lather up my hands. Starting with her shoulders, I slowly spread the soapy foam down her arms, lightly brushing my hands across the sides of her firm breasts. I take my time washing her sides and her stomach before bringing my hands closer to her chest. Her nipples are taut and her quarter size areolas are perfectly centered on her pert breasts. \n\nI hesitate. It's almost like touching them will ruin the moment. They are absolutely beguiling just the way they are, without my hands on them. Would you touch a masterpiece painting? \n\n\"They won't break,\" Sam says, opening her eyes to see why I've stopped moving my hands.\n\n\"Are you sure?\" I tease as I start slowly from the bottom tracing the outline of her impeccable breasts, gently lifting and lightly kneading as I work my way to the center. Taking a deep breath, I soap over the light smattering of freckles that surround her areolas and then press my palms against her pointy nipples.\n\n\"Mmm. That feels nice,\" Sam says, arching her back to press harder against my palms. I move my hands in a slow circular motion, barely touching the tips of her aroused nipples. \n\nRe-soaping my hands, I pull her towards me and start washing her back. Sam adjusts my hard cock, much like she did when we were dancing so that it is sandwiched between us, pressing against her pubic mound. Sam is taller than her friends and her tits press almost directly against my chest as I run my hands down to her firm ass cheeks. \n\nSam grabs my face and pulls me into a loving kiss while parting her lips as an invitation for my tongue. I've kissed Sam hundreds of times over the years but this subtle change makes my heart race as I gently slide my tongue inside her mouth. This somehow seems more incestuous than anything we've done so far. \n\n\"Mmph,\" Sam moans around my tongue as I squeeze her ass cheeks and she grinds her pussy against my cock. Our tongues twist and turn, teasing each other as our passion flares. Fuck! I've never experienced such intense arousal from kissing. Granted, her taut nipples are pressing into my chest and her neatly trimmed pussy is crushing my cock but it's the kiss that is so fucking electrifying. Just the idea of having my tongue in my granddaughter's hot steamy mouth is almost enough to make me cream.\n\nWe're both completely breathless by the time we break the kiss. \"Let's finish washing you,\" I whisper.\n\n\"I'm clean enough,\" Sam pants, her body molded to mine in a tense embrace that neither of us wants to break. Like powerful magnets, our lips clamp together again in an all-consuming kiss that seems to last forever. \n\nWe finally rinse off and stumble out of the shower, barely drying off before our bodies are intertwined again on my king-sized bed. Our mouths won't seem to separate, we're moaning around our tongues as we squeeze and caress each other's flesh, driving ourselves into a frenzied state of arousal. \n\n\"Fuck me, Grandpa!\" Sam cries, breaking the kiss just long enough to get the words out and then plunging her tongue back into my mouth as she spreads her thighs and pulls me on top of her. My cock wants to comply immediately but my brain wants to slow things down. Against the wishes of my throbbing cock, I break the kiss and roll off of my granddaughter, panting for breath as I lay beside her.\n\n\"Grandpa!\" Sam cries as I turn towards her. \"The condom is right there,\" she pleads, nodding towards the nightstand. \n\n\"I want to do so much more before we fuck, Sam,\" I whisper as my hand drifts down her stomach and combs through her patch of blonde hair. \n\n\"But...\" Sam's protest is gone as she arches her back, pressing her pussy mound against my fingers. I suck her closet nipple into my mouth as my fingers glide along her slick pussy lips. \"Ohhh!\" Sam moans as I tease open her wet pussy and gently bite her nipple. \n\n\"I want to taste you, Sam,\" I tell her as I trail kisses down her abdomen and move my body between her widespread legs. Talk about up close and personal. The sight of her dripping wet pussy pumps more blood into my swollen cock as my heart pounds in my chest.\n\n\"Ohhhh God!\" Sam moans, arching her back again as I inch my tongue into her anxious pussy. I suck out her frothing juices while swirling my tongue around inside her fiery hole. \n\nWhen I feel her getting close, I slip two fingers inside her torrid pussy and flick my tongue across her clit. Her body responds as violently as if she'd been struck by lightning.\n\n\"OH FUCK!\" Sam cries as I suck her little love bud into my mouth and continue to torment it with my tongue. Pumping my fingers in and out of her sweltering fuck hole, I drive her over the top in a matter of minutes.\n\n\"OH MY FUCKING GOD!\" Sam howls as her orgasm explodes in a gush of syrupy juices and her body shakes and quivers. She's slamming her fists against the mattress and lifting her head off the pillow as I eat her through one of the longest orgasms I've ever seen. \n\nPulling my fingers from her liquefied pussy, I'm just about to delve in with my tongue when I hear a car with a loud muffler pull up out front. It's too close to be anyone else's driveway and I look at Sam questioningly. Her eyes lock on mine as her body continues to convulse. \n\n\"That sounds like Matt's car,\" she pants, trying desperately to catch her breath. Fuck! I slide off the bed and look through a gap in the curtains. Sure enough, there's Jenna and Angie getting out of an old blue Chevy, all jacked up and nicely maintained. \n\n\"Your friends are back already,\" I tell her. Sam moves fast for someone who's just had the mother of all orgasms.\n\n\"Fuck no!\" Sam says as she jumps off the bed. \"I don't want them to know about this, Grandpa!\" she cries. \"What the fuck are they doing back already!\"\n\n\"Don't worry, Sam,\" I tell her as I watch them linger by the car windows. Apparently the guys aren't coming in. \"Go get dressed and crawl under the covers like you've been taking a nap. That will explain why you're all disheveled.\" I tell her as my eyes roam her body taking in her post orgasmic glow. Fuck! Why are they back already!\n\nI grab a shirt and shorts, duck into the bathroom, comb my hair and wash Sam's taste off my face and hands. Flushing the toilet, I emerge from the bathroom just as they are walking through the front door. \n\n\"You're back early,\" I say as cheerfully as I can. \"How did it go?\" I ask as I plop down in my easy chair. \n\n\"We chickened out!\" Angie says without preamble.\n\n\"We decided if we tried to do this threesome thing, it would be all over twitter by this evening.\" Jenna adds.\n\n\"There is no way those guys would do something like that and not talk about it,\" Angie continues. \n\n\"So what did you do?\" Sam asks, walking into the room like she just woke up. Hopefully, I'm the only one who notices the 'just fucked' look on her face. She sits on the couch as Angie and Jenna trade off telling the story. Apparently, it was still okay for them to fuck in the same room at the same time. The guys stapled a sheet to the ceiling to separate the two beds. Not a lot of privacy but I guess they take what they can get.\n\n\"And...?\" I ask, wondering if Angie had made any progress with Rob.\n\n\"Mine was fine,\" Jenna says with a smile. \"Not like granddad, but, you know, worth doing.\" All eyes are on Angie who hangs her head like she's let the team down. \n\n\"I couldn't tell Rob how to do things with Matt in the room,\" she explains. \"That would have embarrassed the hell out of him.\"\n\n\"You're right,\" Sam says sympathetically. \"But you guys weren't gone very long. Couldn't you have gotten him ready again?\" she says, giving me a quick yearning look that her friends miss.\n\n\"The guys had arranged for a volleyball game at 4 o'clock,\" Jenna says, clearly disappointed that the guys would choose volleyball over them. \n\n\"So, they came, they saw, they conquered and went off to play volleyball,\" I say, laughing.\n\n\"More like they, fucked, they came and went to play volleyball,\" Jenna says. \"They invited us to watch them play,\" she smiles sheepishly.\n\n\"I'll tell Rob next time,\" Angie promises. \"When we're alone.\"\n\n\"Which is why we're here,\" Jenna says, looking at me expectantly. \n\n\"What?\" I ask, glancing at Sam who is staring intently at Angie. \n\n\"To use the third condom!\" Jenna smiles. \"Ya'll haven't used it already, have you?\" she teases, not knowing how close to the mark she is. \n\n\"Of course not!\" Sam protests maybe a little to adamantly but her friends don't notice. \n\n\"So anyway, Granddad,\" Angie says. \"I'm still really horny and I figured you'd recovered enough by now...\" her words trail off as she starts untying her bikini. \n\n\"You guys wore me out yesterday,\" I protest, trying to think of a logical way out of this without exposing mine and Sam's duplicity. \n\n\"I think we can get you ready,\" Jenna smiles as she joins her friend in shedding her swimsuit. I look to Sam for help but she just nods her silent ascent. What the fuck! This was not how I wanted to spend my afternoon. I almost laugh when I think about how ludicrous that sounds. I want to fuck this eighteen year old, not that one! Everyone should have my problems. Plus, it's the last fucking condom!\n\nSam gets off the couch and comes over to kiss my cheek. \"You can't reject her, Grandpa,\" she whispers in my ear before straightening up and saying out loud, \"I'll be in my bedroom.\"\n\n\"No, Sam!\" Angie pleads. \"I want what Jenna got, you know with us sucking her nipples. Please!\" Sam looks at me, like I'm to blame for having started that in the first place. \n\n\"Okay,\" she shrugs, like it's no big deal.\n\n\"Good!\" Jenna bounces on her heels and claps her hands like a fucking cheerleader. \"Let's go to the bedroom. We're meeting the guys again at six.\" That's music to my ears and I try to catch Sam's eye but she looks away. Damnit! I hope this little fantasy of Angie's doesn't ruin what Sam and I had started. \n\n\"I'm not going to eat you after Rob just fucked you, Angie,\" I tell her as I follow their naked asses into my bedroom. \n\n\"They used a condom,\" Jenna says as if that makes it okay. \n\n\"Yeah, probably loaded with spermicide and other stuff,\" I say a little too aggressively. \"I'll get you off, Angie,\" I say toning my voice down a bit. \"I'm just not putting my tongue down there, okay?\" \n\n\"Sure,\" Angie says, crawling up on the bed and spreading her legs. Her pussy is still wet and her pink lips are puffed out. She smiles as she gestures for her friends to take their places on her tits. I almost laugh at the way she's orchestrating this. \n\n\"Do you need us to suck you hard, Granddad?\" Jenna asks as I take off my shirt and unbutton my shorts. \n\n\"No,\" I smile. \"I underestimated the affect your naked bodies have on me.\" \n\n\"How close did you get, Angie?\" I ask her as I grab the condom and tear it open. \n\n\"Not very,\" she admits. \"He didn't want to do much with other people in the room, so there wasn't much foreplay.\"\n\n\"How much is not much?\" I ask, rolling the condom down my hard cock.\n\n\"None,\" she says sheepishly. \n\n\"So, it was wham, bam, thank you ma'am. Let's go play volleyball.\" I say, not liking this Rob guy at all. Angie just nods and Sam gives her head a slight shake, indicating that I shouldn't berate her for it. Fine! \n\nLooking at Sam, fully dressed and leaning over ready to suck her friend's nipple sends a longing to my cock that makes me hate Rob for causing this interruption to our lovemaking.\n\n\"Ready?\" I ask them and get nods all around. \"Don't just suck her nipples,\" I tell Sam and Jenna. \"Make love to her breasts. Kiss them, squeeze them, bite them and make those nipples stand up proud. As they lean their heads down, I push Angie's legs up and easily slide my cock into her well-lubricated pussy. \n\nFuck! After the intense foreplay with Sam, my cock hungrily welcomes Angie's tight love channel. I go very slowly, letting us both savor the feeling as I press all the way into her. With my cock buried to the balls in her compact pussy, I hold it still while I lightly caress her clit with my thumb.\n\n\"Oh yeah!\" Angie says, lifting her ass off the bed so she can push harder against my cock. She tries to get a rocking motion going but I keep my weight against her so she can't move. Continuing to massage her love button, I watch Sam and Jenna fervently attack her small breasts and her puffy nipples. \n\n\"Oh God! Please fuck me!\" Angie begs.\n\n\"Going slow is almost like foreplay,\" I explain like we're in a college lecture hall. \"Trust me,\" I say as I deliberately take my time extracting my cock from her snug tunnel. I repeat this excruciatingly paced process several times while keeping my thumb active on her swollen clit. Her pussy responds with enough lubrication to fuck for a week.\n\n\"Fuck!\" Angie cries, still trying to hump her pussy around my hard cock. When I've finally got her where I want her, I pull almost all the way out and hold my cock still while rapidly stimulating her clit. Without warning I plunge back in, balls deep in one quick thrust. Abandoning her clit for the moment, I grab her thighs and jackhammer my cock in and out of her horny pussy. Her whole body shakes from my assault and her tits jiggle rapidly against her friends' mouths. \n\n\"Oh fuck yeah!\" Angie yelps as my hard cock pummels her soggy pussy. I watch Sam and Jenna tugging on her nipples with their teeth, having extracted them from their puffy areolas. Good! We're almost there. Angie is panting and hugging her friends as I again stimulate her clit while pistoning my cock in and out of her over-heated pussy. ",
        "\"I'm cumming!\" she screams. \"I'm fucking cumming!\" Her body shivers as she frantically bucks her hips and squeezes her friends' arms. Her pussy spasms around my cock, triggering my over due release and I shoot what feels like a gallon of cum into the last condom. \n\nI watch Sam's face as Angie pushes their heads away from her bright pink nipples. Sam and Jenna are both breathing hard and their faces are flush with excitement, or maybe arousal. Angie is gasping for breath as her pussy quivers around my spent cock. I know it's rude to pull out too quickly but I'm not sure what Sam is thinking. \n\nI don't want to kiss Angie or hold her through her post orgasmic tremors but I also don't want to do anything that might upset Sam. I almost feel like a fucking teenager again still trying to figure out the opposite sex. \n\n\"That was... again...\" Angie huffs as her body settles back down on the bed. I look at Sam but she's intentionally not looking at me. Fuck! It's hard to know what that means. I pull out of Angie's soggy pussy and stagger slightly as I stand up. Shit, I haven't fucked so much in years. Nice problem to have, I chuckle to myself. As Angie and Jenna fall into each other's arms, I head to the bathroom to dispose of the final condom. \n\nI take another quick shower, wondering what my water bill is going to be this month. This is my third shower today and it's not even dinnertime. Not that I'm complaining about the shower with Sam. Fuck! I wish she were in here with me now. \n\nMy head is spinning as I let the water spray over me and try to figure out what's going to happen next. They're meeting their boyfriends at six o'clock. Will Sam join them for dinner? If not, will she feel like resuming where we left off? How will she feel about what just happened with Angie? Will I have time to replenish the condoms? Will it even matter? No wonder my head is spinning! Fuck!\n\nI towel off and realize I haven't brought any clothes into the bathroom. What the fuck, it's not like they haven't seen me naked. I walk out of the bathroom to find Angie and Jenna doing some kissing and heavy petting on my bed. Their hands seductively roam all over each other as their entangled tongues muffle their provocative moans. Sam is nowhere in sight. I pick up my shorts and shirt as I step over by my desk to put them on. \n\nOkay, maybe I am a pervert but as I'm getting dressed, I discreetly press the record button on my MacBook. The webcam will pick up the girl on girl action on my bed. Maybe they won't take it any farther but at least I'll find out. I go off in search of my granddaughter.\n\n\"Hey, Sam,\" I say, finding her back in the living room, sitting in my easy chair and flipping channels again. \n\n\"Hi Grandpa,\" she smiles radiantly. \"Thank you for doing that,\" she says. \"I know you were frustrated that they interrupted us.\"\n\n\"Weren't you?\" I ask, leaning down for a kiss. Sam glances at the hallway before deciding whether to kiss me on the lips. \"They're occupied for a while, I think,\" I assure her. \n\n\"I was very disappointed,\" Sam says, grabbing the sides of my face and pulling my lips to hers. Her tongue probes my mouth as her hands caress my head and neck. The fire is reignited instantly and my cock stirring really surprises me this time considering how hard I just came. \n\n\"They're leaving in another hour,\" Sam pants, breaking the kiss and letting me stand up. Her eyes glance to the bulge in my pants and her luminous smile returns. \"You better have saved some of that for me,\" she teases. Thank God, she's not upset. \n\n\"I'll go run some errands,\" I tell her cryptically. \n\n\"What?\" she asks as I mime rolling a condom onto my cock. \"Oh! Yeah, please. That's a good idea!\" she laughs. \n\n\"Your friends seem to have gotten pretty intimate,\" I tell her, crooking my head towards the bedroom. \n\n\"Who's fault is that?\" she chuckles. \"You're the one who made us practice bisexuality on each other's nipples.\"\n\n\"I think they've taken it a little farther than that,\" I laugh as I gather up my car keys and kiss Sam on the cheek. \"I'll be right back.\"\n\n\"I'll be waiting patiently,\" she smiles.\n\n\"Really?\" I mockingly ask.\n\n\"No!\" Sam says, shooing me out the door. \n\nWhen I get back, the're all dressed and trying to convince us that we should all go to dinner together. \n\n\"I agree with Sam,\" I say, setting some bags of snacks on the kitchen counter. \"I think it might be kind of awkward.\" Jenna and Angie look at me like they don't understand why.\n\n\"Come on, girls,\" I admonish them. \"Think about it. It's one thing for us to do everything we've done here this week but for us to go out with your boyfriends and pretend none of it happened is just asking for trouble. You guys go have fun. Sam and I'll hang around here.\"\n\n\"Will you be back tonight?\" Sam asks, trying to sound nonchalant. We both wait anxiously for their answers. Jenna and Angie look at each other then at us.\n\n\"Probably not,\" Jenna says. \"I think we'll spend the night with the boys.\" Angie nods her enthusiastic approval of Jenna's decision. \n\n\"Okay, text me if you change your mind and we can come get you,\" Sam says, hugging her friends. \"You guys have fun!\"\n\n\"You're sure you won't join us?\" Angie begs. \n\n\"No, we'll be fine here,\" Sam says. \"I'm kind of tired anyway.\"\n\n\"Thank you again, Granddad,\" Angie says, hugging me and pecking me on the lips. \"You're the best!\"\n\n\"He sure is! Thank you!\" Jenna says, following her friend's lead and pressing her ample bosom against my chest as she pulls me into a tight hug. \"I'd love to do it again sometime,\" she whispers just before she lets me go and gives me her infamous sexy smile. \n\n\"Anytime,\" I wink and she's still laughing as they walk out the door. \n\n\"Do you think they'll be back tonight?\" I ask. \n\n\"I don't think so but either they'll text or we'll hear Matt's car so I think we're okay,\" Sam says. We stand in the living room staring at each other. I hope we're thinking the same thing.\n\n\"I'm not really tired,\" Sam smiles.\n\n\"Me either,\" I say, taking a step towards her.\n\n\"Did you get the condoms?\" Sam asks, looking at the floor as a blush works its way up her cheeks.\n\n\"Uh-huh,\" I nod affirmatively. \n\n\"Then, what are we waiting for?\" Sam says quietly, unbuttoning her shirt as she turns around and walks toward my bedroom. I pull my shirt over my head and follow her down the hall, both of us stripping off our clothing. Fuck yes! I only hope we can recapture the passion that we had earlier. \n\nWithin seconds of reaching the bedroom we're both naked and I find that I needn't have worried about reigniting the fire. Standing by my bed, Sam reaches out her arms and I step into her embrace. Our mouths meet as her arms encircle my neck and sparks fly as soon as our tongues touch. Without conscious movement, we're soon lying on the bed in a tangle of arms and legs, kissing with the same feverish intensity as before. \n\nMy hands are all over her, pulling her against me as her legs scissor my thigh and my cock is pressed against her pussy mound. I squeeze her ass cheek as our bodies undulate in a slow, sensual rhythm and our tongues dance inside each other's mouth. Fuck! \n\n\"Where were we?\" I ask, finally breaking the kiss as I gently push Sam onto her back. \n\n\"Right here!\" Sam pants, pulling her knees up and spreading her legs. \"This is exactly where I was, physically and emotionally,\" she smiles. \n\n\"Me too,\" I whisper while positioning myself between her widespread legs. So fucking happy to be back here.\n\nHer pussy is in full arousal mode, even wetter than it was before. I take a long, slow lick from the bottom of her slit right up to her clit. \n\n\"Oh God!\" Sam moans, squeezing her thighs against my ears. With my hands on the inside of her knees, I gently pry them apart and take another unhurried taste. Fuck! It is so good! Her cream is really flowing and I just keep teasing and licking until she's bucking her ass off the bed and panting like a dog on a hot summer day. \n\nInserting two fingers into her steamy hole, I twist them back and forth as I suck her clit into my mouth and flick my tongue across it. \n\n\"Oh yeah! Oh Grandpa!\" Sam whimpers as her orgasm builds and she grabs my hair by the handfuls. Holding me tightly against her crotch, she humps her pussy into my face as I eat her though another scorching orgasm. \n\n\"Oh Grandpa! I'm fucking cumming!\" Sam screams and I keep up my machinations as she jerks and shakes, clamping her legs around my head. Her hands are pulling my hair as pussy juice floods my mouth and I have difficulty breathing. \n\nSam convulses for what seems like a lifetime before collapsing on the bed and releasing my head. I pull back, gasping for breath as I watch her chest heave and her body tremble. \n\nI'm about to move up over her body when I remember the condom. Turning away from Sam, I grab one from the nightstand drawer and quickly rip open the foil package. I roll it over my hard-on while positioning myself over my granddaughter's still quivering body. \n\n\"Ready Sam?\" I ask as my cockhead presses against her slippery opening. She nods vigorously, pulling me down on top of her. \"It's not to late, Sweetheart,\" I give her one more chance. \"We can stop right here.\"\n\n\"Don't you dare!\" she shrieks, wrapping her legs around my back and pressing my ass down with her heels. \n\n\"No interruptions this time,\" I whisper. \"This is the real deal!\" I press my lips to hers and her mouth opens to welcome me. This is the moment I've been waiting for and I make the most of it by penetrating her mouth and her pussy at the same time. I push my tongue deep into her sensuous mouth as my cock glides easily into her sizzling hole. God! She feels so good! \n\n\"Mmmmphh!\" Sam moans around my tongue as my cock bottoms out in her fiery pussy with one long, slow plunge. \n\n\"Oh God, Sam,\" I moan, breaking the kiss and lying motionless on top of her. \"You... feel... so... good,\" I say, planting kisses all over her face as her compact pussy molds itself around my throbbing cock.\n\n\"Fuck me, Grandpa,\" she whispers, squeezing her pussy muscles for emphasis. \n\n\"I'm going to make love to you, Sam. There's a difference,\" I tell her, as I savor the velvety feeling of her pulsating pussy for a little longer before starting any motion.\n\n\"I love you, Grandpa,\" Sam says as I start a slow, sensual rhythm. We kiss again as our bodies rock together, developing a natural cadence like we've been doing this for years. \n\n\"Oh yeah!\" Sam murmurs, wrapping her arms and legs around me like she's trying to fuse us together. Gradually, I pick up the pace, grinding my hips in a circular motion, squishing her pussy lips against the base of my cock and crushing my pelvic bone against her clit. Sam's response is instantaneous and our bodies dance like they actually could merge into one.\n\nBefore I know it, my cock is moving of its own accord, pumping and churning inside her sweltering cavern. Fueled by increasingly intense eruptions, her burning pussy melts around my cock, engulfing and scorching me as our bodies undulate as one. We never break the kiss, our tongues being a critical part of our incestuous ballet. Our yearnings multiply exponentially, building higher and higher until we reach a torturous peak. As our sweat-soaked bodies dissolve into one writhing entity we reach the summit in perfect harmony.\n\n\"OH MY FUCKING GOD!\" Sam screams, breaking the kiss, as her orgasm thunders through her body.\n\n\"I love you! I love you! I love yoooooooouuuuuuuuuuu!\" Sam howls, clawing my back, as her body lurches uncontrollably and quenches her fervent longing by flooding her with nearly hallucinogenic pleasure.\n\n\"And I love you!\" I pant, through clenched teeth as my eruption matches hers and I hope to hell the condom holds. I shoot more cum than I would have thought possible as our bodies jerk against each other and we ride out wave after wave of breathless titillation. Fucking unbelievable!\n\nSam's arms and legs are still wrapped tightly around me with her lovely tits crushed against my chest as we gasp for air. The fierceness of the embrace restricts the amount of air we can suck into our lungs, prolonging our recovery but not in a bad way. \n\nWith her body trembling beneath me, and her pussy quivering around my spent cock, our breathing finally subdues and our lips find each other. Almost hypnotically, our tongues entwine in a demanding, yet incestuously lustful kiss.\n\nI don't know how long we kiss or who breaks it off but Sam finally relaxes enough for me to withdraw from her liquefied pussy. I get rid of the condom as quickly as I can and rejoin her on the bed, lying beside her and pulling her into another embrace.\n\n\"Wow!\" Sam whispers. \"That was different than what you did with Angie and Jenna,\" she adds.\n\n\"Very different,\" I agree. \n\n\"Why?\" Sam asks, pulling slightly away and propping her head up with her hand. \"Why didn't you do any of those things where you make me taste myself and stuff?\" I take a minute to think about that.\n\n\"I would have,\" I pause, pulling my thoughts together. \"But we didn't need it. As soon as we kissed it was like a rocket igniting.\"\n\n\"I felt that too,\" Sam says, kissing me lightly on the mouth. \"Why wasn't it that way with Angie?\" she asks.\n\n\"With Angie it was just sex; a physical act,\" I explain. \"We didn't have any connection beyond that. Without any depth of passion, you need... well, other things to artificially ramp up the arousal level.\" I pause to gauge her reaction and she nods for me to go on. \"That's why I had her lick her own juices off my finger and why I had you guys suck Jenna's tits.\"\n\n\"And got her naked in the backyard,\" Sam adds like an eager student trying to please the teacher. \n\n\"Exactly,\" I reward her, \"It created a level of arousal that we probably wouldn't have attained otherwise.\"\n\n\"Yeah,\" Sam agrees. \"Those things created arousal for all of us!\"\n\n\"Exactly.\" I nod. \"But with you,\" I sigh, running my hand over her curvaceous hip. \"With you, Sam, your kiss was... like the heavens parting or something. I expected choruses of angels singing hallelujah.\" I chuckle. \"You were amazing.\"\n\n\"Oh no, Grandpa,\" Sam says. \"You were amazing. I've never felt anything like that.\" She's squirming around, clearly anxious for more. \"How many condoms did you buy?\" she asks coyly. \n\n\"I bought three packs of three,\" I smile. \"I didn't know how long you'd be staying.\n\n\"So nine and we've already used one,\" Sam says, rolling me onto my back. \"How long before we can do it again?\" she asks while eyeing my soft member.\n\n\"Depends on you, Sam,\" I answer honestly. \"Have you done this before?\" I ask as she positions herself between my legs. She nods but it's a pretty hesitant confirmation.\n\n\"Wait,\" I stop her just as she's about to lick my cock. \"I should clean that off first. It's probably got spermicide from the condom on it.\" I start to sit up but Sam pushes me back down.\n\n\"I'll do it,\" she says, jumping off the bed and ducking into the bathroom. I hear the water running and a few minutes later she returns with a wet washcloth. \n\nI smile at the intensity of her focus as she hooks her thumb and index finger under my cockhead and lifts my limp member up by the tip. I've seen that same look of concentration for years as she's worked on school projects or learned other new skills. I remember her specifically looking like this when she learned how to sew.\n\nBut damn! This isn't sewing! Stretching out my flaccid tool, she's gently washing under and around it with the warm washcloth. Her face is so close I can feel her breath on my cockhead. My cock twitches as she moves the washcloth down to my balls.\n\n\"It feels nice, Sam,\" I tell her when she glances up questioningly.\n\n\"I'm not as experienced as Angie or Jenna,\" she acknowledges as she tosses the washcloth aside and cradles my cock in the palm of her hand.\n\n\"You probably weren't as experienced a kisser either and look what happened,\" I assure her. \"Just watch your teeth but otherwise you really can't do anything wrong,\" I chuckle. \n\n\"Okay,\" Sam says with another of her radiant smiles. \"Here goes.\" Her smile widens and there's a gleam in her eyes as she grips the base of my cock and slowly pulls it towards her mouth. Taking a tentative lick around the side of my cockhead she sends instant pleasure signals to my brain. Fuck!\n\nShe's not the blowjob expert that Jenna is, but what she lacks in experience she makes up for with enthusiasm. Cupping my balls with her hand she licks up and down the sides of my recovering shaft like it's her own personal lollipop. I know I'm not young enough to respond this quickly but when she starts teasing my balls with her fingertips and her tongue glides up my semi-erect shaft, my hips start moving of their own accord. \n\nShe hasn't even taken me in her mouth yet but just the sight of my granddaughter's tongue licking my cock is like some kind of aphrodisiac. My cock continues it's arduous journey to recovery as Sam slips her lips over the head and flicks her tongue all around it. Fuck!\n\nWhile her tongue teases the underside of my cock, her fingers continue to caress my sensitive balls. Like giving artificial respiration to a drowned swimmer, Sam works her tantalizing mouth tirelessly to revive my nearly dead cock. There is no doubt that a full recovery is inevitable but it happens a lot sooner than I expected. \n\nEither Sam's given more blowjobs than she is willing to admit or she instinctively just knows what to do and at this point, I don't really care which. My cock is standing tall and I'm bucking my hips off the bed trying to shove more of it into my granddaughter's eager mouth. \n\n\"I did it!\" she smiles, letting my fully recovered cock slip from her lips and sitting up proudly. \n\n\"You are amazing, Sam,\" I breathe as she kisses her way up my body and her hard nipples brush against my skin. Positioning her body over mine, she kisses me gently on the lips and then sits up straight\n\n\"Can I be on top?\" she asks coquettishly. \n\n\"Whatever you want!\" I pant as her steamy pussy lips cradle my hard cock and she rocks her hips back and forth enticingly. Her heat penetrates my cock as she slides her slick lips along the length of it. \"The condoms are in the drawer,\" I gasp before we get too carried away. \n\nSam leans over and retrieves the condom without disentangling my hard cock from between her burning lips. I almost laugh as she rips the package open and slides back off my cock. She's grinning like a kid on Christmas morning as she wraps her hand around the base of my rigid shaft. \n\nShe does a better job with the condom this time and I am sheathed and ready to go in seconds. Like a man in a trance, I stare at her trimmed blonde triangle and glistening pussy lips as she lifts her leg up and aligns my cockhead with her well-lubricated hole. \n\n\"Oh Sam,\" I sigh as my cockhead crests the threshold of her welcoming love tunnel and she effortlessly lowers herself down onto my hard cock. \n\n\"Mmmm,\" Sam moans, sitting straight up as my hands encircle her waist. \"God, that feels good!\" she sighs.\n\nWith her knees on the bed, she starts rocking her hips with a slow rolling motion, massaging my fully recovered cock with her snug pussy. The feeling is incredible and we lock eyes as she leans forward and slides her pussy farther up my rigid shaft. She moves slowly like she's savoring the feeling and my cock's rigidness ramps up a notch.\n\nClosing her eyes, Sam leans her head back and thrusts her chest out like an invitation. I can't resist my granddaughter's perfect tits and I move my hands up from her waist squeezing the fleshy sides as she bounces on my hard cock. As she increases the pace, her firm tits bounce enticingly in my hands and her already taut nipples brush lightly against my palms.\n\n\"Oh yeah!\" Sam moans as she leans farther back and I slide one hand down her stomach across her lightly forested mound and brush my thumb against her aroused clit. ",
        "\"Oh god, Grandpa!\" she screams. \"Keep doing that!\" I rub my thumb in a circular motion over her clit as she jounces up and down the entire length of my swollen shaft. Like a wild woman trying to tame a bucking bronco, she thrusts her insatiable pussy down on my stiff cock. \n\nAfter all the fucking I've been doing, I don't even know if I can cum again but with us both bucking feverishly I start to feel the telltale signs of an imminent release.\n\n\"I'm cumming. Oh Fuck, Grandpa. I'm cumming! Cum with me!\" Sam has lunged forward tightening her pussy muscles around my cock and is jerking wildly through the first wave of her orgasm. Her shuddering pussy triggers my release and I start jerking my hips up under her as my cock spews out an unexpected load of cum. \n\nMy cock erupting inside her over-heated pussy unleashes another trembling wave of pleasure and she collapses on my chest, shaking and shivering. I wrap my arms around her and relish the feeling of her hard, pointy nipples crushed against my chest. \n\nWe lie there for a while catching our breaths before I tilt her face towards mine and we enjoy another deep, romantic lover's kiss. It's not the kind of kiss a grandfather should engage in with his granddaughter but it doesn't matter as our tongues entwine and we hungrily devour each other. Fuck!\n\nAfter we've caught our breaths, I disengage my spent cock from Sam's saturated pussy and quickly dispose of the condom. When I come back to bed, Sam stretches languidly and asks me what we're going to do now. \n\n\"Are you hungry?\" I ask.\n\n\"Not for food,\" she smiles wrapping her body around mine and kissing me on my lips. \n\n\"I don't think I've got another one in me for a while, Sam.\" \n\n\"It's okay, Grandpa,\" Sam says, rubbing her tits across my chest and planting kisses all over my face. \"I just love being naked with you!\" Fuck! \n\n\"I like it too, Sam,\" I squeeze her ass cheeks and run my hands all over her back. \"But I think we should eat something,\" I smile. \"We need to keep up our strength.\n\n\"I'll cook!\" Sam says, pushing me away and jumping off the bed. \"Do we have to get dressed?\" she asks teasingly.\n\n\"Not if you don't want to,\" I answer, following her into the kitchen.\n\nSam whips up some omelets with tomatoes, onions and cheese along with some fried potatoes. I sit at the kitchen table watching her naked body move around the kitchen and I marvel at the ludicrousness of the entire situation. Never in a million years would I have thought that I'd be making love to my granddaughter, let alone two of her friends. \n\n\"This is delicious!\" I tell her as I bite into my omelet. Sam blushes but is clearly pleased by the compliment. I can't take my eyes off of her flawless breasts as we sit across from each other enjoying our dinners. \n\nThis is the first chance Sam and I have had to talk since she got here and she catches me up on her plans for the summer and how excited she is to start college in the fall. If we weren't naked and hadn't just fucked our brains out, it would seem like a typical granddaughter, grandfather conversation. \n\nWhile we're cleaning up the dishes, Sam stops mid-sentence as she stares into the backyard. \n\n\"What's the matter, Sam?\" I ask, looking out the kitchen window.\n\n\"Can we swim naked?\" Sam asks, looking at me with a gleam in her eye.\n\n\"Sure,\" I answer, wondering if she has anything but swimming in mind. \n\n\"Thank you! I've always wanted to go skinny dipping!\" Sam announces jumping up and down and making her beautiful tits jiggle enticingly. While Sam puts the last of the dishes in the dishwasher, I grab a couple of towels and our wet swimsuits from the bathroom, just in case. I laugh as Sam exaggerates the swish of her naked ass cheeks while exiting through the sliding glass doors. \n\nI close the door behind us, watching excitedly as Sam stretches her arms over her head and bounces a couple of times on her toes. Her freckled ass clenches just before she springs into the water in a perfect dive. \n\nThere's no way I'm risking a belly flop with my genitals unprotected so I sit on the tiled edge and ease myself into the waist deep water. Sam comes up for a breath at the other end of the pool and then flips around, swimming back to me underwater. \n\nEmerging from the water a foot in front of me like one of those goddesses in a James Bond movie, she throws her head back and brushes her hands through her long blonde hair. With her back arched like that, the teardrop tan lines on her medium-sized tits are thrust out enticingly\n\n\"God! This feels so naughty,\" Sam says smiling as I pull her towards me. The water is warm and her nipples respond enticingly to the cool air while small goose bumps pop up all over her chest. \n\n\"So, what we've been doing so far hasn't felt naughty enough?\" I laugh as Sam crushes her hard nipples against my chest. She laughs at the absurdity of my question.\n\n\"I know that it should all feel really naughty, especially the incest part but...\" she lets her sentence hang in the air without finishing it.\n\n\"But what?\" I ask, caressing her back as we stand there in the waist deep water. Sam hesitates before answering.\n\n\"I haven't had sex very often, Grandpa,\" she tells me. \"Actually, only about four times before today and I couldn't figure out what all the fuss was about.\"\n\n\"And now?\" I prompt her.\n\n\"Now,\" Sam wraps her arms around my neck and kisses me on the mouth. \"After today, all I want to do is fuck... fuck... fuck!\" Each word is punctuated with a kiss on my lips and a quick grind of her hips that unbelievably has my cock stirring. Sam notices it too and shifts one hand from my neck to my semi-aroused cock.\n\n\"How soon can we do it again?\" she eagerly asks.\n\n\"Jesus, Sam. You'll be the death of me,\" I laugh just before she plunges her tongue into my mouth.\n\nAs we continue our tongue swapping, Sam's hand encircles my cock and gently squeezes, stroking it to life. I slide one hand from her ass check around her curvy hip to her pubic mound. Sliding it down through her wet triangle, I run my finger along her wet slit. The water has washed away most of the external lubricant but when Sam spreads her legs apart my finger slips right inside. \n\n\"Mmmm,\" Sam moans into my mouth as I slide a second finger in to join the first and twist them around in her hot juice.\n\n\"Can we fuck outside?\" Sam whispers eagerly. I remember how uncomfortable the deck was for Angie and look around for a more suitable location. I spot the retaining wall along one side of the patio at the same time I envision my fantasy fuck of taking Sam from behind. My cock leaps at the idea and Sam looks at me quizzically.\n\n\"I'll take that as a yes,\" she laughs, stroking my nearly recovered cock a I tell her my idea.\n\n\"Outside and from behind, doggy style?\" I ask and her ecstatic smile is all the answer I need. Leading her out of the pool, I explain how she'll bend forward at the waist, bracing herself on the top of the short retaining wall and I'll enter her from behind. \n\n\"When Grandma and I fuck like this,\" I say, reverting to my assigned role as sex education instructor, \"She finds that vaginal stimulation isn't quite enough to get her off so when she starts to get close she stimulates her clit with her fingers.\" \n\n\"Okay,\" Sam says, nodding her head. \"I can do that. God! This is so wicked!\" she smiles. \n\n\"I'll be right back!\" I leave her by the wall as I run to my bedroom for a condom. \n\n\"Can I do it?\" Sam asks, taking the condom from me as soon as I return. Tearing it open, she unflinchingly strokes my hard cock as she rolls the protective sheath into place. \n\n\"Like this?\" Sam asks, bending forward and spreading her legs as she places her palms on the low retainer wall. \n\n\"Perfect,\" I answer, staring breathlessly at her sexy ass as I step up behind her and position my cock at her glistening entrance. Sliding my hand over her firm cheeks I press my sheathed cockhead between her very aroused pussy lips.\n\n\"Oh God!\" Sam sighs, bracing herself on the wall and snapping her ass back as I thrust forward. In one smooth motion I'm all the way in and her pussy lips are warming my balls. Her smooth ass cheeks rub against me as I begin pumping in and out of her snug cocoon.\n\nNot sure if I can actually cum again, I grab her hips with both hands and start slamming my hard cock into her pussy like a battering ram. Sam braces herself on the wall as I keep pummeling her burning snatch with long, deep strokes. Within minutes, our breathing is coming in quick gasps and I'm digging my fingers into the flesh of her hips. Damn! Her ass is so fucking sexy as I watch my cock pump in and out of her pulsating pussy. Her crinkled asshole is awfully inviting but I'm afraid that touching it might freak her out. I'll leave that lesson for another day.\n\nOne of her hands leaves the wall and starts vigorously working between her legs. The friction of her narrow channel is working me into high arousal but my release seems to be a long ways off. Instead of worrying about it I focus on getting Sam off, slamming into her as hard as I can while pulling back on her shapely hips.\n\n\"Oh! I'm so close!\" Sam cries, grinding her ass against me as her tight pussy starts quivering around my cock. Her orgasm hits at the same moment as I hear the unexpected roar of a car engine in the driveway. Fuck! Not again! Sam is shaking and shivering through multiple waves of pulsating pleasure and we don't have time to enjoy it. Fuck!\n\n\"We've got company again,\" I whisper, reluctantly pulling my cock from her still quivering pussy.\n\n\"JesusFuckingChrist!\" Sam moans, \"Can't they leave us alone?\" I toss Sam her wet bikini that I had picked up from the bathroom earlier and I rip off the condom, stashing it in the flowerbed. \n\n\"Stay calm, Sam,\" I tell her. \"We can have our suits on and be in the pool before they get through the house,\" I add, urging her towards the pool. Sam jumps in naked, ties her top backwards then slips it right way around and pulls the strings behind her neck. I pull my trunks on and wade into the shallow water as I watch Sam struggle with her bottoms.\n\n\"There you are!\" Angie leads the entourage through the sliding doors onto the patio. \n\n\"Hey!\" Sam yells from the deep end of the water. Dusk has descended while Sam and I were in no condition to notice, and without the pool lights on no one can see that she's still getting her bikini bottom situated. \n\n\"We came to kidnap you, Sam,\" Rob says. \"We're all going out and you're coming with us.\"\n\n\"We won't take no for an answer!\" Jenna says, smiling at me as she rounds the pool towards the deep end. \"Come on out,\" she says reaching her arm down to help Sam out of the pool. I hold my breath as Sam emerges from the water. Her bikini bottom is slightly askew, displaying half of her right ass cheek but it doesn't give anyone reason to believe anything unusual was happening. Whew! That was fucking close.\n\n\"It'll take me a few minutes to get dressed,\" Sam says, shrugging at me with obvious frustration. Are we ever going to have uninterrupted sex? I climb up the steps and grab a towel as Jenna follows Sam into the house. \n\n\"There are cokes in the fridge,\" I tell the boys and they turn towards the kitchen as Angie walks over to me. \n\n\"Thank you, Granddad,\" she whispers, kissing me on the cheek. \"It worked! Rob got me off.\"\n\n\"That's great, tell me what happened,\" I respond.\n\n\"We were on the beach, in a fairly secluded place,\" she whispers, keeping her eye on the house. \"I just asked him how good it felt when he came in my mouth. Of course, he raved about it and so I asked him if he wanted to know the secret of making a woman feel like that.\" \n\n\"That was a good approach,\" I commend her.\n\n\"Yeah, he was excited to know so while we're standing there on this beach, I guided his hand into the front of my bikini. When his finger slipped inside me I told him to pull it up to the very top and feel around for the little knob.\" I'm nodding vigorously as we both watch the door. \n\n\"I almost shrieked when he found it and I told him how to gently massage it. We started kissing and I came right there on the beach.\"\n\n\"Wow! That's amazing,\" I tell her. \n\n\"That's not all!\" she blushes. \"When we got back to the room, after I returned the favor with my mouth, I showed him how to suck it while he fingered me. He didn't stop until I came again.\"\n\n\"I'm happy for you, Angie,\" I say, giving her a hug and giving away my state of arousal.\n\n\"I was so turned on, Granddad,\" Angie whispers, \"I came again when we fucked!\" \n\n\"Damn! Three orgasms just like that?\" I snap my fingers. \n\n\"Yup,\" she says proudly. \"And I owe it all to you!\" she frowns at the bulge in the front of my swim trunks. \"Maybe we should stay here tonight so I can do some paybacks,\" she offers, as she discreetly squeezes my hard cock. \n\n\"That's alright, Angie,\" I assure her. \"I'll be fine. You need to be with Rob.\" \n\n\"I think he and Matt have lined up some kind of street race later where they can show off Matt's car,\" she says. \"Jenna and I aren't interested in that anyway.\" Damn! The week will be over tomorrow and they'll be going back. I want some alone time with Sam. \n\nAs if on cue, Sam and Jenna emerge from the house.\n\n\"Ready to go, Angie?\" Jenna calls as Sam walks over to us. Angie flashes me a smile and turns to join her friends.\n\n\"I'll try not to be too late,\" Sam whispers as she kisses me goodbye. \n\n\"Angie was saying they might stay here tonight,\" I explain.\n\n\"I'll try and dissuade them,\" she sighs. \"Anyway, thank you, Grandpa! That was wonderful.\" \n\n\"I love you, Sam,\" I whisper and then she's gone. They're all gone, and my cock is throbbing. Which is when I remember the videos. \n\nOpening my laptop, I click on the video files and scan through the various clips. I skip the ones with them prancing around in my bedroom. There's nothing on there that I haven't already seen live and in person. When I find the one with Angie and Jenna in the bedroom I click play and put it in full screen mode. \n\nSitting back, I watch Jenna and Angie, lying on my bed, enjoying a deep passionate kiss while their hands roam all over each other. This is how I left them when I went to check on Sam and I'm anxious to see how far they took it. \n\nMy cock is already throbbing from my abruptly curtailed tryst with Sam and the sight of these two beauties engaging in girl-on-girl sex is doing nothing to calm it down. I'm sorely tempted to jack off but the prospect of late night sex with one or more of these three young women is enough to make me wait.\n\nJenna is clearly the initiator and I watch excitedly as her hand moves between Angie's legs. Angie instinctively spreads her thighs, welcoming her friend's intrusion as they continue to kiss. As Angie's arousal heats up, Jenna pulls Angie's hand onto fir-lined snatch. Hesitant at first, Angie eventually succumbs to Jenna's machinations and they're soon frigging each other's pussies as they writhe in pleasure on my king-sized bed. Damn! My cock is aching to be touched but shooting my load into a Kleenex would be a waist of a good cum. Shit!\n\nOn my computer screen, they've stopped kissing and Jenna is whispering something to Angie that I can't hear. Angie blushes and nervously shakes her head. Jenna is persistent and apparently proposes something else to which Angie replies with a shrug of her shoulders and an uneasy nod. Smiling like the proverbial Cheshire cat, Jenna moves down the bed and spreads Angie's creamy thighs. \n\nHoly shit! Jenna is going to eat out Angie's pussy! She must have asked Angie to do her and Angie refused but when offered the reverse option, it was too enticing for the horny girl to turn down. The camera angle prohibits me from seeing the detailed action but I've got a straight on view of Jenna's dark skinned ass while her face is buried in her friend's insatiable snatch. I wish I could bury my cock in her from behind as she eats Angie's pussy. \n\nJenna must be doing a good job because in no time at all Angie is bucking her hips off the bed and tangling her fingers in Jenna's hair. I knew I would see them kissing and touching each other but this is more than I could have hoped for and it gives me some great ideas for later tonight if they all come back here. \n\nI watch Jenna get Angie off with a pretty strong climax and wait anxiously to see if she'll reciprocate but Jenna apparently doesn't want to push her friend too far. They just lie there, kissing and cuddling until they finally just smile at each other and get out of bed. Rummaging through my dresser for a couple of minutes, they pull out a couple of my t-shirts and I watch them slip them on as they walk out of the bedroom. Damn! Jenna ate Angie's pussy! \n\nSuddenly, I'm not sure if I want Sam to come back by herself tonight. I really want some alone time with Sam but the idea of fucking Jenna while she eats Angie's or even Sam's pussy is a fantasy too good to pass up. It's only 9 o'clock, I'm sure they won't be back for hours. Fuck! My aching cock!\n\nI watch TV until about 11 p.m. and then unable to keep my eyes open, I give up and go to bed. All this sex has completely exhausted me and I have no idea what time they'll will be back. I take a minute to retrieve the condoms from the nightstand, leaving just one pack of three and stashing the rest in a drawer on the other side of the room.\n\nStripping naked, I crawl under the sheet and I'm out like a light almost before my head hits the pillow. I'm completely out of it, no dreaming or anything when I hear giggling at the foot of my bed and voices shushing each other.\n\n\"Shhh,\" one of them admonishes the others just as another fit of giggles begins. Opening my eyes, I peek at the clock. It's just after 1 a.m. They're stripping off their clothes at the end of the bed. Jenna is almost naked but Angie is having a little trouble with her shorts.\n\n\"Hello,\" I say, rolling onto my back. Jenna exposes me by tugging the sheet down to the foot of the bed before she crawls up over me. Her firm tits rest against my chest and her pussy mound is crushing my cock as she slips her tongue into my mouth. The taste is unmistakable. They've been drinking. \n\n\"Save some for me,\" Angie slurs as she hops on one foot trying to get her shorts off. Sam just giggles as I break the kiss and put my mouth next to Jenna's ear.\n\n\"Have you ever eaten pussy?\" I whisper for her ears only. I know the answer but I want to see if she'll admit it to me. Pulling her head back, she smiles her lascivious smile at me with an almost imperceptible nod.\n\n\"Why?\" she asks. \n\n\"Sam has been completely left out of everything all week.\" I whisper. \"Since I can't rectify that, I thought maybe you could.\" \n\n\"While you fuck Angie?\" Jenna asks. \n\n\"Something like that,\" I answer as I cup her round ass cheeks and rock her against my stiffening cock. She slides her tongue back into my mouth, maybe buying time to make a decision. \"I'll make it up to you,\" I whisper.\n\n\"Okay,\" she says, breaking the kiss and trailing kisses down my body. She momentarily sucks my cockhead into her mouth before getting off the bed and turning towards Sam. \n\n\"He's all yours, Angie,\" Jenna says as she wraps her arms around Sam and whispers in her ear. \n\n\"Oh goodie!\" Angie says, jumping on the bed and sucking my cock into her mouth. I push up against her trying to bury more of it into her warm orifice while intently watching Sam and Jenna. Angie is oblivious to what her friends are doing as she grabs the base of my shaft and starts pumping it into her mouth. \n\nAlthough obviously hesitant, Sam seems to be coming around as she lets Jenna lift her blouse over her head and unfasten her bra. She glances at me and I smile as Jenna leans down and starts sucking on her right nipple. \n\n\"Angie,\" I whisper. \"Let's fuck.\" Before I get a chance to mention I bought more condoms, Angie slides her mouth off, sits up and swings her leg over, impaling herself on my hard cock. Her burning pussy feels so sensual as it tightens around my bare cock that I'm tempted to just let her ride. But I do have a conscious and she is a little drunk so I grab her hips and stop her from bouncing. ",
        "\"I bought more condoms,\" I tell her, nodding towards the nightstand. \n\n\"Oh... um... sure,\" she stammers, leaning over to open the drawer. Angie is too short to retrieve them without letting my cock plop out of her heated pussy, which is fine because she needs to put the condom on it anyway. While she's rolling the condom down my cock, I watch Jenna finish undressing my granddaughter. Sam seems equally nervous and excited as she crawls up next to me on the bed and spreads her legs for Jenna.\n\n\"You were drinking, too?\" I whisper to Sam as she settles her head less than a foot from mine. \n\n\"Uh-huh,\" she smiles coyly. \n\n\"Oh yeah!\" Sam moans as Jenna buries begins her oral assault. \n\n\"Oh wow!\" Angie says, sitting down on my newly sheathed cock and noticing Sam and Jenna for the first time. \"You go Sam!\" she whispers as she sits up straight and starts riding my hard cock. Watching Sam's face as Jenna eats her pussy is an incredible turn on and I want so badly to lean over and push my tongue in her mouth.\n\nPulling my knees up behind Angie, I start bucking my hips up to match her solid rhythm. Fuck! I've got all three of them naked in my bed. I'm fucking one while watching her friend go down on my granddaughter. I can't imagine I'll last long with all this physical and visual stimulation. \n\n\"I told you we'd come back and take care of you, Granddad,\" Angie pants as she picks up the pace and bounces nearly all the way to the tip of my cock. I reach up and grab her puffy nipples as her tits bob up and down on her chest.\n\n\"Oh yeah!\" Angie cries as I twist her nipples and pull them out from her tits.\n\n\"Oh God! Right there! Keep doing exactly that!\" Sam cries, humping against Jenna's face as she tugs at her own nipples. \n\nAngie leans forward, bracing her hands on my chest as she rocks back and forth in conjunction with her up and down motion, pushing me closer to my much needed release. \n\n\"I'm going to cum!\" Sam yells, reaching for my hand and squeezing it tightly as she jerks against Jenna's mouth. \n\n\"Me too!\" Angie gasps, pounding down harder on my cock and driving me deeper into her inflamed pussy. \n\n\"I'm cumming!\" Sam screams, closing her thighs around Jenna's head and digging her nails into my palms.\n\n\"Fuck!\" Angie cries, slamming down hard and squeezing her pussy muscles around my cock. That's all it takes for me to shoot my load right along with them. Angie collapses on my chest while Jenna wheedles her way between Sam and I and stretches out beside me.\n\n\"Taste this,\" Jenna whispers, pushing her tongue into my mouth while pressing her lips to mine. She's soaking in Sam's juices and I hungrily suck the familiar flavor from her tongue.\n\n\"You should fuck her, Granddad,\" Jenna murmurs with her mouth so close to my ear I can feel her breath. I just shake my head as I pull her into another passionate kiss. While we're kissing, Angie lifts herself off my spent cock and cuddles up on the other side of me. \n\n\"It's Jenna's turn,\" I announce, rolling Jenna onto her back and looking at the other two. \"One of us can eat her pussy while the other two suck her nipples.\" \n\n\"I want you to eat my pussy, Granddad,\" Jenna says excitedly.\n\n\"We'll take turns,\" I tell her. \"Angie you'll start while Sam and I each take a nipple. I'm not sure if it's because of the arousal level or the alcohol but they take up their respective positions without a bit of resistance. \n\nSam and I each take a nipple while Angie positions herself between Jenna's widespread legs. I make eye contact with my granddaughter and she smiles before sucking Jenna's taut, black nipple into her mouth. I do the same and we squeeze and tease Jenna's breasts as Angie starts licking her pussy. \n\n\"Mmmm,\" Jenna moans as loud slurping sounds accompany Angie's assault on her pussy. Sam and I nibble at her magnificent brown breasts, squeezing the fleshy sides while teasing her nipples with our teeth. \n\n\"Time to switch,\" I announce a few minutes later. \"Sam you take Angie's place and I'll move over there. While they're changing places, I dash into the bathroom and dump the used condom. Sam is apprehensively lowering her mouth to Jenna's pussy when I get back. I watch as she extends her tongue and licks the thick moisture off Jenna's pussy lips. Pulling her tongue into her mouth for a tentative taste, she glances at me before plunging her tongue more deeply into her friend's pussy. \n\n\"Oh yeah, Sam!\" Jenna cries as I take up my position beside her and clamp my lips around her aroused nipple. I pull her breast up and tip my head to the side so I can watch Sam. Her eyes are closed as her mouth aggressively works on Jenna's pussy. Jenna is breathing hard and her breasts are heaving as Angie and I do our best to keep them stimulated.\n\n\"Let's switch again!\" I announce when Jenna's breathing changes and she starts vigorously humping her pussy into Sam's face. Sam lifts her face from Jenna's saturated pussy and I smile at the glistening juice all over her mouth and running down her chin. I give her a quick kiss as we trade places and I delve into Jenna's pussy with a passion. \n\n\"Oh fuck!\" Jenna screams as I shove two fingers into her overheated pussy and suck her clit between my lips. She's bucking her ass of the bed as I continue my double-pronged attack on her burning snatch. \n\n\"Pull out all the stops,\" I tell them. \"Let's give her a big one!\" They take up the challenge, kneading, sucking, biting and teasing their friend's breasts while I piston my fingers in and out of her pussy and suck on her swollen clit.\n\n\"I'm cumming!\" Jenna screams. \"I'm fucking cumming!\" She pushes Angie and Sam away so she can reach down and hold my head. Grabbing handfuls of hair, she fucks my face with her enflamed pussy while I vigorously twist and pump my fingers in and out of her.\n\n\"Oh God!\" Jenna cries, clamping her pussy muscles around my fingers and trapping my head between her thighs. She's shaking and shivering through a powerful orgasm, jerking her head off the mattress and digging her nails into my scalp. \n\nA gush of juices flood my mouth and I push Jenna's thighs apart so I can extract my fingers and replace them with my tongue. I slurp up her rapidly flowing cream while she gulps air into her lungs.\n\nWhen her breathing slows, I crawl up between her and Sam and flop onto my back. Wrapping one arm around each one, I pull them close in a loving three-way embrace. Angie cuddles up behind Jenna and I loop my arm around her shoulder bringing her into our sensual hug. Their legs flop over each other as we lie like that catching our collective breath before giving into our exhaustion and fall asleep.\n\nI awaken in a tangled mess of naked limbs and wish I didn't have to pee so bad that I could just lie there and enjoy the erotic contact with their bare flesh. There doesn't seem to be any way to disentangle myself without disturbing these sex-crazed beauties so before I'm even off the bed, everyone is awake. \n\n\"What time is it?\" Jenna asks. \"The guys are coming over at ten.\" I look at the clock on my way to the bathroom.\n\n\"It's almost nine,\" I answer just before I close the bathroom door. I emerge after I've taken care of my business and brushed my teeth to find them all in a frenzy trying to get dressed and pack their clothes. Sam seems to be in a funk as Angie and Jenna run around half dressed trying to find all of their stuff.\n\n\"What's the matter, Sam?\" I ask when her friends have gone into the other bedroom. \n\n\"I wish I could stay longer,\" she says and I jump on the idea trying to figure out if it's possible.\n\n\"Why can't you?\" I ask, trying to remember the logistics of their return drive. \n\n\"Because I'm the driver,\" Sam says, slumping her shoulders.\n\n\"What about Matt?\" I ask. \"Couldn't Angie and Jenna go in his car if you drive back later?\" Please say yes. It would be so wonderful to have some alone time with Sam.\n\n\"Maybe,\" she says, thinking it over. \"Wow. Why didn't I think of that?\" Sam jumps off the bed and runs into the other bedroom. In a few minutes she's back talking on her cell phone.\n\n\"Grandma's not here and I hate to leave grandpa all alone, Mom,\" Sam is speaking into the phone but smiling at me. \"I'll just drive back next week after grandma gets home. My summer job doesn't start until the end of next week anyway.\" \n\nSam gives me a thumbs up as she listens to the rest of the conversation. Her radiant smile is back and so is the excitement in my cock. \"I'll be good and yes, I'll do whatever grandpa asks,\" she says, raising her eyebrows at me seductively. \"Love you, too, Mom.\" \n\n\"I can stay!\" Sam says, jumping into my arms and giving me a big kiss on the lips. \"We're going to have so much fun,\" she whispers as I squeeze her ass cheeks through her shorts. \"Jenna and Angie are actually glad they get to ride back with their boyfriends,\" she explains. They were only going with me so I wouldn't have to drive alone.\"\n\nI restrain myself from demonstrating how excited I am until Angie and Jenna have climbed into Matt's car and we watch the taillights disappear around the corner. \n\n\"I can't believe we're finally alone,\" I say, wrapping my arm around Sam's shoulder as we walk back into the house. \n\n\"Me either!\" Sam says excitedly. \"We can fuck whenever we want and we don't have to get dressed until grandma gets home,\" she laughs. The phone is ringing as we walk in the door and Sam grabs it to check the caller ID. \n\n\"It's grandma,\" she announces while pressing the talk button. \"Hi Grandma!\" Sam answers. \"Guess what? I'm staying here with grandpa until you get back.\" I walk into the kitchen to get us Diet Cokes while Sam stretches out and gets comfortable on the couch. She's just listening when I return and hand her a Diet Coke. She sits up and pops the top while uh-huhing into the phone. \n\n\"Oh, I know!\" she suddenly exclaims. \"And when he does that thing with his tongue... yeah... oh God, I know...\" She listens for a minute before responding. \"Oooo, I'll have to try that,\" she says, smiling coyly at me. \"No, we haven't... really? I mean, I'm not sure about... okay... yeah, we did... uh-huh... outside by the pool... I know. Oh God, I came so hard I couldn't believe it....\" Now this is getting downright embarrassing. \n\n\"Give me the phone, Sam,\" I say, extending my hand. This has gone on too long. I don't need my wife and granddaughter comparing notes on my sexual techniques. \n\n\"Grandpa wants to talk,\" Sam says into the receiver. \"Okay, I'm sure I'll have more to tell you when you get home. I love you, Grandma!\" Sam hands me the receiver as I sit down next to her. \n\n\"Do you guys really need to...\" My wife cuts me off by telling me yes, they really do and if I want to continue enjoying myself, I'll put up with them discussing it. She continues to talk but I'm too distracted by Sam's impromptu striptease act to pay full attention. \n\n\"Uh-huh,\" I say without really listening as Sam sheds the last of her clothing and kneels on the floor in front of me. Unbuttoning my shorts and pulling down my zipper, she motions for me to lift my ass so she can pull them all the way down. I lift my feet and she slips them off of me and spreads my legs apart. \n\nMy erection is standing proud as Sam licks her lips and scoots closer. Her firm breasts brush against the inside of my knees and her erect nipples jut out invitingly.\n\n\"I've got to go now, Hon,\" I tell my wife and she asks me why. \"Why do you think?\" I respond as Sam slips her lips over the head of my stiff cock and licks all around my cockhead. \"I've created a monster,\" I tell her. She blows me a kiss through the phone and says she loves me. \"I love you, too. Hurry home.\" I disconnect the call and toss my phone on the couch. \n\n\"Fuck! Sam,\" I breathe. \"Am I going to get any rest?\"\n\n\"Not if I can help it, Grandpa,\" Sam answers, sucking my cock back into her mouth. Her fiery blue eyes lock onto mine as she glides her lips slowly down my shaft. Her warm tongue is eagerly coating my cock with a thin layer of saliva.\n\n\"I don't want to stop this time,\" Sam says, taking a breath as she wraps her hand around my shiny cock. \"I want you to cum in my mouth,\" she says, stroking me with her hand.\n\n\"Oh, Sam!\" I pant as she cradles my balls with one hand and guides me back into her mouth with the other. Oh fuck! I slide forward until my ass is on the edge of the couch and reach down to tweak her taut nipples.\n\n\"Mmm,\" Sam emits a muffled moan as she bobs her head up and down on my aching cock. With one hand pumping the base of my cock and the other one teasing my balls, I can feel my release building fast. \n\n\"I'm going to cum, Sam!\" I cry, bucking my hips off the couch and trying to shove my entire length into her mouth. She maintains her grip on the base of my cock and pumps faster, flicking her tongue against the underside of my cock, pushing me over the top.\n\n\"Oh GOD!\" I moan as I erupt into her mouth. Sam pulls off for a quick swallow but then is right back at it, stroking and sucking as I jerk wildly, shooting several more streams of cum before collapsing back against the couch. Sam swallows all of it and then holds my softening cock in her warm mouth, milking me until I'm completely spent. \n\n\"Wow!\" Sam says, sitting back on her heels and wiping a stray string of cum from her bottom lip. \"You came a lot, Grandpa,\" she smiles, putting her hands on my knees for leverage as she stands up. \n\n\"You'll be the death of me, Sam,\" I laugh as she crawls onto my lap and snuggles her naked body against me. With my heart still pounding in my chest, I cup her sexy ass with one hand and caress her beautiful tits with the other. If this isn't heaven, I don't know what is.\n\n\"Give me a minute to catch my breath and we'll see how much you can cum,\" I say as I tweak her taut nipple and squeeze her curvy ass. \n\n\"I can't wait,\" she whispers as she lays her head on my shoulder. \"Grandma says there's a lot more you can teach me.\"\n\nDamn! A week that started out with me looking forward to seeing three young ladies in their skimpy bikinis has turned into nothing but one erotic fantasy after another. I don't know what planets aligned to make it happen but as I caress my granddaughter's naked body I feel like at least thirty years has been shaved off my life.\n\n\"There is so much more, Sam,\" I whisper as I kiss the top of her head and envision guiding her progression through a myriad of sexual lesson plan."
    ],
    "authorname": "samslam",
    "tags": [
        "18-year-old",
        "oral",
        "granddaughter",
        "grandfather",
        "voyeur",
        "webcam",
        "threesome",
        "foursome",
        "two girls/one guy",
        "older man"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/sex-lessons-from-grandpa"
}