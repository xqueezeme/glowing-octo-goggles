{
    "title": "Hornet's Nest Ch. 09",
    "pages": [
        "---\n\nViolet\n\nBeing alone in Darren's house was pretty awkward, if I'm honest. And if it was awkward for me, I can only imagine what it was like for him. He knocked repeatedly on my room's door the following morning.\n\n\"Violet, erm. Violet.\"\n\nI didn't immediately respond, and he knocked again.\n\n\"Violet.\"\n\nIt wasn't particularly early. I don't know why I took so long to wake up.\n\n\"What?\" I finally replied, and it came out louder and sharper than I intended.\n\n\"Can you get up?\"\n\n\"Yeah.\"\n\n\"I have information, about the hospital. I'm going soon, I guess you want to come too?\"\n\nThat cleared up my tired fog much faster. \"Yes.\" I swung my legs over the side of the bed and his footsteps headed down the hallway. I stared at my discarded knickers on the floor. \"Darren,\" I called.\n\n\"Yes?\" The footsteps came back.\n\n\"I really need clean clothes.\"\n\n\"Oh, God.\" There was a pause. \"Are you decent?\"\n\n\"No.\"\n\nSo we just had this bizarre conversation through the door.\n\n\"I, erm,\" he unhelpfully started.\n\n\"Does David leave any spare boxers around by any chance?\"\n\nHe let out a light chuckle that was more of an amused exhale. \"We've not had to keep spare underwear for him for a long time.\"\n\n\"Okay.\"\n\n\"Erm.\"\n\nI guessed I'd have to borrow something of his.\n\n\"Maybe Tyler's smallest boxer briefs would fit you.\"\n\nOr that.\n\n\"Can I just put my stuff in the wash?\" I asked.\n\n\"Yes, but the hospital hours, um...\"\n\n\"Just a quick spin.\"\n\n\"Yes, but the tumble dryer-\"\n\n\"Darren, it's literally just some knickers.\"\n\nHis voice sounded muffled, like he had his hands over his face. \"Okay, all right. Hold on.\" He walked away again, but came back and dropped a bathrobe through the door. I could probably wrap myself up twice in it.\n\nI was hungry again. I was stiff in places that confused me - I didn't remember using those parts for anything specific. My head had a large bruise which only hurt if I touched it. The cut on my face only hurt if I stretched my cheek with expressions. My arms were decorated with marks from the vice grips of the police.\n\nI made myself some toast, repeatedly checking the washing machine for the twenty-minute spin to be over with. Darren was anxious to get to the hospital, and so was I. I didn't know what to say to David, or what he'd say to me, but I needed to see him.\n\nDarren wandered around on the phone. I didn't know what it was about, just kept hearing his voice through the walls. He hung up and came into the kitchen with an expression that said his mind was busy. If he had any sort of a hangover, he did a good job at hiding it. There were only some creases around his brow and eyes to suggest he was working through a headache. He poured himself what might have been his second or third cup of coffee.\n\nThere was a distinct lack of noise from the washing machine, so I went out to sort the dryer. Darren was leaning against the counter and looking down at his phone when I came back in. I hesitated before speaking. His eyes flicked up to my presence.\n\n\"... Have they found my parents yet?\" I asked.\n\n\"I'm trying to find out.\"\n\nI stared at the floor and crossed my arms.\n\n\"Lawrence is sticking his nose in for me,\" Darren continued.\n\n\"Who is he?\"\n\n\"What?\"\n\n\"Lawrence.\"\n\n\"Someone who's been hunting Driscolls for a long time. I was put in contact with him some years ago.\"\n\n\"Right.\"\n\n\"This was all the kick-off he was waiting for. Had to happen one day.\"\n\nSo Darren was bait on a hook. I came along and bit.\n\nI watched him typing a message on his phone's screen, then looked around the kitchen. I hated everything right then. The situation, what had happened, everything I'd done. I wanted to fix things, make everything better. I was helpless. Everything was in the hands of someone else, the mercy of something else. I dropped the stone and had no power over the ripples.\n\n*\n\nThe drive was uneventful. I tagged along behind Darren upon arrival. He seemed to know where he was going and what he was doing.\n\nI was 19 years old, and it was the first time I stepped foot inside a hospital. I had been born in one, but had no memories. When Dad got beaten up and stabbed, he never went to hospital. He 'pulled himself together' and spent a few weeks struggling. When Mum jumped off a moving motorbike in a choreographed crash and broke her arm, she never went to hospital. A friend snapped something back in place and bound it up while she screeched profanities. It got better, but she always complained that she didn't have the same strength in that arm ever again.\n\nThe hospital's interior was exactly as I expected it to be, but we slipped through without saying anything to anyone. Darren never went up to a desk. He stopped briefly to check some information on ward names, then continued down the corridor.\n\nWhen we reached the ward that held David and Tyler, there were police. My stomach instinctively tightened, but Darren sped up. He greeted them with professional tact and showed some ID.\n\n\"And her?\" one asked.\n\n\"My niece.\"\n\nWell, okay. They let us through. I didn't understand at the time, but they were there in case anyone came into the hospital in an attempt to 'finish off the job'. An unlikely but thoughtful precaution.\n\nWe were seeing Tyler first. I fell behind as we approached the door. \"Do you want to, err...\" I gestured for Darren to go ahead.\n\nHe glanced over his shoulder. \"He'll want to know what happened. Wouldn't you rather explain it yourself?\"\n\nFair enough. I followed him inside.\n\nWe walked into Tyler bickering with who I assumed to be a nurse. His voice cut off mid-sentence and his head snapped to the door. He stared for a second, yelped out a little laugh, then looked back to the woman - \"Nevermind.\" He grinned at us. \"Did you suck the police's dicks?\"\n\n\"Lawrence's,\" Darren replied.\n\nAnother yelp. \"Is he doing even half as good a job as Ted?\"\n\n\n\"It's not really a fair field to judge.\"\n\n\"Mister S\u00f6rensen?\" the nurse asked.\n\nDarren straightened at the side of the bed. \"Yes?\"\n\nShe simply nodded in affirmation and looked back to Tyler. \"I'll leave you to it.\"\n\n\"Ma'am,\" Darren started. \"Where is Keane?\"\n\nShe paused with her hand on the door handle. \"David Keane?\"\n\n\"Yes.\"\n\n\"You're not of kin.\"\n\n\"Not officially, no.\"\n\nHer eyes slid back to Tyler. \"He's been explaining to me. David had some lad come in earlier, his brother I think? I'll go check anyways, and let you know.\" She took her leave.\n\nI stood feeling very much like a third wheel as Darren sat on the side of the bed and seized Tyler in an embrace. Tyler returned it with one arm - his left was in a sling. Darren pulled back and gave it a tug. \"What's this?\"\n\n\"They don't really want me to move my arm while it heals, some shit with my shoulder blade. To be fair,\" he lifted the elbow level with his chin, \"it hurts like a bitch to move it anyways.\"\n\nThey returned to their previous closeness. Darren seemed content with holding him in silence for a short while. Tyler eventually lifted his buried face, rested his chin on Darren's shoulder, and gave me a look. \"So, what exactly has been going on?\"\n\nI think facing Tyler was, in some ways, the hardest. And I could get it over with first. I didn't know how many times I would be repeating this story.\n\nThere wasn't much detail or emotion. I simply relayed events, starting with the phonecall from Harold. I did try to apologise about the whole ringing-up-Tyler-gone-midnight thing. He smirked and I looked away. He watched me the entire time I spoke, but I only made a few glances of eye contact.\n\nI trailed off close to the end, thinking Darren would take over and explain what exactly had gone on involving the police, but he didn't. There was a silence.\n\nThe silence stretched. Tyler was waiting for me to look up and make eye contact. I finally did.\n\n\"You're a dumb bitch,\" was his response. To everything. \"And a pretty good shot.\"\n\nI scoffed. \"Not good enough.\"\n\n\"Why?\"\n\n\"I didn't kill him.\"\n\n\"No, then you would've stolen Darren's moment.\" His eyes finally moved off me. \"You enjoyed that, didn't you? Fucking idiot.\"\n\nDarren's face was obscured behind his hand, but he visibly shook his head. \"I lost my shit.\"\n\n\"Yeah, and you know who else lost their shit? The kid.\"\n\n\"Fucking hell.\" Darren dragged the hand down his jaw. \"It's lucky you stopped him when you did.\"\n\n\"Yeah, and I nearly got broken ribs for it. For fuck sake. He's too big now, I can't handle him anymore.\"\n\nThere was another short silence. Tyler's abrasive, joking manner could be equally hard-hitting.\n\nDavid definitely had lost his shit. A physical eruption. The blurred lines of violence. Perhaps the worst thing, was that nobody was sorry it had happened. None of us knew how things might've gone otherwise. David performed nothing but a necessity that kept the four of us alive.\n\n\"If only he did that at the car,\" Tyler continued.\n\n\"They got the jump on you,\" I quietly replied. \"It makes the difference.\"\n\nHe snorted. \"You'd know all about that, huh? Like you knew to aim at the torso and not the head?\"\n\nI stared at the floor.\n\n\"You got a headshot, though. I saw it.\"\n\nI'd shot people dead, and Tyler was ready to joke about it.\n\n\"Can we not talk about this,\" Darren butted. \"Not here, not right now.\"\n\nTyler shrugged his right shoulder. \"We have to talk at some point.\"\n\nDarren let out a deep sigh and buried his head again.\n\n\"What's going on,\" Tyler pushed, \"what's Lawrence doing?\"\n\n\"Honestly, I wish I knew.\"\n\n\"Is he gonna find anything out?\"\n\n\"Actually, I called him up to tell him something.\"\n\n\"What?\"\n\nDarren's eyes fixed on me. \"This Driscoll talked with Violet, and told her some things.\"\n\n\"Like what?\"\n\n\"Like, my dad stole Brendan's wife.\"\n\nTyler's eyes widened, then he blinked. His mouth became an unimpressed line in his face, that sort of disappeared beneath his beard. \"You what.\"\n\n\"Yes.\"\n\n\"For real?\"\n\n\"Yep.\"\n\n\"So that's what this guy got in a fit about? Your dad fucked his mum?\"\n\n\"My dad fucked his mum,\" Darren confirmed.\n\nTyler's face screwed up, like there was just so much stupidity in the world and he didn't want to think about it, let alone deal with it. \"Jesus Christ.\" They stared at each other for a long moment.\n\n\"My dad was a bastard,\" Darren said. \"That's all there is to it.\"\n\n\"Nah,\" Tyler said, but it went no further. Apparently right then wasn't the time for that conversation.\n\nI was waiting for that nurse to come back. Waiting to see David.\n\n---\n\nDavid\n\nI entered a withdrawn state. Physically, everything was fine. Or, would be, given a typical recovery period. I didn't know what was going on, I didn't really know where I was, and I didn't know what to do with myself. I stared at walls, stared at the TV in my room, and mostly slept. I was out of it.\n\nWesley's voice told me that I was allowed visitors. It woke me up and I came to confused as fuck. I felt his hand on my shoulder, and opened my eyes to him staring at my face. His own eyes lit up and came to life with a massive grin. Before I could react he threw his weight across me and his shoulder knocked my chin.\n\n\"Wes,\" I growled. He chuckled and didn't let go.\n\n\"Fucking hell, mate. Fucking hell.\" He shifted, and his arm brushed where I had stitches. I jolted and he pulled back. \"Are you okay? You got shot?\"\n\n\"Fuck.\" I pushed myself up and rubbed at my eyes, then looked to the door. \"Mum and Dad not with you?\"\n\n\"They want to come, I think they'll be here at some point. Mum's having to deal with the company and Dad's dealing with some shit with the police.\" His eyes searched my face while I was drowsy and slow. \"Dave. I've never shat myself like this before.\"\n\n\"I'm okay, Wes.\"\n\n\"What happened? They wouldn't tell me medical details.\"\n\n\"Apparently it was a 'graze'. Which meant it ripped my side open and I got stitches and stuff.\"\n\n\"... Can I see?\"\n\nI paused to give him a look. His lips pursed while holding my gaze, containing a laugh. It was infectious. I felt myself grinning, then showed him, peeling back the tape that held a gauze over my stitches.\n\n\"Does it hurt?\"\n\n\"Only if you fucking touch it.\"\n\nI slapped his hand away and we both snickered. He was giddy that I was alive, and I soaked it up. He just turned up in that room and suddenly everything felt better. Some things, at least. I had a whole mess in my head to sort through, but one thing at a time.\n\n\"Did you drive here?\"\n\n\"Yeah, shit. I literally just got my license, and already had to deal with London. There's some idiots on the road. Don't tell Mum, aight, but I nearly crashed.\"\n\n\"Why.\"\n\n\"Someone pulled out in front of me.\"\n\n\"Wes.\"\n\n\"I can't do the sat nav and everything at the same time, I can't multi-task for shit, aight?\"\n\nI chuckled and thudded my forehead against his shoulder.\n\n\"Oh yeah.\" He reached for a plastic bag at his feet and dropped a chocolate bar on my stomach. \"I hear food here is shit.\"\n\n\"They fed me pretty well last night.\"\n\n\"Bet you were high on drugs 'n shit.\"\n\nI peeled back the wrapper. \"Nah, man.\"\n\nHis eyes moved from the chocolate, to my face. \"They got police out there guarding you and stuff, you know.\"\n\n\"... Really?\"\n\n\"Yeah.\"\n\n\"Shit.\"\n\nThe mirth had to sober up eventually. There was a pause where he stared at the door, then looked back to me. \"What happened, Dave?\"\n\nI didn't know where to begin. My mind was full of images, and trying to put those into words felt impossible. Wesley only knew half the story, and so did I. One of us had to explain our side first, to piece it all together.\n\n\"How much do you know?\" I asked. At that point, it felt like everybody but me knew what was going on.\n\n\"Violet turned up in the middle of the night after she got you and Tyler abducted.\"\n\nI stewed in silence for a minute, and Wesley was patient. I finally explained, starting with the whole fight with the car. Our conversation was a mess. We jumped on each other's sentences. We cut each other off. Sometimes we fell silent, then both started talking at the same moment.\n\nI tried to recall my conversation with Tyler, with as much detail as possible. Darren's situation was something we'd both been left in the dark about, and we'd both been trying to figure it out, trying to understand it with our shreds of information. Not only that - I told Wes, as bluntly as possible, that Tyler had killed someone.\n\nHe went very quiet and stared at the door again.\n\nAnd more, I told him about Dad. He looked around with a long stare, where his eyes darted across my face. His voice was quiet when he eventually spoke.\n\n\"You didn't figure that out?\"\n\n\"What?\"\n\n\"I mean, I guessed back when he showed us that gun. I just... Dave. Why do you think he had a gun? For shits and giggles?\" He leant his elbows on his knees and clasped his hands together.\n\n\"It didn't cross my mind,\" I admitted. \"It just didn't.\"\n\nWe both fell silent. My withdrawn state crept back up on me. Wesley was now going through all the motions I was. I couldn't decide whether it was easier or worse for him, being on the outside of the situation.\n\nThe fabric of my world was not just torn, but ripped up. There were ways things were supposed to be, and they'd all been shattered. Dad was a murderer. Tyler was a murderer. Violet and Darren were murderers. I'd watched them shoot. Maybe I'd killed someone, too. I didn't even know.\n\nI wanted things to go back to normal, but they never would. Everything would simply be different from there on out.\n\nViolet had done this. It was all her fault. She'd called up Tyler like that, lured him in, given him over to Driscoll. And yet I'd also been there as she shot Driscoll to save him.\n\nShe'd changed sides, or something. She was some sort of turncoat. Double agent. Triple agent. I had no idea how I felt about it.\n\nI explained the rest of it to Wesley - everything that followed when Darren showed up. He didn't jump on my sentences, simply listened. His eyebrows rose when I talked about Violet opening fire on the room.\n\n\"Holy shit.\"\n\n\"I don't know where she is now, or Darren. The police were angry at both of them, they were fighting.\"\n\n\"Mum said they're out.\"\n\n\"Huh?\"\n\n\"The police took in Darren and Violet. They got out yesterday.\"\n\n\"Are they okay?\"\n\nWesley gave a massive, full-armed shrug, hands in the air and everything. \"I basically don't know shit. I had to take Hanna to Grandma and Granddad's. She's real upset, she knows something's going on, and doesn't understand why nobody will tell her.\"\n\nWe fell into another silence. He sprawled across the bed, across my legs. My mind processed all the new information until the pair of us jumped at the door opening. A nurse came in, whose face I recognised. She'd had a shift at the same time yesterday.\n\n\"There's some people here who want to see you,\" she said. \"You're not supposed to have visitors outside of close family right now, but it's Darren S\u00f6rensen, you know him, yes?\"\n\n\"He is family,\" I replied.\n\n\"I've been told about your 'situation'. He has a young lady with him, too.\"\n\n\"Violet?\"\n\n\"I didn't catch her name, sorry. Would you like to see them? Shall I go get them?\"\n\n\"Yes.\"\n\nWesley perked up and we sat in another silence. It was a painful minute's wait until the door opened again. Darren stepped inside first. He didn't look great, but he could've looked worse. His eyes were always expressive, and in that moment he looked so happy, not only at seeing me, but also Wesley. Wes sprung off the bed and threw his arms around him, and Darren returned it with just as much vigour.\n\nViolet silently slipped in behind them. My gaze fixed on her, and hers on me. Her expression said so much, and so little at the same time. I'd always felt those big blue eyes were guarding something. She had nothing to hide anymore. They were clear as day.\n\n\"Where's Tyler?\" Wesley asked.\n\n\"Right down the corridor,\" Darren replied.\n\n\"Can I see him?\"\n\n\"I don't see why not.\"\n\nWesley tossed a glance over his shoulder. \"Give the lover birds some time alone. They need it.\"\n\nDid we? They both stepped out before I thought of anything to say. The door slowly eased itself closed and clicked shut. Violet crossed her arms and looked to the floor. I waited for her to talk, but she didn't. We were left in a suffocating silence. I finally broke it.\n\n\"Come here.\"\n\nShe didn't move.\n\n\"Come here,\" I growled.\n\nShe dragged herself over, but didn't look into my eyes. I sat up further, and somehow, while staring down the whole time, she had the perfect aim to thud her forehead against mine.\n\n\"I'm sorry,\" she said. \"I'm so fucking sorry.\"\n\nIt had the potential to sound insincere, but it didn't.\n\n\"Why did you do it?\"\n\n\"I don't know.\" She pulled back a little and met my gaze. \"How much do you know?\"\n\n\"I think I might know the general gist of things.\"\n\n\"Driscoll had my parents. I...\"\n\n\"That's what the call in the middle of the night was about?\"\n\nShe frowned at me. \"Yes.\"\n\n\"Why didn't you tell me?\"\n\n\"I don't know.\"\n\n\"Why did you just walk out on me?\"\n\n\"I don't know.\"\n\n\"I just don't... I just... I don't understand you, Vi. Why wouldn't you talk to me? Why did you do this?\"\n\n\"Because I'm stupid.\"\n\n\"This is beyond stupid. You... You wanted to use Darren, to save your parents?\"\n\n\"Pretty much.\"\n\n\"So what changed?\"\n\n\"I kinda like Darren, and I didn't like Driscoll.\"\n\nMy heart pounded so hard in my chest. She almost made me want to scream. She made no sense. \"What the fuck goes on in your head?\"\n\n\"I wish I could say that there were voices. But that's the problem. There's not. There's nothing. I don't think. I just do things. Stupid things.\" She edged further away from me. \"It seems like a good idea at the time.\" Her hands clasped at her arms. \"If you just... If you want me to go, I get it. I'll go.\" She stared at the door, like she would bolt.",
        "\"No. Don't you fucking dare.\" My hand shot up to grab her wrist. \"Don't leave me again.\"\n\n\"I'm a terrible person.\"\n\n\"Yeah, and I still love you.\"\n\nShe was doing her thing, trying to deflect. It wasn't working. She gave a feeble tug with her wrist and I didn't let go. I watched her crumble. She finally looked into my eyes, then fell into me, hiding her face before I got a chance to see her weakness. \"I love you,\" she strained. \"I love you so much. I'm so sorry.\"\n\nShe let out a loud sniff. I wrapped my arms around her, falling back against the pillows and pulling her with me. I'd never seen her cry before, and to be fair, I wasn't seeing it, just hearing it. My own sinuses tingled and I joined her, resting my head against hers. We didn't really sob. Both of us were trying too hard to control it. The room just filled with sniffs, and pained breathing. A couple of whimpers.\n\nShe curled up against me, tucking her head between my shoulder and neck. I wiped my eyes with my free hand. It was the first time I had her in my arms after she'd walked out on me, after all the shit she'd put me through. Frustration and relief were a strange combination to feel.\n\nWe did talk more, eventually. But not that much. I mostly said things to break the silence, and she replied with short sentences.\n\n\"I don't even know if my parents are alive,\" she said. Her next few breaths were sharper, but she didn't break into a second bout of tears. \"I don't know where they are. I don't know if there was any point in anything.\"\n\nI didn't reply. She was the one I wanted to talk to the most, and yet there felt too much risk of saying the wrong thing. I opted for silence, and she didn't speak again either.\n\nWe both could've slept if left there long enough. The door opening cut through whatever drowsiness was forming.\n\n\"David,\" Darren said. \"Your parents are here.\"\n\nI pushed up on an elbow. \"Okay.\"\n\n\"Violet, you need to come with me.\"\n\nShe sat up as well, blinking a few times, like doing so could remove any evidence of crying, or bring her back to a sharper state. Or both. She gave Darren a curious glance, but he'd used his authoritative tone that made people do as he said before they had time to question it.\n\n\"We'll come again tomorrow,\" he continued.\n\nI gave Violet a kiss before she walked out. It was brief. She was distracted. I didn't get to talk to Darren. He held the door open, watched her pass in front of him, then gave me a quick look before disappearing.\n\nTheir presence was replaced in a matter of seconds.\n\nDad looked like he'd been dragged through hell and back. His eyes were exhausted, while his posture was tense. He was dressed in black trousers and a white shirt, with the sleeves rolled up. Somehow that was enough, just for the briefest moment, for him to look like Driscoll. My mind was an idiot. The involuntary prickle of adrenaline followed whether I wanted it or not.\n\nI couldn't even explain what made my blood pressure go up. Too many subtle hints that hit at once. Darren had just removed Violet from my company. To make room for Dad.\n\nThe alarm bells only gave me the sudden realisation that I didn't want to talk to my dad right then. I wasn't ready.\n\nMum perched on the side of the bed, searching my face for something, and I didn't know what. She only looked tired, and fed up, and nothing else. Her hand reached out to cup my cheek. \"Are you okay?\"\n\n\"I don't know.\"\n\nHer response was to seize me in a hug. I mean, I got it, I could've died. But I was in a weird state, and couldn't really get on board with her thoughts. Whatever had happened to me didn't matter because I was right there and I was fine.\n\nThis wasn't about me.\n\n\"There's a lot of things you haven't told me about,\" I said.\n\n\"Yes.\" She pulled back and brushed her hand through my hair.\n\nMy eyes moved to Dad as he loomed at the end of the bed. \"You shot someone.\"\n\nHis thumbs went to his pockets and his head turned away. It wasn't really possible to see his jaw tightening beneath his facial hair, but it showed in the muscles of his neck.\n\nMum fidgeted. She leant her palms on her knees, then crossed her arms.\n\n\"Why wouldn't you tell me that?\" I asked.\n\nDad met my gaze. \"Why would I?\"\n\n\"No. No, don't fucking pull that. That's exactly what Tyler said. It's bullshit.\"\n\n\"David,\" Mum started.\n\n\"No, fuck this. Fuck you, all of you.\"\n\n\"David,\" she warned a second time, in the tone she reserved for whenever I was being an idiot or misbehaving. \"Now is not the time or place.\"\n\nShit. I was angry at everybody. The whole abduction, the fighting, the shooting, had been traumatic in its own way. But I didn't care about that yet. What unsettled me were all the things that had been kept from me. Nobody was openly talking, but I needed it. I needed my answers. I needed my explanations.\n\n---\n\nViolet\n\nI took the fact that Amelia brought my suitcase and laptop for what it was - I'd been kicked out.\n\nI'd be taking up refuge with Darren for longer than I initially thought. Tyler even laughed about it - \"Look after him, he can't cook for shit.\"\n\nMy future seemed pretty bleak. Not that it was possible to look far ahead, anyways. Life was trapped in a narrow scope, where the events of the next few days would determine everything. I felt pretty numb. Little spurts of emotions came and went.\n\n\"Darren,\" I said in the car. \"What's going on?\"\n\n\"You're staying with me for now.\"\n\n\"Are Zack and Lia angry with me?\"\n\n\"They have David to worry about.\"\n\nRight. I stared out the window. I wasn't even mad. I didn't blame them.\n\n*\n\nThat evening was a blur. Darren spent much of it on the phone. Always with the fucking phonecalls. He liked to walk around a lot, as well. I could relate to that. I was a fidgeter. With a voice coming in one ear and my brain engaged, the rest of my body didn't know what to do.\n\nI sat in the lounge with my laptop, listening to his conversations get louder and quieter as he moved in and out of the kitchen. It was interesting, at least, to keep track of the sheer amount of bullshit he could come up with, and try to figure out who he might be talking to, to be telling a particular story.\n\nThe general consensus was that David and Tyler had been in a car crash, and that was what held his attention the past few days. \"Yes, another one,\" he confirmed to someone. \"They're fine, yes. Perfectly conscious... yes... no... no. Tyler damaged a shoulder... just a strain...\"\n\nWhen he finally got some peace and quiet, he joined me in the lounge with another bottle of wine.\n\n\"Is this gonna make you into an alcoholic?\" I asked, eyeing it over the screen of my laptop.\n\n\"No, I just need to make sure that I sleep.\"\n\n\"That's the kinda thing alcoholics say.\"\n\n\"I'm not an alcoholic, Violet.\"\n\nHe'd made his way through the first glass when another phonecall came. His frown turned to interest at seeing the name. He got to his feet and I tucked my legs back to let him past.\n\nThere was no bullshit in his tone. Less than a minute after wandering into the kitchen, he was back, and looking at me.\n\n\"John Lloyd and Eleanor Lewis, yes?\" he asked.\n\nI frowned, then nodded.\n\n\"Yes, that's them,\" he continued into the call. He straightened as he listened to Lawrence's voice. An expression passed over his face which I likened to satisfaction, but it faded. His hand went to his jaw, then his forefinger and thumb tugged on his bottom lip. \"... Right. Okay. Well, no, but...\"\n\n'No' what? I stared at him, not wanting to interrupt but burning to know.\n\n\"Okay, thank you... Yes, I have her right here with me. Okay, yes. Bye.\"\n\n\"What's going on?\" I asked before he'd barely taken the thing from his ear.\n\n\"Your parents are alive, but the police have them.\"\n\n\"What do you mean?\"\n\n\"They've got some crimes under their belt, Violet.\"\n\nI didn't know how to react. \"So... they've been arrested?\"\n\n\"Basically, yes.\"\n\n\"What's... what's happening, then?\"\n\n\"I don't know.\"\n\n\"What's Lawrence-\"\n\n\"This isn't his case. He's done a lot already.\"\n\nDarren resumed his space on the sofa, and reached for his wine. I sat in a stunned silence. What was I supposed to do?\n\n\"Do you, err,\" I started. \"Have a charger for this?\" I pulled my phone out of my pocket - carrying around a phone with no battery, fucking useful, right? My charger hadn't come with my laptop and suitcase. I didn't know where it was.\n\nHe briefly examined the port in my phone's case. \"Upstairs, the room two doors down the left. Tyler keeps a lot of shit in there. I can guarantee there's a charger for any and every model of smartphone to ever grace this planet.\"\n\nI got my feet. \"I need to make a call.\"\n\n\"To who?\"\n\nI hesitated and stared at the black screen in my hands, before stepping towards the door. \"Someone in my parents' gang.\"\n\n\"Violet.\" I looked around to his cold gaze. \"Don't get involved in anything else.\"\n\nHis awkward manner around me, like he had no idea what to do with me, had dissipated, replaced with a tone you'd expect from an elder family member. Like he was my dad, or something. Or, hell, my uncle.\n\n\"I'm not,\" I replied. \"He just needs to know what's going on. Maybe he knows what to do.\"\n\n\"About what?\"\n\n\"How to help my parents.\"\n\nDarren's hand went to his brow, but I walked out.\n\nUpstairs, I located that room. It could be heaven for me, free rein to go sticking my nose in and exploring, but I only wanted to find an appropriate charger and didn't care for anything else. There were boxes and boxes of shit. Wires, computer parts, metal bits of cases. It was like every computer, or laptop, or bit of technology Tyler had ever owned, had been ripped apart, the pieces kept and stored there. What for? What was the point?\n\nI found what I was looking for, after enough thudding and clanking around. I plugged my phone in and waited just long enough for it to come alive. Moments after turning it on, some texts poured in.\n\nA couple were from Harold, one even from Romain.\n\nI had voicemails, too. I could probably wait and get a call, but it was better to take the initiative.\n\n\"Flower?\" Harold's voice asked as he picked up.\n\n\"Hi.\"\n\n\"Holy shit, girl. What's been goin' on? I've been hearin' some crazy shit. Where the fuck are you?\"\n\n\"Things didn't go to plan,\" I replied.\n\n\"Girl. Alan.\"\n\n\"What?\"\n\n\"Alan Driscoll. He's been taken out. Is it true?\"\n\n\"Oh, yeah. I shot him.\"\n\n\"What?\"\n\n\"I didn't kill him, though. Darren S\u00f6rensen did.\"\n\n\"What?\"\n\nHis spluttering and incredulous tone made me want to fuck with him.\n\n\"Vi, you took out a fucking Driscoll? What the fuck've you been doin'?\"\n\n\"There was a police raid.\"\n\n\"Where's your parents?\"\n\n\"Police got 'em.\"\n\nThere was a long silence. \"Violet,\" he warned. \"You speak clear now. What's happened?\"\n\n\"I led the police to a raid on Driscoll. He's dead. I got nicked, too, but I'm out.\"\n\n\"What? How?\"\n\n\"Because I know Darren S\u00f6rensen.\"\n\nAnother silence. \"Vi, what game are you fuckin' playin' at?\"\n\n\"I don't even know anymore. The police have Mum and Dad, Harold, and I don't know what to do. They were there, where the raid was. The police found them, and apparently they arrested them.\"\n\n\"Well, yeah. Your parents are wanted, girl.\"\n\nThat didn't really surprise me, but I hadn't directly known. \"Are they?\"\n\n\"Yeah, there was a job that went fuckin' pear shaped in Slough just before now. Shit. Fuckin' shit. This is the definition of out the fryin' pan and into the fire. You're an idiot, Vi. Thick as shit.\"\n\n\"Yeah. At least they're alive.\"\n\n\"Fuck. Now what? You really shot Alan Driscoll?\"\n\n\"Yep.\"\n\n\"How?\"\n\n\"With a gun someone gave to me.\"\n\n\"Who the fuck are these people you're mixin' with?\"\n\nI studied my thumbnail. \"Rich and dangerous, apparently.\"\n\n\"What the fuck are we supposed t' do with this bollocks, Vi?\"\n\n\"I dunno. You tell me.\"\n\n\"Fuck. Fuck.\"\n\nHe hung up on me. What an enlightening conversation. I was glad it was over. I hadn't been able to do my usual fidgeting, as I was tethered to the end of the charger's wire. I left my phone on the floor and went downstairs.\n\nDarren was right where I'd left him on the sofa, looking at his own phone. The contents of the bottle hadn't changed. His second glass sat half empty on the coffee table. He looked up and cocked a brow.\n\n\"And?\"\n\n\"He's pretty pissed,\" I replied. \"Probably hearing from him again at some point.\" I dropped back into my seat and picked up my laptop. My eyes stared at the webpage I'd left open, but my brain read nothing.\n\nFuck this.\n\nThere was a layer of relief in knowing my parents were alive, but their situation was hell. I knew both would rather die than go behind bars.\n\n\"Darren. What do I do?\"\n\nHe massaged his brow. \"I don't know.\"\n\n\"Can I like, talk to the police, or-\"\n\n\"I think you need to keep out of anything else, right now.\"\n\n\"I have to do something. Can't you do something?\"\n\n\"Vi-\"\n\n\"You've got money.\"\n\nHis mouth made lines in his cheeks with a grimace. \"This has nothing to do with me. Yes, money. Not as useful as you think. Sometimes it can slip into the pockets of people in forensics and some evidence magically disappears-\"\n\n\"Is that what you did? When you got us out?\"\n\nThere was a stretch of silence. Darren was too busy typing a message on his phone. I tried to see the screen without making it obvious, and caught a glimpse of Amelia's name.\n\n\"Violet,\" he said. \"You should've asked for help.\"\n\n\"What?\"\n\n\"Back when this all started. You should've said something, to somebody.\"\n\n\"What was I gonna say? My parents are crooks, and they're in trouble with more crooks, who're like, ransoming them, for two-hundred grand?\"\n\n\"Yes, exactly that.\"\n\n\"Nobody was gonna fucking help me.\"\n\n\"Why are you so sure of that?\"\n\n\"Everybody already thinks I'm a gold digger anyways.\"\n\nHe gave me a long stare. \"If it was a matter of saving your parents' lives, I'd give you the money, Violet.\"\n\n\"No. You'd just give me two-hundred grand?\"\n\n\"If I thoroughly understood what it was for, yes.\"\n\n\"No. You cannot be serious.\"\n\n\"I'm very serious.\"\n\n\"Fuck you.\"\n\nHe let out a deep sigh. Fuck knows how, or why, he had any patience with me.\n\n\"Will you use that two-hundred grand to save them now?\" I dared to ask.\n\n\"Tomorrow, Violet. Tomorrow I will see, about anything. I'm too tired to have this conversation right now.\" He reached for his wine glass.\n\n\"People like you don't exist,\" I said. \"I think you're where David gets it from.\"\n\n\"What?\"\n\n\"Why are you helping me?\"\n\nHe gave me a look, then his attention was drawn to another vibration from his phone. \"You're someone who needs help.\"\n\nHe had a habit of answering questions like that.\n\n---\n\nDavid\n\nI needed to break things down into manageable chunks. Right then, my goal was seeing how fast I could get out of hospital. Easy enough. Tyler and I weren't exactly in critical conditions. The problem was that my body reached a point where it refused to sleep any more.\n\nThe visits were the only thing to look forward to. Wesley came and cheered me up. Violet came and soothed the internal turmoil I'd soon have to face. I managed to have a conversation with Darren, where he gave me blunt information, and not much else.\n\nMum managed to make me smile, but she looked more and more stressed with every day that passed. I didn't know what to make of Dad. He almost behaved like each visit was an obligation, and he didn't want to be there. But I saw it in his eyes - he was hurting. And beneath that, he was angry.\n\nThings were lingering, but nothing was happening until I was out of hospital. I could see it. There was a pattern to how the visits played out.\n\nAfter a few days, Tyler and I were moved into another room together. I didn't know if it was because we requested it, or if it was pure coincidence. With how kind and understanding the hospital staff were, I'm sure the they purposely made it happen.\n\nHaving Tyler around 24/7 might be enough to drive me insane, but at that point, I appreciated the company. We bantered back and forth, and there was all the typical clowning around anyone could expect. Tyler kept winding up the nurses, telling them how perfectly okay he was, taking off his sling, leaving the room when he shouldn't, getting chased down the corridor, and making a general nuisance of himself. Normal stuff.\n\nThe thing was, any time I chuckled or grinned, it seemed to make him equally happy.\n\nOne memorable mealtime he argued with a nurse about how he didn't like his food, and wanted it swapped. She put her hands on her hips and raised her eyebrows.\n\n\"That's what you ordered.\"\n\n\"Yeah, and now I'm eating it, I don't like it.\"\n\nSince he'd half consumed it, she didn't want to comply. He resorted to some of the worst flirting I'd ever seen to persuade her, and it only lasted until she pulled the confused, \"Aren't you gay?\" card.\n\nI nearly spat out my own mouthful. She finally took his tray to get him something else, rather than hear his spiel.\n\n\"You've lost your touch with women,\" I said.\n\n\"Kid, you've never had any touch with women.\"\n\n\"Hey, I scored Violet.\"\n\n\"No, Violet scored you.\"\n\nI guffawed. Shit. He was right. \"Yeah, well. Her and Wes are supposed to be coming in a bit.\"\n\n\"You mean your dad's letting Wes anywhere near her?\"\n\nAnd just like that, the joking hit reality too heavily. I poked at my food with an awkward pause. \"Dad's really pissed with her.\"\n\n\"Yeah,\" Tyler agreed with a sigh, realising he'd killed the mood. \"He is.\"\n\nThe visits involved Dad and Violet dodging around each other. From what I'd picked up on, Mum and Darren were doing everything possible to keep her away from him.\n\nI didn't like it. I felt like I had to get out, to protect her. From my dad. Ridiculous.\n\n\"He's never trusted her,\" Tyler continued.\n\nHim saying that felt like it should be a crippling realisation of nightmares coming true, but I was pretty indifferent. Perhaps because all along, I'd kinda known. \"He hasn't, huh.\"\n\n\"No, he looks at her too much. And you don't have the same taste in women, kid.\"\n\nI managed a smirk. \"Do you trust her?\"\n\n\"She shot the guy who was trying to kill me. We're cool.\"\n\nI think Tyler was physically incapable of holding grudges. It was always water under the bridge with him.\n\n\"Shit, I wonder if the police found my car yet.\"\n\n\"Did they trash it?\"\n\n\"No, they dumped it somewhere. Overheard them discussing how they'd need a fence.\" Irritation flashed across his face, the mere thought that they'd steal and sell off his favourite car.\n\n\"Tyler.\"\n\n\"What?\"\n\n\"You know, um. When the police came.\"\n\n\"Uh-huh.\"\n\n\"Thanks for... like, making sure I didn't do anything stupid.\"\n\nHe waved a dismissive hand. \"Thanks for not killing me, kid.\"\n\n\"I-\"\n\n\"It was pretty dramatic, wasn't it? Fucking cops.\"\n\n\"I guess.\"\n\n*\n\nMy stitches came out after seven days. We both got out of hospital right after. They wanted to keep Tyler in for a bit longer, but he wasn't having it. There was talk about things we were supposed to do, or not to do. I wasn't supposed to partake in any strenuous activity, Tyler was supposed to keep his sling until his check-up. Everybody knew that wasn't happening.\n\nI was happy to be getting out, but there was a problem. I didn't know what the fuck was going on.\n\nWesley turned up with Mum. Violet turned up with Darren. There was some chatter, where Vi and Wes stayed in the room while I gathered my few things, and Tyler disappeared into the corridor. When we left, the three 'adults' were stood there having an 'adult' conversation.\n\nThere's a lot you can pick up from intuition and vibes. Tyler looked around to my presence, but Mum and Darren were a little more engrossed.\n\n\"Mum,\" I said, cutting into their voices. \"Vi's coming home with us.\"\n\nShe looked at me, and hesitated. Thoughts passed through her eyes. She probably wanted to discuss things, but it still wasn't the 'time or place'. I wondered if it'd ever be the time or place. \"Okay,\" she finally said.",
        "Stepping outside, the sunshine felt like a wave of reality to smack me in the face. No matter what happens, the world keeps turning. Life doesn't wait for you. I'd had a week 'off', and now I was returning, and wanted - no, needed - to fix whatever had become broken in my absense.\n\nI needed to talk to Dad, I knew that.\n\nAs we approached Mum's car, I had a little urge to ask if I could drive, but didn't bother, as I knew the answer anyways. We followed Darren's Jag out of the carpark, then all the way to his house. We hung around for however long it took for Violet to collect her things.\n\nGod, it was so weird. Everyone was trying to act like normal, but things weren't normal. The constant underlying tension could make me sick.\n\nViolet was reserved, and it scared me. I didn't want to see her back in that cold and emotionless state, but she was closing up, slowly but surely.\n\nThere was no trace of Hanna when we got home. That wasn't a good sign, either. Violet went ahead of me, lugging her suitcase upstairs to my room. I paused with my hand on the bannister, and looked at Wes, who shrugged at me. I followed, and found her sprawled on my bed. I stepped over the suitcase and leant down to kiss her cheek.\n\n\"I'm gonna shower.\"\n\n\"Okay.\"\n\nIt was a long, hot shower. I wasn't sure if it helped me feel any better. I heard the front door opening and closing while drying off - Dad was home. When I returned to my room in nothing but a towel, Violet had propped herself up against the wall with the pillows, legs crossed beneath her laptop.\n\nShe looked at me. Not my face - her eyes stayed on my body. It was enough to give me the slightest butterflies, marred by her lack of expression. I stepped closer and she moved the laptop aside, swinging her legs over the side of the bed, and reached out to touch my stomach. Her fingers brushed over the healing wound on my side, and she studied it.\n\n\"Are scars sexy?\" I asked.\n\nHer eyes softened and she managed a little smile. \"Everything about you is sexy.\" She kissed my stomach, then shifted across the bed, inviting me to sit.\n\nThe signals were mixed. She didn't seem interested, but I couldn't deny that I wanted it. She was too distracted, and distant, and I wanted it to stop. I wanted her to focus on me.\n\nIt was a bad time, anyways. I'd already smelt dinner cooking. We were only kissing, not too heavily, when Wesley knocked and poked his head through the door without waiting for a reply.\n\n\"Yeah, food, and stuff.\"\n\nI put some clothes on, and made sure to stay ahead of Violet as we went downstairs to the kitchen. Dad was sitting at the table, but I don't know why I went in with my guard up. He didn't look like there was any fight in him. His whole posture sagged with exhaustion, he was up to his eyeballs in stress. Life went on. He was still juggling company business on top of everything.\n\nHe gave me a genuine look that didn't need words. He cared, and he was very glad to see me out of hospital. It's just that his eyes slid across Violet like she didn't exist.\n\nIt was a strange and quiet dinner. Hanna wasn't there, and everything felt wrong.\n\nEven afterward, I had no idea how to start a conversation with Dad. What exactly did I want to say? Where to start it? He wasn't making it any easier. Just like Violet, he was closed up, and made it very obvious that he wanted to avoid any and all interactions.\n\nViolet and I retreated behind the door of my room, but even we seemed plagued with trying to act normal when neither of us felt it. I put on a movie, but twenty minutes in, a scene with gunfire came up. I turned it off without thinking, and as soon as I'd realised my mindless impulse, I felt stupid to put it back on again. Violet said nothing.\n\nWe were both tired. We hadn't said anything meaningful to each other the whole day. She leisurely began to undress, and I did as well. I was down to my boxers when she perched on the side of the bed with her back to me. I reached over to undo the clasp of her bra, then slid my hands around the front, over her breasts. She leant back against me. I just needed to feel her, her body, her skin against mine.\n\nApparently it was mutual, as she turned to push me down on the mattress and kiss me. I think the intent was there, we just didn't get anywhere. She laid her weight on top of me, and we kissed, and ground a little, and kissed some more. The intensity never escalated. My hands traced down her back, but when my fingers hooked in her waistband she tensed, tearing her lips away from mine.\n\n\"I'm sorry, I just...\"\n\n\"It's okay.\" I meant it. Neither of us really had the energy.\n\nShe relaxed, and rolled aside to remove the tiny bit of clothing that remained. I stroked along her thigh, up her stomach. I just wanted to feel her. She gave me a happy smile and tugged at my boxers. I took them off while she turned off the light.\n\nIt wasn't fully dark outside yet, and I watched her figure return to the bed through the faint light piercing the curtains. We could sleep early, that was okay. I lifted the duvet and she clambered in beside me, and snuggled up against me. I held her tight.\n\nEven if I'd done too much sleeping at the hospital, the comfort of having her in my arms let me drift off easily enough.\n\n*\n\nDarren's voice has a way of piercing solid objects. Like walls, and floors. I didn't expect to be jolted awake by it. I blinked at the ceiling in confusion, trying to determine whether I was having some weird dream.\n\nViolet's body shifted beside me and I checked my phone. Somewhere around midday. Why was Darren here?\n\nI sat up further, rubbing my eyes and grimacing. The volume. It was shouting, infuriated yelling. Darren and Dad's voices going at each other, holy shit, it sounded like thunder. A stone of dread was settling in my stomach as I stumbled around for clothes.\n\nI made brief eye contact with Vi. \"Shit,\" she said.\n\nYes. Shit.\n\nAfter struggling with some tracksuits I was out the door, down the stairs. It just got louder. I didn't know what I was walking in to.\n\nThey were in the kitchen. Wesley's body blocked the door from the lounge, but he tossed a wide-eyed glance over his shoulder and stepped aside for me.\n\nMum stood by the back door, staring out into the garden. Tyler was leaning against the counter and staring at the floor.\n\nDad and Darren seemed to take up all the space in that room. The volume was unbearable, just an explosion of sound every time either said something. They were shouting over each other. This was what it looked like, when both simultaneously snapped and resorted to the most juvenile tactics.\n\nI don't think any domestics are pleasant, verbal or physical, but this wasn't normal, not for my family. There was a tension that was cutting deep. Some kind of severity that had Mum and Tyler in silence, Wesley looking like he wanted to disappear into the floor.\n\nIt could get worse. Dad was bristling, showing the weight in his shoulders. Darren stood his ground.\n\nBefore then, I never could've imagined Darren swinging a fist at my father. But things were different now. My heart thudded sickeningly against my ribs as I watched what might unfold.\n\nThey couldn't fight. Who would stop them? Wesley, and get snapped in half? Tyler, when his shoulder was still fucked up? Me? I didn't believe I could take on my dad. I'd heard a lot of stories, but I'd never seen him get truly violent. I didn't want to.\n\nAnd there was Darren. Staring him down, almost as if daring him to do it.\n\nIt was all on Dad controlling his anger. Not swinging that first punch.\n\nA thousand thoughts raced through my head while I tried to piece together the words I was hearing, tried to understand what the argument was even about.\n\nDad had said something 'incriminating' to someone called Lawrence, about Violet. Darren was going apeshit about it, but Dad was vehemently denying every accusation.\n\nWhat a fucking mess. I looked across the room at Mum in desperation, but she kept her gaze fixed on the garden, shaking her head to herself.\n\nThey were finally quietening. There was even a pause for a breather.\n\nI couldn't help but feel this was my fault. I was ripping this family apart. If I'd just spoken to Dad last night...\n\n\"I would've thought someone like you had a little more compassion,\" Darren snapped.\n\n\"Why w-\"\n\n\"What's your problem? Don't like the fact that she shot people with the gun you gave to her?\"\n\n\"No-\"\n\n\"That she comes from a background identical to your own?\"\n\n\"It's not.\"\n\nDarren scoffed. \"It basically is. What is it, Zack? Does she scare you?\"\n\n\"Darren-\"\n\n\"What's your problem?\"\n\n\"She's a fucking sociopath!\"\n\n\"And you're not?!\"\n\nThere was a brief silence, where Dad looked like that had pierced his armour.\n\n\"Stop this shit, Zack. Just stop.\"\n\nThis had been brewing that whole week.\n\n\"You're being irrational,\" Darren continued.\n\n\"I am? For fuck sa-\"\n\n\"You go saying this bullsh-\"\n\n\"It's not what I said-\"\n\n\"Give me this fucking mess?\"\n\n\"It's not my fault! Someone put two and two together and got on Lawrence's arse about it. For fuck sake, Darren. If you're gonna pay someone to manipulate a case at least pay someone who can do it!\"\n\n\"That's not what he's doing-\"\n\n\"The fuck it ain't!\"\n\nDarren rubbed his brow. \"So you go saying-\"\n\n\"No-\"\n\n\"Zack. You want her to rot in prison?\"\n\nDad gave him a dark glare, and no immediate response. \"You've made it your personal mission to be good samaritan, huh?\" he growled. \"And want me to do all the work.\"\n\n\"No-\"\n\nThe voices boomed again.\n\n\"Look at what she's done!\"\n\nDarren was getting animated. \"She made a mistake!\"\n\n\"A hell of a mistake!\"\n\n\"And you were perfect at nineteen, were you? Always made better decisions?\"\n\n\"Yes, actually-\"\n\n\"No,\" Tyler cut in. \"You didn't.\"\n\nDad's glare moved to Tyler, who stared back at him and didn't flinch.\n\n\"Jesus, Zack. Everybody does stupid shit in the heat of the moment. We know that better than anybody, huh? If I can get over it, so can you.\"\n\n\"Are you serious?\"\n\n\"Yeah, I'm fucking serious.\"\n\nThe silence that followed was just as unsettling as the shouting.\n\nDarren swallowed, staring at the floor, before looking back up. \"When did we ever turn you away?\"\n\nDad lost his composure. He sat himself down at the table and buried his head into his hands.\n\nMum placed a hand on his shoulder. \"Zack, everybody deserves a chance. She needs help, and you can help her.\"\n\n\"She won't listen to a word I say.\"\n\n\"Dad,\" I said. \"I just... If you'd just talk to her. She's not a bad person.\" The eyes in the room fixed on me, then moved past me. I glanced over my shoulder in time to see Violet's figure disappearing out of the lounge. Shit.\n\nI was torn. I wanted to go running after her, but also wanted to stay and see this argument resolved. If I heard the front door I knew to panic.\n\nMum looked annoyed, like she took the fact that Violet might've listened to the entire exchange very personally - it was her house, her hospitality that had been compromised. Her eyes moved between Dad and Darren. \"Are you two quite finished?\"\n\n\"What-\" Dad started.\n\n\"Are you done?\" she snapped. \"Good God. Is the pecking order settled now? Figured out who's 'alpha'?\"\n\nTyler smirked, but Mum's eyes kept moving between them like she was scolding little children.\n\n\"Absolutely fucking shameful.\"\n\nDarren looked to the floor. Dad managed to bury his head even further into his hands.\n\n\"Mum, I...\"\n\nShe just nodded at me, and gestured for me to leave, to go after Violet. I rushed upstairs. I wasn't sure what state I expected to find her in. Upset, maybe crying. Maybe angry and frustrated.\n\nShe was sitting on the bed, and looked unnervingly calm.\n\n\"Hey,\" I started. \"I'm sorry, I'm so sorry.\"\n\n\"It's okay.\"\n\n\"Dad's just, he's got issues, he'll get over it. I'm so sorry.\"\n\n\"It's okay, David. I walked out before someone said something to me. It's not my place.\"\n\nI stood very still for a moment, trying to decide what to do. People just don't act like that, so cool and collected. Something was wrong. \"Vi, my dad...\"\n\n\"I think he's right.\"\n\n\"What?\"\n\n\"Yeah. I think you're all idiots and he's the only smart person in this family.\"\n\nI stared at her in disbelief.\n\nShe fidgeted a bit. \"David, I don't think I should be here.\"\n\n\"No-\"\n\n\"My parents are gonna go to prison. I don't really know what to do. I think I should sign up to the service. Maybe that'll sort me out.\"\n\n\"No, don't you fucking dare.\" I sat beside her and slung my arm around her shoulders. \"It's gonna be fine, Vi. Everything's gonna be okay.\" She leant into me. At least she was still accepting of affection. She wasn't pushing me away.\n\nThere were faint voices from downstairs, and eventually the sound of the front door shutting. I guessed Darren and Tyler left. Wesley's footsteps came upstairs, then his room door shut, heavily. He had a shift at the restaurant in a few hours.\n\nI didn't want to go out to see anybody. I didn't want to leave Violet.\n\nA short while later, the front door shut again. Either Mum, or Dad, or both of them, had left. Then Wesley left - he didn't call in sick or anything, no, just went and got on with life. He was probably more than happy to get out of the house at that point.\n\nWhen I eventually went downstairs around 5pm, the house was empty. I guessed it was a slightly better sign if Mum and Dad had gone out together. I was reminded of my thoughts at the hospital - it wasn't about me. Everybody had issues they were working through, things that had been stirred up and they needed to face.\n\n\"Vi,\" I said, leaning back through my bedroom's door. \"Looks like we're eating alone tonight. What do you want for dinner?\"\n\nShe pulled a little smile while staring at her laptop. \"Pasta.\"\n\nI snorted. \"I can cook other things, you know.\"\n\n\"It's okay, I don't really feel like anything else.\"\n\nWe had another weird evening of trying to act normal.\n\n*\n\nThe next day, Tyler and I had to go down to the station to give statements. I was confused, and mildly alarmed, but Darren assured me everything was fine. Before I went in, I spoke with the 'Lawrence' man from the argument. He made sure I understood everything I had to say. I simply had to explain what my entire involvement with the Driscoll raid had been. It wasn't anything to do with Violet. Well, not exactly.\n\nWe were lying. Or giving half-information, more accurately. Whatever it was, Lawrence made sure I'd say what I needed to, and I complied. I didn't want to screw something up or see anybody in trouble.\n\n\"Is everything okay?\" I asked, as I walked back out to the car with Tyler and Darren.\n\n\"This,\" Darren replied, referring to the whole Driscoll ordeal with a wave of his hand towards the station's building, \"is over with.\"\n\n\"Yeah, and everything else?\"\n\n\"How's Violet?\" he asked. I wasn't sure if him answering my question with a question was some sort of avoidance.\n\n\"I'm not really sure,\" I replied. \"I don't think she knows, either.\"\n\n\"Keep her talking,\" Tyler said.\n\nTyler thought talking was the cure for all problems. There was truth in it, though. Bottling up never helped anybody. Violet had been pretty quiet, but I didn't know how to break it. I was too scared of saying the wrong thing.\n\n\"Are we gonna talk?\" I asked, clambering into the backseat.\n\n\"About what, kid?\"\n\n\"Everything.\"\n\n\"Yeah, we will. Not right now.\"\n\n\"Why?\"\n\n\"Still too much shit going on.\"\n\nThey dropped me off home, and I walked down the driveway, studying the exterior of my house. It felt like everybody was existing around each other. I didn't like it. I wanted things smoothed over. My parents and uncles had been through all sorts of shit before, hadn't they? So they could get through this.\n\nI could get through this, and so could Vi. I went straight upstairs to find her.\n\nMy bedroom was empty. Okay... I checked the bathroom. Empty.\n\nBack to my room. Her suitcase was gone. So was her laptop.\n\nThere was a note, on my desk. A hand-written fucking note. It was strange to pick it up and read it. I'd barely even known what her hand-writing looked like before.\n\nWhat. The. Fuck.\n\n\"Mum!\" I thundered down the stairs. \"Mum!\"\n\nShe was in the study, on her computer. I burst in like a storm and she scowled at me. I didn't mean to be behaving like that, the burst of panic was just too much.\n\n\"Why'd you let her go?\" I boomed.\n\n\"What?\"\n\n\"Violet!\"\n\n\"What-\"\n\n\"She's gone!\"\n\n\"She went out for a walk twenty minutes ago.\"\n\n\"A walk?! Her suitcase is gone, she's taken her shit! She's packed up! You just let her sneak out under your nose?\"\n\nMum gave me an incredulous look. \"What?\"\n\n\"She's gone to sign up to the fucking service! She wants to be drafted!\"\n\n\"David-\"\n\n\"For fuck sake, Mum!\"\n\nShe got to her feet in answer to my raised voice. \"Was I supposed to keep her locked up here?!\"\n\n\"Yeah, basically! She's fucking unstable!\"\n\n\"David-\"\n\n\"When did she leave? Twenty minutes ago?\"\n\n\"That's what I-\"\n\n\"She's probably walking to the station. I can still catch her, I have to stop her.\"\n\n\"David, stop.\"\n\nNo, I couldn't stop. There wasn't time to think. Violet was off being Violet again and I had to keep up with her. I needed a car. I rushed out to the hallway with Mum on my heels.\n\n\"David, if she needs some space-\"\n\n\"No, she doesn't!\"\n\n\"Would you listen to yourself?!\"\n\nYeah, I got it. I sounded like that psycho controlling boyfriend. But Mum didn't understand. She couldn't. She didn't know Violet like I did. I wasn't going to watch her walk headfirst into another disaster. Maybe if I'd been a little stronger before, the whole Driscoll disaster would've never happened.\n\nDad blocked my way, and my blood boiled. I didn't have time for this.\n\nHe didn't glare, he didn't say anything, and held out his car keys instead. I took them before I had a chance to be stunned and left out the front door.\n\n---\n\nViolet\n\nI was perhaps five minutes away from the central station, staring at the floor and lost in my own world. It was a self-inflicted agony, and I knew that, but I genuinely believed I was doing the right thing.\n\nMy suitcase's little wheels made a constant noise across the pavement. It wasn't really a dragging noise, it was just gravelly, annoying. Loud enough to be obnoxious.\n\nYou know what else was obnoxious? A car steering across the wrong side of the road, up onto the curb, and nearly hitting me.\n\nA black SUV. With privacy glass. I backed away from the opening door, tossing a glare at the driver.\n\n\"You fucking idiot,\" David growled.\n\nWhy was he here.\n\nI tightened my grip on the handle of my suitcase and stared at him in a frozen moment. My mind blanked. This wasn't going to plan. He was supposed to be busy at the police station, I was supposed to be out of town. I knew he'd kick up a fuss, and that was why I had to be gone.\n\n\"Why do you think you're fucking doing?\" he continued.\n\n\"The right thing,\" I replied.\n\n\"No.\" He tentatively stepped forward, but I didn't move. His hand gripped my shoulder, then moved to cup my cheek. \"Stop this. Come home, and talk.\"\n\nI stared at him, and couldn't think of what to say. He took the strap of my laptop bag and lifted it over my head, then reached around to take the handle of my suitcase. I released it. I stood perfectly still while he put both in the boot of the car.\n\n\"Vi, come on. Please.\" He held the still-open driver's door and watched me.\n\nI walked around the bonnet to the passenger side, but when I reached out for the handle, it kicked in.\n\nFuck this.\n\nI was off. My body leapt to action without orders. Running, as usual. Running from everything I couldn't face.\n\nI heard the slam of a car door behind me, but I didn't look. I didn't stop. I raced to the end of the street, took a right turn, and kept going. The buildings were all high, I just needed to climb. I knew he was chasing.",
        "There was a drainpipe up a wall in front of me, and I took it, right past a CCTV camera. Fuck it. I was up the first ledge, onto another. Ran to scale the second roof.\n\nOnce up there, there was no hesitation and no thinking. Just running, jumping. Scraping my palms on rough bricks, dropping and feeling the slam in my ankles with a bad landing. Keeping balance across slanted tiles, up to flat roof.\n\nHe was right behind me. Fuck. Higher.\n\nI had to commend his perseverance, but I knew how to lose him. And yet when I came to it, I hesitated. I could make the jump, I knew I could. But David couldn't. He'd fuck it up. He'd follow anyways. He'd try the jump even if it could kill him.\n\nThe simple knowledge that he'd hurt himself if he kept chasing me, made me stop. I lost my momentum at the edge, staring at the escape that became impossible.\n\nI heard him thud down behind me, and turned to face him. He'd caught me. Of course he had. I'd taught him how. He stopped where he was, gasping for breath, watching me across the distance, waiting to see what I'd do. I didn't do anything.\n\nHe stepped forward and I moved away from the edge. Cortisol hadn't worked, so now it was adrenaline's turn.\n\nMy fist smacked across his face. A tooth cut his lip and sliced into my knuckles. He staggered in shock. I was shocked. And then in the timeframe of a split second, he swung back.\n\nI didn't have time to dodge. I moved with it. There was an impact across my cheek and I stumbled a few steps to the side. The pain came moments later. I couldn't stand. I doubt he hit me with all his strength, something harder could have knocked me out. I tumbled to my butt in an ungainly fashion.\n\nI needed a few seconds to recover, clasping at the smarting side of my face, and looked at the stinging cut across my knuckles of the opposite hand.\n\n\"Shit,\" he breathed.\n\nI looked up to his eyes, wide and as startling green as always.\n\n\"I'm so sorry...\"\n\n\"I deserved that,\" I croaked.\n\n\"No...\" He crouched down in front of me. \"I'm sorry, I'm so fucking sorry.\" He gingerly reached out to touch me, but stopped, as if he thought he'd make it worse.\n\n\"It's okay.\"\n\n\"No, it's not. Vi, I'm so sorry.\"\n\n\"Stop fucking apologising.\"\n\nHis worried eyes moved off me as he touched at his lip and looked at the blood on his fingers. I turned my knuckles in the light.\n\n\"You still got all your teeth?\" I asked.\n\n\"Yeah.\" He placed his hand over my own on my face. I moved it and he took over cupping my cheek, gently rubbing it with his thumb.\n\nThe tears started. It was pain, inside and out. I loved him so much. Why did I keep hurting him?\n\nHe sat beside me and I buried my face into his chest, sobbing my heart out, crying like I hadn't done in years. There were so many things pent up. So many stupid things. Things that were my fault, things that weren't. Things I should've done better, things I couldn't change.\n\nI racked with sobs, and he held me while I squeezed my arms around his middle. If he was still feeling any pain from that graze wound, he didn't let me know.\n\nRooves aren't always pleasant. There can be dirt and moss, plastic bags that've blown in the wind, and plenty of bird shit. Yet it also feels hidden and removed from the world. I wouldn't have chosen somewhere else to have that moment. I cried until my eyes stung and my throat hurt. My breathing was a hyperventilating mess, but I gradually calmed it, and sniffed until my sinuses begged me to stop.\n\nI felt... released. Like I'd just let something bad out and gotten rid of it.\n\nDavid's hand stroked my hair. \"I love you, Vi.\"\n\n\"I love you too.\" I sat a little straighter and looked at his face, touching at his lip. My fingers came away bloody. \"I'm really sorry, for doing that.\"\n\n\"It's fine.\"\n\n\"No it's not.\"\n\n\"At least you fought back for once.\"\n\nI frowned, he smirked, then clasped at his lip in some attempt to stop the bleeding.\n\n\"You gotta stop running from everything, Vi.\"\n\n\"I stopped, because I was gonna jump,\" I swallowed and gestured in the general direction, \"over there, and you were gonna follow, because you're stupid, and you'd fuck it up, and you'd hurt yourself.\"\n\n\"Cheers for saving me a broken leg.\"\n\n\"Or worse. I... I really love you.\"\n\n\"So why are you trying to leave me?\"\n\n\"I'm bad for you. I'm bad for your family. I'm just bad.\"\n\n\"No, for fuck sake. You think worse of yourself than anyone else thinks of you.\"\n\n\"Your dad hates me.\"\n\n\"No, he doesn't. He gave me his car keys. He wanted me to come get you.\"\n\nI rested my head against his shoulder, feeling a strange mix of exhausted and freshly energised.\n\n\"We have to talk, Vi.\"\n\n\"About what?\"\n\n\"About everything.\"\n\n\"I don't know what to say.\"\n\n\"You'll figure it out.\" He shifted, pushing me away as he got to his feet. I watched him, but didn't immediately rise. \"We should just go, get away from everything, just for a bit.\"\n\n\"Go where?\"\n\n\"I know somewhere.\"\n\n\"... Okay.\"\n\nI was surprisingly shaky, but got to my feet and found us a way down. After a brief moment of wondering where we'd ended up and figuring out what the street was, we tracked back to the car. We received a few looks from people around - perhaps they'd witnessed our whole little chase, or were wondering why David had a split lip and I was sucking my knuckles.\n\nMore luck, that he'd left the car pulled up on yellow lines and it hadn't been touched yet. We quickly got in, and he drove. I didn't know where to. I kept apologising about his lip, and he kept telling me it was fine. It just took so long to stop bleeding.\n\n\"You've got sharp teeth,\" I said.\n\nHe chuckled, and reached out his left hand to squeeze my thigh.\n\n*\n\nDavid had everything planned out. First, we stopped at a supermarket and picked up some food. Then, he drove out of town, into the countryside.\n\n\"Where are we going?\" I asked.\n\n\"Some woods. Used to go there when I was a kid. You know, like, mountain biking, without any mountains.\"\n\n\"You got a mountain bike?\"\n\n\"Yeah, in the shed. It's a bit small now.\"\n\nI watched fields going past beyond the window. \"Is it okay? To take your dad's car out like this.\"\n\n\"I'd text him, but I kinda lost my phone.\"\n\n\"I, err, I got Tyler's number?\"\n\n\"He kinda lost his phone too.\"\n\n\"Oh. Duh. Oh, wait, I got your dad's number.\"\n\nWe pulled up to wherever the destination was. It was the kind of place full of nature trails, and had a small carpark. I handed my phone over to David, and he thumbed some brief message to Zack, then we picked up the bags and got out.\n\n\"So we're having, like, a picnic?\" I asked.\n\n\"Pretty much.\"\n\nThe first few minutes of the walk were a comfortable silence. I didn't understand what I was supposed to do, or what David wanted. He eventually eased me up with a few well-placed questions. Before I knew it words were pouring out of my mouth. Verbal diarrhoea, that's what it was. It seemed to go in aimless circles, but it must have made some sort of sense to me at the time because I kept talking.\n\nI talked about when I was a child, how I'd always wanted a BMX and never got one. How I once stole a skateboard and broke it after two days - one of the wheels came off then I snapped it in half. Harold scolded me about it... It was with a strange twinge that I realised I had memories of people like Harold from when I was 5 years old, or maybe younger. There'd been so many people who always seemed to be there, and then disappeared. It didn't always mean they were dead, I just had so many faint memories of the ways things kept changing and shifting. My childhood was divided in the chunks of different events. I remembered those events before I remembered what I'd been doing, how I'd felt, or how I'd coped.\n\nI'd grown up having to exist in whatever situation I found myself in. I learnt to run because if I didn't, I'd have to fight. And I'd been taught that fighting was the last resort. If you weren't strong enough to win the fight, you were caught. So many people around me, they'd all known they weren't strong enough, but they kept going regardless, because they were determined to live.\n\nI had some sort of shell, because I'd needed it. I'd spent too much time around certain people, who needed to see me a certain way. The problem is that when you live a lie long enough, you even start to believe it yourself.\n\nThe more we talked, the more we strayed from the marked paths, until we were picking our own way through undergrowth and plantlife. The environment was so calming, the singing birds, the dappled sunlight coming through the canopy of leaves. How did David know to take me somewhere like that?\n\nIt hit me like a brick in the middle of a mostly unrelated sentence. I didn't know who I was.\n\nWear a mask for too long, and you forget what's beneath.\n\nI stopped walking, and David eventually realised my crunching footsteps had ended, looking over his shoulder and raising an eyebrow.\n\nI tried to explain in another jumble of words.\n\nIt almost made me light-headed. How could I not know myself? How much of me was suppressed, how much was a fake bravado? What was conditioned, what was genuine?\n\nI'm almost ashamed to admit that at that point in my life, David understood me better than I did. I guess it could make sense. It's not like I spent all day looking in the mirror. He'd spent enough time observing me to know what was real and what was a cover. He knew what it looked like when I really smiled. How my eyes danced when something got me excited. He saw how I closed up to the bad things.\n\nI argued that I only closed up to protect myself, because that was how to get through things. He said that if something closed me up, it should be removed from my life.\n\nDavid knew who he was. He'd been raised to know, by people who loved him. The way I saw it, his whole upbringing gave him the foundations he needed to go out into the world and be himself. Something everyone should have, and sadly too many didn't.\n\nI couldn't even be jealous. His life was too different to mine, too alien to relate to. My parents loved me, I made sure he knew that. He didn't disagree. I was just the unfortunate by-product of their choices.\n\nWell, yeah. I had been born an accident.\n\nThere was only so much they could do, and I always believed they'd done their best. They'd tried to raise me with good values. The bad things about me, I'd developed those by myself, by clashing with the outside world.\n\nWe came out to an area of the woods that was more open - more space between trunks, and less undergrowth. Another silence descended over us. It wasn't a bad thing. In fact it was annoying when my ringtone broke it. I wasn't aware that I'd ever taken my phone off silent.\n\nI pulled it out of my pocket to check, and wasn't sure what to do.\n\n\"Who is it?\" David asked.\n\n\"Harold.\" I stared at the screen as it vibrated in my hand.\n\n\"Don't answer it.\"\n\n\"It might be important.\"\n\n\"No, it's not. Not right now.\"\n\nIt rang out. \"He'll call again. He'll keep ringing until I answer.\" Another call obediently came through.\n\nDavid took the phone from my hands, turned it off, and slipped it into a back pocket of his jeans. \"It can wait.\" He dropped the bags to the floor.\n\n\"Yeah, but-\"\n\nHe put a hand on my stomach and shoved me against the trunk of a tree. And kissed me. I didn't return it with much fervour, still worried about his split lip and annoyed that my sentence had been cut short. He pulled back and I scowled at him, then finally twigged what he was doing with a sheepish grin.\n\n\"Fuck sake. How it started, huh?\"\n\n\"Yeah, and the weather's better this time.\" He pulled his shirt up and over his head.\n\nI blinked as his beautiful torso came into view. \"Oh, wow. Okay.\" I stroked my hand up his stomach and raked my fingers through the hair on his chest. \"For being a potato in hospital for a week, you still look pretty good.\"\n\nHe smirked. \"A potato?\"\n\n\"Yeah, well-\"\n\nHe closed the slight distance, pinning me against the tree again. The kiss was patient, and gentle, gradually deepening while his hands squeezed my waist.\n\nHis tongue probed my lips and I let him in. I ran my hands up to his neck, down to his jeans, and hooked my fingers in the waistband to give him a tug against me. A very hard cock pressed against my hip.\n\nHis hands ventured higher, lifting my tank top and breaking the kiss. I raised my arms, but he left me to finish removing it while he attacked the clasp of my bra. He cupped my face and brought his mouth back to mine, then his hands stroked down my neck, over my breasts, giving an affectionate squeeze before continuing lower.\n\nHis lips followed, kissing and sucking down my throat, across my clavicle to a shoulder. He dragged his tongue over a nipple and I shuddered, but he kept moving down until he was kneeling, his face level with my stomach. His hot tongue quickly left cold patches against the fresh air. He poked it into my navel, I flinched and giggled. He grinned up at me.\n\n\"You're so beautiful.\"\n\n\"Yeah, you're pretty handsome yourself.\"\n\nHe hooked his fingers in the pockets of my jeans, giving a brash tug so I stumbled forward, landing on his chest with him flat on his back.\n\n\"So here, huh?\" I asked, looking down at his face.\n\nHe pushed me off like it was no effort at all, reached for our discarded clothing, then laid the tops out like a makeshift blanket over the dirt. \"There you are.\"\n\n\"So resourceful.\"\n\nHe hooked his hands under my arms and half lifted, half dragged me, dropping me down. Then he was between my legs, leaning over me, lowering his body against mine. He ground into me, and I pressed back. A flush of heat passed through my nerves, from the fork of my legs, all over.\n\nWe were making out in a tangle of limbs, mouths only parting for brief inhales. He tried to pull back and I bit his lip with a growl, followed by his little pained grunt. I quickly released him.\n\n\"Easy,\" he chuckled.\n\n\"Sorry, I just, I want you.\"\n\n\"Yeah.\" His hand slipped beneath my jeans and stroked through the slick mess in my knickers. My hips lifted, trying to press harder against his fingers.\n\nI needed this. I needed him. We both struggled out of our remaining clothes.\n\nI had always been myself around David. It was something I'd realised early on, when he made me so relaxed in his company. Perhaps in our most raw, intimate moments, was when I'd been in my most honest state. I mean, I'd never faked an orgasm.\n\nHe was doing everything in his power to bring me to another one, burying his face into my pussy, assaulting me with lips and tongue. It was rough, and hungry, but I loved it. He sucked on my clit, and one look down the length of my body with his eyes gazing up at me did it. My hips bucked and I gripped his hair, trembling with each pulse, each wave of pleasure. The moans ripped out of my throat whether I wanted it or not, but I didn't care. We were in the middle of nowhere. I could be as loud as I wanted.\n\nI laid with my eyes closed, panting, basking in the bliss. He shifted, touching his hairy thighs against mine, and stroked his shaft up and over my sensitive clit. I flinched, he smirked. We held eye contact as he pressed at the entrance, and slowly slid inside me.\n\nI always loved that moment, how my body responded when he filled me. Every tingle and twitch, how it could take my breath away. I guess the look on his face mirrored my own. He moaned and gripped my hips.\n\nIt just felt how things were supposed to be. Everything was give and take. We both loved making each other come. \n\nHe fucked me with everything that had built up since our last time. His hands grasped at different places, pulling me against him, holding me down while he drove into me. He kissed my neck, traced my ear with his lips, and exhaled a growl. I shivered, arching my spine to press into him. He was claiming me, reminding me that I was his.\n\nAnd he was mine. I rolled him over with some effort, wrapping my legs around his middle and pushing him aside. He turned onto his back with a smile. I straddled him, and rode him, alternating between fast and slow, gripping his chest, stroking my hands down his stomach.\n\nHis body tensed beneath me. I kept up a steady rhythm to push him over the edge. Maybe he didn't want to finish that fast, but I didn't care. I wanted to hear him, watch him. He held my thighs, holding my gaze.\n\n\"Oh God,\" he breathed. \"Fuck...\"\n\nHe came with a throaty groan, muscles taut and hips bucking to get deeper inside me. Then he released and relaxed, with a goofy grin on his face.\n\n\"Fuck sake, Vi.\"\n\nI smirked. \"What?\"\n\nHe didn't reply, eyes watching his hands as they moved up my body from my thighs. He stroked and squeezed, feeling every inch of me, as though he hadn't taken the time to do so before. I laid myself down across him. His heart pounded through his ribs in a rhythm just a bit slower than my own. He traced my spine with gentle fingers while we stayed in a contented silence.\n\nHis arms wrapped around me and he nuzzled my cheek. \"You hungry?\"\n\n\"Yeah,\" I mumbled. \"A bit.\" I lifted myself, peeling my sweaty skin away from his. It might've been cooler in the shade, but it was still warm weather. We were a bit of a mess.\n\nHe gave me his boxers to clean up, then we raided the bags. There we were, completely naked, sitting on our clothes in the middle of the woods somewhere, pigging out on an abundance of snack food for our dinner.\n\nI was happy.\n\n\"So it had to be here, huh,\" I said as I picked a crumbly dead leaf out of my hair.\n\n\"Well, I thought it was hot,\" he replied through a mouthful.\n\nI chuckled. \"Yeah but I mean, your dad's car has a pretty spacious backseat.\"\n\n\n\"We're not fucking in Dad's car.\"\n\n\"No?\"\n\n\"Just no. When I have my own car we'll fuck in it however much you want, okay?\"\n\nI leant against his shoulder with a grin. \"I love you.\"\n\n\"I love you too.\" He caressed my cheek and his smile faded. \"You've got a bit of a bruise showing up.\"\n\n\"And your bottom lip is sliced in half. Whatever.\"\n\n\"I don't know what to say when we get home.\"\n\n\"We got in a fight?\"\n\n\"Yeah, literally. Mum's gonna be angry with me.\"\n\n\"Tell her I hit you first?\"\n\n\"So she'll be angry at you too, won't stop her being angry with me.\"\n\nI let out a sigh that sounded a bit like one of Wesley's exaggerated ones, then studied David's jeans on the ground, and the little shape of my phone in the back pocket. \"Should I call Harold?\"\n\n\"No, don't talk to any of those people until you've talked with my dad.\"\n\n\"Okay.\"\n\nWe stayed out there until the sunlight breaking the canopy faded, keeping away from everything like David wanted, just for a while.\n\n---"
    ],
    "authorname": "IvoryTusk",
    "tags": [
        "hospital",
        "police",
        "family",
        "drama",
        "arguments",
        "self reflection",
        "making love",
        "outdoors sex"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/hornets-nest-ch-09"
}