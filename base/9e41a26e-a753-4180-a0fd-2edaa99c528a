{
    "title": "The 10 Commandments",
    "pages": [
        "And lo, The Earl went forth unto the Literotica Forums for 40 days and 40 nights. He returned bearing horrific tales of hate-filled voting, anonymous feedback, oompa-loompas and a hand puppet named Mr Flibble...\n\nAnd with him, he brought back 10 commandments on how to survive in the seedy underworld of amateur fiction...\n\nThis mad ramble was inspired by a thread on the Author's Hangout asking about commandments for writers. I can't credit anyone for the idea, as I've forgotten who it was, but you're not having it back. It's mine!\n\nI came up with the deranged idea of writing a self-help guide for Lit writers. I came up with the problem that maybe I didn't have any right to. What the hell do I know? I'm not prolific like Killer Muffin, nor clear and concise like Weird Harold, nor constantly correct like Rumpleforeskin. What do I have to write about?\n\nThen I realised that there were other writers like me, the true amateurs, who get intimidated by the big bad authors. \"How can I ever write like Whispersecret?\" you ask. Bad news, you probably won't be able to. But what you can do is read this and create your own little niche. Be an amateur writer; if I can do it, so can you!\n\n1) It's okay to be bad:\n\nThis doesn't mean that you shouldn't try and improve your writing. If you don't want to improve, then what are you doing in the Writer's Resources? What this commandment means is that you shouldn't worry about not matching the top authors. You look at some of the work by the best authors on this site and think, \"Fuck, I'll never be as good as that.\" The thing is, you don't have to be. Hell, Jeffrey Archer isn't as good as most of the authors on this site. Just write to your standard, no-one else's.\n\nIt doesn't matter if you don't think that you're very good, just give it a go. As soon as one person reads and enjoys your story, then you're officially an author. Sounds good doesn't it?\n\nDon't worry; let go and relax. Just write. You may be pleasantly surprised by the results.\n\n2) Think of a plot\n\nIt doesn't have to be \"Grapes of Wrath\" or \"To Kill a Mockingbird,\" but you must have some reason why your characters are having sex. Sounds difficult? Don't worry it's simple.\n\nThink over your sexual exploits. How did you end up getting horizontal? Okay so maybe it was just a case of feeding him/her alcohol until the beer goggles took effect, but even that's better than some of the stories here.\n\nAdmittedly one of my earlier stories was described as \"giving an idea where XXX movies get their plotlines from,\" but at least the characters were having sex for a reason. The reason may only have been an aphrodisiac, but the key here is making it possible, even if it's not plausible.\n\n3) Put something of yourself into your characters\n\nFind something which you know about, which you've experienced and put it into your story. I am an insomniac, so when I write, sometimes I make my main character an insomniac too. I've written a story with a character masturbating to get to sleep. If you put something real in there, you'll strike a chord with everyone else who's experienced that.\n\nPersonality traits are good too. Someone once sent me feedback congratulating me on one of my stories. She loved it because I'd put in a sequence where the male character tries to avoid answering a question by pretending to be doing something else and avoiding eye-contact. \"My brother does exactly that!\" I myself do exactly that when I want to avoid answering a question and the fact that I put it into a story reached her.\n\nSteal other people's quirks, steal your own and put them into your characters. It'll make them real, as opposed to 2D. Which brings us onto...\n\n4) Thou shalt not use stereotypes\n\nPeople don't like constantly hearing about blondes with 5-ft legs and 32 F bras. Or about virgins who are gagging for it. Or about men who have 14 inch penises. FYI, the longest penis according to the Guinness Book of World Records is 13 inches. If you can beat that, then you're a record breaker. Someone on the board once said, \"If a character's dick is described as 14 inches and thick as a coke can, I don't think \"Mmmm\" I think \"ouch.\"\"\n\nThis doesn't mean only put ugly people into your stories. This is fantasy; you're allowed a bit of artistic license. You should just be very careful about who you do let in. 2D characters are rarely sexy. You can get away with the voluptuous blonde if you make her real. Otherwise she's just a cardboard cutout of a character.\n\n5) Use less/more description\n\nDescription is a tricky thing. I have been slammed in the past for including too little. I find it difficult to wedge it in amongst the story. I have to make a conscious effort to force it in to give the reader some idea what my characters/ my scenes look like.\n\nHowever there are stories on Lit which go over the top: \"She had blonde hair and blue eyes. Her nose was slender and she had a pear shaped face. Her earrings were gold with a blue stone in the middle and caught the light. Her lips were adorned with red lipstick and a little dimple in her chin which appeared when she smiled.\"\n\nNo. Don't do it. Don't make me hurt you. That's not description, that's an instruction manual for a portrait painter. By the second sentence the reader will have fallen asleep. Readers need to know what things look like, but do credit them with a little imagination. Giving them a step-by-step outline gives them no freedom to think.\n\nPicture your character/scene in your mind's eye. What do they look like? Pick out three or four details which are the first things you notice. I once wrote a story in the Buffy the Vampire Slayer universe and needed to describe Dawn. First four details I got were: Mousy brown hair, elfin face, tall, skinny. So I wrote my descriptive paragraph with those details. I could have gone further: small breasts, narrow hips, large eyes, etc, but I don't need to. Those who know what Dawn looks like don't need the description and those who don't can fill in the gaps themselves.\n\n\"She had golden hair, tied back in a ponytail. Her eyes were slanted slightly, giving an exotic tint to her face. She was slender and the short, white tennis dress she was wearing showed off her muscled legs to perfection.\"\n\nWho do you see from that description? I was actually trying to describe Anna Kournikova. It doesn't matter that you didn't see her exactly, you now have a vague idea of who I was trying to show you and your imagination filled in the gaps. I could have described her in a lot more detail, but then you wouldn't have been given any freedom to imagine.\n\nSmall addendum to the description section. Never use measurements unless you have a very good reason. Inches, cup sizes, etc are all no-nos. They restrict the reader's imagination. Plus when was the last time you found a man who can tell women's bra sizes from outside her clothing?\n\n6) Do your research\n\nRead a lot. I'm not talking about cracking open \"War and Peace,\" but it is well worth the effort to read other Lit author's work.\n\nI wrote my first ever Lit story while I was still a virgin (under another nom de plume). No real life sexual experience at all and I wrote a story that racked up a 4.3 average vote (It's still floating around on Lit). It was rated as \"very realistic\" simply because I'd done extensive \"research\" <ahem> on other stories.\n\nAnother reason to read other stories is to nick bits. I'm not talking about extensive plagiarism, but learning from them. If you're not sure how to write a lesbian threesome scene, go see how someone else has done it. If you look hard enough, you should be able to find a lesbian who's written a threesome scene. If you're not a lesbian (or even a woman), then first-hand intelligence like this is invaluable.\n\nThere'll always be someone who knows better than you. Go find them and learn from them.\n\n7) Learn to take advice\n\nI hate taking advice. I really don't like the thought that anyone knows better than me. However the sad fact is that people do, so I've had to learn to live with it.\n\nA lot of the people who know better than you and me are to be found on the Literotica forums. Try going to the Author's Hangout and listen to people such as WildSweetOne, DeliciouslyNaughty, TheBragis, WhisperSecret, KillerMuffin, JonHayworth and RayDario. Hell even I manage to put on something worth reading every now and again. If you have a question, then ask it. They won't bite.\n\nThe Story Discussion Circle is one of the most useful things on Lit. Put up your story and you'll get it critiqued by other authors. Rumpleforeskin hangs round here a lot of the time. Learn to love him; he's annoying almost always correct and ridiculously helpful. You'll also learn a hell of a lot from looking at other people's stories. If you point out other people's mistakes, then you'll be less likely to repeat them in your own stories.\n\n8) Don't worry about grammar\n\nDon't worry, I'm not going to talk to you about grammar. It's deathly dull to those who don't understand it and incredibly easy to those who do. So I'm not going to try and explain it here. There are two reasons why you shouldn't worry about grammar if you don't understand it: 1) If you don't understand how a semi-colon works, why should your readers? 2) Editors are wonderful things.\n\n3 Steps to perfect grammar in your stories:\n<blockquote>1. Go and find another author. Preferably one who knows what they're talking about. Try the Volunteer Editors list or the Author's Hangout.\n\n2. Ask them to edit your story.\n\n3. Enjoy your grammatically corrected story.</blockquote>\nIf you don't know how to do it, then find someone who does. You may have to try a few before you find someone who has the time and the inclination to go over your story, but most will be flattered that you actually want their opinion.\n\n9) Work on your dialogue\n\nDialogue writing is something that everyone can do. It's just a question of writing what you hear and say. If someone talks to you, then you can steal their mannerisms and use them for a character. Steal your own if you want.\n\n\"I am not going to have sex with you. You don't attract me.\"\n\nSimple enough sentence. Now think about your character. In your mind's eye, how would they say that sentence?\n\n\"I aint gonna fuck you sweetheart. You don't get me horny.\"\n\n\"I'm not going to do it with you. You're just not my type.\"\n\n\"Look, I'm sorry. I just don't wanna have sex with you. It's not you, I'm just not into you right now, you know?\"\n\nThink about how your character would put that across. Say it aloud to yourself to see if it sounds right. Although don't do it in public, people will stare.\n\nNever balk on using a swear word. If you think your character would say fuck, then make them say fuck. Don't bottle it and make them say darn, it won't work. If your readers are offended by your story's language, then that's their problem. You're writing erotica, so say fuck if you mean fuck. It's not as though there are children reading.\n\n10) Enjoy yourself\n\nFuck it, go nuts. Who gives a damn about what I think? If you wanna write, write. Have confidence in yourself and don't let anything bring you down. Think of your ego as an airbag, protecting you from harm. Dammit, you are the greatest. Go out there and prove it.\n\nRemember with sufficient balls and bluff you can blag anything. There is no spoon...\n\nThe Earl is a recognised genius of the Lit world. He has been described as \"interesting\" (Rumpleforeskin), \"inventive\" (JonHayworth), \"a...fantastic...lover\" (Whispersecret), \"the best...writer...on Literotica\" (KillerMuffin) and \"a truly great author\" (Steven King). His hobbies include pontificating, being opinionated and misquoting other people. \n\nThanks go to everyone. In general. If I didn't mention your name, it doesn't mean that I don't appreciate you. I'm just forgetful :D. "
    ],
    "authorname": "TheEarl",
    "tags": [
        "put story",
        "people stories",
        "threesome scene",
        "answering question",
        "wrote story",
        "make real",
        "mind eye",
        "lot people",
        "character",
        "author"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/the-10-commandments"
}