{
    "title": "Southern Heritage",
    "pages": [
        "\"Nigger lover!\"\n\nThe sound of my father's voice echoes up out the past to me as I drive past the state line for the first time in forty-three years.\n\nI can still hear my mom crying after the slamming of the door, the loud shattering of glass from the other side of the closed door. I never found out just what was broken in such fury.\n\nFury I caused.\n\nThe miles roll past like the memories. Signpost after signpost. Everyone of them bringing me closer to the home I left.\n\nWas sent from.\n\n<p align=\"center\">***</p>\n\nThe year it began was 1962. I was a fifteen-year-old with dreams of following my family's footsteps and going off to war. My father and uncles had fought in World War II and Korea. My older brother was already part of the US deployment to Vietnam and there I was playing Army with my friends in the woods near the house with our B.B guns, eager to go.\n\nI was such a fool.\n\nIn so many ways.\n\nYou see I had a secret. One I could tell no one.\n\nI was in love.\n\n<p align=\"center\">***</p>\n\n\"Huh. At fifteen what the hell did you know about love? About as much as you knew about war!\" I tell myself as I drive past the green road sign showing me it's forty more miles to the house I was born in.\n\n<p align=\"center\">***</p>\n\nIt was in October when I came to realize it. I had known her for most of my life. She was my nanny. My family's maid. A twenty five-year-old black woman named Maryloo. Maryloo... Post? No Potter! Maryloo Potter.\n\nShe had the most beautiful eyes. Not that a fifteen year old was aware of things like eyes. At that age my own eyes never went that far up her.\n\nIt was in October. We were watching the new TV that Dad had bought, gathered in the \"TV room\" watching as the President told us of the end of the world.\n\nThere were nukes in Cuba!\n\nMy younger brother and two sisters were sent out the room when they started to cry. Hell my sisters were both too young to even know what a nuclear bomb was. They were crying cause my brother started to.\n\nI could understand how they felt though.\n\nI wanted to cry as well.\n\nAfter she got them up to their rooms and occupied with toys or schoolwork I saw Maryloo come back to by the door. Our eyes met as I watched her listening to the TV with us. She was as scared as I was. Hell by itself that made me more scared. Here was the woman I had seen stand down a rabid dog with a stick, catch snakes barehanded and carry them out the yard.\n\nAnd she was afraid.\n\nA desire to go to her and protect her came over me then. I had never felt it's like before in my life. Not like that anyway.\n\nWhenever I had gotten into the scrapes that all boys do it had always been Maryloo who patched me back up. A bit of Mercurochrome, a Band-Aid, a cold Coke Cola and a slice of pie could cure anything this world could throw at me. That and a hug from my nanny. And now here she was. The one with tears at her eyes.\n\nFor some reason I didn't think a slice of pie was what she needed to help her get through this. Maybe a man's strong arms around her to give her some comfort. To make her feel protected. For some reason... maybe the memories of all those patched up scraped knees,... I felt that I should be the one to give her that.\n\n<p align=\"center\">***</p>\n\nAt the time I didn't know why I felt that way. Now looking back I know. Know as well as I know the river under the bridge I'm driving across. It's because that was the day when I put the boy I had been away, and took my first true steps to becoming the man that I am.\n\n<p align=\"center\">***</p>\n\nDad saw her standing there then and sent her to go make coffee. He disapproved of the nigra getting any kind of access to public news. Said it made them uppity. He would say it in front of them like they couldn't understand English.\n\nKind of like the way you would talk around a dog, or a small child. Like they wouldn't understand if you didn't say the words they knew.\n\nHe hated black people...hell the only reason Maryloo worked for us was Moma. She had grown up with a black maid and demanded one when she got married.\n\nLeaving my family to listen to the news being repeated I got up and headed first I the direction of the bathroom then circled around and into the kitchen. I watched her bustling around the room making the coffee. I could tell with maturity beyond my years that she was putting her fear into her work so she didn't have to think of it.\n\n\"Maryloo?\"\n\nShe looked up from filling the coffeepot at the sink, and seeing it's me, smiled.\n\n\"You okay, Willy boy?\" she asked me, her throat tight. Her fear's only outlet.\n\nI crossed to her side. Taking a glass down off the shelf, I held it under the water when she moved the pot out the way. I felt the warmth of her arm against mine. Something I never noticed like this before.\n\n\"Are you alright Maryloo?\" \n\nShe gave me a nod of her head and went to get the coffee from the cabinet. I watched her spooning it into the percolator's basket.\n\nWatching her moving about the simple task with the awareness of a man growing in me second by second, I saw a thousand little things I had never noticed about her come to light then.\n\nFinishing my water, I rinsed out the glass and put it on the towel by the sink. As she plugged in the pot I moved over behind her.\n\nShe turned startled to find me that close.\n\nI was holding her in my arms before she can protest.\n\n\"Willy boy?\"\n\n\"Shu...It's okay,\" I told her as I held her tighter.\n\nI felt things then I hadn't known before. Feelings I had no words for. Not then. Now...I know them to be love. The love of a man for a woman. The desire to keep her safe.\n\nHell at that time I was just surprised to know that I was so much taller than her.\n\nI felt her relax into my arms after a moment for a number of heartbeats. My chin came to rest on the top of her head. Her thick hair a soft wiry pillow to my cheek.\n\nShe gave me a pat on my arm after a bit and I slowly turned her loose. She looked up at my face with a strange look in her eyes. It's then that I noticed just how beautiful her eyes were.\n\nShe gave me a slow smile.\"It'll be alright Willy b...\" she looked me over again. Then shook her head a little. \"William. All that bad news? Ain't gonna amount to nothing.\" She glances over at the coffeepot as it bubbled to a stop. \"Now you go on and get you a piece of that pie over there while I take your Daddy this coffee.\"\n\nI watched her fill a pot and put the cups on the tray. She turned to look at me watching her...gave me a smile and nodded towards the pie.\n\nAs I cut me a slice, it occurred to me that I was not afraid anymore. I chuckle as I thought about the fact I came in here to comfort her and she ended up doing that for me. And with a piece of pie at that.\n\n<p align=\"center\">***</p>\n\nI chuckle at the memory as I take the turn towards the old house.\n\n1965? I was eighteen. Had my draft card in hand. The war in Vietnam had just exploded and they were calling up anyone who wanted to go and some who didn't. I was of the first type. That proves I was still a fool.\n\nAnd I was still in love.\n\nOh, I had never even told her. Kept what I felt for her to myself. Safer that way. Sometimes though I would catch the hint of a smile that led me to believe she knew. Kind of a shared grin every once and awhile.\n\nMy high school years were like any other young white boy in Alabama at that time I guess. I had a steady gal for a while. Can't remember her name now. That ought to tell you about what I felt for her.\n\nThat was also the year my brother Jimmy came home from the war. Under a flag.\n\nIt was also my first battle with my father and his racist feelings towards colored people. Hell, he hated hearing me even use that word. To him they were niggers and always would be.\n\nBut the day of my brother Jimmy's funeral I was in my father's face like a man grown. One who would not back down no matter what came of it. You see my daddy didn't want Maryloo going to the funeral.\n\nBut Maryloo had raised Jimmy, just as much as she had raised me and was just as torn apart by his death as any of our family. I would be damned if even he was going to tell her she couldn't be there!\n\nThe memories of the rifles sound out to me as I drive past the white marble wall of the cemetery. I can still see the trees I stood under that day. I know my brother's marker isn't far from them but I'm past it before I can make it out. I plan on coming back before I leave to put flowers on his grave. And Moma's. Hell even Daddy's I guess, though the old racist son of a bitch doesn't really deserve them.\n\nThere's also another...who I need to place flowers for.\n\nMy tear-filled eyes go to the courthouse building as I drive past it. I can still see the place where I got on the bus to go to boot camp. I can't see the little alcove. I don't have to though. Memories tell me what happened there. Good memories.\n\n<p align=\"center\">***</p>\n\nMy head already near shaved by the family barber I got out the cab next to a small alleyway that goes to no where. I had only a small bag of personals with me. The government was going to see to my needs for the next few years.\n\nI made Momma not come. The loss of Jimmy over there and my going had been too hard on her. Her health had been in decline for the last few months since the funeral.\n\nDaddy had to work. He told me to take care and kill a few of those yellow bastards to avenge Jimmy. He and I haven't really been on good terms since the funeral.\n\nI looked over to the bus stop. The bus wasn't here yet but then I was early. I saw a few others that I knew. Boys I went to school with. I was about to walk over to join them when I heard my name. Looking up the alleyway I saw Maryloo standing by the place where it turned into a dead end.\n\nI glanced around. Not seeing anyone watching me, I walked into the alley and around the corner.\n\nI could tell she'd been crying. She had a smile for me though.\n\n\"You going to be careful over there now, William? You know your Moma can't take another one of them gun funerals.\" I saw her breathe in deep and look down. \"I can't either.\"\n\n\"I'm going to be alright, Maryloo. You'll see. This things going to blow over in no time. Hell we beat Japan and Germany... this ain't nothing but a little pimple of a county. I'll be back home before y'all know I've been gone.\"\n\nShe smiled and held out her hand to me. When I took it, I noticed again the sharp contrast in color between her skin and mine. I wished it wasn't there. I wished it with all my heart.\n\n\"I'm going to be praying to God every night for that very thing, William.\" She looked up at me and blinked away tears. I could see the fear in her. Like those nights years ago when we were so worried about bombs falling out the sky to burn us all to death.\n\nLike then, the need to offer her comfort came to me.\n\nMaybe it's the fact I was going off to a war that's already killed one member of my family. Maybe it was the verbal battles I've been in with my father lately. Maybe it was the years of love I'd felt for this woman but never been able to express them. I don't know for sure even now just what it was that gave me that moment of courage.\n\nI pulled her into me even as I stepped forward. I saw the started look in her eyes for only a second then she was tight in my arms.\n\nAnd my lips were pressed into hers.\n\nShe felt like a startled bird in my arms for a second,first afraid to move, then trying to flutter away. But slowly, ever so very slowly, I began to feel her kissing me back.\n\n<p align=\"center\">***</p>\n\nHow long I kissed her for I don't know. Memory tells me it was a very long time but those kinds of memories can't be trusted at my age.\n\n<p align=\"center\">***</p>\n\nI think it was the sound of the bus' brakes that broke the kiss. As I slowly leaned back away from her, I saw her eyes open, then look around us in terror. After a second when she saw there isn't anyone who could have seen us she looked back to my face. Her eyes softened, that slow smile came back and I saw her start to softly chuckle.\n\n\"You a fool. Gonna get us both in trouble,\" she told me, smiling. \"You know you can't go kissing on no colored woman in this state.\"\n\nI smiled and nodded. Before she could stop me, I leaned in and kissed her again. Her lips parted this time and I breathed in her breath as I kiss her. I felt her push against my chest after a few seconds. Our lips slowly parted.\n\n\"Now stop that for we get caught.\" She shook her head, looking up at me. \"Your bus is here, William,\" she reminded me.\n\nI nodded and with a lot of reluctance turned her lose. She looked at me for a second, then she was back in my arms, pressed hard against my chest.\n\n\"Don't you damn well get your fool self killed over there. You hear me, my Willy boy? Don't you damn well die on me.\"\n\nI held her to me as she cried herself out. Then with my own eyes not dry, I left her standing there in that alleyway and walked to my bus.\n\nOne of the guys I went to school with must have seen me leave the alley and made a joke about me getting a last minute piece of pussy. He doesn't know how I wish he was right.\n\n<p align=\"center\">***</p>\n\nAs I turn the car down the long parkway, my mind shies away from the memories of the war. The things I did and that were done to me. I have enough nights waking up to those evil memories. I don't need to consciously relive them. Though I'll never forget even a single second.\n\nInstead I think of the cab ride from the airport. \n\n<p align=\"center\">***</p>\n\nIt was 1968 and the last leaves were falling all red and golden. I felt lost and had come full circle all at the same time.\n\nMy uniform hung loose on me. I had lost a lot of weight in the two months I was hospitalized after the battle of Khe Sanh. but I looked at the little purple ribbon on my chest. It sat with the other one, showing my bravery at a battle I can barely remember. I just remember the mortar and the rockets falling like rain for days on end, then I was waking up in an army hospital with people telling me it was almost a month later.\n\nI used my cane to get out the cab while the driver held open the door for me. I smiled and thanked him.\n\n\"No... thank you.\"\n\nI nodded. It was a much better feeling than the one that I gotten when I flew into California. The people there. The signs. \n\nI shook away the memories and walked with a heavy limp towards the front door of the house.\n\nIt opened before I could get to it and I was nearly bowled over by the love of my family. My younger sisters all but tackled me, my Momma hearty hugged me to death. Dad about broke my hand.\n\nMaryloo?\n\nIt was the tears in those beautiful dark eyes and her smiling face that told me I was home.\n\nI saw my younger brother, Tommy, take my duffel from the cab driver. I could see the same desire to go fight in his eyes when he looked at me in my uniform. I knew I didn't have it anymore.\n\nI stretched out my leg and eased into the dining room chair. They tried to guide me to the TV room but I knew that soft chairs and couches would be beyond me at that moment.\n\nRunning my hand across my leg I caught my dad's eyes. He was rubbing at his left arm with the same half-aware gesture, then he noticed what I was doing.\n\n\"Its bad over there ain't it?\" he asked, pulling up the seat at the end of the table.\n\nI gave a slow nod.\n\n\"We been watching the news. Looks like a whole different type of war from what I fought. Y'all seem to be doing a lot of hunting through those jungles.\"\n\n\"Yea.\"\n\nI looked down and noticed I was spinning the salt shaker in my hands. I made myself stop.\n\nI could tell dad wanted to sit and swap war stories but for me the war is not something I did twenty years ago it was what I was doing just the other day.\n\n\"Yea seen all them flower painted fools? Those long-haired faggots with their signs. Government ought to round up every one of those hippie traitors. Lock them all up for the duration. That's what we did for them Jap spies we had here back in my war. Put them flower kissers in a camp somewhere out in the desert till this thing blows over.\" \n\nI looked up and smiled when Maryloo brought me a glass of ice tea.\n\n\"This one isn't going to blow over, Dad. Hell, if anything, it's just reaching a point where it's beginning to drag out more.\" I wet my mouth with a sip of the tea. I knew this was going to be a long argument. I could feel the first signs of it already.\n\n\"Well, that's a load of crap! All you boys need to do is get a little more initiative going over there! Like we did back in the big one.\" He thumped the table with a fist. \"Hell, if you would just go out and shoot all those black pajama wearing rice eaters this thing would be over in no time.\"\n\nI took a deep breath.\n\n\"Dad, this isn't your war. It's nothing like it. There are no front lines\" I shook my head. I took a sip of the tea, then tried to explain. \"We followed a group of VC for three days through thick as hell jungle. We had to stop maybe every hundred and twenty feet to clear sharpened bamboo stakes out of our way. Every mile or so, one of those 'rice eaters' will jump up out of a grass-covered hole and unload a full clip of AK right in the middle of us. Sometimes they will kill or wound five of us to every one of them. Oh, we blow that one to hell sure enough. But then we have to tend to our wounded, call in a hog chopper to fly them out. By the time we get back on their trail they have more than likely gone into a village. They just take off their uniforms, hide their guns and they blend right in. Of course they do. Half of them are probably from that village. Now before we can enter that village we have to call back to headquarters and have them call and see if the village is a fire zone. If it's not we can't do shit unless we are fired on.\"\n\n\"Well, that's stupid!\"\n\n\"Oh yeah. Well, let's say they can't find a village to hide in. Then they make for the Cambodia border. They cross that and we can't follow without orders from on high. Even when we get that miracle of miracles it doesn't help. They go a few more dozen miles north and they are in Laos. Were we can't go no matter what. Half the people over there who are supposed to be our allies are really working for both sides. Taking money from both sides, while they smile in the faces of both.\"\n\n\"Well, you need to shoot all them fuckers then! That's what I'm talking about. Initiative! You boys over there know who those assholes are. Just take them off in the deep woods and don't bring them back.\"\n\n\"When we do that the press is all over it within days. I know you have seen those kinds of news reports.\"\n\nDad slowly nodded.\n\n\"Yea. Bunch of milksops! Reporting everything you boys are doing over there like it's never been done before. Damn, it this is a war! You can't kill the enemy politely.\"\n\n\"Dad, half the time we never even see the enemy. Other than the flashes of their guns from the cover of the jungle.\"\n\n\"Well, you need to...\"\n\nThe argument went on well into the night. My little brother sat big eyed, drawn to every word. Dad began to get mad with me that I didn't agree with him on how the President should just nuke those commies back into the Stone Age.\n\n\"It worked for Japan! Look at them slant-eyed bastards now. They fall over themselves to help us.\"\n\nMomma moved into the room and put her hand on his shoulder.\n\n\"Daddy, let him be. Can't you see your son's about to fall asleep where he's sitting.\"\n\nMy dad looked at me and after a second blew a loud harrumph out his nose. He got up and left the dining room to go eat dinner in front of the TV.\n\nMaryloo placed a plate of food plus a bowl with large portion of peach cobbler next to it in front of me.\n\n\"We need to be getting some weight back on him,\" she told my Momma.\n\nMy mother nodded and headed into the TV room to eat with dad. I soon heard Mike Wallace reporting on the Apollo program.",
        "\"Waste of good money I tell ya!\" I heard Dad call out from the other room.\n\nI felt almost to tired to eat but the food was so good I was soon eating with an energy I didn't know I had. I looked up to see Maryloo's dark eyes on me. I gave her a tired smile.\n\n\"Told you I would make it back. Almost in one piece.\"\n\nI saw tears start at her eyes. She dabbed at them with her apron then nodded.\n\n\"My Willy boy,\" she said in a low voice. \"I've done been so worried about you.\"\n\nI looked towards the door, and hearing dad talking to mom in the next room I held out my hand to her. She took the few steps after a second and took my hand. I felt the strength of her fingers as they tightened around mine.\n\nI gestured for her to come closer.\n\nShe looked towards the door and shook her head.\n\nI pulled her hand towards me. Glancing at the doorway fearfully, she slowly moved over next to me. I noticed she wouldn't lean down.\n\nI looked up into her dark eyes.\n\n\"I love you.\"\n\nMy words were soft. They carried no more than the few feet between us. \n\n\"Remembering how you said goodbye to me... kept me going over there,\" I told her softly.\n\nI saw her look up towards the door then back down at me. She slowly smiled. Her eyes fluttered away tears.\n\n\"I love you too, Willy boy,\" she said in a soft whisper. She looked up, then I saw her bend down in a rush.\n\nHer lips touched mine for only a second but in that second I felt heaven open around me. I wanted to pull her down next to me. To taste her lips for long hours. To taste the rest of her in a thousand slow kisses.\n\n\"You finish your supper now, Willy boy,\" she said out loud. She patted my hand and walked away from me towards the kitchen. She stopped, looked back after a second. When our eyes catch and hold the others I watched her take a step to move back to me.\n\n\"Maryloo, put on some coffee!\" \n\nI hated the sound of my father's voice at that moment. It takes her away from me.\n\n<p align=\"center\">***</p>\n\nI start to laugh as a nearly lost memory comes floating back up to me as I pass a sign for a small restaurant. The sign says 'Best Fried Chicken in the South'. I'm chuckling thinking about my old friend for the next few miles.\n\n<p align=\"center\">***</p>\n\n\"But why can't you just invite your friend here for dinner?\" asked Momma. \"I don't understand why you are meeting him in town for a meal at a restaurant.\"\n\nMy limp was a bit less as I put on nice civilian clothes for the first time in a long time. They felt strange. They actually fit better than my uniform did though. I wasn't as big in the chest when I left for basic.\n\n\"I just can't, Momma. I'll explain it later. Now love you, got to go.\"\n\n\"But William...?\"\n\nThe old car ran kind of rough. It hadn't had my hands at it in a few years. I drove into town enjoying the feeling of going to go do something just because I wanted to. It had been a long time. I knew it was a fleeting feeling.\n\nI was due back in twenty days. My medical leave could have been spent in Hawaii but I had a reason for coming back here. Well, a couple of them. Maryloo was the biggest of them of course.\n\nCurtis Jackson was the other.\n\nI pulled my car into the parking lot across the street and using my cane as little as I could, I crossed to the brick building. I could smell the food cooking.\n\nWhen I stepped inside, the eyes that were on me were enough to set the hair on the back of my neck on end. That feeling of danger I picked up in my first days in Nam settled around me. My hands slid to where my gun's safety would be if I was carrying it.\n\n\"Willy!\"\n\nI looked towards the sound of my name and saw Curtis sitting at a small round table. His black wood cane sat on the red checkerboard tablecloth. I hobble over to him and he gets up with equal effort.\n\nIt must have been a rare sight in this place a white and black man hugging each other.\n\nI can't say either of us cared. It was several long breaths before either of us even thought of turning loose. \n\nHe grinned at me, that familiar smile that always told me the fun was about to start was now comforting.\n\nI pointed with a tilt of my head to the faded sign nearby that said 'Colored only.'\n\nCurtis chuckled.\n\n\"I talked to the owner. He says if a white boy's willing to eat in here, he sure enough is willing to serve him.\"\n\nA young colored girl came to the table after we sat down. Curtis ordered for us both.\n\n\"Darlin, would you get us two big old glasses of sweet tea. Then you just keep chicken and biscuit coming here to this table till we get full. Shouldn't take more than ten, twelve hours.\" Curtis watched her walk away. \"Thank Lordy my boy, I'm back home. Those little gook girls sure could suck a cock but not a one of them got an ass like brown sugar there.\"\n\nI chuckled. He hadn't changed a bit in the six months since I saw him last. That memory tried to surface but I drove it back into the past where it belonged.\n\nThe girl brought us our tea and after a minute a huge basket of biscuits and a platter full of fried chicken.\n\n\"Curtis, how the hell have you been?\" I asked after finishing my first big bite.\n\n\"Willy boy, I've been so deep in pussy my black ass hasn't seen the light of day in months.\" He looked up at me and I saw a sly smile cross his face. \"How about you? You learned if you prefer chocolate to vanilla yet?\"\n\nI grinned back at him... then slowly shook my head.\n\n\"You letting way too much time pass you by. You already said that she's older than you. If you don't get after that thing soon she's gonna find her someone who will. How long you got left back here?\"\n\n\"Twenty days. Well really about seventeen then I got to go get my plane back.\" I picked out my second piece of chicken and grabbed a biscuit that dripped butter. My eyes went to his cane hanging now on the back of the spare chair. \"How about you? How you coping?\"\n\nCurtis sat back and grinned.\n\n\"I'm home. I'm home with no chance of going back to that hell.\" He took a biscuit and dipped it into the gray bowl. \"Rest of my life's gonna go down as easy as this.\" He took a large bit. Gravy dripped off his chin.\n\n\"And the leg?\" I asked not looking up for a second.\n\n\"So I fucking limp.\" He shrugged. \"I'm better than Franky.\"\n\nI picked up my tea and nodded at the truth of that. I took a small sip then I slowly took a deep breath, determined to get out what has needed to have been said for half a year.\n\n\"I don't really know how to... I want to thank...\"\n\n\"Hush your head. You don't have no need to be thanking me. I need to be thanking you Willy boy. Them gooks would have done me for sure had you left me.\"\n\n\"Curtis, I'm alive because of you.\" I tried to explain what I felt.\n\n\"You still a dumb white fucker though.\"\n\nI chuckled and then we were both laughing loud enough to attract a lot of attention. Curtis waved them off.\n\nI grew silent.\n\n\"Curtis. I don't know how to deal with the world back here now. I mean...\" I looked up at him It was hard to keep the tears out my eyes. \"Curt, I think of you as my brother. I would have walked into fire for you and would do it again in a heartbeat. I'd give my life for you without a thought, and yet I couldn't invite you to my house for dinner. That's so fucked up.\"\n\nHe takes a big sigh.\n\n\"Nobody ever promised the world wasn't fucked up, Willy. The only promise you got when you breathed your first breath was that one day you would breathe your last. Till that day all you got to do is one thing.\"\n\nI smiled at him knowing what he was about to say. We said it together, grinning.\n\n\"Keep your dick wet.\" \n\nI laughed with my brother and went back to eating.\n\n<p align=\"center\">***</p>\n\nA single tear rolls unnoticed down my cheek as the memory of Curtis flashes past. Dead ten years... no, more than that. Damn, closer to fifteen.\n\nI turn the car up the last road and see the old house. It sits amid a cluster of newer homes. The old family property was sold off to developers. I look to my left and see the old oak tree is still standing down on what was our bottom field.\n\nMy god, the memories under that tree.\n\n<p align=\"center\">***</p>\n\nSixteen days went by in a flash. I spent most of it trying to sneak a hidden kiss from the woman I loved. No real luck there. The looks she gave me at times told me that the chance would come before I left though.\n\nMy limp had begun to fade till it only appeared towards the end of the day.\n\nI was standing in front of the sink finishing a second piece of pecan pie when Maryloo walked into the kitchen carrying the dinner dishes. She smiled to see me.\n\n\"You looking a lot better my Willy boy. A lot better.\"\n\nI let the empty plate and fork slip into the sink and walked past her towards the TV room. I turned my head just as I passed her. I felt her hip against my leg, her hand brushed mine.\n\n\"Come back and meet me down by the big oak. Tonight,\" I said in a whisper.\n\nI saw her eyes go towards the door, then I saw her smile slowly \"You going to get us in so much trouble,\" she said.\n\nI shrugged and went to sit and watch the news. Things back in the Nam didn't sound good at all.\n\nWhen everything was finished for the night Maryloo came into the TV room with her coat and purse on her arm. \"I'm heading home now Missus,\" she says softly to my mother.\n\nMom gave her hand a pat. \"You be careful on the way home now Maryloo.\" Mom turned back to the news.\n\nI watched the woman I loved leave without another word spoken to her. Her eyes caught mine for a second and I saw a slight nod to tell me she would meet me. Knowing she would soon be standing down there in the dark waiting for me to come to her lent haste to me. I soon complained that my leg was hurting and headed up to bed.\n\nIn about an hour, I heard the TV turn off and everyone head to bed.\n\nAs the last sound grew quiet in the house, I eased out the bed and walked down the hall. My cane made a tap I couldn't hide but the sounds of dad snoring gave me comfort. I paused at the bathroom, then headed down to the kitchen. I ran a glass full of water at the sink and sipped it, listening to the house.\n\nThe silence was broken only by the distant sounds of dad's sonorous breathing. \n\nI noticed my hand was shaking as I went to sit the glass by the sink. I smiled at that. I'd been under fire and dead calm, and here the idea of getting to spend a bit of unwatched time with Maryloo had me shaking.\n\nThe back door opened with a squeak. I flinched and slowly eased it shut. The door closed without its customary slap.\n\nThe grass was high as I walked beyond the edges of the yard and into the fields. For a moment I felt a growing sense of unease, then realized it was because I was walking in the open under a bright moon.\n\n\"It's alright Willy,\" I said to myself softly as the tall grass brushed my pants. \"No one here to shoot at you.\" That knowledge didn't help. I was trembling by the time I got to the other side of the field.\n\nMy heart nearly stopped when a shadow moved by the big tree. I caught myself before I could dive to the ground and I made my breathing slow down. I took a deep breath and walked over to join the woman I loved.\n\nHer lips came to meet mine without a word spoken between us. I wrapped her into my arms and felt her soft breasts push against my chest.\n\nMy hands moved from the ample curves of her hips up her back and I pulled her closer into me. Her lips left mine then and I felt her breathe warm by the side of my neck.\n\n\"Oh my god, Willy boy. Oh my god, I love you!\"\n\nI breathed in the scent of her as I pressed the side of my face into her hair. Her body shook for a second. I held her tighter as I felt her start to cry.\n\n\"Shush now... Hush now... it's okay. I love you just as much.\"\n\nShe gave a laugh that was half tears.\n\n\"I know you do. That's not why I'm crying. You're going back to that foul place. I can see what it's already done to you!\"\n\nMy lips found hers in the dark and I tasted the salt of her tears as I kissed her with a fierce passion.\n\nI tasted her breath as she gasped when my hand found her breast. It sat soft and warm in my hand. I gave it a gentle squeeze, feeling the hardening point through her bra and shirt.\n\nHer fingers dug into my hair, pulling me into her harder! I ran my hand down her side then back up to where it was but under her shirt. The soft cotton of her bra under my fingers was warmth I thought I would never get to feel. I found the hard tip of her nipple and tightened my fingers on it slightly.\n\nShe moaned into my mouth as we kissed.\n\nI hesitantly let my tongue pass between my parted lips. Her's was there to greet it as her fingers dug into the back of my shirt.\n\nThen she stopped. She pulled back from my mouth till the kiss was broken.\n\n\"Willy Boy?\" I heard her take a deep breath. \"I want to give you a better memory to take back with you this time. If me kissing you kept you going before I want you to have a better.... a better memory.\"\n\nHer arms turned me lose and I opened my arms as she stepped back.\n\nAs I watched her in the dim moonlight, my heart beating at a furious rhythm she slowly began to unbutton her shirt. As it opened, the white cotton stood out against her dark skin brilliantly. She turned and placed her shirt by the trunk of the tree. Then I made out her arms going behind her back.\n\nThe white bra slipped away and down to join the shirt.\n\nI cursed the lack of light that hid the beauty of her dark skin from me, but then she was back in my arms and the soft warm bare skin under my fingers more than made up for the loss.\n\n\"Oh my god, Maryloo.\"\n\nI ran my hands across her bare back reveling in the contact. She moaned and pressed her body harder up against mine. In that second, I wanted more. The contact of my hands wasn't enough. I brought my hands back around and started undoing my buttons with frantic haste. Soon my shirt had fallen, forgotten to the ground by my feet.\n\nOur skin came together with a feeling that was indescribable. I pulled her into my chest, kissing the side of her neck, the tender place just under her ear. Then I followed the vein that throbbed under my lips.\n\nHer arms wrapped around my head tight as I sucked a nipple into my mouth. My face pressed into the heavy scented warmth of her breast. I felt the hard nub tighten as I sucked and licked around it. I tested it gently with my teeth and I groaned as I feel her fingernails claw at the back of my neck and shoulder.\n\n\"Oh Willy...Oh yes.\"\n\nMy hands caressed the small of her back, feeling the gentle curve out and down. I followed it and her soft ass cheek was soon filling my hand. My other hand joined it and I gave her a little lift.\n\nMy knee buckled under me and with a gasp we tumbled into the tall grass.\n\nAfter a second I heard her start to chuckle. I couldn't help but join her. I lay back and she moved a bit till she was laying on top of me her legs on either side of one of my legs.\n\n\"That was a fool thing to try, you could have hurt yourself,\" she told me, her lips just above mine. \"Oh, my Willy Boy, you are going to be forever getting scrapes for me to have to patch up.\"\n\nI laughed and pulled her down to me. Her lips joined mine and then she was moving herself on my chest. Her breasts slid across my skin and back, the nipples running through the hairs.\n\nI ran a hand back down her side and catch the side of her skirt. It easily slid up her leg. My hand slipped under it and I felt the thin cotton of her panties move under my fingers. I moved my hand till the fingers slid under the edge and gave her bare ass a tight squeeze. I felt her lips smile against mine.\n\n\"You like my ass? I've caught you looking at it so many times over the years. You got a hand full of it now... so what you think?\" she asked me teasingly.\n\n\"I think it's wonderful.\" I tightened my fingers. \"I love every part of you.\"\n\n\"So I can tell.\" \n\nI caught my breath as I felt her hand come to rest on top of me. Her fingers ran across the bulge.\n\n\"It's been a lot of years since I last gave you a bath and saw this thing. I can see it's gotten a lot bigger since then,\" she said with a giggle. I felt her hand move till she had the zipper between her fingers. I shifted a bit as she slid it down. Freeing up a hand, I reached down and undid the snap\n\nHer hand was wrapped around me in a second.\n\n\"What happen to your underwear?\" she asked me, laughing. \"Did you forget to put it on?\"\n\n\"Got use to not wearing it over there. It rains so damn much there the whole place is just a wet mess. You go wading down a creek and then you're soaked for the rest of the day. By night fall you're chaffed to the bone. That and the blessed leeches! The last thing you want is a place for some of them to get caught.\"\n\nI looked up at her face as she sat up off me a bit. I felt her other hand come around to my chest and her fingers run through the hairs, across the muscles. Her hand caressed me up the side of my neck, then across the beginnings of stubble on my chin.\n\nHer fingers tightened around me!\n\n\"My little Willy boys so grown up. I think it's time I done something I wanted to do to you before you ever left here.\"\n\nAs I watched her sit up and then she was moving aside her skirt. I felt the warmth of her thighs on either side of my hips. Her fingers still held onto me firmly though. Then I felt the tip of myself brushing soft cotton. Her fingers turned me loose for just a few seconds.\n\nThen the cotton was gone.\n\nI moaned as I felt a warm, tight, wet feeling slowly engulfing me from the tip all the way down. Her weight came to rest against me.\n\nI looked up as I heard a gasp from her.\n\n\"Oh yea...much bigger!\" \n\nI was about to chuckle, then it became a gasp as I felt her hips start to move against me.\n\nI ran my hands up the sides of her bare thighs, pushing the skirt higher out the way. She leaned down onto my chest and I felt the heavy weight of her breast come to rest against me. The hard points of her nipples brushed teasingly around my own.\n\nA soft whimper came from her when I bucked upwards into her. Then a breathy gasp when I did it again.\n\n\"Oh my god yes. Oh just like that.\" \n\nMy arms came up and pulled her tight against me as I began to pump up into her. I kept one hand at the middle of her back then let the other go back to her hip. I slid around and back under her panties to the warm plump softness of her ass cheek; I clutched her to me and listened to the sounds of passion rising with her.\n\n\"Oh my, Willy boy... oh my. Oh yes.\" \n\nHer arms encircled my head again and I listened with a growing sense of pride to her panting breath as she started to rock against me even harder.\n\n\"Are you going to cum for me, Maryloo?\" I asked in a whisper up to her. My own breath was a soft pant. I felt a slight twinge of pain from my leg but I ignored it, as the pleasure of her against me was too incredible to stop.\n\n\"Oh yes...,\" she said in a soft breath by my ear. I heard a building moan start in her, then it slowly rose and rose. Just as it could peek I felt one of her hands leave my neck and go up to cover her mouth. I smiled as I heard the muffled moan from my wonderful lover. Her other hand dug into my shoulder and the nails bit into the skin.\n\nI feel a surge of pleasure start to grow in me then. I tried to fight it but her grinding herself against me made it build to quickly.\n\n\"Damn it,\" I said in a soft whisper.\n\nI saw her eyes pop open and focus on my face.\n\n\"What's the matter? Is your leg hurting?\" she asked me in concern.\n\nI chuckled a bit.\n\n\"No...I'm about to cum. I wanted this to go on forever.\"\n\nMaryloo giggled on top of me. Her lips came down to mine and she placed a soft kiss on my lips.\n\nShe stopped moving.\n\n\"Willy... I can't let you cum in me. You get me pregnant and I give birth to a white baby...\"\n\nI could hear a tinge of fear come into her words. She went to move off of me but I caught her. My strong arms pulled her back down against my chest. I hugged her too me as I lifted her just enough to let me slip out.",
        "\"I understand,\" I whispered into her ear as I placed feathery kisses on her neck.\n\nHer hand closed around me again and I moaned as she started to pump the wet length of me.\n\n\"I want you to cum for me though, my Willy boy. I want to hear it. I want to see your beautiful face as you cum for me.\" \n\nI clutched her to me as her soft hand ran the length of me in a tight embrace. I lowered my head a bit and kissed at the softer skin of her breast. She lifted up and I found the nipple. I tasted her skin in my mouth then I was moaning around her as I felt the almost painful surge up me.\n\nMaryloo's fingers tightened and loosened around me as I came in her hand. She stroked the whole of me and I felt the wet release running down from off her fingers onto my lower stomach.\n\nAs I tried to catch my breath, I felt her slowly lower herself against me. She lay herself fully down next to me and I moved my arm as she tucked in up against the side of me. Her head pillowed into the crook of my arm.\n\nStill panting a bit, I turned just enough to bury my face into the soft sponge like hair. I placed soft kisses into it.\n\n\"I love you so much,\" I said in a soft whisper.\n\nI felt her start to cry against the side of my neck.\n\n\"I love you too, my Willy boy.\" I heard her say through her tears.\n\nI tried to give her comfort but I knew that no words of mine at that time would do it. The world was what it was. It would never accept us or our love.\n\nAnd it was time for me to leave.\n\n<p align=\"center\">***</p>\n\nThe last years of the war were not as harrowing for me as the first years had been. The slight limp didn't really go completely away. They kept me to the back for the first six months or so then I seemed to spend a lot of time in base camp. The older officers knew that someone who had been in for as long as I had was a gold mine to the morale of the new guys coming in.\n\nAnd then there were no new guys coming in. It seemed like I turned around twice and people I had known for years were being rotated back home.\n\nIt was 1970 when my papers came in.\n\nAs I pulled the car into the driveway of the old house I saw faces at some of the windows. Faces that had the family look to them but that I didn't know.\n\n1970.... that was a year I'll never forget.\n\nI don't know if I've dried out completely even now.\n\n<p align=\"center\">***</p>\n\nAs I walked down off the plane, I looked up at the blue sky with wonder. It had been weeks since I'd seen it.\n\nI looked around and then smiled when I saw my sisters Jenny and Cora running across the tarmac towards me. I dropped my duffel and scooped both of them up and into my arms. Their arms were tight around me as we all three both laughed and cry. I felt kisses all over my neck and ears. I gave them both a shake, then set them down. I laughed when they wouldn't turn me loose.\n\nI looked around for my brother Tommy but then remembered Momma said he was off to boot camp. I smiled when I saw her coming towards me. I finally convinced the girls to turn me loose enough so I could hug mom.\n\n\"Oh thank God you're home!\" she said, crying against the side of my cheek.\n\nThe familiar scent of my mom's perfume and the loving warmth of my family filled me to the very edge of my heart. There was only a single place that was not filled.\n\nI looked around for her, but she was not there. My father again no doubt. Mom had said in her last letter to me that dad had been getting if anything more and more racial as the growing news across the country infuriated him.\n\nThen a man moved and I saw her!\n\nMaryloo started forward towards me in a slow walk, that became a quick walk, then a run.\n\nI turned my mom and sisters loose just in time to catch her in my arms. It took all the will I had to turn my head so that our mouths didn't connect in a full on kiss. I heard whispering by my ear as I kissed the side of her cheek and hugged her tight to me.\n\n\"Oh, my beautiful man. Oh, thank you for coming back to me. Oh, I love you so much...\"\n\nHer soft words heard only by me filled that last void in my heart.\n\nAs I slowly and reluctantly turned her loose, I was again engulfed by my sisters.\n\nI chuckled as the five of us tried to move out the way of other family greetings going on around us. The ride home was a constant question-filled time that has passed from my memory with the passage of the years. All I remember was the look in those beautiful eyes when I turned and looked into the back seat. She and I shared a smile that the others didn't see.\n\nDad came forward to shake my hand from the front porch. I noticed he had a black leather-covered bible in his left hand. In the hours that followed, I began to wonder if he'd had some sort of accident with glue and no one wanted to talk about it. He only put it down for dinner and even then his hand went to it every few moments.\n\nI was talking to Cora about the rain that brought a halt to all the fighting in Vietnam and helped me to leave early so that I got here in time for Thanksgiving. Looking past her I could see Momma and Maryloo both at work in the kitchen. I could smell the sourdough bread starter already at work when I entered the house.\n\n\"First time I've ever heard of a war halted by a little rain,\" my father says dismissively. He lifted his left hand and pointed the black book at me. \"You mark my word, those damn slant-eyed bastards y'all been pussyfooting around with over there didn't let a little rain stop them. Your brother will have his hands full trying to wrap up that mess y'all have made of this war.\"\n\nI swallowed down the words that came rising up like bile. I had no wish to argue with my father about that damn war. The images of it were still just right behind my eyes. I had only to close them to see it as clear as day.\n\n\"Just another sign it's the end of days!\" he said giving the bible in his hand a shake at me. \"This sick worlds falling faster and faster into the hands of the Devil himself!\"\n\nI looked over at Cora and lifted an eyebrow while dad took a sip of his tea. She kind of rolled her eyes back.\n\n\"Look at the mess things have fallen into! All those drug smoking hippies and sign toting faggots have made a mockery of this great country. That's what! It all started with those Nigger preachers. Them getting up and talking like they had a right to speak the word of God before white people. I thought it would settle down once that one got shot up in Memphis but then this Jesse Jackson got his black ass going. Someone need to do to him what they did to that other one! You mark my word, his day's coming. Every ones day's coming.\" He gave the bible in his hand a good shake again. \"The hand of Lucifer himself is upon them all and their moment to burn is already given.\"\n\nI pushed my chair back and without a word to him took my plate into the kitchen. I shook my head at the look Maryloo gave me as I walked past her and placed the plate into the sink.\n\nShe was worried about what I would say.\n\nShe shouldn't have been. I had no wish to talk to my father at all.\n\nWalking out the back door, I went to the old shed out back and unhooked the door. Field dust had settle in a thick gray coat over the top of the old car. My older brother Jimmy driven it till his death, then it had been mine for two years, then sat there pretty much ever since. I was kind of surprised. I had figured Tommy would have taken it out.\n\nOpening the door, I reach down and pop the hood. I needed to see about charging up the battery. Was gonna need this old car soon.\n\nWhen I opened up the hood I saw the letter. My name was written on the outside of the envelope.\n\nWhat it said chilled me to the core.\n\n\"William. The last time you were home I watched you in the middle of the night sneak out the house. I followed you and saw what you did. How could you? I cannot begin to express the level of disgust I feel for you now. I've kept my knowledge to myself but I swear if I ever see even a hint that you are still doing what you did that night I will go to our father and tell him just what he has for a son. I left this here because I know you will come here to get Jimmy's car running again. I truly wish you had never driven it. I would have liked to have had it to remember my only real brother by but after you've touched it I want nothing to do with it.\n\nTommy.\"\n\n<p align=\"center\">***</p>\n\nMy brother's bitter words come back to tear at me again. The four decades plus since I first read them...they feel like nothing. I can see those words in my brother's scribbly hand like they're still in front of me.\n\nA single tear rolls down my face as I see the front door opening.\n\nThat front door... the one that was slammed in my face.\n\n<p align=\"center\">***</p>\n\nI awakened to the smell of pumpkin pie and a mixture of a dozen other scents that set my mouth to watering. Sitting up, I rubbed at the mass of scar tissue that sat just under my left knee. The ache hadn't left it since the rains had started in October back in the Nam. The slight chill to the November morning just added to it.\n\nThe kitchen was a bustle with women that morning! My Mom, Maryloo, Cora, and Jenny were all in a flurry of motion. I saw a monster of a turkey getting tied up.\n\nI was given a bowl of oatmeal with raisins and butter and sent out the back door. A few moments after I sat down on the back porch swing Maryloo came out with me a glass of milk.\n\nShe gave me a smile as she handed it to me.\n\nI wished I could return it.\n\n\"What's the matter, my Willy boy?\" she asked me when I didn't smile back.\n\nI told her quietly about the letter.\n\nHer hand went to cover her mouth for a second then she slowly started to nod.\n\n\"I wondered what his problem had been these last few years. He wouldn't talk to me after you left for weeks... then all he would do is just tell me to do things. Like clean the floors... bring him this or that. I tried to ask him what was the mater but he just gave me a foul look and walked off.\" She squeezed her eyes shut. \"Oh my Willy boy...what are we going to do? He's going to be here for dinner.\"\n\nI nodded.\n\n\"I'm going to try to talk to him. See if he will listen to me. I'm sorry he's been an ass to you, my love.\"\n\nMaryloo gave a slight shrug and looked down at her hands. I reached over to take them but she pulled away just before mine would have touched hers.\n\n\"Not here,\" she said in a whisper.\n\n\"Where then?\" I asked just as softly. \"Where will we ever be able to?\"\n\nHer beautiful eyes came up and looked deep into mine. I saw a dozen emotions cross her face.\n\n\"Maybe nowhere around here... but I would like to find that place,\" she told me after a moment.\n\n\"I would like that too,\" I told her back. My eyes went to her left hand and the idea of me slipping a gold ring over her dark skin came to me then. By the word of the law, I could do that now... here. I knew what would happen if I tried to though.\n\n\"Well, enjoy your family dinner, my Willy boy. I's got to be getting. All the family is on the way to my place for our dinner. Was up half the night cooking for them then been here since just after dawn cooking for yours.\"\n\nMy eyes went up from her hands to her face. I could see that she was tired.\n\n\"You deserve better than what you're getting.\" I told her softly as I stood up. I looked down at her dark eyes. \"I want to...\"\n\n\"I know what you want to do,\" she told me with a quaver to her voice. Then I saw her eyes twinkle. \"I surely know what you want.\"\n\nI smiled back at her, and nodded.\n\n\"I won't be having it!\"\n\nMy heart thundered as my father's voice came spilling out the open back door.\n\nCora came out the back door at a run. I could make out Dad yelling at nearly the top of his lungs from somewhere around the living room.\n\n\"Willy, there is a black man on the front porch asking for you!\"\n\nMy eyebrows knitted together as I thought about the few possibilities. I handed her the empty bowl and walked around the side of the house towards the front porch.\n\nA grin split my face as I saw it was Curtis. It slowly started to fade as I saw his expression. As I stepped onto the side of the porch, he heard me and turned to look. I could see the Marine I fought beside. Always checking his tail. He nodded, seeing me, and limped heavily towards me.\n\nI could still hear father storming inside. One word seemed to be dominating his every sentence. It was a word I try to never use now.\n\n\"Curt?\"\n\n\"Willy....\" I saw tears start to fall. He wiped them away angrily. He went to try and tell me again. Then unable to do it, he reached into his pocket and handed me a letter.\n\nI recognized the return address.\n\nSlowly my world fell to pieces around me as I read.\n\nCalvin... oh god, Calvin.\n\nHe was my Top Sargent from the first day I landed in Vietnam. The image of his shit-eating grin came to me. That constant cigar stub held in his teeth. For some reason that stupid dog that followed him around for half a year came to mind.\n\nMy left hand clutched my right elbow as I covered my eyes with my hand. I couldn't stop the tears or the racking pain that tore at me. I felt Curtis' hand come to rest on my shoulder.\n\n\"I'm there bro, I'm right there with ya.\" I heard him whisper.\n\nThen a smaller hand was on my arm. Under my hand, I saw the slim dark fingers that rested lightly on my arm. The comforting presence that I'd had for most of my life to chase away my tears.\n\nA piece of pie was not going to do it this time... but her arms might. I turned and brought her into my arms and held her against my chest as I cried.\n\n\"I'll get my shotgun and blow that nigger the hell off my porch!\"\n\nThe tears stopped.\n\nMy eyes were cold and my breathing steadied as I turned the love of my life slowly loose.\n\n\"Willy?\" I heard her words only barely.\n\nIt was three long strides to the front door. Seven more after that to where Dad was trying to unlock his gun case. I saw mom and Jenny standing in his way.\n\nMy sister's eyes going wide were his only warning as I crossed the living room. He was only half turned towards me when I reached him.\n\nThe whole end of the house shook as I grabbed my father and slammed him into the side of the wall next to the gun case. My hands were clutching his shirt as I held him hard into the wood paneling. My nose was just inches from his.\n\n\"Your son is alive because of that nigger! That man on your porch saved my life more times than I can count, you son of a bitch! He will limp for the rest of his life because he pushed me off the trip wipe I had just snagged!\"\n\nMy hands under his throat, I lifted the racist son of a bitch up! I know my mouth was a snarl. \"I carried him miles through that damn hell to a chopper thinking I was carrying a dead man. Now that man... a man I love like my brothers comes here to tell me my C.E.O. back in the war got killed last week and you want to get a gun after him!\"\n\nI noticed then that hands were pulling at my arms. Female and of all colors. I tried to stand against them but then a stronger male hand came to rest on my shoulder.\n\n\"Willy... it's okay. I'm used to it.\"\n\nTurning him loose slowly, I let Curtis pull me back from my father.\n\nI could see in my father's face he was furious at me but at the same time I could see something I never saw on my old man's face before. Fear. I watched Mom and Jenny take him towards the TV room as Maryloo, Cora and Curtis pulled me towards the front porch.\n\nOnce outside, I turned to look at Curtis. \"I'm sorry...\"\n\nHe shook his head. That grin of his appeared slowly. \"I'm a Tennessee black man in Alabama. An angry white dude isn't nothin' new to me bro.\"\n\nI just looked at him and my own face split into a grin. I reached over and took his hand.\n\nAfter a second he looked over at Maryloo and smiled at her. Then looked back at me. \"So this is the lovely lady you were telling me about so many times. You were right, she is beautiful.\" He looked back to her. \"I would try to steal you but this man I think got his heart set on you.\"\n\nMaryloo smiled at him.\n\n\"I'm not easy to steal.\" She looked down then back up. \"You a long way from home? You got a meal waiting on you?\"\n\nCurtis turned my hand loose and shook his head. I handed him back his letter when I saw his eyes go to it.\n\n\"I told Mama to keep it warm that I would be late getting home.\"\n\nI sighed. \"I would invite you in Curt but...\"\n\nHe chuckled and nodded.\n\nMaryloo spoke up. \"You come with me. I got a whole house full of folks and a ton of food done made up. One more won't make no-one go hungry there. Willy, tell your Momma I'll see her tomorrow to just leave what she can. I'll get it taken care of when I get here.\"\n\n\"Curt... when will I see you again?\" I asked after he nodded. \"I mean, I can drive up to Tennessee but...\"\n\n\"Yea.\" He gave me a nod that carried a lot of meaning. I knew from long talks with him back in the Nam that his father felt about white people like mine did about black people. \"We'll work something out.\"\n\nMaryloo's hand tightened on my arm. I realized then she hadn't turned me loose for the whole time we had been standing there.\n\n\"Willy boy, when you get done eating with your family, you come round the house. I'll find one of my cousins to keep him from getting bored till you get there.\" Maryloo smiled at me, then him. \"Come on. Food's getting cold why we standing here.\"\n\nI watched as Curtis limped along with her down the front sidewalk. They headed down towards the bus stop. \n\nWhen I turned, Cora was just looking at me. She slowly glanced towards Maryloo, then looked back at me. Her eyebrows rose.\n\nI gave a slow nod.\n\nAfter a second, she just silently whistled.\n\nShe was about to turn and go inside when a cab pulled up behind us out on the street. I felt a grin edging my mouth as I saw Tommy get out, his hair high and tight. Twenty feet away and he smelled like boot camp.\n\nThe smile faded away at two memories. The letter he wrote and just how many times I saw fresh from the island guys looking just like Tommy dead a week after they hit the Nam. They come at me from two directions.\n\nCora gave a squeal and dashed off the porch and out to meet him. I grinned as I saw him stagger under her weight as she all but tackled him. They talked for a bit as they made their way up the side walk.\n\nOver their shoulder, I saw the buss pull away from the bus stop. I could just make out Maryloo as it went past. Her looking out the window at me.\n\nCora rushed past me as they reached the steps to go tell everyone.\n\nI smiled at my brother as he stepped up onto the porch. I looked at the sharp BDU's he was wearing, and pulled myself up, I snapped my hand to my brow.\n\nTommy looked at me with a slowly growing look of...\n\nThen he turned his back and walked towards the door.\n\n\"FREEZE!\"\n\nThe word was out my mouth with a snap my Top would have been proud of.\n\nTommy's training stops him in his tracks. I walked around till I was standing nose to nose with him.\n\n\"Soldier... the next time a Gunnery Sergeant does your PFC ass the honor of a salute, you better snap it back like God just told you to! Do you understand me, Johnson?\"\n\n\"Sir! Aye, aye, Sir.\"\n\nI looked him up and down. The look of disgust that he had begun to give to me, I gave back to him in full. \n\n\"When you get back to the Island, tell your Drill about this. You tell him an honorably discharged Gunnery Sergeant with the Second Battalion, Third Marines did you the honor of a salute and you failed to return it because of your personal feeling about that person. Do you hear me... soldier?\"\n\nI saw him swallow before he answered. \n\n\"Sir. Aye, aye, Sir.\"\n\nI gave my brother one last look up and down that conveyed my full disgust at him for the dishonor he just did to the uniform he was wearing.\n\nI heard my sisters coming through the house at a run.\n\n\"As you were,\" I told him in a whisper.",
        "I moved out the way as they pounced him.\n\nDinner was a rather quiet affair between my brother, father, and I. I ate lightly, having no desire for what I was tasting. It might as well have been ashes in my mouth. I was cranking the old car and pulling it out the barn while everyone else was settling down to watch 'Oklahoma' on CBS.\n\nI could hear the music as I pulled down into neighborhoods most white people wouldn't go into. A blending of blues, jazz, and the new sounds coming out of the big cites. It seemed to come from every doorway. I heard laughter and the sounds of children and adults having fun.\n\nWhen I parked in front of Maryloo's house, I stepped out into what felt like another world. A place where everyone was friendly to one another. Where a neighbor would help you just because he was your neighbor. Looking over, I saw a card table under a big tree and dozens of kitchen chairs under it. The old men looked up from their game of Dominoes and I saw looks on a few faces that weren't nice, but most just seem to be curious as to who I was.\n\nThe front door to Maryloo's opened and the screen door closed with a loud slap. I smiled when I saw LuAnn, her younger cousin, walking towards me. She had come to the house a couple of times to help Maryloo when Mom wanted to do some major redecorating. She was about Tommy's age.\n\n\"Ohhhwoo! Would you look at this? Someone done gone and gotten me a white boy for Christmas. But damn it, they done deliver you early. I'm gonna have to put you up somewhere or everyone's going to want to play with you,\" she said with a sassy wink.\n\nI grinned at her.\n\n\"Wouldn't want me worn out before Christmas even gets here,\" I said grinning and shaking my head.\n\n\"That's just what I'm talk about. I got to hide you somewhere. Maybe once I get you unwrapped I can hide you under the bed. Take you out and only play with you at night.\" She lifted her hand like she was about to start undoing the top button on her shirt.\n\n\"LuAnn, I'm going to bust your black ass in a second!\" \n\nI looked up from the young flirt to see Maryloo coming out her front door. She had a glass bottle of beer in her hand as she walks over to meet me. \"This is my present,\" she told her cousin in a whisper as she handed me the beer.\n\nThe young girl pouted. \"It's not fair. No one ever gets me a white boy for Christmas.\"\n\n\"Maybe next year,\" I told her after taking a sip. It was not the brand I would normally have bought, but it was ice cold.\n\n\"Go get a plate of food and take it out to your uncle Harles. That fools gonna starve to death playing dominoes one day.\" She looked back up to me and I saw a slow smile cross her lips. \"Come on in. We been keeping your friend company.\" Maryloo took my hand and pulled me to the house.\n\n\"Willy, my boy!\" I was suddenly wrapped up in strong arms as I stepped inside. Curtis' face was right in front of my nose and I could smell the malt beer on his breath. \"You done landed me in Heaven my boy. These women can cook better than my Momma and...\" he leaned in to me a bit more. He must have been thinking he was whispering but I could probably have heard him back out at the car. \"...God damn that ass on some of these girls!\" \n\nI wrapped my arm around Curtis and he led me, or I support him, over to the table. I saw Maryloo hold out a plate to me. As Curtis took a seat between two of Maryloo's cousins and started flirting with the pair of giggling women, I smiled at the woman I loved.\n\n\"You just help yourself to anything you want now, Willy Boy,\" she told me.\n\nI leaned towards her a bit. \"I need a bed for that not a plate,\" I said in a whisper.\n\nShe smiled, shook her head and gave my arm a pop. \"Get you some food. We'll see about desert once you get something else in you.\" She grinned at me and disappeared off towards the kitchen. I heard what sounded like a large Marine division at work in there.\n\nThe dinner table was loaded with things to eat. I didn't see a turkey like we had but the ham was huge. There was a monstrous tray of fried chicken and a small mountain of potato salad. The big blue bowl full of black-eyed peas and the red checkered cloth covered plate of cornbread next to it drew my attention.\n\nOne of the giggling cousins got up to go get something. Curtis wrapped himself around her chubby sister and pulled me down into the empty seat.\n\n\"Willy Boy, I think I'm gonna marry me this one,\" he told me, looking at her smiling face.\n\n\"Do you even know her name?\" I asked taking a sip of my beer. I looked at the girl and winked. She smiled back at me\n\nI saw Curtis trying to puzzle it out.\n\n\"It was W something, wasn't it?\"\n\n\"Wilhelmina,\" she said laying her hand on his arm. \"I've told you twice now. You forget it again and you can sleep out under the tree by the fire barrel.\" She nodded her head off towards where the older men are playing dominoes.\n\n\"Damn, Willy boy, this one seems to have a mean streak. Maybe I should marry her sister.\"\n\nI grinned at Willow, she smiled back.\n\n\"I wouldn't do that, Curt. Her sister's got an even meaner streak,\" I warned him jokingly.\n\nA hand popped me in the back of the head.\n\n\"I heard that. Get your white ass out my chair.\"\n\n\"Yes, ma'am,\" I told Mimmy as I got up with my plate and my beer.\n\nShe gave me a smile, a wink and plopped back down next to Curtis.\n\nTaking my plate, I wandered over to by the kitchen door. I looked in on a scene that any base commander would have been proud of.\n\nMaryloo was directing her family around the kitchen like a master sergeant. They moved when and where she points. I saw even more food just beginning to be prepared. I looked over to the oven and saw Maryloo bent over pulling out loaves of bread. I watched her youngest sister spreading butter on them just out the oven.\n\n\"She loves you.\"\n\nI turned and had to look way down to the tiny woman standing next to me. She looked not a day under two hundred. I gave her a smile. She just barely returned it.\n\n\"Ma'am?\"\n\n\"I said she loves you. I've heard her talking with some of the others when it's quiet at night. I've heard her talking about you. She's worried herself sick over you for the last five years. Now she's if anything even more worried. She's afraid you're going to give up your life to try and be with her. That what you gonna do?\" the little old lady asked me. I realized then that Maryloo was looking over at me from where she was slicing the hot bread.\n\nWhen our eyes met, I knew I had the old woman's answer.\n\n\"I couldn't give up my life to be with her. She is my life. I wouldn't give her up for anything in the world.\"\n\nThe little lady just looked at me for a second then started cackling. I could see she only had about three teeth in her head. She reached up a thin bony arm and caught my neck. With surprising strength, she pulled me down and placed a kiss on my cheek that smelled of beechnut.\n\n\"You treat my granddaughter right, you hear me? The whole damn world is going to try to treat you both wrong, but so long as you treat her right it will be okay.\"\n\nI nodded.\n\nI looked up as Maryloo stepped up next to me and layed a thick slice of buttered bread on my plate.\n\n\"Granna, you trying to steal this young man too? You about as bad as LuAnn,\" she told her grandmother in a low voice.\n\nThe old lady cackled.\n\n\"If I was ten years younger and my hip wasn't hurting I would make his toes curl.\" She smiled as I felt her hand pat my ass. I watched, chuckling, as she tottered off toward a radio I heard playing.\n\nMaryloo smiled at me. \"Come on, lets find you a place to sit.\"\n\nBellies full, the relatives moved out the house one by one. Looking out the front door, I saw a large fire was going in an old oil drum under a large tree near the card table. Laughter rang out from it every few seconds.\n\nI knew one of the giggling sisters had taken Curtis off in that general direction earlier. I gave thought to going to find him when I felt a soft hand run up my back and onto my shoulder.\n\nMaryloo looked up at me smiling. She handed me an open beer and she nodded towards the fire. \"That will go on till after midnight.\"\n\nI nodded and took a sip. The cold brew helped the overfull feeling in my stomach a bit. I looked at her beautiful eyes.\n\n\"I want you to come with me,\" she said to me after a second's pause.\n\nThe dim lamp with it's yellowed glass shade gave the room a soft feel. Her scent was all around me as she closed the door behind me. She turned and looked up at me, her hands behind her back. I heard her turn the lock.\n\n\"William... I love you.\" I saw her swallow. \"I have loved you for many a long days, though many a long nights, wondering if you were still alive. I don't know what to do about that love, Willy boy.\"\n\nI stepped over to her and put my arms around her. I rested my head in her soft hair.\n\n\"I love you too.\" I made the decision I had truly made years ago. \"I want you to marry me. I want you to be my wife.\" I felt her shoulders shake under my hands.\n\n\"Oh Willy boy, I want that. I want that so badly. But it can't be.\" She looked up at me. \"The laws may have changed. They may say we can but you know as well as I do how little things have really changed. If I marry you, your family's going to fire me. Your father will disown you. Where will we live? Here? That won't be a fire barrel that's burning out front if we try that.\"\n\nI felt it then, the fear that she and all her relatives must had. I knew from having seen the card that father was in the K.K.K. What that really meat to a ...person of color came home to me then.\n\n\"My family will protect me from as much as they can, but if I stand myself out there like that?\" she said softly.\n\nI pulled her to me tighter as I felt the tears. I knew then what I would do for her.\n\nAnything.\n\n\"Maryloo.\"\n\nShe slowly looked up at me.\n\n\"Be my wife. Whatever happens... happens, but for a short time or for a long, we at least will be together as we should have been for years now. I don't have a ring on me... I've planned this out terribly... but would you please marry me?\"\n\nI watched the twin lines of tears run down her dark skin. I saw them reach her chin and hang there. I saw them fall into her open cleavage as she looked down.\n\n\"I don't know what to do,\" she said softly.\n\nI pulled her into me then. To comfort, to protect... to love.\n\nHolding Maryloo in my arms, I felt her heart beating against my chest. I looked down into her eyes and she looked up at me as our faces closed. Our lips met, soft at first, then with a growing need for more. I kissed her upturned mouth reveling in the silky feel of her lips against mine.\n\nTurning my head, I smiled as she kissed her way across my cheek to my jaw line. I shivered a bit as her lips touched my neck. Her breath was hot against my skin as her mouth descended to the hollow by my collar. I opened the top button of my shirt allowing her more access. Her hands closed on mine, pushing them out the way. I grinned as her fingers went to work with a frantic pace on my shirt.\n\nI tilted my head back and just reveled in the feeling of her lips kissing my chest, her mouth hot and wet moving around my upper body. Hunting for the places that make me respond.\n\nI looked down when her hand went to my belt. I watched in a state of total surrealism as she undid the belt and then unhooked my pants. I stepped on my heels and pushed my shoes off as she knelt down and pushed my pants lower. I watched her face as she looked me over. She looked up at me from her knees and smiled.\n\n\"You are a beautiful man, my Wiley boy.\" She smiled at me, then grinned. Her finger nails ran up the back of my legs, scratching the skin in away that tickled. I tried to pull back a bit, but her hands were on the cheeks of my ass, holding me in place.\n\nMy eyes went wide when she leaned in and placed a kiss on the head of my cock.\n\n\"Oh my god,\" I said in a soft whisper as I disappeared into her mouth\n\n. Those warm soft lips ran down the length of me in a tight, caressing massage. I felt a soft suction that seemed to pull me from hard to harder. I looked down and watched her head bobbing on me, then she was pulling me deeper. Her fingers wrapped around the base, her lips tight, her tongue working fast and wet. \n\nI brought my hand up to rest on her hair. Her soft hair, like a warm curly sponge under my fingers. So very different from the slick straight strands of the Asian girl who did this for me once years ago for the first and last time. \n\nI could tell after a few moments that Maryloo didn't have the other woman's skill at this but I enjoyed it all the more for that.\n\nSlowly her mouth moved off me. I watched, silent, as she stood up in front of me. Her hands went to the dark black buttons down her front and then they were opened one by one. In a puddle of cloth, the dress fell to the floor. The white bra and panties all but glowed against her skin. \n\nShe reached behind her but I stepped forwards and wrapped my arms around her pinning her arms at her sides. My lips found her and caught her gasp of surprise. I let my fingers wander up her back till it found the strap and I unhook the little clasp. I felt the shoulder straps slip down, then the front falls as she moved her arms back to the front. Her hand found my cock and her fingers took it in a tight grasp. \n\nI leaned down and sucked in the dark nipple. The taste of her so different, but all that I remembered from the last time we were together. The hard suck at the hardening nub, the taste of her. Turning her back loose, I cup her breast and pushed her deeper into my mouth as I suckled.\n\nHer fingers tightened in my hair, and then ever so slowly she pulled me back. Her nipple left my mouth with a pop.\n\n\"Not quite so hard Willy. A little more gently.\" She told me softly. She smiled as I nodded. \"Don't worry. I taught you how to tie your shoes I can teach you this.\"\n\nI grinned up at her and leaning back in I gave the tip a lick. I smiled when she shivered. I placed soft kisses on her skin making my way back up to her lips. I looked into her beautiful eyes and smile.\n\n\"There is something I want you to teach me. Something I've never done.\" I let my eyes slowly look down then back up. I smiled as I saw her eyebrows rise. She let out a giggle.\n\n\"Willy boy, that is such a naughty thing to be asking me to teach you.\" She shook her finger in front of me. Then smiled. \"I would love to teach you how to do that... but not tonight. I have been running around all day sweating it wouldn't be a pleasant thing right now. I'll let you try that after I get me a shower one night. Sound fair?\"\n\nI looked her in the eyes and slowly nodded.\n\n\"Does that means you're going to be mine? Forever?\" I asked after a seconds thought.\n\nI saw the feelings cross her face. The worry, the desperate fear... for me. For what a life with her would mean for me.\n\nShe closed her eyes and looked down. Slowly she nodded.\n\n\"YES!\"\n\nI grabbed her under her hip and lifted her up into my arms. I spun us around and together we collapsed laughing onto her bed. The springs gave an almighty squeak of protest then settled as she moved to lay on her back next to me. I rolled over till I was looking down at her. There were tears at the corners of her eyes.\n\n\"Make love to me,\" she said softly. Her hands brushed my face, caressing the skin by my eyes. \"Make me yours.\"\n\nLeaning in, I kissed her lips feeling her passion building as I shifted myself up and over her. I settled my weight down as she opened her legs and wiggled down a bit. I felt her hand slip between us then, I closed my eyes as I felt the most wonderful tightness in the world surround the head of me. I smiled as she moaned, the whole length of me slowly slipped into her. Warm... wet... tight. Mere words lend so much less to what I was feeling. Her hands came around to my back and her fingers dug into my shoulder as I pushed deeper.\n\n\"Oh, my Willy boy... oh that feels so good now. Oh yea, just like that.\" \n\nI started a slow rocking thrust that took me almost out of her then all the way back in. Her hand closed on the back of my neck and I felt her lips rise up to meet mine in a hot kiss, filled with all the words we had never gotten to speak to one another.\n\nHer legs opened a bit wider, her thighs rubbing against the sides of my hip, then she was even more open and I felt her legs come further up my side. Leaning back I caught the underside of her knees and pushed her even more open.\n\nSounds came at me then, distant ones at first, the people out by the fire barrel laughing. I couldn't make out the words but every once and awhile they burst into laughter. I wondered for a second what had happened to Curtis but that thought was lost in the next thrust. \n\nI listened now with a total focus on this wonderful woman, that I had known for my whole life. The one woman that had always been there for me. I looked at her face, shiny with a growing sweat. Her eyes were closed and her mouth slightly open, soft moans coming out with each thrust. I saw the tip of her tongue come out to lick her lips then her eyes open and she saw me looking at her. She smiled softly.\n\n\"Feel good?\" she asked me, running a hand across my chest, to my neck, then to the side of my neck.\n\nI slowly let her pull me back down. Her knees push against my arms as she pulls me down. I felt my foot find the metal rail at the foot of the bed. I pushed off against it driving into her a bit deeper. I got a grunt then a moan that sent shivers through me.\n\n\"This feels wonderful. I wish we could stay like this forever.\" I told her in a soft whisper that was all the breath I could muster for speech.\n\nShe laughed under me, sending wonderful pulses along the length of me.\n\n\"We would get damn all hungry and mighty sore before long,\" she said. \"Oh damn.\"\n\nI started to push harder . Try though I might to make this last I could tell I was getting closer every second. I drove myself in, hearing the bed squeaking in an even rhythm under us. Her breath left in a grunt with every push.\n\n\"Cum in me,\" I heard her say under me.\n\nThe words stop me in mid thrust. I look into her eyes not believing I heard her right.\n\n\"You...sure Maryloo?\"\n\nI see her take a deep breath then nod.\n\n\"Cum in me my Willy boy. I'm your woman now. I want to feel you... I want to feel... it.\" She pulled me deeper, using her hands on my waist.\n\nI moved my arms and her legs come down my sides as I rested my weight on her and moved across her body. Our skin, wet with sweat, moved like white satin on dark silk. I pulled myself up into her by the headboard while pushing off the footboard.\n\nI listen to her with wonder under me as I felt it begin. The rush up through me was sudden and powerful. I wasn't sure I could have stopped had I wanted to. As it is, I release into her with a flood of passion driven need. I clutched her too me as I emptied myself into the warm depths of her. I listened to her moaning my name as she shuddered under me. Her fingers clawed at my back as I heard her begin to cry out louder then louder still. She turned her head at the last second and I felt her more than heard her as she screamed out her lust into the pillows.\n\nI rolled off the top of her and pulled her to me as she shivered and twitched against me. I felt her legs jerk every few seconds. Her breath was a wet heat against the side of my neck.\n\n\"Oh...my Willy boy. Oh my god. You can do that to me for the rest of my life.\"\n\nI pull her to me holding her tight to my side. \"I will. I promise you that. I will.\"\n\nHolding each other in the dark we listened to the sounds from outside. The laughter of her family. I wondered about my family, if there ever was laughter like this. So free of constraint.\n\nI turned my head and let it rest on her soft hair as I hear her breathing slow to a soft rhythm. I smiled and placed a kiss against her skin not really caring where it landed. Sleep took me into a dark embrace.",
        "Twice in the night we awakened to satisfy the needs of the other or of us both with soft moans of pleasure that we laughingly tried to hide from a now sleeping neighborhood.\n\n\"You sure?' I asked as I pulled the car over to the curb a block from the house. \"I mean we're going to tell them today anyway, what difference does it make?\"\n\n\"A lot of difference. We pull up at your house together we may not get to have our say. Now you go on. I'll be there just as quick.\"\n\nI pulled away from the curb hating to see her in the mirror, but I also knew she was right.\n\nI saw the front door is open as I pulled into the driveway and took the car around back. I could almost envision Moma going to look out the screen every few minutes to see if I had gotten home. Years spent away fighting in the war, yet she still worried if I stayed out all night like I was a little kid.\n\nI entered the house through the kitchen door; I could hear the front screen opening as I crossed the white and black tiles.\n\n\"You Nigger Whore!\" My father's voice nearly shook the windows out the frames.\n\nAs I quickly stepped into the hall I saw Maryloo backing away from my father as he was screaming at her. \n\nI saw several things then in a very few seconds. It was a way of looking at things that I had not felt settle over me since leaving Vietnam.\n\nMy Mom was by the door to the TV room, leaning on the door frame. I could hear the TV playing behind her. I saw her face was splotchy from crying.\n\nMy beautiful sister Cora was sitting on the steps. Her hand was on the rail as she was about to pull herself up to her feet. Her mouth was a perfect 'O' of surprise as she saw me.\n\nMy Father was advancing towards Maryloo. He was my true focus point, all the rest was set to one side. Noticed but dismissed. The thunder of his hate-filled words as he screams at her. The white-knuckled grip of his hands around the black leather bible in his left hand, it's little tassel swinging wildly. The metal blue of his service revolver in his right hand. The gun he carried into Germany and to the Pacific...pointed at the woman I loved!\n\n\"You whore of Babylon, seducer of Satan! I gave your filthy kind a good paying job and you do this! You...\"\n\nMy father and I crashed together, tearing through the metal screen and wood door frame. We spilled out onto the front porch. I have no memory of crossing the living room; I must have done it at a full run. The force of that carried the two of us past Maryloo across the porch and down in a tumbled pile by the steps. I heard my mother and sister screaming as I felt my elbow dig into the gravel.\n\nI turned enough to catch my fathers right arm and pushed it to the ground but even as I did I saw it was empty. I was noticing this even as he was starting to try and turn himself under me.\n\nMy breath left me a second later as Tommy slammed into my side, and he and I tumbled off our father.\n\nAttacked from my blind side, my reactions were instinctive. I felt his arm closing around my neck and I began to lose it a bit. His weeks of boot camp training had kicked in. I could tell in a rational part of my mind that he was doing what his drill sergeant taught him, things that can be very lethal!\n\nBut my training was from a place a whole lot more lethal.\n\nI heard Tommy's scream of pain before I was even aware I was doing anything to him. One second he was holding me around my throat the next he's clutching at his face and screaming while I had rolled over onto him.\n\n\"Get off him! Get off him god damn it!\"\n\nMy fathers work boot caught me in the ribs with a force that belittled his age. I rolled with it as much as I could but I still felt the snap of a bone. I made myself go from the ground to my knees to my feet without pause. I'm in a half crouch when Tommy started to get up.\n\nHe was clawing at his left side even as he came up onto his feet. Dad's hand was helping him up. I watched the both of them and tried not to clutch my side and give away the injury.\n\nThe flash of metal from Tommy's side, the dark flat blade of his marine K-bar brought my thought into instant focus.\n\nI felt it settle over me then, like an old worn jacket. My eyes slid from the blade to his chest. Part of me was following his feet as well. I was watching for the step. That one balancing step that would signal he was about to move towards me with the knife.\n\nThe step that would be my brother's last.\n\nMy breath calmed.... my hands steadied...my heart beat slowed.\n\nThe sound of Dad's 45 was as loud as thunder!\n\nOut the corner of my eye, I could not look away from the bare knife, I saw Maryloo walking down the front steps. The gun, it's barrel smoking, looked ridiculously large in her delicate hands. She slowly moved till she was standing next to me. She pointed with her left hand towards the front porch. That hand shook but the one with the gun was steady.\n\nThe rabid dog with a stick comes to mind.\n\nMy father moves forward a step or two till he is standing between Tommy and Maryloo.\n\n\"You can't shoot me, bitch. You kill a white man in this state.... they will electrocute your black ass!\"\n\nHe started to step forwards some more but stopped when Maryloo's off hand came around to help steady the big gun between his eyes.\n\n\"Your.... white ass.... won't be there to see it,\" she said with a dreadful coldness to her voice.\n\nCora and Moma came off the porch at that moment and took father's arms. I watched them pulling on him till he lets himself be led away.\n\nTommy was looking at me with blood running freely down the side of his head from his left ear. He slowly lifted the K-bar till it pointed at my face.\n\nJenny had him then, pulling him up the porch and through the door ahead of father.\n\nMy father shrugged off the women's hands at the door and looked away from Maryloo for the first time. His eyes settled on me.\n\nThe look of loathing disgust on his face will live in my memories forever.\n\nThe door slammed shut on his last words to me... they echo up out the past alone with the sound of glass breaking.\n\n<p align=\"center\">***</p>\n\nMy aged hand turns off the car, as my eyes go to my left hand still on the wheel. The worn gold band, scratched and dull from a lifetime of hard work catches my attention easily. I take a deep breath and turn to the passenger seat. My hand moves over and my fingers curl around her darker ones. The metal of her ring is a cool feeling under my fingers.\n\n\"Maryloo? We're here.\" I give her hand a squeeze.\n\nThose beautiful eyes open slowly in their nest of tiny wrinkles. She looks around and then freeing her hand, lifts her glasses up off her chest on their little gold chain.\n\n\"Oh...we're home.\"\n\nI look at the familiar yet unknown faces that look out the window towards us.\n\n\"Yeah,\" I say with a sigh.\n\nI open the door and fish out my cane. The old knee gives me the familiar pain as I push my way out and to my feet.\n\nWhen I open Maryloo's door, her hand takes mine. Her eyes look up at me through those gold frame glasses. I see the twinkle in her eyes.\n\n\"Don't you be fretting now, Willy boy. It gonna be just fine.\"\n\nI smile as I help her out. It troubles me to see her getting so frail, but I know that those ten years between us that meant so little once will come to soon mean a lot more.\n\n\"Maryloo!\"\n\nTurning towards the porch I see my sister Cora coming towards us in a hurry. She doesn't quite skip down the steps like she once did but she moves well for a woman in her fifties.\n\nAs my sister and Maryloo hug I walk around to the back of the car and open the trunk. The towels on top of the pie boxes are still warm. \n\nI'm about to lift out the first box when I stop. My pulse jumps to a heavy thunder and my hands start to shake as I watch my brother's ghost step out the front door. I slowly calm myself as he crosses the porch and comes down the steps. I realize as my pulse slows that I'm looking at my brother's youngest son. The one named for my father.\n\nHe crosses the yard to stand in front of me. His actions direct and purposeful.\n\nThe crisp BDU's he's wearing carry old remembered smells, old memory triggers that threaten to bring tears to my eyes. I lick my lips as his eyes settle on my face.\n\n\"So you're Uncle William. Dad told me about you.\"\n\nMy eyes are on level with his as his hand moves from his waist quickly towards me.\n\n\"He said to give you this.\"\n\nI look down blinking at the white envelope he's holding out before me. I take it with hands that shake a bit.\n\n\"I'll help you with that, Aunt Cora.\"\n\nI watch him take the pie boxes from my sister and start towards the porch with them. Cora has Maryloo's arm and doesn't look like she's going to turn it loose any time soon.\n\nWhen I open the envelope I pull out a piece of notebook paper, the side a ragged mess from being torn out a spiral. My bother's scrawl covers half the page.\n\n\"Dear William.\"\n\nI blink and look again to be sure I read that right.\n\n\"Dear William, It feels strange for a former Marine to be saying this but I am a coward. Truly a coward. I spent many long years of my life following what others had to say, without ever having the courage to do what I felt was right and needed done.\"\n\nI swallow back tears as my eyes jump ahead.\n\n\"I was wrong. I could never in this life find the courage to look you in the face and tell you this. If this letter comes to you by my son's hand you know I never did. I'm sorry, brother. I am sorry for the words I have used about you. Both to your face and behind it. I regret now what I called Maryloo for so long. Please ask her if she will forgive me for being stupid, she always did when I was a child. I know from our sister that you have had a good life. That you have sons grown to manhood, and a daughter you gave away in marriage. I never met them or the grandson I hear you have. I wish I had. The Lord blessed you my brother. He did, his eyes and hand were upon you the whole of your life, and for one reason. You saw beyond the color of skin to the beauty he placed in the warmth of her heart.\"\n\nSilent tears roll unchecked down my cheeks as my hands tremble.\n\n\"You were always braver than me. I ask you now to use a bit of that courage. Use it to forgive me. To please forgive a fool for foolish words, my brother. Love Tommy.\"\n\nI slowly lower the letter to my side. It doesn't mater; I can no longer read the words. I can't see my brother's writing through the tears that cloud my eyes.\n\n\"Willy boy!\"\n\nSwallowing, I wipe my face and close the trunk of the car.\n\nMaryloo stands on the front porch wiping her hands on a towel. The years fall away from her as I look.\n\n\"Willy boy, you're letting Thanksgiving dinner get cold in here.\" She smiles and waves me towards the porch. \"Time to come home.\"\n\nI smile and wave to show her I heard. Leaning on my cane, I walk up the sidewalk towards the house. Towards the door.\n\n\"Yeah it is.\"\n\n*\n\n( I would like to thank dampanties for her work as my editor. Any mistakes you saw are still on me.)"
    ],
    "authorname": "MSTarot",
    "tags": [
        "white man",
        "black woman",
        "oral",
        1970,
        "racial tension"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/southern-heritage"
}