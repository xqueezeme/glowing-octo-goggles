{
    "title": "Pool Boy Ch. 28",
    "pages": [
        "After butt-fucking both Alexis and Yu-Gin the night before, I expected that I would wake up this morning with both of them fighting over my dick. Yu-Gin actually woke before me and I woke up in enough time to watch her walk rather gingerly across the bedroom floor toward the bathroom. She was a little spread-eagled and she had her hands on her ass cheeks as though they would fall off if she wasn't holding them. She probed her anus to see if she was still gaping like last night. She was fine and she let out a loud breath in relief.\n\nAlexis must have been awaken by Yu-Gin too as she cuddled over beside me and kissed me on the cheek. She whispered, \"Did your fatty survive that tight little ass last night?\" I chuckled. She lifted the covers as if to see if everything was okay. She reached down and grabbed my morning woody and stroked it a few times and said, \"He seems to be okay.\" I chuckled again and then groaned as my hips involuntarily aided Alexis' hand movements.\n\nI maneuvered a hand to Alexis' sex and discovered that she was just as ready as I. Her hips rolled to my hand just as involuntarily as mine had. She was breathing raggedly already and through her urgent breathes she said, \"I need you in me, Baby.\" If she wanted to be on top, she would have already been there. She wanted it missionary style and I was already moving toward that end.\n\nI quickly rolled onto my side and then to my hands and knees and moved over her. She had closed her legs together which told me that she wanted my legs outside of hers. We both liked this position because she could use her thighs to clamp on my cock and I could use my thighs to clamp on her thighs. She never released my cock until it slid through her hand and into her pussy. She stared me right in the eyes as her chin dropped and her mouth opened as I gently pushed my cock deeper in her sex. Her breath caught in her throat before letting it escape suddenly with a long groan as I hit bottom. She mumbled, \"Your cock is always biggest in the morning.\" I leaned down and kissed her passionately before I started fucking her. Her arms went around my neck and pulled her torso up to mine and clung to me as I started a normal paced fucking motion. She moaned with each full penetration.\n\nThe heat in Alexis' pussy was amazing. My cock was in heaven and gazing down at her beautiful face I was staring at an angel. She smiled up at me but her mouth slightly opened to show her brilliant white teeth with each push into her depths. She stared up into my eyes and whispered, \"I love you so much,\" and then grinned at me.\n\nI bent my elbows and dropped my face to hers and we kissed hard for several strokes and then I pulled back and said, \"I love you too.\" I suddenly thought, 'We hadn't been saying that out loud very much lately.' I made a resolve right there with my cock buried to the hilt in Alexis' pussy that I would say 'I love you' often and I wanted to hear her say it often too. There would be no taking it for granted. I lifted my hips up and drove them down one time and paused. Then I drove them up and down quickly four times and paused again. Then I repeated the motion three times and stopped. I lowered some of my weight down to Alexis' chest. She giggled and said, \"What was that; Morse code?\"\n\nI said, \"That was '1', '4', '3' for 'I', 'LOVE', 'YOU'\". She laughed and I could feel her laughter in her pussy. She pushed up her hips reminding me of what I was doing.\n\nShe lifted her head and kissed me on the nose and said, \"Tell me you love me a bunch more times.\" I laughed because she was only telling me to get back to fucking. I did as instructed and counted out the strokes to each of the three words out loud until I started groaning too heavily to continue and my orgasm crushed me. I thought the first shot of cum would blow my cock right off and it pulled Alexis over the top of her orgasm. She screamed hard and dug her fingernails into my shoulder as she pulled her torso back up to hang off me. My hips were spastically driving my cock down with each spurt and her hips were thrusting up to receive it. Her legs were trapped my mine but her knees kicked up between my legs and on one spastic surge, her thigh crushed my balls against me. It hurt some at first but only grew more painful over the next several seconds. She realized instantly what she had done and she watched my facial contortions with concern as the pain grew.\n\nThankfully, my balls had already expended their load. Alexis was still in the throes of her orgasm as she writhed around under me. The pain in my groin was still growing so I rolled off to Alexis' side and curled up in a fetal position trying to will the pain away. Alexis' fingers flew to her sex and began furious strumming her clitoris and fingering her pussy to make sure she finished her orgasm.\n\nBefore I could even pull my knees up, Yu-Gin was lying flat on the bed between Alexis' spread legs with her face buried in her pussy. Alexis pulled her hands back and placed them firmly on the top of Yu-Gin's head. She held Yu-Gin in place as she spastically thrust her hips upward, driving her pussy onto her lips. Yu-Gin's tongue was frantically flicking Alexis' clitoris and then driving into her pussy until Alexis burst out a loud scream of pure pleasure and then almost instantly settled her hips back to the bed pulling Yu-Gin's face with them.\n\nAlexis' hips continued to pulse randomly and Yu-Gin kept her tongue imbedded in Alexi's pussy until they stopped. The pain in my groin had peaked and descended and I was watching Alexis's hips and Yu-Gin's face ride through the last of the pulses. I chuckled to myself when Yu-Gin pulled her head from Alexis' grip. Half of her face from her nose to her chin was dripping with Alexis' vaginal juices and cum. She saw me grin and ran her hand around her face and looked at her palm. She burst out laughing and then slurped up the mixture with her tongue. She said, \"Yummy. Breakfast.\" We all burst out laughing. Yu-Gin crawled up Alexis' body and offered her face to Alexis who dragged her tongue across her lips and cheeks. They kissed each other and then Yu-Gin pulled back, swiveled her body up and stood at the foot of the bed. Her unusually long nipples perched atop her small pancakes titties were incongruous. I couldn't pull my gaze away from them.\n\nYu-Gin said, \"I have to get going. Should I call a cab or can you drop me back at the dorm?\" Alexis and I were kissing again and didn't answer immediately. Yu-Gin watched us for a moment and then said \"I'll call a cab. You guys carry on.\"\n\nAs Yu-Gin disappeared around the doorframe into the kitchen, Alexis broke our kiss and yelled, \"Hunter can drive you home.\" Her face popped back into view with a grin.\n\nShe said, \"I'll get myself presentable. I don't want to look like the special menu item at the local whorehouse.\" We all laughed at that visual image. She disappeared around the doorframe again and we went back to sucking face. A half hour later, Yu-Gin came into the bedroom fully dressed. Her hair and makeup were done. She looked great. She sat down in the only overstuffed chair and said, \"No need to hurry.\" The sarcasm was thick and I knew she meant just the opposite. I rolled across the top of Alexis dragging my semi-erect cock across her sex. I kissed her again and dropped my feet to the floor. I grabbed my jeans from the floor and pulled them on. I struggled to get my cock in so I wouldn't catch loose skin when I zipped my pants. I grabbed a clean shirt and pulled it over my shoulder. Yu-Gin groaned at the vision of my ripped torso with my arms up high as I pulled my arms into the sleeves about to pull it down to my trim waist. When my head popped through the neck of the shirt I saw Yu-Gin lightly biting her knuckle on her index finger. She had that sultry look on her face again.\n\nI pulled on my sneaker without socks and stood up and said, \"Ready?\"\n\nYu-Gin walked past me to the side of the bed and bent down and seductively kissed Alexis. Even though she was whispering, I heard every word, \"I don't know how you two ever get out of bed. If he was mine, I'd chain him right here and fuck him senseless.\" She giggled a moment and continued, \"I suppose I'd have to feed him once in awhile too.\"\n\nAlexis giggled at that and then whispered back, \"I don't have to chain him here.\" Yu-Gin smiled and stood up and walked past me grabbing the buckle of my pants as she went by.\n\nShe said, \"Come on 'Meat'. We're burning daylight.\"\n\nI laughed and said, \"John Wayne, Cowboys, 1972. Well, kind of a paraphrase actually. He didn't say the 'Come on 'Meat' part.\"\n\nShe stopped and looked up at me as I grinned down at her. She wagged her index finger at me and said, \"Don't you make me love you any more than I already do.\"\n\nAlexis was lying on her side watching us as we went through the kitchen door. She yelled out, \"Have fun.\" I was at the bottom of the stairs heading for the Subaru with the keys in my hand before thinking, 'I don't know who that parting comment from Alexis was meant for, Yu-Gin or me.'\n\nYu-Gin gave me directions back on campus. I didn't know which dorm she lived in but it seemed apparent to me that it wasn't either of the dorms that we dropped Jan, Josie and Nina last night or they would have said something if Yu-Gin didn't get out with them. I was surprised when Yu-Gin's directions led me back to Nina and Josie's dorm. I looked at her with surprise on my face and she giggled. She guessed what I was thinking and said, \"This isn't my dorm. I'm meeting Josie and Nina here. We were hoping you could drop us off at the mall. We'll find our own way home on the bus.\n\nI smiled and said, \"Sure. No problem. Where should I park?\" She directed me to visitor parking. \"Should I wait or come in?\"\n\nYu-Gin said, \"You know women. Who knows if they're ready or not. It may be a little wait. Maybe you should come in.\" We walked through the lobby doors to the bank of two elevators. It took forever for the hydraulic elevator to arrive and the doors to inch open. Yu-Gin pushed the \"five\" button and it was an even longer ride to our destination. We stepped out to the hallway. Scantily clad girls were scurrying everywhere.\n\nOne of the girls yelled, \"Man on the floor.\" The alert seemed to reverberate down the hall. I followed Yu-Gin as one of the girls ran past in the opposite direction with her hands over her naked breasts. My cock surged a little harder from the visual stimulation. Yu-Gin stopped at one of the doors and rapped on it a couple times with her knuckles. After a moment the door flew open into the room and Josie was standing there in the open doorway totally nude. My cock surged the rest of the way and was pushing uncomfortably on my pants.\n\nJosie folded her arms across her ample tits and stepped back behind the door. Yu-Gin wasn't fazed at all and she stepped into the room and announced, \"Our ride is here.\"\n\nJosie yelled from behind the door, \"For Christ's sake Yu-Gin, you could have warned us that you were coming with Hunter. We thought you were coming by cab.\"\n\nNina wasn't the slightest concerned about me standing in the door. She was wearing a bra with more flesh hanging out that being contained. She was also wearing a thong. My personal opinion was that she was a little too beefy in the ass to be wearing a thong but opinions are like assholes; everyone has one. Nina walked across the room to the door and took my hand and dragged me inside and slammed the door. Josie was no longer hidden behind the door and she was looking for anything she could find to hide her naked body. Yu-Gin mimicked Josie's initial comment as she said \"For Christ's sake Josie, quit the histrionics. You'd think a guy has never seen you naked before; especially one that you can't stop yakking about fucking his brains out.\"\n\nJosie looked quickly at me and her face went instant red. I could tell she wished that she was anywhere else but there. The Southwest Airline commercial \"Want to get away?\" flashed through my mind. She averted her eyes and fled the room in the nude. Nina chastised Yu-Gin for embarrassing Josie like that. It was one thing for Yu-Gin to out Josie like that but it was cruel to out her to the very guy she had made it known that she had a crush on. I was obviously aroused but I was also amused by how cruel and catty girls could be with each other.\n\nNina opened the door and stepped into the hall. I was now behind the door so I couldn't see what she was doing out there. I thought maybe she was looking to Josie. I looked over at Yu-Gin and she was taking her clothes off. My first thought was she was changing but I quickly realized that this was not her room. The door opened and Nina had removed her bra and had hung it over the outside doorknob. She shut the door and looked at me like she was a wolf and I was a cornered rabbit. She cupped her huge tits in her hands and pushed them up under her chin. While watching me watching her, she dragged her tongue over each of her nipples and then sucked one between her lips and then the other.\n\nAs I watched Nina, Yu-Gin had stripped naked. My cock was as hard as a granite post as I looked at Yu-Gin and then back and Nina as she was pulling down her thong. Nina took my left hand and Yu-Gin took my right and led me to one of the two twin sized beds pushed up against the wall. I towered over both of these girls. Yu-Gin was no more than 5'0\" and Nina may have been 5'4\". Nina went for my belt buckle as Yu-Gin went for my zipper. They finished their tasks at the same time and my jeans fell to the floor. I kicked off my sockless sneakers and pulled my feet out of the jeans. As usual, I had dressed 'commando' when I got ready to drive Yu-Gin home. I figured I was dropping her off and going back home.\n\nMy cock stuck up between my shirt-tails. They both attacked the buttons and in seconds I was as naked as they were. Nina grabbed my cock in a vise-like grip. Her fingers came nowhere near closing around my fatty. She apparently thought that if she squeezed it really hard that she could make it. No chance. She knelt down on one knee and pushed my velvety helmet to her lips and kissed it and ran her tongue around the ridge. Yu-Gin came over and knelt beside Nina and said, \"It's huge. I've had sex many times before but never with a cock like that.\" She grinned at Nina and continued, \"At least before last night.\"\n\nNina pulled her lips back and said, \"You slut. You two were fucking in the backseat last night weren't you?\" Yu-Gin smiled and nodded. \"Well if your tiny little self can fuck this cock then I guess I can too.\" With that she stretched her lips over the top of my cock and after a moment to adjust, she started giving me a fantastic blowjob. I put my hands on her multi-colored short blonde hair and held her still as I gently fucked her face. I wasn't sure how much she could take so when she gagged out, \"MMMMUUUMMPPPHH MUMMPPHH,\" I didn't force any more cock than that into her mouth.\n\nNina opened her mouth all the way open and started, \"AAAWWWKKK AWWKKK AWWWKKK,\" as I pistoned my cock in her mouth. I slowed my attack on her mouth to see what she had in mind going forward. She took the opportunity to pull her mouth off my cock and slurp in gobs of her saliva. She collected what she could and spit it on the end of my cock and stroked it with her hand several times. Yu-Gin had sat back on her heels and watched Nina display her obvious blowjob skills.\n\nNina pushed herself up high on her knees and pivoted away from me and dropped her hands to the floor in a doggy position. I accepted the invitation and slid to my knees on the floor behind her. I guided my cock to her sex and ran the head along her pussy which was sopping wet. Yu-Gin smiled at me and whispered, \"Fuck her in the ass.\" I shook my head and pushed my glans into her pussy. Nina groaned hard at the invasion. I stopped as the fattest part pushed into her vagina. Her torso and head sagged to the floor as a continuous groan escaped her lungs. Then she muttered, \"Oh my gawwwddd. Too fucking big. Jesus. Jesus.\" I pushed further into her and her head came up off the floor and she screamed through the entire penetration.\n\nHer scream was loud enough to be concerned about others coming to investigate and sure enough as I was holding at full penetration in Nina's pussy, a loud knock on the door and someone yelled, \"Is everything okay in there?\"\n\nYu-Gin got up and stepped to the door. She opened it a crack and said, \"Everything is fine. We're just rehearsing our lines.\" I cringed at that explanation as I pulled my cock out of her and pushed back in hard eliciting another scream from Nina. Yu-Gin said to the person at the door, \"See. She's a pretty good screamer.\" The door closed and Yu-Gin chastised Nina for being too loud as she searched through Nina's desk for something to stuff in her mouth. She came back with a giggle and stuffed Nina's nine inch silicon dildo in her mouth. Nina groaned with embarrassment but she didn't remove the dildo. She pushed her ample ass back into me and I began fucking her hard. In less than two minutes, Nina was crushed by a massive orgasm as she screamed into the dildo. She writhed all over the floor and I had to hang on to her hips to keep my cock engaged. She removed the dildo and groaned, \"OH FUCK. GAWWDD DAMMNN WHAT A COCK. It makes my dildo seem like a pencil.\"\n\nYu-Gin giggled at Nina's statement and said, \"It is isn't it.\" I figured that Yu-Gin wanted some of my cock too so I was not hurrying to catch up with Nina, whose orgasm dispersed as quickly as it arrived. Her pussy pulsed for a couple minutes and then she pulled herself off my cock and sat down on the floor and stretched her lips over my glans to taste herself. She seemed pleased with how she tasted. I pushed her backward onto her elbows behind her and dipped my tongue into her pussy to taste her. I smiled and smacked my lips. She was happy that I thought she tasted good too. I dragged my tongue from her anus to her clitoris, which was too sensitive for any stimulation. She groaned hard and pulsed her hips at me when I touched it.\n\nAs I was bent down sucking vaginal fluids from Nina's pussy, I felt a hand grip my cock hard and stroke up and down the slippery shaft. I assumed it was Yu-Gin but it wasn't. It was Josie. She was just as naked as she was when she fled the room earlier. Yu-Gin was grinning at me and stroking her own pussy as Josie jerked on my cock. I looked up over Nina's body to her grinning face. She said, \"Yu-Gin and I just want to fuck your cock whenever we can. Alexis is very generous. Josie really has a crush on you so be careful with her.\"\n\nJosie immediately said, \"I'm right here guys. I know all I can have is his cock on occasion. But what a cock it is.\"\n\nI said, \"I'm right here ladies.\" They all burst out laughing and then Josie pushed my raging hard cock past her lips and into her mouth. She gagged about halfway down and marked the spot with her hand. She rapidly drove her mouth down to the gag point and back up over and over again. She was by far the most beautiful girl in the room. Even close to Alexis. With her beautiful face sucking hard on my cock I could feel my orgasm approaching so I said, \"Josie. Sweetheart. I'm going to cum soon so if you want to fuck, you will need to stop.\" I knew I could cum in her mouth and still be able to fuck her to orgasm but I wanted to cum with her.\n\nReluctantly, she pulled her gorgeous face off my cock. She slurped up the excess saliva and spit it on the head of my cock. I invited her to sit in my lap and she understood right away. She placed her feet by my hips and sat down on my cock. As she settled down she groaned hard and then let out a little scream as the fattest part of my cock pushed into the entrance of her vagina. She pushed her feet around behind me and rocked her hips on my cock. She moaned, \"OH FUCK. IT'S BETTER THAN I IMAGINED. HOLY SHIT.\"",
        "She ground her hips on my cock for several minutes before I recognized the symptoms of her orgasm. We were face to face. Her eyes were glazed over and her mouth hung open as she gasped for air. Every so often she would open her eyes and see me looking at her with a smile and she would grin and groan. My orgasm was close but I wanted to time it to explode at the same time as she exploded into hers.\n\nShe opened her eyes to look at me again and she mumbled, \"Sweet Jesus. I'm gonna cum. I'm gonna die. OOOHHHHHH SHITTTT.\" Every muscle in her body seized from her fingertips to her toes. Her neck tendons looked like they would snap any second. She was seething air through clenched teeth and her pussy began clamping hard on my cock. I let myself go when she yelled out \"SHITTTT,\" and poured huge ropes of cum into her pussy. She screamed with each one which caused renewed banging on the door. She pushed her hand into her mouth and groaned hard into it.\n\nHer orgasm lasted a long time. Yu-Gin and Nina were looking at each other in awe at Josie's orgasm. It went on for several minutes. I was long done when she started to settle down. She collapsed her head onto my shoulder as she sucked in oxygen. Finally, she sat up straight and said, \"Oh my God. I definitely needed that, huh?\" I grinned at her and kissed her lips. She kissed me back much more passionately than I had kissed her.\n\nNina and Yu-Gin had left us sitting on the floor and got themselves dressed in clothes suitable for the mall. Josie was reluctant to separate but I lifted her up off my cock to a standing position. She knelt down and sucked my cock into her mouth and lashed my cock with her tongue until there was no taste of cum or vaginal juices. She pulled off with a 'pop' and giggled at the sound. We all dressed and headed for the elevator.\n\nEvery girl in the rooms near theirs stepped to their open doors when we went by. One of the girls said, \"Jesus ladies, keep it down unless there's enough for everyone.\"\n\nJosie giggled and mumbled to Nina, \"If they only knew that there was enough for everyone.\" Nina burst out laughing and threw up her open palm in a high five which Josie slapped. I drove Nina, Josie and Yu-Gin to the mall and dropped them off. They all wanted hugs and kisses and I accommodated them and then got back in the Subaru and drove home. I knew Alexis would want a full 'blow by blow' account (forgive the pun).\n\nAt home, Alexis was dressed in only her apron as she was working away in the kitchen sink. I stood in the open door gawking at her incredible ass. She turned around after a couple seconds to see what I was doing standing in the open doorway. She was wearing rubber gloves which she placed behind her on the edge of the counter that she had her bare ass pressed up against. She smiled at me and blew an errant hair out of her face. She said, \"Well, don't you look like the cat that ate the canary. Tell me all about it. You were gone a long time so you must have a long story.\"\n\nI closed the door behind me and stood there across the room from her. I said, \"Fuck. That apron drives me crazy.\" I moved quickly across the room toward her. She squealed with delight as I got my hands on her ass for a moment. I let her pivot away and chased her into the bedroom. She was laughing hard as she darted one way and then another looked for an avenue of escape. I grabbed her into my arms and pushed my lips to her neck and she squealed with laughter again. I had her neck and knew what followed.\n\nAlexis put on a show of trying to escape my arms as she wriggled around. I untied her apron at her waist and kissed and tongued her neck as her giggling soon morphed into moans of pure lust. She threw her arms around my neck and I picked her up and carried her to the bed. She tore off the apron as she lay back. The heat rising off her body seemed to be as visible as the shimmering light above a long stretch of highway on a hot summer day. She was on fire as she ferociously tore at my buckle and zipper.\n\nI was certain that my cock would explode before she could get it out of my pants. I had never been harder and she had never been hotter. Her hand fumbled as she frantically tore at my buckle she looked up at me with a desperate look on her face that pleaded, \"Help Me\". I was feeling as desperate as she and I grabbed my belt away from her and tore it open. I yanked the zipper down and my cock burst forward into her hands.\n\nShe yanked my cock toward her face so hard that I stumbled on my pants that had only dropped to my knees. I was heading for the floor but I launched myself across Alexis's writhing body and landed on the bed bedside her. She didn't let go of my cock and the momentum pulled her over on top of me. She quickly maneuvered her mouth to my cock and in one motion stretched her lips over the glans. She frantically pushed her mouth down as though she was under water and my cock was a breathing tube. She feverishly drove her mouth up and down my cock. She pulled off only long enough to gasp in a couple gulps of air before going right back down again.\n\nAlexis was frantically grinding her pussy on anything she could find. I adjusted my position so I could get my hand on her sex. She was unbelievably wet. I flicked my finger across her clitoris. It was so swollen it was like she had a miniature cock of her own, air exploded from her mouth forcing my cock out. It was like she suddenly realized that her pussy was on fire and she scrambled quickly to get my cock in her.\n\nEverything about her was frantic now and she was bringing me up there with her. She swung her leg across my hips and drove her hips down forcing my cock into her pussy. She screamed but that didn't even slow her down. I looked up at her contorted face. Her lips were stretched taught over her gleaming white teeth. She seethed air in and out through them. Her eyes were open but I knew she wasn't seeing anything. Her fingernails drew blood on my chest. She was driving her pussy up and down my shaft.\n\nI was overpowered by her feverish pace and I rolled her off me and we switched places. My cock never came out and we didn't even break the pace. I was on top now driving my cock hard into her pussy. She threw her legs around my waist and locked her ankles. She flexed her thighs like she was trying to increase the pace but I was already past the pace that she could demand and she just hung on. She pulled her torso up to mine and held on with her arms around my neck. Her ass was the only thing touching the bed and I pounded my cock hard into her. She bit my shoulder hard. I didn't care. I was driving my cock all the way out and all the way back in again. Air exploded from my lungs and then gasped back in again.\n\nAlexis' muscles that were clinging to me were beginning to tire and I could feel her start to sag from my waist and neck and then every muscle in her body seized like a cramp and she blurted out, \"YYYYUUUNNNGGGGG,\" as she drove her hips up to meet a down thrust from me. I pulled my head back to look at her face. I expected to see a look of pure bliss on her face but it was a look of near terror like she was positive that right there, right then, she was going to explode into molecules.\n\nI was concerned and slowed down. She screamed, \"NNNNNOOOOOOO. DDDOOONN'TTTT SSSTOPPP. OOOHHH MY GAAWWWDDD.\" She began pulsing her hips at me as her pussy clenched hard on my cock. Her head hung lifelessly. She looked like she was staring into the black void of space. She wasn't there with me, that's for sure.\n\nHer clenching pussy ripped my orgasm from me and I was suddenly launching my hips into her to expel many long ropes of cum. The expanding hardness of my cock brought Alexis back from wherever she went and she groaned hard with each burst. The clenches of her pussy became spastic and random long after I had finished launching my final salvo. My elbows were still locked to hold me above her and she eventually released her arms around my neck and she seemed to flow like liquid back down to the bed. She released her ankles and dropped herself slowly back to the bed pulling my cock from her as she fell. I gazed down into her beautiful aqua blue eyes as she came back to me. Her eyes focused and she said, \"Holy Fuck. What was that?\" She noticed blood on my shoulder and a look of concern washed over her face. \"Fuck. Did I do that? Oh Baby, I 'm sorry. I don't know what came over me. Holy shit.\" I dipped down and kissed her passionately for several moments. I rolled off to her side and rolled her with me. We kissed side by side for more than a minute. I could tell she was feeling the after-orgasm quakes for a long time after we settled down in each other's arms.\n\nAt the dinner table that night, Alexis wanted to hear all about how things went at the dorm with Yu-Gin, Nina and especially Josie. She knew Yu-Gin and Nina just wanted my cock. She also knew that Josie had feelings for me. She said that she wasn't sure how to handle Josie but she wasn't worried about me. That was a relief.\n\nAll the talk about sex with her friends had got us both going again and we made slow passionate love before turning out the lights. We both commented on the incredible differences between the \"Clash of the Titans\" sex we had earlier. In the dark I gently squeezed her left tit once and then four times followed by three. She giggled and did the same to my cock.\n\nThe next morning I woke to my usual woody. I stroked it a few times and again noticed how that morning woody always seemed to be harder than most other times. I noticed also that my balls ached a little like they do when I have ejaculated several times in a short time. I put my hands behind my head and flexed my hard cock until it had lifted the covers and pitched a tent above my groin. It was the first thing that Alexis saw when she opened her eyes. She looked up at my face to see if I was awake and she grinned when she saw me looking at her. She said, \"Do you have a present for me?\" I smiled and nodded and we were off again.\n\nAlexis quickly threw back the covers to reveal my bouncing and throbbing cock. With the covers gone my cock slapped down on my stomach and bounced right back up again before settling at a forty-five degree angle above me. Alexis's fingers wrapped around the bottom half of my shaft and held it in place as she dragged her naked body across mine to push her lips onto the glans and then down to her hand. She released her hand and pushed my cock into her throat and started me off with a glorious throat-job. She was getting very good at it and I groaned hard. She switch to a regular blow-job and then a knob-job as she drilled her tongue into the ultrasensitive nerve bundle while her hand flashed up and down the shaft. In five minutes I was blowing a load of cum into Alexis' mouth. She had maneuvered around so she could look at my face as she sucked my cock and when I started cumming she just took it into her mouth and let it force its way out as more and more was deposited. Cum ran out the sides of her mouth and down her chin and onto my stomach or it ran back down my shaft propelled by her lips as she pushed my cock into her mouth. It was a crazy sexy sight.\n\nWhen I was done cumming in her mouth, I started to maneuver her so I could return the favor. She giggled and moved away. She said, \"We have to get going. I need to do some shopping today before classes tomorrow.\" I looked at her with a confused look on my face. She had just bought groceries two days ago. She noted my confusion and as she was getting out of bed said, \"I've signed up for an art class. This woman teaches mostly continuing education classes off campus to adults but she has one class on campus. I've always thought I could draw pretty well and that's what she teaches. I need to get supplies listed on her syllabus.\" I had seen many of her doodles, as she called them. They were very good. She wriggled her ass and patted her cheeks as she walked out of the bedroom. She looked back to make sure I was watching. Of course I was watching.\n\n****\n\nTime seemed to fly by as classes were going well. We were halfway through the football season and we were undefeated so far. I thought I might make the Dean's list this semester. Alexis knew she would. She had straight 'A's'. I wasn't much interested in most of her courses nor was she much interested in mine. Math and science was not her thing and retail merchandising wasn't mine. I was interested in her art class though. I wanted to see what she was drawing. As expected, she didn't want me to see her sketches because she was embarrassed at how poor she thought they were. When I finally goaded her into showing me some of her more recent drawings, I was struck by how good they were. I complimented her profusely and she turned all shades of red from embarrassment. In the end, she really thought they were pretty good too.\n\nShe had many drawings of hands: hands curled into fists, relaxed hands. Two hands folded over each other. Rough calloused male hands and slender sensuous female hands. Old hands, young hands, babies hands. Cuticles, knuckles, nails, tendons, perfections and imperfections were all there. I recalled how Jack Dawson in the movie \"Titanic\" had shown his drawings of various hands to Rose. Alexis' drawings were erotic just as Jack's were. I told her so and she was delighted with my praise after she was satisfied that I wasn't just bull-shitting her.\n\nI took her hands and examined them like she must have deeply examined those hands she had drawn. I studied them like I had never looked at anyone's hands before, including mine. Her drawings revealed aspects that I had never really paid attention to before. I kissed each fingertip and then turned her hand over and kissed my way over each knuckle. She giggled at me after the first hand. She absent-mindedly licked her lower lips as I kissed my way through the second hand.\n\nWhen I finished she pulled back her hands and looked at them herself. I asked her if any of her drawings were of her hands. She shook her head and said, \"The teacher has people come in and sit for us. They are just people off the street. Young, old, even people with a malformed hand. It's fascinating to look deeper into things than you just see without consciously looking.\n\nI said, \"Do you draw anything other than hands? How about faces or feet or legs?\n\nAlexis grinned and said, \"Go ahead. You can say it. Breasts? Penises?\" She looked at me as I smiled at her. \"We are going to start drawing faces and ears and other body parts next week. I'm very excited about it. I'm probably over-protective of my drawings but I think I'm pretty good.\"\n\nOver the weeks that followed, Alexis continued to show me her drawings of a variety of body parts. They were excellent. Then one evening while we were studying on our bed she said to me, \"The art teacher is looking for a male model to sit for the class. She can't afford to hire a professional and she asked the class to think about someone they knew who might be interested. I think you would be perfect. You have the chiseled Nordic facial features, ripped muscles everywhere. The class will choose for themselves what they want to draw: Faces, eyes, mouths, hands, arms, shoulders, etc. We aren't ready to draw the whole body. We're perfecting our skills on individual pieces before we put them all together. You have so many interesting pieces to choose from.\"\n\nI grinned at her and said, \"I would be honored. When?\"\n\nAlexis smiled and said, \"Well, the teacher has to do it at her adult continuing education class off campus tomorrow night. The University doesn't allow disrobed models in their art classes anymore.\" She grinned after she revealed the disrobed part of her request. She continued, \"You're not shy about your body and it is one hell of a body.\" She ran her hands down over my ripped pectorals and abdominals before raising her fingers to her mouth and blowing on them like she had just burned herself.\n\nI said, \"Totally nude?\" She smiled and nodded. \"You're okay with it?\" She nodded again. \"Okay. It sounds kind of exciting.\"\n\nThe thought of sitting naked in front of a class of aspiring artists was arousing and my cock pushed out through the front hole in my boxer shorts. Studying was over. She was as hot as I was and she stripped off her shorts and tee shirt and scrambled into a sixty-nine position above me and devoured my cock. Her pussy was already soaking wet and I broad-stroked my tongue from her clitoris to her anus as she groaned hard around my cock.\n\nI was flicking my tongue on her clitoris and then drilling it into her pussy and then I licked her anus. She was throat-fucking my cock and I knew I wouldn't be lasting long if she kept doing that. She pulled my cock out of her throat to breathe and then pulled all the way off and rubbed my cock all over her face as she gasped for air. I drilled my tongue into her anus and she lifted her face along my cock and groaned, \"OH FUCK BABY. I'M SO HOT. CUM ON ME.\"\n\nI rolled us over so I was on top of her and didn't even break stride as I drilled my tongue into her pussy. Her vaginal juices were bubbling out of her. She grabbed my cock and guided it back into her throat. I groaned hard as she started throat-fucking me again, \"JESUS BABE. I'M GETTING CLOSE.\" She nodded her head with my cock still buried in her face.\n\nShe started thrusting her hips up into my face and when her orgasm rolled over her she let out a muffled scream around my cock. My tongue and her clenching pussy dueled for possession as she pushed me out and I parried back in. I held her hips in place as they rocked and swiveled uncontrollably. I could feel my cum boiling in my balls and Alexis pulled my shaft from her mouth and started jerking me off with both hands.\n\nCum rocketed through my shaft and exited the glans at great volume and velocity. She knew it was coming and she let the first two shots blast into her face. Then she aimed my cock down at her chest and let three shots splatter off her tits. She pushed my glans to her lips and accepted two more shots in her mouth and just let it drool out of her mouth as her tongue pushed it out. My cock kept pulsing but no more cum was expelled.\n\nMy concentration went back to her pussy which was randomly pulsing. I dragged my broad tongue along her pussy and she launched her hips up again with a load groan. I was done and she was nearly done. I rolled off and looked back at her. She was covered from her hair to her navel with cum. She was dipping her fingers in the pool of cum at her navel and between her tits. She grinned at me and said, \"Perfect.\" She licked her tongue around her lips collecting whatever she could reach. Cum was covering one eye and ran down along her nose. She wasn't in any hurry to clean it up. I went to the bathroom and got a hot, wet facecloth and placed it in her hand to use as she wished.\n\nShe sat up and let cum slide down her face to her tits. After several minutes she ran the facecloth across her face and then moved down her body. In spite of the limited accommodations, we showered together. We had figured out how to wash each other but unfortunately there was no room for sex.\n\nThe next morning, as we ate breakfast, Alexis reminded me that we were going to invite April and Mindy for dinner some night. That was a while ago and I remembered that I didn't know if she was expecting me to make the invites or if she was. She said that she had invited them for tomorrow night. We both knew where this was going to go. I looked at Alexis without an expression and she did the same back. She broke down before I did and started laughing. I joined her in laughter and said, \"Can I watch you guys?\"\n\nHer eyes went wide and she responded \"Watch us guys? I was just hoping to join you guys.\" We laughed and I offered betting odds on whether we would get through dinner or not. She took the under, so I took the over. The bet was an oral sex orgasm. Real big gamblers we are.",
        "The schedule tonight would be tight. I got home from Football practice a little after 6:00 PM and the art class that I was going to pose for started at 7:00 PM. Alexis was not a member of this off-campus class but the teacher invited her to attend as a guest student. I know she was as interested in what was going to happen as I was. We had another day of classes, etc. to get through first.\n\nAfter breakfast, we drove to the campus parking lot that was closest to both or our classes. Alexis finished her classes at noon and had the rest of the day to herself. My classes ended at 2:00 PM and I would go immediately to practice. Wednesday practices were important to prepare for the Friday night game. We would be playing a team who was also undefeated in our division. It was a home game and then we traveled to their home the week after. The two biggest games of the season.\n\nI saw April and Mindy talking with their head coach when I got on the field that afternoon. I walked over to them carrying my football helmet. I had never met the Cheerleader coach and was surprised to see that she was probably only about twenty-five years old. She had been head cheerleader during her years here at the University. She was particularly attractive. Her eyes lit up when I walked up to them and addressed April and Mindy. I reminded them that we had dinner plans at our place tomorrow night.\n\nApril smiled at me and said, \"6:30. Right?\" I nodded although I had no idea what time Alexis had invited them for. April introduced me to her coach as \"Coach Hannah\". She introduced me as \"Hunter\" and I waited to see if she would offer her hand. She did and I was turning toward Hannah to accept it when I caught Mindy mouthing the word \"Meat\" to Hannah. Hannah pulled her attention from Mindy back to me and a huge smile washed across her face as she grasped my hand with surprising firmness. She scanned me from head to foot as she gripped my hand a little longer than normal. She was blonde with a very pretty face. She was about 5'8\" tall and her body was flawless. I could tell she worked hard to keep it that way. Her breasts were perfect for her size.\n\nThere was a time, not very long ago, when I wouldn't have recognized the sultry look on \"Coach Hannah's\" face at that moment for what it was. She was coming on to me; hard. I glanced over at April and Mindy and they obviously recognized the look. They glanced back and forth between Hannah and me at the virtual sparks flying between us.\n\n\"Coach Hannah\" released my hand and stepped back a pace and scanned me up and down again. She smiled and said, \"It's a pleasure to meet you. You are a good player. I enjoy watching you play.\" April and Mindy both snickered and Hannah glared at them.\n\nI replied that it was a pleasure to meet her too and said to April and Mindy, \"I'll see you tomorrow night.\" They both nodded and I turned and ran back across the field to start our practice session. I was excited about practice today because we were working me into more offensive plays at tight end. Defense is all hard work with no glory. Offense was work too but I could have a more measureable impact on the game.\n\nI got home at 6:10 PM and Alexis had made scrambled eggs and toast. I was happy with her choice because I didn't want to pose in the nude with a bloated stomach. Alexis confessed that she was thinking the same thing if it was her posing nude. I had wrapped up Football practice with the heavy weights and I was pumped. I realized that I was a little vainer than I had thought. I grabbed my robe off the back of the bathroom door and Alexis grabbed her bag with her drawing tools.\n\nAlexis introduced me to her teacher and introduced her as \"Miranda\". She was around thirty-five. She wore a long dress with surrealism art scenes adorning the flimsy material from shoulders to ankles. She was very attractive with dark brown hair pulled back to a high pony-tail. Her eyes were dark. Her mouth was sensuous with full lips. Her nose was long and slender with a slight upturn at the end. She didn't wear a lot of makeup. Her body was long and slender with small pert breasts which precluded the need for a bra and she wasn't wearing one. Her dress was low cut but she displayed very little cleavage. She eyed me up and down as she asked if I had ever posed for artists before. I shook my head. She asked if I would take off my shirt and I did. She walked around me checking me from every angle. She grinned at Alexis as she ran her fingernails lightly over my abs, lats and pecs. Each muscle flexed as she touched it. I'm a little ticklish. She moved around to face me and said, \"Are you okay with posing nude?\"\n\nI looked at Alexis and she smiled and nodded. I said, \"I've never done it before but I'm not ashamed of my body.\"\n\nShe smiled at my answer and responded, \"Nor should you. You have a wonderful body.\" She paused and scanned me again. \"Okay, remove your clothes and put on your robe and enter through that door when you're ready. The robe is just to allow my students, most of whom are housewives or professional women, to gradually adjust to nudity.\" I nodded that I understood and Miranda turned to leave the room.\n\nI spoke up before she got to the door, \"What about my penis? I may not be able to control whether it's erect or not. This is all new to me.\"\n\nShe smiled and said, \"Erect, Flaccid, it's all part of the male anatomy. I'm sure these women have all seen whatever you have before. Don't worry about it.\" Alexis raised her hand to object to Miranda's assumption but she was already through the door. I shrugged my shoulders and unbuckled my belt and unzipped my slacks. My heart was racing from nerves. I sat down and pulled my shoes and socks off and pulled my slacks off one leg at a time. I guess the nerves kept my cock in a mostly flaccid state and I stood up to present myself for Alexis' scrutiny.\n\nAlexis looked at my cock and said, \"They're not going to be ready for that; soft or hard.\" She grinned at me and headed back through the door we had come in. She wanted to enter the classroom the same as everyone else so they wouldn't know we were together. I pulled my robe on and made sure my cock wasn't showing. I stepped to the door, took a huge gulp of air, mumbled to myself, \"What the fuck,\" and walked through the door.\n\nMiranda stepped forward and invited me onto a slightly raised platform bathed in several spotlights. There was a straight-backed wooden chair on the platform but Miranda didn't offer it to me. She smiled up at me and then turned back to the class. There were six women, including Alexis, sitting at desks positioned in an arc around the pedestal. Sketch pads and pencils of all colors littered the desktops. Other than the lighted exit sign over the two doors, the only light in the room was the spotlights, which reflected enough light back into the room to see each person clearly. I knew I would have time to scan each of them for details as they were doing the same to me. The only difference was that I was going to be nude and they weren't.\n\nI quickly assessed my audience and decided that there were two middle-aged housewives, probably there together to offer each other support, and one younger housewife, who seemed to be there on her own. They were all wearing diamond rings on the left hands. The other two, I pegged as professional woman in their forties. No rings at all were on either hand. They apparently dedicated their lives to something other than a man and family. I had a feeling that they may be dedicating their lives to each other. I made all my assessments based simply on their left hands, how they were dressed and how they kept their hair. I could have been totally wrong. Whatever; I wasn't playing \"What's my line\" for the fate of the free world.\n\nAs soon as I stepped into the room and under the spotlight at Miranda's invitation, a din of whispered voices rose. They all sat up straighter in their chairs and looked at me and then at each other. I smiled at the group as I stepped onto the platform and stood with my feet spread at shoulder width with my hands behind my back and shoulders pulled back like I was standing at attention. Miranda turned to face the arc of desks and said, \"Ladies. This is Hunter. He is a sophomore Engineering student at the University. He plays for the Football team.\"\n\nOne voice from the group said, \"I would hope so,\" loud enough for all to hear and everyone laughed.\n\nMiranda continued, \"Hunter's statistics are: He is 6'5\" tall and weighs 200 pounds. As you'll see in a moment, he has done extensive weight training and has muscular definition that you probably haven't seen up close before; at least not in this class. I urge you to pick a particular area of Hunter's body and muscular definition that interests you to concentrate on tonight. If we are lucky, Hunter will come back and you can choose a different portion of his body to draw.\"\n\nThe heat pouring down from the spotlights above was intense and I was starting to perspire under my heavy terry-cloth robe. In spite of being nervous about being nude in front of a class of women, I was anxious to take it off. Miranda finished her lead-in and turned back to me. She said, \"Hunter, please disrobe. Stand or sit as you please. You are free to move around but please stay on the platform. The artists may ask you to pose a certain way. It is up to you how you respond. We aren't paying you so we are ecstatic that you have agreed to do this for us. The class is an hour long but you are free to stay or go as you please and we can stay longer as we are the last group using this room tonight.\"\n\nMiranda stepped down off the platform and I fumbled with the tie-rope of my robe for a couple moments. The room was crypt-quiet. I glanced over at Alexis who was grinning like a Cheshire cat. I squinted up into the lights and then mentally said, \"Okay, let's do this.\" I peeled the robe off my shoulders and let it drop dramatically to the floor.\n\nThe room wasn't quiet anymore as hushed voices immediately erupted. \"Holy Shit,\" and \"Oh my God,\" were the most clearly stated comments. A \"Fuck\" snuck out of the din. I looked at Miranda, who was standing behind the group. Her eyes were wide with shock and one hand covered her mouth. I glanced down to see what my penis was doing. I was most nervous about that for some reason. It protruded out slightly from my groin and then hung down between my legs. I let out a sigh of relief that it hadn't pulled up inside my groin like a turtle's head. That could have been totally feasible but would have been very embarrassing.\n\nEvery woman in the room except Alexis was sitting there slack-jawed. Alexis had a huge prideful grin on her face as she looked at the other astonished faces gawking at me. When flaccid, my penis is about five inches long and much fatter than any other flaccid penis I've seen flopping around in the shower room. When erect, it grows to eight inches and about the circumference of one of those slim beer cans like Michelob Ultra and it rises to about a forty-five degree angle above horizontal. It was obvious where everyone was looking and it wasn't at my ripped physique. The comments continued for thirty seconds before Miranda got control of herself and spoke from behind the desks, \"Ahem. Class. Settle down. Ahh.. Ummm. As we can all see, Hunter has a rather large penis.\"\n\nAnother voice from the group spoke out, \"Rather large? It's fucking huge.\" The group erupted into a noisy clamor again until Miranda raised her hands to quiet them. Alexis had to cover her mouth with her hand as her giggling was now the only noise.\n\nMiranda continued, \"Your task is still the same. Concentrate on some particular aspect of this ummm.\" She turned to face me and mumbled, \"Incredible specimen,\" as she scanned down to my cock before turning back to the class, \"and...umm, draw it.\" I smiled as Miranda stepped off the side with wobbly legs and instead of standing behind the desks as before, she found herself a chair to plunk down into.\n\nOne of the women raised her hand and Miranda struggled back up to her feet. Her face was flushed and it wasn't from the heat of the spotlights. The woman dropped her hand and said, \"You said earlier that we could request that Hunter strike a particular pose for us to draw.\" Miranda nodded her head. The others were all anxiously waiting for the woman to ask question that they were all thinking. The woman said, \"I would like to sketch Hunter's erect penis.\" The room went nuts. They were all nodding their heads and speaking at once. I just stood there and glanced again at Alexis.\n\nAlexis was giggling with her hand over her mouth. Then she pulled back her hand and mouthed the words, \"I KNEW THIS WOULD HAPPEN.\" Miranda was trying to regain control of her class as she raised her hands and motioned for everyone to stop talking. It was obvious to all that she didn't know what to say. She looked at me for some help but I didn't know how.\n\nAlexis stood at her desk and looked at me before saying, \"Perhaps Miranda can help Hunter get an erection. That seems to be what everyone wants to draw.\" The class, who had all turned to look at Alexis, now turned as if they were a single organism, back to Miranda. She was obviously in distress. Her face was wet with perspiration. So were her hands as she wiped her palms on her hips over and over again. Her nipples had hardened and were pushing on her flimsy dress. She noticed and covered them with her hands before she realized that was even worse and she dropped her arms to her side. She was clearly uncomfortable.\n\nMiranda looked at me with a pleading look on her face. I smiled and nodded slightly and she smiled back. She raised her hands again to get control and when everyone stopped talking she smiled like she had this whole thing in her control and said, \"Hunter? Would you mind if the class sketches your erection?\"<br >\n\nI said, \"No Ma'am.\" I knew I could get an erection on my own by simply thinking about erotic images. \"I'll need your help though.\" I heard Alexis snickering behind her hand. I gave her a withering stare and she collected herself. At this point, I was thinking about anything else to keep my penis from becoming erect before Miranda \"helped\" me.\n\nMiranda seemed to have gathered herself and she moved quickly around the desks and stepped up on the platform. You could hear a pin drop as she stepped close and smiled up at me. She wiped her hands on her hips again and then spit into her palm. She seemed to recognize the incongruity of the actions she had just made and she said, \"Sorry. I'm a little nervous.\" I smiled down at her.\n\nShe looked down at my cock and reached her right hand out and tentatively wrapped her fingers around my flaccid shaft. Even soft, her fingers didn't go all the way around it. She cradled my hanging scrotum in her other hand. In spite of her sweating palms, her hands seemed cold. She stroked her hand up and down the shaft and then looked up at me. I smiled at her again. I was reciting the Declaration of Independence in my mind fighting the urge to respond to her hand. I wanted more from her than a couple strokes on my cock. I looked out to the audience. They were sitting on the edge of their seats. The two professional looking women both had a hand up under their dresses. When they saw me watching them one of them pulled her hand out and the other spread her legs wider and showed me that she had pulled her panties aside and was fingering her clitoris. She smiled at me and I smiled back.\n\nMiranda continued jerking me off and I was trying my utmost not to respond. She knelt down on one knee and ramped up the pace and then changed to her other hand. She was blocking the view of most of the women and they were moving to other desks to get a better view. Miranda was growing frustrated with her inability to get me up. I was sure that this had never happened to her before. This was becoming a point of pride with her and she leaned forward and set her lips on my velvet crown. She started stroking my slowly rising cock in both hands in a counter-rotating motion. I continued to fight her attempts but I knew I was losing. Two of the housewives had their hands down the front of their slacks strumming their pussies. All six of them were breathing very erratically, including Alexis. She had her knees splayed wide showing me that she didn't even have any panties on. The little minx had come prepared for this.\n\nFinally, Miranda gave into her frustration and stretched her lips over my glans and started giving me an amazing blowjob. She gagged about halfway down. The girth was obviously a problem for her but she was doing a fantastic job. My head rolled back and my mouth hung open as I let out a groan. Miranda was pleased with my reaction and she smiled around my cock. As my cock grew to full dimensions, the look on her face changed to distress. She pulled her lips back to the glans and continued stroking with her hands.\n\nMiranda was satisfied that my cock was fully erect. That had been her only goal. She didn't want to stop now but she pulled her lips off the glans trailing a long silvery thread of saliva. She plucked the thread with her tongue and stood up and moved to my side. She had the most delicious look of accomplishment on her face as the grinned at me. Now the others could see my fully erect cock standing high above horizontal and the din of voices started up again, \"Oh my God\" \"Holy Shit\" and then finally, \"Who could fuck that?\"\n\nI was shocked when one of the middle-aged housewives blurted out, \"I'd sure like to try.\" Her face went beet red when she realized that she had spoken her thoughts out loud. The others burst out laughing and it was clear that she wasn't the only one thinking that.\n\nMiranda started to move off the platform but I grabbed her hand and whispered, \"You'd better stay close. I don't know how long I can keep it up without further stimulation.\" She grinned at me and sat down in the chair on the platform. I stood there with my hips thrust slightly forward to accentuate my rigid cock. Her face was right at the level of my cock and she couldn't take her eyes from it.\n\nAt every desk, heads bobbed up to look at me and then down at their drawing pads. I could hear their pencils scratching away. I couldn't see any of what they were drawing. Even Alexis, who knew my cock as if it was her own, was furiously scrawling black lines on her drawing pad.\n\nAfter a few minutes, I was getting bored so I consciously let my cock drop a little. I glanced over at Miranda who was munching on her lower lip. When my cock dropped to horizontal she slid forward off the chair to her knees to my left. She wrapped her fingers as far around the circumference as she could and stroked the shaft a couple times. I leaned down and whispered, \"I think you're going to have to suck on it again.\" She looked up at me and smiled. I turned slightly toward her so the class could watch my cock push in and out of her mouth. She dragged my cock along her face and jaw-line to her mouth and stretched her lips over the glans. The scratching of pencils stopped as everyone watched her head bobbing on my cock. Miranda's eyes looked directly into mine.\n\nWhen she was satisfied that I was hard enough again, she eased her lips off my cock and moved back into her chair. She sat perfectly still staring at my cock. After another couple minutes, I glanced over at Alexis again and she was grinning even when she was looking down at her pad. She saw me looking at her and she lifted her pad and showed me what she was drawing. It was an unbelievably detailed rendition of my cock, with all its' veins and contours. It even showed the glistening moisture from Miranda's saliva. In the background was Miranda's face staring agog at my cock. I glanced back at Miranda and Alexis had nailed the expression on her face. Alexis lowered her pad and went back to work.",
        "The two professional women seemed to be working together as they were using their pencils on each other's drawings and quietly mumbling back and forth between them. They weren't shifting their attentions from me to their pads. They were glancing at Alexis, who was sitting to their left, and back down to their pad. I guessed that I had nailed their particular sexual persuasion from the beginning. The three 'housewives' were drawing with one hand and each had stuffed the other into their slacks frigging themselves. There was no hesitation from any of them, with either hand.\n\nIt had been twenty minutes and I was tired of standing and I shifted my weight from one foot to the other. I looked over at Alexis again and she stopped drawing and held up an index finger and then slowly curled it down as she pointed at my cock. I interpreted her signal to mean that she wanted me to soften my cock and let it drop. I did as I believed she had requested and Miranda started to push herself forward again. Before she could move, Alexis screeched her chair back from her desk and stood up. She moved forward and stepped up on the platform. Miranda didn't move any further off her chair as Alexis walked over to her and bent down to whisper something in her ear. Miranda's eyes lit up with a big smile and she nodded at Alexis and pushed herself back into the chair.\n\nNow the others were all watching Alexis and all drawing stopped to see what was going on. Alexis walked over to me and knelt down on both knees. She adjusted our positions so everyone could see the profile of my cock and Alexis' face. She took my softening cock and pushed her lips onto the glans and deep-throated me. A gasp rose in the room. As Alexis held her position for what seemed a very long time, the buzz of muted words started to become clearer.\n\nOne of the middle-aged 'housewives' muttered through her fingers, \"Oh my God. How does she do that?\" That just raised the level of the buzz even more. Alexis finally pulled her lips back to my glans and started a glorious full penetration blowjob. My cock was a granite pillar and I knew if I let her continue, there was going to be cum spewing everywhere.\n\nThen things got very bizarre. Another chair screeched back away from a desk and the younger 'housewife' squeezed between the desks and stepped up on the platform. She bent down and tapped Alexis on the shoulder and said, loud enough for the class to hear, \"My turn.\" Alexis was startled by her touch and she pulled her lips off my shaft. She looked up at me and mouthed the word, 'PERFECT' and then moved back to allow the young housewife to take her spot.\n\nShe smiled up at me said, \"I'm Lindsey and you have the most incredible cock I've ever seen.\" She wasted no time and struggled to get my hard cock into her mouth. She was a small woman with delicate facial features. Her mouth was small and would present a problem for her task at hand. I guessed she was thirty years old. She pushed my glans into the far left side of her stretched lips. She struggled until she got her lips over the crown and her eyes smiled up at me. I smiled back down. She was obviously pleased with herself. She flicked her tongue along the ridge and drilled the tip into the nerve bundle. She was pleased when my head rocked back on my shoulders and a loud groan escaped my throat.\n\nI heard another chair push back and then another. I dropped my head back down to look and both of the older housewives were stepping up on the platform. I glanced past them and noticed that Alexis was back in her seat and was sketching as fast as her fingers would move. Lindsey stayed right on the nerve bundle. She tried to give me a blowjob but she couldn't get any more of my cock in her mouth.\n\nAfter several minutes, the first of the older housewives stepped forward and tapped Lindsey on the shoulder. I watched her actually frown around my cock but she struggled to get her lips off and moved aside. I guessed that the next woman was in her mid-forties. She had taken good care of herself and probably had money for a facelift here and there. She obviously worked out some because there wasn't any of the midriff spread that starts around that age. She got down on her knees in front of me and gripped my cock like she was shaking my hand. She said, \"Hello Hunter. My name is Mary Jane.\" She shook my cock up and down as part of her introduction. I smiled at her and her antics. Alexis was folding the page she had been sketching to the back of her pad and had started working on a new drawing of Mary Jane's blowjob.\n\nMary Jane wasted no time and pushed her lips over the glans and stopped. She pulled back off again and flexed her jaw with her other hand. She pushed back on again and started a wonderful half-length blow job as she stroked the rest with one hand. The next woman standing in line was getting antsy and after only a minute or so tapped Mary Jane on the shoulder. Mary Jane ignored her and pushed her hand off her shoulder. The woman waited only a few seconds and tapped Mary Jane on the shoulder again. She pulled her mouth off my cock, slurped escaped saliva and turned with venom in her eyes and said, \"Barbara. Wait your turn. I've never had a cock like this and I probably never will again; so back off.\" She turned back to my cock and pushed her lips back on to continue her blowjob. Mary Jane was intent on getting my prize and she cradled my balls in her free hand. I was doing everything I could to keep my orgasm at bay.\n\nAfter another minute or so, the woman behind Mary Jane leaned down and said, \"Mary Jane. You can't hog it all to yourself. Let the rest of us give it a go.\" Mary Jane reluctantly pulled back and then off my cock. She hadn't gotten her prize. She moved out of the way. Next up was Barbara. She was an aggressive woman in her late forties. She was a bigger woman than Mary Jane and hadn't been too diligent in her personal health. She had large breasts and wide hips. Her face was pretty enough. She had big eyes and artificially enhanced lips. They looked inviting and she pushed them onto my cock without too much difficulty. I could hear Alexis scratching away on her pad. Barbara gave a great blowjob. She could come nowhere near a deep-throat, but she knew her limitations and worked me closer and closer to my orgasm. I was counting backward by fours in my mind. She grinned up at me. She was an experienced woman and she knew what I was doing.\n\nThe two professional women were still seated at their desks so there was no one waiting for Barbara to finish so Barbara kept right on going until her lips tired and she pulled off to flex her jaw. I looked over at the professional women again and they were pushed close together as they had their hands up the other's dress. They weren't watching me or what was happening on the platform. They were both staring at Alexis and were both in the throes of orgasms and their obvious groans and moans became the center of attention. They were both thrashing around in their chairs driving their hips against the other's fingers. Alexis was furiously sketching on her pad and she never even glanced their way.\n\nBarbara had pulled back to rest her jaw as much as to watch these two writhing feverishly in their chairs. As they both started to descend from the crest of their orgasms they realized that everyone was watching them. One of them said, \"Oh Fuck. That's embarrassing.\" Everyone giggled at that statement and the women's red faces got even redder. Alexis scribbled away through it all. I was curious to see what she had drawn through all of this sexual activity that she had started.\n\nBarbara had turned to watch the lesbian action and was sitting on her left butt-cheek. Her hand was still gripping my hard cock but she had stopped stroking it. She noticed what she was doing and then realized that the show was over. The sexual heat in the room had dissipated along with the professional women's orgasms. Barbara released my cock and moved back to her seat.\n\nMiranda stood and looked at her watch. She said, \"Well, we've gone over quite a bit tonight. Same time next week?\" All the faces turned from Miranda to me. She turned from the class to face me. \"Hunter, can you join us again next week?\" I looked over at Alexis and she imperceptibly nodded.\n\nI said, \"Sure. Why not? This was fun.\" The din of voices talking over each other returned.\n\nAs the ladies were collecting their sketch pads and pencils, Mary Jane noticed the stack of drawings on Alexis' desk. The drawing on top was clearly sketched from Alexis' viewpoint of a woman's full face from slightly off center to the left side. The face had a huge cock buried half-way in the woman's open mouth. The look on the woman's face was one of pure lust. She immediately realized that the face in the drawing was hers. At first she seemed embarrassed but she couldn't take her eyes off it. She asked Alexis for a closer look and Alexis gladly complied. Mary Jane stared at the drawing for a long time examining every nuance. I looked at Alexis and she looked back at me because the look on Mary Jane's face had changed to the same look of pure lust as in the drawing. It was as though she was reliving her blowjob from minutes ago. She looked from the drawing to Alexis and in a pleading voice said, \"Please, may I keep this?\" Alexis was taken aback by her request but she smiled and nodded. Mary Jane burst out into a huge grin and rolled the drawing up and pushed it into her tube along with the drawings that she had made. \"Thank you. Thank you.\"\n\nAfter the 'session' was over and everyone had left except Alexis, I pulled on my robe and Miranda asked if Alexis and I could do her a favor. I smiled and nodded. She led us off the platform and through the door to the preparation room where my clothes were. She closed the door behind us and then came up close and kissed me hard on the lips. She said, \"I'm so fucking horny right now. That was the most incredible hour and a half of my life.\" She kissed me again. I was reluctant to reciprocate until Alexis pressed her body into the mix. Miranda turned her attention to Alexis and kissed her passionately and Alexis reciprocated so much that my cock rose to full size again and stuck out through the front of my robe. Neither Miranda nor Alexis noticed as they were into each other at the moment.\n\nAlexis broke the kiss and said, \"What is the favor?\"\n\nMiranda said, \"I have a particular pose that has been running through my brain all night. It is a sexual pose with me and Hunter.\" She looked at Alexis and continued, \"Would you mind and would you take a video of us.\" Alexis grinned at Miranda and then at me.\n\n\"Sounds like fun,\" she said. Miranda immediately stripped off her dress. She wore nothing underneath it. She left on her high heels and stood before me naked. Her legs seemed to go on forever. They were toned from calves to thighs and even her knees were sexy. Her crotch was completely hairless. She noticed my huge cock sticking out of my robe and she put her cradled her right hand under it. She wasted no time describing how she wanted us to pose: She positioned Alexis first and handed her an expensive Nikon camera and showed her how to work it. It was a manual focus so it wasn't just point and shoot. Alexis picked up on it quickly though.\n\nMiranda positioned me facing Alexis turned only very slightly toward her as she stood off to my left. She pressed her naked body against my left side and then adjusted her position slightly more to my front. She turned my torso slightly toward her. She was making micro fine adjustments as she went. It was clear that she had considerable photography training. She placed my left hand on her right butt-cheek and instructed me to pull her against my left hip. She cradled my rigid cock in her right hand. She moved her right calf against my left shin. She checked for the position of my cock to her pussy and decided it wasn't right. She told me not to move and she stepped away and came back with a three inch platform that she placed beside me and then stepped up on. She positioned herself just as before and checked the positions of our genitals again. She smiled up at me and said, \"Perfect.\"\n\nShe looked into my eyes. She was obviously consumed with lust at that moment. She reached up with her left hand and guided my head down into the right side of her neck. Just for giggles, I kissed her there and flicked my tongue along one distended neck tendon. She groaned, \"Oh fuck. I'm never going to get through this. I feel like I'm going to cum any second.\" I stopped teasing her. She pressed the right side of her face against the right side of mine. She rested her left hand on the side of my jaw and cheek but didn't leave it there. She pursed her lips against my right ear.\n\nNow the crazy part started. She whispered in my ear, \"Just go with it. Okay?\" She kissed my ear. Then she lifted up her left leg and rotated her hip and knee and took her left foot in her left hand and to my astonishment pulled her foot up over her head. Her hip rotated to make it possible. She was standing on her right leg with her left leg pointing in the opposite direction with her foot pointed like a ballerina above her head. This position completely exposed her shaven pussy. 'Holy Shit,' I thought. She told me to hold her left leg against her body with my bicep just below her jaw so that I didn't cover her tits. She moved her left hand back to my jaw and cheeks and fine tuned the position of my face pressed into her neck.\n\nThe last step was for her to pull my cock up to her pussy, which she had already determined were perfectly aligned. She whispered, \"Use your hips to push your glans through my labia to the entrance of my pussy and then stop. I did as she asked but I wanted to fuck her so bad by then, I thought I would cum too.\n\nWithout moving a muscle, Miranda said, \"Okay Alexis. Focus. Get in close enough so it's just us in the frame and push the silver button. The camera is set for video so you have to keep perfectly still. I'll tell you when to push the silver button again. Alexis looked through the viewfinder, moved in a little closer and twisted the lens back and forth to find optimal focus and pressed the button.\n\nI didn't know what I was supposed to do then but I figured Miranda would let me know. We didn't move for nearly twenty seconds and then Miranda whispered, \"Push your cock inside me slowly and as far as you can.\" I had to roll my hips a little more toward her to get penetration and when I did Miranda groaned hard in my ear and gently bit down on my earlobe. She groaned again and in a demon like voice she said, \"Oh Gaaawwwdddd. Fuccckkk mmmeee. Harrrddd. Ohhhh Jessssusss.\" She dropped her upraised leg to the floor and turned her hips into me and started fucking me before I could get one complete stroke into her.\n\nShe threw her arms around my neck and I grabbed her butt-cheeks and pulled them hard into me as I slammed my cock forward. Her erect nipples dragged across mine. I was so close. She was even closer and in less than a minute, she exploded into a crushing orgasm and she screamed hard in my ear. Miranda had not told Alexis to stop recording so she didn't. She was a cat in heat and she slammed her pussy on and off my cock. She let out another loud scream. She was frantic. I held on to her with my fingers locked on her hip bones. As she bounced around in my arms she moaned, \"OOOOHHHH OHHHH OHHHH.\" Each one was clipped off by an urgent gasp for air.\n\nI couldn't deny my orgasm any longer and I thrust my cock deep into her with each of eight long and powerful surges of cum. She reacted to each one by using whatever control she had left to thrust her hips forward. I thought I'd never stop cumming and Alexis filmed it all. My legs were giving out and so were Miranda's. We settled to the floor as I sat down and pulled her down into my lap and settled with my cock never having left the confines of her pussy. We just held each other like that. I could feel her pussy spasm at random intervals. I had aftershocks too.\n\nMiranda came to enough to realize that she hadn't told Alexis to stop so she did so. Alexis pressed the silver button again and set the camera down on a table near the wall. I looked over at Alexis and I could tell she was way beyond horny. She pulled Miranda back until her shoulder blades touched the floor and her pussy pulled off my softening cock. Alexis stripped off her dress and immediately positioned her pussy above Miranda's face and drove her tongue in to her pussy in search of cum that had already started to bubble out of her.\n\nMiranda was skilled at cunnilingus and her tongue brought Alexis right up to the crest of her orgasm and then held her there until Alexis was groaning into Miranda's pussy and when Alexis started whimpering, she pushed her over the edge. Alexis pulled her head out of Miranda's sex and screamed hard as her orgasm crushed her. She had been so horny all night and had been very patient getting her release. When she could breathe again, she went right back down into Miranda's pussy in search of more cum. The net effect was that Miranda's hips surged up hard into Alexis' lips as another orgasm crashed over her.\n\nI had retrieved the camera when it was obvious where Alexis was going. I framed and focused and pressed the silver button. I recorded their entire session and when they were starting to come around, I pressed the button to stop the video and put the camera back where I found it.\n\nIt was late by the time Alexis and I got home. We didn't even take a shower. We just pulled back the covers, stripped off our clothes and flopped into bed. We laid there looking at the shadows on the ceiling. I said, \"Did you notice the two professional women tonight? While everyone was sketching me, they were sketching you.\"\n\nShe turned to look at me, \"Really? I didn't notice I was sketching as fast as I could.\" Alexis looked back at the shadows on the ceiling. She was quiet for a moment and then said, \"What do you think Mary Jane is going to do with my sketch of her giving you a blowjob?\"\n\nI said, \"It was a very nice drawing. You got all of her emotions in her face. She seemed to get horny all over again just looking at it. I hope her husband doesn't find it.\" I rolled over and kissed each of Alexis' nipples and then kissed her lips. I whispered, \"It's a 143 day tomorrow,\" and rolled onto my back and pulled the covers over us.\n\nAlexis giggled and said, \"You're such a nerd.\" I laughed. She placed her hand over my cock and said, \"With a huge penis.\" She giggled again.\n\nI said, \"I know. The huge penis part is the only reason you love me.\"\n\nShe pinched my glans and said, \"You're such a jerk too.\" I flinched from the pressure of her fingers and she relented. We were asleep in minutes. "
    ],
    "authorname": "BigZeke13",
    "tags": [],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/pool-boy-ch-28"
}