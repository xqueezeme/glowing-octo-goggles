{
    "title": "You Don't Know Me But We Are Lovers",
    "pages": [
        "This is my submission for the Valentine's Day 2019 contest. A great big thank you to Selene for her encouragement and for offering to beta-read this story for me, as well as for having been so kind and thoughtful in her correspondence about my earlier work. To each and every reader who has reached out to me or may do so in the future, I am deeply grateful.\n\n***\n\nThe shrill sound of Amber's alarm clock went off exactly as scheduled, hammering its way through the last vestiges of a disturbed dream like a siren going off. The dull thud of a headache pulsed and spread through her body; the tail end of a physical trauma anxious to be cured by the early light of dawn. It was not the way she wanted to wake up that morning but it was the morning she had been given.\n\nStill, as a foggy morning disorientation cleared from her mind and she became conscious of the day's agenda, Amber leapt from her bed and scrambled to start a hasty cup of coffee. She zipped past her suitcase, packed and sitting squarely in the middle of the living room, pulling off her clothes as she went and darting into the bathroom for a rushed shower.\n\nGiving herself one moment of pause to relax beneath the soothing warmth of the jets, Amber stood amidst the hissing cone of water and toured the deep abyss of her own thoughts. She reflected on how much she hated Valentine's Day. A day designed for a celebration of all the things she wanted for herself but could never manage to find. A day for lovers. A day for the elusive acceptance of who she was and how she felt about another woman. A day for the freedom from a dark loneliness that gnawed constantly at her mind, forever cementing a life of longing and sadness.\n\nShaking off these somber thoughts, Amber worked to restore the resolve and determination she had to escape from it all this year. Amber had taken enough time off to manage a brief getaway, leaving behind a day not made for her while she soaked up the glorious Caribbean sun. Her present accumulation of airline points gave her just enough for Jamaica. Granted, this held the risk of witnessing other couples' seaside romances playing out like a cruel punishment. However, it held just as much potential for a quiet escape on a remote stretch of beach where she could sink into a book and forget the world around her.\n\nBefore long she was drifting through the dark urban fjords of a still-sleeping city, imagining all the people inside the silent buildings, softly sighing in their cocoons of comfort and human companionship. The airport soon rose on the horizon with its gleaming windows, seemingly bitter to be awake at such an ungodly hour. She boarded her flight and was off, breathing a sigh of relief while she continued her ascent into the sky and watched the city lights slowly vanish below.\n\n***\n\nThe local news was already watching a developing storm, still far out to sea, but it felt like an unrealistic threat...\n\nThe fact remained: Jamaica was a little bit of heaven on Earth. Amber's modest villa was gorgeous. The sea almost came straight up to her window. Her bathroom doubled as a garden oasis. The whole resort was a wonder. -- It just wasn't precisely where she wanted to be. Not with the crowds of people wandering around like zombies marveling at the wisdom of snagging their discounted holiday packages. Instead, she wandered outside the boundary of that carefully constructed idyllicism in search of a more authentic experience.\n\nShe found it at the edge of town, along a scrappy stretch of beach where a group of men smoked ganja beneath a canopy of black, yellow, and green. They welcomed her enthusiastically and offered her some of their stash. She politely refused, instead recruiting their help in finding a good place for a bite to eat. They gladly pointed out a ramshackle spot nearby called \"The Jerk Shack.\"\n\nAs Amber ducked into the beachside joint, she found it amusing that she was neither indoors nor out, as the sand and the wood seemed to blur together and become one, surrounded by a cathedral of Red Stripe bottles and white rum in various states of near-completion. Throwing herself down at a table she realized that she had finally found the safe-haven she needed, far from the world.\n\n\"Hey-- wah gwaan,\" a man said, spotting her. The sole waiter, who was also the bartender, cheerfully arrived to hand her a laminated menu before returning to the glow of a small television at the far end of the bar. As Amber began to study the scant options, she suddenly felt eyes on her. Glancing up, she realized there was a woman in the corner, reclining in the shadows. The woman squinted at Amber, tilting back and forth on her chair with an air of amused reflection.\n\nAmber's flesh suddenly simmered with goosebumps.\n\nThe girl was attractive. Incredibly so. However, more than that, she seemed somehow familiar despite her mysterious presence in the dark corner of the room. Flowing hair cascaded over her bare shoulders, curling toward the tips like impetuous strands of seaweed as they reached the top of a sexy orange bikini. A long, tie-dyed wrap swooshed about her hips and draped over her legs like a flowing skirt. That expression of quiet confidence and reflective silence was incredibly alluring and filled Amber with an instant desire to muse about who she was and what she might be doing there.\n\nAttempting to return her attention to the menu, Amber remained alert and watchful, secretly hopeful that something would play out that would prompt an interaction of some kind -- any kind -- with the strange girl.\n\nThe bartender sighed, \"Well, dat storm ah-coming.\" He clucked and swiped a towel aimlessly across the bar, as if frustrated.\n\n\"Yeah, I know it...\" the girl in the corner lamented. Amber perked up.\n\n\"I just took down de boards an 'ere we go again,\" the bartender continued to grumble.\n\nThe girl glanced in Amber's direction and caught her observing. Amber quickly looked down at the menu again and realized she still hadn't absorbed what was offered there.\n\n\"Don't worry. It's a couple days out yet,\" the stranger added. The bartender nodded back to her apathetically. Amber realized that the two seemed to know one another. She felt the same pair of eyes on her once again. They remained there, unmoving, quietly watching. Under normal circumstances, she'd feel uncomfortable but she somehow became excited to have the attention, given her fascination with the woman.\n\nAmber heard the scrape of a chair leg on the floor followed by footsteps. Her heart started to race. The girl was approaching. She stopped, then stood there, hovering over Amber until she finally looked up. The face gazing down at her cracked a smile. She sat down across from Amber.\n\nFor the next several moments, Amber did not know what to do. It was intimidating and awkward to have such a beautiful girl sit there quietly, just watching as if expecting Amber to say something profound to a complete stranger. However, she couldn't look away. The girl had the most expressive, playful brown eyes, tempting, lush lips, and the cutest heart-shaped chin. Her hair looked like it had once been made of pure gold but, over time, grew delightfully tarnished through a life full of sportiveness and tireless adventure.\n\nFinally, the girl spoke. \"The jerk chicken is good, but you can get good jerk chicken all over Jamaica. What you want is this.\" She pointed to a picture on the menu in a grid of faded, artificially colored photos that likely did not resemble the actual dishes. \"Calypso Chicken. It's Zidane's specialty.\" The bartender-slash-waiter who was apparently now also the cook held his fingers to his mouth, then released them, kissing the air as if to describe how delicious it was. The girl continued, \"It's got this amazing pineapple salsa with thyme and allspice and lots of scotch bonnets. It's really hot\u2014 but not melt-your-face-off hot. You'll love it.\"\n\nStrangely, Amber had no doubt she would love it. It sounded a lot like a dish she often craved back in Crown Heights, Brooklyn where she sometimes went for Caribbean food. \"... Okay, I'll try it,\" she said, bewildered by the unsolicited suggestion.\n\n\"Good,\" the girl said. She turned to Zidane with two fingers in the air. \"And two rums.\" Zidane nodded eagerly and grabbed a half-empty bottle of Wray and Nephew. \"Try this. It's like... rotten bananas-- but in a good way.\"\n\nAmber laughed. \"All right... I'm skeptical but open-minded.\"\n\nThe girl grinned. \"I'm Gianna,\" she said, holding out her hand.\n\n\"Amber.\" They shook hands as two shots landed on the table beside them. Zidane casually left the open bottle sitting on the table as if granting them permission to accept liberal enjoyment of its contents.\n\nGianna raised her glass until it was eye level and then peered at it. \"You'll prefer the Jamaican stuff over the rest of the island rums. It's funky. It's nasty. It's a high-ester, hogo spirit with a flavor that's beautifully indescribable. They basically take a bunch of bacterial old rum and add it to the new rum to turn the liquor into some super-potent, smelly stuff.\" She took a swig and exhaled happily, then set the glass down on the table with a loud clack.\n\nAmber laughed. \"Boy, you really know how to sell a girl some rum...\"\n\n\"Just try it,\" Gianna said, smirking.\n\nAmber held the shot glass to her nose and inhaled. A wild, untamed odor of sweat, unripe bananas, a rancid nuttiness, and earthy funk flooded her nostrils and overwhelmed her senses. Amber's eyes shot open in astonishment but she still ventured a sip. It was funky, yes, but full of molasses and spice, fruity and strong, somehow containing all the sights and smells of the island, crashing together all at once. It went down like fire and continued to blossom in her throat, awakening her whole body.\n\n\"Wow!\" Amber exclaimed. \"You're not joking... But that's actually really good!\"\n\n\"See?\" replied Gianna, satisfied. \"If it doesn't reek, if it's not juuust on the verge of being undrinkable, it lacks the spirit of the spirit. Of the people that made it and the terrain it came from. Until you can taste the dedication of the producers, the toil, the history and pride of Jamaica, you haven't found what you came to the islands for.\"\n\nAs the potent drink worked its way into Amber's system she found herself beginning to become absorbed in this strange girl's presence. Deeper and deeper she went, lost in her eyes, in the insightful things she had to say about Jamaica and its people, hearing her stories and observing her passion for life and all of its adventures. Amber learned of Gianna's first visit to the island from a small Italian-American working-class community outside of Philly. She learned how quickly she fell in love with the place, later moved there, and settled right into the beauty and relaxed way of life.\n\nSitting there, eating a deliciously spicy dish, listening to Gianna and sharing her own stories in return, Amber began to feel a strange sensation; a captivation, a bond forming, perhaps even a need. She felt drawn to Gianna, instantaneously. The fierce beat of her heart signaled something powerful. So powerful she was afraid to even consider what was happening...\n\n\"So have you had a chance to explore much yet?\" Gianna asked. \"It's such a beautiful place, there's so much to see!\"\n\n\"Not yet! Where should I go? I'd love your recommendations,\" Amber replied.\n\n\"I can do better than that. How would you like a little tour?\"\n\n\"Great!\"\n\nAmber finished her meal, quickly paid, and then hurriedly joined Gianna for an opportunity to spend more time together and learn more about the splendors of Jamaica.\n\n***\n\nGianna led Amber by the hand down a small trail behind the restaurant, peeling back wide blades of tropical vegetation that seemed to tap them on the shoulders and demand attention as they passed by. It wasn't long before the forest opened up before them. The tropical climate of the island produced an impressive array of flora, much of it colorful and bursting with species of fruit that Amber had never seen before. She kept pace with her mysterious new friend whose excited gait reflected the same giddiness Amber felt upon witnessing such an explosion of lush vegetation.\n\nFor some time, Amber remained absorbed in Gianna's narration about the exotic wonderland that flourished around them, pointing out species of birds, indicating which plants were edible, and describing the long walks she often took to enjoy an abundance of natural beauty. The forest canopy filtered a sparkling green light down upon the shadows, casting everything in a magical sheen. It was a private tour that Amber would have welcomed from anyone but seeing the world through Gianna's eyes, full of such enthusiasm and awe, made it that much more appealing.\n\nAmber had no idea where they were going but she savored a pure moment of not caring. One thing was for sure, civilization was never too far away, as was evidenced by the sudden ringing of church bells from a chapel out there somewhere amidst the fiery poinciana and swaths of white bougainvillea.\n\nGianna stopped short and perked up. She listened to the bells for a moment, then turned and faced Amber with a twinkle in her eye. She seemed to recognize the musical tones of the distant chimes\u2014 as if they meant something more to her than the crystalline beauty of their sound.\n\n\"Wanna see a neat trick?\" she asked, excitedly.\n\n\"Sure,\" Amber replied.\n\n\"Okay, we have to hurry though.\"\n\nGianna grabbed Amber's hand again and rushed her through the dense forest, clearly on a mission to reach some specific destination. It turned out to be a small clearing at the center of which grew a large tree with round green fruit, much too high to reach. She deposited Amber there and then rushed to stand beneath its leaves. Amber looked at her with a perplexed expression.\n\nWith a finger to her lips, Gianna gestured to Amber to remain there in silence and wait for something. Moments later, an explosion of yellow-billed parrots invaded the sunlit circle, pouring in from all over and flocking to Gianna's tree. They gathered there with their green bodies and bright, banana-colored beaks, chattering excitedly and flashing their wings en masse. They were a comically noisy bunch, apparently with much to say to one another as they paused there for a moment immersed in a cacophonic dialogue.\n\nBefore long, a small faction of birds launched from the tree as if growing weary of the repetitive conversation. They streamed back into the sky, prompting a hurricane of feathers as the rest of the group raced after them. Within seconds, the tree was shed of every last one of its brief companions.\n\nGianna seemed to prepare herself for something, ducking low into a defensive position and lifting her wrap to stretch it out flat in front of her. All at once, the strange green fruit began to rain from the tree, knocked loose by the departing birds. Gianna began to laugh and dart left and right, capturing one after the other as they tumbled into her net.\n\nAmber was captivated. It began to sink in just how perfectly in tune this beautiful girl was with her environment. It was as if the world had been personally cultivated by and for her, everything being just so. Nothing was ever out of place.\n\nStanding there watching Gianna, feeling swept up in the magic of her presence and never wanting to leave, Amber began to see Gianna like some version of a Caribbean goddess. Perhaps she was Calypso herself, after which her lunch had been cutely named. Amber felt like Odysseus, trapped on Ogygia, being the sole recipient of Calypso's feminine charms. Only, in this case, Amber didn't feel trapped at all. She'd have been happy to stay there in Gianna's presence for all eternity, developing a shared love that secured for them a blissful immortality together, alone in that island paradise.\n\n\"Neat, huh?\" Gianna laughed as she raced over to Amber, bearing a multitude of gifts. \"That's a guinep tree. The fruit is a bit like a tangy lychee.\"\n\nThey found a spot in the sun and sat down with the pile of fruit trapped in Gianna's colorful wrap, hiked up for use as a makeshift basket of sorts. Amber mimicked Gianna's actions as she split open the green skin and peeled it back, revealing the creamy orange pulp inside. With an air of innocent eroticism, they sucked on the juicy flesh inside, tasking a little sour and sweet. Soon they found themselves drenched in citrus juice and sweat, surrounded by the scattered remnants of fruit peels that lay like strips of confetti littering the streets on the morning after a parade.\n\nA sweltering heat was on the rise and both Gianna and Amber were beginning to feel its effects.\n\n\"I have an idea...\" Gianna said.\n\n\"What?!\" Amber asked excitedly, revealing her growing ambition to spend the entire day with her new friend.\n\n\"There's a place I like. It's a little remote and sometimes empty. Right by the beach.\"\n\n\"Let's go! This was fun. I'm ready to see more of the island through your eyes,\" Amber said, standing up and offering Gianna her hand.\n\nGianna grinned and hopped to her feet. Soon they were off, launching into their next adventure together.\n\n***\n\nThe two girls arrived at a secluded spot where the beach began to curve and swiftly vanish around an arc of dense forest. Amber stopped when Gianna stopped, having the immediate sense that this was a spot quite familiar to her new friend. Amber took a moment to observe her surroundings, absorbing the sight of dark green leaves swaying in the breeze, a peaceful grove of palm trees, the flat blue plain of water, and an occasional empty crab shell shattered by a hungry seabird. In the distance, at the forest's edge, a thin Jamaican man quietly hacked away at a small coconut, whistling happily to himself to the tune of an old Bob Marley song pouring from a small radio set on a nearby rock.\n\nGianna turned and cupped Amber's face all of a sudden.\n\n\"If I ask you to do something with me, will you?\" she asked.\n\n\"Huh?\" Amber said, snapping out of her peaceful enchantment.\n\n\"Do you trust me?\"\n\n\"... Sure. I guess.\"\n\nExcited, Gianna took a step back. A wicked smile began to curl on her lips. \"Great. Then we're going skinny dipping,\" she said matter-of-factly.\n\n\"Wait, what?\" Amber gasped.\n\n\"Let's swim in the nude together. Right here!\"\n\n\"But... this isn't a nude beach! ... Is it?\"\n\n\"Nope.\"\n\n\"And there's a guy right over there!\" Amber laughed, pointing to the man in the coconut grove.\n\nGianna chuckled. \"Who? ... Jean-Baptiste?\"\n\n\"You know him?\"\n\nGianna shrugged. \"Sure. He's harmless. I've been friends with him for three years. I asked him to open some coconuts for us.\"\n\n\"Huh? When?\"\n\n\"It doesn't matter. Anyway, he'll keep watch. Besides, I don't expect anyone to come through here for another hour at least.\"\n\nAmber laughed nervously. \"How would you know that?\"\n\n\"I have my ways...\" Gianna said, mysteriously. She reached down and undid the wrap at her waist. The long splashes of color collapsed into a heap at the base of her feet.\n\nAmber's heart started racing as she realized that Gianna was serious. She froze, captivated by the sight of Gianna's lithe body standing there in a brilliant orange bikini, knowing that in a matter of moments it too would be lying there in a pile of clothing beside a row of freshly painted toes.\n\nGianna locked eyes with Amber in a fit of magnetic sexual tension. Amber was barely aware of the movement of Gianna's hands as she reached backward to pop the hook of her top. Gianna's breasts came free and settled into place as she tossed their former covering to the sand. She smiled softly and swung her head about, letting the soft curls of her hair dance across her rubied nipples. Her coral pink nubs were smooth and glossy, shining in the sunlight with their impish presence.\n\nAmber gawked at Gianna with a mixture of quiet jealousy and delirious arousal, haunted by the soft, smooth curve of her gently sloping breasts and the excited nipples that stood out at the tips, tickled by the warm tradewinds. Gianna seemed to relish Amber's devout attention, moving with a teasing slowness to advance toward the next step in her act of disrobing. Amber followed Gianna's hands down toward her hips, past two gold hoops that connected the skimpy front and back pieces of fabric, then sliding across the tight orange bikini bottoms that stretched snuggly between her thighs. The thin material puffed out slightly at the soft mound of her still-hidden sex.",
        "Amber shivered with anticipation as she watched those same hands begin to slip under the stretchy fabric and lift it away from the secrets it guarded. She shivered with anticipation at the fact that she, too, would be expected to remove her clothing until she was standing there naked and exposed before this sea-goddess of a woman, not knowing what her companion would think or how her own body would be judged.\n\nGianna's fingers traveled down over her thighs, carrying with it the flimsy last piece of clothing that remained on her body. Within an instant, a smooth, dark patch of fur emerged behind the colorful swimsuit, followed by a lovely, feminine cleft that blossomed between her legs; its inner rosiness just barely visible in the most seductive of ways. Gianna's legs rose and fell as she stepped free from the last constraints of her clothing and stood there like the Aphrodite Anadyomene, having been born from the sea and carried to shore in a scallop shell.\n\nAmber's childhood flashed through her mind. She was only a young girl when she traveled with her family to Paris, her first time abroad, and laid eyes upon the Birth of Venus at the Mus\u00e9e d'Orsay. She remembered the wonder she felt witnessing that perfect spectacle of feminine beauty, the goddesses' calm demeanor somehow depicting an awareness of, but perfect comfort with, the frank display of her own nudity. She remembered that, upon absorbing herself in the curve of that classic body, the blossoming of her young breasts, and the graceful intimacy of her vulva, something inside her was beginning to awaken, even if it was just a whisper carried across oceans on that same wave that delivered the goddess to womankind and heralded her arrival.\n\nGianna began to laugh. \"You look like you've just seen a ghost,\" she remarked, somehow savoring the strangeness of that word.\n\n\"Oh... sorry... I've just never skinny-dipped before!\" Amber said, snapping out of her trance and crashing into her own embarrassment.\n\n\"That's okay. Take your time.\" Gianna relaxed comfortably to one leg, cocking her head to the reverse side of her tilted hips and examining Amber's profoundly enticing insecurities. She seemed as though she was a titillated observer awaiting the start of a burlesque show.\n\nIt had been a while since Amber subjected herself to the interest of another woman. As deeply aroused as she was, driven to butterflies and waves of dizzy excitement by the sight of Gianna's unclothed body, she was just as nervous to be bearing her own breasts to her companion. Even more so about the exposure of her intimate sex, just like every time she undressed in front of a lover for the first time and watched with anxiety as they laid eyes upon her mons.\n\nIn no hurry to undress, Amber remained glued to Gianna's curious and wandering eyes. With slow, deliberate movements she undid the buttons on her shorts and practiced the removal of her shirt in her mind. Upon generating a sufficient amount of courage, and confirming that Jean-Baptiste was still absorbed in his routine at a safe distance, Amber slid the soft cotton t-shirt up and over her head and allowed it to drop onto the pile of clothes that Gianna had started.\n\nAlthough the beach was otherwise empty, Amber already felt naked standing there in her bra. As soon as she slid off her shorts, a dizzy feeling sent a tremor through her body. Somehow, Gianna's soft gaze seemed to calm her, however. Although Amber's lack of self-confidence often challenged her observations, Gianna's expression nevertheless had the appearance of awe. The same awe that Amber directed at Gianna herself.\n\nSucking in a deep breath through her teeth, Amber wondered one last time how she could possibly have ended up in this situation, so strangely and so suddenly, before she began to attend to the removal of her bra and panties. As she reluctantly embraced her own nudity, the breeze quickly assaulted her body, slipping into nooks and crannies where she had longed to be touched. Amber looked down at her own body, at the spirited protrusion of her perky breasts, toward the dark well of her bellybutton, and down to the soft brown fuzz of her sex where the first tingle of excitement began to defy an overwhelming sense of anxiety.\n\nGianna seemed unfazed. In fact, she seemed more relieved than ever, as if she had been under water the whole time and only now was able to breathe. A dreamy look washed over her face as she became briefly absorbed in the sight of Amber's body. For the first time ever, Amber felt all her guards float away. It was as if she was being looked upon by a lover that had already traveled to the depths of ecstasy with her and back again. It was a look of comfort like one feels when returning home after a long voyage away in a strange and distant land.\n\nSatisfied with their mutual nakedness, Gianna turned and headed toward the water, revealing the long, winding curve of her back, accentuating its length and sensuality. As she skipped happily into the water, Amber watched her soft buttocks, perfectly rounded and peachy, with a cheerful wobble. Her cheeks were smooth and polished like pearls, no doubt having been in and out of the sea like that many times and made lustrous by the endlessly moving waves.\n\nAmber ran after her, suddenly delighted by her own nudity like she were a small child all over again. She shrieked at the sensation of the loose bits of her body, now unconfined, free to bounce and jostle about in a manner that felt mildly scandalous. Gianna turned and glanced back at her, laughing at the sight of Amber's body awkwardly leaping over an expiring wave, entertained by the mercurial dance of her free breasts and the joyful sway of her excited nipples.\n\nAmber felt herself crash into a wave that instantly clothed her body in a cooling balm of spray and foam. She abandoned herself to it, launching into the ocean with a breezy serenity that she never would have imagined for herself during such a precarious activity. Together they swam toward the horizon for a bit until each was satisfied that their distance from shore delivered an aura of privacy to safely contain their merriment.\n\nThe wide blue sea suddenly swallowed Gianna's musical laughter as she swept herself under the gentle waves, becoming nothing but a faint glimmer beneath the surface. After a moment, she reemerged with her eyes screwed shut and her long hair suddenly darker, smooth, and slicked down the length of her back. Small pools of water had collected beneath her eyes before they streaked down over her cheeks. For a moment, it looked as if Gianna briefly wore a mask of sadness that lingered there before the warmth of the sun restored the feverish amusement to her face and shattered that strange fa\u00e7ade. Another laugh bubbled up through her throat as she opened her eyes and returned to Amber's eager gaze.\n\n\"Are you going under?!\" Gianna blurted out.\n\nAmber grinned and dove beneath the surface of the water. Suddenly she found herself in a cool, endless realm of echoes where reflections of light expanded and contracted like webbing on the sun-bleached floor. She opened her eyes and saw the crystal clear image of Gianna's nude body hovering there like an angel suspended from the sky. Now and then her legs flicked back and forth, hoisting her briefly higher before she bobbed back down again. The soft mounds of her breasts wavered back and forth as if caressed by the ocean currents. Her body shone in the fierce Caribbean sunlight, save for the dark patch between her legs and the tendrils of hair that floated about her chin like a sea anemone.\n\nAmber broke back through the surface and caught sight of Gianna who seemed to study her with a quiet amusement. Embarrassed, Amber instantly wondered if she had lingered down there a little too long, revealing the fact that she had taken a peek while swept up in a moment of wonder and enchantment at her new friend's body. Gianna's arms began to move gracefully about her beguiling figure as she drifted nearer.\n\nGrowing nervous by Gianna's increasing proximity, Amber began to babble. \"So... do you do this often? I would have never thought I'd be--\" Gianna didn't seem to be paying any attention. Nearer still she advanced until she moved right up against Amber's body.\n\nThe first contact came from her lips.\n\nThey pressed firmly against Amber's, then softened. Amber breathed in deeply, her body arrested with shock. Then she relented as if some other force were moving through her, steering her toward someone she unquestionably desired.\n\nGianna's body pressed up against Amber's. Her soft skin produced a cocoon of warmth amidst the coolness of the water. Gianna's breasts strained against Amber's body as their kiss turned increasingly passionate. The firmness of her nipples excited Amber's own as their bodies became further entwined. Hands moved curiously over expanses of flesh. Tongues searched feverishly for one another. Below, in the depths of the ocean, a familiar tingling emerged even stronger, like a siren alerting Amber to her own wild arousal.\n\nWhen their kiss evaporated, it was as if it had been the most normal and expected thing in the world. There was such little concern in Gianna's expression nor surprise in Amber's, that it left Amber wondering if she had missed something. Some critical part of their conversation on the beach in which she may have professed to have suffered love at first sight. Had they met long ago? Were they already lovers? Because how could something like this have happened so quickly, so naturally?\n\nAmber shook off her confusion as Gianna exclaimed, \"Come on. Follow me. I want to show you something!\" She lurched forward and slipped into the blue depths, careening beneath the surface before entering a full crawl taking her further and further from shore. Amber followed, doing her best to keep up. In the distance, an object seemed to be bobbing there, only briefly visible now and then in the sparkling surface of the rippling ocean. As Amber grew nearer, she saw that it was a large wooden raft, moored to the ocean floor swaying gracefully about according to the whims of the sea.\n\nGianna hoisted herself upward, setting her breasts dancing happily about until she could place one knee on the bed of planks and pull herself the rest of the way up. She collapsed onto her back and stared up at the sky, her smooth stomach rising and falling as she huffed and puffed in order to catch her breath. Amber did the same, bracing herself for the brittle hardness of the platform but instead finding it feathery and soft, its fibers made smooth by salt, wind, and time.\n\nEnjoying her first moment of peaceful inactivity, Amber finally felt the completeness of her nudity dominate her awareness. Her body lengthened out across the platform, presenting itself uninhibitedly toward the wide expanse of blue sky. It felt glorious having no barriers between her soul and the universe, embracing and even delighting in the absolute vulnerability and openness she experienced at that moment.\n\nThe silhouetted figure of Gianna rose beside her. Amber saw that she had lifted herself up onto her elbow and smiled down upon her with an impish look, full of craving and seemingly fully aware that Amber shared it, no matter how guarded she was. For a few moments, they connected, saying volumes contained within a simple look. Amber knew exactly what was about to happen, yet she still could not believe it. Feeling the pull of tenderness between them, she smiled back up at Gianna, returning the sentiment and offering an implicit invitation to engage her new friend's obvious desire.\n\nAll of a sudden, Amber felt Gianna's body blanketing her own. The softness of Gianna's lips seemed to overtake her whole body, bringing with them a warmth and comfort that caused a gentle stirring from head to toe. She felt Gianna's hands tangled in her hair, her own body being cradled against another's. When Gianna touched Amber, she felt suddenly alive, as if she blossomed beneath the curious touch of those fingers and finally felt beautiful. Never before had another woman looked at her quite the way Gianna did, with that much intensity, raw fascination, and infinite wonder.\n\nGianna's kiss began to wander, first along the length of Amber's neck, and then down across her collarbone before finding its way to her lively breasts. She treated each of Amber's nipples as if they were precious jewels to be cherished and polished clean by Gianna's devoted tongue. The surface of the platform seemed no longer hard or opaque. Amber was sinking, drowning in the sweetness of Gianna's eager attention. She closed her eyes and felt the drying coils of Gianna's long hair dragging lazily across her body as she began to enjoy the soft hollow between Amber's breasts.\n\nIt did not stop there, however. As Gianna slid her hand along Amber's soft inner thigh, she felt her body become suddenly inflamed. A look of intense longing spread across Gianna's face as Amber began to widen her hips and invite her lover to peruse the spectacle of her intimacy. Gianna sighed softly. For the first time, Amber felt her trembling. She reached up and caressed Gianna's curls lovingly.\n\nAmber, too, was trembling as Gianna spread apart her glossy flesh revealing the manner in which Amber's body was already saturated with an aching impatience. She quietly moaned as two fingers slipped readily over her silken offering, exploring and caressing her body with bold ambition. She felt herself giving her body over to Gianna willingly and fully, enjoying the sensation of a continued exploration as their lips reconnected. They moved together, achieving a fluid harmony, finding themselves instantly in tune with one another's desires.\n\nAfter some time, Gianna moved back down over Amber's body with an earnest and silent hunger. Amber's body seized up as she felt the resurgence of Gianna's pure devotion between her legs, driven wild by the soft suction of her delicate lips upon her most sensitive parts. She felt suddenly flustered and mixed up as she stared toward the sky.\n\nSeagulls passing overhead. A sweeping tongue. Streaks of white through the blue sky, zipping past the sizzling orb of the sun. Her burning clit. Signals began to fire through her body like small torches being lit. The aimless rocking of the platform beneath her body made her feel like a moving, fluid tendril of fire.\n\nThough she could make no sense of it, Amber discovered that Gianna inexplicably knew what techniques she liked best. After a symphony of sweet kisses, nibbles, and the friskiness of her tongue, Gianna took a smooth inhale and then amused herself with a gentle humming against Amber's triggered clit. The soft and playful buzzing of her deep vibrations sparked an intense pleasure that made Amber giddy with laughter. Her body flooded with endorphins, responding to Gianna's whimsy and sensual attention.\n\nAmber found herself experiencing a confused elation, startled by Gianna's use of an obscure technique that had long been a secret favorite, known only to her most successful partners. It somehow delivered the satisfaction of a vibrator, enhanced with the intimacy of a woman's erotic touch. Gianna amused herself with this task as if she possessed questionless knowledge from an ancient oracle about the most secret keys to unlocking Amber's body.\n\nEventually, Gianna carried Amber's pleasure back to her lips, returning with a kiss that was laced with the erotic perfumes of her own body. It lingered there for a few moments before being interrupted by a pleading look that arrested their passion. Offering little hesitation, Amber guided Gianna onto her back. Throwing caution to the wind, she gave in to the sureness of her feelings and descended upon her lover's body. Amber drowned herself in the softness of Gianna's welcoming breasts, dotted lightly with goosebumps from the warm breeze. Her skin was incredibly soft to the touch, having dried and been graced with a powdery layer of fine salts.\n\nAmber descended further, anxious to come to know Gianna in the deepest and most personal way. She gladly revealed her sex, offering herself to Amber's inclinations. As Amber moved in toward Gianna's body, the warm glow of the sun bloomed across her back. Full of yearning, Amber delighted in the loveliness of Gianna's glistening pussy. The emergence of her slippery pink flesh and pearly sheen had the appearance of a freshly opened seashell. It was seductive and beautifully fragrant. Amber buried herself tenderly in Gianna's depths, enchanted by the exquisite wonders of her body.\n\nAmber allowed herself to enjoy Gianna's private treasures with enthusiasm and without any shame at how quickly things had developed between them. She found the taste of Gianna's natural liquor to be earthy and feminine, mixed with the still-present salt-brine of the ocean. Gianna made no secret of the vast wellspring of pleasure she had to offer, emerging from within her body like a rising tide and then winding through her writhing body like a wave crashing into the shore.\n\nIncreasingly intoxicated by Gianna's fervent craving, Amber unleashed all her pent-up frustrations, navigating the sweet recesses of Gianna's body with a boiling-over of passion that sent Gianna into a crisis of indulgence. Then, upon having received her fill, Amber went searching for Gianna's lips until the two rejoined there, feverish and alone with their mutual want.\n\nAs the tempestuous sensations grew and threatened to flood the banks of their bodies, they continued to stroke each other, their jaws quivering, their lips desperate to reconnect but blocked by a persistent need to gasp for air. They strained against one another, absorbed in the intensity of liquid fingers zipping back and forth across each other's clits.\n\nAmber moaned into Gianna's shoulder, where she sought fruitless refuse, but a storm was about to strike. It rendered her briefly immobile upon reaching its precipice, then quaked through her body with an agonizing intensity. Gianna, too, was rendered helpless against Amber's body, both of them entangled and rattled by one another's all-consuming fire as it raged throughout their bodies.\n\nThen, just like the calm following any storm, both collapsed into a strange cone of silent recovery. Side by side they lay, their hands still touching, still clinging at the other's presence as if unwilling to let go of the lingering memory of release whose echo still buzzed softly through their innermost muscles.\n\nA long stretch of passing silence complemented a moment of perfect companionship. \"We'd better get back to shore,\" Gianna finally whispered, disturbing the perfect stillness of what Amber had convinced herself was pure fantasy.\n\n\"Noo, I don't want to leave,\" Amber lamented, inspiring chuckles from her friend. She rolled her head to one side and gazed out across the ocean, feeling perfectly safe and satisfied with Gianna by her side, surrounded by an endless cerulean expanse and a shimmer of gold that happily glimmered across their bodies.\n\n\"Okay, we'll just wait for the beach to fill up with tourists then.\"\n\n\"Ack! Okay, let's go,\" laughed Amber, bolting upright.\n\nWith a snicker, Gianna squatted at the edge of the platform and dove into the sea with her upper body forming a perfect triangle. Her body wavered beneath the surface like a passing dolphin as she made her way back toward the shore. Amber quickly dove in after her, crashing through the surface like a rocket and feeling a swarm of tiny bubbles swirl about her naked body, tickling her from head to toe.\n\nWhen they reached the shore, Gianna strutted calmly out of the ocean and into the warm breeze as Jean-Baptiste approached holding two coconuts with straws poking out from the top. Amber watched with envy at the bold comfort Gianna had about her body. Lacking the same courage, she rushed quickly out of the water, sheepishly covering her breasts and pubic area with her hands. However, as Gianna accepted one of the opened coconuts from the man, Amber discovered that he seemed unfazed by their nudity and perfectly respectful.",
        "He cheerfully offered the other coconut to Amber. Forced to let down her guard, Amber reluctantly abandoned her modesty and reached out to accept the gift. He didn't even glance at her body. Rather, he seemed more interested in deciphering Amber's reaction to his handy-work as she held it to her mouth with both hands and took a sip from the straw. Jean-Baptiste seemed pleased when she smiled at the taste.\n\nAmber laughed, \"He added rum, didn't he?\"\n\n\"Of course!\" Gianna said with a laugh and a wink.\n\nProud of his accomplishment, Jean-Baptiste turned and hurried back to the edge of the forest, returning Amber and Gianna to their privacy. They took a seat in the soft sand and finished their drinks, laughing about what they had just done together, way out from the shore on a distant floating object that was just barely visible to them now.\n\n\"Oh my god, our butt cracks are gonna be so caked with sand...\" Gianna eventually groaned, shifting from side to side.\n\nFinishing her drink, Amber leapt to her feet with a laugh and turned to look over her shoulder. Gianna chuckled at the thin, powdery layer of sand that coated both of Amber's cheeks. She reached up and quickly brushed everything off Amber's bottom, then stood up, turned, and let Amber assist her. Amber eagerly swiped her palm across the soft flesh of Gianna's buttocks, brushing the thin layer of sparkling dust back to the ground. They quickly got dressed and turned to head back the way they came, along the water's edge.\n\n\"Head's up, Jean-Baptiste! Good luck!\" Gianna shouted, pointing back toward civilization as if she saw someone coming\u2014 but there was no one there. Jean-Baptiste smiled and waved to them, then quickly hoisted up a homemade sign depicting his fee for freshly cut coconuts.\n\nNot two minutes down the beach a small group of thirsty tourists emerged, headed toward Gianna's favorite spot with its tempting oasis of natural seclusion. She waved to them, smiled, and tugged Amber by the hand until the spangle of their excited voices vanished into the distance.\n\nThe rest of the day had raced by like a dream. Amber and Gianna romped around town, taking in the sights and sounds, sampling the street food, and stopping to listen to local musicians with dreams of becoming the next reggae sensation. But like all good days, it inevitably began to come to a close. Amber made her way back to the resort full of excitement for the new one, having made plans with Gianna to wake up early and drive out to a coffee plantation.\n\nStill, the lovesick pangs in Amber's heart made the night unbearable and the distant approach of morning that much more welcome.\n\n***\n\n\"I'm so excited!\" Amber trilled as the dirt road rumbled beneath their small rental car. Gianna glanced over at her from the driver's seat with a wide grin. \"This is, like, one of the main things I wanted to do here!\"\n\n\"Blue Mountain coffee is some of the best fucking coffee in the world!\" Gianna exclaimed with great enthusiasm.\n\nAmber laughed. \"It's like you know everything about me, even though we just met!\"\n\nGianna smirked for a moment, staring silently out along the long road ahead of them, just waking up to the early morning sunlight. \"I must be psychic...\" she joked with a twisted grin. \"Have you never been to a coffee plantation before?\"\n\nAmber excitedly recalled one of her childhood memories. \"Once, when I was a kid,\" she explained, \"we went to Kona on the big island of Hawai'i after my grandparents retired there. I just remember seeing where King Kamehameha lived and seeing the heiau temples. I got to swim with manta rays and green sea turtles! I thought I'd died and gone to heaven...\"\n\nGianna grinned at her.\n\n\"I think that was my first time actually tasting coffee,\" Amber continued. \"We visited a coffee plantation and I had some. I don't know if it's the minerals in the volcanic soil, or what, but I've never had coffee like that since.\" She gazed out the window at the majestic mountains, lush with dense forest and dotted with small wooden cottages. \"I feel like you have to visit a place like this to really experience coffee and appreciate the work that went into it and the place it's grown.\"\n\n\"Well, part of it is that many people aren't used to drinking single-origin coffee,\" Gianna suggested. \"That's when you can really taste the earth that it--\"\n\nTheir conversation was abruptly silenced as the shrill cries of agitated birds erupted all around them. With a look of horror on her face, Gianna hit the breaks and the car screeched to a halt. Amber was confused at first but moments later a thunderous booming was followed by a series of large rocks tumbling down the mountainside.\n\nAs they crossed the road in front of them, Amber exclaimed, \"Whoa! You have great reflexes! I didn't even see those coming!\" She laughed nervously and glanced back at Gianna. She was frozen, clutching the steering wheel, staring at the rocks. Amber noticed she seemed especially rattled.\n\n\"Gianna?\" Amber asked with concern.\n\n\"Sorry... Um... Yeah. I've heard of falling rocks and mudslides up here. You can never be too careful,\" she said after a few moments of odd silence.\n\nGianna slowly turned the car around and took a different route. However, the incident seemed to leave a scar on Gianna's psyche for the next hour or so. It wasn't until they reached their destination that Gianna finally began to shake it off and throw herself back into their shared adventure with gusto.\n\nBefore they even reached the coffee plantation, Amber spotted a nineteenth-century estate house rising from the foliage of its perfectly-landscaped gardens. As they approached, stepped out of the car, and admired the gorgeous vista provided by a scenic overlook, Amber discovered a whole other dimension to the island. The misted mountaintops, majestic and mysterious, were full of character and beauty.\n\nThere she learned how labor-intensive the task of coffee production is, requiring the complete involvement of the rural mountain communities, and her respect for the industry deepened. She learned how the elevation impacted its grade and labeling. She learned how the berries were picked by hand and floated in water, then discarded if there were any signs of insect damage. They examined the holding tanks, observed the washing process designed to remove mucilage, and learned about the concrete slabs used for drying.\n\nBest of all, after a brief explanation of how the finished product was certified by the Coffee Industry Board of Jamaica, they set about tasting the various grades and roasts themselves. The Peaberry-grade coffee was steaming hot, rich, and earthy, with notes of cocoa and spice and a nutty creaminess. It was clean, without any harsh bitterness.\n\nAmber and Gianna bonded over each cathartic sip of coffee as if it were roasted just for them. Surrounded by the breathtaking flora and the distant view of an azure bay, there was nowhere in the world that Amber would rather have been, nor anyone else she'd rather have shared that experience with.\n\n***\n\nThey didn't return from the mountains until dusk was beginning to settle in. After toying with the idea for a while, Amber decided to invite Gianna back to the resort. It felt strange for her to cross that threshold which had previously been a boundary between two experiences, especially on Valentine's Day itself. On one side had been a world unknown to her; one of happy couples sharing their love on a tropical getaway. On the other, a means of escape from all that.\n\nHowever, the two sides had become one. The lines were blurred. Inexplicably, Amber felt that she'd returned to the resort possessing the proper attire for entry into an exclusive club. She knew the secret password. It was a name: Gianna.\n\nAmber's heart fluttered as they conversed excitedly throughout dinner, knowing that the sweet dessert they concluded with was the last stop beyond which lurked something even sweeter. She wondered if Gianna would ask to go back to her room or if she would be the one to propose. What would they do when they got there? Talk for a while? Trade more stories, share more theories about the world? Or would they be back at each other's lips the moment the door closed and enshrined them in a secret chamber of unchained infatuation?\n\n\"Can I see where you're staying?\" Gianna asked, patting her full stomach and answering Amber's pondering with a transparently sly grin.\n\n\"Of course!\" Amber replied enthusiastically.\n\nThe moment they entered Amber's cozy villa, Gianna swept through the room as if she herself were returning to the comforts of home. Feeling insecure, Amber briefly wondered if she'd gone back to other girl's rooms before but dismissed the sentiment as foolish anxiety. Gianna's fingers danced along the perimeter of the bed as she circled around toward the little door that led into the bathroom oasis.\n\n\"Hurry! I really have to pee!\" she laughed.\n\nAmber quickly followed, emerging into the secluded pocket of wilderness where inquisitive vines, dazzling flowers, and stone masonry delivered an air of luxury to the open-air toilet and shower. Gianna rushed to lift the lid, spun around, and yanked down her panties as quickly as she could. She threw her head into her hands, releasing a long, satisfied sigh which soon shifted back to her musical laughter. Even the delicate tinkling sound that soon skittered against the walls sounded musical.\n\nGianna stood back up and slid her underwear back on, then moved through the foliage like a cat on prowl until she reached Amber's side. She threw her arms around Amber with a sigh of relief.\n\n\"Feel better?\" Amber laughed. Gianna nodded eagerly. Despite knowing the reason for the embrace, the manner in which Gianna lingered there gave Amber the impression that she herself was the true source of her companion's relief. She returned the gesture, slipping her arms around Gianna's waist until they settled against the soft roundness of her backside.\n\n\"After everything we did today, I'd like to take a shower,\" Gianna whispered, flashing her eyes up at Amber. \"Will you join me?\"\n\nAmber grinned, finding there to be no need to even reply, as one seemed equally as eager to lead the other back into the bedroom and over to a small armchair tucked into the corner. There they quickly undressed, discarding articles of clothing as if finding them useless and obstructive. Gianna's stunning body emerged joyously from beneath those garments, a celebration of all that was beautiful and feminine.\n\nWith an innocent laugh, Gianna skipped back outside dragging Amber by the hand, desperate to greet the evening air with their shining nudity. The whole garden was a crepuscular delight, glimmering like the backdrop of some bewitching fairy tale at the center of which gleamed two amorous bodies charmed into each other's arms by means of a sorceress' spell. Amber discovered the bright moon smiling down upon them, turning Gianna's flesh a celestial silver as if it had adopted the lustrous patina of that far-off orb.\n\nExcited by the prospect of an intimate encounter beneath the stars, Gianna continued to lead Amber by the hand until they gathered beneath a wide shower head. She turned the knob, filling the coverless room with a gentle hissing sound. They stood there in the mist, breast to breast, like two tall trees holding firm in a sudden rain shower, listening to the patter of water against the nearby leaves and the nocturnal prattle of curious birds eavesdropping overhead.\n\nFinding herself flooded with a growing arousal, Amber shifted distractedly in the well of smooth stones massaging the soles of her bare feet, her toes clutching one or two as if intent upon squeezing the excess urges from her body. Together they shared a warm caress as the high parapets of the walled garden enclosed them in the perfect solace of their steamy communion.\n\nSlowly, tenderly, the task of becoming clean together turned into an act of lovemaking. The long, sensual strokes of each one's hands upon the other's soapy body became imbued with an emergence of craving. Long trails of shiny bubbles mapped a course of where they had been and of what they had enjoyed. Serpentine tendrils of warm suds slid between Amber's breasts, traveled leisurely down the plain of her stomach, and vanished between her legs until Gianna's curious fingers sought for their destination.\n\nAs she lifted one leg to expose her sopping sex, Amber felt her back suddenly arch against the unyielding wall, as cool and smooth as slate. Gianna had begun to help herself to Amber's simmering mons, worshipping it with all her senses and working it into a frenzy. The tease of her tongue, her lips, and her warm breath sent Amber reeling and eager to return the favor. They soon switched places, offering each other a smoldering look as they made themselves interchangeable in the twilight.\n\nAmber sated herself on Gianna's slippery flesh, no longer in need of any artificial lubrication from the soap. She dragged her body up along Gianna's until she felt the kiss of her lover's nipples upon her own. Amber plunged her fingers deep into Gianna's body in a desperate attempt to coax out the source of Gianna's absolute delectation. Gianna seized up and let out a long moan until Amber absorbed it with a kiss.\n\nThey continued like that, frantically trading their love back and forth like a precious gift passed between them. It was a battle of wills; who could express their affections the longest, the hardest, the most sincerely. It ended in a draw amidst the desire to rush back inside to dry off and carry their discomposure to the bed.\n\nAmber rushed to the mattress where she lengthened herself across the cool sheets. Her happy breasts, sparkling eyes, and widening lips expressed her best come-hither look. She languished there, overwhelmed with butterflies, waiting for Gianna to come and further unleash her playful side. Gianna's catlike movements came alive as she stealthily made her way toward the bed until she descended upon Amber with open arms and cradled her against her chest. Amber couldn't decide if she wanted to kiss or suckle, so she did both, delighting herself with Gianna's sensitive, rigid nipples.\n\nAnxious to resume the task that had been briefly interrupted, Amber then returned her loving attention to Gianna's pussy which she willingly offered. Amusing herself with the ardent wriggle of Gianna's body, Amber gave her partner a spirited pursuance, happily rendering Gianna helpless and weak. Despite all the scents and flavors of the island, from the tart citrus fruits, to the fragrant flowers, to the freshly roasted coffee, and even the delicious salt-stain constantly lacing her own lips, nothing compared to the intoxicating experience of Gianna's intimacy; fragrant beyond fragrant, the depth and savor of her sex somehow expressing her vivaciousness in all its glory, distilled as it was to that earthy oblation.\n\nGianna was all too ready to exact her sweet revenge, subsequently drowning herself in the warm humidity of Amber's sex and fully engaging her with the determined lashes of a playful tongue. Amber slid her hands over her body, over her breasts, and then clutched at the pillow behind her. Her body moved in one ongoing undulation, suffering the crisis of Gianna's immeasurable hunger. Amber bit a swath of her own hair and moaned through her teeth, feeling her tension build and release in explosive cycles.\n\nAfter some time, Gianna sat back up and began grinning deviously. \"I have an idea...\" she said, as Amber lay there unraveled by their prurient frolic.\n\nGianna leapt out of bed and headed straight for Amber's small suitcase. She reached into the bag, fished about for mere moments, then pulled out a hard black case. Amber blinked with bewilderment as Gianna snapped it open. Amber had kept her travel dildo and a miniature bottle of lube in a nondescript capsule, safe from accidental damage and prying eyes. She remained startled by how little effort it took Gianna to locate something she could only have assumed was there.\n\n\"Found it!\" snickered Gianna, before rushed back to the bed. Amber blushed a little with embarrassment. \"Don't give me that look,\" Gianna added with a belly laugh.\n\nBefore Amber could say anything, Gianna closed her lips with one finger and then set about removing the small, beaded glass dildo from its sheath. With a quick squirt of lube, she was ready to make Amber a slave to pleasure with some playful manipulations of that slippery object. Gianna began to slowly rub it back and forth over Amber's pussy, gliding it smoothly between her labia, up to the line of her pubic hair, and then back down again, forcing her lips to separate and then relax together again.\n\nThe teasing caused Amber to groan loudly. When Gianna was satisfied with her own level of amusement, she plunged the object smoothly into Amber's body. She began to writhe with pleasure, bucking her hips helplessly against the familiar toy, excited to enjoy its magic in a purely passive manner, for once. Gianna watched as Amber continued to moan and caress her breasts, wild with pleasure.\n\nOne by one the sticky glass beads sunk into Amber's body and then emerged again, popping free with a reiterative pulse. The row of pronounced, clear bulbs displaced the dim light, cycling between a sweet coral pink and beige flesh tones. Amber expressed a deep satisfaction as the firm, rippling form moved within her body according to the whims of her impish lover.\n\n\"Ugh...\" Gianna finally lamented.\n\n\"What?\" asked Amber.\n\n\"This is making me horny as fuck...\" Gianna confessed with a grin.\n\nAmber grabbed the toy from Gianna's hand and, with a growl, took control of the situation. Never before had she experienced her own desire in such a raw, wild state. She felt untamed like she was raised by wolves, knowing only how to communicate with savage gestures. She heard Gianna grunt as she thrust the glass cylinder through the recesses of her body, molten with a deep, tingling fire.\n\nThey began to meld together, anxious for each other's lips as Amber fucked her lover with her favorite toy and felt her fingers becoming increasingly sticky.\n\n\"Amber...\" Gianna droned as her body pressed madly against the disheveled bed. \"Fuck...\"\n\nGianna threw her head back and began to lose her senses, moving her head back and forth dizzily as her long hair scattered or clung to her face.\n\n\"Mmgh! Oh, fuck\u2014 yes! Amber!\" she cried out.\n\nAmber felt Gianna's body thunder beneath her, grinding frantically against Amber's hand until she crumbled into a blissful oblivion. Undeterred by the shock of an orgasm, Gianna's pleasure seemed to only make her passions swell. Abandoning the dildo, Amber spun into Gianna's embrace. Downing themselves in one another, they began to roll through the sheets, the anguish of love and lust driving their desperation to the limits.\n\nGianna frantically rolled backward and threw one leg open, inviting Amber's hips to lock positions with her own. Amber leaned back and moved up to Gianna's vulva, sliding her clit up against her lover's. Desperate to feel as close to one another as possible, they began a spirited tribbing, gazing deep into each other's eyes with the desire to witness one another's deep pleasure.\n\nBound at the hips by their physical lust and sealed in a deep gaze expressing the depth of a secured adoration, Amber felt herself overflowing with emotion. Her eyes began to dampen as she begged breathlessly for her lover's body.\n\n\"I'm so happy right now...\" she finally confessed between moans, \"I can't believe we ran into each other here! I don't even care about this trip anymore. I just want to spend more time with you.\"\n\nHearing Amber's outburst, Gianna lost control of her own emotions for a moment. Amber saw her eyes become watery, an experience that seemed to briefly frustrate her. Moments later, Gianna mumbled, \"Please don't freak out...\"",
        "\"What do you mean?\" Amber asked as their bodies continued to writhe hungrily together.\n\n\"I mean... I know you won't. Just... just listen and don't say anything. You don't have to say anything.\"\n\n\"What is it?\"\n\n\"I love you so much,\" she said, her eyes threatening to produce tears. \"I really do... I love you with all my heart. Hap-- happy Valentine's Day...\"\n\nAmber felt her body swell with emotion. She wondered what possessed Gianna to use that precise word so quickly, on what was effectively a first date. They'd only just met!\n\nAnd yet it put her on cloud nine. Amber found herself wanting to hear Gianna say it over and over again, as strange and unexpected as the remark was. Before she could even open her mouth for a reply, Gianna rose up and pressed her lips to Amber's, holding her tightly as their bodies continued to grind rhythmically together, hungrily seeking each others pleasure, driven to ecstasy by the wet, slippery friction of their pussies and the lingering scent of their combined femininity that hung in the air.\n\nGianna suddenly weakened, exhaling a warm breath across Amber's neck. \"Amber...\" she moaned softly before whipping her hips faster and faster. Amber could feel the sensations building in Gianna's body, as they were in her own. A storm rose up through her body in an instant. Clutching Gianna for support and security, she braced herself for the soaring release of all that had built between them since that moment they locked eyes at the restaurant.\n\nWith a gasp, Amber closed her eyes and cried out. Her body began to quake. She felt herself squirting, anointing Gianna's with the consummation of their voracious efforts. Their mutual orgasms crashed into each other in an explosion of heat and energy, one feeding the other with the blissful relief of an intense desire, the wide expanse of indulgence robbing them of any sense of control, obliterating all sense of identity, briefly enacting their beautiful devastation.\n\nA peaceful calm followed. The night was suddenly muted. All frustrations, sadness, and fear had fled from Amber's body as she lay there beside her loving partner, their fingers still gently engaged in quiet play.\n\nAll space between them closed as they entered the sanctum of each other's embrace. Together they softly submitted to the drunken, hazy fog of sex and sleep.\n\nThough it was more of a half-sleep, laced with wild dreams and infused with the scent of night-blooming flowers washing into the room, their bodies periodically soothed by the slow, regular crash of waves like a distant, natural lullaby.\n\n***\n\nThe following morning was an unwelcome one.\n\nNot only did Amber have to face the fact that it was time to fly home and leave Gianna behind, but the incoming storm had also increased in speed and was headed straight for Jamaica. The weather forecast had literally become dire overnight. Amber found that her original flight had been grounded and she was forced to transfer to the only other airline willing to take off for her to return to work as scheduled. It was a rather sketchy one and far from reliable.\n\nPart of Amber just wanted to dismiss all sense of responsibility-- to just stay there with Gianna in their island paradise. Gianna also seemed sadly resigned to the completion of their time together. It hadn't been long but Amber couldn't help but feel that it was something that needed to continue. Somewhere. Somehow.\n\nDespite a somber mood, they managed to get Amber packed and hung out by the pool to wait for a ride to the airport. Amber stared through the glassy surface of the water, down to the lane lines on the tiled floor that wavered erratically as if unsure of their path and direction. They talked about the things that they had done together and how much they'd enjoyed them but in the back of Amber's mind, a strange panic began to form. Something didn't seem right. She couldn't accept the mere possibility of losing touch with Gianna and never seeing her again.\n\n\"Do you remember what you said to me at the beach?\" Amber asked, suddenly driven to desperation.\n\n\"Yeah...\" Gianna said, hesitantly.\n\n\"You wanted me to do something crazy. To trust you,\" Amber continued. Gianna nodded. \"Well I did that-- and it was awesome. I don't regret a single thing we did.\"\n\n\"Me neither,\" said Gianna with a small smile breaking through the shadow of her quiet melancholy.\n\n\"Well... what about you? If I asked you to do something crazy, would you trust me?\" Amber gazed at Gianna with a hopeful look. Gianna was already sighing as if she knew what was coming. It made Amber confused but she still didn't question what she knew about Gianna's feelings. \"Come back to New York with me. Just for a little while. You could stay at my apartment. It's not big... but--\"\n\n\"Amber...\" Gianna began to mumble.\n\nAmber interjected, \"I'm sure we could work something out. I'm just not ready to leave. Leave you, I mean.\"\n\n\"I know... me neither. It's just... maybe we should wait until...\" Gianna continued to say, forcing the words out of her mouth as if they were distasteful.\n\nAmber didn't let her speak. \"I came here trying to escape Valentine's Day. Who would have thought I'd run into you, here, when I was least prepared? But now that I've had a taste of what other people have, I can't blame them for it! It is what it is. One year it's depressing and lonely and then the next it's suddenly the best day of my life. I'm not in control of that. All I can do is recognize when things go my way and embrace it, be present in that moment, cherish it right until the very last minute.\"\n\nGianna perked up and stared attentively at Amber's face as she continued to vent her emotions.\n\n\"You know... I hate the fact that I was running away from something. What's the point in running away from anything? Even when I tried to do that, it turned out I was actually running toward something. I just didn't know it. Honestly, what else is there to do but to keep searching until you find what you're after? And if you're lucky enough to find it, wherever you are and however random the coincidence, what sense does it make to ever let it go? -- Honestly? I'd take this trip a thousand times to see you again if I had to.\"\n\nGianna was quieted. At first, she seemed withdrawn and reflective. However, the solemn look on her face twisted into a strange expression as she considered the heartfelt expression of desperate love that she felt no less for Amber than Amber did for her.\n\nFinally, Gianna broke her silence. \"You know what? You're right. I'll go. I'll be there with you.\"\n\n\"Really?\" Amber said, startled.\n\n\"No running away,\" Gianna said, holding out her pinkie. Amber offered hers until both were locked in an embrace.\n\nAmber felt something deep in her gut; an uneasy feeling hiding behind a sudden sense of elation. Then she blocked out everything and set to work to ensure that Gianna would get a spot on that flight, no matter what it took.\n\n***\n\nFlight JA1627 rumbled along through the sky making its way over the ocean with the intent of leaving behind bleak prospects for an island that had just been the pure manifestation of paradise.\n\nAmber was sleepy and eventually began to sweetly doze upon Gianna's shoulder, sandwiched between her lover and the window. She dreamt of their time in Jamaica together. How perfect it was. Even the sudden turbulence of the flight seemed distant and insignificant, not powerful enough to penetrate through the rosy glow of her recent memories, vaguely jumbled, as they played out in her head.\n\nThe magical tour of a lush garden utopia, their secret rendezvous on the beach and the impromptu passions they shared on the raft. The drive through the mountains, the sweet taste of unfamiliar fruits and all the other delicious food. Their perfect night spent together in each other's arms. All of it swirled through Amber's mind like a mist infused with a certain transience and life.\n\nEventually, however, it was the hollering that woke Amber, the distinct pitch of a voice infected with fear. A thick forest of voices, wild and untamed, momentarily broken by an unintelligible announcement from the pilot.\n\nAmber blinked and began to sit up. \"What's going on?\" she mumbled as a harsh red light began to creep through her eyelids.\n\n\"Shh,\" said Gianna, rubbing her back softly. \"I hoped you'd stay asleep...\"\n\n\"Why is everyone yelling?\"\n\nA red warning light burned above her head, making an infernally repetitive tone.\n\n\"Listen-- Amber. Can we trust each other, one more time? Will you do something if I ask you?\" Gianna said, hurriedly.\n\n\"What?\" Amber said, still foggy and unfocused. Everything seemed topsy-turvy through the brief bouts of half-lucidity.\n\n\"Try to go back to sleep. I'm right here. I promise. I'll sleep with you. Okay?\"\n\n\"O-kay...\" Amber said, returning her head to Gianna's shoulder as she covered Amber's ears and relaxed her with a kiss on the forehead.\n\nAmber felt soothed by the warmth of Gianna's body, protection against the violent jostling of the plane and the mounting vibrations ascending through the seat.\n\nSeconds later, she slipped back into her Caribbean dreams, blissfully unaware of the tragic descent of the plane.\n\nGianna's kiss held until it could hold no longer.\n\n***\n\nThe shrill sound of Amber's alarm clock went off exactly as scheduled, hammering its way through the last vestiges of a disturbed dream like a siren going off. The dull thud of a headache pulsed and spread through her body; the tail end of a physical trauma anxious to be cured by the early light of dawn. It was not the way she wanted to wake up that morning but it was the morning she had been given.\n\nAmber pulled herself out of bed as she became conscious of the day's agenda, scrambled to start the coffee, then threw off her clothes as she darted past her packed luggage and into the bathroom. Soon, she paused under the soothing warmth of the jets, alone with her thoughts. Alone with the torturous threat of another lonely Valentine's Day.\n\nMeanwhile, miles away, Gianna awoke in her bungalow with a start. The warm Caribbean breeze floated in through her window, gently soothing away the pulse of a fading headache. She rolled out of bed, slowly recovering from the pain that soon flushed from her body. She stretched out her arms and began to consider the new day; how it might go, all the ways in which it might be similar or different from all the others...\n\nShe began her morning routine. It involved visiting friends and setting many things in motion. Ensuring that nothing would prevent Kymani, Adam, and Ziggy from recommending The Jerk Shack to Amber, for example, as well as asking Jean-Baptiste for a special favor on the beach later that afternoon.\n\nOne advantage Gianna began to understand about her predicament were the layers of trivial information she had picked up about the world around her; the precise time a vendor would go by with freshly cut mangoes, a violent disagreement in the street to avoid, the times her favorite spots would shift from quiet privacy to bustling activity. However, the growing predictability of the events taking place in her environment caused them to lose their magical spontaneity. She had to revive their enchantment by treating her situation as a gift. As if performing a magic trick, Gianna could suddenly produce guinep fruit out of thin air, knowing just when distant church bells would frighten parrots and prompt them to do all the dirty work for her.\n\nHer worst regret was the one time she attempted to explain the whole situation to Amber, blurting it out on that very first day, when they'd barely gotten to know one another yet. Nothing had been worse than that. How does one convince a total stranger of something so inexplicable and horrible? How could she expect someone to react when she claimed, \"you don't know me -- but we're already lovers.\" No, she felt resigned to suffering that hard truth in secret.\n\nAmber had rebuffed her straight away. Gianna tried to salvage it but a relationship never developed. After that, Gianna took to making several attempts to changing the course of history. There was the time she whisked Amber up to a cottage in the Blue Mountains to remain long enough to escape fate but they never made it there. All she was left with was the memory of frantic bird calls and falling rocks by the roadside. There was the time she chartered a boat for them and headed straight for the Cayman Islands but they never made it there either. How fitting it was that the sea that she loved so much had claimed their love for all eternity.\n\nEven letting go of Amber, allowing her to take that tragic flight alone, resulted in the same fate -- except they each had to suffer it a thousand miles apart.\n\nAfter finishing the usual series of critical morning tasks, Gianna finished her routine the same way she always did: finding a quiet spot on the beach to gaze out across the wide blue sea and reflect.\n\nShe felt trapped, living those same few, perfect days over and over, knowing that in exchange for reliving the meeting of her soulmate she would never be able to make it last. Their fate was sealed; sealed that very first time when they got on that damned flight together. The one that never reached its destination.\n\nDespite the many variations of changing the course of history she had tried, the result was always the same. Fate had a way of always catching up with them. It was predetermined and knew every recipe for disaster in the book. Gianna sat there on the beach softly chuckling at the stupid ways people thought about death when the worst thing about it was the anticipation itself. The dwelling upon one's own mortality.\n\nStrangely, every time the moment came it was always unremarkable. Death was persistent but never anything special. How ironic that after all the time one spends brooding about the day it might arrive, it's often over in an instant, without any time to even process one's own demise.\n\nWith a heavy heart, she had long since begun following an accelerated script of that first time, when they first met and fell in love, always still pondering, even seeking a way out. However, as Gianna sat there in the warm sand enjoying the morning breeze and reflecting on the previous time, she felt strangely at peace for once. It was the direction their conversation had taken on that previous encounter together.\n\nShe couldn't stop thinking about what Amber had said about letting go and just accepting what was.\n\nFor the first time, Gianna finally sat there not thinking about the next fruitless attempt to escape but instead focusing on the simple beauty of what was about to transpire on that day. It was exactly as Amber had said: she wanted to be present in the moment.\n\nGianna stood up in a huff and brushed the sand from her legs; defiant, unconcerned, determined not to waste yet another stretch of time with the love of her life caught up in an aimless attempt to avoid the unavoidable.\n\nIt was freeing in a way. It was as if Amber had given her permission to stop trying to save them both and appreciate what they had been blessed with, however short.\n\n***\n\nAs lunchtime neared, Gianna headed straight for The Jerk Shack, as she always did. She made her way to her favorite spot in the corner; the one with the faded vintage poster that proclaimed Jamaica as the \"gem of the tropics.\" A beautiful young woman was depicted there, frozen in time, a time when visitors came from all over by steamship seeking the thrill of adventure. She settled in beneath that woman's curious smile, half-reclining in a rickety chair and tapping her fingers on a table repeatedly lacquered with years of spilled beer and rum.\n\nAmber would arrive soon. She'd walk through that door, lost, hungry, satisfied to have found a quiet spot to relax and have a bite to eat. Gianna would wait in the shadows, quietly observing Amber. Then it would happen. They'd connect across the room, saying so much in that first moment of recognition, using only their eyes.\n\nAnd that's exactly what happened. The bright streaks of light from the open doorway were briefly diverted by the presence of an approaching figure. Amber stepped into the room, as beautiful as ever, glanced about briefly to take in her surroundings, and then headed toward an empty table as Zidane rushed over to greet her.\n\nGianna usually spent those first few minutes preparing herself for the next two and a half days and all the wonderful moments it would bring. She always needed to condition herself, to forcibly push away the gnawing sadness that tried to invade her mind, reminding her that it would be all for nothing. Reminding her how it would end abruptly and start all over again like some cruel punishment.\n\nShe would always wonder why she was cursed with the memory of the last time, and the time before, and the time before that, while Amber always strolled into the room as if it were that very first day all over again; a blank slate, suffering no burden from the knowledge of their ill-fated love affair. A fate that Gianna would choose to leave Amber ignorant of, time and time again.\n\nAnd yet... this time she felt no desire to conjure up a wall of artificial security and blissful ignorance around herself. For the first time, Gianna felt herself letting go and accepting that their fate simply was what it was. A tremendous pressure lifted from her shoulders and she wanted to laugh.\n\n\"What's the point in running away from anything?\" Amber had said to her, the last time.\n\nAmber had never expressed that before!\n\nWho could know what subtle differences of that last iteration of their final day together ultimately led to Amber sharing those insights, but Gianna was thankful for them. They made her suddenly stronger than ever before. Gianna decided firmly to run toward something, whole-heartedly, not away. The fate that they had been given was theirs and there was simply nothing to do but to live in the moment and embrace it.\n\nIt was just like Amber said: what was the point of doing anything else?\n\nGianna felt a chill leave her body at that moment as if she had been cured of some disease. Zidane abruptly spoke up, \"Dat storm changing course!\" he said excitedly, before swiping a towel excitedly across the bar.\n\nGianna felt the words about to come out of her mouth. The same words she always said: \"Yeah, I know it. Don't worry. It's a couple days out yet.\" However, she stopped herself, wondering if she just heard him correctly.\n\n\"Don't have tuh put up de boards again!\" Zidane added, grinning in Gianna's direction. He whistled happily and finished wiping the countertop. She watched as he poured himself a shot of rum, shot it down his throat, put his hands in prayer formation, and thanked Jah.\n\nGianna sat there in a state of shock. What did it mean that the storm was no longer inching toward them, blackening the skies in the distance, mocking her with its slow advance? In all the times she had tried to change their fate, it had always meant nothing in the end. But she had not done this.\n\nHow could she have changed the course of a storm? What did it mean?\n\nA shiver went down Gianna's spine. She looked over at Amber, who quickly looked away, then snuck another peek a few moments later. Gianna's heart quickened. She felt a feeling she hadn't felt in a long time. It was like a warm glow unspooling in the core of her body.\n\n\"No storm...\" she thought, as the strange twist of fate crystalized in her mind.\n\nThat very storm, after all, was what led them to their fate in the first place. The storm that disrupted flights. The storm that caused Amber to move to a cheap, sketchy airline that ultimately took both their lives and trapped them in this endless cycle of love and loss.\n\nGianna's sense of hope was renewed. Did it mean the plane would never go down now? Could she fly off to New York with Amber and find their future still waiting for them on the other side? Or was it just another cruel twist designed to give her a false hope, only to end up on an ill-fated boat or in a ravine by the edge of a road?",
        "No, she felt somehow that things were different now -- like a twisted knot was unloosening all around her.\n\nGianna leapt to her feet then hurried across the room. A sparkle swirled in the dusty beams of blue light probing the dim surroundings. She crossed their paths, briefly flashing with luminescence during her hasty passage. Zidane's melodic whistle seemed to enchant the air, a constant reminder that today her familiar steps might have further significance.\n\nAmber sat there, perfectly unaware, beautiful, sweet, and innocent. Gianna stopped in front of her. Amber looked up in surprise. Gianna yanked the empty chair backward with a grating screech and quickly took a seat across the table. Her whole body buzzed with excitement, asking herself over and over if they would finally be free, if their lives had just been returned to them.\n\nBut there was no way to tell. At least, not for a few days. Another glorious, perfect few days meeting the love of her life all over again for the very first time. For now, that precious encounter sitting there before her was all that mattered. Gianna decided to give this one her all. Not only would today be the perfect day, but it would be the perfect perfect-day.\n\nFor the next several moments, Gianna sat there, gazing at Amber who stared back at her with an expression of bewilderment and curiosity. This was always Gianna's favorite part, each and every time. That look Amber gave her. Somewhere, deep down, she knew Amber recognized her. She knew there was a glimmer of love at first sight already forming, taking root, unleashed in that very moment when they first confronted each other face-to-face.\n\nGianna relished that moment a little longer than normal... just in case it really was for the last time. Then she laughed.\n\n\"So, let me tell you about Calypso Chicken...\" she began as a smile stretched across her face.\n\n***\n\nIf you enjoyed this story, please consider voting by clicking a star! \"You Don't Know Me But We Are Lovers\" was submitted to the 2019 Valentine's Day contest.\n\nRemember to check out the other great submissions. Thanks for reading -- and Happy Valentine's Day! "
    ],
    "authorname": "SolarRay",
    "tags": [
        "romantic",
        "lesbian romance",
        "love",
        "fate",
        "travel",
        "vacation",
        "beach",
        "skinny dipping",
        "public nudity",
        "romance"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/you-dont-know-me-but-we-are-lovers"
}