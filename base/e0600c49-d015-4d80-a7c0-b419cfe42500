{
    "title": "The Speedo Doesn't Lie Ch. 07",
    "pages": [
        "This story is posted on the Literotica website; the author does not give permission for it to be reposted or reprinted anywhere else without consent. This is the seventh chapter in an interracial cuckold story. If you haven't read the previous chapters, I encourage you to do so, but I'm confident you'll enjoy it as a standalone too.\n\n \n\nThe use of the \"n\" word takes place a few times during sex scenes driven by passion between participants. I don't condone its use in any other situations.\n\n \n\nA special thanks to Literotica member Smoothed for his editing prowess and passion for creating great erotic literature.\n\n \n\nAlso, thanks to Literotica members dman32, rookie121, Dubdude, and Mistress Aaliyah for feedback and sounding board advice.\n\n \n\nI might be biased, but I think this is the best chapter yet...I hope you like it too. \n\n*****\n\nAugust\n\nThree months later...\n\nAbbie and Justin Dawson said their final goodbye's before she readied for her overnight department retreat in Lake Tahoe. Her smiling husband confirmed he would be up late the following afternoon. As they hugged, she pushed her firm d-cups into his chest and purred, \"I'm sorry I won't be here when you wake up on your birthday, but I promise I'll make it up to you when you arrive tomorrow night. I love you!\" His beautiful wife bit her lower lip, reached out, and squeezed his cock with a flirtatious grin.\n\n\"Shit, now I'm not sure I can wait till tomorrow night,\" Justin complained, causing them both to laugh before kissing her one final time. The soon to be 29-year-old jumped into his Subaru and headed off to his office in downtown Sacramento.\n\nAfter he departed, Abbie loaded up her SUV and made a quick pit stop at Starbucks before heading out of town. On the two hour drive up to the south shore of Tahoe, Abbie's thoughts turned to the same subject that had permeated her mind on countless occasions since the night of the end-of-season team party three months previously...Nick Thomas' big black cock.\n\nThe gorgeous coach reflected back on the conversation she'd had with Nick, their former diving prot\u00e9g\u00e9, a couple of days after the party. She had explained that despite the incredible night they shared in her marital bed, their relationship would have to be strictly professional moving forward. Abbie recalled Nick's disappointment when she broke the news that she and Justin had discussed it and agreed they both exercised poor judgment in allowing it to happen. Abbie stressed that due to Nick's upcoming position within the Exercise Sciences department at Sac State and his subsequent hiring as their assistant dive coach, she and Justin could no longer risk the repercussions of a future personal relationship with him.\n\nAbbie remembered feeling bad as Nick appeared truly hurt by their decision to sever the sexual relationship.\n\nNow, several months later as Abbie drove under bright blue skies through the Sierra Nevada pines, she wondered if Nick had in fact, moved on from any desires to be with her again. A lot had changed since that fateful night, and on the few occasions she'd seen him over the summer, he carried himself without a hint of attraction to her. Abbie told herself her desirability for him had subsided too. The upcoming school year was nearly upon them and new responsibilities within the department and the need to develop a new young dive team had begun to pervade her daily thoughts.\n\nWhat Abbie hadn't known was Nick Thomas was a really good actor.\n\nThe young black man reveled in the fact that after two long years of seduction, he'd finally achieved his goal of fucking his hot married coach's brains out in her own bed. He also had enough experience in these situations to know he almost surely would again. He didn't buy her story that she and Justin were resolute in their decision to break off the relationship. First off, he knew Justin's cuckold fantasies were not something he could likely turn on and off, and because the coach hadn't been there to witness their mating, Nick suspected Justin still had a strong desire to experience it firsthand.\n\nSecond, and more importantly, Abbie Dawson absolutely loved his big black cock!\n\nBased on over two years of foreplay, Nick had anticipated Abbie wouldn't be able to control herself once she finally experienced it\u2014but even he was surprised at how fully his sexy coach morphed once she got her first taste. He wondered how much Abbie told her husband of the details of their sex...Did she tell him she became a borderline nympho once his huge cock sprang from the Speedo? Did she tell him she begged him to let her suck it and clean up after each time he came? Did she tell him it was her who instigated the interracial porn video on her bedroom TV? Did she tell him she was the one who requested being bound to the headboard with the handcuffs? Did she tell him it was her who urged him to fuck her without protection when he ran out of his Bigfoot XXX rubbers and her husband's little ones ripped while trying to stretch them over his fat cockhead? And finally, did she tell Coach Justin she was the one who begged Nick to shoot his potent load into her unprotected pussy while he hammered into her with her fingernails digging into his black ass at the climax of their final fuck in the morning, just before Justin awoke?\n\nNick doubted she'd been totally forthright about any of that with him, but the fact was, it didn't really matter. She'd already spilled the beans regarding Justin's cuckold tendencies and her own responses confirmed she loved every intoxicating second of it. Those were not the actions of a couple capable of taking only one bite without consuming more of the taboo apple.\n\nNick was sure they would take another bite.\n\n*****\n\nWhen Abbie arrived at Harvey's Hotel in Lake Tahoe, she was pleasantly surprised when the pretty blonde front desk associate gave her keys to a room on the 18<sup>th</sup> floor. She predicted a spectacular vista and was not disappointed. Upon entering, Abbie's thoughts immediately turned to Justin and how excited he would be to have such a breathtaking view of the lake. They both loved Tahoe, but it truly was one of Justin's favorite places anywhere. This would be an awesome birthday surprise for him.\n\nAside from the view, the room was the typical king-sized variety with a nice flat screen and a sofabed couch. Abbie was excited to see the bathroom was oversized and contained a Jacuzzi tub. She committed to herself that a relaxing bubble bath was in order at some point during their stay.\n\n*****\n\nThe retreat kick-off meeting started at 1:00 p.m.\n\nAbbie exchanged friendly hellos with her staff mates, learning and sharing the details of everyone's never long enough summer break. After finding her seat, Abbie noticed as Nick Thomas slipped into the room at 12:58 p.m. He sat in the last row and never looked in her direction, at least that she was aware.\n\nWhen the meeting ended at 3:30 p.m., on their way out, Anna and Sydney, two of Abbie's colleagues and party buddies, invited her to join them at Sammy Hagar's Cabo Wabo bar for happy hour cocktails. Abbie readily agreed, excited to catch up with her fun friends. While accepting the invitation, she stealthily observed as Nick headed out quietly and steered towards the elevators.\n\nThe bar wasn't crowded, so they bellied up and ordered a pitcher of margaritas. Abbie knew she couldn't keep up with the two of them, so she sipped hers as her friends powered through the first batch and ordered another. \"Hey, so tell us about the hot new guy in the department Abbie. What's his name, Nick something? I heard he was on your dive team the past couple of years,\" Anna asked with excitement in her voice.\n\n\"Yes, his name's Nick Thomas, Justin and I coached him the past two years. He's worked very hard to earn this opportunity, I think he's going to be a great addition to the department.\"\n\n\"You bet he is, I look forward to checking out that rock hard ass everyday in the break room!\" Sidney gushed. \"So Ab, tell us how he looks in his Speedo, you must have checked out that muscular black body the past couple of years? I bet he has a big package, huh?\"\n\nAbbie couldn't believe she was immersed in this conversation with her horny co-workers, but she didn't want to sound like a prude, so she played along, \"Yes he has nice muscles, and he is a very good diver,\" she giggled, hoping the second part of her statement would distract the two stirred-up women.\n\nIt didn't.\n\n\"The only kind of diving I care about is the muff variety, I'd like for that handsome black man to do a little of that on me with those big beautiful lips of his,\" Anna kidded.\n\n\"Fuck that, I can get oral from my husband...I'd prefer getting into the real stuff in his Speedo...Lord knows my Danny leaves a lot to be desired in that department!\" Sydney volunteered with a naughty grin before she and Anna busted up and even Abbie let out a stifled giggle.\n\n\"You got a point there Syd, so Ab, you didn't answer the question, how does Mr. tall, black, and handsome look in his Speedo?\"\n\n\"Girls, he's going to be working side by side with us this year, I don't think it's appropriate that we talk about him like that, but I'll just say this...he fills it out pretty nicely,\" Abbie teased with flashing eyes and a naughty smile of her own.\n\n\"YEAH GIRL! Glad to hear you're like the rest of us horny bitches Abbie Dawson...been checking out some that dark meat have ya? Ever seen that big thing without the Speedo?\"\n\n\"Oh my god Anna, that's enough...I'm happily married,\" Abbie answered embarrassingly as guilt-filled butterflies fluttered in her stomach.\n\n\"Don't start getting all Miss Goody-Goody on us Ab, I seem to remember a certain married brunette getting very gropey at that strip show last year with another g-string wearing muscular black man. I thought you were going to suck Michael B. Jordan's cock right on the stage!\" Anna joked, the comment followed by belly laughter from both of Abbie's co-workers.\n\n\"OMG Anna! You know how drunk I was...I don't even remember most of that night!\" Abbie pleaded with an embarrassed smile, obviously not copping to the fact that she had since learned the black man underneath the Michael B. Jordan mask was the same one at the center of their current conversation.\n\n\"Yeah we all were Mrs. Dawson, but that hung dancer clearly got you all hot and bothered...\" her friend continued piling on.\n\n\"Jeez Anna, are you ever going to let that go,\" Abbie begged.\n\n\"Why should I, you barely let it go!\" Anna and Sydney busted out laughing again before she continued, \"I think that guy really wanted to take you home, but when you chickened out, he ended up with Brie instead!\"\n\n\"Wait what? Brie and the...uh...black...Michael B. Jordan,\" Abbie asked, eyes widening.\n\n\"Oops, I wasn't supposed to say anything about that, but since I already did...Yeah they went back to her house and...well you know...\"\n\n\"She had sex with him? With Ni...uh...Michael B. Jordan?\" Abbie caught herself as she questioned loud enough that the bartender looked their way from the other end of the bar.\n\n\"Sshhh Abbie...Jeez do you want everyone in the whole effing hotel to know?\"\n\n\"I...I...just can't believe it! But she's married...what about her husband...uh Dave?\"\n\n\"Can you keep a secret?\"\n\n\"Sure, I guess...\" Abbie answered absently, not fathoming that Nick had actually fucked Brie the night of the show.\n\n\"Can you or can't you, this is serious shit!\"\n\nAbbie snapped out of her mini-trance, \"Yes...yes definitely, sorry it just comes as such a big surprise.\"\n\n\"Okay I'll trust you, Sydney already knows about this, but I had lunch with Brie a few months back. She told me that experience changed her and Dave's relationship forever. Brie said she decided that night, after getting fucked so amazingly good by that black dancer, she could no longer repress her true feelings of frustration in the bedroom with Dave. So much so that she told him she thought they should separate for a while.\"\n\n\"Oh my god Anna, that's terrible! They couldn't work it out?\" Abbie asked, a million thoughts now channeling through her mind.\n\n\"That's where it gets crazy! Dave knew she had been sexually frustrated for a long time, but after pleading with her to change her mind, instead of just letting her walk out, he asked if she would consider staying if he let her date other guys?\"\n\n\"What? Are you serious?\"\n\n\"Yep, she was actually blown away too. But once she came to grips with what he was proposing, it started making sense to her...if it actually worked, she realized she could have her cake and eat it too. Brie loves everything about Dave except for his shortcomings in the bedroom. She figured she didn't have anything to lose at that point so she decided to maintain her loving relationship with her husband while getting sexual satisfaction from other guys.\"\n\n\"I don't understand, why would he agree to that?\"\n\n\"First off, he didn't have a choice, it was either agree to it or lose her, but the weirdest part was he actually admitted he was aroused by the idea. His only stipulation was that he got to watch or participate in her sexual encounters with other men.\"\n\n\"Damn, that's fucking crazy! Even though I've already heard this, I still can't believe it!\" Sydney practically shouted. Abbie just stared with a blank expression, cognizant of all the obvious parallels between her situation and Brie's. The only exception being that Justin had always been a satisfying lover...well before she experienced Nick Thomas that is.\n\nAnna continued, \"Yeah, Brie told me they call it 'cuckolding'. She says there are a lot of husbands and boyfriends out there who have the same fantasies. They get off on watching their wives or girlfriends getting fucked by other guys. She said it was ironic that the dancer was black, as cuckoldry is often embraced by white couples with black bulls!\"\n\n\"Black bulls?\" Abbie asked, not wanting to raise any suspicions by her previous silence, but still trying to come to grips with the fact it was Nick Thomas they were talking about.\n\n\"Yeah, that's what the cuckold community calls hung black studs who fuck lots of white wives.\"\n\nAn image of Nick's huge cock entered Abbie's mind, \"A black bull is an apropos description, but is he really one of those?\" But then after pondering it further, Abbie realized that including herself, she was aware of at least four women in just her own circles that Nick had fucked, \"Maybe he is one! Jeez, was I just another notch on his bedpost?\"\n\n\"So Brie still fucks these bulls now?\" Sydney asked, confirming what she thought Anna had told her weeks before.\n\n\"Yes. She and Dave joined some kind of club called The Bull Pen at the suggestion of that dancer. Now she fucks him and the rest of the bulls on a regular basis. She told me she is having more incredible sex than she's ever had in her life and she and Dave have never been happier. She didn't give a lot of details, but she said the membership includes an online menu of available bulls they choose from.\"\n\n\"Wait, Dave helps pick out her lovers?\" Abbie interrupted with wide eyes, still trying to come to grips with the fact that Nick participated in such a club and that he was still fucking Brie.\n\n\"Yep, except they don't use terms like lovers or partners. The club insists they refer to the black men as bulls or stallions. She says there is a whole protocol for what the cuckold couple must do for the bull before the woman can ask him to breed with her. Can you believe they actually use those terms?\"\n\n\"OMG, no I can't! So this protocol stuff...like what kinds of things are involved?\"\n\n\"Submissive shit. Playing with themselves in front of him, begging the bull to choose her, telling the bull all the things he can do to her, and of course lots of cock-sucking.\"\n\n\"And Brie likes doing it?\"\n\n\"Loves it! She says she's addicted to it! And so is Dave. Sometimes the bull requires the husband or boyfriend to get involved in the protocol lead-up.\"\n\n\"Does Dave...uh...have to suck also?\"\n\n\"Oh I don't know about that, Brie didn't say. But she did say that based on the couple's specific kink's, the bull will be either very dominant or less so. For those that like the authoritative treatment, the bulls will often require the cuck husband or boyfriend to beg and grovel with them to mate with their wives or girlfriends! She said some of the husbands even get off on being required to wear...what do they call those things...chastity cages? Can you believe that shit?\"\n\n\"God, I don't know about the whole cuckold thing, but I'm all wet just thinking about Brie and all that big black cock! I might have to jump the new guy's bones at the party tonight,\" Sydney joked.\n\n\"Only if I don't beat you to him first,\" Anna challenged with a big smile. \"I haven't been able to look at black men the same since Brie told me about her experiences.\"<br >\n\nAbbie being obviously blown away by the conversation, still tried to be the grown-up in the room. She gulped, fully realizing the hypocritical nature of what she was about to say, \"Okay, you two need to go take a couple of cold showers. Do I need to remind you, you both have husbands at home? And besides, the university would obviously frown on fraternizing with other department personnel.\"\n\n\"Oh Abbie, you can be such a stick in the mud sometimes. Besides, I'm not thinking about fraternizing, I'm thinking about fucking, like getting the shit fucked out of me like Brie does by those black men,\" Anna joked followed by loud laughter from Sydney.\n\nAbbie shook her head and rolled her eyes, \"You guys are terrible! I can't talk about this anymore. I'm going to go unwind before the reception. That Jacuzzi tub in my room is calling my name,\" she chimed, dropping a $10 bill on the bar.\n\n\"You fucking bitch, I didn't get a Jacuzzi in my room,\" Sydney whined.\n\n\"Neither did I, what the fuck?\" Anna complained too.\n\n\"Sucks to be you guys! I'll see you at 6:30 p.m.\" Abbie teased with an eat-your-heart-out grin as she glanced back over her shoulder one final time.\n\nThe irony of the conversation was literally too much for her to take any longer. Abbie was lost in thought on the elevator as she tried to digest what Anna had just blabbed about Nick, Brie and her husband Dave. She Googled the term 'cuckold' and read: A submissive man who willingly encourages his girlfriend/wife to sleep with alpha males whereby the woman's sexual pleasures become the husband's vicarious sexual pleasures and experiences.\n\n \n\n\"Oh my god, that sounds just like Justin. Could he really be one of these...cuckolds? If so, has he really lost those feelings and desires since we broke things off with Nick?\"\n\n \n\nWhen Abbie got to her room she tried calling her husband, but after several rings it went to voicemail. She then remembered his buddy Aiden had taken him golfing for his birthday after work, so she texted him and said she couldn't wait to see him the following night and reminded him she was going to make his birthday one to remember. She followed the note with lots of hearts and kisses imoji's. Abbie glanced at the clock and figured she had an hour before she needed to start getting ready for the party.\n\nIn spite of her anger with Nick's obvious omission regarding his relationship with Brie and his participation in the Bull Club thing, Abbie found herself guiltily aroused thinking about Brie's new lifestyle.",
        "Abbie turned on the bath water and removed her business attire. She was soon standing in only her bra and panties in front of the full length mirror brushing her hair. She could see a damp spot on the front of her underwear. Her thoughts returned again to what Anna had told them about Brie's new life as a bull wife, \"In addition to Nick, is she really also having sex with other black men she doesn't even know? And her husband likes it too?\"\n\n \n\nAbbie could feel more wetness forming between her legs as she stared at her body in the mirror. She thought back to when Nick told her how much he loved fucking her sexy body. She suddenly wondered how he thought she compared to Brie, Amber, and Christina. She reached up, unclasped her bra and let it fall to the floor. With her supple, pert mounds free, she massaged them, as she often did after removing her bra. She crossed her arms under them and turned slowly back and forth in front of the mirror. Abbie admired her tits as she'd done so many times since they developed so perfectly that magical summer in high school, \"...none of them could have nicer breasts than mine.\"\n\nTen years after their bloom, Abbie was still proud that her boobs looked and felt every bit as firm as they did back then. She'd heard a few friends complain they had experienced sagging or deformation, but Abbie couldn't acknowledge the same. If anything, they'd gotten a little bigger since her teenage years, but they still maintained that perfectly rounded shape and firmness. And while they were large on her thin frame, she loved the way they looked so flawlessly perched over her flat stomach.\n\nAbbie's thoughts returned to Anna's story about Brie, \"I wonder if all those black men love large breasts as much as Nick did mine?\" She thought back to how much time he'd spent sucking and fucking them that night. She then recalled how erotic they'd looked with his heavy cream splattered all over them. Abbie suddenly realized she had begun playing with her nipples. The pebbled nubs were now rigidly taut between her pinching fingers.\n\nAbbie lowered her hand into her panties and gently rubbed her fingers through her damp little bush, \"I wonder what he's doing right now?\"\n\n*****\n\nIronically, Nick Thomas was in the room next door listening as the heavy sound of Abbie Dawson's tumbling bathwater echoed through the thin walls of the old hotel.\n\n*****\n\nEarlier that summer after his hiring as a Sac State fall semester professor's assistant, Nick Thomas was stoked when the agenda for the 2019-2020 Exercise Sciences department retreat was released confirming that the host hotel would be Harvey's at Lake Tahoe. It was a place he knew well.\n\nWhile he hadn't experienced many extravagant experiences as a child due to his family's lack of money, some of Nick's best memories were from weekend trips to Harvey's. Working two jobs during most of his upbringing, Nick's mother Angie had few opportunities to spoil her young son. She also had very little time for herself. Nick's mom didn't date much, but the pretty blonde did manage to have a long on and off relationship with a wonderful man named Vic Gross. Vic was the grandson of Harvey Gross, the original owner of Harvey's at Tahoe. In 1985, when Harvey Gross sold his hotel to the Caesar's Management Group, one of the stipulations of the sale was that all future generations of Gross's would have access to the hotel at their discretion.\n\nVic spent a lot of time at Harvey's, both when his grandfather owned it and through the subsequent Caesar-owned years. He was like an institution at the popular resort, referred to affectionately by most of the staffers as Uncle Vic.\n\nVic Gross loved Nick's mom, but while she had strong feelings for him too, she could never bring herself to fully commit to the fun-loving man. Nonetheless, Nick and his mom spent quite a few fun-filled weekends as Vic's guests at Harvey's over the years. When Nick learned where the retreat was being held, he called Uncle Vic and asked a favor.\n\n\"You bet Nicky (the name he had called him since he was little), I'll get in touch with Lisa Paulson up at the lake and see what I can do! So tell me about this little lady you want to have in the adjoining room, is she hot?\"\n\n\"Yeah Uncle Vic, she's a rocket. Smokin' body...really awesome tits and a fuckin' ass like an eighteen-year-old. The accommodations should come as a big surprise to her!\"\n\n\"Oooh, sounds fucking hot Nick! I'll do my best to cover my end of things and you make sure you give her plenty of that ebony pleasure stick! You hear?\"\n\n\"You bet Uncle Vic...you know I will!\"\n\n\"That's my boy, I'll text you with the details.\"\n\n*****\n\nNow two months later as Nick stood in the spectacular 1,500 square foot sprawling Lakeview Suite on the 18<sup>th</sup> floor listening to the sound of running bath water in the room next door, he contemplated how he would surprise Abbie with the fact they were in adjoining rooms.\n\nAt that moment, he heard the sound of Jacuzzi jets whirring to life.\n\nNick waited ten minutes before sending the first text, \"Hey, whatcha doing?\"\n\n \n\nAbbie's head was thrown back, her breath erratic while inhaling the thick steam coming off the bubble-filled water. Her left hand was pulling softly on one of her big nipples as the fingers from her other were frigging her swollen clit at a blurring pace under water. She was thinking about Nick's big black cock as she'd done countless times since the night of the party and imagining to herself, \"Oh god Nick, it's so big...it feels so good, I'm gonna cum all over it again! Fuck me with your huge cock as hard as you did that night!\" \n\nJust then a new text pinged on her phone. The sound distracted her and she lost her special path to climax...\"Damn!\"\n\n \n\nAbbie took a moment to catch her breath before reaching for the hand towel, drying her hands, and picking up her phone, \"Oh my god, it's from him!\" She clicked on the text and read: \"Hey, whatcha doing?\" Abbie couldn't believe he was reaching out to her at this moment. They'd hardly spoken since the night of the party and he picks now, while she's finger-fucking herself while fantasizing about his amazing cock to do so.\n\nAbbie thought a moment before responding back, \"I'm just hanging out in my room, I need to start getting ready pretty soon.\"\n\n\"Yeah, me too, what floor are you on?\"\n\nAbbie hesitated again, wondering whether she should share that information with him, but nonetheless she typed, \"I got really lucky, for some reason, they put me up on the 18<sup>th</sup> floor with a really awesome view of the lake.\"\n\n \n\nNick laughed and said in a low voice, \"Yeah bitch, it wasn't by chance...\" He then typed, \"You too? Did you score a really big suite too? I'm in room 1826, I think it's called the Tahoe Suite or something!\"\n\n \n\nAbbie couldn't believe what she'd just read. She said to herself, \"They gave him a suite? Why would they do that for the newest guy in the department?\" And then it hit her...\"Wait room 1826? I'm in 1824! Oh shit, is he next door?\" \n\n \n\nAbbie contemplated what to do for nearly a minute as she tried to remember whether the adjoining room door was on that side or not, \"Should I tell him I'm next door?\" Finally she decided he would likely find out one way or the other and it would be awkward if she didn't. She typed, \"No I'm not in a suite, good for you that you got one. Hey, I think we might be neighbors though, I'm in 1824.\"\n\n \n\nMoments later his return text pinged on her phone, \"Damn, what are the chances of that? I wonder if they put our whole department on this floor?\"\n\n \n\n\"No, I talked to my friends Anna and Sydney, they are on lower floors.\"\n\n \n\n\"Weird, well I'm not going to complain, this room is pretty fucking spectacular! You'll have to check it out...hey if you are next door, what is that loud sound coming through the walls?\" \n\n \n\nAbbie almost died when she read his text, she turned off the Jacuzzi jets immediately. She replied, \"I was taking a bath in the Jacuzzi, maybe that was it...\"\n\n \n\nNick laughed when he heard the jets subside, he stroked his cock as he thought about her hot naked body in the tub before he typed, \"You don't need to stop on my behalf.\"\n\n \n\n\"Oh I didn't, I have to start getting ready anyway.\"\n\n \n\n\"Yeah okay, hey after you get ready, maybe you can help me tie my tie, I can't remember how to do it!\"\n\n \n\nAbbie stood, dried herself and thought, \"Is this really happening right now?\" She then typed a response, \"Sure, I think I can. It's been a while, but I've done enough of Justin's to remember how, I think.\"\n\n \n\n\"Great, I'll open my adjoining door. Feel free to come on over whenever you're ready...oh and I've got a stocked bar if you feel like a pre-party COCKtail.\"\n\n \n\nAbbie read Nick's text with nervous excitement, \"Was it an accident that he capitalized the COCK in COCKtail?\" She typed back, \"Yeah, I'm going to be a while, but I'll come over when I'm ready. As for the drink, thanks for the offer, but I'll pass. Justin is coming up tomorrow for his birthday and I'm sure we're going to have a big party weekend!\"\n\n \n\n\"That's right, I forgot coach's birthday was tomorrow. Suit yourself, we'll see you in a bit.\" \n\n \n\nMoments later Abbie heard hip-hop music start playing loudly in the room next door. She spent the next hour and fifteen showering and getting ready. All the while, thoughts of Nick Thomas played in her mind, \"How is it possible that we have adjoining rooms?\" \n\n \n\nWhen it was finally time to get dressed, she reached into her suitcase and pulled out the bra and panty combo she'd planned to wear underneath her full length silky red dress. While pretty, the undergarments were rather conservative.\n\nBut before slipping them on, something drove her to return them to her bag and instead reach for her skimpy black lacy set. This was Justin's favorite bra and panty combo and she'd packed it specifically for his birthday. In addition to showing off her incredible ass, and squeezing and raising her tits perfectly, her husband especially loved the way her little dark bush showed through the shear material in the front of the g-string. She justified her decision, \"There's no reason I can't wear these two nights in a row!\" \n\nThat decision turned out to be an unfortunate one for Justin Dawson.  \n\n \n\nAbbie slipped the g-string panties up her legs and stretched them over her curved hips. She then reached for the petite bra. Abbie wrapped the skimpy garment around her back, pulled tightly on the cups and clipped the front clasp, \"That seems harder every time I wear this...\" Her summer-tanned skin accentuated the sexiness of the black lingerie, \"Damn, I do look pretty good in this!\" She then reached for her perfume and absently applied it on her cleavage and just above her pussy mound.\n\nFive minutes later after slipping on her heels, Abbie slowly opened her adjoining door and knocked on Nick's half-open matching one, \"Hello...are you in here?\" She called out loudly above the music with nervous apprehension in her voice.\n\n\"Yeah, just push it open, I'm just finishing getting ready,\" Nick yelled out from the bathroom. \"Make yourself at home!\"\n\nAbbie's chin nearly dropped to her chest when the adjoining door swung fully open revealing the massive suite. Loud rap music blared from the speakers as a suggestive music video shown on the 84\" big screen HD television. Abbie couldn't hear herself think. She searched around until finding the remote control\u2014she turned the volume down several decibels, \"Sorry I was going to go deaf if I didn't do that,\" she yelled.\n\nShe heard Nick laugh from the other room, \"No worries...you white people don't appreciate really good music!\"\n\n\"Oh is that what you call it? ...Music?\" She joked as she looked shockingly around the large tastefully decorated space. \"Okay, so tell me how you got this room again. Last time I checked, you are the new guy in the department,\" Abbie shouted above the still blaring music.\n\nNick appeared from the bathroom with a big smile on his face. He wore only his suit pants and socks, his upper body uncovered, \"You like?\" He asked with his arms spread wide.\n\nAbbie was caught completely off guard and wasn't sure whether he was referring to the room or how he looked with his shirt off, she hesitated before she simply nodded her head quickly with a blank look on her face. She immediately flashed back to how amazing his muscles felt as her hands roamed his tattoo covered body while he fucked her so expertly in her marital bed the night of the party.\n\nNick had completely disarmed her, which was exactly his intent. He walked over and turned the music down another couple of notches, \"Just a nod? I thought you'd be more impressed than that...\" He said as he turned back in her direction, confident he caught her staring at his shirtless physique.\n\n\"I uh...\"\n\nBefore she could formulate words he blurted, \"Never mind that, I thought the dress you wore that night at the club in LA looked good on you, but this one is absolutely stunning!\" He gushed as he eyed her from head to toe. Her thick dark hair was up, accentuating her long narrow neck adorned with a gorgeous diamond necklace that Justin gave her for their fifth anniversary. Tasteful dangling earrings and the perfect glossy lipstick highlighted her stunningly beautiful face. The long silky red dress flowed down her curvy body to perfection, exposing a lot of cleavage and gripping every sexy curve of her narrow hips and rock-hard ass.\n\nThe sexual tension in the room was palpable.\n\nAbbie thanked him sheepishly as she finally regained her composure, displacing her eyes from his half-naked body and glancing around, \"This place is amazing, they just gave it to you when you checked-in? You didn't pay any more for it, did you? The department wouldn't go for that,\" she lectured hoping he hadn't done anything so stupid on his first day on the job.\n\n\"Nah, same price. I don't know what I did to deserve it, but I certainly wasn't going to look a gift horse in the mouth,\" he lied with a big smile. \"But even more surprising, what are the chances they'd put us in rooms right next to each other, this is a huge hotel, right?\" Nick asked as he slipped a wife-beater tank-top over his muscle covered physique.\n\nAbbie breathed a sigh of relief, \"Yes, it is big...the hotel I mean,\" she said, clarifying her response awkwardly. \"And it does seem like an amazing coincidence that a couple of us would be placed next door to each other unless they put everyone in the same section, which I know they didn't.\"\n\n\"Well here's to good fortune,\" he said as he raised his beer and toasted it in her direction, \"what can I get you to drink?\"\n\n\"Oh, just some sparkling water if you have it. I'm going to take it easy tonight and you probably should too. Curt Michaelson, the Dean of the Exercise Sciences School is going to be there. And besides Justin is coming up late tomorrow afternoon...\"\n\n*****\n\nFive Hours Later\n\nAbbie Dawson was fucked up out of her head, her long dress was hiked up over hips and she was no longer wearing panties. Nick Thomas' big cock was grinding against her exposed muff through his slacks as he held the remains of her torn g-string in his hand. They were lip-locked, tongues wrestling wildly as they rode the elevator to the 18<sup>th</sup> floor.\n\nAbbie pulled away and breathed sexily in his ear, \"I want you to fuck me so hard tonight Nick...\"\n\n\"You can count on it bitch!\" he grunted as he reached up and squeezed one of her big d-cups through the silky dress. Abbie moaned, she hadn't forgotten how good his strong hands felt massaging her sensitive tits.\n\nSuddenly the elevator door opened on the 18<sup>th</sup> floor. Abbie tried to pull away, confident still that all of her colleagues were down at the bar where she and Nick had left them, each departing five minutes apart as to not raise suspicions, but well aware in spite of her inebriation, someone else could be waiting to enter here on their floor.\n\nNick didn't flinch, he continued grinding against her steamy pussy while molesting her succulent tits. She squirmed to free herself again, but he held her tight until eventually relenting, \"Okay baby, you ready for some of this big stick?\"\n\nThe hot wife glanced down with a naughty smile on her face. She reached out and groped his thick cock before hastily kicking off her heels, scooping them up and blurting out, \"I'll race ya!\"\n\nNick only had time to turn and slap her ass as she bolted half-naked out of the elevator and raced down the hallway, her bunched-up dress above her hips in one hand, her heels in the other. His coach's perfect naked ass and long legs beckoned him as he did his best to chase her with a colossal hard-on in his pants. \"You better not let me catch you bitch, or I'm going to spank that little ass till you cry,\" he threatened between belly laughs.\n\n\"Promises...promises...slow poke,\" Abbie shouted over her shoulder between giggles.\n\nWhen they neared the end of the hall she let the hiked up portion of her dress fall back down as she beelined to Nick's door and touched it first, \"You're too slow...old man, I win,\" she teased as he came to an abrupt halt behind her.\n\n\"You fuckin' cheated bitch! And where do you think you're going? This is my room!\"\n\nAbbie turned her head as he pressed her against the door, she could feel his engorged cock against her lower back, \"Um...I just assumed we'd go to the room with the mirrors over the bed...\"\n\nNick's cock swelled at her response, but he kept up his dominant guise, \"Well you ain't going in there dressed like that, pull that dress back up and show me that sweet little ass. Then I'll think about it!\"\n\nAbbie giggled and thought momentarily about teasing him again, but she quickly remembered what happened to her baby doll the night of the party and her g-string only minutes earlier in the elevator. She didn't want her expensive dress to suffer the same fate, so she dutifully reached for the hem and shimmied the slippery material up her legs until it crested her gorgeous ass, \"Like that?\"\n\nNick dropped his eyes approvingly, \"Not bad. Okay bitch, tell me what to do to that ass before I let you in my room!\"\n\n\"What do you mean Mr. Thomas,\" Abbie feigned in a playfully ditzy voice.\n\nNick pressed her more firmly against the door with gritted teeth, \"I'm serious slut, tell me what you want me to do to that hot fuckin' butt!\"\n\nAbbie quickly realized their playful banter had come to an end, she gasped, head tilted back, mouth open, eyes glazed, \"Oh god Nick...spank it...spank it and make me beg!\"\n\nWhile she had never let Justin talk to her in this tone, Abbie had confessed to Nick the night of the party that she loved when he spoke dirty to her during sex.\n\nHe slapped her firm sexy ass. Abbie squealed. He did it again, \"You like that shit?\"\n\n\"Ugh...yes...yes Nick.\"\n\nNick loved that his straight-laced, by-the-book coach who never swore on the pool deck, morphed into a dirty girl when aroused by his huge cock. He spanked her again, harder this time, \"You know I'm going to do that with my dick tonight don't you?\"",
        "\"Oh god I hope so...can we please go in? I want it...\"she whimpered as her hand reached back and groped anxiously for it. She gasped when she finally got a firm grip, \"I can't believe I've been without this for three months...\"\n\nNick smiled to himself, knowing his suspicions regarding her inability to live without his cock were indeed coming to pass, \"All right, but as soon as we get in there you need to show me!\"\n\nNick keyed the door and they pushed inside. When it closed, he spun his hot former coach around powerfully and sunk his tongue in her open mouth. The horny wife practically sucked the skin from his slippery barb as their lips mashed wetly, her hands frantically clawing at the front of his pants.\n\nAfter nearly a minute, Abbie pulled away and immediately began planting kisses along his neck and exposed chest, \"God Nick...I've thought about this big cock every day since the party,\" she gasped breathlessly. Her fingers now full through the thin material of his slacks...one small hand gripping his thick shaft, the other squeezing the lower of his cum-filled nuts.\n\n\"I thought you and Justin decided this wasn't a good idea?\"\n\n\"It's not a good idea, but it's a really good cock...no...fuck that...it's a great cock,\" Abbie corrected as she dropped to her knees excitedly.\n\nShe frantically unbuckled his belt and unclasped his slacks. The married coach didn't wait for his pants to fall, instead she reached inside and yanked her prize from his shorts. His dark meat flopped out heavily. She was so eager, the engorged appendage swung out and hit her face with a fleshy slap. All the breath from her lungs escaped as nervous excitement displaced it. She slutishly kissed it, licked it, sucked it...elated to finally have it back in her mouth, \"Nick I missed this so much, you don't know how many times I've thought about it! Mmm...it tastes good,\" she praised between sluttish licks and open-lipped kisses.\n\nNick could sense a renewed enthusiasm in Abbie's desire to please him with her mouth. She had started off nervous and inexperienced the first time around, but by the end she was choking it down capably. He was excited to see her picking back up where she'd left off.\n\nAbbie was a quick learner, but she still desired to please him instantly. The young wife mouthed his cock hungrily, flashing back to their previous encounter. A familiar saying resonated in her mind as she tried to quell her nervousness. \"It's just like riding a bike Ab...a big black tandem bike that is!\" She thought to herself as she sucked his cock slutishly and played with his pair of massive balls.\n\nThe aroused coach worked him deeper, trying to breath around the invading member through her nose without triggering her gag reflex. Nick happily enjoyed letting the kneeling coach push herself and control the action before he finally took over.\n\nAbbie felt a strong hand grip her hair as Nick coaxed his swollen shaft into her throat. She followed his instructions as he pressed deeper. His contented gasps and confirming body movements heightened Abbie's confidence. She pressed on.\n\nBefore long, she watched through teary eyes as a familiar gaze appeared on his handsome face and masculine guttural sounds escaped his lips. Moments later she felt his cock swell as Nick brought both large hands to her bobbing head. His grip tightened as he growled through gritted teeth, \"Oh shit bitch...suck that big black cock...mmm yeah...take it!\"\n\nThe thick shaft bucked between her stretched lips. Abbie blinked up at him as she felt the first of several eruptions blast into her throat with half of his foot-long cock stuffed deep down into it. Her eyes widened as the twitching phallic deposited stream after stream down her throat. Unbelievably, his powerful explosions aroused Abbie on a level she had never experienced, sucking his big dick and taking his cum was literally intoxicating. The married coach actually climaxed without physical stimulation as Nick's thick gruel pumped deep into her stomach.\n\nA sweat-covered sheen sheathed each of their bodies as they gasped for breath. Abbie eventually rose from her knees and submissively kissed his hard nipples, muscular chest and vein exposed neck, \"Did you like that?\" she purred, \"I know I did!\"\n\nNick smiled proudly as he ogled her saliva-splattered cleavage and the slick fluid stains on her expensive dress, \"Nice baby, I think with a little more practice we could get the rest of it down in there!\"\n\nNick didn't bother putting clothes back on. He walked nakedly around the room with his semi-limp horse-cock bobbing dangerously. He had Abbie make him a drink while he dialed up interracial porn. The black-on-white sex videos had been such a turn-on for her the night of the party, and he hadn't forgotten. \"Remember how much you loved watching that big black cock rooting all those blonde hotties when we fucked in your bed?\"\n\nAbbie nodded impishly as Nick watched her eyes drop to his hanging stick.\n\n\"Well tonight baby you get to do it again! I think this brotha might even have a bigger log than the last dude,\" Nick teased.\n\nAbbie approached and handed him his drink. She then reached for his thick cock before looking up to his eyes and licking her lips, \"Yeah he does, but neither of them is as big as you Nick!\" The horny brunette bit her lower lip sexily, \"For some reason, I feel overdressed...\"\n\nNick nodded his agreement as his former coach stepped back and slipped the narrow straps from her shoulders, letting the long silky dress slip from her stunning body. It hung up momentarily on her ample mounds, but she was soon standing in only her undersized bra and high heels, her tattered panties already lying on the floor next to the bed\u2014her pretty little bush beckoning him closer.\n\nNick absorbed the view, amazed that Abbie's sexy body looked better than he even remembered, \"Damn...you really are fine baby...let's get that pretty little pussy what it needs and get down to some fucking!\"\n\nNick scooped her up in his muscular arms and carried her to the large bed. Abbie couldn't believe how easily he maneuvered her. She found herself on top of him with her mouth above his dangerous cock and his head below her, between her trembling legs. She felt his warm breath across her pussy before his long tongue slipped up the crack of her ass and circled her tender sphincter. Abbie practically came on the spot, \"Oh god Nick, uhn yeah that feels sooo good,\" she whimpered breathlessly.\n\nThe young wife reached out instinctively and gripped his thickening cock, its weight still impossible to comprehend. She extended her tongue and tapped the heavy member against her lips. It grew harder in her hand. Abbie moaned and tongued the long slit. A large dollop of precum oozed onto her probe.\n\nThey took turns pleasuring one another orally while the other used hands and fingers in a tantalizing game that soon had both gasping in arousal. Nick's tongue danced and swirled around Abbie's clit while her small hands each squeezed and massaged one of his lime-sized balls. In return, Nick sunk two long fingers against his ex-coach's asshole and played until she was almost unable to keep up her oral end of the bargain, \"Fuh...Nick I can't believe I never knew...oh shit...so good...that feels sooo good!\" Her new found love for anal stimulation challenged her ability to concentrate on sucking his blood-filled cock.\n\nIt wasn't long before Nick felt Abbie's fingers sliding curiously along his ass cheeks on a mission to his hole, \"Umm...do you like it too?\"\n\n\"Oh fuck...you bet bitch...yeah,\" he groaned as he felt her slick fingers dance around his sphincter. \"That feels damn good, but what this black ass really needs is some wet tongue!\"\n\n\"Oh...like you did to me?...God...that did feel really good Nick...do you want me to...um...?\" she asked nervously.\n\n\"Yeah baby, crawl around...\"\n\nAbbie nervously swung her legs around and positioned herself between his. He spread them and rolled backwards. \"You can put your feet on my back if it's easier,\" she offered submissively.\n\nNick smiled as he lifted his legs, Abbie's head disappearing below. The large black man rotated back further and let his feet rest on her back. He felt her tongue probe tentatively around the base of his cock and his heavy balls.\n\n\"Okay, lift my nuts and lick along the backside...uhn...uh huh...yeah like that. Mmm...now hit the taint...yeah that spot between...there you go...yeah just like that! Okay, now swirl it right there...yeah uhn...yeah,\" his hot former coach's married tongue was now circling his rim.\n\nNick had coaxed many to do it, but he never dreamed Abbie Dawson would be one of them. \"There you got it...oh yeah.\" He reached down, grabbed one of her thin wrists and placed her delicate fingers on his shaft. \"Stroke my dick while you do it,\" he instructed, then sighed. \"Fuck yeah...damn baby that's called eatin' ass right there...it feels real good!\"\n\nNick couldn't have been more excited with this newest development. She was really getting into it as he felt her nose bump inadvertently against his tightening ball sack. He let her play for a while, but he resisted the temptation to give her too much too fast. \"That was real nice baby, now climb back up here and give me more of that fine married pussy!\"\n\nNick thought to himself that his formerly innocent coach was showing the potential to be one grade-A hot rocket fuck. At some point he would have to pull her husband into the equation and let him see what his wife had become, but that could wait for now...he had more training to do.\n\nAbbie climbed back into a sixty-nine on top of his muscular body. Their mouths went back to work, both aroused beyond control. It was now a race to see who would climax first. It didn't take long and ended in a virtual tie as Abbie's squirting pussy sprayed all over Nick's face at the same time rope after rope of his thick jizz splattered into her mouth and across her gorgeous face.\n\nAs they lay gasping for breath, both immersed in the other's ejaculation, Nick suddenly remembered he had left his rubbers in Sacramento. He was hopeful she had gone back on the pill since the last time they fucked, \"Damn baby, you're gettin' good with that mouth, but this black dick needs a little pink pussy, jump up and ride it for a while!\"\n\nAbbie knelt on the bed. She was amazed he was ready to go again, but she certainly didn't mind, she was too, \"Mmm I want to, where are the...uh...things?\"\n\nNick spread his legs, letting her move between them. A satisfied look formed on his face, proud at the volume of his seed that coated the area around her mouth and chin. He watched as her tongue instinctively swirled outside her lips, taking more of his potent discharge with it when it sunk back inside. He finally spoke, \"Shit, I don't have any, aren't you on the pill?\"\n\nAbbie's shoulders slumped, \"No, why would you think that?\" Her hands found their way to his shaft, she absently squeezed it, as if pumping it up.\n\n\"I don't know, I thought I remembered you saying something about it last time,\" he lied. \"Well why don't you climb on and I'll pull out before I nut!\"\n\n\"Nick, I can't do that, not after last time,\" she breathed disappointedly while still gripping his cock and stroking it, not able to help herself.\n\n\"Well then, I guess we're kind of fucked,\" he complained, confident she would acquiesce if not given a choice.\n\n\"Can't you run downstairs and see if they have some...I promise I'll make it up to you when you get back,\" she bit her bottom lip enticingly. Abbie wasn't sure why she was the one capitulating, but the fact was her pussy craved his big cock and wanted to motivate him to find something.\n\nNick sighed heavily for effect, he knew they wouldn't have anything that would fit him downstairs, but he rationalized that his balls could use a short break anyway and he figured he might gain more pussy cred if he made the attempt.\n\nRegardless, he suspected she wouldn't be able to say 'no' and would fuck him when he returned, even if he were empty handed.\n\nHe crawled out of bed and found a towel to clean his face before slipping on a tee-shirt, shorts and flip-flops. He brought the pussy soiled towel back to her, his cum still decorating her chin, neck, and chest, \"Okay, I'll be back in a few, meantime, you watch this brotha pound these white babes and get ready for some serious fuckin' when I get back!\"\n\nAbbie finished wiping up Nick's mess and then cozied up between the pillows as a naughty grin formed on her face. She bit her lower lip and slid her hand sexily down her body to her silky bush. \"I will stud...but please don't take long...my fingers might get tired!\"\n\nNick's eyes widened as he tried to wrap his head around the fact this was his formerly conservative coach. He ogled her hot body, clad only in her skimpy bra and high heels with her hand between her legs. He shook his head in aroused disbelief before hurrying out the door.\n\nNick was gone an inordinately long time before he came back to the room without rubbers, but he did have champagne, desserts and KY fuck cream. Abbie had watched so much interracial porn by that point, she practically tore his clothes off.\n\nAs he suspected, Nick Thomas was balls-deep unsheathed in her fertile married pussy in no time.\n\nUnlike the night of the party, this time she didn't experience pain when the black bull sunk his cock in her welcoming pussy. Thanks to their previous mating and an unending flow from her horny cunt, Abbie stretched easily as Nick fucked her in every position imaginable. She lost count of how many times she climaxed on his glorious dick. Its immense size and rough, veiny contours pleasured every sensitive inch of her married pussy as he banged into her relentlessly throughout the decadent night.\n\nEven more so than the first time, their sex was raw and hungry, not rushed, but urgent and unrelenting. Her black bull ripped one dripping orgasm after another from her greedy pussy. Abbie's constant moans and grunts spurred him on while his dirty talk heightened her arousal. As he fucked her, he made her tell him how much she loved it, \"Say it baby, tell me how good this big black cock makes you feel?\"\n\n\"Oh god...I love it Nick! It makes my pussy feel so good! Don't stop...please!\" The overwhelming sense of fullness she experienced the first time returned as his huge black dick sank all the way to his balls. She watched in the mirrors above the bed as his flexing black ass rhythmically plowed in and out like some perfectly scripted exercise program.\n\n\"Yeah, tell me more slut!\" He demanded, aroused at the look of pure ecstasy on her gorgeous face.\n\n\"Oh...uhn...god...your big black cock makes me cum...cum so much! I don't want it to stop...I want it all night long Nick...uhn...uhn...\" Abbie whimpered, eyes unfocused, remembering now how every deep thrust of his amazing dick made her crave the next one. The hot coach could already feel a big orgasm building deep inside her. \"Oh...oh...Nick...you're gonna make me cum so fast...it feels so good...uhn...uhn...yeah.\"\n\nAbbie's tongue shot deep inside his mouth darting and swirling wildly. Meanwhile Nick's long cock bumped against her cervix at the conclusion of each deep thrust after roughly assaulting her g-spot along its deliberate journey to her welcoming depths.\n\nHis euphoric former coach screamed out, \"Oh God Nick...don't stop...don't stop...oomph...oomph...shit...so deep...oh god...fuck me yes...oh god...I'm cuuummmiinnnggg!\"\n\nAbbie's entire body clenched in ecstasy. Nick felt the strong gush of her squirting pussy as it spouted down his shaft onto his swinging balls as he power-fucked her.\n\nNick railed into her relentlessly right through her orgasm. She had softened in her recovery and her supple body rippled against his powerful treatment. He watched her tremendous tits as they jiggled in her tiny bra, swollen nipples yearning to be exposed, pressing urgently against the shear fabric of the sexy garment.\n\nSomething about big tits on thin white chicks made Nick's balls bounce together in arousal. Abbie's were as good as any he'd ever seen. From the first time he'd seen them at the recruiting visit, the Juco transfer had wanted to get his lips around her luscious globes. That desire only grew as he witnessed them in various states of dress over the next couple of years\u2014the highlight being the tiny string bikini she'd worn the previous year at State Championships.\n\nNick remembered coming down to the hotel pool the day before the competition with Amber Tisdale's cum still leaking from his dick, herself possessing quite the impressive rack, when he saw Coach Abbie's breasts spilling from the undersized bikini. It was a vision engrained in his mind until the night of the party when he ripped the sexy babydoll from her writhing body and witnessed her d-cups in all their splendid glory, bouncing heavily, finally revealing themselves to him. He'd spent much of that night sucking, licking, and fucking those big beautiful tits until they eventually milked a messy shower from his swollen balls. He remembered how good they'd looked covered in his cream, even before Abbie rubbed it in like lotion.\n\nHe would experience that vision again on this night.\n\n\"Show them to me,\" he growled as he pumped her in long fast strokes, low-hung balls scraping along the mattress before banging off her tight ass.\n\nAbbie stirred, her previously glazed eyes becoming suddenly clearer. \"What...show what to yo-\"\n\n\"Those big tits, take off the bra,\" he demanded, cutting her off before she could finish.\n\nAbbie's hands were already busy gripping Nick's muscular biceps and shoulders as he held himself above her, their hips colliding in a symphony of slapping body parts and wet slurping sounds. Her sinewy swimmer's legs locked around his hips, high-heeled feet entwined together just above his flexing ass.\n\n\"Ffffffuck me Nick,\" Abbie urged as she dropped her hands and tantalizingly released the front clasp. The tight little bra sprung apart and her huge tits poured out in perfect circular mounds of goodness\u2014each capped by stone nipples centered on perfectly sized one and half inch areolae. Abbie arched her back, elevating them for her black lover to taste.\n\nNick growled excitedly before aggressively dropping his mouth onto the heavenly set. He continued his assault as he slobbered and sucked on her hot tits. \"Mmm hmm, these big titties taste as good as before...damn girl, you got some sweet-ass nipples!\"\n\nAbbie wrapped her fingers in Nick's dreads and held his head between her heaving boobs. \"Yeah Nick, suck my breasts...your mouth feels so good!\" She always loved the way Justin's lips and tongue felt on her nipples, but Nick's technique felt more assertive and raw\u2014almost savage.\n\nHis forceful gnawing made her nubs so rigid they actually ached. \"Oh god Nick...yeah like that...bite my tits! You feel so good everywhere, I love everything you do to me. I can't believe I waited this long to feel you again.\" He could tell by her breathing and constant moaning, she was nearing another epic orgasm.\n\n\"You gonna cum again baby?\"\n\n\"Oh god yes soon, I wanna do it all over your amazing cock Nick!\" She whined, arms wrapped around his neck with a look of complete ecstasy in her bleary eyes.\n\n\"Of course you do, but first, flip over. Get on your hands and knees for me slut.\"\n\n\"Oooh yeah,\" she cried out excitedly. A loud wet popping sound escaped her sodden pussy as his cock popped from her tight lips. She flipped over quickly in anticipation. To her delight, they'd fucked doggy style much of the night in her bed. It wasn't a position that she and Justin made love in often, but Nick insisted on it and she quickly realized she loved every second of it with her dominant bull.\n\nNick positioned her on all fours and spanked her tight bubble ass. Abbie squealed as redness formed immediately on her rippling ass cheeks. He lined up behind and toggled her dangling pussy lips with his spongy head before flexing his cock and driving steadily until his black leathery scrotum mashed violently against the back of her slim white thighs.",
        "This time his hot coach screamed in delight, her body trembling. Her head fell to the mattress as her grip tightened on the bed sheets. \"Oh god Nick yes...you're so deep inside me! You know I love it when you give it to me hard like that!\"\n\nNick could barely make out Abbie's muffled pleas with her face pressed into the mattress. He spanked her again, harder this time. \"Oh Jeez... Fuhh..uck...\" she grunted.\n\nNick gripped a handful of her thick hair and increased his pace. In no time, he was aggressively pounding his hot coach like he used to hammer the whores from Stockton. \"Yeah Abbie, you look good on the end of my dick!\" He actually couldn't remember ever being more turned on.\n\nHis outrageously hot married coach who he'd seduced for well over two years was moaning and grunting like she was in heat as he railed into her uncompromisingly. He spit on his hand and brought several fingers to her sex-juiced asshole. He teased the sensitive orifice until she begged him to put it inside, \"Oooh yeah Nick, stick it in my butt like last time...it felt so good...please!\"\n\nNick teased her until she begged again. He remembered how intensely she came the last time he fingered her ass, he knew something big was building inside her and this would undoubtedly put her over the edge. Finally he slipped his middle digit into her puckered hole and wiggled it. Abbie shrieked in ecstasy. He spanked her again with his free hand, \"You like that shit?\"\n\n\"Oh...uhn...yes...it feels sooo good! Sooo good!\"\n\nFucking Abbie Dawson was the rarest of treats. Nick watched as her tight married pussy lips gripped his fat cock like a rubber band and basically turned inside out with each thrust of his powerful dick. Her constant mini-orgasms bathing his cock in the slickest of warm wet fluids while overflowing juices from around her asshole welcomed his probing finger.\n\n\"Oh god Nick...fuck me!\"\n\n\"You love this nigger dick?\"\n\n\"Yes...yes I love it...oh...oh...yeah!\"\n\n\"What do you love? Tell me?\"\n\n\"Your big black dick Nick...I love it...uhn...so good!\"\n\n\"No, call it by the proper name...this is one grade-A Stockton bred NIGGER dick! Say it!\" This was a line he'd used on many occasions, always with successful results.\n\n\"Oh shit Nick...it feels sooo good...your...your big nig...uh NIGGER dick is going to make me cum again...Fuck Me!\"\n\n\"Yeah it is slut! And I'm gonna get my nut too! You want me to paste your insides with this black baby batter, don't ya? \"\n\nAbbie was afraid this moment of decision would come, but there was no way in hell she could let him pull out now, she would die if she didn't get to cum all over his fantastic cock. She whimpered quietly, \"...yes\".\n\n\"I couldn't hear you, do you want me to pull out and jizz on your back?\" Nick shouted as he spanked her ass again.\n\n\"Oh yeah...I mean no! Don't stop...plll...pllleeeasse don't stop! I want to feel it shooting into me you black fucking bull! Fuck me like you fuck my friend Brie at that Bull place! Make me cum all over your huge cock just like she does!\" Abbie practically screamed.\n\nNick couldn't believe what he just heard come out of her mouth, \"She knows about the Pen and that hot blonde bull bait? This is gonna be interesting...\" But at this moment he had something far more urgent on his mind...and on his dick, \"Shit bitch, I'm gonna get my nut...these big ol' bull nuts got something hot and potent for ya!\" he wailed as he gripped her sexy hips with his big black hands. Her pale flesh bulged around his strong fingers as Nick plugged his dick deep into her depths.\n\n\"Fuck Yeah!\" he roared in pleasure as a raging torrent of Negroid semen exploded deep into her fertile womb. \"Oh yeah...fuck me Nick...yeah...shit...oh God...so deep...oh...oh...oh...Fffffffuck Mmmeeee!\" Abbie's hands gripped the sheets tightly again as her head flew from side to side and the most intense squirting orgasm she ever experienced ejaculated from her pussy and washed around the sides of Nick's plunging viper. They collapsed together in a sweaty twisted mess, both gasping and shaking from a truly epic fuck.\n\nThat was just the beginning of another long night of unforgettable sex between the coach and prot\u00e9g\u00e9...of course those rolls were now reversed.\n\n*****\n\nThey woke to bright mountain sunlight pouring in through the long bank of windows in the massive suite. Abbie's head ached and her mouth felt parched. Her eyes stung from lack of sleep and her body felt tight with dried bodily fluids as it had the last time she and Nick had sex. She could feel wetness between her legs and suddenly remembered why...Nick's ample creampie was still oozing from her gaped lips. She glanced at the clock, it read 6:30 a.m. \"Oh shit Nick, we have to get up, the meeting starts in an hour and a half!\"\n\nHe rolled over and smiled. He then reached out with a big paw, cupped her ass cheek, and pulled in his direction, \"What's your hurry baby?\"\n\n\"Nick no! It's going to take me almost that long to get ready and I need you to find a pharmacy!\"\n\n\"Pharmacy? Why do you need a pharmacy, are you sick?\"\n\n\"Are you kidding me? I need a pharmacy for this!\" she shouted, scooping a hand below her stretched pussy. She raised her arm and showed him fingers covered in thick, pale cum. \"It's frickin' pouring out of me.\"\n\nA proud smirk populated Nick's face, \"...Oh yeah.\"\n\nAbbie shook her head, crawled out of bed, and ambled back to her room as fast as her aching head would allow\u2014mixed sex juices spilling down her thighs as she went. After draining as much fluid from her insides as possible, she stepped into the steamy dual-headed shower, it felt amazing on her sex-ravaged body.\n\nSuddenly she heard a loud sound that reminded her of a pitcher of water being poured into a full bathtub from several feet in the air. She turned to see Nick smiling at her through the clear glass shower doors while a garden hose-like stream blasted from his long hanging cock into her toilet. \"Ahh shit, that feels much better,\" he gasped as the stream's intensity gave no signs of let-up. Abbie couldn't believe how long he stood there filling the bowl before he finally gave the heavy black tube a floppy shake. As she now observed his flaccid dick in daylight, she couldn't believe that big thing had been inside her for most of the night.\n\nNick moved towards the shower, \"You got room for another in there?\"\n\n\"Nick, NO you need to go back to your room, I seriously have to get ready and I really need you to run that errand for me,\" she pleaded.\n\nHe eyed her spectacular body under the flow of the competing shower heads, he could feel blood flowing to his cock, \"C'mon, I'll just come in and wash your back or maybe your front if you need help with that part,\" Nick teased, knowing it was likely a futile endeavor, but trying nonetheless.\n\nAbbie just stared at him with a perturbed look on her face.\n\n\"Okay, I guess I'll just go back and shower in my massive sixteen-headed walk-in all by myself,\" Nick complained with a dog-faced grin. This time they both laughed.\n\nA half hour later he came back to her room, showered and dressed for the meeting. She was still wrapped in a bath towel drying her hair. Nick came up from behind while her head was leaning forward drying the underside of her thick mane. He reached around as stealthily as possible and cupped her big tits. Abbie screamed and nearly jumped out of her skin as the hair dryer flew out of her hands and crashed against the floor.\n\n\"Oh my god, you're such an asshole Nick Thomas, you scared the shit out of me!\"\n\nHe couldn't contain his laughter until her towel suddenly came undone and fell from her body exposing her spectacular figure, \"Damn girl, are you sure we have to go to this meeting, I'd like to crawl back under the sheets with that sexy body and do some serious fuckin'!\"\n\n\"Nick, that's enough,\" she directed sternly, an air of stress mixed in. \"Do you know what to buy?\"\n\n\"Yeah, I know the shit. Say, I hate to do this, but I haven't worked in a while and I don't get my first check from the university until the middle of the month, can I bum your credit card?\"\n\nAbbie looked at him incredulously. \"If it weren't for HIS sperm inside me we wouldn't need this,\" but she couldn't put all the blame on him, she was every bit as culpable for begging him to cum inside her.\n\nShe then also remembered he was only twenty-two years old, just out of college, and undoubtedly not flushed with money. \"Yeah sure it's in my small purse, which is God's knows where, I think in your room!\"\n\nNick ogled her flawless tits one final time as she wrapped the towel back around her. He turned and reluctantly crossed to his room.\n\nForty-five minutes later Abbie scooted into the meeting at 7:59 a.m., a venti six-shot Starbucks latte in hand...morning-after birth control pill dissolving in her stomach...and millions of horny black sperm churning in her insides, searching for a way into her fertile egg.\n\n*****\n\nJustin Dawson's drive in to the Lake Tahoe basin was spectacular. Bright skies and the contrast between the azure lake and emerald pines surrounding it made for a breathtaking view. The whole basin, bounded by the majestic peaks of the Sierra Nevada Mountains made this one of Justin and Abbie's favorite places. The coach was stoked about his birthday weekend.\n\nJustin got to the hotel around 10:00 a.m., hours before his planned arrival. There were a couple of people waiting in line at the desk where two hotel employees were checking people in. The line moved slowly but he didn't mind this morning\u2014everything was good in his life and he was enjoying checking out the gorgeous blonde associate on the right. He secretly hoped her line would open up when it was his turn at the front.\n\nAs luck would have it, it did.\n\n\"Oh hi Mr. Dawson, your wife said you'd be arriving today,\" the perky blonde greeted him with a big friendly smile after he told her who he was. Justin liked that she welcomed him so enthusiastically, if he hadn't known better, he'd thought she was flirting with him.\n\n\"I'm Kristi, welcome to Harvey's,\" she said, big green eyes flashing and long eyelashes fanning him when she blinked. \"I thought your wife said you wouldn't be arriving until late this afternoon?\"\n\n\"Yeah, my meetings in Sacramento got cancelled so I decided to come up early...can't beat a day like this in Tahoe!\"\n\n\"You got that right Mr. Dawson, I'm going to miss it,\" Kristi frowned cutely with a pouty look.\n\n\"Are you leaving?\"\n\n\"Yes, today is my last day. I'm finally using my Hospitality Management degree for something bigger. Next week I head off to the Bahamas, I got a job as an assistant social director for Princess Cruise Lines. I'm going to miss Tahoe, but I'm looking forward to my new job.\" She smiled back at him as she key-stroked the keyboard in front of her.\n\n\"Sounds like a pretty cool job, congratulations!\" Justin replied, suddenly noticing the flower arrangements scattered around her work station, \"Looks like everyone else is going to miss you too!\"\n\n\"Yeah, I've met some awesome people here, I'm going to miss them all a lot. Hey speaking of awesome people, I checked your wife in yesterday when she arrived. She's so cool! You're a lucky man Mr. Dawson, she's really pretty too. She also stopped by before her reception last night, I loved that red dress she wore, she looked like a model!\"\n\n\"Yeah, it's one of my favorites! Thanks for noticing, she'll be flattered to hear you liked it!\"\n\n\"Oh don't worry, I told her!\" Kristi smiled again as she came around from behind the desk. Justin did his best to keep eye contact with her pretty face, but he stealthily checked-out her rockin' body simultaneously. Shapely narrow hips, tanned legs, and a full chest filled out the business skirt-suit nicely.\n\n\"Do you guys have big plans for the weekend,\" Kristi asked cheerily.\n\n\"Well today's my birthday, so I'm sure she has a thing or two up her sleeve!\"\n\n\"Oh, Happy Birthday Mr. Dawson, your wife didn't say anything about that!\"\n\n\"Call me Justin, I'm sure she had bigger things on her mind.\" The irony of his statement was completely lost on the two of them.\n\n\"I bet she has some fun things planned...uh...but she might need a little downtime before you guys get to celebrating tonight. That must have been quite a reception last night, your wife came down in a relative panic this morning looking for a strong cup of coffee. She said she overslept and, please don't take this wrong Justin, but she didn't look quite as bright-eyed and bushy-tailed as she did last night.\" Kristi secreted with a giggle.\n\nJustin laughed. \"Oh is that right? I haven't talked to her yet this morning, did she look a little hung?\"\n\nKristi smiled, \"She said she was up late, so I assume so!\"\n\n\"Serves her right,\" he joked. \"But being the good husband I am, I might allow her time for a little power nap...\"\n\nThey both laughed again as Kristi handed him his key. \"Here you go, room 1824. The room is on our suite level, unfortunately it isn't one of the largest rooms, but it has an unbelievable view of the lake! But just be aware, I don't believe housekeeping has made it to the 18<sup>th</sup> floor yet this morning, the room probably isn't made up yet.\"\n\n\"No problem, I'm just going to drop my stuff upstairs and go hang out by the pool for a couple of hours anyway,\" he responded with a thankful smile.\n\n\"Nice to meet you Mr. Dawson...uh...Justin, let me know if there is anything I can do for you or your wife...Abbie is it? I get off at six.\"\n\n\"Yes it's Abbie, you bet we will Kristi, enjoy your last day on the job!\"\n\n\"Thanks, I will.\" She flashed her beautiful white-toothed smile one final time.\n\nJustin stole one final glance at Kristi's ass as she moved back behind the counter. \"Damn, someone on that cruise ship is going to have fun tappin' that!\"\n\n \n\nHe arrived at room 1824 a few minutes later with his rolling bag in tow, swiped his key and entered. Justin instantly caught the unmistakable scent of Abbie's perfume, \"Damn I love that smell!\" As he tossed his bag on the bed, he was immediately distracted by the unbelievable view of the lake through the big windows. He moved in that direction, but suddenly stopped in his tracks.\n\nTwo things were amiss: The bedding on the king-sized bed was untouched, and the door to the adjoining room was partially open.\n\nJustin took a moment to ponder the possibilities, \"Maybe Kristi was wrong, perhaps housekeeping has already been here.\" He then walked into the bathroom and realized that wasn't the case\u2014his wife's cosmetics lay messily on the counter, used towels lay outside the shower, and most concerning, the toilet seat was up, \"WTF...\" Suddenly Justin's heart beat rapidly in his chest.\n\nThe coach nervously walked back into the main part of the room and looked over at the open adjoining door\u2014he moved slowly in that direction. As he turned the corner and looked inside, he was surprised to see that it was a much larger suite, in fact it was huge. The California king-sized bed that backed to the wall dividing the two rooms was a mess. The sheets and blankets lay crumpled in a pile in the middle of the bed and the pillows were scattered about. Justin called out loudly, \"Knock-knock, is anyone here?\"\n\nNobody answered, the large room was silent. It also reeked like sex.\n\nMoments later the blood in Justin's veins turned ice cold. There was a very familiar looking garment lying on the floor in the middle of the room. He walked over and picked up the silky red dress. He held it to his nose, Abbie's unmistakable scent filled his nostrils, \"Oh my god, my wife is having an affair!\" It was all he could do to keep from falling to his knees, the enormity of the situation was too much for him\u2014he stumbled to the bed and collapsed down on the edge. A million thoughts suddenly filled his mind.\n\n\"How did I not suspect this? How long has it been going on? Who the fuck is it?\"\n\n \n\nAfter a long minute of chest palpitations, Justin regained the strength to stand and look around. He now saw Abbie's four inch sexy black heels lying haphazardly near the foot of the bed. As he walked to the other side, the final confirmation clues came into view. His wife's tiny black lacy bra and g-string panties lay side by side. The panties were practically ripped apart. If he wasn't sure before, he picked up the bra and the little 34D tag confirmed his worst fears, \"How could she do this?\"\n\n \n\nHe glanced up and saw large mirrors covering the ceiling above the bed. He thought to himself that some other man must have got to witness his naked wife's phenomenal body writhing in ecstasy from above. As Justin now looked around the large room, more signs of her infidelity came into view. A tube of KY jelly lay on the night stand. He picked it up and was surprised at its lack of contents.\n\nJustin looked across the room and saw two champagne glasses sitting on the coffee table in front of the big screen television. One of them had lipstick impressions on the rim that looked very much like Abbie's favorite color. There were also two plates of chocolate covered strawberry remnants and a half-filled bowl of whip cream. He walked over to the wet bar and found a nearly empty bottle of champagne. \"Damn her!\"\n\n \n\n\"Who is it? Do I know him? Obviously, he has money, they don't give rooms like this to just anyone.\" He wracked his brain for a long minute before his thoughts turned to Curt Michelson, the dean of the Exercise Sciences School at Sac State\u2014Abbie's boss's boss.\n\nJustin had seen the way the man looked at Abbie every time he got the chance. The dean spent an inordinate amount of time at the Sac State pool for someone whose job didn't require him to. Without a doubt, he'd be the one coordinating and hosting this retreat, it would make obvious sense that he'd get upgraded to the largest suite. Someone in his position could also have a hand in coordinating room assignments\u2014conveniently putting the school's gorgeous dive coach in the adjoining room to his own.\n\n\"Why would she fuck him?\"\n\nJustin looked around for more clues to the man's identity, but couldn't find any. Suddenly another concerning thought entered his mind, \"Oh fuck, I didn't see any condoms or wrappers near the bed.\" Justin made a quick perusal of all the suite garbage cans and didn't find any evidence, \"Goddamit, she fucked this guy without protection? How could she?\" \n\n \n\nAs Justin sat back down in disbelief, an idea occurred to him. He picked up the room phone and dialed \"0\". After a couple of rings a woman answered, \"Harvey's special services department, how can I help you Mr. Thomas?\"\n\nJustin stuttered momentarily before hanging up, \"Thomas...who the fuck is Mr. Thomas? Wait...Mr. Thomas...no...could it be?\" Justin picked it up and dialed again. The receptionist answered, \"I'm sorry Mr. Thomas, we must have gotten disconnected, how can I help you?\"\n\n\"Uh...I am trying to make sure I have the right name on my account for expense purposes, how is my first name listed on my reservation?\"\n\n\"It's listed as Nick, is that how you would like it to read Mr. Thomas, we can change it if necessary.\"\n\n\"No...no, it's fine, sometimes they list it as Nicolas, I just wanted to make sure, thanks!\" Justin hung up the phone and an awkward rush of relief mixed with arousal coursed through his veins. \"Why didn't I consider Nick? Of course if she's going to fuck someone, it'd be Nick!\" \n\nJustin now wandered around the room feeling a weird sense of jealous arousal. The past few months of supposed inactivity between the two of them and the extravagant suite had clouded his power of deductive reasoning. Moments ago he was devastated by the suspicion his wife was having an affair with an older white married administrator. Now he knew she was instead fucking the same younger black man who had rocked her world a few months previously. \"How did Nick get this suite?\"",
        "Every nerve impulse in Justin's body now surged into overdrive. His cock was rock hard in moments. He began to wonder if his wife had in fact abstained these past few months from the big black cock that had given her so much pleasure the night of the party. But he wondered nonetheless, why she would fuck Nick behind his back? Before they came to the ultimate decision to sever things with him, they engaged in one of the deepest, most difficult discussions of their marriage. As part of the debate, Justin had all but told her it was okay if she wanted to be with Nick again, as long as he got to be involved in some capacity this time around.\n\nAbbie had experienced a bitterly difficult decision as she wrestled with her desire for Nick's wonderful cock versus her knowledge that an ongoing affair could put irreparable stress on their marriage. They ultimately agreed they had too much at risk to allow the relationship to continue. Eventually they decided, despite both of their desires, to break things off with Nick before the situation reached a point of no return.\n\nSuddenly it dawned on Justin that it had been Abbie who supposedly communicated their decision to Nick. \"Maybe she never told him? Instead she fucked him stealthily! Was this the only time? Why did she hide it from me?\"\n\nJustin now pulled the bedspread back and inspected the sheets more carefully. The telltale signs of two people, good at the art of fucking were on display. The sexual wetness that had coated him and Abbie's marital bed on the previous occasion, now soaked the sheets of the hotel bed. \"God, it looks like they fucked all night just like the last time! That's why she looked so worn out to the girl at the front desk...\"\n\n \n\nThen another thought occurred to him. \"Maybe I can get more clues as to what really happened here...\" He picked up the phone and dialed \"0\"again.\n\n\"Yes Mr. Thomas, what can I do for you?\"\n\n\"Front desk please,\" Justin said in his best Nick Thomas impersonation.\n\n\"Front desk, this is Kristi speaking, how may I help you Mr. Thomas?\"\n\nSuddenly the image of the beautiful blonde appeared in Justin's mind and he got momentarily flustered.\n\n\"Nick, are you there?\"\n\n\"Yes, sorry I dropped the phone,\" he lied.\n\n\"Oh hi there Nick, how are you feeling today?\" Kristi's less than formal greeting and forward question caught Justin by surprise.\n\nAgain in his best Nick Thomas impression he responded, \"Oh, are we on a first name basis now Miss...uh...front desk?\"\n\n\"Well, since you asked for my phone number last night, I would think we should be...and in case you forgot due to the booze, it's Kristi!\"\n\n\"I wasn't that drunk,\" Justin back-pedaled, not sure what else to say in an attempt to buy some time.\n\n\"Really? I would beg to differ,\" Kristi giggled. \"I have to whisper, my boss just walked by. If you weren't drunk, why did you grab my butt when I tried to help you find those...uh...things you were looking for?\"\n\n\"I guess I was drunker than I thought, I don't remember what you're talking about!\"\n\n\"You really don't remember? It was like 12:45 p.m...right before I got off my shift, you came down and said you had a friend in your room waiting impatiently for you to get back upstairs! You asked me if we had any...you know...contraceptives. I showed you what we had, but you said those wouldn't...uh...work. You don't remember that I then told you a 24-hour CVS was only a block away?\"\n\n\"This whole conversation is kind of fuzzy...\"\n\nKristi giggled. \"You then said you didn't want to walk a whole block. Then you spent the next several minutes trying to get my phone number!\"\n\n\"Yeah, what can I say, I liked your blonde hair girl.\" Justin smoothed in his best Nick Thomas black dialect, knowing he couldn't possibly come across as cool as the young black man.\n\nKristi lowered her voice and whispered into the phone, \"Oh, is that all you liked? You told me you thought I had nice eyes while you stared at my chest the whole time. Anyway, what can I actually help you with Mr. Thomas? I have other guests waiting in line at the moment.\"\n\n\"I was hoping to get an itemized copy of my folio expenses. I don't check out till tomorrow, but I might have to pay for some of those items with cash and I want to know if I need to stop by the bank.\"\n\n\"Your company won't let you expense bottles of champagne or KY,\" Kristi teased, knowing it was her last day.\n\n\"I'm afraid not, can you have someone bring up a copy right away and slip it under my door. I'm heading back to my meeting.\"\n\n\"Sure thing Mr...uh...Thomas, it's been a pleasure serving you!\"\n\nJustin couldn't help but think that the pretty blonde front desk babe was still flirting with the very black stud in room 1826. \"Okay thanks Kristi, I hope to see you around sometime!\"\n\n\"You never know Nick Thomas, maybe we will...see ya!\"\n\nJustin sat down on the couch and looked out on Lake Tahoe as he thought to himself, \"My wife was waiting up in this guy's bed and he was downstairs trying to get in the pants of the front desk chick...what a cocky son of a bitch!\"\n\nJustin then tried to picture the scene from the previous night when Abbie's red dress dropped to the floor and she stood in only her sexy black bra, g-string, and heels as Nick Thomas undoubtedly looked on approvingly.\n\nJustin had seen his wife in the same sexy outfit a handful of times and the perfect image was still engrained in his mind. He pictured Abbie's big tits straining to be contained in the lacy number that appeared a size too small...her pretty little dark patch peeking through the shear window of the panties...her long tanned legs being accentuated by the fuck me four inch heels...and finally her exposed tight little bubble ass cheeks that she admitted her black lover had spanked aggressively months before.\n\nThe aroused husband reached down and rubbed his hard cock as he envisioned how badly Nick must have wanted to fuck Abbie's brains out...which of course he later did, but not before going downstairs and attempting to get into the pants of the hot blonde. \"I wonder if he would have tried to bring her up and fuck them at the same time if she agreed?\" Suddenly an erotic image of Kristi on her elbows and knees taking Nick's huge cock from behind while hungrily eating Abbie's beautiful little pussy flashed in his mind.\n\nJustin's cock couldn't be harder.\n\nHe walked into the huge master bath and was immediately taken by the large Jacuzzi tub that sat in the corner of the wall, resting beneath two big picture windows facing the lake. Several wet towels lay on the floor below it\u2014he could see an unmistakable soap ring around the tub at the fill line. Again he reached down and rubbed his dick as he tried to envision the erotic scene as his beautiful wife and her black lover fucked in the hot bubble-filled water.\n\nJustin moved back into the large suite and contemplated again why the newest staff member of the department was given such an extravagant suite. And how was it that Nick and Abbie's rooms happened to be connected? He was just about ready to head back into their room when an envelope slipped under the door. He opened the unsealed package. Immediately he noticed Kristi's signature with two hearts dotting the \"i's\" of her name, followed by her phone number across the top of the page. \"Damn I actually helped that lucky son of a bitch get her number after all!\"\n\n \n\nJustin perused the itemized bill. The first thing that jumped out, but didn't surprise him, were two \"adult movie\" charges. He knew that Nick and Abbie had \"indulged\" in interracial porn on their previous hook-up and apparently it had achieved its purpose, as they treated themselves to it once again\u2014this time at $12.99 a pop. The charges for the bottle of champagne, two Strawberry Delight's, and a toiletry item were all listed on the folio. Justin figured the toiletry at $9.99, probably represented the KY fuck jam.\n\nJustin rubbed his hard cock. The idea of Abbie fucking Nick again was one that he had pondered every single day since the party, but he still couldn't wrap his mind around why she would do it without telling him. He wondered if she would come clean when he saw her, but suspected she wouldn't as she hadn't breathed a word of her desire to do it (or whether she already had) even once over the past several months.\n\nNow as he stood next to the bed where his wife's infidelity had taken place only hours before, he questioned how he should respond. Part of him saw this as the green light he had hoped would finally come, leading to a possible repeat performance with Nick on this night\u2014his birthday. Obviously, this time he would get to be here to experience it firsthand and finally scratch that itch that had started small years before but had grown significantly once Nick Thomas came into their lives. Whether Justin would just watch or actually participate in some way he didn't know.\n\nBut on the other hand, in spite of his ever-present cuckold desires, Justin didn't want to reward Abbie with another night impaled on Nick's huge cock if she didn't come clean on her own. He now had a very good idea their relationship with Nick would proceed at some point, but the faithful husband in him, now desired some payback for her infidelity\u2014perhaps making her twist in the wind before progressing with Nick would make her understand the value of open, honest communication with him.\n\nAs Justin glanced back up at Kristi's signature and phone number, a devious idea occurred to him. \"If this works, it could teach Abbie a lesson for fucking him behind my back...and it'll be damn fun to see how she reacts!\" Justin pulled his cell phone from his pocket and entered Kristi's number into the text box, he then typed: \"Hey this is Nick, it's about time you passed that number along baby, what time do you get off work?\"\n\nJustin waited anxiously for a response...finally it came: \"Six o'clock, why?\"\n\n \n\nHe replied back, \"Why don't you come up here after you get off...\"\n\n \n\nKristi's response, \"Isn't your 'friend' still around?\"\n\n \n\nJustin laughed, he couldn't believe this was actually working. He typed: \"Nah, she bailed. Besides she wasn't as much fun as you!\"\n\n \n\nHer response, \"How do you know I'm fun? For all you know, I could be a couch potato.\"\n\n \n\nJustin thought to himself, \"I can't believe I'm doing this. This guy fucked my wife last night and now I'm helping him get laid by this hot little blonde.\" He typed back, \"I'm willing to take my chances...I have a feeling you might be into other things on the couch than just watching TV!\"\n\n \n\nNext message, \"You're bad Mr. Thomas...you never know though...maybe I like to watch the kind of shows you like to rent!\"\n\n \n\nJustin couldn't believe what he just read. \"Damn, she seemed so innocent when I talked to her.\" He typed, \"I think we can arrange that!\"\n\n \n\nKristi's final response, \"I'll be up around 6:30 p.m.\"\n\n \n\nJustin shook his head. \"That lucky son of a bitch!\" He typed back in typical Nick Thomas arrogant fashion, \"I'll be here!\"\n\n \n\nJustin sat on Nick's couch, amazed at what he'd just pulled off. He thought how delectably good this could turn out if it all worked as he hoped. Now the only question was how to make sure Nick would be in his room when Kristi came knocking. Suddenly another cleaver idea occurred to him, but he would need some assistance to pull off this part.\n\nHe went back into his room and changed into his swim suit, tee-shirt, Oakland A's cap, and flip flops. Before he headed out, he entered the bathroom to take a leak. As he stood pissing, he glanced down at the garbage can next to the toilet. Sitting exposed was a familiar looking empty box. Justin immediately recognized the same morning-after pill box that he had purchased the day after the party. \"Jesus...that confirms they fucked without protection again...what the fuck is wrong with my wife?\" \n\n \n\nJustin dug through the can and found the receipt, it was from a local Stateline CVS. The purchase was made earlier that morning and Nick's signature was at the bottom\u2014but to Justin's chagrin, it was Abbie's credit card number. \"That jerk made her pay...\" \n\n \n\nWorse yet, the total charge was well over $100. In addition to the $50 morning-after birth control kit, the receipt included a 24-pack of BIGFOOT XXX MAGNUM PLUS rubbers, a Speed Stick men's deodorant, a Sports Illustrated magazine, a Monster energy drink, a bag of sunflower seeds, and a box of Cheez-its. The latter three of which Abbie would have never put in her body. \"Now in addition to letting him fuck my wife, I'm buying this guy's groceries and condoms...WTF?\"\n\n \n\nBut then as he pondered the situation further, he found one silver lining. \"Since they didn't have condoms and the kit wasn't purchased till this morning, hopefully that means they didn't plan this hookup in advance! Either that or my wife has lost her mind...\"\n\nJustin returned to Nick's room and quickly grabbed the itemized folio and slipped it into his backpack. He rolled his overnight bag behind him and left everything else the way he found it in both rooms. He went back downstairs and was happy to find Kristi working the front desk all by herself.\n\n\"Hey you look a lot more comfortable now Mr. Dawson...just like a guy celebrating his birthday in Lake Tahoe should,\" the hot blonde chimed with a big flirty smile.\n\n\"Yeah, I'm gonna go hang out at the pool. I got a good book, some tunes, and I might even tip back a few beers! Hey that reminds me, I've decided to surprise my wife that I arrived early, so if you see her, please don't tell her I'm here yet.\"\n\n\"Oh that's sweet...and romantic! My lips are sealed Mr. Dawson.\"\n\nFor some reason, Justin's dirty mind didn't go to her facial lips. \"Remember, call me Justin, and by the way, do you have any stationary cards with the hotel logo on them? I want to write her a couple of notes.\"\n\nKristi looked at him adorably, \"That's so sweet...uh...Justin, of course we do.\" She handed him several thick-papered postcard-sized stationary cards. \"Anything else?\"\n\n\"Yeah, can you store my bag, I don't want her to show up at the room and find it!\"\n\n\"Sure Justin, happy to do it. I love surprises.\" Kristi's eyes flashed once again.\n\n\"Last thing, can you contact housekeeping and have them service our room ASAP. I'm thinking of surprising my wife by waiting for her in...uh...well I think you know what I'm getting at,\" he requested with an impish grin.\n\nKristi knew exactly what he meant, she smiled again. \"Consider it done Justin! I hope you have a GREAT birthday!\"\n\n\"Thanks...and this is a big day for you too! Any exciting plans following your last day of work?\"\n\nShe smiled back excitedly, \"Yes, something just came up a few minutes ago, I can't wait!\"\n\nJustin thought to himself, \"You better be ready you horny little thing, you're world is about to get rocked!\" \n\n \n\n\"Ah, good for you Kristi. If I don't see you again, have a great time tonight and best of luck in your new job!\" Justin handed her his rolling bag, said goodbye, and headed off to the pool. It was 11:30 a.m.\n\n*****\n\nAt that same moment, his wife's cell phone vibrated on her desk at the seminar.\n\nAbbie had finally consumed enough coffee to keep from succumbing to her exhausted malaise. The morning sessions could not have been more painfully boring, but thankfully in addition to the java, one other thing kept her stimulated throughout: reoccurring memories of the previous nights' unforgettable sex with Nick.\n\nAbbie glanced down at her phone and saw that it was a text message from him...from Nick, a picture was imbedded. Coincidentally, the message read \"Are you thinking about this right now?\" \n\n \n\nAbbie sat up straight in her chair and looked around at the people near her. Most had the same glossed over gaze that had been on her face before the text message arrived. She pulled the phone close so only she could see and scrolled down to the photo. She gasped loud enough that the people on both sides looked her way. The coach pulled the phone to her chest until they both turned their attention back to the speaker.\n\nAbbie cautiously looked at it again. The erotic image showed herself, topless, with her eyes closed and her wet tongue extended out the side of her mouth. The tip pressed hungrily against the fleshy skin of Nick Thomas' dark chocolate cock, just below the swollen black licorice band that defined its oversized head. Both of her hands gripped the glistening shaft, one atop the other, inches above his massive balls. Her saliva combined with his lubrication fluid, seeped between her small fingers as she held it. His ebony scrotum hung down obscenely far and was framed flawlessly in the photo by her contrasting beautiful white tits. She held the powerful cock, pressed against her cheekbone dreamily as if she never wanted to let go.\n\nThe picture was perfect.\n\nIt was also very wrong...wrong that Nick had taken it in the first place...wrong that her wedding band sparkled brightly in the foreground against the dark backdrop of his obsidian dick...and more wrong that he'd just sent it to her at this moment...at this work function of all places. \"Jesus...my boss is sitting only one table away. What the fuck is he thinking?\" She looked across the room at him with the dirtiest of looks. He peered back with a cocky smirk on his.\n\n*****\n\nJustin sat in a lounge chair partially covered by a poolside umbrella. As usual, the summertime weather in Lake Tahoe was spectacular, the pool relatively crowded for an early Friday afternoon. He watched as a group of college-aged kids snuck bottles of vodka from their backpacks and stealthily mixed it with their juice drinks. There was a group of eight of them, four girls and four guys, all about the same age. \"Oh, to be their age again...\" Justin thought to himself. The curious coach tried to imagine who was fucking who in the group.\n\nAnd while he was only twenty-nine himself, it seemed like a long time ago that he and his friends had enjoyed those carefree, joyful times. Justin thought back to some of the fun road trips he made with his college buddies and then to some of the weekend getaways he had taken with Abbie their senior year. He remembered a few weekend camping trips to the Sierras, where just the two of them had popped a tent and fucked like rabbits all weekend long. Those were some great times...\n\n...and now she was addicted to big black cock.\n\nAddicted might be a strong word, but based on her description of their first encounter and knowing that she and Nick had now fucked for at least a second time, Justin was certain in assuming his wife wanted more. But he knew in his heart of hearts, despite whatever hidden desires she might have had previously for sex with a truly hung man, Abbie would never have acted on those impulses without his encouragement.\n\n\"Fuck, this is all my fault...\" He realized that he and Abbie were now involved in a dangerous love triangle with a black bull who had a lot less to lose than the two of them.\n\nStill, Justin couldn't help his desire to see where this would lead. Again he imagined the scene in Nick's room from the previous night: the large black man lying on his back on the huge bed with Abbie's flawless naked body writhing on top of him, also gazing up at the mirrored ceiling. A look of pure ecstasy on her face with her legs spread wide, bent at the knees, feet on the sheets while Nick's impossibly big, rippled cock plunged quickly in and out of her as his huge balls bounced against the mattress. Abbie's own small hands gripping her full round tits erotically while his thumb frigged her horny clit...",
        "*****\n\nJustin's power of imagination must have been on psychic mode as at that same moment another image flashed on his wife's phone. Again the photo was imbedded in a text message from Nick. The image portrayed basically the exact scene that Justin had just imagined except for Nick's free hand lying out to the side with his cell phone camera photographing them. The caption in the text message read...\"Thinking about doing this again when we get back to the room!\"\n\nAbbie practically feinted when she opened the newest image. She glanced nervously at the picture, pissed again that Nick had sent it to her now...but she also felt a gush of wetness in her panties. As she stared at the photo, the thing that jumped out at her immediately, aside from how much her pussy was stretched around Nick's obscenely huge cock, was the contrast in skin color between their tangled bodies against the reflection of the white-sheeted background from the mirrors above. Abbie remembered the same feeling of eroticism that image had elicited in her the previous night when she'd looked up at their reflection above the bed.\n\nNonetheless, she typed back to him, \"Are you crazy, stop sending me these pictures!\"\n\n \n\nHis reply, \"Don't tell me you aren't thinking about it...I bet your little pussy is drenched just imagining it!\"\n\n \n\nShe looked over angrily at him again, but this time, in addition to the sly smile on his face, he reached down and patted the inside of his thigh about halfway down to his knee. Abbie immediately understood his casual gesture...he wasn't patting his leg.\n\nShe typed, \"Stop this Nick, you know Justin is arriving this afternoon, I told you this morning, no more fooling around...\"\n\n \n\nHis response came quickly, \"You said he wasn't going to get here until around 5:30 p.m., the agenda says we are done at 3:30 p.m. Besides I wasn't thinking about 'fooling around', I was thinking about FUCKING YOUR BRAINS OUT AGAIN!\"\n\n \n\nShe typed back, \"Nick, stop it! It isn't going to happen...besides it's his goddamn birthday!\"\n\n \n\n\"I thought you said he got off when we fucked. Why don't we put on a show for him...for his birthday!\" \n\n\"No more messages Nick!!! Drop it! Besides you need to pay attention to this next speaker...Curt Michelson is the dean of the Exercise Sciences school, in case you forgot. We both need to put our phones away, this is important!\" \n\n \n\nThe moderator approached the podium and introduced Curt Michelson. After accepting applause, the dean began his presentation about the direction of the program for the upcoming school year. Abbie didn't like the man very much. The 41-year-old married, father of three had hit on her on more than one occasion and as he now began his speech, she couldn't help but notice him looking in her direction more than necessary. Abbie did her best to subtly lower her eyes each time he looked towards her.\n\nBut despite the importance of his topic, before long, his words faded into oblivion as had those from all the previous speakers. Abbie's thoughts turned to the same thing that had occupied her mind throughout most of the morning...\n\n*****\n\nJustin finished his second Pliny IPA as he watched the four college guys packing up their stuff. Moments later they said their goodbye's and departed the pool area. Justin now saw this as his best opportunity. He approached the girls with the folio envelope and stationary in hand. As he walked up, he heard one of the girls say to her friends, \"What time are we meeting them at the beach?\"\n\nHer friend responded, \"1:45 p.m., so we have another hour to get drunk before we go.\" They all laughed.\n\n\"Hey pardon me, I hate to interrupt, but I was wondering if I could ask a favor of you ladies,\" Justin asked with the sincerest smile he could.\n\nThe girls looked up at him with friendly gazes. The cutest of the group, a short haired brunette with great dick-sucking lips said, \"What's in it for us Mr...uh...butt-in?\" The others all giggled.\n\n\"I'd be happy to buy the next round,\" Justin volunteered with a grin.\n\n\"Okay, now you're talking our language...\" the pretty brunette replied. All of them now flashed friendly smiles at the cute dive coach.\n\n\"I hope this doesn't sound too weird, but I need one of you to write a couple of notes for me...and by the way, my name is Justin.\"\n\n\"That does sound kind of weird, but we're on a mission to get drunk this afternoon, so what do you have in mind Justin?\"\n\nHe reached into the envelope and pulled out the folio paper. He handed it to the brunette and said, \"I need a woman's handwriting to match the signature at the top.\"\n\n\"Who is Kristi? She gave you her phone number? Aren't you married...Mister...uh...Justin?\" the girl asked flirtatiously as she looked at his left hand.\n\n\"Oh, no it's not for me...\" He responded embarrassingly, \"It's kind of hard to explain, but I just need a one-line sentence written beneath it in the most similar handwriting I can find.\"\n\n\"Well you came to the right place Justin. We are very thirsty and that writing looks just like Bella's.\" She handed the page to her petite perky-titted Asian friend.\n\nBella looked at Kristi's signature and said, \"Wow, that does look like my writing, what do you need me to write?\"\n\nAgain he looked at the group sheepishly, \"I need it to say, \"I'll be up at 6:30 p.m. I hope you aren't too tired from last night...\"\n\nThe girls all laughed. \"This sounds kind of naughty Justin, but I'm happy to do it for a round of cocktails,\" Bella answered cheerily.\n\n\"Done, and I also need you to write something on a couple of stationary notes...the first one needs to say, 'Looking forward to tonight!' The second should read, 'We apologize for the security issue, please accept our sincerest apologies! Best Regards, Harvey's.\"\n\n\"Wow, now you're asking a lot mister, how about if you make that a round of doubles?\" Bella demanded with a cute smile.\n\n\"You ladies drive a hard bargain, but you got me over a barrel here,\" Justin joked. \"I guess I could pony up for extra shots...\" he replied with a big smile of his own.\n\n\"How about a round of Sex on the Beaches,\" the brunette chimed back as Bella jotted the line on the first piece of paper. The pretty Asian girl even dotted the two lower-case 'i's' in the sentence with little hearts.\n\n\"A round of double Sex on the Beaches coming up,\" Justin confirmed as he turned and started towards the bar. He thought to himself, \"That's an appropriate choice for this group...\"\n\nWhen he got back, he handed out the cocktails and thanked them all for helping him out and after seeing Bella's work, he thanked her individually. Justin toasted them with his beer and walked over to his lounge chair, sat back down and looked at the folio page and stationary notes again. Bella's handwriting looked nearly identical to Kristi's. \"Perfect! Now all I have to do is wait!\"\n\n \n\nAfter finishing his last IPA, Justin said goodbye to the coeds and headed to the concierge desk. He retrieved his bag and went back upstairs. As he hoped, the room had already been made up\u2014there was no longer any evidence of the previous night's activities...except that the adjoining door was still open. He set his backpack down and removed the folio envelope. He moved to the adjoining door and peaked inside. The suite had been made up as well. Again Justin called out to make sure the room was empty before he moved through the doorway.\n\nHe glanced around and immediately noticed Abbie's red dress, bra, and tattered g-string sitting in a folded pile on the couch. Her high heels rested on the floor beneath them. Something seemed acutely wrong about leaving them in her black lover's bedroom, but nonetheless, he walked over and dropped the folio envelope next to the entry door before returning to his room. Justin looked at the nightstand clock and realized he still had time to make it to the liquor store before Abbie's meeting was due to adjourn at 3:30 p.m.\n\nAt BevMo, Justin bought a bottle of champagne, two bottles of Tito's vodka, several mixers, various chocolates and two wicker gift baskets. After returning to the hotel he glanced at his watch as he rose on the elevator back up to the 18<sup>th</sup> floor, it read 3:00 p.m. His plan was right on schedule.\n\nHe hurried down the hall to his room and placed one of the bottles of Tito's in the gift basket and surrounded it with the mixers and some of the chocolates. He took it into Nick's suite and placed it on the bar before slipping the stationary note that read, \"Looking forward to tonight!\" in the front. He smiled as he noticed again that Bella had dotted the \"i's\" with little hearts. \"Perfect...\"\n\nJustin went back to his room, closed and locked the adjoining door, and mixed himself a cocktail. He packaged up the other basket with the champagne and the remaining chocolates. He slipped the stationary note that read, \"We apologize for the security issue, please accept our sincerest apologies! Best Regards, Harvey's\" into the basket and placed it on the coffee table. Justin waited until 3:30 p.m. before heading down the hall to the bank of elevators. Luckily there were a couple of lazy boy chairs sitting in the elevator landing. He sat down and thumbed through his phone, sipping his drink.\n\nThe elevator door opened several times without Abbie on board. Finally at 3:45 p.m. the door opened and Justin heard Nick's unmistakable voice, \"C'mon I was just having some fun...\"\n\nHe then heard his wife reply, \"Well you shouldn't have done it, those pictures were not...\" Abbie's voice cut off mid-sentence as she exited the elevator and saw Justin sitting there.\n\nHer husband observed a large black hand moving away from his wife's ass as she came around the corner.\n\n\"Jus...Justin, what are you doing here? I thought you weren't supposed to be here till 5:30 or 6.\" She spoke nervously with a deer-in-headlights look on her face.\n\nJust then Nick emerged from the elevator with a Cheshire cat grin. \"Hey coach, you made it! Happy Birthday!\"\n\n\"Hey thanks Nick...yeah honey my meeting got shortened so I came up early!\"\n\n\"Yes, Happy Birthday honey, what time did you...uh...get here?\" Abbie asked uneasily again.\n\n\"Oh, just a little while ago. I stopped at BevMo when I got into town and bought some stuff for tonight.\" He toasted his cocktail in their direction.\n\n\"Great...well I'm so glad you're here! Welcome to Tahoe,\" Abbie offered with a grin as she moved closer and kissed him on the lips.\n\nJustin then reached out and shook the hand that had been on his wife's ass moments before. \"How's your first couple of days in the new role treating you Nick? You getting a good lay of the land?\" he asked with a big smile as he glanced towards his wife.\n\nShe diverted her eyes.\n\n\"It's going great coach, lots to learn, I'm like a sponge...\" Nick responded as he unconsciously looked in Abbie's direction also.\n\n\"Well, if you're smart, you'll soak up everything my wife can offer, she's very familiar with the ins and outs of everything around here!\"\n\n\"Good advice coach, I'll do that,\" Nick smiled broadly as his mesmerizing eyes toggled back and forth between the two of them. Justin noticed again as Abbie looked away hastily.\n\nAs the three of them approached the \"T\" in the hallway, Abbie looked at Nick and said suggestively, \"Well don't forget Nick, we have just the breakfast closing meeting in the morning, we'll see you then. Your room is down that way, isn't it?\"\n\nJustin noticed her making a subtle gesture with her eyes at Nick as if to say, \"Play along...act like your room is the other way.\"\n\n\"Oh yeah...yeah, I've gone the wrong way a couple of times already on this trip. It seems like whenever I do, I get into a slippery slope that I seem to struggle to get myself out of,\" Nick replied with a shit-eating smirk on his face, knowing only Abbie would get the insinuation.\n\nAgain Justin noticed as Abbie's eyes got really large. He could tell she was pissed at Nick for making the suggestive comment.\n\n\"Well Coach Justin enjoy the rest of your birthday, you two behave yourselves now! That was some reception last night Abbie, you gonna get a chance to get some rest before you guys head out?\" Nick asked. Justin could tell he was clearly trying to mess with her.\n\n\"No, I felt great today,\" she replied in a back-pedaling response.\n\n\"Oh, you must not have stayed up as late as I did. Well, you two enjoy yourselves,\" he encouraged as he started down the hallway in the other direction.\n\n\"How'd he do?\" Justin whispered in Abbie's ear as they walked towards their room.\n\n\"Wha...what do you mean?\" Abbie responded, alarmed at his question.\n\n\"At the meeting? Clearly he went out partying last night, did he carry himself okay today?\"\n\nJustin observed a relieved expression form on her face. \"Yes, I think so, I was sitting across the room from him...\" His wife then asked nervously as they approached their door, \"Say, did the maids come before you got here?\"\n\n\"Yeah, I assume so, the room was clean...\" Justin noticed as another relieved look flushed across Abbie's pretty face. \"...except there was one very weird thing,\" he continued as he slipped his key into the lock and opened the door.\n\n\"Oh yeah, what was that?\" Abbie asked apprehensively as he held it open for her.\n\n\"The door to the adjoining room was open on both sides. I thought that was very weird for the cleaning people to leave it like that...\"\n\nHe turned to see Abbie looking over in the direction of the adjoining door, her face pale. \"Did you...uh...close it?\" She asked.\n\n\"Yes, of course. All of your stuff was in here, I didn't want someone wandering in and stealing anything. Anyway, I called the front desk and gave them a piece of my mind. That gift basket on the table is their attempt at smoothing things over!\"\n\nAbbie walked over and checked out the basket's contents, she read the note and responded absently, \"Yeah, that is kind of weird the cleaning people would leave it open like that...did you happen to look into the other room?\"\n\n\"No, of course not! I closed it immediately when I came in. Who knows what kind of creepy people might be in there.\"\n\nJust then, they both heard the door open and close next door. \"See they're in there right now.\" They both laughed quietly.\n\nAbbie approached and wrapped her arms around him. \"Well at least we got a free bottle of champagne to celebrate your birthday tonight,\" she purred sexily as she pushed her tits into his chest.\n\n\"Yes we did, what do you have planned?\"\n\n\"It's a secret, but I see you already started celebrating. Thanks for grabbing the booze, I was going to head down and get some before you got here, but you kind of messed up my plans,\" she complained playfully.\n\nAbbie looked really good in her blouse and skirt. Her hair was up and her gorgeous lips beckoned him. He leaned down and kissed her wetly on the mouth. \"What'd ya say, we start my party early?\" he asked as he lowered his hands and squeezed her tight ass cheeks.\n\n\"Honey, you know I'll do whatever you want, but I had planned on us being up late tonight and in spite of what I told Nick in the hallway, I am exhausted from last night, the reception went later than usual. Do you mind if I take a little nap so I can give you all of me tonight?\"\n\nJustin could see subtle bags under his wife's blue eyes. \"Okay honey, but I'm going to hold you to that promise! I'll mix another cocktail and head downstairs for a while, the Red Sox and A's are on. What time are we going to head out tonight?\"\n\n\"Around 6:30.\"\n\n\"Okay, just know I might be pretty drunk by then.\"\n\nAbbie laughed. \"It's your birthday, you can do whatever you want!\"\n\n*****\n\nThirty minutes later Justin quietly approached the door to his hotel room. He put his ear to the door, but couldn't make out any sounds, so he went over and did the same at Nick's door, it was quiet too. \"She must really be taking a nap.\"\n\n \n\nHe went back to his door and slipped the key-card in the lock and pushed on the handle. The door cracked open before it clanged loudly against the secondary lock. He held it cracked as he listened for sounds from within. Sure enough, there was a quick patter of footsteps and hushed voices. He then heard the unmistakable sound of a door closing quietly.\n\n\"Abbie, shit I'm sorry, I didn't mean to wake you. Are you in there?\" he called out.\n\n\"Oh honey, hang on, I just woke up,\" his wife replied in what sounded like a semi-panicked voice.\n\nJustin held the door cracked as far as the lock would allow as he listened to her move hurriedly around the room.\n\n\"Hang-on, I'll be right there baby!\"\n\nFinally after nearly a minute, the door closed shut, the secondary lock disengaged and the door re-opened. Abbie stood before him, still in her blouse and skirt. Her hair was a mess. But unlike when he'd left her previously, her big tits bounded freely under her shirt and her hard nipples were stabbing through the fabric. As Justin entered the room, he got confirmation of what he suspected: in addition to not wearing a bra, his wife had no panties on under her skirt, both garments were lying on the floor next to the bed. At that point he also noticed her shirt buttons were not aligned, she had obviously thrown it back on haphazardly when he arrived.\n\n\"Wha...what are you doing back here so soon, is the game already over?\"\n\n\"Shit honey, I'm sorry, I hoped to sneak in here quietly and grab my charger, I didn't think you would lock the door.\"\n\nAbbie stuttered somewhat breathlessly, \"Yeah, I was so tired I wasn't thinking straight. I don't even remember doing it!\"\n\n\"Yeah you must have been really out of it. What the hell were you dreaming about, the bed spread looks like a wrestling match took place on it.\" He forced a laugh.\n\n\"...Uhhh yeah...I don't really remember, but I think I was pretty out of it before I finally heard you!\"\n\n\"You must've hit the bed pretty fast after I left, you didn't even take the time to take off your clothes.\"\n\n\"Yeah...I...uh...started looking at my Facebook and the next thing I remember you were yelling out to me. I must have really passed out.\"\n\nJustin decided not to press her any further about her shirt, bra, or panties. He knew why she looked the way she did, but still thoughts of her infidelity hit him hard...\"Fuck, it's my birthday...and she makes up that lie about wanting to take a nap...is this really my wife? Does she love that black cock so much she is willing to risk getting caught, even when I'm only downstairs? She clearly has no plans to come clean, I'm going to progress with my plan...\" \n\nBefore he could process that thought any further, Abbie moved in close and reached for his cock through his shorts. \"Remember what I told you before I left yesterday?\" she purred. \"How about if I start making up for the fact I wasn't there when you woke up this morning?\"\n\nJustin already being half hard from discovering Abbie and Nick latest tryst, sprang like a jack-in-the-box as his gorgeous wife groped his cock. She pushed him back onto the bed and straddled his chest once his head found its way up on the pillows. She very sexily began unbuttoning her shirt, apparently not realizing the little white buttons weren't aligned. Once undone, she teasingly spread the silky fabric to expose her flawless d-cups. She brought them to his smiling face.",
        "Justin kissed and sucked her hard nipples like it was the first time he had ever been exposed to them. Strangely, they had a slightly different flavor than he was used to, the same taste then washed through his mouth as Abbie lowered her head and stuck her tongue inside. Justin immediately realized he tasted his wife's black lover.\n\nMoments later another startling revelation occurred to him: he could feel wetness on his chest beneath Abbie's hiked up skirt...her pussy was actually dripping. Never one to struggle with vaginal lubrication, Abbie's slick contribution could always be counted on to enhance their love-making, but the momentous flow oozing at the moment was not usual, even for her.\n\nDue to her positioning, Justin awkwardly maneuvered his hand between her legs, needing to feel her slit. As his fingers brushed across her lower lips, they were immediately soaked in wetness. He playfully toggled her pussy, not ever having felt it so wet. \"Damn is this what he does to her? Could his big cock have actually been inside her when I unlocked the door?\"\n\n \n\nJustin knew he should feel overwhelming betrayal towards her. After all, his formerly faithful wife had fucked her lover the night before and then went traitorously back for more big black cock while he was only downstairs...and it was his fucking birthday no less!\n\nBut instead of loathing her, his arousal moved to a precipice he couldn't recall.\n\nThe past few months had been some of the most tumultuous of Justin's life. Following the party and Abbie's admission about what took place, he had wrestled with feelings and emotions on a level he never imagined. On one hand, the thought that she actually did it without so much as a warning made him wonder how long she had harbored those desires. Or had it simply been a one-time, booze-fueled indulgence as she later intimated?\n\nOn the other, he questioned how he actually would have reacted if she had admitted her black cock desires and sought his approval. He knew his encouragements over the past several years played a major role in her infidelity, but nonetheless, he still wasn't sure if he actually could have pushed her into Nick's arms (and onto his cock) when faced with the ultimate decision. Now it didn't matter, she had made that choice on her own and putting that genie back in the bottle was no longer a possibility.\n\nInstead, they had taken the safe approach and agreed to break things off with Nick.\n\nPerhaps if they'd leaned on their decision method that had proven successful in the past, each putting two pieces of paper in their hands and opening simultaneously with only one remaining, they may have chosen differently. But once Abbie listed all the reasons why further sexual relations with Nick were potentially dangerous to her job and their standing at the university, they agreed it was the proper decision.\n\nUnfortunately, both painstakingly questioned that decision countless times over the past few months.\n\nAs Justin pondered that thought yet again, he suddenly snapped out of his trance as Abbie's lips circled his cock and immediately took him to the back of her throat. Never in nearly six years of marriage had he ever felt her deep throat him. \"Oh shit Ab, that feels incredible!\"\n\nJustin peered down to see Abbie's flushed cheeks hollowed in a newly-trained fashion while her nimble tongue danced along the fleshy underside of his rock hard dick. His beautiful wife had never given him a blow job anywhere near this good. His first thought was to ask her where and when she learned the technique, but he already knew the answer...Nick Thomas was training her.\n\nBefore he could process that unimaginable thought, he felt his balls slipping between Abbie's wet lips. His formerly oral-reticent wife was now hungrily sucking on his scrotum while her small fingers hurriedly stroked his spit-covered shaft. Justin's head fell back against the pillow in pleasure.\n\n\"You like this for your birthday Justin?\" Abbie purred as his large-marble sized balls popped from her lips.\n\n\"Damn Ab, that feels so good. Uhn...you said you were going to make up for not being home this morning...this more than qualifies!\"\n\nBut again before he could fully appreciate his wife's newest ministration, he felt her tongue slip below his testicles and snake along his taint towards his...\"OH MY GOD! SHE'S LICKING MY ASSHOLE!\"\n\n \n\nJustin was suddenly out of his mind in disbelief and ecstasy, thankful he'd showered and spent nearly twenty minutes in the poolside hot tub before coming back up to the room, \"Oh god Abbie, you don't know how good that feels, this is the best birthday present ever!\"\n\nShe thought guiltily to her herself that she knew exactly how good it felt, her black lover had been doing the exact same thing to her when Justin unlocked the door minutes previously. She smiled at him mischievously from between his legs before sinking her lips back over his cock and taking him deeply\u2014her fingers still working on his slippery sphincter.\n\nJustin didn't last long. Abbie's head bobbed steadily as her fingers now massaged his sensitive balls. He put a hand on her shoulder as he felt his nuts tighten in her grip. Abbie's smiling eyes met his as his hips bucked. Justin's head fell back in pleasure as his wife's wonderful mouth milked the largest load he had ever produced. She swallowed it easily.\n\nOnce Justin's breathing stabilized he watched as Abbie playfully teased around his genitals before kissing her way back up to his smiling face. \"Did you like that honey?\" she questioned, eyes flashing.\n\n\"Jesus Ab, did I like it? That's a crazy question babe...I FUCKING LOVED IT!\"\n\nShe giggled. \"Happy Birthday babe. I love you!\"\n\nAbbie snuggled her way against him and was asleep within a minute. Justin lay on top of the comfortable sheets admiring his wife's naked body as he tried to grasp what had just happened. Never in all their years together had Abbie ever sucked his cock and swallowed. And never in his wildest fantasies had he ever dreamed of her licking his asshole. Now as she lay nakedly in his arms, he couldn't help but think that her experienced 22-year-old black lover was teaching her things...dirty sexual things she never would have learned from him.\n\nBefore dozing off, the coach thought to himself, \"I know I should put an end to this...but maybe I can let it go on just a little bit longer...\" \n\n \n\n\"...but first things first, in spite of that awesome present, tonight she needs to learn a lesson for fucking him behind my back...even if I would have said 'yes' if she asked!\"\n\n*****\n\nThey slept for little over an hour before showering together and getting ready to go. Abbie slipped a short black spaghetti-strapped dress over her tanned body to Justin's delight. He hadn't been in the bathroom when Abbie donned her conservative bra and panty set disappointedly -- the sexy stuff hadn't made it out of Nick's room this afternoon...the tattered panties would never be worn again.\n\nJustin thought she looked hot as hell as the silky dress accentuated her long neck, slender shoulders and endless legs...and of course her perfect tits. At his request, she wore her hair up and slipped on her sexy librarian glasses.\n\nJustin couldn't keep his semi-drunken hands off her as they waited at the elevator landing. When the doors finally opened, they were met with a surprise: Kristi, the gorgeous front desk blonde disembarked, dressed scantily in a short red cocktail dress and high heels. Justin's eyes nearly bugged out of his head. He could tell earlier she sported quite the body under her work clothes, but he had no idea it obscured a package like this.\n\n\"Oh hi you guys...Abbie and Justin, right? I'm finally seeing you guys together.\" She smiled ear to ear.\n\n\"...Uh yeah, you're the girl from the front desk, Kristi is it?\" Abbie asked, shocked that the pretty girl remembered both of their names and was no longer dressed in work attire. She looked really good in the red dress.\n\n\"Well I was...today was my last day.\" She smiled excitedly as she made subtle eye contact with Justin, stealthily confirming their earlier conversation. Justin smiled and nodded as he checked out the gorgeous 24-year-old. Suddenly the vision he'd imagined earlier of Kristi down on her elbows and knees eating Abbie's pussy while Nick fucked her hard from behind reentered his mind. The mental picture took on an enhanced appeal as he now viewed Kristi's rockin' body in the revealing dress.\n\n\"I hope you don't mind me saying this Abbie, but you wear some of the prettiest dresses I've seen on anyone around here...\" Kristi opined as she admired what Abbie had on.\n\n\"Oh...uh...that's very nice of you to say,\" Abbie responded, somewhat surprised by the complement. \"Yours is very beautiful also.\"\n\n\"Oh thanks, I have to admit, I was inspired to wear red tonight by that one you wore last night!\"\n\n\"Aw, that's really sweet. Thanks.\"\n\nA mental picture of Abbie's long dress bunched in a haphazard pile on the floor in Nick's room entered Justin's mind. \"...This red one is sure to take its place tonight!\"\n\n \n\n\"Well, we should be going Justin, our dinner reservation is at 6:45 p.m,\" Abbie reminded.\n\n\"I won't keep you guys...and...uh Happy Birthday Justin,\" Kristi gushed.\n\n\"Oh thanks, and best of luck in your new job Kristi...have fun tonight,\" Justin wished as they passed.\n\nOnce the elevator door closed, Abbie chimed, \"That was kind of interesting, she seemed very comfortable and flirty only being off the job for an hour or so. The two of you must have had quite the conversation, you know all about her new job?\" Abbie asked, playfully accusatory.\n\nJustin bit his tongue. His wife had the nerve to jealously question an innocent conversation he'd had with the pretty hotel associate after she had fucked her black bull all night long. \"Yeah, and if you must know, our conversation only started after she realized I was your wife. She was quite impressed with you and said you looked like a model in your red dress last night!\"\n\nAbbie backpedaled, now feeling guilty about having questioned him. \"Oh, well that was nice of her to say...\"\n\nJustin let the subject drop, his thoughts turned to his devilish plan. So far, everything was working...after seeing Kristi again, he suddenly wished he could be a fly on the wall in Nick's room.\n\n*****\n\nAfter a wonderful dinner on the lake, some profitable gambling, and a little dancing, Justin and Abbie headed back to their room and made blissful love. Justin was impressed that his wife was energetic, albeit not as naughty as earlier, in spite of what had to be near exhaustion. He did notice however, that her typical love making sounds were different. They sounded more forced and he sensed there was tenderness in her stretched pussy that must have been a result of getting reamed thoroughly by Nick's huge cock.\n\nAbbie welcomed the intimate love making. Her fatigued body appreciated Justin's patient gentle kissing, massaging, and fondling after the previous night's wild, animal-like fucking on Nick's big black dick. She thought she'd done a convincing job of faking her two orgasms with Justin after her pussy had cum so many times the previous night. She wasn't even sure she was actually capable of climax again so soon.\n\n\"Happy birthday honey, I love you!\" Abbie whispered as she snuggled in his arms. Within minutes, they dozed off to what should have been a peaceful sleep.\n\n*****\n\nAn hour later slamming doors, loud drunken voices, and hip-hop music blaring through the thin walls of the room next door woke them with a start. In spite of his tiredness, Justin's eyes popped open eagerly, confident Nick Thomas would uphold his end of the implied set-up. Abbie groaned and pulled the pillow back over her head.\n\nOver the next ten minutes Justin listened for sex cues from the room next door, but the music was too loud to make out anymore than a few high-pitched laughs. Finally after one particularly loud fit, Abbie raised her head from under the pillow angrily. \"Justin, can you call the front desk and have them turn that music down?\"\n\nHis wife's plea sounded more livid than frustrated. If she was indeed awake under the pillow as he suspected, Abbie would now know there was a woman in the room next door.\n\nHe made the call and not long after, the music quieted significantly. He figured Kristi didn't want to risk a visit from the manager. With the music down, Justin could hear more muted conversation. Nick's deep voice and the higher pitched squeak of Kristi's were easy to discern, even if he couldn't make out exactly what was being said.\n\nHowever, as the minutes passed, the voices and laughter grew significantly louder. Justin watched as Abbie's eyes remained closed, but he doubted she was actually sleeping. Suddenly Nick's booming voice shouted out, \"Finish that bitch, you need to keep up!\" That was followed by hysterical laughter by both of them.\n\nThis was heading directly down the path Justin had hoped.\n\nOver the next fifteen minutes, more drunken frivolity ensued next door. At some point, Abbie lifted her head again and complained, \"You'd think they would have the decency to keep it down at this hour!\"\n\n\"Shit honey, they're just having fun, we've done the same ourselves. Besides, they'll probably move to sex before long and the partying will stop...\"\n\nJustin felt Abbie's body stiffen at his comment.\n\nNot long after, the sounds from next door did recede. It would have been difficult for the blonde front desk associate to make much noise at that moment. A thick black piece of meat was pressed against her vocal cords. Nick Thomas was sitting on his couch with his pants around his ankles while Kristi was down on her hands and knees between his legs. She was naked except for her sexy g-string panties and high heels.\n\nNick had her hair pulled aside so he could watch the gorgeous blonde suck his cock. \"Yeah baby, that's real nice...uh huh...now you're gettin' the hang of it...\"\n\nShe pulled it from her mouth, breathing heavily, desperately trying to replace the oxygen being deprived from her lungs. A long strand of her saliva stretched from the head to her lips. As she spoke, it separated from his dick and splattered against her heaving tits, \"Jesus Nick, you're so fucking big...I can't even breathe when I suck it!\"\n\n\"Take a break for a minute and catch your breath, bring those nice titties up where I can see em.\"\n\nKristi moved forward and knelt in front of him. Nick ogled her spit covered c-cups before grabbing his cock and pressing the fat head against one of her swollen nipples. Kristi's hands cupped her heavy tits and held them together for him as he rubbed his cock from one nipple to the other, smearing saliva and precum around her ample mounds. She watched. Finally he began slapping them playfully, amazed that on back to back nights he was immersed in some of the best tits he'd ever seen. Kristi moaned, \"Umm...that feels good Nick...\"\n\n\"Suck it some more...\" he directed as he brought it back to her lips. \"Breathe more through your nose this time...I'll teach you how to take it deeper.\"\n\n\"Nick, it's too big, I can barely get my mouth around it.\"\n\n\"Trust me, you can do it...open wide.\" Nick held the back of her head and pushed his rock hard cock against the back of her throat. \"Relax your jaw and throat, let me guide it in there.\"\n\nKristi had sucked her fair share of cock including a couple of fairly endowed boyfriends, but neither of them or anyone else was anything like this. Her eyes rolled back as Nick's immense head filled her mouth completely. She breathed rapidly through her nose as he held her head and pressed deeper. Within minutes the determined black man sunk several inches down the pretty blonde's throat. \"That a girl...relax and take that smooth snake nice and deep...fuck yeah that feels real nice!\"\n\nNick concluded this chick had more previous experience sucking cock than Abbie, but nonetheless, there was something about his ex-coach's lips and active tongue that really got him going. The young wife had learned in only two nights what he liked and took very well to his coaching...sucking and swallowing him more enthusiastically than anyone in a long time. Her deep throating technique had gotten good quickly. Abbie was already capable of taking several more inches down her throat than young Kristi.\n\nNonetheless, Nick was enjoying watching and feeling his dark phallus sink between the wet lips of the hot blonde.\n\nIn the room next door, Justin's earlier excitement began to wane. He hadn't heard much aside from muted voices for nearly twenty minutes. He actually began to question Nick's perceived prowess. \"Was he not able to close the deal? Had they fallen asleep?\" Abbie's eyes remained closed, but her breathing didn't indicate she'd dozed off. Justin suspected she was listening as intently as he was.\n\nSuddenly there was a loud grunt from next door.\n\nWith both Kristi's hands squeezing his huge balls and a couple of inches of his thick cock down her throat, Nick Thomas quickly approached his nut. He yelled out loud enough that the Dawson's could clearly hear, \"YEAH BABY, SUCK THAT BIG BLACK DICK...UH HUH...GET READY...I'M GONNA GIVE YOU SOMETHING REAL GOOD!\"\n\nAt that moment the head of his cock swelled and a thick blast of semen shot down Kristi's throat like a sled shooting down a luge. It was followed by another as she tried to pull her head away. Nick held her in place, splattering her esophagus with another cum blast, then another. \"SWALLOW MY DARK SEED BLONDIE!\" His deep voice bellowed before he finally allowed her to pull back enough that the next two blasts erupted in her mouth. Kristi instinctively gulped and got some of it down before his big cock slipped from her lips and coated the area around her mouth with yet another robust spurt. It was followed by several more diminishing releases.\n\nJustin's cock sprang to life immediately while he felt Abbie stiffen at Nick's announcement. He could only imagine how difficult this must be for her, but he didn't care, she deserved every insufferable moment for her infidelity. The black man who had fucked her so thoroughly over the past 24 hours was now having sex in the room next door and doing nothing to disguise it.\n\nJustin couldn't believe how clearly they could now hear the sounds from next door.\n\nWhat he didn't know was that Nick had sent Kristi over to open their side of the adjoining door to maximize the audio. He told her it turned him on to let other people listen to him fuck. She had originally objected but he reminded her she was no longer an employee of the hotel and it was now someone else's problem. She eventually agreed, learning quickly the voyeuristic component was actually kind of fun and erotic.\n\nAs it turned out, the arrangement was perfect. The clarity of the sex sounds were much more vivid now. Justin couldn't have felt more redemption...or arousal. He took the opportunity to goad his unfaithful wife. \"Honey, are you awake?\"\n\n\"Um hmm...\" her response sounded, unenthusiastically.\n\n\"Did you hear that couple next door? I think she was sucking him off and he blew his wad in her mouth.\" Justin slid his hands along Abbie's naked back down to her ass cheek and squeezed. Again he felt her tense up. \"Listening to them made me kinda horny babe...\" he admitted.\n\n\"Justin, I'm really tired. We already made love for a long time and I'm still not operating on enough sleep from last night...\" Abbie groaned without turning back in his direction. \"I also have that closing meeting in the morning.\"\n\nJust then they heard, \"Ohhh GAAAWWWDDD Nick, You're so BIG! Please go slow!\"",
        "Over the next ten minutes Nick worked his huge cock into Kristi's stretched pussy. Her incessant moans and cries sounded loudly through the walls and single door. \"Oh fuck Nick, your big black cock feels so good in my little pussy...You're so deep...uhn...uhn...umph!\"\n\n\"Shit bitch...that's some good white pussy...you're shit is tight...as tight as anything I've felt in a while!\"\n\nAgain Justin felt Abbie's body cringe as Nick's comment sent another jolt of anger through her. He had told her the same thing the previous night. Justin still couldn't hear every word being said, but the last exchange was easy to make out. He knew Abbie heard it.\n\nThe horny coach let his hand sink down again and rub Abbie's naked ass. \"Damn Ab, I'm getting really turned on listening. It sounds like this black dude Rick has a big dick. I think the white chick really loves it!\"\n\nAbbie's irritation at this entire situation was palpable, but knowing it was Nick not Rick as Justin suggested, fucking the squealing whore in the room next door, infuriated her even more. \"I think we should call down to the front desk again Justin, they don't need to be so loud.\"\n\n\"Oh c'mon Ab, you can't be serious, they're just having some fun sex. They were probably out doing the same stuff as us, we just got back to the room earlier...\"\n\n\"We weren't this loud,\" she complained, obviously not acknowledging that she and Nick had been every bit as vocal the previous night. Abbie remembered thinking at some point during her and Nick's wild sex that, she was glad the adjoining room was hers and not someone else's.\n\nJust then Kristi squealed, \"Oh My God Nick...you're gonna make me cum...fffffuck meeee...! I'm so lucky...no other woman in this hotel is getting fucked so good tonight!\" A chorus of moans and grunts erupted from the blonde's sexy mouth.\n\nJustin's cock stiffened like steel. He was hearing the affects of Nick's sexual prowess for the first time and it clearly lived up to his imagery. Knowing it was the hot 24-year-old blonde from the front desk he was nailing made it all that much more arousing. Imagining his beautiful wife making those sounds on Nick's big black dick was intoxicating.\n\nHe couldn't fathom Abbie's exasperation at the loud sounds, but still he piled on. \"Shit, this Rick guy is fucking the shit out of her!\" The king-sized bed from next door slammed up against the common wall over and over.\n\nJustin reached for his cock and jacked himself off. His aroused thoughts suddenly drifted to his previous vision of Abbie splayed out nude on the bed next door with Kristi's head between her legs while Nick pounded the gorgeous blonde from behind. Justin's reverie then morphed as he imagined Nick reconfiguring the girls into a sixty-nine and fucking Abbie doggy style while she hungrily ate pussy for the first time.\n\nAbbie finally turned. \"Oh my god Justin, are you masturbating?\"\n\n\"Yeah hun, you know how much I love it when hung dudes fuck hot babes in those porn flicks\u2014shit, this is even better! And since you're not in the mood, I gotta do something! This black dude Rick sounds huge and the white girl clearly loves it. You know interracial sex is one of my biggest turn-on's! And just listen, he is fucking the shit out of her!\"\n\nAbbie glared at him incredulously, she wasn't sure who she should despise more at the moment, her irritating husband or her black lover fucking the whore in the room next door.\n\nBefore either of them could say another word, Kristi screamed out she was cumming yet again. The Dawson's listened as their rutting neighbors climaxed together in one of the most scintillating orgasms either had ever heard. Abbie then gasped in shock as Justin grunted and his own load splattered onto his stomach.\n\n\"Oh jeez Justin...you didn't really just do that!\"\n\nThe birthday boy smiled proudly at his beautiful wife before rolling to his side and passing out with thoughts of retribution in his head. Abbie stared at him with unblinking eyes, not believing what she'd just witnessed.\n\nMoments later her thoughts returned to the room next door. Unbeknownst to her, the vocal climaxes she'd heard from the interracial lovers were quite divergent. Kristi's toe-curling orgasm was definitely legendary, she still lay sprawled face down shaking and gasping for air while clutching the sheets of the big bed.\n\nNick's ejaculation was hot too, but shooting his load into a stretched condom was nowhere near as good as the handful of bareback eruptions he'd dumped deep into Abbie's unprotected pussy the night before. His vocal performance minutes before contained serious embellishment for effect...her effect.\n\nAbbie lay awake trying to come to grips with what she had just experienced. She had given herself completely to Nick Thomas the night before and the bastard had the nerve to bring some slut back to his room and have sex with her when he knew she and Justin were still in the room next door.\n\nTears welled in her eyes. \"How could he? I was a slut for him...I let him fuck me all night long...I took his huge black cock down my throat and swallowed his cum...twice! Oh my god...I actually licked his butt! And Jesus, I let him cum inside me three times...\" \n\n \n\nAs Abbie lay pondering her thoughts, countless emotions wafted through her psyche...anger, frustration, guilt...yet the one she was experiencing most, was inexplicably...jealousy! \"Why does that slut get to have his amazing cock tonight? Did I not satisfy him? Who would he want to fuck more if I knocked on that door right now?\"\n\n \n\nIn spite of her emotional state, the previous night's sex marathon and her lack of sleep finally overwhelmed her. Abbie dozed, unsurely contemplating what the future would bring.\n\nUnfortunately for both she and Justin, their sleep wouldn't be peaceful, they were both awoken countless times to the sound of the bed in the room next door banging against their wall.\n\n*****\n\nJustin woke at 9:45 a.m. thankful that he hadn't had to get up when his wife did for her early morning meeting. He was so out of it, he hadn't even heard her getting ready or leaving. Justin could only imagine how weary Abbie must be. She had now gone two nights in a row without much sleep. One from fucking her black bull all night long, the other from listening to him pound the shit out of the pretty front desk blonde. A diabolical smile came to Justin's face, his plan had worked to perfection.\n\nHe got up, took a piss, and flipped on the one-cup coffee maker. He suddenly wondered if Kristi was still passed out in the room next door. He was impressed she was able to keep up with Nick Thomas all night long.\n\nAbbie's meeting was due to end at 10:00 a.m. and he figured she'd want to come back up and sleep for several hours before embarking on their day. He decided he'd head down to the pool for a couple of hours and let her get some serious rest.\n\nAs he stood sipping his mediocre hotel room coffee and thinking about all that had transpired over the past forty-eight hours, he happened to notice through the large window, two people walking through the parking lot at a brisk pace eighteen stories below. They looked an awful lot like Nick and Abbie. The black man rolled what appeared to be a suitcase and was followed close behind by a dark haired women in a business skirt-suit that Justin was sure was Abbie's navy outfit.\n\nJustin hastily located his camera bag and pulled out his digital Cannon. He attached his most powerful lens and aimed it down at the two of them. Sure enough it was his wife and her black lover, now engaged in an animated discussion just outside Nick's Ford Mustang. Justin watched as Abbie's arms flailed in what appeared to be an angry one-sided conversation. After about a minute, Justin witnessed Nick Thomas shrug his shoulders with his arms out to his sides away from his body, palms turned upward.\n\nMoments later Abbie slapped him across the face and stormed back across the parking lot towards the hotel. \"Oh shit,\" Justin blurted out loud as an incredulous smirk formed on his face. \"Damn, I got Nick laid last night, but it looks like I also just got his face slapped too!\"\n\n \n\nJustin sat down on the couch and contemplated what he'd just witnessed. He didn't know how he should feel. His wife was clearly pissed at her black lover for fucking the hot blonde after the night they'd shared together, especially having done it in the room next door where she could clearly hear it taking place. \"Is she that addicted to his big black cock that she wants it only for herself? Oh my god, this is my wife acting this way...\" But then he asked himself why she should have any right to question, or for that matter, have any substantive interest how Nick lived his life. She is a married woman after all. \"She's MY wife for fuck's sakes!\"\n\nThe coach's mind was suddenly filled with countless thoughts as he tried to come to grips with the situation. But before he could ponder them any deeper he heard a key being slipped into the lock and the door opening loudly. His beautiful wife entered the room, trying her best to not show it, but he could tell she was clearly pissed...\n\n*****\n\nSunday morning\n\nAbbie and Justin drove in separate cars on the two-hour drive back down the mountain from Tahoe to Sacramento. The long ride gave each of them time to reflect on what transpired over the past three days and to contemplate how they let it get to this point.\n\nFor Abbie, she had never considered the possibility of hooking up with Nick at the retreat. In spite of her desires, she had convinced herself their unforgettable mating the night of the party had been just a moment of weakness. Until seventy-two hours ago, she believed she was fully capable of moving on and maintaining a strictly professional relationship with him moving forward.\n\nUnfortunately for her well-intentioned plan, once she got around him again and with her inhibitions diminished by alcohol, the sensual feelings returned and she couldn't control her overwhelming desire for him...for his amazing black dick.\n\nTheir night together at the party months before had been the most memorable sexual experience of her life, but even that wild night did not measure up to what she experienced with him this past weekend. The initial tentativeness and discomfort she felt when impaled on Nick's huge cock the first time was a non-issue this go around as their animalistic mating in the Harvey's suite exceeded every erotic fantasy she'd ever imagined.\n\nBut now just over forty-eight hours removed from that carnal act, her emotions were a tangled mess of desire, guilt and deceit. She still had a very obvious attraction to Nick, but his unforgivable behavior with the little slut the night following their glorious coupling was not something she intended to forgive easily. She rationalized, \"It's obvious he is incapable of keeping his amazing...I mean arrogant...penis in his pants and if he chooses to be so callous about it, that asshole is never going to get the pleasure of having sex with me again!\"\n\n \n\nAlso weighing on her heavily was the regret she felt for her lecherous conduct behind Justin's back. Her husband had accepted some of the responsibility from her first bout of infidelity, having all but pushed her into Nick's arms, but he had no culpability this time around. Abbie had walked this plank completely on her own and now her feelings of guilt and remorse for having fucked Nick again were eating at her. Worse still, the fact she had done it completely behind his back and then hid it from him was tearing her apart.\n\nThe remorse from the first night when Justin was still down in Sacramento was difficult enough to bare, but the fact that she and Nick had fucked around again after Justin arrived made her feel absolutely traitorous...it was his fucking birthday for God's sakes.\n\nShe thought back guiltily to how it transpired. That afternoon after Justin headed downstairs to watch the game, Nick knocked on the adjoining door. Abbie had told herself she wasn't going to open it as she needed sleep, but his persistence wore her down and when she finally did, Nick was standing on the other side completely naked with a raging hard on pointed directly at her chest.\n\nSeconds later she found herself off the ground with legs clinging to his rock-hard ass and arms around his muscled neck. Their tongues locked together in a passionate kiss as her pussy ground against his glorious dick. Nick threw her on the bed and with her help, soon had her blouse and bra cast aside as he peeled her soaked panties down her thighs.\n\nOnce free, he pushed her skirt up around her waist, dove between her legs and ate her pussy like a starving man. All the while Abbie grunted and watched while squeezing her big tits. Eventually Nick instructed her to remove the pillows from behind her head and lie flat on her back as he rolled her hips backwards.\n\nAbbie felt his long tongue slither along her dripping lips downward across her taint. She gasped in pleasure at the unfamiliar feeling, but was soon completely breathless when she felt his talented tongue come in contact with her puckered hole. Abbie's hips recoiled initially at the taboo connection, but within a minute she was moaning and begging him not to stop. \"Jeez Nick...I didn't know...god...so good...mmm...yeah right there...oh god yeah...please keep doing that! I FUCKING LOVE IT!\"\n\nNick swirled his long tongue around her asshole, periodically penetrating as deeply as capable to Abbie's unimaginable delight. He watched as her wedding banded hand descended and found its way to her sopping clit. She played with her pussy while he ate her ass until she whimpered and begged him to make her cum...\n\nAt just that moment Justin's key slipped into the lock and the door hardware banged loudly. Abbie and Nick practically flew from the bed and covered their tracks as her husband waited unaware outside the door. They gave each other one final passionate gaze before Nick slipped next door. The last thing Abbie remembered seeing was her slick sex juices coated all around Nick's smiling mouth.\n\nFor the rest of the weekend, Abbie thanked the lord she set the secondary lock...\n\nNow two days later, her guilt for not coming clean still haunted her. For the life of her, she couldn't understand why she found it so difficult to tell him...her husband had admitted it was okay if she wanted to experience Nick again as long as he got to be a part of it this time. But the circumstances of how it played out still made her infidelity feel like cheating and while she didn't want to admit it, perhaps there was a small sliver of fear Justin would put an end to it forever. She wasn't sure that was something she could live with. The truth was the genie was out of the bottle and she loved what she had found inside...\n\nAs Justin trailed Abbie's SUV along the beautiful stretch of highway 50, many of the same thoughts coursed through his mind. He wondered why Abbie found it so difficult to tell him of her disloyalty, knowing that he had been the one to start this ball rolling several years previously. As had been the case following the party, he felt like he was being pulled in opposite directions, both potential outcomes fraught with more questions than answers.\n\nThe easiest thing to do would be to confront Abbie about her transgressions and put an end to this thing before it got further out of hand. But then he considered, \"What if she doesn't want to stop? Is stopping a scenario EITHER of us wants?\"\n\nJustin himself, had finally achieved his erotic fantasy of having his gorgeous wife experience the kind of immeasurable pleasure he dreamed she would find when bred by a true alpha male. What he hadn't expected back when this all started, was that man would be someone so closely immersed in their lives. He also hadn't expected he would be black...\n\nJustin rubbed his hard cock as he nervously glanced at his phone over and over. Finally he picked it up and dialed, it rang several times before he heard the unmistakably deep voice of Nick Thomas. \"Hey coach, what's goin' on?\"\n\n\"Nick, we need to talk, are you available Wednesday night for a beer?\"\n\nTo be continued...\n\n*****\n\nAuthor's Note:\n\nI hope you enjoyed it.\n\nPlease take the time to comment and vote, both are greatly appreciated. I am very motivated by your responses. I also read and respond to nearly every email I get, but remember you must include your e-address if you want me to reply. If you just send me a comment without populating the email box, it will come to me as anonymous and I won't be able to respond.\n\n \n\nCheers,\n\nFifthEstate\n\n \n\n \n"
    ],
    "authorname": "FifthEstate",
    "tags": [
        "bbc",
        "big black cock",
        "creampie",
        "cuck",
        "cuckold",
        "interracial",
        "ir",
        "rimming",
        "squirting",
        "white wife"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/the-speedo-doesn-t-lie-ch-07"
}