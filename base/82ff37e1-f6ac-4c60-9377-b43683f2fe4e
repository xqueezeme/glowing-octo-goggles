{
    "title": "Three Square Meals Ch. 079",
    "pages": [
        "Jade stepped out of the grav-tube then jogged down the ramp into the Combat Bridge in a smooth loping run, greeting the girls with a warm grin.\n\n\"Welcome back, stranger,\" Irillith said to her with a smile.\n\nThe Nymph trailed her green fingers down the Maliri girl's arm as she breezed past and took her place at the Pilot's Station. \n\n\"Hi!\" Faye said with a bright smile. \"Do you want to take over as Pilot?\"\n\n\"Yes, please,\" Jade replied, taking a firm grip on the Invictus' flight controls. A quick glance at the Tactical Map revealed that they were racing back into the brutal battle, now that the Raptor and the Valkyrie were safely aboard. She glanced at the brunette to her right and asked, \"What's the plan, Commander?\"\n\nCalara was staring intently at the holographic depiction of the ongoing conflict, her brow furrowed in concentration. Her brown eyes flicked over to meet Jade's emerald gaze. \"The Drakkar still have three black-armoured battleships and another eleven similarly-equipped cruisers. We'll eliminate them to take the pressure off the Ashanath.\"\n\nJade studied the Tactical Map with her sharp emerald eyes, then nodded as she decided on their flightpath. Her hand brushed over the console and their route and target were highlighted on the map. \"We'll take out that group of four cruisers first, they're on our way to the closest battleship.\"\n\n\"Excellent, thank you,\" the Latina replied, but she sounded distracted. Her focus was on the steady stream of telepathic orders she was passing to Alyssa, who was relaying them to the Ashanath fleet via the telepathic command web. Calara glanced at Faye, who was standing patiently beside her Tactical Station and continued, \"I've got my hands full coordinating the Ashanath - their forces are in complete disarray. Can you assign more avatars to the Invictus' weapons?\"\n\nFaye nodded, smiling helpfully at the brunette. \"Of course! Which batteries would you like me to take over for you?\"\n\n\"All of them,\" Calara replied, bringing up the security panel listing weapon access rights. Her fingers danced down the list, swiping over each in turn: Gauss Cannons, Heavy Cannons, Nova Lances, Singularity Drivers, all adding to the Pulse Cannons and Beam Lasers that Faye already had permission to fire. \"There, you have full access. Do you think you can handle them all?\"\n\n\"I won't be anywhere near as effective as you, but I'll do my best!\" Faye squeaked, shocked at the amount of trust the brunette was placing in her. She smiled as she added, \"I spent dozens of hours reviewing the weapon test in the Maliri asteroid belt, just in case you might need my help someday.\"\n\nCalara smiled at the purple girl, knowing how dedicated she was to improving her effectiveness. \"I thought you might've done. Please take care not to hit any Ashanath!\"\n\n\"I promise I'll be extremely careful!\" Faye said earnestly. She allocated five of her avatars to the weapon controls, then changed her mind and assigned all of them, splitting their responsibilities between port and starboard gun control where possible. Fluttering over to Jade, she added, \"Would you like me to fire the Singularity Drivers for you, too?\"\n\nJade smiled at her and replied, \"That would be great, actually. It means I can pay more attention to avoiding incoming fire.\"\n\n\"Hey everyone,\" Dana called out in a subdued greeting, as she stepped out of the emergency grav-tube's blue anti-gravity field. \n\nThe girls smiled or waved at her as she limped down the ramp into the Combat Bridge. \n\n\"Are you alright?\" Tashana asked, leaping from her chair and striding over to offer the redhead a helping hand. \"You're covered in blood!\"\n\nDana frowned and waved her away, then realised the Maliri girl was just worried about her. She gave her an apologetic smile and gratefully accepted her assistance, putting an arm around Tashana's shoulder and hobbling over to the Engineering Station, where she slumped in the chair. She laughed as she admitted, \"I might feel knackered now, but I can't wait until tomorrow morning. I'll be on top of the world!\"\n\n\"What do you mean?\" Tashana asked, before suddenly squatting down next to the redhead when she spotted the ragged gouge in her armoured thigh. She looked at Dana in alarm and gasped, \"You should be in medical!\"\n\nDana shook her head, then smiled at the Maliri girl, holding her hand as she replied, \"John already patched up my leg, I'm just feeling a bit wasted. He's healed me before but I had a full night's rest to sleep it off last time.\"\n\nTashana nodded, then gave the tired Terran girl a relieved smile before returning to her own seat.\n\n\"One minute until we're in range of those cruisers,\" Jade said to Faye, watching the Invictus' long fire arcs draw closer to the nearest Drakkar on the Tactical Map.\n\n\"Save the Nova Lances for the first battleship,\" Calara murmured, while closely watching a group of Ashanath cruisers as they executed her orders. \n\nThe four silver discs fired a salvo of red laser beams at a Drakkar battleship, then used their tractor beams to slingshot themselves behind the wrecks littering the battlefield. They neatly dodged the answering fire by using the derelicts as cover, the Drakkar's purple beams slashing harmlessly into the battered hull of a crippled black-armoured Drakkar capital ship. This particular vessel had been one of Vekrok's personal retinue, until Calara had torn it apart with Heavy Cannon barrages.\n\n\"One minute, twenty seconds until we're in range,\" Jade corrected herself, smiling at the purple sprite.\n\n***\n\nAs the inner airlock doors opened up, Sakura shouldered her rifle before drawing her twin ninjato. She smiled at the comforting weight of the grips in her hands, but her smile faded as she remembered exactly why they felt so familiar. After letting out a sad sigh, she glanced at the perfect replicas of her parents' faces that were etched on each of the pommels, reminding herself of the righteousness of her cause. Defending the weak against the abuses of the powerful had always been her primary motivation and she wasn't about to falter when the Ashanath urgently needed her protection.\n\nClosing her eyes for a second, Sakura felt a sudden rush as she enabled her psychic speed, then darted out of the airlock and sprinted into the corridor beyond. She felt sharp, focused, and alert, running lightly on her feet as she rapidly closed on the Drakkar forces. They appeared as red dots on her overlay map, spreading out like some kind of insidious virus to infect the body of their host.\n\nTravelling at such blistering speed, it didn't take her long to reach the first of the Drakkar's victims. A grey-skinned Ashanath lay sprawled on the deck, his black eyes now lifeless, his mouth open in a scream of agony that had finally been silenced with his death. His small body had been stripped to the bone, the Drakkar even devouring his silver jumpsuit in its haste to consume him.\n\nThe sounds of fighting reached Sakura's ears and she sprinted faster, knowing that every second she delayed meant more deaths she could have prevented. Running at full tilt down the corridor, she prepared her body for a quick change of direction. The map showed her that the closest predators were in the next room to her left and when she'd nearly reached the open door, she raised her right arm and activated her Paragon suit's anti-grav stabiliser. The focused gravity field helped slow her speed enough to let her safely make the sharp turn and she raced inside, blades held at the ready. \n\nUnfortunately, she was too late to save the Ashanath in there; the five Drakkar busy gorging themselves had already killed their victims. Sakura briefly considered leaving the slobbering monsters until later, focusing instead on saving more of the living. However, she concluded that these Drakkar could always move on elsewhere to attack more of the Ashanath crew, so it would be more efficient to just dispatch them now, rather than hunting them down later. \n\nThe first of the helmetless monsters seemed to be moving in slow motion as she charged, its bloody jaw opening wide to take another bite out of the Ashanath's mutilated torso. Sakura breezed past the brute, reversing the grip on her right ninjato and plunging it down through his lime-green cranium. The perfect edge of that sparkling white sword slid straight through its skull, skewering its brain, with her vicious twist afterwards severing arteries and instantly slaying the Drakkar in a gout of blue blood. \n\nSliding the blade free, she spun over to the next, neatly slicing through its sturdy neck with a backhanded swipe of her left sword. The results of the Drakkar autopsy were superimposed over each creature on her heads-up display and for the third Drakkar who was the furthest on the left, Sakura decided to test the accuracy of that data. She plunged both her swords into its back as it hunched over its victim, the three-foot blades aimed precisely at the centre of each of its two hearts. Driving the weapons through the Drakkar's torso proved surprisingly difficult, the black armour they were wearing turned out to be quite resilient. Still, it was no match for octa-shaped crystal Alyssium and she punctured both organs with perfectly placed thrusts.\n\nSakura placed her booted foot on its back and tugged at both weapons, tearing them free with the tortured squeal of metal on metal. She kicked off from the armoured alien's back, using that momentum to propel herself backwards and spin through the air towards the two remaining Drakkar. As she backflipped between them, she drove her blades through their temples, lobotomising the pair before skidding to a halt. \n\nViscous blue blood dripped from her blades, each droplet slowing as it left their razor-sharp points. \n\nShe paused to watch the first of the Drakkar topple forward in slow motion, its bulging eyes rolling upwards, just as the second Drakkar's head started to tumble from its neck. The final three all wore similar looks of stupefied disbelief as they pitched forwards, the entire group of five all slain in the space of as many seconds. Sakura smiled with satisfaction, then rushed away in pursuit of the next pack, eager to dispense justice to the rest of those malevolent beasts.\n\nHer booted feet had already left the room by the time the blue blood droplets began to hit the floor.\n\n***\n\nRachel jogged down the corridor after Alyssa, occasionally checking the overlay map for an update on the Drakkar's location. She trusted that the data the Ashanath were feeding them was accurate, otherwise they could end up blundering straight into an ambush. \n\n*We'll be fine,* Alyssa said confidently, the blonde setting a quick pace as they ran after the invading Drakkar horde. *At this pace, we should make contact in fifteen seconds.*\n\nThey reached a crossroads with silver-panelled corridors stretching away in three new directions, the feral howls of rampaging Drakkar reaching their ears. Another quick glance at the overlay map indicated that their foes had headed right before spreading out, so the girls dashed into that corridor, weapons raised and at the ready. The lights were flickering in that section, cutting out every couple of seconds and plunging them into darkness, before springing to life again. The strobing effect set Rachel's nerves on edge and she was tense as they walked briskly down the passage.\n\nThe corridor turned left and the lights flickered again, just as Rachel caught her first glimpse of the nightmarish scene beyond. Several black-armoured Drakkar were crouched on the deck, chewing on small grey bodies in pools of dark-red blood. Beyond them, the rest of the pack could be heard braying and barking with the thrill of the hunt, as they chased after their fleeing Ashanath prey.\n\nAlyssa swept into the corridor, her tone grim as she said, *Switch to thermal imaging.*\n\nRachel did so immediately, bathing the corridor in blue hues, with the Drakkar themselves highlighted in bright red. \n\n*Start stripping their shields with your Justice Laser, eleven o'clock, low,* Alyssa ordered a moment later.\n\nThe brunette slowed her pace as she aimed her laser rifle at the torso of the closest Drakkar on the left, flicking the power level on her weapon to the second setting. She squeezed the trigger, sending a long stream of laser bolts into the squatting alien, her laser fire appearing bright red in her helmet's thermal imaging view. The heat indicator on her HUD began to creep up as she blasted its energy shield, circular waves rippling outwards from the point of impact in the centre of the beast's back.\n\nIt took several seconds of sustained fire before the shield finally winked out, enough time for the Drakkar to whirl around and reach for its brutal-looking gun with two hands. It roared at her in anger as it started to raise that broad-muzzled weapon, the laser bolts bouncing off its armoured carapace ineffectually.\n\nRachel had just started to lift the long barrel of her weapon to fire at its exposed head, her gun glowing orange with the heat venting off it, when she heard a familiar-sounding gunshot beside her. \n\n\"VrmPkaow,\" Alyssa's railgun purred, the hyper-accelerated twenty-millimetre slug hitting the Drakkar dead-centre in its hammer-shaped head.\n\nThe creature's scarlet face exploded in a gratuitous shower of warm red blood, spraying the walls behind it as it crashed over on its back. The red quickly shifted to blue in Rachel's heat sensitive thermal imaging, the blood cooling as soon as it hit the walls. The rest of the feeding monsters turned to look at the headless Drakkar in shock, before spotting the Terran girls and scrambling for their shields and weapons.\n\n*Twelve o'clock. Use a higher power setting, we need to speed this up,* Alyssa said to her decisively.\n\nRachel moved her thumb to the power-selector switch, notching it up to three. She began to fire in short bursts of much brighter laser bolts as she lit up the next one on her left, flares of light arcing over its shield as the shots hit home with much greater strength. The heat levels spiked up alarmingly as she watched the Drakkar warrior frantically grab its gun. Its shield died with her final burst, the laser bolts sizzling through its ugly head and melting a big hole out the other side, leaving her safe to breathe a sigh of relief.\n\nHowever, the barrel of her laser rifle was now shimmering in a bright crimson heat haze and the thermometer in her HUD was well into the danger area. Rachel knew it would take a couple of seconds before the heatsinks could finish cooling the weapon enough for her to shoot again, leaving her and Alyssa critically exposed to the rest of the shielded aliens.\n\nShe darted a concerned look to her right at the remaining two Drakkar and gasped to her squadmate, \"Look out! My gun's overheating, I can't-\"\n\nHer words died on her lips and she blinked in surprise as the closest one on the right lifted off the ground with a startled yelp. It waved its four arms in the air as it tried to regain some sense of balance, before abruptly tipping forward as it sailed towards the second shocked alien. The Drakkar's armoured frame whistled through the air as its torso smashed into its podbrother's head, the levitating alien crying out in terror as it was used as a mallet to batter its companion. Again and again it crashed down, caving in the other alien's battlesuit with the thunderous impacts. When the second one was a bloody smear on the ground, the flying Drakkar was suddenly torn in half, spraying blood and ichor all over the corridor.\n\nRachel glanced at Alyssa in shock as the blonde cast aside her impromptu cudgel with a dismissive flick of her hand.\n\nAlyssa gave her a playful wink before setting off after the rest of the pack. *Like I said, we'll be fine.*\n\n***\n\nJohn strode purposefully down the corridor, watching the rest of the Drakkar react to the sound of heavy bodies crashing to the ground behind them. Unlike the half-dozen helmetless warriors which he'd just caught feeding and neatly decapitated, the other twenty members of the horde were still fully armoured. They turned to engage him in slow motion, having no idea what they were facing and foolishly eager to fight as he advanced towards them. Their four-armed bodies were completely covered in glossy black battlesuits, with the integrated shielding providing total protection from the Ashanath's laser pistols.\n\nThe five-foot crystal Alyssium sword that John clenched in a two-handed grip was no feeble laser pistol.\n\nHis first upswept blow caught a still-turning Drakkar below its lower right arm, and he felt the tug on the blade as it bit deep into the black carapace. The psychically forged sword acted as a fulcrum for his herculean strength, channelling that titanic force as he carved through the monstrous alien. Shearing diagonally upwards through its torso, his blade tore free through its left shoulder in a massive fountain of gore. \n\nFrom John's perspective, the thick blue blood fanned out in a languid azure arc, following the path of his gleaming blade as he rushed onwards to the next enemy. To the Drakkar, John was moving so fast that he swept through them in a blur, remorselessly striking down one warrior after another. Not knowing what had just hit it, the Drakkar stood there in dumb incomprehension as it began to slide apart along that neat line of incision, both hearts neatly cut in half.\n\nThe next Drakkar warrior was to John's left and had been grabbing at a wounded Ashanath with its lower hands, while removing its helmet with the upper set of arms in preparation for its first bite. John's sword whistled down, chopping through those clutching limbs, and drenching the terrified Grey in a deluge of blood. He drew the blade back to his left, then sliced through the dismembered warrior above the waist, neatly chopping him in half.\n\nSome kind of glowing projectile flew past his shoulder, a purple contrail tracing it back to the barrel that had fired it. The rest of the Drakkar ahead of him had levelled vicious black rifles in his direction and were trying to track him with their shots as he darted from one side of the corridor to the other, cleaving warriors as he did so. The furious hail of glowing bullets intensified as several Drakkar sprayed the corridor on full-auto, reacting in terror as he systematically hacked the group apart. \n\nA wild shot from a huge calibre rotary cannon managed to clip his left bicep as he ducked to one side, jarring him with the concussive impact. The round had a shocking amount of stopping power, blasting a divot out of his armour and drawing blood from his exposed flesh beneath. John reacted by impaling the next Drakkar through the chest with a double-handed thrust, the blade driving straight through its armour and out through its back. He lifted it off the ground effortlessly, its body shuddering as it was hit by rounds from its comrades, sprays of blue blood gouting out behind it. \n\nPausing for a split second, he levelled his sword at the ten warriors blazing away with their guns at him, aiming at the largest concentration of hostile warriors. Channelling his will through his blade, the impaled Drakkar was launched forwards on the crest of a telekinetic wave of force, sending the dying creature careening down the corridor. It knocked down most of the bulky aliens like bowling pins, with only two still left standing on either side.\n\n\"Damn, a split,\" he muttered to himself in irritation, while running full tilt towards the two horrified creatures.\n\nJohn's sword whipped round in a lightning-fast curve, neatly decapitating the first, before he used his momentum to bring him around to the second. It raised its metal shield to try and ward him away, but it was unable to move quickly enough to stop him. He could see its look of terror through the red-tinted faceplate as he casually batted the reflective barrier aside, then drove his sword into its gut in an upward stroke. The blade sliced through its body and punched through its brain from below, flooding the Drakkar's helmet with the accompanying rush of blood. ",
        "\"That's the spare,\" he said in quiet satisfaction, as the two Drakkar keeled over, crashing to the ground.\n\nHauling his sword free, John strolled down the corridor towards the rest of the pack. The Drakkar floundered on the floor in their heavy armour, still reeling from being smashed backwards by a foe moving so quickly that he appeared like a vengeful white blur. His glistening blade left arcing trails of blue blood in the air as he stepped from one to another, sword rising and falling as he swiftly executed the remaining warriors where they lay.\n\nAfter plunging his blade into the forehead of the last of the Drakkar, John loped away down the corridor in pursuit of the next group. A score of broken black shells lay in mangled heaps in the corridor behind him, the entire battle having taken less than thirty seconds. \n\nPhenomenal strength and speed, matched with flawless technique... there were only a handful of creatures in this segment of the galaxy able to stand against this Progenitor ascendant.\n\n***\n\nPurple streaks sailed over Sakura's head as she slid across the floor, the Drakkar ahead of her caught by surprise as she ducked underneath his rain of shells. As she slid past another Drakkar marine, she gritted her teeth as she hacked through its armoured leg, her arm jarring with the impact from her right ninjato. The massive alien cartwheeled through the air behind her, lifted off the ground with the force of the strike from her blade. She dug the heel of her boot into the ground, abruptly stopping her slide and using her body's momentum to flip herself up to her feet. Landing lightly, she skipped forward a step then stabbed downwards with her twin blades, impaling the last of the group through its armoured helmet.\n\nShe yanked her swords free as she landed, the seven-foot-tall Drakkar marine dropping his black weapon before tipping over backwards, hitting the floor with a booming metallic crash. With no enemies left standing, she glided over to the legless Drakkar that was writhing on the ground and howling in agony. Sakura had seen what this pack had done to the Ashanath they had already caught, so she felt no sympathy for the black-clad creature as she shoved her right ninjato through its throat. She had to thrust hard to drive her blade through the thick armour, her arms starting to tire after carving through so many of those bodysuits to get to the foul aliens beneath.\n\nWith that creature's death, it was the end of another group of ten. The red dots that had fanned out from the first Drakkar dropship had now all been removed from the overlay map, so Sakura quickly searched for the next pack of invaders. \n\n\"Thank you for saving us,\" a whispering voice said to her, startling Sakura out of her single-minded focus on hunting down the Drakkar.\n\nShe glanced across the silver-walled room at the three Ashanath huddled in the corner, the diminutive creatures staring at her with their huge black eyes. The profound gratitude on their faces was obvious, even for the normally impassive grey aliens - it wasn't really that surprising, considering that they were about to be eaten alive by the Drakkar until she intervened. Still, it was a moving moment for Sakura - the first time she had actually saved another life purely by her actions alone. Those three Ashanath hardly atoned for the hundreds of victims amassed by Shinatobe, but it was a good place to start.\n\nBowing to them, she replied, \"You're quite welcome. I've eliminated the rest of the pack, so you should be safe now. Stay out of sight though, until you're given the all-clear.\"\n\n\"We will do as you command,\" the Ashanath replied, in its quiet eerie voice.\n\nA second Ashanath stepped forward and asked, \"What is your name? We would like to know the name of our saviour.\"\n\n\"My name's Sakura, I'm with John Blake and we're here to stop the Drakkar,\" she quickly explained.\n\nThe alien gazed at her intently and said, \"We will never forget you, SakuraBlake. Thank you.\"\n\nShe was about to correct the Ashanath's mistake, but smiled at him instead. Saluting the Grey with her right blade, Sakura bounded towards the door, rushing after the Drakkar that had flooded into the Legacy from the next closest dropship. She had a good three-hundred metres and four decks to traverse before reaching the next entry point, so she sprinted at full speed down one of the main spinal corridors that connected the sections of the ship. Glancing at her overlay map, it looked like the next group had largely stuck together, clustered in a mass of at least fifty Drakkar going by the red dots. \n\nShe wondered why that could be, until Alyssa's voice reached out to her telepathically. *You're approaching the Ashanath barracks. Irillith's just added a key, with labels for locations on the ship.*\n\nSakura checked the map again and when her eyes flicked to the blinking blue light, the map quickly refreshed with names for each area. Sure enough, the section she was running towards was flagged as the living quarters, with the Drakkar congregated near the Barracks. She could only imagine what kind of slaughterhouse the Drakkar had turned that into and she braced herself for more terrible scenes of carnage.\n\nThe Ashanath had installed grav-tubes in the Legacy and she recognised them immediately as the inspiration behind Dana's upgrades to the Invictus. Darting into the silvery tube, she began to sink down in the slow-moving field, travelling far too slowly considering the urgency of her situation. Reversing her grip on her two swords, she used them as climbing picks, driving the tips into the silver wall of the grav-tube and rapidly increasing the speed of her descent.\n\nIt didn't take her long to drop down the four decks to the barracks and she kicked off the back wall of the grav-tube to propel herself into the broad corridor. She started in surprise when she saw the damage that corridor had sustained and it quickly became clear that she'd stumbled into the aftermath of a pitched battle. The walls had been raked by laser and heavy calibre weapon fire, and while there were a few dozen Ashanath corpses lying on the ground, they hadn't been eaten. The silver-armoured Ashanath soldiers had been left where they'd fallen, the Drakkar too busy fighting with the rest of the ship's complement of Grey Marines to stop for a snack. A handful of Drakkar had been killed too, having taken hits from what appeared to be a heavy laser.\n\nThe battle still raged ahead of her and Sakura darted towards the sound of combat with swords held at the ready. There was an open set of double doors ahead on the left, with sizzling red laser bolts flying through and hitting the wall beyond. She could hear the battle roars from the Drakkar accompanying the heavy booms of their weapons as they returned fire, the invaders having forced the Ashanath back to the Barracks in a fighting retreat. Most of the Ashanath shots were at chest height, so she crouched low before peeking into the room. \n\nThe Drakkar were involved in a furious gunfight with the surviving Ashanath Marines, who'd been driven back into a last stand. This part of the barracks had once been some kind of galley, with the diminutive silver-armoured creatures using the solid metal blocks that formed the dining tables for cover. The Drakkar weren't bothering with such subtleties as finding cover, relying instead on their force shields, hand-held reflective barriers, and thick armour, for protection from the storm of laser bolts.\n\nAn Ashanath marine with a Heavy Laser fired at one of the closest Drakkar, coring a glowing red hole through the black-armoured warrior. As the four-armed monster keeled over, his squadmates returned fire, eager to finally get their revenge on the Ashanath who'd killed several of their pack. The purple energy bolts from their weapons blasted big chunks from the poor Grey soldier and he didn't even have a chance to scream as he was torn apart. \n\n*There's hundreds more Ashanath crew hiding in the kitchen. They fled to the Barracks looking for protection from the Drakkar,* Alyssa informed her solemnly. *The Ashanath Marine Captain tells me that his forces are down to forty men and near breaking point. If you can't stop the Drakkar, it'll be a massacre.*\n\nSakura nodded, understanding what was needed of her and gripped her twin ninjato firmly with each hand. Her arms felt numb after all the non-stop combat and she wasn't looking forward to hacking her way through another fifty suits of armour. *I won't let them be slaughtered,* she replied grimly, taking a deep breath to prepare herself.\n\n*I know,* Alyssa replied affectionately. *By the way, John wanted you to have a gift.*\n\nSakura arched her back and let out a shocked scream as Alyssa poured a vast torrent of psychic energy into her, flooding every fibre of her being. It felt like she was in the eye of a tornado as a wonderfully refreshing surge rushed through her body, goosebumps prickling along her limbs. Her fatigue was swept away in an instant, with deliciously cool shivers shooting up her spine as she cried out in ecstasy. The tingling ran down her arms, rejuvenating her tired muscles with the crisp chill of a fresh winter morning.\n\nAt some point she had clenched her eyes shut and when she regained her senses and opened them once more, she found the Drakkar and Ashanath staring at her in stunned disbelief. The Drakkar seemed to be crouching for some reason, while the Ashanath cowered behind their cover, only the bravest daring to peek their heads up to see what was happening.\n\nMovement caught her eye and she gaped at her hands in wide-eyed astonishment. A gentle flurry of ice crystals now shrouded her armoured fists, her gauntlets glowing with a soft white aura. The deathly silence was broken by a cracking sound - like a glacier shearing in half - as ice swept up her blades, riming them in hoar frost. \n\n*Please thank John for his wonderful gift,* she murmured, eyes glinting with a chilling inner glow.\n\n*I'm sure he'd prefer it if you thanked him yourself,* Alyssa purred in reply.\n\nSakura smiled as she twirled the two frozen ninjato in her hands then stalked into the room, the Drakkar backing away from her in terror.\n\n***\n\nWarboss Magaruk's eyes darted around the Tactical Map, now as fearful of the Drakkar on his own side as he was the Ashanath. It seemed some form of madness had descended on the Clan leaders in their massive battleships. One after the other, they had inexplicably started turning against their own side in the middle of this swirling battle.\n\nBackstabbing and betrayals were part-and-parcel of Drakkar life, with Clans seeking payback for decades-old grudges - but to turn on your own in the middle of a major battle like this was unheard of! Maguruk would admire their bold opportunism, if it wasn't for how disturbingly close the fight with the Ashanath had become. The Ashanath by themselves wouldn't be too much of a problem, but that terrifying death ship kept tearing through the Drakkar forces, disintegrating battleships and cruisers alike with contemptuous ease.\n\nHis four hands shook with fear as he gripped the Command Table, watching as the Invictus sent a pounding cascade of Singularity Driver rounds into Overlord Yokug's battleship. Out of all the capital ships equipped with black armour from the Dark One, It was the last vessel still intact, the dreadful white battlecruiser having hunted the rest to extinction. Magaruk couldn't tear his eyes from the image as Yokug's immense vessel was obliterated by a continuous stream of explosive shells. After the previous displays of freakishly accurate shooting, the gunner appeared to be toying with Yokug's flagship as if mocking him, spraying shots seemingly at random over its entire length.\n\n\"Boss! Overlord Gezkag's turned against his own Clan!\" his Navigator yelped, pointing towards another section of the battlefield. \n\nMagaruk turned his frightened bulging eyes to look at Gezkag's battleship, then gaped in shock as he watched it open fire on an escorting cruiser. He knew for a fact that Gezkag's own son was commanding that cruiser, yet the battleship ripped it apart like an alpha podling turning on the runt of the spawn.\n\n\"Grey bombers are launching torpedoes!\" the Drakkar at Tactical cried out in warning, frantically blazing away at them with the laser point defence.\n\nMagaruk quaked with terror and roared at his Helmsman, \"Hard a-port!\"\n\nBoth hearts in his mouth, Magaruk watched as his cruiser turned towards the incoming torpedoes, which were heading straight for their port flank. There were a couple of huge explosions as their laser point defences cooked off two of the approaching warheads, but there were too many to destroy them all. Retro-thrusters flared along the length of his cruiser, bringing it about in a desperate manoeuvre. They turned just in time to fit through the gap that had opened up, with the rest of the torpedoes missing them by mere metres.\n\nMagaruk's sense of relief was short-lived as his cruiser was shaken by a salvo of beams, red warning lights sounding off around the Bridge.\n\n\"Shields out!\" the Engineer wailed.\n\nAt this point, Magaruk didn't care how tasty the Ashanath were. No meal was worth this kind of grief, no matter how delicious!\n\n***\n\nEngineer Batiri adjusted a dial on her console with a thought, diverting the Ashanath cruiser's energy flows back to the weapons, re-enabling them once again. Sounding pleased, she said, *Shields are restored to sixty-three-percent. We are ready to fight.* \n\nLeader Linnaeus didn't respond straight away, he was still awed by the radiant goddess that had appeared on the Ashanath command web. The curvature of her body was absolutely magnificent and the brilliant white aura seemed to enhance her exquisite globes, rather than obscure them.\n\n*Do you wish us to engage in the battle, Linnaeus?* Navigator Cadimus prompted him impatiently.\n\nRousing himself from the entrancing spell cast by the exotic astral temptress, Linnaeus said to the radiant goddess nervously, *Alyssa, our shields are partially restored. We are now able to initiate combat once again.*\n\nAlyssa turned to face him so that he was no longer looking at her from behind. Linnaeus felt tinged with sadness as one set of perfect spheroids disappeared, but the sensation was fleeting as he was presented with another pair of marvellous orbs. The glowing Terran girl adopted an odd facial expression as she looked at him. Her smile was lopsided and she raised her left eyebrow as she watched him staring at her. How curious.\n\n*Join the formation of three cruisers harassing the battleship at heading one-four-zero, Linnaeus,* she said, with a flirtatious grin. *Spread out and snipe at the Drakkar using the wrecks as cover, we're trying to keep casualties to a minimum.*\n\n*We shall do so at once,* he replied, passing the order on to Navigator Cadimus.\n\nHis cruiser rotated smoothly, turning about so that they were facing towards the three Ashanath cruisers hiding behind several black-hulled derelicts. Navigator Cadimus increased their speed and they began to close the distance on the massive Drakkar battleship, which was attempting to swat away its various attackers with salvos of Beam Laser fire. The sprawling battle had taken a terrible toll on both sides, breaking up the fleets into lots of smaller engagements and Linnaeus' newly-assigned target had lost all its escorts. With the bulk of the battleship's weapons forward-facing, it was relatively easy for the nimble Ashanath cruisers to strike unopposed at the rear, while the cruiser that had gained the battleship's focus ducked out of sight behind cover.\n\nTactical Officer Pallari took careful aim at the Drakkar vessel as they came into range, then fired their complement of Beam Lasers at the target. The battleship's already-weakened shields flickered dangerously as they were struck by those eight red beams, provoking it into turning towards its latest tormentor. Navigator Cadimus rotated their cruiser to starboard and they slid into cover, hiding from the battleship's fury.\n\nLeader Linnaeus felt a surge of relief as he watched his crew in action. They seemed calm and confident now, happy to be part of the well-coordinated Ashanath counterattack.\n\n***\n\nJohn brought his sword around in a broad two-handed slash, neatly cleaving straight through the Drakkar's hastily upraised metal shield, then slicing through its armoured head.\n\n\"Are you alright?\" he asked the cowering Ashanath, who had stumbled to the ground in its haste to flee from its four-armed pursuer. He offered the thin creature a gauntleted hand to help him to his feet.\n\n\"I am unharmed JohnBlake, my thanks for your rescue,\" the Grey replied, accepting John's assistance and swiftly standing upright. His bulbous head turned to look back out through the black door into the gloomy corridor beyond and added, \"My five companions... we split up near the Drive Room, when we fled from the Drakkar. I can hear them - they are being chased... hunted...\"\n\n\"Don't worry, I'll save them,\" John said with a reassuring nod. \n\nHe spun about and ran for the door, checking his map for the intersection near the Drive Room. Four Drakkar had come that way until he'd caught up with and killed them all. He could see two more groups had split up along the other corridors, consisting of a group of three and a group of five Drakkar. Reasoning that the group of five would have started hunting the largest group of Ashanath, he sprinted down that junction in frantic pursuit.\n\nThere were still dozens of red dots scattered deeper inside the ship, the Drakkar having spread out as they chased after the fleeing Ashanath. He was methodically catching and slaying them all, but it was taking him time, even aided with his enhanced speed. Every minute the Drakkar were catching more of the fleeing Ashanath and he knew every second was precious, with more lives hanging in the balance.\n\nAs he ran down the corridor, he felt the stream of eldritch energy from Edraele flicker out, abruptly cutting off his psychic speed. He'd grown used to hearing Drakkar howls and roars dragged out in slow-motion, so it felt jarring to return to normal again.\n\n*I'm so sorry, John,* Edraele apologised, sounding absolutely exhausted. *That's all the power I can give you.*\n\n*Don't overdo it!* John said in alarm. *You don't have to push yourself that hard to help!*\n\n*It's alright... felt good knowing I was helping save lives,* she murmured faintly, her voice growing drowsy.\n\n*You did a brilliant job! Dozens of Ashanath are alive because of you. Get some sleep, honey, you've really earned it,* John said soothingly.\n\n*Love you...* she mumbled, and then like that she was gone, curled up with the equally exhausted Young Matriarchs.\n\n*Don't worry, handsome. I've still got plenty of juice left!* Alyssa announced cheerfully, while simultaneously flooding his system with psychic energy.\n\nJohn shivered at that thrilling sensation, his psychic speed re-activating once more. A Drakkar's hunting cry dragged out as his perception of time distorted, confirming that he was moving at a far faster pace than his unwitting foes.\n\n*Fantastic, thanks beautiful!* he exclaimed as he raced down the corridor, seeing from the map that he wasn't far behind the Drakkar. \n\nRounding the next corner at breakneck speed, he finally sighted his quarry. The five Drakkar had chased the Ashanath into the reactor core chamber, the jagged door currently left wide open behind them. The Greys were now trapped, and he could hear the hulking marauders cackling with laughter as they gloated at the success of their victorious hunt.\n\nJohn charged towards the group, sword drawn back in preparation.\n\n***\n\nAlyssa strolled along beside Rachel with her Punisher rifle slung over her shoulder, following after a pack of Drakkar soldiers who were fleeing in terror. Every so often, one of them would stop to shoot at her, but she would block his shot with her handy piece of portable cover. She glanced at her impromptu shield, wincing when she saw that it looked a little worse for wear. She blocked a flurry of shots heading their way that blasted more holes in the bullet-riddled Drakkar corpse, before casually tossing it aside.",
        "Making a deft gesture with her left hand, she grabbed a fresh one, the Drakkar ahead of them lifting off the ground in her ghostly telekinetic fist. It shrieked with terror as it desperately tried to aim at the glowing sorceress, but Alyssa casually batted aside its weapon with a contemptuous backhander, then snapped its neck with an elegant twist of her fingers.\n\n\"That's better,\" she said conversationally to Rachel, who was walking along by her side. \"They do insist on making a ridiculous amount of noise.\"\n\nRachel turned to look at her and suggested, \"Perhaps they don't like being scared shitless before you kill them?\"\n\nAlyssa adopted a thoughtful look before a frown appeared on her beautiful face. \"No, I don't think that's it. They definitely seem to enjoy playing that game with the Ashanath, so it's only fair that they get to have a turn being chased.\"\n\nThe brunette laughed, shaking her head as she observed, \"You're enjoying this far too much. Aren't we meant to be the good guys? What happened to merciful deaths and all that?\"\n\n\"Well, they're really nasty bad guys, so that means I can pretty much do whatever I like to them and not feel bad about it. It's awesome!\" Alyssa replied with a grin.\n\nShe summoned up a glowing white lance of telekinetic energy, then launched it down the corridor, punching a huge hole through the back of one of the petrified Drakkar soldiers. Her psychic missile went on to skewer the two in front of it and all three crashed face-first onto the ground.\n\n\"Nice shot,\" Rachel noted wryly with a smirk.\n\n\"Thank you kindly,\" Alyssa replied, using her right hand to tip an imaginary hat in her friend's direction. She released her grip on the floating Drakkar and let her temporary shield crash to the ground in a tangle of limbs.\n\nRachel smiled at the blonde, then quickly checked the map, searching for red dots. \"That was the last of the Drakkar from that dropship. All the rest are over by Sakura towards the front of the Legacy, or at the back near the High Council. Which way should we go next?\"\n\n\"Sakura's having fun, so we'll leave her that last lot,\" Alyssa replied, scrutinising the map herself. \"All the ones at the back have spread out, so we better head that way and help John.\"\n\nRachel nodded her agreement, a look of concern on her face as she said, \"There's a big group heading towards the High Council. We better hurry if we're going to save Ularean in time.\"\n\nAlyssa stepped over the punctured Drakkar corpses, then broke into a swift run, Rachel easily keeping up with her as they sprinted down the corridor towards the rear section of the ship. The blonde Matriarch could hear the brunette's thoughts racing through her mind, and she glanced at her knowingly, switching to telepathy while they ran.\n\n*Do you really want to know?* she asked, glancing to the left at her tawny-haired friend. *Half the fun is the surprise when you find out - I wouldn't want to ruin that for you.*\n\nRachel smiled, having grown used to Alyssa's ever-watchful presence in her mind. Her smile faded into a frown as she admitted, *It's just that Dana's had her third helix activated now and you know what they say when there's a disparity between the power in a relationship. Things are great between us at the moment and I don't want anything to ruin it. I guess I'm just curious what John has in store for me.*\n\n*Sparks has totally fallen for you, you've got nothing to worry about,* Alyssa said comfortingly as she loped along the corridor, deftly avoiding the brunette's unspoken question.\n\nUp ahead of them, they could see an abrupt change in the structure of the ship and they faltered for a moment, slowing down at the intimidating sight. The shiny silver Ashanath construction ended along a jagged line, where it met forbidding onyx walls illuminated with dark crimson lighting. The two Terran girls gave each other bashful grins, realising how silly it was to be scared of what essentially amounted to black walls with red lights.\n\nRachel walked over the join into the original section of the Legacy, glancing around at the gloomy surroundings. *I don't think much of the Progenitor taste in decor.*\n\n*Thank God we didn't leave John in charge of refurbishing the Officers' Lounge!* Alyssa agreed with a grin.\n\nThe brunette couldn't help giggling at that. *It certainly would've set a dramatic tone for breakfast at the dining table!*\n\nAlyssa laughed along with her, then took a quick glance at the overlay map. *We'd better pick up the pace, the nearest group are one-hundred metres ahead of us and a bit to our left. John's lower down and over to the right - he's busy chasing another group at the moment.*\n\n*Sure, lead on,* Rachel agreed, holding her Justice Laser rifle at the ready.\n\n*I suppose I better hold my gun too,* Alyssa said with a smile, as she unslung her Punisher rifle and started jogging down the corridor. *It's bad form if I don't even pretend to be scared of the Drakkar.*\n\nRachel shook her head with amusement, then said, *We got interrupted earlier, we were talking about psychic powers.*\n\nAlyssa shot her a teasing grin and replied, *Ah yes, so we were. Sakura certainly seems pleased with her Cryokinesis.*\n\n*Wait! She can do what now?!* Rachel blurted out, as they followed the corridor around to the left. \n\nThere were at least a dozen Ashanath corpses scattered around the floor, the small, frail skeletons having been picked clean by the ravenous Drakkar. Alyssa and Rachel carefully stepped around the sad piles of bones, sharing a grim look as they headed deeper into the brooding black core of the Progenitor vessel. Their light-hearted conversation ended as they heard the sound of howling Drakkar ahead of them now, the insatiable monsters hunting their next meal. \n\nIrillith's overlay map hadn't led them astray yet, so they ran swiftly down the corridor, eager to prevent any more Ashanath from sharing the same fate. The next set of rooms were filled with huge capacitors for the Progenitor Power Core and the Drakkar were chasing the Ashanath around the enormous machines in an attempt to corral them and start their next feast. It was obvious from the way the red dots had fanned out on the map, that the pursuing Drakkar were herding the fleeing greys straight into the waiting arms of a second group.\n\nAlyssa stepped through the jagged-edged doorway, her jokes and banter forgotten with the urgent need to rescue the Ashanath from the impending slaughter. She glanced over her shoulder to watch Rachel enter the room behind her, then gasped as a white-haired Maliri girl rushed through the door behind them, her face stricken with terror. \n\n\"Wait!\" Alyssa cried out to the blue-skinned woman as she ran into the room, then blinked in shock when she rushed straight through Rachel's armoured form. \n\nImmediately realising what she was seeing, Alyssa turned to watch the psychic echo as the girl fled across the room. The Maliri sobbed with fear as she ran, before being thrown violently through the air and landing in a crumpled heap on the ground. It was clear from the awkward angle of her head that her neck had been broken with the impact. Alyssa felt a chill run down her spine as she felt the reverberation of terror the girl had experienced in her last moments.\n\n\"What's wrong?\" Rachel asked, reaching out to place a comforting hand on Alyssa's shoulder.\n\nAlyssa turned around in a daze as more psychic echoes began to appear. She saw one Maliri girl fiercely berating another, when the capacitor they were standing beside suddenly exploded, incinerating both of them in an instant. The blast had only just dissipated when a trio of young Maliri women brushed past her. Alyssa whirled around to watch them, sensing the initial tremors of pain beginning to build, forecasting their imminent and excruciating deaths. They walked calmly across the room, before abruptly clutching at their chests with strangled cries of agony. Their faces were masks of torment as they pitched over, once beautiful faces draining of life before Alyssa's shocked eyes. The three girls convulsed in their death throes until their withered husks slowly faded away.\n\n\"Alyssa! What is it?!\" Rachel asked again, shocked to see her friend suddenly looking so pale.\n\nThe blonde shivered and turned away from the horrible sight, murmuring, \"This place has a long memory. Lots of terrible things happened here...\"\n\nRachel studied her for a moment, before asking with concern, \"Are you sure you're alright to continue?\" \n\nAlyssa nodded stoically and lifting her chin to meet the brunette's worried gaze, she replied, \"I'll be alright. Let's go save the Ashanath - this place doesn't need any more ghosts.\"\n\nShe turned and ran after the Drakkar, trying her best to ignore millennia of horrific deaths playing out before her eyes.\n\n***\n\nLeader Linnaeus felt a surge of relief as the red beams from his cruiser slashed across the flanks of the battleship. With the aid of the other three cruisers in his formation, they had finally worn down the Drakkar's shields and their Beam Laser salvos were finally striking home. \n\n*Excellent shot, Pallari,* he praised his Tactical Officer, watching all eight beams carve into a section of the hull already scored with multiple hits. There were deep glowing trenches carved in that armour now, the energy weapons having melted almost all of the way through that plating.\n\n*It is easy when they are distracted by the rest of the group,* Pallari replied graciously, but Linnaeus could hear the satisfaction in his voice.\n\nEngineer Batiri had been studying the Tactical Map, watching as the tail-end of the battle unfolded before her eyes. *There seems to have be a dramatic shift in our fortunes, Linnaeus. I have not seen our forces lose a ship for several minutes.*\n\nLinnaeus glanced her way and explained, *JohnBlake's associate is providing leadership and tactical guidance to our fleet.*\n\nBatiri turned to look at him with her huge black eyes, admitting, *For a moment I believed all was lost.*\n\nBefore Linnaeus could reply, Cadimus' shocked voice echoed through their minds. The frightened Navigator blurted out, *The Drakkar are launching dropships!*\n\nLinnaeus responded immediately, ordering, *Move away from the battleship to give Pallari a chance to shoot them down.*\n\n*They're everywhere!* Cadimus cried out in panic.\n\nWhen Linnaeus looked at the map again, he felt that same sense of fear. Dozens of Drakkar dropships were racing away from the wounded battleship, but more were pouring out of the wrecks around them. Not all the Drakkar vessels had been instantly obliterated in reactor core explosions and some had been left mortally wounded, incapacitated but still partially intact. It seemed that the Drakkar had been waiting for a moment to strike and with the Ashanath so close to their ships, now was that time.\n\n***\n\nFaye fired the Nova Lances, unleashing the colossal energy built up in the turbulent spheres of white energy at the front of the Invictus. The maelstrom of fire converged on the prow of the grey Drakkar battleship, then slashed diagonally across, leaving a glowing, haphazard rent as she disintegrated the front third.\n\n\"Damn!\" she exclaimed with frustration, watching as the beam flickered out a few seconds later. Glancing at Calara, Faye frowned as she continued, \"I don't know how you can completely vaporise them in one shot! You make it look so easy!\"\n\nCalara turned away from the chaotic Tactical Map for a second and gave the purple sprite a reassuring smile as she replied, \"You just need more practice. You've improved a great deal with the Pulse Cannons.\"\n\n\"I'll have to spend more time analysing your shooting!\" Faye replied, looking eager at the prospect.\n\nThe brunette nodded and said, \"You've got lots of targets to practice on with the Singularity Drivers now. After that last sweep, there's several battleships without shields you can shoot at.\"\n\nThe Invictus had charged through the turmoil of the battle, slashing left and right with Beam Lasers and stripping the shields from the Drakkar Capital ships. Those ships were now exposed and vulnerable, but their frantic headlong plunge had come at a price.\n\n\"Our shields are fucked again,\" Dana said, grimacing as she looked at the shield status display. \"Their new tactic of 'spray and pray' seems to be paying off.\"\n\nThe lights had gone out completely now, showing that the wild Drakkar shooting had knocked out the Invictus' own shields. While the scattered beams didn't have enough focused strength to blow out any more capacitors, there were more melted furrows in the hull on the exposed bow, where the battlecruiser had already lost a couple of capacitors. The armour was still highly reflective, robbing those otherwise destructive beams of much of their power, but they were taking damage now, with several more furrows marring the once-pristine hull of the Invictus.\n\nJade nodded her sombre agreement. \"It's much harder to dodge incoming fire when they're just firing spreads of shots like that. I think they've given up trying to aim properly.\"\n\n\"I want you to hold position out of range of their guns,\" Calara cautioned the Nymph. \"We've got a massive range advantage with the Singularity Drivers and Nova Lances, so we can just pick them off without exposing ourselves to more damage.\" Turning to face Faye, she continued, \"You'll still be shooting at extreme range, so be very careful to line up your shots. They're big targets, but we can't afford to hit any Ashanath. Watch the flight vectors of the Grey's ships and try not to let them sail into your fire.\"\n\nFaye's luminous eyes were wide as she said, \"I'll take extra care to make sure I don't miss!\" She allocated three avatars to calculate the trajectories of all ships on the path towards the closest Drakkar battleship.\n\nDana smiled at the brunette as she said, \"Good plan! We better not fuck up the Invictus. John's already going to be pissed at us for trashing the Valkyrie and the Raptor.\"\n\n\"I was only hit by one missile!\" Jade protested, already apprehensive about his reaction when he saw the gunship. She knew he'd blame himself for exposing her to danger.\n\n\"You've got nothing to worry about,\" Irillith said soothingly. Her violet eyes flashed over to the redhead as she added teasingly, \"He's going to be far more annoyed at Dana for nearly getting herself killed.\"\n\nDana deflated in her chair, nodding with a glum expression on her pale face. \"Yeah, he's gonna be furious when he sees the state of the Valkyrie.\"\n\nIrillith winced, giving her twin a guilty look before saying, \"I was only joking, Dana. Please don't be upset.\"\n\nTashana darted over to the redhead and placed a comforting hand on her shoulder as she said, \"I'm sure he'll be more relieved you're okay than anything else. I haven't known him long, but it's obvious how much he cares about you.\"\n\nDana smiled at her and she opened her mouth to reply, but was suddenly interrupted by Jade's startled gasp.\n\n\"We've got lots more contacts!\" Jade cried out in warning, cat-like eyes widening in surprise. \"Drakkar dropships appearing all over the place!\"\n\n\"Fuck me... there must be hundreds of them!\" Dana murmured, staring at the new sensor contacts that had sprung up like weeds all over the battlefield.\n\nCalara leaned forward in alarm, her brown eyes flashing back and forth as she took in the sheer number of Drakkar boarding ships. Her brow furrowed with worry as she knew the right course of action they should take to help the Ashanath, but it would mean exposing themselves to considerable danger.\n\n*I agree with you,* Alyssa thought to her an instant later. *The Ashanath will lose the other half of their fleet to boarding actions if you don't intervene. I've seen what happens to the Greys after the Drakkar get their hands on them - you've got to save them from that.*\n\n\"Take us in, Jade,\" Calara said firmly. \"We need to bring all our guns to bear if we're going to clean up those dropships.\"\n\n\"We're going in!\" the Nymph replied, her emerald eyes gleaming with excitement as she thrust the throttle forward. \n\nThe Invictus' huge engines flared with a blazing orange glow, as the battlecruiser plunged into the chaotic battle once again.\n\n***\n\nThe gunshots left purple trails through the air as Vekrok's elite guard unloaded on the locked doors. They were deep within the ship now and had chased the last few of the little grey runts into this room, before the door had abruptly closed behind them. Whatever the door was made of, it was tough as old boots, because they'd been blasting it for five minutes and it still hadn't buckled. \n\n\"Bahh, get outta my way!\" he grunted, barging his way past his men and knocking several of them flying. \"You lot are fucking useless!\"\n\nHis bulging black eyes studied the imposing doorway, looking for possible weak points. Its entire surface was a pitted mess, covered in deep craters from the powerful rounds that had slammed into it. None of the shots had penetrated yet, but there were definitely a few places that looked in bad shape. \n\nDropping his black swords on the ground with a dull clatter, Vekrok grasped his two maces in matching two-handed grips, then activated the power fields on both weapons. A glowing crackle of energy shrouded the head of each mace, with a deep humming sound filling the corridor. Raising both weapons back, his upper arms brought the first mace across from the right, hitting the door with a massive booming crash. No sooner had he pulled the mace back to swing again, than his lower arms swung in the second mace from the left, battering the doorway with another deafening impact.\n\nBack and forth those two weapons worked, pummelling the besieged portal with hugely powerful blows. It didn't take long for the door to start creaking ominously as Vekrok smashed enormous dents into its surface and after the ninth blow, the upper half of the door split down the side with a horrible shriek of protest. As the door caved in, Vekrok was finally able to see into the room. \n\nIt was a huge black chamber - a control room of some kind - with scores of Ashanath cowering on the far side behind onyx consoles. Amongst those feeble aliens were nearly a dozen in white dresses, which he knew were the leaders of those pitiful creatures. \n\n\"You're fucked now,\" he gloated, wrenching the smashed doors apart. A few red laser bolts streaked across the room in his direction, but he laughed at their pathetic weapons. Vekrok stepped backwards and picked up his two discarded swords, before turning to look at his men. \"You can eat the rest, but capture the bosses in white. I need them alive!\"\n\nHis elite bodyguard howled with glee, their lime-green faces twisting into terrifying expressions of hunger through the red-tinted faceplates of their black armour. They poured through the door, eager to start feasting on the scores of terrified Ashanath within, Vekrok following them in as his men charged towards the cowering Ashanath. Surprisingly, the nine white-robed leaders were standing there with their eyes closed, probably so scared out of their minds that they didn't want to see the Drakkar coming for them.\n\nVekrok grinned in anticipation, but he suddenly heard a faint whisper, somehow sounding clear in his head despite the raucous battle cries from his men.\n\n*Sleep... It is time to rest...* an eerie voice murmured to him, the quiet voice strangely compelling. \n\nStaggering on a couple more steps, Vekrok's toothy jaw opened in a long yawn, his bulging eyes drooping as he started to get drowsy. All around him his men were slowing to a halt, or just putting down their weapons and squatting down on the floor to sleep. He tried to shrug it off as long as possible, but that voice was everywhere, filling his mind with irresistible thoughts of slumber.\n\n***\n\nAlyssa and Rachel caught up with the chasing group of Drakkar just as they were herding their Ashanath prey into the second group. The Terran girls could see the looks of fear on the small, silver-clad Ashanath crew as they nearly ran into the Drakkar waiting for them, whirling around and looking at their pursuers in horror.",
        "*Start on your left and work your way towards the middle,* Alyssa ordered Rachel, flinching as a Maliri ghost screamed in terror, her face hollowing out as the life force was remorselessly sucked from her body. \n\n*They're fully armoured, I won't be able to punch through with the Justice Laser,* Rachel replied, as she took cover behind a console and aimed at the first Drakkar on the left-hand side.\n\nAlyssa handed over her Punisher rifle and a couple of spare magazines. *Use this as well. You're strong enough to carry both, but don't bother with headshots. Shoot high-powered bursts at centre mass.*\n\nThe brunette nodded grimly, accepting the Punisher rifle and steadying both weapons on the console in front of her, one in each hand. Aiming the Justice Laser, she opened fire on the first of the Drakkar. Sizzling blue laser bolts struck its protective force field, ripples undulating outwards from the impact for a couple of seconds, before the shield was overwhelmed. She immediately squeezed the trigger on the Punisher rifle, shooting her now-shieldless foe.\n\n\"VrmPrrrkaow!\" the railgun barked, sending a trio of twenty-millimetre slugs into the back of the Drakkar's black battlesuit. The heavy calibre bullets punched huge holes through its torso, showering the Ashanath and Drakkar beyond in a deluge of blood.\n\nNot bothering with any finesse, Alyssa simply reached out with a pair of huge telekinetic fists to grab the closest Drakkar. Taking a firm hold of his legs to anchor him to the floor, her second fist gripped him around the torso, then began to tug at his chest. His armour was strong and offered some resistance, so she focused more intently and jerked upwards, ripping him apart in a jet of blue gore. The creature's four arms flailed wildly as it screamed in agony, before she tossed his mangled torso aside and reached for another.\n\nShe worked through the group methodically, doing her best to concentrate on the Drakkar and ignore the deaths of hundreds of Maliri around her. The women had died in so many different ways, from accidents to deaths in combat, but by far the worst was seeing the vital young women have the life force sucked out of them. She did her best to ignore the Maliri death throes as she waded into the Drakkar, dismembering the aliens as quickly and efficiently as she could manage.\n\nPulling them apart was taking too long, so she summoned up a glowing white sledgehammer with a huge, sharply-angled head, and started battering her way through her black armoured foes. The ghostly mallet rose and fell, pounding bloody rents through their armour as she smashed them into the ground with her telekinetic weapon. The Drakkar were stunned by their attacker's sudden appearance, but they finally reacted as Alyssa started tearing them apart, while Rachel hit them from the other side with her two weapons.\n\nThe handful of survivors from the first group started firing back, joined by the second, who ignored the Ashanath that had collapsed on the ground in fear.\n\nAlyssa ducked back around a blocky capacitor, seeking temporary respite from the purple bullets that zipped overhead. As she got ready to knock the Drakkar down with a wave of telekinetic force, movement off to her left caught her eye. She gasped as she turned to see a squad of armoured women in an intense gunfight with several armoured Maliri. \n\nThe sinister weapons sent streams of dark-red bolts into their foes, overcoming what appeared to be shields, before punching into the Maliri's armoured bodies. Both sets of women wore full body armour, the style eerily reminiscent of the very suit of Paragon armour she wore herself. Alyssa could see the faces of the Maliri's attackers through the clear visors of their helmets and she gaped at their yellow skin and flaming red hair. Her eyes widened as she saw someone stalking towards them, someone she'd seen several times before...\n\n\"Alyssa!\" Rachel cried out, as the blonde girl stopped killing the Drakkar. More shots sailed around them, the Drakkar intensifying their fire. \"I need you! What's happening?!\"\n\n***\n\nJohn finished off the second group of Drakkar, narrowly saving the terrified Ashanath from the hungry beasts that had removed their helmets and were about to tuck into their victims. He watched the Drakkar marine's head sail across the room, the armoured helmet turning cartwheels in slow motion and sending out sprays of blue blood.\n\nHe was about to help up the shocked Ashanath when he heard the first resounding crash echoing from deeper in the ship. A quick glance at the map showed him that the lead group of Drakkar had reached the Ashanath High Council in the spot Ularean had chosen for them. It didn't take him long to realise that the Drakkar were trying to break inside and he bolted from the room without a backward glance at the pair of Ashanath he'd just saved. \n\nAs John sprinted down the corridor towards the High Council's safety room, he heard more of those crashes, the noise stretched out in long moments as he raced to help Ularean.\n\n***\n\nSomething felt naggingly wrong to Vekrok about having a nap in the middle of a fight, especially when his quarry were only a few dozen metres away from him. \n\n*You feel so weary. You have had a very busy day and it is time to recover your energy,* the voice continued relentlessly.\n\nVekrok glanced around him, seeing that he was the only one still standing, the rest of his men having all fallen asleep. His heavy eyes settled on the Ashanath in white robes ahead of him, seeing the blood streaked over the face of one of them. That blood was so delicious. He knew it would trickle down his throat as he gorged himself on their leaders, filling his belly with their scrumptious grey flesh. He just needed to torture their secrets out of them first.\n\n*There is plenty of time for that later. You must sleep now, instead,* the voice continued, reverberating slightly with fear.\n\nThat brief tremble in the whispering voice was enough for Vekrok to break free of the insidious mental compulsion and his eyes snapped open as he woke. \"You sneaky little shits!\" he roared indignantly, charging across the room at the Ashanath that had ensorcelled his men.\n\nHe thrust forward with his sword, impaling the blood-soaked one through the stomach. Not enough to kill the bastard, but just the right amount to leave him writhing in agony and break the spell they'd put on his men.\n\nUlarean's eyes flashed open, his mouth open wide in a shrill scream of pain as Vekrok stabbed him in the gut. The rest of the High Council's eyes flashed open too, gaping at Vekrok in horror as they shared Ularean's pain through their telepathic connection.\n\n\"Try and control me like a puppet? That's what happens,\" Vekrok gloated, yanking out the sword and letting Ularean collapse on the floor in a blood-soaked heap. \n\n***\n\nAlyssa stood paralysed with the intensity of the psychic echo she was now experiencing, staring in a mixture of awe and fear at the man in her vision. This dreadful imprinted moment had been dredged up from an archaic past, but it was from a time she had witnessed briefly before in the Nexus files...\n\nMael'nerak's stern face was contorted with rage, his black goatee framing a mouth twisted with fury. Swirling vortexes of jet-black psychic energy whipped around his arms, the storms of energy matching his furious temper. Ghastly tendrils shot out from his fingers, spearing the yellow-skinned redheads through the chest. Their tortured cries of pain matched the terrible expressions of agony on their faces, as he lifted up nearly a score of the armoured women in his supernatural grip. \n\nThe black tentacles pulsated sickeningly, with bulges travelling down their lengths towards Mael'nerak's fingertips. It took several agonising seconds for the women to die, horrific moments that Alyssa shared with the psychic imprint left etched into the room. With a strangled cry, she collapsed on the ground, overcome by the brutal intensity of such torment.\n\n\"Alyssa!\" Rachel cried out, ducking behind the console and darting to her side. \n\nThe brunette rolled her limp body over, but her rush of relief to see she was still alive was tempered by the realisation that Alyssa was unconscious. Rachel dragged her further back behind the blocky capacitor, quickly activating the HUD comm interface in her helmet, while firing her Justice rifle at the Drakkar in an attempt to hold them at bay.\n\n***\n\nJohn sprinted down the corridor towards the broken doorway, his heart lurching in his chest as it became obvious that the Drakkar had broken through into the High Council's sanctuary. He could see black-armoured bodies on the ground inside the room, so it looked like the Ashanath had made them pay dearly for storming into the room. He just hoped he wasn't too late...\n\nAbruptly his enhanced speed faded away and he heard a Drakkar's deep roar of anger reverberate down the corridor, the bellow sounding normal now.\n\n*Alyssa! What happened? Are you out of energy?* he asked in a rush, as he ran towards the open doorway. Bizarrely, the Drakkar lying on the ground started to stand up again, dispelling his illusion that they were dead.\n\nHe charged up to the doorway and stared in shock at the biggest Drakkar he'd ever seen, the massive creature towering over Ularean, who was lying in a heap on the floor. The Drakkar's sword was dripping with blood, making it obvious what had happened to the Ashanath Senior Councillor.\n\nEven more alarming, there was still no response from Alyssa. He was about to try reaching out to her again, when the comm interface in his HUD crackled to life. \n\n\"John! We're in trouble!\" Rachel screamed, her fearful face showing her acute distress. \"Alyssa blacked out! She said something about seeing ghosts!\" Drakkar weapon fire sounded shockingly loud in the background as she flinched away from those shots.\n\nJohn was truly conflicted, knowing that to leave the Ashanath alone with the Drakkar was abandoning them to a horrible fate. Then again, it was Alyssa and Rachel in trouble. It took him less than a second to make his decision and he began to turn away, giving the Ashanath a look of profound regret.\n\n\"I'm out of psychic energy, it'll take me a few minutes to get there!\" he said decisively.\n\nSakura's holographic face appeared a second later as she spoke, Rachel having called them both for help. \"I'm already on my way! I'll be with you in half that time!\"\n\nRachel blinked in shock when she saw the inner glow from the Asian girl's eyes, but she shrugged it off quickly. \"We're pinned down by at least ten Drakkar shooting at us! Please hurry!\"\n\nRealising that there was nothing he could do to help and that he would have to place his trust in Sakura to save the women he loved, John strode into the room. He glanced at his HUD to increase the audio amplifiers on his Paragon suit and thundered, \"Drakkar! Is killing unarmed Greys the best you've got?\" \n\nThe hulking monstrosity whirled around at the deafening noise, his hideous hammer-headed face glaring at the impudent upstart that had dared to challenge him. When he saw the Terran in his glistening white armour with his shiny sword, he laughed mockingly, the snide laughter echoing around the room.\n\n\"Show me what you've got, Terran!\" Vekrok boomed, brandishing his twin swords and maces with relish.\n\n***\n\nThe Invictus barrelled through the raging battle, gun batteries blazing. Faye's team of avatars were doing an admirable job, firing the Pulse Cannons and Gauss Cannons at the teeming swarm of dropships. As the ugly, vicious looking vessels exploded around them, she fired the battlecruiser's Beam Lasers and Heavy Cannons at the remaining Drakkar capital ships. A battleship was hit in a dozen different places, the azure beams dragging along its length as the Invictus raced past. \n\nUnlike the far weaker Ashanath weapons, the Invictus' Maliri-based beams raked straight through the armour, melting the superstructure beneath too. Faye's salvo lacerated the battleship's port flank, burning away over fifty metres of armour and leaving a gaping trench in the side of the vessel. The subsequent barrage of Heavy Cannon shells punched into the hull without any armour to slow them down, finally detonating deep inside the ship. It exploded in a crimson inferno, scattering a million pieces of wreckage outwards on the cataclysmic blast wave.\n\nThis section of space was awash with hulks of the fallen and swathed in a sea of debris, making flying through it extremely treacherous. Jade rolled the battlecruiser to the left, pulling up sharply to avoid the burned-out wreck of an Ashanath cruiser. As the Invictus swept by the blackened disc, the rear of a Drakkar battleship slowly tumbled into their path. This section of the vessel was all that remained of the huge angular vessel, after a magazine explosion had blown it to bits. Pushing down on her flightstick and pulling back on the throttle, Jade narrowly avoided crashing into the shattered derelict and pointed the battlecruiser towards the next big cluster of dropships.\n\nThere was a fierce impact that made the Invictus tremble and Jade blinked in surprise as she exclaimed, \"Hey! I missed that wreck! What hit us?!\"\n\n\"Heavy Cannon shells,\" Dana said with a grim frown. \"We took two hits to starboard. The armour's fucked, but still holding.\"\n\n*Alyssa, order the Ashanath cruisers and battleships to regroup with the destroyers. We need them covering each other with point defence,* Calara thought to the blonde. *Destroyer group fifteen in section 'J-47' needs to turn on a heading of oh-eight-nine, to link up with cruiser group six.*\n\nShe waited for a couple of moments, surprised when her girlfriend didn't immediately respond with a confirmation of those orders. \n\n*Alyssa? Are you there?* she asked again, but there was still no reply.\n\nCalara felt a tremor of fear at the lack of response from her lover. She darted a nervous glance across the Combat Bridge and asked, \"Dana, can you try hailing Alyssa via her helmet HUD? She's not responding to me.\"\n\nThe redhead glanced at her in surprise and her eyes widened in alarm when she attempted to contact Alyssa via telepathy, but didn't receive a response either. She sat up straight and her nimble fingers danced over the engineering console as she attempted to contact Rachel instead. \n\nThe brunette's frightened face appeared a moment later and Dana blurted out, \"We lost contact with Alyssa! What's happening?!\"\n\nRachel grimaced and they all heard a flurry of shots race over her head. She looked away from the holo-cam and the sound of her Justice Laser firing back filled the Bridge, quickly followed by the bark of a Punisher rifle. A Drakkar's agonised roars confirmed the effectiveness of her shooting. \n\nFocusing on the camera again, the brunette exclaimed, \"Alyssa's unconscious! She was seeing psychic echoes on the Legacy - ghosts of all the people who died here! I think it was too much for her; she must have been overwhelmed by it!\" \n\n\"Where's John and Sakura?!\" Dana blurted out, gripped with fear for her lover. \"They shouldn't have left you alone!\"\n\nFlinching from another fusillade of shots, Rachel replied, \"They didn't! Alyssa was slaughtering the Drakkar before-\"\n\nHer reply was cut off as she screamed in pain, the comm channel ending abruptly.\n\n\"Rachel!\" Dana screamed, half-rising from her seat in an instinctive reaction, wanting to run to her lover's aid.\n\nA warning alarm echoed around the Bridge, shocking an already stunned crew. \n\n\"What's that alarm mean?\" Tashana asked looking around at the other girls for an explanation.\n\n\"We've been hit by docking harpoons!\" Faye wailed, wringing her hands in worry. \"I'm so sorry! I was supposed to be firing the Pulse Cannons at the Drakkar, but I was so worried about Rachel and Alyssa, I got distracted!\"\n\nJade shook her head and replied, \"It's not your fault. I was just as distracted as you were and I flew straight through them.\"\n\nCalara blinked and shook her head to try and focus, gripping the weapon controls and taking over the Pulse Cannons. The Invictus had flown right through a group of three Drakkar dropships, the brutish vessels promptly hitting the battlecruiser with docking harpoons and reeling themselves in. She opened fire immediately, managing to hit two and shredding them with a torrent of blue laser bolts. The third had already pulled itself inside the Pulse Cannons' firing arcs and a couple of seconds later, it clamped onto the hull.\n\n\"Oh, fuck me!\" Dana exclaimed, paling at the thought of being boarded by Drakkar again. She leaned over her console in a panic and blurted out, \"They're on Deck Three! Outside the Simulator Room!\"\n\nTurning to look at the crew, Calara said curtly, \"We need to repel boarders! Dana, you're in no shape to fight. Try and get in contact with John or Sakura and find out what's happening on the Legacy. Jade, stay up here and keep us away from any more trouble. Tashana and Irillith, you're with me!\"\n\nIrillith had been using a Drakkar Battleship's Beam Lasers to fire on its own dropships, but she shook herself out of her hacking trance and back to full awareness on the Invictus' Bridge. Rising from her seat, she reached for the grip of her Punisher rifle with her right hand, while holding up her left hand to stop Calara as she started for the ramp. \"Let me and Tashana handle the boarders.\"\n\nThe Latina turned to look at her in surprise. \"We haven't got time for this, we need to move now!\"\n\n\"You can still make a big difference to the battle by manning the Invictus' guns and saving the Ashanath from being boarded. Faye's good, but she can't match your shooting,\" Irillith said earnestly. \n\nCalara shook her head, protesting, \"You two can't face them alone! There must be about twenty in that dropship!\"\n\nThe Maliri girl started up the ramp, saying over her shoulder, \"Leave the invaders to us. We'll have Faye helping on the Sonic Cannons.\"\n\nTashana patted Calara on the shoulder as she rushed past on her way up the ramp, falling into step beside her sister. They entered the grav-tube up to the bedroom at the same time and were whisked up to Deck Two in a couple of seconds. When they walked out, Tashana darted a nervous look at her twin as she said quietly, \"It might have been sensible to bring Calara along. Drakkar have a reputation for ferocity and we're going to be massively outnumbered.\"\n\nIrillith turned to look at her as they jogged along the corridor, her eyes glowing with an eerie violet radiance. The light shining from her right eye flickered as she winked at her twin.\n\n***\n\nSakura's booted feet barely touched the ground as she practically flew down the Legacy's silver tunnels. She didn't even react as she sprinted full tilt into the older section of the ancient Progenitor vessel, not having time to waste with such trivialities as being afraid. Her own reserves of energy were nearly tapped out and she knew she had to reach her friends before she exhausted it all. \n\nShe didn't need to rely on the map now; in her heightened state, the cable of light linking her to Alyssa guided her in. Moving like a heat-seeking missile, she powered through the corridors, drawing ever closer to her target. The doors to the room ahead of her were wide open and she stormed inside without hesitation, charging into a room filled with massive old machinery. Her path led straight through the huge obstacles that were blocking the way, so she kicked off the ground, using thrusters from her Paragon armour to launch herself through the air. \n\nHer speed had done its job getting her there in time, but she deactivated it now, needing the last of her energy for the fight to come. A terrifying crack announced her presence to everyone in the room, as her swords were sheathed in a swirl of ice crystals. She held the twin swords fully extended ahead of her, diving through the air as she descended on the group of Drakkar who were looking around in confusion.",
        "The Drakkar looming over Rachel had no time to react as Sakura's ninjato punched through its torso, skewering both hearts with her frost-coated blades. She let her momentum carry her with him as he toppled over backwards and when she pulled her swords free, his brittle, frozen armour shattered with that effortless withdrawal. \n\nRolling forward, she kicked off from his chest and plunged the twin ninjato through the foreheads of the Drakkar's two closest companions. Their faces froze in horror, dying in an instant from a truly lethal case of brain freeze. \n\nThe rest of the Drakkar backed away from her now, terror in their eyes as Sakura twisted her blades free with a splintering crack. There was a chilling intensity in her answering smile - cold, dispassionate justice dispensed to the guilty. Her ninjato twirled in her hands, leaving white trails in the air as she advanced on them, promising a frozen death to any who dared oppose her. \n\nUnwilling to face this pitiless killing machine, the Drakkar fled for their lives, some even dropping their weapons in their haste to flee.\n\nSakura stopped her pursuit and watched them rout, then spinning around, she hurried back to her fallen companions. She skidded to her knees beside Rachel, panic on her face as she saw the blood over her right shoulder and the mangled, blood-soaked state of her helmet.\n\n\"Rachel!\" she cried out in alarm, gently turning her bloodied helmet to check on her. \n\nThe brunette gave her a wan smile and muttered, \"Shattered clavicle... John's going to have his work cut out healing me.\" She saw Sakura's worried eyes fixated on the right side of her head and added reassuringly, \"The second round smashed the helmet but deflected and didn't penetrate... I'm alright.\"\n\nSitting back on her haunches, Sakura breathed a sigh of relief and said, \"Thank God you're okay.\"\n\nRachel tried to sit up but failed despite a gallant effort. Sakura gently lifted her and the brunette fell into a hug with the Asian girl. Her voice throbbed with emotion as she whispered, \"I was so scared. Thank you for coming for me...\"\n\nBeing careful not to jostle her wounded shoulder, Sakura murmured quietly, \"You're my friend. You saved my life, I saved yours - it's just what we do.\"\n\n***\n\nFaye had already prepared the defences by the time the Maliri twins arrived. The security doors were down, the fortified cover raised, and the turreted Sonic Cannons were deployed and pointing down the Deck Three corridor. One of her avatars was waiting for them, nervously raising herself up on tiptoe as she peered towards the reinforced door that now blocked the passageway.\n\n\"Oh, thank goodness you're here!\" she gasped, turning around to face them, having tracked the sisters approach in the security cameras.\n\nIrillith squatted down on the left of the hall, with Tashana copying her and dropping behind the right barricade. \"Are they through yet?\" Irillith asked, checking the status of her railgun.\n\nShaking her head, Faye replied, \"Not yet, but you'll hear the breaching charges when they-\"\n\nA thunderous retort boomed from just ahead of them, making the floor vibrate with the impact. The tremor that raced through Tashana was not from the explosion, but from fear, and she tightened her grip on her pistols. Faye's giggle made her glance at the purple girl in surprise and she wondered what the AI could have possibly found amusing about the situation.\n\n\"I'm sorry,\" the purple sprite apologised. She looked from one confused Maliri to another and explained, \"Their breaching charge didn't penetrate the hull! The Invictus' armour was too strong!\"\n\n\"Did the blast take out the dropship?\" Tashana asked, with a delighted grin on her face.\n\nIrillith shook her head before the sprite could reply, saying, \"It's a shaped charge, designed to punch through a hull. They'll still be there I'm afraid.\"\n\nThey had to wait another thirty seconds before there was a second explosion and this time Faye's worried frown warned them that the Drakkar had blown through the armour. \n\n\"That's my cue,\" Irillith said with a wicked grin of anticipation. \n\nHer glowing eyes flared brighter and she peeled her astral form away from her body, so that she was standing before them. She wasted no time in running away down the corridor, her shimmering electric-blue figure passing straight through the bulkhead without pause. The door was sealed to the simulator room, but that was no obstacle to her ethereal presence, so she swept through it and almost ran headlong into the Drakkar.\n\nThe creatures gaped at her for a moment before they raised their evil-looking rifles, opening fire at her spectral form. Purple rounds zipped through her body, leaving faint trails in the air as they went on to hit the steel door, blasting huge holes through it. The black-armoured monsters ceased firing to stare at her in dumb incomprehension, wondering how she seemed to be able to completely ignore their purple bolts.\n\nIrillith gave them a terrible smile as she raised her hands, deadly lightning dancing around her slender fingertips. Rather than just pouncing on the closest one and frying him in his armour, she splayed her fingers wide, then sent a crackling field of electricity towards them all. She shrouded the entire group in the sparking cloud, blue zephyrs arcing up their multitude of limbs. The Drakkar swatted at them fearfully, then shrank away from her as she strode through the group towards the back of the room. They tracked her with their guns, wondering what she was going to do next. \n\nThat was when the door behind them opened and the shooting began. \n\nIrillith's electrical cloud had shorted out the Drakkar's protective energy shield, leaving them horribly vulnerable to the penetrating power of the Punisher weapons. The twins aimed for headshots, firing single, well-aimed shots and dropping three in the first second. When the twenty-millimetre slugs hit the back of the Drakkar's helmets, their heads simply exploded, the armour unable to prevent the massive stopping power of those hyper-accelerated rounds.\n\nIt took a couple of seconds for the Drakkar to react to that initial assault, during which time, over half their number were already dead. As they whirled around, there was a dull whumping noise and the biggest Drakkar in the middle of the pack was hit by a grenade, fired from the integral grenade launcher in Irillith's Punisher rifle. The explosion instantly killed him and shredded the two Drakkar standing beside him, while knocking the rest sprawling with the force unleashed by that detonation. \n\nThe flurry of railgun and pistol shots resumed after a momentary pause, slaying the rest of the writhing marines with single, precise shots to the head. The massacre had taken less than twenty seconds and when the twins ceased firing, there were twenty-two dead Drakkar lying headless on the ground.\n\nFaye popped into existence in a purple flash, then quickly looked around for any signs of life. Her look of relief told the sisters everything they needed to know.\n\nTashana lowered her pistols, the barrels shimmering as the heatsinks vented the excess heat to cool them again. She stared at the carnage in the room beyond, her eyes widening at the brutal slaughter they had unleashed on the Drakkar. Something nagged at her about this fight and it wasn't just the raw carnage - she felt a pang of regret when she looked at the dead aliens.\n\n\"Are you alright?\" Irillith asked, putting her arm around her sister's shoulders.\n\n\"We're just like the Maliri Thralls in all those images I discovered,\" Tashana said quietly, looking down at the weapons in her hands.\n\nIrillith hugged her sister and shook her head, saying, \"We're not part of some tyrannical conquest, we were protecting the weak against invaders. We aren't mindless Thralls, John's made us so much more than that.\"\n\nTashana turned to look at her sister, studying the violet radiance beaming from her eyes with awe. She found herself in complete agreement with her twin.\n\n***\n\nLeader Linnaeus had watched aghast as Alyssa had suddenly cried out in torment, then vanished from the command web. The Ashanath Captains in the sub-plane were shocked at the abrupt loss of the wondrous astral goddess in their midst, leaving them leaderless once more. Combined with the sudden terrifying appearance of the swarm of Drakkar dropships, chaos reigned amongst the Ashanath now, their morale broken.\n\nHe trembled in fear, watching as Drakkar dropships seemed to appear from everywhere on the Tactical Map. They poured out from the wrecks of cruisers and battleships, or launched from those vessels still in the fight, surrounding his battered ship from all sides.\n\n*Which way should we go, Linnaeus?!* Navigator Cadimus asked in a panic, seeing dropships in every direction.\n\n*Link up with the other cruisers, but watch out for that battleship!* Linnaeus ordered, still very much aware of the huge Drakkar capital ship that lurked just on the other side of the wreck they were using as cover.\n\nCadimus spun their silver disc-shaped cruiser around and flew towards the nearest two Ashanath cruisers, while being very careful about not exposing them to fire from the battleship. However, the fourth cruiser was not as cautious as it fled from cover, dashing to rejoin the other two cruisers in its group. \n\nThe Drakkar battleship turned ominously, scores of retro-thrusters firing on full thrust to rotate the massive vessel. As soon as the fire arcs for its forward beam array overlapped the fleeing Ashanath ship, it was lashed by over a score of purple beams. They vaporised the shields, overloading them in a split-second before lancing through the ship, blasting big holes through its hull. The Power relays were incinerated by those glowing streaks of energy and the perforated hulk lost all power, veering away until it slammed into another wreck in a shower of debris.\n\nTactical Officer Pallari fired away at the pursuing dropships, but they were small targets and hard to hit with the point defence grid. Even when the shots hit home and knocked out the shields, the black-armoured dropships shrugged off most of the laser fire, rushing on undaunted. There were five chasing after them and Linnaeus knew that if even one were to successfully breach their hull, his entire crew would end up eaten alive!\n\nThey neared the other two cruisers, but their situation was just as perilous, with incoming dropships approaching from all sides. Linnaeus felt despair threaten to overwhelm him as the Drakkar swarmed towards them, unstoppable in their reflective black-armoured ships. The cruiser trembled as it was speared by a docking harpoon and he knew they were only minutes away from being devoured.\n\nJust when he thought all hope was lost, an incandescent white blast lit up the Tactical Map with a brilliant surge of light, making him turn away as his eyes recovered from the flare. The Nova Lance beam heralded the return of the Invictus and the white battlecruiser clinically eviscerated the battleship that the Ashanath had been slowly whittling down. \n\nNo sooner had the light from that blazing column of destructive power faded, then the map was crisscrossed by bright blue Beam Laser fire. The beams swept around the three surviving Ashanath cruisers, in what Linnaeus would have normally categorised as wildly reckless shooting. However, when the lights on the map dimmed, the silver discs hadn't been so much as touched. The same could not be said for the Drakkar however. The black dropships were just gone - instantly annihilated by the devastating power of the Invictus' beams.\n\nWhen Linnaeus glanced at the Tactical Map again, the Ashanath cruisers were sitting alone in a torrid sea of debris, every Drakkar ship within Beam Laser range had been blown away. He watched the white-hulled vessel sweep on through the battlefield, bring terrible ruin to the surviving Drakkar forces. \n\nSlumping back in his seat, he thanked the maker for JohnBlake and his crew, overwhelmingly glad that he helped save them from Drakkar raiders only a few months ago.\n\n***\n\nVekrok let out a howling battle cry, then charged towards John, covering the thirty-metre gap in a surprisingly short time. Hyper-aggressive and ferocious, the Drakkar Grand Overlord launched straight into a blistering assault, stabbing out with both swords, intent on skewering him where he stood. John leapt to one side, narrowly avoiding being impaled by the terrifying black blades, each one of the crackling weapons as long as his crystal Alyssium sword. \n\nVekrok skidded to a halt then rounded on his opponent, both maces swinging for John's head, their flanged tops crackling with energy. John narrowly sidestepped one, then hurriedly parried the second mace with his sword, but the Drakkar was incredibly strong and John's eyes widened as he struggled to meet the strike from the mace. The tip of his sword wavered as their weapons clashed and Vekrok grinned as he easily overpowered him. John barely avoided tripping over one of the bodyguards as he was forced to skitter backwards, the elite soldiers just starting to wake from the psychic slumber that the High Council had induced in them.\n\nThe hulking Drakkar laughed dismissively, maces pulled back and at the ready, while his swords twirled around in flashy figure-of-eight pattern. \"Scared, little Terran?\" he sneered mockingly. \"You should be! I'm Grand Overlord Vekrok, the fiercest and strongest of all the Drakkar! I've slain hundreds of far mightier opponents than you!\"\n\n\"You talk a good game, I'll give you that,\" John said defiantly, but there was a tremor of uncertainty in his voice.\n\nThe massive Drakkar lunged forward and slashed with his swords, forcing John to hurriedly block one blow after another with desperate two-handed parries. The ringing clash of the blades pealed around the room and John staggered backwards with the force of each blow.\n\nChuckling to himself, Vekrok goaded his opponent, grunting, \"So puny and foolish. What madness possessed you to challenge me to a fight?!\"\n\n\"You'll find I'm full of surprises!\" John retorted, but his bold words rang hollow. \n\nHe stabbed forward clumsily and Vekrok swiped down with a mace, effortlessly blocking the attack. His second mace swung for John's head, forcing him to duck beneath the blow then scamper backwards, the wicked slashes from the Drakkar's huge swords missing him by inches. Vekrok grinned mockingly, his fang-filled maw a terrifying sight.\n\nThe Drakkar bodyguards had quickly backed out of the way to make room for the combatants and they cheered on their boss, braying and hooting with laughter. Vekrok took lazy swings at John, making him dart around, dodging frantically for his life to the amusement of the crowd. The colossal Drakkar raised all four arms in the air, letting out a thunderous roar as he showboated for his retinue. \n\nThe Ashanath cowered in the corner of the big room, temporarily forgotten by the malevolent crowd in their lust for battle. The diminutive aliens watched with fearful eyes, knowing that their fate rested on this hopelessly one-sided duel.\n\nJohn was forced back again and again by thrusts from swords or mighty overhead blows from the maces. He was panting now, tiring with the exertion, his sword looking heavy in his hands and the tip drooping under the strain. By contrast, Vekrok seemed tireless and full of energy and they could both tell that the end of the battle was fast approaching.\n\n\"Watching you dance around all day is tiresome, pathetic Terran,\" Vekrok sneered. His face twisted into a dreadful grin of anticipation as he licked his slavering jaws. \"Perhaps you'll taste better than you fight. It's time to end this laughable duel.\"\n\nThe Drakkar leader let loose a ferocious roar then rushed forward, stabbing out with both swords to gut his exhausted opponent.\n\nJohn smoothly sidestepped the reckless thrust, his sparkling white blade whipping upwards and shearing straight through Vekrok's overextended right wrist. Black sword and dismembered fist sailed through the air with the force of that blow, before landing with a heavy clang in the now deathly silent room.\n\nVekrok staggered backwards in shock, staring at the bloodied stump of his lower right forearm in horror. \"What the fuck?!\" he snorted indignantly, his face grimacing with the shooting pain. \n\nDropping his facade, John stood straight and tall, calm and confident as he watched his reeling opponent. He glanced down at the blood blue dripping from the tip of his sword, then met Vekrok's stunned gaze. \"I agree, it IS time to finish this.\" \n\nHe glided towards the injured behemoth, sword held in a relaxed two-handed grip. Vekrok loosed a defiant, blood-curdling roar, then brought his maces down in a dual-overhead smash, while jabbing forward with his remaining sword. John dodged to the left to avoid the black blade, his sword sweeping up high to block both mace blows with a booming crash. The titanic force behind the strength of that parry smashed the Drakkar's arms backwards, leaving Vekrok's hands feeling numb. He gaped in shock as John whipped his sword down in a white arc, neatly severing another black-armoured fist.\n\nIt was the Drakkar's turn to scramble backwards now, howling with the pain. His maces waved around frantically in an attempt to protect himself, his bloodied stumps spurting blood all over the floor.\n\n\"If I'd had enough energy for psychic speed, I wouldn't have bothered with the theatrics,\" John said conversationally as he strolled forward. He smiled at the Drakkar as he confided in him, \"I had a bad experience with another Drakkar swordsman. I didn't want to underestimate you, so I spent the last five minutes studying your fighting style.\"\n\nHe took a couple of quick steps forward, lunging with the tip of his blade. When Vekrok attempted to parry, John swept past him, the sword strike just a feint. With Vekrok's mace arm blocking awkwardly in front of him, John was able to slash upwards with his blade, hacking through the bicep of the monstrous creature's upper right arm. The mace and limb arced through the air, narrowly avoiding hitting one of the aghast Drakkar henchmen in the face.\n\n\"No one fights like this!\" Vekrok balked incredulously, while staggering backwards. He took a wild swipe with his last mace, but John smacked it aside with a languid sweep of his blade. \n\n\"You see, there's a fair amount of predictability in the way you fight. You favour lunges with your swords and overhead blows with your maces,\" John explained, before glancing at the scattered limbs. He gave the Drakkar Overlord an apologetic smile and added, \"Or at least, you did.\"\n\nVekrok let out a strangled cry of disbelief as his three drastically-shortened arms flailed about impotently. \"You aren't a Terran! What the fuck are you?!\" he snorted, bulging eyes wide with terror.\n\n\"I'm a Progenitor,\" John said quietly, his eyes narrowing as he glanced at Ularean's crumpled form. \"The Ashanath are my allies and I'm not happy you attacked them.\"\n\nHe stalked forward, white blade at the ready once more. Vekrok could see his doom fast approaching and he charged forward in one last desperate attack. John moved swiftly to reposition himself, darting to the left on the Drakkar Overlord's exposed flank. He easily avoided the mace as it clanged into the floor, then he drove his sword point-first through Vekrok's helmet, skewering the monstrous alien's brain. He tore the blade free in a shower of blue ichor, then sidestepped as Vekrok toppled over, crashing to the ground with a mighty boom.\n\nThe Drakkar bodyguards in the room stared at John with terrified eyes, backing away from him as they made to flee from the room.\n\nJohn turned to look at them, sword tip pointing in their direction as he said sternly, \"Surrender now, or I'll slaughter every last one of you.\"",
        "The creatures froze, paralysed with fear, but quickly did as he asked, dropping rifles and shields as they placed their four hands on their armoured heads.\n\nStriding across the room to the Ashanath High Council, John crouched down next to Ularean. There was a ragged wound across the Senior Councillor's thin abdomen and his white robes were soaked with blood. Ularean's grey face had a very unhealthy pallor to it and John didn't need to be a doctor to realise the Ashanath leader needed urgent medical assistance.\n\n\"JohnBlake... you saved us...\" Ularean managed to whisper, huge black eyes staring up at him.\n\nJohn smiled at the critically wounded Grey and replied, \"Of course, your people are my allies, Ularean.\" He glanced at the nasty wound, and added, \"Let's get you patched up, then we really need to have a chat.\"\n\nUlarean's laughter was thin and warbling as he replied, \"Yes, we have a lot to talk about...\"\n\n***\n\n\"Get us the fuck out of here!\" Warboss Magaruk roared at his helmsman, shaking the terrified Drakkar crewman in his desperation. \n\nHe flung him towards the console as there was another blast in the Bridge, the Engineer's Console exploding in a shower of sparks and frying the Drakkar at the station. A smell like cooked Tirrac eggs filled the Bridge and Magaruk wrinkled his nose in disgust. He'd always hated eggs!\n\nHe counted only eight cruisers fleeing for the Nav Beacon, with his ship the only one equipped with the Dark One's armour. While his cruiser might have been clad in that special reflective plating, that didn't mean they were invulnerable to laser fire. The pitiful remnants of the once unstoppable Drakkar fleet fled from the calamitous battle, relentlessly pursued by swift Ashanath destroyers. \n\nWhile having all his cruiser's weapons front-facing was a great idea when on the attack, it was a terribly bad idea when trying to run away. The smaller ships were able to hammer them remorselessly with laser cannon fire and with most of his cruiser's capacitors blown out, those shots were causing a distressing amount of damage. \n\nStill, they were faring better than some of the Drakkar captains in regular armour and he watched one of the other cruiser's engines explode under that hail of destroyer fire, slowing them down dramatically. More of the Ashanath destroyers caught up with it now and began to pepper the straggling ship with laser cannon blasts. Magaruk laughed at their misfortune, glad of the distraction for the vengeful Ashanath destroyers. As the old saying went, you didn't need to be fast enough to outrun a rampaging Brutasaur, you just needed to outrun your friends.\n\nEyes glinting evilly, he stomped over to his Tactical Officer and thumped a heavy fist down on his console to get his attention. He would have smacked him around the head, but a concussion might have upset his aim. \n\n\"Shoot that cruiser!\" he snarled, pointing at another Drakkar ship that was ahead of them on the port flank, just inside beam laser range. Its shields were out, but other than that, it was largely unscathed and wasn't far from escape.\n\n\"You want me to fire on our own side, when we're running for our lives?!\" the Tactical Officer balked incredulously, fearing that his boss had lost his mind.\n\nMagaruk's eyes narrowed in anger, his hands clenching into fists. \"Shoot out its engines...\" he muttered, showing an impressive amount of restraint in stopping himself from throttling the imbecile. That would have to wait until later.\n\nHe saw the light of understanding appear in his gunner's eyes, his jaw snapping up and down in laughter. A few seconds later, he opened fire with their port Beam Lasers, the shot slicing through the cruiser's two starboard engines and dramatically slowing its speed.\n\nWhirling around, Magaruk yelled at his Navigator, \"Hard to starboard and get out of range of that cruiser, just in case they try and shoot back! Then bolt for the beacon!\"\n\nThe Navigator did as he was ordered, swinging the nose of the angular black cruiser around to the right and away from the badly crippled cruiser. Magaruk watched it limping on towards the Nav Beacon, so close to escape. The Ashanath realised it too and he cackled with glee as the destroyers peeled off his tail to descend on the hamstrung cruiser. The Greys knew as well as he did, that their shots would have a much greater chance of stopping the steel-hulled ship from escaping.\n\nHis surviving Bridge Crew cheered in triumph, their four arms waving madly in celebration as they veered away from the Ashanath forces, now free to make their escape. Magaruk gave them a fang-filled grin, relishing the feeling of relief that they'd be able to survive this massacre and live to feast on Ashanath flesh another day.\n\nThat was when his world turned upside down - literally, in this case. There was a deafening crash as his cruiser collided into something out there in the blackness of space. Magaruk sailed through the air with the impact, slamming into the front wall of the Bridge and bouncing back to collapse on the floor in a stunned heap. It took a long moment for the room to stop spinning, but when it did, he wondered why he was in so much pain and why he couldn't move his legs. \n\nWhen he looked down with groggy eyes, he saw that a support beam had collapsed across him, crushing his legs under its immense weight. He pushed at it feebly with his four arms, but it was far too heavy for him to move alone. Doing his best to block out the pain, he twisted around to look for help, but the rest of the Bridge Crew hadn't fared any better in the impact. His Helmsman had been skewered through the chest when he fell on a broken cabling pipe sticking through the wall and his Tactical Officer had snapped his neck when he was violently thrown across the room in the crash.\n\nMagaruk's attention was drawn by the flicker of the Tactical Map as it blinked on and off intermittently. Highlighted on the map were a squadron of Ashanath destroyers, eagerly racing towards his battered ship. \n\n\"No!\" he roared in horror. \"I was so close!\"\n\nHe stared at the map in disbelief, wondering what they could have possibly crashed into.\n\n***\n\nIn a sinister onyx chamber lit by dark-red lights, a black-cowled figure stared at an intricate Tactical Map, showing detailed technical readouts of every vessel in the system. He chuckled as he watched John Blake's gaudy white ship gallivanting about, mopping up the last of the Drakkar forces. It took another five minutes to eliminate the last of the Drakkar, leaving the Invictus and the tattered remains of the Ashanath forces triumphant on that blood-soaked battlefield. \n\nMaking a sweeping gesture with his hand, he replaced the Tactical Map with an incredibly detailed overlay of this sector of the galaxy. The various half-baked \"Empires\" were highlighted in a variety of colours, with the major players depicted by three-dimensional pieces. His hand moved back across the map from left to right, ignoring the Enshunu and the Maliri, before pausing above a representation of the Drakkar. \n\nHe flicked the unspeakably hideous four-armed warrior with a finger and it toppled over with a crash, the note ringing with an air of finality, before the piece faded from view. Next, his fingers moved over the image of an unbearably ugly, bulbous-headed Ashanath and he flicked that over too. The thin alien tipped over on the board with a similarly final-sounding thump, before disappearing from sight. His incredulous laughter echoed around the gloomy chamber, light from the holographic map casting eerie shadows about the room. \n\n\"What IS he doing, Ailanthia?\" he asked his Matriarch, sounding quite bemused.\n\nAilanthia had been standing silently by his side and she turned to look at him in shock. In the thousands of years she had served her master, he had never once addressed her in such a way. Slave - of course, Matriarch - often, but never by her actual name. \n\n\"My Lord?\" she asked him tentatively, never having seen him act this way before.\n\nHe removed his black cowl, dropping it to his shoulders and revealing his handsome features. \"No matter,\" he replied, his lips quirking into a smile - another rarity. He appraised her for a moment with a discerning eye, before turning on his heel and striding for the door. He clicked his fingers as he did so, adding in an imperious tone, \"Come, Ailanthia, I feel like celebrating...\"\n\nHer angular eyes widened further and she scurried after him obediently. Other than her periodic feedings to maintain her youthful vigour, this was yet another startling first. What was going on? He'd never expressed that kind of interest in her before! Her heart skipped a beat at the prospect, a smile lighting up her beautiful light-green face. She had dreamed of this moment for eons and she was determined to make it one her master would remember forever. \n\nPractically walking on air, Ailanthia eagerly followed her master into his bedroom.\n\n***\n\nJohn strode into the generator room, eyes darting around as he looked for the three girls. \n\n\"Over here!\" Sakura called out to him, stepping out from around a huge piece of machinery. There were half-a-dozen Ashanath standing with them, watching proceedings with their unblinking black eyes.\n\nHe jogged over to join Sakura, giving her a warm smile as he approached. Alyssa was still unconscious on the floor, while Rachel was propped up against the ancient capacitor. She looked up at him and saw the expression on his face when he laid eyes on the nasty wound in her shoulder, coupled with the blood splattered all over the right side of her helmet.\n\n\"I'll be alright, it looks much worse than it is,\" she said, in a futile attempt to calm his fears.\n\nJohn wasn't so sure and he knelt beside the injured girl, reaching out to cup the side of her head. \"I'll heal you as fast as I can, but we need to get you out of here,\" he said with concern. Glancing up at Sakura, he added, \"Can you help Rachel? I'll take Alyssa.\"\n\n\"Of course,\" the Asian girl replied, crouching down beside the wounded brunette.\n\n\"I can walk, there's no need for that,\" Rachel objected, trying to get up on her own and grimacing with the effort.\n\nSakura smiled at her stubborn friend as she gently restrained her with a firm hand, ignoring the doctor's protests. \"I'll activate the emergency evacuation protocol in your armour and guide you out. Just rest, there's no need to exert yourself,\" she said kindly.\n\nRachel looked like she was going to say something but she changed her mind, shifting into a comfortable position and waiting as Sakura activated the Paragon's evacuation functionality. The body armour locked into place, keeping Rachel steady, then slowly rose from the ground. Sakura checked she was comfortable then nodded to John that they were ready. \n\nShe watched as he picked Alyssa up, effortlessly cradling her in his arms then asked him, \"Why not use the evacuation functionality on her armour?\"\n\n\"It's okay, I'd rather carry her,\" he replied, looking at the unconscious blonde with concern. Turning to the Ashanath he added, \"We're heading back to the High Council. You'll be safer there if you want to come with us.\"\n\n\"Thank you JohnBlake,\" one of the silver-garbed aliens replied. \"We greatly appreciate your offer of assistance.\"\n\nThe group set off across the room, heading back the way John had entered. The footing was treacherous, with the floor awash with blue blood and they picked their way around the mangled Drakkar corpses, their twisted bodies showing horrific injuries. John studied them as he walked by, eyebrows climbing as he saw the brutally smashed remains of a Drakkar battlesuit. The black carapace had been absolutely pulverised, looking more like a crumpled soda can than a formidable piece of body armour.\n\nHe glanced at Rachel and asked, \"I assume this was Alyssa's handiwork?\"\n\nRachel nodded, her gaze dropping to the blonde in his arms as she replied quietly, \"She's getting so much stronger. Until she was incapacitated, she was tearing them to pieces.\"\n\nHe paused for a second to study the devastation around them, the scattered limbs, the battered bodies... It looked like a vengeful god - or more specifically goddess - had unleashed her wrath on the Drakkar. Looking thoughtful he continued onwards through the door, leading them back towards Ularean.\n\nSakura walked alongside him, matching his pace and she glanced his way curiously. \"Why are we heading back to the High Council? Shouldn't we be evacuating the Legacy now, so Rachel can recover?\"\n\nJohn glanced at the brunette floating along beside Sakura and replied, \"Ularean's very badly hurt. I'm worried he's not going to make it without medical intervention and there are no medical staff with the High Council.\"\n\nSakura glanced at Rachel's ravaged shoulder and said dubiously, \"I'm not sure how much help she'll be in this state.\"\n\n\"I'll be okay,\" Rachel murmured, getting drowsy now that the adrenalin had worn off. The anaesthetic that Sakura had given her - with the young doctor's guidance - had helped numb the pain of her injury.\n\nChanging the subject, John met Sakura's brown-eyed gaze and said earnestly, \"Thank you so much for saving them both. I wouldn't have been able to make it in time and the High Council would have been slaughtered if I'd tried. I don't know what I'd have done if...\" His voice trailed away and he shuddered at the thought of losing either of the young women that meant so much to him.\n\nSakura blushed at the intensity of the look he gave her and replied, \"You never have to thank me for helping to protect the girls. I owe all of you too much for that.\"\n\nJohn smiled at her affectionately, and said, \"You don't owe us anything, but you really came through for me today.\" He studied her for a moment, then added, \"You and I need to talk when we're back on the ship. There's a few important things we need to discuss.\"\n\nShe returned his smile as she replied eagerly, \"Definitely! Thank you, by the way.\"\n\n\"You're very welcome,\" he replied, giving her a brief nod as their eyes met.\n\nThey walked in companionable silence for the next couple of minutes, sharing brief glances and smiles as they did so. John was following their progress on the overlay map and he could see they weren't far from the room where the Ashanath High Council had sought sanctuary. He looked down at the unconscious blonde is his arms, Alyssa showing no sign of rousing from her comatose state.\n\n\"Athena... Can you hear me?\" he called to the blonde, watching intently for any sign of a reaction.\n\nIt took several moments before her eyelids began to flutter and her eyes slowly opened. The white radiance behind those orbs was faint though, a pale shadow of the normal gleaming intensity.\n\n\"John..?\" she whispered, her voice sounding weak and very distant.\n\nHe breathed a sigh of relief, then asked urgently, \"Are you both alright?\"\n\nHer chin moved a few millimetres in a barely perceptible nod. \"We just need... rest.\"\n\nGlancing at Rachel with a worried frown, he faltered for a moment before asking Athena, \"I'm really sorry to ask this, I know you're weakened at the moment, I was wondering...\"\n\n\"Take what you need... we have plenty,\" Athena murmured, before her eyelids drooped and she fell asleep once more.\n\nJohn watched her for a little while, but she showed no signs of stirring. They finally reached the plundered doorframe where Vekrok had smashed his way into the High Council's sanctuary, the splintered remains of the jagged-edged doors lying broken on the deck. The surviving Drakkar had gone now, taken to the brig by the Ashanath soldiers who had been guarding the council. Their suits of body armour and sinister black weapons lay where they had removed them, piled up on the floor.\n\nOne of the white robed Ashanath glided across the room to meet John as he approached, greeting him with a bow. \"Thank goodness you have returned, JohnBlake. Ularean grows weaker by the moment,\" Councillor Talari said in his whispering voice. He turned to look at Sakura and continued, \"Is this Terran your doctor?\"\n\nJohn shook his head, hesitating for a second as he had no idea which of the council members this was. \"No, Councillor... The girl beside Sakura is our doctor. Her name's Rachel.\"\n\n\"But she appears grievously wounded,\" Talari replied, his voice modulator managing to convey his distress. He suddenly realised the reason behind John's hesitation and added, \"I apologise for not introducing myself. I am Councillor Talari.\"\n\nJohn gave him a rueful smile and said, \"I should be the one apologising. We'll talk in a moment, Talari.\" He turned to look at Sakura and continued, \"Could you help Rachel down, please. I need to attend to her.\"\n\nThe Asian girl immediately did as he asked, cautiously guiding Rachel down to the black surface of the floor. She was careful as she laid her down and deactivated the evacuation protocol on her Paragon suit, but the shift in position was still enough to awaken the brunette.\n\n\"Just give me a second to get my bearings,\" she said groggily, trying to sit up and fumbling for the medical pack on her waist. \"Where's Ularean?\"\n\nJohn knelt beside her, placing Alyssa down on the ground, then restrained Rachel with a gentle hand. \"Lie back and rest, honey. You can help Ularean in a minute, but I need to take care of you first.\"\n\n\"Sure,\" she agreed amiably, lying back onto the onyx surface. \"I've got a shattered clavicle and a-\"\n\n\"Shh, I know,\" John murmured, placing his right hand on her chest, while staring intently at Alyssa. Without taking his eyes from the blonde's face, he said to Rachel, \"This might feel a little strange...\"\n\nThe mental compartments in his mind still showed a white glow emanating from Rachel, the connection between him and her still active. She'd taken a terrible wound to her shoulder and the injury was illuminated in red, giving him all the information he needed to restore her body to perfection. He began to draw psychic energy from his sleeping matriarch, watching her face for even the slightest hint of distress. The flow began as a slight trickle as he experimented with pulling power from Alyssa, but he quickly ramped that up when she seemed unperturbed by his actions. He heard Rachel gasp, but didn't look her way, keeping his intense focus squarely on Alyssa. \n\n\"How remarkable,\" Talari murmured, watching as the torn tissue and bone in Rachel's shoulder began to regenerate, rebuilding her shattered body before his very eyes.\n\nJohn nodded but remained silent, using his psychic might to restore and rejuvenate the teenager's body. It took roughly ten seconds to finish healing her, and he threw a quick glance at Rachel to confirm she was alright. Her flawless bronzed skin was visible beneath the jagged rent in her Paragon armour and she gave him a lovely smile in gratitude, looking serene and happy.\n\nReturning her smile, he intensified the flow of eldritch power, massively ramping it up to ever greater orders of magnitude. His attention was back on Alyssa then, so he couldn't see Rachel's expression, but he could certainly hear her reaction.\n\n\"Oh my God!\" Rachel yelped, back arching as her body surged with energy. \n\nShe felt like her body was wrapped in soft cotton wool, but her nerve endings were suddenly so hyper-sensitive that the gentle tickling sensation was totally overpowering. The psychic energy rolled through her nervous system, making her body feel like it was coming to life for the first time. Her eyes rolled back in her head as she let out an ecstatic moan, quivering helplessly as she rode the crest of a climactic wave for what seemed like an eternity.\n\nRachel convulsed against John's hand, crying out as he applied his will to her body. He focused on enhancing her genetic code, his intent providing the framework for the powers he was gifting to her. This work was subtle and very different to anything he'd tried before. He felt some resistance, although it wasn't coming from Rachel but from deep within himself instead - almost as if this was forbidden knowledge that should never be shared. He ignored that perplexing sensation, driving ahead with his plans for her and providing very specific instructions to the third helix of her DNA. "
    ],
    "authorname": "Tefler",
    "tags": [
        "teenager",
        "cum inflation",
        "swallow",
        "deep throat",
        "group sex",
        "alien11111",
        "psychic",
        "ashanath",
        "drakkar",
        "bossfight"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-79"
}