{
    "title": "Tucker's Studio Ch. 08",
    "pages": [
        "I have a whole series of these stories written. They work pretty well as stand alone stories, all revolving around Tucker Sims and his porn studio, but some things will make more sense if you read them in the order they were posted. I hope you enjoy them. As usual, the people and places are fictional. All characters are over eighteen.\n\n \u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n The Silver Fox\n\n\n\nTucker had been wanting to add a gray haired pro to his stable of men for quite some time. Over the years he'd had a few amateur women request a 'daddy' type man, and unless the woman was barely legal none of the men he worked with fit the bill. Finding a seasoned pro who wanted to work in Tucker's wintry, down-on-its-luck city proved difficult, so he'd been keeping his eye out for a promising amateur to bring into the fold.\n\n At his favorite blues bar he'd noticed a quiet loner at a few of the shows. Tall and fit, with none of the paunch of a typical man in his fifties, his roughly cut gray hair and trim beard gave him the look of a college professor. It was clear to Tucker he was interested in women, but he seemed to be shy and only admired them from a distance. No wedding ring, a noticeable lump in his slightly tight jeans, a moderate, always under control drinking habit and an easy-going politeness were all plusses. Tucker decided to talk to him.\n\n \"Good show tonight, huh?\" Tucker said. \n\n The band was taking a break. The two men had a casual conversation about music as Tucker sized things up. Dave was the man's name, and Tucker liked him. A nice guy with a winning smile, Tucker was sure women would like him too.\n\n \"So this might sound nutty coming from someone you hardly know, but I'm in the porn business and I'm looking for a guy your age to do some work,\" Tucker said. He handed Dave his card.\n\n \"The porn business?\" Dave said, looking confused. \"I guy like me? I think maybe you had too much to drink tonight!\" he laughed.\n\n \"It's for real. I know it's gonna sound crazy until you think about it some, but after you mull it over tonight, if you're even a little bit interested, give me a call and come down and see the studio. I'd love to show you around. A lot of the people I work with started as amateurs. It's really fun work. You can probably imagine that, right? And the money's good. It'd just be a once in a while thing, a nice sideline for you to make some extra bucks.\"\n\n \"Wow. You're serious?\" Dave said, looking at the business card in his hand again. \"Right here in town you're makin' porn?\"\n\n \"Yup. Do me a favor and keep it under your hat. We like to keep things under the radar.\"\n\n \"Oh yeah, sure,\" Dave said. \"I'll tell you Tucker, I'm gonna say no, because it sounds like a crazy thing for me to do. I'm not really a show-off kind of person, plus it's just...\"\n\n \"Crazy? Yeah, I know. Everybody thinks that, but once they try it they like it. Like I said, the majority of our work is with amateurs, most of them women who just come in for a one-time thing. Most of them are super nervous, and ninety-nine percent of them leave saying they had the best time. But I'm not gonna pressure you man. Just think it over for a few days and give me a call. Even if you don't wanna do it stop down and I'll show you around.\"\n\n \"Yeah, thanks,\" Dave said. The band started their second set and Tucker wandered off into the crowd. Dave looked at the business card again, shook his head in disbelief, and put it in his pocket.\n\n \u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n Dave took another long look at the little white card when he got home. A nice gentle buzz from a few drinks and the good vibe from a good show made the whole idea seem almost realistic. He shook his head and tried to push the fantasy out of his head, but it was lodged in pretty good at that point.\n\n The next day he loaded up his truck with supplies for the house painting job he had. It was a big Victorian that would take him a month, working alone as he did. After getting a start on it that morning he sat in his truck while he ate his lunch. Two bites into his sandwich he called Tucker. Everything Tucker had talked about was way too intriguing, and his dialing finger was not to be denied.\n\n \"I'm wondering why you would want a guy my age?\" he asked, after the usual pleasantries.\n\n \"Some girls have daddy issues,\" Tucker said. \"I'm guessing most of the work for a guy your age will be with 'daughter age' women. There'll be some older women too of course, but I think most would be twenty years younger or more. Does that sound appealing?\"\n\n \"Ha!\" Dave laughed. \"If you're playin' me you're doin' an awesome job!\"\n\n \"No man, not at all. I'm a straight shooter. You'll find that out pretty quick,\" Tucker said. \"Just givin' you the facts so you can make up your mind. Does the daughter thing bother you? Do you have one?\"\n\n \"No, I've never been married. No kids.\"\n\n \"How old are you Dave? Fifty...\"\n\n \"Fifty-five.\"\n\n \"So I guess the daddy issue girls would be eighteen to thirty-five, or somethin' like that, right?\"\n\n \"I guess!\" Dave laughed. \"Why does this sound way to good to be true?\"\n\n \"We're in the fantasy business Dave. Why don't you come down and see the place. It'll help you with your thinking, won't it?\"\n\n \"Yeah, I guess so. I am kinda curious...\"\n\n \u2014\n\n Dave pressed the button on the intercom later that afternoon, still in his work clothes. Tucker buzzed him in. He walked down the hall, pausing to look at the awards in the glass case. Tucker came out of his office to greet him. \n\n \"Dave! Good to see you man!\" Tucker said. \"That was a hot band last night, huh? Fuckin' guitar player was on fire!\"\n\n \"Yeah, it was a good show,\" Dave said. He was thankful for the small talk to calm his nerves. \"I saw 'em at Bluesfest a few years ago. Great band.\"\n\n \"Oh, yeah, I was there. That was a good day. So, welcome to my little fantasy factory.\"\n\n \"I had no clue you were here doing this. I did a painting job next door last year.\"\n\n \"Oh yeah? I'll have to give you a call when I need somethin' like that. The place's in pretty good shape at the moment.\"\n\n \"Yeah, I'm impressed. I expected sleazy for some reason, but this is...nice!\"\n\n \"So let me show you the studio. Not much goin' on today. I'm doing some editing and one of the girls is here trying on some new wardrobe.\"\n\n \"Oh, okay,\" Dave said, excited he might get to meet one of the girls.\n\n They walked down the hall to the big open part of the old warehouse. Tucker switched on the overhead lights.\n\n \"We've got some permanent sets set up \u2014 a bedroom, a living room, a hotel room. We modify 'em often to keep things fresh. And then we've got these open sets where we mix and match, and set up other kinds of things.\n\n \"This is the men's dressing room,\" Tucker said as they walked in. \"I've got a stylist named Chip who's been with me forever. Great guy. He does the men's wardrobe, hair, makeup if it's needed. On the girls side I've got Marsha. She works at Hair Factory when she's not here. She's been with me for a long time too. Works miracles with women's hair, and she's great with the makeup and clothes too,\" Tucker said as they walked toward the women's dressing room. \"She's not here today, but Molly is. I don't know if you checked out the website yet. She goes by Donna Deeper on the site.\"\n\n Dave pictured what someone who called herself Donna Deeper would look like. Kind of ragged. Fake tits. Cocaine habit maybe.\n\n \"Molly, you decent?\" Tucker asked as he knocked on the dressing room door.\n\n \"I haven't been decent since I met you,\" she said, opening the door with a big, beautiful smile on her pretty face.\n\n Dave was shocked by her loveliness. And by her barely covered, beautifully natural body. \n\n \"Whaddya think about this ribbony stuff? I kinda like it,\" she said, looking down at her outfit.\n\n She twirled to show off the lingerie. A mix of white, black and pink. The pink was a garter belt made of satin ribbon, and there were pink and black ribbon accents laced through the little white bra and panties.\n\n \"Yeah, looks good. Festive, like for a special occasion,\" Tucker said. \"Molly, this is Dave. I'm tryin' to talk him into doin' some work with us.\"\n\n \"Hi Dave,\" Molly said, still smiling brightly. \"Boy, you're a tall one!\"\n\n \"Nice to meet you Molly.\"\n\n Dave couldn't think of much more to say. He'd never met a woman in lingerie before, and he was hard pressed to think of meeting another woman as naturally sexy as Molly. His mind was kind of blank, except for \u2014 damn those are some tits!\n\n \"So whaddya think Molly, ya think the girls'd like to have Dave around? I've been wanting a silver fox kind of guy for a while, for the girls with daddy stuff goin' on in their heads, you know?\"\n\n \"Oh I know,\" she smiled. \"Yeah, Dave, you'll love it here. It's really like a family. I don't know much about you, but I have a feeling you'll fit right in,\" she winked.\n\n \"Well, that's pretty much the tour Dave. It's a pretty simple business. I can show you the editing room if you like, and I can screen some videos for you in my office. Wanna join us Molly?\"\n\n \"Sure. Should I change first?\"\n\n \"I vote no,\" Tucker said.\n\n The three of them walked through the empty studio to the editing room, and on to Tucker's office.\n\n \"Beer Dave? You probably had a long day at work,\" Tucker said.\n\n \"Oh. Okay,\" Dave said, sounding a bit unsure of the situation.\n\n \"Have a seat you guys. I'll get some for us,\" Tucker said as he left.\n\n \"So you work construction?\" Molly asked as she sat down on the couch, her stocking covered legs and barely covered tits vying for Dave's attention.\n\n \"I'm a painter,\" Dave said.\n\n \"Oh that's good work. Everybody needs that, right?\" she said. \"Have a seat.\"\n\n She patted the couch next to her. Dave sat, giving her some space. He was a bit flummoxed by her. A porn star, but only eight or ten years younger than him, and way more 'girl next door' than he expected for someone who goes by the name Donna Deeper. She was kind of stunning actually, in a natural kind of way. Someone he would love to have met in a bar, although he knew he probably wouldn't have the nerve to talk to a woman as sexy as her.\n\n \"All right! Happy hour!\" Tucker said when he entered with a cooler filled with iced bottles of beer.\n\n He cracked open a few, turned down the lights and queued up some hot scenes on the big, wall-mounted TV. Dave was suddenly in fantasy land, drinking beer and watching porn with a barely clad porn star. Of course one of the clips featured Molly. Nothing that was happening was happening was by chance. Tucker had orchestrated the entire afternoon.\n\n \"That was hot!\" Molly said as she watched herself. \"I remember that night.\"\n\n Dave was slack-jawed at Molly's talents on screen. She was with Billy Carpenter, giving the young man all he could take, and then some.\n\n When they'd all finished their second beer the atmosphere in the dimly lit office was more relaxed. Molly had reclined languidly, her warm skin nearly touching Dave, and a lump had grown in his pants as the wicked hot scenes Tucker had chosen played out on the flat screen. Tucker knew it was time to try something. \n\n \"So here's what I'm thinking,\" Tucker said, breaking the horny spell. \"How about if we shoot a scene right now. Dave, you'll retain complete ownership, nobody'll ever see it but you. I'll draw up a quick contract right now to cover that. I'll run the cameras. There's nobody here, so it'll give you a chance to get your feet wet without the pressure of a full production.\"\n\n \"Good idea!\" Molly said, sliding her bare foot over to Dave's hip, and up onto his lump. \"Wanna play honey?\"\n\n Tucker cracked open another beer and handed it to Dave.\n\n \"It's up to you my man,\" he said.\n\n Dave's old heart pounded, and he felt like all the gray hairs on his head were tingling. Molly's little foot massaged his hardness through the tightly stretched white denim.\n\n \"You know you want too,\" she cooed with an irresistible smile.\n\n \"I've never done anything with anybody watching. I don't even know what it's like,\" he said.\n\n \"Oh, it's so fun! I was the same way when I started. I thought it was gonna be super scary, but it was nothing like that. There's only one way to find out though. Wanna fuck me honey?\"\n\n \"I'll be so wrapped up in the cameras I'll hardly be paying attention, if that helps,\" Tucker said.\n\n \"Nobody'll see it?\" Dave asked Tucker.\n\n \"Nope. I'll edit it myself and burn you a disc. It'll be all yours.\"\n\n \"Let's do it,\" Dave said.\n\n \"Oh goody! You're not old enough to be my father, but I love handsome gray-haired men,\" Molly said. \"Come with me.\"\n\n She got up off the couch, reached for Dave's hand and led him down the hall to the bedroom set.\n\n \"We're not waiting,\" she said to Tucker.\n\n \"That's fine. It'll take me a few minutes to get set up,\" he said.\n\n Tucker went to the gear closet for the cameras. When he returned Molly was already on her knees and Dave's paint splattered pants were down around his ankles. Tucker looked long enough to confirm his suspicions \u2014 Dave had a nice cock, and toned, muscular legs. So far so good.\n\n The nice blowjob continued while Tucker set up a second camera, switched on the photography lights and adjusted the overhead microphones. He wandered away to switch off the overhead studio lights, giving the little bedroom set the 'island in the darkness' feel that his amateurs seemed to like. When he got back Molly was on her feet and her big tits were out. She and Dave were in the middle of an open-mouthed wet kiss, his rough hands getting the feel of Molly's voluptuous softness while her hand stroked his cock.\n\n \"How do you find guys with big cocks?\" Molly asked Tucker when the hot kiss broke off. \"You got x-ray eyes or somethin'?\"\n\n Tucker chuckled. He was pleased with the look of it \u2014 circumcised, nice and chunky, just long enough. Molly lifted the white t-shirt over Dave's head and sat him down on the bed. She unlaced one of his work boots while he did the other, and she whisked the pants and socks off of him.\n\n Dave wasn't an experienced lover. Molly could sense it. She knew his head was filling with nervous thoughts, sitting there naked under the lights, so she stripped off her panties, pushed him down and straddled his head. Best to keep him busy, she thought, so he didn't have too much time to think. Molly's pussy in his face was the sweetest all-you-can-eat happy hour snack Dave had ever had. He lapped up her juicy goodness.\n\n \"Oh that's nice Davey!\" she sighed. \"Yeah baby. Eat me.\"\n\n She moaned and her hips swiveled like a sex Goddess, grinding her hot pussy against Dave's warm tongue.\n\n \"Fuck yeah, I like that mouth,\" she said as she pulled away. \"Don't move a muscle.\"\n\n She swung her leg over, turned herself around and remounted for a little sixty-nine action.\n\n Tucker sipped on his beer, pleased with how things were going. Dave looked terrific for a guy his age. He'd have to do a little manscaping down below if he wanted the job, but his chest was perfect \u2014 nicely muscled, with just enough gray hair to reinforce the 'silver fox' thing. Tucker snapped out of his critical thinking when Molly had a quick orgasm.\n\n \"Fuck!\" she said sharply. \n\n The staccato word echoed off the metal ceiling high overhead. Molly tensed up suddenly. Her body spasmed the way Tucker was used to seeing when things were going good. She only came hard and quick like that when she was really turned on. It was another good sign that made Tucker smile.\n\n Molly rewarded Dave with a few deep bobs of her head on his hard cock, taking him deep in her throat each time, getting him good and slippery.\n\n \"You wanna fuck me baby?\" she asked the wet cock, before plunging her head down on it again.\n\n Dave had been pretty silent, a result of his inexperience and nerves, but he moaned deeply when he felt himself in Molly's throat yet again. He knew he wouldn't last long in her pussy, and Tucker would rescind his offer of work, but what the hell, you only live once and he was going out in a blaze of quickly ejaculating glory.\n\n With cat-like movements Molly was on her knees next to him, her back deeply arched, ass in the air.\n\n \"Put it in me baby,\" she sighed.\n\n Dave's eyes were closed when he sunk into her velvety heat. It was as deeply sexual a feeling as he'd ever experienced. His whole body was pulsing with energy. He opened his eyes and looked at the hottest ass he'd ever had his hands on, and watched his cock slither in and out of Molly's pussy. It was too much. Way too much. He came with a grunting shudder.\n\n \"Sorry,\" he said, looking upset. \"I should have...I should have pulled out.\"\n\n \"That's okay honey,\" Molly cooed. \"I liked it. You felt so good.\"\n\n She turned around and took his cock in her mouth, but he was shriveling fast, even smaller than his normal size. He was as soft as a cooked noodle.\n\n Molly got up on her knees and kissed him. A nice long kiss. She reached for his cock again but it was as limp as limp can be.\n\n \"It's all right honey,\" she whispered in his ear. \"I know it's nervous here.\"\n\n \"Let me grab you guys a beer and we'll take a little break,\" Tucker said.\n\n When he got back with three cold bottles Dave was sitting on the bed with his boxer shorts on, looking a little overwhelmed.\n\n \"Good start man,\" Tucker said. \"Editing works wonders. We'll do some more and it'll look great. Most guys have a hard time gettin' used to this.\"\n\n \"Really?\" Dave asked.\n\n \"Oh fuck yeah,\" Tucker said. \"It's not exactly normal is it?\"\n\n \"No. It's not,\" Dave said.\n\n He took a long swig of cold beer and looked a bit more relaxed. Molly had a sip and leaned gently against him.\n\n \"You got a girlfriend Davey?\" she asked.\n\n \"No, not really. Not for a while.\"\n\n \"That's most of the problem right there,\" Molly said. \"When you fuck a lot you get better at it. How about if I...help you. We could practice some stuff, if you got some free time and want too.\"\n\n Tucker was intrigued. Molly was going off script, offering something they hadn't discussed. Dave was silent. His eyes gave away his bewilderment. Was Molly really asking what he thought she was?\n\n \"That's an awesome idea,\" Tucker said. \"Dave, are you interested in this work? Because if you are, that's an offer that's too good to pass up.\"\n\n \"Yeah, maybe. I mean I'm, uh, intrigued by it, I guess you could say. I'm pretty sure I suck at it but...\"\n\n \"You don't suck honey,\" Molly said. \"You made me cum better than a lot of guys. And it's not all about that anyway. You got a nice hot older guy vibe. That's half the battle right there. Gettin' the nerves outta ya we can work on, and boner pills work wonders. Even the younger guys use 'em.\"\n\n \"Really?\" Dave asked.\n\n \"Oh fuck yeah,\" she said. \"Don't worry about that. If you're interested we can get together every night for a while and work on things.\"\n\n \"Work on things?\" Dave smiled.\n\n \"Yeah,\" Molly smiled. \"Porn star 101. Wanna take the class? I always wanted to be a teacher.\"\n\n \"I'd be crazy to say no,\" Dave said.\n\n \"You gotta take the job here though. I'm not doin' it out the goodness of my heart ya know,\" Molly smiled.\n\n \"Deal,\" Dave said. \"I don't know what I'm gonna tell my friends and family, but I'll give it a shot.\"\n\n \"Oh goody!\" Molly said.\n\n She kissed him and slipped her hand under the waistband of his boxers. His slightly chubby cock swelled again. Tucker took the beer bottles from them and stepped back into the shadows behind the cameras. Molly climbed onto Dave's lap and thrust her big tits in his face. His hands held her ass, long fingers tickling her pussy. He was hard in no time. Molly reached under, pulled the cock out of the loose leg of his shorts and guided him into her steaming hot pussy. She rode him at a nice tempo while Dave sucked on her bouncing tits.\n\n \"Oh yeah. God you feel good,\" Molly said as she rode. \"You like my pussy baby? You wanna fuck my pussy like a porn star? Huh baby?\" she asked breathlessly. \"Wanna be a porn star?\"",
        "Dave could only grunt his answer. He started fucking upward into Molly and she squealed with delight. He had just enough stamina to make her cum again. Tucker smiled.\n\n \u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n A week later Dave was back at the studio to shoot another test scene. Molly was there too, for moral support.\n\n \"So how'd you guys make out?\" Tucker asked. \"Was Porn Star 101 a fun class?\"\n\n \"So fun!\" Molly smiled. \"We broke his bed!\"\n\n \"Whoa! Nice!\" Tucker said. \"Whaddya think Dave, you ready to try a scene with the full crew today?\"\n\n \"Yeah, ready as I'll ever be I guess. Still plenty nervous though.\"\n\n \"I didn't wanna just toss you in with an amateur right of the bat, so I brought in Sparkle,\" Tucker said. \"She's in with Marsha gettin' ready. I talked to her about what we're workin' towards today, so she's not gonna be her usual hot porn star self. She's gonna reign it in and try and act as much like an amateur as she can. So I want you to take control of things Dave. Did you guys work on that kind of thing at all?\"\n\n \"Yeah, we did,\" Dave said.\n\n \"The first few days I showed him stuff,\" Molly said, \"and then I spent the last three days being shy and inexperienced, and let him take over.\"\n\n \"Great. Sounds like fun,\" Tucker said. \"So Dave, I don't expect miracles here. I know you're new and nervous about everything. That's cool. This session's all about building confidence. I thought we'd throw in a little acting too, just to get you used to that kind of thing. It's usually just a little thing at the beginning to set up the scene. Don't worry about it though. Nobody expects you to win an Oscar for this kinda shit.\"\n\n \"I did some theater in high school,\" Dave said. \"I don't know if that'll help.\"\n\n \"No shit? Yeah, that's great,\" Tucker said. \"But again, don't get too twisted up about any of this. I think you'll be great once you get used to our little world here. Let me take you in to meet Chip. He'll get you fixed up and ready.\"\n\n Molly chatted with Tucker in his office while Marsha and Chip finished up the hair, makeup and wardrobe. When everybody was ready they all converged on the hotel room set, and Tucker introduced Dave to everybody.\n\n \"Dave, this is Sparkle. She'll be doing the scene with you today. She's been with me for a few years now.\"\n\n \"Hi Dave. It's great to meet you,\" she said.\n\n Dave's heart skipped a beat, and then another. Sparkle was radiant. A blonde beauty in her late twenties, she surprised Dave the same way Molly had \u2014 she didn't look like a stereotypical porn star at all. The fact that she was wearing nothing but a fluffy white towel was the only clue.\n\n \"Oh, sorry,\" she said to Tucker, \"Was I supposed to be shy now too?\"\n\n \"Yeah, that might be good. Let's start over,\" Tucker said. \"Dave, this is Jean Smith. She's a housewife from the North Side.\"\n\n \"Oh, hi Jean,\" Dave said nervously. \"I hope you have a...a good time today.\"\n\n \"This is Marsha,\" Tucker said, continuing the introductions. \"She does the women's hair and wardrobe, and this is Jamar. He does some on-camera scenes once in a while, but most of the time he's my lighting and camera man.\n\n \"So,\" Tucker said, after the meet-and-greet, \"Jean Smith here is a guest at the hotel. Dave, you're the maintenance man. You'll put on that tool belt when we're ready, and you'll be working in that open switchbox by the door. Jean, you'll come out of the bathroom and act surprised. Dave, you'll say you're sorry, you didn't know she was there. The lines aren't real important, you can improvise, but you get the gist right? So then, Jean, you'll try and get your clothes out of that open suitcase, but we rigged it so it's snagged in there, and Dave, you'll have to help her. You'll be close together and your eyes'll meet, you'll kiss and suddenly it's a porn. Just roll with it at that point. Now Dave, as you get better at things I won't have to do this, but today I may call out a little direction for you \u2014 things like slow down or speed up, or stretch or move on to something new, just so you can get a feel for the rhythm of the overall scene that we like to play out. Okay? I know that's a lot of information, but it's really pretty simple stuff. As we get rolling it'll all fall into place.\"\n\n It did fall into place. Before Dave had a chance to worry too much about it all he had a towel-clad young woman in his arms. And what a woman! A stunner, pure and simple, with big blue eyes that melted his heart.\n\n \"Don't forget Dave, you're in control,\" Tucker said when Dave froze, mesmerized by the young beauty.\n\n Yes, Dave thought. She's mine to take. How would a porn guy do it? Molly emphasized gentle dominance for some women, more forceful for others. Use your judgment, she'd said. Start gentle and then build until it seems wrong, and then back off if you need to.\n\n Dave kissed her. Sparkle played the amateur role beautifully. She acted nervous, but like she wanted to be there, wanted to have an experience. Dave unbuckled his tool belt as they kissed. The kiss broke off and Sparkle backed up and sat on the bed, with a wonderful look of nervous anticipation on her face. She opened her towel, looked down at herself and back up into Dave's eyes, like she was doing something very dirty and wrong.\n\n Dave stepped toward her, opened his pants and presented her with his fat erection. Sparkle looked at it and took it in her hand. After a giggle and a few tentative licks she took it in her mouth.\n\n The blowjob was nice. Really, really nice. After nearly cumming, twice, Dave glanced at Tucker.\n\n \"Nice pacing. Don't rush it,\" Tucker said quietly.\n\n Easy for him to say, Dave thought. He doesn't have his cock in the most beautiful creature in the world!\n\n When he was nearing the precipice yet again he pulled out. Sparkle looked up, waiting for Dave to make a move. He pushed her back and dropped to his knees. His tongue licked through her pretty little pussy as he pushed her legs wider apart, opening her up to him. She was stunning looking from every angle and Dave found himself mesmerized again. He caught himself and went back to work, moaning at the sweet taste as his tongue went deep. Sparkle was moaning too, thoroughly enjoying her time with the older man all the girls had been talking about. Dave lost himself again, slurping up Sparkle's goodness for a nice long time.\n\n \"Pussy eating's not the best for camera angles, so we spend less time there than blowjobs and other positions,\" Tucker said quietly, alerting Dave that he was lost in the goodness again and should move on.\n\n Dave's mind flashed to the story-line for the day \u2014 the traveling woman and the maintenance man. Without over-thinking it he improvised some lines.\n\n \"They told me at the office there was something that needed to be fixed in this room. Is this it?\" he asked, rubbing his fingers over Sparkle's clit.\n\n \"Yes,\" she said breathlessly. \"Yes, that's it.\"\n\n \"I brought a tool that can fix that,\" he said. \n\n After he said it he felt embarrassed, like he'd gone to far with the improvising. He glanced at Tucker and got a thumbs up and a smile.\n\n \"Fix me,\" Sparkle sighed. \"Please fix me.\"\n\n Dave stood and pulled off his t-shirt. He yanked Sparkle to the edge of the bed and guided her legs up against his chest. He slipped the tip of his hardness into the stunning blonde's pussy, and thrust his way home.\n\n \"Oh yeah!\" Sparkle said. \"Fix me!\"\n\n As Dave started to fuck he realized he was surprisingly comfortable. Five people were standing nearby, watching him fuck a sexy hottie, and it felt halfway normal. It was a comfortable, supportive atmosphere, and things were going well. He'd managed to keep from losing his load during the blowjob, and now, yeah, fuckin' a gorgeous young blonde. And look at the way her tits are moving! Fuck she's hot! But wait...holy shit, no!\n\n He pulled out suddenly, hoping he could save it, nearly dancing on his amped-up legs, blowing some quick, deep breathes out of his mouth. Embarrassed, he looked over at Tucker.\n\n \"No problem. That's what editing's for,\" Tucker said. \"Do what ya gotta do. As time goes on you'll get better at that part.\"\n\n After a few moments of cool down he slipped back in, amazed at how tight Sparkle was. This is gonna be a challenge, Dave thought. Way too sexy. Way too tight. And I'm supposed to last? Christ, it's only the first position! I'm makin' a porn here, I'm supposed to fuck her every which-way!\n\n He closed his eyes and concentrated. Maybe she feels so tight because her legs are together up on my shoulders, he thought. Maybe if I spread 'em it won't be quite so intense.\n\n Dave took hold of Sparkle's ankles and lowered her legs into a wide V. She was a little less tight like that but he made the mistake of looking down, his eyes taking in every inch of her in that crazy hot position, as he fucked her and made her tits jiggle.\n\n \"Oh fuck yeah!\" she said breathlessly.\n\n It was too much. Dave pulled out again. Molly had talked about it with him, pulling out to cool down, eating her pussy for ten or fifteen seconds, and then going back in. He was hoping it wouldn't come to that, in front of everyone, but Sparkle was just...too much.\n\n He dropped to his knees and lapped up the juices he'd plunged out of her depths, richer tasting than when they started. Oh yeah, he loved eating her, but it was a fuck scene, so up he went, ramming his hot cock in for more.\n\n Yeah, better this time, he thought. I can do this!\n\n But no, he couldn't. When Sparkle looked at him with those blue eyes and a sexy, curled up smile he almost gushed again. Out into the cool air, down on his knees. Damn she tastes good!\n\n Up again, but he needed a change.\n\n \"On your knees,\" he said, trying to play the dominant porn man again.\n\n Sparkle rolled and crawled to the middle of the bed. Her ass was up, ready for him. Dave was sure he'd made a horrible mistake. She was even fuckin' hotter in that position! How was that possible?\n\n He still had his shoes and pants on, down around his ankles. What to do \u2014 take time to remove it all? While she's...like that? No, he crawled onto the bed and plunged in for round two.\n\n \"Fuck!\" he almost whimpered, astonished at the way Sparkle's pussy felt.\n\n He started fucking but there was no way in hell...it was just...too fuckin' much. He pulled out just as the biggest gusher he'd ever let loose plastered Sparkle's sexy ass.\n\n \"Cut!\" Tucker said when the two writhing bodies had calmed. \"Awesome. Great cum shot man. Really nice. Stamina'll come, don't worry about that. Let's take a ten minute break everybody.\"\n\n Molly brought two bottles of water to Dave and Sparkle, and sat down on the bed with them.\n\n \"So whaddya think of our new man?\" she asked Sparkle.\n\n \"I like him!\" Sparkle cooed. \n\n \"You doin' okay honey?\" Molly asked Dave.\n\n \"Well, I'm lovin'...everything,\" he said, smiling at Sparkle, \"but I'm afraid I'm not very good. I mean I can barely hang on. I almost lost it...four times I think, before I finally did.\"\n\n \"Relax. You're new,\" Molly said. \"Tucker was right offering you this chance. You're gonna be great.\"\n\n \"Yeah, I think you're doin' awesome,\" Sparkle said. \"You're sexy, and you got a nice cock. You'll get the hang of this craziness. I think it'll be easier with the amateurs 'cause they'll just think you're a stud. They won't know you're new, and they'll be more nervous than you.\"\n\n \"I hadn't thought about it that way,\" Dave said.\n\n \"Sure honey, Spark's right,\" Molly said. \"They'll think you're a stud because you are one.\"\n\n \"All right,\" Tucker said to everyone, \"let's burn some more pixels, shall we? Davey, we'll start with sixty-nine to get you up again, and then I want cowgirl, missionary, maybe doggie again. Did you take a pill or anything to help you out?\"\n\n \"Yeah, I did,\" Dave said.\n\n \"Good, we can go for a while then.\"\n\n \"He goes and goes after his first squirt,\" Molly said as she retreated to the shadows.\n\n \"Good. That's what I like to hear. So Davey, remember, you're in control. She's an amateur, so mold her how you want her, and fuck her brains out. That's what they come here for. All right everybody, we're rollin'.\"\n\n Dave flopped onto his back and pulled Sparkle into a sixty-nine. Her insane ass in his face had him hard in no time, but he milked the position for a while \u2014 it was too good to stop. From his position under Sparkle he could see the crane camera moving slowly around, capturing the action from different angles. It was more than a little surreal. When he and Sparkle were good and hot she started grinding hard against his mouth. Dave wondered how much of the gooey licky noises could be heard by the overhead microphones.\n\n \"Oh shit!\" she mumbled. \"I'm gonna cum!\"\n\n It wasn't a full fledged squirt, but her hot pussy seemed to liquefy, and her orgasmic grinding smeared the fragrant juice all over Dave's eager face.\n\n \"Oh fuck yeah!\" she grunted. \n\n Dave let her come down slow, using his tongue to scoop as much of the delicious sweetness out of her pussy as he could.\n\n \"Ride me baby,\" he said. \"Fuck my cock.\"\n\n Fuck my cock was something Molly had taught him to say. She said girls love it when guys are dominant like that. It was nothing he would have ever said in real life, but drinking pussy juice from a porn star was a long way from real life.\n\n Sparkle mounted him cowgirl style, playing up the shy amateur thing.\n\n \"Like this?\" she asked.\n\n \"Yeah, that's it,\" Dave said, holding her hips as she impaled her wet pussy on him. \"Fuck me baby. Fuck me.\"\n\n He guided her up and down with his hands until she got going, and then he left her to it, watching her sweet tits bounce as she ratcheted up the intensity.\n\n \"Oh yeah,\" she said breathlessly. \"God you feel good! Oh fuck yeah!\"\n\n She was bouncing like a hot little slut, her skin starting to shine from the workout. Dave pulled her down to him for a hot kiss, his hips starting a slow thrust. Molly'd been working with him on the flat-on-your-back-fast-up-thrusting thing. It's a porn staple that she wanted him to get the hang of, and all of the sudden it was time to put it into practice. He held Sparkle by the thighs to give his hips room to work and gave it a shot.\n\n \"Fuck!\" Sparkle screamed as he got his motor running. \"Oh yeah!\"\n\n Dave held on as long as he could, using the springy bed to help him hold his speed. When he had to take a break Sparkle kissed him hard, in appreciation for the good fucking. Yeah, he was doin' it. His lessons with Molly were paying off.\n\n Sparkle sat up and went back to riding, the muscles in her thighs getting a nice workout as she bounced. Dave loved watching her \u2014 her blonde hair bouncing, and her tits. Oh, God, her tits! He decided she was the best looking girl he'd ever seen. And she was naked, bouncing on his cock! It was too much. A split second from cumming he pushed her off, flat onto her back, and dove in to eat her pussy a little more while his red-hot poker cooled. Oh yeah, that's the stuff! God damn she tastes sweet!\n\n While he was licking up her juice Dave ran through his instructions again. Sixty-nine and cowgirl, yeah, he thought, I got through those without cumming. Missionary and doggie again. Yeah, I can do this! I can do this!\n\n He mounted Sparkle missionary, face-to-face with the blonde sex goddess. She was having fun, it was easy to see, so he relaxed into the job at hand. More kissing as they fucked added to the feeling of rightness to it all. Yeah, I'm havin' fun too, Dave thought. This is kinda fuckin' awesome!\n\n Sparkle liked the missionary. He was rubbing on her just right, and he could sense he might be able to get her there. He found the speed she liked best and held it. Higher and higher she climbed. The challenge would be watching her face when she came, without cumming himself.\n\n \"Fuck!\" Sparkle grunted. \"Right there! Right there!\"\n\n Dave did as she wished and she found the summit, cumming beautifully under him. Somehow he managed to hold it together and not cum deep inside her, but he had to close his eyes to do it, missing the look of ecstasy on Sparkle's face. He could hear her though. That was pretty sweet too.\n\n Sparkle was breathing hard, loving the way Dave's fat cock felt in her. He pulled out, took hold of her hips and flipped her on her belly. She smiled at him over her shoulder and giggled. Yup, he's got it all right, she thought to herself.\n\n Dave pulled up her hips, spread her ass cheeks and licked \u2014 a long juicy lick up through her pussy to her cute little pucker hole. Sparkle giggled again. He was pretty proud of his cock at that point \u2014 proud that he'd lasted as long as he had and proud that he'd made Sparkle cum more than once. He took hold of the old cock and pushed it into her sweet pussy one more time, to finish things off. He'd made it to the end, so now he could go whole hog, fuck her hard and hope there was something left in him for the finale.\n\n \"Fuck yeah!\" Sparkle said when he got going. \"Fuck me baby! Fuck me hard!\"\n\n Dave's sweaty body slapped hard into her sexy ass. He could watch all he wanted, with no worries about cumming too soon. Funny thing was, it didn't seem to matter at that point. He gave it to her hard, the way Molly liked, and he just kept going and going and going.\n\n \"Oh yeah!\" Sparkle said breathlessly. \"Do it!...Do it!...Do it!\"\n\n After a good long pummeling he pulled out and stroked the cum out of his red-hot meat with his hand, just like the porn guys do. It was a bit of a wimpy dribble onto Sparkle's sweet ass \u2014 not much left after his initial gusher \u2014 but it was a deep grunting, awesome feeling orgasm, and it left him dizzy. Sparkle turned around and cleaned all the sticky off his tired cock with her mouth, moaning and smiling as she did it.\n\n \"You just made Jean Smith from the North Side very happy,\" she said seductively.\n\n \"Cut!\" Tucker said. \"Let's hear it for our new man!\"\n\n Everyone whooped it up and applauded. Dave blushed and smiled.\n\n \u2014\n\n Later that evening, after everyone but Tucker, Dave and Molly had left the studio, the three of them sat in Tucker's office, sipping beer.\n\n \"I think you're ready man,\" Tucker said. \"Whaddya think Molly?\"\n\n \"Oh yeah, he's ready,\" she said, smiling at Dave.\n\n \"Whaddya wanna use for a screen name? We should talk about that,\" Tucker said. \"I'd kinda like to play up the 'daddy issues' thing with your name, maybe call you Daddy something or other. Who were some sexy movie stars back when you were younger?\"\n\n \"Oh boy, like back in the seventies or somethin' you mean?\" Dave asked.\n\n \"Robert Redford, Clint Eastwood,\" Molly said.\n\n \"Daddy Clint? No, those don't really work,\" Tucker said. \"Who else?\"\n\n \"Oh! Steve McQueen!\" Molly said.\n\n \"Daddy McQueen,\" Tucker said. \"Yeah, that's got a nice ring to it. Whaddya think Dave?\"\n\n \"Daddy McQueen?\" he laughed. \"For real? I mean it's kinda cool, but do I stand up to that? I'm just a painter.\"\n\n \"You weren't just a painter on that bed with Sparkle, I'll tell you that. Whaddya think Molly, does it work from the female perspective?\"\n\n \"Oh yeah! Daddy McQueen. He's got the blue eyes and the masculine face...I like it!\" she smiled.\n\n \"Dave? You cool with it or do you wanna keep thinkin'?\" Tucker asked.\n\n \"I guess I'm Daddy McQueen. Old gray-haired guy, at your service Ma'am.\"\n\n \"You got any service left in ya?\" Molly asked. \"I kinda got used to spending my nights with you ya know.\"\n\n \"You mean I'm stuck with you and I'm the luckiest guy in the world?\"\n\n \"Somethin' like that,\" Molly smiled.\n\n \"Well looky here!\" Tucker said. \"Is romance blooming at T.S. Productions?\"\n\n \"Is that against the rules?\" Dave asked.\n\n \"Hell no!\" Tucker said. \"But I'll say no more. I don't wanna jinx anything. So Dave, let's leave it like this \u2014 I'll call you when I need you. Don't get discouraged if it takes a while. The phone doesn't exactly ring off the hook around here, and not everybody's gonna want the older guy thing. But tonight's session with Sparkle is absolutely good enough to edit and post on the website. I have no doubt that'll wet some women's appetites. We'll see how it plays and we'll build on that, okay? In the meantime, you two have fun.\"",
        "\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n Two weeks went by with no call from Tucker. Dave didn't worry about it much. Even if the whole idea fizzled he had met Molly, and that was more than enough. She'd livened up his life more than he could have imagined at his age. Only seven years younger than him, she was full of boundless energy. They went out on the town often, and he was the proudest guy in the joint with Molly on his arm. It was going so well they were already talking about living together. Work on the big Victorian all day, a nice dinner and hours of lovemaking every night...life was good, and remarkably normal.\n\n Molly got the first call for work. She was hoping Dave would get called in first, so when she got a call it would be easier for him to take, but Tucker wanted her to do another scene with Billy Carpenter, AKA Dickie Biggers. Molly was quickly falling in love with Dave, but she loved Billy too. Their twenty-nine year age difference was the only thing that had kept them from falling into a relationship together. It was something Molly knew she had to explain to Dave, because he would see it plain as day when he met Billy.\n\n \"That was Tucker on the phone,\" Molly said. \"He wants me to shoot a scene with Billy Carpenter. Suddenly this is awkward.\"\n\n \"Hey, it's your job, I know that,\" Dave said. \"So tell me about Billy. I know you guys have worked together a lot.\"\n\n \"He's a young one. Only eighteen when he started last year. He used to be a lifeguard. Sweet kid. Yeah, we've worked together a lot. You know how you did your first little scene with me that night at the studio? Well, when Tucker brought Billy in for his test photo shoot I was his surprise modeling partner. We sort of hit it off right away. Turns out he was a virgin, hadn't even kissed a girl. Anyway, the first scene we did for the website was a huge hit, so Tucker kept us together a lot. Sort of a team, you know? Am I talking too much?\"\n\n \"No, I wanna hear all about it,\" Dave said. \"So you really like the kid, I can tell.\"\n\n \"Yeah, too much probably. Does that bother you? I mean he's way to young, so there'll never be a real relationship there. But our fans respond to us. They can tell there's genuine feelings between us, you know. I'm saying too much, aren't I?\"\n\n \"Nope. That's why I...uh...like you so much Molly Bianchi. You tell it like it is,\" Dave said, almost letting the 'L' word slip. \"So, I'm jealous, but I shouldn't be. I guess that's the lesson here, right?\"\n\n \"Right,\" Molly said, hugging Dave. She gave him a nice kiss. \"So how do you wanna handle this. You wanna come to the studio and watch?\"\n\n \"Whoa! I hadn't thought about that!\" Dave said. \"What if it ruins the vibe between you two? Tucker wouldn't be happy about that.\"\n\n \"No, he wouldn't. We're still his biggest moneymakers I think. But don't worry about ruining anything. I'd have no problem with it. If Billy's cool with it might be fun. You'll probably think I'm a total nut job for saying this, but I think it'd be kinda hot. But only if you think so too.\"\n\n \"Hey, I'm falling for a porn star. I guess it's all part of the fun, right?\" Dave said. \"I'm gonna have to get used to this, every aspect of it, so what better way than watching you work with someone who really cares about you?\"\n\n \"I knew you were a special man,\" Molly said. She planted a big, wet kiss on Dave's lips.\n\n \u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n \"Fuck!\" Dave said quietly under his breath, right after his new girlfriend came hard on Billy's big cock.\n\n \"You okay with this?\" Marsha whispered.\n\n Dave couldn't tear his eyes away from the action. He answered Marsha with a nod, even if he did have a slightly stunned look on his face. He'd never watched two people fuck before in real life. It was a powerfully visceral experience, at least the way Molly and Billy did it. And then there was the whole 'love' thing. Dave was falling for Molly, Molly was falling for Dave, and Molly and Billy had been in love for almost a year, but in a strange, 'we can't have a relationship' kind of way. It sure came out when they were together on the set though. It was beautiful, loving lovemaking of the highest order.\n\n \"Cut!\" Tucker yelled. \"Awesome work guys. Let's take ten everybody.\"\n\n Dave didn't want to intrude on Molly and Billy while they were working, so he stayed in the shadows of the dark studio. Molly went to him to make sure everything was okay.\n\n \"Davey? You can come sit with us you know,\" she said.\n\n \"No, I don't wanna get in the middle of things,\" Dave said. He handed her his water bottle for a sip. \"I feel like I should leave you guys alone. You got a nice mood goin' there.\"\n\n \"Oh, okay honey. Is it hard to watch? Are you okay?\"\n\n \"No, it's not hard to watch at all,\" Dave said. \"I feel like it should be, but it's...\"\n\n Dave took Molly's hand and put it on the big hard lump in his jeans. Molly's eyes got big and she smiled.\n\n \"Oh goody!\" she said. \"I was hoping you'd think this was a turn-on the way I do. I keep thinking about you out here watching and it really gets me going. This is so hot!\"\n\n \"I know. I wanna fuck you right now.\"\n\n \"Later baby,\" Molly smiled. \"We'll break the bed again.\"\n\n \"Molly, you ready?\" Tucker called out.\n\n \"I'll be thinking about you,\" she whispered in Dave's ear. \n\n She sashayed her naked body back onto the set and fucked Billy with wild intensity until they were both dripping with sweat.\n\n \"That's a wrap people!\" Tucker yelled when it was over. \"Great session. Molly you were on fire sweetheart. Awesome work.\"\n\n \"Yeah she was,\" Billy said. He looked spent. For the first time since they'd worked together Molly had worn his nineteen-year-old body out.\n\n Billy slipped away quietly. Meeting Dave earlier in the evening had been awkward. He was happy for Molly but felt weird about it too. Talking to Dave again, right after fucking his girlfriend, seemed like it would be even weirder, so he thought it was best to keep things strictly professional, at least until everyone adjusted.\n\n \u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n The next adjustment came quickly. Two days after Molly's session with Billy, Dave got a call from Tucker. A college girl looking to earn some money for tuition wanted to do an amateur session. She chose Daddy McQueen from the men she'd seen on the website.\n\n \"I'm not gonna watch,\" Molly said, after Dave hung up and told her about it. \"I really want too, but I think you need to fly solo until you get used to things. You'll be nervous enough without me there mixing up your thoughts.\"\n\n \"Yeah, but it helped having you there with Sparkle,\" Dave said.\n\n \"That was sort of a training session. I thought I could help and maybe I did. But this, this would just be because I'm horny and I wanna see it. So I'll wait 'till maybe next time, or the time after.\"\n\n \"I'm suddenly nervous as hell. Am I really good enough to do this? Am I even the right kind of guy?\"\n\n \"Absolutely!\" Molly said. \"We've been together, what, a month now? Three weeks since Sparkle? You're stamina's way better now. If you take a pill you'll be a monster. Just remember, she's gonna be way more nervous than you. Just fuck her 'till she can barely breath, and then fuck her some more. She'll love it.\"\n\n \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n \"Daddy, this is Morgan,\" Tucker said, making the introductions at the studio.\n\n \"Hi...Daddy,\" Morgan smiled, somehow flirty and shy at the same time.\n\n \"Hi Morgan. I hope you enjoy yourself tonight.\"\n\n \"It's been all work and no fun at school, so I'm nervous but...excited and...ready,\" she said, blushing a little.\n\n \"Good. I'm excited too,\" Dave said with a wink.\n\n Dave's confidence was on the upswing. Morgan was super cute, and not at all intimidating. Meeting her while they were both naked in bathrobes was a little odd, and the fact that she was only twenty took a little getting used to, but he felt good about being there. Surprisingly good.\n\n \"Dave, Morgan wants to keep things simple, with no dialogue, \" Tucker said, \"so you'll be lying in bed with your eyes closed, and she'll peek in the door, tiptoe in in her bathrobe, slip it off and climb under the sheet with you. Pretend you're asleep until she's right up against you, okay? Then you'll act surprised, just a little, not too exaggerated. Let's play it like this \u2014 she's the daughter of your houseguests. You think she's hot but she's hands-off because she's too young, the daughter of your friend or somethin' like that. She sneaks in and you fuck the shit out of her. Sound good Morgan?\"\n\n \"Yeah!\" she said quietly, her flirty smile already making Dave's cock twitch.\n\n \"So, I pretend I'm asleep, and then make crazy love to a beautiful girl? I think I can handle that,\" Dave said. He winked at Morgan and she blushed again. Dave was as ready as he'd ever be.\n\n \"Action!\" Tucker yelled a few minutes later.\n\n The bedroom door opened slowly. Morgan stuck her head in, looked at the sleeping man and crept in quietly. The silence in the big studio made her so nervous she stumbled, tripping over her own feet. She glanced at Tucker to see if she should start over, but he gave her a smile, a nod and a thumbs up. He actually liked the nerves and the little goofs \u2014 he knew the scenes were hotter when amateurs looked like amateurs.\n\n Morgan slipped off her robe. Feeling very exposed, she wasted no time getting under the sheet. Dave opened his eyes when he felt her warm skin against his. He tried to act surprised. Morgan put her finger over his mouth to shush him. She kissed him. Under the sheet her hand went right to Dave's cock. She moaned. The girl was horny.\n\n She rolled on top of him and Dave's hands explored the flare of her waist, her hips and her ass. She felt his hardness between her thighs, reached back and tried to put him in, but Dave knew it was way too soon for that so he rolled them so he was on top as the hot kiss continued.\n\n \"Bad girl,\" he said, looking down at her big, excited eyes. \n\n\"You shouldn't be here.\"\n\n The words sent a jolt through Morgan. No, a nice college girl from the suburbs shouldn't be there, naked in a porn studio, giving herself to a handsome man in his fifties. But there she was. He body suddenly felt electric.\n\n Dave scooched down, taking the sheet down with him, getting his first eyeful of goosebump covered tits. They were beautiful \u2014 too small in Morgan's mind, but just right in Dave's. Warm and firm, they were the youngest things he'd touched or tasted in decades. He devoured them like the rare and delicious delicacy they were.\n\n When he'd satiated himself on young tits he moved down, kissing Morgan's pierced bellybutton as he headed toward the target between her legs. Her breathing was short and choppy and loud.\n\n \"Mmmm!\" she moaned when Dave hit pay dirt. A sweet little pussy, bald and smooth, greeted his tongue. Morgan was freshly shaved, and Dave was astonished at the softness of her. It was like heaven on his tongue \u2014 a combination of fresh taste and baby-like smoothness he'd never felt before. \n\n Morgan seemed to want to pull her legs up, so Dave pushed the sheet down enough so she could. On full display, with her legs in the air, she closed her eyes to get away from the nervous surroundings and let her mind drift.\n\n She moaned softly as Dave explored her pussy with his mouth. She was still too nervous for an orgasm, but she didn't care. It felt glorious. It didn't even bother her that the crew and cameras could see her. She was in a porn studio after all, so get used to it quick, she said to herself. She could already feel the fun that was going to sweep her away. It was creeping up on her, and the horny Devil inside, the one who kind of liked to show off, was getting ready to come out and play.\n\n \"Oh Daddy!\" she sighed quietly as Dave's soft tongue caressed her clit. It was sexy on so many levels.\n\n As she relaxed, eyes closed in the quiet studio, she slipped closer to an orgasmic state. Her back arched high off the bed and her legs danced gently in the air. Dave was licking her the way Molly liked. Morgan liked it too.\n\n \"Fuck!......Fuck!......Fuck!\" she whispered on deep breaths.\n\n Her nerves were melting and she was climbing. Dave was determined to get her off with a bang. His rhythmic licking and mouthing on her soft pussy parts was just what the doctor ordered to cure Morgan's sexual dry spell. She was cumming, and the warm rush of energy seemed to flow inside her like a faucet had been opened.\n\n \"Oh God!......Oh God!......Oh God!\" she grunted as the wave of energy consumed her.\n\n Dave was thrilled. His face was buried between young thighs, but down in there, in the warm wetness, he was smiling. A smile of accomplishment, a smile of relief, a smile of 'Oh yeah, now I get to fuck this sweet young thing!'\n\n \"God you're a sexy girl!\" Dave said. \"You're gonna get us in big trouble.\"\n\n \"I've always wanted to be bad,\" Morgan said.\n\n \"You wanna be a bad girl? You wanna fuck me?\" Dave said as he rubbed the fire still burning in her pussy. \"You wanna fuck me, bad girl?\"\n\n \"Yes! Oh fuck yes I wanna fuck you!\" Morgan said, squirming under Dave's touch. \"Oh God!\"\n\n \"You're gonna have to be quiet or your parents might hear you. Can you be quiet while you fuck me?\"\n\n \"No. But I don't care. I don't care,\" she moaned. \"Fuck me. Make me cum again.\"\n\n Tucker was smiling in the shadows, delighted with the improvised roll playing and dialogue. His sixth sense had told him it was going to be a hot scene, and Dave was turning out to be a perfect addition to his little stable of men.\n\n \"Suck my cock,\" Dave said. \"Suck my cock like you've always wanted too.\"\n\n He rolled onto his back, kicking the rest of the sheet off, his fat cock hard, throbbing on his belly. Morgan took it in her hand and looked it over. She opened her mouth, extended her long tongue and licked the tip all over like it was a scoop of ice cream on an ice cream cone. She moaned and let the fat meat slip into her mouth.\n\n \"Oh yeah!\" Dave moaned. He closed his eyes and let the wonderfulness of his new job sweep him away.\n\n Morgan's nervousness crept in again when she saw the crane camera slowly lowering and moving in for a close shot of the blowjob. She closed her eyes and tried to put it out of her mind. Having a hard man in her mouth, a real man, helped her get back into a purely sexual frame of mind. Soon she was oblivious to the camera, slurping up the big cock like the horny girl that she was.\n\n \"Oh yeah baby,\" Dave moaned. \"That's so nice.\"\n\n Morgan moaned. She had a feeling the blow job should go on longer \u2014 it often did in the porn she watched \u2014 but she needed to be fucked. It had been way too long, and the hot slippery cock in her hand was way too nice. It was going in her pussy. Now.\n\n She straddled Dave and let out a little giggle when she saw the crane camera sweep around behind her to catch the heart of the action. She wagged her ass back and forth for the camera and smiled a sexy little smile. Yeah, she was making porn, and she was starting to like it.\n\n Dave liked it too. He smiled at her, pulling her down for a hot kiss as he lined up his cock with her soft little slit and pressed his way in. She was super tight. He thrusted his way in, both of them moaning into each other's mouths until he bottomed out, his throbbing cock deep in the college girl's fiery furnace.\n\n \"Uhhhhggg!\" Morgan groaned when she was filled to the brink. \"Fuuuucckk!\"\n\n Dave groaned loud too. It was a feeling worthy of loud exclamation. Morgan hadn't had a cock as big and fat as Dave's before, and Dave was in the tightest pussy he could ever remember.\n\n Morgan's whole body was tingling with pre-orgasmic electricity again, and she suddenly wanted the world to know it. She sat up, arching her back so the cameras could get a good look at her hard nipples and goosebumps. She rode, up and down on the big cock, propelled by the smooth muscles in her young thighs.\n\n \"Fuck yeah!\" she sighed. \"Oh God I love it!\"\n\n She felt the need to touch herself, her hands roaming from her belly to her tits, over and over as she rose and fell.\n\n \"God you're beautiful!\" Dave said as he watched her fuck him.\n\n She was beautiful, a vision of young sexuality. Soft hair bouncing around bright eyes that were full of lusty fire. Her mouth curled into a delicious smile, the smile of someone doing something very naughty and loving it.\n\n \"Jesus!\" she said as she bounced. \"That's fucking so...so good. Oh God!\"\n\n \"You like fucking me?\" Dave asked. \"You know you're not supposed to be here. You're not supposed to be fucking my big cock. You're a naughty, naughty girl.\"\n\n \"Yes, I love fucking you,\" she said breathlessly as she bounced. \"I fucking love it.\"\n\n Dave was rapidly approaching trouble. The whole situation was just too sexy, with way less of the nerves and 'scary new job' feeling he'd had before. Fucking a sexy little college girl was just too much and he knew he was gonna blow.\n\n \"Suck my cock baby!\" he said, pushing her off him just in time.\n\n Morgan looked surprised but did as instructed. Dave came in her mouth with a groan that rattled the rafters. Morgan was surprised at the turn of events, but gobbled up the cum like a porn girl, even though she'd never really done it before. Dave gave her a big load and it dribbled out of her mouth, making a mess of her pretty face.\n\n \"Fuck,\" Dave moaned. \"Oh baby.\"\n\n \"Cut!\" Tucker yelled when it was over. \"Fantastic you guys. Really, really great. Let's take a break.\"\n\n \"Sorry sweetheart,\" Dave said to Morgan. \"You're just so fuckin' sexy, that took me by surprise.\"\n\n \"Really?\" Morgan asked. She looked like she couldn't quite believe she'd had that effect on a porn man.\n\n \"You're a natural sweetheart,\" Dave said. \"Not only that, you're wicked hot.\"\n\n \"Wow. Okay,\" she said, still surprised at Dave's reaction. \"But we're gonna do more, right?\"\n\n \"Oh yeah,\" Tucker said. \"Prepare to have the shit fucked outtaya.\"\n\n Morgan's eyes got big and she smiled. \"I think I like this,\" she said.\n\n \"Based on what I've seen you can come back any time sweetheart,\" Tucker said.\n\n Morgan looked amazed again, and a little proud. Marsha handed her some tissues to clean up her mouth, and a robe. She didn't put it on, feeling wonderfully wicked sitting there naked while the crew buzzed around, taking care of a few technical details.\n\n \"So, should I do anything to...help you?\" Morgan asked Dave.\n\n \"You mean so I don't cum like a schoolboy?\" he smiled. \"No, now that we got that out of the way I'll last better. Anything I can do for you?\"\n\n \"You're doing fine,\" Morgan said. Her eyes were twinkling and she glanced at Dave's cock. \"I won't have any trouble.\"\n\n \"Whaddya think Dave, you need more time?\" Tucker asked.\n\n \"Oh. Uh, no, I think, whenever you're ready,\" Dave said.\n\n He was looking into Morgan's eyes and his cock was already stirring. She smiled a shy smile.\n\n \"All right, quiet everybody. Cameras rolling,\" Tucker yelled.\n\n Dave was surprised Tucker hadn't given them any direction, so he just did what felt natural, and that was tasting Morgan's sweet little pussy again. He was on his knees on the floor, and she was on the edge of the bed with her legs draped over his shoulders. After watching him for a few minutes she lay back, looking up at the ductwork and pipes criss-crossing the old warehouse ceiling while he worked her to a nice simmer.\n\n Simmering is nice, but a full boil is better. Dave stood, lifting Morgan's legs, and buried his cock deep inside her again. God she's tight, he thought. But I'm ready for it this time. Holy shit, look at her on her back like this! Fuckin' sexy girl! Fuckin sexy!\n\n \"Oh God that...that feels so good!\" Morgan said, struggling to speak coherently.\n\n Dave fucked her steady, running his hands up and down Morgan's pretty legs. One hand lingered and played with her clit.\n\n \"Yeah!\" he sighed. \"You're so fuckin' hot! God almighty!\" ",
        "The nice steady thrusting and the words of encouragement quickly brought Morgan on the boil. You could almost see the steam come out of her ears when she came. It was a long, deep orgasm, the kind that rocks you to your bones, and Morgan rode it like a champion. Jamar's crane camera swooped in above her, capturing her bliss in all it's moaning, eye-rolling glory.\n\n \"That was naughty sweetheart,\" Dave said as he fucked right through the beautiful orgasm. \"Using you father's best friend's cock to make you cum like that. So naughty.\"\n\n \"I'm such a bad girl,\" Morgan said breathlessly as Dave continued to fuck her. \"You're gonna have to punish me.\"\n\n Dave stopped his thrusting. He lifted Morgan and twirled her, placing her face down. She shrieked and giggled as he pulled her up on her knees, and she gasped as he plunged deep into her tight wetness again.\n\n \"Bad girls need to be fucked hard,\" Dave said. \"Isn't that right?\"\n\n \"Yes,\" Morgan said breathlessly.\n\n \"Yes what?\"\n\n \"Bad girls need to be fucked hard!\" Morgan sighed. \"Fuck me! Fuck me harder!\"\n\n Dave picked up his pace and was slapping into her with some fury. Her pretty little ass was jiggling with the tremors, and her moans rose up to a louder voice.\n\n \"Oh yeah! Fuck me! Fuck me!\" she cried. \"Oh God yes!\"\n\n Dave was on a roll. He wasn't thinking any more about how tight she was, and all his training with Molly was paying off. It was pure, high intensity fucking with a sexy young thing and he had no feeling of loosing it. All he could do was smile as the sweat started to roll down his back and his whole body took on a shiny sheen. He was a fucking machine.\n\n \"Fuck yeah dirty girl!\" he said. \"Oh God yeah!\"\n\n The pelvis to ass slapping was echoing around the old warehouse, and after a while both Dave and Morgan were in a near hallucinogenic state \u2014 the sounds, the smells, the feelings, all blurring into a luscious, magical high.\n\n \"Fuuuuccck!\" Morgan cried.\n\n She wanted to look back over her shoulder at Dave, but she was loosing control. She loved the feeling of his sweaty hands roaming her hips, and she heard and felt a loud hand-slap on her ass.\n\n \"Bad girl!\" Dave yelled as his cock pummeled her insides. He slapped her hard again, leaving a big red handprint.\n\n \"Fuck me! Fuck me!\" Morgan screamed.\n\n She was totally into it, totally gone. Cameras gone. Crew gone. Rational thinking gone. Good girl gone. She'd crossed the line to porn making slut, and she loved the shit out of it.\n\n There were loud shrieks when she came again. Her body went spastic, completely out of control as Dave pounded her relentlessly. He fucked her like it might be the last chance he'd ever get to fuck a sweet young thing, and it melted Morgan into a sweaty, drooling pile of twitching muscles.\n\n \u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n \"How'd it go?\" Molly asked, when Dave got home. \"I've been so nervous for you the whole time. Was it okay?\"\n\n Dave wasn't sure what to say. Should he tell the woman he was in love with that yes, fucking a college girl was okay? More than okay? Freaking awesome? That Morgan was one of the sexiest girls in the history of the world, and he'd fucked her hard, eight different ways, for hours? That every muscle in his sweaty body was pumped up like an athlete when they were done, and Morgan could barely walk to her car?\n\n \"It went surprisingly well,\" he said.\n\n \"Oh good! You must be relieved,\" Molly said.\n\n \"Yeah, I must admit I've had my doubts over the past month,\" Dave said. \"I mean I'm just an old guy, you know? Being with a twenty-year-old, in front of cameras...\"\n\n \"Was she hot? How nervous was she?\"\n\n \"Yeah, she's really cute, and she got over the nerves pretty quickly. I was surprised.\"\n\n \"That's because of you. You're perfect for this. Someone laid-back like you is bound to put girls at ease.\"\n\n \"Well I hope ...yeah, maybe. She seemed to like me,\" Dave said.\n\n \"So...how weird is this gonna be now?\" Molly asked. \"Are we gonna tell all the details, or is it best to let that stuff slide and not think about it too much?\"\n\n \"Damned if I know,\" Dave said. \"I'll tell you about it if you want, but I'm not sure I wanna know what you're doing every time you go over there.\"\n\n \"I don't know. I think it might be better if we're open about it all,\" Molly said. \"I'd kinda like to come and watch you, but maybe that's just 'cause I think it's hot. You thought it was hot when you watched me and Billy, right?\"\n\n \"I did. Don't ask me why, but I did.\"\n\n \"Because you're in love with a porn star, and you're one too.\"\n\n \"Wow. Yeah, I guess. I still haven't figured out what I'm gonna tell my mother about all this.\"\n\n \"Tell her you fucked a college girl today, and it beats painting houses,\" Molly said, embracing Dave and kissing him. \"So you're probably worn out tonight. Did she drain all of my favorite protein juice?\"\n\n \"Well, you're way more woman that she is,\" Dave said, squeezing Molly's big tits. \"I might be able to rustle up a little snack for ya.\"\n\n Molly kissed Dave again, moaning as she rubbed his cock through his old bluejeans. She could feel it fattening up.\n\n \"I was hoping you'd have a little left. Let's go to bed. I wanna taste her on you, and then I'll fuck you nice and slow.\"\n\n Dave smiled. His fifty-fifth year was turning out to be a very good one."
    ],
    "authorname": "riverboy",
    "tags": [
        "older man",
        "younger woman",
        "college girl",
        "co e",
        "porn",
        "making porn"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/tuckers-studio-ch-08"
}