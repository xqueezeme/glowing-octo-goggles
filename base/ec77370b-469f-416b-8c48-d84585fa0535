{
    "title": "A Romantic Story",
    "pages": [
        "\"Oh my God, a honeymoon! How romantic! We went on cruise for our honeymoon too!\" the bleach blonde, taut-skinned woman of about 42 sitting across from us gushed. She had that sort of drawn look that pretty woman who resist aging get. Hannah always called it \"Courtney Cox Syndrome.\" But I wasn't focusing on her. Even looking across the table would make my head swim a little bit. It was our first meal on the cruise and, in the wide expanse of the dining room, I could see (and feel) the motion of the ocean. They said it was calm seas from New York to the Bahamas, but I'd never been on a ship before.\n\n\"How did you two meet?\" the husband of the blonde woman said. Since it was just Hannah and me on the trip, we'd been partnered up with a few other people. No tables for two. The husband looked a few years older than his wife (but probably wasn't). He had that square-jawed, graying at the temples, aging gracefully thing that I usually found pretty irresistible in men. But my stomach did a little flip as I tried to look up at him. My eyes darted down to the table. I let Hannah handle it.\n\n\"It's a cute story, really,\" Hannah said, turning and looking at me with a smile. We'd promised before we'd decided to take the cruise that we wouldn't outright lie about anything, unless we were placed directly on the spot. It'd be hard to keep any story straight. But, we'd shade the truth as we needed to, \"About ten years ago, I was in the city and I am walking out of the subway and I see this pretty girl behind me. I didn't think anything of it. I had an appointment ten blocks from the subway stop and I start walking. Ten winding blocks, not just a straight shot, I should say. And I turn back at one point, and I notice this pretty girl is following me. I ignore it, no big deal. But block after block, she's still behind me. And I feel like she wants me to know that she is following me, because she is always staring at me...\"\n\n\"I never remember that part,\" I say, interjecting as I always did at that point in the story. But I regretted speaking immediately, opening my mouth seemed to invite trouble.\n\n\"Emma doesn't remember it, but she doesn't deny it either,\" Hannah said, lifting one finger up in the air for emphasis.\n\n\"Oh my god, you're such a cute couple! I mean your both so pretty and just, clearly so compatible!\" the blonde woman said, and, despite myself, I blushed, even though I assumed she was mostly talking about Hannah. Hannah was, after all, very pretty. She had the straightest, silkiest blonde hair I'd ever seen in my life. Big, almond shaped eyes with such long lashes they looked fake. A long, slender, almost regal nose and perfect, pouty pink lips. She would always complain that she was \"on the scrawnier side of anorexic,\" but, of course, that wasn't true. She was slender, but still curvy with pert, small breasts, a flat stomach, perfect flared hips and long, delicate legs. She was 30 years old, but looked like the captain of the high school cheer squad.\n\nI looked younger than my 30 years as well, but not, to my mind, in a good way. I had mousy brown hair that I, for reasons I didn't really understand, always put in pigtails. I had bangs that hung down almost to my eyebrows. I had big eyes too, but they made me look overly innocent (I think). I had a tiny nose and light pink lips. My body was small, with little apple breasts and delicate curves. I was almost five inches shorter than Hannah, and she was only 5'6. Mousy might be the best word to describe me in general, not just the color of my hair. Hannah, of course, always rejected that characterization, she said I had a \"girl-next-door\" look. I guess, as friends sometimes do, we each sort of wished we were the other person.\n\n\"Anyway,\" Hannah said, returning to the story, \"She keeps following me and following me and I get more and more upset set, tenser and tenser with each passing step. It is weird and I've never experienced anything like that before. I get to the building where I have my appointment and I turn in and figure that's the end. She's gone. But this crazy...girl follows me into the building!\" Hannah usually said 'bitch' when she told the story, but she seemed to be cleaning it up for our sophisticated cruise friends. \"I sort of run over to the elevator to get away from her. City people are nuts, I figured she wanted to like...cut my face off and wear it. I get in the elevator and push the number and she sprints up and gets in. I stand real far away, terrified of her.\"\n\n\"I am 105 pounds soaking wet. And was then too,\" I reminded our listeners and they laughed. Hannah ignored us and kept going.\n\n\"There are like 30 floors in this building, but this crazy girl gets in and doesn't push anything. I pushed the 15th floor and she doesn't say anything. She just keeps stealing glances at me,\" I demonstratively roll my eyes (the most I could manage), but Hannah kept talking, \"So I get to the 15th floor and I step off and she follows me. And she turns and follows me down another hallway. And then we get to my doctor's office and she turns to follow me in. And I am terrified and annoyed and upset. I can't take it anymore.\"\n\n\"She's paranoid,\" I opined to the cruisers and they laugh again. I might not have felt well, but I couldn't ignore the rhythm of a good story, I had to play my part.\n\n\"And so I turn to her and I say, 'Alright, you psycho! Don't think I don't know what you're doing. I am not afraid of you. I have pepper spray in my purse and I am not afraid to use it!'\"\n\n\"And,\" I cut in, realizing I was feeling a little better because I enjoyed the way Hannah told the story, \"At that exact moment, as my jaw drops on the floor, the door to the doctor's office opens up and the nurse walks out and she says, 'Oh Hannah, Emma, you're both here. The doctor is waiting.\" There is half a beat as the punchline lands. And now the couple roars with laughter.\n\n\"So I say, 'Oh, I thought you were following me,' with as much dignity as I can muster. And I walk in,\" She said. She didn't mention that as soon as I followed her into the waiting room, she started laughing and apologized about thirty times. I was laughing too hard to hold a grudge. The doctor received an unexpected phone call and we spent the next twenty minutes talking to one another. I don't even remember what we talked about, but it was simply natural. It was an instant connection, a friendship that I fell into in a way I'd never experienced before. I'd never even really had someone I'd considered a \"best friend\" before (a difficult childhood, let's say), and then in a matter of minutes I had one. \n\n\"And we've been inseparable ever since,\" I said. The blonde woman smiled indulgently, and the man nodded along, looking over at me. \n\n\"Oh what a wonderful story!\" She said. She then told began telling the story of how she met her husband. Apparently she was dating someone else, he'd swept her off her feet. There'd been a fist fight. All very dramatic and romantic. The husband added his observations with relish, looking lovingly at his wife. I wanted to eat that story up, because it was the kind of thing that I loved. The kind of story that I aspired to have one day. But I couldn't focus on it because I could sense Heather looking over at me, trying not to grin.\n\nOf course, the story we told was true. But it wasn't the whole story. What we didn't say is that the doctor was an endocrinologist, and we'd both been going to the same place because we were both transgirls, going to the doctor to get a check on our hormones. And that a big part of our bonding was that we'd been so happy to find someone else in the city going through exactly the same thing. Even now, having this loving couple moon over us, I wondered if they'd be as open minded about a couple of 'shemales' as they were about a hip young lesbian couple. I figured there was no reason to find out.\n\n\"Did you start dating right away?\" the blonde woman asked. I was at a loss as to how to answer this somewhat loaded question without giving away the whole truth, I wondered if we were already backed into a corner where we had to tell the truth. But Hannah (always so creative) was on it. She sidestepped the problem.\n\n\"Well, I moved in around, what? Six years ago now?\" She asked, which was also true. She'd moved into my little apartment when her boyfriend broke up with her and there was no place else for her to go. Not that it was any sort of hardship for me. She had been over at my apartment almost every day for the previous four years. Where else would if make sense for her to live?\n\n\"When did you decide to get married?\" the blonde woman asked, resting her chin in her hand an leaning forward onto the table. Once again, I wouldn't have known how to answer.\n\n\"One day, I looked over at Emma,\" Hannah responded, \"And I realized that I wasn't sure that I could live without her. What else could we do?\" The woman made a sort of 'aw' sound. But I had to rapidly bring my coffee cup up to my lips to block the laugh. Hannah certainly wasn't lying about this either.\n\nAbout four months earlier, Hannah had been laid off and, while I could easily pick up the rent by myself (and never would have dreamed about kicking her out), Hannah lost her health insurance. Even with her job, she couldn't afford everything she needed without insurance. She had been crushed. She was desperate and scared in a way I'd never seen her before. I was scared for her.\n\nI don't know what made me think of it. Maybe it was that Carol in accounting had just gotten married. But I realized that the benefits that I got at work were stellar. What was the point in letting a friend be in danger? I hadn't asked, I'd told Hannah that we were getting married. I mean it couldn't be a fraud. I had to send in the marriage certificate. So we'd gone down to the courthouse and gotten it done. A few days later, Hannah was holding an insurance card. Oh, and I had a wife.\n\nWe looked at our marriage first as a necessity, to prevent Hannah from losing her medicines. But secondarily, we looked at it as a joke. We'd spent out twenties, side by side, searching for men who would want to spend their lives with us. Turns out, we were the only people who could stand one another. It was funny, and it didn't mean anything more than Hannah would stay my 'wife' until she got a new job or found someone to marry her for real. We'd had a lot of fun walking around our small apartments, having little fights and talking about how the honeymoon was over.\n\nBut the honeymoon had, actually, caused a little bit of trouble. My employer was very generous and, as a matter of policy, granted employees two weeks off, paid, when they got married or had a kid. They even gave a small \"life event\" bonus. My boss told me to go somewhere, have fun. I didn't really want to take the time off, but what was I supposed to do? Admit to the fact that the 'marriage' was a sham and I didn't want to go? I had to take the time. At first, my plan was to just sit around at home. But, having been laid off for awhile, Hannah wanted nothing to do with that. Besides, she said, we might never get another chance for a paid vacation again. We deserved to have a little bit of fun, she promised me a good time by paying for the drinks. And what if we never got our own honeymoon? With that unhappy thought in my mind, I'd booked a cruise (it was the cheapest nine-day-long option). And so, here we were.\n\n\"Well enjoy yourselves!\" the woman said, \"I can still remember every moment of my honeymoon!\" And she looked almost longingly at her husband as she did. She reached for his hand and he wrapped his palm around her fingers He smiled warmly and looked at his wife as though they were, again, on their honeymoon.. I felt a little twinge, and I wasn't sure what it was. \n\n\"We've enjoyed it so far,\" I responded, \"except for the sea sickness.\"\n\n\"Eventually, the bad memories sort of fade. You only really remember the good times, isn't that right Andrew?\" the wife asked. The man turned to his wife and gave a little nod. He didn't respond for awhile, just looking at her with such perfect love, that it was clear that no words needed to be said. But, for our benefit, he spoke. \n\n\"Marriage is an indescribable thing. It isn't just a ceremony, or even a lifelong promise,\" he explained, \"It is a frame of mind. An agreement between two people, to turn their passion into commitment. To turn churning emotions that are love into something solid. It is a...lovely institution,\" the man said. The wife made a little \"aw\" sort of sound. But I nearly gasped.\n\nThe man's words seemed to have solidified something in my that had been bothering me ever since...ever since the ceremony at the courthouse. I in no way regretted my decision to 'marry' Hannah, so the feeling had been sort of hard to place. But I thought back over the romantic story of this couple, I thought about the beautiful expression of love that this man had just made, and a feeling of intense jealousy suddenly attached to these people. But I realized it had been there before, something sort of amorphous, waiting for something to attach to. Even before I'd met this couple, I'd been jealous of the love they had. The kind of love that I'd always wanted but never been able to find. Or even, really, come close to. And now I was married to someone, and I loved her. But not like that. There was no passion, or even a pretense of romance. We were friends. We looked at our marriage as a joke. A joke honeymoon, because we'd never have a real one. And in that moment, as happy as I was that Hannah was healthy, I longed for some real passion and romance in my life. I needed a kind of love that felt farther away than ever.\n\nHannah must've seen something in my face, even if she didn't really know what it was. She was, after all, my greatest friend. She moved immediately to change the subject, to lighten the mood. I knew that she was doing it for me.\n\n\"Well,\" Hannah said, \"Emma always said I was going to end up in an institution. Who knew?\" She asked, and the married couple looked at each other and they laughed again. But all it did was remind me how crazy, and really, how sad, all of this really was.\n\n* * * * *\n\nI hadn't really expected to enjoy the cruise. It really wasn't my kind of scene, generally. Lots of drinking, all you can eat food, organized excursions, dance clubs, casinos, and small talk with strangers. I hated all of those things individually. But somehow...on the cruise, it all ended up being a lot of fun. I drank daiquiris, I ate trayloads of bacon, I lost $250.00 at the casino, and I made a bunch of acquaintances that I didn't hate. And, I'd still gotten to do the things I liked to do. I laid out on the deck in my bikini and I'd gotten a decent tan while I read magazines and even part of a book. I'd slept in late and eaten breakfast in bed. It was great.\n\nIt was all the more surprising that I'd had fun, because the first full day of the cruise had started off looking like it was going to be terrible. I was already in a bad mood because of the first night in our stateroom. 'd been unwilling to spring for the \"honeymoon suite\" so we'd gotten a regular room. It was the size of a good-sized bathroom and only had a double bed and a small porthole. It smelled sort of dank and the bathroom was entirely black rubber, I guess because water was going to slosh around. There wasn't even enough room for one of us to sleep on the floor if we wanted to. So we crammed into the small bed, getting in each other's way and feeling uncomfortable because, after all, it was the first night of our honeymoon. Maybe the only honeymoon I'd ever have.\n\nWhen I woke up, Hannah was already gone. The room was overly humid, probably from Hannah using the shower, and I had a minor headache. I felt claustrophobia in the tiny room and decided not bother with a shower myself. I quickly put on a bathing suit (a new blue and yellow bikini) and threw on a white mesh cover up on over the bikini and headed out. \n\nThe formal dining room we'd been in the previous night was only for the \"fancy\" meal. I headed up two floors to the cafeteria, where the other, all-you-could eat meals were offered. I figured that Hannah was there and I was going to catch up with her. I was, I admit, a little annoyed with her. She knew that I didn't like exploring new places by myself. And she I'd had motion sickness the previous night. I felt better now, but there was no way for her to know that.\n\nThe whole cruise ship seemed garish in its orange paint and bright red carpets. I moved as quickly as I could, just keeping my eyes open for the signs for the cafeteria. Eventually, I reached it. I sidled up into a line with breakfast food. There were at least two dozen people in front of me, probably more. I looked around as I waited and saw the cafeteria was swarming with people. There were packs of unsupervised children running across the deck, screaming at the tops of their lungs. There were old people loading their plates with free food (even though they could come back as many times as they wanted). There were young, attractive (and unattractive) people wearing little and clearly trying to attract one another. In short, it was a theater of the grotesque and it felt like the world was closing in on me. I looked out into the distance, and saw the shockingly bright blue water extending out in every direction. I realized I was both stranded in the middle of nowhere and surrounded by a wall of humanity a the same time and my stomach lurched. \n\n\"Go ahead and move up,\" a voice behind me said. I took a deep breath and shook my head, trying to get a hold on myself. I looked forward and saw that two or three people had moved forward and there was a five foot gap in front of me to the line.\n\n\"Sorry,\" I said, looking over my shoulder at the guy who'd prodded me forward. He was middle-aged, with a thick gray mustache and watery eyes.\n\n\"People will cut you in line if you give 'em half a chance,\" the man explained. I moved forward quickly, closing the gap.\n\n\"Sorry,\" I said again. It didn't seem to me to be that big of a deal, but I wasn't trying to antagonize the guy.\n\n\"You don't need to be sorry, you just need to focus on what you're doing,\" the man explained to me. I felt my cheeks growing red and my anxiety flared higher. \n\n\"I will,\" I said, trying to disengage from the man. He laughed sort of ruefully.\n\n\"Maybe you will, but you ain't right now,\" he said, pointing. I looked forward and gap had, once again, formed about two feet wide between me and the rest of the line. I stepped forward, my head feeling like it was filled with air, the pressure in my sinuses grow more and more intense. I was so flustered by this man and his near-total focus on my line-standing ability that I found myself feeling embarrassed and cowed, like I'd done something really wrong. Maybe I had.\n\n\"I'm sorry,\" I repeated for a third time, and stepped forward.\n\n\"You're sorry a lot,\" the man said, giving a little huffing laugh, \"Guess you got your reasons. Move forward lady, jeez, do I need to tell you each time?\" My heart was fluttering uncomfortably now. I wanted to turn and run back to my room. But I knew then that all the eyes in the place would turn and look at me, and I just couldn't handle that. I knew there was some sort of easy way out of this, something I could say that would defuse the situation, or at least allow me to ignore this guy. But I couldn't think of what those things were. Instead, I did what usually did, when faced with this level of confrontation: I hunched my shoulders and retreated into myself, letting my discomfort form a hard shell around me. \n\n\"Now goddamnit, you've done it!\" the man said, and my eyes fluttered back to him. His arms were crossed in front of his chest and there were white spit bubbles on his lips. He looked enraged, \"You got us cut!\" I turned again and looked in front of me, mortified. God this guy was right, I was incompetent. But, almost instantly, my anxiety receded.",
        "\"Hey Emma, I thought you were feeling sick,\" Hannah said. She'd slipped into the line in front of me. Hannah was the line cutter. She was holding two plates piled with food, \"I was going to grab you some toast and stuff and come back to the room. You were out, I thought I had time.\" Now I felt embarrassed for my annoyance with her. It was sweet, she'd been trying to take care of me.\n\n\"I don't care if she's your friend, there's no cutting,\" the guy behind me bellowed. Hannah turned her head to the side and looked at me, not at the man behind me. I know what she saw, the sort of anxious panic in my eyes, the redness in my cheeks, the tenseness in my muscles. As she usually could, Hannah saw that something was seriously bothering me. She looked and knew that I was uncomfortable with the crowd.\n\n\"I should've left a note. You could've waited in the room,\" she said seriously.\n\n\"I said no cuts,\" the guy behind me said angrily and my shoulders bunched up. Hannah's lips pursed and she tilted her head to the side and looked passed me to the guy. She gave him a long stare. I could feel her growing angry. \n\n\"You got someplace to be, guy?\" she asked sharply. I heard the guy let out a puff of air, like he didn't believe her insolence.\n\n\"I am trying to get breakfast...\"\n\n\"You're trying to be a real dick,\" Hannah said and the crowd near us got quiet. All the eyes turned on Hannah, but she didn't care in the slightest. I think maybe she welcomed it. That was just the way she was.\n\n\"All she says is 'sorry' but she keeps letting the line move, and people cut her in line, and I am the dick?\" I bowed my head now.\n\n\"This isn't about her. Don't make this about her. She wasn't bothering you. You picked a fight with someone in the breakfast line for no reason and now your embarrassed because I called you out on it,\" Hannah said and I felt the tension lessen again. That was what happened, wasn't it? Hannah hadn't seen everything, but she could sense it.\n\n\"I have every right to get my breakfast when I want. I don't have to let people cut in line. Maybe she don't got no place to be and she can stand around. But I am in a rush...\"\n\n\"Its a fucking vacation. She can take her time if she wants to. The last place a fat ass like you should be rushing to is the bacon line. Looks like you've been hurrying to an early grave for fifty years now, my friend here is doing you a favor.\" The man's face grew very red, and I heard him sputtering behind me. I was seriously frightened that he was going to jumped forward and grab Hannah by the throat. But Hannah didn't seem the least bit concerned. She didn't wait for him to respond. As far as she was concerned, she'd put him in his place. It seemed the crowd agree. People were laughing and looking at the guy (and, to a lesser extent, Hannah). No one was looking at me. I could breath again.\n\n\"Come on Emma,\" Hannah said, \"I met a couple of people who live six blocks from my old apartment in Brooklyn. We were comparing notes on bodegas. I need you to back me up.\" Hannah reached forward and took my hand, pulling me out of the line and towards the the seating area of the cafeteria. She didn't take any further note of the angry man behind me. I followed her.\n\n\"What a...cunt,\" the old man muttered as he scampered forward, closing the gap in the line. Hannah began laughing at the irony of his comment, the two of us being the only ones on the ship who understood how funny it was. \n\n\"If only,\" she said. And suddenly, I was laughing too. Partially because it was funny, and partially because I was relieved. That had almost been terrible, but then, somehow, Hannah had fixed it in her uniquely aggressive, vulgar, but loving way. She'd sort of wrapped her big personality around me, and gave me the space I needed to be comfortable.\n\nAnd that was how it always was with Hannah. Sometimes, people who didn't know her but only her that she lived in my house (and needed to get on my insurance) thought that our relationship was sort of one-sided, that she took advantage of me. I never once worried about that. Hannah had promised me a good time on this vacation, and come hell or high water, she was going to deliver it for me. She was going to create the space for me to be comfortable. And sometimes that could be a lot of work, I wasn't always...graceful in social situations. But Hannah never held my anxiety or my awkwardness against me. The people I knew and the people I dated always seemed to find me embarrassing (for a lot of reason, not the least because of my identity), but Hannah never was ashamed of my friendship. She was always in my corner. If I had a problem, it was because someone else wasn't doing right by me. She just assumed I was right.\n\nSo, as we wended our way through the cafeteria seats, I allowed myself to laugh. I knew that one person on this ship wouldn't think less of me, no matter what. And knowing that meant I could ignore anyone who didn't like me. I only needed the one person. But, strangely, that knowledge allowed me to become comfortable, to become open to the experience of the cruise. And the people on it I could have fun if wanted to and I could just...engage with people if I felt like it. I was less embarrassing because Hannah wasn't embarrassed by me, if that made sense. Hannah was there as my safety net. And I knew that was true because when Hannah really introduced me to the two people from Brooklyn she'd met in line, I didn't feel any anxiety and I didn't say anything awkwardly or meekly (the way I would have if I'd met them alone). I just talked to them. And I liked them. And they liked me. I leaned on Hannah's strength and she gave me access into her more confident world. And for the cruise, I lived in that world. I never saw the jerk from the bacon line again.\n\n* * * * *\n\nThe first two full days of the cruise were out at sea (before daily stops in Canaveral, Miami, and the Bahamas), and I quickly grew to adore the beauty of the open ocean. Accustomed to the cloudy slate gray of northern beaches, I found that the tranquil, cerulean of the sea was a revelation. I spent my mornings sitting on the bed in my state room, looking out the tiny porthole window at the ocean that stretched out forever. Unlike the first morning, I no longer felt isolated by the ocean. Perhaps it was just that I had grown accustomed to it. Or maybe it was the fact that Hannah, by necessity, was lying next to me in the bed as I looked on. Whatever it was, I found myself growing more and more comfortable. In fact, I even found that my sea sickness was fading.\n\nIt helped, I think, that I was having fun. I spent a lot of time laying out at the pool, getting my first tan in years. I swam too, in all of the pools on deck. And I even got into the sort of planned or set-up activities that I thought I'd hate. I played in a mini-golf tournament on the top ship, I (and the rest of the crowd) judged a karaoke contest, and I went to a stand-up show. And Hannah was with me for all of it. More than that, she was encouraging me to do all of these activities, things that I wouldn't have done on my own. There was always a slight twinge of social anxiety, but Hannah had a way of ensuring all eyeballs were on her. And she pulled me along until I was having fun without even realizing my guard had dropped\n\nI found that I was having so much fun, that the discomfort I'd felt on the first day faded away entirely. And not just the seasickness. At some point, I forgot that I was on my \"honeymoon\" or that this might be the only honeymoon I ever had. I didn't think of the happy married couple or my strangled dreams of romance. I don't want to imply that in a two-day period, I had completely abandoned all of my dreams or overcome all of my hangups. I guess I just accepted that I was on vacation with my best friend. Feeling envious of a life that didn't even exist was just going to waste my week at sea. I might as well, just for a few days, live in the moment.\n\nI can actually remember the exact instant when that idea crystallized in my mind. It was the second full day of the trip. Actually, I would say that the second day hadn't even really started. It was still dark out when I felt someone shaking my shoulder. For half a second, I imagined myself back in my apartment in the city. I figured that I'd overslept my alarm (again) and that Hannah was waking me up and saving me from getting reprimanded (again). As I sat bolt-upright, I realized that I was in my stateroom. I looked to the porthole and saw that it was still the middle of the night.\n\n\"What the hell, Hannah?\" I asked groggily. It was not my practice to wake up before 10 a.m. on a day I didn't have to work.\n\n\"I got hungry and realized that I am on a cruise. I can get food at any time, day or night,\" Hannah said, bouncing excitedly on the bed. I shook my head.\n\n\"Cool,\" I said, \"Have at it.\" I rolled back over, too tired to be angry that I was awakened. Hannah grabbed my shoulder and rolled me back over onto my back.\n\n\"No, come on Em, get up,\" she said earnestly.\n\n\"I don't want to get up. I am not at all hungry. Just tired,\" I said, refusing to open my eyes. Suddenly, I felt an unpleasant wetness and pressure in my right ear. \n\n\"Oh Jesus Hannah, a wet willy?\" I gasped, sitting up quickly. Hannah laughed deeply and then hopped off of the bed. Now I was sitting up, awake.\n\n\"Come on, it'll only take a minute,\" Hannah prodded. She wasn't going to leave me alone, so I sighed deeply and rolled off of the bed. I saw that Hannah was already dressed for the day in a t-shirt and shorts. I was wearing a pair of loose pajama pants and a tight white tank top. I wasn't going to get anymore sophisticated than that. Hannah wanted me, she got me. \n\nWithout another word, Hannah turned and walked out of the stateroom. I followed quickly after her. I was still a little bit dazed from the early hour and I just followed Hannah long the winding hallways of the cruise ship. We ascended and descended stairs, turned corners, and eventually ended up outside, walking passed the life rafts. Hannah came to a stop at a railing and I sidled up next to her. It was only then that I realized we were nowhere near the 24-hour cafeteria at the back (aft?) of the ship. Instead, we were about halfway up on the ship, facing forward, the dark ocean spreading out in front of us. Just a slight glitter of starlight giving away the murky blackness all around us. There was a cool breeze without the sun, and I crossed my arms in front of my breasts to avoid shivering.\n\n\"You got lost,\" I said matter-of-factly. Hannah turned to me slightly and smiled.\n\n\"Just wait,\" she said, and then turned and looked back at the sea. \n\n\"Come on, let's turn around, its cold,\" I whined.\n\n\"Just wait,\" Hannah said, and didn't turn to look at me. I sighed, knowing that when she felt like being stubborn, there was no stopping her. I leaned against the cold metal railing, looking off in the same direction as Hannah, not sure why we were stopping here or what we were doing. I breathed in the cool ocean air and figured that there were worse places to be. After a few minutes, I didn't even notice how cold it was. It was as close to silent as it had been since I'd stepped onto the ship, supremely peaceful.\n\n\"Oh, there it is!\" Hannah said, breaking the silence. She pointed off to the left and my eyes followed her fingers. \n\n\"What?\" I said, straining into the darkness in front of me. \n\n\"Just look,\" Hannah said simply. I kept looking. For a moment, I could see nothing. I wondered if this was some sort of prank. But then I noticed that, off in the distance, the sky was more of a dark blue color rather than black. The stars were fading. I leaned forward against the railing as the sky grew brighter and brighter. The realization of what Hannah had brought me to see occurred at the same instant that a thin sliver of shimmering gold broke over the horizon.\n\n\"Oh God!\" I said softly, overwhelmed by the beauty of it. The sky seemed to change instantly, growing light blue as the stars went out. A halo of orange light crested over the sun and the sea shimmered to life. I found myself frozen against the rail, leaning out towards the east, unwilling to blink or to look away. I don't know that I'd ever been awake and outside for a sunrise before. But even beyond that, the intense isolation of our little cruise ship on the vast, flat ocean made the dawn all the more beautiful. No trees or mountains obscured the view. At one moment it was a cold, remorseless night and the next, like a revelation, it was a bright, beautiful morning. \n\n\"Thank you so much, Em,\" Hannah said quietly, after we'd both stared, open-mouthed, at the beauty of the day for a long time. I was a little startled by her voice, I'd felt like I was alone in the world for a moment.\n\n\"Why are you thanking me?\" I asked, after another pause, I turned and looked at Hannah. She didn't look at me, she continued to gaze out at the ocean. \"This was so beautiful. I should be thanking you.\" \n\n\"Em, I know I've joked about our 'marriage' a lot. And I am totally going to keep joking about it. Because we are ridiculous,\" Hannah's voice sounded tight, nervous, and my ears pricked up. She still refused to look at me. But she kept talking.\n\n\"But...I really have been needing to thank you. I can't tell you how much it means to me that you were willing to do that for me. Get married like that. I know that it has been a giant hassle for you,\" I began to protest, but Hannah steamrolled me, she kept talking. I realized that she needed to get something out, and I needed to keep from interrupting her.\n\n\"But...well, I don't have to tell you how important this was to me. I never would have thought to ask you to do this for me, because it would have been too much. I know I can ask you for help, but this isn't help. This is...You just...saved me Em. I mean, you've always been my best friend. For as long as we've known each other. But this isn't friendship stuff. This is... you are the best person I know. And I need you to know that I don't take that for granted. Most people don't get a friend like that. \n\n\"So I wanted to do...something. I don't know, I can't explain it. I needed to do something to prove to you that I recognized how special you are as a friend. But I always feel like, I do a really terrible job of showing you what you mean to me,\" I could see tears welling in the corner's of Hannah's eyes, something I'd never seen before. I felt my chest tighten, the depth of the feeling becoming overwhelming. But Hannah kept talking. \n\n\"I...I just love you Em. And I wanted to give you something that would sort of say everything that I can't. But, like I said, I am not good at that. And I don't have any money. And I don't know what I am going to have money. But I thought...\" Hannah, spread her arm out over the scene in front of us. \"I wouldn't want to be with anyone else right now, seeing something like this. I know that when I look at the sun rising over the ocean like this...that you see the same thing that I am seeing. No one else would see it the same way. It's so beautiful, Em. And you understand that...\" Hannah kept looking out at the ocean, and I could see her cheeks growing red. I knew that she was struggling with words she'd thought about for a long time. I knew she was embarrassed. My heart felt like it was going to burst, my lips curled back into a smile I couldn't control. But I didn't want to make Hannah self-conscious. I understood what she'd said, and how hard it was for her to say.\n\nWhat's more, I felt what she was talking about. Could I imagine wanting to go on a trip like this with anyone other than Hannah? Would anyone else know exactly what I meant, even if I couldn't say all of the words? The warmth from the sun, or maybe something else, I don't know, washed over me. My concerns over my trip faded out entirely. This was exactly where I was supposed to be and what I was supposed to be doing.\n\n\"It's beautiful, Hannah. Everything is so beautiful,\" I said, and I reached across the divide separating me from my friend, and squeezed her hand gently. She squeezed back, still blushing and looking off into the distance. But I could see a smile on he face, and we both knew that we understood one another. And in that moment, I didn't want anything else in my life, than to be right there. We watched the sun rise until we really did get hungry, then we walked off together, to find something to eat. \n\n* * * * *\n\nThe rest of the trip sort of flew by. We got used to the rhythm and the activities of the ship. And soon, we were stopping on day trips as well. We explored new cities (and countries), ate at great restaurants, drank more than a little, and danced at clubs. Whatever we wanted to do, we did at that instant. In the Bahamas we snorkeled on a reef, we rode ATVs on the beach, and we swam in the clearest ocean water I'd ever seen in my life. In short, we had a blast. By the time we started on our way back up to New York, I was surprised to find that I wished I could stay out another week.\n\nOur last night on board, I was tired but desperate to milk one last adventure our of my 'honeymoon.' Hannah reminded me that, before the trip, we'd talked about dozens of things that we wanted to do. And now, looking back on it, we'd done everything. Everything except get laid.\n\nWe'd talked about it the night before the trip. We were going to be on an ocean cruiser, filled to the brim with drunk, young, single people. Neither of us had had much luck in the romance department of late and we'd joked (I thought it was joking), that it was the perfect opportunity for a little semi-anonymous fun. All along the trip, I'd noticed Hannah talking to and flirting with guys. I saw her seeking out men to dance with in clubs all over the Caribbean. I hadn't really realized that she was completely serious in her attempts, she was always kind of flirty. But as the sun went down on the last night, Hannah became more and more certain that she needed to have a little companionship before we returned to our 'normal' lives. She said it would tie the whole experience together. How could your really say you'd had fun if you didn't even have sex, she'd asked. She insisted that I give it a try as well, for the same reason.\n\nI didn't really have any objection (I mean who doesn't want to have sex if they can swing it?) and Hannah insisted that I go with her to one of the dance clubs on the cruise ship. We'd already been once or twice. But, as Hannah said, we hadn't really done the 'full court press.' And so I'd agreed to try go, though I doubted the likelihood of success (for me, not Hannah, she could always find someone if she really wanted to).\n\nHannah had been pretty excited and she'd gotten ready early (usually a faux pas in her eyes, but she seemed to recognize her limited time). I was, under the best circumstances, slow to get ready. So, wearing her little black dress and the highest heels that she trusted herself with on the ship, Hannah had set out before me. She told me to meet her at the club, she wouldn't leave until she was sure she saw me there. I'd seen her out and ready on my own. I took a shower, did my hair and makeup, put on my own skimpy black dress (with flats, however), and loaded up my purse with everything I'd need. The whole time, I moved slowly, feeling a little listless. I didn't really know why, I guess I figured I was just a little tired from the constant action of the past eight days. Whatever it was, I didn't leave the stateroom for more than half an hour after Hannah left.\n\nOnce I was ready, I quickly made my way towards the club. The ship was crawling with people, all of them looking to get one last thing in before they returned home. I sidestepped everyone, moving slowly, and trying to figure out why I didn't feel the same way. Hannah had been right,we'd done almost everything we set out to do. But I didn't feel like there was any one thing that needed to be done. I knew I wanted...Something, but I couldn't tell what it was.",
        "Eventually, I made my way to the dance club. It was early, but the music was already pulsing and the place was packed. Got through the bouncers and was essentially pushed over against the wall. I looked desperately around the room for Hannah, but I was short and it was hard to see out over the crowd. For a moment, I was afraid that she had broken her promise and left with someone before me. I'd seen her pick someone up faster. \n\nHowever, after a brief moment of panic, I saw her across the room. She was sitting on a stool, leaning against the bar, smiling and twirling her hair. She was looking up at a tall, dark-haired man who was standing next to her, holding a beer, and smiling as well. She must've caught a glimpse of me out of the corner of her eye, because she turned quickly and waved me over. I hesitated for a moment, not sure how to tackle the situation. Eventually, I just started pushing my way through the crowd, knocking into dancers and drinkers, feeling like I was the most obnoxious person on the ship.\n\nFinally, I made it over to Hannah. She smiled broadly and threw her arms around me. I could smell a little alcohol on her breath, but she clearly wasn't drunk. She was just excited. She turned me so that I was looking at the guy. He was classically Hannah's type. Tall, a little goony, and looking like he was a bit shady. I knew she'd already found the guy she'd go back with. Hell, maybe she'd spotted him two days earlier.\n\n\"This is...\" Hannah said, almost screaming over the noise of the music at the crowd. She raised her eyebrows. Clearly she didn't remember.\n\n\"Todd,\" the guy said, sort of pulling his chin back. He was wearing a black button-up shirt and his hair was slicked back. God, he was just her type. An asshole.\n\n\"Emma,\" I said, reaching forward to shake his hand. He didn't seem to notice, just furrowed his brow.\n\n\"What?\" he asked.\n\n\"What?\" I asked, unsure of what he was asking me.\n\n\"She said her name is Emma! She's my best friend. We came on the trip together,\" Hannah explained loudly. The man nodded disinterestedly.\n\n\"Cool,\" he said, and then took a sip of his beer.\n\n\"I'm glad you made it!\" Hannah said, \"I thought you'd changed your mind or something,\"\n\n\"No I...\" I started.\n\n\"Oh, but I was telling you about when I was in the Navy...\" the guy said, suddenly interrupting. Hannah smiled awkwardly and turned towards the guy.\n\n\"Oh yeah, I'm sorry,\" she said, and the guy turned and started to whisper into Hannah's ear. She looked at me for a moment and then turned back to the guy. She giggled slightly and slapped his arm. Then she turned and started to say something into his ear. I couldn't hear. Instead, I stood awkwardly next to them, feeling out of place but not sure what to do.\n\nI stayed with them for the next five minutes. Occasionally, Hannah would turn and say something to me. Usually it was to relay some inane comment from her man. The man seemed annoyed by my presence, but he was smart enough not to say anything. I tried not to get in the way, only making a comment every once in awhile, when it made actual sense to do it. But eventually, my comments grew fewer and farther between. Hannah shifted in her chair, her knees turning towards Todd, biting her lip. After awhile, she wasn't turning to look at me anymore. She stared mooningly at Todd, or swatted his arm playfully. I took too long, but eventually, I took the hint. \n\n\"Hey,\" I said, sort of insinuating myself in between them. The guy looked annoyed, \"I am going to go find someone to dance with,\" I said. Hannah looked at me, knowing I never voluntarily went to dance. She furrowed her brows.\n\n\"I didn't mean to...\" she started.\n\n\"It's cool,\" I interrupted, \"this is why we are here, right?\" I said as convincingly as I could. Hannah smiled at me and mouthed 'thanks.' She turned back to the guy, who looked gratified that I was leaving. I took one last glance at the happy couple, and then turned and walked away.\n\nI moved quickly, heading out across the crowded dance floor. I pushed through people more harshly than I did before, trying to get quickly to the other side of the room. I started to move towards the far wall, but instead, I turned and made my way out towards the door. It wasn't really a plan, but before I realized it, I was back outside of the club.\n\nIt was only when I got outside, away from the thump of the music and the press of the people, that I realized what I was doing. And what I was feeling. My chest was tight and my eyes stung. The sensation was so unexpected that for a moment, I really couldn't place it. I wondered, briefly, if I was having some sort of panic attack, but I couldn't explain why that would be. At the same time, my mind kept turning back, going over what had happened at the bar.\n\nAnd what had happened at the bar? Hannah had found a man before me and, not so subtly, told me to get lost. I mean it wasn't like this was some sort of new experience. It had been to bars with Hannah before. She was bolder than me, she almost always found someone before I did. And then I got out of her hair. Sometimes, I would find a guy too. Sometimes I wouldn't. That usually didn't bother me, I mean it was like I said. That was why we went. \n\nBut this time...something felt different. As I walked away from the club, I could see Hannah and Todd in my mind's eye. See them leaning into one another, giggling, and flirting. And I came to the sudden, unpleasant, realization that I was jealous! Not that I wanted Todd! God, no. I very rarely wanted the guys that Hannah got with. Not that the guys I got with were much better. But I was jealous of the particular guy. It was something else.\n\nIn a flood, the anxiety that had slipped away on the second day all came flooding back. I suddenly realized who I was, where I was, and what I was doing. Here it was, the last night of my honeymoon, and my 'spouse' was about to get laid more than me. I already knew that I was too high strung tonight to find anyone of my own. It just wasn't going to happen. And so here I was, facing again the prospect that I was over 30, alone, and no where close to where I wanted to be in my life. Suddenly, the whole trip seemed like a two-week long exercise in denial. I'd thrown myself into the dubious 'fun' of the cruise, because I couldn't face the fact that this was all so...pathetic. And now I was returning to the real world and I was getting miserable knowing I was about to be miserable. \n\nAnd I was jealous of Hannah. Because she clearly wasn't having the same problems I was having. If nothing else, she had figured out how to hang onto this vacation for the last night. She was going to be with someone. At least for one night, she wasn't going to be lonely. And, I was jealous of that. I was so jealous that my eyes burned and my chest clenched. \n\nI was embarrassed by the force of what I was feeling. It seemed pathetic to get jealous of Hannah's ability to have a one night stand. If that was my standard for a fulfilling night... I turned away from the club and walked quickly towards the door. Soon, I was standing outside, leaning against the railing, taking deep breaths and trying to control myself. The real world was hurtling at me, I could almost see it across the dark expanse of the ocean. I needed to calm down, accept where my life was at, at least for the night. I stood, gulping the air, for a long time, slowing bringing my heart rate down. Then I stared of into the distance, not thinking about or doing anything. Avoiding everything. \n\n\"Emma, right?\" a voice said, shaking me from my trance. I blinked several times and then turned my head towards the sound, dazed. Slowly, my eyes came back into focus, and I found myself looking at a somewhat familiar, older face. It took me a second to place it, then I realized what it was. It was the man...the guy from our table at dinner the first night.\n\n\"Andrew, right?\" I said, after a long pause. The man smiled benevolently.\n\n\"Andy, please,\" He said.\n\n\"Nice to see you,\" I said, and I pushed away from the railing, turning to face Andy. I hoped I didn't look as bedraggled as I felt. It was embarrassing.\n\n\"Did you enjoy your trip?\" he asked.\n\n\"Yeah, it was nice,\" I said, but I don't know if it sounded convincing. He nodded, \"And you?\"\n\n\"Well, I can't complain,\" the man said.\n\n\"You aren't trying hard enough,\" I said wryly. I though the joke was sort of bad, I'd just been trying to sound normal, but Andy laughed.\n\n\"Things could always be...a little better,\" he said, \"For instance. I was feeling a little cooped up in my room. Long cruise does that to me. Claustrophobia. So I am taking a walk, trying to clear my head.\"\n\n\"Yeah. I was in the club,\" I said, \"It really wasn't my scene.\"\n\n\"Well, care to join me for a walk?\" he asked. The cloud sort of floating around me lifted slightly. A walk. And a conversation. That actually sounded pretty nice. I smiled despite myself. Andy had a soothing energy.\n\n\"Lead on,\" I said. The man gestured forward and we began to stroll. \n\nIt was a beautiful night for a walk. The moon was full, the stars were all out. There was a slight breeze, and the air smelled fresh and clean. And, I was gratified to find, the company was excellent. Andy was a true gentleman. He spoke about his trip, telling the most amusing anecdotes with impeccable comic timing. But more importantly than that, he was an excellent listener. I told my own stories about the trip, and about my life, and he listened. He asked insightful questions and offering incisive commentary. It was an adult conversation, and I almost felt flattered to have be included in it (despite the fact that there were only two of us). After three laps around the ship, I felt as though I could count Andy as a friend. \n\nEventually, Andy pulled himself to a stop. He made some comment about his creaky knee giving him trouble, but we kept talking. \"And that was when I realized that it wasn't my briefcase. It turns out, I was a thief!\" he said, finishing a story about a job interview twenty years earlier that had gone awry and I laughed along with him.\n\n\"Oh my God, and you'd already called to tell your wife that you'd gotten the job! What did she think?\" I asked, leaning back against the railing. Andy's smile faltered slightly and he shrugged.\n\n\"Ah well, the rest of the story isn't as funny,\" he said and I immediately felt awkward. I tried t change the subject.\n\n\"You know, I wasn't really feeling well when your wife told the story of how you all got together, how'd it go again?\" I asked. Andy sighed again.\n\n\"That's really more of my wife's story,\" he said, I assumed with modesty. Like she told it better.\n\n\"Still,\" I said, \"It was a romantic story. A passionate story.\"\n\n\"It certainly was that,\" Andy said sharply. I sensed a slight change in his demeanor, and I wondered what I'd done wrong.\n\n\"I have always loved stories like that is all, romantic love stories,\" I said, accidentally tapping into the yearning I'd put off when I'd started my walk. Andy rolled his eyes slightly and shrugged his shoulders.\n\n\"I don't want to talk about my wife,\" he said simply.\n\n\"Oh,\" I said, not sure what that meant. I hadn't thought I was pushing buttons. He didn't say anything for a long while.\n\n\"My stateroom is right through the door,\" he said quietly, \"If you'd like to come in.\" Suddenly, I felt my pulse begin to race, and my eyes dropped away from Andy's face. Of course, I understood what he was saying. His discomfort with the story suddenly made a lot more sense. Still, I tried to give the benefit of the doubt.\n\n\"It'll be hard not to talk about your wife when I say hello to her,\" I said hopefully.\n\n\"She is at the casino. She'll be there a few hours,\" he explained and my stomach finally dropped into my feet. Andy looked at me with his kind grey eyes, waiting for my response. I won't pretend that, in that moment, I wasn't tempted. If Hannah had a type that was a sort of douchey bro, I had a daddy fixation. I always had. Andy was a good looking older man. Tall, strong, in excellent shape. And it had been such a long time for me. Since I'd done anything. And I was so desperately lonely. I was more than tempted. I was desperate to follow Andy into his room. To fall down on his bed. To not be alone for this one night. But there was one thing that was stuck in my head. One thing that, at one point in time, might not have meant as much to me (I am ashamed to say), but recently, it had become...so much more important.\n\n\"But you're married,\" I said in a small voice. I didn't even think to say I was married. Because I really wasn't. Andy was married. That one fact kept running around and around in my mind. Nothing else could stick. Andy didn't seemed fazed.\n\n\"We are all adults. You will be gone before she gets back,\" he said, not exactly a romantic sentiment. But there was more than that. I thought back to that first night.\n\n\"But what about...a lifelong promise? A beautiful institution?\" I asked. I wasn't (just) trying to bring up Andy's hypocrisy at this moment. In fact, that was barely registering in my mind. I was thinking about the sentiment he'd shared on marriage, the beaut of his romance with his wife. I'd been so...insanely jealous of it. What was he saying now? How did those two things make sense.\n\n\"Look,\" Andy said, \"I won't blow smoke at you. There isn't anything in this life that is perfect. My wife and I have a good story. She was dating her high school sweetheart. I saw her at a football game at Dartmouth, and I swept her off her feet. Her boyfriend found out, picked a fight, and I knocked him out. And we rode the fun of that right into the church. And I loved her...passionately. But you can't keep that level of excitement up forever. Marriage is a promise. And I am staying in my marriage because that is what my wife wants, and I owe her that for our children. But let's not the two of us pretend that I am still a head-over-heels kid. It doesn't work that way. I only feel passion for one woman right now,\" And with that, Andy leaned in towards me. I was too shocked by his words to move, to surprised to react when I felt his lips press against mine. I let him kiss me. My mind was reeling. More thoughts than I knew I could hold at one time ripped through my mind.\n\n\"Come with me,\" he said, his hand around on the back of my neck. I felt his other hand taking mine, pulling me forward. And then, I was moving.\n\n* * * * *\n\n\"Jesus Em, are you alright?\" Hannah asked. I was surprised, and elated, to find that she was still at the club. Still sitting at the bar talking to Todd. I later found out that he was waiting for his buddy to leave his state room so that he and Hannah could have it.\n\n\"Come on, I need to talk to you, outside,\" I spat quickly. I know that my hair was wild and my eyes were wide. I'd sprinted across the ship and then through the crowd in the club. An idea...an indescribable idea, was so heavy on me that I needed to get it to Hannah immediately. I needed to share it with her before I lost the words to say it.\n\n\"Can it wait?\" she asked, tilting her head slightly to a furious Todd.\n\n\"No,\" was all I could say. Hannah looked at me, her eyebrows raised.\n\n\"Are you seriously cock-blocking me right now Em?\" she whispered fiercely.\n\n\"You need to hear this,\" I said, my voice catching in my throat. Hannah looked at me, and then, briefly, looked back at Todd. I wonder if she could sense how much hung on her decision at that moment. But in a moment, she was nodding.\n\n\"Okay Em, lead the way,\" she said. She turned and said something to Todd, but I was already moving through the crowd. I could hear him swear loudly. I didn't care. Soon, I was outside of the club. I walked away from the crowd, moving out the door toward a bench on the deck. I was so nervous, I couldn't look back. I had to trust that Hannah was behind me. As I turned and sat, I saw her already caught up, sitting down next to me, looking concerned. My chest was tight and my hands were sweating. I felt like I did when I took public speaking in college. A nervousness that almost crippled me.\n\n\"Em, did something bad happen? Are you okay?\" Hannah asked, concerned. I smiled nervously.\n\n\"I'm fine,\" I croaked out. Hannah took a breath and nodded. My mouth opened as I looked at Hannah, but no noise came out. In some ways, it was like I was seeing her for the first time. Every curve of her body, every strand of her hair, I soaked her all in; I was unable to do anything else. Hannah's eyebrows furrowed.\n\n\"Em, did you pull me away from a hot guy to tell me that you are fine?\" she asked, her voice loaded with the threat of annoyance if I didn't answer correctly. I shook my head.\n\n\"No,\" was all I could manage to say. Hannah laughed a little and crossed her arms in front of her chest.\n\n\"Well...?\" she asked. I took a deep breath. There was a long pause. Ever since I'd left Andy, run away from him really, I'd been churning ideas through my mind. But they were all confused and jumbled. Now, looking at Hannah, I couldn't put them in order. I didn't even really know what it was I wanted to say. It was more a feeling than an idea.\n\n\"Hey, Em...its okay. Just say it,\" Hannah said, reaching across the bench and taking my hand. My eyes stayed on Hannah's, and I felt calmer. I felt my thoughts order themselves I breathed again. And suddenly, just like that, I knew exactly what I wanted to say. It was like...I had these ideas in my head forever, refined and perfect with time, and I had just realized it for the first time. They'd been sitting here, waiting for me to realize I needed them.\n\n\"Hannah, you know how we have been joking about our fake marriage?\" I asked. Hannah smiled and shrugged her shoulders.\n\n\"Sure,\" she said. I felt my heart stop as the next words began to pour out of my mouth. I knew that once they were out, they'd change everything. But I also knew I couldn't hold them back.\n\n\"Why does it have to be fake?\" I asked, my mouth instantly dry. Hannah didn't react, beyond squinting slightly/\n\n\"I don't understand,\" she said, after a pause. But I knew she understood, sort of. She just couldn't process it. I had to lead her there.\n\n\"Why do we just assume our marriage is going to end when you get a job or find a boyfriend? Why do you want to find a boyfriend? Why isn't this our marriage?\" I asked, the words confused because the idea was so strange. Hannah laughed a little.\n\n\"Is this a joke, Em? Are you okay?\" The fact that she asked both questions showed me she knew I was serious.\n\n\"Hannah, I realized tonight that I want to be married to you,\" I said. Saying the words made it feel like a weight had been taken off of my shoulders. That was the realization I'd had, listening to Andy dishonor his wedding vows. \n\n\"Em, we don't love each other,\" Hannah said incredulously, \"This is so weird. Are you okay?\"\n\n\"You're saying you don't love me?\" I asked, my turn to be incredulous. Hannah sighed and shrugged.\n\n\"You know what I mean, Em. Not like that,\" Hannah said. I could feel her hands trembling on mine. I wondered what she was thinking. For the first time in a long time, I knew what I was thinking.\n\n\"What way is that way?\" I asked.\n\n\"You know Em, don't be...come on, you know. Romantically,\" Hannah said, exasperated. She pulled her hand away from me and turned her head out towards sea. I wasn't upset. I knew this would be hard. But I knew what I had to say. If I could say it all, and Hannah still didn't understand...well, that would say it all.\n\n\"I didn't know you cared all that much about romance,\" I said and Hannah snorted.\n\n\"I know, but I care about it some! And I know you do too. We aren't lovers, Em!\"\n\n\"I care about romance, I really do. But that is what I realized today. Tonight, really Hannah.\"\n\n\"What? I don't understand. I am so confused right now. Are you okay?\" Hannah sounded almost frantic, like she was trying to avoid whatever it was I was going to say. I took a deep breath and tried to explain to Hannah exactly what it was...the epiphany I'd had.",
        "\"I care about romance Hannah. I watch all the romantic movies and I cry at the end. I like love songs. Those stories...they mean something to me. I always, since I was a little girl, I've wanted to be in those stories. I wanted to be Cinderella. I hated my family and I wanted some strong jawed man I'd never met before to come and take me away from everything. I wanted to be Belle and heal some wounded man with my love. I wanted to be Snow White and have a man save me with his love. I wanted all of those men to be the same person. And I wanted passion.\"\n\n\"You deserve all those things, Em,\" Hannah said softly, \"You deserve the things you want.\"\n\n\"But what did I want, Hannah? I've been in passionate relationships before. I've had that romantic feeling before. Remember when I was dating Daniel and he was terrible, and then Ed came in and he just swept me off my feet? That was the most romantic thing that ever happened to me and I loved it. But what happened?\"\n\n\"Don't bring that up, how would you know that Ed was such an ass or that he wasn't over that skank bit...\"\n\n\"I should've known!' I said, \"I jump into these volatile situations because they are exciting. But volatility is...unstable. That's all it is. I search for these...great stories...But we never learn what happens to Snow White when her prince gets her. They live 'happily ever after' but that can't be true. How can something so...crazy lead to anything secure?\n\n\"Em, this is...\" but I was on a roll, I needed to say this.\n\n\"And I had fun in those situations. For a little while. Until the craziness that had been fun turned on me. Until it became sour. And then I was just miserable and lonely.And then it started up again. Another moment of excitement with months of disappointment. Do you know when I am happy, Hannah? You know the only time that I am ever happy?\"\n\n\"No,\" Hannah said, but it wasn't convincing.\n\n\"I am happy when I am with you. I am happy when we are watching TV. Or cooking dinner. Or bullshitting about our days. Or making fun of celebrities. If someone asked me to do one thing for the rest of my life, it would be to hang out with you. Don't you feel the same?\" I asked. I was warming to what I was saying. Every word sounded more and more convincing. But Hannah was shaking her head.\n\n\"So we settle, Em? Are we that pathetic. No one can stand us, so we might as well be married?\" She asked. I shook my head.\n\n\"Who is settling? Settling is looking at the life someone else tells us we are supposed to have and then trying to fit our real lives into that crazy mold! Why should I be with someone I love less than you?\" I saw the gears working in Hannah's mind. She was scared. She was nervous. She didn't know where this was going. But she had to feel the truth. I knew her too well, our minds were too, for lack of a better word, wedded already. She had to see what I was seeing.\n\n\"Em, I really do love you. And you're right...I want to be with you more than anyone else. But doesn't there have to be something more than that? I mean what about that spark... We don't have that...\" I had thought of that as well. And struggled with it. But I understood it now.\n\n\"The movies...or society...or whatever...they tell us that we get passion first, and then that develops into a connection. But passion...that's based on circumstance, Hannah. Its finding someone new and liking something new. Or doing something you shouldn't be doing. A connection is real. A connection is timeless. Why wouldn't it make more sense to find a person that you really connect with...a person you can't be without. And then, when you find that person, then you see...you see if there is passion there. You see if there is romance there? We are already bound together forever Hannah. What else could even be close to as important?\"\n\n\"Em...\" Hannah said. But suddenly, an idea bloomed in my mind. I hadn't been planning it. I hadn't really been planning anything, I was far to manic and confused for that. But it was so clear. It was the only thing to do. It was a test. But a test I already knew we would pass. Something to show Hannah.\n\n\"Look, Hannah...\" I started.\n\n\"No, Em, listen. This is important...\"\n\n\"Hannah,\" I interrupted her interrupting me, \"Shut up.\" And then, my body just...acted. My hands darted out, more deftly than I ever could if I'd been in control of myself. Suddenly, my fingers were slipping through her hair and I could feel my palm graze across her cheek and her ear. Soon, my hands were firmly, but gently, cradling Hannah's head and neck. I was holding her in place. I saw a look of confusion and maybe something approaching alarm in her eyes, but my own eyes were closing and my head was lean in towards Hannah's. My mind was totally blank, like I'd overwhelmed my rational mind.\n\n\"Em...,\" I heard Hannah squeak softly just as my head tilted to the side and my lips pressed forcefully into Hannah's. For a brief second, all I could feel was the soft warmth of Hannah's lips, they were dense and smooth. It was mechanical. And for that instant, a pang of panicked remorse pierced deeply into my heart. What the fuck was I doing? What sort of hell was I wreaking in the only relationship in my life that worked?\n\nAnd just as I was about to release Hannah's neck and turn to run, crying down the deck of the ship, I felt Hannah's hands rise up at her sides, moving quickly like she could sense I was about to flee. Her delicate fingers wrapped softly around my wrists. She was incredibly gentle, but somehow, she locked me in place. My fear dissipated instantly, I could sense her soothing touch emanating out, through my body.\n\nThen, I felt it. Just as sure as I'd ever felt anything before. There was the slightest movement of Hannah's lips against my own, nothing more that a twitch. But that twitch reverberated throughout my body. An electrical current, like I'd tasted lightning, rocketed through me. My breath caught in my throat and my heart double-beat its way into the back of my throat. I felt Hannah's lips move more, I could feel them drawing tightly together, clasping perfectly around my own. Layered on top of one another. Her lip, then mine, hers again, and mine. Locked together as though they were built to be together. My muscles went limp and I heard a strange noise and I didn't know if it came from my throat or from Hannah's.\n\nHannah's lips now parted slightly and I felt the wet heat of her tongue moving swiftly across the tight crack of my lips. Desperately, my own lips parted and my tongue receded, ready. Hannah sensed my movement and the wet tip of her tongue pressed between my hungry lips and poured across my teeth. It was...exactly right. Her tongue didn't tentatively drag across my lips. But it didn't flood into me, coating my tongue with her. Instead, she entered me gently, and I felt the pleasant thickness of her tongue between my lips and the heat of it against my teeth. My tongue rushed to meet her, feeling her rough, slippery texture and tasting her sweet flavor. Our tongues danced together, choreographed perfectly, each movement I made matched exactly by one from Hannah. I could feel her hot, sweet breath against my face and I could smell the scent of her perfume, titillating but never clouding.\n\nBut the physical sensation, while incredible, was really less than half of what I was experiencing. Even if you could feel Hannah's soft lips melting into mine and you could sense her tongue gently pulsing into mine, you wouldn't be able to understand what happened to me, that moment, on the ship. I couldn't even really feel Hannah there anymore. No, that isn't right. She was there. She was more than there. I felt like...Like I couldn't feel her hands anymore because they'd melted into mine. I couldn't feel her tongue anymore because it had become a part of me. She was breathing out, and I was breathing her right in. That electrical spark...it had started something. A chemical reaction or a...fusion. A torch had flared inside of me and, in half a moment, I had be welded to Hannah. Something had shifted, as simple as turning on a switch and as profound as changing my life.\n\nFinally, I felt Hannah pull away. I felt her tongue slip between my lips (and I whimpered slightly). She pulled her head back slightly and for a moment, the connection seemed to be lost and a just the razor edge of my panic seemed to be climbing on me again. My eyes fluttered open. Hannah's own eyes almond-shaped greeted me. They were wide and sparkling. They were familiar, of course. The same eyes I'd seen a thousand times. But there was something else too. I don't know, its hard to explain. I could see behind her irises. I could feel the same fire that had was burning in me...I could feel it just the same inside of her. We paused for a moment, looking at one another and both feeling the same bizarre combination of confusion and understanding. The barest hint of a smile appeared on Hannah's face.\n\n\"Come on,\" she said, quickly standing up next to the bench and grasping her hand, now very tight, around my wrist. She jerked me roughly up to my feet, \"Let's go!\" she said. And before I had a chance to react, Hannah was running, jerking me away. I let out a surprised yelp, but quickly gained my feet. Hannah had no interest in waiting for me. My feet thundered flat on the deck as I ran to keep up with her. \n\nHannah never slowed down. In fact, she grew faster and faster as we moved our way through the ship. I trusted Hannah implicitly, letting her guide me wherever she would. We darted up and down stairways, through doors, and across crowded rooms. Hannah darted easily between people, dragging me wildly behind her. After a while, I found myself laughing hysterically as terrified guests jumped out of our way or got gently bumped aside. I could hear Hannah cackling as well. Crew members yelled at us to stop, or to slow down, or something. I don't know and we didn't care. I'd never felt so light in my life, it was like we were floating across the ship.\n\nI was totally disoriented and not even sure what I was thinking. But in a few minutes, Hannah had navigated us easily back to our cabin. She opened the door and we essentially tumbled inside, landing in a pile on the small open area of the floor We were both laughing hysterically and panting to get our breath back. Our bodies and our limbs were tangled together and I could feel the Hannah's head on me. Neither of us wanted to wait until we caught our breath and regained our sanity. We sensed that our fire had to be tended, or it would go out.\n\n\"Is this really happening Em?\" Hannah asked, brushing her hand across my face to get the hair out of my eyes. I kissed her fingers as they moved by.\n\n\"I hope so,\" I said. And I guess that Hannah took that as a signal. Her hands moved to my dress and I could feel her fingers finding the the zipper. I did the same, clawing at her clothing and trying to get it off. I am sure that I'd seen most of Hannah's body at one time or another, but now I was ravenous. I was desperate to look at her, and to feel the heat of her body pressing against mine.\n\nI had the notion later that we looked a little bit like a melee scene in a cartoon. A giant cloud of spinning dust with dresses and bras and arms and legs flying everywhere. But at the time, all I could think was getting Hannah out of her clothes as fast as possible. I know I heard fabric tear and I didn't know if it was her or if it was me and I didn't care. I occasionally felt Hannah's lips against my skin and I dragged my own tongue against her flesh when I felt it. In a matter of moments, Hannah and I were both sitting on the floor of the cabin, wearing nothing but our panties (we both understood, without saying, that that final step would require delicacy).\n\nBut even with her bright red panties still on, Hannah's mostly bare body was still a delectable sight to behold. Her slender frame with her long legs and her perky, little breasts. She had the delicacy of a dancer, but a raw physical charisma that was somehow powerful. I could feel her eyes moving over me, taking in my warmer curves and more compact frame. For once in my life, I felt sexy as someone looked at me.\n\nAs I was looking at her, Hannah rose up to her full height, moving languidly off the floor. It was like she was actively controlling each strand of muscle, every inch of skin. She knew exactly what she was doing. I felt my mouth water for her and I'd never even realized how beautiful I'd found her before. She sat down daintily on the edge of the bed.\n\n\"I need to see all of you,\" she said huskily and she bit her lower lip. It was not a request or even a demand. It was a statement of fact. I felt my heart flutter as I looked down at my own black panties. It was, of course, a fair request for me to go first. This was my idea. Still, I waited for something. Something I was surprised never came. Fear.\n\n\"I don't mind if you see me,\" I said, almost confused, then corrected myself, \"More than that. I want you to see me.\" This was an experience I'd never had before. Exposing myself to a new lover for the first time, even someone who knew about my body, was always fraught. Hannah had never seen me completely before. But we'd talked about it before. She knew I was always waxed bare, for instance. She knew I rubbed lotion on myself every day to keep my skin soft. She knew that I'd had a bilateral orchiectomy five years earlier (that is, the removal of two...unwanted growths), but that I still had, and would always have, what I sometimes tried to call my \"clit.\" Of course, it was long and thick for a clit, about as long as my middle finger and twice as wide. The place where I used to keep my balls had shriveled slightly, but it was still there a little bit, different than a clit. And there was no pussy beneath it. Still, it was my clit, and I wanted to Hannah to see it. \n\nI rose up quickly onto my knees. Even as I was moving, I was hooking my fingers into my panties. I wasn't just willing to show Hannah, I was desperate to do it. I pulled down quickly and my big, soft clit (which had come loose during our run), tumbled out into the open air. It rarely got hard, except when I spent a lot of time working on it. But it could still bring me pleasure and, I hoped, Hannah would like it too.\n\n\"You're beautiful Em, my god,\" she said, awe in her voice, as her eyes moved up and down my body. I felt no instinct, as I normally did, to deflect this compliment. I didn't try to cover myself. I felt instead a strange pride at Hannah's words, but I guess that isn't strange. That is what you should feel when someone compliments you, right? Still, for me, it was new.\n\n\"Thank you Hannah. Now I need to see you,\" I responded and I felt a chill run through my body. I knew as much about Hannah as she knew about me, even if I'd never seen her before either. And so I wasn't surprised that, as her hips lifted up off of the bed and her panties started to roll down away from her. Hannah wore incredibly tight, panties that she ordered special, to help her with her tuck. She needed it. \n\nI'd once asked Hannah why she'd never had any kind of bottom surgery at all (beyond laser hair removal, which didn't count). She had said that her cock was an absolute work of art. She didn't really want it, but she joked that you don't throw out a Picasso just because you like Da Vinci more. I knew that this was a deflection. Hannah couldn't explain why she felt just as feminine with her cock fully intact, but she just did. \n\nAnd God, at that moment, I was glad she felt that way. Hannah's heavy cock poured out of her panties, still soft and somewhat pinched by her panties. But I could immediately see she had only been half joking. Her cock was perfect. Smooth, even skin, long, thick. She had two perfectly proportioned balls in a smooth, taut sack. It was big, looking almost fake on Hannah's slender frame. But it was beautiful. A pink, circumcised tip the same color as Hannah's teardrop nipples and not a single unsightly bulge or vein. It made my mouth water.\n\n\"Jesus Hannah, you're a goddess,\" I said without a hint of irony. I couldn't believe I said it. But I actually meant it. Hannah blushed, deeply and mumbled something I couldn't understand. I knew it wasn't even words. We looked at each other for a moment, admiring our bodies and the fearlessness with which we were able to be together. I'd never felt so comfortable without my clothes on. No even alone. I could have lived in that moment forever. But then Hannah's eyes rose and she looked directly at me.\n\n\"Please Em, come to me,\" she said to me, just above a whisper. And once again, my body acted without me. I rose quickly from my knees, my panties slipping down off my leg, and across the distance separating us in two quick steps. Hannah spread her arms and her legs as I moved towards her and began to pitch back onto the bed as we embraced. With a slightly embarrassing amount of force, I found myself piled on top of Hannah on the bed. \n\nOur lips found one another instantly. There was no surprise or even a hint of tentativeness now. My mouth opened and my eyes closed. I felt Hannah's tongue against my lips, felt her breath against my cheek. Soon, her tongue was probing deeply inside of me, I felt the pleasing, wet thickness of her against my teeth and my gums. I kissed back, more forcefully than before, probing into Hannah's mouth and tasting her sweetness.\n\nAs overwhelming as the kiss was, it was only a fraction of the sensation I was feeling, everything else so new and exciting. The warmth of Hannah's body seemed to flow through me. Her arms were wrapped around me. I could feel one across my waist, pulling me in tight. The other was snaked up my back, her palm against the back of my neck and her fingers playing in my hair. Our legs were tangled together, her silky skin gliding effortless against my own.\n\nThere was no daylight between us. I felt my breast, so sensitive from the electricity that was flowing around the room, pressed tightly against Hannah's. I could feel the soft flesh contrasted by her hardened nipples. My nipples pressed into her flesh as well. Every slight movement of our bodies sent shivers down my spine. I groaned into Hannah's mount, tingling all over.\n\nOur bellies were flat together as well, Hannah's heat seemed to grow from there. Or maybe it was lower. Hannah's back was arched slightly, so not only were our breasts lined together, but also our cocks. I could feel my soft clit pressing against the warm flesh of Hannah's cock. I could feel her heavy balls against my skin. As we kissed and ground together, I could feel Hannah growing. I could feel the blood returning to her. I could feel her growing harder and harder with each passing second. And it made me grind harder, increasing the pressure and the pleasure of my soft clit rubbing against her stiffening shaft. Hannah was grinding as well, feeling the resistance of my body against her. Our kisses grew faster, more intense and we both moaned together. \n\nSoon Hannah was fully erect, and I was shocked by how big and how thick she felt against me. I wondered what she wanted to do with it. I was willing to do anything she asked. But as I opened my eyes and pulled away from our kiss to ask her, Hannah suddenly wrapped her arms more tightly around me and rolled. I let out a surprised yelp, and then giggled. In a moment, we had flipped positions. I was on my back, loving the feel of Hannah's weight on top of me. I could feel the hard tip of her cock pressed against my thigh and I desperately wanted to pull her in. But I felt Hannah pulling back, moving away from me. I groaned, trying to hold her with my arms.\n\n\"No,\" I begged softly.\n\n\"I have an idea,\" she responded, her voice husky. She leaned forward, her eyes sparkling, and she kissed my nose. At the same time, I felt her body begin to slide down over mine. She moved quickly, but not rushed. As Hannah moved, she kissed my lips, and then my chin, and moved her way down my throat. It felt like she was leaving a trail of fire, and I arched my back into her, moaning and tingling. Her nipples and her hair trailed across my skin as well, causing my back to arch. Soon, Hannah's lips were moving between my small breasts. She paused for half a second, and her head turned to the side. I gasped as she took my nipple into her mouth. I felt her tongue swirled around on my hard nipple, the sensation instantly rushing to my brain and making me feel weak. I cried out as her lips moved from my nipple, between my breasts again, and then over to my other breast. Once again, she sucked on me gently, the sensation adding to the previous touch, making it more intense.",
        "But it didn't last. And felt like crying as Hannah resumed her relentless march down my body. Her kisses pressed against my bellybutton and down towards my big clit. I felt my heart fluttering in excitement as I felt her hair move across my cock. And then her lips... Oh they came so close, kissing the skin just above my soft clit. Paused for a second, and then her head moved to the side, kissing down just next to it, moving lower and lower. My body trembled, I desperately wanted her to take my aching clit into her beautiful lips. But there was another sensation instead.\n\nI felt Hannah's hands on my legs then, sort of under my knees. Then she pushed them up and back. My knees bent and my legs spread. She pulled me forward and then settled me down. My feet were now flat on the bed, my knees in the air, my back flat on the mattress. I sat up slightly now, propping myself up by my elbows and looking down between over my breasts and between my legs. Hannah's face was now framed between my knees and I saw my soft cock, pointing towards her mouth. Hannah looked up at me with needful eyes and she licked her lips as she looked back at me. She slipped off the bed at some point and was on her knees on the floor. My feet, on the bed, were right on the edge of the mattress, right in front of Hannah.\n\n\"Such a pretty little clit,\" Hannah whispered, \"such a tight little 'pussy'\" And the air caught in my throat. Hannah closed her eyes and began to lean towards me. I still wasn't breathing. And then, all at once, I tried to suck in every ounce of air in the room and my eyes clamped closed. Every muscle in my body tensed to the point of shaking. The thousands of little nerves around my tight little asshole lit up like a Christmas tree.\n\n\"Oh fuck!\" I moaned, my voice thick. Hannah tongue had pressed ever-so-gently against my asshole. It was wet and warm and somehow more than the sum of its physical presence. It was like Hannah's tongue had been made for me. Pure pleasure as the tentative tip of Hannah's tongue moved slowly around the gently folds and ridges of my asshole. Instinctively, I pushed my hips down slightly, pressing my asshole more firmly against Hannah's tongue\n\nI heard Hannah moan slightly my eyes fluttered opened. I could see the top of Hannah's face, her eyes looking up at me. My soft cock was resting against Hannah's nose (making her look incredibly dirty. And sexy). She was still moaning, but she was moving faster now. Her tongue was soft and wet against me. I could feel it lapping up and down against my asshole. Her tongue was wild and messy and soon the skin of my ass was wet and sticky with her saliva. Then Hannah's tongue grew rigid and I could feel her pressing . I gasped as her tongue pushed into me. Not deeply, but enough to open me up, to go a little inside of me. And get me wet all over. \n\n\"You taste so good,\" Hannah said, and I could feel her lips tickling against my asshole, \"Almost a shame to leave.\" She said. And I felt her move away slightly. I whimpered and bounced my hips slightly as the warm, enveloping sensation of Hannah's tongue left me. I desperately wanted it back.\n\n\"Please Hannah, I...\" I began, but before I could say more a strange sort of strange, high-pitched groan poured out of my throat. Hannah had pulled her head back slightly, letting my soft clit slip down off of her nose and against her lips. At the same moment, she'd opened her mouth and taken the tip of my penis into her mouth. \n\nAnd the second I entered her, Hannah was relentless, swirling her tongue around the sensitive tip of my penis. I groaned louder and Hannah looked up at me with mischief in her eyes. I felt pressure on the tip of my penis. It wasn't painful, but it was intense. After a moment, I realized was Hannah was doing. She was actually sucking on my penis. The soft flesh of my big \"clit\" was pulling in between Hannah's warm, wet lips The whole time, Hannah's tongue was moving around wildly, coating me in her saliva and lubricating me. She slurped me into her mouth, wet and dirty. \n\nIn a matter of moments, I could feel Hannah's nose pressing into my belly. Her mouth was tight around the base of my cock, her tongue was pressing tight into my urethra, and I could feel the tip pressing into the back of her throat. Her mouth was incredibly tight and hot around me. And my eyes rolled back in my head. My nipples ached to be squeezed, but propped up on my elbows, my fingers couldn't reach. I wanted to taste my own nipples, and to suck them into my mouth the same as Hannah had sucked in my penis. But I couldn't. Instead, I writhed in the painful pleasure of the denial. I kept my eyes on Hannah.\n\nI had been so preoccupied by the sensation of Hannah's tongue undulating under my cock, that I didn't realize what else my friend was up to until I felt it. A dull, familiar discomfort, just on the edge of pain, a feeling that promised pleasure. I felt the tip of Hannah's finger pressing against my asshole. No, it was more than that. While Hannah had been sucking my soft cock into her mouth, she must've been swirling her finger around on my ass cheeks. It was now soaking wet and the tip of it had slipped all the way up the knuckle inside of me. Instinctively, my body closed around her finger tip, the nerves firing in the sensitive ring of my anus.\n\n\"Jesus Hannah,\" I groaned and looked down at her. Hannah's tongue was still caressing my cock, but she reacted to my voice. Her eyes flickered up and her lips smiled around my penis. She shook her head to the side, driving my cock deeper into her throat and making me groan again. I wanted more. I knew what I had to do.\n\nI relaxed my asshole slightly, pushing out so that my body opened. Hannah was keeping a steady pressure and as I relaxed, her lubricated finger pressed further inside of me. She slipped in easily now, up to her second knuckle deep into my body. My body began to shake as the discomfort eased out, replaced by the familiar pleasure of Hannah's finger working deeper and deeper into my body. No. Familiar is the wrong word. I mean, it was familiar, in a way. It was not the first time someone had inserted a thin finger into my tight \"pussy.\" But this was somehow more than that. I could feel every swell of Hannah's finger. I could sense every little ripple of Hannah's skin. I shuddered as Hannah's finger disappeared inside of me entirely. It felt like I was made to take her into me.\n\nI am not sure how long we were like that. It was like I moved outside of time. I existed forever in that moment. I was propped up on my elbows, somehow, my whole body shaking. My nipples ached as my eyes peered out across my breasts and belly, to where Hannah knelt between my legs. My best friend's eyes were opened, and she was locked on me, staring at me with an intensity I'd never seen before. Her mouth was still wrapped around my cock, sucking it in and swirling her tongue around the soft flesh. And her finger was still undulating inside of me, massaging me in places I didn't even know was sore.\n\nThe end came suddenly. Well, not the end. The first foaming crest of the very first wave crashed suddenly onto the parched sand. But as it broke over me, I caught a glimpse of the sea rushing towards me. Wave after wave after wave, as infinite as the power of the moon. But, seeing that, knowing the limitless depths of pleasure that awaited me in the future, in no way stunted the sheer intensity of the orgasm that overtook me then. One moment, my toes were curling, my muscles were tensing and my throat was closing. And then next, just like that, everything burst. My hips bucked and my body trembled as the pleasure pounded into me. My eyelids closed, but I could still feel Hannah's beautiful irises on me as everything care in the world melted into oblivion.\n\nI don't know how long I writhed on the bed, I don't know how loudly I moaned, I don't know how many times my tight asshole clenched around Hannah's loving finger. All I know is that, eventually, my eyes opened as I lay panting on the bed. As my vision returned to me, I saw Hannah there. There was a moment of confusion. My pleasure soaked mind could not connect my friend to the sensations I'd just experienced.. But there she was, my overly-sensitive clit was still propped in her mouth (I knew a small amount of liquid must've have dribbled, salty but sweet, into her willing mouth), and I felt her finger had slipped from my body. \n\nRapidly, as my mind cleared, the incongruousness of what I was seeing faded. There was no disconnect between what I felt and what I was seeing. She was just Hannah, my best friend and now, my lover. Maybe lover most of all. There was certainly something more than friendly affection in her eyes. And that was what I was struck with. The dirty vision of Hannah's thick, soft lips wrapped around my cock was alluring, But there was something about the strange combination of affection and desire in Hannah's eyes that was...primal. My body reacted.\n\nI pulled back with my arms, gliding my ass across the bed, away from Hannah. My soft, wet cock slipped easily between Hannah's lips and I heard as the tip popped audibly from Hannah's beautiful lips. Hannah groaned slightly as I moved. But she seemed to sense my purpose, and now she was willing to follow my lead. \n\nAnd I was ready to lead. Despite the fact that I'd just had an orgasm (and one so powerful that it normally would have knocked me on my back), I was just as ravenous as I had been before. Maybe more so. But before, where I'd desired desperately to feel pleasure, now I wanted nothing more than to give it. I sat up on the bed, then pulled back onto my knees. I grabbed Hannah and quickly, messily, pulled her up onto the bed with me. She giggled as she flopped onto the mattress, but I was all business.\n\nMy hands found Hannah, urging her into the position that I hadn't even realized that I'd seen in my mind's eye. Hannah was more than willing, her joints loose and her muscles willing. In a matter of moments, she was on her hands and knees in the center of the bed. Her hands her close together, squeezing her beautiful breasts together and out. But I was not in a position to see them, I was behind Hannah, my hand on the smooth, delicate skin of her ass. Her legs were spread somewhat wide and her cock hung down (and slightly forward), her lovely, big balls dangling on the shaft.\n\nI placed my hands onto the flesh of Hannah's ass, letting my fingers sink in while I shook them. The firm muscles of my friend's as smacked together loudly and Hannah laughed. I laughed as well, but it was a cutting, almost devious noise. I didn't even recognize my own voice. It was like I was tapping into a part of me I didn't know existed. Hannah seemed to noticed it too. She turned her head over her shoulder, looking back at me.\n\n\"Em, are you okay?\" she asked, scared but excited.\n\n\"I will be,\" I said. And then, I could control myself no longer. I pushed into Hannah's ass, spreading her cheeks apart. Hannah's hands pressed into the mattress, doing her part to hold herself clear. That allowed me to spread her completely, and I could see her little pink asshole staring back at me. My mouth watered. \n\nI was strange, I suppose. I'd never felt this way about about someone before, so desperate to taste them that I couldn't hold back. In fact, the particular act I was preparing to do, I'd never done before. And even a few minutes ago, I would have been shocked by the thought. But I wasn't totally in control of myself. And I felt an intense...comfort with Hannah. I knew what she was thinking. I could feel her silently willing me on. I knew she wasn't judging me. I knew she wanted this too. She wanted something dirty and unprecedented, something to cement what was happening here.\n\nThe distance between me and Hannah disappeared in an instant. My felt my cheeks pressing against the soft skin of her ass, felt her trembling as my hair tickled across her skin. And then I felt the hot, dense kiss of Hannah's anus as the crinkled skin pressed, surprisingly, against my lips. I groaned as I pressed my lips more purposefully against my friend. My lips pressed, closed, against Hannah's asshole. I could feel my friend trembling, through this dense conduit. \n\nBut I wanted more than the feeling. I wanted to taste. Tentatively at first (because of a devious desire to tease, not because of fear), my lips parted. I kept them pressed against Hannah's asshole, but eventually, my lips parted enough that the thin edge of my tongue could slip between them. I heard Hannah gasp as the hot, wet press of my tongue met her willing anus. Her body trembled all over, and I squeezed my hands more firmly into her flesh, holding her in place. \n\nMore of my tongue poured from my lips, uncontrolled. I had just the slightest taste of Hannah's flesh, and the feeling of her body. It was not nearly enough. I needed more and my body would have reacted, even if my mind had resisted. My whole tongue poured from my mouth, and the salty flavor of Hannah's skin filled my mouth. I pressed my tongue, flat and soft, against Hannah's anus I could feel the delicate ridges and pleasing denseness of her body. My tongue began to lap, up and down across Hannah's anus, and as I did, I felt the ridges of my tastebuds touching on the smooth, warm skin on every side of Hannah's anus. The flavor was just as sweet and clean, but the flesh was less dense, creating a lovely contrast. \n\n\"Holy fuck Em,\" Hannah gasped as I felt her back arch, \"Eat my ass, Jesus.\" She was trembling all over, but she wanted more. I was more than happy to oblige. Soon my cheeks were wet with saliva and Hannah's skin was supple and slick. I sensed, rather than saw, that Hannah still needed more. Despite the fact that her balance was precarious, I felt one of her hands rise from the bed. I knew that a moment later it was cupping her breasts, maybe squeezing gently on her nipples. At the same time, Hannah pushed her hips back, driving her ass into my face (and her balls into my chin).\n\nI realized then that I needed more as well. My body moved quickly once again, naturally and on instinct. I just allowed myself to act. My right hand rose from my side and it reached between Hannah's beautiful, thin legs. I felt my fingers bump against Hannah's hard shaft and I heard her groan at my touch. I opened my hand and soon, I felt my palm press against Hannah's shaft, a thin sheen of hot skin above a rigid bar of flesh. My hand closed around Hannah's big shaft, my palm seemed to vibrate around her. In fact, my hold body felt like it was shaking. It felt so incredibly dirty to grasp my friend like this, while my tongue was still pressed in her ass.\n\nAs my tongue continued to work up and down on Hannah's anus, I began to work my hand in the same rhythm. I felt Hannah's iron-hard flesh move across my soft palm. I was thrilled by the sensation of it, making my mouth water onto Hannah's anus. But my grip was tight, I desperately wanted to feel her, and I felt the friction of her skin against mine. Hannah didn't object, but I knew that she could feel it. That just wouldn't do. This wasn't perfect. Yet.\n\nMy hand slipped down to the end of Hannah's shaft. I could feel the tip of her penis against the palm of my hand. I held it in place. At the same time, I began to move my tongue down. First, it moved smoothly against Hannah's wet anus, the naughty denseness now familiar, bu t no more exciting. But I didn't stop when I reached the bottom. I let my tongue move along the delicate line of flesh below Hannah's anus, drawing down so that I could feel the hardness of her shaft as it began below my tongue.  \n\nI stopped there for a minute as I heard Hannah panting and moaning. I could feel Hannah's big balls against my cheeks and, despite the fact that I'd had something particular in mind, I was easily distracted. My mouth watered at the thought of Hannah's balls. So big and yet so feminine. I turned my head to the side, breaking my lips open and searching desperately with my tongue. Soon, I felt the smooth, soft skin of Hannah's scrotum against my tongue. She tasted sweet and clean. I moved my lips closer, scooping her heavily ball up with my tongue. In a moment, Hannah's beautiful testicle popped into my mouth.\n\nI sucked on it gently, feeling the smooth roundness of it against my cheek. Hannah's scrotum, pulled tight, felt smooth and almost glassy. Just below that I could feel the unbelievable denseness of Hannah's testicle. I moved my tongue around it lovingly bathing Hannah's ball with my tongue and tasting her flavor.\n\n\"Oh my god!\" Hannah gasped, \"I love that Em, don't ever stop!\" Hannah begged. But I was already bound to move. Hannah cooed quietly as her ball moved from my lips, popping cold out into the air. But, because I wanted to give Hannah what she wanted, and, because I'd enjoyed it as well, I moved my lips to the other side of Hannah's shaft Soon, I found her other testicle and took it into my mouth. I repeated the same loving, bathing actions, tasting her flavor and feeling her smoothness. Hannah gasped and shuddered as I worked.\n\nI could have stayed like that for the rest of the cruise. But soon my original purpose pulled on my mind. I had to act now. Once again, I let Hannah's testicle slip from my mouth. And then my lips returned to Hannah's shaft. I was more excited now. I could feel Hannah's cock pulsing and shaking against my lips. I knew she was excited as well. \n\nSoon, my lips pressed against my fingers and I knew I'd climbed down Hannah's shaft, to her tip. I tilted my head to the side, dropping it down and keeping my lips against the shaft. I could feel the tip against my lips and I could feel Hannah's hips moving, she knew where I was going. I opened my lips and let my tongue slip out. I dragged my tongue against the tip of Hannah's penis and then, quickly, took that tip between my lips. I swirled my tongue around and heard Hannah groan with pleasure. A small amount of salty pre-cum had formed on the pink tip of Hannah's penis and now it was pressing against my tongue. I swallowed it down, moaning at the naughty flavor of it.\n\nBut I didn't have any time to savor. As my tongue moved on Hannah's shaft, she grew impatient. Or maybe it wasn't that. Maybe it was just instinct. She didn't speak or urge me forward. She just started to drop her hips, driving her cock down. I felt it slip between my lips and press into the inside of my cheek.\n\nInstantly, I reacted. I wanted to give Hannah exactly what she wanted. Whatever she wanted. I quickly turned my body, keeping my tongue on Hannah's soft, glassy tip in my mouth. More precum dribbled into my mouth as I rolled my body over and dropped onto my back on the bed. I was now laying between Hannah's legs, my head pointing up towards Hannah's breasts, my feet pointing down the same direction as hers. I was bent slightly at the waist, so that I could keep Hannah's cock in my mouth. It was a slightly uncomfortable position, but Hannah's naturally reaction quickly got me into a more comfortable position.\n\nHer hips drove down against and now, lined up more cleanly, Hannah's cock didn't drive into the side of my cheek. Instead, it drove simply down into my throat. I dropped back onto the bed, letting Hannah's lower belly press against my nose driving my head into the bed. Her balls were against my chin. Hannah's legs spread wider, so she could get low. This was not the first cock I'd ever sucked, and I was comfortable taking Hannah's hard penis into me. But I was so excited, that it was more easy than usual, somehow. I felt the shaft press through my lips and across my tongue. I could feel her urethra pulsating against my tongue. Soon, felt the hard tip pressing into the back of my throat. I didn't gag, despite Hannah's size. I just felt my throat close around her, holding her in place.\n\nHannah was too close now for delicacy. I remained frozen on the bed, my mouth open. But Hannah was active. Her hips rose and fell rapidly. Her cock slipped in and out of my mouth, driving into the back of my throat. I could hear her panting and I could feel her muscles contracting against my body. I was not totally passive. My left had hand dropped down to my breasts, finally granting them relief as I twisted and pinched on my nipples. At the same time, my right had had dropped down to my soft cock. I squeezed my soft flesh, contrasting it with the iron shaft pressing into my throat. ",
        "\"Oh my god Em! I love you!\" Hannah yelled. All of the sudden, Hannah's body went entirely rigid. Her hips, half-pressed against my face, trembled and rocked. Her cock, was pressed directly against my tongue. I started to swirl it rapidly as I felt he urethra pulsing rapidly. I felt her balls seize against my chin. And the, sudden, my mouth was filled with flavor. Hannah's delicious, salty cum poured thickly into my mouth. Soon my tongue was coated and my groaned at the deliciousness of the flavor and the perfection of the experience. More and more cum poured into my mouth as Hannah's balls shook against my face. Hannah was moaning and crying and gasping all at once. The whole time, I kept my tongue moving, bathing it in my lover's cum and twisting around on the tip of her shaft.\n\nPart of me wanted to save Hannah's delicious cum in my mouth. I wanted to have it coat my tongue for the rest of my life. But something deeper, more primal, would not allow me. I swallowed down every drop of my lover's cum as soon as it splashed across my tongue. I could feel it, thick and hot, dripping down my throat and settling, heavy in my stomach. I could feel the warmth emanating out all over me. The flavor of Hannah's love on my tongue.\n\n\"Oh god, too sensitive!\" Hannah gasped finally, as the last few drops of cum poured into my mouth. And Hannah dropped over to the side on the bed, my cock popping out of her mouth. She lay on the bed, panting, with her hands resting on her forehead. She was smiling. \"God Em, that was the best...\" She began, but she couldn't even finish it. Instead, she just let out a tired little laugh and stretched herself on the bed. We lay for a few seconds, catching our breath. \n\nAfter awhile, I rolled over onto my side, looking at my friend. I saw her chest rising and falling rapidly as she sucked the oxygen into her lungs. More importantly, I saw that, despite her fatigue and the fact that she'd just cum, I saw that Hannah was still hard. Her thick cock was sticking up, angling towards her face. The tip was dripping with my saliva and Hannah's cum. My mouth watered looking at it. I was tired, but I wasn't done.\n\n\"This doesn't happen very often,\" I heard Hannah say, and my eyes turned quickly towards her face. Hannah was looking at me, a mischievous smile on her face. It was clear she was thinking the same thing I was. She was still hard, somehow. We couldn't let that go to waste. And then, despite the fact that no words passed between us, Hannah and I began to move in unison. \n\nHannah rolled off of the bed quickly, putting her feet on the floor and then immediately beginning to walk. There was a small desk in our stateroom (under the television) and Hannah grabbed the chair that sat against it, spun it around, and placed it in the center of the room. I was already up and out of bed myself by the time that Hannah sat down on the chair. She kept her knees together, pushed her cock up between her thighs. She craned her neck and bent her head over her cock. I watched a thick blob of saliva drip from between her lips and land precisely on the tip of her penis. Hannah's hand rose quickly, and I saw her wrist turning as she worked the spit over her shaft.\n\nWhile Hannah had been preparing, I had been doing the same. I was standing next to her chair, looking down at her. I'd thrust my hips back, pushing my ass out. At the same time, I was spitting into my hand, a big glob that mixed my saliva with the last remnants of Hannah's cum. I brought my hand around behind my back and slathered the saliva thickly on my asshole. My body tingled as my fingers tickled across my anus. But I could feel that, even before I added my spit, that my asshole was completely soaked. Even inside was was wet, where Hannah's tongue had bathed me. Now I was dripping wet, and ready.\n\nStill without talking, Hannah and I finished our preparations. Hannah leaned back slightly in the chair. At the same instant, I lifted my leg up and threw it over Hannah's thighs. Up on my tiptoes, I was straddling Hannah's knees, her cock just a few inches in front of me. Hannah eyed me hungrily, I even heard a noise in the back of her throat. Her hands moved quickly and in an instant I felt her soft, but strong, hands grasping my waist. She didn't have to pull me forward, I inched towards her and let her arms wrap around my hips. I shivered as I felt her cock slip against the inside of my thigh. Her hands slipped around to my ass and I felt her spread my cheeks apart, the air felt cool against my asshole. I pushed the hair out of my eyes and looked down towards Hannah. She was looking up at me, her eyes were on fire.\n\n\"Hannah. I need you inside of me,\" I said. I think I'd said that line before, to someone at some point. I had been trying, at the time, to sound sultry and sexy. It was almost like I was trying to parrot a line from a porno. But this was something entirely different. The statement came out of me, soft and delicate. There was no affected wantonness in it, just an honest declaration of my needs. I felt the need, deep down. All the way from the bottoms of my feet. Hannah smiled at me sweetly, a smile I knew but somehow didn't. She shook her head.\n\n\"I need you all around me,\" she said, and I felt the depth of her meaning in six short words. Hannah's hands began pressing on my hips and my knees began to bend. I reached one of my hands behind my ass, grasping down and finding the tip of Hannah's cock. She gasped as my hand wrapped around her shaft. She felt so incredibly hard and seemed to pulse under my palm. I moved her cock even as I bent my knees further. Soon, I felt the top of Hannah's cock pressing into against my ass cheeks. My skin was so slick and wet, there was no friction. With my hand, I expertly guided Hannah's penis toward my dripping asshole. I felt her brush against the sensitive skin and groaned.\n\n\"That's it baby,\" I moaned, \"right there!\" I felt Hannah's hand press down and her hips thrust up. She was quick, but gentle. And my well-lubricated ass wanted her so badly, it was like I opened up for her. I felt the bulbous tip of Hannah's penis press against my sensitive asshole There was the shortest instant of pressure and then I felt the tip slip inside of me. I felt myself shuddering, even though I felt no pain. I could feel myself stretching and accepting Hannah. She kept thrusting and pulling and I could feel more and more of her long, thick cock slipping inside of me. My relaxed muscles squeezed around her, tight enough to hold her in place, not tight enough to pinch. Once again, it was like our bodies were made for one another. Inch by inch, Hannah's cock disappeared into my body. I felt my ass settle onto Hannah's lap, I felt my limp cock press against her stomach, and I felt her hard cock, deep inside of me.\n\n\"Oh god, your cock is incredible!\" I groaned as I shook my hips slightly.\n\n\"Em, you're so tight. This is so good!\" Hannah responded. But we knew we didn't need to talk. I was feeling everything that Hannah felt just as certainly as she felt everything I did. And for a moment, we sat in awe of the moment.\n\nWe began moving at the same time. I leaned forward, bending my neck down. Hannah wrapped her arms around my waist again, pulling me forward (and driving my cock into her ass harder). She also tilted her head back, leaning towards me. Our eyes closed at the same instant and Hannah's lips pressed into mine. In and instant, our mouths were open and our tongues were crashing together. The same electrical feeling from before flowed through me, this kiss was no less magical than the last.\n\nThen I felt Hannah's cock twitch inside of me. Just the slightest movement. But it made my back arch as the nerves all throughout my body sang. Involuntarily my hips began to rock. My thighs slid up and down along Hannah's lap. Now Hannah was doing more than twitch. She began to rock her hips as well, moving to the same rhythm that I had taken up, falling in with me exactly. But she moved in mirror image to me, so that she thrust forward and pulled back when I did. The end result was that Hannah's beautiful cock was slipping in and out of my willing asshole. I could feel her shaft rotating inside of me, touching every sensitive inch of me and forcefully massaging my prostate. \n\nWe were still kissing as we moved and I could feel Hannah's hot breath against my face. But then a new sensation was added into the mix and my eyes fluttered open. At first, I couldn't even place what it was. There was just a sudden... intensity that hadn't been there before. I kept kissing Hannah, but my eyes moved, trying to find the source. My body came to the realization before my eyes. Hannah had reached down between my legs while she was thrusting into me and she had wrapped her delicate fingers around my soft cock. She was squeezing it and stroking it to the same unbelievable rhythm of our hips. I felt my soft flesh squeeze between her fingers. Her gentle touch, mixed with the firm thrust against my prostate was incredible. My eyes closed again.\n\nHannah and I didn't last much longer. The magnitude of the moment was too much, we were too well suited for one another. It was just so unbearably perfect in every way. I remember when it started. We thrust forward at the same instance, and I could feel Hannah's urethra bulge inside of me. I knew what that meant. But that same thrust pressed just so exquisitely against my prostate. I felt my muscles tighten all over and my thrusting instantly stopped with Hannah pressed deeply inside of me. She stopped as well. I could hear her voice croaking in the back of her throat.\n\nHannah was cumming inside of me now. I could feel the hot wetness of it, somehow. I could feel her spraying my insides and, it was like every inch that she touch instantly burst into pure pleasure. Like her lovely sperm was the catalyst and it could make any cell in my body pour over into an orgasm. But not limited to where she'd touched me. Instead, it was like her hot cum soaked through my tissue and my veins I could feel the intense pleasure of her spreading out through my blood, carrying her to every corner of my body, until the pure pleasure of her touch flowed into my brain. And then I ceased to understand anything, just overwhelmed by the pleasure. \n\nIt wasn't that I passed out or anything silly like that. I was heightened in the awareness of my body. So intense that everything else seemed to fall away. Well, not everything. Or maybe everything, it hard to explain. Because there was one thing outside of me that I was still aware of: Hannah. In fact, I was hyper aware of her as well. It was like...I could feel the pleasure flowing through her as well. It was like we had melted into a single whole...something beyond words. It was something more than love. We were one.\n\nWhen I recognized where I was again, Hannah and I were both lying on the floor (I think we'd both fallen off of the chair). Her cock had slipped out of my ass. Hannah was sitting against the side of the bed, panting. Her soft cock was now draped over her leg. I saw that she was moving her fingers around on her stomach and her breasts. For a moment, I was confused about what she was doing. Then I saw what was happening and I moaned. Hannah was scooping my thin, white cum up off of her skin and the shoveling the salty liquid into her mouth. She moaned with delight as her delicate, sticky finger passed between her pouty, pretty lips and my cum soaked her tongue.\n\nFor a moment, I was jealous. I felt thirsty. Hannah's eyes flicked up when she noticed me stirring. She smiled at me and then glossed her lips with my cum. She still panting too hard to speak. But when she looked at me I could feel her...it was weird. I could feel her inside of me. Her cum, I could feel it again. I pulled myself up into a squatting position, my soft cock dangling sated between my legs. I put my hand down below my asshole and I could feel the cum already dripping out of me. I pushed, forcing Hannah's juices out of me. A large amount of it slipped out of me easily and pooled warmly in my palm. There was so much. But despite how excited I was to have Hannah's cum in my hand, it almost felt like a mistake. I could feel its absence. I needed her back inside of me\n\nMy mouth was watering and I didn't hesitate. I quickly brought my palm up to my face. I could smell Hannah's delicious aroma in her pearly, thick cum. I wanted to admire it, but I needed it more. I pressed my palm against my lips, my tongue pouring out of my mouth. I slurped Hannah's salty sperm into my mouth. My lips moving frantically. I desperately needed to get every drop of Hannah back inside of me. I sucked my fingers clean, my fingers glistening with spit. I swallowed all of it down as fast as I could get it in my mouth. Hannah's flavor soaking my tongue so I could savor it, even as I ate. \n\nAs soon as my hand was away form my face, I almost jumped. Hannah had moved, she was right in front of me, smiling. Her arms wrapped around me and we tumbled to the floor of our state rooms. Our mouths found one another eagerly. Our tongues plunged together and I could taste my own flavor on Hannah's lips. I knew she could taste herself too. Our bodies wrapped together as we kissed, sharing the last of our cum back and forth. And, in some small way, recreating the strange unity we'd felt just a few minutes before. It was like we were cementing it...making that shared sensation real. \n\nEventually, our kiss broke as we panted for air. But we remained wrapped together in one another's arms. Our faces were just inches apart and our eyes open. In our exhaustion, the intensity of the moment had faded a little and we were able to look at one another without fire in our eyes. We laughed a little, but in a satisfied way. Not sheepish or embarrassed. We luxuriated in our embrace for a long while.\n\n\"What happened there Em?\" Hannah asked after a long time. I snorted, thinking of the enormity of what she was asking.\n\n\"When a transwoman and a transwoman love each other very much...\" I started and Hannah laughed. \n\n\"You know what I mean,\" Hannah said, \"I mean one minute we were just friends and then it was like...magic. At first, I'd thought that maybe we'd warm up if we pushed things for awhile. But there wasn't any warming up it was...instantaneous. I've never had anything like that.\" And as Hannah spoke, I knew exactly the sensations she was describing. I'd felt them myself. \n\n\"I don't really know,\" I said, but even as I said the words it didn't sound right. I kept speaking not sure where the words were coming from, but knowing that they were right, \"I think that we think about passion like it is some sort of thing that exists or doesn't. Like you meet someone and want them or you don't. But I think there are different kinds of passion. There are...match lights. Fire that bursts out of cold nothing for an instant and then fades away a short while later. And then there is a slow burn. The embers stoking over time until it bursts into flames. I think we've been building to this for a long time Hannah. And neither of us recognized what was happening or what we wanted. We fell for each other so slowly we didn't even know it had happened And then we gave the embers just a little bit of oxygen and they, you know, it was fire.\" As I spoke, I could see Hannah nodding. I could feel the truth I was saying in the recognition I saw in her eyes.\n\n\"I don't know what I felt a couple of hours ago,\" Hannah said \"It's like looking back on forgotten dream. It's just blank. I can't imagine that I didn't realize then that I needed you so badly. It's was so obvious. It was right there. But I know that right now, Em, I love you. I can see as far out into the future as it is possible for me to see and I still love you. I don't ever want to be away from you again.\"\n\n\"I love you too, Hannah,\" I said, my voice catching in my throat, my eyes watering.\n\n\"Will you stay my wife?\" She asked.\n\n\"Oh God, Hannah, of course,\" I said, and our lips found each other once again. We kissed and held each other all night. We stepped off the ship the next day, hand in hand. No more jokes, no more denial And we really did live happily ever after.\n\nAnd isn't that a romantic story?\n\nThe End\n\nNote: I honestly write so that I can hear the comments you all give. So please just tell me what you think. Even if it is just a sentence or two (though I always prefer more). Consider that your payment for a free story. And if you like this, I beg you to read my other stories and comment on them too. I know who my loyal readers are and I really appreciate you. Thanks!\n\nYKN\n\nP.S. I do one edit of my work and I try to be thorough. But I figure when it comes to handing out free erotica, you all would be better served getting it fast (if a little rough), than waiting for me to polish it like I was getting paid for my work. So, in short, I know there are some errors and I don't really care that much. Don't complain about the soundtrack in your porno, don't sweat the typos in your erotica. Thanks."
    ],
    "authorname": "YKN4949",
    "tags": [
        "shemale on shemale",
        "romance",
        "tranny on tranny",
        "translesbian",
        "anal",
        "analingus",
        "married",
        "friends",
        "rimjob",
        "soft dick"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/a-romantic-story-1"
}