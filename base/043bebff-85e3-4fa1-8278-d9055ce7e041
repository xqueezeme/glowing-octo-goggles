{
    "title": "The Roommates Ch. 03",
    "pages": [
        "Three weeks later, with that video looked at almost bi-daily, I was ready for another viewing. It was around 9 Friday evening and Heather was still out since school and not expected to be back anytime soon.\n\nI finished up my socializing and headed to my room to commence video watching.\n\nNot wanting her to find some moist panties only to discover all her panties damp, I had only done the pantie thing no more than twice per laundry cycle. Unfortunately with her normal laundry day being Saturday morning, I knew that I had already reached my limit of two, so I passed by her room without stopping.\n\nSettling in to my chair with my shorts and boxers in a pile next to me, I fired up the video. As usual, within the first couple of minutes, my cock was rock hard. I started to slowly stroke, milking it for that first drop of precum.\n\nThe moment that Heathers finger dove into her tight pussy, my cock flexed, slowly pulling the first of my man lube to the surface. It didn't have much time to pool before my fist would swoop over the soft skin of my cockhead and spread it down my shaft.\n\nWith every drop of precum that makes its way out, it is adding to the previous drops that are already coating the head and shaft. The more man lube, the more slick my cock was. The more Heather played, the more I played. The more I played, the more man lube. \n\nWe were well into it with both of us deep into moment, with me stabbing away at my sloppy cock and Heather swiping away at her clit. Knowing that she was going to cum soon, I hurried my stroking. \n\nWith my orgasm building, as if in a nightmare, I was startled by some headlights shining through the cracks in the blinds. These lights are coming from Heathers parking spot which is outside of my bedroom window.\n\nSeconds away from blowing my load, I have to jump up to peek at who is parked there. Damn, it's Heather, what the fuck is she doing home so early, I said to myself. None the less, it meant an immediate end to this masturbation session. \n\nI had 45 seconds best before she walks through the door. Knowing that I had a raging hard on, I ran to my drawer and pulled out a pair of my sports boxers knowing that they will at least not let my cock pitch a tent. I also grabbed a hoodie that's bagginess would cover any bulge that may be seen under my shorts.\n\nStopping the video, I ran to the living room, kicked on the tv and sat down awaiting her arrival. I waited for only a few more seconds before I heard the door being opened. \n\nAs I was still excited from the mad rush, I wasn't really lying when I jumped around saying, \"holy crap you scared me, what are you doing home so early.\"\n\nSeeing that she was obviously really upset about something, she just slammed the door with no answer and turned to make a hasty retreat to her room. \"Hey, what's up,\" I ask again.\n\nThis time as she opens the door to her room, she turns around and in stereotypical drama style yells that she just walked in on Rick fucking some bitch, turned to her room and slammed the door. It was obvious that she was in hurt mode and not the mad mode.\n\n\"Hey Heather, you know that I am right out here if you need me for anything,\" I spoke through the door to her knowing that I probably wouldn't get a response. I grabbed my phone from my room and headed to the living room to wait.\n\nI watched tv for a minute before I sent a text to a friend asking him if he could pick up a couple of things for me and bring them here. After briefly explaining in as matter of factly as possible, all I had to say was Heather was having a bad day but I should stay.\n\nNo problem, be there in fifteen, I'll text you when I hit your parking lot, he texted back.\n\n10 minutes later he was sending me the text letting me know that he just pulled up. \n\nAnnouncing that I was going to go grab something from my care, I walked out to meet my friend. He passed me the bag and I gave him more cash than would cover the bill. Thanking him with the \"I you one, man,\" I turned to head back in.\n\n\"I'm back\" I said, loud enough for her to hear me. Walking to the kitchen, I set the bag on the counter and fetch the bottle opener before pulling a bottle of wine from the bag. Taking two glasses out, I uncork the bottle and poured into each glass.\n\nTaking the glasses in one hand, I reached into the bag to retrieve the remaining objects which happen to be a joint and a lighter and cupped them in the hand that would carry the bottle. I walked down the hall to her room and knocked.\n\n\"Hey, can I come in, I brought you something.\"\n\n\"No, go away,\" she replied in a pouty voice.\n\n\"Aw c'mon, let me come in, I promise it will make you feel better,\" I pleaded again.\n\nAgain, \"No, go away.\"\n\nOn a hunch, I tried the door knob to find that it was unlocked. Entering her room, I teased that I had made my way in and now she was going to have to have a glass of wine with me.\n\n\"Damn you Dave,\" she shouted as she threw a pillow at me, narrowly missing the two glasses of wine.\n\nContinuing forward, I sat on the edge of her bed where she was lying on her stomach with her face in the pillows. \n\n\"Here, have a glass of wine with me, it will make you feel better, at least physically. Seriously, we don't have to talk, we don't have to do anything, but have a glass of wine.\" \"Deal?\" I asked.\n\nHeather did not reply but she hadn't told me to go away this time ether, she just laid there with her face in the pillow. Finally, after a minute of stillness and silence, she rolled on to her side and sat up with her back to me. \n\nShe held her arm back waiting for me to hand her a glass. When I gave her a chalice, she took it and stayed with her back to me while she put it to her lips and took a sip.\n\nAs she sat there continuing to sip on her wine in silence, I put my hand on her back and started to tenderly rub her back. Up until this time, we had never had any physical contact between the two of us but with the time that we have lived together we had grown kinda close and very comfortable around each other.\n\n\"Fucken dickhead\" she blurted out before taking the glass of wine and pouring it straight down her throat.\n\nI reached for her glass and as I was grabbing it, she followed my hand back around, buried her face into my chest and started sobbing again. I know there is a time and place for everything but as human nature would have it, this was the wrong time and place for this drama to be happening.\n\nNo more than 20-25 minutes ago, I was about to blow a load while watching Heather play with her pussy on my video. Now, with the combination of the cold wet spot in my shorts from the almost climatic orgasm, her arms wrapped around me with her face in my chest and the lack of any physical contact with another person for so long now, I couldn't help the fact that my cock was filling with blood again.\n\nReally bad fucken timing is all that went through my head. Even though it was a really shitty thing for me to take the video of her and lust over the show she put on, this was her time. She needed a shoulder to cry on and all I wanted was to be there for her emotionally, not physically.\n\nThankfully, the way she was sitting and leaning into me, she wouldn't have been able to notice the bulge under my hoodie. After another minute or two, she started mumbling into my chest. What I could make of it, it sounded as if she was venting her pain.\n\nAs she continued, I let her talk as I reached for the bottle and started pouring another glass for her. When I handed the glass back, she took it and downed it again in one drink.\n\n\"Is that good\" I jokingly laughed.\n\nThe reply I got back surprised me.\n\n\"Um hmm, but what I think I really need is some pot\" she said.\n\nChuckling as if to try to lighten the mood, I replied with, \"yup, that would definitely help you relax right now but you don't smoke, so now what?\"\n\n\"Your right, but I have tried it once and from what I remember from it and what people tell me is that it does numb you up and right now that sounds nice\" she rationally explained to me.\n\nWith two whole sentences spoken that had nothing to do with her issue, I held back on telling her that I had also thought the same thing and had taken action towards it. I wanted her to continue conversing with me about anything but Rick right now. \n\nI guess the wine was starting to work on her as she continued talking.\n\n\"Seriously, I mean you smoke every once and a while, right? Why do you do it?\" She knew the reason was the same, but she asked anyway.\n\n\"Well, to relax sometimes when I feel really stressed\" I replied.\n\n\"See, I think that I am pretty stressed right now and need something to relax me. With that being said, fill me another glass.\"\n\nAs I took her glass and started pouring, I asked, \"Heather, do you want me to get you some pot for tonight?\"\n\nHer still teary eye's snapped straight to my face and she than blurted out, \"What? No! You don't have to do that for me, I was just say that in the hypothetical way. It wasn't meant literally, the wine is fine.\"\n\n\"Seriously, it's not a problem, if you want to try some, it would only take a minute after I make a quick call, no problem. Personally, I think you were right when you said that what you really needed was some pot. In the state that you are in now, I think that it is a no brainer choice. I'll make the call.\"\n\nI already knew that in a while Heather was going to be high, relaxed and most importantly for the time being, forgetful of Rick. Right now, knowing that I already have a joint there with me, I was just looking for a little commitment to try from her. Even if it is a \"I shouldn't\" instead of \"I won't.\"\n\n\"No! Seriously, there is a reason that I only tried smoking once and if there is ever a time not to smoke, it would be a time like this. I mean really, don't worry about getting some, the wine is great, thank you though\" she explained.\n\nWith that being said and not wanting to pry on anything right now, I just let it go. In my head, what I was picturing was the person that gets violent and mean when they drink whiskey or something. The only puzzling thing about that thought was, to my recollection, I can't ever remember anyone that I have seen smoke pot and then turn violent.\n\nBeing the team player that I was at the time, I took a mental inventory of any breakables that we had in the living room and decided that if in the end it would make her feel better to let off some steam, then so be it, I can be her punching bag for the night.\n\nI had taken the idle chit chat as far as I could take it, but seemed to have been enough since the wine had some time to sink in and make it so she wasn't sobbing as much. Fortunately, the wine by itself, wasn't enough numb the pain that she was feeling.\n\n\"Well Heather, here's the deal! I knew that you were clearly upset and also knew from personal experience that smoking definitely relaxes and eases cares, so I had already made that call and had this delivered along with the bottle of wine.\"\n\nI held out my hand and presented the nicely rolled joint.\n\n\"Oh gawd, you really shouldn't have. There is no way that I could put you in the position to have to deal with my actions from that. As a matter of fact, please stop, I really can't smoke that with you and unfortunately, I can't and don't want to talk about what happened that first time. So feel free to have at it but seriously, I can't.\" As she spoke, she started to sound empathetic to my cause. Again, \"I won't\" was still a phrase that I still hadn't heard yet.\n\n\"I still think that you should come into the living room with me and at least take a couple of hits to relax your nerves.\" My mind still believing that whatever experience that she had the first time was merely a bad trip or something.\n\nI was trying to be as comforting as I could and explained that as long as she felt better than she did now, I would be able to take anything she could throw at me. For the first time since she came home, I saw a slight upturn of her lips as she let out a smirk of a giggle and stated, \"I bet you could.\"\n\nNot understanding what was meant by that comment, I let it slid in one ear and out the other.\n\nFeeling like she was becoming a little more sociable, thanks to the wine, I suggested that we move to the living room so we could be more comfortable.\n\n\"Well sweety, I guess I could smoke this myself but do you feel that you could join me in the living room to carry on.\" I asked knowing that a; I won't smoke in her room and b; the couch would indeed be more comfortable than sitting on the edge of her bed.\n\n\"Ok fine, but I have to pee first\" she said.\n\nThinking that it was a little off color what she said, I chalked it up to the influence of the wine.\n\n\"Kewl, I'll see you in a sec\" I said as I reached over and grabbed her now empty glass, the bottle and my glass and made my way out of her room. \n\nAs I was leaving, I had noticed the hamper was open and sitting on top of the pile was another pair of her panties. I really wasn't trying to be a perv at that moment but I have to admit the sight of those panties did, for a split second, conjure up near memories of what her panties have been doing to me over the last few weeks.\n\nUpon reaching the living room, I sat her glass down on the end table and refilled it as I did the same with mine. Finding my usual spot on the couch, I sat down and readied myself for Heather and Mary.\n\nA few minutes later, Heather entered the living room with a new wardrobe on. It was a white baggie t-shirt and a pair of grey sweat shorts. Really nothing that she doesn't normally wear around the apartment but obviously far more comfortable and casual than the slacks and blouse that she was wearing from school .\n\nAs usual, she also sat on the couch at the opposite end, kicking her legs up and tucking them into an Indian cross. With her sitting like this facing me, she was basically spread eagle with nothing but the soft material of her shorts standing between me and the very same pussy that I have shot numerous loads over.\n\nLooking at this plus the visual that I now had in my head of what was under those shorts kinda took me to that uncomfortable place. It wasn't that it would have normally bothered me, but at this moment, this was all about Heather and her problems. \n\nWow, I really need to spark this joint up, I said to myself. Heather, who was reaching for her glass just started talking again. She wasn't bashing or anything, just talking about \"how anyone could do that\" types of things.\n\nChecking before I lit the joint, I asked her if it was ok for me to smoke in front of her. Again, she said that it was fine and didn't have any issues with it, she just couldn't do it herself. Little did she realize how strong this pot was, I knew that if she stayed in the living room with me that she would still get a pretty good contact high.\n\nAs I lit up, she took her glass and again, emptied it down her throat. Exhaling the smoke, she did stop in her ranting to comment on how good it actually smelt. I'm not sure if she didn't know about contact high's or the wine was making her forget about it but, whether she actually smokes it or inhales the second hand smoke, unless she left the living room, she was going to end up high.\n\nAfter a few minutes of her rumbling on about this, that and the other, she started to ask me questions. All of which were basic relationship questions that she was asking my opinion on. I know I should have stopped the line of questions as, since my break-up, I am not exactly the best person to discuss relationship matters. \n\nTalking in another pull off my joint, I just about gagged myself as the next question rolled out of her mouth.\n\n\"How do you do it? I mean, you have been single for a couple of months now, yet I have never seen you bring another girl home or go out on a date\" She asked.\n\nIt really wasn't \"the question\" that got me chocked up, it was the truthful answer. How in the hell could I tell her the truth.\n\nWhile I was thinking of the appropriate answer, she continued on with, \"I mean, I have been without a boyfriend before but it had always been on my terms, this is different and I would like to know how someone deals with the absence of, things.\"\n\nLooking for the explanation, I took my glass of wine and threw it down my throat. As Heather waited for an answer, she reached for her glass and the bottle and was disappointed to find out that the bottle had been emptied. It was actually a good thing as the wine had already delivered all that it was going to without knocking her out and making her sick.\n\nStill without giving my answer yet, she continued her line and ended up with a face full of smoke.\n\n\"Well, I'm sure that you masturbate but that only works for so long before you would have to start desiring the feel, smell and taste of a woman. How do you do it? I only ask because I masturbate also but it has always been as an addition to sex, not a substitute.\" \n\nAgain, the truth was something that could not be brought to light. Let's see how this answer would sound, \"Well, I am in the same boat that you are, I wouldn't be able to do it ether except that between the video that I shot of you fingering yourself and the damp panties of yours that I suck on almost daily, the only thing that I am missing is the feel.\" Sounds great, but not very practical if I would like to continue owning a penis and testicles.\n\nI figured the answer that I gave was allot more applicable. Playing the devil's advocate I replied, \"First off, this is something that roommates shouldn't be talking about, but yeah, I do masturbate, but it is purely for the physical stimulation. As you know, I was really messed up from my break-up so the emotional care has been shelved for a while, hence the reason that I have not actively been looking for anyone new.\"\n\n\"I see, so how do you do it?\" she asked.\n\n\"WHAT\" I exclaimed.\n\n\"How do you do it, I mean do you watch porn or something?\" Her obvious intoxication showing itself.\n\n\"OK Miss Chatty Kathy, it's a good thing you are out of wine because I think you've definitely had enough to drink.\"\n\n\"Damn, your right, we are out of wine. I'll tell you what, I'll try and smoke the rest of that joint with you if you promise to keep talking.\"\n\nBeing that I am now pretty high myself, I know that if I keep talking in my condition that I may accidentally say something that I shouldn't. But at the same time, we are here for her and if she is going to feel any better, she will need a THC fix. Plus, if she does have a violent streak, then she won't physically be able to do any harm.\n\nAw, what the hell is it going to hurt, she is now drunk and soon to be high, she won't remember anything about this conversation later.\n\nGiving in, I tell her, \"fine, just let me go to the bathroom first.\"\n\nI knew I was asking for trouble when I got up to go to the bathroom and realized that my penis was at the proverbial half mast. This arousal was a product of hearing her voice talking about me masturbating. And when she admitted to masturbating herself, I had nothing but the image from the video in my head of her finger sliding deep between the folds of her pussy.\n\nWhile standing at the toilet, I actually felt my penis growing in my hand as a stream of pee splashed into the water. I was feeling torn by the fact that she'd just broken-up with Rick, yet I was getting aroused by her voice saying the things she was saying.\n\nBy the time that I had finished peeing, my cock had grown as much as it could while being held down for aiming. At that point, the stoned perv in me began showing itself. Alone in my thoughts, I told myself that I needed to somehow record this conversation as it would make a great companion to the video.\n\nAs I finished up and opened the door, I was surprised by Heather standing there waiting for me to come out.\n\n\"You done, good, my turn\" she said as she pushed her way by me and closed the door.",
        "This will actually give me a minute to set my phone up to record, I thought to myself. So, running to my room, I grabbed my phone and headed back to the living room. Once there, I found the video cam app and started it up. Knowing that Heather is drunk, she wouldn't be any the wiser even if the phone was sitting square in my lap, so I propped it up against a bowl on the coffee table in front of the couch with the microphone and lens aimed straight at the couch.\n\nUpon returning, she held her shorts up as she sat down, again in Indian style. This time, however, with her holding her shorts as she sat, the soft material stretched tightly against the mound of her crotch, outlining the curves of her smooth pussy. Damn, this is going to be more difficult than I had planned, I said to myself.\n\n\"Alright, where were we?\" she asked\n\n\"We were about to kill this joint. That's where were\" I said with almost too much enthusiasm.\n\n\"Oh yeah, but I can only advise you to pay me no mind if I start to get weird\" she explained.\n\n\"Heather, I'll take care of you, don't worry, you just enjoy not caring.\"\n\nWith that, I pulled the joint to my lips, fired it up and passed it to her. She pursed her lips and took a very large hit, almost to the point that it would have been hard to believe that she was a non-smoker. That thought was instantly erased when she started coughing out everything but the kitchen sink. \n\nSurprisingly, instead of complaining about it, she merely stated that it tasted better than she remembered. I told her that the guy I got it from only buys good pot. Naively, she said that she was un aware that there were different breeds of marijuana. I continued by explaining the differences and informed her that this was a good relaxation strain.\n\nNot missing a second beat, she jumped back into the questions. \"Ok enough pot talk. So how do you do it?\"\n\nWanting to give the pot a little more time to kick with her, I played dumb. \"I'm sorry, refresh my memory. How do I do what?\"\n\n\"How do you keep yourself satisfied? I mean we both already know that we masturbate, but the reasons are/were different. I masturbated to enhance sex, you masturbate out of necessity. What do you do to get yourself in the mood? Is it porn, magazines, imagination? What motivates you?\"\n\n\"Wow, we must be feeling allot better now, huh?\" I giggled.\n\n\"I will be feeling allot better once you answer the question.\" She shot back. \"Listen, like you with women, I am done with guys, at least for a while. I am in unchartered waters, if you catch my drift?\"\n\nI must have been really stoned because in her state, that comment actually made sense and on top of that, I was about to entertain this some more and just go with it.\n\n\"OK, so you mean to tell me that you never masturbated as a young girl?\"\n\n\"Not the same as how I do it now!\"\n\n\"How so?\" I asked.\n\n\"Well before I lost my virginity, I really had no, let's say, reference. I guess I can say that I did it only because it felt good, I didn't know why though. Since the first time I had sex, I never had the need to masturbate unless it was during and part of sex. Do you understand?\"\n\nTaking another pull from the joint, I start my monolog. \"Yes, I think I understand and yes, you had it almost right by saying porn and imagination, but I don't look at magazines.\" \n\nHere I am trying to be Mr. caring of her feeling when apparently, she is the one falling off the wagon. In the middle of my answer, I lean over towards her to pass the joint and my eye's glanced across her lap to notice a dark spot the size of a silver dollar dead center of her crotch.\n\nWhat the hell, I thought to myself.\n\n\"Well, go on. What kind of porn? Who do you imagine?\" She broke the sudden silence unaware that I had noticed the wet spot.\n\n\"Ok, so for me, it's masturbation porn.\"\n\n\"Really?\" she interrupted.\n\n\"Uh huh, just me and her, no one else. I'm not into toys that much, ether, just hands.\"\n\n\"Wow, that's actually pretty hot, go on!\" Again speaking up.\n\n\"As for whom I imagine, Well, I guess the normal untouchable Hollywood celebs.\"\n\nThis time when she jumped in again, I had stop and think about the answer that I should give her.\n\n\"Have you ever thought about me?\" She asked with an almost ashamed look on her face.\n\nKnowing that a \"yes\" answer would lead in two directions ending with the same result; one way might weird her out and want to leave, but I don't see that happening. The other would be that we end up having sex tonight and maybe the next, but in the end it would get weird for her and want to leave. \n\nA \"no\" answer on the other hand stops this line of questioning immediately. This little lie was a no brainer so I told her that I hadn't.\n\nI was instantly thrust into another, what the fuck, moment when she just threw her hands to her face and stated sobbing again.\n\n\"Heather, are you ok, is this what happened the first time?\" \n\nThis time she popped her face up and with a great look of disappointment, snapped back at me; \"What the fuck are you talking about? I'm talking about how I just realized how ugly I really am!\"\n\n\"Now, what the fuck are you talking about?\" I asked trying to figure out what on earth makes her think that she is ugly.\n\n\"What could be worse than walking in on your boyfriend who has his dick shoved into another woman's pussy? Let's see, what else can make you feel even less attractive than you already feel? Hmm, how about the only single guy I know, my roommate. As it happens, I am the only female that he really knows. Unfortunately, as luck would have it, I am not even attractive enough to have my single friend fantasize about me.\"\n\n\"Oh whatever Heather, you are hot and I do fantasize about you.\" I quickly changed my answer.\n\n\"Now you're just saying that to make me feel better.\" Skeptical as she may be.\n\n\"No, really. If the truth be known, I think about you allot. I think you are hot and the image of you coming out of the bathroom a few weeks ago has stuck in my mind ever since\" I tossed back.\n\nShe stopped sobbing long enough to start asking curious questions. \"When you say allot, how much exactly is allot?\"\n\n\"Mostly twice a day, sometimes once, sometimes three times.\"\n\n\"Wow, is that how many times you jack off or how many times you think about me?\"\n\n\"Both!\" I said.\n\n\"Haha, so that would mean that every time you pull on your dick, you are thinking of me. You almost had me with that line of bull shit. Nice try.\"\n\n\"Heather listen, ever since I saw you naked, I can't help but picture your cute little patch of fur and your perfect breasts with nice pink nipples. Believe me when I say it's easy to sustain from other women when I have you in my head.\"\n\nFor the first time in a while, I heard a giggle come from her. It must have been over the bush that I'd mentioned, only she didn't know that I knew about the, now void of said bush, pussy. As I waited to see if she was going to explain, I glanced back down towards her crouch and to my disbelief, noticed that the dark spot that I had noticed earlier was now large enough to fully silhouette the folds of her pussy lips.\n\nPlaying coy, I ask, \"what?\"\n\nGiggling again, she returns with, \"Oh nothing, I just had a random thought run through my head, but keep going. Oh, is there any more of that joint left?\" \n\nNice try to change the subject, I thought to myself as I handed her the roach. \n\n\"No no no, what could have been distracting enough to interrupt me telling you what I think about when I jack off. C'mon let's hear it?\" I demanded.\n\nObviously enjoying that last pull, she pleaded that she couldn't tell me. Just as I was about to push her again, She continued speaking.\n\n\"I can't tell you but I could probably show you, is that kewl?\" she blurted out.\n\nChuckling at the fact that she would rather show me that her pussy was smooth than speak the words, I played with her saying, \"This better be good since it's pretty hard to explain, only to be interrupted by a \"random thought\"\".\n\nAs she began to get up from the couch, she continued with, \"well, I like it but you'll have to be honest with me, as a guy, if you like it or not.\"\n\nIf she could only see the solid sausage that was being concealed by my hoodie, that comment would've never been necessary. Also, the fact that for almost the whole month, I had been blowing load after powerful load staring at her baby smooth flesh in the video.\n\n\"Ok, let's see what'cha got\" I answered.\n\n\"Ok but you have to promise that you won't laugh and you will tell me if you think it looks stupid\" she said as she positioned herself right in front of me.\n\n\"I promise\" I said as my head was secretly doing backflips in anticipation.\n\nHooking her thumbs into the waistbands of her shorts and panties, she started the slid her shorts down her hips, stopping where her bush would have begun to be exposed, \"you promised not to laugh, right?\" she asked again.\n\n\"Alright, but remember you promised\" she said as she bent at her hips while pushing her clothes to her feet. \n\nAs I felt my cock jump in anticipation, I had remembered that my phone was still sitting on the table behind her. What was to be an audio recording is now becoming another video. And to start that video was Heathers ass bent right in front of my lens. It couldn't have been better if she had planned it.\n\nWith her shorts and panties, now around her ankles, she stood back up straight, put her hands on her hips and said, \"so, what do you think?\"\n\n\"What do I think?\" I repeated her question. \"I think you're beautiful, what on earth would make you think I would laugh. Honestly, I am floored that that dickhead would need to go and do what he did.\"\n\n\"I know, right! Well, I like it. It feels allot nicer than before I shaved it\", she said while softly running her fingers over her smooth pubic bone.\n\nI had a feeling that this all was induced by the alcohol and pot so when she bent back over to grab her shorts, I was disappointed to see it go away. I was delightfully happy when she stopped at about her knees. Apparently, she didn't realize until now that her shorts were completely soaked.\n\n\"Did something get spilled on the couch because I must have sat on something wet.\" She blankly said.\n\nBelieving that she probably wouldn't get the insinuation, I jokingly said, \"well, it must have spilt over the entire couch.\"\n\n\"Well fuck, I don't want to go and put on some new clothes. I showed you and now you've seen. It won't bother you if I just sit here like this?\" She asked, already knowing that whatever I said, she was going to do it anyway.\n\n\"No, go ahead, knock yourself out. We are both adults here and can remain mature\" I announced.\n\nUnfortunately, my testicles had other thoughts. Being that they are still full of the cum that was so close to being emptied before Heather came home, my balls were only doing what they know to do, ready themselves to explode.\n\nUntil recently, within the last few weeks, I was unaware that I could have an orgasm without ever touching myself. That was only from visuals. I would now, have to muster every ounce of self control to try and keep that at bay. I was horrified at the thought of us just sitting there and in mid conversation, I bust a nut.\n\nOnce she sat back down, she unwittingly crossed her legs back into the Indian cross, exposing her now naked sex aimed right at me. As much I as was kicking myself for even thinking it, I know that I wouldn't be able to sit there and not coat the inside of my boxers, so I stood up and offered to grab her a blanket.\n\nIgnoring the blanket offer, Heather stated instead, \"Wow, your right, something must have spilt on the couch.\"\n\nNoticing that she was staring straight at my crotch, I also looked down to notice that my hoodie had bunched up as I stood and exposed the giant wet spot that had over taken my shorts.\n\nI started to feel kind of flush from my embarrassment at being caught, why? I don't know! What I did know was that for the first time in over a month, I was standing in front of a beautiful half naked woman that has been the subject of my fantasies. I felt like a young boy again looking at a woman for the first time.\n\nI excused myself for a minute while I fetched the blanket for her. I also stopped long enough to throw on a new pair of shorts. As most men do, I began talking to my dick telling it that no matter what happens tonight, I would still be getting it off. But it had to behave as long as heather and myself were still talking.\n\nUpon returning to the living room, Heather made her disapproval known as she noticed that I had changed short.\n\n\"What were you thinking by changing your shorts, silly. When you sit back down, your gonna get them wet. Come here\" she ordered as I was giving her the blanket.\n\nAs I approached her with the blanket, she sat up, reached out and grabbed my new shorts by the waistband and pulled down with no mind for what she was about to unleash. What did happen is, as soon as the waistband released my cock, it flung back up to its normal rock hard stance, flinging a little gob of precum into the air, stretching into a fine string that landed straight across her cheek to her forehead.\n\n\"Oh shit, I'm sorry\" I said as I reached out and wiped the slick fluid from her face. \n\nNot that anything she say's right now wouldn't have surprised me, but when she replied back, I had to think about something totally off, just to not blow my load all over her face right then.\n\nShe giggled and said, \"It's all good, if nothing else, it also give me something more to think about when I am masturbating\" winking at me.\n\nStartled by this comment, I blurted, \"what?\"\n\n\"What do you mean what? You say that you jerk off all the time thinking about me. Well, seeing that I am now going to have to start masturbating, I sure as hell am not going to be thinking about that asshole that, for all we know, is still fucking that bitch right now.\n\nCatching me off guard with this new outburst, I forgot about my current state of exposure. I stretched the blanket over her lap and reached down to caress her in my arms. What I had forgotten was that my half erect penis was still just flopping around as I embraced her, coming to rest on, what I would notice in a minute, her breast.\n\nAfter a short little outburst of tears, Heather mumbled into my chest with me barely able to decipher that she was asking if there was any of the roach left. I told her no but I would grab another joint. \n\nI broke our embrace to go and fetch another stick. I slyfully scooped up my phone that was behind us and excused myself to my room for a second. As soon as I got to my room, I shot off another text to my buddy. I knew that it would only take a second, being that he lived in the same complex and I wasn't asking for him to go and buy another bottle of wine.\n\nReturning from my room with my shoes in hand, I explained to Heather that it was in my car and it will only take a second.\n\n\"Hurry up\" she whimpered as I quickly exited the front door.\n\nI turned the corner to my building to find my buddy already waiting for me at my car. \"How's she doing?\" he asked.\n\n\"She is pretty shaken right now but she will be fine, I'm sure\" I answered back.\n\n\"Kewl, let me know how she's doing later\" he said as we departed company and I returned to my unit.\n\nUpon entering the apartment, I asked Heather if she wanted to fire it up or she wanted me to do it once I returned from my room. She had told me that she would wait and with that, I went to my room to kick my shoes back off.\n\nOnce I returned, I had noticed that she had the blanket pulled all the way up to her neck and her T-shirt sitting in a heap next to her. As I was about to sit down, she jumped and warned me about the wet couch, insisting that I removed my shorts again before sitting down.\n\nI really wasn't thinking about the fact that I still had my shorts on, but more importantly, I had forgotten about the phone that I hadn't started back up. This did give me the opportunity to set it back down as I appeared to struggle with my shorts.\n\nNow with the camera recording and my limp but hanging long penis feeling the cool air, I sat back down on the couch. Once I was settled, Heather threw the foot end of the blanket over me.\n\n\"You ready?\" I asked as I now had the joint and lighter in my hand ready to light it up.\n\n\"Uh huh\", was the only response that she replied with.\n\nAs I lit the stick, I pulled in hard to get it started. Once it was going, I reached over to pass it to her. Once she had it and was inhaling her first tug off of it, I nonchalantly asked, \"what happened to your shirt?\"\n\nCoughing out the smoke, she answered with, \"It also had a wet spot that was making me cold.\" \n\nShe had grabbed the shirt and held it up for me to see a circle the size of a half dollar right where her tit would be. \n\nUnbelievably, there was still a slight sign of where her nipple hardened from the coolness and imprinted it into the fabric. Knowing that it was probably from the precum oozing from my dick as I held her a few minutes ago, I sheepishly apologized.\n\nShe pulled on the joint again before passing it back stating, \"it's all good!\"\n\nOnce she had given the joint back to me, she laid back again, but this time, stretching her legs out, resting them across my lap. When she did this, it naturally kicked the blanket up and then settled back down, blowing a little air my direction. Having smelt and tasted her sweet nectar from her panties, I was well aware of the aroma of her sex that had just slapped me in the face.\n\nI waited just long enough for the fragrant air to clear before I took another pull from the joint. As I was about to pass it back, I started to exhale at the exact moment that she adjusted her legs to where they were now stretched over my quickly hardening cock.\n\nAs my cock started to look for some breathing room under her smooth legs, Heather took notice and asked with a giggle, \"I'm sorry, am I in the way of something?\"\n\nKnowing that any contact or attention like this would spell the end of my resistance, I had to finally speak up about my arousal. I figured that it would be easier to just tell her instead of letting this go on and inevitably coating her legs with an uncontrolled orgasm.\n\n\"Heather listen, I want to tell you this in an attempt to avoid an accident. When I tell you that I think about you when I masturbate, it is because I think that you are incredibly hot. Now, after all I have seen tonight and the fact that you are now touching me, I can't help but warn you that if this keeps up, well, let's just say that \"the couch\" won't be the only thing sopping wet.\"\n\nNot sure what her response would be, I knew to prepare myself for the end of the conversation. Instead, what I got almost had me shooting off right then.\n\nEnthusiastically, she fired back at me, \"Oh can I watch, please\"?\n\nInquisitively I ask, \"Watch what?\"\n\n\"You. I have never seen a man jack himself off to completion. Please do it for me, I want to see what its like.\"\n\nNow horror sets in at the thought that I wouldn't last 30 seconds in the condition that I am in right now. I try to explain it to her the best I know how. \n\n\"Have you ever heard of a guy prestaging for a date. If not, it is when some guys will jack off before going out in hopes that he may last longer later having already gotten off earlier. Well, that's where I am at right now. You have me so aroused right now that if I gave it a second of attention, I won't last long enough for you to blink without missing anything.\"\n\n\"Oh c-mon, please. You say that you jack off all the time while thinking about me, prove it. Plus it's only fair.\" She stated. \n\n\"Fair? How so?\" Curious where she is going with this, I questioned.\n\n\"Well, since I will have to start masturbating, like you, I will need something to think about and since you have me to think about, it's only fair that you give me something to think about.\" With that she pulled the blanket up and off of our bodies to watch not thinking about or caring that under the blanket she sat completely naked.",
        "\"Please please please. Do it for me\" She pleaded again.\n\nNow with her bare breasts staring at me and the smooth lower abdomen dipping into the dark shadowy triangle formed by her legs, I didn't know how but I was sure that my balls were going to be empty by the end of the night.\n\nLifting one of her legs off of my lap, she moved it behind me and then told me to spin around on the couch so see could get a better view. Not that I needed any more encouragement, but once I settled down facing her, with her legs on ether side of me gave me a very unrestricted view of her obviously dripping womanhood.\n\nOnce my hard shaft popped into view, Heather blurted out, \"Oh my gawd you have a beautiful dick. Like I've said, I have seen you before but it has always been at a distance and only for a second. But now that I can really see it, it is awesome. C-mon, make it spit for me.\"\n\nStill frustrated by the fact that I will for sure blow a monster load within seconds of me touching it, I again told her that she will not get the full experience of a man masturbating. Again, she told me to shut up and show her.\n\n\"Alright, but just remember that you are the one insisting on it\" I replied as I started making my way down to the stiff flagpole that was aching for release.\n\nHeather just sat there with her eyes fixed to my cock as I took hold of the base of my shaft. I took a long stroke up the length of my shaft when I noticed that, indead, the couch was wet where she was sitting. But it wasn't from anything spilling on it. It was the large amount of female secretion that I can see running from her sloppy wet cunt, down her ass crack and onto the fabric of the cushion.\n\nI was only a few strokes into it when Heather once again spoke up and said, \"oh my gawd, that is so fucken hot.\"\n\nUnfortunately, that was about all that my sex could handle. With Hearther's eyes glued to my business, I rolled my head back and held on for what was sure to be a massive eruption. Now normally, I am not a grunter but the buildup to this orgasm was so intense that as soon as my orgasm started, I couldn't help but be vocal. My building orgasm had me so discombobulated that I could no longer sustain any kind of rhythm and had to stop stroking.\n\nAgain, like before, I really didn't need anymore stimulation as my balls were already pulsating, trying to coax as much hot white fluid as it could from the depths of their glands. \n\nWith one more really long and deep grunt, my cock swelled up as the first rope of semen blew from the head of my now pulsing shaft. \n\nWith my head still tilted back and my dick spraying jizz like a fire hose, I could vaguely hear Heather comment, \"oh my gawd, that is so fucken awesome.\"\n\nThe sad part is that my orgasm lasted longer than the process to get it there. Ether way, it sounded as if Heather was enjoying the show.\n\nAs that orgasm started to subside, I just sat there basking in the afterglow of one long awaited release. \n\nIn utter amazement, I heard a slight moan and then a lip smack from Heather. I lifted my head to realize that most of my cum had shot off sideways and had landed on her thigh, to which see had scooped some into her fingers and was sucking them clean.\n\n\"Mmm, that was so hot and tastes even better!\" She exclaimed.\n\nI'll tell you what, if I hadn't just empties my balls, I would have definitely shot one off watching her suck the jizz from her fingers."
    ],
    "authorname": "artmp3",
    "tags": [
        "mutual masturbation",
        "video",
        "jacking off",
        "handjob"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-roommates-ch-03"
}