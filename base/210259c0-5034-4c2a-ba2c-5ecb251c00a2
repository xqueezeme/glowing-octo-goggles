{
    "title": "Your Silver Nights and Golden Days Pt. 05",
    "pages": [
        "It goes without saying that you should read 'Your Silver Nights and Golden Days Pt. 04' first before reading this story.\n\nThe following events occurred in 1992 before any \"Don't ask, don't tell\" policy was in place in the military. Being an active lesbian was risking your career, especially for an officer.\n\n\u00a9 2020 Candy_Kane54\n\n***\n\n\"Oh, God,\" I thought to myself, \"I'm not ready for this.\"\n\n\"How bad?\" I asked Bonnie, hoping it wasn't too bad.\n\n\"They need to do an exploratory scoping,\" Bonnie said, fighting back the tears. \"They think it's pancreatic cancer, but they don't know how bad it is yet. They've scheduled it at Miami Valley Hospital for the day after tomorrow.\"\n\n\"Okay, sweetie, I'm going to take the rest of the day off, and I'll be home as quick as I can.\" I looked around, making sure nobody was nearby to hear me, and I said, \"I love you. We'll get through this together.\"\n\nI told my group I had an emergency at home and would be gone for the rest of the day. I informed Susan I'd be out for the rest of the day and would probably also be out on Thursday. I asked her to reschedule my meetings and to put me in for leave to cover my absence. I also told her to make sure Alice knew I was gone.\n\nI hurried home, bursting through the front door to find Bonnie lying on the couch, curled up in a ball. I rushed over and sat down, gathering her into my arms as she started sobbing into my chest.\n\n\"I love you, Bonnie,\" I said, holding her as though I was afraid she'd fade away.\n\nBonnie continued sobbing while I sat there holding her, rocking her back and forth as though rocking a baby in my arms. I kept repeating, \"I love you,\" over and over, my mind frantic over the thought that I could lose this woman, the love of my life. I felt my eyes tearing up, but I sternly forced them back. \"I have to be strong for Bonnie,\" I told myself.\n\nWe stayed there on the couch for the next hour. Eventually, Bonnie stopped sobbing, and my rocking lulled her to sleep. I stopped rocking but kept holding her tight, not wanting to let go, to ever let her go. I listened to her breathing, wanting to remember the sound, wanting it to last forever. We would fight this together. I vowed that I would be her rock while we got through this.\n\nEventually, I heard her breathing change as she woke up. I whispered, \"I love you, Bonnie.\"\n\n\"I love you, too, Virginia,\" she replied. \"Thank you for being here for me.\"\n\n\"Always, my love,\" I answered.\n\n\"I'm sorry I lost it there for a while,\" Bonnie said, sitting up and wiping her eyes. \"I feel better now.\"\n\n\"Good,\" I said. \"We'll take this one day at a time and see where it goes.\"\n\n\"One day at a time,\" repeated Bonnie as she leaned back in to kiss me.\n\nThe kiss seemed to last forever as I felt her soft, supple lips on mine. There was no heat in the kiss, just the feeling that we were in this together, no matter the outcome. Eventually, the kiss ended as our lips slowly parted.\n\n\"I'm glad you're feeling better. Let me go get out of this uniform, and we'll get some lunch?\" I asked.\n\n\"Sure,\" replied Bonnie, leaning in for another kiss.\n\nOur lips met once again, molding together as if it was the most natural thing in the world. This time Bonnie pressed in, demanding more. Our passion slowly built as she leaned in even more, practically knocking me off the couch.\n\nWe got up off the couch, maintaining our cinch. We stood there for a while, hungrily devouring each other's mouths as our tongues battled for dominance. Eventually, needing air, we separated, gasping for breath. Without needing to say a word, we headed to our bedroom.\n\nOnce we got to the bedroom, we hurriedly shed our clothes and got into bed. We laid there, arms wrapped around each other as we continued kissing. I eventually wormed my left hand down between our bodies and cupped Bonnie's mound, cherishing the feel as I pressed against it. Bonnie returned the favor by snaking her right hand down between our bodies and cupping my pussy. The feeling of her hand against my mound was a reassurance that her love for me was real.\n\nI lifted and bent my left leg enough to slide my left foot behind my right knee, giving Bonnie more access to my pussy. Bonnie did the same with her right leg, so I had more access to her pussy. I worked my middle finger between her lips, gathering her juices to lubricate my finger before penetrating her hole. I worked my finger all the way in until my knuckle nestled between her lips. At the same time, Bonnie was doing the same, working her finger into my pussy. The feel of her finger in my hole was exquisite. The tip of her finger found my g-spot, and a spike of sensation shot to my clit and nipples.\n\nI broke the kiss and softly said, \"We are here today. Tomorrow will take care of itself.\"\n\n\"Yes,\" Bonnie whispered back, leaning in for another kiss.\n\nOur fingers got busy, stimulating each other. I worked my ring finger in with my middle finger while Bonnie followed suit. I started slowly pistoning in and out, making sure the base of my thumb contacted her clit on each downstroke, again Bonnie following suit.\n\nSoon, we were both gasping for air as we raced to see who could get the other to come first. I could feel my orgasm roaring down on me, and I'm sure Bonnie was feeling the same. We locked eyes, watching each other reach the peak, and we both fell over the edge at the same time, screaming each other's names as we plunged into oblivion.\n\nWhen we recovered, we cleaned up and got something to eat. I told Bonnie the news about my being put up for the Lieutenant Colonels board. She was delighted and pulled me in for another passionate kiss. Momentarily, the pall of her condition was gone as she congratulated me. We then decided to call Grace and let her know what was going on. I dialed her number, and when she answered, I put the phone on speaker.\n\nGrace picked up on the second ring and said, \"Hello?\"\n\n\"Grace, it's Bonnie and Virginia. I have you on speaker,\" I replied.\n\n\"What's the occasion?\" she asked.\n\nBonnie spoke up, \"Mom, I've been sick, so I went to see a doctor. He ran some tests, and it looks like I have pancreatic cancer.\"\n\nThe silence stretched out for a few seconds while Grace digested the news. She then said, \"Oh, sweetie. How bad is it?\"\n\n\"The doctor didn't know, so they've scheduled an exploratory scoping for Thursday,\" Bonnie replied. \"If it's appropriate, the surgeon will then remove the pancreas ...,\" Bonnie stopped, choking up.\n\nI jumped in, pulling Bonnie into my arms, \"Grace, the surgeon is going to put a scope in to see what the situation is. Hopefully, the cancer is confined to the pancreas, and the surgeon can then remove it. Then there will be a course of chemo to clean up any cancer that is left.\"\n\n\"Oh, so there's a chance there is no cancer?\" Grace asked.\n\n\"I don't think so. The doctor is definite that there is cancer, but they don't know how bad it is yet. The CAT scan showed a tumor, but until they actually look at it, they won't know if it has spread or not,\" I finished, turning to kiss Bonnie on the cheek. I could see the tears welling in her eyes, threatening to overwhelm her again.\n\n\"Oh, sweetie, If you need me to come there, just let me know. I want to be there if there is anything I can do to help,\" Grace said.\n\n\"Thanks, mom,\" Bonnie said. \"I really hope it won't be necessary.\"\n\n\"I hope so too, sweetie,\" said Grace, \"but I'll be there if needed. How are the boys taking the news?\"\n\n\"We haven't told them yet. The boys are still in school,\" I said. \"We're going to tell them tonight.\"\n\nWe spent some time chatting about lighter topics, and I told her about my opportunity to be promoted below the zone again. Grace got me to promise to call her Thursday as soon as I found out the result of Bonnie's surgery.\n\nOnce I hung up the phone, I turned and took Bonnie in my arms. I held her tight, willing the cancerous tumors to disappear from her body. Bonnie hugged me back just as hard. She buried her head into my shoulder and started softly sobbing. I brought my left hand up to cup the back of her head, and I nuzzled her ear, whispering, \"I love you,\" over and over as we sat there.\n\nSoon, Bonnie stopped sobbing and lifted her head to kiss me. \"Thank you for loving me,\" she said. \"I don't know what I'd do if I didn't have you.\"\n\nAs I basked in her love for me, I thought to myself, \"I hope I don't have to find out what I'd do without your love.\"\n\nWhen Matthew and Mark got home from school, they were surprised to see me there. Knowing something was up when Bonnie and I invited them to sit on the couch, Matthew asked, \"What's up, mom, mom2.0?\"\n\nBonnie and I stood there, an arm around each other. We had decided that I would tell them, so I said, \"Your mom hasn't been feeling well lately, so she went to see the doctor and had some tests done. It looks like she has cancer.\"\n\nMatthew and Mark looked devastated, and they jumped up and came over to hug us. I tried to reassure them that we didn't know how bad it was as Bonnie hugged them back, telling them she would be okay. After all of the hugs and reassurances were done, we decided to go out for dinner. We ended up going to Olive Garden across from the Dayton Mall. By the time we got back home, the boys were back to their cheerful selves, and we spent the evening watching movies until it was time to turn in.\n\nI spent the next two hours pleasuring Bonnie until she fell into an exhausted sleep. I laid there, my head propped up on my left hand as I watched Bonnie sleep. Tears leaked from my eyes as I thought about the past six and a half years that I had known this wonderful woman. I scolded myself for acting as though I would lose her, but I couldn't delude myself about her chances. Eventually, sleep found me, but my dreams were not pleasant.\n\nThe next day, after I got to my desk, I called Mary Ann and asked for a time slot to see Alice. She got me a 10 AM spot, and I was there at 9:55 AM as usual. Promptly at 10 AM, Alice opened her door and motioned for me to come in. We sat and exchanged pleasantries for a moment. Alice congratulated me on my being submitted to the Lt. Col. Board before I got to the point of my asking to see Alice.\n\n\"Alice, I received some bad news yesterday, right after seeing General Fain,\" I said, easing into what could be a difficult discussion.\n\n\"What is it?\" Alice asked, a worried look appearing on her face.\n\n\"Bonnie and I just found out yesterday that she has pancreatic cancer,\" I said.\n\n\"Oh, that's horrible,\" Alice said, a concerned look coming over her face.\n\n\"They are going to do a scope tomorrow to see how bad it is and hopefully remove her pancreas,\" I said. \"I'm not going to be here tomorrow, so I hope that's not going to be a problem.\"\n\n\"No, that's fine,\" Alice said. \"Take whatever time you need, as long as it doesn't impact the program. I'll do what I can to cover for you on the days your not here, but if General Fain wants to see you, you'll have to make sure you cover it.\"\n\n\"Thanks, Alice,\" I said. \"You know I won't let you down.\"\n\n\"I know,\" Alice replied. \"I really hope everything goes fine tomorrow. Please call me and let me know how it goes. How are the boys handling it?\"\n\n\"They're doing okay. We're not hiding anything from the boys, and we're going to make sure they're aware of the situation every step of the way,\" I said.\n\n\"Good,\" Alice said, standing up to end the meeting, walking me to the door. \"Good luck,\" she added as I left the office.\n\nBonnie felt good enough to go to her classes. She was going to inform her instructors about her cancer diagnosis. Bonnie arranged to do as much of the coursework from home while going through chemo. All of Bonnie's instructors were sympathetic about what she was going to go through. They agreed to allow Bonnie to miss class whenever needed. I was glad that she still felt positive enough to be planning for the future.\n\nThursday came, and Bonnie and I made sure we were at the hospital at 5:30 AM. We met with the surgery prep nurse so Bonnie could be prepared for the surgery. I wasn't legally part of her family. Still, Bonnie insisted that I was the only one she had to the prep nurse, explaining that her mother was in Los Angeles. The prep nurse agreed to let me stay with Bonnie until the surgeon was ready. After a short wait, the surgeon came in and went over what he was going to do. He explained how he would be putting a scope in through an incision to see the extent of the suspected cancer. Scoping was the simple part. He was prepared to remove all or part of the pancreas, depending on what he found. So Bonnie could be in surgery for an hour, or several hours, depending on what he discovered and decided to do.\n\nI sat there holding Bonnie's hand while we talked with the surgeon. He was a relatively young surgeon, and he looked competent to me. He came across as optimistic about how things were going to be. Once the surgeon was done, we stayed in the prep room. The prep nurse fussed around us until the anesthesiologist came in to start the anesthesia. I kissed Bonnie's hand before letting go and getting up to leave. I would wait in the lounge until she was done with surgery, then I would be called in to see her in the recovery room.\n\nIn a surprisingly short time, the recovery room nurse came out to get me. She led me back to the recovery room and showed me where Bonnie was lying. I sat next to her, waiting for her to wake up from the anesthesia. The nurse handed me a small kidney-shaped tray to catch any vomit if she woke up nauseous from the anesthesia. She told me that once Bonnie was awake and able to sit up, the surgeon would come in and talk to us.\n\nI could see that Bonnie wasn't cut wide open, so I assumed that the doctor didn't do any surgery. This could be good news or bad news. If it was good news, the cancer is not very advanced, and the prognosis was very good (i.e., survivable). If it was bad news, the cancer is too widespread for surgery, and the prognosis was grave (i.e., she would be in a grave soon). I prayed that it was good news.\n\nBonnie soon started stirring, and I reached over and took her hand. When her eyes started fluttering, I motioned to the nurse and then said, \"Hey, you.\"\n\nBonnie squeezed my hand slightly and said weakly, \"Hey, you, too.\"\n\n\"How are you feeling?\" I asked. \"Are you nauseous?\"\n\n\"Just groggy,\" Bonnie muttered.\n\nThe nurse must have called the surgeon because he showed a minute later. He came into the bay with a grim look on his face, and I immediately knew it was not good news.\n\n\"How bad is it, doc?\" I asked, gripping Bonnie's hand harder. Bonnie looked up at the surgeon, her eyes still a little blurry.\n\n\"I'm not going to sugar-coat it,\" he started before grimacing and continuing, \"I went in and scoped the area, and the cancer was everywhere. I couldn't do the surgery because it would only make things worse. Right now, the only thing we can do is get you on a chemotherapy regimen immediately. Then, in a couple of months, we'll take another look to see if the cancer has been knocked back enough that I can do the surgery to remove the pancreas.\"\n\n\"What's the prognosis?\" I asked, knowing it would be bad but needing it to be said so Bonnie and I could start dealing with it.\n\nA look of sadness came over his face as he said, \"It's grave.\" He went on, \"All we can do at this point is try the chemo and see what happens. If we are lucky, the cancer will respond to chemo. If it responds enough to be able to perform the surgery, then we can schedule it. Once you recover from the surgery, we can start the chemo again to finish knocking back any cancer that is left.\"\n\n\"That's a lot of 'ifs',\" I said.\n\n\"It is what it is,\" the surgeon said. \"I'll get the nurse to schedule you for your first chemo treatment as soon as possible.\" He then turned and left, motioning to the nurse to talk to him.\n\nI turned to Bonnie, tears threatening to well up in my eyes. I took her hand into both of mine and said, \"We'll fight this together. We are not going to give up without a fight.\"\n\nBonnie squeezed my hands back, tears flowing down her cheeks. I leaned in and took her into my arms. I started to rock her as she started sobbing into my shoulder. I felt so helpless at that moment. I was so used to fixing things, yet here was something I couldn't fix. All I could do was whisper into her ear, \"I love you. We'll beat this.\"\n\nWe stayed that way for a while until Bonnie got herself back under control. As soon as Bonnie was steady enough to get up out of bed, I helped her get dressed. The nurse came over with the schedule of her chemo treatments. She had also scheduled us to see a nurse about living with diabetes.\n\nIronically, the reason Bonnie had been feeling bad for the last month or so was that her pancreas wasn't producing the insulin she needed, and not because of the tumor. Once she saw that nurse, then she'd get her prescription for insulin. She would need to be on it for the rest of her life once they removed the pancreas.\n\nBonnie's first chemo treatment was Monday, and she would be coming in to get hooked up to an IV once a week for the next eight weeks. The surgeon had also prescribed some anti-nausea pills in case Bonnie had an adverse reaction to the chemo medicine.\n\nWe went home, and I helped Bonnie into the bedroom and back into bed. I stayed with her, holding her until she fell back asleep. Once I was sure she would stay asleep, I went to call Grace. She picked up on the third ring and sleepily said, \"Hello?\"\n\n\"Grace, this is Virginia,\" I started, and then a sob escaped despite my best effort, \"We need you ....\" I couldn't finish as my throat closed up.\n\n\"How soon do you need me there?\" Grace asked without hesitation.\n\nI fought for a minute to get my emotions under control and said, \"As soon as we can get everything arranged.\"\n\n\"How long do you think you'll need me there?\"\n\n\"Probably for a couple of months, assuming everything goes well. More, if it doesn't,\" I finished in a near whisper.\n\n\"Whatever it takes,\" Grace said firmly. \"I'll get started on getting Kathy to keep an eye on my place while I'm gone. I'll have to get my mail forwarded to you and talk to the apartment manager about how to make my rent payments.\"\n\n\"Okay, I'll work on getting your plane ticket for you. I'll let you know what flight you'll be on,\" I said, relieved that Grace was going to be a pillar of strength for us to lean on in the coming months. \"I'll call you tonight, and we'll finish planning.\"\n\n\"Okay, sweetie,\" said Grace. \"Give my love to Bonnie.\"\n\n\"I will, Grace,\" I said. \"Thank you.\"\n\nAs soon as I hung up, I called Alice's office. When Mary Ann answered the phone, I asked her to put me through to Alice. When Alice got on the line, I told her what had happened.\n\n\"I'm so sorry to hear that,\" Alice said once I had finished. \"Of course, you can take the time needed to get her through the chemo treatments. I'm glad her mother is going to be here to help you out.\"\n\n\"Thanks, Alice,\" I said. \"I really appreciate you being so understanding. I'll make sure you won't regret doing this.\"\n\nI hung up the phone and sat there, my heart heavy. I then got busy calling the airlines to get Grace's ticket for her trip. I ended up getting her on TWA the first thing in the morning. I called her back and told her when her flight was and the airline Grace would be flying so she could pick up her ticket at the counter. She reassured me she had things arranged with Kathy and was already packing. I thanked her again, and she hushed me, saying, \"Virginia, I'm her mother. I'd do it no matter what. You don't have to thank me. Tell Bonnie that Kathy sends her love.\"\n\nBy the time the boys got home, Bonnie was up and about. We sat them down and told them what had happened. We told them that Grace was coming tomorrow to help take care of things while Bonnie underwent her chemo treatments. We all hugged each other, and I worked hard to cheer them up. By the time dinner was over, they were all ready to sit and watch a movie before going off to do their homework before going to bed. We all sat on the couch, my arms were around Mark and Bonnie, and Bonnie's arms were around Matthew and me while watching the movie.",
        "Later that night, after Bonnie was sound asleep, I got up and went out into the living room. I needed to think about how we were going to go forward from here. Assuming all goes great, Bonnie will survive her cancer. She's going to lose her pancreas, at least, so she's going to be taking insulin to regulate her blood sugar for the rest of her life. I thought about how we'd have to pay for all of her medical expenses because I couldn't claim her as a dependant to get treatment at the base hospital. Thank God we had that medical insurance plan to help alleviate the expenses.\n\nAlthough I hated thinking about it, I knew we'd have to get a will done so Bonnie's estate would go to her sons in the event of her death. If the worst did happen, I'd have to take the insurance money and set up trusts for Matthew and Mark for going to college. Even though I had no legal standing with them, I would remain involved in their lives as much as I could.\n\nI went in to check on the boys before going back to bed. They were both sleeping the sleep of teenagers, dead to the world. I hated to think about what this would do to them, and I vowed to be there for them.\n\nFriday at work was a blur ... I essentially sleepwalked through it. Susan saw that I was distracted and made sure nobody bothered me. Alice stopped by to commiserate with me for a bit, and I really appreciated her support.\n\nI left a little early to get to the airport to pick up Grace. I waited for her in the concourse, and when she came out of the walkway, I ran up and hugged her, so glad she was there. She hugged me back, reassuring me that she would be there for us, no matter what. I went with her to the baggage pickup and helped her get her luggage out and into the car. As we drove home, I updated her on everything that had happened since we last talked.\n\nWhen I pulled into the driveway, the boys ran out to welcome Grace. Bonnie held back at the door, waiting for Grace to finish hugging and greeting the boys. The boys escorted Grace into the house while I got her luggage out of the car. By the time I got Grace's bags in the door, the boys had come over to take them to her room. I went to Bonnie and Grace. Bonnie was buried into her mom's chest, sobbing. Grace looked at me, and I could see the unshed tears in her eyes. I took them both in my arms, and we stood there for a minute, just holding onto each other.\n\n***\n\nMonday, Grace and I accompanied Bonnie to the hospital cancer center for her first chemo treatment. It was a busy place with twelve lounge chairs set up for patients to use while getting their IVs. Several different IV bags were swapped out during the treatment, so we were there for three hours. By the time we got Bonnie home, she was starting to react to the chemo treatment. Bonnie tried to eat lunch, but it made her extremely nauseous, and I had to hold her while she puked up everything she had just tried to eat. I got a washcloth and gently wiped her mouth. I got Bonnie some water so she could rinse her mouth clean. She took her nausea pill, and then I helped her to bed, since she was nearly too weak to walk. She didn't even feel like trying to eat anything for dinner. After a couple of days, she was feeling well enough to keep her food down. By the time her next chemo was to start, she was just about back to normal.\n\nThe second round of chemo didn't go any better. I know Bonnie hated this, but if she got through it, she'd be better. Thank God Grace was there to help out. I had to travel because of the Software Process Evaluation we were doing on Martin Marietta in Orlando, FL.\n\nI hated going, and I was willing to tell Alice that I couldn't go, but Bonnie insisted that I go. She said, \"Mom is here to help out, and I'm not going to die anytime soon, although I may feel like it sometimes, so, go ... go and do the great job I know you can do.\"\n\nBefore I left, I discussed with Grace about having Kathy come out to visit. Grace told me that she was fine and that the boys had enough to deal with without having her relationship with Kathy confusing things. I told her that the boys were okay with my relationship with Bonnie and didn't feel it would be an issue. Grace was stubborn, though, and I didn't argue with her.\n\nI went with the evaluation team to Orlando to do the evaluation on Martin Marietta. The three days there seemed to last forever. My team members noted how distracted I was and wondered out loud why. I wanted to tell them that the woman I loved was undergoing treatment for cancer, but I couldn't. I just informed them that a good friend of mine was sick and I was worried about her. I threw myself into the evaluation, hardly getting any sleep at all, not that if I did take time to sleep that I could.\n\nI called every night to talk to Grace to see how Bonnie was doing. I spoke to Bonnie when she felt good enough to talk. I told her how much I loved her and wished I could be there for her. She again reassured me that her mom was taking good care of her. After hanging up, I would get so angry at the unfairness of it all. Yes, I knew in my head that this was the way it had to be since I had made a commitment that went against the rules. But my heart wanted to argue that if my love had been a man, everyone would be supportive, and I'd be given the slack I needed to get through it.\n\nWhen the evaluation was done late Thursday night, I gathered the team in the hotel's lobby. I praised them for the excellent work they had done. Based on the results, it looked like Martin Marietta would get a Level 3 rating. This would be the first Level 3 rating that we had gotten while doing the evaluations. Everyone wanted to go out and celebrate, but I begged out, saying I had some write-ups to complete tonight before flying out in the morning. While not totally lying to them, I did spend most of the evening talking to Grace and Bonnie. Bonnie told me that she had spoken to Kathy today. I also spoke to Matthew and Mark to let them know that I was still there for them. \"God,\" I thought to myself, \"I may be losing my lover, but they could be losing their mother. I've got to be there for them, no matter what.\"\n\nWhen I got back to Dayton the next morning, I popped into the office to update Alice before taking off the rest of the day. Then I did something I hadn't done in eighteen years; I went to church to pray.\n\nI stopped into Mary Help of Christians Catholic Church in Fairborn, just outside the gate of Areas A/C. The first thing I did was light a candle for Bonnie. Then I entered the chapel and kneeled, crossing myself before taking a seat in the pew. I sat there for a minute, taking in the atmosphere, my thoughts going back to the last time I attended a service, my mother's funeral.\n\nI then got on my knees, crossed myself, and lifted up a prayer. I prayed for Grace, asking Mary to remind Jesus what it's like for a mother to lose an offspring. I also lifted up a prayer for Kathy, praying she be given the strength to be there for Grace. Then I prayed for Bonnie, asking God to heal her. I asked that if someone had to die from cancer to give it to me. I would gladly bear that burden for her. I then prayed for Matthew and Mark. I asked that they be given the strength to endure what was to come about, to grow from it rather than let it scar them for life. Finally, I prayed for myself. I asked that I be given the strength to get through this, to be there for Grace, Bonnie, Matthew, and Mark in their hours of greatest needs. I ended with an 'Our Father' stressing the 'thy will be done.'\n\nAfter leaving the church, I hurried home and ran into the house. Grace was there, and I flew into her arms, thanking her for being there. I then went into the bedroom to see Bonnie, and she was sleeping, so I changed and went back out to sit with Grace and talk about how everything was going.\n\n***\n\nWe had a subdued celebration for Mark's 14<sup>th</sup> birthday. We had a cake, and Mark received presents from all of us. Bonnie was still weak from her latest chemo treatment, so we just stayed home. Her beautiful hair was starting to fall out, so she had asked me to help her cut it off and donate it to Wigs for Kids.\n\nBy the eighth week of the chemo, Bonnie was feeling even weaker than before. She was sick nearly all of the time now, and she was losing weight from being so nauseous that she couldn't keep any food down. The insulin was helping with her blood sugar, but the chemo was making her throw up just about every time she tried to eat anything.\n\nBonnie's doctor insisted on checking her into the hospital while waiting to get her follow-up CAT scan. They put her on a glucose drip to help with the weight loss from the nausea caused by the chemo. Grace and I spelled each other sitting with her at the hospital. I kept Alice updated on what was happening, and she covered for me on the days that I had to be at the hospital. Mostly I stayed in the evening so Grace could be home with the boys, and Grace remained during the day while the boys were in school and I was at work.\n\nBonnie's follow-up CAT scan was scheduled as soon as the doctor felt she was strong enough. Even so, when she went in to get it done, the contrast she had to imbibe nearly killed her, and it made her so sick. They did manage to get the CAT scan done before she threw up all over the place.\n\nWe waited for the results of the CAT scan. I called Alice to tell her that I was staying at the hospital until we heard from the radiologist. After what seemed like forever, the doctor came into Bonnie's room, and I could tell that he had unwelcome news before he even said anything.\n\n\"Bonnie, we looked at the CAT scan, and I'm afraid that the cancer has not been diminished,\" he said, not beating around the bush.\n\n\"So, all this misery she's gone through with the chemo was for nothing?\" I said, glaring at the doctor.\n\n\"We had to try,\" the doctor said.\n\nThe doctor then discussed with us the options that we had. Chemo wasn't working, so surgery was off the table. In reality, Bonnie's only option remaining was to decide between dying in the hospital or at home. He then left us so we could discuss it in private.\n\n\"Take me home,\" Bonnie said, her eyes pleading with me to accede to her wishes. \"I want to be home when I die.\"\n\nI held her hand tight, fighting to hold back my tears as I realized that Bonnie had accepted the fact that she was going to die.\n\n\"Of course, my love,\" I finally said, struggling to keep my voice under control. I talked to the nurse to find out how to get Hospice to come to our house for Bonnie.\n\nIronically, even though she knew she was dying, just being off the chemo had made her start feeling better. The doctors thought she had two weeks, maybe a month, at most, before the end. We knew it would only be temporary, but within a week, Bonnie was up out of bed and could do things with the boys and me. She did have to start taking oxycodone for the pain.\n\nWe got some news that upset Grace quite a lot. Kathy had been involved in a motorcycle accident and broke her leg in three places. They spent hours on the phone talking to each other, Kathy vainly attempting to reassure Grace that she was okay. I know Grace wanted to be with Kathy, but Grace needed to be here for Bonnie. I thought she would lose it there for a while, but Kathy eventually talked her down. Unfortunately, Kathy would not be traveling for several weeks, so coming out here wouldn't happen in time.\n\nThat Friday, Bonnie wanted to take one last weekend with just the two of us before she started deteriorating. We left the boys with Grace and went off Yellow Springs, one of Bonnie's favorite places to visit. Luckily, the weather was going to be nicer than usual for this time of year.\n\nWe drove out to Yellow Springs to stay at a lovely bed and breakfast called Morgan House. Once we checked in, we drove over to Clifton Gorge. There were beautiful trails to walk to take in the scenery of the gorge. We took our time, walking hand-in-hand, just enjoying each other's company and nature. Bonnie was not very strong, so we had to stop frequently for rest. Whenever we paused, we sat arm-in-arm, Bonnie resting her head on my shoulder. We regularly traded \"I love you's\" the whole time. My heart was heavy because I knew this would be the last time we ever did anything like this. I wanted to cry, but I wasn't going to because I wanted this to be perfect for Bonnie.\n\nWe eventually made it back to the car and then back into town. We stopped at a nice restaurant for dinner. We both got salads. Mine was delicious, and I scarfed it down. Bonnie's appetite wasn't that great, and she picked at her salad, not eating very much. We held hands the whole time, not concerned about it since this was a very liberal college town, and being openly gay wasn't a big deal.\n\nAfter dinner, we retired to our room at the Morgan House. I could tell she was starting to hurt, so I urged her to take a pain pill. She refused, saying, \"Virginia, I want to be able to feel alive tonight. I don't want to feel like I'm totally wrapped in cotton, not able to feel anything. I want you to take me to bed now and make mad, passionate love to me. I want to feel loved one last time.\"\n\n\"Are you strong enough?\" I asked.\n\n\"So what if it kills me? I'm dying anyway,\" she said, locking eyes with me, daring me to argue with her.\n\n\"As you wish, my love,\" I whispered, pulling her into my arms.\n\nOur lips met, and I put everything I could into the kiss. Our eyes remained locked, Bonnie's eyes black from being dilated. Our lips parted, and our tongues battled for supremacy. We both moaned from our arousal.\n\nEventually, we broke the kiss and started undressing each other. As I removed Bonnie's blouse and slacks, I noticed how emaciated she looked. I could see every rib, and her hips protruded out more than I'd ever seen. I reached around her and unfastened her bra as she did mine. As I pulled the straps off her shoulders, her breasts were revealed, and I was shocked at how they looked. They looked like two deflated balloons. Her dark nipples stood at attention. I palmed her breasts, feeling her hard nipples poking my palms. Bonnie did the same with my breasts, my hard, aching nipples scoring the palms of her hands.\n\nI then slid my hands down her sides until I came to her panties. I worked my fingers under the waistband and started pushing her panties down over her hips. I continued sliding them down her legs as I squatted to reach down to work them over her ankles and off. My face was even with her pussy, and I could see that Bonnie had shaven her mound. She was wet, and her aroma was making me dizzy with desire. I gave her mound a quick peck before standing back up.\n\nBonnie then moved her hands to my waist and started working my panties down over my hips. She slowly squatted as she worked my panties down over my ankles and off as I stepped out of them. Our eyes were locked as she leaned in and gave my mound a quick kiss before standing back up. I had to take her elbow and help her get back up. We then wrapped our arms around each other and kissed once more, our bodies molded together.\n\nWhen we broke the kiss, I picked her up, walked over to the bed, and laid her there. I then crawled onto the bed next to her. I started kissing, licking, and nipping every spot on her body that I knew she loved, starting with her face and working down over her jaw, then her neck, and then her collar bone.\n\nAs I had my lips firmly on her collarbone, I locked eyes with her and bit down, harder than I had ever done before, making her wince as I marked her. I then said, \"You're mine, forever!\" with as much conviction as I could put in it.\n\n\"Yes, my love,\" she said, tears welling in her eyes.\n\nI then kept moving down, spending the next twenty minutes worshiping her breasts. I kissed and nibbled all around the tops, sides, and bottoms of her breasts, working in toward her nipples. I again spent time giving her stretch marks the attention they deserved. I finally reached her right nipple and sucked it into my mouth, flicking it with my tongue, sucking and nipping it until it had enlarged as big as it could. Bonnie was moaning, and she put her hands on the back of my head, pushing it into her breast at the same time arching her back to get as much contact as possible. I gently took her nipple between my teeth and pulled my head back, making her breast tent outward until her nipple pulled out from between my teeth, snapping back in place. This elicited a loud gasp and a throaty moan. I then repeated the process with her left nipple, getting the same result from Bonnie's mouth.\n\nI then started trailing my tongue and lips down Bonnie's core to her belly button, causing small tremors and goosebumps. I explored the depths of her belly button with my tongue, causing Bonnie to writhe and giggle. When I had finished plundering her belly button, I worked further down, licking, kissing, and nipping her all the way down to her thighs. As I did, I made sure to honor her stretch marks, the result of bringing two beautiful boys into this world.\n\nI worked my way down her right inner thigh before switching to her left one. I then worked my way up to my ultimate destination. I hovered over her mound, enjoying the aroma of her excitement. The sight of her juices weeping out from between her lips excited me. I leaned in and took the flat of my tongue and ran it from the bottom of her slit all the way up to her clit, making sure to gather her juices, careful not to waste a drop. I savored the musky taste as Bonnie shuddered from the sensation, her breath hitching. I repeated the action, this time getting a growl from the back of Bonnie's throat.\n\nI suckled her lips, licking and nipping them, working my way up one side and down the other, eliciting moans and gasps as Bonnie's juices copiously flowed. I made sure to catch every drop, knowing that this would be the last time I would ever savor her quim. After several minutes of this, I locked eyes with Bonnie and plunged my tongue into her hole.\n\nBonnie gasped and arched her back, thrusting her hips up as her heels dug into my back below my shoulder blades. My nose bumped her clit, which made her moan and jerk from the additional stimulation. I thrust my tongue in and out as fast as I could. On each downstroke, I swirled my tongue around to stimulate all sides of her hole.\n\nI could feel her thighs spasming as she came closer and closer to her reward. Her gasps were getting louder and more ragged as she rolled and thrust her hips, attempting to get more contact with my mouth. Her eyes were black from desire as they begged me to reward her. I redoubled my effort as I slid both hands up to grasp her breasts, crushing them in my grip. She suddenly gasped in a breath and held it as she reached the edge of the cliff to throw herself off. Taking my cue, I sucked her clit into my mouth and tongued it like I was doing a trill on a trumpet. This was all Bonnie needed to crash into her orgasm, thrashing and partially stifling her scream of \"Virggiiinnnniiiiaaaa\" as she fell into the abyss.\n\nI continued sucking and tonguing Bonnie's clit to ease her down as she came down from her orgasm. Wanting her to cum again, I let go of her right breast and brought my left hand down so I could plunge my middle finger into her hole, making sure to tap her g-spot as my knuckles reached her lips. I then worked in my ring finger and drove them back in, again making sure to hit her g-spot. The stimulus made Bonnie go off again. She dragged in another ragged breath and fell into another orgasm, screaming my name, louder this time, as she lost control of her spasming body. I continued working my fingers in and out while sucking her clit like a piece of hard candy. Every time Bonnie started getting her body back under control, I set her off again. I wanted to draw it out as long as I could, knowing this would be her last time enjoying the feeling of being loved.",
        "Finally, Bonnie went limp. I cleaned her up before crawling up to lie next to her and take her in my arms. I rocked back and forth, holding her, telling her I loved her over and over until she regained her senses.\n\n\"Oh, God, Virginia, that was incredible,\" she gasped, wrapping her arms around me. \"Thank you for loving me.\"\n\n\"Always, my love,\" I said, fighting to hold back the tears. I was not going to ruin her mood, no matter what.\n\nWe laid there arm-in-arm until Bonnie's breathing had settled down. I rained little kisses on her face and lips until she dozed off, sated.\n\nI held her for what seemed like hours, not wanting to fall asleep. I wanted this last time never to end. Bonnie looked so peaceful for a while. Then I noticed a pinched look come over her face, and a slight moan came out of her throat as the pain from the cancer started overcoming the endorphin rush.\n\nI gently shook her awake and said, \"Sweetie, I think it's time for you to take a pill.\"\n\n\"Okay,\" Bonnie groaned as her eyes opened.\n\n\"Let me get it for you,\" I said as I unwrapped my arms from her and got out of bed.\n\nI got a glass of water and one of her pain pills and brought it over to Bonnie. I helped her sit up, and she took her medicine and washed it down with a swallow of water. It would take a while for it to kick in. I crawled back into bed next to her to hold her in my arms.\n\nBonnie wrapped her arms around me and said, \"I think Alice is a lovely person.\"\n\n\"Yes, she is,\" I said, wondering where this was coming from.\n\n\"I think the two of you would be good for each other,\" Bonnie said, a thoughtful look on her face.\n\n\"What?\" I queried, suddenly realizing that Bonnie was making plans for me after she was gone.\n\n\"I don't want you to be alone after I'm gone,\" Bonnie replied. \"I want you to find someone to love. I don't want you moping around for the rest of your life.\"\n\n\"I won't be alone. I'm going to be looking after Matthew and Mark,\" I said, not wanting to talk about this right now.\n\n\"I know that,\" Bonnie said. \"But you still need someone to hold you and love you, someone you can hold and love. I spent too many years alone, and I don't want you to have to experience that.\"\n\n\"No one can take your place,\" I said. \"It's just not possible. Besides, I'm not worried about that right now; I still have you here to love.\"\n\nI could see Bonnie's eyes starting to flutter shut as the pill took effect.\n\n\"I'm not going to be here much longer. Please just think about it,\" Bonnie said as her eyes finally closed.\n\n\"I will,\" I said, leaning in to kiss her lips. \"I love you.\"\n\n\"I love you more,\" Bonnie whispered as she fell asleep, a peaceful look on her face.\n\n\"Not possible,\" I whispered back as tears welled up in my eyes.\n\n***\n\nBonnie started going downhill the following week. The pain was getting bad enough that the hospice nurse set up a morphine drip for Bonnie.\n\nI was at my desk, thinking that the end was coming soon, when I got a call from Mary Ann to come up to see Alice. I went into Alice's office to find her sitting at her desk with a stricken look on her face. I asked, \"What's wrong, Alice?\" as I sat down.\n\n\"I just got a call from Barbara that quote, 'General Fain needs you to get on a plane to the Pentagon right away' unquote. I'm so sorry, Virginia. I've tried to push back on this because of your situation at home, but I can't do anything more.\"\n\n\"I know, Alice,\" I said, my heart sinking at the thought that I could be gone when Bonnie died. \"You've done so much for me. I can't ask you to risk your job anymore; I'll do it.\"\n\n\"I've already tasked Mary Ann to get your tickets and hotel reservation taken care of,\" Alice said, getting up and escorting me to the door. \"You go home and get packed, and I'll have Mary Ann meet you at the airport with your tickets, so you don't have to come back here.\"\n\n\"Thanks, Alice,\" I said. I walked back to my desk to get my purse and headed out to go home. I got there to find Grace in with Bonnie. The hospice nurse was sitting beside the bed, monitoring the morphine drip. Bonnie was awake, so I went over and took her hand and bent down to kiss her.\n\n\"I love you, baby,\" I said after the kiss. \"How are you doing?\"\n\n\"I'm doing okay right now. Why are you home so early?\" Bonnie asked, her frail voice betraying her words.\n\n\"I have to fly into DC for a meeting at the Pentagon. I've tried everything to get out of it, but I've been ordered to go by General Fain,\" I explained.\n\n\"How long will you be gone?\" she asked.\n\n\"It'll be three days minimum. Hopefully, I'll be back by Friday,\" I said.\n\n\"Hurry back, I'll wait for you,\" Bonnie said, a faint smile flickering across her lips.\n\n\"You better,\" I said, leaning in for another kiss while giving her hand a squeeze.\n\nI stood up and looked at Grace. \"I need to pack and get to the airport right away,\" I said, pulling her in for a hug.\n\nI then went and got my bag and started packing as fast as I could. In five minutes, I was ready to go. As I wheeled my bag out of the bedroom, the hospice nurse came out with me.\n\n\"How bad is it,\" I asked in a low voice. \"Do you think Bonnie will hang on until Friday?\"\n\n\"I don't know. It depends on how strong Bonnie is, but it'll be close either way. The amount of morphine she's taking now will kill her in a few days if the cancer doesn't,\" she replied, just as quietly.\n\n\"Thank you,\" I said. \"Please ask Grace to come out here for a moment.\"\n\nWhen Grace came out, I hugged her and gave her a piece of paper with a phone number on it. \"Call this number if she starts to go,\" I said. \"Tell them who you are and why you're calling. I'll be back on the next available flight.\"\n\n\"I will, Virginia,\" Grace said. \"I'll keep her here as long as I can until you can get back.\"\n\n\"Thanks, Grace,\" I said, hugging her again. \"I've got to go.\"\n\nWith that, I headed out to the car with my bag. I then left to get to the airport, parking in short-term parking to get to my car and go as quickly as possible when I got back.\n\nI met Mary Ann in the terminal, and she handed me my tickets. The flight was getting ready to depart, so I had to hurry to the gate. I managed to make it and was the last one on. The flight took off, and I eventually made it to DC and then to my hotel.\n\nIn the morning, I took the Metro to the Pentagon. I got off the Metro and took the escalator up to the entrance of the Pentagon. After putting my bag through the X-ray machine, I stepped through the metal scanner and showed my ID to the guard. I picked up my bag and headed for the D-Ring, where the office of the Deputy Undersecretary of Acquisition (DUA) was located.\n\nWhen I got there, I talked to Steve, the personal assistant for the DUA. I told him about my situation and that I was expecting a call. I told him that when it came that I was to be notified immediately, no matter if I was in the middle of a briefing or not. I handed him a list of all flights out of DCA to Dayton for today and told him that if I had to leave, to get me a ticket on the next plane going out. I gave Steve my credit card information so he could. I also gave him my hotel information so he could call and get me checked out and my luggage shipped to me if necessary.\n\nSteve promised to take care of it if the call came. I thanked him and then went to the conference room where the meeting would take place. At every break, I called Grace to check on Bonnie. She was still doing okay. I made it through the first day and rushed back to my hotel to call and talk to Bonnie. She assured me she was doing okay and expected to see me Friday. She told me that she had spoken to Kathy today. Her voice was weak, but she still sounded like my Bonnie. I said goodnight to her and assured her I loved her more than anything.\n\nWednesday went just like Tuesday, with no call coming. The meetings went on, and I did my best to stay focused on what was happening here instead of what was happening back home. That night, when I talked to Bonnie, she sounded even frailer than before, and I was worried that the time was coming. Again, I said goodnight to her and assured her I loved her more than anything in the world.\n\nThursday morning came, and I called Grace before leaving the hotel. Grace was in tears, and she told me Bonnie had a rough night and was in and out of lucidity, although she was sleeping right now. My heart clenched, and I knew the time was coming soon. I made sure my bag was packed, and I took it down to the hotel clerk and asked him to take it in the back and hold it in case I needed to leave abruptly.\n\nWhen I got to the Pentagon, I talked to Steve. I warned him that a call could be coming today, that Bonnie had a bad night. He assured me he would make sure if the call came, he would let me know immediately.\n\nAt 10 AM, the door to the conference room opened, and Steve popped his head in and motioned to me. Luckily, I wasn't presenting at the time, so I picked up my bag and quietly left. When I exited the room, Steve told me that the call had come.\n\n\"Thanks, Steve,\" I said. \"When they come looking for me, tell them what happened and that I had left to go home.\"\n\n\"Sure thing, Virginia,\" Steve said. \"I hope you make it. I'll take care of everything you asked me to. Here's your flight information.\"\n\nI looked at the paper he handed me and noted that I needed to get to DCA in 45 minutes or I'd miss my flight. I ran through the corridors and through the checkpoint, and down the long escalator to the Metro Station. Luckily, the next train to stop at DCA was just entering the station, so I jumped on. I made it to the airport and got on the plane just before they closed the doors.\n\nI got off the plane as soon as the door opened. I sprinted through the concourse and out the front entrance to get to short-term parking. I got home in record time and ran into the house and into our bedroom, not even bothering to close the door. I passed the hospice nurse who was waiting outside the bedroom door.\n\nI got there, out of breath, to find Bonnie talking to Grace. Matthew and Mark were sitting next to the bed, tears in their eyes. They looked up as I got in the door, and I went over to hug them, an arm around each of them. \"I made it,\" I whispered to them. They hugged me back, and I could feel both of them sobbing.\n\nGrace looked over and noticed I was there and turned back to Bonnie and said, \"Virginia's here.\"\n\nGrace then bent down and kissed Bonnie's cheek and said, \"I love you.\"\n\nBonnie said, \"I love you, mom.\"\n\nGrace stood up and stepped aside, tears falling down her cheeks, as I went over to Bonnie, picked up her hand, and looked down on her. She was so frail and wasted.\n\n\"Hey, sweetie, I made it,\" I said, squeezing her hand.\n\n\"Virginia,\" whispered Bonnie, her eyes fluttering open, \"I need you to make me a promise.\"\n\n\"Anything, my love,\" I said, knowing what she was going to ask me. Even though I didn't want to, I knew I would promise her what she wanted.\n\n\"Promise me you'll find someone to love. Please, dear. I don't want you to be alone the rest of your life,\" she said, gathering the last of her strength to make her request.\n\n\"Only if you promise me something in return,\" I said, tears streaming down my cheeks. \"Promise me you'll wait for me.\"\n\n\"I promise I'll wait forever for you, my love,\" she whispered, a small smile on her lips.\n\n\"I promise I'll find someone to love,\" I said as I bent down and lightly kissed her lips, knowing that this was the last time we'd ever kiss.\n\n\"You better,\" she whispered, her eyes closing, \"or I'll kick your ass when I see you again.\"\n\nHer breathing started getting ragged, and I could feel her slipping away. Grace and the boys gathered around me as they also sensed the end was coming.\n\n\"I love you,\" I said.\n\n\"I love ... you more,\" she whispered as she exhaled her last breath.\n\n\"I know,\" I whispered as I slowly collapsed to the floor.\n\n***\n\nThe next morning I got a frantic call from Mary Ann, telling me I needed to get into the office right away. Alice was being called into General Fain's office to be chewed out for what I had done the previous day. Frankly, I couldn't care less about what General Fain thought of my stunt yesterday, but Alice didn't need to take his ire for what I had done.\n\nI told Grace that I needed to report to work and why. I donned my Class-A uniform and went into the office. Alice was still in General Fain's office, so I went there, and I pushed past Barbara, opened the door, and went into General Fain's office. He was in the middle of chewing Alice out when I barged in. They both looked up at me, startled by my entrance. General Fain barked, \"What's the meaning of this?\"\n\n\"Sir, if you have a problem with my actions, be man enough to take it up with me,\" I said. I didn't bother to come to attention or salute. The anger I felt was apparent in both my tone of voice and my face.\n\nWhile General Fain sat there, stunned at my brusqueness, I turned to Alice and said, \"I'll take it from here.\"\n\nGeneral Fain regained his composure and motioned for Alice to go ahead and leave. As she did, I took her place, faced General Fain, came to attention, and saluted.\n\nGeneral Fain glowered at me, and I was glowering back at him just as hard. I had never been as angry in my life as I was at this moment. I was going to take out all of my frustrations accrued throughout my whole career on General Fain. He continued staring at me for what seemed like forever, expecting me to back down. When it became apparent that I wasn't going to, he then saluted me back.\n\nI dropped my salute and stood there at attention, waiting for General Fain to say something.\n\n\"You fucked up, Major!\" General Fain barked.\n\n\"Is that the general's opinion, sir?\" I asked, steel in my voice.\n\n\"You went AWOL, Major, and that is a fact, not an opinion!\" he said, a little more calmly.\n\n\"Yes, Sir! What is the General going to do about it?\" I asked, still glaring at him.\n\n\"Nothing! God damn it, Virginia, sit down. Please.\" he said, all anger gone out of his voice.\n\n\"Yes, sir!\" I replied, sitting down while maintaining eye contact. I wasn't going to give General Fain any opportunity to take back the initiative. I stayed at attention while sitting on the edge of the chair.\n\n\"Would you care to explain your actions, Virginia?\" General Fain asked calmly.\n\n\"Sir, I received a call that someone I care for more than anyone else in the world was dying. If I wanted to see her before she died, I'd better get there quickly,\" I said, my anger still apparent in my voice.\n\n\"So, you just took it on yourself to take off without telling anyone?\" he asked.\n\n\"Sir, I got to her fifteen minutes before she died. If I had taken any time to try to get permission, I'd have been too late,\" I said.\n\nAfter a short pause, General Fain said, \"I'm sorry to hear that, Virginia. My condolences. However, there is the 'elephant' in the room to consider.\"\n\n\"Yes, sir,\" I said. \"Permission to speak freely, sir?\"\n\n\"Granted,\" said General Fain.\n\n\"That 'elephant' is moot. She's dead. There are two teenage boys who no longer have a mother. If it weren't for their grandmother, they'd be going into foster care because I have no legal standing to care for them because of outdated laws and prejudices. I'm not planning on going out today and just start sleeping around, or anytime soon, for that matter.\"\n\nI paused to gather my thoughts and went on, \"By going AWOL, I was insubordinate, and I must be punished for it. A letter of reprimand is in order, and I will sign it. However, revealing my illegal 'sexual proclivities' at this time, with all of the congressional attention this program faces, can only hurt it. This program must succeed for the future protection of our country.\"\n\n\"You've got that right, Virginia,\" General Fain said. \"Very well, consider yourself confined to quarters until I figure out how I want to handle this. Anything else?\"\n\n\"Yes, Sir. I think you owe Alice an apology,\" I said, not expecting him to do it.\n\n\"You're probably right,\" General Fain said, a wry grin on his face. \"I did go a little too far there.\"\n\nMy shock must have registered on my face because he chuckled a bit before saying, \"Dismissed, Major.\"\n\n\"Yes, sir,\" I said as I stood, came to attention, and saluted him. He returned my salute, and I turned and left his office.\n\nAfter leaving General Fain's office, I went back to my desk to get my purse. I told Susan that I would not be in the office for the foreseeable future and to ask Alice about it. I then walked up to Alice's office and asked Mary Ann if I could go in. Alice came out as soon as she realized I was outside and motioned me to come in. She closed the door and then pulled me in for a hug, saying, \"Oh, God, Virginia, I'm so sorry about Bonnie.\"\n\nI hugged her back and said, \"I'm sorry you got dragged into his office like that.\"\n\n\"Part of the job,\" Alice said, breaking the cinch and motioning me to sit down.\n\nOnce we were seated, I said, \"You can expect to get an apology from General Fain sometime soon.\"\n\n\"And how did that miracle come to be?\" Alice asked skeptically.\n\n\"The general and I came to an understanding,\" I replied.\n\nAfter a short pause, I said, \"I'm going to be gone for a while. General Fain confronted me about my sexuality, and he's confined me to quarters indefinitely until he can find a graceful way to get rid of me. In all likelihood, I'll never be back.\"\n\n\"Don't worry about it, Virginia,\" Alice said, getting up to walk me out of her office. \"We'll work around your absence as best we can.\"\n\n\"Thanks, Alice,\" I said as I left to go home. I had two sons and a mother to console.\n\n***\n\nBaker-Hazel &amp; Snider Funeral Home took care of the visitation and funeral. They were very professional and handled everything as we had requested. I was glad that they weren't going to make a fuss about the fact that Bonnie and I had been lesbian lovers. The minister who was going to say a few words over the coffin at the funeral supported gays. I wouldn't have to worry about any talk of being condemned to hell. I brought the clothing and accessories that I wanted Bonnie's body to be dressed in when they finished embalming her.\n\nThere weren't a lot of people there for the viewing. I wished Kathy could have been here because Grace could have really used her support. Some of Bonnie's classmates from college showed up. Alice also showed up, giving both Grace and me hugs.\n\nOnce the visitation was over, I went over to the coffin to view Bonnie for the last time. Everyone was gone except the staff. She looked so peaceful and beautiful, lying there in her yellow sundress, wearing the turquoise necklace that she loved so much. I touched her cheek with the fingers of my left hand and started sobbing, finally free to just let go. I didn't have to be there for everybody else for a while. I took my ring off for the first and last time and put it on her finger along with her ring. I pulled my hand back and nodded to the staffer, who released the latch and eased the coffin lid down. The clack as the top snapped shut announced the end of a beautiful life. I gathered myself and wiped away the tears. Grace and the boys were waiting for me outside. I went out to get in the car, and we all went home.\n\nThe next day was the hardest one of all. It was a beautiful spring day for the funeral at Dayton Memorial Park. The sun was out, and the smell of freshly turned earth mingled with the fresh smell of new spring growth. Other than Grace, myself, Matthew, and Mark, only Alice showed up for the funeral. Rick had called last night and gave me his condolences, and I thanked him for calling. I also congratulated him on making General. He was one of the good ones and really deserved it.\n\nThe minister said a few words over the coffin, reminding us all that Bonnie had gone home to be with Him. I silently asked Him to cherish Bonnie and to reassure her that she had lived a good life. I knew some people would condemn Bonnie to hell for loving me. They were just ignorant people who couldn't grasp that He loved everybody unconditionally and only asked that we do the same.",
        "When the minister finished, the coffin was lowered into the grave. We all went up to toss a handful of dirt onto the coffin. I went last, and as I slowly dribbled the soil down on top of the casket, all I could think about was the promise I had made her. How could I possibly find someone to take her place?\n\nWe went home. There was a lot of planning to do over the next few weeks. Matthew and Mark were going to go back with Grace to California to live with her. I would have their stuff shipped out there as soon afterward as possible and follow them out there as soon as I could.\n\nI had not heard anything from General Fain about what he was going to do about me. I had signed the letter of reprimand that he had drawn up shortly after the funeral. He put it in his drawer and said he was still trying to work something out. I told him that whatever it was, I wouldn't fight it. He again gave me his condolences. I'm starting to think that his bluster about homosexuality was just that ... bluster.\n\nThere was one thing I had to do that I hoped wouldn't cause Grace any problems. I contacted Bonnie's ex-husband Gary. I let him know that Bonnie was dead and that he would have to start sending the child support payments to Grace since she would be taking care of them. I asked him if he was going to contest Grace for custody of Matthew and Mark. Gary said no, that he had had no part of their life until now, and he was okay with Grace taking charge of them. I thanked him for that and hung up. I was determined that if he did try to interfere, I would hire the best lawyers possible to prevent it.\n\nWe packed all of the boys' clothing and possessions and called the shipper to pick up and send it out to Grace's place. I saw Grace, Matthew, and Mark off at the airport, promising them that I'd be out to see them as soon as I could. I hugged each of the boys, telling them how much I loved them and would miss them terribly. They both told me they loved me back. I watched them go through the door to get on the plane. Kathy was going to meet them at LAX. She was on crutches now and could get around without too much trouble. I was glad that Grace would have Kathy to support her until I could get back. I stood there at the gate, wishing I could go with them until their aircraft pulled out of the gate and then headed out to the parking garage to get my car and head home.\n\nWhen I got home, I decided it was time to make the call I promised myself that I would never make. I dialed the number from memory, and after three rings, the operator answered, saying, \"Pentagon Switchboard. Where may I direct your call?\"\n\n\"General Michael Travis, please.\"\n\n\"Who may I say is calling?\"\n\n\"Major Virginia Hanratty.\"\n\n\"One moment, please.\"\n\nAfter a minute, I heard a click and then, \"This is General Travis.\"\n\n\"Mike, this is Virginia,\" I said, steeling myself for what was coming.\n\n\"Virginia, to what can I blame this call on?\" he asked.\n\n\"I need to call that favor in you said you owed me,\" I said.\n\nA long pregnant pause, and then Mike said, \"Of course, Virginia. Whatever it is, I'll do what I can. By the way, congratulations on getting your line number for Lieutenant Colonel.\"\n\n\"Thanks, Mike,\" I said. The irony of the situation hit me as I went on to explain to him what I needed. He tried to dissuade me, but I insisted, and he eventually said he'd take care of it this evening.\n\nI thanked him, said goodbye, and hung up. I ate dinner, cleaned, and tidied up until I went to bed, hoping I'd finally be able to get some sleep.\n\nThe next morning, I donned my uniform, hating what it represented. The Air Force hadn't been there for me when I needed it most, so why should I continue to owe allegiance to it?\n\nI headed into the base. Instead of going into my office, I headed down to the Air Force Personnel Center. I was going to sign the paperwork that General Travis had ordered to be prepared for me to resign my commission. I was done.\n\n***\n\nAfterword: That's the story I intend to tell for now. While Virginia is the reason for this story being told, and there will be more stories involving her, I wish Bonnie's story didn't have to end here. She was a wonderful person and didn't deserve what happened to her, and I wish I could have met her more than the one time I did. Unfortunately, that's life. A link to the YouTube video \"Done Too Soon\" by Neil Diamond is on my bio page if you want to listen to it. It beautifully expresses my feelings about her death at such a young age. "
    ],
    "authorname": "Candy_Kane54",
    "tags": [
        "cunnilingus",
        "lesbian",
        "lesbian military officer",
        "lesbian sex",
        "miitary officer",
        "romance",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/your-silver-nights-and-golden-days-pt-05"
}