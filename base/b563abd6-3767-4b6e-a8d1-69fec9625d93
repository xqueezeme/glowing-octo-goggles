{
    "title": "Accident",
    "pages": [
        "First, let me say I am NOT a pervert! I am serious, I really am not.\n\nNot one bit of that was my fault.\n\nBut things happen sometimes, I guess. So on to my story.\n\nIt was just a party, I happened to run into my friend Jerry at the tavern. That was an accident too, I was just down there to shoot some pool and see if there were any girls around.\n\nYou know, to talk to and stuff. \n\nAnyway he mentioned they were having a get together at he and his wife Marie's place up by the lake. They had two kids, boys, both of them brats and about 10 or 11 or so. Bunch of noise, running around, shooting at me with water pistols, stuff like that. \n\nMe? I am Dan, everybody calls me Danny. 5' 10\", 175 pounds, I check myself out in the mirror and the ladies could do worse.\n\nPlus even though I am not huge and overly muscled, the good Lord did bless me with..well, down there, if you know what I mean.\n\nIt's not so huge that it's actually a weapon, like I see on some of those guys when I accidentally end up on a porn site on my computer.\n\nI never actually go to any of those, but it's tough in today's world when a guy just wants to check out the latest beach fashions or maybe brush up on his massage techniques.\n\nOne never knows when things like that might come in handy, plus it's nice to look one's best.\n\nFamily type parties bore me, I always preferred the beach with cute girls running around. \n\nSince I am getting to the age where I should be thinking of settling down, you know, kids and things like that?\n\nWhat better place to look than at a beach, I mean, you wouldn't buy a car without looking under the hood, right?\n\nI often see the guys down there, over muscled Ape types wearing those thong type suit bottoms. The only thing missing is the feathers splayed up out of their asses, like the Peacocks we see on the Green channel.\n\nThose thong type suits look funny to me on those huge guys, the material outlining their you know whats.\n\nMine is black. \n\nHey, it's the style!\n\nA few times I even managed to get lucky, a few beers and some nice chat works fairly well. Not that I ever go down there to prey on any of the girls, after all, I am not a pervert.\n\nBut no, a family party? Not my thing once Jerry told me his brother Mark and his wife Jennifer would be there. Mark was OK but they had money and Jennifer always made sure everyone knew they did.\n\nThat kind of drove me nuts, I had been to some of their parties before. I had been to the lake also but that was for fishing, everyone said there were monsters in there but all we ever caught were those stubby tailed planted Rainbows about 8-9 inches long.\n\nThe fact that Mark's wife Jennifer nearly always wore those silly looking Wicked Weasel sun bathing outfits didn't even enter into it, I don't pay too much attention to older ladies.\n\n\"Oh, come on! My buddy Bob and his two cousins will be there, you will have fun!\" Jerry pressed me.\n\n\"Two cousins?\" I asked.\n\n\"Yea, Sandy and Brandy, they are twins. Just wait until you get a load of that pair! Plus Marie's Mom is taking the kids, they can be a bit bratty, you know.\" He was grinning now.\n\nNo shit. \n\nBratty, like the time they put that foaming denture cleaner in my beer while I was dozing?\n\nOr the time they caught two Chipmunks and stuffed them into my VW Beetle which I discovered halfway down the hill?\n\nThe last part of the road up to the lake is about a half mile long and if it was any steeper one could just step off the top of it.\n\n\"Oh? Like why?\" I asked.\n\n\"So it can be just adults. They are eighteen, stacked like you won't believe, the only bad part is Bob raised them by himself after his brother's old lady split and he took off for Australia to get out of paying alimony. Bob watches them like a Hawk so both of them are probably untouched. Still, it's worth it just to look at them, trust me!\"\n\nI meant why was he leaving his kids and going up to the lake, they always had their kids with them. \n\n\"Just Adults?\"\n\nThe one party maybe six weeks earlier flashed into my mind, Jerry had been dancing with Jennifer and Mark was dancing with Marie. No kids that time either, things got friendly.\n\nSo OK. I got that.\n\nProbably he wanted to look at Sandy and Brandy himself without worrying about his brats.\n\n\"Stacked?\" He had said? Why not?\n\n+++\n\nThat is how I ended up herding my ratty VW Beetle up the steep dirt road to the lake. I barely made it, foot to the floor in second gear because first didn't work.\n\nKind of steep, which I remembered after the Squirrel incident.\n\nI mean, the lever went into first but it was like there was nothing in there?\n\nMaybe that was what the noise was, it sounded like gravel or something when I tried it.\n\nOh, well. I made it. I got my car parked, stuffed the block of wood I carried in the trunk up front behind a tire.\n\nThe emergency brake didn't work any more since I damn near tore the handle off of it after that Chipmunk hopped up onto my shoulder.\n\nAnd yes, you can too shift into low gear going downhill at 35 MPH.\n\nI had my fishing pole just in case things got too boring, a case of brew in the back and a blanket, plus my bathing suit.\n\nThe black one. \n\nI wasn't real sure I would put it on, but I brought it just in case.\n\nIf it was any hotter out the road would have melted. I think the pavement part farther down actually did.\n\nThe first thing I spotted was Jennifer sitting on the porch in a pink bikini that barely contained her store bought boobs.\n\nThat suit was the same one she had on at a backyard pool party I went to at their house, she was fun to look at in it. I had put on my own suit that day and noticed she acted like I was fun to look at too.\n\nNot that I would be too interested in an older lady like that, after all, she must be around 35 or 36 or so.\n\nOf course she had on huge diamond ear rings, several expensive looking rings on her fingers and a couple of bracelets.\n\nPlus she was so dark from the spray on tan that she could have passed for African except for the blond hair piled up on her head.\n\nShe was fully made up, lipstick, colored cheeks and fingernails and toenails that were fire engine red.\n\n\"Hi, Jen!\" I said, hopping out after making sure my car wouldn't leave all by itself since the thing kept jumping out of gear.\n\n\"It's Jennifer, Danny.\" She instantly corrected me, then she glanced down at my crotch.\n\nThat happened every single time I saw her without fail, I always called her \"Jen\".\n\nI mean the correcting her name part, not looking at my package. I had on my baggy shorts anyway, things are not quite as obvious wearing those.\n\nYea, I did it deliberately, mean of me, huh?\n\n\"Where is everyone?\" I asked her.\n\n\"Jerry and Mark are out back trying to get the barbecue going, Marie is in the house, Bob and the girls haven't arrived yet.\" She reached out and picked up a long stemmed glass that had something pink in it, her fingers splayed under the bowl of it, took a sip.\n\nI used the moment to take a look at her big black nipple, when she turned like that it always slid right out, then right back when she turned again.\n\nYep, it popped right out like I had seen a half dozen times before, I think because her tits were made of concrete and didn't move at all. She always wore that top with it laying on her, she obviously didn't need any support at all.\n\nThen when she sat down the cups bulged forward. Jen also spent a lot of time looking away so anyone interested had lots of time to check her titties out.\n\nI figured since they were close to perfect, they cost around $5000...each. Like I said, Mark and Jennifer had money. I had parked my VW right next to their silver Cadillac, you know the kind I mean. What are they, 60 or 80 grand?\n\nI finally wandered around back, the two guys were standing back looking at the barbecue, I could see why since they had flames going ten feet in the air.\n\nNo worries about setting anything on fire, I had helped them trim the tree branches back after the last barbecue.\n\nThose were dead, anyway. I like Jerry but he isn't exactly the smartest rock in the box.\n\n\"Got her going!\" Jerry grinned at me.\n\n\"No shit.\" I laughed, setting down the beer.\n\n\"Cold ones over there.\" He pointed at a cooler nearby, then I spotted the other cooler full of ice so I loaded that one.\n\n\"How has the fishing been?\" I asked, figuring I would end up down on the dock before the day was over.\n\n\"Too hot, probably nothing biting. Maybe later this afternoon?\" He said, starting to saw away with one of those Chinese made steak knives at what looked like half a Cow sitting on a huge platter.\n\n\"New York's, got this down at that Grocery place that sells to restaurants.\" He said, as much to himself as anyone else. He was busy trimming off huge layers of fat.\n\n\"Half price!\" He added. I looked, he was going to whack half of it off anyway, he might as well have bought the trimmed ones.\n\nI went and plopped down in a lawn chair. Then I heard voices chattering away.\n\nA large man came around the corner carrying two big sacks, right behind him were two young women.\n\nWomen? Maybe girls would fit better. I took one look and almost fell off the lawn chair.\n\nGood Lord, good God almighty! Blond hair, long and straight and parted down the middle, flat brown tummies, cute pixie type faces, those round behinds that every female on the planet would die for and some spend one hell of a lot of money to get.\n\nTitties that sure as hell were not store bought and the largest part of them sticking out the sides of what pretended to be tops.\n\nI was glad I had on my baggy tan shorts, otherwise I was going to demonstrate my reaction very clearly.\n\nJerry was not kidding one bit.\n\nThere were introductions all around, Sandy and Brandy were going to be a problem to know who was who because not only did they have on identical suits, they wore their hair the same and both of them had a tiny little diamond in their navel.\n\nI already knew they both had bald beavers, those suit bottoms left no room at all for any hair. There was also four identical bulges out each side of a tiny little triangle of cloth that pretended to be a bikini top.\n\nI also knew they spent quite a bit of time in those outfits since those round butt cheeks had no sign of lighter color on them.\n\nEasy to tell since I could see all of them, the string went right down the middle and was not in sight.\n\nI was thinking that \"Uncle\" Bob was probably a very happy man.\n\n\"You girls stay out of the beer!\" Bob told them, pretending to sound stern.\n\n\"Yes, Daddy.\" They answered in unison, each of them grabbing one the instant he turned his back, then they both disappeared around the corner, giggling.\n\nI thought Jerry said that Bob was an Uncle but they called him Daddy?\n\nOh, well.\n\nI snickered to myself at that, they saw me catch them at swiping some brews and just grinned, then they vanished into the bushes.\n\nI was on my second one when they came back a half hour later. I watched as one of them went over and said something to Bob while the other one grabbed two more bottles.\n\nThe one that was distracting Bob made sure she had his attention, she reached out and put her hand on his bicep, sliding it up and down as she said something.\n\nI realized from watching them work together that they had done things like this many times.\n\nThen Jennifer came around the corner, sat down close to me and started telling me how well they had done in the stock market.\n\nHer suit top was hanging open, there was that big black nipple again.\n\nMarie came out with a huge salad, mercifully got Jennifer sidetracked so I slipped away. I got my fishing pole and some of those little red fake Salmon eggs and headed for the dock.\n\nI also had some blue rubber worms, why they were blue beat the hell out of me but the guy at the store told me that was a killer bait this year.\n\nI cast out into the lake, watched the bobber sit there for awhile.\n\nThen Mark was calling that the food was ready so I stuck the butt of the pole into a crack between the boards and went up to eat.\n\nI noticed that Sandy and Brandy were sitting off by themselves but they kept looking my way.\n\nJerry was right about them being fun to look at but I was 30 and they were barely 18, and their Daddy..I mean Uncle.. was right there doing his best to keep an eye on them.\n\nBut he wasn't doing that well, I knew they had managed to get at least three beers each and they were showing it, whispering and giggling over there. They kept glancing my way, too.\n\nSitting with their legs crossed, not that I was looking really. Two identical pieces of cloth barely covered them, I could see perfect sets of inner thighs. \n\nHow women manage to get brown all the way up there amazes me. Well, I guess I know how from my trips to the beach. Females all want to tan their inner thighs, that is why they sit around with their legs splayed out like that.\n\nNot that I am a pervert or anything but that's hard to miss.\n\nWhen Bob turned to glance their way they somehow coyly had their knees together, then when he turned his back those knees popped right open again.\n\nThat was fun, I had seen young girls do things like that before but with their being two of them and exactly alike, it was a kick.\n\nI finally slipped away at one point to my Beetle, tugging on my blue jeans to keep my legs from getting sunburned. It was close to 100 degrees out.\n\nWhen I got back, both of the girls were gone, Mark was rubbing lotion on Jennifer while Jerry, Bob and Marie were playing cards.\n\nMark had Jen's top undone, she was lying face down, her tits pressed against a blanket.\n\n\"I better go check my fishing pole.\" I said.\n\n\"OK. Get a big one!\" Jerry said, then stuck his nose back into the cards he was holding. I noticed Marie had changed into shorts and a halter top, she had a soft looking little roll on her tummy, not bad. She had a nice looking pair of jugs that sort of nestled neatly into the top and moved around when she did.\n\nNot bad at all.\n\nMarie caught me cold checking out her tits and gave me a big smile. I grinned to myself as I left, Marie was quite a MILF.\n\nIt popped into my head that I was always the odd man out at their parties yet they nearly always invited me? I just figured part of that was Jerry and I being buds, we liked to play pool and sometimes go bowling.\n\nHaving two younger girls around was different, there was only one time that a gal my age had been there.\n\nHer name was Jeanie, she was cute but had two front teeth that were big and square and she was as flat chested as it is possible for a female to be. Jeanie was side hill related to Marie, I found out later.\n\nWe just didn't hook up, well once but that was uneventful. Nice gal but skinny, no boobs.\n\nI like boobs on my lady friends.\n\nPlus those big teeth scraped me some, but I guess she couldn't help that. We just sort of passed by in the night and I never saw her again.\n\nThe one funny thing about Jeanie was she sounded just like that damned Chipmunk when she climaxed.\n\nThe one I made the mistake of grabbing when it hopped up on my shoulder while going down the hill?\n\nThere were still marks on my hand.\n\n+++\n\nI headed down to the dock, just as I got to my pole which was still sitting there, my foot caught and right into the lake I went.\n\nLet's just say that cleared up my being a bit tipsy real quick.\n\nShit! Just shit! Now I was soaked, all I had with me was my baggy shorts, I wasn't about to wear my bathing suit in front of those two girls.\n\nNot with their Dad...I mean Uncle...around, anyway. He was kind of big.\n\nBack to the VW I went, stripping off my jeans and underwear, then I tugged on my dry baggy shorts.\n\nI went back down to the dock, reeling in my line and replaced the bait. It looked like something had nipped at it, that gave me hope.\n\nI cast that back out a little farther and sat down to see if anything would happen.\n\nThe Sun was warm, my belly was full, and I had four beers down me.\n\nI fell asleep in no time.\n\n+++\n\nThe dream was actually pretty nice, it was about Jennifer and she was finally shut up because she had my cock in her mouth, her big black nipples hanging down.\n\nGod that felt good, but I was wishing she would just work on it and stop giggling.\n\nGiggling?\n\nI opened my eyes, two blond heads were sticking up over the end of the dock about three feet away.\n\n\"Oh, shit!\" One of them said when she saw I was awake, they both took off with a splash.\n\n\"Nice one!\" One of them yelled over her shoulder as they took off swimming.\n\nWhat was that all about? I wondered. Then it hit me that I not only had a full woody going on, but it was sticking almost completely out the leg of my shorts!\n\nAnd my hand had been busy down there.\n\nThe two girls had been looking right up the leg of my shorts at my cock, which was as full as it was ever going to get.\n\nWith me encouraging it in my sleep.\n\nI quickly adjusted things, looked over to see both of them headed for the house on a dead run.\n\nOh, man? Now what was I going to do? If they said anything to their Uncle, I was probably toast.\n\nBob was kind of big.\n\nI had no idea how long the two of them had been there staring at my naked dick but from the looks of things, it was long enough.\n\nI grabbed my pole and reeled it in, the bait still untouched.\n\nNothing to do but face the music and try to explain, so I headed up there.\n\nMaybe they hadn't said anything?\n\nBob was fast asleep in a lawn chair. Jerry, Marie and Mark were playing cards so intently they didn't even look up. Just then Bob snorted and looked over at me.\n\n\"Catch anything?\" He asked.\n\n\"Naw, too hot.\" I went over and grabbed a cold beer.\n\nI didn't see Jen, she must have been in the house. Then the two girls came out, they looked at me and snickered, then one of them walked over to get Uncle Bob's attention while the other one innocently slipped by the open cooler, grabbed two more bottles of beer and took off for the bushes.\n\nThe first one headed after her seconds later.\n\nI spotted their heads pop up from behind the bushes, some more giggling, then they saw me looking their way so off they went.\n\nJennifer came out of the house, she looked around, then walked over to me.\n\n\"I think we need to talk, Danny.\" She whispered.\n\nI just looked at her, I had no idea of what to do or say.\n\n\"Come with me, please.\" She turned and headed for the house. \n\nThat wasn't a request. I looked over at my Beetle, thinking of just making a run for it.\n\nBut hell, she could give me a 1/4 mile head start and run me down in 60 seconds in that Caddy.\n\nI felt just like I did when my Mom caught me with my hands in the candy sack, and I denied everything. Then of course she dug about 20 pieces of it out of my pocket.\n\nPretty obvious, it's hard to talk with your mouth full.\n\n\"Back here.\" Jennifer said, holding the door to one of the back bedrooms. I meekly went in.\n\n\"Now. What is this I hear that you were exposing yourself to those two little girls?\" She asked.\n\n\"I wasn't. I was just fishing.\"\n\nBesides, those two were not exactly \"little\" girls.\n\n\"They said they saw your...thingie? And you were..rubbing yourself?\" Jennifer didn't really sound mad. \n\nIn fact, she had a grin on her face?\n\n\"Hey, look. That was an accident, I was fishing and fell asleep. I didn't know..\" \n\nI was reasonably sure that those two little girls were not exactly very innocent but I kept my mouth shut about that.\n\n\"They said you were playing with it? Honey, I know how you men are when you get..uncomfortable, but we just can't have that going on around here, OK?\"\n\n\"I...uhh...OK. It was just an accident, I will be more careful.\" What was I going to say? I was doing my very best to sound perfectly innocent but I knew my face was bright red.\n\n\"Anyway, here, I am going to take care of that little problem for you, honey, then you will feel better.\" ",
        "She smiled, reached out and had my shorts down to my knees before I could even react.\n\n\"Oh, my!\" She said.\n\n\"Jennifer, I...\" I tried to reach down and yank my shorts back up but she batted my hands away.\n\n\"Shush, Danny.\" She leaned forward and shoved her mouth over me, holding my cock with one hand since I wasn't even hard yet.\n\nTen seconds later I was.\n\nNow how is that for a shock to a person's system?\n\nI would never in a million years have ever dreamed that Jennifer would do anything like this, but she was. She even reached behind herself and tugged her tie loose, the bikini fell away to reveal her store bought pair hanging there.\n\nHuge black nipples.\n\nMy hands came up with a mind of their own.\n\n\"Pinch them, hard!\" She mumbled through a mouthful of me. So I did exactly that. My dick was now down her throat, her nose rubbing my pubic hair.\n\nI looked down, hell, that was impossible.\n\nIn short order I was losing any kind of control, then I let fly and she just acted even more eager.\n\nBoth hands holding my balls, I swear it felt like she was swallowing me whole.\n\nFinally I felt myself start to soften, she let me slip out of her mouth.\n\n\"Damn, Jen, I never expected...?\" She didn't correct me that time, she just smiled.\n\n\"There. That should make you feel better and take those nasty urges you have away. Now any time you feel it coming on, come and see me, OK?\"\n\n\"I...uhhh...OK.\" I told her.\n\n\"Good. And if we have more time, we can use..you know, the other place.\" She put one hand on her hip and smiled, then tugged the crotch of her bikini aside for a second.\n\nThat was the fattest looking pussy I ever saw in my life.\n\n\"Uhhh...You mean?\" I answered. My cock would normally have headed straight up but she had just drained me.\n\n\"We just can't have you doing naughty things, so I will help keep you under control.\" \n\n\"Jen, that really was just an accident.\" I started to protest.\n\n\"Uh huh. And don't you worry about Mark. He won't mind, after all, you are our friend.\"\n\nShe grinned, gave my dick another quick pull and left me standing there with my shorts around my ankles.\n\n+++\n\nI pulled up my shorts and went back outside, everyone was in the same place. \n\nThen Marie looked up, glanced over at Jennifer and back at me. \n\nI caught what looked like a small smile. I put on my very best completely innocent face.\n\nThen I grabbed another brew, sat down in a lawn chair and promptly went to sleep. When I woke up, Bob was again dozing in a lawn chair a few feet away. Mark was stretched out on a blanket, Jennifer lay by his side. She appeared to be asleep too, how I don't know since Mark sounded like he was sawing firewood.\n\nThere was no sign of Jerry or Marie, and I felt cool since the Sun was just going down.\n\nWhat the hell, time to go catch a fish, so down to the dock I went. I put on one of the blue worms, cast out. It didn't go quite far enough so I reeled it back in, getting a bite when I did.\n\nI pulled in a six inch long Trout with the hook stuck in it's nose, I tossed it back. I had just cast out again, twitching the rod tip in short little jerks. I got another bite, another six inch long fish.\n\n\"Oh, you got one!\" I heard a voice behind me.\n\nI looked over my shoulder, there stood Brandy..or was it Sandy?\n\n\"Hi! Yea, I think they are starting to bite now. Where is your sister?\"\n\n\"She went to put on a top, she was getting cold. I don't know why, it must be 80 out still.\" She walked closer, looking at the fish. I got it unhooked, tossed it back.\n\nI reset the bait, stuck the pole in a crack in the boards. She was now right beside me.\n\n\"We saw you..earlier today.\" She said with a titter.\n\n\"I know. I'm sorry, I was asleep and didn't know.\" I felt myself flush slightly.\n\n\"That's OK. Sandy and I kind of liked that. We only saw one before and it was real little.\" She giggled at that, I noticed she wasn't blushing at all.\n\nNow I knew this one was Brandy. I looked up just as Sandy came running down the hill, her legs flying.\n\n\"Did you ask him?\" She said, panting as she came to a stop.\n\n\"Ask me what?\" \n\n\"We want you to let us see it again.\" They said in unison. Then they both giggled.\n\n\"What?\"\n\n\"We never saw one like that, with the end covered up.\" Brandy said.\n\n\"What do you mean, covered up? Oh!\" It struck me, I am not circumcised.\n\n\"We saw Billy's once, but it was only this big.\" Sandy held up one hand, her fingers about four inches apart.\n\nThey both giggled again.\n\n\"Brandy made goo come out of it.\" She added.\n\n\"You helped!\" Brandy protested.\n\n\"Hey, look ladies. I can't just go showing my....\" Good grief! Were these two actually eighteen? Where had then been, in Catholic school or something?\n\n\"You can look at us, OK?\" They said in perfect time with each other.\n\n\"That's fair.\" They both added at once.\n\n\"You mean?\" That got my dick to twitch. I was getting to be a lot more comfortable, they were not upset or anything.\n\n\"Yea.\" With that, Sandy tugged her bikini top aside, Brandy pulled up her T-shirt.\n\nSuddenly I was looking at four perfect breasts, the nipples tiny, the size of a dime.\n\nThere were no tan lines, I was right in my assumption that this pair was not as innocent as they pretended.\n\n\"Well? How do you like these?\" The one of them holding her T-shirt up snickered. Brandy, I guess. It wasn't easy to keep track.\n\n\"Wow.\" Was all I could manage.\n\nWhat the hell, I pulled the front of my shorts down, I was about half erect. Both of them looked down. Brandy reached out and grabbed me, that caused my cock to jerk upwards.\n\n\"See? What you do is slide this back and there it is, just like Billy's.\" Brandy said, like she was telling her sister how to bake cookies.\n\nShe tugged my foreskin back. Then she gave my cock a couple of instinctive strokes. It twitched and grew quite a bit.\n\nSandy was just staring, both hands still holding her bikini top open, Brandy's top had slipped back down.\n\n\"That is way bigger than Billy's was!\" Sandy said.\n\n\"Want to feel it?\" Brandy asked Sandy. Sandy had just started to reach out when Uncle Bob yelled for them from up at the house.\n\n\"Oh, shit!\" They both said at the same time, then they turned and took off running, leaving me standing there with my cock hanging out.\n\nI quickly put it away. I decided I was done fishing.\n\nThis was fast becoming one hell of a weekend.\n\n+++\n\nThat night I slept in the cabin's main room. Bob had a camper and went out to it, while Jen, Mark, Jerry and Marie went into the two bedrooms.\n\nThe two girls had sleeping bags, they were somewhere outside under the stars. The Moon was as full as it can get, so outside it was almost daylight.\n\nThe only sounds were Frogs singing down at the lake.\n\nI tossed and turned, my mind still full of everything that had gone on all day. Finally I got up and went outside, walking down to the dock.\n\nThe lake was flat as a pancake, not a breath of wind and it had to still be in the 70's out. I could make out some little splashes, then I realized there were Swallows feeding on bugs off the water.\n\nMy pole was still there, so I picked it up and tossed the bait out into the lake, began to slowly reel it back in. That silly blue worm had worked earlier when I did that. \n\nI made maybe a half dozen turns on the handle when something grabbed it, then turned and went the other way.\n\nWhatever it was was jumping all over the place, finally I somehow got control of it as it sulked and shook it's head about twenty feet out. I couldn't really see it, even in the moonlight but I sure did see the splashes it made.\n\n\"What have you got?\" Two voices asked, making me darn near jump out of my skin.\n\nSandy and Brandy were suddenly there, right behind me.\n\n\"I don't know but it's big.\" I said as the fish took off again.\n\nAfter several minutes, I felt it tire and begin to come in. Then it lay there beside the dock, it was at least 20 inches long. Moonlight flashed off of it as it moved back and forth.\n\nI reached down to try and grab it, but it was so slippery that every time I tried to get hold of it, it wiggled away.\n\nThen as I made a stab at grabbing it's tail, suddenly I was holding the pole with just the hook on the line.\n\n\"Oh, it got off.\" One of the girls said.\n\nDamn. The biggest fish I had ever seen in my life and it got away.\n\nOh, well. I set the pole down, looked at the girls.\n\n\"What are you two doing up?\"\n\n\"We could ask you the same thing.\" One of them said.\n\n\"I couldn't sleep.\"\n\n\"We heard you, so we came down to see what you were doing.\" The other one said, both of them chiming in to finish the sentence.\n\nThat was actually delightful, if you have ever heard identical twins talk you will know what I mean.\n\n\"Are you going to fish some more?\" One of them asked.\n\n\"No. That's enough.\" I was disgusted at my fish getting off.\n\n\"Well, want to come back to our camp? We have some pot.\" Again they finished the sentence together.\n\n\"Sure.\" We went back to their bedrolls, they were about 100 feet away from the yard behind some bushes. They pulled out a hand rolled joint, lit it up and we passed it around.\n\nNormally I would never touch the stuff but sitting with the two of them wearing nothing but tank tops and panties was different, so why not.\n\nIn short order, we were all giggling as quietly as we could.\n\n\"Danny, can we ask you a question?\" One of them said.\n\n\"Sure.\"\n\n\"When boys...you know..do it? Do they really sometimes..you know..use their tongue?\"\n\nI started laughing.\n\n\"Shhhh! You will wake up Daddy.\" We all got quiet for a few moments, listening. All we could hear were Frogs.\n\n\"Well, yes, they do.\" I answered after a few seconds.\n\n\"Do you?\"\n\n\"Yea, sometimes, why?\"\n\n\"We talk to the other girls, and they say it's really nice.\"\n\n\"Yea, and Sandy wants to know if you would like to.\" Brandy giggled.\n\n\"No, it's you that wants to know. I already did it once.\" Sandy said.\n\n\"Fibber, all you did was let Billy try to stick it in but it was too soft.\"\n\n\"He almost did. Besides, that was your fault, you made him waste it.\"\n\nThis conversation was killing me, I was nearly choking trying to keep from laughing out loud.\n\nThen they both were looking at me, so I managed to get myself under control.\n\n\"OK. Here is the deal. If you will....do that...we will rub yours for you, OK?\"\n\nI stared at first one, then the other. They both appeared to be serious, at least what I could tell from just the moonlight.\n\n\"OK. Sure!\" I said.\n\n\"Goodie! You first, Brandy.\" Sandy said.\n\n\"No, you first.\" Brandy said.\n\n\"He will see me.\" She answered.\n\n\"So what? He is going to lick you.\"\n\n\"Oh, the hell with it. Both of us at once.\" \n\nThey both reached down and tugged off their panties. They both also instantly clamped their legs together.\n\n\"Hey, I can't do both of you at once.\" I said.\n\n\"Take turns.\" They said in unison.\n\nI stifled another laugh, then reached out for the closest one to me. She resisted slightly but finally let me open her legs. I could barely make out my target in the dim light, all that was there was what looked like Adolf Hitler's mustache and soft puffy curves of flesh.\n\nI leaned down and gave her an exploratory lick.\n\n\"Oh, fuck!\" She said, rather loudly. \n\n\"Shhhh!\" Her sister whispered.\n\n\"I can't help it.\" The one on her back said.\n\nWe all held real still for a few seconds. \n\nNo sound but Frogs.\n\nThat was encouraging, so I went to work. There was almost no taste at all, just soft warm flesh.\n\n\"Shhhh!\" The other one said when she started to squeal again. It really didn't take very long, her behind was bouncing up and down so hard I was being careful to keep her from chipping my teeth.\n\nFinally she stiffened and lay back, I had already lost track again but I think that was Sandy. Then I was between Brandy's legs. Instantly I knew that from now on I would be able to tell them apart, Brandy tasted slightly musky. \n\nShe also went off very fast.\n\nI lay back, nearly exhausted from holding myself by my arms and bending down.\n\n\"That was way better than when we do it ourselves.\" One of them said. \n\nI wasn't 100% sure of what they meant by that. Was it when they did it themselves, or with each other?\n\n\"Your turn!\" They said, again in perfect unison.\n\nThen they scooted up to me, one on each side. They tugged down my shorts, and I had two sets of hands on me. I was very busy feeling two sets of nice firm titties, neither one seemed to mind that at all.\n\nLet's just say that until you have experienced that, you are missing out.\n\n\"Go ahead and suck on it.\" One of them said.\n\n\"You suck on it.\" The other one said.\n\n\"No. That's yukky. Billy was awful.\" The first one replied.\n\n\"That's because you made Billy get all messy, that's why you didn't like it.\"\n\n\"Well, Danny isn't all messy, so go ahead.\"\n\n\"You go ahead.\"\n\n\"You first!\"\n\n\"No, you!\"\n\nAll of this while four hands were struggling for position.\n\n\"Hey, I have an idea. How about we move around, we can do this while he licks some more, OK?\"\n\n\"OK. Me first.\"\n\n\"No, you were first last time, I'm first this time.\"\n\n\"OK, but hurry up.\"\n\n+++\n\n\"Are we going to really do everything?\" One of them asked later. She wasn't talking to me. She was also straddling my face, wiggling her behind in time with my tongue.\n\n\"I don't think that will fit.\"\n\n\"It will fit.\"\n\n\"I bet it will hurt.\"\n\n\"Maybe, but everybody says for just a little bit.\"\n\n\"OK then. You first.\"\n\n\"No, you go first.\"\n\n\"Hey, I don't know if that is such a good idea.\" I said, thinking about the fact that both of them were very likely fertile.\n\n\"Daddy got us some pills.\" One of them said, understanding perfectly.\n\n\"Yea, so it's OK now.\" The other one added.\n\nOne of them, I had long since lost track, slid up my legs. She reached down and opened herself, I felt my erection slide right into warm damp flesh.\n\nI realized I was correct, these two were nowhere near as innocent as they were making out.\n\n+++\n\nAn hour later we were still at it. Both of them finally did suck on me some, but to be honest neither one had any real idea how to, which I didn't mind one bit.\n\nThey both acted like this was their very first time, but somehow I had the feeling that at least something had been there before me.\n\nFrom the extremely unpracticed movements I was thinking it was probably something, rather than somebody.\n\nIt was much darker when I woke up. The two girls were in their sleeping bags, I was lying on a blanket with no idea how I ended up there. \n\nThey were whispering to each other.\n\n\"So did I.\" I overheard one say to the other.\n\n\"We are women now, aren't we?\" The other one said quietly.\n\n\"Yes, I guess so.\"\n\n\"He sure is cute, isn't he?\"\n\n\"Yea, but he is way too old.\"\n\n\"We can find some other guys I bet.\"\n\n\"Yea, it will be easy.\" There was more whispering, then it faded and they settled down to soft breathing.\n\n+++\n\nI got up and slipped back into the house as quietly as I could, got on the couch and went back to sleep.\n\nThe next morning I woke up to the smell of Bacon. Brandy and Sandy were sitting at the table eating, they looked up and smiled, then went back to their food.\n\nWe all had breakfast, later I went out and pulled the block out from behind the tire, shifted into neutral, let the Beetle roll down the hill. Once it got a bit of speed up, I popped the clutch and she started right up.\n\nI knew damn good and well I was never going to miss one of those parties ever again.\n\n+++\n\nIt was just a couple of days later, I answered a knock on my door.\n\nThere stood Marie. \n\nNow what? I wondered.\n\n\"Jerry and I had a long talk, after Jennifer told me what you did.\" She said as she breezed by me.\n\n\"What I did?\" I was thinking that Jen had told her about blowing me in the bedroom. Either that or she had found out about Sandy and Brandy.\n\n\"Yes, exposing yourself to the girls like that.\" She was grinning at me.\n\n\"Oh, God. Hey, that was an accident.\" I protested.\n\n\"Sure it was. You have been a bad boy, so you must be punished.\"\n\n\"What? Punished?\"\n\n\"Yes, take off your pants and bend over my knees.\" She said, sitting down on my couch. She hiked up her skirt, looked at me.\n\nI just stood there.\n\n\"Now! Drop them!\" She said, patting her knees.\n\nI did what she said, flushing when my now erect dick popped into view. \n\n\"Jennifer was right, you sure do have a nice cock on you. Now get over here.\"\n\nShe clamped her legs down tightly on my cock, reached around and rubbed my behind, then gave it a slap.\n\n\"OW!\" I yelled, squirming. Then she reached down and fondled my balls.\n\n\"Is that better?\" She laughed.\n\nIt was. \n\nHer tits were nice and natural, I know because I checked. I checked everything else, too, her body was soft and slightly heavy, which was nice to be honest. She could lift me right up in the air with each thrust. \n\nMarie knew how to fuck, there was no doubt about that at all.\n\nLater, I was feeling a bit guilty, so I asked her about Jerry. After all, we were friends and here I was fucking his wife.\n\n\"Don't worry, it's OK. Both of our guys have the same thoughts, Jerry and I used to swing with Mark and Jennifer but lately things haven't worked too well. Jerry really likes it if I do something like this, then when I get home he can often go for hours.\"\n\n\"Really?\" I said. That sounded on the kinky side to me.\n\n\"Yes, really. Besides, I have been wanting to do you for about a year now, but the opportunity just didn't come up. Then Jennifer got to you first, so I figured you would be willing.\"\n\n\"Your husband doesn't mind if you....?\" I asked.\n\n\"They both told us that maybe we should spice things up.\" She grinned at me.\n\n\"Oh.\"\n\n\"That's why we invited you to the parties. We weren't sure just how to get things started but then it all just fell into place. But leave those two girls alone, OK?\" She grinned.\n\nI laughed, but I did think that just might be a problem.\n\nSee? I told you I wasn't a pervert. \n\nNone of that was my fault."
    ],
    "authorname": "magmaman",
    "tags": [],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/accident-4"
}