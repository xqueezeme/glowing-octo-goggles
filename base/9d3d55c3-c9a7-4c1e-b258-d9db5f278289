{
    "title": "The Art of Masturbation",
    "pages": [
        "I believe that if there were a Ph.D. in masturbation, I would have earned it by now. Wonder what the diploma would look like? I dabbled in masturbation in junior high school, absolutely devoted myself to the pursuit in high school and by the end of college, should have been teaching it. Perhaps I can rectify that now. Consider this your first course.\n\nTime was, masturbation got a bad rap. Nobody really talked about it much, even to their friends; it was embarrassing. A lonely last resort for those unable to get the real thing. Perverts who couldn\u2019t control their animal instincts enough to keep their hands to themselves. What bullshit, and a waste of good energy.\n\nThe truth is, masturbation not only feels wonderful, but serves several useful purposes. \n\nFirst, if you\u2019re like me, you\u2019re in the mood a lot, and you simply cannot wait to have sex with your significant other to cum. Maybe you\u2019re having sex one, two or even three times a week, but it\u2019s not enough. I hear you. That\u2019s where masturbation gives you the release you must have, and I do mean must.\n\nOr maybe you have no significant other at the moment. It sure doesn\u2019t mean you don\u2019t have needs. And since no one knows better than you do how to satisfy those needs, and no one is available to, then you\u2019ve got yourself a new hobby. Beats chess.\n\nHow about those people who are having sex at home, but it\u2019s just not satisfying. Maybe it\u2019s tender and loving, but too brief. They long to be tied up, spanked, and have a large object shoved up their asses by a beautiful stranger while their other hand is\u2026well, you get the picture. For these people, masturbation can mean the difference between a life of frustration and a situation they can tolerate. Ever been there?\n\nFor me, the best part of pleasuring yourself is the fantasies. There are no rules; nothing is out of bounds. No restraints at all. Creativity is king. You can be having sheet-tearing sex with anyone and everyone you choose, anywhere you like. Man, woman, cousin, movie-star, musician, athlete, teacher, porn-star, friend, boss\u2026just to name a few. Inside, outside, in the movie theater, ski lodge, motel room, in the pool, on the desk, bent over the sink, in the shower\u2026and I\u2019m being tame. \n\nAnd your object of fantasy can say whatever you want them to. How much they\u2019ve always wanted you, how badly they need for you to make them cum\u2026only you. Remember that high school flame you never got to fuck? It\u2019s never too late. Short skirt on the girl in the next cubicle got you revved up? Use that image. Mrs. Jones, your junior-high school teacher with the short skirts and great legs? The combinations of people and places and endless. That\u2019s half the fun of it.\n\nThe other half is what your mind can conjure that rarely \u2013 or never \u2013 happens in real life for you. A friend of mine, for example, never has anal sex at home, but craves it deeply. Her fantasy goes something like this:\n\nShe\u2019s naked and blindfolded, laying face down on satin sheets. She can smell his cologne as he comes closer; hear his breathing. She jumps a little as she feels his tongue lick her ankle, making a wet path up her calf to her thighs. She shivers just a bit as her nipples begin to harden. Her legs start to spread all on their own, but he takes her ass cheeks in his strong hands and spreads them apart. \n\nHer asshole is open and exposed as he first licks small circles around it. Wetness seeps from her swollen pussy as he sticks his tongue in her ass. Behind the blindfold, she sees stars \u2013 small explosions beneath her eyelids. She feels his weight and the hard muscles of his chest against her back as he climbs on top of her. A brief flash of pain \u2013 or is it pleasure \u2013 and he\u2019s inside her, his cock making long, smooth strokes in her ass. \n\nShe opens her mouth to say \u2013 something \u2013 but as his hands cover her breasts and squeeze her nipples, no words come emerge. The feeling of his cock moving in and out of her ass is exquisite, like nothing she\u2019d felt before. It sends shivers up and down her legs, over her stomach and into her neck\u2026\n\nHe whispers in her ear, \u201cyou like it in the ass, baby?\u201d \n\n\u201cYes,\u201d she moans, \u201cso much.\u201d\n\n\u201cYou like being my little whore, feeling my hard cock fucking your ass?\u201d\n\n\u201cYes\u2026I want to be\u2026need to be your whore.\u201d\n\nShe feels the sharp crack of his hand on her ass. \n\n\u201cYes\u2026yes,\u201d she cries, water seeping from the corners of her eyes, \u201cOh God\u2026yeeeessssss.\u201d\n\nAgain she feels the sting, again\u2026until it blends with the dreamy feeling of his cock easily \u2013 surprisingly easily \u2013 sliding in and out of her now willing ass. Her hands reach down to the smooth folds of her pussy and, spreading her lips, she rubs the hard nub that makes her jaw quiver. She feels the stirrings of the evening\u2019s first orgasm about to intensify and overtake her\u2026\n\nOK, let me get my breathing back to normal, before I get carried away and have to practice what I\u2019m preaching. I\u2019m only trying to illustrate that fantasy can take you places you may never go in real life, and why not take every advantage? Masturbation does not have to be two minutes in the bathroom \u2013 though it can be if you like \u2013 it can be all day in your bed, it can be twenty minutes on the phone with a \u201cfriend,\u201d it can be whatever you want it to be.\n\nYears ago, I never thought much about women masturbating; never realized they did. I really can\u2019t believe I was that na\u00efve. Now that I know better, I have found that women seem to enjoy bringing themselves to orgasm in more passionate and creative ways than guys do; than I ever did. More than that, I think it\u2019s hot. Very hot. When I hear about what some women do, it makes me heart beat fast and gives me a lump in my throat, among other places.\n\nAnd this brings me to the reason for this article. Sharing information is what helps us improve in every facet of our lives. God, if only I\u2019d known way back when what I know now. I would have left a trail of happy women from CT back here to NJ. It also would have helped me please myself a lot more. So in the interest of helping people please themselves, I offer the following information.\n\nMen\n\nI\u2019m not going to go into the reasons we all masturbate, but just let me say they\u2019re all healthy. When you\u2019re young and inexperienced, you kinda feel foolish looking at an adult magazine you stole from your father\u2019s drawer or got from a friend, a jar of Vaseline at your side and your cock in your hand. Late at night in your room, trying to be quiet and not let anyone see your flashlight. I should know, I\u2019ve felt foolish thousands of times. Being caught, of course, would be a fate worse than death. Far worse. You may still be far away from the days when you masturbate in front of your lover, while she says nasty things to you, just for the turn on and because she likes to see you spurt cum. Good times ahead if you pick the right girl.\n\nThere are probably very few places I haven\u2019t jerked-off. High school bathroom stall, fitting room at Macy\u2019s, deserted office at work \u2013 and that\u2019s before I got creative. I have no doubt that I coaxed enough sperm to re-populate China. So, I guess it\u2019s fair to say that I\u2019ve learned a few things.\n\nFor one, masturbating to fantasy alone is fine, but not as much fun as doing it while looking at adult photos in a magazine or on the Internet, watching a porn, or even reading a literotica story. Why? For some reason, it\u2019s more rewarding to stoke your furnace with something tangible. Watching a beautiful porn star suck down cock like she needs it for nourishment, or having her ankles held high in the air while she looks into her lover\u2019s eyes and receives a good hard fucking is a great way to get and keep a hard on for\u2026oh, about a year. Certainly long enough to make yourself cum. When you have material like that, it tends to keep your mind from wandering. Of course, you have to have the time and place.\n\nTo lotion or not to lotion, that is the question. Vaseline is out of the question totally, in my opinion. It works great, but it\u2019s not water-soluble. So your cock is going to be slick, soft and water-repellent for about the next two days. Plus, it\u2019ll keep sliding out of your hand when you pee, so tell the guy at the next stall to watch out! Stick with lotion, unscented if you don\u2019t want your cock smelling like a florist shop. I would recommend water-soluble lotion \u2013 Astroglide, whatever \u2013 over nothing, when it\u2019s possible. To me, I\u2019d rather have as much realism as possible. And in my experience, the vaginas my cock has had the pleasure of entering were warm and wet. If you know any dry and cold ones, please keep them away from me. More importantly, without lotion, you have to stoke light and fast to keep from \u201cburning\u201d your skin, while using lotion is much more like the real thing: long, hard strokes.\n\nTake your time. There are two good reasons for this advice. First, why rush through something you enjoy. That\u2019s one big difference between women and men. Women tend to take their time, often enjoying one orgasm after another and creating elaborate, romantic fantasies. Men seem to want to start and finish before the TV commercial is over. It\u2019s not a race or a test, it\u2019s an enjoyable activity. When you have the time, go slow. Second, and more important, when you rush though masturbating, you\u2019re actually training your mind and cock to ejaculate quickly. It\u2019s true. Therefore, when it\u2019s actual sex, how are you going to please your lover when you cum in 30 seconds? \n\nThat got your attention, didn\u2019t it? So yes, take your time; take it easy. When you get close to cumming, slow it down. Maybe even stop for few moments. The closer you can get to cumming, then stop, then start again, the longer you may last when it's time for the real show. If you\u2019re smart, you\u2019ll have given her at least one orgasm before intercourse anyway \u2013 but that\u2019s another article. My point is, when you can prolong cumming during masturbating, you can do the same thing when it counts. This will make you a very popular fellow. Plus, there\u2019s nothing to boost your confidence like knowing you really know how to please her.\n\nBy the way, if you\u2019ve got a date tonight, cumming in advance can help you last longer later when you\u2019re actually fucking. But not right before. Maybe that morning or afternoon. No need to reduce the sexual tension because seeing her in that tight dress doesn\u2019t make your balls ache as they should. Give yourself some time in between. This has worked well for me in the past. Even when I was younger and could cum four times in a night. Two times is enough now.\n\nNow, as far as your other hand goes\u2026\n\nYou can always play with your balls, which feels pretty damn good, as you know. And obviously, some guys want to rub between their asshole and balls (the \u201ctaint\u201d area), which is also great, because it\u2019s so sensitive. I will give you one word of caution, though: if you want to stick your finger in your ass (which, by the way, requires a bit of contortion when you\u2019re lying down), make sure you\u2019ve washed your hands. Introducing the bacteria or dirt from your fingers into your colon is not best of ideas, unless you\u2019re a fan of infection. Other than that caution though, the rule is, if it feels good, do it. I mean, leave the cat alone, but if you\u2019re doing something to yourself that feels good and does not involve live electricity, then go ahead and enjoy yourself. There are few things that feel as good as cumming. Winning the lottery\u2026maybe. I\u2019d like to be cumming when I get the news, though. And if no-one is available, I\u2019ll help myself, thanks.\n\nWomen\n\nPicture a woman masturbating \u2013 may I, please? Chest glistening with sweat; mouth wide open and quivering; fingers furiously rubbing her clit, perhaps pinching a nipple; heels digging into the sheets, sliding back and forth; and at the moment the orgasm hits, her head is thrown back and an involuntary groan \u2013 so sweet and sexy \u2013 emerges from her mouth\u2026\n\nEnough about my nightly fantasies. From the women I\u2019ve emailed with and spoken to, female masturbation appears to be on a whole different level than men\u2019s. And naturally, women can orgasm again and again. Wonder what the thinking was on that design? If they let men do it, we\u2019d overpopulate the world in two weeks? On one level, it doesn\u2019t seem fair to me. On another level, it\u2019s so incredibly hot that I don\u2019t care. If I can watch a girl cum again and again, why do I need television? Oh I\u2019m sorry, I forgot, I\u2019m pretty much married. Still, I don\u2019t mind cumming only once or twice if I can watch a horny woman cum over and over. It sounds like a fair trade-off to me.\n\nThe vagina, the clit, the anus, the nipples \u2013 women sure do have a lot of pleasure zones. And those are just the ones they can get to without a friend. But for a moment, let\u2019s talk about woman\u2019s best friend \u2013 the vibrator (and we\u2019ll throw the dildo in for good measure.) \n\nI\u2019ve heard from more than one woman that men seem to be intimidated by vibrators. Wonder why that is? Do they fear being replaced by an appliance? I know that I don\u2019t. When they make a vibrator with strong arms, soft lips, a tongue, experienced hands, penetrating eyes and teach it to talk dirty and appreciate women as much as I do, then I\u2019ll begin to worry. For now, I feel confident that I can\u2019t be replaced by anything with batteries, and I\u2019d be happy for my lover to use one. Indeed, I\u2019d encourage it. Anything to make the experience more rewarding.\n\nYou see, and this is a crucial point for both sexes to remember: masturbation does not replace sex, it makes you want it ever more! If you\u2019re starving, does one bite of food satisfy you, or make you want more? I can honestly say that I do not know one man or women who, no matter how much they masturbate, wants sex any less. All it does is to help stifle the desperate need for release. For me, it makes me want the real thing even more. \n\nIt\u2019s the same reason that men should welcome their women using a vibrator or any other kind of toy. Guys\u2026I mean, hey GUYS\u2026she\u2019s a horny girl \u2013 you lucked out! Don\u2019t complain, buddy -- rejoice. I\u2019d rather have a lady who uses her vibrator whenever I\u2019m not around than one who can take sex or leave it. Wouldn\u2019t you? In short, if you can be replaced by a toy, don\u2019t blame the toy.\n\nFor the purposes of this article, I\u2019m often going to lump vibrator and dildo together into one category. Though there are differences, they essentially serve a similar purpose. Vibrators come in so many sizes, shapes and textures that it would require another article to discuss them all, and I\u2019m really not qualified. Small, large, thick, thin, realistic, ridiculous, light vibration, jackhammer intensity, soft, hard, remote control, bullets, ticklers, rings, battery, electric, waterproof, ridged, white, black, clear, purple \u2013 I doubt there\u2019s any segment of the market yet to be explored.\n\nMost women I know have more than one vibrator, and some have a collection that\u2019s downright impressive. And why not? You can get a vibrator for as low as $10, and probably go as high as hundreds of dollars. There are other good reasons for having more than one vibrator, and more than one type. You may want a thick dildo in your pussy, a powerful electric vibrator on your clit, and a thin, battery operated vibrator in your ass, all at the same time. If so, call me and I\u2019ll grab my cock, my video camera and whatever else I can get my hands on and be right over. Uh, what I meant to say is, there are many methods and intensities of stimulation, and you have no reason not to experiment.\n\nMost girls begin masturbating with their fingers before they move onto vibrators. So portable, the fingers; they go everywhere with you. It is at this stage where girls or women begin to tune-in to their body\u2019s rhythms and find out what works best for them. Light rubbing, circular motions direct stimulation, indirect stimulation, anal stimulation or clitoral stimulation. Maybe all of this stimulation. Central to this stimulating topic is the fact that everyone has different pleasures. \n\nSome women experience a series of small orgasms in sequence, while others reach a mountainous peek. Some have both. Many women delight in cumming over and over (this is where my male envy comes in) while others like a simple cum and go.\n\nControlling your orgasm during masturbation not only prolongs the pleasure, it allows you to master doing the same thing during real sex. How can you do this? First, of course, there is the tempo of your fingers on your clit. Most women, statistics suggest around 70 percent, cannot achieve orgasm from vaginal stimulation alone; they need direct clitoral stimulation. So obviously, rubbing your clit very fast will lead you to orgasm quicker, if that\u2019s your goal. Varying the pace can make things more fun, though. You may go slow, fast, even stop at the brink \u2013 let the feeling subside \u2013 then begin again.\n\nWatch your breathing and let your muscles relax. Breathing faster and tensing your muscles lead to quicker orgasms. Then there are Kegels.\n\nKegels, as you may have heard, exercise the pubococcygeal (PC) muscles. This group of muscles are commonly referred to as the pelvic floor and can be found stretching the length of your pubic bone to your tailbone. Many women practice kegels for purely sexual reasons. Since the muscle encircles the outside of the vagina, women who practice Kegels can often experience a stronger potential for orgasm, enhanced g-spot activity, and an increased sexual awareness. Some even claim they experience more intense orgasms or multiple orgasms once they begin performing the Kegels. (As a side benefit, performing the Kegels during intercourse provides a \"gripping\" sensation for your partner, helping enhance his orgasm. It\u2019s like a hand gripping your cock, which, let me tell you, doesn\u2019t suck.)\n\nExercising the PC muscles with kegels is not hard. Just tighten your muscles as though you are trying to stop the flow of urine. Hold for a count of five and relax. Do it a few times, until you build up to ten times. That\u2019s all there is to it. \n\nMasturbation is a wonderful new experience for many. Like a new toy that you never have to give back for the rest of your life. And it feels soooo good. There are few things in life more pleasurable. Again, experimentation is great when you start \u2013 great anytime, really \u2013 and it helps you discover what you like and don\u2019t like, and what works. All of this can be done with your fingers, or your boyfriend or girlfriend\u2019s fingers. Moving on to vibrators is the next logical step.\n\nLittle known fact: Right after ancient man discovered fire, they discovered masturbation and immediately after that, dildos, in the form of animal tusk. But once Edison invented electricity and batteries, his wife invented the vibrator because her husband was busy so much. She went through 3,000 batteries the first month. You won\u2019t find this in many history books, though. The benefit of vibrators, of course, is that they offer a steady, adjustable stream of stimulation. Tongues only wish they could do this.\n\nMe, I love to watch a women use a vibrator. I love to HELP a women use a vibrator. And I have. By placing the vibrator in different places, moving it up and down from anus to clit for instance, I\u2019ve helped her find just the right spots. This way she knows just where to place it when she\u2019s alone. Am I altruistic or what? Not totally.\n\nBy the way, who am I to predetermine what a women\u2019s erogenous zones are? The vagina, the clit, the anus; those are obvious. But some women get turned on big-time by a vibrator on their nipples, between their breasts, on their neck. Always, If it feels good, do it.\n\nUsing a vibrator in your lovemaking with a partner is another great idea and more fun than free steak at the Outback. I once wrote a story about a girl with a vibrator in her pussy and a cock in her ass, who exploded in orgasm. Although the story is fiction, the action is not. The added stimulation of a vibrator, along with all the other sensory stimulation of sex, all at the same time, is like flooring the gas pedal. It just makes it hard to breathe \u2013 in a good way \u2013 with every nerve cell tingling.",
        "A friend of mine beautifully describes her masturbation experience as follows:\n\n\u201cFor me, it's the erotic touch\u2026featherlight touch almost above the skin...slow exploration of a body and hard primal force all intertwined; and the tease that comes with both... Of course, when I'm getting myself off it usually includes a fantasy of some sort that got me started unless I just happened to need to get off, and the fantasy just comes during the action. Usually they include the more...taboo things you don't allow yourself\u2026probably because there is a social stigma attached to masturbation as being something that's supposedly taboo. \n\nBut I disagree. I think it's totally natural, but I do like the naughty bit attached to it; ergo I indulge myself at will and fantasies abound. To really make myself come hard...it's a matter of stop and start rubbing my clit and working my Kegals in time\u2026squeezing them tighter and tighter as the tingles build while I rub my clit almost to the point of no return then I stop all movement...and breathe...and wait for the wave to subside and start over very slowly rubbing my clit and then squeezing even slower.... feeling the muscles contract all the way into my body. Depending on how hard I want to cum I may do this three or four times. Sometimes I slip over that subtle edge, \n\nI barely have control over and the orgasm comes which is somewhat of a disappointment...as it's not nearly as good as when I'm in control of it. Personally I think too many men explore the whole body in the first bit of 'wooing' but then they get into routine and go for the main prize and forget all the attachments that make a woman hot when you pay attention to them. Neck...shoulders...earlobes...thighs.... inner arms...too many things to mention. I agree about vibrators...both that they need not make any real man insecure, and they are a wonderful toy to enhance your play.\u201d\n\nAs a man, I could never have put it more succinctly. Plus, wasn\u2019t that damn hot?\n\nThe memorable point she made is that masturbation can be a full-body, romantic experience. Don\u2019t simply rub your clit. As she writes: your neck, your face, your inner thighs, your breasts and stomach \u2013 explore them all with your hands, your vibrator, a feather \u2013 whatever gives you pleasure.\n\nI hope I\u2019ve given you some ideas, some fun and a good place to start or pick up from. Life is short \u2013 enjoy yourself whenever you can, even when you\u2019re alone. If you have a minute, drop me a line of feedback. I always appreciate and enjoy hearing from those who are kind enough to read my stories. Good luck and good sex!\n\nBatsandGlamour"
    ],
    "authorname": "BatsandGlamour",
    "tags": [
        "vagina clit",
        "sex home",
        "clit anus",
        "good reasons",
        "stop start",
        "clitoral stimulation",
        "friend mine",
        "real thing",
        "cum times",
        "feeling cock"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/the-art-of-masturbation-1"
}