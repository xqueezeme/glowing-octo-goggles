{
    "title": "Truth or Dare",
    "pages": [
        "Jessica \n\nStriding out into the street, I banged the door shut behind me. Alex, my flat-mate for the last two years, had asked me to move out so her boyfriend could move in. It was her apartment and we had never been close, but it had been my Edinburgh home since the second year of university. Now, two months after graduation, I was homeless, short on friends and in need of a new start.\n\nI exaggerate. I wasn't homeless. My parents still kept my room as I left it. But that was near York, 200 miles away. Also, Alex hadn't evicted me on the spot. I had known it was coming for a couple of months. My Dad had collected most of my belongings four days ago and left me with a suitcase of essentials. But the lack of friends and the need for reinvention. That was real.\n\nI booked a cheap hotel room for two nights to give me time to decide: Edinburgh, York or somewhere new? It would have helped to have a job lined up or to know what job I wanted. Instead, I was drifting. It was 10 o' clock, there was nothing on TV and the hotel Wi-Fi was barely fast enough to check my email, let alone watch Netflix. Hoping for comfort, I texted Matt.\n\nMatt\n\nThe dried sweat flowed off me in the shower. Guitars and falling water clashed as the music from my bedroom came through the open door. It was my first week of living on my own after three years in student housing and a six-week tour of Australia with some course-mates. Now, I was renting my own house and the novel privacy hadn't yet worn off -- hence showering with the bathroom door open.\n\nI checked my phone as I came back into my room and then tossed it onto the bed. A brief \"hello\" from Jess but nothing else. I had resisted checking my phone during three hours of tennis, struggling to ignore it at the change of ends, in a vain hope that there would be a message or missed call from Izzy when I finished. We had been on a couple of coffee dates over the last two weeks and on Tuesday night I had taken her to the local arthouse cinema. Then she had gone quiet. After three days of reacting to the slightest vibration in my pocket, or just randomly prodding my home button, I was still not ready to accept that she had lost interest.\n\nLying on my bed, after half an hour of distracted reading, I remembered that I still hadn't responded to Jess. I didn't really want to talk to her, not by text and certainly not on the phone or Skype, but I convinced myself that if I replied to that message then Izzy would reply to mine.\n\nJessica\n\nFucking Matt. Ten, perhaps fifteen, minutes had passed and no response. There wasn't anyone else I could try. I checked websites, Instagram, Facebook; acting on autopilot. Nothing of interest. Just a deadening passage of time. Distraction stopped me worrying about the decisions needed.\n\nI checked the time, put my phone down and turned over in bed. Immediately, my phone spread dim light into the darkened room. A message from Matt. His familiar greeting: \"Hi, how are things?\"\n\nI replied, \"Good. Sort of. Me and Alex broke up so she could be with her boyfriend. But I have you in a hotel room. So that's OK.\" I left him to work it out.\n\nAfter a few minutes of silence, I sent, \"Sorry, weird joke. I moved out so Alex's boyfriend could move in. Staying in a hotel tonight and tomorrow. Not sure what's next.\" Time continued to pass. I added, \"Matt, I could do with a friend. Can you talk?\"\n\nMatt\n\nI don't believe in superstition in the same way that I don't believe in God. From a scientific perspective, it's nonsense but, at the same time, you can't be sure. So I still offer deals to the fates and allow myself to read meaning into coincidence. Less than thirty seconds after I texted Jess, a message came through from Izzy. She was sorry that she hadn't been in touch and sorry that whatever. She didn't want to see me again and Jess was bugging me with her cryptic flirtations.\n\nI tossed my phone to the other side of the bed and turned off the light. It vibrated again. Jess again. Then once more. Jess was still being as vague as ever. Even when we were at school, she would send these weird messages saying things like, \"I was just thinking about you\" or \"Just getting ready for bed,\" apropos of nothing. When I replied, the conversation trailed off quickly and, eventually, I decided that she was messing with me in some obscure way. This time however, she did at least seem to want to talk.\n\nJessica\n\nHe replied, asking what was wrong. I tried to explain but it kept coming out badly. Angrier with Alex than I really was. Resentful of my parents for no reason. Bitter about my course-mates and their fast-track graduate placements. All about other people rather my own uncertainties. Three times, I deleted the message and started again. Eventually I just sent \"Being a grown-up is shit\" and put my phone on the bedside table.\n\nI didn't expect a reply. Matt never knows what to say if you don't ask a question. It took me years of stilted conversation to work that out. If you don't ask a question, you should give him something to analyse. A block of text he can comment on, understand your problem and send a solution. But I didn't want a solution. I just wanted to vent and then talk.\n\nHis reply: \"Definitely.\" An opening. I asked what was wrong. He told me about a girl, Izzy. She had dumped him for no clear reason. I sent my sympathies. This was new. We kept in touch less than I would like, but Matt never mentioned girlfriends. I guess it was old news now but I wanted to help. I said appropriate things. He sent a little gallows humour and some few smiley faces. Then he asked again, what was going wrong for me.\n\nMatt\n\nI was still no clearer as to why it was so important that Jess spoke to me tonight, but talking to her helped. Her oblique messages were frustrating but, when you needed support, she was reliable and fulsome. I tried again to ask what had upset her and we talked a little about how she missed her flat and didn't want to live with her parents, about how her course-mates had won graduate positions, scholarships or other opportunities, and about how Alex and Tom were never that discrete anyway, so why did they need so much privacy now?\n\nI commented on her grievances one by one, making a few suggestions along the way, and then I finished with, \"Alex and Tom are indiscreet: Really? How so?\"\n\nAll that came back was \"Oh God. You should try living there. Sex on the sofa. Sex in the shower. And when they deign to use the bedroom -- it's noisy sex in the bedroom.\"\n\nI replied, \"Hold on, you're telling me you saw, or at least heard, all of that?\"\n\n\"Saw the first one -- Alex naked on her hands and knees. Heard the second and saw them leaving the bathroom together (trying to look innocent). DEFINITELY heard the third. REPEATEDLY.\" And then she added, \"That is, repeatedly over days and repeatedly on some nights\"\n\nI told her my closest comparison was a male housemate who insisted on going topless in summertime.\n\nJessica\n\nWorries about the future went unsolved, despite Matt's sweet but hopeless efforts. However, he did take my mind off them. I probed his sheltered life a little. He told me he had never walked in on anyone having sex. He thought he overheard a housemate once, but discovered later that they were just watching porn.\n\n\"And no one's walked in on you?\" I asked.\n\n\"Nope. There weren't that many opportunities to be honest, but I was more discreet.\"\n\n\"Really? You never got so carried away that your housemates heard you?\"\n\n\"Nope, not that I know of. Like I say, it wasn't like I had someone in there every night and, when I did, my housemates were either out or we were quiet.\"\n\n\"Didn't you ever go outside your bedroom?\"\n\n\"Nice try. I'm not telling you where I've had sex.\"\n\n\"Why not? I'm curious now.\"\n\nThis was the most I had ever heard about Matt's sex life. I totally believed he had been quiet and restrained. The idea of him cutting loose, even during sex, sat clumsily with everything I knew about him. A group of us from school had once played strip poker at a party. Matt had gone along with it and had lost his shoes and socks. By that time, two of the prettier girls had lost their skirts, although they had insisted on laying them across their legs until they lost another hand. I could see Matt stealing glances at their bare thighs, their underwear and the exposed part of their bums. Then he lost another hand. The fear of humiliation was writ large. He didn't know what to do.\n\nThe other guys were all still clothed and he would be the first to lose something meaningful. The girls were calling for his jeans and his face was a battle between desire and control. He was ready to walk out rather than risk exposing the effect that the half-naked girls had had on him. In the end, Heather's parents saved him by coming home before he made a decision.\n\nI asked him later on, when we shared a taxi home, what he was going to choose. He just blushed and said he didn't know. I asked him which he preferred of Heather and Ellie, the skirt-less girls, and got the same response. I complimented their underwear -- both had worn sheer thongs, Heather black and Ellie pink -- still nothing. It was impossible to lure Matt into conversation about sex, desire or anything that required him to surrender control.\n\nMatt\n\nJess was being Jess. We had been friends since we were fourteen but were never inseparable. We were part of the same group, but I had closer friends and so did she. That said, we spent more time together than our friendship merited because we both lived in villages outside of the city and we shared a lot of taxis home from parties. Her village was five miles further away than mine was, so she often stayed over at my house and had her parents collect her in the morning to reduce the cost.\n\nShe would always try to interrogate me in those after-party moments; asking me which girl I liked, what I thought of someone's revealing clothes and, on the few occasions that the party became heated, she would try to talk to me about something that had made her excited. She wasn't coarse about it though and didn't push too hard when I was non-committal. She also rarely asked me anything about herself beyond trivialities: Did I like her new dress? Was her hair OK? Had she embarrassed herself? The right words to respond rarely came to me and I often found myself giving answers that sounded feeble in retrospect. Answers that left me cursing myself when I recalled them in subsequent days, weeks and months.\n\nThat was years ago, before university, but Jess's curiosity about my girlfriends, mixed with her own exposure to Alex's sex life, reminded me of moments of closeness between us. I remembered being in the backseat of the taxi with her during journeys home. I remembered her face as bright, smiling and framed by loosely curled waves of blonde hair. The smell of make-up and perfume always mixed in with the alcohol and the saltiness of sweat from nightclubs. She would often lean in close to persuade me to confide some inner feeling, not realising that I would always clam up more as her slim body, pushed up cleavage and smoothly toned legs, leaned in with her.\n\nI replied, \"Just because you're curious, that doesn't mean I have to tell.\"\n\n\"Boring. I'll tell you if you tell me.\"\n\n\"You'll tell me what?\"\n\n\"About when I got caught.\"\n\nThis was different. For all Jess's encouragements to open up, she was quieter, almost reserved, about her own thoughts and feelings. She was interested to a fault in other people's inner lives, or at least in mine, but was largely silent on her own. I had never asked her those kinds of questions and it wouldn't have occurred to me to do so, even if I could have found the words and opportunity. Outside of post-night out arrangements, our friendship always felt too distant for intimacy. Mostly, it still did.\n\nShe texted again, \"So, deal or no deal?\"\n\nJessica\n\nNormally, I don't talk about my sex-life. Hypocritical, I know. It's partly because it's not very exciting. I also don't feel comfortable talking with most people about it. When I do, I will usually ask the other person first. If they open up, I open up. Matt never did, about anything. It always frustrated me that it stopped us bonding at a deeper level. It was my own fault as much as his. During the day, I could never find ways to spend time with him away from our friends. Then, at night, I always drank enough to make flirtation seem the best way forward. This was different though. I had been aching to tell someone about my walk through the park for months.\n\nMatt texted back, \"No deal. You really don't want to picture me having sex.\"\n\nI bit my lip and replied, \"OK. If it's not Truth, then it's Dare.\"\n\n\"Hold on. Since when were we playing Truth or Dare?\"\n\n\"Too late now. I'm planning your dare.\"\n\n\"What?!? You're impossible!\"\n\n\"Insulting me will only make it worse!\"\n\n\"Fine. I'm waiting.\"\n\nI was surprised he gave in that easily. Actually, I was surprised that he seemed up for it. Maybe he needed distraction tonight as much as I did, or perhaps Matt had changed at university. We kept in touch by phone, about once a month or so, but nothing more. It was possible I had missed his evolution. He didn't use social media and I hadn't seen him in person, or in a photo even, for over a year. I worked in Edinburgh every summer and, as he didn't know anyone else up here, he hadn't visited. When my course-mates trickled away to their future lives, I realised he was the only friend from home that I spoke to. The remainder, although closer friends originally, were now just relationships perpetuated through facile Facebook comments rather than retained affection.\n\n\"OK. I'll keep it simple and hope you learn your lesson. Send a selfie. I haven't seen you in ages.\"\n\nSilence. I realised it was quarter-past eleven. Matt was probably in bed. He was probably trying to take a photo that hid that, or at least that only showed his face. My phone vibrated twice. The first message was a head and shoulders photo of Matt laid in bed. He wasn't wearing a t-shirt. The light was dim but accentuated shoulder muscles that hadn't been there before. He had also aged well. His previously shaggy brown hair was shorter and smart. He even looked less baby-faced, more masculine.\n\nThe second text read, \"Your turn: Truth or Dare?\"\n\nI replied, \"You look good. Seriously. Where did you buy those shoulders?\"\n\nMatt\n\nI had planned to laugh off Jess's attempts to get me to share. Izzy's rejection still hurt and I didn't feel that flirtatious. Yet, the thought of Jess being caught having sex nagged at me. More precisely, the thought of Jess having sex nagged at me.\n\nI had never seen more of her than her clothing allowed, but she had always been attractive. Unbidden, the image came into my mind of seeing Jess from behind with her hair flowing down her back. She was naked and knelt over someone and, just as she positioned them to enter her, she turned and looked straight into my eyes. I couldn't shift that thought and when she moved from bargaining to punishment, I was already committed.\n\nHowever, her dare caught me off-guard. I had expected her to ask me to do something embarrassing. Going out into the street half-naked or something. A simple selfie felt stranger and more challenging as I didn't feel comfortable sending Jess a picture of myself in bed, half-dressed.\n\nAfter a few attempts, I sent a picture that didn't seem too bad as my chest wasn't showing and it was too dark to see much of anything but my face. I hurriedly followed it up with a message pushing us to the next round, but I needn't have worried.\n\nI replied, \"From the gym and the tennis club. The shoulders came with the arms and various other stuff.\"\n\n\"Cool. You should show me the other stuff too.\"\n\nI blushed, unsure how to take that or to respond. Instead, I pushed her for a decision. She replied, \"Truth.\"\n\n\"Your story. About being caught.\"\n\n\"Oh. OK. Are you sure? It's probably going to be pretty graphic.\"\n\nThat took me aback. As I said before, Jess is curious about other people's private lives but does not usually volunteer information about her own. I told her I was OK with graphic, but that I didn't mind if she was too shy. She replied, \"Haha. OK. I'll tell it properly and then I might die of embarrassment.\"\n\nThere was a long pause while she typed her message, which was either carefully edited or long and detailed. That image of Jess meeting my stare as she prepared to straddle someone came back into my mind, alternating in slow-fade with a memory of her leaning towards me in a taxi, smiling in a dark blue dress she had worn one New Year's Eve.\n\nAnticipating the contents of her message, my hand pressed down on the front of my boxers where I was starting to harden. Finally, it arrived.\n\n\"Oh God. OK. At the back-end of last summer, I was dating a guy, Sean. I think I told you about him. It only lasted a few months but it was quite intense. We had been out for dinner and walked back through the park near my flat.\n\n\"We were a little drunk and quite flirty. Sean kept pulling me around to kiss him. I kept groping his bum and the front of his jeans, between us. I could feel he was hard and was getting horny myself. I was wearing a short summer dress and he kept slipping his hand underneath it, sometimes up the outside of my thighs, sometimes stroking my bum. Once or twice he pressed his hand on the front of it, between my legs. When he did that, I was squeezing my thighs against his hand to pull it tighter to me.\n\n\"Eventually, it got too much. We were still 10 minutes from home and I was so turned on. The park was quiet, so we slipped behind some bushes, just off the path. I undid his jeans, took his cock out, bent over and gave the head a little kiss. Then I kissed up and down it. He was already hard so I got him to lay on his back and knelt between his legs, stroking him some more.\n\n\"I can't believe I'm telling you all this but I might have been touching myself a little as well, with my dress raised up and my hand down the front of my underwear. Then I took my underwear off, in that graceless way you do when you're on your hands and knees, and I knelt over him. He had his hands on my bum under my dress. I guided him inside me and was just about to lower myself down. Then I made this little moaning noise that turned into a yelp as I raised my head up to see two students coming down the path.\n\n\"I nearly died! I jumped up, pulling Sean to his feet. He was so confused. He hadn't seen them. We just started walking in the other direction. We moved so quickly that he still had his cock stuck straight out in front of him as we hurried down the path! Anyway, we got back to the flat OK. Then, the next morning, on my way to uni, I found my underwear on the grass, where I left them. They were nice ones as well, so I guess it was a happy ending.\"\n\nAs I read Jess's story, my hand found its way inside my boxers and moved around my hardening cock. I imagined it was Jess's fingers, tracing lightly over my balls. In my mind, her other hand was touching herself as she started to stroke me. She was wearing that same dark blue dress and had lifted it up to expose sheer black underwear, which she now pulled aside to reveal light pink lips.\n\nI had no idea what to say in response to her story. I went for pithy. \"Glad you found your underwear.\"\n\n\"Me too. As I said, they were pretty. Red satiny ones. I'll show you sometime\"\n\nJessica\n\nI had thought about that night a lot. Alone in my room while waiting for sleep, I sometimes found my fingers wandering over my body as the memories flowed through my mind. Sean and I broke up a few weeks later for unrelated reasons. However, it didn't make a difference. The excitement of holding him in the open air and touching myself in public was lasting. Even more so the thrill of him being half inside me, even briefly, when other people were in sight.",
        "Typing out my story had left me fidgeting with excitement. I could feel the heat between my legs and my nipples hardening. Half of me wanted to touch myself, but I was embarrassed at exposing myself to Matt in this way.\n\nHis sardonic reply took the edge off my mood, but what had I expected him to say? It was my fantasy, not his. I desperately wanted to continue the conversation though and sent, \"Your turn again now. This time you can choose properly. Truth or Dare?\"\n\n\"You still want to hear my stories that go beyond the bedroom?\"\n\n\"Definitely!\"\n\n\"Then Dare.\"\n\n\"Bastard!\" and, \"Fine then. Dare it is\"\n\nI paused. Matt was playing along but, like me, he was probably just distracting himself. He had been dumped only an hour or two ago. He probably wasn't experiencing the same little sensations that flickered through my body every time I glanced at earlier messages or thought about what we had said. I decided to follow-up my request from after his last dare.\n\n\"OK. Another selfie. With as much of the 'various other stuff' you mentioned as you like.\"\n\n\"I could just send the same one if it's 'as much as I like.'\"\n\n\"OK then. With as much of that stuff as you think I'd like.\"\n\nMy smile to myself was involuntary. Matt wouldn't know what to send. He was a sweetheart and his shyness could be all-encompassing. Some guys would send a dick-pic. I knew Matt wouldn't go anywhere near that far. He would probably send a picture of his tensed bicep or maybe a carefully cropped close-up of his six-pack, if he had one. Mulling over the options was entertaining me though. I noticed I was biting my lip and lightly stroking the bare skin above my vest top. I was also rubbing my bare feet against each other; a sure sign that my mind was in fantasy mode.\n\nMemories of the walk in the park were competing with new thoughts about exactly what Matt looked like right now. He had been quite attractive as a teenager; a little skinny, but tall and sweet-faced with blonde-brown hair and blue eyes. I had rarely seen him wearing less than a t-shirt and shorts but, when we went to the beach and occasionally when I stayed over at his parents', I discovered that his tennis kept his slim body toned.\n\nImpatient and keen to stop Matt thinking too much, I lifted my hand from my chest and sent, \"I'm waiting,\" with a smiley face.\n\nSeconds later, my heart skipped a little as Matt's picture arrived. As I opened it, I squeezed my legs together. My hand returned to my chest, but lower this time, over my breast, lightly pinching my nipple between two fingers, through my vest top.\n\nMatt\n\nBy the time Jess asked for a second selfie, I had reread her story twice and each time left me more turned on. I don't know why I said dare. I think I still thought she would eventually back off and tone down the conversation. I hoped that a dare would limit her options for doing so and allow us to keep going.\n\nHer request was frustratingly ambiguous though. I knew she definitely wanted to see the results of two years in the gym, but I had no idea what exactly she was after and how much she wanted to see. A big part of me assumed that she would be happy with a shot of my arm muscles, but to do that properly I would have to get out of bed. Other smaller parts of me, the parts that were still imagining coming across her in a park, with her hand beneath her summer dress, those parts of me wanted to send something more.\n\nI pulled back the covers and held my phone above my torso, tensing my stomach muscles and shoulders. The result wasn't bad as the gym had toned me up and the shadows in the half-light accentuated that. The only problem was that I had allowed the top of my boxers into the picture and, although I had put everything away before taking the photo, you could see the bulge in the fabric without looking too closely. I had just started to crop the picture when a message arrived from Jess telling me to hurry up. Taking a deep breath, I cancelled the crop and pressed send.\n\nFor the first time, Jess was slow to respond. My stomach tightened as I realised I might have gone too far. After all, while I had been jerking off, Jess had just told me a funny story and sent a couple of vaguely flirty messages, which was nothing out of the ordinary for her. I flicked back over those messages, looking for reassurance that I had interpreted things correctly, but there was nothing definitive. I checked how long it had been since I sent my message and saw that it was four minutes. I started to type out something to prompt a response but kept deleting it after two or three words. Just as I was about to send an unimaginative, \"You there?\" she replied, \"Aren't you going to ask me?\"\n\n\"Ask you what?\"\n\n\"Truth or Dare.\"\n\nJessica\n\nMy first reaction was to Matt's abs. Pronounced, defined and exposed. His chest and arms were impressive too. My hand slid back under the quilt and gently traced the outline of my nipple before caressing my breast through my top, letting my thumbnail trail over the bare skin above it. Then I noticed that Matt's black boxer shorts were in shot.\n\nA little ashamed of myself, I zoomed in to see what was visible. Then I realised. My hand moved down my body and I trapped it between my legs, pressing down and sending a shot of arousal racing through my body. I could feel the heat there increasing and I drew my hand away, sliding it back up my body and underneath my shirt to massage my breasts, dragging my palm over the nipple.\n\nI was still trying to resist simply touching myself. Through all my teenage mistakes, Matt been a symbol as much as a friend. The sweet guy on the edge of our group. Nobody's closest friend, but the one you could rely on. Even years later, I struggled against corrupting that.\n\nI zoomed out again, looking at the whole picture. I flicked back to the first image. My imagination slipped again as I pictured Matt in the park. I saw myself taking his cock from his boxers and letting it part me. Then, changing, I imagined him walking towards me as I knelt, touching myself, even as I was still sliding him inside me. I saw the Matt that was walking towards me open his jeans and stand in front of me, within touching distance, stroking his cock inches from my face as I moaned in fulfilment while the other Matt, laid beneath me, slid himself deep inside. Again, I pressed my hand between my legs, arching my back to push against it.\n\nMatt was typing a message. I hadn't replied. I wasn't sure what to say. There was no chance of telling him what I actually thought. I pressed on with the game and said, \"Dare.\"\n\nHe came back quickly with a hint of revenge. There was also a hint of uncertainty. Something had turned him on and he wasn't sure where we stood. He claimed he hadn't seen me in ages and wanted me to show him as much as I thought he would like to see.\n\nTo be clear, Matt had only ever seen me clothed. We had never even swum or sunbathed together. Beach trips to the Yorkshire Coast are somewhat less sun-kissed than on the California shore and we usually wore t-shirts in the chilly North Sea. Similarly, when staying over at his house, we would both change while the other was in the bathroom. By the time he came back, I was always in bed and by the time I woke up in the morning, he would be downstairs eating breakfast.\n\nI had to respond quickly. I couldn't keep Mat waiting again in case he got bored and fell asleep. I made a quick decision. I slipped my vest-top straps off my shoulders. Then I adjusted it so only the lace trim covered my nipples. Taking the photo quickly, I cropped it to leave him guessing and pressed send before I could back out.\n\nIt was my turn to wait now. At least I had Matt's pictures for company. I was struggling to stay calm though. I slipped my arms out of the straps entirely and pushed the pyjama top down to my waist. I returned briefly to playing with my breasts, but it wasn't enough. My hand sunk downwards and inside my bottoms, dragging over my underwear. It gripped the inside of my thigh, trailing my thumb around the edge of my panties, to the side of my pussy and then I dragged my middle finger up from my bum to meet it. Moving my hand to the side, I pressed down over my clit, my breath catching sharply. I could feel the wetness that had built-up since telling Matt about the park. I pressed down again, starting to rub slowly, short sharp breaths escaping as I pictured myself easing down Matt's boxers while he was texting me, revealing for myself what hid underneath.\n\nMatt\n\nMy cock was out of my boxers again and I was rubbing it quickly, my hand moving up and down the shaft. If Jess had been ambiguous before, there was little to be unsure about in her photo.\n\nHer face looked beautiful, slightly shy, bottom lip between her teeth, eyes looking straight at the camera. Her breasts were almost bare and large enough to be still well-defined as she lay on her back. All that covered them was a strip of white lace through which I could see glimpses of her nipples and the darker skin of her areolae. It looked like she had deliberately cut the photo off to leave me guessing as to whether the lace was part of her clothing or a thin slither providing the slightest avoidance of nudity.\n\nAnxious not to leave her as long as she left me, I replied after a minute or two.\n\n\"Jess, that's really hot.\"\n\n\"Thanks.\"\n\n\"Seriously.\"\n\n\"Haha. I know. Well, I don't know it's hot. But I know it's flirty. Whatever. You know what I mean.\"\n\n\"Haha. Yeah, don't worry, it's hot\"\n\n\"Your one was too. You inspired me. I'd love to see if everything still looks the same now.\"\n\n\"You'll have to wait and see if I pick Dare.\"\n\n\"Still playing are we?\"\n\n\"I guess so.\"\n\n\"OK. Truth or Dare?\"\n\n\"Truth?\"\n\n\"Cheat! You knew what the dare would be!\"\n\n\"Hey, I haven't done a truth yet!\"\n\n\"Fine. Give me a minute.\"\n\nWhile Jess chose her question, I flicked back to her picture but she came back almost as soon as it had loaded.\n\n\"Tell me what you were doing before I sent this message.\"\n\nI froze. Then relaxed.\n\n\"Nothing. I was just about to go back to your picture but then you asked your question.\"\n\n\"Rubbish answer. Tell me what you would have been doing if I had waited longer.\"\n\n\"You don't get two questions!\"\n\n\"I do when you dodge your dares.\"\n\n\"OK. OK.\"\n\nI paused, unsure how direct to be, how to word it, whether to try and make it appealingly detailed, be crude and blunt, or whether to be coy. I started typing.\n\n\"I was going back to your picture. I was imagining the rest of the image, below where the photo cuts out. It reminded me of that game of strip poker at Heather's house, when her parents nearly caught us. You didn't lose a hand but you had taken off your shoes earlier in the evening. I'd realised that, if you did lose, your dress would have to go. That was the only reason I kept playing when I was losing.\n\n\"Just now, I was thinking that this is what I would have seen then if the cards had played differently. I was also remembering the taxi ride afterwards, when you were trying to get me to talk about Heather's underwear or something. All I could think about was how you would have looked underneath your dress.\"\n\nI pressed send and then I realised it was stupid. It was just saying meaningless stuff to avoid saying what I was actually going to do before Jess texted.\n\nJessica\n\nMatt's answer was not what I expected, but it did send a sharp thrill through me. He had only seemed interested in Heather and Ellie that night. That he remembered my role surprised me. That he had fantasised about me in the taxi and hadn't just been embarrassed about finding Heather and Ellie sexy -- that caused me to pull aside my underwear and touch myself directly for the first time. I moved up and down over my nub with two fingers, shivers rolling through my body. My phone interrupted me again.\n\nMatt said, \"Sorry, that was a weird digression. While looking at your picture, I was letting my hand wander a little.\"\n\n\"Be more specific.\"\n\n\"My hand was on my cock, rubbing it slowly, trying not to go too fast.\"\n\nMy breath caught and I released my underwear and moved my hand inside them, immediately slipping two fingers between my lips and feeling the heat inside. I drew them out, dragging the moisture over my clit, starting to move in circles around it, parting my legs further as I dipped back inside myself, drawing my fingers in and out slowly. With my other hand, typing unsteadily, I pressed deep inside as I replied \"Really? Matt, that's so good to know.\"\n\n\"Yeah? I assumed you were going to go back to asking about sex outside my bedroom.\"\n\n\"Haha. I'd forgotten about that.\"\n\n\"Never mind. Truth or Dare?\"\n\nMatt was definitely embarrassed. He was trying to move things on. This was still weird and uncomfortable for him. For me too. But my fingers were back on my clit and flickering quickly across it now, my back arching as my breath came in short and unsteady bursts.\n\nI spread my legs wider, lifting my knees and resting my feet on the bed as I kicked the covers off my body. I was fully exposed, my hand inside my underwear and my vest top around my waist. Frustrated that I couldn't text and touch myself at the same time, I rubbed furiously across my clit, lifting my bum to meet push against my fingers and gripping my breasts in the other hand, before flopping back onto the bed. Picking up my phone, I replied, \"Truth.\"\n\n\"I liked your last story. Have you done anything else that risky? Sex-wise I mean.\"\n\nThat evening with Sean was my only outdoor experience. I'm more confident than Matt, but I'm not extroverted or a thrill-seeker. There was one thing though. It made no sense at the time. An expression of something I hadn't yet understood.\n\n\"Erm, this is going to be weird.\"\n\n\"OK...\"\n\n\"Do you remember when I stayed over at your house after Jack's 18<sup>th</sup>?\"\n\n\"Yes...\"\n\n\"After you fell asleep, I couldn't drop off. I was too wired and a little drunk. I kept tossing and turning. God, this is embarrassing but I often fall straight to sleep after an orgasm. So I started to touch myself. I had never done it with someone else in the room before. It was kind of sexy, knowing you were there, just a few feet away, but didn't know what I was doing.\n\n\"I went pretty quickly, just touching my clit, not going inside, but the covers kept rustling. I tried different positions -- on my front, my side, knees raised, legs flat on the bed, but everything seemed to keep making a noise. I was afraid of waking you up. So I pulled the covers away entirely and just lay on your sheets in my nightie, which I guess you never saw but it was green and satiny and, most importantly for this story, it was short.\n\n\"I had pulled down my underwear so everything was on display below the waist. You were right by the bed but you didn't stir. I could only rub my clit because going in and out was still too noisy, I was that turned on. But I did put two fingers inside and kept them there, moving them slowly around while rubbing my clit. It only took a few minutes longer but I came so hard that I had to bury my face in your pillow to stop from waking you.\n\n\"Sorry. That probably freaks you out knowing I was masturbating in your bed.\"\n\nMatt\n\nThe pace of my hand increased rapidly, fingers running over the edge of my glans. I had no idea that Jess had got herself off so close to me, nor that I could have opened my eyes and seen everything. She was flirty and excitable, but never wild. She had had never come across in this way before. I replied with less caution now.\n\n\"Fuck Jess. That is so sexy and I never knew. I'm stroking myself even faster now and I'm close to coming.\"\n\n\"One more Truth or Dare?\"\n\nI backed out.\n\n\"Truth.\"\n\nA brief pause and then, \"Tell me what to do to myself. I want to cum\"\n\nJessica\n\nI swore audibly when Matt said truth. I also understood. This was new and he was still Matt. There was only one thing I could ask for if he said dare. This was the next best thing.\n\nHis messages came in in clusters, full of typos. I was picturing what he was doing while typing, part of me wishing I was sat naked astride his lap, so I could have my hands on him and his hands on me. Instead, I followed his instructions. I lifted my butt off the bed, pushed down my underwear and kicked it off my feet. I was naked now except for the vest-top, bunched around my waist. I was tempted to send Matt a picture of me like that as a bonus but that would mean removing my hand from between my legs. Instead, I spread thighs wide, as he asked.\n\nTwo fingers slid between my lips, sinking deep inside me. I began moving them in and out rapidly, drawing wetness from inside me and spreading it around my clit, alternating between rubbing with my thumb and driving my fingers back and forth. I was almost panting now as I read Matt's instructions.\n\nPulling my fingers out of my pussy, I moved them up to my clit, rubbing it hard and fast. The whole surrounding area was sensitised and sent arcs of euphoria from my centre, down my legs and through my torso. My bum was lifting off the bed as it rose to meet my fingers. My hips thrusting forward as I brought myself closer and closer. Short, high-pitched gasps escaped in quick succession followed, in a sudden rush, by a long low moan as a torrent of pleasure swept across my body. My legs clenched together, pinning my hand against me. Then, as I relaxed, I slowly started to move my fingers over my lips, between them and dipping gently inside. Bringing myself down from the intense orgasm.\n\nI had told Matt I was close. His instructions had finished with him saying he was about to cum too. Afterwards, conversation became awkward. We were both a little shy and tiredness hit. We agreed to text in the morning and left it after a few more messages. I fell asleep quickly, less worried about my future and burning with fantasy.\n\n------\n\nJessica\n\nI woke up late the next day. Memories of the night before flowed into my mind and, as my phone vibrated on the bedside table, they crystallised into the image of Matt, naked and hard, telling me what to do to myself as he watched from the foot of my bed. The picture faded though when I saw the message. It was from my dad. He wanted to know whether I had come up with a plan. I sent back a vague reply saying I was still working on it and would call later. Then I lifted myself from the bed and shuffled to the bathroom.\n\nBy the time I sat in the hotel's restaurant, with cheap toast and weak coffee, my uncertain future had crowded my thoughts again. I texted Matt before I got into the shower but he hadn't replied. That, in combination with my surroundings, wilted all fantasy.\n\nAcross the restaurant, a couple with a toddler were trying to feed him some bacon. A woman in a business suit, only slightly older than me, jabbed at her phone while chewing a bagel. At the table to my left, a waitress was clearing dirty plates left behind by a stag party. Her faded brown hair and rough skin offset by a friendly smile. She came over to me and asked if my food was OK. I nodded and she headed into the kitchen with the stack of crockery. Outside, a lorry delivered drinks to a scruffy off-license across the street. The tarpaulin covering the trailer rippled in the wind as the driver dipped his head into the rain while hefting cases of beer cans through the shop's side door.\n\nAbsent-mindedly, I picked at my nails as I watched. My mind absented itself. Zoning out as it moved from one grey scene to the next. I poked my phone, checking I hadn't missed a message. Instead, there were just emails from the university. A reminder that graduates must return library books, an invitation to join the alumni association and a notification that the electronic doors in my former department were malfunctioning, again.",
        "Matt\n\nI woke up early and went to my new gym, a vast hangar on the ground floor of a student-housing block behind the railway station. I spent half an hour on the treadmill, lifted some weights and then showered before walking home.\n\nAt several points that morning, I had re-read Jess's and my own messages from the previous night. The intensity remained but I wasn't sure how to move forward. All clarity had evaporated and, as my feet thumped the treadmill, the last few messages pulsed through my mind. Jess had been hesitant, slow to respond and seemed regretful.\n\nI stumbled, gripping the side-rail to regain my balance. There didn't seem to be any warmth in her goodbyes, despite a promise to message each other in the morning, and there had been no sense that a new phase in our friendship was beginning. Instead, it felt more like an aberration, a reaction to Izzy's rejection and Jess's vaguely specified problems.\n\nI tried to focus on the gym TVs but my eyes kept flicking to the clock in the corner of the screen. It was after ten and Jess still hadn't messaged me, which I took as a sign that my doubts were well-founded. As I moved onto my weight training, my stomach was knotted and the strength frequently drained from my arms.\n\nComplications arrived on my journey home. Izzy texted to say that she was sorry about last night, and that she had reconsidered. She wanted to meet for a coffee and explain how it was all about her ex-boyfriend who was messing her around, offering to get back together and then getting cold feet.\n\nI liked Izzy. She was attractive, smart, incisive in her conversation and interested in enough of the same films, music and books as me to generate friendly argument. We had shared a brief kiss after the cinema and had parted with an implied promise of more when she returned from visiting her parents, down south.\n\nThen came the incomprehensible silence, followed eventually by rejection and now an old boyfriend that apparently she couldn't let go. None of this sat comfortably with my image of her. Having pulled over my car to respond to her text, I left the conversation unfinished and continued driving home, tense and distracted.\n\nShortly after arriving, a short message arrived from Jess saying \"Hi, that was, erm, different last night!\" The knots in my stomach tightened further as I tried to parse seven short words into something less transient, more distinct from a reaction to sharing an unusual meal.\n\nI tried to compose a reply but the words wouldn't come to me. Our casual friendship, based on a small collection of shared interests and a large collection of shared friends, had never felt complicated before. The main attraction, other than reduced taxi fares, was the sense of ease I felt around her. She made conversation flow in enjoyably meandering fashion, with no pressure on me to fill empty spaces with new topics. Moreover, while I found Jess attractive, I knew I was neither a romantic nor a sexual interest for her, so I felt little pressure to analyse or calibrate our interactions to some end-goal.\n\nNow though, I sat at my computer desk, scrolling through a night of messages, trying to separate flirtation from amusement, friendship from desire, and arousal from attraction. The stories from school, about her getting herself off in my bed while I slept on the floor below her, and my confessions about her desirability when travelling home after parties -- those stories caused me particular trouble; not least because they painted our friendship as one of suppressed desire rather than casual conversation.\n\nHad she masturbated in my bed because I was nearby or was that incidental? Did she mind that I had fantasised about her as a teenager? Was she happy to regard it as fantasy alone? I tossed my phone aside in frustration and tried to focus on the essay for my postgraduate studies that I had planned to write over the summer.\n\nJessica\n\nIt had stopped raining. I was walking along the sea wall and had left my phone at the hotel. Matt hadn't replied and watched pots and all that. Still, I didn't understand his silence. I felt the previous night had stripped away years of reticence and that he would now respond to my attention. Our goodbye was awkward, but what did he expect? You can't cuddle and share the moment when talking via text. I had been clear though that I wanted to touch base today. Before leaving the hotel, explanations for his silence had rattled around my head as I scrolled vacantly through job sites. More than once, I screamed silently and raked my fingers down my cheeks, incapable of focusing on one problem at a time.\n\nOut on the seafront, things felt clearer. I could separate my emotions about Alex, my quasi-eviction and Matt from practicalities about where to live and what job to apply for. Leaning on the railings overlooking the beach, I scraped a pebble against the cracked white paint that coated the metal. My eyes fixed on a dirty orange patch that had rusted through from the iron beneath. A gull squawked to my right. I watched it peck at a discarded chip tray and saw that the pebble-dashed promenade was scarred with the initials of some long gone couple who had passed by before the concrete had set. I made my decision. I had paid for two nights at the hotel, but did not want to stay there. The Edinburgh that had once seemed romantic with its hum and history now seemed sallow. I would take a late afternoon train and I would get off at one of two places.\n\nThe sense of purpose made me walk more quickly back to the hotel. I even took the stairs two at a time on the way to my room. I switched on my laptop to book the train tickets. Then I grabbed my phone to call my Dad, explain my plan, and ask if he minded paying for the journey. Still nothing from Matt. My choice of two places was starting to look like one.\n\nMatt\n\nMore than three hours had passed since Izzy and Jess had messaged me. Concentrating on my work had been difficult as an unsettling mix of confusion, arousal and irritation kept intruding on my thoughts. I had written and rewritten the same introductory paragraph twenty times, moved on to other sections, returned to it, rewritten it again, made further edits, and it still felt lumpen and vague. Banging the desk in frustration, I grabbed my phone and sent a short response to both, telling Izzy that I would call her later today and going along with Jess's fickle apathy.\n\nIt didn't work, of course. Instead, of clearing my head, I started to glance continually at my phone, waiting for a response. I still couldn't square Izzy's explanation with the sharply analytical person I thought I had met. Nor could I escape the realisation that, even if Jess hadn't sounded so apathetic about the night before, it wouldn't have helped. If she had said it was an amazing experience and that she was desperate to repeat it, I would have clammed up, elated but wary and uncertain about what she expected from me.\n\nTapping the frame of my keyboard was a nervous tic of mine and, my nails were now scuffing the plastic. After days of waiting on Izzy, my ability to rationalise delayed responses and indirect language was strained and, like a child who had broken his toy, I was staring resentfully at my phone as if it was responsible for not providing me with the answers I wanted.\n\nI considered going back to the gym to distract myself, but other postgraduates I knew tended to work out on Saturday afternoons and I wasn't in the mood to talk. Instead, I went to the kitchen, made some lunch and stared intently at people in the street, channelling my irritations into a critique of innocuous behaviours. The children were chasing a ball that was closer to the road than I would allow. The women in running gear were walking up the hill and talking rather than jogging. The teenage couple in scruffy clothes were stopping on the pavement outside my house to share a kiss. I took out my phone and sent a second message to Jess.\n\nJessica\n\nDad agreed to buy the train tickets. I stuffed my few belongings into my suitcase and made sure I hadn't left any toiletries in the bathroom. Glancing back at the bed, I left the room and checked out. An hour later, I sat watching coastal scenery on an over-crowded train as it headed south.\n\nI didn't really want to listen to music but the woman next to me kept trying to start a conversation. My monosyllabic replies seemed only to encourage her, even though there were people she could talk to crammed into the aisle. So I put my headphones in, switched on Phil Selway, and faced the window. Resting my elbow on the seat-arm and with my chin on my hand, I shut out the cattle market throb around me.\n\nThe satisfaction granted by deciding to leave Edinburgh was brief. A morbid album, the oppressive carriage and Matt's silence fragmented my sense of purpose. Doubts seeped through the cracks. I swallowed, sniffed and dragged my sleeve quickly across my cheek to remove a sudden tear. While I reached into my bag for a tissue, the woman threatened to try again at conversation but I turned away sharply.\n\nImmediately, I spun back towards her, ignoring her smile as I extracted my phone from the tight pocket of my jeans. The signal is patchy between Edinburgh and Berwick and four messages had come through at once. One from my mum, asking whether I wanted dinner tonight. One from Alex, asking if I wanted to meet her and Tom for a drink. The other two were from Matt.\n\nHuddled in my window-facing sanctuary, I screwed up my eyes briefly to drive back tears and anxiety. Then I opened the texts. Matt's first message said \"Different is one way to put it.\"\n\nThe second, sent twenty minutes later, said, \"What are you doing today?\"\n\nIt wasn't much but a brief warmth pulsed from my heart, through my stomach and into my legs. I told Matt I was on the train, travelling towards Kings Cross but unsure where I was going. Unsurprisingly, he asked what I meant. I suppose I had intended him to. I explained that the hotel was depressing me, that I would probably spend a few weeks at my parents while I tried to find a job and get my head together. I also said that my dad was on my back and I didn't want to see them before I had a plan. Inevitably, he noticed that I hadn't answered his question.\n\nHe replied, \"So are you going to see a friend in London or something? I didn't know you knew people down there.\"\n\nI took a deep breath and sent back, \"I don't. Well, one or two people from uni have moved there, but no one special. Actually, I was wondering if I could stay with you for a few days. I haven't seen you in ages and I just need to be somewhere I feel comfortable. Somewhere I can find space to think.\"\n\nMatt\n\nAt first Jess was typically, frustratingly, vague but she followed it up with sudden clarity. It was impossible to imagine that she planned to visit me for any reason other than to continue what we had begun. Years of assuming she had no interest in me transformed into a fiery certainty of a new era in our friendship.\n\nThen the doubts began. Jess had simultaneously implied that I was someone special and that she had missed seeing me, while also suggesting I was safe territory where she could be comfortable and focus on her problems. There seemed, after all, little prospect that she was visiting to cement and develop our newfound intimacy.\n\nDespite the ball of excitement shrinking away, the sense that things were as they had always been was also, in its own way, comforting as we would still be spending time together as friends. Perhaps she could help me to pick apart what was going on with Izzy. I told Jess she was welcome to stay and asked when she would be here and whether she wanted me to buy any special food for her.\n\nAfter making the necessary arrangements, I saved my work, shut down my computer and tidied up the house. It was a two bedroom Victorian terrace; nothing special but it was homely and as much as I could afford on a doctoral studentship. Jess's train was due at 16:36 and, when I had finished preparing the house, it was time to go to the station. Izzy had been texting me all afternoon and her messages seemed oddly fraught for someone with whom I had only shared three dates. She still wanted to see me again and was insistent that only her confusion about her ex had caused her to say otherwise. When I suggested she might do better to get closure from him before starting something new, she tried to call me three times. Unfortunately, I was driving into the city to collect Jess by then and, glancing at the dashboard clock, I worried that I might be late so I didn't stop to take the call.\n\nWhile trying to shut out the incessant ringtone, I wondered how I should greet Jess. At school, we had never hugged but she had been more tactile on the few occasions that I had seen her since. There had been hugs hello, hugs goodbye and occasional kisses on the cheek, which had left me with that strange sense of intimacy mingled with inconsequence that I always felt after physical contact with people who put no stock in it. After last night, the reverse seemed true. Any physical contact was likely to be loaded with meaning and I decided to let her take the lead, although, on reflection, that would have been the case anyway.\n\nJessica\n\nMatt saying I could stay with him was my clearest moment of happiness in weeks. Fussing over the details of food and meeting places felt like a familiar landmark in a foreign city. I stretched out in my seat, thrust my hands out of my sleeves and ran them through my hair. The woman next to me and several people who had been standing in the aisle had left the train in Newcastle and the carriage was quieter now. I stood-up and went back to the luggage rack to get my book and make-up bag from my suitcase. I wanted to tidy myself up and relax a little. My hair was roughed up from my hoodie and resting against the window. Worse, I could see in my reflection that my make-up was stained with tears.\n\nAfter making myself presentable, the journey passed quickly as I read. No one came to sit next to me and I was able to spread out a little. As we left York and started on the final leg to Leeds, I checked our messages to confirm that I had given him the right time. Scrolling back, I re-read our conversation from the night before. The arousal crept back into my body.\n\nMy eyes darted around the carriage. I was half-embarrassed and half-thrilled at re-reading in public Matt's instructions on how to bring myself off. Shielding my phone with my hands, I opened his pictures, flicking briefly between his face and that shot of his torso and bulging boxers. Then embarrassment got the better of me. I clicked to the home screen and put my phone on the tray table.\n\nI tried to return to my book but couldn't concentrate on the stilted prose. I was sitting with my back to the window and my feet were up on the seat, slightly moving against each other. I glanced across the aisle and then squeezed my legs together, relaxed them and then dropped my hand between my thighs, pushing the heel of my palm down discreetly.\n\nThe warmth rose in my chest and I knew my cheeks would be flushed. I imagined leaning back against Matt's chest, his arms around my waist and his hands drifting down my body while I pretended for him that I was trying to read.\n\nThe man in the seat opposite was focused on his laptop and, between the seats, I could see an elderly couple behind me who were exchanging pleasantries while staring stoically out of the window. I pressed my hand down again, trying to stimulate myself by working it subtly back and forth on my jeans. The refreshments cart was coming down the aisle, stopping to serve passengers. The man opposite was digging in his pocket for change in preparation. Frustrated, I moved my hand underneath my hoodie and the tank top beneath. I tried to convince myself that people would assume I was just warming it up. Resting it on my stomach, the heat from my soft skin only increased my arousal. Keeping my eyes on the people around me for signs of awareness, I slid my hand downwards.\n\nSlowly, my little and ring fingers crept under the waistband of my jeans, leaving the rest of my hand spread sideways across my tummy. Making sure again that no one was looking directly at me, I stretched my little finger out, away from my hand and down inside my jeans. I let it slip beneath my underwear and swirled it slowly in the thin strip of hair that I had left there. The contrast between the heat from inside me and the cool skin of my finger delivered a wave of tingling sensations across my crotch.\n\nI tried to keep my breathing level but knew that anyone watching closely would be suspicious. I was biting my lip, my neck was red, my feet kept moving across each other and there was an unusual intensity in my eyes. I returned to the image of leaning back in Matt's arms. I imagined turning my head to kiss his neck while his fingers moved downwards, spread my lips and slipped inside me. At the same time, I darted my eyes away from the man opposite to avoid making eye-contact as he waited to buy his drink.\n\nMy hand moved down further inside my jeans. My little finger could now reach top of my lips. I stretched it out to brush briefly against my clit, my breath catching as I did so. I left it there for a few seconds, touching but not moving. I watched the world flash past outside the train while pinpricks of pleasure spun through my nervous system as the juddering of the railway sent tiny vibrations through me. I felt sure someone nearby must know what I was doing, but I couldn't draw back.\n\nI started to rotate my fingertip over my clit, slowly but firmly. I tried to keep my breathing level but its fluctuations sounded thunderous. Then, simultaneously, the woman tugging the refreshment cart drew alongside me and the tannoy announced that we would shortly be arriving in Leeds. Feigning drowsiness, I stretched my legs out into the footwell, letting my hand free itself as I did so. I sat upright and casually bit the side of my thumb, as if removing a hangnail. Briefly, I did the same to my little finger, curling my tongue around it to clean off the glistening wetness I had left there.\n\nMatt\n\nI parked and walked quickly from the station car park to the concourse, cursing the ticket barriers that stopped me from meeting Jess on the platform. The Edinburgh train was arriving on the other side of the footbridge and I tried to spot her as people started to disembark and drag suitcases, pushchairs and bikes through the doorways.\n\nMy eyes flicked from carriage to carriage, searching for Jess's blonde hair, short stature and bouncy gait. It seemed like tens, perhaps hundreds of people had left the train but, as the numbers petered out with no sign of her, I wondered if she had changed her mind and got off at York to see her parents. My shoulders slumped and I stopped craning my neck to see across the station. I turned to the side and pulled out my phone, planning to call Jess to see what had happened. Instead, I found a message, sent a few minutes earlier, which said, \"Just approaching Leeds now. See you shortly!\"\n\nAs I read it, I felt a tap on my shoulder, followed by a short, sharp, \"Hey!\" and then, \"Stop checking your email!\" I spun around to see no-one and was poked in my other side where, turning again, I saw Jess, bright-eyed and grinning.\n\nShe wrapped her arms around my chest in a tight hug saying, \"It's so good to see you.\"\n\nI hugged her back more tentatively and she laughed as we stepped apart. Apparently, as always, I had crushed her head into my chest rather than hugging her. I pointed out it was her fault for being small, to which she stuck out her tongue, took hold of her suitcase and asked, \"So, where's the car?\"",
        "Rush-hour traffic made the journey back to my house slow and disjointed with queues. After her initial greeting, Jess's happiness seemed to fade in and out. She would talk excitedly about the last few months, her graduation ball and her last few days with her course-mates, but would then sit quietly, staring straight ahead or gazing out of the passenger window. A few minutes later, she would be talking again; asking about my postgraduate course, whether I enjoyed living alone and what I had done during my trip to Australia. She also asked if I had heard any more from Izzy, to which I replied, \"Don't ask.\" She seemed to take that as a no, which suited me for the time-being. Nonetheless, the easy conversation that I associated with Jess came and went and it was difficult to pin down why as, when she was talking, there was no suggestion of worries beneath the surface.\n\nEventually we arrived. I grabbed Jess's suitcase from the boot, opened up the house and showed her around. Her excitement returned when she saw the spare bedroom that, despite being part-office, was still spacious and light.\n\n\"Matt, this is perfect. I can't believe you have all this space to yourself! Thank you so much for letting me stay. I mean it. I won't bother you at all. I'm just going to collapse in here for a few days and sort everything out.\"\n\nI smiled and mumbled about it being fine. I tried to say something about her not needing to hide away but it came out wrong and didn't make much sense. It didn't seem to bother her though and she listened to me as I showed her where she could put her clothes. Then I left her to get organised and have the sleep she said she needed while I started to cook us some dinner.\n\nJessica\n\nMy excitement at meeting Matt had turned to amusement as I watched him stretching and straining to see me leave the train while I stood three feet away. His clumsy hug and attempts at chivalry also helped to hold back the worries on the edge of my mind. He left me in his spare bedroom with overly detailed instructions on how to unpack and store my things, which I ignored. Instead, I lay back on the bed, closed my eyes and let the mattress absorb days of anxiety.\n\nI woke up an hour or so later. After 15 minutes of staring at marks on the ceiling and daydreaming about the next few days, I decided I needed a shower. I wanted to wash off the remnants of sleep, the grime of the busy train and the sea-spray from earlier in the day. I grabbed my washbag and joined Matt in the kitchen where he told me to help myself to one of the clean towels that were in the bathroom.\n\nThe downstairs bathroom was tacked on to the back of the house. Matt said it was common in that area. To me, it seemed peculiar. People don't normally walk through the kitchen in just a dressing gown or towel. While undressing, I noticed that the light from the kitchen window was spilling into the dusky shadows of the backyard. Then I froze as Matt's shape moved through the light. I realised that, although the window was frosted, I should have pulled down the blind. Another reason it was stupid to build the bathroom next to the kitchen. If he looked this way, Matt would be able to see me standing in my bra and underwear, both black and slight against my pale skin.\n\nI wasn't sure whether I liked the idea or found it strange. It was one thing sending Matt revealing pictures in the middle of the night or dreaming about him on a train. It was another to tease him in person when I would shortly need to look in his eyes. I reached for the blind cord, standing on tiptoes as I leant over the sink beneath the window. As the cold porcelain brushed against the front of my underwear, a tingle of excitement moved through me. This time, I let it pass, unnerved at the idea Matt might still see me if I let my hands wander while undressing completely. Instead, I turned on the shower, removed my bra, stepped out of my underwear, and soaked myself in the warm water.\n\nAfter I finished, I dried myself and wrapped a towel around my body. When I walked through the kitchen carrying my clothes, a few stray drops of water trickled down my calves and ankles and left damp footprints on the wooden floor. Matt was standing over the hob and he turned around as I entered. His eyes widened slightly and I saw him glance down my body. The towel left nothing exposed but it wasn't a huge fluffy hotel towel. It reached only a few inches below my bum. There was plenty in sight to fuel the imagination if he wanted to think of me that way.\n\nAs I walked, the towel parted slightly, not revealing anything important, but I was conscious that Matt was seeing higher up my thigh than he would ever have seen before, even in my shortest skirt. The idea of dropping my clothes accidentally or better still my underwear flashed into my mind. I could bend over to pick it up in the style of a bad porn movie. The idea made me giggle at the ridiculousness of it, much to Matt's bafflement. Rather than explain, I scampered into the living room and upstairs to my bedroom.\n\nMatt\n\nWhen Jess came back downstairs after her shower, dinner was nearly ready. She had tied her long hair back into a ponytail and, thankfully, was no longer wrapped in a towel. Temptation had its value, but I wanted simplicity right now. Her wet feet padding into the kitchen had interrupted my thoughts of Izzy, whose frantic behaviour and vague explanations had left me viewing her as two different people: the collected and forensic doctoral student who had debated then dissected my dissertation over coffee and the flimsy na\u00eff in a tailspin over a three-date relationship. I admit my anxiety over Izzy's prior silence had been feverish, but I kept it to a reasonable level. Right now, Jess's easy presence, cheerful sexuality and familiar inconstancy was more welcome company.\n\nShe had changed into navy blue chequered pyjama bottoms and the same dark red hoody that she had worn earlier. The baggy clothes made it easier to talk to her; certainly more so than when trying to avoid seeing up to her naked hip through the gap in her towel.\n\nHer laughter at my tongue-tied attempts to speak while she held a black thong and lacy bra in front of me was mortifying. Normally, seeing a girl carrying her underwear would be no more than a moment's distraction, but I had seen Jess's otherwise naked body stretched out across the bathroom window while she shut the blind. I wasn't sure if she had been teasing me deliberately but my swings between confidence in her interest and assuming her indifference were becoming wilder. Even through frosted glass she looked incredible; the lack of detail doing nothing to hide the way her underwear highlighted her body. At least when she was dressed neutrally, I could concentrate on the conversation.\n\nWe ate and talked over the dinner table for a couple of hours. Jess told me a little more about her worries. It became clear that most of the upset arose from her comparing herself to others. The few course-mates she was close to had all applied to graduate schemes and secured positions earlier in the year. Jess had been uncertain what she wanted to do after university and had decided that meant she was failing because she didn't have a job already. I tried to convince her that there was nothing wrong with taking her time and she seemed to listen, but then she changed the subject without showing signs that her worries were definitively resolved.\n\nAround nine o'clock, we moved to the lounge and watched a few episodes of a new drama on Netflix. Although there were a pair of two-seater sofas in the lounge, Jess decided to sit next to me and, after the first two episodes, she asked if I minded her leaning back against me so she could lie down. We watched the remaining episode with me sat upright, her head resting against my chest and her legs stretched out over the sofa arm.\n\nAt first, I tried to rest my elbow on the back of the sofa but it soon became uncomfortable. Seeing me fidgeting, Jess grabbed my arm and placed it around her midriff, shaking her head slightly, as though I should have just asked.\n\nI spent most of that second episode watching Jess, or what I could see of her. The way her blonde hair parted. Her long natural eyelashes. The slight rise of her breasts under her loose top. The delicate bare feet, always moving against each other a little, toes curling whenever she laughed at the TV. Mostly though, my eyes fixed upon the thin strip of bare skin, slightly below her waist, where her hoody had ridden up as she leant against me.\n\nWhen she laid my hand across her stomach, I was mostly touching her top but my little finger was resting against that exposed patch of lower stomach. Absent-mindedly, I stroked it, bumping against the waistband of her pyjamas. The atmosphere in the room changed subtly and Jess let out a soft sigh but didn't react further. Her feet did stop moving though, as if she was waiting for something to bring them back to life. The episode finished shortly after and she turned, hugged me, our eyes meeting for a second, and then said she was tired and would head to bed.\n\nJessica\n\nAlone in my bedroom, I thought back over the evening. Matt's food was amazing. He was also right to point out that I shouldn't feel inferior to those I didn't need to compete against. It wasn't a message that I wanted to hear but I knew there was truth in it. Mostly though, I thought about laying with Matt on the sofa. I remembered his arm around my waist as I laid back against him. The reassuring rise and fall of his chest. The steady beat of his heart against my head. The soft rumble of his voice from a few centimetres away. It was a shame that I had to drag that arm on to me but, once it was there, the comfort left me floating.\n\nThen, when his hand dropped downwards, his touch on my stomach sent waves of electricity up and down my body. A fierce heat grew between my legs as I remembered the dreams from my train journey. I had glanced down to see if Matt was reacting similarly, but his jeans were a mess of rigid bumps and gave no clue to their contents. For a second I thought he was going to move inside my pyjamas. A low moan escaped my lips and I panicked slightly, thinking that I might be too forward. Then I overreacted by rushing to bed.\n\nNow, lying there, remembering his touch, I cursed my impulsivity. I couldn't resist, or rather I didn't try to resist, moving both hands inside my pyjamas and tugging aside my underwear beneath the quilt. The fabric was slightly wet and I used my middle finger to part my lips, sliding it inside me to explore how turned on I had become. Idly, I played with myself, spreading my pussy and dipping a second finger inside, drawing them out and trailing the moisture over my clit, circling it slowly. I imagined Matt's hand had continued its journey downward and that I had turned to place soft kisses on his crotch as he edged his fingertips inside my pyjamas.\n\nI parted my legs wider and my fingers slipped back inside, going deep into my pussy and swirling around before drawing slowly out and then diving back in. The heat was growing now underneath the quilt and I pushed it aside a little. I moved one hand inside my underwear and used the other to reach under my vest-top and massage my breast. The nipple was already hard and responsive to my fingers as I trapped it between them, pinching and pulling it gently.\n\nI could hear Matt still moving around downstairs. In my mind, it was his fingers moving inside me. His hand caressing my breast. His cock that was erect through the front of his jeans so that my lips could kiss up and down the shaft, making me ache for more. I wished I could leave the bedroom and go to Matt, but I didn't want him to think less of me. If flirting left him tongue-tied, seeing me like this would not produce better results.\n\nMy fingers moved from the heat of my pussy to my clit, rubbing more quickly now and pressing down firmly, no longer content with meandering touches. Frustrated with the obstructions, I brought my legs together and pushed down my pyjamas and underwear. Leaving them around my ankles, I spread my thighs wide apart while keeping my feet together. My fingers returned to my clit, rapidly flickering from side to side and occasionally stopping to plunge into my pussy, flashing in and out as I finger-fucked myself. I needed more though. I needed something more inside me.\n\nI glanced over to my suitcase. For two days, I had carried my vibrator around in it. I'd been too afraid to hide it among the possessions I sent home with my dad. Swinging my legs off the edge of the bed, I kicked my pyjamas and underwear away from my ankles and moved across the room in just my vest top.\n\nAs I unzipped my case, I was too turned-on to resist touching myself for more than a few seconds at a time and I paused to play again between my legs, working my clit fiercely with one hand while pushing two fingers inside with the other. I caught a glimpse of myself in the mirror. The curve of my bum, my parted legs slightly bent at the knee, my gaping mouth trying to stifle cries of excitement; all of this only made me pleasure myself more frantically.\n\nRemoving my fingers from inside me but still circling my clit, I tossed aside clothes and books with my left-hand. Finally, I extracted my toy from the inside pocket of the case. It was a bright red cock with a rotating head. You could use it to stimulate your clit or move around inside you when you changed the settings on the black base that housed the controls.\n\nJumping back on the bed, I worked the thick head of the rubber cock around my pussy. Dragging it down towards my bum and then back up over my slit. My hips thrust forward to help it slide between my lips. Inch by inch, I took it inside me. My eyes widened, my breath became short and my mouth gaped as I felt it fill me.\n\nI began to slide it in and out and my fingers increased their pace. I was desperate to turn the vibrator on to feel the electric tremors run through me, but I was too scared that Matt would hear in the next room. Instead, I hooked my heels over each side of the bed to keep my legs spread wide apart. I pumped the toy into me, whispering, \"Fuck me. Fuck me.\" I was soaked now and my slick pussy let it flash in and out as my fingers desperately rubbed my clit until my orgasm erupted within me.\n\nI thrust the cock inside myself throbbing pussy, feeling the walls of it clench repeatedly to the shaft. My mind fought to keep my fingers at work as my hips bucked on the bed. Violent surges of pleasure shot through me and I buried my face in the pillow to avoid crying out.\n\nEventually, the intensity subsided. I drew the vibrator slowly free from my lips and returned to idly caressing myself as my breathing levelled off. I hoped I hadn't been too loud. A darker hope wondered whether, if I had, Matt would take it as a signal to be more forward the following night.\n\nMatt\n\nIt was gone ten before Jess came downstairs for breakfast. When I woke, there was one more message from Izzy, sent at 2:32am. It simply read, \"I'm sorry. I'm really sorry.\" I told her again that it was OK and that I would call her in a couple of days when my friend had left. She replied instantly saying that was fine and she looked forward to discussing the book she was reading; a series of essays on science and society that I had recommended. We exchanged a couple more texts in which she seemed oddly composed and more like the person I thought I knew, then I got up.\n\nI was unable to settle after I showered and, when I had tidied away last night's dishes, I did some cleaning while waiting for Jess. When she shuffled into the kitchen, she looked adorable in her pyjamas; clearly still sleepy with her tousled hair tied back loosely and wearing black rectangular glasses instead of her usual contact lenses.\n\nWe sat quietly together, listening to the radio, eating toast and sipping drinks -- her coffee, me tea. Conversation was sparse but comfortable as we talked about the day ahead. Her plan was to browse careers advice and job websites, while mine was to go to the library to do some reading and then play a tennis match before heading home. At 11, I headed out, leaving Jess with a spare key and directions on where to find lunch.\n\nThe library was less productive than I had hoped. I couldn't concentrate on the sociology of modernity and its oblique metaphors because my mind was looping through the events of the last two days. It focused on different aspects each time, not all sexual or romantic. I worried more about Jess's fear of failure and what she would do if she couldn't settle on a way forward.\n\nI thought about her company director father and account manager mother, both of whom saw decisiveness, hard work and focus as central to achieving success. Jess had always gone out of her way to avoid disappointing them. In our last year of school, she hadn't told her parents about achieving full marks on one module exam because it would have meant also telling them about a B-grade on another. She always brought causal clothes to my house when staying over after a night out. Partly this was for comfort the next morning but she also told me that it was so she could go home the next morning without giving the impression that she had stayed over at someone's house in unplanned circumstances. One night, while Jess was slightly drunk and talking to me from the bed as I lay in my sleeping bag on the floor, she confessed that her parents assumed we were a couple. Although she had never lied about it to them, she had also never denied it as a boyfriend with high grades and an acute sense of purposes offered a shield to deflect scrutiny of her tendency to skip from one aspiration to another without fixing on anything for long.\n\nIf Jess sounds like the typical over-pressured middle class daughter, struggling to fulfil unrealistic expectations, it never seemed that simple to me. Whether her parents really judged her as harshly as she feared was always open to debate. Her occasional failings never appeared to have consequences and her choices, inconsistent and changeable as they might be, were generally supported rather than challenged or corrected. To me, it seemed likely that the pressure to conform to some vision of her future was as much internal as external. I suspected her parents would be open to Jess confiding in them and would support her through her current uncertainties rather than criticising them. It also seemed likely that Jess would emigrate before offering such confidences.\n\nIn between these reflections, I did also think about the evolution in my relationship with Jess. The night when Jess had texted me from the hotel still felt like a thrilling aberration, but it was clear that her manner had moved from familiar opaque flirtation to a more affectionate and intimate style. She now seemed to look to me for comfort as well as conversation and, for my part, I was forced to consider the previously implausible: that our moments of closeness might include more than the occasional instances when her natural exuberance and friendliness brought her close enough to see the smallest details of her skin. Those instances that lasted seconds and years before she would laughingly toss back her hair and return to a more neutral distance.\n\nJessica\n\nIf Matt had heard me last night, he showed no sign of it over breakfast. He seemed on edge at first and was quiet. That wasn't unusual though and there was no sign of discomfort by the time we had finished eating. For my part, I felt strangely content in unfamiliar surroundings. Our shared breakfast felt like a familiar routine established over many years rather than a temporary island surrounded by an undercurrent of emotion.\n\nAfter Matt left, I took a quick shower and sat down at his desk. I read guidance on career crises, guidance on finding your ideal employer, guidance on writing a CV, and guidance on how not to write a CV. I checked the major jobs websites, made lists of possibilities and created further lists of their pros and cons. After four hours, I had identified five positions. Each had practical advantages, a realistic chance of appointing me, and no attractive features.",
        "I wasn't looking for a six-figure starting salary, glamour or perks. I just wanted to feel like I was contributing more than cranking the handle of a machine whose output drove only itself. That was why I balked at the graduate schemes, career fairs and mail-bombing of job applications that my course-mates had engaged in. All of them seemed to become employees because it was the next thing to do. They compared company profiles, remuneration packages and development opportunities but, ultimately, these were interchangeably attractive.\n\nI slammed shut my laptop and retreated to the bed, laid back and closed my eyes. What I wanted was to create something. My sister had a PhD in material science. She designed new substances that, she claimed, would lead to foldable smartphones. Her husband worked in pharmaceuticals, project managing trials of cancer drugs which could add one, maybe two, months of palliative care to people's lives. There were more important problems to solve, but I had a sociology degree. It was a good one but it didn't prepare me to create something tangible.\n\nMatt\n\nIt was mid-afternoon before I heard from Jess. She sent a brief message saying she had found her dream job and attached a photo showing a webpage advertising for someone to look after a tropical island. I asked her if the island manager had a support staff and she told me she'd look into whether they needed a live-in social theorist for evening lectures. I asked if there were other options on the table and received only a brief, \"Not really\" in response. I needed to go and change for tennis so I sent something neutral, gathered up my books and laptop and headed to the sports centre.\n\nThe match was brief and brutal. My opponent had suffered an injury-induced relegation from a higher division and, now he was fit again, he would be returning there in a few weeks. I would be staying where I was. The only positive was a message from Jess that I received between the first and second sets. It said that she did have one idea for a job but it might be stupid and she needed to think it through more. I offered to talk it over with her and served two double faults in the next game while speculating about it instead of concentrating.\n\nI decided to run the two miles home to make up for the shortened tennis and I arrived sweating and out of breath from the steep hill that I lived half way up. I shouted to Jess that I was back but could hear that she had loud music on upstairs and, presumably, didn't notice as there was no response.\n\nI took off my trainers and placed them on the shoe rack, downed a glass of orange juice and went upstairs. The spare bedroom door was shut and Jess's electro-pop pulsed through the walls. I left her to it and went into my own room, swinging the door behind me. One of my former housemates called after I had undressed for my shower and I tossed my sweat-soaked tennis gear in the washing basket while I talked to him. Then I put on my dressing gown and headed down through the house to the bathroom.\n\nI found Jess at the bottom of the stairs. She looked a little flustered and, after saying hello, I commented on it. She explained that she had realised I was home and was rushing back from the bathroom to turn down her music before I went striding into her room, which was a mess. \"Sorry about that,\" she apologised.\n\nShaking my head at the garbled half-explanation, I carried on to the bathroom, turning on the shower while I hung up my dressing gown.\n\nJessica\n\nMatt came home while I was using the toilet. I heard the door shut and heard him shout but I stayed quiet. I wasn't ready to talk while peeing. I heard cupboard doors open and close in the kitchen and then his footsteps fade as he returned upstairs. A minute or so later, I pulled up my jeans, washed my hands and followed him.\n\nGoldfrapp throbbed through the door of my room. It had blown shut apparently when Matt opened the front door. I was about to go in and turn down the music when I saw two things. First, that Matt had not closed his door fully. Second, that through the crack, I could see him undressing with his back to me. I froze.\n\nWe were teenagers and shy of our bodies when I stayed at Matt's after nights out. I had seen him briefly in darkness wearing just boxers and a t-shirt, but nothing more revelatory until our recent exchange of photos. Now he was wearing only boxer shorts. They were short, black and tight across his well-toned bum. His torso was slim, but the muscles looked taut across his upper back and shoulders. Again, I realised that while the shy teenage Matt with his sweet face was still present, he had developed into someone more intense and physical. I decided to resist temptation and retreat to my room. Before I could move, he hooked his thumbs inside his waistband and dragged down his underwear.\n\nMy music continued to throb in the background. I gasped sharply and bit my lip to silence myself. Matt stood naked with his back to me. His bum was firm and toned, standing out against his muscular hamstrings. I could see his profile in a wall-mounted mirror in front of him. The bedroom light was off and the curtains shut, but it was daylight outside. The resulting shadows accentuated the slight toning of his chest and the more pronounced ridges that ran down his stomach.\n\nI jumped at the sharp vibration of his phone against a wooden chest of drawers. He glanced at the screen and then picked it up, speaking quickly to someone called Ian. He seemed conscious that he was undressed and wanted to end the call quickly. I drew back from the door as Matt turned around and bent over to pick up his clothes.\n\nMy eyes widened at the brief glimpse of his naked front. Within my chest, my heart pounded. I knew I should move, make a noise to alert him, or just go downstairs. Instead, I remained transfixed by the tall, lean body and the curls of light brown pubic hair surrounding Matt's manhood and balls. Even in their softened state, they drew me in and my own body responded. I wanted to reach out and touch them, run my hands slowly over his cock and feel it rise and harden in response. I would cup his balls and stroke them softly, blowing cool air onto his growing erection as I waited for it to reach my moistened lips.\n\nThe music in my room had moved on to Black Cherry. I always found that song deeply sexy. A hallucinogenic air settled on me as the breathy lyrics, \"Excite me, ignite me,\" drifted out to the landing. Still on the phone, Matt lifted the lid of his laundry basket, showing the full length of his profile. I breathed out slowly, trying to remain silent. The air passed through my mouth in a trembling flow. Finally, he said goodbye to Ian and tossed his phone on the bed. I quickly ran downstairs and into the lounge, hoping the loud music would cover my footsteps.\n\nWhen I came around the corner into the hallway again, I almost bumped into Matt as he reached the bottom of the stairs. He was wearing a dressing gown and seemed surprised to see me. I felt the blood rush to my face and tried to offer an explanation but I'm not sure he bought it. I let him pass and quickly ran up the stairs to my room, mortified at causing suspicion.\n\nMatt\n\nAfter my shower, I dressed and knocked on Jess's door to see if she wanted some dinner. She opened it and I could see that she had spent the last half an hour tidying her room. She had pushed her suitcase under the desk, folded her pyjamas on the bed and whatever other possessions she had with her, with the exception of her laptop, washbag and book, were out of sight. She told me that she wasn't hungry yet but asked if I minded talking over her idea for a job substitute with her.\n\nI sat on the bed and she took the desk chair and started setting out plans for a new organisation. The aim would be to get vulnerable populations, such as recovering drug addicts, people who had suffered abuse and prisoners, involved in research. She explained that her favourite module during her degree had looked at using participants to collect research data from each other, rather than the researcher doing it themselves. The idea was to produce better data because the 'participant researcher' had real experience of the topic and could develop a better rapport with other participants. It also benefited the vulnerable populations because it provided new skills and an opportunity to contribute to finding solutions to the problems they faced. It sounded ambitious but exciting and I told her so. I added that I didn't know how the mechanics would work, where money would come from or whether she had the skills without more on-the-ground experience. Jess looked thrilled at my initial enthusiasm but then confessed that she didn't know the answers to those questions either and slumped back, suddenly on the brink of tears. I tried to reassure her that the idea was great and that not everything could come at once. She rallied a little but the fight seemed to have gone out of her and my attempts to suggest solutions met with monosyllabic responses and nervous fidgeting. She looked so defeated that I wanted to go over and hug her but could only manage a warm smile. My uncertainty at how she would respond to anything more heartfelt still froze me to the spot. Izzy also passed through my mind, with her sharper fluctuations that seemed more harsh and less deserving of sympathy. I was about to move over to Jess when a police siren blared down my street, breaking the bond of intensity between us.\n\nJessica\n\nMatt seemed unmoved by my performance at the bottom of the stairs. I was so relieved that I spilled out my half-baked plans for a new social enterprise. He listened attentively and then pointed out every flaw. Despite his attempts to backtrack, it felt hopeless. I didn't know how to run a charity. Inspiration from textbook accounts of participatory research did not count as practical experience. I wanted to bury my face in Matt's chest and cry.\n\nHe held my gaze for what seemed like an age, offering reassurance but seemingly fighting some inner battle. He flinched as a police car siren floated across the valley. Then he looked down at his feet and out of the window. The moment passed. I stood up and suggested we get some food. Matt looked both relieved and frustrated but asked me if I wanted to help him make it. I agreed and we headed down to the kitchen.\n\nTwo hours later, we sat at the small kitchen dining table. The food had relaxed me, as had the small bottle of wine I had to myself. Matt had apparently quit drinking while at university. The dinner conversation ranged from Matt's plans for a PhD after his Masters, my idea for a solo holiday to Italy and the films we had watched over the past year or so. We both went to the cinema two or three times a month to see a mixture of big-budget Hollywood fare and more art-house material. Admittedly, we enjoyed the latter for its feel as much as its meaning, which neither of us claimed to grasp. Matt suggested we investigate Netflix to see if we could find something we both had missed. So we cleared the plates and moved into the lounge.\n\nThe two sofas were perpendicular to each other with the door to the kitchen in between. Both could be used to watch the TV in the opposite corner of the room. However, as with the night before, I sat on the same sofa as Matt. It wasn't that I anticipated physical contact. It was more that I enjoyed the creeping intimacy of closeness in a darkened room. It only heightened the shared emotion created by the best films.\n\nMatt scrolled through his Netflix list. The problem with regular cinema-going was we had already seen most of the films worth watching. As a result, the list was a mixture of BBC comedies, documentaries about eccentrics and dramas that looked interesting. I had tried most of the latter and abandoned many of them after two or three mediocre episodes. There were only a few viable options for films. One was Blue is the Warmest Colour. I remembered reading a positive review when it came out, but recalled nothing else. Matt seemed surprised and uncomfortable at my suggestion. I asked him why and he replied, \"It's, erm, supposed to be good, but it's also supposed to be pretty explicit.\"\n\n\"Explicit how? What's it about?\" I replied.\n\n\"I'm not sure exactly. I just know that the reviews talked about really graphic, erm, sex, lesbian sex.\"\n\nMatt's embarrassment was cute. He is one of the smartest people I know and holds liberal views on almost everything. Yet, he can't talk about lesbian sex, or any kind of sex really, without prevaricating and stumbling over his words.\n\n\"It's also really long,\" I said, noticing the three-hour run-time. \"But, I guess it's only eight o'clock.\"\n\n\"You want to watch it then?\" he asked.\n\n\"Sure,\" I said. \"We can take turns with cold showers if it gets too steamy.\"\n\nMatt smiled but still seemed nervous. He switched off the ceiling lights, turned on the corner lamp and drew the curtains. As he sat down again, I pressed play.\n\nMatt\n\nAny relaxation from time spent with Jess had evaporated. I watched Blues is the Warmest Colour a few months ago when my housemates were out for the night. The reviews had been positive, and they were right, but they all mentioned the long and graphic sex scenes. I sat with Jess, in a darkened room, uncertain of my ground, expecting her to cuddle up to me again and knowing things were going to get very uncomfortable very quickly.\n\nThe director wasted little time. After fifteen minutes, the main character was masturbating in her sleep, lost in an intense dream about the girl who would later become her love interest. Both Jess and I, who were sat up right for now, shuffled a little in our seats. I could feel myself hardening inside my jeans and I tried to adjust them to hide the slight bulge. For her part, Jess seemed focused on the screen; although I thought I saw her bite the corner of her bottom lip and glance briefly across at me.\n\nThe film continued and, a few minutes later, the main character had sex with a male student from her school. The scene left little to the imagination and every body part of both actors was on show. Moreover, their make-up looked minimal and their bodies were more similar to you and me than those of typical Hollywood stars. The breathy moans on the soundtrack, the lack of soft-focus romanticism and the awkward camera angles all added realism to the student sex.\n\nThe temperature of my lounge seemed rapidly to rise. My jeans felt uncomfortably tight but any movement of my body felt open to judgement and loaded with meaning, so I sat as still as I could. I became acutely aware of my breathing and tried to keep it level and low. My hands felt like any position was unnatural and I couldn't remember where I normally put them to relax. I turned my head slightly to look at Jess. She was staring in rapt attention at the screen and I could see patches of red flush on her throat and chest where her V-neck top left her cleavage exposed. Further down, her nipples had hardened and were showing through her bra and top.\n\nBack on the screen, the actors laid naked together in the aftermath. I tried not to imagine myself and Jess lying similarly on our sides, my hand across her breast, my chest warm against her back, her bum nestled into my crotch.\n\nJessica\n\nMatt had not exaggerated when he said the film was quite sexy. It was beautifully made and I was falling in love with the main character, but it was also one step, perhaps a half-step, above porn in places. I actually like porn but this wasn't over-the-top or amateurish. It was natural looking, shot through with warmth and a gentle intensity. Well, at least until we reached 'the scene'. But I'll come on to that.\n\nThe first two sex scenes transported me to recent fantasies. Touching myself discreetly on a train. Orgasming under Matt's instruction. Watching his lithe body through a cracked doorway. My fierce masturbation the night before. My body was reacting and frustration mounted as I could do nothing about it.\n\nI glanced discreetly at Matt to see his response. He was clearly uncomfortable, perhaps from embarrassment or perhaps from something physical. He also looked at me at times. I was wearing a tight, green top that I had always liked for the way it emphasised my breasts. Currently, it was doing little to hide my arousal from Matt. The gentle fizz of electricity between us was pleasant. I don't embrace discomfort but sharing personal space with someone while having similar private thoughts sends a tingling sensation across my skin.\n\nThe sex scenes tapered off after the first twenty minutes or so to allow the story to develop. Matt seemed interested in a few lesbian kisses but they did less for me. I calmed down a little. Then the main character met the girl with the blue hair. The one who had gone down on her in the dream earlier in the film. Their relationship was sweetly engaging. A couple of sun-kissed park scenes were shot in a sensual light that had me moistening my lips in anticipation. And then, 'the scene'. More than five minutes of graphic lesbian sex in every conceivable position. Multiple orgasms and no possibility of body doubles as the filmed showed the actresses' faces buried between each other's legs or gasping in ecstasy as they ground their pussies together. Matt's lounge felt suddenly smaller and the space between us reduced. An insistent heat pulsed between my legs and I tried discreetly to press down on my crotch without attracting attention.\n\nFor his part, Matt was clearly also turned on. His eyes were wide. He shifted his position on the sofa several times, adjusting his jeans repeatedly, as though they didn't quite fit any more.\n\nFive minutes doesn't sound long, but most films limit sex scenes to a thirty-second montage and then cut to the next morning. This lasted forever. It felt like watching perfect porn with a friend in the room. As the scene went on, I sensed Matt look over to me several times. I did likewise trying to disguise my downward glances. Sometimes I saw in my peripheral vision that he was looking at my face. Involuntarily, I wet my lips in response or brushed a loose hair back from my face. Other times, I caught his eyes on my chest, glancing at my exposed cleavage, or on my legs, which were fidgeting as I fought the need to touch myself.\n\nInevitably, we glanced at each other at the same time. Our eyes met while the main character finger-fucked the girl with blue hair from behind and the moans echoed around the lounge. We smiled shyly and looked away but I had to say something. In desperation and unsure what I meant, I commented, \"I'm glad we're not still playing Truth or Dare tonight.\"\n\nMatt, unsurprisingly, looked puzzled but relieved that the tension was broken. He asked why and I tried to order my half-formed thoughts.\n\n\"Just because I'd have been asking for your reaction to this or you'd be asking about mine.\"\n\n\"Yeah.\"\n\nThe uncomfortable silence made me add, \"I mean, it's pretty intense.\"\n\n\"Yeah, definitely,\" was his initial reply. Then he added, \"I wouldn't know what to say.\"\n\n\"In response?\"\n\n\"Yeah. You know what I mean.\"\n\nI smiled impishly at him, arousal reducing my inhibitions. \"Who says I wanted your reaction in words?\"\n\nEven in the dim light, I could sense Matt's blushes. The action on screen had finally finished. While the film moved on, my mind was alive. I turned back to watch it as Matt replied, \"Yeah. Definitely a good thing that Truth or Dare is over.\"\n\nMy natural instinct to push Matt had developed through our teenage years. First as half-drunken flirtation. Then as affectionate social coaching of a shy friend. Now it came arm-in-arm with a fizzing desire to dissolve our barriers.\n\n\"Why's that?\" I asked, grinning at him as he realised he had walked into a snare that I hadn't intended to lay.",
        "Matt\n\nMy eyelids fell downwards and my head flew back as I cursed inwardly at allowing Jess to draw me into her trap. I didn't know if she was flirting, making fun of me or was genuinely interested. I did know that I had no immediate answer.\n\nIn truth, as anticipated, my body was raging in response to the on-screen scenes. Even more so because I could see that it was having an effect on Jess, albeit I wasn't sure where her reaction sat between minor embarrassment and major arousal.\n\nToo late, I realised that the best response would have been to roll my eyes and turn back to the film which, as far as I remembered, calmed down for its remainder and had at least moved on to a gay pride demo for the present. I tried to ignore her question but sensed her puckish smile, benevolent yet predatory, was turned toward me at frequent intervals as the film progressed. Unfortunately, my memory was wrong and, ten minutes later, the same couple were naked, entwined and leaving Jess and I restless in our seats.\n\nAfter a minute or two, she pounced, \"Fine then. Truth or Dare?\"\n\nCaught between the sex on the TV, my own desire and Jess's evident reaction, I was unsure of my words. There was no way I could talk about my current state while looking Jess in the eye, but I didn't want her to give up if I didn't play along; our situation was too enticingly poised. I replied, \"Dare.\"\n\nAt first, she seemed disappointed, but then she smiled and bit her lip, no longer paying attention to the screen. \"OK, if you won't tell me your reaction, you can show me it.\"\n\nFor a moment, it felt like she hadn't spoken. The room felt larger again and it because quiet and light as a chasm of safety opened between us. Then my brain caught up and the heat, noise and closeness returned. Jess, who had flirted obliquely for years, wanted me to show her how turned on I was.\n\nI turned to face her properly. Her smile was gone and instead she stared with straight-faced purity. Her eyes fixed on mine and her long blonde hair framed her face. The playful confidence had faded to sincerity and now, as I paused, it ebbed towards uncertainty. My eyes flicked downwards to the smooth curve of her chest. She noticed my glance and her nerves seemed to soften. She smiled gently at me and said, \"So?\"\n\nThoughts raced through my head. I could see now that Jess wasn't teasing me. She was smiling a little, but it was warm not jokey. She was also biting the side of the mouth, as though she was anxious or perhaps excited. I remembered the times when I had sat with her as a teenager in late night taxis, tormented by her closeness, or when I had laid in my sleeping bag unable to rest because she was a few feet from my bed. On many occasions, I had thought about being closer to her, undressing her or undressing myself. I was never obsessed as I had always been realistic in my crushes, but Jess was too beautiful to ignore entirely. The idea of her now wanting something explicitly sexual from me still felt incomprehensible to process.\n\nThe French dialogue continued on-screen and Jess continued to sit, gazing steadily at me, the same slight smile on her face, occasionally moistening her lips, fingertips lightly stroking the inside of her thigh through her jeans.\n\nJessica\n\nThe tension was killing me. I had almost not taken the reckless step into the unknown, but I wanted so badly to take advantage of our new intimacy while there was real heat between us. Years of subtle hints when we were at school had never led anywhere and now I was exposing myself, letting him see everything -- my naked desire. It was exciting, terrifying and tender all at once. It was also deeply sexy and I was trailing my nails over my thigh, battling my instinct to pull open my jeans or his and thrust my hands inside the underwear beneath.\n\nOur eyes met again and Matt's uncertainty broke. He smiled in defeat, closed his eyes and shook his head slightly, almost breathing the word \"OK.\"\n\nHis hands trembled a little as he stayed sat down but undid three buttons on his fly before reaching inside and drawing out his cock. I could feel myself involuntarily biting my lip; a habit I knew took over when I was turned on. My eyes fixed on Matt's crotch where he was using his right hand to press himself forward a little, making his erection stand up straight. It was thick, around six inches long and, if not fully hard, then close to it. Blondish-brown hair surrounded the base and the shaft was pale with light veins running around it. In contrast, the head was half-covered with his foreskin but the exposed remainder was a deep red and I longed to bend down and take it between my lips.\n\nI was vaguely aware that Matt was saying something and it broke my stare. I looked up at his amused face, clearly more relaxed now. Perhaps it was my obvious interest or perhaps my clearly having no idea what he had just said. He repeated, \"I said, have you seen my reaction now?\"\n\nBlushing, I replied, \"Yeah, I guess so.\"\n\n\"So I can put it away?\"\n\n\"No.\"\n\n\"No?\"\n\n\"No, I like it,\" I replied, adding softly, \"A lot.\"\n\nMatt looked at me in silent response, his eyes again flicking downwards to my breasts, where one of my fingertips was absent-mindedly circling on the exposed skin of my cleavage. I pulled it away and pushed some loose hair back from my face before telling Matt, \"I suppose it's my turn now?\"\n\n\"What, with Truth or Dare?\"\n\n\"Yes.\"\n\n\"I'm really leaving this out am I?\" he asked, pushing his dick slightly forward to indicate he was talking about it.\n\n\"Oh yeah,\" I replied without much subtlety.\n\nWatching him manipulate himself was turning my insides into a ball of white heat. He still looked more amused than resigned as I told him to ask me the question. Suddenly, he looked worried. Even when sitting close to me, showing me his erection and seeing me eyeing it hungrily, he remained unsure of his ground.\n\nThe familiar persona brought back my confidence. Glancing down at his head, bumping against his belt buckle, I added, \"I've set the bar for either Truths or Dares pretty low.\"\n\nMatt\n\nWhile Jess stared at my cock, my eyes had roamed over every part of her body. She seemed mesmerised momentarily and that evaporated my shyness and doubts. I came close to reaching across to pull her towards me but I still couldn't bring myself to do it. Instead, I made some quip about her seeing enough. That fractured the illusion and her puckish grin returned as she asked me to stay on display. Her fingertips were gripping her thigh now and she kept stroking the top of her breasts before pulling away, as though trying to resist urges more violent.\n\nAfter a moment lost to Jess's still distracted state, I recovered and asked her, \"Truth or Dare?\"\n\nShe replied \"Truth,\" leaving me unsure which way to go.\n\nThe anticipation of something sexual was obvious, but speaking to Jess in person about sex and asking about her secret feelings went against everything our relationship had involved. Ideas both tame and risqu\u00e9 shuffled in my mind but none felt right. All the while, I was conscious that I was still on display, that I was tempted to stroke it, and that Jess kept glancing downwards. Her tongue briefly moistened her lips and that settled my mind.\n\n\"So clearly the film affected me, but what's the last thing before this that has turned you on?\"\n\nAt first Jess smiled at the question, pleased I was playing along. Then, her face froze as though remembering the answer and balking at sharing it. I wondered if she had some strange fantasy or had dreamt about another guy, but she looked more embarrassed than concerned. Suddenly she buried her face in her hands and leaned forward, half-laughing.\n\n\"Oh God, Matt, you're going to hate me!\"\n\n\"Why?\"\n\n\"Promise not to kill me.\"\n\n\"I can see the headlines now. Student flasher murders friend in sex game gone wrong.\"\n\n\"OK, OK.\"\n\nShe uncovered her face, flushed and laughing in embarrassment more than at my joke. \"I was turned on earlier today, when you came home from your tennis match. I came upstairs while you were changing and you hadn't shut your bedroom door properly. I wasn't trying to peek but I couldn't avoid seeing you undress. I should have gone in my room but... I didn't. And then you were walking around, naked.\"\n\nI wasn't sure how to respond. It didn't make sense to me. \"And that turned you on?\"\n\n\"Of course, idiot. Matt, your body is like an athlete's nowadays and, did I mention, you were naked! Of course, I was horny! How would you react if I was walking around naked in front of you?\"\n\n\"I'm, erm, I'm not sure\"\n\n\"Really?\" Jess indicated downwards with her eyes. My cock, which had been softening before, was now visibly twitching as it hardened to the thought of Jess watching me undress and, more so, to the idea of watching her do the same.\n\nJessica\n\nWatching Matt's dick harden was driving me insane. I was torn between wanting to reach out and jerk him off into my mouth and wanting to tear down my jeans and make myself cum on the sofa. It was my shyness that held things back now. Losing all interest in the film, I pressed on with our game. \"OK. You again. Truth or Dare?\"\n\n\"Truth.\"\n\n\"OK.\"\n\nI thought for a few seconds. I wanted to raze Matt's final defences rather than clam him up. I wanted to know about his fantasies, whether he thought about me and what I could do for him. All of which he might be unable to answer while face-to-face. I went for something safer, more distant, and with potential for light relief. \"Tell me about your biggest teenage fantasy.\"\n\n\"Easy. I wanted to win the World Cup for England.\"\n\n\"I meant sexual fantasy, smartarse.\"\n\n\"That's not what you said.\"\n\n\"You knew what I meant though!\"\n\n\"No way, I genuinely thought you were interested in my childhood dreams.\"\n\n\"Bastard.\"\n\nMatt grinned in response. Then he rubbed it in by saying, \"Your turn now. Truth or Dare?\"\n\nI paused. My competitive side wanted revenge for him ducking the question. My eyes, however, flicked down to his still-hard cock and caught him adjusting it with his hand. That sent a pulse of pleasure through my body and I re-focused.\n\n\"Dare.\"\n\nMatt glanced down at my chest again, making less effort to disguise it now. When his eyes moved back to mine, he looked hesitant. I said softly, \"It's OK. You can ask.\"\n\nHe took a deep breath and said, \"Well, you've, erm, seen me. Maybe you could, you know, lose one or two things\"\n\n\"One or two things?\"\n\nMatt dropped his eyes from my gaze, \"Yeah.\"\n\n\"No more specifics than that? You're taking that risk after your flagrant cheating?\"\n\nHe grinned, \"I'll leave it up to you and your conscience.\"\n\n\"You're just full of cop-outs tonight.\"\n\nSmiling I took a deep breath of my own and considered the options. The fading embers of my competitive streak told me to take revenge by removing my socks. The rest of me made its choice.\n\n\"Close your eyes,\" I told Matt.\n\nHe did so and I stood up, not checking whether he was peeking. I moved to the rug and tried to be quiet, to surprise him, but clothes inevitably make noise.\n\nFirst, I did take off my socks, but for aesthetics not revenge. Then, I moved to my hips and lifted the hem of my top, pulling it up my body, above my chest and over my head, placing it lightly on the second sofa. Next, I unbuttoned my jeans and attempted to lower the fly silently. I slid them off of my hips and down to the floor. As they reached my knees, I felt the cool air against the burning heat of my crotch and it caused by breath to stutter. Quickly, I pressed my hand to the material between my legs, trying not to cause Matt to open his eyes.\n\nI glanced downwards and saw his dick, still on show through the front of his jeans and as hard as it had been all evening. The head was exposed and appeared a fierce red-purple colour. His fingers were gripping the armrest of the sofa in obvious agitation. Unable to resist, I said, \"Keep your eyes shut.\" Then I silently moved toward him and leaned over. My breasts, still inside my bra, pressed downwards over his legs. Carefully, I lowered my head towards his midriff, using one hand to pull my hair back behind my shoulder, and then I blew a cool flow of air across the only skin that was on show. Turning aside quickly and dropping back into my place on the sofa, I told him, \"Ready.\"\n\nMatt\n\nIrrespective of whether Jess wanted to surprise or embarrass me by having me closing my eyes, I didn't want to spoil things and I kept them firmly shut. I was, however, in torment. She was moving quietly, but I heard the sound of thin cotton moving against skin. I knew she was removing clothing and felt my cock pulsing as it stood upright away from my body. My fingers gripped the sofa either side of my legs as I resisted taking it in hand.\n\nI thought she would sit down after removing one item but, instead, I heard the familiar sound of a zipper being lowered and jeans being pushed to the floor and stepped out of. My eyes hadn't flickered but she warned me against opening them as silence descended. Then, in a flurry of activity, I felt a burst of cold air across my exposed cock, followed immediately by the bump of Jess re-joining me on the sofa and saying I could open my eyes.\n\nI turned towards her as I opened them, knowing more or less what I would see, but unsure what it would look like. Jess sat side beside me, a demure look on her face and an attempt at elegance in her pose as she looked towards the TV. She had folded her hands together and rested them in her lap, crossed one ankle over the other with her legs tucked to one side, and she was wearing just a white lace-effect bra and matching Brazilian-style underwear that curved under her bum as it sunk into the sofa. I heard myself mutter something.\n\n\"What was that Matthew?\" Jess asked.\n\n\"I said, I've wanted to see this since we were eighteen.\" Unusually, Jess had no response. She seemed taken aback and then her face lit up. \"What?\" I asked.\n\n\"Nothing,\" she replied. \"Just two reactions that I'd hoped for.\"\n\n\"Two?\"\n\n\"One,\" she said, pointing to my mouth, \"And two,\" she added, pointing to my full erection, which was twitching as I flexed it unconsciously in lieu of touching.\n\n\"Oh,\" I replied, unable to form coherent words as I gazed at Jess body, revealed and still teasing.\n\nUnderneath her clothes, her figure was slim, with the slightest hint of a tummy as she was sat down. Her breasts formed small handfuls and were full and curved beautifully into her bra, which pressed them slightly together to form a smooth cleavage. Tracing her legs down from her hips, my eye caught her fingers moving slightly over her underwear. A new confidence seemed to possess her as I looked back to her face.\n\n\"Take off your jeans and t-shirt, Matt,\" she said. She spoke quietly and in a level voice, but it was a command not a request.\n\nStaying seated, I did as she asked; pulling my t-shirt over my head, undoing the top button of my jeans and briefly lifting myself from the sofa to slide them down to the floor and kick them off along with my socks. Shyness came over me again as I looked back at Jess, but then I saw her assessing my body in hunger. I tensed my stomach muscles, keen to impress. \"What now?\" I asked.\n\n\"Truth or Dare?\" she breathed.\n\nJessica\n\nI tried to hide from Matt that, beneath my posed attempt at coquetry, half-naked but seated like a lady, I had one finger stroking the front of my underwear, over my clit.\n\nHe took a long while to consider his options while I gazed at his body. Seen in close-up, his muscles remained taut and his short, tight, black and navy striped boxers looked amazing against his toned body and its angular lines. Those lines framed his stomach and plunged below his waistline. I yearned to follow them downwards, underneath his boxers and close to the base of his cock that still stood to attention through their front.\n\nEventually, Matt replied, \"Truth.\"\n\n\"Would you like to know what I'm doing, or what I'm thinking?\"\n\n\"Erm, both?\" He raised one eyebrow, looking at me hopefully.\n\n\"Choose,\" I smiled back.\n\nI felt his eyes move over my breasts, down my stomach and along my bare thighs. \"The first. What are you doing?\"\n\nThe heat of embarrassment crept up my chest, leaving a light red flush, but I slowly pulled away my left hand and uncrossed my ankles, placing my feet beside each other but still close together. With his unimpeded view, Matt could see my right hand with its fingers curled on top of my panties. He could not fail to spot the tip of my middle finger stroking myself lightly but steadily. I increased the pressure of each stroke as he stared, my breath catching as I did so. Matt's hand flinched, moving towards his cock and then drawing back before he touched it. His eyes met mine and I nodded slightly.\n\nSlowly, he moved his hand back towards his cock, wrapping his fingers around the shaft as my chest rose and fell in excitement. He began to move his hand up and down, covering and uncovering the head. He worked slowly, apparently enjoying the moment and perhaps enjoying performing for me. My eyes locked on his crotch while my fingers pressed down hard on my own, sending a rush of adrenaline shooting down my legs.\n\nA pearl of precum appeared at the tip of Matt's cock before his slow-moving hand spread it rapidly across the head. At that, I pulled my hand away and slid it inside my underwear, letting lose a light but long moan as I felt my fingers touch my clit properly for the first time. I started to move quickly, using two fingers to rub around and down, my other hand moving to my breast, holding it and squeezing slightly through my bra.\n\nMatt increased the intensity of his masturbation. Our eyes met as he looked up, perhaps for the first time since I had adjusted my position. We smiled shyly at each other, neither relaxing our pace. I almost reached out for his hand, but still felt scared to touch him, fearful of breaking the spell. Instead, I tried to tease him, working my bra cup downwards slowly as I massaged my breast.\n\nMatt was mostly silent during all this period. His eyes burned into me but little was said. I could hear his hand moving against his skin and the occasional signs of pleasure from his uneven breathing, so different to the soft moans I felt I couldn't hold in. Suddenly, he surprised me by whispering, \"Go on,\" indicating my bra with his eyes.\n\nA warmth grew in my stomach and mingled with waves of euphoria that I drew out from lower down with the movement of my fingers.\n\nMatt\n\nJess stood up, suddenly filled with poise. She faced me while reaching up her back, one-handed, to unhook her bra, while the other hand stayed inside her underwear. The shape of her fingers disturbing the fabric made clear that she was still caressing her clit. She looked stunning stood there, half-lit in shadows by the film that flickered away in the background. The elegant pale underwear added delicacy to her curves and the mixture of desire and elation on her face made me ache for her as I angled my cock in her direction and made long, firm strokes.\n\nDrawing her hand out from inside her underwear, Jess leaned forward slightly, so her bra straps fell down her shoulders and away from her body onto the floor. She stood back up straight, her breasts round, firm and topped by small, light pink nipples. She reached up and swirled the fingers that had been touching her around one nipple, leaving a trail of moisture from her pussy. My hand accelerated on my cock, pushing it toward her again to increase the pleasure and show its full length.\n\nThen Jess surprised me by turning around. For the first time, I saw her bum, half-covered by her panties, but only for a moment. She was enjoying her show and trailed her nails up the tops of her thighs and over her cheeks. Her thumbs hooked the inside of her waistband over her hips, and eased it slowly downwards. She dipped forward a little while doing so, trying to tease me but scared to expose herself fully. As her underwear reached midway down her thighs, she let them drop to the floor and then, overcome by embarrassment, she quickly returned to her seat, biting her lip. She was fully naked and, despite her inhibitions, started rubbing her clit again with her legs now shoulder-width apart.",
        "\"That was incredible,\" I said, the words coming out unevenly as I masturbated while speaking.\n\nI tried to catch Jess's eye while my own kept straying over her body and, particularly, between her legs where a thin strip of light brown hair could be seen occasionally when her glistening fingers flickered back and forth.\n\n\"Yeah?\" she replied and, seemingly spurred on, she turned to face me in her seat, leaving her right foot on the floor while lifting the other onto the sofa and leaning back against the armrest. Her legs spread wide in front of me as she did so and fully exposed her pussy. She fixed her eyes on mine and looked at me with sensual determination. While one hand gripped her breast, the length of her fingers on the other slid from her navel, through her sparse pubic hair and down into her slit. Parting her lips for me to see, she moved back up again and exposed her clit, circling it briefly and then, with a sharp intake of breath, plunging two fingers into herself. She drove them repeatedly between her lips and her breathing came out as short, sharp moans. Her eyes half-closed in pleasure and her mouth was agape as she seemingly closed in on her climax.\n\nJessica\n\nEach time I exposed myself further to Matt, he responded with subtle encouragement, thrusting his cock towards me and increasing his pace before pausing his hand, as if overwhelmed with pleasure and holding off from peaking too soon. He let out breathy little \"fucks\" that he hardly seemed to notice, as though my masturbating in front of him made all his fantasies real-life.\n\nI wanted to feel him closer but knew that I couldn't hold out for something more and suspected he couldn't either. Instead, I told him to take off his boxers and move in towards me. He lifted himself from the sofa and slid off his underwear. Then he half-shuffled along the sofa with one foot on the floor and his other leg kneeling on the seat. Briefly, our legs touched and our eyes shot to meet each other as we made first contact.\n\n\"Closer,\" I said between cries of bliss, still thrusting my fingers rhythmically but slowly into myself as he moved.\n\nHe came nearer, so near that his cock, pushed horizontal by his fist wrapped around it, was only a foot from my breasts. I stretched out my leg on the sofa so it ran alongside the outside of his and curled it across the back of his thigh, holding him in place, his coarse body hair rough against my smooth calf.\n\nHe probably couldn't see what I was doing any more but he could see my arm moving as I fucked myself faster. We could both though see him jerking his cock towards by breasts. It was close enough that I felt sure that my breath, now rapid and tremoring, must have been flowing over the head that was dappled with white, sticky precum.\n\n\"I showed you what I was doing, but I never said what I was thinking,\" I said.\n\nMatt looked down into my face, slowing his hand in response. He reached out to stroke my cheek, \"No, you didn't.\"\n\nI took a deep breath, nuzzled the side of my face into his palm and then looked down again at his other hand, rolling steadily up and down his shaft. My body felt ready to explode. \"I was picturing you cumming over my chest, in the position we're in now.\"\n\nI bit my lip and turned my face slightly into his palm, shy and unsure again how Matt would respond. For a moment, an awful moment, he paused. Then, he took his hand from my face and gently placed it on my shoulder, pushing me back into the sofa. I smiled as pleasure and anticipation flowed through me and his hand start to pump rapidly up and down his cock. My own fingers dove deep into my pussy and my other hand flew to my clit, rubbing it fiercely as Matt's eyes caught mine and I nodded, crying, \"Please. Yes, Fuck. Yes.\"\n\nHe angled his cock directly at my breasts as the first jet of cum flew from its tip. The hot liquid landed across my upper chest and a second burst landed on my right breast as my own orgasm hit and my pelvis bucked, unable to bring my legs together. My movement shook Matt's body and knocked him off balance as a series of short cum-shots erupted towards me and landed across my breasts, my chest, my throat and shoulder. I cried out repeatedly as my whole body jerked and throbbed with waves of pleasure and I fought to carry on touching myself while another part of me wanted to ride it out.\n\nEventually, the sensations subsided and I opened my eyes to see Matt looking down, still gently stroking his cock as he knelt over my front and a last drop of cum fell onto my stomach. I could feel the rest spreading across my chest and rolling slowly down my breasts and into my navel. My face broke into a wide, spaced-out smile. Unable to speak, I just gazed up at Matt, enraptured and exhausted. He took my left hand in his and squeezed gently as I closed my eyes and bowed my head in happiness.\n\nEmerging from my fug, I licked my lips briefly and used my free hand to trail a fingernail through the cum sliding slowly down my body. I used it to trace the outline of my nipple, dragging a wet circle around my areola. I wanted to taste it but hoped Matt might kiss me so decided not to try.\n\nMatt\n\nThe transformation of Jess across a few hours, from fragile worrier to come-spattered exhaustion via blushing porn-viewer, mischievous game-player and elegant beauty, had shaken my foundations. Clear thoughts refused to form as we looking at each other, recovering from our crescendo. She teased her nipple with my come and I felt renewed with desire. Our eyes met and, for a second, I thought we would kiss until she darted a hand out to stop a trickle of semen rolling down her side and onto the sofa cushion. We burst out laughing instead.\n\n\"OK, I might need to take a shower,\" she said.\n\n\"Yeah, sorry about that.\"\n\n\"My fantasy. My fault.\"\n\n\"A generous interpretation.\"\n\n\"Can you wait there for five minutes while I clean up?\"\n\n\"Are there other options?\"\n\n\"You could go to bed, but I wouldn't advise it.\"\n\n\"OK. I'll wait.\" I had hoped she would invite me to share her shower, but perhaps she wanted to gather her thoughts. I stepped back from the sofa to let her stand up. She laughed again as she had to catch another stream that immediately ran down from her navel and onto her pubis.\n\nShaking her head at me, she said, \"OK, this was fun, but you should really keep some tissues in your lounge! I'll be back.\"\n\nWith that, she walked with unusual purpose towards the bathroom, but not before she trailed her fingertips along my lower stomach as she left, not quite touching my dick and looking back at me with intent in her eyes.\n\nI sat back on the sofa and looked around. The film was still playing on the TV, so I switched it off. Our clothes were scattered on the floor and across the other sofa. A strange instinct to tidy led me to fold Jess's jeans and put them next to her top on the sofa arm. I hesitated at her underwear before sighing at myself, picking it up and putting it next to the rest of her things. My own clothes I was unsure about. Did Jess want me to stay naked? Would she come out of the shower in a towel and get back in her clothes?\n\nI could hear the shower start in the bathroom and the change in the sound of the water as Jess stepped into the bath. I decided to put on my boxers as a halfway house. As I reached down for them, my phone vibrated in my jeans pocket. I pulled on my boxers and took it out. It was another message from Izzy who apparently could not wait for me to call her and wanted to know if I would meet for coffee tomorrow.\n\nFrom the shower, I could hear Jess singing to herself in a light, airy voice, a sound apart from the fluctuations of confidence that had led to today. It sounded like Black Cherry, one of the Goldfrapp songs she had been playing earlier. I glanced towards the bathroom and realised that the direct line from the lounge, through the kitchen, down the short corridor and into the bathroom, was wide open. Jess had not shut any of the doors and the shadow of her naked body was faintly visible against the shower curtain.\n\nI turned back to my phone and told Izzy that I might be seeing someone else and we probably couldn't meet-up in the short-term. If she wanted to talk about things, I didn't mind, but it would still have to wait a couple of days. She replied, \"Fuck it Matt, I'm sorry. Nevermind.\"\n\nBaffled, I put my phone away and looked back to the bathroom. The shower had stopped and I saw Jess's arm reach out for a towel.\n\nJessica\n\nAs water flowed onto me, the euphoria cleared from my head. I felt more alert and alive than I had done in weeks. Uncertainties solidified into conviction and decisions raced into place. It felt strange to plan out my future while washing cum from my chest, but it seemed that life-decisions were not found in deep thinking but emerged in moments of perception, sparked by ambition. Perhaps one leads to the other and both are required. Either way, plans had now formed. I would stay with Matt for the night, and I had ideas for that too. Afterwards, I would go back to my parents and spend a weekend with Dad. I would mine his know-how and plan my agency. The idea felt solid and the help was there to be sought.\n\nI washed off my skin and tingles ran through me when soaping my nipples and pussy. I started to sing under my breath, then louder as I relaxed into knowledge that Matt's feelings were mine to explore in confidence and safety. Turning off the water, I reached for a towel. I dried behind the shower curtain and then pulled it aside to step out of the bath, the towel held by my side. I could see through the series of doorways that Matt had turned to watch, as I hoped he might. Looking down and biting my lip while smiling, I opened my arms wide and then wrapped the towel around my chest, hiding anything sexual from view. Then I walked back to the lounge.\n\nReaching the sofa, I noticed Matt had put his boxers back on.\n\n\"Should I dress?\" I asked, innocently. He stuttered and stumbled. \"You're going to have to get quicker,\" I said, smiling affectionately as Matt blushed. \"You're incredibly cute but you're so easy to tease.\"\n\nHe looked resigned but happy. I leaned forward, as I had earlier after removing my clothes. This time I placed my palms on the sides of his chest and slid them down over his stomach before taking the waistband of his boxers in hand and pulling it forward over his cock, which returned to life in front of my eyes, first getting hard and then lifting away from his body. He lifted his bum and I pulled his underwear away entirely. I crouched down at the level of his crotch as I lowered them down from his knees and free from his feet.\n\n\"Better,\" I said as I stood up again. Then I stepped forward, placing my knees on the sofa on either side of his thighs. He still hadn't touched me as his cock rose fully between us, brushing my towel. I waited. He watched me intently, willing me to go further.\n\nMatt\n\nJess settled over me. Her body was still warm from the shower and the heat radiated over my thighs and stomach. She paused and watched me neutrally, as though expecting something unspecified. My hands were on the sofa, inches from her thighs. With hindsight, it's hard to believe that I still hesitated to touch her, but the invisible barrier built up over years still guided my actions. For a second, Jess's eyes saddened, as though realising we weren't of one mind. That broke my reserve and I moved my hands forward, resting them first on her thighs, just up from her knees, and then sliding them on, I moved along the silken skin that drew me up to her waist.\n\nHer face cracked, a smile breaking out as she leant in to kiss me. My hands moved under her towel as she did so. While she brought her fingertips to my cheeks, framing her lips as they brushed against mine, I slid my hands from her hips around to her bum, easing her forwards.\n\nMy arms had spread her towel apart and she gasped as her movement rested my cock against her skin. It grazed her sparse hair and I squeezed her cheeks gently, savouring the touch. Her tongue slid across mine for the briefest of moments, and then she pulled back from our kiss. \"This feels out of place,\" she said, as she rested her bum back on her heels, tugged open her towel and tossed it aside.\n\nShe knelt down now, naked and poised. Her hand reached out and traced a fingernail up the side of my shaft, tilting it toward her to meet her skin. As her finger moved up onto my head, I moaned at her touch.\n\nShe took my cock in her hand, stroking it slowly before lifting herself up on her knees. I ran my hands from her bum up her sides, letting my thumbs move across the sides of her breasts and then slid my fingers into her hair. She edged herself forward, bringing my cock under her slit. Her tongue briefly moistened her lips and closed her eyes as she lowered herself down, angling me so that my tip met her clit. Then she worked my shaft to play with herself, rubbing the glans firmly against her nub, still stroking me slowly, up and down.\n\nJessica\n\nMatt's cock felt incredible. It was hard in my hard and pulsed as I rubbed it. I used it tease myself but I wanted much more. I edged forward a few inches. Still holding it tight, erect in my hand, I parted my lips with the head. My body was ready but I held him at my opening, swirling him around in the shallows, covering it in my wetness and heat.\n\n\"Please,\" he murmured.\n\nI pressed myself downwards, taking Matt deep inside to the base of his shaft. He called out in joy as I closed all around him. I cried out as well, my pleasure too much to hold in any more. I wanted to keep him there, deep in my pussy but I couldn't resist. I started to ride him fast and hard. My hands were on his shoulders and he reached down for my breasts. As his fingers closed on my nipples, squeezing them lightly, I upped my pace further. My pussy lips lifted up to the head of his cock and then slammed back down once again, taking it inside time after time. With each downward thrust, he drove up to meet me and my clit ground against his body. He leaned forward to kiss my breasts as they bounced around in response to my movements. He caught my nipple between his lips and I moaned in ecstasy as he sucked it toward him. I was moving too quickly though and he couldn't keep hold. Instead, he leaned forward, pulling our bodies together and holding me tight in his arms as we fucked powerfully and free.\n\nI felt my orgasm building, and took Matt's face in my hands. Kissing him deeply, our tongues collided as my moans into his mouth became higher and louder. He gripped my bum, pulling me onto him in time with his thrusts. He had slid down the sofa so I was leant forward. Now his cock was driving into me as much from behind as beneath.\n\nHis breaths suddenly came shorter and I felt him tense up. Then he was cumming, calling out, \"Jess! Fuck!\" as his cock throbbed and spurted within me. It pushed me over the edge and I collapsed onto his body, writhing in ecstasy as my pussy tightened around him again and again. He continued plunging into me as I rode out my climax and finally sank down onto his body, aftershocks rippling through from my chest to my feet.\n\nEventually, our breathing recovered and we were two sweat-soaked bodies, pressed together on the sofa, laughing and smiling. The world outside was shrunken and distant. For now, at the least, all that mattered was close."
    ],
    "authorname": "insects_of_caring",
    "tags": [
        "sexting",
        "vibrator",
        "sharing photos",
        "watching porn",
        "masturbation in public",
        "students",
        "straight",
        "mutual masturbation"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/truth-or-dare-75"
}