{
    "title": "Coed Blowjob Buddies",
    "pages": [
        "Author's note: For a long time I wanted to write about a girl who loved giving blowjobs. Instead, my muse and I discovered two girls. What follows is mostly straight sex with strong, lesbian sex overtones as these two girls themselves and each other along the way. If you like the idea of two hot girls giving a blowjob, you should like this story. That includes if you want to BE one of those hot girls. If you do enjoy, please be kind with a rating and a comment or two.\n\n*\n\nBethany had never felt as innocent and pure as the night she sat in a circle with her girlfriends taking the Are YOU a Good Bad Girl? quiz. Allison Sweets had found the quiz online and read the questions and multiple choice answers out loud. The quartet of girls howled with laughter as they worked through the quiz. \n\n\"Question #3: You're on a first date with that cute guy you've lusted over for months. You know the one, the guy with the big package inside the front of his pants. You have one chance before he's gone forever. Do you A) Unwrap that package the first chance you get. Christmas is CUMMING! B) Wait until he makes the first move before mounting that horse hung stud? Hi-yo Silver! C) Keep your legs crossed. There's big and then there's too big. Or, D) Time to grab the wide-angled lens because this needs to be documented and shared with everyone!\"\n\n\"I'm not putting any pictures online,\" Tina Greggs said. \"But I'd ride the hell out of it!\" Her answer was shared by Wendy.\n\n\"Fuck it, if he's that hot and leaving town? Christmas is cumming early for me and HIM!\" Allison squealed and laughed.\n\nLast again to answer, Bethany shrugged. \"I guess I'd wait for him to make the first move,\" she offered. \n\n\"That's the one you always choose,\" Tina challenged.\n\nBethany blushed, hoping the next question would be better. It was.\n\n\"Question #4: It's a rainy Saturday night and you ain't got nobody. Do you A) Pop some popcorn, raid the freezer for some Ben & Jerry's and plop down in front of Netflix for an Orange is the New Black marathon? Or B) Curl up with a good book and your favorite stuffed animal. Sometimes, it's okay to take a night off from the constant party of your life? Or C) Time to exfoliate your face, deep condition your hair and shave down there so you're ready for tomorrow night! Or D) Time to change the batteries in your vibrating buddies. They're getting a work-out tonight!\" Allison finished reading the question, looked at Bethany and asked, \"A or B?\"\n\n\"D,\" Bethany replied with a relieved smile. Finally a question that didn't make her sound like prude.\n\n\"Bullshit!\" Wendy Wilson cried before she started laughing at Bethany. \"Do you even know what they mean by vibrating buddies?\"\n\n\"Yes,\" Bethany said with an exasperated sigh and an eye roll. She was tired of her good girl persona. \"And for your information, my favorite one doesn't buzz.\"\n\n\"Oh really?\" Wendy's eyes went wide as she smiled. She grabbed a handful of her curly blonde hair, tossed it over her shoulder and asked, \"How many vibrating buddies do you have?\"\n\n\"How many do YOU have?\" Bethany asked, turning the question back around without an answer.\n\n\"One, but I never need to use it,\" Wendy said, putting her pointy little nose in the air as if she was too good for a vibrator. \n\n\"If I had one, I'd used it,\" Tina said. \n\n\"You should get one,\" Allison told her. She received a surprised look from Wendy. \"What? It's fun and sometimes it feels good to do it yourself. Right Bethany?\"\n\n\"I think so,\" she replied, unsure if she was being set-up to be the butt of another joke.\n\n\"I have two and they both buzz,\" Allison confessed. \"One is really big and the other is a little pocket rocket that feels really good back there, if you know what I mean.\"\n\n\"Oh yeah,\" Bethany giggled. \"That feels really good!\" Most of all, Bethany loved the shocked look on Wendy's face. Who was the good girl now?\n\n\"Have you ever allowed a guy, you know . . . back there?\" Tina asked them.\n\n\"Wait, I have a question for that!\" Allison said, flipping the page. How many questions did she have? \"Okay, Question #22: Your backdoor, is it A) An exit only? B) Open only for love? C) A great way to avoid getting pregnant? Or, D) There's a reason why it's called the Hershey Highway?\" \n\nThere were protests about the terminology before Tina said it was an exit only. Wendy agreed with her. Allison shrugged as she struggled with her answer. \"I don't like any of those choices, so I guess B) Open only for love? I mean, I'll do it and not just for love, but, well, you know, right?\" She looked gave the pretty redhead, Bethany, an expectant look.\n\n\"I guess it's D for me,\" Bethany revealed, feeling empowered by Allison's early comment about how Allison used her sex toys. \"I do it a lot on my own.\" She blushed but smiled, too. \n\n\"Well, okay,\" Allison laughed. \"Ready for Question #5? It's a short one: Spit, swallow, wear that spunk like something from Proud Mary or he's not getting that until he puts a ring on it?\"\n\n\"Spit,\" Tina quickly announced.\n\n\"It should be, 'he's only getting it until he puts a ring on it,'\" Wendy said. \"What about you, pervert?\" She looked at Bethany.\n\n\"I don't know,\" she said. She didn't and that was the problem with her playing this game. Before arriving at college, Bethany had been with one guy: Thom Marks. Their first time was their third to last date before heading off to college. It hadn't gone the way Bethany thought it should. Yes, fucking had felt good. She didn't have an orgasm; she never expected to have one on her first time. What had confused her was Thom's approach. They had done it in the missionary position each time. Foreplay had been kissing and caressing but nothing more. Bethany had wanted to try the things she had seen on the internet and read about. She had wanted to find out about oral sex and finger-fucking and everything else. If Thom had been willing, Bethany would have offered her butt to him, too. Two years of dating, kissing and nothing more had grown tiresome. Bethany had been ready to try it all. But too much church had caught up with Thom. After his orgasm he had been filled with shame and insisted they get dressed. That had happened three times between them. As had happened after so many other dates, Bethany had gone home and wore out the batteries on her toys.\n\n\"Wait, you'll let a guy fuck you up the ass, but you've never given a blow-job?\" Wendy asked, trying to make sense of the redhead's answer.\n\n\"I never said I had a guy up my butt.\" \n\n\"You're not a virgin, are you?\" Tina asked.\n\n\"No, I've done it,\" Bethany said, hating how she felt on the defensive about it. \"And more than once, though all with the same guy.\"\n\n\"That ultra-religious guy?\" Allison correctly guessed. Bethany was closer to Allison than Tina or Wendy. Along the way, Allison had heard more of Bethany's stories.\n\n\"Thom,\" she said.\n\n\"And that's all you did?\" Tina quizzed, looking amazed. \"He didn't go down on you or nothing?\"\n\nBethany shook her head and felt innocent again. \n\n\"Girlfriend, we've got to find you some real dick!\" Wendy crowed. \"You're cute as hell. I bet half the guys at this college would want to get some of that.\"\n\n\"What's your answer?\" Bethany asked Allison, hoping to push the attention away.\n\n\"Swallow or wear that spunk like something from Proud Mary,\" Allison giggled. \"I love the taste of a guy.\"\n\n\"Ew!\" Wendy and Tina chimed.\n\n\"I'm serious. I'd do just that if it didn't make me so fucking horny to do it,\" Allison promised.\n\n\"Only foreplay for me,\" Tina insisted. \"That way he doesn't expect me to swallow.\"\n\n\"Yeah, good plan,\" Wendy agreed, high-fiving her roommate before Allison went on with the quiz. \n\nThere were questions about positions (Doggie-style? A) Makes me wag my tail? B) Can he be on the bottom? C) No rug burns for MY knees! Or, D) Felching is too embarrassing!). There were questions about guys going down on girls (Answer A) Always better to give than receive. B) Always better to receive than give. C) My girlfriend always does it better. Or, D) Yes! Yes! And HELL YES!). Bethany gave the answers she thought would be true while wishing she knew for sure. The answers the other girls gave painted an interesting picture of them. \n\nWhile Wendy teased Bethany the most about being innocent and inexperienced, Bethany got the impression that Wendy wasn't that much fun in bed, either. She didn't do it doggie-style. She preferred receiving oral sex to giving it. Wendy said both \"cowgirl\" and \"reverse cowgirl\" were too much work. Hand-jobs were a waste of time, too.\n\nAllison and Tina were more experienced. Tina had given the room an awkward moment of silence when she answered the receiving oral sex question with C) My girlfriend always does it better. No one asked a follow-up. Tina scored extra surprise points with the doggie style question by choosing B) Can he be on the bottom? But she was with Wendy when it came to avoiding doing it cowgirl style. Meanwhile, Allison earned the title of \"cumslut\" because of her blow-job answer and her hand-job answer though that title wasn't bestowed until a later question.\n\n\"Question #18,\" Allison announced. \"There's a nice hard one sticking through a hole in the wall, do you A) Suck it for all it's worth. B) Fuck it for all it's worth. C) Stroke it for all it's worth. D) Run away as fast as you can!\" Allison was stuck between answering A or C and earned her unofficial title of \"cumslut.\" (Wendy said she would run away. Tina was willing to fuck it. Bethany chose sucking for the experience.)\n\nThey finished the twenty-five question quiz, decided Allison made the best \"Bad Girl\" and called it a night. Bethany and Allison weren't roommates but their class schedules overlapped and they lived on the same floor. \"I'm not really tired,\" Bethany said as they approached the elevator. \n\n\"Me neither. We could visit Caf\u00e9 Joe's if you want,\" Allison said, naming the Starbucks knock-off just off campus that kept late hours. They stopped by their rooms for coats and headed out together. \n\n\"I guess I don't make a very good bad girl,\" Bethany admitted as they walked down the block.\n\n\"You're just a bad girl in waiting. Did you notice how Wendy doesn't do anything?\"\n\n\"Oh-my-God, yes!\" Bethany squealed, glad she wasn't the only one who noticed. \"She should get with Thom!\"\n\n\"Why is it the cute blondes with perky noses always get the rich guys?\" Allison asked.\n\n\"Same reason rich guys are always cheating on those blondes with perky noses,\" Bethany giggled. \"They're boring in bed.\"\n\n\"I can't believe Tina goes both ways.\"\n\n\"Maybe I should hit on her if I want some oral action,\" Bethany joked. It was easy joking with Allison.\n\n\"You would let a girl do that to you?\" Allison asked.\n\n\"I'd rather it was a guy so I could do it back to him.\"\n\n\"Mm, I love sucking dick.\"\n\n\"Do you really swallow?\"\n\n\"I love everything about how a guy gets off. I like the way they lose control, how they look at you as if they just won lottery, how they blast off if you get them really excited . . .\" Her voice trailed off and Allison shivered. \"Okay, now I'm getting horny. There better not be a guy in there I know or he's getting lucky.\"\n\n\"Then I hope there is,\" Bethany giggled. Why not? Maybe she could learn something about how Allison picked up a guy.\n\n\"If I'm getting lucky, then so are you,\" Allison said as she pulled open the front door. They ordered lattes and picked a booth away from the counter and the few other customers. They giggled their way through the questions and answers everyone gave from the Bad Girl quiz. Allison's raunchy openness kept the conversation funny and crude. \"I never pegged you for an anal slut,\" Allison smirked.\n\n\"Never pegged you for being a cumslut,\" Bethany shot back, laughing and glad they decided to stop for coffee. \"Is it wrong if I ask how many guys you've been with?\"\n\n\"Been with? As in, had sex with them?\" Allison qualified. \"Only three, but I've messed around with more guys than that.\" Bethany was confused and it showed. Allison sat facing the door. She glanced around Bethany's mane of fiery red hair before leaning close. \"I used to give random guys I met at work hand-jobs in the parking lot.\" Bethany had known Allison since orientation week. In those four months since becoming friends, she had never seen her cute friend with plain-Jane brown hair blush. \n\n\"How would that work? You'd meet some guy, think he was cute and offer to jerk him off?\"\n\n\"Sort of,\" Allison giggled. \"I mean, he had to be cute and had to flirt with me, first. But if he said something sexual to me, I'd call him on it.\" Bethany could only imagine the wide-eyed look she was wearing. \"Okay, it only happened like five times and it was only during last summer.\"\n\n\"Five times or with five guys?\"\n\n\"Guys,\" Allison admitted before giggling again. \"It happened more than five times.\" Bethany was as fascinated as she was willing to believe her friend and she definitely believed Allison. Why would she lie about something like that? Allison explained how the first time it had been a joke. A friend of hers had a girlfriend away on vacation, he made a joke about needing an orgasm, \". . . and we made a joke about how a helpful hand-job would be a community service instead of cheating. The next thing I know, we're sitting in his car, I'm stroking Rob's dick and, well, we both walked away happy.\"\n\n\"Didn't you get horny doing that?\"\n\n\"Oh-my-God! I got SO horny!\" Allison cried out loud enough for the other people inside Caf\u00e9 Joe's to turn around and look at her. She lowered her voice for the rest. \"That was like the best part, how horny I got and then I had to go back to work and stay that way for the rest of the day until I could get home and take care of myself.\"\n\n\"Why didn't you, I don't know, let them do you or something?\"\n\n\"I don't know, it was hotter just doing them.\"\n\nBethany squirmed without realizing it as she thought it through. Allison caught the wiggle.\n\n\"I know, makes you all tingly down there, doesn't it?\"\n\n\"Did you ever do more than just . . .\" Bethany made an up and down motion with her loose fist to demonstrate a hand job. It was easier saying the word before she started feeling excited. Just because she had never given a hand-job didn't mean she didn't know how it worked.\n\n\"Just hand jobs and blowjobs. Here's the funny part. Ryan? That first guy? We only did it once.\"\n\nBethany found herself filled with more questions. How did she find the other guys? Did they all have girlfriends? Wasn't she afraid of getting a reputation? \n\n\"I guess I did get a reputation,\" she shrugged. \"But I knew I would be leaving for college, so who cares? I never asked about girlfriends because I didn't care. Besides, guys are horn-dogs. I bet any guy in here would say 'yes' to a no-strings-attached blowjob.\"\n\n\"Yeah, well, I'm not going to give a stranger my first blowjob.\"\n\n\"Why not? Might be good practice,\" Allison teased before her eyes lit up as she looked at the door. \"Or maybe it doesn't have to be a stranger?\" \n\nBethany glanced over her shoulder at the cute guy approaching the counter. He looked familiar but she couldn't quite place his face. \"Who's that?\"\n\n\"Keith from my Econ 101 class. He sits next to me and always asks about you.\"\n\n\"Me?\" Bethany asked, surprised. \"I don't know him.\"\n\n\"Econ 101 is the class I have right before we do lunch every day,\" Allison said and Bethany put the rest of it together. She didn't share Allison's Economics 101 class, but she shared the class immediately before it and they usually walked together. \"That red hair is hard to miss. Even in here.\" Looking past Bethany, Allison gave Keith a big smile and waved him over. Under her breath, she mumbled to Bethany, \"Ready to get lucky?\"\n\n\"Hey Allison,\" Keith smiled as he strolled to their table. He didn't try to sit with them. His smile looked comfortable on his face. He was clean shaven and carried a textbook in one hand and his coffee in the other. When Allison motioned for him to sit, he held up the textbook, \"Gotta study.\"\n\n\"You should sit,\" Allison said, patting the empty space next to her again. Keith's smile grew bigger as he accepted her invitation to sit. Bethany couldn't see Allison grabbing the front of his jeans but she saw how Keith's smile dropped when his eyes went wide with surprise. \"Problem?\" Allison gigged. \n\nHe shot Bethany an apologetic smile, \"She's not like this in class.\" Bethany gave a nervous giggled while convinced her face was red enough for everyone inside the booth. What the hell was Allison doing? He glanced down at Allison's groping hand before looking at the pretty girl with straight, brown hair. \"I should warn you I'm on a hair trigger.\" \n\n\"You're big,\" Allison cooed.\n\n\"I'm average,\" Keith corrected but looked thrilled with her assessment.\n\n\"I want this inside my mouth,\" she purred.\n\n\"Can I finish my coffee?\" he asked, looking around the store. Keith was as aware of their surroundings as Bethany.\n\n\"Why don't you take it with you?\" Allison asked.\n\n\"Where are we going?\"\n\n\"Back to Bethany's room. She doesn't have a roommate.\"\n\n\"Are we sure that's okay with Bethany?\" Keith asked wide-eyed girl with the curly red hair sitting across from him.\n\n\"Should be,\" Allison said, nudging Keith to the edge of the bench seat. \"She's going to help me.\"\n\n\"Help you?\" Bethany asked.\n\n\"Help? Do it together? Whichever.\" Allison gave her a big, playful smile. She pulled her friend out of the booth, pushed Keith towards the front door and made sure Bethany followed.\n\n\"Can we talk about this?\" Bethany whispered.\n\n\"No,\" Allison said, giving Keith another shove.\n\nThe walk back to the dorm room felt surreal to Bethany. The cool evening air felt good against her heated, flushed face. Allison wormed between her and Keith and hooked her arms beneath theirs so they walked as a group. \"We're not really doing this, are we?\" Keith asked, echoing Bethany's biggest question.\n\n\"Sure we are,\" Allison sang as if they were heading to Disney World instead of Bethany's dorm room. \"But there are rules. You're getting a blowjob and nothing else. No touching us. And you can't tell anyone what happened, either. Bethany doesn't want a reputation.\"\n\n\"Is it okay if I change your names?\" he asked.\n\n\"Sure because who's going to believe two hot girls snatched you from Caf\u00e9 Joes with the sole intention of giving you a blowjob?\"\n\n\"Can I ask why you're doing this?\" \n\n\"Does it matter?\" Allison said. Keith shrugged. \"Okay, because Bethany's never sucked dick and wants to try it.\"\n\n\"Wow, really?\" Keith asked, sounding more surprised by that tidbit of information than what was happening to him.\n\n\"Really,\" Bethany flatly assured him as she gave up on her blushing ever ending. \n\nThey reached the dorm rooms and took the elevator up to the third floor without comment. Allison kept her arms hooked around their arms and that's how the trio walked down the hallway, too. Bethany fumbled with her keycard before getting her door open. Her roommate dropped out after six weeks and the college never forced a second roommate into her room. Bethany kept the extra bed made and used it as a couch. \n\nOnce inside the room, Allison kept control of the situation. She pushed Keith's coat from his shoulders. While he finished taking it off, Allison took off hers and made sure Bethany was doing the same. \"Mind kicking off your shoes?\" Allison asked. After he did, she rubbed the front of his jeans for a moment before working the fasteners in front. \"You didn't think I was kidding about any of this, did you?\"\n\n\"Maybe,\" he said looking as if he still had doubts.\n\n\"Still think that?\" she asked, pushing her hand inside his open pants.\n\n\"Not so much,\" he grinned. Bethany was impressed with Keith's ability to maintain his composure. It wasn't until Allison began pushing down his jeans that things became serious. A quiet hush fell over the room as Allison began caressing his exposed cock and balls as if everyone was holding their breath. She pushed him backwards on the empty bed.",
        "\"Get over here,\" Allison reached for Bethany. She pulled the redhead close and they dropped to their knees in front of the man without pants. \"Go ahead, touch him.\" Allison guided Bethany's hand to Keith's cock and balls. \"It's okay. I think he's okay with this.\"\n\nBethany glanced up at the cute man wearing a disbelieving smile. He gave her a reassuring nod. She smiled back and touching his fat prick instantly doubled the number of cocks she had ever touched in real life. Bethany had no way of gauging Keith's endowment beyond what she had seen in movies on the internet and that didn't feel like a fair comparison. Compared to Thom, Keith's manhood was fatter and longer. Was Keith really big? Average as he claimed? It would be another month before she had enough experience to form an opinion.\n\n\"Told you he was big,\" Allison said as if she had read Bethany's thoughts. \"Try licking it once and see if you can make him harder.\" Allison pushed on the back of her friend's head. She didn't need to push hard. Bethany laid her tongue flatly against the base of Keith's prick and licked upwards. \"Well?\"\n\n\"Nice,\" Bethany reported though she wasn't sure what Allison expected. It was a single lick, what should her reaction be? \n\n\"Try sucking him,\" the brown haired girl with blue eyes urged.\n\n\"How?\" Bethany asked, unsure what to do next.\n\n\"Just put it in your mouth and move your head up and down,\" she explained.\n\nBethany had no idea what she was doing but didn't think it was brain surgery, either. She pulled Keith's prick upwards, opened her mouth and stuck his cock inside. She noticed his cock felt harder than when she had first touched him. She had to pull it away from his stomach to get at a better angle. She bobbed her head up and down a couple of times, studying the feel of him against her tongue. Though the bottom side of his cock was full of veins she could see, it felt flat against her tongue. She noticed how the ridge of his cock head tugged gently at the corners of her mouth. When she inhaled, she could smell him. He smelled like a man and she liked it. \n\n\"You're officially a cocksucker,\" Allison whispered in Bethany's ear after brushing away a handful of fiery red locks. \n\nAllison's coarse language sent a stunned shiver through Bethany that ended between her legs with a demanding tingle of excitement. Oh fuck, she's right! Bethany thought. There had been few times in her young life when something magical had happened. Receiving her college acceptance letter had been one of those moments. She could remember the out-of-body thrill she had felt reading that acceptance letter and how she had repeated in her mind I'm now a college student! a dozen times until she believed it. That happened again, though her thoughts were more explicit. I'm a cocksucker! I'm really doing it! This is really happening! I'm sucking cock!\n\n\"Don't be a dick hog,\" Allison said, pulling Keith's hard-on away from Bethany and putting him inside her mouth. Bethany watched her friend going at him. Allison was more aggressive. It looked like something out of a porn movie the way Allison wrapped her hand around his prick, tugging and pulling while she bobbed her head up and down. \"Your turn,\" she said, holding Keith's cock out for Bethany's mouth and she didn't let go even after Bethany began sucking.\n\n\"Oh fuck,\" Keith moaned as he watched the two pretty girls taking turns. \"That's so hot.\"\n\n\"Is she doing good?\" Allison asked.\n\n\"Oh hell yes!\"\n\n\"So, she's a good cocksucker?\"\n\n\"The best!\"\n\n\"Better than me?\" \n\n\"Not better,\" he quickly corrected. \"But she's good, too.\"\n\n\"Beginner's luck,\" Allison teased and once more took his cock away from Bethany for her turn. \n\n\"Am I really doing it okay?\" Bethany asked. Keith gave her an eager nod and she could see the joyful look in his eyes, the \"lottery winning\" look Allison had described. She had been right about that.\n\n\"So close,\" Keith sighed.\n\n\"Do it in Bethany's mouth,\" Allison insisted, pushing his swollen cock back towards her friend. \n\n\"In her mouth?\" Keith asked. He sounded surprised. Bethany didn't see the emphatic way Allison nodded her head.\n\n\"Don't you dare stop when he cums,\" Allison told her, her hand again finding the back of Bethany's head. \"This is the best part.\"\n\nBethany groaned around her mouthful of cock. Keith was bigger, fatter and longer than before. His cock felt really hard, like Thom's only bigger. She could feel Keith's prick twitching, was he doing that? She didn't know what to expect when he came though she had seen it happen enough times in videos. How hard would it shoot out? Would she choke on it? What did it taste like? \n\nThe first ropey strand of Keith's orgasm unexpectedly struck the top of her mouth and surprised her. It didn't drown or gag her, only surprised her. She felt his cock contracting as it happened, though later she would think of it as throbbing. It happened again and again. She felt the warm, thick fluid landing on her tongue and kept sucking without swallowing. She wasn't sure how to swallow with something inside her mouth. She never counted how many pumps he gave her. She thought it was four or five, maybe more. All she really knew was how she wished he would keep going. She pulled away and swallowed.\n\n\"Hey, I wanted some of that, too!\" Allison complained. Bethany didn't realize she had done anything wrong and before she apologize, Allison shoved her mouth against Bethany's lips, she pushed her tongue inside and began a deep French kiss Bethany never expected.\n\n\"Now THAT'S hot!\" Keith said. Bethany looked pass Allison's head at him and saw Allison was flipping him off. That made her laugh and it broke up their kiss. \"You guys could have done that sooner,\" Keith said with an appreciative smile.\n\n\"We're not gay,\" Allison said. \"We're cumsluts.\" She pulled on Keith's prick, coaxed another droplet of creamy white semen from his tip and lapped it up without sharing. \n\n\"I didn't know I was supposed to share,\" Bethany apologized.\n\n\"That's okay. We'll work on that next time,\" Allison said and gave Bethany a quick kiss. \"You are a good kisser, though.\"\n\n\"You know, if you guys want to kiss again, I bet do it again, too,\" Keith offered. \n\n\"One blowjob to a customer,\" Allison said, handing him his pants. \"Now get dressed and remember our deal, tell no one.\"\n\n\"Yeah, okay,\" he said, looking amazed and confused. \"Maybe we can do this again sometime?\"\n\n\"Maybe,\" Allison allowed and pulled away. She sat across the room on Bethany's bed. Unsure what she was supposed to do, Bethany sat next to her while she watched the cute guy get dressed. If kissing Allison got her a second try at sucking dick, Bethany was willing to do it but she didn't know how to say it and didn't think that option was on the table. \n\nThe trio was quiet as Keith finished dressing. He stood, smiled and admitted, \"I'm not sure what to say, so I guess just 'thank you?'\"\n\n\"Good enough,\" Allison said with a smile and a nod at the door. He gave them an awkward wave and left. \"Well?\" Allison gushed as soon as he was gone. \n\n\"That was the hottest, sexiest and craziest moment in my entire life!\" Bethany squealed. \"I'm so fucking horny right now I can't stand it!\"\n\n\"I know, right? Me too!\" Allison stood and picked up her coffee cup. \"My roommate better be asleep when I get back to my room!\" She winked at Bethany. \"See you tomorrow?\"\n\n\"Guess so,\" Bethany said, her head spinning and she wondered if this was how it felt to be drunk. She sat on her bed and watched Allison leave her room before she was struck with a case of giggles. She couldn't stop giggling and laughing as she replayed everything that had just happened. \"Cocksucker,\" she said out loud and laughed. \"I'm a cocksucker!\" she repeated before standing up and moving in front of the mirror over the sink. She looked at her reflection for a sign of change. She didn't see one on the outside but she knew the change on the inside. \"You're a cocksucker,\" she told her reflection and laughed again.\n\nAlone in her room meant she had no reason to stay dressed or hesitate before taking care of herself. That was always the way she liked to think about it, \"taking care of herself.\" She though the word masturbation sounded too clinical and playing with herself sounded funny to her. She stripped naked, because she could, laid on top of her covers and began rubbing her pussy. \"Cocksucker,\" she told herself as she zeroed in on her clit in a tight, tiny circle that always felt best. She came within moments of beginning and knew that wasn't going to be enough. She darted across the room to her underwear drawer, pulled out all three of her toys and went back to her bed. Her favorite toy was a jelly dildo shaped like a prick. She sucked on it and tried pretending it was Keith. It was a poor substitution but it was better than nothing. She gave herself two more orgasms before deciding she was calmed down enough for sleep.\n\n* * * * *\n\n\"How's it going, cumslut?\" Allison asked the next morning when they met after breakfast.\n\n\"Good cumslut. How about you?\" Bethany giggled. They were co-conspirators walking across the quadrangle with their heads close as the whispered, laughed and giggled about last night. Allison confessed playing with herself in the bathroom because her roommate was still awake. \"You could have done it in my room.\"\n\nHer suggestion took on a different meaning when Allison asked, \"With you?\" \n\n\"It's not as if we have to watch other,\" Bethany blushed. Allison laughed at her and they dropped the topic as they walked into their first classroom of the day. They always met for lunch after the last class of the morning hours, the class Allison shared with Keith. \"Was it awkward seeing him?\"\n\n\"Not at all. He mentioned it. Said 'thanks' and said he was up for a repeat. But he was cool.\" Allison shrugged as if it wasn't a big deal. Bethany desperately wanted to ask if there would be a repeat but didn't want to appear overly eager. As they neared the cafeteria, she couldn't stand it anymore.\n\n\"Are we going to do it again?\"\n\nAllison's answer sent a wave of panic through Bethany. \"Sure, but this time you have to pick the guy.\"\n\n\"I could never . . .\" Bethany began before noticing the disapproving scowl on her friend's face. \"I'm serious! I'm a good girl!\"\n\n\"No, you're a bad girl in waiting, remember?\" Allison smiled and gave her a playful nudge. \"Did you have fun last night?\" Bethany nodded. \"Do you want to do it again?\" Another nod. \"Then pick someone.\"\n\n\"But who?\"\n\n\"Whoever,\" Allison insisted making it sound as easy as picking out a pair of shoes, which was something Bethany had never done easily either. \"How about him?\" She nodded at a cute guy with dark brown hair sitting alone at a table. He was skinny and looked nerdy. Bethany liked skinny, nerdy looking guys and Allison knew it. \"Come on, it's will make his entire college career.\"\n\n\"I don't know . . .\" Bethany began and gave up on finishing her thought as Allison sat down next to the surprised looking man. Bethany sat across from them. He gave them a shy, uncertain smile.\n\n\"It's okay, we don't bite,\" Allison told him. \"Suck, maybe. But bite? No.\" He gave them an uncertain smile as introductions were made. Allison kicked Bethany beneath the table to say something.\n\n\"Do you have a girlfriend, Andy?\" Bethany blurted out. \n\n\"Back home,\" he said. \"Not sure if we're still boyfriend/girlfriend, though.\" \n\n\"Are you faithful to her?\" Allison quizzed.\n\n\"So far,\" Andy said, still looking bewildered. \n\n\"Faithful because you want to be faithful or faithful because you haven't met anyone yet?\" Allison asked.\n\n\"A little of both?\" he offered with a weak attempt at a playful smile. \n\nAllison kicked Bethany again. The girl with the curly red hair wasn't sure why. Go for it! Allison mouthed with a daring glare in eyes. Bethany froze while Allison rolled her eyes and took the lead. \"So let me ask you a question,\" she began. \"What if I said my friend and I wanted to practice our blowjobs and we needed a volunteer to help us?\"\n\nAndy grinned, shook his head and looked from one girl to the other. \"If you were serious, I'd ask where to sign up. You know, if you were serious.\"\n\n\"You can't tell,\" Bethany blurted out, determined to climb on top of her fears. \"I mean, if we do this, you can't ever tell anyone about it.\"\n\n\"Who would believe me?\" Andy smirked. He had a nice smile. \n\n\"Do you have a class?\" Allison asked, answer Bethany's question about timing. They were going to do it right away?\n\n\"I'll skip it if you're serious.\"\n\n\"Oh, we're very serious,\" the pretty girl with blue eyes and straight brown hair insisted. Bethany couldn't see how she was stroking Andy's leg but guessed at it by the way her arm moved. \n\nThe two girls tossed away half-eaten lunches as they led Andy to the dorm. He looked suspicious but the prize waiting was the risk. Once in the elevator, he asked, \"Are we really doing this?\"\n\n\"Crazy, isn't it?\" Bethany said, pushing herself to keep the lead. She gave him a smile she hoped looked reassuring. The doors opened and they walked halfway down the hall to her empty room. She was swifter with her keycard and didn't fumble it. Andy looked wide-eyed and nervous. Bethany didn't feel nervous but she wasn't sure how to proceed. \n\nAllison stepped to their new friend, began rubbing the front of his pants and explained the rules again. \"You don't get to touch us and you can't tell anyone, okay?\" He gave a wide-eye nod of his head. It seemed impossible for his eyes to get any wider until Allison began working the front of his jeans. Somehow, his eyes did grow a fraction bigger. She pulled down his pants, pushed him backward and pulled Bethany in front of him.\n\nAndy was already hard. His cock was long and thin. Compared to Keith's prick, Andy's was significantly thinner. Was his cock shorter? Bethany wasn't sure. In some ways, his thinner dick made him look longer than Keith. \"It's okay for you to cum in my mouth,\" she said as she dropped her knees. She wrapped her hand around his cock, noticing how her fingers could touch her thumb. That wasn't true last night. With Keith, her fingers didn't quite reach her thumb because his cock had been fatter. Andy's cockhead was more pronounced, giving his cock more of mushroom like appearance. Bethany wrapped her lips around his manhood and began bobbing her head up and down. Her mouth registered the difference in girth while her brain raced with what that meant. She noticed the difference in Andy's size because she was sucking his dick. Because she was sucking him nearly twelve hours after sucking Keith. \n\nHer mouth had never known Thom's prick and her former boyfriend dropped off her list of cocks she had known. Thom may have been the first (and so far, only) cock to enter her pussy, but what did it matter? Sex had felt good, even though the experience hadn't last very long. Bethany knew she liked the feel of something sliding in and out of her pussy. She had been doing it herself for months before she ever had sex with Thom. Sucking felt more intimate. Having a man's hard cock inside her mouth felt like an intimate kiss. She could taste his flesh. She could smell his manly musk and she liked that. She had always noticed a sexy aroma that came with nudity and she liked nuzzling against what she believed was the source of that aroma. She could pull back her head and really look at his manhood, though when she pulled away, Allison took that as her turn.\n\nBethany rocked back on her heels and spent more time noticing Andy than Allison. She admired the wet, slickness coating his staff from their mouths. She noticed how Allison grabbed at his balls and realized she had forgotten to do that. She had touched Thom's balls. Touching his cock was all Thom had allowed and never for very long. Touching had caused needful moans that worried Thom while Bethany had welcomed them as a sign she was doing something that felt good. Andy moaned, too. Bethany studied his face; the eager, disbelieving look in his eyes. How he looked desperate and needful. His intense focus on watching the pretty girl with straight brown hair. \n\n\"Can I cum in her mouth?\" Andy asked. Bethany nodded but Allison felt differently. She pulled away and held his cock out for her friend's mouth.\n\n\"No, do it in her mouth. She loves the taste of cum.\"\n\nAndy's cock felt wet, slippery and hot from Allison's mouth. Bethany heard her friend's words. Was that true? Did she love the taste of cum? She had enjoyed feeling Keith coming in her mouth, but it had happened too fast for noticing the taste. She gave an affirmative moan and kept sucking. She felt Andy's cock twitching, throbbing with his need. She remembered wanting to grab his balls and as soon as her hand softly closed around his furry sac he groaned loudly and she was rewarded with the pumping pulse of his orgasm splashing against the roof of her mouth a couple times before easing into softer pulses that coated her tongue. This time, she was careful not to swallow. After she guessed his orgasm was done, she turned to Allison and pressed their mouths together. Why not? Sharing his cock meant they had already swapped spit so it didn't feel gay if they kissed, too.\n\nAllison immediately pushed her tongue inside Bethany's mouth. Their tongues danced as they kissed the way lovers do. Andy's cumshot was shared between them. Bethany had a chance to notice the slightly salty, slightly acid flavor of semen and she liked it. She was tasting the essence of a man and greedily chased after it. She sucked on Allison's tongue, determined to keep as much of his seed as she could for herself. Allison's greedy eagerness matched hers and their kiss began the most soulful and intense kiss Bethany had ever experienced.\n\nThe two friends rocked back on their heels and shared a startled, amazed look. \"Damn, you're a good kisser,\" Allison sighed. \"That's dangerous.\"\n\n\"That was hot,\" Andy said, rubbing his cock. \"Can we do it again?\"\n\n\"One to a customer,\" Allison said.\n\n\"Can you come again?\" Bethany asked, wanting more.\n\n\"I'm still hard,\" their new friend pointed out. \n\n\"It's going to take too long,\" Allison said.\n\n\"I don't care,\" Bethany replied and started sucking him again. There was a drop of cum left behind and she was glad to find it first. She looked up and saw Andy lounging backwards again, content to let her work her magic. Bethany wondered if he could see the smile in her eyes. It didn't matter. She bobbed her head up and down and swirled her tongue around his skinner than Keith's sized prick. \n\n\"Oh yeah,\" Andy groaned, though he didn't feel close to having an orgasm. Bethany remembered his balls and began fondling them.\n\n\"You can suck those, too,\" Allison pointed out, her face close to Bethany as she eagerly watched. \"Let me show you.\"\n\nNot wanting to be a \"dick-hog,\" Bethany pulled away and watched as Allison pressed her mouth against Andy's furry ball sac. She nursed on one ball and then the other before pressing her mouth tightly against the man and managed to put both of balls inside her mouth. She made a \"pop\" sound when she pulled away. She stroked his cock, looked up at him and smiled. \"Feel good?\"\n\n\"Oh fuck yeah,\" he moaned.\n\nAllison pulled away. Bethany took a try at nursing on Andy's balls and noticing the impact of it. She registered again how she was swapping spit with Allison. The thought sent a pleasant tingle through her. She had never considered being with another woman as something she wanted to do. She had seen it in porno movies but it wasn't something she sought out. Girls were allowed to kiss in public. Okay, maybe not a kiss like the one they had shared after Andy's orgasm but few people would think twice about two women greeting each other with a peck on their lips. There was a casualness towards shared nakedness women shared that titillated men without meaning a thing to women. Admitting being excited around Allison didn't feel gay to her. It felt intimate, a bonding moment best describe as sexual without feeling like crossing a line into sex.",
        "Bethany noticed again the intimacy of giving a man a blowjob. Pressing her face against his cock so she could nurse on his balls felt remarkably intimate. She saw his long, wet looking cock dancing and throbbing in front of her eyes, displaying his appreciation in a way only men were allowed. Yes, she decided, she liked this and she could understand how Allison said she liked it better than sex. Did eating pussy feel as intimate? \n\n\"You look sexy doing that,\" Allison said before she leaned closer and wrapped her lips around Andy's cock again. Butt out! was the first reaction that crossed Bethany's mind but it left her as quickly as it had occurred. She pulled back, admiring Allison. She looked sexy, too and Bethany felt a needful ache between her legs. She had spent so much time noticing the man she had mentally dismissed noticing anything more about Allison than technique. Grounded in the moment and more relaxed gave Bethany a chance to admire the sheer sexuality of seeing Allison's full lips wrapped around Andy's skinny dick. She saw Allison's tongue, the same tongue Bethany had felt in her mouth and Bethany pushed closer. She kissed the junction of Allison's mouth and Andy's prick. Allison's eyes went wide, she pulled away, smiled and when Bethany kissed Andy's cock, so did Allison. They played tongue tag around his hard-on and Bethany squirmed from the thrill of it. Allison pulled away and gave Bethany the chance to enjoy Andy.\n\nBethany was glad they were still sucking him. She was glad Andy had an orgasm behind him. She had heard it took a man longer the second or third time than the first time. It gave Bethany the opportunity to explore and absorb the moment. She tried the thing with her hand she had noticed Allison doing, where she had pulled up and down on the guy's cock while bobbing her head. She watched Andy's reaction and saw how much he appreciated.\n\n\"So close,\" he murmured.\n\n\"Let him cum on your face,\" Allison suggested. Bethany glanced at her friend and was surprised seeing Allison clutching at her chest. \"Do it,\" she insisted. \"Wear it.\"\n\n\"Close,\" Andy growled with greater urgency.\n\n\"Cum on her face,\" Allison commanded, taking over for Bethany. Allison jerked off Andy with one hand while holding Bethany's face close. \"Do it,\" she purred. \"She wants it. Do it!\"\n\n\"Yes!\" Andy groaned. \"Yes!\" His cock erupted with thick, ropey strands of semen. If his first orgasm had dulled his volume, it didn't show. His orgasm flew with the same intensity Bethany imagined she had felt inside her mouth. What was new was feeling his warm, wet semen striking her face. The first glob landed on her nose. The second struck her cheek, just above her mouth. The next shot pasted her lips while the next one was against her chin. \n\nAllison was laughing and cheering at the same time. \"Yeah! Do it! Paste her face!\" After his final spurt Allison cradled Bethany's face and began showering her with kisses. She nuzzled against Bethany and smeared his load across both of them, coating their mouths, nose, cheeks and chin with his gooey cream. They kissed, laughed, licked and kissed again while Andy watched and pulled on his spent prick. \n\nAllison pulled away from the laughing, licking kiss-fest happening and glanced at Andy. \"You can go,\" she said. \n\n\"I'd rather stay and watch.\"\n\n\"Get out,\" Bethany snapped without looking at him. There was a moment happening here that didn't include Andy. Bethany cut Allison's giggle short by kissing her. She was vaguely aware of the man pulling up his pants and standing. Allison broke their kiss.\n\n\"Not a word. Just leave and maybe this will happen again.\"\n\nAndy didn't reply but Bethany heard her door shutting. \n\n(You're reading a story that first appeared on the Literotica website. The author has not given permission for it to appear anywhere else)\n\nKneeling and kissing suddenly felt different without Andy in the room. Bethany didn't want to stop kissing Allison but what was stopping her from doing more? What if she touched Allison's tits? She wrestled with controlling her hands, mentally insisting they behave. The temptation of their kiss made the battle frustrating. She finally pulled away. \"We should stop,\" she gasped.\n\n\"I know,\" Allison said, though she stole another kiss from Bethany's lips. When she pulled away, her eyes raked across Bethany's body with a hungry looking stare. \"I'm so fucking horny.\"\n\n\"I need to do myself,\" Bethany admitted, hoping Allison wanted to do it, too.\n\n\"I better go back to my room.\"\n\n\"You . . .,\" Bethany started, thought better of it and then decided she didn't care. \"Stay.\"\n\n\"And do it with you?\" Allison asked, biting her bottom lip. Bethany nodded and it took her a moment to realize her gaze was locked on Allison's chest. Why hadn't she ever noticed how full and firm Allison's breasts looked? She reluctantly pulled her eyes upwards. \"I'm going to go,\" she said without moving.\n\n\"Yeah, good idea,\" Bethany said and pulled her t-shirt over her head. \"Because I'm going to get naked now.\"\n\n\"And touch yourself?\"\n\n\"Repeatedly,\" she said, undoing her bra. She saw how Allison's eye fell to her bare chest. \n\n\"You have great tits.\"\n\nBethany felt herself blushing.\n\n\"I like how your freckles stop,\" Allison said, tracing a line across Bethany's chest that followed the line of her bikini top. \n\nAllison's hand froze above Bethany's breast, lingering over it long enough for Bethany to notice the heat of her palm. Please touch me, Bethany thought with all her might. Instead, Allison pulled her hand away.\n\n\"Can I watch you do it?\"\n\n\"You have to do it, too.\"\n\n\"I'm going to,\" Allison told Bethany's bare chest. She redirected her blue eyes to Bethany's. \"In my room. I'm going to do it in my room. My roommate won't be there. She has a class.\" Allison rocked backwards, squatted and stood. \"You're dangerous,\" she said.\n\n\"You, too,\" Bethany said, performing the same little move so she was standing, too. She pulled Allison into her arms, pressed her bare chest against the other woman and kissed her. It was a long kiss and it had nothing to do with sharing a cum shot.\n\n\"Cumslut,\" Allison teased, breaking the kiss with another glance at Bethany's chest.\n\n\"Ditto,\" Bethany giggled and allowed her friend to leave. As soon as Allison was gone, Bethany finished stripping, fell on her bed and desperately rubbed out an orgasm she needed too much. She refused to acknowledge how her mind was filled with memories of sandwiching Andy's cock between their mouths. With one orgasm down, she did it again, rubbing and caressing her pussy as she reminded herself that Allison was probably doing the same thing. Was she thinking about me? she wondered? She came again and knew she still wasn't satisfied.\n\n* * * * *\n\nBethany didn't see Allison again until the next morning's walk to their first class. That wasn't unusual and maybe for the best. Bethany couldn't let yesterday go without comment. \"That was fun,\" she offered\n\n\"I came so many times!\" Allison gushed, sounding happy to have the topic broached. \n\n\"Me too,\" Bethany admitted, felt herself blushed, hating her red headed curse of fair skin easily blushed. She meant more than what had happened with Andy. Did it show?\n\n\"You should do the next guy on your own,\" her friend suggested.\n\n\"Why?\"\n\n\"Just because,\" Allison said. \"Do one on your own and then we can do another together.\"\n\n\"Do I have to?\" she asked and Allison's emphatic nod settled the issue. \"Fine,\" Bethany sighed as they walked into class. She kept thinking about it. Was she ready to take a guy back to her room for just a blowjob and nothing more? What if she wanted to fuck him, too? Was that allowed? She decided it wasn't without asking before thinking again how she would feel better if Allison was there, too. But why? Did Allison make her feel safer or was it because she wanted to see Allison doing it, too? Deep in her mind, she felt a truth trying to bubble to the surface she wasn't ready to admit. She foiled that thought by looking around the classroom. Was there a guy in her first class of the day that would be fun to suck? She leaned over and whispered a question to Allison, \"Can I do Keith again?\" Allison shook her head. Bethany gave a frustrated sigh and rolled her eyes.\n\nThey saw Andy in the cafeteria and purposely avoided sitting with him. He gave them a polite smile and nod. \"Don't even think about it,\" Allison cautioned.\n\n\"I wasn't,\" Bethany said without lying. They sat close to the windows. \"So what are you going to do while I'm sucking dick?\"\n\n\"I don't know. When are you planning on doing it?\"\n\n\"Today. After lunch.\"\n\nAllison initially looked surprised before she smirked. \"Have you picked out your next victim?\"\n\n\"According to you, that's the easy part.\"\n\nThey finished their lunch while Allison pointed out guys who could be fun. Bethany dismissed them because she didn't know any of them. They talked through the merits of doing a stranger, like they had with Andy. Allison thought it was a good idea, but Bethany had a plan. Sitting at the table behind Allison was Gary Davidson, a classmate Allison didn't know. He gave Bethany a smile and nod before sitting with another classmate. Allison looked ready to leave. Bethany caught Gary's eye and waved him over. \n\n\"I have a question for you,\" Bethany said as she waved him closer. Gary gave smiled and moved closer. \"A private question,\" Bethany said, shooting Allison a smirk. Gary moved even closer. Bethany pulled him close and whispered in his ear. \"Up for a blowjob?\" Gary pulled away and she saw the shocked, surprised look on his face. She pulled him close again. \"I'm serious. Right now. You and me. One blowjob, nothing more.\"\n\n\"Here?\" he asked, looking around the cafeteria as if he was considering the idea. Allison laughed. Bethany waved him close again.\n\n\"Not here. My room, but it has to be right now.\"\n\n\"Wha-, I mean, okay, but . . . you know . . . are you serious?\"\n\n\"It's like a dare,\" Bethany lied, deciding it was enough of an explanation for him. \n\nGary glanced at Allison. \"Really?\"\n\n\"Does it matter?\" Bethany replied. He stared at her for a long moment before smiling. Bethany's smile matched his. She stood and looked at Allison. \"Excuse us. I'm going to take him back to my room and suck his dick, okay?\"\n\n\"Have fun!\" Allison sang and she looked proud of Bethany.\n\nAs they left the cafeteria, Gary was filled with questions. \"Are we really going to do this?\" Bethany nodded. \"Because you were dared?\" She shrugged, that was close enough. \"And that's all we're going to do?\"\n\n\"That's it,\" she said. \"One blowjob, not touching and no telling. We go into my room, I suck you off and then you leave. Deal?\"\n\n\"Hell yeah,\" he said with a huge grin. She left most of the next round of questions unanswered. He asked if it this was something she did a lot, what other kind of dares there had been and more.\n\n\"Does it matter?\" she asked as she swiped open her door and led him inside her room.\n\n\"What now?\" Gary asked.\n\nShe nodded at the extra bunk. \"Pull off your pants and get hard. I'm going to blow you and then you leave.\"\n\nHe gave her an eager nod and scrambled out his pants. He stuck his hand inside his boxer shorts and pulled on his prick. \"Can I cum in your mouth?\" he asked.\n\n\"In my mouth or on my face, your choice,\" she said, surprised she would suggest a facial. \n\n\"Oh wow,\" he groaned he a happy smiled. Gary pulled off his boxer shorts and revealed a cock thicker than Andy's but not as long. Bethany didn't realize it yet but Gary's cock was average. Her hand fit around comfortably around his shaft with her tiny fingers almost touching her thumb. His length was bigger than her hand and she appreciated how much remained after wrapping her hand around him. He tossed his jeans on the bed she had indicated and remained standing. Bethany sat on the bed, finding the change in positions a good idea. Why hadn't she and Allison thought of this? \n\nGary stood in front of her. His hard cock throbbed up and down as if beckoning her mouth. Bethany admired his full looking balls. Gary's balls looked bigger than Andy's had. That's where she started. She sucked one inside her mouth and discovered she couldn't do both but had fun trying. She liked the way his hard cock pressed against her nose and forehead when she nuzzled against him. She inhaled his manly scent before opening her mouth and beginning her blowjob.\n\n\"Oh yeah,\" he moaned. \"That's good.\"\n\nIt felt different doing it alone. She could be greedy and relish in the opportunity. She experimented with different ways to move her head and tongue. She swirled around his cockhead and explored its ridge. She tongued the slit on his tip. She licked up and down his shaft and looked up at him to see the reaction. He touched her hair, losing his fingers into the constant tangle of her curls. \n\n\"Oops, sorry,\" he said, pulling away his hand as he remembered the \"no touching\" rule. Bethany considered telling him it was okay and decided against it. This wasn't about her, it was about him. Gary groaned. \"That feels really good.\" She kept doing that and used her free hand to cradle his balls. \"Oh yeah, so good,\" he purred. She kept going and found a comfortable stride. She felt her nipples aching for attention she couldn't give them. She squirmed and fought against touching herself while she sucked him. That would feel so good. When she squirmed again, he noticed. \"You like that, don't you?\" he asked, his voice throaty, low and filled with passion. \"You like sucking that big dick?\" \n\nIt's not that big, she thought but went with the flow.\n\n\"I want to cum on your face,\" he announced as his cock began throbbing more often. \"Do you want that?\"\n\n\"Uh-hmm,\" she moaned around her mouthful of cock.\n\n\"Yeah you do,\" he agreed. \"I'm close,\" he announced and surprised her by pulling away. She kept rubbing his balls. His balls still felt big, but tight, too, as if his ball sac had shrunk. Was that normal? She didn't know or care. Gary had taken over for her mouth. He was pulling on his pleasant sized cock and it took her a moment to realize he was jerking off. \"Yeah,\" he groaned. \"On your face.\" And then it happened. He shot his load at her. The first strand of warm semen struck her forehead, the next her nose and his jerking hand made his cum fly across her face. His face wore a gleeful, lusty look. He came hard and seemed to come with a lot of cum, too. She felt his warm semen dripping and oozing across her and as strange as it felt, it felt good, too. He shook off one final drop. \"Oh wow, that was hot.\"\n\n\"Thanks,\" she said, smiling up at her.\n\n\"You sexy like that.\" He reached past her and picked up his jeans. He stepped into them while she watched. \"Well, thank you,\" he said as he tucked himself back together. \"You're the sexiest thing that has ever happened to me.\"\n\n\"Ditto,\" Bethany allowed and wanted to run to her mirror to see how she looked. She felt his cum running and dripping to her neck. The moment he was gone she darted to the mirror and admired her reflection. She looked pasted in creamy cum and giggled. She grabbed her cell phone, snapped a picture and sent it to Allison before scooping up a long strand and putting it in her mouth. She did it again before thinking to snap another picture for Allison. Snap, send. Snap, send. She was working on sending her fourth picture when her phone buzzed. She opened the message and felt an excited surge as she looked at it. Allison stood in front of her mirror, pants around her knees and her hand cupping her pussy. \n\nBethany felt possessed with lust. She flicked the icon on her phone's camera, moving it to the movie setting while keeping it aimed at her reflection. It was easy to see what she was recording. \"Can you see how much he shot on me?\" she narrated. She scooped up another line and popped her finger into her mouth. \"So good. Don't you wish you were kissing this off me?\" She sent the movie to her friend before putting down her phone. She needed both hands so she could get naked. She was careful how she pulled off her t-shirt so she didn't disturb the lines on her face. She worked off her bra, jeans and panties, too. Her phone buzzed with a return message. \n\n\"This is me right now,\" Allison said in a movie reply. Her camera was aimed at her pussy as her fingers furiously rubbed her muffin. \"I'm so wet! Can you hear that?\" And that's Bethany realized she could hear the wet, smacking sound of Allison's excitement. \n\nBethany felt crazed with her need. She didn't know for sure but took a chance. She opened a Skype invitation to Allison. Her friend immediately accepted it. \"I'm so wet,\" Bethany said, holding the camera between her legs and dipping two fingers inside her pussy. Her fingers came back wet. \"Can you see that?\"\n\n\"I want that,\" Allison moaned before a wide-eyed gasp crossed her face. \"I mean, I want to see that, you know?\"\n\n\"Come to my room.\"\n\n\"No.\"\n\n\"I'm naked,\" Bethany teased, allowing the camera to show all of her.\n\n\"Use your toy for me.\"\n\n\"Come watch me use it,\" Bethany said, surprised at her insistence and when the Skype session suddenly ended, she regretted her words. Damn it, she scared Allison away. Fuck!\n\nSome of Bethany's thrill left her but not enough to change her course of action. She still needed an orgasm, at least one. She put down her phone, pulled out the first toy her hand found, a vibrating one and collapsed on her bed. She twisted on the toy and shoved it inside her needful pussy. Yes, that's what she needed. She clutched at one of her rosy red, hard nipples and pulled on it. Yes! She needed that, too. Her body clenched from the sudden mix of intimate attention and her orgasm washed over her in deep, soulful waves that felt so good. In the midst of that orgasm, she heard the tiny knock on her door. Who the hell could that be? Feeling cheated out of enjoying the finish of her orgasm, she stood and moved to the peephole and saw Allison standing in the hallway. She pulled her friend inside. \"You came!\"\n\n\"Twice,\" Allison said with a big smile though the look in her eyes was very different. Her eyes were on Bethany's nudity. \"Did you?\"\n\n\"Once,\" Bethany admitted.\n\n\"You still have some on your face,\" Allison said and kissed her cheek. Bethany turned into the kiss and their lips met. They kissed for a long moment before Allison stumbled backwards. She looked stunned and confused. Her hand moved to Bethany's chest, cupping one of her breasts. \"I want this,\" she said, looking embarrassed and unsure of herself. It was an expression Bethany knew well from the number of times she had worn it lately. \n\n\"I won't tell,\" she said.\n\n\"I'm not gay.\"\n\n\"Me either,\" she smiled and pulled Allison into another kiss. Allison's hand stayed on Bethany's chest as they kissed, her fingers finding Bethany's stiff nipple and tweaking it so gently. Once more, Allison broke their kiss and without room to step backwards, she pushed Bethany away.\n\n\"I want to watch you use your toy,\" she flatly stated as if she was drawing a hard line between them.\n\n\"Get naked and I will.\"\n\n\"Why do I have to get naked?\"\n\n\"Because I'm not doing it alone,\" Bethany said as she opened her underwear drawer and pulled out the jelly dildo she liked so much. \n\n\"Good thing I brought this.\" Allison gave a lighthearted giggle and fished a petite vibrator from her pocket. \"But if we're going to do this, you have to promise to stay on your bed.\"\n\n\"Okay,\" Bethany said and fought the urge to give her friend another kiss. Instead, she went back to her bed where her old school vibrator sat, used and ready for more. She waited while Allison got naked, playing the jelly dildo over her nipples just for the fun of it. She had never seen Allison naked or thought much about it. But as Allison shrugged out of her bra, Bethany couldn't stop staring at her friend's firm, perky looking breasts and wondering how those hard nipples might feel between her lips. Would it be like sucking on a tiny cock? She didn't know and her curiosity sent a pleasant shiver through her. Allison wiggled out of her jeans. She wasn't wearing underwear. Bethany absentmindedly wondered if that was just because or if that was something she usually did without. ",
        "Allison's long and lean body looked delicious and Bethany couldn't stop staring. With the way Allison stared back, she didn't feel self-conscious about it. \"Ready?\" Allison asked. Bethany nodded and slipped her jelly dildo down her body until it was between her legs. As Allison watched, Bethany pushed the toy inside and sighed. That felt good, really good. Across from her, she watched Allison twisting on her toy and pressing against her clit. Facing each other, they moved their toys in the ways that felt best for their bodies and watched each other orgasm. \n\n\"This is as sexy as watching you suck cock,\" Bethany moaned.\n\n\"You look so sexy suck dick,\" Allison replied and they kept on touching themselves. \n\n\"I like sucking cock with you,\" Bethany said. \"I mean, when we're both doing it. I like when our tongues touch.\"\n\n\"Me too,\" Allison gasped as a second orgasm raced through her body. \"I like kissing you.\" Bethany came before Allison corrected her meaning. \"I like kissing when you have a mouthful of cum.\"\n\n\"I like kiss you,\" Bethany said without the qualification. \n\nAllison smiled as she pulled her toy away from her pussy. \"Are we turning gay?\"\n\n\"I don't think lesbians suck dick,\" Bethany giggled.\n\n\"I want to suck one right now.\"\n\n\"Call up Keith or someone.\"\n\n\"Is it okay if I do it alone?\"\n\nBethany felt a stab of disappointment. \"Yeah, but why?\"\n\n\"I just want to do one on my own.\"\n\n\"Can I watch?\"\n\n\"Then I wouldn't be on my own,\" Allison laughed.\n\n\"Yeah, I guess not. Will you tell me when you're doing it so I can do myself at the same time?\"\n\n\"While you think about me sucking dick?\" \n\nBethany nodded. That's precisely what she meant.\n\n\"Tomorrow, we can do another guy together, okay?\"\n\n\"Tomorrow is Saturday,\" Bethany pointed out. Allison raised her eyebrows as if asking why that mattered. \"I'm just saying, maybe we can do more than one guy tomorrow.\"\n\n\"At the same time?\"\n\nBethany thought about it for a moment. That was a great suggestion but it wasn't what she meant. \"Maybe, but I was thinking we do it more than once.\"\n\n\"You mean, we find a guy, do him and then find another guy to do, too?\"\n\n\"Why not?\" Bethany asked. \"Might be easier than finding two guys who will let us do it at the same time.\"\n\n\"How about if we find one guy, do him and then promise no orgasms until we find a second guy?\" Allison asked. Bethany recalled what her friend had said about her days working retail. How she would suck off a guy at work and then wait until she got home to take care of herself. \n\n\"I don't know if I can do that,\" Bethany said, unsure if she could stand being excited for that long. \n\n\"What if after the second guy, we promise we'll do it in front of each other?\"\n\n\"Deal!\"\n\n* * * * *\n\nFriday night, they hung out again with Tina Greggs and Wendy Wilson. The four of them watched a chick flick together in Tina and Wendy's room. They ate too much popcorn, laughed too much and not a word was said between Bethany and Allison about how they had spent the week. More importantly, it felt good spending a normal evening with Allison. The last few days had been crazy. Saturday's plan was crazy, too. Acting \"normal\" didn't feel like an act, it felt good.\n\nIt was ten-thirty in the morning before Bethany and Allison began texting each other. With an early class schedule all week, they were both early risers on the weekends. Feel like repeating with anyone? Bethany asked after Allison brought up the topic. Allison said she wanted to find two new guys. Bethany wasn't sure how she felt about that. How many guys would there be before she became a slut? She said as much to Allison and received LOL, you ARE a slut. A cumslut! as a reply. She actually laughed out loud as she read that reply and wrote back, Thanks to you. A moment later, she added, And I really do mean THANKS!\n\nThey met in the cafeteria for an early lunch and Bethany laughed when she saw they were both wearing skintight, black yoga pants. \"Looks as if someone forgot a bra,\" she said as she eyed Allison's chest.\n\n\"Think the guys will notice?\" she asked without blushing or looking regretful at all.\n\n\"I did,\" Bethany said, relieved when Allison accepted the comment with an easy smile. Bethany knew they were performing a dance along a dangerously thin tightrope between maintaining their standing as heterosexual women and something else. She felt how easy it would be to fall from that tightrope. She also knew the net below looked comfortable and fun. That was the most dangerous part of the dance. What if they fell from their tightrope and liked it?\n\nThe afternoon was warm enough to remind the world spring would arrive, eventually. \"Feels good, doesn't it?\" Allison said as they stepped into the bright sunlight. They were walking in the general direction of Caf\u00e9 Joe's when Allison pulled up short and nodded across the patch of grass at a bench where a random guy sat reading a textbook. \"Bingo!\" They cut across the grass and sat down on either side of him. \"Hi there,\" Allison said, providing two introductions. The man said his name was Scott.\n\n\"Well, Scott, we have a question,\" Bethany began, eager to get the day started. \"Allison thinks she sucks dick better than me and we need an impartial judge.\"\n\n\"Excuse me?\" Scott asked as he turned his head from right to left and really looked at the girls bookending him. \"You're kidding, right?\"\n\n\"No,\" Allison promised. \"Here's the deal. We're going to go back to my girlfriend's dorm room. She and I will take turns sucking you. That's all we're going to do and you don't get to do anything to us.\"\n\n\"And you can't tell anyone,\" Bethany added, smiling so hard it hurt.\n\n\"I . . . um . . .\" Scott stammered. Bethany put her hand on his crotch and though his mouth kept moving up and down, no sounds came out.\n\n\"Unless you don't want a free blowjob?\"\n\nHe shook his head, stopped and found his voice, \"I mean, yes, I want one. Of course I do. Are you kidding?\"\n\n\"Promise not to tell?\" Allison asked. \n\n\"Promise,\" he swore and they went up to Bethany's room.\n\nScott had the skinny, nerdy look that Bethany preferred. He looked confused, bewildered and eager all at once. Along the way to the room he mumbled things about how pretty they both were and how lucky he felt. It was mostly gibberish, but it was cute hearing him trying to make sentences. Once inside the room, the girls worked as a team rubbing the front of his jeans and undoing them at the same time. \"Oh my,\" Allison said, first to put her hand inside Scott's underwear. \"Feels as if someone really needs this.\"\n\n\"It's been a while,\" he said with a sheepish grin.\n\nAllison worked off his tighty-whitey underwear and exposed his heavy looking cock. \"Oh wow,\" Bethany said as she looked him. Scott's big cock was the largest she had seen in real life. He packed the meat of a porn star behind his unassuming, geeky look. She squeezed it and found he was already hard. She saw his cock twitch and was fascinated how his big, fat dick didn't turn upright towards his belly. Instead, it hung downward as if it was too big and heavy to swing upwards. He was fatter than Keith and longer than Andy. She pushed Scott to the bed and knelt between his legs. \"It's okay to cum in our mouth,\" she said as a final instruction before opening wide and wrapping her lips around his massive girth.\n\nWhatever Scott had gained in sheer size, he had lost in stamina. Bethany was still exploring his length when she felt him throb in a way she recognized. \"Are you close?\" she asked. Scott gave an eager nod. \"Better hurry,\" she told Allison, pulling away. \n\n\"Wow,\" she said and took over for Bethany. She opened her mouth and put his dick between her lips while holding the rest of him with both hands. Bethany saw Allison pull a few times on Scott's big man-meat before hearing their new friend groaning loudly. She glanced up and recognized the look in his surprised eyes. He was coming, already! They had just started and he was already finished!\n\n\"Mphm, mphm,\" Allison grunted as Scott came inside her mouth. Her eyes were wide and she kept pumping her hands until she was convinced he was spent. \"So much,\" she said with slurp when a strand of cum escaped her mouth a threated to drip off her lip. Bethany moved quickly, caught the stray drop and pressed her lips against Allison. Her friend was right. It did feel like more semen that before, though Bethany was reluctant to judge with so few guys behind her. \n\n\"Yeah baby,\" Scott suddenly cried out as if he was trying to do an Austin Powers impersonation and the sudden weird quote was a mood destroyer. Bethany tried staying focused on kissing Allison and thought they were moving past Scott's weird exclamation when he did it again. Bethany felt Allison chuckle during their kiss and that was all it took. They broke apart and Allison stared at the cute guy with the big cock and lack of stamina.\n\n\"Get out,\" she said.\n\n\"What?\" Scott asked, looking hurt\n\n\"You heard me. Out. You got your blowjob, now leave.\"\n\n\"Oh yeah?\" he said, standing and pulling on his jeans with an angry, embarrassed look on his face. \"Well both of you suck.\"\n\n\"Why yes we do,\" Bethany said, unable to hold back her laughter. \"And quite well, too.\"\n\n\"I'm sorry,\" Scott quickly corrected. It was too late.\n\n\"Out!\" Allison demanded while pointing at the door and she waited until he was gone before she broke down laughing. \"Yeah baby!\" she said and they were reduced to tearful howls of laughter.\n\n\"So, I guess he doesn't count?\" Bethany asked once she composed herself.\n\n\"Let's call him a warm-up,\" Allison agreed. They headed back downstairs. They made it as far as the elevator opening to the lobby when a guy stepped onboard. Allison gave Bethany a look and waited until the man pressed a button on panel.\n\n\"Are we getting off?\" he asked.\n\n\"That's a great question,\" Allison said, pressing the third floor button. \"Do you want to get off?\"\n\nHe looked confused.\n\n\"Free blowjobs in her dorm room,\" Bethany said. She was lying about the room's ownership but the guy wouldn't know that.\n\n\"Right.\"\n\n\"She's serious,\" Allison said as the door opened on the floor he picked, the second floor. \"Stay with us.\"\n\nThe door shut again with him still inside. \"Who's doing the sucking?\"\n\n\"We both are,\" Bethany said. The doors opened to her floor, she stepped off and so did Allison and the new guy. \n\n\"Lead the way,\" he said, looking as if he was calling their bluff. It wasn't long before he discovered they weren't bluffing\n\nTheir newest friend best fit the description of a classically good looking guy. He was tall with broad shoulders. He had brown hair and eyes with a scruffy growth of beard leftover from missing a single day of shaving. He had a square jaw and high cheekbones. This was the type of guy Wendy would swoon over if he had money. For all they knew, he did. They never asked. They never asked his name, either. \"I'm . . .\" he began at one point and Allison covered his mouth.\n\n\"No names. No nothing. We're going to suck you off and then you're going to leave as if nothing happened. Deal?\"\n\nBehind her hand, he nodded. If he noticed Bethany had the keycard to the room, he didn't comment. Once inside, they positioned him in front of the blowjob bed. He tried kissing Allison. \"Oh no, you don't get to do anything to us,\" she said, pulling away. \n\n\"Okay,\" he shrugged and once Allison touched the top of his pants, he took care of the rest. He wasn't wearing underwear. \"Who wants to make me hard?\" he asked. \n\nAllison pushed him down on the bed and took the first turn. She pulled his limp prick inside her mouth and began nursing on it while Bethany watched and thought, This is better. She watched her friend moving her head up and down in long, slow strokes. For the first few strokes, the unnamed man's cock stretched with her sucking. After that, his cock had fattened and remained in place. Allison took a long turn before pulling away.\n\nMr. Tall, Dark and Handsome had the least impressive prick of them all. His cock was skinny like Andy's and shortest of the ones Bethany had known, including Thom. His lack of length meant she could fit the guy completely inside her mouth. She knew she wasn't deep throating him because she had once seen that movie and understood what deep throating meant. No, he just wasn't that long. Worse, that meant playing tongue tag around his cock was out of the question. At one point, while Bethany sucked on his balls, Allison sucked on his cock. That was as close as they came to doing it together. At least he lasted longer than Scott had lasted. That gave Bethany a chance to admire Allison's sucking and that was good. \n\nThey took turns sucking him. He moaned a few times and looked as if he was appreciating their efforts. \"No fair holding out on us,\" Allison said at one point. The idea that he would be had never occurred to Bethany. The man nodded and it felt as if he grew a bit firmer. \n\nThough his size was lacking, Bethany found herself able to enjoy him. She experimented with her tongue and felt herself getting excited. She passed him back to Allison and watched her friend. Pulling back a bit for a different view, she admired the curve of Allison's yoga pant-clad ass. Allison did have a great ass. She wasn't sure if an ass could be described as \"perky,\" as one can do with breasts, but it was a good word to use for her friend's butt, too. She ran her hand over Allison's ass. In her mind, she was curious if Allison was wearing underwear. Yoga pants left few options for underwear. Either you didn't wear any or you wore a thong. If you wore regular panties, there panty lines would ruin the look. Allison's ass felt smooth and surprisingly firm. She pulled away, indicating it was Bethany's turn.\n\n\"We're taking a break after him,\" Allison reminded Bethany in soft whisper too low for their guy friend to ever hear. Bethany nodded without stopping what she was doing. \"I mean it,\" Allison said in that same low whisper. \"No matter how excited you get.\" Bethany managed another nod before Allison raised the stakes. While Bethany sucked on their nameless friend, she felt Allison grabbing at her ass. Even more startling? Allison's caress was more intimate. She didn't stop with Bethany's ass. Her hand slipped between Bethany's legs from the backside and cupped her sex. Allison rubbed Bethany's pussy.\n\n\"You're not playing fair,\" Bethany protested with a smile on her face.\n\n\"Make him cum,\" Allison said, still groping Bethany.\n\n\"No, it's your turn,\" she said, pulling away. When Allison hesitated, Bethany pushed on the back of her head. \"Do it, cumslut. Suck that cock.\" \n\n\"Oh yeah,\" tall, dark and handsome said, able to hear that round of conversation. \n\nBethany moved closer to Allison's ear so their conversation would be private. As she spoke, she reached between Allison's legs and rubbed her pussy. She could feel the excited warm through the thin fabric. \"Does that cock feel good?\" she asked. \"Are you getting wet sucking it?\" Allison groaned, shot Bethany a glare and Bethany smiled back. She moved her hand to Allison's braless chest and rubbed her tits. \"Your nipples are so hard,\" she softly purred.\n\n\"Oh yeah,\" their guy friend said with greater urgency. Allison pulled away and insisted they trade places.\n\nWhile Bethany sucked, Allison groped her and spoke to the guy. \"Cum in her mouth, get dressed and get out here, okay?\"\n\n\"For real?\" he asked in a faraway voice, as if he was talking through a trance.\n\n\"Exactly like that or she stops.\"\n\n\"Okay,\" he said. \"Close. Really close.\"\n\n\"Do it. In her mouth. Do it!\"\n\n\"Here it comes!\" he cried out and he wasn't lying. His orgasm began and he rewarded their dual efforts with a nice mouthful of cum inside Bethany's mouth. Like before, she pressed her mouth against Allison's as quick as she could and their intimate kiss began. At first, their kiss was the same as the others they had shared. It attracted the attention of their man friend and he chuckled. He enjoyed the show while he dressed and left. Once the door snickered shut behind, their kiss changed.\n\nAllison was first to react. Because of how they knelt in front of each other, perhaps she could see the man walking away? It didn't matter. Allison's hands were first to move from around Bethany's back. Allison clutched at Bethany's chest with both hands. The moment she did, Bethany's hands moved, too. She reached for her friend, running her hands up her sides and beneath her tight t-shirt until her hands found Allison's bare, firm tits. She hadn't intended on doing it beneath her shirt and was started when she felt stiff nipples pressing against the palms of her hands. She felt Allison's moan. Allison responded by lowering one of her hands. Allison again cupped Bethany's sex. She rubbed the juncture between her friend's legs while groping her chest and maintaining their kiss.\n\nIt couldn't last. They were back on the high wire, slipping, dangling and falling towards the safety net. Would they fall together or . . .?\n\nBethany pulled away, breaking their kiss and staring at her two handfuls of breasts. She ran her thumbs over stiff nipples one last time before pulling Allison's shirt back into place. \"We should stop,\" she said, seeing the questioning look on her face. \"We promised each other. Nothing until after the next guy.\" Allison nodded. Her hand moved to Bethany's thigh, into a safe zone and she smiled.\n\n\"We should probably promise to keep our hands to ourselves, too.\"\n\n\"Yeah, we should,\" Bethany agreed, locking eyes with her friend. Slowly, a smile grew on their faces. \"Should,\" Bethany repeated.\n\n\"Didn't,\" Allison added.\n\n\"But should.\"\n\n\"Yeah,\" Allison said before they started laughing. \n\nThey made a pact to wait two hours. Before going back outside, Bethany reached inside her t-shirt and undid her bra. She pulled it out through her sleeve and tossed it in her hamper. \"I hardly ever do this,\" she said. Growing up in a small town with a strong religious streak it would have been a scandal to walk around with a bra. \"Only bad girls do this.\"\n\n\"Welcome to the club,\" Allison smiled.\n\nThey went back outside with nothing better to do than stop by Caf\u00e9 Joe's. The not-yet-spring time sun felt good on Bethany's face and made her wish she could tan instead of freckle. It felt funny walking around in public without a bra. She felt her breasts sway and bounce with every step. When winter sent a reminder that it still ruled with a stray breeze, Bethany felt her sensitive nipples tighten and her t-shirt raking against her twin points. She glanced at her chest and saw how obvious it was that her nipples were hard. \"How much do you like Keith?\" she asked they strolled.\n\n\"Keith or Keith's dick? Because sucking him is fun.\"\n\n\"You don't want to do more?\"\n\n\"To him?\" Allison asked and Bethany picked up on her meaning. \"I think my life is cluttered enough without adding a boyfriend.\" Inside Joe's they bought iced lattes and sat in the sun on the sidewalk patio. \"I am so fucking horny right now,\" Allison confessed.\n\n\"Me, too,\" Bethany agreed as her eyes tracked the cute butt of another guy walking down the sidewalk. \"Who's our next victim?\"\n\n\"Good question. That last guy wasn't very big.\" That started a funny conversation about the merits and demerits of Tall-Dark-and-Handsome versus Freaky-Geeky-Well-hung Scott. As they laughed Bethany never lost the significance of their conversation. They were talking about men, more precisely: men they had sucked off together. \n\n\"How many guys do you think you've sucked off in your life?\"\n\nThe quickness of her answer and its relatively low count surprised Bethany. \"Eight. It could have been ten, except I never sucked off two of those guys from the summer.\"\n\n\"You only jerked them off?\"\n\nAllison nodded. \"What can I say? I like playing with dicks.\" She sipped her latte, waited until a couple walked passed and went on. \"I don't know. Sometimes I think I'm made wrong or something.\" She got a faraway look in her eyes that last only a moment. \"I was dating this guy in high school my senior year. We did prom and all that. Then, at my graduation party, he broke up with me. Said he didn't think a long distance relationship was a good idea.\" She shrugged. \"Then Rob happened.\" Bethany figured out she meant the first guy of the summer. \"And since I like doing that. . .\" Another shrug followed by a faraway look. \"Here's the weird part. I like to think of it as a community service or something. The guys get to have a bit of fun. I get to have a bit of fun. Who's getting hurt?\"",
        "Bethany didn't ask if she wanted a boyfriend again. As Allison had pointed out earlier, life was complicated enough right now. \"We never got that last guy's name.\"\n\n\"I know,\" Allison smiled. \"Cool, isn't it?\" Bethany nodded and squeezed her legs together. Damn, she felt needful. \n\n\"How much time do we have left?\"\n\n\"Another hour,\" Allison said.\n\nCaf\u00e9 Joe's was attached to a small strip of stores that included a sandwich shop, a convenient store, a used book store and a couple small boutiques. They wandered through the stores to pass the time. Bethany thought waiting would dull the needful ache she felt in the pit of her stomach. Instead, her need grew. \"How did you ever go back to work feeling like this?\" she asked.\n\n\"Cool, isn't it?\"\n\n\"More like torture.\"\n\n\"It was fun watching you yesterday.\"\n\n\"Yeah,\" Bethany said. It was compromise comment. What she really wanted to say was, \"You could have done more than watch.\" \"You're really hot.\"\n\n\"I like seeing that red hair you have,\" Allison said with a purposeful glance towards Bethany's lower parts. \n\nBethany felt a blush coming on and rolled her eyes at herself. Really? After everything they've done together that would embarrass her? \"Tell me it's time.\"\n\n\"It's better than time,\" she said as she drifted towards the front door of the boutique store they were visiting. \"I just saw a guy I knew, too.\"\n\n\"Is he cute?\"\n\n\"Even better, my roommate dated him last semester and said he was hung.\" She darted out the front door. \"Hey Dusty!\"\n\nThe guy in the skullcap stopped and turned. He wore a pretty smile of straight, white teeth and his eyes lit up as he noticed who called his name. \"Allie!\" he cried and moved towards her. They pulled each other into a warm embrace. \n\nBethany held back, unsure of her place. Their embrace threw her. Why would Allison hug her roommate's ex-boyfriend? For that matter, why would Allison want to pick her roommate's ex-boyfriend as their next blowjob buddy?\n\n\"Dustin, this is my girlfriend Bethany. Bethany, Dustin,\" Allison said while grabbing Bethany by the hand and pulling her close. Allison didn't release her hand as she cleared up part of the mystery. \"Can you believe my bitch of a roommate would cheat on this hunky piece of meat?\"\n\n\"Aw, water under the bridge now. What about you? Are you seeing anyone?\" Dustin said. Bethany liked his dark eyes, scruffy shadow of a beard and lean, lanky frame.\n\n\"Everyone and anyone,\" Allison said. She held up Bethany's hand as if it meant something. Bethany smiled and tried not to react. \"Which brings me to a really important question.\" She flashed Bethany a quick smile while Dustin looked on with interest. \"Can we suck your dick?\"\n\nDustin exploded into a deep bellow of laughter that sounded too big for his small frame. \"Are you serious?\" He looked between them. \"Both of you?\" He received two nods. \"At the same time?\"\n\n\"But that's all we're going to do, right?\" Bethany asked, unsure because of the history between Allison and Dustin.\n\nAllison nodded and quickly gave him the same rules the other guys had received. One blowjob, no touching and no telling. At the end she added, \"We just miss doing that.\"\n\nDustin's face wore the same amazed and disbelief expression as ever other guy. He scratched the back of his head, looked back and forth as if measuring their sincerity and finally shrugged. \"What the hell, right? Why not? When do you want to do this?\"\n\n\"Now?\" Allison asked and Dustin's face broke into another big, award winning smile. \n\nDustin and Allison played catch-up as they walked back to the dorm. Dustin was asked about his relationship status. \"Just hanging out,\" he replied. There were the few obligatory questions and comments about majors and classes and life back home before they were in the elevator heading up the Bethany's room. Dustin looked relieved when they walked past Allison's room. \n\nIt was Dustin's idea to put on some music before they got started. Bethany thought it was a good idea and was surprised no one else had made a similar suggestion. He took a moment to find a music stream on her laptop sounded like the soundtrack playing inside Caf\u00e9 Joes. Dustin wore tight fitting jeans slung low beneath his hips and held up with a fat belt that included an even bigger belt buckle. Beneath that big buckle was a pleasant sized lump of manliness. \"You're beautiful,\" he told Bethany and brushed a stray lock of her curls behind her ear. \"It's a shame we can't touch.\" His eyes worked across her body and with how they lingered at her stiff nipples she could guess where he would like to touch. \n\n\"It's just a blowjob,\" Allison reminded him as she cupped the package in the front of his pants. Their eyes met and for a long moment Bethany was sure they were going to kiss. It never happened. \n\n\"You know, that's something your roommate hardly ever did.\"\n\n\"She's a bitch.\"\n\n\"Yeah,\" Dustin agreed and his dark eyes fluttered as a wave of pleasure moved through him. \"Can you feel that? You're making me hard.\"\n\n\"We want you to be hard,\" Allison said. She pulled Bethany closer, nodded and Bethany understood what she should do. She worked the big buckle and unsnapped his pants. \n\n\"I should warn you, it's been a while,\" he mumbled as he watched their hands. \n\n\"How long?\" Bethany asked.\n\n\"A month or two,\" he admitted. She found that answer surprising. How could anyone ignore this cute man for that long? It felt sinful. \n\n\"Since . . .?\" Allison asked without saying her roommate's name.\n\n\"No, not quite that long,\" Dustin chuckled. \"That stung, but please.\"\n\n\"Good answer,\" Bethany said and pulled open his pants. He hadn't bothered with underwear, either. She had to tug and coax his skinny jeans downward. As she did, Allison pulled out his cock and Bethany smiled as she knelt and found herself face to face with Dustin's stiffening prick. The rumor was true. Dustin's cock was as fat as Keith, maybe fatter and longer. Better yet, as his cock grew harder it stood upright, too. Bethany gave his cockhead a kiss before helping out of his shoes and pants. \n\nDustin was pushed backwards on the extra bed and they went to work on him. \"This is so crazy,\" he moaned with an appreciative smile on his face. \"I can't believe this is happening to me.\"\n\n\"Believe it,\" Allison giggled and took a turn bobbing her head up and down his fuck-stick. Bethany couldn't stand it. She pressed close and they did him together. They sandwiched his cock between their open mouths and moved up and down in unison. \n\n\"Incredible,\" he purred with that same happy smile.\n\n\"You have a great cock,\" Bethany told him, caressing his balls while Allison sucked and realizing his balls felt different. \"Are you shaved?\" she asked, surprised and pleased with her discovery.\n\n\"Something an ex-girlfriend liked,\" he said and shrugged. \"I decided I liked it, too.\"\n\nBethany pressed her mouth against his smooth balls. His balls were big and his lack of pubic hair felt good. She noticed the rest of his hair was cropped close, too. It was a sexy look. She kissed her way up his shaft and took another turn sucking him when her friend pulled away. \"Doesn't she look good doing that?\" Allison asked. \n\n\"You both do,\" Dustin diplomatically said.\n\nAllison moved behind Bethany, pressed against her back and wrapped her arms around her redheaded friend. Allison's hands cupped Bethany's breasts, easily finding stiff nipples and rolling them between her fingers and thumbs. \"Suck it,\" she said. Bethany already was but still reacted to Allison's words. \"Sucking that big dick makes your nipples so hard.\" Allison's encouragement made her caress feel more right. It felt as if their tightrope slipped closer to the net. Yes, Allison was groping her chest but that was okay, wasn't it? It felt good. It made Bethany enjoy the big cock in her mouth even more. That wasn't gay, was it?\n\n\"You do it,\" Bethany insisted, moving out from between Allison and Dustin's manhood. Once Allison took over sucking, Bethany repaid the favor. She covered Allison's breasts with her hands and massaged their perky firmness. \"Look at him,\" she told her friend, pressing her mouth close to Allison's ear. She could smell the flowery sweetness of Allison's shampoo and conditioner. Dustin was watching with wide open eyes and a hungry, needful look. He looked amazed and appreciative at the same time and Bethany better understood community service comment Allison had made at Joe's. \n\n\"I'm so close,\" he said.\n\n\"Can you do it twice?\" Bethany asked. \n\n\"It's really been a while,\" he nodded, looking excited at the opportunity.\n\n\"Cum in her mouth,\" Bethany told him, unwilling to let go of Allison's body. She slipped a hand between Allison's legs and rubbed her pussy through her tight yoga pants while keeping her other hand on Allison's chest. It was the gayest thing Bethany had ever done. She felt their tightrope moving closer to the net. The net looked so inviting, too. What if she slipped her hand inside Allison's pants? Would that be the same as taking a step off their tightrope and bouncing up and down on the safety of the net? She heard Allison moan. \"Suck it,\" she said again. \"Make him cum.\" Despite the placement of her hands, she felt safe on their tightrope until she felt Allison's hand sliding over hers, pressing and holding Bethany's hand against her pussy, as if telling her not to stop. Bethany felt the rope drop closer to the net but she didn't stop.\n\n\"OH yeah!\" Dustin groaned in an appreciative bellow that reminded Bethany of his deep, full laughter. \"I'm cumming! So good. . . So go-ood!\" His dark eyes fluttered as his chest heaved. Bethany could see his hips bucking and she felt the smallest tingle of jealousy that her friend's mouth was the one receiving the reward of their hard work. The very next moment she felt Allison shiver and realized her friend was having an orgasm, too! Had she done that? Had Bethany given Allison an orgasm or had Allison made it happen when she cupped her hand over Bethany's? Did it matter?\n\nAllison twisted, turned and grabbed the back of Bethany's head. Their lips met with the ferocity of a force of nature. The immoveable object had broken free and was colliding with the irresistible force. Their tongues met and their bodies melted together. Bethany tasted Dustin's cum on Allison's tongue. She chased after the treat of his salty semen, pulling and sucking on her friend's tongue while never losing track that she was kissing a girl. She felt Allison grabbing at her ass. Bethany's hand was sandwiched between their bodies and groped her friend's chest. They had kissed before. They had touched before. Bethany didn't know why this felt different, except it did. Was it because Allison had had an orgasm? Was it the way she pressed Bethany's face against hers? Was it something in the kiss that felt different? She felt their tightrope dropping closer to the net and clung to the taste of Dustin's orgasm shared between their mouths. This isn't new, she lied to herself. We've done this. It's what we do. We suck and then kiss. No big deal. But the aching need for more she felt between her legs said otherwise.\n\n\"I want that,\" Dustin softly said as he stared at the kissing women. His soft voice was a reminder they weren't alone.\n\n\"Whew!\" Allison said, pulling away from their kiss with stars in her eyes. She smiled at Bethany before asking Dustin, \"Want what?\"\n\n\"Whatever you two have,\" he said with an open-faced look of awe and appreciation. \n\n\"Hard to believe we're not really gay, isn't it?\" Allison said, finally correcting her earlier implication. \n\n\"Right,\" he smirked.\n\n\"Honestly!\" Bethany insisted, quickly pulling her hand off Allison's tit. \"We just like to kiss afterwards.\"\n\n\"And touch,\" Dustin said, still smiling.\n\n\"Maybe a little,\" she blushed. How much of an explanation did she owe him? She didn't know Dustin. He was Allison's friend. \n\n\"It's only gay if you close your eyes when you kiss,\" Dustin said.\n\n\"I thought it was It's only gay if you push back,?\" Allison asked and their jokes lightened the mood between them.\n\n\"Is it gay when I do this?\" Bethany asked, leaning over and kissing his cock.\n\n\"No, that's heavenly,\" he sighed.\n\n\"Can you really do it again?\" Allison asked. He nodded.\n\n\"Like I said, it's been a while and that was really good.\"\n\n\"Do you need to rest?\"\n\n\"Does it look that way?\" he asked, rubbing his still hard cock. Bethany started sucking him again. He brushed her cheek with the back of his hand before pulling it away. \"You should take off your shirt,\" he murmured.\n\n\"Why? You're not allowed to touch,\" she asked between mouthfuls of his manhood.\n\n\"But I still have eyes.\"\n\n\"Do it,\" Allison said, already tugging at Bethany's t-shirt. She had it worked up her chest. Bethany pulled away from Dustin's big dick and allowed her friend to finish the job.\n\n\"You have to do it, too,\" Bethany insisted. She held her head to one side as she sucked Dustin and watched Allison pulling off her top.\n\n\"Keep going,\" he said.\n\nAllison looked at Bethany. \"Do it,\" Bethany said. When Allison stayed frozen in place, Bethany reached behind herself. She slipped her yoga pants over her ass and halfway down her thighs. Allison pulled them off her feet before standing and taking off her pants, too. Bethany felt the tightrope slipping inches away from the invitation of the net.\n\nAllison nudged next to Bethany for a turn at sucking Dustin. Bethany pulled away and admired the man in front of them. He was cute, a fun mix between geeky and hipster. She wondered when he pulled off his shirt? His lean body was an invitation she wanted to accept. She caressed his flat stomach, followed the line of twisty hair from his bellybutton on down and caressed his cock while Allison still sucked him. She rubbed his balls and knew as long as she kept her hands on him, her hands wouldn't be on Allison.\n\nIt felt right being naked with Dustin and Allison. Bethany felt exposed. She felt hyper-aware of her nudity and theirs. Being naked made her feel vulnerable. Nakedness meant more than being exposed. Naked was an act of trust and faith. Or an invitation. Which was it? Last time she was naked with Allison they had been separated by beds pushed against opposite walls. Minutes ago they had touched and groped through the safety barrier of their clothes. She pulled back a bit and admired the raw sexuality of watching Allison sucking Dustin. Seeing her do it wearing clothes had been hot. This was hotter. She could see Allison's perky breasts sway as she moved. She could see Allison's nipples hard and needful. She knew how that felt. Her nipples ached, too. \n\n\"My turn,\" Bethany insisted, pushing close and pulled Dustin to her mouth. \n\nThis was safer. This was why they were there, wasn't it? It wasn't about touching, petting or seeing the other girl aroused. It was about the thrill of sucking a dick, wasn't it? Why else were they doing it? As a joke? As a way of teasing themselves? As a way of exposing men as the horn-dogs they were? The concept of community service fell away from the act. None of those explanations fit and they never had. This was never about the man or his need for an orgasm. This was a completely selfish act performed as way to tease her libido. Yes, Bethany wanted the man to have an orgasm. Yes, she wanted to taste his creamy orgasm and savor its unique flavor and texture. She didn't care about it as a gift of an orgasm for him. She cared about it for the singular thrill of doing it. Making these men experience an orgasm had been a form of victory, a salty surprise for a job well done. Getting the man naked had been part of the dance. Never mind how easy it was to find a man willing to expose the very essence of his manhood to the risk of her teeth biting and tearing. She would never do that, though it was an amazing element. No, Bethany knew it was about the man exposing himself, offering himself to her attentions in hopes of receiving a pleasure.\n\nAnd what did it mean that she was now naked, too? She didn't need to be naked to suck him. Neither did Allison, so why had they done it? Because Dustin had been kinder than the other guys? Because Dustin was cute and well-hung and thoughtful enough to think of playing music while they played? No, that didn't fit. Bethany realized she was naked because she wanted to be naked. She wanted to receive the same gifts they were offering Dustin. And she wanted to share that gift with Allison. She wanted to be the reason why Allison climaxed.\n\nBethany pulled away from the prop of Dustin and his beautiful, hard cock. The tightrope between her and Allison had landed on the net and Bethany knew it had never mattered. Being branded as \"straight\" had no greater value than being called \"gay\" or \"bisexual\" or anything else. There was sex. Sex equaled joy and nothing else matter. Labels weren't descriptions; they were chains that held people back from experiencing life to its fullest. If I do this, then I'm going to be called that. What a silly and stupid way to approach life!\n\n\"Suck him,\" Bethany said as she traded places with Allison. Her pretty friend with the long, straight brown hair eagerly slid between Dustin's legs. She nursed on his balls while stroking his long, hard cock. When Allison's mouth wrapped around Dustin's prick, Bethany knew how it felt for her friend. Allison would taste and feel the wetness Bethany's mouth had left behind. It was a kiss, once removed. \"Does that make you wet?\" Bethany asked and caressed Allison's rump, rubbing the firmness of her ass without doing anything more. \n\n\"Um-hum,\" Allison hummed in the affirmative without pulling her mouth away.\n\n\"Really wet?\"\n\n\"Yes,\" she sighed without cock in her mouth.\n\n\"Does it make you want an orgasm?\"\n\nAllison answered with a nod of her head that didn't match her sucking. \n\n\"Keep sucking,\" Bethany told her as she wiggled closer to Allison's profile. Allison was on her knees, sitting on her heels as if praying. She gave Bethany a suspicious glance but didn't stop what she was doing. Bethany reached between Allison's body and Dustin's knees. She caressed Allison's chest, running her hand across stiff, hard nipples that felt like large pebbles beneath her palm. \"Do you like that?\" Another out-of-synch nod from Allison. \"You like when I play with your tits?\" she asked and Allison moaned. \"How wet are you?\"\n\nBethany didn't wait for Allison's response. She never intended on waiting. Her hand slid down Allison's flat stomach and she reached between her girlfriend's legs. She slipped her fingers past her closely cropped landing strip of pubic hair until her fingers were touching the core of Allison's nature as a woman. She parted puffy lips and her fingers found the sensitive nub all women have. She felt the heat she knew from touching herself. She felt the same dampness. She felt Allison's pussy as she had so often felt her own with the exception that she wasn't touching herself. She was touching Allison, intimately and with purpose. Allison moaned again.\n\n\"Who will come first? You or him?\" Bethany asked, enjoying the thrill of what she was doing. She poked a finger inside of Allison. Her friend's pussy felt feverishly hot. She added a second finger and rocked her hand between her legs. Long before her and Thom had ever made love, he would do this to Bethany. It was as far as they would go for months and her favorite part. He would snake his hand inside her jeans and beneath her panties. His fingers would dig inside her weeping, waiting pussy and he would finger-fuck her. She had loved the sensation of his fingers inside her pussy and knew from the times she had taken care of herself that the bigger thrill came from the heel of his palm mashed against her clit. Cupping Allison's womanhood, this was the thrill Bethany gave her friend, rubbing and fingering her at the same time. Keeping her hand in place, she pressed her face against Dustin and his big prick. Allison turned her head, found Bethany's mouth and they kissed with Dustin's dick rubbing their cheeks. Bethany felt Allison's moans against her tongue as her friend came. ",
        "\"You're not playing fair,\" Allison said once her moment had passed. She held Dustin's prick out for Bethany. \"Suck this,\" she commanded, scooting backwards and away from Bethany's intimate touch. \"My turn.\"\n\nAs she had done before, Allison moved behind Bethany. This time, when she pressed her body against Bethany's backside, Bethany could feel her bare breasts against her bare back. Allison pulled a handful of curly hair from Bethany's neck and kissed the flesh she exposed just below and beneath her ear. It was a sensitive spot that sent a shiver through Bethany. A shiver Allison felt, too.\n\n\"You like that?\" Allison asked. Bethany didn't need to answer. \"As much as this?\" Allison's hands wrapped around her and cupped two breasts with tight, needful and hard nipples. Allison found thought nipples and pulled on them. \"That's how you do it, right?\" \n\n\"Mphm,\" Bethany moaned with a mouthful of Dustin. She was surprised Allison had noticed. \n\n\"I should get a toy,\" Allison said and slid her hand between Bethany's legs. Her fingers found Bethany's pussy and she pushed two fingers inside. \"Fuck, you're wet.\"\n\nBethany switched hands around Dustin's big cock. She tried reaching behind her to touch Allison and became distracted when she recognized a new scent. She was stroking Dustin with the same hand she had used between Allison's legs. Her nose instantly recognized the aroma of a woman's pussy and just as quickly acknowledged it as different from her aroma. She was smelling Allison and it was too much. She moaned loudly around the muffle of Dustin's big dick and came. \n\n\"Damn, slut, you're easy,\" Allison sang in Bethany's ear before kissing that sensitive spot on the nape of her neck. \n\n\"Oh God,\" Dustin groaned and Bethany looked up at him. \"I'm close!\" \n\nAllison reached around Bethany. She grabbed Dustin's hard prick and began pumping on it. \"Come on her tits,\" she demanded as she pulled Bethany backwards. \"Do it,\" she encouraged. \"Come on her!\"\n\n\"Both of you,\" he gasped as he struggled to hold on to his orgasm. He reached for Allison and pulled her alongside of Bethany. He took over stroking for them while Allison rubbed his balls and Bethany waited as if watching an erotic Jack-in-the-Box that didn't take long. He groaned once more, again with that sexy, deep-throated bellow and his prick erupted against her. \"That's it,\" Allison purred, rubbing his balls and milking him. \"All of it. Every bit.\" As he came, he waved his cock side-to-side in a move straight from a porno video. His hot, slippery seed splashed against their chests in long ropes of his pleasure.\n\n\"Now kiss,\" he said, pushing their heads together. Bethany was confused but fell against Allison's waiting lips. They wrapped their arms around one another, pressed their chests together and then it made sense. They slipped and slid against their girlfriend's chest, rubbing and smearing Dustin's gift. \n\nAllison was first to break their kiss and begin kissing down Bethany's neck. She began licking Bethany clean. Her tongue moved over Bethany's needful nipples, around the swells of her breasts and everywhere in between. Understanding what was happening; Bethany pushed Allison backwards and did the same thing. She discovered the unique joy of sucking a firm nipple between her lips and repeated it on the other side. They kissed again, hands replacing tongues on each other's chest.\n\n\"I should go,\" Dustin said, already dressed. He gave them each a kiss on top of their heads and left them alone. Noticing him leaving felt distant and appreciated. \n\nNaked and alone in each other's arms, their kiss lasted for a long time before Bethany suggested they move to her bed. Allison didn't hesitate. They fell on Bethany's bed in a tangle of arms, legs and giggles. Bethany kissed Allison's lips, her chin, neck and chest again. She pushed the woman on her back as she slipped off the skinny, single sized bed. \"Where are you going?\" Allison asked and learned the answer as Bethany pushed her legs apart.\n\n\"It's your turn for a blowjob,\" Bethany said, parting her friend's legs and gazing at the beautiful sight of a woman's pussy puffy and needful. She bent forward and pressed her mouth against Allison's pussy lips and her tongue found the same nub her fingers had touched earlier. She inhaled deeply, smelling the aroma of another woman, so much like her own and yet different enough to send her pulse racing. She tasted Allison and found her answer about how it must be when a man goes down on a woman. It was the most intimate of kisses. Using her tongue and her fingers, she pleasured her friend without shame or concern for what it meant or how could change her identity. As she savored the joy of providing another human with an orgasm she looked up and watched as Allison's eyes fluttered. She heard Allison's moans, her soft cries of a nearing orgasm and felt the rocking of her body as it arrived. Bethany saw how her reaction was so similar to the men they had shared.\n\nShe kissed up Allison's body and rolled on her back while Allison slipped off the bed. \"Ready for your blowjob?\" Allison asked, pushing apart Bethany's creamy white thighs.\n\n\"Yeah baby,\" Bethany giggled. She had seen this done in movies. She had read it described in stories. She had just finished doing it to Allison. Still, nothing prepared her for the sudden wet heat of Allison's tongue parting her pussy lips. A tongue was nothing like a finger. Her tongue was wetter, slippery and faster at moving around her clit. She could feel the heat of Allison's mouth and her cheeks against her thighs. Her heart raced when Allison fucked her with her tongue. Allison used her fingers, too, poking and filling Bethany until she could take no more. She squirmed, cried out louder than she ever intended and came against Allison's face.\n\nThey cuddled, hugged and kissed. Bethany tasted her pussy on Allison's tongue and chased the taste as eagerly as a man's orgasm. Their hands groped, grabbed and explored each other's naked bodies until Bethany couldn't stand it anymore. She went down on Allison again and eagerly offered herself back to her friend. It was a back and forth sharing of gifts that last over an hour before they felt sated.\n\n\"You give good head for a straight chick,\" Bethany murmured doing their exhausted cuddling.\n\n\"You too,\" Allison giggled, kissing her friend. \"We should get naked together more often.\"\n\n\"Think the guy will get the wrong idea?\"\n\n\"Who said we needed a guy around?\" Allison asked and kissed her again.\n\n\"I do, because next time I want to do down on you while Dustin is fucking you.\"\n\n\"Oh yeah?\" Allison asked, pushing Bethany back between her legs. \"And who's the bad girl now?\"\n\n\"Me,\" Bethany said right before she pressed her face against Allison's pussy for another delicious taste.\n\n* * * * *\n\nSunday morning found Bethany and Allison tangled in each other's arms. Bethany squirmed as she felt something hard beneath her ribs and pulled out her jelly dildo. She smiled and set it to the side. She gave Allison a kiss before climbing over her to use the bathroom. When she came back to the room, she caught her friend in mid-stretch. \"Good morning,\" Allison cooed with a sleepy but happy smile. She gave Bethany a kiss on her way to the bathroom. Bethany moved the sex toys from her bed to her desk.\n\nThey squeezed into the shower together and giggled as they soaped each other. At one point, Allison rubbed soap across her chest before pulling Bethany close and rubbing their tits together. \"Remind you of Dustin?\" They laughed and kissed again. \n\nBethany loaned Allison a change of clothes so they could head to breakfast without Allison needing to stop by her room. When the exited the cafeteria line they faced the mostly empty room. Bethany noticed Andy sitting by himself. She nodded at him. Allison smiled and they joined him. If Andy thought the first time was fun, he had no idea what was waiting for him this time!\n\nI did my best to catch typos and dropped words. Sorry for the little interruption in the middle of the story but it's a test I'm trying as way of combating the thievery that sometimes happens on this site. In theory, a thief cuts and pastes without reading a story, so we'll see what happens. Meanwhile, kind words of encouragement and thoughtful comments remain appreciated. Be well! BD"
    ],
    "authorname": "BuckyDuckman",
    "tags": [
        "college",
        "coed",
        "blowjob",
        "cumslut",
        "cumplay",
        "cfnm",
        "cum eating",
        "threesome",
        "masturbation",
        "lesbian"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/coed-blowjob-buddies"
}