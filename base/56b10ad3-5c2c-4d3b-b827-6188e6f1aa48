{
    "title": "Brad's Road Trip Ch. 16",
    "pages": [
        "Like I said at the end of 15... this one was already written, so, the quick turnaround. Voila. \n\nThis one is fairly long. I normally prioritize writing plot, with the sex still prominent but in a secondary role. I feel like I've done that here, too, but this one could also be used as a stroke story. More than half of it is one long sex scene, and outside of the main character, everyone involved in the sex either debuts in this chapter or has had only very brief appearances prior to this. The readers who generally skim the sex to get back to the plot will be skimming a lot toward the end - but be careful, because there is some plot stuff with Kelly mixed in. Likewise, the readers who tolerate the plot to get to the sex will be happier as it gets toward the end.\n\nI could have put this in a few different categories. There's anal sex and interracial sex, a little bit of voyeurism, and one of the best one-on-one sex scenes I think I've ever written. But the crux of the hookup is satisfying a group sex fantasy, so that's where I put this one.\n\nAs always, thanks to my editor, AnInsatiableReader, for helping me clean this thing up. When I send it to her, it looks nothing like the finished product you're about to read.\n\n*****\n\nDay 15\n\nThursday, June 26\n\nDenver, CO to Grand Junction, CO\n\nSleeping in was such a foreign concept to me that when I woke up the next morning, alone in my hotel room with no alarm clock or phone ringing, I briefly panicked.\n\nWhat day was it? Did I miss a wake-up call? Was I going to miss a concert or a baseball game or something? Was I supposed to call Kelly?\n\nSlowly, my brain began to focus as I remembered where I was and what my plans were for the day. The bedside alarm clock told me it was just a little after 9. Kelly and I had stayed up well past 1 rehashing my early evening trysts with Lisa, so I'd gotten my standard eight hours of sleep. Grand Junction was only a 4-hour drive west on I-70, and the main concerts didn't start till after 7, so I was doing well on time.\n\nTonight was the first night of Country Jam USA, a four-day country music festival in western Colorado. It was similar to what I did in Oklahoma two weekends ago, except then I was by myself and had planned to stay in a hotel until I met Paul and his friends... and his girlfriend... and his friend's sister... etc. This time I was meeting up with some friends who had long since reserved a camp site. My time in hotels was finally over; the next three days would be filled with sleeping bags, tents, alcohol and lots and lots of live music.\n\nThe only thing blocking it from perfection was the fact that Kelly wouldn't be there, but it wouldn't be too much longer. It was hard to believe that after all this buildup, I'd be seeing her in just four days. Grand Junction was a three-day stop, but it was the last stop; when I packed up to leave there, I'd be heading to my parents' house. \n\nMuch to my chagrin, we had to skip our usual morning conversation because she'd had to go in at 7:30. Food inspectors were visiting her restaurant today, and then she worked until 4 in the afternoon. I was really hoping she'd get her packages today, but I wouldn't find out until well after the music started.\n\nAs I looked in the mirror, I thought about our chat last night and couldn't help but smile with my toothbrush sticking out of my mouth. That was pretty much par for the course with her. Every time I hung up the phone, I thought we'd just had the best conversation we could ever have. She always proved me wrong with the very next call.\n\nThe phone sex was incredible, of course - just thinking about how many times she'd fingered herself to an orgasm while I told her about going down on Lisa last night was bringing my sleeping cock back to life in a hurry - but our connection went so far beyond that. The more I learned about her, the more I liked her. We shared a lot of the same life goals, we'd had similar upbringings and there was literally nothing we couldn't discuss. She just fit me, in every way imaginable, and the thought that our connection might not be real when we finally met in person made me a little nauseous. \n\nI checked my phone and saw that she'd called at 6:30 in the morning. That was odd, since she knew I wouldn't be awake, but then I saw that I had a voicemail. I started the water in the shower before hitting the button to listen to her message.\n\n\"I know you're sleeping, baby,\" she said, her voice primed and ready to work a 1-900 line. \"But I just wanted to thank you for last night. I can't wait until you can make those memories directly with me, but I love how hot you get me just using your voice.\"\n\nI wondered if she was playing with herself on my voicemail, and I got my answer with her next sentence.\n\n\"I'm so fucking wet right now, Brad,\" she mewled into the phone. \"I'm always wet these days, because of you. I love how hard you came from fucking Lisa's tits. Mine aren't nearly that big, but my friend Sarah, the one from the club... her tits are huge. I bet she'd let you stick your cock between them. She's pretty freaky, but I might have to convince her. Do you think you'd enjoy watching me eat her pussy while you fucked her tits, baby? Maybe when you came, you'd cum so hard that you'd hit me in the face, while I licked her pussy...\"\n\nHer description devolved into a bunch of jibberish as she brought herself off with her fingers. My cock stuck out lewdly and looked downright angry.\n\n\"Fuck, Brad,\" she said. \"I want you so bad. Have a good day, baby.\"\n\nI was suddenly glad I was getting in the shower.\n\n*************************************\n\nI pulled up to the house my GPS had directed me to a little after 2:30, having made pretty dang good time on I-70. I'd heard a lot about the person I was here to pick up, but I'd never met her, so I really had no idea what to expect. I sent a text to her number, letting her know I was outside, then got out and walked toward the door.\n\nIt opened before I got there, and a woman with long, curly blonde hair walked out. It was a hot day and she was definitely dressed for it, wearing barely legal shorts and a tank top that covered up only what it had to to avoid jail. She was fairly well-endowed, and I did my best to make eye contact with her before I stared a hole in her tank top. Or at least, I tried to make eye contact with her; her imitation Ray-Bans blocked me from seeing her eyes.\n\n\"Are you Brad?\" she asked as she walked toward me.\n\n\"I am,\" I said. \"Liz?\"\n\n\"That's me,\" she said. \"Nice to meet you. Sara talks about you sometimes.\"\n\n\"Likewise, on both accounts,\" I agreed. We shook hands. \"Ready to go?\"\n\n\"Just about,\" she said. \"My dad dug a bunch of stuff out of the attic, and it's over here in the garage. No idea what it is, but Sara said you were going to take it all over to the campsite.\"\n\n\"That's the plan,\" I said. \"Is she in town yet?\"\n\n\"About two hours,\" she told me. \"She's at the airport in Denver waiting for her connecting flight out here.\"\n\n\"Ah,\" I said. \"Well, let me get this stuff loaded up, and we can head out.\"\n\n\"Okay,\" she said. \"I'm gonna go in and finish my makeup, then I'll be ready.\"\n\nI nodded and grinned as I walked over to the pile of gear. I had no idea why she was putting on makeup. For one, it was so hot she'd sweat it off before anyone she wanted to impress had seen it. Unless, of course, she was trying to impress me, in which case, she didn't really need the makeup.\n\nSara was in the Air Force, and her unit worked the same mission as mine at Lackland, back in San Antonio. Of course, I knew her better as Airman Winters, and she knew me better as Sergeant Carver, but we had a little bit of history that involved using first names. She'd grown up in Grand Junction and took a week of leave to come home and go to the concerts. \n\nLiz was Sara's best friend in high school. Sara and I weren't the kind of friends that hung out a lot outside of work, but we worked together enough that I heard about her friends from time to time. Especially when we'd decided to meet up out here, she told me we could get all the gear we needed from Liz, but cautioned me about her as well.\n\n\"I love her to death, and she's a great friend,\" Sara had told me. \n\n\"I sense a 'but' coming,\" I'd answered.\n\n\"I'm just saying, Brad. It's gonna be the end of June, but you need to watch out for flakes.\"\n\nI'd laughed then, but now that we'd met, Liz didn't seem too ditzy to me. Of course, it was just one conversation, and a short one at that.\n\nI walked over to the garage and started loading the stuff into the back seat and trunk of my Stratus. There were three tents, a half dozen sleeping bags and some other camping gear. With all the stuff from my road trip plus a computer in there, it was a tight fit, but I made it work.\n\nLiz walked back out of the house with a man I assumed was her father. He walked over to the garage and seemed surprised to find all the gear gone.\n\n\"Got it all packed in?\" he asked.\n\n\"Yep,\" I said. \"I appreciate you letting us borrow everything, sir. I have plenty of my own camping stuff, but it's all back home in Idaho.\"\n\n\"No problem,\" he said. \"Just take care of it and bring it all back the way you got it. If you have any questions about any of it, just let me know.\"\n\n\"I'm sure the two of us can figure it out,\" I said as Liz got into the passenger seat of my car.\n\n\"I love my daughter, son,\" he said. \"But she won't be any kind of help. I'm surprised she's even willing to sleep in a tent.\"\n\nI chuckled and shook his hand before getting into the car.\n\nThe drive took maybe 20 minutes, and we kept the conversation light. Liz already knew I was on a road trip from talking to Sara, but I gave her some of the details - basic places and events, but not the real juicy stuff. She was majoring in sociology at Mesa State in Grand Junction, and mentioned that some of her classmates were going to be camping out here as well.\n\nThe campgrounds here were very much the same as the Oklahoma festival. Sara had reserved two camping sites, which gave us space to park four cars. Like Paul back in Tulsa, Sara had reserved late and had to settle for spots in the quiet zone. We checked in at the front gate, and they gave me a map to our spot.\n\nLiz offered to help, but really, pitching a tent was pretty simple, so I told her I'd be fine. She nodded and sat on a picnic table and watched me work. As I worked, I'd occasionally help myself to a view of her long, tanned legs as they hung over the side of the table. She caught me staring once or twice, but I didn't care, and she smiled back at me each time, so I guess she didn't either. \n\nTarps went down across the camping area first, followed by the three tents, which I set up in a semicircle. There were two four-man tents and one six-man tent; in other words, we had room for 14 people, and only planned on having five people stay here.\n\nI was all alone in one of the four-man tents on the outside, with Liz and Sara sharing the other one in the middle. Chad and Russ, my roommates in San Antonio, were road tripping up here to meet us. They were due in sometime tonight, and would share the six-man tent on the other side. Russ had told me he planned to bag a different girl each night, and Chad would probably do that without even trying. I figured they could use the extra space.\n\nAs I finished setting up the big tent, I noticed Liz was playing on her phone. When I started throwing sleeping bags into the tents, she got up and walked toward me.\n\n\"My friends from school are a few rows over that way,\" Liz said, pointing toward the concert grounds. \"You want to come meet them?\"\n\n\"Sure,\" I said, zipping up the tents and locking my car before we headed out. We found her friends in a few minutes. There were two guys and three girls, all of whom went to Mesa State. One of the girls, Lindsay, played on the school's soccer team, and hers was the only name I could remember five minutes later.\n\nWe all agreed to head to the concert area to catch the unknown local bands who tended to fill the afternoon slots at these things, but on the way there I saw something that caught my attention. There was a huge RV parked in a slot right along the main walking lane, and on the side was a gigantic United States Marine Corps logo. The screen door was closed, but the inner door was open, and I could hear noises coming from inside.\n\n\"Liz, I'm gonna see who's in here,\" I said. \"I always like to say hi to a fellow Marine. I'll catch up with you guys later.\" Liz nodded and kept chatting with her friends, but Lindsay gave me a shy smile and a little wave as they walked off. I filed that detail for later.\n\nI knocked on the door to the RV and waited. Within seconds, a man walked off a Marine Corps recruiting poster and up to the door.\n\n\"Hi, can I help you?\" he asked.\n\n\"Just wanted to say hi to a fellow devil dog, especially one who displays it as loud and proud as you guys,\" I said. \"I'm Sergeant Brad Carver.\"\n\n\"Glad to meet you, Sgt. Carver,\" he said, opening the door and motioning me in. \"Gunny Granger.\" We exchanged a firm handshake. It didn't surprise me that he didn't give his first name. For most gunnery sergeants, Gunny was their first name. \"What brings you up here?\"\n\n\"On terminal leave from an intelligence company down in Texas,\" I said. I looked around the RV and saw Marine Corps stuff everywhere. Bumper stickers, recruiting brochures, posters, etc. \"I'm from Idaho, and stopped here to meet up with some friends on my way back home. There are a couple more Marines coming up here later tonight. What about you?\"\n\n\"We're recruiters,\" he said. I'd guessed something like that. \"I'm based in Denver, along with one of the sergeants here. The other two are based in Grand Junction.\"\n\n\"Nice,\" I said. \"What are you guys doing out here, though?\"\n\n\"You been to one of these little shindigs, sergeant?\" he asked.\n\n\"In Oklahoma, a couple weeks ago,\" I said.\n\n\"Well, out here anyway, the thing's like a county fair,\" he said. \"Sure, there's the music, but there's a bunch of booths for just about every damn thing; you know, food, crafts, games, all that. We set up a booth out there, offering information about enlistment.\"\n\n\"You guys have any success?\" I asked.\n\n\"Actually, yeah,\" he said. \"You know, we get our share of drunks stumbling in there acting like badasses, the ones who wouldn't last a day at boot camp. But we probably sign up two or three a year at this thing.\"\n\n\"That's great,\" I said. \"There are four of you here, then?\"\n\n\"Yeah,\" he said. \"Sgts. Marks and Callahan are working the booth right now. Myself and Sgt. Andrews will go get them out in a couple hours.\" As he spoke, I heard a toilet flush, and a door opened a few moments later. \"Speaking of Sgt. Andrews,\" he said. \n\nGunny hadn't mentioned it, so I was slightly caught off guard to learn that Sgt. Andrews was a woman. Her yellowish blonde hair was pulled back in a tight braid, and she had the typical Marine body - tight and athletic with plenty of muscle but not enough to suspect anything illegal. Her face was nothing special, but I found myself attracted to her anyway. She was wearing camouflage utilities, but her blouse hung over a chair in the RV's kitchen. Her breasts weren't huge but they made more than a dent pushed out against the Marine standard-issue olive green undershirt.\n\n\"Hi,\" I said, walking toward her with my hand outstretched. \"I'm Sgt. Carver, but I'm on leave right now, so call me Brad.\"\n\n\"Sgt. Andrews,\" she answered with a smile, her handshake almost as firm as the gunny's. \"Janine.\"\n\nI noticed her giving me the once over as well, and I didn't see any rings. She looked to be about my age, but she was probably a couple years older, at least, if she was already a recruiter.\n\nShe intrigued me. Lackland was an Air Force base, but the intelligence outfit I was attached to had members of all four armed services - Air Force, Army, Navy and Marines - as well as some foreign military members. I'd had sex with an air(wo)man, a soldier and a sailor, and I'd even managed to score a drunken blowjob from one of the British military girls assigned to the unit. But somehow, one thing I'd never done was have sex with a fellow Marine.\n\nIt wasn't exactly on my bucket list, but I saw an opportunity to check a box.\n\n\"So do you guys get to go to the concerts at all, or is it all work?\" I asked.\n\n\"We work till the sun goes down,\" she said. She might have been checking me out and silently flirting with me, but she was a Marine NCO. If she was shy, she'd have been an exception to the rule. \"We can do whatever we want after that.\"\n\n\"You guys coming to the Clay Walker show then? Guessing it'll start well after sunset.\"\n\n\"I'll be there,\" Gunny said. \"My wife is here, and she's a big fan. Not sure about the rest.\"\n\n\"I hadn't decided yet,\" Janine said.\n\n\"Well, you should,\" I replied, hoping she got my meaning. \"Like I was telling Gunny, I've got some other friends here. There are two other Marines coming tonight, too. I'm not sure if they'll be here for the show, but even if they aren't, there'll be a bunch of us watching.\"\n\n\"Swing by the booth out on the fairgrounds around dusk,\" she said. Then she turned to Gunny: \"Wait, I have the last shift, right?\"\n\n\"You do now,\" he said with a knowing grin. I was a little surprised he was helping out.\n\n\"That settles that,\" I said. \"Janine, Gunny, it was great to meet you. If you need any fleet Marines to talk to your prospects... well, I'm not sure an intel flunky stationed at an Air Force base qualifies, but I'll be glad to help you guys out.\"\n\nJanine looked the question at me, and I realized she'd been in the bathroom when I was telling Gunny about myself. \"He'll explain.\" I said. \"Or, I will later.\"\n\nShe smiled at me as I left the RV.\n\n**************************\n\n\"Hey, honey,\" I said, answering the phone. \"How was your day?\"\n\nI was vaguely aware that the me from three weeks ago would have promptly yanked today me's man card for using a pet name and asking such a question. However, I was acutely aware that today me would willingly whoop the old me's ass.\n\n\"As good as it can be when the mass production of tacos is involved,\" she said. \"I was supposed to work until 4, but I'm just leaving now and it's a quarter till 5.\"\n\nSo she hadn't made it home yet, I thought. Damnit.\n\n\"How'd the inspection go?\" I asked. I was sitting by myself at a long table under a canopy near the beer booths. It was 90-plus degrees outside, and I was trying to stay cool until sundown, still at least three hours away.\n\n\"Fine,\" she said. \"I have an assistant manager who is average at working the line and downright awful at handling people, but she's outstanding at knowing rules, making sure we're in compliance with them and documenting everything. I hardly pay attention to the safety regulations anymore, because I know she's got it.\"\n\n\"That's a good thing, right?\"\n\n\"Yeah, I guess,\" I said. \"Everyone has to be good at something. You know, not everyone out there is like you, Brad, good at every-fucking-thing.\"\n\n\"Hey,\" I said. \"I'm not good at everything. You should see me play golf. It's a damned Greek tragedy.\"\n\n\"I played golf in high school,\" she said. \"I was horrible at it, too, but I got a little better during my senior year. I only played because I really liked the coach and he needed one more player to fill out his roster.\"\n\n\"I played baseball in high school, and we made fun of the golfers,\" I said. \n\n\"Yeah, and most of you guys will be building the golfers' houses in a few years,\" she giggled.\n\n\"True enough,\" I said. \"Not me though. I'll make my old teammates mow my lawn.\"\n\n\"Really, now,\" she said. \"And what kind of grand plans does Brad Carver have for the future?\"\n\n\"You really want to know?\" I asked. I hadn't really discussed it with anyone outside of those who'd be directly involved. Even my parents didn't know.",
        "\"Of course, Brad,\" she said. \"I assume it has something to do with baseball.\"\n\n\"I can't have a career in baseball,\" I said. \"Oh, don't get me wrong, I think I would be great at it. I could run numbers and stats with the best of them, and after a while I think I would get good enough at making the big decisions that I could be a general manager.\"\n\n\"So what's the problem?\" she asked.\n\n\"I like it too much,\" I said. \"It's my passion, and my hobby, and I want to keep it that way. Right now, I'm not forced to do anything with baseball. I can enjoy it as much - or as little - as I want. If it was my job, I'm afraid it would stop being fun for me.\"\n\n\"I see,\" she said. \"You never wanted to play professionally, then?\"\n\n\"Oh, I did,\" I said. \"I'd like to be the lead guitarist for Van Halen, too. I don't have the talent for either.\"\n\n\"That would have made it your job, though,\" she said.\n\n\"That's different,\" I contended. \"Then, I'd just be playing a game. Sure there's a business side to it, but then, my job would just be to go out there and play to the best of my ability. As a front office person, if the numbers and analysis ever got to be too much and I just wanted to take a break - and sometimes they do - I wouldn't be able to.\"\n\n\"Ah,\" she said. \"So what do you want to do instead? You sound like you have a plan.\"\n\n\"I do, or at least, I have the very early beginnings of one,\" I said. \"I've always been interested in aviation. I'm not a pilot, and I don't know a ton about airplanes, but I've always been fascinated with the logistics of air travel. I'd like to become a pilot down the road, too; it's just very expensive.\"\n\n\"So you want to work for an airline or something?\"\n\n\"Kind of,\" I said. \"I'm like you. You wanted to be in charge of your restaurant, so you have to own it. I want to be in charge of my airline, so...\"\n\n\"There's a million restaurants in this country, Brad,\" she countered. \"Not too many airlines.\"\n\n\"Always room for one more,\" I said. \"It's not going to be a normal airline, carrying passengers in huge jets from big airport to big airport. It'll be a charter company. Smaller, faster jets flying high-end clients directly to their destination.\"\n\n\"Wow,\" she said.\n\n\"I served with a couple of pilots in Afghanistan,\" I said. \"J.T. and Tim. I told you about them. I met up with them when I went to Charleston. They were there when I had my lovely shouting match with Beth.\"\n\n\"I remember,\" she said. \"That was maybe the hottest story you've told me all trip.\"\n\n\"It was memorable, for sure,\" I said. \"Anyway, we talked business, the three of us. J.T.'s dad owns one of the largest charter companies on the east coast, and both he and Tim fly for it. I'm going to drum up enough investment capital to start a subsidiary company, based somewhere out west, that hopefully will eventually grow into its own entity. When I had that business meeting a couple weeks ago in Tulsa that's what I was talking about. I served with an Air Force guy whose family has deep, deep pockets from being in the oil business. He moved back to Tulsa after he got out, but he always told me if I ever needed an investor down the road, to look him up.\"\n\n\"Wow,\" she said again. \"That's pretty ambitious.\"\n\n\"It is,\" I said. \"But I know I can do it.\"\n\n\"Oh, I have no doubts, Brad,\" she said. \"I didn't mean it that way. I just meant that you have high ambitions. Just stating a fact.\"\n\n\"I've got a good mind for business, and I want to do something with it,\" I said. \"I don't have to get rich. I wouldn't turn that down, of course, but I just want to build something and be successful.\"\n\n\"I hope you'll let me be a part of it,\" she said.\n\n\"A big part,\" I agreed.\n\n\"Hold on a second,\" she said. \"I just got to my apartment complex. The front office left a message for me while I was working, to tell me that UPS dropped off a package for me since I wasn't home. Let me run in there real quick and get it.\"\n\nFinally, I thought. \"No problem. I can wait.\"\n\nShe was gone for a minute, maybe two. As soon as she came back on the line, my eardrum almost exploded.\n\n\"BRAD!!\" she shrieked, likely scaring everyone in her apartment complex. There were people milling about near me, and I swear they could hear the scream too. \"You are the best boyfriend ever!!\"\n\nIf she hadn't had to work all day, I'm not sure I could have kept my mouth shut. I was glad I wouldn't have to do it for another day.\n\n\"What?\" I asked as innocently as I could manage with a huge smile on my face. \"I mean, point granted, but, why?\"\n\n\"There are two! Both from you!\"\n\n\"Oh?\" I asked. \"I don't recall sending you anything. Pray tell, what's in these packages?\"\n\n\"I've got to drive back to my apartment, then I'm going to open them and find out,\" she told me, ignoring my feigned ignorance. \"I'm so excited!\" \n\nThe smile on my face could have been wider, but not without involving a plastic surgeon. A few minutes later she was in her apartment, and I heard the sound of packing tape being removed from cardboard.\n\n\"Oh, my, God,\" she said. \"You didn't. Where did you buy these things?\"\n\n\"Depends on which things,\" I said.\n\n\"Well, let's see. There's a long blue vibrator, looks like about 8 or 9 inches long and thick as my wrist,\" she said. \"There's a flesh-colored dildo, a bit smaller but ribbed and shaped like a real dick. And then... I'm not sure what this last one is.\"\n\n\"It's a remote-controlled bullet vibrator,\" I said. \"Don't open that one until I get there.\"\n\n\"Ooh,\" she moaned, already in the mood two minutes after getting home. \"So, you stick that in my pussy?\"\n\n\"If I remember correctly, it goes in your pussy so it'll hold in place, but there's an extension that slides up and over your clit. That's the vibrator. And then I keep the remote in my pocket and flick it on and off, high speed or low, whenever I get fidgety and need something to do with my hands.\"\n\n\"You feel fidgety very often?\"\n\n\"Just about every minute of the day, sadly,\" I sighed. She just moaned again. \"To answer your question, I went to Adam and Eve online, but I ended up having to call them. I had to carefully explain to the clerk that I wanted my name listed as the sender on the package, lest it get delivered while you were out and one of your neighbors get nosy and wonder why the first man and woman to be named in the Bible are sending you gifts. Now that I know they take them to the office if you're not there, I'm glad I did. I'd hate for your landlords to think there's a dirty, dirty girl living in their complex.\"\n\nShe giggled, and started in on the second. \"What's in this one?\"\n\n\"You know,\" I said, \"if I wanted to tell you that before you opened it, I'd have done it already.\"\n\n\"You're no fun,\" she whined.\n\n\"Yeah, not the tune you were whistling last night, or yesterday morning, or this morning on my voicemail.\"\n\n\"Yeah, yeah,\" she said. \"I'm just desperate, Brad. And anyway, I'm - holy shit!\"\n\nI chuckled. \"You like?\"\n\n\"Love,\" she said, then quickly added, \"I love them.\"\n\n\"Tell me what you got,\" I said. \n\n\"There's a turquoise corset, several pair of lace panties in different colors, two pair of stockings, one gold and one tan, and - ooh, this one is my favorite, I think. It's a dark purple bustier, my favorite color. There are some other things, too, but you know all that.\"\n\nI did, but I didn't know purple was her favorite color. Go me.\n\n\"How did you pick all this stuff out?\" \n\n\"Well, remember I told you about the fashion show Ellie gave me the other night before I fucked her on the floor of her shop?\" I asked, my voice a little low so as not to offend anyone who might be walking by.\n\n\"Fuck, I love it when you start talking about sex,\" Kelly moaned. \"Yes, I remember.\"\n\n\"Kelly, that was for you,\" I said. \"You are similar sizes, near as I can tell, so the stuff that looked the best on her was the stuff I picked.\"\n\n\"Not the same exact stuff, right?\" she asked. I chuckled again.\n\n\"No, Kelly,\" I said. \"As hot as she was, and as great as I think the two of you will get along, I draw the line at giving my girlfriend lingerie that's been worn by other women while I fucked them.\"\n\n\"Pretty solid call on your part,\" she said. \"Wait, how did you even get my sizes?\"\n\nShe blurted out 'Linda\" just as I said 'my mom.' \"That day she accidentally told me about Tyler, we'd been playing phone tag all day about your sizes. I'd left her a message to tell her thanks for all her help, and she'd answered with a message saying no problem, and oh by the way, Kelly and Tyler, etc.\"\n\n\"Wow,\" she said. \"I'm really, really sorry about that, Brad.\"\n\n\"We're past it, Kelly,\" I answered firmly. \"I hope now you know that you never have to keep anything from me.\"\n\n\"I do,\" she said. \"Anyway, I love all your gifts, honey.\"\n\n\"I'm glad, but my motives aren't completely altruistic.\"\n\n\"How so?\"\n\n\"You're going to wear all of it for me, right?\" I asked, and she giggled. \"And at some point, I get to take it all off of you.\" She moaned slightly. \"With my teeth.\"\n\n\"Ooh,\" she said. \"And the toys? Once you get here, won't be much use for them.\"\n\n\"I disagree,\" I replied. I stood up and walked away from the canopy and found some space to myself. \"I only have so many things that can fill holes, Kelly. I'm better than any machine, but I don't mind using one or two of them to help me out. And then of course, there's the remote control bullet...\"\n\n\"Fuck, Brad,\" she stammered. \"You say two words, and I'm boiling over.\"\n\n\"There's another benefit, too,\" I said. \"For the next few days, whenever I tell you to play with yourself, I'll know exactly what you're using.\"\n\nAnd with that, I put her new toys to work. \n\n***************************\n\n\"Crazy fucking people,\" I muttered to myself as I zipped up my tent, with me on the inside and everyone else safely out there. Despite the past few minutes, I was still smiling. Dumbasses could make their jokes, and petulant women could hold all the years-old grudges their little hearts desired. I was about to talk to my girlfriend, so they could all go fuck themselves. I hadn't even met her yet, but I knew she was hotter than any of the women out there, and definitely light years ahead of any of the women the frat-boy jackasses out there had ever conned into sleeping with them. \n\nThe concert had ended a couple hours ago, but I was just now making it back to the campsite. I'd rolled out my sleeping bag earlier, so all I had to do was take off my clothes. I stripped down to my boxers, and despite cleaning up a few minutes ago, I could still smell the sex on me. The thought would have made me smile even wider, but that was a physical impossibility.\n\nI picked up the phone. I had a few texts and a voicemail, but nothing that couldn't wait. It was late - a few minutes short of midnight - but I knew Kelly would answer. She had planned to take a nap this evening, to be well-rested when I called, and she didn't have to work tomorrow, so she could stay up late. After I'd told her my plans for the evening, she was excited for story time. \n\nWhat had actually gone down blew anything I'd been expecting completely out of the water.\n\n\"Hey, baby,\" she said when she answered the phone. \"I missed you.\"\n\n\"Me, too,\" I said. \"The fact that it's only been a few hours since we talked only makes that a little bit weird.\"\n\n\"Still too long,\" she said, and I silently agreed. \"I'll admit, though, I wasn't expecting to hear from you for a little while longer, based on what you told me before. I figured that Marine girl would have more stamina than that.\"\n\n\"I could have kept going,\" I said. \"But that would have involved waking some people up, and plus, there's this girl waiting for me to give her a detailed play-by-play.\"\n\n\"Oh, there is?\" she asked innocently. \"Should I let you go so you can call her?\"\n\n\"Funny, funny girl. Just for that, I'm not letting you cum until Janine cums twice.\"\n\n\"Brad! That's not fair!\" she pouted. Of course, I knew the second orgasm closely followed the first, but Kelly didn't. Not yet.\n\n\"I guess we better get started, then, huh?\"\n\n*************\n\nFIVE HOURS EARLIER\n\n*************\n\n\"Where r u?\" Liz's text came in about 15 minutes before I was planning to go to the Marine recruiting booth.\n\n\"By merch tables,\" I texted back. \"Near the stage. Where are you?\"\n\nI'd never been a fan of text shorthand. Kelly used it a little bit, and of course, it didn't bother me when she did it. If it was anyone else, though, I wondered why they couldn't be bothered to use actual English.\n\nI didn't get a text back, and I shrugged. If she needed something that bad, she could call.\n\nA few moments later, someone put their hands around my eyes.\n\n\"Guess who?\" a feminine voice said. Since a lot of what I did at work revolved around voices - and I'd heard this particular one in my headphones countless times over the past couple of years - I knew it immediately.\n\n\"I dunno,\" I said. \"Some hot girl who's always wanted to get with me, but never had the courage to ask?\"\n\nShe scoffed and let me go. I turned around to see Sara standing there with Liz. Her red hair was in a ponytail, and the hundreds of freckles that dotted her face were even more pronounced thanks to the sun and her sweat. She wore about as little as Liz did, and I could understand why. Sara's body looked even better.\n\n\"Look who I found,\" Liz said in a singsong voice. I could tell by looking at her that she'd not only been drinking, she'd been chugging.\n\n\"Yeah, right,\" Sara said, ignoring her friend and lowering her voice for effect. \"Try someone who did get with you, but had to leave while you were snoring to go get a toy so she could get some relief.\"\n\nI sighed, but I didn't say anything. After all, how does one counter the truth?\n\nIt was November of 2004, and I'd only been stationed at Lackland for a month. I had just turned 20, and was still painfully inexperienced with women. At the time, I'd only been with two. I'd lost my virginity in a threesome with a married couple I met at the Monterey Aquarium in California, when I'd been stationed there for a tech school. That had gone fine, but I'd had another dude there to fill in the gaps for me. My second time had been with a Navy girl on the beach at Guantanamo Bay, but I was so drunk I barely remember it happening. I always assumed I wasn't that good since it never happened again.\n\nI'd only been at Lackland for a month, and the Marine Corps Birthday Ball was coming up. I didn't have a date, but while having sex had so far proven to be a weakness of mine, talking to women had become a strength. So, I figured, why not ask the pretty Air Force chick that worked on the aisle behind me? I did, and Sara had eagerly said yes.\n\nWe had a great time at the ball, which was held at a hotel on the Riverwalk in downtown San Antonio. I used every bit of charisma and charm I could muster, and I had her laughing and flirting with me all night long. I had no doubt that when the ball was over, we'd head up to my hotel room and I'd fuck her so well that security would ask us to keep the noise down.\n\nYeah... that didn't happen. I was pretty nervous, and as it turned out, so was she. I was supposed to be the aggressive one, the one in charge, the one that was sure of myself and could work her through her nerves until she got comfortable. Instead, I fumbled around and acted like a high school freshman who was finally seeing a real girl naked for the first time. I ripped a hole in the first condom I put on, and once I finally did get inside her, I lasted all of a minute. I'd had so much to drink at the ball that I dozed off a little afterward. It was just for a few minutes and I woke up with every intention of making the second time count, but she was gone.\n\nShortly after that, I'd hooked up with a girl who was convinced that I could be great in the sack with a little guidance, so she'd given it to me. A few months after that, Chad and I had tag-teamed a civilian girl we met at the NCO Club, and I'd learned even more just by watching how he worked on a woman's body. Nearly three years later, I was a far cry removed from the sexual partner I was for Sara. More than one woman on this trip alone had told me I was the best sex she'd ever had.\n\nI'd never tried to ask Sara out again, though. Thankfully, she was pretty cool about everything. She never mentioned it publically, and the only times she ever talked about it were if we alone on a midnight watch, and even then it was a joke. She had a boyfriend for about a year, but even when she was single, I only gave her a token thought before moving onto someone else. A small part of me thought she might indeed have a good laugh at my expense if I ever tried to ask her out again, but the bigger reason was pride. She was a failure, and I didn't want to revisit the scene of the crime.\n\n\"You words wound me,\" I finally said. \"Besides, you know I'm not that guy anymore.\"\n\n\"Do I now?\" she asked. \"I know you Marines like to talk a lot of shit about how great you are, but I have first-hand knowledge, Sgt. Carver.\"\n\n\"You have first-hand knowledge of who I was three years ago,\" I said. \"You don't have a clue what I'm about now.\"\n\n\"Oh, really?\" she asked. \n\nI stepped up real close to her, my voice barely more than a whisper in her ear.\n\n\"Really,\" I said. \"And if you even knew the half, your cute little brain would just explode.\"\n\nI stepped back and gave her the most predatory smile I could manage. She looked flustered and confused for a second, but I knew she'd have a comeback.\n\n\"You'd know all about explosions, wouldn't you?\" She said it where only I could hear, but it still stung a little bit. I decided I would let her have this tiny little victory tonight, but I promised myself that before I left Grand Junction, I would make a believer out of Sara Winters.\n\n\"Sadly, yes,\" I said. \"Anyway, I'm glad you got here safe. You get to the campsite?\"\n\n\"Yeah, I'm parked right behind you,\" she said. \"No Chad and Russ yet?\"\n\n\"Not till later tonight,\" I said. \"I'm guessing they'll show up just in time to get laid and get drunk.\"\n\n\"Sounds like them,\" she said. \"Anyway, we brought a bunch of blankets from the tents. We're gonna get as close as we can and then settle in for the show. You gonna sit with us?\"\n\n\"I am,\" I said. \"I'll be there in a few minutes. Save a couple of spots for me, though.\"\n\n\"A couple?\" she asked, a smug grin on her face. I figured I might as well start working on her now.\n\n\"Yes, Winters,\" I said. \"There are a lot of women out there who would gladly give a guy like me a second chance. It's just a shame you aren't one of them. Yet.\"\n\nI left without seeing the look on her face. When I got to the Marine booth out on the fairgrounds, Janine and one of the two I hadn't met earlier were just packing up. \n\n\"Hey, Brad,\" she said with a smile. \"I was wondering if you were going to forget.\"\n\n\"Nope,\" I said, instantly joining in to help them. \"Been thinking about it all day, actually. I would have tried to steal you sooner, but I'm pretty sure your Gunny could kick my ass.\"\n\n\"Yeah, he's got a black belt in just about all the MCMAP stuff,\" she said, referring to the Marine Corps' Martial Arts Program.\n\n\"So you understand, then,\" I said. \n\n\"Callahan,\" she said to the other Marine in the booth. \"This is Brad Carver. He's a sergeant on terminal leave from an intelligence post in Texas. Brad, this is Tom Callahan. He works in the office with me in Grand Junction.\"\n\n\"Nice to meet you,\" I said. \"You going to watch the show?\"\n\n\"Can't stand country music,\" he laughed. \"Just gonna head back to the RV to change, then go find somewhere to camp.\"\n\n\"You can't sleep in the RV?\" I asked.\n\n\"I could,\" he said. \"But I'm at a campground. I brought a sleeping bag. I'm sure I can find somewhere to roll it out.\"\n\n\"Fair enough.\" I said. We all chatted as we gathered all their material up. I told them my story - where I was stationed, why I was here and where I was going. I learned that Callahan had just started his assignment as a recruiter, and had been a special forces type stationed at Camp Pendleton before. Janine's first tour had been as an air traffic controller. With my future aviation plans in mind, I logged that little detail in my memory banks.",
        "\"It was nice meeting you, man,\" I said as Callahan grabbed the boxes and started to hump back to the RV.\n\n\"You too, man,\" he replied. \"Might see ya around the next couple days.\"\n\nJanine and I watched him walk away.\n\n\"Seems like a nice guy, if not a little shy and reserved,\" I said.\n\n\"He is, on both accounts,\" she answered.\n\n\"Well, this is just the place for him, then,\" I countered. \"There's no shortage of women just waiting to get their hands on a guy like him.\"\n\n\"I'd pay to see that,\" she chuckled. \"He's only been here a couple months, but I've never even heard him talking about women. I'm pretty sure he's a virgin.\"\n\n\"Holy shit,\" I said. \"Really?\" She just nodded. \"I thought you had to lose that to get through A-school.\"\n\n\"Yeah, you'd think so,\" she replied. \"I know I did. Anyway, I can't guarantee that. It's just a hunch. It doesn't matter, though. He's a good Marine, and a solid guy. That's all I care about.\"\n\n\"So it's just the three of you in that RV then?\" I asked.\n\n\"Just me, actually. Gunny's wife is here, and they've got a little camper way back in the quiet zone. And Marks is a manwhore. I'm sure he'll find some barely legal girl to fuck tonight, if he hasn't already.\"\n\n\"Nice,\" I said. \"So you get that whole big RV to yourself, huh?\"\n\nI'm sure she picked up the heavy dose of suggestion in my tone. I wasn't really sure why I was being so aggressive with her, but she hadn't voiced any problems with it just yet.\n\n\"I do,\" she said. \"But I don't want to go back there yet.\"\n\n\"Me either,\" I said. \"My friends have a pretty good spot picked out for the last concert, and I told them to save two spots.\" I considered that she was still wearing her fatigues. \"I guess you will want to go back to change, though, huh?\"\n\nShe grabbed a green duffel bag off the back table. \"Nope. I planned ahead. I'll just change right here, then we can go.\"\n\nThis time of night, there weren't going to be many people passing by the booth, but I was still surprised at her boldness.\n\n\"I'll turn my back,\" I said, and started to do just that.\n\n\"Only if you want to,\" she said. \"I've got a pretty awesome body, though, Brad. You might want to watch this.\"\n\nIf I was surprised before, I was downright shocked now. I expected her to be assertive and not wilt in the face of my flirting, but I didn't expect this. Still, I wasn't going to back down either, so I watched as she peeled off her blouse and undershirt, revealing a bra - sensible and supportive because she was a Marine, and pink because she was still a woman. Her breasts were probably a small C-cup, I guessed - not enough to suffocate in but more than enough to keep a man entertained. Her stomach was flat and toned, and I was pleased that I could still see a few inches of it when she pulled on a blue T-shirt.\n\nHer boots were the next to go, followed by her pants. Her legs were long, lean and muscular, and I had to fight off a strong desire to tackle her to the ground right there. She wore a pair of matching pink panties, but quickly covered them up with yellow cargo shorts. She slipped on a pair of sandals and threw her uniform stuff into the bag.\n\n\"Damn,\" I said. \"Thank you for saving me from a lifetime of not having seen that.\"\n\n\"I told you,\" she said. \"Next time, you have to change for me.\"\n\n\"I don't wear underwear usually,\" I said, joking.\n\n\"Even better for me,\" she replied.\n\nWe walked hand-in-hand back toward the merchandise table. I spotted Sara and Liz and their friends pretty easily, and we walked toward them. Someone had spread a blanket out for us.\n\n\"Hey guys,\" I said, and most of them turned toward me. \"This is Janine. She's a Marine recruiter working our booth this weekend. Janine, this is Sara, a friend of mine from Lackland, and Liz, her best friend. They're both from Grand Junction. And these are some of Liz's friends from Mesa State, and if I was a better person, I'd remember their names.\"\n\nI did remember Lindsay, the cute, shy soccer player, but I didn't want to admit that I'd remembered her name but forgotten the rest.\n\nThey did introductions all around. As one of the local recruiters, Janine had been to Mesa State a few dozen times during her stint, so she held a conversation with them about the school for a few minutes. Finally, Clay Walker came out, and I had Janine all to myself.\n\nShe settled back against my chest as we watched the show. A couple songs in, she wrapped the blanket around herself.\n\n\"Are you cold?\" I asked. Sure, the temperature had dropped a bit since the sun had gone down, but not enough to need a blanket.\n\n\"No,\" she said, looking back at me for a meaningful moment before turning her attention back to the stage. \"No, I'm not.\"\n\nI got the point. I slipped my hand under her shirt and rubbed her stomach, causing her to squirm.\n\n\"Oooh, a ticklish one,\" I whispered in her ear. \"I'll have to keep that in mind for later.\"\n\n\"Brad, you remember that stuff about Gunny and the martial arts?\" she asked, glaring at me over her shoulder.\n\n\"Yeah,\" I replied, not sure how that was relevant right now.\n\n\"I'm not so bad at it myself,\" she stated.\n\nI laughed at her faux threat. \"I bet I could take you.\" I lowered my voice, both in octave and volume. \"In fact, I bet you want me to take you.\"\n\nShe moaned slightly as my hands moved up and cupped her breasts through her bra. Her nipples were already straining against the material, so I pinched them lightly before massaging the rest of her chest. I felt my erection pressing into her back, and I could feel her squirming between my legs.\n\nI kissed her left shoulder and worked my way east, across her collarbone and the back of her neck before ending on her right shoulder. She started rubbing and squeezing up and down my legs, the only part of me she could easily reach. My hands were more daring, venturing inside her bra and rubbing her breasts directly. Her nipples felt even harder with direct pressure, and I pinched them as hard as I could. She gasped and inhaled sharply, but otherwise said nothing.\n\nI stayed on her breasts for a couple more songs, alternating between gentle massaging and purposeful kneading. She leaned her head back on my left shoulder, staring up at the stars as I relentlessly played with her tits. She'd worked a hand between our bodies and was rubbing the length of my cock with the same intensity I used on her chest. When I was being gentle, she was rubbing it lightly, but when I got rough, she tried to start a fire between her hand and my shorts with all the friction.\n\nI left my left hand on her left breast but slid my right hand down her flat stomach. I felt the heat coming from between her legs as I pushed my hand past the waistband of her shorts and wiggled my fingers into her panties. I captured her clit between my thumb and index finger.\n\n\"Fuck,\" she muttered into my ear, licking my earlobe as she talked. \"I'm so fucking horny right now, Brad. Please make me cum.\"\n\nI didn't say anything, but I rubbed her clit a little faster. Her right hand moved behind my head, forcing my lips down to her neck. I briefly dipped my fingers south into her pussy, gathering up copious amounts of her juices before returning to her clit. The extra moisture let me rub her even faster.\n\n\"Right there,\" she stammered. \"Oh fuck, Brad, don't stop.\"\n\nHer legs tightened around my hand as she came, but she managed to stay quiet. Her fingers pushed into my neck hard enough that I wouldn't have been surprised if she left prints.\n\n\"You're so naughty,\" I whispered as I rubbed from her waist all the way up to her neck, staying beneath her shirt the whole time. \"Cumming all over my fingers like that. I barely even know you.\"\n\nI chuckled a little to let her know it was a joke. She smiled with her eyes closed, loosening her grip on my neck but keeping her head on my shoulder. She resumed rubbing my cock through my shorts.\n\n\"Is that a complaint?\" she asked. \"It certainly doesn't feel like a complaint.\"\n\nJanine proved pretty talented with her fingers, working my zipper down with her hand behind her back. She didn't have to help my dick any more than that; once the door was open, it found its own way out to freedom. \n\n\"Wow,\" she said, taking the full length in her palm. \"Nice.\"\n\nI was expecting her to just give me a handjob, but then Clay Walker and his band decided to play their most famous song. Everyone around us stood up, including everyone in our group. Figuring no one would pay attention to us for a few minutes, I got a different idea. I fished a condom out of my pocket, then quickly unzipped Janine's shorts and pushed them down to her knees. She raised her eyebrow at me, but pushed them the rest of the way down, ensuring that they stayed under the blanket.\n\n\"Just how far are you going to take this?\" she whispered. I could barely hear her over the music and the crowd noise. I silently tore open the condom and rolled it onto my cock with one hand.\n\n\"I'm not going to stop until you tell me to,\" I whispered back. \"That answer your question?\"\n\nShe bit her lip and nodded.\n\n\"Get on your knees for me, Janine,\" I demanded. \n\n\"Won't they notice?\" she asked.\n\n\"Keep your back to me,\" I said. \"Unless they're looking real hard, it won't even look like you've moved.\"\n\n\"What if they look real hard?\" she continued.\n\n\"Then they do,\" I shrugged. She looked back at with a half-smile, as if she was still trying to figure me out. I stretched my legs out in front of me, making it easy for her to straddle me as she did what I asked. Her calves ran past my back and spilled out the back of the blanket, but it was dark enough that I doubt anyone noticed. I reached around her and pulled her panties to the side as she slowly descended toward me. I felt her heat on the tip of my cock when we made contact.\n\n\"You know,\" I said, talking softly in her ear. \"I've never fucked a Marine before.\" I wanted to give her one last chance to back out, knowing that even if she did, she'd probably just be postponing things until later, when we could have more privacy.\n\nHer eyes sparkled as she turned her head to look at me. \"Well, I can't take the invitation to the engraver until tomorrow,\" she said. \"So don't wait for one.\"\n\nI grinned back and pulled her hips down. The first couple of inches sank in easily, and I held her there so she could get used to it. After a few seconds passed, I let her slide slowly down my length until I was sheathed completely inside her.\n\n\"So full,\" she gasped.\n\n\"So tight,\" I muttered in reply.\n\nI was pretty limited as to what I could actually contribute from this position, so I just savored Janine's movements and watched as she slid her tight, toned body up and down on my cock. She wasn't moving very quickly because she didn't want to draw attention to us, but she made up for the speed by slamming down onto my hips as forcefully as she could.\n\nMy legs and hips were trapped by Janine's body, but I only needed one hand on the ground to maintain my balance. I slid the other around her body and between her legs, attacking her clit again. She drew in a quick breath as I pinched her sensitive nub, but managed to hold in any other responses.\n\nThanks to the surrounding crowd and Janine's slow, methodical pace, I knew I wasn't going to cum in this position. I got an idea that would speed up her orgasm, though, and I thought the blanket would cover it up perfectly.\n\nDoing my best to balance myself with no hands on the ground, I caught her by the hips on her next trip upward, holding her in position before she could come back down. I leaned back a little, holding my upper body at a 45-degree angle from the grass. This gave me a little bit of leverage, and I started to thrust upward into Janine.\n\nI heard her hiss softly in approval. I couldn't stroke her clit anymore, but she gladly took over. This new position was absolutely killing my abs, but I did my best to hold on and keep my pace up. Hopefully, the blanket was doing an adequate job of concealing our activities, but she was too close to cumming for me to care much.\n\nHer fingers clawed into my thighs and her legs tightened around me as another wave barreled into her. I fucked her that way for about 10 seconds before I sat up straight again, squeezing her breasts through her bra and letting her finish off her orgasm at her own pace, slowly and subtly riding up and down my still-hard cock.\n\nThe whole thing took less than four minutes. I only know that because the typical country song is less than four minutes long, and as Janine's breathing started to even out again, the band started its next song, and everyone around us sat down again. \n\n************\n\n\"Fuck, Brad,\" Kelly muttered, breathing heavily on the other end of the phone. \"Please let me cum.\"\n\n\"Cum for me, Kelly,\" I replied. She'd been rubbing her clit for the past 20 minutes, but as promised, I wouldn't let her cum until Janine's second one. \"Imagine that was you, kneeling over my cock, rocking up and down and impaling yourself over and over again...\"\n\nI trailed off as she came. It was her first of this particular story time, but I was pretty damn sure it was just the first of many.\n\n\"Good girl,\" I said when she'd calmed down some.\n\n\"I don't know how you do it,\" she said. \"You're 500 miles away and you can play my body like a piano.\"\n\n\"I told you, I can play the piano pretty damn well,\" I quipped.\n\n\"That was really fucking hot,\" she said. \"I've always thought it would be hot to have sex in a crowd of people.\"\n\n\"It was pretty intense,\" I agreed.\n\n\"But you didn't cum,\" she complained. \"So I'm guessing that means there was more.\"\n\n\"Oh, we've just barely started,\" I said. \"Before we continue, though, I need you to go get your toys and some lube.\"\n\n\"Silly boy,\" she said. \"My toys are right here next to me, and there's always lotion on my nightstand.\"\n\n\"You know me too well,\" I said. \"So that means you've already got a cucumber from your fridge, too?\"\n\nShe audibly gulped. \"Hold on.\" A few moments passed before she came back. \"I don't have any cucumbers. The best I could do is a few stalks of celery and a couple of bananas.\"\n\n\"We're going to have to work on your produce drawer,\" I said. \"Now, lay back and get yourself nice and relaxed. I'm gonna do my best to give you the same workout Janine just had.\"\n\n\"Ooh,\" she said. \"Goody, goody.\"\n\n********************\n\nJanine was still kneeling over my hips with my cock inside her, but the sexual haze dissipated some as the real world seeped in again. Somehow, I'd forgotten that we were sitting in the middle of a group of friends. I casually looked around to see if anyone had noticed. Most of Liz's college friends, sitting in front of us to the left, were oblivious. When I looked to my right, though, I found Lindsay, Liz and Sara staring at us, mouths open wide.\n\n\"Are you guys enjoying the show?\" I asked, trying my best not to bust up with a fit of laughter.\n\n\"I definitely enjoyed that show,\" Liz said, licking her lips just a little bit. \"I'm kinda sad it's over.\"\n\nLindsay's shyness took over, and if it hadn't been dark outside I'm sure I would have noticed her blushing as she turned away. Sara's reaction was the oddest, though. She nodded in agreement with her best friend, but said nothing. Her face was a mask of confusion, but I could see a hint of curiosity in her eyes. I bit back the glib remarks and egotistical boasts that came to mind - after all, nothing I could say now would have nearly the impact on her that watching me had.\n\nTomorrow, I reminded myself. \n\nJanine was aware of the banter, but since she didn't know anyone else, she said nothing. Instead, she just slowly rocked her hips as she waited. When Liz pulled Sara's attention back to the stage, I turned my own attention back to the woman on my lap.\n\n\"You still haven't cum,\" Janine pouted. She reluctantly slid her hips up and off my cock and reached down for her shorts. It took some work, but I finally pulled the condom off my engorged cock, pushed myself back into my boxers and rezipped my shorts. \"That's not fair.\"\n\n\"Well,\" I reasoned. \"You're not planning to ditch me and go to sleep after the concert, right?\"\n\nHer face screwed up in the classic 'Are you a moron?' look. \"Uh, no.\"\n\n\"Then I'm not worried.\" She flashed me a grin that promised she'd make the wait worth it for me. I had no doubts.\n\nThe band did a few more songs, and now that our extra-curricular activities were on pause, we actively enjoyed the show. We even joined the rest of the crowd in standing up for the two-song encore. I pulled my phone out when we stood up, and found two new text messages. One was a picture from Kelly, her legs spread wide with her brand-new dildo shoved in her pussy. I saved that one. \n\nThe other was from Chad, letting me know that he and Russ were half an hour away. He'd sent it almost an hour ago, so they'd be at the campsite and unloading their crap by now. I sent one back saying I'd see them after the show.\n\nI kept my body pressed tightly against Janine's while we watched the encore, and her hand was wedged between us, pressed flat against my cock. She'd kept me hard ever since I'd pulled out, and by the time the show was over, I was ready to throw her back down on the grass and fuck her senseless, security and any nearby children be damned.\n\nShe sensed my frustration, and as soon as the lights came up on the stage, she took my hand. \n\n\"We'll see you guys later,\" I said, leaving behind several giggling girls and a couple of jealous guys as we took off toward the campground. \n\nWe were eager, but not to the point of wasting valuable energy by running through the crowd. Our pace was brisk, but it was still a walk with hundreds of people around, so we had a little time to talk.\n\n\"You want to fuck all three of those girls that caught us, huh?\" she asked. I wanted to be surprised at her forwardness, but she was a Marine, after all. As the clich\u00e9 goes, there's no bullshitting a bullshitter.\n\n\"That would make for one hell of a weekend,\" I said. Her hand let go of mine and disappeared into my pocket. I felt her finger tips brush my cock through the thin fabric. \"It's already off to a pretty fucking spectacular start.\"\n\n\"Thank you,\" she said, genuinely smiling at me. \"I think all three of them would fuck you in a heartbeat.\"\n\n\"You think so, huh?\"\n\n\"I'm a woman, and I can read other women pretty well,\" she explained. \"I wouldn't bet more than a couple paychecks on it, but they all seemed pretty interested after watching us.\"\n\n\"Well, the little brunette, Lindsay, she's been flirting with me all day, though I got a na\u00efve, innocent vibe from her,\" I said. \"And Liz, the taller blonde, I'm not sure if she'd be interested or not.\"\n\n\"What about the other one? Sara, you said her name was?\"\n\n\"Her, I actually have fucked,\" I said. We finally made it through the gate between the concert grounds and the camping area. I could already see the gigantic Marine logo on the RV a couple of football fields away. Her fingers continued to rub my dick as we walked, and it was driving me batshit crazy.\n\n\"Ah, so she wants another piece,\" Janine said.\n\n\"The first piece she had wasn't all that tasty,\" I replied. \"It was my third time having sex. Let's just say that I was pretty terrible at it.\"\n\n\"Mmm,\" she mumbled. \"I've only gotten a little glimpse, but you're pretty much the opposite of terrible now.\"\n\n\"I'm glad you noticed,\" I said. \"And I'm planning to give her a full demonstration of just that tomorrow.\"\n\nShe laughed. \"Good for you. If you need someone to put in a good word for you...\"\n\n\"I appreciate that,\" I said. \"What about you? For someone who's usually buttoned up as tight as I would guess a Marine recruiter has to be, you're getting pretty wild tonight.\"\n\n\"Gunny's orders,\" she said.\n\n\"Really?\" I asked. \"He told you to fuck me in the middle of a crowd?\"",
        "\"Not that, specifically,\" she said with a grin. \"But he encouraged all of us to let loose this weekend. Work days are a grind. We put in 14-, sometimes 16-hour days, six and occasionally seven days a week. This is pretty much a vacation for us, and he wanted to make sure we took advantage of it.\"\n\n\"Ah,\" I said. \"I was kind of wondering about that. When you told me to pick you up at the booth, he kinda helped make that happen.\"\n\n\"Yeah,\" she said. \"He kind of sees me as the daughter he never had. I've been through a bunch of personal shit lately, and I wasn't exactly hiding that I was attracted to you. I guess he figured another Marine would take good care of me. So far, so good.\"\n\n\"It's a tough job, but hey,\" I said, expecting a stiff elbow to the ribs. Instead, I got a hard, painful squeezing of my cock. \"I kid, I kid.\"\n\n\"You better,\" she said, rolling her eyes as she smiled.\n\n\"What kind of personal shit?\" I asked. \"Anything you feel like talking about?\"\n\n\"Maybe some other time,\" she said. We were just 50 feet from the RV now. \"I don't want to ruin the mood tonight. I've just been in a bad situation the past year or so, and I'm finally free of it. I decided a couple days ago that this weekend is all about me. I'm going to have a good time and do what I want. I have a long, long list of sexual fantasies, and I'm going to see if I can't cross out a few of them before we pack up and go home.\"\n\n\"Good for you, this time,\" I said, echoing her earlier kudos. \"So just now...?\"\n\n\"Yep,\" she grinned. \"A couple of them rolled into one, actually. Sex with a stranger, and sex in public.\"\n\n\"It's a good start,\" I agreed. \"What else ya got?\"\n\nShe giggled. \"You're gonna volunteer, huh?\"\n\n\"Absolutely,\" I said. \"Tell me your biggest fantasy. The deepest, darkest desire in that sexy little brain. And we'll see if we can't make it happen.\"\n\nWe'd finally arrived at the RV, and in the light over the door, I could see her blushing furiously. \"It'd be way too embarrassing,\" she said. \n\nI grabbed her by the arm and slammed her against the side of it, forcing my tongue down her throat. She kissed me back just as furiously and worked her hand even faster against my cock. My lips left hers and went to her earlobe, and when I bit down on it, she yelped ever so slightly.\n\n\"I guess I'll just have to fuck it out of you,\" I growled. \"Inside. Now.\"\n\nShe unlocked the RV and I followed her up the stairs. Once the door was closed, I pushed her up against the counter in the little kitchenette and roughly pulled her shorts and panties to her ankles as she shrieked. With one hand, I fished another condom from my wallet, leaving the rest on the counter next to her head. With the other hand, I swatted her tight, toned little ass cheek.\n\nShe let out another of those cute little yelps as I managed to roll the condom on with one hand, a skill I'd been using a lot lately. I added one more swat to that cheek and two to the other before turning my attention to her pussy and my latex-wrapped cock. I knew she could take all of me from our exploits at the concert, so I plunged my entire length into her with one thrust.\n\n\"FUCK!!\" she shouted.\n\n\"Fuck is right,\" I snarled. \"I'm gonna fuck you until you can't see straight, Sgt. Andrews. You're gonna beg me to stop, and I won't. Not until you tell me all your dirty little secrets.\"\n\nI grabbed her hips and fucked her even harder. I wasn't going to last long - not this time, anyway.\n\n\"But you left me with blue balls out there, lady,\" I said. \"Plus, you basically gave me a handjob the whole way back here. You're such a fucking cocktease, getting off twice but leaving me hanging. I'm still gonna plow your hottest fantasy out of you...\"\n\nI pulled back on her blonde ponytail until her ear was next to my lips.\n\n\"... but first, I'm going to use you,\" I said firmly. \"And you're gonna fucking love it.\"\n\n\"I will,\" she said, gasping for air. \"Fuck me, Brad.\"\n\n\"Wrong answer,\" I said, smacking her ass again and pulling her hair so hard that she was almost standing up.\n\n\"Please fuck me!\" she shouted louder.\n\n\"You think I wanted you to say please?\" I laughed. Actually, she had a pretty sexy voice, and her begging me to give her my cock was pretty hot. Still, it wasn't what I was going for, so I slapped her ass again. I was hoping she'd figure it out soon, because I was getting close.\n\n\"Oh, my, fucking, God!\" she grunted, a word slipping out between each ragged breath. \"I dunno... I don't... FUCK!\" \n\n\"Think, Sgt. Andrews!\" I yelled.\n\nShe pulled her head forward so forcefully that she ripped her ponytail right out of my hand. She flattened her upper body against the counter, and I wished I'd pulled off her shirt and bra first, so she could feel the cold countertop against her nipples. Her arms flailed out and grasped onto anything she could. One hand grabbed a handful of paper towels, sitting on a roll on the wall, and the other reached back and clutched my upper thigh.\n\n\"I don't,\" she tried again, but I sped up and killed that thought. \"Fucking me so good. Please!\"\n\nI decided to let her off the hook, for no other reason than my orgasm was coming, and if she said what I wanted her to say, it would be even better.\n\n\"Use my name, Marine!\" I growled.\n\n\"Oh,\" she gasped, the light bulb coming on as she drew a deep breath. \"Fuck me harder, Sergeant! Pound my little pussy. Oh God, I want to feel you fill up my pussy. Fuck me, Sgt. Carver!!\"\n\nShe kept going as I kept pounding. No woman had ever used my military rank while I was balls-deep in her, and hearing Janine shout it over and over sent me hurtling over the edge.\n\n\"FINALLY!\" I shouted, spanking her ass as hard as I could while my hips became a blur. Within seconds, I was gushing cum into her hot pussy. She writhed and squirmed underneath me as I fucked her through my orgasm, and I was pretty sure she was close to her third of the night.\n\nSo of course, I pulled out as soon as I was finished. \n\n\"No, damnit!\" she whimpered. \"I'm so close!\" Her hand shot between her legs, trying to make up for my cock's sudden absence by rubbing her clit. I stopped that quickly, picking her up and depositing her on the carpet in front of the couch.\n\n\"You don't get to cum again, Sgt. Andrews,\" I said. We were into the roleplay now - even cooler since we were playing roles we actually had at other times - so I decided to keep it going. \"Not until you tell me what I want to know.\" \n\nShe spread her legs wide and I knelt between them, quickly ripping off the spent condom and replacing it with a new one before I could soften. I slapped her clit a few times, first with my fingers and then with my cock. She whimpered and thrust her hips up at me.\n\n\"Why are you being so cruel?\" she whined. \"Please, Sgt. Carver, just fuck me and make me cum, then I'll tell you whatever you want to know.\"\n\nShe bit her lip, which in my opinion is one of the sexiest things a woman can do. Lots of women think the puppy dog eyes or batting their eyelashes will bend a man to their wishes, and for most guys, maybe that works. For me, though, if a woman bites her lip and looks into my eyes after asking me for something, that's a real good way to get what she wants.\n\nNot this time, though.\n\n\"No, no, Sgt. Andrews,\" I said. \"I don't think I trust you. You're so greedy that if I gave in and let you cum right now, all you would do is beg me for another, and another, and another.\" I put my thumb directly on her clit and pushed down, getting another moan out of her. \"Next thing you know, the sun's coming up, and you've had 14 orgasms but we haven't crossed anything else off your list.\"\n\n\"I promise,\" she pled.\n\n\"A promise made in the throes of passion is a promise to be kept,\" I said, lifting her leg and nibbling under her knee. She giggled and squirmed. \"Or so the old song goes.\"\n\n\"See?\" she answered. \"That's proof right there.\"\n\n\"Yeah, but...\" I trailed off. I pulled her legs up and scooted her body toward me until her pussy was just inches from my face. She was clean-shaven - I guess in anticipation of her big weekend. Just her shoulders and head remained on the ground now. \"You're not in the throes of passion yet.\"\n\nWith that, I attacked her pussy with my lips and my tongue. I started on her clit, sucking it into my mouth and lashing it repeatedly with my tongue. My hands kneaded her ass cheeks as I held her against my mouth.\n\n\"Oh God,\" she moaned, her head thrashing from side to side.\n\nI knew if I stayed on her clit too long, she'd cum on my tongue, which would defeat the whole purpose of this thing. So I left her clit alone and pushed my tongue into her steamy opening, wiggling in as deep as I could.\n\n\"You taste good,\" I mumbled, though I doubt she could understand me. I removed my tongue for a second. \"Get naked.\"\n\nShe pulled off her shirt and bra as I renewed my assault on her nether regions. I went back inside her for a moment, but decided to get a little naughty. I pulled out and moved south, tickling her taint briefly before focusing my attention on her asshole.\n\n\"Jesus, that feels awesome,\" she moaned as my tongue slid all over her ass. \"How'd you know?\"\n\n\"I didn't,\" I said. \"I'm not trying to make you cum yet, remember? I'm doing this because I like it.\"\n\nThat wasn't entirely true. Even if I was keeping her on the line for now, I wanted her to enjoy what I was doing. Eventually, I sat her hips back on the carpet and laid down on top of her, balancing myself with my forearms on either side of her body.\n\n\"So, what's the problem here, Sergeant?\" I said, keeping up our Marine play. \"Do you just not trust me?\"\n\nI never broke eye contact as I pushed into her. I didn't take things slowly like I had on the grass, but I didn't go balls-deep with one stroke like I had a few minutes ago. It was a constant pressure, feeding her an inch at a time until all eight inches were nestled inside her. Finally, she remembered that I'd asked her a question.\n\n\"It's not that, Sgt. Carver,\" she moaned, slowly undulating her hips. \"It's just embarrassing.\"\n\n\"I'm not easily embarrassed, dear,\" I said. \"You're not going to tell me anything I haven't heard before. Hell, you'd be doing well if you came up with something I haven't done before.\"\n\nI stopped talking for a while so I could focus on my actions. Too slow, and she'd calm down too much, but too fast and I'd bring her off before I hit paydirt. I tried to find a rhythm that put us right in the middle, keeping her frustrated and right on the edge at all times without giving her the little push she so desperately wanted.\n\n\"Just think of me as your personal fantasy genie,\" I said when I'd gotten comfortable. \"You have some things you want to accomplish, and I'm yours for the rest of the night.\"\n\nShe just shook her head with a grin, and I knew she was going to tell me pretty soon. I still had some work to do, though. I fucked her straight missionary for another two or three minutes, then sped up like I was finally going to let her cum. She got close, and I pulled out again.\n\n\"GAHHH!!\" she shouted, pounding her fists into my chest. \"You're going to kill me.\"\n\n\"Not before you tell me,\" I said. I put her legs over my shoulders and plunged back inside. From this position, I went deeper inside her than I'd been all night.\n\nI gradually lowered myself to her, slowly pushing her thighs against her stomach and her knees against her tits. \n\n\"C'mon, Andrews,\" I grunted. \"You know you want to tell me.\"\n\n\"I do, but...\" she trailed off.\n\n\"But what?\" I asked. She didn't answer, so I grabbed her right foot off my shoulder and bit her Achilles tendon. She squealed, either in pleasure or because it tickled, I wasn't sure and I didn't care. I picked up my pace, sawing in and out of her as quickly as I could for half a minute. \"But. What?\" I growled again.\n\nHer head was doing that side-to-side thing again. Her face was flushed a deep, deep red, and if she'd been breathing any faster, she'd have been hyperventilating.\n\n\"You can't fulfill it for me anyway, Carver!\" she shouted, and my eyes widened a little. I hadn't considered that.\n\n\"Ohh. Something with a woman?\" I asked, figuring that actually, I probably could find someone to take care of that for her when we were finished.\n\n\"No,\" she said. \"Not into girls.\"\n\n\"Hmm...\" I said, continuing to think. It wasn't easy since I'd much rather have focused on what I was doing. It didn't take me long to get it, though. \"Oh,\" I said. \"You want another guy.\"\n\nHer upper chest, the only part of her that wasn't already red, quickly got that way. She shook her head negatively.\n\n\"No?\" I asked. \"You don't want two guys at the same time?\"\n\nShe'd been pinching her nipples, but she lifted one hand up and extended three fingers.\n\n\"Three!\" I exclaimed. \"You naughty, naughty little Marine.\"\n\nDespite our position, the smile she threw at me now was shy and demure, like she was looking for approval and confirmation. I leaned down and covered that smile with my lips, feverishly French kissing her as we fucked. Her lips met mine, tentatively at first, but then passionately as she realized I wasn't holding anything back.\n\n\"You're not disgusted?\" she asked when we finished, and I couldn't help but laugh.\n\n\"Disgusted? Absolutely not,\" I said. \"Andrews, I've been with three women at a time, and before that, I damn sure fantasized about it. I don't buy into the bullshit clich\u00e9, where if a woman sleeps around she's a slut, but if a man does it, he's a hero. Men and women are both allowed to like sex. I'm allowed to chase my fantasies, and so are you. You want to take on three guys at once? Good for you, and God bless you.\"\n\nShe smiled back at me as I resumed our torrid pace. \"Thank you. Like I said, though, you can't do that for me.\"\n\nI smiled back at her. The hell I couldn't. I decided to surprise her, though.\n\n\"Yeah, unfortunately, I only have one dick,\" I said. \"If I can't fulfill it for you, though, I can at least listen while you tell me about it.\"\n\n\"Fuck,\" she muttered when I thrusted in particularly hard. \"All three fucking me at once.\"\n\n\"Not taking turns, huh?\" I grinned. I knew what she was going to say next.\n\n\"No,\" she said. \"One in my mouth, one in my pussy, one in my ass.\"\n\n\"Ooh,\" I said. \"Like I said earlier. I've done that once or twice.\"\n\n\"Was it hot?\" she groaned. Now that her secret was out, I wasn't holding back.\n\n\"The girl came as hard as anyone I've ever seen,\" I said. \"Then she passed out and didn't wake up for 20 minutes.\"\n\n\"Yeah,\" she said, entwining her ankles around my neck. \"That's what I want. To feel so full, and so used, then just exhausted after.\"\n\n\"Mmm,\" I hummed. \"Good girl. You going to cum for me now?\"\n\nShe didn't answer, but she didn't have to. I hammered her as fast as I could, and I felt her fingers brushing against her clit.\n\n\"Oh God, Sgt. Carver!\" she groaned. It wasn't loud, but it didn't have to be. \"Please make me cum, Brad. I want to cum all over this cock. Oh...\"\n\nShe might have screamed, but she buried her face in my chest as pleasure washed over her. Her body spasmed uncontrollably for a few moments, and I never let up, continuing to plow her through her orgasm. I was fairly close to cumming, but I wasn't quite there yet. She kept shaking even after her pussy stopped vise-gripping my cock. It was easily her strongest orgasm of the night.\n\nIt wouldn't be by the time we were through, though.\n\n*******************\n\n\"CUMMING!!\" Kelly shouted, not for the first, second or third time during our call. I'd given her free reign to cum whenever she wanted, and she'd obliged. Currently, she was fucking herself with a banana while a smaller vibrator, one she already owned, was pushed an inch or so into her ass. The phone was lying on the pillow next to her head on speaker.\n\n\"That's it,\" I encouraged her. \"Pound that little pussy and soak my cock with your juices, Kelly.\"\n\n\"Gah...\" The rest of Kelly's blabbering was in a foreign language. I'm pretty sure she came down from that orgasm and rolled into a smaller aftershock before she relaxed enough to talk coherently again.\n\n\"That's so fucking sexy,\" she finally said. \"You actually did it. You fucked her fantasy out of her.\"\n\n\"I did,\" I said. \"And then, I turned her fantasy into reality.\"\n\n\"Holy shit!!\" she exclaimed. \"Really? How?\"\n\n\"Remember Russ and Chad? From the first night we had phone sex?\"\n\n\"Oh yeah,\" she said. \"You mentioned they were meeting you in Colorado.\"\n\n\"Yeah, they're here,\" I said with a laugh. \"And they made one hell of an entrance.\"\n\n***************************\n\nI stood and helped Janine up, and she clung to me as we walked toward the bedroom in the back. I deposited her on the bed.\n\n\"Rest for a minute,\" I said. \"When I come back, I want you to ride me. I haven't cum again yet, and I want to see this hot body bouncing up and down on me in all its glory. I might not be able to help you with your fantasy, but I'm gonna make sure this is some of the best sex you've ever had.\"\n\n\"Already done,\" she smiled back. I went back to the living area and collected our clothes. I pulled my phone from my pocket and sent a text to Chad. \n\n\"Walk toward the concert area on the main road through the camp,\" it said. \"You'll see an RV with a gigantic Marine logo on the side. Knock twice, then come in and walk to the bedroom. Come prepared, and bring Russ.\"\n\nI waited no more than a minute for the reply. \"Be there in five.\"\n\nI stuck the phone back in my pocket, grabbed the condoms and went back to Janine. My cock was still hard in the condom, and if it hadn't been, the sight awaiting me in the bedroom would have fixed it. Janine was sitting up against the headboard, with her back against the pillows. Her legs were spread apart with her knees bent, and she had two fingers buried in her pussy.\n\n\"I could stand here and watch you do that for another hour or two,\" I said.\n\n\"Aww, that would be no fun,\" she said with a grin.\n\n\"It would be for me,\" I said.\n\n\"C'mere,\" she said, beckoning to me with two slick fingers. \"I'll make it even more fun.\"\n\n\"So what other fantasies do you have, Sgt. Andrews?\" I asked. I sat down next to her with my back on the pillows, and she threw one leg across me and turned over so she was sitting in my lap facing me. She took my condom-encased cock in her hand and guided it inside her.\n\n\"I told you the big one already,\" she said. \"Sex in public was a big one, too. I grew up on a farm in east Texas, so I've always wanted to have sex in the cab of a tractor. I told you I was an air traffic controller before I went into recruiting, right? I'd love to fuck in an air traffic control tower, watching big airplanes land and take off while I get taken from behind. And um...\"\n\n\"And, um, what?\" I asked. I'd stumbled on another fantasy she thought was taboo. She sank down on my shaft, and I took one of her nipples between my teeth. \n\n\"I've always wanted to have sex with a black guy,\" she said. I did my best to contain my grin before it reached the concert grounds. This was going to work out even better than I thought.\n\n\"You want a horse cock, huh?\" I asked.\n\n\"Well, size matters, but that's not why. I've got plenty of that right here,\" she said. \"No, this is a family thing. My grandpa, my dad's dad, was a huge asshole when I was growing up. He was always mean to all the grandkids. He was also a huge racist. I'm talking KKK, burning crosses, black people were an inferior species, racist. He tried to pass that down to his children, but thankfully he was unsuccessful, at least in my dad's case. Anyway, once I got old enough to know what sex was... my earliest fantasy was to fuck a black guy, and have my grandpa walk in and catch me. He died a few years ago, but the fantasy is still alive and well.\"\n\n\"Well, I'm not black either,\" I said, still feigning ignorance. \"Sorry.\"\n\n\"Oh, I'm not complaining,\" she said. \"You're hung like one.\"",
        "\"Glad you approve,\" I said. I enjoyed holding her close against my body, but it wasn't going to work very well for what was about to happen. So I scooted us down the bed and lay down across the middle, with my knees bent over one side. It was a queen sized bed, so there was still room between my head and the other side.\n\nShe sat up straight and pistoned herself up and down on my cock. Even through the condom, I could feel the heat emanating from her pussy as she slid up and down. Her tits weren't huge, but she was slamming down on me so hard that they jiggled a little with each stroke.\n\nI pulled her down to my chest and fucked up into her a little bit before letting her sit back and up and control things. We went back and forth with those two positions for another few minutes when the two knocks came.\n\nJanine sat up straight with a scared expression on her face.\n\n\"The other guys said they weren't coming back tonight,\" she said. \"I guess one of them changed their mind.\"\n\nShe tried to get off my lap, but I held her in place. We heard the door open and close, then footsteps on the floor.\n\n\"Brad, you have to let me go,\" she said. \"Gunny wanted me to let my hair down, but I don't think he meant for me to fuck you on his bed.\"\n\nI just smiled back at her.\n\n\"Hello,\" I heard Russ' voice call out. \"Anybody home?\"\n\n\"I don't remember telling you to stop,\" I said to Janine, and started fucking my hips back up into her. She was so totally confused, but when Chad and Russ entered the bedroom, the look turned to shock. I noticed that she made no move to cover herself up, though.\n\n\"Brad?\" she asked.\n\n\"Janine, meet my friends,\" I said. \"The guy on the left is Sergeant Russell Spencer, but if you call him anything other than Russ, he won't answer. The tall, black gentleman on the right is Staff Sergeant Chad Heyward. They were my roommates in San Antonio. I told you earlier there were a couple more Marines coming tonight. These guys are it.\"\n\nShe said nothing, but she kept looking back and forth between me and the two newcomers. I was still thrusting my cock up into her as well as I could.\n\n\"Chad, Russ, this is Sergeant Janine Andrews,\" I said. \"She's a recruiter here in Grand Junction, and she's working the Marine booth at the festival.\"\n\n\"Nice to meet you,\" Chad said, grinning hungrily at her. Russ said something similar, and so did Janine.\n\nI looked up at her. \"Trust me?\" I mouthed. She swallowed hard and nodded.\n\n\"As it turns out, Sgt. Andrews here has a few sexual fantasies. She had a lot more earlier, but we managed to turn a couple of them into reality. Still, she has one or two others that I can't do anything about, at least not by myself.\"\n\n\"You're gonna tell them?\" she asked. She sounded hesitant, but there was a slight twinkle in her eyes. Plus, she started her hip action up again, and was fucking me now despite the audience.\n\n\"I am,\" I said. \"You guys want to get undressed and join us?\"\n\nThey nodded and started getting out of their clothes.\n\n\"One of them, which I actually learned about after I texted you, is to have sex with a black guy.\"\n\nShe and Chad shared a look. If he was hungry before, he was starving now.\n\n\"But the one I asked you guys to come over for involves all three of us. I'm sure you're both familiar with the term 'airtight?'\"\n\nRuss was somewhat surprised, but he kept that to himself. I could tell by the look on Chad's face that he just wanted a piece of what I was having, and he didn't really care how he got it. I hadn't really thought about it, but she was the textbook definition of Chad's type - blonde with an incredibly athletic body and girl next door looks.\n\n\"Airtight?\" Janine asked me.\n\n\"Mm hmm,\" I said. \"It's the porn term, but it works. All the holes filled. No air gets in or out. I mentioned that I'd done it before, right? I did it with these guys.\"\n\nShe stared down at me, and I sensed a little bit of hesitation.\n\n\"Hey,\" I said softly. \"It's your fantasy, okay? If you want to dictate what happens, then do that. If you want us to do what we're going to do, and then just stop us or change something if you want, that's fine, too. Nobody will do anything to you you're uncomfortable with. These two assholes are a lot of things, but neither of them has ever had to force a woman to have sex with him, okay?\"\n\nWe were all Marines. Fucking with each other was just par for the course.\n\n\"You're in good hands,\" I reiterated. \"All six of them.\"\n\nBoth guys were naked now, and as she continued to fuck me, they stood on either side of my head on the opposite side of the bed. I thought Janine was going to faint when she laid eyes on Chad's cock. Mine was a little thicker, but his was an inch or so longer, and it hooked a little bit at the end. Without any further conversation, she took Russ' cock into her hand and took three inches of Chad's dick into her mouth.\n\nI pushed Janine's hips up in the air so I could fuck her while she was taking care of Russ and Chad. I hadn't cum when she told me about her fantasy, so I was relatively close to exploding, but since it was my second, I could hold off a bit. I wanted to wait until we'd stuffed her in all three holes before I came.\n\nJanine went back and forth, first taking Chad as far into her mouth as she could and jerking Russ off before switching and inhaling Russ' cock while she jerked off Chad. Meanwhile, I lay below her, pounding up into her as hard as I could. I'd learned through three orgasms that Janine came from hard, constant contact, and I was hoping I could bring her off once more by myself before the other guys got directly involved.\n\n\"You like this, don't you?\" I asked her. Normally all three of us were pretty vocal when teaming up on girls, but since Chad and Russ walked into the situation blind, they were letting me lead the way. \"One guy fucking you while you suck off two others... I bet you just love being the center of everything, huh?\"\n\nShe moaned, and I'm sure it would have been in agreement, but her mouth was full. Janine was close to cumming, and both guys noticed. Each grabbed one of her tits and pulled hard on her nipples, matching the pounding I was giving her pussy.\n\nJanine sat up straight as she came again. Chad was in her mouth at the time, and with some quick thinking and impressive agility, he leapt onto the bed so he could stay there. I'm sure she would have screamed otherwise.\n\n\"So, how do we do this?\" she got out before letting Chad's dick go and collapsing on top of me. \n\n\"You didn't happen to bring lube on this trip, did you?\" I asked.\n\nShe shook her head, but I saw Russ grinning as he moved to the other side of the bed, behind Janine. He grabbed his shorts and got some things out of them. He threw a few condoms onto the bed, and held up a bottle of lube.\n\n\"You said to come prepared,\" he said.\n\n\"Well aren't you just a perfect boy scout?\" Janine smirked, looking back over her shoulder at him. \"My hero.\"\n\nLike I said - Marines fuck with each other. Doesn't matter if we know each other or not. \n\n\"I'm about to stick my cock up your ass, Sgt. Andrews,\" Russ said. \"You sure you wanna make fun of me right now?\"\n\nThat was about as good a comeback as I'd ever heard, and three of us guys started laughing. Janine didn't join us - instead, her eyes went wide as she realized that this was really going to happen. She swung her glance over to Chad, now half-kneeling on the bed with his cock waving at her, before looking back at me.\n\n\"I kinda want him to fuck my ass,\" she said softly, her lips just inches from my ear.\n\n\"Then he will,\" I said. I didn't think Chad could hear our talk, but he was going to love this. \"But trust me. Let's start this way and work up to it. Have you done anal before?\"\n\nShe nodded. \"Not often, but enough that I'm used to it.\"\n\n\"Good,\" I said. \"You're still gonna feel really, really full, and it might be a little uncomfortable, but it'll be better than if you hadn't done much back there. Just relax as much as you can and enjoy yourself.\"\n\nDespite my words, she tensed up a little as Russ, all protected and lubed up, positioned himself against her rosebud. I gave her little, gentle thrusts to keep her juices flowing, but I kept her still as he pushed forward.\n\n\"Holy shit,\" she hissed. \n\n\"This is the worst part,\" Chad said, the first words he'd said since he shook Janine's hand. \"Like Brad said, just relax. Russ knows what he's doing.\"\n\nRuss worked the first couple of inches in slowly, and I could feel the intrusion through the membrane in Janine's pussy. Once her ass loosened up a little, though, he didn't have much problem getting the rest in. He and I settled into a nice little rhythm, alternating every three or four strokes. She sat up as much as she could with two cocks in her and sucked Chad back into her mouth.\n\n\"Fantasy fulfilled,\" I grunted. She just groaned in response.\n\nJanine didn't last long this first time, cumming not long after Russ and I started to really give it to her. The slow, controlled pace we were using allowed me to calm down some, so I was still a good ways off of cumming, but I could tell Janine's tight ass was pushing Russ to the limit. It was an unspoken agreement, but I stopped thrusting into her pussy as Russ sped up, and within seconds he was cumming in her ass.\n\n\"Fuck, that was hot,\" she said as Russ pulled out of her. He got up to discard his condom. \"Where's he going?\"\n\n\"To wash up,\" Chad said. Now on my own between her legs, I started fucking her in earnest again. Chad stood up, one leg on either side of Janine and I, and stroked his cock in and out of her mouth. \"Can never be too clean.\"\n\n\"I want to switch,\" she said after a minute or two. \"I want all of you in each hole tonight.\"\n\nChad's eyes widened in surprise.\n\n\"You want this in your ass?\" he asked.\n\n\"Uh, yeah,\" she said, as if that was the dumbest question ever. \"Why?\"\n\nI took that one. \"None of the girls we've done this with has ever let Chad in her ass. Only one even let him in her pussy while someone else was in her ass. There's a point when a cock can be too damn big.\"\n\n\"I usually get the mouth,\" Chad said.\n\n\"Well, not tonight,\" she said. \"Since this will be a first for you, too, how about we do that as the finale?\"\n\n\"Sounds good,\" he agreed. His smile lit up parts of Ethiopia. \"Course, you know what that means.\"\n\nShe apparently didn't. I'd already pulled out and was sliding out from under her.\n\n\"That means I get that pussy now,\" he said, taking my place on the bed and grabbing a condom from the pile. \"And now Brad gets that ass. You're going to enjoy this.\"\n\n\"We just did it, didn't we?\" she asked.\n\n\"Don't get me wrong, no woman has ever complained about my boy Russ,\" Chad said. \"But Brad's got a couple inches on him, and he's a lot thicker, too.\"\n\nIt wasn't too manly to talk about another dude's equipment, but Chad's voice was in teaching mode now. He was studying to be a teacher and coach after he got out of the Corps, and that's what he was doing now - simply explaining to Janine what was about to happen and what she was going to feel.\n\n\"And of course, you're going to have me in your pussy at the same time. So multiply all that times five or six.\"\n\nHer eyes widened a little bit. She looked back at me as I knelt behind her.\n\n\"Just you first, by yourself,\" she said. I smiled in understanding and nodded. \n\n\"I'll be gentle,\" I promised.\n\n\"You don't have to be,\" she said. \"Don't go slamming it up in there in one shot, but slow and steady. I want to get used to that first,\" she finished, pointing at my cock.\n\nThanks to a fresh application of lube, I slipped the head of my cock past her tight ring immediately. Her back stiffened up some as I pushed a couple more in. Russ came back in from the bathroom as I passed the halfway point.\n\n\"Round 2 already, huh?\" he asked, taking his place on the bed and offering his cock to Janine. It had softened some, but I figured she'd have him hard again in no time.\n\n\"This one doesn't waste time,\" Chad said. His kept his cock right against the opening of her pussy, ready and waiting to enter when the time was right. In the meantime, his fingers were working over her clit.\n\n\"You ready?\" I asked Janine.\n\n\"For what?\" she answered.\n\n\"This.\" I slowly pushed the rest of my cock into her ass, feeding her an inch or so every 10 seconds until I was buried to the hilt.\n\n\"Fuck, no, I wasn't ready for that,\" she moaned, looking up at Russ. \"Does he have a baseball bat in me?\"\n\n\"Not quite,\" he laughed. \"Probably feels like it, though.\"\n\n\"That comes next round,\" Chad said.\n\n\"Next round?\" Russ asked. \"Wait... is she gonna do what I think she's gonna do?\"\n\n\"Yep,\" I said, remembering that he was in the bathroom and hadn't heard her plans for the finale. \"Now shut up so I can fuck this woman's incredibly tight ass.\"\n\nI fucked her slow and steady, just like she asked. I pulled about halfway out with each stroke before pushing back in. I picked up the speed just a little bit and gave her a few quicker, shorter strokes before burying myself again and holding it there.\n\n\"You're up,\" I said. Everyone knew what that meant. I pushed Janine down until she was lying flat against Chad. That meant she had to stop sucking Russ' cock for a minute, but she was going to need the support.\n\nI felt him enter her immediately. What was already a snug passage became almost impossibly tight as he pushed inch after inch into her. Lubrication wasn't a problem, thankfully, and he was balls deep within a minute or two.\n\n\"Breathe, Janine,\" I reminded her.\n\n\"How?\" she sputtered.\n\n\"Through your nose,\" I replied. She sat up just a little so Russ could complete the third side of our triangle.\n\nI held Janine's hips firmly, moving them ever so slightly as Chad started to pump into her. When I found a hip angle he could use to consistently go balls-deep, I adjusted my own angle and started to fuck her from the other end. We didn't need any kind of rhythm; as long as her hips weren't moving, we could both take her as hard as we wanted.\n\nWe figured out that she liked it best when we both pulled almost all the way out then pushed back in together, so that's what we did. With Chad on the other side, Janine's ass was almost too tight, if there is such a thing - I couldn't build up enough speed to get near an orgasm, even though I'd been fairly close since before Chad and Russ even arrived. \n\nRuss was up to full hardness and held Janine's head in place while he fucked her throat.\n\n\"Jesus, she gives good head,\" Russ stammered. \"Glad I just came a minute ago, or I'd be gone again.\" I decided that would be where I finished, since it wasn't going to happen in her ass.\n\nWe were still having fun, though, so I kept thrusting in and out, marveling at how her ass just seemed to swallow up my entire eight-inch cock. My pace stayed steady and constant, but Chad kept moving faster. When he came, he was fucking Janine as hard as I'd ever seen him fuck any girl, which was quite an accomplishment on his back. His orgasm pushed Janine over the edge, too, and she screamed around Russ' cock as she came. \n\n***************\n\n\"BRAD!!\"\n\nI'd lost count, but she was cumming again. I'd made her press the tip of the long, blue vibrator against her ass, providing her extra stimulation while she plunged the dildo in and out of her pussy. When I first described filling all of Janine's holes, I'd also made Kelly deep throat the banana she'd been fucking herself with earlier, but I liked her voice too much to keep her mouth occupied for too long.\n\n\"Fuck, baby,\" I said now. I'd cum multiple times with Janine, so while Kelly had gotten off a bunch during our call, I hadn't just yet. That was about to change.\n\n\"Cum with me!\" she shouted. It wasn't a suggestion or request. \"Please, Brad! I want you to cum in my ass.\"\n\nI wanted that, too, and that's what I was visualizing when my orgasm hit. There wasn't a whole lot left in the tank, but there was enough to hit my stomach with three or four decent shots. I was more focused on Kelly's voice and trying to memorize every delectable sound she made in the throes of passion.\n\n\"Fuck, honey,\" I said. \"I didn't think I could do that again tonight, but just hearing your voice is making me crazy.\"\n\n\"I know the feeling,\" she said. \"You joked a week ago about giving me double digit orgasms, and while I definitely stopped counting, I think you might have succeeded. I'm completely fucked out.\"\n\n\"You did so good, baby,\" I said. \"I always say this, I know, but that was definitely the best phone sex we've had.\"\n\n\"Until the next time,\" she added.\n\n\"Of course,\" I laughed. \"There is more to the story, though.\"\n\n\"Mmmm,\" she said. \"I'm listening.\"\n\n************************\n\nIf I'd thought Janine's ass was tight before, it went to a whole other level when she came. She gripped me so tight that I honestly though my cock might decide to stay with her. It was as much pain as I'd ever felt during sex, and while I said nothing, it was apparently obvious on my face.\n\n\"Relax, baby,\" I heard Chad say as she collapsed onto him. \"You can't take it with you.\"\n\n\"What...?\" was the only word she could get out.\n\n\"Relax your ass,\" he said. \"Brad's being a trooper, but I'm sure he'd like to take all his equipment with him when he leaves.\"\n\n\"Oh, shit,\" she said, a sheepish grin on her face as she looked at me. I felt her loosen some, but she could only do so much with two huge poles shoved into her.\n\n\"You're gonna have to move, Chad,\" I said. He nodded, and the pressure on my cock decreased immensely as he started to pull out. Once he was gone, I pulled out and fell onto the bed.\n\n\"Did you cum, Brad?\" she asked me. I just shook my head.\n\n\"How the fuck not?\" Chad asked, surprised.\n\n\"You're going to see in a minute,\" I said. \"Sometimes, there's such a thing as too tight.\"\n\n\"I can't wait,\" Chad said, \"but after that, I think we need a break.\"\n\n\"Who does?\" Janine asked. \"I don't. I'm all stretched out now. You might as well finish me off.\"\n\nChad's smile was back in full effect now. She was almost as eager as he was.\n\n\"Let's change it up a little,\" I heard Russ say, but it trailed off as I went to the bathroom. I removed my condom and gently stroked my cock, making sure all of it was still there. I grabbed a wash cloth, soaped it up and cleaned my cock. The condom kept me clean, but since I was planning to cum in Janine's mouth, I didn't want it to taste like rubber.\n\nWhen I got back, Chad was still on his back, but his legs were now hanging over the side with his feet on the floor. Janine was on her back on top of Chad, who'd worked about half his cock inside her ass. Russ stood in front of them, holding up her right leg with one hand and finger-fucking her pussy with the other.\n\nI stood in the doorway observing as Chad eventually bottomed out inside her. She wasn't stretched quite as wide as she had been with me, but he was plumbing depths that I couldn't reach. \n\nRuss stepped up and added himself to the mix, and I stood at the foot of the bed, my cock just inches from Janine's lips. This was the one thing she and I hadn't done tonight, and after Russ' endorsement, I was looking forward to it.\n\nWith a silent signal, Russ and I timed our entries so that we both penetrated Janine at the same time. He went all the way in with one thrust, and she got about five inches in her mouth before I hit her throat.\n\n\"Unnngg,\" she said as the three of us filled all her holes simultaneously for the third time. I wasn't sure what the other two had planned, but I had enough for one last awesome orgasm.\n\nApparently, Russ had the same idea; he wasn't holding anything back as he attacked Janine's pussy with a vengeance. Janine was doing her absolute best to stay relaxed so that Chad could do something with his cock besides just keep it buried inside her. As such, she wasn't really focusing on her blowjob, but I was okay with that. I weaved my fingers through her hair and held her in place while I fucked her mouth.",
        "We stayed that way for about 15 minutes, trying to give Janine a hell of a ride. She wanted to feel used and exhausted afterward, and I was going to make sure she did. I know she came at least twice more in that time, but I was starting to lose count. Without being inside her, it was hard to tell when she was cumming and when she was just moaning because of all the sensations she was experiencing. She wasn't using anything resembling English now, just babbling and groaning in between breaths.\n\nThe other two had cum once, but I hadn't since long before they'd arrived. I'd been holding out for more than half an hour, and Janine's tongue was pretty damn talented, so I knew I was going to get there first. I told her I was cumming, and her only response was to slap herself on the cheek. I assumed that was a signal to cum in her mouth, so that's what I did. I let the strongest blasts coat her tongue, but I really wanted to cum on her tits, too, so I pulled out and let the last few spurts splatter her chest. It was a pretty large load, so there was plenty for her to play with.\n\nShe was rubbing one string of my cum around her nipples when Russ announced he was there, too. He pounded her hard for a few more seconds before holding himself inside, only pulling out when he needed more friction for another spurt. \n\nI felt like I'd given Janine her money's worth for her fantasy, so I pulled my softening cock from between her lips. Russ' cock was getting soft, too, making it easier for Chad to move inside Janine's ass. He started thrusting his hips upward, impaling her even farther on his cock. When Russ pulled out altogether, he turned into an upside-down jackhammer.\n\n\"Oh, fuck,\" Janine stammered. \"Fuck me. Fuck me with that big, black cock, Sgt. Heyward.\"\n\n\"That's Staff Sergeant Heyward,\" he growled, letting go of her hips just enough to reach around and lightly slap one of her tits before replacing his hand. I hadn't thought about it, but Chad actually outranked her.\n\n\"S...sorry,\" she managed. It was clear that she was having trouble forming coherent thoughts. She had enough brain power for two tasks: breathing and fucking. The rest didn't make sense to her right now. \"Fuck... gonna make me cum again.\"\n\nRuss was already putting his clothes back on, expecting that he and Chad would make an exit after they were finished. I still wanted to make sure Janine enjoyed this as much as she could. \n\nShe had one hand between her legs, rapidly massaging her clit. I pushed her hand out of the way and replaced it with my tongue. Luckily, Chad's cock was on the other side of the intersection, pumping his hips ever faster as he inched toward another orgasm of his own.\n\nIn addition to my tongue on her clit, I added two fingers in her pussy and listened as she went ballistic. Her head thrashed from side to side, her blonde hair resembling a tornado as her final orgasm overtook her. As soon as I moved my mouth away, Chad resumed fucking her as hard as he could.\n\nI went out into the living room to pull my own clothes on and give Chad time to finish up. A few moments later, I heard him grunt loud enough to alert the local authorities, then go completely quiet. We'd done this enough times that I knew that meant he'd finally finished her off. \n\nWhen I went back to the bedroom, Janine was lying flat on her back, still atop Chad and still with his cock buried in her ass. It took a second, but I noticed something else, too: Janine was asleep.\n\n\"You got her, bro?\" I asked Chad. He was lying under her, and his rapid breathing was making Janine's body rise and fall.\n\n\"I got her,\" he confirmed. \"I mean, you found her, man. Not trying to step on your toes. You can do whatever you want to do, but I think I'm gonna stay here until she kicks me out.\"\n\nI'd kind of figured that earlier, but this confirmed it - Chad was smitten with this girl, or at least, as smitten as Chad ever got, meaning he'd at least remember her name in the morning. \n\n\"Nah,\" I said. \"She was fun, and I like her, but not like that. Just take care of her.\"\n\nIt was odd seeing Chad interested in a girl outside of sex, as we were all kind of cut from the same \"happy bachelor\" cloth. But hell, I was pretty well past that, too, so good for him. At least he'd actually met the object of his affections.\n\nRuss and I left quietly left the RV and headed back toward camp. He was talking about what other trouble he might get into tonight, and I was rooting for him. Me, though? I had a story to tell, and only one girl I wanted to tell it to. \n\nWe were near our site when a group of people sitting around an active barbecue grill offered us a beer. There were a couple of hot women in the group, so I knew Russ would accept. I politely declined, told Russ I'd see him tomorrow, then headed back to the site alone.\n\nI didn't stay that way, though. There were nearly a dozen people near our tents when I got back. We'd been stuck in the dreaded 'quiet zone,' so they weren't playing any music and were keeping the conversation down to a very dull roar, but they were still hanging out. I wondered why they were doing that here instead of one of the normal campsites on the other side of the main walking trail, but I got my answer pretty quickly.\n\n\"What the hell, Brad?\" Sara asked when I was close enough that she didn't have to yell. \"You fucked that girl right in front of us.\"\n\nLiz was on one side of her looking slightly amused and more than slightly drunk, and Lindsay stood to Sara's other side wearing a look I couldn't really place. Two of the other girls were Liz's school buddies, and there were some other girls and a couple guys hanging around that I hadn't met. Everyone was listening to us pretty closely.\n\n\"I did,\" I agreed. \"Then I spent another hour or so doing it in private.\" Well, mostly, but that wasn't my story to tell. There was a good chance we'd all hang out again tomorrow, and I didn't want things to get too awkward. \"Are you offended, Sara?\"\n\nI don't how she was expecting me to reply, but from the look on her face, she hadn't expected that. She was downright mad at me when I'd showed up, but now, she was... something else. What, I didn't know.\n\n\"It takes more than that,\" she said after a long pause. \"I just thought we'd get to hang out some, and I wasn't here five minutes before you ditched me.\"\n\nIt was my turn to be thrown off by her words, and I stood there trying to figure things out for a second. Had she been planning to try and do something with me again while we were here? Nothing she'd ever done or said made me think she'd ever consider it. Before I could reach any conclusion, she kept talking.\n\n\"Oh well,\" she said. \"She was smiling, so she was at least pretending to be satisfied. Good to know you don't leave every woman you're with hanging.\"\n\nLiz rolled her eyes slightly, and Lindsay looked at the ground. The other girls' mouths hung open, but they had the good sense to not engage their voices. The two guys chuckled. \n\nMe? I just stood there. I was somewhat surprised that I didn't get mad at her. She'd made the joke before, but always privately. The fact that she aired out my dirty laundry in front of a bunch of people I didn't even know should have, by all accounts, made me fucking furious. And as recently as two weeks ago, it probably would have.\n\nTonight, though, I just couldn't find the anger. For one, I was exhausted from marathon fucking Janine, and regardless of Sara's talking, I knew Janine would have no complaints tomorrow that didn't involve soreness and maybe fatigue.\n\nFor another, I had someone else I wanted to talk to right now. Kelly had tomorrow off and another family function to attend, but she'd already warned me that she had to work a double-shift on Saturday, starting at 9 a.m. and not leaving until after midnight. I wanted to get in as much time with her as I could before that.\n\nThe biggest reason I let Sara's remark slide, though, was because I knew I'd settle things with her tomorrow. I wasn't entirely sure what I was going to do yet - I needed sleep before I figured that out. \n\nI knew how to start it, though.\n\n\"You know what, smartass?\" I said, advancing toward her. It wasn't threatening, but it was a confident, purposeful walk. Her eyes danced as I got closer, and she stuck her tongue out at me. \"I'll deal with you tomorrow. But here's a little preview.\"\n\nBefore she could get her tongue back between her lips, I sucked it into my mouth, engaging her in a French kiss that shut up any of the would-be shit talkers behind her. She didn't kiss me back immediately, and if she didn't at all, I'd have been okay with that. Still, I wanted to make my point a little longer, so I put my hand behind her head and pulled her lips in even harder. This time she did respond, sweeping her tongue upward inside my lips and across my teeth. When I let her go, she was speechless. For that matter, so was everyone else.\n\n\"I'll see you bright and early, Sara,\" I said. \"But that should be enough to get you through until then. For now, I have a phone call to make, then I'm going to bed. You ladies have a great night.\"\n\nI left out the word \"gentlemen\" on purpose, hoping the two guys who'd laughed at Sara's joke took that for the \"fuck-you\" I'd meant it to be. Without looking back, I got into my tent, zipped it up, shed most of my clothes and crawled into my sleeping bag.\n\nThen I picked up the phone.\n\n*********************\n\n\"Don't worry about the assholes, Brad,\" she said. \"What the fuck do they know? You made that girl cum like 19 times tonight, and then you made this girl cum 19 times just now. If they knew all the things you can do that they can't, they'd be crying, not laughing.\"\n\n\"I know,\" I said. \"I think it just hit a nerve. She's one of the few sexual regrets I have. Plus, she's never really brought it up in public. For some strange reason, I'm not really mad at her about doing it tonight, but it did sting a little.\"\n\n\"Let her off the hook, Brad,\" she said. \"Look, when she went out with you a few years ago, she was likely expecting amazing sex, and she was disappointed. Then not only did she have to watch you give it to Janine during the concert, but she was probably planning to get some of her own after the concert, but you spent two more hours giving Janine even more.\"\n\n\"You're telling me she was jealous?\"\n\n\"It couldn't be any more obvious,\" Kelly said.\n\n\"Well, she can wait her damn turn,\" I said. \"Luckily for her, her turn comes tomorrow. I'm gonna make sure she forgets all about what happened three years ago.\"\n\n\"That's the Brad I know,\" she said. \"What's your plan?\"\n\n\"I need a plan?\" I laughed. \"It's far too late to come up with a plan tonight. I'm sure I'll think of something.\"\n\n\"You will,\" she said. \"And you'll have help. I'll think about it and give you some ideas. This is nuts, but apparently listening to all of this stuff isn't enough for me. I'm actually going to help you get laid, Bradley.\"\n\nI had the world's most amazing girlfriend, and I told her just that before we both drifted off to sleep.\n\n**************************\n\nThis is the last of the three chapters I've been hanging on to for a few months, so don't expect another chapter in the next few days. I'm more than halfway done with the next one, and there's only three after this one, perhaps four. I know it's taken a long, long time, but there is light at the end of the tunnel. Let's hope it's not an Amtrak.\n\nAs always, vote, comment and send feedback. It's my paycheck - it keeps me going and makes me write faster."
    ],
    "authorname": "SpotInTheSand",
    "tags": [
        "brad",
        "kelly",
        "janine",
        "chad",
        "russ",
        "anal",
        "airtight",
        "marines",
        "black",
        "blonde"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/brads-road-trip-ch-16"
}