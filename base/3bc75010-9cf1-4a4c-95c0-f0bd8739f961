{
    "title": "A Dish Best Served Cold Ch. 04",
    "pages": [
        "Chapter Four -- Motive, Means and Opportunity\n\nSteve Edwards was continually amazed that the average civilian thought that detectives had some sort of super power when it came to solving crimes. They believed TV that shows where CSI techs wearing Armani suits or Prada skirts found murderers by putting a hair sample into a machine that gave them the perpetrator's name, current whereabouts and shoe size or that police officers studied a crime scene and suddenly had an 'Ah Ah!' moment that solved the case.\n\nThe reality is that most of it was pure grunt work. Interviewing people, analysing the evidence and using open sources to tie clues and suspects together.\n\nFor instance what did Steve know about Felicity Benson? Spencer Duvall had visited her club the night he was murdered and Spencer had even spoken to her. Felicity was in Houston when Benjamin Roach and Jamaal Washington were murdered. A woman of similar features was seen in the vicinity of the crime scene but that didn't mean much as the area around the motel and truck shop was lousy with women who wore too much makeup, short skirts and high heels... but rat-face was pretty certain that it was Felicity.\n\nSteve knew nothing about drag queens but he had quickly educated himself using open source material on the internet. Drag had become a form of mainstream entertainment during the second decade of the twenty-first century mainly due to the popularity of the TV show RuPaul's Drag Race and had jumped the fence from being a niche trend in the gay scene to become a valid art form in its own right.\n\nMost of the queens had drag names that held subtle or obvious innuendo with references to drugs and sex or had names that were simply wordplay. The innuendo in the name Felicity Goodnite was obvious. Most of the famous queens had large local, national and even international followings and their fans could be quite militant and overzealous. Felicity Goodnite was no exception and several websites were dedicated to her and her drag sisters who were regular performers at Ride em' Cowgirl. She even had her own Wiki page.\n\nHer early years at Balwyn College were documented including her decision to transition. It took Steve only seconds to determine that she had attended the same college as Benjamin Roach, Carl Huntley, Jamaal Washington, Spencer Duvall and William Turner at the same time. Pictures of her from that period showed a stunning young woman who exuded charm and sensuality although it was stated that she had an acerbic wit on which she had based her act.\n\nHer talents had led her to being invited to compete on a season of Drag Race although she hadn't made the final four. This experience had boosted her career incredibly.\n\nAccording to the open source information, Felicity identified as a transgender woman and had never had a long-term romantic relationship although she admitted to being bisexual and sexually active. She owned Ride em' Cowgirl outright and her business associates were Mitch Freeman and another queen named Panti Down whose legal name was William Russell. She still toured regularly both domestically and internationally although not as often since she had bought the club.\n\nSteve pondered the evidence. It would certainly be enough for him to bring Felicity in for questioning and to get a subpoena to get her DNA but that would mean sharing what he knew with that cunt Penelope Bishop and that sycophantic asshole Joe Wagner. He would lose control of the case and more importantly lose any hold he might have over Felicity Benson.\n\nAlthough he had only met her once she intrigued him. She was exotic, sensual and self-assured. If she had murdered Ben Roach, Jamaal Washington and Spencer Duvall, like he strongly suspected she had, she was also dangerous.\n\nWhat had they done to incite her? And why take revenge now?\n\nHe surmised the answer lay in her college days. He thought about what Penelope Bishop had told him 'We have several women who have come forward and told us that Benjamin Roach, Carl Huntley, Jamaal Washington, Spencer Duvall and William Turner forced or blackmailed them into having sex'. Hell hath no fury, he thought.\n\nIf those five spoiled rich assholes had forced college co-eds into having sex with them would they also force a pretty young drag queen still unsure of her gender and sexuality? He looked at the array of pictures of Felicity Goodnite.\n\n\"You bet your ass they would,\" he whispered to himself and crushed out his cigarette.\n\nHe shut down his workstation and collated all of the evidence he had illegally copied from the Houston PD case file and shoved it into his briefcase. He had also broken into the Balwyn PD task force office and riffled through Penelope and Silvia's desks. Most of the evidence was kept on encrypted computer files but he took copies of what he thought was relevant. He needed time to consider what he was going to do about Felicity Goodnite. How could he use what he knew about her to his advantage?\n\n*****\n\nMelissa Doyle was sitting in the park practicing her resting bitch face or so it seemed to Penelope Benson. Penelope had invited the thirty-something raven-haired, stunningly beautiful economics professor with the blue eyes and full lips to meet her near the fountain at City Park where they had met before.\n\nShe was wearing the same lycra leggings and sports top and full makeup including her signature red lipstick as she had worn the last time they had met in the park and Penelope was similarly attired.\n\nMelissa and Silvia were now in a full-blown lesbian relationship, outside of work they were almost glued to each other. What Silvia didn't know was that Melissa was constantly texting, emailing and calling Penelope on the phone.\n\nMelissa continued to bombard Penelope with threats, promises, entreaties, demands, declarations of love, declarations of hate, depending on her mood and Penelope had had enough. She ran past Melissa brushing her shoulder and Melissa sprang from the bench and fell into step beside her.\n\n\"This has got to stop. That crap you pulled in Houston was bullshit!\" Penelope said through gritted teeth.\n\n\"You look beautiful today Penny, I love the way your tights and top accentuate your attributes. Of course your best attribute is tucked away between your legs,\" Melissa's voice was melodic, like they were having different conversations.\n\n\"The only one who is going to get hurt by this is Silvia,\" Penelope turned onto the forest running track.\n\n\"You can stop that easily Penny. I only want our relationship to continue,\" Melissa tried to reach out to Penelope but she brushed off Melissa's hand.\n\nPenelope started running faster and Melissa increased her pace and kept up quite easily.\n\n\"What relationship Melissa! We fucked once and I told you that it was going to be the one and only time, that I love Bradley and that he and I are in a relationship,\" Penelope sniped.\n\n\"But you also told me that it wasn't a pity fuck, that it was wonderful and had meaning, that it wasn't just debauchery,\" Melissa countered.\n\n\"And I also told you that it would never happen again,\" Penelope hissed.\n\nMelissa didn't answer and they ran in silence for a while. Penelope hoped that Melissa was finally seeing the hopelessness of the situation. They entered the deep forest where there were no other joggers and they were both aware that they were approaching the stately oak tree against which Penelope had pressed Melissa's body and fucked her.\n\nMelissa stopped running and put her hands on her hips drawing in huge gulps of air and Penelope did the same. When Melissa had her breathing under control she continued talking and she no longer sounded like the sweet silly ditz with a girly crush.\n\n\"I could fuck you over Bishop! I could tell Bradley that we fucked and he'd know that you were lying if you tried to tell him it didn't happen. I can go and see your boss Gary Rasmussen and tell him that I was a witness that you were interviewing and that you seduced me when I was at my most vulnerable. That when you fucked me I could taste the bourbon on your breath,\" Melissa's beautiful face turned stormy; she looked like a wicked witch with her heavy eye makeup and red lips curled into a snarl.\n\n\"Bourbon was your drink of choice when you were slutting around wasn't it Penny?\"\n\n\"It's amazing what you learn from pillow talk. Silvia told me all sorts of things,\" Melissa closed in on Penelope who started to back up.\n\nShe could see the malice in Melissa's eyes and wished she had a weapon. She could probably beat Melissa in a fight if it came to that but she wasn't certain, people who were angry and deranged sometimes seemed to have super powers.\n\n\"She told me you were a lush and that she was close to letting you sink into your own shit and drown. She joked that you've had more pricks in you than a second-hand dartboard. She told me how Bradley Wilson was the knight in shining armour who rescued you.\"\n\n\"I could bring all that crashing down Penny,\" Melissa's face was inches from Penelope's who had backed against the giant oak.\n\n\"Why?\" Penelope whispered.\n\n\"Because I love you silly,\" Melissa's face softened as quickly as it had transformed into a witch.\n\nHer features changed back into the beautiful, vulnerable woman and her voice softened.\n\nMelissa brushed Penelope's bangs out of her eyes and leaned in to kiss her. Penelope turned her face away and Melissa's lips fell on her cheek instead but Melissa was not perturbed and she rained soft kisses on Penelope's face.\n\nPenelope could feel the heat from Penelope's body and smell the undertones of her exotic perfume under her sweat. She should have just pushed Melissa away and started running but she felt powerless. Running away wasn't a solution anyway. All Melissa had to do was tell Gary, Bradley or Silvia about their fucking and her life would be ruined.\n\n\"You don't blackmail someone you love,\" Penelope sighed.\n\nMelissa's face lit up. She pressed her body against Penelope's and persisted in kissing Penelope's face until she found her lips and then she kissed them. Penelope kept her lips firmly closed but Melissa persevered, she could taste the saltiness of the sweat on Penelope's top lip and the buttery taste of her lipstick. \n\n\"Then don't make me,\" Melissa whispered and forced her tongue into Penelope's mouth.\n\nMelissa squeezed her hand between their bodies and pushed it down the front of Penelope's tights. Penelope tried to stop her but Melissa used her weight to drive Penelope against the tree, temporarily unbalancing her. Penelope had to use her hands to hold onto the tree to keep her balance and with her arms splayed wide she was vulnerable.\n\nMelissa found Penelope's penis becoming turgid and Penelope could feel the smile form on Melissa's lips as she continued to kiss her. Melissa was using her tongue to explore Penelope's mouth whilst Penelope remained passively holding onto the tree.\n\nPenelope had recovered her balance and could now quite easily resist Melissa. She could use the tree as a springboard and push Melissa off her. She could smack Melissa's hand away from inside her tights and turn her head away. Penelope could do a lot of things but she didn't. \n\nShe remained passive, holding onto the tree with her arms wide allowing Melissa to press her body against hers. Allowing Melissa to kiss her; her lips soft and her tongue, warm wet and inquisitive as it investigated her mouth, allowing Melissa to squeeze her turgid member as it became bloated and began to throb, allowing Melissa to slide her free hand under her sports top and inside her bra, squeezing Penelope's nipples until she winced with pain and pleasure both.\n\nPenelope suddenly felt powerless. Pleasure radiated from her mouth, her breasts and her groin. The feel of Melissa's body and the taste of her mouth evoked the sweet memories of when they had last made love against this tree.\n\nExcept now the tables were turned. Melissa was the aggressor and she was passive. She was aware of the power that Melissa had over her. She could ruin Penelope's life with one phone call. Penelope felt such a fool for succumbing to Melissa's feigned vulnerability.\n\nBut all that was moot at this moment in time because Penelope's body was betraying her like it had so many times before. She opened her mouth wider and entwined her tongue with Melissa's, she thrust out her hips so that Melissa had unfettered access to her groin and she didn't resist when Melissa yanked down her tights to expose her rampant penis.\n\nWhen Melissa dropped to her knees and engulfed Penelope's penis in her mouth her instinctive response was to put her hands on Melissa's head and hold it while she fucked her mouth but she didn't. She hung onto the tree trying to convince herself somehow that she was offering passive resistance.\n\nBut when Melissa used her lips to suckle her shaft and her tongue to tickle her fraenulum Penelope moaned like a slattern. Her pleasure centres lit up as ringlets of delight radiated from her pubis. For a woman who claimed not to have been with a man for over ten years Melissa was an accomplished fellatrix using her mouth expertly on Penelope's penis and scrotum.\n\nPenelope could feel her orgasm approaching and she was almost relieved that the ordeal would be over soon but Melissa had other plans. Melissa had pulled down her own tights while she was fellating Penelope and was stroking her cunt, gently circling her clitoris with the pad of her finger and stroking her coral-pink labia. She was wet and excited. The sensation of having Penelope's throbbing penis in her mouth while she tickled her clit and fingered her vagina was heavenly.\n\nBut she wanted more!\n\nShe wanted Penelope inside her. She wanted to feel Penelope fill her vagina with that wonderful big cock, to feel Penelope's breasts pressed against hers, to feel Penelope rut and prod and poke her until her orgasm exploded.\n\nMelissa wrapped her arms around Penelope's knees, spat out her cock and used her own knees as leverage to twist Penelope off the tree and grapple her to the ground. The blanket of autumn leaves broke her fall and Penelope ended up on her back with her tights around her knees and her cock pointed to the sky. It was not very ladylike or elegant but that didn't matter because Melissa pounced on her, straddling Penelope, driving Penelope's cock deep into her hot, wet vagina.\n\nPenelope gasped when the tight spongy velvet glove of Melissa's steamy cunt gripped her turgid member and intuitively she drove her hips upwards to push her cock into Melissa's vagina as far as it would go and then she held Melissa by her hips and began to fuck her.\n\nMelissa rode Penelope like a bucking bronco delighting in the feel of Penelope's cock buried deep inside her, then withdrawn until Penelope's glans nestled in her labia and then thrust back deep inside her tight cunt. Penelope thrust upward as Melissa pushed down, delighting in the sensation of Melissa's tight spongy snatch gripping her throbbing cock.\n\nThe two women rutted like slatterns until the crescendo of their orgasms was reached and Melissa fell forward and crushed her mouth against Penelope's who opened her mouth and offered her tongue as she held onto Melissa's hips and drove her cock deep inside her buttery cunt and ejaculated. Melissa felt Penelope's cock quiver and then runnels of hot semen filled her vagina. Her own orgasm washed over her and her quivering cunt milked very last drop of seed from Penelope's penis.\n\nMelissa collapsed on top of Penelope who lay on the bed of leaves reeling in post-coital regret and self-loathing for succumbing to Melissa's coercion but what else could she do? She was open to blackmail until she could resolve the situation with Melissa.\n\nPenelope rolled over, spilling Melissa off her and they both struggled on their backs in the mounds of leaves pulling up their tights and adjusting their clothing. Penelope's cock was still semi-erect and she couldn't force it between her legs so she pushed it to one side and tried her best to pull down her sports top to cover it. Melissa could feel Penelope's semen dribbling from her cunt into her tights but she didn't care, in fact she liked having some part of Penelope still inside her body.\n\n\"We can't keep doing this,\" Penelope hissed as she brushed leaves off her body.\n\nMelissa tried to brush away the leaves that Penelope couldn't reach but Penelope pushed her away.\n\n\"We keep doing whatever I want whenever I want it!\" Melissa sounded like a petulant child.\n\n\"But you're right that we can't keep fucking in the park. Maybe next time you come to my place; I still have it even though I now live with Silvia\" Melissa said in a sing-song deranged voice that irritated the fuck out of Penelope.\n\n\"There won't be a next time!\" Penelope screamed at her.\n\n\"That's what you said last time Penny. See you soon darling,\" Melissa waved childishly at Penelope and then sprinted away.\n\nPenelope kicked at the pile of leaves on which they had just made love and cursed when she found a rock with her toe.\n\n\"Fuck! Fuck, fuck, fuck, fuck, fuck!\" she screamed into the silent trees.\n\n*****\n\nSteve Edwards took a little time to contemplate his position and then made up his mind as to how he would approach Felicity Benson. There was no doubt in his mind that the woman was dangerous but he sensed an opportunity. \n\nFelicity saw Steve enter Ride em' Cowgirl and approach the bar where Jill Graham was setting up for the evening performance. Felicity was on stage with Panti Down and three other drag queens rehearing a dance routine for their latest show. She was dressed in black leggings with a tight black mesh top over her bra. Everyone on stage was wearing high heels because it was pointless performing in ballet slippers when they would be performing in pumps. Felicity wasn't wearing her theatrical makeup but she was wearing a face.\n\n\"Bourbon with a beer back and none of that well shit, make it JD,\" Steve said pointing at the top shelf and parking his ass on a bar stool.\n\n\"We're not open for business,\" Jill Graham quipped and turned her back on him.\n\n\"This place has a twenty-four-hour liquor licence toots so pour me my drinks and don't give me any lip. I'm not here on a social call,\" Steve had decided to go in hard.\n\nJill reluctantly poured the JD into a shot glass and pulled a Lone Star out of the ice tub while Steve studied the d\u00e9cor.\n\nWith the overhead lights on Ride em' Cowgirl didn't look quite as glitzy and glamorous as it did under the mood lighting. Some of the furniture looked tired and the walls could use a coat of paint. Some artist had painted a mural on one of the walls depicting a gaggle of drag queens with panicked looks on their faces scampering ahead of a cowboy on a horse swinging a lariat over his head. The caption read 'herd em up -- move em out'. Steve got the joke and chuckled to himself just as Jill put his drinks down on the bar.\n\n\"You get it huh?\" Jill leaned on the bar.\n\n\"Yeah, funny cartoon,\" he took a sip of his whisky.\n\n\"Those are caricatures of real girls who have performed here over the years,\" Jill explained.\n\n\"Girls?\" Steve took a slug of Lone Star.\n\n\"Drag queens. We refer to them in the female vernacular when they are in drag,\" Jill wiped up the ring of condensation left by the cold beer.\n\n\"What about her?\" Steve pointed his bottle at the stage where Felicity was demonstrating a move she wanted the other queens to perfect.\n\n\"You know she's a woman you fucking philistine! Felicity is she in and out of drag!\" Jill threw the dish towel over her shoulder and strode away.\n\n\"Fucking testy bitch,\" Steve grinned.\n\nHe sat at the bar nursing his drinks watching the queens rehearse; he wanted a clear head when he dealt with Felicity. \n\nFelicity deliberately extended the rehearsal to make him wait then she called a wrap and exited the stage and went directly to her office. She went to her little bar and poured herself a drink with her back to the door anticipating Steve's entrance. She didn't like that this was his third visit to the club or that he had come alone.",
        "\"The new routine looks pretty good,\" Steve leaned against the door jamb.\n\n\"Ah, a connoisseur of the arts,\" Felicity took a sip of her drink but kept her back to Steve.\n\n\"I don't know anything about art but I know what I like,\" Steve's eyes were drawn to Felicity's tight buttocks sheathed in her dance tights.\n\n\"Last time I spoke to you, you knew nothing about drag, now you're a cognoscente,\" Felicity kept her back to him.\n\n\"So you're not just a pretty face; you're also articulate,\" Steve followed her hips up to her slim waist and then to her shoulders.\n\nIf there was any imperfection in Felicity's appearance it was that her shoulders were a little too wide for her body.\n\n\"I'm college educated,\" Felicity countered, turning to face him.\n\nHer breasts were still heaving slightly from the workout on the stage and her makeup had smeared a little because she had sweated, her blonde hair was wet with perspiration, her bangs matted to her forehead. Steve noted the brunette roots. The hair samples collected at the Duvall crime scene were blonde with brunette roots. The hair samples taken at the no-tell motel in Houston were red and synthetic; a wig.\n\n\"Four years at Balwyn College majoring in theatre and performance. You changed your major in your first year; graduated in the top three. That was also the year you transitioned,\" Steve gave her knowing look.\n\nFelicity remained stoic and showed no emotion. She studied the detective. He didn't seem as dishevelled today. He was clear eyed and his suit and topcoat looked expensive and fashionable. He was tall and rangy with a stylish shaggy haircut and chiselled features; he looked like Kevin Bacon when he was in his forties.\n\n\"You seem to know a lot about me detective,\" Felicity crossed her arms.\n\n\"If you could sew better you probably would have won your season of Drag Race. Bella Donna was a poor choice for the win but Ru was getting old and the producers had too much control by then,\" Steve sniffed.\n\n\"Now I know that you've just been educated by Google. Bella was by far the best contestant,\" Felicity countered.\n\n\"They say she was fucking one of the executive producers,\" Steve chuckled.\n\n\"They say a lot of things. Are you going to come in or are you going to just stand there holding up my door jamb?\" Felicity drained her drink and turned her back to pour another.\n\nShe poured Steve one too and when she turned around she found him seated and the door closed.\n\nFelicity handed Steve his drink and took a seat in the easy chair across from him. She noted that he put his drink down without taking a sip.\n\n\"Aren't you going to ask me why I'm here?\" Steve took his cigarettes out of his coat and offered them to Felicity.\n\nShe took one and studied his face while he lit it for her. She remembered the last time they had met when she had surreptitiously rubbed her finger on his when she handed him a drink and he had leaned in and almost touched her cheek with his lips before he left. There was undoubtedly chemistry between them but chemistry could be volatile.\n\nFelicity shrugged her shoulders. Steve lit his cigarette and looked at her, waiting for her to talk but she remained silent.\n\n\"My boss is a transgender woman,\" he leaned back into the seat.\n\n\"Now that's an unexpected segue,\" Felicity was surprised at the shift in conversation.\n\n\"You know... for... whatever the fuck,\" Steve blushed.\n\n\"So what you think we all know each other? We meet up once a month to sew quilts and compare notes?\" Felicity bristled.\n\n\"I'm just saying is all. Jeeze, I'm sorry, that was stupid,\" Steve shook his head apologetically.\n\nPenelope smiled at him. She was surprised by his embarrassment.\n\n\"As it turns out I have heard of her. She's been in the press a few times. Helped catch the Sleeping Beauty Killer and all,\" Felicity made him feel a little better but she didn't know why.\n\nThis cop was dangerous and he knew a lot about her and she knew that detectives did not waste their time studying strangers unless they considered them suspects.\n\n\"So why are you here?\" Felicity asked.\n\nSteve took the flyer out of his coat pocket, unfolded it and put it on the coffee table.\n\nFelicity knew what it was and a shiver ran down her spine but she deliberately did not stare at it.\n\n\"So what? I travel a lot. Working drag queens need to make a living and most of us travel to do so. Panti Down is my booking agent; she got me the gig. You can ask her,\" Felicity bristled.\n\nIt was the first real emotion Felicity had shown and Steve knew he had her.\n\n\"I can ask anybody anything I want; I'm a detective,\" Steve blew smoke at the ceiling.\n\n\"You got the club. Why travel?\" he asked.\n\n\"Mitch Freeman oversees club business. Everything we make here goes into the business as profit to be shared by the stakeholders, to pay overheads and operating costs. The money I make freelancing is mine, except for what I pay William,\" Felicity regained control of her emotions.\n\n\"William?\" Steve pretended to be perplexed.\n\n\"William Russell is Panti Down's legal name,\" Felicity explained.\n\nSteve waited a beat and took a small sip of his drink. He looked through the office window and saw there was no one within earshot.\n\n\"You fucked up when you left the motel in Houston,\" he said soberly.\n\nFelicity did her best to remain emotionless and kept silent. She just stared at Steve trying her best to look nonplussed.\n\n\"The rat-faced guy you ran into crossing the car park. He identified you from that poster,\" Steve pointed the toe of his shoe at the flyer on the coffee table.\n\n\"Right now he's helping a police sketch artist put together a likeness of you,\" Steve met her gaze.\n\nThe wheels began to spin in Felicity's head. If they had a picture of her from the flyer why was rat-face helping Houston PD make a composite?\n\n\"Ok. Enough bullshit,\" Steve's voice became gruff.\n\n\"Spencer Duvall was in your club right before he was murdered. Your bartender Jill Graham, a loyal friend and keeper of the faith, collaborated your story that he only spoke to you briefly. I bet if I lit a fire under her ass she will admit that you and Spencer had a longer intimate conversation. Maybe you left the club together?\" Steve began.\n\n\"At Duvall's place they found hair samples that look very much like yours. I bet if they took a sample of your hair it would match the hairs found at the crime scene as would the DNA they found from the non-secretor. I bet your fingerprints would also match some of those taken at the scene.\"\n\n\"The symbols written in lipstick over the bed; they translate to Eta Lambda Pi, the fraternity that Benjamin Roach, Jamaal Washington and Spencer Duvall pledged when they were in college at the same time you were. I haven't figured the connection there yet but there is one.\"\n\n\"You were in Houston contracted to perform at Hamburger Mary's when Roach and Washington were murdered. I looked at the timeline and you had the opportunity and the means, although I'm yet to figure out where you got the gun.\"\n\n\"You were smarter that time. I'm guessing Duvall was an opportunist murder whereas as Roach and Washington's murders were planned. You left very little DNA and no prints and you wore the red wig but DNA will put you at the scene and rat-face will identify you.\"\n\n\"You couldn't help but leave your little calling card on the mirror. That was dumb because it links the crimes.\"\n\n\"So there you are. I have opportunity and means, the only thing I don't have is motive. If I obtained a warrant for your fingerprints, DNA and a hair sample I bet my ass they would match the samples taken at the scenes. I have enough circumstantial evidence now to arrest you and get that warrant,\" Steve stubbed out his cigarette and leaned back into his seat.\n\n\"So why haven't you?\" Felicity extinguished her cigarette.\n\n\"Well there are a couple of reasons. I don't have motive yet but I can guess it has something to do with that fraternity, specifically Benjamin Roach, Jamaal Washington and Spencer Duvall. I also speculate that William Turner and Carl Huntley could be involved. Those five jocks are thick as thieves and still were until recently,\" Steve took another small sip of his drink.\n\nSteve saw Felicity's jaw tighten when he mentioned the five names.\n\n\"There is mounting evidence that those five assholes sexually assaulted women while they were in college and have continued to do so after they left. The victims have either been paid off or are too scared to come forward because they have something they can use against their victims. I'm guessing it will be pictures, videos or even correspondence that might suggest the women were complicit,\" Steve searched Felicity's face for any signs of emotion but she remained passive.\n\n\"Did you say they are still doing it? Blackmailing women for sex?\" Felicity whispered.\n\n\"Well they were before three of them were murdered. Huntley and Turner have taken flight,\" Steve offered Felicity another cigarette but she shook her head.\n\n\"But so far no one has linked you to the murders except me,\" Steve lit up a cigarette.\n\n\"Is that right? But you said yourself you have enough circumstantial evidence to arrest me. So once again, why haven't you?\" Felicity asked.\n\n\"I told you I have no motive. Besides I owe those assholes at Police Plaza and Houston PD nothing,\" he said bitterly.\n\n\"Also... you intrigue me. You're beautiful, intelligent, talented and sophisticated,\" Steve gave her a boyish grin.\n\n\"But I'm also a murderer... at least according to you I am,\" Felicity smiled back at him.\n\n\"I never picked you for a tranny chaser,\" Felicity picked up her drink and finished it in one gulp.\n\nShe saw the storm clouds gather behind Steve Edwards' eyes. She'd gone too far.\n\nHe stood up abruptly and straightened his tie and jacket and made to leave.\n\n\"Wait!\" Felicity put out her hand and gripped his arm.\n\nHe turned to look at her and then looked down at where she was holding onto him. She took her hand away.\n\n\"You want to know what those men are capable of?\" Felicity strode over to her desk and wrote something on a message pad and tore it off.\n\n\"Be there at one AM, that's the earliest I can get away after the show,\" Steve looked down at the scrap of paper and saw that she had written an address.\n\n\"You want me to come to the home of a woman I suspect of being a murderer by myself at one o'clock in the morning?\" Steve looked into her icy-blue eyes.\n\n\"You've seen the crime shows. You put all your evidence against me into an envelope marked 'to be opened in event of my death',\" she gave him a wry smile.\n\n\"You're very self-assured aren't you?\" he couldn't help but smile.\n\nShe lifted herself on her toes and leaned in and kissed him on the cheek. He could smell her perfume and the musk of her perspiration; it was an intoxicating combination.\n\n\"You have to be self-assured in my business,\" she turned away from him and Steve once again admired her ass.\n\n***** \n\nFelicity's apartment was located in the city, not far from her club. Steve checked that his weapon had one in the chamber and pressed the call button.\n\n\"Come on up,\" Felicity's sultry voice came through the intercom.\n\nHe glanced up and saw the camera pointed at him. Swank places like these had security cameras that transmitted video to remote operating stations where private security guards were on call to respond as required. The video would be recorded so if Felicity where to do anything untoward to him, there was evidence of his presence at her apartment.\n\nThat said he didn't feel particularly threatened. Whoever had murdered those frat boys had motive; he doubted they would kill a policeman... but you never knew what someone would do to if they were desperate.\n\nFelicity greeted Steve at the door. She had changed out of drag and was wearing a sky-blue chiffon nightgown, black fully-fashioned stockings held up by a white satin suspender belt, matching white satin panties and bra and slip-on high heel pumps. Her makeup was perfect and a miasma of perfume preceded her.\n\nSteve was amused that she had dressed so seductively but he was also appreciative. She invited him inside and he was impressed by the opulence of the apartment. Felicity fussed around him and got him seated on a white leather couch and brought him a drink which he put down untouched.\n\nHe carefully scanned the room for exits and for anything Felicity could use as a weapon and she watched him amusedly and then sat on the same couch but scooched into the other corner.\n\n\"Afraid I'm going to poison you?\" she nodded at the untouched glass of bourbon the rocks.\n\nSteve blushed and Felicity leaned forward and picked up the drink and took a sip. He noticed her lipstick on the glass.\n\n\"There,\" she said smiling at him.\n\nShe handed him his drink and picked up her own drink and took a sip.\n\n\"So what happens now? Is this where you confess and beg for mercy,\" Steve put his drink down still untouched.\n\n\"I'd jump off that balcony before I begged for mercy for what happened to those raping assholes,\" the bitterness in her voice was palpable.\n\n\"That's not a confession by the way,\" she smiled at him over the rim of her glass, the bitterness gone.\n\nShe looked beautiful but also vulnerable. There was something about her; like she'd been wounded and needed to be cared for but also like a wounded wild animal she might bite. Steve couldn't understand his attraction to her.\n\nThere was no doubting that she was beautiful and sexy but he knew that she was a trans woman and previously that would have repelled him. Not repulsed him, he wasn't transphobic, but he wasn't particularly attracted to trans women either. That was why he'd bristled when felicity had called him a tranny chaser... or was it?\n\nBut she beguiled him. Her beauty aside she exuded confidence, vitality and intelligence but under it was a hint of vulnerability. She was the type of woman he could easily fall for but there was also a sense that she was unattainable, that she was too good for him.\n\nAnd then there was the consideration that she was almost certainly a murderer.\n\nFelicity shifted slightly and her robe fell open. He could see all the way to the top of her thigh, the dark welt of her stocking shockingly contrasting with her alabaster skin. The V of her panty was just visible. He'd read about how queens were able to tuck to present a feminine pubis and he wondered what lay along her perineum.\n\n\"Ok. You didn't invite me here for drinks and small talk; what is you couldn't tell me at the club?\" Steve cleared his head and got straight to the point.\n\n\"You are correct that I was at Balwyn College at same time as Spencer Duvall, Jamaal Washington and Ben Roach. I was performing as Felicity Goodnite in the college amateur theatrics, my act wasn't polished but I was pretty good on stage and a very good female impersonator,\" Felicity put down her drink and began her story.\n\n\"I caught their eye I suppose is how you'd put it. I was na\u00efve and stupid. I really thought they wanted me to perform at one of their frat parties,\" Felicity took a sip of her drink to fortify herself.\n\n\"I went to the frat house dressed as Felicity, I hadn't started to transition then, I didn't know if I would. I was unsure of my gender identity and sexuality. What they did to me in that room sealed my fate.\"\n\nShe told him.\n\nShe didn't hold back. Felicity gave Steve every gruesome detail. The pain, the sorrow, the lust, the self-loathing, the self-hating and her vow that she would seek revenge if she ever got the chance.\n\nSteve never said a word. He sat silently and listened.\n\n\"When they had finished with me Ben Roach led me to the door,\" Felicity had sobbed during her tale but she was all cried out, her voice hoarse.\n\n\"I asked him why?\" she whispered.\n\n\"'Because we can', was the answer he gave me,\" she folded her hands in her lap and lowered her head.\n\nSteve couldn't talk. He'd had to hold back tears when she told him about the boys holding her down while each of them defiled her. It made no difference to him that she had taken pleasure from some of the things they did to her; in fact that only made it worse.\n\nHe finished his drink and cleared his throat.\n\n\"That sounds a lot like motive to me,\" he said dryly.\n\n\"You know I wasn't the only one who hated them. There were so many more and they were still doing it. Still getting away with it!\" Anger replaced the sorrow in her voice.\n\n\"What now?\" Felicity stood, allowing her robe to fall open exposing her body clad in the sexy lingerie.\n\n\"That's not going to work,\" Steve said wryly.\n\n\"It was worth a try,\" Felicity smiled coyly at him.\n\n\"You are quite the enigma Steven Edwards. You have a reputation for playing loosely with the rules but you have certain lines you won't cross,\" Felicity closed her robe.\n\nSteve frowned at her.\n\n\"Oh come on; you're not the only one who does his research. You don't mind shaking down businesses for free meals and drinks but you won't take cash bribes or freebies from hookers,\" Felicity stared at him.\n\n\"You don't mind using your fists on a suspect or a witness if you think the situation warrants it but you abhor violence against women. You were demoted from Sergeant to Senior Police Officer in Houston when you beat a man so bad that he spent a month in hospital recovering. The fact that the man had beaten his wife, raped her and then threw her in the street was the only mitigation that kept you on the force,\" Felicity approached him.\n\nShe leaned in close and whispered in his ear seductively.\n\n\"I think you might be a softy,\" she wrapped her body around him and nuzzled his earlobe.\n\nHer body felt delightful and she smelled alluring and sexy. Steve had never wanted a woman more in his life. He was erect in his pants and Felicity found him hard and began to caress him though the fabric while she licked and nibbled his earlobe.\n\nSteve removed her arms from around him and pushed her gently away from him and held her at arm's length.\n\n\"Don't do that,\" he said gruffly.\n\n\"What?\" Felicity looked wounded.\n\n\"Don't prostitute yourself,\" he said through gritted teeth.\n\n\"Are you accusing me of being a whore?\" anger flashed across Felicity's face.\n\n\"Far from it. I think you are beautiful, talented and delightful and under other circumstances I would be delighted to make your acquaintance but using your feminine guiles on me demeans us both,\" the regret in Steve voice was evident.\n\nHe released her upper arms and took a step back.\n\n\"Another place... another time... who knows? Although I doubt I'd be good enough for you,\" Steve sighed.\n\nHe buttoned his coat and strode to the door.\n\nFelicity ran after him and placed herself between Steve and the door.\n\n\"Look at us. Were both concerned that we aren't good enough for each other. We both carry baggage that precludes us from attaining the happiness we so desire,\" tears ran down Felicity's cheeks.\n\n\"I know that I've only just met you and that we come from different worlds but we both know that there is something between us. If we don't give it a chance we may miss our one chance for true happiness,\" Felicity searched Steve's eyes.\n\n\"This isn't right Felicity. This is the sort of fairytale that you read about in cheap romance novels,\" Steve countered.\n\n\"Then don't let it be. Don't let it be cheap. Don't let it be a fairytale,\" Felicity pressed her body against Steve's.\n\nThis time he wrapped her in his arms and kissed her.\n\nShe tasted exactly as he thought she would: sweet but exotic, soft but resilient. He marvelled at how her body seemed to meld to him like it was meant to be. They both gasped; both surprised at the emotions that erupted from within. Yes there was lust, yes there was passion, but there was also empathy, compassion and affection.\n\n\"I don't know how,\" Steve whispered when they finally broke their kiss.",
        "\"Then let me show you,\" Felicity whispered.\n\nShe took his hand and led him to her bedroom.\n\nFelicity took her time undressing Steve, making him wait, making him yearn for her. When she had him naked she dropped her robe and stood before him.\n\nHe reached for her and pulled her into his arms and he kissed her. Not hard. Not passionately. But softly, like she might be a china doll he was scared he would break. His hands went to her breasts and Felicity sighed when he cupped them, feeling their heft. His kiss became a little more intense when he unsnapped her bra and stroked her creamy globes. He worked her nipples, making them become engorged.\n\nSteve put his mouth on her breasts and teased her teats with his tongue and his lips. She gasped when he nipped them gently but he wanted to kiss her. He loved kissing her and he put his mouth on hers and this time there was passion. He used his tongue on her and Felicity melted in his arms.\n\nHe draped her on the bed and used his mouth to explore her body, starting with her lips, working down to her breasts, across her flat belly and then he tickled the crease where her thighs joined her torso. She tasted just like she smelled; womanly and exotic. Felicity reached out and found him erect and dribbling precum. She sensed that he was not far from extremis and she was careful not to trigger his orgasm; she wanted him inside her when they came together for the first time.\n\nShe could sense Steve's hesitation as he licked the tender flesh near her groin. He knew what was inside her panties but he didn't know what to do about it.\n\n\"It works just like yours silly,\" Felicity teased him.\n\nSteve slipped his fingers inside Felicity's panties. He was full of trepidation, excitement and wonder. He found her shaft pressed to her perineum, the skin silky and soft. He wasn't repulsed like he thought he might be; on the contrary he was inquisitive and excited.\n\nWhen it sprang free and nearly hit him in the face he jerked away in surprise and Felicity giggled.\n\n\"You don't have to touch it if you don't want to. I understand,\" she whispered.\n\nIf it was any other person in the world undoubtedly Steve would be repelled but it was Felicity, the woman he was coming to adore.\n\n\"Oh my god!\" Felicity moaned when Steve took her in his mouth.\n\nHe didn't know exactly what to do but he'd been fellated himself often enough to get the idea and given the moaning and squealing that was coming from Felicity's mouth he appeared to be doing ok. Felicity put her hands on Steve's face and made him slow down, he was bringing her close. She forced his face out of her groin and encouraged him to mount her and kiss her.\n\nShe wanted to feel his body on top his hers. She wanted to feel his hard muscled torso on her yielding breasts and his erect penis pressing against her own. He stroked her thighs, his fingertips caressing her stockings and she wrapped her legs around him and ground her pubis against his.\n\nFelicity wriggled under him until his cock nestled between her buttocks and she looked up into his face, her eyes filled with devotion and promise. Steve kissed her and thrust forward, his glans finding her puckered sphincter.\n\n\"Now daring,\" she whispered in his ear and Steve slowly entered her.\n\nSteve's glans opened her slippery bud and slipped inside her tight silken sheath.\n\n\"Give me more,\" she whispered and squeezed him with her arms and legs.\n\n\"I want more,\" she whispered and kissed him.\n\n\"I want you in me all the way,\" she sighed and rose her torso up off the bed to encourage him.\n\nSteve slid his cock all the way inside her anus and began to shudder as he was wracked by an uncontrollable orgasm the likes of which he had never felt before. When Felicity quivered and convulsed in his arms and he felt her hot seed splash on his belly he orgasmed a second time, feeling felicity's cock pulsing and fluttering as she came with him.\n\nShe clung to him like a limpet, sobbing; holding him so tight that he thought she would crush him.\n\n\"Kiss me... please kiss me,\" she begged and Steve kissed her with every ounce of passion in his body.\n\nThey lay like that for what seemed like an eternity and then Steve found his second wind. Felicity felt him become fully tumescent inside her again and she lay back and opened her legs wide and stared up into his face as he began to fuck her. They stared into each other's eyes as Steve made love to her, kissing and clinging to each other as another orgasm washed over them both.\n\nLater they lay on the bed exhausted, holding hands, staring at ceiling.\n\n\"You know they are going to catch you eventually Felicity. They have forensics on you and if a schmuck like me can work it out you can bet Penelope Bishop will too, given time. She's relentless, like a dog with a bone, and she's the most intelligent cop I know,\" Steve sighed.\n\n\"Then we had better make the most of the time we have together. I have never felt like I do now. I've never met a man who makes me feel like you do Steve,\" she kissed him and Steve pulled her close.\n\n*****\n\nSteve Randal had been reassigned back to homicide but Steve Edwards remained on the taskforce led by Penelope Bishop with her partner Silvia Bickle and CSI Tech Alice Leasingham. Bob Tanner had recalled Alice back into his CSI unit but he allowed Alice to work part time for Penelope.\n\nSteve was still relegated to mostly grunt work, chasing down potential witnesses, crosschecking their statements and writing reports. Alice spent most of her time comparing the photos of the no-tell motel room against the videos she had found on Spencer Duvall's laptop. It matched most of videos that were not taken at Spencer's townhouse. They still had no DNA match for the non-secretor or the fingerprints taken from the Duvall crime scene and the evidence was sent to Houston for comparison with the forensic evidence from the Roach and Washington crime scene.\n\nPenelope was scared that she was losing control of the case. Houston PD was putting pressure on Gary Rasmussen to declare that the two murders in Houston and the one in Balwyn had been committed by the same perpetrator or perpetrators and to hand their case over to Houston who would take the lead delegating Penelope's team to a supporting role.\n\nPenelope tightened the reins on her small team and worked them harder. She even consented to giving Steve Edwards access to all of the evidence so that he could add his cognitive skills to the mix. Penelope was convinced they weren't far away from making a breakthrough but she just didn't know where the breakthrough would come from.\n\nSteve was the duty task force officer when he got a call from the Desk Sergeant at Police Plaza in the early hours of the morning quickly followed by a call from Alice Leasingham. He wrote down the details and then called Penelope Bishop.\n\n\"Boss, sorry to call you so early but I got a call regarding a suspicious death at an apartment near the Balwyn Campus. They think it's linked to our case,\" Steve sat on the edge of his bed trying to digest the information he had been given.\n\n\"Ok, I'm up. Call Silvia and tell her to meet us at the scene, text me the address,\" Penelope yawned into the phone.\n\n\"Penelope, I don't think you want Silvia in on this. You're going to have to call her later but she can't attend the crime scene,\" Steve sighed.\n\n\"What the fuck are you talking about Steve? Silvia is my partner. I'd rather have her there than you,\" Penelope said angrily.\n\n\"The deceased is Melissa Doyle,\" Steve whispered hoarsely.\n\nThe phone went silent for a full minute.\n\n\"Boss? Boss? You there?\" the concern in Steve's voice evident.\n\n\"Yes, I'm here. Say nothing to Silvia and I'll meet you at the scene. Has the Medical Examiner and CSI been informed?\" Penelope's voice sounded shaky.\n\n\"They're already there. I'll see you there Lieutenant,\" Steve hung up the phone, stood up and stretched.\n\nPenelope could discern how serious Steve was taking matters; he hardly ever called her Lieutenant. Bradley hadn't moved and was still fast asleep. As two cops living together they were immune to late night calls for the other partner.\n\nShe dressed and jumped into her BMW and punched the address that Steve had texted her into the GPS. She was at the scene within twenty minutes and found Steve waiting for her smoking a cigarette, he was holding two takeout coffees and he held one out to her as she approached the police tape.\n\nThe two detectives signed into the crime scene and put on the Tyvek booties and pulled out their gloves as they approached the small apartment that belonged to Melissa Doyle.\n\n\"The apartment is owned by the university and leased to Melissa Doyle long term because she has tenure. The rent is almost insignificant because it's part of the remuneration package they offer to tenured professors. Sweet deal,\" Steve explained.\n\n\"Not anymore,\" Penelope said sourly.\n\nThe apartment was pretty much what you would expect. The lounge room was small and cluttered with books and papers. A desk with a workstation dominated one corner. The small kitchen was pristine because Melissa had been spending most of her nights at Silvia Bickle's flat. An almost empty bottle of vodka and a single glass sat on the low table in front of the sofa.\n\nBob Tanner came out of the bedroom.\n\n\"Come on in,\" he beckoned them to the door.\n\nMelissa Doyle lay naked on the bed on her side; her raven hair fanned across her shoulder, her skin was alabaster white. Her eyes were open and she was wearing her signature red lipstick; she could have been asleep.\n\n\"Hi Penelope,\" Brendan Scott was examining the body.\n\n\"Hi Brendan. I know it's early but any idea of the cause of death?\" Penelope asked circling around the bed.\n\nShe could see for herself that everything looked normal. There were no signs of a struggle; no signs of disarray, there appeared to be no blood. There was however an empty bottle of barbiturates on the nightstand.\n\n\"I'm pretty sure that the autopsy will reveal an overdose of barbiturates and high level of alcohol indicating a likely suicide or very less likely death by misadventure. There are no contusions or marks on the body, no signs of sexual activity precluding rape,\" Brendan explained.\n\n\"Then why call the ME? A rookie straight out of the Academy would asses this as a suicide?\" Penelope asked.\n\n\"Because of this,\" Alice Leasingham stuck her head out of the ensuite bathroom.\n\nBoth Brendan Scott and Bob Tanner gave her a knowing look but said nothing.\n\nPenelope and Steve walked carefully around the bed to the tiny ensuite bathroom. Written on the mirror in red lipstick were the symbols \u0100 \u0124 \u041f. A tube of lipstick the same colour as the writing on the mirror lay open on the vanity.\n\nPenelope thought that she was going to faint; she held onto the vanity to support herself.\n\n\"Are you ok boss?\" Steve asked and Alice rubbed Penelope's back and looked concerned.\n\nAfter a few deep breaths Penelope regained her composure and straightened herself up.\n\n\"You knew didn't you Steve?\" she turned to face Steve Edwards.\n\n\"Alice told me what she found over the phone but I thought it best for you to see it for yourself unprejudiced so you could make your own assumptions,\" Steve said gravely and Penelope suddenly had a new found respect for him.\n\n\"Anything else? I know it's early,\" she said to Alice.\n\n\"We found a red wig and a partially used box of .380 ammunition. We'll compare the hair fibres with those taken at Houston murder site and ballistics will compare the ammunition with casings and fragments from the motel,\" Alice said.\n\n\"CSI will go over this place with a fine tooth comb. I'll tap into her devices and see what Melissa was up to online and who she was communicating with,\" Alice said softly.\n\nIt was like all the air had sucked out of the room. Penelope's head was spinning again and she had to sit down. \n\nPenelope knew that Alice was going to find the texts and emails that Melissa had sent her along with the calls made to her phone. She would have to come clean and let Alice know before she began her forensic investigation of Melissa's phone. Not that Penelope was too concerned, there was nothing that incriminated her but it meant she would have to tell Silvia about her relationship with Melissa and also tell Gary Rasmussen. The texts and emails would just add to the evidence that Melissa wasn't in a sound frame of mind but they would also reflect poorly on Penelope.\n\nPenelope had betrayed her best friend and that was heart-breaking. Why had she met with Melissa that second time in the park? It was stupid!\n\nSteve handed her a bottle of water from his coat, wiping the top before giving it to her.\n\n\"Thanks,\" she sighed, taking a long sip.\n\n\"Tell me what you're thinking,\" Penelope asked; her voice low and throaty.\n\n\"That's for you to decide boss. It's your case; your hypothesis,\" Steve said deferentially.\n\n\"Tell me,\" Penelope said brusquely.\n\n\"Ok. This is just me spitballing, we gotta wait for forensics and ballistics but... Melissa had motive, means and opportunity,\" Steve began to count out the three elements required to tender a prima facie murder case.\n\n\"She had motive. She had been raped by the five frat boys in the same shitty motel room where Benjamin Roach and Jamaal Washington were murdered. She also told you herself that as far as she was concerned that she hoped that whoever had killed Spencer Duvall would get away with it.\"\n\n\"She had means. The ammunition is going to match that found at the motel and I bet that wig matches the fibres. Will we ever find the gun? This is Texas; you can kick over a rock and find an unregistered firearm so we may never know where she got the pistol.\"\n\n\"As for opportunity: she lives right here in Balwyn so we will need to trace her movements on the night Spencer Duvall was murdered but more importantly we know that she was in Houston attending a seminar at the U when Washington and Roach were killed,\" Steve laid out his hypothesis.\n\n\"So why did she kill herself... if she did?\" Penelope asked.\n\n\"I can't answer that Penelope. Unless they find a note it's almost impossible to get to the real reason why someone kills themselves. The other two frat boys are overseas so she may have thought the opportunity to seek revenge would run out before she got caught. She's sleeping with Silvia so she may have known that the noose was tightening or she may have just felt remorse,\" Steve offered.\n\n\"If Silvia was talking to her about the case, Melissa would have known that we were no closer to finding the killer than when we started the investigation and that we were still stymied by the DNA and fingerprint evidence,\" Penelope countered.\n\n\"Yeah but civilians watch those TV crime shows where models in Armani suits solve crimes by taking a fingernail clipping and putting it through a zillion dollar machine that tells them that the murderer is a left-handed albino dwarf who lives with his mother,\" Steve replied and Penelope couldn't help but smile.\n\nThe reality was that DNA broke down or became cross contaminated and fingerprints were subject to interpretation. Sometimes the most careful killer will leave trace evidence, like the Sleeping Beauty Killer who had worn a full body suit, and sometimes the sloppiest of killers gets lucky and leaves no trace evidence.\n\nPenelope took a deep breath.\n\n\"Ok let's not jump to conclusions. I want this scene processed by the book and the evidence carefully analysed. Everything goes through me,\" Penelope barked and stood up.\n\n\"Now I have to go and tell Silvia,\" the pain in Penelope's voice was evident.\n\n\"You want me to come with?\" Steve asked.\n\nAgain Penelope realised that she might have gotten off on the wrong foot with Steve Edwards; maybe he was a good cop and a nice guy after all. Twice now he had called her Penelope instead of Lieutenant or boss but she didn't mind the familiarity.\n\n\"This is one call I have to make alone Steve,\" Penelope gave him a grim smile.\n\n\"Then may I propose I hightail it down to Houston and chase down our rat-faced friend and show him a picture of Melissa Doyle and see if she's the woman he saw the night of the motel killings,\" Steve offered.\n\n\"What about Houston PD, it's their jurisdiction?\" Penelope asked.\n\n\"Fuck Houston PD,\" Steve growled and Penelope smiled.\n\n\"Atta boy. Go for it Steve,\" Penelope picked up her purse and coat and prepared to have the most dreaded conversation of her life with her best friend and colleague.\n\n*****\n\n\"Fuck me Penelope you can't take a victory can you? You wrapped up the case and put a bow on it,\" Gary Rasmussen sat behind his desk with his feet up.\n\n\"There are still too many loose ends as far as I am concerned,\" Penelope paced the floor of his office.\n\n\"Why did Melissa wait so long before she sought revenge?\"\n\n\"We never found the gun and that ammunition can be purchased anywhere.\"\n\n\"We never identified the non-secretor from the Duvall crime scene and we only have a partial print from the motel which is inconclusive,\" Penelope counted out her doubts with her fingers.\n\n\"Who knows why she waited so long; the woman was clearly crazy,\" Gary countered.\n\n\"We hardly ever find the gun when the murderer has planned the crime; this isn't Law and Order,\" Gary growled.\n\n\"Duvall's apartment and the motel room had more DNA than a Las Vegas brothel; I shiver when I think of the amount of secretions spattered around those crime scenes. There was contamination and cross-contamination; nothing was conclusive,\" Gary imitated shivering.\n\n\"Besides which Missy; given the evidence found on Doyle's phone and laptop, if I were you, I'd be more than satisfied with the outcome. Those texts and emails are incriminating on their own. Any half-assed prosecutor could make a prima facie case against you for Melissa Doyle's murder,\" Gary said sharply.\n\n\"Anyway, we have the eye witness down in Houston who put Doyle at the murder scene,\" Gary said with some finality.\n\n\"Rat-face! That guy would sell his mother for a hit!\" Penelope hissed.\n\n\"Steve Edwards took that witness's sworn statement. Houston PD has closed the case and informed the relatives and the media that Melissa Doyle killed those men as an act of revenge and then killed herself and in thirty minutes the Chief is going on TV and saying the same thing,\" Gary pushed himself out his chair and reached for his coat.\n\n\"We have motive, means and opportunity and as far as I'm concerned those lipstick hieroglyphics on her mirror are a confession.\" \n\n\"Take the fucking win and go on vacation Bishop. Get that FBI poster boy to propose to you or I'm going to divorce Mary and propose to you myself,\" Gary patted Penelope on the back.\n\n\"Silvia hates me,\" Penelope shuffled her feet.\n\n\"Silvia has a U-Haul parked permanently in her driveway. She'll find comfort elsewhere and soon,\" Gary reached for the door handle.\n\n\"Get out of here Bishop. I'm logging you out on two weeks' vacation,\" Gary opened the door and ushered her out of his office.\n\n*****\n\n\"You didn't kill her did you?\" Felicity Benson lay in bed staring at the ceiling.\n\nSteve Edwards lay in bed beside her, lazily stroking her flat stomach.\n\n\"Fuck no honey! What do you take me for?\" he objected.\n\n\"I went around to her place to question her. In Houston I found all those texts that Melissa had sent to Bishop and I figured there might be an angle there. She was lying dead on the bed; she'd left her front door open,\" Steve explained.\n\n\"She left a note for Bishop proclaiming her unrequited love. It took me thirty seconds to seize the opportunity. I wrote the Eta Lambda Pi bullshit on her mirror with her lipstick and purchased the ammunition at a store across town and took the red wig out of your drag closet,\" Steve's hand drifted up Felicity's torso and he cupped her breast.\n\n\"Rat-face took the five hundred and confirmed it was Melissa Doyle he saw in the parking lot wearing that red wig. He's since gone on a long vacation,\" Steve said with a finality that Felicity had intent to question.",
        "\"Melissa left a note? What did you do with it?\" Felicity turned to face him.\n\n\"I burned it honey. It could never be found. I needed the scene to be convincing,\" Steve stroked Felicity's cheek and then he kissed her.\n\nFelicity returned the kiss and rolled onto her side so she could caress him.\n\n\"Who the fuck would ever have thought that I'd end up in love with a policeman,\" she smiled at him.\n\n\"Who the fuck would ever have thought that I'd fall in love with a drag queen,\" Steve smiled back at her; the devotion in his eyes evident.\n\n\"You don't regret leaving the force?\" Felicity asked him for what must have been the hundredth time that week.\n\n\"The only thing I regret is not finding you sooner,\" he kissed the tip of her nose playfully.\n\n\"Is Mitch Freeman still pissed that I took his job?\" Steve asked.\n\n\"He'll get over it. It's my business and I'll decide who runs it for me,\" Felicity sighed.\n\nThere was silence for a while and then Felicity spoke.\n\n\"You've never asked me if I killed them,\" she stroked Steve's face and looked deeply into his eyes.\n\n\"And I'm never going to. They got what they deserved; that's all that matters,\" Steve returned her gaze.\n\n\"There are still two of them out there unpunished,\" Felicity's features sharpened.\n\n\"They will get what's coming to them one day,\" Steve snuggled up to Felicity, his erect penis poking her in the belly.\n\n\"Did I tell you that I love you,\" he sighed.\n\n\"Only about a hundred times today,\" Felicity giggled as he reached for her and began to stroke her.\n\n\"And?\" he put on a sulky face.\n\n\"And I love you too,\" Felicity pulled Steve on top of her and kissed him passionately.\n\nThe End\n\nAs always, your comments and criticisms are welcome. Please tell me what you think of my story,\n\nMichele Nylons\n\nMay 2021\n\n \n"
    ],
    "authorname": "MicheleNylons",
    "tags": [
        "anal",
        "ass fucking",
        "pantyhose",
        "panties",
        "nylons",
        "fucking",
        "fellatio",
        "blowjob",
        "tranny",
        "drag queens"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/a-dish-best-served-cold-ch-04-1"
}