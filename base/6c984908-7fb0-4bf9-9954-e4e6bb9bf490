{
    "title": "Christian College Sex Comedy Ch. 16",
    "pages": [
        "*An army is one man's courage and a thousand men's discipline*\n\n(A thankful bow to Frontma for another round of editing)\n\n(Yes, this tale is supposed to be somewhat humorous and outrageous too. While not always comedic, I'd like to think it is mostly a good-natured romp.) \n\n*\n\nThe post-midnight meeting with Cordelia and a rag-tag group of students was probably the most insane stunt I'd pulled for some time. I thought Cordelia was nuts but my opinion was not solicited. I was wanted for my upper body strength and long reach. See, one of the Administration's greatest tools was the school's surveillance network.\n\nAs Cordelia saw it, there was one point of weakness for the system and that was in the heart of the Security Center -- the system servers that coordinated all the incoming data and video feeds. We weren't going to sabotage it; that would be simple. No, we were going to steal it, and that's exactly what we did.\n\nI had to admit that was the last thing Gorman would have suspected us of trying to pull off and the best part of it was that all the surveillance devices were rendered impotent because we stole the objects that held the information of our misdeeds. We stole out the back gate of the campus and buried the equipment out in the woods.\n\nLIGHTNING STRIKE\n\nI knew there would be hell to pay and I couldn't contact my normal shower-mates so I went to the shower early and was back in bed by the time Dana Gorman stomped into my room.\n\n\"You weren't in the shower,\" she growled, \"but several other students were.\"\n\n\"Why are you angry for me not being in the shower with the girls?\" I yawned.\n\n\"Because it would give me leverage to make you give me back my security system, you Jackass,\" she snapped.\n\n\"And you blame me...why?\" I slipped out of the covers, naked, and started to get dressed. Dana didn't seem to mind looking me over.\n\n\"This is no longer a game,\" Dana pointed out. \"You've stolen thousands of dollars of University property. If I can't find things and quickly, I am going to have to bring in the Sheriff's Department and that equals criminal charges.\"\n\n\"Should I take it you've made no progress in the assault on the students yesterday, or is their support for Christina good enough reason for you to let them suffer?\" I continued.\n\n\"You are being an idiot again,\" Gorman accused me. \"We can deal with that once you and the others stop treating this like some social experiment and get back to your studies.\"\n\n\"I think this is the point where we cease having anything to discuss, Coach,\" I muttered. Gorman looked down at the ground and clenched her fists in frustration.\n\n\"A third of the Soccer team walked off yesterday. I lost half the Karate club as well,\" she ground out. \"Archery disbanded, and it looks like Orienteering and Marksmanship will do the same today. I'm telling you, this is nuts. I've worked my ass off making this school athletically competitive and everyone is throwing that away.\"\n\n\"I don't know what to tell you except that I doubt any of this would have happened if someone hadn't been gunning for Rio on our first day,\" I said. \"I certainly made mistakes but you made the first one. I do have one thing I want you to think about.\"\n\n\"What is it?\" she asked warily.\n\n\"How do you like your war now?\" I stated with intensity. She didn't laugh it off this time.\n\n\"You think this is going to keep going?\" she questioned.\n\n\"You have our backs against the wall; you are beating and expelling us,\" I explained. \"We don't have many options.\"\n\n\"I won't let you win,\" she said evenly.\n\n\"I'm afraid it is out of our hands, Dana,\" I warned her. I didn't know for sure things were going to spiral out of control but I couldn't see any way out of it. Dana shook her head and left.\n\nAround 6:45 Alice came to escort me to breakfast. She talked; I remained quiet until I picked up Rio, Valerie, and Iona. We were crossing campus to the Dining Hall when Valerie nudged me. I looked in the same direction she was and saw Hope walking across the lawn on a definite mission. It didn't take me a second to see where she was heading; Rhaine and two of her associates were in huddled conversation.\n\nRhaine never saw what hit her. Hope did a spin kick to her head and sent her flying. She punched the other two, followed up with a heel kick to one and two blows to the head to the last one. Hope then swooped down, snatched up their phones, and rapidly walked away. The first attack hadn't lasted ten seconds.\n\n\"This is your last chance to get out of this,\" I whispered to Valerie.\n\n\"I'm sorry, Mother,\" Valerie sighed. I didn't have time to know what that meant because I figured the open nature of Hope's attack was Christina's way of telling the rest of us it was time to strike back for what Rhaine's people had done to our side yesterday. I turned and clocked Alice hard enough to knock her down.\n\n\"Rio, get her phone,\" I hissed to my friend. Rio was surprised for a second, then jumped on Alice's body. People around us began murmuring but most were in shock. I didn't wait around because I had spotted a group of five of Rhaine's people a few feet ahead. The ripples of Hope's attack started to reach them when I kicked the first one in the back.\n\nValerie was right at my side, flipping a second girl over before she had a chance. I saw Iona grabbing up their phones even as we fought on. The remaining three were able to turn and face us but it didn't do them any good. We steamrolled over them, punching and kicking them into the ground. The first girl near us began to scream as I closed on the next group.\n\nThis turned out to be Joy and Mercy. Valerie was about to pummel them but I held her back.\n\n\"Joy, Mercy, sit on the ground and give us your phones,\" I growled. They hesitated and tried to back up.\n\n\"Mercy, do it,\" Rio hissed. \"I don't want to see you get hurt.\" That did it for Mercy, and she took to her seat and handed her phone to Rio.\n\nRio showing compassion toward Mercy was unlooked for and something we'd have to talk about when this bout of madness ended. Joy went down beside Mercy, allowing Valerie and I to move on. By the time we closed on the fourth group, the general student body had figured out something bad was happening and parted like the Red Sea as we approached our quarry.\n\nThe three girls we approached knew we were coming. I could read their disbelief in their eyes; they couldn't imagine that the attacks they'd perpetrated on our people were coming back to haunt them. One got a blow into my stomach before we finished them off, giving their downed forms a few extra kicks before heading for our last targets.\n\nThere were four of them, with the added complications of a history teacher named Mrs. Cunningham who was a matronly, sixty-something-year-old instructor. They were standing at the four doors that entered into the Dining Hall and if I had been them, I would have run, but I guessed that the teacher standing so close made them assume we'd hold back; we didn't.\n\nThe first girl stepped up to say something to me when I split her lip and sent her stumbling back. I kicked the one farthest away while Valerie punched another one in the throat. I chased the second girl down and while she was bent over, I pounded her in the cheek and planted her in the ground.\n\nI spun back and kicked the first girl in the face, flipping her over, and witnessed Valerie run the fourth girl into a door and knock her out. Mrs. Cunningham finally recovered enough to grab my arm.\n\n\"What are you doing?\" she muttered weakly.\n\n\"Yesterday, these girls thought it would be fun to kick some of their fellow students down some stairs, landing them to the infirmary,\" I responded. \"Today they reaped what they sowed.\" I had no idea if any of the girls I'd attacked had actually beaten up any of Christina's people, but that wasn't the point.\n\nThe Administration had let Rhaine's girls know that they wanted Christina's people intimidated and suppressed. Not being schooled in the application of force, things had escalated when Christina's people had not backed down. The Chancellor had let them think they were entitled and we'd just shown them they were not; they were going to be held accountable for what they did.\n\nMrs. Cunningham released me and bent over the first moaning girl. Iona came up with a handful of phones.\n\n\"What do we do with these?\" she asked.\n\n\"Give them to me,\" chuckled Rio. She took the phones, took out the memory cards, and chucked the phones up on the roof.\n\nIn the end, Christina only used twenty of us to send eighty of Rhaine's people to the infirmary, and we accomplished it all in under five minutes. We brazenly arrived at breakfast, most of us making for the food line but Rio sprinting for the bathrooms to flush the evidence. Up with the teachers, things were in utter chaos.\n\nGorman's walky-talky didn't seem to be working (thank you, Cordelia) so she grabbed the closest student and wrote them a message. She handed it to the girl (a freshman) who promptly read it, then ate it right in front of the coach. Coach sat that girl down, grabbed a second girl. This one took the message and ran straight to the bathroom and flushed it.\n\nAround Chancellor Bass a storm was boiling over. Several teachers had witnessed the violence and wanted something done about it before one of them was drug into the matter by means of a physical confrontation. They were demanding the attacking students to be rounded up immediately.\n\nSeveral teachers, led by Dr. Larson, were begging, pleading, and demanding that the Chancellor call it quits with this whole suppression scheme. Bass refused to budge, ordering Gorman to round everyone up and hold them in the parking lot. Gorman was trapped.\n\n\"That's insane,\" Dana snapped. \"What am I going to round them up with -- students? We've seen how well that's worked. I don't have enough security guards to peacefully bring them in and my only alternative is to bring in the Sheriff's Department and use force, and I'm not going to do that.\"\n\n\"You will if I tell you to,\" the Chancellor threatened. Dana threw her hands up in the air and backed away. She paced for about a minute, long enough for us to get our food and take our seats...which were all in one section of the Dining Hall due to some 'screw up' (read: Cordelia) in their seating assignment. There appeared to be around three hundred of us now and morale was high.\n\nI caught sight of Gorman angling toward Christina and starting to talk. Christina signaled for her to stop but only long enough to summon three people to her, one being me. Temperance, the senior, was one of them, and the third was a girl I'd only known by her photograph. She was Hannah Cartwright, the Sophomore Class President.\n\n\"I'm asking for a cease-fire,\" Dana reiterated. \"The fighting ends on both sides, strict discipline will be enforced for any and all infractions, and there will be no administrative actions for what has happened over the past forty-eight hours.\"\n\n\"We want our phones, tablets, and laptops back, plus the ability to use them,\" Temperance stated.\n\n\"All expulsions are to be cancelled and the procedure to bring Heaven back is to begin immediately,\" I continued. Dana nodded to both addendums.\n\n\"I want my security system back,\" Dana countered.\n\n\"We will start looking for it as soon as this deal goes through,\" Christina agreed.\n\n\"That is the best I can hope for,\" Dana sighed. She stuck out her hand to Christina, who stood and shook it. \"Deal?\" Christina looked around to get our consensus.\n\n\"Deal,\" Christina echoed. I wanted to sit back and savor our partial victory but Christina was tense and nervous and that infected us all.\n\nWhen Dana got back to the Chancellor, she made her case. Dr. Bass glared at her for a moment but the words that followed, while spoken in a low voice, reverberated throughout the hall.\n\n\"That's idiotic; we will not negotiate with these children. Your incompetence has led us to this point, Ms. Gorman; you are fired.\" Several teachers immediately protested but Dana simply put down her walky-talky, turned, and strolled out of the room.\n\nDr. Bass cancelled classes for the day and confined everyone to their dorm rooms and dorm floors until the situation was resolved. Christina told us to ignore the travel restrictions but to keep in groups and avoid confronting security. When we were ordered from the hall, I noticed everyone was traveling in groups now, even the teachers. Things had become totally crazy.\n\nAs Valerie, Rio, Iona and I returned to our dorm, we ran across Alice coming back from the nurse's office. When she saw us, she looked hurt and a bit afraid, but she showed enough courage to confront me.\n\n\"Why did you hit me?\" she demanded. \"I did nothing to deserve that.\"\n\n\"Alice, you were sent to spy on me, or did you search every dorm room as thoroughly as you searched mine?\" I shot back.\n\n\"I was told to do that when I accepted the position of Dorm Mother,\" she replied.\n\n\"Did it occur to you that I might resent being singled out for persecution and, if given a chance, I'd strike back?\" I explained. \"If not, it should have, especially after yesterday.\"\n\n\"I had nothing to do with what happened to those other girls,\" she shook her head.\n\n\"Listen, you stupid cunt,\" Rio snapped. \"You got orders from the same person who sent those girls to hurt our friends.\"\n\n\"When you chose to take Barbie Lynn's place, you placed yourself side by side with those mean girls, Alice,\" Iona added. \"You chose to be a soldier in their army. Soldiers get shot, even if they don't get involved in shooting at the enemy themselves.\"\n\n\"It is time for you to go,\" Valerie told Alice. Alice stayed in the hallway as the rest of us walked away. By the time we made it to my door, Pandora, Paige, Brandi, and Opal had joined us. \n\n\"Cordelia wants your hook-up activated once more,\" Pandora informed me. She had a bruised right eye and a bandage above the eyebrow. \"She figures any minute now, the Chancellor will shut down our regular internet lines.\"\n\n\"Sure thing,\" I agreed.\n\n\"I'll get the hot oil and work Valerie over after that tough fight she was in,\" Rio volunteered.\n\n\"Boundaries,\" Valerie cautioned my buddy. \"Besides, if anyone works over this body, it will be Zane.\" Rio chortled and I gave the tall biker-chick a skeptical look.\n\n\"Just kidding,\" she laughed, \"though we both could probably use some stress relief.\" That train of thought was interrupted by a fresh group of freshmen entering the area. I went over to one of the glass panels that gave me a view over the campus. Small groups of students were violating the curfew, and here and there a lone campus security guard gave chase but it was an uneven struggle. Students could run inside a dorm and vanish, and Campus Security didn't have the resources to search every dorm room.\n\nThe pair that came up the stairs thirty minutes later was a real stunner. It was Barbie Lynn with her knee wrapped up, being supported by...Dana Gorman. Dana also had a backpack that clinked very time she moved.\n\n\"Look what I found sneaking across campus,\" Gorman snorted. No one said anything; she was the Evil Henchman, after all.\n\n\"Thanks, Dana,\" I said, as I took Barbie off her hands, \"take a seat and relax for a while. What brings you to my room, anyway?\" Barbie looked terribly concerned by this turn of events.\n\n\"My cable is dead -- no internet or TV -- and I don't have access to the few remaining security systems, so I figured if anyone had access to the outside world, it would be you,\" Dana related.\n\n\"What do you need?\" I continued.\n\n\"I'd like to watch some international soccer,\" she told me. I looked toward Paige, who shrugged, then nodded. Dana took a spot on the closest sofa to a TV and sat down. She unzipped her backpack and pulled out a beer. Rio homed in on that and jumped over the sofa beside Dana.\n\n\"What do you think you are doing?\" Dana asked Rio as my friend put her hand into the satchel.\n\n\"Getting a beer; I figure we are all rebels here,\" Rio smirked.\n\n\"No, you are a rebel; I'm unemployed, and I don't want to add a criminal conviction for giving alcohol to a minor to my list of accomplishments,\" Dana explained.\n\n\"Come with me,\" Valerie commanded, as she scooped up Rio's arm and headed away. \"Let's play some pool.\"\n\n\"Oh!\" Rio bubbled, \"Are you going to use your big hard stick on me?\"\n\n\"Yes; it is called caning,\" Valerie retorted.\n\nBARBIE LYNN, IONA AND ZANE\n\nIona was looking lost with everyone seemingly going in different directions, so I took her by the hand and, with Barbie Lynn, retired to my bedroom.\n\n\"I love you two,\" I sighed as the stress slowly started to recede. Barbie Lynn pulled close to my side and when I looked at her, we kissed. Iona pressed into my front and rested her head on my chest.\n\nOur lips parted and I looked to Iona, who was giving me a wide-eyed smile. We kissed for some time until Barbie Lynn began massaging my rod through my pants. I returned to Barbie until Iona hugged me tight, resulting in me going back and forth for a while.\n\n\"Let's go to bed,\" Iona suddenly spoke up. Barbie Lynn chuckled at the smaller girl's assertiveness while I marveled at how far she'd come from the scared girl who had grabbed my arm only a few weeks earlier.\n\nI sat Barbie Lynn down on the edge of the bed and worked off her skirt first. I stopped Iona from doing the same, preferring to undress her next. I alternated taking off items of clothing until they were finally naked on the bed, side by side before me. \n\n\"Well, Zane,\" Barbie Lynn began, sliding one leg up until the heel was touching her thigh.\n\n\"What are you waiting for,\" Iona finished, mimicking Barbie's movements.\n\n\"I would like to express right now how much I've missed the both of you,\" I swore to them.\n\n\"Less talk; more action,\" Barbie Lynn instructed. I began stripping as fast as I could and the girls crawled underneath the covers.\n\nIona was on her back, propped up on her elbows as I finished shedding my clothes. Barbie Lynn surprised her by rolling onto her side and taking a nipple into her mouth, causing Iona to give a startled squeak. Iona had not expected to be the center of our attention...that was normally Barbie Lynn's role...so she couldn't mount an effective defense against our combined affections.\n\nWe each feasted on a nipple, taking the occasional stop to kiss Iona deeply, or one another, with Iona's breasts rubbing against our cheeks. Both our hands made our way to Iona's honey box, pulled her reluctant legs apart, and began rubbing all over her pubic area. We pushed fingers almost a knuckle deep into her super-tight virgin cunt.\n\nBarbie and I spread her juices around, making the whole pubic mound slick and fluid. We even put our fingers on opposite sides of her clit and rolled them back and forth, sending her over the edge.\n\n\"Jesus,\" she panted. \"Oh, thank you, thank you...oh, thank you,\" she gasped. \"This feels so good...YESSSSSSS!!\" she cried out.\n\nAt this point, I was thinking about letting Iona go but Barbie Lynn kept flicking her clit and probing her pussy while sucking in and twirling her breast. I added a finger to the mix and kissed Iona, who desperately tried to suck my tongue out of my mouth -- ouch! At the same time, Iona's back arched off the bed again and again, her thighs trembled, and she clutched at the headboard so hard it shook.\n\nAt the point I feared Iona's heart would explode, I pushed Barbie Lynn's hand away and she looked up with her lips slick with the saliva generated by sucking on Iona's tits.\n\n\"She is the best friend I've made all year,\" Barbie Lynn confided in me.\n\n\"Better than me?\" I questioned.\n\n\"Honey,\" she drawled, \"I think we can agree you're a tad more than a friend.\"\n\n\"What am I, then,\" I teased; \"pen pal, cyber-fan, bosom buddy?\"\n\n\"I think bosom buddy...\" she grinned as she squeezed her magnificent orbs together, \"...is closer to what I'm aiming for.\"",
        "\"My pussy is still quivering,\" Iona mumbled in a tiny voice. \"Did I lose my virginity?\"\n\n\"No, Baby,\" Barbie Lynn cooed to her, \"You had a really good one is all. That is what an orgasm is supposed to feel like. That is what Zane does to me every time.\" Huh? I do?\n\n\"Oh,\" Iona sighed dreamily, \"I like that. Isn't it your turn now?\"\n\n\"It certainly is, and Zane knows what I want, don't you,\" she winked.\n\n\"I'll get it,\" I feigned annoyance, \"but I'm still going to take my time with you. I'm not rushing into anything.\"\n\n\"I like the way you think,\" Barbie Lynn purred. She laid out on the bed, her beautiful breasts spreading out and her hair cascading over the pillows she rested on. It hurt to move away from the sight of her.\n\nI got a small tube of lube, crawled over to her, and wedged the tube to the small of her back. Letting her body warm it up would make the sensation more pleasurable.\n\n\"Whoa, that's cold,\" she gasped and wiggled.\n\n\"Let me warm you up, then,\" I grinned. I moved underneath the sheets and then between her legs.\n\n\"Hello,\" she said demurely, my body poised over hers, our faces nose to nose. She rested her elbows on my shoulders with her arms up. \"This feels good, Zane, feels right.\" Her thighs pressed against mine and my cock rested on her pubic mound. I moved my face down and stole a quick kiss. Barbie followed suit and soon we were lip-locked.\n\nIn time we were trading kisses on the neck and earlobes, our heads playfully moving back and forth. When I reached the top of her breastbone, Barbie Lynn flinched; she'd tried to loop her bum knee over my leg and the pain had been a sharp reminder of her limitations. I lowered myself and took a nipple into my lips and tickled it with my tongue.\n\n\"Does that make it feel better?\" I teased her.\n\n\"Uh-huh,\" she purred, \"now get back to it.\" I hardly felt inclined to deny her request and began alternating each nipple and breast. I let my lips and tongue go over every inch of her breast, especially along the base where a slight taste of sweat mixed with the scent of her body soap.\n\n\"Zane, I want you in me,\" she pleaded with sultry passion.\n\n\"But I want this,\" I responded, running my hand along her puffy cunt lips.\n\n\"I promise we can do that later, you know how much I love your tongue, but I'm missing something else even more,\" she expressed her desire.\n\nI thought about the body dynamics of the situation and decided the best solution was to roll Barbie Lynn's hips on their side, lifting her left, uninjured leg to my shoulder. Retrieving the warm lube, I rubbed some liberally over her butt hole and two of my fingers, pushing the middle finger gently in first.\n\nBarbie Lynn flexed her body and moaned as the finger pressed into her. Soon she was rocking her hips and pushing down on my hand.\n\n\"That still looks painful,\" Iona whispered as she moved in for a closer look.\n\n\"The pleasure far exceeds the pain, Shugah.\" Barbie Lynn expressed what was about to come.\n\nI leaned/crawled over her hips, one hand still working Barbie's tits over while I kissed a nipple and tugged on it with my teeth. Barbie was letting her arm roam around when Iona intercepted it and put the blonde's fingertips to her mouth. Unbidden, Iona began sucking on those fingers and I could see that Barbie was torn between the eroticism of the act and the fact it was innocent little Iona who was doing it.\n\nBarbie Lynn used her free hand to push her succulent boob deeper into my mouth...not that there was any way I could get it all into my mouth. Iona went from finger to finger, spending extra time on the thumb. Barbie's chest began heaving from the excitement and took a jolt when I sunk my second finger into her rectum.\n\n\"Are you okay?\" Iona worried.\n\n\"Yes, yes, yes,\" Barbie Lynn exulted happily, \"and it's going to get better real soon.\"\n\nI decided to move two fingers along her sopping wet slit and let my thumb depress her clit and rub it around.\n\n\"Aha...ah...oh, yeah,\" she panted as my hands began working in tandem. I could tell Barbie Lynn was fighting a losing battle against her orgasm and I wasn't in a mood to make things easy. I rammed my two fingers deep into her ass while biting her nipple and strumming her clit as fast as I could.\n\n\"Lord Jesus loves Meeeeeee!!!!\" she went off. \"Gah! Yeah, yeah...oh...ugh...baby...Yes!\" Barbie Lynn went on and on with increasing volume. Her pussy dripped all over my fingers, slick and sensual to my touch. I brought those fingers to my lips, going back for a second taste while her body still shook from her climax.\n\n\"Don't mind us,\" Rio announced as she strolled into my room, pulling a reluctant Mercy behind her. \"My bitch is here and I'm going to bite a chunk off.\"\n\n\"Hi, Mercy,\" Iona waved. Mercy shot her an embarrassed smile. Rio led her to the far side of the bed. I was a bit concerned that too many people were coming into my room but I couldn't look everywhere and pay attention to Barbie Lynn and Iona too.\n\nI took up the lube and coated my cock. Before I could spread it out evenly, Iona reached down and did the job for me, even sharing a shy smile with me as she did so. She even helped me lodge it against Barbie Lynn's anus. Iona felt the tension along my penis until Barbie's sphincter gave way and let me in, then she moved her hand away.\n\n\"Wow,\" she whispered, even as Barbie Lynn sighed in satisfaction. As a counterpoint, we heard\n\n\"On your knees, Slut-Bunny,\" Rio barked to Mercy. She pushed Mercy forward face-first on the bed, flipped up her skirt, and took a bite out of her butt. Mercy yelped and buried her face in the sheets. Sometimes Rio could be sane, but totally nuts was her default setting.\n\nI measured the tremors in her body as I gently pressed my body onto Barbie Lynn's hips, deepening the penetration of my cock into her back passage.\n\n\"Oh, God, Zane,\" she moaned. \"This never gets old...filling me up like you do.\" I slapped her meaty butt cheek hard enough to leave an angry red handprint. Barbie gave a deep intake of breath that became a squeal of joy.\n\nMercy grunted as Rio yanked her panties off her butt and down her legs.\n\n\"Crawl over there and give Barbie Lynn a kiss,\" Rio demanded. Mercy gulped and hesitated to respond so Rio hauled off and smacked her butt hard enough for people outside the room to hear. Mercy's eyes grew wide, her mouth gaped open, and her cheeks flushed, then she smiled.\n\nShe made her way slowly across the bed, clearly enticing Rio to spank her several more times. Mercy first brought Barbie Lynn's gaze over toward her by tipping her chin with one careful hand. The first kiss was tentative and tender. SMACK!\n\n\"Kiss her like you want to be kissed, you whore!\" Rio taunted Mercy. As she spanked her with one hand, she drove two fingers into Mercy's cunt with the other.\n\nI had to assume that Mercy was already pretty wet because instead of pulling away from the penetration, Mercy leaned forward on her elbows while thrusting her hips back against Rio's intrusion. While I was being sensitive to the slow burn Barbie Lynn was going through, Rio drove her hand rapidly like a maniac.\n\nIt was a good thing that Mercy liked it rough, but then she chose to be with Rio as much as Rio chose to pick on her. At the opposite side of the expression spectrum, Iona curled up against Barbie's other side and let her lips gracefully flit along the shoulder and arm. Mercy returned for another kiss at the same time I reached my full expansion inside of Barbie Lynn.\n\n\"Oh...my,\" Barbie gasped. I waited as she adjusted internally while Mercy kissed her with a lot more passion and intensity. That didn't stop Rio from administering a few more sharp smacks to Mercy's bottom, compelling Mercy to rumble with a hunger for more. Iona let her lips migrate from arm to hip, and leading up Barbie Lynn's hip to my stomach.\n\n\"Reach a hand back here and take over, you slut,\" Rio told Mercy. When Mercy made the maneuver, Rio began stripping down. Unlike this weekend, she had only her two labia piercings in, though she still had her tattoo along the hip. She gave me both raised eyebrows to go along with her insane grin as the clothes finished coming off.\n\nI partially withdrew my member from Barbie Lynn, eliciting a moan. Iona settled up against me, resting her hands on my chest and hip. I kept a grip on Barbie's hip and slipped a hand around Iona's hip and buttocks, rubbed it along her anus, ending at her pussy.\n\n\"Ugh,\" Iona grunted, as I stroked her kitty and sunk a finger inside.\n\nThe group of us got into a rhythm once Rio knelt behind Mercy and began lapping up her pussy and squeezing her ass. By the way Barbie Lynn was pushing and rotating her hips, grabbing the sheets in tight fists and moaning between her kisses with Mercy, she was approaching her second orgasm.\n\n\"Zane...Jesus Christ, Zane...oh, God, Baby...ah, aha...YES!!!\" she screamed. Her ass muscles gripped, twisted, and squeezed my cock so hard, it took all my concentration to not shoot off into her rectum. Barbie Lynn kept pulsing and rocking over the sheets as waves of intense pleasure crested and slowly worked its way through her system.\n\nIona and I started seriously kissing as she stood on her knees beside me.\n\n\"I want to try something,\" I told her.\n\n\"He wants to try something?\" I heard Valerie's voice talking to an unseen party. \"Somehow the current five-way isn't enough for him.\" There was a snort in agreement of that.\n\nI pumped Barbie Lynn four times in quick succession, then leaned back until my cock was at the very edge of leaving her butt. My torso pivoted, I slipped my arms between Iona's legs and pulled her up by her buttocks and to me.\n\n\"What?\" she gasped.\n\nAs Iona rose up and I twisted back to a face-forward position, I licked and tongue-tickled my way from her chest, to her stomach, and finally to her pubic hair.\n\n\"Ah...oh, okay,\" Iona exhaled with pleasure. She put her hands on my shoulders, moved higher, and moved her legs over my arms and rested them on my shoulders.\n\nI still had to hold tight to her ass and raise her to the point I could get my mouth fully on her clit and moist lips.\n\n\"Oh, damn,\" Rio giggled, \"Zane's making me pull out my toys.\" SMACK! \"Mercy, you behave.\" Rio moved off the bed, stopped, and said, \"You had better not remember where I'm getting these from,\" to another person.\n\n\"I wouldn't think of it,\" Dana Gorman allowed. Clearly my surprise showed in my body because she spoke again. \"I wanted to see what all my girls were giggling and whispering about in the showers. I put it down to standard virgin girl hysteria. Now...\"\n\n\"I half expect some porn director to say 'Cut -- print' at any second,\" Valerie added.\n\nI really didn't need my sex life critiqued at this moment. I was balancing one girl on my face, licking her silly, while pounding Barbie Lynn's ass. Seriously, can't a man have a simple three-way with two college girls in his room in peace? I was soon too overwhelmed by the price of my sexual ambition to worry about that question.\n\nI drank deep of Iona's nectar, licking along the folds from top to bottom while letting my upper lip press against her throbbing clit. She took one hand from my shoulder, wrapped it up in my hair, and cautiously pushed my face deeper into her cunt.\n\n\"Oh, God, Zane...ah, yes, yes, yes,\" she panted. \"That's it...right there...AH!\"\n\nIona began riding my face with greater and greater vigor. Barbie Lynn gyrated against my crotch. I heard a vibrator cut on and Mercy groaned as Rio did something to her. I suspected that was moving her off Barbie because Barbie began using greater force against me. I began to feel a tightness building up in my guts as my blood pounded from the exertions I was putting myself through.\n\n\"Come here, Mercy,\" Rio coaxed, \"On your back, my little slut, and spread those legs.\" I wished I could see what she was up to because soon Mercy was moaning and gurgling all over the place.\n\n\"Please, Rio,\" Mercy pleaded, \"please...\"\n\n\"Do you like that?\" Rio teased. \"Wiggle that ass for me, then, Baby.\"\n\n\"Ah...oh, Rio, I love you,\" Mercy moaned. SMACK!\n\n\"None of that, you skank,\" Rio snapped. \"You are my toy, nothing more.\"\n\n\"Yes,\" sobbed Mercy.\n\n\"Good girl,\" Rio responded. Mercy gave off a hiccup, then a gasp of pleasure. \"You know you are my tight-ass whore; right?\" Her victim lurched and moaned several more times.\n\n\"Yes, yes...I understand,\" Mercy gasped. \"I'm yours...whenever...you want.\" SMACK!\n\n\"Good girl. Now shake that ass, Bitch,\" Rio continued. Mercy began making choking -- sobbing sounds. \"Don't you dare cum until you get me off. Work that tongue like you mean it.\" I could now visualize Rio and Mercy in a sixty-nine, Rio on top, with a dildo up Mercy's butt.\n\nWhile figuring that out, I almost missed Iona starting to spasm on my face. I could feel her vagina contracting on my tongue. One hand was yanking and releasing my hair while the fingernails on the other dug into my shoulder. I moved my tongue and latched onto her clit with my lips and sucked on it for all I was worth.\n\n\"Ah...oh, oh...oh, ZANE!!!!!\" Iona screamed. Her fluids dripped over my nose, into my mouth, and down my chin, but that wasn't my problem. My problem was that Iona's body was convulsing, bending her backward toward the head of the bed and me forward into Barbie Lynn. Of course, if I couldn't stop Iona's progress, she'd topple onto Barbie Lynn too.\n\n\"Oh, Godfuckdamn!\" Barbie exploded as I rammed my full length into her inadvertently. \"Jesus, love...\" which was cut off by her orgasm taking over. Her anal muscles constricted and that was it for me. Hot semen shot down Barbie's gut, causing her to scream even louder. My whole body was trembling from my ejaculation, plus the strain the two women were putting on me.\n\nSomehow I hung on long enough for Iona to reach behind her, catching the headboard, while Barbie Lynn extended her arms up to brace Iona from tumbling over.\n\n\"Fuck, yeah, that's what I'm talking about,\" Rio laughed. \"Mercy, you can come now.\"\n\n\"Uh...uh...thank...oh, God,\" Mercy gasped out. \"Rio...uhmmm...ugh,\" she choked out before she buried her face into Rio's pussy and muffled further expressions of ecstasy.\n\n\"GRrrr,\" Rio growled, before burying her face into the top of Mercy's thigh. I figured by Mercy's thrashing that Rio took a bit of a nip out of her playmate's flesh. In a shuddering heap of sweaty flesh, Iona, Barbie Lynn, and I flopped onto the bed without anyone being crushed. They lay there while I remained on my knees.\n\n\"Damn,\" Valerie chuckled, \"I feel like a virgin all over again.\"\n\n\"Hell, I need to take a shower and I just sat here,\" Gorman agreed. I moved between Barbie Lynn and Iona. \"Fuck...he's still hard.\"\n\n\"Zane's like that,\" Barbie Lynn laughed between gasps of breath. \"He's always hard after the first round, God bless his soul.\"\n\nIona snuggled into me, kissing my chest between gulps of air.\n\n\"It's only been thirty minutes,\" Iona sighed. \"We'll let him recharge a little bit before going at him again.\"\n\n\"Yes, my butt hurts,\" Barbie Lynn added. \"I won't be ready for...say an hour.\"\n\nRio dismounted Mercy and rolled next to Barbie Lynn.\n\n\"Mercy, get up here and kiss me, damn it,\" Rio breathed huskily. Mercy staggered around on all fours and crawled up Rio's body until she straddled her. A dreamy smile on her face, Mercy went to kiss Rio on the lips but Rio stopped her.\n\n\"No, you don't, you cunt,\" Rio chastised her. \"Here,\" she indicated her chin. Mercy kissed it. Rio then led Mercy on a slow quest over her nose, cheeks, earlobe, and finally the lips. Rio grabbed Mercy's hips and pulled the older girl down on top of her.\n\n\"Okay, I have to ask; how did Rio end up in bed with Mercy? Mercy is one of my better martial artists and Rio is...well, Rio -- kind of an annoying little twerp,\" Gorman wondered.\n\n\"I won her playing bingo,\" was Rio's smarmy comeback.\n\n\"They developed a relationship when you put her in our path,\" I was a bit more honest. \"Mercy discovered something about herself and someone in Rio who could satisfy her needs.\" To emphasize the point, Rio spanked Mercy's ass hard and the girl humped Rio in response.\n\n\"So, besides Cappadocia, are there any of my other girls you...have a relationship with?\" Dana inquired. She even leaned forward on the chair she was sitting on.\n\n\"What makes you think Cappy and I have a thing?\" I asked.\n\n\"On Monday,\" Dana rolled her eyes at my naivet\u00e9, \"she hated you and on Wednesday, she couldn't keep her eyes off of you and couldn't drive the other teammates out of the gym for your...private lesson. Just because I'm over thirty doesn't mean I'm soft in the head.\"\n\n\"That's not fair, Coach,\" Rio smiled past Mercy. \"We never thought you were bright.\"\n\nBefore I could say or do anything, Barbie Lynn elbowed her.\n\n\"Ow!\" Rio snickered. \"Why are you hitting me?\"\n\n\"I owe you. You said a bad thing, and Zane says never fight yesterday's battles. Now that the Coach is no longer the bad girl, we don't pick on her,\" Barbie Lynn explained.\n\n\"But I'm always annoying,\" Rio countered. \"Why is this time special?\"\n\n\"Rio, don't you think Zane deserves a break? He's always throwing himself onto the train tracks for you and you give him shit for it,\" Barbie Lynn sounded a bit cross. \"After all, you wouldn't have Mercy if you'd had your way. Zane was right about you being good for the rest of us to know, and he was right about saving Mercy. I trust him about Coach because I trust you too.\"\n\n\"Trust -- smust, I'll keep my spank-o-matic,\" Rio grimaced. She clearly got Barbie Lynn's point but admitting it at the moment wasn't in her. \"So, does anyone want to give Mercy a hard spanking? If not, I'm going to get my big strap-on and ream her ass until she is so hoarse, she can't scream anymore.\"\n\n\"Don't you think you two need to grow together before using the 'OMG' model?\" I warned her. That thing would tear Mercy's unprepared butt to shreds. I reached over Barbie Lynn and spanked Mercy four times, two to each ass cheek. She yelped and jolted with each contact, and while tears welled in her eyes, she couldn't have been happier.\n\n\"I'm getting my favorite strap-on, then,\" Rio wiggled from under Mercy.\n\n\"Hold her back,\" Valerie joked. \"She's lost her mind.\" Mercy buried her face in the bed, shook her head, and raised her butt up in the air. \"Fine, if it's the Spas-monkey you want, so be it.\"\n\n\"Have some of this,\" Barbie Lynn fished out the lubricant and handed it to Mercy. \"I don't know how patient Rio is going to be when she gets back.\"\n\nRio, who was only a few feet away getting out and attaching her strap-on, stuck out her tongue at Valerie and Barbie. \"Spas-monkey? I prefer Vibrator-Bunny, or didn't you two get my tweet?\"\n\n\"How about Vibrating Spas?\" Iona suggested. Rio howled and charged the bed.\n\n\"That's it,\" she giggled, \"that tight little virgin butt-hole is mine!\" Iona squawked and buried herself under my side.\n\n\"That's my virgin butt to nurture and enjoy, bro, not yours,\" I taunted Rio as I reached around and put a comforting arm around Iona. I wasn't sure how Iona would take that. Her kisses to my ribs ended those worries.\n\n\"I'll nipple twist you for her,\" Rio grinned. Belying her threat, she was lining up behind Mercy while Mercy was rubbing lube all along her ass cleft and anus.\n\n\"I never considered the benefits of anal sex in a school full of virgin school girls,\" Valerie mused. \"Oral sex, I expected, but not anal.\"\n\n\"Somehow, when the Founders created the Purity Pledge, I suspect they were forbidding all kinds of intercourse, but they never counted on Zane,\" Dana stated.\n\n\"Rio, I'm not going to take you on in a contest you love and I hate,\" I smiled. \"How about a shoot-off? I'll spot you two orgasms.\"\n\n\"Four,\" Rio hissed. She'd spread the oil over her dildo and was slowly pushing it into the ass of Mercy. Mercy had her face still buried in the sheets, her fists balled up and her hips pushing back.",
        "\"Uh...uh...uh,\" Mercy groaned, as Rio penetrated with short jabs. She rested her hands on Mercy's shoulder and neck.\n\n\"Okay, now I'm grateful I sleep on my back,\" Valerie commented. \"I promised Zane I wouldn't break her, but if I felt that poking my hiney, I'd stick it somewhere she'd not soon forget.\"\n\n\"Do the world a favor and stick it in her mouth,\" Dana smirked.\n\n\"Hardy, har-har,\" Rio chuckled. She reached down beside Mercy, retrieved her vibrator, and began rubbing it along that girl's pussy slit and clit. Barbie Lynn reached for my cock and began stroking it, rubbing it along her ass and between her cheeks.\n\n\"I need another beer,\" Dana sighed. \"All this is doing is reminding me that plastic doesn't really get the job done.\"\n\n\"Get me a Coke and I'll get the popcorn,\" Valerie said. \"After all, I have an open invitation to join whenever I want.\" I had to wonder when that had happened...then I remembered Rio and her big mouth.\n\nIona had settled in on her side, head propped up on her elbow, as she watched me push into Barbie Lynn once more. I had my hands on her hip and thigh, pushing in with more force this time around.\n\n\"Feels...so...good,\" Barbie Lynn sighed, as my cock filled up her rectum. \"Make me feel good, Daddy.\"\n\nI lifted up her left leg, then gingerly took her wounded leg and raised it to my shoulder as well. As I felt the deep reaches of her bowels envelop me, Barbie Lynn arched her back and let out a sob of joy.\n\n\"Oh, that's what I need,\" she moaned, \"That's what I've missed.\"\n\nUnlike our first round, this time we were raw with our hunger for one another. I kneaded her breasts, teasing and pulling the nipples from time to time. Her body was folded up so that our faces were close enough for me to lock onto those gorgeous bedroom blue eyes. Barbie licked her lips and blew kisses at me.\n\nI was so into Barbie sensually that I almost missed Mercy going off next to us.\n\n\"Oh God, oh fuck, oh God!\" she verbally exploded. \"Please!!!\" Rio kept up the slap, slap, slap of her thighs against Mercy's butt.\n\n\"Don't you give up on me, Bitch,\" Rio taunted her. She grabbed a handful of Mercy's hair and pulled her shoulder up off the bed until she was balancing on her hands and knees.\n\nRio shot a look my way and mouthed 'I love you' as she kept working Mercy over into one cascading orgasm after another. I was pounding deep into Barbie Lynn's tight orifice, Rio was happy, and Iona was giving me a dreamy, contented look. Life could hardly be better.\n\n\"Zane, we need to...Oh, My God!\" Virginia Goodswell cried out in a shocked voice.\n\n\"Here, have my seat, Virginia,\" Gorman grinned. \"You look like you are about to fall over.\" I hadn't even heard Dana or Valerie return.\n\n\"Zane, what are you doing?\" Virginia questioned.\n\n\"I'm a little busy,\" I ground out. Fucking was hard, attention intensive, and pleasurable work.\n\n\"Virginia, he's having anal intercourse with Barbie Lynn Masters,\" Dana chuckled. \"I thought that would have been obvious. Rio Talon is using a strap-on and a dildo on Mercy Chaplain, and Iona, having been touched and licked to two orgasms, is sitting this round out.\"\n\n\"I can see that and...Dana, what are you doing here?\" Virginia, my Spiritual Advisor, asked.\n\n\"I'm unemployed so they aren't my students anymore,\" Dana snorted. \"Also, Zane's got one of the few illegal internet hook-up plus satellite TV. My apartment is a tomb, comparatively.\"\n\n\"This was the farthest thing from my mind when I learned my Dad was sending me to an All-Girl Christian University,\" Valerie added.\n\n\"It is the skirts,\" Rio giggled. \"Zane can't keep his hands off the skirts.\"\n\n\"In my experience, Zane has the pathological desire to worship the female form,\" Iona joined in.\n\n\"Listen, I knew Zane was having...relationships, but coming in and finding him in bed with four women...girls...students is a bit much to wrap my mind around,\" Virginia related. \"My sex life has been a bit vanilla.\"\n\n\"I prefer to think of mine as disappointing,\" Dana confessed.\n\n\"All my boyfriends have lived under threat of dismemberment, so I've had it pretty safe too,\" Valerie stated. \n\n\"Threat of dismemberment?\" Virginia stammered.\n\n\"She's a member of a major criminal biker organization in the Rockies,\" Dana informed her.\n\n\"We are a motorcycle club,\" Valerie defended her family.\n\n\"I'm having sex here,\" I growled. \"If you don't mind...\"\n\n\"We are good, Zane,\" Valerie replied. \"Don't worry about us, and Barbie needs you.\"\n\n\"Gee, thanks,\" I grumbled, but she was right; Barbie Lynn needed my attention.\n\n\"Ms. Palmer, every one of your known associates, except your baby sister, has a criminal record,\" Dana said.\n\n\"I've never been convicted of anything,\" Val countered, \"and Mom got off on a bad search.\"\n\nMercy cried out as Rio shifted to sharp powerful jabs with her artificial cock.\n\n\"I've got a record,\" Rio crowed proudly.\n\n\"That only means you were sloppy enough to get caught,\" Valerie pointed out.\n\n\"It wasn't my fault; I ran out of road while driving a stolen Porsche,\" Rio told us.\n\n\"You stole a Porsche?\" Valerie asked.\n\n\"How do you run out of road in an expensive, high-performance sports car?\" Virginia wondered.\n\n\"Yes...take that, Mercy, you bitch,\" slap, slap, \"I stole a Porsche and I ran out of road when I cruised into another car showroom on the far side of town. Who knew that those dumb sons-of-bitches didn't put a back way out that place?\"\n\n\"Rio, why did you steal something that didn't belong to you in the first place?\" Iona begged to know.\n\n\"Blame drugs, teenage hormones, or the fact that it was a school night, I hadn't studied for a test the next day, and this sounded like the best way of not having to take it,\" Rio suggested.\n\nI would have told them that was Rio-speak for 'I have no idea' except I'd finally stretched Barbie Lynn's hamstrings to the point we had our tongues entwined, mouths pressed, and teeth nibbling on each other's lips like famished lovers. I could feel her anal spasm vibrating up through her body and her lungs fighting for air. She was getting close and I thought it was going to be a big one.\n\n\"That would be an exhibition of low impulse control,\" Dana chided Rio.\n\n\"I think it shows poor life choices,\" Virginia stated.\n\n\"I think it shows she's fucking nuts,\" Valerie declared.\n\n\"Fine...whatever, but I'm one of the two people fucking a sweet piece of ass while you dykes are sitting on the sidelines,\" Rio taunted them.\n\n\"You are my students,\" Virginia began, \"I don't...\" She was interrupted by Barbie Lynn.\n\n\"Ugh...Oh, Lord Jesus...Zane,\" she gasped then, \"Aaaaiiiiii!!!\" she screamed so loud I was afraid my brain would explode. She kept trying to buck me off and thrash about so violently that I was afraid she'd hurt herself, or me.\n\nI rode that wave for almost a minute before Barbie Lynn made one final strenuous effort, then went limp in my arms. I gently shifted her legs down my sides to rest on the bed. I remained propped over her until her eyes focused on me and an ephemeral smile graced her lips.\n\n\"Ummm...sleepy,\" she purred.\n\n\"Okay, Babe,\" I said, then kissed her nose. Her eyes closed and her breathing became low and regular. \"Okay,\" I whispered once again. I slowly withdrew from her and slid down the bed.\n\n\"What was that?\" Virginia asked softly.\n\n\"I'm pretty sure that was an orgasm,\" Dana responded.\n\n\"No, I think that was fucking a girl into unconsciousness,\" Valerie countered.\n\n\"Ugh, ugh, uh...Rio...oh, yeah...it hurts,\" Mercy moaned.\n\n\"And here goes the other one,\" Dana chuckled.\n\n\"I know it hurts, Mercy-slut, now cum for your Momma,\" Rio groaned to Mercy as he pressed her body onto Mercy's back.\n\n\"Ugh...I...I'm...trying,\" Mercy gasped out, then she screamed as Rio rammed the vibrator onto Mercy's clit and flicked it onto the high setting. \"Oh, Fuck Me!!\" she screamed. Mercy's body fell forward prostrate on the bed, her lungs fighting for air and her thighs and ass shaking uncontrollably.\n\n\"Zane, does this kind of thing hap-...oh, my God, Zane, you are still hard,\" Virginia exclaimed.\n\n\"Honestly,\" I sighed, \"if I had fewer beautiful women in my life, I'd have more blood to the brain to think straight with.\" I finished up by opening my wardrobe and taking out a robe.\n\n\"Now I'm going to take a shower, get re-hydrated, then come back here and see if I can convince Iona to give me a little more of her time,\" I continued.\n\n\"I'll join you,\" Rio grinned, as she slipped off the strap-on.\n\n\"I'll come along as well,\" Iona said as she popped off the bed, only to end up on wobbly legs.\n\n\"No,\" Virginia commanded, \"Zane showers alone. You two aren't even dressed so there is no way you are going out there among all those other girls sticky with sex.\"\n\nRio traipsed over to my dresser and pulled out two of my dress shirts. She tossed one to Iona and put on the other.\n\n\"See, I'm dressed,\" Rio declared.\n\n\"No, you are not; that shirt isn't even buttoned,\" Virginia responded. At this point, I walked out of the room and toward the shower near the hot tub (as opposed to the one by the sauna).\n\nPAIGE REVISITED\n\nWith the looks I was getting, I almost wished I could back up. Some of the fifty or so girls at my place wondered what the hell all that screaming was about, a few knew what it was but couldn't believe the volume of the noise, and a few came up and kissed me.\n\n\"Hey, Slugger,\" Opal teased me after a deep tongue tackle. \"Who in the hell where you giving it to?\"\n\nBrandi came up and wrapped an arm around Opal's arm.\n\n\"It was Barbie Lynn,\" Paige snuck up on me and volunteered. \"I recognize her inflections.\" Her ghosting up on me yet again wasn't the most disturbing part of the young albino maiden; it was the burning hunger in her eyes.\n\n\"You took Barbie Lynn's virginity?\" Millicent Pierce questioned me somewhat fearfully.\n\n\"That's not the hole Zane goes up,\" Opal grinned wickedly. Millicent instinctively covered her backside.\n\n\"Can you imagine how good that had to feel to make Barbie Lynn scream that loud?\" Paige purred. Uh, oh, that was some serious trouble being aimed my way.\n\n\"Does that hurt?\" Millicent murmured. \n\n\"Yeah, it hurts so much that Barbie Lynn hunts Zane down every other night and has sex with him until she can no longer move,\" Opal exaggerated. \"Speaking of which, where is our real Dorm Mother?\"\n\n\"She's asleep in bed,\" I admitted, somewhat shame-facedly. Millicent looked blown away.\n\n\"Can I go see her?\" Millicent asked.\n\n\"She's my lover, not an exhibit,\" I informed her. \"Let her sleep in peace.\" I moved through the little crowd and entered the shower.\n\nThe hot water cascaded over my body, erasing the fatigue from my tired muscles and cleaning my sweaty body and the sex off my cock. Getting out proved that not only did sexually repressed young ladies like to ogle my naked form, but they also paid no attention to my desires. I caught Paige and Millicent sneaking back out of my room with Rio and Iona in tow.\n\n\"She looks so...peaceful,\" Millicent muttered.\n\n\"What part of leave her alone did you not understand?\" I growled angrily.\n\n\"Spank the naughty bitches,\" Rio egged me on.\n\n\"They didn't do anything to wake Barbie Lynn up,\" Iona defended them.\n\n\"I'm sorry,\" Millicent apologized. Paige looked anything but contrite, challenging my gaze instead.\n\n\"Fine, spank Snowflake here,\" Rio persisted.\n\n\"What? No Edgar Winters reference?\" Paige shot back while keeping her eyes on me.\n\n\"Paige,\" I said in a deadly even tone, \"apologize or leave.\"\n\n\"Or what?\" she taunted. I nodded and took a deep breath.\n\n\"Oh, you are going to get it now, you skank,\" Rio chuckled. Instead, I walked past them all and went to my room.\n\n\"That was a bit disappointing,\" Paige sneered. No one else said anything for a second, then Iona clued in.\n\n\"Whoops...Paige, Zane will be right back,\" Iona commented.\n\n\"I can hardly wait,\" she said sarcastically.\n\nIn the room, Virginia and Dana had moved to the small sofa on the far side of the room, deep in quiet conversation. Mercy had curled up next to a sleeping Barbie Lynn, and Barbie Lynn looked like some angel -- confident, sleeping, and almost otherworldly in her beauty. Before I could hope to enjoy it, I had to get dressed and resolve an issue.\n\nI raced through dressing back into my school uniform and walked outside.\n\n\"Now you are going to get it,\" Rio whispered to Paige. Paige snorted.\n\n\"Paige, you brought me word about Heaven and I owe you for that, so if we can agree that you are going to respect me and my personal space, I'm going to forget about you going to my bedroom uninvited,\" I laid it out for her.\n\n\"And if I don't?\" she confronted me.\n\n\"I pick you up, throw you over my shoulder, and toss you out of the dorm, and you won't be invited back until you grow a personality that isn't all conceited douche,\" I answered.\n\n\"You can't and you won't,\" Paige shook her head.\n\n\"Reality check, Paige,\" I grinned. \"I'll ask Cordelia to keep you away, and while she likes you, she needs me more, and you don't have the stones to go against Cordelia, do you?\"\n\n\"Is that the best you have, Zane?\" Paige sniffed derisively.\n\n\"Paige, you are a really smart girl, but Cordelia has several really smart girls,\" I pointed out. \"What matters is how many friends you have compared to how many friends I have. How does that math work out for you?\"\n\n\"That doesn't mean anything,\" Paige responded defensively.\n\n\"Good enough. I don't really feel like arguing,\" I shrugged. I swept up on Paige, who had some good reaction time but no skill. I had her up and over my shoulder in three seconds flat.\n\n\"Put me down!\" she squawked. I headed down the stairs, her fists beating my back and her legs kicking.\n\n\"Bye-bye, ya whore,\" Rio chuckled. It didn't take much imagination to know that Iona was glaring at Rio for that comment.\n\n\"Stop...put me down,\" Paige struggled. After we made the elevator, \"You can put me down now.\" I didn't respond because I wasn't hearing what I needed to hear and I didn't feel like engaging her in conversation.\n\n\"Please, don't,\" she tried, once we landed on the first floor, but to no effect. I took her to the dorm door, kicked it open, and stepped out.\n\n\"Here you go,\" I said as I deposited her. I had no idea how far past tears she'd gotten.\n\n\"I'm sorry, I'm sorry, I'm sorry,\" she snarled. \"Okay? Happy? You win and I lose. You are the popular kid and I'm not.\"\n\n\"No, I'm not happy,\" I answered calmly. \"This never had anything to do with me beating you up; it had to deal with you constantly slapping me around and I got sick of it. Paige, you got so sick of being bullied, you became a bully.\" She clearly didn't believe me. \"You are pretty and smart, and you use these qualities as a scalpel to cut people up.\"\n\n\"What would you know about it?\" she snapped. \"You've always been Mr. Popular.\"\n\n\"Take into account I was in a normal private school for my first ten years. Yes, I was one of the popular kids; good looking, the right parents, and pretty smart. I also knew the social hierarchy and I was certainly unkind to my fair share other students.\"\n\n\"Before you go beating me over the head with you being albino, please understand: I don't care. My parents are gone -- dead. I'm never getting them back. You are a slender, smart girl with gorgeous hair who has two parents who probably love you very much,\" I smiled. \"I only wish you would lead off with those traits instead of constantly reminding everyone how fucking condescending you can be.\"\n\nPaige looked at me for half a minute, studying me, perhaps looking for some understanding of me. Good luck with that; I barely understand me and I'm inside my head.\n\n\"Does this mean I can go back inside?\" she finally inquired.\n\n\"Yes. All I wanted was a simple apology, and technically, you are still on the dorm sidewalk so I haven't finished throwing you out yet,\" I replied.\n\n\"Just like that?\" she snorted. \"You are such an idiot.\"\n\n\"What did I warn you about leading with the grey matter?\" I scowled. She seemed to weigh her next words.\n\n\"You said I was 'very pretty',\" she mused, changing the direction of the conversation suddenly.\n\n\"Well, yes, you have a flawless complexion girls would kill for and, as I said earlier, I really like you hair,\" I stated. \"It is gorgeous.\" I put my arm around her shoulder, spun us around, and went back inside. As we boarded the elevator for the return trip, Paige tapped my hand.\n\n\"What's with all this?\" she indicated my casual embrace.\n\n\"When you aren't trying to piss me off, I honestly like you, Paige,\" I confided in her.\n\n\"You seem to live your life by making some rather irrational decisions,\" she noted.\n\n\"Paige, you see life as chess while I see it as Scrabble,\" I grinned. \"For you, it is move and countermove. I tend to see life being something that gives you a constantly changing group of options that you make the most of.\"\n\n\"Oh,\" she seemed to digest that, then she said, \"I apologize for calling you an idiot. You are a moron; I should have seen the difference.\" I laughed from deep within.\n\n\"I'm a moron,\" I teased her. \"I bet you've never been held by a boy like this before because if you had, you would know this gives the guy a perfect vantage point to look down your shirt.\"\n\nPaige clutched her shirt tightly in a fist, blocking my view. She looked bitter and offended.\n\n\"30-B, a translucent white with lace trim bra,\" I told her. \"Good choice, but I get the impression you don't wear it as a normal part of your school attire. Wearing it for me?\"\n\n\"What makes you think...\" she started, then \"Yes.\"\n\n\"What was the plan?\" I inquired.\n\n\"I was going to spill water all over my chest by accident, ask for one of your shirts to replace it, and for you to show me where it was,\" she smiled slyly. \"With my bra and your libido, plus a little playful contact, I'd get you into bed.\" She was highly confident.\n\n\"Nice,\" I admitted, \"but it wouldn't have worked.\"\n\n\"Why not?\" she seemed slightly offended. My money was, her insecurities about her body not measuring up to Barbie Lynn's curves were behind that.\n\n\"I would have given you a robe and sent Iona down to her room to get you a spare,\" I informed her. \"Your only flaw in the plan is that I find you inherently untrustworthy.\"\n\n\"Why do you say that?\" she was now really offended.\n\n\"Paige, you use people. It is your default relationship approach,\" I explained. \"It is not so much a bad thing as it is predictable. Someone as smart as you can do better.\"\n\n\"You don't seem to mind it when Cordelia treats you that way,\" she countered. We were at the door to my place.\n\n\"If you will recall, Cordelia told me to kiss her as part of my Handmaiden's Duty,\" I reminded Paige. \"Now, if you want to be a Cordelia substitute, go ahead, I'll still spend time with you if you like. I only think you need a friend who should point out that people are people from time to time.\"\n\n\"Now you want to be my friend, Zane?\" she mocked me.\n\n\"I'll be your friend, but you have to wear this sexy blood red stocking, garter, bossier, bra and choker combination. It will make your flesh glow like it is on fire,\" I grinned lasciviously.\n\n\"I thought you wanted to see my flawless skin devoid of obstructions,\" Paige said.\n\n\"I'll dress you up in it, and if you don't like it, I'll remove it too,\" I smile mischievously. She looked at me, her mighty mental calculator going over where the conversation was going.\n\n\"Why do you see me differently than everyone else?\" she asked.\n\n\"Give me some leeway,\" I requested, then bent down slightly, slipped a hand under her skirt, making her jump minutely, and ran my middle finger under her underwear band into her pussy.\n\nShe bit her lip but kept staring intently at me as I moved that finger up and down, back and forth, until it was covered in her fluids. I sunk my forefinger in and did the same. I removed my hand and brought the forefinger to my lips. As I sucked the liquid off and savored the taste, I caught Paige licking her lips in sympathetic hunger.",
        "I pointed my middle finger at her mouth and pushed it forward, daring her to take it in her mouth. She barely resisted and was soon running her tongue along my finger inside her mouth, cleaning it off. I pulled it out and she grinned at me seductively.\n\n\"You stick your middle finger into my mouth with my vaginal secretions on it...that is a not so subtle 'I'm going to fuck you'; right?\" she teased.\n\n\"I could say 'I'll tell you when I figure out if I'm a moron or an idiot,' but I'd rather tell the truth. You piss me off,\" I confessed, \"and I want to hammer you through my bed and into the floor. I want to make you scream, cry, and look down on you with your face glowing from the exertion and your hair damp with your sweat.\"\n\nPaige's eyes grew wide and her breaths deepened as I told her what I wanted and expected.\n\n\"Don't worry, though,\" I said as I leaned in. She expected a kiss on the lips but I went for the forehead instead, \"because it will never happen. Bye now.\"\n\n\"What!\" she squalled, grabbing my arm as I tried to move past her. \"Why not?\"\n\nI looked back at her and grinned evilly.\n\n\"Gotcha!\" I smirked. \"That's what it feels like when someone yanks your chain. If you still want to go up with me, know I won't screw with you again unless you screw with me.\" She didn't react for the longest time so I finally turned back up the stairs.\n\n\"The point of all this was making you want to screw me,\" Paige laughed as she ran to my side.\n\nI've said it before and I'll say it again, women are fucking nuts, and I'll grow crazy or end up dead trying to understand them. I could try to run away from the jumble of contradictions and obfuscations that was Paige Zeller but where is the fun in that?\n\n\"I'm not kicking anyone out of the bedroom,\" I cautioned her.\n\n\"That's fine,\" she announced happily, \"you do your best work when you have an audience.\"\n\n\"We really need to work on your romantic technique,\" I lectured her.\n\n\"Zane, I want you for your physical prowess,\" Paige countered. \"If I want mental stimulation, I have this e-pal in Taipei who I regularly communicate with.\"\n\n\"I repeat, you need to work on how you romance your partner,\" I grumbled. We opened the door when we reached the top of the stairs and got a few stares as they tried to figure out what was going on. I debated what to do (I was sort of hungry) when Paige dragged me toward the bedroom.\n\n\"Oh! Pay up, pay up,\" Opal called out.\n\n\"Damn,\" bitched Rio. \"I keep hoping my boy Zane will develop some standards...but oh, well.\"\n\n\"They were betting on you bringing me back for sex?\" Paige whispered, but her desire was glowing bright. I shook my head and chuckled.\n\n\"Don't worry about it; I still see you as a whirling vortex of passionate lust,\" I assured her.\n\nWe passed around the Chinese screens that separated my area from the rest of the floor and I was relieved to see everyone but Barbie Lynn had left, and Barbie had curled up on the near side of the bed and was still asleep. As we moved around the bed, Paige's resolve began to falter.\n\n\"Sit down, let's talk,\" I said softly. Paige was clearly confused.\n\n\"The most powerful tool in sex is the brain,\" I continued. \"I want to know you a little better first.\"\n\n\"I should be great at this,\" she replied.\n\n\"How many boys have you kissed?\" I asked as we sat down. She looked surprised by the question.\n\n\"Two,\" was her curt response. \"Zane, I want you to take my virginity.\" Now it was my turn to be surprised, but I was only put off for a moment.\n\n\"Tell me about those two times,\" I persisted. Paige had started tugging her shirt out from her skirt and was clearly not pleased with my request.\n\n\"Zane, didn't you hear me? I want you to pop my cherry, break me in, fuck my vagina...whatever you want to call it,\" she told me.\n\n\"Yes,\" I nodded, \"and I'm looking forward to that, but answer the question please.\"\n\n\"I...I've been kissed by two boys, one kiss per boy,\" she replied, but I could tell there was more to it.\n\n\"Do I have to play twenty questions with you?\" I gave an exasperated sigh. Paige flushed with anger.\n\n\"Fine, damn it,\" she growled. \"The first boy, I paid to kiss me on the lips. He did so, and he looked at me like he wanted to throw up.\" That looked like it hurt her to admit.\n\n\"The second time...it was a joke, a dare. I closed my eyes, he kissed me on the lips, and then I heard the applause. They congratulated him for kissing the freak,\" she recited with anguish. \"They laughed at me while I ran away.\" She looked furious and miserable at the same time.\n\nI tilted her head up toward me. I let my first kiss barely brush her lips. I let her study my reaction, and then I kissed her again.\n\nThe third kiss pressed our lips together, and on the fourth, our tongues touched. The fifth saw her wrap her arms around me and hold me tight for nearly a minute. She was panting for breath when we came up for air. I used that moment to pick her up and place us both farther into the bed.\n\n\"Eeep!\" she exclaimed, then she started to giggle. I straddled her and dove in to nibble her neck. Paige beat at my chest with her fists but couldn't stop laughing. \"That tickles!\" We fell back into kissing for a while; Paige didn't need to rush into sex despite her declared desires. \"Shouldn't we take our clothes off?\"\n\nI responded to that by sitting up, grabbing her shirt in both hands over the breasts, and ripping it open. Buttons went flying everywhere and Paige's eyes expressed her shock. I reached for her bra but Paige's hands flew to mine.\n\n\"Wait,\" she gasped. \"It unsnaps from the front.\" I even let her open the bra for me, exposing her ghostly breasts and pale pink areolas and nipples.\n\nI shifted down Paige's body and latched my lips to her left breast, causing her to cry out in pleasure.\n\n\"Oh, damn,\" she purred, \"this is so much better in real life.\" I wasn't sure I knew what that meant, or that I even wanted to know.\n\nI feasted on each nipple and breast in turn until they were fully engorged and bright, rosy pink from my attention. She'd spread her legs wide open and was humping her hips up against me. I pulled away long enough to get my shirt off before descending on her for kisses once more. In the midst of that, we rolled over where she grabbed me by the side of the head and covered my face with butterfly kisses.\n\n\"I've always wanted to do that,\" she beamed pure joy at me. I moved my hands down her ribs, waist, and hips until I was able to pull up her skirt and grab her ass. Paige aggressively humped me in response, smiling at me and breathing heavy. Without any urging, Paige pushed up my body until she dangled her breast against my lips.\n\nI greedily sucked one in, teasing her nipple with my teeth. Paige yelped but followed me down without comment, cradling my head into her chest and rocking me back and forth.\n\n\"Careful, Honey, he's addictive,\" Barbie Lynn sleepily intervened.\n\n\"He's going to take my virginity,\" Paige exulted.\n\n\"Is he now?\" she grinned at me.\n\n\"She's asked; I'm considering it, but I want to know she's really ready for it first,\" I mumbled back between mouthfuls of tit.\n\n\"Wait,\" she panted, \"you promised me.\"\n\n\"Paige, Rule #7 for guys: when sex is involved, we lie,\" I informed her.\n\n\"Oh, what lie did you tell Barbie Lynn?\" Paige inquired.\n\n\"He forces me to orgasm so he can bask in my post-orgasmic bliss,\" Barbie Lynn sighed dreamily.\n\n\"Besides,\" I said, as I ran my hands through her fine white hair and tucked a few locks behind her ears, \"I am not saying we won't do it, but you are an incredibly tough read and we aren't going to do something I don't think you need.\"\n\n\"How come you get to decide?\" Paige sounded annoyed.\n\n\"I'm the only guy you've approached who you didn't find on an escort service website; we are in my bed; and...oh, yeah, I've had sex hundreds of times and you are in all ways a virgin,\" I listed off the reasons. \"Paige, you only get to do this 'first time' once, and I would like it to be something you love and want to do again and again.\"\n\n\"Well...I know what I want. I am in your bed and you're half-naked already,\" she emphasized by grinding her pelvis into me. \"I'm also on top and I don't think you can get rid of me that easily.\"\n\n\"This one is a little firecracker,\" Barbie Lynn chuckled.\n\n\"She's that,\" I commented, \"but you should always be leery of someone who thinks they are always right.\" My words didn't stop me from pressing my cock up against Paige's twat. \"We could always have a little butt-sex instead,\" I teased.\n\n\"No!\" Paige squeaked. \"You are huge and my butthole is tiny.\"\n\n\"Oh, God,\" I laughed. \"You actually looked at your butt in a mirror.\" Paige blushed furiously. \"Listen, Paige, trust me on this. You can go into town and find some college guy who will jump at the chance to screw you. What you have to wonder is how much he'll care about you and your needs as well as how good he is at sex. Let's get naked.\"\n\n\"Finally,\" Paige mocked. She rolled off and shed her clothes so fast they left angry red tracks down her legs. I took my time but Paige didn't seem to mind. She reached out and ran a hand over my bicep and shoulder.\n\n\"He's real enough,\" Barbie Lynn assured her quietly.\n\n\"How did you know what I was thinking?\" Paige mused. At least she only implied Barbie Lynn was stupid.\n\n\"Paige, sweetie, how many of us FFU girls expect to be able to choose our man, much less one worth having? And don't you be disparaging of Zane, now, either. I can smell your arousal from here,\" Barbie Lynn said with a sexy curve to her lips.\n\nPaige was thinking of her retort when she gasped as I caught her distracted and slipped two fingers along the folds of her cunt. When her razor sharp focus latched onto me once more, I pushed her onto her back and mounted her. Her legs splayed out to either side and the location of her hips against my stomach reminded me of how narrow her hips were, narrower than even Iona's.\n\nShe still did her best to wrap her legs around me as she placed her hands on my shoulders.\n\n\"Are you going to make me scream?\" she asked nervously.\n\n\"Every girl is different so don't worry about it,\" I grinned. \"Besides, I can tell you'll be really good at this.\"\n\n\"How can you know I'll be any good at sex?\" Paige snapped. Yes, that was the sore point I was looking for.\n\n\"Your eyes sparkle when you touch me, you react instinctively to my touch, you are in good physical shape, and you're very sensitive all over your body,\" I explained. \"What you saw as fooling around was me mapping out how your body works and where your erogenous zones were. No two women are the same and I love exploring. Now I'm getting back to it.\"\n\nI began placing kisses along her sternum, down toward her navel. Her stomach pulsed when I kissed the belly button.\n\n\"Oh...aha,\" Paige moaned. I licked and stroked the area around her navel, causing her torso to gyrate from the sexual stimulation. \"Mmmm...that feels nice.\"\n\nUnlike previous encounters with other women where I avoided the pussy while I worked around it, I instead placed one hand immediately to the area, squeezing two fingers into her cunt and wiggling them around. I left the clit alone for now because I was encouraging a slow boil, not a flash burn. I wanted Paige in an erotically charged high before I challenged her vaginal virginity.\n\nPaige's skin had this false translucent quality to it that was exciting to watch. You could track the arousal of a touch by the blood rushing to the skin around the excited area. Physically, she could conceal nothing, and she was far from sexually experienced enough to stifle her vocalizations of pleasure.\n\n\"I just want to be fucked,\" she moaned,\" I just want to be fucked...aaahhha...oh.\" Her words said one thing but her body expressed its desire for more excitement. \"Nooooo...\" she groaned as she ground her hips against my lips. When I stabbed my tongue to her clit, she acted like a jolt of electricity arched through her body.\n\nNow, when I've performed cunnilingus on a girl, I expect a bit of movement; I'm doing something wrong if she lays there. Paige was all over the place, pulling away then thrusting back as well as rolling her hips rapidly side to side. At the moment her thrashing turned into trembles, I withdrew my lips and fingers, causing Paige to whimper and look down at me.\n\n\"Huh?\" she pleaded. I gave her a mischievous grin, then blew on her clit. Paige hiccupped, then threw her head down on the bed violently. I began sucking on the inside of her thighs for about one minute, letting her settle down, then leapt on her clit with my tongue once more.\n\n\"Oh, God!\" Paige squealed.\n\nI moved my tongue off, trading off with two fingers parting her labia and flicking her clit with my thumb. I alternated back and forth over five minutes until I noticed Paige was sobbing and tearing up the sheets with her fists.\n\n\"Have mercy, Zane,\" Barbie Lynn whispered.\n\nI gave a quick nod before placing my lips around Paige's clit and sucking on it with growing intensity plus twirling the tip of my tongue along its tip. I also made tiny fucking motions with two fingers into her cunt. She didn't last thirty seconds.\n\n\"Oh...my...God...Zzzzaaannnnneee!!!!\" she growled.\n\nShe wasn't loud but she rumbled her orgasm from deep in her chest. It was kind of surprising, coming from such a lithe, ephemeral being. Paige was sucking down further sounds internally so that they were merely sobs. I crawled up to her side, rested sidewise, propped up by an elbow, and placed a hand on her stomach as I watched over her. When she started gasping for air, her eyes locked with mine once more.\n\nPaige feebly pushed on my chest so I let her push me on my back. She struggled to rise over me, then collapsed on my chest.\n\n\"I...that was...you still didn't fuck me,\" she wheezed. I sighed in frustration, pulled Paige on top of me, chest to chest, and then began playing slap-happy with her ass.\n\n\"Ow,ow, ow, ow, ow,\" she squalled. \"Stop that; I bruise easily,\" she added, with tears in her eyes.\n\n\"Damn it, woman, is it going to kill you to accept that I know what I'm doing?\" I responded angrily. \"Since you are clearly clueless, what we just did was foreplay. I wanted to relax your body before we moved to the next step.\"\n\nPaige had enough common sense to look embarrassed but not enough to keep quiet.\n\n\"Well my ass still hurts,\" she pouted.\n\n\"What?\" I questioned. \"Did you say you wanted me to hurt your ass?\" I grabbed each ass cheek and pulled them apart.\n\n\"No!\" she squeaked, \"You are too big.\" She grabbed my hands in her smaller grip and tried to pry them off. We rocked back and forth until we rolled over. She struggled but I soon ended on top of her, Paige on her stomach, and my legs prying hers open. \"No, no,\" she pleaded as she felt my cock resting on her ass cleft.\n\n\"Relax,\" I whispered into Paige's ear, \"have you ever heard of doggy style?\"\n\n\"You aren't...going to have anal sex with me?\" she gulped. I pushed my body up and after a moment, Paige followed, pressing her back against my torso once more.\n\n\"I'd never do anything to you that you didn't want me to,\" I assured her, \"though I am going to have you begging me to bugger you before this semester is over.\"\n\n\"Uh-uh,\" Paige assured me, \"not going to happen,\" but she did wiggle her butt against me playfully, testing my resolve. I balanced on one hand so I could use the other to pull her hair away from one side to the other. Her neck, ear, and the side of her face were now revealed. I sucked on her shoulder while I repositioned my cock so that it slid down her ass, past her anus and pussy, so that it pressed along her pubic mound from below.\n\nPaige began humming pleasurably and gyrating her hips against me. I put my free hand on her breast and massaged it as well.\n\n\"Promise me you won't keep me waiting this time,\" she murmured. \"Promise you'll take me.\"\n\n\"Of course I will, Paige. You have to relax and enjoy yourself and not get worked up about us having sex,\" I comforted her. She rocked against me and I pushed back. \"Nice and slow,\" I cautioned her. \"I'm not going anywhere.\" With a little effort, she did as I requested.\n\nI kept running my hand down from her breast to her stomach, each time going a little farther down. She'd tilted her shoulders and neck so that we could kiss but she also found my lips on her neck to be tantalizing. I was tricky enough that I had my cockhead parting her puffy lips before she realized it. In fact, I had three separate penetrations that elicited moans, then she looked up at me.\n\n\"Don't be afraid,\" I told her sympathetically. \"Remember the faces of all the girls you've seen me with while we are having sex and know that it is going to be just as good for you.\" Paige looked down at the mattress and nodded her head. She pushed back but it wasn't easy. Her entrance felt like a vice restricting my entrance.\n\nEven totally wet, her vaginal muscles were blocking my progress initially. I patiently kept at it, incrementally advancing with each coaxing touch. When I brushed against her hymen, Paige didn't even recognize the moment had come. I subtly brought my arm down to her stomach and wrapped her up in my arm while teasing her ear with my teeth.\n\n\"Yip!\" Paige exclaimed as I pierced her virginity. \"Oh, God, it burns,\" she sobbed. I gave her a few seconds to adjust before penetrating even deeper.\n\n\"No,\" she moaned, and tried to pull away, but I didn't let her. \"Zane,\" she pleaded for me to let her go. \"It hurts.\" I kept at it. \"I never thought it would hurt this bad...please.\"\n\nShe gave one final gasp as I pressed the final inch into her, then we remained there, locked in sexual congress while she wept and trembled underneath me. I considered it a minor miracle Paige had remained on her hands and knees as we reached this point. Now I had to get her past the stage where pain dominated pleasure.\n\n\"We'll move when you feel you are ready,\" I instructed her. Paige nodded, then nothing else for some time. She caught me off guard when she flexed her grasp on my cock.\n\n\"Mmmm,\" she purred. \"Did you feel that?\" My groan was my reply. Paige pulled away a tiny bit until the pain kicked in and she stopped.\n\nSeconds later she repeated the process, withdrawing several inches, then reversing the procedure and allowing me deeper in once more.\n\n\"It hurts less,\" she admitted. A moment later as she shifted to a faster rhythm, \"it is really quite nice.\"\n\n\"You might want to ask Zane how he is doing,\" Barbie Lynn chided Paige.\n\n\"But I honestly don't care,\" Paige noted.\n\n\"If you want to do this again, you might want to start caring,\" Barbie informed her. I winked at the blonde sex angel.\n\n\"Zane, do you like having sex with me?\" Paige asked in a much kinder tone than normal. She must have been truly appreciating the lovemaking she was receiving.\n\n\"It feels like you are trying to rip my dick off,\" I ground out. \"You are damn tight, then you are adding those contractions on top of that. I may not be able to have sex for a week.\"\n\n\"Paige, I like you, but if Zane is telling the truth, I going to seriously rearrange your anatomy,\" Barbie Lynn promised with dangerous intent.\n\n\"I apologize,\" Paige pouted. To prove how sorry she wasn't, Paige rotated her hips down then back up several times rapidly. So that's how she wanted to play it.\n\nI placed both hands on her shoulders and let her make a few more tentative moves before slamming my member all the way in.\n\n\"Oh, fuck,\" she gasped. I slowly drew back my full length, then rocketed back in time and time again. Paige was sweating and panting from earlier exertions but now she was barely hanging on.\n\nSlap, slap, slap, my hips mashed against her ass. Paige gave a breathless grunt each time I drilled her, and that was followed by a relieved sigh as I pulled back. By the desperation in her voice, I knew she wouldn't last much longer.",
        "\"Oh! My! Fucking! God!\" she growled loudly.\n\nI now knew what it felt like to have put my dick in a fire hose and had some asshat turn the water on. Paige's pussy juice had been plentiful the first time she had an orgasm. This time they were copious and forceful, and my penis was simply in the way; what got past stung the hell out of my ball sack.\n\nNormally I have really good control over my sexual climax but I was being sorely tested. Worse, I couldn't simply pop out of Paige because that would cause her pain. The odds of her using birth control were next to nil and none, so it fell to me to find something to center my mind and not ejaculate.\n\n\"Zane, are you okay?\" Barbie Lynn said in a hushed, worried tone. I could only nod. Paige was erratically pushing up and down on my dick, to the point where I grabbed her hips in order to not have a nasty accident when her muscles relaxed and my overstimulation ended.\n\n\"Don't...move,\" I panted painfully to Paige.\n\nPaige didn't quite comply but I didn't blame her because her arms gave out and she slumped forward. I held up her rear by my hold on her hips. I carefully let her slide off my cock and finish splaying out on the bed. I sat back on my heels, breathing deeply and fighting for control.\n\n\"Come here, Baby,\" Barbie Lynn ordered, picking up on my distress.\n\nI moved over Paige's leg toward Barbie and she joined me by turning around, meeting me half way.\n\n\"I've got this,\" she purred, as she wrapped my penis in one hand and placed her lips over the head. Despite Paige's vaginal fluids and some blood, Barbie loved it. She bobbed up and down twice before my resolve finally crumbled.\n\n\"Cumming,\" I gasped. Barbie Lynn shot me a quick grin, then pumped and sucked with renewed vigor. When I started ejaculating, Barbie Lynn made some half-hearted swallowing efforts but I knew she was holding something back. I smiled at her as I ran my hand through her honeyed locks.\n\nWhen I finished unloaded into Barbie Lynn's mouth, I pulled her up, she leaned into my body, and we kissed. I tasted my semen on my tongue as we swapped fluids. Barbie Lynn licked her lips in a highly sensual manner as we broke our kiss. She gave me a little wink, acknowledging how much I'd changed her in our short time together: kinky, sexy, and beautiful.\n\n\"Whoa,\" whimpered Paige as she opened her eyes and looked in our direction. \"That was intense.\" She sighed and took a deep breath. \"I should have mentioned this earlier...you didn't need to pull out. I had...issues when I was little and my ovaries were removed. I'm never going to have children.\"\n\nI switched back to Paige and kissed her on the forehead. This was probably time for some sympathy...if Paige had been anything approaching a normal girl.\n\n\"You fucking wait to tell me this now?\" I chided her. \"Do you have any idea the panic attack you put me through? I was stuck inside you and you were so damn hot I nearly lost it. I was trying to figure out what I was going to tell your father, damn it!\"\n\n\"Father?\" she seemed confused for a second, then, \"Oh. Why would I ever marry you?\"\n\n\"I'm a billionaire philanthropist genius playboy,\" I joked.\n\n\"You are Iron Man?\" she mocked me.\n\n\"Or Batman, your choice,\" I volleyed back.\n\n\"If you hadn't made me feel so fantastic right now, I'd recode your computer to operate in Mandarin,\" she snickered. \"Iron Man is one of my heroes and I will not have him mocked by the likes of you.\"\n\n\"Clearly, the first round of spanking didn't work, but I'm nothing if not persistent,\" I glowered.\n\nPaige's hands flew to her vulnerable and still rather red backside.\n\n\"Don't you dare,\" she threatened. I pivoted, she flinched, then I leaned down and kissed her butt cheek. \"What?\" she murmured then I kissed her again and again. I slowly pried her hands away and soon had planted little signs of affection all over her tender, sore flesh.\n\n\"Kiss ass,\" Paige teased. I had to wonder if she was taking social lessons from Rio.\n\n\"Tell me something: how did you get to be so quiet? I'm normally pretty good at not letting anyone sneak up on me but you have done it to me twice already,\" I asked.\n\n\"That's not a totally stupid question,\" Paige answered.\n\n\"I have been basically friendless most of my life, if you don't count the internet. I was small, different, and was picked on. I learned to be quiet and go unnoticed,\" she explained. \"I admit to having a harder time with you than with most people.\"\n\n\"Because I lived out in the jungle and became more observant?\" I queried.\n\n\"No,\" she sighed in exasperation. \"Because I've wanted to grab you and drag you back to my room since I first laid eyes on you, Zane. Mentally, you are unremarkable, but physically, you scream out 'Sex, sex, sex!'\" That observation made Barbie Lynn laugh out loud. My pained and confused expression only caused them to laugh louder.\n\nSomeday I'm going to come out on top of one of these exchanges. Then I'm going to run away from school because I want to leave on a high note and I'm not likely to ever win a second time."
    ],
    "authorname": "FinalStand",
    "tags": [
        "college",
        "humor",
        "ffm",
        "strap-on",
        "cunnilingus",
        "anal sex",
        "albino",
        "first time",
        "lesbian sex",
        "spanking"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/christian-college-sex-comedy-ch-16"
}