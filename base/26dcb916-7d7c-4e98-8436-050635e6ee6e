{
    "title": "Training Bi Males",
    "pages": [
        "I have written some of my thoughts on training my own bi slave husband in the past and thought that perhaps a primer on bringing new bi slaves into the fold would be helpful. I have been the Domme to my bi submissive slave husband for 15 years. We have been married for 20 years, are in our early 50's, and it was obviously a journey to get where we are and a very good one at that. Our love is stronger today than it has ever been, his level of responding to my Dominant nature and his submissive yearnings are the best they have ever been, we walk the same path as a D/s couple, and we both feel that FemDom relationships are beautiful in their natural ability to provoke the best in sexual and romantic caring and love. I have a current stable of 5 other bi submissives besides my husband that we frequently play with and our sexual activity level as a couple with just one another is perhaps a dozen to 15 times a month (includes milking sessions) with perhaps 2 to 4 play sessions with other slaves added as schedule permits. \n\nI will not spend countless pages describing the inception, growth, morphing, or otherwise providing a history of our D/s relationship. Since the beginning I understood that my slave needed a deeper and more profound sexual experience than I could provide for him within the confines of a conventional relationship. I then knew that I also needed more. It was actually the internet which provoked his and then my own interest in FemDom. I used the history files on our computer to understand his leanings, his desires, and his proclivity to submit to women and know that he also had bisexual desires and previous experiences before we were married. Suffice it to say that I quietly exploited that knowledge to begin and then maintain our amazing D/s experience.  \n\nThe subject of this is obviously bringing new bi slaves into the picture and having them become comfortable with each other, much like pets that we own. In order to understand how I accomplish this with my slave then it must be understood where he is in training within our life and relationship. My focus has always been one of having complete control in the bedroom and then our being more or less equals to the rest of the world. I allow him little or no choices beyond the guidelines we had originally set up some years ago and we have largely lived to those over the many years of playing inside the D/s world. The wonderful thing has always been that I know and understand his triggers, his fetishes, his limits, and his needs. They are not more important than my own and never will be however, knowledge is power and I have faithfully utilized what I know my slaves' needs and desires are to complement my own strong needs.\n\nTo the nitty gritty then. My Dominance over my husband is based on generally applied fetishes for almost all bi submissive males. In his case it has been a steady diet of restraint use, discipline, strap on use, feminization, orgasm denial, milking, humiliation, cuckolding, and cum eating. No one area is more important than another per se but the integration of other bi submissive males into our play has to take into account what we already like and are comfortable with and with that the requirement that the bi sub male also has most or all of these leanings and I can use these comfortably in any play scenario. We have found that younger men and \"bi curious\" men are not so agreeable play partners but that is obviously a person to person variation. Ultimately, when we invite bi sub males to our play (from a variety of internet sites) then they have already been well researched to determine their suitability. We have rarely been wrong.\n\nMy use of the various fetishes is more or less based on my sexual appetite and his needs at the time. I use restraints in about 25% of our sessions and enjoy the reinforcement that it provides in that he is a slave first and foremost. I can employ any number of other disciplinary activities (spanking, crop, face slapping, hair pulling) while he is restrained but since he has been in submission for so long and is so obedient I have found that we use this less as he is completely compliant without restraints. I find it to be more good theater at this point and like to use it when we are with a trusted bi male play friend on occasion to frustrate him.\n\nDiscipline is something I also rarely have to employ beyond what is required due to his completely submissive and compliant nature after many years of training. I almost always spank or otherwise crop him during a session but it is more to enhance my own sexual excitement rather than to actually make him comply with an order or direction. His needs being a consideration, he may ask me while outside the bedroom for some enhanced discipline and if he needs that then I consider his request and administer it if the situation is right. I again do employ discipline more while in the company of other bi slaves so that their training example initially is the excellent one provided by my very well trained husband. \n\nMy use of a strap on device on him varies. Some months he will bottom for me on a handful of occasions and some months maybe once. I used to let him make excuses to not be fucked by me but that is a rare exception in these past years. Most times I will let him know in advance so he can prepare and sometimes I don't quite care if he is prepared. I am more focused on him being able to take me in various positions at this point in our life and also do demand that he train his pussy for larger sized dildos (and cocks) for the future. His bisexual bottom experiences have increased over the past three years and he has now submitted his pussy for fucking four of my other submissive playmates on a number of occasions. They all vary in cock size and the largest is 7 inches and coincidentally the same size as my largest strap on cock that I use on him. I many times have him get into bed with me naked at night and we both read while he has a butt plug or dildo in for a predetermined amount of time. He is ALWAYS naked in our bedroom and if we don't have family home then naked around the house. This has been an important step in my being able to push him into somewhat constant sub space even if he does not know it himself. I cannot stress how important it is to get slaves used to being naked in the presence of the Mistress (or others as needed) and when we play with other slaves, all are naked immediately and many times I stay clothed until I am ready to change or be naked with the submissive(s). I have done sessions where I never took my clothes off. Again, he is always the model of what I expect from other bi slaves we choose to play with and he consistently illustrates good bottoming when we are with other playmates.\n\nHis feminization is important to me as he wants to be feminized so badly on occasion that I purposely limit that aspect. That being said, I do enjoy buying him panties and stockings for our play sessions and I am inclined to see how far I can take him in this arena. I usually hold his feminization for play with our more experienced bi subs. This may end up being the final frontier of how nasty our play can be as we get older and remains to be seen but I have had him sleep with me all night in panties and stockings and it has led him to be very attentive, very erect several times during the night, and led me to be very sexually satisfied by morning.\n\nOrgasm denial is needed in any male slave, bi or not. I employ this technique once or twice a month and occasionally in play with other subs. It has a wonderful effect on his adoration and compliance for his Mistress but long term chastity is not one of my desires for what we do. I have considered chastity because I know he has an interest in it but feel that it is limited to his masturbatory fantasies rather than any real time play because of the time we would miss interacting sexually. In any case, intermittent orgasm denial for a slave is an absolute necessity even if the frequency is only a few times a year. The slave needs to understand that their orgasm is controlled by the Mistress and that includes any permission to masturbate and/or even ejaculate without Mistress being present. \n\nMilking is an important tool for a Mistress for various reasons. The pace of life is such that not even the most dedicated D/s couple can interact as much as they would like to. Children, careers, social events and chores are all time consumers. When we have challenges that involve time I will typically have him lick my ass as I masturbate with a dildo. I enjoy the quick orgasm I get, it keeps him in sub space, and I can generally branch out into denial of his orgasm (although rarely) or milking as a finale before we can each get some sleep. I enjoy milking him for several reasons. It is very enjoyable for me to edge him over and over again. I enjoy training him while I milk him through humiliating talk and verbal encouragement. I can train him on being compliant while unrestrained. Lastly, I can enjoy the cum eating on his part as a result of my milking him. His eating cum after he ejaculates is a very important part of my dominance over him and his cum eating is integral to his submissive nature including interaction with other bi slaves we play with. More to follow on this.\n\nHumiliation forms the boundaries for much of any session we start together as just a couple interacting or role play opportunities that we have with other bi slaves we have chosen. Many bi subs express a desire for humiliation but cannot tolerate it in the reality of a scene or play experience. Trust is a major issue in that regard and my slave has trust in me that has no bounds and I trust him to be able to actually tell me if something is not quite right. Humiliation can be verbal and I use many of the trigger words that I know he enjoys during any playtime we have. I liberally use the words cock sucker, pussy, sissy, bitch, ass licker, cum eater, and others as the occasion dictates. We sometimes do cuckold play and I call him either cuck slut or cum cleaner or boy on those occasions along with the others as previously mentioned. Humiliation can be non verbal also when I sometimes go to great pains to either disregard or ignore him while I enjoy myself either alone or with another bi slave. Humiliation may also take the form of displaying him to others or serving others in person or via web cam. I consider humiliation to be fun as a Mistress because it allows me to be super creative and try to push the buttons of my slave depending on his needs or state of arousal. \n\nCuckolding. Many that read this or even those that have played with or seen us play as a couple would consider our relationship to be one that is cuckold in nature. It is not that they are wrong, it is simply a stretch to label us or define us by cuckolding behaviors when we as a FemDom couple are so much more. My husband is not a slave such that I ever go out and have sex or relationships with anyone that is not him EXCEPT in front of him. We both agree on partners and they are always bi male slaves with the exception of a few couples we have played with. He has been \"the Bull\" on some occasions also so that should illuminate the situation such that it is obvious that we are not a stereotypical cuckold couple. I would say that we play cuckold scenarios a few times a year at most, we enjoy them immensely, but they do not describe who we are. From a Mistress standpoint, cuckolding is hugely effective in having my husband understand how much other men really enjoy my body and by the same token how much I can love and enjoy different cocks in front of my slave. It is a fun role play experience, I use the premise during verbal humiliation, milking, strap on, and other scenarios and suffice it to say that I will almost always use cuckolding as a tool to both control my slave and to train others. I have actually trained cuckolds and enjoy it but other than that it is just another fun role play exercise for forwarding our larger FemDom relationship. \n\nCum eating, that is my husband eating his own cum was what got us to be a FemDom couple. His computer was filled with such images of creampies, he always loved eating my pussy for hours after he fucked me, and his previous bi experiences had him enjoying the simple act between two bi men. I started making him eat cum and he expounded on all of his nasty desires and I just took it from there. Making him and forcing him to eat his own load is the responsibility of myself as his Mistress. Some nights he is eager but many nights he is not and he needs guidance and direction. If I allow him to fuck me then I almost always straddle his face so he can clean me or pull him by the hair to perform the work as I lay on my back and direct his hungry mouth. If I let him masturbate over me then I usually have him shoot it on my stomach or ass so he can clean me and I humiliate him during the entire time and sometimes also coo and encourage him like a pet. I have had him shoot his cum into cups, saucers, plates, my underwear, on my feet, on food, on other men's erect or flaccid penises etc. The imagination is your only boundary with this activity. Since he is always the gold standard as a bi slave with other slaves present it is a normal and accepted activity for him to clean other slaves after they have ejaculated during a session. He cleans up any messy loads willingly and most often off of my body but it varies. I have only one current slave that I will permit to cum in me so his access to actual creampie cleanups is limited to those play sessions. Ultimately, clean up of himself as well as others is a normal standard for play and he is a wonderful role model for training other slaves.\n\nAfter having covered the typical activities that my slave and I enjoy, it is my goal to provide a simple outline or guide for training and integrating new bi males into the fold. I have 5 slaves currently and they range in time spent with us from one that is 6 months in and doing fairly well with being trained and one that has been playing with us as a couple for over 10 years! All of them are in their 40's and 50's, all had measurable bi experiences and were comfortable with bi play, and all were either practicing or strongly desiring submissive play in their real lives. In the absence of a case study or something like that, these are the types of men we chose to play with and my slaves job is to constantly be seeking qualified bi males that seek to serve a Mistress. \n\nAfter deciding to meet for play, choose a neutral location such as a hotel until you feel completely comfortable. This limits the amount of noise you might make and pushes all to play somewhat discreetly during the session but it also is useful for training them on self control. Remember the first rule. Your slave should be naked and answer the door and the candidate slave should be naked within seconds of entering and that should be impressed upon them before the session. I am always clothed in Domme attire at the beginning of a session with a new slave but have been in less casual attire on occasion with longer time play partners. \n\nBoth slaves should be placed in a position for inspection and for me that typically means both slaves flat on their stomachs on the bed where I place blindfolds on for an initial foray into limited sensory deprivation. Why their stomachs, you might ask? This position leaves them vulnerable. It allows me access to their bottoms for light spanking or cropping. I generally pull their cocks and balls back under them and through their legs to expose them to me for inspection, fondling, edging, or light CBT if the mood is there for me. This is when I get a real sense of what equipment the new bi slave has and what I might be using later in the session for my own pleasure. I also may use the head of a dildo or an anal device to very lightly probe (no penetration) their pussy area. This part of any play might last from 15 minutes to a half hour depending on my mood at the time. There is a palpable sense of excitement on both males during this time and you may find them semi erect to nearly bursting and fully erect. Some of this is because of the light touching and verbal encouragement from me and there is also the knowledge that when they are not being touched themselves, that I am actively working on the slave that laying inches from them. Never underestimate the capacity for a bi male submissive to be thinking about the nearly erect cock that is so close but yet so far. I hardly ever let my body except my hands touch their bodies during this time.\n\nSince my slave has done this exercise of familiarization on many occasions, he generally understands the activity and its nuances. The next step is to arrange the slaves on their sides, facing each other, skin touching, hands behind their backs (restraints are typically a no no for a first session), with my owned slave's mouth at the new slaves chest level. I will administer slightly harder spankings and croppings now to increase the amount pain versus pleasure and to ensure that their body contact is maintained. Proximity exercises like this increase sexual tension and I have seen more than a few tremble like a leaf during it and I maintain their sighing and moaning etc at a minimum level for obvious training reasons. I also use my crop and hand to administer discipline as needed for either one of them writhing to push or rub their cocks on one another. I will give a good hard smack sometimes at this point to ensure their compliance.\n\nWhen I feel it is time I will instruct my owned slave to lick and suck the nipples of the new slave. This and subsequent oral events that I prescribe for getting them to \"like\" each other are wonderful for training BUT I have had more than a handful of new slaves ejaculate prematurely during this period. I will typically end the session at this point and reassure them. It does not mean that they will or should be dismissed as a potential slave for my fold and it means I need to be more creative and aware for future meetings and explain that to them. I hope that part helps. At this point it should be obvious that I will use the sensory deprivation, the discipline, the skin contact, and arousal to walk the two slaves through orally pleasing each other in various ways left open to only the imagination of the Mistress. My slave is an oral expert due to my training and I sometimes curtail his work on the new slave and let the new slave explore my slave orally a bit longer. This dynamic seems to work best but each slave experience is different even with the same slaves on a different day. Mistress should be the ultimate judge. \n\nOnce the two slaves are smitten with each other I will generally remove the masks and have my slave assume various positions on the bed and use him in a manner that is consistent with acts that I will expect the prospective slave to engage in for the future. Strap on play, forced oral, queening, discipline, verbal humiliation etc are all at the Mistress discretion and it is important to constantly communicate with each slave so that expectations are clear. I usually find that this is a lovely time to go \"good cop\" with the new slave and let him start touching me and orally exploring his Mistress. Control his access to your body by being firm and direct, ensure that he continues to be \"forced\" to explore the other slave being used by Mistress also, and start to plant the seed that he may be close to an actual sexual interaction with Mistress. \n\nI cannot tell any one Mistress what is right for any play AFTER you have gotten the two new slaves to this point. My experience has been that it is best for me and my slave to work into the activity where he works as a \"fluffer\" of sorts after having been fucked and used by me and that he will assume his usual role of sexual slave and servant to me. The wonderful part for me personally is that I am so worked up by this point myself that I actually typically require a good fucking and the new slave as well as myself benefit from my needs. I may have my slave get our new slave really erect and then ritualistically rub his head against my wet pussy until I allow him to enter. I may place the new slave in a chair and sit atop him. It is at best freestyle and sometimes the best laid (pun intended) plans go out the window. It is vital that the new slave understand that his role for future play may very well be that of my wonderful owned slave and that he needs to pay attention even while fucking my pussy. My slave will either be kissing my mouth, my or the other slaves nipples, or be directed to lavish attention on my ass, the new slaves balls, or any place I direct where we are joined during the period we are fucking. My slave could also be banished to a corner of the room to watch me and told to either masturbate OR not masturbate at all depending on the scenario and my mood. In any event, the culmination of all the activity leading to the two slaves getting to know each other is almost always the satisfaction of my sexual needs, my slaves needs as I see them for that day, and a huge orgasm for the new slave with the resulting sticky ending. ",
        "The last part of this is the end result of my sexual interaction with the new slave is satisfied Mistress, a flaccid cock on the new slave after ejaculating (typically on me), and a needy owned slave dying to do something, anything. To keep things \"even\" and my new slave in his place, I like to gesture for my slave to come over for clean up duties and then put my newly satisfied slave to the test. While my slave obediently cleans the new slaves cock and then moves on to the puddles of semen on my stomach, chest, and usually pussy, I will forcefully direct the new slave to worked on my slaves cock while he cleans me. This is a valid barometer for that slaves willingness to serve as he is now satiated sexually, typically not erect (but not always\uf04a, and is keenly aware that my slave has a scrotum full of cum that he really wants to shoot. I am very verbal with both of them at this point and my slave is so well trained he can almost cum on my command most times. Having him cum on me is not out of the norm but sometimes I will add a twist and him cum on a plate or depending on what we know the new slaves proclivity for bi play and cum eating I will even have my slave erupt in the new slaves mouth for a spectacular ending. I find that cumming on me is best for a first session because it reinforces the two slaves working as a team to keep me clean and demonstrate their high levels of submission to their Mistress. I do not do much more during the period after the session than reinforce the lessons learned, reassure both of the good job they have done, and lay down expectations (toys, clothes, behavior etc) for future meetings. If time permits it is generally acceptable to continue play if the slaves are physically able to perform again but for a first session it is advisable to let sleeping dogs lie and let the new slave reflect on his experience and not gain too much access to me sexually. \n\nI hope this helped at least foster an idea of what initial interaction with new slaves can look like. The basic premise is to leverage the session off of what you have trained your slave to be to you as his Mistress, project those fetishes and behaviors onto the new slave, and start his training in a manner that lends itself toward the ultimate goal of satisfying the Mistress. Unlike pro Domme's, you will never hear a sexually imaginative lifestyle Mistress complain that she has \"too many cocks\". Gathering real bi submissives for bolstering a slave stable is a good practice because not everyone auditioned will work out for various reasons, some will go on their merry way due to their own life changes, and keeping it fresh with new people enhances scenes and playtimes immensely. Never settle though. Websites like Alt.com, CollarMe.com, and AFF are valid hunting grounds but cluttered with straight men posing as bisexuals. Our best luck has been with bisexualplayground.com and 3 of my 5 current slaves are men we met from there. Not an endorsement at all and as I stated, be very discriminating and discerning with choosing slaves and you will all be happier (and safer!) for the work done with ensuring their compatibility with you and your owned slave. Good luck. "
    ],
    "authorname": "MistressDelia",
    "tags": [
        "creampie",
        "slave",
        "bi men",
        "cum",
        "cuckold",
        "discipline",
        "milking",
        "denial",
        "mistress",
        "eating"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/training-bi-males"
}