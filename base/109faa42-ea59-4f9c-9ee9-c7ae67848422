{
    "title": "Sunflowers in Bloom",
    "pages": [
        "Author's Note: \n\nThere is no sex in this story. If that's what you're looking for, read one of my other stories. \n\nA special thanks to blackrandl1958 for organizing this event, and for editing this story. You're a doll. Thank you, also, to my other editor and friend, Pixel the Cat and all my fantastic betas: Laura Lun, BarryJames1952, Spyauth, sbrooks103x, and stev2244. To my dearest friends MsCherylTerra, for coming up with the ending, and to Bebop3, who was so invested in the story that he wrote that ending, which I tweaked and included as the last passage. \n\nIn this story, ask \"why\" not \"how\" and it will all fall into place. \n\nCheers,\n\nNora\n\n<center>\n\n_______________\n\n\ud83c\udf3b Sunflowers in Bloom \ud83c\udf3b\n\n_______________\n\n</center>\n\nOn a balmy, purposeless spring weekend in 1965, the stone cottage received its first inhabitant in many years. \n\nIt was a small house with only two upstairs bedrooms, a lounge, a tiny attic, one bath and an old kitchen with a breakfast nook in the place of a dining room. The inside of the house was vacant and dusty, a testament to its age and lack of upkeep. The yellow wallpaper in the lounge was peeling, the colour browning around the edges like a used cigarette. The bedrooms had been freshly painted, but they were beige and unbearably boring, and the plumbing was suspiciously rusted. The only good things to be said about the house were in the exterior with its charming stone walls, hanging plants, climbing vines, blooming flower beds, and a lovely bright-blue front door. \n\n\"You won't last a fortnight here,\" Ezra said. He wiped the sweat off his brow with the back of his sleeve, but it only served to smear over his leather jacket. It was a wonder that he'd put it on after having moved furniture all day. \n\n\"I don't think it's all bad,\" said Alfie, plopping down on an armchair. \"Nate only needs it for\u2014ah, what did you call it?\"\n\n\"Inspirational intervention,\" Ezra supplied for him, rubbing his temples. He casually leaned back against the wall of the lounge and closed his eyes. \n\nNate nervously scratched the back of his head, looking a little hopeless. The agent had shown him very nice pictures of the surrounding English countryside. In them, the house had looked quaint, just what he'd asked for. He should've taken the cheap rent as a red flag, but it hadn't been the first rash decision he'd made lately. Quitting his job in the city had been rashest of them all. \n\n\"He's in shock,\" Alfie said when too much time had passed. \n\n\"Definitely,\" Ezra agreed with a grin. \n\n\"Piss off,\" Nate said, feeling a bit annoyed by how right they were. In fact, the idea of living alone in the time-worn cottage was starting to sound worse and worse by the second. \n\nIt was too late, however, to reconsider his decision. He'd already signed an eighteen-month lease and had spent the better half of his weekend moving in all his belongings, with the help of Alfie and Ezra. All the furniture and boxes were in the home. The typewriter was set up on an old mahogany desk in the smaller of the two bedrooms, which he'd converted into his study. Save for a few boxes that still needed unpacking, he was all set to pursue his dream. \n\n\"We'd best get going then,\" Alfie said, checking his watch. It was half-past five. \"Queenie will need to be fed.\" Queenie was Alfie's cat. \n\n\"Mental,\" Ezra muttered, but he straightened himself from the wall and dug in his back pocket for the keys to the moving lorry. He jangled the keys in front of Alfie, motioning for him to get up from the armchair. \n\nNate was still debating what to do with himself. In a few moments, he would be completely and utterly alone.\n\n\"You listen here, Nathan,\" Ezra said, looking pleased by the dirty look Nate threw him for using his full name, something that he knew Nate loathed. \"You ring us if the spirit comes out to scare you. We'll set her straight, won't we, Alf?\" \n\nAlfie pushed his glasses up the bridge of his nose and rolled his eyes. \n\nEzra had chatted up some locals at the pub in town the day before, learning that the cottage Nate had leased was, in fact, haunted. \n\n\"Oh yes, it's positively dreadful. Poor girl died there ages ago. Don't think she was ever able to move on,\" a woman had said, leaning in much too close to speak to Ezra. A handful of other women had collected beside him in the pub, watching him with keen interest. \n\nIt was no surprise. Ezra was extremely good-looking. He had mastered the \"bad boy\" look with his leather motorcycle jacket, Black Sabbath t-shirt, and black Doc Martens boots. His arms were covered with tattoos, always had a pack of smokes in his back pocket, and styled his long black hair slicked back from his handsome face. \n\nNeither Alfie nor Nate resented him for it. They'd known him so long that they could only see him for what he was: a fiercely loyal friend, the kind that could be counted on to show up at a moment's notice in light of any crisis, no matter how big or small. He was a jokester, that wasn't a lie, but it was always in harmless fun. There was so much more to Ezra than he let on. Only his best mates knew that no matter how cool he acted, deep down, he was just like them: friendly, likable, funny, and deeply self-conscious\u2014hell, they were all just human. \n\nThe three of them had been mates since attending the same boarding school as kids, bunking together in the same dorm while kicking up destruction everywhere else; pulling pranks on the staff, sneaking out to the girls' building at night, smuggling back alcohol from their parents' liquor cabinets after holiday\u2014what stupid troublesome thing hadn't they done? \n\nIn all that time, the three had become more brothers than friends. \n\n\"Wooooooo,\" Ezra said, wiggling his fingers as he did his best (rather terrible) impression of a ghost. \n\n\"I think they made it all up,\" Alfie said, talking about the townspeople. \"We've been here all weekend. I haven't seen any sort of spirit.\" \n\n\"Oh, there are some spirits here,\" Ezra said, gesturing to the fully-stocked bar cart in the corner of the lounge. He seemed to have forgotten that he was just about to drive himself and Alfie home (Alfie still didn't have a driver's licence, bless him). \n\n\"Get out,\" Nate said, taking Ezra by the shoulders. He led him to the front door, yelping when Ezra reached back and seductively ran his hands up Nate's arms.\n\nAlfie trailed out after them, snickering until Ezra blew him a kiss and winked.\n\n\"Real pervert, you are,\" he grumbled. \n\nNate walked Ezra down the drive and right up to the rented moving lorry parked by the walkway. It looked out of place amongst all the greenery. \n\nTaking in his surroundings, Nate was comforted by how beautiful the landscape was. Rolling hills, cheerful neighboring homes, twittering birds, and the fresh sweet scent of honeysuckle. There was a large oak tree on the property, casting a bit of shade from the sun that had already begun to set. It really was a lovely place if the interior of the cottage could be excused. \n\nEzra turned when Nate released him. \"All right, mate,\" he said. \"You sure I can't convince you to come back to the land of the living?\" He was referring to the city. \n\nNate nodded. \"This'll be good for me. I'll finally be able to finish my novel.\" \n\nThat would be the novel that he'd been trying to write since age sixteen, the one that he thought about constantly and wrote and rewrote and spent many sleepless nights editing and revising. The very same novel for which he'd quit his job in accounting. For the millionth time that weekend, Nate felt unsure of his decision. \n\nYears of school wasted on an accounting degree. Far away from all my friends and family. Depleting all of my savings. I've gone mental. \n\n\"You used to be scared of ghosts, you know,\" Ezra reminded Nate. \n\n\"Yeah, when we were kids.\"\n\nAlfie reached over and gave Nate a one-armed hug, assuring him not to worry as he was positively certain that the odds of the cottage being haunted were zero to none. Alfie wasn't the kind to believe in anything of that sort. He was bookish, often no-nonsense, possessing a rather dark, dry sense of humour, and dressed a bit like a dad, much like a middle-aged man stuck in a twenty-five-year-old's body\u2014a far cry from the innocent-faced schoolboy who had smiled sweetly in his teachers' faces after setting off stink bombs in the corridors with his best mates. \"You two corrupted me!\" was the excuse he gave now when his behaviour in school was ever mentioned. \n\n\"Thanks, Alf,\" Nate said, returning the hug. He was feeling both nervous and excited. In the city he'd lived with Ezra in a cramped flat, and before that he'd always been at the boarding school or at his family's estate in Wiltshire. He'd never truly lived on his own. \n\nEzra was good at reading him. \"We're all waiting on you to write that best-seller,\" he said warmly. \"And Alfie and I will pop in every weekend to check that the ghost hasn't murdered you, of course.\"\n\nAlfie shot him a disapproving look. \"C'mon,\" he said, rounding the lorry to get into the passenger seat. \n\nEzra clapped a hand on Nate's shoulder. \"Stay focused. You'll make a killing once it's done.\"\n\n\"Drive safe, Ez. Don't get into too much trouble without me.\" \n\n\"Wouldn't dream of it,\" Ezra said, smiling. He hugged him, supplied him with another amusing warning about ghosts, and got into the lorry. The engine started up with a sputtering roar, shaking as Ezra shifted it into gear. \n\nNate stood on the walkway and waved, watching his friends drive away down the road. He watched after them for a long while, shading the sun from his eyes with a hand until the lorry was just a speck in the distance. It was dark by the time he looked away, the lorry already long gone.\n\nHe shivered from the evening breeze, and let out a sigh and made his way back to the cottage. It was his first true venture into the unknown.\n\nHis plan was to become a world-famous author. He fantasised that the cottage might someday become a tourist spot for being the location where he'd written the most popular fantasy book since Elric of Melnibon\u00e9. In two years' time, he hoped to be on a book tour, travelling the world. Ezra would love that. He'd probably tag along as he was never one to pass up on an adventure. Alfie, too, even though he'd be at his wits end trying to keep them out of trouble. \n\nNate chuckled to himself as he entered the cottage, feeling a bit lighter. He knew his fantasies of the future were childish, but he held on to them to give himself the push that he needed to overcome his writer's block. His job had really been the impediment (at least that's what he'd always assumed) and that was no longer a problem. He didn't know what had overcome him that day when he'd marched into his boss's office to turn in a resignation letter that he'd typed up just moments before. \n\nIt could have been all the stress\u2014hell, he'd started dreaming numbers. \n\n\"Christ, I thought they'd never leave,\" said a soft voice from the staircase. \n\nNate jumped, stopping in his tracks. The cottage was dark, the only light coming from the kitchen down the hall. He thought for a moment that he'd imagined it, but then he spotted the source of the voice. \n\nIt was a young girl\u2014or a woman, but he really couldn't tell from the shadows. \n\nShe was sitting on the steps, her elbows on her knees with her chin resting on her hands, watching him with an expression of mild amusement. She had long white-blonde hair that framed her face. It was the colour of stardust, giving her a sort of ethereal quality. Her wide blue eyes, small pixie nose, and pouty little mouth made her look like an absolute dream.\n\nOn any given day, Nate would have flirted with her, but as she was in his house without any explanation, the thought didn't cross his mind. \n\n\"Who are you?\" he asked cautiously. \n\nThis was just what he needed, an intruder on the first night in his new home. It occurred to him that she might be crazy. She was smaller than he was, so he wasn't truly worried that she could harm him, but the whole ordeal was disconcerting all the same. \n\nNate wondered how he could convince her to leave without sounding too rude. Ezra had always said that he was too polite for his own good, especially when it came to good-looking birds.\n\n\"Lizzie.\" \n\nShe got up from her sitting position and dusted off her jeans. Her simple flower-patterned blouse was in muted colours, looking dull against her light pearlescent skin. She was slender, tall and willowy.\n\n\"Well\u2014er, Lizzie, would you mind telling me what you're doing here?\" \n\nIgnoring his question, she made her way down the stairs and walked right up to him. The dim light from the kitchen glowed on her face, accentuating her soft features. She really was very pretty. \n\nLizzie walked in a circle around him, observing him from every angle. She had a finger on her chin, as if she was thinking very deeply about what to make of him. \n\n\"You're much better than the last one,\" she finally said. \"She tried to have me thrown out, the old bat.\"\n\nNate tried to knock the guilty expression off of his face. Just moments ago, he'd been considering doing the very same thing\u2014was still considering it, actually. \n\n\"I don't understand,\" he said. \"What are you doing here?\"\n\n\"Wish I knew,\" Lizzie said with a shrug. \"Nice typewriter, by the way. I've always wanted to use one.\"\n\nNate visibly paled. It felt oddly intimate, this stranger going into his study. It served as more than a place of work for him\u2014it was a place of inspiration. The room was filled with all sorts of uniquely characteristic things like pictures from old magazines, newspaper clippings of obscure happenings, a hand-drawn fantasy world map Ezra had sloppily sketched one drunken night, his records and a record player, a telescope he'd gotten from an estate sale, and all too many antique trinkets that everyone had always told him were nothing more than \"junk.\" The room was very personal, like a window into his soul. \n\nAnd now, this girl had seen it. He would have never been able to do such a thing. \n\nNate figured his best option would be to get Lizzie comfortable enough to share the reason for her intrusion. \n\n\"Tea?\" he offered. \n\nHe stepped around her and headed down the hall towards the kitchen, a little wary of turning his back on her. He had a vision of her stabbing him with a knife, but he pushed the thought out of his mind. She really didn't look all that threatening.\n\nLizzie followed him, pausing briefly to study at the paintings he'd hung on the wall. He felt a little embarrassed. They'd been painted by his ex-girlfriend from Uni. In an innocently romantic gesture, he'd bought every single one of her paintings from an art gallery. She hadn't liked that, Holly. To her, it had been more of a cruel form of sabotage. He'd spoiled her opportunity for exposure, at least that was the way she had put it. \n\nLizzie didn't say anything about the paintings and he was grateful for it. Truthfully, he had no idea why he still held onto the paintings, much less hung them up in his new home. A small part of him was still pining after Holly. He'd always been shit at relationships, but Holly had seen all his weirdness and hadn't gone running for the hills\u2014at least until she'd met that bloke from her pottery class. \n\n\"Don't bother with the tea,\" Lizzie said when he began to fill the kettle from the sink. \n\nNate filled it, anyway, and put it on the cooker, disbelieving of her aversion to tea. \n\n\"Aren't you going to ask my name?\" He felt he should introduce himself properly. He might as well if he was going to have her dawdling around in his kitchen. \n\n\"Oh, I already know. Nathan Alaric Chapman. Wicked middle name, if you ask me. Shame about the first and last names, though. Rather plain compared to Alaric, don't you think?\"\n\nIgnoring her rudeness, Nate asked, \"How do you know my name?\" \n\n\"Your diploma is hung up in the study. Read it off there,\" she said casually, as if it was the most obvious thing in the world. \n\n\"Right,\" Nate said, feeling very uncomfortable now. \"Do you do this often, walk into people's houses?\" He tried to say it nicely, like it was out of harmless curiosity. \n\n\"I would never,\" she said, looking both shocked and offended.\n\nBut you did, he wanted to counter. You're doing it right now. \n\n\"Besides, I didn't just walk in. I've been here the whole time.\"\n\n\"You can't have been. I've been here all weekend and I haven't seen you.\" He felt a bit like he was challenging her, and being the polite person that he was he regretted it immediately. Thankfully she didn't seem all that fazed by his words. \n\n\"Well, I didn't want you to see me yet,\" she said. \"Your mates would have dragged you off, and then I'd have been alone again.\"\n\nNate found that his palms were sweating. This was amongst one of the strangest things to have ever happened to him.\n\nLizzie hopped onto the counter, her legs dangling as she thrummed her fingers on the surface. She looked very at ease there, as if she did it all the time. \n\n\"Let me get this straight \u2014 you've been here this whole time, hiding from all of us?\"\n\nShe nodded. \n\n\"Where?\" \n\n\"Well, everywhere,\" she said. \"Always out of sight, of course. I spent a fair bit of the daytime in the small attic, did you know there's one up there? I explored after you lot went to sleep. I like your things. They're very interesting, you know. Your records, and that telescope. Heaps of antique knick-knacks, too.\"\n\nNate flushed, pleased by her words. No one had really held any appreciation for his things before. He'd thought himself to be the only one.\n\n\"Thank you,\" he said, forgetting to be bothered by her intrusiveness.\n\nShe smiled brightly, leaving him momentarily speechless. \n\n\"I'm so glad you've come. It really is nice here, you know. We could clean it up a bit, maybe repaint those horrid walls. I'd love some plants in here, too. I'm partial to sunflowers, personally. They're really so cheery, aren't they?\"\n\n\"Yeah,\" Nate said, unable to think of anything else to say. He was fairly certain that this attractive girl was proposing to live here, but his mind couldn't exactly wrap around the idea. Surely, she hadn't meant that. \n\nThe kettle began whistling, distracting him from his thoughts. \n\n\"I'll get it,\" Lizzie said, hopping off the counter. She popped a teabag in a cup she found in the cabinets and took the kettle off the burner. \"Have you got any milk?\" She began rummaging through the fridge before he got the opportunity to answer. \"Oh, yes. Wonderful,\" she said, holding up a bottle of milk. \n\nNate paced in the kitchen, keeping a reasonable distance from her. What he wouldn't give to have Ezra's nerve. He wouldn't have stood for this, not one minute. He would have thrown her out, no matter how pretty she was\u2014wait, no. Nate had to rethink that one. Ezra may just not have thrown her out. She was the type of girl he usually invited in. \n\n\"I could stay out of your way, if you'd like,\" Lizzie said, catching the troubled expression on his face. She looked down at the container of sugar she was holding and hooked a lock of hair behind her ear. \n\nNate glanced at her and felt a pang of guilt. He hadn't meant to hurt her feelings.\n\n\"No,\" he said, not believing what he was saying. \"You're great. I'm just a bit knackered.\"\n\n\"Must be nice,\" she said. \n\nNate wondered what in the world could be nice about being tired, but she answered his question when she added, \"I can't get tired. It's hard to catch any sleep.\"\n\nLizzie settled down at the small table in the breakfast nook and put the teacup in front of the empty seat across from her. Nate sat down and thanked her. \n\n\"Lizzie,\" he said after a minute or so of silence. \"What are you doing here?\" It was not spoken unkindly. It truly had been said out of burning curiosity. ",
        "Lizzie was looking down at her hands, oddly quiet. She chewed her bottom lip, and the sight of it made Nate draw a ragged breath, which he covered with a cough. \n\nHe'd seen a number of striking women in his life\u2014women like Holly, for example\u2014but Lizzie was... different. There was a softness about her; her skin, her lips, her hair\u2014it all looked impossibly soft. She was lovely, her features wholesome, pure, real. The vibrancy and openness of her personality was both discomforting and refreshing. She took out all the guesswork of getting to know a person. She shared her thoughts so freely, as if they'd been friends for a long while.\n\n\"Talk to me,\" he said gently. \"If it's a secret, Lizzie, I'll keep it. I won't turn you out.\" \n\n\"What if I'm a murderer on the run?\" she asked, looking up. Her eyes were sad, but her tone was playful. It almost hurt to look at her. She was deflated but failing miserably to hide it.\n\n\"See, I don't think you are,\" he said carefully. \"I think there's a good reason you're here and it hasn't got anything to do with you killing anybody.\"\n\nLizzie blinked and a single tear rolled down her face. She hastily wiped it away. \n\n\"Christ, I'm sorry. I've really bodged this up,\" Nate said, getting up from his chair. He knelt down on the kitchen floor beside her and reached out to take her hand. \n\nBut \u2014 he couldn't. His hand went right through hers. \n\n\"Do you get it now?\" Lizzie asked, her voice soft. \n\nThe room swam. His ears were ringing, his heart caught somewhere in his throat. He felt like he was suffocating \u2014 suffocating. \n\n\"No,\" he whispered. \"You're\u2014\"\n\n\"Dead.\"\n\n<center>_______________</center>\n\nFlowers began appearing everywhere. There weren't enough vases; there were just so many of them. Overflowing in the breakfast nook, gathered in bunches in the loo, stuffed into the few vases that Nate did own and arranged in the lounge. The water jug hadn't survived the attack either; it sat on his desk, filled with flowers that made him feel like sunshine had been captured in them, warming him just from being there in front of him.\n\nSometimes he'd be deep in thought at his desk, staring at the typewriter as if daring it to give him an idea, and he'd reach up to scratch the back of his head(a nervous habit) and find a braided flower crown that Lizzie had snuck there.\n\n\"Liz, this is madness,\" he would say, never really meaning it. \n\nIt was as if she was trying to fill the dull cottage with as much life as possible. Moving to the countryside had been something Nate had fantasised about doing for years, but no amount of planning could have prepared him for Lizzie. She was just so\u2014so much. So much energy, so much nosiness and interrupting and talking and dancing to records at all hours of the night.\n\nShe was so much madness. \n\nIt hadn't a thing to do with her being dead\u2014no, that was something by which he was never given the chance to be bothered. She weighed down his thoughts with other things, following him around, reading over his shoulder, driving him near mad at times. There were other times, the times where he couldn't imagine how he'd have survived in the cottage without her. \n\nOn clear cloudless nights, they would gaze out through the telescope, breathing in the fresh air from the open window, a record playing in the background as they talked about everything and nothing. She asked so many questions, wanting to know every single detail about everything and everyone, especially him. She wanted to know what made him tick, what had made him the way he was. \n\nLizzie was just so unapologetically herself that he forgot to care that she wasn't alive \u2014 because to him, she was alive. He'd never known anyone more alive than she was. \n\nShe was like breathing, right there with him even when he didn't notice, present even when he wasn't paying attention, even when he wasn't looking at her\u2014and he did like looking at her. He tried to be discreet about it, but he suspected that she knew because there was nothing that girl missed. She observed him like he was the most interesting thing in the world, picking up on things he hadn't even noticed about himself. \n\n<center>_______________</center>\n\n\"You miss the same spot every time,\" she said from the doorway of the loo, arms crossed. \n\n\"What are you talking about?\"\n\nShe pointed to a place beneath his jaw. \"You always miss it, shaving.\"\n\n\"Do I?\" \n\nIt amused him so much that he began to miss the spot intentionally, just so he could hear her complain about it again.\n\n<center>_______________</center>\n\nWithin a week of knowing him, she began to take Holly's paintings down. \n\n\"What are you doing?\"\n\n\"You hate these.\"\n\n\"No, I don't.\"\n\n\"Yes, you do.\"\n\nHe hadn't even told her about Holly. Not a word, not a hint, nothing, but Lizzie had sussed it out anyway, catching the tiniest flicker of anguish in his eyes when he passed the paintings on the walls. She never asked about it, as if she knew that it was one thing that was too painful and personal to pry into. \n\n<center>_______________</center>\n\n\"You're slouching again.\"\n\n\"Liz, let it go.\"\n\n\"You'll become a hunchback and the village kids will throw fruit at you.\"\n\n\"Let them.\"\n\n\"Stop slouching.\"\n\n\"Make me.\"\n\nSo she chucked a throw pillow at him. \n\nThat was the weirdest thing, the fact that she could touch things. \n\n\"So you can't walk through walls?\"\n\nShe bit her lip, and he swallowed, trying not to stare. \n\n\"I can't walk through walls, no.\"\n\n\"So just me then.\"\n\n\"Well, I can walk through any person, really. Though my clothes can't so there's no point in making a habit of it. A bit impractical to be walking through a person and leaving my clothes behind, don't you think? It's weird anyway.\"\n\nThat was a lie. She'd put her fist through his head, laughing at the scowl he'd give her. She would wiggle her fingers to tickle his ribs and then push her hands into his chest, trying to capture his heart like some kind of annoying sea witch. She'd try to catch him unawares, making him jump for the fun of it. She did it simply because she knew he hated it.\n\n\"Will you stop?\"\n\n\"Nate, you wound me. I've done nothing wrong.\"\n\n\"Didn't you just stick your bare foot up my arse?\"\n\n\"Might have done.\"\n\nIt was like that every day. Getting annoyed with each other, fighting, brooding, apologizing, laughing, teasing, talking like old friends and then doing it all over again. \n\nLather, rinse, repeat. \n\n<center>_______________</center> \n\nEzra was smitten. \n\n\"Why doesn't anything like this ever happen to me?\"\n\nAlfie looked up from his book and shot him a look. \"Everything already happens to you. You get all the birds.\"\n\n\"You're not bad looking, Alf. You've just got to stop dressing like my dad.\" \n\nAlfie really wasn't bad looking. Though he did wear thick-rimmed black glasses that Ezra joked emphasised his seriousness, they still sat on a face that was rather nice to look at. He had striking emerald-green eyes that complemented his clean-cut red hair and had a surprisingly fit body hidden beneath the \"dad\" clothes. Of the three boys, Alfie was the only one whose face still seemed to have a soft boyishness to it, so to counter it, he'd started keeping a beard from his Uni days. Ezra always teased that he was bound to be mistaken for Aristotle's younger, lesser-known ginger cousin. \n\n\"He dresses just fine,\" Lizzie said, giving Alfie a warm smile. \n\n\"Shame I can't touch you,\" Ezra said, putting out a cigarette he'd been smoking, and danced towards her. A Jackie DeShannon vinyl record was playing in the background and Lizzie was already twirling in the center of the room. \n\n\"You can try.\"\n\nHe did. \n\n\"Shame,\" Nate said when Ezra's hand went through her chest.\n\n\"Did you just try to grope my breast?\"\n\nEzra shrugged. \"You didn't specify where I could touch you.\"\n\n\"You're disgusting.\"\n\nEzra danced with her, singing off-key because it made her laugh. \n\n\"What the world needs now is love, sweet love, It's the only thing that there's just too little of,\" he sang terribly. \n\n\"What the world needs now is love, sweet love, No, not just for some, but for everyone,\" Lizzie sang along, her singing voice no less horrendous. \n\n\"You two are tone-deaf,\" Nate said, laughing so hard that he wheezed. \n\n\"Sing with me, Alfie!\" Lizzie said, giving him such a dazzling smile that for once, Alfie didn't seem so no-nonsense and serious. He put down his book and obliged.\n\n\"Lord, we don't need another mountain, There are mountains and hillsides enough to climb, There are oceans and rivers enough to cross, Enough to last 'til the end of time,\" Alfie sang with Lizzie, his deep baritone complementing her sweet (but off-key) tone. \n\nEzra and Nate looked dumbfounded, eyes bulging. \n\n\"C'mon, everybody now!\" Lizzie yelled, laughing.\n\nAnd then they were all joining in, the three boys getting up and putting their arms around each others' shoulders and singing to Lizzie so horribly that she laughed until she cried. \n\nAnd that was how she became one of them. Just like that. \n\nOne day there was just the three of them, just Nate and Alfie and Ezra, best mates who had grown up together, and then suddenly there was Lizzie, waltzing into their lives like a thunderstorm, uprooting them like she was the gale, dancing in the lounge, twirling like a tornado, rendering all of them speechless. \n\n<center>_______________</center>\n\n\"Why can't you cross the property line?\"\n\nLizzie was sat on a chair with one leg propped up, painting her toenails with yellow nail varnish that Nate had brought back per her request from the store earlier that afternoon. She wiggled her toes, admiring her handiwork before she looked up and smiled sadly. \n\n\"Because I'll disappear.\"\n\nNate slid back his chair from his desk and turned to face her. \n\n\"What d'you mean?\"\n\n\"If I cross the line I'll disappear.\"\n\n\"That doesn't explain much,\" he said. \"How do you know that'll happen?\"\n\n\"I just know.\"\n\nThere was so much Nate had learned about her, almost like he had begun to know her better than he knew himself, but in some aspects, she was still a mystery. There was no explanation for the way things were; they just were and there was nothing else to be said about it. \n\n\"Have you ever tried it before? Crossing the property line?\"\n\nLizzie avoided his gaze, looking out the window with softened eyes. \n\n\"No.\"\n\nNate had thought a hundred times that it would've been nice to take a long walk with her through the English countryside, maybe even sneak her into town at night just so she could see what the world was like out there, but she'd never accepted his offers to tag along. She'd always said she couldn't leave, and he'd always accepted it. \n\nThere was a small part of him that didn't believe that she couldn't leave the property. Maybe she just didn't want to. Or maybe he just hoped that were the case. \n\n\"I'm confused, Liz,\" he said and let out a sigh. Not one of frustration, but one of defeat. \n\n\"I'll explain someday,\" she said, turning to catch his eye. She gave him a smile that didn't quite reach her eyes. \"Someday you'll know everything.\"\n\n\"Okay,\" he said. \n\nAnd that was that. \n\n<center>_______________</center>\n\nNate would've liked to have said that the novel was really coming along, but he'd never been a very good liar. \n\n\"Stop throwing these away,\" Lizzie said, digging through the bin in the study to flatten out discarded crumpled papers. \"There'll be something in these\u2014a line you might vaguely remember having written, but it won't come to you. Then what'll you do? Mope around a bit more?\"\n\n\"I'm lost,\" he said miserably. \"Something's just off and I can't figure it out.\"\n\n\"It's as if I don't exist,\" she muttered, rolling her eyes. She was sitting cross-legged on the floor, smoothing out a sizable stack of papers, working carefully, taking her time to preserve every single word he'd written\u2014every single word he'd hated enough to throw out.\n\n\"Of course you exist. I don't see how that's got anything to do with it.\"\n\n\"Why don't you ever ask me to read it for you? I suppose no one much cares for the opinion of a dead girl...\"\n\n\"Emotional blackmail, that,\" he said. \"I never thought you'd be interested, honestly.\"\n\nLizzie brightened instantly. \"Oh, I hadn't thought of that! And all this time I've been agonizing that you've not considered me worthy enough to read it.\"\n\n\"Why are you so critical?\"\n\nLizzie gestured to the pile of discarded papers. \"Why are you?\"\n\nAll right, he had to give her that. \n\nHe leaned back on his chair, crossing his arms behind his head as he looked out the window. The weather was becoming cooler and cooler by the day. Leaves were beginning to drift off the oak tree, littering the yard in a scattered mess. Lizzie sometimes went out there to rake it into piles, only to have Ezra come dare her to jump into them every time he visited. \n\nJuvenile, the both of them. \n\n\"What are you most self-conscious about?\" Lizzie asked out of the blue. \n\nNate thought about it for a moment. \n\n\"My ears, I guess,\" Nate said. Some knobhead in primary school had pointed out that his big ears made him look like a certain cartoon elephant. He'd been called \"Dumbo\" by some boys for a whole afternoon before Ezra'd come out of class and decked them all in the face. Nate's ears really weren't that big, anymore. He'd grown into them, but the old feeling of humiliation from that afternoon was something that he still hadn't been able to shake. \n\n\"That's shallow,\" Lizzie said. She got up from the floor and dusted off her hands. \n\n\"Never said it wasn't.\"\n\nLizzie hopped onto his desk, settling right in front of him. At one time it might've made him uncomfortable, someone sitting so close to him like that, but he was used to Lizzie by now. She was the in-your-face kind of girl, the get-over-it and I'm-not-sorry girl, testing his patience, forcing him to adapt.\n\n\"And you? What are you most self-conscious about?\" he asked. \n\nShe was so close, her striking blue eyes glowing with such warmth that he felt as if it was contagious, warming him, too. \n\n\"My heartbeat,\" she said, holding his gaze.\n\n\"What's wrong with it?\"\n\n\"I haven't got one.\"\n\n\"Do you remember what it was like?\" he asked, not thinking. \"Sorry, that was insensitive.\"\n\n\"No, I don't mind.\" Lizzie swept her long white-blonde hair back from her face, smiling to reassure him. \"I do remember a bit, yeah. I suppose it doesn't really matter, anymore. It can't have been that special. I'd hardly ever noticed it when I was alive. It's really rather silly to be self-conscious about it, isn't it?\"\n\nNate didn't know how to feel about that. His own heart was confusing. It clenched terribly when he looked at her. His eyes always sought her first in a room, registering her before everything and everyone else. He'd sometimes see her bent over watering the plants, humming to herself, her body swaying gracefully, dancing when the only music was in her head, and in those times his heart had hurt. \n\nHe didn't want to think about why. \n\n\"Hmm, you're thinking too deeply,\" she observed. \n\n\"I am.\" He sighed. \n\n\"Let me read it,\" she said, placing a hand over the half-finished manuscript on the desk beside her. \n\n\"Go on then.\" \n\nSo Lizzie read. \n\nAnd read and read and read. \n\nSix hours, it took her. She carried it with her through the house, following him around like she always did, only this time her nose was buried in the manuscript rather than in his business. \n\n\"You can continue it tomorrow, you know,\" Nate said over dinner. \n\nLizzie's body was not capable of digesting food so there was no point in eating, not if she was just going to heave it back up in the toilet later. She sometimes said she felt hunger pangs, but Nate was pretty sure she imagined them when a particularly good meal was presented at the table. She often seemed content enough eating with her eyes, but Nate never missed the longing look she gave to shepherd's pie. Even though it was a comforting dish that reminded him of his mum's cooking, he'd stopped making it altogether. The look of yearning in her eyes was not worth it.\n\nStill, she seemed to enjoy sitting with him through every meal. He liked having her there, eating silently while she talked up a storm, her hands moving animatedly as she told him everything he did and didn't want to know. How her brain could hold so much information, he'd never know. \n\n\"Liz, really. You'll burn yourself out. Read it later,\" he said, trying to get her attention.\n\nLizzie held up a finger, her eyes scanning the final page, mouthing the words silently. \n\n\"I can see right away what the problem is,\" Lizzie said, putting the manuscript down.\n\n\"Ouch.\"\n\n\"Oh, honestly. You're a writer. Constructive criticism is a charity you should accept humbly.\"\n\nNate waved a forkful of roast potatoes defiantly. \n\n\"Never.\"\n\n\"Do you want to know what I think or not? Or is it because I'm just a dead girl\u2014\"\n\n\"Shut up, Lizzie. You know it's not that. I'm just having a laugh. I do want to know what you think.\"\n\nShe stuck her tongue out at him like a little child, and Nate felt a rush of affection for her. She should have been annoying, should have been bothersome, but she wasn't. She was Liz, and there wasn't a damn thing about her that wasn't likable or endearing. Save for the times when she drove him mad, of course. \n\n\"Your antagonist is one-dimensional. Makes all the problems seem bland, cartoonish.\" \n\n\"Okay, that did sting a bit.\"\n\n\"Oh, relax. It really isn't all bad.\" \n\n\"Yeah, that makes me feel loads better.\"\n\n\"Well, it should. You are a good storyteller and I'm confident in your writing abilities. When I say that the antagonist is one-dimensional, I'm not saying that you are. Don't make it so personal. This is an opportunity for you to reflect and add some depth to your character. He's got all the classic qualities of a villain\u2014which don't get me wrong, it's good\u2014but he's not realistic, he's not real. Even villains have heartbeats, Nate. They can love, too, even if they don't know how.\"\n\nNate gazed at her, this passionate girl, this infuriating, bossy, beautiful girl and wondered where the hell she had been all his life. Right in this cottage, apparently.\n\n\"No one's actually ever been that honest with me,\" Nate said, scratching the back of his head. \"I mean Alfie's read it\u2014made some great points, but Alfie critiqued the book objectively. The things he said made sense, but I couldn't exactly figure out how to apply them. The thing is, Liz, I think you've just critiqued me. I might've needed that. How'd you know?\"\n\n\"I know you, Nate. That's how.\"\n\n\"Because you wanted to. Because you tried.\" \n\n\"Anyone who doesn't is an idiot. Especially that\u2014oh, what's her name?\"\n\n\"Hell. Who told you about Holly?\"\n\n\"Ezra,\" they both said together. \n\n\"What was so great about her, anyway?\" Lizzie asked. She rested an elbow on the table and perched her chin on her hand. \n\nThe thing was, Nate didn't really know, anymore. He hadn't thought much about Holly at all lately. There was no longer a dull ache in the center of his chest at the mention of her name. \n\n\"I don't really know,\" Nate said. \"I think I really just wanted someone to love, you know? And Holly was the complete package\u2014beautiful, the real artsy type. Watched foreign films, painted pictures, wrote poetry. I had my head so far up my arse, Liz. I might've convinced myself that she was the one for me when nothing could've been farther from the truth.\"\n\n\"Why d'you reckon she liked you?\" \n\n\"I mean,\" Nate nervously scratch the back of his head. \"I dunno, Liz.\" \n\n\"Want to know what I think?\" She didn't wait for him to answer. \"I think she liked you for your potential, not for who you actually were. I think she wanted something safe, wanted to groom you into the man of her dreams. The other bloke might have been easier to mold. The thing is, she didn't see you, Nate. She only saw what she wanted to, and when you challenged that by just being you, she left.\"",
        "Nate realised that Ezra had probably told her every last detail of the whole relationship, beginning to middle to end. But the words she had spoken weren't Ezra's; they weren't biased, weren't even malicious, just factual. It was like Lizzie was in his head, putting words to the thoughts he'd never been able to unscramble enough to understand. She wasn't wrong. She'd gotten all of it right.\n\nAnd it didn't even hurt. \n\n\"I'm glad she left,\" he said, meaning it. \n\n\"You should be,\" she said. \"You should be loved for who you are, not who someone thinks you could become. That's selfish. People like that are self-serving. They're takers and you're a giver, Nate.\"\n\nNate didn't have to ask Lizzie to know that she was a giver, too. \n\n<center>_______________</center>\n\n\"I wish you could come out with us,\" Alfie said, hovering by the front door with a tortured expression on his face. \n\n\"Me too.\"\n\nEzra walked past Lizzie and she put a fist through his head, laughing. Unlike Nate, Ezra actually liked it when she did that. \n\n\"One of these days you'll knock the brains right out of my head,\" Ezra said with a grin. \n\n\"Slim chance, seeing as how you haven't got any,\" Nate said, shrugging into his coat. \n\n\"Ha ha,\" Lizzie said, sticking up for Ezra. \"He's got plenty else to make up for it.\"\n\nEzra, Alfie and Nate stalled by the door for ten minutes chatting with her. They'd planned to go out to the city that night for a party. Now that the time had come, none of them wanted to leave. They all knew Lizzie hated being alone. \n\n\"You'll be late for the party.\"\n\n\"Fuck the party,\" Nate said with a sigh. \n\n\"I never wanted to go anyway,\" Alfie said even though it had been his idea in the first place. \n\nEzra brooded quietly. On one hand, he loved parties and hadn't been to one in ages, but on the other hand, he loved Lizzie, too. \n\nNone of them wanted to go. Not when she couldn't. \n\nShe chased them out, anyway, threatening to lock herself in the attic for the rest of her existence (she was dramatic like that) if they didn't go to the bloody party. \n\nSo they went to the bloody party. \n\nIt was like the colour had been stripped from Nate's eyes. His surroundings looked dull, lifeless. The live music thudded against his eardrums. It had been such a long time since he'd heard anything that wasn't a scratchy vinyl record that it hurt his brain to hear anything else. \n\nHe talked to people that he knew, old mates from uni and a handful of other friends they had all made through the years, socializing within the same circle. Sometimes he got lost in the conversations, remembering something Lizzie had said and wanting to share it, but knowing he couldn't. \n\nNate, Ezra, and Alfie had all sworn Lizzie's existence to secrecy. Ghosts weren't supposed to exist\u2014and they especially weren't supposed to look like Lizzie: healthy and vibrant and real. They didn't want to share her with the world, and certainly not when it was entirely likely that she'd be received as a specimen to be studied. She was an anomaly, a phenomenon, a miracle. She shouldn't have existed, but she did. Right there in that old cottage in the countryside, she existed, and she existed hard. \n\nEzra put drinks in Nate's hands because he knew he needed them. The alcohol burned on the way down, but he couldn't feel the warmth reach his fingertips. He kept drinking until he passed his limit, but he didn't stop. \n\nHe kept thinking that if he finished his novel and went on book tours then Alfie and Ezra would be sure to tag along, but there would be no Lizzie. He had considered purchasing the cottage a million times, and perhaps he would, if only to protect Lizzie from the outside world, but he couldn't entirely afford it yet. He had some money, but not enough. With less than a year and a half left on the lease, Nate knew he'd have to work quickly on his novel and get paid a sizeable sum to purchase the cottage. \n\nHe fantasised about it sometimes, though. He imagined her living out of a suitcase with him, dancing in hotel rooms, making faces at him and hovering over him in that way that he hated, spying on everything he did, making him mad, making him laugh until he cried. He imagined her getting into bed with him, imagined feeling her palm pressed against his cheek while he watched her, drinking in the sight of her, reaching for her, holding her, kissing her, wanting her, needing her, having her. \n\n\"I'll drive you home,\" Ezra said after a few hours. \n\n\"It's only ten,\" Nate slurred. \"The party hasn't even started yet.\" \n\nHe knew why. He'd left the life of the party at home by herself. \n\n\"Alfie, give me a hand,\" Ezra said. \n\nAlfie had appeared, sensing trouble. They each took an arm and led Nate out of the building. He protested the whole way, feeling like a royal pain in the arse for having needed to be handled like a child. \n\nIt didn't make sense. He used to enjoy parties like these. He used to laugh with his mates, throwing back drinks to get the liquid courage to ask gorgeous women to dance, miraculously charming them into bed because even though he wasn't like Ezra, he was good-looking in his own way. He was the kind of attractive that got into people's heads, the kind that they'd remember sometimes and wonder whatever had happened to him, that guy with the grey eyes, clouded like a thunderstorm; that guy with the thick locks of light brown hair that shone golden under lights; the one with the weird knuckles that jutted out and ears that really weren't as big as he complained they were; the one who slouched a lot because it seemed he was too tall for almost everything, as if his head was so full of thoughts that it was weighing him down. He was typically a bit on the quieter side, more reserved, but that was what made it all the more remarkable when he gave his attention to people, making them feel special for his having opened up to them. \n\nNate had been given everything good in life, all the things for which a person could ask. Well-off parents, enviably good genes, an excellent education from prestigious schools, and a fair sum of inheritance from his late grandfather sitting in the bank. \n\nHe had everything.\n\nBut he couldn't have Lizzie. \n\n\"It's okay, mate,\" Ezra said. \"You'll see her soon.\"\n\n\"I don't want to,\" he lied. \"I want to drink. That's what we came here for.\"\n\n\"No,\" Alfie said gently. \"We came here to have a good time.\"\n\n\"So let's go,\" Nate said, making a weak struggle to get back to the party. Alfie and Ezra tightened their hold of him and dragged him down the street. \n\nThey strapped him into Ezra's car with Alfie muttering as he closed the door. They'd thought it'd been bad when Holly had broken his heart, but this was so much worse. He'd never been like this before. \n\nNate slumped against the seat, feeling cold and hot all at once, knowing that it had been a mistake to come, that it had been a mistake to leave her. \n\nIt wasn't that he never left the cottage, that'd be mental. He ran errands in town, picking up groceries and paying notes and buying things like dish soap and trash bags. Sometimes Lizzie sent him with little requests\u2014flower seed packets, strawberry shampoo, a notebook\u2014that he could never refuse. He'd always be back within a couple of hours, and she'd always be waiting to greet him at the door, smiling so brightly that it was as if he'd been gone for years. \n\nThis\u2014well, this was different. Leaving Lizzie behind to go to a party, something he knew she would enjoy, felt like cheating. Having a good time without her was so unbearable that he'd made a conscious effort not to enjoy himself. It didn't seem right to make memories without her, didn't seem right to go on living like that when she\u2014the dreamer, the dancer, the troublemaker, the girl whose heart was big enough to fit the entire universe inside\u2014couldn't explore the very world that she loved so much. \n\nWhen had this happened? When had she gotten under his skin, changing the very biology of him, getting into his mind, getting into his bones, right down to the marrow?\n\nLizzie was on her favourite armchair in the lounge reading a book when Alfie and Ezra stumbled in, holding Nate up, helping him to the settee as Lizzie disappeared to the kitchen. She returned with an Advil and a glass of water, standing patiently until he accepted them, but he didn't. He protested, his hand going right through hers, knuckles banging up against the glass and pushing it back until it sloshed.\n\nNate swore. \n\n\"I've got this,\" Lizzie said, turning to Alfie and Ezra. They knew her well enough not to doubt her. She wouldn't have said it unless she meant it. \n\n\"Liz,\" Nate said when they'd left. \n\n\"I'm here,\" she said, glass of water back in hand. \"Now take this or I'll toss out something of yours that you won't even notice is missing until it's long gone.\"\n\n\"Yes, Mum.\" \n\nThis time he took the water and Advil without complaint. \n\n\"Sorry,\" he said. \n\n\"Put your head back.\"\n\nHe did. \n\n\"Close your eyes.\"\n\nHe did. \n\n\"You're sloshed and you have a headache.\"\n\n\"Yeah?\" He snuck one eye open, finding that she was staring right back at him as if she'd predicted he'd do it. \n\n\"Hey, Liz?\"\n\n\"Close your eyes.\"\n\nHe did. One, because his temples were throbbing, and two, because she'd asked him to. \n\nThe weight shifted as Lizzie settled herself on the settee beside him. When he felt little things like that, the way she interacted with the world, he was comforted by the fact that she really was real, that he hadn't just dreamt her up. \n\n\"All right, what were you going to say?\" she asked.\n\n\"How could you tell about my headache? I can't be that easy to read.\"\n\n\"You are to me.\"\n\n\"And you're very pretty,\" he said, yawning. \n\n\"You're completely wasted,\" she said with a laugh. \n\n\"I'm really not. Feel great.\"\n\n\"And I'm the bloody Queen.\"\n\nThey laughed, leaning back on the settee together, their shoulders almost brushing. He could pretend that they weren't touching because they didn't want to, not because they couldn't. \n\n\"How did you die?\" \n\nHe'd never asked her, partly because he didn't think it was any of his business and partly because he hadn't wanted to know. \n\n\"Do you really want to know?\" \n\nHer words went right into him, into his chest, into that place where butterflies had been flickering to life since the moment he'd first caught sight of her sitting on the stairs with her smirk that was now as familiar as the air in his lungs, observing him in that way she did, picking him apart to find out everything about him and afterward piecing him back together like a puzzle, only somehow, she'd snuck pieces of herself in there.\n\nShe knew him; she knew everything. \n\n\"Yes,\" he lied. \n\n\"Ask me again when you're sober.\" \n\nNate knew that he wouldn't. If she'd wanted him to know she would've told him.\n\n\"How old are you then? That's harmless enough.\"\n\nShe seemed to think so too. \"Twenty.\"\n\n\"How old are you really?\"\n\n\"How long have I been dead, you mean?\"\n\n\"Yeah.\"\n\nShe started counting with her fingers. Nate, who could solve complex maths formulae in his mind, found her positively adorable. \n\n\"Older than I like,\" she finally said. \n\n\"Chicken.\"\n\n\"I am not.\"\n\n\"Prove it.\"\n\n\"All right.\" \n\nHe could tell she was nervous so he didn't push her. \n\n\"Sixteen,\" she finally said. \"I've been dead for sixteen years. So I guess that makes me about thirty-six now, doesn't it?\"\n\n\"I'm really into older women.\"\n\n\"Oh shut up, you.\"\n\nNate didn't feel much like laughing anymore, now that her words were really sinking in. He didn't want to think of the years Lizzie had spent alone in the vacant, isolated cottage without anyone to talk to. She was a friendly person, the type who liked to chatter (and never stop once started), the kind of person who enjoyed being around people, making them smile, making them laugh, just by being herself, being Liz. Without even a book to distract her, what had she done all those years? Who had been there for the days when even her soul felt heavy, the days that she came to Nate and sat beside him, hugging her knees, looking distant until he just talked to her, making her smile because he was there and that was more than enough for her. \n\n\"It's okay, Nate,\" Lizzie said softly. \n\nBut it wasn't. It really wasn't. \n\n<center>_______________</center>\n\nSometime later, Alfie found out about Lizzie's age, too. \n\nThe two of them often spent long afternoons out beneath the shade of the oak tree, poring over books, chatting about the way the world worked, the way it functioned, the way it was being destroyed. \n\nNate filled her mind with dreams, Ezra with adventure, but Alfie was the one who filled her with a true understanding of reality, sharing ideas that grounded her, made her think, made her lie awake at night looking out through the open window, stargazing while Nate worked. \n\n\"Twenty,\" Alfie said when he'd found out, looking pleased with himself. \n\n\"Sorry, Alf. I charge at least fifty by the hour,\" Ezra said. \n\nNate ignored him. \"Twenty what?\"\n\n\"Lizzie. She's twenty.\"\n\n\"Years old?\" Ezra was shocked. \n\n\"No, twenty eyeballs,\" Alfie said sarcastically. \"Yes, twenty years old.\"\n\nEzra scowled. \n\n\"And her birthday is coming up soon,\" Alfie added, grinning smugly. \n\n\"You did not get that out of her,\" Ezra said, jealousy bleeding into his words. \n\n\"What is it?\" Nate asked. She hadn't told him this. \n\n\"Fourteenth of November.\"\n\nNate glanced at the calendar. So did Ezra.\n\n\"Oh, hell. That's only four days away!\"\n\nEzra got up and began pacing in the lounge, mumbling about candles and balloons and confetti and gifts. \n\n\"What d'you reckon she'd like?\" Alfie asked out loud to no one in particular. He already had a list of ideas he'd thought of on his walk up to the cottage. It was really easy for him: books. He already knew what subjects interested her. \n\n\"A bike,\" Ezra said. \"Who wouldn't want a bike?\"\n\nAlfie looked truly dumbfounded by the staggering number of advancements Ezra made in the field of his own stupidity. \n\n\"She can't go anywhere, you gormless git.\"\n\n\"Right, there's that,\" Ezra said with a frown and did a few more rounds of the room, his handsome features contorted by his \"thinking face\". \n\nEzra wasn't stupid, he was just scatterbrained. He'd been an excellent student, scoring higher than Nate on occasion (never Alfie though; Alfie was a genius). He could learn things, he could memorise and understand them\u2014but he could just as easily forget them. \n\n\"Flowers,\" Nate said thoughtfully. \n\n\"Flowers? Planning a romantic date, are you?\" Ezra asked, grinning.\n\nNate would've loved to have done just that, but he thought better than to voice his thoughts aloud as Ezra would enjoy nothing more than taking the piss out of him.\n\n\"Ezra, for the hundredth time, she can't go anywhere!\" Alfie yelled.\n\n\"I didn't say it'd have to be off the property line,\" Ezra said defensively, even though the idea really had slipped his mind again. \"Flowers then. What are her favourite?\"\n\n\"Sunflowers,\" said a soft voice from down the hall. \"They aren't in bloom, though.\"\n\n\"Shhhh!\" Alfie furiously motioned for Ezra to take a seat. \n\nLizzie strode into the room, smirking. \n\n\"What are you lot up to?\" \n\n\"Discussing, er\u2014gardening,\" Nate said, unable to think of any other way to cover up the topic.\n\n\"Ah,\" she said, not buying a word of it. \n\nShe rounded on Alfie who visibly paled at the sight of her intense glare. \"You told them, didn't you?\"\n\n\"I didn't know it was a secret,\" he said weakly. \n\n\"And 'don't tell the boys' wasn't clear enough, was it?\"\n\nNate felt sorry for Alfie. \n\n\"It's not his fault. We bullied it out of him.\"\n\nShe turned to him sharply and narrowed her eyes. \n\n\"Don't you lie to me, Nathan Alaric Chapman.\"\n\n\"Nathan,\" Ezra repeated under his breath, snickering. \n\nLizzie glared. \n\n\"Listen up,\" she said, pointing to each of them individually. \"There will be no celebrations, gifts, flowers\u2014nothing. Got it?\"\n\n\"No,\" Nate said, rising from his seat. He walked out of the room.\n\n<center>_______________</center>\n\nMuch to Lizzie's dismay, four days later there was a celebration. To anyone else, it might've seemed morbid to celebrate the birth of a dead person, but Nate, Alfie and Ezra hadn't given it a second's thought. They'd never really viewed her as dead, and it certainly wasn't reason enough to go without celebrating. \n\n\"C'mon, Liz,\" Nate said, beckoning her into the kitchen. They'd decorated it with balloons, streamers, (plastic) sunflowers, confetti crackers and a small pile of gifts. \n\n\"What's all this?\" she asked, unable to conceal her smile. \n\n\"This,\" Ezra said, striding over with a grin, \"is your birthday party, love.\"\n\nAlfie popped a cracker, breathing heavily as confetti exploded in the small kitchen. He looked surprised with himself for a moment, as if he'd never done anything so outrageous in his life, and then he grinned.\n\nNate laughed. \n\n\"Going a bit wild there, aren't you, Alf?\" Ezra teased. \n\n\"Piss off,\" Alfie said, gathering a handful of wrapped presents from the kitchen table. He plopped them on the counter beside Lizzie. \n\n\"Hope you like them,\" he said nervously. \n\nLizzie beamed. \"Oh, I do already!\" she said, even though she hadn't even opened them yet. \n\nAlfie had gifted her five books. City of Dreams by Michael Moorcock, Do Androids Dream of Electric Sheep by Philip K. Dick, Dragonriders of Pern by Anne McCaffrey, Nine Princes in Amber by Roger Zelazny, The Eye in the Pyramid by Robert Shea and Robert Anton Wilson.\n\n\"Oh, Alfie,\" she said, her eyes brimming with tears. She was touched deeply. \"These are great.\"\n\nEzra was next. \n\n\"Oh, you didn't!\" Lizzie screamed, clapping her hands to her cheeks. \"I've got to put them on right this instant!\"\n\nEzra did something that no one had ever really seen him do before: he blushed. He watched on as Lizzie laced up the pair of special edition flower-print Doc Martens he'd gifted her. She twirled in the kitchen, her long hair rippling like water as she moved. She looked graceful, even as she jumped, testing out the boots with the biggest smile on her face. \n\n\"I could just kiss you, Ez,\" she said. \"I've always envied yours, but these are even better. The flowers!\"\n\nNate was last. He'd hung back, feeling more and more nervous as she'd opened the gifts from his mates. He was starting to doubt whether she'd like his gift at all. He'd put a lot of thought behind it, but he wasn't certain if she'd understand the meaning behind it. The gift was simple. Maybe too simple. \n\n\"Happy birthday, Liz,\" he said, placing a small box on the counter. \n\n\"Thank you,\" she said with a warm smile. She unwrapped his gift carefully, peeling back the wrapping paper to reveal a plain black gift box. She popped off the lid and looked adoringly down at a little gold pendant watch, strung up on a chain to be worn as a necklace. \n\nShe looked up at Nate, her eyes glistening with tears. \n\n\"What? What's happened?\" Alfie said, alarmed. Ezra put a hand on his shoulder to settle him and hissed something along the lines of \"shut up you prat, you're ruining it\". \n\nNate stuck his hands in his pockets, teetering on the balls of his feet because he didn't quite know what else to do. His heart felt as if it would burst. From her reaction, it was certain that she had understood the meaning behind the gift. \n\nLizzie put on the necklace, her hands fumbling a little with the clasp. She put her hand on the pendant watch, smiling as she pressed it to her chest. She had tears streaming down her face, and the sight of it made Nate feel as if she'd torn a piece of his heart out. Never had he loved anyone as much as he loved her. \n\nYes, he loved her. ",
        "\"Nate,\" she said in a voice thick with tears. \"You gave me a heartbeat.\"\n\nThe watch ticked on her chest, dead-center where her real heart would have beat. The very thing that she had been most self-conscious of, the thing she had pretended hadn't mattered to her, but had actually mattered quite a lot, was now hers again. A heartbeat. \n\nThere wasn't a dry eye in the room. \n\n<center>_______________</center>\n\nNate met Chester on a frigid late-autumn day in town. \n\n\"Oh, hell. Stop following me,\" Nate muttered, stepping around the old tomcat that had begun following him. \n\nIt was quite big for a cat, though most of its mass might just have been exaggerated by the fluffy orange fur that covered its body. It had a limp on one leg, but otherwise appeared to be in good health. Its bottle-brush bushy tail pointed up as it followed Nate home, even as he tried to shoo it away. It only mewled innocently and brushed up against the shopping bags that hung low in Nate's hands. \n\nLizzie was standing by the door to let him in, a steaming cup of tea in hand. Nate laid the bags by the door and took the cup with a grateful smile. He'd near-frozen half to death.\n\n\"Ooh, who's this?\" she asked, bending to take a good look at the cat. The old tomcat had followed Nate all the way home and had now snuck its way inside to charm Lizzie. \n\n\"I've no idea,\" Nate said, gulping down a scalding sip of tea. \"Couldn't shake him. He followed me in all the way from town.\"\n\n\"Suppose he was looking for a family?\" She reached out to pet the cat but her hand ghosted right through him. She frowned but perked up considerably when the cat purred, pleased by her attention. \n\n\"Absolutely not, Liz,\" Nate said, catching the dreamy look in her eyes. \"No.\"\n\n\"Oh, c'mon. Have a heart, Nate.\"\n\n\"Cats are\u2014they're filthy. And I'm allergic.\"\n\n\"You are not,\" she said, shutting the door behind them to keep out the cold. \"And cats are very clean. They groom themselves all day.\"\n\n\"I've already said no.\"\n\n\"Alfie's got Queenie. Can't we have a cat too?\" she said pleadingly. \"It'd be nice to have some company.\"\n\nNate shook his head and handed her the half-empty cup. \n\n\"You are the company,\" he said and picked up the bags to take into the kitchen. \"That's about all I can handle.\"\n\nLizzie and the cat both trailed after him. \n\n\"We can't very well cast him out,\" she said, pouting. \"It's awfully cold out there.\"\n\n\"Save the bleeding heart for another cause,\" Nate said. \"Beg all you want. He's not staying.\"\n\n\"Oh, but Chester'll be no problem at all,\" she insisted. \"You'll hardly notice he's here.\"\n\n\"Chester?\"\n\n\"A fitting name, I think,\" she said, looking down lovingly at the cat. It purred and tried brushing up against her legs. \n\n\"Christ, Liz,\" he muttered. He glanced out the kitchen window and grimaced. She was right. It was awfully cold out there.\n\n\"One night,\" he said in his sternest tone. \n\nLizzie squealed. \n\n\"One night,\" he repeated, but she hadn't heard him; she was already busy digging through the pantry to find something to feed Chester. \n\n\"I'm going to regret this, aren't I?\" he said with a heavy sigh.\n\n<center>_______________</center>\n\nThe cold didn't let up, but that was no surprise as they were fast approaching winter. Nate's plans to allow Chester to stay one night kept getting extended, one night turning into a few nights, and then a few nights turning into a few weeks. He kept telling himself that he'd cast the cat out once the weather warmed a bit, but it didn't look as if that would be happening anytime soon. \n\n\"We need more decorations,\" Lizzie said, hanging baubles up on the Christmas tree. She'd spent the last week wrapping sprigs of red berries on bits of twine and making arrangements of winter flowers to decorate the home. Nate was certain that after the holiday he'd never want to see another Christmas rose again in his life. \n\n\"Haven't we got enough?\" he said, gesturing to the lounge. She'd hung up twinkling fairy lights, arranged all too many bloody Christmas roses on every surface, and had settled some god-awful glittering handcrafted paper snowflakes and snowmen on the mantel that she'd constructed with a giggling and drunken Ezra the week before. \n\n\"No, I meant for the tree,\" she said. \"It looks a bit bare.\"\n\nNate squinted his eyes, trying to see if he'd missed something. The tree looked fine to him. He was about to say so, but the hopeful look in her eyes stopped him. \n\n\"All right, what d'you need?\" he said, thinking it best to humour her. After all, how long had it been since she'd last celebrated a proper Christmas? It hurt to think about so he pushed the thought out of his mind almost immediately. \n\n\"I think some of those fake pears would go nicely with a few pinecones. I could paint them with glue and the silver glitter. A few more red baubles would complement it so well. And I do think it'd be nice to have a wreath to hang on the door. Could you bring one? I'd like to decorate it myself so do make sure it's a plain one. Oh, and a star for the tree. Or would an angel be better? No, a star, I think. Oh dear, I'm asking for far too much, aren't I?\"\n\nChester chose that moment to rub up against Nate's legs. He absently scratched him behind the ears. Nate didn't think he'd ever be able to deny that girl a thing. Hell, the bloody cat was still in the house, living quite comfortably off expensive bags of specialty food made for elderly cats. \n\n\"Not at all,\" he said, giving Lizzie a reassuring smile. \"I'll pop into town with Ezra when he comes by tomorrow.\"\n\nAfter a few hours, Lizzie came and plopped down on the floor beside Nate's feet, leaning back against the settee. Her head lolled back on the seat and she stared right up at his face.\n\n\"So grey,\" she mused. \n\n\"Sorry?\" Nate put down the copy of his manuscript and the pen he'd been using to make corrections. \n\n\"Your eyes,\" she said. \"I've never seen anyone with such grey eyes. Like storm clouds.\"\n\nNate shrugged, feeling his face grow hot. \"Got them from my grandad on my mum's side.\"\n\n\"You're quite beautiful, you know,\" she said. \"Oh, stop blushing. It's only the truth.\"\n\nNate looked down at her face, taking in her delicate bone structure, twinkling blue eyes, lush pink lips, and long silver-white hair, and thought that he'd never seen anything so lovely in his life. Her skin looked moon-kissed, glowing from the roaring fire and fairy lights. There was immense kindness in her eyes, holding such warmth that he thought there was no need for fairytales. One look at her and it'd be enough to capture all the wonders of the imagination. \n\n\"I love you.\" \n\nHe'd been meaning to say the words for a long time. It had taken no courage, no planning. There was nothing to fear with Lizzie. \n\n\"I know,\" she said softly. \"You have for some time, haven't you?\"\n\n\"I reckon you figured it out before I did. You know me too well.\"\n\n\"Yes, Nate. I do.\"\n\nThis would have been the time to kiss her. God how he wanted to kiss her.\n\n\"I hope I'm making myself clear,\" he said, his chest aching. \"I'm in love with you.\"\n\nLizzie was crying, now, but he couldn't tell if it was because she was sad or if it was because she was happy.\n\n\"I knew that, too,\" she said, wiping tears away with the back of her hand.\n\n\"How can it hurt so much to love a person?\" he asked. The anguish was heavy in his tone, bleeding through every word, every breath. \n\n\"It doesn't hurt to love,\" she told him with trembling lips. \n\nTears slipped from the corners of Nate's eyes.\n\n\"Then what is it?\" he asked, feeling his throat begin to close up. \"What is it that's causing this pain?\"\n\n\"Yearning.\" \n\nNate didn't bother wiping his tears anymore. He couldn't stop crying. \n\nHe knew what she meant. To yearn for her was the most painful thing he'd ever experienced. There was so much he wanted, so much that couldn't be solved with love alone. Loving her wouldn't bring her back to life. \n\nThe fire crackled as they sat there, silent as they looked into it, their eyes blazing. Chester settled onto Nate's lap at some point, sensing his sadness, and the gesture touched Nate so deeply that he decided there would be no casting out that cat. Lizzie had been right, there really was nothing wrong in having some company. With Chester in the house, it had begun to feel like they had become a family. \n\n\"You love him, too, don't you?\" Lizzie said, smiling. \n\nNate grinned sheepishly. \n\n\"I suppose I do, yeah.\"\n\n\"I knew you would.\"\n\n\"Well, you do know everything.\"\n\n\"And don't you forget it.\"\n\n\"I don't think you'll let me, anyhow.\"\n\nLizzie inched closer and tried to lean her head against his knee, peering up at him with eyes that glittered like the night sky. He wished so much that he could feel her head, to feel just how much that crazy brain of hers weighed.\n\n\"I'm in love with you, too, Nate.\"\n\n\"I know.\"\n\nAnd he had known. Of all the things he didn't know, of all the things that confused him and shrouded his life in mystery, this was one thing he had known. \n\nHe'd known it all along. \n\n<center>_______________</center>\n\n\"Take me to bed, Nate,\" Lizzie said, looking up from where she was sat on the floor, her arms hugging her knees. Her eyes were wide and hopeful, waiting for his reaction. They'd never slept beside each other. She left him alone at night, granting him the privacy that she denied him during the day. Lizzie sometimes got weak and tired, and in those times, she would sleep during the day while Nate worked, writing by hand instead of typewriter so as not to disturb her. He'd watch her sleep, glancing at her, at the way her stardust-white hair splayed out on the pillow, the blanket covering her lithe body.\n\n\"Sure,\" Nate said, getting to his feet from the settee. Lizzie smiled and got up, dusting off her bellbottoms, the pants that Alfie had gifted her only the other day. She loved them and wore them almost every day. They were high waisted, and mustard yellow in color, flaring at the knees. She paired the pants with her floral shirts. \n\nLizzie led the way up the stairs, and for about the millionth time, Nate tried not to stare. Shame filled him each time. \n\n\"Come, Nate,\" Lizzie said softly, opening the bedroom door. \"Let me show you something.\"\n\nNate obeyed, trailing in after her. Lizzie turned and reached around him to close the door. Her arm grazed his, but neither of them could feel it. They froze, staring at each other, pausing. \n\n\"Kiss me, Nate.\" \n\nHe didn't hesitate, didn't even think, just lowered his head, eyes open, and kissed where her lips were. It was a gentle kiss, one that she could probably feel if she imagined it deeply enough. She blinked slowly, watching him in wonderment, smiling so beautifully that Nate almost lost his balance. She was an ethereal beauty, an angel that had been sent to save him from himself, from all his insecurities, from his loneliness, from his brooding mind, from all the things that only a kind-hearted spirit like Lizzie could protect him from. \n\n\"What-what were you going to show me?\" Nate asked, gulping down his nerves. This night had quickly taken a turn into the unknown. \n\n\"This.\"\n\nLizzie lifted her shirt, taking it off of her body. Nate was so surprised that he winced, like he was a bad boy for looking, a filthy, perverted man. But Lizzie had wanted him to see, hadn't she? So he looked. He looked at everything, her smooth skin, her lacy white bra, her tiny navel, until his eyes fell upon a deep scar on her stomach. He sucked in a breath.\n\n\"Is that\u2014\"\n\n\"Yes,\" Lizzie said. \"That's how I died.\"\n\n\"Christ,\" Nate said, taking a step back in disbelief. His head hit the door behind him, but he didn't feel it. All he felt was despair. \n\n\"Sixteen years ago, my father, a drunkard, murdered me and my sister in the cellar. He used a knife. Stabbed us.\"\n\nNate slumped against the door, slid down to the floor and put his face in his hands, tears trickling from the corners of his eyes. No, he thought. Not my Lizzie. \n\n\"But why, Liz?\" he asked. \"Why would anyone do such a thing?\"\n\nLizzie looked sadly down at him and said, \"Who knows why bad people do the things they do?\"\n\n\"And your sister,\" he said shakily. \"What happened to her?\"\n\n\"Anne crossed the property line. I never saw her again.\"\n\nNate looked up, his eyes bloodshot. \"She was\u2014she was like you?\"\n\n\"Dead and alive in spirit?\" Lizzie asked. \"Yes, she was like me. Her body was removed by the church and buried there in the cemetery. Mine was too, and I'm sure there was a lovely service. We never got to see it. We were here, hiding in the attic. Our father was jailed for his crimes, and when he came home after serving his sentence, we haunted him, chucked things at him, scared him off.\"\n\nNate now understood why Lizzie had kept this from him for so long. It was a lot to take in, and it was brutal on his heart, making it ache and ache. More than ever, he wished he could hold her, take her in his arms and stroke her hair, kiss the top of her head, and give comfort in the warmth of his body. He loved her, he loved her so very, very much. And he hadn't been able to protect her, not from this. \n\n\"Liz,\" he said as tears streamed down his face. \"I love you. I would've\u2014Liz, I would've died for you. Hell, I'd die for you now.\"\n\n\"You will not,\" Liz said sharply. \"Don't even think about it, Nathan Alaric Chapman.\"\n\n\"But we could be together.\"\n\n\"We are together.\"\n\n\"Forever,\" Nate said, wiping away his tears. \"I'm speaking of forever.\"\n\n\"I will forever be with you, Nate. Wherever life takes you, wherever you go in this world, my heart that does not beat will go with you.\"\n\n\"I'm never leaving you,\" Nate said, exasperated. He got up from the floor and stalked up to her, and she took a tentative step back, surprised. Lizzie looked up at him, her face determined. \n\n\"I'll cross the property line.\"\n\n\"You wouldn't.\"\n\nHer eyes flashed. \"I most certainly would,\" she said challengingly. \"I'm not allowing you to condemn yourself to this life. I would sooner disappear into nothingness.\"\n\nNate softened. \"So you'd die for me, too.\"\n\n\"Yes, because I love you, Nate!\" Lizzie said, raising her voice. \"I love you and I'd rather die for good than let you kill yourself!\"\n\n\"Calm down, Liz. Please.\"\n\n\"No, I won't calm down! I won't! Not until you've promised me.\"\n\n\"Promised what? That I won't die? I have no control of that.\"\n\n\"Oh, yes you do! You will not die on me, Nathan.\"\n\n\"Can you please stop calling me that?\"\n\n\"It's your bloody name!\"\n\nAnd so they argued for the rest of the night, back and forth, with Lizzie speaking in a raised voice, and Nate coldly explaining his position. All he wanted was to be with her. Why didn't she understand that? \n\nIn the early hours of the morning, Nate fell exhausted into his bed, and rolled over, making room. Lizzie lay beside him, crossing her arms, fuming in silence. \n\n\"I love you,\" Nate reminded her. \n\n\"I know,\" she said grumpily. \"I love you, too.\"\n\n<center>_______________</center>\n\nIn the years that passed, Nate finished his novel, an action-packed fantasy about a young man who found his way through the universe, guided by an angel. It would be a lie to say there weren't some of him and Lizzie in there. The book was published, and did extremely well, with copies sold internationally. With tidy earnings, Nate was able to purchase the cottage. \n\nOn a balmy, purposeless spring weekend in 1970, Nate and Lizzie were married by Alfie, who had become ordained for the occasion. Ezra was the sole groomsman, and Chester, who had died peacefully in his sleep on the front porch the year before, was in attendance, brushing up against Lizzie's legs as she recited her vows. She picked up a purring Chester as Alfie pronounced Lizzie and Nate man and wife. Nate had looked into her eyes, seeing his own entire universe there, his angel, who he'd follow anywhere. He kissed where her lips were, grinning when he pulled back. It was the best day of his life. \n\nNate aged with time, looking older as the years ticked by, but Lizzie did not mind. They slept beside each other every night, and Lizzie would sit through all of his meals with him. Every birthday of hers was celebrated with plastic sunflowers, with a party thrown by her perpetual boys. Lizzie would pass the time by reading books, caring for the garden, petting Chester, and using a fork to brush through her husband's hair to bother him. He never did seem to mind. \n\nBefore they knew it, Nate was an old man. \n\n<center>_______________</center>\n\nLizzie watched silently as Nate slowly tried to insert the key with his tremulous hands. Eventually opening the door to the shed, he hunted for the small ladder, his eyes not serving him well in the small shadow-ridden building. With a firm grip that belied his age, he pulled it out and dragged it to the front of their home. \n\nYears before, he'd paid the son of a distant neighbor to tack up the runners that held the stringed lights that Lizzie loved so much. Going inside, he grabbed the cardboard box with their Christmas decorations and carried it back out. Pulling out a roll of red and green lights, he thrust his arms through it and rested the roll on his shoulder as he grabbed the ladder again and stepped towards the shingles near the door. \n\nCarefully avoiding the remnants of her flowers in the cold earth, he lifted the ladder and leaned it against the house. Nate climbed slowly and carefully fed the lights through the small runners that led along and over the doorway. Climbing back down, he grabbed the ladder and moved it to the other side of the door, again being careful to avoid where Lizzie's plants awaited the spring.\n\nOne foot raised to step on the ladder, he paused. Trying again, he paused. Lizzie knew that he would want her to tell him that the lights were centered. Year after year, he strung them for her, and year after year she would watch from near the road at the edge of the boundary. Seeing him pause, she was suddenly at his side. \n\n\"Nate?\"\n\nShe watched him blink rapidly, smile and then grimace. He lifted his foot again, put it on the first step and leaned forward onto the ladder. \n\n\"Nate?\"\n\nHis leaning turned into an embrace as he clung to the wood and metal. Turning to his love, his lips trembled as he spoke. \"Lizzie... Lizzie, I...\"\n\nNate slipped to the cold ground. \n\nIt wasn't gradual. She didn't have to watch him die. He was gone as soon as he fell. A piece of Lizzie broke and she felt as if his passing was her own second death. She fell to her knees and mourned, trying to hold her love and raged at the cold that seeped into his body. She had no idea how long she knelt there. It could have been an hour or days. She waited for him, but he did not wake.\n\nLizzie took hold of her most precious gift, the watch Nate had given her, her heartbeat for the nearly 50 years that they had spent together, kissed it and lowered it to his chest. She then kissed his cheek and stood. She had promised to cross the property line after his death.\n\nAs she moved towards the gate that lay on the edge of their property, she felt herself become lighter, more than insubstantial. The gate was brighter than she remembered and it slowly swung open as she neared. As she approached, she remembered times from before her death. She remembered holidays with her family, she remembered long-forgotten dreams for a future she never had and she remembered Nate; the love of her life. \n\nStaring at the grass before she took the final step, she wiped her eyes and looked ahead at what lay next. About to move forward, Lizzie felt a tug on her hand. \n\nTurning, she stood before him. He looked at her with that lopsided smile and love in his eyes, looking exactly as he did the night he'd first entered the cottage. The hand holding hers also held the watch, both of their palms feeling its warmth. His other hand wrapped the watch's chain around their intertwined hands and they slowly turned back towards their home. ",
        "Nate and Lizzie walked towards the beautiful cottage with the shining Christmas lights and flowers in full bloom."
    ],
    "authorname": "norafares",
    "tags": [
        "1970s",
        "england",
        "ghost",
        "historical",
        "historical romance",
        "light",
        "paranormal",
        "spirit",
        "wine and old lace"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/sunflowers-in-bloom"
}