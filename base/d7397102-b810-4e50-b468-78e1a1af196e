{
    "title": "Army Brat Ch. 03",
    "pages": [
        "Note from Slick: Please read Army Brat Ch. 01 and 02 to get up to date. There is still not a whole lot of sex so this story is not for those of you who are looking for mostly sex. A few cliff-hangers occurred in Ch. 02 so let's see if any of them get resolved. All rights reserved. \n\n*\n\nDanny took his girlfriend's hand knowing that she was angry and shocked to see her mother. \"I'm not going to talk to her,\" Ellen said as calmly as she could manage. \n\n\"I'll see what she wants,\" Allan said walking towards Maria. He moved up to her and wanted to scream at her but not with the young boy there and in front of the others. \"What are you doing here?\" \n\n\"I was driving by and saw all the cars. I was hoping that Ellen was here.\" \n\n\"How many times do I have to tell you? She doesn't want to see you.\" \n\n\"She's so beautiful,\" Maria said looking around his body. \"She's a woman now.\" \n\n\"Now is not the time and place Maria,\" Allan said feeling his anger about to burst out. \n\n\"OK, I'll go. But I want some time alone with her.\" \n\n\"Only if she agrees to it and right now I don't think you want to get close to her.\" \n\n\"I'm staying at my Aunt Helen's house on Chestnut Street. Her number is in the book.\" \n\nAllan glanced down at the cute little boy. \"Is he yours?\" \n\nShe turned and walked towards the parking lot. \"Yes.\" \n\n*****\n\n\"Good, she's gone,\" Buttons said as she moved next to her best friend. \n\nEllen's anger still raged when her father walked back. \"I can't believe that she just showed up here.\" \n\n\"She said she was driving by and hoped that you were here. She is still insisting that she wants to talk to you.\" \n\n\"Never\u2026\u2026.never,\" Ellen repeated. She turned to Danny. \"Will you take me out of here?\" \n\n\"Sure,\" he answered looking at his mom. \"I'll be home a little later.\" \n\n\"Here's some money for food,\" Allan said handing him a twenty dollar bill.  \n\nJanet moved over and hugged Allan. \"Are you OK?\" \n\n\"No, I feel for Ellen but there is nothing I can do. Maria gave up all claims to see Ellen so legally she can't do anything.\" \n\nThey walked to their car holding hands next to Shirley. \n\n\"Did she say who the kid was?\" Grandma asked. \n\n\"She said that he was hers.\" \n\n\"No wedding ring.\" \n\n\"Nope.\"  \n\n*****\n\nJim put his small video camera in his bag and was zippering it up when the other two baseball scouts sat down in front of him. \"Hi guys.\" \n\nEd Johnson, a scout for the Pirates spoke first. \"So you've been holding Danny Upton back from us.\" \n\n\"Danny Upton?\" Jim repeated like he didn't know who he was. \n\n\"Don't bullshit us Jim,\" Mark Olsen, from the Cardinals said. \"The coach won't talk to us but we noticed you two have been talking pretty much the whole night.\" \n\n\"The coach and I were college roommates,\" Jim said. \"We talk about everything.\" \n\n\"Well if you aren't going to give us the history on this kid we are going to have to hound everyone until we get it.\" Mark said firmly. \n\n\"OK, but only if you keep the media out of it as long as you can.\" \n\n\"Media,\" Ed grinned. \"Why would the media care about some 18 year old high school kid with potential?\" \n\n\"Danny's last name is Upton.\" Jim said waiting for them to put Danny's name with his father's.  \n\n\"So.\" Mark said lifting his shoulders. \n\n\"Upton\u2026..Upton\u2026Up\u2026\u2026holy shit\u2026he's Josh Upton's boy.\" \n\n\"Oh FUCK!\" Mark cried. \"Why haven't we known about this kid?\" \n\nJim told them the whole story about Germany and moving back to the US. \"He's a great kid so I don't want the media to eat him up.\" \n\n\"It won't take them long to find out,\" Ed said. \"But I'll try to keep it to myself and the organization.\" \n\n\"Shit, since his dad played for the Cardinals it's going to be impossible to keep this a secret. Unless I don't tell anyone until the news breaks.\" \n\nJim shook both of their hands. \"I appreciate you guys keeping it quiet as long as you can.\" \n\n*****\n\nAllan and Janet kept their thoughts to themselves but Grandma was not one to hold back. \"She never told me about the boy. So do you think that he is your son?\" \n\n\"What\u2026.no. I mean she left three years ago and he doesn't look that old,\" Allan said wondering if his mother could be right. \n\n\"And he's a doctor,\" Shirley sighed. \"Remember dear there is a gestation period I believe that is around 9 months. So Jr. could be 2 years plus a few months.\" \n\n\"No\u2026.she would have told me,\" he said trying to convince himself. \n\n\"Maybe. Maybe not. But the kid has blonde hair and Maria's family all have dark hair.\" \n\nJanet remained quiet but knew that things were getting very complicated both for Ellen and Allan. They remained silent on the way back to his house as they thought of the possibilities. \n\n*****\n\nDanny carried the food onto the boat as Ellen closed the door behind them. He heard the click of the lock and turned. \"You're locking us in.\" \n\n\"No, I'm locking everyone else out,\" she said as she turned and pulled off her sweater. \n\n\"Uh\u2026we have food,\" he said as she released her jeans and zipper and pushed them down over her beautiful ass. \n\n\"It can wait,\" she said as she released her bra and pulled it from her firm and perky breasts. \n\nDanny had not seen her completely naked before and now stood upright holding the carton of fried rice. His eyes were big as the skimpy red thong moved down over her blonde bush and then down her tanned thighs. \"Oh my God.\" \n\nEllen didn't want to talk about seeing her mother and now wanted to get her mind off of her. She took the fried rice from his hands and put it on the shelf behind him. \n\n\"Do you want to\u2026.are we going to\u2026..?\" He asked. \n\n\"Yes, it's time,\" she whispered. Her fingers were surprisingly steady as they pulled off his baseball jersey. She removed his belt and fumbled opening his baseball pants. She saw his erection pushing out the front of them. \n\n\"Ellen\u2026I know you are upset. Maybe we should talk about it first,\" he said nervously after his pants and baseball socks slid off his feet. \n\n\"What are those?\" She asked looking at the white clinging shorts with thick hips and sides. \n\nHe laughed. \"Sliding shorts. The extra padding helps protect my legs and hips.\" He stopped laughing when she jerked them and his white briefs down over his hard-on. \n\n\"You won't be sliding in here,\" she giggled. After she threw them aside she moved back and they both stared at each other's nakedness. \"I'm ready.\" \n\n\"Ellen\u2026I don't have any\u2026protection.\" \n\nShe pulled out the rolling bed and moved onto her back. \"I should be safe right now. I'm due for my period tomorrow.\" \n\n\"Are you sure?\" He sat on the bed by her feet and caressed her ankle. \n\n\"Yes. It's OK. Come here.\" \n\nDanny moved into her outreached arms and crawled up onto her. He lowered his hard-on against her stomach and felt her hard nipples pressing up into his chest. \n\n\"I love you Danny,\" she whispered. \"Make me a woman\u2026your woman.\" Their lips met and parted as her hands moved up and down his strong back and down to his hips. \n\nDanny was unsure what to do. He knew the basic principles but actually doing it was something else. They kissed and after caressing her breasts for a minute or two he touched down over her navel and into her moist slit.  \n\n\"I'm wet for you,\" she whispered. \"Put it in\u2026.slowly.\" \n\nDanny was about to ask again if she was sure but it was obvious that she was. He was the one not sure mainly because he was not sure if he could satisfy her without cuming as soon as he entered her. Her fingers found his cock and directed it towards her virgin gate. \n\nDanny lowered his body but felt a lot of resistance. He pushed more but he didn't want to hurt her. After a few more tries he moved back a little. \"Ellen.\" \n\n\"It's ok. Push harder. Don't worry about me.\" As his body lowered she reached behind him and pulled. \n\n\"Ahhh.\" \n\nDanny heard her moan and started to pull away again but she wouldn't allow it. She pulled down again until they both felt something give. His crown pushed inside but it was damn tight. \n\n\"Give me more,\" she begged. \"I'm ok.\" \n\nGradually, very gradually, his hips lowered and lowered until four inches were buried. \n\n\"You're in,\" she whispered. \"We are one.\" \n\n\"Oh God,\" Danny moaned realizing that he was actually inside of a girl that he loved. \"It feels so\u2026\u2026..so\u2026I'm going to\u2026Oh GOD!\" \n\n\"Do it Danny. Cum inside of me,\" she giggled as she nibbled on his earlobe. She pulled again until two more inches disappeared. \n\n\"NOW\u2026\u2026..NOW!\" His hot juices blasted out deeply inside of her. \n\n\"I feel it,\" she said pulling the last inch inside. He was in all the way as his cannon emptied its shells. \"AHHH!\" \n\nDanny felt satisfied but still tried to keep fucking her to get her off. Her legs opened wider as her feet wrapped around his hips and waist. \n\nEllen expected him to get soft but it never really did. The initial pain was gone and now only pleasure filled her lower stomach. She could feel his cum lubricating the piston even more. \n\n\"Danny\u2026\u2026..fuck me\u2026..Danny.\" \n\nHe had never heard her curse before and knew that their relationship had become a lot more personal. His hands cupped her ass as he pushed in and out again and again. Three minutes went by until her fingernails dug into his ass. \n\n\"OHHHH!....DANNY\u2026\u2026.OHHHH\u2026\u2026.DANNY!\" \n\nDanny smiled because he wasn't worried about cuming too quickly. He kissed her opened lips and sucked on her tongue when she climaxed. \n\n\"OH YESSSSSS!\" \n\nEllen almost blacked out from the immense pleasure. She pulled him deep as possible and just held him there. A minute later she moved back. \"Do you want to finish again?\" \n\n\"No, right now I just want to hold the girl I love.\" \n\n\"The woman you love,\" she giggled. \n\n*****\n\nAllan took Janet home later and sat for a while talking about Maria's arrival. \n\nJanet hugged him close. \"As much as she says she hates her mother she probably still loves the one who raised her for 15 years.\" \n\n\"Maybe but the pain she caused will be hard to erase. Ellen is a forgiven type but it's been too soon.\" \n\nJanet wanted to keep out of it but she knew it was on his mind. \"What if the boy is yours?\" \n\n\"I don't know. I mean\u2026why would she leave if she was pregnant? Or if she found out after she left why didn't she say something?\" \n\nJanet patted his shoulder. \"I guess the only way to know is for you to talk with her.\" \n\n\"I know.\" \n\n*****\n\nAllan was sitting on the sofa later when he heard the garage door open and then Ellen's footsteps. He expected to see her upset and angry but instead she was smiling. \n\n\"Hi dad.\" She sat next to him and looked at the TV. \"What's on?\" \n\n\"Are you ok?\" \n\n\"Yes, I'm not going to let her mess up my life again. I'm happy for the first time in a while and I want to keep it that way.\" \n\nHe was proud of her and kissed her forehead. \"I love you baby.\" \n\n\"Me too daddy.\" \n\nThey watched the end of a sitcom they both enjoyed and then she stood to go to bed. He decided to skip the issue about the boy as she ran up the steps whistling. Danny was definitely a good thing. \n\nButtons didn't have to call her this time. She called Buttons. \n\n\"Whasss\u2026..up?\" Ellen asked while popping her gum. \n\n\"I was going to call,\" Buttons started. \"How are you doing?\" \n\n\"Good\u2026\u2026actually GREAT!\" \n\n\"OK what is going on?\" Buttons asked knowing her friend. \"Why are you so happy?\" \n\n\"Well..you see\u2026Danny and I were alone in the boat..and I wanted to forget seeing my mother and\u2026\u2026well\u2026\" \n\n\"OH MY GOD! YOU DID IT!\" \n\n\"Yes,\" she whispered. \"It was wonderful\u2026I mean not at first\u2026but the second time was..\" \n\n\"Second time!\" \n\n\"Yes Danny was too excited for the first time,\" she giggled. \"But he was up for the second one.\" \n\n\"Up for\u2026\" \n\n\"I didn't mean it like that,\" Ellen giggled. \"But yes\u2026up for.\" \n\n\"I need a boyfriend,\" Button's whined. \"I want to do it too.\" \n\n\"I'll ask Danny if any of the guys on the team want to take your cherry.\" \n\n\"Ellen!\" \n\n\"Just kidding.\" \n\n\"Did your father say anything about the little boy?\" \n\nEllen had not really thought about him. \"No\u2026why would he?\" \n\n\"Well if he is your mother's he would be your step brother,\" \n\n\"Oh God you're right.\" Ellen gasped. She had always wanted to have a brother or sister. \"And he looked so cute.\" \n\n\"I'm sorry I brought it up. I didn't want to mess up your lost my cherry celebration.\" \n\n\"Actually, in a strange way, I'm feeling good that maybe I have a little step brother.\" \n\n\"But you will have to talk to your mother to find out and to meet him.\" \n\n\"I know. I'm not ready for that yet.\" They said their goodbyes and then she called Danny. \n\n\"Hi, are you thinking about me?\" \n\n\"Yes, I'm always thinking about you,\" he answered. He lay on his bed tossing up a baseball. \"How do you feel? You know after tonight on the boat.\" \n\n\"After we made love.\" \n\n\"Yes.\" \n\n\"I feel like I want to be in your arms right now doing it again and again.\" \n\n\"Me too.\" They got quiet and then she mentioned the boy. \n\n\"Danny if the little boy is my mother's then I have a step brother.\" \n\nHe too had not even considered it. \"You're right. That's pretty cool.\" \n\n\"I know. I better go to sleep. I love you.\" \n\n\"I love you too Ellen.\" \n\n*****\n\nNothing was mentioned about the boy the next week. They all settled into their day to day lives. Ellen and Danny couldn't continue their advance pleasures because she did get her period but they both knew that Saturday would be the day. Ellen finished her breakfast and planned to pick Danny up at his house around noon to go to the boat. She pulled into the driveway and noticed a strange car. She rang the doorbell and when the door opened she saw a cute dark-haired girl. \n\n\"Can I help you?\" The girl asked. \n\n\"Uh yeah\u2026is..uh Danny here?\" \n\n\"Who is it?\" Danny's voice asked before he stuck his face out. \"Ellen. I uh forgot about\u2026..I mean I lost track of the time.\" He turned to the other girl. \"This is Lisa.\" \n\n\"Lisa this is Ellen.\" \n\n\"Are you a friend of Danny's?\" Lisa asked as she shook Ellen's hand tightly. \n\nShe glared at him. \"Uh yes\u2026I'm actually his girlfriend.\" Ellen squeezed Lisa's hand back as hard as she was giving her. \n\n\"Oh yeah\u2026I should have told you.\" He laughed nervously. \"Lisa and her dad stopped by this morning and we didn't know they were in town. We've been talking about old times and I guess I forgot.\" \n\nEllen wanted to kick him but held back. She stood on the porch. \"Well are we going to the boat?\" \n\nDanny looked at Lisa and then at Ellen. \"Mom just put out some lunch. Why don't we eat and figure out what we are all doing?\" \n\nEllen was upset but kept her cool. As they turned to walk into the house she tried to move next to Danny but Lisa quickly moved there first. \n\n\"Ellen, I'm glad you are here,\" Janet smiled. \"Come in and meet Captain Elliott.\" \n\nThe tall man stood. \"Please call me Tom.\" He shook her hand and looked at Danny. \n\nJanet jumped in. \"Ellen is Danny's girlfriend.\" \n\nEllen tried to move back by Danny but Lisa stood her ground. \n\n\"Danny has as good a taste as his father,\" Tom grinned. \"I'm glad to meet you Ellen.\" \n\n\"Well, let's eat,\" Janet said. They all moved to the table and Lisa again moved into the chair next to Danny. Ellen sat directly across from him and kicked his shin. \n\n\"Ouch,\" he said looking over at her. \n\n\"What's wrong?\" Janet asked. \n\n\"Uh..I hit my leg on the table leg,\" Danny lied. They quickly finished their sandwiches and afterwards Lisa offered to help with the dishes. \n\n\"I'll help too,\" Danny said but Ellen grabbed his hand and pulled him outside. \n\n\"What's wrong?\" He asked innocently. \n\n\"What's wrong? How about you forgot to tell her that you have a girlfriend and then don't even tell her father that I am your girlfriend? And, if she sits that close to you again I'm going to turn her chair over.\" \n\nDanny hugged her close. \"I love only you. She's just a friend.\" \n\nShe sighed and hugged him back. \"Are we going to the boat? Daddy is working today so we can be alone.\" \n\n\"God, I really want to but I can't leave while they are here.\" \n\n\"When are they leaving?\" \n\n\"I'm not sure.\" The door opened and Lisa came running out. \n\n\"Danny, your mother just invited me to stay here while my father goes back to Germany and finishes up. And then when he returns we both are going to stay here while we look for a house!\" \n\nDanny turned and saw the red face on Ellen. \"Uh..that's great.\" \n\n\"How long will you be staying here?\" Ellen asked as she clinched her fists. \n\n\"At least a month,\" Lisa smiled. \"And, I told my father that I want to live in the same school district so we can go to the same school.\" \n\n\"A month,\" Ellen repeated. \n\n\"Yes,\" Lisa grinned. \"I'll stay in the spare bedroom next to Danny's.\" She moved over and hugged him. \n\nEllen saw that Lisa had bigger breasts and nice long legs. She was not going to give up without a fight.  \"Well, that's great. We can all spend some time together to get to know each other. I know a few guys that would love to meet you.\" She pulled Danny from Lisa's grasp and led him away.  \n\nLisa watched as they walked out into the back yard. \n\n\"Ellen I didn't know.\" \n\n\"Danny, she thinks of you more than just a friend. Girls know. Where is her mother?\" \n\n\"I just found out that they are getting a divorce. The mother has another guy in Germany and is staying over there.\" \n\n\"Oh this is great. Not only are you going to be in the same house with a cute girl your mother will be living with a handsome man. I'm sure my father will be thrilled.\" \n\n\"WHO WANTS DESERT?\" Janet yelled from the kitchen door. \n\n\"OK but I'm sitting next to you.\" \n\nDanny realized that his somewhat simple life just got complicated. \"Definitely. You will sit next to me.\" \n\n*****\n\nAllan finished his morning shift and heard the page for him to come to the main lobby. After hopping on the elevator and dropping eight floors he moved out into the large lobby and saw Maria sitting on one of the sofas. He took a deep breath and walked her way. \n\n\"Hi Allan,\" she smiled as she stood up. She wanted to hug him but knew that he wouldn't go for it. She held out her hand but he didn't take it. \"Can we go somewhere to talk?\" \n\nAllan saw the small conference room off to the side was dark. \"We can go in here.\" After moving inside and turning on the light he sat across from her. Both were silent not sure what to say. \n\n\"I interviewed for a job here,\" she said afraid he would go off on her. \n\n\"Oh great, just what I need right now. Why are you moving back? If you just want to talk to Ellen you don't have to move back.\" \n\n\"I love this town and still have some family and friends. Besides it's where I want to raise my son.\" \n\n\"Who is the father?\" He asked bluntly. \n\n\"Someone you don't know,\" she answered. \"My son's name is Andy.\" \n\n\"After your father.\" \n\n\"Yes.\" \n\n\"Are you going to tell me why you left us? I mean I understand that we were not in love but how could any mother leave her child like you did?\" \n\nMaria felt the tears about to flow. She removed a tissue and patted the right cheek below her eye. \"I had to make a change and wanted to finish my medical degree. Since we were not in love I couldn't stay here.\" \n\n\"But you could have stayed in town even if it wasn't with me.\" \n\n\"I know. Maybe I should have but I didn't want to take Ellen away from her friends and I didn't want to stay in his house.\" \n\n\"This is bullshit,\" he said getting angry. \"All of this could have been worked out. Did you hate me so much that you had to get away from me?\" \n\n\"I've never hated you,\" she said starting to cry. \"You were my best friend and when I left I missed that so much.\" \n\n\"Well tell me why you left? You owe me that much.\" \n\nShe put her face in her hands. \"I discovered that I was pregnant. I couldn't stay here.\" \n\n\"You were pregnant and it was not from me. You were cheating on me.\" \n\n\"Once\u2026\u2026only once I swear. It was that trip I took to the Southern Medical Show. I didn't plan for it to happen. It just did.\" ",
        "\"Jesus,\" he sighed. \"You still could have stayed.\" \n\n\"I could have said the child was yours but I couldn't live that lie. If I would have stayed here everyone would have put the big Adultery \"A\" sign around my neck. I had to get away to decide\u2026to decide if I wanted to keep the baby.\" \n\n\"So it was all about you and the baby. Did you even consider what you would do to Ellen?\" \n\n\"No, I didn't. I fooled myself into thinking that she was fifteen and old enough to handle me leaving. It was a few months later that I realized what a mistake I had made.\" Tears continued to fall as she remembered the pain she had and the pain she had caused. \n\n\"You know you are bringing back the same pain. You are hurting her again Maria.\" \n\n\"I know but I need to explain everything.  And if she still hates me after that then that's ok. I deserve it and will leave her alone.\" \n\n\"She's not ready to speak to you. She just found out that you were moving back so give it a little time.\" For the first time Allan was feeling sorry for his ex-wife. His buzzer when off and he looked down to see the emergency code. \"I have to get back upstairs.\" \n\nHe stood and she stood. \"I'm glad you kept the baby.\" \n\n\"There really was no choice. I became a doctor to save lives not to kill a life.\" She rubbed her eyes and looked at him with sadness. \n\n\"Thank you for talking to me.\" \n\nShe moved closer but he moved away. \"I'll call you if and when Ellen wants to talk.\" He walked out of the door leaving her alone. \n\n*****\n\nAfter desert Danny stood. \"So what does everyone want to do?\" \n\nBefore Ellen could suggest the two of them going to the boat Lisa spoke. \"I have my glove so why don't we go outside and toss a baseball?\" \n\n\"Er\u2026I promised Ellen that we were going down by the river front,\" he said trying to keep her happy. \n\n\"You can do that later,\" Janet smiled. \"Go toss a ball and I'll call Allan to see if we can all go out tonight for dinner.\" \n\nEllen couldn't complain since it was Mrs. Brand's idea. She reluctantly walked out into the garage with Danny as Lisa ran upstairs to get her glove. \"She's going to live with you for a month.\" \n\n\"I didn't know so don't blame me,\" he said pulling down two baseball gloves from the shelf. \"It doesn't matter because I love you. How many times do I have to tell you?\" \n\n\"Oh I believe you but I'm not sure she does. She's the one you have to keep telling.\" \n\nHe handed her the glove. \"Here.\" \n\nShe tried to put it on her right hand and realized it didn't fit. \"I think I need another size.\" \n\nDanny laughed. \"It goes on your left hand.\" After getting it on she waved it in his face.  He laughed and ran from her out the front to the lawn. \"I'll throw you an easy one.\" \n\nEllen saw the ball coming and slapped at it causing it to fall at her feet. She picked it up and tried to throw it but it rolled out of her hand and went behind her. She heard him laughing and started laughing too until Lisa ran out with her glove. \"I was watching. You throw like a girl.\" \n\n\"I am a girl bitch,\" Ellen thought as she picked up the ball and threw it under hand to Danny. Danny threw the ball hard to Lisa who snagged it and fired it back to him. \n\n\"Bula-Bula!\" Lisa laughed. \n\n\"Bula-bula,\" Danny yelled as he threw it back. \n\n\"What is bula-bula?\" Ellen asked. \n\n\"It's what we say when we are together,\" Lisa giggled. \n\nThey threw it hard back and forth about six times before Ellen complained. \"Hey throw it to me!\" \n\nLisa grinned and aimed. Ellen tried to get the glove up but the ball was too fast. It smacked into her right eye and bounced away. All she saw were stars before she blacked out. \n\n\"MOM! We need your help!\"  Danny yelled. \n\n*****\n\nAllan had just walked out of the surgery when his cell went off. He saw Janet's caller ID. \"Hi.' \n\n\"Hi, I just wanted to tell you that your daughter was hit on her eye with a baseball a while ago. But except for a black eye she will be fine.\" \n\n\"Do you need me to come by and look at it?\" \n\n\"No, but I wanted to tell you that Captain Elliott and his daughter are in town. Do you still want to go out to dinner and meet them?\" \n\n\"Sure, let me get cleaned up and I'll swing by around 5PM.\" \n\n*****\n\n\"Ahhh,\" Ellen groaned when she opened her eyes and felt the pain. She was having problems seeing out of her swollen right eye. \"What happened?\" \n\n\"The ball hit you in the eye,\" Danny said. \"Put this ice pack on it.\" \n\nEllen did as he said and looked over him with her good eye at Lisa who stood back smiling. She knew that Lisa did it on purpose but decided not to pursue it. She pulled Danny down and pressed her lips into his. \n\n\"Thank you for helping me.\" \n\nDanny tried to pull back but Ellen held him close enough to slip her tongue between this tightly closed lips. His tongue flicked across hers until she finally let him go. He turned to look at Lisa but she was gone. \n\n\"When are we going to be alone?\" She whispered. \n\n\"I\u2026uh\u2026don't know,\" he answered. \"It's kind of messed up right now with Lisa and her dad here. Maybe later tonight.\" \n\nEllen left an hour later to go home and get dressed for dinner. Danny helped carry in Lisa's bags and sat on her bed as she unpacked. \n\n\"This will be so cool being together like this,\" Lisa grinned. She opened her large suitcase and pulled out a stack of panties. As she carried them to the dresser she dropped a pair of black lace boy shorts by his feet. \n\n\"Oops. Would you hand me those?\" \n\nDanny stared at the sexy undies before picking them up. He blushed and put them on the pile of other silky sexy panties. \"So are you still going out with Ryan?\" \n\n\"Na, Ryan was just a friend. I'm free as a bird,\" she smiled. \n\nDanny watched her take out a pile of bras but this time she didn't drop any. As she leaned over to put them in the bottom draw her shirt slid up in the back and he saw the strap of her pink thong. \"I uh..better go and get dressed for dinner.\" \n\nLisa moved to the door and closed it. \"You know we are going to share a bathroom so we might as well get used to seeing each other in our underwear. She pulled off her shirt and stood shamelessly in her sheer bra. \n\n\"Uh\u2026.we better not,\" he said feeling light headed. Her breasts were bigger than he had last seen them. \n\n\"It's not a big deal. You saw my boobs at your birthday party\u2026remember?\" Before he could answer she reached behind her with one hand and released the clasp. Seconds later the bra lay on the floor by her feet. \n\n\"Lisa\u2026..we can't\u2026\" Danny stumbled for words seeing her large and pointy pink nipples pushing out at him. \n\n\"You're the only one who has ever touched them Danny.\" She moved up to him and took his trembling hand. \"They are yours to touch anytime you want.\" \n\nDanny watched his hand as she guided it up in front of her right titty. As she pulled it forward he quickly jerked it away. \n\n\"Lisa, I'm in love with Ellen. I'll always want to be your friend but that's it.\" \n\nLisa moved back and covered her breasts. \"I thought that we\u2026you know\u2026had something more than just friendship. That night at your party when we kissed and you touched me.\" \n\n\"It was a special night for me. I'll always remember it but I've fallen in love with Ellen. I need for you to understand that because if you don't it will difficult for us to remain as friends.\" \n\n\"I've always loved you Danny,\" she said feeling the need to cry. \n\n\"I've loved you too but like a sister,\" he said moving over to her. When she opened her arms he hugged her soft naked breasts into his body. \"But that's it.\" \n\nLisa pulled him closer and moved her lips near his neck. She felt him getting hard and reached between them to grab onto his hard-on. \"You want me too Danny. I want you to be the first.\" It was the first time she had touched it. \n\n\"Ohhh\u2026don't,\" he said pushed her back. His fingers pried hers from his bulge before he turned to walk out. \"I know that you hit Ellen on purpose so don't ever do something like that again.\" \n\n*****\n\n\"Oh my,\" Allan said when he saw his daughter's black eye. \"A baseball did that?\" \n\n\"Yeah that bitch hit me,\" Ellen said as she moved into the hall bathroom to look at her face. \"I think she is after Danny.\" \n\n\"I don't think she has much of a chance,\" he grinned. \"Let me see it.\" \n\nEllen leaned back against the sink as he examined her injury. \"It will take about a week to heal. I don't see any damage. How is your vision? \n\n\"Good but there is something else. Lisa is moving into Danny's house for about a month and in a few weeks her father is moving in as well until they find a house.\" \n\n\"Just her father?\" \n\n\"Her parents are getting a divorce and the mother is staying in Germany.\" \n\n\"I'm not sure if I like that.\" He said thinking of Janet and the man living together. \n\n\"We're in the same boat,\" she said. \"I better get some makeup on my eye before we go out.\" \n\nAllan didn't say anything about his conversation with Maria because he wanted to think about it for a few days. \n\n*****\n\nJanet carried the towels into the hall bathroom next to the bedroom that Tom was staying in and left them on the sink. When she turned to leave his bedroom door opened and he walked out with only a towel around his waist. \"Oh\u2026sorry\u2026.I uh..\" she glanced at the shape of his penis pushing out the front of the towel. \"I mean\u2026I left some extra\u2026towels on..the\u2026sink.\" \n\nTom could see that she was embarrassed. \"Sorry I didn't pack my robe.\" \n\n\"I have one of Josh's. I'll get it for you.\" She hurried by him and into her bedroom. A minute later she returned and saw the bathroom door cracked open. \"I have your robe!\" \n\nTom had thought he closed the door and had removed the towel when he heard her voice. He turned to push the door closed when it opened. He quickly turned showing his hard buttocks. Janet stood there in shock as she saw his lean muscular backside.  \n\n\"I thought the door was closed.\" He opened the shower door and walked in while she walked backwards into the hall and closed the door. \n\nTom grinned as he moved into the shower because he had always liked Janet and when his wife left him he thought about the possibility of hooking up with her. Now that they were going to live in the same house he thought that maybe he would see if she would be interested. \n\n*****\n\n\"Does it still look bad?\" Ellen asked her dad after they got out of the car in Danny's driveway. \n\n\"It's not as swollen but it still is dark,\" Allan said feeling bad for his daughter. They moved to the door and rang the bell. Again Lisa answered it. \n\n\"Oh hi you must be Ellen's dad. I'm Lisa.\" She held out her hand. \n\n\"Glad to meet you,\" Allan said wondering if this cute girl could have hurt his daughter on purpose. They all moved inside and he stopped to see Janet sitting next to a tall man on the sofa. \n\n\"Allan, I want you to meet Tom. Tom this is Allan.\" Janet smiled. \n\n\"Hello,\" the two men said at the same time as they shook hands. Allan moved to the chair while Ellen and Lisa moved into the kitchen. \n\n\"I'm sorry about before,\" Lisa started. \"How is the eye?\" \n\n\"I'll live,\" Ellen said not smiling. \"I'll be ready next time.\" \n\n\"I've had a few black eyes from softballs,\" Lisa bragged. \"I even broke my ankle once during a game.\" \n\nEllen was happy that they were alone. \"There is something you and I need to discuss.\" \n\nLisa sat down. \"Danny and I have already talked. He said that he loves you and I can respect that.\" \n\nEllen was surprised. She sat across from her. \"I know you two have been friends for a long time and I don't want that to stop. He told me how you helped him after his dad died.\" \n\n\"It was a bad time for him. He looks happy now being here. I'm sure you have a lot to do with that.\" \n\n\"Wow,\" Ellen thought. \"The girl isn't so bad after all.\"  \n\n\"Hey how are my favorite girls?\" Danny asked. He had been listening to the conversation in the hallway. \n\n\"Actually good,\" Ellen smiled. She was happy when he moved to her and kissed her lips. \n\n\"How is the eye?\" He looked at it closely. \n\n\"Not as swollen.\" She grabbed his hand and stood. \"Let's get the old people and go to dinner.\" \n\n*****\n\nDinner was at the same river front restaurant which had become their favorite. They sat at a large round table so Danny had Ellen on one side and Lisa on the other. Across from them Janet sat between the two men. The conversation was mostly about the town and the school and afterwards the young ones took a walk on the boardwalk. \n\n\"Let's show Lisa your boat,\" Danny said. \n\nEllen wished that they were going to the boat alone but was happy that Lisa seemed to be accepting her role as just a good friend. They ran down the boat ramp and stood behind the boat. \n\n\"Nice you must be loaded,\" Lisa said. \n\n\"Not really,\" Ellen replied. \"It was my grandfather's boat and he gave it to my father.\" \n\n\"I'll get it open,\" Danny said remembering where the key was kept. He climbed up on the ship and as he was unlocking the door heard Lisa scream. \n\n\"STOP! WHAT ARE YOU DOING?\" \n\nDanny heard a big splash and turned to see Lisa in the water next to the dock. \"LISA!\" He didn't even think before he dove over the side. \n\nEllen stood in shock because the girl had turned and smiled at her before she yelled. After she jumped into the water she realized that she had been had. \"Danny I didn't push her.\" \n\nDanny held onto Lisa as he swam back to the small steps leading up out of the water. \n\n\"She pushed me in Danny,\" Lisa whispered. \n\nDanny held onto the steps as Lisa in her dripping white dress climbed out. His eyes moved from her nicely formed wet butt up to the dock at Ellen's face. \"Why did you do that?\" \n\n\"Danny I didn't do it,\" she said firmly. \"She's lying.\" \n\nLisa started crying as she waited for him to climb out next to her. \"I'm cold Danny.\" As he curled his arms around her and pulled her into him she looked over his shoulder and smiled at Ellen. \n\n\"We need to get you home,\" he said before reaching down and picking her up. He didn't even look back at Ellen or say anything as they walked away. \n\n\"Danny, she's lying.\" Ellen said angrily afraid that he actually believed that she would do something like Lisa was claiming. \n\nTom, Janet and Allan were outside on the boardwalk leaning against the rail when they saw Danny carrying a wet Lisa up to them. \"OH GOD WHAT HAPPENED?\" Janet asked. \n\n\"She fell into the water,\" Danny said. He sat her down and Lisa ran into her father's arms. \n\n\"Ellen pushed me in daddy,\" she sobbed. \n\n\"I did not,\" Ellen said as she ran up to them. \"She jumped in to make it look like I did it.\" \n\n\"Ellen,\" Allan said. \"Tell me the truth. Did you push Lisa in?' \n\n\"No daddy I swear. I would never do something like that.\" She reached for Danny's hand but he moved away. \"Danny, you don't believe her do you?\" \n\n\"I don't know,\" he said looking at his mom for help. \n\nJanet took Lisa's hand. \"First of all let's get you two back to the house to get some dry clothes on.\" \n\n\"We should come with you,\" Allan said wanting to get the matter cleared up. But Tom moved between Janet and him. \n\n\"I think it's best if you and your daughter do not come with us.\" \n\nAllan bit his lip to keep from arguing with this man. \n\nEllen stood next to her father as they watched them leave. \"I think we should go home,\" he said. \n\n\"You believe me right daddy?\" She said as they walked behind the others. \n\n\"Yes baby. I do.\" They met in the parking lot by the two cars. After Lisa and Danny moved into the car with Tom, Janet walked over to Ellen and Allan. \n\n\"Are you coming over to the house? Maybe we can all talk this through?\" \n\nAllan looked at Lisa sitting in the backseat next to Danny. \"I believe my daughter Janet. I hope that you do too.\" He looked into her eyes but she turned away. \n\n\"I'll call you later,\" Janet said as she climbed into the passenger seat next to Tom. \n\nAs they drove away Ellen saw Lisa's head fall over onto Danny's shoulder. \n\n*****\n\nIt was later that night as Ellen and her father watched the news that the phone rang. She jumped up and ran over to answer it. \n\n\"Danny?\" \n\n\"It's me,\" Buttons said. \"What's up?\" \n\n\"Can you spend the night with me? I've had a really bad day.\" \n\n\"Sure I'll be right over.\" \n\nTen minutes later the smaller girl walked in wearing her pajamas. \"Hi Dr. B.\" \n\n\"Hi Buttons. I'm glad you came over.\" \n\n\"Let's go upstairs,\" Ellen said. \n\nAfter Ellen told Buttons about Lisa Buttons was fired up. \"I'll really push her into the water. I might be short but I'll kick her ass.\" \n\n\"It's what she wants,\" Ellen said. \"She found a way to get between Danny and me and now is alone with him. He hasn't even called me.\" \n\n\"He's known her since they were eight so he is mixed up. He loves you but doesn't want to lose her as his friend.\" \n\n\"You know even if I did push her in how about the fact that she hit me in the eye with a baseball on purpose? Why wasn't he angry with her about that?\" \n\n\"You're right,\" Button's said sitting on the bed next to her. \"Maybe Danny isn't as perfect as we thought.\" \n\n*****\n\nDanny held Lisa on the small sofa in their basement. They had showered and changed into sweat pants and tee shirts before they went downstairs. \"Are you feeling better?\" \n\n\"Not really,\" she whispered rubbing her braless breast against his arm. \"I'm so happy that you are here with me.\" \n\nDanny's mind was going in circles. He had heard Lisa cry out and then heard the splash. Lisa had always been honest with him so why would she lie about something like this.  But at the same time he thought he knew Ellen and never would have thought that she could push anyone into the river.  \n\n\"She's not for you Danny. You really don't know her that well. It's only been a few weeks.\" Her hand dropped to the top of his thigh and started massaging it. \n\nHer breast against his arm and the memory of her in the damp dress was causing a serious stirring in his loins. His body was taking over while his mind bounced around. \"Lisa\u2026we shouldn't..\" \n\nLisa moved her fingers upward until she touched the hardness under the cotton covering. Again she curled her fingers around him but this time began to stroke him. \"You want me Danny. You are so hard.\" \n\n\"Lisa\u2026stop,\" he said grabbing her wrist and trying to pull her hand away.  After she let go he moved away. \"I told you that I love Ellen.\" \n\nDanny moved upstairs and walked into the quiet house. He heard the TV on in the den and walked in. He suddenly froze when he saw his mother and Tom standing in the middle of the room hugging. \"Mom.\" \n\nJanet pulled away and looked back at her son. \"Danny\u2026we were..we were\u2026\" \n\n\"Do what you want,\" he said before turning and running up the stairs. His life suddenly went from bad to worse. \n\n\"Shit he thinks that we were..\" Janet said as she turned away from Tom. \n\n\"Weren't we?\" Tom asked. After all they had been hugging for over a minute and he thought that she felt his hardness. \n\n\"No. Not that,\" she gasped. \"I was crying and you were comforting me.\" \n\n\"Janet I care a lot for you,\" Tom whispered. \n\n\"I can't do this,\" she said as she too moved up the stairs. \n\n*****\n\n\"It's him,\" Buttons said to Ellen after she picked up the mobile phone. \"Do you want to talk to him?\" \n\n\"Yes.\" Ellen took the phone. \"Are you finished believing her?\" \n\n\"Ellen, I'm sorry I should have stayed with you. I understand now that you were upset about the baseball.\" \n\n\"Oh my god! You still believe her don't you? I'm going to say this for the last time. I DIDN'T PUSH HER INTO THE RIVER!\" \n\nShe closed the phone and handed it to Buttons. \"You're right. He's not perfect.\" \n\nHe called five more times but they didn't answer it.  \n\n*****\n\nAfter church on Sunday Danny drove by Ellen's house to see if she was there but no one answered the door. Fifteen minutes later he ran down the boat ramp and found that the ELLEN MARIA was gone. \"Shit.\" ",
        "As he walked back towards the restaurant he noticed the camera on the pole and quickly ran to the boat slip rental office. \n\n*****\n\n\"Are you alright?\" Tom asked his daughter as they sat on the patio drinking coffee. \n\n\"No, Danny is very upset and I think it's all because of me. Things have changed since Germany.\" \n\n\"Things always change and sometimes there is nothing we can do about them. We both were hurt when your mother left us so we have to stay together and help each other get through all of this.\" He hugged her as they watched two birds chasing each other around a tall bird house by the back fence. \n\nJanet had stayed away from Tom since last night and had tried to call Allan but she never got an answer. She was worried about Danny who was missing but when she heard him coming in the door she stood to meet him. \"Did you see Ellen?\" \n\n\"No, they were not at home so I went to the boat and it is missing. \"They must have taken it out.\" He looked out onto the patio and saw Tom and Lisa. \"I have to talk to Lisa.\" \n\nLisa turned when the door opened and when she saw Danny she stood and smiled. \"Good morning.\" \n\n\"Can I talk to you alone for a few minutes?\" Danny asked. \n\n\"Sure,\" she said looking worried. \"Is everything OK?\" \n\n\"Not really,\" he answered. \"Right now everything is messed up.\" \n\nHe held open the door and waited for her to walk by him. They moved into the kitchen and stopped. \n\n\"Let's go down to the basement.\" He said. After moving downstairs they sat on the sofa like they were last night. \n\nHe turned before she could speak. \"Why did you do it?\" \n\n\"Do it? I don't understand,\" she said looking down. \n\n\"You've always been my best friend and have always cared for me. Why did you jump into the river and blame Ellen?\" \n\n\"Danny I didn't. She pushed me and\u2026..\" \n\n\"I saw the video of what happened,\" he said quickly. \"The boat slip office records everything that goes on.\" \n\nLisa gulped and sighed. \"I guess I'm jealous of you being with her. It's always been us and no one else. I didn't know what else to do. I'm so sorry because I know that this has upset you.\" \n\n\"Upset me? Jesus Lisa I pretty much told my girlfriend that she was a liar. She won't even talk to me!\" \n\nLisa tried to hug him but he pushed her away. \"Danny\u2026what can I do?\" \n\n\"First you can tell the truth,\" he said firmly. \"But even then I don't think anyone can do anything to get Ellen to forgive me.\" \n\n\"I will. I'll tell everyone that I jumped and blamed her,\" Lisa sobbed. \"Please don't hate me.\" \n\nDanny stood and walked up the stairs. \"I'll never hate you. You saved my life.\" \n\nHe moved upstairs and tied to call Ellen again but she didn't answer. He called Button's house but her mother said she went out on the boat with Ellen. He was tossing the ball up when his mother came in. \n\n\"Lisa told us what really happened. It's not your fault Danny. I wasn't sure who was telling the truth either.\" She sat on the bed. \"So you actually saw Lisa jump in on the video?\" \n\n\"No, the boat slip office was closed. I lied to Lisa to see if she was actually telling the truth. Mom, I really messed up with Ellen. She hung up on me last night and won't answer my calls.\" His eyes were red and getting wet. \n\n\"You can't turn love on and off that fast,\" Janet whispered. \"It might take some time and possibly some flowers but I think she will come around. I think I have some damage control to take care of with Allan too.\" \n\n*****\n\nButtons picked up Ellen's cell phone after it buzzed again. \"It's him again. That makes about fifteen calls this morning.\" \n\n\"I know,\" Ellen said lying back on the seat under the hot sun. \n\n\"You need to talk to him,\" Buttons said. \"Maybe he realizes that you were telling the truth.\" \n\n\"If he was that easily fooled to believe that I would lie to him then\u2026then\u2026maybe he doesn't love me.\" \n\n\"We are heading into the dock,\" Allan said from the bridge. \"Get ready to tie up.\" \n\nAs the boat turned the corner they saw Danny standing by the empty boat slip holding a large bunch of red roses. \"Oh god,\" Ellen said. \"What is he doing?\" \n\n\"Well unless those roses are for me I would say that he is apologizing.\" Buttons giggled. \n\n\"Dad, what should I do?\" Ellen asked as the dock got nearer. \n\n\"If I were you I'd really milk this. Make him sweat some.\" Allan grinned as he saw Janet standing about ten feet behind her son. \"I think I will do the same.\" \n\nThey tied up the boat without even looking at him. Danny helped Buttons out but when he held out his hand for Ellen she pushed it away and climbed out on her own. \n\n\"These are for you,\" Danny said nervously handing the flowers out. \n\n\"Give them to Lisa,\" Ellen said not looking at him. \"It seems you care more for her than you do me.\" \n\n\"I know that she lied,\" Danny said quickly. \"I'm sorry that..that..I didn't believe you.\" \n\nEllen looked at him for the first time. \"You said that you loved me Danny. When you love someone it includes trust. Where was the trust when you drove away with her last night and left me standing?\" \n\nAllan moved off the boat and took her hand. \"I think we need to go home.\" Buttons joined them as they walked by Janet who looked at Allan but he didn't look back. \n\nDanny tossed the roses in the river and sat down on top of one of the pilings. \"Well, I guess I really messed up.\" \n\nJanet sat next to him. \"You're a man son. Get used to it.\" \n\n*****\n\n\"You really don't have to leave,\" Janet said to Tom and Lisa as they stood in the driveway. \"Lisa is welcome to stay here like we planned.\" \n\n\"It's better if I stay somewhere else,\" Lisa whispered. \"I think I've messed up Danny's life enough.\"  She looked up at his window hoping that he would at least wave to her. \n\n\"You two will always be friends,\" Janet smiled as she hugged the girl. \"Danny just needs some time.\" \n\n\"A buddy of mine has a house in this district,\" Tom said. \"Lisa has met them and knows one of his daughters very well. I'm sure that Danny and she will get back together as friends.\" \n\nJanet hugged Tom and watched as they entered their car. As the car started moving back the front door slammed open and Danny came running out. He dashed to Lisa's door and waited until she opened her window. \n\n\"Bula-bula,\" Danny grinned. \n\nLisa's tears turned to a smile. \"Bula-bula Danny.\" \n\nIt was all they said but both knew that it was enough to know that they would be close friends again but not as close as Lisa wanted. \n\n***** \n\n\"Don't answer it,\" Ellen told Buttons. The phone had been buzzing every ten minutes. \n\n\"Don't you think he has suffered enough?\" \n\n\"No.\" She painted her toenails as they watched One Tree Hill. \n\n\"I saw Jimmy Thompson this morning at Church,\" Buttons smiled. \"He asked me if I was dating anyone.\" \n\n\"Really?\" Ellen asked. \"I think that Danny and he have become pretty good friends since he conked him in the head with a baseball. \n\nThe phone rang again but his time Buttons answered it. \"Hey Danny can you fix me up with Jimmy Thompson?\" \n\n\"What?\" Danny asked. \"Jimmy..sure..can I speak to Ellen?\" \n\n\"No, but if you get me a date with Jimmy I will talk to her in your favor.\" \n\n\"I'll call him right now,\" Danny said before hanging up. \n\n\"I can't believe that you just asked him to do that,\" Ellen said putting the cap back on the toe nail polish. \n\n\"Hey why not? I'm tired of being the only virgin in the senior class. I used to have you with me but no\u2026you had to go and fall in love.\" \n\n\"I hope Jimmy likes your buttons,\" Ellen teased. \n\n\"Hey they are not just buttons anymore\u2026see!\" She flopped up her shirt and exposed her tiny bumps. \n\n\"Wait! Turn sideways I think I can actually see a\u2026rise\u2026yes I can see it!\" \n\n\"Really?\" Buttons asked before running to the mirror behind Ellen's door. \"You're right!\" \n\n*****\n\nDanny had the first season game after school the next night and had his gear when he drove into the school parking lot. As he pulled into a space he saw Ellen getting out of her car. Quickly he parked and ran towards her. \n\n\"ELLEN WAIT UP!\" He almost made it to her when a man with a camera on his shoulder jumped out of a van. He stopped in his tracks when a woman jumped out with a microphone. \n\n\"Are you Danny Upton? Son of Josh Upton?\" \n\nDanny looked over their heads at Ellen who turned but then moved towards the school. \"ELLEN WAIT!\" \n\n\"So are you Danny Upton son of Josh Upton?\" \n\n\"Yes, now please move aside,\" he said but suddenly another van stopped in front of him and two more news people jumped out. \n\n\"Danny Upton,\" the man with the other microphone said. \"Do you hate the Army for killing your father?\" \n\nEllen was walking slowly and peeking back at the news vans but stopped when she heard the question. She quickly turned and ran back to the crowd. Other kids were standing around watching. She pushed the news woman aside and reached in and grabbed Danny's wrist. \"Come with me.\" \n\nDanny held onto his book bag and equipment bag and hustled to keep up with Ellen. They turned and saw the news crews running after them. \"Does this mean you have forgiven me?\" \n\n\"No, but if I do I want you to still be around.\" They ran into the first door and saw the coach heading their way. \n\n\"I'll take care of them,\" the coach growled. \n\n*****\n\nCoach Wright stood erect in front of the now three cameras. \"I'm not answering any questions but I will make a statement.\" \n\n\"Coach is Danny as good a ball player as his father was at the same age?\" the man with the microphone asked. \n\n\"Did you hear what I just said?\" Matt asked while shaking his head.  The man shut up and the coach resumed. \n\n\"Danny Upton is an eighteen year old kid that has gone through some terrible times. The news media needs to respect that and honor his father by leaving his son alone. The school grounds are, as of today, off limits for any news group and police will be around to make sure that it stays that way.  The baseball field is also part of the school property so it is expected that you will honor Danny's privacy.  He is a great kid so please show some respect for him and his family. That's all I have to say for now.\" He turned and walked away. \n\n\"COACH IS DANNY A GOOD BASEBALL PLAYER?\" The man yelled. A short girl walked by him and stepped on his foot really hard. \"OUCH!\" \n\n\"Sorry,\" Buttons said. \n\n*****\n\nDanny and Ellen stood at the door and peeked out while the coach made his speech. \"I miss you,\" he whispered. He tried to take her hand but she jerked it away. \n\nEllen wanted to turn and kiss him but held back. \"Is Lisa coming to school today?\" \n\n\"She's not living at my house anymore. They left last night.\" \n\n\"She left?\" \n\n\"She said that she was sorry for what she did.\" He looked into her baby blue eyes. \"I should have believed the girl I love.\" \n\n\"You should have,\" she repeated. They moved back as the coach walked in. \n\n\"If I know the news media they will soon be after your mother,\" Matt said to Danny. \"You might want to give her a warning.\" \n\n\"Thanks coach for everything,\" Danny smiled. \"One of them asked me if I hated the Army for what they did to my dad.\" \n\n\"Most of them are good people but some are scum,\" Matt said. \"Don't even give someone like that the time of day. Ignore the ass holes.\" He turned to Ellen. \"Sorry.\" \n\n\"He was an asshole,\" Ellen giggled. Buttons walked in and smiled. \n\n\"I stepped on his foot,\" she giggled. \n\nA bunch of students stood back watching. Jimmy Thompson walked out. \"Are you ok?\" Jimmy asked. \"We never knew who your father was.\" \n\n\"Yeah, I'm fine,\" Danny grinned. \"I just want to be one of the guys on the team. That's all.\" The bell rang and they all headed towards their home rooms. Danny stopped by Ellen's. \n\n\"Do you forgive me?\" \n\n\"Not yet Danny. You really hurt me.\" She turned and walked into the room. \n\n*****\n\nJanet looked for Allan when she arrived at work but found out he was already in surgery. She finished her morning checks and around 9:00AM got a call from the front desk.  \"Who wants to talk to me?\" \n\n\"Reporters and news people,\" the receptionist said. \"They are all over the place.\"\n\n\"Oh God,\" Janet said after hanging up. She sat down at the nurse's station. A minute later Allan walked by and saw her nervous look. \n\n\"Do you need a doctor? He joked. \n\n\"I'm not sure what I need?\" Janet answered. She saw a couple of other nurses nearby. \"Can I talk to you?\" \n\nThey moved down the hallway and into an empty room. \"First of all I'm sorry for not being supportive the other night at the restaurant.\" \n\n\"It's ok,\" Allan smiled. \"You were caught in the middle.\" \n\n\"Is Ellen ok?\" \n\n\"She's fine. She's just not going to make it easy on Danny for not believing her.\" \n\n\"That I completely understand,\" Janet said.  \"The receptionist just called and said the news is here to interview me. I guess the secret is out.\" \n\n\"I'll get security to run them off,\" Allan said as he took her hand and lifted it before kissing it. \"I'm here for both you and Danny.\" \n\n\"Thank you,\" she smiled before moving her lips to his. \n\n*****\n\nDanny sat next to Ellen at lunch time but she basically ignored him while she talked and laughed with Buttons and another girl. He purchased her some chocolate pudding which he knew she loved. \n\n\"It's going to take more than that,\" Ellen whispered as she slowly licked the spoon. \n\n\"Chocolate cake?\" He grinned. \n\nShe managed not to laugh. \"Hit me a home run tonight and I'll forgive you.\" \n\n\"OK,\" he smiled. \n\n*****\n\nThe team got to the field early to take batting practice and noticed the five police officers standing guard. \"What is that all about?\" Corey asked. \n\n\"It's because of me,\" Danny replied. \"My dad's name is Josh Upton.\" \n\nCorey tossed his gear bag on the bench. \"Hey man..I'm sorry you know..\" \n\n\"Thanks,\" Danny smiled. \"Let's not let all of it distract us from winning.\" \n\nOnce on the field Danny managed to forget everything and was happy again. They ran some laps and were taking infield practice when the other team showed up. Corey and Danny stood by second base when the team came into the gate. Both about shit their pants when they saw Todd walk into the dugout. \n\n\"Shit,\" Corey said. \"This team was our big competition last year and almost beat us in the title game. I heard that Todd was joining them but I didn't think it was true.\" \n\n\"He's just one player,\" Danny said watching Todd stretch by the dugout. He still remembered why Todd was kicked out of school. \n\nAs the Panthers ran off the field the Ravens ran on. Todd rushed out to speak to Danny. \"Hey man I hope that things are cool between us. It was all a misunderstanding.\" \n\nDanny smiled although he wanted to lay him out. \"Just stay away from her.\"  \n\n\"No problem,\" Todd grinned. He reached out his hand to shake Danny's hand but Danny turned and ran behind Corey. \n\nBy game time the stands were overflowing because the word had gotten out about Danny. Although there were no big cameras or microphones the news people sat in the stands with their small notebooks and flash cameras. \n\nButtons and Jimmy had talked before the game about going out so she was really rooting for the team as Jimmy warmed up to start the game. \n\n\"Would you sit still?\" Ellen asked her little friend. \n\n\"I can't. I think I'm in love.\" \n\n\"Right. Never gone on a date or even kissed him and you're in love.\" \n\n\"Yes.\" \n\nThe first batter was a lefty so Danny moved into the gap between first and second. He spotted Ellen behind their dugout and tried to get her attention but she was busy talking to her friends. \n\nAfter two balls the batter swung on an inside fastball and popped it up behind first base. Danny and the first baseman gave it a chase and as Danny's glove engulfed it he tumbled over into the stands. \n\nThey all watched to see if Danny was ok. A few seconds later he held up his glove with the ball still inside.  \"Out!\" the first base umpire yelled. \n\n\"Is he ok?\" Ellen asked Janet who had just sat next to her with her father on the other side. \n\n\"Yes,\" Janet answered. She was happy to see that Ellen still cared a lot for her son. \n\nJimmy settled in and struck out the next batter and then Todd came to the plate. \n\n\"Oh God it's him,\" Ellen whispered to Buttons. \n\n\"Hit him JIMMY!\" Buttons screamed. \n\n\"Shhh,\" Ellen whispered. \n\nBut Todd dug in the batters box and worked a 3 balls and 2 strike count. As Jimmy came in with a hard fast ball Todd smacked the ball hard down the third base line. \n\nDanny ran over to cover second as the left fielder caught the ball off of the wall. He was straddling the base when he caught the throw and pivoted around to tag Todd. \n\nTodd could have easily slid into the base and made it safe but he wanted to hit high on Danny's leg. His spikes smashed into the tender thigh as Danny whipped his glove around. Todd never touched the base. \n\n\"OUT!\" The umpire shouted. \n\nDanny fell back behind the base and saw the blood on his pants. He quickly jumped to his feet and thought about pounding Todd but remembered what his father told him to keep the fighting off the field. \n\nTodd flinched as Danny came at him and was ready to take a punch if it meant getting Danny kicked out of the game. But Danny handed him the ball and ran by him. \n\n\"That bastard,\" Ellen said softly noticing that Danny was limping some. \"He did it on purpose.\" \n\nThe baseball scouts were also scattered in the stands. Seven of them took notes as the game progressed. After the first two Panthers got on base Danny walked out towards home plate. \n\n\"We just need a hit Danny,\" Matt yelled from the third base coaching box. \n\nDanny took his position batting on the right side as the big left hander stared in at him. He took the first pitch for a strike and the second one for a ball. As the pitcher threw Danny waited and swung for the fences. \"STRIKE TWO!\" \n\nDanny moved out and glanced up at Ellen who smiled at him. Again he got ready but when the slow change up came in he was way out in front. \"STIKE THREE!\" \n\n\"Shit,\" Danny whispered as he walked with his head down back to the dugout. He knew that he should have been ready for that pitch. \n\nCorey walked but the next two batters stuck out leaving the bases loaded. \n\nDanny made two more great fielding plays to save Jimmy's shutout and in the third inning he again came to the plate. \"Relax,\" Matt yelled knowing that the kid was under a lot of pressure now that everyone knew who his father was. \n\nDanny was anxious on the first pitch and tapped a small grounder back to the pitcher. He made the first out of the inning. The next two batters didn't do any better and the zero to zero score went into the fifth inning. Danny stood in the on-deck circle as Coach Wright walked up to him. \n\n\"You're pressing too much,\" Matt whispered. \"It looks as if you are trying to hit every pitch out of the park. Just do your normal swing. We need some base runners.\" \n\nEllen too knew that he was pushing himself too hard and remembered what she had said about hitting a homerun. As Danny walked towards the plate she ran down behind the backstop. \"Danny. I forgive you. I love you.\" \n\nDanny stopped and smiled at her. A few fans and school kids clapped as he moved into the batters box. Again he took the first one for a strike but as the second one moved to the outside corner he went with the pitch and smacked it hard over the first baseman's head. \n\nThe first base umpire signaled it to be fair so Danny took off for second base. He saw the shortstop jump up to catch the high throw as he easily slid into the base. \n\n\"He's back,\" Allan grinned as he took Janet's hand. He heard what Ellen had yelled to Danny. \"I think we are all back. \n\nDanny led off of second keeping an eye on Todd since the batter was hitting from the right side. With no outs he knew that he couldn't take a chance stealing third. The pitcher was cautious pitching to Corey so he ended up walking him. Now with runners on first and second Danny took a big lead. ",
        "The next batter smacked a weak ground ball down the third base line. Danny hustled to make sure that the third baseman couldn't make it back and tag the base. As he rounded third and saw the ball going to second for a double play he heard the coach. \"GO DANNY!\" \n\nDanny put his head down and ran towards home. Todd saw Danny heading home and fired the ball to the plate. Danny slid and a cloud of dust flew high. The umpire's head emerged from the dust and then both hands flew outward. \"SAFE!\" \n\n\"YEAH!\" Ellen yelled. She saw Danny jump up and look to third where Corey was heading. The catcher fired the ball but it hit Corey on his arm and flew into left field. Corey jumped up and headed home. Again there was a close play and again the ump yelled \"SAFE!\". \n\nThe catcher didn't agree with the call and turned to complain to the umpire. As he did the batter who hit the weak grounder was sent home by Coach Wright. The Raven's pitcher was yelling but the fan noise was too loud. By the time the catcher realized it the third run had scored. \n\nDanny was mobbed by the players in the dugout as was Corey. They smacked each other on their helmets and both turned and pointed at Todd who had thrown his glove down on the ground in front of him. \n\n\"You got me my runs,\" Jimmy grinned. \"I'll do the rest.\" \n\nThe Raven's settled down but Jimmy kept them scoreless. It was the bottom of the sixth when Danny stepped up to the plate. He saw Todd call time out and run over to talk to the pitcher. As the pitcher took the mound Coach Wright called time out and called Danny to talk to him. \n\n\"It's possible that they are going to throw at you. I'm going to take you out.\" \n\n\"No please don't. I'll be ready.\" Danny grinned. \n\nHe moved into the batters box and smiled at the new pitcher who had taken over for the starter. He saw the pitchers arm coming forward and the ball as it came at his hip. He quickly jumped forward to allow the ball to go behind him. \n\nMatt called time and moved to the umpire. \"They are throwing at my player.\" \n\n\"Get back in your coaching box,\" the umpire warned. He signaled time was back in and moved behind the catcher. \n\nAgain the pitcher fired towards Danny but higher. Danny quickly jumped back and fell onto the ground. \n\nMatt moved forward. \"UMP?\" \n\nThe umpire moved in front of the plate and pointed to the pitcher.  \"This is a warning son.\"  \n\nDanny was ready now hoping that the pitcher took the umpire's warning. Sure enough he saw the fast ball heading down the middle of the plate. This time he just tried to make good contact. As soon as it hit his bat he knew that it was gone. \n\n\"Shit,\" Jim Reynolds said as he stood to see over the person who stood up quickly in front of him. The ball just seemed to keep rising and rising like it was never coming down. All of the fielders turned and watched as it cleared the left field fence and then the stadium wall. \n\nDanny had to slow down and watch it because he had never hit a baseball that far before. The adrenaline and the recent physical therapy sessions combined with perfect timing were the reasons for the first ball ever to be hit out of the stadium. The whole team stood between home plate and the dugout waiting for him. \n\nHe smiled up at his mom after touching the plate and blew her a kiss. After being smacked, bumped and hit by his teammates he made it safely back to the dugout. \n\nCoach Wright smiled at Danny who ran into the dugout and immediately rooted for Corey. \"I wish I had nine more just like him,\" he thought. \n\nAfter the final out with the score Panthers 4 and the Ravens 0 the teams lined up to shake hands. When Danny moved next to Todd they dropped their hands and walked by. Corey behind Danny did the same as did the rest of the team. They moved around the pitchers mound and the coach told them how proud he was of them. \n\nMatt put his arm around Danny as they walked to the dugout. \"What was going on with the first two outs?\" \n\nDanny looked down. \"Sorry coach. I uh\u2026was trying to hit a home run.\" \n\nMatt looked at Ellen who was waiting for Danny by the gate. \"To impress her?\" \n\n\"No, to get her to forgive me,\" Danny answered. He ran to the gate and when he saw Ellen open her arms and smile he knew that he was out of the dog house.  They kissed longer than they should as everyone watched and then she whispered. \"I love you so much.\" \n\nNeither of them saw Todd standing by his team bus fuming or Maria as she held her son. She moved back into the shadows as Allan and Janet walked by. \n\n\"There is your daddy Andy,\" she whispered to the boy. \n\n*****\n\nThe end of Chapter 3. \n\n*\n\nEnding note: Things went bad and then came back to good. A few of you wanted Buttons and Lisa to hook up but I wanted to give the girl a chance for love with Jimmy. Sorry I messed up the names in Chapter two. They have been corrected but I know it detracts from getting into the story. One more chapter unless the votes and feedback are such that I have to keep going. Love ya\u2026Slick. "
    ],
    "authorname": "Slickman",
    "tags": [
        "army"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/army-brat-ch-03"
}