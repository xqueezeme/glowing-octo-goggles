{
    "title": "A Sparrow Alights",
    "pages": [
        "Author Preamble: This story could go into the Romance category or the Erotic Couplings category equally well. It's probably a little more explicit than romance typically entails, so I've put it into Erotic Couplings. The story contains some \"consensual nonconsent\", but that's not the main focus of the story, which centers primarily on the path through which two people with shared fantasies connect with each other.\n\n*****\n\nI pretended to read my book, but I was far too distracted to make it look believable. The coffee shop was busier than I'd hoped, with a steady stream of people coming and going, and I looked up to observe each of them from my quiet spot in the corner. A man entered, a woman left, another arrived, and every time the small bell jingled over the door, my heart skipped a beat.\n\nI shifted on the couch. This was stupid. It was ridiculous to think that it could happen. I was just going to sit with a cup of coffee and go back to my hotel room. And I hated coffee.\n\nThe bell jingled again. A mature woman entered, perhaps in her early forties, petite with black hair. She wore a long stylish coat that was heavier than the weather required, and its hem danced around her shapely calves as she walked. She briefly scanned the room, her mouth set in resolution, her face anxious. Behind her she pulled a small overnight bag, its wheels clacking on the tile floor.\n\nI sat up straight on the couch.\n\nShe went to the counter and had a short discussion with the counter girl. As she settled up her order, then waited on its preparation, she again glanced quickly over her shoulder toward the sitting area.\n\nI put down my book, my heart beating faster.\n\nMaybe.\n\nWhen I glanced up again a moment later, she was distracted, accepting her drink from the counter girl. This gave me a long moment to study her from the back. She had an attractive figure under the coat, her hips slim but curvy beneath a narrow waist. Her hair was cut short, a pixie cut that exposed the back of her neck.\n\nPossibly.\n\nDrink in hand, she turned toward the sitting area. Almost immediately we made eye contact. A brief bolt of lightning surged between us, an innate and intuitive realization of each that the other was real. She looked down at the floor for a moment, then took a deep breath as if she was making a decision. I pretended to look back down to my book, every fiber of my being concentrating on my peripheral vision.\n\nDefinitely.\n\nFootsteps approached across the hardwood floor. There was an easy chair across the small table from my couch, firm and high in structure, and she chose it.\n\nShe set her cup of tea on the table, casually turning it. Per the custom, a name was scribbled across it. \n\nSparrow.\n\nI smiled.\n\nI reached to my own cup of coffee on the table, turning it so the name faced toward her. \n\nHunter.\n\nSitting six feet apart, the rest of the world went silent and motionless as we studied each other. We had never seen each other, did not know each other's names, and yet we knew each other intimately. She was just what she had told me, and what I had pieced together from her words over so many months - mature, attractive, graceful - and I hoped that I was what she had pictured. Her eyes met mine, her irises a dark Italian brown. She had a naturally wide-eyed look, the whites of her eyes as prominent as the irises, and the implied innocence both supported and refuted what I knew about her. Eternity elapsed in thirty seconds as we both pondered what would happen next.\n\nI swallowed hard, then my mouth curled into a shallow smile. \"Feel free to take your coat off,\" I said.\n\nShe smiled shakily back, her emotion seeming as sickly nervous as mine was. She looked at the two cups on the table for a moment, then back at me.\n\n\"Okay,\" she said, her voice barely above a whisper.\n\nShe stood and unbuckled the belt that held her coat closed, then slid it over her shoulders and off. Underneath, she was wearing a snug cashmere sweater of powder blue, tucked into a pleated black mini-skirt that was bold but classy. I nodded my approval. Her curves, not evident under the coat, were quite impressive as the sweater molded itself over them.\n\nShe sat back down and picked up her tea. Taking a sip, she looked outside at the overcast day. She and I were just strangers, two strangers sitting in a coffee shop.\n\nShe spread her knees slightly.\n\nBehind me, there was nothing but a bare corner. No one could see her. Surreptitiously checking for onlookers, her free hand grasped the mini skirt material, pulling it up ever so slightly.\n\nOh, my god. She was really going to do it. I could feel my cock beginning to swell.\n\nAnother drink, another glance, another slight pull of the material. It was now passing the point of modesty, and no one knew but me.\n\nWithout warning, her smile became more emboldened. Seeing that the coast was clear, her fingers quickly walked the fabric, gripping the hem. Up, up, up, and suddenly there was no more leg to be shown. She spread her knees wider.\n\nI had never seen that pussy before, but I knew it intimately. I knew the sparse and neatly trimmed thatch of jet black pubic hair. I knew the graceful prominence of the mons veneris, and the delights that lay below. In my mind and my words, I had touched it, tasted it, explored it, and ravaged it. And now, at long last, I had finally seen it.\n\nShe sat still for several long moments, offering it to me for review and inspection and enjoyment. I took full advantage, shifting a bit to rearrange my now rock-hard cock inside my jeans. She noticed and found humor in it.\n\nA man bought coffee and walked in our direction. Spooked by the footsteps behind her, she abruptly dropped her skirt, smoothing it back to respectability.\n\nI reached into my pocket and pulled out the key card to my hotel room. I set it between the cups, halfway between Hunter and Sparrow.\n\nNow a decent and law-abiding woman again, she folded her arms across her breasts, studying it. We both knew the situation; this was her final decision in the dance we had concocted. She could leave now, and we would both walk away into the night, content that our little coffee shop fantasy had come to life. We would be done, and we would both smile at the memory.\n\nIf she picked it up, she was committing herself to a much deeper experience. \n\nOur eyes met again. Her narrow eyebrows rose in question, and I nodded.\n\nShe picked up the key.\n\n****\n\nIt had started so innocently.\n\nWe had met in a chat room, just two people who wanted to discuss movies amid a sea of late-night chatter. After a few minutes of typing back and forth, I clicked the small box next to her name, curious to learn more. She was in Portland versus my Chicago, she was in her early forties, a bit younger than me, and she was female. That was all I knew, and for the purpose of discussing movies, it was all I needed to know.\n\nIt was supposed to be a one-time thing. That's the way it works, two anonymous ghosts alone on a winter night, haunting each other's computer screens for a couple of hours before drifting away. But we liked each other. We connected quickly, having similar tastes and standards, and we each understood the other's jokes and references. We even flirted a little. After a long discussion deep into the night, we agreed to meet again a week later, and then again a week after that. The discussions began meandering beyond movies. It became like meeting a friend for coffee. We even traded photos, and I was pleasantly surprised. She had nice eyes and a cute mouth, topped off by a stylish pixie cut that swept over her head like a peacock plume. She had a mildly golden-complexion and claimed a half-Italian, half-Korean background, though I had trouble seeing which half of her came from where.\n\nCommon folklore is that men and women can't be friends, that at some point sex inevitably enters the minds of one or both if the relationship moves beyond hello. As a general rule, I scoff at that theory, believing that we are more refined as a species. Sure, she and I flirted a bit, but it was friendly banter. We were just typing. We wouldn't go over the line.\n\nBut then we went over the line. \n\nWe were talking about some forgettable trashy movie it happened. It wasn't intentional, or maybe it was. Maybe it was happenstance, or maybe such things are destined to happen when a man and a woman like each other. Regardless of the reason, it happened.\n\nWe were typing back and forth.\n\nMe: It annoyed me that the woman stayed with the villain.\n\nHer: Why?\n\nMe: Are you kidding? He tied her over a bench and let his friends have sex with her. And then in the next scene she's going out to dinner with him. It's ridiculous.\n\nHer: Maybe, but not necessarily.\n\nMe: Not necessarily?\n\nHer: Maybe she liked it.\n\nMe: She liked being tied down and having sex forced on her by a bunch of henchmen?\n\nThere was a long pause before her text appeared on my screen. I wondered if I had crossed some feminist line.\n\nHer: Some women like it.\n\nI stared at the screen for a moment, pondering my response.\n\nMe: They like it?\n\nHer: Some woman like being taken. Being forced.\n\nMe: How common is this?\n\nHer: More common that you would think. It turns some women on.\n\nThis time it was my turn for a long pause. Don't do it, I told myself. Don't do it. Stop typing.\n\nI typed anyway.\n\nMe: Does it turn you on?\n\n****\n\nWe left the coffee shop, with me pulling her overnight bag. My hotel was only a block away, and the first half block passed in silence.\n\nShe bit her lip as we waited at a crosswalk, her eyes focused on the past. \"I can't believe I just did that.\"\n\nI couldn't stop a smile. \"Neither can I.\"\n\nShe shook her head slowly, looking into the street with a smile that was half disbelief, half pride. \"That's not who I am. I've never done anything like that in my life.\"\n\nThe light changed and we continued our walk. \"Isn't that the whole point of this?\"\n\nThis time, the smile crept onto her face. \"Apparently it is.\"\n\nI was nine inches taller than her, so she was forced to look up at me. \"I've got to tell you,\" she said. \"This is kind of scary to me. My knees are shaking.\"\n\n\"Mine, too.\" I waited several more strides before saying the words that I didn't want to say, but knew I should. \"It's not too late to call it off.\"\n\n\"Not in a million years.\"\n\nWith that, we both burst into laughter. This was the personality I knew from the chat room.\n\nWe entered the hotel, and I guided her onto the elevator, placing a hand gently at the small of her back. The touch tingled. I pressed the 9th floor button and we stood in an awkwardness that was thick even for an elevator. I wanted to kiss her, to pull her into my body and envelop her, but that's not why we were here. \n\nI remembered my duty.\n\n\"Did you pick a safe word?\" I asked.\n\n\"Yes. It's 'airplane'.\"\n\n\"Airplane?\"\n\n\"Yeah, as in 'take off'.\"\n\nI chuckled. \"Okay. You say 'airplane' and whatever we're doing stops immediately. Got it.\"\n\nShe smiled demurely, her eyes rising seductively to meet mine. \"I don't plan on using it. I trust you. But I want to be close to using it.\" She winked at me and smiled.\n\nI smiled back and eyed her up and down, watching from the corner of my eye as the elevator lights moved from floor to floor. What a strange world we lived in. We didn't know each other's names, and yet we knew each other intimately. We didn't recognize each other's faces in a coffee shop, and yet we trusted each other with our most deeply hidden secrets.\n\nWe walked down the hall to Room 955. Sparrow's key opened the lock. My heart was beating faster. Was this really going to happen? \n\nI took a deep breath and began to get into character. I gripped her upper arm gently, but with strength. \"You realize, my sparrow, that once you cross that threshold you belong to me, right?\"\n\nHer eyes flashed mischief. \"Not necessarily. I'm not easily conquered.\"\n\n\"We'll see about that.\"\n\nShe turned her foot shyly, looked at me for a moment, and suddenly stepped into our personal distance.\n\nIt was not a kiss of passion, or a kiss of raw lust, though both would have been justified. Rather, it was a kiss of sensuous understanding, the first chapter of a one-night promise to give each other the gift of a lifetime.\n\nWe stepped inside and the door pulled itself closed.\n\n****\n\nAnonymity is a strange thing. You can have secrets that you wouldn't tell your brother, your wife, your best friend. But if you chat with a stranger on the internet, neither of you knowing the other's face or name, you can share everything. There is no risk when a screen separates your identity from who you really are.\n\nHer: I fantasize about being forced.\n\nMe: Like rape?\n\nHer: No. Just forced. Or coerced.\n\nMe: What's the difference?\n\nHer: I have to feel safe. I'm not going to be hurt. But I can't escape, and I can't stop it. I'm fighting, frustrated, trying hard, but I have no chance.\n\nMe: Why do you think that turns you on?\n\nHer: I have no idea.\n\nMe: Do you fantasize about this?\n\nHer: All the time.\n\n****\n\nThe hotel room was very nice, a small suite with a king-sized bed and a separate sitting area. Outside, the city lights sparkled. Sparrow scanned it for a moment, then turned to face me. \n\n\"What now?\" she asked.\n\n\"Say 'airplane' if there's a problem. But otherwise, you're in for an ordeal tonight.\" I bolted toward her.\n\n\"No!\" She grinned as she backed away, trying to slap away my attacking hands, but I was much bigger and much stronger. Grabbing her wrists, I used my mass to push her backwards, guiding her toward the bed in a forceful dance. We were supposed to be adversaries, but we couldn't help but laugh. When the backs of her legs hit the bed, she fell backwards and we tumbled over each other. She somehow briefly managed to roll on top of me, but couldn't keep the advantage. After a flurry of movement, I inevitably turned the tables and gained the upper position. She fought feistily, though more to escape than to dominate, and the outcome was never in doubt. With each movement I gained a little control over her, used a little more leverage to pin her down.\n\nEventually I was on top of her, my arms trapping her wrists over her head. I forced my legs between her thighs and began slowly forcing them apart. Our faces were only inches apart, so I lowered my head until our foreheads touched, our eyes filling each other's world. \n\n\"I'm spreading you,\" I murmured. \"Can you stop me?\"\n\n'I'll fight for my honor,\" she said with mirthful aplomb.\n\nShe grunted with effort, her legs flailing as they were pushed apart. Keeping my weight on her, I leveraged my thighs to spread her wide, forcing my chest down onto her breasts. She bucked and struggled, and I let her exhaust her energy as she fought against both me and gravity. \"You can't deny me, little sparrow.\"\n\n\"Yes, I can. You can't take me!\"\n\nI shifted my hip a little, forcing my thigh onto her pubic mound. It wasn't enough pressure to hurt her, but it was forceful enough to make her know that she was falling under my control, that her most vulnerable of areas was at my mercy. \"Oh, god,\" she said. \"I'm in trouble, aren't I?\"\n\n\"Admit it. You belong to me.\"\n\n\"No! You'll have to force me.\" She emphasized the word 'force'.\n\nShifting a bit more, I pulled her wrists together over her head. With my left hand, I was strong enough to control both wrists, wrapping them up in my fingers. I now had a free right hand, and it roamed up her side, closing on her breast. I squeezed and explored the soft flesh, causing her buck even more. But with her legs forced apart, her pussy being mashed, and her wrists trapped, she had no leverage. \n\nI ground my thigh gently into her mound. \n\n\"I love this tit,\" I said, being intentionally coarse in my language. \"It'll be good to grip while I fuck you.\"\n\n\"You're too strong for me,\" she breathed. I could see her eyes bright and sparkling.\n\nMy free hand moved up to her hair. Grasping a handful at the back of her scalp, I gently but firmly pulled, forcing her head back.\n\n\"Are you offering me your throat, little sparrow?\"\n\n\"I have no choice, do I?\"\n\nI leaned in, kissing her vulnerable throat, then nibbling it. \n\n\"Ohhhhh, you've got me in trouble. But I'll ... I'll hold out.\" I could sense her resistance decreasing.\n\nI maintained my assault on her two most sensitive areas, the areas that a woman must protect at all costs. She twisted and squirmed occasionally as I hit a particularly erogenous area, but I held her fast. \n\nI wasn't hurting her, but I was fully controlling her and she couldn't escape. We both knew it, so it was just a matter of time. After a few minutes of being mercilessly ravished under me, she conceded.\n\n\"Stop,\" she pleaded. \"I surrender. I'll do anything.\"\n\n\"Anything?\"\n\n\"Anything.\"\n\nI raised my head to look her in the eyes. \"I want a slave girl to worship my cock.\"\n\nFor the briefest of moments, her mouth curled up into a smile. She swallowed hard. \"No.\"\n\n\"Then I'll take what I want. My free hand began moving down her body. Let's see what I can discover about you.\"\n\nHer eyes got wide as my fingers touched her thigh, then moved upward. I shifted my thigh off of her mound, but forced her legs apart even further. I slid up and suddenly I was palming her lightly furred mound, my fingers sinking underneath into the softest flesh imaginable.\n\nShe squealed and froze, her eyes locked onto a distant place. She allowed me to explore for a moment as emotions played across her face. As my fingers began to push inside her, she abruptly conceded. \"Okay, okay, I'll do it!\"\n\n\"You'll do what? Say it.\"\n\n\"I'll be your slave girl.\"\n\n\"And ...?\"\n\n\"And I'll worship your cock.\"\n\nI lifted my weight from her. \"That's a good girl,\" I said. Rising from the bed, I walked to a chair. It was nicely upholstered, with arms that curled around. I sat down. \"To the victor goes the spoils. Strip for me.\"\n\nShe rose from the bed as well, smoothing her clothing as she re-established her decorum. With only minor hesitation, she stepped before me. \"Completely?\"\n\n\"Completely.\"\n\nI could tell that she was thinking about something, that her mind had briefly flashed to a different place and time. She looked past me, out the window at the other high-rises nearby. Again, the hint of a smile appeared.\n\n\"Okay.\"\n\nShe raised one foot and removed a shoe, then the other. She was not tall to start with, but I was surprised at how much height she lost when she removed them. I hadn't noticed how tall her heels were, and how small she was atop them.\n\nNext to go was the powder blue sweater. It was nicely snug, so, it mussed her hair a bit as she pulled it up. Underneath, she wore a red satin bra with lace trim. The color surprised me a bit. She shook her head to get her hair back under control.\n\n\"Skirt next,\" I ordered. I had already seen her charms below the waist in the coffee shop, and I had just felt them as well, so I wanted to save her final surprise for last. \n\nNodding, she unhooked the skirt and shimmied out of it, her hips moving smoothly and fluidly with a dancer's grace. God, that was a great pussy. I delighted in the contrast of the pure black hair against her skin. I'd never been with a woman who had a golden-hued skin tone. It gave her an exotic look, mysterious in a way that made one want to explore.\n\n\"Now the bra?\" she asked.\n\nI nodded.\n\nReaching behind her, she unhooked it, then let it slide forward down her arms. \n\nShe had beautiful breasts. They weren't the perky tennis balls of a teenager, but were those of an adult woman, well rounded and slightly oversized on her small frame. Her areolas were dark brown, slightly irregular in shape in a way that made me want to trace my finger around them.\n\nI smiled, soaking in her nudity, the signalling of her complete submission and vulnerability as I sat fully clothed. She studied her body herself for a moment, running her hands over her breasts, her waist, her hips as she looked down upon her form. I watched her move, lithe and rhythmic, her hips tilting and her breasts showing supple resilience as her hands passed over them. ",
        "\"Show me how you'll service me,\" I ordered. \"Show me cowgirl. Show me how you ride a penis.\"\n\nPausing for just a moment to think, she dropped to her knees. Spreading them wide, she dropped her hips slightly, arched her back, and displayed her breasts to me as she worked her pussy atop an imaginary cock.\n\nMy very real cock responded strongly.\n\n\"Show me missionary. Open yourself up.\"\n\nShe brought her legs forward, then lay on her back. Pulling her legs up, she spread them and wrapped them around an imaginary lover, allowing me a perfect view of her dark-complexioned pussy. I licked my lips in anticipation at its puffy folds and peeking inner delicacies. I kept her in the pose for a moment while I studied.\n\n\"Show me doggy style. Let yourself get taken.\"\n\nFlipping over, she got on her hands and knees, offering her pussy to me from the rear. Another great view.\n\n\"Anal now. Give yourself fully.\"\n\nKeeping the same pose, she arched her back, pulling her stomach toward the carpet. The resulting arch pushed her buttocks open so I could see her tiny anal opening, dark and puckered. My nostrils flared. I was going to have fun with that particular taboo.\n\n\"Good girl. Now come and start your work.\"\n\nThis time it was her turn to lick her lips. On her knees, she closed the remaining few feet between us. Her eyes rose sensuously to meet mine, then she reached for the zipper of my jeans, nestling herself between my knees. She unbuckled my belt, opened my jeans button and zipper, and with a little help from me, freed my cock from its hiding place. It sprang up to meet her.\n\nShe broke character for a moment. \"I've been waiting a long time for this, Mister hunter\" she breathed.\n\n\"So have I, little sparrow.\"\n\nShe brought her mouth down onto me, and I ascended to heaven.\n\n**** \n\nI listened to her fantasy, and pondered my response. I opted for honesty.\n\nMe: I have a confession for you.\n\nHer: What is it?\n\nMe: You have to trust me on this.\n\nHer: I trust you.\n\nMe: I'm not a rapist. I swear. But our fantasies complement each other.\n\nHer: Tell me about it.\n\nI took a deep breath before typing again. Why was I doing this?\n\nMe: The thought of taking physical control of a woman, of pinning her down into a bed and having my way with her, is an immense turn-on for me. \n\nHer: Mhmm.\n\nMe. I can't believe I just typed that. Recognize that I would really never do something like that against her will. It's just a fantasy. I'm not a criminal or anything.\n\nHer: I believe you. Tell me more. What would you do to her in this fantasy of yours?\n\nMe: I'd like to get physical control of her, fondle her while she's struggling, feel her fighting to escape but unable to.\n\nHer: Would you bite her neck? I'd love it if a man bit my neck. Held me down and forced my head back.\n\nMe. Oh, yes. It would be a sign of dominance over her.\n\nHer: Would you force her legs apart?\n\nMe: Of course. And can I tell you a secret?\n\nHer: Please do.\n\nMe: The most exciting part would be reaching down between her legs, pushing my hand into her panties, and getting that first feel on her mound of venus.\n\nHer: Why does that turn you on?\n\nMe: Part of it is the pure domination of doing it, of course. But another part is the thrill of discovery. I don't know what she looks like down there. Is she furry? Shaved? Trimmed? Is her hair dense or sparse? Putting my hand down there is exposing one of her most personal secrets.\n\nHer: You're turning me on. That's what I want to happen to me. I want a man to overwhelm me with his strength and size. I want to be taken.\n\nMe: Have you ever done this?\n\nHer: No.\n\nMe: Me, neither.\n\n****\n\nHer mouth was tiny, soft and wet with saliva. She alternated taking me deep into her mouth with occasional pauses where she would simply hold me inside, stroking the underside of my shaft with her tongue. Her hands were on my thighs, gripping them as she worked. I was in a state of bliss.\n\nBut I couldn't let myself cum, not here, not now. That would not fit within my plans. I gently placed my palms on her cheekbones, pushing her off as she dutifully licked and sucked.\n\n\"I need to get more comfortable, my little sub. Get me ready.\" \n\nUnderstanding my order, she wiped her mouth with the back of her hand, then concentrated on removing my shoes and socks. It felt nice to expose them to the coolness of the room. Raising up, she pushed further into the space between my legs. Still on her knees, she was at chest level to me as I sat, and we shared a knowing smile as she unbuttoned my shirt. I moved forward to allow her to remove it, then stood as she lowered my pants and briefs to the floor. I helped her rise to her feet, both of us equally nude. We walked to the bed together. \n\n\"Lie face down.\" I spoke with the authority that a dom should use.\n\nShe did so, biting her lip in anticipation or anxiety, or both.\n\nI worked quickly, so I could at least get a glimpse of the scene I envisioned if she changed her mind partway through. Retrieving a pre-purchased item from the nightstand, I handcuffed her wrists together behind her back. \"Do you know what I'm doing?\" I asked quietly.\n\n\"You're handcuffing me.\"\n\n\"Can you escape?\"\n\nShe pulled on her wrists, then twisted them back and forth. \"I'm trapped.\"\n\n\"You have no chance of getting out of these until I let you out.\"\n\nShe pulled against the cuffs again as if to test my theory. I saw her throat move as she swallowed hard. \n\n\"Now we do your feet.\" Moving down, I attached two leather cuffs to her ankles, which were held separate by a bar approximately 18 inches long. When I was finished, her feet were held at about a shoulder width apart. I ran an appraising hand up each calf, and felt her shiver under my touch.\n\n\"And now for the finishing touch, to fully immobilize you under my control.\"\n\nPulling her ankles up by the bar between them, I forced her legs up behind her. With another short chain, I attached her ankle cuffs to her handcuffs. Now hogtied tightly, my little sub could scarcely move. \n\nI sat back, giving myself some distance on the king-sized bed. I watched her test her predicament, her arms flexing against her legs as she vainly sought any freedom of motion. Her smooth thigh muscles tensed and relaxed, tensed and relaxed, and the flesh on her round buttocks dimpled and rolled. She pulled and she squirmed, but she was helplessly and hopelessly trapped until such time that I should decide to free her.\n\nSuch a beautiful sight.\n\n****\n\nA week after our sexual conversation, we met again. Our purpose was ostensibly to have our normal weekly chat, we both knew that wasn't going to happen. The genie had leapt from the bottle and wasn't going back in. As the man in this situation, I didn't want to seem too aggressive, so I waited for her to mention it first. After the initial small talk, she did.\n\nHer: I really enjoyed our conversation last week.\n\nMe: Me, too. I really liked hearing your fantasy.\n\nHer: I didn't expect the conversation to go that way.\n\nMe: Confession here.\n\nHer: What is it?\n\nMe: I wouldn't mind if it did again.\n\nHer: Oh, good. I was hoping for that. I'm in an erotic mood tonight. What do you want to talk about?\n\nMe: Tell me more. We both like the ... I guess you'd call it the wrestling fantasy. Being physically dominated and controlled. What are your other fantasies?\n\nHer: I'm a little worried that you'll think I'm a deviant if I tell you more.\n\nMe: I'm hoping you're a deviant. Perversion is fun.\n\nHer: You crack me up. You really want to know?\n\nMe: I'm dying to know.\n\nHer: My other big fantasy is kind of related to the first one.\n\nMe: Oh, good. I liked the first one.\n\nHer: I think a lot about being tied up. Helpless. Being used sexually while I can't move or escape or even defend myself.\n\nMe: It's a variation on the wrestling theme. You're being controlled.\n\nHer: Yes. Only I want to be ironclad bound. Not just tied up a little, but bound in a way that I have no hope of escaping. Barely able to move. I want to be at the man's mercy, and he doesn't show me mercy.\n\nI couldn't stand it any more. I unzipped my jeans and let my cock out to relieve the pressure. It rose up and started reading the screen along with me.\n\nMe: Like a pillory or something? I love thinking about a woman in a pillory. Don't know why.\n\nHer: Maybe. But I mostly think about handcuffs or shackles or something.\n\nMe: How would you be tied?\n\nHer: Different ways. Sometimes in my mind I'm tied to all four corners of a bed. Stretched out. Sometimes I'm tied standing up, my arms lifted behind me in a way that forces me to bend over. Sometimes it's only my arms tied tightly behind my back forcing me to push my breasts out, and I'm on a leash. \n\nMe: Hogtied?\n\nHer: Oh, that's a scary one. But I think I would really like that. I could hardly move at all if I was tied like that.\n\nMy cock read that sentence and nodded in approval. I had a weakness for hogtied women in my bondage browsing.\n\nMe: We're astoundingly complementary in our fantasies.\n\nHer: You like bondage, too?\n\nMe: It's probably my favorite fantasy. But from the other perspective.\n\nHer: Seriously?\n\nMe: Seriously. I'd love to have a girl tied up under my complete control. I have so many ideas about what I would do.\n\nHer: Tell me more. If you had a girl tied up, what would you do?\n\nI was slowly stroking my cock now, teasing it.\n\nMe: I'd touch her. I'd tease her. I'd use a vibrator on her. I'd want to give her multiple orgasms, and do that thing where I keep pleasuring her right after she's cum, when she's really sensitive.\n\nHer: Ooh, I love thinking about that. Post-orgasm torture.\n\nMe: I want to see her in so much pleasure that it's painful for her. Not painful in the traditional sense, but painful in that she's hypersensitive and the pleasure is overwhelming her. She's fighting to escape, but she can't. She's thrashing and bucking and screaming, but she can barely move. She can only suffer the pleasure and I keep forcing it on her.\n\nHer: You can't see me, but I'm touching myself just thinking about it. I love your fantasy.\n\nMy hand flew off of my cock. We were both masturbating together? What was I doing? How did I end up in this situation?\n\nI gathered my composure again.\n\nMe: We must be reading the same books. What else do you fantasize about?\n\nHer: I'll tell you one fantasy that I've actually done.\n\nMe: Oooh, go on.\n\nHer: I like exposing myself. Being naked where someone can see me.\n\nMe: Like you're on display? Tied up or something?\n\nHer: Not necessarily. It could be a sexual situation, I guess, but I think more about be naked in a situation where someone could accidentally see me. I travel for work a lot, and I like to walk around in the hotel room naked with the curtains open.\n\nMy eyes widened.\n\nMe: Have people seen you?\n\nHer: I don't know. That's part of the thrill.\n\nMe: What about a situation where everyone is naked? Do you like walking naked in a locker room, for example?\n\nHer: Maybe a little. But I more prefer being watched where I'm not supposed to be naked. Where people don't expect to see me naked.\n\nMe: We're complementary again. I want to be the person who accidentally sees a woman naked, where she doesn't notice me and I can watch her.\n\nHer: Has that ever happened?\n\nMe: Only once. And it was only for a short time. I was sitting on my front porch, and one of my neighbors across the street walked into her living room naked. The curtains were open and she walked to the refrigerator and got something to drink. She was stark naked.\n\nHer: Was she attractive?\n\nMe: Yeah. She was young and slim. I was too far away to see any detail, but she had a nice shape and I could tell that she was shaved down below.\n\nHer: Maybe she did it intentionally. Maybe you were helping her to live out one of her fantasies.\n\nMe: Haha. I doubt that was the case, but that would be nice. She certainly helped me live out one of mine.\n\nHer: Tell me one of your fantasies.\n\nMe: You've already picked my top ones. Though I'll confess a little twist.\n\nHer: What?\n\nMe: I often don't think about me in those fantasies.\n\nHer: You don't? Why not?\n\nMe: I usually think of a girl doing those things to another girl.\n\nHer: Tsk tsk. You men and your girl on girl fantasies.\n\nMe: Would you ever do it?\n\nHer: What, girl on girl? Not really my thing.\n\nMy cock, looking at the screen, was slightly saddened by this news.\n\nMe: We can never be friends, then.\n\nHer: Haha. Okay, maybe once. But just for you.\n\nMe: We're friends again.\n\nHer: Tell me another fantasy you have. One that involves you.\n\nI pondered a bit. I had a pretty big catalog of fantasies. What rose to the top?\n\nMe: I'm a little embarrassed about it.\n\nHer: Tell me.\n\nMe: I want to try anal. Do all three holes on a woman, but particularly anal.\n\nHer: You've never tried anal?!?!\n\nMe: A couple of times. Briefly, though. Neither woman liked it.\n\nHer: I like anal.\n\nMe: Seriously?\n\nHer: Yes.\n\nMe: Let me guess - is it the domination part? Being taken? Or do you actually like the physical feel? \n\nHer: The physical feel. But only if I can rub my clit during it. It's the easiest way to make me cum.\n\nMy eyes widened at the computer screen. I'd become somewhat obsessed with anal over the years, in part because it was taboo but mostly because it played right into my forcefulness fantasy. What better way to dominate a woman than to take her anally, to pin her down and use her in an unnatural way for your pleasure?\n\nMe: Well, if I was pinning you down and forcing myself on you anally, I'd leave you a free hand to finger yourself.\n\nHer: That's so sweet of you.\n\n****\n\nI'm not a young man any more. When I was in my twenties, I could cum four times a day, and I could summon an erection merely by conjuring up any hazy mental image of a woman. This momentum lasted into my thirties without hesitation, and through my mid-forties. I began to imagine myself as a sexual immortal, the rare breed of man who could produce a cock of steel throughout his life.\n\nBut then something happened, and it happened overnight. Every morning I woke up with a feeling of fullness in my penis, a signal to my brain that I was ready for sex should the opportunity arise. But then one morning, the fullness wasn't there, and it was obvious in its absence. I was puzzled by it, as there was no reason on this particular morning to not feel it, so I wrote it off as an aberration. I went to work and came home, and like clockwork, I eventually distracted myself by imagining two women wrestling nude, and I spurted under my hand's attentions as one of the women forced herself on the other.\n\nOn that day, though, I became old. I could no longer conjure an erection on a moment's notice. I could still function just fine, but the four-orgasm days were gone and I began needing more time to recharge. I had to conserve myself for the times when they mattered most.\n\nAnd here, today, I had a predicament.\n\nSparrow was twisting and squirming on the bed, her arms and legs bound tightly behind her. She was helpless and my plan was to sexually exhaust her, to excite her and to tease her and to give her orgasms so intense that she would never forget this night. \n\nBut she's a 40 year-old woman. She's a sexual machine. I could give her orgasms all night, and she would likely respond every time, whether she wanted to or not. I'm a 50 year-old man, and I only have so many bullets in the chamber, so to speak. I need some help against this formidable sexual opponent.\n\nFortunately, I recognized that, so I brought some help.\n\nI pulled a bag from one of the nightstands. \"Let's see what we have here,\" I said, sitting so she could see me. \"All sorts of things to stimulate a trapped and helpless female body.\"\n\nI pulled out the first item. It was a pair of two small rubber thimble-shaped cones. \"I found these at the adult toy store, and I thought of you.\" I squeezed one of them so she could see it move. \"I'll put this over your nipple, squeeze the air out to create suction, and voila! Your nipples are going to be pulled away from your breast flesh until I take them off. I can't wait to try them.\"\n\nHer brown eyes widened. I could see her testing her hogtie again, and I smiled.\n\n\"Next up? What sexual torture session could we have without a vibrator? I picked this one because it's particularly powerful.\" The vibrator was long and pink, shaped like a realistic phallus. I was vain enough to be sure that it wasn't bigger than me, though I didn't tell her that. \"And a second vibrator that can be self-managing if I decide to go get dinner and leave you to suffer.\" The second vibrator was a U-shaped device, designed to be inserted while also making direct contact with the clitoris. It was springy so that one half would clamp onto a woman's mound while the other half stimulated her internally. I had found it quite intriguing at the store. I held it in front of her face so she could see it, and her brown eyes widened to show me the whites again.\n\nI looked in the bag again. \"Oh, you're going to be concerned about this, being such a little sparrow.\" I pulled out z bottle of lube and showed it to her, smiling cruelly. \"Can you guess why I bought this?\"\n\nSparrow squirmed. \"Please be merciful on me.\"\n\n\"You have to earn mercy,\" I replied matter of factly. \"You'll see how much you have earned as I jam my cock up that tiny little ass of yours.\"\n\n\"Oh, god.\" Sparrow squirmed and twisted. We had talked about limits and I knew this was okay. The game was fun, though, and I imagine that it was still a bit scary for her even as she wanted it, given our newness to each other.\n\n\"Are you ready to start?\" I set the items on the bed in front of her face so she could study them. \"We'll need to start with an inspection, though.\"\n\nI sat next to her on the bed. Starting with her hair, I began exploring her body. Her hair was raven black, probably more of a Korean smooth black than an Italian wavy black. I ran my hands through it, reveling in its softness. Next I studied her ears, tracing my finger along their complex curves, gently blowing in them as I stroked them. I ran my hands along her nose, her cheeks, her lips, as I sought to know every inch of her. She patiently let me roam without struggling, lying still in her bonds.\n\n\"Let's check out these breasts now, shall we?\" Pushing on her hogtied limbs, I flipped her over to her side. Her breasts were large, particularly for her size, and they gave me two big handfuls to knead and squeeze. I gave them a full inspection, lightly stroking them, squeezing them firmly, and fulfilling my secret desire to trace the irregular pattern of her areolas with my finger. \n\n\"That feels nice,\" she offered, her first words to me in the past few minutes.\n\n\"Enjoy it now, because I'm going to work them over tonight.\" I lay down beside her, pushing close, and closed my lips on her left nipple. I licked it, sucked it, nibbled it, and tongued it until it stood tall. I then did the same with the right one. They were gorgeous in their arousal. Kneading her breasts a bit more, I reached for the black suction cups. \"Might as well put these on now,\" I said. \"Let's see how they feel.\"\n\nShe watched with interest as I positioned the small item near her breast. Squeezing and pulling her nipple, I got the cup in place, then quickly placed it over her nipple as I squeezed it. As soon as I released it, it sprang back to it's normal shape, but with a vacuum inside that pulled Sparrow's nipples from her breast. \n\nHer shoulders instinctively tried to hunch. \"Oh! Oh!\" she said, exhaling sharply. \"That really pulls.\"\n\n\"How does it feel? Good or bad?\" I was playing tough, but I didn't want to actually hurt her.\n\n\"Really ... intense. I think I like it.\"\n\nI applied the other one.\n\n\"Oh, my. Oh, my!\" She tried to shimmy her chest, to shake the things off, but they clung fast. Her entire body wriggled and squirmed. She tried to pull her legs up, but was held fast. \"They're really pulling on me.\"",
        "I sat back and enjoyed the show for a moment. The thimbles would give her something to think about during any down moments. \n\nI continued my inspection, running my fingers and palms lightly down her back, over her ass, and down the outside of her thighs. Along the way, I gave a running commentary as if I was evaluating a slave for purchase. \"Nice muscle tone here. Feminine curve. Soft skin here.\" I took care not to tickle her since she had told me it was not pleasant. Instead I made my touch sensual and soft, but my commentary gave her the impression that I was unconcerned about her wishes, only my own. She was, after all, the submissive here.\n\nMoving behind her, I began moving back up her body, up the inside of her legs. Here's where the real fun would begin.\n\nI slowly stroked her bound calves, inside, moving from ankle to knee. Then the inside of her knees.\n\nThe inside of the knee is an underrated erogenous zone. It's not typically a physical arousal spot on its own, but the mental aspects are delightful. It's an innocent area to touch, but move up a couple of inches and you're suddenly stroking the inner thigh with everything it portends. The uncertainty of what may or may not follow creates a delicious arousal and sensitivity.\n\nI slowly stroked the insides of her knees, moving along the junction of bone, occasionally moving an inch up. Sparrow would catch her breath each time, the muscles tensing up.\n\nI took the opportunity to study her vulva, spread and exposed below me. I did not have diverse experience with women. I married young and wasn't a lothario before that. I had only played with pink pussies that had arisen from the genes of northern and western Europe. Those were light pussies, with white pale borders and coral pink lips. Sparrow's was markedly different, dominated by dark melanin. It was like none I had ever seen, and I wondered if it had drawn from her Korean DNA or her Italian DNA. I couldn't wait to play with it.\n\nMy hands moved upward, brushing along her inner thighs, slowly working up from her knees. She let out a little gasp, and her smooth muscles flexed. \n\n\"Oh, yes,\" I murmured so that she could hear it. \"She's sensitive here, isn't she?\" I moved higher on her thighs as she wriggled within her bonds.\n\n\"That's wonderful,\" she said. \"Please keep doing that.\"\n\nI smiled. For her benefit I made another round of her inner thighs, moving ever higher. Her nice rounded ass cheeks spasmed as I wandered toward her junction. And then...\n\n\"Ohhhhhhhh.\"\n\nSparrow froze in place. My fingers were now stroking her labia, so soft that they were almost meringue-like to my fingertips. Her face burrowed down into the sheets, her gasps and moans muffled within them. Her chains clinked against each other.\n\nGod, this was fantastic. I skimmed my fingers up and down her slit, reveling in how the ultra-soft tissue yielded. I could only imagine how those lips would wrap around a cock, and my penis flexed in anticipation. \n\nAnd now ... lets have a look inside. Gingerly grasping her inner lips, I peeled them open to look inside her, to intimately investigate this woman who was tightly bound and helpless on my bed. She was glistening and wet, and when I dipped a finger inside, it came away slick with her arousal. \n\nMy cock was imploring me to enter her. But I couldn't. Not yet. I couldn't keep up with this woman sexually over an entire night, so I needed to wear her down for a while. I reached up and got the pink vibrator. \"Time for some fun, my little sub,\" I said, and powered it up.\n\nIt was easy to hold her immobile in her current state, even as she squirmed. I put the vibrator on a medium setting and touched it to her clit. She bucked for a second against her bonds, but was unable to protect or shield her sensitive area. All she could do was pull futilely against the inescapable cuffs and receive her involuntary pleasure.\n\nI held the vibrator on her clit, then ran it up and down her slit. I pressed it against her lips, rubbed her glistening button, and watched the exquisite ancestral dance of her hips reacting to it. With one hand I pressed the vibrator against her, and I grasped her ass cheek with the other, squeezing it and feeling the soft skin with the firm muscle beneath. \n\nFor several minutes I played like this, working her externally. As her hips began a more rhythmic movement, I tried something new. Pushing the tip of the vibrator between her lips, I found her slippery inner chamber and pressed inward. It yielded quickly, allowing the tip in. I kept pushing, stroking her clit with my finger as I did.\n\nThree inches.\n\nFour inches.\n\nFive inches. \n\nI buried it almost to the hilt inside her, then turned the power up a notch. Her back arched and her breathing accelerated. I smiled at her reaction and slowly pumped the vibrator in and out, fingering her clitoris as I did so. Her fingers flexed and curled, her toes wriggled. She released a short breathy moan on each push.\n\nI worked her for a few minutes in this manner, then pulled the vibrator out completely. Setting it back against her clit and mashing it down, I turned the vibrator to its highest setting. \n\nThis got a reaction out of her.\n\nHer hips began moving quickly, humping some imaginary lover. Her moans became more quick, more urgent. \"Oh, please,\" she mewed, \"keep it there. Just like that.\"\n\nIt might have been fun to tease her, to deny her the climax. But I wanted her to cum, for more reasons than one. I kept up the pressure, and her undulations accelerated. Her back began to arch, her head arcing skyward.\n\n\"Yes! Yes! Yessssssss! I'm cumming!\" Her voice was low and throaty. \n\nSome women make a lot of noise when they cum. Others are dead silent. Sparrow fell more toward the quiet side, and her muted gasps and moans were delightfully erotic. Unable to move naturally, she had to cum on my terms as I used the vibrator on her. Faster and faster she undulated, then suddenly she froze in space and time, contorted in that key orgasmic moment, and then exhaled explosively as her body relaxed and went limp.\n\nI pulled the vibe away and let her melt into the sheets, breathing heavily. \"Oh, that was fantastic,\" she murmured. \n\nI stroked her upturned ass to let her catch her breath. \"Good,\" I said, \"because we're going to do it again.\"\n\n\"Give me a minute.\" She seemed to be aware of her predicament again, pulling against her bonds.\n\n\"Not your call.\" I pressed the vibe against her clit again. She yelped and bucked, and I had to plant my knees onto her thighs to keep her under control.\n\nHer stomach was flexing, reflexively trying to pull her clit away from the vibe. \"Too strong! Too much!\" But she didn't use her safe word, so I ignored her pleas. My dominating side reveled in watching her squirm and struggle under this exquisite torture, her body and pleasure centers under my control.\n\nI reached for the other vibe, the U-shaped one. \n\n\"Let's put you on autopilot,\" I said. The new vibe was interesting, unlike anything I had ever seen. It was kind of springy, designed in a clever manner to stay on (and in) a woman without any other device. I easily pushed the dildo side up into her, and the other half of the springy U clamped onto her mound. With a minor adjustment, I positioned the device so that a small knob on the inside of the U was pressed against her clitoris. \n\n\"I just came! I just came!\" She was really squirming now, and I loved it. Her hips were flexing to try to escape the vibrator, but it was now attached to her and followed her every movement.\n\nMy erect cock had ceased all diplomacy by this point. It was rebelling against being ignored, ordering me into her, straining against its skin as it pressed against my stomach. How could I deny it? But the problem was that her pussy was already full.  \n\nFortunately, evolution had solved that problem. I moved up to her head, spreading my legs around her taut shoulders. \"Lick me,\" I said. \"Do it well and I may show you some mercy.\"\n\n****\n\nA week later, we met again in our computer world, but this time her mind wasn't just on sex.\n\nHer: Can I ask a question?\n\nMe: Sure.\n\nHer: Have you ever been married?\n\nMy heart sank, as I knew it inevitably would.\n\nMe: Hang on. That's a loaded question.\n\nHer: Should I not ask?\n\nMe: You should ask. And I should tell you.\n\nI paused, then typed quickly, to get as many words on her screen as possible before she disconnected and walked away thinking that I was a terrible person. I wasn't sure she would be wrong in that.\n\nMe: Okay, hang up on me whenever you'd like, but I hope you'll read the whole paragraph first. I'm married, and happily married, for over 25 years. I love my wife very much. I shouldn't have had the sexual conversations with you, and I should have told you I was married long before now. In my mind, this talk is harmless and has nothing to do with my marriage. I like you and I was thrilled being able to share and hear things with you that I would never share and hear with another human being. I've needed that for a long time and I don't get it anywhere in real life. I'm very sorry.\n\nI waited morosely for her to disconnect.\n\nHer: Don't apologize. I completely understand.\n\nMe: I'm ashamed of myself and feel terribly about not telling you upfront. I didn't mean to mislead you.\n\nHer: You're not a terrible person. We should be able to talk about these things. You can't talk to your wife about it?\n\nMe: I wish I could talk to her about it, but I can't. She doesn't like hearing my fantasies and she won't share what she wants. I know more about your fantasies than I know about hers.\n\nHer: Want to hear more? (winking emoji)\n\nI felt a great weight lift from my chest even if I was still laden, pulling some great weight of guilt and obligation behind me.\n\nMe: You still want to talk to me?\n\nHer: (Smiley face emoji)\n\nI laughed.\n\nMe: What about you? Have you ever been married?\n\nHer: I'm kind of married now too, but not really.\n\nMe:?\n\nHer: I'm getting a divorce.\n\nMe: Oh. I'm sorry to hear. How long were you married?\n\nHer: Over 20 years. Three kids together. It's been a battle the whole time. The kids are grown, so it's time to move on.\n\nMe: That's a long time to stay together if you weren't happy.\n\nHer: You're telling me.\n\nSensing her spirit, I sent the next message tongue in cheek, hoping she would recognize the humor.\n\nMe: So if you're into BDSM and domination and receiving anal, how could you not have a happy marriage? You're the woman every man wants.\n\nHer: All I want is a man to throw me onto the bed, whisper ominous things into my ear, tie me down, and then force his dick into me while I'm trashing around. Is that too much to ask?\n\nMe: Gee, where were you when I was single?\n\nHer: But here's the thing.\n\nMe: What thing? Tell me.\n\nHer: I couldn't do any of that with him. He and I fought for control all the time, all those years. He was an alpha male. He was dominating in everything he did. I had to fight for my role as a partner every day. I couldn't ask him to dominate me in bed, or it would have other implications outside the bed. I couldn't give an inch of ground.\n\nI had to look up from the computer screen for a moment to process that. How perceptive of her.\n\nMe: So you couldn't ask him to dominate you in the bedroom because you were fighting being dominated everywhere else?\n\nHer: Exactly. I had to stand up to him every day. It's hard to do that and it's exhausting. He's a lot bigger than me physically, and I'm a small person, and for some reason that makes a difference. He always wants to treat me as something lesser.\n\nMe: Not meaning to digress here, but how tall are you?\n\nHer: 5 foot 3. He's a foot taller.\n\nMe: You're just a little sparrow. In fact, that's what I'm going to call you from now on. You're a sparrow.\n\nHer: I am a sparrow, and I'm looking for a sparrow hunter. \n\nMe: Mr hunter here, at your service.\n\nHer: I shall call you mister hunter.\n\nMe: So you've never had a chance to make your fantasy come true, either?\n\nHer: No. And I want it so bad.\n\n****\n\nI'm a patient man. I allowed Sparrow to lick me for several minutes, still trapped tightly in her hogtie, while the internal vibrator did its work. Reaching under her, I removed the suction cups from her nipples, and played with her nubs, now rock hard. As I played, as I enjoyed her tongue, I was watching the smooth round muscles of her butt, and eventually I could see them beginning to move more urgently, undulating up and down within her very limited range of motion. Her breathing began to get more labored again, so I released myself and moved back down to her pussy.\n\nSure enough, she was very lubricated, her thigh and butt muscles clenching and unclenching as she rose toward a second orgasm. Placing one hand gently on the roundness of her ass, I reached into her junction with the other, stroking and rubbing on her pussy lips. \n\n\"I'm about to cum again,\" she warned me, even though I knew. I was still rock hard, and ready for my turn to arrive, but I wanted to wear her down first. I continued to rub and stroke as her movements grew more urgent. \n\nSpreading her cheeks apart, I found her small anal opening. \"What do we have here?\" I asked coolly, as if I had found a coin on the pavement. \"Yet another portal to pleasure.\" I began running my thumb around her ring, occasionally putting pressure on it, while I continued to play with her other soft parts. \n\nI turned the vibrator up a notch, and that did it. Within seconds, she was squealing and humping, her bound hands and feet twisting and pulling as she came through gritted teeth, her body frozen in pleasure for several long seconds.\n\nAs soon as I saw her body slump in completion, I turned the vibrator up yet another notch. \n\n\"No! No!\" She began to thrash helplessly. \"I'm done!\"\n\n\"You're not done yet,\" I said casually.\n\n\"Too much! Oh, please! Too sensitive!\" Her fingers and toes were waggling, her chains being pulled taut in hopeless desperation.\n\nThere's something fiendishly pleasurable about watching a bound female being tortured by her own pleasure, being overstimulated with no way to escape. It's what always intrigued me about bondage in print and on film, and now at last I was living it. I was watching my little sub, desperate and frantic, being overindulged in pleasure that I was creating for her.\n\nI never thought I would see such a day. I had longed to see this day for so many years.\n\n\"Do you want me to give you mercy?\"\n\n\"Yes! Please!\"\n\n\"What will you do to thank me?\"\n\n\"Anything!\" Her voice cracked under the strain of too much pleasure. She was trying to writhe back and forth, anything to dislodge her diabolical intruder, but she had no chance. With only one hand on her butt, I was keeping her from rolling, and movement wouldn't help anyway. I listened for her safe word, but she wasn't using it, which aroused me even more.\n\nI pushed my thumb against the opening of her anus. \"I want this.\"\n\nHer head was arcing up, then pushing into the sheets. \"Anything! Take it out!\"\n\n\"Let me think about it.\" I made her suffer another thirty second just for my own pleasure, then reached for the vibrator. I pulled it out of her and turned it off, and she melted into the bed, breathing heavily. Each exhalation was a barely audible moan.\n\n\"You did well, my sweet.\" I opened the handcuffs with my key, and her arms fell to her side. I then released the cuffs from her feet, and her legs dropped flat. Slowly she tested the freedom of each limb, but otherwise didn't move.\n\n\"You've had some fun. So now it's my turn,\" I said. Grabbing her ankles, I pulled her to the edge of the bed.\n\n****\n\nHer: What about your fantasies? Have you ever tied up a woman? Played the force fantasy on her?\n\nMe: No. Never.\n\nHer: Not even your wife?\n\nMe: Not her thing at all.\n\nHer: So just vanilla sex?\n\nMe: If that. \n\nI pursed my lips, then wrote again.\n\nMe: I haven't had sex in three years.\n\nHer: What?\n\nMe: She's not interested any more.\n\nHer: I thought I was in a bad drought and it's only been six months for me. I feel bad for you.\n\nMe: But you were still not getting what you really want even when it was happening. You're not getting tied up (wink).\n\nHer: I'm not even getting wrestled down.\n\nMe: So here we are, two horny people with complementary kinks, and neither of us is getting to experience them.\n\nHer: I can imagine you doing it to me, though. That helps.\n\nMe: You barely even know what I look like.\n\nHer: I have a picture from when we first met. And I have an imagination. Anyway, it's not so much about what you look like. It's about how you treat me.\n\nMe: How I treat you in your fantasies or how I treat you when we talk?\n\nHer: Both. In my fantasies, you're demanding and willful. You force me to do whatever you want. I can't resist. But in real life I can tell that you're respectful. You'd be the type of person that I could feel safe with. The type of person that I would do my fantasies with.\n\nMe: That's very flattering. It makes me want to pin you down on a bed and force you to service me.\n\nHer: Lol. I'd let you.\n\nMy blood froze. Were we letting this go too far? Was our flirting a threat to enter the real world? I wasn't looking for an affair. I wasn't looking to leave my wife for another woman. But god, what I wouldn't give to live out my fantasies, to have just one night of unreserved sexual abandon. I thought carefully about what to say next, my cock hard in my pants at the mere thought of this woman, of meeting her and playing out our fantasies.\n\nMe: Don't tempt me. I'm about to explode here.\n\nWe made small talk for a few minutes, but I couldn't stand it any more. I had to know.\n\nMe: Confession here.\n\nHer: Tell me.\n\nMe: I've considered it before. Considered doing the fantasy thing with someone.\n\nHer: Who was she?\n\nMe: Not with a specific person. I travel a lot for work. I've considered hiring an escort or a prostitute. But I can't do it.\n\nHer: Why not?\n\nMe: Don't judge me on this.\n\nHer: Of course not.\n\nMe: I don't actually feel like it's cheating, so that's not the reason. I love my wife and I would never betray her, at least not according to my definition. I view sex and fantasies as being something completely different from love and marriage. It's compartmentalized in a different spot. In my mind, getting sex should be like going to get a haircut or something. \n\nHer: You can have sex without love?\n\nMe: Of course. Do you think you can?\n\nHer: I've been doing it for the past twenty years.\n\nI smiled wryly at her observation.\n\nHer: So why haven't you done it? Why haven't your hired someone?\n\nMe: Because it's not just about putting my penis in some girl's slot. That's just masturbation into a pussy. I want it to be a mutual experience.\n\nHer: But without love.\n\nMe: Yeah. But with desire and interest. Maybe I'm a hypocrite. But I wouldn't want a woman to just have sex with me for money. I'd want her to be in it for the pleasure, and because she wants to pleasure me. I'd want to know what she wants and give it to her, and vice versa. \n\nHer: You want her to know you.\n\nMe: Yes! And I'd want to know her, or at least what she wants. I'd want a situation where we could both spell out our most desired fantasies, and then we provide them without shame, without judgment, just purely for enjoyment.\n\nHer: You're probably not getting that from a prostitute.\n\nMe: Plus...\n\nHer: Plus?\n\nMe: I'm afraid of diseases. If I was with a woman in this scenario, I'd want to get oral sex from her. I'd want to feel myself inside her. If I'm living my fantasies, I'd want to try anal.\n\nHer: You're afraid of diseases?\n\nI hesitated before responding. \n\nMe: Yeah. I'll tell you something embarrassing.\n\nHer: What?\n\nMe: I've only had sex with two women in my life.",
        "There was a pause on her end this time.\n\nHer: I think that's sweet. I've only had sex with four, and just the husband for the last twenty years.\n\nMe: We're practically virgins.\n\nHer: And no STDs here.\n\nMe: Pure as the driven snow here.\n\nHer: But kinky as hell. And needing a man to conquer me.\n\nA terrible idea was forming in my mind. Was she thinking what I was thinking?\n\n****\n\nI pulled her down partly over the foot of the bed so she was standing on the floor, but bent over the bed. Kicking her legs apart, I reached under the bed to some loops that I had pre-placed on the feet of the bed. I bound her ankles apart, very widely. Moving up, I found similar loops at the head of the bed and stretched them down. Putting them around her wrists, I now had her tightly bound body bent at a 90 degree angle over the foot of the bed. I admired my handiwork as she looked up at her wrists. \n\n\"You came prepared,\" she said.\n\n\"I'm using what I was taught in boy scouts,\" I said, checking the knots I had tied. \"Perhaps not how they intended, though.\"\n\nShe had a little bit of slack, and that was unacceptable. I adjusted the loops, pulling hard and stretching her out until she was completely taut and immobilized. I knew she loved that feeling, and I loved having her trapped. She groaned as her limbs were pulled as tightly as possible, her thighs pressed into the top of the mattress, her legs spread wide.\n\n\"Now what do you think I'm going to do next?\" I casually set the lube on the bed directly in front of her.\n\nShe looked up at me with those gorgeous Italian eyes. \"And you're not even going to let a girl have a free hand to finger herself? You're a cruel master.\"\n\n\"Be a good, tight girl and we'll see.\"\n\nMoving behind her, I grabbed the lube and positioned myself, curling behind her in a standing spoon. She was so petite that I felt like a giant as I enveloped her in my body. I leaned in close to her ear, and whispered, \"I'm going to sodomize you for my pleasure now.\"\n\nAs I said those words, my finger touched the ring of her anus. She shuddered, either with delight or dread. \n\nI dribbled the lube down from the small of her back, capturing it and rubbing it in the proper places, both on me and in her. Then I pressed close, wrapping my arms around her and holding her tight.\n\nMy tip found its target quickly. With a little maneuvering, I was ready to enter. \"Here we go, my little sub,\" I said. I began a slow steady push.\n\nShe gasped and bucked forward, but trapped by the bed beneath her and me above her, she had no choice but to accept her impaling. With a burst of pleasure, my head went in, and we both groaned. Another push, another inch. \"You're so tight back there,\" I murmured, running my tongue up the back of her ear.\n\n\"Keep going,\" she gasped. \"All the way.\"\n\nInch after inch, I took this petite woman, this nameless confessor of my sexual sins. And what a sinner I was.\n\nI was a good man. I would never hurt someone, never force myself on someone. But there's something in the DNA of a man that wants to take a woman, that wants to chase her down and lie on top of her and enter her body to make it his. I had never thought it would happen, but here she was, someone whose DNA wanted her to be chased, be taken, be violated in unnatural ways for the pleasure of her conqueror. Our fantasies had become one with each other, not just physically but in spirit. I pressed into her neck, locking her vulnerability in my teeth. My hands shifted and I gripped her breasts, squeezing hard, clamping into my prey so she could not escape until I had completely consumed her.\n\nI planted myself balls deep into her, my entire shaft buried in her most private of areas. I withdrew, all but the head of my penis pulling out, then slowly pushed back in to repeat my pleasure. I reveled in her tightness, the high-pitched noises she made as she was taken, and most of all the sheer fact that I was engaging in this act, with this woman, in this place. I began building a slow rhythm, designed to maximize my pleasure.\n\nFor several minutes we continued our slow dance of sexual deviance, me pushing into her ever so slowly, violating her deeply and intentionally, her gasping and moaning and flexing her hands and fingers in need. \n\n\"You're taking your ass fucking like a good little sub,\" I whispered in her ear, biting down on the lobe. Her skin was warm and soft as I melded myself into her, touching her in as many ways as possible.\n\n\"I need to cum again,\" she pleaded. \"I love the feel of you inside me, around me.\"\n\n\"You're earning it,\" I said. Reaching up, I released the loop from her right hand. It immediately moved down, and she shifted under me as she began fingering her clit.\n\nI took a long time to cum, and that was intentional. I slowed down when I was close, so I could enjoy her longer. At times I even stopped moving altogether, just planting myself as deeply as possible within her, feeling her micromovements as she masturbated beneath me. She took my attentions like a heroine, working herself the entire time, silently allowing me to maul her breasts with my hands, her neck with my tongue and teeth, her back with my chest. Eventually I felt myself beginning to well up into an eruption. \n\n\"I'm getting close,\" I murmured into her ear.\n\n\"Give it to me.\"\n\nI slowly accelerated my pattern until the smooth push and pull became thrusts. Faster and faster I moved, bouncing her beneath me. With three of her four limbs bound and stretched, she could only absorb my aggression, yet I could vaguely feel through her body movements that she was accelerating her own frigging. \n\n\"How close are you?\" I asked.\n\n\"Getting close.\"\n\n\"I can't hold out.\"\n\n\"Do it.\"\n\nWith one, two, three final thrusts, I came inside this woman, this woman who I had only laid eyes upon hours earlier. My mind exploded into ecstasy, then orgasm, then stars and the cosmos. My brain short-circuited from the nerve sensations and I briefly went to another world.\n\nWhen it was over, I was still curled around her, and she was still frigging herself. Pulling her tight, gripping her waist and her chest, I squeezed her in a bear hug, my pulsating penis still inside her. I buried my face into her hair, kissing her neck, stroking her breasts, protecting and shielding her from the world as she finished her pleasures. When her back arched again for the third time that night, I was still riding her, and I reveled in the sensation of her body movements and spasms as if I were having the orgasm myself.\n\n****\n\nIt had been a month since we first crossed the line. We came back for our weekly meeting, and I was scared. I was wary of what I wanted, why I kept coming back.\n\nHer: Hello, Mr. sparrow hunter!\n\nMe: Hello, my little sparrow. Always nice to make your acquaintance.\n\nWe exchanged some pleasantries for a while, the normal everyday stuff about our week. As we warmed up for our now-normal sexual discussion, I asked the key question.\n\nMe: Would you ever want to make your fantasies real?\n\nHer: I thought you'd never ask. Take me!\n\nMe: Haha.\n\nHer: Haha. \n\nHer: But I'm serious. I'd let you do it. No one else.\n\nMe: Me? Why me? I'm just words on a keyboard.\n\nHer: I trust you. You wouldn't hurt me. And you know what I want and how to give it to me.\n\nMe: It's not just about trust, though. There are all sorts of other factors.\n\nHer: Like what?\n\nMe: Well, first off there's health and diseases. But I guess we've already covered that.\n\nHer: We've checked it off the box. We're both practically monks.\n\nMe: Next thing: I'm married. I want to stay married. I want to keep my life intact.\n\nHer: I wouldn't fall in love with you.\n\nMe: I need that promise. Because I'm incredibly desirable. Haha.\n\nHer: I think I could resist you. No falling in love, no fatal attraction stuff. Just one night. And you couldn't fall in love with me, either. But you could have a crush on me if you want.\n\nMe: That ship has already sailed. But it's a harmless crush and I would never tell you about it.\n\nHer: I'm clueless.\n\nMe: On that topic, there's chemistry. We're kindred spirits online, we know that. Our kinks are perfect matches. But real life is different. I'm not nearly as handsome as the font I type in. What if we met and there was no chemistry? It's possible, you know.\n\nHer: I think there would be chemistry. We have the same interests.\n\nMe: But what if there's not? Maybe you'd think my voice is repugnant, or my walk is weird.\n\nHer: Your walk is weird?\n\nMe: I don't think so. But maybe you would think so.\n\nHer: We'd meet at a safe place first. Meet for coffee.\n\nMe: Meet for coffee first. I like that. \n\nI pondered such a meeting. It would really be awkward if we met and just didn't click with each other. I could tell that she was a nice person, and from the one picture I had, she seemed attractive. But I've sat at many a business luncheon across from nice and attractive women who I could not imagine tying to a bedpost. \n\nAnd what of Sparrow? I knew my limitations, and I worried about her being disappointed if we ever met. For some reason I'm more charming in writing than in person, and I've always known this to be true. I'm a writer by nature, and that's probably related to the fact that I'm not a smooth talking charismatic guy. If we met, Sparrow would also see the unvarnished truth that I'm ten years older and her and that I have never been asked to pose for a firefighter calendar. Truthfully, I worried more about her reaction to a meeting than about mine. My whole fantasy involved being with a woman who was interested in me, and if she only followed through because she felt obligated, that was worse than not meeting at all. \n\nMy mind raced.\n\nMe: We should assign a less encompassing goal to the first meeting.\n\nHer: What do you mean?\n\nMe: You mentioned that you fantasize about people unexpectedly seeing you naked. I remember that.\n\nHer: Yes. Mmm, nice.\n\nMe: So we meet, and the goal is to have you expose yourself to me. In a way that no one else can see. You do that, I get to leer at you, you leave, and we've accomplished one of our fantasies in a harmless way.\n\nHer: Okay. But what if we meet and want more? I can see that happening.\n\nMe: We can make the call then. If you decide not to go further than that, for any reason at all, then you just nod and leave. That'll let me decide the reason in my own mind, so I won't feel rejected. Maybe you just decided you weren't ready. Maybe I have really bad body odor. If I don't know the reason, then I can tell myself a story to make myself feel better. And I also walk away getting to see an attractive woman flash herself to me, which would make me a happy guy.\n\nHer: So I flash you, and then what?\n\nMe: I'd have a hotel room. If I want to go further, I would put the key down where you can pick it up. If you pick it up, then we're both all in. If I don't put the key down, then it means that I'm backing out for some reason, and you'll never know the reason.\n\nHer: So if either of us backs out, for any reason, we still did the public flashing fantasy and it's a win-win.\n\nMe: Precisely.\n\nHer: I like it. Question for you.\n\nMe: Yes?\n\nHer: Do we get to learn each other's names at that point?\n\nMe: Nope. We're just two strangers in the night, meeting to help each other live out one night of fantasy.\n\nHer: Except we're not really strangers at this point. We know each other's deepest secrets.\n\nMe: That's why we won't know each other's names.\n\nHer: So would we actually do this?\n\nThis whole process of imagining a meeting was a fun fantasy in and of itself, and one that I was living in real life. That was actually a real woman on the other side of the keyboard! I also liked the thought that we were playing out a fantasy about playing out a fantasy. It was harmless. I knew the odds of us actually meeting were exceedingly low, so I kept the game going.\n\nMe: We live 500 miles apart. We'll meet the next time we're in the same city.\n\nHer: I like that plan.\n\nMe: There's precedent for this, you know.\n\nHer: How so?\n\nMe: Strangers on a train.\n\nHer: What about strangers on a train?\n\nMe: It's a movie. Two people who don't know each other are talking on a train. They both need something done that they can't do themselves. So they make a deal with each other that they'll each do the thing for the other one, not knowing each other's names.\n\nHer: What did they do?\n\nMe: I don't remember exactly, but I think it was committing murders.\n\nHer: Eww.\n\nMe: Our situation is obviously different in that regard.\n\nHer: I have a different explanation.\n\nMe: Tell me.\n\nHer: I feel like this is one of those random acts of kindness that you hear about.\n\nMe: How so?\n\nHer: We both have things that we've always wanted, and could never have. We're in a position where we can give them to each other. We're giving each other a gift.\n\nMe: I like that. I really like that.\n\nHer: I have one favor to ask.\n\nMe: What's that?\n\nHer: Can we still be friends afterward?\n\n****\n\nSparrow had a surprise for me.\n\n\"Put on your robe,\" she said, and donned her own.\n\nI did as she said, following her orders in a reversal to her submissive role.\n\n\"I'm the hotel masseuse,\" she said. \"Would you like a massage?\"\n\nMy eyebrows rose. \"I believe I would.\"\n\n\"Okay!\" She went to the door of our room, stepped outside, and let it close.\n\nKnock, knock.\n\nI went to the peephole and peeked outside at her. \"Who is it?\"\n\nShe laughed at my willingness to play along. \"It's the room service massage you ordered, Mr. ... Um, Hunter.\"\n\nI opened the door and let her in. She professionally shook my hand. \"My name is Ms. Sparrow and I'll be taking care of you today. You ordered the special massage?\"\n\nI knew my improv rules, so I followed her lead. \"Perfect. I can really use a little relaxation. I've had a long and exhausting night.\" I went back into the room as she followed me. \"Do you need to set up a massage table?\"\n\n\"No. For the type of massage I offer, we can use the bed if you don't mind.\"\n\nI looked her up and down. \"I don't mind at all. How do we start?\"\n\n\"Well, I'll need you to remove all of your clothes first.\" She gave me a very professional look and intonation.\n\n\"I can do that.\"\n\nIn a flash, I was naked. I didn't hide myself from her, walking brazenly nude in front of her as I made my way to the bed, my cock swinging with my gait. \n\n\"If you don't mind, I'll remove all of my clothing as well,\" she said. \"It keeps the massage oil from staining them.\"\n\n\"We can't have that,\" I agreed.\n\nIn a flash she was naked too, her breasts bouncing ever so slightly as she walked toward me, those big brown nipples catching my eye.\n\n\"Face down, please,\" she said in a businesslike manner. Smiling, I complied, though my hardening cock made it a little uncomfortable. I suspected this was going to be good.\n\nI lay down in the middle of the bed and she climbed up between my legs. \"Massage is good for the circulation, sir. It improves blood flow.\" I could hear the sounds as she rubbed some massage oil onto her hands, and then I suddenly had nice warm hands and fingers massaging my feet, then my calves.\n\n\"Mmm, very nice,\" I mumbled, my voice buried in the sheets.\n\nShe moved up to my knees, my hamstrings, pushing herself further between my legs. She gave a surprisingly good massage for an amateur, and I felt myself relaxing.\n\nThen her small hands were on my butt, and the massage became a bit more sensual, softer with more caresses. I gasped as a finger touched my perineum, softly stroking. \"Some areas require less pressure than others,\" she said. She spent quite a bit of time on those two areas, and I found myself involuntarily beginning to hump the sheets.\n\nBut she moved on. Sitting on my rear end now, she got back to business, massaging my back, then bending my arms up and back to give them a good rub. I could feel the slight rasp of her pubic hair against my skin as she leaned forward.\n\n\"It's best to massage with soft skin,\" she said softly. \"Sometimes it's your hands and sometimes it's ... other parts.\" With that, she spread some massage oil on my back and shifted her body weight. \n\nMmmm, I could feel her breasts, oily, slick, and soft, stroking up and down my back as she lay prone upon me. Up my body and down, it felt divine, and her breath tickled my neck on each upstroke, with occasionally a nibbled kiss. She gave me perhaps a dozen of these strokes before moving on.\n\nNow she was onto my scalp, my ears. I love having my ears stroked - perhaps it's a minor fetish - and she knew just how to do it. She lightly stroked my scalp, then said in a soft voice, \"Now imagine that it's raining pleasure on you.\" Her fingers dropped a featherlight touch on me from head to toe as I shivered in delight.\n\n\"Time to turn over, Mr. Hunter.\"\n\nWith relish, I turned over for the second half of my massage. She looked down at my full-mast penis. \"We're not completely relaxed yet, are we?\"\n\n\"No, ma'am.\"\n\n\"Don't worry. I guarantee complete relaxation.\"\n\nShe moved back down to my feet and began the same process again, starting with my toes and moving all the way up to my quadriceps, providing a professional quality light massage. My cock was ready for it's turn, but she teased it. Dropping just a touch of massage oil on it, she lightly ran a hand up and down its length. \"Hmm,\" she said. \"This is a problem area. I'll come back to it.\"\n\nI groaned my disapproval, but she only laughed. \n\nNow she moved up to my head and beyond, facing down toward me from above. She repeated the same feather light strokes on my face that she had used earlier - my forehead, eyebrows, jawline - and I was in heaven. \n\nRunning her hands along my arms, she leaned in low. Starting at my shoulders, she would stretch for a downstroke, bringing her breasts directly onto my face at the far end of the stretch. On each stroke, I would grin as I saw them lowering toward me, and I would close my eyes to experience their softness on my face.\n\n\"Oh, my apologies,\" Sparrow said in a sultry voice. \"My curves sometimes get in the way of a good massage.\"\n\nI opened my eyes again as she raised up. \"I'm a happy customer,\" I said, \"despite this minor incident.\"\n\nShe lowered them onto my face again as we both giggled.\n\nShe scooted forward and began rubbing my chest, the massage oil warm and viscous in her hands. She moved across my collarbones, my sternum, and my pecs, then came to rest with her palms on my nipples. She moved them in tiny circles as I enjoyed the sensations. She did this for some period of time that seemed like forever, but was still not long enough.\n\nNow she moved further down, to my stomach. My stomach is for some reason rather sensitive erotically, and she seemed to sense this, giving it lots of attention. But just as important, she had to reposition herself again. Moving forward, she straddled my chest with her knees, positioning her junction just above my face.\n\nAs she caressed my stomach, occasionally meandering down to the side of my hips, I got a splendid view of her pussy. I was again fascinated by the darkness of it, the tone-rich skin of her outer lips, the coal dark inner lips, and I wanted to taste it. I watched it for a couple of moments, moving slightly as she massaged, and then I had to go for it.\n\nReaching up, I grabbed her hips and pulled her down onto my face. She didn't resist as I sought her clitoris with my tongue, licking, sucking, wrapping my tongue and lips around her pleasure nub. For a few moments, I played unabated, until she pulled herself off. \n\n\"Sir, we do not allow such indiscretions in this establishment. I'm going to have to restrain you.\" Giggling, she skittered off of me and reached for the leather cuffs, the ones that I had used on her earlier.\n\nMy eyes wide, I allowed her to put my wrists in the cuffs, restraining one to each corner of the headboard. Then she moved down to my ankles and did the same.",
        "\"I'm going to have to work on that problem area for a long time,\" she said. \"Raise your hips.\"\n\nQuestioning but trusting, I raised my hips. She quickly stuffed several pillows under them, pushing them forward to support my lower back. When she was done, I was tied in a four-point restraint, and my cock was the highest part of my body. With my hips lifted up, I couldn't move them.\n\n\"Oh, yes,\" she said, taking a seat cross-legged near my right hip. \"The perfect height for a long, slow treatment.\"\n\nI expected her to start a hand job, or maybe a blowjob. But she didn't. Instead, she studied my penis, looking at it from all angles, not touching it. I watched in fascination.\n\n\"Nice shape,\" she said, \"nice and hard. But I need to keep it hard for a while.\"\n\nBounding off the bed, she went to her purse, coming back with a small item in her hand. It was a one of those elastic bands that women put in their hair to make pony tails. I noted that Sparrow had short hair, and thus no need for one of these things. She stretched it out and placed it over my cock and balls.\n\nFor a small and simple item, the effect was delightful. It was just tight enough to push my balls forward, or in this case up, but not so tight that it was constrictive. I tried to wiggle to test it out, but could barely move. I knew the impact, though; it would act as a cock ring, slowing down my ability to orgasm.\n\n\"Okay, now I need to study it a little, get to know it, so I can give it a perfect massage.\"\n\nI groaned as she touched me, one finger making a small butterfly touch right on my frenulum.\n\n\"This is usually the most sensitive part on a man,\" she explained to either me or my cock. I couldn't tell who she was talking to. \"Right...\" she touched me right on the most sensitive part, \"...here.\"\n\n\"But not always. Some penises are sensitive here.\" She gave me a butterfly touch on the side of my penis, directly next to the frenulum. I had no idea that part was sensitive, but I moaned in pleasure as my cock jumped on reaction.\n\n\"And some are sensitive right on the head, though that's not always a good sensitive.\" She swirled a finger around the crown of my penis, making me jump and yelp.\"\n\n\"Yes, sir, I have to study this.\" For several minutes she traced tiny soft lines with her fingertips across the entire topography of my penis. Bound and spread, my hips propped up so that I couldn't move, I was wild under her touch. The hair band around my cock and balls was allowing blood flow in, but not out, so I felt as if my cock was getting harder by the minute. \n\n\"Of course, sometimes it's not the penis at all.\" She looked at me and smiled, her Italian eyes bright. She began stroking my balls, softly, teasingly. They were trapped, tight in their skin, and every touch sent little lightning bolts into my brain.\n\n\"Oh, please touch me,\" I moaned, pulling against the wrist cuffs.\n\n\"Or maybe even lower.\" She cupped my balls in her hand and lifted them, and began stroking the skin underneath them. My balls luxuriated in her warm, oiled hands, and I gasped at every stroke underneath.\n\nShe held me for a few moments, stroking me patiently, as I gasped, afraid to move with my balls in her grip, but unable to avoid writhing in pleasure. Eventually she released me, putting more oil on her hands. Her smile was wicked.\n\n\"Or maybe... Even ... Lower.\"\n\nMy noise was soft and inhuman as I felt her pressure. She was pushing against my anus as I had done with hers earlier.\n\n\"Some of my customers require an internal massage to relax.\"\n\nNobody had ever done that to me. Ever. I was horrified and curious and delighted all at once. \"Slow,\" was the only word I could croak out before I felt her fingers enter me.\n\nI had never had a prostate massage before, but one thing I could tell is that she was talented at it. Her right hand had a finger inside me, stroking some magical spot, while her left hand wrapped, at long last, around my shaft and began a light, teasing handjob.\n\nI implored to my gods as she worked, my cock and balls unable to get enough friction to cum, my prostate feeling sensations that had never before been felt. My fists clenched, my toes curled, and she teased and fluttered and toyed with me, offering me a beatific smile as I pleaded for her to go faster, harder, whatever I needed to climb the wall to my orgasm.\n\nMy cock got harder and more insistent, its head turning a deep purple. Noticing, she said, \"Hmm, this technique doesn't seem to be relaxing you. Maybe I should let you cool off for a few minutes.\" As I bucked against my bonds, she relinquished her grip on me, pulled out, and began her feather strokes again.\n\nAfter a few moments, she started the whole process over again, teasing, touching, stroking, but not letting me cum. \n\nAnd then she did it again. And again. Like an infinite loop sending me to the edge and back. I was humping the air\n\nAfter some interminable time, I was begging her for release. Anything, I offered. The pressure in my cock was immense, my need infinite.\n\nShe pursed her lips in thought. \"I can't seem to relax you,\" she said. \"Let me try one more technique. But it's somewhat unorthodox in our profession. It's the wrapped massage.\"\n\n\"What is it?\"\n\n\"It's when I completely wrap around your penis. Would you like me to show you?\"\n\n\"Yes. Yes!\"\n\nWith a knowing smile, she pulled the pillows from underneath my hips, allowing me to lie fully on the bed again. She removed the cursed hair tie from my cock and balls, allowing them to resume their normal position. Straddling my hips, she lowered herself onto me, and reached underneath to guide my penis.\n\n\"Oh, yes,\" I breathed. \"The wrapped massage. I understand.\"\n\nThe feeling of one's cock entering a woman's pussy is sublime. She lowered herself inch by inch onto me until I was fully inside. I now had an excellent view of her as well, from her pussy cleft up to her breasts and up to the impish smile on her face. With a little slack now, I was able to do my part, too, and we built a rhythm as she rode me.\n\nThere's nothing more beautiful than watching a woman cum, and nothing more enjoyable than cumming along with her.\n\n****\n\nOur weekly meeting started like normal. We were fast friends now, friends who could share anything. We talked a little about our week, a little about her children, a little about work. I told her that I had a business trip coming up.\n\nHer: So do I. Where are you going?\n\nMe: I'm going to be in Los Angeles all week.\n\nI hit 'enter' just as her next message came in.\n\nHer: I've got a night in Los Angeles this week.\n\nNeither of us typed anything for a long minute.\n\nI knew what this meant. We both knew what this meant. Until this moment, we were just two people typing our fantasies, talking without restraint to a fantasy partner that we knew we would never see in flesh and blood. But now the opportunity to meet was there, right in front of us.\n\nCould I actually do this in real life? Should I?\n\nI knew the proper answer. The proper answer was that I shouldn't. I had a great life. Why take any risks with it, much less a big risk like this? Of course the obvious answer was no. I should back out gracefully and admit that it was fun while it lasted.\n\nBut I also knew another truth. In the personal canvas that was my life portrait, there had always been one small corner left unpainted. It was a small blank spot, survivable, and the canvas was beautiful in spite of it. But in looking back on my life, my eye was always drawn to that one missing color. \n\nI had no way of experiencing these fantasies that had spun in my mind for decades. They were harmless fantasies with a willing partner, fun fantasies, things that I would dearly love to do. But life had inadvertently steered me around them. Could I go back and fulfill them now? It would be bitterly disappointing to have the opportunity, truly a once in a lifetime opportunity, and walk away from it.\n\nAnd what of Sparrow? Maybe she was not who she said. Maybe she was angry about something, setting a trap. Maybe she was crazy, and would try to destroy me. Those were risks, and I could never assure myself completely. But everything pointed in the opposite direction. We had met innocently. We were not intending to go down this path. All of the mundane conversations over the past months pointed to her being a completely normal woman. And importantly, she was a woman who had the same small unpainted corner in her personal canvas as me. She had married young, flown the straight and narrow, and never lived out the fantasies that she and I shared. \n\nIf there was ever a time for me to live out my fantasies, and a person to do it with, I had stumbled across it.\n\nAs my mind raced through these thoughts, a single line appeared on my computer screen.\n\nHer: Know any good coffee shops?\n\n****\n\nWe slept the rest of the night away in satisfied exhaustion, then showered together the next morning, taking care to lather and scrub each other well. We got dressed, putting on normal street clothes. We were people again. She packed her bag and I ordered room service.\n\nWe sat down for a meal before we parted ways, sitting at a table near the window that overlooked the city.\n\nI broke the silence. \"Well, that was intense.\"\n\nWe made eye contact, her beautiful brown eyes curious and caring. \"Was it what you wanted?\" she asked. \n\n\"Yes. Was it what you wanted?\"\n\n\"Yes.\"\n\n\"What now?\"\n\nI hated to say it, but knew that I should. \"We've accomplished what we wanted to do. We had one night of living our fantasies. I think ... I think that's it. Right?\"\n\nShe nodded. \"We had a deal. One time, no replays, great memories that will forever be our secret.\"\n\nI nodded. \"I'll remember this night forever.\"\n\n\"We'll still be friends, right? Maybe tell people that we happened to meet in a coffee shop and hit it off?\"\n\nI smiled. \"We met in a coffee shop and hit it off.\"\n\n\"If we're friends, I probably should know your name.\"\n\nI weighed the odds, the harmlessness or harmfulness of giving this person, this person who had given me such a strange and wonderful gift, my name. But I trusted her. We had a bond and we had made a promise to each other. I was sure that she would be honorable about it.\n\n\"I'm Bradley. It's nice to meet you.\"\n\n\"I'm Laura.\"\n\nLaura. It wasn't an exotic name. It wasn't the type of name that an escort or a bar girl or a wayward masseuse would use. It was the name of a woman who shopped for groceries, who worked behind a desk, who drove to the drug store in the middle of the night to buy cold medicine for her children. I was comforted by that name. It meant that our experience was real.\n\n\"That's a beautiful name,\" I said. \"I'll be glad to have a friend named Laura.\"\n\nWe finished lunch, and she put on her coat that was heavier than the weather required. I walked her to the door, and noticed that its hem danced around her shapely calves as she walked.\n\nShe turned her foot shyly, looked at me for a moment, and suddenly stepped into our personal distance.\n\nIt was not a kiss of passion, or a kiss of raw lust, though both would have been justified. Rather, it was a kiss of sensuous understanding, the final chapter of a one-night promise to give each other the gift of a lifetime.\n\nShe stepped outside and the door pulled itself closed. And with that, Sparrow was gone."
    ],
    "authorname": "BuckRivers",
    "tags": [
        "romance",
        "fantasies",
        "bondage",
        "anal",
        "first time",
        "meetup",
        "mature",
        "one night stand",
        "submissive",
        "friends"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/a-sparrow-alights"
}