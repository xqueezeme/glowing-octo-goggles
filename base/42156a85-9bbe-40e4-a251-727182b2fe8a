{
    "title": "The Ultimate Playboy Pt. 03",
    "pages": [
        "I'm looking for love; but that doesn't mean I'm going to become monogamous or anything...\n\nPART 3: Love Potion\n\n***\n\nCHAPTER 8\n\nAlone in the morning, Kaia and I were still too tired and sore to have another sex romp to start our day. I was going to have to be careful in applying that much energy into my effect. And unfortunately that night would be the last time I had her for two weeks. For some strange reason, unless I really focused my effect on her, Kaia didn't particularly enjoy intercourse and would much rather tease guys or be a voyeur. She really got off on watching, although there were still occasions where she desperately wanted to be fucked.\n\nAnd I'd had a ringing headache I'd had for days after the last time I pushed my effect that hard into her, so I accepted the situation and didn't press to have sex with her directly.\n\nIn the meantime, every night, either Jamie or Leanne or some other sorority sister would join us for the evening, and I would wind up fucking that girl's lights out and shooting my sperm into every cavity of her body while Kaia watched. Most nights it was just one-on-one, while Kaia would pause every now and again to suckle my cream out of a sweaty, limp girl's body. But sometimes there were two or even three girls joining us, and I would pass out from exhaustion and dehydration in the wee hours of the morning.\n\nBut while my lust was sated at night, I pursued Kaia with a romantic passion. I doted on her, showering her with gifts while we went to movies and dinners, going for walks and talking philosophy. And I melted through her Ice Queen persona and she became a very loving girlfriend. \n\nTrue, she was a control freak and she was still in charge most of the time (except whenever she wanted me to tie her up). But underneath everything, there was just a little girl who wanted tenderness and love. And she wasn't getting that from all the horny guys who just wanted to get in the pants of perhaps the most gorgeous girl on campus. So I gave her everything I had emotionally and backed off any sexual pressure. And I finally felt at peace in having someone like her by my side.\n\nOf course, that didn't mean I was going to ignore my lust or turn down the bevy of hotties she always introduced me to. I particularly enjoyed the times when she got so turned from watching that she would actually participate in our sexual romps (without me having to focus my effect on her), and I took every rare opportunity I could get to screw her until she saw stars.\n\nBut it was that sexual infrequency with Kaia that ultimately proved to be the best of both worlds for me. She didn't absorb my sperm frequently enough for her to build up an immunity to me. So our sex was always amazing. And she provided enough variety around me with her sorority sisters and friends that I was never wanting.\n\nIt was the perfect relationship for a guy like me.\n\n***\n\nThe academic year ended, and I conspired so that I wouldn't have to separate from Kaia for the summer before my third year (but her fourth and final year). I got a paid internship with Mrs. Robinson, and my parents were more than willing to let me stay at school for something I could put on my resume. Really, I didn't have to do any work but let Mrs. Robinson and Gabrielle run tests and sample my fluids. Meanwhile, Kaia stayed in the Sorority House for the summer and prepared for her senior year while spending every free moment being madly in love with me.\n\nNew pleasures started up once school had started. A cute girl named Marissa had been a freshman pledge the previous year, and now that she was a sophomore and a full sister, we were seeing more and more of her around the house and at various Tri-Delt events. She caught my eye pretty early on, not an easy thing to do when my girlfriend was as stunningly gorgeous as Kaia. But Marissa was growing up with a body to die for and a face that would give Kaia a run for her money in any beauty competition.\n\nNow I consider myself to be a tits man. Nothing makes me happier than big, round jugs, and Kaia's were fantastic. But what especially had my attention was Marissa's PERFECT ass. Tight curve, rock hardness, wonderful shape: it was the kind of ass that would convert a gay guy back to women.\n\nBeyond the smokin' body, Marissa had a clean-cut girl next door feeling about her. She came from Canada, and her down-to-earth personality blended easily with her light brown hair and simple, but pretty, features. She had large, luminous eyes, an easy smile, and an innocent demeanor. I couldn't figure out how she fit into the Tri-Delt's usual image of haughty elitists. To be honest, I'd always noticed her as a cute girl amongst the sorority sisters, but never dwelled upon her too much as Kaia always brought me delicious female delights, and we had a group of regulars who would join us for fun sexual romps.\n\nThat all changed one Friday evening, two weeks into the semester, when Kaia decided to play a little joke on me. The two of us were holed up in her bedroom, and after a heavy makeout and petting session we were both fully naked and itching to get it on. I cherished the few times we were alone together so I could make love to my goddess in private. But Kaia had other ideas. \n\nShe got up and darted away from me, a giggle on her lips and a wink in her eye. I followed after her, and she danced us around her room, always playing hard to get and teasing me with her jiggling naked flesh. I finally trapped her against the hallway door and pressing my body flush against hers, I captured Kaia's lips and we kissed with an excited energy like horny high schoolers.\n\nI had just lost myself to the sensations when Kaia suddenly moved away from me, and before I could react she'd popped the door, and then shoved me stumbling through and out into the hallway. I'd just barely turned around before I saw Kaia's grin and motion of the door slamming in my face.\n\nThe loud bang of the door shutting reverberated through the hallway, and caught the attention of two girls passing by. Marissa was one of them, a peroxide blonde in a black turtleneck the other. They turned around, and instinctively I dropped my hands to my crotch to cover my nakedness.\n\nI smiled gamely, certain that every rippling muscle as well as every bulge of fat on my body was on full display. And with my eyes still on the two sorority sisters, I gritted my teeth and reached out my left hand to bang on the still closed door.\n\n\"This isn't funny,\" I growled.\n\nKaia's musical laugh came back to me. \"It is for me.\"\n\nBoth sorority girls came back down the hallway and stopped right in front of me. Marissa called out, \"Kaia? What's going on?\" She posed prettily for me, flexing one leg and planting her hands on her hips.\n\nKaia's reply came back quickly. \"Marissa? Oh, goody. I was wondering who would be the first to come along and find him. Do what you want with him, but he has to stay out in public. Maybe the couches at the end of the hallway?\"\n\nMarissa's eyes glittered as she roved over my body. The innocent girl fa\u00e7ade melted away to leave only a slender, sultry vixen. Then she stepped forwards and seized one of my hands, leaving the other hand just barely enough to preserve what modesty I had left. And then she began to drag me down the hallway. \"I've heard so much about you.\" She looked significantly at her companion. \"Now we get to see if the stories were true.\"\n\nOur trio walked along, and behind my head I heard a door open, most likely Kaia coming out to watch. The embarrassment was soon leaving me, but would not go away for as long as I was the only one naked in a very public place.\n\nStill, I was still rather deflated when we got the little living area at the end of the second floor hallway. Marissa soon moved to rectify that when she sat me down and straddled my lap. She was still fully clothed in tight jeans and a cute top. Her hazel eyes stared deep into mine before she leaned in and kissed me rather experimentally.\n\nWe kissed for a minute, and the blood started heating up in my veins. And as I got aroused, I could feel Marissa's skin already getting hotter to the touch. She backed up, her eyes aflame. \"Nina? Can you help me with these clothes?\"\n\nThe peroxide blonde stepped up, her pale skin, pale hair, and pale blue eyes a stark contrast to the black turtleneck that molded to her full chest quite nicely. She reached down, cupping Marissa's perky tits first before going to work at her clothes.\n\nI looked past both girls to see Kaia leaning against a wall, wearing only a silk bathrobe but with her hand shoved inside the material so she could caress her own body while enjoying the voyeuristic view.\n\nMarissa had to step off of me to remove her jeans and had just gotten fully naked when Leanne rounded the corner and came upon our little group. She gasped, and then went straight to Kaia to ask what was going on.\n\nI switched my gaze back to Marissa's toned body, without an ounce of fat anywhere to be seen. Her tits weren't overly large, but they had a pleasant curve and pretty nipples. And her mouth was soon proving to be a warm, wet, heaven as she bent down, sucked my cock into her throat, and massaged my sensitive nerves with her tongue.\n\nNina, the blonde, turned to ask Kaia to help her out. And I felt my hips twitch when Kaia first extended her tongue and planted it into the back of Nina's throat before roaming her hands along Nina's body. At last, she began to help strip the hot blonde.\n\nLeanne, not to be left out, reached out to feel Kaia's wonderful curves and slip her own hands beneath the silk bathrobe of her friend.\n\nI was overwhelmed with visual imagery, and my heart began racing and picking up the tempo of the entire area. I looked down at Marissa's face, and she rolled her eyes up to look back at me while she feasted on my cock. And when my hands went to her shoulders she got the hint and crawled up my body, kissing me first before settling her hips above my erection.\n\nI held myself in position for her as this young thing spread her thighs and began to lower her body onto me. I looked down to see her bare-shaven pussy lips, glistening with moisture, rubbing and parting slowly to allow my monster access to her slice of heaven. Once the head nudged through her opening, I gripped Marissa's ass and pulled her down and deep onto my body. And then Marissa took up the rhythm of plunging downward and then retracting back up to start again.\n\nLooking over, I saw Leanne and Kaia getting naked and crawling onto a couch to play with each other and enjoy the view.\n\nNina's naked body, and especially her round D-cup tits, joined me and Marissa. She pressed her bosom against Marissa's bouncing body and pulled Marissa's head towards her own so they could French each other with a wonderful display of tongue gymnastics for my viewing pleasure.\n\nI leaned into their kiss so all three of us could make out while Marissa continued to bounce on my dick.\n\nIt was no surprise when two more people came around the corner, a couple this time. Perhaps the guy was a boyfriend or perhaps he was just a Friday night date and they were heading for a bedroom to get laid, but the couple was already visibly aroused before they even got to us.\n\nThey stopped and watched, leaning against a wall. My effect was pulsing out of me so hard I could actually feel it expanding from my body on a metaphysical level, and soon the new girl was moaning and her hand was in the guy's pants rubbing at his dick. Finally, the girl just dropped her panties and flipped up her skirt, bending over one of the couches with her pussy on full display.\n\nThe guy's eyes bugged out in disbelief, but didn't let his shock stop him from freeing his cock and sinking it into the warm snatch of a willing girl.\n\nEveryone else in the room was watching this new development, and I heard Kaia squeal out her climax. She seriously got off on watching. And Marissa was panting non-stop in my ear as I ground out every millimeter inside her pussy.\n\nI leaned over to kiss Nina and tongue-wrestle with her, but in my hands I could feel Marissa getting close. My fingers had been playing around Marissa's ass for the last few minutes, and everytime my fingertip passed nearby to that wrinkled rosebud she had whimpered in anticipation. So now as her hips began to accelerate in tempo, I popped a finger through her asshole and then Marissa was crying out and gyrating her hips excitedly as the orgasm ripped through her body.\n\nI followed her a second later, and jackhammering Marissa's body along my shaft I finally blew a torrent of cum up and into her light body. My orgasm mentally detonated out of me as well, and the chorus of seven people wailing in ecstasy filled the room all at once.\n\nWhen we finally chugged to a stop, I moved Marissa over so she could sit down on the couch and loll her head back to recover. Having conquered her, I took charge of the situation and parked Nina on all fours in front of Marissa, Nina's blonde head between Marissa's knees and her round ass pointed back at me.\n\nI leaned down to tongue at Nina's moist pussy lips and pressed two fingers inside of her while also pressing Nina's head at Marissa's gaping slit, still oozing white globs of my cum. Nina got the hint and leaned into to eat out her friend, and I luxuriated in seeing two such lovely ladies pleasuring each other.\n\nLeanne had also gone to join the other couple, and had the other guy's dick embedded in her cunt while she ate out the other sorority girl. That left Kaia to finally walk up and kiss me while my fingers still plunged in and out of Nina's folds.\n\nShe reached a hand down to revive my spent soldier, and after a few minutes of playing with her tongue and feeling her fingers tickling my balls, I was ready for round two.\n\nMarissa screamed out a new climax from Nina's expert tongue-work, and then I got to my knees behind Nina and leaned my erection forward. Kaia went to the couch to join Marissa. For some reason, no matter how many times I saw two gorgeous women slipping each other some tongue, I was always enraptured by the view. And watching my goddess of a girlfriend frenching this sweet, young thing I'd just fucked was sending my brain into a tailspin. And my arousal was not wasted as it picked up every other female another notch towards ecstasy.\n\nNina certainly wasn't that tight, but she really knew how to use her inner muscles. I leaned back to hammer my cock in and out of her with long strokes at first, then lowered my chest against her back to grip her tits and grind her with short thrusts. And when my fingers squeezed down on her clit, Nina's whole body shuddered once, violently, as her orgasm swept through her.\n\nI rode out the waves and kept up my pumping motions, getting a good grip on her hips to really start pounding Nina's hot asscheeks. All seven of us kept up a loud riot of sex, and another male/female couple walked by and decided to join in with the new girl giving her boyfriend a sizzling blowjob while he watched the orgy before him.\n\nAfter a few minutes or so, I could instinctively feel Nina's second climax approaching. I redoubled my efforts, intent upon giving Nina the fuck of her life as I pistoned in and out of her pussy as hard and as deep as I could. She backed her head away from Marissa, leaving the young sophomore and Kaia alone to play with each other, and she simply let her head hang down between her shoulders as she was subjected to the sensations I was forcing on her.\n\nAll at once, Nina's body locked up, and at the same time I felt my balls loosening. I pulled out at just the last moment and several cannon-shots worth of jizz blasted out, spraying Nina's ass and lower back with my cum. She threw her head up to moan out her climax and let out a wobbling wail as she felt each splash of semen hit her red-hot skin, and when we were both done she collapsed flat on her face, her knees buckling to nearly pass-out on the floor.\n\nKaia slipped off Marissa and moved to lick and tongue at Nina's worn body. I watched her slurping up white trails of semen, coating Nina's asscheeks with her saliva and darting her tongue into Nina's asshole from time to time. She looked to Marissa to join her as well, but Marissa had other ideas.\n\nThe young sophomore's eyes glittered right at me, and once Kaia started in on Nina she leapt off the couch to tackle me flat on the floor and kiss me before crawling lower down my body and take my limp dick into her mouth again.\n\nKaia then came over and the two of them helped get me sitting on a couch once again, and I enjoyed the sight of them French kissing each other with my re- energizing erection trapped between their lips. The two of them continued to give me a dual blowjob and pleasure each other, until I'd finally gotten a third stiff dick and Kaia kissed me before moving her hips up.\n\nI'd blown two wads and fucked two heavenly bodies only recently, but the notion of screwing Kaia was still my idea of paradise. I was more excited than ever, and Kaia looked back over her shoulder to see my smile as she faced away from me and began to lower her body down across my hips.\n\nMarissa held my cock up for me until Kaia's pussy began to wrap around it, and then she leaned in to take Kaia's perfect tits into her mouth. With Kaia's back to me, I leaned in a nibbled on her shoulderblades while my hands moved her hips into just the right position. And once I knew I was lined up, I bucked my hips up and speared Kaia's tunnel in one thrust.\n\nHaving cum twice already, I knew I could make this last as the three of us gyrated together. Kaia was springing up and down my shaft, her pussy tightly clamped onto the hot rod buried inside of her and letting the couch cushions help her up and down motions. Her body was hunched over away from me as she focused on the pleasure wreaking havoc through her nervous system, but I couldn't see the expression on her face. But I could watch as Marissa would alternately kiss at Kaia's lips, neck, and bosom, and then I saw Marissa shriek in surprise when Nina woke up and shoved three fingers deep into Marissa's pussy.\n\nI read all of Kaia's sexual signals perfectly, after much practice, and when she started getting close I poured my mental energy into Kaia's pleasure centers and seized her hips to jack her in my lap with harder aggression.\n\nShe was kissing Marissa when the climax overtook her body, and she moaned with wide open lips directly into Marissa's kiss, and Marissa took the opportunity to shove her tongue town Kaia's throat in the middle of the big O.\n\nAnd I took the opportunity to lift Kaia's body off of me, leaving my erection coated in a thick layer of Kaia's orgasmic fluids. And while she was still whimpering out her orgasm, I re-aimed myself and slammed Kaia's body down, my pecker splitting Kaia's asshole and sinking my entire length deep into Kaia's bowels.\n\nShe screamed out in mixed pain and pleasure and tripped off into another orgasm right away, howling at the world while I fucked Kaia's ass. She may have gotten this whole orgy started. But I was in control now.\n\nMarissa moved herself down at our feet until her face was in Kaia's stretched- wide pussy, eating her out with abandon while Nina flipped onto her back and nudged her head between Marissa's knees so she could lick upwards into Marissa's crotch.\n\nThe heat and tightness of Kaia's ass was nearly unbearable for me, and my brain raced to find something else to think about and help delay my final release. I decided to focus my mental energies in reaching out to every girl, now six of them fucking each other around me. And as the pleasure built up into a steady pressure inside my brain, so did the pleasure increase in all of them.\n\nI was grunting with the exertion, my mental energy expenditure making me wear out that much more quickly, but I could feel the sexual tension tightening in the room until there was nothing left but to explode.",
        "All at once, I felt the sperm exit my balls and enter into my dick's tunnel and head for release. But in between that microsecond and the jizz flying out of my pecker's tip, I heard all six girls wailing out in absolute ecstasy. Kaia shrieked at the top of her lungs as she began to discharge her honey into Marissa's face. Marissa moaned into Kaia's pussy as she squeezed her thighs around Nina's head and poured out her own nectar down onto her friend. And Nina even climaxed despite the fact that no one was even touching her. Leanne and the two other girls also screamed out in pleasure, and at last my cum was pouring out of my shaft and splattering against the insides of Kaia's ass over and over and over again, until I was completely drained and Kaia's anal chute was completely plugged. She'd be shitting semen for days if I had any choice in the matter.\n\nAnd when it was all over, my brain was fried in a very pleasing way. And when Marissa and Nina both came over to kiss me and glow about how that really WAS the best sex of their lives, I knew Kaia and I had two more regulars to look forward to.\n\nInexorably, the mental drain caught up with me the way it always did after such a concentrated \"effect\" action. I'd made six women climax simultaneously. The creeping blackness clouded my eyes, and I surrendered myself to the bliss of unconsciousness.\n\n***\n\nCHAPTER 9\n\nThat academic year flew by, and I got laid more times than I could count. All too soon, Kaia's graduation was only months away, and she was deciding on a career path. I started to worry about what would happen between me and my first long-term girlfriend. But in the meantime, we simply enjoyed the time we had, and the abundance of female flesh we were both able to acquire.\n\nI was walking hand in hand with Kaia just before sunset, enjoying the fresh air and talking with her about anything and everything. We cruised through the park while she vented some frustration at her latest hang-up. Kaia still had her anal retentive personality that demanded order and planning in her life, and made her extremely high maintenance when things were out of her control. On some level it was annoying how easily she could get pissed, but at the same time it was the obvious passion and determination she put into everything she did that really attracted me to her on a personal level. Here was a girl who exuded confidence and certainty, a natural charisma that helped to explain why she had so many people in her orbit who were in search of a direction in their lives.\n\nWe had just rounded a bend and were heading back towards Kaia's place when a running figure caught my attention, already familiar at this distance. The brunette hair was pulled back into a no-nonsense ponytail, and then I was able to make out the elfin features of Mrs. Robinson, running to catch up to me.\n\nOut of breath, she finally managed to scold me, \"You're not picking up your phone!\"\n\n\"I'm busy,\" I gestured to my girlfriend. \"She needed to talk to me.\"\n\nMrs. Robinson rolled her eyes, and Kaia look a little annoyed but kept her mouth shut, curious as to what my Biology professor needed from me.\n\n\"I need you back in the lab, as soon as possible.\" Mrs. Robinson bent over, huffing still. She was in good shape, but the Bio Lab was a mile away and she must have sprinted the whole way.\n\n\"What's going on?\"\n\nMrs. Robinson stood up just long enough to grin at me. \"I think I've got it.\"\n\n\"The antidote?\" I was suddenly a little worried at the idea of losing my power.\n\n\"No, no. Something MUCH better, if I can just find the right way to market it.\"\n\nShe had my curiosity piqued.\n\n***\n\nWe dropped off Kaia at her place and then I drove Mrs. Robinson back to the lab. Mrs. Robinson was giddy with excitement and it was hard for her to keep still. We went into her office, and she pulled up a video file on her computer.\n\n\"First off, I created this mixture and went to test it.\" On the screen, Gabrielle was depositing several drops of a pink liquid into beakers, presumably the ones with the synthetic fluid mixture of female arousal. Almost immediately, ripples appeared on the surface.\n\n\"After several rounds of refinement, we finally got to this level.\" Mrs. Robinson switched to a new video, and now the second round of pink drops made the beakers start bubbling. \"It's stable, but very concentrated.\"\n\n\"Then, we got to this stage.\" The video showed Mrs. Robinson spraying what looked like a perfume on Gabrielle while she had various electrodes hooked up to her. Almost immediately, the heart rate monitor spiked, and then her cheeks flushed red and she started panting. The video cut out just before Gabrielle managed to shove a hand down her pants. \"It wears off rather quickly, so it's not marketable.\"\n\n\"Now, we were looking for the third and ultimate stage. It took every drop I had left of your blood to make this cologne.\" Mrs. Robinson pulled out a compact flash memory card, suitable to a digital video camera. She kept talking as she popped the card into the computer and waiting for the system to respond. \"We selected a suitable male test subject, and then sent him into an appropriate experiment location.\"\n\nShe loaded up the memory card, and started the playback. The image was a little grainy and looked to be from a hidden camera mounted on the male subject as he walked into a familiar bar. There was no audio. Mrs. Robinson turned to me, \"You've seen the commercials for the Axe effect? Or Tag body spray? Well, this is REAL.\"\n\nThe moment the man walked in, many of the girls within sight turning to look at the newcomer. More than one appeared to be sniffing the air. The subject went to the bar, ordered a drink, and almost immediately found a convenient woman for conversation. Mrs. Robinson's voice cut into the silence as I watched the pretty blonde flirt with the subject. \"It's a custom mix. There's the synthetic hormone stimulant that's based on your effect, but it bonds to the male's natural pheromones so the girls are specifically attracted to the subject. It's no longer just a general aphrodisiac.\"\n\nWe watched for another minute before the girl finally shot our subject down, and he turned away in search of further prey. \"The cologne gets her attention on you, and helps with stimulation. But it's not a miracle and you still gotta earn it,\" she explained.\n\nWe continued watching until the subject succeeded in seducing a second girl, and Mrs. Robinson stopped the playback explaining that the test subject turned off the camera once he got his girl to the bedroom.\n\nMrs. Robinson fixed me with a grin. \"Congratulations, you're now the basis for the only real aphrodisiac on the planet.\"\n\nI was a little stunned. I never really thought that sort of thing would be possible. But then again, a guy who could get women turned on with his mind was also a rather strange concept.\n\n\"So, I need another blood sample.\" And Mrs. Robinson whipped out a needle half as long as my arm.\n\n***\n\nIn the meantime, graduation was just around the corner and Mrs. Robinson had to set up the latest chemical mix.\n\nKaia's best job offer would take her out of the state into one of the big cities, and regretfully we agreed to break up with the Graduation. She had been my first love, the first one I'd ever felt an emotional connection with and a reason to give my heart away. It was a warmth she had returned to me with fervor, and she displayed a tenderness with me that had always been for my eyes only. She may have been the Ice Queen to the world, but she was nothing but warm and accepting for the first boyfriend she ever really cared about.\n\nBut we were young, and we both knew our relationship likely wouldn't last forever. If we were meant to be together, we would find each other again someday.\n\nJamie, Leanne, and most of Kaia's other friends were also graduating and moving on. So on the same day, I not only lost my breathtakingly gorgeous girlfriend and most of her wonderful fuck-buddies, but I also lost that loving and anchoring romantic presence in my life.\n\nTwo weeks after the academic year ended, Mrs. Robinson quit the University and created a new startup company with me to patent her formula. She was the brains behind the outfit, but I was a rather necessary ingredient. I would be a partner in the company, but I was staying in school for the next year at least to finish my degree. Gabrielle conveniently graduated with her Master's degree and joined the company as its first employee.\n\nTwo weeks after that we had our first meeting with a prominent venture capital group. Understandably, they needed a demonstration of the product in order to be convinced. The VC team was rather skeptical of a new wonder aphrodisiac, and only Mrs. Robinson's credentials had even gotten us this far.\n\nThe demonstration was set up at a singles bar in a neutral city an hour's drive away from the school. The venture capital team went inside first, discreetly mixing with the crowd and would then return with a list of three female candidates that our male subject would have to go in and attempt to seduce. They used Mrs. Robinson's hidden camera and then identified the three girls for us.\n\nWe had agreed to the test, but Mrs. Robinson wasn't going to risk this on an unknown male. The VC team didn't know the source of our cologne formula, so we stacked the deck by sending ME in as the male subject.\n\nFor a moment I felt guilty about what we were doing. But then again, I was single once again, and it wasn't like I would be forcing anyone to do something against their will. If girls got aroused, and they wanted to do something about it, that was their choice. Still, I knew that with my own lustful effect in combination with the cologne, this challenge wouldn't be difficult at all.\n\nJust like in our previous test, many a female eye was on me the moment I walked in the door and gave the cologne a second to permeate the room. I began scanning the place, looking for the target women while I headed to the bar. Finally, I was 21 and old enough to legally buy alcohol. And once the first vodka burn passed down my throat and I really got an eyeful of cleavage in push-up bras from the various hotties around me, it was an easy matter to get my adrenaline (and thus my effect) racing.\n\nOnly a few minutes after I'd arrived, arousal levels had significantly gone up in the female population of this bar. And I decided to head for the girl I thought would be the easiest. I liked a challenge, but this was a serious amount of money we were talking about.\n\nShe was a cute, perky girl. Little black cocktail dress, short blonde hair tucked behind her ears. She fit the profile of a Sex and the City fan out on the town looking to get lucky. And two of her hot friends were clearly on the arms of their male dates, while she was left lonely.\n\nI'd picked up many a girl at social events, and this one went just about the same. Her name was Penny, and once she got a whiff of my cologne, her eyes simmered and I already knew that I had her. I bought her a drink, her friends made excuses to disappear, and we made small talk for ten minutes. All I had to do was walk out of the bar, take her back to my hotel room, and it was Mission Accomplished. The hidden camera had audio, and I knew my lame pick up lines wouldn't have been enough to seduce this girl. So the venture capitalists would have to believe it was the aphrodisiac doing the heavy lifting for me.\n\nBut now, my ego had been inflated and I wanted to aim for more. I glanced to my left to see targets 2 and 3 had both ended up at the bar nearby to each other, and my mind raced as a new plan formed in my head.\n\nI tugged Penny over to the bar, saying that we needed to get her a refill. She whined that I just wanted to get her drunk so I could take advantage of her. I told her, quite honestly, that she didn't have to be drunk for me to take advantage of her.\n\nBut we went over and a female bartender immediately zeroed in on me to take my order. My arousal levels had kicked up another few notches with the excitement, and Mrs. Robinson's wonder-mix had both new targets, and a few others, staring right at me.\n\nWe got our drinks, and I pointedly ignored both new target girls, really just to get their attention. Instead, I leaned over Penny and with careful coordination, spilled just a few drops of my drink onto her bare chest.\n\n\"Oops, I'm so sorry, let me clean that up.\"\n\nIt was sophomoric, and rather risqu\u00e9, but Penny just giggled when I dipped my face to her chest and tongued up the spilt liquor from near her collarbone. I only wished I'd gotten closer to her cleavage. And the moment my tongue hit her skin, Penny moaned erotically right into my ear, and I felt a surge of hormones pop up in me and a chorus of sighs sounded off around me.\n\nI could only imagine what the venture capital team was making of this as they saw a bevy of women getting visibly aroused in my general presence. Every girl in there was getting hot, and they were getting hot specifically for me. And it was at this time that the claws came out.\n\nTarget #2, an athletic-looking tomboy with a light brown ponytail actually tapped Penny on the shoulder and wondered what a slut like her was doing in this bar. She had strong cheekbones and a well-sculpted body, with an angular attractiveness to her face. \"Hell, you're not even worth a guy like him.\"\n\nI was immediately on the defensive, separating the two of them and trying to calm down the situation half-heartedly. Penny, however, was already responding. \"What, like a soccer-dyke like you would be woman enough for him?\"\n\nI saw the rage flicker through Target#2 and for a brief moment I zeroed in my effect right into her, to see where this was going. Automatically and without any foresight she answered, \"Hell yeah.\" And she leaned over and planted a fat kiss right onto my lips.\n\n\"Hey!\" the voice came from someone else, a random girl standing by and looking at me dreamily. And she stepped in to pull Target#2 off of me. This set off a light shoving match and a few angry words before a male bartender yelled over everyone to calm down. He didn't have a clue what the hell was going on.\n\nI noticed Target#3 leaning off to the side, a gorgeous, raven-haired woman who seemed perhaps 10 years older than me, but with a Monica Bellucci-esque body that men would kill to possess. She remained strong and silent, above the pettiness of the younger girls, but still her laser gaze was right on me.\n\nI shrugged, as if feeling rather above the squabbling of the little girls throwing themselves at me, and I stepped away from the bar in a beeline for the gorgeous woman in the corner, her slinky dress and huge tits calling out to me. I'd already seen her brush off two guys like mosquitoes, but I knew she wasn't going to be turning me down.\n\nI took her hand, then bent to touch my lips to her knuckles, and introduced myself. I threw her a line, a rather cheesy one, but she smiled beguilingly at me. And so I begged for her name. \"My name is Olivia.\"\n\n\"Olivia. What do you say we get out of here and have a glass of wine in my hotel suite?\"\n\n\"That sounds lovely.\"\n\nAnd so with this gorgeous woman on my arm, I headed for the exit. Penny intercepted us and whined, \"What about me?\"\n\nI glanced at Olivia for a moment, but her face was a complete mystery. I decided to go for broke and just said, \"Well, if you can handle the competition, perhaps you can join us.\"\n\nSo Penny slipped onto my other arm. Bagging two of the targets would HAVE to impress the venture capitalists. And we once again moved to the exits.\n\nBut once the gaggle of girls figured out I was open to more than one, there were three others begging to join in and promising to do anything. Target#2 was in the group as well, and picking her out from the group I finally asked for her name.\n\n\"Quinn!\" she called out, full of hope. Damn these girls were horny. \"Quinn may join, but I'm afraid that's all a man like me can handle.\"\n\nAnd so I waltzed out of the bar with all three targets, leaving behind a group of disappointed ladies. It was as if they knew they were missing out on the most fantastic sex of their lives. But I only had the biggest grin on my face. We'd spared no expense for this demonstration, and Mrs. Robinson had a limo waiting for us when we came out. A large hotel suite would be just around the corner.\n\nInside the limo, I finally leaned over and tasted Olivia's spicy lips. Penny whined, but I told her that she and Quinn would have to wait in punishment for starting a catfight in the bar. I promised I would take care of them, but they'd have to delay their turn. That is, unless they could find a way to make it up to me.\n\nQuinn interjected, \"Well, what about this?\" And she turned to plant a sloppy, wet kiss on Penny's lips. She'd obviously done this before, but Penny shrieked in surprise, although she didn't quite pull away from Quinn's touch.\n\nStill, the kiss was a hot enough sight to get my blood racing, and I watched the inhibitions in Penny's face melting away as Quinn kept up her assault. And just when Penny started moaning back into the kiss, Quinn pulled away and fixed me with a glare. \"Want to see more?\"\n\nOlivia could attest to how much more I wanted to see. Her hand was wrapped around my hard-on through my pants, and it was trembling in her grasp. I finally said, \"You two keep that up and then I'll fuck you so hard you'll pass out from too much pleasure.\"\n\nPenny grinned at that thought and she was the one to tackle Quinn against the cushions and began making out with her feverishly. And I turned to spar with Olivia's tongue once again. We got to the hotel all too soon, and I was momentarily disappointed that we had to get out. But then, I was looking forward to the ecstasy waiting upstairs.\n\nThe four of us stumbled through the lobby and paired off again as soon as we got into the privacy of the elevator. And it was all I could do to pry myself off of Olivia's dynamite body to get the card key into the door.\n\nPenny gasped at the opulence once we got inside. It was a setting made for seduction, with panoramic views through the floor-to-ceiling windows, large hot tub, and oversized bed. I knew the four of us would fit comfortably on it, and yet still snuggle close together if I had anything to do with it. And unlike our previous test, I left the hidden camera on, positioning my jacket so that the lens had a wonderful view of the bed. I knew Mrs. Robinson would stop the playback shown to the venture capitalists eventually, but I also knew that she and Gabrielle would enjoy watching me ravage the three hotties I'd be soiling the bedsheets with.\n\nMy mind was racing with desire, an emotion mirrored in the eyes of my three beauties. I was desperate to get Olivia's dress off, and she did not disappoint with the laciest, most erotic lingerie I'd ever seen. Her huge tits were spilling over the top and her garter set called my attention down to a neatly trimmed pussy. She wasn't even wearing panties.\n\nQuinn and Penny stripped each other, and one sport thong and one g-string went flying off into the corners. The two of them fell on the bed first, rolling around in a whirl of brunette ponytail and short blonde hair flying around. Only minutes ago, it seemed they were ready to tear each other apart, and not in a good way. Now, they were attacking one another in lustful fervor. Quinn managed split Penny's naked body before her, and ducked her head to taste what promised to be a very sweet pussy.\n\nAs for Olivia, I freed her bounteous bosom to the open air, and even Quinn paused to stare in admiration. Olivia was a woman of few words, instead remaining smokily mysterious. But once I got my fingers into her, she was as wet as any other woman and her low moans were a melody in my ears.\n\nI sat at the edge of the bed and pressed down on her shoulders. Olivia got the message and knelt before me. I felt a rush of power seeing this imperious lady kneeling at my feet, and when she extracted my erection, I was giddy with anticipation.",
        "Gently, she stroked along my length with her tongue, and then placed the banana-bent member in between her round tits. I was then surrounded by her warm flesh as Olivia began to titfuck me, an exquisite pleasure capped with her tongue snaking out to tease the crown.\n\nI glanced to the side to see Penny staring back at me, completely in wonderment at the concept of another woman eating her out. Her perky tits stayed upright, firm B-cups barely sagging despite being flat on her back, and she tickled her own nipples with one hand while the other one pressed Quinn's head down into her crotch. And when Penny's eyes squeezed shut and she whimpered out her climax, I felt a desperate desire to bury my cock deep inside a warm pussy.\n\nI lifted Olivia up, kissing the mouth that had just been teasing my cock and I spun her around onto the bed. I lay her body flat on her back and her voluptuous body stretched out languidly as she sighed in relaxation, her limbs artfully skewed across the bedspread.\n\nI climbed atop her, kissing my way from pussy and around her voluminous tits, then finally to her face. And with her legs spread wide for me, my dick entered her flaming hot pussy at the same time my tongue entered into her mouth. She gasped happily into our kiss, feeling my thickness splitting her wide open. And planting my palms onto those gigantic globes of heaven, I gripped her tits tightly while I began to fuck her in earnest.\n\nMeanwhile, Penny and Quinn had switched places, Quinn sitting up against the headboard while instructing her little friend in the art of cunnilingus. The perky blonde was taking to it quite happily, licking and munching with giddy excitement.\n\nOlivia's pussy was a warm, wet paradise. I had also been so revved up from the ride over that I could feel my control slipping away far too quickly. So moving my grip to Olivia's hips, and laying my body flat against her, I grinded myself into her crotch and tongue Olivia's neckline until I felt her involuntary spasms spreading across her body. And at the last moment, I finally felt Olivia jerk once, and then I was pouring out my cum juice while she quaked with her first climax.\n\nWe thrashed around together with the springiness of the bed, the roiling pleasure of our simultaneous climax surging into our brains while my effect had Penny and Quinn moaning up a storm to join our aural outburst. And what felt like a gallon of jizz kept blasting inside of Olivia's box until I could feel it overflowing out around my base.\n\nSpent for the moment, I rolled over, lazily slurping an erect nipple into my mouth while enjoying the wonderful ache in my muscles after an enthusiastic fuck. Penny and Quinn had stopped to observe our aftermath.\n\nOlivia's eyes were on pretty Penny, and she beckoned to the girl in a husky voice. \"Come here little one.\"\n\nPenny's eyes wavered for a moment, but she came obediently and moved where Olivia directed her. And so Penny ended up facedown on the bed between Olivia's spread legs, her face in Olivia's crotch so she could suck out our mingled juices which were oozing out of Olivia's body. But this also left Penny bent over at the waist, her feet planted on the ground.\n\nQuinn eyed me for a moment, but then her gaze went down to my half-hard erection, still coated in cum leftovers. Seeing a chance to finally get a piece of me, she went around until she was next to me and could take my pecker into her mouth. I could tell instantly that while Quinn liked girls, she was definitely no pure dyke. Her expertise at blowing me had me hard again in moments, and with a satisfied slurp she began to bob her head up and down my fully erect shaft.\n\nBut then her eyes drifted over the Sapphic coupling beside her, and especially Penny's tight ass poking out over the bed. She tugged me off the bed silently, and moved me behind Penny into position herself.\n\nPenny was lost in her own world, deliriously happy at drinking down the cum I'd deposited into the raven-haired beauty. So she didn't even realize what was going on while I split her legs to the side and before she knew it, I'd rammed my cock all the way into her gaping pussy.\n\nPenny threw her head back in surprise and screamed at my penetration, but I was already pumping her quickly and her whole body shook with each slam of our hips. And she could no longer pay attention to what was in front of her while I fucked Penny silly from behind.\n\nQuinn slid over to Olivia and straddled her head. I looked up to see Quinn grinning as she lowered her steaming snatch to the gorgeous woman's face, and then Quinn let her head roll back as she soaked up the sensations of Olivia's tongue buried into her tight tunnel.\n\nPenny was flat against the bedspread, just taking all the punishment I could dish out upon her petite body. She started wriggling her hips even harder at me, seeming to really get off on my utter control. So when I planted a hand on the small of her back and pinned her to the bed, she whimpered and climaxed as I continued to fuck her down.\n\nI was getting a serious high off of watching my dick piston in and out of Penny's tight pussy, the perky globes of her ass staring back at me. And without further thought I pulled myself out, my pecker soaked in orgasmic fluids, and gripping Penny's asscheeks in my hands, I pressed the tip against her asshole and forced my way down.\n\nPenny screamed louder than anything I'd ever heard as my cockhead popped through and the shaft began its descent down her backside passage. But then immediately afterward I felt the splash of fluids as she climaxed, actually squirting out and dribbling feminine nectar down her legs. And then roughly I began to really ride her little body, my cock violating her deepest recesses as I split Penny's rectum in half and fucked her with abandon until at last I released and plugged Penny's ass full of my sticky juices.\n\nPenny shrieked out a new climax, and her whole body shook like an earthquake until finally her eyes just rolled over and she passed out completely, her body unable to handle the pleasure.\n\nOlivia and Quinn had moved into a sixty-nine while I was reaming out Penny's asshole. I left Penny's used and abused body on the bed, and then pulled myself up and out of her ass right next to Quinn's head. And with a gleam in her eyes, Quinn just reached out and began sucking on my spent cock again.\n\nMy mind raced with the nastiness of what she was doing, but she just smiled around my cock which was becoming erect again with remarkable speed. But I was tired, and I moved until I could collapse onto my back across the bed. Quinn followed me, and then ducked her head back down to continue her oral attention. And so after a few short minutes of exquisite blowjob, I was happily erect once again and Quinn simply got up and mounted me in one thrust.\n\nOlivia was right beside us, kneeling next to Quinn and kissing her ferociously while Quinn pawed at Olivia's tits that we were all so enraptured with. And I did my best to make short thrusts upwards but I pretty much let Quinn's athletically toned body fuck itself upon my meatpole. Her six-pack abs were getting a serious workout as she humped and gyrated and bucked upon me.\n\nOlivia moved herself around until her head was between my legs, bending Quinn down to where I could reach Quinn's nipples with my mouth and extending her own long tongue down to my balls. I gave a big involuntary thrust up into Quinn's tunnel when I felt Olivia's touch, and then I was pumping even harder once Olivia began to seriously bathe my testicles in her mouth. And the effect was not lost on the athletic babe riding me for all she was worth.\n\nWhen Quinn sped up the pace towards her first coital orgasm with me, Olivia yanked back on Quinn's ponytail, arching her head upwards to the ceiling, and just when the orgasm overtook her, Olivia kissed Quinn's open wide mouth in the big \"O\", planting a new passionate kiss on Quinn's lips and swirling her tongue inside Quinn's mouth while I fucked the girl through her climax.\n\nI used Quinn's tight asscheeks to fling her light body against me until she came a second time, and in the end I finally blew my final load, erupting up into Quinn's body and embedding my sperm into her inner walls. And this time it was Olivia who slurped my jizz out from Quinn's box until we all rolled together in a naked pile of flesh to go to sleep for the night.\n\nPenny came alive again around 4am and complained that she never got to feel my cum in her pussy, only her ass. So she rode me for twenty minutes until I spurted inside of her and we could go back to sleep. Then around 9am all four of us finally woke up to start the day. I came twice more, once in Olivia's mouth and then the second up Quinn's asshole, before we all finally split apart and went our separate ways.\n\nI got three phone numbers and promised to use them if I ever came back to this city. But then I finally called up Mrs. Robinson to check in and get the answer I was hoping for. After all, this whole thing was set up so we could prove our product and start making some money.\n\nNeedless to say, we got our funding.\n\nNow any chemical development usually takes some time. If this were a pharmaceutical drug, we'd be stuck in development hell and FDA red-tape for seven years or so. But this was just a body spray, and Mrs. Robinson's lab had already completed most of the work. Still, we wouldn't have a product for a year at least. So Mrs. Robinson and Gabrielle got the company rolling with offices, staff, manufacturing, etc.. And while I drew a nice salary being a partner and all, it was time for me to get hit the books - and hit a few more college coeds before my time was done.\n\n***\n\nCHAPTER 10\n\nI didn't last long on the open market once school started up again. Literally, my first day back in the academic area I got propositioned five times by several very pretty girls. I was a big man on campus, with quite the reputation after bedding more than my fair share of beautiful women. While many had stayed away from me for fear of my Ice Queen girlfriend, now that Kaia was gone I was fair game once again.\n\nBut my time with Kaia had also spoiled me. I'd had a gorgeous bisexual girlfriend who had a willingness to share me around. I had an emotional outlet and a tender romance beyond the wild sex. And I could afford to be selective about finding a new girlfriend.\n\nOne might have suggested I skip the girlfriend step and just fuck everything with big tits that moved. But I always had my craving for affection and a pathway towards love.\n\nIn the end, I was caught pretty quickly. All it took was a smile from Marissa and a shy request that I take her out Friday night. She looked almost nervous in asking me out, and her innocence captured me now the same way it had first caught my attention last year.\n\nI had first-hand knowledge that she wasn't such an innocent little girl, and in fact could be quite the freak in bed. But her coy affection was intoxicating to me after all the brazen in-your-face sexuality of some of the girls trying to seduce me.\n\nOur first real date was sweet and romantic, without the pressures of sex. To be sure, I'd already fucked her a dozen times before, and knew the intimate details of every curve on her body. But this casual getting-to-know you dinner and conversation had me at ease. I had gone three months without Kaia, and truly missed the quiet romantic moments. But Marissa was so easy to talk to I felt myself falling right back into my old boyfriend habits with her. I wasn't aroused, but merely attracted to her on a personal level. Belatedly, I realized that my effect had never even gotten flipped to the \"on\" position during our entire date.\n\nIt was when I recognized how much I was enjoying myself without the crutch of my effect clouding a girl's mind that the wave of desire first hit me. It wasn't love, but it wasn't really lust either. Still, Marissa had me wanting her as much as I'd ever wanted a girl before in my life.\n\nAnd when that wave of desire washed over my mind, my effect turned on with full force. Immediately, Marissa sucked in her breath and let out a wispy pant, her eyelids fluttering as the hormones rioted through her brain. I took that as my cue to get the check. The waiter, quite ready for us to leave after our two hours of hogging up the table, was helping me in a flash, and then we were on our way back to the sorority house.\n\nExpectedly, Marissa wasn't about to let me just kiss her goodnight and leave. So she dragged me into the sorority house, where I was already a familiar face. Marissa sprinted up the stairs, holding onto my hand tightly as we raced past several familiar faces.\n\nNina's peroxide blonde head even turned and she whistled after Marissa with a triumphant \"Alright!\" Two other sorority sisters grinned at the two of us before we reached the haven of Marissa's bedroom, darted inside, and then slammed the door shut with finality.\n\nMarissa planted me against the door, providing a heavy thumping noise for all who wanted to hear from out in the hallway. And then we were tongue-wrestling for all we were worth.\n\nShe worked fast to get my pants open, and then dragging everything to my ankles she reached out and fed upon my hardening member. I'd already known her to be an expert at oral pleasure, but tonight's blowjob surpassed my wildest expectations. She was fast and aggressive, yet so soft with her touch. It was an incredible display of control that she could move her head and fingers so quickly without ever feeling harsh or overly pressing against my sensitive flesh.\n\nIt was the best blowjob of my life.\n\nMy knees were weak, and it was all I could do to remain upright against the door. And finally Marissa's whole head was bobbing back and forth so fast until she was fucking my cock with her mouth. And in the final moments, when my balls had tightened to iron cannonballs, she plunged forward and took my entire length down her throat until her eyes flashed and her lips were pressed up against my base.\n\nHer hands gripped my asscheeks and my hands gripped her head as I thrust my hips and howled my climax to the ceiling. A river of cum shot out of me and straight down into Marissa's belly, and she pulled back to stop from gagging to jack off every subsequent shot into her mouth so she could swallow every little droplet. Not a single bit leaked out, despite the heavy volume.\n\nWhen I was done, I slumped into the door again, just barely keeping myself from hitting the ground. \"Aw, fuck that was incredible.\"\n\nMarissa grinned at me. \"You taste wonderful. And I love giving head.\"\n\n\"It shows.\"\n\n\"Come on now.\" Marissa stood up and took my hand. \"It's time for you to return the favor.\n\nWe moved into Marissa's bedroom, kissing each other deeply so I could taste the slightly salty flavor inside her mouth. Very few guys would do this and it was even more of a turn-on for Marissa. We finally managed to strip each other, and laying her flat on her bed I paused to admire her fantastic body once again. The girl was impossibly slender, maybe only a 20-inch waist and similarly thin hips and chest, which made her full B-cup tits seem ever larger and perkier. Once before I'd been worried I'd snap her in half. But when she wrapped those long legs around my neck, all I could focus on was the wet pretty pussy before my eyes, narrow slit pointing the way through her bare vaginal lips.\n\nWith all my years of practice, I munched down and didn't lift my head until I counted three hip-shaking, ear-splitting cries of ecstasy. My tongue was sore after fifteen minutes and my face was fully coated with a fine sheen of fluids. But more importantly for my selfish desire, my cock was fully hard once again.\n\nI didn't bother to clean myself up, but merely stood up and slobbered all over Marissa's face while she giggled. \"It's your fault my face is wet,\" I told her. And she just laughed and licked my cheek in response. But then my hips settled between hers, and her face went dead serious to feel every moment of my cock burrowing down her exquisitely tight tunnel.\n\nMarissa clutched my body tightly against hers while we made love. And it truly was making love, the same way I felt mentally when I was with Kaia. It was so much more than the mindless sex (which is still VERY fun, by the way). Her legs intertwined with mine or crossed behind my ass to pull me deeper and tighter into her. My arousal poured out of me and directly into Marissa's mind, and she was moaning non-stop into my ears feeling the pleasure of the best sex of her life wracking her body.\n\nI nibbled on her neck and Marissa squealed, her legs clamping down around my lower back and holding me on top of her body as she rode out a new orgasm. And when she returned to the world of the living her eyes flashed at me again and she suddenly moved, rolling us both over and then positioning herself in a doggy style. Her knees were planted wide for me but her shoulders and head were flat on the pillows before her. Instead, she used her hands to spread those perfect asscheeks wide, beckoning me with an invitation she knew I would never turn down.\n\nMy dick was harder than steel, and leaning forwards, I gazed more upon the tight curves I was about to penetrate, a zillion wishes coming true. I've said it before, Marissa has the PERFECT ass. And she was offering it to me. So nudging carefully and applying some steady pressure, the crown popped through her sphincter and all at once I shoved every inch of my meat deep inside of her.\n\nMarissa growled, and with her cheek still pressed to the pillow, she chanted at me, \"Fuck me! Fuck my ass, baby!\"\n\nSo I did just that. I lunged forwards over and again, and once I held her hips in my hands, just circling the tip around her asshole before slamming myself all the way in again in one massive thrust, forcing a long \"Fuuuuuuuuuuuuck!\" out of Marissa's throat.\n\n\"Oh, shit yeah!\" Marissa cried out as I kept on plugging away at her, and very quickly I felt the cum boiling in my balls. I had only a few precious moments before I would explode, and I wanted to give Marissa so much more out of this.\n\nI focused my mental energies once again, remembering the trick I had used on only a few other occasions. I knew I would probably black out from the strain, but for this sweet, young thing before me, I knew it would be worth it.\n\nVisualize, and make it happen. And I did. Marissa's Ultimate orgasm lit off in her body, every nerve ending firing simultaneously. She screamed so loud I knew everyone in the house would hear it. And Marissa completely lost control. Her body flailed in every direction except off of my dick. Her legs spasmed, her arms waved, and her torso rocked as if she was having the worst seizure in the world. And me and my dick did our best just to hang on inside the spasming muscles of Marissa's anal passage.\n\nAnd towards the end of Marissa's massive climax, every muscle in my body went limp, and the floodgates holding back my orgasm blew open to release the current of thick, white cum to cascade through my shaft and fill up this heavenly creature. Marissa's climactic fluids splashed out of her body in a flood of nectar pouring down her legs and onto the sheets. And every single drop of sperm I had left in my body blasted out of my fire hose, very quickly filling Marissa's rectum to the brim until it began to dribble out of her and join the female cum already running down her body.\n\nMarissa collapsed onto her face, and after plopping out I collapsed next to her, face-to-face. She managed to stare at me, wide-eyed in utter amazement at what I'd done to her body, but then her eyes rolled straight back and she passed out, collapsing backwards across the bed, letting a river of mixed cum dribble out of her abused body.\n\nAnd the blackness took over, and I joined her in sleep.",
        "***\n\nMy dreams became vivid and real. This wasn't the jumbled riot of images. This was a heavenly vision. I was kissing Kaia, filled with complete peace. But then Kaia turned and began to walk away from me, and my heart sank with the realization that she was leaving me for good.\n\nShe had been my first real attempt at love and a girlfriend, despite all the wonderful sex I'd had before her. But as she went away, I saw Marissa walking towards us. Kaia stopped when Marissa reached her, and they both looked at me for a few moments. Finally, Kaia leaned in and kissed Marissa's lips softly, rubbed her cheek, and then turned away. Marissa and I both watched Kaia walking on until her form became transparent, and in the end she vanished completely.\n\nThe baton had been passed in some way. And Marissa walked up to me, pressing those same soft lips directly to mine. It was a strange taste, as if the essence of Kaia was still on Marissa's lips, and she was sharing that essence with me.\n\nI had adored the old girlfriend, but that did not prevent me from loving the new one. I realized I was already thinking of Marissa as my new girlfriend. Perhaps it was not fair to see her as a replacement for Kaia. Too many expectations to live up to in some ways. But it was also an advantage for Marissa as that mentality would let me open up to her so much more quickly as well.\n\nAnd as I dreamed of rolling around in soft fields of green grass, kissing and making love to sweet Marissa, I felt the warmth of pleasure wrapping around my body like a blanket.\n\nAnd when my eyes fluttered open into the real world, I found the warmth of that pleasure was very real. Marissa was kissing me awake with the wonderfully soft lips that I remembered so vividly, and I delighted in seeing her pretty face as I woke up. She looked like she'd already taken a shower, her hair still a little damp while she wore a simple bathrobe. And I also felt fresher, like someone had scrubbed off all the dried fluids caking my body.\n\nBut then another sensation caught my attention, and I glanced down lower to see a peroxide blonde head bobbing up and down in my lap, coating my erection in layer after layer of shiny saliva with a warm tongue. \"Uh, good morning Nina.\"\n\nNina's pale blue eyes flashed up to me, and she smiled with her face still stuffed with cock. Realizing my new state of consciousness, she got up onto the bed, showing off her round D-cups and wrapping the warm flesh around my rod for a moment before straddling and mounting my shaft, groaning happily as I penetrated deeply into her body.\n\nI groaned with her, then settled myself onto the pillow to comfortably look at Marissa, the sweet girl I was already falling in love with. We kissed briefly, but then she moved over to take one of Nina's heavy boobs into her mouth.\n\nI leaned my head back to enjoy the view, watching Nina's wet nether lips rise and fall around my shaft. Higher up her beautiful breasts bounced with every thrust, and especially her pretty face as she enjoyed feeling our bodies joined together.\n\nI watched happily as the two girls pleasured each other, rubbing lips against each other's skin and especially when Marissa moved up to let Nina suckle on her turgid nipples. And when Marissa hungrily returned to me I remembered that I wasn't dealing with Kaia's usual voyeuristic approach to sex. Marissa was just as eager to fuck me as her friend.\n\nSpeaking of Nina, I kept the hot blonde gyrating in my lap, my thumb flicking at her clit while I moved her hips in a wide circle with my erect pole in the middle. And I finally seized upon Marissa's light body and pulled her over my face so I could lap at the honey creaming out between her legs. This left both girls riding me and facing one another so they could continue their makeout session.\n\nAnd after both girls crested over into their orgasms, Nina lifted herself up to try something new. With a careful grip, she took my nectar-coated rod and held me in place until she was able to settle her asshole over my mushroom head. And with gritted teeth, she began to sink me up her backside with a constant pressure and a few wriggles of her hips. And with a sigh, she spread her knees to the side and leaned back until her elbows were planted on the bed astride my feet, leaving a gaping pussy wide open to Marissa's gaze.\n\nMultiple hot, bisexual, anal-sex loving babes who want to fuck my brains out. How could my life get any better?\n\nI enjoyed my paradise, and the ladies enjoyed the wonderful sexual buzz I radiated out into their minds. Nina was in absolute rapture feeling my cock splitting her ass and Marissa's expert tongue lapping at her cunt once Marissa bent over to eat out her friend.\n\nI'd gotten used to controlling my climactic effect, and when my balls coiled themselves, finally worn down after the tight constriction of Nina's ass muscles, I let my mind go and both Nina and Marissa cried out with joy, letting the pleasure course through them to share in my climax.\n\nAll together, we came. Marissa let her female cream out onto my face. Nina let hers out into Marissa's face. And I let my male cream issue forth and embed itself inside of Nina's anal lining.\n\nAfterwards, we stumbled into the bathroom Marissa shared with her next door neighbor (Nina), stepping into the shower to clean ourselves up with heavy petting and repeated latherings of soap. I finally got to kiss Nina a \"thank you\" for this morning's exercise. And we both looked forward to future encounters as well.\n\nBut in the end, Nina went back into her room and I went with Marissa into hers. All I had were my clothes from yesterday, but I was happy to hang around while she primped in the mirror to start the day.\n\n\"I think you enjoyed that,\" Marissa smirked at me, looking back at my reflection through the mirror.\n\n\"Of course.\"\n\n\"Even though you didn't actually get inside me?\"\n\n\"Well, I was hoping we'd still have more opportunities in the future.\"\n\nShe didn't take long to get ready, her natural beauty shining through what little makeup she did put on. \"You will. If you really want to.\"\n\nI held open my arms and let Marissa come join me in a warm hug. \"Yes. I do.\"\n\nShe kissed me and giggled, the innocent girl back in her face. \"So you really like me? Not just as a piece of ass?\"\n\n\"Well, I do have to admit you've got a dynamite ass. But yes, I really like you, and I'm really hoping we can find more time together besides just having sex.\"\n\n\"Wow...\" Marissa really did look thrilled, surprised, and awed all at the same time. \"So I'm like, the new Kaia?\"\n\n\"Well, if you want to think of it that way. But yes, Marissa. I want to see where this goes. I do have to admit, I'm not exactly the monogamy-type. But you will be the one and only one I call my girlfriend.\"\n\nMarissa's eyes lit up, and her skin reddened from an arousal that had absolutely nothing to do with my effect. She was giggling like a little kid again, and I was suddenly overcome with a desire to see her in pigtails and a Catholic schoolgirl outfit. But Marissa simply launched herself at me and began to strip my clothes off once again.\n\nShe paused from devouring my face for only a moment to say, \"You know, I actually called Kaia last week to make sure she was okay with me going after you. She did warn me that you were too much man for any one girl to handle, and that I was better off finding fresh sex partners for both of us rather than letting you loose on the general population.\" And then she kissed me again. \"But right now, for at least the next couple of hours, I want you all to myself.\"\n\nShe didn't make me regret it.\n\n***\n\n\"Red\" body spray was selling, and fast. After a pre-release in a few select markets, word had hit the street that here was product that ACTUALLY worked. We licensed it out to several high-end retail shops, placed right alongside decent colognes like CK and Ralph Lauren to lend a bit more credibility. And the stuff was flying off the shelves. We were going to be rich.\n\n***\n\nNEXT PART 4 "
    ],
    "authorname": "bluedragonauthor",
    "tags": [
        "mff",
        "anal",
        "aphrodisiac",
        "sorority"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-ultimate-playboy-pt-03"
}