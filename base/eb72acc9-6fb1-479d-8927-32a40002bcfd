{
    "title": "Hunting the Hunter Ch. 05",
    "pages": [
        "Once bitten, twice shy.\n\nThat's how it went right? Well... it was true enough, but biting he could handle. In his case it was more like, 'once nearly hacked to death with swords, twice shy of said swords.' Didn't quite trip off the tongue in the same way though, did it. Feric huffed.\n\nNormally he wasn't one to be wary of a fight, and he could say with absolute and confident certainty that Inanna wasn't either. To be honest they both reveled in it most of the time. He could read it in her eyes and body, and saw that she got the same electric charge out of it as he did...but there was still an awfully big \"however\" at the end of that thought. After the debacle at Wariel, he was feeling unusually inclined towards using avoidance as his primary mode of conflict resolution. Inanna was, for the most part, content to go along with this. After all, he hadn't been the only one loitering on deaths front porch.\n\nIt was in part because of this that they had come to an unspoken agreement to avoid Skingrad and Chorrol, and had stayed well north of the roads on their return trip, taking the hard routes and using the streams and natural caverns to complicate their trail. Even with proper trackers Feric knew they'd have a bitch of a time following them, and he was pretty sure they were fresh out of those at the moment. \n\nBut one can never be too careful. \n\nHe felt hot breath ruffling the fur on the back of his neck and tilted his head. \n\n\"You don't suppose there's such a thing as too careful, do you?\" A low, laughing voice whispered into his ear. He flexed his claws and wondered, and not for the first time, if she was somehow in his head.\n\nHe shook his head in response, but without turning his gaze away from the group of trolls milling about in the small ravine below. They were cutting it a little close, but the trolls would unequivocally muck up whatever trail remained.\n\n\"I hate those things. They smell worse than goblins....barely, but they do. Let's just roast them all and get on with our lives.\" Feric did turn his head then to cast a dirty look at his smirking partner. She only grinned back with her trade mark cockeyed smile and slapped his shoulder with the back of her hand. \n\n\"Y'er no fun, Serjo.\" \n\nHe flicked his tail and turned his attention to the three lumbering beasts lurking just below the boulders the two of them were presently perched on. The trolls were wonderfully stupid creatures, and half blind, but they could move fast once they caught wind of you. Their sickly greenish color also made them difficult to spot until they were nearly on top of you. As it was, the reverse was true in this case, and it was he and Ina who were nearly on top of them. \n\nFeric did his best to ignore the feeling of Ina's small, slender body pressing lightly against his side as he watched the trio slowly meander off in a new direction. When they were sufficiently out of sight he flicked his tail in satisfaction and felt her murmur against his ear. \n\n\"Aye aye captain.\"\n\nShe was off, and he kept close behind, watching the nearby group as he and Ina skirted the clearing and headed toward another grouping of boulders which he hoped would take them back out of the little forest valley. They were almost there when she signaled and they were forced to duck in behind a collection of low brush. She held up two fingers and he sniffed the air. There were more and they were close, very close. The damn things must have just come around the side of the rock pile they were headed towards. They crouched in low together, frozen in readied positions. She looked at him and held up her fingers. Tiny flames danced gaily across the tips. He shook his head again and she pouted dramatically before flicking her hand and dispelling the fire. His eyes lingered unintentionally on the fullness of her lower lip as she chewed it absently.\n\nAs they waited his attention slowly began to slide...again. He resisted the urge to growl but his claws flexed as he rolled his shoulders in annoyance. \n\nIt had been impossible to keep his attention off of her since the night of the storm, more so than usual that is...and he really hadn't thought that was possible. After she had passed out he'd moved both of them under an overhanging rock for cover and they'd spent the night curled together, kept dry by the boulders and hidden by the long grass. When they woke he was on his side and she was wrapped around him with her head and arms resting on his hind flank and her long legs under one of his paws. She'd wriggled against him and blinked her eyes open with a startled, and then sly, smile. \n\nHer voice had washed over him like rough, raw silk, waking and thrilling every part of him with two words: 'Morning Handsome.' That was all it took. That, and the naughty little grin which accompanied them. It was then he'd realized how utterly lost he was and how much he really did want her. No, not just want...need. He had to have her, there was no way around it. Maybe it was the words, or maybe it was how right she'd felt curled up against his flank, or perhaps it was the recent reminder of how short life really was. Near death experiences had a tendency to make one aware of that particular fact. He felt an irrepressible shudder run through him at the thought. It had been far too close.\n\nWhatever the reason, something had happened. Something that had changed his mind about claiming her, or at least his response to claiming her, since that ship had sailed. He shifted restlessly and shot her a glare when she poked his side, telling him to sit still. She shot his look right back at him. He sighed inwardly and turned away and back toward his wandering thoughts. \n\nIt wasn't that he hadn't wanted her before, that had remained unchanged, what had really altered was what he planned to do about it. Ignoring it wasn't going to work, or rather, hadn't...at all, and the mating couldn't be undone, at least not easily or without great sacrifice. So really there was only one reasonable option left: make her his.\n\nIt wasn't an unappealing thought. Of course, just how he planned to do that was a mystery and the problem had kept him occupied and reserved for the bulk of the journey. \n\nAlso disconcerting was the fact that Ina seemed different now as well. She was still her usual self: confident, smart-mouthed, and playful, but there was something else there, an edge of some kind, and a distance. He let it go considering the scene they'd just come out of wasn't exactly rainbows and roses, but the sense that something was off, that something had changed, pulled at the back of his mind in disconcerting ways. \n\nEventually, and he imagined to Ina's chagrin, the troll's moved on and they were free to make their way out of the ravine unscathed and unchallenged. When they had reached the other side, and were safely away Ina caught up to him and prodded his flank with her hip. \n\n\"You're taking me hunting when we get home.\" she grumbled at him.\n\nHe only had one response to that. He purred. She laughed.\n\n@@@\n\nRight on time. God I'm good. Inanna smiled with satisfaction at the sight of Max's horse strung up with a long line of Bay mounts, all huffing and shifting and generally looking bored silly. All Bays, all between 16 and 17 hands, with matching saddles, bridals\u2014imperial issue...they come standard with the armor and the self righteous attitudes. Again though...she'd take them over the Indoril guards of Morrowind, who were just uptight pricks. Uptight pricks with control issues, actually. Yeah a little smug superiority was alright, at least they were polite. And they called her ma'am...which was just plain adorable. \n\nThere were one or two outliers in the string of equestrian conservatism, one stubby little painted horse who looked like it had an attitude problem, and a mild looking white gnawing absently on what ever it was horses were supposed to gnaw on. She knew guar would pull up big wads of wick wheat and grind that stuff for hours on those big flat teeth of theirs. She guessed it must be something similar. At any rate, they let her know it was a slightly mixed crowd tonight for supper...but still pretty heavy on the legionnaire presence...not surprising for Roxies.\n\nShe turned away from the sight and Feric watched her curiously as her eyes scanned the woods. Come on come on come on....aha! She resisted the urge to chortle in triumph as a be-robed blonde emerged from the forests edge. \n\nInnana waved at Mirisa, and happily absorbed the priceless look Feric was giving her. It was the little things in life that always gave the most pleasure.\n\nShe had indeed invited Mairisa to meet them here with the promise of being able to update each other on their respective situations more than a day earlier than if she'd waited at home...but the real reason she invited her was sitting inside while his horse counted flies.\n\nMirisa nodded and joined them as they made their way to the door. Inanna took the lead as they fell in behind her to begin their respective run downs of the last few days' activities. She pointed them in the direction of the familiar pasty white face of Bart the trainee when they joined her inside. She herself looked around for the trainer. He found her first and wasted absolutely no time whatsoever.\n\n\"Hey, who's the blonde?\" Max asked nudging her in the ribs. She grinned and slipped her arm under his. If he wasn't going to dick around, then neither was she.\n\n\"Well let's find out shall we?\" She dragged him over to the table before he could protest and shoved him out in front. Feric, who was already sitting at the table cast a glance up at her. His face held placid indifference, but the twinkle in his eye told her he knew exactly what she was up to. \"Max, you know Feric, and this here's Mirisa his...\" she gave Feric the 'your turn to jump in' look and he smiled and let her hang. She screwed up her face back at him and Max gave her an uncertain look. Mirisa snorted in disgust at the whole spectacle and held out a hand.\n\n\"Cousin...actually.\" \n\n\"Really?\" Ina blurted, for some reason surprised. That, she did not know. Usually she was good on picking up on blood lines...for some reason Ashlanders all were. \n\nAs the humans say, blood is thicker than water...and as the Dunmer say, 'and it spills just as easily.' She chuckled to herself. Reversing human expressions was a national pass time. 'The pen is mightier than the sword...' : 'Then draw n'wah, so we can find out.' Draw...get it? \n\nMirisa shrugged and turned her eyes on her, pulling Ina back into the present. \"By marriage.\" \n\nAh.\n\nMax's face fell as he shook her hand. She loved playing cards with him, he was a god-damned book. And M thought she was obvious...Ha! \n\n\"Oh...you're married are you?\" There was a twinge of hope in his voice and Ina fought hard to choke back what she knew would be a shit-eating grin. She didn't dare look at Feric knowing that the look he would probably give her would make her crack for sure. \n\nShe so knew Max'd like her. He liked tough chicks...not those delicate wilting flower types. He had good taste that way. Present company included.\n\nMirisa shook her head. \"Widowed.\"\n\n\"Oh....I'm sorry.\"\n\n\"Sure, it's been a few years.\" Mirisa shrugged. A negligent gesture, but Inanna still caught the shadow of long buried pain flit over her features. Suddenly all desire to have any fun at her expense vanished in a poof of guilt. Ugh, this was going to leave a bad taste. Man, Mirisa was always trying to ruin her fun. \n\nNo, you know what? Screw that. Mirisa still needed to get laid, heartbroken or not. In fact it was good medicine. She found her inner grin again and shoved Max into the seat next to Mirisa. This wasn't fun at anyone expense...it was a public service.\n\n\"Sit, I'll get drinks.\" She winked outrageously at Mirsia whose brow crinkled slightly before she caught on and rolled her eyes with an exasperated sigh.\n\n\"You alright?\" Max asked as he adjusted himself in his seat to keep his fancy-ass imperial plate from catching on the furniture. That's why she wore leather, that and the way human armor rattled around. Anything worth killing would hear you a half-hour before you ever hear it, and likely return the favor before you get the chance.\n\nIna shrugged her musings away and watched Max and Mirisa out of the corner of her eye as she made her way over toward Roxy to place an order. Mirisa looked for a second like she was going to set Max straight and on his merry way, but something else flitted across her face and she smirked instead. \n\n\"Yeah...I'm alright.\" She let out a humorless laugh. \"I think your friend is trying to play matchmaker.\"\n\n\"Oh..ah,\" he laughed, slightly uncomfortable, then grinned and shook his head with a shrug. \"Sorry about that...'fraid it was my fault...I asked about you.\"\n\nMirisa's face opened up for a split second in surprise before turning back into her standard hard-edged smirk. Ina missed the next exchange since she neared the bar and thus the cavalcade of off duty guards and soldiers who milled about blocking her view. She did catch the appraising look in Mirisa's eye though. And why shouldn't she look. Max was a man in his prime, barely forty and in great shape. In her professional opinion it was the perfect age for a human, where the brains finally catch up with the brawn before things start heading south for the winter years. She nodded, satisfied.\n\nHer work here was done. \n\nShe allowed herself a self-satisfied smile as she saddled up to the ancient, mangled counter Roxie called the bar and leaned forward on her palms.\n\n\"So, who does a girl have to fuck around here to get a drink?\" She called to the broad-hipped woman who was bent over behind the bar and giving a few indiscreet guards a memorable view of her ample cleavage. \"By Talos, Roxy, you need to get a license for those things, else they're gonna take you in for causing a public disturbance.\" She exclaimed loudly.\n\nA few of the legionnaires and mercs who were slumped along the bar and drifting around behind her chuckled in appreciation. \n\nOne who was clearly on duty and in full armor lifted his head from over his stew and looked sideways at the dark elf next to him. She winked at him and he grinned. \n\n\"Hello Glenroy.\" she murmured to the darkly tanned imperial.\n\n\"Hello beautiful.\" He smoothed back in a deep baritone. Another warrior in heavy armor that matched Glenroy's\u2014 armor she recognized as something more impressive than just regular legionnaire fare\u2014 leaned in and peaked past her partners shoulder to get a look at Inanna. Inanna nodded politely to her and was about to have Glenroy introduce them when Roxy stood up and pushed a chunk of the strawberry blonde fluff she called hair out of her eyes and adjusted her weaponry in her corset. An act which earned an approving grunt or two from her audience. She huffed. \n\n\"What can I get you chere?\" the curvy little Breton asked, her pink cheeks glowing from exertion. \n\n\"Something that doesn't taste like imperial swill.\" \n\nThe Breton only grinned. \"Desole, my love, that's all we carry.\" Inanna shook her head in mock disgust. \n\n\"Terrible.\" \n\n\"Hmmm.\" Was the only reply.\n\nShe sighed. \"Well, I'll take what I can get then I suppose.\" She tipped her head toward her table and received a comprehending nod. \"Got any interesting news to add to the order since I've so graciously decided to bear the swill?\"\n\nRoxie shrugged. \"Nothing interesting that won't cost you a little extra. Though,\" she paused and smirked, \"you wouldn't believe who's move back in next door.\"\n\n\"Oh god, you're kidding me?\"\n\n\"Nope.\"\n\n\"Don't they understand that when you die, you're supposed to stay dead?\" She asked with earnest frustration. Not that long ago, maybe a year or two past, Ina had helped a legionnaire empty out a nest full of nasty zombies and their necromancers. Now it appears they had returned for another round. \"No,\"she continued, \"they wouldn't would they. That's sort of their 'thing.' Fetchers.\"\n\nRoxie had her back to her, filling one of the glasses, but kept talking. \"Well, the news there is that I'm offering up a little cash bonus to anyone willing to do something about it.\"\n\n\"Well...I'll take it into consideration.\" Ina offered in a non-committal fashion, then changed the subject.\"Where's our lady Malene?\" Inanna asked conversationally looking around for the square-jawed Nord woman who usually handled the bar.\n\n\"Night off.\"\n\n\"Ahhh...you're a good over-lord Roxy.\"\n\nShe snorted as she placed the first mug in front of Ina. \"Hardly. That mopey Redguard bribed me for it so he could take her to a play in the city.\" Ina arched an eyebrow. \"Platonic of course\" Roxy added with a smirk. \n\n\"He still mooning over her?\"\n\n\"Naturalment. Until he dies.\" \n\n\"Poor bastard.\" Glenroy muttered beside her.\n\nShe turned on him. \"You wouldn't be caught dead doing that now would you Glen?\"\n\nHis partner laughed. \"Him? He hasn't got a romantic bone in his body.\"\n\n\"Hey now,\" he defended good naturally, putting his hands up in front of him in a warding gesture. \"I happen to have a very romantic bone....\" he grinned slyly, \"and it's pretty big too.\"\n\n\"Ugh\" said the dark haired imperial woman beside him.\n\n\"I second that.\" Muttered Inanna, then leaned across Glen and offered her hand to the woman. \"Inanna by the way.\"\n\n\"Jena, pleasure.\" \n\nIna glanced at the man between them and Jena elbowed him in the ribs \"I hope that's not how you pick girls up.\" He chuckled and nodded to Ina who had withdrawn and was laying a few coins on the counter before collecting her beers. \n\n\"I don't know. How do I pick women up Ina?\" Ina tilted her head and looked thoughtful.\n\n\"Well...I seem to recall something about 'put your hands in the air and turn around slowly'\" Glenroy chuckled at that but Jena looked a little uneasy.\n\n\"Is that so?\" She asked looking between them before her eyes settled on Ina with a new wariness. \"You run with that sort of crowd?\" \n\nClaude, another regular, and (she knew) a talented freelance battle-mage looked up from his beer and smirked. \"Ina runs with all the crowds...don't you sweetheart?\" Inanna smile sincerely, and laughed.\n\n\"I like to think I'm 'equal opportunity'. But,\" She said turning back to Jena, \"it was a misunderstanding.\" \n\nGlenroy snorted. \"She got off on a technicality.\"\n\nShe rolled her eyes. \"Yeah, 'cause 'technically' I didn't do anything wrong.\"\n\n\"She broke into the council room.\" Pipped another voice from down the bar. Everyone here knew this story...legionnaires were like old-hens when it came to gossip and this was very old news. Jena's face opened up in surprise.\n\n\"In the palace?\"\n\n\"I fell.\" Her lip twitched.\n\n\"Ten stories with no injuries?\" Glenroy asked wryly.\n\n\"I'm from Morrowind...we're good with heights.\"\n\nJena cocked a brow at her. \"Levitate is still a banned spell in the empire.\"\n\nIna grinned. \"Feather Fall.\"\n\n\"Technicality\" muttered Glen, stooping back over his soup. \n\nJena frowned. \"Why would you want to break into the council room anyway...nothing is in there.\"\n\n\"I'm guessing just to see if she could,\" said another voice behind her and another familiar imperial face leaned in with a leer beneath his legionnaire helm and grazed the small of her back with his knuckles. \n\n\"Watch it, Mattius.\" She purred and gave him a sardonic look. She was about to tell him what she'd do if he didn't when a strange shiver ran up her spine. Some one was watching her...hard. She cast a casual glance around the room to find green eyes boring into hers from a dark face. Her humor faltered and she blinked just as Feric turned his gaze away and rejoined Mirisa and Max in conversation.\n\nShe caught herself at the last second. And plastered a big naughty-girl grin on her face. \"Well ladies and gents it's been a lark, but I've got things to see and people to do.\" She sent a parting wink in Jena's direction and sauntered back to her table with two fists full of mugs and a soft smattering of chuckles behind her. Thank you ladies and gents you've been a great audience...tip the waitress, etc, etc...",
        "She didn't have to do or say much when she got to the table since the lot of them were already chatting away without her. Young master trainee was off somewhere and Max was listening intently as Mirisa gave him the skinny. They accepted their beers from her with little more than an acknowledging nod. Feric caught her eye briefly, but turned his eyes back to Mirisa quickly enough. She slid into an empty chair beside him and leaned forward, her chin in her hand\u2014 pure listening mode. She also kept her eyes forward, but there was some strange awareness, like tension or electricity humming between her and Feric that was insanely distracting and she had to fight to keep her attention on what was being said. Something felt...odd. \n\nShe shook it off and returned to the conversation. It was all stuff she'd heard before. Mirisa was leaving out the really juicy details, like where there were currently hiding and that they were in fact part-time lions, but Ina was surprised that Mirisa was giving him as much as she had. \n\nShe explained that they'd originally come from the Dragon tail mountains and had several of what she referred to as reclusive 'villages' scattered through the mountains which would share hunting grounds and inter-marry such that nearly all of the groups had some family tie to the others. She, for instance, had been the cousin of Pern, Feric's late wife, and when their people started getting attacked and disappearing, close groups banned together. That was how her and her own partner had ended up with that particular group. She had been very close to Pern, like a sister apparently, so it had made sense to group together. The same went for Feric's own sister who had stayed with her brother and sister in law, having been still single when they'd first abandoned their home almost two decades ago in search of safe haven.\n\nWhile she said all this, Ina could feel that weird tension slowly increase until it was eating away at the back of her mind and causing her to shift uncomfortably in her seat. A quick glance at Feric told her that he was feeling something similar...though his face was outwardly calm. Somehow...she just new. As Mirisa kept talking\u2014 describing the journey through the mountains, their movement from city to city, being slowly hunted across the Imperial province\u2014Ina crept a hand along her thigh beneath the table until the back of it came to rest against his own, which rested on his knee. She turned it palm up so that she could run her thumb over the back of his fingers. \n\nShe clenched her jaw to suppress her surprise when he startled her by lifting his own hand and bringing it right down over hers. For a second she thought he meant to push her away, but he just left it there, covering her own, palm to palm. \n\nMirisa wrapped up her explanations, but the strained tension had already begun to diminish, so that by the time she was done, it was little more than a gentle hum, like the murmur of distant crickets on a warm summer night.\n\nFeric surprised her again by jumping into the conversation before she could. \"I suppose you're wondering what all this means to you.\" He asked Max with a wry smile.\n\nMax turned and looked at him with mild surprise. \"Well...I hadn't gotten that far yet..but I suppose that would have been one question that would have come up.\"\n\nFeric nodded. \"Inanna asked you meet us because, as Mirisa explained, we're on our own here and friendless. I know we've not much to recommend us, and no proof of our innocence aside from there being no proof of our guilt...\" he paused and gave a warmer yet still wry smile, \"and of course this crazy imp's good opinion...\" The men both chuckled and both women raised an eyebrow at him archedly. Go female solidarity. He ignored them and continued unfazed and as charming as ever. \"But I like you, and I feel I can trust you...so I suppose we're asking you to trust us...and if, or when you can, to help us as well. You've already done it once, and I wanted you to know how deeply I appreciate that and that we would like to continue to know you, and perhaps offer what we can in return. I'm sure that after we've put an end to this\u2014\"\n\n\" 'If ' we can put an end to it.\" Mirisa interjected.\n\nHe tilted his head in acknowledgment. \"Yes, if we can, then we'll likely be more help to you and yours, whether that be your own personal family and friends or the Imperial guard itself.\" He sighed and looked down at his lap a moment to collect his thoughts before continuing, the hand covering hers, squeezing as he did so. \"There isn't much more to add really, at this point.\" He smiled that smile of his...the one which felt like a bright summer's afternoon, and Inanna watched Max succumb to it. Really though, the guy didn't have a chance. Those smiles were dirty pool. They were as bad as Des's smiles, and hers were practically lethal weapons...she was sure that in some provinces they were considered as such. All Max could do was mumble something to dismiss the thanks then grunt as men are often wont to do when they're given praise they don't know how to take. \n\nAfter that, the conversation carried on amicably with Inanna drifting in and out of it. She was still distracted by the hand holding hers and by all the other plans she needed to take care of in the coming days. \n\nHer girl, Des, she of the killer smile, would be arriving shortly, unless there had been some major difficulty. Difficulties were sort of Desdemona's thing though, so Ina couldn't see it being a problem. When they had worked and traveled together that had been her schtick. Ina tracked down the baddies and Des facilitated. 'Facilitate' doesn't sound like much on paper, but it was shocking how often uncooperative ship-masters, suspicious locals, and greedy politicians (among others) seemed to pop up in the middle of a venture and put a major wrench in the works right at a critical moment. Des could navigate the cities and courts like Ina could the wilderness, so between them they'd had quite the racket going. \n\nAnd, had they had both been card players working their respective games, then Emily, the Neverar, would have been the ace in the hole. She was the young progeny, the miraculously unlikely hero: a sweet young girl who became a crucible for a dangerous mix of political intrigue, destiny, and a healthy dollop sheer dumb luck...and not always the good kind either. The result was the creation of a living breathing weapon of immense power\u2014god killing power, squeezed into the delicate body of a barely legal mage's assistant. \n\nWhat a twisted fetching world they lived in, and in what a weird bloody time. But that was over now. Des and Inanna were all that was left of that venture. Left to comment and remember like some tragic chorus lingering over the wreckage after all the real heroes, and gods, and villains had long fled the stage.\n\n\"What do you say Inanna?\" Ina blinked back to attention with a start and looked up into Max's expectant eyes. Damn. Where in oblivion was her head?\n\nShe sighed and shook her head. \"Sorry luv, I've got a million things running through my brain just now. What is it you want to me to weigh in on?\"\n\nHe chuckled. \"Nothing...just noticed you drifting.\" They smirked at one another.\n\n\"Prick.\" \n\nHe grinned and saluted, then turned back to Feric. \"I'll keep my ear to the ground and send word to Ina if anything particularly interesting crops up. But you\" he pointed at her, \"you're gonna owe me something.\" His eyes glinted. She narrowed her eyes.\n\n\"Oh yeah?\"\n\n\"A name.\"\n\n\"No fetching way.\"\n\n\"Oh come on Ina...for the love of Talos, give me something, anything, there's a promotion coming up and I need it. It's bad enough I fraternize with the enemy already. That doesn't look good for me.\" He softened his words with another smirk, but she shook her head. \n\n\"First off, half the legion has fraternized with me buddy...so don't think that's going to work. I was a bridesmaid at Jessica's wedding --\"\n\n\"She made captain by the way\u2014\"\n\n\"--if you'll recall. Just me and a house full of you people...plus one\u2014 and good for her but don't interrupt. Secondly, no. No names.\" she paused to consider it. \"But...\" she crooked a finger in making him lean over the table toward her and she lowered her voice considerably. \"There's dissension in the ranks. There's some shit going down with the higher ups that the furry one don't know about. Who knows...maybe they'll turn him in themselves at some point.\"\n\nHe rolled his eyes. \"Fat chance. What kinds of things though?\"\n\nShe shrugged. \"Well, a lot of it is just rumor, since I'm not in with the 'higher ups', and frankly I'm not sure if I believe it myself, but\" she paused to lean in even tighter, \"I've heard the DB thrown around in hushed tones during a couple of back room conversations. So something could be going down there, maybe even in the way of a hook up. Though-\" She leaned back and paused to take a sip of her beer then reconsidered mid swig, lowering the mug to glower at the unappetizing contents. Imperials and their bullshit mass-produced crap...first the spear, now this...what ever this was. She hesitated to call it ale, that was for damned sure. Her stomach turned slightly, and she frowned harder at the mug. 'Well there goes my iron stomach' she though bitterly.\n\n\"Damn it woman, 'though' what?\" She looked up from her swirling bits of what she could only imagine were once drowned rat, and smiled bemusedly. \n\n\"Though,\" she continued, \"I know the blue squirrel is supposed to be violently opposed to that particular group of people, so if there is dissent it might be related to that...if it's all true.\"\n\n\"Rumors, eh?\"\n\n\"Yeah. But you never know.\"\n\n\"Shit.\"\n\n\"I second that. Don't know if it'll do you any good.\"\n\n\"Yeah a name would be nice.\"\n\n\"Not gonna happen...though I can tell you the count of Skingrad is still miffed with them. Won't do business with them, period.\"\n\nHe rolled his eyes. \"What law abiding Count or Countess would.\"\n\nShe only had a 'you -must-be-joking' look as a response for that. \"Shall I make you a list?\" She added after a moment to emphasize her point.\n\nHe waved her off. \"Yeah yeah, I get it. Anyway, I'll send word if anything comes up, otherwise I'll catch you in another week or so baring any more run ins with necromancers or these hunter fellows.\"\n\nShe frowned at him then looked around the table. \"Necromancers...did I mention that?\"\n\nMirisa chuckled. \"You really were out of it just now weren't you? We were just telling him about the 'basement' as you call it.\" \n\nIna smirked back. \"Well I hope you said nice things about me.\" She frowned as a thought suddenly came to her, jostled loose by the mention of the necromancers. \"You know...why don't you two head off without me...I think I want to take care of some business locally before I head home. I'll meet up with you later once my affairs are in order.\"\n\nAll three of them raised a curious eyebrow. \"Should we be concerned?\" Max asked with a smile.\n\n\"Indeed.\" Feric added, though with a darker expression. His hand constricted around hers again before releasing it completely. She stood, stretching her arms over her head and cricking her neck. \n\n\"I'll be fine.\" She noticed Feric's beer was only half finished. \"You gonna drink that, light weight?\" His expression softened back into a wry smile and he slid it toward her. She rewarded him with playful smirk of her own and saluted the table with the mug before putting it back on the table to everyone's confusion. \"I don't want to drink it...I was just going to tell you not to bother, it's not worth the havoc it's going to play on your innards.\" She pointed to her own still full mug as evidence.\n\n\"Yearnin' for the liquors of home?\" Max asked laughingly. She squinched her face up in disgust.\n\n\"Hardly. Have you tasted Greef? Or Sujamma? I mean it works great, but as for taste... those Redguard kids though, they brew a damn tasty Ale.\" She twiddled her fingers at them. \"Don't wait up.\" She turned and called out to the Inn keeper, \"Roxie baby, consider your neighbors evicted.\" Roxie looked up and smiled back, waving. Ina saluted the general room. \"If I don't come back, boys and girls, then drink a round in my honor...but don't even think of putting it on my tab you cheap, Imperial bastards.\" the room grunted at her and a few tankards raised in farewell.\n\nShe was out the door and nearly at the woods' edge when her name sounded out behind her. She turned to find Feric making his way over to her, alone. He came to stand before her, toe to toe, but he didn't reach for her to touch her. His expression was neutral, and mild, and she wasn't sure what to make of it.\n\n\"Who is the DB?\" He opened. She resisted the urge to smile.\n\n\"You're not going to get all control-freaky on me are you?\"\n\nHe remained mild. \"I merely wish to know what I may have to deal with in the future. The people under my care are my responsibility after all.\"\n\nShe nodded. \"I seriously doubt you'll have to deal with them...and if you did I'll have to go ahead and gut some people for misbehaving...but DB is common shorthand for the Dark Brotherhood. You heard of them?\"\n\nHe frowned and tilted his head like a dog who'd heard something strange...or really, like a cat. Literally like a cat in this case. \"I've heard the name in passing, but I'm not familiar with them. Are they thieves as well?\"\n\n\"Of a sort. They're assassins.\" She tilted her head back at him and slipped her arms around his waist, pressing her body against his. He left his hands at his sides, but she felt his body lean slightly into hers in a way that encouraged the contact. It may have been subconscious...but she wasn't choosy. She didn't pull away, but ran her fingernails up his spine instead. \"Full disclosure?\" She asked with a light smile.\n\n\"Not holding my breath.\" His voice was a dry growl...but she could see the hint of a twitch in his cheek...the one which usually accompanied a full blown boyish dimple, though it didn't quite make it that far this time. \n\nShe chuckled. \"Wise man. But,\" she pulled one arm from around him and laid it on his chest. \"if you can keep this a secret...and I mean secret...no one, at all...maybe Mirisa...but even then it might not be so hot...but anyway, if you can keep a secret, I'll let you in on it.\" His expression was still difficult to get a read on when he nodded. She shrugged mentally and decided to proceed. \"The guild asked me to be an unofficial, off the books intermediary for any illicit interactions with the DB, the kind of interaction that they would never, ever have...naturally. Of course illicit is redundant since everything either club does is technically illegal, or at the very least questionable by the standards of decent folk. In exchange, the guild, or at least certain members, are in my pocket until they see an opportunity to get out of it again.\" \n\nA little smile finally appeared like a ghost, hovering around the corners of his lips. \"Ah, so they aren't helping you out of the goodness of their hearts.\"\n\n\"Nope.\" He nodded.\n\n\"That actually makes more sense.\" He let out something like a humorless laugh. \"It's relieving in a way.\" She cocked a curious brow back, and he shrugged. \"Don't get me wrong, the thought of you in that position is unsettling at best...but at least I know where they stand now. I suspected there was a cost, and now I at least know what that cost is.\"\n\n\"So you're OK with it?\"\n\n\"No.\" That earned him an even higher brow arch. He chuckled for real this time, \"But I'm not going to get all 'control-freaky' about it.\" She smiled back, and wrapped both arms around his waist.\n\n\"There's hope for you yet, handsome.\"\n\n\"Hmm.\" He finally moved and wrapped his arms about her as well, capturing her much smaller frame in his embrace and resting his chin on top of her head for a moment before bending to brush his cheek against her ear. The movement sent a tinkling rain of sensation down her neck and into her limbs before miraculously settling in her belly where they joined those damned butterflies that always got so fetching restless in his presence. It reminded her of the weird feeling she had gotten in the Inn when he was staring at her.\n\n\"Hey...what was that in the Inn anyway? That look you were giving me at the bar?\" She asked the shoulder she was leaning against. It shrugged at her.\n\n\"You don't want to to know.\"\n\nShe smirked back at the shoulder. \"Control-freaky?\"\n\nThe shoulder slumped ever so slightly. He made an ambiguous sound which may or may not have been a grunt of begrudging affirmation. She purred. \n\nThere was a long moment of silence in which she pet the shoulder, though she wasn't quite sure if it was done with approval or condescending remonstration. Eventually he sighed and changed the subject. \n\n\"Are you sure it was such a good idea giving that information to Max, all things considered?\" He whispered against her ear.\n\nShe smiled against the fold of his robe. \"I know what I'm doing. You sure it was such a good idea swearing fealty to the legion?\" His chest bounced ever so slightly under her cheek.\n\n\"Trust me.\"\n\nShe pulled away far enough to look up into his face and smiled. \"Done.\" He smiled gently back and brought a hand to the side of her face so that his fingers could trace its outline from temple to jaw then leaned in to brush his lips against hers. \n\nHe brought his forehead to rest against hers. And she tilted her's upward as she caught the warm, clean scent of him in her nose and mouth. He exhaled and she flicked her tongue out across her lips to catch it. There was something calming, soothing, about his scent, his very presence. It was like drifting to sleep in a cool green meadow on a warm day. She just wanted to curl up against him and melt into oblivion, floating lazily adrift in his wake. He sighed heavily, pulling her out of her musings, and she returned the sound, less than anxious to return to reality.\n\n\"Whatever you're doing...be careful?\"\n\n\"I always am.\" He pulled away and gave her a comical, disbelieving look. \n\n\"Appearances can be deceiving?\" He intoned with a slight smirk.\n\nShe gave him her twisted grin and patted him on the cheek. \"See, I told you there was still hope for you.\" He smirked back and graced her lips with another light, feathery kiss.\n\nShe dropped the smile and reached up to grip the back of his head, her fingers twining and fisting in his soft golden-brown locks, and proceeded to show him what a real kiss was supposed to look like. He was making progress, after all, and that was to be rewarded. \n\nAnd damn but he tasted good.\n\n@@@\n\nOn any day one would find the air in Moss Rock caves cool to the point of frigidity and the grey moss coating the walls from which it took its name, near dripping wet as it clung to the porous walls. Now, though still clinging with determination, it was black and singed, and the air about it was stifling and thick with heat. \n\nThe smell of death which usually lingered, lingered still, though the sharp tang of fresh blood now mingled heavily with the stale rot. The floor of the great alter room was scorched from the middle of the room outward, with nothing but a small, crouching figure at the center of its dark bloom. \n\nA gloved hand reached up from where it rested on a tensed thigh and twisted in the air with a flourish. \n\n\"Tada!\" \n\nWith a sigh she stood, and pulled off the ruined gloves, tossing them to the equally ruined floor. \n\n\"Gross.\" Inanna grimaced and spat the grizzly taste of blood from her mouth as she wiped the splatter from her cheek with the back of her hand \u2014 an unfortunate byproduct of close range combat. The victim this time around was a young human woman she'd finally taken out after a few rounds with both the material and summoned zombies that had been protecting her. She was surprisingly young for a head mistress. At least Ina had assumed she was since her robes were more elaborate than the others. She felt a pang of conscience over the girls youth...but the sensation was quickly overwhelmed by the more immediate and palpable nausea brought about by the sight and smell of the various corpses littering the room, all in varying states of putrescence and decay. And most of them having nothing to do with her presence there. \"It was like this when I got here, I swear.\" she muttered.",
        "A few looked as though they'd not even had the chance to be buried, suggesting that these necromancers weren't even polite enough to wait until their subjects quit the ghost on their own time and no doubt had a personal hand in speeding their deaths along. \n\nIna sighed one last time and scrapped something unwholesome looking off her leather curias with the edge of her knife blade. Probably some unnameable bit of zombie. There were enough of them littering the floor, so there was bound to be a bit of splatter. She nudged the body of the head 'mancer with the toe of her boot, half expecting it to jump up and try to eat her face, or something equally grotesque. But, there was nothing but the looming, heavy silence, and the fetid smell of death and rot which clung to the alters and hangings which decorated the cavernous chamber. \n\nIna's eyes were drawn to the main alter. It was a strange statue which resembled a giant, white, boney hand. Something like the desiccated remains of a giant trying to claw its way out of the earth. An appropriate enough image for its purpose. Beneath the skeletal structure was the main alter, upon which another young woman lay, looking still fairly fresh, though as dead as anything else in the room. Her lifeless eyes stared up toward the white claw with a ghastly look of expectation. \n\nIna closed the girl's eyes with a quick movement, and got out of the room. She'd thought it might be appropriate to use the main mancer in her own quasi-necromantic ritual...but somehow, in that room, the thought gave her more chills than she could handle. Another body in another room would serve just as well...and there were certainly enough to choose from in this place.\n\nShe finally settled on a man she'd come across in one of the far rooms. It still seemed 'right' for her to use a necromancer in the ritual...especially since the ritual was so abhorrent to her. At least there would be some karmic balance at play, and when she went to her ancestors for absolution from the crime, they might see the poetry in it themselves, and the dark justice in the choice she'd made, even if they disapproved of the ritual in the first place. How could they not. She still hadn't done more than choose a body and a place and she was already feeling the acid creep up her throat at the thought of what she was about to do.\n\nShe grunted and dropped her bag o' supplies onto the cavern floor. She had doubled back to the imperial city to do a little shopping after her and Feric had parted ways, and purchased a few common ingredients for arrow poisons and a few random odds and ends from a variety of suppliers to cover her purchases on the off chance a merchant was familiar with the night mother ritual. She'd then returned here, to this hole, to get the damned thing over with. It was poetic justice to use a necromancer, yes, but it was also a perfect cover. Her being here would not be unexpected seeing as she was not only known for her hate-on for necromancy, but Roxy had recommended it in the form of hard cash, and publicly. And if someone did come across the ritual, it would only be distinguishable from the other horrific sights in the place if the eyes which found it knew precisely what they were looking for. For that they'd either have to be a necromancer or someone who'd performed the ritual themselves...in which case they weren't telling anyone.\n\nShe swallowed another gurgle of acid in her throat and knelt to pull out her supplies. She also pulled out a piece of carefully folded parchment. The words scribbled across the top read: \"The Black Sacrament.\" \n\n\"Lovely.\" She muttered and spread the paper out on the floor next to her, then with another heavy sigh and a twisting in her gut, she got to work. It was a messy job, but relatively quick. It wasn't the first time she dome something like this...though usually it was with her own blood and not someone else. She'd made a few alterations to the ritual, added a circle of blood around the body and inscribed it with Deadric symbols she knew would amplify the spell. Deadric was confusing. It all used the same alphabet, but there were multiple dialects. A precious few words and signs were fairly universal. So she kept to those. There was no need to accidentally piss one Deadric prince off by using the wrong language in their rituals. The last thing she needed was to go to all this trouble only to have the damn thing not work. Hence, also, her taking the risk and amplifying it. Besides, the Dark Brotherhood worshiped Sithis, and it wasn't clear if he...or it, rather, was even Deadra at all.\n\nInanna eyed the scene carefully and dispassionately as she prepared the blade with the nightshade flowers, crushing the delicate petals against the steal and getting it good and covered. She held the hilt between her palms, point down and stared blindly at it. Before she could lose her nerve she set her jaw and stabbed the already mistreated remains arranged within the circle while reciting the suggested incantation through clenched teeth.\n\n\"Sweet Mother, sweet Mother, send your child unto me, for the sins of the unworthy must be baptized in blood and fear.\" \n\nShe felt not only the fool for letting such trash leave her mouth, but markedly unclean as well. The creeping disgusted feeling grew as she continued...but that seemed to be it. There was no sign or signal that the spell was doing anything other than creating a knot of self loathing in the pit of her stomach, so after a dozen incantations she stopped and tossed the blade away from her and into the shadows of the cave. She wouldn't want to use it anymore anyway. The feel of it would forever be slimy to her because of this, so it was best to just find herself a new one. \n\nShe watched the candles, and opened up her other senses to the space around her. It felt black, and oozing, and awful...but it would considering the kind of magic performed here over the years and which had no doubt leeched into the very walls of the cave through close and prolonged contact.\n\nThere was no way to know if it worked. The instructions gave her no indication of what was to happen, but she figured if it had worked then they'd find her easily enough. She had advertise at Roxies that she'd be up there clearing out the riffraff, so if these assassins had half the professionalism of the Morag tong, they'd put two and two together and figure the rest out on their own. Frankly there was no way she was spending another minute there, and if they didn't like it...fuck 'em. S'wit.\n\nShe gathered the instructions and held them aloft with one hand while the other produced a small flame which she held underneath it. She wasn't going to need it again. She did it once, but that was fetching it. If they wanted to go ahead with the proposed arrangements, then they'd need to find some other way of getting in contact with her...cause this way was out. And if it didn't work they could go find some other sucker, 'cause she'd given it more than a fair effort.\n\n\"I need to consider a career change.\" \n\nShe huffed and stood, slinging her pack back over her shoulder. She reminded herself one more time why she was here, and why she was doing this crazy bull, and let the memory of green-gold willow leaves carry her back out into the early evening air.\n\n\"Roxies ho.\" she muttered, and began the trudging march back to the inn where piss warm beer, indifferent food, and less than comfortable beds awaited her. She sighed. She'd better skip the ale...she was already feeling queezy enough as it is.\n\n@@@\n\nHer evening at Roxies started out uneventfully. She ate, drank (hot water to settle the stomach...which no one held against her, considering), and turned in. It was quiet down stairs, even for the late hour, just a couple of regulars and two patrol men who'd stopped in for a pint and a hot meal. The regular barmaid was wiping down the counter, and Roxie was sitting in behind, counting her money. She usually gave both guards and legion a pretty hefty discount that cut into her profits, but that also meant she was never robbed and never had any rowdies, so in the end, she did well for herself. It was amazing how expensive it could get if you have to replace the furniture once a month because some drunk decided it would look better as a pile of splinters with a body on top. Now Roxie wasn't literally counting her money like some jaded gold hungry fiend, just going over the accounts...but really, ten of one, not quite a half-dozen of the other...\n\nRoxie set her up, cleared her tab (it was reasonably small, thank Azura), and Ina pocketed the leftovers. It was enough to cover expenses and maybe a weeks worth of food and lodgings for a for a small person. Freelancing could be lucrative, but more often than not, it merely kept the head dry and the stomach more or less full. Life was fairly cheap, and there was always some desperate schmuck who'd volunteer if you decided something was beneath you. That's not to say that there weren't some jobs that were just too crazy...but not many, not when you're hard up...or when you reeeeally want that new big, soft, comfy bed. Gods but she missed that bed. \n\nAs it was, her rules were simple. No strongholds full of heavily armed guards, and no harming innocent bystanders. Other than that, she was pretty easy. Oh, and freedom of artistic expression, that was an important one. It was her way or the highway. Which worked since she usually took the low road as it was. Ha!\n\nThe patrolmen who were loitering around on break were new to her, one was up from Leyawin, and happy to be farther north and out of the swamps. The other was recently rotated back from a tour of duty in the Sommerset Iles. Apparently the beaches there are fantastic, even if the locals leave something to be desired. Somewhere around eleven she made her way upstairs and crashed in one of the two private rooms. She was lucky and they were both unoccupied, so she had her pick. Like she'd said, quiet night. \n\nShe slipped into her loose fitting pants and sleeveless pullover, the only clothes she still wore from back home, partially because they were so damned comfortable, but mostly because no one really saw them when she slept. As much as she'd love to trade her imperial duds in for some good old fashioned netch leather and bonemold, she couldn't since it give her that 'fresh-off-the-boat' look. That she didn't need. It was hard enough being a dark-elf here in the heart of imperial country. There's a general sense that a Dunmer would rather slit your throat than look at you. If she were to be honest, she'd admit the reputation had been properly earned. Most Dunmer probably would feel that way. One of their most popular curses, N'wah, meant foreigner or outsider. Not the most friendly peoples on Mundus. She'd worked hard for her reputation as being 'one of the friendly ones' so there was no use ruining that by flashing her colors unnecessarily if she didn't have to. You can't always get what you want...right?\n\nInanna had fallen asleep to images of the wastes, to fire hot dust storms, and swaying wind chimes, but she awoke to silence and frigid cold. It wasn't morning. She cracked her eyes and rolled them toward the cracked window over her head. Still dark. Hours before sunrise yet. But even so, the cold was all wrong. It wasn't early morning cold...it was a chill your soul kind of cold. The flesh on her arms felt raised and tight, and her skin tingled. She kept her eyes to the wall and her back to the room. Her fingers were already wrapped around a hilt beneath her pillow and they tightened on their own. She didn't move, but worked at keeping her heart and breathing steady as she wrought a silent spell. Not a cantrip, but something native to her, those other senses, as she called them. Slowly it spread through the room, like creeping fingers, touching and tasting, and feeling out the shape and nature of whatever was happening in the room around her. \n\nSomeone was spelling the room cold. Someone was also silencing the room, deadening the sounds and creating a barrier between the room and the rest of the Inn. Her eyebrows flinched as she frowned to herself. Silencing made sense, but what was the utility of the cold? Unless...\n\nThe fingers of magica finally wound themselves around the source of the spell. It was in the room, and the signature of it...well, the unnatural cold in the room had nothing on the cold that radiated from the person, or thing, standing just a few feet away behind her. Her own magica withdrew almost immediately. That brief contact had been enough. Dark, cold, empty...a void...but not a void. There was something in there, something watchful and dangerous. She'd caught sight of it in flashes of red. 'Azura take me.' She hadn't thought they'd come so quick.\n\nWith a deep breath, she rolled slowly onto her back, keeping her eyes closed and her arms over her head. A vulnerable position if one didn't know she had a knife hidden in one hand and the lick of flame slowly building in the other. She squirmed slowly and shifted a leg to slide the blankets down to her hips. At the same time a slow smile spread across her lips and her eyes crept back open as she turned her face toward the source of the magic. Invisible...no, chameleon. There was a shift, darkness moving in darkness. She arched a brow. \n\n\"You know,\" She began in a low sultry voice, \"you should really think about knocking...you never know what a girl might be up to in the dead of the night.\" Her voice hardened on the word dead and her smile showed a hint of teeth.\n\nThe rippling shadow melted away to reveal a more solid shape, though equally black. The figure was shrouded in dark robes and a deep hood was pulled low, entirely obscuring the face, save a portion which revealed the vague shape of a jaw. That tiny hint told her it was likely a man before he opened his mouth to confirm it. \n\n\"You appeared to be sleeping quite soundly. It seemed a shame to interrupt your rest.\" He took a single step forward and made a sort of half-bow. \"And my deepest apologies for the intrusion madam, but unless I am mistaken, You called to Us.\" The voice matched the look: dark, smooth, a hint of sharpness around the edges and whispered in a soft almost-amused-but-mostly-bored-almost-hiss...creepy. Well hello Mr. walking clich\u00e9, how do you do? \n\nHe continued, \"The night mother has heard your prayer and I have come as a Speaker for the Dark Brotherhood to hear your petition, and to see to it that your wishes are properly executed.\" She couldn't be sure but she thought she saw a hint of a smirk at his own wording. Executed indeed.\n\nInanna pursed her lips. \"Yeah. That was me who called all y'all.\" She twisted her lips into a dry smirk of her own and hopped off the bed to her feet. She paused to tilt her hip then stretched her arms high over her head, the knife still in hand. He didn't budge and merely folded his hands, gloved with black leather, she noticed, in front of him. She smiled over her shoulder at him as she gave him her back and retrieved her satchel from the foot of the bed. She took her sweet time, letting him get a good look at her rear-end.\n\nIt was obvious, this I'm-not-afraid-of you routine, but so was his I'm a spooky-assassin-boo! act. Like demanded like, no? Of course he was a spooky assassin, and he was, obviously, creepy and dangerous, but like hell she'd let him fluster her...even if her skin had begun crawling like it was trying to get out of the room, with or without her. She pulled the leather bound folder out of her bag and handed it to him, her knife still palmed, but pointing in a polite direction. \n\n\"I'm not sure if you're the one who can comment on it, but this is what I was charged to deliver. I'm not the client per-say...just the messenger. Oh, and, my name's Inanna, nice to meet you...pray tell, what be yours?\" She fluttered her eyelashes and gave him the cheekiest grin she could muster, but given the circumstances it wasn't her best. Then she waited for a response. And waited.\n\nThere was a long pause, in which the cold and silence reigned. She got the feeling he was sizing her up, waiting for her to crack. She wasn't sure if she did or not, but eventually he spoke. \"Lucien. Lucien Lachance.\" Oh, Azura please! He had to be a Breton to come up with a corn-ball name like that. If he noticed the expression that probably flitted across her face, he didn't let on. \"You say you are not the client, and yet it Was you who performed the ritual, was it not?\"\n\n\"I believe I've already admitted as much.\"\n\nThere was another pause, this time much shorter, before one gloved hand finally reached for the package. The other reached up to tug the hood back a bit more to reveal an angular, yet, she admitted (begrudgingly) handsome human face. Not entirely what she expected, as he had a little scruffy shadow around the jaw, and was surprisingly young. He looked about 30ish to her eyes, and not likely much older. He cocked a brow at her and she shrugged. What? Are assassins immune to being checked out all of a sudden? Freakiness and sex appeal were in no way mutually exclusive...quite the opposite for some people in fact.\n\nWhile he opened the package and removed the parchment from within, she made herself comfortable at a nearby table, idly twirling her knife between her fingers before imbedding the tip into the wood with a muffled 'thunk'. She indicated he take the other chair. His lip twitched slightly.\n\n\"Thank you, no.\"\n\nHe continued to read and she watched him. So, this was an assassin of the dark brotherhood. She never met one before, Morag Tong sure, but not the DB. She could see it. Besides the getup, and the whole 'tall, dark, and creepy' thing he had going on, it was painfully clear that this was not the sort of guy who frazzled easily, or who one would enjoy meeting in a dark alley (how's that for a stereo-type). And yet here he was in her bedroom in the middle of the night. Lovely. \n\nHe had an aura of danger, and one got the impression that if you crossed him, he would slit your throat and move right along. No sleep lost, and he probably wouldn't even remember it the next day. \n\nHis face was impassive, but after he'd read the last paper and refolded the parchment back into its leather envelope, he surprised her by pulling out the other chair and seating himself across from her, laying one forearm almost casually upon the table. He pulled his hood off completely. He had long, straight black hair which was tied neatly at the back of his neck with a leather thong. Also black of course...naturally. The envelope vanished into his robes, and he turned his gaze on her. Definitely a killer. Hard mouth, cold eyes...and something else that one just couldn't put one's finger on, but you knew it when you saw it.\n\n\"The ritual was altered.\"\n\nShe raised a brow at the unexpected opening. \"Ah...yeah. Hope that's not a problem. I wanted to make sure it got through.\"\n\n\"So it did.\" She watched him warily and nodded. Oooookay.... \n\n\"The instructions also tell you to wait in a secure location. Did you truly believe the most popular legion watering hole in all of Tamriel would be conducive to our particular business?\"\n\nAhhh...that. Hehe. She smiled coyly. \"What's more secure than an inn full of soldiers?\" Ina continued, wetting her bottom lip, \"Though to be honest, I wasn't expecting such speedy service.\" He was staring silently at her again, like he was trying to peel her apart with his eyes. The room dropped in temperature. She shivered, and sighed. \"Look, let's just drop the melodrama and get to the heart of the matter. I'm not part of the guild, I'm an intermediary...doing it as a favor, if you care, so let me know if you want me to take a message back, but don't expect me to know anything. Oh, and I'm absolutely not doing that ritual again, so you'll have to decide between you how you want me to get in contact with you ...if that's what you so desire.\" ",
        "\"I am aware of your situation. The letter has informed me of the intended arrangement. And no...I do not care. In regards to the message...I will take your proposition to the night mother. We will find you if and when our dread mother chooses to respond. And as for the melodrama...\" he rose slowly from the table and pulled his hood back up so that only his face from the bridge of his nose and below remained visible, \"...well, that's just one of our many services. Part of the package, if you will, and free of charge.\" She could see a slight smirk pull at his lip again as his long fingers wrapped delicately around the handle of her knife and pulled the tip from the table. \n\nHe whirled it dexterously before presenting the handle to her with a courteous nod. She accepted and one of the gloved fingers brushed her own forcing her to suppress a full blown shudder. He must have noticed, or knew somehow, because his barely there smirk widened slightly. \"A pleasure doing business with you madam. I do hope we'll meet again.\" She couldn't say for certain, but that definitely sounded like a threat to her. \n\nShe nodded, not yet trusting her voice. He paused at the door. \"By the way,\" he murmured over his shoulder, \"Some of your methods are a little sloppy, occasionally even bordering on recklessness...but much of your work shows definite promise...and even, I would presume to say, a certain amount of style.\" He turned back slightly so that she could see his eyes. \"I especially liked what you did with the Redguard. It was very...efficient. Excellent knife work.\"\n\nThe door closed and, after listening to her pounding heart beat for the better part of eternity, Inanna melted in her seat with a low groan. \"That's it. I'm going into retail.\" She leaned forward until the tip of her nose and forehead rested on the table. \"Or maybe inn keeping. I'll buy Roxy out in the morning.\" \n\nThe tiny window to her tiny room was open, and now that the silence spell had bled away, the soft yet persistent sounds of evening had begun to filter in. It was calming. She had to admit, now that there was time to think strait, she'd been pretty nervous. She wasn't one to fall for put-ons and shows...but these guys were definitely professional showmen if that was indeed all act. But it couldn't be. It wasn't. That guy had been truly creepy, even in hindsight. \n\nHer head shot up. There hadn't been any Redguard necromancers in the caves. Not one.\n\nWhat... the... hell.\n\n@@\n\nIt was another soft summer's night. The air was warm and the cool little breezes that tripped down from the Jerral mountains rustled through the trees with a playfulness it seemed to reserve solely for the summer months. You'd never think to look at it, that such a lovely night was full of nasty, scary, dark things. It was easy to imagine on a evening like this that the dark was a safe place, and that things like bandits, and deadra, and necromancers, and paid killers weren't lurking in the shadowy places. But they were...like they'd always been. But before her was one of the shining places. A bright pearl, glinting in the moon light. \n\nShe was still unnerved by the assassin's strange comment about the Redguard and was hesitant to come back here right off, or even at all. But, after the last couple of nights she'd had...well, the pull had been too hard to resist. It was like she just...wanted to be nearer, and being nearer, the weird vibrations and anxieties were magically soothed. It was a little odd. But hey, who was she to question what worked. There was a human saying about horses' mouths that was somehow applicable...but it eluded her at the moment.\n\nShe approached the ruin from an odd angle, hoping to catch Lucas off guard if he was around. She didn't see him and guessed one of the heavies was on watch instead. \n\nAs if hearing her thoughts something stirred as a warning in the bush next to her. Inanna crouched and automatically palmed one of her knives...just in case. A lion emerged and greeted her with a small huff. \n\n\"You're pretty sneaky you know that...didn't hear you coming at all till you shook that bush for me.\" The lion tilted his head and his pale blue eyes glinted. \"How are you tonight Muthsera Cyrus?\" She had a hard time recognizing them from a distance, but up close she could make out the distinguishing speckles of charcoal gray in the fur along his throat, and a small scar over his left eye which seemed much more apparent in his lion form than in his human. \n\nHe shifted and crouched down next to her, perfectly unfazed by his nudity. He was of a slimmer build than most of the others, but he was still pretty darn easy on the eyes. He had....a runners body, she'd say. Much like a fellow Ashlander actually, if she were to think about it. Which clearly she was. \n\n\"Not too bad, yourself?\"\n\n\"Eh.\" She made a face, recalling the less than pleasant way in which she'd spent the last couple of days.\n\nHe chuckled. \"Yeah, you've smelled better too.\" She cocked a brow at him.\n\n\"What's that supposed to mean.\" He smiled kindly at her.\n\n\"Well I don't mean to offend your feminine sensibilities, but you smell like you've been rolling around in someone's grave.\"\n\nShe chuckled. \"Yeah I suppose I must.\" She'd scrubbed, but some things did tend to linger. \"I wonder how many baths it's going to take to get clean this time.\" She'd been down in those caves a decent while...she didn't doubt that the smell had permeated right to the bone. Did she mention Gross? 'Cause yeah...\n\nShe nodded at him, her eyes drawn up to his small white scar. Normally she didn't pay much attention to scars, since she saw a lot of them, but she'd noticed that none of the others seemed to have any. No doubt due to their unusual healing abilities. She cocked her head in silent question and pointed to his brow. \"How'd you get that little nick anyway? Don't you guys heal up on your own pretty good?\"\n\nHe grinned sideways at her and rubbed a finger over his scarred eyebrow. \"Yeah...I left it on purpose. I got it the day we discovered Talon...he was just a little thing. I don't know how he even survived on his own. But I was hunting when I heard him just a-squealin' to wake the dead. I came up on him just in time to see a mountain eagle snatching him out from under a ledge.\"\n\n\"Oh yeah? I've never seen one of them. They're pretty rare, huh?\"\n\n\"They stay to the north mostly--they're bloody huge. Nasty claws too. I recognized the cub in it's claws for what it was and managed to wrangle him from the bird before it was able to take off. Got this as a souvenir.\" He chuckled. \"And Talon got his name. We took him on as our own after that.\" He sighed. \"That...well, it was before the twins came along, so we figured it was the right thing to do, and he was such a sweet little thing.\" \n\nShe grinned and recalled the last time she'd been down here, and Talon's idea of a greeting party. He'd organized an ambush with the twins...and it was a sad fact that it had, for the most part, worked. She defied anyone not to be startled by three flying balls of fur at six am on a Morndas morning.\n\n\"Sweet? That one's a born troublemaker...adorable, sure, but he's a ballsy little ankle-biter.\" \n\nHe couldn't argue with that, so he just grinned back.\n\nA distant sound distracted them both momentarily, but it was far enough off not to be a major concern. He sighed and continued, his face turning serious.\n\n\"It was also before we found Moira, Lucas, and Owyn. I'm still hoping we'll find more, but I'm not as hopeful as I used to be. The quality of the hunters has been slowly dwindling, and I worry that this is because the better ones are elsewhere, hunting others.\" \n\n\"You think that's likely?\" She shifted her weight onto her other foot and rested her elbows on her knees, still crouching. \n\nHe shrugged and held his palms up helplessly. \"I can't know...which is perhaps better than knowing we're truly alone...perhaps.\"\n\n\"Feric?\"\n\n\"He has faith that there are others. He thinks that if he made it, there must be others who made it as well...he underestimates himself sometimes.\" He looked down at his hands where they rested on his knees, mirroring her own position. \"I'm older than the others here...seen more...so I know better. I don't think any of them, Mirisa, Feric, Bella\u2014even Owyn\u2014know their own worth. That's why I worry. They're all exceptional, really, so if anyone made it out, they would be amongst that small minority.\" He shook his head. \"I was the best tracker and hunter of my own pride...and as far as I know, the only survivor. If there are others...there won't be many. I...I don't know how we will rebuild.\"\n\nShe wanted to tell Cyrus they would\u2014could\u2014but she didn't know that either. Even if they did find others, would it be enough? Could they have children with others outside their race, and if so would they have the same abilities? If not...she'd done, and would probably do more questionable things, and for what? No, that was an asinine thought. She was doing it because the being crouched next to her was decent and kind, and he didn't deserve to have his family destroyed. He'd welcomed her into his home...they all had. Even Mirisa, in her own way...a way not unlike her own people's since they were notoriously suspicious about strangers and didn't like to make it easy. In her books, that was more than enough. Other...feelings...didn't have to factor into it. Hormone induced or not, the right thing was the right thing. \n\nA hand squeezed her shoulder. \"Hey, sorry. Didn't mean to be a sad-sack there. Don't look so glum, you're prettier when you smile.\"\n\nShe smirked. \"Awwww. No, no worries. You just got me thinking is all. But, I better get going. I need to grab some supplies from town before I go back to the ruins and it's almost morning.\"\n\n\"What were you doing up here then?\"\n\nShe gave him a naughty sideways grin. \"Hoping for a chance to torture Shadow, but the little bugger eluded me.\"\n\nHe smirked back. \"He really is like her shadow sometimes, isn't he.\" He nodded, knowing instantly the true reason for the nick name. \"But that happens. It was years before Talon let me out of his sight, and Owyn still acts like an infatuated puppy around Mirisa. They lost everyone, so there needs to be someone to fill the void.\"\n\n\"What about the other two?\" \n\n\"Well Ambrose seems equally taken with everyone, but Mori...she tends to keep to herself. Not in the obvious way that Lucas does, she plays and joins in, but really, she's a closed book. I wouldn't go so far as to say she's difficult...she just does things her own way.\"\n\nShe nodded. He gave he a smile and a wink and transformed. She caught herself from reaching out to pat his shoulder as he began to move past, but he saw the movement and brushed his cheek against her arm. The gesture warmed her and she was forced to reign in the ah-shucks feeling it was giving her. Man hormones sucked. She wasn't sweating any more, but now she'd not only lost her iron stomach, but was getting all sentimental to boot. \n\nShe watched the big cat slink away and mentally slapped herself back to attention. There was work to do. It was time to stop screwing around. For a moment Inanna considered continuing on to the ruin and finding her preferred cat. That weird pull made it difficult to resist. Instead she cast a suspicious glance into the serene darkness, half expecting to see watching shadows hidden among the brush and brambles, then melted back into it herself. \n\nThere were scary things roaming the night...she'd just have to make sure she was the scariest. Mwahaha, and all that.\n\n@@@\n\nHer trip back to town had been uneventful. The early morning hours had seen the streets deserted, save one hooded figure she'd seen from a distance, though it was clear they weren't interested in anything she was up to. She managed to gather up a decent number of supplies...a few new bed rolls and a few tools, but mostly food with a couple of luxury items thrown in for good measure. How anyone could live without access to salt water taffy, she just couldn't understand. The Imperial stuff wasn't as good as the kind made on the east coast of Morrowind, but that was nothing new. \n\nLooking over what she had, she decided it was probably time for another purchasing run, but it could wait until she got back.\n\nShe left the supplies in a small side room designated for storage when she returned to the ruin. It was steadily starting to look half decent thanks to the frequent trips she'd been making, but it was still slow going.\n\nMost people were up and about but she found Feric asleep, though still in human form and propped up against a wall, looking very much like he'd fallen asleep by accident.\n\nShe padded slowly over to him and leaned in close to his ear. \"Morning handsome.\" He didn't move but his lip twitched. He wasn't asleep after all. \"What, no honey for the busy little bee?\" The twitch pulled even harder at the corner of his mouth.\n\nShe straddled his lap and knelt with her hands on his shoulders thinking to tease him, but to her surprise his hands came down around her hips of their own accord and pulled her closer, sliding underneath her to cup and squeeze her ass. He inhaled against her hair then pulled his head back giving her a disgusted look.\n\n\"Ugh, you smell like....dead things.\" He sniffed again and cocked a brow at her. \"And Cyrus.\"\n\n\"Zombies.\"\n\n\"I thought you hated zombies.\" He tipped his head to look at her askance. \n\nShe grinned wryly. \"What better reason to kill them?\" She pursed her lips and frowned then screwed up her face at him while poking him in the chest. \"What are you doing sniffing me for anyway? Serves you right if you got a nose-full bucko.\"\n\nHis expression became suddenly hard to read...which was telling enough and she smirked again.\n\n\"Awwww, you're not jealous are you? Mister 'we can't have sex, so sit on it and spin?' You,\" she poked him hard in the chest, \"aren't allowed to get jealous since you can't bring yourself to claim your stake, big boy.\"\n\nHe arched a brow at her and smirked. \"I changed my mind.\" Now that wasn't suspicious. What was he up to?\n\n\"So, after all that hoopla and angst about 'I can't tell you, but I really want to, please don't hate me...' blah blah blah... after all that, you just suddenly\u2014poof\u2014 up and change your mind?\" \n\nHis expression was neutral. Too neutral. \"It wasn't all that sudden.\" He smiled slightly. \"Maybe I just couldn't resist you anymore.\"\n\n\"You never could.\" \n\nHe sighed, \"No, you're right about that.\" About time he admitted it. Still, something felt...weird. Her mind flashed back to the night of the storm. It had gotten pretty heavy at the end, and had her thinking strange, un-Inanna like thoughts...L-word type nutiness. But that she had already brushed off as heat of the moment crazies. Still...she pursed her lips at him and narrowed her eyes. \n\n\"I think you're up to no good.\"\n\nHe squeezed her rear and grinned slyly, both actions conspiring to give her all kinds of warm and extra gooey feelings where she had no desire to be having feelings right at that moment. She shifted in his grip, but that only made it worse. Of course, that didn't stop her from doing it more. \"I don't think I trust that grin of yours.\" His face shifted, still smiling, but there was an edge there, something a little more serious.\n\n\"Trust what you know Inanna.\"\n\nShe grabbed him by the collar of his robe and pulled him close until they were nose to nose and growled softly. She let her fire come up so that her words fell hotly against his skin. \"You can't use that line....that's my line.\"\n\n\"Is your name on it?\" She saw his lips twitch again and hers twitched involuntarily in response.\n\n\"You have to ask permission first,\" she whispered threateningly against his, oh-so-close, lips. Then pressed her groin on tighter, feeling something lovely and hard pressing right back. \n\nIt was silent, but she could feel the suppressed groan rolling around in the back of her throat.\n\n\"Please may I use you're line?\" He whispered with that hint of a smile still playing at the corners of his mouth.\n\n\"'Please may I use you're line,' what?\"\n\n\"Please may I use you're line, you dangerous little imp?\"\n\nShe giggled against his mouth. \"Well, when you ask so nicely...\"\n\n\"Ugh.\" they both turned the their heads toward the sound of disgust at the same time. Mirisa stood in the doorway naked, her arms crossed over her ample, yet impressively perky breasts. Maybe she should really do more to try to talk Mirisa into giving Max a chance. He'd be sooooooo grateful if she hooked him up with that hot piece. \n\n\"You're lucky...saved by the bell.\" Ina purred maliciously, turning back to Feric and opting not to reply to Mirisa just yet. \n\nHe gripped her ass again and slid his hands down her thighs.\n\n\"Ummm, I said 'Ugh...'\" they looked back at Mirisa who only rolled her eyes and turned back into a cat and trotted off. She still looked thoroughly unimpressed. Expressive eyes these kitty cats have. \n\nHis hands were still busy...and while she wouldn't normally complain...it was disconcerting having him do it 'before' she tortured him within an inch of his sanity. Her hands came down over his and stilled them and she turned her expression serious.\n\n\"Honestly though Feric...is something up?\" He sobered as well. \n\n\"Yes and no.\"\n\n\"Same crap you're not ready to tell me.\"\n\n\"Pretty much.\"\n\n\"Am I going to have to put up with more hot and cold bullshit?\"\n\nHis lips twitched a little again. \"Pretty much.\" It was her turn to make a disgusted sound and she tried to pull away...his grip kept her in his lap.\"Something's changed.\" He was frowning, looking at her with a cocked head. \n\n\"Yeah.\" she agreed. She felt it to. Something was up, different. Not bad necessarily, but definitely disconcerting...mostly 'cause she didn't have the foggiest what it was or what to do with it.\n\n\"What is it? What's wrong?\" He asked, his voice soft with concern and his vivid green eyes searching her face. She noticed that his pupils had dark gold rings around them which bled into the green. Pretty.\n\n\"Besides the usual?\" she shrugged. \"I honestly don't know.\"\n\n\"You smell different.\" he offered softly. She grinned. \n\n\"I smell like the dead, remember?\" \n\nHe remained serious. \"No. Since the night we were caught in the rain...I just put my finger on it.\" The way he was looking at her, like he was looking 'into' her, was making her insides roil...and not in the fun 'I'm-a gonna get me some tail' kind of way either. \n\n\"Not as good?\" Her voice didn't sound as firm as she wanted it to and she cursed silently. Fetcher did things to her...things other people shouldn't be able to do. He made her doubt...hesitate. What happened to nerves of steel. Except with zombies of course....zombie-less nerves of steel. Ugh, he made her think nonsense to.\n\n\"No.\" he shook his head. \"you smell--excepting the dead things-- terrific. But it's different. He shook his head as if to clear it and sighed. \"I don't know.\" He smiled wearily. \"Go take a bath.\" She recovered herself, still feeling shaken, but having no intentions of showing it. She gave him a lascivious smile.\n\n\"A kitty cat type bath?\"\n\nHe chuckled. \"That I'd like to see...but I doubt you're that flexible.\" She laughed. Then gave him an over the top 'come hither' look, running a finger down his chest.\n\n\"Maybe you'd like to help me with the...hard to reach areas.\"\n\nHe grinned \"not with you smelling like that I'm not.\" she gave him a playful shove and got off his legs, receiving a swat on the ass for her efforts. She pouted over her shoulder at him. \n\n\"Fine then, I know where I'm not wanted.\" she stretched her arms over her head in a long sinuous curve and sashayed away, rocking her hips enticingly. She cast a glance over her shoulder to give him a smoldering look, but it was lost on him. His eyes were still glued to her swaying hips as she passed through the door. She smiled to herself as she turned away. She could live with that. ",
        "Inanna found Feric's sister, Bellane, more commonly known as Bella, watching over the three youngest cubs in one of the empty halls. \"Hey there, I was just heading up into the light of day to wash the smell of 'yuck' out of my hair, you want to come with to the lake? I figure it'll be safe enough for the cubs with both of us there.\" She nodded to the fur balls who had ceased their wrestling in order to watch her. Bella raised her head up from her paws, blinking, then grinned and shifted. \n\n\"God yes, get me out of this bloody dungeon.\" \n\nMinutes later they were at a small lake that lay just south east of the lair. It was bigger than the one she'd met Feric at, but with a less impressive waterfall. The rocky and uneven terrain in these parts made these little watering holes common enough that they didn't have to wander far afield for the pleasure of a bath...the non-kitty type at least. \n\nInanna wasted no time and the little ones were hot on her heels. She got out of the way fast enough not to get a face full of fur, but didn't miss the accompanying splash. When the littlest one came up he had shifted back to his human form and grinned ear to ear. She could only grin back and send a gentle splash back at him. He sent an equally gentle splash back at her. Talon, however, she felt free to go ahead and dunk with a vengeance, and did so. At which point all three went in for the kill...the little sharks. \n\nOne half hour of vengeance, counter vengeance, and counter counter vengeance later, Inanna dragged her defeated self out of the pool and flopped dramatically onto one of the more flat-ish boulders lining the miniature lake. \n\n\"Mercy, you vicious little creatures.\" She groaned and threw her forearm over her brow \"I am vanquished.\" The itty bitty ones giggled, and Talon gave her one last splash for good measure. She gnashed her teeth at him and got up off the rock, heading for Bella's drier perch so that she could dry off a little before she got dressed again. She sat next to the woman and Bella gave her a wry smile in return. \n\n\"Can't believe you let those little beasts beat you.\"\n\nInanna chuckled.\n\n\"Three to one, the odds were against me.\" She yawned and turned her gaze out over the surrounding trees. \"You wanna take a go?\" Bella shrugged. \n\n\"Maybe. I just like to sit in the sun mostly...that damned ruin is so dark and damp...just plain hideous really.\" She turned her face up to the burning ball in the sky and closed her eyes with a contented expression on her face. \"I miss the sun.\"\n\nThey sat for a while in silence. Though Ina found it to be a companionable enough. She hadn't spent much time around her, but Ina found Bella a very easy person to be around...her husband too for that matter. There was something...comfortable about them. Something oddly familiar.\n\n\"So how long have you two been mated?\" she asked after a while. Bella turned back to her, as her eyes had been busy scanning the trees for signs of danger, then shrugged.\n\n\"Twelve years. Not long.\"\n\nInanna arched a brow at her. \"Not long?\" She laughed lowly. \"I've never stayed with anyone that many years in a row, not even my parents.\"\n\n\"Well, eventually you might want to have children, then you'd likely find someone to settle in with. That's what usually happens...and to the best of us.\" she winked at her, earning a chuckle. \"...or would you?\" She asked, arching a brow and giving Ina a sly grin.\n\nInanna shrugged. \"Oh sure, I guess. I'd be happy enough to be knocked up if I managed it, but that doesn't mean I'd settle down permanently with anyone.\" \n\nBella paused to consider this and Inanna began combing out her hair with her fingers, letting her eyes wander back over to the edge of the wood. \n\n\"Is that usual? For Dunmer I mean?\"\n\n\"Yes and no. Really, there is no 'usual' as far as I'm aware. Family is big, kinship is important, with those you choose and those you're stuck with in equal measure, but relationships of a sexual nature tend to be a little more fluid. We live a long time, and people change. Besides, the whole institution of marriage is as much political as anything else. That goes for Ashlanders almost as much as for the great houses. Plus we have a pretty strange fertility cycles by human standards, and if a husband and wife are in different places when it hits, then the whole ensuring rightful progeny thing, that so many marriages seem fixated on, becomes a moot point. If you're a man and you want to pass on your legacy, the only thing you can do is find a Mer female in fertility and hope it sticks.\"\n\nShe laughed. \"Are you trying to tell me your men are all cuckolds?\"\n\nShe shrugged again and smiled. \"I wouldn't say that. From what I've seen, it's an odd balance of possessiveness and understanding. And it goes both ways. If you're with someone because you choose to be, then you aren't going to be keen on sharing. However, if you're separated for some long period of time, and you dally, it's generally understandable. Of course\" she paused holding up a warning finger, \"if you're obvious about it, or pursue something without their blessing while they're still right there, then that's considered the height of impropriety and is most definitely frowned upon.\"\n\n\"So basically if you're discreet and sensible about it, no one bats an eye?\"\n\n\"More or less...though really it's so variable...and so many choose not to be in permanent or formal arrangements which changes things completely. Take my mother for example. She had a lover whom she was very fond of, I dare say she even loved him, but she was on an extended scouting trip with several others on inter-tribal business during a period of fertility. My father was among them, and since he was a pretty piece of flesh, and since she was stuck there and feeling frisky, she decided to jump his bones in order to take the edge off. I, of course, was the product. She came back and left with her lover. When she discovered she was pregnant she returned so my father could see his child, and I generally spent my growing years between them. Really it worked out for the best since the partner of her choice couldn't give her children anyway.\"\n\n\"Huh. Was that difficult, going between parents? Did you ever feel torn?\"\n\n\"No, not at all. They'd often spend some time together with, and even without me. Though sometimes I'd miss mother and Do'Sekket when they'd be gone for long periods of time, especially when I was stuck at home with the tribe and Serjo-papa, er my father,\" she smirked and shrugged at her slip, \"made me study with the wise woman. But when I was old enough Mother took me with them to teach me to hunt. Do'Sekket...Sek-sera I used to call him, was her original lover, and was also like a father to me. He was a skilled hunter and absolutely devastating in a fight, a master of at least two hand to hand martial arts that I knew of. He taught me as much, or more than either of my blood parents. He was never fully accepted by the whole tribe since he was an outsider, but he was accepted in the degree that my mother and I had laid our claim on him and accepted him as family.\"\n\n\"And he didn't mind that you weren't his? That he was raising another man's child?\"\n\nInanna stopped combing her hair out then and brought her knees up to her chest to rest her arms on. \"I don't know. Like I said, he and mother couldn't have children anyway. He wasn't Dunmer, but he seemed just fine with it, he was always good to me, and I adored him. We were heartbroken when he died. Even father was a little broken up about it. They had a great deal of respect for one another, and eventually became close friends.\" She chuckled, \"And naturally they bonded over the delights of dealing with a teenage version of me. \n\n\"The most terrifying experience of my life was when I was in my early twenties and they both were told by the same rat that I'd skipped out on the wise woman and had been mucking around with Deadra instead. They both came at me at once. Father literally turned purple he was so pissed. Not so much about the Deadra thing, but over the disrespect he felt I'd shown my teacher. I got a epic lecture on the ancestors, followed by Sek-sera taking me out behind the proverbial woodshed and kicking my ass in a very serious way. He didn't approve of Deadra worship.\"\n\n\"What did 'mom' have to say about it?\"\n\nIna chuckled darkly. \"She sauntered over after they were done with me and had left me propped up against a tent pole, bloodied and bruised. I remember looking up at her, and feeling her tap my leg with her boot. She said, \"ya' liked that?\" I being the smart ass kid I was answered, \"yeah, it was all right...but I could have done without all the talking.\" She just nodded, and told me to stick with Azura or Boethia, because, and I quote, \"those other sly fetchers are a right pain in the ass.\" She told me to consider it a lesson in 'not getting caught,' though if she did catch me playing patty-cake with a bunch of cackling Sheogorath worshipers she'd disown me. Apparently that was her only stipulation. No Sheogorath...and stop getting caught.\" \n\n\"Sounds like an interesting woman.\"\n\n\"You don't know the half.\"\n\n\"What was he anyway, her lover, if he wasn't a dark elf like yourself? Human?\" She paused and looked uncertain, \"Is, is that ok to say, 'dark elf'? I've never heard you use it.\"\n\nIna did grin at that. \"It's fine. We don't use it, but I don't get worked up over those things, it's pretty much common usage here...though if you ever travel east, I'd stick with Dunmer so as not to twist anyone's knickers.\" She grinned. \"And, ah, he was a Khajiit.\" \n\nBella started slightly, her eyes widening briefly as well, then narrowing with mirth. The both laughed. Bella looked like she wanted to say something, then just shook her head, still chuckling.\n\nThey both fell silent again, watching the cubs and the forest's boarder in turns. After another long while it was Inanna who felt compelled to ask another question. \n\n\"Do...do your kind tend to make permanent partnerships then?\"\n\nBella turned to her with an unreadable expression on her face. \"We do. Always.\"\n\n\"I have trouble imagining that.\" \n\nBella laughed. \"And I have trouble imagining what you've just described so entertainingly.\"\n\nInanna gnawed her lip thoughtfully. \"Not at all?\"\n\n\"No.\"\n\n\"Ok....theoretical question. Let's say your mate disappeared on a long trip, and didn't come back when expected. A great deal of time has passed....years even, and you've seen nothing of him...you wouldn't take pleasure or comfort in another?\"\n\nBella smiled softly and looked back out over the still splashing cubs below them. \"I couldn't. Not if he were still alive. At least I couldn't imagine that, seeing as it's not ever happened to me.\"\n\n\"Well, that's the thing, you can't know that. How could you?\"\n\n\"I could...we....well we know. It's the link.\"\n\n\"Link?\" That certainly peaked her interest. \"What kind of link? Like a magical binding or something?\"\n\n\"Yes, actually, it is a little like a binding. There is a bond, a connection formed with ones mate that can't be broken or even ignored really, and it draws you to the other and dampens any attraction you might feel for another. You can still feel attraction, but it lacks the same intensity and pull you feel with one you've fully mated with. I've only had one real mate, but I've heard you can feel it, unequivocally, when they pass, or even when they're in great pain or distress.\"\n\n\"Have you felt that?\"\n\nBellane's face darkened. \"I..there was a time when I might have, but I was experiencing such pain myself, that I could not discern his from mine to tell any difference.\"\n\nInanna considered dropping it and changing the subject since whatever was going on in the woman's head wasn't pretty, and she wasn't so good with the consolation thing, as a general rule. She didn't have to make the decision because before she could think of something to lighten the mood, Bella continued, still looking off into the woods.\n\n\"The twins weren't our first cubs you see. I was in heat shortly after we mated,\" she darted a glance back at her, \"we too have long cycles of fertility...\" She sighed. \"A little girl. Yasmin. She was four.\"\n\n\"The hunter's?\" Inanna asked, her voice sounding incredibly tight to her ears, and an itching heat that wasn't fire burning her throat and face.\n\n\"Yes. Ambush. Many were lost and injured. Mirisa's mate as well.\" Her voice and face were calm...no doubt that stillness that comes after one has exhausted themselves of their sorrow so many times there is nothing left to do but be still and calm. There was another long moment where Inanna fought to find something to say. She could not.\n\n\"I'm sorry.\" It wasn't much...it was nothing. But what can one say or do? To say? Nothing. Do? Well...for the first time since she's lit those damned candles, that sick feeling disappeared. That's what she was doing. If it meant getting dirty. Fine. If it meant displeasing the ancestors...fuck 'em, they were generally stuck up jackasses anyway. It was worth it. It was worth it to see that this kind, good hearted person didn't have to watch another of her small children slaughtered. \n\nHer eyes turned to the twins and talon. It was worth it. There were lines one didn't cross, those were the rules...but even those rules had exceptions. She decided to make the exception. She would claim them, it was decided. They might not like or get it, but they didn't need to. Her ancestor's would probably pitch a fit...but again...fuck 'em. They're dead, what are they going to do but whine?\n\nThey both stared out at the distance for a while, and had fallen into such a thoughtful silence that Bella's words almost made Ina jump when they came.\n\n\"Do you want me to braid that for you before it dries? I do a mean Breton twist...I get lot's of practice with three young girls. Mirisa isn't really the type one asks to braid her hair.\" She smiled mildly. Inanna returned the smile with a stunned look, then thought, why not. She repeated the thought out-loud. \n\nInanna felt a little shy about it as Bella turned and indicated Ina turn her back to her. It was a weird feeling. It felt a little like she was a child who'd been called in alone to see the wise woman and hadn't done anything wrong...that they knew of. She relaxed pretty quickly as Bella's fingers ran lightly through her hair, loosing what tangles remained with gentle skill, and pulling the length of it into workable segments.\n\n\"Tip your head forward a bit.\" \n\nShe obeyed. Then waited. Nothing happened. Then Bella dropped the hair she'd been holding.\n\n\"Bella? Everything ok?\" Nothing. Her ease was gone and she was on high alert, throwing out her senses in all directions and whipping around to find Bella. She was kneeling right there looking back at her with wide eyes. \"Bella? What's wrong?\" She only blinked and inhaled sharply.\n\n\"Ah...um...I, ah, nothing. It's nothing. Turn around, I'm sorry.\" \n\nLike hell it was nothing. She gave the stuttering woman a disbelieving look. And Bella gave her a strange little smile, and then a weird half laugh in return. \"Please...it's ok...\" she didn't finish the thought, but grabbed Ina's shoulders and physically turned her and taking up her hair in a firm way that said, 'we are now no longer talking, so sit and be quite.' So she was. The shy feeling was worse now, however, and she fought not to squirm in her seat as the her hair was slowly twisted back from her face and swept up to be tucked in a knot at the back of her....oh....damn. Her neck. The bite marks...she'd have to know what that was all about, and who'd put them there...damn.\n\nShe wondered if she should say something, or if Bella would say something. Oh man. So awkward. \n\nEventually Bella finished and patted her shoulder.\n\n\"There, all done.\" She wasn't going to say something. Ina sighed. Neither of them looked at each other.\n\n\"Bella...\"\n\n\"...\"\n\n\"Was it the...marks that freaked you out?\"\n\n\"A...a little. Sorry about that. I wasn't ex-...he never said anything is all. It surprised me. I figured he'd have at least...well, never mind.\"\n\nOk, now this was ten times worse than being trapped alone with the wise woman. She sighed again.\n\n\"Listen, I...I don't think he wants it getting out...you know? Trying to focus on the job at hand and get that over with first...\"\n\n\"Yeah.\"\n\nIna licked her lips then turned and looked at Bella who had been frowning at her lap. She looked up and their eyes met. Inanna's were hopeful, Bella's were searching. Eventually they both gave up on looking for whatever they were looking for and gave each other a small tentative smile.\n\n\"Awkward, eh?\" Inanna smirked. Bella chuckled in response.\n\n\"You said it sister.\"\n\nThe weird tension was momentarily broken, though Bella was still thoughtful and there was still a strange expectancy in the air. There were a few attempts at speech which ended in expressive exhalations until Bella finally just shrugged.\n\n\"Well, shit.\"\n\nInanna snorted out a chuckle. \n\nBella's face then went through a remarkable transformation, from amused wonder, to sudden, blinking shock, to incredulity, and finally settling into a darkly amused leer. \"You know...it occurs to me that in order for him to leave those marks he would have to have been --\"\n\nIn the corner of her eye she spotted Talon preparing to jump off a rather high jagged looking rock and sent him a heartfelt mental thanks.\n\n\"Talon,\" she called with some sternness, interrupting Bella's observations, \" Come down from there, that pool isn't deep enough for a jump like that, you'll crack your head open.\" Talon made a face, and she flicked her eyes at Bella to see her smirking knowingly back at her. She cleared her throat and turned a searing glare on the impish little boy. \"Now boy, or I'll crack it for you.\" \n\nShe was was about to jokingly tell Bella to kindly stop smirking at her like that, but something else caught her eye in the distance, a flicker of movement beyond the edge of the woods. It was almost non-existent and easy to dismiss as wind to sunlight playing on the leaves...but her gut told her differently. She frowned and nodded to the woods edge.\n\n\"I think I saw something...You see anything?\" She glanced back to find the other woman giving her an even wider smirk...she smirked back. \"No, I know. Talon was avoidance...but I honestly think I saw something.\" Bella frowned and looked behind her. They both watched the forest, but there was nothing. Still...\n\nBella shifted and growled softly, not taking her eyes off the forests edge. Inanna licked her lips and quickly dressed, pulling her clothes on in record time and arming her bow the moment it was ready. The three cubs stopped their play and looked towards them, pulling themselves out of the water and shifting as well. The group made their way slowly back to the ruins, they could only go as quickly as the shortest legs among them. Bella and Ina could have managed to carry them in an emergency...but that would have left both of them unarmed, so they padded cautiously along instead. \n\nThey encountered nothing until, in a little clearing about 100 yards from the ruin, they were stopped short by a rustle in the brush which was followed by the emergence of a club wielding minotaur. The creature turned to them instantly and snorted, its black eyes widening. It let out a great bellow and Ina lifted her readied bow as soon as her mind processed the shift in its weight to its left leg. \n\nBefore it could take that first step or she could fire her first shot, a silent streak of gold came down on the beast from above. A small lion landed on the creatures shoulders, it's claws digging into the meat of its shoulders and back as the bared teeth clamped down around the beasts throat. \n\nThe minotaur thrashed in response, trying to throw the animal off. Ina cursed and held her fire, waiting for a clearer shot. There was too much thrashing and she didn't want to hit the lion. At first guess the size told her it was either Ambrose or Mori, and her knowledge of their respective temperaments told her it was likely the later. ",
        "The lion was surprisingly silent as it dug in, making the larger beast howl in rage and pain. Finally the little lioness yanked its head back, taking a chunk of the beasts throat with it, and flinging herself off of her prey and well out of flailing range. The minotaur whirled to confront its attacker, but stumbled and fell to its knees instead. \n\nThe kitty cat watched and circled the fallen enemy in 'cat and mouse' fashion. Inanna decided to end the scene before the minotaur had a chance to find its second wind and fired off the arrow she'd been patiently saving. It struck the creature's head behind one of its horns and it went down with one last whining groan. \n\nThe little cat tossed her an irritated look. The message was clear as day. 'You stole my kill...spoil sport.' Inanna sent back a look of her own, her eyes darting briefly to the younger cubs bouncing excitedly behind her and Bella. Mori seemed to catch her meaning and looked away, apparently deciding her time might be better spent cleaning one of her paws instead of silently debating whether or not she'd acted irresponsibly via a glare-off with the dark-elf. Damn right kid. You'd lose anyway. \n\nIna didn't know what was being exchanged between Mori and Bella but at the end of it, Mori looked a little less full of herself and had opted to keep near Ina instead. Apparently Bella's glares were a lot more expressive\u2014and effective. \n\nStill...that was an impressive take down. Kid had skills. Mori had fallen in step with her, so she slowed, letting the others get a little farther ahead of them. \n\n\"Nice kill.\" she murmured lowly, her eyes still watching the woods for more interruptions. In the corner of her vision she saw the small lion look sharply at her. \"Quick,\" she continued, \"you didn't mess around and went for the throat, then moved away to reassess. A good move. Just don't let your success change your strategy. Always try to make it quick, always go for the throat...never underestimate an opponent. Cocky equals dead.\" The cat had stopped and was staring at her when Ina turned to look back at her over her shoulder. \"One day, you'll get cocky and you'll find out for yourself. You better hope the lesson doesn't kill you.\" She narrowed her eyes and jerked her head forward. \"Come on. Move it or lose it kid.\"\n\nShe came. She watched Ina warily out of the corner of her eye, and Inanna tried not to smile. For a second there she'd sounded like her mother.\n\n@@@\n\n\"You smell much better, kitten.\"\n\nInanna jumped and whirled at the soft whisper and the feel of warm breath against her neck. Another breath, this time against her ear, made her spine tighten and her own breath hitch in her throat. Sneaky god damned cat. She didn't even get the chance to chew him out about it. Before she could he grabbed her arm and was herding her down a long hall. As she trotted after him, her legs forced to work double time to keep up with his much longer ones, she couldn't help but notice they were working their way toward the timed gate where she'd first entered the lower levels of the ruin. \n\nNo one really went down there much, so her curiosity was peaked. Peaked enough to keep her moderately compliant instead of thrashing him for the manhandling. It wasn't even the fun kind of manhandling...or elf-handling...or whatever. What in Oblivion was he up to?\n\nThe gate had been propped open with a large stone, so they needed only to duck beneath it this time. Her curiosity built to a near burn, and she was just about to give in and ask what it was he thought he was doing when he stopped suddenly, whirled on her, and slapped her ass with the most adorably boyish grin she'd ever seen.\n\n\"You're it.\" \n\nShe blinked and gaped\u2014 carp like\u2014 as he took off down the hall. After a second she heard a metal gate slam somewhere ahead of her, and the sound startled her back into reality.\n\nShe found his discarded robe around the corner and knelt, gathering the still warm cloth in her fist. So, a little game of 'hunt the hunter,' eh? Her lip twitched, and her guts twisted in interesting ways. The thought unearthed memories of the last time they played 'tag,' and naturally evoked the memories of the results of that game. Namely of her being being fucked absolutely silly by a massive, fanged cat in wet grass during a thunderstorm...you know, the usual...just another day at the grindstone. \n\nShe giggled...then frowned. Some heavy stuff had been going through her head that night as well. She'd brushed it off, but she couldn't ignore the fact that things had, well, changed. And here she had a choice. Play, or pack up her toys and go home. He'd given her another invitation. He hadn't come on to her again like he had the very first night, except like this. Did she dare? \n\nShe grinned. Who was she kidding, it was too much fun to pass up. \n\n'Besides,' she reassured herself for the umpteenth time, 'that was just heat of the moment stuff, nothing to get weird about. It was all good. They liked each other, and they had a good time together, where was the harm in that? Like she'd said before, no one was proposing...it was just a game.\n\n'Unlike most people, I take my games seriously.' The ghost of words past, whispered in her ear. \n\nScrew it. That was more a habit than a rule anyway. Let the games begin!\n\nHe was a tough opponent. By the time she finally spotted him she'd been half ready to give up. She almost suspected he let her catch a glimpse of him: a shadow of a moving something flickering down a nearby hall. She spotted the movement from the far side of one of the massive abandoned great halls. From that distance it could have been a trick of the eyes, especially with the heavy shadows and the way the blue-glow from the remains of the magic infused walls seemed to ebb and flow like the breath of a sleeping animal. Instinct told her to follow.\n\nShe didn't follow right away, however. After all, her instincts weren't saying 'go, run!' they were saying 'there's that sly bastard...now what do you want to do about it?' Yes, that's right, sometimes her instincts asked questions. She trusted them, she didn't blindly follow them. Mostly. \n\nSo, Instead of rushing off, she sidled around the room and up to the cold silvery-white stone of a pillar set next to the hall where she'd spotted the moving shadow and started to climb. He was trying to lure her, she was sure. He was good enough to evade her if he wanted to, especially with a head start. Well two can play at that game. The pillar was no good on its own, too straight and not nearly broken enough to make a comfortable perch, but it leaned just enough to the side to allow her access to another ledge which ran across the wall and over the hall entrance. \n\nShe crouched there, and waited, snickering at her cleverness. And here he thought he was so sneaky and clever. Eventually he'd return when it was clear she hadn't followed him, no doubt in an attempt to double back and take her out when her back was turned. \n\nShe waited. And waited. Eventually her legs began to grow a little numb from holding her position and her arms tired. How dare he ruin her perfectly devious plan. With a defeated sigh, she dropped down before the hall entrance. Nothing, not even a 'something's-fishy-here-vibe'. The bastard must have gone on. \"Damn.\" \n\nShe turned back to the room, only to find herself tumbling ass over teakettle across the smooth marble tiles. She rolled into another pillar and ended up stunned and on her back. She was hardly able to find the breath for a delayed cry of shock when a face appeared above hers and she found herself pinned beneath a large male body, with her wrists held firmly over her head. \n\nAt this point her breath was too busy being sucked from her body and her tongue too entangled to articulate anything, even if she had thought of anything intelligent to say. She bucked against him, attempting to rip her wrists free, despite the fact that her mouth had other ideas and was busy nipping at his lower lip and battling his tongue with her own. His heat and scent filled her senses and she found herself pressing against him more than she was trying to pull away.\n\nAnd then he was gone, leaving her stunned and dazed on the ruin floor. Her eyes popped open to reveal the arches of the distant grey-blue ceiling She could feel the cold of the stone through her thin pants and loose fitting shirt. Funny the things you don't notice when your mind is otherwise occupied. She pulled herself up and reassessed.\n\nThis was not going to work. Her prey was too fast, too sneaky, and too strong. What's worse...he knew her weakness. Well...one of them. At any rate, she wasn't going to be able to find him, and waiting him out was clearly not an option. Nor was setting a magical trap for him...since that would injure him and defeat the whole purpose of this game. Namely, getting laid.\n\nShe looked around, noticing the cocky s.o.b had left her a little hint in the form of disturbed rubble near one of the exits. She wasn't going to get him the old fashioned way...so she was going to have to cheat.\n\nThere was an overhead walkway in one of the side chambers, at least as far as memory served, and if it did serve, then that walkway was about ready to come down. Perfect. \n\nWhen she got there she found it wasn't too high up and therefore an easy climb. The stone work came down just as easily, and one careful jump and a blood curdling scream later she was stretched out over a brand new pile of ruble, her limbs splayed rather awkwardly over the shattered remains of the walkway. \n\nFeric was grinning to himself as he prepared his next ambush, alight with the excitement of the hunt. But the adrenaline in his system spiked in a less pleasant way when a crash and sudden scream rang out through the halls. He was on his feet and veering madly through the dim corridors before his conscious self had time to start panicking. It caught up with him when he entered the great hall from which the scream had come only to find a small, slender body laying unconscious over what looked like the fallen remains of an overhead bridge. Or, at least, he prayed she was only unconscious.\n\n\"Ina...\" He fell at her side and his hands shook as he cupped her face in his hands, leaning in to search for any sign of life. He felt a faint stirring of air from her lips and closed his eyes in relief. His heart came out of his throat as he reopened his eyes to find them looking deep into the glowing red embers of her own. \"Thank god.\" He whispered, reaching up to cradle the back of her head. He paused half way as he noticed the lopsided grin on her face and felt something hard and...sharp lightly tapping his side.\n\n\"Gotcha.\"\n\nHe looked down to see a knife pointed at his stomach. He gave a shocked look, not quite certain he was seeing what he thought he was. His heart was still pounding from terror and panic and for a moment all he could do was stare in disbelief. She couldn't possibly have...just too...what was she thinking!?\n\n\"I-Ina...I...you faked it!? Kyn! What...Are you mad? Do you have any idea how...\" He pulled away and got to his feet glaring at her, shock, relief, and anger all converging on him at the same moment. He inhaled deeply and pointed at her accusingly. \"Don't...ever..do that...again.\"\n\nHe practically snarled at her, but she just smirked, then pouted absurdly. \"Aww, come on, you left me no choice. If you'd played nice and fell for my other trap, we'd already have moved on to the next round.\" He continued to glare speechlessly.\n\n\"I'm serious Ina.\" He growled, his voice hoarse with emotion. She must have heard it...or seen it in his face, because she immediately sobered and rose as well, sidling up to him and laying her hands across his bare chest. \n\n\"I'm sorry Serjo...I shouldn't have frightened you. I just hate to lose.\" She ended with a naughty grin and leaned up to nip his chin, acting as if his death glare were a come hither glance instead. He was loathe to admit that it was working. It didn't hurt that he was still naked and she was rubbing her body against him in very suggestive ways. And he could feel every inch of her lithe, firm body beneath her thin shirt and pants. Every inch.\n\nFor a brief moment he fought her, willing himself to stay angry...but fingernails were tracing patterns down his back, and his stiffening, treacherous prick was twitching distractingly as it was pressed against her stomach.\n\nHis hands were on her drawstring, his mouth on hers, and his ire and panic long forgotten as she wrapped her arms around his neck to pull him down to her and into a longer and deeper kiss. Her heat and taste made his cock surge to full attention and he groaned in delight as she shimmied out of her pants, giving his hands free reign to grip and squeeze her sweet little ass. Her shirt quickly followed.\n\nHowever, to his unending disappointment, she slithered out of his arms the moment the flimsy material hit the floor and stepped back away from him. Although, he admitted to himself, the distance was giving him a spectacular view. One worth enjoying while he could. \n\nShe was perfect: long and lean from head to toe, her toned muscles flexing with subdued strength as she moved, her slender feet skimming the stones so gracefully it was as if she were barely touching them. She began to circle him, and he was content to turn with her in order to keep admiring the slow sway of her hips, and the way the blue of the ruins glistened on her dark, naked skin, making it glow. Her dark red hair was pulled back, but a few disobedient strands had already fallen loose to frame her narrow, delicate face and ears...those red lips....those burning eyes. \n\nHis eyes slipped lower, and he heard her chuckle, noticing no doubt, the way his eyes lingered on the pert rounds of her breasts. Perfect handfuls...or mouthfuls he amended, feeling his cock jump at the images accompanying the thought. She paused and tilted her hips toward him, resting her fists above them jauntily.\n\n\"My, my, my,\" she whispered lowly, \"if I didn't know better, I'd say you wanted me Sera.\" He tore his eyes from her tilting hips and the smooth mind-bendingly sexy V of split flesh between them and glanced down at his own now-throbbing erection before finally meeting her eyes with a sardonic arch of his brow.\n\n\"Gee...you think?\" he asked dryly. Her smirk faltered into a real smile for a moment before she tilted her head and gave him the same naughty, lustful look he remembered so well from her little shack on the waterfront. A shiver ran up his spine as he remembered the details of that encounter. \n\nHer smile widened. \"Mmmm, I like that look on you. You look...hungry.\" She was teasing him now, but he couldn't see to what end. To make him crazier? In the mean time the sight of her, that sexy purring voice, and the myriad of explicit images running double-time through his brain were really starting to wear on his patience. He stepped toward her instinctively, and she stepped away, waving a finger at him.\n\n\"Ah, ah, none of that.\" Her grin turned malicious. \"I had to work for it Serjo...now it's your turn. If you want me...you're gonna have to catch me first.\" Before he could comment or object, she was gone, sprinting at surprising speed toward one of the side entrances.\n\nHe quailed only a moment before his body and his instincts took over and he turned on his heal and went after her.\n\nInanna hid her surprise and jogged sharply to the side when she found that Feric had somehow managed to catch up to her and head her off, blocking her intended path. Now, she wasn't slow by any means, so she had good reason to be caught off guard. Sure she would have expected it if he were still in his feline form...but he wasn't. Yet some how he'd managed to move that impressive bulk of his with a speed and agility that one would never have expected. \n\nIt was, frankly...kinda hot. Scratch that, it was really fetching hot. Meow.\n\nHe recovered easily and dodged with her, cutting off another escape route, but leaving the first undefended. She feinted to the left and sprung to the right, almost making it ...if not for the hand that came down around her forearm, gripping her hard.\n\nHer response was completely instinctive and before she could reign it in her other arm was lashing out toward his jaw. At the last moment she managed to pull the punch, hoping to weaken the blow, but it was unnecessary. He'd shifted his weight to let it pass harmlessly through the air in front of him, consequently throwing her off her own balance as she adjusted to compensate. He was forced to release her arm however, allowing her another opportunity to strike or escape.\n\nFor a split second she intended to stop the game and apologize, but by the time she'd formulated the idea, she was already too busy leaping out of the way of a fierce lunge to give it any more thought. Instead all she could do was dance back away, her focus totally aimed on keeping her feet under her and her ass off the ground.\n\nHe continued to distract, coming at her with an immediate left hook, and then a wrist grab...and then she suddenly realized as she hastily blocked a rapid flurry of tellingly weak strikes, that she was on the defensive, and that the bastard was using his size and strength to corral her into the rubble she'd originally used as a lure to catch him. \n\nWhy that no-good, sneaky...godamned...incredible...bloody sexy...\n\n\"Fetcher!\" She cursed as a piece of broken stone scraped her ankle and another caused her to stumble. Her darting thoughts brought with it a dangerous lapse in her awareness of her surroundings and she found herself suddenly spun and caught from behind. Solid arms crushed in around hers, pinning them to her sides as she was lifted off her feet. \n\nShe might have put up more of a fight if the entirety of her conscious mind wasn't already completely focused on the long, hard cock pressed tight against her ass. That and the veritable pool of wet heat between her legs as her body responded none too subtly to the sensation. \n\nHis chest felt like hot steel against her back and she groan softly as his lips brushed the length of her sensitive ear. His growling whisper was almost lost in the sensation of the hot breath caressing the shell of her ear and the resulting tingle running down her twisting spine. \"Does this count as my thirty seconds?\"\n\n\"What? What in Oblivion are you talking about?\" She gasped back, confused that he was choosing to waste air on things like talking at a time like this. Especially when he should be turning her around so she could suck it out of him instead. Hell, there were a few other things she wouldn't mind getting her mouth around at this point, or better yet, he could be the one doing the sucking and licking. Yum.\n\nHer eyes rolled to the ceiling as a silent chuckle shook his body against hers and consequently caused that lovely stiff prick to slide a little more firmly between the rounds of her cheeks. \n\n\"Thirty second rule.\" He repeated, grinding his hips upward and sliding himself teasingly along the crease of her ass. It took her a minute to fully register what he was saying...understandably. \n\nWhen she did, she laughed. It was a broken, breathless sound, and it ended with another low moan as she writhed more intently against him. \"Sweetheart, we both know you could last a hell of a lot longer than that.\" She breathed out. \n\n\"Now...since we've settled that, why don't we move on to part two...where we fuck each other senseless, preferably somewhere kinky. Since it's tradition and all...Oh look, Ayleid-ruin-cum-necromancer den! Looks like we're good to go.\" She arched her back against him none too subtly and tightened her ass around the teasing member rubbing against it.\n\nIt was his turn to laugh brokenly. To her unending disappointment, he also put her down. Her bare feet tottered somewhat on the cool stone tiles and her legs trembled liked a bowl full of scrib jelly. It wasn't enough to disable her, but it was a pretty strong reminder of what her big ole kitty did to her. She had flashes of fond memories past\u2014 a long, rough feline tongue strategically placed, a firm hand mauling her thighs and ass, a thick, hard cock pounding her mercilessly...from behind...or into the kitchen table...",
        "Ok...that's it, no more Mrs. nice-elf. \n\nFeric gazed down at the flaring curve of her hips as they swelled into the perfect, luscious round of her ass, his mind awash with all the many and delightful things he could...would be doing to it. The possibilities were endless. \n\nHe started to look up and around to see if there was a convenient flat surface handy but was cut short by a dusky hued meteor crashing back into his arms and nearly knocking him off his feet. \n\nHe staggered backward to find footing as she wrapped herself around him, her strong, slim thighs closing vice-tight around his waist while her arms captured his neck and shoulders. He could only hang on, gripping her ass as her fingers dug into his hair, pulling him to her and violently crushing his mouth against hers. \n\nAfter that it was all tongue and teeth and heat...a furious battle to keep from losing all control and drowning in the overwhelming insistence of the other.\n\nAnd was she ever insistent. She was furious and wild like he'd never seen. Her teeth pulled and nipped at his lips and neck and her heels dug sharply into his back, as if trying to crush and squeeze him like grapes through a wine press. It was...well, it was damned erotic, and he couldn't have repress the low growl emanating from his chest if he'd tried. He was already too far gone to even notice it, thrust, as he was, so rapidly and deeply into the red haze of desire.\n\nThe nip of her teeth on his skin, the sharp prick of her nails as she scored his back...so much like the prick of claws...the low, satisfied rumble in her throat as she plundered his mouth...so much like a contented purr...\n\nHe let out a low groan and lifted her higher, spreading her with his fingers and thrusting eagerly upward without the slightest pretense to form or grace. She didn''t seem to mind and reached between them just as eagerly to grasp the shaft and guide it home.\n\nThey cried out in one voice, both exhalations filled with a strange contradiction of urgent need and grateful relief. As he slid easily into that hot, silky sheathe, he was struck by the how utterly perfect she felt around him. That was the word...the one that kept leaping to his mind when he looked at her, touched her...and now the way he fit inside of her... so completely perfect.\n\nHe squeezed her tight, grasping her hips as he pumped into her, reveling in her fiery heat and gasping her name into her cinnamon scented hair. \n\nHe wasn't sure how long they stood like that, wrapped around one another, desperate to be inside the other, but it was long enough to bring him to the edge and cause his legs to begin to weaken as his climax approached. After one final thrust, he pulled her off of him, causing her to growl her disappointment. He didn't make her wait long and blindly found the nearest flat surface to collapse against for support. He didn't bother to move or adjust her, only lifted her back onto his shaft the moment he was even partially settled. \n\nThey moved slower this time, less frantic but no less intensely. Inanna squeezed in against him, hugging her body to his, her limbs clinging like hungry vines, her equally voracious mouth leaving hot trails with her lips and teeth along his neck and shoulder and chest. \n\n\"Dammit...\" she husked out, her head bent down so that it rested beneath his chin, \"why can't I get enough of you?\" \n\nHe could only laugh at that. The feeling was more than mutual. \n\nShe looked up at the sound, but there was no humor in her eyes, just desire and something else...something more desperate. He wanted to believe it was lust...but he knew it wasn't. She slid a hand up the back of his neck, and gripped the base of his skull by winding her fingers into his hair, using the leverage to grind herself against him, her swollen, panting mouth parting invitingly. He took the invitation, slipping his tongue gently between her lips and shuddered at her oddly tentative response as her own small tongue flicked delicately against his. Their bodies mimicked their mouths, moving together in a slow, breathless mating...gentle, yet near shaking with strained tension. \n\nShe broke the kiss just enough to admonish him for his laughter, but not enough to sever the warm contact of their lips. \"It's not funny. It's making me crazy. You're not supposed to do this to me. No one is.\"\n\n\"Believe me, Ina, I feel the same. I want you. So very badly. I can't stop thinking about you.\" He whispered back, partly in confession and partly in condolence, but only after another long slow kiss. She whimpered and bucked against him in response and he felt a shudder pass through her. \n\nAgain he was torn by both longing and guilt. He needed to tell her, to admit what he'd done, and instead he was pushing her deeper, strengthening the bond between them. But then, perhaps it wasn't the bond that was singing out to her...perhaps it was only her...no, he could keep the truth from her, but not from himself. And he couldn't keep it from her much longer. He buried his face into the crook of her neck and clutched her tightly. \n\nInanna groaned again as another wave of pleasure wracked her body, her hips jolting as it hit with an electric pulse. So good...he felt so good...scary good. Terrifying. She wanted him...so badly. And she knew, beyond a shadow of a doubt, that no amount of will power, or 'down-girls' were going to be enough to tear her away from him. Not even the fear that this realization caused was quite enough to untwist her fingers from his hair, or still her desperately grinding hips. \n\nIt frightened her...and she was afraid. \n\nReally afraid, like she hadn't been in a long damned time. It was one thing to let go, to give yourself over to lust and desire...to want freely and be utterly unapologetic. It was something else entirely to find yourself helpless to it, to be not just unwilling but unable to stop yourself.\n\nBut...he was gripping her just as hard as she gripped him...his moans sounding just as low, and pained, and needful...it was comforting at least. If she was losing it, at least she'd have some one to lose it with.\n\nShe bit her lip and slid her hand between them, her fingers seeking the place where their bodies joined, and felt the warm, hard silk of his shaft as it slid into her, and the tight stretched flesh of her own sex as it opened to accepted him. Her body wanted him, accepted him...and then there was that word again...that awful little four letter word. She'd used it in the past, always lightly or dismissively. An empty word, one she hadn't believed in. Hadn't. Past tense. Was that where she was now? Azura, how did this happen? \n\nShe felt his fingers slide lower down her ass to rest, like hers, at the apex of her thighs. They slid over her pussy, caressing the stretched lips and running lightly over her own questing fingers. The sensation of that contact was indescribable. \n\nShe gasped and tore her head from where she'd hid it in the crook of his shoulder only to have her gaze caught in the brilliant green trap of his eyes. There was so much to see in those eyes. It was frightening, it made her heart clench in her chest, it made her insides melt like butter in an oven, but more than anything, it was completely and utterly thrilling. \n\nAs if complicit with her thoughts, her body clenched around him, sending rivers of electricity rushing through her. She gasped and thrust that much harder against him, but she didn't look away. She couldn't look away. Those eyes just kept burning into hers, and it was as if there were something reaching out from those eyes and right into the core of her. It wrapped around that core, tightening its grip until she was panting and gasping for breath. \n\nShe was only half aware of what her body was doing, but the cresting wave was building past the point of distraction. She was no less caught in that green spell, but now it was contending with the unrelenting tug of her approaching orgasm. Up and up it built, pulse after pulse, until finally it broke over her. \n\nBut this time it was different. Instead of the usual explosive, starry-eyed, screaming-at-the-top-of-your-lungs wave of feral pleasure, it was like being punched in the gut. Hard.\n\nHer body sized, every muscle and tendon suddenly rigid and immobile, her spine snapped drum tight, and her toes and fingers curling with the painful strain of it. Instead of a scream, or cry, all that left her lips was a breathless whimpered 'ah' of surprise. Her lungs felt empty, and that thing which had been coiling around inside her had gripped her heart so hard she thought for a moment it might have stopped. And then it squeezed, squeezed all of her. The closest thing that came to mind to describe it was having an ogre wrap both it's meaty fists around you and try to wring you dry...only without the sensation of snapping ribs.\n\nFeric gasped as her body tensed and her slick passage closed around his cock as if it were trying to tear it off. It didn't help that it had been expected. He'd been too caught up staring back into the all consuming fire of her eyes, hungry and turbulent with emotion. He had been drawn, heart in throat, ever deeper into those eyes until everything else was only distant noise...until now, and she'd pulled him suddenly and inextricably back into himself. \n\nHe groaned as she tightened again, this time feeling his own body tighten with hers... and then release with hers. She made hardly any sound, but continued to cling fiercely as that incredibly tight passage continued to flutter and pulse around him, milking him until he was drained and exhausted. \n\nThere was a long silence that followed, the air around them still except for their syncopated pants as they fought for air. Slowly he ran his hands up her back, feeling the damp skin under his fingers as it prickled with goosebumps in the cool stale air of the catacomb like chamber. Her own hands had slid around his waist and remained there, her face hidden against his shoulder. He wondered briefly at how he could feel so exhausted when they'd barely seemed to move at all. He wasn't sure if she was trembling from the cold, but he knew his own hands were shaking from something else entirely.\n\nInanna groaned and adjusted herself against the body still holding her up. Her limbs were molasses slow and heavier than an Altmeri epic. \"Well\" she muttered into the shoulder she was using as a pillow, \"that was...different.\" Feric let out a soft half-grunt in reply. 'Yeah, I hear that,' she thought groggily. \n\nShe considered extricating herself in order to regain some control over the situation, or at least say something clever ...to regain her composure as it was...but she was feeling far too wasted to manage even the smallest amount of sauciness or cheek. So she just gave in and cuddled up where she was, giving his waist a brief squeeze before fully committing herself to being totally done in. Show's over ladies and gents, nothing more to see here. \n\nSince she was thusly committed, it was with extreme disappointment that she felt her makeshift pillow stiffen underneath her. Not 'good' stiffen either, more like, oh-shit-something-is-very-wrong-stiffen.\n\n\"Oh, shit!\" He hissed. \n\nSee? what did she say. Feric grabbed her ass and held her tightly as he dropped them both to the floor and in behind the big, marble...'oh man, I really hope that isn't the tomb it looks like'....'cause if it is'... \n\nThere's kinky and then there's just...'Ew.'\n\n\"What?\" she hissed back, keeping her voice a low whisper, in case the 'oh shit' was something nasty with ears. His hand came up over her mouth anyway. She was more or less still in his lap, though more in a sprawling and awkward way than anything sexy like. She was going to crawl off of him to get into a less tangled position, but froze when she too caught on to what 'oh, shit' equaled. \n\nShe didn't bother to move the hand from her mouth, and just stared at him, her eyes widening to match the horror in his own.\n\n\"Lucas, stop...there's...ah...\"\n\n\"What the hell is that?\"\n\n\"Um...\"\n\nShe mouthed her own rather colorful curse against the palm of his hand and he shut his eyes, looking an awful lot like he was about to start praying.\n\n\"I think it's clothes.\" Murmured a soft female voice.\n\n\"Whose....wait...I think I know whose. Oh, man...\" Ina grit her teeth as the she heard the shit eating grin in his voice as clear as if she were seeing it on his face.\n\n\"We should go. It's none of our business. I'm...sure everything is fine.\" Aina whispered. Lucas wasn't quite as delicate.\n\n\"I don't know, we both heard that crash...we should look around, someone might be hurt.\" The grin was still front and center. Aina made an exasperated sound. Inanna winced. She hadn't thought of that when she'd downed the bridge. Obviously someone else might hear. Idiot. Feric was also glaring at her, she glared back then pulled his hand off her mouth to stick out her tongue in order to more eloquently express her feelings on the matter. He started it. It wasn't her idea to play naked tag in a crumbling, underground city. \n\n\"Lucas...\" The warning was clear ...and headed.\n\n\"Fine, spoil sport.\" It was actually sort of interesting hearing them together when they were alone. Lucas sounded so much more relaxed, playful even, his voice light and teasing. \"Hey...since we're down here...and alone...\" \n\nAina giggled.\n\nIna's eyes shot to Feric's and it was a good thing too. Her own hand clamped down hard over his mouth and she gave him a pointed glare, willing him into silence. He didn't submit completely, but at least he kept his comments to himself. He didn't look too please, but there wasn't a chance in any of the sixteen hell's she was going to let his sweet kid see her naked, sweating self sprawled all over daddy dearest. \n\nThat's the kind of 'awkward' that can kill a person. Plus Aina would probably hate her guts for it. If that meant Feric had to keep his 'dad' instincts in check for five minutes, then she'd make sure he did.\n\n\"Come on, let's go.\" Lucas this time. Another giggle. \n\n\"You sure? Like you said, we're all alone...\" There was a long pause and Ina was ninety percent sure it was only because their mouths were otherwise occupied.\n\nInanna was forced to jab Feric's ribs with her elbow to keep his attention. Dammit. Take your flirting elsewhere, kids, or else we'll all be very sorry. It would have been cute if Feric wasn't slowly turning purple with the restraint it was taking to keep his mouth shut. There was another giggle, followed by a soft, feminine gasp. They both jerked their heads toward each other, then scrambled over one another to peek over the edge of their hiding place. \n\nInanna let out a sigh of relief. It was nothing. Lucas had his arms around her and was kissing her, but it was gentle and tentative...like she said, cute. She was about to smile until she saw the look on Feric's face. 'oh, shit' was right. \n\nShe tackled him. There was no other option. She pinned him down by sitting on his chest, both hands over his mouth, and listening anxiously for an indication that they'd been caught.\n\n\"Hey, did you hear something?\"\n\n\"Um...no.\" Lucas chuckled. \"I was sort of distracted.\"\n\n\"We'd better go.\"\n\n\"Yeah, you're right. The last thing I need is Feric trying to castrate me before I ever get the chance to have kids.\"\n\nFeric mouthed something against her hands, which she imagined was something like 'Damned right.'\n\nAina laughed at that. \"He wouldn't do that.\" Feric nodded vigorously that yes he would, and Ina fought to keep from laughing...or at least from laughing out loud. \"He likes you.\"\n\n\"Sure, so long as I keep my unwholesome thoughts to myself.\" Again, vigorous nodding. Inanna was shaking now with silent laughter. There may have been a tear or two as well.\n\n\"And what are these unwholesome thoughts?\" Oh dear god. If you want to see your next birthday, you will not answer that question Lucas. Seriously. It didn't help that there was a not so innocent silky note in Aina's voice when she'd asked the question.\n\n\"Ah...heh, I...I'm just kidding around.\" Thanks be to Azura! Good boy, smart boy! Now run!\n\n\"No you're not.\" Oh you little tease. Well, good for her...not so good for poor little Inanna who was now definitely tearing up with laughter as she valiantly attempted to keep the irate father of said tease pinned beneath her. Lucas made a sound like he was clearing his heart out of his throat. \n\nAina finally took pity on all of them and broke the tense silence that had followed her rather bold little statement. \"I'm just teasing you. Come on, let's get back before we're missed and Talon and Mori do something we'll all regret.\"\n\nFeric was still underneath her, but she waited a few minutes before releasing him, just in case. He glared. She grinned.\n\n\"There's nothing funny about this.\" He growled.\n\n\"Are you kidding? It's hilarious.\"\n\n\"I'll kill him.\" She rolled her eyes as he sat up, tumbling her off of him. They both stumbled to their feet, perfunctorily dusting themselves off.\n\n\"No you won't.\" \n\nHe glared and grit his teeth, his body tense as he stabbed an angry finger pointedly towards the doorway his daughter had disappeared through. \"You heard them\u2014\"\n\n\"Yes and it's not a big deal. She's a big girl, and clearly she can look after herself.\" Inanna, mimicked his stance and crossed her arms over her chest as he had. \"Besides, they're both technically adults...free and legal, can't do much about it anyway.\" \n\nHe glared. \"The key word there being technically.\"\n\nShe glared back. \"No...the key word being adult.\"\n\n\"With all due respect,\" he growled again, \"she isn't your daughter.\"\n\nThis earned him another eye roll. \"No, but if she were I'd say the same damn thing. And,\" she continued, not letting him interrupt as he clearly wanted to. \"I'd feel fetching blessed to have a kid as responsible and level headed as Aina...or Lucas for that matter. They are good kids, and you should trust them.\" She'd been stalking up to him and poked him in the chest to reiterate her point. He grabbed her wrist and pulled her into his chest so he could lean down and put his face inches from hers.\n\n\"I realize that. I'm not an idiot, Ina, but don't think for a second I'm going to just look the other way while they let their hormones get the better of them and end up doing something they can't take back.\" Ina felt the smirk that plastered itself to her face most keenly. Parenthood, thy name is hypocrisy. He grunted and sighed. \"I know...I know...but it's different.\" He didn't sound all that convinced. \n\nShe raised her free hand to his face and stroked it tenderly. He was really quite adorable when he was all pissed off about something. She couldn't hold back the much more gentle smile which replaced her smirk, a smile which grew when he returned it with his own look of wry uncertainty. \"I'm not saying you should ignore it. Please by all means make them squirm\u2014 put the fear of god in them and ruin their fun...that's not just your right as a parent, it's your job...\" her expression twisted back into a sardonic one, \"but not when I'm sitting freshly-fucked and leaking in your lap. It's called timing, Feric. Some moments are less appropriate than others, and that was the least appropriate one I can possibly imagine...and I can imagine a lot.\" She patted his cheek and dropped her hand.\n\nHe open his mouth, then closed it immediately, blinking at her. Then he bowed his head and laughed, rubbing his face with his hands as she pulled away. Eventually he met her eye again, though this time looking more bemused and wondering than anything else. She grinned back. Instead of agreeing or disagreeing, or saying anything at all for that matter, he reached out, took her face in his hands, and planted his mouth squarely over hers. \n\nHe pulled back from the kiss, but didn't release her entirely, and smiled down into her surprised face. \"What was that for?\" She husked out, cocking an inquisitive brow. He could think of a few answers to that question, but none he felt entirely comfortable voicing at that moment. So he just kissed her again.",
        "When he pulled away a second time, she just stared up at him, her expression unreadable. Then, ever so slowly, a little smile crept over her curving well-kissed lips. \n\nHer smile morphed into a naughty grin. \"Hey, wanna go shopping? If you're a good kitty I'll buy you something pretty.\"\n\n\"Alright...\" he agreed cautiously, slightly put off by the shift in topic and demeanor. She beamed. \n\n\"Good, but first you go up there and tell those two all stern-like that you're going out but want to 'have a word with them' when you get back.\" Her grin turned dark. \"Then after they've twisted a bit, we come back and give them 'The Talk.'\" She chuckled, then paused, as if contemplating something intensely serious. \"Only you have to do Aina, cause trust me, it's waaaay more uncomfortable if it comes from daddy. Personal experience talking here. And, no offense, I do scary better than you. Shadow will be sleeping with his eyes open for weeks.\" \n\nHis own eyes widened slightly in disbelief as she practically cackled and clapped her hands, rubbing them together, then looked back up at him with an excited gleam in her eye. \"Man, this is going to so much fun...you know, I can't wait to have kids.\" \n\n@@@\n\nDelatour. A grand name. A historic name. A triumphant name. A name which should by all rights\u2014 rights earned though centuries of victory, of both the martial and courtly variety\u2014conjure respect and genuflection from all who encountered it. \n\nAnd yet...\n\nAnd yet here stood Arthur Delatour, 21st scion of such an illustrious house, enduring the cool reproachful glare of this...this...this glorified maid who thought himself the very captain of the blades...as if that blasted Altmer were the emperor himself and not just another petty elf with too much time and money on his hands...and far far too many delusions of grandeur.\n\nDelatour needn't have straightened under the scrutiny, as he already had impeccable posture...but he did tilt his head and narrow his eyes in order to return the assessment in full. \n\n\"Mr. Delatour.....\" the imperial intoned dryly, as if tasting the name and finding it slightly sour, \"do you have an appointment, sir?\"\n\nOnly a trained imperial butler could make the word 'sir' sound like an insult of the highest order. But this was what he'd been reduced to, what his once glorious family name had been reduced to. Reduced to biting its tongue and checking its righteous ire so that it might in turn humble itself to the half- delusional fancies of a mad wizard. Rich wizard...powerful wizard...he reminded himself. And Arthur wanted a piece of that wealth, or that power...and needed it to rebuild his house and name. If he must suffer himself a whore and accept the indignities which must accompany such a title, then so be it.\n\n\"Yes.\" He replied, matching the man in both tone and expression. Moving only to lift his wrist to adjust the already perfectly pressed and adjusted collar of his narrow sleeve.\n\n\"Very good, sir. Please follow me.\" \n\nThe house was a fine one with the typical open foyer and grand sweeping staircase one finds in the typical imperial mansion --conveniently located in the temple district, and rented by its current master as he conducted his business in the Imperial city. There were a surprising number of fine abodes in the city which were kept for such prestigious, short term residences...and the actual owners made a pretty penny off them, pennies better spent in far more charming and restful chateaus located far from the frenetic, urban energies of the city proper. Usually in wine country.\n\nHe was led through the foyer, up the sweeping stairs, down an elegant hall, and up another, narrower stair. They paused at the landing where the butler/captain-of-the-guard paused them in order to knock politely at the door and call out to his 'lordship.' \n\nThe door swung open, though no one touched it. \"My lord Sarandus, there is a Messr. Delatour here to see you. He claims to have an appointment, sir.\" Delatour resisted the urge to growl. He knew damned well he had an appointment. Who the hell had taken the appointment to begin with. But once more, he suppressed his pride and smiled tightly at the voice which floated into the hall to greet them.\n\n\"Very good Herrick, you may leave us.\" It was remarkable, really, how any voice could be so soft, and so imperious in the same breath. Delatour cemented his smile and stepped into the room. The bright, open, and very well appointed room was much as one would expect it to be. The furniture was delicate, the lighting soft, the curtains damasked, the couches chintzed...or was it the other way around? It hardly mattered though, since the bloodless cadaver positioned peacefully on a table somewhat away from the windows was not at all in keeping with your typical imperial parlor. It quite ruined the effect. To say the least.\n\nHe'd already seen too much to completely ignore the sight: the grey flesh, the gaping incisions in it, the bizarre nest of tubes and wires protruding from them, and the disturbing collection of narrow jars into which they drained. Still, he was a man of impeccable breeding...so he gave it the old college try and tamed his flickering smile as he bowed low at the waist, swallowing his revulsion right along with his already well chewed pride. It wasn't, after all, going to get any easier, and now was not the time to start panicking.\n\n\"My lord.\" \n\nThankfully the Mer glided toward the windows instead of remaining before the table, giving Arthur a better reason not to look too long at his lordship's little 'project'. \n\nUnlike Delatour who was dressed in the fitted trouser and narrow jacket that currently served as standard fashion in the courtly circles of the empire, Sarandus wore the flaring, extravagant robes typical of Mer aristocrats who were too old, or too stubborn to feel it necessary to change with the times. The dated look might have been silly on some, but the hard blue eyes staring icily from out of that golden face, and the long fingers which curled out from under the wide sleeves, moving with a menacing grace, made it impossible to see him as anything other than the malignant, deadly asp that he was. There was nothing funny or silly about him, and only a dead man would think so, or worse, hint at it. For surely if there were worse fates than death, this Mer would know all of them...intimately.\n\n\"My dear Delatour. Tell me, how does our progress? How is this new man of yours? Better than the last I hope?\" Delatour's smile faded, and his lordship's went with it. \"I see.\" he drawled between slightly clenched teeth, then let out a sigh of the hard put upon, folding his long fingers into a steeple just under his angular chin. \"Arthur, I pay you well in order to have success and to see progress, and yet, at every turn I find you giving me nothing but discouraging news and dark reports.\"\n\nHe winced slightly, both at the use of his proper name, which he hated to hear on the Altmer's disdainful tongue, and at the unspoken yet no less explicit threat which accompanied the rest of the words coming off that same tongue. \n\n\"My lord, I will admit as much, and I'm very sorry for it, especially since we've continued to face set-backs...including an unprecedented attack on our own fortification. However\" he interjected quickly before the reprimand could come, \"the new man has also discovered the likely cause of the most recent set-backs and a potential link which will lead us, we predict, directly to our targets.\" \n\nThe glint of fury which had reared briefly in the Mer's eye settled slightly, though his mouth was still bent in a deep frown. \"Is this so?\" \n\n\"Indeed, my lord. I have a number of men uncovering the connection's whereabouts even as we speak, and I expect to have word back very shortly.\" He knew better than to belabor the issue with pointless details. Sarandus wouldn't care, and it would just keep them in the same room together that much longer.\n\n\"I hope you do.\" He murmured with subdued venom.\n\nNot as much as I, believe me. He thought bitterly as he eyed the Mer, doing what he could to mask the sweat inducing case of the nerves which had understandably come over him.\n\n\"Just to satisfy my curiosity, what is the nature of this connection that you have supposedly found.\"\n\nHe held back another wince. \"The exact nature is uncertain, my lord, but we have the description and name of a young Dunmer woman we think resides in Cheydinhal who has at least once assisted in a target's escape and who we are almost certain was involved in the attack on Wariel.\" The Altmer's lip curled slightly at the mention of 'Dunmer' but he remind silent as if waiting for him to continue. So he did. \"We're just confirming this information now since one of the informants used was hardly reputable. I wouldn't want it botched any more than it has already been simply because of my impatience.\"\n\n\"Very well. But don't come back again without good news...or I will be very...unhappy.\" Sarandus flicked out his wrist, and turned back toward the ghastly scene in the corner, a scene which illustrated graphically just what 'unhappy' could mean for someone on the wrong end of it. Since Sarandus's back was turned, Arthur chose not to let his eyes follow. \"You're dismissed.\" He added in a low hiss, just in case Arthur hadn't ascertained what his demeaning little wave had meant.\n\n\"My lord.\" He bowed again, briefly and cautiously eying the long slender form with its unperturbed sheet of silver hair that seemed to melt into the very fabrics of his robes. \n\nThen he fled. Elegantly of course, and gracefully...but when you undressed it, and bared it for what it was, he simply fled. In the street, four blocks down and almost at the gate of the next district, he inhaled deeply and released the shudder he'd been suppressing.\n\n\"Well, that went far better than expected.\" He murmured to no one in particular.\n\n@@\n\nSarandus stood over the drained human's body, his own body as still and face as expressionless as the marble bust of his own likeness sitting just behind him over the fireplace. Human...just human. The man had been a fairly skilled sorcerer's apprentice before his untimely demise, had will power to spare, and because of this he once had high hopes for this experiment ...but it wasn't enough. It wasn't nearly enough. Damn it all, and he was so close to that ever elusive goal. He could feel it, that nearing triumph, and it called to him like a distant war drum, beating out like the pounding of his own heart.\n\nSlowly his eyes closed and his fingers curled into a fist until the nails bit into the palm. He had squandered so much in those early days, in his rough, grasping experiments. Had he used mer or humans then in order to perfect his techniques, then he wouldn't be wasting his energy and time on them now. It was hopeless. These mundane bodies held nothing...they were but clay figures imbued with the fragmented remains of a shattered god. Their blood was weak...impure. He needed the blood of a god, of a deadric prince, or better, of the nine...and nothing less. And these creatures, these elusive children of Kyn...they had exactly what he needed. They had it in spades.\n\nBut...and there always seemed to be that damned 'but'...they were becoming more difficult to find, and more dangerous to hunt as their numbers dwindled. At this point he was almost better off hunting deadric tainted weald witches, or just draining the emperor himself for that matter. He opened his eyes and smirked slightly. Surely he didn't need all of his sons...one would be enough to provide an heir...\n\nA humorless chuckle filled his throat. It would not shock him if one day that thought became more than a passing fancy. Even Mer were mortal, and he was far older than he appeared already but he felt his time dwindling as his options had. He'd made progress, and effected serious change already, as his smooth skin and supple body proved. But still...it was not enough. It was never enough.\n\nHe unclenched his hand, smoothing it open and running it lightly, tenderly even, over the cold flesh before him. Dead flesh, one might say. That was what no one understood about the necromantic arts, no one who wasn't fully fledged in its mysteries. It wasn't about death...it was never about death. It was about ending death, about life....life unending. \n\nHis lip curled and he tore his hand from the body and whirled on the still, silent room, glaring at the sunlight as it streamed in through the filmy gauze of the curtains. He marched to the window and yanked the fabric aside, letting his burning azure eyes raze the simple, ignorant creatures below who fretted about oblivious to all but their tiny claustrophobic worlds. Life eternal...but not as some foul creature of darkness, some vampire...or worse, a creeping malignant wraith imprisoned by it's own cleverness like that fool Manimarco. Not for him that eternal hell...but eternal light...eternal life.\n\nAnd no fool Breton, or little Dunmer chit, was going to stand in his way now. His eyes hardened in irritation. He was going to have to step up and take care of this himself...he could feel it in his bones. \n\nHe let out an very un-Altmer like snort of irritation. How incredibly inconvenient.\n\n@@@\n\nFeric had decided against threatening Aina or Lucas with imminent talking-tos. Namely because he realized he'd have to admit overhearing them, and he wasn't, frankly, feeling up to that discussion just yet. Especially knowing his daughter would give him a similar argument to what Ina's had been, an argument which he was still formulating a counter to. The other reason was Inanna's excitement over the scheme, which was slightly unnerving in its intensity. It just seemed safer to let it slide...for now. \n\nHe did, however, keep his agreement to come along with her to Cheydinhal where they had, as she'd suggested, 'gone shopping.' Of course this really only entailed heading to the local outfitters and ordering supplies from an Orc woman named Borba whom he was also introduced to as part of her on-going plan to 'give him her friends'. Ina had also insisted he try the imported salt-water taffy...he did since she seemed so enthusiastic about it, but he'd never had all that much of a sweet tooth. \n\nAfter they'd left the lower levels of the ruins earlier in the day, neither of them mentioned anything about what had happened before Aina and Lucas had shown up. Instead their conversation had been centered around the kinds of supplies they should order, when they thought the hunter's would begin to regroup, and when she was planning to meet with the thieves guild again, as well as the best places to hunt deer, and, of course, the weather.\n\nBut despite his best efforts at avoidance and denial, his thoughts continued to stray back to that strange intense moment between them in the ruin. The one that neither had acknowledged outside of that one, vague comment. \n\n'That was different,' she'd said. His mind evoked the memory of her small, sweat slicked body clinging to his and felt a twinge as a faint tremor pass uncontrolled up his spine. \n\nYes, yes it was different. Many things were different...everything. It wasn't like he wanted her any less...definitely not less...maybe more, he couldn't tell. The only way to describe the change was as if they'd been playing a game but the rules had changed and neither of them were told how. He sighed inwardly. \n\nRegardless, it would have to wait as there were more pressing matters. Far more pressing, and with much more dire consequences. \n\nThe rules had also changed in regards to the hunters. With Inanna working to help them there were now half a dozen new players on the board where before there had been just the two. The whole thing made him uncomfortable. There were too many people, too many elements, and his mind fought to order it all, to rearrange his life and what he knew about the world. He was managing, it seemed, but the process wasn't an easy or pleasant one. \n\n'It would have been easier if you hadn't up and mated with a perfect stranger,' a little voice reminded him with an internal growl. He gritted his teeth and resisted the urge to let out an actual growl in response. Later...he would deal with that later. With a huff her pulled his mind back towards his previous thoughts, and the confusing cast of characters he suddenly found himself in the middle of.\n\nIt wasn't just his own uncertainty which concerned him. A large part of him suspected that these new elements were going to force the other player's hand and that things would get very dicey very fast. But it might also serve to draw who ever was behind all of it out of the shadows so that they could deal with it once and for all. \n\nBeside him Ina was chatting away about what the pride could do 'once it was over:' about moving into the city, about guilds, houses...he wished he could be so optimistic. He was about to say as much when a woman's voice rang out behind them, halting Ina's flow of words and capturing his full attention.\n\n\"Well. I'll be damned. If it isn't the infamous velothi witch. Quelle suprise.\" \n\nIt wasn't the voice which arrested him, so much as the way Inanna froze stiffly beside him, looking like she'd been shot in back. They turned at the same time to see who had called out. He didn't recognize her, but she was an attractive looking human woman. 'Beautiful' wouldn't have been an exaggeration by anyone's standards. \n\nShe was small and had a curvaceous figure which was shown off well in a low slung wrap skirt and a clinging vest-like shirt which exposed, in fleeting glimpses, the flat plane of her stomach, as well as by the practiced tempo of her swaying walk as she approached. Her long brown hair was loose and fell about her shoulders in waves to frame a delicate face and dark green eyes. Her age was...oddly indeterminate. She seemed...not quite right. Like what he was seeing...wasn't quite what he was seeing. His stomach turned slightly at the conflict between his senses and his instincts.\n\nHe was also quick to notice two males, a Khajiit and a Dunmer, standing off to the side and who were watching intently but with a relaxed amusement that contradicted the sardonic harshness of the woman's voice and words. He frowned and glanced at Ina, but she only had eyes for the woman. Her lip curled into its own wry smile. \n\n\"I'd call you a bitch in retort Breton, but hackneyed rhymes are more your forte. So I'll go with your second most recognizable trait and bid you welcome, my capricious, gold-digging whore.\"\n\nFeric couldn't help but start at her tone and words. He'd heard a lot of things come out of her mouth, but nothing sincerely vicious before. But the woman only let out a low laugh as they both began to pace towards each other. \"At least I get rewarded for my efforts, instead of walking away empty handed save for the pleasure of being a self righteous, judgmental prig. Just because you don't get something for it, Inanna, doesn't make you any less of a harlot...it just makes you a kind of slut: The poorer kind/\" \n\n\"At least I have moral standards, you treacherous snake.\"\n\n\"And I so hope they comfort you when you die, sad and alone.\"\n\nFeric had simply stood watching, agape, as the strange scene played out before him, but now it was just too much. The last thing he needed was attention drawn to them by her getting into a fist fight in the middle of the street...and people were starting to stop and stare. No doubt they were hoping to get the vicarious thrill out of seeing two attractive females trying to rip each others hair out in the mud. \n\nHe knew better though. Ina would just clock her. Or set her on fire. That wouldn't be pretty. \n\nBut, before he could intervene and pull them apart, the two women suddenly lunged towards each other and...hugged?\n\nWhat...the...hell?"
    ],
    "authorname": "Enithermon",
    "tags": [
        "weres",
        "elf",
        "lion",
        "dark elf",
        "dunmer",
        "oblivion",
        "adventure",
        "magic"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/hunting-the-hunter-ch-05"
}