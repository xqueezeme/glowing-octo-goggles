{
    "title": "Purely Sinful",
    "pages": [
        "Author's Note: This is a fictional story, filled with made-up entities and events. Absolutely no sexual activities involve humans under age 18. People sin and suffer and have cataclysmic orgasms, same as in real life. This erotic horror story is entirely my own fault -- do not blame my wonderful editor, Hypoxia, who spent many hours helping me. I couldn't have done it without you H! I'd also like to thank LaRascasse for helping me proofread and bringing some plot holes to my attention. This is NOT a short read. Your constructive comments are always welcome.\n\n<center>CHAPTER 1</center>\n\n\"You want to order a drink, or are you going to just sit there all night?\"\n\nThe female bartender's abrupt outburst snapped Cole from his trance. \n\n\"Oh! Yeah, sorry. I'll have a Coke, please.\"\n\nThe bartender gave Cole a peculiar look. \"You came to this club to sit at the bar alone, stare at people, and order soft drinks? Not the usual thing attractive men do here on a busy Friday night.\"\n\nAttractive? Cole never thought of himself as attractive. She wasn't the first to think so, however, whether he knew it or not. He was in his mid 30's, tall, short dark hair, muscular body, and strong jaw with a five-o'clock shadow. Okay, maybe he was attractive, but was it too obvious that he had been spending all his time observing the jam packed dance floor? \n\n\"I have to be at work in a few hours. Can't go in hammered, can I?\"\n\nThe bartender smiled, nodding in agreement. She turned to fetch him a Coke.\n\nUnknown to her, Cole was already at work. A member of Chicago Police Department's Bureau of Detectives, he was investigating a recent series of disappearances of young women in their late teens and early twenties, all of whom were described as very attractive. Their disappearances were believed to be linked to a long running sex trade organization with hubs in major cities around the country. He traced the missing women's last known locations to a night club near Chicago's industrial district.\n\nThe owner of the club, Travis Dunham, was a well known wealthy entrepreneur with a reputation for dirty business. Unfortunately for Cole, as well as the rest of the CPD, his wealth provided him with a wall of lawyers so thick no detective or prosecutor would dare attempt to break through without ironclad evidence. Cole knew if he were to make something stick, he'd have to catch him in the act.\n\nThe bartender returned with Cole's ice cold drink and left to tend to others at the bar. He took a sip as he focused on the dance floor filled with people laughing, dancing, and having a great night.\n\nAll of which Cole hadn't experienced in a very long time.\n\nAbove the dance floor was a balcony reserved for VIPs. Among them, leaning over the rail, was none other than the owner Travis, scrutinizing the dance floor in an all-too-similar fashion to Cole. Cole was certain they were both searching for the same target, albeit for very different reasons.\n\nThere were plenty of women on the dance floor, though most of them didn't stand out as supermodel material like the vanished women. All seemed to be accompanied by someone, usually a man, probably their significant other or soon-to-be one night stand.\n\nThen Cole saw her. \n\nA woman of stunning beauty danced in the middle of the crowded club. Her pale silky smooth skin shimmered in the lights of the dance floor while long black-as-night hair swayed with her every movement. Her sensational red cocktail dress barely covered her upper thighs, and also managed to show off the magnificent curves of her hips. The front of the dress was deeply V-necked to display her well-endowed breasts in all their glory. Her legs, long and toned, descended to a pair of unapologetic black open-toed fuck-me stilettos. How she was able to dance in those stratospheric heels was a mystery to Cole, but she did so with both grace and elegance.\n\nShe was beauty personified.\n\nCole found it strange she was alone. She appeared to have no one accompanying her on the dance floor. Odder still, no one seemed to be paying any attention to her at all. It was as if she was on that dance floor all by herself, dancing inside an invisible bubble to the catchy beat of music pounding into everyone's ears.\n\nFor a brief moment, while lost in awe of this woman, her eyes made contact with Cole's. He was mesmerized by her luscious red lips and sexy smile. However, he swore he saw the dark pupils of her eyes turn bright ruby red and then back to a lovely shade of brown. Just an illusion or refection of the lights, he thought.\n\nIn a feeble attempt to hide his obvious staring, he looked away, up toward Travis, who must have noticed the woman in the sexy red dress as well. Travis motioned for one of his security guards and told him something while pointing in the girl's direction. Cole watched as the bouncer made his way down the stairs and through the crowd to her. She accompanied him back through the crowd and up the stairs to the owner's niche. Travis greeted her with a kiss on the hand as they disappeared from Cole's view.\n\nThis was it. This was his chance. He would wait for her to come back down from the balcony, and if she didn't, he would rush up the stairs to find her. Probable cause. \n\n\"I better be right about this.\"\n\n*****\n\nThe door shut behind him as Travis led the girl in the sexy red dress into a tastily elegant private room above the night club. A luxurious-looking couch faced a huge television screen mounted on the wall opposite the door. Another wall backstopped a fully stocked bar and a tall bistro table with two bar stools. The back wall, if you can call it a wall, was a single giant Plexiglas pane giving a sweeping view of Chicago's downtown. The Loop pulsed like a living creature outside the window.\n\nTravis turned his back to the woman and approached the bar. \"Can I offer you a drink?\" he called over his shoulder. He eased a bottle of one of his finest Napa wines from the rack and splashed its fruity contents into two small champagne flutes. One glass already contained an inconspicuous pill, colorless and odorless, that quickly dissolved, leaving no trace.\n\nWhen Travis turned around his eyes widened. Both wine glasses escaped his grasp, shattering on the marble floor at his feet. The woman stared at him with a seductive smile. Her red dress was merely a pile of fabric puddled on the floor around her spiky heels.\n\nTravis beheld the naked body of a classical goddess: proud plump round breasts with small light brown areolas surrounding perfect erect nipples; a flat flawless stomach and shallow navel above pristine trimmed pubic hair with just a thin landing-strip; and a wickedly sexy smile that could sway the minds of kings and courtesans.\n\n\"This one will fetch the highest dollar yet,\" he thought. No reason he couldn't have a little fun beforehand, though.\n\n\"I think we'll skip the drinks for now,\" Travis said, stepping over the mess of glass on the floor. He couldn't care less about cleaning up. The charwomen could tend to that in the morning.\n\nHe approached her slowly. She stepped away from her dress and walked to the couch, clicking in her stilettos. He caught up to her, his hands wrapping around her waist, pulling her toward him.\n\nShe aimed her mouth toward his. Their eyes locked onto one another as they leaned forward. Travis' mind was blown by the sensations of this woman's explosive kiss. Never had he felt this much energy, this much arousal, from just a kiss! Then her perfume's scent hit his nose like a late spring breeze, ever so sweet and delicious. He was completely lost in her embrace, her hands on each of his cheeks, exploring his mouth with her agile tongue. He felt a twinge in his groin. His cock strained outward against the fabric of his trousers.\n\n\"You're too dressed for this occasion, stud\".\n\nHearing her words for the first time was like listening to the songs of angels. Travis removed his hands from her waist, almost involuntarily, to unwrap his tie and unbutton his shirt. For a wealthy business man, he had quite the well-kept body. His chest was slightly hairy but quite muscular, his beefy pecs matched with impressive toned abs. He made quick work of his garments. He finally undid his belt. His trousers fell easily to his ankles.\n\n\"Still too dressed.\"\n\nTravis slid down his black boxer briefs, stepping out of them along with the wadded puddle of his trousers. Only thin dark socks remained on his body.\n\n\"Close enough.\"\n\nShe wrapped a hand around the back of his neck, pulling him to her mouth once more. Her other hand found his fully erect cock pointing directly at her. Travis felt her hand glide up and down his shaft like silk sheets blowing in the wind while her tongue danced an inviting ballet in his mouth.\n\nHis senses were completely overwhelmed. Her beauty: flawless. Her voice: mesmerizing. Her smell: intoxicating. Her taste: delicious. Her touch: absolutely orgasmic.\n\nTravis' knees began to buckle from the pleasure of this woman's skillful pumping of his cock. She pushed him down on the couch before he had the chance to fall over.\n\nThe woman gracefully squatted to the floor. She perched before him and admired his stiff cock sticking straight up in the air. Grabbing the base of his shaft in one hand, she pointed him towards her lips. The nerve endings in the head of Travis' penis responded like electric shocks as she kissed and licked from tip to shaft to base. Then with a sexy grin, she took him into her mouth.\n\nAll of him.\n\nMesmerized by her ability to take his full length into her mouth, Travis let out a sigh of complete contentment. His balls began to swell as she worked her mouth up and down his cock with rapid yet smooth momentum. She suddenly stopped, his cock wedged down the back of her throat, and licked the underside of his balls.\n\nHow did she know he liked that so much?\n\nOh God! Too much!\n\nTravis' orgasm came rushing through his entire body. Moaning aloud, he shot stream after stream of hot sticky cum deep into the sexy goddess' mouth. She didn't even flinch as his seed trickled down her thirsty throat.\"\n\n\"Mmm, salty.\"\n\nShe stood and stared down at him. \n\n\"I hope you have more for me.\"\n\nTravis gasped heavily, like he had just run a marathon. He looked down at his penis. It was still rock hard, even after the best blowjob he had ever received. No way was he missing this opportunity.\n\n\"There's plenty more where that came from,\" Travis said, his ego running rampant.\n\nShe smiled devilishly and turned around, her luscious round ass beckoning him. Placing a hand on each of his knees, she lowered herself onto his lap. Travis felt the tip of his cock poke the molten hot wetness of her labia. His balls twitched yet again, preparing themselves for the blissful pleasure they were about to receive.\n\nThe heat and wetness from her pussy weren't the only things Travis noticed. On her back were the tattoos of large bat like wings that stretched from her shoulder blades to her mid back. Lower, just above her lovely ass, was a smaller tattoo of a devil's tail, coiled up with a spear like tip.\n\n\"Do you like them?\" she asked with a sex-laden voice.\n\nTravis reached out to touch her back, his fingers outlining the outer edges of the wings. It felt different than the rest of her skin, like leather was sewn into her back. It was so odd, it didn't feel like...\n\nHis mind was quickly diverted when she lowered herself onto his cock, sheathing him inside her. The inner walls of her pussy engulfed him, sending waves of pleasure through his entire body. Her pussy was so warm, so wet, so tight! Of all the girls he had sex with before sending them to be auctioned off, none compared to this.\n\nTravis watched as she expertly rocked her hips, sliding her dripping pussy up and down his full length. Each time she rose, he felt her inner walls clamp down, as if milking his shaft. He was paralyzed -- not that he wanted to move.\n\nThe girl dismounted, spun around and crawled back onto his lap. She placed a hand on each shoulder, then impaled herself on his throbbing member. Travis' hands began to massage her breasts that were bouncing up and down from kneading his cock. She emitted a soft moan. Her orgasm was approaching fast.\n\n\"Did you really think putting a roofie in my drink would be able to subdue me?\"\n\nWait. How did she know?\n\nTravis' higher mental functions shut down. All he could think about was how spectacular her warm wet pussy felt and how her hypnotic breasts swung in front of him. Clearly there wasn't enough blood in his body to make his sex organs work alongside his brain.\n\nShe fucked Travis much faster. Her sex slapped against his pelvis making a loud clapping noise that echoed through the room. Travis thrust back into her with perfect rhythm. His balls were about to spill their contents inside her.\n\n\"Yes! Empty yourself inside me! Fill me!\"\n\nTravis looked up at her face and saw two horns extend from the top of her head. His eyes widened in shock and horror as the rigid black horns grew, curving towards the back of her head. He tried to move but his body would not respond. His hips kept thrusting convulsively into her pussy. Travis realized he was no longer in control of his own body.\n\n\"Wha- What are you doing to me?!\" he yelled.\n\n\"Pleasuring you, sweetie,\" she replied.\n\nTravis tried again to gain control of his body but failed miserably.\n\n\"I can't move!\"\n\nShe placed a finger on his lips, \"Shhh. Don't fight. It will all be over soon.\"\n\nThe woman's eyes turn a vibrant red. Travis' face became white with terror as he watched two huge black wings extend from behind her.\n\nThis wasn't real. This can't be real!\n\n\"Oh it is very real, Travis,\" she spoke in a dark chilling voice. \"How ironic is it that after all those women you sold off to the highest bidder, that your end would come at the hands of one you thought you'd be able to sell?\"\n\n\"How could she possibly know about that?\" was the single thought racing through Travis' brain amidst the rising sense of dread.\n\n\"You're no woman. You're a monster!\"\n\nGiggling, she leaned forward. \"Oh, how right you are,\" she whispered in his ear.\n\nShe slammed down hard onto Travis' cock repeatedly. His hips worked against his will to thrust himself deep into her core.\n\n\"Yes! Release yourself. Give in to your lust, and fill me with your soul!\"\n\nTravis was on the edge past the point of no return. His heart was beating out of his chest and his lungs felt on fire. His second orgasm came forth with such force that it shattered his mind. He shot his semen into her -- and with it, all his life energy. The monster on top of him climaxed as he did, moaning and savoring her own pleasure as well as the energy being pumped into her dripping sex.\n\n*****\n\nIt had been too long. The time to act was now.\n\nCole got up from the bar and marched towards the stairs leading to the upper balcony.\n\n\"Sir. Sir! You can't go up there!\" the security guard insisted, grabbing Cole's arm.\n\nCole quickly fished his badge from under his trench coat. \"Chicago Police, stand aside!\"\n\nHe marched up the stairs to the only private room.\n\n\"This is the CPD, Travis! Open this door! Now!\"\n\nThere was no answer. The door was locked.\n\n\"Do you have a key for this door?\" he asked the security guard who immediately shook his head.\n\nCole drew his service revolver from its holster and gave the door a hearty kick, and then another, until it flew open. He dashed inside with his pistol at the ready.\n\n\"Put your hands in... what the fuck?!\"\n\nCole saw the woman he was looking for, with huge bat like wings sticking out from her back and a long tail dangling behind her, sitting on top of what looked like a shriveled up corpse. Her glowing red eyes glared at him, sending a chill down Cole's spine.\n\n\"A pure soul,\" she whispered. \n\nThe woman dashed toward the back wall made of glass. Cole fired three shots before she jumped through the glass to the ground below. \n\nCole ran to the ledge and looked down. There was no body. No one could have survived much less walked away from a fall like that. Did she... fly away?\n\n\"What the hell did I just witness?\"\n\n*****\n\nCole was miserably stoic the next morning when he gave his full report to his captain. \n\n\"I know what I saw, Captain,\" Cole said through clenched teeth. He desperately tried to defend his position after last night's events.\n\n\"This is a complete cluster-fuck, Detective Harvey,\" Captain Finnegan roared. Cole was on the receiving end of a thorough ass-reaming. \"We have the dead body of a prime suspect in a chain of kidnappings that looks like he's been dead for decades! And all you've got is that a naked woman was in the room with him, who then jumped out the window when you showed up? Is that your fucking story?\"\n\n\"Yes sir, Captain,\" Cole replied, sticking to his word. He failed to mention the huge black wings sticking out of her back, the horns sticking out of her head, the long tail, or the red glowing eyes. No reason to make the Captain think he was more bat-shit crazy than he already did.\n\nCaptain Finnegan sat back down in his padded chair. He lowered his voice to a less strident level. \"Listen, Cole. You're a good cop, one of the best. But I can't help but think you haven't been thinking clearly.\"\n\nCole rolled his eyes in frustration, knowing the turn this conversation was about to take. \"This has nothing to do with Maria, sir. I've been through endless therapy and countless psychological evaluations. The shrinks say my mind is fine and I've been cleared to be back on the force.\"\n\n\"I'm fully aware of that, Cole,\" Captain Finnegan said. \"I can't begin to imagine what you've been through. I'm just hoping that your frustration with her case hasn't carried over into your duties.\"\n\n\"They haven't,\" Cole assured him.\n\n\"Good. Regardless -- I want to give you a few days off, with pay, to clear your mind and start fresh on this case.\"\n\n\"That won't be necessary, sir.\"\n\n\"That is an order, Detective Harvey! You are by no means to work this case until you report back next week, understood?\"\n\nCole straightened. \"Yes, sir.\"\n\n\"Before you go, see if Vince has turned up anything in the morgue. I need at least something to feed the press dogs before they go spewing this as an act of bio-terrorism.\"\n\nThe captain looked down at his desk, shuffling papers. Cole recognized the sign of dismissal.\n\nCole shut the door behind him and took a deep sigh. That wasn't so bad, all things considered. It could have been worse. At least he still had a job.\n\nCole made his way down to the basement level of the precinct building. He replayed the previous night's events over and over in his head. He knew he wasn't crazy, but if he told anyone exactly what he saw, he knew he would be taken off the force, possibly for good.\n\nHe passed Frank Wallace, the detective assigned to Maria's case. Frank was spending his oh-so-valuable time shooting wads of paper into a distant trash can. He sometimes scored. Of all the people they could have assigned to that case, they picked Frank. Frank! Cole was pretty sure Frank was a dirty cop. However, there was nothing he could do about that, not with Frank's connections.\n\nCole arrived at the morgue. He threw on a lab coat and entered Vince's examination room. The bald pathologist was busy autopsying Travis Dunham's shriveled body.\n\n\"Please tell me you have something, Vince,\" Cole said, greeting the reed-thin, middle-aged doctor draped in a worn lab coat.\n\nVince turned towards Cole and adjusted his glasses. \"Seventeen years on this lousy job and I've never seen anything like this. Come here, take a look.\"\n\nCole approached the body, or rather what somewhat resembled a body. The corpse was desiccated as if entombed for millennia in Egypt. But the clothes piled on a steel table beside the body were the same ones he saw Travis wear last night, without so much as a stain on them.",
        "\"Now, look at this,\" the pathologist pointed.\n\nVince lifted a scalpel and punctured the corpse's arm. A fine red powder spilled from the opening, like he had poked into a bag of rusty sand.\n\n\"What is that?\" Cole asked.\n\n\"That is blood, my friend. Extremely dehydrated blood.\"\n\n\"What could possibly do that?\"\n\n\"That certainly is the million dollar question of the day, now isn't it? For blood to turn to a powder like this would take a sizable heat source or be freeze dried. The outside of the body would start to burn at such a temperature -- but as you can see, no burns.\"\n\nVince turned to Cole. \"You say there was a naked woman in the room when you busted in?\"\n\n\"That's right. So?\"\n\n\"Was she hot?\" Vince snickered.\n\n\"I didn't have time to assess her attractiveness, smart ass.\"\n\nVince laughed. \"Okay, okay. But here's something else interesting.\"\n\nHe pulled down the sheet to reveal the lower half of Travis' dead body.\n\n\"Notice anything?\"\n\nIt was obvious, even to Cole. Travis may have been dead, but he sported an extreme erection.\n\n\"Why isn't it decayed like the rest of the body?\" Cole asked.\n\n\"I have a hypothesis,\" Vince said. \"The only time a dead man has a hard-on like this is if he was extremely aroused the moment he died. Whatever this mystery girl of yours did to him, they where having sex when she did it. Pretty hot sex, it looks like.\" He grinned at his own joke.\n\n\"Makes sense,\" Cole thought. He did see her on top of him when he entered the room. The wings, tail, and horns were at the front of his mind, however.\n\n\"Let me know if you figure out anything else. The captain put me on leave for a few days.\"\n\nVince shook his head. \"I think you're fine. We've known each other since college. After what happened to Maria, no one would be able to handle it well.\"\n\nCole smiled. \"Thanks, Vince.\"\n\n*****\n\nCole came home after sunset to his empty apartment. He hung his trench coat on the hook on the kitchen door. The kitchen lay in shadow; only a small bulb above the sink provided light. He opened the refrigerator and grabbed a bottle of beer. Maybe he could relax.\n\nHe had just popped the cap and taken a swig when he noticed the unusual chill in his apartment. This wasn't the first time he had thought to call the landlord to fix the heater, but the temperature outside wasn't all that cold before he came in.\n\nCole stepped toward the thermostat, and then stopped suddenly. A foreign scent tickled his nostrils. He recognized that smell, but it shouldn't be in his apartment - a mix of lavender, cherry blossom, and cotton candy. It was the same odor in the room where he found Travis' body. Cole's mind stirred uneasily.\n\nHe looked around his untidy quarters. Case files and evidence photos lay messily on every available surface. Nothing seemed out of place or missing. The windows appeared to be shut tight -- that was a relief. He glanced into the pitch-black living room and saw two small red lights in the corner. It all clicked in his brain at once.\n\nHe wasn't alone.\n\nCole quickly drew his service revolver and aimed at the lights.\n\n\"Who's there?\"\n\nThe two beady lights began to move towards him. The sound of clopping heels could be heard against the hardwood floor. A womanly figure stepped from the shadows of the living room.\n\n\"Is that how you greet all your guests? By pointing a gun at them?\"\n\nIt was her. The woman from the night club. The one that killed Travis. And now she had come for him.\n\nCole walked backwards into the light of the kitchen, his pistol still aimed at her.\n\n\"Guests are people I invite into my home,\" Cole retorted.\n\n\"There's no need to be snide,\" the woman said, and extended her arm. In a flash, Cole's pistol flew from his hands and into hers.\n\n\"This wouldn't do you much good anyway.\"\n\nShe reached into her coat pocket and threw three slugs from a handgun at Cole's feet. He realized these were the bullets he fired at her the night before. Cole's heart raced in fear, his adrenaline coursing through his veins. He was defenseless and unsure of what the creature wanted with him.\n\n\"What are you?\" Cole asked, his voice trembling.\n\nThe woman stepped up to Cole, standing in the light.\n\n\"Have a seat.\"\n\nThe woman twitched her index finger slightly. One of the dining room chairs slid from under the table on its own and stopped at his side. Cole reluctantly sat. She scooted onto the table in front of him, leaning forward slightly, crossing her long legs.\n\nCole's vision involuntarily wandered from her knee-high leather boots to those toned legs covered in black silk stockings that disappeared under a black cocktail dress -- a dress very similar to the red dress she had worn the night before. The jacket, also made of leather, was unzipped. Her abundant cleavage looked ready to spill from her dress.\n\n\"My name is Zafira, and I am a succubus. You should feel honored. I haven't told anyone my name in centuries.\"\n\n\"Why tell me then?\"\n\nShe grinned. \"Well, most do not live long enough to say it, so why bother?\"\n\nCole gave her a puzzled look. \"So you're not here to kill me?\"\n\nZafira smiled and ran her fingers lightly through Cole's short dark hair. \"I always did like the smart ones -- they get me so antsy in my panties,\" she smirked. Zafira uncrossed her legs. \"...if I were wearing any.\"\n\nCole could not help but look. No panties were visible under her short dress, only a glistening sheen of her inviting pussy, beckoning him to touch it.\n\n\"S-s-so, what is a succubus, exactly?\" Cole asked, trying not to stutter.\n\nZafira sighed in disappointment. \"Perhaps I spoke too soon.\" She crossed her legs again. \"A succubus is a demon, a unique demon who brings vast amounts of sexual pleasure to weak-willed men.\" She leaned forward, lightly rubbing her foot against Cole's crotch and putting the deep valley of her cleavage inches from his eyes. \"And consumes their souls in the process.\"\n\n\"A demon? Like, a demon from Hell? You can't be serious.\"\n\nLowering her jacket from her shoulders, two large wings spread out from behind Zafira's back, stretching the width of the table. \"I'm very serious,\" she smiled coyly. \n\nCole felt a shiver down his spine. This was not a dream and he was not going insane. She claimed to not want to kill him, but her advances suggested she did. He was uncertain and anxious about his fate by the end of tonight\n\n\"What do you want with me, then?\"\n\nThe wings folded behind Zafira's back, disappearing inside her body. She slid fluidly off the table and walked around it to the wall covered in crime scene photos, police documents, and news articles. Everything piled throughout Cole's apartment was related to a single case. She plucked a photo from the wall and stared at it intently.\n\n\"It's a shame what happened to your poor wife Maria. You came home from a night of boring police work to find her bound to your bed where she had been raped, then shot three times -- two in the stomach, and one in the head. Why, just that morning, she told you she was pregnant.\"\n\nCole felt his blood boil as Zafira retold those hideous events.\n\n\"How did you know all that? No one knew of her pregnancy but me!\"\n\nZafira turned to him. \"I can read minds. I knew everything about you the moment your eyes met mine last night. Your name, your past, every secret and every kinky desire you ever had.\"\n\nCole was mortified. He felt violated of his privacy, his most intimate thoughts.\n\n\"But I digress. Let's get to the point, shall we?\"\n\nZafira glided back around the table. She sat on Cole's lap and wrapped her strong arms around his neck. He tried to hide his arousal, and then realized it was an exercise in futility if she could read minds.\n\n\"You see, I care about only one thing: survival. For centuries, I've been able to exist among you morals, feeding every now and then, all because I remain otherwise unknown. Your barging in on me last night before I could dispose of that poor man's body has resulted in my being in the news. This is quite an inconvenience for me because there are certain entities that would, to put it lightly, put my head on a pike if they found me.\"\n\nSounds like these 'entities' would be good to befriend, and soon.\n\nZafira heard his mind working. She was slightly amused, and not at all worried.\n\n\"I'm assuming you want me to fix this somehow.\"\n\nZafira smiled. \"You catch on quick.\"\n\n\"How?\"\n\n\"How about we make a deal? I could very easily skip town to dine elsewhere but I rather like it here in Chicago. This town is so full of fun and exciting things to do, so many corrupt souls to claim. But I dare not spend too much time outside my lair now. Scanning the minds of men until I find a corrupt soul for my exquisite tastes can be very time consuming. You, being an officer of the law, should be able to bring me plenty of bad guys for my needs.\"\n\n\"And if I refuse?\"\n\nZafira pouted her lips. \"Then I will have to skip town, and that would make me very sad.\"\n\nThat doesn't sound too bad. Better than being an accessory to murder.\n\n\"On the other hand,\" Zafira said, staring into Cole's eyes, \"if I were to skip town, you'd never find the person responsible for killing your wife. You know this case has gone cold; no leads, no witnesses, and no chance in hell you'll ever figure out what happened that night. It will forever be on your mind until you die an old man in an insane asylum. Sounds like a fate worse than death to me.\"\n\nCole thought about what Zafira said. It was true -- the casewas cold. He wracked his mind over Maria's death every night before passing out at this very table. It tore at his every waking thought. He wanted justice, but at what cost? Could she actually help him?\n\nZafira climbed off his lap and walked toward the door. \"You can take the night to think about it. Meet me at Buckingham Fountain in Grant Park tomorrow at midnight with your decision. Don't make me come find you.\"\n\nShe opened the door, and then turned back toward Cole. \"Oh, and Cole. If you decide to try to disclose my existence to anyone, I will kill you, and not in a pleasant way like Travis.\"\n\nZafira held the palm of her hand to her luscious mouth and blew Cole a kiss. A pinkish mist floated through the air and landed on Cole's lips like something straight from a Saturday morning cartoon. The mist felt exactly like a woman's lips and bore the taste of that sweet aroma. His body responded instantly -- and then the sensation quickly dissipated.\n\nShe winked at Cole and vanished into the night.\n\n<center>CHAPTER 2</center>\n\nFatigued and restless, Cole's frustration reached its limit. He had been up all night, trying desperately to find some clue he had overlooked in Maria's murder.\n\n\"There has to be something I missed, damn it!\"\n\nHe had gone over all the documents and photos a million times. This time, however, he had more incentive than ever to crack the case. If he could somehow figure out who might have killed his wife Maria, and do so before midnight, he could simply decline Zafira's offer, and she would go away. Rather, he hoped she would stick to her word and disappear. He looked at the clock: 3:46 p.m. There wasn't much time before midnight.\n\nThe sudden knock on his apartment door startled Cole.Who could that be? Hopefully not Zafira, though she had already proved to be the type not to knock.\n\nLooking through the peephole, Cole saw someone he didn't recognize. A man about his age with a goatee and dark hair, wearing a black suit, waited patiently. The reversed collar and prayer beads dangling from his neck hinted at his calling. A priest maybe?\n\nCole cautiously opened the door just a few inches. \"Yes? Can I help you?\"\n\n\"Good day, sir. I'm looking for Cole Harvey. Is he around?\"\n\n\"Who wants to know?\" Cole asked suspiciously.\n\n\"I'm sorry, where are my manners? My name is Father Gabriel Korvenus. I am with the Congregation of the Holy Cross.\"\n\n\"Sorry, but I'm not looking to find God today,\" Cole said coldly as he started to shut the door.\n\n\"Wait! Please, Detective Harvey! I think I have some information about the recent night club murder.\"\n\nCurious, Cole opened the door and invited the man inside. Gabriel looked around and beheld a motley mess of police documents and gruesome crime scene photos. He fingered his prayer beads and mumbled something under his breath. The gruesome nature of the photos would unnerve anyone -- anyone except Cole, who had unintentionally made it his home decor.\n\nGabriel looked at a picture hanging on the wall of Cole and Maria on their wedding day. \"Is she the one in the other photos?\"\n\n\"Not that it's any of your business, but yes,\" Cole said sternly. \"I thought you had information for me?\"\n\nThe priest shifted his focus back to Cole. \"Right. The news reports claimed you saw a woman in the room with the victim. Did you notice anything odd about her? For instance, did she have tattoos of large bat wings on her shoulders?\"\n\nThose were not tattoos of bat wings. Those were actual bat wings, and a long tail. However, the similarities were entirely too coincidental. Did this man know about Zafira, and what she actually was?\n\n\"Sorry, but I didn't see any tattoos. Why do you ask?\"\n\nGabriel turned to Cole. \"The day of the murder, a young girl of great physical beauty came into my church for confession. She mentioned that she was about to do something horrible but never said what exactly. As she left, I noticed she had bat wing tattoos on her shoulders that covered most of her back. I thought maybe there was some kind of connection.\"\n\nAll those years as a detective had refined Cole's ability to detect bullshit down to a fine art. This man was hiding something, and he wasn't a very good liar. He seen tattoos on her shoulders? That would mean she would have to have worn an open back dress or something else equally revealing. Who would show up in church like that? Not to mention, who would confess to something before actually doing it? It seemed too far-fetched for Cole's taste.\n\nCole's suspicions were further heightened by a small cross-shaped scar on the side of Gabriel's neck. He wouldn't have noticed it if Gabriel's collar hadn't shifted while looking around the room. No kind of accident leaves such a mark on one's skin. It had to have been done on purpose.\n\nNonetheless, this priest must know something about Zafira. Was he one of the 'entities' that she mentioned she was trying to avoid? Cole thought for a brief moment about disclosing what really happened. But then he also thought about what Zafira said before she left. She would kill him if he said anything, and with her ability to read minds, there would be no hiding it. Best to play safe for now.\n\n\"Doesn't sound like a connection to me. She could have been about to cheat on her husband for all you know. Sorry, but I think you've wasted your time.\"\n\nGabriel exhaled a deep sigh. \"Perhaps. But God sent me to you this day, so it isn't a total loss. I know a great burden must weigh heavy on your heart, Mr. Harvey. Such burdens tend to lead men to do things they wouldn't normally do. The path to Hell is paved with good intentions, and desperation leads to the first step.\"\n\nIt was as if Gabriel could see right through Cole's facade. Maybe Cole wasn't the only one with a bullshit detector.\n\n\"I appreciate you coming by, Father, but I have work to finish down at the precinct. If you find out anything else, don't hesitate to stop by.\"\n\n\"Sorry I couldn't have been more helpful.\" Gabriel reached into his pocket and fished out a business card. \"If you are ever in need of my services, you can reach me here.\"\n\nGabriel handed Cole the card and walked out the door. Before Cole shut the door, Gabriel turned back toward him. \"Remember my words, Mr. Harvey. They may save your soul someday.\"\n\nCole twitched a quick nod and closed the door. He looked at the clock again: 4:27 p.m. Time passed much faster than he liked.\n\n*****\n\nIn his desperation, Cole went back to the precinct to find Frank, the detective assigned to Maria's case. He knew Frank wasn't taking Maria's murder seriously, but maybe by some miracle he had something he could use.\n\nHe was greeted by Penny, the very young and attractive blonde office assistant who worked behind the front desk.\n\n\"Detective Harvey! I didn't expect to see you this late in the day. Weren't you on leave for a while?\"\n\n\"Yeah, I am. Just stopping by for something real quick. Have you seen Frank leave yet?\"\n\n\"No, I haven't. He should still be upstairs.\"\n\n\"Great, thanks.\"\n\nCole quickly turned towards the elevator. \"I'll miss you while you're gone, detective. Have a great day!\" Cole heard over his shoulder.\n\nPenny was a sweet girl and somewhat flirty towards him -- which made him wonder if she had a crush on him. Not that he would act on it, of course.\n\nCole got off the elevator and made his way to Frank's untidy desk. Frank was idly chatting with the other detectives.\n\n\"Hey, Cole! What the hell are you doing here? Do you even know how to take a break?\"\n\n\"I need to ask you something. In private,\" Cole said.\n\n\"Sure thing.\" Frank pushed up from his chair.\n\nThey walked to a coffee maker in a secluded corner. Frank poured two cups of evil-smelling brew.\n\n\"So what's up?\" Frank asked, handing Cole a chipped cup.\n\n\"Listen, it's been a while since we talked about Maria's case. Any new developments?\"\n\nFrank shook his head and put a hand on Cole's shoulder. \"I can't imagine what it is like to lose someone like that. I'm doing everything I can to make sure we catch the son-of-a-bitch.\"\n\nEverything he can indeed, Cole thought. When he's not wasting paper, he's chatting with everyone else about his golf game the previous weekend, or some girl he met at a bar. Cole's anger got worse with each passing second.\n\n\"I asked if there were any new developments.\" Cole raised his voice. \"It has been two years Frank, and I'm tired of everyone telling me how fucking sorry they are!\"\n\n\"Calm down, Cole. You know just as well as anyone that these things take time.\"\n\nTime was a luxury Cole no longer had. He looked at the clock: 5:57 p.m.\n\n\"Yeah, time. Time that you are spending sitting on your fucking ass!\" Cole's yell drew the attention of everyone in the room. They all stared at him -- perhaps hoping a fist fight was about to start. \n\nCole may have lost his temper, and he may have wanted to punch Frank in the face, but he wasn't stupid enough to lose his job over it. He stifled his anger.\n\nWhat a fucking waste of time. He backed away from Frank and turned toward the exit. Better to leave now before Captain Finnegan learned he was here making a fuss. Cole hurried from the station.\n\n*****\n\nWhenever Cole needed advice, he always consulted Maria. Even in death, some things never changed. He arrived at Evergreen Cemetery with guilt weighing heavy on his heart.\n\nIt was 7:15 p.m. and the sun had started to set. Cole stared down at the grave marked \"Maria Harvey\". He placed a single red rose on the headstone. The base of the headstone was masked by a mangled pile of shriveled flowers, most of them roses.\n\n\"I miss you, Maria,\" Cole said, speaking as if she could hear him. \"I miss the life we had together. Things were much happier and simpler then. Remember how you always used to make me a steak dinner whenever I had a bad day at work? You always knew the right things to say when I was feeling down or lost.\"\n\nCole smiled, remembering the good times, but then a tear rolled down his cheek. \"I feel like I might be lost forever without you. I'm sorry I wasn't there to protect you. I'm sorry I wasn't able to bring the one responsible to justice. You were so good to me, and yet I failed you as your husband.\"\n\nHis heart was broken. His hope lost. Only one thing remained.\n\n\"Please forgive me for what I'm about to do.\"\n\n*****\n\nGrant Park was as dark as it was quiet. One of the only sources of light was a lamp post next to a walkway with a small bench facing Buckingham Fountain. Cole decided to wait here, spending what time he had left googling succubi on his smart phone. He found nothing useful. All his searches revealed were a few myths -- and a plethora of erotica stories that would make a whore blush.",
        "He looked at his watch: 11:59 p.m. He grew more and more nervous and apprehensive with each passing second. Was he at the right spot? Was she going to show? What if she didn't show? Maybe she had left Chicago already and...\n\n\"I'm so glad you came, Cole!\"\n\nCole jumped as Zafira appeared on the bench beside him, seemingly out of thin air. \"Shit! You scared the hell out of me!\"\n\nZafira smiled wickedly. \"Your fear amuses me.\"\n\nAs she stood, Cole could not help but stare at her perfect behind. She wore the same outfit as the night before: short black cocktail dress, black knee high boots, black sheer stockings, and an unzipped black designer leather jacket. He caught a glimpse of the patch of bare skin just above where her stockings ended. Cole had no doubt that her standing in such a manner was deliberate.\n\n\"Come. Let's go for a walk, shall we?\" Zafira smiled.\n\nCole rose from the bench. Zafira wrapped her arm around his back and rested her head against his shoulder. Despite knowing how dangerous she was, her touch was comforting, and her sweet perfume was soothing. It had been a long time since he had a woman on his arm. The fact she was a demon didn't make it any less pleasant. They walked the poorly lit path without saying a word.\n\n\"So,\" Zafira said, finally breaking the silence, \"have you made a decision about what we discussed last night?\"\n\n\"How would you be able to help me?\" Cole demanded.\n\n\"You just leave that to me. As you already know, I have a unique set of skills you won't find elsewhere. Besides, what do you have to lose?\"\n\n\"My soul,\" Cole quickly retorted.\n\nZafira laughed. \"I already told you, I only consume the corrupt ones. Your soul is pure, which is a very rare quality in today's world.\"\n\n\"I don't understand. Pure?\"\n\nZafira sighed. \"Ever heard of the Seven Deadly Sins?\"\n\n\"Yeah, sure. Wrath, Lust, Greed, Pride, Gluttony, Sloth and Envy.\"\n\n\"Very good!\" Zafira declared. \"Good to know not all knowledge is lost on you humans. Do you remember committing any of them?\"\n\n\"No,\" Cole replied.\n\n\"That is why your soul isn't corrupt. However, that alone isn't enough to make your soul pure. You must also uphold the Seven Holy Virtues.\"\n\nCole looked at her, confused. \"Seven Holy Virtues?\"\n\nZafira rolled her eyes again. \"It's no wonder there are so many corrupt souls. You humans only focus on what you shouldn't do and not what you should do. Love, Hope, Courage, Justice, Fortitude, Kindness, and Wisdom.\" Zafira looked as if she swallowed a bug. \"Just saying those words makes my stomach churn.\"\n\nCole reflected on what Zafira said for a moment. \"You make me sound like some kind of messiah.\"\n\n\"Messiah or not, it would be in your best interest to make sure your soul stays that way. Lest I be tempted to make a meal out of you.\" She eyed him appraisingly.\n\n\"How do I know you won't anyway?\"\n\nZafira stopped. \"I'm insulted you would insinuate such a thing! I am a succubus, a demon of lust, not some petty imp seeking to deceive you. I don't deal in lies, only seduction.\"\n\nIt appeared she was not lying. If she wanted him dead he already would be. She certainly possessed the power to do so -- though her potent seduction abilities could be far worse than any lie.\n\n\"What do I need to do?\" Cole asked in a very solemn tone.\n\nZafira smiled and then grabbed Cole, squeezing him tightly. \"That's the spirit! All I need you to do is find corrupt souls for me. That is all. You track down criminals all the time. That's what you do. So, this should be fairly easy for you. Instead of arresting them however, you'll just send them to me.\"\n\nCole became more and more comfortable with the idea as they took their midnight stroll. Rather than having criminals rot in a prison cell, they would rot overnight in sexual bliss. Plus, there would be no need for a jury when she could instantly know everything they had ever done. No matter how he looked at it, justice would be served.\n\nA wiry man suddenly appeared from behind a tree. \"That's a fine piece of ass you got there, buddy.\"\n\nCole immediately noticed the gun in the man's hand. He felt a shiver of fear. He had left his revolver in his car. Fuck! Didn't figure he would need it, considering he was there to meet Zafira -- who apparently was immune to bullets.\n\n\"Look, we don't want any trouble. What do you want?\" Cole tried to engage with the man.\n\nA larger man snuck up behind Zafira and grabbed her from behind, his arm around her throat.\n\n\"He must be rich,\" the second man said as he clinched the lovely succubus. \"No whore who looks this good comes cheap.\"\n\nThey think Zafira is a prostitute? Come to think of it, she did wear suitably slutty attire, Cole realized. Nonetheless, they had no idea who or what they were dealing with.\n\nThe wiry man pointed his gun at Cole. \"I want your wallet, your coat, and anything else you got!\"\n\nZafira started laughing hysterically. Cole knew something was about to go down, and it wasn't going to be pretty.\n\n\"What the fuck are you laughing at, bitch?\" the taller man said as he tightened his grip around her. She kept maniacally laughing, even as he choked her,\n\n\"Is she fucked in the head or something?\" the man pointing the gun asked.\n\n\"No,\" Cole said, \"she's laughing because you two just made the biggest mistake of your useless lives.\"\n\nAt that moment the first man's expression on his face turned completely blank. The hand holding the gun moved closer and closer to his own face, stopping with the barrel inside his mouth.\n\n\"You can let me go now,\" Zafira said.\n\nThe taller man released her immediately. He too had a blank expression on his face. Cole was stunned how quickly this situation had turned around.\n\n\"Are you... controlling them?\" Cole asked.\n\n\"Why of course! Now, the question is: What should I make them do?\"\n\nThe man with the gun pulled the hammer back, ready to fire.\n\n\"Wait!\" Cole said. \"Having him kill himself here would be messy. Not to mention the noise would draw attention here.\"\n\n\"Hmm, I suppose you're right about that. I've got a better idea anyway.\"\n\nZafira walked up and took the gun out of the man's mouth and tossed it to the ground. She leaned forward and kissed him, her tongue entering his mouth. She broke the kiss and motioned for the taller man to come to her. When he reached her, Zafira grabbed the back of his neck and pulled his lips to hers.\n\nCole watched as Zafira made both men strip completely. Their clothes drifted to the ground like dry leaves. He knew what she was going to do, but he did not try to interfere. They were as good as dead. There was nothing he could or would do to stop it.\n\nThe men touched Zafira, fondled her, stroked her. They undressed her, starting with her leather coat, followed by sliding the shoulder straps of her dress down her arms. The classic Little Black Dress slipped to the ground like a forgotten shadow. Her wondrous nude body was fully exposed.\n\nZafira mewled as each man took one of her breasts and began suckling at her erect nipples. The men stroked their engorged cocks while under their mistress' spell, completely under her domination.\n\nZafira looked at Cole. \"Normally, I let them think they are in control. It adds a little extra pleasure for me. However, I feel the need to demonstrate what would happen if that pure soul of yours should ever become corrupt.\"\n\nFrom what he just witnessed, having a corrupt soul didn't seem that bad. Sure, you die at the end, but being able to enjoy that perfect body was a hell of a way to go.\n\n\"So what you're saying is, you can't control me if my soul remains pure?\" Cole asked.\n\nThe shorter wiry man knelt before Zafira and lapped at her wet pussy while the other continued to suck on her large tits.\n\n\"Mmm,\" Zafira purred. \"Yes Cole. Having a pure soul provides certain immunities to my abilities. I can't control or alter your mind. I can only read it.\"\n\nThat's comforting. He was happy knowing he would not share their fate.\n\nCole watched the two mindless victims pleasure Zafira. Their mouths worked over Zafira's pussy and breasts. It made his own body start to betray him. He thought it was a perfume Zafira wore -- but the air became thick with the scent the moment her clit started being stimulated. It was some kind of pheromone, and the more that entered his nostrils the harder his cock became. His mind started to wonder what her delicious pussy tasted like.\n\nNo! He had to block out those thoughts!\n\nZafira smiled at Cole, knowing he struggled with his own desires. She pushed the kneeling man down on the ground to his back. She climbed on top of him, straddling his waist. Ever so slowly, she lowered herself onto his thick cock. Her eyes rolled back in her head. The man's rough hands massaged the plump soft mounds of her breasts while he thrust deep inside her.\n\nThe taller man stroked his cock and positioned himself behind her. Zafira leaned forward, placing the nipple of her right breast into the hungry mouth of the man under her. The man behind her squatted down slightly, rubbing the tip of his hard cock up and down the valley of her lovely ass while she vigorously fucked the wiry man under her.\n\nShe paused for a moment, arching her back. The man behind her pointed his penis at her tight little rosebud. His cock was much longer and thicker than the shorter man, but that didn't deter Zafira. Slowly he inched his way into her super-tight ass. She moaned louder the more he stretched her, until he was all the way inside her.\n\nCole was mesmerized by the lewd sex in front of his eyes. The two men thrust in and out of her like two pistons in a well oiled engine. Zafira's mouth was agape as they fucked both her nether holes. She screamed pleasurably into the night. Cole hoped no one was around to hear her because she made no attempt to be quiet.\n\n\"Are you enjoying the show, Cole?\" she asked, panting heavily.\n\nIt was a rhetorical question. Cole's cock strained against his trousers so bad that it hurt. His balls swelled from watching this beautiful creature get fucked in ways that he thought only existed in pornography. He wished he was inside her.\n\n\"Come to me, Cole.\"\n\nHer voice beckoned him. Cole had control of his body but he stepped forward anyway. His brain told him he would die if he fucked her, but his dick said do it anyway. Her pheromones overpowered his ability to think. He stood in front of the sexy vixen, still being fucked by her two playthings.\n\n\"Pull your cock out, Cole. Don't be shy,\" Zafira said seductively.\n\nCole unzipped his fly. His throbbing member sprang forth, relieved to be free of the confines of his trousers. He was fully erect and of admirable size and girth.\n\n\"Mmm, that looks tasty!\" Zafira breathed, licking her lips with her forked tongue.\n\nHe knew what she wanted him to do. He knew what would happen if he put his cock in her mouth. His balls ached like they never had before. They wanted, no, theyneeded release.\n\n\"Let me suck you, Cole,\" she beckoned. \"It will be the best blow job you've ever had.\"\n\nCole's hand slid up and down his shaft. The pleasure he gave himself was better than any of the too-many other times he spent stroking himself to Internet porn after a long day's work.\n\nWait. Other times? That's it!\n\n\"No,\" Cole replied.\n\nZafira stopped, surprised by Cole's sudden refusal.\n\n\"You said my soul is pure, but I've masturbated many times in my life. That must mean that jerking off isn't a sin. If I let you suck me off, it would be lust, thus corrupting my soul and allowing you to take it.\"\n\nCole stroked his cock several feet in front of Zafira, never moving closer. He pumped his cock with the energy of a teenager.\n\nZafira smiled wickedly. \"Oh, you clever, dirty boy! You teasing me like that makes me so wet!\"\n\nThe added arousal made Zafira's horns grow from her head; her large black bat wings extended to their fullest. Her two slaves thrust in and out of her so fast that a normal man's lungs would collapse. Her eyes, now bright red, stared into Cole's while he kept stroking his cock. He was unfazed by her demonic appearance. Her beauty was eerily enhanced. The horns, the wings, and now the tail that wrapped around the throat of the man behind her -- oh yes, she was supernaturally sexy.\n\nBut still a demon.\n\nCole let out a bestial roar when he reached the edge. Zafira screeched loudly like a banshee, her orgasm in full force, her energy magnetic. The two men moaned, unable to hold it back any longer. They sent their seed deep inside both of Zafira's hungry holes while Cole shot his flying into the air towards her. Like a vacuum, she sucked in every drop of Cole's cum, never allowing a single drop to touch the ground.\n\nCole saw at first hand what happened when Zafira consumed a soul. The two men rapidly shriveled and shrank like raisins under a merciless hot sun. Their eyes dried to fine powder. Their hair turned pure white. Their skin darkened and collapsed around their bones. Their lifeless components fell silently to the ground.\n\nUnsure of what to do, Cole stood dumbfounded with his cock still protruding into open air, aimed at the unseen horizon.\n\n\"Mmm...\" Zafira stood. She folded her wings behind her. \"It has been centuries since I've tasted the cum of a pure soul. Such a sweet dessert after a large meal like this.\" She looked intently at Cole's cock, still in the open. A small dollop of cum hanging from the tip of Cole's penis slowly floated through the air to the tip of Zafira's forked tongue.\n\nCole quickly put his cock back into his trousers. \"Now what are we going to do about them? We can't leave their bodies here for the CPD to find. Cops don't like unexplained corpses.\"\n\nZafira flashed Cole a smile. She raised her hands and clicked her fingers. In an instant, the bodies of the two men ignited like rags soaked in gasoline. The fire burned with such intensity that Cole had to step back for his face hurt from the heat. The bodies were charred beyond recognition within seconds.\n\nThe flames slowly dissipated. Zafira calmly knelt down, puckered her lips and blew air from her mouth. The charred corpses disintegrated into ash, blowing through the air until there was literally no trace there ever had been two men.\n\nShe pointed at the pistol on the ground where she tossed it earlier. She snapped her fingers again. The steel weapon crumbled into rust.\n\n\"Ashes to ashes,\" Zafira said, winking at Cole.\n\nZafira walked casually to her dress puddled on the ground. Her tail, wings, and horns all returned inside her body, leaving just a tattooed nude beauty in the moonlight.\n\n\"So where were we?\" Zafira said as she slipped her dress back on.\n\nCole stood motionless, trying to sort out all that had just transpired. He was almost mugged, then he watched two guys fuck Zafira, and have their souls ripped from their bodies, then set on fire and vanish without a trace. All of that, while experiencing the best orgasm he had ever given himself.\n\nShe stood in front of Cole and clicked her fingers in front of his eyes. \"Hello? Anyone in there?\"\n\n\"Oh! Um. We were discussing terms. I think.\"\n\nShe gave him a stern look. \"It's decision time, Cole. Do you agree to our deal, or not?\"\n\nCole paused for a moment. He knew she had powers that he didn't yet fully understand. He also knew he had no one to turn to for help in finding Maria's killer. What choice did he really have?\n\n\"Okay, I'll do it.\" he replied.\n\n\"Great!\" Zafira said, jumping up and hugging Cole. \"If you are certain of your answer, then kiss me. It's how we succubi seal these types of arrangements.\"\n\nHe was hesitant, but he leaned forward and gave Zafira a small peck on the lips.\n\n\"You call that a kiss?\" she scolded.\n\n\"Fine.\" Cole leaned in and kissed her passionately this time.\n\nTheir lips pressed together and fireworks exploded in Cole's mind. The way her kiss felt was unlike anything he had ever experienced with Maria, which he was ashamed to admit to himself.\n\n\"That was much better. I'm actually impressed,\" Zafira said.\n\n\"Thanks, I guess.\" Cole said.\n\nZafira looked at herself. \"Whew, I'm sweaty and dirty from all that. I need a shower. Thankfully, my lair isn't far from here. Care to walk me home?\"\n\nCole nodded. There were still things he didn't understand, plenty more that he needed to discuss with her. Visiting her lair would be a good place to start.\n\nAnd so they walked, Zafira's arm around Cole's back and her head rested on his shoulder.\n\n<center>CHAPTER 3</center>\n\nHere we are!\" Zafira said.\n\n\"Here? But there's nothing here.\" Cole was puzzled. A concrete wall?\n\nThey were under one of Chicago's many overpasses. The traffic roar was deafening. The fetid space showed no sign that anyone had been down here for quite some time. Moldy piles of litter and debris lay scattered across the uneven ground. This looked like home-sweet-home for a troll.\n\nZafira gave Cole a sultry smile. \"Looks can be deceiving. You should know that by now.\"\n\nShe placed her hand to the concrete wall. It responded vividly to her touch. Purple glyphs glowed like bright street signs and spun on the wall in a psychedelic clockwise whirl. The glyphs became a portal, a gateway, which opened to reveal a hidden room.\n\nWithout a word, Zafira stepped through the portal.\n\n\"Hey! Wait!\" Cole shouted after her. He had better follow her before it closed, he thought.\n\nCole took a running start and jumped into the glowing wall. On the other side, he fell flat on his face. He looked up and saw he was in a large room. The roar of traffic was gone, replaced by a soft string quartet melody from an unknown source.\n\nCole stood and surveyed his surroundings. It was not what he had expected to see in a demon's lair. The room was clean and elegant. It was like an upscale studio apartment, aside from the lack of windows. A dignified leather couch faced a glowing fireplace. Two leather armchairs stood nearby\n\nAcross the room he saw a modern kitchen with a high quality brushed-steel appliance set: French-door refrigerator; gas range with oven and microwave; over-sized dishwasher. Shiny kitchen utensils hung over a clean granite countertop. He wondered why a demon needed a kitchen.\n\nIn the corner to his right he saw a large glassed-in shower stall with multiple shower heads. The space was large enough for a group of friendly people. In the far corner was a king-plus-size canopy bed with pink mosquito netting, perfectly made-up with a red comforter on top and large fluffy pillows.\n\nZafira stood on one foot in front of him. She shucked off her knee-high black boots, one at a time, and then peeled away her sheer black stockings. She slipped out of her designer leather jacket and little black cocktail dress without any regard for Cole viewing her impossibly beautiful naked body. The wings on her back folded outward and stretched the length of her couch, then relaxed behind her. Her horns were fully extended. Her tail dangled to the floor.\n\n\"Ah!\" she sighed, stretching her exquisite limbs. \"It's good to be home. I don't have to worry about keeping up appearances here.\"\n\nEven though this was not the first time Cole had seen her naked, or even the second, he was still in awe of her. She would be the perfect model for any high-fashion magazine -- if not for her large blood-dark wings, curved rigid horns, and long black slinky tail.\n\n\"Make yourself at home,\" Zafira said, relaxing on the couch. She stretched her legs comfortably.\n\nCole decided to inspect her dwelling. He approached the refrigerator but hesitated opening it. \"What do succubi drink or snack on?\" Cole asked himself. He pulled the French doors open -- to find absolutely nothing out of the ordinary. It was well-stocked with fresh fruit and vegetables, cases of soda in the bottom, various condiments, and even ice cream in the freezer.\n\n\"Were you expecting severed heads and leech extract in there?\" Zafira asked, giggling to herself.",
        "\"Something like that,\" Cole admitted. He realized she was watching him.\n\nCole grabbed a soda from the fridge, cracked it open and continued to walk around. On most of the walls were paintings revealing a variety of lewd sex. Some paintings featured succubi while others showcased massive all-encompassing orgies. Lust, it would seem, was the general theme. One painting, however, was suspiciously out of place. It depicted a young blonde girl in a long blue dress looking over a cliff at a burning village.\n\n\"Do you like them?\" Zafira asked. \"I painted them myself.\"\n\n\"You paint?\" Cole asked, visibly surprised.\n\n\"I do have hobbies, you know. I don't spend all of my time having sex and consuming souls. Just mostof my time.\"\n\nTurning his head towards the room, Cole saw a small easel with a half finished painting that looked more abstract in its current form. Various brushes and several jars of paint were neatly arranged around it.\n\nCole did notice a few things that seemed out of place for a 'normal' living space. One wall was devoid of paintings. Instead, it was hung with all manner of cuffs, clamps, straps and a few whips. Something told Cole those were for more than decoration. He also noticed a shelf on the headboard of the bed that held a dozen or so skulls. Human skulls, to be precise. They were all clean and pristine, without any blemishes.\n\n\"Trophies,\" Zafira said. \"Some men I couldn't bring myself to part with completely.\"\n\n\"Former love interests?\" Cole sarcastically asked.\n\nZafira laughed, \"Of course not! Some were celebrities. Most were important historical figures.\"\n\nCole thought about asking who exactly these skulls belonged to, but then thought it would be better not to know.\n\nSomething caught Cole's eyes toward the center of her dwelling -- some kind of pyramid-like rack made from rods of solid gold, which stood as tall as Cole's chest. Each rod bore a glowing purple glyph similar to the ones that appeared when Zafira opened the portal to her lair. A peculiar sword lay atop the rack. The blade curved like a snake slithering through grass and was made of some kind of crimson metal like frozen blood. Blue eyes glowed from the small dragon skull on its hilt. Cole walked toward the rack, curious of the sword and its strange holster.\n\n\"I wouldn't touch that if I were you,\" Zafira warned, \"unless you want your soul ripped from your body.\"\n\n\"What is it?\" Cole warily asked.\n\n\"That is Ragnarok: The Destroyer. Even beings deemed immortal or invincible cannot withstand Ragnarok's power. No one knows its origin or the purpose of its creation. All that is known is, it has a will of its own. It chooses who can wield it, and those unworthy are torn asunder.\"\n\nCole stepped back from the relic. If what Zafira said is true, then what is she doing with such a powerful weapon? If the sword found her worthy, it must be a creation of absolute evil.\n\nShe seemed to read his apprehension. \"Don't worry; I don't have the strength to wield it anymore.\"\n\nCole gazed at Zafira. \"You mean, you used to be more powerful than you are now?\"\n\n\"In my prime, there wasn't much I wasn't capable of. Certainly more than reading minds and controlling weak willed mortals. I possess but a fraction of my former power.\"\n\n\"Is that why you hide from the outside world? You don't have the strength to fight back against the 'entities' you mentioned before?\"\n\nZafira sighed. \"Partially, yes. I would be no match for an angel in my current state.\"\n\nCole gave Zafira a look of surprise. \"Angels? They exist?!\"\n\nZafira rolled her eyes. \"You know for a fact: demons exist. How could you not know angels were real too? Just don't go believing all that God and Satan nonsense you humans conjured up.\"\n\n\"I try not to make assumptions,\" Cole said. \"Otherwise, I would think you'd have severed heads and leech extract in your fridge.\"\n\n\"Touch\u00e9,\" Zafira giggled. \"Crusaders, on the other hand -- them, I could take care of, if they were alone.\"\n\n\"What are Crusaders?\" Cole asked.\n\n\"Crusaders are an order of men dedicated to the extermination of demons. Their order is as old as civilized man and is well-versed in the art of magic. They are much more secretive and reclusive than they used to be. However, you can always spot one by the small cross branded on their neck.\"\n\nSmall cross? Brand? Gabriel! Recognition exploded in his mind.\n\n\"I saw one yesterday!\" Cole explained. \"He came to my apartment asking about the night club murder. Iknewsomething was off about him. He gave me some bullshit story about...\"\n\n\"I can read minds, remember?\" she interrupted. \"I figured one of them would be paying you a visit after that night club fiasco hit the news. This is good news for you, Cole, because we need him to find Maria's killer.\"\n\nCole looked at Zafira inquisitively. \"We need him? For what?\"\n\n\"Hmm, how to put this delicately? We don't needhim, per say. Rather, we need his heart.\"\n\n\"I'm not helping you kill people, Zafira!\" Cole scolded.\n\n\"You won't have to kill anyone. However, I never said you wouldn't have to do questionable things. You want my help, this is me helping you. One hand washes the other.\"\n\nCole thought about it. He was okay with her killing criminals -- but a priest? That is going too far.\n\n\"Since you're busy questioning your own morality, allow me to make this easy for you. While you were spending the day trying to find an alternative to my offer, I took the liberty of doing a little memory spying on Gabriel. Turns out, Mr. Holy Man has an affinity for young girls. Too-young girls, if you catch my drift.\"\n\n\"A corrupt soul...\"\n\n\"That's right! It's a win-win for us both. All I need you to do is lure him to my lair. I will handle the rest.\"\n\n\"Isn't that a little risky?\"\n\n\"Don't worry, I have a plan. Go ahead and tell him it's a trap for all I care. He will suspect as much anyway. I just need to get him to part with the prayer beads that hang around his neck. They are the source of a Crusader's magical power. Remove the beads, and they are powerless.\"\n\nDoesn't sound too hard. \"All right, I'll do it. I'll call him tomorrow and tell him to come to my apartment. Then I'll show him where your lair is.\"\n\nZafira rose from the couch, \"Now that our plan is in order, I need to take a much needed shower. I'm still sweaty and dirty from tonight's dinner.\"\n\nShe walked to her large shower stall. Cole's eyes were affixed to her backside, staring at her perfect ass -- and the tail that swayed with every step.\n\nBoth shower heads sprung to life when Zafira turned on the water. One sprayed down her back while the other wetly massaged her front. It was apparent why her shower was so big: her wings would not fit in a normal shower. No shower curtains or door were apparent; Zafira soaked her body out in the open without a care.\n\nCole watched on from the couch. He definitely enjoyed the unintentional show Zafira put on. Or was it so inadvertent?\n\nShe lathered-up a loofa and vigorously scrubbed her arms and neck. Water and suds cascaded through the valley of her pert breasts, past her flat stomach, and in torrents between her lithe legs. She massaged her soapy breasts; nipples protruded from the bubbles like flashing beads.\n\nBracing her foot on a ledge, Zafira scrubbed her legs one at a time, and then turned her ass in Cole's direction. Suds flowed from her loofa as she rubbed the small of her back just above her tail. Then she grabbed her tail with one hand and stroked it with her soapy other hand.\n\nZafira returned to her efforts. She extended her wings and tried to reach behind herself but could not quite catch the top of the saurian limb stretching from her back. Zafira struggled several times before Cole's voice caught her off guard.\n\n\"Do you need a hand?\" he offered.\n\n\"No!\" she grumbled, still struggling.\n\nCole walked over to the shower, pulling the loofa from Zafira's hand.\n\n\"Here, allow me.\"\n\nZafira was irritated but did not decline Cole's offer. He stretched to the top of her wings and lightly scrubbed them. The water spraying on her wings sounded like raindrops hitting an umbrella.\n\nAfter lathering her wings, Cole returned the loofa and used his hands. The wings were smooth like leather to the touch. Zafira mewled as he rubbed the soapy lather all across both wings and traced his fingers down her phalanges. She jerked when he tried to rub the base of her wings at her shoulders.\n\n\"That tickles!\"\n\n\"Sorry.\"\n\nCole rubbed up and down her back. He stopped to massage her shoulders. A mist of water bounced from Zafira's body and drenched Cole's clothes. He did not mind.\n\n\"You know, you're pretty good at this,\" Zafira purred.\n\n\"I used to wash Maria's back like this every day when we showered together. I always loved the way the water ran down her back, how her fresh wet hair smelled, how her skin got goosebumps if I got too close to her ribs.\" He backed off, realizing his mind had wandered. \"Sorry.\"\n\nCole jumped slightly as Zafira's tail wrapped around his back, stopping his retreat. It squeezed him ever so slightly like a gentle hug.\n\n\"She was a beautiful woman,\" Zafira said.\n\n\"Yes, she was.\"\n\nThere was a dead silence for a while. Cole focused his thoughts on washing Zafira rather than dwell on how much he missed Maria. She stood quietly, enjoying the sensation.\n\n\"Can I ask you something?\" Zafira said.\n\n\"Sure.\"\n\n\"Do you think I'm repulsive?\"\n\nCole's hands stopped. \"Why do you ask? You would just read my mind anyway.\"\n\n\"I'd much rather hear your answer, whatever it may be. Just be honest.\"\n\nCole paused for a moment, and then went back to washing Zafira's back. \"You're beautiful. Just... different.\"\n\nWhen Cole finished her back, Zafira turned around. She had a very genuine smile. \"Thank you, Cole.\"\n\n\"You're welcome.\" Cole smiled back at her.\n\n\"We'll find out who killed Maria, I promise. I just need you to trust me, okay?\"\n\nCole nodded his head in agreement.\n\n\"Its late, and you need your rest for tomorrow. I can send you home.\"\n\n\"Send me home?\" Cole inquired.\n\nZafira stepped out of the shower, not bothering to dry off, and walked to the wall where they had entered. She placed her hand to the wall and the portal appeared again -- only this time, Cole could see his living room on the other side.\n\nZafira gave Cole a little kiss on the cheek. \"Good night, Cole.\"\n\n\"Good night, Zafira.\"\n\nCole stepped through the portal and was standing in his own living room. The portal behind him vanished without a trace.\n\n\"Well, that's convenient.\"\n\nTired, Cole quickly turned towards the bedroom. Tomorrow was going to be a long day, full of uncertainty.\n\n*****\n\n\"Over there,\" Cole pointed to the concrete wall under the overpass. \"She made some kind of portal there.\"\n\nGabriel moved his hands across the wall. He stopped when he found what he was looking for.\n\n\"Ah, well done Mr. Harvey. There are definitely magical remnants of a portal here.\"\n\nThe priest turned to Cole. \"Thank you for coming forward with this, Mr. Harvey. Succubi are a blight upon this world, seeking only to consume all in their path. You'd best leave now. If she sees you here, she will not hesitate to kill you.\"\n\n\"Are you sure you'll be okay?\" Cole asked, pretending to be concerned for his safety.\n\n\"I've been ridding the world of demons all my life. I'll be fine. Go now -- it's too dangerous for you here.\"\n\nCole nodded. \"Good luck, Father.\"\n\nCole walked to his car and drove off, leaving Gabriel to his fate.\n\nThe priest fingered the prayer beads that hung from his neck. He mumbled an arcane incantation. An eerie subsonic note filled the aural space. Purple glyphs appeared and spun clockwise. The portal to Zafira's lair dilated open. With his beads in one hand and a golden sacrificial dagger in the other, Gabriel stepped through the demonic gateway.\n\nOnce inside, Gabriel warily looked around. The tidy room seemed empty. Gabriel grasped his beads and thrust his dagger into the air.\n\n\"Show yourself, demon!\" he shouted as a magical pulse shook the room.\n\nNothing happened. She was not here. \"On a hunt perhaps,\"he thought.\n\n\"You! You there! Help me! Please!\"\n\nGabriel turned toward the sound of a woman's voice. He saw a very young blonde-pigtailed girl chained to the wall. She wore a parochial school uniform. Her wrists were cuffed high above her head while her feet were cuffed at the ankles over her knee high socks.\n\nWith prayer beads and dagger in hand, Gabriel carefully approached the girl dressed in the white button-up shirt and plaid skirt. This was surely a trap.\n\n\"Please! Help me!\" she pleaded again.\n\nGabriel touched the girl's forehead with his prayer beads. Nothing happened. She was human and very much alive. He unfastened the cuffs, freeing the girl.\n\n\"Oh thank you! Thank you!\" the girl said, hugging Gabriel and sobbing into his chest.\n\n\"What is your name? I am Gabriel.\" he asked.\n\n\"Stacy,\" she replied. \"I was on my way home from a friends house after making plans for our senior prom and then some lady jumped me. Next thing I know, I'm trapped here.\"\n\nHe grabbed her by the hand, \"We need to get out of here Stacy, quickly!\"\n\nGabriel put his hand to the wall and the portal reopened. He stepped through pulling her with him.\n\n\"Whoa! That is some door!\"\n\nGabriel's mind was more focused on getting her to safety than trying to explain the intricacies of magic portals.\n\n\"Quick, get in my car. We must make it to my church. You'll be safe there.\"\n\nGabriel and Stacy entered the black Oldsmobile and sped off.\n\n*****\n\n\"Are you sure I'll be safe here?\"\n\nStacy peered nervously around the grand church with high vaulted ceilings. Its tall stained glass windows emanated bright colors despite the outside darkness.\n\n\"Yes, Stacy. I can't let you go home just yet. Not until I find who captured you.\"\n\n\"What about the police? What is going on?\"\n\nGabriel put his hand on her shoulder. \"All you need to know is that you are safe here. I need you to trust me.\"\n\nStacy looked into his eyes. \"I trust you. You saved my life, Gabriel.\"\n\nShe had such a cute innocent smile. His mind started to wander as he brushed her blonde hair out of her eyes.\n\nStacy leaned in. \"I want to thank you for saving me.\"\n\nGabriel's eyes widened. A small slender hand cupped his genitals.\n\n\"I um... really need to...\"\n\n\"Please?\" she pleaded softly, lowering down to her knees. \"There's no one else around, is there?\"\n\nShe wasa cute girl. A little old for his taste, but she was willing and legal.\n\nHe did not resist when Stacy unfastened his belt and pulled his black trousers down slightly. His eyes rolled back into his head when he felt her warm wet mouth engulf his swollen cock. Her mouth glided back and forth across his full length. Occasionally, she would stop, to let a string of saliva running from his tip to her mouth dribble down her chin. Oh, she was a dirty girl!\n\nThis couldn't be her first time, he thought. She was very good at it -- almost too good.\n\nGabriel had forgotten his duty. He could only focus on was how well this young girl sucked him. He looked down to see Stacy play with her pussy under her skirt. She was enjoying this as much as he was!\n\nStacy's oral pace picked up as she teased herself. The slurping noises of fellatio and Stacy's mewling filled the church's holy cavernous space. Gabriel felt his balls swell, and his cock twitch.\n\n\"Ah, ooh!\"\n\nStacy stopped. She had more \"thanking\" to do.\n\nShe stood, and led Gabriel to a nearby pew. After sliding her panties to the floor, she sat him down and crawled into his lap. She unbuttoned her shirt.\n\nHer breasts were not large, not more than a handful. But these modest mounds were pert and perky, with long hard nipples that could cut glass. Gabriel helped himself to her sharp nips, suckling with a primal need. His hand went under her skirt and felt her wetness. He inserted a finger inside her, and then another. She ground her pussy against his intruding digits.\n\nStacy rose above him and straddled his hips. She reached under her skirt and aimed his cock head towards her dripping sex. She lowered herself on him just an inch, teasing him mercilessly, while placing her hands on his prayer beads.\n\n\"What are these?\" she asked.\n\nGabriel had to divert his mind from her tightness for a moment so he could speak. \"They are prayer beads, symbols of a holy order.\"\n\nStacy smiled at him. \"Can you put them on me?\"\n\nGabriel hesitated. \"They are never meant to leave my neck. Doing so is sacrilege to my order.\"\n\nStacy slowly lowered herself down on his aching cock. \"Please?\" she pouted, \"I'll give them right back.\"\n\nHis little head overrode the one atop his shoulders. Her hot tight pussy convinced him to part with the beads. He placed them around her neck as she pressed against his pelvis.\n\nShe smiled. \"They look good on me, don't they?\"\n\n\"Yes,\" he hissed, thrusting deep inside her.\n\n\"You know, this is one of the kinkiest roleplays I've ever done.\"\n\nGabriel looked at her, confused. \"Roleplays?\"\n\n\"Oops! Sorry! Oh, now what were the words I was supposed to say? Oh yeah!\"\n\nStacy cleared her throat. \"Shinku Oni Demonica!\"\n\nGabriel froze. His expression was one of complete shock.\n\n\"No. No!\" he shouted.\n\nThe beads around Stacy's neck responded to her spoken words, glowing brightly. Gabriel scrambled to remove them but they were quickly absorbed into Stacy's skin.\n\n\"Wha-? What's happening to me!?\" she screamed.\n\nHer skin was burning hot. Her pussy, still around Gabriel's cock, was even hotter. She began to convulse; he tossed her to the side.\n\n\"Help... me!\" she pleaded, her eyes now a pale yellow in color, and feline.\n\nGabriel stood back and watched helplessly as the sweet young girl's body transformed. Her skin shed off, leaving new vibrant red skin underneath that looked like the worst sunburn possible. Sharp tiny horns extended outward from her temples. Her fingernails grew into sharp black claws. A long thin tail slithered out from under her skirt.\n\n\"Devilkin,\" Gabriel muttered.\n\nStacy stopped convulsing and lay still on the floor, breathing heavily. She still resembled her former self -- a little. Her hair was still blonde, and managed to stay in those tight pigtails after her violent transformation. Her body was more toned than before, however, with washboard abs and athletic legs. Her breasts seemed to have swelled slightly as well.\n\nGabriel moved slowly and quietly toward a font of holy water near the entrance of the church. If he could get to it in time he...\n\nStacy, now a fully formed she-devil, pounced on top of Gabriel. They struggled, but her super-human strength overpowered him. She pinned him to the floor beneath her body. Her inhuman yellow eyes stared into his. A very long forked tongue parted her lips. She licked the side of Gabriel's neck and cheek.\n\nJust then, the front door of the church flew open with a loud crash! All Gabriel could hear was the clopping of heels against the marble floor. Then, the sweet aroma of perfume filled his nostrils.\n\n\"Your lust has gotten you into quite a predicament, Crusader.\"\n\nAbove him, Gabriel saw a dark haired woman. She stood over him and he could peer right up her black dress, her perfect little peach clearly visible.\n\n\"You! You're the succubus that's been terrorizing this city!\" Gabriel cried.\n\n\"I am indeed,\" Zafira said. She grinned wickedly and walked closer to Stacy. Stacy purred when Zafira ran her hand through the new she-devil's hair. Stacy rubbed her face against her mistress' leg like an affectionate kitten.\n\n\"It's funny what college girls will do for a large sum of money,\" Zafira said. \"Give them a wad of useless paper, and they're willing to pretend to be younger than they really are, to be chained to a wall, to follow a stranger to a church, seduce him out of his prayer beads, and say a few 'magic words'. Although, she was unaware those words were a demon transformation spell.\"",
        "\"Curse you, demon! This girl is innocent!\" Gabriel roared.\n\n\"Hardly,\" Zafira scoffed. \"Do you think she was born with that amazing cock-sucking ability? Please...\"\n\nStacy moved down Gabriel's body, his cock still out in the open. He hadn't time to put himself away. She swallowed his cock in one gulp. Her mouth was hot like a moist massage towel. It did not burn -- but it was certainly close. Gabriel vainly tried to move; Zafira's magic held him in place.\n\n\"What do you plan to do with Cole Harvey?\" he asked. \"It isn't like a succubus to play with her food.\"\n\nZafira smiled wickedly. \"Oh, I have big plans for Cole, don't you worry.\"\n\nShe looked down at Stacy, sucking Gabriel's cock with wanton abandon. Gabriel continued to struggle but it was no use.\n\n\"What's the matter, Crusader? I thought you liked them young. Why, she's barely ten minutes old. Doesn't get much younger than that! And look at how skillfully she pleasures you.\"\n\nThere was no denying his pleasure. The way her hot, long tongue coiled around his cock while her mouth bobbed up and down was unsurpassed. He was simultaneously being sucked and stroked.\n\nZafira swatted Stacy on the head. \"But newborn devilkin lack discipline.\"\n\nStacy released Gabriel's member and cowered against her mistress, perched on all fours. Zafira slipped out of her dress and flexed her wings while her horns extended. Her tail whipped between her legs and wrapped around Stacy's neck like a makeshift leash. Stacy did not resist; she sat completely still.\n\n\"That's a good girl.\"\n\nZafira used her tail to pull Stacy closer to her by the neck. The devilkin's face was drawn directly to Zafira's pussy. Gabriel stared helplessly.\n\nStacy pleasured her mistress with long licks, up and down her demonic nethers, from her tight rosebud to her swollen clit. Zafira moaned loudly as her pet sucked and licked at both holes and between and beyond. Stacy's tongue then penetrated her mistress' pussy, snaking its way deep into her core.\n\nZafira exploded in a supernaturally powerful orgasm. The stained glass windows of the church shattered with her ecstatic climactic cry.\n\nThe alluring demon turned her gaze to Gabriel, now lightly covered in shards of glass. \"I haven't forgotten about you, poor Crusader.\"\n\nGabriel's heart pounded. He knew his fate. It was all his own damn fault. Guilt, remorse, and fear filled his mind.\n\n\"Oh heavenly father, please forgive me!\" Gabriel prayed.\n\n\"Shhh,\" Zafira said. \"No one is going to spare you for what you've done.\"\n\nZafira climbed atop Gabriel's helpless body. His hard cock sank deep inside her. She rose, and slid up and down his shaft rapidly, coating him with her unholy juices. Her pussy was sopping wet from Stacy's tongue. She slammed against his pelvis with unparalleled ferocity. Gabriel's body betrayed him, giving in to the infinitely blissful pleasure her warm, tight, soaked, sex provided. Against his will, he thrust into her, desperately trying to clear his mind of all arousal.\n\nHe failed. It was too much for any man. Gabriel tensed, prepared to send his seed as well as his soul straight to hell.\n\nZafira felt his cock twitch inside her. He was ready. The moment Gabriel began to release his sticky cum into Zafira, she plunged her hand deep into his chest. The pain was completely unnoticeable compared to the pleasure of his final release. She pulled out his bleeding heart and held it in front of his eyes before those eyes shriveled into dust. His soul, as well as his heart, now belonged to her.\n\nShe stood and snapped her fingers in one hand while holding Gabriel's heart in the other. His remains caught fire. Gabriel burned completely to ash while Stacy watched, enthralled by the flames. Zafira ran her hand through her pet's hair while gazing at the heart in her hand that bled down her arm.\n\n\"One down, two to go.\"\n\nWith her new pet crawling in tow, Zafira's heels echoed against the walls of the chapel as she exited.\n\n<center>CHAPTER 4</center>\n\nCole was up early after another sleepless night. He had not heard from Zafira or Gabriel for five days. He still did not know the outcome of their confrontation. This was his first day back on duty with the Chicago PD's Bureau of Detectives after a week of paid leave ordered by his captain.\n\nHe looked like hell. His eyes were bloodshot and he had not shaved for days. \"Quite the specimen,\" he thought.\n\nHe poured himself a cup of hot black coffee in a near-hopeless attempt to kick-start his day. He felt uneasy, then startled, when the windows of his apartment began to vibrate. Was there a helicopter overhead? An earthquake?\n\nHe saw a flash of light from his living room. He rushed inside -- and found Zafira! She stepped through a dark roiling portal and into his apartment wearing her usual attire: leather jacket, little cocktail dress, knee high boots and sheer stockings, all in black.\n\n\"Have you ever heard of knocking?\" Cole asked tiredly.\n\n\"Boy, aren't we grumpy today? If having a case of blue balls is your problem, I've got plenty of ways to fix that,\" she retorted.\n\nCole rolled his eyes and left for the kitchen. He retrieved his coffee and returned to the living room to plop on the couch.\n\n\"Where have you been? I've been wondering for days what happened between you and Gabriel.\"\n\n\"How did you really think that would play out?\"\n\n\"It would have been nice to know sooner.\"\n\n\"Aww,\" Zafira said, pouting her lips as she sat on the couch beside him. \"You were worried about little ol' me. That's so sweet!\"\n\nHe was a little worried. Zafira was the only hope he had left of ever finding who killed Maria. Putting herself in the sights of an experienced demon hunter did not seem like the best idea to him.\n\n\"So did you, uh, get what you needed from him?\" Cole asked.\n\nZafira smiled wickedly. She tossed him a jar, inside was a bloody human heart.\n\n\"Ew!\" Cole shouted. \"What do you want me to do with it?\"\n\n\"Oh, don't be such a baby!\" Zafira teased. \"Put it in your fridge. I'm afraid my new pet might try to eat it.\"\n\n\"New pet?\" Cole asked inquisitively.\n\n\"It's a long story,\" Zafira said, nonchalantly stretching her tempting legs across Cole's lap.\n\nCole gazed at the heart inside the jar. \"What do we need this for anyway?\"\n\n\"We need to perform a ritual in order to find Maria's killer. For this ritual, we needed the heart of a priest. Gabriel needed to be eliminated anyway. That made him a most convenient target.\"\n\nCole sat the jar down on his coffee table, \"What else do we need for this... ritual? Hopefully nothing that requires more dead bodies.\"\n\nZafira laughed. \"Nope, no more dead bodies. Though the remaining items may prove to be tricky to obtain.\"\n\n\"Why is that?\" Cole asked.\n\nZafira unzipped the sides of her boots and kicked them off. They clattered on the floor. \"Before we get into that, there's a matter that needs to be addressed first.\"\n\nCole set down his empty coffee cup and rubbed Zafira's stocking covered feet. \"What issue would that be?\"\n\n\"I'm hungry,\" she said with a devilish smile.\n\n\"Something tells me you're not in the mood for Chinese,\" Cole said sarcastically, continuing to rub her feet.\n\n\"Chinese, Mexican, Bulgarian, whatever. Their nationality doesn't really matter, so long as they have a corrupt soul.\"\n\n\"As I thought,\" Cole said tightly.\n\nZafira looked down at Cole's hands on her feet. \"You certainly have a way with massages.\"\n\nCole looked at his hands and stopped what he was doing. He had not even realized he was massaging her feet.\n\n\"Sorry, I um... I used to....\"\n\n\"Maria?\" she assumed.\n\n\"Yes,\" Cole admitted.\n\n\"I don't mind. In fact, it's kind of nice to have someone do something for me of their own free will.\"\n\nCole resumed massaging her. The silky texture of her feet felt just as good on his hands as his firm touch felt to her. His hands wandered a little further up her legs, rubbing her ankles and calves. Zafira smiled softly and hummed to his magical ministrations. Her sweet intoxicating pheromones, a smell that Cole had come to recognize as a sign of Zafira's arousal, started to fill the air of his apartment.\n\nCole looked into her eyes. \"Something I've been curious about since we've met. You came from Hell, right?\"\n\nZafira nodded. \"That's right.\"\n\n\"What is Hell like?\"\n\nZafira snickered. \"Are you afraid of where you may end up?\"\n\nCole slid his hands further up Zafira's legs, now to her knees. \"No... just curious.\"\n\n\"Hell isn't a place, more like a separate plane of existence. Same with Heaven. Both exist side by side with your familiar mundane world, only separated by an invisible dimensional fabric. The layouts of these worlds are the same, just very different environments and occupants. Hell is chaotic: barren lands, constant wind storms, dark red skies, rivers and oceans of molten lava instead of water. Hell's resident demons all struggle constantly for power. I haven't seen Heaven but I imagine it is the exact opposite.\"\n\n\"Do you ever miss being there?\"\n\n\"Does it sound like a place someone would miss?\" Zafira snorted. \"Of course not! Here, I get to do whatever I want, whenever I want, and with or to whomever I want. So long as I keep a low profile from angels and Crusaders, anyway.\"\n\n\"I assume you didn't have such freedoms in Hell. Who rules over Hell anyway?\"\n\nZafira laughed as if Cole had made a funny joke. \"I suppose you expect me to say Satan or Lucifer. Shows how little humanity knows of the planes! Hell is overseen by seven Aspects, otherwise known as The Seven Sins. Each Aspect is a powerful demon that represents a sin, and they have lesser demons who spread their sin across Hell and sometimes into the Human World.\"\n\nCole's hands reached Zafira's inner thighs under her dress. \"What about Heaven?\"\n\n\"I don't know much about Heaven, obviously. However, I do know Heaven follows a similar structure. They have seven Aspects as well, each representing a virtue.\"\n\nThe pheromones were thick in Cole's nostrils. His cock stiffened dangerously the further his hands slipped under Zafira's dress. He was still in control of his body -- but like that night in Grant Park, it sought to betray him.\n\nZafira saw his hesitation. \"Keep going. You know you want to,\" she said with a seductive purr.\n\nHis fingers crawled further up her dress, finally reaching the end of the road. He thumbed through the small landing strip of hair above her sex. Then lightly, oh so lightly, ran his fingers across her sweet moist nether lips. He wanted her. Desired her. Craved her.\n\nThen a vision of what happens to those who give in to their lust flashed across Cole's mind. They become shriveled lifeless husks, damned for all eternity. He hastily jerked his hands out from under Zafira's dress and put them in his lap.\n\nZafira smirked at Cole as she stood and pulled her boots back on. \"Don't forget about your end of our deal, Cole. I need to feed, and soon.\"\n\nCole nodded. \"I haven't forgotten. I'll return to work today. I can check the archives for someone you might find... palatable.\"\n\nZafira smiled. \"I look forward to you bringing me dinner.\" She gave Cole a hug and a peck on his cheek.\n\nShe gestured to reopen the portal she came through.\n\n\"Oh, one more thing: take this.\"\n\nShe tossed Cole a palm-sized crystal. It was purple in color, and he could feel it vibrate with a small thrum of power.\n\n\"What's this?\"\n\n\"Think of it as a key to my lair. If you are ever in need of my assistance, just hold that crystal above your head with your right hand.\"\n\nHis face twisted. \"Couldn't I, you know, call you? Like a normal person?\"\n\n\"I'm an old fashioned demon, Cole. Your human technology and I don't get along.\"\n\nCole laughed. This abundantly powerful creature, so gifted in the dark arts, was thwarted by the simple intricacies of a cell phone. Oh, the irony.\n\nZafira stepped into the portal. \"Don't keep me waiting, Cole. Bad things happen to those who stand me up.\" She winked at him and the portal closed, leaving him alone in his living room.\n\nCole looked at his watch. Shit! He was going to be late for work!\n\n*****\n\nCole returned to work at the precinct. He first reported to Captain Finnegan's office, knocking on the already open door. The captain looked up from his deskload of paperwork.\n\n\"Ah, Detective Harvey! Glad you're back. Are you trying a new rugged look around the station?\"\n\nIn his haste to be on time, Cole had forgotten to shave.\n\n\"No sir, just running a little late this morning,\" Cole replied.\n\nThe captain gestured with a curt nod. \"Have a seat.\"\n\nCole sat in the chair opposite of Captain Finnegan's desk. \"We need answers, Harvey. Since you were the only witness to what happened that night, I'm putting you in charge of this investigation. This is a high profile case, probably the highest of your career. I've got the mayor breathing down my neck and I need you to get to the bottom of this. Can I count on you?\"\n\n\"Yes Sir!\" Cole replied with enthusiasm. He stifled his inner anxiety.\n\nCaptain Finnegan considered the detective. \"Good. You're dismissed.\"\n\nCole left the captain's office to spend most of the day at his desk, re-reading all the reports on the night club murder and scanning the police archives for a proper candidate for Zafira to... make disappear. Sure, there were plenty of thugs, drug dealers, pimps, and similar scum, but he felt they were not deserving of the death penalty.\n\n\"Cole! I see you're back today. I have something to talk to you about.\"\n\nCole looked away from his computer monitor. Frank stood nearby in an all-too-serious pose.\n\n\"Look, if this is about the other day, I'm sorry. I didn't mean to lose my temper like that.\"\n\n\"No, no. It's not about that at all,\" Frank said. \"I have a lead on Maria's killer!\"\n\nCole practically jumped from his chair. \"What do you got?!\" he shouted.\n\n\"I'll explain at Vince's lab.\"\n\nThey briskly walked to the medical examiner's lab in the precinct's basement. Cole was anxious. Could this finally be the big break he had sought all this time?\n\nFrank and Cole stepped into the pathologist's realm. They found Vince staring at his computer monitor.\n\n\"Okay, Vince,\" Frank said. \"Show Cole what you've found.\"\n\nVince turned around, \"Hey! Glad you're back.\"\n\n\"Spare me the pleasantries and get on with it,\" Cole said impatiently.\n\n\"Right,\" Vince said. He ignored his friend's brusqueness. \"So, as you know, one of the only pieces of evidence we have in Maria's shooting is a partial fingerprint on one of the bullet casings found at the crime scene. Due to it being small and incomplete, we've been unable to identify who the print belongs to.\"\n\n\"That is, until now,\" Frank said with a big smile on his face.\n\nVince turned back to his computer monitor. \"The FBI was kind enough to allow me to try out their new experimental software. Using a database of billions of fingerprints, the software is able to 'guess' what the rest of a partial fingerprint could look like. It was able to compile eighteen possibilities.\"\n\n\"So?\" Cole asked, waiting for the punch line.\n\n\"So,\" Frank said. \"The weapon used in the shooting was a rare 9mm Belgian revolver. We know this because, when this gun is fired, the hammer leaves a unique imprint on the casing. We cross referenced the eighteen possible fingerprints with the number of registered Belgian revolvers on file and found a single match!\"\n\nVince typed into his computer and then turned his monitor toward Cole. \"Meet Markus Santana. The man has quite the rap sheet. Burglary, drug trafficking, and is currently on parole after being convicted of armed robbery. He was released on good behavior just before Maria's murder. We checked the surveillance footage of the robbery and sure enough, the masked armed gunman was holding a 9mm Belgian revolver.\"\n\nCole's blood boiled as he stared at the mugshot of Markus on the monitor. \"So what the fuck are we waiting for?!\" he shouted.\n\n\"With this software being experimental, it wouldn't be admissible in court.\" Vince said.\n\n\"But,\" Frank interjected. \"It does look convincing. Convincing enough for a judge to issue a search warrant. If we find the revolver with his prints on it, we can match them to the casing found at Maria's crime scene.\"\n\n\"How long?\" Cole asked.\n\n\"The warrant should be signed by tomorrow morning,\" Frank said. \"I have a team already assembled and ready to go. Vince here will be with us to handle the evidence.\"\n\nIt all seemed to fit together so neatly. Could this really be right? There was, however, one way to know for sure.\n\n\"Good work, both of you. Thank you,\" Cole said. \"Tell me what you find once the search warrant is a go.\"\n\n\"You'll be the first to know,\" Vince said with a reassuring smile.\n\nCole left the lab, grabbed what he needed, and left the precinct. It was time to take Zafira out to dinner.\n\n*****\n\nCole stood outside Zafira's lair under the dirty highway overpass. He felt a little foolish, but he held the crystal she gave him in his right fist and raised it above his head. The crystal responded with a dim hum and a bright violet glow.\n\nImmediately, a portal appeared from the concrete wall where Cole had entered her lair before. Zafira stepped out, wearing an all-too-familiar dress -- the red cocktail dress she wore when they first met at the night club. The dress left little to the imagination as to what was underneath. She also wore the same stiletto heels that would be the envy of all women onlookers.\n\nZafira sashayed over to Cole, standing beside his car.\n\n\"Get in,\" he said brusquely.\n\n\"Hmmm, I don't see anyone with you. I assume I'm eating out tonight?\"\n\n\"I said, get in!\" Cole ordered.\n\n\"My, my! You're even crankier than this morning. Did you forget who you're talking to?\" Zafira asked, her bright red eyes giving him a cold stare.\n\nCole quickly came to his senses. He was not normally this temperamental. His rage and impatience clouded his judgment.\n\n\"I'm sorry, Zafira,\" he apologized. \"I'll explain on the way.\"\n\n\"Apology accepted,\" Zafira said. She opened the passenger door. \"Besides, the badass vibe doesn't work well for you.\"\n\nThey drove from under the overpass onto the access road. Zafira noticed Cole gripping the steering wheel unusually tightly. He had a fierce, fiery look in his eyes, a look of complete determination.\n\n\"So, uh, where are we going?\" she asked finally.\n\n\"Some colleagues at the station found some new evidence on Maria's murder. We are going to make sure it checks out.\"\n\n\"I thought you were supposed to bring me dinner,\" Zafira sighed.\n\n\"If it does check out, you'll have your damn dinner, don't worry,\" Cole said coldly.\n\nZafira tossed him her signature devilish smile. \"Oh, I like it when you're cold hearted!\" She leaned over and kissed the side of his neck. \"It really turns me on.\"\n\nCole paid no mind to her tongue running up and down his neck and her hand fondling his genitals as he drove. He was focused, and not even a sexy demon like Zafira could deter him from his goal.\n\nIt was not a far drive to his destination. He parked on the roadside next to a shabby set of run-down houses. It was a very poor neighborhood; Cole's police instincts told him to be on his guard here. He looked across the street at a run-down white house. It had expanded metal sheets over the windows to protect against vandals, broken downspouts, chipped paint, an untended yard, and several beat up cars in the driveway.\n\n\"Well this certainly isn't the most romantic place to dine,\" Zafira said. \"But I'm not going to be too picky at this point. What are we doing here again?\"\n\n\"We're looking for a man: Markus Santana. His last known address is that shitty house over there. The cars in the driveway suggest he is inside. When he comes out, I need you to use your mind reading ability to tell me if he killed Maria.\"\n\nZafira looked at him, confused. \"And you suspect the man who killed your wife lives in that shithole? What do you base this on, exactly?\"",
        "\"It's a bunch of techno-babble you wouldn't understand,\" Cole said. \"You and technology don't get along, remember?\"\n\n\"And yet here you are, using my magic for confirmation. Oh, the irony.\" Zafira said with a smug look.\n\nA man opened the front door of the shabby house just then, a very thin dark-skinned man with huge unruly curly hair. He stepped from the porch and walked to a car.\n\n\"That's him!\" Cole said. \"Get everything you can on him.\"\n\n\"I need him to look me in the eyes,\" Zafira proclaimed.\n\nThe man was just about to get in his car when Cole rolled down his window and whistled at Markus. The man turned his gaze towards them, and then showed Cole his middle finger. Zafira's eyes flashed red for an instant and went back to their normal color.\n\n\"Well?\" Cole asked impatiently.\n\nZafira sighed, \"I'm sorry Cole, but it wasn't him. He has never stepped foot in your house.\"\n\n\"What?\" Cole shouted. \"That can't be! His prints are on the fucking bullet casing found at the crime scene!\"\n\n\"Stop your shouting!\" Zafira countered. \"You wanted me to tell you and I did. What reason would I have to lie to you?\"\n\n\"So you can finish this ritual thing you keep vaguely mentioning that I still don't know what the hell it's for.\"\n\n\"It's to find Maria's killer. That is all you need to know. Performing it has absolutely no benefit to me. Now you can either take my word for it or I can leave Chicago. The choice is yours.\"\n\nDamn it all! He thought for sure this was the big break he needed. Perhaps he hoped for closure so much that it, along with his rage, had made him act irrationally.\n\n\"I'm sorry,\" Cole said. \"Thank you for helping me. I just want to put this all behind me, you know?\"\n\n\"I'm aware,\" Zafira said. \"But this ended up being a waste of time for the both of us. His soul isn't even corrupt.\"\n\n\"Wait. Not corrupt? At all?\"\n\n\"Well, his soul isn't pure like yours, but he hasn't done anything bad either. Everything he was charged with has been his brother Antonio's doing. Apparently his brother blames him for the death of their mother who died giving birth to Markus. Now that Antonio is a big shot lawyer, Markus doesn't want to ruin his image. So instead, he takes the fall for everything Antonio does, including the armed robbery that Antonio did just for fun. All because 'family always sticks together' or some nonsense. You humans do the dumbest things sometimes.\"\n\nCole felt like an ass. Moments ago he was ready to hang an innocent man. Now he felt sorry for him. The CPD would be raiding his house tomorrow hoping to find the revolver that matched the bullet casing. If they find it, he would likely go to prison, and whoever killed Maria would walk away scot-free.\n\n\"Did he know anything about a 9mm Belgian revolver?\" Cole asked.\n\n\"It was a gift to Antonio from their father. Markus doesn't have it, so it is likely with Antonio.\"\n\n\"Good,\" Cole said. \"At least the CPD won't be able to pin Maria's murder on him.\"\n\n\"There's more,\" Zafira said. \"Markus knows Antonio is one of many buyers in the sex trade organization you've been tracking. Travis Dunham was also an old acquaintance of his.\"\n\nCole started the car and put it in gear.\n\n\"Now where are we going?\" Zafira asked.\n\n\"We're going to pay Antonio a visit. I hope you're still hungry.\"\n\n*****\n\nThey arrived at Antonio's imposing upscale house on the far side of town. The lawyer lived in a large two-story brick house with a gated parameter and obvious security cameras.\n\n\"Well, Antonio is certainly living comfortably,\" Zafira observed.\n\n\"Yeah, at his brother's expense,\" Cole sourly replied.\n\n\"He either must not like visitors or he has something to hide.\"\n\nCole observed the premises. \"How do we get to him? We don't even know he's inside.\"\n\n\"Leave that to me. You stay here,\" Zafira said.\n\nZafira slid from the car and walked to the gate. She fluffed her hair, adjusted her bust line, and then rang the buzzer while smiling for the camera.\n\nA man's voice emerged from the small intercom a few moments later. \"Who's there?\" the voice said.\n\n\"Hi, my name is... Jenny. I represent the superiors of the late Travis Dunham and I'm here on their behalf. I'm here to discuss new potential business.\"\n\n\"Come inside,\" the voice said.\n\nThe steel gates opened. Zafira gave Cole a wink and a smile, and then proceeded towards Antonio's front door.\n\nCole shook his head in amazement. \"She makes it look so easy,\" he said to himself as the gates closed behind her.\n\nBefore Zafira could knock, a dark skinned man wearing a navy blue robe opened the door. Antonio looked to be fresh from a shower, his hair still wet and combed to one side. His eyes scanned her up and down. He marveled at her perfect body, and hungered. She also gazed upon him with hungry eyes.\n\n\"Please, right this way,\" he said, inviting her inside.\n\nZafira walked in. Antonio closed the door behind her. The interior was very upper-class, complete with an ivory-white grand piano in the living room, and impressive-looking paintings, sculpture, pottery, and other modern art pieces throughout the house. Antonio, it would seem, was quite the art buff.\n\n\"So, what is it you wish to discuss?\" he asked.\n\nZafira turned toward him, invading his personal space. She drew a line with her index finger down his chest through the small gap in his robe. \"First I'd like to discuss where the bedroom is.\"\n\n\"Pleasure before business, I like it!\" he said eagerly. \"Come. It's right upstairs.\"\n\nHe took her hand and led the way up the stairs to the master bedroom. Inside were a large four poster bed, sumptuous bedroom furniture, and an attached master bathroom with a large Jacuzzi tub.\n\n\"Classy,\" Zafira said as she left Antonio's hand and sat on the edge of the bed. She kicked off her stilettos, and then pulled up the skirt of her dress to her waistline. Antonio was instantly aroused by the sight of her alluring trimmed pussy in plain view. She lightly rubbed on her clit with her index finger, enticing him to come touch her.\n\nAnd touch her, he did.\n\nAntonio walked to her and knelt between her legs. The sweet smell of her sex was intoxicating. He touched her swollen clit with his tongue while she manipulated herself. His tongue worked with her fingers to quickly arouse Zafira. Her pussy juices flowed like a steady stream, coating his chin while he lapped at her clit.\n\nShe grabbed the back of his head, tangled her fingers within his hair, and bucked her hips against his face. It was hard for Antonio to breathe, but he was not about to complain. He ingested her sweet nectar like manna straight from Heaven. Zafira whimpered softly while Antonio drank of her dripping sex.\n\nAntonio stood and disrobed. With his cock hard and his balls tight, he pressed his tip at her entrance and plunged deep inside her. Her warm damp pussy clenched around his cock like a vice.\n\n\"My God! You are so tight, baby!\" he praised her.\n\nZafira rolled her eyes. \"Spare me the pillow talk and fuck me!\"\n\nShe commanded, and he obeyed. He pulled her legs onto his shoulders and leaned forward. Antonio thrust into her, faster and faster, with long deep strokes. His pelvis slapped hard against her pussy while she dug her fingernails into his shoulders.\n\nZafira's pleasure built to a crescendo. She screamed, loudly, and again. Her orgasms cascaded into an avalanche of sexual bliss while Antonio fucked her.\n\nWith a quick twist, Zafira rolled over. \"Lay on your back,\" she ordered.\n\nAntonio positioned himself as directed. She hastily mounted him. His long dark cock slid easily between the slick folds of her slit. She lifted her red dress over her head in one swift motion and tossed it to the floor.\n\nAntonio's hands grabbed hold of her silky soft mounds. Her erect nipples grazed his hungry palms. The bed squeaked loudly beneath them as Zafira bounced on his shaft with increasing ferocity.\n\nShe felt him tense, and she was ready to feed -- but suddenly, the bedroom door opened.\n\n\"Well, what do we have here?\" asked a wavering voice.\n\nZafira looked over her shoulder to see a woman with long black hair in a white silk nightgown standing in the doorway holding a glass of wine.\n\n\"Shit! This isn't good,\" Zafira thought. In her haste to consume Antonio's soul, she forgot to check to see if anyone else was in the house.\n\n\"Come on in, honey,\" Antonio invited.\n\nThe woman stumbled a bit towards the bed. It was apparent that she had too much to drink.\n\n\"So, is she the latest purchase?\" she asked.\n\n\"Nope, she's here to discuss future transactions.\"\n\n\"So she's an appetizer then?\" The woman rubbed her hands across Zafira's breasts.\n\n\"Well this certainly is a surprise,\" Zafira thought to herself. \"Maybe I won't have to kill her... yet.\"\n\n\"I'm Jenny, and you are?\" Zafira asked.\n\n\"Clair,\" the woman answered, dropping her nightgown.\n\nZafira looked at this woman's naked body, and wet her lips. Clair's breasts were large, but fake, with tiny brown nipples floating on pale areolas. She showed an enticing hourglass figure, a flat stomach, and a completely bare pussy.\n\n\"Surely you don't think you get to keep her all to yourself.Do you, Anton?\" Clair said with a coquettish smile and wink.\n\n\"I wouldn't think of it,\" he replied.\n\nClair climbed into the bed beside Zafira. Taking Zafira's nipple into her mouth, she suckled her while Antonio resumed thrusting inside her. Zafira ran her fingers through Clair's long thick hair while Clair fed off her breasts. Clair raised her head and planted her lips right on Zafira's. Their tongues tangled together while Zafira touched Clair's bald pussy, already slick from arousal.\n\n\"I have an idea I think we all can enjoy,\" Zafira said slyly.\n\nZafira motioned for Clair to lie on her back. She then spread Clair's legs and crawled between them. Zafira's fingers spread the folds of Clair's nether lips wide and lashed at her wet pussy with her tongue. She made long tender licks that quickly escalated into intense sucking of Clair's throbbing button.\n\n\"My pussy wants to be fucked more, Antonio,\" Zafira said suggestively before she dove back into Clair's sweet sex.\n\nAntonio wasted no time. He positioned himself behind Zafira and inched his hungry cock inside her. Zafira mewled into Clair's pussy as Antonio picked up speed. Antonio's rhythmic thrusts slammed Zafira's face repeatedly into Clair's crotch. The room was a sinful symphony of lewd sex noises, between Clair's moaning, Zafira humming into Clair's pussy, and Antonio slapping Zafira's ass.\n\nZafira slithered her unnatural tongue deep into Clair's vagina. Very deep. Clair let out the scream of a banshee when Zafira's tongue lightly brushed against her cervix. Claire's orgasm wracked her mind and body. Zafira's tongue lapped at her spent pussy, ingesting all of her sweet arousal.\n\nIt seemed the orgasm and alcohol were too much for Clair. She passed out right after she climaxed.\n\n\"Not the first time for that,\" Antonio snickered. \"Fucking lush.\"\n\nZafira turned over. \"I guess we'll have to finish this party by ourselves then.\"\n\nAntonio climbed on top of her again, staring into Zafira's face. Her eyes flashed red briefly, then back to brown.\n\n\"What the...\"\n\nAntonio's speech halted, his face now completely free of expression.\n\n\"Oh. Oh no.\" Zafira said with a sorrowful tone in her voice. \"I had no idea you had that locked away in that pea brain of yours. You son-of-a-bitch!\"\n\nZafira rose from the bed. Antonio remained motionless, and Clair was still passed out cold.\n\n\"How should I handle this?\" Zafira asked herself as she paced around the room. After a few minutes of pondering, Zafira devised her answer.\n\nAntonio's body came to life under Zafira's control. Like an automaton, he walked to a nearby desk drawer. He pulled out a piece of paper and a pen, and started writing. When he finished, he put the paper into an unmarked envelope and handed it to Zafira.\n\n\"That will do nicely. Now then, time to finish this.\"\n\nZafira sat on the edge of the bed. Antonio positioned himself between her thighs. He seized her hips. His cock slipped inside her. He fucked her with mindless bestial abandon. Zafira's horns and wings extended outward, preparing for his soul to be released inside her. He groaned and twitched and shot his cum deep inside Zafira's demonic pussy. His body shriveled instantly and collapsed to the floor.\n\nZafira sat up and peered at the desiccated husk formerly known as Antonio Santana. \"You deserved much worse.\"\n\nSatisfied, Zafira regained her composure and got dressed. She leaned over Clair's unconscious body. \"You're in for quite a shock tomorrow. I don't know who will find your shriveled up husband first, you or the police. Either way, you're taking the fall for the night club murder. I can't thank you enough, Clair. It is, however, a fitting end for someone who enslaves young women for her own sexual pleasure.\"\n\nZafira dressed then collected the envelope and walked downstairs. She strolled into a small office filled with files and literature, all neatly organized. At the room's center was a large desk where Antonio spent most of his time. She opened the bottom drawer of the desk and extracted a small black lockbox. With a snap of her fingers, the box popped open. The 9mm Belgian revolver and its forged registration papers in Antonio's brother's name were inside.\n\n\"That should be easy enough for them to find,\" Zafira said to herself.\n\nShe left the opened lockbox on the desk and walked out the front door to Cole's car.\n\n\"What took so long?\" Cole asked.\n\n\"I had an unexpected run-in with Antonio's wife,\" Zafira replied as she got in passenger side.\n\n\"Oh? Is she...\"\n\n\"She's alive, but come tomorrow she will wish she wasn't.\"\n\n\"Why?\" Cole asked.\n\n\"I'll explain on the way back to Markus' house. I've got a special delivery for him.\"\n\n*****\n\nIt was late at night when Cole and Zafira arrived back at Markus Santana's slum house.\n\n\"Wait here,\" Zafira said.\n\nShe left Cole's car and carefully stepped over the front yard litter. She climbed the sagging porch and knocked on Markus' door. He cracked open the door slowly, then opened it fully.\n\n\"Who are you and what do you want?\" he asked brazenly.\n\n\"Here,\" Zafira said, handing him the unmarked envelope.\n\nMarkus opened the envelope and read the letter. \"What the hell is this? There's no way my brother would write something like this! He would never confess to everything he has done.\"\n\n\"You don't have to believe it,\" Zafira said. \"But the police who search your house tomorrow morning need to believe it. They will come looking for a 9mm Belgian revolver, which you will tell them is in your brother's possession.\"\n\n\"And why would I do that, lady?\" Markus asked.\n\n\"Because your brother is dead. There's no reason for you to protect him anymore. You can finally get on with your own life without being your brother's scapegoat. This is a fresh start for you, Markus. Don't blow it.\"\n\nMarkus stood there dumbfounded. Zafira turned her back to him and stepped off the porch.\n\nHe stopped her. \"Wait! Are you an angel?\" he asked.\n\nZafira turned and giggled, \"I'm far from an angel.\"\n\nA tear ran down Markus' face. \"Thank you, whoever you are.\"\n\nZafira got back into Cole's car. Cole started the engine and drove off. An uneasy silence haunted their drive back to Zafira's lair. Cole parked under the overpass that Zafira called home.\n\n\"That was quite a noble thing you did,\" Cole said. \"Not quite the behavior I'd expect from a demon.\"\n\n\"I did it for my own benefit. Don't get things twisted.\"\n\nCole snickered, \"Well, everything turned out alright, even though we didn't find who killed Maria.\"\n\n\"Yeah, I suppose. Tomorrow I'll be free and clear of the night club murder. That should at least get your boss off your neck.\"\n\n\"Yeah, one less thing to worry about,\" Cole admitted.\n\nZafira turned to Cole. \"They will probably try to pin Maria's murder on Antonio though, you realize this, right?\"\n\nCole nodded his head. \"It doesn't matter. We know the truth, and once you perform this ritual, we'll know for sure who killed my wife.\"\n\nZafira paused for a moment. \"Are you sure that's what you want?\" she asked.\n\n\"Yes, I'm sure, more than anything,\" he replied. \"I can't rely on old fashioned police work for this. I have to knowexactly what happened that night.\"\n\nZafira sat in silent contemplation for a moment. \"We'll make plans for the two remaining items we need tomorrow. Meet me here when you get off work.\"\n\n\"Okay,\" he agreed.\n\nZafira opened the passenger door, stepped out, then closed it. She watched as Cole put the car in reverse, easing back into the access road. He waved at her as he drove into the night.\n\nZafira stood there, reflecting on all that had transpired today.\n\n\"I hope you have the strength to live with the answers you seek, Cole Harvey.\"\n\nA small tear escaped the corner of Zafira's eye.\n\n\"Some knowledge isn't worth the pain.\"\n\n<center>CHAPTER 5</center>\n\nThe next day, Cole occupied his desk and waited for the inevitable circus to commence. Several hours had elapsed since Frank led his team to search Markus Santana's house. They would not find what they were looking for there, but they were certainly in for a few surprises if everything went to plan.\n\nPenny, the cute young front desk receptionist, approached Cole. \"Hello, Detective Harvey! I brought you some fresh coffee.\"\n\nCole looked up to see the blonde bob cut-girl in tasteful gray suit-pants, suit jacket, and white button-up shirt. She had the look of a successful, confident lawyer, not a receptionist. Cole accepted her offering, hooking the warm styrofoam cup from her hand.\n\n\"Thanks! What brings you up here?\" Cole asked.\n\n\"Well, I heard about the search this morning and thought maybe you could use a little something to perk you up. I know it must be very stressful,\" Penny said, smiling innocently at him.\n\n\"Thanks. I really appreciate it. I hope they find what they need so I can have closure. This whole thing has haunted me for far too long.\"\n\n\"They will, I just know it! The good guys always win, right?\" Penny said reassuringly.\n\nCole shook his head, \"Not always, Penny.\"\n\nJust then Frank barged through the door with a dark haired woman in handcuffs, her eyeliner smeared with tears. Vince hound-dogged the pair, stopping at the Cole's desk while Frank took the woman to an interrogation room. Cole glanced up as Frank led the woman past his desk.\n\n\"Is that the woman? The one from the nightclub?\" Vince asked.\n\nEverything was going exactly like Zafira had planned. All Cole had to do was play his part.\n\n\"Yeah, that's her!\" Cole said, lying through his teeth. \"How did you find her? I thought you were after Markus?\"\n\n\"Interesting story,\" the pathologist said. \"When we got there, we searched the place but couldn't find the revolver. What we did find was a full confession supposedly written by his brother, Antonio. I still have to check the prints on the letter as well as cross-reference the handwriting to be sure.\"\n\nVince sat on the edge of Cole's desk. \"Anyway, Markus said his brother should have the gun. We got the go-ahead from the judge to search his house. We found the gun there, but we also found another dead body like the one you found at the night club. Completely dried out, except for his penis. We found that woman, Antonio's wife, lying on the bed next to the corpse, passed out from too much alcohol. I think the victim is Antonio, but I'll need to perform an autopsy first before I can confirm that.\"\n\n\"Interesting is an understatement,\" Cole said. \"That's a strange change of events. Think there is any connection between him and Maria's murder?\"\n\n\"Hard to say at this point,\" Vince said. \"But we now have more to go on than ever before. Though it still remains a mystery how she killed the victims. Hopefully when I examine this new body I'll find some new clues.\"",
        "\"It's going to be an open-and-shut case!\" Frank said, returning from the interrogation room. He turned his gaze to Penny. \"Well, hello there, beautiful.\"\n\nPenny scoffed, rolling her eyes.\n\nFrank stepped in closer to her. \"You know, me and some of the guys are going to hit up the bar later tonight to celebrate. You should come join us.\"\n\n\"I'd rather not,\" she replied bluntly. \"I'll see ya around, Detective Harvey.\"\n\n\"Thanks again for the coffee,\" Cole said as Penny walked away towards the elevator.\n\n\"It was my pleasure,\" she said, smiling over her shoulder.\n\n\"Would you look at the ass on her,\" Frank said after Penny disappeared behind the elevator doors.\n\n\"Are you always a douchebag like that?\" Cole asked. \"It's a wonder how you get as many women as you claim.\"\n\n\"Don't hate the player, Cole, hate the game,\" Frank said arrogantly. \"Besides, she's a virgin, not really my type.\"\n\n\"And how do you know this?\" Vince asked.\n\nFrank stood with a smug look on his face. \"If you two were in the game for as long as I have, you would know these things. First of all, no woman who looks that good dresses so conservatively for a receptionist unless she is a virgin. Secondly, the only person she gives the time of day to, is Cole. An attractive single woman who wasn't a virgin would be flirting with everyone.\"\n\nFrank turned to Cole. \"Speaking of, she has the biggest crush on you. You should ask her out. Maybe it's finally time for you to move on with your life? It could take your mind off things if nothing else.\"\n\nYeah, right. Like anything could take his mind off the fact that Maria's killer was still out there, or off the demon succubus who invades his every thought. The less people in his life right now, the better.\n\n\"Nah,\" Cole said. \"I'm not ready to date again just yet.\"\n\n\"It's your call,\" Frank said. \"Personally, I think it's an offense to the 'man code' to pass up such prime pussy.\"\n\nFrank walked towards his desk and then turned back around. \"Oh, I almost forgot. Due to the nature of this suspect having possible connections to Maria's murder, Captain Finnegan has turned the night club murder case over to me. I'll need you to sign an affidavit stating she was the one who you saw that night. You understand, right?\"\n\nNormally Cole would have a huge problem with someone else taking over one of his cases, especially if that someone was Frank. On the other hand, this should keep the CPD chasing their tail while he and Zafira found the real killer.\n\n\"I totally get it, Frank. It's all yours,\" Cole said.\n\nFrank cracked his smug smile once more, then returned to his desk.\n\n\"Well, I have a shitload of work piled up so I better get to it,\" Vince said. \"Before I go, listen -- I was planning on hitting up a strip club this weekend. Do you want to come along? It'll be like our old college days.\"\n\n\"I don't know if I'll be up for it, Vince,\" Cole replied.\n\n\"Oh come on!\" Vince pleaded. \"You've got to start living a little. Seeing some tits would do you some good.\"\n\nHe has already seen some tits recently -- Zafira's perfect pair. But yeah, he did need to liven up some, he admitted to himself.\n\n\"I'll... think about it,\" Cole answered.\n\n\"I'll take that as a yes, then,\" Vince said as he left for his lab.\n\nEverything turned out as planned; even got a free coffee out of the deal. He looked at his watch -- end of his shift already. He grabbed his trench coat and headed for the main exit. He passed Penny at the front desk. \"Detective Harvey!\" she waved for him to come over. He walked to her, curious.\n\n\"I didn't want to ask earlier because of all the guys around,\" Penny said bashfully. \"But I have no plans for tomorrow night and was wondering if you'd like to go see a movie with me.\"\n\nCole was caught completely off guard and unsure of how to respond. He had not been on a date since before Maria's death. Plus there was the not-so-little matter of Zafira.\n\n\"Well, I may have plans then, so...\"\n\n\"It's okay, Detective Harvey,\" Penny said as she scribbled on a piece of paper. \"Here's my number. Just give me a call if you're ever free or just want someone to talk to, okay?\"\n\nCole took her note and smiled. \"Thanks. I'll do that.\"\n\nShe smiled back as he left for his car. He did not have time to chat with her more -- he already had a date with a super-sexy succubus.\n\n*****\n\nCole opened the portal to Zafira's lair using the crystal she gave him. This time he knew not to jump forward; he still had a bruise from his fall the last time.\n\nWhen Cole stepped through the portal, Stacy, the she-devil, pounced on him, knocking him down to the floor.\n\n\"What the fuck is this thing?!\" he shouted, struggling to no avail to get her off him.\n\n\"Stacy! No!\" Zafira shouted from across the room.\n\nStacy whined, crawling off Cole. So much for avoiding more bruises. Zafira stood above him, completely naked in her all-natural demonic form. She offered him a hand and pulled him off the floor.\n\nCole brushed himself off. \"I assume that's your new pet?\"\n\n\"Yes, she's my pet devilkin -- Stacy.\"\n\nCole looked at Stacy, now perched on the back of Zafira's couch like a cheetah. She too, was completely naked. Cole felt a slight twitch in his groin after looking at her athletic, bright red body.\n\n\"Go ahead and pet her; she doesn't bite,\" Zafira said.\n\nCole walked over to the couch and lightly put his hand on Stacy's head. He ran his fingers through her blonde fringe cut hair and pigtails. She smiled, then licked Cole's arm with her unnaturally long forked tongue.\n\n\"I think she likes you,\" Zafira giggled.\n\n\"Where did she come from?\" Cole asked.\n\n\"She transformed herself into a devilkin after stealing Gabriel's prayer beads. Honestly, I don't think I could have gotten his heart without her.\"\n\n\"She was human?\" he shouted apprehensively.\n\nZafira sat on the couch and stretched. \"That's right -- and spare me your goodie two-shoes routine.\" \"That reminds me, something I've been meaning to ask you -- where do demons come from, exactly? I know you're from Hell, but...\"\n\n\"Give Stacy one of your patented massages and I'll tell you,\" Zafira interrupted.\n\n\"Why?\"\n\n\"Come. Sit next to me, you'll see.\" Zafira replied.\n\nCole stopped petting Stacy and walked around to the front of the couch. He was unsure of what she was up to. Better stay on my toes, he thought.\n\nHe sat down beside the naked demoness. She stretched her wings out and wrapped her left wing around his back. She whistled at Stacy, who crawled across both their laps, laying face down perfectly still.\n\nCole's hands started rubbing the back of Stacy's legs. Her bright crimson skin was very warm to the touch. It was such an odd sensation. Stacy purred, her head now directly in Zafira's open lap.\n\n\"Unlike humans,\" Zafira started. \"Demons as well as angels, are created, not born. They are either created by magic or the natural transformation of a soul when a mortal dies. Most souls do not transform however. Only the purest or most depraved souls evolve. Pure souls becoming angels and corrupt souls becoming demons.\"\n\n\"So then, what happens to the souls that don't evolve?\" Cole asked, moving his hands across Stacy's lower back.\n\n\"Souls in the middle ground, like Markus for example, will slowly disintegrate. All those humans who have had a one night stand, stolen a few things, or lived like a slob but at the same time did something courageous, gave another person hope, or are generally kind to others will have their energy absorbed by the planet when they die. The wind, tides, natural disasters, the constant rotation of the Earth, are just a few examples soul energy. It is this constant balance of life, death, and rebirth that keeps the universe going.\"\n\nCole dug his palms against Stacy's shoulders. Her tail wagged contently as she whimpered between Zafira's thighs.\n\n\"What happens to the souls you consume?\" Cole asked.\n\nZafira paused, running her hand through her pet's hair. \"Their energy is consumed by my body until there is no energy left. Then, they simply cease to exist.\"\n\nCole pondered Zafira's words, wondering where Maria's soul is now. She certainly would not turn into a demon. She had to be an angel now, he thought. What if he...\n\n\"When a soul evolves, do they have any memory of who they were?\"\n\nZafira sighed. \"No. The Maria you knew is gone, no matter how you look at it.\"\n\n\"Do you ever stop reading my mind?\" he asked, annoyed.\n\n\"Do you ever pay attention to what you're massaging?\" she retorted.\n\nCole looked down. Each hand was gripping one of Stacy's ass cheeks.\n\n\"Don't stop,\" Zafira pleaded before his hands could run away. \"Devilkin thrive on being touched. The more you touch them, the more aroused they become.\"\n\nCole did as she requested. His hands massaged Stacy's hot soft bottom. He felt a molten hot substance upon his leg. It somewhat burned, but was bearable at least. Then it dawned on him; the hot liquid was coming from Stacy's aroused pussy.\n\nZafira's pheromones filled the room, a sweet smell that clouded Cole's brain with thoughts of lust. He looked over to see Stacy's long tongue lapping at her mistresses' pussy. Cole kept at it, knowing what it was doing for both of them. His ears were flooded with the sounds of two demons moaning pleasurably.\n\n\"Mmm! Touch her pussy, Cole!\" Zafira pleaded.\n\nHe did as she asked. His left hand reached around Stacy's plump red ass and found Stacy's molten wetness. Her nectar was super-hot and plentiful.\n\n\"Put your fingers inside her.\"\n\n\"But, wouldn't that constitute lust?\" Cole hesitantly asked.\n\nZafira growled, \"Touching isn't lust! If it were, every human doctor would be a sinner. Now do it!\"\n\nCole slid two fingers inside Stacy. The heat was almost too much to bear. Her insides were hot, oily, and dripping. Stacy's hips bucked, her soft purrs turned into a loud whimpering.\n\n\"How does it feel?\" Zafira asked, lavishing in her sexual pleasure.\n\n\"Hot,\" he responded. \"Hot and oily, like...\"\n\n\"...massage oil,\" his perverted brain thought. He wiggled his fingers inside Stacy's hot pussy, coating his fingers. When he pulled his fingers out of her, her pussy juice dripped off them like thick oil. Cole allowed a few drops to fall onto Stacy's back then plunged his fingers deep inside her again. He dribbled more of her nectar onto her back until there were small puddles all up her spine.\n\nCole took his other hand and massaged the molten hot oil from her pussy into her skin. Stacy was overwhelmed with the sensation, her orgasms made more hot cum for Cole to rub on her, and he took full advantage. He played Stacy's body like an musical instrument, and each note had positive effects on Zafira. The more Cole massaged Stacy, the further and faster her lengthy tongue darted inside of Zafira's hungry sex. He was making two sexy demons cum over and over again using only his hands. It felt eerily empowering.\n\nStacy's back was completely covered in her own slick essence. Cole used both hands to massage her muscular shoulders, which made Stacy eat Zafira's pussy with a primal need. Zafira's eyes rolled back into her head and let out a deafening demonic cry that made the walls shake.\n\nCole was not entirely left out of the pleasure. The more the sexy demons cried in pleasure, the harder his cock became within the confines of his trousers. He would free it and stroke himself with Stacy's slick oil if he could, but her body in his lap prevented him from doing so. No matter, he was close to cumming without touching it. All he needed was a little something extra.\n\nHis oily right hand fled Stacy's back and attached to Zafira's breasts. She gasped with the sudden touch, bringing herself out of her orgasmic trance. She gazed into his eyes while he firmly massaged her large soft tits.\n\nZafira smiled wickedly at Cole as she panted. She knew he loved it and relished in his denial of release the whole time. Because of the immense pleasure he brought her, she decided to be merciful.\n\nZafira quickly pried Cole's hand from her breast and stuck his index and middle fingers into her mouth. She sucked them clean of all of Stacy's nectar. Zafira's warm mouth and skillful sucking was all it took for Cole to cum right there in his pants. He roared as it felt like a geyser of cum had spurted out with nowhere to go. He felt his own cum oozing down his shaft and tickling his balls.\n\nThe three of them sat there motionless, breathing heavily. After several minutes of dead silence, Stacy sat up and gave Cole a small peck on the lips then slunk down to the floor. Cole licked his lips, which had a hint of Zafira's pussy on them. It tasted sweet, just like the smell of her pheromones.\n\nZafira giggled, \"Told you she likes you.\"\n\n\"Yeah, I guess so,\" he smiled, still coming down from his epic orgasm.\n\n\"Seems you like her too,\" Zafira said, staring at the wet spot in Cole's crotch.\n\n\"I do, but I also liked making you cum, even if she was the one pleasuring you.\"\n\nFor the first time, Cole saw the succubus blush. There was a small awkward silence.\n\n\"So, um, back to the reason I'm here,\" Cole said changing the subject. \"What's the next thing we need for the ritual?\"\n\n\"Oh, right.\" Zafira said, regaining some composure. \"We need virgin's essence.\"\n\n\"Virgin's essence? What is that exactly?\"\n\n\"See that oil that came from Stacy? That; only from a virgin.\"\n\n\"So a virgin female's... cum.\"\n\n\"Yep. Time for you to put on your best suit, Cole, and find yourself a date.\"\n\n\"Me? Why me? You could do this easily,\" he inquired.\n\n\"My magic only works on males. I'm pretty sure you'd have a better chance than I would, given I know next to nothing about human relationships. Besides, she has to give it to you willingly. All that lovey-dovey stuff about how a virgin gives you a piece of their heart and soul when they have sex with you the first time - it's all true. Well, the soul part anyway. A very small amount of their soul energy is secreted the first time they have sex. This is what gives virgin's essence magical properties.\"\n\n\"Wait; how am I supposed to get the essence? I can't fuck a virgin without corrupting my soul.\"\n\n\"You could marry a virgin,\" she snickered.\n\n\"Are you fucking kidding me?!\" Cole protested.\n\nZafira laughed, \"I am kidding. I do have something that will help.\"\n\nZafira got off the couch and walked to a nearby cabinet. Inside were all manner of glass vials and beakers containing various colored liquids. She grabbed two empty vials and a tiny bottle full of an unknown black substance.\n\n\"Take these,\" Zafira said. \"The two empty vials are enchanted to draw the virgin's essence directly inside once you pop the top off. Get her aroused, pop the top, and the vial will do the rest.\"\n\n\"What about this stuff?\" Cole asked, holding up the black bottle.\n\n\"That is a highly concentrated incubus pheromone. Put a drop of that on your skin and you will have any woman instantly attracted to you, to the point they won't be able to resist your charms. Getting a virgin aroused will be easy with that.\"\n\nCole takes the top off and gave it a quick sniff before pulling his head away in disgust.\n\n\"Jesus! This stuff is putrid!\" Cole said, who quickly put the cap back on.\n\n\"You wouldn't be saying that if you were female. One word of caution, though: only use a single drop. Use too much and it will attract every woman within a mile radius. Considering the size of Chicago, your body would probably be torn apart by hundreds of sex craved women.\"\n\nCole slid the items into his coat pocket. Now all he needed was to find a virgin. Hope Frank was right about Penny.\n\n*****\n\nCole had taken up Penny on her invitation to see a movie. It was the first time he had been on a date since before Maria's death and it felt extremely awkward at times.\n\nNonetheless, Penny seemed to fully believe his feigned enthusiasm for their date. He felt like a douchebag, pretending to be interested in a woman he cared nothing for; and like a douchebag, he was trying to get her in the sack -- although without actually having sex with her. He still had no idea how he was going to pull this off.\n\nThe movie was a romantic comedy; Cole paid scant attention. During their time in the cinema he thought about how his time could be better spent doing other things. Even though he was doing this to find Maria's killer, it sure did not feel like it. He would much rather be going through his case files for the billionth time or giving Zafira another sensual massage.\n\nHis mind did drift a few times towards that sexy succubus that forced her way into his life. Her perfect body, how her silky smooth skin felt, and those powerful orgasms were often at the front of his mind. If he were any other guy, he would be focused more on Penny's body, which was impressive in its own right.\n\nJust not as impressive as Zafira.\n\nAfter the movie, Cole drove Penny home to her apartment. He parked the car at the entrance, \"Well, I had a great time,Detective Harvey. We should do it again some time,\" Penny said, smiling cutely.\n\n\"Please, I told you to stop with the 'Detective Harvey' stuff. Just call me Cole.\"\n\n\"Well then, Cole, thank you for a wonderful evening.\"\n\nPenny leaned in, giving Cole a small peck on the cheek. She opened the passenger door when Cole grabbed her hand, stopping her.\n\n\"I haven't had a wonderful night like this in a long time. I'd hate for it to end.\"\n\n\"Well, the night is still young,\" Penny said. \"I can show you around my apartment if you want.\"\n\n\"I would like that,\" Cole smiled.\n\nCole parked his car into an empty space and then followed her up to her apartment. It was a cozy place, though it seemed a little bare. She had few furnishings. Only a couch and coffee table sat in her living room, with a small TV perched atop of an end table. Her minimal kitchen had a stove that looked barely used. A compact refrigerator and spotless microwave hunched on the counter. A dining room table was noticeably absent.\n\n\"Nice place,\" Cole said, as he sat down on the couch. \"Did you just move in?\"\n\nPenny sat next to Cole and shook her head. \"No; been living here for over a year now. I've been saving money for college and haven't been able to buy much. I tend to not live beyond my means.\"\n\n\"It's good you have your priorities in order.\"\n\nPenny laughed. \"A rare quality I know. But having your priorities in order doesn't leave much time for dating.\"\n\n\"I'm surprised you asked me then,\" Cole said.\n\n\"You seemed like a nice guy and I always liked older men better. Guys my age don't act very mature.\"\n\n\"Age has nothing to do with maturity. Hell, look at Frank.\"\n\nPenny scoffed. \"You have a point. Look up douchebag in a dictionary and you'll find his picture.\"\n\n\"I wouldn't doubt it,\" Cole laughed. \"Just yesterday he was telling me about his oh-so-skillful ways of spotting virgins. He claims you're a virgin because you dress so conservatively.\"\n\n\"So because I don't dress like a slut for his entertainment that makes me a virgin?\" Penny asked disapprovingly.\n\n\"According to the great Frank Wallace; yes, it does.\" Cole said sarcastically.\n\n\"He's such a pig!\" she scoffed again. \"I hate to admit though, that he's right.\"\n\n\"You mean, you really are a virgin?\" Cole asked.\n\n\"Yes, and I'm not ashamed of it. I just haven't found the right guy yet. I always said that I would save myself for marriage and with college and work I've had no trouble keeping to my word. This doesn't bother you, does it?\"\n\n\"Not at all,\" Cole replied. \"I'm surprised is all. It's a rare quality these days.\"\n\nCole got his confirmation. Now all he had to do was to get her to somehow change her mind. Her priorities and headstrong demeanor could be problematic.\n\n\"May I use your bathroom?\" Cole asked.\n\n\"Sure. It's down the hall and to the left.\"\n\nCole got up from the couch and walked into the small tidy bathroom. He looked into the mirror, slightly disgusted with what he was planning to do. Penny was a good person, and to deflower her with the use of magic seemed wrong on so many levels. He too had priorities, however, and at the top of the list was finding Maria's killer. At any cost.",
        "He pulled the bottle of black liquid out of his pocket, turning his head as he unscrewed the lid. The smell was without a doubt the worst stench Cole had ever smelled in his life. He tilted the bottle down towards his skin; its vile contents quickly spilled onto Cole's wrist. Shit! Zafira clearly said no more than a drop, and this was definitely more than a single drop. It was more like ten drops! He rushed to the sink to wash it off, but the black liquid stuck to his skin like a thick tar. Fuck! Now what was he going to do?\n\nCole slowly crept into Penny's living room, unsure of the effect the incubus pheromone would have on her. She turned to him the moment he was in her line of sight.\n\n\"My God! What is that smell?\" she asked.\n\n\"Oh, um. I don't smell anything,\" he hesitantly replied.\n\n\"It smells... delicious!\" she said.\n\n\"Whew!\" he thought. At least she did not think he smelled like raw sewage.\n\nShe got off the couch and walked over to him. \"I feel... strange,\" she said.\n\n\"Strange how?\" he asked.\n\n\"My body... it... tingles.\"\n\nCole became concerned. \"Should I call an ambulance?\"\n\n\"No,\" she whimpered. \"I'm fine. I'm just...\"\n\n\"Just?\"\n\nPenny lunged at Cole, wrapping her arms around his neck and pulling his lips to hers. She kissed him with an intensity he had never experienced before.\n\n\"Extremely horny,\" she replied finally, after breaking their kiss.\n\nShe lunged at Cole again, kissing him with an urgent need. She pushed him slowly backwards towards her bedroom. Cole's legs went out from under him as they reached her bed. Penny fell directly on top of him, never stopping her barrage of kisses.\n\nHer kisses were enjoyable. Dangerously so. He needed her essence, but not at the expense of his soul. The incubus pheromone had taken complete control of Penny's mind. There was no stopping her. Cole had to get out of there, and fast!\n\n\"Penny!\" Cole shouted as he gasped for air. \"This is great and all, but I have to get going.\"\n\n\"You can't go!\" she proclaimed. \"I need you! Inside me!\"\n\nPenny resumed her kissing while attempting to undo Cole's trousers. He struggled against her, tossing her to the side.\n\n\"I'm sorry Penny!\" he said as he stood. He walked out of the bedroom towards the front door when Penny tackled him from behind. He struggled to get her off of him when suddenly he felt a heavy blunt object hit the back of his head. Everything went dark.\n\n*****\n\nCole opened his eyes, staring at the ceiling. His vision was blurred and his head hurt like hell. He tried moving his arms, but they would not budge. Cole soon discovered when he turned his head that his arms were tied to a bed with rolled up bed sheets. His legs would not move either. Cole looked down towards his feet. Indeed, his ankles were tied in the same fashion as his arms. He also noticed he had been stripped of all his clothes.\n\nAs his vision began to focus, he noticed something between his legs. The blurred figure came into focus. It was Penny, and she had been sucking on his cock while he had been unconscious.\n\n\"Penny! Stop!\" Cole pleaded.\n\nPenny rose her head, \"I can't stop! My body... it aches for you to be inside me. I need you to make me cum! To make the tingling stop!\"\n\nShe resumed sucking on Cole's stiff cock. He tried desperately to free himself, but it was no use. His arms and legs were tied too tight. Cole's galloping heart pumped adrenaline through every inch of his body.\n\n\"Penny! You have to stop! I'll die if you keep going! I will literally die!\"\n\nPenny stopped, but only momentarily. She shed herself of all clothes, exposing her young supple body to Cole. He tried to put his arousal out of his mind. But with her perky breasts, flat stomach and dripping virgin pussy, it was impossible for his dick to go limp.\n\nPenny climbed on top of Cole and perched her eager pussy above Cole's rock hard cock. If she proceeded, Cole's soul would be corrupted, and Zafira would no doubt claim it, ending his life.\n\n\"Penny! No!\" Cole desperately pleaded.\n\n\"I'm sorry, Cole, I have to!\"\n\nIt was over. Penny squatted down the length of his shaft all the way. Her warm tight virgin pussy gripped his cock like a clenched fist. He was now inside her, no turning back.\n\nCole watched helplessly as Penny rapidly impaled herself onto Cole's cock. She fucked him with the speed of an experienced porn star. Penny moaned blissfully as her insides stretched around his girth. She had no idea sex was this good, and the incubus pheromone amplified the sensation. Penny orgasmed multiple times in rapid succession and just kept going. At this rate, she would soon die of cardiac arrest.\n\nCole was at her mercy. Her pussy felt good, damngood! But, all things considered, the prospect of being fucked to death was bittersweet. He tried to hold back his own orgasm, but not even a man with the worst case of erectile dysfunction could keep from cumming inside her. He unloaded what felt like buckets of cum deep inside her innocent virgin pussy.\n\nPenny just kept fucking. The extra lubrication from Cole's cum added to Penny's pleasure which only made it that much easier to keep going. Still against his will, Cole's cock remained hard through it all. Completely powerless, the only thing Cole could do was endure her sexual assault.\n\nPenny's body showed fatigue after what seemed like an eternity. Sweat soaked her slender body, from her head to forever. Her breathing was so heavy and ragged -- Cole knew she would surely perish if she continued. Luckily, Penny fainted and fell on the bed beside Cole.\n\nHe could feel her still breathing -- that much was a relief. On the other hand, he was still completely tied up. Cole tried once more to free himself, but failed. \"Fuck! Now what am I supposed to do?\" he thought.\n\nHis question was answered for him. \"That was quite a show!\" a familiar voice said from the other side of the room.\n\nCole turned his head to the side. In a chair in the far corner was none other than the sexy demoness Zafira. She wore not a single article of clothing, and her horns, wings and tail were out for Cole to see.\n\n\"Were you there the whole time?\" Cole shouted.\n\n\"I showed up in time to catch the good parts.\" Apparently Zafira really did enjoy watching, evident by her moist pussy that dripped down to the chair.\n\n\"I don't believe this! Could you please untie me?\"\n\nZafira walked over to Cole's helpless body. She glanced at his erection, still covered in Penny's sweet magical nectar.\n\nLicking her lips, \"A cock covered in a pure soul's cumand virgin's essence? That's too tasty to pass up!\"\n\nCole's eyes widened as Zafira crawled between his legs. His body and mind trembled with fear. Despite his best efforts to keep his soul pure he had failed. Now, she was here to claim her prize and there was nothing he could do to stop it.\n\nZafira paused. \"Why are you so frightened?\"\n\n\"Please don't take my soul! At least not until we find Maria's killer. Then do as you please.\"\n\nZafira looked puzzled. Her eyes flashed red; she opened her mouth.\n\n\"No!\"\n\nZafira slid her mouth all the way down Cole's cock, savoring the luxurious taste. She moaned and hummed as she sucked him clean, ingesting every sweet dollop.\n\nCole felt his end at hand, but that did not stop him from enjoying the sensation of her mouth on his cock. Nothing in his sex life had ever compared to this. She was perfect in every sense of the word.\n\nIt was not worth his life, though. Cole struggled with all his might, to no avail. His restraints held him in place while Zafira continued to suck his painfully erect cock. The more he struggled, the harder and faster she sucked.\n\nUnable to resist the exquisite pleasure, Cole's balls were about to release their contents once more. Cole knew this time, however, it would be his last.\n\n\"Stop! Please!\" he begged.\n\nZafira ignored his plea. She even inserted her slender index finger into his tight rectum and pressed against his prostate, making him involuntarily thrust upward. The twisting of her finger as she darted in and out of him sent him over the edge. With two fingers rolling inside him, Cole closed his eyes, accepting his doom while shooting the biggest load of cum into Zafira's hungry mouth.\n\nZafira stopped and stood at the side of the bed, licking her lips. \"Mmm! So delicious!\" She looked down, \"How many times do I have to tell you? I only take corrupt souls.\"\n\nCole opened his eyes. He was confused. He was still alive? How was his soul not corrupt? He just had sex with Pennyand was sucked off by Zafira.\n\n\"How the hell-\"\n\n\"Rape isn't lust, silly boy.\" Zafira said, shaking her head.\n\nIt all suddenly made sense. Cole never consented to any of this. In his mind, his life was on the line. He was probably the first person in history to breathe a sigh of relief with the knowledge he had been raped.\n\n\"So, could you please untie me now?\"\n\nZafira twirled her index finger in the air. The wadded up bed sheets that held Cole to the bed unraveled themselves, freeing him.\n\n\"Now, shouldn't you get what you came for before the rapist wakes up, or did you forget about that?\" Zafira asked impatiently.\n\nHe had forgotten. Thinking you're going to die has that effect.\n\nPenny had thrown Cole's clothes all over the bedroom. Cole gathered his scattered garb and dressed. He retrieved the two vials Zafira had given him from his coat pocket and popped the tops off. He held each enchanted vial against Penny's soaked pussy and watched as the small bottles filled themselves with her essence, leaving only droplets of Cole's own semen behind.\n\nCole handed the vials to Zafira. \"Will she remember any of this?\" he asked.\n\n\"Most likely.\"\n\n\"Can you do something about that?\"\n\n\"Short of killing her, no. If she were male it would be a different story.\"\n\n\"Fuck! Out of the frying pan and into the fire.\"\n\n\"I wouldn't worry about it too much. Besides, you have bigger things to focus on, yes?\"\n\nCole nodded in agreement. Only one item remained until he would have the answers he so desperately sought.\n\n\"For the record, could you please explain to me what exactly constitutes lust so I don't unnecessarily give myself a heart attack?\"\n\n\"Knowingly and consensually having intercourse or oral sex with a person outside of a formal union. Nothing more, nothing less.\"\n\nZafira drew a circle in the air, creating a portal through which they stepped through, disappearing from Penny's apartment.\n\n<center>CHAPTER 6</center>\n\nCole awoke to the sound of his screeching alarm clock. \"Damn it!\" he grumbled. Was it time for work already?\n\nLast night had been especially rough on him. His head throbbed full-force because of the large knot on the back of his skull. He could barely lift his stiff legs from the bed. Penny certainly did a number on him, one he would not soon forget.\n\nSlowly he walked to the bathroom. Well, waddled, actually. He took a pained piss, stripped off his underwear, and hopped in the shower.\n\nCole's head sagged against the shower wall as lukewarm water flowed down his back. His entire body was sore; the beating water from the shower did little to ease the pain. This would be a long day.\n\nCole jumped when he felt a slender hand touch his shoulder. He turned with a quick twist that strained his aching muscles even more. \"Ow!\" Next to him in the shower was the sexy succubus Zafira, completely naked but with her trademark wings, horns, and tail hidden.\n\n\"Jesus! Why do you do that?\" he scolded.\n\n\"Do what?\" she asked.\n\n\"Scare the living hell out of me!\"\n\nZafira frowned. \"I was just trying to massage your shoulders to help with the pain. You've helped me in the shower before, remember?\"\n\n\"Yeah, I remember,\" Cole sighed, \"and I appreciate it. Next time though, give me some kind of warning before showing up out of nowhere.\"\n\n\"I'll try to remember that next time.\"\n\nCole turned back around where he was and leaned his head against the shower wall again. He felt Zafira's gentle touch on his shoulders, rubbing her thumbs along his neck.\n\n\"So when did you get here, anyway?\" Cole asked. \"I didn't hear the walls shake.\"\n\n\"I never left,\" Zafira said, moving her hands up and down his back.\n\n\"Really? Why?\"\n\n\"I like to watch you sleep.\"\n\n\"That's a little creepy.\"\n\n\"It's not like you would have known if I hadn't told you.\"\n\nCole felt Zafira's breasts press against his back. Her hands reached around him, massaging his chest.\n\n\"You're pretty good at this yourself, you know,\" Cole said.\n\n\"I learned from the best.\"\n\nCole smiled as he shook his head. Her hands felt wonderful on his aching skin, leaving tiny goose bumps. He breathed a deep, relaxed sigh.\n\n\"Give me the soap.\"\n\n\"Why?\" Cole asked.\n\n\"Isn't the goal of a shower to get clean?\"\n\n\"I suppose you have a point.\" Cole handed her a bottle of body wash over his shoulder. Even that motion was painful.\n\nCole stood as still as possible while Zafira lathered-up and worked her slick hands over his back and knotted shoulders. Her touch did wonders for his pain, seemingly numbing everywhere she touched.\n\nShe leaned in again, pressing her large breasts against him as her hands washed his front. He felt her hard nipples poke into his back like two tiny alien probes. With every move of her supernatural hands, her breasts slid and swayed across his back. Cole really enjoyed being massaged from both sides simultaneously.\n\nZafira's hands cupped her breasts. She slid her tits slowly down his back, then up again. Her fleshy mounds felt wonderful, like two large soft sudsy sponges. She swirled her boobs all over his back as she slowly descended to her knees. Her hands then worked on his legs starting at his ankles. She worked her way up his legs, digging her palms in deep.\n\nThis is exactly what he needed. The pain in his body had mostly gone. Mostly. There was one part of his body that ached more than the rest, especially now that it stuck straight out.\n\n\"Turn around,\" Zafira ordered.\n\nSlowly he turned around. Cole's erect cock was only a few inches away from Zafira's mouth.\n\n\"My, my! Somebody is happy to see me!\" she joked.\n\n\"You've always had that effect on me. Unfortunately, this time it hurts too much to enjoy.\"\n\nZafira observed Cole's battered penis. His skin was painfully chafed and cracked from the many hours of rough sex he endured the night before.\n\n\"Let me fix that.\"\n\nZafira put her hands together. She hummed an incantation under her breath and her hands began to glow, radiating a bright actinic light.\n\nCole retreated. \"What are you doing?\"\n\n\"Relax. I'll be gentle.\"\n\nZafira placed both glowing hands on Cole's stiff aching cock. Her hands vibrated with mystical power that sent tingles through Cole's entire body. The longer she held her magic hands on him, the more the pain in his penis began to fade. His skin quickly healed, relieving him of that agony.\n\n\"There, good as new.\"\n\nCole was amazed. Something like that would normally take days to heal. She did it in mere seconds. And all pain in his body had disappeared.\n\n\"Thank you! I never would have guessed demons were capable of curing ailments.\"\n\nZafira tossed Cole a smug smile. \"I told you once before that there wasn't much I couldn't do in my prime.\"\n\n\"I'm curious -- what would it take for you to be as powerful as you once were?\"\n\nZafira shook her head. \"You don't want to know the answer to that.\"\n\nZafira poured a dollop of body wash into her hand.\n\n\"Now then, you're still dirty.\"\n\nShe put her lathered hands on Cole's fully erect cock. She delicately stroked him up and down, occasionally stopping to play with his soapy balls. Her cock-pumping felt amazing, especially considering the pain he was in moments ago.\n\nHe had no reason to worry about his soul now that he knew exactly what would damn him and what would not. \"Touching doesn't count,\" he remembered. He stood quietly, enjoying what she was doing to him. But he did keep a watchful eye on her to be sure that was allshe would do.\n\nZafira's soapy hands stroked Cole with a pleasurable hand-over-hand technique. As soon as one hand slid past his swollen tip, the other appeared at his base. The wonderful pleasure he felt from her continuous milking was rivaled only by the non-consensual blowjob she gave him the night before. His balls swelled the more he thought about his cock being inside this sexy demon's mouth.\n\nIt was a shame it would never happen again -- unless he wanted to damn himself for eternity, that is. Cannot rape the willing; and Cole was all too tempted now that he knew what exactly he was missing. In order to stay alive, he had to block those thoughts from his mind.\n\nZafira gazed up into Cole's eyes, obviously plucking from his mind every dirty thought he had of her. She removed one of her hands and placed it between her thighs. The bathroom air thickened with Zafira's sweet smelling pheromones as she played with her demonic pussy while stroking Cole's engorged human cock.\n\nThe path to Hell felt like paradise. The constricted confines of his bathroom forced more of her beguiling aroma into his nostrils. Her scent was overpowering; he was losing control. She pumped his swollen cock much faster, leaving his mind begging for more.\n\nHe wanted to fuck her so badly he could taste his desire. His mouth salivated at the thought of bending her over in the shower, eating out her delicious cunt, then fucking her until he had nothing left to give. To Hell with finding Maria's killer!\n\nFor a brief moment, Cole came to his senses. It was his brain's attempt to make his body react to the danger at hand. If he did not do something, he would surely give in to his temptation.\n\n\"I-I... th-think it's clean!\" Cole stuttered.\n\nZafira stopped. \"Hmm, I suppose so. But what about me?\"\n\n\"What about you?\" Cole inquired.\n\nZafira stood, grabbing the bottle of body wash. She squeezed an excessive amount of the soapy liquid all over her large breasts.\n\n\"You're not the only one who's dirty,\" Zafira said with a suggestive smile.\n\nCole could not resist. He rubbed his hands all over Zafira's silky smooth tits. His cock twitched with every gentle squeeze he gave, which quickly turned to firm kneading and licentious groping. She breathed heavily while Cole played with her well endowed mounds. Thick suds coursed across her flat stomach. Cole was completely enthralled by her body. His willpower was gone.\n\nZafira smiled as she leaned to Cole's ear. \"You want to be inside me, don't you?\"\n\n\"Yes,\" he responded.\n\nZafira grabbed one of Cole's hands, then slid it down past her stomach to her slick soapy pussy. His index and middle fingers penetrated her hungry sex without a second of hesitation. Her insides were warmer and tighter than he had imagined. She placed her arms around his neck while he sawed his digits in and out of her pussy. Pulling against his neck for leverage, Zafira ground her pelvis against his fingers. He thrust them in and out of her rapidly, making a loud wet clapping sound when his palm slapped her mound.\n\nCole increased his pace; Zafira's moans encouraged him further. He finger-fucked her as fast and hard as he could. Cole felt her pussy tighten around his fingers like a vice as she let out a deafening cry. Her intense orgasm covered Cole's fingers in a thick layer of warm slick juices.\n\nShe stopped momentarily to lean into Cole's ear once more. \"Do you want to fuck me?\" she asked.\n\n\"Yes,\" he replied.\n\n\"Then fuck me Cole, however you please.\"\n\nCole was completely under her spell. He could fuck her any way he wished. In that moment, he wanted to fuck her every way possible. At the forefront of his mind, however, he wanted to experience that blowjob again. He knew where this would end, and he no longer cared.\n\nCole pushed down on Zafira's shoulders, signaling her to kneel before him. On her knees and with her mouth open, her horns extended and her eyes glowed red. The taboo nature of fucking a demon added to Cole's arousal. He positioned his cock in front of her, ready to thrust it in her mouth.",
        "Suddenly his brain came back online again. \"You're about to fuck yourself to death, idiot!\" He needed release. He needed to fuck her. He was past the point of just walking away, and jerking off in front of her again would not do.\n\nCole had an epiphany! He stuck his cock between Zafira's soapy breasts and squeezed them together tightly with his hands. He thrust his hips forward like a madman, desperately trying to cum as fast as possible.\n\n\"Mmm. You're always so clever. No one has ever been able to resist me. It is one of the things that turns me on so much about you. Fuck my titties, Cole, and cum all over them!\"\n\nZafira pressed her breasts higher around Cole's cock, tightening their hold. His shaft rapidly slid up and down the soapy valley of her cleavage; his tip was barely visible when he thrust forward. Despite being thwarted once more, Zafira enjoyed having her breasts parted by Cole's thickness. Her forked tongue grazed his tip when it reached her peak.\n\nCole's pleasure mounted. Her soft mounds felt incredible around his cock, better than any pussy he remembered. His orgasm was imminent.\n\nIn his sex-crazed stupor, Cole grabbed Zafira by her horns and thrust as fast as he could between her tits. With a loud bestial roar, Cole erupted up and out of Zafira's cleavage. His enormous load splashed her in her face, inside of her mouth, and down her chin. Zafira swallowed every sweet drop, then licked the remnants from her breasts before the spray from the shower could wash them away.\n\nCole stood weak-kneed. That was too close, he thought. However, walking this thin line led to the most intense sexual pleasure of his life.\n\nZafira stood up. \"I could never get enough of your delicious cum.\"\n\n\"I could never get tired of making it for you.\"\n\n\"Is that so?\" Zafira smiled. \"Maybe I shouldn't try so hard to corrupt you then.\"\n\n\"I would appreciate that! Not that I don't enjoy what you do to me, I just don't want it to abruptly end either.\"\n\nZafira looked at him inquisitively. \"Are you saying you enjoy having me around?\"\n\n\"Maybe,\" Cole replied, dodging the question.\n\nShe stepped from the shower. \"Well then, tell me what it is you 'maybe' enjoy the most about me.\"\n\nZafira crossed her arms under her breasts, displaying them as if they were sitting on a shelf. \"Is it my tits?\"\n\nShe quickly turned around, shaking her perfect round ass at him. \"Or is it my ass?\"\n\nShe bent over further then spread her pussy lips with her fingers. \"Or is it my pussy?\"\n\nCole felt another twinge in his loins as Zafira modeled her body for him. \"Honestly... you being a demon. Sure, all your 'assets' are absolutely perfect. Your wings, tail, and horns however... they are your best traits. It's what makes you, you.\"\n\nZafira looked at Cole blankly. \"In centuries gone by, no one has ever told me that. Usually when a person sees them, they are terrified.\"\n\nCole laughed as he toweled himself. \"Well, the fact they come out when you're about to devour their soul might have a lot to do with it. I guess I'm just lucky enough to have seen them more than once.\"\n\nZafira blushed. \"You're disgustingly sweet sometimes.\"\n\nShe hugged her naked body against his. She unfolded her wings, then wrapped them around Cole, encasing him in a tight cocoon.\n\n\"Thank you,\" she said softly.\n\n\"You're welcome.\"\n\nThey stared into each other's eyes, enjoying the embrace. Their hearts pounded against one another in their soft warm shell. They each leaned in, their lips meeting in a soft passionate kiss. Fireworks exploded in their minds as their lips repeatedly pressed together. This powerful kiss was not one of physical need, but rather emotional desire.\n\nZafira abruptly broke the kiss and quickly retreated backward. \"I... um... Don't you have to be at work soon?\" she said, completely flustered.\n\nCole eyes widened as he came back to reality, \"Shit! I'll be late for sure!\" He dashed haphazardly around his apartment looking for clothes. \n\n\"By the way,\" Zafira said, \"I need dinner tonight.\"\n\nCole stopped in his tracks. \"Um, I'm supposed to go out with Vince tonight after work. Guys night out, that sort of thing.\"\n\nZafira crossed her arms. \"We have a deal, remember? I'm sure you don't put off eating when you're hungry.\"\n\n\"Alright, alright, I'll find someone. It'll just be later tonight, okay?\"\n\n\"Fine. But don't keep me waiting forever.\"\n\nCole grabbed his keys and rushed for the door.\n\n\"Where are you going?\" Zafira inquired.\n\nCole stopped, unsure of what she meant. \"Um, to work?\"\n\nZafira shook her head. She drew a circle in the air with her index finger, making a portal.\n\n\"You'll never make it on time your way.\"\n\nCole looked through the dimensional hole. It led to the basement level of the parking garage next to the precinct.\n\n\"Thanks! Yet another reason I 'maybe' enjoy having you around.\"\n\nThey exchanged smiles before Cole stepped through the portal, leaving Zafira alone in his apartment.\n\n*****\n\n\"How did I get stuck driving?\" Vince asked as he and Cole walked from the precinct after their shift.\n\n\"Um, my car is on the fritz. Had to take a cab to work.\"\n\n\"That's a bummer.\"\n\nVince rolled his yellow Mustang onto the roadway.\n\n\"So how did your date with Penny go?\"\n\n\"You knew about that?\"\n\n\"Word travels fast, especially with Frank's big mouth.\"\n\nCole paused. \"Let's just say it was less than favorable.\"\n\n\"That sucks, man. I noticed she wasn't at work today. I don't think I've ever seen her miss work since she started.\"\n\n\"I noticed that too,\" Cole said with a concerned tone. \"Would you mind swinging by her place real quick? I just want to be sure she's alright.\"\n\nVince looked at Cole curiously. \"And what did you two do last night?\"\n\n\"She... may have had too much to drink, that's all. What's with the interrogation? That's my job, not yours.\"\n\nVince laughed. \"Just busting your balls a little.\"\n\nVince stopped the car in front of Penny's apartment complex. Cole made his way to Penny's front door, knocking several times before he got an answer.\n\n\"Whoever you are, go away!\" Cole heard from behind the door.\n\n\"Penny? It's me, Cole. Can we talk?\"\n\nPenny opened the door. Her appearance was shockingly rough compared to how Cole usually saw her. She was still in her PJ's; her hair was unruly and her eyes bloodshot.\n\n\"Are you alright?\" Cole asked, very concerned.\n\n\"I should be asking you the same.\"\n\n\"Mind if I come in for a second?\"\n\nPenny stepped from the doorway, inviting Cole inside. They sat on the couch, separated by an unspoken space, both waiting for the other to speak.\n\nCole cleared his throat. \"About last night...\"\n\n\"I'm so sorry what I did to you!\" Penny sobbed, \"I don't know what came over me! I thought maybe you slipped something into a drink, but I don't remember drinking anything last night. You tried to leave but I wouldn't let you go. You begged me to stop and I couldn't control myself. It wasn't like me at all!\"\n\nTears rolled down Penny's face. \"I remember you saying you would die if I kept going; what did you mean?\"\n\nCole had to think quickly. \"Oh... that. It's just... I have a heart condition.\"\n\n\"Oh my god!\" she sobbed again. \"I could have killed you! I didn't know, I'm so sorry!\"\n\n\"It's alright,\" Cole said, trying to comfort her with words. \"I'm okay. I... just don't know where to go from here.\"\n\nPenny looked up. \"Are you going to arrest me or press charges?\"\n\n\"What?! No! You got carried away, very carried away, but everything is fine. No one needs to know.\"\n\nPenny cried for several minutes before regaining her composure. \"I need time to figure myself out,\" Penny said. \"Until then, I think it would be best if we don't see each other. And we should never speak of it again.\"\n\nCole nodded in agreement. \"I think you're right. It would be for the best.\"\n\nPenny looked at Cole. \"You know what bothers me the most about this?\"\n\n\"No. What?\"\n\n\"I actually enjoyed what I was doing... the thought of that... scares me.\"\n\n\"Well, sex is meant to be enjoyed. You just need to slow things way down next time. Besides, it wasn't all bad for me either. If it wasn't for my 'condition', I wouldn't have had any problems being tied up and ravaged.\"\n\nPenny smiled as she wiped away her tears. \"That makes me feel a little better. Thank you for taking this so well. I was afraid of how you'd act around me.\"\n\n\"Don't worry about it.\"\n\nCole rose from the couch. \"I must get going. Vince is waiting on me in the car.\"\n\nCole opened the front door and turned back to Penny. \"I expect to see your smiling face when I arrive for work Monday.\"\n\nPenny smiled. \"You got it, Detective. Harvey!\"\n\nCole closed the door behind him and returned to Vince's car.\n\n\"I was beginning to think you weren't coming back,\" Vince said.\n\n\"Sorry, let's go. I need something to put my mind elsewhere.\"\n\n\"What better way to do that than to see some strippers?\"\n\n*****\n\n\"Have fun, gentleman,\" the muscular bouncer grunted to Cole and Vince as they entered the gentleman's club named \"The Industrial Strip\". The place was packed, typical of a Friday night. Lights were dim except those glaring on the two small round stages at each end of the main floor and a larger half circle main stage in the center. At each stage, a sexy, scantily-clad dancer worked their respective pole.\n\nThey scouted the room for somewhere to sit. The bar ran the full length of the back wall and was completely packed with patrons absorbing drinks. The small tables far from the stages where also occupied, usually by couples, or by men who had negotiated a table session with one of the lovely dancers.\n\nAs Cole scanned the interior, he noticed a variety of dancers chatting-up potential customers, each with her own unique offering. Petite, thick, curvy, tall, short, white, black, brown -- something here for any man's taste. That is, unless that man had developed an acquired taste for the supernatural, as Cole had.\n\n\"I see two seats at the main stage -- hurry up!\" Vince ordered.\n\nThey pushed through the crowded dive and took cushioned seats at the main stage. The dancer on stage, a cute brunette in a tiny white string bikini, smiled and made her way to the newcomers. She shook her round, bubbly bottom at them, then stretched her garter out invitingly for contributions.\n\n\"See!\" Vince said, as he stuffed a dollar in the dancer's garter, \"This was just what you needed, Cole!\"\n\n\"I guess,\" Cole said loudly over the deafening music, also forking-over his dollar.\n\nSeveral dancers came and went as they sat. Vince was obviously enjoying himself more than Cole, as evidenced by his ample alcohol consumption and the dozens of dollar bills that escaped his grip.\n\nCole had too much on his mind to focus on the scantly clad performers. Maria's killer was almost within his grasp. Then there was the scene this morning in the shower with Zafira. He wondered, what was that kiss about? It seemed... genuine. At least the issues with Penny were hopefully resolved, but Cole still felt all too guilty about how things turned out.\n\n\"Hey! Stop sitting there like a lump and start enjoying yourself!\" Vince said with a topless dancer in his lap, snapping Cole out of his meditation.\n\n\"Let's give a big round of applause for Vanessa!\" the DJ announced, signaling the sexy, big-breasted blonde that her stage time was over. She retreated from Vince's lap, gathered her bra and money that had been thrown on stage, then disappeared behind the curtain.\n\n\"You're really dragging me down, Cole. You never used to be like this when we were in college. Hell, youwere the rowdy one.\"\n\n\"And you have had too much to drink. Give me your keys.\"\n\n\"Fine, better safe than sorry,\" Vince said, handing over his keys.\n\nThe DJ spoke into the microphone again. \"Alright guys, let's give a warm welcome to our newest performer! I saidwarm -- got that? Let's hear it for the super-sexy...Lillith!\"\n\nLights focused on the main stage as a hard rock track ramped-up. Cole's eyes almost bugged out of his head as \"Lillith\" made her way to the main stage. While not in her usual attire, he instantly recognized Zafira. She showcased her sexy body in a black sheer halter babydoll with a mesh V-plunge that left silhouettes of her bra, G-string panties, and garter belt underneath. Attached to the garter belt were black fishnet thigh high stockings accenting her pale, supernaturally perfect legs descending into a pair of shiny black patent platform heels.\n\nZafira sashayed to the stainless steel pole. Parading in front of the pole, she put both hands high above her head, gripped the chrome rod, and swayed her hips. With a sudden kick of her leg, she spun around the pole several times, holding only with one hand, seemingly gliding on air. \n\nHer feet finally touched the ground. She crouched, then jumped up and climbed high atop the pole. With the rod securely gripped between her thighs, she hung upside down and let the sheer babydoll gown slide off her body to the stage below. Her hands gripped the vertical chrome; she released her thighs, flipping upright, and then descended the pole in a whirlwind of skillfully sexy gymnastics.\n\n\"Damn! She's good! And smokin' hot too!\" Vince applauded.\n\nCole could not hold back his smile. \"Yes, she certainly is.\"\n\nOn her knees, Zafira ground her crotch against the base of the pole. Her eyes locked on Cole as much as his eyes were on her.\n\n\"Dude, she's totally checking you out,\" Vince said.\n\nZafira seductively crawled to where Cole and Vince sat. She motioned with her index finger for Cole to come closer. Playing along, he leaned forward with his elbows resting on the edge of the stage. \n\nShe braced herself with her hands flat on the floor behind her and swung each of her legs onto Cole's shoulders, first left, then right. She bucked and swayed her hips, her crotch just inches from Cole's face. The tip of his nose registered the heat of her pussy emanating through her thin panties. Her sweet scent once again crept into his nostrils when she balanced herself on one hand, then slightly pulled her panties to the side for Cole to view. The up-close glimpse of her glistening pussy made his cock strain hard against his trousers.\n\nZafira climbed back on stage and knelt in front of Cole. She reached behind her back, unclasped her bra, and tossed it aside. All eyes in the club were fixated on her perfect double D's. She leaned forward, grabbed Cole by the back of his head, and pressed his face into her cleavage. He gasped for air as she held him there, wiggling her breasts. She retreated, pulling out the top of her fishnet stocking. Cole, as well as Vince, stuffed several dollar bills inside.\n\n\"You lucky bastard!\" Vince said to Cole as Zafira returned to gyrating around the pole.\n\nCole only smiled as he watched, ignoring Vince. With her back against the pole and gripping it above her head, she lifted herself from the floor, her body horizontal with her legs spread wide. Those extraordinary legs ascended; she locked her ankles around the pole and spun gracefully while hanging, inverted. \n\nHer song wound down. Zafira finished by flipping upright, then sliding down the pole doing \"the splits\" as she met the floor.\n\n\"Wow! Just fucking wow!\" the DJ yelled. \"Let's make some noise for Lillith!\"\n\nEveryone stood and applauded Zafira's performance, showering her with admiration as well as greenbacks. Cole, Vince, and several other onlookers \"made it rain\" all over the stage. Zafira retrieved the cash and her strewn garments and vanished behind the curtain.\n\n\"Well, that certainly perked you up,\" Vince said.\n\nCole laughed. \"Yeah, it did.\"\n\n\"I need to take a piss; save my spot.\"\n\n\"Don't fall over while you're in there. The last thing I want is to have to carry you out of here.\"\n\n\"I'm fine! I just have a nice buzz.\"\n\nCole felt Zafira's slender hand on his shoulder not long after Vince departed. Without asking, she sat in Vince's chair.\n\n\"Hi there, Cole.\"\n\n\"Lillith, huh?\" he inquired.\n\n\"Do you like it? It means 'into the night'.\"\n\n\"Well, it certainly is appropriate. By the way, you were incredible on stage!\"\n\nZafira smiled, \"Thank you! That was a lot of fun. If I had a need for human money, I'd actually consider doing this more often.\"\n\n\"So what are you doing here? I thought being in public was a risky endeavor.\"\n\n\"It is, but no angel or crusader would be caught dead in a place like this. The risk here is minimal. Besides, I'm starving, and there are plenty of 'candidates' to choose from. Take your friend Vince, for example.\"\n\n\"Vince?!\" he protested. \"Are you nuts? He's perverted, but he's straight as an arrow!\"\n\n\"That's what you think. You really are far too trusting of people.\"\n\n\"Oh really? Enlighten me.\"\n\n\"Your friend Vince is a murderer,\" Zafira sighed.\n\nVince? A murderer? Something did not add up. Cole knew in his gut that Vince was a good person. Still, Zafira had never been wrong before. There must be some kind of explanation.\n\nThey barely noticed the returning footsteps. \"I see you didn't save my seat, Cole,\" Vince said, smiling at Zafira.\n\nZafira stood. \"Oh, I'm sorry! Take it back -- or would you rather sit in a chair in one of the VIP rooms? I'll make it worth your while.\"\n\n\"Lead the way!\" Vince said with enthusiasm.\n\n\"Wait!\" Cole interrupted. \"Before you go, could I talk to you outside for a moment?\"\n\n\"Now?\" Vince replied. \"Can it wait?\"\n\n\"No. It won't be but a minute.\"\n\nVince turned to Zafira. \"I'll be right back, baby.\"\n\n\"Don't keep me waiting too long, sugar,\" Zafira smiled.\n\nCole escorted his friend outside. He did not have much time to get to the bottom of Vince's dark secrets. Vince's very life depended on it.\n\n\"So what is this about?\" Vince demanded.\n\n\"Vince, have you... ever done something really bad. Something you've never told anyone?\"\n\n\"You brought me out 'ere to ask me that? The hell is wrong with you lately?\"\n\nCole ignored his slurred questions. \"Please, just answer me. It's important.\"\n\nVince paused, sensing the seriousness and sincerity in Cole's voice. \"Speaking as friends, correct?\"\n\n\"Yes.\"\n\nVince collected himself. \"I told you once while back in college that I was from Detroit. Before college, I ran with a nasty group of people; petty thugs, really. We did some things that...\" Vince stopped, turning his back to Cole.\n\n\"Go on,\" Cole insisted.\n\nVince could not look at his friend. He spoke quietly, hesitantly.\n\n\"There was a deal that went very bad, very fast. Shots were fired from both sides. I ducked behind a dumpster and fired several times blindly around the corner. After the dust settled, I peered around and saw that a small kid riding his bike down the street had been caught in the crossfire. Judging by where his body was, and the direction I'd fired, I know it was my shots that hit him.\"\n\nVince turned to Cole with a sorrowful look in his eyes, \"That day changed my life. I went to trial with several other guys. I was prepared to accept my punishment, but I got off due to a mistrial -- all because of how the evidence was handled by the police. It was at that moment I chose the career path that I did. It's why I'm so thorough with my forensics. I make damn sure no one else gets away with what I did. I hate my job -- it reminds me every single day of the mistake I made. It's my way of repenting for my sins.\"\n\n\"I had no idea you struggled with such a heavy burden,\" Cole said.\n\nCole felt sorry for Vince. He may have been a bad person earlier in his life, but that is not the person he is now. People make mistakes. It is up to the individual to learn from their mistakes or keep repeating them. Vince felt genuine remorse for what he had done, and that in itself, Cole thought, argued against having his soul ripped from his body.\n\n\"I've never talked to anyone about it. In a way, it's kind of a relief. Why did you ask me this anyway?\""
    ],
    "authorname": "Rozalin_0123",
    "tags": [
        "succubus",
        "reluctance",
        "demons and angels",
        "mind control",
        "three-somes",
        "kinky sex",
        "lesbian",
        "pegging",
        "bondage",
        "non-human"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/purely-sinful"
}