{
    "title": "Mental Manipulations Ch. 04",
    "pages": [
        "As I walked into the house, I was a little surprised to see my Call Waiting button flashing on my phone.\n\n\"It's probably Roxy,\" I told myself as I dragged my body up stairs to my bedroom, \"and that call can wait until morning.\"\n\nI opened my bedroom balcony doors to let in the cool night air, and as I lay down in bed, I realized that if it WAS Roxy, she would have tried to call my cell. Checking it, I saw no missed calls, and wondered who had called.\n\nThe next morning, I went for a long run, in my on-going attempt to get back into shape after too many years, and too much physical damage to my body.\n\nAs I ran, I mentally reviewed the events of last night, and I smiled, and also tried to stop my cock from starting to rise again. \n\n'I really wish I knew what the fuck happened to me when I got zapped!' I thought. 'Ever since then, I'm fucking like a teen-ager again, I've got better stamina than I've had in years, and I feel like I can recover better than ever!'\n\nNot that I was complaining, mind you. I was just curious, and admittedly a little concerned.\n\nAs I reached my driveway, I remembered the voicemail alert blinking on my phone last night. Curious who would have called, I made my way back into the house and walked over to the phone.\n\nIt turned out that I had two phone calls. One was from my son, asking me to call him back, and the second was quite a surprise.\n\n\"Mr. Jones, this is Sarah Johnston. Pastor Johnston's wife,\" I heard the soft voice say on the recording. \"I'm hoping we could talk. The pastor is going to be gone all day tomorrow, so I'm hoping you can call me early in the day. Thank you.\"\n\n'Why is that asshole's wife calling me?' I wondered. 'And an even better question, why does she call him the pastor, and not by his name? And why was she calling me at 10:00 at night?'\n\nCurious, I called her back. \n\n\"Mrs. Johnston, this is Kurt Jones. I'm returning your call from last night,\" I said when I heard her voice.\n\n\"Yes, sir,\" she replied immediately. \"How are you?\"\n\n\"I'm doing fine, ma'am. Please don't call me sir. What can I do for you?\"\n\n\"Umm, I'm sorry,\" she replied softly. \"I'll try to remember that. Umm, I was hoping I could talk to you today...\"\n\n\"While your husband is out of town?\" I asked.\n\n\"Umm, yes. That would be best,\" she replied.\n\n\"Ok, well, I'm available this morning. Would you like me to drive out to the church?\"\n\n\"NO!\" she replied quickly. \"Umm, I'm sorry. I don't think you coming here would be a good idea. Too many people would see you, and the pastor would find out...\"\n\n'Again with 'the pastor',' I thought. 'What kind of wife does that?'\n\n\"Ok, that's fine,\" I told her. \"Where did you have in mind?\"\n\n\"Umm, well, there's a park out on route 21. Do you know where it is?\"\n\n\"Yes, I do. When would you like to meet?\"\n\n\"Umm, is an hour acceptable?\" she asked.\n\n\"An hour will be fine,\" I told her. \"I'll see you then.\" \n\n\"Ok. Thank you sir.\" \n\n\"Oh my gosh! I'm so sorry!\"\n\n\"It's ok. No worries,\" I said, hanging up.\n\n'My god, that woman is wound tight!' I thought, as I started taking off my sweaty clothes and walked toward my shower. 'Oh well. So much for a lazy Saturday.'\n\nIt was a very hot day, so I dressed in a pair of shorts and my typical Hawaiian shirt, with a pair of flip-flops, and then got into my truck.\n\nAbout an hour later, I pulled into the parking lot of the park. I didn't see any other cars around, so I got out of my truck and walked over to a picnic table and sat down.\n\nAs I sat there waiting, again pondering the past week or so, out of the corner of my eye I saw someone walking down the path from the opposite side of the park.\n\nAs I looked up, I had a hard time seeing who was walking toward me, but she was wearing a long, thin dress and a long-sleeved blouse, and she had long, braided blonde hair. \n\nWith the sun behind her, I was getting a good back-lit view of what looked like a very nice pair of legs! As the woman got closer, I realized that is was Sarah, the pastor's wife. Not surprising, her blouse was buttoned all the way up to her neck.\n\n\"Hello, Mr. Jones,\" she said softly as she walked up to the opposite side of the picnic table. \"I'm sorry I'm late. It took me a little longer to walk here than I thought it would.\"\n\n'This was a mistake. I shouldn't be here! Pastor will be quite upset if any one sees me here with this man!' I heard.\n\n\"Not a problem,\" I replied as I stood to greet her. \"You walked here?\"\n\n\"Yes,\" she replied, looking at the ground as she sat. \"It's really not that far. It's only a couple of miles.\"\n\n\"In this heat, that's quite a distance,\" I told her. \"I haven't walked that far in these conditions since I left the military.\"\n\n\"Oh, I walk all the time,\" she said. \"Pastor doesn't like the idea of me driving. He says it's not safe, and that I probably wouldn't be a good driver, anyway.\"\n\n'This was a mistake. I shouldn't be here!'\n\n'Yeah, the asshole doesn't like the idea of you having any freedom,' I thought.\n\n\"Interesting,\" I replied. \"I'm curious, why do you refer to your husband as 'pastor' and not by his name?\"\n\n'What? Why does he ask a question like that?'\n\n\"Oh, that's what he likes to be called,\" she told me. \n\n\"Interesting,\" I replied again. I noticed that the entire time we talked, she wouldn't look at me. She continued looking at the ground.\n\n\"So what was it that you wanted to talk to me about?\" I asked.\n\n\"I want to talk to you about the pastor,\" she replied, still looking down.\n\n\"Ok, well first, when I talk with someone, I prefer to look them in the eye, not at the top of their head,\" I told her.\n\n'Oh my! I can't... I shouldn't be here!'\n\n'Look at him,' I sent to her. 'He seems like a nice man. You can trust him. You're safe here.'\n\nShe slowly raised her head and looked at me shyly. What I saw surprised me.\n\nSarah was a very attractive woman, with pale skin, freckles, and a beautiful pair of bright blue eyes. They spoke of an intelligence that she kept hidden for some reason, and I decided that I had to find out more.\n\n\"Much better,\" I told her. \"Thank you.\"\n\n\"Now, what about your husband?\" \n\n\"He's very upset at all of this,\" she said. \"He gets very angry.\"\n\n\"I don't understand what he has to be upset about,\" I told her. \"After all, I'm the one who was in the hospital, over his mistake.\"\n\n\"He says that you're trying to hurt him, and his church,\" she replied.\n\n'It's very warm. I should unbutton the top button of my blouse and enjoy the breeze,' I sent to her.\n\nI watched a second later as she raised her hand to the collar of her blouse, and then stopped. She hesitated briefly, and then opened her top button.\n\n\"I'm not trying to hurt anyone,\" I told her. \"I just want him to take care of my medical bills. As I said, he's the one who caused me to get hurt because he was in a hurry.\"\n\n\"He says that he didn't do anything,\" she said. \"That it was a mistake.\"\n\n\"Which one was it?\" I asked. \"If he didn't do anything, then what was the mistake?\"\n\n'Oh my gosh! That is exactly what I asked him! That's what got him so angry!'\n\n\"I ... I don't know,\" she replied softly, looking down again.\n\n\"Sarah, please look at me.\"\n\n'I'm still warm. I should open up one more button.'\n\n\"Has he hit you again?\" I asked her softly, watching as she opened one more button. \n\n'Oh my gosh! He DOES know! But how does he know?'\n\n\"No,\" she replied, looking at my chest.\n\n\"Good.\"\n\n\"So please tell me, what is the problem,\" I told her. \"I guess I don't understand.\"\n\n'How do I tell him?'\n\n\"My husband is a very proud man,\" she told me, finally looking up at me. \"He's afraid that he will lose his standing in our community, and lose his church.\"\n\n\"His 'standing' in your community, his image, is more important to him than doing what he is supposed to do?\" I asked. \"That goes beyond pride being one of the 'Seven Deadly Sins.' That's pure hubris.\"\n\n'What do I say to that? He's right!' I heard after a moment of silence.\n\n\"Sarah, I'm sorry,\" I told her, \"but your husband caused my accident, and he knows it. All I'm asking him to do is to make things right. I shouldn't have to bear the burden of paying for my medical bill for something that he caused.\"\n\n\"I understand that,\" she replied. \"But that would mean having to admit that he was wrong. He will never do that.\"\n\n\"He views our church as HIS church,\" she continued. \"The money that he collects is HIS, and he will not give it up for something like this.\"\n\n\"I'm afraid that if you continue this matter, it will make him very angry.\"\n\nThere was silence for a couple of minutes as I tried to read her mind, but I wasn't getting very much.\n\n\"Well, let's see,\" I finally said, \"that brings in Pride, Wrath, and Greed. Three out of seven. Not very good for someone who claims to be a man of God.\"\n\n'If he only knew the truth, what that man is truly like!'\n\n'Maybe you should tell him. He seems very trustworthy.'\n\n\"I'm sorry that I wasted your time,\" she said, standing. \"I have to get back home.\"\n\n\"You didn't waste my time at all,\" I told her. \"I enjoyed talking to you. You truly are a nice, lovely woman. You deserve better than someone like him.\"\n\n'He's right, and you know it.' I sent to her as she stood there silently. \n\n\"I ... I have to get home,\" she said as she turned away.\n\n\"Can I give you a ride?\" I asked as she started walking.\n\n\"No!\" she replied quickly. \"Umm, I'm sorry. No, thank you. That would not be good!\"\n\n\"Mrs. Johnston,\" I called out, \"can I ask you one more question?\"\n\n\"I guess so,\" she replied, turning back to face me.\n\n\"Where is your husband right now?\" I asked.\n\n\"Oh, he's at a Pastor's conference in Nashville,\" she said.\n\n'At least, that's what he tells me.'\n\n\"Hmmm. Ok. Thank you,\" I replied. \"I was just curious.\"\n\nSarah looked quizzically for a second, and then turned away again. \n\nI watched Sarah as she walked away, wondering how long the neck of her blouse would remain open.\n\nDriving back home, I replayed the conversation with Sarah in my head. Something was not right with this minister, and now I was determined to find out what it was. \n\nAs I pulled up to my house, I saw Roxy's car parked off to the side, and she was sitting on a chair on the porch.\n\n\"Hi,\" I said as I walked up my stairs. \"I'm surprised to see you here.\"\n\n'Oh god, I hope this goes well!' I heard.\n\n\"I know,\" she replied. \"Can we talk?\"\n\nI looked at her for a second, and then continued walking toward my door.\n\n\"Sure,\" I replied. \"Come on in.\"\n\n\"Why don't you make yourself comfortable on the deck?\" I told her. \"I just have to make a phone call and I'll be right out.\"\n\n\"Did you have other plans?\" she asked.\n\n'Shit! Why did I have to say that?'\n\n\"No,\" I told her, smiling. \"I have no plans for the rest if the day. I just have to make this phone call.\"\n\n\"Ok,\" she replied sheepishly.\n\n\"If you're thirsty, help yourself,\" I told her as I walked upstairs. \"There's plenty of beer, lemonade, water...\"\n\n\"Ok. Thanks.\"\n\nAs I walked into my bedroom, I shut the door behind me and pulled out my cell phone. I quickly dialed a number from my memory, and it was answered on the second ring.\n\n\"You ugly bastard!\" I heard in a familiar voice from my past. \"How the fuck are you?\"\n\n\"Still sucking air, brother,\" I replied. \"I don't have a lot of time, so I've got a quick question for you.\"\n\n\"Anything for you, brother. What's up?\"\n\nI quickly explained what I needed as I looked out my window at Roxy, pacing back and forth on the deck. From above, I had quite the view of her pacing back and forth in her halter top, which did nothing to stop her breasts from swaying as she walked, short jeans skirt, and wedge sandals.\n\n\"You're asking a lot,\" Sam replied. \"I could get my ass handed to me if I get caught doing this.\"\n\n\"Yeah, but you're too good to get caught,\" I replied, still watching Roxy.\n\n'She's nervous. This is either going to be very good, or very bad.'\n\n\"Yeah, this is true,\" my old friend chuckled. \"Besides, I believe I owe you one. At least one!\"\n\n\"Hey, I don't look at it as either of us owing the other anything,\" I told him. \"We just do for each other.\"\n\n\"This is also true. Ok, let me see what I can find, and I'll call you back.\"\n\n\"No worries,\" I told him. \"You know how to get a hold of me.\"\n\nI hung up the phone and started walking back downstairs.\n\nI grabbed a beer and then joined Roxy on the deck, still pacing.\n\n\"How are you?\" I asked.\n\n'Oh god. Small talk!'\n\n\"I'm ok. How are you?\"\n\n\"Not bad,\" I replied. \"So what's up?\"\n\nRoxy sighed and then looked up at me. \n\n\"I'm sorry for the other day,\" she told me. \"I thought about what you said, and you're right. I had no right to expect something from you that we never even talked about.\"\n\n\"Ok,\" I said. \n\n'Ok? That's it?'\n\n\"I understand what you said,\" she continued. \"After my divorce, I guess I wasn't ready to get into a relationship right away, either, so I can see your point.\"\n\n\"Good,\" I replied. \n\n\"So,\" she said, \"where does that leave us?\" \n\n\"I don't know,\" I told her. \"Only you can answer that.\"\n\n'Damn it! You're not going to make this easy for me, are you?'\n\n\"Well, do you still want to see me?\" she asked.\n\n\"Absolutely,\" I replied. \"As long as you understand where I am coming from. I told you, I like you. I'm just not ready for a relationship. I think that you're a great person, a fun woman, intelligent, cute ...\"\n\nRoxy smiled, and said, \"Good. Thank you.\"\n\n\"And you're a great fuck, too!\" I continued, smiling at her. \n\n\"Oh I am, am I?\" she asked, eyebrows raised, walking toward me.\n\n\"Definitely!\" I said as I watched her put her beer down on the railing.\n\n\"Well, you're pretty damn good, too!\" she said as she stepped up to me.\n\nI watched as Roxy started slowly unbuttoning my shirt. \"So, is this where we have 'make up sex'?\" I asked her.\n\n'Finally! Enough with the talking!'\n\n\"I think that would be a good idea,\" she replied, having pulled my shirt wide open. \n\n\"Good. I think you know where to start,\" I told her, smiling at her as I tossed a cushion onto the floor of the deck at my feet.\n\n'Out here? Damn! Why does he always want to play outside? I'd REALLY like to be fucked, and fucked hard, on his bed!'\n\n\"Can't we go inside?\" she asked.\n\n\"Eventually,\" I told her. \"Right now, I'd like to enjoy the fresh air and sunlight, and you, all at the same time.\"\n\n\"Ok. It's hard to argue with that kind of logic,\" she replied.\n\n'Yes! Take control!'\n\n\"Then don't argue,\" I told her, smiling.\n\n\"Yes, sir!\" she replied, sliding her hands across my chest.\n\n\"If you're going to call me 'sir', you should be on your knees when you do it,\" I teased.\n\n\"\"Yes, sir!\" she repeated, quickly kneeling in front of me.\n\nWithout another word, Roxy opened my pants and let them drop to the deck, pulling the waistband of my boxers down and exposing my hardening cock.\n\n\"Mmmm! I missed this big guy!\" she said softly as she stroked my shaft.\n\n\"Show me how much you missed him,\" I told her.\n\nLooking up at me, Roxy leaned in and slowly started sliding her wet tongue up the length of my pole.\n\n\"Mmmm! That's nice!\" I said softly.\n\nShe continued slowly teasing me, licking her way up and down my cock and sucking on the head, starting to drive me crazy.\n\n\"Ooooh! Suck my cock, baby!\" I told her as she licked and sucked on my balls.\n\n'Make me! Don't be gentle with me!'\n\nShe slowly worked her way up the length of my shaft, and I reached down and grabbed a handful of her hair.\n\nHolding tightly to her dark tresses, I pulled her head up.\n\n\"I said suck it, not tease it!\" I told her as I pushed my cock into her mouth.\n\n'Yes! That's it! Make me your slut!'\n\n'Tell him you want to be his slut!'\n\n'Oh my god! I can't do that! What would he think of me?'\n\n'He just may like that!' \n\n\"MmmMMM!\" she moaned as she started bobbing her head up and down the length of my rigid shaft.\n\nI held tightly to her hair and started moving my hips back and forth, fucking Roxy's face as she reached her hands up and grabbed on to my ass.\n\n'Oh god, yes!'\n\nI fucked her face for a couple more minutes and then stopped. Using her hair as a guide, I started slowly puling her face toward me, trying to slide my cock as deep down her throat as I could. \n\nHer nose was about an inch and a half from my pubes when she started to gag.\n\n'Holy crap! Is he trying to choke me? I can't take all of him down my throat!'\n\n\"Relax,\" I told her as I pulled her back a little. \"You can do it.\"\n\nI let her catch her breath for a second, and then she nodded and moaned, gripping my ass cheeks tighter and pulling me back in toward her face.\n\nI felt the tip of my cock reach the back of her throat, and slowly started to push it further in.\n\nI could feel the vibrations rippling through my pole as Roxy moaned, slowly pulling me in deeper.\n\n'Oh my god! I can't believe I did it!' I heard as her nose was buried in my pubic hair.\n\nShe held me tightly like that for a couple of seconds, and then started pushing back against my hand.\n\nI let her back her head up, and she pulled back until she had just the head still in her mouth. \n\n\"See?\" I moaned as I felt her tongue flick against the rim of my cock head. \"I told you that you could do it!\"\n\n\"MmmHmm!\" she moaned, and then started bobbing her head up and down quickly, taking me deep every few thrusts.\n\nSucking my cock like a woman possessed, Roxy soon had me close to cumming.\n\n\"Oh, shit baby!\" I moaned. \"That feels so good!\" \n\n\"Yeah! Cum for me!'\n\n\"You're going to make me cum,\" I told her. \"Where do you want it?\"\n\nRoxy quickly pulled all the way back, letting my wet, shiny shaft stand in the breeze. \n\n\"Where ever you want it,\" she breathed, stroking my shaft and sliding her other hand under her skirt. \"Make me your slut. Just give it to me!\"\n\nI took my cock from her and started stroking it. \"Open your mouth,\" I told her.\n\n\"Oh yes!\" she moaned, tilting her head back and opening her mouth wide.\n\n\"Close your eyes,\" I told her as I felt myself getting closer.\n\n\"Yesss! Cum for me!\" she moaned.\n\nLooking down at Roxy kneeling in front of me like that, almost begging for my cum, her tits heaving in her halter top as I stroked myself, soon sent me over the edge.\n\n\"Oh shit!\" I exclaimed as I watched as my cum flew out toward Roxy. \n\nI tried aiming for her mouth, but I soon had her face coated in my hot cum. Roxy moaned loudly as she leaned forward and my juices continued to fly from my pole. \n\n'Oh shit! Yes! This is so hot!'\n\nAs I shook the last few drops from my cock, I watched Roxy as she leaned back. Her face was covered, and my cum was dripping down to her tits.\n\n\"Oh my god!\" she breathed, licking her tongue around her lips and drawing in the cum surrounding it, \"That was so hot! I love it!\"\n\n\"Oh crap,\" I moaned in agreement. \"That WAS hot!\"\n\nAfter I caught my breath, I reached out my hand scooped off the cum that had landed around her eyes. I then brought my coated fingers to her mouth and slid them in. Roxy moaned loudly as she sucked on my fingers, taking them deep into her mouth and cleaning my cum off of them. \n\nWhen she had them all cleaned off, I reached my hand out for hers. She lifted her free hand toward mine, and I shook my head.\n\n\"No,\" I told her. \"Give me the other one.\"\n\nRoxy giggled and slid her hand from under her skirt. Looking her in the eyes, I leaned down and brought her hand to my mouth.\n\nShe moaned again as I cleaned her juices from her fingers, savoring her taste as my tongue flicked across her wet digits.\n\nWhen I felt that they were clean enough, I took her hand and helped her stand. I then led her over to the deck railing and turned her around, her back toward me. \n\n'Is he going to let me wipe off all this cum?' I heard as I wrapped my fingers around her wrists and brought her hands to the railing.\n\n\"You can clean off your face when we go inside,\" I whispered in her as I kissed her neck. \"For right now, let it dry on your face like a good slut. And keep your hands where they are.\"",
        "Roxy moaned loudly again, leaning back against me as I cupped her tits, gently squeezing them.\n\nI started pinching her nipples as my lips made their way to the back of her neck. When I reached the bow, I gently bit in to one of the loose ends and pulled on it until the knot came undone.   Roxy gasped when she felt her halter loosen, and then she whimpered softly as I slid my fingers under the loosened fabric on top of her breasts. The halter remained on her chest, barely, held up by the last couple of inches of the knot.\n\n\"Ohhhhhh!\" she moaned as I continued to squeeze her breasts and pinch her nipples. I could feel the drops of my cum resting in her cleavage and rubbed them in to her skin.\n\n'Oh damn! Quit teasing me and fuck me already!'\n\nI slowly slid my hands from under her top and then down her body as I started to kiss my way down her back.\n\nRoxy started to move, trying to turn around as I knelt behind her and lifted her skirt. Lifting the hem up to her waistband, I tucked it in, baring her ass to me.\n\n\"I told you not to move!\" I said as I smacked her exposed ass cheek.\n\nShe gasped and placed her hands back on the railing as I leaned in and softly bit her ass cheek.\n\nPlacing one hand on the small of her back, I gently pushed her forward, and then used my other hand to spread her legs apart.\n\nWith her ass thrust out toward me, I pulled her ass cheeks apart and leaned in further. I then stuck my tongue out at swiftly flicked it at her clit.\n\n\"Ohhhh SHIT!\" she exclaimed, her legs tightening.\n\n'I am so fucking horny, and he's going to tease me! Damn it!'\n\nI smiled to myself and continued playing with her clit for a couple of minted before I slowly dragged my tongue from her clit, down her slit, to her seeping wet hole.\n\nRoxy moaned again and pushed her ass back toward me as I slid my tongue into her warm pussy. Tasting her tangy wetness soon had my cock starting to fill back up.\n\nI thrust my tongue in and out of her as she moaned and gently pushed back at my face.\n\n'Oh god! Fuck me already! I need your cock!'  \n\nI then slid my tongue further up and pulled her ass cheeks further apart as I started flicking at her asshole.\n\n\"Oh damn!\" she softly moaned into the railing, moving her hips.\n\n'Ohhh! My ass! That's so good!'\n\nI pressed my face in closer to her ass and started to push my tongue against her tight puckered hole.\n\n'Oh god! He's going to fuck my ass! I know he's going to fuck my ass!'\n\nA couple of minutes later, I felt my cock back to its full hardness, so I pulled back and started dragging my tongue up her back.\n\nStanding back up, I held her by her hips and roughly pulled her ass toward me. Roxy gasped, and I thrust my hips against her.\n\n'Oh shit! Take me inside and fuck me!'\n\nI moved my hips around until my cock was resting along her wet slit. As I held on to her, Roxy bent over a little more and I started moving my hips back and forth, sliding my shaft through her increasing wetness.\n\n'Oh god! Fuck me! I don't care if it's out here or inside, just fuck me already!'\n\n'Hearing' that, I slid my hands around to her ass and pulled my cock back far enough to place the head at the warm opening to her pussy. I slowly slid just the head inside her, and then lifted my hand up to her neck and grabbed her hair.  \n\n'Tell him what you want! Let him know!' I 'told' her.\n\n\"Is this what you want?\" I asked, teasing her.\n\n\"Oh yesss!\" she hissed, arching her back and pushing her ass toward me as I pulled on her hair and slowly slid a little more of my cock into her pussy. \"Please fuck meeeee!\"\n\nI pulled sharply on her hair one more time before releasing her and giving her a quick swat on her full ass and sliding my cock out of her.\n\n\"Then get your ass inside and upstairs,\" I growled. \n\nRoxy whimpered softly and then turned around, leaning against the railing.\n\n\"You're killing me, you know that,\" she said softly.\n\n\"Yes, and you love every minute of it, too,\" I replied, smiling at her.\n\n'Yes, I do!'\n\n\"I don't know what you're talking about,\" she said, trying to hide a smirk.\n\nShe reached her hand down and squeezed my hard pole, and said, \"C'mon on. Let's go inside so you can fuck my brains out!\"\n\nAs she turned her back to me, I gave her another hard smack on the ass. \"Get inside,\" I told her, \"before I change my mind and fuck you out here.\"\n\nShe gasped loudly as her ass stung, and then giggled as she walked quickly into the house.\n\n'Oh damn that felt good!'\n\nAs she started walking up the stairs to my bedroom, I watched her ass cheeks, still peeking out from her folded-in skirt, wiggling with every step up. I then made a quick detour to my kitchen and grabbed the jar of coconut oil.\n\nI walked in to the bedroom and saw Roxy laying on my bed, her ass at the edge, her feet flat on the mattress, legs spread wide, the front of her skirt pulled up, and her fingers sliding across her clit.\n\nI didn't say a word as I put the coconut oil on the night stand next to the bed and then walked over to her.\n\nI watched as she started rubbing her clit faster and I wrapped my fingers around the base of my hard cock. \n\n'Are you going to watch me, or are you going to fuck me?'\n\nSmiling, I started slowly sliding the head of my cock up and down her slit, coating it in her juices. I slid it from her seeping hole up to just below her hard little clit, down to her asshole, and back up again.\n\nAs my gaze traveled up her body, Roxy and I eventually locked eyes. She was wide-eyed as she looked at me, with almost a look of desperation.\n\n\"Quit teasing me and fuck me!'\n\n'Tell him!'\n\n\"Ohh fuck me!\" she whined loudly. \"Quit teasing me and fuck me!\"\n\n\"Is THIS what you want?\" I asked as I thrust my rod deep inside her.\n\n'Oh shit! Yes!'\n\n\"YESSS!\" she yelled as my hips slammed against her, my cock bottoming out in her pussy. \n\nI kept my hips pressed against her as I reached out and held tightly to her hips and pulled her toward me. Roxy then wrapped her legs around my waist and pressed her heels against my back.\n\n\"Fuck me!\" she moaned. \"Please fuck me!\"\n\n\"Like THIS?\" I asked as I started thrusting deep and hard into her hot, wet hole.\n\n\"YES! YES! FUCK ME HARD!\" she yelled, her hands slapping against the bed as her legs pulled me in tighter.\n\nI watched her tits shaking and bouncing on her chest as I continued thrusting hard into her, and her eyes started rolling back into her head.\n\n'Oh shit! Ohshitohshitohshit!'\n\n\"Oh yes! I'm cumming!\" she exclaimed as a layer of sweat formed on her chest. \"Fuck me!\"\n\nI pulled her a little closer to me and leaned in to her as I continued thrusting in to her and I reached up and started pinching and pulling on her hard nipples.\n\n'NNNggggHHHHOOOOOHHHHH! YES!'\n\n\"NNNggggHHHHOOOOOHHHHH! YES!\" she yelled. \"Oh fuck! I'm cumming! Oh shit!\" \n\nI could feel, as well as hear, my cock sloshing through her juices as I continued pistoning in and out of her. Her pussy was squeezing around my shaft as I thrust deep inside her and her orgasm swept over her body.\n\nA minute or so later, I slowed down to let her come down to Earth and catch her breath.\n\nI wanted to see what she wanted next, but the only thing that I could 'hear' from her was a buzzing sound, like her brain had shut down.\n\nI felt her legs unlock around my waist and start to slide down my back, and I took the opportunity to slowly slide my cock out of her.\n\nRoxy moaned as my shaft slid out of her pussy, and her body seemed to melt into the mattress. I gently rolled her on to her side and straddled her bottom leg, bending the other one and placing it on the bed. \n\nAs I reached my hand down and grasped my cock, I felt my pubes\u00b8 sticky and soaked with her juices. \n\nStepping back in to her, I plunged my pole back inside her pussy, once again burying it in one swift thrust.\n\n\"Oh FUCK!\" she yelped.\n\n'Ohhhh damnnnn!'\n\nI started taking long, slow strokes in and out of her as I slid my hand down to her ass. Roxy moaned softly as my thumb started sliding across her asshole, now wet and slick with her pussy juices.\n\n'Ohhhhh yesssss! That feels sooo goooood!'\n\n\"Do you like that?\" I asked softly.\n\n\"Yes!\" she replied quickly. \"You're sooo gentle with my ass!\"\n\nI slowly slid my cock as deep as I could get it in her pussy and started gently pressing my thumb a little harder against her tight rosebud.\n\n\"Oooohhhhhhh!\"\n\n'MmmmOOhhhhhh!'\n\nKeeping my rod buried deep inside her pussy, I slowly started pressing my thumb a little harder against her asshole, until it eventually began to enter her tight hole.\n\n\"Yessssss!\" she hissed softly.\n\nIt wasn't long before my thumb was as deep as it was going to get in her ass, and I started slowly sliding my shaft back and forth in her pussy again.\n\n'Oh my god, that feels so good!'\n\nI then started moving my thumb in an opposite motion from what my cock was doing, as I slid my cock out, I pushed my thumb deeper, and as I slid my cock back in, I would back my thumb up a little.\n\nRoxy was moaning louder, trying to move her hips in some kind of matching rhythm to my actions.\n\n\"Ohhh yessss!\"\n\nI continued fucking her like that for a few minutes, until I slowly slid both my cock and my thumb back, until just the tips of both remained inside her.\n\nJust as she was starting to realize that both holes were almost empty, I thrust my hips forward and plunged my thumb back in at the same time, filling her up again.\n\n\"Shit! Yes!\" she gasped.\n\n'Oh fuck! That feels so good being filled like this!'\n\n'Tell him what you want,' I told her.\n\n\"Oh fuck me baby! Fill me up!\" she moaned softly.\n\n\"How do you want me to fuck you?\" I asked as I continued thrusting both my cock and my thumb into her at the same time.\n\n\"Ohhh, fuck me deep!\" she gasped, reaching down and place a hand on my ass.\n\nI kept my thumb deep in her asshole as I began sliding my cock in and out again, taking long strokes as I moved my thumb.\n\n'Oh shit! He's going to make me cum again!'\n\n'Tell him. Cum loudly for him!'\n\nI started fucking her pussy a little faster, still taking long strokes and pushing my thumb harder against her ass.\n\n\"Oh god, I'm going to cum! Fuck me, baby! Fuck my pussy good!\"\n\nWhen she said that, I started thrusting harder into her. Roxy started moaning and gasping louder, until her body suddenly stiffened.\n\n\"NNnnnnGGgggAAAAHHHHH!\" she yelled, her body beginning to shake. I could feel her pussy and ass clamping down on me, and her juices gushed out of her.\n\nAs her body started relaxing, I tried 'listening' to her thoughts again, and again, all I could hear was a buzzing sound.\n\nRoxy let out a long, low, moaning sigh as she moved once again.\n\n'Holy shit! What does he do to me?'\n\n\"I take it you liked that?\" I asked, bucking my hips against her.\n\n\"You think?\" she laughed, looking up at me. \"I think I soaked your sheets!\"\n\n\"Well, that's a good sign,\" I told her. \n\n\"Oooohhhhh!\" she sighed again as I slowly slid my cock out of her.\n\nWith my thumb still deep in her ass, I slapped her ass cheek and told her to roll on to her belly.\n\n'Ohhh! He's going to take my ass!'\n\nAs she lay flat on the bed, I slid my thumb from her ass and grabbed on to her hips with both hands. I then pulled her back toward me until her feet were on the floor.\n\nI massaged her ass cheeks with one hand while I reached for the jar of oil with the other. Releasing her ass, I opened the jar and slowly started pouring the oil over her ass, letting it flow down her crack.\n\nRoxy moaned softly, and hissed, \"Yesssss!\"\n\nI put the jar back on the table and started sliding the head of my shaft up and down her slick crack, coating it in the oil.\n\n\"What do you want?\" I asked her.\n\n'Your cock!'\n\n\"Ohhhh! Fuck me!\" she moaned, wiggling her ass at me.\n\nI lined up my cock with her pussy and thrust it in, slamming my hips against her ass and causing her to gasp and yelp again.\n\n\"Is that what you want?\" I asked her.\n\n\"Yes!\" she replied.\n\nI kept my shaft buried deep inside her and started wiggling my hips back and forth.\n\n\"Ohhhhyesssss!\" she moaned, pushing back against me.\n\n'Tell him what you want! Be his dirty slut!'\n\n\"Oh, baby! Fuck my ass!\" she moaned a couple of seconds later.\n\nSmiling, I stuffed my thumb back in to her slick asshole. \n\n\"This ass?\" I asked, pushing my thumb hard and deep.\n\n\"Yes!\" she replied.\n\nKeeping my cock buried inside her pussy, I slid my thumb from her ass and replaced it with two fingers. Roxy started moaning and clutching the sheets.\n\nI slid my shaft back until just the head was still inside her and I began finger fucking her ass. My fingers slid smoothly and easily in her ass as I pumped them in and out and twisted my wrist around, and it wasn't long before she began pushing back at me.\n\n'Ohhh soooo goooood!'\n\n'Tell him!'\n\n\"Oh fuck me!\" she moaned a couple of minutes later. \"Fuck my ass!\" \n\nI pulled my fingers out of her ass and wrapped them around the base of my cock. I then slowly slid the head of my cock up and down, dragging her juices along with it, until it rested nicely in the dimple of her ass. \n\n\"Is this what you want?\" I asked, rubbing the slick tip of my shaft around her back door.\n\n\"Yessss!\" she replied loudly.\n\nWith one hand holding my cock at her tight back door, I grabbed her bunched up skirt with my other hand and gently started pulling her back toward me while I leaned in to her at the same time.\n\nRoxy gasped and tensed up a little as the tip of my cock started to push in to her asshole.\n\n'You have to relax. He'll go slow if you tell him to.'\n\n\"Oh damn! You're so thick! Go slow, baby!\" she moaned as she pushed back at me.\n\n\"As slow as you need,\" I told her.\n\n'Reach down and play with your clit' I told her. 'That should help.'\n\nRoxy stopped pushing back for a second as she slid one hand under her body and started rubbing her clit. \n\n\"MMMmmmmm,\" she moaned as she soon started raising her hips and pushing back at me again.\n\nSoon, her ass relaxed and the head of my cock slipped in past the ring. Roxy gasped and moaned, laying still for a second, and then began moving her hips again.\n\n'Oh shit! He feels so damn good!'\n\nI stopped pushing in to her, letting her control the pace. It wasn't long before enough of my shaft was in her ass and I could release my grip on my cock.\n\nI now had both of my hands holding the waistband of her skirt as she continued to slowly push back.\n\n\"Oh my god! That hurts so good!'\n\nI slid my hands down to her hips and held her still for a second, and then started to slowly slide my slick cock in and out of her ass, taking short strokes at first.\n\n'Oh yes! Soooo gooood!' \"Ohhhhyeeeaaahhhh,\" she moaned softly.\n\nIt wasn't long before I felt her start to push back at me again, and I loosened my grip on her hips a little.\n\n'I feel soooo full!'\n\n\"How much more?\" she asked a couple of seconds later.\n\nLooking down, I saw a couple of inches of space between her ass and my pubes, and her fingertips peeking out as she continued playing with her clit.\n\n\"Just about an inch,\" I told her.\n\n'Oh shit! He's still got more?'\n\n\"Oh god, just give it to me!\" she moaned as I continued stroking my cock in and out.\n\n\"Are you sure you're ready for it?\" I asked, teasing her as I took a few quick, short strokes.\n\n\"Ohhhhhhh!\" she moaned loudly.\n\n'Tell him what you want! Be his good slut!'\n\n\"Yes!\" she exclaimed loudly. \"Fuck your slut's ass!\"\n\nWithout any warning, I pulled back hard on her hips and thrust forward, burying the entire length of my cock in her tight ass.\n\n\"Oh shit!\" she yelped, slapping her free hand on the mattress.\n\n'Oh my god, he's splitting me in half!'\n\nI continued holding her ass against me, my hips tight to her cheeks, neither of us moving, so she could get used to having her ass filled again.\n\nI soon felt her fingers start rubbing her clit again, and I gently began to push into her.\n\n'Holy crap! I feel so full! So good!'\n\n\"Are you ok?\" I asked, starting to take short strokes.\n\n\"Yessssss!\" she hissed as she started raising up at me. \"Fuck me!\"\n\nStill holding on to her hips, I started taking longer strokes, eventually pulling back until just the head of my cock remained in her tight ass and then plunging the entire length back in.\n\n'Ohhhmyyygodddd!'\n\n\"Oh yes! Fuck my ass baby!\"\n\nI slowly slid my hands up her back and then grabbed her long hair, dividing it in two handfuls. \n\nI pulled back on her hair and she lifted her head.\n\n'Oh fuck! Yes!'\n\n\"You like that?\" I asked, pulling back on her hair.\n\n\"Yes!\" she yelled, raising her hips faster. \"Give it to me!\"\n\nI continued fucking Roxy's tight ass as she began rubbing her clit faster.\n\n'Oh shit! I'm gonna cum!'\n\nI knew that I wasn't going to last too much longer, so I stopped pumping into her and slowly slid my cock out.\n\nRoxy moaned as my pole left her ass empty.\n\n\"Roll over on to your back,\" I told her as I walked around the bed.\n\nI heard a sigh as I picked up a pillow, my stiff cock waving with every step back to the foot of the bed.\n\n'Ohhhh dammmnnn.'\n\nRoxy watched me as I stepped between her legs. \"Lift up,\" I told her as I placed the pillow by her ass.\n\nShe raised her hips and I pulled her toward me, putting her ass down on top of the pillow.\n\nI lifted her legs, placing her ankles on my shoulders, and then I slid my cock back to her opened asshole.\n\n'Play with your pussy again,' I told her.\n\nHer hand flew back down to her wet slit, and she started sliding her fingers up and down.\n\n\"Ohhhfuuuuuck!\" she moaned, tilting her head back as I slid the length of my cock back into her ass.\n\nI kept my rod buried deep inside her and started moving my hips sideways, pushing forward every couple of seconds.\n\n'Oh shit, he's going to kill me!'\n\nAfter a couple more minutes, I pushed her legs back and started moving my hips back and forth. Roxy began moving her fingers faster, starting to dip her tips into her pussy.\n\nBetween the sights and sounds of her getting closer to another orgasm, and the tightness of her ass, I knew that the end wasn't far for me and I began fucking her harder and faster.\n\n\"Shit! Yes! Fuck my ass!\" she yelled, sliding her fingers in to her pussy.\n\nI could feel her fingers sliding along the top of my cock as we both slid in and out of her hot holes, and I felt myself getting closer.\n\n'Oh damn! I'm going to cum so hard!'\n\n\"Oh baby! Yeeaaahhhh!\" she moaned, burying her fingers in her pussy.\n\n\"Oh, shit! I'm going to cum soon!\" I told her.\n\n\"Yes!\" she replied, her eyes flying open and locking onto mine. \"Cum, baby! Fill my ass with your cum!\"\n\n\"You first, baby,\" I told her. \"I want you to cum for me first.\"\n\n'Ohhhhyeeeaaahhhhh!'\n\n\"Oh my god! I'm there! Fuck me baby! Fuck my ass!\"\n\nI slowed down a little, taking the full-length strokes. A couple of time I pulled my shaft all the way out, plunging it right back into her ass.\n\n\"Yes! Yes!\" she screamed, trying to stuff her fingers deeper in her pussy. \"Fuck! I'm cumming!\"\n\n\"Oh god, I'm cumming!\"\n\nI felt her asshole clamping down tighter around my cock as her orgasm hit her, and mine wasn't far behind.\n\nI quickly heard the buzzing sound in my head again as her body shook, and my balls started to tighten.\n\n\"Ohhh shiiiit!\" I moaned as I felt my cock swell.\n\n\"Ohhdaaamn!\" I bellowed as I slammed forward, burying my length inside her as my balls and cock spewed their load into her asshole.\n\n\"Nngggggghhhhaaaahhhh!\" Roxy exclaimed as another orgasm swept over her.\n\nWe stayed like that, my hips pressed against her ass, my cock buried as deep inside her as possible, both of us shaking in climax.\n\n\"Oh my god,\" she moaned. \"I can feel your cock throb in my ass!\"\n\n\"Holy crap!\" I breathed a couple of minutes later, my shaft slowly softening inside her.\n\nRoxy's mind went back to the buzzing sound and her body collapsed as I slowly slid my deflated cock from her ass.",
        "\"MMmmmAAHHHH!\" she yelped as I pulled the head of my shaft out. \"Oh crap!\"\n\n'Oh damn! I can't move!'\n\nI walked in to the bathroom on shaky legs, and after a quick shower to wash off my cock, I went back to my bedroom to join Roxy, where I found her asleep, not having moved since I pulled out of her. "
    ],
    "authorname": "cuninglinguist61",
    "tags": [],
    "category": "Anal",
    "url": "https://www.literotica.com/s/mental-manipulations-ch-04"
}