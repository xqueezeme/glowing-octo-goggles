{
    "title": "Victoria's Self Bondage Games Ch. 04",
    "pages": [
        "Jessica game me a couple of days \"off\" to recover from the park bondage game. I had some scratches to heal. I also needed to deal with the fact that her boyfriend had fucked me. Lastly, I'm sure she knew a couple days off from thinking about sex all the time would help me recharge my batteries. That part didn't work, sex was on my mind constantly. I keep hearing that women's sexual peaks are in their mid 30's. I can't imagine it being even greater than what state I was in now.\n\nShe came over on a Friday night. She let herself in. She saw me on the couch. \"I see the neighbors must be aware of some of your activities,\" she chuckled.\n\n\"Oh god, why do you say that?\"\n\n\"You know those young guys, probably your age, with the apartments right across from each other?\"\n\n\"Yeah?\"\n\n\"They used to hang out all the time in the front, on their porches. Now I see they've set up lawnchairs in back.\"\n\n\"That might not be because of me,\" I protested.\n\n\"True, but I've NEVER seen them back here, there's only a view of the parking lot there...and...you of course. So which should I assume they've been watching?\"\n\nShe saw my eyes, wide. \"It's not a bad thing, babe. I was just pointing it out. It was kind of our aim, anyway. I've been thinking...\"\n\n\"Oh god,\" I moaned. \"I know where your ideas lead.\"\n\n\"Just following your example, dear,\" she laughed.\n\n\"So what have you been thinking?\" I asked excitedly. Honestly, I couldn't wait for the next thing, whatever it was.\n\n\"Well those boys out there made me think of something. Think of what you've done, since the bondage thing with Cam. You've got him, the first pizza dare guy who left without getting any. Then, there's the second dare where you sucked the guy off...what was his name?\"\n\n\"Oh god, I have no idea,\" I admitted shamefully.\n\n\"We'll call him \"guy three,\" then, for clarification,\" she laughed, enjoying my embarrassment at having sucked someone without even knowing their name. \"Then there Steve, of course, and Bill. Finally, there's Todd and Tyler.\"\n\n\"I didn't do anything with them!\" I reminded her.\n\n\"I didn't say you did. Oh, plus the new voyeur neighbors.\"\n\n\"Ok, they are all guys, yes,\" I said questioningly. I didn't know where she was going with all this.\n\n\"What I'm saying is, there are already a lot of guys out there who want a crack OR another crack at you. We need to make that happen, we've had some requests for it on the site.\"\n\nShe was making me wet. I couldn't help it, when we talked about sex, I knew it was always going to lead to something awesome.\n\n\"They all want you. Oh, and by the way, we are getting flooded with those suggestions on the website. They mostly want more of the delivery dare but quite a few really want to see you get fucked.\"\n\n\"Mmm, that sounds so good, I want to see that, too,\" I giggled. \"I really want to suck some more cock, though, and soon. I really have a taste for it.\"\n\n\"I know, I know you,\" she smiled. \"Hey, that was my other thought. The blow bang thing.\"\n\nI grinned and air quoted, \"the blow bang thing.\"\n\n\"I'm serious. I know that's a killer fantasy for you, but it's still kind of vague, in my head. Hard to figure out the reality without more information.\"\n\n\"Well, obviously I want to suck more than one cock.\"\n\n\"That's not quite what I mean,\" she said, more seriously. \"If you want this, and I can make it happen, you can be more helpful. I know it's more than one cock. But, is it a blow bang, like, there's a half dozen guys standing in front of you and you work your way down the line on your knees taking care of them? Is that it?\"\n\n\"Oh fuck,\" I hissed. My hand instinctively went to my underwear. \n\nShe playfully pulled it away. \"Not now, we have business to discuss,\" she chided. \"So that's it?\"\n\n\"Well, that's fucking hot, for sure. I have several thoughts that I've kept in my head about it, though. That's one way, for sure. Another way is, I end up sucking a lot of cocks, one after the other, but all separate episodes, ya know?\"\n\n\"You mean like our delivery dare thing, where we just keep calling them, over and over, until you are satiated?\"\n\n\"Fuckkkk, yes, just like that. No one guy knows about the other. For me, it's just having to repeat the process a number of times.\"\n\n\"How many times? In your head, I mean. Reality can be different.\"\n\n\"I never really thought about it...it's more than 3...less than 10...probably. I guess when I fantasize about it I probably have orgasmed by the time it got to be that many,\" I laughed.\n\n\"Are there others?\" she asked probingly.\n\n\"Yes, one more. I imagine I'm somewhere in a public setting, with lots of people, meaning lots of guys. Somehow I end up getting pulled somewhere, just out of sight to suck a cock. Word gets out that there's a slut sucking cock and I never leave that spot, guys just keep replacing each other and I stay there, on my knees, until it's over. They are never together, though, it's still one at a time.\"\n\n\"Nice,\" she smiled. \"Ok, I can see how the first one and the third one will be hard to manage. In the first one, it would have to be a setup. Everyone having to be on the same page. If it was all people we knew, that obviously would be very embarrassing. But, if it were strangers, who knows how, or if that would work. It could easily get out of hand, or, for your sake, you could get a bunch of limp dicks,\" she laughed.\n\n\"And three?\" I asked.\n\n\"Similar problems. Where, exactly? Who is not going to know you? Or, when word gets out, who is going to stop the wife, or the girlfriend of the guy you are blowing to bust in screaming and fighting? Again, it would have to be a situation where we at least knew the guys were willing and able to do it, at least a LITTLE bit discreetly.\"\n\n\"You are a buzzkill,\" I joked. \"I know it seems impossible, that's probably why I haven't done it.\"\n\n\"I didn't say impossible, I said it was problematic. One really easy solution is that you deal with the embarrassment of doing it with people you know. I just mentioned people who would be totally into it, if you could get over, or at least learn to deal with, the embarrassment of it.\"\n\n\"I AM learning to. I'm finding that the embarrassment is often the goal. That it seems to be the driving force for getting me wet,\" I admitted. \"Wait, so what about the second one? Any problems with that?\"\n\n\"We already have a setup for that one. The delivery thing. There's no reason we couldn't start in the afternoon and call different places until you've gotten your, um, \"fill,\" so to speak.\"\n\n\"Yes, I've thought about that since when we did the one with two different guys. I didn't really want to stop...\"\n\n\"Then why didn't you tell me?\" She asked.\n\n\"Embarrassment, I guess.\"\n\n\"You have nothing to hide from me, Victoria, if you want something I'll try to make it happen.\"\n\n\"I know, I should've, I will next time.\"\n\n\"Good. Now take those clothes off,\" she ordered.\n\nI knew better than to question her, she was like my keyholder. All this brought out a dominance in her I didn't know existed. Her ideas always led to something good. She had me strip for inspection. She eyed me up and down. She turned me around. She caressed my back and my ass, finally my tits. She was checking if I still had scratches. I did, but they were healing and almost unnoticeable.\n\n\"Just checking the goods for our online customers,\" she joked.\n\n\"So we are getting a lot of business? That's great!\"\n\n\"Well, truthfully, the money flow has slowed a bit because the last video we sold was the one of you and Steve acting out the pizza thing. One idea is that we can make quick ones like with you stripping, or masturbating, those would sell, but would be cheaper.\"\n\nI spent the next hour with her videotaping me stripping and masturbating. She made me fake it, though, she loved keeping me on edge. She knew she could tell the real ones.\n\n\"Ok wow, now you have me really worked up,\" I complained.\n\n\"Well all of it is up to you. I think I'm best at planning the detailed, more risky ones, but in between those you may need to get what you need with your own ideas. Like now, you are lusting for sucking cock. How do you want it?\"\n\n\"Well honestly, I've \"only\" sucked off three guys in the last three weeks. Steve, Cam, and the other guy. Hell, I give more head to Jack in a week, when we are together, that is, than I've done lately. Odd that my sex life has opened up, but the quantity is down,\" I pouted.\n\n\"Well, I point out every time that we can always do the delivery thing. That's a standing offer. It sells, it's easy, and we can control how many or how long it takes to do it.\"\n\n\"I really do love it,\" I admitted. \"I'm just so charged up for something new, though.\"\n\n\"Funny thought,\" she said, smiling. \"Do you still have any contact with those fraternity guys?\"\n\nShe was referring to a party where I'd sucked off two different guys the night of the party, one the next day, and even dated two others, later.\n\n\"Gosh no,\" I said, red faced from remembering it.\n\n\"Seems like that might be an easy setup, doesn't it?\"\n\n\"Yes, gosh, no, I don't know, really. It's so embarrassing to think about.\"\n\n\"But you are getting wet right now, thinking about it, aren't you?\"\n\n\"Yes,\" I said softly.\n\n\"Let me see,\" she ordered. \n\nI was surprised, she had kept saying she wasn't \"into\" that. I opened my legs. My finger slid down my slit, it was wet. She just smiled.\n\n\"You really are sexy,\" she grinned. \"Wars have been fought over beauties like you. You're our very own Helen of Troy.\"\n\nI closed my legs but she told me firmly, \"keep them open.\" We sat and chatted for the next fifteen minutes. I could see her occasionally eyeing my pussy. It made it tingle even more. \n\n\"Let's run through them all, then,\" she said. \"First, say I lined up some guys. Obviously I'd either know them, or some of them having been vouched for. Then I parade you out and you work down the line, pleasing them. What would be your issues with that?\"\n\n\"Oh god, I don't know. It's so raw, so exposing,\" I said, trying to figure out what they were, myself. It's a big step, from then on I could no longer hide the fact that I've become this kind of slut. Strangers is one thing, I may never see them again. But, to have to show up at gatherings with some of them there...whew...like I said, it's a big step.\"\n\n\"True, it is,\" she admitted. \"All of this is building to it, though. I can see how wild it makes you.\"\n\nMy legs were still open, I was absentmindely sliding my fingers over my lips.\n\n\"Already there are several delivery places who know all about your actitivies. I'll bet the staff at those places know all about you and have made a special note of your number, if you should call again.\"\n\n\"Fuck, I know, I thought about that too,\" I said.\n\n\"The neighbors here, especially those young guys probably know quite a bit, too. Same with Tyler, Todd, Bill. You'll see those guys again!\"\n\n\"I know, I'm so dreading seeing them, even Steve now, with what I've done. Do you think Tyler and Todd know what the other two did to me?\"\n\n\"Knowing guys, absolutely.\"\n\nI blushed in shame.\n\n\"So you see, you are trying to hold onto a vision of yourself that just isn't real anymore. I don't blame you for any of it, though. I certainly couldn't do the things you've done. I think you are brave. I would love a lot of those things, too. I'm sure that shocks you, but I just don't have the guts, or the beauty that you do.\"\n\n\"Bullshit, you get probably the most attention at parties!\" I protested. She really is beautiful, more classically. She has long, brown hair, she's tall, like a model. She has the most amazing legs. Her face reminds me of Lily James. Her tits are smaller than mine (most are) but they are pert and sexy and she can wear any top she wants and still look great.\n\n\"Regardless, I lack the courage you have. I'm just saying that all this is leading to your exposure as a slut. People were bound to find out anyway. You have two options and I'll support you either way. One, you quit all this, immediately, before it goes too far. The second, you just hop on, and go for the ride. I love you either way.\"\n\nI lowered my head bashfully. \"I...don't think I can stop.\"\n\n\"I don't think so either. I think you'd be able to resist, for a time, but eventually you'll find yourself back to where you are now.\"\n\nI nodded. \"I'm so horny to suck a cock right now I could burst.\"\n\n\"I agree, you look...ready for it,\" she said, eyeing my pussy lips again. \"So you agree you'll start forcing your limits, that familiarity isn't off limits anymore?\"\n\n\"Yes,\" I peeped. \n\n\"Good, give me a minute,\" she said. She went into the den and made a call. I could hear her talking.\n\n\"You're in luck,\" she said when she returned. She had me put on a pair of sexy panties, the rest was open and free. I sat on the couch with my back to her. She was massaging me, my shoulders, my neck, my back, with me sitting. The whole time she was encouraging me, coaching me to relax and enjoy the experience. Her hands were soft. Her touch was experienced. I could feel her hot breath on my neck as she got close. She was making my pussy hum harder. Finally, she checked her watch. She led me to the glass door and had me kneel. She instructed me to keep my hands on my knees, push my chest out and wait. It wasn't long. Her dominance was becoming intoxicating.\n\nI heard a car pull up. I saw his eyes light up when he saw me, like that. He tapped on the glass. I told him to come in. It was Cam, the guy from the first bondage game.\n\n\"Whoa, the first time I didn't think it was real, now, I'm glad it is!\" He grinned.\n\n\"No more pretenses,\" I said. \"Do you want your cock sucked?\"\n\n\"Fuck yeah,\" he groaned. He took it out. I remembered how nice it was, I couldn't wait. I took him in my mouth, not using my hands just yet. As always, the blinds were open, we were just on the other side of two panes of glass door. Nothing blocked the view. I gave him head like I was starved for it, which I was. I wasn't going to wait so long between times from now on, I promised myself. My pussy was soaked. Mostly from the thought that this guy now had me more than once, and now knows the \"real\" me, the cocksucking slut I am, not the one from before who pretended it was all accidental. I wondered how he'd use that information from now on.\n\nI knew Jessica was filming the whole thing as he erupted in my mouth for the second time...and probably not the last. I stayed on my knees the whole time, even as he left and I licked his cum from my face. He hadn't even brought pizza! Jessica came out smiling. She had me rehearse a bit for the website.\n\nThen she pointed the camera at me.\n\n\"Hi guys, it's Tori again. As you saw, I just sucked off another pizza guy. You guys have been asking for more. I've actually sucked him off before (though the website audience hadn't seen it, Steve had replaced him in the re-creation of it). \" I thought you'd get a kick out of that, that I'm building a reputation at these places. Keep the suggestions \"cumming!\"\n\n\"Nice touch,\" Jessica laughed. \"So how does it feel, knowing that some guy knows you just love to give head? You know he'll expect more now?\"\n\n\"I know,\" I sighed, my face red. Being red haired, for some reason I blush easily. \"It feels...sexy. I'm ashamed, I'm scared, I'm turned on. My pussy is totally wet from it, though.\"\n\n\"I specifically asked for him. I'm sure the place knows all about you. I'm sure he was hard all the way over here,\" she laughed. \"So...are you ready to do more? I'm thinking of the blow bang thing.\"\n\nI was licking my lips at the time. \"Do we have time for that, even?\" I wondered.\n\n\"It's friday night, we don't work tomorrow,\" she pointed out. \"We can also do the intro after the fact.\"\n\n\"I don't know about the blow bang, but I'm ready for another,\" I said, I was still hungry.\n\n\"Well get ready, I'll be right back,\" she said. \"Do not try to put your clothes on,\" she warned. She wanted as much possible exposure as possible.\n\nJust a note about our apartment complex. I live in a complex that has three buildings, in a \"U\" shape. There are another dozen of those \"U\" shapes throughout the whole complex. My particular collection of buildings is in an adult section. No kids. The apartments with kids are in the ones closer to the front, near the pool and play area. Mine is the last group of three, tucked in the back. As I've said, a main road runs past the side of my apartment, but it's blocked by the bushes. I'm saying this because, even with all my exposure, there was very little chance of anyone underage seeing me. I'm just putting that out there.\n\nJess returned with a smile. She handed me the cuffs and the timed padlock from the park episode. \"Lose the panties for this one,\" she grinned. Again, she positioned me in front of my window entrance. I clicked the cuffs on behind me. She was standing behind me. \"Here's the game for this one. When I see him pull up I'll start the timer. I'll give you ten minutes. See if you can make him cum in that time. If not, the penalty is you have to ask him to fuck you.\"\n\n\"Oh fuck, Jess. You are so dirty.\"\n\n\"You love it!\" She laughed. The car arrived, she started the timer and disappeared to film it.\n\nIt was the same guy from Tropical Smoothie that I'd sucked off. She was giving guys repeat performances on purpose. That was why she left, the place is right around the corner from my house, she must've made sure that he was working, since I didn't remember him telling me his name.\n\nSure enough, he grinned when he saw me. He came right in. \"I was right the first time, wasn't I?\" He said, lifting my chin to meet his intense gaze.\n\n\"MmmHmmm,\" I nodded.\n\n\"I was right when I said you were doing this on purpose, I fucking KNEW it,\" he said, congratulating himself.\n\n\"You were, but I sucked you off that time,\" I said. \"It wasn't like I was a tease.\"\n\n\"No, you most certainly were not. I should've guess by the way you gave head, you could be a fucking professional.\"\n\n\"I'm not,\" I giggled.\n\n\"But you are going to suck my cock again, aren't you?\"\n\nI liked the way he said it, not a question really, more of a direct observation.\n\n\"Yesss,\" I purred.\n\n\"You love the bondage thing too, I see. Girl after my own heart,\" he admitted. \"I'm betting you want it like that, without the hands.\"\n\nI nodded.\n\n\"I'm ok with that,\" he grinned as he took out his cock. I could still taste Cam on me when I took this guy in my mouth. I still didn't know his name, that thought made my pussy gush. I worked him good. He was holding my head on the sides, guiding himself in.\n\n\"Fuck, that body is amazing,\" he said. \"Those tits, that ass...fuck,\" he hissed. \n\nI was lost in the pure joy I get from giving head when the lock suddenly opened. It had been ten minutes. We'd wasted too much time at the beginning, talking. He slipped out of my mouth. \"What's that for?\" He asked, pointing at the lock. \n\nI probably wanted this more than he did. \"It's a timed lock. That was the time limit for me.\"\n\n\"To what? Get me off? You're fucking kidding me.\"\n\nWhat should've been obvious to him was that I was still cuffed. The lock had nothing to do with the cuffs. I was still helpless. Also obvious should've been my lust. There was no way I was stopping this. I explained the lock, how it worked. He was eyeing me suspiciously the whole time.\n\n\"I just like the games,\" I sheepishly admitted. \"I gave myself ten minutes to get you off like that...if not...\"\n\n\"If not, then what?\" He asked, with obvious motivation.\n\n\"Then I have to ask you to fuck me. It's like a penalty I gave myself if I failed.\"\n\n\"Fuck, that's wicked. Wicked, cool. So do it, ask me. You HAVE to, right?\"\n\n\"I do,\" I said shamefully. \"Will you fuck me now?\"\n\n\"You need to do better than that,\" he urged while circling behind me. He was eyeing his prize.\n\n\"Will you please fuck me, sir. Take my pussy and fuck it good, like you said you wanted to the other day.\"",
        "\"Better. Yes, I've wanted to fuck you since I saw you. This is going to be so fucking great,\" he said triumphantly. \"I assume you are going to want the cuffs on the whole time. It wouldn't have mattered, I wouldn't have let you take them off anyway,\" he grinned lewdly.\n\nThe dominant tone just increased the fire in me. He lifted me up by my arms and bent me over the kitchen table. I was laying on the table, my ass out and spread invitingly for him. He was behind me, I could feel him sliding his dick up and down my slit.\n\n\"Fuck, you are wet. You totally get off on this. I'm going tear this thing UP,\" He grunted as he slid himself into me slowly, till he was fully inside. Then, little by little he inched himself back out until his head almost popped out. Then he repeated the process, over and over. In slow, fully, then out, to the point where he had me backing up into him not to let him slip out. He laughed at that, that he had me on the end of his dick, urgently trying to keep him inside me.\n\n\"Don't worry babe,\" he hissed as he grabbed me by the hair and pulled me up so that he was right in my ear. \"I'll be inside you long enough. I'm going to take my time hitting this. I've been waiting for this opportunity, I'm going to make the most of it.\"\n\nHe did. He rode me long and hard. The way he built up the tempo was masterful. Finally, he was lifting my ass up off the table with each thrust. I could tell he loved the way I grunted when he did so. It encouraged him to take it even harder, deeper. Embarrassingly, I came on his dick. My pussy had been rubbing the edge of the table and each thrust sent shock waves through my clit.\"\n\n\"God, the things I could do with a body like this,\" he said frantically, his hand full of my red hair as he drove it into me.\n\n\"Do it, do it like you need it,\" I urged.\n\n\"Oh fuck fuck fuuuuuuck,\" he groaned as he slammed it into me. His cum filled me. I could feel its hotness almost burning my insides. He still had my hair, like the reins of a pony he was breaking. He rode me down, slowly, softly, as his cock shrank. Finally, reluctantly, he pulled out. He stepped back and admired his handiwork. I was panting, my face red with effort. I was wet and dripping. He grinned. He walked around the table to look me in the eye. I just laid there, spent.\n\n\"I get the feeling you'd like more of this but you struggle with the embarrassment of admitting it.\"\n\n\"Yes,\" I said softly.\n\n\"Ok, when you want it, you just call, ask for RJ.\"\n\nI finally knew his name, sort of. After sucking him off and having him fuck the shit out of me, I at least finally knew what to call him.\n\n\"Ok,\" I said, embarrassed that I was fully naked with his cum running down my legs, while was just cool as a cucumber, fully clothed now, and in charge.\n\n\"And keep those cuffs close...and that padlock. Next time, when you call, maybe I'll give you a time limit again, if I can hold out, maybe the penalty will be your ass next time.\"\n\nMy pussy twitched. \"Oh god,\" I said. I wondered if I could take an ass fucking like he just gave to my pussy. I knew I'd like to find out, though. He left me just like that, not even bothering to uncuff me. I liked that, he got what he wanted and needed, and then he was off.\n\nJessica and I were just starting to celebrate my success when suddenly she saw a figure in the distance approaching. She ducked back into the den. I was standing there, nude, still dripping when a guy tapped on the glass. My mind was spinning, but I knew the lecture I'd get from Jess if I ran to get clothing. I looked out, it was Chas, one of my neighbors Jess was talking about earlier. He was one of the four college athlete guys. He was a big dude, hard to call him chubby but he was large, he was a lineman for the football team. There was fat on him, for sure, but he was also totally muscled up, not usually my type. I realized at that moment that I probably no longer HAD a type. I just slid the glass door open a crack.\n\n\"Yes?\"\n\nHe could see everything. My big tits heaving, my brow sweating. If he looked close enough he'd probably be able to see the rivulets of cum running down my inner thighs.\n\n\"Um, can we talk?\" He said, somewhat urgently.\n\nI let him in. \"Ok, so what?\" I asked. He was ogling me something fierce.\n\n\"Look, you've been kind of...uh...active lately,\" he said with some obvious discomfort.\n\n\"Yeah?\" I asked. I knew what he was getting at.\n\n\"I don't know if you know this, but when your blinds are all the way open like that, at the right time of day, you can see everything that goes on in front of the glass.\"\n\n\"No I didn't,\" I lied. \"Oh god,\" I said, feigning horror. \"You didn't just see...\"\n\n\"Yes, I saw you sucking some delivery guy and him fucking you. You had handcuffs on. Are you all right? I thought about calling the police but...uh...it looked like you were really enjoying it.\"\n\nI avoided his gaze with shame. \"I did,\" I admitted. \"I like those kind of games.\"\n\n\"Yeah, I can see that. I've also seen quite a bit of you lately, walking around your apartment.\"\n\n\"Why you big peeper, pervert,\" I chided.\n\n\"Hey, I'm not the one flashing everyone and having sex with delivery guys. Yes, I said guys, plural. I saw you suck some other dude off, too. It wasn't the same guy either, so I know it's not like your boyfriend or something. You are doing this to different people.\"\n\n\"Ok, so you got me,\" I admitted. \"Like I said, I kind of like the game playing. What do you want, to warn me?\"\n\n\"Yes,\" he said. \"You know I can easily tell Mr. Crampton. He's an old religious dude. I doubt he'd want one of his tenants performing sex shows in his apartments.\"\n\n\"You are threatening getting me evicted?\"\n\n\"No, well kind of,\" he admitted. I haven't had a girlfriend since high school and...when I did, she had red hair like you...so I often think about you when I...\"\n\n\"Oh god,\" I realized. \"This guy is masturbating to me.\"\n\n\"So what I'm saying, well offering is, I don't tell Old man Crampton, and you just give me some of...you know...what the other guys got.\"\n\nI didn't have to debate it. It was part of Jess's plan all along anyway. I led him to the couch. It was still in camera range. \"How do you want it?\" I asked.\n\n\"Head,\" he said excitedly. \"I want you to suck me off like you did those other guys.\"\n\nI knelt in front of him and pulled his shorts down to his ankles. Luckily for me, his cock was thick, like him.\n\n\"No, not like that,\" he complained. \"The cuffs, I love the idea of the cuffs.\"\n\n\"Oh, kinky, cool,\" I grinned. \n\nAnd so it was I sucked another lucky customer. Chas didn't want to cum in my mouth, instead he shot it all over my face. He left me there, dripping. I was getting used to being used like that, I kind of preferred it like that without all the mindless chatter, after.\n\n\"Just so we're clear,\" he said. \"I don't catch you giving free shows we're ok, but if I DO, you know I'll have to bring it to your attention...again.\"\n\n\"And so we're clear, you don't tell ANYONE else about this or that will never happen again, regardless of what you tell the old man. This place is a dump anyway, I can move at any time.\" \n\nWe were clear. Jess bust out of the room laughing hysterically. \"Oh my god, that was so fucking great!\"\n\n\"For you, maybe,\" I said disgustedly.\n\n\"Oh hush, it was great. I saw you moving your ass when you were sucking him. You were totally getting off on it.\"\n\n\"I know, I was,\" I admitted. \"I can't help it, I'm so fucking turned on. But knowing that he's seen me, and he knows about me. God, they ALL know about me. This is so embarrassing.\"\n\n\"It is. But it's what you need. LOOK at you. Look at how hot this has made you. I'm going to call this video, \"Tori's extortion suck.\" You are a fucking national treasure. So is this it? Is this the blow bang thing? Are we doing more?\"\n\nI didn't want to disappoint her. I actually debated doing it. But I said, \"actually the fucking got me even hornier. I'm going to have to take care of myself. Plus, I only sucked two dicks off, RJ got to cum in my pussy, which I should really clean off. It's been gushing ever since.\"\n\n\"Nice that you finally found out his name...sort of,\" she cackled. \"That's ok, we got three good videos out of this instead of one good long one...though I know how you like good, long ones,\" she joked. \"I'm fine with us stopping, don't ever let my eagerness talk you into something you don't want to do. I'm living this stuff through you, but I don't want to push you past where you were wanting to go anyway.\"\n\n\"I know, I won't. My pussy is just so worn out from that fucking, god that was magnificent. My clit, however, is raging. That guy is kinky, I think the viewers might see some of him again. Did you see what he threatened? That he'd take my ass next time?\"\n\n\"I did, you've created quite a monster.\" \n\n\"I don't think I could take another pounding like that, which is always a possibility, strange though that my pussy is still humming, and my clit is electric.\" IT still wanted more, even if I didn't. \n\nShe had me lie on the couch, face down. First, she went and got a warm, wet washcloth and cleaned my sore pussy, much to my embarrassment. Then she massaged me from head to toe.\n\n\"Why are you doing this?\" I wondered. She seemed quite happy and willing to put her hands on me lately.\n\n\"I dunno,\" she said, probably just as confused. \"It just feels...so good...you know?\"\n\nEvery time she stroked up my inner thigh and I had to spread my legs a bit to let her massage me I felt my pussy quiver. She kept getting closer to the lips each time. I'd fooled around with other women a couple times my freshman year. I had no problems with it, I was just so into men that I didn't pursue it further. Her hands massaged my butt cheeks lovingly, tenderly. She traced her fingers up the small of my back which gave me wonderful goosebumps. Then she moved back to my legs. I was spread pretty wide. I knew she could smell me, from my naughtiness before.\n\n\"Um, Jess...you are kind of making me wet again.\"\n\nI was expecting a, \"jesus woman, when are you ever NOT wet,\" but instead she softly said, \"shhh, I'll take care of that.\"\n\nThis time her fingers grazed my pussy while she was massaging. I wiggled a bit in frustration. She smacked my ass with her palm, playfully. \"Hold still!\"\n\nThis time her fingers lingered. She was no longer massaging, she was lightly caressing my outer lips with her fingers. I clutched the comforter on the couch from lust. Then, she slid a finger down my slit. It was wet. She pulled it out and put it in her mouth.\n\n\"Wow,\" she whispered. \"It's like honey. Do they all taste like this?\" She wondered aloud. I knew they didn't, I've tasted a couple.\n\nShe went back to stroking my pussy. She slid them easily up and down the slit, finally letting them penetrate me. Since I'd just been stretched by RJ's wonderful cock, they slid in easily. I moved my ass to adjust to the penetration. She finger fucked me that way, her thumb rested on my asshole. I bucked back against her instinctively. She took her fingers out of me and started circling my clit with them. Then, she penetrated me again. Back and forth, she worked my clit, then finger fucked me. It felt so good I was bucking against her hand the whole time.\n\n\"Oh god, oh god...fuck...\" I panted when I was close.\n\n\"That's it baby, that's it, cum for me, let it go, let all that wonderful slutty energy go for me,\" she cooed.\n\nThat put me over the edge, I came all over her expert hand. I was almost sobbing it was so intense.\n\n\"Naturally, you cum like an angel,\" she kind of smirked, but in admiration.\n\n\"I doubt that, I probably look like I'm having a seizure, especially that one, it was so powerful.\"\n\n\"No, seriously,\" she said. \"That was the most beautiful thing I think I've ever seen...or tasted,\" she said with a smile, before sticking her slick fingers back into her mouth.\n\n\"Um,\" I said with embarrassment. \"What brought all that on?\"\n\n\"YOU, you brought that all on.\"\n\n\"I thought you weren't into women,\" I said in confusion.\n\n\"I'm not. This is different for me, too. Do you know how hard it is to watch you do these things, things that deep inside I probably crave too? Don't you think that makes ME, kind of, wet too?\"\n\n\"I guess, I just didn't know. You hide it so well.\"\n\n\"Well tonight it was too much. Seeing you tied up all that time with that incredibly perfect body, seeing you suck cock like a pro. Then, seeing that guy bang you like that while your hands were cuffed behind you? It was all too much for me. I actually got myself off filming it.\"\n\n\"You did? Wow.\"\n\n\"Yes, it was a \"wow\" moment. I'm just glad he didn't hear me, I had to cover my face with a pillow.\"\n\nI looked at her. She was still hot, bothered. I'd only seen her like this with Steve. I felt like a total selfish diva.\n\n\"Do you want me to...return the favor?\" I asked.\n\n\"No,\" she said softly, with a tinge of regret. \"I don't think I'm ready for that yet.\"\n\n\"Because I will!\" I really wanted to, the thoughts of pleasing a woman like that brought back good memories from my freshman year.\n\n\"I know you will, but I have to really think about all this. It's all been so...crazy...you know? Crazy but wonderful. I'm not complaining. I just really love having some kind of control over what happens to that wonderful pussy of yours.\"\n\nI lowered my head. \"You DO have control of it. Totally, if you want it. It's always better when you do.\"\n\n\"Then this pussy is MINE...\" she purred, reaching out to stroke it gently with her fingers, \"...and this will be the last time you say no to the blow bang, or to any other thing. Are you good with that?\"\n\n\"Yes, ma'am,\" I peeped, once again wet with desire again.\n\nWe kissed each other good night. It was on the lips, as usual, but this time it lingered just a bit more than normal. I wondered what it all meant for me, for us, now.\n\n{End of Victoria's Self Bondage Games-Ch.04}"
    ],
    "authorname": "LaceAndHumiliation",
    "tags": [
        "bondage",
        "submission",
        "dominance",
        "bdsm"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/victorias-self-bondage-games-ch-04"
}