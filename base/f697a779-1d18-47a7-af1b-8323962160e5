{
    "title": "Jessa Ch. 09",
    "pages": [
        "When Jessa came out of the bathroom, finger combing her close-cropped hair, she could hear Erich's voice out in the suite. She pulled the belt of her robe tighter and padded to the bedroom door. Torah was sitting at the table programming numbers into a cell phone. Erich was showing him gowns he had purchased for Jessa. Torah was looking at the slim styles and low necklines and growling. \"This is the Parisian style,\" Erich argued patiently. \"She'll be more comfortable here if she feels like she fits in.\"\n\n\"She's already like an amazon in the middle of a tribe of pigmies,\" Torah complained. \"Dressing like that will only make it even more obvious. The women will hate her and the men will be all over her.\"\n\n\"If anything, the last few days should have convinced you that she can take care of herself,\" Erich reminded him.\n\n\"I can take care of myself,\" Jessa said walking further into the room. She looked at Torah. \"You told me to trust no one. Well, that will be even easier to do if the women hate me and the men just want to grope me. You should have learned that at Summer's End.\"\n\nTorah glared at them both, but gave up the argument. Erich handed off the purchases and she went into the bedroom to change. Once she had one of the gowns on, she began to see Torah's point. She'd always thought of herself as lean, but the way the gown was cut emphasized her narrow waist and made the rest of her look curvy and even taller all at the same time. Then there was the neckline, leaving little to the imagination. She dug through the bags until she found a scarf and tied it artfully around her neck, hoping that would mollify Torah. When she went back into the outer room, he glanced at her, but seemed resigned. Erich, however, had the audacity to wink. Jessa rolled her eyes.\n\nTorah handed her the cell phone, then took her arm. \"We have an appointment with a doctor and then we are meeting Jacq and his wife for dinner.\"\n\n\"Wife?\" Jessa said in surprise. She had gotten the impression that men in Torah's 'profession' weren't normally wed. Torah only shrugged. Maybe Paris was different, she thought.\n\nThey drove across the occupied sector to a small hospital after letting Erich out in an area of office buildings, to meet up with them later. Jessa was biting her tongue, full of questions, but knowing how much Torah hated her questions. If this was to be her home, at least for the near future, she would have plenty of opportunity to learn things on her own. In the hospital, they found their way to the maternity wing and the waiting doctor. It appeared he had lots of time on his hands. They had passed a neonatal room that was almost empty.\n\nAfter a quick change, he had Jessa on an exam table and was performing an ultrasound, searching in vain for any sign of life in her womb. When he finally shook his head, Jessa reached for Torah's hand. He seemed surprised but took her hand and squeezed it gently. She continued to hold on as the doctor explained that he wanted to run a probe into the uterus and examine the damage that might have been done. That involved numbing and expanding the cervix. It seemed like it took forever, but then he was removing the probe and explaining that there was deep muscle bruising, but it should continue to heal with no problem, save he wanted them to wait a month before trying to conceive again. He also wanted to see Jessa again after her next period, to be sure she was healed. Then he left them alone for Jessa to dress.\n\n\"I'm sorry, Torah. About the babies,\" she said, sitting on the edge of the exam table.\n\nHe sighed. \"I am, too. I don't blame you, Jessa. Renik was my enemy. What happened to you was my fault.\"\n\n\"No!\" she protested as he handed her the revealing gown. \"I would kill all your enemies, if it would give you some peace.\" He looked at her in surprise. \n\n\"Why would you say that after everything that has befallen you? The choices that have been taken from you?\"\n\n\"Did you chose to train, to become what you have become? Could you possibly have made such a choice at the age of twelve?\"\n\n\"No.\" He answered.\n\n\"That's why I can say it.\" She pulled the gown over her head, hopping off the table and he turned her to do up the zipper. \n\nWhen he turned her back, he looked down at her for a long moment, then said, \"Don't tell Erich I said this, but you look very beautiful in this gown.\" She smiled and blushed as she tied the scarf discreetly about her neck.\n\nThey had an hour before they were to meet at the restaurant for dinner, so Torah drove her to some sights in the occupied sector and they took a brief walk on a bridge over the Seine. \"I have arranged for servants,\" Torah said as they leaned on the bridge railing and watched autumn leaves floating down the river. \"They have packed your belongings and are coming in a couple of days. They are loyal, discreet and they are highborn. But you must understand, there is knowledge that you have, that you will gain that they are not privileged to know. You must be careful in what you say around them, never leave your computer on. Are you hearing me?\"\n\n\"But maybe if more people knew...\"\n\nHe whipped a finger in the air to silence her. \"That is not for you or me to decide. Tell me you understand.\"\n\n\"I understand,\" Jessa said softly.\n\n\"They are bringing one of my cars. You will have transportation. But you must not go outside the occupied sector.\"\n\n\"Torah, can I run in the mornings?\"\n\nHe rested his hands on the stone railing, staring down at the water. \"Will you accept Jacq's guidance on this? It is his city.\"\n\n\"Yes,\" she said with a nod.\n\nHe sighed heavily. \"Then I will also. If he says it is safe, I will allow it.\"\n\n\"Thank you.\" She glanced aside at him. \"Torah?\"\n\nHe rolled his eyes. \"You never run out of questions, do you?\" She shook her head. \"What is it?\" he said, she thought with feigned exasperation.\n\n\"Were you able to avenge your teammate? The one that was killed?\"\n\n\"No. It was all a setup by Renik, to get us out of Dusseldorf so he could grab you.\"\n\n\"Oh,\" she said softly.\n\n\"It's all right. You got even for both of us. I've been remiss in not saying thank you. But come now. We should get to the restaurant.\"\n\nThey returned to the car and drove a few blocks to a large restaurant. Erich was lounging outside. When Torah parked, he trotted over and opened Jessa's door. \"Seen Jacq?\" Torah asked.\n\n\"He'll be here shortly. He went to pick up Mari.\"\n\n\"His wife?\" Jessa asked.\n\nErich nodded. \"You'll like her.\"\n\n\"Let's go in,\" Torah said. \"I need a drink.\"\n\nErich led the way into the restaurant. It was still somewhat early, especially by Paris standards, but nearly half the restaurant seemed to be occupied. Erich gave Jacq's name, and Jessa was surprised by the deference the ma\u00eetre d' accorded them, considering none of them were wearing crests to indicate rank, and both Erich and Torah were in their usual casual black clothing. When a number of eyes turned their way as they wound through the tables, Torah put a possessive arm around her waist. They were led to a table by a window that looked down on the Seine. A curved banc circled the back side of the table, so that every position had a beautiful view. Erich slid into the booth first and Torah gestured for Jessa to sit next, so that she was flanked by the two men. Erich began studying the wine list as Jessa glanced over her shoulder at the other guests in the restaurant. A number of them still seemed to be looking at her. She ducked her head. \"They're staring at my hair, aren't they?\" Erich glanced at her. \n\n\"Yeah, I'm sure that's it,\" he said. Torah just snickered.\n\nShe had noticed that most of the tables along the window were empty. Even from her limited experience in small town restaurants, she recognized the best tables were reserved for higher ranking parties. \"Is Jacq a high Circle?\" she asked, hoping she would remember the proper etiquette. Torah looked at her.\n\n\"He's Tenth,\" he replied. \"Are you going to ask questions all through dinner?\" his words more of a threat than a question.\n\nShe shook her head, and Erich thrust the wine list at her. \"You're French. Pick something good for appetizers.\"\n\n\"Me!\" she exclaimed. \n\n\"Just pick,\" he said as the wine steward approached the table. She found a white that was from her region of Parvil, which she knew to be light and dry. The wine steward seemed pleased with the selection as he strode away. A short time later, a platter of assorted hors d'oeuvres were brought. Jacq and Mari arrived at the same time as the wine, and they both seemed to approve also, ordering a second bottle. Jacq was older than Erich or Torah by possibly ten years. Mari was obviously pregnant and Jacq had poured her only a small sip of wine. \n\nJessa's insatiable curiosity was thoroughly annoyed by the idle chitchat about weather and seasons, and Mari's children but she bit her tongue and settled for what she could learn through observation. She noted that Jacq, although somewhat more formally dressed, was in dark clothing with no crest also. Mari had a small necklace on that displayed her Tenth Circle crest, with some sort of family cadency mark added. And yet, on a couple of occasions, when other diners passed by their table, diners of higher Circles, they would nod polite acknowledgement toward Jacq and often Torah and Erich also. And when waiters and servers came and went, certainly of either highborn or even Elite status, they were as deferential as they were to high Circle guests sitting at nearby tables. It was all so confusing.\n\nJessa was so involved in trying to sort out the protocols that she almost missed the offer from Mari to help her with wedding preparations. She hadn't really given any thought to what that would even look like in an occupied sector of a city her own family didn't even know anyone was living in. She looked at Torah for help and he just nodded at Mari. \"She can help with everything,\" he said. \"She understands the restrictions we need to observe. For safety,\" he added. Jessa found herself signed up for essentially an all-day shopping trip the following day.\n\nWhen it came time for the entr\u00e9e, it turned out that most of the offerings, apart from a few basics, were based on what was available on any given day. When Jessa found out that fresh shell fish was on the menu, she practically bounced in her seat. One of the few pleasures at Summer's End was the seafood, and even then it was limited to what was available from the North Sea. Everyone else at the table found her enthusiasm delightful, and Torah encouraged her to order a fettuccini replete with crab and scallops and shrimp. By the time desert came, a torte made with precious greenhouse-grown lemons, her mouth was in seventh heaven, on ecstasy overload.\n\nAs they finally prepared to leave the restaurant, it had grown dark out, and Jessa was reminded that she had only slept briefly, in the car, since yesterday afternoon, and Torah and Erich had undoubtedly gone even longer without sleep, though they didn't seem to show the effects. When she climbed into the back seat of the car for the short drive back to their hotel, she was yawning. Torah passed the keys to Erich and joined her in the back seat, pulling her against him and kissing the top of her head.\n\n\"You did well tonight,\" he said softly. \"I know you had a thousand questions.\"\n\n\"More like three thousand,\" she replied with a yawn. \n\nShe could feel a chuckle rumble deep in his chest. \"It must have been torture.\"\n\n\"You have no idea,\" she said, taking advantage of his good mood to snuggle against his chest and savor his warmth. \n\nWhen they reached the hotel, Erich jumped out and did a quick scan of the neighborhood before Torah would let her out of the car. Then they were in the hotel and riding up the elevator to their room. Torah pulled her close again, and she wondered if he was rethinking his decision to leave her here in Paris. If only he could be this Torah all the time. But this Torah only seemed to emerge when he felt safe, like in Paris or at Summer's End. When there weren't enemies lurking around every corner. Maybe he was right, and this was the best place for her, and for them to be together, however briefly. The thought of returning to Dusseldorf terrified her, and she surely didn't want to return to his villa, where his mother clearly hated her. It didn't hurt that Jacq and Mari had seemed very nice. The three of them had slipped into French a few times during the evening, to the annoyance of Erich and Torah, though she suspected that they understood more than they let on.\n\nWhen they reached the room, Torah pushed her gently toward the bedroom as Erich went to the bar and poured two tumblers of whiskey. Jessa got the hint and didn't need all that much encouragement, anyway, as tired as she was. She went into the bedroom and dug through the bags of clothes Erich had bought, only to discover that he had not thought to provide any sleepwear. Or perhaps that was his idea of a joke. At any rate, she was too tired to care. She cleaned quickly in the bathroom, then crawled into bed in panties only and was soon asleep.\n\nAn hour or so later, Torah came into the bedroom, making just enough noise to rouse her to the edge of wakefulness. He went into the bathroom and she was just beginning to drift back to sleep when he returned, climbing stealthily into the bed. Jessa remained still, knowing he must be exhausted and desperately in need of sleep, though she would have savored some of the cuddling that had occurred earlier in the evening. He didn't touch her, though she could feel the warmth radiating from him. She waited until his breath evened out. She didn't want to wake him, she just wanted to feel him there, feel the safety he represented, in his current persona, after the harrowing days of captivity and flight she had endured. She lay on her side, her back to him, and she scooted, painstakingly slowly toward him.\n\n\"What are you doing, Jessa?\" he asked in the deceptively deep, soft, gentle voice she had come to dread.\n\n\"I just wanted to feel you next to me,\" she answered timidly.\n\n\"Why?\"\n\nWhat could she say? She wanted to feel safe, and he made her feel safe when he was Nice Torah, like tonight. But was he still Nice Torah? Because Angry Torah made her feel anything but safe. She opted for the truth. \"Because I'm scared.\"\n\nHe didn't respond for the longest time, and she finally assumed that Angry Torah had returned. She reached out for the edge of the bed and began pulling herself away from him. Then his arm was around her ribs and he yanked her hard back against his chest, so that she gasped. He didn't say anything, his arm bound her tight but not painfully and his breath fell on her neck, in counterpoint to the movement of his chest at her back. It wasn't the safe feeling she had sought, yet as time passed and nothing more came of it, her fear abated, her heart stopped pounding and eventually, she slept again.\n\nWhen Jessa awoke, it was because Torah's cock was twitching. During the night, he had moved even closer to her, or she to him, so that their legs were intertwined. His arm was still draped about her ribs and his breath still blew across the back of her neck. She lay perfectly still, which was hard to do with his cock so close to her pussy, twitching enticingly. She didn't want to wake him, but, as had always been the case, he was aware. \"What do you want, Jessa?\"\n\nWhat could she say? Are you Angry Torah or Nice Torah this morning? That probably wouldn't go over well. She took a deep breath and plunged. \"I want you to make love to me.\"\n\nHe seemed to pause. \"Not fuck you?\"\n\nShe shook her head against the pillow. \"No, make love. I want the man who held me last night, in the car, and told me I did well. I want the man who told me I looked beautiful. I want the man who was as devastated about losing the babies as I was. I want that man to make love to me.\"\n\nThere was an interminable silence. But cocks don't lie. It continued to twitch, to harden, to grow. Jessa held her breath. Without a hint of warning, she found herself on her back. He was on top of her and his cock was pulsing between her legs. He reached down and ripped her panties away. He pushed her legs wide with his knees and flexed his hips to rub his cock up and down against her pussy lips, coating its length in her juices. Then he was arching, angling to find her entrance. She expected him to plunge hard into her, but he didn't. He pressed slowly, savoring each fractional inch until he was up against the limits of her vagina. And where Angry Torah would have shoved harder, stretching her above and beyond, this Torah simply took the measure of her and then worked it, a little deeper each time, a little more friction on her clit until she was begging him to go faster and deeper. \n\nTorah wrapped his arms around her, under the small of her back, arching her back and pulling her hard against him as he buried himself over and over deep in her. As if he was building a memory to carry with him while they were apart, he ignored her pleas and took his time. She wrapped her legs tight around him and savored every moment, until the tension of the last couple weeks was washed clean away by the orgasm he delivered through love making and not fucking. And when he came, it was like planting the seed of future hopes rather than past failures. They both perceived a new beginning, though imperfect, in the moment.\n\n****\n\nJessa returned to the hotel the next evening with armfuls of clothes and goods that Mari had insisted she needed. She felt awful spending so much of Torah's money, without even having an idea of how much that might be, but he had programmed his credit info into her phone and told her to get whatever she needed. Having no idea what that might be, she had depended on Mari's judgement, and Mari had brooked no arguments on the matter.\n\nThey had gone first for a dress, and Jessa knew her mother would be horrified that she wasn't going to wear the \"family\" dress. For that matter, her mother would be horrified that she had gotten married without family present, but they would not be allowed to know there was such a thing as city life in Paris, let alone that their daughter was now a part of that life. Jessa had no idea how she was going to explain any of that, let alone that she had lost the twins, and how she had lost them.\n\nWhile the dress was being altered, Mari had taken her to other stores to buy trousseau items, then perfumes and body washes and luxuries that Jessa hadn't even conceived of, let alone desired. It was all beyond overwhelming, even before she was confronted with the decision of where to get married. Mari took her to a couple of parks, one overlooking the Seine, that were very beautiful and afforded picturesque gazeboes as well as the views, but forecasts suggested bad weather was moving in, and Jessa had no idea how long Torah would be able to stay before he had to return to Dusseldorf. Waiting for decent autumn weather would create an unpredictable time table to be sure. Then Mari took her to a cathedral built hundreds of years earlier. The interior was utterly breathtaking, but seemed entirely ostentatious for what was essentially a secretive wedding. It had taken Mari almost an hour of arm twisting to convince Jessa that the venue was both appropriate and affordable.\n\nWhen they finally returned to the dress shop to pick up the altered gown, Jessa discovered that the seamstress had decorated the simple white gown she had picked out with beadwork about the neck, empire waist, and wrists with what she suspected were gemstones. Mari seemed as surprised as Jessa, though immensely pleased with the faceted blue beads. When the seamstress demanded Jessa try the gown on again, to check her alterations, Mari insisted on using Jessa's cell phone to take a picture and send it to Torah. Jessa remembered the choker that Erich had picked out, or had ordered made, with diamonds, and Torah's seeming exasperation at the expense. Would she be returning to find Angry Torah waiting at the hotel?",
        "As it turned out, she returned to an empty hotel room. The concierge had stopped her on the way in to give her a key card that Torah had left for her, then hustled up a bellhop to carry her packages for her. Jessa was hanging the clothes and putting all the sundry bottles of soaps and lotions and perfumes into the bathroom when Torah and Erich arrived. Torah actually seemed in a good mood and they both insisted that she model the gown for them before they went out to dinner. Jessa was feeling terribly nervous about all the money, still, and she complied as much to keep Torah in his good mood as out of any desire to play dress up. When she had the gown on yet again, she padded out into the main room barefoot, with the hem trailing across the rug. Both men gazed at her thoughtfully, giving no indication of their opinions, as she stood before them. Torah signaled for her to turn, then said, \"Slowly,\" and she did so, taking care not to step on the hem. When she completed the turn, she realized that he was holding a necklace with a blue stone pendant, matching the beadwork on her gown. He stepped up to her and fastened it about her neck, then stepped back again to appreciate the full picture.\n\n\"Lucky bastard,\" Erich muttered.\n\nJessa gazed at Torah, and saw that soft, indulgent look he usually reserved for his little brothers. She didn't remember seeing that look aimed at her since before they left Summer's End. The thought that one wrong word, one question from her could shatter that softness into brittle shards broke her heart and she turned quickly to return to the bedroom before a tear could be shed. He followed her, helping her as she struggled to remove the tight dress.\n\n\"What?\" he said, and she could already hear the hard edge returning.\n\n\"It's just all so overwhelming,\" she said softly, which was inarguably true. \"I spent a lot of money today,\" she confessed.\n\nHe snorted. \"Is that what's upsetting you?\" He turned her to face him. \"Mia can go through that much money in an hour when she hits the city. And not for a wedding. What is it really?\"\n\nShe wanted to turn away, but his grip on her shoulders was firm and he seemed determined to wait for an answer. It wasn't like she hadn't tried before to explain how much his mood swings confused her, even scared her. He had even taunted her for being afraid, as if he had no idea how terrifying he could be. \"Maybe it's just my hormones, trying to adjust to such abrupt changes,\" she suggested. Like most men, down through the ages, he seemed to accept that explanation, as if things could ever be so simple.\n\n\"Keep the necklace on,\" he said. \"It sparkles like your eyes.\" Then he turned and went back into the outer room. Jessa dressed for dinner.\n\n****\n\nThe day of the wedding dawned bright and clear, though it was supposed to be raining by evening. Jessa had never entertained fantasies of a huge elaborate wedding or marrying a romantic prince, still it seemed deflating, if she must marry, to do so without her family present. For her, this was just yet another ordeal, of the numerous ordeals since Summer's End, to be gotten through with as much grace as she could muster. Torah had been watching her closely all morning, as if he expected her to bolt at the last minute, and she knew her brittle smile wasn't fooling him, but she also knew there was no place to bolt to, no escape from her fate. He had promised her a celebration at some future date with her family, but with no real security possible in Parvil Region, she wasn't sure she wanted to put her family at risk, nor deal with the Torah who saw enemies behind every bush.\n\nThe huge cathedral Mari had insisted on seemed like a joke. Who would be there to witness? Their little wedding party consisted of Erich as best man, Mari as her Matron of Honor and Jacq had offered to give her away. Mari had arranged for some local Council member to officiate. Jacq and Mari picked Jessa up at the hotel and whisked her away to the cathedral, leaving Erich and Torah to fend for themselves.\n\nIt was a good two hours before the ceremony, when Mari had her sequestered in a dressing room off the entryway and was insisting on lavishing makeup on her. Jessa would have preferred a wig perhaps, still feeling entirely self-conscious about her shorn hair. Mari suggested that she just might start a new fad in Paris, which, frankly, was always in search of new fads. Though Jessa was sure it was too short, Mari managed to curl and fluff it about her face, then grace it with a simple band of white lace, silken cords and blue beads circling her forehead. When Jessa tried to draw the line at the massive makeup box that Mari propped open, they spent fifteen minutes negotiating minimal, natural additions to her usually unadulterated appearance.\n\nThe very last thing that Jessa did was to put on the heeled sandals that Mari had insisted she buy. She was an athlete, not a fashion model, and the heels only added to her disproportionate height, and would put her almost eye to eye with Torah. But she didn't have much choice, since the gown had been hemmed with heels in mind. She didn't want to trip over her own dress and face splat at her own wedding, even if it wasn't all that big an event for her.\n\nFinally, Mari left to take her place in front of the alter, and Jacq entered the dressing room, taking her hands and air kissing her cheeks. He had to stretch up to do so, reminding Jessa yet again that heels were entirely awkward. \"Are you nervous?\" he asked.\n\n\"No,\" Jessa replied, but didn't add that she just wanted it all to be over. \n\n\"Bon,\" he replied. \"Torah is a good man, Jessa. Let him take care of you. Let him love you.\"\n\nLove seemed like such a foreign concept in the whole mix of things, but she smiled at him and let him lead her out to the entryway. Jessa was concentrating on walking in the heels and managing the long full skirt of the gown when she heard the loud rustle from within the nave. She turned in surprise as Jacq tucked her arm in his. In the nave, a number of people, on both sides of a narrow aisle had turned to look - at her. On the steps in front of the alter, she could see Torah, Erich and Mari waiting for her.\n\nJessa was staring in wonder at the crowd. Granted it was a small crowd, but she had expected no one. Then from either side of the nave entrance, Mia's two youngest daughters stepped forward to meet at the center of the aisle with great seriousness, until the youngest started giggling. They held baskets of rose petals and started down the aisle tossing the petals. \"What...\" Jessa stammered. \"Who are all these people?\"\n\nJacq patted her hand reassuringly. \"Torah's family has come. And his trusted friends. Those who could. And his friends from here.\" He leaned closer to her ear. \"I asked them to sit on your side. I know you would prefer your own family, but they are your family today, non? Come, your husband is waiting.\"\n\nHe walked her down the aisle as her 'flower girls' peeled off to rejoin their family. Jessa noted that all of Torah's family had come except his mother, which didn't break her heart at all. When she reached the end of the aisle, she saw the twins Samu and Saula off to each side, solemnly holding pillows bearing the rings that Torah had brought. When she glanced up at Torah, he was looking down at her with an indecipherable expression, as if he still wasn't sure if she was going to bolt or not. Like she could, wearing these ridiculous heels. Jacq released her and she mounted the two steps to Torah's side. She suddenly discovered that she liked being eye to eye with him. He couldn't be nearly as intimidating as when he could glower down at her. He may have realized that himself, because he gave her a wry smile before taking her arm and turning toward the Councilor who was officiating their ceremony.\n\nJessa paled when she saw the prominent crest on his formal attire. He was First Circle. How had Mari arranged to impose on a First Circle Councilor with two days' notice to perform a ceremony for a Tenth Circle and a mere Elite? Everything she thought she knew about protocols was falling apart. Perhaps Torah realized her discomfort, because he squeezed her arm and pulled her imperceptibly closer, even as the Councilor was droning on about marriage and the importance of procreation. There were no vows to be spoken to each other, as there had been in the pre-pandemic times. There were only instructions - marching orders, if you will - from the Council to make babies and bring them up with the Council-approved values, followed by vows to follow those instructions. \n\nEventually, the Councilor pronounced them married, the twins scurried up with the rings, which they placed on each other's fingers at the same time, standing face to face and hand to hand. Then Torah pulled her into a tight embrace and kissed her deeply and long, eliciting hoots from the gathered. The party moved from the cathedral to a nearby building, originally a priory, perhaps, where a banquet had been set out. There was even a musical group and Jessa blanched at even more expenses she hadn't known about.\n\nTorah kept her close throughout the evening, and again she didn't know if it was because he feared her bolting, or perhaps he was jealous of the rapport she had with Jacq's French-speaking teammates. Jessa was thrilled to see Mia and the children again. She was still stung by Bona's and Horach's willingness to lock her in a basement somewhere, so her politeness with them was definitely forced. But with Samu and Saula, especially, she couldn't contain her pleasure, even making a point of dancing with each of them and then with both at once.\n\nAt one point, Torah pulled her aside from the festivities and told her \"There's someone I need to introduce you to.\" Jessa couldn't help but wonder why that required special notification, but he continued, \"I need you to be on your best behavior.\"\n\nShe shook her head in confusion. \"Have I done something?\" she asked. He had been introducing her to Parisian counterparts and even higher Circle Parisians throughout the evening. She thought she had been proper with all of them, but growing up in a very rural Region, learning the etiquette and rituals wasn't a high priority.\n\n\"No,\" he cupped her face and ran a thumb across her cheek. \"You've been wonderful. But this is a very sensitive situation.\"\n\n\"Just tell me what you want me to say, then,\" she encouraged him.\n\n\"I don't know what he will ask.\"\n\nJessa sighed in exasperation. \"I will do my best. But you're not helping much,\" she added, sarcastically.\n\n\"I know,\" he said, resting his forehead against hers. All too soon he was pulling away. \"Come on.\" He took her hand and pulled her across the room toward a man that Erich was talking to, and had been most of the evening, if she remembered correctly. As they drew nearer, she could clearly see his crest; Second Circle. It was starting to make sense why Torah might be concerned. When they drew close, the man looked up from his conversation with Erich and frowned.\n\n\"About time, Torah,\" he said, but his eyes were on Jessa. She had a vague feeling she'd heard the voice before. He was older, maybe mid-fifties, inches less than her own height even without the heels. And unlike most of the people she met now, who spoke their 'native' languages with an English accent, he spoke English with a German accent. After the first wave migration, it was obvious that the most common second language, and therefore the most efficient for communication was English. On a continent where refugees were suddenly the largest percentage of the population, practicality insisted that the most common language become the first language. Jessa had heard of only a few areas that had resisted that notion. This gentleman was apparently from one of them.\n\nTorah didn't respond to the tone. \"Drau, this is my wife, Jessa.\" She remembered, his had been the disembodied voice on the car phone. Torah had called him 'sort of' his boss. \n\nShe immediately bowed and dipped her knee. \"My Lord,\" she said. \n\n\"My dear,\" he said, taking her hand and kissing her knuckles. She studiously kept her head down. \"I understand you will be living here in Paris?\"\n\n\"Yes, My Lord,\" she replied.\n\n\"You don't need to call me Lord,\" he said. \"You should choose to live in Dusseldorf. It is much more convenient for Torah. And closer to your family, I am given to understand.\"\n\nJessa felt Torah's hand tighten on hers. \"My Lord,\" she replied, measuring her words and keeping her head down to minimize her height. \"I have recently lost my pregnancy because of an incident in Rhine Region. I know this is a weakness in me, but I cannot overcome my fear for future pregnancies. Torah has been gracious enough to respect this fear of mine and let me live here for now. I am sure I will, with time, and Torah's strength, overcome my fear.\"\n\n\"It would be best if you were to overcome this phobia of yours now,\" he suggested darkly.\n\n\"I know, My Lord. But I am not strong like you. And it is probable that my anxiety could affect the chances of pregnancy, so...\"\n\nShe heard him huff with exasperation. \"I suggest you address this anxiety immediately. Paris may not be as safe as you expect.\" With that he turned on his heel and walked away.\n\n\"Whoa,\" Erich said.\n\n\"Whoa, indeed,\" Torah agreed.\n\nJessa still had her head down. \"So is he a good guy or a bad guy?\" she asked softly.\n\n\"He's a man with his own agenda,\" Torah said. \"And you were perfect.\" He raised her chin, then actually had to reach up just a bit to kiss her forehead. \"Thank you.\" \n\nJessa smiled with pleasure despite herself. She whispered into Torah's ear, \"How long are we obliged to stay?\"\n\nHe looked at her with as incredulous an expression as he ever allowed himself to display. \"You have some place to be?\" he asked.\n\n\"My bed with my husband?\" she replied, inflecting it like a question.\n\n\"For what purpose?\" he asked, baiting her.\n\n\"To give him the only wedding present I can afford.\"\n\n\"And what would that be,\" Torah asked, as Erich backed away with defensively raised hands.\n\n\"To fuck him to his heart's content,\" she whispered. \n\n\"I see,\" Torah replied. \"It just so happens I have a car waiting.\"\n\n\"Perfect. Can I take these damn heels off?\" she asked.\n\n\"As long as you put them back on later when we're in the bedroom,\" he answered.\n\n\"Deal,\" she said, and for the first time ever, she was the one pulling him by the arm toward the exit.\n\nOnce they were in the car, Torah's hand crept up under the hem of her dress until he reached the silk of her panties. \"You're wet,\" he whispered. She nodded, blushing more at the thought of the driver hearing, than embarrassment by her arousal. \"I am not sure I will ever understand you, Lady Jessa.\"\n\n\"Or I you,\" she countered.\n\nHis fingers rubbed gently against the silk. \"At least this part of the journey of discovery is enjoyable.\" His fingers slid up to the top of her panties and pulled. Her eyes flicked to the driver but she raised her hips to let him slide the panties down her legs. When he had them free, he raised them to his nose and inhaled deeply, then tucked them inside his jacket. \"Souvenir,\" he whispered. \"Put your shoes back on. We're almost there.\"\n\nJessa complied, as the driver pulled up at the doors to the hotel. Even now, Torah climbed over her to exit first and scan the darkening neighborhood, before he reached for her to help her from the car. He did a quick scan of the lobby, too, before leading her to the elevator. She wondered if Drau's veiled threat was worrying him or if it was simply his natural caution. She bit her lip to keep from asking and when he turned to look at her, he cocked an eyebrow, but didn't say anything. A few moments later, they were in the suite and Torah was helping her out of the dress before they even reached the bedroom.\n\nHe stilled her and circled her slowly, taking in the heels, the silk stockings, and the corset that barely covered her nipples. Torah stepped behind her, one hand on her belly, reaching slowly toward her bared pussy and the other hand slipping the upper edge of the corset down, freeing her breasts. His fingers traced lightly over her nipples and her clit, as he whispered in her ear, \"Leave these on.\" Then he sat her on the edge of the bed as he removed his own clothes.\n\nHe leaned down kissing her, devouring her, and pushing her back and down on the bed. When he finally pulled back, it was only an inch, his hands beside her shoulders, bracing himself over her, so close she could feel the heat radiating from his chest. \"You've killed, Jessa,\" he whispered. Her heart caught in her throat. This was the last direction she expected or hoped the evening would take. \"Without remorse,\" he continued. \"Do you have the bloodlust, now?\"\n\n\"Do you get bloodlust when you kill?\" she challenged.\n\n\"Yes!\" he hissed. It wasn't the answer she expected, and her mind struggled to recover.\n\n\"Well, I'm not you. I killed because it was necessary in the moment. The moment is over.\"\n\n\"I was sure you would never willing let me touch you again. And yet here you are trying to seduce me. How shall I trust you?\"\n\n\"You're afraid of me!\" she blurted out, and suddenly things seemed clearer.\n\nTorah's expression didn't change. \"No one has come as close to me as you have. Not my family, not my team. No one. When I see fear in your eyes, I wonder how far you will go to resolve that fear. I now know how far you are capable of going. So I have to wonder, when you seek to distract me, lower my defenses, is there a knife hidden somewhere?\"\n\n\"No, Torah...\"\n\n\"Then why?\" he snapped. \"Why now, after everything that has happened, are you pretending to want me?\"\n\n\"I'm not pretending,\" Jessa argued. \"When you are here, when you feel safe, you are... desirable. Hell, you're so fucking hot, I can hardly keep my hands off of you.\" His eyes widened. \"Don't you get it? It's because you've lowered your defenses. Even given me a tiny glimpse of vulnerability. I want everything I can get from you here, now, in this place, before you go away and become that other Torah.\"\n\nHe stared down at her for so long, she began to wonder how he could maintain his propped up position, like he'd been frozen in the middle of a push up. Then abruptly he was kissing her hard, his solid body collapsing onto her corset-clad torso, his hands clutching almost desperately at her breasts. He slid down to the floor, pulling her closer to the edge of the bed until he could attack her pussy as fervently as he had kissed her.\n\nA small part of Jessa feared there were more accusations to come, another sudden veering into doubt and mistrust, but most of her was hopelessly lost in the sensation of his tongue and lips and his hands clutching at the ass cheeks, digging almost painfully into her flesh. She reached to twine her hands into his hair and pull him even closer. He suddenly moved his hands to her thighs, pulling her legs wide, limiting her efforts to squirm away from him as he sucked and nipped at her clit until she was screaming.\n\nBefore the orgasm faded, he tossed her farther onto the bed, threw her legs over his shoulders and plunged into her. He could feel her wicked heels bouncing against his back with each thrust. Her head was thrown back off the edge of the bed and she was groaning with each thrust, louder and louder. When she called his name as she came again, it triggered his own orgasm, and he called out her name even as the echoes of her scream were fading away.\n\nWhen Torah finally slipped free of her pussy, she had gone limp. He straightened her on the bed, then laid next to her with his head resting on her silk covered belly and fell deeply asleep. When Jessa returned to reality, some time later, she realized she still had her heels and tight corset on, but as she listened to Torah's soft snoring, knowing it was probably the deepest he had ever slept in her presence, she didn't move, just savoring as many minutes as she was granted.",
        "When Jessa awoke in the morning, Torah was gone. A small jewelry box with a delicate ribbon was lying next to her on the bed. She opened the box and found a folded piece of paper in the top and a delicate silver pendant on a long chain in the bottom of the box. She turned it over and discovered it was engraved with a Tenth Crest and inset with a tiny diamond. She draped it around her neck. The chain was long enough that the pendent could be worn over or hidden beneath even the lowest neckline. Jessa turned to the paper and unfolded it.\n\nTorah had written: 'The pendant was given to Lania by my father when she became his lover. She returned it to me later, because Renik would not allow her to wear it. Please do not be offended by this gesture. As the mother of my brothers, and briefly as my lover, Lania was precious to me, as are you. It is an honor to the memory of my father, to know that this will now grace your neck. Finally, as my wedding gift to you, I give you the following instructions for access to the Councilary Web. Please use the information you find there to fill your head with answers, but save the orgasms for me.'"
    ],
    "authorname": "Chimera44",
    "tags": [
        "consensual",
        "pussy eating",
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/jessa-ch-09"
}