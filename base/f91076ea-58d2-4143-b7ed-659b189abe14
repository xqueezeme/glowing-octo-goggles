{
    "title": "Tied Up in Knotts Ch. 21",
    "pages": [
        "Considering how late Penn and I stayed up, I was up way too early. I couldn't stop myself. I wanted to see as much of Penn as possible even if he was sleeping. I'd be going back to Portland soon, to make some big changes, but I'd still be going alone. I wanted to wake him up and tell him to come with me. Instead, I laid and watched him sleep. This was my life now. Everything else would come on its own time.\n\nWhen he finally woke up, I basked in that deep voice I loved so much in the mornings. The voice I wanted to hear every morning. I showed Penn just how much I loved that voice. When he was close to cuming in my mouth, he insisted we have a go with no condom but it wasn't time yet. I wanted to lay the groundwork and show him, with proof, that my long game was strong. Then, and only then, would we tango.\n\nThe day was low-key. We had to rectify the fact we'd spent the previous day apart. We did a whole lot of nothing and enjoyed every minute.\n\nThat night we went to my parents for dinner. It was the first time I introduced Penn to my dad as my boyfriend. It was great, of course. I already knew my dad liked Penn but this was different. There were moments I could see that Dad missed Lee. A part of him held hope that Lee and I would make it work the way he and Tracy had. He liked Penn, maybe even more than Lee, but Lee had been around since I was a teenager. Lee was a son to him and that wasn't easily forgotten. Regardless, he showed Penn nothing but love and, when we left, Penn was radiant. I realized this was a big deal for him. Not only was this the first time he'd been introduced as my boyfriend, but it was the first time meeting parents under that same concept.\n\nI followed Penn to the driver's side of his truck and opened the door for him. He looked at me oddly.\n\nI smiled. \"You just met the parents and nailed it.\"\n\n\"I was nervous.\"\n\n\"You had no reason to be. My dad already liked you.\"\n\n\"Yeah, but I wasn't your boyfriend before.\"\n\n\"Well, you are now.\"\n\nPenn rolled his eyes like I was a total nut job for being a little sappy. He loved it, though. I could tell by the blush that crept up his neck. He slid into the seat and buckled up. When I didn't leave, he gave me that what are you doing look I loved so much.\n\n\"I'm so obsessed with you,\" I said as a matter of fact.\n\nPenn didn't say anything, he just smiled and started to close the door on me, forcing me to leave him alone. I went around the front of the truck, holding eye contact with him the entire time. He smiled, then purposely turned the headlights on, blinding me. I stared on, laughing at his antics.\n\nLater that night, when we were in bed, Penn laid on top of me with his elbows on either side of my head. \"I'm obsessed with you, too.\"\n\n\"I'm more obsessed,\" I argued.\n\n\"I'm the most obsessed.\"\n\nWe spent the rest of the night arguing about who was more obsessed with the other. I proved my point multiple times but so did he. In the end, it was a draw and we were both out of ammunition.\n\nFriday morning, I peeled myself away from Penn then drove to Sam's favorite coffee shop. When I got to his house, I found him watching the morning news. I was a little embarrassed that it had been so long since I'd last visited but he was nothing but graceful about it. Typical Sam. It didn't matter to him that he'd gifted me ten grand and given me the opportunity of a lifetime only for me to drop off the face of the earth.\n\n\"I did what I did because I respect you and want the best for you,\" he explained. \"I had no strings attached to my gift. I know your heart, Nash. It's filled with nothing but goodness. Besides,\" he continued, \"you're here now and you brought me my life juice. That's thanks enough.\"\n\nI didn't deserve him but I was glad to love and be loved by him. I'd be lucky to grow up and be half the man he was.\n\nI stayed for over two hours. He asked me lots of questions about Penn and seemed genuinely happy for me. \"Money well spent,\" he said. He asked how the marathons were going. I thought it would disappoint him to know they hadn't been a priority and that Boston seemed like a long-lost dream at this point.\n\n\"It's just a race,\" he said. \"It's only an accomplishment if it's what you desire. Otherwise, it's a burden.\"\n\nI left Sam's feeling better than I had in awhile. I respected Sam and was so thankful for his influence in my life. It tore me apart thinking that I might have inadvertently damaged our relationship or worse, he'd feel unappreciated in any way.\n\nPenn was sitting at the table when I got back, clutching a cup of coffee and staring outside. He looked at me and smiled. It was an invitation enough to join him. I sidled my chair up to his and took a sip of his coffee. Penn put his arm around me and we stayed like that for the rest of the morning. This was my life now.\n\nLater that day, when we were running errands, Penn disappeared. He returned with a box of three condoms. \"To hold us over,\" he whispered.\n\n\"Patience,\" I said, stuffing the box behind whatever was on the shelf next to me. \"We can wait a week. Think of the sea turtles.\"\n\nI'm pretty sure he mumbled something like \"fuck the sea turtles\" as he followed me through the store. He was pouting. Every time I looked at him, he scowled and looked away. Later, when we were back home, I gave him an impromptu lap dance when Meghan Trainor came on the stereo while making dinner. It was the same song I had to sing to him during the first game night. He wasn't scowling so much after that. Later, his scowl disappeared completely when I straddled him on the couch. I was naked and ground against him until he came between my ass cheeks.\n\nThen it was time to go home.\n\n\"You're really going to turn down the job?\" he asked as I sat in the Suburban, not leaving like I should've been doing.\n\n\"I am. And we'll find a place together?\" I asked.\n\n\"We will.\"\n\nI made it twenty minutes before I couldn't take it anymore. I grabbed my phone and called Penn.\n\nHe answered on the first ring. \"What did you forget?\"\n\n\"You.\"\n\nPenn laughed and I couldn't help but smile in the darkness of my car. \"I miss you, too.\"\n\n\"I'm serious,\" I said. \"I don't want to seem needy or anything but could you come to Portland tonight? If you're busy with work tomorrow, I understand. I just don't\u2014\" I sighed. I didn't want to be apart anymore.\n\n\"I'm on my way, Nash.\" His voice was light, almost like he was smiling and happy that I was desperate for him.\n\n\"I love you.\"\n\nIt was silent and I could imagine Penn on the other line, smiling. Then he said, \"God, why are you so obsessed with me?\"\n\nI couldn't help myself, I laughed. I deserved that. We'd been joking about the L-word more than we'd been serious about it and I think I loved him all the more for it.\n\n\"But you'll come to Portland tonight?\" I asked. \"So I can obsess over you?\"\n\nHe came to Portland that night. Forty-five minutes after I arrived, he knocked on the door. Joe was already in bed so I dragged Penn straight to my room. When I got off work the next day Penn took me to dinner. Sunday, he insisted we look for a place. I don't think he felt comfortable being at Joe's while I was at work. It's one thing to visit for a few minutes, it's another to be there all day while I was gone.\n\nJason ended up calling again. This time he apologized for how he handled things. He asked if they could have lunch when he was in town again. More than anything else, he wanted to be friends.\n\nPenn asked how I felt about it. I told him it was his call. As someone who didn't have a lot of friends outside his family, I thought reconciling with Jason was a good idea. He liked Jason and enjoyed his friendship. Penn seemed excited about the prospect and stoked that I was supportive. I made him promise there'd be no sexy time. Penn only laughed. Not that I was ever worried.\n\nWayne was disappointed when I told him I wasn't going to take the job. We'd already put so much time into building the role. We were both invested emotionally. But Wayne understood, and when we parted ways, Wayne hugged me.\n\n\"This is good,\" he said. \"I'm sad that we won't be working together but this is important. I can see how happy you are. When you're ready to come back, you know where to find me.\"\n\nI felt better than I expected when I left his office. After Lee cheated and I stepped away from Yevo, I felt like I lost a big part of the community I knew and loved. I was no longer involved in what was happening in Lincoln and that was a hard loss. But Sam and Wayne proved that I still had great people in my life, people who genuinely loved me. I still had a community.\n\nWhen I got to the Suburban, I had a text from Penn. It was an address.\n\nKnotty Penn: Let me know when you're on your way\n\nI called Penn before pulling out of the parking lot. \"Hey, I'm on my way.\"\n\n\"How'd it go?\" he asked.\n\n\"Good, about as expected.\"\n\n\"So, you're resigned?\"\n\n\"Wasn't that the plan?\"\n\n\"It was. I was just nervous that something would come up. Maybe they'd offer you more money or less traveling.\"\n\n\"I didn't turn the job down because of the money or the traveling and you know it.\"\n\n\"I know,\" he said. \"I was just checking. How long until you get here?\"\n\n\"Fifteen minutes?\" I answered. \"Where is here anyway? Did you find a potential rental?\"\n\n\"I did. I might be in the backyard so I'll leave the door open. Just make sure to lock it behind you.\"\n\nTwenty minutes later I pulled into the driveway, alongside Penn's truck. It was a nice house in a cute suburban neighborhood. I let myself in, making sure to lock the house behind me.\n\nThe heat was on and the house was warm and toasty, a nice contrast from the cold fall weather outside. I admired the inside and wondered if it would come furnished. I peeked into the bathroom and then the spare room. I was impressed. Then I stepped into the kitchen and froze.\n\n\"Well hello,\" I said to a very sexy, very naked Penn.\n\n\"Are you hungry? I stopped at Costco and bought some black truffle pasta.\"\n\nI smiled at his casual attempt at small talk then stood behind him with my hands on his hips and my chin on his shoulder. Seeing him naked was enough to get me going but standing behind him while he was naked made me hard in an instant.\n\n\"You're going to stand here naked and ask if I'm hungry for pasta?\" I ground against his hot ass and kissed his neck. My hands explored that hard stomach I loved then moved down until I was cupping his package.\n\n\"Pasta is what I bought for dinner.\"\n\nI continued to touch him, getting more turned on by the second. \"Are you sure you don't want anything else for dinner?\"\n\nPenn smiled as I touched his body. He was also hard so I knew he was just as affected. Other than that, he didn't react. He just kept messing with the food on the counter. \"No, I'm pretty sure I want this pasta. It looks really good. I can't decide if we should use butter or white sauce, though. Thoughts?\"\n\nI pushed my pants down and pressed the tip of dick between his ass. I felt Penn shudder when I rubbed myself against him.\n\n\"What are you doing?\" He asked.\n\n\"What are you doing? I countered. \"I walked in and found you naked. What did you expect me to do? Pretend like you're not naked? Because I don't know if I'm capable.\"\n\n\"Patience,\" he said.\n\n\"Are you smirking?\" I leaned around and saw he was. \"You're doing this on purpose,\" I accused.\n\n\"Doing what on purpose?\"\n\n\"You know exactly what,\" I growled into his neck as I stroked his dick. \"I told you we could wait until I officially turned down the job.\"\n\n\"Wait for what?\" he asked, oh so innocently.\n\n\"To not use condoms.\"\n\n\"Oh yeah, I forgot about that.\"\n\n\"Yeah? You forgot about it? Is that why you rented this house that I just happened to find you naked in on the same day I talked to Wayne?\"\n\nPenn hummed. \"That is quite the coincidence.\"\n\n\"Is it also a coincidence that the heat is turned up?\" I asked. \"Oh, it's pretty warm in here. I think I need to take off my clothes.\" I stripped my shirt off and tossed it on the table then did the same with my pants. \"That's better,\" I said, taking my place behind him. \"Oh, and how about this?\" I grabbed the bottle of lube that was sitting amongst the groceries. \"What a coincidence.\"\n\nI applied some of the lube to myself then spread some in Penn's ass. I wasn't planning on actually fucking him, just fucking with him. I slid myself between his ass and began slowly grinding him. Every time I brushed against his hole, he shuddered.\n\nPenn gripped the counter and arched his back. He pushed back, trying to get me to enter him.\n\n\"Black truffle pasta you say? That does sound good.\"\n\nPenn kept his back arched but continued going through the motions of dinner. Meanwhile, I played with Penn. I kept him hard with my hand on his dick or my fingers in his ass. I was so close to pressing into him. A few times I almost did. I started pushing the head of my dick into his ass but he'd pull away before anything could happen. By the time the pasta was done, I was dying.\n\nPenn sat on my lap as we shared a plate. I don't know what was better, the pasta or naked Penn on my lap with my now achingly hard cock wedged comfortably on his ass. Every time he moved to take a bite, he ground against me.\n\nI tried to take him to the bedroom when we were done but he insisted on doing the dishes. Fine, whatever, but if he wanted to do the dishes, then he'd have to do them alone.\n\nI stayed behind him because all I could think about was sliding into him with nothing between us. I was so turned on I wasn't sure I'd last long.\n\nBut then Penn bent over to get detergent from under the sink and it was all over. I pressed in. Penn stood up a little, with his hands on the edge of the sink, and moaned. I smiled and slowly pushed in until I was all the way in.\n\n\"Feel that?\"\n\nPenn nodded. \"Yeah. God, that feels good.\"\n\nI pulled out and pressed back in. Then again. I pulled him back until he was standing up with his back to my chest. I continued to press into him. I knew the angle was just right as he was starting to make incoherent noises.\n\n\"I need to touch myself.\"\n\nI pinned his hands on the counter and kept fucking him. His legs were shaking by the time I finished with him and there was a trail of cum dripping down the cabinet. I walked him to the bedroom, laid him down on his back, and slowly slid back into him.\n\n\"Is this what you wanted?\" I asked. \"You wanted to feel me inside you?\"\n\n\"All the time wouldn't be enough.\"\n\n\"Is that a challenge?\"\n\n\"No, because I know you want me inside you, too.\"\n\nI smiled down at him and nodded. \"You know I do.\n\n\"Are you going to cum in me again?\" he asked. \"Because I want you to cum in me again.\" Then he clenched down on me and I moaned.\n\n\"Oh, I'm definitely going to cum in you again. Because I want you to know you're mine.\"\n\n\"You own me?\"\n\n\"Yeah,\" I said. \"I own you.\"\n\nThe next morning, I woke up with Penn pressed against my back and his fingers deep inside me. I might have owned him the night before but he owned me that morning. Oh yeah, he owned me good.\n\n****\n\nTurns out the house wasn't a long term rental, just an Airbnb that Penn rented to seduce me.\n\nI thought we'd look at rentals but Penn had other plans. He had never rented a place in his life and wasn't about to start. We scoured the listings until we found a couple of decent fixer-uppers. Penn went back to Lincoln for a few days then he was back in Portland, looking at houses again. At one point, his brothers joined us. It was fun watching them discuss things in a foreign language. They dissected each of the options; pros, cons, and all possible renovations. Before I knew it, Penn put in two offers.\n\n\"Do you have a preference?\" he asked as we laid in bed. He'd already asked me a dozen times and my answer hadn't changed. The one in Wilsonville had acreage, a shop, and an awesome wrap around driveway. The house needed more work than the Molalla house but it had a lot of potential. Overall, it was the better option but it also had competing offers. The Molalla house was bigger, needed less work, but the neighborhood left a lot to be desired. Regardless, neither of them would be our forever home and both would yield decent returns.\n\nBy the end of November, we were moved into the Wilsonville house. I used some of the money I'd gotten from the divorce and Penn had the rest. No sooner had we moved in, the brothers had most of the home stripped to the studs and were already rebuilding. We had a lot of take-out those first two months. They didn't mess around, though. I had been prepared to live in shambles for a year but they proved efficient and things were pretty well done in three months.\n\nDuring that time, Penn and I found some commercial property and decided to build a thirty-unit storage unit complex. I say Penn and me but it was mostly Penn, he just let me ride along because I was pretty to look at. His words, not mine. He claimed I was the breadwinner since I was still working full time at Costco. Yet he was constantly working on the house, the storage units, and drove to Lincoln once a week for his businesses there.\n\nJason came to town and took Penn to lunch. When they came back, Penn was smiling. Jason took me aside and apologized. In return, I invited him to stay for the afternoon and then we took him out for drinks. I understood what Penn saw in him. Jason was a fun guy. Penn kept eyeing me, making sure I was okay with it. I don't think Penn would've been cool with me being friends with Lee so it was hard for him to understand why I was so okay with it.\n\nThe truth was, I was nervous at first. Jason came in clutch when I couldn't pull my head out of my ass. He ended up taking Penn's virginity. I even found out his dick was bigger. Penn said it was too big, and that I was the perfect size. Still, not so good for the confidence. But I saw the way Penn looked at Jason and it was nothing compared to what I felt when he looked at me. Everything I needed to know was in those eyes.\n\n****\n\nIn June, I quit Costco. The house was done inside and out and things were booming with the businesses. Even though we were living together and spending every free moment together, I still missed him terribly. Besides turning down Yevo, leaving Costco to be with Penn full time was the best decision I ever made.\n\nOnce we were settled into a routine, we started going to Lincoln twice a month. Game night with his family was reactivated. So much of the relationship he had with his family was the same, but it was also completely different. There was a lot more respect. It was no longer Ryan and Logan running the show, Penn was there, too. We also started having dinner with my family once a month. Something I never did when I lived in town. Nathan and Kelsea even joined in. Dad had lost a son but gained so much more.\n\nCam and Sam lived in Salem which wasn't that far from Penn and I. Penny stayed a weekend with us once a month or so. It was fun to play house with Penn. He was great with his namesake and it their connection was obvious. As much as I loved seeing the way she trailed behind him, watching her light up with Penn was around, and how she snuggled into his arms at night before bed, I also loved when Cam picked her up. Don't judge me but I hated sharing.\n\nOne of the weekends we drove to the coast separately. Penn still had a lot of stuff at the Lincoln house and we needed to move it up to Wilsonville. I ended up breaking down on the side of the road. I'd been having minor problems with the truck for a while. Penn came and picked me up. He managed to get it back to Lincoln but only just.\n\nHe let me drive his truck on the way home. Which had never happened before. Halfway through the trip, he started fidgeting, then he moved the console up and slid over until he was next to me.",
        "\"That seat is so uncomfortable,\" he said.\n\nIt was Thailand all over again. Then Penn draped his arm around my shoulder and I slid my hand over his knee. I couldn't hide my smile.\n\nThat week we went to the dealership. I thought a car would be better for commuting but Penn was adamant that I get another Suburban. I also thought a used one would be better but Penn insisted otherwise.\n\n\"You're going to drive this until it dies anyway, might as well buy a new one.\"\n\nI ended up leaving with a newer version of the one I had. I mean, it was completely different and fully loaded but it was the same color and it was still a Suburban. Later, I asked Penn why he'd been so set on me getting the same thing.\n\nHe shrugged. \"I can't imagine you driving anything else. It's part of who you are.\"\n\n\"My old one wasn't close to being fully loaded. Not even in 2001 when it was built.\"\n\n\"Yeah, well,\" he smiled. \"I'll always give you more than Lee did.\"\n\n\"Oh,\" I laughed. \"I didn't know this was a pissing contest.\"\n\n\"There's no contest.\"\n\nI leaned over and kissed him. This was my life now.\n\n****\n\nWe celebrated Penn's forty-first birthday in Hawaii, with his family. It also represented one year together. We hadn't explicitly talked about marriage but it was there. I could tell Penn was waiting for me to ask him. The entire time we were in Hawaii, he (and his family, because they couldn't hide anything and were constantly watching our every move with bated breath) looked at me every time we went for a hike, a walk on the beach, or whatever else, like, 'is this when he's going to do it?'.\n\nHis family had done a bang-up job of not interfering in our lives, but I was pretty sure they tried to play cupid more than once during the holiday. There were just too many randomly romantic moments to claim them all as a coincidence. Including but not limited to one game night where I constantly drew Penn's name followed by a random love song; like a remix of I Love You by Surf Mesa and Marry You by Bruno Mars and one dinner at high-end romantic restaurant where the entire group got held up and it was just Penn and I and a solo violinist.\n\nPenn was on the verge of a heart attack each time, waiting for me to kneel down. He covered his disappointment better than his family. Ryan didn't look at me afterward. If he had, he would've had to admit he'd meddled\u2014and that it backfired.\n\nWe left Hawaii the same as we'd arrived, dating.\n\nIn mid-late October we were hanging out at the house. It was done and off the charts beautiful. Penn had killed it. We were talking about moving to Bend and seeing what it had to offer. We couldn't decide if we were ready to sell the house or rent it. But we'd been peeking at possible fixer-uppers in the area.\n\nWe were cleaning the kitchen. The music was playing like it always did in the kitchen. That Dermot Kennedy song started playing, the one that played almost a year ago, the one that Penn had secretly been obsessed with since. Every time it came on, he would glue himself to me. It was undoubtedly our song.\n\nPenn stopped loading the dishes. He cupped my face and kissed me, then started dancing. His hands slid down my back, pressing against me against him. He never took his eyes off me; he never did when this song was on. And the words couldn't have been truer, for either of us. Everything I held dear resided in those eyes.\n\nI roped his moon and he roped mine.\n\nSomething about the way he looked at me did me in. We were both hard by the time the song was over.\n\n\"Do you know what today is?\" I asked. We were still standing in the kitchen, wrapped up in each other.\n\n\"October 19<sup>th</sup>?\"\n\n\"Yes,\" I laughed. \"But what else?\"\n\nPenn shook his head; he had no clue.\n\n\"One year ago today we had sex with no condoms.\"\n\nPenn laughed. \"Ah yes, how could I forget.\"\n\nI walked to the other side of the kitchen. I opened the kitchen drawer and pulled out a wrapped box. I held it in front of me as I walked back. Penn's eyes widened; I knew they would. The gift was about the size of a ring box.\n\nI held it out. \"I bought this for you.\"\n\nPenn stared at me then he slowly plucked the box from my fingers. He was nervous. He was trying to play it off like it was no big thing. But if this wasn't a ring, he'd have a hell of a time hiding his upset.\n\nHe stared at the box for a moment before opening it, then I felt his heart drop. He smiled though he failed to mask his disappointment. \"I thought we were celebrating not using condoms?\"\n\nHe started fidgeting with the small box of condoms I'd given him. It was his attempt at hiding the fact he was shaking.\n\n\"Do you remember what I told you when we first talked about not using condoms?\"\n\n\"Not really,\" he said. He was pretty over the conversation at this point. He was hurt and annoyed and not in the mood to humor me.\n\n\"I told you my plan. But when the condoms ran out, you wanted to have sex anyway.\" I took the box from him and started opening in. \"I told you we could wait. I wanted to prove to you, with evidence, that my long game was strong. Remember.\"\n\nHe couldn't even look at me. \"Yep.\"\n\nI moved his chin until he was looking at me. His eyes were dark and full of hurt.\n\n\"I never did provide evidence.\"\n\nHe rolled his eyes and was about to argue with me\u2014about to tell me that I'd proven it over and over and over. But then he saw what I was holding and he froze. In the condom box was my evidence, in the form of a gold band.\n\n\"I'm not sure I could ever compete with your long game. You were there long before I ever thought you into existence. But now your existence is all I know. This last year has been strange for me. No matter what I did, I couldn't get enough of you. I wanted you every second of the day. Being away from you was like living in high elevation; I couldn't breathe and I felt tired all the time. It felt like I was tied up in knots all the time. Then I realized, I was. Well, I'm tied up in one Knott in particular.\" I held my finger up, the ring sitting on my knuckle. \"Will you let me prove my long game?\"\n\nHe ripped the ring off my fingertip and shoved it on his ring finger like an addict getting his fix. He grabbed my shirt and dragged me to the bedroom before slamming his lips to mine. I shivered when his fingers dug into my hips. I loved it when he was needy and desperate. His hands slipped to my ass, grabbing and kneading me.\n\nI pulled his shirt over his head and ran my hands across the planes of his chest and down his arms. Penn's fingers dipped under my shirt and slowly pushed it up, his fingers slowly caressing my skin as he went. He was hard for me.\n\nWhen he finally pulled my shirt off, he stared at my chest and ran his hand over my body.\n\n\"There's one issue,\" he said, still too transfixed by my body to look at me when he spoke.\n\n\"What's that?\"\n\nHe looked up. His expression was so serious I wasn't sure what was coming. \"I've thought about this a lot and I don't know what to do. If you take my name, you'll be Nash Knott.\"\n\nI smiled. \"Nash Knott, huh?\" I tried it a few more times. It was kind of funny sounding, almost like a comic book name. \"You could always take my name,\" I suggested.\n\nPenn looked at me like I was joking. \"Have you ever said it aloud?\" he asked.\n\n\"Penn Cushman,\" I said. It took me a second and then I started laughing. \"Okay, that's funny. But seriously, we're not in second grade. No one's going to make fun of you.\"\n\n\"My brothers will one-hundred-percent call me Pin Cushion for the rest of my life.\"\n\nI laughed again because\u2014well, it was funny. \"We could be Knott-Cushman.\"\n\nPenn seemed to like that because he went back to undressing me. And when I said his name hyphenated with mine, he jerked my pants off so fast I didn't even have time to fall\u2014like pulling the table linen off without disturbing the china. When he was finished undressing me, I pushed his pants off then made him sit on the bed. I spread his legs and kneeled between them.\n\nPenn leaned back on his elbows and watched me. I rubbed his thighs then ran my hand all the way down until I stroked his cock. \"You know what I'm looking forward to? Sucking my fianc\u00e9's dick.\"\n\nPenn smiled as I ran my tongue from the base to the tip. He bent his legs so they spread further apart for me. I took the invitation and opened my mouth, slowly taking him in. I milked him good and slow, running my lips up and down his shaft as my tongue lapped every inch of his aching erection.\n\nPenn twitched in my mouth. I could practically feel his cum getting ready to boil over. I lubed up my finger and slowly slid it inside him, then another. I could tell he was getting ready to cum so pulled out of him long enough to scoot him up the bed. He looked good laid out for me, hard and needy.\n\nHe lifted his legs up. I gripped the back of his thighs and pushed his legs towards his chest until he was fully exposed. He handed me the lube like the very best assistant. Some might think that this kind of thing wasn't sexy but I disagreed. I couldn't have been happier with how in tune we were. I loved that sex wasn't a production. It was a confession of love.\n\n\"Are you bummed you'll never have sex with anyone besides me ever again?\" I asked as I applied the lube.\n\n\"Yes, it's very upsetting,\" Penn deadpanned. \"I'm upset,\" He used his foot to somehow bring me closer. It caught me off guard and the lube bottle went flying as I fell forward, barely catching myself with one hand.\n\nI was hovering over him and we were face to face. I used my free hand to press my cock against his ass. He didn't even flinch when I pressed the head of my cock in, or when I slowly pressed my whole length in.\n\n\"It's not too late to call off the engagement,\" I warned as I bottomed out.\n\nPenn thrust his hips up, forcing me to go even deeper. \"Shut up and fuck your fianc\u00e9.\"\n\nI couldn't argue with Penn when he was begging me to dick him. I gave him the best I had which wasn't a lot because he was so damn hot. I lost it. Lucky for him, my long game was strong. Penn rolled us over and rode me until I was hard again, then I flipped him over and fucked him into the mattress. He came, moaning, as I called him all sorts of hot, fianc\u00e9 related terms.\n\nI did a subpar job of cleaning us up before Penn batted me away so he could big-spoon me.\n\n\"What am I supposed to tell people?\" he asked as we lay in the darkness.\n\n\"About?\"\n\n\"The engagement.\"\n\nI frowned even though he couldn't see it. \"What do you mean?\"\n\n\"You proposed with a condom box. That's not exactly romantic.\"\n\nExcept it was and he knew it. I smiled. \"You loved it.\"\n\n\"I wanted to murder you.\"\n\n\"Until you realized I was proposing,\" I corrected. \"Then you loved it.\"\n\nPenn smiled against my shoulder. \"I did love it.\"\n\n\"You have to admit, I have a good long game.\"\n\nPenn reached around and cupped my dick. \"You sure do.\"\n\n\"I'm trying to be romantic but you just want me for my body.\"\n\nPenn laughed and wrapped his arms around me. \"Your body has its perks, I won't lie.\" Penn softly kissed my shoulder as we laid in silence. I thought about what he said, about telling people how we proposed. He'd been waiting for me to propose for months. Every sunset beach walk, hike, or dinner had been a potential proposal. I wondered if I had disappointed him.\n\n\"Are you upset with the proposal?\"\n\nPenn propped up on his elbow and pushed me on my back so he could look at me. He looked shocked. \"Why would you ask that?\"\n\n\"Because I proposed with a condom box. I thought it was cute, but, you're right, it's lame.\"\n\n\"I never said it was lame,\" he said. \"I was teasing. I loved it. It was perfect.\"\n\n\"You're not embarrassed to tell people about it?\"\n\n\"Some people might not get all the details, but I'm definitely looking forward to oversharing with my brothers.\"\n\nIn the middle of the night I woke up on my stomach with Penn kissing the back of my neck. He was laying on top of me and I could easily feel his lubed wood nudging itself comfortably against my ass. My heart rate spiked the way it did everytime he got alpha on me. But the best part was seeing his ringed finger next to my face.\n\nI smiled, leaned forward, and kissed his hand, then smiled again when he involuntarily pressed forward. I rotated my hips so he had a better angle and closed my eyes as he slid into me.\n\nThere was something about the middle of the night that made Penn extra frisky. I asked him about it once and he said, \"It reminds me of the first time I touched you in Thailand, when you were sleeping. You had me so turned on. Also, you're always so stated in the middle of the night.\"\n\nHe loved having me all loose and pliable and I enjoyed laying face down while he rode my ass before passing out on top of me.\n\nHe used his legs to close mine, making it extra tight for him. I could tell by the way he moved that he was getting close.\n\n\"I'm going to cum inside you,\" he growled in my ear. His voice was deep and still very sleepy. \"I'm going to fill you up.\"\n\n\"You already did,\" I moaned.\n\nPenn pressed me deeper into the mattress, moving just his hips before stilling as he came inside me, just like he'd done the first time one year ago and so many times since.\n\n****\n\nTwo weeks later we were back in Lincoln. His family was throwing us a big engagement celebration dinner. They pulled out all the stops and took over the upscale restaurant bar that I only ever attended when it was with Lee's law firm.\n\nWe were the last to arrive and the whole place erupted in howling and meowing which had become a term of endearment. Eventually, we were shuffled to the bar. The bartender asked for ID, which I'd left in the truck. A few people tried to hassle her, claiming a break because it was my big day. I waved them off.\n\n\"It's not her fault I'm so young looking.\" I turned then turned to Penn. \"I'll be right back.\"\n\nWe had parked far away because the parking spaces were really narrow and Penn had a big truck. I went as fast as I could. I just wanted to get back to Penn and the celebration. I liked seeing the look on his face when he got to bask in the fact he was finally engaged to Nash Cushman. That was me. I'm Nash Cushman.\n\nI hated that I was missing his joy.\n\nThe restaurant was beautiful. It was very rustic and the main entrance was no different. The double doors consisted of two giant slabs of solid wood with two-foot metal pipes for handles. There was no 'whipping' the door open, I tried and almost threw my shoulder out.\n\nWhen it finally opened, I rushed through only to end up face to face with Lee.\n\n\"Nash?\" He asked. He was still dressed in his work suit though he'd lost the tie. \"I was wondering when this would happen.\"\n\nI also wondered when we'd run into each other. It was bound to happen. Lee's smile seemed sincere. I didn't want to hang out with him but I wasn't going to be rude either. I had spent the first part of my adult life with the man. I could be civilized. The divorce had been years ago. I was engaged now. My life with Lee seemed a lifetime ago. I glanced past the giant glass wall to the bar where everyone was having fun.\n\n\"How are you?\" I asked.\n\n\"Good!\" he said, seemingly happy I wasn't blowing him off. \"Came out with a couple of friends for drinks. It's not usually busy but it looks like the Knott's have taken over the bar.\" Lee's expression changed to one of excitement and he gently swatted my shoulder. \"I just heard that Penn is gay,\" he said, shocked. \"I knew he and Cam had split a while ago, I guess we know why.\"\n\n\"I heard.\"\n\nLee looked at me. \"You're still friends with them?\"\n\nI smiled. \"Yeah, you could say that.\"\n\nMy friendship with the Knotts had been a source of contention between Lee and I. Even now, Lee looked jealous, though not nearly as bothered as he had been years ago. I glanced at the bar again and found Penn and his brothers watching me. I tried to convey that it was fine. They must have misunderstood because they disappeared before reappearing a moment later in the lobby.\n\n\"Hey,\" Ryan said to Lee and me, glancing between us and gauging the situation.\n\n\"Hey! How are you guys?\" Lee asked. He always had been a sucker for the Knotts.\n\n\"Good, good.\"\n\n\"You guys stole our usual Friday night spot,\" Lee teased. \"What's the occasion?\"\n\nI saw the moment that Penn and his brothers realized that Lee had no idea about anything.\n\nLogan wrapped his arm around Penn's shoulders. \"Our little brother got engaged.\"\n\nPenn held up his hand, confirming that what his brother just said was true.\n\nLee was surprised. \"That's awesome. Congratulations!\"\n\n\"Thank you,\" Penn said, politely.\n\n\"The real congratulations goes to us,\" Ryan smiled then walked over and put his arm around me. \"Logan and I are gaining a kick-ass brother-in-law.\"\n\nI held up my hand to confirm that what Ryan just said was true.\n\nLee was speechless. I can't say I was upset by it. It felt good to see him squirm a little as he learned his ex-husband was now engaged to be wedded to his dream family. Lee had a harder time finding the words this time around. Lucky for him, Ryan was feeling generous.\n\n\"Sorry we can't stay longer but I need to get these two back. There's a room of people waiting to hear all about how Nash proposed with a condom box. I'll spare you the details like I wish I had been,\" he winked. \"It was nice seeing you, Lee. Bye.\"\n\nRyan pushed me towards Penn, who put his arm around me and led me back to the party. I didn't even look back to see if Lee was watching. I didn't care. This was my life now.\n\nWe missed the previous Halloween because Penn still wanted space from his family. But things were better now. Mostly, Penn and I were engaged and Penn wanted to make sure everyone knew. We didn't go all out like we had when we dressed as Lt. Dangle from Reno 911 but we were still a big hit.\n\nI custom made shirts that had a wolf on one side, a cat on the other, and they were howling/meowing at the moon. Penn wore wolf ears and I had cat ears. Everyone lost their shit when we showed up.\n\nWe held off moving to Bend until after the wedding. I was fine with a small wedding or whatever but Penn had other plans.\n\n\"I want everyone to see me marry Nash Cushman.\"\n\nSo, in April, two weeks after my birthday, Penn and I stood in the middle of a Willamette Valley vineyard, in front of four hundred people, and said I do. Nathan was my best man and Jason was Penn's. He'd asked if I was okay with that, given their history. Their friendship brought me nothing but happiness.\n\nAnd when we danced as a married couple for the first time, it was to that damn Dermot Kennedy song.\n\nPenn called it. Penn's brothers congratulated us by calling us Mr. and Mr. Pin Cushion and, later, asked how the Pin Cushions were doing. His nephews punctuated it with a solid chorus of howling and meowing.\n\nI'd been to a lot of weddings. I'd even been in a few, including the one I had with Lee. But there was something about ours that was different, and the difference was Penn. I don't think I had ever seen him so happy. I don't think anyone had ever seen him so happy. I was happy, too, but Penn was out of this world happy. He shined so bright I could barely look away. Everyone saw it, the way his joy poured out of him. Anyone that knew him knew what it meant that he was marrying Nash Cushman. It was a privilege and an honor I didn't take lightly.\n\nIt was a privilege to have him hold my hand and drag me around the venue so we could experience every single thing there was to experience on one's wedding day.\n\nThere was a brief moment when Penn got pulled away but not until his brothers were watching guard over me. We stood, drinking wine and watching Penn talk to the vineyard manager about something.\n\nRyan turned to me and smiled. \"If there's one thing I know to be true in this world, it's that you just got married for the last time. I hope you know that.\"",
        "I smiled. \"I'll raise my glass to that.\"\n\nPenn looked at me from across the room and I raised my glass to him. His hair was neatly combed and he looked sexy as sin in his tux, but then he smiled and all I could think was\u2014\n\nThis was my life now.\n\nWe spent the next four weeks traveling. Some places we passed through, some we stayed and relaxed. When we got home it was back to work. We sold the Wilsonville house and bought the Bend house. His brothers came up and ripped that place down and helped build it back up. Penn's family had contacts and we met an older gentleman who was wanting to retire and sell his septic business. His family wasn't interested so we jumped at the chance to take over a business. It was well known in the community but had been floundering because he no longer wanted to deal with it. It didn't take much to breathe life back into it and turned out to be a great investment.\n\nTwo years later we decided to keep the Bend house and the business but move to Spokane and started all over again. Then we did the same in Walla Walla. Every risk we took together seemed to pay off tenfold. I was cautious but, at the same time, it felt like everything we touched turned to gold. We were unstoppable.\n\nWe moved back to Lincoln just before my fortieth birthday. By then the business had stretched to five cities in two states and we had almost a dozen rental houses. It was a full-time job that we ran together.\n\nI never thought I'd move back but when it happened, it felt right.\n\nWe never did sell our Lincoln house. \"It was the first thing that we did together,\" Penn said. \"Even when I wanted to wash you out of my life, I couldn't bring myself to sell.\"\n\nI was sad to find out that Yevo had struggled to stay afloat after I left. The Committee couldn't get healthy enough to keep a staff person on board. That had to change so I called Wayne. I was too busy to be on staff again which was fine because I had no desire to take on that role, but I knew the ins and outs, I knew the community, and I knew how to support a staff person. Penn and I started a new committee, found members, brought in donors, recruited volunteer leaders, then interviewed for a staff person.\n\nA year later Yevo was strong as it had been in years. Along with being Co-Committee chair, Penn and I were volunteer leaders. Part-time of course, but it was amazing. The kids that I had once spent all my time with were graduated. The new group knew nothing about Lee. They only knew Nash and Penn and looked at us with stars in their eyes\u2014something that never happened when I was with Lee.\n\nI stopped competing in marathons after talking with Sam, but I didn't stop running. Sam was right. It was only an accomplishment if it was something I wanted and I no longer wanted it. It was an accomplishment when I was with Lee but it was a burden with Penn. I could've spent hours over analyzing the why but, honestly, I was too damn happy to care.\n\nInstead, I became a coach. I started as an assistant for the Cross-Country team before taking over as head coach. It wasn't long before I was roped into helping with the track team also. Penn, not one to be upstaged, was recruited by the wrestling team. I wasn't surprised based on his long history of achievements. It didn't hurt that he looked damn good bossing those kids around.\n\nThe best part was having my Suburban full again. I think Penn always knew my time with Yevo and with the kids wasn't over. I whole-heartedly believe it's the reason he insisted I get another Suburban. He knew me better than I knew myself. He knew how much I had missed the road trips, the blasting music, the coffee runs. He knew I missed it all.\n\nI was glad we spent a few years away from Lincoln, it made our comeback even better. Our second go-around was more than I ever dreamed possible.\n\nWe even led a small group about relationships that Penn knocked out of the park. He had such an incredible testimony. I never grew old of hearing him share his story. It only made me feel more privileged with time. He made it seem like he was the lucky one because somehow, against all odds, he ended up with the love of his life. He ended up with Nash Cushman.\n\nBut it was me who was lucky. Because Penn Knott was the light of the universe yet he only shined for me.\n\nThis was my life now.\n\nI would forever and always be tied up in one Knott."
    ],
    "authorname": "Mrsgnomie",
    "tags": [
        "gay novella",
        "drama",
        "gay drama",
        "romance",
        "gay romance"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/tied-up-in-knotts-ch-21"
}