{
    "title": "The Rescue Pt. 06",
    "pages": [
        "\"That wasn't a bad burger,\" I say as Michelle and I finish our late dinner.\n\n\"Yep, not as good as Smitty's but good,\" Michelle agrees. \"Another beer?\" She asks offering me a bottle. \n\n\"Dr. Ripley, are you trying to get me drunk?\" I joke.\n\n\"Thought you might need one so you can tell me your story.\"\n\nI take the bottle but put it down on the table without opening it. \n\n\"Are you sure you want to hear it? You already know that it doesn't end well for any of us.\" \n\n\"If you don't want to talk about it just tell to me to back off and I will. I'm a big girl Kenny I can take rejection. I just thought it might be something you'd like to get off your chest,\" She tells me. \n\nI sense that she's about to retreat and my hand shoots out to capture hers before she can walk away. She rubs her thumb across the back of my hand as I give hers a gentle squeeze.\n\n\"Michelle, it's not that I don't want to tell you it's just that... I haven't talked about it for a long time. Hell, I haven't been able to talk about that day since the inquest except to the shrink from the VA and even then in just bits and pieces. However, when I can talk about what happened and why I blame myself, I know now that you'll be the one I tell, just not tonight. Tonight we should be celebrating not dredging up some dark chapter of my past.\"\n\n\"Well whenever you're ready I'm here for you,\" She tells me squeezing my hand back.\n\n\"I know you are. Thank you.\"\n\n\"No need to thank me, you're here for me and I'm here for you. That's how it works with friends but right now, I'm a little tired. So you take the bed and I take the couch right,\" She asks.\n\nI shake my head. \"I'll take the couch and you take the bed Michelle. Don't argue either because you won't win this one.\"\n\n\"That used to be my line Kenny, no fair using it against me.\" \n\n\"Fair or not that's how it is.\"\n\n\"Oh really?\"\n\n\"Yep.\"\n\nShe smiles and nods. \"Okay, I guess there's no point in arguing if I'm not going to win. I don't like being on the losing side but I suppose the bed in there will cushion the blow.\"\n\nI groan. \"You need to get to bed because that was a horrible pun.\"\n\nShe shrugs. \"It wasn't my best so I guess goodnight and I'll see you in the morning.\"\n\n\"Goodnight Michelle,\" I tell her as I clean up the table and return the tray to the hallway. \n\nBack inside I pull the cushions off the smallish couch and place them on the floor so I can stretch out better. I start to lie down when Michelle calls out to me.\n\n\"Look what I found!\" She says giggling and pointing towards the TV as I enter. \n\nI look towards it and see Humphrey Bogart's Frank McCloud entering the Hotel Largo for the first time. \n\n\"If this isn't fate then I don't know what is. We have to watch this together,\" She gets to her knees and pulls me onto the bed. I end up tripping and falling onto my back onto the bed jostling my shoulder.\n\n\"Ouch, careful, I'm a wounded man, remember.\" I tell her sliding up towards the headboard and the stack of pillows waiting there. A look of genuine concern blossoms on her face but I wave her off. \"I'm fine.\"\n\n\"Don't try and be a tough guy for my benefit Kenny.\" She says. \"If you're hurting, let me know.\"\n\n\"I'm fine, really. And Michelle, I'm sorry I scared you back at the village.\"\n\n\"Yeah well you should be. I had been through enough at that point, no need for you to pile on.\"\n\n\"Yes, you had and really I'm sorry,\" I tell her.\n\nShe nods. \n\n\"Don't get serious on me now Kenny, I'm trying to watch Bogart in Italian. Think we can supply the lines like we used to?\" She asks. \n\n\"Are you sure about that? You might be out of practice and I'd hate for you to lose a bet like that,\" I tell her.\n\nShe shakes her head. \n\n\"No bets this time, just two friends enjoying a movie together. That okay with you?\" She asks as she slides back on the bed to join me. \n\nShe cuddles up to me, the warmth of her body spreading to me along with that scent of peaches I'm starting to love at this point. \n\n\"Fine... uh fine with me,\" I manage to say as I think back to when we used to watch movies together at the Voss's. \n\nShe'd be on one end of the couch and I on the other with only our hands occasionally brushing one another on the back cushions but tonight she's wrapped herself to me like a lover would and I for one am not complaining. I'm too busy doing Bogart's lines now anyway.\n\n\"Thanks for not dying on me Kenny,\" she says in a near whisper.\n\nI lean down and kiss the top of her head. \"I thought you didn't want to get serious?\"\n\nShe looks up at me, gives me this sexy smile then stretches up and kisses me. As soon as our lips touch, I feel that barrier that was put between dissolve itself into nothingness. Her lips part, teasing my tongue to slip between them as her body presses into mine molding and filling me with even more of her warmth. A moan escapes her throat as her tongue touches mine and she begins tugging at my shirt. At first, I think that she's trying to get away from my unwanted advance so I pull back ready to apologize but she surprises me when struggling with the buttons she asks. \n\n\"Why'd you button this damn thing?\" \n\n\"I didn't think this...\" I try to say but she interrupts me. \n\n\"Shut up,\" She says finally getting the last button undone. \n\nShe yanks it off me tossing it aside before lying on her back and hurriedly pulling me down to her. \n\n\"Kiss me,\" She says suspiciously making it sound like an order but one that I will gladly follow. I lower my lips to hers and as much as I try to be tender all the pent up tension I've been feeling unleashes itself. Our hands begin to roam each other's bodies as I pull myself away from her sweet lips sliding down to kiss her neck. She raises her head granting me better access to her smooth skin. She moans as I gently kiss and suck on her sweet neck first on one side then the other. Her hands come up to my shoulders and she lightly pushes me lower. I get the hint and begin kissing my way down her neck to her chest. Gently I pull her tank top straps down taking my time kissing every inch of skin as I expose it. There's the peaches smell again and I smile knowing that now whenever I pass a fruit stand or see a license plate from Georgia I'm going to have a very pleasant memory.\n\n\"How long do you plan on teasing me Kenny?\" She groans at me. \n\n\"I'm not in any kind of hurry,\" I tell her amid kisses to her cleavage.\n\n\"That's good but you're making me really hot at the moment and I don't want to start yanking on your bad shoulder,\" She tells me. \n\nNot wanting to disappoint I reach down taking hold of the hem of her shirt and pull it up over her head. It flies into the air and joins mine somewhere on the floor. I take moment to marvel at this goddess lying topless before me and realty hits me like a blast of cold water. \n\n\"She's just been through this traumatic event, there's that Justin guy that might or might not be her boyfriend, and she trusts me. Here I am taking advantage of her and abusing her trust.\" \n\nI lean back and rise up to my knees while these thoughts race through my mind. \n\n\"Uh maybe we should...,\" I begin to say but she cuts me off.\n\n\"Why are you stopping? Don't stop!\" She says getting up to her own knees so we're face to face. She takes my face into her hands. Lightly she kisses me while intently staring into what feels like the very depths of my soul, her blue eyes aflame with passion.\n\n\"Michelle, if we do this and you regret it afterwards... I don't want to screw us up again,\" I explain.\n\n\"You didn't screw us up last time, I did,\" She tells me.\n\n\"If I hadn't kissed you that night...\"\n\n\"Then I would have kissed you,\" She interrupts. \"It doesn't matter now Kenny, all that matters is tonight. I don't want to waste any more time wondering what might have been, so get back to kissing me already.\"\n\nI do as she requests and she kisses me back with more passion than I thought one person could possess. With my doubt erased, I slide my hands down her back until I'm cupping her firm butt. She groans into my mouth as I give her ass a squeeze before massaging each wonderful cheek in turn. Not one to be out down she reaches down to the clasps of my pajama bottoms to undo them. For just a brief moment she appears to be all thumbs as she struggles with the simple knot but I suppose my teeth nibbling on her ear might be the culprit. She steels herself for a moment and completes her task then goes on the attack. Quickly her hand dips inside them exploring my stiffness with her delicate touch. It's my turn to moan as she begins to stroke me teasingly. \n\n\"Damn,\" I groan into her ear and hear her giggle just a little as she continues to tease me.\n\n\"I want you naked,\" She tells me after several long moments pass.\n\nI nod, reluctantly pull my hands away from her tight backside, and get to my feet beside the bed letting the pants fall to the floor. She stares for a moment as I crawl back onto bed. \n\n\"Something wrong,\" I ask. \n\nShe shakes her head before she slips under the covers. \n\n\"Just processing that this is actually happening that's all,\" She tells me. \n\n\"Honey, we can stop if you want. I'll understand.\"\n\nA smile teases her lips as she reaches under the covers seconds later she tosses her pajama pants at me. \n\n\"Does it look like I want to stop?\" She asks holding the sheet up so I can slide under.\n\nI hesitate but not out of doubt, I just want look at her amazing body as it lies before me. \n\n\"You look absolutely incredible,\" I tell her as I crawl into the bed beside her.\n\n\"I'll bet you say that to all the girls you take to bed,\" She says jokingly.\n\nI shake my head. \"There hasn't been that many and you're the first I've said that to.\"\n\n\"Not that many huh, how many is not that many?\"\n\n\"Do you really want to talk about that now? Seriously?\"\n\nShe looks down my body and giggles. \"Maybe I want to test your self control?\"\n\n\"I'm lying here with you and you're naked. My self control flew out of here just like your pants did a second ago,\" I say as I pull her body into my arms and kiss her firmly. \n\nShe starts to laugh as I'm kissing her but she quickly switches to sighs as my hands roam her supple body. I trail kisses from her lips back down her neck along the same path as last time but without the shirt blocking me. By the time I reach her nipples they're poking out like hard little erasers that I capture with my mouth and swirl my tongue around them each in turn.\n\n\"Oh, that feels so nice,\" Michelle sighs as I continue to suck on her receptive nipples. \n\nSlowly I begin kissing and licking my way farther down her body. \n\n\"What are you doing?\" she begins to ask as my tongue slithers over her smooth abdomen, pausing to kiss her cute belly button before dipping lower to her womanhood.\n\n\"Kenny, wait,\" She says reaching down and pulling my face up to look at her from between her spread legs.\n\n\"Can't. Self control issues remember,\" I tell her as I kiss her downy bush covering her sex. \n\nUnderneath it, my tongue finds her slit teasing its way around until she reaches down to stop me.\n\n\"Wait. Wait. Wait.\" She says pulling at my hair. \n\n\"Am I doing something wrong?\" I ask.\n\nHer face red from embarrassment she explains. \"I wouldn't know Kenny; see no one's ever... well ya know.\" \n\n\"You do trust me right?\" I ask then gently kiss her slit thought her bush then kiss my way down to her outer lips already wet from her arousal.\n\n\"Yes, I... Oh... trust... Mmm!\" She tries to say as my tongue probes under her hooded clit and swipes at it. \"Oh god Kenny, what are you doing to me?\"\n\nI lift my mouth for a moment to answer \"Making love to you\" before delving back down to her womanhood.\n\n\"Oh yes! Oh god!\" She cries out as lick her moist slit from top to bottom. Then slide the tip of my tongue into her going from bottom to top. At the zenith I swipe her clit again drawing a loud gasp from her followed by her moaning my name. I smile at hearing the pure lust in her voice as I continue my oral assault. \n\n\"Kenny, I'm going to... Oh god I'm cumming!\" She cries between gasps of breath as she has first orgasm from oral sex. \n\nAs her body is being rocked by that orgasm I take my time pleasing her, using her gasps and moans to guide me to what she likes and what she needs me to do to bring her off a second time. Her hips begin bucking and I take the opportunity to reach under and give her butt a squeeze. My erection feels like it gets harder as my hands knead her butt if that's even possible since I've been like a rock since I first started kissing her. Getting into it now, she reaches down and grabs my hair now physically guiding me as well. \n\n\"I'm close. God I'm so close!\" It comes out as a plea so I do all I can to answer her cries. Her moans rise in volume until she climaxes a second time soaking my mouth, chin and fingers in her sweet fluids. I lap them up my tongue brushing her clit as I clean us. She yelps at the touch and pulls me up beside her.\n\n\"Too sensitive,\" She tells me her body still trembling. \n\nI wrap my arms around her and hold her as she slowly drifts back to earth from her powerful release. The only sounds in the room are the sounds of her heavy breathing and the rain pouring down outdoors.\n\n\"Are you okay?\" I ask cradling her to my chest as her body involuntary shudders start to die down.\n\n\"I'm so far beyond okay right now. Damn Kenny, how is it that none of the boyfriends I had ever did that to me and yet the man that I ran from just gave me two of the most mind blowing orgasms I've ever had?\" She asks me.\n\n\"I'm not sure I have an answer for that,\" I tell her.\n\n\"I didn't really expect one,\" she says craning her head up and kissing me, \"but thank you.\"\n\n\"No need to thank me, it was my pleasure, believe me.\" \n\n\"Just because I mentioned boyfriends don't you dare think that I want us to stop. I'm just enjoying this feeling and catching my breath before we continue.\"\n\n\"Only if you're sure that you don't want to stop.\"\n\n\"Kenny, I wouldn't let you to stop now if the hotel room was on fire.\"\n\n\"Well I promised to get you home, so dying in a hotel fire wouldn't be a great idea,\" I joke.\n\nShe makes a show of looking around the room. \"We're in luck then, no flames anywhere.\"\n\n\"You're very sexy when you're being sarcastic. Anyone ever tell you that?\" I ask.\n\n\"You're just saying that because I'm naked.\"\n\n\"No, it's just a wonderful coincidence that you're naked. A beautiful, wonderful, remarkable, coincidence,\" I tell her and let my eyes drift over her naked body once more.\n\n\"A little while ago I might have pointed out just how full of it you sound right now but there's something else that desperately needs my attention,\" she tells me.\n\n\"There is huh? What might that be?\" I ask. \n\nInstead of answering verbally, she reaches down and takes hold of my hardness. After a few feathery strokes, she says.\n\n\"He,\" she says squeezing my cock, \"has been a perfect gentleman, patiently waiting his turn to be pleased. I think it's about time I thanked him for that.\" \n\nI push her onto her back and slip between her spread legs. \"You can thank him some other time, right now he's got someplace he really needs to be.\"\n\nDelicately she continues to stroke me. \"Somewhere other than my warm, wet mouth,\" She asks sexily.\n\n\"Oh god,\" I exclaim just imagining the feeling she's proposing.\n\n\"You sure you don't want me to show my appreciation to you?\" She teasingly asks.\n\nI manage to nod. \"Later. Right now I just want to be inside of you,\" I tell her. \n\nHer hand gives my cock a last squeeze. \n\n\"I won't forget to thank you later sir,\" She says right as she guides him to her wet opening. I gently move my hips forward and as I feel her wetness begin to envelope me she whispers. \"Make love to me Kenny.\"\n\nOur eyes are locked together as I slide into her fully; the only sound is her sharp intake of breath as she opens up to accept me. I've never felt so connected with anyone I've ever had sex with; it's as if we're becoming one with our coupling. We are making love, there's no doubt about that. I can tell that she feels the same from the look on her face as we steadily grind ourselves together. She begins to moan again and soon she's clutching at my back with her nails and her legs are wrapped around my thighs pulling me further into her with each thrust. \n\n\"Yes, Kenny!\" She cries out digging her fingers into my back as she rises on a wave of bliss. Her orgasm causes her to tighten around me and that the pressure makes me want to let loose too, but I force myself to hold back, I want this feeling between us to last as long as it can. After several moments, she smiles up at me. \n\n\"That was... amazing,\" She says breathlessly.\n\n\"Was it about like you thought it would be?\" I ask her.\n\nShe shakes her head. \"It was better, so much better.\"\n\nI nod and begin moving slowly inside her again but she stops me. \n\n\"You're still hard?\" She says more in a statement than a question but I can tell she's surprised.\n\n\"I'm not sure if I'll get the chance to do this with you again, I have to make it last.\"\n\nShe has a confused look. \"You mean you didn't just...\"\n\n\"Nope, not yet.\" \n\n\"So we're not done? Oh my,\" She says then pushes me over onto my back careful not to hit my shoulder. \n\nShe crawls astride me then reaches down and guides me back inside her womanly folds. It's my turn to groan as she slowly lowers herself inch by gratifying inch until I fill her completely. \"Kenny, we are going to... Oh yes! We are going to be doing this again. I Oh ... owe my new friend for all this pleasure he's giving me. Oh fuck me!\" She tells me as she starts to grind herself onto me. \n\nIt feels so good in fact that I'm not sure how much longer I'll be able to hold out and that gets me thinking about protection. She's slightly rocking her hips with her eyes half closed and biting her bottom lip. She looks to me like an angel sent down from the heavens as sweat glistens off her body and her long blonde hair shimmers in the light from the bedside lamp.\n\n\"I'm close baby. Where do you want me to finish?\"\n\nThe question itself seems to propel her to another orgasm. \n\n\"In me,\" She cries out just as her climax hits her. \n\nI reach up, pull her face down to mine, and kiss her hard. Gone is the shyness of earlier now she kisses me with reckless abandon crushing her breasts to my chest. Her body shudders as I hold her tight driving my hips up into her. She's letting out a constant stream of groans as our bodies slap together. Try as I might, it feels too good, she's so hot, wet and tight all at the same time that I'm quickly losing the fight. \n\nMichelle feels it too and urges me to completion. \"I can feel you about to lose it. Let me take you to Heaven,\" she says looking into my eyes our heaving breathes mingling together in the small space between us. \"Make me yours Kenny,\" She whispers to me before capturing my bottom lip in her teeth and biting down gently a soft little purr issuing from the back of her throat. \n\nWith all those sensations I explode inside her with pained grunt as spurt after spurt flows from me. \n\n\"Oh yeah, that's what I wanted,\" She murmurs as letting her contractions milk every drop from me. \n\nI wrap my arms around her sweat soaked body and hold her close feeling both of our heartbeats beginning to slow back to a normal rhythm. Her body trembles a few more times as the waves of her climax run their course. After several minutes pass I feel my cock slip out of her and she moans at the feeling of emptiness.\n\n\"Guess I should get off you now,\" She says but I shake my head.\n\n\"Not if you don't want to you don't.\"\n\nShe smiles and kisses me briefly. \"I really don't but I need to clean up a little.\"\n\nI nod and let her get up watching her ass sway as she makes her way into the bathroom.\n\nA few minutes she slides back into bed and covers us both with the sheet.",
        "\"Think I should close the windows?\" I ask as she snuggles up to me.\n\n\"You would ask me that once I get comfortable, wouldn't you?\"\n\n\"Sorry, I was a little distracted watching you get back in bed.\"\n\n\"Just a little distracted?\"\n\n\"Okay, a lot distracted. I'll close them, you just stay naked.\"\n\n\"Deal.\"\n\nAfter closing the windows, shutting off the television and the lights I hop back into bed and cuddle up beside her. She lays her head on my chest and lays there several minutes before she whispers to me. \"You know I love you right?\" \n\n\"I love you too,\" I tell her.\n\nShe sighs and says. \"Okay,\" then falls asleep in my arms looking contented.\n\nThe next morning I awake alone in the bed and for a very brief moment, I question if last night was all just a very vivid dream. Getting up however I can see all our clothes still lying in a heap on the floor save for my button up shirt. I locate my pajama bottoms and tug them on before heading out to find Michelle. I go into the living area and notice her wearing my shirt out on the balcony while looking out over the Adriatic. It looks much better on her. I step through the open door and join her.\n\n\"Morning, sorry I took your shirt,\" She says as I come up behind her and wrap her up in my arms.\n\n\"It looks much better on you, but I think that I'd like it back... like immediately,\" I tell her. \n\nShe turns her head and gives me a radiant smile.\n\n\"I'll just bet that you do Mr. Grayson but not yet,\" She says then gives me a playful elbow to my ribs. \n\n\"All right, no need to rough me up. Did you sleep all right last night?\"\n\n\"I slept great,\" She answers leaning her head back onto my chest. \"I didn't want to leave the bed this morning I was sleeping so well but when I realized I could see the sunrise over the Adriatic, I forced myself up. God, I missed this, seeing the sunrise over the ocean, the smell of the salt air along with the feel of the breeze in my skin. I was going to wake you up too but you looked so peaceful that I let you sleep in.\"\n\n\"Have you been out here long? I didn't feel you get up last night.\"\n\n\"I've only been up maybe fifteen minutes. Guess someone wore me out,\" She says.\n\n\"I'm not apologizing for that. Last night was incredible,\" I tell her and kiss her cheek. \n\nShe turns in my arms and we share a lingering kiss.\n\n\"It was for me too,\" She says as our lips part. \"I am kind of worried about what happens now though.\"\n\n\"What do you mean?\" I ask.\n\n\"With us? Was last night just a one-night thing for you? I know that we said we'd do it again but things said in the heat of passion can't really be trusted.\"\n\nI shake my head. \"No, I told you last night that I love you and I meant it. I still mean it.\"\n\nHer face registers shock. \"I thought maybe I just dreamt us saying that.\"\n\n\"No you didn't. You said you loved me and I said it back. No mistake,\" I tell her emphasizing mistake a little too much maybe.\n\nShe shakes her head. \"No it wasn't a mistake Kenny. I... I do love you but don't feel obligated to tell me that you love me because of last night. Big girl remember, I can take it.\"\n\n\"Honey, I'd still love you if last night didn't happen like it did. I love that it did and I love you, okay?\"\n\nShe nods her head and swallows the lump of emotion in her throat. \"Thank you and I'm sorry about before when we kissed back at Addison's that night, it... it wasn't a mistake and I shouldn't have said that it was.\"\n\n\"You don't owe me an explanation on that.\" \n\n\"Yes, I do but how about I do it over breakfast. I'm really hungry right now.\"\n\n\"Okay. I saw a little place when we came in last night that's about two blocks from here. Looked like a good place to get something to eat.\"\n\n\"We should shower first though,\" She says extracting herself from my arms and heading back inside the room. \n\n\"All right, I'll wait out here until the shower's free.\"\n\nShe smiles at me and then starts undoing the buttons of my shirt she's wearing very seductively.\n\n\"Kenny, when I said that we should shower... I meant together,\" She says letting my shirt fall to the floor revealing her perfect body to me. \n\nI can tell she's a little self-conscious by the way she's standing but she's trying her best to let me take her in without covering up.\n\n\"God I love you,\" I tell her as I step over to her I notice this strange look on her face. \"What?\"\n\n\"Hearing that from you is just going to take some getting used to is all,\" She says. \n\nI lean up and kiss her gently at first but when she returns the kiss with more passion we're nearly about to go at it again while in the den area of the hotel room but Michelle pulls back.\n\n\"Shower first,\" she says catching her breath. \n\nI nod and follow her into the bathroom discarding my pants in the bedroom as we pass through. When the water is sufficiently warm, we climb in the shower together and slowly wash each other. While we linger on the naughty bits of one another we don't have sex in the shower, we just enjoy exploring each other's bodies. I find that she has this cute little dolphin tattoo on her left hip just above her butt cheek.\n\n\"Like that do you?\" She asks as I give it a small kiss. \"It's Lissa's fault. She wanted to get a panther tattoo, the animal not the football team, but she didn't want to do it alone...\"\n\n\"So you volunteered?\" I ask kissing my way up her back.\n\n\"My dad had a few, so I just thought that I'd get one to kind of honor his memory I guess.\"\n\n\"That's really sweet,\" I tell her. \"What about Lissa? Did she get her panther?\"\n\nMichelle shakes her head. \"She watched the guy while he was doing mine and chickened out!\"\n\n\"You didn't cry did you?\" I ask.\n\nShe elbows me in my stomach playfully. \"No. There may have been some tears shed but I didn't scream out. How about you tough guy?\"\n\n\"No screaming,\" I answer. \n\n\"I bet you whimpered,\" she jokes.\n\n\"I told you that I don't whimper,\" I tell her spinning her around in my arms so that she faces me, \"but I bet I can get you to.\" \n\nI kiss her under the shower spray as my hand slides down her sleek wet tummy, through her soft mound before I slip my finger down her slit. I push my finger inside her wetness rubbing her hooded clit causing her to grab my arm tightly.\n\n\"No bet!\" She calls out seconds before moaning aloud as I tease her. \n\nTo say that we both aren't nearly out of control horny when we finally exit the shower and begin to towel each other off would be an understatement but I reach for a fresh pair of jeans from my duffle anyway figuring Michelle is ready to eat. She stops me by pushing me backwards onto the bed and taking the jeans from my hands.\n\n\"I still owe my friend a thank you for last night,\" She tells me tossing them over her shoulder. Reaching down she yanks my towel open and drops to her knees beside the bed.\n\n\"Michelle, you don't have to...\" I begin to argue but when her hot mouth engulfs me, I lose my ability to create coherent thoughts. \n\nSlowly she lowers her mouth taking about half my length in before slurping her way back up. She looks up at me, smiles then plunges her head down again. I watch her golden hair bobbing up in down in my lap as her mouth and tongue drive me to the heights of pleasure. The sheets are knotted in my hands as she pumps me closer and closer to climax. She can feel my impending eruption so she pulls her mouth off my member and lazily jerks it up and down.\n\n\"I think he likes me,\" She says with a giggle.\n\nI breathe out a sigh of relief now that's allowing me to cool down a little. \n\n\"I'm pretty sure he's in love with you,\" I tell her.\n\n\"Only pretty sure,\" She asks as she seductively lowers her head back to my lap.\n\n\"Ok... Damn... He definitely loves you. Oh god!\" I groan as she works me right back up to the same fevered state I was just in a moment ago.\n\n\"That's better. I want you to hold out as long as you can for me,\" she orders me. \n\nI don't trust that I can speak so I nod and try to think of anything other than the beautiful woman that's driving me crazy with desire. I try counting backwards from a thousand by seven's but I just can't focus on anything but the intense pleasure she's giving me.\n\n\"Oh God Michelle,\" I grunt as she works me repeatedly to the brink of climax before backing off. \n\nWhen I'm about as hard as I have ever been in my life she climbs onto the bed and straddle me.\n\n\"Sorry to tease you so long, I wanted to make sure that I properly thanked my friend here,\" She says as she slides me into her soaking wetness. \n\n\"You did that... and then some,\" I say through gritted teeth as I'm fighting a losing battle with my orgasm.\n\nShe sees the concentration on my face then leaning down she kisses me.\n\n\"That was just the beginning of me showing my gratitude. Now go ahead and give it to me. You earned it,\" She whispers as she tightens her herself around me, rolls her hips forward causing me to climax with a loud groan. \n\nWith the build up that she did I honestly see fireworks going off in my head when I close my eyes. I hear Michelle let out a loud sigh and her lower body contracts around me.\n\n\"Did you just...?\" I ask.\n\n\"Uh huh,\" She answers her own eyes closed. \n\nI start to wonder if she's seeing the same fireworks I saw.\n\n\"So getting me so worked up, got you worked up?\"\n\n\"It was a little one but god was it satisfying.\"\n\n\"Sorry, I couldn't hold out longer. I never popped that quick except for when I lost my virginity,\" I tell her with a laugh.\n\nShe smiles down and says. \"Don't apologize, I'm surprised I wasn't having you for breakfast with the way I got you all worked up. That losing your virginity line sounds like a story that you need to tell me though.\"\n\n\"Nope, that is not going to happen. It was embarrassing enough living through it once, no way am I telling you about it,\" I tell her. \n\nShe giggles and bounces on my lap causing her breasts to jiggle deliciously. \n\n\"Bet I can get you to tell me.\" She says in a singsong voice.\n\n\"Are you going to tell me about your first time?\" I ask. \n\nThe bouncing ceases to my regret.\n\n\"Good point,\" She tells me. \"Let's get dressed and eat, then we'll see if you've recovered enough to go again.\"\n\nI look up at her naked body and feel myself stirring. \"I think I'm already recovering just from looking at you,\" She smiles as she feels me begin growing hard again inside her.\n\n\"Wow, that's a first too. I could really get used to this but we both need to eat, see some of this beautiful city, then if you're good dessert,\" She says rolling off me.\n\n\"I thought that I was good already?\" I ask.\n\n\"You're great but I'm starving,\" She says kissing me. \n\nShe climbs off my lap and sighs as I slip out of her. \"There's definitely going to be dessert later. I miss him already.\"\n\n\"He misses you too but let's get some food in you so you'll have energy for later,\" I say reaching for my jeans. \n\nAs I'm pulling them up Michelle leans over and while kissing my ear whispers.\n\n\"You're the one that's going to need energy Kenny. I plan to make the most out of this room when we get back to it,\" She scampers out of the bedroom before I can grab her and throw her on the bed.\n\n\"Sir, I got them,\" Micah states into his hidden earpiece. \n\nHis team had taken turns hanging out in front of the hotel they had tracked them waiting for them to show. Jay who's sitting in the driver's seat of their stake out van wakes up and peers over.\n\n\"Damn she's got a nice ass. Are you seeing this ass boss?\" He asks as he watches the pair head off in the opposite direction.\n\n\"It'd be even nicer if you were to, oh I don't know, follow them,\" Micah suggests.\n\n\"What? Oh right,\" Jay states starting the van and slowly pulling into traffic.\n\n\"Problem Mr. Washington,\" Trent asks as he begins making his way to the lobby of his hotel with the others from Micah's team.\n\n\"Jay's just enjoying the scenery this morning sir. Grayson doesn't have his bag with him so it looks like they intend on coming back here at least one more time before they check out.\"\n\n\"Good, you two follow them and keep your distance so he doesn't catch on to you. Inform me where they stop and I'll meet you there.\"\n\n\"Copy that. Okay Jay, stay on that ass until they stop.\"\n\n\"Trust me, you don't have to tell me twice on that.\"\n\nTrent points to Darrell. \"You, with me. You two go back and sit on the hotel in case they somehow elude your comrades.\"\n\nMartin nods as Trent and Darrell head off in the direction of where Micah is tailing Grayson. \"Guess we should head to the hotel?\" Jeff asks after a moment.\n\n\"Yeah, guess so. Hey Jeff, does something seem... I don't know, off about this guy?\"\n\n\"Grayson or the CIA guy?\"\n\n\"The CIA guy. He seems kind of like...\"\n\n\"He'd eat his own family if the opportunity presented itself,\" Jeff states.\n\nMartin nods. \"Something like that. I'm starting to feel bad for this Grayson guy and the girl too for that matter. Grayson, he lived the life, I'm sure he'll know that his numbers up once we catch him but the girl? Come on man, she had to put with god knows what from Ballo and now this CIA prick is going to get his hands on her? It doesn't seem right.\"\n\n\"Maybe when you cash his check it will compensate for any bad feelings that you might have after this job. Hell from what Jay said about her ass, maybe we'll all get a turn before Trent sells her or whatever the fuck his twisted mind comes up with,\" Jeff states with a chuckle.\n\nMartin answers with a \"Yeah,\" but he's seriously reconsidering his current employee status. Gang rape was not part of the brochure but hell, neither was half the stuff Micah had them doing these days. Back when they were in the service, the Spooks used them for untoward stuff sure but nothing like this. \n\n\"This feels more like a personal vendetta than a sanctioned operation,\" He'd expressed to Micah as they were in the air on their way back from Dakar.\n\n\"So what? The money's still green and we get to off a genuine SEAL in the process. I've heard that Grayson is supposedly some sort of legend too how great will that be?\"\n\n\"Great,\" Martin had answered not really feeling it.\n\n\"You okay man, you look a little green?\" Jeff asks snapping him back to the present.\n\n\"What? Yeah, sorry. I don't think the food last night agreed with me.\"\n\n\"I thought you had a salad? Whatever man, let's get to the hotel and recon the room in case we get to put it to use later,\" Jeff states and almost gleefully. He trundles ahead of Martin who contemplates pulling his forty five and put a hole in the back of this sick fuckers head but he pauses and reminds himself \"There's a time and a place for everything\" suddenly it feels like that time might be upon him. \n\n\"When I talked to Addison she said last night was going to happen,\" Michelle states as we sit at the table of the tiny caf\u00e9 I saw last night. \n\nThe place is a hole in the wall, which means fewer tourists but the smells emanating from the kitchen, tells me that they're missing out. \n\n\"She did huh? What has she got, some sort of perverted psychic vision thing going on or what?\" I ask.\n\n\"You know, I didn't think of it like that, but it makes sense,\" She answers as we look over the menu. \"You're gonna have to order for me. Or teach me Italian in the span of about three minutes.\"\n\nI smile. \"I think I'll order for you and then we'll work on Italian later. I have no doubt that you're a quick study.\"\n\nShe smiles and I order us some lunch. As the waitress departs, Michelle begins to talk..\n\n\"Guess it's time to explain myself huh?\"\n\n\"You keep insisting that you need to so I guess so. It's not like me telling you \"No\" is working.\" \n\n\"It's not but I do appreciate that you are willing to just let it drop but you came all this way, got shot. I kind of owe you.\"\n\n\"After what you did to me this morning you don't,\" I tell her giving her a grin. \n\nShe blushes and kicks me under the table.\n\n\"Kenny!\"\n\n\"Okay first of all, ouch and secondly I'm serious.\"\n\n\"I know you're serious, why do you think I kicked you?\"\n\n\"I was just trying to let you off this imaginary hook you think you're hanging on.\"\n\n\"Thank you,\" She says but before she can begin, the food arrives. \"This looks and smells wonderful. I'm not even gonna ask what it is, I'm just going to enjoy it.\" \n\nShe turns the server and says, \"Grazie.\"\n\n\"I knew you were a quick study,\" I say with a smile. \n\n\"I'm learning a lot it seems. Like that I can truly trust you, just like I did before. I never had that with anyone else.\"\n\n\"I find that hard to believe Michelle. There's Addison, Lissa, Karly and I'm sure a few boyfriends out there that you trust or trusted.\"\n\nShe shakes her head. \"I never really trusted any of the boyfriends I've had in the past. That's a major reason you'll never see photos of me half-naked on the internet. I guess I trust Addison and Lissa to a certain point but funny as it sounds I relate the most to Karly out of all of them.\"\n\n\"I can see that. You two certainly are a forced to be reckoned with when you team up that's for sure.\"\n\nShe laughs. \"We can be I guess. Anyway, while Addison and Lissa are my friends I never really could connect with them that much. I didn't come from money like they did, we just sort happened into it in the worst way possible,\" She says.\n\n\"Losing your Dad,\" I state.\n\nShe nods. \"Do you think that's why you and I hit it off so quickly, both of us sharing the loss of a parent, in your case both of your parents at an early age?\"\n\n\"I don't know about you but I felt our connection well before I knew that you'd lost your dad. Did you know about me losing my parents on the day we met or something?\"\n\nShe shakes her head. \"That day on the beach, no, you were just some stranger swimming in my spot. I was so close to just heading back to the house before you saw me but for some reason I felt... I dunno... compelled to stay. Next thing I know my mouth is open and words are coming out. I'm talking to this stranger like he's someone I know and I have no idea what I'm saying.\"\n\n\"You had me fooled,\" I tell her.\n\n\"Then we started hanging out and I found myself telling you everything. It was just so easy to talk to you. We were open with each other and having fun, becoming really good friends.\"\n\n\"I think I see where this is going,\" I tell her.\n\n\"Yeah, but let me tell it. I'll feel better,\" She says and I nod for her to continue. \"That night at the party, when we kissed on the balcony I felt something happen.\"\n\n\"Maybe like that wall that we'd each erected to keep our feelings in check had suddenly been destroyed?\"\n\n\"No because the wall I kept trying to put up, you kept picking away at with a gesture here or a smile there so I just gave up. To me it was more like a floodgate had been opened when you kissed me. I knew that I wanted us to be more than friends but I didn't want to destroy the friendship that we'd created if that makes any sense.\"\n\n\"I'm sorry but it doesn't make sense. Michelle, we were good friends by then how would us taking the next step ruin what we'd already built?\"\n\n\"I would have found a way, believe me.\"\n\n\"Like running away to Australia?\"\n\n\"I didn't run, well not really. The Australia thing really was a wonderful opportunity for me, you said so yourself. Maybe since I knew that I would be leaving so soon afterwards... I just said that what we had done was a mistake. I didn't want you to have to wait on me to come back.\"\n\n\"Don't you think that maybe I should have had some sort of say in that?\"\n\n\"Now that I'm a little older and lot wiser, yes. Back then I was just confused.\"\n\n\"And scared,\" I supply.\n\nShe nods. \"Kind of like I am now but I've got nowhere to run to this time. I don't want to run this time; I'm determined to see what the future has in store for us.\"\n\nI raise my glass. \"To our future then.\"\n\nShe smiles and clinks her glass to mine. \"To our future.\"\n\n\"I guess since you opened yourself up like that I should tell you my story too huh?\" ",
        "She reaches over, takes hold of my hand and squeezes it. \"Only if you're ready.\"\n\nI give her a half grin. \"I'm not sure I'll ever be ready but if I'm going to spill it to anyone, it's going to be you. I was supposed to be responsible for Ricky; I was supposed to be responsible for them all but it was Ricky that I failed. I promised him, promised his wife that I'd get him home and I didn't,\" I tell her holding onto her hand the way a drowning man would hold onto a life preserver.\n\n\"It was war Kenny. All of you knew the risks involved in what you were doing. What makes you more responsible for what happened to Ricky that say, Alex or Scott?\" She asks.\n\n\"Because I had no one waiting at home for me, no wife, no family, not even a cat so when anything really risky came along I was the first one through the door. If I bought it out there, I'd get a nice plot in Arlington with few mourners to mark my passing but the guys, my guys had people counting on them to get back in one piece. That all changed that day we walked into this supposedly safe village and all hell broke loose.\"\n\n\"Is that why you punched out the superior officer?\" \n\n\"He was the lead intelligence guy that told us we would have safe passage through to our target. Too bad he was looking at the wrong village. The truth of it is I think I was just angry and lashed out. Maybe I was looking to punish myself because of what happened I'm not really sure but I've heard a lot of theories.\"\n\nShe smiles. \"Theories seem to be what shrinks are best at. I can't count how many I've heard about why I have insomnia. After awhile I just got tired of being prescribed this and that to make me \"a happier person\" and quit going to them. I'm interrupting though so go ahead.\"\n\n\"It's all right. Anyway Alex and I were in the lead vehicle, this rundown little Toyota truck we'd found somewhere. Ricky and Ramon were behind us in a Humvee with Scott and T. J. bringing up the rear in another pick up. We're about halfway through the center of town when something slams into the side of our pickup.\"\n\n\"An IED?\" She asks.\n\nI shake my head. \"An RPG hit us, passenger side right at the engine block. Lucky for us whoever shot it was quick on the draw because if he'd have hit the cab neither Alex nor I would be here,\" I pause and take a drink of water. \n\n\"If you need a minute, its okay,\" She says in a voice so understanding that I honestly could break out in tears but I suck it up and continue.\n\n\"The truck flips and Alex and I are both knocked out either from the initial blast or from being thrown out. I wake to the sounds of gunfire, explosions, and men yelling just a whirlwind of chaos all around me. Some guys were trying to drag Alex away from where he landed and I shouted for them to stop. They weren't listening so I pulled my handgun, fired a couple of wild shots in their direction to get their attention. One spun around with his AK pointing towards me and fired...\" \n\n\"And that was one of the scars I saw on you last night?\" She asks and I shake my head.\n\n\"No, this guy had one hand on Alex and was trying to fire his rifle with the other, it just didn't work for him. I had collected enough of my scrambled brain together so this time my shots struck home killing them just as T. J. grabbed me. Scott and Ricky were laying down suppressive fire while he and Ramon drug Alex and me into this hut for cover. It was probably just a little bigger than this place but we crammed inside and took positions while Ramon sorted out our injuries. With the adrenaline flowing I didn't even notice that I had a piece of shrapnel in my arm until Ramon pointed it out to me when I was trying to get in the fight.\" \n\n\"Is the explosion what messed up Alex's knee?\"\n\nI nod. \"A piece of shrapnel from the truck tore through it when the engine exploded. The doctors did what they could at the time but that wasn't much. Most of his ligaments and bone was just gone.\"\n\n\"This is where Scott gets hurt isn't it?\" She asks.\n\nI nod. \"I figure he told you some of this before.\"\n\n\"What he remembers of it but as you know it's hazy for him.\"\n\n\"Yeah, I don't know how he survived that explosion. I thought he was dead man when that RPG exploded at his window but I've got to credit Ramon, if not for him Scott would have died that day too.\"\n\nThere's a brief respite as the server comes by and checks on us. I look up, give her a smile, and ask for my water glass to be refilled. As she's pouring, I notice two men enter the restaurant and they seem to be staring at our table but I think nothing of it. With the server gone I ask Michelle, \"Where was I?\" \n\n\"Scott was hurt and Ramon was helping him.\"\n\n\"Right, so we held that little hut for six hours before it was radioed to us that help was coming we just had to mark our location so when the jets flew over they didn't drop bombs on us. Seems we didn't run into a band of determined insurgents, we had a full force of Taliban fighters bearing down on us,\" I pause and finish my glass of water before looking at Michelle. \"The next part's the hard part to talk about.\"\n\n\"Ricky?\"\n\n\"Yeah, Ricky and how I failed him.\"\n\n\"If you don't feel like now is the time to tell me...\"\n\n\"If now's not the time then I'll never tell you because I'll be too afraid that you won't ever look at me again like you did this morning. You deserve to know the truth about what happened.\" \n\nShe reaches over and covers my hand with her other hand and smiles at me reassuringly before I continue. \n\n\"I went out to toss a colored smoke grenade on the roof of our hut to mark us and caught the two shots you saw last night. First shot got slowed by the Kevlar but still penetrates about an inch into my side. The second shot hits me and I drop out in the open losing my rifle in the process. Not that it would have done me much good anyway because I had no idea where the shots were coming from. Turns out, it was a sniper on a ridge overlooking the village. So I'm lying there bleeding, just waiting for that last shot to take me out when I look over to the hut and see Ricky break from cover. He's running right towards me; this damn kid who should be at home with his wife is breaking the golden rule. If a man's shot out in the open, you have to wait for cover to try to retrieve him. Either that or let him die but you do not go out there and get yourself killed too. I try to shout no or get back but nothing comes out, it's as if everything has slowed down. I hear a round ricochet off the wall behind him and then another and I start to think, this kid is going to make it, then...\" \n\nI blow out a breath and look down in shame just shaking my head. Michelle lovingly squeezes my hand.\n\n\"Kenny, it's all right.\" \n\nAfter a moment I look up and can see tears in her eyes. She starts to say something else but I know if I let her I might not finish the story so I cut her off.\n\n\"He was about five feet away from me when the sniper got him. He was dead before he hit the dirt. He had a wife waiting for him at home, pregnant with a daughter that he'd never see and he died right at my feet. Trying to get to me, to save me and he died.\" \n\nI pull my hand from hers. \"It should have been me, laying there dead in the street not some twenty two year old kid.\"\n\n\"Kenny, don't say that.\" \n\n\"He had every reason to make it home. A family that loved him, a wife that was having his baby and I had nothing.\"\n\n\"You can't look at it like that. You're right that it isn't fair what happened to him but you can't keep blaming yourself for it. He made a choice same as you did, he chose to sacrifice himself for you, and you didn't let him die in vain. Look at all the people whose lives you've touched since then, all the people you helped that wouldn't have gotten it if you hadn't been around.\"\n\n\"All of you are strong people in your own right. If I hadn't been around most of you would have done all right for yourselves.\" I tell her but she shakes her head.\n\n\"If not for you, I'd be dead right now or wishing that I was.\"\n\n\"If not for me you wouldn't have ran to Australia and this whole thing might have been avoided by you all together.\"\n\n\"Argh, you can be so infuriating at times!\" She says.\n\n\"And you're in love with me so what's that say about you?\" \n\n\"Who said I was in love with you? Did I say I was in love with you? Just because I may have said it last night as I was passing out...\"\n\n\"And why was it again you were passing out?\"\n\n\"Exhaustion.\"\n\n\"Exhaustion, that's what you're going with? Not the passionate lovemaking?\"\n\nShe nods her head. \"That's my story and I'm sticking to it.\"\n\n\"All right, if you say so. Well we've still got a few hours to kill; want to take a walk on the beach?\" Michelle looks down and shakes her head.\n\n\"I'd love to feel the sand in my toes but I'm not exactly dressed for the beach,\" She tells me.\n\n\"There are shops all around us so we can change that if you want?\"\n\nShe looks around. \"Kenny, I don't want to spend all your money. You can save it for a rainy day or something.\"\n\n\"It rained last night,\" I point out.\n\nShe smiles. \"I remember. I think I'll have a special tingle every time it rains from now on,\" She pauses then socks my on my good arm.\n\n\"Ow, what was that for?\" I ask rubbing my arm for affect.\n\n\"For being infuriating back there. You changed the damn subject so fast I nearly forgot I was mad at you.\"\n\n\"I'm good at that.\"\n\n\"I've noticed.\"\n\n\"Well what else was there to say?\"\n\n\"You know I would have went to Australia whether I met you or not. You said yourself that it was a great opportunity for me.\"\n\nI nod. \"I did. Doesn't mean I liked that you were going.\"\n\n\"Why didn't you say anything then?\"\n\n\"You said we were a mistake Michelle. What exactly was I suppose to say to that?\"\n\n\"Before that. You knew about the Australia thing for a week before that happened, why not say something then?\"\n\n\"And stand in the way of your dream? I might be an asshole, but I'm not a fucking asshole,\" I tell her.\n\n\"So eloquently put,\" she jokes.\n\n\"I have a way with words.\"\n\n\"You do when you want to. So it's established that no matter what I would have gone to Australia correct?\"\n\n\"Correct.\"\n\n\"I still would have met Justin, probably fell for his line of crap even more and ended up right there in the Aid Station where I would have been murdered or worse all because there was no you around to come and save me. And don't try and argue that my family or the Voss's would have hired someone to come and find me either. Even if they did, they wouldn't have been you and probably would have been killed or gave up before ever finding me.\"\n\n\"But not me.\"\n\n\"No, not you. Shot and bleeding nearly to death you kept coming until you kicked open my cell door and freed me. You know, Yacine asked me who I pictured when I heard all hell breaking loose in the compound and who I knew was going to be there when my cell door opened. It was you.\"\n\n\"It was me all right; slumped against a wall, bleeding out. Not exactly the heroic ending they show in the movies.\"\n\n\"Maybe not but this is real life, that was a real bullet and you were real lucky.\"\n\n\"I can't argue with that.\"\n\n\"No you can't.\"\n\n\"I've heard those things before, what you were saying about not letting Ricky's sacrifice be in vain. His wife said it to me while I held his baby girl. Maybe I was too messed up to get it then or just hurting too bad at the time but now... now I understand.\"\n\n\"Good.\" She says. \"My hand still stings from hitting you, I'd hate to have had to do it again.\"\n\nI take her hand and gently kiss it. \"That better?\" \n\n\"It's a good start.\"\n\n\"You still would have gone to Australia to swim with Great Whites?\" I jokingly ask and let my eyes drift over to the two guys that came in. \n\nThey still seem quite interested in us.\n\n\"It was a...\"\n\n\"Great opportunity, I know. Just seems a little crazy to me.\"\n\n\"You're the one that played Hide and Seek with one in the open ocean without a cage.\"\n\n\"That was not by choice,\" I tell her distracted by a gut feeling that something with those guys isn't right.\n\n\"I don't know, I think you might have planned the whole thing,\" She says. \n\n\"You, uh... ready to get out of here?\" I ask her.\n\n\"Sure?\" She answers sounding a bit confused. \n\nI take her by the hand as we get up and pay for breakfast. A glance over her shoulder lets me know that the two guys that set off my alarm bells are getting to their feet as well.\n\n\"Damn,\" I mutter.\n\n\"What is it?\"\n\n\"I want you to casually glance over your right shoulder like your flipping your hair or something and tell me if those two guys look the least bit familiar.\"\n\nInstead of flipping her hair Michelle reaches back over her shoulder as if to scratch an itch then turns back to me. I know the answer by just the look on her face.\n\n\"It's them, the guys that were looking for us in the village. Kenny what do we do?\"\n\n\"I don't know yet, but I'm working on it.\"\n\n\"They're coming out,\" Micah informs Trent as the pair watch from the van out front.\n\n\"Team One follow them discretely we don't want them spooked. I'll give the signal when to move in. Standard snatch and grab right into the van so be ready. Team Three hold your position in the room in case something goes wrong on our end. You're our back up Three if all goes well we'll rally at the warehouse. Everybody copy that?\" Trent asks.\n\n\"Copy,\" Comes the quite response from team two.\n\n\"We copy,\" Martin of Team Three answers. \n\nMicah nods irritated that his command has been usurped by the CIA jack off that brought them into this. He bites his tongue and waits until Trent gives him the word to start the van.\n\n\"Let's keep our distance. Grayson is good so I don't want to give him a chance to escape.\" \n\n\"I got it. This ain't my first rodeo.\"\n\n\"Tell that to your men that you sent into the diner. He's already spotted them.\"\n\n\"Bullshit, my guys are good.\"\n\n\"Obviously he's better. Watch him and see how he keeps glancing back, making it look casual?\"\n\nMicah watches for a moment noticing Grayson's movement's. \"Fuck, he does have them. Now what's the play?\"\n\n\"He has them but he doesn't know about us yet. Start moving in but slowly so he doesn't spot us. That alley up there will be a perfect spot to snatch them up,\" Trent tells him then turns on his microphone. \"Team Two get ready to move in. There's an alley way about seventy yards ahead, that's where we'll make our move.\"\n\n\"Copy. On your call,\" Jay states not letting his eyes drift too far from Michelle's ass. \"You and I are gonna be real close friends later on.\"\n\n\"You do have a plan right?\" Michelle asks doing her level best not to glance back at the men that are following us.\n\n\"Working on one, there's an alley up ahead that if we...\" I start to tell her but spot a van that seems to be shadowing us as well. I come to a stop in the middle of the sidewalk.\n\n\"What?\" Michelle asks.\n\n\"I should have seen this coming,\" I mutter more to myself than to her. \n\n\"Seen what?\"\n\n\"There's a van over my left shoulder that's following us. They'll pull in front of us when we get to the alley and toss us inside.\"\n\n\"How do you know?\"\n\n\"That's what I would do.\"\n\n\"Okay, then we adjust the plan.\"\n\nI nod. \"It's gonna involve running,\" I tell her.\n\n\"All of your good plans do,\" She reminds me trying to make light of the situation but I can tell she's scared.\n\n\"There's also a part that you aren't going to like.\" \n\n\"I'm not leaving you. I can't.\"\n\n\"You can and you will Michelle.\"\n\nShe looks towards the men that have stopped following and are now just watching us then to the van that sits blocking the street garnering an angry shout from a scooter driver that's trying to leave. \n\n\"Not if I have a better plan,\" She says. \n\nGrabbing my hand she yanks me towards the guys that's getting off his idling scooter to yell at the driver of the van. \n\n\"Sorry!\" Michelle shouts as she pushes him out of the way and hops on the scooter. \"Kenny!\" She tosses me the guys helmet that was on the seat and I grab it by the strap. The two guys that were following are now running towards us intent on stopping our escape. I swing the helmet and catch the both of them with a glancing blow across their faces.\n\n\"Get On!\" Michelle shouts. \n\nI jump on the back and barely have a chance to grab on as Michelle hits the gas and bounds up onto the sidewalk. \n\n\"Hold on!\" She shouts as she makes a quick turn into the alleyway.\n\nInside the van Trent is looking on incredulous that his plan went straight to hell in such a short amount of time. \n\n\"Follow them you moron!\" He shouts at Micah who stomps on the gas leaving his two teammates and the driver of the scooter in his dust. \n\nThe alleyway is short and Michelle hangs a right onto the street that it opens onto.\n\n\"Now what,\" She asks me.\n\n\"Why are you asking me, you're the one with the plan?\" \n\n\"My plan went as far as grab scooter. Feel free to add to that anytime,\" She tells me as the wind whips her hair about.\n\n\"First, let me get this on you.\" I tell her as I slide the helmet into place. \n\nShe makes sure it doesn't block her vision as I tighten the strap.\n\n\"With your knack of getting concussions, shouldn't you be the one wearing this?\" \n\n\"Probably but you're a hell of a lot smarter than me. Gotta protect that brain of yours.\"\n\n\"You say such sexy things to your girlfriend, you know that?\" She jokes and I can't help but smile that she's trying to make light of our running for our lives. \n\nI hear the squealing of tires behind us and glance back. The black van seemingly explodes out of the alleyway before making the right and tearing off in pursuit of us.\n\n\"Damn it, they're coming.\" \n\n\"Could really use that plan now,\" She responds. \n\nI look ahead and see that road up ahead is free of traffic meaning that the van can run us down in a matter of moments if we stay on the street.\n\n\"Left!\" I shout seeing a small passage between the next two buildings. \n\nWithout questioning me, Michelle makes the left and somehow keeps us upright as one of the handlebars clips the far building. People in the alley dart left and right trying to avoid the blonde haired maniac that passes them shouting \"Sorry\" in English. The angry yells that were being shouted in are wake change to cries of shock and terror accompanied by a screeching of metal as the van makes the turn into the alleyway.\n\n\"I don't suppose that's going to stop them for long huh?\" Michelle says slowing a little. As soon as the last syllable is spoken a shot rings out from the head of the alley burying itself in the concrete wall about a foot from my head.\n\n\"Go!\" I shout as more shots ring out.\n\nShe hits the gas and speeds off down a side alley leaving the slow van in our dust.\n\n\"What now?\"\n\n\"We've got to lose these guys. See if you can find a cop somewhere.\"\n\n\"Any suggestions on how I'm supposed to do that?\"\n\nBefore I can answer the van comes hurtling out of the alley and more shots fill the air.\n\n\"I don't think you'll have to do much other than keep us alive until they get here,\" I answer her.\n\n\"Sure, give me the hard job why don't you?\"\n\nI almost make a joke out of that but when I look over my shoulder and see a second car join the van in its pursuit of us I stop myself.\n\n\"Looks like I didn't hit those guys hard enough at the restaurant,\" I tell her.\n\nShe glances back. \"If you have a prayer for getting us out of this mess, I suggest you use it right about now.\"\n\nIt's not long before the wail of sirens begin filling the air and somehow Michelle has managed to keep us from getting run down and shot by both vehicles.\n\n\"You're doing great!\" I tell her just before a police car shoots out of a side street right in front of us. Michelle manages to dodge it only clipping our taillight on the front of the cruiser. The van fares worse as it smashes it's the front end of the police car. The second car is following so closely that it piles into the back of the van.",
        "Michelle slows us down long enough for us to see the cops begin to surround the wreckage with guns drawn ordering those inside to come out with their hands up.\n\n\"Hotel now,\" She asks.\n\n\"Yes and then let's get out of the country before something else happens,\" I answer.\n\n\"I always wanted to see Greece,\" She tells me as we drive off towards the hotel.\n\n\"Greece is nice this time of year but let's try to get home first,\" I tell her.\n\n\"Home would be great. Think we get there before something else happens?\"\n\n\"I'm hoping that we can.\"\n\n\"Don't sound so confident Kenny,\" She says the sarcasm not hard to detect.\n\n\"Hey you're the one that's coming up with the plans now; I'm just along for the ride.\"\n\n\"One plan and that wasn't very thought out.\"\n\n\"It worked, that's what counts.\"\n\n\"I suppose that it did. I feel bad about the poor guys scooter this was though,\" She says.\n\n\"We'll leave it right out front of the hotel. The cops will find it in no time and he'll get it back just a little worse for wear.\"\n\n\"I guess that's the best we can do huh?\"\n\n\"Yep.\"\n\n\"All right then, let's get to the hotel and get our stuff. Dessert will just have to come later.\"\n\n\"Damn, now I really hate those guys!\"\n\nInside our hotel room, Jeff is trying to get someone in the group to answer him.\n\n\"Micah, Darryl, Jay, anyone? Martin, I'm getting nothing\"\n\n\"Maybe they're out of range or something,\" Martin suggests.\n\n\"It's the or something that worries me.\"\n\n\"We can leave the room and see if we can track them down if you want.\"\n\n\"If Grayson and the girl come back...\"\n\n\"So what if they come back? I'm telling you Jeff, I'm through with this mercenary crap. If you're smart you'll walk away with me.\"\n\nJeff looks at him disbelieving the words he just heard spoken. \"Are you fucking kidding me? This is the greatest gig ever. We get to do what we want, we get paid a hell of a lot of money and we travel all over the world.\"\n\n\"Killing people who probably didn't deserve it and placing tyrants into power who do far worse than we ever think about, it's bullshit.\" \n\n\"Micah said that no one can walk away from this. We all know too much.\"\n\n\"Fuck Micah. He's not answering coms so I'm taking that as a sign that now's my chance to get out.\"\n\n\"I'll have to stop you Martin,\" Jeff states but as he reaches for his gun, he sees that Martin already has his trained on him.\n\n\"Yeah, that's not happening,\"\n\n\"This is it huh? After all the years we've known each other this is how you're going to end things by killing me?\" Jeff asks more stalling than actually wanting an answer.\n\n\"I told you that I was done with all that,\" Martin states stepping over and relieving Jeff of his weapon. \"You and I are going to walk out of this hotel together then you'll go your way and I'll go mine.\"\n\n\"Easy as that huh? And what about Grayson and the mission?\"\n\n\"I don't care about the mission anymore but Grayson and the girl, they get a pass so don't think that you're going to hang around to try something,\" Martin explains.\n\n\"Boy when Micah hears about this he's going to hit the roof.\"\n\n\"Let him. I'll be long gone by then and I'd warn him off tracking me down if I was you because if you all decide to come after me, you die first.\"\n\n\"Never should have trusted you after that thing in Quebec,\" Jeff says.\n\n\"Your mistake. Now walk.\"\n\nHe leads Jeff out of the hotel room and to the lobby where they see us enter.\n\n\"Back door now,\" Martin says shoving Jeff out the door before they're spotted.\n\nOutside in the alleyway Martin makes a quick decision and clocks his former friend in the head with his gun knocking him unconscious.\n\n\"Can't cause any trouble this way,\" He states after dumping him behind a garbage bin. He tucks his gun away, strips the firing pin from Jeff's and toss it into a storm drain before heading down the street not taking notice of the familiar figure waiting just outside the hotel.\n\nUp in our room I get a whiff of some type of cologne but after checking the room I find no one and chalk it up to housekeeping since the beds been made.\n\n\"Nothing's missing,\" Michelle announces after coming back with our passports and cash.\n\n\"That's good. You ready to go?\"\n\nShe casts a longing look at the bed. \"Are you sure we don't have time for one last roll in the hay before we leave?\"\n\n\"You have no idea how much I want to make love to you again. Over and over again for that matter but we do need to get moving unfortunately.\" \n\n\"Over and over again, I like the sound of that,\" she teases.\n\n\"Once we back home at your place I'll keep that promise.\"\n\n\"You'd better mister,\" She says and kisses me a sweet kiss before we head back to the lobby.\n\nAfter checking out Michelle and I start to wave down a taxi when I feel a gun barrel being jammed into my ribs. \n\n\"Fancy meeting the two of you here,\" Trent says in a low whisper then reaching up he takes hold of my bad shoulder and squeezes tight.\n\n\"Son of a bitch,\" I whisper through the pain. \n\nMichelle looks at me, then to Trent and her eyes go wide.\n\n\"Don't scream,\" He warns her, \"unless you want to be wearing his insides on you.\"\n\n\"I take it that you're Agent Trent?\" She asks.\n\n\"You told her too much Grayson. I was just gonna kill you and sell her like Ballo planned but now... guess I gotta do you both. Now walk,\" He orders and starts steering us down the lightly packed sidewalk. Michelle reaches down and grasps my hand.\n\n\"Aw, how sweet,\" He mocks. \"I think she likes you Grayson.\"\n\n\"Fuck you Trent,\" I growl at him and get another squeeze on my shoulder for my trouble. \n\nThis time I groan in pain and feel blood begin to flow from my reopened wound.\n\n\"I thought you might have taken a round, the way you were favoring this arm. He take a bullet for you babe, is that it? Not so tough now are you Navy SEAL?\" He says wiping his blood covered fingers on the back of my shirt.\n\n\"Stop it! You're hurting him!\" Michelle says. \n\nTrent looks at her mildly surprised at the ferocity of her tone.\n\n\"I think she'd claw my eyes given the chance Grayson. What do you think?\"\n\n\"I think you should let her go and just take me.\" I tell him.\n\n\"After all the trouble you both caused me already, not going to happen.\" \n\n\"How in the hell did you get away from the cops anyway? Were you even in that van that was shooting at us?\"\n\n\"Who do you think started shooting at you? My guys can cause a bit of confusion when needed. That allowed me to slip into the gathering crowd unnoticed. Looks like I got back here just in the nick of time too. What'd you do to my guys that were in the room waiting on you?\"\n\n\"There wasn't anyone in the room,\" I tell him.\n\n\"They must have heard the commotion on their coms and went to see if they could help.\"\n\nHe steers us off the sidewalk and into a back alley. The alley is devoid of life except for the rats that are scurrying from trash bin to trash bin in search of a meal and the smell of urine permeates the air.\n\nHow'd you find us Trent?\" I ask trying to buy some time.\n\n\"She called her friend Addison from your hotel room last night, very sloppy Grayson. I thought you'd have told her to use a pay phone.\"\n\n\"Kenny I'm...\"\n\n\"It's all right,\" I tell her not letting her apologize. \"It's not your fault. He's right, I didn't tell you.\"\n\n\"Gotten sloppy since you got booted from the Navy huh? Well I guess it's understandable but hey, look what happens when you make one mistake. I was just going to wait until you popped in the states and take you out but this place has so much more... ambiance, don't you think?\"\n\n\"It's nice, not as nice as the deal you worked out with those mine owners. You wipe out Ballo and the aid station and they move in and get a new diamond mine. Let me guess, you get a nice cut from the profit it generates.\"\n\n\"Figured that out did you? No matter, I got paid enough to walk away from this alleyway with a new life. This is a nice place for you to go out, right Grayson. Fucking legend gunned down by a mugger in a piss stained alleyway,\" He chides me.\n\n\"You've got me Trent, let her go. She won't say anything about any of this, you have my word on that,\" I tell him.\n\n\"I don't need your word Grayson, I have the fucking gun and neither of you are leaving this alley. Oh and you won't be needing this either,\" He says pulling my knife from my back and tossing it aside. \n\nIt sails through the air before clattering to somewhere into the alley. \"If my people found out that I made a little side deal with a couple of diamond mine owners to get rid of Ballo and that place, they'd bury me. So you and your lady friend, you've both got to go.\"\n\nMichelle lets out a wail and drops to her knees in the alley. I drop right next to her and pull her close.\n\n\"When you get the chance, run,\" I tell her quickly as Trent is caught off guard by her falling.\n\n\"What about you?\" She asks not crying at all and I realize she faked it to give us this brief chance to make a plan.\n\n\"You can't worry about me, he'll kill us both. When I tell you to run, you run and don't look back,\" I tell her but can see the denial on her face. \"Michelle, please?\"\n\n\"Hey!\" Trent says. \"Get back on your feet.\" \n\nMichelle whimpers begin growing in volume and Trent points the gun towards her head.\n\n\"I said stop...\" He starts to say but I'm on my feet in an instant tackling him away from Michelle.\n\n\"RUN!\" I shout as Trent and I go tumbling into a nearby trash bin. \n\nShe scrambles to her feet and takes off running back out the mouth of the alley. I'd breathe a sigh of relief right now if I weren't in a fight for my life.\n\n\"Hey!\" Trent shouts as he tries to wrest his gun hand free. \n\nWhile I'm holding it with both hands so he can't shoot at her, I'm open to his free hand and he uses that advantage to pummel my face with a couple of quick punches. The coppery taste of blood fills my mouth and Trent manages a well-placed kick to my stomach that knocks me back and onto my knees. He brushes himself off and aims the gun at me with a smirk. \n\n\"Bet you thought that I was just some out of shape desk jockey didn't you Grayson? I kept in practice since there isn't hell of a lot to do in Morocco. You know, it's almost a shame what's going to happen to your girlfriend when I catch up with her.\"\n\nI'm bent over trying to catch my breath but I manage to talk. \"You won't catch up with her because you aren't walking out of this alley.\"\n\n\"That's tough talk coming from the man without his gun,\" He say as he raises the gun and pulls the trigger.\n\nThe click of his hammer falling fills the air but without the accompanying gunshot.\n\n\"What the hell,\" He wonders and continues pulling the trigger sending more clicks into the air.\n\nHe looks over at me and I'm waving his clip at him with a smile. \n\n\"They usually work better with these in them,\" I tell him before tossing it up on a nearby rooftop. I toss the chambered bullet into the air and catch it. \n\n\"Hope you didn't use all your clips trying to shoot us during the chase otherwise this is going to be a long afternoon,\" I mock him hoping to piss him off enough to by Michelle more time to escape.\n\nHe shakes his head. \"Guess I was in too much of a hurry.\" \n\nHe takes the gun by the barrel like a club. \"We're doing this the hard way then.\" \n\nI chuck the single bullet behind me and nod. \"I guess we are.\"\n\nHe rushes me swinging the gun butt down intending to bash my skull in but I block it with forearm and punch him in gut staggering him back. Recovering quickly he catches me with haymaker to my jaw spinning me on my heels and follows it up trying to kick my knee out. I manage to bend my knee with the kick so he doesn't shatter it but his follow up punch lands solidly to my face. Blood flies from my mouth and splatters onto the dirty stone floor of the alleyway mixing crimson against the grayness.\n\nBefore I can get my bearings, he brings his knee up and catches me in the mouth and nose. I drop onto my back spitting more blood. My vision starts to darken and I feel my eyes starting to close on their own as unconsciousness threatens to overtake me. \n\n\"Really Grayson? You're gonna let this CIA prick kick your ass like this?\" Ricky asks as he appears out of nowhere.\n\n\"Just bidding my time,\" I tell him.\n\n\"Bidding your time and getting your ass handed to you look a lot alike,\" he jokes.\n\nDespite the pain I start to laugh through the crimson mask of blood covering my face as I lie there catching my breath.\n\nTrent begins to ask pausing to kick me in my ribs turning my laugh into a cough. \n\n\"What's so fucking... Funny? Huh?\" \n\nAnother kick. \"Tell me!\" \n\nAnother kick and I feel at least one rib go from it. \n\n\"Speak up Grayson!\" He backs off and lets me get up on my knees. \n\nI spit out a mouthful of blood and manage a smile.\n\n\"The more time... you waste on me. That was a good kick by the way,\" I say as I try and breath through what feels like some cracked ribs. \"The further away she gets... probably already at the police station as we speak.\"\n\nHe laughs at that. \"I'd bet she'd just cream her little panties if she could hear you right now, wouldn't she? You being so god damned heroic. I think when I catch up to her, I'll tell her how you died and watch that spark of regret linger in her eyes as the life drains from them.\"\n\n\"Don't fall for that,\" Ricky warns but it's too late.\n\n\"You... won't ever... touch her, you son of a bitch!\" \n\nI get to my feet and stupidly rush him out of anger. He deftly dodges my assault and nails me good to the side of my head with the gun butt. I see stars and hit the pavement nearly to the point of passing out.\n\nHe steps over and pulls me up to my knees. \n\n\"I want you on your knees for this you piece of shit,\" He says. \"Look at me Grayson. LOOK AT ME!\" He shouts and slaps my face. \n\nI wobble a little and finally open my eyes. \"When I catch up with that little bitch of yours... stay with me Grayson... I'm gonna rape her and tell her that it's all your fault... you hear me? I'm going to put her through hell before I end her suffering and send her there to join you.\"\n\n\"Take this fucker out Ken. You can't let him walk out of this alley now!\" Ricky yells at me.\n\nWith that said Trent brings his gun butt sailing towards my temple for the killing blow. I move back at the last possible second and watch as the gun butt misses its target. I grab his wrist with my right hand and pull back while I slam my left forearm forward right at this elbow. There's a sickening snap followed by a loud shriek as I bend his arm the wrong way. Tendons snap, bone breaks and muscle tears dropping Trent to his knees, his right arm hangs uselessly at his side as I move behind him and get him in a rear chock hold.\n\n\"You're never going to touch her!\" I tell him as he cradles his shattered arm to his chest and moans. \n\nMy forearm cuts off his moans and he starts to struggle in vain for air. \"I'm going to kill you Trent, to make sure she never sees your face again you sick fuck!\"\n\n\"Grayson,\" A voice shouts from the alley. \"Enough!\"\n\nI look up in surprise and find a man in a dark suit and two Marines all with handguns pointed at me. The man in the suit steps forward with his gun trained on me.\n\n\"It's over Grayson. Let him go,\" he orders me.\n\n\"Don't do it Ken, you heard what he said he'll do if he gets the chance,\" Ricky argues.\n\n\"You CIA too,\" I ask. He nods. \"Then you know I can snap his neck before you can pull that trigger,\" I tell him. \n\nAll three men tense up and I feel the side of my mouth slide up into a smirk. \n\n\"Looks like you were right Trent, I am gonna die in this alley but I'm going to make sure you never get your hands on Michelle by taking you with me,\" I whisper to him. \n\nMy arm tightens getting ready to apply the torque needed to snap his neck when suddenly a voice calls out.\n\n\"Kenny, don't!\" Michelle shouts as she comes rushing into the alley. \n\nShe tries to run to me but one of the Marines hold her back. \n\n\"Michelle? What are you doing here? I asked you to run,\" I say confused. \n\n\"She did, right into us. We'd been tracking Trent's cell phone since he left Africa and got here as soon as we could,\" The man tells me. \"Now let him go and we can talk about this.\"\n\n\"There's nothing to talk about, he's never going to touch her. I won't allow it.\"\n\n\"No he won't,\" The agent says as he pulls the cell phone I gave to the Marine. \"We've got enough to send him away for a lifetime.\"\n\nSeveral anxious seconds pass then Michelle speaks. \"Kenny, please let them take him so you can take me home.\"\n\nA part of me is telling me to just end this here and now to be sure but when I look up at Michelle and see her pleading eyes I let Trent's semiconscious body slip from my grasp. I get to my unsteady feet and place my hands on my head.\n\n\"All right Grayson, now interlock your fingers for us,\" The CIA man says and I comply.\n\n\"Wait, what are you doing?\" Michelle asks him.\n\n\"It's all right Michelle,\" I tell her.\n\n\"No it isn't. He's the one that tried to kill us twice already today,\" She says. \n\nOne of the Marine's steps over and cuffs my hands in front of me instead of behind me. A wave of dizziness hits me and I almost fall over but he catches me.\n\n\"I've got you sir,\" He says as he tries to steady me. \n\nMichelle comes over and grabs me under my wounded shoulder to help me walk.\n\n\"Careful... my ribs,\" I tell her as I wince from moving. \n\n\"Jesus Kenny, you're a mess.\"\n\n\"Yeah well, you should see the other guy,\" I try joking but when I try and laugh it hurts too much.\n\n\"I can see the other guy and he's not covered in blood,\" Michelle points out then turns to Agent Jackson. \"Do you have a towel or anything I can use to clean him up with?\"\n\n\"Yes, there's a first aid kit in the SUV,\" He tells her.\n\n\"I broke his arm pretty good,\" I tell her as she guides me towards the vehicle.\n\n\"Concentrate on breathing and not talking right now Kenny, okay?\" She tells me. \n\nI nod at her.\n\nBehind us, I hear the CIA guy reading Trent his Miranda Rights as he too is placed in cuffs. \n\n\"I'll get you for this Grayson!\" Trent shouts. \"I'll hunt you down and make you pay! Watch my arm you asshole, he snapped the fucking thing.\"\n\n\"Oh I'm sorry. Did that cause you some discomfort?\" The Marine states jerking his broken arm just a little causing another squeal of pain from Trent who wisely stops complaining to him. I on the other hand is not as fortunate.\n\n\"Grayson, you should have killed me when you had the chance you piece of shit! You're gonna regret this day Grayson, both of you are going to regret this!\"\n\nCan someone put a muzzle on that asshole?\" Michelle asks as she returns with the kit.\n\n\"I wish that were allowed,\" Agent Jackson states. \"What I can do is keep recording all of this for evidence however.\"\n\n\"Good,\" She nods then turns her attention to where I'm leaning against the front of the SUV. Laying the kit on the hood, she opens it up and begins to mop up my face.\n\n\"Here we are again Kenny. It seems like only yesterday I was fixing you up with a medical kit oh wait it was just yesterday.\"\n\n\"Technically it was two days ago that you were fixing me up.\"\n\n\"Don't argue with me about what day is what Kenny. I'm saying is fixing your wounds are getting to be a pattern and not one that I like. I'm a biologist; I'm supposed to work on fish and sea life not you.\"\n\nI point to myself and say. \"SEAL.\"\n\nShe grins for just a brief moment before telling me to shut up.\n\n\"You should think about settling down Ken, maybe have a kid of your own. Michelle would be good for you, ya know?\" Ricky tells me before fading into the ether.\n\n\"Maybe I should.\" I say.\n\n\"Should what?\" She asks.\n\n\"Settle down.\"\n\n\"You think?\" She asks dabbing at a particularly nasty gash above my temple. \"Hold this here.\"\n\n\"I meant with you,\" I tell her as I try and follow her instructions.",
        "\"I think he hit you a little too hard Kenny,\" She says.\n\n\"No, I'm serious.\"\n\n\"This is a discussion for later okay. Just know that I love you okay?\"\n\nI nod as Trent is lead past us now silent but his glare says enough. \n\n\"He's going to come back you know?\" I tell her. \"No matter what hole they drop him into; he'll eventually crawl out of it and come after us.\"\n\nShe nods. \"We can worry about that when it happens, right now I just want to get you taken care of and back home with me.\"\n\nBack at the embassy, Michelle and I are separated despite her protest to the contrary. Agent Jackson doesn't budge sending me to the infirmary and Michelle to a private room upstairs to wait. A Gunnery Sergeant named Swepson accompanies me taking off my cuffs when the doctor tells him to.\n\n\"Hell of a fight you had,\" The doctor states. \"I heard the other guy screaming about his broken arm from down in the parking garage.\"\n\n\"He was kind of loud wasn't he?\" I joke.\n\n\"Not to mention a little brutal to you from the look of things. Let's see what kind of damage he wrought eh?\"\n\nThe doctor goes about his examination asking me what hurts, where and how bad. After redoing the stitches in my shoulder he takes a seat across from me.\n\n\"Good news and bad news. Good news is that your nose isn't broken and your stitches held up pretty well for the most part. Bad news is that you've got at least one broken rib and a couple that are cracked along with what I'd consider a mild concussion,\" He tells me.\n\n\"You SEAL's always get this beat up in a fight?\" The Gunny asks.\n\n\"Give me a break Gunny, it's been a long couple of days for me,\" I tell him.\n\n\"Yeah and you ain't as young as you used to be either, right Grayson?\" He asks in a Texas drawl. \n\n\"It's not the years, it's the mileage.\"\n\nHe chuckles at that then looks at the doc. \"He okay to head to Interrogation? Jackson wants a debrief as soon as possible?\"\n\n\"I see no problem with him taking that short of a walk but I'd leave the cuffs off him since it's his upper ribs that are injured,\" The doctor tells him.\n\nGunny Swepson nods and pockets the cuffs. \"I won't get any trouble out of you if I leave this off will I?\" he asks me.\n\n\"No sir. My days of fighting Marines are well past me.\"\n\nHe chuckles. \"Son, the shape you're in I'd say that's one hell of a good idea.\" \n\n\"What do you mean that I'm not allowed to see him?\" Michelle asks the Marine that's standing guard in her room.\n\n\"That's just what I was told ma'am,\" the Marine answers.\n\n\"Well you had better go and find someone that will tell you something different because if I don't get an update on him I'm marching out of this room and finding him myself.\"\n\n\"No need for all that Dr. Ripley,\" Agent Jackson says stepping into the room. \"I've just been briefed on our doctor's findings. Two cracked ribs, one broken rib and a mild concussion... oh and he had to replace a couple of your stitches too.\"\n\nShe nods her head. \"Okay so when can I see him?\"\n\n\"I've got to debrief him about all that's happened, I'm not sure how long that might take, but in the meantime I've got your family and friends on the line wanting to talk with you,\" He tells her.\n\n\"If you think that will appease me, it will for a little while but I had better see Kenny within the hour or we're going to see just how tough the Marine's here can be.\"\n\nAgent Jackson suppresses his laugh and looks over at the Marine stationed at the door. \"She scare you Marine?\"\n\n\"I'm a trained Marine sir but I hope you acquiesce to the lady's request. She looks like she'd be more than capable of ripping my throat out and showing me my vocal chords.\" He answers.\n\n\"I don't think I blame you one bit son but I'll try and keep you out of harm's way. Dr. Ripley, your call is being transferred in and I will see you again after I have a talk with Mr. Grayson.\"\n\nWhile I'm waiting for Agent Jackson I ask the Gunny where Michelle is.\n\n\"There's a VIP room for visiting dignitaries and the like that's not being used at the moment so I figure they've get her up there,\" He answers.\n\n\"VIP room? Nice. Hope she's enjoying it.\"\n\n\"She hasn't sat down once since she got here from the chatter I'm hearing in my ear bud. Threatened my guy at the door if he didn't let her come and find you. Something to do with pliers and an intimate part of his anatomy that he'd prefer to stay intact.\" \n\n\"I wouldn't doubt her Gunny, she fought her way out of an armed militia's headquarters, transfused my sorry ass with her own blood and drove through the streets here like a maniac.\"\n\nThe Gunny laughs. \"Yeah, we've been getting an earful from the Italian police czar about the crazy blonde American. Our diplomats gonna have his hands full on that one. If she did fight her way out of that camp though I might want to double the guard on her just in case?\" \n\n\"I've got her preoccupied for the moment Gunny but keep an ear out just in case,\" Agent Jackson says as he joins us.\n\n\"Preoccupied?\" I ask.\n\n\"We put call into to her family. She's on the phone with them now.\"\n\n\"That's good. They okay?\"\n\n\"Confused a little bit about what's going on but I'm sure she's explaining to them what's happened.\"\n\n\"I suppose that leads us to explaining my side of things of then?\"\n\n\"I listened to your recording so pretty up to speed but I'll need to get down in your own words how all this came into being.\"\n\n\"All right Agent Jackson, I'll tell you what I can. Where do you want me to start?\"\n\n\"The beginning is usually best. How'd you meet up with Agent Trent?\" He questions shuffling his papers. \n\n\"He picked me up at the airport. A friend of mine called around trying to get me some help in finding Michelle and Trent was there waiting at the airport in Morocco when we landed.\"\n\nHe nods. \"Uh huh. And then what?\"\n\n\"He brought me to what he said was his office in our embassy there, this crappy little room in the basement and I knew something was up.\"\n\n\"And how'd you know that?\"\n\n\"No one has offices in the basement of the Embassies. That's always used as a fallback position in case of an attack. You can't have filing cabinets, desks and the like in the way. Besides, there was no nameplate on the door and that egomaniacal bastard would raise hell until his name was on his door somewhere,\" I tell him. \"So I started recording the minute I walked through that door. I didn't know what he was about to ask me to do but I knew it was something, why else would the CIA pick me from the airport right? Then at some point he showed me that Michelle was in fact in alive and that's...\"\n\n\"You assumed that she was dead?\"\n\nI nod. \"I'd heard about Ballo and his forces aren't known for leaving anyone alive. I thought I was coming here to find a body. Turns out she was alive and according to what Trent showed me on his computer was about to be sold in an auction.\"\n\nHe stops me. \"So Agent Trent knew the location of a captured American citizen about to be sold as what I can only assume to be a sex slave or worse and did nothing? Alerted no one?\"\n\n\"I have no idea if he alerted anyone or not. All I know is what you heard on the recording.\"\n\nHe makes a note in the file and continues. \"Yes, pretty damning stuff. So we can add Aiding Human Trafficking to his list of charges. And what did Agent Trent ask you to do for this information?\"\n\n\"He wanted me to kill Ballo.\"\n\n\"And did you?\"\n\n\"He's dead. A gunship came in and leveled the place after I got Michelle out of there,\" I tell omitting my part in putting a bullet in Ballo's brain.\n\n\"Is this before or after you killed him?\"\n\nI shrug. \"I never said I killed him, I'm just confirming that Ballo is dead.\"\n\n\"Grayson, I'm not looking to hang this on you but are you sure Ballo is dead?\"\n\nI nod. \"I watched him enter his barracks, they took a direct hit from that gunship and no one came out of that inferno. He's a smoking corpse or at least we was two days ago.\"\n\n\"And you know he was in there for certain?\"\n\n\"He walked in and never left. I saw it myself.\" \n\nHe nods and gets to his feet. \"We'll I've got some good news and some bad news for you Grayson, which do you want first?\"\n\n\"It's been a long few days Agent Jackson; just tell me whichever you want.\"\n\n\"All right. Good news is Dr. Ripley is not going to be detained by us. As soon as her ride lands we'll escort her to the airport and she's free to go about her life. We figure she's been through enough already,\" He says with a smile.\n\n\"Thank you Agent Jackson.\"\n\n\"Not so fast. You on the other hand, we'll need you to take us through things that went on step by step. I'm afraid that you won't be able to go home with her,\" He says. \n\nI sigh. \"Do you think that there's any way I can go with you guys when you take her to airport? I promised her folks that she wouldn't leave my sight until I put her back in their arms. I'd kind of like to keep that promise if I can.\"\n\nHe thinks for a minute then says. \"I'll see what I can do. In the meantime I'll have you taken back to a room you can use to get cleaned up and some rest.\"\n\n\"Hey Jackson... thanks for your help, with everything.\"\n\n\"Don't thank me yet Grayson. I'm going to get Dr. Ripley's statement and I'm going to have to keep the two of you separated until I can verify a few details. Wish me luck for when I tell that to her.\"\n\n\"Just tell her that I said everything's going to be all right just don't make a liar out of me. She hates liars.\"\n\nHe nods. \"I think I can do that.\"\n\nA few hours later, they come to my room and get me. Gunnery Sergeant Swepson holds up the cuffs. \n\n\"I'm sorry as hell about this Grayson but I got my orders,\" He states.\n\n\"I understand Gunny, it's not a problem,\" I tell him turning so he can cuff me behind my back.\n\nI pause as my ribs scream out in pain as I stretch back but I manage not to.\n\nHe grabs my shoulder and turns me back around. \n\n\"They said I had to cuff ya, they didn't say how,\" He says cuffing my hands in front of me. \"That better?\"\n\n\"Lot's better, thanks Gunny.\"\n\nAgent Jackson gives him a look but says nothing about it. \n\n\"The Voss's plane will be landing shortly. Dr. Ripley is waiting for us in the car.\"\n\n\"Thanks again for letting me see her home,\" I tell him as we make our way down to the parking garage.\n\n\"Just doing my job,\" Agent Jackson says.\n\n\"I know your bosses didn't tell you to take me on this little ride, so thanks.\"\n\n\"As the Gunny here said, they said I had to keep an eye on you so since I'm escorting Dr. Ripley to the airport... well I just assume that meant to bring you along,\" He states.\n\n\"Sounds like a pretty loose interpretation of what they told you but I'm not going to complain.\"\n\n\"Good.\" He states opening the car door. \n\nMichelle is already seated inside.\n\n\"Kenny!\" She shouts and wraps her arms around me. It's awkward what with us being in the back of an SUV and my hands being cuffed and all but she makes it work. \n\n\"Why are you still in handcuffs?\"\n\n\"Orders ma'am, I'm sorry,\" Jackson tells her.\n\nHe sounds genuine in his apology as he climbs in the front seat flanked by a Marine driver and the Gunny seated beside me as my guard. Michelle reaches down and holds my hand as we start making our way towards the airport.\n\n\"How'd the call to your folks go?\" I ask.\n\nShe nods. \"About as well as you'd expect but they were glad to hear that we were both relatively all right.\" \n\n\"Michelle... I...\" I begin to say but she stops me.\n\n\"I know. When I saw the handcuffs I knew,\" She says tearing up. \n\nThe Gunny looks at us and then at Agent Jackson before producing the handcuff keys.\n\n\"Swepson, we weren't authorized to...\" Agent Jackson begins to say.\n\n\"He's in my charge and won't be giving me any trouble,\" Gunny Swepson states as he unlocks my cuffs and puts them away. I reach up, hug Michelle to me and whisper in her ear.\n\n\"Everything will be all right.\"\n\nShe pulls back. \"I can't leave you here Kenny. Is there anything I can do, we can do so you can come home?\"\n\n\"He'll just be about a week behind you is all Dr. Ripley. I just need him to walk us through some things and help me with a few reports and we'll send him right back to you. I promise,\" Agent Jackson tells her.\n\nThe grim mood lightens a little and she offers him a smile. \"Thank you Agent Jackson. I'm going to hold you to that promise. Otherwise I'll have to come looking for him and we'll start this cycle all over again.\"\n\nHe chuckles and shakes his head. \"We don't want that Dr. Ripley.\"\n\nSatisfied with his answer Michelle leans back, lays her head on my shoulder, and whispers to me.\n\n\"How are you feeling?\"\n\n\"A lot better now that I'm with you,\" I tell her putting my arm around her.\n\n\"Even with messed up ribs and a concussion?\"\n\n\"Yes, even with all that.\"\n\n\"You're so full of it.\" She says louder. \"What is going to happen to Agent Trent?\"\n\nAgent Jackson turns in his seat and tells her. \"He's being taken care of, don't worry about him.\"\n\n\"Can't say that I'm sorry,\" She says.\n\nBack to a whisper she asks me. \"What about you? Do you trust this guy to keep his word?\"\n\n\"He told me that he'd get you home and your plane is here. He told me that he'd see about letting me see you off and here I am so... I guess I kind of have to. I trust the Gunny here, he won't anything bad happen to me.\"\n\n\"Well nothing too bad Dr. Ripley. I mean he was a SEAL after all and they're known to get into all sorts of things they shouldn't.\" Gunny says getting a smile from her.\n\n\"Yes Gunny, they sure are but thank you. After the thing with Trent I'm having trouble trusting anyone that's CIA but if Kenny says you'll look out for him, that's good enough for me,\" She says.\n\n\"We're not all as bad as Agent Trent turned out to be Dr. Ripley,\" Agent Jackson says. \"I assure you that Gunnery Sergeant Swepson and I both will take good care of Mr. Grayson.\"\n\n\"Then I thank you both,\" She says.\n\nWe reach the airport and drive in the private hanger wing where the Voss jet is already waiting. Michelle gets out as soon as we come to a stop and runs towards the waiting group consisting of her parents, Alex, Addison and her dad. The six of them hug, laugh, and cry as the rest of us exit the vehicle. I breathe a sigh of relief that I've gotten her back to the people that love her and smile despite the fact that she's about to leave me. I stay at the front of the SUV with Agent Jackson and the Gunny just watching the happy group.\n\n\"So mission accomplished huh Grayson?\" He asks.\n\nI nod. \"I've done a lot of things before but I think that this is the most satisfied I've ever felt afterwards.\"\n\n\"You know, you may have caused me a shit load of paperwork Grayson, but you did a good thing here,\" He tells me.\n\nI nod and watch as they all try to talk at once and then break up laughing. \n\n\"Aren't you going to join them?\" the Gunny asks.\n\n\"Let them enjoy having her back for now. I'll say my hellos in a while.\"\n\n\"They're your people too Grayson. No need to hang on the sidelines just watching,\" He says.\n\nIt's almost as if Michelle hears him because at that moment she turns, looks at me and tells the rest of them to come with her. Addison reaches me first and hugs me tight causing my ribs to cry out in agony. I don't say anything however, I just breathe through the pain and hug her back.\n\n\"Addison, be careful he's got some cracked ribs.\" Michelle says pulling her back.\n\n\"Ribs, I thought you were shot?\" She questions.\n\n\"There was a fight. I pummeled the guys feet with my ribs,\" I joke.\n\n\"That was a horrible idea Kenneth,\" She says.\n\n\"Yeah, I figured that out the hard way I guess.\"\n\n\"You're still a goof ball. Thank you for finding Michelle and getting her safely back home to us. I don't know how we'll ever repay you,\" Addison says giving me a more careful hug this time.\n\n\"You already know that's not why I did this Addison,\" I tell her. \n\nShe looks at Michelle and sees the smile on her face. \"I know exactly why you did it and I'm so glad for the both of you.\"\n\n\"Where's Alex,\" Michelle asks. \"I figured he'd be with you.\"\n\n\"He stayed behind to greet everyone for us. T.J., Ramon, Lissa and Scott are all on the way to the estate to wait for us.\" Addison explains.\n\n\"There's going be a week long party when we get you home.\" Brenda Ripley says joining us.\n\n\"And Kenny, this is my mom, Brenda,\" Michelle introduces us. \n\nI stick out my hand to shake but the petite beautiful blonde woman slaps it away and hugs me much in the same careful way Addison just did.\n\n\"You saved my baby, you get hugs. I'm so sorry you got hurt helping her,\" She tells me. \n\n\"It's all right. I'm fine thanks to Michelle.\"\n\nMichelle blushes and tries to joke it off. \"I had to do something to stop your whining right?\"\n\n\"I don't whine.\"\n\n\"No, you said you don't whimper. There's a difference.\"\n\n\"Michelle!\" Her mom admonishes her shocked that her normally quiet daughter is acting like this but then sees the look Michelle and I are sharing and can't help but laugh herself. \n\nHer dad does shake my hand however. \"Just saying thank you doesn't feel like it's enough for what you've done for Michelle.\"\n\n\"It's plenty sir,\" I tell him. \"Michelle is very special to me as she is to all of you and I'd do all this again in a heartbeat if I had to.\"\n\n\"Except for the getting shot part,\" Michelle adds but I notice there's fresh tears in her eyes.\n\n\"I told you that was part of the plan,\" I joke and she smiles but then hugs me. \n\nMr. Voss comes up and hugs us both.\n\n\"I'm so glad that you both are safe and sound. Now let's get you home so we can really celebrate.\" \n\nAgent Jackson steps over and tells us.\n\n\"I'm sorry to break this up but I need to get Mr. Grayson back to the embassy. We have a long few days ahead of us,\" He states. \n\nThey look at Michelle and I confused. \n\nAddison speaks up. \"What are you talking about? Kenneth's going with us.\" \n\n\"I'm afraid not. We need him to stay with us for a little while longer,\" Agent Jackson says.\n\n\"My father has some very powerful friends that we can get on the phone in a matter of minutes if need be to get my friends, all my friends home,\" She tells him. \n\nHer father lays a hand on her shoulder to calm her down and they all look at me.\n\n\"What this about Ken?\" Mr. Voss asks.\n\n\"There are just some things I need to clear up first. I'm not under arrest or anything. I agreed to this, okay?\" I tell them. \n\nAddison doesn't look convinced but Michelle speaks up.\n\n\"I'll explain everything that I can on the plane. Just go back to the plane and I'll be ready to go in a few minutes, please?\" \n\n\"Son, if you need a lawyer or anything just tell us right now and we'll have one at the embassy before you get back,\" Mr. Voss says.\n\n\"Or we can start calling senators and congressmen until we get you home with us,\" Mrs. Ripley says and I'm touched that they're ready to fight for me.\n\n\"I appreciate the offer, I truly do, but it's not necessary. As I said, I'm not under arrest or being charged with anything. I just have to provide some testimony on a few things before coming home,\" I explain to them.\n\n\"And Agent Jackson knows that if he isn't back in a timely manner I will be back in this country raising all manner of hell,\" Michelle says giving Agent Jackson a smile.\n\n\"You've started enough international incidents Dr. Ripley. I'll make sure we get him back home to you all very soon,\" He tells her. \n\nSeemingly satisfied with this exchange the group allows Michelle to lead them back to the plane.\n\n\"You guys get comfortable, I'm going to go say goodbye okay?\" \n\nMichelle returns to where Agent Jackson and I are and asks him. \"Can you give us a minute?\"\n\n\"Yes ma'am,\" He states and steps away.\n\n\"I'm not one for long goodbyes,\" I tell her taking hold of her hand.\n\n\"If you tell me that the problems of three people don't amount to a hill of beans in this world I will punch you. Cracked ribs or no cracked ribs,\" She tells me quoting a Casablanca line that in truth was circling around in my head.",
        "\"There's just the two of us,\" I point out.\n\n\"You know what I mean Kenny,\" She steps into me and wraps her arms around me tightly but carefully avoiding my injured ribs. \"We could stay here you know, get a hotel and just wait until they let you go.\"\n\n\"Michelle, I don't want you guys to have to do that. You need to go home where you can relax and unwind after all of this. You need to be somewhere where you feel safe.\"\n\n\"What if I'm already in the place I feel safest?\" She tells me giving me a slight squeeze. \"I'm not sure that I can relax if I leave you here. I feel like I'm abandoning you. After all that's happened between us, after all you did for me and I'm running away again.\"\n\nI whisper to her. \"You're not running away Michelle, you're going home. There's a difference,\" I reach up to my neck and pull off my dog tags.\n\n\"Kenny, what...\" She begins to ask as I put them on her.\n\n\"I want you to hold onto these for me. You know how much they mean to me,\" I hold the shark tooth in my finger, \"especially how much this one means. Someone I love very much gave me this so I want you to hold onto it for me. You know I will come and get it back, okay?\"\n\n\"You promise?\"\n\n\"Cross my heart and everything,\" I tell her and get her to smile. \"That's the face I expect to see in a week all right? Don't let me down.\"\n\n\"Never,\" She says shaking her head. \"I want you to have something too.\" \n\n\"What?\" I ask watching her fumble through her pocket for a moment before producing the picture she had torn off the strip we had taken in Italy.\n\n\"Keep this with you,\" She says handing it to me.\n\nI look at the black and white picture; in it, the two of us are looking into the camera cheek-to-cheek and smiling. \n\n\"It reminded me of how we used to be.\"\n\n\"I do love you,\" I tell her and pull her in for a kiss. \n\n\"Yeah, I know you do,\" She responds and grins as we part.\n\n\"You do huh? And what about me? Don't you love me?\" I ask with a smile.\n\nShe gives me a devious grin and kisses me again before slowly pulling away. \"Yes, I love you and when you get home I plan to spend the rest of that week showing you just how much,\" She teases me.\n\n\"Just the one week?\" I ask. \n\n\"Come home to me and we'll see about it.\"\n\nShe makes her way up the stairs to the plane then pauses at the door, turns and blows a kiss to me before disappearing inside. Jackson lets me watch the plane taxi towards the runway before putting me back in the car.\n\n\"Let's get a move on Grayson, so we can get you back home to your lady.\" He says.\n\n\"This had better go quick Agent Jackson because she and I have a lot of catching up to do once I get home.\"\n\n*****\n\nThanks for reading, voting and commenting as my first story wraps up. I've got a few ideas kicking around for my next story. Let me know if you're interested in seeing this cast of characters again."
    ],
    "authorname": "AuroraIncident",
    "tags": [
        "michelle",
        "cia",
        "oral",
        "cowgirl",
        "teasing",
        "italy",
        "blowjob"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-rescue-pt-06"
}