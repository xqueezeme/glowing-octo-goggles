{
    "title": "There and Back Again Ch. 139",
    "pages": [
        "Chapter One Hundred Thirty-Nine: Worst Kept Secret \n\nWe had a number of problems to start sorting out the next morning when we met. All of the Wardens \u2013 including a somewhat subdued, though still alive Vander \u2013 met in the dining room, and I joined them as well. We expected Nathaniel back sometime during the day, but no one wanted to sit around just waiting until that happened. \n\nWe summarised the issues first: finding the Architect as well as the sentient darkspawn who'd escaped from the Mother's lair; repelling, and hopefully stopping the darkspawn attacks on Amaranthine and the Vigil; finding a cure or treatment for Faren's poison; and finding the Legion, wherever they'd gone. We also needed to find a secure place for the eluvian we'd brought back from the Dragonbone Wastes, not that most of the people knew what it was or why we'd gone to the effort of bringing it to the Keep in the first place. \n\nThe city and Keep were likely to be well-defended; most of the army had returned to the city, except for those who would return to the Vigil later in the day with Nathaniel. The defenses had been rebuilt by Voldrik and the Orzammar craftsmen, and the secret entrances collapsed; anyone caught outside the walls on their own was at risk, but the nearby farm folk had already been relocated to the city and the darkspawn were very unlikely to be able to breach the defenses. I would work with Nate and Varel to set up round-the-clock watches and patrols just in case. \n\nAedan planned to go to Amaranthine with Zevran, Vander, and Prince to talk to the locals and see if there were sightings or rumours of darkspawn around. Seranni and Velanna would travel to their clan to negotiate a treaty with Nathaniel, and request aid in locating the darkspawn \u2013 the Dalish knew the wilderness around Amaranthine well, after all. Alistair was going to take a group including Sigrun and Alim to the abandoned Silverite mine the Architect had occupied in game, and clear it out if any of the darkspawn had relocated there. Conrad would be organising Warden patrols with Oghren, Wulf, and Rolan across the Arling like he had been before, to see if they could sense darkspawn activity anywhere else. And Anders and Solona had been tasked with returning to Kinloch Hold to research Faren's poison and request the help of additional healers, if possible. \n\nOnce fed, and each Warden was clear on their assignment, they scattered to gather the supplies they'd each need. Aedan's group left almost immediately, Seranni and Velanna in tow \u2013 they were going to meet up with Nathaniel on the road to Amaranthine and requisition soldiers to accompany them, as well as connect for last minute discussions with Nate. The rest wouldn't be leaving until the morning, as they'd need to wait until Nate and the soldiers returned to the Keep. Saying goodbye was difficult for me, and I was starting to think I'd need to crazy glue my little family \u2013 Aedan, Zevran, and Alistair, mostly \u2013 together so I wouldn't have to keep being separated from them. \n\nI wasn't sad to see Vander go, though I did wonder if Zevran had ferreted out his story at any point. \n\nWhen Nate finally arrived back at the Keep later in the day, we sat down together with Conrad and organised patrols. Each of the four Wardens would lead a squad of soldiers, scouring the wilderness and crossing the less inhabited parts of the Arling looking for signs of darkspawn, while several other squads of soldiers would patrol the various roads, as well as around the Keep itself. One Warden would be near the Keep at any given time, to help defend against any further darkspawn attacks. Guards were assigned to a small, locked storage closet that now contained the eluvian that would ensure we would see Morrigan again, as well as to watch the sealed Deep Roads entrance \u2013 just in case. We also arranged a regular courier run from the Vigil to Soldier's Peak once per week. \n\n\"If you'll excuse me,\" Nate said, once we were done, \"I'd better check in on Thomas.\" \n\n\"Thomas?\" My jaw dropped as I stared at the dark-haired nobleman. \"Your brother Thomas?\" \n\n\"Do you know another one I should be aware of?\" he teased. \n\n\"I just...didn't realise he was here,\" I replied lamely. \"Fergus mentioned he was...\" I tried to find a word for 'fucked up' that wasn't offensive, but still got my point across, \"unwell.\" \n\nHe frowned, expression bleak. \"He's...broken,\" he admitted. \"We've never managed to figure out what he took at that brothel, but it damaged him. He isn't vicious anymore, but he's like a child. A confused, sad, never-aging child. He gets upset easily, sometimes harms himself by accident. Anders tells me his mind was affected. It's irreversible. I honestly don't know what to do with him. For now I have him isolated in his rooms with a couple of full-time caregivers to keep him safe and entertained.\" \n\n\"I'm sorry, Nate. I didn't know something like that was possible.\" I'd never heard of even cocaine or PCP leaving someone like that on Earth. \"I suppose it should have occurred to me to wonder where he was, but he was never really mentioned, where I'm from. He was supposed to have died when the darkspawn invaded Denerim. I sort of...forgot.\" I stood and patted his shoulder, feeling guilty and sad for Nate at the same time. While I'd been having my own personal crisis of conscience and he was organising an intervention, no one was helping him shoulder the burdens of his never-ending family screw-ups. \"Would you like company?\" \n\nHe shook his head. \"Thank you, but no. New people tend to make him agitated. He seems to have latched on to me, though, so I'm sure he was a nightmare while I was gone. I'll have dinner with him, and stay till he falls asleep. I'll see you in the morning, Sierra.\" \n\nI hesitated only for a second before pulling him in for a hug. \"If there's anything I can do...\" \n\nHe flushed and smiled. \"You'll be the first to know.\" \n\nI let him go, and went to find Alistair, my own personal comforter. We ate dinner with the Wardens left at the Keep, and then I bid them all goodbye before they turned in for the night. They were all leaving early, and I knew I wouldn't see most of them before they departed. Sigrun seemed disgruntled at leaving me and a number of servants in charge of Faren, but I hoped she understood that Alistair needed her. \n\n\"I've got this,\" I assured her for the seventeenth time in five minutes, as she reiterated his food and water requirements yet again. \"After everything, do you think I, of all people, would let anything happen to him?\" She shook her head ruefully, and I smiled. \n\nHer level of apparent devotion to the burly dwarf was sweet, and yet I couldn't help but be somewhat unsettled by it. I didn't have problems with any of our other companions falling in love, but this one seemed to worry me subconsciously for some reason. And there was that strange tension between Sigrun and Anders I hadn't had the chance to explore either. As I practiced dripping water into Faren's open mouth under her critical gaze, I tried to remember if there'd been any weirdness between the mage and either dwarf before, or if the relationship between Faren and Sigrun had been unusual in any way. I tried to picture any interactions I'd seen between the two dwarves, when the reason for my unease, the obvious thing I'd been missing practically slapped me in the face. \n\n\"Um, Sigrun? Had you met Faren before he was poisoned?\" I'd somehow forgotten that, stuck at Soldier's Peak like he'd been since the end of the Blight, he hadn't met any of the Legionnaires before we'd been captured, and that's what was worrying me \u2013 and Anders too, I guessed. \n\nShe blushed. \"No,\" she replied in a small voice. \n\n\"You didn't know him before joining the Legion of the Dead?\" \n\nShe shook her head, sheepish expression noticeable as she refused to make eye contact. I was thunderstruck. Has she developed some sort of obsession with a dwarf she's never even spoken to? As I pondered how to respond, she started talking. \n\n\"I know, I know. It's weird. I can't possibly have feelings for someone I don't know. I've already been shouted at by Anders a dozen times. But it doesn't matter. I just...I know he's a good person, and I want the chance to get to know him. I don't expect him to fall for me, or anything. Really!\" She looked sideways at me as I stared at her, water skin forgotten in my hand. \"Before you give me the lecture, can I ask you something?\" \n\nI nodded, completely unable to verbalise any sort of response in my state of shock \u2013 and worry. \n\n\"What does the Commander feel like to you?\" \n\nI cocked my head, confused, feeling a blush creep up my neck. Is she asking some weird question about my sex life? \"What do you mean?\" \n\nShe sighed, rolling her eyes. \"His taint. How would you describe it?\" \n\nMy eyes widened in alarm. \"Sigrun, I'm not...I don't...\" Why would she ask me that? To her knowledge, I'm not a Warden. \n\nShe snorted. \"Oh please. Worst kept secret in the entire Order. As soon as we heard what happened to Seranni, everyone realised the same thing must have happened to you. I don't know how or when, but you've been through the Joining too. Everyone knows.\" \n\n\"Everyone?\" I was reeling. What could I say? She's not wrong, and I'm not a good enough liar to convince her otherwise. \"Sigrun...\" \n\n\"You don't have to worry. No one will tell. Most of the people here care too much for you to risk Weisshaupt finding out. It's bad enough we have to let Seranni go there.\" \n\nI concentrated on my breathing, trying not to panic entirely. \"Everyone knows?\" She nodded and I slumped in my chair, swearing when a bit of water dribbled out of the skin I still held and on to my dress. I blotted the water hastily with a towel Sigrun handed me, and then rubbed my temples in dismay. \"Well that's...interesting.\" \n\nI supposed I shouldn't have been that surprised; none of the Wardens were stupid, and there were enough strange pieces of evidence to put it together. It didn't occur to me that learning about Seranni's condition would lead everyone to guess at mine. \n\nThen I had a thought. \"Wait, even Rolan?\" \n\nShe scowled and shrugged. \"Not sure. No one talks to him. Wouldn't be surprised, though.\" \n\nI sighed, hoping it wouldn't occur to him to share that information with the Chantry. Yeah, right. And yet, despite disliking him, I couldn't help but feel just a little sorry for him \u2013 brainwashed and then abandoned to die by the Chantry, recruited to an Order he was probably told was evil, forced to essentially accept blood magic to Join, and then hated by all of his new comrades; his life didn't sound fun \u2013 but not enough to accept his hatred of mages and the crap I knew he'd pull given the chance. \n\nSigrun interrupted my internal musing. \"So?\" \n\nI blinked. \"I'm sorry. So...what?\" \n\nShe giggled. \"So what does he feel like?\" \n\nI smiled softly, thinking about my husband, probably waiting for me in bed. \"Sunshine.\" I'd never come up with another word to describe it. \n\nSigrun nodded, seemingly unsurprised. \"Ever felt anyone else who felt the same?\" \n\nI shook my head. Some of them felt warm \u2013 Aedan and Zevran, primarily \u2013 but none radiated like Alistair. \n\n\"Commander Aedan and Zevran feel the same way about each other \u2013 I overheard them talking one day. So do Solona and Anders.\" She hesitated, looking anxious, then rushed ahead, her words tumbling over each other in her haste. \"I think it's possible that if people, if Wardens, are meant for each other, if they love each other...I think the taint reflects that. I didn't give it any thought, until we found you in that dungeon cell. Because...that's how Faren feels to me.\" \n\nI stared at the pretty dwarf, gobsmacked for the second time in a single conversation. I didn't know what to think. I had never been one to believe much in fate, but my story \u2013 my return to Thedas \u2013 would give anyone second thoughts. The Architect, and Flemeth for that matter, both claimed to be able to see the future in a limited way...and somehow a man from my Earth was able to see all the events happening in a multiverse, and write them into a video game. The taint feeling warmer for someone you were fated to love seemed like a very small stretch compared to the strange things I'd already seen in Thedas. Who am I to say she's wrong? \n\nI shook my head irritably, feeling a headache coming on. \"Look, just...no one can tell you how to feel. Maybe you're right, and when he wakes up it will be some amazing love story. But, Sigrun, what if it isn't? Just...try not to get your expectations up, okay? I'd hate to see your heart broken if he doesn't feel the same way about you.\" \n\nShe nodded, apparently relieved I hadn't made fun of her. I wonder what Anders said to her when she talked to him. \"I won't. I don't expect anything. I just can't help caring for him. And leaving him here...\" Her eyes filled with unshed tears. \n\nI reached out to touch her shoulder. \"Make you a deal. You keep my husband out of trouble and bring him back in one piece, and I'll make sure Faren's taken good care of while you're gone.\" \n\nShe smiled then. \"Deal.\" \n\nI finally left here there, slowly wandering back to my room, mind spinning with worry. Sigrun and Faren were a potential disaster waiting to happen \u2013 and so was Rolan, or any other Warden who decided to tell Weisshaupt about me. Even the Chantry seemed likely to be anxious, if they knew, and they had a habit of shooting first and asking questions later. \n\nI wasn't sure whether it would be best to admit it to everyone, and hope that I could plead my case so they would all keep their knowledge to themselves, or whether to keep denying it and hope that no one would say anything in the absence of confirmation. I trusted Sigrun, Seranni, Anders, and Alim not to tell anyone...but I didn't trust Rolan a bit, and couldn't really predict the response of the others. Some of them were likely to be really, really angry at me for keeping it from them. And someone like Vander, who didn't know me or care about me, could easily be manipulated \u2013 using his bitterness, if nothing else \u2013 to tell the truth to the wrong person. \n\nI sighed. I had little or no control over the situation, and all I could do was hope for the best. \n\nWhen I made it back to my room, Alistair was waiting for me, half-naked and curled up on the bed. His sexy smile morphed to a frown when I crawled into his arms without a word, burying my face in his neck and trying not to cry. \n\n\"Sweetheart?\" Alistair stroked my back, holding me firmly against him. \"What's wrong? Are you worried about us leaving? It's going to be okay, you know.\" \n\nI shook my head, voice shaky. \"No, it's not...well, of course I'm worried, but that's not it.\" The words spilled out of my mouth, then, and I told him everything: everyone knowing I was a Warden, Sigrun and Faren, and Anders' conflict with the dwarf over her feelings. Alistair just held me, his expression concerned but not panicked, his strong arms somehow easing my worry as I shared it with him. \n\n\"We will deal with Faren and Sigrun when the time comes. No point in looking for trouble.\" He grinned, eyes crinkling in the corners. \"If Faren's smart, he'll thank his lucky stars and just go with it.\" \n\n\"Jealous, are you?\" I winked, and he tickled me, making me squeal. \n\n\"She's not you, so no, but I really like her. He could do worse. And she's not an idiot. She'll be upset, I'm sure, but I don't see her acting out or making it awkward if he's not interested.\" \n\nI snuggled into his chest. \"I hope you're right. I don't want any hard feelings.\" \n\nHe rumbled an agreement, but then seemed to hesitate before saying more. \"As to the other thing...\" He sighed. \"I'm not surprised. Aedan and I have talked about the possibility.\" I looked up at him in shock, and he leaned down to rub noses with me. \"Our Wardens aren't stupid.\" \n\nI nodded ruefully. \n\n\"The thing with Seranni only made it worse,\" he continued. \"The only people I think we need to worry about are Rolan, and any new recruits like Vander. We trust everyone else, and anyone who mentioned anything was encouraged not to talk about it. We won't let Vander figure it out, and I'm not convinced Rolan knows. After seeing how uncomfortable you were with him at Ostagar, we've kept you away from him as much as possible \u2013 and it's not like he talks to any of the others much. He's focused on the mages, not someone he sees as a templar.\" \n\n\"You might be right \u2013 but that's not better. Did you see him smite them when we were fighting the Mother?\" \n\nHe nodded. \"We've been trying to decide what to do about him for a while \u2013 you were right. I hoped he'd come to see mages as people, but he hasn't. He keeps claiming Anders is possessed \u2013 because he's a spirit healer, I assume.\" I winced internally, trying hard not to show my discomfort with the concept of Anders and possession. I won't let Vengeance come to pass! \"If I didn't worry about Velanna, I'd send him to Weisshaupt with Seranni and let them deal with him.\" \n\nI wrinkled my nose. \"Let Avernus have him as a test subject?\" \n\nAlistair choked out a laugh. \"Don't even joke about that! You're terrible.\" I grinned and he kissed me softly. \"Try not to worry about it, Love. We'll figure it out.\" \n\n\"Which part?\" I whined pathetically. \n\n\"All of it. I promise.\" With that he kissed me again, and then again, and before long neither of us were thinking about Rolan. \n\nThe next morning, tired and stiff \u2013 the good kind of stiff, the kind that put an impish grin on my face \u2013 I kissed Alistair goodbye and went back to sleep for a little while, before finally getting up and dragging myself back to my lessons: horseback riding with Samuel, etiquette with Varel, and politics with Nate. I was worried Samuel would be angry with me, given that my last horse had been eaten, but he didn't mention it; he just told me he was glad I was back and safe. I started by brushing a new horse, and if he noticed my reluctance to talk to it or engage on any sort of emotional level, he kept it to himself. \n\nI visited Faren, spending a frustrating hour dribbling a porridge-type concoction into his mouth. I hope Anders and Solona find something at the Circle to wake him up \u2013 if for no other reason than how bad the porridge smells! It was not an easy task, and my respect for Sigrun's patience rose even more. \n\nI walked the walls, grateful not to feel any darkspawn nearby, and ate a quiet dinner alone in my room. The next several days were more of the same, though I found it harder and harder to concentrate as time went on. I got a letter from Cailan, just saying he was glad I was safe, and that he was planning his trip to Nevarra for the spring. Levi wrote from Soldier's Peak that some surfacer dwarves, willing to work as miners, were on their way to the Keep and were waiting for someone more experienced from Orzammar to put them to work. The patrols dropped in as they passed the Vigil and reported no signs of darkspawn. As nice as that was, all I wanted was word from my brother and my husband. \n\nI was enormously relieved when Alistair did finally return; covered in darkspawn blood, filthy, and nursing a recently broken arm \u2013 healed by Alim but still tender \u2013 I sent him into the shower and straight to bed. But it only ratcheted up my general level of worry: Aedan was supposed to have far less distance to travel, but he still hadn't returned, and no one had heard from him. Alistair's tale, told the next morning as we cuddled in bed, didn't help. \n\n\"So? What did you find?\" \n\nHe sighed. \"A lot of darkspawn; they were being controlled by an emissary. But someone else was there, killing them.\" He bit his lip, eyes dark as he stared off into space. \"I couldn't feel any other Wardens, but who else would be underground, in a mine with a Deep Roads connection? We killed the emissary, but there were bodies. Fresh darkspawn corpses.\" ",
        "I pondered this. \"I wonder...do ghouls feel different to you, than darkspawn?\" \n\nHe raised his eyebrows. \"I don't think so. What are you thinking?\" \n\n\"Well, in game,\" I began thinking out loud, \"the two groups of darkspawn \u2013 the Mother's and the Architect's \u2013 they fight each other. We would find groups of them trying to destroy each other. Neither of them have the numbers that they would have had in game \u2013 the Architect doesn't have as much Warden blood to work with, and the Mother didn't have time \u2013 but the Architect does, or did, have Utha. Do you think you would have sensed her?\" \n\nHe shook his head. \"When we saw them in the Dragonbone Wastes, I didn't even realise she was a ghoul until you said something. She felt just like normal darkspawn. Do you really think...? \n\n\"I don't know. I guess it depends \u2013 on how much she hadn't known about the Architect. I think he kept the truth from her, used the accelerated taint to manipulate her. In the book, when Genevieve and Bregan realised what he'd done, their reactions were...violent. They both tried to kill him. Maybe she'd do the same? I guess I'd prefer to believe that than think that she went along with him all this time even knowing the truth.\" \n\nHe hummed in agreement. \"Anyway, the emissary we killed was one of the Mother's disciples. He'd found some way \u2013 I assume using blood magic? \u2013 to control their minds, like an Archdemon.\" \n\n\"The Mother knew how to do that, in game. She must have taught them. Do you remember hearing about the Broodmothers the Legion and Conrad killed in that collapsed Thaig?\" He nodded. \"In game, somehow, the Mother was controlling them \u2013 and using them to breed her army. That's one of the reasons it wasn't as difficult getting at her as it should have been.\" \n\nHe shuddered, pulling me closer and kissing my forehead. \"I wonder just how much control each Broodmother has over her...progeny, anyway.\" \n\n\"That's something that I wondered too, especially given how keen the Architect was to 'free' a Broodmother.\" I thought for a minute. \"I also wonder whether Weisshaupt knows more about Broodmothers. The Wardens at Soldier's Peak from a few centuries ago too. Maybe that's what their research was all about?\" \n\nMy musing was interrupted by Alistair's confused expression, and my eyes went wide as I swore. \n\n\"Sonofa...I didn't tell you!\" I sat up, running an agitated hand through my unruly curls. \n\n\"Love?\" Alistair sat up as well, rubbing my back soothingly. \n\n\"With everything that happened with Faren, and the Architect, and the Mother...I never gave you guys much of a report about the Peak.\" I shook my head, disgusted with myself. \"Damnit. Well, I guess we'll have to go over it twice, because I think I'd better tell you now, not wait for Aedan.\" \n\nAnd I did. I told him about the mines, the tavern, the smithy, and the renovations, and then about the Deep Roads entrance in the basement. \n\n\"Makes sense,\" he mused. \"They're a long way from Orzammar or any reliable source of darkspawn blood to perform Joinings and monitor the darkspawn activity in the Deep Roads otherwise.\" \n\n\"There's more, though. Faren found...well, I think it was a research facility. It predates Avernus, if that tells you anything. But there were cages, stacks of paper...someone was keeping darkspawn, even ogres, alive down there. There was an arena...it made me wonder if they were using them for pit fighting or something, but now I think about it, they might have been doing research on fighting techniques, or the taint, or...I don't know.\" \n\n\"That's...disturbing. Did you read any of the research?\" \n\nI sighed, shaking my head. \"The parchment was so old it disintegrated if you touched it. I couldn't read anything. But, you know...there are at least two large rooms full of books in the Keep. I think one of the first people we might need to hire is a scholar \u2013 to sort through it, make some sort of catalogue, and read through anything there and see if it's relevant.\" \n\n\"We need an archivist.\" He looked at me, expression unreadable. \"I'd prefer it was a Warden.\" \n\nI considered. \"I can see that. If there's secrets...maybe we have a part-time Warden archivist and some sort of scholar who can work together? It seems like a waste to have a Warden whose only job is as a librarian. The scholar can teach, if there's ever kids at the Keep, and manage the library, but anything Warden-related gets handed to the Warden Archivist?\" \n\nHe smiled. \"See? That's why you get paid all that coin.\" He grinned and leaned in for a kiss. \"Can I ask you about something else?\" \n\nI nodded, curious. \n\n\"That mirror we hauled out of the Dragonbone Wastes...\" \n\nI smiled. \"The eluvian. I suppose I never really did explain why, did I?\" I flopped back on the bed, and Alistair leaned up on one elbow beside me. \"Well, let me start at the beginning. So, Morrigan is pregnant, right?\" He nodded at me to continue. \"The thing is, she thinks Flemeth is after the child, and maybe after her as well. And no, before you say it, Flemeth isn't dead. She gave an amulet with a...I don't know, a part of herself, stuck in it...she gave it to a refugee who fled to Kirkwall after Ostagar.\" I almost made a horcrux comparison, but it wasn't like Alistair would have known what I was talking about. \n\n\"Anyway, so Morrigan is looking for somewhere to go to be safe, somewhere she can raise the child and train him in magic. I suspect she's also seeking information to allow her to defeat Flemeth, but that's beside the point. Anyway, somehow, she's going to learn about eluvians. In Arlathan, they were used as sort of...portals. To where, I have no idea. Maybe to Arlathan itself? Or some other world? But Morrigan thinks she'll be safe there for a time. She will learn there was one in the Brecilian Forest somewhere, but it was corrupted and destroyed. She'll find shards of it, and use them to track down this eluvian, since they're all connected. So at some point, she's going to have to come to us.\" \n\nHe sighed. \"I'd like to hate her, but...\" \n\n\"She's the reason Zevran is alive. I know, dear.\" I leaned over and kissed his shoulder. \"She's also my friend. Do try to be polite when she comes to visit?\" I grinned at him, and he chuckled. \"It also gives Conrad the chance to see her again \u2013 and a choice. Because if he wants to, he could go with her.\" \n\n\"Through the eluvian?\" \n\nI nodded. \"And I think he very well might. I find that reassuring, I have to admit. He can help protect her and the baby.\" \n\n\"He can also keep her from doing anything stupid.\" I scowled, and he had the grace to look sheepish. \"I don't mean malicious, love. It's just...scared people do reckless things sometimes. Conrad has a good head on his shoulders, for all he acted like a half-wit gigolo when we first met. He won't let her go too far out of fear.\" \n\nI giggled at hearing Alistair say the word 'gigolo'; when he gave me a funny look, I curled up and guffawed. After a minute he chuckled and rolled onto his back, waiting for me to stop laughing. \"Very funny,\" he groused. \"You can stop making fun of me any time.\" \n\nI rolled over suddenly, throwing one leg over so I was laying on top of my husband, my thighs straddling his hips. \"Make fun of you, dear husband? Perish the thought.\" I kissed him, and we forgot all about the Architect, darkspawn, and Morrigan for the rest of the morning."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "romance",
        "modern girl in thedas"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-139"
}