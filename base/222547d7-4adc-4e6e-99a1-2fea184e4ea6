{
    "title": "Infatuation with a Co-Workers Tits Ch. 16",
    "pages": [
        "This picks up where chapter 15 left off\n\nThe Victoria's Secret store was deserted. A busty blonde welcomed us when we walked in, and a sexy redhead was behind the cash register at the other end of the store. We slowly strolled through the store with Katherine stopping occasionally to flip through a rack of intimates.\n\n\"Ya know, Katherine, if you really want to go back to work today, we need to pick up the pace.\"\n\nThe thought of time passing startled her. \"Yes, yes, you're correct.\"\n\nI picked up a hanger with a matching black bra and panty set with little red roses as highlights. \"Here, how about this?\"\n\nShe studied it. \"Hmmmmmm, possibly. I guess I can try it on.\" She searched the rack until she found a pair that fit her.\n\nJust before she entered the dressing room area, I said, \"Come out and show me when it's on.\"\n\nShe gasped and her jaw dropped. \"What?! I think not!\"\n\n\"Hey, if I'm paying for it, I should get to sign off on it.\"\n\n\"But...but I'll pay you back.\"\n\nDamn right you'll pay me back. \"We'll cross that bridge when we get there. But, for now, your purse is in your car. So I'm paying for it.\"\n\nHer hands balled into fists and her eyes narrowed. \"Fine,\" she huffed.\n\nI was actually pretty surprised she agreed to it. I enjoyed the view as she disappeared into the dressing room.\n\nAs Katherine changed into the lacy garments, her body grew hotter by the second. Her mind was racing. What's going on?! Why am I so aroused at the thought of showing off for this man?! It...it's just underwear. Yes, it's just underwear. He...he's seen you in much less. Yes, it's just underwear. She adjusted herself in the barely-there garments, put on the shirt, took a deep breath, and walked towards the store.\n\nI hid behind a rack of clothing, prepping myself for her entrance. I wonder if she'll actually go through with it.\n\nI heard a whisper. \"Mark. Mark. Where are you?\" I saw her blonde head poking out and spinning in every direction trying to find me. Holy shit! She's actually going to show me! I popped out from behind the rack with a wicked grin. Her eyebrows nearly flew off the top of her head. \"Oh my God, Mark! Oh my God!\" she screeched.\n\n\"Jesus Christ, Katherine,\" I chuckled. \"I think the whole mall heard you.\" I had my trouser snake out of its cage and in my hand. It was ready for action and pointing straight at her.\n\nHer hand covered her mouth. \"Mark! Mark! Ohmagawd, put that...that thing away!\" Look at the size of it! Oh my God!\n\nI stepped towards her. \"Not until you show me yours. C'mon, let's see.\"\n\nShe had totally forgotten the reason she was there. Her eyes bounced from my pole to my eyes, back and forth. Her body was on fire. \"Mark...please...put...put that away.\"\n\nI grinned while I waved it at her. \"Put what away?\"\n\n\"Your...your...you know...your...\"\n\n\"My what?\"\n\n\"Your member! Your...penis!\"\n\n\"My what?\"\n\nHer eyes darted around the store. \"Your...cock!\" she said under her breath. \"Your cock! Happy now?\"\n\nI shook my head. \"Not until you show me.\"\n\nShe rolled her eyes. \"Ohmagawd,\" she sighed. \"Fine.\" She quickly unbuttoned the shirt, looked around the store again, then pulled it open slightly. \"There.\"\n\nI shook my head. \"Nuh uh. Open it all the way.\" She stared at me, then pulled the shirt wide open. \"Oh my fucking God,\" I moaned. She was stunning. I almost shot my load right there.\n\n\"Mark! Please! Using that kind of language with the Lord's name? Please!\"\n\n\"Katherine, I'm standing here in a store at the mall with my dick in my hand and you're standing there in your underwear, Fuck it.\"\n\nShe furrowed her brow and clenched her teeth. \"So, do you approve? May I close my shirt now?\"\n\nI ran my hand in a circular motion. \"Spin around, let me see it from the back.\"\n\n\"Oh my God,\" she groaned, then did as requested. She nearly came out of her skin when I pressed against her from behind. \"Mark! What are you doing?!\"\n\n\"Just giving it a test run.\" She yelped when I reached around and pinched her erect nipples. \"Damn, Katherine, you must be really excited. You could poke an eye out with these things.\"\n\n\"That...that's not true! It...it's quite cold in here!\" Oh my God! Not my nipples! He knows how sensitive that are! Oh my God! \"Mark...please...stop. (GASP!)\"\n\n\"If it's so cold in here, why is your cunt drenched?\" I whispered in her ear while I tweaked her excited clit.\n\n\"I...I...\" she panted.\n\nI moved our bodies forward. \"Come on, let's go back to your dressing room. I think I need to have a closer look.\"\n\n\"What? Why? Mark...please...wait!\" Her words objected. Her body didn't. She didn't put up any fight as I pushed her into a dressing room. \"What...what're you doing?\"\n\n\"I need to get a better look at these to see how they look on the floor,\" I said as I pulled the shirt off her shoulders and down her arms.\n\n\"Wait...what?!\" I unsnapped the clasp of the bra. It snapped around her sides and the straps fell down her arms. Her hands caught the cups and held them in place. \"We...we shouldn't. What if they (GASP!)\" The air left her body when I slipped a hand inside her new panties and slapped her enraged clit. She lifted onto the balls of her feet when I slipped a finger into her hot gash.\n\n\"Katherine, you're soaked. You want me to fuck you, don't you?\" I mocked into her ear.\n\nShe shook her head. \"No. No. That...it's not true! It...it's very warm in here.\"\n\n\"Wait. You said your nipples were hard because it was cold. Now you're saying it's hot. Which is it, Katherine?\"\n\n\"I...I...oh!\" I yanked her panties past her knees. She stepped out of them when they fell to the floor. \"Mark...please...\"\n\n\"C'mon, Katherine, let's get rid of this.\" I gently tugged at the bra she was holding against her chest. She finally relented and let it fall away onto the bench seat in front of her. She yelped when I grabbed two handfuls of her fleshy mounds and tweaked her erect nipples.\n\n\"There now, isn't that better?\" I whispered while she stood there completely naked with the exception of her black stilettos. I placed one hand on her hip and the other on her shoulder. \"Let's get you bent over.\"\n\n\"Mark...please,\" she said but didn't resist. \"What...what if someone walks in?\"\n\nI closed the door to the tiny dressing box. \"There. That better?\" I stepped between her legs which she willingly spread. She fell forward and put both palms against the flimsy wall. She squeaked when I touched the tip of my prod to her swollen lips. Another squeak when it slipped through. I paused. I debated in my head how I wanted to handle this. Her body tensed when I grabbed her hips. She whimpered while I slowly fell forward until I was balls deep. I leaned over her back and breathed in her ear, \"How's that? How does that feel, Katherine?\"\n\nShe glanced over her shoulder. \"Mark...please...s-s-someone could...could walk in. Someone could walk in any GAH!\" She barked when I pulled back and jerked forward.\n\nI chuckled. \"They will walk in if you don't keep it down.\" I repeated the motion. Another bark got stuck in her throat.\n\n\"You're...you're so mean,\" she mumbled. Just fuck me!\n\nI finally began to fuck her slit properly, slowly building speed until I was at full ramming speed. I had a wicked grin while Katherine closed her eyes tight and gave light grunts through a clenched jaw. Her hips quickly began to push back into my thrusts. After only a few minutes, I could feel her heart beginning to race. Her thrusts back into me became more aggressive.\n\n\"Do you like that, Katherine? Hmmmm? Are you still worried about somebody walking in?\" I hissed under my breath.\n\nShe shook her head. \"N-n-no. Don't stop! Oh God! Please don't stop!\" She moaned when I did exactly that. Her head snapped around. \"Wha...wha...why...why did you stop?\"\n\nI was deep inside her but not moving. \"Why'd I stop what, Katherine?\" I said sarcastically.\n\n\"Y-y-you know, um, you know, stop...\"\n\n\"Fucking you? Is that what you're trying to say?\"\n\nShe took a breath. \"Yes,\" she said quietly.\n\n\"Yes what?\"\n\n\"Why...why did you stop...stop fucking me?\" Her jaw dropped and she gasped when I pulled back and fell out of her.\n\n\"I think we're done here,\" I said with a sly grin as I tucked my tool back into my pants.\n\n\"But...but...I was so close.\"\n\n\"Close to what?\"\n\n\"Close to...you know...\"\n\n\"Cumming? You were close to cumming?\"\n\nShe bowed her head and nodded. \"Yes.\"\n\n\"Say it. I want to hear you say it.\"\n\n\"I...I was so close to...cumming.\"\n\n\"Yeah, well, maybe if you're a good girl, I'll let you cum later.\"\n\n\"What?! Later?! But...but...\"\n\nI gathered her new underwear. \"Get dressed while I go pay for this.\"\n\n\"But...wait...what?!\" she said to the closing door. That bastard!\n\nHer face was flushed when we walked into the bright light of the mall. \"You're so mean,\" she grumbled.\n\n\"Why? Because I wouldn't let you cum?\" I said in a mocking tone.\n\n\"Mark! Please! We're...we're in public! Someone could hear you!\" I chuckled and shrugged my shoulders.\n\nShe was walking practically cross legged trying to put out the fire I had started between her legs, to no avail. All she could think about while we walked past the few people along the way was how badly she needed a release. My God! I've never felt such a feeling of physical aggravation! All I can think about is his...his huge cock helping me finish! I've never wanted to orgasm so badly in all my life! She didn't notice the furrowed brows of the women we passed or the leering stares of the men at how she was dressed and the fact that her dark areolas were plain to see and her grumdrop-sized nipples were trying to tear through the shirt.\n\nWe finally turned out of the bright mall lights into a women's clothing store. We both lazily flipped through the racks full of clothes. Katherine finally picked out two outfits she found to her liking and headed off to the dressing rooms.\n\nI was mindlessly rummaging through a rack of clothing when Katherine walked out of the dressing room area and around the corner. My eyebrows nearly flew off my head. I saw a smile cross her face at my reaction. She was wearing a thin, dark blue sweater with a plunging swoop neckline. Her tits practically fell out of it. Barely a twist revealed a hint of a puffy areola. A more drastic turn and the whole tit would fly out. It was coupled with a black leather mini skirt that wrapped around her tan thighs and clung to her heart-shaped ass like it was painted on.\n\n\"So? What do you think?\" she asked with a twinkle in her eye.\n\n\"I, uh, yeah, I like it. I like it a lot.\" I quickly became aware of how uncomfortable my jeans were.\n\nShe played with the swoop neckline. \"You don't think it shows to much of my breasts?\"\n\n\"Uh, no, I think it's, uh, fine.\"\n\nSuffer! She spun around. \"What about this skirt? Do you think it's too tight? Does it make my butt look big?\"\n\n\"Noooooo! I, uh, I think it looks fuckin' great!\"\n\nShe furrowed her brow. \"Mark. Please. We're in public, for goodness sake.\"\n\nShe's standing there half naked and she's scolding me for a curse word? \"Fine. Yeah, sorry. No, it looks good. It looks great.\"\n\nShe twisted while looking at herself in the mirror. \"Hmmmmmm. I don't know.\" Ha ha! Look at him! My God! Look at that bulge in his pants! I picked these clothes out to torture him but it's torturing me! These sessions aren't working! \"I don't know. I've got another one to try on. Wait here, I'll be right back.\"\n\nI anxiously awaited for the next outfit to be revealed. I didn't have to wait long.\n\nI couldn't help myself. \"Wow!\" I exclaimed.\n\nAnother self-satisfied grin crossed her face. Now she was wearing a peach colored one piece, strapless micro mini dress. It wore like a second layer of skin. The color made her tan skin come alive. The top barely covered those luscious tits. Her erect nipples were poking just under the top of the dress. I know those areolas were just dying to peek out. The bottom hem fell just below her incredible ass. There was no way she was sitting down wearing that and not doing a Sharon Stone Basic Instinct flash. It clung to every curve.\n\nShe put her hands on her hips and twisted at the waist. \"So? How's this one?\"\n\n\"Uh...wow,\" was all I could manage.\n\nI think for the first time since I'd known her, she giggled. \"I don't know. It might be a little small.\" A little?! \"I mean, watch this.\" She did a quick scan of the store, then took a deep breath. My jaw dropped when her tits flew out of the dress. She left the top down just long enough to torture me, then pulled it back up and tucked the girls back in. \"See?\" she said with a sparkle in her eye.\n\n\"I, uh, I think it's perfect!\" Perfect for when I want to fuck those big titties of yours!\n\n\"I'm sure you do, you perverted degenerate,\" she said with a mixture of snobbish Katherine and whore Katherine. She went to the mirror and studied herself. \"Hmmmmm. I don't know. Which one do you like better?\"\n\n\"I, uh, I like 'em both.\"\n\nShe turned an walked towards me. My God! It's going to tear through his pants! \"Maybe you need to see the other one again.\"\n\n\"Yeah, sure.\"\n\nShe grabbed my hand and looked up at me with those fuck-me eyes. \"Maybe you'd like to, you know, come back to the dressing room and look at it?\" she cooed.\n\nA wicked grin crossed my face. \"I think that's an excellent idea.\"\n\nShe pulled my hand and we quickly made our way to the entrance of the dressing room area, where we paused to make sure the coast was clear. She tugged on my hand again and led me down a short corridor with white doors and tiny rooms on either side until we turned into the one with her clothes neatly folded and laying on a bench seat. Much to my surprise, she put her hand behind my head and pulled me down until our lips locked. I had the top of her dress yanked down to her waist in milliseconds. I assaulted her fleshy globes while she fumbled with my pants and zipper until finally there was the sound of \"zip\" and her hand was inside my briefs and wrapped around my stiff staff.\n\nIt wasn't long before she broke off the hot kiss and took a step back in the tiny room. Her face was flushed and her tiny dress was gathered around her waist. Her eyes briefly bounced from my face to my protruding tool.\n\n\"I want...I want you to have intercourse with me.\"\n\nI chuckled. \"I kinda figured that.\"\n\n\"But only if you'll bring me to orgasm...and let me orgasm!\" She said that way louder than she had intended and covered her mouth with her hand.\n\nThe corner of my lips curled up. \"Hmmmmm, you've been a good girl. I s'pose I can do that. Turn around.\"\n\nShe turned around, bent at the waist, and placed her palms on the wall just as before. \"Do you promise? (GASP!)\"\n\nI yanked her dress off her hips and past her knees until she stepped out of them. I leaned in and whispered in her ear, \"I promise. I'll make you cum so hard you'll think you're gonna pass out.\" The sinister tone and the thought of having an orgasm like that sent a chill up her spine. She squeaked when I slipped my hand between her legs and rubbed her swollen slit. \"Look at you. You're soaked! You're like a little bitch in heat!\" She grunted when I slipped to two fingers in.\n\n\"Please...please don't say such things about me,\" she whimpered.\n\nI chuckled while I pumped my fingers through her flesh. \"What would you call it?\"\n\n\"I...I...mmmmmmm...I can't help it. You...you had me so agitated earlier! I...I can't help it.\" She sighed when I pulled my two fingers out. I touched the two shiny digits to her lips. She sucked them in a licked the taste of herself off of them while I chuckled.\n\nI slid between her parted legs and grabbed my tool. She gave a light moan when I touched it to her gash. \"What did you say you wanted, Katherine?\" I asked while I slid it along her soaked slash.\n\nHer eyes were closed. \"I...I want you to...to have intercourse with me and bring me to orgasmmmmm.\"\n\nI rubbed harder. \"You want me to what?\"\n\n\"I...I would like to have interc...OW!\" I left a handprint on her ass.\n\n\"Nooooooo. Say it right.\"\n\nShe gulped and took a deep breath. \"I...I...I want you to...to fuck me...please.\" Please!\n\nI was enjoying this way too much. \"Untilllll?\"\n\n\"Until...until I...I cummmmmm. Please. I...I want you to fuck me until I cum. Please.\"\n\n\"And how shall I do that? How would you like for me to make you cum?\"\n\nShe paused. I felt her body change. Her eyes were slits when she turned her head and looked over her shoulder at me. \"I...I want you to fuck me. I want you to fuck me with that fat fucking cock of yours until I pass out. Can you do that? Do you think you can do that, you bastard?\" she hissed in a husky, demanding voice. Was that me?!\n\nHoly shit! \"Let's find out,\" I growled back. I grabbed her hips and spun her around like a rag doll until we were facing the mirror. I pushed her on the shoulder until she was bent at the waist again. \"There you go, you fucking bitch. Now you can watch while I wreck your fucking cunt!\"\n\nThe words barely had a chance to register in her brain before she howled, \"Oh my God!\" when I stabbed her with my sword and her back arched.\n\n\"Jesus Christ, Katherine! Your fucking cunt is so tight! Fuck!\"\n\n\"Oh my God, Mark! You're...you're so big! GAH!\"\n\nI threw my hips forward hard and chuckled. \"You'd better keep your voice down or they'll be coming back here to see what the hell's going on. You don't want that, do you?\"\n\n\"No...no, I don't. GAH!\"\n\nThe tiny room was quickly filled with the sound of skin slapping skin. She looked at herself in the mirror while she clenched her jaw and stifled her moans. My God! Look how hard he's doing it! He...he...he really is going to wreck me!\n\nBeing in the excited state she was already in, it wasn't long before her cunt started to spasm around my muscle. She squealed when I reached around and flicked at her raised kernel.\n\n\"You're about to cum, aren't you, you little slut?\" I hissed.\n\n\"Y-y-yes...yes...I...I...oh God! You're...you're fu...fucking me so hard!\"\n\nI ran circles around her bean. \"Say it. Tell me about your slut cunt.\"\n\n\"You're...you're fucking my...mmmmmy tight, slu-u-utty cunt so...so...oh my God! So hard! I...I...I'm going to...mmmmm...\"\n\n\"Going to what?\" I asked as I pounded her harder.\n\n\"Going...going to cu...cu...cummm! Ohmagawd!\" I pressed on her launch button. \"Gahhhhhh!\"\n\nHer entire body trembled while she fought back her screams. It was like trying to not laugh in church, it only made it worse. Electricity tore through her body like a lightning bolt.\n\nWhen her trembling slowed, so did my thrusts. She squeaked when I pulled out of her aching snatch. She started to straighten when I pressed her back down.\n\nShe looked over her shoulder. \"Wha-wha-what are you doing?\"\n\nI gave her a wicked smile. \"I'm not finished yet.\" I took a step back and bent over. She nearly came off her feet when I spit onto her twitching rosebud.\n\n\"(GASP!) What...what...what are you doing?!\"\n\nI ran my finger around her shiny bung hole. \"Well, I think I'm to fuck this little hole right here,\" I chuckled.\n\n\"Here?! Right here?!\" She barked when I slipped a digit in until the knuckle stopped it.\n\n\"Yeah, I think so. C'mon, Katherine, you love it in the ass. Tell me how much you love getting fucked in the ass.\"\n\nIt's true! God forgive me, I do love having anal intercourse with him! \"No...no...it...it's not (gasp) true,\" she said while I rubbed my purple tip around her puckered hole.\n\nI laughed. \"You're such a lying bitch, Katherine. And not a very good one at that.\" She gasped when I slipped the swollen head in. \"C'omn, Katherine. Tell me how badly you want me to fuck your ass.\"\n\nI do! \"Yes. Yes. I...I want you to have...have anal intercourse with...with me.\" CRACK! \"OW!\"",
        "\"Nooooooo,\" I hissed while I slid another inch past her sphincter.\n\n\"Oh...oh God...I...I...\" She took a deep breath. \"I...I want you to...to fuck my ass with...with your big, fat cock,\" she moaned.\n\nWe both groaned while I fell forward until my balls stopped me.\n\n\"Jesus Christ, Katherine. I need to fuck your ass more often,\" I lamented.\n\n\"Yes...yes! Yes, please!\" she said without even thinking.\n\nI slowly began to rock back forth, picking up steam as I went. We both nearly came unglued when there was a knock on the door.\n\n\"Hello? Is anybody in there?\" came the young female voice.\n\n\"Y-y-yes,\" Katherine squeaked. I started to rock my hips again. She turned her head and whispered, \"Stop it!\" I smiled and shook my head. \"Oh God!\" she muttered.\n\n\"Are you okay in there? Can I get you anything else to try on?\" the voice on the other side asked innocently.\n\n\"N-n-no, I...I'mmmm fine, uh, thank..thank you.\"\n\n\"Was that your husband out there with you?\"\n\nI fought back a laugh. Katherine panicked for a moment, thinking Darren might've been out there, until she realized she was asking about me.\n\n\"N-n-no,\" she muttered.\n\n\"Boyfriend?\"\n\n\"Mmmmmm, no. Hmphfff!\" she grunted when I threw my hips forward.\n\n\"Just a friend? Because I think he left. I haven't seen him in a little while.\"\n\n\"Y-y-yes. A...a friend.\" Her legs began to tremble. A pair of trains were racing up her thighs. No! Not now!\n\n\"Oooooo, a friend. He's kinda cute,\" the voice giggled.\n\nI leaned into Katherine and whispered, \"A friend with benefits.\"\n\n\"Yes. Yes! A...a friend...friend with...mmmmm...ben...ben...benefits.\"\n\n\"Ooooooo! Those are the best kind!\" The voice squealed. \"Well, if you need anything, just let me know.\"\n\n\"Yes! Yes!\" I pressed on her button again. \"Oh gaaahhhhhh!\" She did her best to muffle her cry when the two locomotives crashed into her gash. They exploded like an atom bomb. Every nerve ending was on fire.\n\nHer ass clamped down on my rod like the jaws of life. \"I'm gonna cum in your slutty little ass, you fuckin' cunt!\" I hissed.\n\n\"Yes! Yes! Cum...cum in my slutty little...little...oh God! Little ass!\"\n\nMy fingers dug into her hips. \"Gaaaafuck!\" Each spurt of spunk I shot up her ass only elongated her own orgasm. Her body trembled while I continued to gape her ass and fill it with jizz.\n\nBoth our bodies finally settled. A stream of white spilled out of her freshly widened hole and ran down her thighs when I pulled my throbbing meat out. I slapped it against her taut ass, sending white droplets up her back. I stepped back and she crumpled to her knees.\n\n\"You're such a fucking whore, Katherine. Cumming while you're talking to a sales clerk. Tsk tsk,\" I chuckled while I tucked my beast away.\n\n\"Don't...don't talk like that,\" she panted.\n\nI laughed and gathered up her two new outfits along with the bag containing her new under garments. \"I'll go pay for this while you get dressed.\" She simply nodded her head.\n\nI opened the door and peaked into the hallway. I could hear the rustling of clothes being changed in another room. I stepped out and hustled down the hall. As I rounded the corner to step back into the store, I nearly collided with a middle-aged woman entering. She had a stunned look on her face.\n\nI held up the items of clothing and smiled. \"Wrong size,\" then stepped away.\n\nI laid the clothing on the counter. The woman behind the counter smiled at me and rang up the sale, stuffing the clothes into a bag after each scan. The machine whirred and spit out a receipt and she held it up.\n\n\"Receipt in the bag?\" It was the voice on the other side of the door.\n\nI nodded. \"Sure, that's fine.\"\n\nShe scribbled something on the receipt before she tossed it into the bag. She grabbed the bag and paused before handing it to me. Her eyes sparkled. \"I put my phone number on there. You know, just in case you, uh, you know, have any questions or...if you need anything else.\"\n\nI gave her a crooked smile back and nodded. \"Sounds good. I'm sure I'll have 'questions'.\" I grabbed the bag and left the store, knowing a pair of eyes were watching and waiting for a call.\n\nKatherine finally lifted herself off of the worn carpeted floor. She felt the warm, sticky streak slowly easing down the insides of her thighs. When she looked on the bench, all she found was the shirt and belt she had started the day in. He took everything! He even took the undergarments! Dammit!\n\nWhen Katherine walked out of the store, I could see her entire body was flushed from the heat of two orgasms. Her face had a sour look on it.\n\n\"May I have my under garments, please?\" she asked when she got to me.\n\nI smiled. \"I paid for 'em. You'll get 'em soon enough.\"\n\n\"Bastard,\" she said under her breath.\n\n\"C'mon, let's get you outta here so you can get back to work.\"\n\nShe froze. \"I...I can't go to the office looking like...this!\"\n\nI smiled. \"Well, the way I see it, you've got a couple of choices. You can put on one of your new outfits here and go to work...\"\n\nShe cut me off. \"I look a mess!\"\n\n\"Okay. You can come back to my place, shower, then go to work...\"\n\nShe cut me off again. \"I...I don't...I don't have any make up at your home.\" Nice recovery! The truth is, I don't trust either one of us being alone together!\n\n\"Okay. Then I'd say your only other option is to call in sick for the rest of the day and go home. You live so far out, by the time you get home and get ready, there's no sense in going in. Plus, I've still got to take you to your car.\"\n\nMy car! \"Shoot. I really wanted to go to work today.\" Who the fuck really wants to go to work any day?! \"Do you think my car is okay?\"\n\n\"Your car will be fine. If we hurray you should be able to beat Darren home.\"\n\nDarren! \"Oh no! Darren's working from home! How will I explain...this!\" She waved her hands over herself.\n\nI laughed. \"Oh-ho-ho! Sounds like you've got a pickle.\"\n\nThink! Think! \"Darren's office is in the back of the house. If I come in the front door instead of through the garage, I might be able to rush into the bedroom without him hearing me. I...I can tell him my clicker is broken and I'm not feeling well. Yes, that's what I'll do.\"\n\nI grinned. \"Damn, Katherine, you're getting pretty good at making up stories.\"\n\nShe glared at me. \"It's all your fault!\"\n\nI shrugged my shoulders. \"Hey, I'm not the one who stripped naked and had a gang bang with a bunch of strangers and had my clothes stolen.\"\n\nThe vein on her forehead almost burst. \"It was all part of the 12 steps!!! I'm trying to get better for the both of us! How was I supposed know those perverted degenerates would take my clothes?!\" she screamed. The words echoed throughout the mall. She turned beet red when she noticed a couple who was walking 100 feet in front of us turn their heads.\n\n\"I know. I know. Settle down. Let's get you home. A hot bath and a glass of champagne will do wonders.\"\n\nShe took a deep breath. \"Yes. Yes. You're right. I'll tell them plans have changed and I won't be in today.\"\n\nIt was the middle of the afternoon when we finally got to her car. It didn't have a scratch on it. I handed her the key she had given me the day before. She grabbed her bags and opened the door. Before she climbed out of my truck, I grabbed her hand and stopped her.\n\n\"What? What is it? Did I forget something?\"\n\nI shook my head. \"No no, nothing like that. I just wanted to say, if you wear one of those outfits I bought to the office tomorrow, I'll have something for you.\"\n\n\"Something for me? Really?\"\n\nI nodded. \"Really. Swing by my office in the morning and we'll talk about the next step.\"\n\n\"The next step? Oh! Yes, in the recovery process! Yes, of course.\" How do I tell him it's not helping me? That poor man! Having to deal with my affliction! I must try harder! \"Do you have a preference?\"\n\n\"Preference?\" She held up the bag of clothes. \"Oh! Preference!\" I gave her a wide smile. \"No, surprise me.\"\n\nShe was confused. \"How will I surprise you? You've already seen them?\"\n\nGood grief! \"No, it doesn't matter. Whichever you want is fine.\" Holy shit! She's actually going to wear one of those to the office?! Holy shit! \"Okay, Katherine. Be careful going home. I'll see you tomorrow.\"\n\n\"Yes, thank you. And, thank you for your hospitality and letting me spend the night at your home last night.\" And letting me orgasm with that huge member of yours while you slept!\n\nHa! Thank you for being my personal cum dumpster the last two days! \"No problem, Katherine. See you tomorrow.\" Tomorrow's going to be a good day!\n\nTo be continued..."
    ],
    "authorname": "fearthisss",
    "tags": [
        "anal sex",
        "big cock",
        "big tits",
        "blow job",
        "cheating wife",
        "cum",
        "exhibitionist",
        "female submissive",
        "orgasm",
        "public"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/infatuation-with-a-co-workers-tits-ch-16"
}