{
    "title": "London Girl",
    "pages": [
        "I kicked my legs idly against the stool as I watched the people passing by outside. It was a grey day in London, the end of a long cold winter, and the pedestrians were still bundled up in coats, jackets and scarves, hunched against the biting wind. Small patches of chill sunlight darted through the broken overcast up above, raising bright colours on the busses and taxis that crawled past. \n\nI toyed with my food, ate another piece of sashimi, and then eyed my phone once more.\n\nThe email had arrived late the previous evening. My aunt June generally wrote to me infrequently, usually only to check that I was well and happy, and to send me occasional scraps of family news. This time had been different - my cousin Andrew would be arriving in London later in the week, and my aunt had asked if I could check up on him and make sure he got settled in.\n\nI shook my head again, amused. Despite my uncle's massive wealth, my aunt had never to my knowledge been to Europe, so her idea of the relative size of things here was sometimes skewed. I supposed she had no idea of the size of London, nor of the slim chance that Andy would wind up anywhere near my neck of the woods. I knew she'd give him my number and email address, and if he needed help I guessed he'd call. \n\nSomehow, though, I doubted he'd need help; my memories of Andy were of a quiet, independent boy who simply got on with things. \n\nI didn't think that he'd struggle in London. \n\nA brief squall of rain blew through, and umbrellas blossomed like multicoloured daffodils on the pavement outside. I saw one girl who'd not thought to bring one running for cover, already soaked. I shook my head in sympathy; she'd have a long afternoon in damp clothing to remind her next time. \n\nI slid off the barstool, smiled a thanks to the chef behind the counter, grabbed my handbag and brolly, and stepped back onto the street. \n\nMy lunchbreak was over, and I needed to get back to work.\n\n.:.\n\n\"So when last did you see him?\" Sophie sipped her prosecco, waiting.\n\n\"Years ago, Soph. I think was twelve? We went through to South Africa for a big family reunion that his family were hosting at their mansion.\"\n\n\"Is he hot?\" she asked, hopefully.\n\nI laughed. \"You tart. I have no idea. Haven't seen a photo of him recently. But there was potential, yes.\"\n\n\"Mm,\" she breathed. \"You'd better introduce me to him when he's here, Jo.\"\n\n\"Why, so you can give him a rousing welcome to London?\"\n\n\"Better me than some other slapper,\" Sophie grinned. \"Oh go on, Jo. If he's hot, I call dibs.\"\n\nI topped up my glass of bubbles from our bottle. \"Ok, if he's hot and available, he's yours.\"\n\n\"Yay,\" she mouthed. \"You're a great friend.\"\n\nThe pub was dark, and full of City boys and girls unwinding after the day. Soph and I were jammed into a corner, and I had the better view of the others. Tall, well-groomed boys in their blue wool suits and gaudy ties, girls in their dresses or business suits, everyone suffused with a giddiness that went beyond the typical mid-week post-work hump-day happiness. \n\n\"I thought you were seeing that boy off Tinder,\" I observed.\n\n\"Oh god, no,\" she shuddered, laughing. \"I met him once; all he wanted to do was talk about his watch and his shoe collection and the fact that he'd been in the same club as Rita Ora the week before. Total waste of my time. Wasn't even as cute as his photo made him out to be.\" She snorted, amused. \"Suppose I should give it another try. How about you, Jo? Seen anyone nice?\"\n\n\"Nah,\" I answered. \"We've got a really cute boy working at the office now, but he's seeing someone and anyway, office is off limits.\"\n\n\"The hell you say,\" Sophie smirked.\n\n\"That was once, and I've regretted it ever since,\" I laughed. \"It was a stupid idea.\"\n\n\"At least you got a decent shag out of it,\" she grinned. \"That's worth something.\"\n\n\"Not at the cost of my good name,\" I replied. \n\n\"Do you see him at all any more?\"\n\nI glanced away. \"No. It wouldn't be a good idea. He has a baby now. I don't want to be his bit on the side. He's too nice for that.\"\n\n\"Pity,\" she murmured. \"He really seemed to like you.\"\n\n\"Ditto,\" I sighed. \"But it was... complicated. Life's tough enough without drawing bad stuff to you, you know?\"\n\n\"Mhmm,\" Sophie agreed. \"So when does your cousin arrive?\"\n\n\"Thursday evening.\"\n\n\"You going to go meet him?\"\n\nI pursed my lips. \"Hadn't planned to. Heathrow is far.\"\n\n\"Poor lonely boy, arriving in a strange land, and his cousin is too lazy to come meet him,\" she teased.\n\n\"Shut up,\" I laughed. \n\n\"I'll come with you,\" she offered. \"Got nothing else on, and my liver could do with a break.\"\n\n\"Mm. Maybe. Ask me tomorrow.\"\n\nHer eyes glittered as she grinned and topped us both up again.\n\n.:.\n\nI staggered into the flat sometime after midnight, only just sober enough to kick off my heels and wash my face. My feet ached from the long walk from the station, and I cursed once again my inability to stay sober around Sophie.\n\nI drank a glass of water, and popped some aspirin against the headache I knew was coming. I picked up my coat and hung it over my desk chair, then leaned my forehead against my bedroom door and reached behind my back to unzip my dress, leaving it carelessly crumpled on the floor as I stepped free. I slumped down on my bed, and groaned as I massaged the undersides of my feet through my stockings.\n\n\"You should really stop wearing those shoes,\" I reminded myself. \"You always forget how much they hurt.\"\n\nI pulled off my stockings, letting them fall to the floor as I slumped over onto my bed, and stretched out to dig my phone out of my handbag. The message light flashed, and I fumbled, grumbling, at the interface as I tried to enter my unlock code. I didn't recognise the number, though I knew the country code was South African. \n\nIt was signed Andy, and I guessed that meant that it was from Andrew; I rolled onto my back as I tried to make out. It contained a flight number, a time, and some polite words to the effect that he was looking forward to seeing me again.\n\n- Righto. Will be there to meet and greet you. x Joanna. -\n\nI yawned, checked the time and made sure my alarms were set for the morning.\n\nThen I lay there feeling the room spinning slightly around me as the minutes flitted by. I thought vaguely about the long-ago holiday in Johannesburg; the hot African sun burning overhead, the food, the huge pool in my cousins' Liectenstein-sized garden, the massive Highveld thunderstorms that rolled through in the afternoon and dropped hailstones the size of golfballs. I'd spent most of three weeks there in a costume, and had formed a lifelong affection for the sun. \n\nI wondered what Andrew had turned out like. He'd been lean and quick even at the age of fourteen. He and I had been firm friends by the second day. But people could change a lot in fifteen years; I had. \n\nI shifted, slid out of my g-string and wriggled over onto my side to unclasp my bra. I brushed my underwear off the bed, briefly massaged the day's ache out of my breasts and shoulders and then pulled my duvet over myself. My head felt stuffy, and I wished fervently that it were a bank holiday. \n\nBut it wasn't, it was a normal Thursday, and I had a little over five hours before I needed to be up again, prim and proper and ready to deal with the lads at work, preferably without any visible signs of a hangover. The last thing I needed was the good natured teasing that would accompany my entrance if I looked like I'd had a big one. I loved my work, and the people I worked with, but some days I just needed a break.\n\nSleep eluded me. \n\nI flopped back onto my back, and stared at the faint lines on the ceiling above me, highlighted in the orange glow of the outside streetlight. A scooter buzzed past, followed by a group of men discussing the charms of a girl one of them had met. \n\nAlmost idly I rubbed my left breast, trailing a finger over my nipple as it grew erect from the touch. I considered... I wasn't really horny, but orgasms sometimes helped me when I couldn't sleep. After a moment's further thought I reached down, slipping my right hand over the sparse landing strip I'd shaven in a fit of whimsy and down to my lips, warm and soft to the touch. \n\nAs always, I shivered slightly at the first feel of my fingertip on my clit, and squeezed my hand between my thighs, savouring the moment.\n\nI gently squeezed my right nipple between my fingers. I trailed a nail down over the curve of my breast and along my ribcage. Then slowly, gently, I began to stroke myself - I loved the feel of my clit and lips, smooth and small and neat; I loved the sensation of them under my fingers, the delicious silkyness as my slit slowly grew wet and my lips slipped and parted under my fingertips. \n\nI loved the way my stomach spasmed the first time I penetrated myself, the way the desire ramped up in me so quickly.\n\nI gently teased my entrance with the tip of my middle finger, and ground slowly against my palm. My left hand joined my right, and I played with my clit as I toyed and penetrated myself with first one and then two fingers, crooking them over slightly within me, pressing against myself, closing my eyes and conjuring up the sensation of someone else pressed against me.\n\nI arched, moaning at the soft fantasies of hot guys; of being taken, licked and fucked, of the aching, glorious fullness of a proper cock in me. Of the sounds, the smells, the panting, the kissing, the moment when I could feel a man coming in me, the moment I knew I was going to come on him. \n\nGolden, sensual memories.\n\nI rolled onto my stomach, both hands still buried between my legs, and began humping down against myself with an increased tempo and greater force, gasping little breaths of air as I felt my body responding. My vagina spasmed on my fingers as I drove them in and out of me, and I moaned as I wormed them deeper into my aching body; contorting, grinding my clit against my hand and squeezing my eyes closed, wishing I had a penis in me, sunk to the balls in me, slick and hot and hard, filling me in that way that turned my legs to rubber and my belly to fire.\n\nI could feel my orgasm drawing closer, and I buried my face in my mattress as I writhed, fucking my fingers as if I were mounting a man and riding him through his own climax, filling me with his hot seed. I felt my muscles contracting, and then, drunk as I was, my fingers and the almost-real fantasy of penetration took me, pulled me with and flung me, crying out, over my climax off into a languid, cotton-wool satiation, leaving me panting as I slowly pulled my fingers out of me and rolled onto my side. \n\nI pulled my knees up to my chest and lay there curled up as my heartbeat slowly calmed. Then I stretched, yawned, rolled over once more, and within a few short breaths, slept.\n\n.:.\n\nMorning came far too soon, and I staggered,wooly-headed, through my abbreviated shower and lengthy commute. \n\nIt was a bitterly cold day, and I huddled into my coat and tried not to curse as the cold wind stung my legs through my stockings. The District Line was rammed, and I stood, crushed into a corner of the carriage as we crawled our slow way from Southfields through to Monument. \n\nSomeone had jumped under a train at Victoria, and the London transport network was reeling from the backlog. I wondered how many of my coworkers would just stay home today because of the chaos.\n\n\"Good ol Jo, always coming in,\" I muttered to myself during the walk to London Wall. \"Dependable, solid, reliable Jo. Never late, always working late, no life, not even a cat waiting for her at home...\"\n\nI laughed at myself, and looked upwards at the buildings of the City, towering high above us. I popped into the Euphorium Bakery for my morning latte, paid with last night's leftover change, and started to feel more human as I drank it during the last few hundred yards of my walk.\n\nI'd been right, half the office weren't in yet, and I got text after text from people saying they couldn't get to work. \n\nA text from Sophie arrived as well.\n\n- Hope you're not as ill as I am, lol. Woke up on our couch. -\n\nI snorted, laughing. Sophie had left with some boy, god only knew what time the slag had staggered in the front door, no doubt fucked in more ways than one.\n\n- Feeling really tender. Should have stayed in bed. Everyone's staying home today because the tube is bollocksed again - \n\nI replied, followed shortly with a \n\n- I'm never drinking with you again. -\n\n- That's what you said last time ;) xxx -\n\ncame her response, and I grinned to myself. Sophie was my dark twin, the person I could count on to get me out and into trouble. I loved her fiercely, and blessed the day she'd stumbled into my life.\n\nMy phone beeped again as I was fetching another coffee for myself. It was a simple \n\n- See you soon - Andrew -\n\nand I smiled. He seemed to have kept his politeness at least.\n\nThe day crawled by in a haze of specifications and design meetings; the developers could see I was feeling ill but were uncharacteristically gentle with me, I supposed they were saving it up for a really ribald bunch of teasing or pranking at some point in the future, but I blessed them for their kindness now. \n\nLunch was a Tesco curry and a latte that our twenty-three-year old Belarusian system administrator brought for me; the sweetheart always brought me and the other girls food if he could see we were too busy to go out ourselves. We repaid the attention by bringing him chocolates, cakes, and occasionally setting him up on dates with our male friends. \n\nWhat can I say, the City works based on favours.\n\n- Are you coming to Heathrow? -\n\nI texted Sophie in the late afternoon.\n\n- Can't. Meetings. :( -\n\ncame her response. I sighed. It was a long trip to the airport by public transport, and I felt a momentary flash of irritation. Then I found my Kindle in my handbag and my mood improved; at least I'd have something to do rather than watch my fellow commuters on the Piccadilly line.\n\n.:.\n\n- Where are you now? -\n\nI texted him.\n\n- Immigration. Several A380s landed at the same time. Border Guards are all pretty grumpy. -\n\nI snorted, and sipped my coffee. Couples and families gathered in the concourse in front of me, laughing, crying in some cases, hugging and welcoming one-another to England. Taxi drivers and tour group operators gathered their charges and whisked them off, while others like myself lurked and waited for those we were greeting. The Arrivals hall was always busy and happy, and I far preferred it to Departures. \n\nI glanced at my phone again, wondering how far Andrew was. I was curious to see what he'd become.\n\nIt had been years since I'd seen any of my southern cousins. Mum's first bout with cancer had cut deeply into our lives, and I'd been too broken after the second, fatal one to travel much. Dad had soldiered on as he always did, but once mum was gone he'd packed it in, bought the BMW motorbike he'd always dreamed about and ridden off into Europe. He phoned me once a week to let me know where he was, and sent me photos of the places he visited and people he met. He seemed at peace, and that made me miss him less. \n\nSo that left me by myself; I'd grown scar tissue over the hurt but it took Sophie and our rampages to really make me forget it. \n\nI wondered, idly, how long Andrew would stay in the UK - so many people from the Commonwealth came, stayed a year or two, and then returned from whence they'd come. \n\nI hoped he'd stay. Having a family member here, even if he were \n\njust a cousin, would help.\n\nA tall blond man walked through the gates, and stopped. He looked around, obviously unsure of where to go, and something in his profile clicked. I stood up and waved as I dialed him. He raised his phone to his ear, looking around.\n\n\"Joanna?\" Andrew's voice was lovely and mellow, and I felt a strange little zing in my chest.\n\n\"Andrew? You look lost.\" I laughed down the phone. \"Turn left about thirty degrees. I'm in the coffee shop, the girl in the blue dress who's waving like a madwoman at you.\"\n\nI saw him laugh as he hung up. He walked towards me, and I stepped around the table. He stood his suitcase off to one side, and held out his hand. His fingers were cool on mine, and his eyes twinkled as he grinned down at me. \"Hullo, Joanna. It's good to see you again.\"\n\n\"Likewise,\" I breathed, somewhat shy. Andrew was slim, tall and gorgeous, with a square chin and a lovely smile. \"It's been a while, hasn't it?\"\n\n\"Ja,\" he agreed. \"Too long. We miss you guys.\"\n\n\"I miss all of you too,\" I said. \"Would you like a coffee, or are you ready to go?\n\n\"I'm full of airline coffee,\" he muttered. \"Can't drink any more right now. I'm sure you've had a long day; I don't want to keep you out longer than necessary and really, you didn't have to come and meet me.\"\n\n\"I wanted to,\" I replied, lying through my teeth. \"Let's go, then.\"\n\n\"How is your dad?\" he asked, as we negotiated our way down to the Piccadilly Line platform. \n\nI sighed. \"Coping, I think. Being away from here helps him. Nothing to remind him of mum.\"\n\nHe looked gravely down at me. \"Cancer is a whore.\"\n\n\"That she is,\" I agreed. \"At least it was painless in the end.\"\n\nHe shook his head. \"I loved Aunt Ruth. She was always so funny when she phoned us on our birthdays. So English.\"\n\nI smiled. \"Yeah, she was. She was always laughing. She always dreamed of moving down to South Africa to retire, but life got in the way.\"\n\n\"It does that,\" he agreed. He reached out and squeezed my shoulder, and I gave him a small, grateful smile.\n\nI helped Andrew buy a ticket for the tube, and we clambered onto the next train, claiming seats near the door. \n\n\"Is this your first time in London?\" I asked.\n\n\"Came here on a school trip once,\" he replied, watching the other passengers as they climbed aboard. \"But that was about eight years ago and no doubt it's changed a lot.\"\n\n\"Where are you staying?\" I asked. \"Do you have a room booked somewhere, or have you found something to rent?\"\n\n\"My dad bought something here several years ago,\" he answered. \"He wanted a flat for when he travels here for business; he's always hated hotels. It's empty at the moment, so he said I should use it for now.\"\n\n\"Nice, that will make it easy for you,\" I observed. \"Where is it?\"\n\n\"Vauxhall,\" he answered. \"Some modern building I think. It's named Riverlight or something like that. \"\n\n\"I think I know the one you're talking about,\" I said. \"They're very nice.\"\n\n\"So long as I have a place to shower and sleep, I don't really mind. It was a long flight.\"\n\n\"Well, we'll be there in a little under an hour, if all goes well.\"\n\nHe smiled, and I felt butterflies again.\n\n.:.\n\n\"Wow,\" I breathed.\n\n\"I wasn't expecting this,\" he muttered. \"My dad goes overboard sometimes.\"\n\nChrome and glass and black stone surfaces glittered, and a huge balcony loomed outside the triple-glazed sliding door. I stood, hand pressed to the glass, breathless. The view was an uninterrupted arc from the southwest to the northeast, and I could see the Houses of Parliament and Westminster bridge laid out like a painting below us. Ferries and riverboats sped up and down the Thames, and beyond I could see the roofs of Whitehall.\n\nIn the distance lay the City and its skyscrapers, lit up like multicoloured magic lanterns.\n\n\"This view is to die for,\" I told him. \"Most Londoners can't afford a view like this.\"\n\n\"Now I feel even more embarrassed,\" he muttered. \"So much for experiencing London life.\"\n\n\"With a flat like this, you'll be the entertainment hub for all your friends and their friends,\" I replied.\n\n\"I'll have to make some friends here first, then.\"\n\n\"What am I, chopped meat?\" I laughed.\n\n\"You're family,\" he said, as he rummaged in one of the kitchen drawers. \"Ah, I thought so. Here,\" he said, turning to face me. He lobbed a set of keys to me, underhand. I snatched them out of the air, and stared at them, then up at him.",
        "\"You can't be serious.\"\n\n\"Keep them,\" he grinned. \"That way, if I get mugged I'll still be able to get in here.\"\n\nI snorted, amused. \"This is London, not Freetown.\"\n\nHe shook his head. \"I know, Joanna. My mum's just paranoid, so she made my dad make me promise that you'd have a spare set of keys to this place.\"\n\n\"Jo, Andrew.\"\n\n\"Sorry?\"\n\n\"My friends call me Jo.\"\n\n\"Mine call me Andy,\" he answered softly.\n\n\"Welcome to London, Andy,\" I murmured, smiling up at him.\n\n.:.\n\nI lay on my bed, staring at the ceiling and thinking of Andrew's flat and view. Never had I felt more keenly the difference between myself and someone else; Andy was down to earth and lovely, but money and style rolled off him like a perfume. His only nod to wealth was the Omega he wore, and even then it was a steel yachting chronometer, not a gaudy timepiece like so many London boys would wear. \n\nHe was hot. Not stupidly attractive, like a model, but... hot. He exuded confidence, and his easy nature in turn made me talk to hear him answer. And his smile. I caught myself grinning. His smile was something else; dimples and wrinkled eyes and when he turned it on me it was all I could do to not blush.\n\nI'd caught myself watching him far more than I should. He'd raided his dad's small wine bar to pour us both a glass of white, and had gone to change his shirt, leaving me to eye the view and daydream. I'd sat, swinging my heels to and fro on the barstool and sipping my wine, listening to him moving around the penthouse flat. Once he'd washed his face, we'd talked briefly, before I'd slid off the stool. \"School night,\" I'd murmured. \"Gotta go to work tomorrow.\"\n\n\"Dinner tomorrow night?\" he'd asked. \"To say thanks for coming to meet me.\" I'd agreed. He'd walked me down to the front door, and had got the concierge to call a cab for me. What a gentleman.\n\nI wished I could have stayed. My room felt small and cramped, and even though the logical part of me knew, knew that I was well off compared to many, I still felt the depression of knowing that I'd never, ever possess anything as beautiful as that penthouse flat, sixteen stories above the Thames.\n\nI rolled onto my side and pillowed my head on my arm. Orange street light leaked in around my blackout curtains, and I could hear drunken girls walking down the street outside. My small supper of cold leftovers lay heavy in my stomach, and I felt strangely lonely. I wondered what Sophie was doing. Then I wondered what Andy was doing.\n\nMy phone vibrated, and I reached out for it.\n\n- Did you make it home ok? -\n\nI smiled. Andy, checking up on me.\n\n- In bed, lights out - \n\nI replied.\n\n- This flat echoes. It's lonely. -\n\nI raised an eyebrow, and responded. \n\n- Enough space in that flat for an army. At least you have the room and the view. -\n\n- It's not mine, I'm just borrowing it. - \n\nI sighed. \n\n- Don't mind me, I'm just jealous. And also lonely. -\n\nMy phone rang.\n\n\"I was stupid,\" he said.\n\n\"How so?\" I murmured, softly.\n\n\"There's a spare bed. You could have stayed.\"\n\n\"I'd have had to leave early in the morning. I had no clothes to wear to work.\"\n\n\"True,\" he answered. \"I wouldn't want to damage your reputation after all.\"\n\nI laughed deep in my throat. \"I'm afraid my reputation is already ruined, but I appreciate the sentiment.\"\n\nI heard him snort, and we were both silent for a moment.\n\n\"I have no idea what I'm going to do tomorrow,\" he said. \"I only start work next week.\"\n\n\"You're at the footstep of British history. Walk from Westminster to St Pauls via Whitehall and Trafalgar square,\" I murmured. \"Bask in it. Enjoy it while you have the time to enjoy it. Find a pub near Tower bridge. It should be sunny.\"\n\n\"Where do you work, Jo?\"\n\n\"Why?\" I breathed.\n\n\"I could meet you for lunch somewhere. My treat.\"\n\n\"What about the supper your promised me?\" I teased.\n\n\"That's still on, unless you want a rain check. Now, where do you work?\"\n\nI took a slow breath.\n\n\"Bishopsgate.\" I said. \"I work in Bishopsgate. Meet me at the steel sculpture at the west entrance of Liverpool street station.\"\n\n\"What time?\"\n\n\"Any time between twelve and two.\"\n\n\"Ok. Its a date.\" He paused. \"I guess I should let you sleep.\"\n\n\"Yeah. Long day coming up. Friday always drags. Andy?\"\n\n\"Ja?\"\n\n\"I'm really glad you called. Sleep well.\"\n\n\"You too, Jo. See you tomorrow.\"\n\nHe hung up, and I lay there, strangely breathless in the darkness. His voice went straight down into me; into my stomach, and twisted it into knots. I was aroused, and I knew it was wrong, but I couldn't help the momentary fantasy of him.\n\nI rolled onto my side again and drew my knees up to my chest, holding myself against the sudden hot ache in my belly. I took a shuddering breath, and then another. If the signs were right, I was in big, big trouble.\n\n.:.\n\n\"And?\" Sophie was breathless. I held the phone clamped between shoulder and ear, and stirred my tea as I thought. I couldn't lie to her, not to Soph. \n\n\"He's gorgeous,\" I murmured. \"Not model gorgeous, debonaire gorgeous. Like he just stepped out of a Jane Austen novel. Totally not your type, but you'd still love him.\"\n\n\"Do I get to meet him?\" she squealed.\n\n\"I'll try to organise something for this weekend,\" I answered, sipping my chai. I stared out of the kitchen window at the pelting morning rain, and hoped like hell it would clear for lunch with him.\n\n\"Can't wait. Gotta go, Jo, boss is making eyes at me again.\"\n\n\"Take care. Love you,\" I smiled.\n\n\"Ditto. Mwa.\"\n\nIt had been another slow day at work, I'd finished up the specifications I was working on and had a day or so to catch up on admin and general bollocks before we kicked off our next sprint. \n\nMy boss was having a sickie; she'd checked in first thing in the morning, sounding pretty hungover, and I had gladly leapt at the opportunity for the day free from her. I'd let the rest of my team know I had a doctor's appointment, hinting that it involved my lady parts, and the men in the team had looked horrified and said nothing more about it.\n\nI watched the clock like a hawk, waiting. My phone buzzed, and I fumbled, almost dropping it\n\n- Half past work for you? -\n\n- Perfect. -\n\nI took a breath, and was about to set the phone down again when it buzzed again.\n\n- Come hungry, and see whether you can steal the afternoon off. -\n\nI pursed my lips, and glanced around the office. Groups were talking crap and drinking coffee, lurking in the various small boardrooms; it was a typical post-release Friday morning.\n\nI could take the afternoon off, and nobody would ever know. I dropped a quick email to my boss saying that I had to have some additional tests done at my doctor's appointment and didn't know how long it would take; her reply was a simple \"Take the afternoon and work it in next week if you can.\"\n\nI wouldn't look that gift horse in the mouth; I grinned in glee. Friday afternoon off, a free lunch, and the awesome company of my cousin. As far as I was concerned I'd won the lottery.\n\nAt midday I locked my Mac, pulled on my coat, and scooted out of the door. The street was busy, and I dodged newspapermen, mothers with prams, and suited boys on their early lunch breaks as I made my way down and through Liverpool Street station. I emerged from the west entrance, and took up a seat on the side of the small amphitheatre that surrounded the massive rusted steel slabs of the installation there. I watched the people as they scurried past me, waiting breathlessly for Andrew to arrive. \n\nI felt a strange nervous tension in my tummy, and I knew I had a serious crush. But I felt stupid, silly, sixteen again, and I didn't care. I'd never do anything or act on it, but this feeling of butterflies came so seldom to me that I decided I deserved it. I knew it would pass eventually, but while it lasted I wanted to fully enjoy it.\n\nAnd then I saw him, and if I'd felt breathless before it was nothing to how weak I felt now. Andy wore a navy blazer over a white collared shirt and tan trousers; he had a crimson and white scarf wrapped loosely around his neck, and as the sun broke out through the clouds his hair flamed to gold.\n\nI watched other women turn and stare, and I felt the glares as I stood and walked to him. He took my hand, and kissed my cheeks. \n\n\"Hello,\" I squeaked, giddy.\n\n\"Hello, Jo,\" he grinned. \"I like London.\"\n\n\"London likes you,\" I murmured, and he laughed as he took my arm. \n\n\"Come,\" he said. \"There's a small Italian place just around the corner, I've booked us a table.\"\n\n\"I got the afternoon off like you suggested,\" I managed.\n\n\"Excellent. That means I've got a partner in crime.\"\n\nI walked beside him, stupidly happy and tongue-tied, living in the moment.\n\n.:.\n\n\"I like sneaking off like this,\" I confessed to him over our wine. \"It makes me feel like a woman of leisure.\"\n\nAndy laughed into his wine. \"You're far too interesting to be a lady of leisure, Jo. You're a working girl, and you should be proud of yourself and your career. You're a BA. That's a short step from management, and that's not a bad thing to be at twenty-six.\n\n\"Twenty-seven,\" I corrected him.\n\n\"Since when?\" he laughed.\n\n\"December thirteenth.\"\n\n\"Nonsense. You look far too young to be twenty-seven,\" he scoffed. \"I refuse to believe it.\"\n\nI laughed at his teasing, and he smiled back at me. \"Flattery will avail you nothing,\" I murmured, waving my wineglass at him. \"This wine, however, might. It is delicious.\"\n\n\"Tuscany,\" he observed. \"Second best red wine region in the world, after the Western Cape.\"\n\n\"Now you're just showing your bias,\" I protested. \"Lots of good French wine. I should know, I drank most of it.\"\n\nHe snorted, and eyed the menu once more. \"I can't decide,\" he complained. \"I always have this problem in restaurants; I want to try everything on the menu.\"\n\n\"How about you let me order for you?\" \n\nHe glanced up at me, then slid the menu away. \"Done. I get to order dessert.\"\n\n\"Done,\" I echoed him. \n\nI ordered a mushroom ravioli for myself, and a creamy pancetta and mushroom tagliatelle for him, and grinned to myself at the expression of delight on his face when he smelled and tasted it. My own ravioli was delicious; a cut above what I'd usually get at my normal haunts, and I enjoyed every bite of it. Andy offered me a taste of his, and I nodded to myself; it had been a good choice for him.\n\n\"Did I win?\" I asked as he set down his fork.\n\n\"Not yet,\" he grinned. \"I get my move first. But your opening gambit was epic. That pasta was easily the best I've eaten in the last year.\"\n\n\"High praise for the chef,\" I murmured. \n\n\"If I could cook like that I'd be happy,\" he replied.\n\n\"You cook?\"\n\n\"I dabble.\"\n\n\"Please will you cook for us tonight?\" I begged him. \"It has been so long since I had a home-cooked meal. Please?\"\n\nHe glanced at me, and seemed to consider. \"Done and done. Plus, it means I can raid my dad's wines with a clear conscience.\"\n\n\"Win,\" I mouthed, and he laughed.\n\n\"So what brought you over here?\" I asked as the waitress cleared our plates.\n\n\"Boredom,\" he replied, candidly. \"Johannesburg is limited. I wanted more exposure to the international markets, plus it's so much easier to travel from here.\"\n\n\"What, precisely, do you do?\" I leaned forward, curious.\n\n\"Programming,\" he answered. \n\n\"You are so not the typical programmer.\"\n\nHe shrugged, amused. \"How so?\"\n\n\"You are far too well-dressed for starters. You look like a trader or a lawyer.\"\n\nHe stretched backwards into the booth. \"Maybe I should have gone with the white shirt and blue jeans.\"\n\n\"No,\" I murmured. \"You look perfect the way you are.\"\n\n\"Thanks,\" he grinned, and I blushed, flustered. \n\n\"Sorry, my mouth works on autopilot sometimes.\"\n\nHe waved away my apologies and leaned forward. \"So... dessert,\" he mused. \"What's your poison?\"\n\n\"I'm a cheap date. Ice cream, chocolate or anything of the sort.\"\n\n\"Passion-fruit panna cotta?\"\n\n\"Mm,\" I considered. \"That does sound nice.\"\n\n\"Sold,\" he replied. \"And unless I miss my guess, an espresso as well.\"\n\n\"How'd you know?\" \n\n\"You mentioned coffee the other night, and you clearly like Italian food. So I guessed you liked coffee too.\"\n\n\"No, I don't like coffee.\" I smiled, innocent and wide-eyed. \"Coffee is the way, the truth, the light. I cannot function without it.\"\n\n\"I'll make sure I get something nice for tonight, then.\"\n\n.:.\n\nAndy refused to let me even see the bill, ignored my pouting and protesting, and I suspected that he'd left a hefty tip judging by the smiles of the staff and the solicitous manner in which they ushered us back out onto the street. He then went on to make me blush by wrapping his scarf around my neck, and I felt strangely unsure of myself.\n\n\"Where to now?\" I asked, fingering the wool, enjoying the way the scent of his aftershave set my nerves jangling.\n\nAndy looked around. \"I have no idea. What do you recommend?\"\n\n\"Well,\" I hazarded, \"we could catch a bus down to Waterloo and walk back to your place from there?\"\n\n\"Sounds good,\" he answered. He glanced down. \"You ok walking in those shoes?\"\n\n\"I'll be ok,\" I grinned up at him. \"They're fine so long as I don't walk too fast or stand for too long.\"\n\n\"Then let's not do that.\" Andy turned and hailed an approaching black cab.\n\n\"Andy!\" I protested as the cab drew up alongside us. \"That's going to set you back fifteen quid at least! I can walk!\"\n\n\"Come on,\" he said as he held the door open for me. \"My treat.\"\n\nI gave in and clambered into the cab. \"Waterloo station, please,\" Andy told the cabby as he followed me. We sat back, and I shook my head at him. \"That's a week's lunches,\" I murmured.\n\n\"Your feet are worth it,\" he retorted, and we laughed quietly. \"Plus, Riverlight is a bit of a walk from Waterloo, and those shoes, while pretty, are likely instruments of torture. You're hardly going to enjoy the evening if your feet are in agony.\"\n\n\"You're spoiling me,\" I protested.\n\n\"Nonsense,\" he replied. \"You're my cousin, and I decree that you shall travel in comfort.\"\n\nI snuggled back into the faux leather seat, and watched London ghost past at a brisk walking pace. Friday afternoon traffic had started, and the cabbie took some wiley shortcuts and executed some white-knuckle passing moves as he snaked his way through Cheapside, Ludgate and finally south over Blackfriars bridge. \n\nAndy watched the commuters, and I tried not to watch him.\n\n.:.\n\nAndy leaned on the railing and stared across the Thames at the Houses of Parliament. \"It feels surreal to be here,\" he murmured.\n\n\"How so?\"\n\n\"You grow up seeing Big Ben and Westminster everywhere. Any time the media reports on the UK they use this scene as the filler. It becomes part of your identity in a way. And then you come here, and see this...\"\n\nBig Ben chimed out the quarter hour, and Andy paused, eyes closed.\n\n\"And hear that,\" he continued, softer, \"and it feels... weird. I can't describe it. In some strange way it feels like coming home.\"\n\nI smiled up at him. \"You're not the first person I've heard who's said that. Lots of Aussies and Kiwis say the same thing.\"\n\nHe shrugged. \"Common upbringing or something, I don't know.\"\n\nI sipped my latte, and watched two seagulls floating eastwards on the ebb. \"This is, I guess, the centre of Britishness. Makes sense that Anglophiles would feel affected.\"\n\nHe stood up straight and took a breath. \"Maybe. Anyway. It's pretty enough. It will do for now,\" he added with a wry smile.\n\n\"You should see it in summer, at sunrise or sunset,\" I replied. \"The Thames has this special kind of light. It's really beautiful.\"\n\n\"Many things here are,\" he murmured. \n\nWe strolled on down the Albert embankment, dodging joggers and cyclists and yummy mummies with their prams. We passed Lambeth palace and walked on slowly past MI6 and the huge modern flats at Nine Elms. And all the while we talked of nothings; commenting on the architecture, the waves on the river, the idiocy of one or two drivers and the shrinking distance of the sun above the horizon. \n\nAnd all the while I was conscious of him; of the reassuring pressure of his arm on mine, of the firmness of his hip when we occasionally bumped against each other. Of his slim waist and powerful shoulders. Of the way the light made his blue eyes sparkle. Of his soft, easy laugh, and the way it warmed me through and through.\n\nAndy stood maybe half a foot taller than I, but our gaits matched, and walking beside him seemed to be the most natural thing in the world. \n\nI wished it would never end.\n\n.:.\n\nAndy took my coat for me and hung it on the rail behind the door, then followed me through to the reception room. \"Wine?\" he asked, as he set the groceries down on the counter.\n\n\"Why not,\" I agreed. \"It is after five in Paris, and it's Friday.\"\n\n\"White or red?\"\n\n\"Red, please.\" I stood at the window, gazing out over the city. My phone buzzed, and I glanced at it. Sophie, asking if I wanted to meet for drinks. \n\n- Can't tonight, see you tomorrow? -\n\n- :( playing with your new friend? I'm sulking. -\n\nI laughed. \n\n- Will try to set something up for tomorrow so I can introduce you. He is cooking to thank me for meeting him. -\n\nI glanced up, and smiled apologetically at Andy's raised eyebrow. \"Sorry, Andy, it's my best friend. We usually go out for drinks after work so I'm just letting her know I'm spoken for tonight.\"\n\n- Slag. I'm jealous. Have fun! :) - \n\nSophie responded. I smiled, and put my phone down.\n\n\"Friends are important,\" Andy observed quietly. \"I feel a bit guilty for interrupting your plans.\"\n\n\"No firm plans,\" I disagreed. \"It's just a custom, nothing else. You can make it up to her by coming out with us tomorrow night.\"\n\nHe grinned. \"With an offer like that, how could I refuse.\" He selected a bottle of red from the wine rack, and poured us both a glass. \"Here, Jo. Happy Friday.\"\n\n\"Cheers, Andy. Thanks for having me over tonight. It makes a welcome change for me.\"\n\n\"It's my pleasure. Now, let me get started on my masterpiece.\"\n\nAndy rummaged around in the drawers. \"My dad loves buying kitchen stuff,\" he explained. \"He always said he'd have been a chef if he hadn't wound up in Finance. So I learned to cook from him. He made sure this place was properly kitted out. Which makes my job a lot easier.\"\n\n\"Do you need a hand?\" I asked, as I took up station on a bar stool.\n\n\"Nah,\" he smiled. \"I need you to sit there, drink your wine and keep me company.\"\n\n\"There is nothing I'd like better.\"\n\nAndy went to work dicing some shallots. \"So tell me about you, Jo.\"\n\n\"What do you want to know?\"\n\n\"Who you are.\" \n\nI stared at my wine. \"That's a hard question to answer.\" I sighed. \"Sometimes I feel like there's not much to tell. I'm a London working girl, poured straight from the mould. I go to work, I go out drinking, I go home to my small room in my small shared house and try not to think too much about the future, because it's bleak and it depresses me. Same old, same old.\"\n\n\"Nonsense,\" he said, softly. \"You're not some shallow painted doll, Joanna. I know those when I see them. You're a strong, confident woman. Anyone can see that.\"\n\nI made a face, and sipped my wine. \"I feel like a marionette. Like I'm in the same tired puppet show, a rat in a cage, day after day, and all that brings me interest is getting drunk with Sophie.\"\n\nAndy glanced up, then turned to clean carrots and parsnips. \"So from the gist of this I take it you're not seeing anyone.\"\n\nI laughed bitterly. \"No. I've had bad luck with boys, so these days I fly solo. That way I don't inflict myself on anyone else.\"\n\n\"That's a shame,\" he observed. \n\nI watched him a moment. \"Why?\" I asked.\n\n\"You're honest. You give. You laugh.\" he said, glancing up again. \"You're lovely. I think you're being unfair to yourself.\"\n\n\"Mm. Perhaps. Or perhaps you just don't know me well enough to know who I am.\" I glanced away, embarrassed.",
        "\"You're the grown-up version of the friend I made all those years ago. You've grown up, but you haven't changed much.\"\n\nI snorted. \"Yes I have.\"\n\n\"Not in the ways that matter,\" he quietly disagreed.\n\n\"So what about you?\" I asked, sipping my wine. \"Who are you? Why are you here?\"\n\n\"Pretty much as you see me,\" he answered.\n\n\"No no, you don't get off that easily,\" I protested.\n\nHe chopped a carrot, then set down the knife. \"I started getting wanderlust when I was twenty five. Nothing in my life was interesting. The friends I had were mostly incidental. The girls I dated were more interested in my family's wealth than in me as a person. I got tired, Jo. I decided I had to find somewhere new. London's a staging point for that; I don't know where I might end up, but I'm here for the foreseeable future, and right now I'm just a twenty-eight-year old guy who's cooking dinner for his cousin.\"\n\n\"On that note, what are you making?\" I asked, trying to lighten the mood a little.\n\n\"Venison with a red wine jus,\" he answered. He sipped his wine, then set the glass aside. \"Amongst other things.\"\n\n\"Can I hire you?\"\n\nHe laughed. \"Why?\"\n\n\"Supper for me is almost always something like pasta with a sauce out of a can. I only ever eat fancy food on the odd occasions I can stretch my budget to go out. My kitchen is tiny, and to be honest I've never been much of a cook.\"\n\n\"Food is the spice of life,\" Andy observed. \"I love cooking, and I'm happy to play chef for you whenever you want the company.\"\n\n\"Don't make promises you can't keep,\" I warned him. \"I'll be here every night.\"\n\n\"As I said, Jo, there's a spare room.\" \n\nI toyed with my wine glass and watched him as he cubed vegetables. \n\n\"You really are spoiling me,\" I murmured.\n\n\"You look like you could use a bit of honest spoiling,\" he quietly replied. Then he looked up. \"Sorry, that was rude.\"\n\n\"No, it was true,\" I sighed. \"Life in London can be grim, Andy.\"\n\n\"Then it's your job to take advantage of any unexpected happiness that comes your way. So take my offer.\"\n\nI met his gaze, then looked aside, flushing.\n\n.:.\n\nI sat on the soft leather couch, feet tucked under me, and watched as Andy cleaned up. He moved with a light-footed grace, and through the gentle haze of wine I daydreamed about him. I felt warm, and safe, and strangely content. The flat was light and airy, and the gentle domestic noise of Andy's movements lulled me.\n\n\"Sorry?\" I murmured, as I realised he'd said something.\n\n\"I said, would you like some dessert or coffee?\"\n\n\"Not right now, Andy, thanks. I'm really happy right where I am.\"\n\n\"You looked like you were almost ready to nod off,\" he observed, amused.\n\n\"I was,\" I confessed. \"This flat is lovely. It's so nice and quiet. And it's so nice to feel well-fed, and ever so slightly sozzled on good wine.\"\n\nAndy packed away the last plate and closed the dishwasher. He grabbed his wineglass and the wine bottle, and came to sit down next to me. \"Cheers,\" he murmured.\n\n\"Thank you for this,\" I said, softly.\n\n\"You're welcome, Jo. I wasn't joking earlier when I said you looked like you needed it.\"\n\n\"You weren't wrong, either,\" I murmured. \"It's been a long time since someone... no, that's not fair, Sophie does, but you know what I mean when I say it's different, right?\"\n\n\"It's different,\" he agreed.\n\nI nodded. \"It's been so long since I had anyone around me, Andy. So long... I'd forgotten what it felt like.\"\n\n\"It must be hard here, on your own.\"\n\n\"It can be.\" I stared at the reflection of the lights in my wine. \"London is... London is isolating for me. Some people love it here, they have the nature that takes them outside and out into new social groups. I don't. Sophie's my only real friend here.\" \n\n\"Up till now,\" he smiled. \n\n\"Yeah. Up till now.\"\n\n\"Do you want to have a look at the view?\" he asked.\n\n\"From the balcony?\"\n\n\"Might as well. It's a calm night.\"\n\nI pondered. \"Yeah, why not. Might as well enjoy it while we can.\"\n\n.:.\n\nWe leaned on the railing, staring down at the city lights. I huddled into my coat, and Andy had once more wrapped his scarf around me before he'd donned a jacket of his own. \n\n\"It's a beautiful city by night,\" I murmured. \"Paris has more charm, and the Eiffel tower of course, but London is still beautiful.\"\n\n\"I suspect it depends on the mood of the observer,\" he replied. \"I found Paris dull. But I was there alone.\"\n\n\"I loved Paris. The Louvre, Notre Dame, the Seine. But I think I spend so much time in my own head that it was natural for me.\"\n\n\"I can't believe you're single,\" he observed after a moment.\n\nI laughed, surprised. \"That came out of nowhere.\"\n\n\"No, I'm serious. You're this amazingly complex, fun woman. I struggle to understand why you're so intent on remaining alone.\"\n\n\"I'm not a party girl, unless evil Sophie is in attendance. I love my books, and my me time... and somehow between that and work I just don't seem to have time or energy to go out and try to meet someone who's not just interested in something cheap and messy.\"\n\n\"You've made a lot of time today,\" he said, glancing at me.\n\n\"It's different. You're... different. You're easy. I don't struggle to understand you. I feel like I... know you.\"\n\n\"You do,\" he said, turning to face me. \"I don't feel like I've changed much from the boy I was.\"\n\n\"You're hotter,\" I murmured, unthinkingly. Then I blushed as he laughed. \n\n\"Beauty is in the eye of the beholder,\" he grinned, sipping his wine. \"But thanks for the compliment.\"\n\n\"It was an honest one,\" I protested. \"My big mouth, but it's true. You're really good looking; Sophie's going to eat you up. So are the rest of the London girls.\"\n\n\"I'm not sure I want to be the main course,\" he said, amused.\n\n\"Dessert, then?\" I smirked.\n\n\"So long as it's not an appetiser,\" he retorted. \n\nWe stood in silence for a moment, and then he turned again, and put his arm around me. I shivered. He felt so real, so solid next to me, and I felt an ache deep in me.\n\n\"You ok?\" he asked, quietly.\n\n\"Tired,\" I bluffed. \"It's been a long year, Andy.\" I leaned into him, letting my head rest against his shoulder and taking comfort in the feel of him, teasing myself with my foolish desire.\n\n\"Tell me about it,\" he muttered.\n\nWe watched a passenger jet as it banked above us onto its approach to Heathrow. Then I looked up at him. \"Thank you for tonight,\" I said. \"You've really made it a good day for me. But I need to be getting home.\"\n\nHe glanced down at me. \"Nonsense, Jo. The spare room is yours.\"\n\n\"I have no clothes,\" I protested.\n\n\"I'll lend you a tee shirt and some tracksuit pants.\" Andy turned to face me. \"I'd appreciate the company, you know.\"\n\nI looked up at him. \"Well, ok,\" I murmured, \"but I hope you have supplies for breakfast.\"\n\nHe smiled. \"There's a Waitrose just across the road. I'm sure I can find something there that you'll approve of.\"\n\nWe turned and walked back into the flat, and once more I took up station next to him, my legs tucked under me. He topped up my wine, then leaned back against the couch's backrest. \"So...\" he started.\n\n\"So,\" I agreed, grinning. \"Now you're in a pickle. You've run out of topics, and you're stuck with me for the evening.\"\n\n\"I'd hardly call it stuck,\" he smiled. \"I enjoy your company, even when we're just being quiet.\"\n\n\"Ditto,\" I murmured. \"Don't you think it's strange that we've picked it up so quickly, with no awkwardness?\"\n\n\"Perhaps... but birds of a feather, after all.\"\n\n\"True.\" I sipped my wine. \"I find it really strange that there was never a girl who was with you just because it was you.\"\n\nHe sighed. \"I think I was just unlucky, but whenever they found out about my family, it became this huge thing. I was always the one who paid, the one who funded. I wouldn't object... except that it became expected. And that irritated me.\"\n\n\"You might have the same problem here,\" I murmured. \"London is mercenary in that regard. People can smell money here, and there's a particular class of woman who just wants to get her claws into someone wealthy and never have to work again.\"\n\n\"And you?\"\n\nI shook my head. \"I pay my way. I hate freeloaders. People need to take responsibility for themselves, if they can.\"\n\n\"Mm,\" he agreed. \"Well, I hope I didn't offend you earlier today.\"\n\nI smiled. \"Never. You were being gallant, looking after your poor, starving cousin.\"\n\n\"In my defence, you seemed to enjoy it. I don't recall much in the way of protest.\"\n\n\"I couldn't resist your charm.\"\n\nAndy laughed, and I grinned at him. Then, feeling strangely daring, I slipped my legs out from under me and leaned back next to him, shifting closer and turning slightly so I could watch him while resting my head on the backrest of the couch. \n\n\"Those women were stupid,\" I murmured after a while. \n\n\"That's an understatement,\" he snorted.\n\n\"No... I mean... you're kind, and gentle, and gentlemanly.\" I glanced down, away, shy. \"It's rare to meet someone as nice as you are.\"\n\n\"I just try to be decent.\"\n\n\"Many men don't. Especially the city crowd. Oh, they're nice enough, and charming... but it's all about getting you into bed, chalking up a notch, and moving on.\"\n\n\"And that's not what you want?\"\n\n\"Would you?\"\n\nHe shook his head. \"No. I want intimacy. Someone I can trust. Someone who will be there no matter what.\"\n\n\"See? Sometimes it feels like it's too much to ask for.\"\n\n\"No, it's not,\" he said, turning to face me. \"But finding the person is hard. I think many people end up settling for something... lesser.\"\n\n\"I don't want to settle,\" I murmured. \"I want my knight in shining armour.\"\n\n\"Is that your fantasy?\" he grinned. \"To be swept off your feet and carried off into the sunset?\"\n\n\"Maybe not into the sunset,\" I sighed. \"But a little bit of romance wouldn't hurt.\"\n\n\"And your idea of romance is...\"\n\nI looked down at my lap. \"This is. What you've been doing to me today is what I want.\"\n\n\"All I've been doing is looking after you, Jo.\"\n\n\"You really have no idea how special a man you are, Andy,\" I murmured. \"Gentleness. Consideration. Kindness. They run through you like gold thread. You make no demands, you just give and give and give. No wonder you got tired of being taken advantage of.\" \n\n\"You have a very rose-tinted view of me.\"\n\n\"No,\" I disagreed, as I touched his hand. \"I'm maybe a little biassed because you're my cousin and you've been so good to me. But I can see it's not a facade. I can see you, Andy. And you're a good man.\"\n\nHe took a quiet sip of wine, and stared at his glass.\n\n\"I wish there were more men like you,\" I sighed.\n\nAndy smiled and nodded. \"I wish there more women like you.\"\n\n\"Quiet, stay-at-home wallflowers with no future?\"\n\n\"Warm, kind, passionate, and beautiful both outside and within.\"\n\n\"Now who's got the rose-tinted glasses,\" I murmured, flushing.\n\n\"Or maybe I'm just able to see more clearly.\" He paused. \"Hey,\" he said, quietly. I felt him brush my fringe from my eyes, and I took a shuddering breath as I tried to meet his gaze.\n\n\"Stop selling yourself short, Joanna. You're special. Believe it.\"\n\nI smiled bitterly. \"Easy to say, hard to do.\"\n\n\"Would you like some coffee?\" he asked, after we'd spent some time with our thoughts.\n\n\"I need to shower. It's been a long day.\"\n\n\"There's a bath,\" he offered. \"A big one. And endless supplies of hot water.\"\n\n\"Where? I only saw a shower in the bathroom?\"\n\n\"Come,\" he said. He stood, and offered me his hand. \"I'll show you.\"\n\nAndy led me through the flat to the master bedroom. He opened a door, and stepped aside. \"Voila,\" he murmured.\n\n\"Holy shit. That's not a bath, that's a swimming pool.\"\n\n\"It's all yours. I'll get you some towels.\"\n\n.:.\n\n\"No peeking,\" I told him jokingly as I closed the door.\n\n\"I'll leave your pajamas on the bed,\" he smiled in answer.\n\nI listened to his footsteps as he walked down the hall. Then I stretched the kinks out of my back and tested the water. I unbuttoned my blouse and my skirt, hanging both over a towel rail so that I could wear them in the morning. I slipped off my panties and unclipped my bra, dropping them to one side. \n\nI stepped into the bathtub, slipped into the water and lay back against the backrest with a sigh. Baths were a rare luxury, and this one was amazing. I slid further down, letting the hot water rise up my ribcage and over my breasts; tender after the long day. \n\nMusic came faintly from the entertainment room; Andrew had turned on the sound system and was listening to classical pieces. I recognised Holst and smiled to myself; my musical knowledge was limited but I loved to listen to it to wind down, and it seemed Andy was the same.\n\nI rubbed my arms and massaged my breasts and shoulders gently, sighing as I felt some of the tension of the day draining. Outside, Holst became something Baroque, and I slowly soaped myself up, amused at the way goosebumps crawled down my arms as I spread the lather over myself. I reached down, intending only to clean myself, but somehow the haze of wine twisted my action and almost before I knew it I was languidly touching myself. \n\nAnd as I did, I realised just how horny I was.\n\nI breathed out slowly; arching back against the porcelain, sliding down further under the surface. I spread my legs slightly, pressing off the end of the bath as I teased a finger of my right hand into me. I slowly started to slip it in and out of my pussy, breathing deeper, groaning softly in my throat as I felt the texture of my fingertip against my silky inner lips and against the tight muscles of my entrance. I started to gently stroke the index finger of my left hand, slowly, back and forth around the base of my clit as I teased my middle finger in and out, wishing it were a hard penis, wishing there was a muscular guy in me, crushing me under his weight and taking me. \n\nIt had been so long, so long I'd almost forgotten what a cock felt like in me, and I craved it; I craved everything that came with sex and the intimacy it entailed. Touch. A man's lips on my breasts, his tongue on my lips, his cock thrusting into me.\n\nI shuddered; head backwards against the rim of the bath, uncaring now of the strands of my hair trailing in the water, desiring only the sweet release of an orgasm. I could feel myself building, closer and closer, plateauing... aching, gasping small breaths of air as I drove my hand into myself, feeling the joints of the second finger I added to myself spreading me as they slipped in and out of my aching vagina.\n\nI convulsed as it took me, mouth agape, trying not to cry out or give myself away. I squeezed my eyes shut as I tortured myself through the quick, intense spasms in my belly and pussy before I slowly, cautiously relaxed back against the porcelain; my body warm, lethargic - sated for the moment.\n\nI wished it had been him.\n\n.:.\n\nAndy had left me a dark cotton top and some tracksuit pants, and I discarded my towel and pulled them on. I carried my clothes through to the spare room and left them on the bed. Then I dug a hair-band out of my handbag and tied my damp hair into a straggly ponytail, pulling the door closed behind me. \n\nHe was sitting quietly on the massive leather couch, and he smiled as I reappeared.\n\n\"Good bath?\"\n\n\"Exactly what I needed. Absolutely perfect,\" I murmured. \"What have you been up to?\"\n\n\"Listening to music, chilling, drinking,\" he said. \"This couch is a good place for reflection.\"\n\n\"Mm,\" I agreed, as I sat down next to him once more. \"Thank you for the sleepwear.\"\n\n\"I hope it fits well enough.\"\n\n\"It will do,\" I shrugged. \"It's clean and comfortable and that forgives many ills.\" I picked up my wineglass, and Andy leaned forward to reach for the bottle. \"No,\" I murmured, \"this is enough for now. I don't want to get silly.\"\n\nI took a sip of wine, then set my glass down so I could stretch and then briefly rubbed my neck and shoulders. \"God, I'm glad this week is over.\"\n\n\"You look like you need a holiday.\"\n\n\"I need a new life of idle luxury. Preferably involving that bath tub of yours.\"\n\n\"You need that like you need a hole in the head. Idleness would ruin you.\"\n\n\"I wouldn't mind the opportunity to prove that it wouldn't,\" I murmured. \n\nAndy snorted. I twisted my head to one side and then the other, trying to stretch the last of the tension out of my muscles.\n\n\"Sore?\" he asked, softly.\n\n\"Tense. As I said, long week.\"\n\n\"Want me to see if I can do anything about it?\"\n\n\"What?\" I glanced at him.\n\n\"I can give you shoulder massage... if you'd like? How does that sound?\"\n\n\"You give massages. Of course you give massages. I should have expected it. You're just getting worse and worse, you know. Bloody white knight.\"\n\nHe laughed. \"So you don't want one?\"\n\n\"I didn't say that. Where do you need me?\"\n\n\"What's best for you?\" he asked.\n\n\"I will contort myself into any position you require... but I warn you, if it's not good I'll be sad.\" I pulled a cushion free of the sofa, and slid it onto the floor. \"Here. I'll sit here. Does that work?\"\n\n\"If it works for you, it works for me.\" \n\nI slipped off the couch, and sat on the cushion, leaning back against the sofa seat. Andrew set his wine aside, and kicked off his sneakers. He pulled his legs up onto the couch and slid over behind me. I took a nervous breath, and then twitched like a dumb sixteen year old as I felt his long, cool fingers on my neck.\n\n\"Sorry,\" he murmured.\n\n\"No, don't apologise,\" I breathed. \"Just took me a little by surprise.\"\n\nHe slowly drew his fingers down along my neck and to my shoulders, and I felt goosebumps crawl after them. I let my head flop forward, sighing as he started to gently rub my shoulders. I tried to sit up straighter, but he pulled me back against the sofa.  \n\n\"Relax,\" he murmured. \"Tense up and you'll bruise. Just relax.\"\n\n\"Easy for you to say,\" I whimpered. \"Been years since I had a shoulder rub. Anticipation is killing me.\"\n\nI heard his soft laughter, and then he started to work on the area around my collarbones; kneading, digging at the knots in my muscles, trying to get them to release. \n\nI moaned. \n\n\"God, Andrew. God, that's nice.\"\n\n\"Good.\" I heard him take a breath, and then felt his legs on either side of me as he shifted so that he could apply more pressure with his palms. He worked his hands slowly inwards along my shoulders, alternating pressure and release, encouraging my muscles to unwind. \n\nAt some point I think I started drooling, and I let my head flop over to lean against his warm, firm thigh.\n\n\"How's it going?\" he asked, leaning hard on me, digging in.\n\n\"Wonderful. Your hands are wonderful.\" I managed. \"Please don't stop.\"\n\n\"Mm, they're cramping slightly. I'll need a break in a bit.\"\n\n\"Damnit,\" I murmured. \"Best shoulder massage ever and he needs a break.\"\n\n\"You're pretty tense,\" he retorted. \"Takes a lot of energy.\"\n\n\"Life with no man makes me tense. No outlet.\"\n\n\"Uh huh. How so?\"\n\nI rolled my head back to look up at him. \"I'm sure a bright boy like you can imagine why a girl needs a guy.\"\n\n\"Oh? Oh.\" \n\nI laughed at the shamefaced way he shook his head. \n\n\"Sorry Jo, not always the quickest on uptake.\"\n\n\"I forgive you,\" I grinned, \"so long as you give me another shoulder rub, sometime, maybe.\"\n\n\"Any time,\" he breathed, as he released me. I let out a deep, shuddering sigh and sat up straighter, stretching my arms up above me. Then, hesitantly, I leaned back against him again, shivering as he reached out to gently rest his right hand on my shoulder.\n\n\"Cooks great, backrubs great, smiles great... is there anything you can't do?\"\n\n\"I'm really bad at strip-poker, and I'm a terrible dancer.\"\n\n\"Join the club,\" I snorted. \"I dance like I'm on drugs. Bad ones.\"\n\nAndy gently rubbed my shoulder, and I squeezed my legs together against the building ache. \n\n\"What're you thinking?\"\n\nI sighed. \"Secret thoughts.\"",
        "\"What kind of secret thoughts?\" he asked, as he began massaging my neck again. \n\nI whimpered. \"The kind that are really embarrassing when they come out,\" I managed. \"Oh, god, yeah,\" I continued, as he put pressure on the nape of my neck. \"That's the spot. Right there. That's where it hurts.\"\n\n\"You're a bundle of knots,\" he muttered. \"Unbelievable. Do you never go see a masseur or acupuncturist?\"\n\n\"With what free time, Andy? Work takes up my day. Most places close before I can get to them. And I can't afford random spa treatments.\"\n\n\"Take a leave day, girl,\" he muttered. \"Your body will thank you for it.\"\n\n\"My body is going to thank you for what you're doing to me,\" I whimpered. \"God, your hands are nice on me.\"\n\nAndy laughed, and after a puzzled moment I joined in, blushing. \"That's not what I meant,\" I protested. \"You know that's not what I meant, you filth.\"\n\n\"In vino veritas,\" he sniggered. \"It's ok, Jo, your secret is safe with me.\"\n\n\"Mm. Promises, promises.\"\n\nI lay, pressed against him as he worked the kinks out of me, and as he worked I listened to his breathing, felt the shift of the muscles in his thigh, and came to the undeniable conclusion that I was infatuated with him. I knew it was bad, I knew it was wrong, but I didn't care. He was awesome, kind, gentle, and if I overlooked the inconvenient fact that he was my cousin... he was who I wanted. \n\nAnd I knew that not having him was going to break me.\n\n\"Hands are cramping, Jo,\" he apologised as he let go of me. \"I'm out of practice.\"\n\n\"It's ok... I know you need to rest them. It's just so nice to be touched like this.\"\n\nI felt his fingers gently stroke the nape of my neck.\n\n\"What?\" I asked, softly.\n\n\"It's nice to touch like this.\"\n\n\"Is it?\" I murmured. \n\n\"Yeah,\" he breathed.\n\n\"Why?\"\n\n\"Because I enjoy making you feel good.\"\n\n\"Mm. That's a good reason,\" I smiled. I paused a moment, then sat up straight. \"Is there any of that wine left?\"\n\n\"Maybe a glass for both of us... and plenty more where it came from.\"\n\n\"Time enough for that later. For now just top us up, and help me back up there, because you've put my motor functions to sleep.\"\n\nAndy swung his legs clear of me, then stood stood and offered me his hand. As he pulled me up I stepped forward into him, wrapping my arms around him and just holding myself to him. \n\n\"Thank you,\" I whispered.\n\n\"For what?\"\n\n\"For making me remember what it's like to be touched.\"\n\n.:.\n\nI lay with my head resting on his shoulder, breathing quietly as he gently ran his fingers through my hair. Soft piano music accompanied us from the sound system, filling the room around us, and giving me a slow, beautiful tempo for each breath I drew. I watched him, trying to fix this moment in my memory. I felt safe with him... safe and valued; felt like here at least was a man who I could be open with without fear of rejection or emotional abuse.\n\n\"You ok?\" he asked, softly, not moving or changing the gentle way in which he touched me.\n\n\"Yeah,\" I breathed. \"Wishing I could stay here forever.\"\n\n\"That could cause us some problems,\" he grinned. \"For instance, feeding you would be impossible if I were not able to get up.\"\n\n\"Who needs food when they're as comfortable as I am right now?\" I scoffed.\n\n\"You will, eventually, I imagine,\" he replied.\n\n\"Nonsense.\" I closed my eyes, smiling. \"I don't need food. This is a dream.\"\n\n\"Is it, now?\"\n\n\"It must be. I've eaten a home cooked meal, bathed in an ocean, and am currently asleep against a gorgeous man.\"\n\n\"Gorgeous, huh?\"\n\n\"Delectable.\"\n\n\"It's nice to know that.\"\n\nI felt him stroke my cheek, and I turned my head into his hand, opening my eyes. \n\n\"What?\" I asked.\n\n\"You're beautiful,\" he said.\n\n\"You're delusional.\"\n\n\"I am not.\"\n\n\"Are so.\" I closed my eyes again. And, suddenly, I felt his lips on mine. I let out a strangled gasp.\n\n\"Sorry,\" he breathed. \"Actually... no, not sorry at all.\"\n\n\"Andy,\" I whispered, scandalised. \"What was that?\"\n\n\"Something I've wanted to do all evening.\"\n\n\"I'm your cousin,\" I observed, shivering at the goosebumps that had spread along my arms and shoulders.\n\n\"You haven't run screaming.\" \n\n\"Because I'm conflicted.\"\n\n\"How?\"\n\n\"Andy... think about it. What good can come of it?\"\n\n\"Companionship. Understanding,\" he said. \n\nI sighed. \"And when family finds out?\"\n\n\"Who will tell them?\"\n\n\"Are you planning to keep me your dirty little secret?\"\n\n\"No. I was planning on not telling people what doesn't concern \n\nthem.\"\n\n\"And my friends?\" I asked. \"How did you plan on hiding it from them?\"\n\n\"I hadn't got that far. Jo. I want to make you happy.\"\n\n\"You have,\" I whispered. \"Very. And I'd be lying to say I didn't want more. But to go further could destroy us, Andy.\"\n\n\"So you admit that you want more.\"\n\n\"Of course I do,\" I whispered. \"You're amazing. You're totes amazing. But it's too much of a risk. To both of us.\"\n\n\"Your words say one thing but your eyes say something else.\"\n\n\"My eyes lie.\"\n\n\"I don't think they do.\"\n\nI sighed out, but said nothing, and Andy leaned back against the sofa's backrest once again. I listened to the music, barely breathing, conscious of the feel of him next to me. \n\nI wanted him. I wanted desperately to turn around, lean into him, kiss him and make him mine. I wanted it more than I'd ever wanted anything. I could almost feel the sensation of him against me, the heat of his lips on mine. I squeezed my legs together in frustration.\n\nHe reached out; stroked my forehead with his fingertips. I closed my eyes, sighing as he continued down along my jaw, then down to my neck. He shifted, and I made a vaguely protesting noise.\n\n\"Jo,\" he breathed.\n\n\"Mm?\"\n\nI felt his hands slide down further, and I shuddered as I felt him tease his fingers around the outside of my breast and down along my side.\n\n\"Tell me if I go too far.\"\n\n\"Andy...what are you doing?\" I whimpered, wriggling as his fingers trailed back upwards.\n\n\"Seducing you.\"\n\n\"You really shouldn't do that...\"\n\n\"All you need to tell me to do is stop and I will...\"\n\n\"Can't tell me that. Can't tell a starving woman she... can't have a meal.\"\n\n\"So should I stop?\"\n\nI opened my eyes, and met his gaze for a moment; for two moments. \n\n\"No,\" I breathed. \"No, don't stop.\" \n\nI rolled onto my side and levered myself up, then pulled myself against him, leaning into him, nestling my face into his neck as he reached one arm around me to support me. I felt the shaky breath he took as I lifted myself half onto his lap, feeling him against me, aching from his touch.\n\n\"Jo...\"\n\n\"Shh.\"\n\n.:.\n\nHis lips tasted of wine, and his hands were firm on me as he held me against him. I pinned him, one arm crooked behind his neck, the other cupping his chin, denying him any freedom to move as I took what I craved from him. He took a shuddering breath, and I kissed him again, arching against him, pushing my breasts against his chest, wanting him, needing him, aching for him.\n\nWe broke for air, and I burrowed my face into his neck.\n\n\"Wow,\" he whispered. \n\n\"Told you you'd be sorry,\" I panted.\n\n\"Not sorry in the slightest. That was amazing.\"\n\n\"You're just trying to get me to drop my walls,\" I nibbled gently at him, enjoying the way he squirmed and tightened his arms around me.\n\n\"Is it working?\"\n\n\"Yes, it is. I haven't been kissed in over a year... and you do it wonderfully.\" I let go of him, and pushed myself back slightly, then rose up onto my knees to straddle him. He leaned back, and I braced my arms on either side of his head, pinning him there, staring into his eyes. \"And now you've really tweaked the tiger's tail.\"\n\nI walked my knees in towards the back of the couch, then lowered myself onto his lap, moaning slightly as I felt him underneath me; hard and obviously hot for me. I grinned, and he returned the grin. \"I'm glad you liked that kiss so much,\" I teased him.\n\n\"I like everything about this,\" he murmured. \"I've liked everything about you since I saw you.\"\n\n\"I hope you haven't been plotting this since then.\"\n\n\"No,\" he whispered. \"I wouldn't do that. But... this evening made me think about it... a lot. And... nothing ventured...\"\n\n\"Nothing gained,\" I echoed. \"God, Andy, you turn me on. You're dangerous.\"\n\n\"It's kind of late to be worrying about that,\" he chuckled. \"What with you on my lap like this.\"\n\n\"Mm...\" I murmured. \"We could still class this as a drunken indiscretion, you know...\"\n\nI felt him shift, and then I felt his fingers on my breasts, and I moaned. I arched forward, eyes closed, enjoying the gentle caresses as he cupped me through the thin fabric of his shirt. I whimpered as he found my nipples and gently circled their hard, aching nubs with his soft fingertips. He strained forward to kiss me again. I couldn't help myself, I began to grind against him, feeling the hard arch of his shaft through our clothing; feeling it riding along my mons as I shifted my hips.\n\n\"Andy,\" I moaned. \"Andy, you're killing me here.\"\n\nHe dropped one hand, and I bit down hard on my lips to muffle myself as I felt his fingers slip along the seam of the tracksuit pants I wore. I ground hard against him, panting again, then released him, grabbed his hand and pulled it away. I fumbled at the waistband of my pants, almost sobbing in frustration, arching hard against him as the knot came undone and he pushed his hand inside to cup me.\n\nI was soaked. I heard him groan as he discovered how wet I was, and then I cried out as I felt him slip a finger along me.\n\n\"In. In,\" I begged.\n\n\"Angle's...wrong,\" he panted. \"Can't.\"\n\nI slipped off his lap, and pulled him over me. \"In,\" I begged, and this time he did.\n\nI saw stars. I saw golden stars behind my eyelids as I felt him penetrate me with first one and then two fingers. I could hear myself moaning, and I felt my entire body spasm as he withdrew his fingers and then thrust them back into me. \n\n\"Oh god, oh god,\" I gasped as I ground myself against his hand. \"Oh god, Andy, I need this.\"\n\nHe pushed against me, and I cried out again as he started to finger-fuck me hard and deep. He bit gently at my neck and my right nipple through the fabric of my shirt, and I writhed against him; the fingers of my left hand knotted in his hair. I felt the muscles of his leg pressing against my thighs, but everything faded into second place, unimportant when measured against the incipient orgasm I could already feel building in my belly.\n\nHe bore down on me, pressing his body against me, and I could feel his hard cock against my hip as he ground it against me. I arched under him, spread, his hand damp with me, my skin alive from his touch. I could hear myself gasping, and he panted out his breaths into my neck, my hair, over my breasts.\n\nI could feel myself building, and I knew he could feel it too, because he increased the tempo of his thrusts and forced his hands and body against me. \n\nAndy drove me on, and on, and over, and through, and I cried out his name as I came.\n\n.:.\n\nI lay against him, gathered in his strong arms. He'd pulled me slightly onto him so that my head was pillowed against his pectoral, and gentleman that he was he said nothing as I pulled myself together. He kissed the tears on my cheeks away, and stroked my back with his fingertips, but didn't push, didn't probe, just left me to recover as his physical closeness comforted me.\n\n\"Sorry,\" I whispered, after a while.\n\n\"Sorry for what?\" he breathed.\n\n\"Ruining the moment.\"\n\n\"Hardly,\" he answered as he kissed my cheek again. \"You clearly needed that.\"\n\n\"Which part?\" I smiled into his neck.\n\nI felt him laugh. \"Both parts, I'd guess. Jo... I hope that was good for you. I hope you weren't crying because of what I did.\"\n\n\"I was... but because it was so good. Andy. It's been so long since I have had butterflies for someone. I have them for you, in a big way, and this... what you just did to me... it blew the daydreams out of the water.\"\n\n\"So I gave you an orgasm that made you burst into tears,\" he mused. \"Not sure I'll put that on my resume.\"\n\nI laughed softly. \"You're a devious man. Getting me drunk so you could have your way with me.\"\n\n\"Not what I set out to do,\" he murmured. \"But I'll look on it as a great result nonetheless.\"\n\n\"Oh, it was, trust me.\"\n\n\"I love the feel of you against me, Jo.\"\n\n\"I love your fingers on me, and your lips,\" I breathed. \"God, when you were in me... god, Andy, that was sublime.\" I pushed myself against him, feeling the shiver that ran through me as I felt the bulge of him against my belly. \"You're so hot. You make me unbelievably horny when you smile at me or talk to me.\"\n\nHe laughed. \"Well, fair's fair. I've kind of been thinking about you rather a lot these last days.\"\n\n\"Oh, really? I mouthed against his skin. \"Tell me.\"\n\n\"Well... you're tall. I love how tall you are. I love your long legs, and the way your stride matches me. I love the red that shines through your hair in the sunlight. I love the shape of your lips when you smile. I love your voice. I love the colour your eyes are right now. And I really, really love the feel of your vagina on my fingers.\"\n\nI laughed. \"You're a pervert. Under that velvet veneer, you're a pervy guy. I love it.\"\n\n\"Extremely pervy when it comes to you,\" he murmured. \"Fuck, Jo, you're unbelievable.\"\n\n\"Mm... glad to know you like it,\" I whispered, squeezing my legs together and pushing against him again. I laughed at the small moan he let out. \n\n\"So...\" I murmured. \"Given that we've already crossed the line... tell me what you'd like to do to me.\"\n\n\"Whatever you want,\" he answered softly.\n\n\"No. No, you're not going to white knight out of this.\" I bit him, then kissed the sting away. \"I'm a visual girl, and I want. To. Know. What you'd do. To me.\"\n\nHe took a breath, and I shivered as I felt him slide his hand up under my top. \"Andy,\" I whimpered. \"Andy, you can't fondle your way out of this one...\"\n\nHe drew slow circles around my aching right nipple, and I caught myself arching myself in short movements against him. He raised his right leg and slowly forced it between mine, giving me a firm surface to grind my mons against. \n\n\"I want to strip you naked,\" he breathed. \"And I want to kiss down from your neck to your breasts.\"\n\n\"Ungh.\"\n\n\"Then I want to kiss further down... over your sternum. Then over your belly. Over your stomach. Over your mons,\" he added, squeezing me against him as I panted and moaned. \"Down to you. I want to kiss you. Nibble you. Suck you. Put a finger in you, and suck you till you come on me.\"\n\n\"Oh god,\" I whimpered, feeling my pussy cramp with need. \n\n\"Then I want to spread you, put myself against you, slip myself into you, and fuck you until the bed collapses into splinters under us.\"\n\nI reached up, pulled him down to me, and kissed him hard, panting for breath. \"You... you are going to kill me...\" I moaned.\n\nHe tensed the muscles of his leg against my mons, and I dug in against him, shuddering.\n\n\"How much do you want me?\" I whispered.\n\n\"More than anyone else, ever.\"\n\n\"Can you deal with the mess this will cause?\"\n\n\"So long as I have you.\"\n\n\"Then make me yours.\"\n\n.:.\n\nAndy laid me gently down on the massive bed, and dimmed the lights. I rolled onto my side, and reached out, pulling him to me as he lay down. I felt his arm on the small of my back; he pulled gently on me, sliding me closer, holding me firmly against him. His breathing was unsteady - as was mine - and I whimpered as he slid his hand gently down over my buttocks, squeezing my belly against his hard erection.\n\nI felt him fumbling at the hem of my shirt, and I reached down to pull it aside, then arched inwards, breath hissing out as his hand slipped under it and I felt his fingers on my back. \n\nI clasped the back of his head, and pulled him to me for a long, almost-frantic kiss, breaking only when he trailed his fingers around my ribcage and touched the side of my right breast.\n\n\"Can I...\" he whispered.\n\n\"Yes...\" I interrupted, breathless. \"Touch me. I want your hands on me.\"\n\n\"Can I take your shirt off,\" he asked.\n\n\"Mm...\" I grinned. \"That might cost you.\"\n\n\"I'll pay anything you want me to.\"\n\nI laughed, breathless. \"I'll hold you to that, you know.\" I raised my bum slightly; Andy rose to his knees and gently pulled upwards on the hem of my shirt. I arched further, eyes closed, chuckling deep in my throat as I heard the soft sound of appreciation he made as my breasts came free.\n\n\"Like them?\" I teased as I opened my eyes again. Then I gasped as he leaned forward and took my left nipple between his lips.\n\n\"Oh... oh god...\"\n\nAndy's tongue was hot, his lips were soft, and both sent electric jolts down my back. I squirmed, my left hand clutching spasmodically at his shirt, the other at the duvet cover, and I felt rather than heard myself responding. Andy rested his weight on his right elbow, and reached downwards with his left hand, slipping it under the waistband of my tracksuit pants, down between my thighs, down to me. \n\nOnce more he groaned deep in his throat at how wet I was, and I echoed him as I felt his fingers touch and spread me.\n\nI cried out as I felt him penetrate me with his fingertip, and he drove himself against me, burying his hand in my crotch, thrusting his rigid cock hard against my side. I squeezed my legs together, shaking as he fingered me. I felt his weight on me as he rolled closer, and I knotted my fingers in his hair as I felt him clamber onto me and force his left leg down between mine.\n\nHe let go of my nipple, leaned forward, and kissed me, and as he did so I felt him slip his right leg between mine. He pulled his finger out of me, and lay down, his belly and crotch against me, his cock pulsing against my mons, separated from me only by our clothing. I could feel his abs tensing and relaxing as he breathed, and his hard shaft slid along me as I almost-unconsciously rubbed against him.\n\n\"Jo,\" he breathed as he broke for air.\n\n\"Uh huh.\"\n\n\"I'm going to undress you.\"\n\n\"Uh huh.\"\n\nHe lifted himself off me, and he helped me free myself from my top. Then he put his hands to the hem of my pants, and slowly pulled them down off of me as I lifted my hips up for him. \n\n\"Christ,\" I heard him say, and I laughed softly.\n\n\"Like it?\" I teased, only to gasp as he put his fingers to me again.\n\n\"Like doesn't begin to describe it.\"\n\n\"Mm. Andy?\"\n\n\"Ja?\"\n\n\"Strip.\"\n\nI sat up, and brushed my wild hair out of my eyes so that I could watch him. He scooted slightly back from me, and reached up to unbutton his shirt. I watched, admiring the shape of his arms and the firm definition of his chest muscles. He dropped the shirt carelessly to the floor, then clambered off the bed.\n\n\"You're blushing, aren't you?\" I teased him.\n\n\"Your stare is pretty intense.\"\n\n\"That's not the only thing that's intense,\" I murmured. I touched myself, and laughed softly. \"I don't think I've ever been this wet for anyone, Andy.\"\n\n\"Oh really? I'll take that as a compliment then.\" Andy reached down to his belt buckle and undid it, letting his pants slide down to the floor. He took a graceful step free, and kicked them into a corner. The bulge in his underwear was obvious, and I couldn't help but sit forward, anticipating.\n\n\"Strip,\" I breathed, glancing up at him when he paused.\n\nHe smiled, hooked his fingers through the waistband, and I slowly sighed out as I saw him for the first time.\n\n\"God, you're hot,\" I murmured.\n\n\"Pot meet kettle,\" he answered, as he sat down opposite me, watching me as intently as I watched him. His penis bobbed with his pulse, and I felt the desire ramp up in me. He shuddered slightly as I reached out and touched him, and as I leaned in to kiss him I closed my fingers around his throbbing shaft. I gave him a squeeze, loving the deep groan he let out. \n\nBut I wanted him, craved him, and I was done waiting.",
        "\"Andy?\" \n\n\"Yes, Jo?\"\n\n\"Do me.\"\n\n.:.\n\nHe pushed me back onto the pillow, supporting his weight on his arms and belly. I could feel the head of his cock nestled against my thigh, barely touching my lips, and I could feel his chest against my breasts, but the feeling of him naked against me as he kissed me was what really drove me over the edge into raw need. \n\nHe was warm. He was strong. He was safe. And I craved him; needed him as close to me as my own skin. \n\nI squirmed under him, whimpering at the feeling of his cock head so close to my pussy. He gasped a shaking breath, and shifted his hips slightly. I felt him against me, perfectly positioned, and I rocked myself back and forth, almost sobbing.\n\n\"Andy,\" I gasped. \"Andy, god, you're going... to drive me mad. Please. Please put it in me.\"\n\n\"Are you sure you... want this?\"\n\n\"Put your fucking... cock in me... right now!\"\n\nI felt him pushing, I felt myself slipping over and around him, and I arched up against him with a wordless wail. It seemed to take forever, but I had him in me, all the way, his rock-hard shaft buried in my body, pressing against me, his balls against my crotch, and both of us panting for breath that didn't seem to want to come.\n\n\"Andy... oh god, oh god, that's what I wanted.\"\n\n\"Fuck, Jo,\" he groaned into my neck. \"Fuck, you are tight. You're so hot and tight on me.\"\n\n\"Practically a virgin,\" I whimpered, pushing against him. \"No sex for a year or more. Tightened me up for you.\"\n\nI felt him pull back, and thrust forward again, and I moaned as I felt the ridges of his cock slipping between my lips.\n\n\"Like that, oh god, like that,\" I begged. \"Deeper. Please, deeper...\"\n\n\"I wanted this all night,\" he whispered, biting my ear as he drew out and thrust in again. \"I wanted you like this, under me, wet, whimpering, all night.\"\n\n\"You wanted me horny, dripping, for you, didn't you?\"\n\n\"Exactly like this,\" he gasped. \"Exactly like this.\"\n\nI knotted my fists into the sheets, writhing as he drove into me, as he possessed me with his with his delicious, hard body. I could feel sweat on my skin, and could taste it on his lips as he kissed me. My breath rasped, and I could feel my heart thumping as Andy ground himself forwards over me, pulling himself against me, his chest brushing against my breasts and his mouth hot on my neck and earlobe.\n\n\"Jo,\" he moaned. \"Jo, It's too much... I'm going to come...\"\n\n\"I don't care, I don't care, I'll get more later, come in me.\"\n\nI clasped my legs over him, holding him to me as I felt him give a massive push. I groaned deep in my throat as he arched hard, crushing me under him. I held him as he shivered, panting at the delicious sensation of him emptying himself deep in my aching body; writhing under him so I could grind my lips and clit against him.\n\n\"Oh god, oh god,\" I hissed, and I heard him echo me. \n\nHe shifted slightly, pulled himself slowly out of me till his semen-slicked head was nestled to my lips, and then slowly, achingly, pushed into me again.\n\nI cried out, my legs spasming as he spread me again.\n\nAndy braced himself on his arms, suspended above me, grimacing almost in pain as he slowly started to drive himself in and out of me once more. I could feel my body responding, building as his still-engorged cock slipped between my aching lips. I clawed at his back, gasping for breath, feeling him deep in me, feeling myself sticky from him and loving it.\n\nI didn't last long, and when I came I returned to myself only in dribs and drabs as my pussy clamped and convulsed on him, as he tongued my nipple, as I cried his name.\n\n.:.\n\nHe held me, cupping my breasts with one hand teasing a nipple as he held himself against me. Semen coated me, and both of us smelled of sweat and musk. My belly ached from my orgasms, and my clit sent electric jolts through me every time I shifted my hips. Through a haze of afterglow I enjoyed his still-semi-erect penis against my bum and the feel of his come on my skin.\n\nHe kissed the nape of my neck, and I shivered, pushing back against him. \n\n\"Penny for your thoughts,\" he whispered.\n\n\"Can't think, too sexed up.\"\n\nHe snorted, and pulled me back against him again. I smiled as his cock pressed against me. \"Still horny?\"\n\n\"I could go again.\"\n\n\"You'll kill me,\" I murmured. \"I haven't ever felt this languid, ever.\"\n\n\"You did a lot of the work, you know.\"\n\n\"Mm.\" I snaked a finger down, touching myself, still soaking. \"Christ, I'm a mess,\" I moaned, squeezing my hand between my thighs as my stomach muscles twitched. \"That was so good, Andy. That was so good.\"\n\nHe kissed the nape of my neck again, and I shivered as the sparks tickled through me.\n\n\"I want you again,\" he whispered. I felt him stiffen slightly between my cheeks; felt the damp heat of him pressing against me, and just like that I needed him in me again.\n\n\"Roll onto your back,\" I murmured, and wriggled round to face him as he did. \n\nI got up onto my knees, leaning forward into him. I kissed him, bit his lip gently, and then kissed down over his chin. I kissed the hollow of his right clavicle, tongued him gently, then nibbled down his right pectoral to his nipple. \n\n\"Jo,\" he whimpered.\n\n\"Shh.\" \n\nI kissed down along his ribs, his abs, past his belly button - the desire ramping up in me as I heard him gasp a breath. His cock was hard again, throbbing, and as I nibbled in small steps down towards it I cupped him with one hand; feeling the dampness of our fucking on his scrotum. \n\nI kissed his glans, just the tip of it, and as his cock throbbed I tongued around his head. He moaned - a small sound of his need - and I smiled to myself at the way he bucked his hips to try to get himself into me. I felt him fumbling at me as he tried to tease his hand between my legs, but I squeezed my thighs together and sat on my haunches to keep him out of me as I opened my mouth for him.\n\nI took him into me as far as I could, loving the way in which he arched under me and struggled for breath; at the way he tangled his fingers in my hair and gently applied pressure, trying to push further into me. I lifted my head, feeling the ridges of his hard penis between my lips; feeling the burning ache in my belly. I closed my eyes, leaning forward, taking him again, squeezing him gently with my right hand as I teased myself with my left. \n\nI couldn't possibly be more ready; I was soaking wet for him, and I wanted him in me, so I pulled away, kissed him, and then clambered onto him, straddling him as I reached down to guide him into me. Andy's hands were hot on my hips, his thighs pressing firm against my bum, and his cock, oh god, his cock slipping into me. I think I moaned as he spread me, and I closed my eyes and arched forward as he bottomed out in me, his balls nestled against my labia.\n\nI lifted myself slowly off him, then let myself fall, impaling myself on him. I cupped my breasts, squeezing myself, clawing gently as I rode his perfect shaft in and out of my pussy; so slick already from our prior lovemaking. \n\nBut Andy had different ideas. He reached out, pulled me down to him. My breasts brushed his chest hair as he kissed me, and he started to move slowly under me, stroking himself slightly in and out of my aching pussy, gently brushing my clit as each stroke completed. I let myself down onto him, resting my weight on his chest, nuzzling into his neck, small moans of want escaping me as I felt him take control of my pleasure again. \n\nHis cock was perfect, it fit me just as I needed it to, and when he squirmed a fingertip in between my legs from behind to touch my inner lips where they gripped him it was all I could do not to cry out.\n\nMy clit ached under his fingertip, and I clawed at him, grinding my belly against him, soaking up the scent and sound of his panting breaths. I could hear him building, and as he fucked me and fingered me and claimed me I knew that I was utterly, utterly his.\n\n\"Jo...\"\n\n\"Come for me...\"\n\n\"Can't stop...\"\n\n\"Come in me, Andy,\" I whimpered. \"Come in me. Fill me again. Want it.\"\n\n\"Gonna come...\"\n\n\"Do it, Andy... do it. Come in... me...\"\n\nI felt my muscles tensing. I moaned, moaned again, arched, ground myself against him, and in the moment my climax took me I felt him buck under me, lifting us off the bed as we cried out, came together and came down together, panting, joined, as if it were the only way it was possible for us to be.\n\n.:.\n\nI lay, tangled heedlessly in the sheets, his semi-flaccid cock still pressed to my lips, and our mingled fluids coating our bellies. He stroked my back languidly, and I nipped his neck, then nuzzled into it, hiding my face in the angle of his jaw as he held me to him. \n\nWe said nothing, just breathed, as the minutes passed us by. Then Andy squeezed me hard to him.\n\n\"I love you,\" I said, unthinkingly.\n\nHe was quiet a moment. \"I know,\" he answered quietly. \n\n\"Is it a problem?\" I lay, quiet, my heart thumping.\n\n\"No.\"\n\n\"Why?\"\n\n\"Because I've loved you for fourteen years, Jo.\"\n\n\"How so?\" I levered myself up, looking down at him.\n\n\"You were my hot British cousin. You were interesting, and funny. You didn't spend time with the family, you spent it with me. You were my friend; for a few happy weeks you were my twin. I never forgot that, Jo. I never forgot that holiday with you.\"\n\n\"Mm. That's a long crush,\" I smiled.\n\n\"I'd like to think it was more evolved than a crush.\"\n\n\"So... did you come here to seduce me?\"\n\n\"No. But I did come here to see you again.\"\n\nI lay my head down on his arm. \"Why?\"\n\n\"I missed my shadow-self.\"\n\n\"And now?\" I breathed.\n\n\"Now you have a shadow too.\"\n\nI swallowed hard, not trusting myself to speak, and Andy, bless him, just tightened his grip on me and held me to him, letting the soft sound and motion of his breath lull me to sleep.\n\nIt took a while, but it was all the better for that, and for the first time in as long as I could remember I dreamed.\n\n.:."
    ],
    "authorname": "onehitwanda",
    "tags": [
        "cousins",
        "london",
        "incest",
        "taboo",
        "romance",
        "winter"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/london-girl"
}