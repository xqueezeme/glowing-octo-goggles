{
    "title": "Hide and Seek Pt. 01",
    "pages": [
        "All characters are 18+\n\nMatthew sighed to himself. It had been a wonderful holiday: just the two of them in the sun. His wife had really surprised him. Twenty years of marriage and never a suggestion, well perhaps not since summer days courting many years before, that she might like being naked outside. Perhaps it was the children off their hands, off at uni. And off on holiday with friends, that had done it. Finding they were close to a naturist beach and she suggesting, \"why not?\"\n\nWhy not indeed? Matthew had loved the freedom. Being able to walk around 'textile free' as he discovered the expression went, carefree even. And Sarah had been almost a different woman. Certainly she had seemed almost a different woman in bed. Yes, it was Sarah all right. He knew all the bits, all the curves and all the places but it was if they were operating on a different level - and with such enthusiasm and energy.\n\nAnd Matthew was happy enough to see many of the women on the beach without the bother of clothes. He had not embarrassed himself but he had been very happy to look. Matthew did not buy the idea naturism was not about sex - at least to some extent. He would have looked at women on a textile beach and so he looked on a textile free beach. He liked looking at women!\n\nBut it was different now. This was England and term had started. Sarah taught; Sarah was a teacher and, like all teachers, Sarah changed with the start of term. Only when the holidays came - and a little after that - did he find he was back with the woman he had married. And certainly she was not now the woman he had been on holiday in the sun with - no, not really that woman at all!\n\nHis sigh came again but then he thought - just as Sarah had said at the start of the holiday, 'why not?'\n\nWhy not indeed? Matthew was a successful man. Banking had paid and paid handsomely. With inheritance dropping into his lap as well and judicious property purchases he, and Sarah, now had a large house with a very large garden. A garden which was pleasantly private from the adjoining houses. The sun in early September was surprisingly hot and rendered clothing quite unnecessary - if you were so minded. There was no reason at all why he could not relive the pleasure of being naked outside; just like on holiday. It was not on the beach, it was not with Sarah who was out teaching, it was simply on his own: yet that did not make it the less pleasant.\n\nNo sooner thought than done. Matthew had never stepped out of his house into his garden without his clothes. Perhaps in his pyjamas but never like this. He left the discarded clothes and simply walked off down the lawn, the grass feeling pleasantly soft under his bare feet. A little self conscious at first as he moved away from the notional safety of the house but then, after all, this was his garden. There was no way through at the side of the house for a visitor to intrude, his wife would not be home for hours - not that that would matter, she had seen him like that before - and the children were not even in the country.\n\nMatthew's motive had been simply to recall the pleasant feeling of the heat of the sun on his body, to imagine himself back where he had been so really happy only a week or two before: it was not sexual; there was not the hint of a twitch from his gently swinging penis. He had been very aware on the beach that neither he nor Sarah needed to be at all embarrassed about their bodies. She held up well despite bearing two children and Matthew, in his forties - the children had come early in their marriage - kept himself fit at the gym and playing tennis. Not that there was anyone to see.\n\nHis smile came as he recalled playing naked doubles with Sarah on holiday. That had been an experience. Seeing the girls 'in motion' like that! It had become important to concentrate on playing so as not to embarrass himself. Sarah had teased him later and seemed to find Derek Tarrant's near erection rather amusing. It was clear he was not the only one to have enjoyed seeing nakedness - seeing the girls in motion - and hadn't those bounding boobs been wonderful! Again he had been surprised at quite what Sarah said about Derek and his 'feature.'\n\nMatthew felt his erection rising at the memory. He was amused at himself walking like that along his garden path. What a sight he must look. A fine sight or a ridiculous one? It all depended on your point of view. Concern at some damage to plants from caterpillars took his mind off bouncing boobs and with it went his erection.\n\nIt was indeed very pleasant to walk around the garden. The sun was hot, the shade a pleasant contrast and it was nice to just inspect the garden and think. He was in no hurry. He could spend all day if he wished. And as he was wont to do when he was happy he began whistling to himself.\n\nA gentle wander across the lawn and down the paths between the shrubbery. a circuit of the pond with its fountain and fish, a resting on the bench beneath the arch by the pond, feeling the pleasant heat on his body, even an inspection of the vegetable patch, his bare feet finding the gravel a little uncomfortable.\n\nA large garden and private. Matthew was conscious that perhaps, just perhaps there might be a view from the adjoining gardens, perhaps through a hedge or fence but, if so, it would require a very deliberate desire to look. In a way it gave a little tingle to the whole adventure but it was his own garden after all and he had always thought it to be very private.\n\nHe was enjoying himself. Lovely to be outdoors naked again. It was something he would have to do more of - perhaps next summer. Another aeroplane flight to the real sunshine and another naturist beach perhaps. Being outdoors without clothes was such a delightful connection back to Sarah and his holiday. He smiled recollecting the tennis matches and the sex afterwards - perhaps, unfortunately, just with Sarah. His penis began to swell.\n\nMatthew's pleasing recollections were rather dramatically interrupted by a voice saying, \"Mr Stamford, I've not seen you like that before.\" followed by a giggle.\n\nThe head looking over the fence was female; moreover it was young and female - his neighbour's young daughter. Matthew had not really thought it possible for him to be espied, indeed had been sure it was not really possible but undoubtedly there she was - large as life.\n\nWalking around the nudist beach had rather reduced Matthew's concern at being seen naked. Being watched by a young and attractive girl was not the worst thing he could imagine. It was his garden and it was not as if he had been publicly displaying himself - anything but. He was not tumescent - nowhere near and the slight swelling was already rapidly diminishing - neither was he, nor had he been, wanking or anything,\n\n\"My garden, Vickie, what are you doing looking over my fence invading my privacy.\"\n\n\"Looking at you, Mr Stamford, that's what we're doing.\"\n\nWe?\n\nThe appearance of another two heads, also young and female, was perhaps a bit more alarming.\n\nThe surprise on the faces of the newcomers was rather charming. Matthew suddenly got a hint of the dubious pleasure of the 'flasher.'\n\n\"I am sunbathing.\" He felt it necessary to give an explanation. \"In the privacy of my own garden.\"\n\nHow had they known he was there? Was it his whistling that had attracted them?\n\n\"He's really got no clothes on.\" It was a statement of the rather obvious.\n\n\"Well, nor have we.\"\n\nMatthew frowned, this seemed a little unlikely. Why would they be like that? His surmise was immediately confirmed by one of Vickie's friends.\n\n\"Yes, we have. We're fully dressed\"\n\n\"You didn't need to say that - he wasn't to know. He can't see.\"\n\n\"Why say it then?\"\n\n\"'Cos I wanted to see if he got hard.\" It was meant to be a whisper but Matthew was not hard of hearing. Suddenly he was caught between the prudence of leaving the girls for the house, or at least another part of the garden, or seeing what might develop. Prudence firmly took the lead and he turned towards the house.\n\n\"Bye girls, I'd better go and put something on.\"\n\n\"No, don't go. We'll take our clothes off too and then it'll be OK. Won't we, girls? See we are taking them off now.\"\n\nCertainly Vickie and then the other girls were moving as if they were taking their clothes off but Matthew thought they were pretending. The idea, of course, perked his interest.\n\n\"There we are - not a stitch.\"\n\nHe could not help it. He felt his penis twitch.\n\nIt had all been just a little too quick to be true. \"Don't believe you Vickie. Throw them over and I'll believe you!\"\n\nAnother whisper, \"He's not getting hard. You said...\"\n\nWhat had they seen earlier? Had they been watching him walking around his garden? Clearly it was not as private as he had thought.\n\nOnce again he turned towards the house and prudence beckoning to him, but all of a sudden girl clothes started dropping over the fence. They were undressing now.\n\nMatthew was only human - only male human - the connection between clothes dropping and the girls behind the fence was made. Young girls undressing just feet away - his brain processed the information and sent instructions. His previously dormant penis began growing, swinging around from six o'clock to twelve o'clock or perhaps one o'clock anyway!\n\nFrom the fence bras were falling. Matthew knew just behind the obscuring fence six young breasts were out in the sunshine.\n\nThe girls had got what they wanted. A man gone all hard. And hard he had certainly gone. Matthew's erection felt firmer and fuller than it had even done on holiday in his hotel room with his wife at her sexiest. Where before had he exposed himself like that to other women, indeed three young girls - and by 'that' he meant not just naked but hard and virile. The sexual excitement fed on itself - not just the undressing but the exposure and the display.\n\n\"Yes!\" It was Vickie exultant.\n\nAnd there on Matthew's side of the fence were three piles of girl things surmounted by panties. They had gone all the way. The evidence was complete.\n\nPrudence had gone in for a cup of tea. Matthew was not minded to hurry away now.\n\nAnd the other side of the fence were three smiling girl faces. Three pretty girl faces rather intriguingly topped by black, red and fair hair. A pleasing mixture and, of course, Matthew wondered, as a man would, if that colour would be matched lower down.\n\nThe sensible thing would have been to hurry from the scene; leave the girls with the problem of retrieving their things but nonetheless getting well away. Did Matthew do the sensible thing? No.\n\nMatthew was thoroughly enjoying the experience. It was like being on the naturist beach but one better. He was exposing himself to the young girls and loving it. He was not going to forget this in a hurry. And it was not as if they were running screaming from him. They were clearly very happy with the reaction they had caused.\n\n\"Mr Stamford! Just look at that.\"\n\n\"At what, Vickie?\" Delightful to act the innocent and make her mention the obvious.\n\n\"At your... erection.\"\n\n\"It's very natural. It is what men do. And it's all your own work.\"\n\nThe giggles were a pleasure.\n\n\"What do you mean?\"\n\nBut they knew all right!\n\nIt was good to walk even closer to the girls - walk towards them with his erection standing proud. Not a hand to it, just standing up on its own, really upright. Matthew felt so very male, so very sexual. This was a lot better than simply walking around his garden naked. The girls actually seemed to be admiring what he was displaying. It did wonders for his vanity as well as his libido. He picked up the three piles of clothes, turned and started walking away, revealing his reasonably trim bottom to the girls.\n\n\"Oh no! Can we have them back now?\"\n\nHe put them down. \"Perhaps you might come and get them.\"\n\n\"But you'd see us...\"\n\n\"Well, I suppose so.\" Matthew swung around to face them: exposing his erection once again.\n\n\"That wasn't the idea.\" From one. \"Vickie, what have you done?\"\n\n\"How'll we get over?\" From another.\n\nIt looked to Matthew like a bit of tree climbing was going to be needed and then a drop into his garden. It sounded like they were game to come and retrieve. The prospect of seeing these girls not only naked but climbing a tree - and what that might reveal - did nothing to lessen his tumescence. Indeed the way it felt. Matthew was not sure it would 'go down' for an hour or more! Well, unless...\n\n\"Try climbing a tree.\"\n\n\"You might have to catch us if we fall.\"\n\nIt just got better. Catching naked girls one by one. Naked girls dropping into his arms.\n\nThe apple tree nearby hanging over his garden was neither hard to climb nor was it difficult to come out onto the large bough only some six feet up. To Matthew the sight of Vickie appearing as she pulled herself up the trunk was a delight. Of course he had known of her for a couple of years. Knew who lived next door but she had blossomed with all the womanly attributes a man likes to see. First hands on the tree, then her head with its long fair hair in a pony tail and then her upper body. As naked as promised and with a pair of deliciously rounded breasts, rather larger than might be expected in a young girl and, with all her exertion, not staying still.\n\nSo, unlike the beach, Matthew could let his pleasure in unclothed girls take hold and his thoughts run wild. Only lying safely on his front on the beach or safely up to his waist in the warm sea had he been able to do that. Once or twice he had had to delay getting up to go for a swim or to fetch an ice cream for Sarah due to his hardness pressing into the beach lounger.\n\nIt had, though, been good to watch the women and girls when in the sea, even talk to some with the knowledge he was standing there with an erection not hidden inside swimming trunks and were it not for the moving, covering water visible for all to see. Had talked to their holiday friends like that with Sarah beside him - though he had wondered if he was not the only man like that! Had wondered if Derek was having the same thoughts about Sarah as he was about Derek's wife as the passing wave lifted her breasts up and then let them down again. Had wondered if both he and Derek were standing in the water erect.\n\nHe had certainly wanted to fuck Lucy but would he have been at all happy to let Derek fuck Sarah? It could all so easily have been done there in the sea, all obscured by the water. Lucy putting her arms around him and hopping up onto his erection and holding her legs around him and Sarah doing the same to Derek. Would Derek have filled her more? Sarah had certainly mentioned that possibility to him, wondering how big Derek was after that tennis game when Derek had almost revealed his full manhood to them. He had not, unfortunately for her, actually demonstrated how big he got but she had certainly speculated and said how super it would have been to see him serving with a full erection - especially a really big one!\n\nIt had not come to that. No hint of a suggestion they should 'swop.' But still Matthew wondered if he and Derek had both been erect there in the sea. He could not imagine that Derek would not have liked to fuck Sarah just as he had thought about what it would be like with Lucy. It was only natural to speculate.\n\nA few more pulls and all of Vickie's tall frame came into view complete with naked bottom and, moments later when she turned, a fine fair haired patch between her thighs. Out across the bough she came with no hesitation and complete confidence in what she was doing. Matthew was more than satisfied with the view up between her legs as she moved. Not just the triangle of fur at the front but right up between her thighs. No attempt had been made at taming the natural exuberance there and no mistaking the pinkness of labia minora poking through - all the girly bits!\n\nHis hands reached up to help but Vickie was lithe and quick and it was only a naked foot in his hands before she was standing beside him. But what an all too brief close up of a young girl's Mons Veneris in front of his face, all wonderfully plump and decorated with fair curls, as Vickie let herself down onto his hand.\n\nIt was fantastic. Here he was standing beside this naked girl sporting an erection! And already the next girl was venturing out on the bough. He stepped back to watch.\n\nThe redhead, pale of skin and much shorter than Vickie. Quite a little girl in fact with breasts only just budding. That intriguing cone shape that young girls sometimes have before they fill out and pale little nipples. Nothing too young girly about the copper triangle, though, or the poking little pink bits between her legs. Like Vickie, a full curly bush but so copper - Titian if you like or Pre-Raphaelite in a naughty way - exotic or erotic - perhaps both.\n\nHer steps out onto the bough much more tentative than Vickie. A very careful setting out along its length giving much more time for Matthew to admire legs and what lay between them. There was no way up in the tree like that she could hide her charms from his interested gaze.\n\n\"I'm... I'm not sure I can do this Vickie, you just get the clothes and come back.\"\n\n\"Don't be silly, Emma, you can do it. Mr Stamford will catch you.\"\n\nAnd then it was all dangling legs and vulnerable furry bits. Matthew was ready to help. Ready? Indeed he was so ready for copulation or the like it was simply not true! Not with an erection like that! But he was also ready to catch Emma. A bit of a squeal and she let herself go. Matthew caught her all right, you could not fault that, his hands not touching where they shouldn't at all - no! No, hand on breast or anything: no, he caught her right under the arm pits and with a flexing of his knees let her downwards towards the safety of Earth. What though was perhaps just a trifle inappropriate, or perhaps rather more than a trifle, was where his penis, yes, his rock hard standing erection, caught her. Down she had come feet first, facing him, with legs a little apart, copper bush almost in his face, straight down to be caught by his hands but his erection was just so in the way and caught her right between the thighs so, as she came down towards Earth, and he being taller than her it was pressed right between her thighs. It had not been sticking out horizontally but was truly pointing upwards - nearly perpendicular. It caught her right between her legs, a hard, poking, rounded thing right between her legs.\n\nWorse, as she squealed, the pressure of his knob right on her sex between her legs opened her and he slid right in.\n\nSqueak, \"what, oh, fuck, no!\"\n\nThe poor girl was impaled. Matthew took a step backwards as he realised what had happened. Realised! He could feel the lovely warm wetness surrounding his knob. And the way he was holding her and the fact she was shorter than him meant she could not get off. Her feet were dangling as her weight forced her further down onto Matthew's cock. Her weight simply pushing his knob further and further into her, he could feel it opening her as it slipped up inside - after all that was why it was that shape - a lovely friction as he steadily widened her and more and more of his shaft slid in.\n\nIt was all so sudden. Not intentional at all. Neither Emma nor Matthew had intended it; he had caught her and had been more careful about ensuring he did not drop her than worrying whether she touched his naked body or not - let alone quite what and how she touched it! But there he was, actually sliding up inside the young girl, not only inside his first red head but it was also the first girl he had penetrated since marrying Sarah. He had been good. This was simply and truly an accident - but what a lovely accident.\n\nIt lasted only a moment or two and Matthew rectified the position by lifting Emma firmly up and off. He could, instead, as easily have walked off down the garden with her like that and she could not have done anything about it but it seemed anything but appropriate. Nice, though, to feel the sliding on his cock as he lifted her upwards.",
        "Vickie's eyes were round as the penis very obviously appeared from inside Emma, \"You don't waste much time!\"\n\n\"I'm a virgin,\" squeaked Emma.\n\n\"Not any more, dear.\" Laconic from Vickie.\n\n\"Sorry.\" But that was hardly true. Matthew was not, one bit!\n\n\"Hardly your fault, Mr Stamford\" said Vickie, \"Emma should have been more careful. And there's no blood. No hurt, no harm at all. No matter.\"\n\nAnd they were both, Vickie and Emma, looking at his erection. An erection firm and business like but now shining wetly in the sunshine, shining from Emma's wetness. And indeed no blood - no hymen torn - presumably no hymen. Matthew was not as sure as Vickie that Emma would see it as 'no matter.'\n\nWhat a surprising and accidental way to lose your virginity. Imagine the question: How did you lose yours? Well I just sort of fell out of a tree...\n\n\"What's happened?\" It was the dark haired girl coming up into view above the fence.\n\n\"Nothing, Morgan,\" said Vickie, \"Emma just slipped. Be careful.\"\n\nWonderful to see little Emma staring at his penis, looking wide eyed at the cock that had just taken her virginity. Lovely for Matthew to look at her little body and know he had just fucked her albeit briefly - too briefly. Unbelievable! But he needed to turn his attention to the other girl, now venturing onto the branch. He might need to catch her - and, of course, he would have to be more careful this time! Well, perhaps...\n\nMorgan was not so little. Rather more solid than Vickie with a great mane of flowing black hair, beautifully wavy and the blackness of the hair was repeated in the usual places - not just between her legs but under her arms as well. 'No shaving going on there at all', thought Matthew. Perhaps a bit of a wild child? Wonderful to watch her firm thighs as she moved carefully along the bough. Lovely to see what peaked through the dark curls between her legs. Nice to see what looked like moisture clinging to the curls. Well, it was a hot day after all, perhaps it was just perspiration; or had the sight of him naked and erect made her wet; or could it be, with her friends out of the way, she taken the opportunity to bob down and relieve herself? It all looked rather nice whatever the moisture was!\n\nCould he perhaps accidentally help her down the same way as Emma? The idea did not lessen his erection!\n\nBut it was Vickie who helped her down, Vickie's hands on her not his. But nice, nonetheless, just to watch the two naked girls together and, then, there they all were, four naked people in the dappled shade of the apple tree. The contrasting light and dark making all of their bodies that much more interesting.\n\n\"Well, well, good afternoon girls, welcome to my garden. An unexpected pleasure.\"\n\n\"It's big isn't it?\"\n\n\"Yes, a couple of...\"\n\n\"Told you so.\"\n\nThey were all looking at Matthew's erection: not his garden. He was not sure it was particularly 'big.' A nice idea but he rather thought it was a fairly normal size. It sounded like Vickie had rather more experience than Morgan. The remark suggested Morgan had never seen an erection before.\n\n\"How long does it stay like that?\"\n\n\"Until he cums or loses interest.\" Vickie seemed very authoritative on the subject\n\n\"You seem to know a lot,\" Matthew said.\n\n\"I have a boyfriend.\"\n\n\"Had.\" It seemed a little unkind from Emma.\n\n\"And you had sex?\"\n\n\"Several times!\"\n\nAnd what did you say to that? \"I hope it went well.\"\n\n\"Yes, thank you, Mr Stamford.\"\n\n\"And what about you girls?\" It was such an interesting line of conversation. To be able to talk to young girls about sex whilst they were in your garden completely naked and you were there right with them just as naked as they and erect to boot. A great subject made even better!\n\n\"No, never, but of course I'd like to.\" And to Matthew, Morgan was clearly made for sex with her long black curly hair, wide child bearing thighs and the moisture already noted between her legs. Plentiful sex, thought Matthew.\n\n\"Me neither - well not really... though I'd like to also, of course.\" Emma was not to be outdone.\n\n\"What do you mean 'not really' either you have or you haven't.\" Scoffed Morgan.\n\nVickie and Emma looked at each other. \"You see,\" said Vickie, \"when Emma was coming down off the tree she slipped, as I said, and Mr Stamford caught her; only she sort of dropped down onto his sticking up penis and... and it went in. Right in. I saw it!\"\n\n\"No! Wish I'd seen it. Won't Emma get pregnant now?\"\n\n\"Don't be silly. Mr Stamford has to cum first like I told you. You haven't cum, have you Mr Stamford?\"\n\nIt was remarkable - the girls were not only admiring his erection but asking about his semen and ejaculation. He was certainly thinking how nice it would be and whether perhaps there would be opportunity to decorate the girls' breasts or something. The pressure in his cock was actually quite amazing. Having the girls so close and talking as they were was just so stimulating. He could quite imagine his cock coming to orgasm all by itself without being touched at all; his ejaculate exploding out of it in a great stream and spattering their naked bodies with his sticky translucent cream. Would they like that or be shocked and grossed out.\n\nIt was important to a man, that girls liked his cum. Sarah did. If she didn't feel like intercourse or it was 'that time' she was almost always happy to accommodate him in her mouth or bring him off with her fingers and many a time had then licked it off her fingers giving him an extra post orgasmic thrill. What would Sarah think of him now with these young girls? It was perhaps better not thought about.\n\n\"No, of course not. I would not be hard like this if I had!\"\n\n\"Well, we don't want you to cum yet: we like you stiff like that, don't we girls?\"\n\n\"Yeah, it's nice.\"\n\n\"Men are so different. We don't get all hard like that.\"\n\n\"Of course you do,\" said Matthew happy to continue to talk on about sex. Your nipples get hard, just look at Morgan's, and your clitoris erects just like a penis only rather more hidden.\"\n\nIt was amazing. All three girls dropped a hand and felt between their legs.\n\n\"Mine's hard.\"\n\n\"So's mine,\"\n\n\"And mine.\"\n\n\"May I see?\" Matthew was not passing this up.\n\nWonderful to crouch and bring his face close to all three girls one after another and stare not just at their hairy mounds but between their legs seeking each of their little buttons. Vickie's was pronounced and visible but not the others.\n\n\"Would you mind if I touched?\" Would she let him?\n\n\"I suppose not.\"\n\nA gasp from Vickie as his finger tip stroked her little erection. He had not touched anything else - apart from her foot. It was both hard and soft and a little sticky to the touch. It was clear she liked the touch and the stroking. Just his finger tip stroking the little thing. It was more than obvious Vickie really liked that.\n\nMatthew's finger moved to Morgan's dark bush and felt carefully around, searching. She did not scream or squeak or anything but just let him. What a marvellous exploration! Fingers delving, parting the labia, feeling into the warm dampness and there it was, her clitoris. Lovely to see the ripple in her firm thighs and a shiver at her knees as he did so. Holding it gently between his fingers - her special little button - he rolled the flesh. Tempting to slip further and push his finger into her but he had not asked to do that.\n\nAnd then a third bush to poke about in but all very white skin and marvellous copper curls. A more difficult to find little pea but there it was under his fingertip, just as hard as her friends and as he touched there was a lovely little squeak from Emma.\n\nHad he gone a bit far? But clearly something had worked them up, something had caused their little erections and, seemingly, it was him! Would they want to go a little further or would they now take flight and scamper back home with their retrieved clothes? \"Well, what would you like to do now? Would you like to come to the house for a Coke, some lemonade?\"\n\nThey did and it was lovely to see them happy to leave their clothes behind and walk away from the safety of clothing up the garden with him, his erection pointing the way.\n\nOf course erections do have a habit of going down fairly easily even in the company of naked girls and by the time Matthew had got the Cokes his cock was not so much pointing as swinging.\n\n\"Oh,\" said Vickie and it was obvious what she meant.\n\n\"It must be funny having that between your legs all the time,\" said Morgan, \"Doesn't it get in the way. Don't you feel it all the time?\"\n\n\"It's just there.\" But of course he was very conscious of it more than a little often. Matthew, like most men, thought about sex a great deal and then, there was its other use.\n\n\"Make it go up. I'd like to see it grow bigger again.\" That was from Emma.\n\n\"I am sure it will. Enjoy you drinks.\"\n\n\"It's a lovely garden, Mr Stamford. I wish I could have played hide and seek in it when I was younger. It would have been great.\"\n\n\"Yes, it is. I used to play hide and seek with my own children.\" He was rather conscious the girls were not exactly very different in age from them. A little younger, but not a lot. \"And of course you could have done, had you asked.\"\n\n\"Hey we could still play. Why not?\" Vickie seemed excited by the idea.\n\n\"Ooh yes,\" said Emma.\n\n\"Who is going to be 'it' then?\" asked Morgan.\n\n\"Mr Stamford of course.\"\n\n\"What are the rules then, girls, how far do I have to count up to?\"\n\n\"A hundred and slowly, no cheating. A second at a time. The house is out of bounds. And, you can only come after us if you are hard. If you're penis is soft you have to stand still until it's up again. It'll be nice seeing you hunting us like that with your big thing - your big weapon.\" Giggling from Vickie and the girls.\n\nAlready Matthew could feel himself rising. It sounded rather like a very fun way to spend an afternoon.\n\n\"What do we do when - I mean if - we get caught? Do we go and wait somewhere?\"\n\n\"No, he fucks us!\"\n\n\"What!\"\n\n\"Just a bit - no coming!\"\n\n\"Vickie! No!\"\n\n\"Yes! Don't you want... you said you did. Don't you want to feel a cock in there and - look - how nice it looks.\"\n\nThey all stared at Matthew's rapidly hardening erection and just at that very moment his foreskin peeled back all by itself exposing his shiny knob. It looked all very ready for business, Matthew thought. Were they really going to agree to Vickie's idea? It would be unbelievable sticking his cock in each of them one by one, penetrating their tight moist little vaginas. He had already tried Emma's and was more than happy to try it again at a more leisurely pace. But he mustn't come. It just would not do to get one of them in the family way. Complications would abound. It was a shame he had not had the 'snip.' He and Sarah had been talking about it. Not so nice to think of himself as infertile but so much easier when spraying his semen around!\n\n\"Ooh, I like that! Wicked! Make it do that again.\" It was Morgan.\n\n\"Be my guest.\"\n\nAnd she did! Her hand reached out and pulled his foreskin up again before letting go and they all, Matthew included, watched it slide all by itself down again.\n\n\"Are we agreed then on the rules?\" It was Vickie, keen to establish what was going to happen.\n\nThere were nods all round - not least from Matthew.\n\n\"So if I find one of you I... um.\"\n\n\"Fuck her...\"\n\n\"Yes, um, I fuck her a bit. That is what you want me to do?\"\n\n\"Please - that's the rule. Of course we might run off and you'd have to catch us.\"\n\nThe idea of running after a young naked girl, catching her and then penetrating her was not exactly unpleasing. Ideas did not come much more erotic! His cock was straining upwards, anxious to join in.\n\n\"And when I've caught you all. What then?\"\n\n\"If! Anyone caught though waits by the piles of clothes. If you catch us all then it's our turn.\"\n\n\"OK.\"\n\n\"Right Mr Stamford, close your eyes and spin around so you don't know which way we're going.\"\n\nMatthew did just that. Of course they could really be planning to run back to their clothes and hop over the fence and watch giggling as he pointlessly hunted around his garden with a hard on. Well, even if that was the scenario then it had all been quite something.\n\nQuick squeezes, one, two and three on his penis did not really suggest they were not going to play. A first touch on his cock for some. Something they had been brave enough to do with his eyes closed! Matthew began counting feeling strangely exposed standing naked and erect with his eyes closed in the middle of his lawn. There were giggles fading into the distance.\n\n\"Ninety eight, ninety nine, one hundred.\" Matthew opened his eyes. Not a girl in sight but he was certainly up for the chase. Not a hint of sag had happened to his erection whilst he had counted. He could feel it just standing there as he slowly went through the numbers. The prospect of hunting down young naked girls to fuck had seen to that. What a peculiar sight it must have looked, him standing like a statue in the middle of the lawn - a strange Priapic statue.\n\nNow where might they be? Pleasingly the piles of clothes had not moved but of course the girls might still have got back over the fence. Should he look next door if he could not find them? The prospect of hunting around in his neighbour's garden stark naked and tumescent was not totally a prospect he was comfortable with though he could but think the girls had been there alone.\n\nWere the girls watching him now through the fence having gone back next door? Or separately from concealment in his own garden?\n\nWere they hiding so they could watch him or so tucked away they could not peep and watch his movements? That added the delicious prospect of catching one or more completely unawares. The thought of what he was going to be able to do if he caught one of the girls was massively stimulating. Matthew would certainly be able to feel those young breasts, have his hands everywhere and moreover his rock hard erection in where it counted. All being well he would shortly be treating his cock to a hot bath in three different girls. The important thing would not to add to their wetness from his own body. Difficult - because that was just what penises wanted to do!\n\nMatthew knew the garden like the back of his hand. It might be a couple of acres but he had played hide and seek there before - though not at all like this. Not at all like this. Not with young naked girls he was going to get to fuck.\n\nThe girls had hidden well. It was not at all a matter of spotting them as he walked down the garden, not a simple job of noting where they were and then deciding which to catch first. Instead he found himself really hunting - the naked hunter but with his gun increasingly only half cocked! He hummed the old Fairport Convention number he remembered from younger days,\n\n\"I felt her heart quiver and I knew what I'd done\n\nSays I \"Have you had enough of my old sporting gun?\"\n\nOh, the answer she gave me, her answer was \"Nay\n\nIt's not often young sportsmen like you come this way\n\nAnd if your powder is willing and your bullets play fair\n\nWhy don't you keep firing at the bonny black hare?\"\n\n\"Oh, my powder is wasted and my bullets all gone\n\nMy ramrod is limp and I cannot fire on\n\nBut I'll be back in the morning and if you are still here\n\nWe'll both go together to hunt the bonny black hare\"\n\nPausing, Matthew eased himself back up to full hardness. One of the rules had been that he had to have his 'old sporting gun' at the ready.\n\nTucked cleverly almost out of sight was Emma. Matthew almost did not find her. He could, indeed probably should, have walked on by completely missing her, but it was just a flash of colour - the colour orange - that caught his eye. He did not see her directly; it was just a reflection, the purest fluke that an old pane of glass leaning against the fence had reflected up at him what was before it.\n\nPausing Matthew quietly retraced a couple of steps. What had he seen? He could not actually see Emma but the merest flash of the reflection, his certainty that it was her hair he had seen enabled him to work out where she was - tucked down between the wooden frames of the compost heaps, a narrow short space between the path alongside the fence and where he was. The space was separated from him by closer wooden compost frames. The space would be perhaps four foot high by a yard or so deep. A space he could see but not what it contained. He calculated Emma must be crouched down, perhaps on her knees and being a small girl able to hide. It was a good hiding place. He had so very nearly missed her. Would she be facing in or out? Could he perhaps creep up behind her undetected? That would be particularly enjoyable.\n\nMatthew moved quietly and his care was rewarded. There he found, crouched down, face inwards was Emma - on her knees with her bottom right up in the air. A wonderful rounded bottom, so pale and so deliciously vulnerable. Matthew stared at the nubile sight before him, the cheeks - potentially very smackable - just there, and the cleft a little apart with the most adorable copper curls poking out. Her little brown rosebud visible - that was something Matthew had not really thought about but, as he stood there with his erection once again straining, the idea of taking Emma's 'other virginity' came into his head. What would it be like to lubricate and work at her back passage and eventually enter; be able to work himself gradually further and further until he was right up against those cheeks and have young Emma speared; her eyes perhaps bulging at the unnatural insertion?\n\nBut what was perhaps more feasible was actually to take her vaginally there and then before she noticed his presence, The act of catching her not simply being a matter of a tap on the shoulder and the word 'caught' but, instead, the first thing she would know of being caught was Matthew's erection sliding home. It looked a possible act; Emma's bottom was in the air; the target orifice was visible; Matthew's penis was erect and capable - but he would have to be quick.\n\nA foot either side of her legs, but not touching, a leaning forward holding onto the wood of the adjacent compost bin - unfortunately a slight creak; a holding of his erection to guide it; and then the act of penetration.\n\nA quick push and a scream from Emma. But it was too late. Trapped in the narrow space, head down, wonderful copper hair covering her head, unable to see what was happening, Emma was suddenly acutely aware that a man had entered her, that a strong erection was pushing into her.\n\nMatthew had Emma caught good and proper and unlike when she had fallen from the tree was perfectly prepared to move with the proper motions of sexual intercourse. In, out, in, out - and he could watch it all to boot. See his now shining, wet penis moving in Emma just below her little rosebud. He was taking this young girl doggy fashion, out in the open in his garden and there was nothing she could do about it - and of course she had agreed to it, had agreed to the terms of the game like the others.\n\nIt was delightful, just such an enjoyable feeling to be fucking Emma - her hot and beautifully wet (what had she been thinking of whilst she crouched there?) sex such a pleasure and what a pleasure! She was trying to get away, trying to rise; after all she could not be absolutely sure it was Matthew - she could not see. The wriggling, the 'get off' all so exciting. Suddenly Matthew paused and stood stock still. A near thing. He had almost come. It would have been fantastic to inseminate Emma, to feel his fluid spurting into her virgin vagina, splashing happily against her cervix but he knew he would not, in reality, have done that. He would have pulled out and watched his semen splatter prettily but safely over her bottom and back. Lovely to do that but it would have been such a wasted opportunity. There were, after all, two more young girls to fuck.",
        "Matthew stepped backwards withdrawing leaving a rather breathless Emma to rise.\n\n\"Caught, Emma, I think.\"\n\nShe was looking from his face down to his erection and back again. No doubt thinking of exactly where it had just been.\n\n\"I... I didn't expect... such a surprise... I... could we just. If I sat up here could I, just for a moment put your... err... erection into me?\"\n\nWonderful, just wonderful. Standing there, rather towering over this young girl, this very pretty little girl with her budding but erect breasts, standing there both naked and exposed to her with a rock hard erection and being asked if she could feel it once more inside her.\n\n\"Well, just quickly, I've got to find the others.\"\n\nEmma hopped up on one of the compost heaps, sitting on the old dry carpet, legs apart and displaying all her copper bush and reaching and guiding him into her as Matthew stepped forward. Once more, and for the third time, Matthew entered Emma but this time with Emma holding him and closely watching the swollen acorn head pushing at and entering her body. Clearly a fascination to see it happening. Matthew kept sliding until he was right up against the girl. His hands fondling the young budding breasts so very different from Sarah's full and mature bosom.\n\n\"It all goes in! Where does it all go?\"\n\nMatthew began moving, pulling a little out and then pushing right back.\n\n\"Oh, that's so nice.\"\n\nIt certainly was!\n\nHer fingers playing with her clit. Amazing to see them delving into her copper bush and touching him where he entered her as well.\n\nAll a bit dangerously sexual for a man fully charged up and with two very full balls dangling below him.\n\n\"I'm going to have to stop.\"\n\n\"No, don't, it's so fucking nice.\"\n\n\"Emma I've got to for two reasons. One, I've got to go and hunt for Vickie and Morgan and, secondly... ah, fuck, oh...\"\n\nMatthew had quickly pulled out and, again, did not come, did not actually launch his semen in the air to make a mess of Emma's copper curls. It was a case of almost - but not quite.\n\n\"That was a near one! Because, you see, I'm almost going to come and we are unprotected. Look you just sit here in the sunshine and make yourself come. That'll be nice won't it?\"\n\nEmma nodded and Matthew left her. The beautiful sight, one he was not going to forget in a hurry, of the pretty Titian haired girl sitting naked atop the compost heap playing with herself. A sight he would have been more than happy, would have made him perfectly happy with his afternoon, had he just seen that, If instead of the amazing hide and seek, he had simply been afforded the opportunity of peeking, Peeping Tom like, and watching naked Emma playing with herself. He would have thought his afternoon perfect had he watched the girl through a fence, seen her displayed and her fingers working - and had a private little wank. Of course the actual reality was so much better but just so improbable.\n\nMatthew walked back down his garden in search of the other girls, his erection firm and lubricated. A man ready for action.\n\nHe had expected it, after all his children had always hidden there. Pushing through the soft leaves of the Cypresses into the scented darkness he found Vickie. A short hedge of Cypresses had grown together and he had long known you could push between two and be completely hidden from either direction. Matthew was sure at least one of the girls would have thought it a safe place little knowing Matthew knew all the places. Not in the first or the second Cypress but between the third and fourth Matthew struck not so much gold as pink naked Vickie flesh.\n\n\"Caught,\" he said, one hand around her back and the other not quite accidentally clasping a full breast. Lovely to be able to push his full and still rather wet erection to her tummy and feel his balls caressed by her fur. To be able to do this freely to a young girl almost as a greeting and know, providing she kept to the rules of the game, she would now have to submit to penetration, was marvellous. It seemed though that Vickie was anything but unwilling!\n\n\"Oh, I thought this was a good place. Caught Morgan or Emma yet?\" As she spoke her hand was coming between them, touching his erection. \"Ah, ha, I see or rather feel you have. Who?\"\n\n\"Emma.\"\n\n\"How'dya take her? On her back?\"\n\n\"No, no, I caught her a little unawares - from behind!\"\n\n\"No!\"\n\nMatthew was not missing the opportunity; the opportunity of fondling another young girl and her round breasts in particular. Nice to feel her nipples hard in the palm of his hands. Nice to tease them with his fingers. And very nice to feel Vickie's fingers fondling his erection.\n\nShould he? Well he was about to fuck her so why not? His head dropped and he sucked a nipple into his mouth. Just so lovely to play with, to use his tongue. A hard little pea but much smaller than how Sarah's were now - but she had borne children and done a lot of breast feeding. Matthew had rather forgotten the feel of a young girl's nipples. It had been a long time since Sally... and others before.\n\nIt was meant to be Matthew claiming his prize, forcing himself on the caught girl but it did not quite seem that way with Vickie - she was more than amenable!\n\n\"Oooh I like that Mr Stamford. Are you going to fuck me now? Fuck me standing - like this?\"\n\nHer arms up and around his neck, her lips on his and she pulled herself up off the ground. Matthew was quick enough to brace himself, otherwise there might have been a tumble onto the soft dead leaves beneath the cypress and probably out into the open. Vickie's legs came up either side of his hips and he felt her own wet softness pressed against him.\n\n\"Oh fuck, Mr Stamford, that is nice. I can feel. Oh there it goes... it's going in!\"\n\nMatthew's hands were quickly under her bottom to support her, as he felt himself sliding into Vickie, slipping easily into his second young girl of the day. Marvellous! Hidden inside the cypresses, naked with a girl and actually fucking her, feeling his penis going further and further into her as she let herself down.\n\n\"Wow, wow, wow! Fuck, I'm all full.\"\n\nA pull on her arms and a lift from Matthew's hands under her bottom started the proper motion of intercourse; surrounded by the leaves and in semi darkness they played the game. Wonderful, delicious sexual congress - but Matthew had to be careful. Careful he did not let things go too far. That would be so very easy to do; so very easy to let the semen spurt; easy to imagine it coming as their organs moved together; an increasing rapidity and then release. He was sure a lot would come - perhaps some even being forced out as they moved to drip onto the leaf mould below.\n\nMatthew pulled out.\n\n\"Oh! Do you have to stop?\"\n\n\"Vickie I've got to for two reasons. One, I've got to go and hunt for Morgan and...\" He realised he was saying exactly the same thing to Vickie as he had to Emma! \"We are unprotected and we don't want a little baby coming along do we?\"\n\n\"Suppose not. Wish I'd got a condom - have you any in the house.\"\n\n\"No. We use a different...\"\n\nVickie let herself down from him.\n\nMatthew made an offer. \"Look, how close are you? Could I make you come with my fingers?\"\n\n\"Did you make Emma?\"\n\n\"No, I left her in the sun looking after herself.\"\n\n\"The naughty thing!\"\n\nMatthew was more than happy to let his fingers wander between Vickie's thighs, feel her open them just a little wider to allow easy access and play with her clit with one hand from the front and bunch the fingers of the other and come in from the rear to simulate what he had just been doing for real - in and out, in and out.\n\n\"No, no Vickie, leave it be, let it rest otherwise it might just go off in your hand!\"\n\n\"I'd like that!\"\n\n\"I'm sure you would but I haven't caught Morgan yet.\"\n\nThere was silence for a few minutes as Matthew worked Vickie; so happy to play with the young girl's sex and take the opportunity of gently chewing her nipples - both of them! Lovely to feel Vickie's body shuddering in orgasm.\n\n\"Thank you Mr Stamford, that was super. Perhaps another day...\"\n\nThe prospect of something more than just an absurdly sexual afternoon - it was all spiralling a little out of control. But given what they had already done... If the girls chose to tell the story differently he was in trouble - big trouble. He would have to go with what Vickie wanted - though he could hardly imagine the prospect of further sex with her unwelcome! He would have to think about it.\n\n\"Perhaps: yes if you like. Perhaps better prepared! I'd better go and find Morgan.\"\n\nStill sexually excited and now with an ache in his balls, Matthew stepped out of the scented gloom of the Cypresses into the harsh sunlight of his garden. Wonderful to stride naked and erect across his lawn in search of a third young girl to fuck.\n\nWhilst not obvious at first, Morgan had chosen to hide crouched behind some bushes. Matthew suspected she had not stayed still but had moved before from one place to another as he had gone searching elsewhere in the garden. Approaching from a different direction Matthew had caught sight of naked flesh and black hair and was almost upon her before she realised his presence. Unlike Emma he did not catch her unawares and as soon as she spotted him she was off, racing across the lawn seemingly unwilling to be caught.\n\nMatthew was not at all unfit and was straight after her happy seeing her mane of black hair flowing and the wonderful curves of her body in motion, her ample bottom cheeks rising and falling as her firm legs worked. And of course between her legs glimpses of curly hair and hanging lips, the exciting place Matthew was aiming for - the one thought in his mind to catch the girl and thrust his erection firmly into that place.\n\nFantastic to be chasing a naked girl with the intention of catching and fucking her; quite simply amazing to being permitted to do such a thing; a male fantasy made real! The hunting and sexual instinct brought together. Running naked (and erect) across his own lawn chasing a girl what was more!\n\nMatthew worked up to almost a fever of sexual excitement; it did not really matter if Morgan was playing or really no longer wanted to pay the forfeit of the hide and seek game. There was no way she could outrun the fit and aroused male. Caught, spun around, thrust down onto her back on the grass and with legs forced wide apart, Matthew was on her, his strength holding her down, his knees keeping her legs apart, his hands pushing her arms into the grass.\n\n\"No, don't, I...\"\n\nBut it was too late. Matthew's knob with unerring accuracy had pushed hard at Morgan's soft sex. If her words did not indicate invitation the wetness of her pubes suggested otherwise. She was no less wet than when Matthew had felt her on her descent from the apple tree. Wonderful, wonderful, wonderful to slip into this young girl's hot sex right up to his balls in one movement and without a moment's hesitation fuck her. He could hear the footsteps of the other two girls arriving but he did not look up, just revelling in the sexual act and Morgan's soft body beneath him.\n\nFar too nice to be fucking dark Morgan, far, far too nice. Not at all surprising to find he had within not really a great number of strokes gone too far, that the sap was about to rise whilst he was delightfully embedded in a young and unprotected girl's sex. Erotic to think of his fertile sperm splashing into the young girl, fantastic to enjoy the slippery caress as he came but just so, so unwise.\n\nMatthew was not stupid. He leapt to his feet pulling himself from the girl, his penis bounding up as it was withdrawn.\n\nAnd then it all happened as all three girls watched, the male thing right over Morgan's tummy. Without his hand upon it, out in the open, freed from its recent warm embrace but shining wetly with the natural lubrication of girls, foreskin retracted, and still on the move, the swollen knob began to shoot. A creamy stream of semen coming out to rain down on Morgan's tummy and her generous vee of black curls. And then again, and again, a splat here, a splat there.\n\nMatthew standing, head thrown back as his orgasm came - a wonderful display of male ejaculation. Textbook perfect in its quantity and force. An educational demonstration perhaps!\n\nBelow him the dark haired girl and at the edge of his vision the fair haired and red headed ones, motionless and staring as the penis performed all by itself.\n\nIt was not a short exercise - there must have been a total of ten spurts, no less!\n\nBreathing heavily, the ejaculation over, Matthew looked at the girls. They were all wide eyed at what they had seen. Vickie was the first to speak.\n\n\"Wow, Mr Stamford!\"\n\n\"Cool!\" from Emma.\n\n\"Just look at you, Morgan, all that stuff!\" from Vickie.\n\nAnd Morgan was looking at it and her fingers touching.\n\n\"Sorry I nearly came where I shouldn't.'\n\n\"I wouldn't, couldn't have stopped you! So exciting, so... That's all right Mr Stamford. You certainly caught me. I so liked that!\"\n\nMorgan on her feet. The stuff running down her.\n\n\"You look a sight,\" laughed Emma.\n\nA push from Vickie and Emma was up against Morgan. Super to see her recoil and the sticky semen pulled between them.\n\n\"So do you, Emma,\" said Vickie laughing.\n\nAnd of course the other two girls pressed against Vickie too, so all girls had Matthew's cum on their skin - wet, sticky patches. A nice thought for him and not exactly unpleasant, either, seeing naked girls hug!\n\n\"Look at Mr Stamford now. He's gone all soft.\"\n\nAnd of course he was going that way. The long erection was over but what an experience to have had.\n\n\"Would you girls like another Coke?\"\n\nBack up the lawn they walked. Three now more experienced girls. One, perhaps two no longer virgins!\n\nVery pleasant for Matthew to sit with them around the patio table. A delightful little naturist group - well, apart from the rather unusual evidence of recent sexual play on all four!\n\nNice to just chat and hear all about them. Listen to their stories of school, very much an all girls' school, a boarding school away from the danger of boys, a closeted environment - an environment leaving the girls rather younger in outlook than a mixed school would have done. Though not an environment which prevented academic success. Matthew heard about their plans for the future - gap years, travel and then uni. and beyond. Broadening experiences to come.\n\n\"Shall we play again?\" It was Vickie.\n\n\"Hide and Seek?\" Asked Matthew.\n\n\"Yes,\" the girls chorused.\n\n\"Same rules?\"\n\n\"Oh no, it's our turn.\"\n\n\"To find me?\"\n\n\"Yeah.\"\n\n\"And...\"\n\n\"If we catch you we make you come again. We'd like to see that again, wouldn't we Emma and Morgan?\"\n\n\"Yes, please!\"\n\n\"Well, if I can - but you'll need to find me first!\"\n\nOnce more the party walked out onto the lawn. The prospect of being hunted by naked girls was exciting, the prospect of being caught and made to come even more so but neither thought was having an effect. Matthew's refractory period had not yet elapsed! He hoped it would have, by the time he was caught.\n\nMatthew did not hurry. It was rather pleasant to stand in the hot sunshine looking at three naked girls with their eyes tight shut, slowly rotating as they counted in unison to one hundred. Even without an erection it was pleasant enough to move his foreskin whilst enjoying their nakedness. He knew exactly where he was going to hide and how long it would take him to get there and make himself comfortable. He had, after all, hidden there before.\n\nIt was hot on the shed roof. Easy to get onto and, being mono pitch, the slope was easy enough to lie on and sloping down from the front it meant he was hidden from view from below unless you happened to climb up on the pile of bricks at the rear. Of course being up high there was a little more risk of exposure to other gardens but with trees and hedges he really was quite invisible. He could just lie there taking in the sun and think of the girls hunting around in the garden below.\n\nThe bees buzzed and the sun beat down, overhead but several miles high an aeroplane went slowly over. Far too far up for anyone to look down and see a naked man spread-eagled on his shed roof. It would have been a different matter if it had been a micro light or even a small, low flying plane.\n\nFrom near the shed came voices.\n\n\"Where is he? He's hidden awfully well.\"\n\nLovely to think of the naked girls. What an afternoon! Pleasingly he felt a stirring and his hand went to help. Sweating in the heat, listening to the girls, as he lay spread-eagled on his roof, exposed to the imaginary micro light pilot, Matthew brought himself to tumescence.\n\nThe voices faded away suggested if he did not do something he would not be found - which whilst winning the game did not exactly seem the point of it all! Carefully he climbed down but equally he was careful to maintain his erection. He could hear the girls together in the distance and so, at first, he could move freely. Matthew could imagine himself the next day, without the girls, walking naked in his garden to relive the experience but for now this was real. He was actually walking in his garden with naked girls on the hunt for him!\n\nCloser to the voices Matthew dropped to his knees and moved forward cautiously. Lovely to espy the girls, their pretty bodies. Such young skin, such a delightful variety of breasts, such rounded bottoms and exciting glimpses of their curly haired mons veneris. Just so nice to see them moving in the sunshine. Matthew's hand worked himself as he watched. How often did a man get such an opportunity to masturbate to the sight of three naked young girls?\n\nCould he perhaps get really close to them before saying 'Boo, I win!\" It was worth the try - after all if they chased caught him, well, that was going to be rather fun.\n\nActually he got quite close before he was spotted. Matthew had enjoyed chasing Morgan and catching her but it was equally fun to be chased by the three naked girls across his lawn as his erection bounded up and down. Not a good plan in any race to look behind you but the sight of their breasts in motion as they ran was not to be missed and so of course he tripped and they were on him immediately. A tumble of bodies on the lawn.\n\nAbsolutely fabulous for Matthew to feel three girls on him, three girls spread-eagling him and holding him down. Soft girl flesh holding his legs down, hands on his wrists, panting chests heaving above him. It was almost surprising he did not have a spontaneous ejaculation!\n\nSpontaneous it was not: it had to be worked at and there were plenty of hands ready and willing to do the job.\n\nImagine if Sarah had come home unexpectedly and found him naked, spread-eagled on the lawn and held down by three naked schoolgirls all taking an interest in his penis. Just imagine! Matthew could.\n\nIt would have been more than nice had the girls engaged in oral sex, their mouths and fresh young lips moving ever closer, fascinated by what was before them. Matthew could imagine tongues drawn over lips, wetting them in anticipation and, having taken the plunge, licking and sucking him like an ice lolly until... but perhaps they were not ready for that or had even imagined such a thing. Matthew, for himself, would have been more than happy to return the favour, again he could imagine the three girls lying back, legs open and three delightful sexes perhaps literally quivering as they awaited the touch of his tongue on the so soft flesh and then his head moving between one set of thighs and another, tongue probing: but that was not to be.\n\nThey had him at their mercy.\n\n\"Does anyone... you know. I don't think I do; don't think I'm wet enough now.\"\n\n\"I do.\" It was Morgan. \"I want... my own pace.\" Manoeuvring herself, still holding him down but bringing her sex into line with Mathew's.\"",
        "\"I'll help.\" A hand on his erection. Emma holding him upright and then Morgan pushing down to slide herself over him.\n\nHeld by his arms, held by his legs and now even his fifth limb fully clasped.\n\n\"Wow Morgie, it's all gone in, right up to his...\"\n\nMorgan was riding him. The dark one, bouncing up and down on his pole.\n\nLuckily having come barely an hour before Matthew was not going to come too quickly. Apart from a verbal warning there was nothing he could have done to prevent him releasing his fluid and fully taking Morgan's virginity. If she had not heeded his warning the ejaculation would simply have come, the eye at the end of his knob opening deep within her and the semen pulsing out.\n\nWonderful to see the young girl riding him, lovely to be held by the girls and completely in their power. Were they all going to have him?\n\nMorgan's pace quickened, her face screwed up.\n\n\"Morgie, are you coming?\" Vickie of course.\n\n\"Fuck, yes!\"\n\nMarvellous to see her young thighs working, pulling her sex up and down his embedded shaft and quivering with the excitement of orgasm.\n\nThe young girl slowed and stopped. Her dark, dark curls mingling with his own, his penis fully embedded; Matthew could imagine the swollen knob hidden up inside her behind her tummy button. Lovely to see the girl flushed and panting.\n\n\"Emma, Vickie?\" Morgan was offering him. They shook their heads.\n\nSlowly Morgan rose, Matthew's penis making reappearance inch by inch until unsupported it swung forward to lie along his tummy. It was very wet indeed!\n\nThree hands went to his cock, three enthusiastic hands began working him, three young hands making his slippery foreskin move, alternately revealing and hiding his knob.\n\n\"Stop girls or you'll make me come.\"\n\n\"You must come, Mr Stamford. We require it.\"\n\nHis penis was brought to the vertical, standing up like a space rocket.\n\nThere was nothing he could do, he was under their control and they made him come.\n\n\"Ahhh!\" And straight up in the air like a fountain came the semen. One spurt after another.\n\n\"Cool. Look at it come!\"\n\nLovely to feel his second orgasm of the afternoon, lovely to see the semen falling on their hands, getting between their fingers as they continued their joint work extracting more from him.\n\nThey did not stop until Matthew was completely limp. His penis and their fingers really covered. And then hands and fingers wiped on the grass rather than licked and sucked with relish. Matthew smiled to himself. They had not fully got the idea - or his idea of eroticism anyway!\n\n\"Time to go,\" said Vickie, \"Mum'll be home soon.\"\n\nOnce more naked they walked back across the lawn to the fence.\n\nLovely lifting them up one by one onto the apple tree. A hand here, a hand there, a kiss planted on a buttock or thigh. The girls going along the branch and dropping back next door.\n\n\"Oh, you'll want these.\" Matthew threw their clothes over.\n\nWith a wide grin. Matthew walked naked back to the house, his well used penis swinging comfortably. Never could he have conceived when he had set out from the house taking his first few steps naked into his garden what the result would be. Never! It had all be just so unikely, so utterly improbable. All he had been trying to do was relive his holiday: what had happened was something else entirely. Matthew sat at the table looking at the empty Coke glasses and thinking back. Might there be another time?\n\n\"Had a nice day?\"\n\nSarah was home. Not to finding a naked husband with the scent of young girlhood suspiciously about him and a dripping penis. Matthew was freshly showered and in a polo shirt and chinos.\n\n\"Quiet, pleasant, relaxing really. I just pottered about in the garden, a bit of planting here and there.\" There was no need to be specific about quite what he had been planting and in what. No, not at all. \"Drink?\"\n\n\"Gin and tonic. I'll just go and slip into something comfortable.\"\n\nA momentary panic. Surely she did not mean... \"Oh yes! Sounds promising.\" He was not sure he could. Not after coming twice that afternoon and having been almost permanently in a state of excitement with the girls.\n\n\"I didn't mean it like that! Perhaps at the weekend: not now. Gin and tonic with plenty of ice.\"\n\nNot normally a relief to hear that from Sarah, that she was not interested: but today was different. Had been very different!\n\nHe was about to go to the drinks cabinet.\n\n\"Sorry, Matthew, cancel that. I'd forgotten. We've got to go out to the Hatchard's.\"\n\n\"Who?\"\n\n\"Louise, she's one of my colleagues, a teacher. It's her daughter's eighteenth birthday party and she invited me along at the school today. Just for a couple of drinks. And said to bring you.\"\n\nMatthew was not averse to a couple of drinks. A quick change and Sarah and he were on their way.\n\nMr. and Mrs. Hatchard were nice enough and he was happy enough to chat to Phil Hatchard whilst Sarah chatted to Louise Hatchard and a group of the other teachers - no doubt about teaching as teachers always do. Matthew was happy to avoid that.\n\n\"Do you know my daughter, Emma?\"\n\nA titian haired young girl came into the room.\n\nMatthew kept his cool. Did he know her? Yes he did, carnally, he had almost inseminated her that very afternoon. And Emma's pale skin was going the most delightful shade of red.\n\n\"Yes, yes we have met. How are you, Emma?\"\n\nIt was a shock and a half, made the more so when, in slinky party dresses, Vickie and Morgan appeared behind Emma. Vickie with the most enormous grin."
    ],
    "authorname": "Drmaxc",
    "tags": [
        "outdoors",
        "masturbation",
        "red head",
        "hide and seek"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/hide-and-seek-pt-01-1"
}