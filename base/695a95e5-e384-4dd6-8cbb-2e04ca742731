{
    "title": "Truth in Advertising",
    "pages": [
        "This is a self-contained story. It's a slow-ish but I hope sexy progression and, as seems to be my wont, some of the final action is left for the reader to imagine. All participants are over 18. Feedback and comments welcome.\n\n*****\n\nI could, if I wanted to, blame it all on Trevor. He came to stay with me a few months after the divorce, determined to cheer me up. I wasn't sure I wanted cheering up. I quite enjoyed wallowing in my misery, thank you very much, and the idea of trailing behind Trevor as we went from bar to bar didn't hold massive appeal.\n\nBut there was no stopping Trevor. That was what had made us such good friends over the years, I think. He was all talk and action and energy. And I was the quiet, thoughtful one who actually followed through. We complemented each other well. We had similar senses of humour. Luckily, we had different tastes in women. So although we'd known each other since college days, had roomed together and even shared a house together for a while, we'd never fallen out over a girl. He favoured small, petite, almost skinny girls who would shyly adore him. I preferred a healthier, fuller figure and a girl who could give as good as she got.\n\nSo out we went. I refused to make an effort to get dressed up, however. Trevor seemed to think we would easily have a harem of hot ladies in thrall to us after the second or third bar, but I was more realistic. We were middle-aged men out for a beer, up against a whole city full of younger, more attractive men. We could talk, I could get a load of stuff of my chest (mainly about how much I now hated my ex-wife), Trevor could make consoling noises and then tell me about how amazing his new girlfriend was, we could drink too much, we'd go home.\n\nTrevor had other plans. We had a beer at the first bar, but Trevor pronounced it \"too quiet\". I did speculate that a noisier bar would make it harder for him to listen to my self-absorbed whining, but that seemed a little harsh. He'd come all this way to see me, after all. \n\nA second bar seemed perfectly fine to me, but Trevor was disappointed at the relative scarcity of women. \"I think this might be a gay bar!\" he bellowed at me over the sound of the juke box.\n\nA number of men standing nearby looked at us a little aggressively.\n\n\"I don't think so,\" I said. \"And maybe... keep your voice down a bit?\"\n\nI didn't really want to end up in hospital if I could help it.\n\n\"Come on,\" he said. \"Let's find somewhere else.\"\n\nSo we headed out to see what else the city had in store for us. I was already wishing I hadn't agreed to this. Two beers was about my limit these days, and I'd already had those.\n\n\"How about going for a meal?\" I suggested, hopefully.\n\nTrevor waved a disdainful hand. \n\n\"Later,\" he said. \"Maybe. Ah - that looks like the place we want!\"\n\nHe pointed. I followed his gaze.\n\n\"No way,\" I said. \"Absolutely no way.\"\n\nOf course, I didn't have a hope.\n\n**\n\nFULLY NUDE DANCING it said on the sign outside.\n\nOnce inside, I was relieved - I think - to see this was totally untrue.\n\nI shuffled into the smoky arena in Trevor's wake. In the centre of a room was a narrow walkway surrounded by armchairs. About half of these chairs were occupied by a selection of men of all ages, from one who looked barely old to be there to one who looked like he could be carried out in a box at any moment. There was also, I was intrigued to see, one woman sitting there. She was probably mid-thirties, short bobbed hair, quite attractive in a slightly masculine way.\n\n\"Well, why not?\" I thought. \"Live and let live, and all that.\"\n\nThe woman, like her male companions, were watching a blonde girl in a skimpy outfit march up and down the walkway. Occasionally she would bend over and gyrate her hips in what was presumably meant to be a suggestive manner. She was moderately pretty, probably mid-twenties, and she filled her underwear more than adequately. She was, however, definitely a long way from being FULLY NUDE. But hey, who expects truth in advertising anyway?\n\nAs we watched one of the men threw a handful of tokens onto the walkway in front of his chair. She scooped, turned to face him, then stepped off the stage and sat on his lap. She began to twist and writhe on his crotch, and as she did so she reached forward and pulled his head forward so it was snuggled between her breasts.\n\nHe seemed to enjoy this very much. I have to say, hand on heart, it did nothing for me.\n\nTrevor was delighted.\n\n\"THIS IS MORE LIKE IT,\" he bellowed.\n\nWe headed over to a couple of vacant chairs. A waitress materialised, and Trevor ordered a couple of bottles of beer. If it had been me, I would have wanted to know the price first. The only thing I knew about places like this was that you could easily end up considerably poorer with nothing to show for it. But Trevor, of course, didn't care about petty details like that. He lived in the moment, and tomorrow could take care of itself. Good for him. But very much not my style.\n\nI watched with a sense of detachment as the girl on the runway was replaced by another. A black girl this time, even better endowed than her predecessor, still not FULLY NUDE. Trevor shook his head.\n\n\"NOT REALLY MY TYPE,\" he boomed. This seemed very impolite. I hoped she couldn't hear him. \n\n\"WHAT ABOUT YOU?\" he asked me. \"YOU LIKE THE LOOK OF HER?\"\n\nI shrugged. \"Very nice,\" I said. More to redress the balance than anything. Like I said, I was often yin to his yang.\n\nThe waitress reappeared with our almost certainly criminally over-priced beers. I took mine while Trevor handed her a large sheaf of bank notes. She also handed him a block of plastic tokens.\n\nOh no, I thought. He's not really going to get a lap dance, is he?\n\nOf course he wasn't. He gestured to the girl on the stage, and threw some tokens down. Right in front of my chair.\n\nKill me now, I thought, as she bore down on me. Just fucking kill me now.\n\nBefore I knew it she had stepped off the stage and was lowering herself onto my lap. She had a faint sweaty smell mixed with cheap perfume. She grinded herself against my crotch. I am all in favour of young women grinding themselves against my crotch, I don't think it happens nearly often enough, but I'm slightly old-fashioned and I prefer it not to happen with a dozen other grinning men watching me. And one probable lesbian.\n\nShe turned and pushed my face down into her ample cleavage. This was supposed to be the highlight of the dance, delivering me into paroxysms of delight. I was mainly wondering what kind of expression would be most polite when she finally released me. Stunned joy, I supposed. Like I couldn't believe my luck.\n\nI did my best, but I don't think she bought it. She gave me a slightly contemptuous look as she returned to the stage. But perhaps she gave that look to all men who came in there. I wouldn't have blamed her.\n\nA hostess had appeared on the other side of Trevor. She was petite and blonde and very much his type, and he was engrossed in conversation with her. Something intellectual, I hoped. Ancient Greek Philosophy. The Weimar Republic. The Impressionist Painters. Stuff like that. \n\nTrevor stood up. Time to go already? I couldn't say I was sorry. Then I noticed he was holding the girl's hand. Was she coming with us? Surely not even Trevor's charm worked that fast.\n\n\"I'M GOING DOWNSTAIRS WITH EMMA,\" he said.\n\n\"Downstairs?\" I queried.\n\n\"THAT'S WHERE THE ACTION HAPPENS BUDDY.\"\n\nI nodded blankly and watched as they made their way across the room. A tall, thickly built man with the obligatory shaved head unhooked a rope and they passed into a stairwell and out of sight.\n\nI wondered how long \"the action\" took. Hopefully not long. I was uncomfortable and a little bored and all these women only served to remind me that I no longer had one of my own.\n\nOn the far side of the room there was a cluster of girls talking. Occasionally one would peel off and come and chat to a customer, doubtless to try and get him to buy her a drink or take her downstairs for some \"action.\" There was a mixture of types, almost certainly by design. Tall, short, blonde, dark, busty, skinny. Some with tattoos, some without - at least none visible from their tiny outfits.\n\nI saw her about a second before she saw me. She was slightly off to one side, sipping a drink and scanning the room. My eye was drawn to her because she had the best figure - in my opinion - of all the girls there. She was tall, about five eight, and slender but still with a good bust. I confess, I was checking out her figure before I worked my way up to her face and I realised I knew who she was.\n\nThen her eyes met mine and I saw her reaction. She was surprised, of course, but then she looked - intrigued? Disappointed? It was hard to tell. Then she gave me a soft smile and started to make her way around the room towards me.\n\nWell, this was going to be an awkward conversation.\n\nEvie had been our babysitter for about five years. She'd started when she was twelve and my son Jack was six. By the time he was eleven my wife and I hardly ever went out together any more, so our arrangement with Evie just kind of fizzled out. I'd always liked her though. She was a smart kid, quietly confident, and you could see she was going to be a good-looking girl when she was older. \n\nI hadn't seen her for about a year. I'd been wrong about her being good-looking though, she was way more than that, she was really breathtakingly lovely.\n\n\"Mr Cranshaw!\"\n\n\"Hi Evie... er, how are you?\"\n\n\"Jess,\" she said, smiling. \"My name's Jess here.\"\n\n\"Right,\" I said. \"Of course. My name here is... Maximillian.\"\n\nShe giggled. \"Jess is my stage name,\" she said. \"Nobody uses their real name here.\"\n\n\"Maximillian is my, er, audience name,\" I said. \"I'm here undercover.\"\n\n\"I'm sure you are,\" she said. \"Let me guess. You're... doing a snap inspection that we're following all the health and safety regulations.\"\n\n\"You've got me,\" I said. \"Please don't tip the management off. I've already seen some sprinklers that I'm very concerned about.\"\n\nShe mimicked running a zipper along her lips. They were hypnotically lovely lips, too, I noticed.\n\n\"You here on your own?\" she asked, settling into the chair beside me.\n\n\"No. My friend is, er, downstairs with a young lady. He's... doing a pest control inspection.\"\n\n\"Of course he is,\" she said. \"And you're all alone up here.\"\n\nI shrugged. \"It's interesting,\" I lied. \"I've, um, never been in a place like this before.\" God, that sounded feeble. How many times had she heard that? \n\n\"No,\" she said. \"I can believe that.\"\n\nI wasn't quite sure if that was a compliment or not, so I took a sip of beer and hoped I looked suave.\n\n\"I was sorry to hear about you and Mrs Cranshaw,\" she said. \"I hope Jack's OK.\"\n\n\"Yeah,\" I said. \"Thanks. He seems to be coping. She's got him some kind of therapist, I think, but I'm not sure he needs one.\"\n\nShe nodded. \"My parents broke up when I was ten. Honestly - I couldn't have been happier about it.\"\n\n\"Really?\"\n\n\"Really. My dad was a total dick. Best day of my life when he finally left.\"\n\nInteresting. I'd never heard her use anything approaching bad language before, and I confess it gave me a slight thrill. I was also trying really hard not to gawp at her too obviously. She wore high heels and short red skirt that barely covered the top of her long legs. Then she had a cut off halter top, generously cut at the front to reveal the upper slopes of what looked like a truly lovely pair of breasts. Her hair was tied in a pony tail, just like I remembered her having when she used to come over and watch Jack. That gave her a slight sense of childish vulnerability that I admit I also liked very much.\n\nThe conversation paused slightly. I didn't feel I could enquire too closely about what manner of a dick her father had been. Nor did I feel too much like telling her the sad saga of me and Mrs Cranshaw. \n\n\"So,\" I said, \"been working here long?\" So, so lame. \n\n\"A few weeks. It's good money,\" she said. \"I'm saving up, and I can make more money here than pretty much anywhere else. I'm only going to do it for a few months.\"\n\nI wondered to myself how many other girls there that night had said the same thing. Just a few months could turn into a few years so easily.\n\nEvie (or Jess) looked around the room. The man with the bald head seemed to be glaring at her and giving her some kind of signal. She sighed.\n\n\"It's really nice to see you, Mr Cran... Maximillian... but I'm only really supposed to chat with customers for two minutes before I move on.\"\n\n\"Oh,\" I said. \"Sure. That's a shame. It's really nice to see you.\"\n\n\"You too,\" she said. She seemed to be thinking. \"I mean, we could keep on talking, but I'll need to take you downstairs, and that's kind of expensive.\"\n\nI nodded slowly. I realised I really wanted to keep talking to her. Of course, she was way too young for me, but after this I'd probably never see her again. Certainly there was no way I could ever show my face in this club again now that I knew she was here.\n\n\"That's OK,\" I said. \"Do you get to keep the money?\"\n\n\"Most of it,\" she said. \"The club gets twenty percent, but I keep the rest.\"\n\nI shrugged cheerfully. \"That's ok then. You said you're saving up. I'd like to help a bit with that. It's not really that much different from when I used to give you your babysitting money, is it?\"\n\nShe looked at me, a faint smile of amusement flickering across her face. \"I think you'll find it's a little different,\" she said.\n\n**\n\nShe stood up and led the way across the room towards the stairwell where Trevor had disappeared only a few minutes earlier. As she walked I couldn't help admiring her the way her backside elegantly and deliciously filled out the skirt. You are a dirty old man, I told myself severely.\n\nThe bald-headed man unhooked the rope and glared at me as I went past. Perhaps he did that to everybody. It seemed a bit harsh if he didn't.\n\nDownstairs was a murky maze of small rooms, all set off a dog-legged corridor. Most of them seemed empty, though I got the occasional glimpse of a naked girl grinding away on somebody's lap. It was too dark to see anything very clearly. To add to the sense of disorientation, there was a relentless thudding soundtrack pumped mercilessly along its length.\n\n\"We'll go to the end booth,\" said Evie/Jess in my ear. \"It's a bit more private.\"\n\nShe led me to the end of the corridor and then turned and pushed her way through a sparsely separated beaded curtain. You could still easily see out, but I suppose it gave a slight impression of intimacy. There was a sofa against one wall. A sign above it said \"STRICTLY NO TOUCHING.\"\n\nTrying hard not to think about all the various previous occupants of the sofa, and what stains they may have left behind, I settled myself down at the far end of one sofa and gestured to Evie she should sit at the other. I made sure there was plenty of space for her to sit down and still have some distance between us. I really didn't want to give her the impression I was drooling over her - though actually, inside I couldn't really claim that I wasn't.\n\nShe looked at me, a little awkward and hesitant.\n\n\"Um,\" she said, still having to speak loudly so I could hear. \"I'm afraid you need to pay me now.\"\n\nOf course. Thank goodness Trevor had insisted I take out plenty of cash at the start of the evening. I had several hundred on me, though I hadn't really thought I'd needed that much. Perhaps Trevor had planned this more carefully than I thought.\n\n\"So... how much are you?\" I asked. God, that sounded awful.\n\n\"What?\"\n\n\"I SAID, HOW MUCH ARE YOU?\" No, no better the second time. Worse, if anything, for having to shout it into her ear.\n\nShe laughed. \"How long do you want me for?\"\n\nJesus. That was a question.\n\n\"Twenty minutes?\" I had no idea what was usual. That seemed quite a sensible, moderate period for a catch-up chat.\n\n\"Twenty minutes? Are you sure? I mean... most guys pay for five minutes or ten at most.\"\n\nShe leaned forward to talk directly into my ear again. \"Twenty minutes is actually quite a lot of money! It's a couple of hundred.\"\n\nAh. Also awkward. I didn't want to hurt her feelings by implying she wasn't worth it, but two hundred to find out how life was treating my former babysitter, lovely though she was, seemed a bit steep.\n\nSomebody, somewhere, had complained about the noise, because at this point the music mercifully became a little softer.\n\nShe sensed my hesitation. \"Why don't you give me fifty for five minutes, and then if you want more, you can pay me another fifty, OK?\"\n\n\"Sure,\" I said, grateful for her taking the lead. I took out my wallet and handed her the money. She popped it into the small purse she was carrying and put it down on the sofa beside me. Then she reached up to start undoing her top.\n\n\"Whoah!\" I said hastily. \"Um... there's no need to do that.\"\n\nShe was genuinely surprised.\n\n\"You've paid me for a lap dance, Mr Cranshaw. Are you sure?\"\n\nNinety-five percent of me was screaming that of course I wasn't sure. Actually, ninety-five percent of me was totally sure that seeing her with her top off was easily the best thing that would happen to me this year. \n\nFive percent of me, however, was having none of it.\n\n\"Call me Ben,\" I said. \"I feel about a hundred years old as it is. And please Evie - Jess - keep your clothes on.\"\n\nShe looked at me for a moment in a way that I wasn't sure I really understood. Then she reached out and softly stroked my cheek.\n\n\"I always liked you,\" she said. \"You were always really nice.\"\n\nPerhaps she said things like that to all the guys. But I treasured it anyway.\n\nThere was a sound from the corridor outside. Somebody else was coming down this way, I assumed another girl with another willing male participant. But no. It was my friend the bald-headed man.\n\nHe stopped outside the doorway and glared at me through the beaded curtain. Then, for good measure, he glared at Evie.\n\n\"Everything OK?\" he asked. I sensed he was hoping the answer would be no.\n\n\"Everything's cool, Gary,\" said Evie. \"Thanks.\"\n\nGary seemed unconvinced. \"He's paid you, has he?\"\n\n\"Fifty,\" she said. \"It's all fine.\"\n\nGary nodded. \"You'd better get started then,\" he said. He gave me a final glare and then stomped off, intending no doubt to spread more good cheer among the other customers.\n\nEvie sighed. \"It's probably best I do this properly,\" she said. \"I don't want to get either of us into trouble. I know Gary, he'll come back and check.\"\n\nI didn't quite get what she meant until with a single movement she reached up and tugged her top off. Then she unhooked her bra, cast it aside, and started sliding her skirt downwards.\n\nI gasped audibly. She was a vision. Her breasts were heavy, firm and round, as only young breasts can be. They were topped with perfect islands of browny pink, and I could see each of her nipples was slightly erect. As I watched she stepped out of her skirt and then peeled her thong downwards.\n\nSo, I thought, this is where the FULLY NUDE bit comes into play. I mentally apologised to the management for ever doubting them.\n\nShe stood in front of me, seemingly a little shy. She did a mock flourish, kicking up a heel and striking an exaggerated pose. \"Ta da.\"\n\n\"My god,\" I said. \"You're really, beautiful Evie. I mean... Jess.\"\n\n\"Thank you,\" she said. \"From both of us.\"\n\n\"You must hear it a lot,\" I said. \"But I mean... wow!\"\n\nShe laughed softly. \"Well, I guess I hear it fairly often, but it's especially nice coming from you.\"\n\n\"Look,\" I said hurriedly. \"This feels... I don't want you to feel uncomfortable. Why don't you keep the money... in fact you should take another fifty... and you get dressed, and I'll go.\"\n\nI stood up and started reaching for my wallet. Evie reached for my hand and held it firmly.",
        "\"You've paid me for a dance,\" she said. \"I'm not uncomfortable. Please let me do it.\"\n\nI started to protest but she reached up and put a finger on my lips. I wanted to take it into my mouth, but she then slowly ran it down my chin, onto my chest and down towards my groin, only stopping just above my belt.\n\n\"Hush,\" she said. \"And sit down.\"\n\nI sat.\n\nI suddenly had a vivid memory of one of the last times she'd babysat Jack. She'd sat outside studying while he played in the garden. It had been a hot day and she'd worn a bikini top with some denim shorts. I'd really struggled to keep my eyes on her face every time I spoke to her, but I think just about managed it.\n\nIt was the same now. I really wanted to drink her all in, particularly now she was completely naked, but it still felt wrong to do so.\n\n\"You can look,\" she said patiently. \"You've paid, you can look.\"\n\nI still couldn't quite bring myself to do it.\n\n\"I'll close my eyes,\" she said. \"I won't see you looking. OK?\"\n\nThat sounds crazy, I know, but actually it helped. As soon as she closed her eyes I relaxed and let my eyes roam over her body. She was perfect. Her legs were long and smooth and sleek. There was still just the faintest trace of puppy fat but she was blooming into glorious womanhood. I gazed below her waist. She was fully shaved, I saw, and I could just see the upper part of her tiny slit peeking out.\n\nMy eyes moved upwards, glorying again in her breasts - what must it feel like to suckle them, I wonder - at least one lucky boy must have done that, and I wanted to track him down and beat him to a pulp. Unless it was Gary, in which case I probably wouldn't.\n\nMy eyes finished their journey and somehow she sensed it and began turning. Side on she was also spectacular. And then I was gazing at her beautiful, perfect peach of a bottom - it felt wrong to call it an ass - and again I wondered about who might have been fortunate enough to bury their face in that.\n\nShe bent over and spread her legs. My god! This was really... this was really far more up close and intimate than anything I had expected. I could clearly see both of her little holes, both so alluring and lovely and tantalising. Her pussy lips were slightly spread, and I saw a single wisp of fine hair.\n\nMissed a bit, I thought. Let me get that for you.\n\nShe straightened up and turned around again so she was facing me. I took one more look at her pussy and breasts and then gazed up into her face. Her eyes were open and she was looking straight at me.\n\n\"There,\" she said. \"Now you've looked, you can keep looking, can't you?\"\n\nI nodded slowly. I knew I probably looked like an idiot, but I doubted this was her first time in the presence of a gaping, inarticulate moron.\n\n\"Lean back,\" she said. I did.\n\nShe straddled me, and I almost moaned aloud. Her breasts were inches from my face, and she started grinding her groin against mine. Jesus H Christ.\n\nI must have looked startled, because she leaned forward (her breasts now snugly nestled against my chest) and spoke into my ear.\n\n\"Everything all right?\"\n\nI nodded, and in turn spoke back into her ear.\n\n\"It's just I thought... I thought there was no touching.\"\n\nShe smiled. There was surely no question now that this was all new territory to me.\n\n\"I can touch you,\" she said. \"You just can't touch me.\"\n\nLogically, of course, this makes no sense. But I understood now. She could grind herself against me, push her luscious tits into my face, do pretty much whatever she pleased, and I had to lie there with my arms pinned to my sides.\n\nI must have looked rather stricken because she suddenly leaned forward and rubbed her forehead against mine. \"This is supposed to be fun, Ben!\"\n\nI nodded. She smirked at me again, then stood up, turned around and lowered herself back onto my lap. This time it was her backside that was blatantly in front of me, grinding away against my cock.\n\nI was getting very hard now, though I was desperately trying not to. There was no way she couldn't feel my arousal against her. She must have felt hard cocks through men's clothes dozens of times, I thought. But somehow that was no consolation. This was my old babysitter - Christ, I sometimes helped her with her homework - and I was mortified at the thought of her knowing I was erect because of her.\n\nMy cock, however, was cheerfully indifferent these niceties, and felt like it was trying to tunnel for freedom.\n\nShe didn't seem repelled either. If anything, it was like her ass cheeks were playing a little game with my cock, trapping it, then pushing it this way and that, then letting it go for a moment before pouncing again.\n\nShe raised herself up and turned around to face me. She leaned forward and slowly dragged her breasts upwards over my chest and then over my face. For a brief, tantalising moment they were within a hairsbreadth of my mouth, and to this day I don't know how I resisted the urge to flick out my tongue and lap at her lovely nipples. Then they were gone, brushing through my hair, then strangely, resting on top of my head. I think that was a first for me.\n\nShe stepped back and looked at me.\n\n\"This is my big finale,\" she said. \"Brace yourself.\"\n\nChrist, what could possibly be left for her to do?\n\nSuddenly she stepped up onto the sofa, a leg either side of me. My eyes were directly level with her pussy lips, and they were coming straight at me. She brought her crotch within a centimetre of my nose, and then began to slowly rock from side to side. \n\nI could see everything. A tiny faint mole just to one side of her labia. A trace of stubble. I could smell her scent. If I brought up my hands behind her and grabbed her buttocks and pushed her just a fraction forward I could bury my face in her cunt and lick her until she moaned and came...\n\nExcept she wouldn't of course. She would push me away and shout for Gary and I would be dragged out and probably beaten to a pulp.\n\nIt would almost be worth it though.\n\nShe slowly slipped down past me and sat again in my crotch. Somehow - luck? Skill? - my cock seemed to be nestled perfectly against her pussy lips, just the thin fabric of my trousers between us. She wriggled softly a few more times, then harder and harder and harder. I could feel her breath coming heavier as she ground herself into me. It was almost like she was enjoying it herself...\n\n\"Five minutes is up,\" said Gary, a murky shadow from behind the beads.\n\n\"Just finishing,\" said Evie, a little breathlessly. But then, she had been doing all the work.\n\nGary grunted and disappeared again. No way he was going on my Christmas card list.\n\nEvie stood up and away from me. My cock begged me to get her back, that was easily the nicest thing that had happened to it in some time, and I have to say I was tempted too. I still had enough money left for another two dances at least. Maybe three. What else was I going to spend my money on? Food? Shelter? What a waste.\n\n\"Do you need a tissue, or anything?\" asked Evie, matter-of-factly, and suddenly the rather sordid, sad nature of what we'd been doing struck me again.\n\n\"No,\" I said, \"I'm fine.\"\n\nShe nodded. \"I hope that was OK. I'm still quite new, really. If you like, I hear Bella is amazing. I could go and see if she's free.\"\n\nI shook my head vigorously. \"Evie... Jess...\" I said. \"That was easily the best five minutes I've had all year. Possibly for several years. But I should go now. Thank you. You're a beautiful, lovely girl and I'm really glad to have seen you again.\"\n\nI paused. \"And indeed, to have seen so much of you.\"\n\nShe laughed. I liked being able to make her laugh. I liked that a lot.\n\nShe leaned forward and kissed me on the cheek.\n\n\"You were always lovely,\" she said. \"I'm glad to see you again too.\"\n\nI would have preferred it if she'd said she always thought I was the sexiest man alive, but sometimes we have to take what we can get.\n\n**\n\nI think after that I had to go and wait for Trevor while he finished off his third private dance with Emma. To be honest, I don't remember much else of that night after that point. Somehow I got home, Trevor and I played some squash the next day (he won), then it was time for him to go back home.\n\nWe embraced warmly at the station.\n\n\"Get yourself a girl,\" he said. \"Don't be fussy. Any girl will do you a lot of good.\"\n\n\"Maybe,\" I said.\n\nHe waved goodbye and strode off. I watched him go, then I returned to my car and started to drive home. On an impulse I took a detour, and drove past the club we'd been to a few nights previously. FULLY NUDE DANCING, the sign still said.\n\nNo kidding, I thought, remembering Evie's bare pussy just a tantalising inch from my mouth. No fucking kidding.\n\n**\n\nI suppose I could have found a girl. As I understand it, the Internet is full of horny people looking to hook up, and although some of them are understandably picky and wouldn't give me a second look, there were probably a reasonable number of women who would have found me at least acceptable for an afternoon or two.\n\nI, however, couldn't get Evie out of my mind.\n\nI really wanted to see her again. To be precise, I really wanted to see her naked again. To be honest, the dancing I could take or leave, though on balance I would happily take. But to be in a room alone with her, being able to glory in her body, that was something I wanted very badly indeed.\n\nBut I knew if I went back it would be somehow different this time. To go there once, as a one-off, that was kind of borderline ok. To make a habit of it, to go back a second or a third time and ask her to join me in a private room - that would put me firmly in the category of a dirty old man. Well, dirty middle-aged man. She'd said she thought I was lovely. I doubted that would continue if I started stalking her at her club.\n\nNot knowing what to do, I did nothing. I just tormented myself with fantasies with her, though I loathed myself at the same time. She was twenty years younger than me, she probably had a perfect boyfriend the same age as her, and I had no right to creep grubbily around the corners of her life.\n\nIt was my ex-wife who came to my rescue.\n\n\"I have to go this conference,\" she said briskly on the phone. \"It's three days in Cannes and all the top management will be there.\"\n\nWould good old Brad, be there, I wondered? Good old Brad who'd been fucking my wife for the last year of our marriage?\n\n\"OK,\" I said.\n\n\"So you can have Jack, can't you?\" she said. \n\n\"Of course,\" I said. \"I'd love to have him. But how's he going to get here?\"\n\n\"I'm putting him on the train,\" she said. \"He'll get in midday, he'll be absolutely fine on the train. And I know you'll be at the office, but I've got that nice girl who used to help us out to go and pick him up. Evie - the quite pretty one. Not that awful other one.\"\n\nQuite pretty? I thought. God, you have no idea.\n\n\"In fact, Evie said she'd really appreciate some extra money, so she can help you out as much you need while he's with you. Though as it's the holidays he'll probably be out seeing his old friends most of the time anyway. I'll pay for her, OK?\"\n\n\"Sure,\" I said faintly. \"And um, she didn't say anything else?\"\n\n\"Like what?\" asked my wife irritably. \n\n\"Nothing,\" I said. \"That all sounds fine.\"\n\nWe squabbled for a bit over a few other things - that kind of stuff is practically in the divorce agreement - then we hung up.\n\nWell now, I thought. This is going to be interesting.\n\n**\n\nSo about a week later I got home and there was my son and, of course, it was great to see him. And there was Evie as well, demurely dressed in a white shirt and jeans, smiling politely as Jack and I said our hellos and caught up. Later he and I went for a walk and I learned quite a lot about his new school and his new friends and more than he meant to tell me about how much Good Old Brad was still in the picture. \n\nThen he said he wanted to go over and see some of his old friends who lived close by and I said that was fine. He scarpered off and I walked slowly back home, reflecting on how my life had turned out.\n\nEvie was tidying up and cleaning. I'd thought I'd done an OK job living on my own, it was all quite neat and tidy but Evie had the vacuum out along with a number of cleaning products that I'd forgotten we had.\n\n\"You don't need to do that,\" I said. \"But thank you.\"\n\nShe flashed me a quick smile. \"I like doing it.\"\n\n\"Then I certainly won't stop you,\" I said.\n\nI wasn't quite sure how to broach the subject of the last time we'd met, and she didn't seem in a hurry to bring it up either.\n\n\"Can I get you a drink?\" I asked. \"I've got beer, or Coke, or a bottle of wine?\"\n\nShe went for the Coke and I had the beer. I wasn't sure if I should offer to help or quite what I should do. Normally I would spread out on the sofa and have some sports on while I browsed emails on my computer, but it didn't seem right to do it while Evie was busy cleaning and tidying.\n\n\"Should I do something?\" I asked.\n\nShe shook her head. \"No - you sit down over there and keep out of my way.\"\n\nI mock saluted.\n\n\"Whatever you say,\" I said.\n\n\"Thank you... Maximillian,\" she said, with a quick mischievous glimpse at me.\n\nI probably blushed. I know I did.\n\n\"About that,\" I said. \"I'm sorry that...\"\n\n\"Oh hush,\" she said. \"Don't be silly. Go and sit over there and watch TV or whatever it is you do. Scoot.\"\n\n\"Bossy,\" I said. \"You do remember that technically I'm your employer?\"\n\n\"Absolutely,\" she said. \"And technically I've been paid to perform some duties, and I'm performing them. I always do what I'm paid to do. You remember that, don't you?\"\n\nI retreated to the sofa to digest this. I probably stared at the television but I couldn't tell you what I watched.\n\nJack came back a few hours later, cheerful and muddy from some complicated game that he and his old friends had devised. Kids are amazingly adaptable. He had a bath then came down to say goodnight. I admit it, I was jealous when I saw Evie give him a kiss and a hug goodnight.\n\nThen he was off to bed, already excited at the idea of having another full day with his friends the following day. I could tell I wasn't actually going to see that much of him this time, but if he was happy and content then that was fine with me.\n\n\"So,\" I said to Evie. \"You're off now?\"\n\nShe shrugged. \"If you don't want me to stay.\"\n\n\"You're welcome to stay,\" I said, rather flustered. \"You're not... working tonight?\"\n\n\"No,\" she said. \"I do Sundays to Tuesdays, because I'm new. The girls who've been there longer get the busiest nights.\"\n\n\"Oh,\" I said. Should I commiserate with her for not getting to dance for more men? That was a tricky one.\n\n\"Well,\" I said. \"I'd be glad of your company.\"\n\nThat sounded a bit forward of me. I tried again.\n\n\"I mean... obviously I'd pay you.\"\n\nOK, that sounded way worse. I blushed again. \n\n\"You want me to just keep you company?\"\n\n\"Yes,\" I said. \"I'd really like your company.\"\n\nShe looked at me. I couldn't read her expression. \n\n\"You don't need to pay me for that,\" she said.\n\n**\n\nWe sat and watched a movie and drank the bottle of wine while we did so. I was still very careful around her. I couldn't really forget that she was still the babysitter and that the worst clich\u00e9 in the world was to be the lecherous grabby dad.\n\nShe seemed to enjoy herself though. I made her laugh quite a lot with my occasional daft commentary on the movie - I remember I used to be able to make my wife laugh, but in the last few years either I hadn't been as funny or she'd lost her sense of humour. Probably a bit of both.\n\nShe told me a bit about her plans for the future. The money from the club was going to fund her setting herself up with her own beauty salon. She would work there herself, but she hoped she'd be able to get other girls to work for her on a semi-independent basis, keeping most of the money themselves but paying a basic rent to her for the space and some of the equipment.\n\n\"You've learnt from the club,\" I said, without really thinking.\n\n\"Yes,\" she said. \"I'd like to be the boss. And I'd be a good one, I think.\"\n\n\"Yes,\" I said. \"I think you would too.\"\n\nShe picked up the bottle of wine and carefully poured half of what was left into each of our glasses.\n\n\"See,\" I said. \"You're almost obsessively fair and honest.\"\n\nShe smiled at me. Then she furrowed her brow, as if puzzled.\n\n\"You're funny,\" said Evie. \"And you're good looking. No - don't make that face. You are! Why weren't you snapped up the moment you were back on the market?\"\n\n\"They're probably biding their time,\" I said. \"I bet next week I'll be kidnapped and dragged off to some sex farm by a group of desperate forty-year old women\"\n\n\"Probably,\" she agreed. \"But not if the desperate nineteen-year-old girls get you first.\"\n\n\"Damn those desperate nineteen-year-olds,\" I said gloomily. \"They're always stalking me, everywhere I go.\"\n\n\"I can believe it,\" she said. \"It's probably closer to the truth than you think.\"\n\n\"Wow,\" I said. \"You have had a lot of wine.\"\n\nShe threw a cushion at me.\n\n\"Have not!\"\n\nI held out my hand to indicate peace.\n\n\"It's kind of you to say all that, really it is. Particularly coming from somebody like you. And I'm sure, one day, I will meet somebody else. But - there's no rush.\"\n\n\"You're not lonely?\"\n\n\"Sometimes. Not often. Not tonight.\"\n\nThat sounded a bit cheesy, but I said it lightly and she didn't seem to mind.\n\nShe picked up her wine glass and fiddled with it.\n\n\"You've never been back to the club again?\"\n\n\"No,\" I said. \"I, er, certainly thought about it. But I decided it would be a bad idea.\"\n\n\"Why? I was kind of hoping you would.\"\n\nReally? That was unexpected.\n\n\"You were?\"\n\n\"Absolutely. You are way, way nicer than most of the guys we get in there. And better looking. And...\"\n\nShe hesitated, looking a little embarrassed. \n\n\"You smelt lovely.\"\n\nHoly Mackerel. I was starting to think that actually, maybe, she liked me. Properly liked me.\n\n\"I didn't want to seem creepy,\" I said.\n\n\"You could never be creepy. Believe me, I see a lot of creepy men and you... no, you would never be one of them.\"\n\nI wasn't sure about that but if she thought so that was good enough for me.\n\n\"Did you like my dancing?\" she asked in a low, almost timid, voice.\n\nI nodded slowly. \"I really did... I think about it all the time. I think about you all the time.\"\n\n\"And you didn't come back to see me again!\"\n\n\"I know. I'm an idiot, obviously.\"\n\nShe stood up. I fervently prayed she wasn't going to leave.\n\n\"I could dance for you again now,\" she said. \"If you'd like me to.\"\n\nI swallowed hard. \n\n\"I'm not sure Gary would approve,\" I said. \"But count me in.\"\n\n**\n\nShe said she wanted to get herself ready so I went and checked on Jack. He was out for the count, and I knew that nothing short of an earthquake would wake him.\n\nWhen I went back downstairs she had changed into an outfit not unlike the one she'd been wearing at the club that night.\n\n\"You just happened to have that with you, I suppose?\"\n\n\"Of course. Sometimes one of the girls gets sick and I have to cover at short notice. So I always have an outfit in my bag. It's not as if they take up much room, do they?\"\n\nI had to admit they didn't. If anything, it was skimpier than the one she'd been wearing before.\n\n\"Sit down there,\" she said, pointing to the sofa. I sat.\n\nShe went around the room, turning off all the lights save a single table lamp. Although I could still see most of her clearly, parts of her were now appealingly bathed in shadow.\n\nShe stood in front of me, swaying slightly in her short skirt and halter top.\n\n\"So,\" she said, \"how long would Sir like?\"\n\n\"Um... how long would you recommend?\" I managed. My mouth seemed to have gone very dry.\n\n\"The longer I dance, the naughtier I can be,\" she purred, mock-seductively. \"Five minutes... quite naughty. Ten minutes... quite wicked. Twenty minutes... more evil than you can possibly guess. So... what is Sir's pleasure?\"",
        "\"How about three hours?\" I said. \n\nShe laughed. \"Don't get a girl's hopes up, sir, I hate to be disappointed.\"\n\nI really needed another drink but I also wanted to concentrate very hard indeed.\n\nShe began to dance. Last time she danced for me she'd been naked; this time she was theoretically clothed, but it was still one of the most erotic things I'd ever experienced. This beautiful young girl was really putting on a show for me - just for me.\n\nShe faced away from me and slowly bent down, her bottom approaching my face, closer and closer. The skirt rode up and I could see the thong disappearing into the delicious crack between her legs, traces of pussy lips just visible. She swayed from side to side and my eyes followed. Everything about her was perfect. I could have watched her for hours.\n\nShe slowly lowered herself onto my lap. I let out an involuntary groan as she settled there. My cock leapt to attention inside my trousers.\n\n\"Mmm,\" she said. \"That feels interesting.\"\n\nShe ground herself even harder into my lap.\n\n\"Jesus,\" I said. \"You are the sexiest creature alive.\"\n\n\"I think you're just a bit starved of female company,\" she said softly.\n\nI shook my head. \"I had a good time in my teens and twenties, quite a few girlfriends... but you're something really special.\"\n\nShe turned and slowly knelt in front of me. Her hair was loose and she gently brushed it across my lap, the lightest of touches, but the effect was electric. My whole body was entirely focused on one thing, to grab this girl and fuck her as hard and as well and for as long as I possibly could.\n\n\"I think you're going to kill me,\" I whispered.\n\n\"That's not the plan at all,\" she murmured. \"At least, not yet.\"\n\nShe had a plan. That sounded promising. All I needed to do was remember to breathe and try not to have a heart attack.\n\nGiving me a heart attack, however, seemed to be exactly what she had in mind. She lowered her head further and rubbed her cheek along my cock through my trousers.\n\n\"Hello,\" she said to my crotch. \"Somebody's home.\"\n\nMy hands were glued to my sides. No touching was the rule, I knew that, but god I wanted to hold her and pull her tight.\n\nShe raised herself up again and lifted her arms high above her eye, pushing her breasts out in front of her and directly in front of my eyes.\n\n\"Remember these?\" she said.\n\n\"I think I do,\" I said. \"It's nice to see them again.\"\n\nShe smiled. \"Last time,\" she said. \"I was wearing a bit less.\"\n\nI nodded. I told her about how conflicted I'd felt about coming into the club having been promised ALL NUDE DANCING and seeing all the girls with their clothes on.\n\n\"And then you took me downstairs,\" I said. \"And I realised there really was truth in their advertising after all.\"\n\nShe laughed at that.\n\n\"You don't feel short changed now? That I'm not doing an All Nude dance?\"\n\n\"Evie... Jess,\" I said. \"You could dance in a sack and you'd still be perfect and I'd watch you for hours.\"\n\nShe stroked my cheek and looked into my eyes.\n\n\"You're always so good,\" she said. \"Look at you, sitting there, so polite and well behaved.\"\n\n\"For the moment... I may break my leash any minute.\"\n\n\"I think you'd be quite something once you let yourself go.\"\n\nDid she want me to let myself go? Or was this all part of the big tease?\n\nShe leaned forward and gently pushed her breasts into my face.\n\n\"All those times I babysat for you... did you think about these?\"\n\n\"Yes... often.\"\n\n\"I used to think about you sometimes. Actually - I used to think about your cock.\"\n\nOh fucking god.\n\n\"I used to have these daydreams where you'd come home and it would just be us and I'd catch you in the shower and you'd let me play with it.\"\n\nIt had been a long time since I'd come just through talking and dry humping, but I was dangerously close now. She seemed to sense it and back off slightly.\n\n\"Would you like a naked dance, Mr Cranshaw?\"\n\nI nodded slowly. She smiled.\n\nShe leaned forward and whispered in my ear. \"The nice thing is, your wife's paying me to be here. So technically she's paying for this too.\"\n\nI didn't really want to think about my wife but yes, this was a pleasing thought.\n\n\"If I'm going to dance naked for you, the rules are we should be a bit more private,\" she said. \"How about your bedroom?\"\n\n**\n\nI followed her up the stairs to the bedroom. She knew where it was, of course, she'd been in our house dozens of times. I wondered how close she'd really been to trying to catch me in the shower. What would I have done? Probably nothing. As she said, I was a stickler for the rules.\n\nShe made me sit on the end of the bed. Once again the lights were turned low. \n\nMy erection was so huge now it was almost painful within my trousers. I wanted to adjust it but was too embarrassed to do so in front of her.\n\nShe stood in front of me.\n\n\"What would you like me to take off first?\"\n\n\"Your skirt, please.\" I said.\n\n\"Always so polite, Mr Cranshaw. Such a gentleman.\"\n\nYes, that was me. Quite the gentleman, sitting in front of her with an erection like the Eiffel tower trying to escape from his pants.\n\nShe loosened her skirt and let it fall, stepping out of it. Now she was just in a thong and a brief red top covering her bra.\n\n\"Better, Mr Cranshaw? What shall I take off next?\"\n\nI pointed to her thong. Something about a woman naked from the waist down has always driven me wild.\n\n\"Interesting choice,\" she murmured. She put her thumbs into the elastic on either side and slowly rolled it down her hips. Then with one, smooth practiced movement she was out of them. And there was her glorious pussy, still cleanly shaven, still perfect, still desperately alluring and out of reach.\n\n\"Not so shy this time,\" she said. \"Last time I almost had to beg you to look.\"\n\nI really desperately wanted to touch myself to relieve the pressure in my groin. But that was against the rules, I knew. No touching the girls, no touching yourself. That's what the sign meant.\n\n\"Talk to me,\" she said. \"Tell me what you're thinking.\"\n\n\"I'm thinking... how beautiful you are.\"\n\n\"Is that all? I'm a bit disappointed, Mr Cranshaw, if that's all you're thinking.\"\n\n\"Ben,\" I said. \"Please. Do you really want me to tell you what I'm thinking?\"\n\nShe nodded, slowly but emphatically. I was still hesitant. Once I said these things - once they were out there - they couldn't be unsaid. I still wasn't sure how far she wanted to take this.\n\nBut what the hell, right? Sometimes... sometimes you just have to take a breath and a chance.\n\n\"I'm thinking,\" I said. \"About how I'd love to grab you, right now, and pull you close to me, and lick your beautiful pussy until you came on my tongue.\"\n\nShe breathed out heavily, and stretched herself. She came a little closer.\n\n\"You'd like to feel me come, Ben?\"\n\n\"God yes. If I could make you come that would be the best thing in the world.\"\n\n\"And what about that poor thing?\" she whispered, pointing to my crotch.\n\n\"Well,\" I said. \"Obviously after you'd come, I would have to fuck you.\"\n\n\"Of course you would,\" she agreed softly. \"That would only be fair.\"\n\n\"I would take my cock and rub it gently up and down your pussy, teasing it, until you were begging me to fuck you.\"\n\n\"That sounds nice,\" she said. \"I like to beg. Sometimes.\"\n\nShe moved a little closer still. I could smell her now, that soft, musky smell of arousal.\n\n\"I would pull you on top of me and thrust my cock inside you and then hold you close to my chest and fuck and fuck and fuck you until I could explode all my come inside you.\"\n\n\"Mmm... but not too quickly, I hope. I like to be fucked for a long time, Ben.\"\n\nShe parted her legs and slowly lowered herself onto my leg. She began to grind herself softly there.\n\n\"That feels good... for now, anyway. Tell me, Ben, when did you last fuck?\"\n\nI had to think. Thinking was not my strong suit at that moment.\n\n\"I think... I think maybe eighteen months ago...\"\n\n\"That's a long time to go without a really good, hard fuck.\"\n\nIt was a long time to go without any kind of fuck, to be honest.\n\n\"You're very controlled, Ben,\" she said. \"But very passionate. I like that. It makes me think you're probably a really good fuck.\"\n\n\"I hope so.\" God, I really hoped so.\n\n\"So controlled,\" she went on. \"Don't you want to touch me?\"\n\n\"I really am... you have no idea.\"\n\n\"And yet you don't...\"\n\n\"No touching,\" I whispered. \"No touching is the rule.\"\n\n\"The rules are for the club, Ben. Here... you decide what the rules are.\"\n\nI nearly grabbed her then, but something deep and instinctive made me stop. I sensed the balance of power between us shifting slightly, and I wanted to claim a little more.\n\n\"Do you want me to touch you, Evie? Would you like me to put out my hands and pull you down onto me? So I can do all those things?\"\n\nShe nodded slowly.\n\n\"Tell me, Evie. I want to hear it.\"\n\n\"I want you to touch me,\" she said. It was almost a whimper.\n\n\"What else?\"\n\n\"I want you to fuck me and lick me and do anything else you want to me... oh god!\"\n\nThat last exclamation was as I grabbed her. I pulled her to me and down on to my lap and kissed her. Her mouth opened eagerly and her tongue lashed against mine. She made a deep sensual groan in her throat as we kissed.\n\nI slid my hands down her body and cupped both of her buttocks and squeezed them gently.\n\n\"Yes,\" she said. \"But harder.\"\n\nI squeezed harder, and she moaned again.\n\n\"I nearly came that night in the club,\" she said breathlessly. \"Rubbing myself against you, remembering all those dirty thoughts I'd had about you... it really turned me on.\"\n\n\"Ever since that night,\" I said. \"I've been dreaming about being able to do this.\"\n\n\"Please fuck me Ben,\" she said. \"We can play after, I'll suck you, you can lick me, taste me, you can have me however you want the whole night but I need you inside me now. Please!\"\n\nA few frantic fumblings and my clothes were on the floor. I pushed her gently back onto the bed, still kissing her repeatedly - I couldn't get enough of her sweet young mouth - and then I was above her, poised and ready.\n\nSometimes that first penetration can be a slight fumble, a slightly anxious, embarrassing combination of wrong angles and not enough stiffness and not enough lubrication. But not this time. My cock was poised at the mouth of her pussy and I knew it was perfect, all I had to do was push down with my hips and I would be inside her. I didn't get the chance though. Somehow she reached up and put her legs around me and drew me in, pulling me into her tight, wet, warm tunnel.\n\n\"God, you feel good,\" she whispered. \"I'm not going to last long Ben, I'm nearly coming already, fuck me hard now and I'll come.\"\n\nI pushed down hard into her, then pulled myself back up and started that familiar, brutal rhythm. Her hands and arms were around my back and I could feel her nails digging into me.\n\n\"Yes, oh yes Ben. That's it. Fuck me... fuck me... fuck me.\"\n\nMy own orgasm was waiting in the wings, I could feel it approaching but I pushed it aside, slightly adjusting the speed and ferocity of my thrusts to try and buy a few extra precious seconds. No way I was going to come until I'd made this beautiful, lovely, wonderous gift of a girl come first.\n\nBut I sure hoped she'd be as quick as she said because I wasn't going to last long.\n\n\"Come for me, Evie,\" I said. \"Come on my cock.\"\n\n\"God yes... talk dirty to me... I love that...\"\n\n\"I love your tight little cunt, Evie,\" I said. \"I wanted to fuck you before, when you used to come over, and now I'm inside you and I'm fucking you and I'm going to fuck you all night and you're going to suck me and I'm going to lick your beautiful little pussy until you come again and again...\"\n\n\"Fuck yes I'm coming Ben Jesus you drive me crazy...\"\n\nShe was bucking underneath me and I hoped to god she was coming because my talking like that had pushed myself over the edge.\n\n\"I'm coming Evie...\"\n\n\"Yes, come inside me, I want it all of it... fuck me Ben... fill me up with your come...\"\n\nI came massively, a prolonged jolt of pleasure that was almost painful in its intensity. I could feel my cock spurting into her as the muscles of her cunt tightened against it. I had become an animal, focused only getting my cock and my come as deep into her as I could, and I battered away at her for several more moments before I slowly regained my senses.\n\n\"Oh Jesus... Evie.\"\n\n\"Don't move,\" she whispered. \"I'm still coming... Jesus, I've never been fucked like that. Oh god, I'm coming again.\"\n\nFor the next minute or so she seemed to have a wave of orgasms sweeping over her. I lay on top of her supported just by my elbows, still buried inside her, and I watched in wonder and awe as she cried out softly with each of them. Gradually they died away though she still trembled at the slightest movement I made.\n\nI kissed her gently, and she kissed me fiercely back.\n\n\"You're amazing,\" she said. \"My head... my whole body is spinning.\"\n\n\"I can't promise that every time,\" I said. \"Though I'm happy to try.\"\n\nShe stretched herself out underneath me. \"God, every time you move inside me I get another little tingle... so nice... you may have to stay there forever.\"\n\n\"That would suit me fine,\" I said honestly. \"Though explaining it to Jack could be tricky.\"\n\nShe giggled, but then gasped. It appeared giggling also set off some tingling.\n\nI could feel myself deflating slightly, and I gently pulled myself out of her. She pouted her disapproval.\n\n\"The night is young,\" I said.\n\n\"You betcha,\" she murmured. \"And you have a lot of promises to keep, Mr C.\"\n\n\"I have?\"\n\n\"I believe fucking me all night was mentioned.\"\n\n\"Ah,\" I said. \"That may have been a slight exaggeration of my stamina.\"\n\nShe tutted softly, and pulled me closer. \"Truth in advertising,\" she whispered. \"It's very important.\"\n\nAnd I had to agree, she had a point.\n\n\"I'll do my best,\" I said."
    ],
    "authorname": "AnnasFriend",
    "tags": [
        "younger girl",
        "older man",
        "lapdancing",
        "mature"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/truth-in-advertising"
}