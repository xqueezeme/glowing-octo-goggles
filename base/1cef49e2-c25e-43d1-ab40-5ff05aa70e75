{
    "title": "Backstage Romance Ch. 12",
    "pages": [
        "* Daniel *\n\nThe rest of the week flew by in a giddy blur. We didn't say anything to the cast about our plans for the future, but something must have showed in our faces. Angela took one look at me Tuesday night and gave me a dazzling smile. Heather managed a weak one\u2014as it turned out, she was indeed suffering from morning sickness. Christina pulled me aside for an awkward hug and whispered, \"You're a lucky man, Daniel Lewis.\"\n\nThe afternoon of the final performance, we were hurrying around the house\u2014our house, in just a little more than a month it would be home for real and I could call it that\u2014getting ready to leave. After much discussion, we had decided to bring four of Ron Gordon's plays for Scott to see: one comedy and the final three dramas, which made up a trilogy about a tragic love affair between two men in the 1930s.\n\n\"Babe, where are the copies of those scripts for Scott?\" I asked, searching the bedroom.\n\nFrom the kitchen, Jeff replied, \"The packet was right there on the bedside table. Is it missing?\"\n\nIt had somehow fallen off and was wedged between the table and the bed. \"Never mind, I found it,\" I called. I reached down and picked up the envelope. As I did so, I noticed a small rectangular card lying on the floor next to it.\n\nI picked the card up and turned it over. I read the name: \"Timothy Spencer.\" \n\nOf course I knew who Timothy Spencer was. But what was Jeff doing with his card?\n\nI opened my mouth to call out another question to Jeff. Closed it. My heart started to pound.\n\nAn aspiring movie director was in the audience. I won't tell you his name, you'd probably recognize it. \n\nYou bet I would.\n\nAll my career choices had to be made with my boyfriend's approval. I became his creation, not his partner. I've never heard Scott say a good word about Ti\u2013 about my ex.\n\nAnd why would he? The man used you, Jeff. He called you his boyfriend and treated you like a possession. Just like Brian treated me. He may not have beat you, but he bullied you.\n\nI had seen pictures of Spencer in the magazines. A tall, dark-haired man with a beard and glasses. Where had I seen someone matching that description recently?\n\nChristina.\n\nJeff was surprised when I described her \"date.\" He knew exactly who I was talking about.\n\nOh, God, Jeff, he came for you, didn't he? That night when Christina pretended he was her boyfriend. You were so happy to see me afterward. What happened? What did he say to you?\n\nWhy didn't you tell me?\n\n\u2014\u2014\u2014\u2014\u2014\n\n* Jeff *\n\nDaniel was very quiet during the trip to the theater. This wasn't at all unusual for him, so I didn't think much of it until his third or fourth monosyllabic response to my statements and questions. Confused and slightly concerned, I let my voice trail off. Had I done something wrong? Was he not feeling well? In silence, I parked the car behind the theater and opened the door. Daniel reached over and grabbed my wrist.\n\n\"Wait,\" he commanded. I looked at him. He seemed calm, but very serious. I closed the car door again.\n\n\"Why didn't you tell me you'd seen your ex-boyfriend last week?\" he asked, point-blank.\n\nI was caught completely off guard. \"How did you know?\"\n\nHe produced Timothy's card and handed it to me. \"That was on the floor behind your bedside table.\" After a moment's confusion, I remembered. Timothy had slipped it into my shirt pocket as he left. I had completely forgotten about it. It must have fallen out when we got undressed later that night. When we made love.\n\n\"It didn't take a genius to put two and two together,\" Daniel told me. \"You said your ex was a Hollywood director. You didn't want to tell me his name, because I would probably recognize it. But you slipped at one point and almost said it anyway. I found the card, then I remembered the man I saw with Christina last Friday, and realized he looked just like Timothy Spencer. Jeff, why was he here?\"\n\nI searched Daniel's face for anger. There was none. Quiet, determined intensity and a little bit of fear, maybe. But no trace of the explosion I feared\u2014and deserved. I exhaled heavily. \"You probably guessed that, too. He wanted me back. He tried to lure me out to Hollywood by offering me a role in his next movie.\"\n\nVery quietly: \"What did you say?\"\n\nI squared my shoulders. Maybe I could still redeem myself for my omission. \"I told him I couldn't give him an answer without talking it over with my boyfriend first.\"\n\nThe first trace of a smile began to show on Daniel's face. \"What did he say to that?\"\n\n\"He wasn't terribly pleased, let's just put it that way.\"\n\n\"And when were you planning on telling your boyfriend about this?\" Shit. Daniel's eyes had me pinned to the car door.\n\n\"After Christmas. I didn't want to upset you. You've been so happy this week. We both have. I didn't want Timothy ruining that. I hate to imagine him getting anywhere near you. I never told him your name, or anything about you.\" I paused, playing my trump card. \"But I did tell him I loved you.\"\n\nThe smile spread across his face like morning light. Sarcastic morning light. \"So you told your manipulative bastard of an ex-boyfriend how you felt before you told me.\"\n\nSo much for my trump card. I felt, and hoped I looked, completely sheepish. Daniel sighed, reached across the gear shift and nudged my face up to look at him. His face was radiating love and patience and hurt, making me feel even worse.\n\n\"Jeff, I love the way you want to protect me, but we're a team now. When it's big stuff that affects both of us like this, I need you to tell me what's going on. I need you to trust me. I can handle it, I promise. As long as we're facing it together. Okay?\"\n\nI felt completely ashamed. And about three inches high. \"I'm sorry,\" I said in an equally tiny voice.\n\n\"I love you, you know,\" he told me. I didn't deserve this man. I never would.\n\n\"Was it a good role?\" he asked.\n\n\"It could be. Of course I haven't seen a script, but he said it's by Rebecca Sutton.\"\n\nDaniel pursed his lips. \"Sounds like it could be a really good role. Timothy knows what kind of bait to use, that's for sure. What about Ron Gordon's plays?\"\n\n\"We hadn't seen them yet when Timothy showed up. But now we have, and I'm a lot more excited about working with you and Scott than with You-Know-Who. I suppose we need to find out what Scott thinks.\"\n\n\"Well, let's find out then. Hand me those scripts.\" I passed him the messenger bag with its precious cargo. \"We need to get you inside and into makeup. We'll talk about this some more later, okay?\" He was all business now, assuming his stage manager face.\n\n\"Okay. Daniel. I love you so much.\"\n\nHe pulled me close and planted a kiss on my forehead. \"I love you too. Idiot.\"\n\nI accepted the scolding gratefully. Right in front of my eyes, my Danny Boy had become a man. A man I needed desperately.\n\n* * *\n\nThe cast party was a time of great hilarity. Strong word of mouth had brought in large, appreciative audiences during the last week of the run, so the theater managers, board and donors were in an expansive mood. Our little family of performers and crew members swung back and forth between exhilaration and sorrow that our adventure together had come to an end. Scott, taking a break from his latest directing project, was there celebrating with us, the life of the party as always.\n\nOur parents-to-be, Heather and Justin, once again stole the spotlight when Heather showed up sporting a brand new sparkling engagement ring. We fell all over each other trying to outdo one another with our congratulations. She proclaimed, \"I know, it's a huge clich\u00e9, a shotgun wedding, but we were really just postponing the inevitable, so why wait?\" She snuggled up to her fianc\u00e9's side.\n\nJulie and her family had driven into town for Christmas, and Joe and Mom were watching the kids so that Julie could attend our final performance. I took great pleasure in introducing her around; Kelly and Angela took to her immediately, and monopolized her attention while I circulated. Daniel had managed to get Scott's attention, and was pitching Ron Gordon's work to him in an excited undertone.\n\nI was trying to make my way over to join them when the theater president, a round-faced, cheerful man, got up to say \"a few customary words.\" There was friendly applause all around as he acknowledged everyone for their contributions to the success of the play, though I doubt anyone was paying that close attention.\n\nThat changed quickly when he pulled out a letter and announced, \"I have one piece of news I wanted to share with you. Two days ago we received this note from a Hollywood director whose name I'm sure you'll all recognize: Timothy Spencer!\"\n\nThere was a buzz of excitement in the room. I stiffened. What was Timothy up to? Daniel and Scott, huddled together in a corner with our precious scripts, both looked up in surprise.\n\n\"Apparently, Mr. Spencer made a trip here in secret last week, and wanted to let us know about his experience. Here is what he wrote:\n\n\"'A week ago, I paid a visit to your fine company because I had learned that an old friend of mine, Jeffrey Williams, was performing in a play by Rebecca Sutton. To my great surprise and delight, I found myself treated to one of the most enjoyable evenings at the theater that I can remember. Congratulations are in order to your production team, your exemplary front of house staff, and of course, the very talented cast.'\"\n\nTimothy pointedly avoided mentioning Scott in his accolades. Clearly his generosity of spirit had its limits. I wondered if anyone else had noticed the omission. Kelly looked uncomfortable at the mention of front of house staff; of course, she was the one who had let Timothy sneak backstage. It was probably against company policy.\n\n\"'I look forward to hearing great things in the future about your theater, and each and every talent involved in this particular production. I especially look forward to welcoming back a very dear friend who has been absent from the silver screen far too long.'\"\n\nWait, what?\n\n\"'While in recent years Jeffrey has chosen to dedicate his career to live theater, a passion I have always respected and encouraged...'\"\n\nYeah, right.\n\n\"'...his powerful performance last Friday has convinced me that no one in the business would be a better fit to play the lead in my next film project. With a script by Ms. Sutton, I'm sure we can all expect...\"\n\nI stopped listening. The bastard had forced my hand! I looked across the room at Daniel and Scott. Daniel was rolling his eyes. Scott was wearing an expression of shocked betrayal. No, bud, it's not what you think!\n\n\"Wishing you all the best this holiday season, Timothy Spencer.\"\n\nThere was a moment of stunned silence in the reception room. Then I was besieged by excited well-wishers\u2014all of them donors and board members. The cast and Julie hung back awkwardly, confused. Scott looked livid.\n\nTrapped by the crowd, I watched my best friend leave the room in disgust. I cast a pleading look at Daniel. He nodded\u2014I'll handle this\u2014and hurried out the door after Scott. Christina was looking at me unhappily. The message in her eyes was plain: It's decision time, Jeff. Have you figured out what's most important to you?\n\nOf course I had. I just hoped Daniel could forgive me for what I was about to do.\n\nFinally breaking free of the crowd, I raised my voice. Acting chops, don't fail me now. \"While I'm very grateful to all of you for your good wishes, I'm afraid Mr. Spencer's announcement was a little bit premature. He did approach me for the role, and I'm very honored that he would consider me, but I haven't yet agreed to accept it.\"\n\nThe faces around me reflected equal parts disappointment and curiosity. I took a deep breath. \n\n\"My partner Daniel Lewis and I...\" Julie dropped her glass; the president's mouth fell open. \"...have another project we're very interested in pursuing, and that's going to be our first priority before I consider any other offers. Thank you all so much for your support; it's been a joy and an honor working here. I hope I get the chance to tread these boards again very soon. Have a wonderful evening and a very merry Christmas!\"\n\nI dashed from the room in pursuit of Daniel, hissing, \"I'll explain later, sis,\" as I tore past Julie. An appreciative if bemused round of applause from the donors trailed behind me.\n\nI stopped in the hallway outside, uncertain which way Daniel and Scott had gone. Before I could decide, a strong pair of arms picked me up and hurled me against the wall. Blinking away stars, I looked into the furious face of Mark Hopkins, the stage manager.\n\n\"I warned him about you!\" he snarled. \"I told him you were no good, that you would take off and leave him as soon as this was over. I was right. Wasn't I? Wasn't I?\" He shook me furiously.\n\n\"Mark,\" I tried to pry his huge fists off my shoulders. \"Didn't you hear what I just said in there?\" \n\n\"I heard what that Hollywood hotshot had to say. I didn't have time to listen to you gloat about your big break. I was too busy trying to catch Daniel before he ran off and hurt himself. You cold-hearted snake...\"\n\n\"You've got it all wrong!\" I shouted, trying to forestall his ranting. \"That announcement was a misunderstanding.\" Well, not really, but there wasn't time to explain. \"I'm not going anywhere. I love Daniel. I couldn't leave him any more than I could cut off my own arm. He only left the room to find Scott. I was just going to look for them myself. You've got to believe me.\"\n\nMark's face crumpled. I could tell he wasn't really hearing me, but at least his painful grip on my shoulders eased. \"You weren't there. When we found him the last time. You didn't see him, lying on the floor, so still, with blood everywhere. I thought he was dead, I thought that asswipe had killed him, and none of us had lifted a finger to stop it.\"\n\n\"Mark,\" I ventured, \"Daniel told me about what happened with Brian. He doesn't blame you. Not at all.\"\n\n\"I watched him suffer for months afterward.\" Mark was still lost in his memories. \"For months we watched him leave work every night, terrified he wouldn't be coming back the next day. That scum treated him like shit, then went and got himself killed, and Daniel mourned like an abandoned puppy.\"\n\nHis red-rimmed eyes focused back on me. \"He won't survive another blow like this. You've gotta find him. You've gotta make this right!\"\n\n\"Mark,\" Daniel's voice interrupted our conversation. We both turned to find him standing there with Scott, smiling. My beautiful man. \"There's nothing to make right. Because nothing's wrong. I'm fine. Jeff and I are committed to each other. There's no way either of us is walking out.\" He shot me a pointed look. \"Right, babe?\"\n\n\"No, instead you're running out on your friends and colleagues. Really, Jeff, after dropping a bombshell like that?\" a new voice interjected. Kelly was standing there in the hallway with Julie. Kelly had her hands on her hips, but she was grinning. Julie looked shell-shocked. I groaned. We had quite the convention starting. \"How about we all take this to the cafe?\" I suggested.\n\n\"Better yet,\" Scott countered, \"how about we take this to the bar?\"\n\n* * *\n\nThe discussion at the bar went on for hours. So did the drinking. Once the events leading up to the cast party had been thoroughly rehashed, Mark and Scott both unbent. Scott promised to read the scripts and get back to us by New Year's at the latest. As I had expected, the prospect of championing an overlooked talent was irresistible to him. Mark\u2014gruff, irritable, standoffish Mark\u2014treated first Daniel, then me to rib-cracking bear hugs once he fully comprehended where we stood with one another.\n\nWhen she learned the full story, Kelly was horrified at her role in letting Timothy backstage. She actually burst into outrageous death threats against him when she realized the trouble that action could have caused. Personally, I thought setting her loose on Timothy was exactly the right idea. It would have been gratifying to see the mama bear unleashed against someone I felt thoroughly deserved it. Daniel, though, took Kelly aside and talked to her quietly for a while until she had collected herself enough to rejoin us. \n\nWhich left me at the mercy of my sister. My dear, sweet little sister Julie, who sat there with eyes like lasers pointed right at me.\n\n\"So,\" she started.\n\n\"So,\" I tentatively replied.\n\n\"Exactly when were you planning to tell us about this?\" she demanded, with ice in her voice.\n\n\"Um, I hadn't thought that far ahead,\" I mumbled. I was waiting for the explosion, anticipating expulsion from the family, my mother's disappointment and disgust, being banned from ever seeing Megan and Dylan again.\n\n\"You hadn't thought... we're your family, Jeff! How could you not think about it?\"\n\nI hung my head in shame. It was becoming an all-too-familiar pose today. Maybe I should try growing out my hair like Daniel's.\n\nAfter a few tense, silent minutes Julie's frozen mask finally cracked. She started to giggle helplessly. \"The look on your face when Meggie asked you about kissing boys... it all makes sense now!\" I smiled back hesitantly. She laughed about that for a while longer. \"You know,\" she continued, sobering abruptly, \"I really don't care, Jeff. I mean, of course I care, but it doesn't bother me that you're gay. Honestly, I should have guessed it a long time ago, from the absence of girlfriends, if nothing else. And I'm happy you've found someone. Daniel seems like a nice guy. I look forward to getting to know him. I just need to know, Jeff: Why? For all these years, why didn't you tell us?\" \n\nI flinched at the hurt in her voice. \"You know, you're the second person to ask me that question today,\" I commented, thinking of Daniel confronting me in the car, Timothy's card in hand. \"I never thought of myself as a withholding kind of guy before.\"\n\n\"Oh, you'd be surprised,\" Daniel chimed in. He and Kelly had concluded their talk and had come to join us. \"I heard Julie laugh, so I figured it was safe to come around and introduce myself.\" He shook hands with my sister. \"Jeff can withhold the most fascinating tidbits of information,\" he told her. \"Particularly with regards to his boyfriends, past and present.\"\n\n\"Not you, too, babe,\" I pleaded. \"I just came out to the world for your sake, cut me a little slack!\"\n\n\"You also outed Daniel as your partner in front of the entire theater administration,\" pointed out Kelly. \"Lord only knows how they'll respond to that.\"\n\n\"Let 'em try,\" growled Mark, from the other side of us. \"They only get rid of him over my dead body.\" My esteem for Mark Hopkins had risen considerably in the past hour or so.\n\n\"But if they do let Daniel go, he's already at the top of my wish list for assistant directors for this little project of yours,\" Scott assured me.\n\n\"We won't know until after the holiday,\" Daniel pointed out, reasonably enough. \"Why borrow trouble before then?\"\n\n\"Yeah, tackling Mom tomorrow will be trouble enough,\" Julie said, with a worried frown. \"I know she likes you, Daniel, but I don't know if she's quite ready to accept you as a son-in-law.\" Daniel said nothing, but looked worried.\n\n\"Well, if things get too hot with your Mom, Jeff, you're both welcome to come hang out with me and Josh,\" Kelly offered.\n\nAt some point in the evening, Scott got on his phone and spread the word to the rest of the cast that the party had moved to the bar where we had celebrated Halloween together. Angela, Christina and Joseph showed up in short order, their buzz over closing night amplified by all the offstage drama. \n\nHeather was tired, but stopped by briefly, Justin in tow, to say goodbye to everybody and wish us all a merry Christmas. She whispered in my ear\u2014or rather, softly shouted above all the hubbub, \"If it's a boy, we're naming him after you.\" I hugged her with tears in my eyes. Justin grabbed my hand and pumped it fiercely before escorting his bride-to-be out the door. I felt like a proud papa watching them go.",
        "Scott couldn't resist spilling the beans about our new joint project, and all three of the remaining actors immediately told him to sign them up if a part could be found for them. Christina sidled over to me and murmured, \"And Timothy is not hearing a word about this from my lips!\"\n\nJulie headed back to Mom's house at midnight. The actors stayed around a bit later, but since they all had flights in the morning, they eventually had to pack it in, leaving with hugs all around. Joseph lingered long enough to shake Daniel firmly by the hand. \"Scott,\" he told his director, \"don't let this one get away.\"\n\n\"Oh, I don't intend to,\" laughed Scott. \"He's become a top-notch assistant at work, a partner\u2014at long last\u2014for my best friend, and an ambassador for the most exciting project of my career. I've started to think of Daniel Lewis as my lucky charm!\"\n\nMy mind flashed back to a conversation two months earlier. I raised my glass. \"To getting lucky!\" Scott, Mark and Kelly laughed and followed suit.\n\nDaniel blushed, but for once his chin stayed upright and his gaze level. \n\n* * *\n\nI opened my eyes to an unutterable sense of peace. I was warm and relaxed, with the pale winter morning light peeking through the curtains. Daniel was curled up next to me, breathing softly. I closed my eyes, then opened them again as I slowly realized I wasn't in my own bed, nor even in my own house.\n\nThe events of the night before slowly came back. I had been in no state to get behind the wheel, and Daniel couldn't drive stick, so he had brought me to his own apartment. He had made me take aspirin and a multivitamin and drink several glasses of water to stave off a hangover before putting me to bed. It seemed to have worked; I had no headache or nausea, just some tightness behind my eyes. And that could just as easily have been from all the emotion of the last twelve hours as from the alcohol.\n\nDaniel had taken off his shoes and coat, but he was still wearing his pants and dress shirt from last night. Even rumpled and unshaven, he was irresistible. Whereas I smelled like last night's bar. How did he manage that? I dragged myself out of bed and found my way to the bathroom, where I freshened up as quietly as I could. I wanted to be presentable for my man when he woke up. I couldn't find an extra toothbrush, but I made use of his mouthwash, hoping it would at least kill the worst of my morning breath. I commandeered Daniel's frayed bathrobe to wear before emerging.\n\nI wandered out of the bedroom, hoping to find a coffee maker, and took in my surroundings. In all this time I had never visited Daniel's apartment. To borrow a real estate buzzword from Mom's lexicon, it was \"cozy.\" That is to say, just big enough to accommodate one person if he wasn't very large and wasn't prone to claustrophobia. A small kitchen opened onto a breakfast nook with a two-seater table holding an elderly laptop computer wired to a pair of portable speakers. A battered love seat sat facing a low television console holding an eclectic assortment of DVDs; I was gratified to recognize a couple of my own titles in the collection. A tall bookcase next to the love seat was stuffed to overflowing with books and scripts. Everything was neat and orderly, but dusty. I had kept Daniel away from his housekeeping the last month. \n\nWhat caught my eye most, though, was all the color. The apartment was illuminated by throw pillows, blankets, scarves, framed posters, even a Carnival mask, all in warm, glowing jewel tones. For the first time, I understood Julie's frustration over my reluctance to allow accent colors into my living space. I imagined Daniel's possessions mingled with mine, bringing life and interest to the soothing grays and blues, and smiled. February couldn't come too soon.\n\nBy the time I had located the materials to make coffee and had the machine sputtering along, I heard noises coming from the bedroom, followed by the sound of the shower running. Another search turned up mugs, and I was just finishing preparing one for each of us when Daniel's arms encircled me from behind. He rested his head against my back, smelling of soap and shampoo and love.\n\n\"You're wearing my bathrobe,\" he commented.\n\n\"It was either this or yesterday's underwear,\" I defended myself.\n\n\"You could walk around the place naked if you felt like it. I wouldn't mind. I've done it often enough at your place.\"\n\n\"Our place,\" I corrected him.\n\nHis arms tightened around me. \"Ours. Soon.\"\n\n\"Thanks for last night,\" I told him.\n\n\"What did I do to deserve thanks from you?\"\n\n\"About a million things,\" I replied seriously. \"You could have freaked out and yelled at me, even broken up with me for not telling you about Timothy. I would have deserved it. You could have done it all over again when you found out I had outed us in front of your employer. You could have left me hanging there when Scott got the wrong idea and took off, or let me handle my sister on my own. But you were there through every crisis. In spite of every stupid thing I did, not to mention that ridiculous stunt that Timothy pulled, you were my pillar of strength.\"\n\nDaniel nuzzled the back of my neck. \"You love me. That's worth being strong for.\"\n\nI turned to face him, melting when I saw his hazel eyes looking up at me adoringly through that perpetual fringe of chestnut-colored hair. I kissed him.\n\n\"I hope I can always be that strong for you, too,\" I told him.\n\n\"We can take turns,\" Daniel reassured me.\n\nAs if to emphasize the innuendo, one of his hands slid up inside the robe and teased at my chest hair. I was instantly achingly hard, and moaned appreciatively. He immediately repeated the gesture.\n\n\"Baby, I've got another pillar of strength rising, and it's got your name on it,\" I joked.\n\nHe rolled his eyes at my lame humor. \"Shut up and come to bed, Jeff.\"\n\nWe left the coffee cooling on the counter and hurried back to the bedroom. I would have liked to make a production of it, but my need was too urgent. Pushing Daniel down onto the bed, I clumsily unbuttoned his white henley shirt and pulled it over his head. God, he was so beautiful! I latched onto one sensitive nipple and sucked hard enough to make him arch his back in pleasure. \n\nHis dick was straining against his lounge pants, and a little spot of pre-cum was already seeping through the fabric. I had to have him in my mouth, and now. I swear I heard something rip as I got those pants off him and peeled down the briefs to let his cock spring free onto my waiting tongue. Daniel hissed in pleasure, and wriggled around to return the favor. I was in heaven. All I wanted to do for the rest of my life was make love to this man, returning pleasure for pleasure, claiming him as my own as he claimed me. \n\nDaniel pulled gently at my hair. \"Babe, I'm getting close.\" \n\nI pulled off him. \"Not yet, not yet, sweetheart. I need you to do something for me.\" I took his hand in mine, kissed the palm, and guided it down, down to my ass. He gulped as I pressed his fingers to my opening. \"I want you to fuck me, Daniel. I want to feel you inside me.\" \n\nI was no virgin, though it had been so long since I bottomed, I might as well have been. I regretted that I couldn't give my baby that gift. But I could at least share the same intimacy and trust with him that he had given so generously to me, so many times over.\n\nI met his eyes to find tears standing in them. \"Jeff, I'm scared. I've never topped before. I'm so afraid I'd hurt you. I couldn't bear that.\"\n\nI closed the gap between us, kissed him. He kissed me back with such tenderness it took my breath away. Well, would have if I'd had any breath left to take. I flexed my pucker against his hand so that one finger slipped just inside. I don't know which of us trembled more at that.\n\n\"We'll go slow, then. I'll tell you if we need to stop. But nothing would make me happier right now than being with you like this.\"\n\nDaniel has to have been the most gentle, considerate lover I've ever had. Too gentle, actually. I was so crazy with wanting him, with the craving to feel him pound into me, that his sweet, slow, hesitant lovemaking left me groaning for more. I would have to work at convincing him that I'd welcome a good rough fuck now and then. I made a mental note to straddle and ride him some time, just to show him what kind of treatment my ass was capable of taking. Once I'd had a bit more practice, of course, I amended, wincing as my untrained muscles protested.\n\nBut when Daniel shuddered and cried out my name as he loosed his precious essence into my body, it might just have been the most perfect moment of my life. \n\n\u2014\u2014\u2014\u2014\u2014\n\n* Daniel *\n\n\"Are you ready for this, babe?\" Jeff looked down at me and squeezed my hand. He wasn't fooling me. He was more nervous about this than I was. \n\n\"If I'm not now, I never will be,\" I answered, smiling and, with my free hand, hoisting the potted poinsettia I had brought as a hostess gift. Jeff led me up to the wide, light-festooned porch of his mother's house. The muffled sound of voices and Christmas music drifted out to greet us. Jeff smiled encouragingly at me one last time and rang the doorbell. I was catching on to the game he was playing: The more he worried on my behalf, the less attention he had to spare for his own fears. \"It'll be okay, Jeff,\" I whispered, hoping I was right.\n\nThere was a sound of hurrying footsteps, and then Judy answered the door. Julie and a man who must have been Julie's husband were hovering close behind.\n\n\"Welcome, welcome, merry Christmas, babe,\" she greeted Jeff, giving him a hug. She turned to me. \"Merry Christmas, Daniel!\" I offered her the poinsettia. \"Thank you so much, this is lovely, you shouldn't have.\" I noticed she already had three or four of them decorating the entry, but she bustled back to the kitchen to give it a drink and find a place of pride to display it.\n\n\"How's show business, big brother?\" asked Julie, giving her brother a tentative smile.\n\n\"There's no business like it\u2014especially this year!\" he answered, hugging her. \"Daniel, you've met Julie of course. This is her husband Joe.\" We shook hands politely, the in-laws sizing each other up. \"Their two little rugrats must be around here somewhere,\" Jeff continued, glancing around.\n\n\"They're planted in front of the TV watching a Christmas special,\" answered Joe. \"Gives the grownups a chance to... catch up.\" He raised his eyebrows meaningfully. Clearly Julie had filled him in on his brother-in-law's impending bombshell.\n\nJudy came bustling back from the kitchen. \"Dinner isn't for another couple of hours, so you boys will have time to get yourselves installed and relax a bit first. Julie and Joe are in the guest room and the kids will be in sleeping bags in the living room,\" she said. \"Jeff, I thought I would give you and Daniel the queen bed in your old room. It's not your nice big king-size, I know, but I imagine you two won't mind sleeping a little closer together than usual for one night.\"\n\nEveryone else in the room froze.\n\n\"That room is all the way at the end of the hall,\" Judy blithely continued, \"and it has a private bath, so you won't disturb the rest of us if you get up to any shenanigans. I warn you, though, if you do, you're washing your own sheets. I swore off that duty the moment you went to college!\"\n\nJeff's face had grown paler and paler as his mother's words sank in. I moved closer to him, just in case he fainted. Julie had her hand over her mouth. Joe and I exchanged nervous glances.\n\nIn the ensuing silence, Judy eyed her son closely, the corner of her mouth quirked. Jeff tried several times to frame a response, gave up, slid one hand over his eyes, and quietly asked, \"How long have you known?\"\n\nJudy's eyes gleamed triumphantly. \"Well, I started suspecting when you were nine years old and I walked into the back yard and found you and Julie dancing around singing 'I'm Gonna Wash That Man Right out of My Hair' from South Pacific.\" Both her children groaned in embarrassment and hid their faces. Joe chuckled.\n\n\"And those suspicions got a lot stronger when you started playing the pronoun game with me in college any time I asked about your dating life. But I think I knew for sure when you spent, what, was it seven years in Hollywood living with a male roommate? Jeff, I know real estate in California is expensive, but not that expensive. You were making plenty of money working on that TV show. You would have gotten your own place if you hadn't had, shall we say, a compelling reason to stay with what's-his-name.\"\n\nJeff sagged at the mention of Timothy. I cleared my throat. \"I, uh, I think Jeff needs to sit down for a moment.\"\n\n\"That's an excellent suggestion, Daniel,\" Judy said approvingly. \"Let's all take a seat in the dining room, shall we?\"\n\n\"I'll get us some drinks,\" volunteered Joe hastily. \"I think we could all use them.\"\n\n\"Daniel doesn't drink,\" whispered Jeff.\n\nI overrode him. \"Under the circumstances, I think I'll make an exception.\"\n\nWe all gathered around the dining room table, each of us holding a tumbler of eggnog amply fortified with rum.\n\nJudy turned to me. \"Daniel, I know I've already told you this, but welcome to the family, truly. I know it can be a little intimidating meeting the in-laws for the first time, but I promise you we won't bite. At least not in any way that would leave a mark.\" She winked.\n\nI gathered my scant courage to ask, \"How did you know about us? I can understand what you said about Jeff, but what gave our relationship away?\"\n\n\"Simple. The way you two looked at each other. The expression on Jeff's face whenever he talked about you at Thanksgiving. Of course, what he said was already highly complimentary, but the look in his eyes and the sound of his voice told a whole other story. I have to admit I was intrigued. I couldn't wait to meet you and see what the other half of that story had to tell me.\"\n\n\"And?\"\n\n\"The exact same thing. I don't think either of you boys realizes just how happy you make the other. You two were so obviously in love, that night at the reception, I thought I might have to throw my drink over you to cool you down!\" she laughed.\n\n\"So how did I miss it?\" interjected Julie. \"I've known Jeff my entire life!\"\n\n\"Sweetie, you have a career, a husband, and two little ones keeping you occupied. I think you can be forgiven for missing something Jeff obviously wanted to keep hidden from us.\"\n\nJeff cleared his throat uncomfortably. \"I'm... so sorry about that, Mom, Julie, Joe. At first it was mainly Dad I was trying to hide from, and then there were professional reasons I couldn't come out, and then it finally just became a habit.\"\n\nJudy smiled at him sadly. \"Yes, I thought Gary might come into the equation here. Your father was a good man, Jeff, and he loved you, but he always did have trouble adjusting to anything outside his preconceptions about the way life should look. The fights we had when I first told him I wanted to get my realtor's license! I was grateful, really, that we had already separated before you started pursuing your interest in theater. That way you two kids were free to choose your own paths without facing too much pressure to conform to his expectations.\"\n\n\"You never told us any of this,\" Julie protested. \"If Dad really would have had such an issue with Jeff being gay, or acting, for that matter, why go to all the trouble to make sure he was still connected to us? You know he wouldn't have made the effort if it hadn't been for you inviting him.\"\n\n\"He was still your father, Julie,\" her mother told her. \"Whatever his failings, he still deserved to be part of your life. I just made sure he wasn't in a position to dictate your lives.\"\n\nI thought of my own family, far away and apparently disinterested, and wilted a little. Jeff seemed to read my mind and took my hand in his.\n\n\"Well, I suppose that just leaves one last person I need to come clean to,\" Jeff sighed and stood up, pulling me to my feet beside him. He raised his voice. \"Meggie, could you come in here a moment, please?\"\n\nA dark-haired little girl with eyes the same bright blue as Julie's and Jeff's came scurrying from the den. She stopped and looked at me suspiciously, taking in the sight of her uncle holding my hand tightly.\n\n\"Megan, hon, I'd like to you meet Daniel. Daniel, this is my niece Megan.\" Megan and I warily took stock of one another. \"You asked me at Thanksgiving who I was kissing. When I'm at the theater acting, I kiss whoever the play tells me I'm supposed to. But when it's just me by myself, making my own choices, Daniel's always going to be the one I want to kiss.\"\n\nIn my completely unbiased opinion, it was just about the sweetest coming-out speech I had ever heard.\n\nMegan considered her uncle's announcement for a moment. Then she smiled. \"Thought so,\" she announced, and went skipping back toward the allure of the television. \n\nJeff threw up his hands helplessly. \"Scott, Kelly, the Professor, Mom, now Megan. Do I have 'gay man, property of Daniel Lewis' tattooed on my forehead?\"\n\n\"You know that's not a bad idea,\" I joked. \"Maybe I should mark my claim on you somewhere. Warn the predatory directors off.\"\n\n\"You already...\" Jeff trailed off. I caught his eye and blushed when I realized what he had been about to say. I had claimed him as my own far more intimately that very morning.\n\nMegan's voice trailed back into the dining room: \"Dylan, Dylan, guess what!\" A moment or two of furious whispering was followed by her little brother's response: \"Ewww, Megan, gross!!!\"\n\nJulie and Joe looked at one another and said, simultaneously, \"She's your daughter.\"\n\nJudy smiled serenely. \"She's my granddaughter.\"\n\n* * *\n\nWe did get up to \"shenanigans\" that night, of course, giggling and hushing each other as if we were teenagers sneaking around behind their parents' backs. And in a way, I suppose, we were. I gladly allowed Jeff to reclaim his customary role on top, and moaned with each of his long thrusts into my hungry channel, until he had to kiss me to shut me up.\n\nJeff sneaked out around two in the morning, decently pajama-clad, with a load of soiled sheets to wash, while I remade the bed with fresh ones from the linen cabinet. He came back red-faced from the laundry room. Julie and Joe, returning from loading the little ones' stockings with gifts from Santa, had caught him in the act. Jeff told me they had seemed far more incensed that their parental duties had kept them from similar activities than they were by Jeff and I getting it on his mother's house. We laughed about that, too, until finally the hours caught up with us and sent us off to sleep.\n\nA shrill cry at the godforsaken crack of dawn woke us from our (pornographic, at least in my case) dreams.\n\n\"Meggie! Meggie! Wake up! Santa came! And he brought presents!!!\"\n\nMy love grumbled and buried his handsome head under the pillows. The squealing from the living room increased in intensity until we heard Joe's sleepy voice enjoining his excited children to at least keep it down to a dull roar while the grownups were still in bed.\n\nJeff's chuckle told me he had given up on trying to ignore the noise. He emerged from beneath the pillows to smile at me. Even with bed-head and reddened eyes, he could still give me butterflies with that smile.\n\n\"Merry Christmas, Danny Boy.\"\n\n\"Merry Christmas, Jeff.\"\n\n\"Did Santa bring you what you wanted?\"\n\nI squirmed, knowing what he was fishing for. \"Do I really have to say it?\"\n\nHe captured my hand, brought it to his lips. \"I want to hear it.\"\n\nI gave him a kiss, close-mouthed for fear of morning breath, and laid my palm against his cheek. \"He brought me everything I wanted. He brought me you.\""
    ],
    "authorname": "ikhneumon",
    "tags": [
        "gay romance",
        "gay anal",
        "gay oral",
        "theater",
        "actor",
        "director",
        "coming out",
        "role reversal",
        "family",
        "christmas"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/backstage-romance-ch-12"
}