{
    "title": "A Tangled Web Ch. 12",
    "pages": [
        "Jun-Nui gazed out over the aft rail as the dying embers of the sun glistened in the wake of the Ming-Xing. The day had been filled with too much emotion. Above all else, she would never forget that this was the day on which she had killed another human being. The look on his face as the soldier's life had drained from his eyes was going to haunt her to her grave. She hoped she would never have to go through that again but, given what she was now involved in, the chances were slim. She brought to mind the callous way in which Major Strickland had shot Yin, and the way that Xui-Li had been prepared to take coldblooded revenge, such heartlessness was almost too much to bear.\n\nShe glanced across at Xui-Li. When they had first met, just a few months ago, life had been so much simpler. She could see now how she had been a naive and stupid little girl. She had been so caught up in some romantic notion of espionage gleaned from the pages of the penny dreadfuls, that she had failed to see that real people were involved and that those people, inevitably, got hurt. But that wasn't the only romantic notion that had been crushed. There, standing next to her, was the hardest conflict of all. Only hours ago she had blurted out to Yin that she loved Xui-Li and, for sure, that hadn't changed but, now that they were together, like everything else, it wasn't that straightforward.\n\nFirstly there was the unresolved issue of the way she had been dismissed, all those months ago, with 'take this trash out and make sure she stays out.' The words still burned in her heart. Just as she had been beginning to believe that Xui-Li had feelings for her as a person these words had thrown it all back into doubt. Was the connection she had felt some young girl's fantasy or the real thing? Time after time, in the small hours of the night, she had played them over and over in her head, trying to fit them in with every thing else that had happened between them.\n\nAnd, secondly, there was the vexing question of Yin. As Xui-Li had held the dying Yin in her arms there had been a tenderness, a concern, a strength of emotion that went far beyond what one might expect between a captain and her lieutenant. Whatever Jun-Nui's relationship had been with Xui-Li in the past, it looked as if her place had been taken by Yin. It wasn't just that Jun-Nui was jealous, although that was a major consideration, it was also more evidence to suggest that their affair had, indeed, been just an idle diversion, an amusement to pass the time.\n\n\"Did you love her?\" Jun-Nui felt she had to know.\n\n\"Yin?\"\n\n\"Yes, Yin, unless you have any other concubines I ought to know about.\" Even as she said these words Jun-Nui knew how harsh she was being but, for the life of her, she couldn't stop herself.\n\n\"Yin was my assistant,\" Xui-Li said simply.\n\n\"Your assistant? She seemed to be pretty fond of you for an assistant. Fond enough to die for you.\"\n\n\"Yin was my assistant,\" Xui-Li repeated, \"and yes, we were fond of each other. As for love, I'm not sure...\"\n\n\"So she was just another pretty girl to keep your bed warm. Just another girl to keep you amused. Did you string her along the way you did me? Did you force her to be your geisha? How long before you called her trash and threw her out?\" Jun-Nui couldn't keep the bitterness out of her voice.\n\n\"Please, Jun-Nui, it wasn't like that. You know it wasn't like that.\"\n\n\"Do I? Are you saying that you didn't throw me out as trash the moment I no longer amused you?\"\n\n\"Please, you're twisting things around, that wasn't how it happened.\"\n\n\"It certainly looked like that to me. Do you deny that you said those words?\"\n\n\"I had to. I had to say those words. I had to make it sound realistic. I had to protect you. Mei-Xing...\"\n\n\"Protect me from Mei-Xing!\" Jun-Nui cut across. \"To stop her from kidnapping me, having me beaten up, raped and then sentenced to being shot at dawn? We both saw how well that worked.\"\n\n\"I'd only just found out about the plot. I hoped that, if I pretended that you meant nothing to me, then I could spare you from getting involved. I had to turn you away and I had to make it look convincing. But you sure got your revenge. I can understand why you were bitter but did you really have to write that report? We lost a whole platoon thanks to that.\"\n\n\"But... but... I made it up! I had to report on something so I made it up. How could I have done otherwise? You know I knew nothing. How was I supposed to have found out about troop movements?\"\n\n\"You made it up? Then how did...?\" The awful realisation hit. \"Oh no! It's so simple once you understand it. I should... I really should have guessed at the time. Tell me, when did you write the report?\"\n\n\"When I got back to base. Right after you'd thrown me out.\"\n\n\"And you gave it to Colonel Fortesque the next morning?\"\n\n\"Yes, that's right, but why is this important? What's so 'simple'?\"\n\n\"Because the troops weren't ordered on manoeuvres until two days later. Mei-Xing must have intercepted your report before it got to me and then issued the orders to make it came true. That way she could claim that I was passing information to you and that's why she had to have you at the trial.\"\n\n\"What do you mean, intercepting my report before it got to you?\" Jun-Nui, piqued that Xui-Li should be so casual about reading her confidential reports, had all but forgotten her original anger.\n\n\"Oh, we read all your reports. I guess there's no harm in you knowing, Huan-yue, Colonel Fortesque's cleaning maid, was stealing them for us. We had quite a laugh about them.\"\n\nJun-Nui blushed at the thought of what she had written.\n\n\"I'm sorry,\" Xui-Li said simply. \"I should never have invited you into the club in the first place. I should never have let you get involved. If I'd know how it would work out, how you would be beaten and tortured... as I said, I'm sorry. I hope Mei-Xing is burning in hell for what she did to you.\"\n\n\"Burning in hell? Is she dead, then? Was she hung along with General Chang?\"\n\n\"No, she was killed in the raid. Well, nobody's seen her since then so it's generally assumed that she was one of the fatalities.\"\n\n\"Hah! Killed in the raid! She was long gone before then.\" Jun-Nui saw the look of surprise on Xui-Li's face. \"I guess that's another little detail you didn't know. She came for me in the middle of the night and had me spirited out of the compound well before the raid happened.\"\n\n\"She spirited you out? Whatever for?\"\n\n\"To sell me as a sex slave,\" Jun-Nui said simply.\n\n\"As a sex slave!\"\n\n\"Yes, while you were swanning around being 'amused' by your 'assistant' I was being forced to work in a brothel.\"\n\nJun-Nui turned and stared out to sea.\n\n\"I didn't know,\" Xui-Li said quietly. \"Do you think I would have left you there one moment longer than necessary if I had done? Oh, god, my poor darling. Was it bad? Was it very bad?\"\n\nJun-Nui just carried on staring out to sea. She knew she was being unfair, she knew that there was no way Xui-Li could have known but the thought of Yin in Xui-Li's bed whilst she was.... She shuddered at the recollection.\n\n\"If you don't want to tell me, I understand,\" Xui-Li said.\n\n\"No, it's OK. It was just...\" she turned and looked Xui-Li straight in the eye. \"It wasn't the sex, well, not exactly. I was owned. I had no say in who could use my body or how they could use it. My mouth, my sex, my backside, I was used in what ever way the customer wanted and was prepared to pay for. Night after night I was despoiled and degraded to fill other people's pockets. No one should go through some of the things I've had to endure, no one.\"\n\nPrompted by gentle questions from Xui-Li, Jun-Nui told the story of how she had been sold, of her time in the brothel, of her escape and how she had ended up as part of the force attacking the prison compound.\n\n\"And that's where you met Yin,\" Xui-Li said, \"out there, under fire.\"\n\n\"It was a good thing she arrived. Our sergeant had been killed and we were pinned down by that machine gun. If she hadn't arrived then we would all have been shot. And that includes you.\"\n\n\"I owe her a debt I can never repay. We both owe her. She was very brave.\"\n\nJun-Nui wasn't sure how she felt about Xui-Li praising Yin but there was no doubt as to the truth of what she said.\n\n\"Well, I didn't know her for more than half an hour or so but, yes, she seemed pretty brave. She also seemed pretty devoted to you.\"\n\nNow it was Xui-Li's turn to stare at the ship's wake.\n\n\"And the plan for you to 'arrest' Yin, whose idea was that?\" Xui-Li asked after a while.\n\n\"Well, a bit of both, actually. We were stuck, we had to do something and, when I saw you up on the roof...\" again, Jun-Nui trailed off. \"Well, it was my idea to dress up as a British soldier, it was Yin's that I should 'arrest' her.\"\n\n\"And she trusted you? She hardly knew you but she trusted you?\"\n\n\"Not at first, obviously. She'd already worked out that I wasn't all that I seemed and, once we were away from the rest of the troops she interrogated me and found out the rest, or the important bits, anyway. When she discovered exactly who I was, well, apparently she had heard quite a bit about me, and that made all the difference.\"\n\n\"She'd heard quite a bit about you? Whomever from?\"\n\n\"You, apparently.\"\n\n\"But I never... Oh, what does it matter now.\" She turned to Jun-Nui. \"I won't try to hide it. I was fond of Yin, very fond. She was brave, and clever and... and lots of other things but she wasn't you. I thought I'd lost you, how could I think otherwise? Was I supposed to wait around forever on the off chance that we would meet again? For all I knew you had gone back to England.\"\n\n\"Well, I'm never going back now, am I? I'll be shot as a traitor if I do.\"\n\n\"Yes, that....\" Xui-Li seemed to pull herself together. \"So, what are you going to do?\"\n\n\"Right now,\" Jun-Nui plucked at the bloodstained shirt she still wore, \"right now I'm going to see if I can find some clean clothes to wear. I am sick of wearing another person's blood. I saw Xiang earlier. I think I'll go and ask her if she's anything she can spare. I seem to remember that we're the same size, near enough.\"\n\nJun-Nui pushed herself away from the rail and stood up straight.\n\n\"Please, Jun-Nui,\" Xui-Li said as she turned to leave. \"You were never just an amusement to me. Well, maybe it started that way, I can't deny that but....\"\n\n\"I need to change my clothes, I need to find something to eat, I need... I need... I need to go.\"\n\nAnd, as she turned away, in the dark, neither saw the tears running down the other woman's face.\n\nBut, when she went below, it wasn't Xiang Jun-Nui found, but the boatswain who offered her work as a new crew member.\n\n\"Nowhere else to go but the Ming-Xing?\" she had laughed, \"that's how we all signed up. Waifs and strays, the lot of us. You'll be washing pots until you find your sea legs but there's no shame that.\"\n\nThere was, indeed, always work to be done in the galley, and with all the recruits and released prisoners on board there were plenty of mouths to feed. The boatswain also showed Jun-Nui where to stow her hammock and helped her find some clothes that, if not exactly new, were at least clean and not covered with blood.\n\nWhen, next morning, she next came up on deck, she found that the weather was fine and they were lying at anchor in a secluded inlet. With all the passengers on board the cook had decided that it was easiest to bring the food up from the galley and set it out on a table on deck. That way those below could enjoy their meal in the sunlight and fresh air rather than the cramped and stuffy confines of the hold. It wasn't a banquet but the cook had done marvels with some fresh fish, a few spices and some boiled rice. There was a similar shortage of eating utensils but fingers served and they made sure no one went hungry. There was quite a crowd around the table and Jun-Nui was busy serving the rice when she looked up to see Jinsong standing opposite.\n\n\"Look who it is,\" Jonsong sneered. \"I see you found your proper place, in the kitchen where you belong. What?\" he laughed, \"couldn't you manage it as a soldier? Did the little girly get scared at all the bang-bangs?\"\n\n\"Get away from this table!\" Jun-Nui snarled. \"Get to the back of the queue and, when everyone else has finished, maybe, if you ask nicely, I'll let you feed as well.\"\n\n\"Ohh, temper, temper,\" Jinsong replied. \"I don't think it's the place of a serving wench to determine who gets fed and who doesn't. Come along, hand it over, there's a good girl.\"\n\n\"I'll see you dead first!\" Jun-Nui grabbed a knife from the table and held it out threateningly.\n\n\"What's going on?\" Xui-Li had been standing at the wheel discussing navigation with the boatswain. She had been keeping a quiet eye on Jun-Nui all morning and, seeing the fuss, she came over to see what it was all about.\n\n\"Jun-Nui put that knife down,\" she said firmly, \"and you, soldier, stand up straight. Now, what's this all about?\"\n\nStill boiling with rage, Jun-Nui put the knife back on the table.\n\n\"This girl, this wench,\" Jinsong spat the word, \"refuses to serve me, one of your soldiers, one who risked his life for you yesterday. Surely she should be put in her place. A sound whipping should teach her manners.\"\n\n\"Really?\" Xui-Li was all smiles. \"A sound whipping to put her in her place? However, even a serving girl has a right to be heard. Let's see what she has to say.\"\n\n\"Why should we? She'll only lie! All women are liars!\" Jinsong suddenly realised what he had said and to whom. \"Excepting you, of course, Madam Hong.\"\n\n\"Even so, liar or not, let us hear her out. Tell me, Jun-Nui, why did you refuse this soldier food?\"\n\n\"This 'soldier' and I have a score to settle. I will not serve him food, not while there's breath in my body.\"\n\n\"Really? Perhaps you could explain why. He has, after all, called for you to be whipped soundly. That is not to be shrugged off lightly. If justice is to be done here, then let everyone hear the facts.\"\n\nJun-Nui looked long and hard at Xui-Li. She knew that Xui-Li would understand how she felt but she also realised that Madam Hong, as leader, had to show that she was impartial. Much as it pained her she had to tell her why.\n\n\"It was while we were training, while we were in the camp,\" Jun-Nui started, \"he found out about me. He found out that I'm a girl. He blackmailed me, he threatened me, he forced me to...\" Jun-Nui couldn't finish the sentence but it was quite clear what she was saying. \"Please, Madam Hong, do not make me say the words. But understand, he did me wrong and I'll see him in hell before I serve him food.\"\n\n\"Are you saying that this soldier blackmailed you into having sex with him?\"\n\nJun-Nui just nodded.\n\n\"These are very serious allegations. Are they true?\" Xui-Li asked Jinsong. \"Did you blackmail this woman? Did you force yourself upon her?\"\n\n\"Of course not. What would I want with a scrawny cow like her? She's just a serving girl. What would she be doing in the camp? She's not a true soldier like me.\"\n\n\"True soldier!\" came a voice from the crowd. \"One who spent the whole battle lying in a ditch pissing himself with fear.\" This caused a ripple of laughter. \"True coward, more like.\"\n\n\"True soldier? Your comrades don't seem to think so.\" Still Xui-Li smiled but Jinsong could sense that the tide was flowing against him.\n\n\"This girl, this serving maid,\" Xui-Li continued, \"she, on the other hand is a true soldier. Today she may have chosen to serve the food but that is her choice and not my order. This is my most trusted lieutenant and, if it weren't for her, and her quick thinking yesterday, you would be lying dead in that ditch, not standing here. But, even if she were not the hero of the hour I would still take her word over that of a despicable specimen like you. Chu-Hua,\" Xui-Li turned to her bodyguard who, sensing trouble, had also come over, \"perhaps you could arrange for suitable accommodation for this young man while I decide what to do with him.\"\n\nAs Chu-Hua approached Jinsong looked about anxiously. Jun-Nui's anger, Madam Hong's disdain and Chu-Hua's calmness all augured badly for him. He grabbed the knife from the table and waved it about. The other passengers took a step back but Chu-Hua just laughed. In desperation he turned and ran to the side of the ship where, seeing that they were barely a hundred yards from the shore, he jumped overboard and started swimming.\n\n\"Boatswain, if you'd be so kind as to organise a boat. I think we should go and fetch that young man. Make sure he doesn't escape justice.\"\n\n\"I don't think there will be anything to recover, Ma'am,\" the boatswain replied. \"Not from this cove. It's the crocodiles, you see.\"\n\nBy now most of the passengers and crew were standing at the rail. Jinsong was striking out for land and was making good progress but, among the mango groves on the shore, other eyes were also watching. There was barely a ripple as a number of saltwater crocodiles slid gently into the water. It's debatable whether Jinsong ever knew what hit him. One moment he was swimming for the shore, the next there was a swirl in the water and he was gone. For several long minutes they watched but neither Jinsong nor the crocodiles were seen again.\n\n\"I wanted justice but I never wanted that,\" Jun-Nui said grimly.\n\n\"Are you all right?\" Xui-Li asked gently.\n\n\"Yes, I'm fine,\" Jun-Nui replied, although she surely didn't look it. She shuddered and pulled herself together. \"Come along, this rice is getting cold.\"\n\nAlthough appetites were reduced somewhat, one by one the soldiers returned to their meal.\n\nAfter the meal the Ming-Xing set sail again, following the coastline until, at a suitable inlet, quiet and crocodile free, most of the passengers disembarked. For the rest the Ming-Xing moored up at a sleepy little port and, surreptitiously they were slipped ashore.\n\nWith the ship now free of passengers and safely moored in a harbour, there was little for the crew to do. The boatswain found the crew some make-work maintenance tasks but, for the most part, it was time to relax. It was early evening. Jun-Nui and Xiang were scrubbing foredeck when Jun-Nui saw two women approaching along the quayside. They were met at the gangplank by Chu-Hua who bowed and led them towards Xui-Li's cabin. Xui-Li came out to meet than and there was a quiet conversation. Even from where they scrubbed the wails of grief were clearly audible and, as the three women went into the cabin, it was obvious that one of the visitors was still distraught.\n\n\"That must be Yin's mother,\" Xiang commented. \"Poor thing, she lost her husband to the British and now she's lost her daughter.\"\n\n\"Did you know here well, Yin, I mean,\" Jun-Nui asked.\n\n\"We were shipmates and you get to know your fellow crew quite quickly. She was a good person to have around. I'll miss her but, in this game, people come and people go. We all thought we'd seen the last of you, for example. Madam Hong was most upset.\"\n\n\"Until Yin came along,\" Jun-Nui commented sourly.\n\n\"Don't be so nasty, it's beneath you, and, if you think that Madam Hong simply forgot all about you because of Yin then you don't understand a thing. Poor old Yin found that out.\"\n\n\"How do you mean?\"\n\n\"I mean that she was always jealous of you, aware that she would always come second. She might have been the one in Madam Hong's bed but it was your name Madam Hong called out in the dark. Poor Yin was quite upset about that.\"\n\nJun-Nui stared into the gathering gloom. Reflections of the harbour lights danced on the waves. As ever, nothing was simple.\n\n\"Jun-Nui, Jun-Nui,\" the cook called out. \"Come and help. Madam Hong has guests and we must provide tea!\"\n\nJun-Nui rushed off towards the galley where the cook was busy putting the finishing touches to a tray of tea making essentials. Jun-Nui took the tray and carried it to the cabin. Xui-Li and the two women were sat talking. Jun-Nui put down the tray and started to pour out the tea.",
        "\"This is the one I was telling you about,\" Xui-Li said to Yin's mother. \"She was there; she fought alongside your daughter.\"\n\nYin's mother turned to Jun-Nui, her eyes red with crying.\n\n\"So young, you're all so young. Girls of your age should be thinking of young men and marriage, dreaming of babies, not fighting and killing. This war, it's so cruel, so very cruel. Tell, me child, did you know my daughter well?\"\n\nJun-Nui was slightly put out by being called 'child' but she could see the pain in the woman's face.\n\n\"I'd only just met her but...,\" Jun-Nui knew she had to say more, \"she had a good heart. She fought for what she believed and was very brave. Without her we would all have been lost.\"\n\n\"I lost my husband, my sons are all off fighting and now I lose my daughter. Who is to look after me in my old age? Tell me, your mother, where is she? Does she know what you are doing?\"\n\n\"My mother died when I was young,\" Jun-Nui replied. \"I never knew her.\"\n\n\"And your father?\"\n\n\"He... he...\" Jun-Nui was pushed for an answer. \"He lives a long way away. We were never close.\"\n\n\"You poor child! Alone in this big wide world.\" Yin's mother reached out and grasped Jun-Nui by the wrist, pulling her closer. \"Do not die alone. Find him, find yourself a husband and nurture him, whoever he is, do not die alone.\"\n\n\"Madam Chen! Calm yourself,\" the other women called out and she started to intervene but Xui-Li put her hand on the woman's arm to stop her.\n\nJun-Nui crouched down so as to be at the same level as the seated Madam Chen who reached out and hugged her close.\n\n\"Do not die alone,\" she repeated as she sobbed into Jun-Nui's shoulder. \"My poor Yin, she died alone, she never found him, she never found her man.\"\n\nJun-Nui just held Madam Chen until she stopped crying. They broke apart, Madam Chen feeling slightly awkward at her outburst.\n\n\"Perhaps you should serve the tea,\" Xui-Li said and, as Jun-Nui passed the bowls around, the cabin settled down again. When Jun-Nui had finished she bowed to the group and turned towards the door.\n\n\"Young lady,\" Madam Chen called out, \"thank you.\"\n\n\"It was an honour to have met your daughter,\" Jun-Nui replied and, somehow, she meant it.\n\nWhen, some time later, Jun-Nui returned to retrieve the tea tray. Madam Chen had gone and Xui-Li was alone in the cabin.\n\n\"Thank you,\" Xui-Li said awkwardly, \"thank you for being kind to Yin's mother.\"\n\n\"I was just...\" Jun-Nui started but couldn't finish. \"Is it always like this?\"\n\n\"We're at war, Jun-Nui, and people get killed. I wish there was another way but there isn't.\"\n\nJun-Nui busied herself with the tea bowls and had them neatly piled on the tray. She was just about to leave when Xui-Li stopped her.\n\n\"What are your plans?\" she asked. \"You're welcome to stay on the Ming-Xing. The boatswain will gladly accept you into the crew but... well... I mean....\"\n\nJun-Nui had never seen Xui-Li looking so uncertain.\n\n\"I've got to go upcountry,\" Xui-Li continued. \"I'm needed up in the hills. There is still a lot of work to be done and I can't stay here forever. I'd like it... I'd like it if you came with me. As my friend, as an assistant, I'm not assuming.... You'd have your own bed, your own space.\"\n\n\"And what if I don't want my own bed, or my own space?\" Jun-Nui said as she put the tea tray back down and stood in front of Xui-Li. \"What if I want you to assume? What if what I want is you?\"\n\n\"Then I'm yours,\" Xui-Li said simply. She held out her hands and Jun-Nui took them. For a moment they just looked at each other before, without consciously moving, they just melded together.\n\n\"I thought... I thought I'd lost you,\" Xui-Li said when they broke for air.\n\n\"And now you've found me again,\" Jun-Nui replied and, after that, no more words were needed.\n\nSix months later Xui-Li, Jun-Nui and Chu-hua were making their way across country to inspect some new recruits. Progress against the British was slow but steady. While, unfortunately, there would always be a need for military action, a program of sabotage was proving more effective and less costly in lives. Jun-Nui's blonde hair had grown out and the dye on her skin had worn off but she found that a short haircut and a wide brimmed hat allowed her to hide her colouring and, effectively her nationality and gender. Furthermore, for most of the time, she stayed in Xui-Li's shadow as her clerk and helpmeet. They were making their way through the town closest to one of the rebel camps when Jun-Nui spotted the building. Most of it had been rebuilt but there were soot stains on the walls and, although she had only briefly seen it from the outside, she was in no doubt as to what it was.\n\n\"That's it, that's the place,\" Jun-Nui hissed urgently to Xui-Li.\n\n\"What place?\"\n\n\"The brothel, the one where I was kept.\"\n\n\"Are you sure?\"\n\n\"I'll never forget that place,\" Jun-Nui said with passion.\n\n\"Chu-hua, how far away are the troops?\" Xui-Li asked after a moment's thought.\n\n\"About four or five li, perhaps,\" the bodyguard replied.\n\n\"Tomorrow, why don't we pick out a few of the better recruits and give them a training exercise. I think we ought to give this place a visit.\"\n\n\"Certainly, Ma'am,\" Chu-hua replied with a smile.\n\nJun-Nui could hardly wait but they had to ride to the encampment and official business came first. However, once that was done, Xui-Li outlined their plan to the commander.\n\n\"I'll get the sergeant to pick out some suitable lads,\" he replied. \"It will do them good to see some action. Shame though, I'll admit....\"\n\n\"You'll admit what?\"\n\n\"Well, Madam Hong, we're all a long way from home and....\"\n\n\"I'm not sure I want to hear any more,\" Xui-Li replied firmly.\n\nWhen the sergeant arrived Jun-Nui gave a little start. She recognised him; he had been quite a regular at the brothel and had chosen her more than a couple of times. For all his military ways he'd been kindly and gentle so Jun-Nui didn't hold it against him too much. It amused her that she hadn't been recognised but then, she was so far out of context that there was no reason for him to make the connection.\n\n\"Ah, sergeant,\" Xui-Li said, \"I'm planning a raid on the brothel back in Xiun. I intend to shut it down. I'll need a few troops, not too many. I don't suppose that it's particularly well guarded. I want reliable rather than keen, ones that aren't too trigger happy.\"\n\n\"Close down the brothel, Ma'am? Why would you do that?\" The sergeant was non-plussed.\n\n\"I do hope you're not questioning my orders.\"\n\n\"Of course not, Ma'am, it's just that....\"\n\n\"Come on, out with it.\"\n\n\"Well, Ma'am, it's a matter of morale. Some of the lads... well... I won't lie to you, it will be missed.\"\n\n\"Some of the lads and their sergeants, eh?\" Xui-Li said with a smile. \"And while you're 'boosting your morale' are you aware that the women working there are kept against their will, that they are effectively slaves?\"\n\n\"I've never got that impression, Ma'am. All the girls seem very willing.\"\n\n\"Because they're beaten if they're not,\" Jun-Nui cut in. The sergeant noticed her properly for the first time and, as their eyes met, there was a recognition. His face fell; it was well understood that Jun-Nui had a special relationship with Xui-Li, that she was more than just an assistant, and the sergeant blushed red at the implications of what he had just said.\n\n\"I'm sorry, Ma'am,\" he said to Xui-Li, \"I didn't know.\"\n\nXui-Li had seen the interplay between the sergeant and Jun-Nui and had come to her own conclusions.\n\n\"Hmm... I think, sergeant, that it might be an idea if you too were to join in this exercise. It shouldn't need too many. Let's say a dozen recruits along with yourself to be ready for sundown tonight. See to it, will you.\"\n\nWhen the sergeant departed Jun-Nui turned to Xui-Li and gave her a look.\n\n\"What?\" Xui-Li said in reply. \"Do you think I didn't see what happened there? I thought it might be good for him to come and see what really happens. Maybe he'll be nicer to the next one.\"\n\n\"He wasn't so bad, he never hurt me,\" Jun-Nui admitted. \"It's just that...\" The words trailed off. How could she explain the sense of disgust and shame?\n\n\"I understand, really I do,\" Xui-Li said gently. \"Maybe, after tomorrow, he'll treat the next one with more respect.\"\n\nThe raid, when it came, was simplicity itself. The small force was able to slip, unseen, through the night and the sergeant, posing as a customer, was able to get the front door opened and, after that, the brothel bouncers, used only to dealing with drunks, were no match for armed troops. In no time they had the bouncers, the girls and all their customers, gathered together in the main room, all in their various states of undress. The customers wanted to leave but Xui-Li insisted that they stay until things were sorted out.\n\n\"What's all this? What's all this? What is going on here?\" Lian kept demanding as the immediate rooms were emptied. \"I insist that you tell me what's going on!\"\n\n\"I think you'll find you're in no position to insist on anything,\" Xui-Li replied at last. \"Now, where's Yang?\"\n\n\"Madam Yang,\" Lian replied with heavy emphasis on the 'madam', \"is indisposed at the moment and not available. In her absence you will kindly deal with me. Once more, I must insist that you state your business.\"\n\n\"I have some matters to discuss, matters about the way 'Madam' Yang runs her business, matters concerning the circumstances under which these,\" Xui-Li indicated the girls, \"these women are employed. I have good reason to believe that they are here against their will.\"\n\n\"What outrageous nonsense! How dare you barge in here making such ridiculous allegations?\" Lian blustered.\n\n\"How dare you!\" Jun-Nui retorted, stepping out from behind Xui-Li and removing her hat.\n\n\"What's it to do with...\" And then the penny dropped. \"Guizi-Nui! What are you doing here? I thought... We thought....\" Lian looked at Xui-Li. \"Do you realise, Madam, that this British,\" she spat the word, \"girl is a liar and a cheat who used to work for me but ran away after stealing from the other....\"\n\n\"Guizi-Nui! Guizi-Nui! You're alive! Oh my, you're alive! We've missed you so much! We thought... we all thought... Lian said that you died in the fire!\" Jia-Li, ignoring the troops, the guards and Xui-Li, pushed Lian to one side and dashed over to hug and kiss Jun-Nui. She was quickly followed by the rest of the girls who gathered around in a huddle, eager to hear her story.\n\n\"It's true then, you escaped, you really escaped!\" exclaimed Mei-Zhen. \"We dreamed, we wished, we hoped... Oh! Guizi-Nui!\"\n\n\"And having escaped you had to come back and rescue us!\" Sangeeta added. \"Oh, Guizi-Nui, we're so glad to see you!\"\n\n\"You were saying?\" Xui-Li asked Lian.\n\n\"Please, Madam,\" Lian fell to her knees in front of Xui-Li, \"I beseech you, I am but a poor subordinate here, working under orders from Madam Yang, who owns this place and recruits the girls. Unfortunately, she is not here tonight.\"\n\n\"Not here tonight,\" scoffed the cook, who, realising which way the wind was blowing, reckoned that she might have a better chance of pulling off the 'only following orders' excuse if she cooperated. \"I think you'll find she's in her quarters around the back. If you would like to come with me I'll show you where she'll be hiding.\"\n\n\"Jun-Nui!\" Xui-Li called out. \"If you can pull yourself away from your friends for a moment, tell me, who is this woman and can I trust her?\"\n\nJun-Nui looked up from her gossiping and over at the cook.\n\n\"She... she's the cook,\" Jun-Nui said slowly, mulling over the 'can I trust her' bit. \"She was our jailer but... well... she looked after us properly and she was never cruel. I'm not sure how far I'd trust her but she's not Lian or Yang. They're the guilty ones here.\"\n\n\"Not exactly a ringing endorsement,\" Xui-Li commented to the cook, \"so you'll have to work hard to keep in my good books.\" She turned to her bodyguard. \"OK, Chu-hua, go with this woman and find Madam Yang, will you?\"\n\n\"Guizi-Nui,\" Lian pleaded from the floor hoping that she might get the same clemency, \"what about me? Did I not also look after you?\"\n\n\"You!\" Jun-Nui was incensed by Lian's presumption. \"You made my life, all of our lives, a living hell, and you know it. There's not one of here who has not suffered under you. You only saw us as a way to line your pockets. You never cared for us, you only cared for the money we could make.\"\n\n\"And what then we should do with her?\" Xui-Li asked. \"The girls, they are free to return to their families. I will arrange passage where necessary but, this one,\" Xui-Li pointed at Lian, \"what were you plans for this one?\"\n\nJun-Nui, so enthralled at the prospect of charging in and saving the day, hadn't actually thought past this point. She was sure that Xui-Li would have done and wondered exactly what her plans were.\n\n\"Excuse me, Madam,\" Sangeeta cut in, \"about going back to our families....\"\n\n\"I can probably help you get back to India,\" Xui-Li replied.\n\n\"It's not getting back to India that's the problem, it's what happens when I get there. I can't return, not to my old life. Because of what we are, what we have been, I will be an outcast. I have no honour, no purity. My family will never have me back and, surely, no man will ever want me.\"\n\n\"It will be the same for all of us,\" another added. \"I mean, I want to see my family, of course I do, but, were I to return all I would have waiting for me is a life of shame and dishonour.\"\n\n\"And what about our futures? What sort of boy will want to marry a whore? For that matter, after what we've seen, I'm not so sure I'm in a rush to get a husband. We all know what men want and, when they become husbands, they think that it's their right, they don't even pay for it.\" Everyone was joining in now and none seemed that anxious to return to their previous lives.\n\n\"Please, please, we can sort all this out later,\" Xui-Li said as the conversation threatened to get out of control. She was saved by the return of Chu-hua, accompanied by Madam Yang who, looking around and seeing Lian and the bouncers held at gunpoint, thought that they were being robbed and fell to her knees.\n\n\"Please, whoever you are, I have money, I will give you everything I own, just spare my life,\" she begged.\n\n\"Your money! You think I'm here for your money! I'm here for justice. I fight for freedom and that is exactly what you deny these women. Slavery to the British or slavery to scum like you, I will fight them both. My only question now is how you should pay penance. What retribution is appropriate for destroying these women's lives?\" Xui-Li drew her revolver and pointed it at Madam Yang's head. \"In times like this I must be both judge and jury.\"\n\n\"No!\" Jun-Nui called out. \"I hate her with all my heart but not that.\"\n\n\"What then? What retribution would you bring? How should this monster pay for her crimes?\"\n\n\"Please, Ma'am,\" Jia-Li spoke up, \"I might have an answer to both our problems. \"We need work and somewhere to stay. Why not here? The work may be hard but, at least we know it and, when we can choose our customers, and take our proper rewards, it will be a lot better. In the meanwhile, is there any better justice than to give the perpetrator a dose of their own medicine? This place is designed to act as a prison and every brothel needs a maid, or two,\" she looked meaningfully at Madam Yang and Lian. \"I'm sure that we girls will take some satisfaction in acting as their jailers.\n\n\"And is this just you or are any others of like mind?\"\n\nThere was a certain amount of discussion among the girls and, whilst far from unanimous, there were enough in agreement to make the plan work.\n\n\"And what about the bouncers, and the cook?\" Xui-Li asked.\n\n\"They need jobs too,\" Jia-Li replied, \"and we need them. I think we can trust them to know who's in charge, these days, especially when,\" she sidled over to the sergeant and cuddled up to him, \"especially when I'm sure my flopsy-wopsy will come into town to check up on his favourite bunny-wunny from time to time.\"\n\nEverybody laughed, well, except the sergeant who blushed beetroot, but the point was well made. The brothel was well used by the local brigade and, now that they knew the setup, the girls would have backup should they need it.\n\nAnd so it was agreed. The customers were let go, and told to come back tomorrow when the brothel would be back in business. Madam Yang and Lian were stripped of their clothes and their dignity and, when attired as maids, assigned to more suitable duties. After that, all could relax and, if some of the girls and some of the troops were a little friendly towards each other, there was no one to make any complaints. Xui-Li took Jia-Li off to one side and discussed the practical side of running the brothel and of acting as jailer to Madam Yang and Lian. The more they chatted the more Xui-Li was impressed by Jai-Li's practical approach and straightforward attitude.\n\n\"I gather you and Jun-Nui were close,\" she said once she was satisfied at the arrangements.\n\n\"We kept each other warm on cold nights,\" Jia-Li replied, \"but I always knew there was someone else, someone she really loved.\"\n\nThere was a moment's silence.\n\n\"Thank you for looking after her.\"\n\n\"My pleasure. Now, how about we return to the party and have a drink?\"\n\nThe first light of dawn was in the sky by the time the troops made their way back to the camp. As they rode home Xui-Li arranged it so that she was riding next to the sergeant.\n\n\"It looks like it's not the end of your 'morale boosters' after all. I'd appreciate it if 'flopsy-wopsy' could make regular reports from now on, private and for my eyes only. I'd hate to think of anything happening to those girls. And, if they need any help with anything....\"\n\n\"Certainly Ma'am, I understand,\" the sergeant replied.\n\n\"And the rest, as they say, is history,\" Jun-Nui sat back in her chair, exhausted.\n\n\"But you can't end there!\"\n\n\"I can and will, young lady. I'm tired and it's time for you to go. If you want any more you'll have to look in your history books.\"\n\n\"But... but... what happened to Mei-Xing? And why, when she was so much part of the revolution, did she disappear afterwards?\"\n\n\"The communists,\" Jun-Nui replied. \"That's the answer to both your questions.\"\n\n\"Please, you have to give me more than that.\"\n\n\"OK, but this is the last of it. As you know, after the British left, the communists moved in. Xui-Li tried to work with them but, in the end, it was never going to work. We...err... she made a deal and we were allowed to slip quietly away as long as we stayed away. We found this little house in the hills where we could both live quietly and that was that. We don't trouble them and they don't trouble us. It's not perfect but few things in life are.\"\n\n\"And Mei-Xing?\"\n\n\"I always wondered what happened to her, well, up until the fifties when there was that dreadful series of purges. That's when we saw her, right there in the papers. It was yet another report on 'disgraced party officials' and, along with the story there was a photograph. She'd changed her name but it was her, right enough. Apparently she'd risen to power in one of the communities and, when the purges came, she didn't have the gumption to keep her head down. My guess is that, once again, she'd backed the wrong faction. Anyway, she was arrested for treason and that's the last of it. Well, we don't know for certain, but we still get gossip from across the border and those arrested for treason never faced trial and never came back.\"\n\n\"So, when the communists took over you moved here. That means Madam Hong must be here as well? How is she? Is she still...\" Jenny's excitement was palpable.\n\n\"My dear girl, she was a good few years older than me and, well, time takes its toll.\"",
        "\"Oh, I'm so sorry.\"\n\n\"You mustn't be. We had a long and happy life together. And that's enough. This time I must insist. If you're to make it back before nightfall then you really must leave. I'll call for your guide.\" Jun-Nui stood up and went to the edge of the stoop to call out for Jenny's guide.\n\n\"Thank you, thank you so much,\" Jenny gushed as she gathered up her papers. \"I just have one more question....\"\n\n\"No, no more,\" Jun-Nui laughed. \"I am not answering any more questions, you've had your lot. Now off you go.\"\n\nJun-Nui was adamant and, although Jenny tried hard, she wasn't going to get any more answers. With a grateful 'thank you' she was led away, her mule picking its way down the track away from the house.\n\n\"Is it safe to come out now?\" Xui-Li asked as, tottering slightly and leaning heavily on her walking stick, she came out onto the stoop.\n\n\"Yes, she's gone. Come on out.\"\n\n\"Pretty girl, wasn't she?\"\n\n\"Was she, I didn't notice.\"\n\n\"Liar!\" Xui-Li laughed. \"You were flirting like crazy.\"\n\n\"I still don't understand why we did this. Especially why I had to imply you're dead.\"\n\n\"You heard the girl. Apparently I'm some sort of hero but I'm an old hero and I just want to be left in peace. We've been left alone all these years and, now that the 'bamboo curtain' is coming down, I don't want any more youngsters seeking their long lost heroes. Talking of being left alone, you spent all afternoon with her.\"\n\n\"Is my 'old hero' missing her geisha? Come on then, let me show you how much I still love you.\"\n\n\"Less of the old, my dear, less of the old....\"\n\nAnd, arm in arm, the two women made their way back into the house."
    ],
    "authorname": "MissLisaJones",
    "tags": [],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/a-tangled-web-ch-12"
}