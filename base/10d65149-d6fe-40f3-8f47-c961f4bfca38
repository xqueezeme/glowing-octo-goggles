{
    "title": "Cosplay",
    "pages": [
        "This is the story of a girl with a fetish, inspired by the genre of cosplay within Japanese adult video idols. All of the characters in this story were at least 18 at the time of their actions.  Finally, most importantly, my thanks to StoryPal for his considerable help in editing.\n\n- - - - - - - - - - - - - - - - - - - -\n\nMadeline Hemming was one of Dr. Lowenstein's latest patients. She was an upperclasswoman, a junior, 20 years old, in her third year at Templeton College, and she had finally decided to do something about her problem; her secret problem. She lied down on the doctor's couch.\n\nDr. Lowenstein spent the initial part of their first session gathering basic history, and then asked why Madeline had come for treatment. The doctor had already read the intake forms that Madeline had completed, but it was always best to have the patient describe the problem for himself, or herself.\n\nMadeline explained that she loved to play dress-up as a little girl. It was one of her favorite games. The princess costume was perhaps the one she liked the most. What girl doesn't like being a princess? But, she liked them all: prom queen, fairy, bride, angel, teen disco girl. Her Barbie costume was a close second to the princess costume. She really did like playing Barbie, as she could pretend that the real Barbie doll was her little sister and they would go out shopping together for, of course, new outfits. She really admired Barbie so much, as she had so many, many, many different outfits. There was her silver dress, her tangerine Oscar dress, her Barbie darling dress, her contest winner dress, her waltzing dress, her golden girl dress, her rose dress, her silver star dress, her shimmering gown dress, her sleek and dazzling dress, her belly dress, her sophisticated dress, her summer dress, her wonderful white dress, her falling leaves dress, her pink silk dress, and her designer evening gown dress. It just never seemed to end. She particularly liked Barbie's pink and pretty dress. She sometimes went to sleep dreaming that she could grow up to become a Barbie doll.\n\nWell, it wasn't surprising that her interest in costumes continued into adulthood, albeit transformed. Being an adult provided another layer of complexity, or more accurately, pleasure, to her interest in costumes. It was like the child who loved puppies becoming a veterinarian. Well, it wasn't quite like that. For Madeline, the outfits now had a degree of sexual undertone to them. Actually, they had a substantial degree of overtone. Madeline really loved cosplay, dressing up in a costume that defined a specific role, and then going out in public and playing that role, seeing if you could get away with it, not get caught, as you pushed the limits of the role into some form of sexual indiscretion. One might even say that she was obsessed with it.\n\nMadeline in fact chose Templeton College largely because everyone came to class wearing a costume. The college administration called it a uniform, but it was pretty close to her own school girl costume: white blouse, black tie, plaid skirt, white socks, black Mary Janes, and even white cotton panties. She thought the white cotton panties was a really dedicated, authentic touch, the sort of special detail that she gave to her own costumes. Nobody was supposed to see your panties, yet the administration saw fit to have each girl wear white cotton panties. She was impressed.\n\nShe thought now though of transferring. She had been attracted to Templeton in large part because the college seemed to embrace cosplay. But, it wasn't too long before she realized that it wasn't that much fun wearing the same darned costume day after day after day after day.\n\nMore importantly, her cosplay was becoming a bit of a risky problem in life. She explained why to Dr. Lowenstein.\n\n\"Doctor, this is all confidential, isn't it?\"\n\n\"Oh yes, dear, very much so. I would only break confidentiality if someone was in imminent danger of injury or death.\"\n\nIt wasn't that Madeline found her admission to be particularly embarrassing. She wasn't at all ashamed about what she did. Her concerns were more immediate and practical. \"So, like, um, if I admitted to breaking a law, or something, not that I would. I'm just askin' hypothetically like, you know. If I admitted to doing something illegal, you know, you wouldn't call the police?\"\n\n\"I wouldn't. In fact, even if I wanted to do that, which I wouldn't, I would risk losing my license. You could get me into trouble.\"\n\nThat was reassuring. She did though still look around the room, as if there might in fact be someone there. Once fully reassured, she began her story.\n\nCosplay was not an easy fetish, or game, as Madeline preferred to describe it. First, it took a good amount of work and skill to create a good costume, as well as a few pennies. One wanted, of course, a costume that would be fun and sexy to wear, as well as to see. Madeline was more than willing to put in the work. She felt considerable pride in creating a good costume. She was an artist of fashion. The pennies (more like dollars) were a problem, but she would usually manage to scrape together the necessary bits and parts by scouring reclamation stores.\n\nCosplay also required a bit of acting skill, and a substantial amount of planning and preparation, as well as courage and daring. One could at times go in blind to a new site and target, particularly if one wanted to experience novel and idiosyncratic shifts in the game. But, this could also be rather reckless. Cosplay was inherently risky because there was always the danger of getting caught and exposed, and some cosplays would be considerably costly if the deception was discovered. Dressing up in costumes had been fun as a child, but the risk in going out into the world in costume contributed to its fun as an adult. All of this: the skills, the acting, the adventure, and the danger, was what made it so satisfying, so enriching.\n\nCHEERLEADER\n\nMadeline first told the doctor of a cosplay involving one of the more traditional costumes: the cheerleader.  She decided it was best to begin her story with a costume that wasn't really so bad or risky.\n\nIt is not difficult, of course, to obtain a cheerleading costume. Madeline though needed one that would pass as a Templeton cheerleader, and the college didn't simply offer these uniforms at the local bookstore. An official uniform had to be ordered through a licensed distributor that carefully screened all purchases for official authorization.\n\nMadeline was eventually able to garner all of the necessary components from various sources, some of which were, let's just say, less than exactly sanctioned. It was, though, an indiscretion that she felt should be excusable. She wasn't planning on using her uniform for any destructive, harmful, or exploitative purposes. Well, that wasn't entirely true, depending upon how one understood the word, \"exploitation.\" The risk, though, was part of the excitement, an integral part, going out into the world dressed in your costume, pretending to be someone you're not, enjoying the fruits of that role, and escaping detection. It was often really very exciting.\n\nWhen leaving her apartment she would usually wear a large coat over her costume. A cheerleading costume would not arouse much suspicion among her neighbors, but she didn't want them to ask her about it, and she certainly didn't want them to eventually realize that she was leaving her apartment in various costumes. That would suspicion, and inquiry.\n\nShe drove to her location. Madeline had carefully investigated and scouted her site in advance. There was no physical or legal danger with this particular cosplay but there was appreciable risk with respect to her status as a Templeton student, and certainly with respect to her relationship with her parents. They would probably never understand her interest, her obsession, in cosplay.\n\nOnce she arrived at her destination she parked her car, removed her coat, and entered the Templeton Athletic Center.\n\nThe athletic center actually included only a few locations for athletic activities. There were a few handball courts, a work-out room, and an undersized basketball court. It was primarily a set of offices for various coaches, managers, staff, and assistants. Madeline attracted little attention as she wandered through the halls in her Templeton cheerleading uniform, other than the usual \"smiles\" from men who appreciated her school spirit, and striking figure. Cheerleaders were one of the few students allowed to wear something other than the Templeton uniform on campus. It was an exception that nobody protested, particularly the male faculty.\n\nMadeline filled out a cheerleading uniform extremely well. She was a rather petite girl, always a plus for a cheerleader who needs to be tossed high into the air. But, she was disproportionately large \"on top;\" in fact, very much so, which was another very nice attribute for a cheerleader, so she felt. At least, she certainly filled out well her white sweater with the school nickname, \"PURITANS,\" blazoned across her chest in large red lettering. The letters stretched and curved across her thrusting breasts, as the sweater was filled beyond capacity.\n\nThe particular risk at this moment was coming across an actual cheerleader, or someone who knew the squad. She was not, though, too worried. She had conducted a few trial runs, and not once had she come across a cheerleader on this side of the athletic center. In fact, a number of persons greeted her with smiles. She would wave back with one of her red pompoms, give them a big large smile, along with a very cheery greeting. Her heart though was racing at the thought of getting caught. She felt like she was some sort of spy, working undercover, infiltrating an enemy organization. She so much enjoyed cosplay.\n\nIt did not take long for her to get to her final destination, the office of Jackson Jones or, he preferred, Jack. She knocked on the door.\n\n\"Yes, come in.\"\n\nShe took a deep breath and began her play.\n\nShe opened his office door part way and peeked around. \"Mr. Jones?\"\n\n\"Yes?\" Jack replied. Jackson Jones was a junior assistant to the football coach. He was in charge of securing tapes of the games of opposing teams, and then editing them to highlight particular plays and players. It was pretty important work, although at times tedious.\n\nThe pretty girl peeking around his door asked, \"Do you have a moment for me, sir?\"\n\nHe really didn't. Well, actually, he did. Nobody is really that busy at Templeton. It wasn't like they were at Longwood. But the Coach did want an edited tape of Longwood's last game. Templeton had not been able to beat Longwood for sometime now, and rumor had it that the Coach would be looking for a job if he couldn't beat them at least once. Still, it wasn't like Jackson was on the verge of discovering the cure for cancer. He could free up a minute or two for a student. And, besides, this one was rather pretty. She had long dark hair, very large, twinkling brown eyes, and an engagingly cheerful smile. He could use a break from the drudgery of reviewing and editing tapes, and a brief moment with a pretty undergraduate never did hurt. \"Sure, sure, come on in.\"\n\n\"You're so cool, Mr. Jones,\" she gleefully and gratefully replied, and pranced into his office.\n\nAs soon as she entered, Mr. Jones was glad that he had decided to see her, as she was a sight to see indeed. She was a cheerleader, and a very enticing one at that. She was a pretty little minx, and one with such large tits that quite noticeably jiggled as she almost leaped into his office. Cheerleaders were known for being amazingly exuberant, energetic, and enthusiastic, and this one was certainly no exception. All of the teeth showed with her smile, and her breasts just seemed to be bounce and bobble with enthusiasm, like they were wiggling with excitement.\n\nShe went right up to him, shifted the pompoms and her purse into her left hand, and held out her right. \"Mr. Jones! Hello! I'm Diane, Diane Weston.\"\n\nThey shook hands. Her eyes were firmly fixed on his. His were trying hard not to look down at what was wiggling beneath her eyes.\n\n\"I'm so grateful for this opportunity! I know how busy you are and everything, like I don't want to bother you or nothing, it's just that I really, really, really need to talk to you and everything, and so, well, I just had to come over, and so, well, here I am!\"\n\nHe had no idea what a cheerleader could possibly want to talk to him about. He had nothing to do with the cheerleaders, regrettably so. \"Yes, well, it's nice of you to stop by, naturally, but I'm not sure what it is you want, of me.\"\n\n\"Oh yes! Of course! How silly, how just so stupid of me.\" She shifted one of the pom poms back to her right hand. \"I'm such a ditz! I'm so, so sorry. Yes, how would you know? Let me explain.\"\n\nIt wasn't like he was trying to stop her from explaining. He waved his hand for her to get on with it.\n\nShe laid down her pompoms and explained her predicament, all the while fixing and fussing with her hair, pulling her long brown strands back over one ear, as she tilted and turned her head, giving him different looks, different poses, all of which seemed a bit flirtatious. It was like she just couldn't get her hair in the precise way she wanted it, due in large part to her continuously tilting and tipping her head, causing her hair to again fall back over her face. He wondered if all this self-conscious energy was nervousness or just a way to draw attention to her hair, her face, her eyes, her prettiness. \"Oh yes, yes, thank you. Well, you see, sir. I'm not actually a cheerleader. I mean, I was in high school, but not here, not yet.\"\n\nWell, she sure looked like a Templeton cheerleader. She was wearing a Templeton cheerleader sweater, and the traditional pleated skirt, with the red and white alternating stripes, white socks, and white tennis shoes.\n\n\"I know I look like one. Don't you think I look good?\" She dropped her purse, picked up the pompoms and gave him a little pose, holding the pompoms high above her head, and thrusting out her chest.\n\nDid cheerleaders really know how sexy they looked? Of course they must. But, it was a bit of a loaded question. She did look extremely nice. He just didn't want to explain why. He nodded his head.\n\n\"Don't you think I would make a good cheerleader? I think so. I mean, I would look really good as one, don't you think?\"\n\n\"Yes, yes, I do.\" He was a bit confused. If she was not a cheerleader, what was she doing in a cheerleading uniform?\n\nShe smiled broadly, like she was so, so glad, so relieved, to hear him say that. \"Oh, I think so too! Everyone says I have good milkshake. I knew it was the right thing to come to you.\"\n\nHe still didn't understand, and he certainly had no idea what she meant by 'milkshake,' but he couldn't help but wonder if she was referring to her big tits. What could he possibly offer this girl? \"Yes, well, um, what can I do for you?\"\n\n\"Oh Mr. Jones! Don't be so silly. You know,\" she asserted.\n\nHe certainly did not know, that was why he was asking her.\n\n\"I'm trying out for the squad, and I just wanted to come, like, and talk to you about it, you know.\" She said, more quietly, \"Personally, and everything.\"\n\n\"Um, yea, okay,\" he replied. He was of course quite willing to talk to students about their concerns and problems, but only the football players actually ever did approach him. He did wonder, though, what she meant by \"personally?\"\n\n\"I'll be happy to talk to you.\" Even if she made no sense, he would have to enjoy talking to a cheerleader, particularly one with breasts as big, beautiful and bouncy as these. It wasn't right, of course, to give preferential time and treatment to students simply because they were pretty girls with large boobs, but you couldn't deny the pleasure of their company. And it wasn't like he was setting a precedent he couldn't subsequently follow. He'd be happy to help any cheerleader.\n\n\"Cool! You see, Mr. Jones, I really, really, really want to be a cheerleader and I thought that it wouldn't hurt if I talk to you about it, and like maybe you could put in a good word for me, or something, you know.\"\n\nNow he understood. She apparently thought that because he was affiliated with the football team he might have some connections with the cheerleader squad. He wasn't really sure why she would make such a connection, and he seriously doubted that any good word from him would be at all helpful. Heck, he didn't even know to whom he should speak. He could find out, but even if he did, why would they care what he had to say? He was an assistant coach, with no actual authority or influence over anyone, even the football players. His authority went no further than obtaining and editing game tapes.\n\n\"I mean, like, you're in the football program, and everything. They'll listen to you.\"\n\n\"Well, I don't really know about that.\"\n\n\"Don't be so modest, sir,\" Madeline replied, stepping up even closer to him and resting a petite, soft, feminine hand on his shoulder, her breasts towering before his eyes. \"You're a coach on the football team. They'll have to listen to you.\"\n\nHe wondered if he should disavow her of this misunderstanding, but how often does an attractive girl, and one with big tits, tell you how big and important you are. It was nice to finally have someone think he was consequential, significant, a man with important connections. He just shrugged.\n\n\"For sure, Mr. Jones. Here, let me show you.\" Madeline stepped back to demonstrate her cheerleading skills.\n\nShe dropped her pompoms and said, \"Clap your hands!\" She clapped three times.\n\n\"Stomp your feet!\" She stopped her left, her right, and then her left foot again. It wasn't much of a cheer, but those breasts were really bouncing around under her sweater. He seriously questioned whether she was even wearing a brassiere. But, how could you have breasts that large and not wear a brassiere?\n\nShe picked up the pompoms and alternately thrust out each one, at each syllable, saying, \"Puritans can't be beat!\"\n\nHer bounding bouncing breasts bobbled around, kind of following the lead of the pompoms, but adding their own fascinating twists, wobbles, and wiggles, like they had a life of their own. His dick twitched instinctively.\n\nShe yelled while dropping down on one knee. \"Go red, go white!\" There was again more bouncing and bobbling. Jack had to wonder if the cheer was designed to bring her breasts expressively into the routine, highlighting their importance, generating fan spirit.\n\nShe added, shifting to the other knee, \"Come on team you can do it!\"\n\nShe leaped back up onto her feet and then went down into splits, her breasts bobbling mightily, \"Just put some power to it!\"\n\nAnd, while throwing both hands up in the air, she finished, \"Goooooooo Puritans!\"\n\nShe paused, smiling broadly, her arms still outstretched, her breasts floundering around and then slowly jiggling back into position. She asked, \"What do you think? Awesome?\"\n\nActually, he wasn't terribly impressed. Well, that's not true. He was very much impressed with her breasts, and she was certainly very pretty. But, it wasn't a particularly impressive cheer, although he wasn't too sure that any cheer was necessarily that impressive.  \"Yea, that was good, Diane. It was real good. I think you'd be a real good cheerleader.\"\n\nHis tone lacked any obvious enthusiasm.\n\n\"It wasn't very good, was it.\" She dropped her hands down, although remained in her splits.\n\n\"No, no, it was fine. It was good.\"\n\n\"It's because I have brown hair, isn't it,\" she said, shifting the pompoms into one hand while she self-consciously fingered her long strands, curling them around and around a finger.\n\n\"What? No! Not at all!\" He was sincere about that. He hadn't thought about the color of her hair at all. Although, now that she brought it up, he did wonder if she would be even prettier if she was a blonde. Blondes do make good cheerleaders.",
        "She got back up on her feet, feeling a little deflated. \"Head cheerleaders are always blonde.\"\n\n\"That's not true. Is it?\"\n\nShe started counting them off on her fingers. \"She was blonde in 'Bring it On,' 'Super and Spice,' 'But I'm a Cheerleader,' 'Cheerleader Beach Party,' 'Splitz,' 'Revenge of the Cheerleaders,' 'The Swinging Cheerleaders,' 'Cheer!'\"\n\n\"Okay, okay.\" He was willing to concede the point. \"But, aren't there always cheerleaders with brown hair?\"\n\n\"Yea, tokens. Affirmative action quotas.\"\n\n\"I seriously doubt that.\"\n\n\"Do you think so? I mean, do you really think I'd have a chance?\"\n\n\"Absolutely, definitely. You look very good, honest.\"\n\nShe took a deep breath, her breasts filling up like balloons, standing even higher on her chest. She let the air out in a big sigh, an exasperated sigh. However, one could hardly say that her balloons actually deflated.\n\n\"I don't know. I've tried so hard. I've practiced so hard. I even bought a uniform and everything.\"\n\n\"Well, c'mon, cheer up,\" a rather ironic remark, he felt. \"I mean, have you even tried out yet?\"\n\nShe looked dejectedly down at her feet. He wondered if she could even see them past those breasts. One foot traced little circles with her toes. She wrung her hands. She dejectedly confessed, \"Yea, last year. I didn't make the cut.\"\n\n\"Oh,\" he said softly. \"I'm sorry.\"\n\n\"Yea, so was I.\"\n\nThere was a moment of awkward silence. He didn't really know what to say. \"Well, you know, not everyone can be a cheerleader. I mean, is it really that important?\"\n\nShe raised her head, her eyes widened in shock. \"Oh, Mr. Jones! How could you say such a thing? Cheerleading is everything, and it can really make a big difference. Lots of famous people were cheerleaders, you know. It's not like we're all just a bunch of bimbos or anything. Cheerleading can be the first step to a real big career!\" She started to count them off on her fingers. \"Ann Margaret, Paula Abdul, Jessica Simpson, Marilyn Chambers, Kirstie Alley, Patty Hearst, Natalie Maines, Lindsay Lohan, Brooke Shields, Ann Margaret, Calista Flockhart, Madonna, Sally Struthers, Cheryl Ladd, Britney Spears, Alicia Silverstone, Raquel Welch, Vanna White.\"\n\nShe wasn't actually making a strong argument for the absence of 'bimboism.'\n\n\"Sandra Bullock, Lily Tomlin, Halle Berry, Cameron Diaz, Katie Couric.\"\n\nWell, now the list was becoming more impressive.\n\n\"Jamie Lee Curtis, Cybill Shepherd, Meryl Streep, Ruth Bader Ginsburg!\"\n\n\"What?'\n\n\"Yea, that one is kinda surprising, even to me.\"\n\nMr. Jones really didn't know what to say or do. It was indeed a striking list, but he really didn't think there was anything he could do to help her, or to say, other than that she should just keep trying. Heck, that was the mantra of the Templeton football team, and it didn't seem to be doing them any good.\n\nShe looked back down to her feet and said, quite softly, keeping her eyes fixed on the floor, \"You know, Mr. Jones, I will do just about anything to be a cheerleader.\"\n\n\"Excuse me?\" He wasn't at all sure he understood her correctly, but his dick twitched again at the potential implication.\n\nShe moved up closer to him again, standing right before him, her eyes now looking directly into his.\n\nHe looked up into her eyes, which shined so sweetly and innocently above those jutting twin towers.\n\n\"I want to be a cheerleader so terribly bad. Really, I will do anything, anything at all.\" She bit her lower lip, as if she was terribly nervous about what she was saying.\n\nYes, he had heard her correctly but, tempting as it was, he certainly did not want to mislead the young lady. \"No, no, no. I don't have anything to do with the cheerleading squad. In fact, really, I don't think I could be of any help.\"\n\n\"Now you're just saying that, aren't you, Mr. Jones, cause you don't want to disappoint me, cause you don't want to put in a good word for me. You really don't think I could be a good cheerleader.\"\n\n\"No, no really, I swear. I don't even know who to talk to about it.\"\n\n\"You can be honest with me, Mr. Jones. I will understand if you feel like I'm not good enough.\" She looked away from him to ask the next question. \"Mr. Jones, can I ask you a most terrible secret question?\"\n\nThat didn't sound good. He felt though that he could hardly refuse to answer a question. \"Yea, okay,\" he said, hesitantly.\n\n\"Um, well, it's not an easy question to ask.\"\n\nHe really didn't want her to ask this question. \"That's okay.\"\n\n\"Well, okay, but you have to look away. I don't want you looking at me when I ask.\"\n\nWhat could she possibly ask that would be so embarrassing? Was she about to confess to some sort of crime? \"Okay, sure,\" he replied, and swivelled his desk chair away from her.\n\n\"You're not looking?\"\n\nHe absolutely was not. \"No, no, I promise.\"\n\n\"Well, okay, okay. And, um, don't laugh.\"\n\nNow he in fact did want to hear the question, although he wasn't too sure he would want to answer it. \"I promise. I won't.\"\n\n\"Okay. Okay. Okay, my question is, well, um, Mr. Jones.\"\n\nHe was feeling like he was tingling in anticipation. Just spit it out already!\n\n\"Yes, well, alright. Mr. Jones, do you think my breasts are too big?\"\n\nHis eyes widened. Thank goodness he wasn't looking at her, as his shock and discomfort would be so apparent in his eyes. \"Excuse me?\"\n\n\"I mean, I do like them and everything, but do you think they're too big, you know, for cheerleading?\"\n\nActually, now that she mentioned it he did wonder about that. They did fly around a lot when she was doing her cheer. Perhaps her boobs would be a problem, at least for parents watching the game. But, he had appreciated, at a certain level, the way they had bounced, wiggled, and waggled. Still, how do you tell a girl that? And, besides, he didn't really know. Her breasts were really, really big, but it wasn't like they were ridiculously humongous or anything. \"No, no, I don't think they are.\"\n\n\"Well, I guess you actually can't tell if you aren't looking at them, can you.\"\n\nHe didn't say anything, but it was a very good point.\n\n\"Well, okay then. You can turn around.\"\n\nHe swivelled his chair back around, to face her, to face her breasts, to which his eyes immediately went.\n\nMadeline was thrusting her chest out to give him a good look. They were big. They were so very big, perhaps looking especially big because she was such a diminutive, petite girl in every respect other than her breasts. No, these breasts would look big on any woman. But, could they really be too big? Was there a regulation for cheerleader boob size? Wouldn't you predict that cheerleaders' breasts are larger than the average breasts? Where would you look that up though? Wikipedia wouldn't have that information, would it? In any case, Diane's would draw some attention, but isn't that all part of the purpose of cheerleading? Aren't cheerleaders supposed to draw attention, to be pleasing to the eye, and his eyes were really very pleased by these.\n\n\"You don't have to stare at them, Mr. Jones!\"\n\n\"I'm sorry,\" he replied and looked somewhere else, anywhere else, but they did seem to stay in his line of vision. It was like the proverbial elephant in the room, but this time there were two of them. You really couldn't ignore them, especially now that they were the point of conversation. He was confused. She wanted him to look at them, but doing so seemed so offensive, so insensitive, so wrong.\n\n\"Here, let me give you a better look,\" she said, and began to pull her sweater up.\n\n\"What? Wait! Wait! What are you doing?\" This wasn't right, was it? His heart began to race, for a number of reasons, not all of which were good.\n\nShe didn't slow one bit, replying as her taught white tummy came into view, \"You really can't tell through the sweater.\"\n\n\"Girl! Diane! No, no, wait, someone might come in.\"\n\nBut, she didn't listen. She leaned forward, the sweater pulling up past her breasts, which flopped out like two humongous mammaries, hanging, swinging, begging to be milked.\n\nJack reveled in the realization, the concrete revelation, that the girl wasn't wearing a bra. Naked breasts were always a delightful sight, no matter their position, their posture. But, there was something uniquely appealing when they were hanging down, like udders. They filled up so wonderfully well, like water balloons stretching and straining, as if these jugs of milk actually needed any accentuation in size.\n\nMadeline pulled the sweater up past her face, but it got caught there. \"Darn it!\" She pulled, wiggled, and struggled to get it over her head, her breasts all the while joggling, waggling, and bobbling in the open air.\n\nJack's cocked swelled with appreciation, and with her face covered he took the opportunity to grasp his cock through his slacks, not only to provide a much desired squeeze to his rapidly growing erection, but also to shift the position of his dick so that it could comfortably expand and grow within his boxers. He wondered, briefly, if he should offer to steady her by grabbing hold of those bulbous bobbling boobs. At the same time, he glanced nervously at the door, beads of perspiration quickly forming on his brow as his eyes tried to watch the door as they also continued to enjoy the more pleasing view of those swinging, jostling, wiggling mammaries.\n\nMadeline abandoned her effort to get the sweater off and stretched her arms straight out from her body. \"Here, help me Mr. Jones, pull it off, pull it off my arms.\"\n\n\"I really don't think.\"\n\nShe interrupted him. \"Hurry, I'm smothering in here!\"\n\nHe was really very uncertain as to the appropriateness of this. Actually, he was quite certain as to the inappropriateness, but it would not be good school spirit to deny the request of a cheerleader. Would it? He did as she asked, grabbing hold of the arms of her sweater and pulling it off her body.\n\nShe exclaimed, \"Wait, wait!\" as soon as he had the sweater off her body.\n\nShe must be having second thoughts. Thank goodness for that, although he had to admit a part of him was disappointed. What would be wrong with just a little quick peek?\n\n\"Don't look! Wait, don't look!\"\n\nHe again swivelled his chair around and handed the sweater back to her, without turning his head. A moment of panic swept through him as he wondered if in fact she might now be upset, realizing what she was about to do, about to do for him so that she could be a cheerleader. Thank goodness this had ended before it had in fact gotten out of hand.\n\nBut, she didn't take it. \"My hair is all messed up. Just me let me fix it first.\" She did have real nice hair, long and wavy, even it wasn't blonde. If she was going to show Mr. Jones her breasts she should at least look her best. \"Don't you have a mirror or something in here?\"\n\nShe didn't in fact have a change of heart. On the contrary, she was only worried about here hair? \"Uh, no, no, I'm sorry, no mirror.\"\n\n\"Wait, there's one in my purse.\" She picked up and fumbled around in her purse, extracting her compact. She smiled to herself as she fixed her hair, standing topless in Mr. Jones' office. It didn't take her long to get her hair the way she wanted it, but she let him wait a bit longer. She wanted his anticipation to build. She knew how much guys were dying to get the first look, the first time they get to see her naked breasts. Her heart was beating in anticipation.\n\n\"Okay,\" she said softly. \"You can turn around now.\"\n\nHe did so quickly, her sweater still resting on his lap, which was fortunate, as his cock quickly reached maximum erection at the sight that greeted him.\n\n\"Diane\" was standing before him, sweaterless and braless. It wasn't clear if she really needed a bra. Her breasts were indeed quite large but they were standing up very well. Madeline though was cheating. Her arms were crossed beneath her breasts. She was thereby holding them up, as well as pushing them together, providing a very nice round full shape and deep cleavage. He did not, though, begrudge her this gesture, as her crossed arms held and framed her breasts so wonderfully well. They were standing up so proudly from her chest, above the two more colorful pompoms, each one hanging just below its respective mate, complementing with colorful red and white strands the pure white hillocks capped by the perky red nipples. He was transfixed, mesmerized, hypnotized by these large white sloping globes with such stiff, pointy nipples that seemed to be begging, yearning, to be kissed, pinched, and suckled.\n\nShe admonished him, \"You're staring again!\" But that was Diane speaking, not Madeline. Madeline was quite flattered by his ogling gaze.\n\nThey were so white, so large, so round. He had seen breasts like this only in magazines, in pictures, not in real life. These were the breasts of one's imagination, of one's dreams, of one's lust. He slipped a hand beneath her sweater, squeezing the swollen cock in his lap.\n\n\n\n\"You don't think they're too large?\"\n\n\"No, no, not at all.\"\n\n\"You're not just saying that?\"\n\n\"No, no, not at all.\" He was feeling a bit limited in his speech. He was really quite impressed, if not stunned.\n\nShe smiled appreciatively. \"You're so sweet, Mr. Jones.\"\n\nHe didn't feel particularly sweet. He did feel pretty hard. He knew what image he would be jerking off to that evening.\n\n\"They do though wiggle a lot when I cheer. Would you like to see another one, another cheer?\"\n\n\"Very much so,\" he replied, feeling a little guilty but even more excited.\n\nShe smiled, knowingly.\n\nShe slowly uncrossed her arms, releasing her breasts from their perch. They fell a bit. They were, after all, real, and really big. But, they did not fall far. They were large, but they still had the firmness of her youth. Mr. Jones rubbed and squeezed his cock beneath her sweater. He was feeling so jealous of younger men.\n\nMadeline did her cheer, but this time with considerably more aplomb and enthusiasm. The pompoms thrust up and out, the legs bent and kicked, and the hips cocked and swung, as she exclaimed rhythmically,\n\n\"We're hot! You're not! We'll beat you till you pop!\"\n\nA cheerleader can look incredibly hot and sexy when she prances and poses for your entertainment, for your pleasure, but there is a qualitative leap in pleasure when she does so with her naked boobs flouncing and bouncing around, and particularly with ones as big as these.\n\n\"We're mean! We're lean! We're a fighting machine!\"\n\nShe's right, he thought, she really needs to be on the team. Her tits though were always one turn, one twist, one bounce behind the rest of the movements of her body, and they would delightfully overcompensate as they tried to catch up, flying and bouncing and jiggling in all sorts of different directions. He had to wonder if they were throwing her off balance, like bags of water would do hanging from a ballerina.\n\nShe provided a big ending. \"We're mighty!\" She squealed as she thrust her arms out straight. \"We're tough!\" She added as she posed with her arms bent at the elbow, clenching her muscles.  \"You're just a powder puff!\" She finished, as she pointed her finger at Mr. Jones.\n\nShe smiled proudly when she was done, her fists at her waist, holding her red pompoms, her big white pompoms standing out boldly before her. \"What do you think, Mr. Jones? Did you like it?\"\n\nThis time Mr. Jones was smiling quite enthusiastically. He so much wanted to grasp those bubbly breasts in his hands. \"Yes, it was really quite nice, very good in fact.\"\n\n\"Oh Mr. Jones!\" She exclaimed with considerable relief and gratitude. She impulsively stepped up to him, bent over, and wrapped her hands around his shoulders to give him a big hug, embracing, absorbing, his face into her soft, warm, squishy melons. \"I'm so glad, I'm so glad!\"\n\n\"Mmmmph!\" He responded, his voice muffled by her engulfing pillows. He often wondered if girls realized how sensual, how erotic, it felt when they would innocently embrace you, crushing their breasts against your arm, or your chest, at times even your face. Well, this didn't feel so innocent, not with his face crushed against her bare, naked bulbous breasts.\n\nShe suddenly seemed to realize what she was doing, how provocative and inappropriate it was. She let go of him and pulled back. \"Oh, sorry, excuse me, Mr. Jones. I kinda just lost my head there. But, I was just so excited that you liked it! I've practiced real hard at it.\" She gleefully clapped her hands, briefly hopping up and down with delight, her boobs seeming to shimmer and shake with equal enthusiasm and joy.\n\n\"That's fine, it's fine.\" Mr. Jones was regaining his sanity. He had indulged this young lady, and himself, for a little while, but he now realized that it really should end before it went too far. He handed over her sweater. \"Here, you better put this on before someone opens the door. I don't really think anyone will understand why a pretty undergraduate has her top off in my office.\"\n\nOnce he was uncovered though, his real interest, his real sentiment, was revealed.\n\n\"Golly, Mr. Jones,\" Madeline said, her eyes fixed on the bulge in his slacks, \"I guess you really did like my cheer, didn't you.\"\n\nHe looked down to see the guilty evidence and quickly covered himself up. \"My gosh, I'm sorry! Yes, well, yes, I am so sorry. I shouldn't have let that happen.\"\n\n\"That's okay, Mr. Jones, lots of guys must get woodies watching a cheerleader. I don't mind.\"\n\n\"Yes, well, this is hardly the time and place for that, don't you think?\"\n\n\"Well, then, will you maybe, you know, put in a good word for me?\" She got down on her knees before him, now looking up at him with those large, pretty, brown eyes. He could not help but think of a puppy, looking up so pleadingly, so submissively, so plaintively, begging for some attention, some consideration, some petting. He could never refuse that look in a sweet, adorable puppy. How could he refuse this young girl? Perhaps he should at least give her a few pets. Of course, though, once you start petting a puppy, she just wants even more.\n\nPuppies, though, don't wait patiently for your attention. If they don't get it right away they press harder, and Madeline did just that. She got up higher on her knees and placed her hands imploringly on his thighs, like a pup more assertively encroaching ever more closely into his private space.\n\nBut, what was perhaps more disconcerting than her hands were her naked breasts, which were now resting on his knees. It would appear to be more comfortable for her that way. They were probably providing quite a bit of encumbering weight. But did she not notice, how could she not notice, how her breasts were now so prominently presented? Each was perched on a knee, as if the puppy was laying in his lap toys with which to play, boy toys waiting to be wrestled and squeezed.\n\nShe said very quietly, as if she didn't want anyone else to hear. \"You know, Mr. Jones, cheerleaders know how to make guys really, really happy.\"\n\nHe suspected that might in fact be true. Of course, it wasn't like they selected cheerleaders on that basis, did they? But he really, really couldn't, shouldn't take advantage of her like this. Even if he did have some influence over the cheerleading selection he shouldn't use her in that way, and given that he didn't have any actual impact, it was even more wrong. But, once one has a full erection, once one feels the blood engorging one's cock, it's so hard, and it's so hard to think clearly.\n\nShe pushed apart his knees and maneuvered herself up closer, in between his legs, his thighs, bringing those breasts marching up closer and closer to him, to his crotch, to his bulging stiff dick.\n\n\"Diane, no, um, listen, girl, I don't think.\"\n\n\"Shhhhhhhh,\" she quietly shushed him. \"Let me do the thinking.\"\n\nFor some reason, that did not seem like terribly great advice, although he really shouldn't stereotype a cheerleader in that way. \"No, listen, I really should tell you that I honestly don't think I can actually help you.\"",
        "By now Madeline had slid her breasts all the way up his lap. Her big, warm, luscious soft pillows were now comfortably resting on his crotch, or more precisely, on his dick. He shifted his hands back away from himself, and from her, throwing them back behind himself, trying desperately to avoid any inappropriate contact with those youthful breasts, while at the same time experiencing a much more inappropriate contact with his thrusting dick.\n\nMadeline wrapped her hands around his waist and pressed her breasts deep into his crotch, smiling at the feel of his stiffness as she said, \"Now, we've been all through that, Mr. Jones. I know who you are and what you can do. I think you could make me very, very happy too.\"\n\nShe softly ground her naked boobs into his lap, into his stiff dick, all the while smiling up at him. She said seductively, \"Big boobies are good for some things, aren't they, Mr. Jones.\"\n\nMadeline smiled triumphantly. She so much enjoyed the power of the cheerleader. She had him wrapped around her finger, or more precisely her breasts were literally wrapped around his erect cock, and she gave him a little squeeze to accentuate the point. \n\nKeeping her twinkling eyes fixed on his, she let go of her boobs and burrowed her hands beneath them, searching around for a treasure hidden beneath the big bubbies.\n\nJackson lurched in his seat as he felt her fingers moving along his crotch. \"Diane, what are you doing?\"\n\nShe replied innocently, \"I was just looking for something.\" She let her fingers briefly slide along his stiffness, and then shifted to the left of his bulge, grasping hold of his zipper and quickly sliding it down.\n\n\"No, no, no!\" He protested, \"No, Diane, please, you really shouldn't do that. You, we, really can't.\"\n\nHis body though contradicted his words. He could have forcefully shoved her away. He could have reached down to pull his zipper back up. But, he did not. He only said what a part of him felt, and instead did what the other part felt even stronger. He let her reach into his pants, into his boxers.\n\nBut as soon as her fingers made contact with his erection he squirmed away. This really wasn't right at all. This was in fact very, very dangerous. Yes, she was the active participant. It wasn't like he was demanding, requiring, that she show him her tits and grab hold of his cock in order to become a cheerleader. But, what if she found out that he really couldn't help her? What if she in fact failed to become a cheerleader? She would likely be awfully disappointed, and might feel terribly exploited. He let go of the chair to grab her arms, to try to discourage her from grasping hold of her goal.\n\n\"Oh my gosh,\" he gasped as he felt her feminine fingers wrap around his cock and firmly extract it from his slacks.\n\nMadeline smiled in triumph. \"Cheerleaders are really very good at many different things, Mr. Jones, and one of them is getting big hard penises out of tight spots.\" She smiled mischievously up at him as she softly slid her fingers up and down his length. \"We can get them into some pretty tight spots too.\"\n\nPerhaps it was the concrete sight of his hard naked cock in the young lady's hand, poking out from in between her bulbous breasts, that jolted him fully back to his senses. In any case, his sense of responsibility, of duty, finally took control. Just as she wanted to be a cheerleader he wanted someday to be a coach, perhaps even more than she desired, or needed, to reach her goal. And, getting caught in his office with his cock in the hand of a topless coed would surely ruin his entire career. \"Diane, that's really enough,\" he asserted, and he pulled her hands away, something he could have, should have done, before.\n\nHer voice became softer, more sultry. \"Have you ever done it with a cheerleader, Mr. Jones?\"\n\nHe actually hadn't. For a moment he wondered how many men had done it with a cheerleader. Maybe that was in Wikipedia? Probably not many at all, at least proportionally to all men, and many more probably would have wanted to, or at least they must have thought about it. He shook his head.\n\n\"Have you ever wanted to?\" She leaned over and planted a soft wet kiss on the head of his hard dick.\n\nYes, he had certainly wanted to. The wavering of his resolve, the weakness in his will, was evident in the nervousness of his response, his voice, and the swelling of his exposed cock. \"Well, yes, certainly, I would think men have probably thought about it, but that's not really the point.\"\n\nHe gasped as he felt her tongue lick the head of his dick. \"Oh, Diane, please,\" he groaned, not entirely sure whether he was pleading for her to stop or to continue.\n\nShe assumed it was the latter and continued to lick and lap at the head of his cock, like it was a sweet, tasty treat, and for Madeline it was indeed. She so much enjoyed licking a man's cock. A hard stiff cock was so very impressive: so manly, so powerful, yet capped by such a delicious soft bulb.\n\nShe even enjoyed their smell. It was a sort of earthy, musky aroma, like a rustic, woodsman, masculine cologne.\n\nShe did though stop to ask a very important question. \"You won't tell anyone we did this, will you Mr. Jones?\"\n\nHe shook his head. Frankly, she was clearly holding the upper hand, quite literally so.\n\n\"It's very important, you know, for a cheerleader to keep her reputation. If she were to do anything that might embarrass the school she would be off the squad for sure.\"\n\n\"Oh, I understand. I certainly do.\" He wasn't about to tell anyone anything about this.\n\n\"And, you will put a good word in for me, won't you?\"\n\nHe finally gave in. He just couldn't have her stop now. \"Yes, yes, I will, very much so.\" A part of him felt guilty, but it's difficult for guilt to drive your behavior when your stiff dick is leading the way, being tempted, pulled, and drawn by the tongue of a pretty cheerleader.\n\nShe smiled broadly, as if she had finally obtained her dream. \"Oh Mr. Jones! I'm so grateful, so happy. A man as big as you, you know, must be terribly powerful and influential. After all, didn't Abraham Lincoln say, 'Speak softly and carry a big stick?'\"\n\nHe didn't correct her. After all, it wasn't like he was her history professor.\n\nShe let go of his cock, got up off the floor, and turned her back to him.\n\nWhat was she doing?\n\nHe didn't have long to find out. She bent over, thrusting her bottom back toward him and lifted up her skirt, presenting to him the soft round curves of her red pantied butt.\n\n\"Would you be so kind sir as to pull down my panties, Mr. Jones?\"\n\nDid she lock the door? Clearly she hadn't. He wondered if he should at least do that, but he really didn't want to interrupt her. What if by doing so she became self-conscious, aware of what she was doing, aware of how wrong it was? He reached out, grasped hold of the waistband of her panties, and pulled them down, opening up to his eyes the terribly delightful sight of a young lady's naked white tush. It looked so defenseless, so enticing, so tempting, poking back at him as if she wanted him to take a big bite out of that round white apple, split down the middle so that he could spread it open and enjoy the fruit hidden inside, and beneath this delicious fruit was an even better desert, the small, soft, white pie of her cunnie, poking out between her thighs, just asking, begging, to be fucked.\n\nHe pulled her panties all the way down to her ankles, Madeline being careful to let her bottom accidentally bump his face a few times as he clumsily extracted her ankles from her cheerleading panties.\n\nJackson's cock was now yearning to be satisfied, his balls aching for release. He started to get up, wanting to take her just like this, bent over in his office, her cheerleading skirt tossed over her back, her bottom submissively upraised for his pleasure, his mounting.\n\nBut, as he started to get up she turned around, pushed him back down, and straddled his legs, presenting right before his eyes a so provocatively sexy frontal view of her young luscious cunt.\n\nShe was hairless. He had never actually seen such a thing. He had heard girls doing this for the pleasure of a boy. College girls today were doing so many things now that were just unheard of when he was a student, even though he would argue that it really hadn't been that long ago for him, or at least he felt that way. He wasn't so sure though that she had shaved for the pleasure of a boy, or a man. She could be doing it as a cheerleader. You certainly wouldn't want any stray hairs slipping out during a routine, nor perhaps would you want the outlines of hairs to be evident through the tight panties. Of course, she then risked the clear sight of a camel toe but that would be rather innocent, wouldn't it? It certainly looked rather innocent now: so virtuous, so virginal, just a naked white, hairless slope, split by an enticing slit. Well, maybe it wasn't so innocent looking.\n\nMadeline sat back down into his lap and slid her slit up against his hard dick.\n\nJackson groaned with delight at the feel of her warm, soft, wet slit pressing against his hard, stiff dick. Yes, hairless was very nice, visually and tactually.\n\nMadeline wrapped her arms around him, pressed her naked breasts against him, and said, \"You know, I should warn you, Mr. Jones, that I haven't been with a lot of guys since I'm not a college cheerleader, not yet. I'm still awfully tight, you know. I just think you should know that.\"\n\nHe felt like cumming right then. It took considerable concentration to restrain himself.\n\nShe slowly slid her slippery slit up and down his stiffness, and whispered into his ear, \"Can I do another cheer for you, Mr. Jones?\"\n\nHe closed his eyes and responded, equally softly, \"Yea, yea, sure,\" although there was something now much more that he wanted than simply a cheer. He wanted her cunt.\n\nMadeline smiled and whispered, \"I slip. I slide. On the coach's cock.\" She matched her actions to her words.\n\n\"I jiggle. I wiggle. His thingie makes me tingle,\" she added, as she wiggled her bobbling huge jugs against his face and then, as she thrust her pussy lips against his dick,\n\n\"I hump. I pump. I want him all inside.\" She was now gyrating her naked wet cunt against his dick.\n\n\"He's hard. He's stiff. His thingie makes me drip.\"\n\nShe rose up higher and positioned her cunnie slit atop the round head of his cock, and then slowly, sensually, softly, screwed it down onto his dick, gently twisting her bottom round and round as she fitted his thick cock into her hot, wet, tight cunt.\n\n\"I'm hot. I'm wet. I need his cock so much.\"\n\nShe drove her cunt up and down his cock, the room filling with the sound of her slurping, sliding slit slopping against him.\n\nMadeline was riding his cock fast to her climax. She always came more quickly, more intensely, more wonderfully, in cosplay.\n\nShe gasped, \"His stick, so hard, so long and so thick.\"\n\nJack wasn't far behind her. After all, it wasn't too often that a pretty coed cheerleader with giant tits was riding up and down his hard, stiff dick.\n\nShe moaned, \"I'm so small. So tight. I don't think he can fit.\"\n\nHe was not an old man. At best he was middle-aged, but it had been some time since he felt a cunt as snug and tight as this. It felt so, so good.\n\n\"I push. I strain. He gives me every inch.\"\n\nShe pulled him tightly against her as she thrust her hips, fucking his cock with her young, wet, tight cunt. Being a cheerleader was so cool, so exciting. Actually, more than half her fun was being the fantasy for the man she was fucking, enjoying the fact that she was the dream of this man's life. What could be more stimulating, more satisfying, more wonderful than being the dream.\n\n\"We pump. We hump. He fills me up so good.\"\n\nShe scratched his back with the nails of her fingers and whimpered into his ear,\n\n\"I shiver. I tremble. He squirts so hard, so much. Oh, Mr. Jones,\" she gasped as she felt her body melt into his, and she gave herself over to her orgasm, trembling and shivering into his arms.\n\nHe felt his dick twitch and jerk in the cheerleader's slit, as if it was thrusting, jerking, struggling to escape from a wonderfully smothering skin-tight engulfment, an absorption that was so satisfying, so fulfilling, so gratifying. He breathed deep sighs of relief and satisfaction as he felt his cum surge through his cock and release into the wet confines of \"Diane's\" tightly clinging pussy, quickly filling her up with his hot, sticky stuff.\n\nHe grabbed hold of her soft round bottom and pulled her cunt more tightly against him, thrusting forward to squirt his stuff as deeply inside as he could, while at the same time burying his face into those lusciously large and soft fleshy pillows. His face felt as engulfed by her boobs as his dick felt absorbed by her cunt. He snuggled into her womanly jugs, gasping and groaning as he felt his cock spurt and spit into her tight girlish cunnie. It was an orgasm he would long remember.\n\nThe next day Jack went to the office of the Director of Cheerleading to put a good word in for her. He felt rather uncomfortable doing so. He didn't know the Director, and he worried that even attempting to do this might put him in jeopardy. Would not the Director wonder why this Assistant Coach felt so strongly about this particular applicant? But, curiously enough, the Director replied, \"Diane Weston? Absolutely! You are in fact the third person to nominate her. We are really looking forward to her application, but I must say we have not yet heard anything from her.\"\n\nThat was a bit odd, but he did feel better about trying.\n\n- - - - - - - - - - - - -\n\nDr. Lowenstein's heart was beating rapidly at the end of the story, and there was a warmth between her legs, her thighs. Professionally, it was called counter-transference. She had been well trained as a clinician and was prepared for such difficulties. Still, it was a little disconcerting to have her patient's life, her story, affect her so significantly, to stir within her such base, primitive feelings. At the moment, she felt more like a voyeur than a clinician.\n\nIt took considerable strength, and clinical acumen, to gather herself, to regain her professional demeanor. After all, she was there for the benefit, the development, the growth, of Madeline, not for her own prurient interests. It was at times very difficult being a sex therapist; although it was also very satisfying, very pleasing, particularly when she was alone, in her bed, at night, and she recalled that day's sessions. Sometimes she even played the tape of a session, as she played with herself beneath the covers, the sheet, of her bed. She felt she developed even further insights into her patient's conflicts and problems when she masturbated to their sessions. She would gain a better appreciation, a better understanding, of their perspectives, their fantasies, their impulses, dreams, and wishes. And, besides, it was rather fun.\n\nDr. Lowenstein did now though understand Madeline's concern, or at least she thought she did. Madeline was placing herself at considerable risk by engaging in this \"cosplay,\" as she preferred to describe her fetishistic escapades.\n\nDr. Lowenstein was quite reluctant, as a therapist, to attempt to govern a patient's life. Patients were free to make their own decisions. It was important in fact for them to do so. A therapist can not, and should not, control a patient's life. But, she also felt some responsibility in at least informing Madeline of the risks that some behaviors might entail.\n\n\"Madeline, I understand that pretending you're a cheerleader could be enjoyable, even a bit stimulating,\" she said, as she pressed her thighs together.\n\n\"Oh, it was really very, very stimulating, Dr. Lowenstein,\" Madeline replied, as she pressed her thighs together.\n\n\"Well, yes, of course, but you do appreciate that you might be placing yourself at some risk. I mean, what if you were caught posing as a cheerleader? I wouldn't think that the college would look favorably upon such behavior.\"\n\nAs soon as she said it, Dr. Lowenstein regretted the remark. It did sound rather paternalistic. It was important to convey to patients an unconditional positive regard, no matter what their behaviors, interests, or peccadilloes.  This was particularly important in sexual therapy.\n\n\"I know I take risks, doctor, but that's really part of the fun, the thrill. It's not the risks that trouble me.\"\n\nApparently the doctor didn't understand. \"What does trouble you, dear?\"\n\n\"It's just that this is pretty much all I do now. Cosplay is not easy. I mean it can take a lot of planning and preparation, and well, it's also a lot of fun. And, someday I'm going to get caught and get into all sorts of trouble.\"\n\nWasn't that the precise point she had been trying to make earlier? But it is always best to have the patient come to an insight herself rather than simply provide it to her. She pretended not to have noticed. \"Do you really think so?\"\n\n\"Well, yes, like, you know, well, one of my more favorite cosplays is being a nurse.\"\n\n\"You've pretended to be a nurse?\"\n\n\"Oh yes, many times.\" Madeline then proceeded to recount her most recent nursing cosplay.\n\nNURSE\n\n\"Are you here for your sperm donation?\"\n\n\"What?\" The young man asked as he looked up into the prettiest brown eyes he had ever seen. Well, at least the prettiest he had seen for a few days. She was though the prettiest nurse he had ever seen, and certainly the one with the biggest tits he had ever seen. This petite doll of pretty femininity was leaning down toward him, her hands on her knees, her face just inches from his eyes, the front of her uniform bursting with the bulging strain of her breasts, which appeared to be barely restrained from their release by the tenuously clinging, straining buttons of her uniform. He read the name on the tag, \"Nurse Betty Sizemore.\"\n\nTimothy was in the waiting room of an ancillary branch of the Templeton clinic. He was there for a blood donation, waiting for his name to be called. He hadn't heard about any sperm donation. He had not in fact ever done anything like that before. In fact, he must not have heard this nurse correctly. It would not be surprising for such a pretty face to confuse your mind. \"Excuse me?\"\n\nShe smiled patiently and exclaimed, \"Sperm donation!\" with the most engaging and sweetest smile, as if a sperm donation was somehow an everyday, routine sort of thing. She tilted her head as she smiled, and then stood back up straight, her hands clasped demurely before her.\n\nThe standing up straight did little to diminish the prominence of her breasts. On the contrary, they now thrust out like two big white beach balls. He tried to pretend that he didn't notice. He had heard that girls can tell when you are looking at them there, and he could imagine that it might be annoying to them. But goodness, when you have breasts as large as these, what should you expect? Still, this was a nurse. You really shouldn't look at a nurse like that. It wasn't like they were wearing some sort of revealing blouse or negligee, and she was a professional, a member of the health care system that warranted your respect.\n\nStill, his cock swelled in his pants, and he could not help but feel that her appeal was in part precisely because she was a nurse. He wasn't at all sure why she looked so especially enticing, so alluring. She was wearing the traditional nursing uniform: the simple white dress that came down to her knees, buttoned all the way to the small, rounded collar; with matching white nylons, white pumps, and the white cap. What made her so bewitching, so tempting? Perhaps it was the fact that the buttons did appear to be on the verge of bursting through their loops, her breasts placing considerable strain on the strength of the threads.\n\nPerhaps though it was the fact that the uniform was entirely white, conveying a purity, an innocence, a virtuous modesty. Sluts and skanks didn't wear nursing uniforms, only good girls would be a nurse. Perhaps more than this, though, a nursing uniform conveyed her willingness, her desire, to be caring, considerate, helpful, and healing. It was a feminine garment, a feminine profession, whose mission was to do what she could, as a nurse, to cure your ills, no matter what may in fact be troubling you, to make you feel better, to make you feel good. She was devoted to your comfort and care, not as a doctor, who only looked upon you as a sick, malfunctioning organism whose treatment, successful or not, provided a very handsome salary. Nursing was a vocation, not an occupation, a calling, and one that paid very little despite its importance, its value. The nurse was a woman with a heart and sympathy for her patient's feelings, his concerns, his needs. Yes, a nurse is really very attractive, very appealing.",
        "\"So, are you ready?\"\n\n\"Excuse me?\" He had become lost in his thoughts, and then realized that his eyes were again fixed on her breasts. He quickly looked away, his face turning red.\n\n\"Are you ready to donate your sperm?\"\n\n\"Ummm, well.\" This did seem a little weird. How do you talk to a pretty nurse about sperm? And right there in the waiting room! In public. He only briefly met her eyes, and then pretended to be looking off in some other direction. \"The hospital is out of sperm?\"\n\n\"Silly boy,\" she responded. \"The hospital doesn't take sperm. Of course not. It's for the lab, for research.\" Madeline pretended to suddenly realize that she must have made a mistake. \"Oh, I'm so sorry. You're here for a blood donation.\" She put a hand to her mouth, feigning embarrassment. \"I thought you were our 3:30 sperm donor. We are in fact very low, and he had scheduled an appointment for 3:30 and it's now 4:00 already.\" She glanced around. \"Oh, I'm going to be in such trouble.\"\n\nWith her eyes averted he was able to return his attention back to her, back to those breasts that towered above him. \"Trouble? Why?\"\n\n\"It's not your worry. You wait for your call.\"\n\n\"No, please, tell me.\"\n\n\"No, no, I shouldn't have bothered you. I'm really sorry. I will leave you alone.\"\n\nShe turned to go but he said, \"No, no, it's not any bother.\" He realized that he really didn't want her to leave him. She could talk about the weather and still be good company, particularly in the tedious boredom of a waiting room. \"I've got nothing to do. Tell me.\"\n\nShe hesitated, as if she was very reluctant to trouble the young man further, but then said, \"Well, it's just that I've failed to get any donations today. The last three appointments never appeared. Oh my, this could mean my job, and I really need the money so badly.\"\n\nA sperm donation? Why not? A gentleman does not deny a young lady in distress, and certainly not a young nurse. It might also make for a pretty good story to tell his friends back at the fraternity. His penis swelled further. If this pretty nurse with such big tits wanted what he had, how could he deny her? Heck, he could probably wack this out in a few minutes, quite literally so, and still have time to give blood.\n\n\"I'll do it. I'll make a donation,\" he offered.\n\nHer eyes lit up. \"You would? You will? Really? Oh my, that's so wonderful! My hero!\" She leaned back down and gave him a polite hug, only just brushing her cheek against his, her breasts barely brushing against his chest, but it was tantalizing nevertheless, coupled with the delicate, wistful scent of her flowery perfume.\n\nShe held out her hand, \"Here, come with me. We have a special room for the sperm donations.\"\n\nHe took her hand and followed her out of the waiting room.\n\nMadeline glanced around her as they were leaving, her heart racing as they crossed the room, and then decelerating when they finally cleared the crowd. The room had been filled with quite a few persons waiting to donate blood, accompanied by a number of nurses. She wasn't overly worried about getting caught. Blood donation is staffed largely by volunteer and student nurses. It would not be at all unusual to have someone there that was unknown to you. Still, she could not help feeling at least a bit nervous. She had done her best to keep her back turned to the supervising doctor, who would assume he knew everyone who would be working that evening, and would certainly be familiar with the nurse with the tight uniform and bursting breasts.\n\nBut, once they cleared the waiting room she breathed a sigh of relief. They would now be largely on their own, and she proceeded to lead the young man down a few corridors.\n\n\"Isn't this the new wing for the medical center?\"\n\n\"Yes, yes,\" she explained. \"The examination rooms are not quite finished yet, so they're letting us use them for our study.\"\n\nTimothy was a little surprised at how far away the donation room was located, although as he thought about it, it did make sense. They would want to have the sperm donors to have considerable privacy. Still, though, the long walk with the pretty nurse, holding his hand, was a bit awkward. He hoped his growing erection wouldn't be obvious. This was certainly much more awkward than giving blood.\n\n\"Have you ever donated sperm before?\"\n\n\"What? Um, no, no, actually, I haven't.\"\n\n\"It's really not difficult. Don't worry. I'll help you through the first time.\"\n\nHe didn't quite know how to react to that. On the one hand it sounded a bit erotic. On the other hand, it sounded a bit infantilizing. But, clearly she wouldn't really be helping him with it, the actual donating part.\n\nShe added, reassuringly, \"It won't hurt that much.\"\n\nWell, he sure hoped that it wouldn't. How could it? Actually, what an odd thing for her to say: 'Hurt that much?' Why would it hurt at all? He was beginning to have second thoughts about this. Surely this would only be jerking off into some cup, or something. He wondered if she would provide him with some magazines. He heard they did that, or at least they always did that in television depictions. It could though be rather embarrassing for her to hand him some magazines. It would be like his mother offering him magazines when it was masturbation night. Geeez, that would be a bit awkward., to say the least. He suddenly panicked at the thought of her asking him what kind of magazines he preferred. The fact was he preferred magazines about women with big boobs, and there was no way he was going to tell her that.\n\nOnce they arrived at her destination she turned the slide indicator adjacent to the door from \"Open\" to \"Occupied,\" and then led him into the room.\n\nThe room was a bit cramped. There was the traditional examination table, a sink and counter, cupboards, and a stool. It was really quite sparse. Well, perhaps that was not surprising. It was, after all, a room for laboratory research, and such rooms tended to be rather thin on amenities. \"Yes, okay, well,\" he said, \"Um, is there some sort of cup or something?\" He now just wanted to get this over with.\n\nShe smiled at him. \"Don't be so impatient, young man. Goodness, you're feeling a little randy aren't you?\"\n\nHe didn't answer.\n\n\"Yes, yes, but first, I must get some information. My goodness, I don't even know your name. Here, sit here,\" she said, gesturing to the stool. She sat up on the examining table, providing a brief, teasing exposure of her very nicely shaped legs. It was though a surprising choice. He would assume that he would be on the examining table, although he was also assured by the fact that she wasn't about to examine him. She picked up a clipboard and asked, \"Now, yes, what is your name?\"\n\n\"Timothy J. Edwards,\" he replied, sitting down on the stool.\n\n\"What a nice name! I'm Betty.\" She looked down at her name tag and thrust out her left breast. \"Nurse Betty Sizemore.\"\n\nHe only glanced at her tag, for to do so would be looking explicitly at that large, thrusting globe. Even the brief exposure though stirred his balls. \"Yes,\" he said, glancing away. \"Good to meet you.\" He kept his eyes fixed on a corner of the room.\n\nShe proceeded to gather basic demographic and health information. Some of it was rather personal, such as STD's and other transmittable diseases, but understandable for what he was about to donate. However, the interview did at times take a few surprising turns.\n\n\"Do you masturbate often?\"\n\n\"Excuse me?\" He looked up at her. Sitting on the stool placed him considerably lower than her, which only further accentuated the prominence of her peaks, as well as providing a nice vantage point of her white stockinged, shapely legs.\n\n\"How often do you masturbate? We need to know this to estimate sample size, plus it's for basic scientific research.\"\n\n\"Well, um.\" He really didn't want to tell her the truth. Frankly, he masturbated every evening, or at least every evening in which he had sufficient privacy. He would at times even masturbate beneath the covers of his blankets when his roommate was in the bed next to him, but he would only do that if he felt he was asleep. He would try to be as quiet as possible, but masturbating did have some rather tell-tale sounds, particularly in the quiet silence of night. \"I guess a few times a week,\" he lied.\n\n\"Oh, goodness, you don't have much testosterone?\"\n\n\"Excuse me?\"\n\n\"Have you ever squirted yourself in the face?\"\n\n\"What?\"\n\n\"When you ejaculated? When you reached orgasm? Has it ever squirted you in the face?\"\n\nThis was really getting quite personal, if not odd. \"Is this really necessary for the donation?\"\n\n\"Oh, I know, I know. It's a bit personal, but a lot of this has to do with the research study.\" She uncrossed and then crossed her legs the other way, providing for him a very brief but tantalizing glimpse up her skirt. He noticed that she was wearing panty hose rather than thigh high nylons. He was a bit disappointed, but then realized that any such feeling or expectation was not really appropriate.\n\n\"Well, um, yes, yes, I guess I have,\" he acknowledged. Actually, that should really be a good thing, shouldn't it? It suggested that he came with considerable force and virility.  Didn't it?\n\n\"Have you tasted your sperm?\"\n\n'C'mon!' This was really too much. But, then, he had recalled in his introductory sociology course how helpful and informative the national Kinsey survey turned out to be, and their questions must have seemed pretty personal and provocative back then. It would probably be good for society, for their emotional health, to realize that some seemingly dirty things were really quite common. \"Well, yes, yes I have.\"\n\n\"Do you pick your nose and eat that too?\"\n\nHis eyes widened in shock at that.\n\nShe giggled at his reaction. \"I was just joking, just teasing. It's good to lighten things up with a bit of humor. Now, let me see, where was I? Oh yes, did you like the taste of it?\"\n\n\"Well, no, not really.\" That was in fact true. He had been hoping that he would like it, and then he would work on trying to blow himself, but once he realized that he didn't like it, he kind of lost interest.\n\n\"Oh, that's too bad! I actually really like it myself. I think it's very, very tasty.\"\n\nHis balls began to stir once again.\n\n\"Have you masturbated with your finger up your butt?\"\n\nThat was an easy one. \"No, no, I haven't done that.\"\n\n\"Really? You're quite the innocent young man, aren't you?\"\n\nHe wondered if they would provide him with a consumer satisfaction questionnaire when this was done. Her jokes and editorial commentary weren't very helpful in putting him at ease. He was beginning to wonder if those large breasts and pretty face were really enough to overcome her bedside manner.\n\n\"Have you ever ejaculated into your pants?\"\n\nThat wasn't an easy one. He had done that, a couple of times. In fact, more than just a couple of times. \"Well, yea, I guess that has happened.\"\n\n\"How did you do that?\"\n\n\"Excuse me?\"\n\n\"Well, it didn't just happen when you were walking down the street, did it? Or, did it? Does it just happen because of the friction of your clothes?\"\n\n\"No, no ma'am,\" he replied. \"It was when, one time, when I went, you know, to an adult theater.\"\n\n\"You masturbated in your pants watching dirty movies at an adult theater?\"\n\nHis face turned beet red. This was really very embarrassing. Couldn't they ask these questions in a less intrusive, less humiliating manner?\n\n\"I didn't really know that they still had such things, you know, with home videos, dvd's, and the internet, and all that. Is there something about the experience of actually going to an adult theater that makes you excited?\"\n\nActually, he had done it because he really couldn't get access within his frat room, at least not with the privacy that he wanted, needed. It was common to hang a sign on the door to indicate you were with a girl, but he felt rather uncomfortable hanging a sign that indicated that he was watching pornography and jerking off. So, yes, he had gone to an adult movie theater and jerked off into his pants. Is that really so bad? \"No, no, actually it was a little embarrassing.\" It was indeed. He had felt like he was a dirty old man long before his time, or at best some sort of a pervert. Everyone was sitting as far apart from one another as possible, and he thought a couple of the customers were in fact homeless persons, as they appeared to be sleeping. Plus, the movie wasn't even really that good, although it was in fact good enough to get him off. One of the girls had really, really big tits, and that part with her was pretty darn good, particularly when the guy got to fuck her between her boobs and cum all over them.\n\n\"What kinds of things do you think of when you masturbate?\"\n\nHis face instantly turned red. \"Um, well, girls, of course.\"\n\n\"Silly boy. Of course you think about girls, although it would be fine if you preferred boys. But, no, I mean, what in particular do you enjoy the most? What do you dream about, fantasize about, when you masturbate?\"\n\nYou would think that donating sperm would be an enjoyable experience but leave it to Templeton College to turn it into something unpleasant. There was simply no way he was going to admit to his fantasies about large breasts, not to this nurse. \"Nothing really special, nothing out of the ordinary.\"\n\nShe smiled knowingly down at him. \"Now, Timmy.\"\n\nHis name was 'Timothy,' or 'Tim,' if she wanted to drop the formality. Not 'Timmy,' but he led it slide. Still, though, nobody had called him 'Timmy' for many, many years.\n\n\"I'm a nurse. I have seen and heard many things that would make your face blush. You don't have to be uncomfortable with me.\" She again uncrossed and crossed her legs, back to the original position, smiling down at him, fully aware of the effect her teasing thighs was having on him.\n\nHe swallowed, took a deep breath, and said, \"Breasts, large breasts. I think about large breasts.\" He felt so deeply embarrassed, even ashamed, at his confession of his preference, his interest, perhaps even his perversion, particularly having to do so when two of the largest he had seen in person were towering over him.\n\nShe smiled sweetly down at him, like a teacher who discovered that her student had a crush on him, or a mother who just discovered that her son had his first wet dream. \"Well, that's really very sweet of you, Timmy. Does your girlfriend have large boobies?\"\n\nHis face became redder. \"I don't have a girlfriend,\" he admitted. 'Please don't say it's probably because I watch dirty movies,' he thought. 'Please don't say that.'\n\n\"Well, it's probably because you just haven't met the right girl yet.\"\n\nHe sighed with relief.\n\n\"And perhaps you really shouldn't go so often to the dirty movie theater.\"\n\nHe had actually only gone there once. Well, perhaps a few times, when they had a special big boob feature. Those were really difficult to resist.\n\n\"Alright then, that's all of the questions. Let's get started.\" She slipped off the examination table. \"Stand up and take off your pants and underpants now.\"\n\n\"I'm sorry?\"\n\n\"Oh, yes, I need to examine you, you know, for STD's and such.\"\n\n\"But, I just told you that I don't have anything like that.\"\n\n\"Yes, yes, but you must appreciate that we do have to check ourselves. We really can't just take your word on it, although we also actually can't rule them out with a visual exam, but we will lose our license if we fail to at least make the attempt.\"\n\nThat did make sense. With a deep sigh he undid his belt.\n\n\"You should get your shoes off first.\"\n\nHe hesitated. At this point he wanted only the quickest 'slam, bam, thank you hand,' that he could provide. He didn't need to take his pants off to do that. But, he doubted that he would win this argument. He removed his shoes and then undid his belt, unclasped and unzipped his slacks, and then pulled them down, along with his underwear. He so wished that he had worn better underwear. His mother had always said to wear the underwear you would want the whole world to see. You never know when you might get into an accident. Well, she was essentially right about that. His worn white jockey briefs even had a bit of a skid mark. It was an old one, just a stain really that didn't ever seem to come out. Still, it was awfully embarrassing.\n\nFortunately, she didn't seem to notice it, or at least she was polite enough not to comment on it. She even helped him to step out of his slacks and jockeys.\n\n\"Oh, you should wipe yourself more thoroughly, Timmy.\"\n\nHe felt like he might faint. This was so dreadfully embarrassing. Only his mother had commented on that, and he had made it quite clear by his reaction that he never wanted her to comment on it again. He did try though to do better. He tried real hard, but he kept getting the skid marks. He even went out and purchased new underwear, replacing his used ones in an effort to keep it all hidden from his mother. He considered explaining to the nurse that it was an old one, but he really preferred that the subject just change..\n\nOnce he had stepped out of his clothes, the nurse instructed, \"Okay, very good, Timmy. Now, stand still while I examine the little man.\"\n\nHe always felt uncomfortable when he disrobed before a nurse. On the one hand, he would be worried that he might develop an erection in her presence, particularly if she was as attractive as this one. On the other hand, he was worried that he would be at his most shriveled state, and the worrying seemed to have that precise effect. One time he tried imagining the nurse without her uniform, hoping that he would swell up enough to make him look larger, but not too much to make it seem like he was getting an erection. It didn't work. It's actually rather hard to will an erection when you're all self-conscious and nervous.\n\nHe would want to explain to the nurses that he was in fact normally bigger than what he currently appeared, but he doubted that they would believe him, and it would only draw their attention to its size, or lack thereof. None of them though ever commented on it, thank goodness, except for this one.\n\nHe looked the other way while she began to examine his penis for lesions and sores, although perhaps he should in fact look down. Those breasts would provide a nice backdrop for his penis but, obviously, it was too late for that. Imagine getting an erection now?\n\n\"Hmmm,\" she moaned, \"You smell very nice, Timmy.\"\n\n\"What?\" Now he did look down.\n\nShe looked up at him with those large, pretty, round brown eyes, her breasts beneath them jutting out her uniform. \"I so enjoy the scent of a boy, of a man. He is so earthy, so pungent, so musky. It's like it's some sort of pheromone. I just enjoy it so very deeply, so instinctively, so viscerally.\" Nurse Betty pressed her nose against his penis and breathed in deeply, sighing with profound pleasure and satisfaction. She pressed her nose into his penis, around his penis, and into his balls, caressing, rubbing, and massaging his penis and balls with her nose.\n\nIt was rather surprising, and perhaps odd, to say the least. But, it wasn't so bad. In fact, it was rather nice. He wouldn't actually ever ask a girl to rub her nose against his penis, and he certainly doubted that he would ever meet a girl who was into such a thing, but if a woman tolerated his penchant, if not fetish, for big breasts, how could be begrudge this one's interest in his manly scent? And, besides, when does a boy not enjoy a woman caressing his penis with her face, even if it's her nose rather than her lips and tongue.\n\nBut, she stopped, pulled back and said, \"Whew! That was quite nice. Alright then, well, you appear to be a very healthy young boy, or, I should say, young man. Now, let's take your temperature.\" She reached into the deep pocket of her uniform and pulled out a thermometer. It seemed a bit on the large size.",
        "\"Turn around and bend over.\"\n\n\"What?\"\n\nShe smiled, reassuringly but rather playfully as well.\n\n\"We must have an accurate temperature, you know, and the rectal probe is really the optimal procedure.\"\n\nHe had last heard that when he was a little boy, as his mother always preferred doing it that way. But, as a young man he came to believe it was really just a mother's myth. Perhaps his mother was right? He turned around and bent over.\n\nThe nurse softly gripped a cheek with her left hand and pulled it open, exposing to the light, and to her eyes, his puckered butt hole. Madeline smiled. She did find young men's butt holes to be kind of cute. She imagined that other girls might not share her appreciation, but she didn't mind. What's really wrong with enjoying all of the personal private parts of a boy's body? And, besides, it was so sensitive and ticklish. She lightly flicked at it with the tip of her finger. He did appear to be quite clean.\n\nTim squirmed, his anus puckering reflexively.\n\n\"Just trying to get the feel of the land,\" she explained.\n\nAs Tim had gotten older he began to balk at his mother's insistence to obtain a rectal temperature. Heck, she at times even did it just for a routine household, family check-up. She called it proactive holistic medicine. He figured that she was just trying to tease him.\n\nHe squirmed again as he felt her apply some sort of lotion to his anus. Actually, the feel of her soft finger lightly caressing his curly sphincter, circling around and around, working the lotion into his so very sensitive, tingly skin, did feel kind of nice.\n\nBut, he grimaced as he felt the pleasant, teasing tingling being replaced by the thick cold thermometer getting stuck up into his butt.\n\n\"Now, you hold it in there for awhile,\" she said, patting his bottom reassuringly. \"We need to get a good reading.\"\n\nHe looked around, again wondering if this was some sort of practical joke. He knew he looked terribly silly, bent over the examining table, a thick thermometer sticking out of his naked butt, and he felt considerably worse.\n\nShe asked, \"You're not going to get an erection just by me doing this, are you?\"\n\nNow, that was an understatement, to say the least, and he wasn't so sure he appreciated the implication that he would find his embarrassing predicament to be arousing.\n\nShe added, now softly caressing his fanny. \"You do have a very pretty little bottom, though. I bet all the girls tell you that.\"\n\nIt was a rather mixed compliment, to be sure. Still, her soft, feminine, nursing hand did feel rather nice on his ass. It was as if she was actually trying to get him aroused, feeling all around his butt, lightly drawing the tips of her fingers up and down and inside his crack, providing little flirtatious squeezes and pinches. He wondered if he might get an erection, but he quickly squelched that thought.\n\n\n\nShe reached in between his thighs and lightly felt his balls.\n\nHe flinched again, squeezing down hard on the thermometer.\n\n\"And, oh my, yes, these testicles do feel very healthy.\" She continued to lightly handle his balls with one hand as she fondled his bottom reassuringly, affectionately, flirtatiously, with the other.\n\nYes, he would indeed get an erection if she kept this up. \"Wait, wait,\" he said, trying to provide some sort of signal as to his predicament, but without actually saying what it was.\n\nShe pulled the thermometer out and cleaned it off.\n\nSmack!\n\nAnd gave him a little smack on the ass.\n\n\"That's good. You can stand back up now.\"\n\nHe was glad for that, and he shifted away from her, feeling now quite aware of the fact that he was so exposed in front of this nurse, his penis unsure if it wanted to swell with arousal or shrivel with embarrassment.\n\n\"Well,\" she said. \"Perfectly healthy and normal.\" She tucked the thermometer back into her pocket and then suddenly stepped up against him, closely, very closely, pressing her breasts into his chest to reach around him. \"This room is a little cramped, isn't it.\"\n\nThis was a little awkward, standing there only in his shirts and socks, the nurse pushing her breasts deep into him as she fumbled around behind his body for something. He would have been happy to have just moved out of her way, although that other part of him was also quite happy to just stay there. In fact, he was probably very happy to stay there, as her breasts were pressing so wonderfully against his chest.\n\nShe kept blundering around behind his back, trying to find something, all the time thrusting and rubbing and grinding those big soft mounds into him. She didn't seem to notice how provocative this was. Perhaps nurses become desensitized to the body, to the effect of their own bodies. They must see so many naked bodies throughout the day, and must do so many things with so many of them.\n\nTimothy, though, was not desensitized, and his senses were being quite wonderfully stimulated: the feel of her breasts, the scent of her perfume. He could in fact feel himself, or more accurately, his penis, beginning to stir. This would not be good. \"Excuse me, here, I'll just get out of your way,\" he offered.\n\nShe stopped her searching, but kept her breasts firmly pressed against him. \"Oh, yes, I'm sorry. This must be a bit awkward for you, with your special interest in large breasted women.\" With her pretty face just inches from his, her perfume so delightfully tickling his nose, she said, \"Here it is, I found it,\" and then stepped back to present to him a small plastic cup.\n\n\"Here we go, and now all we have to do is to fill it up.\"\n\n\"What?\"\n\nShe giggled, covering her mouth with one hand as she held out the cup with the other. \"Oh no, don't be silly. We don't really have to fill it up. My goodness, you would have to have the testicles of a bull or a horse to do that.\" She reached down with her left hand and lightly clasped his testicles with her fingers. He lurched back at the very personal, intimate touch. \"I don't think they're quite as big as that, do you? They're more like a squirrel's than a bull's, wouldn't you say?\"\n\nHis exclamation, though, didn't really concern the word, 'full.' He was more troubled by the word, 'we.' \"No, I mean, well, I don't think, I, uh, well, yes, that's fine.\" He probably misheard her, and he didn't really want to acknowledge that, for a moment there, he thought that she would help him provide the donation.\n\n\"Now, you hop up onto the examination table, and we can begin.\"\n\nHe had heard correctly! This just didn't seem right. He looked around, as if there might in fact be other persons in the room he was unaware of, as if perhaps someone was playing some trick on him. Was this a prank of his fraternity buddies? Did they hire some hooker to do this, or something? Was he being filmed for some stunt?\n\n\"Don't you usually do this privately?\"\n\n\"Oh, don't be embarrassed, Timmy. I've done this many, many times.\"\n\nHe hopped up onto the examination table, his legs hanging off the side. \"I can do it myself, really.\"\n\n\"Oh, but Timmy, I'm really quite good at extracting sperm.\"\n\n\"Yes, well.\" \n\n\"It's my job, Timmy, to withdraw, to gather, the sperm. Really, it won't hurt, not much at least.\"\n\nThere's that reference to it hurting again. She wasn't going to like insert a syringe into his testicles, was she?\n\nShe stepped back and thrust out her chest. \"You don't think my breasts are large enough?\" She looked sincerely disappointed. \"Timmy, it would be so terribly embarrassing for me to put that into the report, that you didn't find me sufficiently appealing.\"\n\n\"Oh, no, no, it's not that,\" he replied. He really didn't want to hurt her feelings. And, frankly, she was indeed very, very appealing, particularly her breasts. Well, she was also really very pretty, but he did have his particular preference. The combination was quite intoxicating.\n\nShe began to undo the top buttons of her uniform, and his eyes widened in surprise, and pleasure. This was one unusual nurse.\n\nHe then realized that there really wasn't a good reason not to let, not to want, a nurse to jerk you off. What had he been thinking? He remained silent and still as she undid the top half of her white uniform. Well, he didn't remain entirely still. His penis was certainly stirring, and swelling.\n\nShe undid the top five bottoms, all the way down to her waist, and then pulled the dress back to reveal the cups, the very large cups, of her brassiere.\n\nHer dress might be innocent, but her brassiere was not. She was wearing a pink, lace\n\ndeep-plunging, push-up brassiere. The cups were huge, and her full pink lacy roundness stood out so dramatically against the white uniform. It was like two big, round luscious fleshy beach balls had exploded out of her uniform in an erotically provocative display. This was a very nice fashion statement.\n\nShe asked, in a very innocent, demure voice, \"Do you like?\"\n\nHe nodded. He did like it very much.\n\nShe looked at his lap or, more precisely, his swelling penis. \"I suppose I didn't really have to ask, as your penis does appear to like them.\"\n\nHe wasn't sure if he should be embarrassed by that or not. His instinctive reaction was to apologize, as he normally would, of course, apologize to a nurse for becoming aroused during an examination, but this was now clearly much different.\n\n\"Now,\" she instructed, \"You sit back and let Nurse Betty extract that sperm.\"\n\nHe did as she instructed, resting back on his hands and sliding his lap to the edge of the examination table to provide her with easy access. This was turning out to be much better than he had hoped, and certainly much better than he had feared. He did, though, furrow his brow in concern as he watched her open a counter drawer. 'Please don't be reaching for a syringe,' he thought.\n\nPerhaps though she was just going to put on some latex medical gloves. He did always use protection when he had sex, how infrequent that might be. But, of course, he never wore latex gloves when he jerked himself off, nor did any girl ever do so. Still, it wouldn't be surprising for a nurse to do so, and it really wasn't very appealing.\n\nShe pulled from the drawer a plastic bottle of lotion. \"I find it is much more pleasing to the patient to have your hands be as slippery as possible. Don't you think?\"\n\nHe wouldn't argue with that. His dick continue to rise, like a snake rising up for its meal.\n\n\"Although, it's a little cool right now. We wouldn't want to give him a chill, would we?\"\n\nHe shook his head.\n\nShe squirted globs of reddish pink lotion down onto her cleavage and into the valley of her breasts, and laid the bottle onto the counter. She then smiled at him as she grasped each globe with her hands, and softly rubbed and massaged her breasts, working the lotion into the deep, nurturant warmth of her healing nurse's breasts. Timothy's eyes were transfixed. His dick yearned to be embraced, engulfed, by that slick, hot, wet cleavage. It strained to be released, to leap onto her body and dive deep down inside that valley of slippery wet boobs.\n\nShe let go of her tits and reached down inside the warmed gooey valley, spooned up a large gob with her fingers, and then applied it to his cock, now fully stiff and erect. He sighed with pleasure at the contact of the warmed lotion, and even more deeply as Nurse Betty worked it into his skin.\n\nNurses did indeed have a soft, warm, healing touch. They knew how to make a patient feel at ease, to feel good, to feel healthy and alive. Timothy leaned back farther and gazed with pleasure at the sight of the big titted nurse working the lotion into his cock, into his taught, tight, hard skin. As she did so with one hand, she gathered more and more of the slippery lubricant from her breasts with her other hand.\n\n\"Isn't this nice, Timmy?\"\n\nHe nodded in agreement, the scent of strawberries drifting into his nostrils.\n\nHer fingers worked his shaft, his bulb, in every manner possible. She worked her palms, fingers, and thumbs all over every inch of his swollen cock. slipping, sliding, squeezing, stimulating and scintillating every centimeter of his so very sensitive skin.\n\n\"Yes, very nice. It's like your hard, stiff cock is deep within a cunt that's filled with wiggling and squirming fingers.\" She looked up at him and smiled. \"Wouldn't it be so nice if women had lots of wiggly fingers in their tight little pussies?\"\n\nHe just nodded, his cock feeling bigger than it had ever felt before, his eyes switching between those big lacy round boob balls thrusting out from her white uniform and her slippery hands working so hard on his stiff cock.\n\n\"Very good for extracting hot, sticky semen.\"\n\nIt was very good for that, indeed, and he gasped as he felt his balls constrict and his cock twitch in anticipation.\n\nSuddenly, she wrapped her index finger and thumb around the shaft, just below the bulb, and squeezed hard.\n\n\"Yikes!\" he yipped, at the unexpected intense pressure, and pain. This must have been the pain she was referring to. She had warned him, but he certainly hadn't been expecting it.\n\n\"Just relax, Timmy. You were about to ejaculate, weren't you.\"\n\nHe gasped, \"Yes, yes, isn't that the idea?\"\n\n\"Oh yes,\" she said, continuing to squeeze hard on his shaft. \"But not so soon. We must cook up a good batch of semen. We don't want to be satisfied with just the first course.\" She smiled up at him as she released her grip, resuming her massage and said every so sweetly and seductively, \"You want to donate as much as you can, don't you, Timmy?\"\n\n\"Yes, yes, I do,\" he sighed.\n\n\"So many charities seem to have no appreciation over how to extract large donations, but we have studied this quite thoroughly and it really isn't that difficult. You just have to provide the right motivation.\"\n\n\"Yes, ma'am,\" he replied.\n\n\"Now, let me see how I can motivate you further.\" Nurse Betty then parted his legs, slid the stool in between his knees, and sat down. She inched forward, the lovely large pink round globes sliding up his legs, up his thighs, and then resting in his lap, like they wanted to go to sleep there, like two lacy pink pets. She then pulled back and bent over to give the tip of his cock a very full, wet, sloppy and sustained kiss, right on the tip.\n\nThe kiss of a girl is so lovely, so sweet, so affectionate, so wonderful. But, it is even more so when applied to the tip of one's cock, where it is far more meaningful, stimulating, and arousing. She is placing her lips, with which she smiles, speaks, and tastes, onto one's most manly part, that with which one pees, fucks, and spews one's spunk.\n\nAnd, it does help that it also feels so very terribly wonderful: the softness of her lips against the softness of one's swollen bulb. She looked up at him with her large brown eyes wide open as she stuck her tongue out and licked and licked and licked the head of his cock, always keeping her eyes on his.\n\n\"Strawberries,\" she said. \"I put strawberries in the lotion. It's such a wonderful flavor, don't you think?\"\n\nHe nodded. \"Yes, I do.\" He did like strawberries.\n\n\"And they're good for you to. They have quite a bit of calcium and potassium.\" She gave him a big lick, \"and vitamin C and vitamin A,\" and she then continued her tasting of his strawberry-flavored cock.\n\nIt was such an intensely satisfying coupling of vision and touch, and she intensified it even further by bringing in her fingers, just the tips of her two index fingers, caressing the tip of his cock with the tips of two fingers as she continued to lick and lick and lick.\n\nIt would not be long before he was ready to, once again, provide his donation.\n\nShe helped him along by swallowing the bulb into her mouth.\n\nShe vigorously applied her tongue as if she was attempting to heal his swelling through the ministrations of her licks, lapping, and caressing. It was a treatment that he sorely appreciated, the treatment that only a great man would deserve, but yet here he was, being nibbled and suckled by this ever so considerate nurse. He gave himself over to her ministrations.\n\nHe gazed down at her pretty face, bent into his lap, her lips wrapped around his shaft, the room filled with the slurping sounds of her licking, lapping, and sucking. There had been girls that had done this for him before, but none were as devoted, as skilled, and as enthusiastic as this nurse. He momentarily wondered if she had in fact been trained for this, had taken a class in oral healing. But, of course she had not, it just seemed like it must be so. She was so very good at it. He moaned his appreciation and subtly shoved his pelvis out, encouraging her to take more of him, to swallow more of his shaft into her warm, wet, loving mouth, to take his load deeply into her mouth, into and down her throat. His balls pulled tightly against him.\n\nShe pulled back and once again squeezed his shaft, just below the bulb. He groaned in frustration. As she had said, it was not a lot of pain; really not much at all. It was more of a discomfort, a distraction, that sharply broke his rising tide of arousal. There are times when nurses have no choice but to cause their patients some discomfort. They don't enjoy doing it. They in fact abhor it. It goes against their very nature, but at times it can not be avoided. Some examinations, some medical treatments, do require a bit of discomfort.\n\nOnce he had regained control, she resumed her task, slipping her mouth back onto the bulb, while this time using her right hand to slide up and down his still slippery shaft, the other hand softly snuggling his nuts, caressing and squeezing them as she sucked on his knob.\n\nThere is perhaps nothing better than a girl stroking your shaft as she sucks on your crown. She is so evidently trying, even wanting, you to cum into her mouth, to receive your sloppy, thick, wet gism. She is not trying to put it off, she is not trying to avoid it, she is doing everything she can to get it to happen, because she wants it to happen. She wants you to squirt and spurt your sticky, sloppy gruel into her mouth, to receive you, to taste you, to swallow you. It's a lovely time, a lovely moment, and one in which Timothy basked in pure bliss.\n\nMadeline plunged her fist up and down the length of Timothy's cock, pumping him like she was dying of thirst, desperate to get this well to gush forth its life-sustaining, life-giving, life-promising gruel.\n\nHe so wanted to, yet he also appreciated the value of being patient, of waiting, of building to an even better and bigger and best climax possible. And, besides, did he really want this to end? Would he ever have a better blow job?\n\nHe felt her fingers tickling his balls and he again stiffened, his legs sticking out and his toes curling in.\n\nShe pulled back, and squeezed him again, harder this time as the damn was weakening and the well was beginning to burst, wanting so much to obtain relief, relief from the pressure, pleasure, and pain.\n\nShe looked up at him, an expression of sympathy and concern on her face. \"We are very close now, Timmy. Not too much longer.\" The way she was talking it was like he was getting an enema or a prostate exam, trying to help him maintain his composure, to relax and withstand the discomfort. But, this was no prostate exam. It was far from it. It was simply so thoroughly wonderful, yet so very frustrating.\n\nAnd she resumed her attack on his cock, this time diving down into his lap with her face, sliding her lips up and down his shaft, milking him with her lips, fucking his cock with her face and mouth, licking and lapping his shaft as her lips held tightly onto the hard slick stem as she slipped and slid her mouth up and down its length.\n\nThis was a blow job with force, with an energy, with an unadulterated, uncensored abandon. She bobbed her head up and down in his lap, the room filled with the sound of the slurping and slushing of her saliva as it spilled from her mouth onto his shaft and down to his balls.",
        "She massaged and squeezed his balls with more urgency now, trying to churn his gism within their oven, trying to work his nuts into a frenzy to gush for their seed, all of course for the sake of research, of science.\n\nTo hasten him further, she slipped the fingers of her right hand further down, beneath him, under his butt cheeks.\n\nHe slid out further, providing her with more room, trying hard to be the accommodating, the cooperative patient, but he was not at all sure what she was up to.\n\nIt didn't take long for him to find out.\n\nShe slipped a finger up in between the cheeks of his ass. It wasn't difficult for her to find what she was seeking. She was, after all, a skilled nurse, with a full understanding of anatomy. She quickly found his puckered anus, his tight squiggly brown star, and she proceeded to tickle him there with the tip of her finger as she pulled back on his cock and tickled him there as well with the tip of her tongue as she let go of his balls and tickled him there as well with the tips of her fingers.\n\nIt was a most unusual and intensely stimulating set of sensations. He had never fully realized, and certainly never appreciated, the sensitivity of his anus. Guys spend considerable time exploring the many nerves that saturate their penises and testicles, yet they ignore this other location, as if it was entirely devoid of any potential pleasure, even though they seem to be so fully invested in obtaining, experiencing, the most intense sexual pleasure they could attain. There was probably some reasonable explanation for that, but at the moment it escaped him.\n\nAnd, then he discovered it. She plunged her face down on his shaft and pushed her finger up into his rectum.\n\nHe almost leaped off the table, or at least his butt lurched up and then fell back down, right onto her finger, which slipped in further. It was a very odd, disconcerting experience, strangely intrusive, and yet accompanied at the moment by one of his most intensive states of sexual arousal. He would never admit this to his friends. He wasn't entirely sure he would tell them about it at all, or at least he would leave out a lot of the details, and he would never tell them the fact that he did indeed enjoy it, the finger jammed up his ass while his cock was sucked and his balls were tickled.\n\n\"Oh my gosh!\" Timothy exclaimed, his eyes opening wide at the exhilaration that overwhelmed him, and Madeline even escalated it by sliding and wiggling her finger in deeper and deeper until she reached it, the little notable mound of his prostate, and lightly massaged it, sending him far over the edge of no return.\n\nHe fell back on the table and his dick jerked from her mouth and sprung up, and then splatted her face with a big load of wet, globby cum, followed by one splat after another. He had indeed built up a lot of cum, and it was unloaded all over Nurse Betty's pretty face.\n\n\"Oh my gosh!\" Madeline exclaimed, but she didn't run, she didn't hide. Instead, she leaned back and received his stuff. It was not like Madeline was averse to receiving a load of cum on her face. In fact, she very much enjoyed feeling the hot spray raining down up her, splatting and splashing every nook and cranny with gooey, warm wet gism. She even turned her face left and right so that he could provide full coverage.\n\nTimothy enjoyed it as well, and that was certainly putting it quite mildly. In fact, he had never cum on a girl's face before. None of his girlfriends, well, actually the two of them with whom he had sex, had ever let him do that. Yet, this nurse actually seemed to be enjoying it. His initial reaction was to apologize. She couldn't have been expecting that. Not too many nurses seemed to want you to cum on their faces, at least it didn't come up very often. This one though was actually smiling as his cock spurted and spewed its stuff all over her cheeks, her forehead, her nose, her lips. One splot even got her right in the corner of her eye. It was such a visually delightful accompaniment to the base, fundamental physical pleasures coursing through his body, his waves of orgasm sweeping through his brain and loins. No man deserved an orgasm as good as this. It was so very, very nice.\n\nWhen it was done, though, there was a bit of a problem, but Nurse Betty moved quickly. She grabbed the plastic cup from the counter and caught the drips from her nose and chin. She even scooped up the large globs that had gathered on her face into the cup.\n\nIt was still a pretty good donation, despite the missed target. Timothy smiled proudly, exhausted, but deeply satisfied. It was right to provide charitable donations. It always left you with a good feeling of satisfaction.\n\n- - - - - - - - - - - - - - -\n\nDr. Lowenstein crossed her legs, and subtly rubbed her thighs back and forth. She was sitting at the traditional psychoanalytic location, behind the head of the patient who was lying down on the couch. This was a suggestion of Freud, a way to avoid patients observing the doctor as they recount their life story. Patients will at times misunderstand a therapist's frown, grimace, or smile, or perhaps even just an innocent gesture. Dr. Lowenstein was naturally concerned that Madeline might similarly misunderstand the squirming of her thighs, and the heaving of her breasts.\n\nShe wondered if perhaps there might be an appropriate cosplay involving a therapist and patient. She did practice psychodrama (see \"There must be something wrong with me\"). It might indeed be useful for the treatment of this young lady to perhaps dress in some costumes together. What better way to explore a fetish than to act it out, to literally walk in the shoes of the patient, to plumb the depths of her fantasy, to explore where it naturally leads. Her heart raced as she considered the possibility.\n\nIt was Madeline's voice that brought her out of her thoughts, her speculations, her fantasy.\n\n\"It's just that it's really absorbed my life.\"\n\n\"Excuse me?\" The doctor realized that she had not been listening to Madeline for awhile, and she cursed her professional lapse.\n\n\"It's about all I do. It just governs my whole life.\"\n\nThis was a common concern of a fetishistic paraphilia. Life begins to revolve around the fetish. The fetish begins to mean more to the person than any fuller, deeper relationship. You begin to love the fetish, rather than the person.\n\n\"I mean, like, I kind of liked the Timothy boy. He didn't have a girlfriend or anything, and when it was done I thought of calling him up.\"\n\n\"Why didn't you?\"\n\n\"Because I was a nurse with him. I couldn't always be a nurse for him. Heck, what would he say when I became a cheerleader, or an elevator operator, or a saleswoman, or a policewoman.\"\n\n\"You've been a policewoman?\"\n\n\"Many times.\"\n\nThe doctor was quite intrigued. She could not imagine playing the role of a policewoman. Actually, she could imagine it, and would enjoy imagining it, but it would certainly help her imagination if Madeline described it for her. \"Tell me about one of those times,\" she suggested.\n\nPOLICEWOMAN\n\nPolice cosplay can be difficult on a number of levels. There were lots of police costumes available on the internet that were incredibly sexy, but none were terribly convincing, to say the least. On the other hand, the most convincing police officer's uniform is not terribly sexy, at least on a woman. Well, some persons would find the tough, rugged, authoritative uniform to be very sexy on a woman. Madeline did not.\n\nMadeline wasn't suggesting that toughness on a woman wasn't necessarily sexy. Sexiness is so very personal. What is sexy to one person can be boring, even repugnant, to another. In fact, some persons might find cosplay itself not to be the least bit stimulating. Some might find reading about cosplay boring or perhaps even repugnant. As such, Madeline was never judgmental of those who preferred costumes she did not like, as she hoped that they would likewise respect her own choices, her own preferences. Why berate someone simply for what they personally enjoy?\n\nIn any case, it took some time for Madeline to develop a good policewoman's costume. It was, of course, dark blue. The long-sleeved blouse had an American flag on the right arm, three stripes on the left arm, button down pocket over the left breast, badge over the right, and shiny, silver buttons. Nevertheless, Madeline did not use the rough, hard nylon fabric of a typical policeman's uniform. It was instead a nice soft, touchable cotton, that clung well to the curves of her breasts.\n\nA tricky part was the matching skirt. She just couldn't go for the slacks. The whole game was to be sexual, and she wanted to feel, to appear, sexy. Slacks were out. On the other hand, she could not wear a skirt that was too obviously sexual. Not like a seductive lingerie or party costume. So, she wore a rather matronly skirt that came down to her knees, but it did wrap well around her bottom. She did still wonder though if the skirt made her look more like a meter maid than a policewoman. But, even if it did, very few college boys, perhaps none, would challenge a meter maid. Would they?\n\nIt also didn't help that she was so short. There were no longer height restrictions for being a police officer, but not everyone knew that. Plus, her petite frame was not itself very intimidating or authoritative, particularly when wearing a skirt. Her large breasts were certainly intimidating, but probably not in the manner that police would prefer.\n\nHowever, her belt did help. She wore a belt that reeked of law enforcement. It was heavy 1.5\" black nylon, with attached flashlight, baton, black leather gloves, keys, handcuffs, radio, chemical spray, stun gun, and, of course, holster with gun. It wasn't a real gun, but as long as she kept it hidden in the holster nobody would notice. In any case, the belt did command respect as she obviously had a lot of things that could put a suspect down.\n\nThe uniform was, of course, topped off by the blue cap with the matching badge and black plastic visor. Caps on costumes could be a problem for a woman, as they can undo what is otherwise a very pretty hairdo.  Madeline though had long wavy, brown hair, and she could easily wear it pulled back, or even pinned up. In this case she did indeed pin it up.\n\nTo give it a nice sexy touch her blouse was quite tight, with the top few buttons undone. It looked like her breasts were trying to burst through her uniform, or at least out through the top, pushed up in part by her brassiere, which was perhaps itself a size too small. She liked the effect of her tightly packed breasts appearing to be bursting, from her blouse, the buttons straining to hold together. Her boobs were seemingly exploding out of her uniform like two balloons squeezing out through the small opening of a pressure tank.\n\nPolice officer cosplay was also difficult because the risk of such a uniform was rather clear. Impersonating a police officer was not only wrong, it was a crime, and a pretty serious one at that. Her heart would pound whenever she went out in public wearing her police uniform. It was one of the more exciting and stimulating cosplays.\n\nShe went to the Templeton campus library.\n\nThe campus library appeared to be a reasonable, if not an excellent, choice for this evening's game. There were many students to choose from, yet many scattered into corners and alcoves that allowed for private conversation. Plus, campus security was unlikely to stumble upon her within the library. Security focused its attention on the buildings that were closed and darkened.\n\nMadeline parked her car as close as possible to the library, discarded her coat, and proceeded to the library.\n\nThere was always a rush of excitement when she first ventured out in a costume. It would stir up so many emotions. She felt the excitement of danger, glancing to and fro for any signs that she might get caught, that she might get into trouble. She also felt the excitement of anticipation, wondering what might happen that night, what new experiences and adventures she would encounter. And, there was the excitement of the role. For this brief period of time, she was a police officer. She was assuming a new role in life, a new identity, a new state of mind and persona. Her heart raced, her thighs tingled, her nipples stiffened.\n\nAs she entered the library she attempted to display an image, an aura, of authority and command. She strode confidently and assertively, despite her petite frame and bulging breasts. She looked around her. She was looking in part for any student who might know her, who might recognize her. If recognized by a friend she could say that she was trying out a costume for a party. All of her good friends knew of her skills at making costumes. She was a very big hit at Halloween parties. There was then no real danger in being recognized, but it would effectively end the game.\n\nMore importantly, she was looking for persons in authority who might question her presence, her own authority. That could be serious trouble. But, she conveyed the opposite impression, that she was the one looking for signs of trouble, looking for persons who might be causing trouble, for persons who perhaps needed the hand, the command, of the law. She conveyed a confident expression, an expression that challenged anyone to dare to question her, to defy her. She thrust her bulging chest out proudly and strode through the library.\n\nShe did draw quite a bit of attention. The students rarely saw a police officer enter the library. As she proceeded through the cavernous reading rooms she left behind a trail of whispers and murmurs. What was she doing here? Who could she be looking for? Who was going to get into trouble? Did you see the tits on that cop? Well, only the male students were whispering that. But, the girls did notice them as well. One would have to be blind not to notice them. You just didn't expect a cop to have such obviously big, jutting breasts, particularly ones that were bursting from her blouse, jiggling and quivering with her commanding, authoritative strides.\n\nShe strode quickly around and through the first floor. She did not waver or delay. Any hesitation could be met with questioning, and could also provide a closer, more critical inspection of her uniform. She did not in fact have a legal badge. That would be going too far. The badge did say Templeton (it actually wasn't that difficult to get through Ebay), but it was an antiquated, obsolete badge. Few students though would notice the difference.\n\nShe did not find a likely suspect on the first floor. She proceeded to the second.\n\nThe second floor was considerably less occupied. She would likely meet with success here, and she soon did. \n\n\n\nThere was one boy, a rather thin, short, bookish and nerdy looking boy with dark-framed glasses that kept slipping down his nose. He was studiously focused on an opened book, sitting quite alone at a back corner table. He appeared to be a boy who would likely be intimidated by a person in uniform, even if she was a girl who might in fact be shorter than him. Her heart beat faster as she realized that he would be her mark. He would be her partner in crime, in policewoman cosplay.\n\nHer thighs warmed as she marched up to him, striding as if she knew what she was doing, as if she knew precisely that he was the young man she was seeking.\n\nHe did not notice the police officer approaching him. He was too busily engaged within his biology text. He was indeed a very serious student, a biology major, studying hard to become, someday, a doctor.\n\nWhen she reached him she spoke with considerable authority and command. \"Young man, what is your name.\" Her heart stopped as she waited for his response, waited to hear whether or not he would be defiant or compliant, whether he would accept her as a cop, or question her.\n\nJoseph Jamerson looked up to see two large breasts jutting out over his face and, above them, the face of a very pretty girl, a lovely girl dressed in a police uniform. His nostrils breathed in deeply a very lovely fragrance. Few police women probably wore perfume, but this was clearly not your ordinary police officer. Joseph was quite nonplussed.\n\nShe tried to speak more authoritatively. \"I am Officer Johnson, Brenda Johnson. Your name, young man? And don't make me ask you a third time.\"\n\n\"Oh, yes, sorry. Joseph, Joseph Jamerson.\"\n\n\"Let's see your student ID.\"\n\n\"Yes, ma'am,\" he replied. Was he in some sort of trouble? He could feel his heart racing as he withdrew his wallet and fumbled through it, trying to find his student identification card. Where was it? He didn't know.  He knew it was in there, somewhere, but he never before had any need for it. Nobody had ever asked to see it, not since registration, and so he had little idea where it was. He eventually just poured out all of his cards onto the table. What if it wasn't there? Not having your ID in your possession while on campus was a violation. He grimaced at the sight of the coupon for a free trial membership to a pornographic web site. He had placed it in his wallet to consider the possibility of actually using it, but he had forgotten that it was there. He so hoped that the police woman hadn't seen that. And, finally, he found it. \"Here it is,\" he exclaimed and quickly handed it over to her.\n\nHe looked at her face for any sign that she had seen the embarrassing coupon, for any sign of anything. But, she was expressionless as she studied his card.\n\n\"Joseph Jamerson, that's your name?\"\n\n\"Yes, ma'am,\" he replied.\n\n\"Well, Joseph, we've had some reports of male students exposing themselves on campus.\" She had to suppress an urge to smile.\n\nJoseph could feel a wave of overwhelming anxiety sweep through him. His mouth went dry, his palms became moist, he felt dizzy and confused. He had been caught! That girl who discovered him and Bree, when Bree was jerking him off, must have reported them and provided his description (see \"Fives steps to Delta Nu\"). It had been some time since that incident, and even since the one that followed with Emily Kay (see \"Must be something wrong with me\"). He had thought that he was in the clear. He had been very circumspect the first few times he came back to the library, studying on the first floor, near an exit, just in case. It was so much more difficult though to study there, as there was considerably more conversation on the first floor. There was even cell phone usage (Julie Hall was particularly annoying in that regard). But, eventually he grew more confident that he had gotten away with the incident with Bree, and he eventually returned to his usual spot on the second floor. It was so nicely quiet and secluded here.\n\nHe realized that he hadn't said anything for some time. \"Yea, well, I haven't seen anything, honest.\"\n\n\"No, Joseph. I don't think you understand. The description we received matches your general body type and appearance. I think you should come with me.\"\n\n\"Am I going to jail?\" He panicked. He had never been to jail before. What would his parents say? Imagine getting arrested for indecent exposure! This was bad. This was really, really bad. He thought of those scenes in 'To catch a predator,' when the person first realizes the seriousness of the trouble he was in. For a moment he even felt sorry for them. And, now, he was himself experiencing that moment.\n\nMadeline could see that she had chosen well. She had captured a very compliant, submissive prey. \"No, no. Not now, not yet. I believe though it would be better to go to a place that is more private, unless you would prefer that I interrogate you here, in front of everyone.\"\n\nJoseph glanced around. As usual, there were only a few other persons nearby, but this officer was not whispering, and the people that were in eyesight were obviously extremely interested in what this cop was saying to him. Yes, he would be very happy to go to some place more private. \"Sure, sure. Anything.\" He quickly packed up his books. He knew that at this point it would be best to be fully cooperative. No, no!  That was perhaps the mistake that lots of criminals make on that show 'Cops.' Never say anything. Demand to have a lawyer present. Some of those criminals just buried themselves unnecessarily by fully confessing even when they didn't have to. But, if he wasn't cooperative she would probably take him down to the jail, and he would then have to call his parents to get a lawyer. He would have to cooperate if there was any chance of getting out of this."
    ],
    "authorname": "Charles Petersunn",
    "tags": [
        "cosplay",
        "college"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/cosplay"
}