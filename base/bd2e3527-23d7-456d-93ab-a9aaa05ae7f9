{
    "title": "A Dragon's Tale Ch. 22",
    "pages": [
        "***I self-edit and admit editing isn't my greatest skill. I apologize in advance for anything I missed. I had planned on getting an editor for this chapter, but life happened.***\n\nCHAPTER 22: Two roads diverged in a wood\n\nKunk! Kunk!\n\nSelene jerked awake as someone knocked on the steel door of her room. Or perhaps 'cell' was a more accurate term. The door locked from the outside instead of the inside and the room was made entirely of concrete. She pulled the rough covers back and sat up, feeling her back complain. \n\nThe mattress wasn't the worst she'd ever slept on, but it was close. Her neck had a slight crick in it from the hard, lumpy pillow. The blankets were warm at least, but rough, which was half the reason she'd slept fully dressed. The other reason was she just didn't feel safe sleeping in the nude here as she preferred. \n\n\"Come in.\" She said through a yawn, mildly surprised that whoever it was hadn't already entered without her permission. \n\nShe heard the external lock slide open and Smithbond came through the door wearing a crisp suit and a wide smile. He looked refreshed and well rested. \n\nShe was jealous. \n\n\"Good morning, sleep well?\" He didn't even wait for her response before continuing. \"I might have a tentative agreement with our unpleasant friend. However, I need more information.\"\n\nShe was glad she hadn't needed to strike a deal with the necromancer. The man gave her the creeps, and she didn't get creeped out easily. \n\n\"What kind of agreement?\" She said through another yawn. \n\nCuriously, he didn't even appear to stifle a mirroring yawn as he replied, ignoring her question. \"I don't trust that snake as far as I could throw him, so I want more information about the other world. I think we both know where to get it.\" \n\n\"Where?\" \n\n\"You've had contact with several people who clearly know something, and one who lived on the other world for years. Their intelligence will be invaluable.\" \n\n\"You mean...\" She thought back to the woman that the dragon-man had dropped off with the pregnant couple. \n\n\"I do mean. I already sent a squad to pick them up.\" \n\n\"Pick them up?\" Selene stood up and narrowed her eyes. \"They haven't done anything wrong.\" \n\n\"They are material witnesses with information we need.\" He replied. \"Therefore, I've arranged to debrief them.\" \n\n\"And they'll come willingly?\" \n\n\"More or less.\" He shrugged. Something about the way he said it made her think it would be 'less'. \n\n\"They're American citizens; you can't just haul them off to God-knows-where to interrogate them.\" \n\nSmithbond stepped aside and she saw the same burly soldier from the night before. She resisted the urge to think of him as a 'henchman'. \n\nAlthough...\n\nSmithbond ignored her comment. \"The Sergeant will lead you to the mess hall for some chow and then to the showers. We've arranged for some of your clothes to be brought here too.\" \n\nIf she was skeptical of him before, she was even more so now. He seemed pleasant enough to talk to, but his actions told a different story. She decided to play along for now, but right now she trusted him about as much as he trusted the necromancer. \n\n\"Thanks, I guess.\" She said eyeing him. \n\nHe inclined his head slightly before becoming businesslike again. \"Oh and Miss Dawson, I'm not going to interrogate them; you will.\" \n\n* * *\n\nKendra frowned. \n\nShe had felt herself start to worry a little bit when she'd heard the dragon she'd been hunting and the Drago roar at each other. At least, she was pretty sure it was a Drago from the roar. \n\nShe wasn't worried for the dragon of course, but for the Fey girl, Taloni. A Drago could be merciless when angered and from the roar it sounded like he had indeed been angered. She was behind the Argo and thus couldn't see what was happening on deck, but knew it couldn't be good. \n\nFor a moment, she considered grabbing her last Dragon Slayer arrow and sailing closer to help. \n\nShe shook her head. \n\nThat was silly; stupid. \n\nThere was no way that she would even consider coming to the rescue of a dragon. Ever. \n\nBut Taloni...\n\nShe glanced at her wind gauge. She could make sail to nearly triple her speed, but it would still take a while to catch up because she was following them from so far behind. She did this on purpose, knowing that being any closer risked her airship being spotted by the dragon, or possibly even the wood elf. \n\nShe hesitated for several seconds before she started raising the sails. She didn't remember deciding to move closer, but she knew she wouldn't be able to live with herself if she didn't at least try to help Taloni. \n\n* * *\n\nEthan felt the copper dragon's eyes bore into him. The elder dragon clearly wasn't very amused anymore and he had only a short time to think up some riddle with which to trick him. He was very aware of Alana, Beth, Taloni, and Rachel behind him, not to mention the rest of the crew. Their lives might rest in his hands and his ability to come up with a suitable challenge. \n\nKyrupto tapped one of his claws on the Argo's deck. \"I agreed to hear you out if you could pose a riddle that I couldn't answer hatchling, but my patience isn't eternal.\" \n\n*Know any good ones?* He asked each of his three wives telepathically. They really needed to figure out that whole magical 'group chat' thing. \n\nBeth and Taloni were silent, but Alana thought back. *Not really. I only know a few childish riddles that he'd get in a moment.*\n\nHmm...\n\nThat's when Ethan realized he was thinking about this all wrong. The trick here wasn't to come up with a hard riddle. That trick was to come up with a riddle that seemed hard, but was actually very easy. He knew at least one that might do the trick, because very few people got it correct the first time they heard it. \n\nThat could work. \n\nHe looked at Kyrupto. \"As I was going to Saint Ives, I met a man with seven wives. Each wife had seven sacks, each sack had seven cats, each cat had seven kits; of all those who are alive, how many were going to Saint Ives?\"\n\n\"That's your riddle?\" Kyrupto snorted. \"You think I cannot multiply because I am a dragon?\" \n\n\"I said no such thing.\" Ethan replied, allowing a smug smile onto his face. The more upset the other dragon was, the less likely he was to see through the ruse. \n\nKyrupto opened his mouth, and then closed it and nodded. \"You seek to distract me with an apparent insult, while hoping I wouldn't notice the little trick of your riddle.\" \n\nEthan tried to keep his expression neutral, but could feel a touch of panic seeping in.\n\nKyrupto opened his mouth again, then closed it again. \"Ah, a double trick. You thought I would do the math and either forget that the sacks aren't living, or else forget that you and the man should be counted too.\" He said with a smug expression. \n\n\"Oh?\" Ethan replied, determined not to give anything away. \n\n\"Yes.\" Kyrupto smiled in triumph. \"There is you, plus the man, the seven wives, we don't count sacks as they aren't living, plus three hundred and forty three cats, and thus two thousand four hundred and one kits. That is a grand total of two thousand seven hundred fifty three living beings.\" \n\n\"Is 'two thousand seven hundred fifty three' your final answer?\" Ethan asked, resisting the urge to imitate Regis Philbin on 'Who Wants to be A Millionaire?' \n\nKyrupto chuckled a mirthless laugh. \"Yes.\"\n\n\"Shame.\" Ethan said, his grin of victory splitting his face. \"You're wrong.\" \n\nThe Drago's countenance changed instantly, becoming suspicious. \"My math was perfect.\" He sneered. \n\n\"Your math was indeed perfect.\" Ethan agreed, assuming it was because he'd never bothered to do it before. \"It's your hearing that could use a little work. I said 'As I was going to Saint Ives'. I, not the others, who I met on the way. They were logically either coming back from Saint Ives or else lived on the way. There was only one going to Saint Ives; me.\" \n\nKyrupto stared. \n\nThen he narrowed his eyes. \n\nA low growl escaped the copper dragon's throat. He looked like he was having a furious battle with himself. Ethan could see the dragon's rage that he'd also often fought bubbling up. But he also could see the supreme arrogance of this Drago who knew that attacking would be tantamount to admitting defeat. He didn't think the dragon's anger would overwhelm his pride. \n\nAt least, he hoped it wouldn't. \n\nKyrupto growled and then crouched low, like a cat ready to pounce. Ethan dropped his hammer and pulled his spear into a ready position. The copper dragon watched the hammer as it fell to the deck, his eyes never leaving it. \n\n\"Is that the hammer through which you summon Illuminar's lightning?\" He asked. He was still crouched, but seemed less likely to pounce at any moment.\n\nEthan nodded.\n\n\"Show me.\" The Drago commanded. \n\n\"Back off and I will.\" He replied, tightening his grip on his spear. \n\nThe copper dragon seemed to relax and slowly backed away until he was a good thirty feet away, near the Argo's bow. Ethan called the hammer to his hand and started charging it without dropping his spear or taking his eyes off the other dragon. \n\n\"I'm waiting.\" Kyrupto sneered. \n\nFeeling there was enough charge in the hammer for a demonstration, Ethan threw it high into the air. He waited until it hit the apex of its throw, then released the spell. \n\nCRACK!\n\nThe lightning bolt arched down from the hammer, avoided the wooden hull of the Argo, and forked down over the side of the ship. \n\nKyrupto looked mildly impressed. \"Havorleth wasn't lying.\" \n\nEthan called the hammer back to his hand. \"I wasn't either when I said I didn't take a single gold piece from Havorleth.\" \n\nThe copper dragon snorted. \"Many things I will believe hatching, but a dragon not absorbing another dragon's hoard after defeating him is simply preposterous.\" \n\n\"So is a dragon summoning lightning, yet here we are.\" \n\nKyrupto stared at him. \n\nThe copper dragon's breathing was loud enough to hear, and each exhale almost came across as a bit of a growl. He then closed his eyes and raised his hand as if feeling for something invisible that Ethan couldn't see. \n\n\"You have gold aboard hatchling.\" He finally said. \"That much is obvious.\" \n\n\"Yes but how much?\" Ethan countered. \"You yourself can feel the amount in my own personal hoard is but a pittance compared to what Havorleth had.\" \n\n\"And how would you know that?\" Kyrupto replied, suddenly looking suspicious.\n\n\"I could feel it when I was near his hoard, during the battle, but I've taken nothing from Havorleth, and therefore I've taken nothing from you.\" Ethan declared. \"Therefore, you have no quarrel with me.\"\n\nKyrupto sneered again. \n\nEthan wondered if his face was ever going to freeze hat way, since he made the expression so much. His mother had always warned him about that in jest, but it seemed applicable to this Drago. \n\n\"You would conspire to deceive me hatchling?\" The Drago took a threatening step forward. \"I can feel the mana flowing into you. Mana that far outpaces the paltry sum of gold I can feel onboard. Therefore, you must have hidden the gold from my senses with some clever enchantment. No true dragon would ever leave so much gold behind.\" \n\n\"My wife was hurt; I needed to help her.\" He said, and then felt a warm rush of emotions coming from Alana. \n\nKyrupto blinked. \"Wife?\" \n\n\"Yes wife.\" \n\nThe copper dragon stared, seemingly confused. \n\n\"You know, a spouse; a person I married. A woman who is married to me.\" Ethan prompted. \n\nKyrupto stared like Ethan had said that water is solid, the sky is red, and dragons hated gold. \n\n*What's he thinking?* Beth asked telepathically. \n\n*I have no idea, but he seems-* He started to reply, but then Alana broke in on his thoughts. \n\n*He must've heard the term, maybe-* The wood elf started to say, but he didn't hear the end because Taloni chose that moment to comment.\n\n*Master, is he confused about what a wife is?* \n\nEthan sighed; they really needed to figure out that whole 'magical group chat' thing. That was next on his to-do list, right after 'survive the next ten minutes'. \n\n*We'll talk later.* He replied to each wife individually, and then turned his concentration back to the coper dragon, who finally spoke.\n\n\"But there are no female dragons, so how could you take a wife?\" \n\n\"It wasn't hard; some vows and a Luminar.\" \n\n\"But vows to whom?\" The Drago seemed genuinely puzzled. \n\n\"My wives.\" Ethan gestured behind him to Alana, Beth, and Taloni, all of whom were inside the captain's cabin looking on with great interest and more than a little apprehension. He noticed that Alana had her bow out and an arrow nocked, but she hadn't drawn or raised it yet. \n\n\"Mortals?\" Kyrupto snorted. \"That would be like one of them marrying a cow.\" \n\nEthan bristled. \n\nThe Drago continued as if he didn't notice or care. \"Mortal men are good only to dig up gold for us to take, and mortal women are only good for breeding or a cock-sleeve when the fancy strikes.\" He looked slightly disgusted. \"Why stoop to their silly rituals about pair bonding? Simply take whatever females you wish and discard them when you're finished.\" \n\nEthan opened his mouth to reply, but Rachel beat him to the punch. \n\n\"He would never do that.\" She said with absolute confidence. \n\nKyrupto never so much as looked at her as he snorted derisively. \"Then he's a fool. Dragons are as far above mortals as mortals are above a beast of the field.\" He shook his head. \"I have now fulfilled my oath and heard you out; I'm not convinced. Give what is owed, or...\" \n\nHe puffed some smoke. \n\nEthan glanced at the redheaded mage, who frowned. \n\n\"Well that didn't work, let me try.\" She said with a grin before looking back to the Drago. \"If you think you're so far above us 'mere mortals', then I also challenge you to a game of wits.\" \n\n\"This insult is not to be borne.\" The copper dragon growled. \"I would sooner engage in a battle of wits with a cow.\" \n\nEthan glanced at Rachel, who looked nervous but undeterred. \"Then wouldn't it be satisfying to prove your superiority by showing a 'mere cow' how stupid she is?\" \n\nKyrupto sneered, but looked amused. Ethan didn't need to be psychic to know that dragon loved the idea of proving his superiority.\n\n\"Very well.\" Kyrupto almost purred in anticipation. \"But when you fail, you'll become my permanent cocksleeve to breed and use whenever...\" His eyes roamed her body, lingering on her butt. \"...and however I please.\" \n\n\"Rachel, are you sure...\" He heard Alana's voice from the captain's cabin, but the redhead ignored her. \n\nTheir resident mage shuddered at the Drago's comment, but nodded. \"Agreed... but when I win, you must agree to leave the Argo, its crew, and its cargo unharmed.\" \n\nThe copper dragon smiled wickedly. \"Agreed.\" \n\n* * * \n\nHailey felt completely unsure what to do with herself. She had borrowed some of Melinda's non-maternity exercise clothes, which the Latina woman obviously wasn't using. Now she was taking a run around town to clear her head. She loved running. She wasn't sure why, but she did and had missed it terribly. \n\nNot much had changed in the town. She recognized many of the people she passed. Judging by the strange looks she got, some of them recognized her too. Despite the odd looks, everyone was friendly though. The town had a nice, old-time, homey feel that was part of the reason she'd ended up staying. \n\nOf course, the other reasons were Jason and Melinda. \n\nHer two best friends had made all the difference. Jason because he'd been so kind, even after she lifted his wallet, and Melinda because she'd gone out of her way to help Hailey get a job waitressing - a job she desperately needed - on the day they had met. \n\nMelinda and Jason seemed really happy together too. They had that 'old friends turned lovers' vibe which she envied slightly. Jason and herself had been hot and heavy fairly quickly, and only gotten to know each other after moving in together. She didn't want to ruin the couple's happiness, but she also wanted some for herself. \n\nShe stopped her run to check her pulse. \n\n\"Damn, I'm way out of shape.\" She said as she panted. A few years ago she would've hardly be breaking a sweat at this point. \n\nShe shook her head and resumed her run, all the while thinking about the situation at home. Well, at Jason and Melinda's home. She thought back to the Ten Kingdoms and Ethan with his wives on the Argo. She didn't want to share Jason, but couldn't bear the thought of hurting Melinda.\n\nMaybe, just maybe, Ethan's solution could work here too?\n\nShe ran circles in her head as she finished her run. She was breathing pretty hard when she got back. Oddly there, was a large van that looked vaguely police-like parked outside the apartment that she'd never seen before. She shrugged and walked up the stairs to Jason and Melinda's apartment. She used the key they had given her to unlock the door and open it. \n\nShe stopped short when she did. \n\nJason was sitting on the couch, leaning far back to make room for Melinda's very pregnant belly as she straddled him in an undeniably sexual way. They were both fully clothed, but she got the distinct impression that this would've been very embarrassing if she had returned five minutes later.\n\n\"Hi Hail-storm.\" Jason said with a wink and without shame, using the pet nickname for her she did something disruptive. He was also grinning, and apparently found the situation highly amusing. \n\n\"Hailey.\" Melinda said, looking slightly embarrassed as she slid off of him. \n\n\"Um, it's okay.\" Hailey said awkwardly. \"I mean, I know how the baby got in there, so...\" \n\n\"Well, it wasn't quite like this.\" Jason said mischievously. \n\nMelinda turned beet red. \n\nHailey followed suit.\n\nAs much as Jason had a talent for using humor to make people relax and break the ice, he sometimes didn't know when to stop. \n\n\"How was your run?\" He asked, seemingly oblivious to their embarrassment, or maybe he was changing the topic for their sakes. She wasn't sure. \n\n\"Um, it was good. I haven't done that in a long time and I really missed it.\" She said, though seeing Melinda straddle Jason like that had reminded Hailey of another form of exercise that she also hadn't engaged in for far too long. \n\n\"I'm sorry if I...\" Melinda looked at Jason. \"I mean, if we made you uncomfortable.\" \n\nShe shook her head. \"No it's okay. I mean, you're together now. I don't expect you to stop having sex on my account.\" \n\nMelinda nodded looking relieved, and Hailey couldn't blame her. Jason wasn't just an Adonis outside the bedroom, he was a stallion in bed too. She hadn't thought about it very much lately because she'd been too preoccupied with getting home. Now that she was...\n\nKnock! Knock! \n\nJason frowned and turned to Melinda. \"We weren't expecting anyone were we?\"\n\n\"No.\" She made to get up, but Jason beat her to it. \n\nHe opened the door to see a police officer standing there looking imposing. \n\n\"Jason Stiles, Hailey Oswald, and Melinda Estello?\" The officer asked without preamble. \n\n\"That's us.\" Jason said. \n\n\"Could you come with me please sir.\" The officer said. \n\nIt wasn't a question.\n\nSomething about him seemed... 'off' to Hailey. He looked like a police officer and had all the right gear, but something about his uniform and the way he carried himself just didn't seem right. Apparently, Jason noticed that too. \n\n\"Actually officer, I'm very comfortable right here.\" He replied coolly. \n\nThe officer put his hand on his gun. \"You need to come with me sir.\" \n\n\"I'd like to speak to your supervisor.\" Jason replied. \n\nThe faux-cop looked towards the stairs and nodded his head as if to indicate someone should approach. Moments later, a half dozen other people who looked like police officers crowded the landing; all had their stun batons out and ready. Something told Hailey that they weren't actually with the cops. ",
        "\"I don't think I made myself clear.\" The faux-cop said. \"Could you all come with me please.\" \n\nAgain, it wasn't a question. \n\n* * *\n\nAlana watched from the door to the captain's cabin frozen in indecision. She had her bow at the ready, but wasn't sure it could harm the copper dragon. Havorleth was much younger and her arrows had merely skittered off of his scales. She wanted to rush out and help somehow, but Ethan had told her to stay put and keep his other wives safe. Besides, she didn't want to put the baby at risk. \n\nShe wanted to protect Rachel, because it was stupid to try and match wits with a dragon. Everyone said so; dragons were notoriously clever and hard to outwit, yet the kind and stunning redhead was going to try. If she lost...\n\nAlana shuddered. \n\nRachel had a cocky grin on her face. She was looking forward to this. The wood only wished she felt as confident as the teen mage looked. \n\n\"Kyrupto.\" Rachel said with a smirk. \"You acknowledge Illuminar as creator of all; the highest and greatest being who ever has lived and ever will live. And thus He is supreme over even dragons?\" \n\nThe copper dragon glowered as if he hated admitting to this fact, but nodded. \n\n\"You also maintain that dragons are a higher form of life than that of mortals like humans, elves, Fey, etcetera?\" \n\n\"Obviously.\" \n\n\"Then let me ask you a question.\" Rachel took a few steps forward, casually handing the satchel full of grenades to Ethan, as if she were merely freeing her hands. \n\n\"Clever.* Alana thought to her husband.\n\n*She is indeed.* He replied appreciatively. \n\n\"Since Illuminar's Book of Light says that both dragons and mortals were both created in the image of Illuminar, and since he is the highest being in existence, then how can dragons be a higher form of being than mortals since they are both made in the image of the highest being in the universe?\" \n\n*Damn she's clever.* Ethan thought with undeniable admiration.\n\n*Yeah...* Alana agreed as she kept her eyes on Kyrupto. \n\nThe elder dragon sneered, then growled. She could almost see the wheels turning in his head. He tapped a long, sharp claw on the deck and then started pacing back and forth. He was brooding, and not a pensive brooding either. There was clear, visible anger on the dragon's countenance. She prayed to Illuminar that this dragon's sense of pride in honoring his agreements would override his anger, because if it didn't... \n\nThe Drago took a threatening step forward. \n\nRachel set her face and took one also. \n\nKyrupto locked eyes with Rachel, and Alana remembered what happened when Ethan did that to her, or his other wives. She took a deep, calming breath, made sure the arrow was nocked firmly into her bowstring, and waited. \n\n* * *\n\nRachel could feel the dragon's gaze boring into her. It was powerful and compelling. She'd heard that ancient dragons could compel people to do things with just the force of their gaze, but she had always dismissed it as a myth. \n\nNow she wasn't so sure. \n\nThe copper dragon's gaze was telling her to kneel, to submit; to concede. She could feel the iron will of the dragon pressing on her own will. She could feel the force of his desire to dominate; the power of his lust for control. She could feel the full weight of his iron willpower telling her to bend the knee to him. \n\nShe fought it. \n\nIt was among the hardest things she'd ever done. It felt like trying to lift a house, or perhaps like trying to prevent a house from crushing you. Only twice could she recall needing to apply as much willpower as she did now: when she had lifted the stasis spell on Beth's body, and when she'd engaged in the battle of willpower with Gonorran. \n\nBoth times she had needed to plumb the depths of her willpower to succeed. Both times she had fought tooth and nail to prevent her mind from giving in. And while she'd won both times, something strange had accompanied both struggles. \n\nBoth times she'd felt something that seemed completely unrelated, but clearly must be related because it was happening again right now. All three times she'd applied the full force of her will, this had happened. It couldn't be coincidence because it was happening again right now. \n\nThe birthmark on her shoulder tingled. \n\nThe small birthmark on her left shoulder that slightly resembled dragon scales was tingling slightly. It was subtle, but unmistakable and only appeared when she strained her willpower to the limit. \n\nWhy?\n\nWhy her birthmark?\n\nWhy only when she applied all of her willpower? She put the question out of her mind to concentrate on the matter at hand. \n\nKyrupto took another step forward. \n\nRachel decided to match him, but found it hard. Slowly and with deliberate force of will, she raised her foot, moved it forward, and planted it firmly on the wooden deck. \n\nKyrupto took another step forward, and so did Rachel, though with the same difficulty. He took another and so did she. She found it hard to move, but possible. Not easy, but doable with a great deal of effort. \n\nSeveral steps later, she found herself face-to-face with the copper dragon. Its face was mere feet away, its eyes boring into her. She briefly wondered if he had moved closer for the same reason that Gonorran and herself had closed the distance during the willpower duel: proximity mattered. \n\nKyrupto growled low in his throat. \n\nShe could see the frustration on his face. He had assuredly tried this on other men and women with success, yet he had none now. There was one last burst of compulsion from the copper dragon, which she barely resisted, then it ceased and he blinked. \n\nThe compulsion disappeared. \n\nRachel let out the breath she hadn't realized she'd been holding. He had been pushing so hard and she resisting so hard that when the force was removed it caused her to physically stagger on the spot for a moment. She quickly found her balance and staggered backwards until she was behind Ethan. It wasn't until she'd done so that she realized she was backing up behind him for protection. \n\nShe'd never done that before. \n\nShe had always relied on herself and felt perfectly up to the task of protecting herself. She didn't need him to protect her, but she wanted to feel protected. She wasn't sure why. \n\nShe looked back at Kyrupto in time to see him turn his powerful gaze on Ethan's other wives.\n\n* * *\n\nAlana looked directly and defiantly back at Kyrupto as he turned his gaze on her. She could feel a compulsion buried in it, but it was pathetically weak. Unlike Ethan's gaze which took all her willpower to resist, this was like resisting the impulse to touch something fascinating but gross. She briefly wondered if that was because of her bond with Ethan. \n\nThe copper dragon bored his gaze into her for several seconds before she gave him the same expression she might give a child who swore they hadn't eaten the sticky rolls... when their hands and mouth were covered in sugar. \n\nThe dragon growled before turning his gaze elsewhere. \n\n* * *\n\nBeth met Kyrupto's gaze and felt a very strange sensation. It was like when Ethan told her to do something, but it was easily resisted. Like when you've finished the first book in a series, but it was so disappointing that you only had the vaguest inclination to pick up the second book. She had just started to wonder if her bond with Ethan made it so easy to resist when the copper dragon's gaze moved on. \n\n* * * \n\nTaloni met the Drago's gaze and felt the compulsion. She balled her hands into fists and for the first time in a very long time wanted to hit something. \n\nHow dare he!\n\nShe could feel his pathetic attempt to compel her and it made her want to throttle him with her bare hands. She already had a master; he had absolutely no right and no business trying to usurp Ethan's place!\n\nShe glared pure murder back at him. \n\n\"Hey, are you okay?\" Alana asked, putting a hand on her shoulder. \n\n*Taloni?* Ethan's thoughts broke into hers, momentarily suppressing her rage. \n\n*Master, do you know what he just tried to do?* She thought back. \n\n*What did he try?* Her wonderful husband said with a hard edge in his voice that wasn't directed at her, but at the other dragon. \n\n* * * \n\nEthan felt white hot rage begin to boil through his veins as each of his wives described what Kyrupto had just tried to do. He clenched his fist so tight that he would've sliced right through the scales of his palm if his claws had been extended. \n\n\"How?\" Kyrupto said, turning to Ethan. \"How did these pathetic-\"\n\n\"SHUT UP!!\" Ethan shouted as his dragon rage swelled at the other dragon. Without thinking, he reached into the Grenade satchel, armed a grenade, and threw it directly at the confused Drago. The copper dragon looked with mild disinterest as the grenade rolled to his feet. \n\n\"What is-\"\n\nBOOM!\n\nKyrupto roared. \n\nNot a powerful dominating roar as before, but rather a primal cry of shock and perhaps pain. \n\nEthan stared in disbelief as the light breeze carried the smoke away, revealing the Drago standing there completely unhurt. The copper dragon seethed and winced, but there was barely a mark on him. He doubt the grenade had done more than cause a bruise under the scales. \n\nHis anger abated by shock, Ethan stared. \n\nKyrupto looked down at one of his forelegs, lifted it, and stared at the single drop of blood that had leaked between his seemingly impregnable scales. The Drago reached out with his other hand, wiped the blood off onto his finger and starred at it for a moment. \n\nThe Drago looked at Ethan in disbelief. \"What black sorcery is this? You've harnessed the power of thunder as well?\" \n\nEthan growled. \"If you ever so much as look at one of my wives again, I swear to God I'll-\" \n\nHis words died on his lips as Kyrupto's body language changed instantly. The Drago suddenly seemed larger; more imposing. The air seemed alight with a powerful tension, as if some great force was being restrained. \n\n\"You'll what?\" Kyrupto said in a quiet, deadly tone. \n\nSomehow, the elder dragon's words came across like a threat. Ethan took a small, involuntary step back as the Drago's arm came down to rest on the deck. It wasn't a threatening gesture, but came across as one. He glanced down at the deck beneath Kyrupto's feet, where the grenade had made a small crater. His most powerful weapon - the grenades - had only managed to wrest a single drop of blood from the Drago. \n\nHe was beginning to see why they were so feared. \n\n* * * \n\nBeth watched with baited breath as the Drago narrowed his eyes at her husband. She was standing slightly behind Alana with Taloni by her side, all were watching from the door of the captain's cabin. The wood elf was standing ready to push the door closed with her foot while her hands were holding her bow at the ready. \n\nThe copper dragon crouched slightly, then shot forward faster than Beth would've thought possible. Kyrupto moved faster than any creature she had ever seen. Faster than any creature she'd ever heard of. He almost appeared to blur slightly, moving faster than the fastest bird. \n\nHe charged forward and she saw Ethan try to move, his enhanced reflexes apparently giving him some time to react... but nowhere near enough. Moments later, Kyrupto had dodged around Ethan's spear and the Drago's hand closed around her husband's throat. The Drago lifted him into the air with one hand, then swung him over his head like a rag doll and slammed him into the wooden decking. \n\nEthan cried out in pain. \n\nAlana, Taloni, and herself all gasped as one. \n\n\"You'll what, hatchling?\" He spat. \n\nHe picked Ethan up with one hand and slammed him into the central mast. He then lifted his hand even higher, holding Ethan off the ground by his neck. Her husband had grabbed the Drago's arm and fingers trying to hold himself up or free himself, but to no avail. \n\n\"Would an infant threaten a warrior?\" Kyrupto spat as he tightened his grip. \"Would a sapling challenge a mighty oak?\" \n\nBeth could see Ethan struggling to breathe. If he'd been human, he probably would've started turning unnatural colors. Alana raised her bow and let an arrow fly. It struck dead center of the Drago's back... but was stopped cold by its scales. \n\n\"Oh Illuminar.\" Taloni breathed. \n\nRachel summoned a fireball and launched it at the dragon, but he ignored it much as he'd ignored the arrow. Serif and Raklan charged from nearby, apparently watching for an opportune moment. They both bull-rushed him and thrust their spears at him with all their might. \n\nIt did nothing. \n\nLess than nothing. \n\nThe spears caught, but didn't penetrate the dragon's seemingly impervious scales. Kyrupto - still holding Ethan with one hand - turned and grabbed both spears, ripping them away from the two crewmen with ease and throwing them over the side of the airship. \n\nBeth thought frantically for anything she could do. There was nothing; nothing at all. She couldn't fight, had no weapons, and she wasn't a brilliant tactician or a mage. She couldn't think of anything that she could do. His scales were impervious and every inch of his body was covered with scales except... \n\nExcept...\n\nHer eyes went wide as she realized what she could do. \n\nShe turned and threw herself onto the bed so she didn't hurt herself. \n\n\"Beth what's wrong?!\" Alana said, barely able to tear her eyes off of Ethan's predicament. \n\n\"Nothing, I'm going to the Astral Plane.\" She said, then closed her eyes and tried to remember what the book had said about having her spirit leave her body. \n\nIn her mind's eye, she pictured the purple hues of the Astral Plane, her two weeks there having searing it into her memory like a branding iron. She thought of Ethan to steel her will, then imagined that her body was strapped to the bed but her spirit was sitting up. \n\nIt worked. \n\nShe opened her eyes and saw that the entire world had gone purple as she had entered the Astral Plane. She barely had time to register how strange it was that she'd done it on her first try before the urgency of the situation brought her back to her senses. \n\nShe leapt off the bed in spirit form, leaving her body behind. She ran through Alana and Taloni and toward her husband, once again seeing the entire world in purple hues. Kyrupto was still holding Ethan against the mainmast, and he looked to be on the edge of consciousness. \n\nShe screwed up all her willpower and focused on making her index finger as solid as she possibly could, and then poked the Drago in the eye as hard as she possibly could. \n\nHe shrieked in pain. \n\nHe dropped Ethan as he clutched his eye, a guttural and primal collection of growls and howls coming from him. She tried to make her hands solid enough that she could help Ethan up, but her concentration kept slipping every time she tried. \n\n*Beth?* Ethan thought to her weakly as he staggered away while struggling to regain his balance. *Is that you?*\n\n*Yes Dominus.* She thought back. *I poked him in the eye.* \n\nHe half coughed, half chuckled as he staggered to his feet taking deep breaths. *Good thinking.* \n\n* * * \n\nIt took Rachel a moment to realize what had happened, and when she did she smiled slightly. \"Good going Beth.\" She murmured. \n\nA moment later, she felt a light tap on her shoulder. She smiled in that direction, noticing that Serif and Raklan had disappeared below decks, probably to get more weapons. \n\nShe turned her attention to the Drago who was currently convulsing in pain. After about half a minute, he seemed to get control of himself. He looked up and she noticed that his right eye looked like it had been punctured. He could heal it magically of course - and he probably already was - but it would take a while. \n\n\"What in Saidow's Lair.\" The Drago growled. \"True invisibility? That won't help against this.\"\n\nHe opened his mouth and the redhead saw a red glow deep in his throat moments before he began to spew fire all across the deck. He sprayed the stream of fire out in an arc, covering the entire deck in front of him. Rachel had nowhere to hide, so she launched an air ram to disperse the fire in front of her so she wasn't incinerated. \n\nIt didn't work.\n\nBy Illuminar, it didn't work. \n\nHer eyes widened as the air ram seemed to disperse on the wall of fire, breaking apart while the wave of fire continued on like her air ram had been nothing more than a gentle morning breeze. She instantly started backpedaling, trying desperately to pull the heat from the fire in front of her to avoid being incinerated. \n\nThe fire resisted her. \n\nIt actively fought her. \n\nIt wasn't like Havorleth's fire. For some reason Havorleth's breath had been harder to pull heat from than a regular fire, but it had still been very doable. Kyrupto's fire was something else. For some reason, it was incredibly hard to pull heat from it. She couldn't, at least not fast enough to save herself. \n\nShe couldn't. \n\nShe was going to die. \n\nOh Illuminar; she was going to die.\n\nThat realization came with a strange emotion; regret. Not for anything she'd done, but for what she hadn't done. She hadn't told Alana how much she meant to her as a friend. She hadn't told Ethan how grateful she was for everything he'd done for her.  \n\nEthan...\n\nHe was such a good man, and a part of her wished that he could be hers; her man. She let herself admit that much to herself because there was no point denying it any longer. She truly wanted Ethan. Alas, it was too late. \n\nShe closed her eyes and waited for the fire to hit her. \n\nWHAM! \n\nThe wind was nearly knocked out of her as someone slammed into her. Strong arms wrapped around her and she felt something envelop her entire body as they hit the wooden deck. She opened her eyes to see to see a mass of dark grey scales and leathery wings wrapped completely around her. \n\nEthan.\n\nShe couldn't help but smile as she realized that he'd dived to save her instead of flying up and missing the flames altogether. He'd chosen to put himself in danger to save her. Despite the situation, or perhaps because of it, she felt her heart flutter. \n\nThen he roared in pain. \n\nHis back and wings were on fire, burning because he had saved her. \n\nShe felt her rage rise. \n\nHe rolled, convulsing from the pain even through his heat-resistant scales. Rachel summoned all her willpower and - feeling her birthmark itch - she grabbed the heat from the flames. It fought her, but she beat it into submission with pure willpower. \n\nShe fought it with all her might, drawing on every last ounce of willpower she possessed to power her spell. It was harder than lifting the stasis spell from Beth, and there was far more of it. \n\nThen she reached out further. \n\nShe saw that half of the Argo's deck had started to burn as Ethan's wings fell away from her. She took that heat too as she stood, forcing it to do her bidding despite it fighting her the entire time. It was among the hardest things she'd ever done, but she did it. She pulled it all in towards her and compressed it into a fist-sized fireball. \n\nShe looked at Kyrupto, getting ready to release it. \n\n\"How?\" The Drago wondered as he looked at the dragon's fire - his fire - now being wielded by the teenage mage. \n\nShe finished compressing the fireball, barely registering that her fury was being fueled by the fact that the Drago had hurt a man that she dearly and truly lov... \n\nShe pushed it out of her mind and focused on frying her enemy. She felt herself getting a little lightheaded as the exertion took a physical toll on her, but she didn't care right now. \n\nThe Drago had hurt Ethan; he needed to pay. \n\nShe aimed the fireball at him and released it. \n\n* * * \n\nEthan felt like his back and wings had been dipped in molten lava. He was vaguely aware that the pain was a good thing because it meant the nerve endings hadn't been burned off. However, he didn't really care at the moment. He tried to focus on healing them, but couldn't. The pain was too great for him to focus properly. ",
        "Mere moments later, he felt the pain begin to subside. \n\n*I've got you master.* He heard his beautiful Fey wife think to him. \n\n*Taloni, you should be safe in the captain's cabin.* He groaned in pain, though thankfully it was lessening. \n\n*Yes master, I will be once I've taken care of you.* She replied. \n\nA minute or two later the pain finally lessened to a dull ache and he rolled to his feet. Taloni pecked him on the cheek then ran back to the safety of the captain's cabin. He looked around the deck, seeing light scorch marks covering most of the weather deck aft of the main mast. \n\nHe turned his concentration to Kyrupto, who was staggering like he'd just been hit by a boulder. He seemed distracted with beating a fire out of his scales. \n\nRachel was just in front of him, panting like she'd just run a marathon. She seemed to sway on the spot, clearly having trouble keeping her balance. He darted forward and caught her just as she started to stumble backwards. \n\n\"Ethan, you're okay.\" She said dreamily as she seemed to fight for consciousness. Something had clearly drained her, but she didn't look in danger; just exhausted. \n\n\"Hey, I've got you.\" He said as he lowered her to the deck. \n\nShe didn't resist, becoming very pliable and relaxing into him completely as he gently set her down on the deck. Her eyes fluttered, her long eyelashes fluttering with an expression he wouldn't have been surprised to see from his wives. \n\nFor the briefest moment, they stared into each other's eyes. \n\nShe presented such strength to everyone, but right now he could see the vulnerability that she concealed from the world. She had a kind, caring heart like his other wives. But unlike them she felt the need to conceal it and appear strong. The duality of her incredible strength and profound weakness was incredibly attractive. He was about to say something, when Kyrupto's growls brought him back to the situation at hand. \n\nThe copper dragon was eyeing him like he couldn't believe it. \"How? How did that cow manipulate my fire?\" \n\n\"Because she's amazing.\" Ethan replied, then realized that antagonizing a Drago probably wasn't the best idea. They had played all their cards and had nothing left. Rachel was clearly exhausted and tapped out, grenades did essentially nothing, and they didn't have any other weapons that could hurt him.\n\nThe other dragon considered him, looking pensive. He took the opportunity to possibly play his last trump card. It had worked once before, why not again?\n\n*Beth, can you get the other eye?* He asked. \n\nThe only reply was a mental groan of pain. \n\n*Beth, are you okay?* \n\nWhen she replied, it was halting and full of pain. *I think I will be.* \n\n*What happened?* He asked in alarm, not understanding how she could've been hurt while on the Astral Plane. \n\n*That fire was...* She paused. *I felt it and it hurt.* \n\n*But you'll be okay?* He asked. \n\n*I think so.* \n\n*Okay, then stay away from him; go back to the captain's cabin.* Moments later, he felt a \"tap, tap\" on his shoulder.\n\n\"You...\" Rachel said to Kyrupto, panting as she did so. \"You promised to leave us unhurt if I outwitted you.\"\n\n\"An agreement rendered null and void when you attacked me.\" The Drago sneered. \n\n\"You attacked my wives.\" Ethan hissed. \"I responded in kind.\" \n\n\"I made no aggressive move whatsoever.\" Kyrupto scoffed. \"You have voided all our agreements with your unprovoked attack. Give me my gold or the cow-\" he nodded towards Rachel. \"-and I won't leave your ship a pile of ash. She has peaked my interest and isn't totally repulsive; she'll make a nice cock-sleeve and incubator for my next hatchling. \" \n\nEthan felt a surge of shame and guilt well up inside of him. \n\nHe'd done it again. \n\nOnce again, that damn dragon's temper of his had managed to make a complete mess of things. He had made a complete mess of things. And as they had almost no gold, Rachel - beautiful, smart, selfless Rachel - might pay the price.\n\n* * * \n\nRachel pulled herself up onto her elbow. She still felt slightly dizzy, but thankfully the world had stopped spinning. Kyrupto took a step towards her and she shuddered. There was no possible way she would ever allow him near her. \n\n\"You're not taking Rachel anywhere.\" Ethan stood and stepped between her and the Drago. \n\n\"Seeing as you have no gold, I'll take what I wish in payment.\" The copper dragon sneered through his remaining good eye. \"Be grateful it isn't more.\" \n\nThere was a slight scraping sound as Ethan's weapons flew across the deck and into his waiting hands. \"You are not taking her anywhere.\" \n\nThe Drago scoffed. \"Those pathetic weapons have no chance against my scales.\" \n\nRachel couldn't see Ethan's expression, but he crouched slightly and raised his weapons in a defensive stance. \n\n\"The hard way then.\" Kyrupto sighed, then charged forward. \n\nHe moved so fast that Rachel almost couldn't believe it. He went from standing still to a full sprint in the space of a single step. Ethan tried to counter, but he wasn't anywhere near fast enough. The copper dragon evaded his spear tip and she saw one of his clawed hands shoot out. \n\nEthan recoiled, physically knocked back by the force of Kyrupto's strike. He flew over Rachel's head and landed in a heap on the deck behind her. His chest was covered in blood and she could see deep puncture wounds where the Drago's claws had sliced through Ethan's scaled like a hot knife through butter. \n\n\"MASTER!\" Taloni shouted and ran to him. \n\nRachel steeled herself and pulled herself to her feet. She raised her hands, ready to summon fire to attack or an air-ram to escape if need be. Moments later, an arrow clattered off of the Drago's head, missing his remaining eye only because he had tilted his head at the last second. \n\nAlana. \n\nRachel glanced towards the captain's cabin to see Ethan's first wife livid and scared. \n\n\"Stupid cow.\" Kyrupto sneered. He opened his mouth to breath fire, but stopped when the wood elf sent an arrow towards his gullet. His jaw stayed open for a fraction of a second, then he clamped down, stopping the arrow with his teeth before it could strike the inside of his mouth. He bit down hard and the arrow snapped. \n\n\"Try that again, and nothing will save you.\" The Drago hissed. \n\nThoroughly defeated, Alana sank to her knees. \n\nRachel turned and growled at him; Ethan must be rubbing off on her. Realizing that her preferred fire wasn't going to harm a dragon, she changed tactics. She started pulling heat from his body in an attempt to freeze him. Kyrupto rolled his eyes, much as a parent would when a child threw a tantrum. \n\n\"You have spirit cow; I'll enjoy breaking you.\" \n\nHe started towards her and she backpedaled. He grinned then rushed forward much as he had done with Ethan. \n\nShe was ready. \n\nShe had already grabbed all the air to one side of her, so she merely reoriented all of it throwing her out of his path... or at least that was her intent. \n\nIt didn't work. \n\nThe dragon changed course, moving faster than she was and intercepted her dodge so that she nearly slammed into him. It was like slamming into a brick wall. She cried out in pain as she felt a 'pop' in her shoulder and her arm flopped at an odd angle as it dislocated. She staggered for a moment before he gave her dislocated shoulder a none-too-gentle push. She screamed in pain as her legs gave out from the agony and she hit the deck. \n\n\"Any other challengers?\" He said mockingly. \n\nMoments later, he flinched as if something had hit his eye. However, this time it rebounded and didn't seem to cause any pain at all. He blinked, and she noticed it looked like he had a second, transparent eyelid under the normal ones. She'd heard of creatures which those to protect their eyes while flying or swimming, but didn't know dragons possessed one. He must not have had his down when Beth tried the first time. \n\nHe shot a brief burst of fire to that side in retaliation. Oddly, for the briefest moment, Rachel thought she could see it curl around what looked like a feminine shape before dissolving. \n\n\"Beth.\" She breathed. \n\n\"You're coming with me cow.\" Kyrupto reached down to grab her. \n\n\"Master, no!\" She heard Taloni shout from behind her. \n\nShe glanced over her shoulder to see Ethan stand up. He was still clearly in pain, his wounds were only partially healed and there was fresh blood trickling from them. \n\n\"You... are... not... taking... her.\" He said, each word punctuated by his labored breathing. \n\nRachel felt her jaw drop and her heart melt as her dislocated shoulder burned in pain every time she breathed. He was doing this for her. He was fighting for her. He was hopelessly outmatched - laughably overpowered - and he was still fighting for her. \n\nThe Drago laughed. \"And who will stop me?\" \n\n\"Leave.\" Ethan winced as he extended an arm toward his hammer, which flew into his hand. \"Now.\" \n\nKyrupto didn't bother with his super speed. He simply walked towards Ethan, who swung his hammer at the copper dragon. The Drago easily dodged it and then backhanded Ethan. It looked like it hit with the force of a charging troll because he spun around like a rag doll and hit the deck, though the hammer never left his hand. It looked like he had a death grip on it. \n\n\"Know your place, hatchling.\" He spat. \n\nRachel tried to move her arm, but it screamed in protest as the movement jostled her dislocated shoulder. She could probably pop it back into place, but not without something to brace it against. Unfortunately, this was something magic couldn't fix. \n\nKyrupto turned towards Rachel with a wicked smile. \"Now, how do you feel about carrying my brood?\" \n\nShe shuddered. \n\n\"No.\" Ethan said weakly, barely lifting his head. \n\nKyrupto turned back to Ethan, clearly surprised that he was still conscious. \"Haven't you had enough yet?\" \n\nEthan groaned, put his hands on the deck, and pulled himself up. One side of his face was puffy and swollen. His eye was bloodshot and there was blood running freely down his face. He looked like he'd gone ten rounds in a boxing match with a troll. \n\n\"You're... you're not...\" He groaned. \"You're not...\" He gave a herculean effort to get up one foot under him, so he was almost kneeling. \"...not taking her.\" \n\nHe wasn't even standing. \n\nHe probably couldn't stand. \n\nHe looked unsteady even though he had all four limbs touching the deck. She couldn't decide if this was the sweetest thing that anyone had ever done for her or the stupidest. It was probably both. \n\nWhy? \n\nShe knew he was a good man, but this...? She wasn't even one of his wives. She would've had no trouble believing that he'd do this for Alana, Beth, or Taloni, but her? She had once told him in no uncertain terms that she would never join his 'harem'. She was just a friend, so why? \n\nWhy do this for her? \n\nThat's when she realized what she needed to do; the only thing that could save him. \n\n\"I'll go.\" She said to the copper dragon. \"If don't hurt him, I'll go with you.\" \n\n* * *\n\nKendra couldn't stop staring at the spectacle before her. \n\nWith the favorable wind, she had reached the dragon's ship and used an enchanted grappling hook to snag the railing. The enchantment made sure it made no noise, and her enchanted vambraces had allowed her to climb up the rope hand-over-hand and onto the airship's quarterdeck. She'd snuck forward in time to see the dragon get repeatedly battered trying to save the redhead. \n\nMore than once she'd been tempted to try using her last Dragon Slayer Arrow to intervene. But even if she could hit him - which was unlikely given the Drago's reaction time - she doubted it would hurt him after seeing what his scales could endure. \n\nShe had just watched a dragon - the most selfish creature in Illuminar's whole creation - selflessly fight to save a human. \n\nIt didn't make sense. \n\nThe other dragon did. Everything that the Drago had done perfectly matched her experience and training. He was cruel, selfish, arrogant, and absolutely enjoyed dominating others. \n\nBut this gray dragon...\n\nThis Ethan...\n\n\"I'll go.\" The redhead said to the copper dragon. \"If don't hurt him, I'll go.\" \n\nKendra felt her jaw drop. \n\nA human willing to sacrifice herself for a dragon? A human woman who knew exactly what fate was in store for her if the Drago took her was actually voluntarily sacrificing herself for Ethan. \n\nWhy?\n\nWhat dragon - what man - could ever be good enough to warrant that? \n\n\"No, Rachel.\" Ethan panted, clearly trying to stand and clearly failing. \n\nThe Drago look as confused as Kendra felt as he cocked his head to one side. \"This cow offers to sacrifice herself for you, and you would stop her?\" He said with disgust. \"What kind of dragon are you?\" \n\n\"On my better days, the good kind.\" Ethan panted heavily. Then he raised his hammer, pointing it directly at the Drago. \n\nCRACK! \n\nA bolt of lightning arced out from the hammer and struck the copper dragon square in the chest. \n\nHe barely flinched. \n\nInstead, he walked forward, jerked the hammer out of Ethan's hands, and threw it over the side of the ship. \n\n\"Pathetic.\" The Drago spat. \"You have no gold nor pride either.\" \n\nEthan seemed to be fighting an internal war with himself. His expression was changing so rapidly it was hard to tell what he was feeling. When he finally spoke, it was halting and forced. \n\n\"I... do... have... gold...\" He said as if forcing himself. \"Leave Rachel alone and I'll... I'll give... I'll give you...\" The dragon seemed to shake more, and while his eyes looked determined, his body language was that of someone at war with himself. \n\nHe seemed to steel himself and then said haltingly. \"I'll, give, you, my... my...\" He growled. \"...my gold to spare her.\" \n\nKendra blinked. \n\nThe Drago stared. \n\nThe redhead looked stunned. \n\n\"You would trade your gold for a cow?\" The copper dragon seemed almost as stunned as the redhead looked and Kendra felt. \n\nEthan nodded, and it looked like the hardest thing he'd ever done in his life. \n\n\"All of your gold?\" The Drago pressed. \n\nThere were several seconds of hesitation during which the dragon shook harder than she'd ever seen a living being do. He was clearly enraged, clearly struggling, but also clearly resolute. \n\n\"Yes.\" He finally said after what seemed like forever. \n\nIt must be a trick. \n\nThat's all it could be. No dragon would ever voluntarily give up its gold. Ever. Not even to a Drago, which could have a powerful hold on a younger dragon. They might give up their gold if forced, but no dragon would ever volunteer its gold; any of its gold, much less all of it. Certainly not to save a human. \n\n\"This I must see.\" The Drago said sounding amused, then he turned towards the captain's cabin. \"You, Fey cow; heal him as you did before. Let him bring this gold to me himself.\" \n\nThe gray dragon seemed to bristle, but he was in no position to object because he was barely remaining upright. There was no movement until Ethan nodded slightly towards the captain's cabin. Then giving the Drago a wide berth, Taloni - dear, sweet Taloni - cautiously approached her husband and started healing him. \n\nThere were a tense few minutes as she worked where no one moved and no one said anything. The two dragons didn't take their eyes off of each other. \n\nOne looked livid, the other amused. \n\nFinally, Taloni stepped back and Ethan struggled to his feet. She had clearly only healed the life-threatening injuries. His face still looked bloody and misshapen by bruises and he seemed a bit unsteady. He staggered as he stood, glaring pure murder at the Drago who looked amused; indifferent to the pain he had caused. \n\nKendra watched in disbelief as Ethan slowly walked towards the captain's cabin, presumably to get some hidden weapon he could use to fight the Drago. But what kind of weapon? What could he possibly have? She seen the lightning and heard the thunder and yet the Drago looked unharmed. What else could he possibly have? \n\nHe couldn't actually being going to retrieve his gold...\n\nCould he?\n\n* * *\n\nRachel had seen Ethan literally tear men to shreds for even hinting that they wanted to take his gold. She seen him use fang and claw to brutally eviscerate men who merely mentioned taking his gold. But now...\n\nShe just stared. \n\nEthan was slowly, haltingly walking towards the captain's cabin, presumably to get the gold he had so fiercely protected the entire time she'd known him. He was getting it to trade for her, and she simply couldn't believe it. \n\nWhy? \n\nIt didn't make sense. \n\nWhy would a dragon voluntarily give up all his gold to save her. Why would Ethan? She could maybe see him doing it for Alana, Beth, or Taloni; but her? Nothing was more precious to dragons than gold; nothing. But now Ethan was... \n\nShe shook her head. \n\nIt didn't make sense. \n\nWhy? \n\nHe passed by Alana, who looked stunned and anxious but proud. Behind her, Taloni gaped at him with an expression that betrayed the same emotions as his first wife. \n\nHe was inside for less than thirty seconds before he came back out, cradling the heavy gold cube with the same care and affection that you might use when holding an infant. She knew it was heavy, probably around a hundred pounds or so, but still. \n\nWhy was he doing this for her? \n\nDespite the danger, she felt her eyes getting slightly moist as she watched Ethan carry his most precious possession to an implacable foe to save her. No one had ever done anything like that for her before. Ever. She had tried to kill him less than two months ago and he was doing this?\n\nShe sniffled slightly. \n\nAlana seemed to notice her and gave her a small smile. For some reason, the wood elf seemed both sympathetic and like she was saying 'that's why I love him' at the same time. For the first time, the redhead truly understood why the wonderful brunette did.\n\nSHe felt her heart flutter. \n\nShe knew it was because of Ethan. She knew that right now - in the midst of this chaotic and dangerous mess - that she had just fallen in love with her best friend's husband. Mere months ago, she would've felt incredibly guilty about that. However, the wood elf had made it clear that she didn't mind sharing him...\n\n...but Rachel did. \n\nPerhaps Alana was just a better person, perhaps she herself was just selfish, perhaps Ethan had married selfless wives, or perhaps his dragon side had changed them. Regardless, she didn't want to share a husband. For the first time, she almost wished that she was willing to; but she wasn't. \n\nShe looked up at Ethan. He was bloodstained and battered, clearly in pain, and just as clearly fighting a fierce war with himself. He was doing it all for her. Almost all his injuries were because he had been protecting her. \n\n\"Here.\" Ethan said, holding the gold cube out slightly towards Kyrupto, its weight prevent him from extending his arm. He was still visibly shaking. His expression was vacillating between rage and sorrow. \n\nKyrupto reached his hand out, but stopped moments before touching the gold cube and cocked his head to one side. \"This is...\" \n\nHe waved his clawed hand slowly over the cube for a moment without touching it, then recoiled like it had bit him. \n\nHe snarled at Ethan. \"You would dare to offer me gold that was once cursed?\" \n\n\"How did you-\" Ethan began, but the Drago cut him off. \n\n\"I'll take the cow instead.\" He said, and then moved. \n\nRachel barely had time to react before she felt the copper dragon's viselike grip around her waist. She felt a sinking feeling in the pit of her stomach as she realized that she was about to be abducted by a Drago who intended to force her to carry his brood. Her mind instantly started working on ways to prevent that, because she wasn't going along without a fight. ",
        "The Drago picked her up and made to spread his wings, then snarled and unceremoniously dropped her onto the deck. She cried out in pain as the movement jostled her dislocated shoulder. \n\nKyrupto glared at Ethan. \"Is there a single thing on this ship that you haven't tainted?\" He spat in disgusted. \n\nEthan blinked. \"Tainted? What-\" \n\nThe copper dragon interrupted, curling his lip in disgust. \"You sicken me; bonding and half bonding to cows.\" He shuddered in revulsion, then his gaze became hard. \"You owe me hatchling. You owe me and have not a single thing of value for me to collect from you. We will meet again hatchling. When we do, you better have something more valuable to offer me than cursed trinkets and tainted cows.\" \n\nHe exhaled a puff of smoke as if to emphasize the point, then spread his wings and took to the skies. \n\nJust like that, he was gone. \n\nRachel felt an enormous sense of relief wash over her, followed by a bit of guilt and shame as she realized what the copper dragon had been referring to. She checked her mana and sure enough, she still had a small sliver of Ethan's mana inside of her. \n\nShe knew that's what Kyrupto had been referring to. He could hardly have meant anything else by 'half-bonding'. Ethan had saved her once again, though he didn't know it. \n\nDamn him; could he be any more wonderful? \n\n* * * \n\nKendra stared in open-mouthed disbelief at what had just transpired before her eyes. For a dragon to do what Ethan had just done was almost outside the realm of her comprehension. \n\nHe seemed to sway on the spot, and two of his wives rushed forward to help him. He slid down to the deck still cradling the gold cube. She recognized the exhausted look of someone who'd been running on a fear-induced, adrenaline-powered, 'fight-or-flight' mode and was now coming down off of it. \n\nDeciding to leave before she could be spotted, she crept backwards in the direction of the railing where she'd climbed up via the grappling hook. She had just reached it when the high elf - Anthiel - came up the stairs to the quarterdeck. Their eyes met for a moment and the airship's pilot did a double take. \n\nDamn; she'd been seen. \n\nNot sure what else to do, Kendra gave her an apologetic look and then slipped over the side and shimmied down the rope as fast as she could. Once safely onboard her own airship, she pushed a touch of mana into the rope, which deactivated the enchantment on the leather 'hook' portion, allowing it to go from rigid to flexible so she could pull it down. \n\nShe altered the weight logs so her ship dropped like a stone, only halting the fall as she neared the ground. She pulled up the lower mast and then let her airship fall almost to the ground. Then she leapt out and with her still-activated strength enhancing vambraces pulled it under the branches of a large oak tree. \n\nShe was concealed. \n\nThe instant she was, her mind swung back to what had just happened; what the dragon had just done. She could hardly believe that a human might do such a thing, much less a dragon. Taloni had said he was a good man and she obviously believed he was selfless. Now Kendra was now hard pressed to disagree. \n\nShe couldn't deny her own eyes. \n\nShe couldn't deny what she'd seen. \n\nFalkaan had said that if she watched him long enough, she'd see what kind of a man he was. \n\nNow she had. \n\nNow she knew. \n\nShe didn't know what to do about it, or even what to think about it; but now she knew. There was simply no denying the evidence that she'd seen, no matter how much it conflicted with everything that every other dragon had done. \n\nEthan was a good man- err, dragon. \n\nShe honestly didn't know what to think of that. \n\n* * * \n\nEthan felt like he'd run a marathon after losing a fight to a professional boxer who outweighed him by double. His entire body ached, most of it hurt, and his back still seared from where Kyrupto's flames had hit him. That fire had been something else. Havorleth's had hurt, but nothing like this Drago's flames had. \n\nHe was currently on all fours on the deck, panting from the exertion he'd just gone through. It was as much mental as physical. Getting that gold cube for Kyrupto to save Rachel had been the hardest thing he'd done in his entire life. No exceptions. \n\n\"Are you okay?\" Alana asked with concern. \n\nHe groaned; speaking felt like a lot of work right now. \n\nHis wood elven wife turned to his Fey bride. \"Can you finish healing him?\" \n\n\"It would be my pleasure.\" \n\nHe felt two soft hands touch his back and winced; the burn still hurt slightly. \n\n\"I'm sorry master, but I didn't have time to fully heal it before and it's better if I can touch it.\" \n\n\"Go ahead.\" He gritted his teeth and waited. \n\nOver the next few minutes, the pain and burning sensation died down. The aches and soreness remained, but at least it didn't hurt to move or breathe anymore. \n\n\"Ow!\" Rachel yelped followed by a hiss of suppressed pain.\n\nHe looked up to see Anthiel kneeling next to her, and it looked like the high elf had just popped the redhead's arm back into its socket. Antheil gave her a pat, probably knowing the redhead would fix any damage magically, and then headed back up the stairs to the quarterdeck. \n\nHis eyes met Rachel's for a moment. \n\nThe beautiful teen mage looked like she might cry, and not from pain. She looked into his eyes for several moments as if searching for something. There was an expression on her young face that he couldn't place. She looked both happy and mournful; content and dissatisfied all at the same time. Her eyes flicked to Alana and Taloni, then back to him. \n\nShe looked quite vulnerable right now, which was something that he rarely saw in her. \n\n\"Thank you.\" She said softly. \n\n\"You'd do the same for me.\" He replied with a lopsided grin, which was easier now that every inch of his body didn't hurt.\n\n\"I'd like to think so.\" She whispered so quietly he that almost missed it, and doubted anyone but possibly Alana had heard her. \n\nEthan groaned as he stood up, thanked Taloni and then made his way over to her, still holding the gold cube. \"Rachel, what do you mean 'you'd like to think so.'?\" He asked gently. \n\nShe started to tear up and opened her mouth to respond when Taloni spoke. \n\n\"Where's Beth?\"\n\nReflexively, he checked his bond with her and found it filled with pain. \n\n\"Beth.\" He breathed, looking around for his blonde wife. \n\n\"In here.\" Alana said gesturing to the captain's cabin. \n\nHe darted inside still holding the gold cube, his body only protesting slightly with groans and creaks as he did so. Beth was laying on the bed in the captain's cabin curled up in the fetal position. She was groaning quietly and obviously in a lot of pain. There were angry red burn marks over every inch of exposed skin that he could see. They didn't look serious, but they were surely very painful. \n\n\"Kyrupto.\" He snarled, remembered how he'd seen Beth's silhouette engulfed by flame, even while she was on the Astral Plane. \n\n\"Taloni!\" He called, knowing the Fey teen was far better at healing than anyone else on the ship. She was at his side in a moment. She took a sharp intake of breath when she saw Beth and then sprang into action. \n\nLiterally. \n\nShe leapt forward, using her wings to both jump further and slow her jump to land lightly next to the moaning blonde. She stretched her hands out and began to work. It took a couple of minutes, but the redness over much of Beth's body slowly receded and then disappeared altogether. \n\n\"There.\" Taloni said when she was done. \"You're lucky the burns weren't very serious or I wouldn't have been able to heal them so completely.\"\n\nBeth sat up and hugged her. \"Thank you. That was... it was awful.\" \n\n\"What happened?\" Ethan and Alana asked at the same time. \n\nHis teen wives smiled at their synchronicity before the blonde replied. \"I could feel his fire even though I was on the Astral Plane.\" \n\n\"He must've enchanted it somehow.\" Rachel said from the doorway. \"I have no idea how that's even possible, but he was a Drago, so...\" \n\n\"He must have.\" Beth said, looking much happier now that most of her body didn't have minor burns all over it. \"I was hit with some of Havorleth's breath - more than once - but I didn't feel it at all.\" \n\nEthan took a deep breath and let it out slowly. \"Well, I'm glad you weren't hurt worse. I think you really saved us by poking his one eye out.\" \n\nBeth grinned. \n\nWith his wife safe, Ethan leaned up against the wall. He felt like he needed to sleep for a week. Magical healing was wonderful, but it left all the aches from an injury for a little while. A good night's sleep seemed to cure most of it, but it was only mid-morning. \n\n\"Are you okay?\" Beth asked him as he sagged against the wall a bit. \n\nHe nodded. \"Now that you're all safe, I will be.\" \n\nAs one, his wives sighed. \n\n\"Aww.\" Beth said, opening her arms from her position sitting on the bed. \n\nHe moved forward, flopped on the bed and landed with his chin resting on her shoulder. He dropped the gold cube between the bed and the wall, figuring he'd return it to its hiding place later. Beth hugged him awkwardly and then turned slightly, setting him down so he was resting on the bed. \n\nIt was so comfortable. \n\n\"I'm just gonna lie here a moment, then we need to talk about what just happened.\" He said and then yawed. \n\n\"You can sleep you know; you deserve it.\" He heard Alana say. \n\n\"No, I'm just going to... to...\" He yawned. \"To rest for a moment.\" \n\nThat was his last thought before he drifted off to sleep. \n\n* * * \n\nRachel had the strangest impulse to crawl onto the bed next to Ethan, snuggle up with him, and fall asleep in his arms. \n\nShe resisted. \n\n\"Sleep isn't a bad idea.\" She said gesturing to the now sleeping dragon. \"I'll be below decks.\"\n\n\"Thank you for everything.\" Alana said as she wrapped the redhead in a bear hug, carefully avoiding her now-healed but formerly dislocated arm. \"We wouldn't be alive or have a home without you.\" \n\nThe teen mage hugged her back. \"It's my home too, and I would never let anything happen to you all.\" \n\nAlana gave her an extra squeeze, then let go. Beth and Taloni followed suit, each giving her a genuine, heartfelt hug and thanking her. \n\nFeeling slightly better, Rachel headed out of the captain's cabin and below decks towards her hammock. Her previously dislocated shoulder now merely ached slightly, as she'd healed it after Anthiel had popped it back into its socket. She yawned more than once as she worked to keep her eyelids open. Eventually, she reached her hammock and flopped down in it. Her body might be resting, but her mind was abuzz. \n\nShe loved Ethan. \n\nShe didn't want to, but she did. \n\nShe wanted to let Alana, Beth, and Taloni have their husband and not add yet another wife to the mix. Yet she wanted him, but there was no way she would even consider trying to take him away from them because she had no desire to come between them. She couldn't even if she wanted to; they loved each other too much. \n\nShe wanted to be loved that much. \n\nShe wanted to be loved by him that much. \n\nShe rolled over in the wraparound hammock, wishing there was a way that she could have that. A part of her wished that she could be okay with sharing a husband, but she didn't think she ever would be. She wanted to be, but could feel deep in her bones that she never would be. Not without something changing her at her core.\n\nShe closed her eyes as her brain reminded her that none of his other wives had liked the idea either... until they had married him. But she wasn't willing to bet her whole life's happiness on the possibility that she would be changed to be okay with it. \n\nShe didn't want him to be changed by him her either. She didn't want to be changed by anyone, she wanted a true partner in marriage. \n\nAs she lay there, she realized part of why she didn't want to share a husband. She wanted an equal partner in marriage and that just wouldn't be possible if she was one of several wives. There would always be a power imbalance between them because he was her only husband, but she wouldn't be his only wife. \n\nThere was a fundamental difference there; an inequality that could never be corrected. She could never be his equal if he had other wives, though she was sure he'd treat her as an equal. She'd seen the subtle shift in women who'd shared a husband before. She'd seen how they naturally followed their husband's lead. \n\nShe saw it in Ethan and his wives. \n\nStill...\n\nShe rolled over onto her other side, not liking where her head was going. There was a tiny part of her that didn't care about the imbalance that would result from being one of multiple wives. There was a small part of her that was willing to sacrifice her independence for the love that he clearly shared with his wives...\n\nBut only a small part. \n\nShe sighed and resolved to sleep. Her head and heart were at war and she didn't see a solution. Not one she could think of anyway. As she started to drift off, she couldn't help but wonder what her life would be like if she married Ethan. \n\n* * * \n\n\"What the actual fuck!\" Hailey kicked the side of the van for the dozenth time. She wanted to punch it too, but her hands were handcuffed behind her back, just like Jason's and Melinda's were. \n\nThey were sitting strapped into the back of a van after being forcibly removed from their apartment. The men had unceremoniously cuffed them and strapped them in, then closed the van and started driving off to God knows where. Thankfully they were alone in the back and didn't have some burly fake-SWAT guy leering at them. However, the back of the van was solid metal without even any padding on the seats to which they were strapped. \n\nJason was doing a calming breathing exercise while Melinda leaned on his shoulder on the edge of tears. He was doing his best to hold her, but it was hard with his hands cuffed behind his back. \n\n\"What the God damn hell! These mother fuckin'-\" She started to say. \n\n\"Hailey!\" Jason said sharply. \n\nShe fell silent and looked at him. \n\n\"Losing your cool won't help anything.\" He said calmly. \"Take a few deep breaths and calm down; we'll get through this.\"\n\nShe glared at him but didn't resume her verbal tirade against the metal walls. \"It's just not fair!\" She huffed. \"I just spent the last four years being a slave, was free for like, two weeks, and now I'm trussed up like a slave at market again.\" \n\n\"I don't know who these guys are or what they want.\" Jason said. \"But whatever is waiting for us when we stop, we'll face it together; all three of us. We stand a much better chance of avoiding issues if we stay calm and work together.\" \n\nHailey took a deep breath and let it out slowly. \n\nHe was right. \n\nDamn it, he was always right. One of the things she loved most about him - that also annoyed her to death - was his rock solid, unflappable calm in the face of whatever came their way. Long ago, she'd learned to rely on that. His example had even helped to calm her normally anxious self. \n\nShe made do with squeezing her fist so tight it hurt and then relaxing her hand. She wanted these motherfucking assholes to-\n\n\"Hailey.\" Jason said, interrupting her train of thought. She looked at him and he shook his head fractionally. \"Calm, take a deep breath.\" \n\nShe resisted the urge to pout; he still knew her so well after all these years. Of course it also made her heart want to melt, but her rage was keeping it not only solid, but livid. Still he was right...\n\nShe took a few deep, slow breaths and felt slightly better. Not perfectly better, but slightly. \n\n\"Hailey.\" Melinda said gently. \n\n\"Yeah Mels?\" \n\n\"I hate that we're here, and I wish you hadn't been captured too, but I do feel better with you around.\" \n\nHailey managed a brief smile. \"Thank you.\" \n\nFor some reason, that had seemed like an olive branch from the Latina woman. Her best friend was still very much with her former boyfriend, but she was going out of her way to make Hailey feel included. She was glad. She desperately wanted Jason back. She just didn't know how that could happen, or even if could. \n\nMoments later, the van stopped and the engine was turned off. \n\n\"Here we go.\" Jason said as the door to the van opened. \n\n* * * \n\nRachel felt a gentle nudge on her arm as she was gently shaken awake. \n\n\"Mommy, Mommy.\" A little girl's voice said from faraway, as if in a dream. \n\n\"Mommy, you have to come look.\" The little girl's voice said again, this time more insistently. \n\nRachel groaned and pulled back the covers, letting the early morning light stream onto her through the large windows of the bedroom. The bed beneath her was a featherbed, so incredibly soft and comfortable that it almost seemed like she'd conjured from her imagination.\n\nNext to her and snuggled up against her was a mess of chocolate-brown hair from which a pointed wood-elven ear was sticking. The redhead smiled, gently kissed her cheek, then swung her legs out of the bed. She groaned as she did so, still getting used to having the different center of gravity that eight months of pregnancy naturally caused. She rested her hand on her stomach affectionately as she looked at the little girl who had woken her. \n\nShe was only just three, her red hair looked so much like her own, and the girl was smarter than was good for her. \n\n\"Mommy, you need to come see. Sissy caught a butterfly.\"\n\nRachel smiled at the pure joy on her daughter's face. \"Okay, lead on.\" \n\nThe tiny redhead beamed as she turned, red hair flying every which way as she skipped out of the room with Rachel in tow. Her daughter led her outside to where Sissy was standing. Sissy was her daughter's nickname for her best friend, who had pointed ears just barely poking out of her chocolate-brown hair, just like her mother. The nickname \"sissy\" had come from them being sister; well, half-sisters. Despite the wood elven girl being older than her own daughter by a year, they were almost the same size. \n\nSissy was holding her index finger up and a beautiful butterfly was balanced on it. \n\n\"Aunty Rachie.\" Look what I caught!?\" Sissy exclaimed. \n\n\"It's beautiful.\" Rachel beamed. \n\nHer daughter and Sissy spent the next few minutes fussing over the butterfly and admiring how beautiful it was while it very patiently stood there being admired. Rachel suspected that Sissy had inherited Alana's affinity for soothing small woodland creatures, otherwise she doubted very much that the butterfly would've put up with it. \n\nRachel stood there feeling the happiest she'd ever felt in her entire life. Watching her and Alana's daughters get along as best friends in the joys of youth and childlike wonder was just... there were no words. Her heart felt light as a feather and she felt like nothing could make it better. \n\n\"Morning.\" A kindly feminine voice said from behind her as she felt a pair of arms wrap around her waist and gave her a hug from behind. Okay, maybe it could get better.\n\n\"Morning.\" Rachel replied smiling even wider. She tipped her head back and leaned it on Alana's. \n\n\"I love watching our daughters get along so well.\" Her best friend said. \n\n\"Amen.\" Rachel agreed. \"The only thing that would make this better is...\" Her voice trailed off as she saw a large gray shape crest the treetops nearby. \n\n\"...is if our husband was home.\" Alana gave her a gentle squeeze. \n\n\"Yeah.\" Rachel said contentedly as Ethan made a slow circle and then landed not far from the girls.\n\n\"Daddy!\" They shouted in unison and ran towards him, all thought of the butterfly forgotten as it flew away. They ran up to him and he picked them both up and spun them around, kissing them both. \n\n\"And how are my partners in crime?\" He asked jovially. \n\n\"We found a butterfly!\" The chocolate-haired girl exclaimed. ",
        "\"And Sissy caught it!\" Rachel's own daughter added. \n\nThe girls wiggled in his arms and he set them down. They announced they were going to find another butterfly to show him before running off towards the woods. Rachel couldn't help but smile as she walked to up to Ethan and laid her head down his shoulder. \n\n\"Good morning beautiful.\" He said, kissing the top of her head. Something about the way he said it was absolutely sincere. She knew in her bones, could feel in her heart, that he truly thought she was beautiful. \n\nShe looked up into his draconic face and smiled back with a wink as she gave her usual response. \"Good morning ugly.\" \n\nHe snort-laughed as always, rested his hand on her very pregnant stomach, and then grinned lopsidedly at her. \"If I'm so ugly, then why did you enjoy making this little one so much?\" \n\nShe sighed and leaned into him, falling into his arms. He held her for a few moments. \n\n\"You okay?\" He asked.\n\n\"I am now.\" She said contentedly. \n\n\"Hey, don't hog him all to yourself.\" Alana said good-naturedly from behind her. The brunette wrapped her arms around them both, so Rachel was sandwiched in between them. She then leaned up and Ethan kissed her right in front of the redhead. \n\n\"My turn.\" Rachel said, and then turned it into a three-way kiss. \n\n\"I never get tired of that.\" He said when their kiss broke, then he looked around. \"Where's everyone else?\" \n\n\"Beth and Taloni insisted on taking your other wives shopping, and they brought all the kids except the two who just ran to play in the forest.\" Rachel replied. \n\n\"I think what the sexy redhead is trying to say is that our girls are off playing and you know how they are when they go exploring. They probably won't bother us for at least an hour... sir.\" \n\nEthan gave a mock sigh with a mischievous grin. \"Oh dang, I just can't think of anything to do with the free time.\" \n\n\"Nor I... my lord.\" Rachel grinned suggestively.\n\nShe was feeling as happy as she ever had in her entire life. She just felt better when her husband was around. Knowing that the two girls would be occupied for quite some time and that they knew better than to open a closed bedroom door, she tugged her husband and best friend towards the bedroom.\n\n* * *\n\nRachel gradually became aware that she was waking up from a dream, and internally groaned. It had been such a pleasant dream. Her marriage to Ethan, her daughter, her obviously close friendship with Alana and seeing their daughters play together made it easily the best dream she'd ever had.\n\nShe just barely had time to register how wonderful it was before she wonder what the other option was. She found herself wondering what her life might be like if she didn't marry him as she slipped back off to sleep. \n\n* * *\n\nRachel walked up the long spiral staircase for the millionth time. It was exhausting and she made a mental note to invent something to make these long staircases easier to go up. Not only was it exhausting, the drab grey tones everywhere grated on the nerves. \n\n\"Good morning Arch mage.\" Her secretary said when she passed through the ornate door at the top. Despite the gold, it seemed drab and colorless too. She barely even noticed the exquisite trappings of the room. She had felt so honored when she'd been given this office so long ago. Now...\n\n\"Morning Cassandra.\" The redhead replied as she walked to the window. \n\nShe looked out over the sprawling metropolis of Arcanum and sighed. It had gotten so big, especially in the last two decades. She brushed her hair out of her eyes, noting a few more grey strands than the last time she'd payed attention. It seemed the grey finally outnumbered the red, and she didn't have the emotional energy to magically dye it anymore. \n\n\"What's on the docket for this morning?\" She asked absentmindedly. \n\n\"The king sent another letter, with a larger gift.\" Cassandra replied. \"He promised it would only take a few days.\" \n\n\"I just don't feel like it; tell him no.\" Rachel sighed. \"What else?\" \n\n\"The mage's guild is requesting you resume your position as chairman. Again.\" Cassandra held up a letter that was incredibly ornate and even shimmered slightly. \n\n\"They enchanted the paper; cute.\" She rolled her eyes and almost smiled, but just didn't have it in her. \n\n\"Shall I tell them again that you respectfully decline?\" Cassandra asked. \n\n\"Or even not respectfully.\" She sighed. \"I don't care.\"\n\n\"Yes ma'am. Also, Lady Ejder sent a message.\" \n\nRachel perked up. \"Oh?\" \n\n\"Yes ma'am. She's coming to town in two weeks with a few of her grandchildren and wondered if-\" \n\n\"Clear my schedule for the entire time that she's here.\" Rachel said, feeling a true smile creep onto her face for the first time in... in... Huh, she couldn't remember. \n\nHad it been that long? \n\n\"But Arch mage, you have a dinner with the emperor scheduled.\" Cassandra said. \n\nFrom her tone, Rachel could tell that the young woman expected this to change her mind. \n\nIt didn't. \n\n\"Cassandra, how old are you?\" Rachel asked. \n\n\"Twenty three Arch mage.\" She replied proudly. \n\n\"And what do you want to do with your life?\" \n\nCassandra blushed slightly. \n\n\"No need to be embarrassed; tell me.\" \n\n\"I um...\" Cassandra looked down for a moment and then back at her. \"I want to be you Arch Mage. Well, not you, but like you.\" \n\nRachel laughed. \n\nNot a cheery laugh, but one that was resigned and devoid of mirth. \"You don't want to be me Cassie, or at least you wouldn't if you were.\" \n\n\"Begging your pardon Arch Mage, but you've achieved everything I want to achieve.\" \n\n\"You handle my schedule, you know how many Lords and kings I meet with and how many great men I entertain. Now answer me this, for whom do I clear my schedule.\" \n\n\"Only Lord Ejder or his wives.\" Cassie replied. \n\n\"Do you know why?\" \n\n\"They are legendary!\" She exclaimed. \"They were the ones who...\" She trailed off. \"That's not it, is it?\" \n\n\"Their achievements mean nothing to me; but their friendship...\" Rachel shook her head. \"Do you have friends Cassie?\" \n\n\"Some Arch Mage.\" \n\nRachel shook her head. \"No, I mean good friends. Friends with whom you can truly share your soul. Or better yet, someone who might become your husband.\" \n\n\"No Arch Mage, I always figured there would be time for that later.\" \n\n\"Later.\" Rachel tried to smile, but failed. \"Later is a dangerous word because it often turns into 'never'. I wanted to get married, to have children, but I always said I'd do it 'later'. Now...\" \n\n\"But with everything you've done-\" Cassie started to say. \n\n\"I still sleep alone.\" Rachel said quietly. \n\n\"But surely with who you are, there are many men who pursue you.\" Cassie pointed out. \n\n\"At one time, yes.\" She said, running her hands through her greying hair. \"But none who I wanted to catch me.\"\n\n\"There must've been one.\" \n\n\"There was one, but...\" She trailed off, thinking about what she could've had. \n\n\"Was it Lord Ejder?\" Cassandra asked tentatively. \n\n\"Is it that obvious?\" \n\n\"You light up whenever he comes into town.\"\n\nRachel nodded. \"I never met a man who was his equal.\" \n\n\"Is he as good as the stories say?\" \n\n\"Better.\" \n\n* * *\n\nRachel wasn't sure if she had just woken up or if she was still dreaming. She was definitely laying in her hammock on the Argo, but she still wasn't sure she was awake. She sat up and looked around. \n\nIt looked the same as ever. \n\nAs usual, she had the room to herself. She wasn't sure when Anthiel slept, but it was rarely when she herself was sleeping. Rachel had lain her clothes in the hammock that Alana had occupied before she had gotten married. They used to talk into the night before she had married Ethan and she missed that. The room was dim, but she could tell it was still light outside, perhaps noon or early afternoon. \n\nOddly, she felt like she was being watched, but not in a creepy way. \n\n\"Hello Rachel.\" A musical voice said from behind her. \n\nShe turned to see a woman clad entirely in robes of purest white. Her clothes and skin seemed to shine like the sun, but with the warmth of a flickering candle. She looked to be about Rachel's age, but that simply wasn't possible. She had the beautiful face of a young woman untouched by age, but the eyes and presence of someone ancient and full of wisdom. \n\nHer heart-shaped face was the picture of perfect femininity and was beautifully framed by her long hair that was probably blond, but that might've just been the light. She had a soft smile on her face that instantly made Rachel feel very comfortable and safe. \n\n\"Gabriella?\" Rachel asked. \n\nThe luminous woman nodded. \n\nShe cocked her head to one side. \"The angel?\" \n\nThe other woman ignored her question. \"You must make a choice Rachel. My Lord wanted you to make an informed choice, but you must make one.\"\n\n\"About?\"\n\nGabriella raised her eyebrow. \n\n\"The dreams.\" The redhead nodded as comprehension dawned on her. \"Is that what will happen?\" \n\n\"Not specifically.\" The luminous woman replied. \"While the specifics aren't necessarily accurate, the generalities are. The dreams didn't tell you exactly what would happen; they told you what your life would be like depending on the choice you make.\" \n\n\"What if I don't make one?\" \n\n\"Sometimes, not making a choice is making a choice.\" Gabriella said kindly. \n\nRachel bit her lip. \n\nShe knew what the woman meant. If she didn't make an actual choice - if she didn't choose Ethan - the second dream was far more likely. She wanted to become an Arch Mage, and that's where she was headed without a good reason not to.\n\nThe second dream had been so cold and impersonal though. She knew - she wasn't sure how, but she knew - that she'd achieved everything a wizard could possibly want. She had reached the pinnacle of what was possible with magic and was revered throughout the land. \n\nAnd yet...\n\nThe sheer amount of joy and happiness she felt when being woken up by her own daughter, and watching her play with Alana's daughter, and then kissing and being held by Ethan... \n\nShe sighed.\n\nThen frowned. \n\n\"I don't know if I can choose.\" She finally said. \n\n\"Why not?\" Gabriella asked. \"Which do you really want?\" \n\nRachel's mind instantly went to the little redheaded girl, waking up next to Alana, and walking around with the stomach of a pregnant woman. She had loved all of it. She had loved seeing Ethan flying home, she had loved hugging and kissing him, and she...\n\n\"I called him 'my lord', didn't I?\" She said frowning. \n\n\"You did.\" \n\n\"I don't want a lord.\" Rachel declared firmly. \n\nThe angel raised her eyebrow. \n\n\"You know what I mean. I'm fine with Illuminar of course because He's God, but I don't want a human 'lord'. I want to be in control of my own life.\" \n\n\"Then, do you choose the second dream?\" Gabriella asked. It was an honest question, not pushing or hinting; merely asking. \n\n\"Why can't I have both? Why can't I be my own lord and still marry him?\" \n\n\"You are a brilliant woman Rachel; one of the smartest of your age in fact. I'm sure you can tell me.\" \n\nIt didn't take long for the reason to become obvious to the redhead. \"Because sometimes, Ethan and his wives won't agree on what needs to happen; on what needs to be done. If everyone was their own lord and no one had the final say, chaos would ensue.\" She cocked her head to one side. \"Or perhaps nothing would get done.\" \n\nGabriella spread her hands palms up as if to say: \"You have your answer.\" \n\n\"But why? Couples make it work, why not a polygynous marriage with multiple wives?\" \n\nGabriella looked at her, apparently waiting for her to answer her own question. \n\nFinally Rachel sighed. \"That wouldn't really work, would it?\" \n\n\"What would happen if an army had two generals and they had to agree on every course of action in a war before a move was made?\" \n\n\"It would be a nightmare.\" Rachel conceded. \"And that's just with two. If you had four wives plus a husband...\" \n\nGabriella nodded. \n\n\"I hate that.\" Rachel slumped back into her hammock, though she still wasn't entirely sure she was awake. The whole conversation seemed surreal. Plus she had opened up instantly to this woman who she barely knew; that wasn't like her.\n\nNot at all. \n\nThe sad thing was that she trusted Ethan. If she was going to let anyone lead her somewhere - if she was ever going to follow someone - it would be him. She highly doubted that she would ever meet his equal. \n\n\"You won't.\" Gabriella said, seemingly answering her thoughts. \n\nRachel remembered the second dream and how she'd said that she hadn't. She shook her head, which was the problem: her head. Her head and her heart seemed to be locked in a furious battle for her future. She had never let her heart win out over her head before. But now... now she almost wanted to. \n\n\"Do I have to decide now?\" She asked. \n\nGabriella shook her head. \"My Lord understands your struggle, and there is yet time. But when you see your father and black wings on the same day, know the time to choose is at hand.\"\n\nRachel sat bolt upright. \"My father? I don't want to see him.\" She hissed. Her hand subconsciously went to the black mark on her finger where the will-breaker ring had been. \n\n\"I will visit you once more before then.\" Gabriella said kindly. \"Think on it and remember: sometimes not making a choice is making a choice.\" \n\n* * *\n\nEthan could feel the waking world returning and tried to keep his head in dreamland, but it didn't work. He was laying on his back lamenting the return to consciousness when he felt a familiar sensation. \n\nSomething warm and wet was touching his...\n\nHe opened his eyes and looked down. Beth and Taloni were at the foot of the bed wearing identical happy-but-embarrassed smiles. He could see them over Alana's mischievous expression as she gently flicked his cock with her tongue. \n\n\"That didn't take long.\" Beth said with an amused expression, though her face was slightly pink. \n\n\"Good morning-\" Taloni glanced out the enormous glass-blocked window that covered the rear of the captain's cabin. It was clearly past noon \"-err, good afternoon master.\" \n\n*Good afternoon... sir.* Alana thought to him as she put her tongue to better use. \n\nHe winked at them as he almost growled in pleasure. \"Good afternoon ladies, come here often?\" \n\nThey all looked at him confused. \n\n\"It's from... never mind; it's an Earth thing.\" He said, after which Alana shrugged then went back to gently kissing and flicking his cock with her tongue. \n\n\"Ah, that feels amazing.\" He said leaning back and enjoying his first wife's loving care. \n\n\"Would you like some help?\" He heard Taloni say after a few moments. \n\n\"Help with what?\" He asked, then realized moments later that she hadn't been talking to him when he felt a second tongue on his cock. \n\nHe looked down to see that Alana and Taloni were rather nervously and in close proximity both gently kissing and licking his cock. Behind them, Beth looked transfixed and was subconsciously licking her lips. \n\n\"May I please help too Dominus?\" The blonde asked. \n\n\"Absolutely.\" He grinned ear-to-ear, which actually wasn't that hard for a dragon. \n\nMoments later, he was treated to possibly the most arousing, sensual, and loving sight he'd ever seen in his entire life. All three of his wives were gently kissing, licking, and suckling on various part of his cock. \n\nThey weren't attacking it furiously to merely get him off, nor doing it out of obligation. No, they truly wanted to be right where they were, doing exactly what they were doing... for him. \n\nThey all glanced at him as one, and telepathically said all at once:\n\n\"I love you sir.\"\n\n\"I love you Dominus.\"\n\n\"I love you master.\" \n\nHe smiled. \"I love you too; all of you.\" \n\nHis wives all sighed as they continued. Alana slid up a bit further than the others and tenderly kissed the sensitive underside where the head met the shaft. She then kissed higher and slipped her lips over his enormous head. She had to open her mouth as wide as possible to fit him, and he loved seeing her do that for him. \n\nA little lower down, Beth was gently flicking her tongue and kissing the middle of his shaft. Still lower, Taloni was taking care of the base just as tenderly as the other two, possibly more. \n\n\"This must be what heaven feels like.\" He said as he laid back and enjoyed the sensations. \n\nThen they abruptly stopped. \n\n\"Please wait one moment sir.\" Alana said. \n\nHe looked down to see the three women retreat out of earshot before Alana whispered something to his other wives. All glanced at him with mischievous looks on their faces. \n\n\"Alana?\" He raised his eyebrow. \n\n\"Please trust me sir?\" She asked seductively. \n\n\"Okay.\" He said; she'd never steered him wrong before.\n\nThe three came back to the bed and resumed their work with renewed vigor. They kept sending him flirtatious glances and he could clearly see the arousal in their eyes. \n\n\"Girls, I'm not going to last much longer if you keep-\" He started to say, then was interrupted when - as if on cue - all three of his wives started sending him warm feelings of love and affection over their bond simultaneously. Moments later, Alana sealed her lips over the head of his cock, just as he started to cum. \n\nIt was incredible. \n\nHe let out a long groan of release as the physical sensations combined with their feelings through the bond sent him right over the edge. He could feel Alana sucking gently, trying to milk his cum into her mouth. She started to shudder slightly and her thoughts became muddled as he felt her go through a mini-orgasm. \n\nWhen he was finally done, the wood elf nudged his blonde wife who took her place. Instantly, he could feel himself start to orgasm again as the ball which only released for Beth began to empty itself into the teen's waiting mouth. No sooner had she caught the first spurt, than she too began to tremble slightly. She sighed and groaned softly through her mini-climax as he spent his seed into her mouth. \n\nHis cock momentarily lost the warm sensation of feminine lips until his Fey wife took the blonde's place. \n\n*Please let me taste you master.* She said, pleading with both her eyes and tone. \n\nHe didn't even try to deny her and moments later felt her quiver in pleasure as he fulfilled her request. She was more vocal and louder than the others, and her sighs and moans filled the cabin. \n\nTaloni backed off when he was finally and fully spent, keeping her mouth closed. She slid back so the brunette, the blonde, and the honey-blonde were all in a row. They glanced sheepishly at one another, then nodded, then all faced him. As one, they all opened their mouths so he could see his cum in their mouths, then closed their mouths, visibly swallowed, then opened them again so he could see that they had in fact swallowed. \n\nHe blinked. \n\n\"Wow.\" He took a deep breath and let it out slowly. \"You ladies are amazing; come here.\" He opened his arms and they all rushed forward, nearly tackling him in a tangle of limbs. Alana ended up on his left side, Taloni his right, and Beth was draped over his chest. He hugged them all tightly. \n\nThat's when he realized; they were all fully clothed. \n\n\"Ya'll are somewhat overdressed for what we just did.\" He pointed out. \n\n\"Actually, we didn't come in here-\" Alana started to say then went bright red and stopped. \n\n\"I must be rubbing off on you.\" He replied, recognizing the accidental double entendre.\n\n\"Or in her.\" Beth said giggling, but also blushing. \n\n\"I love it when he rubs off in us.\" Taloni added blushing furiously, but looking happy anyway. \n\n\"Amen.\" Alana agreed. \"I meant that we... entered the captain's cabin to tell you about something that Anthiel saw while Kyrupto was here.\" \n\n\"Oh?\" He asked, suddenly feeling more serious.\n\n\"Yes master, and please don't be mad; remember she saved my life.\" His Fey wife added. ",
        "\"Saved your...\" He put two and two together. \"Kendra.\" \n\nAlana nodded. \"According to Anthiel, she snuck onto the Argo and probably saw the whole thing, or at least the end of it.\" \n\n\"She didn't attack though.\" He frowned. \"Right after Kyrupto left would've been a perfect opportunity because we were all beat and she had the element of surprise. She could've... Hmm...\" \n\n\"And that means she's still tailing us, doesn't it?\" Taloni asked, sounding rather happier at the thought than he himself was. \n\n\"Probably, but why?\" Beth mused. \n\n\"That's one of two things we need to take care of.\" Ethan said. \n\n\"What the other?\" His ever-curious second wife asked.\n\n\"Me enchanting myself.\" He said. \"I've put it off for far too long and I'm so far behind. I'd start now, but I'm low on mana from the fight and want to get Rachel's input first.\" \n\nTaloni seemed to have a one-track mind as she spoke with a note of hope in her voice. \"So, Kendra is still following us?\"\n\n\"Apparently, and I think it's time we found out why.\" \n\n\"Oh?\" Alana said looking alarmed. \n\n\"Yup. She's a wildcard that-\" He stopped at their confusion at the word 'wildcard'. \"Sorry, she's a... an unknown element that could really mess things up. I think we need to find out what she's after and what she really wants.\" \n\nNow Beth looked alarmed too. \"You don't mean...?\" \n\n\"I do mean.\" He said. \"If she's following us, then we have an idea where she is. I can't just let a threat like that sit there without investigating.\" \n\nAlana and Beth looked almost scared while Taloni looked mildly happy. \n\nHe took a deep breath. \"I think it's time we had a talk with Kendra.\" \n\nTO BE CONTINUED...\n\n***Hi all, I had intended to get an editor for this chapter but life blew up this last month. On that note, there's a good chance I won't be able to publish a chapter next month. I'll try, but don't make any promises. A situation arose in my personal life that's taking a lot of my time and emotional energy. I'll post an update on my profile page when I know for sure either way.***\n\nSTORY TAGS: dragon, magic, medieval, elf, teen, romance, virgin, harem, cuckquean"
    ],
    "authorname": "Antiproton",
    "tags": [
        "magic",
        "medieval",
        "elf",
        "teen",
        "romance",
        "virgin",
        "harem",
        "cuckquean"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/a-dragons-tale-ch-22"
}