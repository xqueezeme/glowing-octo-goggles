{
    "title": "A Very Wonderful Christmas Pt. 02",
    "pages": [
        "This is the second part of a story I submitted for the Christmas contest several years ago. I wrote the first part for fun. I promised a follow-up, it only took me four years! You will need to read the first part before you read this one. It is titled, \"A very wonderful Christmas -- A homecoming.\" You can find it by clicking my name above. Thanks for all the positive response when I submitted the first part. I hope you enjoy the ending as well.\n\n*****\n\nJessi gets a lot of surprises\n\nAfter we finished breakfast Sunday morning, the three us squeezed into the shower and took our time having a little fun. Jessi and Marie wanted to tease me by playing with my cock at the same time. After that, the three of us were lying on the bed naked.\n\n\"Jessi, you're not having any regrets are you?\" Marie asked.\n\n\"No, I'm not. I don't know if I want to share Tom with some other women, but I want to share him with you, sis.\"\n\n\"Thank you, sis. Are you okay with what happened between us?\" Marie asked.\n\n\"Sis, I am fine with everything. I had a wonderful time last night. I had a great time making love to you. It felt so comfortable and natural.\"\n\n\"It did, didn't it.\"\n\n\"Yes, it did. I hope you don't have any regrets,\" Jessi said to her sister.\n\n\"Absolutely none.\"\n\nMarie was lying next to Jessi. For the next hour, the three of us rubbed and explored each other's body. Jessi and her sister started laughing as they touched each other. Then the two of them decided they wanted to share my cock. Marie moved to my other side, and she and Jessi moved down and began kissing and licking my cock.\n\n\"You like this, honey?\" Jessi asked.\n\n\"Of course I do.\"\n\nI watched the two of them lick up and down my cock for a while. Jessi started sucking one of my balls into her mouth. As she did, Marie slid her mouth over my cock. Jessi was gentle with me as Marie sped up until she was working my cock in and out of her mouth hard. I watched and soon the two of them were swapping up. This went on for about 30 minutes until Marie kept going until I filled her mouth full of cum. She slid her mouth off the end of my cock and looked over at her sister. I watched as the two of them kissed, and Marie shared my cum with my wife.\n\n\"Emmmm, that was fun,\" Marie said.\n\n\"I never thought I would be licking my husband's cum out of my sister's mouth,\" Jessi said with a big smile.\n\nWe all lay on the bed for the morning talking. About noon, we got up and slipped on some clothes so we could go out and eat lunch. We got into a restaurant about 1:00 along with the after church crowd. We were sitting at a table in the middle of the restaurant eating, and I kept noticing a young couple looking over at us. About halfway through lunch, they got up to leave and walked by the table. They stopped.\n\n\"I don't mean to interrupt your lunch, but are you the couple on Victoria's Secret's website?\" A nice looking young lady asked.\n\n\"Yes, we are,\" Jessi said.\n\n\"Are you two really married? I thought you were one of their models?\"\n\n\"I'm not a model and this my husband. This is my sister, she is the photographer.\"\n\n\"Oh, wow! That is so cool! You two are hot! The pictures looked so great! You have an awesome body! I told you that was her!\" She said turning to her male friend. \"You really work in a bank in town?\"\n\n\"Yes, I do.\"\n\n\"That is so cool! Can I have your autograph, please?\"\n\n\"I don't have anything to sign,\" Jessi said laughing.\n\nThe young girl opened her purse and pulled out a Victoria's Secret catalog. She handed it to Jessi, and she signed it.\n\n\"Thank you.\"\n\nThe young girl grabbed her friend's arm, and they left.\n\n\"I don't believe that!\" Jessi said.\n\n\"Now you are famous,\" Marie told her.\n\n\"I hope more people don't recognize me. I don't want to be too famous.\"\n\nWe finished lunch and left.\n\n\"I hope no one at the bank saw the photos,\" Jessi said as we headed back.\n\n\"I don't think they would care,\" Marie replied.\n\n\"I don't know,\" Jessi replied. \"They are a big national bank.\"\n\nWhen we got home, Jessi saw the light on the answering machine blinking. She walked over and pushed the button.\n\n\"Jessi! This is Cindy from the bank. Is that you on the Victoria's Secret website?! I told my husband it was you. He doesn't believe me. Call me!\"\n\n\"Great,\" Jessi mumbled.\n\nBy 4:00, we were all in bed again having sex. Marie was sitting on top of me riding my cock while her sister watched. Marie was slowly fucking me as she smiled at me while she wiggled her hips.\n\n\"Emmmmm, this is perfect,\" Marie moaned as she swiveled her hips.\n\n\"He does fit nicely inside of me,\" Jessi said.\n\n\"Me too, sis.\"\n\nMarie rode my cock for a long time until the two of us came together. Then she laid down on top of me and kissed me for a few minutes.\n\n\"Jessi, is this okay?\" Marie asked as she looked over at her sister.\n\n\"Of course it is.\"\n\nMarie kissed me some more before she rolled off of me. She lay back and relaxed. Jessi got off the bed and walked to the end then crawled up between her sister's legs. She lifted Marie's legs and got between them and placed her mouth over her sister's pussy.\n\n\"Emmmmmmm,\" came from Marie as she closed her eyes.\n\nI lay there and watched my wife eat her sister for a long time. Marie finally came in a huge screaming orgasm as she thrust her hips up. Jessi crawled up her sister's body and kissed her tenderly for a while.\n\n\"Jessi, this is best Christmas present I have ever gotten,\" Marie told her.\n\n\"Me too.\"\n\nA few minutes later, Marie had Jessi sitting on her mouth as she slowly worked on her pussy. I eased out of bed, and went down to Marie's room and got her camera. I walked back to the bedroom and took a few pictures before Jessi noticed.\n\n\"Tom! You are not taking pictures!\" Jessi yelled.\n\nI set the camera on the dresser, and went back to the bed and sat and watched the two of them. Jessi eventually had a huge gushing orgasm. She moved off of her sister's head and collapsed onto the bed.\n\n\"Too bad you have to go back to work tomorrow,\" Marie said.\n\n\"I hope I still have a job.\"\n\n\"You will,\" I told my wife.\n\nAfter a few minutes, we all got up, and went and got some wine. We were sitting on the sofa in the den when the phone rang. I got up and picked it up.\n\n\"Hello?\"\n\n\"Hi, Jim...yes, she is here,\" I said.\n\nI took the phone to Jessi.\n\n\"It's Jim.\"\n\n\"Oh, shit.\"\n\nJessi took the phone from me.\n\n\"Merry Christmas, Jim!\" She said.\n\nJessi listened for a minute.\n\n\"Yes, that is Tom and me.\"\n\n\"Thank you.\"\n\nJessi listened another minute.\n\n\"I don't know. My sister took the pictures. I will have to ask her...\"\n\n\"Jim, I don't know about that...I did it for my sister, she works for them. I don't know if I want that much publicity...not since last night, why? Really?\"\n\nJessi looked up at us surprised. She put her hand over the phone.\n\n\"Go get the computer,\" she said.\n\nI went and got the computer and came back. Jessi was still talking to Jim.\n\n\"Jim, I will have to talk it over with Tom. We can talk about it tomorrow, okay?\"\n\nJessi listened some more.\n\n\"Okay, we can talk tomorrow. Bye, Jim.\" Jessi hung the phone up.\n\n\"Pull up the website!\" Jessi exclaimed.\n\nI turned the computer on and pulled up the website. The first page had the picture of Jessi looking over her shoulder in the red thong. There was a big headline.\n\n\"Who is the mystery lady?\" It read.\n\nDown at the bottom of the page, they had added a place for people to comment. There were thousands of comments wanting to know who Jessi was. There were many other pictures of women posing in lingerie that apparently had been sent to them at Christmas.\n\n\"Oh, my god!\" Marie said looking over my shoulder.\n\nWe read many of the comments. Most wanted to know who was the new Victoria's Secret model. There were replies from the company explaining that Jessi's pictures were sent in anonymously.\n\n\"Shit! They are playing this for all they can!\" Marie yelled and laughed.\n\n\"Marie, they know who I am,\" Jessi said.\n\n\"I know. But, they are having such a response to the pictures of you that they are taking advantage of it!\"\n\n\"I don't believe this. Jim called because he saw all of it. I told him I hadn't seen the website since last night.\"\n\n\"What did he say?\" I asked.\n\n\"He wants to call the TV station and tell them who I am and that I work at the bank!\"\n\n\"He wants to cash in too!\" Marie said and laughed.\n\n\"He said he is going to call corporate in the morning and ask if it is okay if the TV station comes to the bank to interview me.\"\n\nMarie started laughing harder.\n\n\"It's not funny!\" Jessi exclaimed.\n\n\"Bob must be going crazy!\" Marie said. \"I better call him and find out what is going on.\"\n\nMarie went and got her phone and came back talking to someone.\n\n\"...I will have to ask her,\" Marie said.\n\n\"What?\" Jessi asked.\n\n\"They are going to post a $100,000 reward for anyone that can identify you!\"\n\n\"What! They know who I am!\"\n\n\"Yes, but they are getting a shit load of publicity. Bob said people have been in the stores today buying your outfits and asking who you are.\"\n\n\"Oh, my, god!\"\n\n\"What?\" Marie said into the phone. \"Her boss has already called wanting to have the TV station come to the bank and interview her...I don't know...I will ask.\"\n\n\"Bob wants to call your boss and talk to him,\" Marie said.\n\n\"Jeez!\"\n\n\"You are going to what!!?\" Marie yelled into the phone. \"If you are going to use her pictures for that you are going to have to pay her more...You think so!\"\n\n\"What?\" Jessi asked. Marie held her hand up for Jessi to wait.\n\n\"Bob, she has a full-time job, I don't think she can do that. I know you want to get as much mileage out of it as you can...\"\n\nMarie listened for a few minutes.\n\n\"Well, you will have to wait and see if that happens first. Someone in this town will as soon as you put it up. You are kidding!! Tonight!! \"\n\nMarie listened some more.\n\n\"I will see what I can do, Bob.\" Marie hung up.\n\n\"What!!?\" Jessi screamed.\n\n\"Okay. They have had thousands of post on the internet wanting to know who you are, everyone thinks you're a new Angel. They are playing it up like the pictures were just sent to them anonymously. They are going to start a national campaign to find out who you are so they can interview you.\"\n\n\"But, they know who I am?\"\n\n\"I know, but they weren't planning on this kind of reaction from the public. They want your boss to hold off on calling the TV station and identifying you. Wednesday afternoon they are going to post a $100,000 reward for anyone that can identify you. It will go up on the website, and they will have big posters of you in all of their stores first thing Wednesday morning.\"\n\n\"Oh, my, god!\" Jessi exclaimed.\n\n\"You are famous!\" I said.\n\n\"I don't want to be famous!\"\n\n\"Well, you are. However, they are going to pay you nicely for participating if you will,\" Marie said.\n\n\"What do you mean, participate?\"\n\n\"Once you are identified, they want to have you model more of their lingerie and post a big campaign on the internet.\"\n\n\"Fuck!\"\n\n\"But, you have to agree to it first. They want a beautiful hometown girl to model their new items. I get to take all the pictures,\" Marie said.\n\n\"Marie! What have you gotten me into!\"\n\nMarie laughed.\n\n\"I can't help it if I have a hot sister!\"\n\n\"What will they do when everyone I know turns me in Wednesday?\"\n\n\"The first person gets the money, but they are going to delay announcing it for as long as they can,\" Marie said.\n\n\"Jeez.\"\n\n\"One more thing, sis. If they get a lot of publicity from this, they want you to do a photo session as soon as possible.\"\n\n\"I have to work!\"\n\n\"I told Bob, that. That is why he wants to talk to your boss.\"\n\n\"I guess I could take a few days off.\"\n\n\"Well...\" Marie said.\n\n\"What else!\"\n\n\"If this goes crazy, they want you to tour the stores for autograph sessions.\" Marie sprung on Jessi.\n\n\"I can't do that!\"\n\n\"You don't know Bob,\" Marie said. \"He can be pretty persuasive.\"\n\n\"Marie!!\"\n\nI was listening to all this and laughing.\n\n\"What the fuck are you laughing about?!\" Jessi exclaimed and swatted me.\n\n\"I guess you will get your 15 minutes of fame!\" I said.\n\n\"I don't want it. I knew this would be trouble.\"\n\n\"Jessi, you have to agree to it first before they do anything,\" Marie told her.\n\n\"I'm going to get fired!\"\n\n\"Let Bob talk to your boss. I'm sure he will clear it with your corporate people before anything else. He doesn't want you getting in any trouble.\"\n\n\"I don't think the bank headquarters will want this type of publicity,\" Jessi moaned.\n\n\"Let Bob talk to them. If he can get it cleared, he will talk to you next. If it is going to be a problem for you, they will just let it go,\" Marie said.\n\n\"You promise?\"\n\n\"Yes. Bob wouldn't do anything to cause you trouble.\"\n\n\"Okay...I guess,\" Jessi said reluctantly.\n\n\"I need to call him back and give him your boss's phone number,\" Marie said.\n\nJessi gave her sister the phone number, and Marie took her phone and went to her bedroom.\n\n\"You better stop laughing,\" Jessi told me.\n\n\"I tell you all the time you are hot, and you don't believe me.\"\n\n\"What should I do?\"\n\n\"Just wait.\"\n\nJessi leaned back into the sofa exasperated. I leaned over and kissed her.\n\n\"Now the entire world knows how hot you are,\" I told her and kissed her again. \"You want some wine?\"\n\n\"A big glass, pease!\"\n\nI went to the kitchen and got Jessi a glass of wine, and took it back to her. She took it and drank a big sip.\n\n\"Honey, if you don't want to do this, don't,\" I said.\n\n\"I'm just shocked. I don't know how I can do what they are talking about and work too. I don't know why they would want me.\"\n\n\"Jessi...honey, you are the most confident woman I know, why want you believe me when I tell you that you are hot and sexy?\"\n\n\"I just...\"\n\n\"Stop doubting yourself.\"\n\n\"What do I do now?\"\n\n\"Just wait and see what they say first.\"\n\nJessi was quiet for a long time as she sipped her wine. Marie finally came back.\n\n\"Well?\" Jessi asked.\n\n\"I was on a conference call with Bob and the CEO. They like the idea of promoting a hometown girl. They would like the world to see that real women look great in their lingerie and not just the models. I told them which bank you work for and they are going to call the CEO of the bank next.\"\n\n\"Oh, shit!\"\n\n\"I don't think there will be a problem, sis. The two of them are talking about letting the bank get some publicity out of it. Bob thinks shooting some pictures of you in lingerie at the bank would be great.\"\n\n\"You will get me fired!\"\n\n\"They will clear it with the CEO first, but Jessi...they are going to pay you well for this campaign if you will do it,\" Marie told her. \"They want to promote a real woman because they catch so much shit over the models having unrealistic bodies.\"\n\n\"Now what?\" Jessi asked.\n\n\"Well, it's 5:15. We wait,\" Marie said.\n\n\"I better call Jim,\" Jessi said.\n\n\"They are taking care of that,\" Marie told her.\n\n\"Marie, what should I do?\" Jessi pleaded.\n\n\"It's up to you, but you could have some fun for a while if you want to do this.\"\n\n\"I'll have to think about it this week.\"\n\n\"You will have to think about it right now,\" Marie told her.\n\n\"What?\"\n\n\"I am guessing I will get a call within a few hours about going forward with this,\" Marie told her.\n\n\"Shit! Marie!!\"\n\n\"Jessi, they have a very short window they can take advantage of this. Bob said that once they post the reward on the internet and in the stores, anyone that thinks they know you has to go to a store and fill out a form. They want to get people in the stores. You will be identified quickly, but they will hold it back as long as they can because there will be people all over the country going into stores to put someone they think it is name down. They hope to get a few weeks out of it.\"\n\n\"But I have already been seen at the restaurant?\"\n\n\"How did you sign your name?\" Marie asked.\n\n\"I just wrote Jessi.\"\n\n\"Good.\"\n\n\"Just think, I am married to the hottest woman on the internet right now,\" I said and leaned over to Jessi. \"I told you that you would make good jerk off material for a lot of guys.\"\n\n\"Tom!\" Jessi swatted me again as I laughed.\n\n\"But, I have you all to myself,\" I told her as I started unbuttoning her top.\n\n\"You're right Tom. I'm sure there are a lot of women looking at her pictures too,\" Marie said as she sat next to Jessi.\n\nMarie helped me unbutton her top.\n\n\"You two stop.\"\n\nMarie leaned into Jessi and started kissing her. After a minute, the two of us were pulling her top off.\n\n\"Stop!\"\n\nMarie unsnapped my wife's bra and pulled it off then leaned over and sucked one of Jessi's nipples into her mouth.\n\n\"You are not helping, Marie!\" Jessi protested.\n\nMarie pulled Jessi down onto her lap and leaned over and sucked on her nipples, and played with her tits. I slid down on the sofa, and grabbed Jessi's legs and pulled them up on the sofa.\n\n\"You two...\" I heard Jessi say.\n\nI pulled Jessi's shoes off, then reached up and unsnapped her pants and pulled them open. I grabbed the top of them and started pulling them off her.\n\n\"Tom...\"\n\nI got them off, then reached up and grabbed her panties and slid them off. Marie looked up, and slid her hand down between Jessi's legs and started playing with her pussy.\n\n\"Ohhh...you two...I'm not in the mood.\"\n\n\"We will get you in the mood,\" Marie said.\n\nI took Jessi's legs and spread them apart for Marie. She slowly worked several fingers into her sister's pussy.\n\n\"Ahhhh...\"\n\nI started rubbing the insides of her thighs as Marie worked on her pussy.\n\n\"Okay, okay, okay! Wait!\" Jessi exclaimed.\n\nMarie slid her fingers out of her sister's pussy and sat up. Jessi reached up and started unbuttoning Marie's top. Marie helped her, and soon she was missing her top. She didn't have a bra on anyway. Jessi reached up and started fingering her sister's nipples. Marie leaned back over and ran her hand down to Jessi's pussy again. I watched as Jessi sucked one of her sister's nipples into her mouth. Marie soon had her fingers working in Jessi as she got her nipples sucked. Marie looked up at me and smiled. I smiled back at her and got up from the sofa and went to the bedroom. I got Jessi's new big vibrator she had been hiding and went back to the sofa.\n\n\"Oh, that looks nice,\" Marie said.\n\nJessi was still sucking on Marie's nipple. I looked, and Marie had Jessi good and wet with two of her fingers working inside of her. I spread Jessi's legs a little further apart and moved the vibrator toward her pussy. Marie used her fingers to spread Jessi's lips apart. I placed the vibrator between her pink lips and began to slowly slide it inside her.\n\n\"Ahhhhh!\"\n\nJessi had shown me how to turn it on and adjust the different vibrating patterns. I turned it on, so it was pulsating very hard and slid it all the way inside.\n\n\"Ahhhh!! Oh, fuck!!\"\n\nMarie sat up and began rubbing Jessi's nipples and twisting them. I slowly worked the pulsating vibrator in and out of my wife. She kept moaning. Marie and I worked on her for about 15 minutes before she started coming.\n\n\"Ahhhhh!! Fuck, yes!!\" Jessi screamed and humped her pussy up and down as she gushed and came hard. \"Tom! No more, please!\"\n\nI slid the vibrator out of her and turned it off.\n\n\"Oh...god.\"\n\nMarie leaned over and kissed her sister for a minute.\n\n\"You two are terrible!\" Jessi said. \"Let me up!\"\n\nJessi sat up on the sofa.\n\n\"The two of you are not helping.\"\n\n\"I thought we were,\" I said.\n\n\"Now I am just horny and confused,\" Jessi told us.\n\n\"I'm just horny,\" Marie said.\n\n\"You are?!\" Jessi said.\n\n\"Yes, I am.\"\n\nJessi grabbed Marie, and they started wrestling. After a few minutes, Jessi had Marie's legs up on the sofa and was pulling her pants off. Once she had them off, she pulled Marie's legs apart and got between them and placed her mouth over her sister's pussy as Marie laughed. I watched as the two of them settled. Jessi was up on her knees on the sofa and had her sister's legs apart. Marie was now lying back enjoying her sister's attention. I listened to Marie moan softly for a few minutes. My wife was not having any second thoughts now about pleasing her sister.",
        "\"Oh, sis...\" Marie moaned.\n\nI could hear Jessi nosily sucking on Marie's pussy. I stood up and started taking my clothes off as Marie watched. Once I was naked, I got on my knees on the sofa behind Jessi. Her pussy was still dripping, so I grabbed my hard cock and placed it against her pussy lips and started sliding inside her.\n\n\"Ohhhhhhh!\" Came from my wife.\n\n\"Sis, don't stop now!\" Marie yelled.\n\nJessi placed her mouth back over her sister's pussy. I held Jessi's hips and started slowly slipping in and out of her pussy. Soon, she was moaning, and Marie was moaning. About 15 minutes later, Marie started coming.\n\n\"Oh, god! Yes!!\" She screamed.\n\nI could hear Jessi slurping up her sister's juices.\n\n\"Ahhhhh!!\" Marie screamed.\n\nI kept working my cock in and out of Jessi. She kept her mouth over Marie's pussy as she kept moaning. A minute later Marie's cell phone rang.\n\n\"Stop a minute, Jessi!\" She cried out.\n\nMarie reached over and picked up her phone from the table.\n\n\"Hello?\"\n\n\"Hey, Bob.\"\n\nMarie was lying back with the phone up to her ear. I jammed my cock into Jessi hard.\n\n\"Oh!\"\n\n\"Back to work,\" I told her.\n\nI laughed as Jessi placed her mouth back on her sister's pussy.\n\n\"Oh!\" Came from Marie. \"Nothing...someone is eating me,\" Marie said.\n\nMarie was listening as Jessi worked on her pussy.\n\n\"None of your business...\" Marie said. \"Maybe...\"\n\nI saw Jessi slide her hand up between Marie's legs.\n\n\"Emmmmm...\" came from Marie as Jessi worked her fingers into her sister.\n\n\"When? Who did you call, Bob? Sharen!\"\n\nMarie listened some more as I sped up thrusting into Jessi. Jessi started moaning loudly.\n\n\"No...that is not me moaning...\" Marie said. \"What did they have to say? Really! I guess Sharen did talk them into it. They like the idea then? Sure, it would be cool. I don't know about that? And, they are still going to pay her? Great. How much are you going to pay her?\"\n\nMarie listened some more.\n\n\"Bob, hurry up. I'm about to come!\" Marie said.\n\nShe listened and squirmed.\n\n\"Bob...I will have to call you back!\"\n\nMarie put the phone down.\n\n\"Ahhhhh!! You little shit!!\" Marie screamed and started coming.\n\nShe humped her pussy up into Jessi's mouth over and over. I grabbed Jessi tight and started thrusting into her harder.\n\n\"Ohhhhhhh!!\" Jessi screamed.\n\nI sped up and jammed my cock into her repeatedly. My wife always felt so good when I did her from behind.\n\n\"Tom!! I'm coming!!\"\n\nJessi started jerking and gushing all over me. I shoved my cock in harder and started pumping cum into her.\n\n\"Ohhhhh...ahhhhh...yes!\"\n\nI filled Jessi full of cum. She moved forward and slid my cock out of her and lay on Marie.\n\n\"Oh, my,\" Jessi said.\n\n\"Did you like that? I always liked being fucked while I was going down on someone,\" Marie said.\n\n\"Then you are next,\" I said.\n\n\"Ohhh...that was hot,\" Jessi said.\n\n\"I need to call Bob back,\" Marie said.\n\nJessi sat up.\n\n\"What's going on?\" She asked.\n\n\"Well, your bank loves the idea of the publicity if it doesn't get too hot. We are still discussing it, but your CEO in New York said you could take a leave of absence and they will pay you.\"\n\n\"What?\"\n\n\"As long as you have some autograph sessions around the country in the banks as well as the stores.\"\n\n\"What?!\"\n\n\"They are still working on it. Let me call Bob back.\"\n\nMarie picked up her phone and called.\n\n\"Hey, Bob...yes I did. A very nice one thank you...you will have a long way to go to get me off that well eating me...soon. So what is the schedule...\"\n\nMarie listened.\n\n\"Let me ask...\" Marie told him. \"Jessi, how are you feeling about doing this?\"\n\n\"I'm still not sure.\"\n\n\"They just want to run with the posters and the reward. In a few weeks, they will release your name, and you will do some TV interviews, then start visiting stores around the country for a few months. The bank has guaranteed your job. They are going to pay you while you are doing this, plus, you will be getting paid quite well by the company.\"\n\n\"What about more photos?\"\n\n\"They will take some more photos and put them on the website and in the stores. And, they want you to be in the TV fashion show next year.\"\n\n\"What!!\"\n\n\"So, what do you think sis?\"\n\n\"Tom? What do you think?\" Jessi asked.\n\n\"That is going to be a lot of great jerk off material!\"\n\n\"Tom! Help me!\"\n\n\"I think you should do it. Ride it as long as it goes,\" I said. Jessi smiled.\n\n\"How much are they going to pay me?\" Jessi asked.\n\n\"One million through the end of next year,\" Marie said.\n\n\"What?!\"\n\n\"You will have a hectic schedule for the next three to five months, then some more appearances during the year, then the show next December.\"\n\n\"You're kidding?\"\n\n\"You want more? I can probably get it,\" Marie said.\n\n\"No...I'm not sure about traveling all over the country. Are you going to take the rest of the photos?\" Jessi asked.\n\n\"If that is what you want.\"\n\n\"Tom?\"\n\n\"Do it, honey.\"\n\nJessi smiled really big.\n\n\"I'll do it under a few conditions,\" Jessi said.\n\n\"Hang on,\" Marie said. \"Bob, I think she is going to do it. She has some conditions for you. I'll put you on the speakerphone.\"\n\nMarie turned on the speakerphone and held it.\n\n\"Bob, say hi to your new star,\" Marie said.\n\n\"Hi, Jessi,\" came from the phone.\n\n\"Hi.\"\n\n\"Jessi, you are a hit, and we want to take advantage of it. Marie has given you the details. What do you think?\"\n\n\"It sounds great. But someone in this town is going to identify me quickly.\"\n\n\"We know. Anyone that thinks they know has to go to one of the stores to fill out a form. The form will specify they only get the money if they do not identify whoever they think it is to anyone but us. The forms will be time stamped so that it will be fair. It will still leak out, but we hope we can hold off for a few weeks before we announce the winner. The contest will not be announced until noon Wednesday. That will keep people from lining up at the stores in the morning before they open.\"\n\n\"That sounds fair. How did you get my bank's headquarters to go along with this?\"\n\n\"When you offer a company like that millions of dollars in free publicity, they will go along with a lot. As part of the deal, we will release your information and who you work for. We are setting this up as a well-educated regular woman wearing our products. Is that okay with you?\"\n\n\"That sounds good. I'm just worried about people coming into the bank just to see me and disturbing things,\" Jessi said.\n\n\"It won't last long, but your bank thinks it is a great idea. It will get people into the bank just like it will get people into our stores.\"\n\n\"About that. How many stores do you want me to go to?\"\n\n\"We are going to shoot for at least one in each state unless the novelty wears off. If people are still interested, more stores. Your bank wants you to visit some of their branches also. To cut down on travel for you, we told them that you would appear in the banks before lunch in the towns we go to for the stores, then the stores after lunch until they close.\"\n\n\"That sounds pretty busy and hectic. A lot of running through airports and hotels.\"\n\n\"We have our own jet. We cover all of your expenses. For a few months work, you will be paid at least one million dollars.\"\n\n\"I have a few conditions,\" Jessi said.\n\n\"What would they be?\"\n\n\"I want my sister to be the one that takes all the photos.\"\n\n\"No problem.\"\n\n\"I also want her to travel with me for at least the beginning.\"\n\n\"She will be taking pictures while you travel, they will go on the internet. We are going to follow you each day on the website, so people will know where you will be next.\"\n\n\"I want you to pay for my husband traveling with me some too.\"\n\n\"You haven't looked at the website lately have you, Jessi?\" Bob asked.\n\n\"Not this afternoon.\"\n\n\"Women are now posting that they want to know who the hunk is in the photos. People have seen your wedding ring in the pictures and want to see your husband now.\"\n\nJessi started laughing.\n\n\"Do you want him in some of the pictures!?\" Jessi exclaimed.\n\n\"Possibly, if he will do it? We are thinking about some more at home photos.\"\n\nJessi laughed.\n\n\"One last thing,\" Jessi said. \"If I get tired or need a break, I get one.\"\n\n\"No problem. You will stay in the best hotels and have access to spas and massages and anything else you want. Jessi, your life will be on display until this dies down. Make sure you are okay with that,\" Bob told her.\n\n\"If my sister is with me and my husband sometimes, I can handle it,\" Jessi said.\n\n\"Okay. Our people are working on the contract right now. If you are going to do this, we will go ahead with all the printing and other materials. You will be off work this week, we don't want you out in public yet. Your boss knows. He said he would bring anything you need to finish up at work to you. If you need to go out in public, wear a disguise. Get a wig and some big sunglasses. Next week we will fly you to New York to start shooting some new photos. Our jet will come to get you, and we will pick you up at your house. You will be in New York for the week. Can your husband come?\"\n\n\"Yes, he is out of school.\"\n\n\"What does he do?\"\n\n\"He teaches psychology at the local university.\"\n\n\"Great! Jessi, there will be a lot of people in your town showing up at the stores to ID you. I'm guessing anyone that knows you well might show up at your house. I want you to think about something. Keeping you a secret is important to how much mileage we get out of this. If at all possible, we would like you not to answer the door if anyone comes to your house. Or, we will put you and your husband up in a penthouse at a hotel in town if that is better for you.\"\n\n\"I can lay low at the house. I do have a New Year's Eve party to go to Friday night, but it is with all the people I work with. I'm sure by then someone will have identified me.\"\n\n\"Do you have to go?\" Bob asked.\n\n\"I should. I need to meet everyone at the banks around town. I work in an office all day, I don't see many people,\" Jessi said.\n\n\"Well, if they haven't figured out who you are by then, they will. Can you do one thing for me?\"\n\n\"What?\"\n\n\"Tell your boss you won't be coming for obvious reasons. I'm sure word will get out.\"\n\n\"Especially if I tell him to make sure everyone knows I'm not coming,\" Jessi told Bob.\n\n\"We don't want press showing up at the party.\"\n\n\"It's a private party.\"\n\n\"I'll make sure of it. Make sure you sneak in, Jessi,\" Bob said.\n\n\"I will. Bob, you know my sister looks just like me. She can run interference if needed.\"\n\n\"You two do look a lot alike. Jessi, is your husband with you right now?\"\n\n\"Yes, he is.\"\n\n\"I see.\"\n\n\"It's not what you think, Bob,\" Marie said.\n\n\"I'm sure! Jessi, I will email the contract to you as soon as they get it ready in a few hours. Do you know a lawyer you can have a look over it by noon tomorrow to make sure you are comfortable with it?\"\n\n\"Just the lawyer at the bank.\"\n\n\"You and your sister look it over, she is familiar with them. If you have concerns, have someone take it to a lawyer or call me.\"\n\n\"Okay.\"\n\n\"Marie, what size is she?\" Bob asked.\n\n\"Same size I am, she just has a harder body.\"\n\n\"Good. Jessi, do you have any more questions?\" Bob asked.\n\n\"Not right now.\"\n\n\"You will think of some. Have Marie call me.\"\n\n\"Okay.\"\n\n\"Marie, I will see you in a week or so,\" Bob said.\n\n\"You hope,\" Marie said. Bob laughed.\n\n\"Jessi, you are one beautiful woman. I hope you have a good time doing this,\" Bob said.\n\n\"Me too.\"\n\nBob hung up. Marie grabbed Jessi and hugged her.\n\n\"You are going to have fun!\" Marie said.\n\n\"I need some more wine,\" Jessi said.\n\n*****\n\nBy 7:30, the three of us had plenty of wine while we talked. Jessi got up and took my hand and her sister's and pulled us and led us to the bedroom. We all got in bed and had some fantastic sex until about 9:00.\n\n\"Wow,\" Jessi said lying back in the bed. \n\n\"Yes, wow,\" Marie said. \"Jessi, thank you for letting Tom fuck me again.\"\n\n\"I guess we better find something to eat for dinner,\" I told the two of them.\n\n\"I'll check my email to see if they have sent the contract,\" Marie said.\n\nWe all got up, and Jessi went to the kitchen. Marie got up and walked down the hall to her bedroom, I followed her.\n\n\"Marie, thank you for everything.\"\n\n\"No problem. I hope my sister is having a good time.\"\n\n\"I think she is. I'm glad you two love each other so much.\"\n\n\"I'm glad she is willing to share you. Do you think she would ever share you with another woman?\" Marie asked.\n\n\"I don't know, and I really don't care. We are having a good time that is enough.\"\n\nMarie turned to me, and leaned in and kissed me.\n\n\"Thank you, Tom.\"\n\n\"For what?\"\n\n\"For taking care of my sister.\"\n\nWe left her bedroom and went to the den so she could check her email. One of them had the contract attached. I printed it out. Marie set down and read through it while I went to help Jessi cook dinner.\n\n\"Honey, are you okay with all of this?\" Jessi asked.\n\n\"I think it is great. Take advantage of it while you can.\"\n\nWe put together a quick dinner and called Marie to the table. She came with the contract and sat down.\n\n\"The contract looks pretty standard. You two need to look over it.\"\n\nWe ate a light dinner while we talked. When we were finished, it was about 10:30. We cleaned up. \n\n\"You two look over the contract in the morning. I'm going to bed, you two go to bed,\" Marie said.\n\n\"You want to sleep with us?\" Jessi asked.\n\n\"Not tonight. You two need to be alone.\"\n\nThe three of us got up and went to bed and Jessi flopped down on it.\n\n\"Honey, are you sure you are okay with me doing this? I will be wearing a lot of skimpy lingerie it sounds like.\"\n\n\"Jess, I have told you for years how hot you are, now maybe you will believe me. As a man, and your husband, I think it is great that other people want to see you in skimpy lingerie.\"\n\n\"Are you sure? I don't want you to get jealous or anything.\"\n\nI lay on the bed next to my wife.\n\n\"Honey, whenever we are out around town, I watch men look at you. I haven't gotten jealous and I won't. I just need you to know that.\"\n\n\"Do men really look at me?\"\n\n\"Yes, they do! You are hot and sexy, and plenty of men look at you. I just look back at them and smile, letting them know you are all mine.\"\n\n\"I am yours, always.\"\n\nWe got under the covers and turned off the lights.\n\n*****\n\nWhen the alarm went off at 6:00, I felt Jessi get out of bed. I opened my eyes and looked; she was headed to the bathroom. She went in as I watched.\n\n\"Are you coming!\" She yelled from the bathroom.\n\n\"Why!\"\n\n\"To shower with me. I have to go to work!\"\n\n\"Jessi, you are not going to work, remember!\"\n\nShe came back out of the bathroom and looked at me.\n\n\"Oh. Come shower with me anyway.\"\n\nI got up and went to the shower with her. After we had finished, she walked out and sat on the edge of the bed while she toweled her hair long blonde hair.\n\n\"Now what do I do for the rest of the day?\" She asked.\n\n\"Relax,\" I told her.\n\nShe kept running the towel through her hair as I slipped some underwear on.\n\n\"You think your sister is up?\" I asked.\n\n\"Doubt it. Let her sleep.\"\n\n\"I'll go put some coffee on.\"\n\nI walked down the hall toward the kitchen. I heard Marie talking to someone on her phone when I stopped at her door. I went on to the kitchen to start the coffee. On the way back, I heard the shower running in Marie's room. When I went into the bedroom, Jessi was slipping on a black thong.\n\n\"You don't have to put any clothes on,\" I told her.\n\n\"I know.\"\n\nI watched as she put on the matching bra, then some jeans and a top. She left the bedroom headed for the kitchen. I went ahead and put on some jeans and a shirt, and went to the kitchen.\n\n\"Honey, are you having second thoughts?\" I asked.\n\n\"I don't know. Tom, I worked hard to get my MBA, and I am doing well at the bank. I don't want anyone to think I got my job with my looks.\"\n\n\"Did you?\"\n\n\"No!\"\n\n\"Then why are you worried about that?\"\n\n\"Do you think people looking at any of the pictures will think I'm a cute blonde that got her job because of how she looked? I don't want anyone to think I am a bimbo.\"\n\n\"Jessi, do you think any of their models are bimbos?\"\n\n\"No. They are all very beautiful women and are very successful. Many of them endorse a lot of things.\"\n\n\"Do you think they will make you look like a bimbo?\"\n\n\"Not as long as I am taking all the pictures!\" I heard Marie say. \"Jessi, they work hard to make all the ladies look elegant. This is not Fredric's of Hollywood. Their models make a lot of money and are the top models in the world. Bob wouldn't have asked you to do this if he didn't think you had the look. Sis, with that rock hard body of yours, stop doubting yourself.\"\n\n\"Really?\"\n\n\"Yes! If I hadn't thought you had the look, I wouldn't have started all of this. Please stop doubting yourself, Jessi!\"\n\n\"Okay, if you say so.\"\n\n\"I do.\"\n\nMarie walked up behind Jessi at the stove and wrapped her arms around her.\n\n\"Sis, why haven't you ever modeled for them? Bob sounds like he wants you to,\" Jessi asked.\n\n\"I am better behind the camera.\"\n\n\"When I see Bob, I am going to tell him I want you in some of the pictures with me.\"\n\n\"He is already trying to get me to do that. I was up early talking to him and the art director on the phone. They want to do the pictures in the bank as soon as possible. They want them ready to go on the internet.\"\n\n\"Jeez.\"\n\n\"Is there any way you can get your boss to come see you at the house today?\" Marie asked.\n\n\"I'm sure he will since corporate is involved.\"\n\n\"Call him as soon as you can, I need to talk to him about the shoot. See if he can come this afternoon, or after work.\"\n\n\"Okay.\"\n\n\"Tom, can you take me someplace to rent a car this morning?\" Marie asked.\n\n\"No problem. After breakfast.\"\n\n\"I need to be able to get around without asking you to run me around. I have to go to the airport tomorrow.\"\n\n\"Why?\" Jessi said as she turned to look at her sister.\n\n\"The art director is flying in with a few people.\"\n\n\"What people?\" Jessi asked.\n\n\"Hairstylist, makeup, wardrobe, and a few others.\"\n\n\"Shit!\" Jessi said and went back to cooking.\n\n\"Why are they coming, Marie?\" I asked.\n\n\"They want to do some more pictures at the house, and I hope we can get in the bank one night soon.\"\n\n\"Kept it toned down some, I don't want her getting nervous.\"\n\n\"I'll try.\"\n\nA while later we were sitting in the kitchen eating breakfast.\n\n\"Sis, do you still work out?\" Marie asked.\n\n\"I try to work out a couple of times a week, then 3 or 4 hours on Saturday.\"\n\n\"Where at?\"\n\n\"My Dojo. Why?\"\n\n\"I want to get some pictures of you in their workout clothes. Is the Dojo nice?\"\n\n\"Sis, we can't take pictures in the Dojo.\"\n\n\"Why not?\"\n\n\"We just can't, it wouldn't be proper. You know I don't tell everyone about that.\"\n\n\"Okay, we can take some other places.\"\n\n\"I don't have any of their workout clothes,\" Jessi said.\n\n\"Don't worry about that,\" Marie told her.\n\nWe finished breakfast, and I got Marie into my truck to take her to a car rental place.\n\n\"Tom, I need you to take me to a few places before we get the car.\"\n\n\"Okay. Where do you need to go?\"\n\n\"Drive me by her Dojo, I want to talk to them.\"\n\n\"Marie, that's off limits. You know she keeps that very private.\"\n\n\"Okay.\"\n\n\"Where to?\"\n\n\"A bank, preferably not hers.\"\n\nI drove another mile and stopped at a bank.\n\n\"Be right back.\"\n\n\"Do you want me to go with you.\"\n\n\"You can't. I don't want anyone recognizing you,\" Marie said and got out.\n\nShe was gone about 20 minutes before I saw her walking back to the truck. She got in and took a zippered bank bag out from under her coat.\n\n\"Will you keep this for me. I don't want to be carrying it around the rest of the day.\"",
        "\"Sure.\"\n\n\"Do you know where this is?\" She asked handing me a piece of paper.\n\n\"Yes, it's downtown.\"\n\n\"Let's go there next.\"\n\nI drove about 30 minutes in the morning traffic until we came to a big photography store. I followed Marie in; the place was huge and looked like it had everything. Marie walked over to a guy, and they started talking. He soon went and got a pad of paper, and they talked while he wrote. Marie walked around the store pointing at things, and he would write. A little over an hour later we were back in the truck.\n\n\"What were you doing?\" I asked.\n\n\"All of my equipment is in California. I was telling him what I needed to rent. They will get it together and have it ready to deliver.\"\n\n\"Anyplace else?\"\n\n\"Let's get the car.\"\n\nI drove out toward the airport so she would have a choice of rental places. I pulled into one of the big lots.\n\n\"Stay here,\" she said.\n\nShe got out and went into the office. I picked up the bank bag and unzipped it. It was full of hundred dollar bills. I sat and waited until she came back out.\n\n\"I've got an Escalade. I need to make a stop before I get back to the house. I'll see you there.\"\n\n\"Do you know how to get back?\"\n\n\"I got a GPS. See you in a few hours.\"\n\nMarie walked off, and I headed back to the house. When I pulled into the garage, I made sure I had her money before I went inside. Jessi was on the phone when I walked into the den. I sat down while she talked. She finally hung up after a few minutes. \n\n\"Did Marie get a car?\"\n\n\"Yes, she said she had to make a few stops before she got back.\"\n\nJessi got up and sat on my lap, and wrapped an arm around my neck.\n\n\"So, honey, are you ready for your hot sexy wife to be naked all over the internet!\"\n\n\"Yes, I am!\" Jessi kissed me. \"Are you?\"\n\n\"I think I am. That was the president of the bank corporation on the phone. He called me.\"\n\n\"What did he have to say?\"\n\n\"He told me I was very pretty and he didn't have any problems with the world knowing that a well educated and successful woman that worked for their bank could also be a model too.\"\n\n\"I told you it would be okay.\"\n\n\"He also said that he expected me to come to the headquarters building and meet everyone.\"\n\n\"Play your cards right, you might get a promotion.\" Jessi frowned at me. \"What?\"\n\n\"I will earn my promotion, thank you very much!\"\n\n\"Honey, anytime you can be seen and heard by people like that, it will be good. The more people you know, the better. That is what I meant.\" I told her.\n\n\"I'm sure before the year is up, I will be old news.\"\n\n\"Until you are in their TV show before next Christmas.\"\n\n\"I won't fit in. They are all tall and sexy.\"\n\n\"Jessi! Stop it! You are 5'8\". Most of those women are around your height or a little taller.\"\n\n\"Some of them are 6 feet tall.\"\n\n\"No, they are not. They just look tall. Look them up on the internet.\"\n\n\"Jim is coming by after work. Will Marie be home?\"\n\n\"She said a few hours. I think she has to locate some equipment. Did you tell Jim about the party?\"\n\n\"Yes. He said everyone at the bank was talking about it today. I told him to tell everyone that I wouldn't be able to be there.\"\n\n\"Did you tell him about the contest? I'm sure Jim will be the first in line.\"\n\n\"No! I can't say anything about that. It should be interesting because I don't think they are going to announce the contest until the stores open or something like that, everyone will be at work.\"\n\n\"When you start signing autographs, just sign them Jessi.\"\n\n\"I am. We need to look at that contract.\"\n\nJessi got up and went and got the contract, and came back. We sat and looked it over until Marie came in wearing some big dark sunglasses.\n\n\"Did you eat lunch any place?\" Jessi asked.\n\n\"No. I had to stop and get a few things. Tom, would you help me get them out of the car?\"\n\nI got up and went outside with Marie to her SUV. She opened up the back, and there were a lot of bags from Victoria's Secret.\n\n\"Did you leave anything in the store?\" I asked.\n\n\"Just grab some bags.\"\n\nI grabbed two large handfuls, and she grabbed a bunch. We took them into the house.\n\n\"What is all of that?!\" Jessi exclaimed.\n\n\"Wardrobe.\"\n\nMarie and I went back out, and got the rest of the bags and went back into the house.\n\n\"What is this?\"\n\n\"Some outfits for you,\" Marie said. \"I walked into the store and was mobbed by people thinking I was you! It took me a while to convince them I wasn't. They still kept following me around. I couldn't pick out clothes. Since we met the lady that works there, I got a catalog and circled everything I wanted and left it with her then left the store. I had to go back later and get several of the girls there to help me carry everything out.\"\n\n\"Did you tell them you were my beautiful sister!\"\n\n\"Hell, no!\" Marie yelled.\n\n*****\n\nWe had finished eating lunch, and Jessi was trying on some outfits. About 2:30, there was a knock at the door; Jessi just had on a blue thong.\n\n\"Who is that?\" She asked.\n\n\"Grab the bags and take them to the bedroom,\" Marie said.\n\nShe and Jessi grabbed all the bags and went down the hall. I went to the door and opened it. I was Steve, our next-door neighbor. \n\n\"Hey, Steve!\"\n\n\"Hey, Tom.\"\n\n\"What's up?\"\n\n\"I wanted to ask you if that was Jessi on the internet? My wife says she saw her on the Victoria Secret's website. I looked, and it sure looks like her, Tom. And, it sure looked like you.\"\n\n\"It's her. I took some pictures of her and sent them in.\"\n\n\"Really?\"\n\n\"Yes. They were looking for pictures of ladies that got their clothes for Christmas. She looked hot, so I talked her into letting me do it.\"\n\n\"They were hot, Tom. Tell me, how did you take the picture with both of you in it?\"\n\n\"Tripod and a timer.\"\n\n\"Really? You take some pretty good pictures, Tom. Who's Escalade?\"\n\n\"Her sister flew in this morning. She rented it.\"\n\n\"I see. Tom, you have a hot wife. Tell Jessi I said she looked great.\"\n\n\"I will.\"\n\n\"You looked like a dork!\"\n\nSteve and I laughed.\n\n\"What are you two doing New Year's?\" Steve asked.\n\n\"I think she has a party at the bank.\"\n\n\"When I tell Karen that was her, she will be over when she gets home.\"\n\n\"Jessi said she would be working late because she was off for Christmas for a few days. I will have her call Karen,\" I told him.\n\n\"Is her sister here with you...alone?\"\n\n\"She just got in from the West Coast, she's taking a nap.\"\n\n\"I see. Well, I'll talk to you later.\"\n\nSteve left. I closed the door, and turned and saw Marie standing at the end of the hall.\n\n\"Who was that?\"\n\n\"Next door neighbor,\" I said. Marie looked at me.\n\n\"Was that Steve?\" Jessi said peeking around the corner.\n\n\"Yes. He said to tell you that you are hot.\" Jessi giggled.\n\n\"If that happens again, you two are going to a hotel!\" Marie said.\n\n\"Marie, let me put your rental in the garage. The neighbors will be wondering why there is a new Escalade in my drive.\"\n\nMarie gave me her keys, and I went and swapped my truck with her SUV. When I went back inside, Jessi was modeling what looked like sportswear.\n\n\"What do you think?\" Marie asked.\n\n\"They sale workout clothes?\" I asked.\n\n\"Yes. Marie wants me to wear these at a gym.\"\n\nJessi looked hot, even in workout clothes. She had on a black sports bra with a bunch of straps on her sides and on the back and a skintight pair of black yoga pants.\n\n\"You look hot even in workout clothes honey.\" She smiled at me, and walked over and hugged me and kissed me. \n\nI slid my hands down and rubbed her ass through the thin material.\n\n\"Marie, are you having any of that equipment delivered here?\" I asked.\n\n\"No, they will deliver it to the bank when we can get in. I have to go pick up the cameras and supplies tomorrow though.\"\n\n\"What about all of the people in the morning. You said they wanted to shoot some more at the house?\" I asked.\n\n\"They will go to the hotel in the morning, I have all that setup.\"\n\n\"Are they going to come to the house?\"\n\n\"I don't know. The art director said he wanted to scout out some places around town,\" Marie said.\n\nI walked to the kitchen.\n\n\"You two want some wine or a beer?\" I got wine back.\n\nI poured two glasses of wine, and grabbed a beer and took it to the den. The two of them were sitting on the sofa. I handed them their wine and sat next to Marie.\n\n\"What time is Jim coming, it's 3:30?\" I asked.\n\n\"He doesn't get out until about 5:00,\" Jessi said.\n\n\"Make sure you change before he gets here.\"\n\nWe had been sitting a few minutes when Marie's phone rang; she answered it.\n\n\"Hey, Bob.\"\n\nShe listened for a few minutes.\n\n\"Why 4:00?\"\n\nShe listened some more.\n\n\"I have everything I need. I'm talking to him tonight, maybe tomorrow night or the next night...\"\n\n\"No, you're not!! Bob, I won't be able to get anything done if you are here!!\" Marie yelled into the phone. \"Won't do you any good, I'm staying with my sister! Bob! You do not have to supervise! That is why I don't let you in my shoots!\"\n\nShe listened some more.\n\n\"No, you're not. He's fine...Bob, this is my shoot. If you come, you are sleeping by yourself at the hotel! Hell, no! You better not come then...bye Bob.\"\n\nMarie hung her phone up and threw her head back on the sofa.\n\n\"Now what?\" Jessi asked.\n\n\"He wanted to come and supervise. He just wants to come so we can have sex.\"\n\n\"Is he coming?\"\n\n\"He said no, but he will come.\"\n\n\"I don't want you staying with him at a hotel!\" Jessi said. \"We want you to stay here!\"\n\n\"Don't worry, I am staying here.\"\n\n\"How old is Bob?\" I asked.\n\n\"He is my age. Every time I am in New York, he wants me to stay at his penthouse. We go through this all the time. He showed up in Hawaii once when I was shooting for a men's magazine and stayed with me for a week.\"\n\n\"Has he got any money!\" Jessi asked.\n\n\"Oh, yes.\"\n\n\"Sis...if you are going to be moving to New York anyway...?\"\n\n\"I haven't told him that, yet.\"\n\n\"Maybe he would be a good catch!\" Jessi said.\n\n\"I don't know about that, but he is a great fuck.\"\n\nWe heard a car pull in the driveway.\n\n\"Now who?\" Jessi said.\n\nI got up and went and looked out the window.\n\n\"It's Jim,\" I said.\n\n\"Shit! I need to change!\"\n\n\"Why? He has already seen you naked...mostly naked! Let him look,\" I said.\n\n\"Tom!\"\n\n'knock...knock'\n\nI opened the door.\n\n\"Hi, Jim! Come on in.\"\n\nI opened the door, and he came in. He paused a few seconds as he looked at Jessi and Marie sitting on the sofa.\n\n\"Hey, Jim,\" Jessi said sitting up.\n\n\"I thought I would come by before it got late,\" he said.\n\n\"Have a seat, Jim,\" I told him motioning to the loveseat across from the sofa. He sat down.\n\n\"Jim, this is my sister Marie.\"\n\n\"Is she your twin sister?\"\n\n\"No. She is my older sister.\"\n\n\"Hi, Jim. I'm the one responsible for all of this,\" Marie said.\n\n\"No problem.\"\n\n\"Jim, I didn't mean to start all of this, my sister talked me into it.\"\n\n\"Jessi, don't worry about it. I didn't know about it until my wife asked me if that was you on the internet.\"\n\n\"What did Michelle think of it?\"\n\n\"She was surprised, but she said you were very pretty. I made sure everyone knows you are not coming to the party, but you still are, right?\"\n\n\"Probably. I have to wait and see what I am told I can do.\"\n\n\"What do you mean?\"\n\n\"Jim, Victoria's Secret is going to make Jessi a celebrity,\" Marie said. \"They are going to run a campaign around the country tomorrow in the stores and on the internet. They are going to have a contest to identify the mystery lady in the pictures. Because of that, she has to be careful going out in public.\"\n\n\"Really! That will be crazy. There are already a lot of people that know who she is!\"\n\n\"That's the problem. It will be announced on the internet and in the stories at the same time across the country. No one knows where she is from,\" Marie told him. \n\n\"What time will it start?\" Jim asked.\n\n\"That is top secret. And you can't tell anyone about it, and you can't enter.\"\n\n\"That should be interesting.\"\n\n\"Jim, by tomorrow night she will have been identified locally, but they are going to put off announcing who she is and the winner as long as they can. The locals may know her, or Tom, but there will be people all over the country sending pictures of their wives and girlfriends to the website. They want to catch as much publicity from all this as they can,\" Marie explained.\n\n\"How will they know who identified her first?\" He asked.\n\n\"That's another secret.\"\n\n\"Why did you need me to come by?\"\n\n\"There is a crew coming tomorrow to help with some pictures. I assume you were told we wanted to shoot in the bank?\" Marie said.\n\n\"Yes. Corporate approved it.\"\n\n\"I know. I need to know if we can do it tomorrow night or the next night. The next night would be better.\"\n\n\"Thursday would be fine. What do I need to do?\"\n\n\"I guess you will need to be there, and probably security for the bank.\"\n\n\"Why security?\" Jim asked.\n\n\"There will be about eight people in the bank helping me, and...I want to see if you will do something for me,\" Marie asked.\n\n\"What would that be?\"\n\n\"Since yours is the main office locally, I hope you have a nice big vault.\"\n\n\"We do.\"\n\n\"I want to ask you if we can take pictures of her in the vault with the money?\"\n\n\"I was told to let you do anything you wanted.\"\n\n\"Great! I want to take some pictures of her in the vault with all the money.\"\n\n\"We can do that. I will have security there.\"\n\n\"Good,\" Marie said.\n\nI was watching Jim as he kept glancing over at Jessi. Jim was about 50, but he was trying to look at her as much as he could.\n\n\"Marie, you took the pictures?\" Jim asked.\n\n\"Yes. I take a lot of fashion photographs that is what I do. I talked my sister into letting me take some of her and then asked Victoria's Secret if they would put them on the website.\"\n\n\"Were all those other women in the Christmas pictures on the site models?\"\n\n\"Yes. Those are the Angels, but I thought Jessi could hold her own with them.\"\n\n\"Oh, she did,\" Jim said.\n\n\"Jim, were you surfing the Victoria's Secret site?\" Jessi asked.\n\n\"Michelle showed me.\"\n\n\"Sure she did, Jim.\"\n\n\"Jim, I have seen Michelle, I hope you got her something from the store for Christmas,\" I said teasing him.\n\n\"I didn't, but she is taking me there tonight.\"\n\n\"Jim, you can't say anything,\" Marie reminded him.\n\n\"I won't. Jessi, I couldn't get any work done today because of everyone looking at you on the computers,\" Jim said.\n\n\"Sorry, about that, Jim.\"\n\n\"I even got a call from the architect for that hotel you approved the loan for.\"\n\n\"Oh, my god. I need some more wine,\" Jessi said.\n\nShe got up, and Marie and I watched Jim as he looked at her ass in the skintight, nearly see-through, yoga pants my wife had on as she walked to the kitchen.\n\n\"Jim, you want some wine or a beer?\" Jessi asked.\n\n\"Some wine would be nice.\"\n\nJessi walked back in a minute later with her glass and his. As she walked into the den, I could nearly see her pussy lips through the front of the thin yoga pants. Jim didn't waste any time discovering it. She stopped in front of him to hand him his wine; he was still looking before he looked up and took the wine.\n\n\"Thank you, Jessi.\" She sat next to me.\n\nWe all sat and talked for a few minutes. Jim was asking Marie about the kind of pictures she took. She was teasing him by telling him about all the nude models she had shot the week before in Brazil.\n\n\"Jim, I am going to plan on being at the bank about 8:00 Wednesday night. It will probably take about 5 or 6 hours. I hope that will not be keeping you out too late?\" Marie said.\n\n\"No, that's fine. But, why does it take so long?\"\n\n\"I have to set up all of my equipment while they do her hair and makeup. Then we will take a lot of pictures. They want them ready for when they announce who she is in a few weeks. The crew will be there about 7:00, they need to cover the windows, you may want to give the police a heads up. Tell them the bank is doing some remodeling, but nothing about the photo shoot. If you do, we will have cops everywhere, I have been there before.\"\n\n\"Can some of the folks from the bank come and watch?\"\n\n\"No! Absolutely not! You can't tell anyone about the photo shoot, Jim. That is why we are doing it late. I know you have to be there and your security people, but you can't tell anyone. Even the next day you can't, and you need to tell your security people that. Just tell your security people that you will be staying late and need them. Okay, Jim?\"\n\n\"Sure. No problem. I better get going.\"\n\nJim got up, and I led him to the door and saw him out.\n\n\"He is going to be a problem,\" Marie said.\n\n\"He's okay,\" Jessi said. \"But, I wish he wasn't going to be there.\"\n\n\"I can probably arrange that,\" Marie said. \"It may be best if he isn't.\"\n\n\"He has the combination to the vault,\" Jessi said.\n\n\"No one else?\" Marie asked.\n\n\"The assistant manager Shelia does, but she doesn't know anything about this?\"\n\n\"Would you be more comfortable with her there?\" Marie asked.\n\n\"I'm just uncomfortable with Jim being there and seeing me in the flesh.\"\n\n\"There will be other men there, Jessi?\" Marie said.\n\n\"I know, but I don't work for them.\"\n\n\"Marie, you think you can do anything? I don't want her uncomfortable,\" I said.\n\n\"I don't either. Let me make some calls.\" Marie got up and went to her bedroom.\n\n\"Come with me,\" I told Jessi.\n\nShe stood, and I took her down to our bedroom and into the bathroom with the full-length mirror. I took her by the shoulders and stood her in front of it.\n\n\"See any problem?\" I asked.\n\n\"What?\"\n\n\"Just look.\"\n\nJessi looked a minute.\n\n\"Oh, hell!! Why didn't you tell me you could see through these things!!\"\n\n\"I didn't know it until you stood up.\"\n\n\"Oh, fuck! You can see my pussy through these things!\"\n\n\"Yep!\"\n\n\"Shit! Do you think Jim noticed?\"\n\n\"Yes.\"\n\n\"Shit!\"\n\n\"I'm sure he and Michelle will not be going to the mall right away,\" I said laughing.\n\n\"Tom!!\" I kept laughing.\n\n\"Just some more jerk off material!\" I said.\n\n\"Tom! I'll kill you!!\" She turned and slapped me on the chest.\n\nI grabbed her in my arms and took her to the bed and tossed her on it. I grabbed the top of her yoga pants and started pulling them down until I jerked them off her.\n\n\"Tom!\"\n\nI straddled her hips and held her arms above her head.\n\n\"What are you doing?\"\n\n\"I'm going to fuck you!\"\n\n\"I have got to fix dinner!\"\n\n\"It will have to wait!\"\n\nI leaned forward and kissed her for a minute then sat back up.\n\n\"Don't move,\" I told her.\n\nI released her arms and unbuckled my jeans. She tried to escape. I grabbed her arms and pinned them above her head again.\n\n\"You are getting fucked whether you want to or not,\" I told her. \"Now, don't move.\"\n\nI released one arm and used my other hand to unbutton my pants and pull them open.\n\n\"Tom. I have to fix dinner!\"\n\n\"Jessi!\"\n\nI took my free hand and reached behind me and found her pussy. She was dripping wet.\n\n\"I thought so. Now, don't move.\"\n\nI let go of her arms, and she didn't move. I stood up on the bed over her and took my jeans off. My cock was standing straight up wanting to fuck my wife. I got back down, and spread her legs apart and got between them. She lifted her legs, and I lay on top of her and kissed her. I reached down and grabbed my cock, and started it into her dripping pussy.\n\n\"Why is your cock so hard?\" She asked.\n\nI moved and slowly slid it into her.\n\n\"Ahhhhh...\"\n\nI kissed her again and pushed in all the way.\n\n\"Ohhhh. That feels so good, but why now?\"\n\nI pushed myself up on my hands and started working my cock into my wife.\n\n\"Ohh...Tom.\"\n\nI worked my cock into Jessi for a while until she came the first time.\n\n\"Ohhhh!! Yes!! Ohh, god! Tom, stop a minute.\"\n\nI held my cock in my wife as I looked down at her beautiful face partially covered by her blonde hair.",
        "\"Tom, what got into you?\"\n\nI started slowly sliding my cock in and out.\n\n\"I got horny when Jim was looking at your pussy.\"\n\n\"Tom!\"\n\n\"I kind of like the idea of other men looking at you. Wanting you, but can't have you,\" I told her as I slid my cock in and out of her more.\n\n\"You are terrible!\"\n\n\"When you stood up and walked to the kitchen, we could all see your perfect ass through the yoga pants. Jim watched you walk all the way. He couldn't take his eyes off of you. When you walked back and stopped in front of him, he was looking at your sweet pussy lips. He wanted you. He wanted to rip your clothes off and place his mouth over your pussy.\"\n\nI sped up and was working my cock into her harder and faster.\n\n\"Jeez! I'll never be able to look him in the face again!\"\n\n\"Yes, you will. You will look at him and smile every time knowing what he saw. You'll know he wants to taste your pussy.\"\n\nI sped up and was now driving my cock into my wife. I had gotten horny thinking about him looking at Jessi's ass and pussy. I hadn't told Jessi, but when her pictures came up on the internet, I got very horny. Now that she was going to pose almost nude, I was very happy.\"\n\n\"Ahh...ahh...ahh...ahh...Tom!\"\n\nI didn't realize I was driving my cock into her with all I had. I looked down at her face, and she had her mouth open grunting as I drove into her. Suddenly, I was about to explode.\n\n\"Ohhhh, Jessi!!\"\n\nI kept slamming into her as I started coming hard. I was shaking as I pumped load after load of cum into my wife.\n\n\"Ahhhhhh!!\" Jessi screamed and started coming.\n\nWe both shook and came until I collapsed onto of her.\n\n\"Oh, god, Tom. That was incredible.\"\n\nWe lay there for a few minutes.\n\n\"I think I missed something,\" we heard Marie say.\n\nI rolled off of Jessi, and Marie was standing in the doorway.\n\n\"Ohhhh,\" came from Jessi.\n\n\"You don't look like you are in any shape to cook,\" Marie said. \"I'll start dinner.\" Marie turned and walked away.\n\n\"Tom...I don't know about this,\" Jessi said.\n\n\"What?\"\n\n\"You getting off on other men looking at me. I loved the fuck, but I don't know about this?\"\n\nI rolled to Jessi.\n\n\"I just think it's hot,\" I said.\n\n\"You think Jim looking at my pussy is hot?\"\n\n\"Honey, that was just a bonus. You are my beautiful sexy wife. I don't get jealous when men look at you. If I did, I wouldn't have let you send the pictures in. I hear what men say about you when we are together. I think it is great that other men want you. I like it that I know they can't have you. You so underestimate yourself. I love it that you wear sexy lingerie to work. I like to think the other men are fantasizing about you in it as they look at you dressed so businesslike. Now they can fantasize.\"\n\n\"Honey, you are crazy!\"\n\n\"I don't think so. Things in the world would be a lot better if men didn't get jealous when other men looked at their lady. I think it is a compliment to you. When I see a man stop and turn his head and look at you, I think he is paying you a compliment. Especially when I hear his lady friend when she catches him looking. He took the risk of getting caught.\"\n\nJessi rolled to me.\n\n\"Do that many men really look at me when we are out?\"\n\n\"Yes. I have told you they do.\"\n\n\"I always thought you were just teasing me. Are you sure this is going to be okay with you?\"\n\n\"I have already said yes.\"\n\n\"Are you letting me do it just because you get off on it? I wouldn't like that, Tom.\"\n\n\"I want you to do it, so you will understand you are as beautiful as any of those Angels.\"\n\n\"Oh. So you weren't fantasizing about them when they were on TV before Christmas!?\"\n\n\"Well, don't go that far.\"\n\nJessi jumped up and straddled my stomach. \n\n\"Tom!\"\n\nI grabbed her and pulled her down to me and kissed her.\n\n\"I guess I can let you fantasize about them,\" Jessi said and kissed me. \"Because you are mine.\"\n\n\"What about Marie?\"\n\n\"Hers too!\"\n\nWe kissed a few more minutes, then Jessi sat up and pulled the sports bra off. We went to the shower and rinsed all of the cum off each other, then dried off and went to help Marie.\n\n\"This may be the last peaceful evening you have for a while, sis,\" Marie said.\n\n\"As long as all of us have time to fuck,\" Jessi said. We all laughed.\n\n\"We will,\" I said.\n\n\"Do you know why he was fucking me so hard?\" She asked Marie.\n\n\"Who cares!\"\n\n\"He was getting off because of my boss looking at my ass and pussy through those thin pants!\"\n\n\"He was looking,\" Marie said.\n\n\"Why didn't you say something about them being so thin!\"\n\n\"I didn't know he was coming.\"\n\nI wrapped my arms around Marie and held her while she stirred a pot.\n\n\"Marie, make sure you take care of Jessi during all of this,\" I told her.\n\n\"I will. The next time you two are going to fuck like that, let me know. I want to take pictures.\"\n\n\"Marie!!\" Jessi yelled.\n\n\"Marie, you can do that under one condition,\" I said.\n\n\"Tom!!\"\n\n\"Jessi gets to take pictures of us fucking, so I have something to remember,\" I said.\n\n\"Tom!!\" Jessi yelled again.\n\nI kissed Marie on the cheek and went to the bedroom to put some clothes on. When I went back, they were working on dinner. I picked up the computer and pulled up the website. It was now filled with comments. I was reading through them.\n\n\"Hey, Jessi!\"\n\n\"What?\"\n\n\"There are three proposals of marriage for you on the website!\"\n\n\"Oh, my, god!\"\n\nI laughed as I kept reading. There were a lot of comments from a lot of people.\n\n\"Marie?\"\n\n\"Yes?\"\n\n\"There is a message on her that wants Jessi to contact some lady named Jeni Rose at some company called IMG in New York. Do you know who that is?\"\n\n\"Oh, fuck!\" Marie yelled and came running to the den. \"Let me see!\"\n\nMarie looked over my shoulder and read the message.\n\n\"Oh, my god! If that is legit...\" Marie said.\n\n\"Who is it?\" I asked.\n\n\"If that is Jeni Rose at IMG in New York, she is a modeling scout. IMG is one of the biggest modeling agencies in the world!\"\n\n\"Do you know this lady?\" I asked.\n\n\"Yes! Oh, my god.\"\n\n\"What now?\" Jessi asked.\n\n\"Just one of the top modeling agencies in the world wanting to talk to you,\" Marie said.\n\n\"What!\" Came from the kitchen.\n\n\"It may be just someone posting that!\" Marie said. \"I'll call her,\" she whispered.\n\n\"After you eat, you need to read some of these,\" I told Jessi.\n\nI got up and went to help Jessi as Marie headed to her bedroom.\n\n\"It looks about ready, why don't you go put some clothes on just in case anyone else drops by,\" I told her.\n\nJessi walked off while I started putting dinner on the table. By the time she came back, I had everything ready to eat.\n\n\"Where did Marie go?\"\n\n\"She took her phone to her bedroom.\"\n\n\"Let's eat,\" Jessi said.\n\nWe sat down and started, Marie came and sat down a few minutes later.\n\n\"Now what?\" Jessi asked.\n\n\"I just got off the phone. That really was the lady I know at IMG,\" Marie said.\n\n\"What does she want?\" Jessi asked.\n\n\"She wants you to meet with her when you are in New York.\"\n\n\"Who is she?\"\n\n\"One of the modeling scouts for IMG. I have done some work for them. Jessi, they are one of the top modeling agencies in New York. If she wants to see you, she is probably interested in signing you as a model.\"\n\n\"Marie...what have you gotten me into?\"\n\n\"A new career, maybe.\"\n\n\"I don't want to be a model.\"\n\n\"It pays pretty well.\"\n\n\"What did you tell her?\"\n\n\"I told her I took the pictures and I knew you and would talk to you.\"\n\n\"No more tonight. Let's eat,\" Jessi said.\n\nWe ate quietly, and after we finished, Jessi sat on the sofa and read some of the comments and laughed on and off. While Marie and I cleaned up, she was whispering to me.\n\n\"Tom, Jessi looks very young. If someone like IMG wants her, she could make a fortune for a few years.\"\n\n\"Doing what?\"\n\n\"Modeling, photo shoots, endorsements, personal appearances...\"\n\n\"You are kidding.\"\n\n\"No, I'm not.\"\n\n\"Can they use her if she is modeling for Victoria's Secret?\"\n\n\"Yes. All of the Angels do other modeling.\"\n\n\"Well, for now, let her get through the next few weeks,\" I said.\n\n\"I want her to go meet them when she goes to New York next week.\"\n\n\"If she agrees, will you go with her?\"\n\n\"Sure. I know their people.\"\n\n\"Talk to her later about it.\"\n\nWe finished in the kitchen and went to sit with Jessi. She was laughing at something.\n\n\"What's funny?\" I asked.\n\n\"Honey, there are several ladies commenting on here that they want to meet you!\"\n\n\"That's not funny!\"\n\n\"Yes, it is!\"\n\nI watched as Jessi paged through the website. I was enjoying looking at the pictures that had been sent in.\n\n\"I'm surprised someone locally hasn't put her name up,\" I said.\n\n\"Oh, I'm sure they have. I am assuming they are monitoring the post before they go up and editing and deleting many,\" Marie said.\n\nOur phone rang.\n\n\"Let me get it,\" I said.\n\n\"Hello?\"\n\n\"Tom, it's Karen. Is Jessi home?\"\n\n\"Yes.\"\n\n\"Can I talk to her?\"\n\n\"Hang on.\"\n\n\"It's Karen. Do you want to talk to her?\" I asked.\n\n\"Sure.\"\n\nI handed the phone to Jessi.\n\n\"Hi, Karen.\"\n\n\"Yes, it is me. Tom took some pictures and sent them.\"\n\n\"I know, it has gone crazy, I wish he hadn't done it. My phone has been ringing off the wall, and my boss is not happy,\" Jessi told her and winked at us.\n\n\"I know. I hope I don't get any more attention. Karen, please don't tell anyone it's me.\"\n\n\"Thank you, Steve said I looked hot.\"\n\n\"Yes, Tom bought me a lot of their things. Did Steve get you some? Then you should make him.\"\n\n\"After dinner, tomorrow night would be a good time to take him to the mall and get him to buy you some things.\"\n\n\"Okay, I will talk to you later. Bye.\"\n\n\"You're good,\" Marie said.\n\n\"I didn't want her coming over and seeing all of the clothes from the store.\"\n\nSince it was after work, the phone started ringing a bit later. I answered a few of them and they were friends of Jessi's asking about the pictures. After several, I let the phone go to the answering machine. Jessi was already screening calls on her cell phone.\n\n*****\n\nAbout 8:30, Marie's phone rang, and she picked up.\n\n\"Hi, Bob...\"\n\n\"You didn't! She won't believe that! What time? Okay.\"\n\n\"Now what?\" Jessi said.\n\n\"I wish you wouldn't. Bob, I will be busy. I will be in New York next week, Bob. Yes, you will... We will be shooting in the bank Wednesday night. Oh, that reminds me. Jessi is uncomfortable about her boss, Jim, being in the bank while she is posing in lingerie. There is an assistant manager named Shelia that she would rather have there. Can you look into it? She would appreciate it.\"\n\n\"What time in the morning? 9:00? Okay. I have six rooms at a nice hotel, is that enough? Okay. How many? I will take care of it. Okay...I wish you wouldn't, you know you are a distraction. Okay. Bye.\"\n\nMarie put her phone down.\n\n\"Now what?\" Jessi asked.\n\n\"Nothing. He was just updating me on the time they were arriving. I have to call the car rental place at the airport and get three cars.\"\n\n\"Sounds like he is coming,\" Jessi said.\n\n\"He is.\"\n\n\"Marie, it sounds like he really likes you.\"\n\n\"He does. I will probably end up marrying him,\" Marie said. I have to be at the airport at 9:00 in the morning to meet the jet. Bob wants to come and meet you as soon as he gets here.\"\n\n\"Okay.\"\n\n\"It will probably be around lunch. It takes a while to organize all of them when they come to do a shoot,\" Marie said.\n\n\"I can make lunch for us. I can't go anywhere,\" Jessi said.\n\n\"You also have a delivery coming about 10:00,\" Marie said.\n\n\"What is it?\"\n\n\"A surprise. I need to make a phone call.\"\n\nMarie sat down and called the car rental place at the airport. She reserved an Escalade and two Tahoes. \n\n\"You two, can we leave for New York about noon Sunday?\" Marie asked.\n\n\"I guess we can,\" Jessi said. \"Will we be back by Friday?\"\n\n\"Probably mid-day Friday. It will be a busy week.\"\n\n\"Will I get to meet any of the Angels?\" I asked.\n\n\"Tom!!\" I got hit. Marie was laughing.\n\n\"Probably.\"\n\nWe all had a glass of wine then Marie sat next to Jessi and took her hand.\n\n\"Jessi, thank you for everything,\" Marie said.\n\n\"Sis, everything is good. I have been wishing we hadn't waited so long,\" Jessi said.\n\nMarie leaned over and started kissing Jessi. After a few minutes, Jessi leaned over to me.\n\n\"Will you let us go to bed?\" She asked.\n\n\"Of course.\"\n\nIt was about 9:00 and Jessi got up and took her sister's hand and pulled her up. They headed down the hall.\n\n\"What about Tom?\" Marie asked.\n\n\"When we are finished.\"\n\nJessi and Marie went down to our bedroom. I was surprised when Jessi closed the door. I turned on the TV and watched until the news went off at 10:30.\n\n\"Honey?\"\n\nI looked, and Jessi was standing in the hall naked. \"Come with me, please.\"\n\nI got up, and Jessi took my hand and led me to the bedroom. Marie was lying on the bed naked.\n\n\"We are ready for bed,\" Marie said looking at me.\n\n\"It looks like it.\"\n\nJessi sat on the edge of the bed while I stood and took off all of my clothes.\n\n\"Honey, we are excited. We need your help in relaxing us so we can sleep,\" Jessi said as she pulled me onto the bed.\n\n\"I can probably help.\"\n\n\"We know you can.\"\n\nJessi made me roll to the middle of the bed. She leaned over and nursed my cock until it was nice and hard, then sat up next to me. Marie sat up and straddled my hips and grabbed my cock and worked it into her pussy and slid all the way down.\n\n\"Oh, I can relax now,\" she said.\n\nMarie reached out and rubbed my chest.\n\n\"I need you to relax me now,\" Jessi said.\n\nI watched as she straddled my head so she could watch her sister. I took my hands and pulled her pussy down to my mouth.\n\n\"That's better,\" I heard Jessi say.\n\nI held my wife's hips as I worked my tongue deep into her pussy. I was enjoying her sitting on my mouth while her sister fucked my cock. This went on for about 20 minutes before Jessi came in my mouth. When she screamed, Marie started fucking my cock very hard. When Jessi stopped coming, she started grinding her pussy into my mouth. I tongued and licked her as I felt my cock being ridden hard.\n\n\"Ahhhhhh!!\" I heard one of them scream; then I felt Marie's pussy clamp down on my cock. \"Ahhhhhh!!\"\n\nI felt Marie squirting on me as she humped my cock hard. Jessi pushed down hard and started coming again. Both of them were jerking on me as I listened to them screaming. When Jessi stopped, she slid to my chest. I knew she was hugging her sister.\n\n\"I'm not relaxed yet,\" I heard Marie say.\n\n\"Me either.\"\n\nJessi moved off me and turned and laid faced down next to me. I looked up at Marie as she sat on my cock. She smiled and moved and laid down face down on my other side.\n\n\"Honey, you know what I want,\" Jessi purred.\n\n\"Me, too,\" Marie said.\n\nI got up and laid on top Jessi and guided my cock into her slippery ass.\n\n\"Emmmm, yes,\" came from Jessi.\n\nI eased into her all the way and placed my weight on her.\n\n\"Ohhh...just right.\"\n\nI wiggled my cock in Jessi for a minute then pushed up and began sliding my cock in and out of her.\n\n\"Ohh, yes, honey...work it in my ass!\"\n\nI worked my cock into my wife's ass for a while until she started moaning.\n\n\"Ohhhhhh...more!\"\n\nI leaned down and bit Jessi on her shoulder.\n\n\"Ahhhhh!!\" She screamed and started driving her ass up into my cock. \"Harder!!\"\n\nI started driving my cock into Jessi as fast and hard as I could. She started screaming she was coming.\n\n\"Honey!! More!!\"\n\nJessi was going crazy beneath me as I thrust my cock into her ass hard.\n\n\"Tom!!\"\n\nJessi started jerking hard under me as I began pumping cum into her hot ass. \n\n\"Oh, fuck!! Yes!!\" Jessi screamed as I filled her ass full of cum.\n\n\"Ahh!!\" I screamed and jammed my cock deep into Jessi as I finished coming.\n\n\"Ohhhhhh...\" Jessi moaned. I collapsed on top of her.\n\n\"You are perfect,\" I told her.\n\n\"I love you,\" Jessi said. I kissed her on her shoulders.\n\n\"What, I don't get anything now!\" Marie said.\n\nI looked down, and Jessi turned her head to look at her sister and smiled.\n\nI eased my cock out of Jessi as Marie looked.\n\n\"Ohhh,\" came from Marie.\n\nUsually, after I had fucked Jessi in the ass, my cock stayed hard, and I would do her again. I moved over and sat on the back of Marie's legs.\n\n\"I expect the same,\" Marie said.\n\n\"Pow!\"\n\nI smacked her on the ass hard.\n\n\"Owww!!\"\n\nI leaned forward and grabbed my slippery cock and started it into Marie's ass.\n\n\"Ahhhhhh! That feels good!!\" Marie exclaimed.\n\nI slowly eased all the way in and laid on her.\n\n\"Emmmmm.\"\n\n\"Tom, Marie told me about you fucking her in the ass when you were younger,\" Jessi said.\n\n\"Oh, yes. And, she enjoyed it!\" I said.\n\nJessi started laughing. I began to work my cock in and out of Marie.\n\n\"Oh, Tom. It has been a long time,\" Marie moaned.\n\nI held myself up and slowly worked my cock in and out of Marie's ass.\n\n\"Tom, you still have the biggest cock that has been in my ass,\" Marie said. \n\n\"And you enjoy it, don't you?\"\n\n\"Emmm, yes. Fuck me, Tom.\"\n\nI kept working my cock in and out of her ass for a long time as she moaned. \n\n\"Ahhhhh...Tom, harder!\"\n\nI sped up and started thrusting my cock deep into Marie's ass.\n\n\"Yes! Harder!!\"\n\nI kept going and thrusting deep into Marie as she moaned and screamed. I looked over at Jessi, and she had rolled to her side and had her fingers in her pussy. She smiled at me.\n\n\"Harder!!\"\n\nI began to pound Marie's ass as hard and fast as I could. She kept screaming while I worked on her ass for a while.\n\n\"Tom!!\" Marie screamed and started driving her ass up hard.\n\nShe squeezed my cock so hard with her ass I had to struggle to keep jamming it into her.\n\n\"I'm coming!!\"\n\nI kept driving into Marie as she jerked and came for a minute before she collapsed on the bed. I kept driving my cock into her.\n\n\"Ah...ah...ah,\" I was gasping as I kept going for another minute.\n\n\"Ahhhhh!! Fuck!! I'm coming again!!\"\n\nMarie squeezed my cock hard again, and I started pumping cum into her tight asshole.\n\n\"Ahhhh!!\" I screamed as I jerked into her. She screamed again.\n\nWe both collapsed and lay a few minutes.\n\n\"Emmmmm!!\" We heard come from Jessi.\n\nI looked over, and she was squirting from her pussy as she worked her fingers over her clit. I started kissing Marie on the shoulders.\n\n\"Emmmm, you are the best,\" Marie said. \"Jessi, Tom is the best ass fuck I have ever had. He lasts so long.\"\n\n\"That's good to know,\" Jessi said with a big smile.\n\nI kissed Marie's neck then eased my cock out of her.\n\n\"Ohhhhh...\"\n\nCum ran out of her and down between her legs. I fell on my back between them. They both moved to me and placed their heads on my chest.\n\n\"Thank you, honey,\" Jessi said.\n\n\"Yes, thank you, honey,\" Marie added.\n\n\"Do you two need to clean up?\"\n\n\"In a few minutes,\" Jessi said.\n\nWe all lay together for a while before they got up and invited me to the shower with them.\n\n*****\n\nI woke up because someone was stroking my cock. I looked, and it was Marie. I heard Jessi in the shower.\n\n\"I have to get up soon,\" Marie said before she moved down and sucked my cock into her mouth.\n\nI lay and watched my sister-in-law suck my cock for a while until Jessi came out of the shower drying her hair. She stood and watched. Marie was going up and down on my cock hard.\n\n\"You know, I find that very arousing,\" Jessi said.\n\n\"I do too,\" I said.\n\nJessi sat on the edge of the bed and leaned over and kissed me for a minute.\n\n\"Very arousing,\" Jessi said as she smiled.\n\n\"You want to sit up here?\"\n\n\"I'm going to start breakfast.\" Jessi kissed me again then left the bedroom.\n\n\"Emmmm,\" was coming from Marie as she kept going.\n\nI lay and watched for a long time.\n\n\"Marie!\"\n\n\"Emmm!!\" Marie sped up and was sliding her mouth all the way up and down on my cock.\n\n\"Ahhhh!!\" I groaned and began pumping cum into her mouth.",
        "\"Emmm!!\" Marie kept going until she had sucked me dry. \"That's good.\"\n\nMarie looked up at me and moved and kissed me.\n\n\"I had a good time last night,\" she said.\n\n\"I did too. You forgot my cock stays hard after a nice ass fucking.\"\n\n\"Well, it was great.\"\n\n\"So were you.\" I kissed Marie again.\n\n\"I need to go shower and get ready to go to the airport.\"\n\nI watched Marie get out of the bed and looked at her naked body. She looked so much like Jessi it was weird. I got up and slipped on a robe and went to check on Jessi.\n\n\"Good morning,\" I said and kissed her on the cheek.\n\n\"Good morning, honey.\"\n\nI wrapped my arms around her, and ran my hands down to her mound and rubbed.\n\n\"Tom.\"\n\n\"I just want to touch,\" I said. \"Honey, you know all the men are going to be looking at you and thinking about your bare mound.\"\n\n\"Tom, stop.\"\n\n\"They will be thinking about getting between your legs and licking your smooth mound and pussy, honey.\"\n\n\"Tom, stop it.\"\n\nI moved my hand down and touched the top of her lips.\n\n\"You like the idea of men fantasizing about you, don't you, honey?\"\n\n\"Tom...please...stop.\"\n\n\"Wednesday night, think about all those men looking at you. They will all have hard-ons as you pose in tiny lingerie.\" I said as I rubbed the top of her pussy lips. \"When you look at them looking at you, wink at them like you want them, honey.\"\n\n\"Tooomm...\"\n\nI could feel the wetness on her pussy lips growing.\n\n\"You are getting wet,\" I said and kissed her ear.\n\n\"Tom...please...I am trying to cook...\"\n\n\"You will be cooking tomorrow night.\"\n\n\"Stop it, or I won't let you be there.\"\n\n\"Yes, you will, because you know how much I enjoy other men looking at you.\"\n\n\"Enough. I have to finish.\"\n\nI kissed Jessi on the neck and released her. I stepped back and ran my hand over her beautiful ass.\n\n\"Yes, they are going to enjoy looking at this.\"\n\n\"Tom!\"\n\nI left the kitchen and went back to my bedroom to put on some clothes. I was pulling on a shirt when Marie walked in naked.\n\n\"It is going to get busy after this morning. I have something I want you to do tonight before it gets crazy,\" Marie said.\n\n\"What would that be?\"\n\n\"I want you to take some pictures of Jessi and me together.\"\n\n\"In bed?\"\n\n\"Yes.\"\n\n\"I'll let you talk her into that.\"\n\n\"I will.\"\n\nMarie left and went to her bedroom.\n\n\"Come eat!\" I heard Jessi yell.\n\nI walked back to the kitchen and sat at the table. Jessi had everything set out. Marie came and sat down.\n\n\"I wish I got to sit with the two of you naked every morning,\" I told them.\n\n\"Sis, can the three of us stay in a suite in New York?\" Jessi asked.\n\n\"Of course.\"\n\n\"Do you think anyone will get suspicious?\"\n\n\"Just Bob.\"\n\n\"Why would he be suspicious?\" Jessi asked.\n\n\"Jessi, he knows I was having sex with one of you.\"\n\n\"Oh, god.\"\n\n\"Jessi, I have been in a threesome with Bob,\" Marie said.\n\n\"Girl?\"\n\n\"Yes. Bob would never let me be with two guys.\"\n\n\"But another guy is okay?\"\n\n\"Yes. Tom, you would be okay with another guy fucking Jessi, wouldn't you?\"\n\n\"Marie!!\"Jessi yelled.\n\nMarie laughed.\n\n\"Do you mind him fucking other women?\" Jessi asked.\n\n\"No. You don't do you, sis?\"\n\n\"Just you.\"\n\nWe finished eating, and Marie got up to get dressed.\n\n\"She is terrible,\" Jessi said.\n\n\"I don't know,\" I said as I stood and took my plate to the kitchen.\n\n\"Tom?\" I smiled as I walked.\n\nI walked back to the table.\n\n\"I'll clean up, you need to get dressed.\"\n\n\"What did you mean by, 'I don't know?' \"\n\n\"You have had a good time with another woman.\"\n\n\"She is my sister!\"\n\n\"I know.\"\n\nI picked up the leftovers and took them to the kitchen.\n\n\"Don't you get any ideas,\" Jessi said as she sat her plate down in the kitchen.\n\nI grabbed her and kissed her.\n\n\"Honey, thank you for sharing your sister.\"\n\n\"That's all, okay?\"\n\n\"Yes, honey. Go get dressed.\"\n\nI watched Jessi walk off then went back to cleaning up breakfast.\n\n*****\n\nAbout 9:00, Marie left. About 9:30, Jessi's phone rang, and she answered.\n\n\"Hey, Jim.\"\n\n\"Sure, bring all of them, and I will finish them up. Okay, come on over.\" She hung up.\n\n\"What does he want?\" I asked.\n\n\"I have some loans I need to finish.\"\n\n\"Do you think they told him you don't want him there yet?\"\n\n\"Oh, shit!\"\n\n\"This should be interesting,\" I said.\n\n\"What should I do?\"\n\n\"Oh, no. This one is all yours.\"\n\n\"Tom!\"\n\nJessi kept pestering me until about 10:15. We heard a truck pull into the driveway, then a knock. I went to the door.\n\n\"Is Jessi Willis here?\" A guy with a clipboard asked.\n\n\"Yes, she is.\"\n\n\"Well, I have a delivery for her. A large delivery,\" he said.\n\n\"Bring it in.\"\n\nI stood at the door and watched him pull a large box off the truck and bring it to the door. I opened the door, and he came in and set it down in the middle of the den.\n\n\"That is a large box,\" Jessi said.\n\n\"That is just the first one,\" the delivery guy said and went back out.\n\nWe watched for about 20 minutes as he kept bringing boxes into the house. Once he was finished, they were piled everywhere, two high.\n\n\"What is this?\" Jessi said.\n\n\"It came in air-freight this morning addressed to you,\" the guy said as he handed Jessi a clipboard for her to sign.\n\n\"Who is it from?\" She asked.\n\n\"It says The Limited, whoever that is.\"\n\nHe took his clipboard and left.\n\n\"What is all of this?!\" Jessi exclaimed.\n\n\"Open one up and see.\"\n\nI helped her open one of the big boxes.\n\n\"Oh, my god!\"\n\nThe big box was full of small boxes that appeared to say Victoria's Secret. She opened one up and pulled out some sexy looking lingerie. She looked it over.\n\n\"Uh, oh.\"\n\n\"What?\" I asked.\n\n\"It's my size.\" Jessi started pulling more boxes out of the large one. She discovered that all of the lingerie was her size. \"What has she done!!\"\n\nHer phone rang again.\n\n\"Marie! What have you done!\" She yelled into the phone.\n\n\"Oh, hi, Bob. Yes! I got the delivery. What is all of this?\"\n\n\"You are kidding! No, that's okay. Thanks! Okay, about noon.\"\n\nJessi hung up.\n\n\"What?\"\n\n\"Bob had them send one of everything they sell. They are all mine to keep.\"\n\n\"Why?\"\n\n\"He wants to see me in all of them so he can pick what he wants in the pictures,\" Jessi said. I started laughing.\n\n\"What are you laughing at!!\"\n\n\"I wouldn't have thought of it, but that is a creative way to see as much as he can!\"\n\n\"Tom!!\"\n\nThere was a knock at the door. Jessi turned and yanked it open.\n\n\"More!!\"\n\nJim was standing there.\n\n\"Sorry, Jim. Come on in,\" Jessi told him. He squeezed in around the boxes.\n\n\"What is all of this?\" Jim asked.\n\n\"One of everything Victoria's Secret sells,\" Jessi replied.\n\n\"Are you going to model all of it?\" Jim asked.\n\n\"Hell, I don't know!\"\n\n\"I brought all of your work for you,\" Jim told her.\n\n\"Okay. I will finish it all up.\"\n\n\"Jessi, you just had to ask me, and I wouldn't have been there,\" Jim said.\n\n\"I'm sorry, Jim. I didn't think about it until late. I hope corporate didn't call you.\"\n\n\"No, your sister called me.\"\n\n\"Jim, I'm still a little apprehensive about all this. It's not that I don't want you there, there will be other men there. It's just that...\"\n\n\"What is it, Jessi?\" Jim asked.\n\n\"Jim, I have worked hard for my position at the bank. If you got to watch me all night half-naked and I ever got a promotion at the bank, people would think it would be from that.\"\n\n\"Jessi, you know better than that.\"\n\n\"I do, but everyone else might think that.\"\n\n\"Jessi, you know that you will earn everything you get. Don't worry about what other people think.\"\n\n\"But, Jim, I have to. You are the President of this area. When I get promoted, I don't want anyone saying I got it because you got to see me nearly naked.\"\n\n\"That's okay, Jessi. I have already told Shelia to be there. I respect what you think and you, Jessi.\"\n\n\"Thanks, Jim.\"\n\n\"Jessi, you are a very beautiful woman, but you are also very smart. I expect you to be President of the company one day,\" Jim said and smiled.\n\n\"Thanks, Jim,\" Jessi said. \"Do you have to go right now?\"\n\n\"Not right away.\"\n\nWe all found a place to sit and Jessi told Jim about what all they wanted her to do. She told him about the headquarters in New York wanting her to come and see everyone.\n\n\"So you will be visiting the home offices in New York?\" He asked.\n\n\"Yes. Not sure when,\" Jessi said.\n\n\"Jessi, I need to tell you something, and it is just between us,\" Jim said.\n\n\"What?\"\n\n\"When you go to New York, I am sure the Vice-President of Marketing will want to meet you. His name is Brad Wilson. You need to be careful around him.\"\n\n\"Why?\"\n\n\"He is a womanizer. They have buried many sexual harassment cases against him. Don't end up anywhere with him alone.\"\n\n\"How do I avoid that?\"\n\n\"Make sure Tom is with you all the time. Brad is a womanizer and likes to put his hands where they don't belong.\"\n\n\"That would be a mistake,\" I said.\n\n\"Tom, don't get into it with him,\" Jim said.\n\n\"I wasn't, I was...never mind.\"\n\n\"He is a real piece of work but Tom you should scare the shit out of him, as big as you are.\n\n\"Me?\"\n\n\"Thanks, Jim,\" Jessi said. \"I'll keep my distance.\"\n\n\"Jessi, he has promoted a few women because of...their looks,\" Jim said.\n\n\"What part of their body was he looking at?\" Jessi asked.\n\n\"I think you understand. Just be careful, Jessi.\"\n\n\"Okay. Thank you, Jim.\"\n\n\"Jessi, the Bardston loan is in there. I need it soon.\"\n\n\"I will bring it to the bank tomorrow night,\" Jessi said.\n\n\"Give it to Shelia.\"\n\n\"I'll give it to you.\"\n\n\"I won't be there.\"\n\n\"I think since Shelia is going to be there, you can come,\" Jessi said.\n\n\"Jessi, I won't be there. Give it to Shelia.\"\n\n\"Okay. Did you take Michelle to the mall last night?\"\n\n\"Oh, yes. I got a nice show when I got home.\"\n\n\"Anything else?\"\n\n\"Oh, yes.\"\n\n\"Jim, we will see you Friday night,\" Jessi told him.\n\n\"Okay. I hope you make it.\"\n\n\"I am going to try. I want to see everyone before all the craziness starts.\"\n\n\"Jessi, take it easy. I want you back.\"\n\n\"I will be back, Jim.\"\n\nJim left the house, and we sat for a few minutes.\n\n\"Shit! What time is it?\" Jessi yelled.\n\n\"11:35.\"\n\n\"Fuck! I am supposed to be cooking lunch!\"\n\n\"I've got it,\" I heard Marie say as she came through the front door with a guy.\n\nThey were carrying pizza boxes.\n\n\"We waited until your boss left,\" Marie said. Jessi and Tom, this is Bob.\"\n\nBob was a nice looking guy about Marie's age.\n\n\"Bob, did you send all of this to me?\" Jessi asked.\n\n\"Yes, it is yours to keep.\"\n\n\"I'm not going to let you see me in all of it.\"\n\nBob laughed. \n\n\"Did your sister tell you that?\" Bob asked.\n\n\"Yes!\"\n\n\"Jessi, I just wanted you to have one of everything in every color,\" he said.\n\n\"I don't have room for all of this!\"\n\n\"It will fit your sister too.\"\n\n\"She doesn't wear underwear!\" \n\n\"I know! Jessi and Tom, I am happy to meet you both.\"\n\nI shook his hand. He took the pizzas, and we made our way to the dining room and spread everything out.\n\n\"Thanks for bringing lunch.\"\n\n\"I knew you wouldn't get anything done once they delivered everything,\" Marie said.\n\nWe all sat and ate and talked. Bob took his time explaining everything to us. He explained what all would take place in New York next week.\n\n\"Bob, there is some lady at a company called IMG that wants to meet with me next week,\" Jessi said.\n\n\"I know. I need to talk to you about that later.\"\n\n\"Sis, we are going to focus on just getting you comfortable next week in New York. I think after tomorrow night, you will get an idea of what will be expected of you.\"\n\n\"Jessi, we know you have never done anything like this before, so we will take our time. We want you to have fun and enjoy all of this,\" Bob said. \"Tom will be with you every minute.\"\n\n\"Thanks.\"\n\n\"Tom, if Jessi agrees, I have a surprise for you,\" Bob said.\n\n\"What is that?\"\n\n\"You have been a hit on the website, so we are going to have some pictures taken of you with some of the Angels.\"\n\n\"Seriously!\"\n\n\"Oh, no!\" Jessi said. Marie started laughing.\n\n\"We thought we would let you advertise our men's cologne. It is the only product for men we have anymore.\"\n\n\"I can do that.\"\n\n\"I don't know about that!\" Jessi said teasing me.\n\n\"We won't leave you out,\" Bob said.\n\n\"Jessi, we will be taking shots of you in a lot of the different outfits next week in the studios and on location,\" Marie said.\n\n\"What locations?\"\n\n\"We are still deciding,\" Bob said.\n\nHe turned around and looked at all the boxes.\n\n\"I should have thought about this first, we can't see the Christmas Tree anymore,\" he said.\n\n\"We have one more bedroom we can move it all into,\" I said.\n\n\"Marie, can you get some more shots here?\" Bob asked.\n\n\"We will have to do it Friday,\" Marie said. \"I will have to pick up some equipment.\"\n\n\"Okay. We will have them come in and decorate some more.\"\n\n\"Jessi, did you have someone look at the contract?\" Bob asked.\n\n\"Not yet.\"\n\n\"Do you have someone?\"\n\n\"The lawyer at the bank is a contract lawyer. I can see if he can look over it.\"\n\n\"Can he come here? We need to talk to him, so he doesn't say anything,\" Bob said. \"I will need him to sign a non-disclosure since you won't be paying him anything.\"\n\n\"I'll call and see if he can come by tonight,\" Jessi said.\n\n\"Good.\"\n\n\"Bob, is there anything else you need?\" Marie asked. \"If not, I will take you to the hotel.\"\n\n\"Jessi, how comfortable are you about being seen and photographed nearly naked?\" Bob asked.\n\n\"Okay, I guess.\"\n\n\"Are you sure? There will be four or five men there tomorrow, are you going to be comfortable?\"\n\n\"I guess.\"\n\n\"I don't need you guessing, Jessi. There are going to be posters of you from the shoot in all the stores. You are going to be asked to autograph prints and posters for men and women. You will be on TV and in magazines.\"\n\n\"Not in lingerie I won't!\"\n\n\"No. The only live shows will be on the TV show next Christmas. Will you be okay with millions of people watching you walk down a runway in skimpy lingerie?\"\n\n\"By then, I should be.\"\n\n\"Good. We are planning on you being a hit. We need some exposure of an everyday intelligent woman wearing our products and looking good in them.\"\n\n\"I hope I fit that.\"\n\n\"I should have said an everyday and extremely beautiful woman in our products. That is why we want the pictures in the bank. We want to show everyone that you work at a regular job.\"\n\n\"Okay.\"\n\n\"Jessi, would you model an outfit for Bob,\" Marie said.\n\n\"Is that a requirement?\" Jessi asked with a big smile.\n\n\"No!\" Bob said laughing.\n\nJessi turned and looked at me with a seductive smile.\n\n\"I'll do it. I opened up a very nice looking set in blue before you got here,\" Jessi said.\n\nI watched Jessi get up and make her way back into the den. After a minute, she walked by carrying a box.\n\n\"Be right back,\" she said.\n\n\"Marie!\" Bob said.\n\n\"I was just teasing her!\"\n\n\"Which Angels?\" I asked.\n\n\"I'll find a few.\"\n\n\"Bob, will Jessi be modeling with any of them?\" I asked.\n\n\"I'm thinking about it. Tom, once she is identified, all of these pictures we will be taking will be going online and up in the stores. Are you okay with it?\" Bob asked.\n\n\"If I weren't, you wouldn't be here,\" I told him.\n\n\"Good. Marie, did you tell her about the shows we need her to go to?\"\n\n\"Not yet.\"\n\n\"What shows?\" I asked.\n\n\"While we are in New York, she will be fitted with plenty of fashion gowns and outfits. There will be fashion shows and dinners we will want you and her to appear at during the year for publicity. We will need to have a tux tailored for you next week also and a few Armani suits.\"\n\n\"I will be either teaching or starting back to school in the fall for my Ph.D.\"\n\n\"We will work around it when we can, but if you can't go, will you be okay with her going by herself?\"\n\n\"Sure.\"\n\n\"She will end up being photographed with some other men?\"\n\n\"As long as it is just photographs. Bob, I will hold you responsible if anything happens,\" I told him.\n\n\"What do you think?\" I heard Jessi say.\n\nWe looked up, and she was wearing a very tiny set of blue lingerie. The front was a small piece of thin lace, and the bra was made of the same thing.\n\n\"Wow!\" Bob said.\n\nJessi turned around for a few seconds and let us see her bare ass with the string running between her cheeks.\n\n\"Jessi, you are beautiful,\" Bob said. \"I hope my Angels don't think you are showing them up.\"\n\nJessi turned back around and giggled. The blue outfit looked nice with her blonde hair.\n\n\"I like the blue. Marie, we will use that at the bank. Make sure she brings it.\"\n\n\"Do I need to bring anything else?\" Jessi asked as she stood there.\n\n\"No, we brought all the outfits we want to see you in. It is all the new items,\" Bob said, as he looked her over. \"But, I like the blue.\"\n\n\"Thanks.\"\n\n\"Jessi, I don't want to sound like a perv, but you have an outstanding body. Do you work out?\"\n\n\"Some.\"\n\n\"I don't think you have an ounce of fat on your body,\" Bob said. \"You must work out a lot. What kind of work out routine do you have?\"\n\n\"An hour or so a few nights a week, then 3 or 4 hours on Saturdays.\"\n\n\"It shows.\"\n\n\"Sis, tell him what kind of work out you do,\" Marie said.\n\n\"Oh...I practice Martial Arts.\"\n\n\"Really! Do you have a black belt or something?\" Bob asked.\n\n\"A few,\" Jessi replied. \"I better change.\"\n\nJessi went back to the bedroom.\n\n\"Do you work out with her?\" Bob asked me.\n\n\"Oh, no, I tried once. It's too much for me. She has been doing it since she was a kid.\"\n\nWhen Jessi came back, she had on some jeans and a top. She called the lawyer at the bank and asked if he could come to the house.\n\nThe four of us sat and talked about a lot of things for a long time. About 3:00, we heard a car pull up. I got up, and went to the window and looked and it was the lawyer from the bank. After I let him in, Bob introduced himself.\n\n\"Jack, thanks for coming to the house,\" Jessi said.\n\n\"Jim said to help you in any way I could.\"\n\nHe sat, and we told him about what was happening and that we needed him to look over the contract. He took it and sat and read for a while.\n\n\"Jessi, I think this is a fairly standard contract with the necessary releases,\" he said. \"I don't think there is anything to be concerned with,\" Jack said.\n\n\"Thanks, Jack,\" Jessi said.\n\n\"Jack, Jessi needs to pay you for the work you did, and I need you to sign a non-disclosure agreement,\" Bob said. \"That will make it all legal.\"\n\n\"No problem.\"\n\nJack and Bob went to the kitchen with a piece of paper. When they came back, I saw Marie hand Jack an envelope and thank him. After he left, we all sat down and Jessi, and I signed the contract for Bob.\n\n\"Jessi, I know you want to go to the bank's party Friday night, but we would all like to fly back to New York Saturday if you think you will be ready?\" Bob asked.\n\n\"If Tom is okay with that, I guess that is good.\"\n\n\"Good. We will leave the airport about 3:00. That will give us plenty of time to get back and get you checked into a hotel.\"\n\n\"Everyone else has gone to the hotel and are getting ready for Wednesday,\" Marie said. \"I talked to Jim, and Bob and I are going to the bank in the morning to look around.\"\n\n\"What do I need to do?\" Jessi asked.\n\n\"Nothing. All of the posters for tomorrow went out overnight or courier express. When the stores open in the morning, you will be the pin-up girl,\" Bob said. \"The contest starting times are staggard around the country tomorrow so that it starts at the same time across the country.\"\n\n\"What time will it start here?\" Jessi asked.\n\n\"2:00. The contest will be posted on the website tonight at 9:00. That will give it time to make the evening news on the East Coast.\"\n\n\"The news?!\" Jessi exclaimed.\n\n\"Oh, yes. It will be on the evening news across the country and on all the talk shows in the morning,\" Bob told her smiling.",
        "\"Oh, my, god!!\"\n\n\"Sis, why don't you let us sneak you out and to the hotel,\" Marie said. \"I'm afraid there will be people at the house all day tomorrow knocking on your door.\"\n\n\"Jeez...\"\n\n\"Honey, it might be best,\" I said.\n\n\"Jessi, why don't you do it. We will have live video feeds coming back from stores around the country. We can all stay in the suite and watch,\" Bob said.\n\n\"Okay...I guess. I don't want to be dealing with people here at the house.\"\n\n\"You two pack a bag, and we will head out. All of the crew will be having dinner at the hotel, and we can join them,\" Bob said.\n\nJessi and I packed some clothes in a couple of bags and got ready to go.\n\n\"Tom, why don't you and Marie take her car. Jessi, you can ride with me in your car,\" Bob said.\n\n\"I'll grab a hat and some sunglasses,\" Jessi said.\n\nMarie had already stopped at the hotel and picked up room keys. Soon, we were on the way downtown to the hotel.\n\n\"I hope this is not too much for her,\" I said to Marie as we rode.\n\n\"I think she will get a kick out of it once it gets started.\"\n\nIt took us about 30 minutes to get to the Omni downtown. Marie let the valet park the SUV she was driving. While we were standing there, Jessi pulled up in her car. The four of us walked into the hotel and went straight to the elevators. \n\n\"So far, so good,\" Bob said.\n\nWe went up to one of the penthouses and into the room.\n\n\"Wow, what a room,\" Jessi said.\n\n\"Only the best,\" Bob replied. \"How far is the bank from here?\"\n\n\"About 10 minutes,\" Jessi told him.\n\n\"I have someone I want you two meet,\" Bob said and called someone.\n\nA few minutes later, there was a knock at the door. Bob let in a guy that she introduced as the Art Director. He took Jessi over to a sofa, and the two of them sat down to talk.\n\n\"Bill will put her at ease,\" Marie said.\n\n\"Are you staying with me tonight?\" Bob asked Marie.\n\n\"I think I will. They need to be alone.\"\n\nThe three of us sat and talked while Jessi and Bill talked for about an hour. By then, it was 7:00. \n\n\"Everyone is having dinner in a private dining room soon,\" Bob said.\n\nHe broke up the conversation Jessi and Bill were having. They all left, and Marie stayed. We got ready for dinner, and Marie left with us, and we went down to a private room and had dinner. Everyone wanted to meet Jessi, and we ate and had drinks until about 9:30. After that, Bob and Marie escorted us back to our room.\n\n\"I'll come and get you about 9:00 in the morning,\" Bob said. \"We will watch all the craziness from my suite.\"\n\nBob and Marie left us alone in the penthouse.\n\n\"How are you feeling about all of this now?\" I asked.\n\n\"I think it is going to be fun.\"\n\nJessi was tired from all the activities of the day, so we went to bed.\n\n*****\n\nWednesday morning we had breakfast in the room. About 8:30, Marie came to get us.\n\n\"Did you have a good night?\" Jessi asked her.\n\n\"Oh, yes...maybe not as good as with Tom. You two come with me, they have a command center set up in his suite.\"\n\nWe followed Marie next door to another large suite. Bob was on the phone, and there were four computers set up on a table. The Art Director was going over the website with the announcement that had gone out.\n\n\"Come with me,\" Marie said as we walked over to a large TV. \"Did you watch the news last night?\"\n\n\"No, we went to bed,\" Jessi said.\n\nWe sat down in front of the TV and watched a morning talk show as they interviewed someone from Victoria's Secret about everything that was happening. We watched for about 15 minutes, Jessi blushed when they showed the picture from the website on the TV.\n\n\"Everything is ready in the stores,\" Bob said walking up. \"You're famous now Jessi.\"\n\nAs the talk show wrapped up, they were showing lines at stores and malls from around the country. \n\n\"I can't believe all these people are waiting to get in the stores,\" Jessi said.\n\n\"They have a while to wait,\" Bob said. \"Marie and I need to run to your bank.\"\n\nWe hung out with the crew as they came and went all morning. Marie and Bob came back in time for lunch.\n\n\"Everything is ready. The crew is out gathering everything they need for tonight,\" Bob said.\n\n\"I need to call and tell the people where to deliver all my camera gear,\" Marie said and got out her cell phone and walked away.\n\n\"So, what is the story at the bank tonight?\" I asked.\n\n\"They are going to put up signs saying they are shooting some television ads,\" Bob said. \"As soon as the bank closes at 5:00, they will start covering the windows. I have hired some security people to stay outside and keep any crowds away.\"\n\n\"Did you resolve everything with Jim?\" Jessi asked.\n\n\"Yes, he is working with Shelia.\"\n\nA few minutes later lunch was brought in for everyone. Marie, Jessi, and I went to a bedroom while all of the waiters set everything up. After that, all of us and the crew had lunch.\n\nWhen we had all finished lunch by around 1:30, most of the crew and the Art Director had left. Jessi and I were there with Bob and his assistant. Shortly before 2:00, he turned on all of the computers.\n\n\"Here we go,\" he said.\n\nAt 2:00, we watched on the TV as a line of people had formed in one of the stores. The reporter was going up and down the line asking everyone if they knew who the Mystery Lady was. Of course, they all said yes. It was a New York store, so we got a good laugh.\n\n\"I wonder what happened at the bank?\" Jessi said.\n\nBob was watching the computer screens as he got some live feeds from other stores around the country. Jessi and I watched the craziness for about an hour. Around 3:00, Bob pulled up something else on one computer.\n\n\"What is that?\" I asked.\n\n\"Sales numbers are coming in from around the country,\" he said as he watched.\n\nAbout 6:00, the local news came on the TV. The lead story was about what was happening. They came on and said that it had been reported that the Mystery Lady was from the Atlanta area, but no one was saying who it was so they could win the money.\n\n\"It looks like by tomorrow you will be all over the news,\" Bob said.\n\n\"But, they are not saying it's me?\" Jessi said.\n\n\"It will get out. We didn't think it would run past tomorrow, but we are not confirming it for a week.\"\n\n\"Then what?\" Jessi asked.\n\n\"We will have most of the photos done, and they will be ready. In two weeks, we will have your travel schedule.\"\n\n\"I'm supposed to visit the bank headquarters next week in New York.\"\n\n\"We have stalled that for a few weeks. We decided the first store you are going to visit will be your store here,\" Bob said.\n\n\"What about the bank here?\"\n\n\"You will spend a day at your office signing autographs then a day a the store, after that, we start the tour in New York.\"\n\nThe four of us ate a light dinner about 6:00. By 6:30, we were all getting in the rented Tahoes and heading to the bank.\n\nWhen we pulled up in front of the bank, all of the windows were covered in brown paper. We got out and ran into the bank quickly.\n\n\"Hi, Shelia,\" Jessi said as she walked in.\n\n\"Hey, mystery girl!\"\n\nThe stylist whisked Jessi away.\n\n\"How is she handling all of this?\" Shelia asked.\n\n\"Pretty well.\"\n\nAt 7:00, the crew and Marie were busy unloading camera gear from a truck and checking it all out. I found somewhere to sit and watched the circus as it played out. Marie was busy setting up lights and cameras while they fixed Jessi's hair and makeup. The Art Director was busy with several people as they walked around the bank. A little after 9:00, Marie came over and sat with me.\n\n\"We are ready to go,\" she said.\n\n\"Make sure she is comfortable,\" I replied.\n\n\"I will.\"\n\nA few minutes later, I saw Jessi come out in some sexy lingerie. For the next four hours, I watched as they moved around the bank with Jessi as she changed clothes. For a while, they were in Jim's office taking pictures of her at his desk. Marie was working with her and had her laughing, and she seemed to be having a good time.\n\nAs things were winding down, they moved all the gear to the door of the huge vault and took a bunch of pictures of Jessi in various outfits. I walked over to watch, and she was in a sheer teddy holding up bundles of $100 bills to cover her nipples that could be seen through the material.\n\nBy 11:00, it appeared they were finished. Jessi came up to me wearing a silk robe and wrapped her arms around me.\n\n\"I'm tired,\" she said.\n\n\"I bet you are. Did you have fun?\"\n\n\"Yes!\"\n\nI bent over and kissed her, and she hugged my neck.\n\n\"I need to go and put some clothes on.\"\n\nWhile she was gone, Bob walked up.\n\n\"She did great. These are going to be some fantastic photos.\"\n\n\"When will you run them?\"\n\n\"Starting next Saturday, after we are finished in New York. We are having a big press release party there. You and Jessi will be introduced.\"\n\nI saw Shelia walking to me.\n\n\"What happened at the bank today?\" I asked.\n\n\"All the girls picked one person to go wait in line. They decided if she won, they would all split the money,\" Shelia said. \"Tom, are you comfortable with all of this?\"\n\n\"Yes. Her sister started it, but I think it will be fine.\"\n\nI watched as the crew packed up all the camera gear and everything else. Jessi came out, and she and I sat on a sofa.\n\n\"This was crazy,\" she said.\n\n\"I saw a lot of good jerk off material.\"\n\n\"Tom, not now.\"\n\nMarie came over and sat with us.\n\n\"Tired?\" She asked Jessi.\n\n\"Yes.\"\n\n\"You can sleep in tomorrow, then we have some more photos to shoot?\"\n\n\"Where?\"\n\n\"Bill has rented a house that is all decorated for Christmas. We are going to shoot some more photos of you and Tom.\"\n\n\"What time?\"\n\nWe will start about 11:00. The crew will get there early and set everything up. It won't take but a few hours,\" Marie said.\n\n\"Who's house?\"\n\n\"Don't worry, it will be empty except for the crew.\"\n\n\"Can we go back to the hotel?\" Jessi asked.\n\n\"Sure, they will stay and put everything back where it belongs. I'll drive you,\" Marie said.\n\nMarie went to tell Bob we were leaving. She came back, and we walked out to a deserted street and got in her rented SUV. We drove back to the hotel, and Marie and Jessi put their floppy hats back on, and we went inside and up to our room.\n\n\"This has been crazy!\" Jessi exclaimed when we got in the room.\n\n\"Did you have fun?\" I asked.\n\nJessi turned and came to me smiling. She walked up looking up at me smiling then grabbed my cock through my pants.\n\n\"I did.\"\n\nI leaned down and kissed her.\n\n\"I'm sure you're ready for bed,\" Marie said.\n\n\"Oh, I am,\" came from Jessi with a smile.\n\nShe turned and walked off as she pulled her clothes off. Marie was watching her and smiling. Jessi crawled up on the bed, and leaned against the headboard and pulled her legs up and spread.\n\n\"I am definitely ready for bed,\" she said.\n\n\"Tom, I think that means you,\" Marie said.\n\n\"It means both of you,\" Jessi said.\n\nI stood and watched Marie walk toward the bed as she pulled her clothes off. Marie got on the bed and crawled up to her sister and kissed her for a minute. I watched Marie slip down and get between Jessi's legs and begin to eat her pussy. I knew Marie wanted some pictures, so I picked up her digital camera and walked over to the bed. Jessi looked at me and smiled.\n\nAbout 2:00 AM I had taken hundreds of pictures of Jessi and Marie in various positions making love to each other. They were both tired and had gotten silly. The two of them had gotten each other off numerous times as I took a lot of photos and a lot of close-ups. \n\n\"Did you get everything?\" Jessi asked as the two of them lay back on the bed.\n\n\"I think I did,\" I said.\n\nMarie sat up and got off the bed and came to me and took the camera.\n\n\"My turn,\" Marie said.\n\nI took my clothes off and got on the bed with my wife. I moved over her and kissed her for a few minutes.\n\n\"Your turn now,\" Jessi said.\n\nShe pushed me back and had me lay on my back. Marie was taking pictures as Jessi kissed her way down to my hard cock sticking straight up. Once she had it in her mouth, Marie moved in close and took a lot of pictures as Jessi laughed while she worked her mouth on my cock as she looked at the camera.\n\nJessi sat up and straddled my cock. She grabbed it and worked the end into her pussy as her sister took pictures. Jessi smiled as she slowly slid down the length of my cock. Jessi was smiling as she slowly began to work her pussy on my cock.\n\n\"I had fun tonight, did you?\" Jessi asked as she wiggled.\n\n\"I had fun watching you. You seem to be having a good time.\"\n\n\"I was.\"\n\nJessi looked at me smiling as she worked.\n\n\"Did you enjoy all those men looking at me?\" Jessi asked.\n\n\"I did, honey. I'm sure they enjoyed looking at your hot body.\"\n\n\"They did,\" we heard Marie say as she took some close-ups.\n\n\"Did they?\" Jessi asked.\n\n\"Oh, yes. I heard two of them talking. They said you looked very fuckable,\" Marie told Jessi.\n\n\"She did,\" I said.\n\nJessi sat up straight and worked her pussy as she rubbed her tits.\n\n\"What else did they say?\" I asked.\n\n\"Plenty. One of them asked me if I had any naked pictures of you,\" Marie said. \"I told him I had plenty.\"\n\n\"Emmmm...\" came from Jessi as she wiggled.\n\n\"He wants me to let him see them.\"\n\n\"Which one was it?\" Jessi asked.\n\n\"The tall blond guy. I have worked with him on other shoots. He is a pretty good fuck,\" Marie said as she took another picture.\n\n\"I remember him. He was cute,\" Jessi said smiling at me.\n\n\"He has a nice cock, but not as nice as Tom's.\"\n\n\"That younger redhead guy was flirting with me a lot,\" Jessi said. \"I did what Tom told me to do and winked at him a lot.\"\n\n\"I know you did, I was watching you,\" I told Jessi.\n\n\"Did you see what he did?\" Jessi asked.\n\n\"What did he do?\" Marie asked.\n\n\"He walked into the room where I was changing.\"\n\n\"What did he get to see?\" I asked Jessi.\n\n\"Oh, he saw plenty. I was bending over pulling up a thong when he came in.\"\n\n\"I bet he liked that,\" I said as Jessi winked at me.\n\n\"He did. I saw him come through the door and I slowly pulled the thong up and turned around and looked at him. He just stood there and looked.\"\n\n\"Did he get to see your perfect tits?\" I asked.\n\n\"Oh, yes. I winked at him and then picked up the bra and put it on while he looked. Is that what you would have wanted me to do, honey?\"\n\nJessi had sped up and was working her pussy faster.\n\n\"I think you should have walked up to him and let he get a closer look,\" I told Jessi.\n\nShe was smiling at me as she twisted her nipples and worked her pussy harder. She had decided she was going to tease me.\n\n\"He got a nice look, I made sure of it!\" Jessi exclaimed.\n\n\"I haven't fucked him yet,\" Marie said.\n\n\"Maybe he doesn't want to fuck you Marie, maybe he wants to fuck my wife.\"\n\nJessi was now driving her pussy onto my cock.\n\n\"I can ask him when we get to New York,\" Marie said as she stepped back and took a few pictures.\n\n\"Do that Marie. Tell him he has to ask me first,\" I said.\n\n\"Tom...\" came from Jessi as she twisted her nipples.\n\n\"Marie, tell him that Jessi enjoyed him looking at her and that she said he could do it again in New York.\"\n\n\"Ohh, Tom!\"\n\n\"When we are in New York, honey, make sure he gets to see your tasty pussy,\" I said. \"Marie, tell him she will make sure he gets to see it.\"\n\n\"Tom!\"\n\nJessi was starting to get really horny as I teased her.\n\n\"Tom, if I tell him that, he will want to taste it,\" Marie said. Jessi looked over at her sister. \"What should I tell him if he wants to do that?\"\n\nI grabbed Jessi's thighs and started helping her work her pussy on my cock.\n\n\"What do you think you should tell him?\" I asked.\n\n\"Well Tom, if I tell him he can he will really want to do it. There are a few of the guys on the crew that keep the Angels happy during down-time.\"\n\n\"Oh?\"\n\n\"Yes, I have gone back to the dressing rooms several times, and they were going down on the models. The girls like it when they do,\" Marie said.\n\n\"Is that a perk?\" I asked.\n\n\"It is for the guys. Tom, would it be okay if he keeps Jessi happy when she isn't doing anything?\" Marie asked as she stood and looked at her sister as she fucked my cock harder.\n\n\"I guess we need to ask Jessi?\" I said.\n\n\"Ahhhhh!\" Came from Jessi as she leaned forward and put her hands on my shoulders.\n\nJessi started working her pussy up and down hard and fast on my cock.\n\n\"Ahhhhhhh...\"\n\nJessi was looking down into my eyes as she worked her pussy.\n\n\"Would you like that, honey?\" I asked looking up into her eyes.\n\n\"Ahhhhhh! Ahhhhh!\"\n\n\"Marie, tell him he can eat Jessi as long as you get to take pictures of him doing it.\"\n\n\"Ahhhhhhhhhhhhh!!\" Jessi screamed and started coming as she slammed her pussy down repeatedly on my pussy.\n\n\"I think he would let me do that,\" Marie said as she took some pictures.\n\n\"Oh, fuck! I'm coming!!\" Jessi screamed.\n\nI grabbed her and held her as she jerked while she screamed several times as she came.\"\n\n\"Fuuuuck!!\"\n\nJessi collapsed on top of me. Her head was next to mine as I looked up at Marie smiling. I whispered in her ear.\n\n\"I want a picture of that, honey.\"\n\n\"Emmmmm.\"\n\nJessi lay on me for a while breathing hard until she caught her breath. She pushed herself up and sat with my hard cock still inside of her.\n\n\"You two are terrible,\" she said pushing her hair back out of her face.\n\n\"You started it,\" Marie said.\n\nJessi looked at her sister then smiled. The two of them started laughing.\n\n\"That doesn't really happen, does it?\" Jessi asked.\n\nMarie smiled at her and winked. Jessi leaned down and kissed me then sat up and got off my cock.\n\n\"Your turn,\" she said to her sister. She got off the bed and took Marie's camera from her.\n\nMarie got on the bed and straddled my cock.\n\n\"Take one of his cock sticking up,\" Marie said.\n\nJessi held the camera up and took a picture. Marie grabbed my cock and stroked it several times as Jessi clicked. She finally placed the head at her dripping pussy and slowly slid down while Jessi took plenty of pictures.\n\n\"Sis, maybe you can show these to Bob,\" Jessi said.\n\n\"He would like them!\" She said.\n\nMarie slowly wiggled and worked until she had all of my cock inside her pussy. Jessi backed up and took a picture of her sitting.\n\n\"Is it okay if Bob sees these?\" Marie asked.\n\nJessi pulled the camera down and looked at her sister.\n\n\"Seriously?\" Jessi asked.\n\n\"Yes.\"\n\n\"If it is just him...I don't care!\" Jessi exclaimed and laughed. \"But you better not show him the ones of me!\"\n\n\"Deal!\" Marie said.\n\nMarie started working her pussy on my cock while Jessi took more pictures. This went on for a long time as the two of them laughed while Marie fucked me.\n\n\"Too bad we don't have a video camera,\" Jessi said as Marie worked her pussy.\n\nMarie stopped.\n\n\"Bring me the camera,\" she said.\n\nJessi handed her the camera, and she turned a dial.\n\n\"Now you have video,\" she said handing the camera back.\n\nJessi laughed and held the camera up and pushed the button. Marie went back to fucking me hard. Jessi walked around the bed while Marie fucked me as hard as she could.\n\n\"Oh, fuck, yes!!\" Marie shouted.\n\nI reached up, and grabbed Marie's nipples and twisted them hard.\n\n\"Ahhhhhh!! Fuck, yes!!\"\n\nMarie started coming hard.\n\n\"Ohhhhh fuck!! I'm coming!!\"\n\nI shoved my cock up in her harder as she worked her pussy. Marie screamed several more times then both of us started coming.\n\n\"Ahhhhh!!\" We both screamed as we came.\n\nMarie collapsed onto me.\n\n\"Oh...fuck...\"\n\n\"I want to see pictures of Bob fucking you then,\" I said into her ear.\n\nMarie started giggling. She slowly pushed herself up and sat.\n\n\"I don't have any,\" she said.\n\n\"Then he can't see these until you have some to trade.\"\n\n\"Tom!\" Came from Jessi.\n\n\"It's only fair,\" I said.\n\n\"I don't believe you!\" Jessi scolded me.\n\n\"No, he's right,\" Marie said.\n\n\"Marie!\" Jessi exclaimed.",
        "\"I'm not sure who I could get to take them though? Would it be okay if Jessi took them?\" Marie said.\n\n\"Sis!\"\n\nMarie and I laughed.\n\n\"You could just watch, and take pictures,\" I said.\n\n\"Tom.\"\n\n\"That would work,\" Marie said.\n\n\"That's enough,\" Jessi said.\n\nJessi sat the camera down and got on the bed next to us. Marie eased her pussy off my cock then laid on the bed and began licking my cock. She took a few minutes to clean up all the cum that had run out of her.\n\n\"Oh, that was good,\" Marie said rolling onto her back.\n\n\"Now, I am tired,\" Jessi added. \"What time is it?\"\n\nI looked at my watch.\n\n\"2:30.\"\n\n\"Oh. We have got to get some sleep.\"\n\nMarie and Jessi curled up next to me after we turned off the lights.\n\n*****\n\nI woke up around 7:00. I looked over, and Jessi was face down sound asleep. Marie wasn't in bed, but I heard the shower running. I eased out of bed and went to the huge bathroom. Marie was rinsing her hair. I pulled the glass door open and got in the shower with her.\n\n\"You're up early,\" I said.\n\n\"I'm always up early.\"\n\nMarie grabbed the soap and started washing me off. After she had rinsed all the soap off me, she eased down on her knees as the water ran and sucked my hard cock into her mouth. I stood and watched her suck my cock and deep throat me for a long time until I came down her throat.\n\nWe got out and dried off. When we walked back into the bedroom, Jessi was still asleep. Marie got on the bed next to her.\n\n\"Jessi, it's time to get up,\" she said as she pulled some of Jessi's hair back.\n\nAfter a few minutes, Jessi was awake.\n\n\"How long have you two been up?\" She asked.\n\n\"Long enough to shower. You need to get up,\" Marie told her.\n\nJessi got up and headed to the bathroom.\n\n\"Marie, did one of the guys really walk in on her while she was naked?\"\n\n\"Yes.\"\n\nMarie and I got dressed while we waited on Jessi. \n\n\"Breakfast should be here soon,\" Marie said.\n\nAs I pulled my shirt on there was a knock at the door. Marie went and opened the door and let the bellman in so he could set breakfast on the table.\n\n\"I had a lot of fun last night,\" we heard Jessi say.\n\nWe turned toward the bathroom, and she was walking out naked while she rubbed her hair with a towel.\n\n\"I did too,\" Marie said smiling as Jessi rubbed her head.\n\n\"I got some great pictures,\" Jessi said as she took the towel off her head.\n\nJessi looked at us then looked over and saw the bellman looking at her.\n\n\"Fuck!\" Jessi screamed and ran back into the bathroom.\n\nMarie looked at me and smiled and giggled.\n\nThe bellman finished and left.\n\n\"You can come out now!\" I said.\n\n\"No!\"\n\n\"Come on out, sis!\"\n\n\"I'm going to kill you to two!\" Jessi exclaimed as she peeked out the bathroom door.\n\n\"It's your fault!\" Marie exclaimed.\n\nJessi marched across the room, and found some clothes in her bag and put them on while Marie and I ate. When she came to the table, she was mad.\n\n\"You could have warned me,\" Jessi said as she glared at her sister.\n\nMarie looked at her and smiled, then they started giggling.\n\nWhile we were eating, there was a knock at the door. Marie went and opened it.\n\n\"Are you all up?\" I heard Bob asked.\n\n\"Yes.\"\n\nMarie came back to the table as Bob followed her.\n\n\"If we leave by 10:30, we should be at the house by 11:00,\" Bob said.\n\n\"We'll be ready soon,\" Marie told him.\n\n\"When you finish eating, come see me,\" Bob told Marie before he left.\n\nWe finished eating then Marie left the room. Jessi went back to the bathroom to work on her hair. Marie came back while I was repacking my clothes.\n\n\"Everything okay?\" I asked. She walked up close to me.\n\n\"Bob wanted to know if Jessi got enough sleep. He heard us fucking late last night when he came in.\"\n\n\"She will be fine.\"\n\nJessi finally came out with her hair dried and some makeup on.\n\n\"Are you ready to go?\" Marie asked.\n\n\"I guess.\"\n\nMarie called Bob. A few minutes later, there was a knock on the door. We met Bob at the door, and we all went down the elevator the garage. Bob had gotten the keys to his Escalade from the valet so we could go out through the garage. He put the address in the GPS, and we left.\n\n\"Did you sleep well, Jessi?\" Bob asked.\n\nJessi and I were in the backseat.\n\n\"Oh, yes. I was pretty tired.\"\n\n\"I'm sure you were,\" Bob replied.\n\nWe drove for about thirty minutes until we came to the house in a nice neighborhood. There were two Tahoes parked in the drive, and the crew was unloading more equipment. We all got out went in the front door of a big house. It was still decorated for Christmas, and the tree was still up. Two of the ladies on the crew took Jessi and disappeared. Marie started getting her camera gear ready.\n\n\"Tom, we are going to want you in a few of these if that is okay?\" Bob asked.\n\n\"Sure.\"\n\n\"We will probably save these photos until next Christmas. I think we are going to make this a regular event having husbands send in photos of their wives at Christmas,\" Bob said.\n\nAfter about an hour Jessi came out with her hair fixed and makeup; she looked great. She had on a skimpy red teddy that was rather lacy. I stood behind Marie and watched as she posed Jessi and took pictures for a while. They took Jessi and soon she came back out in another outfit. This went on for about two hours.\n\n\"Now you,\" Marie said turning to me.\n\nOne of the ladies took me to a bedroom.\n\n\"Put these on,\" she said handing me a pair of red silk pajama shorts.\n\nShe left, and I took my clothes off and slipped the shorts on. When I went out the door, the two ladies put some makeup on me. After that Jessi and I got in front of the tree and Marie took more photos for a while. Jessi changed outfits several times, and we took some more.\n\n\"That should do it,\" Marie finally said.\n\nJessi took my hand and led me back to the bedroom so we could change clothes.\n\n\"That was fun,\" she said as she pulled off the lingerie and stood naked.\n\n\"As fun as last night?\"\n\nJessi walked up to me.\n\n\"I don't know, that was pretty fun,\" she said and grabbed my cock through the thin shorts.\n\n\"Did you have fun teasing me?\"\n\n\"Yes, I did,\" she said and slid her hand down inside the shorts and wrapped it around my cock.\n\nI leaned down and kissed her while she played with my cock.\n\n\"Did you really enjoy that guy looking at you naked?\" I asked.\n\n\"I was teasing, that didn't happen.\"\n\n\"Marie said she saw it.\"\n\nJessi hesitated a moment then smiled.\n\n\"You like that, didn't you?\" I asked.\n\nJessi smiled and gripped my cock.\n\n\"Do you like the thought of him looking at me?\"\n\n\"I do.\"\n\n\"You are terrible.\"\n\nJessi grabbed the shorts with her other hand and pulled them down while she gripped my hard cock. I watched my naked wife as she got down on her knees and sucked the end of my cock into her mouth.\n\n\"You are the one getting terrible,\" I said as I watched.\n\nJessi sucked my cock as she stroked it fast with her hand. She was working fast to get me off. I watched her for a while as she kept sucking and stroking.\n\n\"Are you two about ready?\" I heard Marie ask as she opened the door. \"Oh. Come on out when you are ready.\"\n\nMarie closed the door.\n\n\"Emmmmm!\" Came from Jessi as she sucked hard and pumped my cock.\n\nI watched her for a few more minutes.\n\n\"I'm going to come,\" I told my wife.\n\n\"Emmmmmm!\"\n\nShe sucked hard as she pumped.\n\n\"Ahhhhh...\" I let out as I began shooting cum into her mouth.\n\n\"Emmmmmmm!!\"\n\nJessi sucked and milked all the cum from my cock then stood. I leaned over and kissed her.\n\n\"That was fun,\" she said and walked over to the bed and started putting her clothes on.\n\nI walked to the bed and started with my clothes.\n\n\"Honey, I hope you would like to have more fun like that,\" I said.\n\nShe turned and looked at me and smiled.\n\nOnce we were dressed, we left the bedroom. \n\n\"We can go, the crew will get everything,\" Bob said.\n\nThe four of us went back out to the Escalade and left.\n\n\"Jessi, those will be some great photos for us to use next Christmas,\" Bob told her.\n\n\"Yes, they will,\" Marie said.\n\nWe had nibbled on some snacks while they were taking pictures, but when we got back to the hotel, Bob ordered a late lunch for all of us to be sent up to the room.\n\n\"Jessi, what time is that party tomorrow night?\" Bob asked.\n\n\"It doesn't start until 8:00.\"\n\n\"Where is it?\"\n\n\"At the hotel just down the road.\"\n\n\"Hmmm.\"\n\n\"Problem?\" Marie asked.\n\n\"I'll need to figure out how to sneak us in,\" Bob said.\n\n\"Us? You're not going,\" Marie said.\n\n\"I thought you would need a date for the night?\" Bob said looking at Marie.\n\n\"I have a date,\" she said as she took my arm.\n\nBob frowned.\n\n\"Sis, maybe you do need a date.\"\n\n\"Why?\"\n\n\"I'm not sure what people will think if Tom shows up with the two of us.\"\n\n\"Let them wonder,\" Marie said.\n\n\"I don't know. Let me think about it,\" Jessi replied.\n\nLunch came, and we all sat down to eat.\n\n\"I got a call while we were taking photos. Headquarters said that people were still flocking to the stores,\" Bob said.\n\n\"You may get another week out this,\" Marie told him.\n\n\"We hope so. Marie, you want to join me tonight. I thought we could go out for a late dinner?\" Bob asked.\n\n\"I'm not leaving my sister here alone.\"\n\n\"Go ahead sis, we will be fine.\"\n\n\"Are you sure?\"\n\n\"Sure. We will have a nice dinner in the room and maybe soak in that big tub.\"\n\n\"Okay. I'll be back before it gets too late.\"\n\n\"Take your time,\" I said.\n\nWe finished eating, and Jessi and I were sitting on the sofa.\n\n\"Maybe you can sleep with me tonight,\" we heard Bob say to Marie.\n\n\"Come with me,\" Marie said.\n\nShe and Bob left the room.\n\n\"I think Bob knows too much,\" Jessi said.\n\n\"Let him wonder.\"\n\nJessi pulled her legs up on the sofa and leaned into my arm. By the time Marie came back, she had fallen asleep.\n\n\"I have to take some film to a processor here in town. I'll be back later,\" Marie said as she grabbed her bag, then left.\n\n*****\n\nJessi woke a few hours later. It was about 6:00 by then.\n\n\"Where is Marie?\"\n\n\"She went to get some film processed.\"\n\nJessi went to her bag and got out the stack of papers Jack had brought her from the bank.\n\n\"I don't know who will do these while I am out,\" she said as she took them to the table.\n\n\"I'm sure Jim can.\"\n\nI watched TV while Jessi worked. About 7:00 Marie came back with a box.\n\n\"I have the proofs from today if you two want to look. I have got to get ready,\" she said and set the box on the table.\n\nI got up and went to the table. Jessi and I pulled out the proofs and looked at them.\n\n\"These look great,\" I said.\n\n\"They do,\" Marie said as she pulled off all her clothes.\n\nJessi and I looked while she showered. She came out of the bathroom a while later running a comb through her hair.\n\n\"What do you think?\" She asked.\n\n\"They look great,\" I told her.\n\n\"I like them,\" Jessi said.\n\n\"Bob said there are several he wants to use in the catalog next Christmas and in the stores,\" Marie told us.\n\n\"I was hoping this would have all died down by next Christmas,\" Jessi said.\n\n\"Oh, no. You will be part of Christmas.\"\n\nMarie walked around the room naked as she combed her hair. Her phone rang, and she answered it.\n\n\"What, Bob?\"\n\n\"My jeans, it's all I have.\"\n\n\"Sure, come on over, I'm almost ready.\"\n\nMarie put her phone down and walked to the door.\n\n\"Marie!!\" Jessi exclaimed.\n\nBob knocked on the door, and she let him in.\n\n\"I thought you were almost ready?\" He said as he came in.\n\n\"I am!\"\n\nMarie found her blue jeans and pulled them on as Bob watched, then she put on a top and buttoned it up.\n\n\"Now, I'm ready. See you two later.\"\n\n\"In the morning,\" I said.\n\nBob and Marie left.\n\n\"She is crazy!\" Jessi exclaimed. \"I don't want him knowing she runs around naked in front of you!\"\n\n\"I think he has already figured that out, honey.\"\n\n\"Jeez.\"\n\nJessi went back to work while I watched TV.\n\n*****\n\nAbout 8:00 I made Jessi decide what she wanted for dinner, and I ordered.\n\n\"Let's make sure everyone has their clothes on when dinner comes,\" Jessi said as she wrapped up her work. \"I need to get these back to Jim tomorrow.\"\n\n\"Get a messenger.\"\n\nAfter we ate dinner, Jessi did want to soak in the tub. I pushed the dinner dishes out into the hall and called the bellman while Jessi filled the big tub in the bathroom.\n\n\"I'm ready,\" she said standing in the door of the bathroom naked.\n\n\"Yes, you are.\"\n\nI took off my clothes, and we got in the big tub. Jessi was sitting across from me in the bubbles facing me.\n\n\"I plan on sleeping late in the morning since we will be up late at the party,\" Jessi said.\n\n\"I'll have to get you in bed early.\"\n\n\"Not that early.\"\n\nWe talked for a while and soaked then Jessi turned around and lay back between my legs against my chest as I held her.\n\n\"I like this big tub,\" Jessi said.\n\nWhile she was lying against me, I rubbed her slick tits for a long time. \n\n\"I don't want to be away from you for a long time,\" Jessi told me.\n\n\"I guess I can travel with you until next fall.\"\n\n\"Aren't you teaching next semester?\"\n\n\"I was only teaching part-time. They won't have any trouble finding someone else.\"\n\n\"That would be great if you could.\"\n\n\"I probably need to keep an eye on you, you seem to be getting a little adventurous,\" I said.\n\nJessi sat up and turned around to face me.\n\n\"No, I'm not.\"\n\n\"Yes, you are.\"\n\n\"Honey, just because I want to be with my sister doesn't mean I am getting adventurous.\"\n\n\"I was thinking about today.\"\n\nI felt Jessi wrap her hand around my cock.\n\n\"Oh, that. It just seemed like a good time to do that.\"\n\nJessi smiled at me as she played with my hard cock. She sat and played with my cock until it was very hard. She stood and stepped over my legs and lowered herself back down and put her legs behind me as she sat. She grabbed my cock again and moved up and slid it into her pussy and slid down.\n\n\"We can't do this in our tub,\" I told her.\n\nJessi settled until I was all the way inside of her. She looked at me then kissed me then she lay against me with her head on my shoulder.\n\nWe sat this way for a long time while she gently squeezed my cock with her pussy muscles.\n\n\"You want to go to bed?\" I asked.\n\nJessi eased up off my cock and stood. I put my hands on her ass and pulled her pussy to me, and kissed her on her bare mound then she stepped out of the tub. I stood and got out, and we dried off. Jessi took my hand and led me to the bed.\n\n\"Hold me,\" Jessi said.\n\nI sat up on the bed, and Jessi got in my lap and worked my cock into her again then leaned into me. I wrapped my arms around her and held her.\n\n\"Honey, being with my sister hasn't been too much, has it?\"\n\n\"Of course not.\"\n\nJessi pushed back and looked into my eyes.\n\n\"Are you wanting me to be with other women?\" She asked.\n\n\"No. You being with your sister is something special.\"\n\n\"I don't know if I could do that,\" she said and laid her head back on my shoulder.\n\nI reached down and placed my hands on her ass, and pulled her to me. Jessi slowly moved on my cock for a while, just enough to keep things going.\n\n\"Emmm.\"\n\nJessi moved a little for a few minutes then sat up.\n\n\"Don't tell my sister you want a picture of one of her guys eating me, she will try and talk me into it.\"\n\n\"Could she talk you into it?\"\n\n\"Tom...\"\n\n\"I think I would like a picture of some guy going down on you.\"\n\n\"Tom! Why?\"\n\n\"Because I would know how bad he would want the rest of you after that. You just letting him eat your pussy would drive him crazy.\"\n\n\"You are terrible!\"\n\nJessi smiled at me and started working her pussy on my cock slowly.\n\n\"Don't take all night,\" I told her.\n\n\"I may!\"\n\nJessi sat in my lap slowly working her pussy for a long time.\n\n\"...oh yes...eat me...\"\n\nJessi stopped.\n\n\"Was that my sister?\"\n\n\"Sounded like her.\"\n\nWe sat still for a minute.\n\n\"...yes, eat me, Bob...\"\n\n\"That's her,\" I said.\n\n\"Jeez.\"\n\nWe sat and listened to Marie as she encouraged Bob for a while. Jessi had absentmindedly started working her pussy again as we listened.\n\n\"Were we that loud?\" She asked.\n\n\"Oh, yes.\"\n\n\"I didn't realize it.\"\n\n\"I'm sure Bob heard plenty.\"\n\n\"Damn, I don't want him knowing we all have sex.\"\n\n\"It's too late now.\"\n\nMarie got louder as we listened. I was sure she was doing it on purpose so we would hear. Jessi had sped up as she listened to her sister. I watched her as she got into it.\n\n\"I think you like listening to that,\" I said.\n\nShe turned back to me and realized she had been getting into it too much.\n\n\"Oh...it...\"\n\n\"Get up,\" I told her.\n\nJessi sat up and moved off me. I stood and got off the bed and took her hand.\n\n\"Come with me,\" I told her.\n\nI led Jessi over to the sofa on the wall of Bob's room.\n\n\"Tom!\"\n\nI took Jessi and moved her until she was on her hands and knees on the sofa. I got behind her, and grabbed my cock and slipped it into her pussy and slid all the way in.\n\n\"Ahhhh...\"\n\n\"Oh, fuck, yes... eat me, Bob!\"\n\nI slowly worked my cock in and out, as we listened to Marie getting off several times. It got quiet for a few minutes then we heard Marie again.\n\n\"Yes! Harder!\"\n\nMarie screamed a few more times then we heard their bed hitting the wall.\n\n\"Yes! Harder! Fuck me harder!\"\n\nI grabbed Jessi's ass and started working my cock into her harder and faster as she listened. Marie was being very loud.\n\n\"Fuck me!!\" We heard Marie scream.\n\nI held Jessi's ass tighter and started jerking her back on my cock harder.\n\n\"Ahhhhh...\" came from Jessi as we kept going. \"Tom...more...\"\n\n\"Ahhh, I'm coming!\" Marie yelled several times.\n\n\"Harder,\" Jessi said.\n\n\"What?\"\n\n\"Harder!\"\n\nOur skin was slapping together as I pulled Jessi back hard each time.\n\n\"Harder!\" Jessi let out.\n\nI listened to Jessi and Marie both scream harder over and over for a long time.\n\n\"Fuck! I'm coming!\" Jessi let out as she started coming.\n\nI kept driving my cock into her as she came the first time and knew she would come again.\n\n\"Ahhhhhh!!\" Jessi screamed and came again.\n\nI kept driving my cock into her.\n\n\"Fuck my ass!\" We heard come through the wall.\n\n\"Tom... fuck my ass!\"\n\nI pulled Jessi off my cock, and grabbed it and placed the end on her asshole. Jessi started pushing back hard.\n\n\"Ahhh!\" Came from her when my cock popped into her ass. \"All the way!!\"\n\nI pulled on Jessi's hips as I slid my cock into her tight ass.\n\n\"Ahhhhhhh!!\"\n\n\"Fuck my ass hard, Bob!!\"\n\nI fucked Jessi's ass harder as she screamed while I listened to Marie being fucked on the other side of the wall. We kept going for a long time. I was surprised when I heard Jessi and Marie both scream at the same time they were coming.\n\n\"Ahhhhhhh!!\" Jessi let out as I listened to Marie screaming.\n\nI was horny listening to Marie. I jammed my cock into Jessi hard and started pumping cum into her ass.\n\n\"Ahhhh!! Yes!!\" Jessi screamed as we both came.\n\nI fell back onto my heels as Jessi fell forward, pulling my cock from her ass. It was quiet in both rooms for a few minutes.\n\n\"Honey, I think you like listening to your sister being fucked,\" I got out.\n\n\"You're terrible,\" Jessi moaned.\n\nJessi and I sat on the sofa for a few minutes.\n\n\"I'm worn out,\" Jessi said.\n\nAfter a few more minutes we managed to get up and get cleaned up and then got in bed.\n\n*****\n\nFriday morning we were woken up by Marie bouncing on the bed.\n\n\"You two, time to get up!\" She exclaimed.\n\n\"You seem happy this morning,\" I said.\n\n\"I guess she is,\" Jessi moaned.\n\n\"Hey, I heard you getting it good last night!\" Jessi replied.\n\n\"Oh, fuck,\" Jessi moaned.\n\n\"You got into it, I know you did!\" Marie teased.\n\nJessi and I finally got out of bed and headed to the shower.\n\n\"I'll order breakfast!\" we heard Marie from the outer room. \"Jessi, make sure you come out naked when the bellman his here!\"",
        "\"I'm going to kill her,\" Jessi added.\n\nThe two of us showered and dried off. Jessi peaked around the bathroom door before she walked out. I pushed her into the big room.\n\n\"Tom!\"\n\nWe were dressed when the bellman brought in breakfast. It was the same one that had seen Jessi naked.\n\n\"No show this morning,\" Marie told him. \"I got it.\"\n\nWe sat and started breakfast.\n\n\"Marie, we have to go back to the house to get our dresses for the party.\"\n\n\"Do you think Tom could go and pick them up?\"\n\n\"I guess.\"\n\n\"I hate for you to be out in public right now,\" Marie said.\n\n\"Tom, can you get them?\" Jessi asked.\n\n\"Make me a list, and I will go and pick everything up.\"\n\n\"I told Bob he couldn't come tonight,\" Marie said.\n\n\"I wish you hadn't done that,\" Jessi told her.\n\n\"I think Tom is enough for both of us.\"\n\nMarie and Jessi talked while we ate. When we finished, I called to have the trays picked up.\n\n\"I'm going to shower,\" Marie said and pulled off her clothes as she headed to the bathroom.\n\n\"You know where the two dresses are you bought?\"\n\n\"In your closet, I guess.\"\n\n\"Yes. Grab them and hang them up in the car so they don't get wrinkled.\"\n\n\"Anything else?\"\n\n\"Yes, get the red pair and the black pair of stilettos, Marie can wear one pair. We need stockings and a garter...I really need to go.\"\n\n\"I can get everything.\"\n\n\"Okay. I need to call someone to come and pick up these contracts and take them to Jim.\"\n\n\"I'll do it.\"\n\nI called the concierge and asked him to get us a messenger. Jessi sat looking over the contracts again when there was a knock on the door.\n\n\"That is probably the messenger,\" I said and went to the door; it was the bellman.\n\nI let him in to get the breakfast trays.\n\n\"Tom, can you pick up my other bag,\" Marie said as she walked out the bathroom naked. \"It's in the bedroom.\"\n\nI watched as the bellman looked up at Marie.\n\n\"Is it in your bedroom?\" I asked.\n\n\"Yes. It has some things I need.\"\n\nMarie walked around the room as the bellman slowly picked up all the breakfast trays.\n\n\"Marie!\" Jessi exclaimed.\n\n\"What? Oh...I don't care,\" she said looking at the bellman.\n\nThere was another knock at the door. I opened it, and it was Bob.\n\n\"Is Marie here?\" He asked.\n\n\"You could say that, come on in.\"\n\n\"What do you need Bob?\" Marie asked as she stood in the middle of the room.\n\n\"Since you are not going to let me go with you the crew is going to a party in town...unless you changed your mind?\"\n\n\"I haven't...the bank didn't invite you,\" Marie said.\n\n\"He can come,\" Jessi said.\n\n\"No, he can't,\" Marie added. \"I'll see you in the morning, Bob.\"\n\n\"Okay, we are planning on being at the airport at 2:00.\"\n\n\"We will be ready to go.\"\n\nWhile Marie was standing there naked talking to Bob, the bellman was just standing and looking at Marie. When Bob turned to leave, the bellman went out with him.\n\n\"Marie!\" Jessi scolded.\n\n\"You are too uptight, sis,\" Marie said and picked up her jeans and put them on.\n\nAfter Marie finally had clothes on, there was another knock on the door. This time it was the messenger, and Jessi dealt with him. \n\n\"Well, that is all done,\" Jessi said.\n\n\"Then I am heading to the house to get your clothes,\" I said.\n\n\"I really should go with you.\"\n\n\"Jessi, I can get everything. Go to the Spa or something.\"\n\n\"I have a better idea,\" Marie said. \"We will have the spa come to us!\"\n\n\"I'll be back by lunch,\" I said as I headed to the door.\n\n\"Oh! Grab my Gi and belt so I can work out, and I guess you better pack us some more clothes for next week,\" Jessi told me.\n\n\"I will.\"\n\nI went down to the valet and had him get Jessi's car.\n\nI drove to the house and went inside and began packing clothes. I grabbed two suitcases and packed mine first then started packing Jessi's. It took me a couple of hours to pack all of our clothes. I got garters and stockings for Marie and Jessi and grabbed the shoes. I took the suitcases to the car and then grabbed the dress bags and everything else. After I made the last trip to the car, I went back inside. I stood and looked around at the Christmas decorations that were still up and all the boxes from Victoria's Secret and wondered what Jessi and I were in store for over the coming year.\n\nI almost forgot Marie's bag, so I went to her room and picked it up. I went to the car and got in and headed back downtown to the hotel.\n\n*****\n\nI pulled up in front of the hotel and helped the valet unload bags. I gave the attendant the keys to the car and told the bellman what room to take the bags to. On the way through the lobby, I went to the bar to get a bottle of Champagne sent up to the room. It was busy from the lunch crowd, so I sat on a stool at the bar and waited. There were two women sitting next to me sipping wine.\n\n\"Excuse me, can I ask you something?\" I nice looking middle age woman next to me said.\n\n\"Sure.\"\n\n\"You look just like the man in the pictures on the Victoria's Secret website.\"\n\n\"What pictures?\" I asked.\n\n\"There are some pictures on their website, a cute couple someone sent in. They are having a contest to identify the lady...you look just like the guy in the pictures.\"\n\n\"He does...\" the lady sitting next to her said.\n\n\"Sorry, I'm not a model.\"\n\n\"I don't the guy is either...are you him? You look just like him.\"\n\n\"I'll have to check out the website,\" I said.\n\nThe bartender walked up finally.\n\n\"Can I help you sir?\" He asked.\n\n\"I would like a nice bottle of Champagne sent up to room...\" I thought as the two ladies looked at me smiling, \"...or can I just take it with me?\"\n\n\"Sorry, we have to have it sent to the room,\" the bartender said.\n\n\"Okay, I'll just call when I get to my room, thanks.\"\n\n\"If you give me the room number I'll have it sent up.\"\n\n\"I call down, thanks.\"\n\nI got up and slipped out of the bar and went to the elevator. When the door opened, I got on with a young couple. As we rode up, the young lady kept looking at me. The elevator stopped, and the couple got off. I went on up to the top floor where the penthouses were. When I got to the room, the bellman was just leaving. I tipped him and went into the room. I looked around, and Marie and Jessi were lying on two massage tables as a guy, and a woman gave them a massage.\n\n\"You two look comfortable,\" I said.\n\n\"Oh, I am...\" Jessi got out as the guy massaged her leg.\n\n\"Tom, look in my bag and grab my address book,\" Marie said.\n\nI opened up her bag and dug around until I found an address book.\n\n\"Is this it?\"\n\n\"Yes, bring it to me, please.\"\n\nI walked over and handed Marie her address book as she lay on her stomach while the lady worked on her back. I smiled at Jessi because she and Marie were lying face down naked with just a sheet covering their ass. She winked at me.\n\n\"Tom, grab my phone on the table,\" Marie said.\n\nI grabbed her phone and handed it to her.\n\n\"Have you two been living it up this morning?\" I asked.\n\n\"Oh, yes,\" Jessi said.\n\n\"Hey, Jeni, it's Marie,\" we heard her say.\n\n\"No, I'm not in New York right now, I am in Atlanta.\"\n\n\"Oh, I had a great Christmas. I will be in New York Saturday evening and will be there all week.\"\n\n\"Sure, I can come by for drinks one evening...I'll bring along someone you are wanting to meet.\"\n\n\"Just a woman you left a message for on the Victoria's Secret website to get in touch with you.\"\n\n\"Yes! Ohhh, yes, I know her, she is my sister.\"\n\n\"No shit, she really is my sister!\"\n\n\"She does...I'm not sure what our schedule will be, but I wanted to call you.\"\n\n\"Oh, yes, a lot of publicity. I'll call you at the office Monday, and we will set up a time to meet. No, she is not a model...just my sister. They are going to keep her busy, but you can tell her all that when we meet.\"\n\n\"Maybe by Wednesday, I will be doing some shoots with her, but I'll make sure you two meet. Okay, Jeni, talk to you later.\"\n\n\"Who was that?\" Jessi asked.\n\n\"Jeni Rose and IMG.\"\n\n\"That was for real? She did leave that message?\"\n\n\"Yes, she did. She can't wait to meet you.\"\n\nI ordered the bottle of Champagne, and it was delivered quickly. I opened it and poured the two of them a glass to enjoy while they enjoyed their massage.\n\n*****\n\nBy late afternoon Jessi and Marie had been well pampered and the three of us were in the shower. The two of them let me wash their hair before we finished. We all dried off and they wrapped themselves in towels, and we went to the bedroom. They sat on the bed and ran combs through their hair while they joked and laughed.\n\nThere was a knock at the door, and I went to see who it was. It was Bob, so I let him in.\n\n\"Did the two of you enjoy your massage,\" he said.\n\n\"Yes, we did,\" Marie replied.\n\n\"What time are you leaving for the party?\" Bob asked.\n\n\"It starts at 8:00, I thought we would leave about 8:30,\" I said.\n\n\"Okay. I'm going to have someone drive you all to it in one of the rentals. When you are ready to leave, call me, and I will have them pick you up and bring you back here.\"\n\n\"I can drive us,\" I said.\n\n\"I would rather have someone drive you...just in case there are any problems getting out when it is over,\" Bob said.\n\n\"What kind of problems?\" Jessi asked.\n\n\"None, I hope. I have talked to your boss, and we are going to make sure no press shows up at the party...in case word has gotten out,\" Bob told us.\n\n\"Do you think it has?\" Marie asked.\n\n\"Don't know.\"\n\n\"Yes, you do,\" Marie said. \"What's up?\"\n\n\"I got a call from the guys monitoring the comments on the website. They told me they have screened out some that have said Jessi works in a bank, here in Atlanta.\"\n\n\"Did they mention her name?\" Marie asked.\n\n\"No, but they said they had screened a handful saying the same thing. If any of the people leaving the messages have contacted the local press it won't take much for them to figure things out,\" Bob said.\n\n\"Well, we didn't think we would get more than a few days,\" Marie said.\n\n\"We are still hoping we can go for another week. The web people have put some messages on the website saying that you are from Dallas, Los Angeles, Miami, and Seattle. They hope it will give us some cover.\"\n\n\"I hope so,\" Marie said.\n\n\"Give me a call about 15 minutes before you are ready to go, we will go out through the garage,\" Bob told us, then left.\n\nWhile the girls were getting ready, I had some dinner sent up. The three of us sat and ate dinner until about 7:00, then Marie and Jessi went to finish with their hair and makeup while I put on my suit.\n\nBy 8:00 we were all ready to go. Marie called Bob and told him we were ready. He knocked on the door a few minutes later.\n\n\"You two look hot,\" he said checking out Marie and Jessi.\n\nThe red and black dresses I had bought them did look good on them. The low-cut front and the bare back looked great with their long blonde hair. Jessi had decided to wear the black one, and I watched her put on the black thong, garter, and black stockings. She was worried the tops of her stockings would show when she sat down because the dress was so short.\n\nMarie looked amazing in the matching red dress. They both did look very hot in the dresses and the stilettos.\n\n\"Yes, we do!\" Marie said.\n\nBob made a call on his cell phone, and a few minutes later we left the room. We got on the elevator, and it stopped on several floors on the way down, and more people got on that looked like they were heading to a New Year's Eve party. There were several people that kept turning to look at Jessi. We finally got to the lobby.\n\n\"Come on, we have to take another elevator down to the garage,\" Bob said.\n\nAs we walked off one of the women that rode down with us was pointing at us as we walked down the hall.\n\nWe got on the elevator to the garage. When the doors opened there were two guys standing there waiting on us.\n\n\"This is your security detail for the night,\" Bob said. \"They will escort you to the other hotel. \"\n\n\"See you in the morning, Bob,\" Marie said as we got in the black Tahoe that was parked next to the elevator waiting.\n\nI was in the backseat with Marie and Jessi. The two guys were upfront. We drove out of the garage and through town.\n\n\"Sis, how many people will be at the party?\" Marie asked.\n\n\"Around two hundred.\"\n\nWe drove for about 15 minutes until we got to the other hotel.\n\n\"Not good,\" one of the guys up front said.\n\nWe looked out and there appeared to be a bunch of photographers in front of the hotel. The driver kept going. We drove around the hotel a few times then pulled into the underground garage for the hotel. The driver pulled up to the elevator, and one of the guys got out.\n\n\"What's up?\" Marie asked.\n\n\"He is going to go and find us a back way in,\" the driver said.\n\nWe sat for about 15 minutes until the other guy came back.\n\n\"Okay, we are going up the elevator then through the service corridor to a service elevator up to the 2nd floor where the ballroom is for the party. We will be going in through the backdoors from the service corridor,\" he said.\n\nWe got out, and the girls pulled their wraps around them and we got on the waiting elevator. When the doors opened, he hustled us down a hallway and into a back hallway.\n\n\"What if the press goes into the party?\" I asked.\n\n\"They haven't, we have people at the doors to the ballroom,\" the guy said. \"Only the bank employees can get in.\"\n\nSeveral staff in the back corridor looked us over as we walked. We came to some doors with another guy in a suit standing there.\n\n\"Enjoy the party,\" he said as he opened the doors.\n\nMarie was holding one of my arms while Jessi was holding the other.\n\n\"There you are!\" We heard Jim say.\n\nHe was standing at the backdoors with a bunch of people. They all clapped as we walked into the ballroom. We were surrounded by people asking questions.\n\nEveryone was amazed at how much Marie looked like Jessi. They all wanted to have their picture made with Jessi and me. I figured they would all be up on Facebook before we left the party.\n\n*****\n\nWe had a good time at the party as everyone wanted to meet Jessi and talk to us. Most of the men were checking out Jessi and Marie all evening. Things finally died down about 10:30.\n\n\"Well, I guess the cat will be out fo the bag,\" I said.\n\n\"I would think that all these pictures went up on Facebook within 5 minutes,\" Marie said. \"I bet we have a real problem with the press when we leave.\"\n\n\"What do we do?\" Jessi asked.\n\n\"Enjoy the party.\"\n\nWhile Jessi and I were enjoying the party, Marie walked off talking on her cell phone. She came back about 30 minutes later and joined us.\n\n\"What's up?\" I asked.\n\n\"We are going out the front door when we leave,\" Marie said. \"You were right, the cat is out of the bag.\"\n\nThe party was scheduled to last until 2:00. There had been plenty of food and drinks all evening. The three of us had found a table about 1:30 to take a break.\n\n\"Whenever you two are ready to go, let me know,\" Marie said. \"The Tahoe will be waiting out front.\"\n\n\"Maybe we better go before everyone else decides to leave,\" I said.\n\n\"Probably a good idea. Let's tell everyone good night,\" Jessi said.\n\nWe all got up and went to find Jim and the rest of the executives. We told them we were leaving; Marie made a phone call while we said goodbye.\n\n\"You two ready?\" Marie asked.\n\n\"I guess,\" Jessi said.\n\n\"This is going to be a zoo. The hotel is full of press, and they are at the front door. We'll go out and to the stairs down to the lobby. Just follow the two guys that are waiting on us,\" Marie said.\n\nWe made our way to the front doors, and there were two guys in black suits waiting on us.\n\n\"Just stick with us,\" one of them said.\n\nThey pushed the doors open, and we followed them.\n\n\"Jessi!! Jessi!! Jessi!!,\" we heard people screaming as flashes went off.\n\nMarie and Jessi held my arms as I followed the two guys in suits. They pushed through the throng of press, and we made it to the big staircase going to the lobby. When we got to the bottom of the stairs, we followed the two guys out the front door. They pushed through the photographers to the Tahoe, and we jumped in as people yelled Jessi's name.\n\nOnce the door to the Tahoe closed, I realized Marie was laughing her ass off.\n\n\"What's so funny!\" Jessi exclaimed.\n\n\"This whole thing!\"\n\nThe three of us started laughing as the driver tried to pull away through the crowd. We were finally away and moving through town.\n\n\"I don't believe this!\" Jessi said.\n\n\"You will be all over the media,\" Marie said.\n\nWe drove for about 20 minutes until we came to our hotel. \n\n\"We may as well go in through the front door,\" Marie said to the driver.\n\nHe pulled up in front and stopped. The valet opened the door, and we got out. No crowds this time as we made our way into the lobby.\n\nWhen we got to our floor, we walked to our room. Marie stopped and knocked on Bob's door as we went by. Jessi and I went into our room, and she flopped down onto the sofa. A minute later, Marie came through the door with Bob.\n\n\"Well, Jessi, the world knows who you are now,\" he said.\n\n\"That was crazy,\" Jessi said.\n\n\"Pictures of you are all over the internet. People at the party posted the pictures,\" Bob told us.\n\n\"You got some mileage out of it,\" Marie said.\n\n\"Oh, this is going to be great. We didn't expect the internet to blow up tonight,\" Bob told us.\n\nThe four of us talked and laughed for a few minutes.\n\n\"Bob, we are going to bed. I'll see you in the morning,\" Marie told him.\n\nBob smiled, then left the room.\n\n\"Tired, honey?\" I asked.\n\n\"A little.\"\n\n\"Let's go to bed,\" Marie said as she starting taking off the dress.\n\nJessi and Marie smiled at each other as they got naked. The two of them pulled back the sheets on the bed and got in and waited for me. After I was out of my clothes, I got between them.\n\nThe three of us had some great sex for a few hours. Jessi and Marie took turns riding me as they talked and laughed before we turned off the lights.\n\n*****\n\nMarie woke us up about 10:30; she had breakfast already in the room. The three of us ate breakfast then packed all of our clothes. Bob knocked on the door about 12:00 and Marie let him in.\n\n\"Have you looked at the internet?\" He asked.\n\n\"No, we haven't,\" Marie said.\n\n\"You probably should. Check out our website.\"\n\nMarie opened her computer and pulled up the website. There was a picture of us at the party and an announcement that Jessi had been identified.\n\nWe surfed through some of the news websites, and there were pictures of us leaving the party. Marie and Jessi thought it was funny. Bob showed us a few other websites, and we discovered that Jessi was all over the internet.\n\n\"You're famous now,\" I told Jessi as I kissed her.\n\n*****\n\nBob had a limo waiting for us at 1:30 in front of the hotel. We got in and made our way to the airport. I was sure it was Bob's doing, but there were a lot of photographers waiting at the airport when we pulled up.\n\nWe all stopped and had pictures made before we made our way to the private jet. Once we were onboard, we had to wait a bit before the jet started moving. We made it to the runway and felt the jet speeding down the runway.\n\n\"Well, Jessi, I hope you are ready for all that is to come,\" Marie said as we rolled down the runway.\n\nPart three???? Maybe it won't take me four more years! Happy New Year!!"
    ],
    "authorname": "drmac100",
    "tags": [
        "drmac100",
        "christmas",
        "incest",
        "taboo"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/a-very-wonderful-christmas-pt-02"
}