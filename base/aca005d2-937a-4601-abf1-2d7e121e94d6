{
    "title": "Odette: Path A",
    "pages": [
        "I looked at Randi, then back at Ollie. I didn't want to mess with this right now. I wanted to try and have a night of fun without having him intrude. \n\n\"Let's go,\" I said to Randi quietly, then turned and started to her house. She caught up and we both ignored Ollie yelling at me.\n\nIn under two hours, the other girls had all shown up and we were all laughing and joking. Randi introduced me to three truths and a lie, and we had fun playing that, especially when the girls began saying outrageous things that they swore were truths. Randi insisted on makeovers and trying on dresses, but relented when she had no clothes that came close to fitting me. \n\nAround ten we were laughing and loud and boisterous and she brought out a bottle of vodka from the freezer. I was nervous, I had never drank before, but I wanted to try it at least once. After three shots, I was feeling bulletproof.\n\n\"We are going for a walk because it's fucking hot in here!\" Randi yelled, staggering to her feet.\n\nThere were cheers and we all got up, following her to the door.\n\n\"What about the mountain people?\" Katie asked worriedly.\n\n\"I have been here over a year now and I have never once seen these supposed people. I think you were all fucking with me,\" Randi said confidently. \"I am sure of it. Just local urban legend. Come on! Let's walk up to the Casey's and get junkfood!\" she said, swinging her purse over her shoulder. \n\nWe all laughed and broke into song, then she pulled a bottle of water from her purse and passed it around. I took a sip, then spit it out. It wasn't 'just' water. \"What is this?\" I asked.\n\n\"Nothing that will hurt you!\" Randi said, tipping the bottle back up to my lips. \"Try it, it will make you feel awesome! And you will be totally chill.\" She tipped it up and I had swallowed two gulps before I pushed it back. It tasted terrible.\n\n\"What is it?\" I asked again, immediately feeling dizzy and my vision swimming. \"Did you just give me drugs?\"\n\n\"You say that like you have never... holy shit Det, have you never tried anything? No drugs? Had you even drank before tonight?\"\n\n\"Noooo.\" The word sounded strange to my ears, drawn out and slow. Their laughter as I frowned was slow too.\n\nI blinked, there were too many of them. \n\nI focused on the extra people, standing behind my friends on the road. Were they real? Men. Where had they come from? There were no cars, just the woods on the side of the road that led up the mountain.\n\n\"What?\" I started to ask as the men moved towards us.\n\nI heard screaming, but it sounded distorted to my ears. I looked up at the man in front of me and he stared down at me. \"You need that poison out of you,\" he said, then grabbed my face and shoved two fingers down my throat.\n\nI went to my knees and vomited, throwing up painfully as a fist had a tight hold on my hair. \n\n\"Ugh. Randi, I don't like this stuff! I don't feel good. I want to go home! You shouldn't have... ugh. Not without asking or telling me... Randi?\"\n\n\"Quiet down girl. You get it all out?\"\n\n\"What? Who?\" I tried to turn and look up, but my world spun and I vomited again. I pressed my face to the rough pavement, wishing I were dead.\n\nThe first thing I became aware of was voices. Male voices, echoing oddly. The second was sobbing. I was spinning again, being put down on a hard surface. \n\nI tried to lay down, but hands held me up. \"Can you stand, girl?\" a male voice asked.\n\n\"I don't want to,\" I whispered. I felt horrible. \n\n\"Come on. Stand up. Right here with the others. You, girl, the tall one. Get her clothes off of her.\"\n\n\"Please let us go!\" Randi wailed.\n\nI forced my eyes open as someone tried to pull my hoodie off. The room was still wavering, but I was trying to get my bearings.\n\nWho the hell were these men and why were my friends all crying? And who was undressing me? It was Katie who had my hoodie in her hands, her cheeks tear stained in the firelight. \n\nWe were in a cave, I realized as I blinked around at everyone. Haley stood up with my yoga pants. They were all completely naked and I looked down. I was as well. I struggled to cover myself.\n\n\"I get first pick,\" a man said confidently and I turned to look at the men blocking the cave entrance. There were seven of them and the one who had spoken and stepped forward was tall and dressed all in black. \n\n\"Fuck if you do,\" a short man in a kilt said, pushing up to the front. \"This was my call and I get my choice.\"\n\n\"You don't lead us, Hass,\" the taller man hissed.\n\n\"I don't give a fuck, Bayn, I get first pick. It was me who decided, me who saw them and brought you all in, I get the one I carried.\"\n\n\"Bullshit,\" another of them said. He looked like the short one in the face, but he was taller. \n\nAll of the men had long hair except the short one. His hair was shoulder length and tied back off of his face. He was small, but wiry hard and he looked like he had short man's syndrome, mad at the world. \n\n\"You gonna step up for her, Rast?\" short man spat. \"Or you, Bayn? Will you challenge me for her? Barrett? Any of you? I didn't fucking think so. She's mine.\"\n\n\"Fine. You get her first,\" the one called Bayn conceded. \"I want the tall one first then. The rest of you draw lots and put the others in the stocks to take turns.\"\n\nThere was more screaming and crying as my friends were dragged away. The short man came to stand in front of me and I sort of recognized him. He had forced me to throw up. He was looking me over as if he didn't hear my friends screaming and begging from deeper in the cave.\n\n\"Please,\" I whispered. \"Let us go? We weren't bothering anyone!\"\n\nHis smirk was grim. \"Nah. Loud little bitches get what they ask for, don't they? Attention. They asked for this.\"\n\n\"We didn't! We were just trying to have fun.\"\n\n\"You weren't. She gave you too much. The others took more and were fine, but you wouldn't have made it. It was too much.\"\n\n\"Too much? What was it?\"\n\n\"Poison. You people from below feed your bodies with it.\"\n\nA shrill scream drew my attention and I looked back. They had Haley and Katie in stocks, bent over and restrained. It was Katie who was screaming as a man drove into her from behind, his pants at his ankles. He was holding her hips and ramming like a jackhammer. \n\nThere was a man behind Haley too, but they also had men moving in front of them, ramming their cocks into their mouths. There was a group of men standing and watching, waiting their turns.\n\nI felt sick and dizzy all over again. \"No! Please, sir, don't do this!\"\n\n\"Hush your mouth, girl. You ain't going there, not yet. Keep me happy and you won't. Not for a while. You got a name?\"\n\n\"Odette. Please, please let them go?\"\n\n\"Fuck, look at the one with the black hair. She's lovin it. The yellow haired one is coming around. We've seen them all plenty, fuckin boys, suckin cock. Not you. You ain't from here at all. Come on,\" he pulled me back and passed my friends in the stocks. He was right, Haley was moaning and sucking the man's cock eagerly as the other pumped into her from behind. Katie was panting around the cock fucking her throat, looking like she was trying not to come.\n\nHe pulled me further into the cave and we passed Randi and the tall man in black. He was laying back on one arm in a bed, his other hand in her hair as she eagerly sucked his cock, moaning like she was loving it. \n\nIt hit me then, in my foggy mind, what was about to happen to me. I jerked back and started fighting, but he picked me up and threw me over his shoulder, going back deeper into the cave. He dropped me to a mattress in a dimly lit section. It was where the cave ended, the only way out was the way we had come in. I scooted back, trying to cover myself as he started pulling his clothes off.\n\nI watched him, staring numbly as I tried to clear my head. When he untied and dropped the kilt, I blinked again. His cock wasn't long, it was a short as he was, suiting his size perfectly. What made me stare was the fact that it was as thick as his wrist, curved up sharply, and he wasn't circumcised. Every picture I had ever seen, every porno as well, the man had been circumcised. It was odd to see it, new. He moved closer, stepping onto the mattress and stopped inches in front of me as I stared at the protruding member like it was a snake. He took hold of my hair in one hand and his cock in the other, pressing it to my lips.\n\nI yanked back, horrified. \"No!\" I yelled as his grip tightened in my hair.\n\nHe smirked and rolled a shoulder like a shrug. \"Poison has you gone good, doesn't it? Your eyes are black as night. Brain cain't catch up. Come on here and suck my cock all pretty like you below girls do.\"\n\n\"I don't do that! I won't do that!\"\n\n\"You ain't never? Lay down and turn over then, let me fuck you.\"\n\n\"No!\"\n\nHe laughed. \"Ain't much like your friends, are ya? You'll learn.\"\n\nHis hand shot out suddenly and he backhanded me hard enough to send me to the mattress. I blinked at my hand in front of my face, dazed. The pain seemed to come behind the action, following like it was on a rubber band. It hit me and I whimpered. \n\nI felt him jerking on my legs, rolling me to my stomach and shoving my legs apart. \"No?\" I asked my hand. \n\nHis fingers touched my pussy lips and I yelped, but lay there like a lump. My body didn't seem to know how to respond. \n\nHis fingers fumbled at my slit a moment, then he shoved a rough finger into me, dry, and I squealed again, managing to tense up and try to escape the invading finger this time. He landed a hard smack on my ass as his finger poked around inside me, exploring like he was searching for something. I lay there passively, wondering what he was doing.\n\nWhen his finger curled in a certain spot and a shot of electricity shot through me, making me twitch and gasp, he seemed to feel like he had found what he was looking for. He slid his finger out and rolled me to my side, shoving my leg up to my chest and hooking his arm under my knee to keep it there. \n\n\"Yain't been fucked either, have ya?\" he asked, his face in mine.\n\n\"No?\" I asked, feeling like I was dropping into a hole and falling away.\n\n\"You can scream if ya want,\" he offered, then pressed his thick cock against my slit.\n\nI whimpered as he tried to push in. He pulled back and spit on me and I shuddered in revulsion. He rubbed the head of his cock in the spit, then tried to shove into me again. He gained entrance and I screamed as he rammed into me. The pain was sudden and sharp, immediate. \n\n\"Yeah, that's it girl. Scream for me.\"\n\nHe shoved in again and again as I struggled, holding me down. The pain eased and I collapsed, sobbing, then sucked in a breath as what he had done became clear. He had angled me so that his sharply curved cock hit that place inside of me that had sent a jolt of pleasure through me.\n\n\"No?\" I asked again, wanting that feeling to go away. \"No!\" I said more clearly. \"Please?\"\n\nHe laughed as he grunted, thrusting harder. \"You like that, don't you girl? Now you're getting nice and slick for me. You want me to fill that nice little pussy with something hot, don't you? Scream for me some more, girl.\"\n\nAll I could do was cry brokenly and lay there as my body tried to betray me. The fog was thick between my brain and what was happening to me, but the feeling of pleasure was there, intruding. \n\nI opened my eyes to pitch blackness and screams of pleasure echoing from what seemed like far away. I jerked and my stomach heaved. A hand caught me around the waist and half threw me off the bed before I vomited.\n\nA light flared to life, fire, making me shield my eyes as the short man lit a candle. I only vaguely remembered him and what had happened. Though my body was sore enough in places to give me a sharp reminder.\n\n\"Your friends are gettin it good, aren't they?\" he asked with a smirk. \"You done with all that? Theys water in that bucket over there, get your mouth cleaned out then throw that water on that, rinse it down to that hole there.\"\n\nI stayed on my knees, staring at the floor and swaying.\n\n\"You surely cain't handle that poison, can you?\" he asked, getting the water himself. He helped me take a drink and I realized when he tipped the ladle up that I was thirsty. I drank all of it and then a second one as well. \"Not too much girl, you'll sick it all up again. Go on'n lay down then,\" he demanded, tossing the rest of the water on the mess, washing it away.\n\nHe sat down next to me on the bed, looking me over. \"Odette. That some kinda off name?\"\n\n\"Off?\"\n\n\"Far off, like way off. Cross the o'shun.\"\n\n\"No? It's french, but I'm not french, my mom just liked the name,\" I answered, feeling numb, my body aching. What do I call you?\"\n\n\"Hass. Hasslin Olc.\"\n\n\"Are you the leader of this... gang?\"\n\n\"I aint no leader, not of this clan or another. Bayn is high amongst us, but he don't lead our clan. You'll be seein' our clan soon enough, once we are done havin' our fun with ya's. Your friends and you ain't much alike. You don't fit in with them much.\"\n\n\"Are you hurting them?\"\n\nHe laughed. That one's screamin' cause she's likin' it. Again. Rast'll get bored with her quick. He don't much like the whorish ones. He wants the ones he can break. You ready for another go, girl?\"\n\n\"What?\"\n\n\"Ready for me to fuck you again? Fill that pretty little pussy up again? Come here girl,\" he rumbled, pulling me against him as he climbed onto the mattress. \n\n\"No! Please, don't!\" I begged, trying to pull away, trying to find something to grab and use as a weapon.\n\n\"Fuck, girl. You was a lot less twisty earlier. I like this better, keep squirmin'. Fight too hard and I'll put you in them stocks, let the boys at you,\" he said angrily as I swung at him and he caught my wrist.\n\nI went still in terror. \n\n\"S'what I thought. We made them, seen them in one'a them books y'all are always leavin' around. Seen a good use for them right off. You girls from below either love'm or they break you. I think they'd break you, specially if Rast got his hands on you. Come on up here and suck on my cock for me. I like it when you below girls do that.\"\n\n\"I won't do that,\" I said, shaking my head and curling up to hide my head. This couldn't be real! It was a bad trip. Randi had given me drugs. I don't know what kind, but this was all just part of what she gave me. It wasn't real. I just needed to sleep it off.\n\nHe bit my shoulder, making me squeal and jerk in shock. It hadn't hurt, it had just scared me. He did it again, higher up on my neck, biting gently. \"I'ma fill that pussy full 'fore we leave here, girl,\" he rumbled, his lips pressed to my ear. \n\nHe pushed me flat on my belly and kicked my legs apart. I was tense, but I was too afraid to stop him. I didn't want the stocks! Or for him to hit me again. \n\nHe slid his hands down between my legs and shoved a finger into me, shoving in and out several times. I gritted my teeth and balled my hands into fists as tears welled up. \"C'mon girl, get slick for me,\" he commanded. \n\nI let out a sob of despair.\n\nHe smacked my bottom lightly. \"I ain't hurtin ya girl, but I can. None of that fit throwin' or I will give ya to the stocks, I hate that shit. Come on, get yourself slick for me.\"\n\n\"I don't like that!\" I said, shaking. \"That won't work. It just hurts!\"\n\nHe pushed off of me and shoved me over to my stomach. \"Show me.\"\n\n\"W-what?!?\"\n\n\"Show me,\" he demanded, grabbing my hand and putting it down between my legs, then watching carefully.\n\nI squeezed my eyes shut and gritted my teeth again, trying to stop more tears. With a shaking hand, I touched my nub with my fingertips and rolled slightly. \"H-here...but... please. I...\"\n\nHe pushed my hand back and inspected me up close, poking and prodding, rolling his thumb over my clit and watching my face curiously. There was no malice, he was trying to see what affected me and what didn't. He slid his fingers through my slit and grinned, pleased with himself. \"There you go girl, all nice and slick for me now, ain't you? You want me to fill this pussy up now, girl?\"\n\n\"No!\" I hiccoughed miserably. \n\nHe laughed as he rolled me to my stomach again and shoved my legs apart before pulling me up to my hands and knees. \"I like it this way, girl. You best remember that when you go offering me this pussy. You think you won't, but you will. Ten minutes in Rast's hands will have you beggin' to offer me this pussy again. One night in the stocks'll have you crawling on your hands and knees to suck my cock. You behave now and don't make me have to give you over. Say it girl. Say this pussy is mine till I don't want it no more.\"\n\n\"It's yours,\" I sobbed brokenly, hiding my face in my arm.\n\nHe slammed into me, making me cry out in pain, then took my hips and began ramming as hard as he could. He let go of one hip and grabbed a fistfull of my hair, yanking my head back, forcing another scream as I tried to stifle it by clenching my teeth. \n\n\"Come on girl!\" he said, ramming hard. \"Get loud for me!\"\n\nI grabbed at his fist in my hair, trying to loosen his hold, but all I could do was hold onto his wrist with both hands as he pulled me higher. He leaned in and bit down on my shoulder again, harder this time and I screamed. He pulled me hard against him, letting go of my hair and grabbing my breast painfully as he held me against him. \n\n\"You like that girl?\" he asked huskily, shoving his hips upwards.\n\nI did like it. The angle made me gasp and my eyes sprang open in shock. I struggled for something to hold on to, and settled one hand on his wrist, the other I reached back and took a handful of his hair.\n\n\"That's it girl,\" he encouraged. \"Right there? Yeah girl, you like that. Show me how much you like it.\"\n\nI was hardly listening to his words, I was only aware that he was speaking, really. Pleasure was riding through me, every thrust pushing it higher and higher, getting me closer and closer. \n\n\"Say it girl, say what you want,\" he whispered, his mouth on my jaw. He sounded strained. He was close.\n\nThe thought tipped me and I came with a cry of ecstasy as my body locked up. He growled as my pussy clamped down on his cock and he rode me down to the bed as my body went rigid. I bucked and twitched under him as my pussy squeezed him and he came seconds later, his cock exploding inside of me. My scream rose in pitch as he shot into me, filling me.\n\nI collapsed first and he grunted a final time, throbbing inside of me before collapsing on top of me. \n\n\"Girl,\" he whispered, yanking my head back by my hair. He bit my jaw lightly. He forced my head to turn to his and pressed his head to mine, looking at me from an inch away. I felt uncomfortable and stressed as he stared at me so intensely.\n\nHe let me go and stood up suddenly, blowing out the candle. He threw himself down on the mattress and laid his head on my back like I was a pillow. All I could do was lay there and let the tears fall down my face as he cupped my ass and slept. \n\nAn hour later I was finally starting to drift when a noise scraped nearby. I felt a hand close around my mouth and take hold of my arm, lifting me up. Hass was up and the hands released me a split second later. I heard a thump and a grunt. A match was lit and the candle and I saw Bayn push up off the cave wall across the room as Hass turned from the candle.\n\n\"It's my turn with her,\" Bayn said angrily, wiping blood off of his mouth.\n\n\"I'm not done with her, you don't get her until I release her,\" Hass growled. \"Touch her again before I give her to you and I will break your neck!\"\n\nBayn glowered, his eyes falling to me. He looked me over, then looked back to Hass. \"I will taste her before we leave.\"\n\n\"The girl is mine, if you want her, challenge me,\" Hasslin said, stepping up to the much taller man.\n\nBayn grimaced and turned and left. I stared at Hasslin, wide eyed. That large guy was backing down for Hasslin? Who was maybe 5'6\"? I didn't understand it. ",
        "\"Thanks,\" I whispered as he threw himself back to the mattress.\n\n\"Go t'sleep,\" he mumbled, laying on my belly and cupping my breast in his hand this time.\n\nI woke to more screams, jerking awake with a whimper, shivering from the cold.\n\n\"Fucksakes girl,\" Hass grumped, sitting up. He went to where the cave narrowed and yelled. \"Devitt, bring back some water! Bayn, we are leaving back to home in half hour!\n\nHe laid back on the mattress, throwing himself down with his hand behind his head like he was waiting. I scooted back and hugged my knees, still shivering.\n\nA man came in, leering at me as he poured water from the bucket he was carrying to the bucket with the ladle that was already in here. Bayn stormed in right behind the man, fastening his pants, his face red.\n\nI noticed that all of the men but Hass had long beards. All of them. Why did Hass shave?\n\n\"You don't decide when we leave! We are not done with the girls and I will taste that one before we leave!\" Bayn yelled.\n\n\"I am leaving in half hour. Come or don't, but Draoidh Lukel will wonder if you aren't close behind.\"\n\n\"I will taste the girl!\"\n\n\"You'll taste your own blood if you try,\" Hass said calmly, still laying there. \"More of it,\" he added, smirking. \"Girl, go bring me a drink,\" he demanded.\n\nShaking and terrified of Bayn getting his hands on me, I hurried to bring Hass a ladle of water. He sat up on one elbow to drink it, continuing to smirk at Bayn as he did. I didn't dare look at Bayn as I knelt waiting for Hass to finish. He handed me the mostly finished ladle and I stood to return it.\n\n\"Get yourself a drink, girl. We have a long walk,\" he said, laying back again.\n\nI kept my back to both men as I drank thirstily. My head was throbbing and I was parched. Whatever it was that Randi gave me, I was hoping it was finally out of my system.\n\nWhen I turned, Bayn was gone and Hass was up and getting dressed. \"May I have my clothes?\" I asked softly.\n\nHe snorted. \"Here, girls don't wear pants. Skirts or nothin'.\"\n\n\"Are there clothes for us?\" I asked, a sick feeling rising.\n\n\"Naw girl, not till we get you home. Why you actin like you are so cold?\"\n\n\"I am cold. I'm not from here, it doesn't get this cold where I am from.\"\n\n\"This ain't hardly nothin'. Fine, here,\" he said, throwing me his long sleeved button down, leaving him in nothing but a black tank top. \n\nI pulled it on gratefully. \"Thanks.\" It had no buttons, but I didn't care as I clutched it closed. It went to my knees and covered me.\n\n\"Have a bit of a walk, girl. Get another drink and we will go. Bring me another too.\"\n\nI knew he had demanded the drink just to make me bring it to him again. He wanted to see me fetching for him. I didn't object, I just hurried, eager to be gone from here.\n\nHe took my wrist when he finished and started pulling me back through the cave. All of the men, including Bayn, were in the front cavern where the stocks were and all of the girls were still locked into the stocks. Even Randi. \n\nBayn sneered at me and the shirt I had covering me. \"We ain't ready,\" Bayn said, crossing his arms. All of the other men but one were standing together. The one Hass had called Rast was in front of Randi, fitting a ball gag in her mouth. The other girls were sniffling and whimpering quietly like they were afraid to make a noise.\n\n\"I am,\" Hass said. \"Y'all can catch up. You gon' stop me, Bayn?\" Hass asked dangerously.\n\n\"You just gon' walk through all us?\" Bayn asked, smirking again.\n\n\"I am. Less any of you think to stop me. I see that knife Joss. You think to try and use it on me, step over,\" Hass said, moving me behind him and pushing back slightly. I took a step back, but I feared getting too far from him.\n\nOne of the larger men stepped out from the group, a large knife in his hand from the sheath on his belt. It was at least 18\" long and I gaped, fear gripping my belly. They were going to kill Hass and put me on those stocks after Bayn was done with me. I held the shirt closed in a white knuckled grip, horrified as the large man eased closer. He actually looked scared himself.\n\nHass lunged suddenly, ducking under the clumsy, swinging arc the man made with the knife, then grabbing the man's wrist from behind as he twisted. He spun again, still holding the man's wrist and there was an audible snap as the man jerked back and roared in pain, but Hass used the man's momentum to vault himself into a flip, landed on the man's shoulders on his knees, wrenched the knife from the man's useless arm and viciously sliced his throat open. He lept free and landed on his feet as the man went down, spinning to the others with the long knife in his hand.\n\nThey parted, quickly.\n\n\"Girl,\" Hass snapped. I hurried to him, even though I was terrified and kept my head down as he led me through the men and out of the cave. After we were well clear, he threw the knife into the dirt, the point sticking in several inches and vibrating as he kept going. I looked back at it, wishing I had the courage to try and grab it. Not after what I just saw though. No wonder the others were so afraid of this man. He was small, but he was ridiculously fast and agile and so much stronger than he looked. \n\nI glanced at him and quickly looked back down when I stepped on a stick, hurting the bottom of my foot. He had blood arced across one cheek and he looked pissed.\n\nA commotion behind us made him stop and turn. It was the young man he had called Devitt. \"Hass!\" he called. \"They are coming. They said they were all comin, just hold on. Yeah?\"\n\n\"Go on then, Dev,\" Hass said, pulling me to sit next to him on the ground. The boy ran back the way he had come. \n\nI glanced at Hass as we sat there waiting. He was leaned back, looking up at the treetops, his look contemplative. Not sorry he had just killed a man. With ease. He had done it before, he would have to do it again. It was disconcerting, the way it was a matter of course for him.\n\nI glanced again, looking at him and he turned to me when I did. His look said he was waiting for me to ask a question. Instead I looked at him. His big brown eyes, heavily lashed almost made him look feminine. That couldn't have helped with his short man's complex. I looked at his full lips, his jaw. There was no stubble. No days worth of growth. He didn't have a beard because he didn't grow facial hair. I looked at his light brown hair, pulled back, beads and feathers tied into it, and... was that a bird skull?!? \n\nHe was still looking at me, his expression flat. He was expecting me to say something, but I didn't know what. Maybe a comment on how pretty he was. He probably heard that a lot too. A pretty little boy. No wonder he knew how to fight. \n\n\"How old are you?\" I finally asked, because he was expecting a question.\n\nHe shrugged. \"Fourteen since my first kill. Twenty three as y'all figure it.\"\n\n\"You were nine the first time you killed someone?\" I asked, horrified.\n\nHe looked away. \"He shouldn't'a done what he did. He deserved it, usin' a boy that way.\"\n\nI went cold. \"Like you use girls now?\" I asked boldly, angrily.\n\nHe turned back to me, looking amused. \"You're past age and you're a girl. We take what we want and send you on up. Let the old clans have you.\"\n\n\"So you aren't keeping us? You are the ones who take girls and what? Why send them up the mountain?\"\n\n\"Fresh blood. No mixin. More little'n's. We don't keep the girls we take, or the boys.\"\n\n\"You take boys after what happened to you?\" I asked incredulously.\n\nHe gave me a long suffering look. \"We don't use the boys, just send them up. Let the girls have'm.\"\n\n\"What if they run? Or escape?\"\n\n\"Then the mount'n takes'm. They git caught, we skin their feet. They don't try again. They rarely do, the clans take care of'm. Keep'm happy. It's a good life. You best not go try'n it, runnin'. I'm faster, and I won't have any use for you no more. Why don't you come over here and suck my cock while we wait?\"\n\nI felt my face burning and I looked away, hugging my knees again.\n\nHe snorted a laugh. \"You like what you seen, lookin at me. Come on over here,\" he said, pulling me closer by my arm. He lifted his kilt and laid back, pushing my face down to his limp cock. \"Go on.\"\n\nShaking, I leaned closer and touched my tongue to it, trying not to vomit. He tasted like his own cum, my juices and salty sweat. \n\n\"Get at it girl, fore they catch up.\" He pushed my head closer, forcing my lips against his cock. It was thickening now, getting hard. \n\nI moved my hand up and took hold of it gingerly, tears in my eyes. I took a shuddering breath, then forced myself to take it in my mouth. It got hard fast then, rising to full attention and filling my mouth, forcing it open painfully. I held it firmly in one hand, then moved my other hand to put it on top of the other. I stroked him with my hands, just putting my mouth over the top. He pushed my head down, forcing my mouth further down his thick cock until I gagged at the size. He pulled my head back up by my hair, then back down again. His fistful of my hair guided me, forcing me to move faster and faster. \n\n\"That's it girl, love how you below girls use your mouths. Keep goin' girl. Finish me off good.\" He went quiet, ramming my head down as I sobbed around his cock. Even as horrified as I was, there was a small thrill in it. I had never done this before and it was kind of amazing to have this power. And if he was happy, he would keep me safe.\n\nIt surprised me and shocked me when he squirted into my mouth, even as he shoved me down and held me there, forcing me to swallow his cum or choke. After several seconds, I struggled to free myself, unable to breathe and he let me go. I spit the thick cum out, feeling sick.\n\n\"That was good, girl. That's how I want it done,\" he said, flipping his kilt back down. I seen boys doin that t' girls too. You like that?\"\n\n\"No! I've never... I have never wanted that.\"\n\n\"I ain't done it. Not yet, but I aim t' try. Make you go all wild on me again.\"\n\nA tiny thrill shot through me and my body responded. I felt a pull between my legs and my pussy went hot, getting wet immediately.\n\nI was saved from more of that talk when we heard the clamor of the others coming. He stood and I stood next to him, partially behind him as the others caught up. He stood, letting them all pass us and I swallowed hard when I saw the other girls. They weren't given any clothes and they had ropes around their necks, all tied together with just a few feet of rope between them. Their hands were tied also, and Randi and Haley both had gags in. They all looked shell shocked and numb as they stumbled along. \n\nBayn was last and he gave me a hooded look full of promises. Without thinking, I moved closer to Hass and took hold of his hand. He gave me a frown as he fell in behind Bayn, but didn't let go as he pulled me along. \n\nI stumbled and scraped my bare feet, stepping on rocks and limbs and other sharp things. Finally, Hass turned to me angrily at how I was slowing him down and threw me over his shoulder. \n\nAnother hour into the walk, Bayn called a halt for rest and the other girls were pushed to their hands and knees and used, all of them with a man on both ends. Hass sat down against a tree, pulling me onto his lap as he laid back and watched. I hid my face, glad it wasn't me in their place and ashamed that I wasn't with them. Why had I gotten lucky enough to avoid their fate?\n\n\"You ain't usin' her,\" Bayn spat. \"Give her to me.\"\n\n\"Aint havin' this talk again, Bayn. You ain't touchin' her till I am done with her. Go on.\"\n\nI clutched Hass tighter, hiding my face in his shoulder. \n\n\"Ought to give you to him,\" he said, his voice low. \"Ain't like you mean nothin' to me, I just like seein' him pissed off. He'll lose his shit when I give you to Rast first,\" he chuckled.\n\nI froze, terrified. He was going to give me to Rast? And then Bayn?\n\nHe chuckled, patting my hip. \"You just keep me happy, girl.\"\n\nI relaxed slightly. Was he teasing me? Was that how he joked? Or was it a threat? Keep him happy or else?\n\nWhen everyone was ready to move on, he lifted me up like a child, holding me like you would a child that had fallen asleep. I didn't complain, it was better than hanging over his shoulder and definitely better than walking. I let my head fall to his shoulder, my arms around his neck, hoping he would take it for affection, or keeping him happy. However he wanted to see it.\n\nAnother hour and we emerged from the steep trail through the woods to a large cliff that held several shacks, lean-to's, cabins and a few tents. Hass dropped my feet, letting me stand as they led us into the little village. People stopped and stared as they brought us to a pavilion where a young man in black robes was sitting with a tall staff. They all knelt to him and Hass pulled me down to kneel as well, but I didn't bow my head. I stared at the man and he stared at me. \n\nIt wasn't like the other men were looking at me, not hungry or sneering. He looked curious and a little confused. \n\n\"Draoidh Lukel,\" Bayn said standing. \"We have brought four new bloods.\"\n\n\"Three,\" Hass corrected, his voice hard. \n\n\"You bondin' her, Hass?\" Bayn asked derisively.\n\n\"No. Aint done with her yet,\" he answered as a woman ran up.\n\nThe woman was in all white and she was pale with white hair and pink eyes. A true albino. She hugged Bayn and he touched her shoulder fondly before she stepped back.\n\n\"When I finish with her,\" Hass continued, \"I'll present her myself as an offering.\"\n\n\"You'll give her to me first,\" Bayn demanded.\n\nHass only smirked at him before turning back to the man in the black robes. The man who was still staring at me.\n\nHe stood, looking over the girls. \"Puca, see to some clothes for these girls. All of them,\" he said, looking at me again. He looked me in the eye and spoke, \"Chan eil thu \u00e0s an seo?\"\n\n\"No, I am from Atlanta,\" I answered softly.\n\nEveryone stopped and went still, looking at me. Even Hass stared at me like I had just sprouted a second head.\n\n\"C\u00f2 an d\u00e0imh a th 'agad?\" the man asked curiously.\n\n\"I don't know my folks,\" I said slowly. \"My Gemma is from Atlanta, she's a Springmeyer. I don't know my dad's last name, only my moms,\" I answered, wondering why everyone was gaping at me. Was I not supposed to speak to the man?\n\n\"Ciamar a tha fios agad air a 'ch\u00e0nan seo?\"\n\nI froze then, considering his words, realizing why everyone was staring. If I could, I would be staring at me too. \"I... I don't. I don't know this language. I... I mean, I study languages, but I don't know what this one is? It sounds gaelic? With latin roots? I've never spoken it before.\"\n\n\"Tha a 'bheinn a' bruidhinn tromhad, tha a 'bhan-dia air do thaghadh,\" he said solemnly.\n\n\"The mountain... speaks? What goddess?\" I asked, feeling like a freak now.\n\nThe man looked to Hass, whose expression had gone muley. \"She will need to be trained, Hasslin Olc.\"\n\n\"You cain't have her till I'm done with her either,\" he said angrily.\n\n\"I don't want her to keep, she needs trained. She may have to go to clan Mor.\"\n\n\"No! She'll stay here. I'll stay until next cycle. Till I have had my fill.\"\n\n\"We will attend Mabon and you will bring her. She needs to be seen by Cailleach Willa.\"\n\nHass took a step forward. \"I ain't leavin her there.\"\n\n\"You won't need to, she needs only be seen and recognized.\" He looked back at me. \"D\u00e8 an t-ainm a th 'ort?\"\n\n\"Odette Springmeyer.\"\n\n\"Odette. Hasslin will bring you back to see me tomorrow morning and we will speak.\"\n\n\"No. I want more'n a day. I want till Mabon, you can train'r after.\"\n\nThe man gave a nod of agreement. \n\nBayn turned to Hass, his look livid. \"You're taking her to Mabon with the Mor clan? Will you still take their queen?\"\n\n\"I will, but you can have her. I ain't done with Odette yet and you won't lay a hand on her till I am.\"\n\nBayn growled and spun away, leaving. The other men left as well, heading off to cabins or tents. \n\nI glanced at Hass, but he looked angrily after Bayn. I eased away and stepped towards my friends. I didn't care what anyone thought, I began untying their hands and taking the gags off. No one stopped me as I removed every rope, then we all hugged, ending up in a hugging, sobbing mass on the ground. \n\nThe albino girl came back, her arms full of clothes. We helped each other stand as the girl held up dresses to each of us. She gave me the smallest, though it was still too large and I put the long sleeved shirt on over it, hoping Hass wouldn't mind. \n\nIf he did, he said nothing as he took hold of my arm. \"Say your byes, they're headed up to clan Ard. Yain't gonna see'm again.\"\n\n\"Are they going to hurt them?\" I asked fearfully.\n\n\"No, girl. They'll bond'm and they'll have little'n's with em. Treat'm good, like wives and better. You're the only one in for more hurt'n. I ain't waitin' much longer.\"\n\nI spun and hugged the girls and we cried again as we whispered goodbyes. \n\n\"Take care of each other!\" I yelled as Hass pulled me away. He ducked into a tent, pulling me in after him. He shoved me to a pallet and went to a little table that was low to the ground and squatted at it, doing something I couldn't see. \n\nI sat hugging my knees, being quiet as a mouse, hoping he would forget me. It seemed to work as he stood and left without looking at me or speaking to me. There was paper and a pencil out on the table and crude drawings and symbols on two discarded pages.\n\nI wondered if I was allowed to leave, or even stick my head out. I didn't dare try, remembering what he said about skinning feet. \n\nIt seemed like an eternity later, he finally returned and he looked even angrier than he had when he left. He looked down at me, pacing in the small space. \n\n\"Yain't nothin to me,\" he said suddenly. \n\nI flinched.\n\nHe shot forward and grabbed me by the hair and shoved me face down on the pallet. He went to his knees behind me and yanked me up to my hands and knees. \n\n\"Yain't nothin,\" he repeated, jerking my skirts up and piling them on my back, then smacking my backside as hard as he could. I cried out and jerked away, but he caught my hips. \"Yell all you want but if you fight or try and get away, you'll pay double.\"\n\nI tried to hold still, but I was terrified. Something had happened and I had no idea how to fix it!\n\nHe shoved his hand down, touching my clit roughly, rolling over it roughly. \"Get slick for me, girl,\" he demanded.\n\nI let out a small whimper and gripped his blankets. As rough as he was being, it still felt good and I got wet quickly. As soon as he ran his thumb through my slit and felt how wet I was, he stopped trying to excite me and pressed his cock to my slit.\n\n\"You 'member what I said girl,\" he warned. \"Holler all you want, but you fight me and I will end you.\"\n\nI half nodded, more excited than afraid now. He rammed into me roughly and I let out a yelp, but it was as much pleasure as pain. He took several long, deep strokes, slow and easy. I wanted faster, but I didn't dare move. \n\nHe slid out of me and for a moment I was confused and disappointed, but then he pressed the head of his cock to my asshole. All excitement fled, giving way to terror. I forced myself to stillness, already starting to pant in fear. He pressed his cock harder and harder until he started to spread my anus open and I let out a wail of anguish. It hurt, the pain unbearable, but I focused on staying still.\n\nOnce he got his head in, he took my hips and pushed in with his hips. I screamed, dropping my face down to bite into the blankets to muffle my screams. He began thrusting, yanking my hips back as he shoved forward and all I could do was scream and cry and beg him to stop.\n\nHe grabbed my hair and yanked me up to my knees, his mouth in my ear as he thrust. \"Y'ain't nothin. Say it girl.\"\n\n\"I'm nothing! Please, it hurts!\"\n\n\"Louder girl. Scream it.\"",
        "\"I'm nothing!\" I screamed and he let me go. I dropped back down and he grabbed my hips again. He began jackhammering into me.\n\nIt lasted forever it seemed like, much longer than he had lasted the other times. All I could do was sob and beg for it to end. \n\nHe finally shoved into me and stayed, throbbing and spending himself, then dropped onto me, forcing me to my belly on the pallet as he laid on top of me. He took hold of my hair again and yanked my head back. \"What are you?\"\n\n\"Nothing,\" I answered, shaking. \n\n\"What are you?\" he yelled.\n\n\"Nothing!\" I sobbed loudly.\n\nHe let me go again and pulled out roughly before standing up.\n\n\"Get up, girl.\" I staggered to my feet, but hunched in on myself in pain. He took my arm and pulled me outside, then off to the right. He shoved me towards what looked like outhouses. \"Hurry up and get cleaned up,\" he demanded. \n\nWhen I came out, he was further away, talking to Rast. I considered running, but Rast looked right at me just as I considered it. Hass followed his gaze and motioned me over. I hurried to him, half hiding from Rast as he curled his lip. \n\nHass took my arm and dragged me to a small lean-to where a man was setting things out on a table next to a chair. I stared, horrified at the paper with the symbol Hass had drawn on it and the rudimentary tattoo things the man was setting up.\n\n\"No!\" I begged, freezing up. \n\nHass picked me up and dropped me into the seat with force. \"Go on and fight!\" he said angrily. \"See what it gets ya! We got stocks here too, girl!\"\n\nI was shaking violently when the man nodded at Hass. Hass untied the tie on the front of my dress and opened it, ripping it several inches as he did. He exposed my entire left breast, then moved behind me, holding my shoulders.\n\nThe man ran his thumb over a spot above my breast, half on the top of it. \"'Ere?\"\n\n\"Lower, here,\" Hass said, groping my breast and running his thumb along the inner top, lower than the man had touched.\n\nThe man nodded, then picked up the old tattoo needle and flipped it on. No cleaning, no sterilizing, nothing. Hass let my breast relax and hang, but he didn't let it go as he leaned over me, watching.\n\nThe man jammed the needle in and I screamed, turning to hide my face in Hass's arm. \"Please! Please! I will be good, I will make you happy, I swear it! I will never run or fight, oh god PLEASE!\" I cried hysterically.\n\n\"Ain't about that, girl,\" he said, sounding almost like he was trying to soothe me.\n\n\"She needs ta stop talkin and ease her breathin,\" the man said, his meaty hand groping my breast painfully.\n\n\"Be still,\" Hass said gently in my ear.\n\n\"This is forever! Please!\"\n\n\"Shut your mouth girl,\" the man demanded, squeezing painfully, making me squeal and grip Hass's arm tighter.\n\n\"Hurt her again and I will slit your throat with that fucking machine,\" Hass hissed.\n\nThe man relaxed his hold on my breast, just putting his fingers where he needed to work. \"Hold'r still,\" he said grumpily. He jammed the needle in again and Hass shoved his leather belt in my mouth. I bit down and pressed my face to his arm, clutching him. \n\nAn hour later I was curled up on the pallet and he was sitting across the tent, looking at me. I was half in shock, my mind numb. I had a tattoo of a symbol that looked like a greater than and less than mark almost touching points Within them were smaller symbols pointing the other way. Two large ones in, and within those, two small ones out. I didn't know or care what it meant.\n\nHe stood up and left, then came back in a few minutes with a bowl. He set it on the low table. \"Come eat,\" he demanded.\n\nI wasn't even remotely hungry, but I moved over next to him and ate the stew mechanically. \n\n\"Don't go getting' wrong in your head,\" he demanded.\n\nI looked at him. Was he serious? \"I won't\" I said softly, pushing the bowl back. \n\n\"C'mon,\" he said, getting up and pulling me up too. He led me away from the little village, people staring after us. He took me to a small trickling stream, then followed it up a ways until there was a short waterfall. He pulled his clothes off, pausing to give me a hard look. I started pulling my own clothes off hastily. \n\nThe water was freezing, but I didn't care. I felt clean, finally. He turned to me in the water and looked down at the tattoo. His eyes raised to mine as he cupped my breast and ran his thumb just under the tattoo. \n\n\"At's me,\" he said, pointing his chin at the ink.\n\n\"It means I am yours?\" I asked softly, shivering.\n\n\"Means I found ya anyway. Any man who has ya after will know I had ya first.\"\n\n\"I see,\" I managed, stepping out from under the waterfall and squeezing water from my hair. \"That's your name? Hasslin?\"\n\n\"Some. What it means. I ain't bond'n ya, girl.\"\n\n\"Is that like marrying?\" I asked, pulling my clothes back on.\n\n\"What y'all from below call it.\"\n\n\"Ok.\"\n\n\"I aim to use ya hard and send ya off.\"\n\n\"Ok,\" I answered again, sitting down and hugging my knees, still shivering.\n\nHe stood in the water like it wasn't bothering him, looking at the rocks as he let the water trickle down his back. \n\n\"I take you to Mor's Mabon and Willa'll want ya there.\"\n\n\"Who is Willa?\"\n\n\"Cailleach.\"\n\n\"Witch? What makes her a witch?\"\n\n\"Queer as fuck how you talk, girl. Knowin' the old words like you was a cailleach yourself. Maybe you are. I don't care. She aint keepin ya. She tries, you say no. You ain't nothin. Not cailleach, not nothin to me. Just a girl I get to use till I am tired of ya. Say it.\"\n\n\"I'm nothing. Just your plaything.\"\n\n\"Plaything. Yeah. That's what you are. You know your way back to my place?\"\n\n\"I think so.\"\n\n\"Go on.\"\n\nI got up, but hesitated. \"If I go back without you and Bayn see's me...\"\n\nHe made an angry noise and shoved back off the rock, moving towards me. I flinched, expecting a blow, but he just yanked up his clothes and started back towards the village. I followed, astonished that he had no issues walking into the village without a stitch on. I also watched his tight, round ass as he walked and the way the sides dimpled with every step. \n\nHe pushed me ahead of him into the tent, then followed me. \n\nI didn't know why I did it, wanting to stay on his good side I supposed, but I pulled my clothes off and got on the pallet on my hands and knees. I had my backside pointed at him and I stared at the floor, half afraid he was going to punish me or worse somehow, ignore me. \n\nHe did neither and he knelt behind me with his hands on my hips. He slid his hand up my back to my hair and pulled me up so I was pressed against him. \"You wantin' ta go wild for me girl?\" he asked, his voice low.\n\nI assumed that was how he referred to me having an orgasm. \"If you want me to? If you do with me?\"\n\nHe grabbed a fistfull of hair and yanked me up, turning my face to look at his. He was so close, I assumed he was about to kiss me, but he didn't. He just stared at me like he was trying to read my face. Like he was trying to look into my soul. I shifted uncomfortably, wondering what he wanted. \n\nHe let me go and pushed me to the pallet, then turned me to my back. He pulled my legs apart and moved between them, then looked down at my face as he ran two fingers through my slit. He looked amused now and a little bit pleased. He rolled his thumb over my clit, watching me carefully as I began squirming and writhing, my need rising.\n\nHis cock was hard and ready and my eyes dropped to it. I knew my face must have betrayed me because he gave me a low chuckle.\n\n\"Come on then, girl,\" he said with a grin, grabbing my legs and pulling me closer. He leaned over me so that he was face to face, giving me that sultry smirk. Now he was going to kiss me, I was sure of it. He looked down at me, his eyes holding mine, but that was all. No kiss. No way to hide my face or my fear or discomfort. \n\nHe nudged my legs further apart after his smirk faded. He looked... offended, or hurt. He grabbed my leg, pulling it high to wrap around him and pressed his cock to my slit. \n\n\"This what you want, girl?\" he asked, looking down at me, the humor gone from his voice. \n\nI had no idea what to say or do to make him happy again! Did he want me to kiss him?\n\n\"Yes?\" I whispered, unsure of myself.\n\nHe looked down at me, cocking his head. For a moment, I thought he was going to pull away, get up, yell at me. Instead he looked away and pushed into me with a low growl. I gasped, my hands flying to his arms as his curved cock immediately hit that spot inside of me that sent little thrills through me. I felt so full and his cock felt amazing sliding into me again and again.\n\n\"Go wild for me, girl,\" he demanded in a whisper.\n\n\"Yes... I... I... oh, please yes!!\" I begged, my hand going to his hip, urging him to move faster. \n\nHe obliged, thrusting hard and fast, watching my face as I tried to hide against his wrist, gripping his wrist in one hand, his hip in the other. The orgasm hit me like a tidal wave, just as I was beginning to think it wasn't going to happen, he was watching me too closely and I was too self conscious. I cried out and my back arched, higher and higher, my toes curling as I went taut all over and my pussy walls clenched his cock hard enough that he grit his teeth and went still inside of me. My body twitched and I could only moan and let it take me along for the ride. \n\nI finally came down, breathing heavily and so incredibly satisfied that all I wanted to do was sleep. He started thrusting again, more slowly now and when I opened my eyes he was watching me still. I managed a weak smile and a contented sigh as he stared down at me, so incredibly intense. It made me uncomfortable, not knowing what he wanted, not being able to read him. I closed my eyes and pressed my eyes to his wrist. Finally, he lowered himself and I felt his mouth on my neck and jaw.\n\n\"Mmmm,\" I encouraged, turning to nuzzle into him. He bit my jaw gently, then my neck, dragging his teeth and pulling, sucking. It felt good, even if it was foreign. He did it over and over again, biting, sometimes hard, usually soft, all up and down my neck, shoulder, jaw and ear. Finally he picked up his pace and I knew he was getting close. I turned to him and pulled his face to mine, pulling him in for a kiss.\n\nHe was awkward, his lips touching mine, but not really kissing me. He pulled back and turned his head slightly. \"I seen you below folk do that, smash your lips against each others all queer like.\"\n\n\"You don't kiss?\" I asked, starting to lose myself again.\n\n\"Naw. Why do you do it?\"\n\n\"To show.... Oooh... to show fondness and...hst! Ohhh! If... if we like each other! Oh! Please, yes, faster Hass! Harder, please!\"\n\n\"You going wild for me again, girl?\" he asked, sounding excited.\n\nI came again, my legs wrapped around him as I bucked up against him and wailed out in pleasure. Almost as soon as my pussy stopped clenching and twitching, he came inside of me with a low growl, his hand going to my throat as he pressed his body against mine. I feared for a moment that he meant to choke me, but he just held his fingers there as he trembled above me.\n\nHe relaxed his body, leaning slightly to the side, then pressed his jaw to my temple. He laid there, half crushing me, holding my throat as his cock went soft inside of me. I didn't mind it so much, my body was content and languorous and I felt pleasantly sleepy. I slid my trapped arm up through his shoulder and neck and held his head close to me, toying with his hair happily. It was fine and silky soft. Another almost feminine thing about him. No wonder he kept it shorter than almost everyone else did. He made an appreciative noise and I knew he liked me playing with his hair.\n\nI jerked awake to darkness and being crushed. Hass came awake, tense all over, his hands tightening around me as he lifted his head on alert. He made a noise of annoyance and started to snuggle back where he had been.\n\n\"You are crushing me,\" I whispered, pushing at him gently. \"And my arm is asleep and I am freezing on my whole left side where I don't have a human blanket.\"\n\nHe made another annoyed noise as he rolled off of me. I climbed into the blankets and he got in next to me, pulling me close and throwing his arm and leg over me as he buried his face in my hair again.\n\nWe were both woken in the morning by yelling outside. \"Hass! You up? Hass!\"\n\nHass lifted his head, looking angry and still half asleep. \"Fuck off Dev! What's so all fire important?\"\n\n\"Draoidh Lukel wants to see the girl.\"\n\n\"Tell him no. Not till after Mabon!\"\n\n\"He says it ain't about that! Clan Ard is passin' through and Mika wants to see the girl.\"\n\n\"Fuck,\" Hass hissed, pushing himself up angrily. \"Go on then!\" he yelled. Hass tossed me my dress as he began dressing.\n\nI pulled it close, watching him warily. \"We can't have five more minutes?\" I asked longingly, laying back on the pillow. \"You were so warm and comfortable... and it was nice. Your arms feel good. You are just the right size to spoon me properly.\"\n\nHis dark expression had eased, but then went confused. \"Spoon?\"\n\n\"The way we slept, you spooned up against me, like two spoons fitting perfectly together.\"\n\nHis face lit up and he looked amused. \"Spoon. Y'all below folk have a word for ever'thin. I like spoon though.\"\n\n\"I never liked spooning before, but I did last night. You are just right for spooning with. So five more minutes?\"\n\nHe chuckled. \"Get dressed, girl. Mika is here ta see ya. Spoon after.\"\n\nI got dressed, half smiling, glad I was able to ease his mood. \n\nMika was an older woman, old enough to be my mother, but not grandmother. She was also stern looking and her look said that I was surely about to waste her time. She watched me approach with Hass and without preamble, she said, \"C\u00f2 a tha thu airson a thighinn an seo agus tagradh a dh\u00e8anamh gus e\u00f2las fhaighinn oirnn?\"\n\n\"I... I don't claim to know anyone, or your ways. I am no one. I am a girl from Atlanta. I don't know how or why I understand you.\"\n\n\"Gidheadh tha thu a 'bruidhinn an t-seann ch\u00e0nan.\"\n\n\"I understand it, I don't know that I speak it.\"\n\n\"D\u00e8 an t-ainm a th 'ort?\"\n\n\"Odette Springmeyer. And before you ask, I didn't know my folks, just my moms mom, my Gemma.\"\n\n\"A bheil Hasslin an d\u00f9il do cheangal?\"\n\nHasslin tensed, hearing his name and I squeezed his hand slightly. \"No, he does not intend to bond me. When he is done with me, he...\"\n\nI trailed off as she shot forward and yanked my dress open, exposing the tattoo. \"He gave you his mark,\" she said, looking at Hasslin now.\n\nI answered quickly. \"As one would brand a cow or a pig, so everyone would know who claimed me first. Who had me first. I am nothing to him.\"\n\nShe looked down at his hand holding mine and he immediately let me go with an angry shove. \"If you have no interest in the girl,\" she said to Hass, \"send her with me to Mabon, let me test her with Willa.\"\n\n\"I will bring her to Mabon when I am done using her,\" he said angrily. \"I am done with this!\" He grabbed my wrist and yanked me along behind him.\n\n\"Hasslin Olc!\" the woman called sharply. \"You would disobey the will of a cailleach of another clan?\"\n\nHass kept walking as if she hadn't spoken.\n\n\"Coinnichidh sinn a-rithist, nighean,\" she called to me.\n\nI sighed, looking over my shoulder at her. Yes, I was sure we would meet again. Unfortunately. \n\nHe dragged me into his tent and swung my arm towards the pallet as he let go, making me stumble and roll. I sat up, righting myself. \"I guess this means no spooning?\" I asked as he paced.\n\nHe stopped and looked at me, his mouth twitching. More calmly, he sat down in front of me, facing me with his legs crossed. It was distracting considering he wore nothing under his kilt and his cock was on full display. \n\nI tried hard to look him in the eye and my cheeks suffused with red from the amount of effort it took. \n\n\"Listen to me, girl. Mabon is coming. You will meet more draoidh and cailleach. You must ignore them if they speak to you in the old tongue, pretend you do not hear them. If you do not, they will try an' take you.\"\n\nI looked up at him, almost sadly. \"Take me from you? I thought you did not care?\"\n\nHis face went red. \"I don't! I don't. But I will not let the Mor's have you. No. Rast wants you. I will give you to him!\"\n\n\"Rast will hurt me and you know it. So why shouldn't I save myself and speak old tongue when they ask? If it is for another reason though... I mean, if you just needed someone just the right size to spoon with. Someone to go wild with. Something like that, that would be different. I would be more willing to feign ignorance if I knew I was coming back here,\" I said, gesturing to the pallett and him.\n\nIt wasn't true. I didn't want to stay with him at all, I just wanted him happy and not angry.\n\nHe looked me over guardedly. \"You ain't nothin to me,\" he said, leaning back on one elbow.\n\n\"I know!\" I said breathlessly, my eyes dropping. \"But I... I am happy here. I...\"\n\nWithout letting myself think about it, I surged forward and shoved his kilt up his thighs, immediately taking his cock in my mouth. His hands gripped my hair, but eased their grip immediately as I sucked his soft cock to hardness. He laid back with a soft moan and used his hands to guide me. He came quickly, surprising me. I moved up to lay next to him, turning so he could spoon me. He turned and put his arm over me, then bit my shoulder. Was that how they kissed? The biting?\n\nWe laid there until we both fell asleep again. I woke as he was getting up, leaving without a word. I got up and stepped out, meaning to call after him since I needed to use the restroom, but he was already gone. I went to the place he had shown me and he met me on my way back to his tent. He had two plates and he looked a little guarded.\n\n\"Hey,\" I said softly, taking one of the plates from him and going to his tent.\n\nHe followed me in and we sat at the little table. \"Don't leave unless I say you can,\" he said as he sat down.\n\n\"Sorry, I didn't know where you went or how long you would be gone and I needed the ladies room. I was coming right back.\"\n\nHe rolled a shoulder and looked at me as if he wanted to say something. I was pretty sure I knew what the subject was, at least. \n\nHe finally spoke. \"I watch the border to the below. Me and some other boys. We make sure no one fucks with us, our people. Tries to come up.\"\n\n\"I see. And that means if you kept me that I would be alone a lot?\"\n\nHe leaned back on his elbow, giving me a scowl. \"Means I couldn't no more. I'd have to stay around here. I ain't meant to stay in one place. Or with one girl. I don't want that.\"\n\n\"I understand. You could always let me go. Back down below.\"\n\nHe snorted. \"Naw. Once the mountain has you, there ain't no goin' back. Side's, you speak to Bhienn. Bhienn speaks through you. You cain't leave.\"\n\n\"So I have to stay, but you do not want me to speak to these old ones, the witches and the druids. What do you want me to do? Stay here and wait around for you? Like the girl does for Bayn?\"\n\n\"Puca? She is different. She is... more like one of us. If you were in the stocks... she would come to you and use you as a man does. Even Rast does not cause so much fear. She lives as a man might here, but takes Bayn to her bed when he comes back.\"\n\n\"I see. So what would you have me do?\"\n\nHe sat and thought for a moment, then turned away and got up and left.\n\nIt was late before he returned and I was in bed, almost asleep. As soon as he got close, I knew he was drunk and I went stiff as he pawed at me. He groped and bit too hard, rolling me and biting into my breast roughly. He yanked my dress off clumsily and jerked angrily when my arm caught in it. He tossed it away and backhanded me hard enough to make me see spots.\n\n\"Never fight me!\" he roared.\n\n\"I didn't! I swear! It just got caught...\"",
        "He backhanded me again, the same cheek and I felt it split open, blood seeping down to my ear. My head spun.\n\n\"Don't,\" he slurred, bending down and biting my breast again until I screamed. He bit me several times all over my breasts, drawing more screams, then began biting along my ribs. I was sobbing hysterically, begging him to stop, but I don't think he even heard me. I was too terrified to try and get away from him, he might kill me if I did given the state he was in.\n\nHe shoved my legs wide and bit one of my pussy lips. I screamed and jerked, but he didn't bite nearly as hard as he had been. He bit and nibbled all over my pussy lips until my body reacted and I was getting wet. When he closed his teeth over my clit, I tensed up, ready for more pain. Instead he closed his lips over it and sucked it up, making me gasp and twitch.\n\nHe shoved two fingers into my pussy, his motions clumsy, but it didn't matter. It still felt amazing. I buried my fingers in his hair as he sucked and licked my clit and fucked me with his fingers. I came quickly after the way he had worked me up, my legs locking around his head and my fists gripping his hair as I bucked against his face. As soon as my body stopped and I let out a shuddering whimper, he pushed up and yanked me to sit up. He laid on his back and pulled me on top of him, yanking my legs to straddle him. \n\n\"Ride me girl, all slick like you are,\" he purred, his hands on my hips. He was hard as a rock, which surprised me. I had heard most men couldn't get hard if they were that drunk. Still, I did not hesitate as I raised up and took him into me, my body still wanting more. I rode him, my hands on his. I was slow at first, relishing the feeling of his cock hitting that spot inside of me as my clit bounced off of him. I was drawing it out, building myself up, but he wasn't having it. \"Faster, girl,\" he panted, his hands gripping my hips tightly.\n\nHe was close, so I let myself go. I rode him with complete abandon, letting the bliss wash over me and skyrocket. He jerked my hips down hard and held me tight, then I felt him throb and squirt his hot cum deep inside of me. I let out a wail as it sent me over the edge, my pussy clenching around his cock again and again as I tried to ride it out and not raise off of him completely as my body locked up. He squirted again and again and I squeezed his cock, milking him.\n\nAs it eased, I sank down, my body half falling onto his. I was blissed out as I lay there, my legs still straddling him, his cock still inside of me. I laid on his chest and let out a sigh as he dragged a blanket over me. His hands on my waist didn't feel drunk at all as he held me.\n\nI woke to aching hips and a twitching, throbbing cock. He was still inside of me and I was still straddling him. It felt odd to feel him get hard inside of me, growing and making me feel so full. I loved that feeling. I let out a small, purring moan as I turned and kissed his chest. His hands slid down my waist to my hips and back up before rolling, staying inside of me.\n\n\"Time is it?\" he asked sleepily, pushing his hips into me, my already full pussy feeling him pressing into my wall. \n\n\"Time for you to fuck me,\" I whispered, pulling him with my legs around his waist.\n\n\"Mmm, girl. Go on'n talk like that,\" he rumbled, pulling back and thrusting hard enough to make me gasp. \n\n\"Yes, Hass, harder! Faster! Fuck me, please!\"\n\nHe rammed into me, lifting up enough to pound into me as I cried out in pleasure bordering on pain. I came around him in under two minutes and he shoved into me, growling as I squeezed his cock. I came again less than twenty minutes later and he laughed, a low satisfied sound as he pushed in as hard as he could. I was starting to get close to a third time when he finally rammed into me and held himself there, exploding inside of me with a roar.\n\n\"Oh!\" I panted, loving the feel of his cock pulsing, forcing my pussy wider with each throbbing shot. I slid my arms around his neck, holding him close against me and trying to catch my breath.\n\nI heard him sigh softly, then bite my jaw before easing out of me and laying down next to me. He turned me and pulled me against him to spoon me. I smiled as I slid my fingers through his, amused that he liked spooning so much.\n\nWe woke to more yelling in the morning.\n\n\"Hass! Come on! We start now or we'll end up havin' to travel in the night to be on time!\"\n\nHass grumbled, pulling me more tightly against him. \"Go on, Dev!\" he yelled. \"Pack me up food enough for two!\"\n\nDev left and Hass got up. Pulling his clothes on. \"We got a long walk on us. Get you somethin' to drink. Plenty.\"\n\n\"Can I have some shoes?\" I asked, going to get a drink.\n\n\"Ain't no shoes on the mountain.\"\n\n\"Oh. Umm. What if something bites me? A snake or something?\"\n\n\"Then Bheinn wants you to die. Wear that shirt there too, you...\"\n\nBayn stepped into the tent angrily without announcing himself. \"You are bringing the girl?\" he demanded.\n\n\"Said I was. Go on.\"\n\n\"She ain't bonded and they'll try'n take her! I ain't had my turn with her yet and I intend to make her scream for me.\"\n\nHasslin stood, squaring up to the larger man. \"You won't. Never. If I have to put you in the ground.\"\n\n\"She ain't bonded, she'll be mine to take,\" Bayn hissed. \"You cain't be with her every minute.\"\n\n\"I can put her in the stocks and leave her for a month, and still, if you laid a finger on her, I'd put you in the ground. You. Will. Not Touch. Her. Ever. I'd give her over for Rast to kill fore I let you taste her. Go on!\"\n\nBayn left, furious.\n\nI looked at Hass worriedly. \"Why does he want me so badly?\" I asked.\n\n\"Ain't you, girl. He just wants what I have, what I don't want him to have. Think's it makes him look weak to not be able to take you from me. You ready then? Let's go.\"\n\nI started the walk, walking. Like a normal person. After less than an hour, my feet were sore and cut again and Hass hung back and spun me, pulling up my feet like you would a horse to look at the bottom. He made a noise and sighed, then took a knee. \n\n\"Go on girl, get on,\" he demanded. I rode the next hour piggyback. What no one ever realizes is that an extended amount of time piggyback is not comfortable. Your legs hurt, your arms hurt from holding on and you keep slipping down. After an hour, Hass let me down. He turned me and knelt, then lifted me to sit on his shoulder, one hand holding both of my feet. I gripped his hair to hold one, but that didn't work very long either. He kept not ducking far enough under branches. I was giggling when he swung me down and held me like a child again.\n\n\"I will walk,\" I said softly.\n\n\"Feet ain't tough enough yet. I got you.\"\n\n\"My feet will never toughen up if you don't let me walk.\"\n\n\"After. Hush now.\"\n\nI smiled and laid my head on his chest. The moment my face was out of his sight, the smile disappeared. Would I be able to get away at this festival they were having? Could I disappear? If Lukel and this Mika wanted to train me, would they get me away from Hass. He said he didn't want me, but that was a lie he was telling himself and I knew it. I did not want to have to try and walk on eggshells with his volatile temper, not to mention how he so casually killed. He would kill me in a moment of anger. He might regret it later, but I had no doubt he would do it.\n\nI thought maybe the elders or whatever they were would be my best chance. Would they be better though? Nicer? Could I get away from them? \n\nWould the mountain let me?\n\nThat thought had come unbidden, but I knew the answer. No. The mountain was not going to let me go. I was starting to feel like all of this had happened with my Gemma and my uncle just to get me here. Not necessarily with Hass, but probably with the elders. To train. To do whatever it was they were planning on teaching me. Maybe more, but I wasn't sure yet. What I was sure of was that I had to get away from Hass. \n\nHe was beautiful and he could be nice sometimes, but it was the other times that scared me. I definitely liked how he made me feel in bed, but I also knew that it didn't matter if I didn't have a choice in the matter. It was play his game, pretend to want him, or get hurt. So I gave myself to it. \n\nWhen evening passed, we stopped to eat. I sat with Hass, avoiding leering stares from Rast and a glare from Bayn. I noticed then that the albino girl that Hass had called Puca was with him. She also glared menacingly. When we stood, Bayn crossed the path. \"I will carry her for a while,\" he announced loudly. \"So you won't be tired for the fight.\"\n\n\"Hell you will. Sh'aint nothin'. I have her,\" Hass said, picking me up and throwing me over his shoulder.\n\n\"You promised us you would win us the Mor girl. Seems to me you are more worried about this little distraction of yours. That so, Hasslin?\"\n\n\"You can open your beul if I lose and not before, Bayn. Go on.\"\n\nBayn stood his ground, crossing his arms. \"I say you hand her over.\"\n\n\"I can walk!\" I said loudly.\n\nHass landed a hard smack on my bottom, making me squeak. \"Ain't no one touching this girl but me till I say so. Go on or we can have this out right here.\"\n\n\"She worth that to you, Hasslin? Killin your own?\"\n\n\"Ain't about her. It's about you tryna take what ain't yours. Go on. If I put her down we are doin' this.\"\n\n\"I will take the girl,\" Lukel said, stepping between them. \n\nHass went stiff, then growled. He set me down, but held on to me. \"No one else lays a hand on her,\" he said to Lukel. \"No one.\"\n\nLukel nodded, then picked me up like a child, like Hass had been carrying me. The march continued. \"Bha mi an d\u00f2chas airson cothrom bruidhinn riut,\" he said softly.\n\n\"About what?\" I asked uncomfortably. Lukel was larger than Hass and he held me much tighter than Hass had. \n\n\"Bruidhinn rium san t-seann ch\u00e0nan gus nach bi an fheadhainn eile a 'tuigsinn,\" he said, still half whispering.\n\n\"No. You speak normal. I told you, I can't...\"\n\n\"Dh 'fhaodadh tu nam biodh tu ag iarraidh.\"\n\n\"Well I don't want to. If you have to talk, do it normal. I won't answer you otherwise.\"\n\n\"Why do you deny your bond with Bhienn?\"\n\n\"I don't. I get it, the mountain is speaking through me or whatever. That doesn't mean I have to like it.\"\n\n\"You did not know your parents?\"\n\n\"No.\"\n\n\"My m\u00e0thair was like you. She was from below. She came from far away, the mountain called her. She spoke like you do, without knowing why. She bonded my athair and I was born with the gift as well.\"\n\n\"Speaking the old tongue?\"\n\n\"Among other things.\"\n\n\"You know it's just gailic, right?\"\n\n\"Whatever it is, it is old to them. To us. The origins lost as english took over. You dislike Hasslin Olc. He did that to your face?\"\n\nI looked around quickly, but Lukel had dropped back, trailing everyone else, including Hass.\n\n\"He was drunk,\" I said softly.\n\nHe snorted. \"It would take a great deal of shine to get him drunk, but very very little to set off his temper. You do not like him. I see the way you look at him when he is not looking at you. Fear. Anger. Hatred.\"\n\n\"Suffering?\" I asked, joking. I realized right after I said it that he wouldn't get the joke. \n\n\"That too,\" he agreed, not realizing I had been making a Star Wars reference. Ugh.\n\n\"Why do you care?\" I asked quietly, keeping an eye on Hass.\n\n\"I can see you away from him. I can speak to Mika, or Willa. They can apprentice you, train you, away from clan Olc.\"\n\n\"Why would you do that?\" I asked carefully, wondering if this were a trick.\n\n\"I do not want to see you killed, or hurt more than you have been. Bhienn has chosen you, chances are you will bear a child like me. Perhaps more than one. Also, Bhienn tells me to get you out of his hands. He is not the one.\"\n\n\"And you are?\" I snorted, figuring I knew where this was going.\n\n\"No, girl,\" he said tersely. \"I have no interest in you in that way. Only that you are like my mother and Bhienn tells me that you need guidance and help. If circumstances make it so we return to clan Olc, I may introduce you to Mikkel. He does not have the gift, but he works in herbs and helps as he can with healing. We are bonded.\"\n\n\"Oh,\" I said, ashamed that I had assumed the worst of him. \"Ok. If... if it's possible to get away without him killing me... I would want that.\"\n\n\"I will make an effort then.\"\n\n\"I don't want him to kill you either!\"\n\n\"He will not. He cannot. If he does, he will be a banished one, exiled to live below. You cannot kill one of my kind without Bhienn passing judgement. The mountain will never welcome him again.\"\n\n\"That's why he let you carry me.\"\n\n\"It is.\"\n\n\"How far is this walk?\"\n\n\"We will sleep in the night and arrive in the late morning.\"\n\n\"For a festival?\"\n\n\"For Mabon and Bhienn's favor. Hasslin is supposed to win her favor for us.\"\n\n\"Like a contest?\"\n\n\"Yes.\"\n\nWe chatted until late at night when we stopped to sleep. Hasslin curled me up in his bedroll, spooning me and nuzzling me. To my embarrassment, I heard the others in the night. All the women who had come with their partners or companions. The sound of love lovemaking and sex filled the night around us. Hass fondled me, rolling his hard cock against my ass as he pushed his hips against me.\n\n\"I want you to go wild for me, girl,\" he whispered before biting my shoulder.\n\n\"I... I don't think... I... in front of everyone?\"\n\n\"That bother you? You below folk are so queer in your ways. Fuck a near stranger but won't fuck in front of a friend. Cain't you see that's off? Come on girl, get your skirts up. I'm makin' you go wild for me,\" he whispered, turning me and yanking my dress up. He turned, yanking my legs apart and burying his mouth in my mound as I gasped. I had nothing to grab on to, the way he was turned, his knee was against my shoulder.\n\nI let out a soft moan as his tongue found my clit and he slid a finger into me. I reached around and pulled on his leg, making him move to straddle my face, then I took his cock in my mouth. I knew it was the only way I would keep quiet, if my mouth was full. He was hard in seconds as he moaned into my pussy, his hands tightening on my thighs as I sucked his cock. I worked him with my hands, sucking as well as I could, but the angle was wrong. He stopped waiting for me to figure it out as he began fucking my mouth, ramming his hips down and choking me with every thrust. I half struggled, trying to pull away so I could breathe, but I also didn't dare. I focused on taking his cock into my mouth and holding my hand at his base so he couldn't go too deep. I also focused on breathing. My concentration began slipping as he brought me closer to orgasm and I was moaning loudly around his cock. \n\nI came hard, secretly thrilled that I knew I could be heard among the other moans and cries of passion around us. It was a little titillating as I bucked and screamed around his cock, clamping down on his fingers over and over again.\n\nHe yanked out of my mouth and turned, shoving my legs high as he thrust into me, pumping so hard his hips were clapping into my ass. I came again almost immediately, still sensitive from the first one and I let out a keening wail as he growled and dropped down on me. I felt him coming inside of me as I was coming down, his hand a fist in my hair as he rumbled in my neck. He bit down on my jaw and I screamed in pain as he finished.\n\n\"Who are you?\" he asked in a hiss.\n\n\"Nothing,\" I answered quickly, trying to stifle a sob. \"I am nothing. I am your nothing.\"\n\n\"My nothing,\" he repeated.\n\nHe pushed me to my side and laid behind me, spooning me close. I lay sobbing long after he fell asleep.\n\nHe woke me in the morning, pulling the blankets back and gripping my hair to turn my face to his. He pressed his forehead to mine and stared into my eyes. I stared back fearfully, wondering what he wanted from me. \n\nLukel saved me. \"I will carry her this morning so you can save your strength,\" he offered quietly.\n\nHass growled angrily, but stood up, yanking up the bedroll and rolling it up. \n\nLukel started to pick me up and I started to put my arms around his neck, but Hass grabbed me suddenly and yanked me against him hard. \"Who are you?\" he asked loudly.\n\n\"Nothing,\" I answered softly.\n\n\"Louder and say it right!\"\n\n\"Nothing! I am your nothing!\" I answered, my eyes welling up as everyone stared. Puca was smirking. \n\nHass jerked my dress open, looking down at the tattoo. He leaned in and put his mouth over it, then bit down hard enough to make me scream and beg for help. He held me there, one arm around my waist to hold me against him, the other holding my breast so that I couldn't pull away, biting down until my knees gave out.\n\nHe pulled back, blood on his lower lip and let me fall to the ground. He spit blood out, then walked away as I rocked on the ground and tried to hold the bite. It hurt like nothing I had ever felt before and he had broken skin! \n\nLukel knelt next to me and pulled my now bloody dress back. \"I am sorry,\" he whispered, looking at the bite. \"This is my fault. I should have stayed back until he was done. This is... bad. I don't have what I need here, but Willa will. Dev!\" he yelled, calling the young man back. \"Run ahead and tell Willa that one of ours will need stitches and something to stave off infection, and be prepared to clean a bite. Run on, be fast.\"\n\nThe boy ran ahead and I watched him until I saw Hass looking back at me, his face a thunderhead. Lukel picked me up and I hunched in, whimpering.\n\n\"Hold this to it,\" Lukel said as another man handed him a rag.\n\nI gripped it close, at least staunching the blood. After an hour, it had settled to a dull throb and had turned an ugly purple all around the tattoo. Lukel was walking fast, heading the procession and several had fallen back, not bothering to move fast just so I could get medical help. Bayn and Hass both kept up, both looking livid. I couldn't manage to look back at Hass with anything but pure hurt and that seemed to piss him off even more.\n\nI was shivering with adrenaline, cold and pain when we finally came out of the woods into a huge clearing. There was a large, tall pyramid of stairs in the middle of the huge field and on top was a nest of some sort and a naked girl sitting in it. I blinked.\n\nLukel walked straight across the field towards a small pavilion with white, gauzy material as walls. An ancient woman stood when he got close and motioned to a low lounge chair in the back of the tent. Lukel laid me in it and an older woman knelt next to me as Lukel pulled back my dress. \n\nThe ancient woman hissed and turned to Bayn and Hass.\"Hurt'a chile?\" she demanded.\n\n\"She ain't a child,\" Hass said, crossing his arms. \"She's mine to hurt.\"\n\n\"Go on!\" the ancient woman said heatedly, motioning them away.\n\n\"She's mine,\" Hass repeated.\n\n\"Y'aint welcome, Olc,\" the woman looking over the bite said loudly. \"Not in here. You can wait with your own.\"\n\n\"I am putting my name in for the banrigh,\" Hass said, stubbornly not leaving.\n\n\"Tell Wol,\" the woman said, motioning off to the side, outside the pavilion.\n\nHass hesitated, then looked at me. \"Who are you?\" he demanded.\n\n\"I'm nothing. Your nothing.\"\n\n\"MY nothing,\" he said, looking at the old woman in the chair.\n\n\"Get you gone, Olc,\" the ancient woman said, standing and thumping her staff on the ground.\n\nWhen she did that, one of the women in white in the tent with them took off at a run.\n\nHass left and the woman looking me over pulled my dress back further. \"Needa clean it, then dress it. Cain't stitch it, bite's tend ta infect. I gotta poultice here.\"\n\nLukel took the opportunity to speak to the ancient woman. \"Cailleach Willa, this is Odette. Bhienne speaks through her.\"\n\n\"That so?\" the ancient woman asked me.\n\n\"I guess,\" I whispered, gritting my teeth as the other woman cleaned the bite.\n\n\"D\u00e8 tha Bhienn ag r\u00e0dh riut?\" she asked me curiously.",
        "\"She doesn't say anything, I just...hsssst! Ohhh. I understand.\"\n\nA huge older man ducked into the pavilion, followed by another huge younger man. Giants. I stared. \n\n\"Cailleach?\" the older one asked as I stared. \n\nThe younger one wore buckskin pants and a vest, his hair long, his beard shorter than the older mans. The older man had long white hair and a beard. They were father and son, obviously.\n\n\"Olc's here,\" the woman tending me said. \"Hurt this girl good. Been hurtin' her a while,\" she said, touching my jaw and cheek where Hass had hit and bit me.\"\n\nBoth men looked at me and my wounds. I tried to cover my chest, but the woman pushed my hand away with a tsk.\n\n\"Which one?\" the older one demanded.\n\nThe younger one stared at me, his huge brown eyes gentle. I felt drawn to him, this gentle giant standing there. I didn't know him, but I felt I did.\n\n\"Hasslin Olc.\"\n\nThe younger man's face went grim. \"They bonded?\" he asked the old woman.\n\n\"No!\" I said quickly. \"No, he stole me from below. Kidnapped me.\"\n\n\"She has an tiodhlac,\" Lukel volunteered. \"Like my m\u00e0thair.\"\n\nThe young man was staring at me again, our eyes locked. Why did I feel like I knew him? Why did it feel like he knew me too?\n\n\"He intend to send her on? New blood?\" the young giant asked.\n\n\"I don't think so,\" Lukel said. \"He has become... possessive of her. He won't bond her, he doesn't understand his own feelings for her, but I think if he keeps her he will kill her. Not on purpose, his temper,\" he said, as if they understood that. From their looks, they did. \"I wanted to ask you, Cailleach Willa, she needs to be apprenticed. Will you take her on? I dare not, not with him so close. Here she can be safe from him. If you claim her as an apprentice, he cannot say no.\"\n\n\"He kin,\" she spat. \"Ha' th'words still,\" she said, nodding. \"Feen, Gun. S'close?\"\n\n\"Yeah,\" the old one said. \n\nThe young one nodded and looked at me again. I stared back until the woman tending me made me flinch again and I looked to see what she was doing.\n\nA tall girl with white blonde hair came in and she had a bag with her. She sat next to me on the other side and began cleaning my cut cheek. The younger giant sidled closer.\n\n\"You need some'n, Col?\" she asked, smiling up at him.\n\n\"No,\" he said, his voice a deep rumble. \n\n\"Heard Hasslin's been at her,\" she said, dabbing something that stung on my cheek.\n\n\"Mm,\" he agreed. \n\n\"Heard he means to take Lorna.\"\n\nThe big man rolled his shoulders. \"Korrel won't stop him,\" he said with a scowl. \n\nHass pushed back in and both of the giants stepped forward. \"How much longer?\" he demanded. \"I drew first and I want her on my cock before it starts. She's mine to use.\"\n\nThe younger one moved closer to Hass, but Hass ignored him, staring back at me, his nostrils flaring.\n\n\"A bheil thu airson a dhol air ais leis a 'bheathach seo?\" the old woman asked me.\n\n\"No!\" I answered quickly. I definitely did not want to leave with Hass, though she had called him an animal.\n\n\"How much for the girl?\" the young giant asked Hass.\n\nHass sneered up at him. \"Feen Mor, I will see her dead before I see her with you. No price. None.\"\n\n\"You have no care for her,\" the giant, Feen?, countered. \n\n\"No. None. But she is mine to use and mine to keep from you. Get up girl, come suck my cock.\"\n\nI started to move, but the two women tending me held my shoulders and shook their heads.\n\n\"Sh'ain't ready yet,\" the ancient woman said. \n\n\"We will send for you,\" the old woman tending me said. \n\n\"I don't care about her wounds, let her up. She's coming with me,\" he said, starting to push past Feen and his father. The two men closed ranks, making a wall. \"She is my property!\"\n\n\"We will send for you,\" the woman repeated, slathering the bite with something that smelled awful and numbed the bite. \n\nI couldn't see Hass anymore, but I heard him growl and apparently he left because the two giants relaxed and turned. Feen looked at me again. The girl tipped a cup to my mouth and I drank the sour liquid with a grimace. She gave me water after and I drank gratefully. The woman worked on my breast for another twenty minutes as I got drowsy and the pain abated completely.\n\nOnce they were both done, they stood and went around in front of the old woman. \"She is patched up, but I fear it will be for naught if he gets his hands on her again.\" the woman said.\n\n\"Send for'm. Say not'n yet, wait for the win,\" the ancient one said.\n\nFeen looked visibly upset when Hass came in and picked me up, carrying me out and down the side of the field. Feen followed at a distance and Hass smirked at him. When he got to Bayn and the others, he dropped me on the table they were sitting at and turned me, holding me face down on it as he pulled my skirts up to pile on my back.\n\n\"No!\" I whimpered. It was broad daylight and everyone was watching, hundreds of people all around the field. He spit on my pussy, then lifted his kilt and shoved into me roughly, making me cry out. \n\nThe giant was there suddenly, jerking Hass back and out of me. I was horrified, but I didn't dare move off the table where Hass had shoved me. I was only grateful the skirts of my dress had slid down when he was pulled away.\n\n\"There will be no harm here this day. You say you are first, your time is fast coming. You do this now and you won't be able to do what you must to the banrigh,\" Feen rumbled angrily.\n\n\"You do not get to tell me what to do with her. Girl! What are you?\"\n\n\"Nothing!\" I whispered fearfully. \"Your nothing!\"\n\n\"You are nothing. She is nothing. She is my nothing.\"\n\n\"If she is nothing then you will trade her to me.\"\n\n\"You have nothing I want. It would please me more to slit her throat and make you watch, that would be worth more than anything you have! You want her? Challenge me, Feen Mor.\"\n\n\"You wish to die?\" Feen asked darkly.\n\nHass laughed, his brethren as well.\n\nWhatever was going to be said next was interrupted as silence fell over the crowd and the ancient woman began talking. I didn't dare look, or move. I stayed against the table, watching Hass and Feen stare at each other, murder in their eyes. Their hate for each other was as old as they were.\n\nFinally, Feen stepped back and seconds later, a bell rang. Hass walked out of my line of sight as the crowd cheered.\n\n\"Get up girl,\" the giant said softly.\n\n\"She stays,\" Bayn said, his hand going to the back of my neck to hold me down. I felt him move behind me, his cock pressed against me. He began gathering my skirts and I broke down crying. He shoved a finger into me roughly, then licked his finger and shoved it in again before undoing his pants.\n\n\"No!\" I begged.\n\nThere was a loud yell and a scream, then a collective crowd gasp. \n\n\"Take your hands off or you will lose them,\" Feen said, moving closer to Bayn. \"He is claiming the banrigh as we speak, that means he just lost his claim to this one. I am taking her, or will you challenge me?\"\n\nBayn backed up, letting my skirts fall. Feen took my arm, pulling until I stood, then led me back to the pavilion. \n\n\"Hass!\" Bayn yelled, following us. \"They are taking her!\"\n\nI saw Hass then, on top of the tall stairs. He had the naked girl bent over the nest, his hands on her hips as he shoved into her. When Bayn spoke, Hass's head whipped to us and he stood, bounding down the stairs. \n\n\"Take your hands off of her!\" he yelled as Feen pushed me into the pavilion and blocked Hass's path.\n\n\"You claimed another. You cannot claim two.\"\n\n\"Banrigh on Mabon does not count! I do not want her, this one is mine by rights! I challenge for her!\"\n\n\"Me, boy?\" the ancient woman asked, standing with the staff.\n\n\"Cailleach Willa is claiming the girl as an apprentice,\" the woman in white who had tended my wounds said, stepping up to stand with the old woman. Willa?\n\n\"I do not give permission!\" Hass yelled. \"Girl, come here, now!\"\n\n\"She ain't yours to order anymore,\" Feen said darkly. \"She is prenticed to be a cailleach. You have another, one you are bound by law to not hurt.\"\n\n\"No. No! You cain't take her if she is bound. I will bind her. Now. I want the bind'n done now!\"\n\n\"T'late nah, boy,\" Willa said, waving Hass back. \"Go on.\"\n\n\"She is mine. Girl, tell them. We will bind, now. Tell them!\"\n\nI refused to look at him and the girl with the white blonde hair came and put a hand on my shoulder, hugging me against her. \n\n\"She doesn't want you,\" the girl said to Hass. \"Leave here, leave her behind. She is lost to you.\"\n\n\"Girl, tell them!\" Hass demanded.\n\n\"My name is Odette!\" I screamed at him, then broke down sobbing.\n\n\"She is mine!\" Hass roared. \n\nI looked back when I heard a scuffle and Feen and his father were trying to hold Hass pinned to the ground. \n\n\"You go on quiet and peaceful,\" the mender said to Hass. \"Or we put you in the cage and you lose the banrigh you just claimed. Your clan is banned and you are banished. Any who offer violence to a High Cailleach forfeit their life. Make your choice, Olc.\"\n\n\"This isn't over!\" he yelled. \"Let me up, I am leaving!\"\n\nI hid my face as he left, unable to look at him. If I saw his face, his anger, I would feel the need to obey him.\n\n\"He's gone,\" the girl said gently. \"He ain't hurtin you no more.\"\n\nI knew he wasn't going to give up that easily though.\n\n\"Feen,\" his father said. \"Follow them, make sure they leave.\"\n\n\"Tell off another,\" Feen said, crossing his arms and moving closer to me. \n\nHis father snorted. \"Layla, go get Levi. Tell him to follow the Olc's, make sure they leave.\"\n\nA younger woman in white left at a trot. I peeked again at Feen and he was watching me again. His eyes were so intense as he looked down at me. The girl hugging me chuckled. \"You want to comfort her, Col?\" she asked him.\n\nHe turned his gaze away, looking out at the field as if she hadn't spoken. The girl's laugh was musical and would have been contagious if I wasn't so terrified. \n\n\"You are safe here with us,\" she said soothingly, patting my shoulder. \"Sit,\" she said, urging me to the low reclining seat I had been in earlier. She looked at the bite and covered it with more salve, then but more ointment on my cheek as I sat there numbly.\n\n\"Thanks,\" I managed.\n\n\"Don't worry,\" she repeated. \n\nI blinked up at her. \"He isn't going to let it go, you don't know him.\"\n\n\"We know him,\" she said softly. \"We are watching him. If he comes back, he won't get near you. Feen won't let him, will you, Col?\"\n\n\"No,\" he rumbled, his face turning red. \"Still hurt?\" he asked me.\n\n\"Some, not so bad as it was. Thanks for stopping him.\"\n\nHe shrugged, still looking out at the field. The tower was being taken down and everyone was moving into the field with tables, food and music, celebrating. The more people who got close, the more nervous I felt. He could hide anywhere among so many! He was small, hard to spot. \n\n\"Is there somewhere inside I could be?\" I asked, looking around in a panic.\n\nFeen moved closer, standing at the top of my chair, right above me. I immediately felt safer. I let out a breath I didn't know I had been holding and let my head lay back. Exhaustion was starting to win out over my fear, along with whatever they had given me for the pain. The noise, loud and raucous, was turning into white noise as I laid there. I yawned and curled up, shivering slightly. \n\nFeen pulled off his fur cape and laid it over me and I looked up at him. I meant to say thank you, but I froze when our eyes met again. He knelt there, his hands on the cape and his eyes on me and we stared at each other from a foot away. \"Sleep,\" he said softly. \"I will stay.\"\n\nI nodded, still unable to speak or look away. It was him, I realized. He was the other reason I was here. The reason besides the mountain. He was why I had been called, who I was meant to be with.\n\nHe moved closer, his hand sliding up to my jaw as he pressed his head to mine, staring into my eyes.\n\nI don't know how long we stayed there like that, locked into each other's souls, but it was getting dark when Willa spoke to us, interrupting. \"Feen Mor?\" she asked.\n\nHe blinked and dragged his eyes from mine to look at her. She said nothing else, but he looked at her a moment, then nodded. \"Yes,\" he answered as if she had asked him a question.\n\nShe nodded as if she had expected that response, then made a motion to the girl with the white blonde hair. The girl grinned and took off at a sprint as Feen looked back down at me.\n\n\"Willin?\" he asked, his voice shaky.\n\nI wasn't sure what he was asking, but I couldn't imagine saying no to whatever it was. I was willing to do almost anything he asked. I nodded.\n\nHe looked relieved as he stood up. The other ladies in white began untying the curtains and pulling them closed as Feen left. I was alarmed, where was he going?!? \n\nI saw his father and several other men surround the tent as the curtains were being closed. The mender helped me stand and began pulling my dress off, looking pleased. The girl came back still smiling, a white gown in her arms. She helped me into it, giddy with excitement. I looked down at the white dress and when Feen showed back up, also in white, I knew what was about to happen.\n\nI looked up at him, both terrified and a little in awe. That fast. No questions, no expectations. The mountain said it was right, so it was. I did not argue, I looked up at him and knew it was right. He was everything Hasslin Olc would never be. \n\nHe moved closer and touched my hair, moving it off my face and running a finger lightly over the cut on my cheek. He looked sad and hurt, like my pain was his pain. I pressed my cheek to his giant hand and his eyes moved to mine. Those beautiful, soulful, gentle, brown eyes.\n\nWhen the curtains were opened and Willa stood and called for silence, then announced there would be a binding, the crowd erupted in cheering and yells. I didn't look around, I stared up at him. \n\nI was no longer nothing. I was his, and he treasured me.\n\n \n"
    ],
    "authorname": "gabthewriter",
    "tags": [
        "choose your own adventure",
        "magic",
        "misunderstood feelings",
        "mountain",
        "non-con",
        "reluctance",
        "nonconsent"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/odette-path-a"
}