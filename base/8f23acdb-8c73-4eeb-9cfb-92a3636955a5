{
    "title": "I Only Wanted You Pt. 02",
    "pages": [
        "<p align=\"center\">Chapter 9: The Blanket Incident, Redux</p>\n\nI woke up to the chiming of my phone. It wasn't bright and early; the late-November morning was overcast and it was just past ten. We hadn't made it back from the outlet malls until really late. By the time I'd dropped Natalie off and returned to my place, it had been after midnight. I sleepily picked up my phone, and sure enough, there was a text from her.\n\nNat: Morning sunshine. You were in my dream last night\n\nI perked right up and eagerly replied.\n\nMe: All of me? Or just a certain part?\n\nNat: All of you\n\nNat: But mostly a certain part\n\nMe: You're welcome\n\nNat: Ha\n\nMe: To be honest, I'm mildly disappointed that no pretty girls snuck in this morning and pulled off my covers\n\nNat: You should be so lucky\n\nMe: I was, once...\n\nNat: Ha ha\n\nMe: I hope to be, again\n\nNat: You'd really be ok with that?\n\nMe: Okay? Hell, I want you to do it\n\nNat: I dunno...\n\nI figured that was the end of it, but one more text came in.\n\nNat: I'll think about it\n\nI couldn't believe my luck. I decided it was best to stop there. I didn't want to press too far and have her pull back.\n\nWe weren't able to get together for the rest of the weekend, so the next time I saw her was Monday after work when I knocked on her door. As soon as she saw me, she practically jumped into my arms. She stretched up and gave me a big kiss, and I could feel her smiling.\n\n\"I missed you!\" she said happily. She pulled me inside and I closed the door behind me.\n\n\"Aw. You know how to make a guy feel special. I missed you too.\"\n\nShe wrapped her arms around me and hugged me tight, inhaling deeply. \"Mmm, you smell good.\"\n\nI chuckled and ran my fingertips through her hair. \"I have some news.\"\n\n\"Oh?\" she asked, intrigued. \"What is it?\"\n\n\"I got my bonus for all those business trips.\"\n\n\"Ooh, so they finally made good on their promise!\" She looked up at me. \"Well? How much was it?\"\n\nI told her and she inhaled sharply. \"Wow.\"\n\nI looked away, suddenly a little self-conscious. \"Yeah. I figured it'd be maybe half a paycheck or something. Apparently, when the CEO himself tells you he's pleased with your work, he's not kidding around.\"\n\n\"So what are you gonna do with it?\"\n\n\"I have one thing in mind. Other than that, I'm not sure. I guess I'll stick it in my savings. I should start looking into investments now that I'm making more money.\"\n\nShe tickled my sides. \"Jeez, are you gonna make me drag it out of you? What did you buy?\"\n\nI grinned. \"A newer, bigger TV.\"\n\nShe chuckled. \"Of course you would do that.\" She paused for a second. \"Um, if you don't have other plans, do you think I could have your old one? Since I don't have a TV at all.\"\n\nI hugged her tight. \"Come on, I need your help with something.\"\n\nI led her out of her apartment and down the steps to the parking lot. I popped my trunk and inside was my old TV, and a plastic bag with a bunch of cords and wires.\n\nShe laughed when she saw it. \"Oh, you have me all figured out.\"\n\nWe carried the TV up into her apartment and set it on her dining table. I looked around at the available furniture. \"Uh, I guess you're gonna need a TV stand.\"\n\nWe went shopping after that. We drove to the nearest IKEA, at her suggestion, which was in the next city over. We wandered the huge place for a good long time, before finally focusing on what they had in the realm of TV stands. She picked out one she liked, and she took the opportunity to also pick out a couple smaller furniture items she said she needed. When it came time to pay for it, I offered, but she insisted on taking care of it herself. We managed to get her purchases to fit in my car's trunk, though just barely, even with them being flat packed, and then we headed home.\n\nWe grabbed food and ate it on the way back. When she was done, she snuggled up against me, her hand again finding its way to my thigh, even closer to my dick than before. With my jeans in the way, I don't know if she realized it.\n\nBack at her place, we prepared ourselves for the fun and exciting frustration of assembling the IKEA furniture. We only made a couple mistakes, and everything went together pretty well, so it only took us about an hour or so to get it all done. Then we arranged her living room how she wanted it and set up the TV.\n\nWhen we finished, we turned the TV on, but without internet or an antenna, it was just a big, empty screen. \"Looks like it's finally time for me to get my internet hooked up,\" she said, hands on her hips. She glanced at me. \"What? Haven't needed it until now.\"\n\nAll done at her place, we headed back over to my place to watch a movie. I changed out of my pants and into some lounge shorts, because I was tired of hanging out in my jeans. Natalie glanced down, but didn't say anything.\n\nThe movie wasn't doing a good job holding our attention and we were soon ignoring it and making out on the couch. I immediately realized my mistake when I started getting hard. Without the thick denim to keep things under control, my erection was free to do as it pleased, and I was too worked up to will my way out of the situation. Soon enough, Natalie noticed the large lump in my shorts.\n\nHer eyes got big and she literally covered her mouth with her hands, but not before I saw her jaw drop. She looked up at me, excitement plain on her face. She was into this! This was awesome!\n\n\"Someone's excited,\" she teased, biting her lip.\n\nI made my best helpless what can ya do? face and shrugged. \"I can't claim to be in control of it at times like these.\"\n\n\"What, when a hot girl's making out with you?\" She winked at me.\n\n\"Mm. That'd be it.\"\n\nGrinning wide, she came in for more kisses, though she kept checking out my package, which was totally fine by me. Her hand stayed above the clothes, but her fingertips found their way down to the elastic waistband of my shorts. I was so hard, the tip of my cock was straining the material, making an overhang above her fingers.\n\nShe stared at it. \"It's big.\"\n\n\"It's super excited.\"\n\n\"Because my hand is so close?\"\n\n\"Yeah, and the making out, and the general proximity of a beautiful woman, and--\"\n\n\"Alright, you,\" she teased. \"I get it. I turn you on.\"\n\n\"Guilty as charged, your honor.\"\n\nShe got a mischievous look on her face. I eyed her, having no clue what sort of shenanigans she would get into, this being a wholly unexplored facet of our relationship. Then she surprised me by quickly placing her hand directly on my cock through my shorts. I wasn't thinking straight, but I'm pretty sure I felt the tiniest of squeezes. Maybe it was just her fingers twitching. Either way, my brain overloaded briefly, the kind where your thoughts fuzz out and the most intelligent thing you can manage is, \"Gaaaaaah.\"\n\nHer fingers were only on my erection for a split second before she yanked back and clasped her hands together against her chest, her face red and glowing with excitement. My brain finally got unstuck, and I sat up straight, a stunned look on my face. She laughed, eyes wide, face flushed. \"I can't believe I did that!\"\n\nWith my faculties back, I could now resume communications. I said eagerly, \"Do it again!\"\n\nShe bit her lip, but then said, \"No, just sit back and let's watch the movie.\"\n\n\"Aww,\" I complained. She giggled.\n\n\"If you need to go deal with that, hurry up.\" She had a sparkle in her eye as she spoke.\n\n\"Uh, you mean...?\"\n\n\"Look, Rob, you're a guy and everyone says all guys do it.\"\n\n\"Do what, Natalie?\" I asked in mock seriousness.\n\n\"You know... jack off.\"\n\nI tilted my head and gave her a steady look, my eyes half-closed, my mouth quirked in a small smile. \"Is that so? Maybe I'll wait until you leave.\"\n\n\"So you have done it before?\" she asked. The question came out half tentative, half statement of fact.\n\n\"Well yeah, I'm a guy and everyone says all guys do it,\" I said, playfully repeating her words.\n\n\"You are such a boy,\" she said, giving me a sidelong look and a devious smile. I caught her glancing at my bulge again.\n\n\"Sure, but I'm all yours.\"\n\n\"Really,\" she drawled, but she took no further action, instead choosing to watch the movie.\n\nLater, when the movie finally ended and I vaguely knew what it was about, she sat up, yawned, and stretched. \"Well, it's late and we both work in the morning. I guess you better take me home.\"\n\n<p align=\"center\">***</p>\n\nA few days later, I got my wish. I'd been hoping for her to pay me another early-morning visit, but I wasn't going to be pushy about it. I'd like to say I heard her unlock the door and come in, and waited in breathless anticipation as she entered my bedroom, studied me sleeping in my bed, and then slowly, carefully, pulled off the blanket to see me in the nude again, but that's not how it happened.\n\nInstead, I blissfully slept through all of that, and instead roused to the motion of her sitting on my bed next to me. It took a few seconds for my brain to wake up enough to grasp the situation.\n\nMy blanket was pulled aside. I could feel the cool air of my bedroom. I was on my back again, since that's how I usually sleep anyway, and I could immediately tell that I was completely hard. In fact, as the reality of the situation took hold, my cock stiffened even more, to a state best described as hard as fuck.\n\nThe change did not go unnoticed. \"Are you awake?\" she asked in an amused voice.\n\n\"I am now,\" I said. I tried to open my eyes, but it was too bright. \"How long have you been here?\"\n\n\"About five minutes.\"\n\n\"You've been staring at my hard cock for five minutes?\" I was waking up fast, but I wasn't fully alert yet, so I didn't even think to moderate my language.\n\nShe didn't answer. I tried again to open my eyes, squinting against the brightness, and took a peek. Her gaze was fixed on my crotch. I'm not sure she'd heard my question.\n\n\"How does this even fit in a girl?\" she asked, though it definitely had the feel of someone talking to themselves.\n\n\"Girls are very stretchy down there,\" I quipped.\n\nShe blushed, but kept her eyes on the prize. I reveled in the prurient attention.\n\n\"Did you touch it?\" I asked.\n\n\"What? No.\"\n\n\"Do you want to?\"\n\nShe looked at me, eyes wide, face beet-red. \"Can I?\"\n\nI settled back into my pillow. \"Only one way to find out.\"\n\nShe licked her lips and swallowed, then reached out tentatively with one hand. Slowly, slowly, her fingertips inched closer, until she made contact. She brushed the tips of her fingers up along my cock, then stroked the other direction. Then, using just one finger, she ran the tip up and down the sides of my shaft.\n\n\"You can do more, if you want.\"\n\n\"Like what?\" she asked, unsure.\n\n\"Wrap your hand around it.\"\n\nShe did it, though she was trembling enough for me to feel it. She couldn't quite close her hand around my shaft; I was too thick for that. But she did wrap her fingers as far around as she could and gave me a little squeeze.\n\nI didn't say anything, or even move. I just watched, breathless. I would've loved for more, but I felt like we were already walking a fine line.\n\nShe held me like that for a while, unmoving, just looking and breathing hard. Her trembling slowly subsided. She glanced at me. \"Why do I like this so much?\" she asked softly.\n\n\"If you showed me your boobs, I could stare at them for hours.\"\n\nI honestly don't know if she heard. After a while, she gave herself a little shake, then let go of my cock, the warmth left by her hand contrasting with the cool air. She turned to me and leaned close. Kissing her while nude and erect was really exciting, and I wanted it to turn into a full make out session, but she broke it off after a few seconds. She bit her lip and watched me, a little smile tugging at the corners of her mouth. She ran her finger around in lazy circles on my chest, then gave me a little pat, slid off the bed, and stood up.\n\n\"Well, I'm going to go get breakfast started.\" And with that, she left, leaving me practically gasping. She wasn't doing this cruelly; I knew that. Maybe her inhibitions had finally won out. I concentrated instead on the memory of her holding my cock, by far the most sexual thing we had done.\n\nI wondered what she would think if I just jacked off right then and there. She left the door open, but I could hear her in the kitchen and I knew you can't see into the bedroom from out there. I was tempted to do it, but then other needs took hold and I reasoned I should deal with it later because I really had to pee.\n\nI got up, took care of business, and got ready, then met her in the kitchen to help with breakfast prep. We ate and enjoyed the morning together, and I couldn't miss the sly glances she kept giving me. While I couldn't read her mind, I was convinced that a new leaf had been turned.\n\nIt took about a week for the cable company to finally come and get her internet turned on. Then she bought one of the streaming devices and got it all plugged in and ready to go. Finally, she texted me as I got off work.\n\nNat: Movie night at my place! Bring snacks and your sexy self ;)\n\n<p align=\"center\">Chapter 10: Movie Night and Chill</p>\n\nI showed up with the snacks, some drinks, and, of course, my sexy self, as requested. She beamed when she opened the door for me, and the two of us got right down to the movie. Even though we'd hung out at my place watching movies many times now, she seemed to really enjoy the fact that we were at her place this time. I guess maybe it helped her feel a bit more independent, or grown up, or something like that. Either way, she was in a terrific, fun, playful mood the whole time, which I loved to see.\n\nThe movie was racy, with lots of sexy stuff, sex scenes, and nudity. When it finally ended, I was definitely feeling the effects, and she wasted no time letting me know she was, too. She snuggled up to me on the couch. She leaned in close and whispered, \"Wanna make out, my sexy man?\"\n\n\"The hell kind of question is that?\" I asked, grabbing for her, but she was a step ahead.\n\nWith a delighted and surprised 'oof' I met her lips with my own and we engaged in the heaviest make out session of our relationship. She was really into it, which, in turn, charged me up in a delicious feedback loop. Her left arm was mostly pinned under us, so she couldn't do much with it except stroke my back a bit with her fingers. Her right arm, though, was free, and roamed my body in a way she had never done before. She stroked my face as we French kissed, she stroked my neck and my collarbone. She caressed my shoulder and my arm, even my chest. She ran her hands down my leg and around back to my butt, and even brushed right across the bulge in my pants on the way back. She'd never touched me so blatantly before, and I was loving it.\n\nI was, of course, hard as a rock. She pulled away and I opened my eyes just in time to see her look down at my crotch. She was breathing hard and her face was flushed. She looked at me boldly and said, \"I want to see it.\"\n\nHell yes, I thought to myself. I didn't even hesitate. I undid my jeans one handed, then arched my back as I struggled to push them down my legs. My underwear stretched impressively around my straining cock, and with one hand, I pushed them down, too, freeing my member to the cool air of her apartment, and to her hungry gaze.\n\nWith a sharp intake of breath, she looked at my bare, hard cock. The tip of her tongue made a brief appearance poking out between her lips. She liked what she saw; it was plain on her face. Her eyes widened, her cheeks were rosy, her lips moved in unsaid, unformed words, and her breathing was quick and shallow.\n\nI went in for another kiss, but she gently held off. \"I want to look.\"\n\nI relaxed and leaned back on the couch, resting my head, while I let her stare at my nudity. I liked it. A lot. And I wanted her to look. I just wish I knew what was going through her head.\n\nAfter what was probably only a couple minutes, though they felt like twenty, she found my lips and kissed me, hard and deep. Her tongue joined the fun soon after, and her hand returned to my chest. As we kissed, she tugged my shirt up and put her hand on my bare skin over my sternum.\n\n\"I want to touch you,\" she said in a husky whisper.\n\n\"Then touch me,\" I breathed.\n\nHer hand wandered down, now touching my stomach. She caressed her way further down to my abs, now very close to the head of my hard cock. She went even further, delicately tracing a line with her fingertips down my side until she found my hip.\n\nShe caressed all around my lower abdomen, slipping her hand under my erection to run her fingers through my pubic hair. Even though it was just the back of her hand, contact with the sensitive skin on my cock was electric. I twitched and shivered, and she looked up at me, a sexy smile on her lips.\n\nShe moved her hand to the inside of my thigh and I spread my legs to give her access. She ran her fingertips up my inner thigh, only stopping when the back of her hand came into contact with my balls. Then she did the same on my other leg.\n\nShe found my eyes and met my gaze, deep and excited. She gently cupped my balls while watching my face, studying my reaction. I sucked in my breath and waited hungrily for whatever was next.\n\nNatalie ran a single fingertip up the length of my cock, then traced its outline up and down both sides. She kissed me deeply while she continued teasing my stiff shaft. She fondled me around the entire area, including down below my balls. I spread my legs further and she took advantage of the extra room to caress my perineum. She nearly touched my asshole, which I definitely hadn't expected, but it sent a visible jolt through me, my cock twitching, aching for contact.\n\nShe broke away from our kiss for a hot moment, her eyes smoldering. She studied me, or she was making up her mind, or she was teasing me. I didn't know. I couldn't tell. I just wanted her. She dove back in, her lips hungrily meeting mine at the same time she grabbed my cock. I moaned into her mouth and she let out a little gasp. I bucked my hips involuntarily and she fondled me.\n\n\"It's so big,\" she whispered.\n\n\"It likes you,\" I joked.\n\n\"I like it, too.\"\n\nShe stroked and squeezed my cock as we made out, driving me crazy. She kept avoiding the tip of my cock, for some reason. I was on fire, my whole body ultra-sensitive. She explored the size and shape of my cock, feeling its length and girth with her fingers.\n\n\"Touch my balls,\" I told her, and she quickly found them again and gently touched and caressed them. We kept making out like this, with her cupping and feeling up my balls, her fingertips occasionally dancing really close to my asshole. I wondered if she had a thing for that, or, given her inexperience, if she even realized where she was touching.\n\n\"Do my cock again,\" I said. She danced her fingers up my shaft and felt the head of my dick. Finally! Either she was teasing the hell out of me or she had been shy to touch that particular spot, but I was on edge with desire, and let out a long, hot breath as I watched her touch me there. She ran her fingers around the edge of the glans, then all over the tip until she gripped me, squeezing gently.\n\n\"Stroke up and down,\" I managed to say between kisses. She obliged immediately, giving her first hand job. She wasn't doing it quite right, but I found her inexperienced enthusiasm endearing.\n\n\"Like that?\" she whispered. I put my hand on hers and showed her how to do it. I guided her for a bit, then I let go and stroked her hair and ear while we kissed and she got used to the rhythm. Turns out, I totally have a thing for receiving a hand job while making out. Who woulda guessed?\n\n\"You are so hot,\" she panted between kisses, eyes taking in my whole naked torso, stroking my cock the whole time. Pre-cum was leaking from the tip, but she either didn't notice or didn't care.",
        "\"Me? That's how I feel about you,\" I said.\n\n\"Yeah?\"\n\n\"Look how hard you make me,\" I said.\n\nShe giggled. \"Sooo hard. And soft at the same time. And hot. I can't believe I'm doing this!\" She paused in her stroking and pointed my cock straight up and just stared at it for a few seconds. \"Wow, just look at this thing.\" She admired me for a moment, then resumed the hand job, settling in to a good pace. A little too good.\n\n\"Slow down,\" I panted. \"If you keep doing that, I'll cum.\"\n\nShe glanced at me. I thought I understood. \"Orgasm,\" I said. \"My semen will shoot out. It's messy.\"\n\nHer look changed to one of amusement. I couldn't tell if it meant she already knew that, or if this really was new information for her. She'd said she hadn't had a sex ed class, and she claimed she hadn't looked up sex stuff on the internet.\n\nAt first, she slowed down, then she apparently changed her mind. She put her mouth up to my ear and whispered, \"I wanna see.\" She started pumping furiously, and within ten seconds I groaned and twitched, then streams of white cum blasted out of my cock, landing on my chest and stomach, one after another.\n\n\"Keep going!\" I urged, and she complied, pumping me as I kept cumming, weaker now after the first couple blasts, but my cum was still emptying as my orgasm swept over me, her hand still stroking my most private part.\n\n\"Okay... you can stop,\" I said, breathless and over-sensitive. I looked down my body at the aftermath. I was covered in my own cum up to my collarbones, with plenty on my chest and stomach. Her hand was still wrapped around my oozing cock, cum leaking from the tip and dripping over her fingers. I didn't say anything, just panted as the orgasm subsided. She let go and ran her cummy fingertips all around the wet and slick head of my cock while I watched in lewd fascination. My cock twitched. She giggled.\n\nFinally, she looked up at me, her eyes wide, her lips parted, her face flushed. \"That... was... amazing!\" she gushed.\n\n\"You made a real mess of me, that's for sure,\" I laughed, the deep post-orgasm relaxation settling in. I noticed I had managed to hit her cheek with a spurt of cum. \"And your cheek.\"\n\nShe wiped at her face with the back of her hand and gave me an incredulous look. \"Damn, that stuff shoots far.\"\n\nI didn't care at all that my messy cock was on full display, and I made no effort to cover up, or to even move. Eventually, I sat up on one elbow and surveyed the situation. I noticed she was, once again, gazing at my cock. We made eye contact and I smiled. \"Uh, do you have a towel I could use?\"\n\nAfter we cleaned up, I sat on the couch with her, fully clothed now. She leaned against me. I found her hand with mine and we entwined our fingers.\n\n\"Are we okay?\" she asked worriedly, looking up at me with her big brown eyes.\n\n\"What do you mean?\"\n\n\"I mean, did we cross a line?\"\n\n\"Look, we're boyfriend and girlfriend. We're both adults. What we do in private is nobody else's business.\"\n\n\"Yeah... it's my hang ups talking, I guess. I hate how deep that stuff is embedded inside me. I'm sitting here feeling all guilty because of what we just did, and I'm telling myself to stop feeling that way.\"\n\n\"Well, I'm here to support you,\" I said, not knowing how else to handle this.\n\nShe let out a long sigh. \"I'm so tired of feeling guilty about everything.\" She looked at me, her gaze fierce. \"I want to change! I want to do... things...\"\n\n\"Like what?\"\n\nShe fished around for the words, before finally settling on, \"I want to do everything with you. Everything a man and a woman can.\"\n\n\"Everything?\" I wondered if she realized what that would entail.\n\nShe gave a small nod. I still doubted she meant everything, but that was a topic for later.\n\n\"Well, you just gave me a hand job,\" I said. \"What do you want to do next?\"\n\nShe blanched. \"Oh god, I don't know if I can even answer that. You'll have to take the lead.\"\n\n\"I don't want to rush you, or push you into anything you don't want to do,\" I said, trying to sound as reassuring as I could.\n\n\"When you were telling me what to do... for the hand job... that was exciting,\" she said, dropping to a whisper. \"What if I let you choose what to do, and I'll do what you tell me... and if I'm uncomfortable with something or don't want to do it, I just say stop and then you stop?\"\n\n\"And for my part, I promise that if you say stop, I will.\"\n\nShe let out a long sigh and pressed herself up against me. \"For now, let's just cuddle.\"\n\n<p align=\"center\">***</p>\n\nA couple days later, Nat texted me in the morning.\n\nNat: The girls are all in town. I need to hang out with them\n\nMe: Have fun\n\nNat: kiss!\n\nI had to get some stuff done anyway, so if she was unwinding with her friends, that was perfectly fine by me. I got my laundry done, did some grocery shopping, cleaned up my apartment, and took care of some other errands. It was a productive morning, all in all.\n\nAround lunchtime, just as I was thinking about what to eat, Nat texted me again.\n\nNat: Wanna come get lunch?\n\nMe: Good timing. Where?\n\nI was expecting the food court, but she said to meet her in a restaurant on the riverwalk, near the one we went to on our date. I got ready and headed over.\n\nWhen I arrived, I was surprised to see her friends. She hadn't mentioned they were still with her, but I didn't mind.\n\n\"Ladies,\" I said in greetings, giving a theatrical bow.\n\n\"Hi Rob,\" they practically sang together. They all wore big, pretty smiles. The only way it could be more obvious that they'd been talking about me would be if one of them just came right out and--\n\n\"We were talking about you,\" Ashley said, giving me an exaggerated wink.\n\n\"Uh oh,\" I said. The girls all giggled.\n\n\"Ash,\" Natalie said in a tone I could swear was threatening, but the other girl just smiled innocently and blinked.\n\nI gave Nat a quick kiss and sat down at the table with them. Ashley, in particular, seemed extremely pleased to see Nat and me do that. She rested her chin in her hand and wore a very satisfied grin.\n\nAfter we ordered, Nat excused herself to hit the restroom. I expected the others to go with her, girls being girls, but they all stayed.\n\n\"You two are adorable together,\" Monica said as soon as Nat was out of earshot.\n\n\"One quick kiss and you can already tell?\" I joked.\n\n\"She really likes you,\" Ashley said.\n\n\"I know,\" I replied.\n\nBrooke, who had been silent since the greeting, leaned forward and reached out to place her hand on my wrist. \"Rob, what do you want out of this relationship? You gotta understand, we're all pretty protective of Nat. She's kinda... messed up, psychologically. We don't want to see her get hurt.\"\n\n\"Don't say that,\" Monica said. \"She's not messed up. She's just dealing with a lifetime of bullshit.\"\n\n\"She's literally trying to deprogram herself from an upbringing by extremists. Her parents are practically cultists,\" Brooke said, looking at Monica. \"She should go to a therapist.\"\n\n\"I want a real relationship with her,\" I said. \"I mean, long term.\"\n\n\"Have you guys fucked?\" Ashley asked.\n\n\"God, Ash, you can't just ask him that!\" Brooke said, aghast.\n\n\"Well?\" Ashley pressed on, ignoring Brooke. Monica watched me intently.\n\n\"No,\" I said. \"Given what she's dealing with in her head, we agreed not to push her.\"\n\n\"Good,\" Brooke said. \"Let her figure it out. She needs time to decompress and to learn who she is. Support her, but don't try to control her. Be her friend. That's what she needs most. A normal male friend, so she can get used to what it's like.\"\n\n\"Those Psych classes are paying off,\" Monica said dryly. Brooke gave her a look, but then she shrugged.\n\n\"That's pretty much the way we've been handling it,\" I said.\n\n\"Pretty much,\" Ashley said with a wink.\n\n\"You're a good guy, Rob,\" Monica said. \"We like you. She really likes you.\"\n\nBrooke nodded. \"It would be awesome if you ended up together, but you're what, twenty-one?\"\n\n\"Twenty-two,\" I said. \"I'm about a year older than Nat.\"\n\n\"There's no need to rush it. Not everyone is ready for marriage at our age.\"\n\nMy eyebrows shot up. \"Has she talked about that?\"\n\nAshley giggled. \"We're girls. We talk about everything.\"\n\n\"Oh god,\" I groaned. The girls all giggled.\n\nNatalie came back to the table. \"What'd I miss?\"\n\n<p align=\"center\">***</p>\n\nLater, when we were alone together, Natalie asked me about it. \"What did Brooke talk to you about?\"\n\nI gave her a look. \"How do you know Brooke talked to me about anything?\"\n\n\"Because she said she was going to.\"\n\nI gave an exasperated sigh. \"You girls are something else.\"\n\nShe looked at me, confused. \"What?\"\n\nI decided to just tell the truth. \"She said not to rush you. She said what you need most is a male friend who is normal. So you can learn what normal is.\"\n\nNatalie thought about this for a while, chewing her lower lip. \"I can't decide if I'm grateful or if I kinda resent them for treating me like I'm this naive little girl.\"\n\n\"They care about you. They don't want you to get hurt.\"\n\nNatalie sighed. \"I know. They're good friends. They wanted some time to talk to you without me there.\"\n\n\"Okay. Things make a bit more sense now.\"\n\n\"Hm?\"\n\n\"It did feel like they were testing me. Ash asked if we've had sex.\"\n\nNatalie closed her eyes and sighed. \"Of course she did.\"\n\n\"And... now that I think about it, I'm pretty sure my answer to that question was really important to them.\"\n\n\"Huh?\"\n\nI was careful to keep my voice neutral. I didn't want Natalie to think I was accusing her of anything. \"They already knew the answer. They wanted to hear what I would say.\"\n\nHer eyes went round. \"I didn't tell them any details. I swear!\"\n\n\"Look, it's okay--\"\n\nShe interrupted. \"I promise, Rob. But... I think they might have...\" she winced, then finished in a rush, \"figured it all out anyway.\"\n\nI eyed her. \"Seems that way.\"\n\nShe gave me a sheepish look. \"They just kept asking... mostly Ash. Big surprise, huh? Apparently I have a terrible poker face. Not my fault, considering I've never played poker.\"\n\n\"Oh! Playing cards. You probably weren't allowed to have them, right? I've heard of that, with super religious parents.\"\n\n\"Bingo,\" she said. \"Which, incidentally, is a game I was allowed to play.\"\n\nI laughed. \"Well, I'll teach you. It'll be fun. One more step on the quest to corrupt Natalie.\"\n\nHer face went through a raft of different emotions, starting with offended horror, which quickly turned into shocked-but-maybe-kinda-delighted, then embarrassed, then a couple I couldn't identify fast enough, and finally red-faced amusement. She shook her head and laughed under her breath. \"You are such a dork.\"\n\n<p align=\"center\">Chapter 11: At Her Place, At Her Pace</p>\n\nWe got together at her place a couple days later. At this point, we'd get together every day if we could, but work and school kept taking up plenty of time.\n\nWe talked a lot, and the conversation eventually settled on matters of physicality as related to human relationships, i.e. sex.\n\n\"Have you talked about sex with the girls?\" I asked.\n\nNatalie gave me a flat look. \"I didn't tell them any details, Rob.\"\n\n\"No, I mean just in general.\"\n\n\"Oh. Then, yeah.\"\n\nI waited expectantly.\n\nShe blushed. \"They're all more experienced than I am. For them, it's normal. For me... they figured out I'm a virgin pretty fast. And not just a virgin, but, like, zero experience.\"\n\n\"So the other day, when they grilled you about us, how'd that go down?\"\n\nShe gave me a resigned look. \"They'd ask and I'd blush and they'd know the answer.\"\n\nI grinned. \"So they know what we did at your place after the movie?\"\n\nShe blushed.\n\n\"I see,\" I laughed. \"I guess it's time to teach you to play poker. Gotta get that face under control.\"\n\nShe laughed with me, then cut off abruptly. \"Wait. You're okay with them knowing?\"\n\nI shrugged. \"You didn't tell them, they just figured it out themselves, so it honestly isn't bothering me. As long as they don't think I'm taking advantage of you.\"\n\n\"The thing is, they don't care.\" She stopped and waggled her hands. \"No, wait, I'm saying this wrong. They do care, but they aren't judgmental about it. Monica is engaged, and both Brooke and Ashley have had multiple boyfriends. They've all had sex, and the way they talk about it... they like it. They think it's fun. They don't have all this self-loathing that creeps in any time they're starting to enjoy themselves.\"\n\nI paid special attention to that last bit, but I didn't know how to respond. I decided I needed to do some research on how to help someone caught in her situation. I wondered what Brooke would say about that.\n\nNatalie must have interpreted my silence as me waiting for more. \"It's... that's...\" She gave a frustrated sigh. \"I want to feel the way they do.\"\n\n\"A good goal. Sex is fun. Or at least, it should be. It brings couples closer together.\"\n\nShe gave me a small smile and blinked rapidly, which I studiously didn't notice. \"Remember what I said, after the movie? After the hand job?\"\n\nI nodded.\n\n\"I said you should choose what we do. I still want to do that.\"\n\n\"Brooke said I shouldn't push you.\"\n\n\"This isn't pushing. I'm telling you I want you to choose, and I'll veto anything I'm not comfortable with.\"\n\n\"There's a certain logic to that, I admit.\"\n\nShe gave me an open look. \"Well?\"\n\n\"Uh... I haven't really thought about it. My mind's been on other things.\" I studied her, thinking fast. \"We should start with something small and easy. I think we need to get you used to having me touch you.\"\n\n\"Okay,\" she said, looking at me with those big, dark eyes, her expression quickly becoming eager and excited. She was dressed in tight jeans and a tight blue v-neck t-shirt. I also had on jeans and a t-shirt. Very standard casual attire for us. She had her hand on my upper thigh, practically touching my crotch, though I don't know whether or not she realized it.\n\n\"Um,\" I said, looking around. \"How about you lie on the couch, and I'll kneel right here.\"\n\nShe stood up while I repositioned myself, and then she crawled onto the couch and stretched out on her back.\n\n\"I want you to feel safe,\" I said as I placed my hand on her shoulder. I gently ran my fingers down her arm until I found her hand with mine. I gave it a little squeeze.\n\n\"I do feel safe,\" she said as I did the same thing with her other arm, again ending with a little squeeze of her hand.\n\nI waited for a few seconds, then I ran my fingers up the inside of her arms, left and right. She closed her eyes and said softly, \"That feels nice.\"\n\nI caressed her shoulders, then slid my fingers up her neck. I touched her jaw and ears, then traced her eyebrows with my thumbs, before leaning in for a quick kiss. She smiled. \"I liked that.\"\n\nI ran my fingertips down her face, brushing across her freshly-kissed lips and over her chin, then down her throat to her collarbones, where I stopped. \"How are you feeling?\" I asked.\n\n\"Good,\" she said. \"Relaxed. Safe.\" Then, in a quieter voice, \"You can keep going.\"\n\n\"Legs next, then.\" I shifted my position and gently gripped both of her feet. She twitched; she was ticklish. She did her best, and I moved on quickly. I worked my way up her ankles to her calves, to her knees, pressing slightly as I move up the outside of her thighs. I kept going all the way up her hips to her middle, but she tensed up when I reached her ribs, so I stopped. I then reversed all the movements back down her legs, to her feet, and let go, sitting back on my heels. \"How was that?\"\n\nShe let out a long breath as she found my hand with hers. \"Part of me says that was already too far. Can you believe that?\"\n\n\"I suppose I can.\"\n\n\"Ha,\" she said, without any mirth. \"After what we did, right here on this same couch a couple days ago? Why should I get to touch you everywhere but freak out when you barely touch me?\"\n\n\"I figure let's take it one small step at a time, right?\" I said, both explaining and wanting her approval. \"No need to rush things. Let's have fun and enjoy ourselves. There are lots of things we can do that build up to... uh, bigger things.\"\n\n\"Like hand jobs,\" she offered.\n\n\"Yeah. We kinda skipped a few steps there. Not that I'm complaining.\"\n\n\"Yeah, yeah.\" She winked at me. I don't know if she did this stuff on purpose or if it was just instinctual, but she sure had a way of behaving super flirty and sexy and making it look natural. \"So...?\"\n\n\"Do you want me to touch you more?\" I asked.\n\n\"Yes,\" she said emphatically.\n\n\"But you just said--\"\n\n\"I know what I said. My brain wants two opposite things right now. One, for me to run away and hide. Two, to feel your hands on me again. I liked it, but I'm also afraid of it.\"\n\n\"Well, how the hell do we proceed?\" I asked with a gentle laugh.\n\n\"Give me your hand,\" she said. I complied. \"I'm squishing down the part of me that wants to run away and hide.\" She squeezed both of my hands in hers. \"And I want to feel these all over my body.\"\n\n\"All over?\" I asked, raising an eyebrow.\n\nShe nodded, then swallowed and licked her lips, then let go.\n\nI got up on my knees and cracked my knuckles. \"Turn over, then. I haven't done your back yet.\"\n\nShe rolled over on the couch, then pulled up her left arm and rested her head on it, watching me.\n\nI proceeded with a light back massage, rubbing her shoulders and back, up and down. I wanted to get her used to my touch. Plus, she was enjoying it, and I was in no hurry.\n\nShe closed her eyes and sighed happily. \"I guess I'm pretty tense. This feels great.\"\n\nI kept at it for a few more minutes, searching for knots and working on them with my fingers and thumbs. I was no massage therapist, but one of my previous girlfriends had been, and I picked up some things from her.\n\n\"You've been at the gym a lot lately, haven't you?\" I asked conversationally.\n\n\"A bunch when you were gone, not as much with you home. It's a good way to release stress. Plus, the whole being in shape thing.\"\n\n\"Ever had a guy ogle you at the gym?\"\n\nShe laughed. \"Of course. I bet every girl in the gym gets stared at. What about you? Any girls ever watch you?\"\n\nI found a knot and kneaded it with my thumbs. \"It's a work gym. We all know each other, or at least work together.\"\n\nShe inhaled sharply. \"Ooh, gentle.\" After a while, she said, \"You didn't answer my question.\"\n\n\"If anyone has been staring at me, I haven't noticed.\"\n\n\"Does that make you think you're ugly, or undesirable?\"\n\n\"Nah, I know I've still got it.\"\n\nShe laughed. \"I like you.\"\n\n\"Well, I should hope so. I am grabbing your ass, after all.\"\n\n\"What? You're not--ahhhh!\" she yelped in surprise as I made good on my words. She didn't pull away as I gave both of her ass cheeks a healthy fondle, squeeze, and pat.\n\nShe giggled. \"You dork.\"\n\n\"Did you like that?\"\n\n\"Mm hm,\" she said.\n\nI kept at it for a while, copping a nice, long feel of her shapely, toned ass. I glanced at her face just in time to catch her looking at me. Her expression was definitely pleased.\n\n\"Turn over,\" I said, sitting back on my heels.\n\nShe wore a sultry expression as she considered my words for a moment, then she rolled over onto her back. She laced her fingers together, resting them on her stomach, and crossed her ankles. She watched me, still wearing that same expression. \"What's next?\" she asked softly.\n\n\"That depends on where I can I touch you,\" I said smoothly, knowing it could end the experience depending on how she reacted, but I wasn't going to proceed without her permission.\n\nShe bit her lip for a second, then swallowed. \"Anywhere.\"\n\nI nodded and my heart rate sped up. I leaned in for a kiss. \"Let's start here, then.\" Her eyes were wide and hungry. I briefly touched my lips to hers, and settled my open hand on her flat stomach. I slid it up over her ribs and bumped into the bottom curve of her bra. I went in for another, deeper kiss.",
        "She opened her mouth to say something, but as my lips met hers, my hand moved up and over the smooth mound of her right breast. She sucked in a sharp breath as I touched her. She was wearing a padded bra, so I couldn't really feel much through it, but it was still exciting enough. After a while, I gave her a gentle squeeze. She kissed me eagerly. I squeezed harder. She moaned against me.\n\n\"Oh...\" she breathed. I could feel her heart pounding. I let go of her breast and ran my hand roughly down her chest, applying a fair amount of force. I bumped into her clasped hands and gently pulled them apart so I could continue the journey. I veered away from her crotch, though I still came close as I slid my palm down her thigh. I ran my hand back up her body, this time coming to rest on her left breast.\n\n\"Can't forget about this one,\" I whispered to her. She clutched at my arm, but her expression was fierce and excited.\n\nI ran my hand down her body, then back up, each time coming to rest directly on one of her breasts or just tracing the contour. My fingers were little men, hiking over the sexiest mountains in all existence. Sometimes I worked my way up to her shoulders, or her neck, or throat, then back down to do it all again, kissing her the whole time.\n\nThen, on a trip down, I had to break off the kissing so that I could reach as I kept going until I got to her ankle. I picked up her leg and uncrossed them for her, then I slid my fingers into the gap between her knees and pulled gently, coaxing her to spread her legs.\n\nHer eyes went wide, but not with fear. She flexed her jaw and inhaled through her nose, then nodded.\n\nI worked my hand into the space between her thighs. She hesitated for a moment, then let out a shaky breath and spread her legs further, and then my hand found her crotch. To be honest, I couldn't feel a thing through her jeans, but the idea that I was pressing my hand up against her pussy was intoxicating.\n\n\"You're driving me crazy,\" she said, pulling me in for urgent kisses, fidgeting and squirming as I touched her.\n\n\"That's the point,\" I said, and she laughed, low and sensual against my mouth.\n\nShe squeezed her thighs around my hand. \"I'm trembling I'm so excited,\" she whispered, holding me tight. I could feel the truth of her words.\n\n\"Maybe we should slow down, then,\" I suggested.\n\nShe shook her head against me, then kissed me deeply.\n\nI pulled her off the couch as I rolled onto my back on the floor. She ended up sitting on my stomach. \"Lift up for a sec,\" I said, then I took a moment to stick my hand down my pants and adjust the position of my cock so that it was lying flat on my abdomen and pointing straight up my body. She watched what I was doing with an interested eye. I pulled my hand out and then pushed her back a bit and down until she was straddling me directly, her crotch on mine. I lifted upward with my hips to give her the idea.\n\nShe leaned forward, one arm on either side of my head, and kissed me hungrily while she pushed her hips down against me.\n\nI ran my hands all over her shoulders and arms, her back and her waist, her ass and her thighs, squeezing and gripping and fondling. She gazed into my eyes, her expression intense and passionate.\n\nI kissed her chin and down her jaw. She raised her head to give me more access. I trailed kisses down her neck, while she moved her body forward like an offering. I kissed down to the collar of her shirt, then took my hands and cupped both of her breasts at the same time, squeezing them together. I tried to look down her shirt, trying to see her cleavage, but her collar was too tight.\n\nShe moved forward further, no longer straddling my cock, bringing her lower body right up to my mouth. I kissed her stomach through her shirt, then lifted the hem so I could kiss bare skin. I planted my lips all over her stomach, down to the top of her jeans. I gently toyed with her belly button piercing. I kissed my way back up, pushing her shirt up as I went. I pushed the shirt up and over her bra and kissed right up her belly, but then she stopped me.\n\n\"Okay...\" she said, panting, eyes wide. \"Okay... that's as far as I can go...\"\n\nI stopped as promised, letting her shirt fall back down. She was breathing hard, hair in disarray. She sat down on my stomach, her hands on my arms.\n\nShe looked at me and gave me a huge smile. \"That was amazing, but I'm so nervous I'm shaking.\" I took her in my arms and held her as she trembled.\n\nWith her help, I sat up and we moved back onto the couch, shifting so we could lie face to face. I rested my head on the armrest and she did the same. Our faces were only inches apart. I gently traced her earlobe, making sure to touch each of the earrings she wore there.\n\nShe took a deep, calming breath and let it out slow, getting her breathing under control. \"I got scared there,\" she admitted. \"I hate that it happened, but...\" She shook her head. \"It was, like, a physical reaction. I'm sorry.\"\n\nI shushed her. \"No need to be sorry. It's okay. We'll do this at your pace. Only what you're comfortable with.\"\n\nShe gazed into my eyes for a while, a small smile on her lips. \"You're the best boyfriend.\"\n\nI gave a mock shrug. \"Yeah, probably.\"\n\nShe kissed me. \"Alright, big boy, time to call it a night.\"\n\n<p align=\"center\">***</p>\n\nThe next couple days we were both busy, so we didn't get to see each other until Wednesday. We went on an actual date instead of just hanging out. We went to a new sandwich shop for lunch, then to a movie at the theater, and then we went to the local aquarium for a couple hours. By the time we were done there, it was about dinner time.\n\n\"I'm sick of being out,\" Natalie commented. \"We've been out all day. Let's pick up dinner and go home.\"\n\nI agreed with her sentiment. \"My place or yours?\"\n\n\"Um, yours this time. Remember that show those people in the theater were talking about? It sounded good. Wanna check it out?\"\n\nWe got our take-out and headed to my place. We found the TV show in question and started the first episode while we ate our dinner.\n\n\"Hey. She looks like me,\" Natalie commented. I looked up to see who she was talking about, but I missed the scene because I was preoccupied with my food. I had to wait for the character to show up again, and then I glanced at Nat, then back at the screen, then back to Nat.\n\n\"Yeah, from certain angles, I guess so.\"\n\n\"Who's prettier, me or her?\"\n\nI gave her a comical look. \"You and your trap questions. Like I would ever say anything other than you. You are prettier, Nat.\"\n\nShe stuck her tongue out at me and giggled.\n\nThe character in question turned out to have quite the potty mouth, which seemed to really intrigue Natalie. At this point, we'd seen plenty of shows with plenty of swearing, but somehow the girl looking like her and swearing like a sailor made it more noteworthy.\n\n\"What would you do if I talked like her?\" Natalie asked me as we cuddled on the couch. Dinner was over and the show was pretty good, so we were several episodes in at this point.\n\n\"Depends how you use it,\" I answered honestly.\n\n\"What do you mean?\"\n\n\"There's a guy at work who swears constantly. It kinda gets irritating to talk to him for too long. It's like spice. You can't just dump a pound of herbs and spices on your meal; that'd be disgusting. If you use none at all, that might be too bland. You gotta sprinkle the right amount on.\"\n\n\"So you think I'm bland,\" she stated flatly, though I recognized her tone as amused.\n\n\"Nah, you swear a bit. You could spice it up more and you'd be fine.\"\n\nShe gave me a look like she didn't believe me.\n\n\"Like I said, it depends on how you use it,\" I explained. \"If you were swearing at me, like you were mad at me, then no, I wouldn't like that. But if you were upset at something or someone else and swore, that'd be fine. If you swore when we were doing--\" I cut off, swallowing my words.\n\n\"Doing what?\" she asked, giving me a sly look.\n\nI cleared my throat. \"Never mind.\"\n\n\"Doing what, Rob?\" she asked in a sultry voice. \"Something... naughty?\"\n\nI blushed and boy did she notice. Her eyes went wide. \"Oh my god, I made you blush! You!\" She got a huge grin on her face and she tickled my ribs. \"You would like it if I swore! It would turn you on, wouldn't it?\"\n\nI coughed. \"Maybe.\"\n\n\"Well, well, well,\" she said, a delighted smile spreading across her face. \"What to do with this information... hmm...\" She had a twinkle in her eye.\n\nMy heart rate increased even as I thought how silly this situation was. Was I really getting turned on by even just the thought of Natalie swearing? Have I always had some pretty-girl-swearing fetish, or was this some weird result of her sexual hang ups starting to affect me? Was it even the swearing, or was it the thought of corrupting her, of getting her to do naughty things? I didn't know, but I was suddenly very curious to find out.\n\nI delicately placed my fingertip on her lips. \"Say a swear word. I dare you.\"\n\n\"Damn,\" she said immediately.\n\n\"Oh baby,\" I groaned comically and attacked her with my lips. \"That's so hot!\"\n\nShe laughed and pushed me away. \"I'm trying to watch the show!\"\n\nWe watched one more episode, then decided it was too late to start another. By mutual agreement, we started making out. I didn't try to get under her clothes or pull her shirt up, not after last time, but I definitely went for the rest of the things we had done. I squeezed her ass, I cupped her boobs through her shirt and bra. I worked a hand between her legs, feeling the heat even through her jeans.\n\nIn return, she fondled my ass and all over my body. Her hand found the bulge of my cock through my jeans and rubbed it while we made out. I loved it.\n\nEventually, she broke off, breathing hard, eyes eager and smoldering.\n\n\"We both work in the morning. I should get you home,\" I managed, trying to at least appear responsible.\n\n\"Not yet,\" she said. \"There's one more thing I'd like to do...\" She trailed a fingertip down my chest.\n\n\"Anything for you.\"\n\nHer eyes popped back to mine. \"Can I see your... you know...\"\n\nI studied her face. \"Really? Hell yes.\"\n\nI put my hands on the button of my jeans, then a thought occurred to me. \"On one condition.\"\n\n\"Oh?\"\n\n\"Let's spice up your language. No more 'thing.' I want to hear you call it my cock.\"\n\nA competitive look flashed over her face and she tried to suppress a grin. \"Really?\"\n\n\"Yep.\"\n\nHer eyes got big and she put on a jokingly serious expression. \"Well then, mister. I want to see your... cock.\"\n\n\"One cock coming up. Literally,\" I said, undoing my jeans. She giggled and slipped off of the couch to kneel on the floor. I rolled so I was on my back, then I tugged my jeans down. To my surprise, Natalie slid her fingers into the waistband of my underwear and pulled them down for me, freeing my stiff cock to the cool air. She let out a long, slow breath as she saw it again. Her hand moved almost as if she wasn't consciously controlling it. She took my cock in her hand and started stroking it up and down.\n\n\"The tip is all wet,\" she said.\n\n\"The tip of my what?\"\n\n\"Your cock,\" she said, looking me in the eyes as she said it.\n\n\"Well I was just making out with some hottie. That's pre-cum. It leaks out sometimes when a guy gets hard.\"\n\n\"Why?\" she asked as she jacked me off.\n\n\"Natural lube. For sex. Girls do it, too, when they get excited enough.\"\n\nShe blushed, but then looked at me, biting her lip. \"Well, then... I guess it's not too embarrassing to admit this.\" She lowered her voice to a conspiratorial whisper. \"I feel like I wet my pants!\"\n\n\"Ha. I'm proud to be the one who got you all hot and bothered.\"\n\nShe leaned in and kissed me. \"Yeah you big stud. You have a nice, big cock. Is that what you want to hear? Now, am I doing this right?\"\n\nI helped her get a good rhythm going, and then leaned back to enjoy my hot sexy girlfriend jacking me off. I loved that her hand was on my stiff cock. I loved that she was becoming familiar with it. I loved how good it felt. She stared intently while she stroked me, like she was memorizing every detail.\n\n\"Gonna cum soon,\" I said. She glanced at me, her eyes widening in excitement. She picked up the pace, stroking fast. The feel of her hand drove me crazy and I thrust upward as my orgasm exploded. Cum squirted out of my cock straight up into the air, or at least it would have, but she had cupped her other hand a few inches away from the tip, keeping things more local. She kept pumping while I orgasmed, cum continuing to squirt out, then just leaking out. Eventually I had her stop and I just lay there panting and feeling amazing.\n\nShe gave me a satisfied grin. \"Did that feel good?\" She looked down at my cum-covered cock and tickled the tip with her fingers.\n\n\"Hell yeah,\" I managed.\n\nAfter a while, she let go of me and stood up. \"I'll go grab a towel.\"\n\n<p align=\"center\">Chapter 12: Bad News and Naughty Fun</p>\n\nChristmas came and went. Natalie and I got each other fun gifts, but nothing extravagant. We spent a few hours at my parents' house, then packed our presents into the car and headed for my place. It had snowed heavily a couple days before Christmas, but there had been enough time for the roads to be plowed. The city was white and quiet.\n\n\"I have some bad news about work,\" I told her as I drove.\n\n\"Uh oh,\" she said. She put her hand on my knee and waited for me to continue.\n\n\"There's a new development. Remember that new program I spent all that time setting up at our other locations?\" She nodded. \"It needs to go live in six weeks, but there's a major update that needs to take place first. That means...\"\n\nShe picked up the thread. \"More business trips.\"\n\n\"Just one more, but it's a long one. I'll go from site to site without coming home in between. I'm leaving the day after New Year's. And... I'll be gone for four weeks straight.\"\n\nShe looked at me incredulously. \"Who goes on four week business trips?\"\n\n\"It's sort of an emergency situation.\"\n\nShe sighed. \"Damn. That sucks.\"\n\n\"Yeah, but my boss says the CEO promised another bonus when it's over. The bonus last time was pretty big.\"\n\nShe took my hand in hers. \"I get it. You're trying to tell me you have to do this. It's okay. I understand. It's just... for four weeks? That's really long.\"\n\n\"I know. At least we can talk as much as we want, but I'm really going to miss you.\"\n\n\"A month without you...\" She leaned against me, clutching my arm. She sighed again. \"At least we have the holidays. Are there any more trips after this one?\"\n\n\"Not that I know of. Getting this program up and running has been huge. Part of this trip is training them to do future updates themselves. It's not just software. Anyway, once it's rolled out I can't imagine they'd need me to go for so long again, if at all.\"\n\nWe drove through the quiet city, the mood pretty glum, though she understood the need and even managed to joke. \"Maybe I'll get another earring or two while you're gone.\"\n\n<p align=\"center\">***</p>\n\nNat had to work on New Year's Eve, but we got together as soon as she got off, and we still managed to have a good time. We even got a little tipsy on champagne, which was very unusual for either of us, as neither of us much cared for alcohol. The champagne had been a gift from work, and on a whim, we'd decided to try it out. It wasn't bad, or at least, was good enough that we finished off the bottle, which was way more than either of us were used to.\n\nIn order to avoid driving while even a tiny bit drunk, we decided it would be best if Natalie slept over at my place. In a veritable explosion of sensible decision-making, we thought it would be a brilliant idea to drag out my sleeping bags and sleep on the floor in front of the TV, which was playing one of those 12-hour fireplace videos. Before we fell asleep, we giggled like a couple of idiots and I'm honestly surprised we didn't get up to anything sexual.\n\nWay past midnight, we were startled awake by window-shaking booms, flooding the entire apartment with eye-searing light, and a very grumpy Natalie said some uncharacteristic things.\n\n\"Oh my god, what asshole is doing fireworks at TWO IN THE DAMN MORNING.\" She fell silent until there was a fresh explosion, then mumbled, \"Go kick their ass, Rob.\"\n\nI blinked in surprise at all this coming from her, but when I finally responded, she had already fallen back asleep. Fortunately, the firework-asshole didn't bother the neighborhood anymore.\n\nAfter all that, we unsurprisingly slept in very late on New Year's Day. I asked her if she remembered the fireworks, but she didn't. She helped me pack for my trip, and then we lazed around and accomplished little other than managing to drag ourselves over to her place so she could get fresh clothes. Once there, we didn't have the motivation to return to my apartment, so we just stayed put.\n\nThat night was the last night before I was going to fly out of town for a month, information that weighed heavily on us. At her lead, we had dialed the sexual antics way back. As awesome as dry humping crotch-to-crotch while fondling her boobs through her clothes had been, she admitted it had kinda freaked her out and she needed time to adjust, mentally, so over the past couple weeks, we'd only been making out. I had an inkling of what was going on, but I wasn't sure how to bring it up, or even if I should.\n\n\"I'm struggling,\" she admitted. \"My inhibitions are, like, I dunno, roadblocks. I'm trying to find a path around, but it's hard.\"\n\n\"You're not running away from it, though,\" I said.\n\n\"No, I'm not. I don't even want to. I don't feel that urge anymore, to just run and hide. So that's some real progress, right?\"\n\n\"Sounds like it.\"\n\n\"I feel guilty when I think about what we've done, but I also really liked it, which is weird. It's some sort of cognitive dissonance. Which is a fancy way of saying it's sucky to have these warring thoughts in my head.\"\n\n\"It seems like you're winning the fight, though. Little by little.\"\n\nShe snorted. \"At this rate, I'll be old and gray before I have sex.\"\n\n\"These things take--\"\n\nShe cut me off. \"Time, time, time! Everything takes time! I know. I get it. I look back on my past self and the progress is there. I can see it. I go through this thought exercise when I need to remind myself. I even wrote it all down, so I can look at the list and say 'yeah, it's happening,' but I can't shake the frustration.\"\n\n\"What's this list?\" I asked, curious.\n\nShe shrugged. \"Just a list of stuff I've done that I used to be too scared of, or not allowed, or whatever. It's not just a list; it's my journal. And no, I'm not showing it to you.\"\n\n\"That's okay. I wouldn't ask for that.\"\n\n\"Good,\" she said. \"So that brings us to now. We've been going at my pace, but looking back, I'm all over the place, aren't I? Back and forth, practically random. I'm lucky you're so willing to go along with it. If you were just wanting to get laid, I assume you'd have moved on long ago.\"\n\n\"Probably,\" I said without thinking. I winced inwardly, hoping this wouldn't cause any problems.\n\nInstead, she kissed my neck and hugged me tight. \"I'm sorry,\" she said.\n\n\"It's your body. What you do with it, when, and with who, is your choice.\"\n\n\"With whom,\" she said.\n\n\"Whatever.\"\n\nShe tickled me. \"But that's just it, isn't it? It's my body, but I'm letting other people tell me what I'm allowed to do with it.\"\n\n\"They've dug their hooks in, really deep in some cases, so it takes time--\"\n\n\"Oh god, stop with the time,\" she groused.\n\n\"Look,\" I said. \"I still think taking things at your pace is the best way forward. If we go beyond what you're comfortable with, maybe it'll cause problems. Give you a complex about sex or something.\"\n\n\"Oh, I already have a complex about sex,\" she said, rolling her eyes. \"Deeply ingrained. Sex is dirty, sex is a sin, if you have sex before marriage, not only are you a slut who is going to hell, but you are also damaged goods that no man will want.\" She made a face. \"As if being unwanted by a man would somehow be worse than going to hell.\" She got increasingly angry as she spoke. \"It's all... all such bullshit.\"",
        "\"Wow.\" This was the first time I'd ever heard her say that word.\n\n\"I'm sorry,\" she said automatically.\n\n\"No, don't be sorry,\" I interrupted. \"Let it out. You're angry about this. It's okay to feel that way. Don't suppress it. Maybe some strong emotion will dislodge those hooks.\" I fixed her with a serious gaze. \"Don't hold back. Go for it. Say it again.\"\n\nShe hesitated for a moment, then said it more quietly than the first time. \"It's bullshit.\"\n\n\"Yeah. But it's bullshit you have to deal with, one way or the other. Remember that you're not alone. You have Ash and Monica and Brooke... and me.\"\n\nShe looked at me with her big, dark eyes. They held unshed tears which she was trying to blink away. \"Maybe I've been wrong about this...\"\n\nI waited, but she didn't continue after trailing off, so I gently prompted her. \"Wrong about what?\"\n\n\"Sex,\" she said simply, though she buried her face in my chest as she spoke.\n\nAn image popped into my mind of the two of us having sex. An involuntary jolt shot through me, though I did my best to hide it. I needed to stay focused. This was about her, not me. \"What do you mean?\"\n\n\"We've been taking things at my pace, but I have so many hang ups... maybe that's the wrong way to handle it. Maybe we should do things differently. Like, at your pace, or whatever.\"\n\nI chuckled. \"I'm a guy, Nat. You're a hot girl who likes me. My lizard brain's pace would be to strip you naked and take you to Pound Town right here, right now.\"\n\n\"Pound Town? What the--\" she giggled.\n\nI continued. \"And then at least once more before we fall asleep together, naked in bed, and then again in the morning. Or maybe in the middle of the night.\"\n\nShe laughed out loud. \"You animal!\"\n\n\"An animal with amazing self-control, I'd like to point out.\"\n\n\"Yeah, you do have that,\" she said. She pressed herself close, squeezing her legs together. \"What you just said... that was hot,\" she said softly. \"I can't even bring myself to say stuff like that... but you just blurt it right out. I envy you.\"\n\nI stroked her arm for a few seconds while I thought. \"But... that's not what you want, is it? I would never forgive myself for taking advantage of you.\"\n\nShe grimaced and shook her head. \"Part of me wants to just go for it. It sounds awesome! Let's just do it like you said, right here, right now! But then I can already feel myself closing in, closing down, shying away, pretending I didn't think those things, pretending I didn't have those feelings.\" She balled her hands into fists. \"God, it's so frustrating. It's like I'm programmed.\"\n\n\"You are. I mean, that's why they call it that. Something happens, and you're conditioned to automatically respond in a certain way.\"\n\nShe just looked at me for a while, her jaw occasionally working like she was going to say something, but it took a while before she finally did. \"Thanks for sticking with me.\"\n\n\"I care about you, Nat. Not just your body.\"\n\n\"That's why you're the best boyfriend. I feel so safe with you.\" She studied my face, her mouth pressed into a slight frown. \"I... I do want to progress our relationship.\"\n\n\"Okay,\" I said. \"We can talk about anything. Talking is safe. So... let's talk about what you want.\"\n\nShe gave me a stressed look. \"Maybe that's the problem. If we talk about it, it lets me think about it, which gives time for all that stuff in my head to come and mess everything up.\"\n\n\"So just act. Be impulsive.\"\n\nShe looked at me, one eyebrow raised. \"Is it impulsive if you tell me to do it? Maybe--\"\n\nBut then she stopped short. \"I'll be right back.\" She disentangled herself and stood up, then went into her bedroom for a couple minutes before returning. She was wearing the same t-shirt as before, but she had changed into a little pair of cotton shorts.\n\n\"You're leaving in the morning,\" she said. \"And this time you're going to be gone for a long time.\" She straddled my legs, sitting on my thighs. \"Way too long.\" She caressed both of my shoulders, then moved her hands down to my biceps, her fingers dancing their way down my forearms, until she took my hands in hers.\n\nShe swallowed, then licked her lips. \"I'm tired of being scared.\" She took a deep breath and let it out slowly. She leaned forward to place her mouth right next to my ear, then whispered, \"Remember when I gave you that little fashion show and I said something about another surprise?\"\n\nI tried to keep an eager smile off of my lips. She must have noticed my lips twitching, because she gave me a shy grin as she leaned back. \"If you can guess what it is, I'll show you.\"\n\nI was instantly intrigued. \"If I guess wrong?\"\n\nShe stroked her jaw, her face taking on a serious expression. \"Then, sadly, you'll head off to Seattle wondering what in the world your little Natalie was wearing under these clothes.\"\n\n\"Ooh! This is a high stakes game.\"\n\n\"The highest. Now...\" She kissed me on the lips. \"Guess.\"\n\n\"Do I get any hints?\"\n\nShe shook her head, a slow smile spreading across her face.\n\n\"How many guesses do I get?\"\n\nShe held up one finger. Her grin had widened, now showing teeth.\n\n\"Oh shit,\" I exclaimed. \"This is life or death! Let me think... you already showed me your swimsuit, so it's not that. So maybe it's lingerie. That would be awesome. But wait, what if it is a swimsuit, one of those itty bitty bikinis. Hmmm. That would also be awesome.\" I opened my eyes wide in pretend shock. \"Oh ho ho ho, what if this is a trick question and you're naked under there?\"\n\nShe arched one eyebrow and gave me a mysterious smile. She placed the tip of her finger on my lips. She emphasized each word as she said, \"No. Hints.\"\n\nI tried to make up my mind. Which of those things was most likely? None of them, to be honest. But I ruled out her being naked, because she had specifically said she was wearing it. Unless she really was messing with me, and meant she was wearing her birthday suit. Damn! No... I really didn't think that was it. So bikini or lingerie. I racked my brain trying to come up with anything else she might be wearing. While there were other options, I didn't think any of them were like her.\n\n\"Ten seconds,\" she said in a sing-song voice.\n\nWhatever it was, it was going to be sexy. Racy... skimpy, or she wouldn't have been scared to show me. I desperately willed my eyes to see through her shirt, but, sadly, they failed me in my hour of need.\n\n\"Five.\"\n\nShit!\n\n\"Four.\"\n\n\"Bikini!\" I said.\n\n\"Aw, not even going to let the count get to one?\" she teased.\n\n\"Well?\" I asked expectantly.\n\nShe stuck out her tongue. \"Wrong.\"\n\n\"Damn!\" I put on my best disappointed face.\n\nHer expression was difficult to read. I thought she looked excited, but I didn't want to push her. But I also really wanted to know what she was wearing, if it wasn't a bikini. \"Sooo, now what?\" I asked.\n\n\"Kiss me,\" she said passionately as she leaned into me. We made out with her straddling my legs. My hands soon found themselves on her ass, which I happily squeezed and fondled through her shorts. I worked my way up to her lower back, holding her there as we kissed. I moved my hands to her arms, then her shoulders. I caressed her neck and face, then ran my fingers through her hair. After freeing my fingers from her thick tresses, my hands found their way to her ass again.\n\nI was enjoying myself and the kissing, and I didn't want to push too far, so I was content to keep touching her like that. Eventually, she made a cute sound which nevertheless sounded frustrated.\n\n\"Something wrong?\" I asked between kisses.\n\n\"You are being too polite right now,\" she said.\n\n\"Huh?\"\n\n\"Give me your hands.\"\n\nShe took my hands in hers and placed them on her stomach over her shirt. \"Now, continue,\" she said, and resumed kissing me.\n\nGetting the idea, I felt her all around her flat, toned, stomach and her abs. I felt my way up to her ribs, then kept going higher until I bumped into her bra.\n\nExcept...\n\nI squeezed. It was different this time. Just a t-shirt in the way.\n\n\"No bra!\" I looked up at her face in astonishment. She was grinning shyly, her face red.\n\n\"Holy shit,\" I said as I felt her breasts through only the thin material of her t-shirt. They felt incredible, of course, and as I worked, her nipples stiffened, showing through the fabric.\n\n\"When you're in your hotel room... so far from me... are you going to jack off?\" she asked in a soft voice.\n\n\"Yeah,\" I said, seeing no reason not to tell the truth.\n\n\"Then I want to give you something to think about while you do it.\"\n\nShe gripped the hem of her shirt and started pulling it up. Smooth, toned stomach, inch by inch, along with her belly button piercing. Higher, and I could see her ribs. Then, finally, her breasts came into view, right at my eye line. She pulled the t-shirt up and over her head and dropped it on the floor.\n\nI stared unabashedly. Natalie's boobs were wondrous to behold. I was no expert on breast size, so my best guess was a big B. Regardless, they fit her frame perfectly. Her face was red, but she wore a lopsided grin as she toyed with her hair.\n\n\"Wow,\" I managed, dislodged gears of my brain clunking slowly back into place.\n\n\"This is exciting,\" she said in a low voice. She looked down at her bare chest, then met my eyes as I looked up from her boobs. Her eyes widened and she bit her lip.\n\n\"You're telling me,\" I said. I could feel my cock stiffening where it was trapped in my jeans. She wasn't quite sitting on it, but close.\n\n\"I've thought about doing this before... about showing myself to you. But I've been too shy to do it. I've seen you naked and even played with you, but you haven't seen me or touched me under my clothes and... and... I want that.\"\n\n\"Me, too,\" I said gently. \"You're amazing. Are you wearing underwear?\"\n\nShe crawled off of me and stood up, topless. \"Why don't you find out,\" she said, spreading her arms.\n\nI grabbed her shorts at the bottom hem and tugged them down. They were fairly loose and came easily. She wasn't naked under there, though. She had on a small pair of blue and white panties that were barely a few inches wide at best. This pair was definitely not one of the ones she had laid out for me to see. It was so low it exposed a good six inches of bare skin below her pierced belly button. I pulled the shorts all the way to the floor and she stepped out of them.\n\nAs soon as she was clear, she said, \"Ready to see the back?\"\n\nBefore I could answer, she turned around and gave me the full view. The bottom was just a string in the back, disappearing between her ass cheeks. And, oh, what an ass. Smooth and round, firm and toned. I loved it. It was the best ass I'd ever seen. She had an amazing figure, athletic and tight and curved in exactly the right places.\n\nShe turned her head to look at me. \"Well?\"\n\n\"Natalie,\" I said with abject honesty, \"You have an amazing ass.\" I stood up and wrapped my arms around her from behind, my arms crossing under her bare breasts. I kissed and nuzzled her neck. She closed her eyes and leaned against me, enjoying my lips on her skin. \"Though you shouldn't be showing me.\"\n\n\"What?\" she said, alarmed. \"Why not?\"\n\n\"I lost the game.\"\n\nShe relaxed and laughed, low in her throat. \"Maybe I decided it wasn't a fair game.\"\n\nMy hands found the smooth skin of her stomach and began wandering. Up to the bottom of her breasts, where I forced myself to stop. Down to her belly button and beyond, teasing the smooth skin of her abdomen, and down further, until I felt the top of her panties. She shivered in my arms and turned her head so that we could kiss.\n\n\"Next time,\" I said moving my lips to her shoulder. \"I will win for real.\"\n\n\"Is that so-ahhhh!\" she gasped.\n\nI couldn't wait any longer. I brought both hands up and cupped her breasts. They were amazing; firm and soft and squishy and perfect. I accidentally brushed one of her nipples and she sucked in a sharp breath. She turned in my arms to face me, and we made out, her breasts pressed up against my chest. My hands wandered down her back until they reached her essentially-bare ass, and this I grabbed and fondled and squeezed with delight. Her body was wonderful. I was in heaven.\n\nOr so I thought. She pushed me backward and I fell onto the couch. She straddled me as before, except now she was topless and wearing only a small pair of panties. Her mouth found mine again and we made out, my hands again wandering over her backside.\n\nAfter a while, she broke off, panting. She looked at me, her eyes big and excited. \"You're going to be gone a long time.\"\n\n\"Yeah,\" I replied. It felt like we were continuing this same conversation from before.\n\nShe lifted up off my thighs and her fingers found the waistband of my jeans. \"What are you going to do...\" She undid my jeans and opened the fly. \"Without me to give you a hand job?\"\n\nI lifted my hips and she tugged my jeans down to my knees. I pushed my underwear down as well, freeing my stiff cock, then I sat back down on the couch.\n\n\"I suppose I'll have to do it myself.\"\n\nShe narrowed her eyes and inhaled slowly. \"Show me,\" she breathed.\n\nI was way too into this to even hesitate. I gripped my cock and started stroking it up and down while staring at her luscious body.\n\nShe scooted back a bit to get a better view, watching me masturbate right in front of her. I loved that I could openly stare at her boobs and her sensual curves. It definitely fueled my sexual urges and jacking off was already feeling almost too good.\n\nShe was breathing hard as she watched me. She reached for my shirt and started tugging it up. \"Take this off...\" she whispered. I let go of my cock just long enough to whip off my shirt and toss it aside, but before I could resume masturbating, her hand found my shaft instead.\n\n\"My turn. I want to handle this cock,\" she whispered.\n\nI leaned back, ready and eager.\n\nShe wrapped her fingers around my shaft and started stroking up and down, staring intently as she worked. \"Pre-cum,\" she said, running her finger through the liquid leaking out of the tip of my cock. To my delight, she brought her other hand down and cupped my balls, gently caressing them while she jacked me off.\n\nI let out a little moan of pleasure, and she gave me a sexy grin. \"Someone likes this,\" she said in this quiet, sensual voice I'd never heard from her before.\n\n\"Someone something... something,\" I mumbled, brain too charged up for coherence.\n\n\"How eloquent,\" she giggled.\n\nNat worked her fist up and down, my cock slick with pre-cum. She paused for a moment to smear more of it around, then resumed her stroking. I was mesmerized by her boobs and the way they moved as she handled me. Her nipples were stiff and held my attention, but her curves were also too perfect to ignore.\n\nThe feelings grew in intensity as she stroked. My brain was awash with delight and wanted more, more, more. I stared at her and found the words spilling out of me without conscious thought: \"I love your boobs.\"\n\nShe didn't even pause. \"This'll give you something good to think about when you're taking care of yourself alone in your hotel room.\" Her face was red, but her expression was euphoric. She was loving this. She let go of my balls and groped her own beautiful, naked breasts, exposed to me in all their glorious perfection. Round and firm, they sat high on her chest without the slightest sag. Her areolas were pale pink, the perfect color alongside the milky white of her boobs. Her nipples were small and dark pink, and they were hard with her excitement.\n\nI was in awe. I stared, mouth agape, and said nothing. She laughed. \"Speechless, huh? Well, good to know I have that effect on you.\" She kept stroking my cock, and her boobs bounced with the motion.\n\n\"They're perfect,\" I gushed. \"You're perfect. You're amazing. I'm so turned on.\"\n\n\"I can tell,\" she said. My cock was leaking pre-cum like crazy, and I felt like I was bigger and harder than ever before. The fact that she had her hand wrapped around it and was deliberately stroking me, while I was so excited, was almost too much. I didn't know how much time I had left before I blew, but I wanted to stretch the moment forever.\n\nI placed my hands on her hips and slid my fingers up her sides until they were close to her boobs. I met her eyes and moved my hands toward the front of her chest, then my hands were cupping her bare breasts. She closed her eyes and shivered, her mouth open in pleasure. I felt her nipples against my palms as I explored her nudity. I gently squeezed a nipple, eliciting a sharp gasp from her. She rolled her head around her neck, enjoying my attentions, though she slowed way down on the handjob. That was fine, though, since I didn't want to cum yet.\n\nI leaned forward and kissed her shoulder, then her collarbone. I started moving down an inch or so between kisses, until I was unmistakably kissing her upper breast. I reached one hand around to the small of her back and pulled her closer. She obliged and arched her back, giving me full access to her chest. I kissed my way around her bare breast, holding it with one hand while I explored it with my lips, until I found her nipple. I closed my lips around it and sucked.\n\nShe gasped sharply. \"Oh my god. Do that again.\"\n\nI obliged happily, sucking on her nipple. I brought my other hand around and cupped her other breast, playing with that nipple, too, while I kissed and sucked and licked the first one.\n\nShe kept getting distracted from the handjob, plus my hunched position made it difficult. After a while, I switched breasts, kissing and licking and sucking her other nipple while she breathed hard. A jagged, broken moan escaped her lips as I worked.\n\nEventually, she pushed me back, panting hard. She looked down at herself, her stiff nipples wet with my saliva. \"Wow,\" she breathed. \"Now, that's far enough there, okay? Let me finish you off.\"\n\nContent to let that happen, and to experience a handjob while staring at the most perfect pair of boobs I'd ever seen, I leaned back into the couch and let her stroke me.\n\nThe distraction meant my orgasm was a while off, so I occupied myself with touching her body everywhere I could. I gently stroked her breasts, though I tried now not to distract her. I cupped them and ran my palms down her ribs. I touched her belly button piercing. I put my hands on her hips and squeezed, then reached around as far as I could to fondle her bare ass. She scooted forward a little to give me better access, but not too close to interfere with jacking me off.\n\nI played with the thin waistband of her panties, barely more than a string, even in the front. I started running a finger along the top of the triangle of cloth between her legs, enjoying the feel of the bare skin down so close to her crotch. She didn't stop me, just concentrated on her action, stroking my cock up and down.\n\nThe feeling was getting intense again, and my orgasm was building up. It wouldn't be long now. The pleasure was taking over my mind, and I moaned out loud.\n\n\"Yeah?\" she whispered. \"You getting close?\"\n\nI nodded as I worked a finger under the material of her panties. \"Almost there,\" I gasped. I ran my fingertip along the inside of her underwear.\n\nShe put her free hand on my forearm, but didn't stop me. My orgasm was seconds away. I wanted to rip her panties away and see between her legs. I pushed my finger down further below the material and felt her pubic hair, answering the unasked question of whether she shaved it all or not.\n\n\"Almost there. Keep going!\" I panted.\n\nShe sped up, stroking fast up and down, her fist slipping along my shaft, the tip slick with pre-cum. My orgasm was imminent. Desire overwhelmed me. I pulled the front of her panties down and looked at her crotch. With the way she was sitting, I couldn't see anything of her actual pussy, but there was her patch of dark, trimmed pubic hair.",
        "I was overwhelmed. I came explosively, cum shooting out of my cock like a cannon, splattering on my chest in long ropes of hot, white, stickiness.\n\n\"Oh fuck,\" I gasped. She squeezed my cock in response to my outburst.\n\nI moaned and told her to keep stroking. I shuddered and twitched as my body spent itself in one tremendous orgasm. Finally, I was left gasping for breath, the intense pleasure fading. She still held my cock and gently ran her fingers through the slickness. I looked up at her, half-dazed.\n\n\"So...\" she said. \"I guess the next step is to put this thing inside me, huh?\"\n\nI hadn't expected her to say anything like that. \"That would be awesome. But... only if that's what you want. There are plenty of other things we can do. I can go down on you, you can give me a blow job, I can finger you... there's mutual masturbation, there's--\" I cut off, looking at her face.\n\nShe squeezed her eyes shut. She let go of my cock and balled up her fists.\n\n\"Nat?\"\n\nShe breathed hard, though this wasn't the sexual sort of heavy breathing. She was struggling with something inside.\n\nI put my hand on her shoulder. \"It's okay. It's just us. You're safe.\"\n\nTears leaked out and started working their way down her cheeks. Her hands were messy, so she used her wrists to wipe her eyes. She bit her lip and sniffled. \"I'm okay.\"\n\nI studied her face. \"Guilt?\"\n\nShe nodded glumly. \"I'm dealing with it. I'm telling myself I'm not a slut. Over and over in my head. What we just did... I liked it so much, Rob. The things you were doing... it was so exciting. I love how good you were making me feel.\" She stared at me, teary eyes opening wide. \"You sucked on my nipples! That was amazing! It was so intense. You said the f-word! That caught me off guard, but I liked it. I want... I want...\" She looked at me, her expression darkening. \"I want to be able to do this without feeling guilty.\"\n\n\"I think if we keep doing things like this, things that we enjoy and make us feel good, you'll gradually come to accept it as being okay.\"\n\nShe grimaced. \"I'm tired of everything taking so long.\" She shook her head disgustedly and let out a long breath. \"So, you don't feel guilty at all?\"\n\n\"No. But the first time I masturbated, I felt guilty as sin. Because that's what I thought it was, even though it had been years since I'd been to church. That stuff really sinks in. It took time to get out of that mindset. Besides, these things we're doing, they are natural things for men and women to do when they lo--\" I cut off, clamping my mouth shut.\n\nShe fixed me with an intense gaze. \"When they what?\" A smile started spreading across her beautiful face. \"When they what, Rob?\"\n\nI swallowed the lump in my throat. \"When they... when they love each other.\"\n\nShe took my hand. The fact that she was nearly nude, her breasts proudly on display, and I was also nearly nude, my pants around my ankles, my now-soft cock and my chest covered in my own cum, could have, perhaps should have, spoiled the mood, but we both ignored that. \"I do love you,\" she said softly.\n\nMy heart constricted, then slowly unknotted, replaced by a warm glow. \"I love you, Nat.\"\n\nShe took a deep breath, then closed her eyes and let it out nice and slow, her face split by a huge grin, marred only by a small tear working its way down the side of her cheek. She wiped it away, then finally seemed to notice our collective sticky, messy state. She took a long look at my cum-covered cock. \"Let's get this mess cleaned up.\"\n\n<p align=\"center\">Chapter 13: Who Takes Four Week Business Trips, Anyway?</p>\n\nThe next day, the day after New Year's Day, I flew away for the long business trip. I'm not sure what I would have done before Natalie. Four weeks is a really long time to be gone from your own home. I can pay my bills online, so that's not an issue. I guess I would have had my parents check in on my place, just to make sure it hadn't burned down, flooded, or been robbed. But with Natalie, she was more than happy to hang out at my place to take advantage of my new, really big TV, and use my car all she wanted.\n\nI found I liked knowing she was there. I liked the idea of her using my stuff. I had nothing to hide from her, and we had openly told one another we were in love. I wondered if she would be interested in moving in together. I considered bringing it up in one of our talks while I was away. The world was great and everything felt right.\n\nWell... almost everything. The being away part turned out to suck, starting before I even got off the plane in Seattle. But I was committed, so I buckled down and got to work.\n\nThe first night, we didn't talk much. It was late, and I was tired. She mainly just checked in with me and made sure everything was alright, then we wished each other good night with promises to talk more later.\n\nThe next day, work went well, and I texted Natalie while on the way back to my hotel.\n\nMe: Hey, done for the day. Heading back\n\nNat: There's been a development\n\nMe: Uh, I'm not sure how to take that. Context?\n\nNat: I dreamed about you again last night\n\nMe: Good dream, or bad dream?\n\nNat: Very good\n\nMe: Nice\n\nNat: There's more, but it's hard for me to talk about. Call when you get to hotel room\n\nMe: Sure thing\n\nI definitely liked the sound of a 'very good' dream, so I was chipper as I let myself into my hotel room and tossed my stuff on the bed. I changed into my standard lounging around the hotel attire, which consisted of a t-shirt and a pair of soft shorts. I grabbed my phone and called Natalie. She answered almost immediately.\n\n\"Hey,\" she said.\n\n\"What did you want to talk about?\" I asked her.\n\n\"So... this is hard for me to say,\" she said slowly. \"I tell myself you're my boyfriend, so it's fine, but years and years of upbringing make it difficult. It's all off limits, you know? Taboo. Forbidden. But that's what makes it so exciting, right?\"\n\n\"I assume you're building up to telling me whatever--\"\n\nShe interrupted. \"I touched myself.\"\n\nI didn't need to ask what she meant. \"Wow.\"\n\n\"After I woke up this morning from the dream. It was so vivid, and... and sexual. I've never touched myself before. I swear! But I wanted to. I wanted to try it. But I was scared... and nervous. But when I woke up like that, with the dream so fresh in my mind... I finally went for it. So I did it. For the first time.\"\n\n\"How was it?\"\n\n\"Good. It felt really good. I don't know what I'm doing, though, so I just kinda messed around down there--\" She cut herself off with a sort of half-strangled sound, then there was dead silence for a few seconds. Finally, she started giggling in an embarrassed way. After a bit, she regained control.\n\n\"Can you believe that? It's so ingrained in me... I start talking about something forbidden and bam!\" She burst out laughing, though I could definitely hear the self-conscious tone.\n\n\"As far as I'm concerned, you're doing great. Breaking boundaries, tearing down old rules, especially when they're so deep... that's hard.\"\n\n\"Yeah it is. I had to psych myself up to be able to tell you this stuff. I had to practice what I was going to say, over and over, but only in my head. Can't say it out loud, right? Even though I'm here alone. And despite all that, I didn't even say what I'd practiced. In the end, you still got a self-censored version.\"\n\n\"Eh, like I said, no biggie. You'll get there. It takes practice, like anything else.\"\n\n\"I can't help but think I'm a perv for doing it.\"\n\n\"No way. As far as I'm concerned, I think it's awesome.\"\n\n\"Of course you do.\"\n\n\"And I want you to do it again.\"\n\n\"What?\"\n\n\"And tell me about it.\"\n\n\"Oh man.\"\n\n\"Hell, you can do it while we're talking on the phone.\"\n\n\"What!\"\n\n\"It'd be fun.\"\n\n\"Oh I don't think I can do that...\"\n\n\"Right. Forget that. I went too far.\"\n\n\"No, no,\" she said. \"It actually sounds exciting... really exciting. But I don't think I'm ready for that. Like I said, I need to take this at my own pace.\"\n\n\"Fair enough. So what do you think is your next step? I'll help you in whatever way I can.\"\n\nI could hear her inhale slowly and then let it out even slower. \"Okay. I can do this. I want to do this. The old me would be horrified at this. But the new me wants it. I never rebelled against my parents the way some people do. I never went to parties and messed around... got drunk, high, slept around... any of that. I wanted to rebel, but I didn't want to do any of that stuff, so other than the few things I did, I guess I sort of bottled everything up and packed it away.\"\n\n\"Time to open that bottle, huh? If you can find it, wherever you packed it.\"\n\nShe laughed. \"Yeah. So the next step... I think I should try, y'know... touching myself more. Like I said, I don't know what I'm doing down there. I need to... um... explore. Figure out what feels good.\"\n\n\"Sounds good. No need to rush things. Go slow, take it easy.\"\n\n\"How, um, how did it work for you? When you first tried it?\"\n\nI chuckled. \"Well, I guess for guys it's a lot easier. I figured it out on the second try.\"\n\nShe sighed. \"You probably think I'm so naive.\"\n\n\"Everyone has to start somewhere. Besides, I have to admit I'm enjoying this.\"\n\n\"I'm sure you are,\" she said wryly.\n\n\"Yep. All this talk has gone straight to a certain location.\"\n\n\"Um... so are you gonna... you know... tonight?\"\n\nI was a bit taken aback. It was one thing for her to bring it up when we were getting hot and heavy the night before I flew out, but on the phone like this was something else. Something exciting.\n\nI forced nonchalance into my voice. \"Maybe not immediately, but I think I might just do that, yes.\"\n\n\"Well,\" she said. \"Um, feel free to remember our night together, before you flew out.\"\n\n\"Oh yeah, I definitely will. That was super hot. You should think about it, too, when you're--\"\n\n\"I will, I will.\"\n\nWith that, we said our good-nights and hung up. I just sat and thought for a bit. We were tiptoeing around the edges of phone sex, which I never would have expected. But now that the possibility was there, I wondered just how far she'd be willing to go.\n\nI thought about her touching herself as I pushed down my shorts and underwear and took hold of my cock, plenty stiff from our conversation. I closed my eyes and pictured her nearly-nude body as she straddled me and jacked me off. I hoped she was enjoying herself, and wondered if I'd ever get to see her do it. With that thought, it didn't take long to get myself to cum.\n\n<p align=\"center\">***</p>\n\nThe next night, after I finished work, I was on my way back to the hotel when she texted me.\n\nNat: Hey ;)\n\nMe: Hey yourself, hot stuff\n\nNat: Hot stuff? You're the one giving me naughty dreams\n\nMe: Not my fault. Also, you're welcome\n\nBy this time I had made it back into my hotel room. I slipped off my shoes and sat down on the bed.\n\nNat: I like these dreams. I like looking at you\n\nMe: Tell me more\n\nNat: About what?\n\nBefore I replied, I quickly stripped naked and laid back on the bed. I was horny and this conversation seemed to be heading in a nicely sexy direction, so on a whim I decided to play with myself while talking to her. Even just the idea sounded super-hot to me, so my cock wasted no time springing into action. I grabbed it in one hand and my phone in the other.\n\nI decided to turn up the heat. Using one hand, I texted back.\n\nMe: Mmm well you have seen me in all my nude, fully erect glory\n\nNat: Oh yeah I have. You are sooo hot\n\nMe: I love knowing you're looking at my hard cock. Such a turn on\n\nNat: Last night, did you... you know\n\nMe: I am right now\n\nNat: Oh my god\n\nMy phone rang. It was her. I answered it, my heart pounding.\n\n\"Hey,\" I said.\n\n\"Hey,\" she replied.\n\nI closed my eyes and stroked my cock.\n\n\"Are you really?\" she asked.\n\n\"Am I really what?\"\n\n\"Masturbating.\"\n\n\"Yeah.\"\n\nI could hear her breathing, but she didn't say anything for a bit. I heard her swallow.\n\n\"What about you?\" I asked.\n\n\"What about me what?\" she replied in a shaky voice.\n\n\"Are you touching yourself?\"\n\n\"Maybe.\"\n\n\"What--\" I began, but she cut me off.\n\n\"I don't want to give any details. My pace, okay?\"\n\n\"Sure,\" I said, keeping the disappointment out of my voice. Instead I focused on the idea of her masturbating at the same time as me, which was plenty hot enough to keep me going.\n\nI just listened to her breathe while stroking my cock. I made no effort to quiet my own breathing. I wanted her to hear it. I wanted to turn her on.\n\nAfter a while, she said, \"Say something.\"\n\n\"What do you want me to say?\"\n\n\"Anything.\"\n\nI hesitated. I'd never done this before. \"I have no idea what to say,\" I admitted.\n\nShe said nothing for a moment, then, \"Are you naked?\"\n\n\"Yeah.\"\n\n\"And you're... hard?\"\n\n\"Oh yeah.\"\n\n\"What are you doing right now?\"\n\nI wasn't sure how to phrase things, or what she'd be comfortable with, so I started small and easy. \"I'm touching myself.\"\n\n\"Yeah?\"\n\n\"I'm touching my cock.\"\n\n\"Mmm. I like that.\"\n\n\"It's big and hard. You've seen it.\"\n\n\"Yeah I have,\" she was breathing harder. I figured I was on the right track.\n\n\"I have my hand wrapped around it. I'm stroking it up and down. Like you've done.\"\n\n\"Does it feel good?\"\n\n\"It feels great. I just wish it was your hand.\"\n\n\"Ooh yeah, me too. I'm touching myself imagining it,\" she said, her voice trembling. She must be really excited.\n\n\"I'm imagining you touching yourself. Wishing it was my hand.\"\n\n\"Oh god,\" she said, practically panting. \"That's so hot.\"\n\n\"I'm going to cum soon.\"\n\n\"I want you to. Make yourself cum thinking about me.\"\n\nHearing her say this sent me over the edge. I moaned as my orgasm crashed over me. My cum spurted out, splashing onto my stomach and chest and dripping down over my hand.\n\n\"Did you do it?\" she asked.\n\n\"Yeah, I did,\" I said, breathing hard.\n\nShe didn't say anything for a while, so I ventured, \"What about you?\"\n\n\"I'm trying,\" she panted. \"But I don't know how.\"\n\n\"It's harder for girls, I hear. Takes practice.\"\n\n\"This feels really good and I'm really excited, but I don't know how to... how to orgasm.\"\n\n\"That's okay,\" I said, reassuring her. \"Like I said, it takes practice.\"\n\nAfter a while, she said, \"I stopped. It was starting to get a little sore.\"\n\n\"That's fine. Just try again later, or tomorrow, or whatever.\"\n\nThere was a long pause while I could just hear her breathing. Eventually, she spoke. \"That was hot as hell. It's really sexy that you did that. I mean, I felt, like, extra turned on there at the end.\" She laughed, then got quiet and serious. \"Can we, um, do this again?\"\n\n\"Absolutely. Tomorrow night?\"\n\n\"Gonna be a couple days before I will have time again. I need to go clean up.\" She laughed again. \"And you do, too, I assume. G'night!\"\n\n<p align=\"center\">***</p>\n\nThe next time, she called me. \"You ready?\" she asked right away, dispelling any notion that she might be hesitant.\n\n\"Stripping down now,\" I said, tugging off my clothes one-handed.\n\n\"I can't believe we're doing this!\"\n\n\"I'm fine with it.\" I finished getting naked and got onto the bed.\n\n\"I know you are. But me?\"\n\n\"Still wanna go through with it, then?\"\n\n\"Oh yeah. But I have an idea. A request, really.\"\n\n\"What's up?\"\n\n\"I'm going to do this for a while and think about you. Then, when I'm really turned on and it's feeling really good, I want you to show me your, um... cock. If you're okay with that,\" she added hurriedly.\n\nMy face broke into a huge grin that she couldn't see. \"I'm very okay with that. You want me to text you a pic? Just tell me when.\"\n\nI could hear her breathing deepen and then grow more ragged. I decided to venture a question.\n\n\"What are you thinking about?\"\n\n\"You,\" she breathed.\n\n\"Am I naked?\"\n\n\"Yeah. I'm imagining last time.\"\n\n\"When we masturbated together on the phone.\"\n\nShe let out a little moan. \"Oh... yeah...\"\n\n\"And you wanted me to cum. You told me to.\"\n\n\"Yeah... and you did...\"\n\n\"And you liked it.\"\n\n\"I loved it.\" She broke off and panted for a while, presumably masturbating like crazy based on her breathing. \"I'm ready,\" she whispered. \"Show me.\"\n\nI'd been idly playing with myself while she masturbated, so I was more than half hard. As I positioned the phone to take a pic of my cock, musing on how I never thought I'd be doing this, a pop-up appeared indicating she wanted to video chat. Surprised, I accepted it. Her face appeared, framed by her hair, fanning out around her on the pillow.\n\n\"Hey,\" she said, giving me a small, nervous smile.\n\n\"Hey,\" I replied, then I pointed the camera at my cock. \"Here ya go.\" I figured I could have handled that a bit more sexily, but whatever.\n\nHer eyes went wide and she pulled her phone close to her face. I made sure to get a good shot of my stiff cock as I slowly stroked it up and down, enjoying her hungry gaze.\n\n\"Yes...\" she hissed as she took in the sight of my cock. \"Closer...\"\n\nI moved my phone closer until my cock filled the screen, so she was definitely getting a good view. I loved the feeling of her looking at me.\n\n\"It's getting bigger,\" she panted, staring.\n\n\"That tends to happen when a sexy girl is looking at it.\"\n\n\"I love looking. You're so hot,\" she panted.\n\nI let go of my shaft and rubbed all around my thighs and abdomen, deliberately brushing up against my cock so it would move. I kept the camera pointed in the right direction, and watched her watch me. The whole thing was intensely erotic.\n\nFinally I touched my cock again. I couldn't help it. I was too turned on. She gasped. \"Oh... masturbate... do it...\"\n\nWithout hesitation, I gripped my cock in my hand and started jacking off on camera for her. Nice, long, slow strokes at first, all the way from the top to the bottom. I pulled the skin tight and showed off the tip of my cock, swollen and big, watching her eyes as she saw my most sexual spot.\n\n\"Oh god,\" she moaned. \"This feels so good.\"\n\nI was too charged up. I knew I wouldn't last long. I warned her I was going to cum soon.\n\n\"Go ahead,\" she said, and I groaned as I came, the white spunk spurting out of the tip of my cock, splattering onto my chest and stomach. She watched the whole thing, wide-eyed and panting.\n\n\"That was amazing,\" she said.\n\n\"Did you orgasm?\"\n\n\"No, but it felt so good. I'm tired and sore now, so I'm stopping. But wow. Just wow. I so want to keep doing this.\"\n\n\"Maybe you should buy a vibrator. It'll help with the getting tired part.\"\n\n\"Maybe I will. I've been wanting to try one anyway. Watching you is so hot.\"\n\n\"Speaking of watching,\" I said. \"Do you think I could see more...?\"\n\nIn response, she pointed her phone camera down at her body. I gasped and took in a quick, skewed image of her bare breasts. She wasn't wearing any clothes at all, though from the angle, it was difficult to see much more.\n\n\"Hey! Are you in my bed?\" I asked, grinning.\n\n\"Yup. I figured it would be sexier.\"\n\n\"Hell yeah. Wish I was there with you.\"\n\nShe pointed the phone back at her face and blew me a kiss. \"Until next time, Rob.\"\n\n<p align=\"center\">Chapter 14: Phone Sexiness</p>\n\nMeetings, busy schedules, and too much to do meant it was days before Nat and I could do more than say 'hi' and promise more talking next time. I finished up in Seattle and headed off to L.A. The fabled next time couldn't come soon enough.\n\n\"Guess what,\" she said as soon as I answered the phone.\n\n\"You flew in and just landed and you need to know which hotel I'm in so you can come jump me?\"\n\n\"What? Ha! You wish,\" she giggled. \"No, I bought a vibrator.\"\n\n\"Wow, I know we talked about it, but that's a still big step for you. I'm impressed you were able to do it.\"\n\n\"I drove down to the city and bought it there. That way I wouldn't run into anyone I know.\"\n\n\"Whatever works.\"\n\n\"Yeah it was super embarrassing at first. I mean, that store! You should've seen what they had in there. There's nowhere to look that isn't... well, anyway. I eventually realized the clerk didn't care at all what I was buying.\"",
        "\"Have you tried it yet?\" I asked as I started removing my clothes one-handed.\n\n\"Yeah, as soon as I got home.\"\n\n\"Well?\"\n\n\"It was so intense I could barely stand it.\"\n\n\"But you kept at it and...?\"\n\n\"Heh. Yeah. It started feeling incredible. Way better than just my fingers. I want to do our thing again... with my vibrator this time.\"\n\n\"Hell yes,\" I said, finishing stripping off my clothes and getting settled on the bed. \"You ready?\"\n\n\"Eager and waiting. Let me get situated.\"\n\nI couldn't hear anything through the phone other than her breathing. She inhaled sharply. \"Oh wow,\" she sighed. \"It's intense.\"\n\n\"Intense in a good way, right?\"\n\n\"A very good way...\"\n\nI stroked my cock as I imagined what she was doing.\n\nWe were silent for a time. Her breathing quickened after a while, then slowed down again. \"Hi,\" she suddenly said.\n\n\"Hey.\"\n\n\"What are you doing?\" she asked.\n\n\"Touching myself,\" I admitted.\n\n\"Yeah?\"\n\n\"And wishing I was there with you. Are you in my bed again?\"\n\n\"Yeah, I am. I... I wish you were here, too.\"\n\nGood. She hadn't commented when I said it the other time, so I was glad to hear it now.\n\n\"I would caress your face and lips.\"\n\n\"Mmm.\"\n\n\"I would caress your neck, then I would bend down and kiss you.\"\n\n\"Oh, I'd like that.\"\n\n\"I'd nuzzle you and kiss your creamy, smooth skin, and inhale your scent. I'd plant little kisses up and down the curve of your neck.\"\n\n\"Ooh, gone all poetic on me.\" She was breathing hard.\n\n\"Does the vibrator feel good?\" I asked her.\n\n\"Yesss...\" she hissed, drawing out the word in an extended exhale. She moaned, long and low.\n\n\"Did you orgasm?\" I asked, genuinely curious.\n\n\"I don't think so, but it felt soooo damn good,\" she breathed. \"I wish you were here so you could kiss me.\"\n\n\"We'd make out while you masturbate,\" I said, taking a risk. My words really turned me on bad, and I hoped they had the same effect on her. My cock was stiff as a board, so I sped up my stroking.\n\n\"Mmm, are you jacking off?\" she asked sexily. \"Did I get you all turned on?\"\n\n\"Hell yes you did,\" I said, immediately latching on to her tone. \"I'm so hard.\" The feeling of masturbating with her on the phone was electric. I loved it. I couldn't get enough. Judging by her reaction, she felt the same way.\n\nShe breathed faster and faster, then went silent for at least ten long seconds. Finally she let out an explosive breath. \"Holy... wow... I mean... that was...\" she gave up talking and just panted.\n\n\"Did you have an orgasm?\"\n\n\"I think so! It felt amazing. Overwhelming. I can't believe how good it felt.\"\n\n\"Well, congratulations.\"\n\n\"I didn't know things could feel that good.\" Her breathing eventually slowed. \"What you said... making out while I do this... so hot. I thought about you getting naked... about your cock. About you showing me last time. It just went straight to my crotch. Sooo intense.\"\n\n\"You had an orgasm while thinking about my cock,\" I said, slowly stroking myself. \"That's awesome.\"\n\nShe gave a little laugh. \"I can't believe the things we're doing. I'm doing. It's all so...\" She trailed off.\n\n\"Erotic? Sexual?\" I offered.\n\n\"Naughty,\" she finished. \"And I have to say I love it. Just love it. Being naughty is so fun, especially with you.\"\n\nShe couldn't see it, but I wore a huge smile. This was all going so well. \"So, what do you want to do next?\"\n\nIn response, she started up a video chat, which I immediately accepted.\n\n\"Have you finished yet?\" she asked.\n\n\"No.\"\n\n\"Show me,\" she said. I pointed the camera at my cock as I stroked it.\n\n\"What are you doing?\" I asked her.\n\n\"Trying for another,\" she said.\n\n\"Oh god,\" I said, getting extremely turned on. \"Show me what you're doing.\"\n\nShe didn't respond, apparently focusing on the vibrator, but that was okay, because I could see she was staring hungrily into her phone's screen, which was showing my big cock. I even saw her lick her lips and give a little gasp. \"So hot... so sexy... so manly...\" she said softly, but her face was close enough to her phone that it picked up her words.\n\nI showed off, loving the attention. I had an extremely hot girl looking at my bare, hard cock. She wanted to look. She loved to look. And I loved to have her looking. My cock was stiff as a board as I tugged and stroked it, both to feel good and to show off for her. I found I'd never given any thought to the performance art aspect of masturbation before and it was all new and surprisingly interesting.\n\nShe closed her eyes for a moment to concentrate on the sensation of the vibrator. I took advantage of the lull to shift on the bed to a more comfortable position, as it was a little awkward trying to masturbate while holding my phone in a good spot.\n\n\"I love you,\" she whispered, and my heart skipped a beat.\n\n\"I love you, too,\" I said, jacking off for her. She watched, eyes half-open, sultry.\n\nShe closed her eyes and enjoyed the sensations she was feeling. \"I meant to tell you... I actually bought two vibrators.\"\n\n\"Oh yeah?\"\n\n\"One is thin and long. It's supposed to be good for the g-spot. The other is... well... it's as close to you as I could find in the store.\"\n\n\"Oh wow. Show me.\"\n\nShe shifted, the camera going crazy for a few seconds, then I saw it: A fairly realistic looking cock-shaped vibrator. It looked wet.\n\n\"Have you had that inside you?\" I asked, marveling.\n\n\"Only a bit. It's big... if you're this big, sex is going to be difficult until I get used to it.\"\n\n\"Are you sure it's my size?\"\n\n\"No, but I've held you in my hands, remember? It feels close enough.\"\n\n\"Awesome. What about the smaller one?\"\n\n\"I haven't used that one yet. It needed to charge first. I'll try it later.\"\n\n\"Go ahead and put it back in,\" I said, then, in a stroke of inspiration, I added, \"And pretend it's my cock.\"\n\nShe pointed the camera back at her face. After a few seconds, she must have put the vibrator back inside her pussy. \"Oh god...\" she moaned.\n\n\"Pretend it's me...\" I said, jacking off.\n\n\"I am,\" she said.\n\n\"Tell me about my cock,\" I said.\n\nShe didn't hesitate. \"Your cock is so big, and thick, and long. It's so manly... so sexy... I love it... I love it...\" she closed her eyes again, letting the vibrator do its work.\n\nI could barely stave off orgasm. I had to slow down my stroking so I didn't blow my load. I wanted to keep this going as long as possible. I wanted to hear naughty, dirty words come out of her mouth. I pressed further.\n\n\"Is my cock inside you?\"\n\n\"A little.\"\n\n\"Can you get it any further in?\"\n\n\"I'll try.\" She shifted for a bit. \"It's a little more in. It's not easy. I'm too tight.\"\n\n\"But you want it inside you. You want my cock inside you.\"\n\nShe gasped and moaned at my words.\n\n\"Tell me you want my cock inside you.\"\n\n\"I want your cock inside me,\" Natalie said, her voice shaking.\n\nAs she breathed hard, I knew I was on the edge. I needed to cum. \"Show me your boobs,\" I said.\n\n\"Here,\" she said, pointing the camera down at her chest. She was naked, and there on the screen were her amazing bare breasts.\n\n\"Oh Nat,\" I said. \"I wish I was there.\"\n\n\"What would you do if you were here?\"\n\n\"Stare.\"\n\nShe laughed. \"Of course. But what about after you were done staring?\"\n\n\"Well, considering our current circumstances, I suppose I'd jack off looking at them.\"\n\n\"Mm that's sexy. What else?\"\n\nI decided her mood allowed for me to just go for it. \"I'd lean in close.\"\n\n\"And then?\"\n\n\"I'd lick your nipples and suck on them.\"\n\n\"Oh my god,\" she breathed. I hoped she was envisioning this, because I sure was. \"I thought you were going to say you'd touch them. I love when you surprise me.\"\n\n\"Oh I would. I'd fondle the hell out of them. I'd touch every inch, every curve. I'd caress and squeeze and--\"\n\nShe cut me off with a low moan of pleasure. After it ended, I asked, \"Orgasm?\"\n\n\"Not quite. I'm so close. You saying these naughty things has got me to the edge. Push me over. Say something super naughty.\"\n\n\"How naughty can I be?\"\n\n\"As naughty as you want.\"\n\nI wasn't sure I believed her, because I thought I could go way further than she would be prepared for, but I was so turned on, stroking my cock and doing all this sexy stuff with her, that proper judgment was right out.\n\n\"You want me to make you orgasm?\"\n\n\"Yeah Rob, make me orgasm.\"\n\n\"Is the vibrator in your pussy?\"\n\nA sharp inhale. \"Yeah, it's in my p-pussy.\"\n\n\"Good. You wanna know what else I would do if I was there with you?\"\n\n\"Yes, god, tell me. What else would you do?\"\n\nI was ready to blow. Pre-cum was leaking out and the whole tip was wet and shiny. I felt like I could cum any second. I wanted more, but time was almost up.\n\n\"First, show me your pussy,\" I begged.\n\nTo my shocked delight, she actually pointed the camera down at her crotch. The angle wasn't great, but I could see her legs spread. I could see the vibrator where she held it, where it obviously was going up inside her. I couldn't quite see her pussy, but I could see her dark pubic hair. The sight sent me on the unavoidable path over the edge.\n\nAs my orgasm built, as the sensations flooded through me, I managed to gasp out, \"If I was there, I would fuck you.\" And then I came explosively, spurt after spurt of my hot cum blasting out of my cock and splattering all over me.\n\nShe moaned loud and the camera went wild, but I couldn't watch anymore anyway as I was overwhelmed with my orgasm.\n\nAfter a while, she brought the phone back to her face. \"You... you surprised me again,\" she said, shaking her head. She smiled, a lovely post-orgasmic, contented smile.\n\n\"Did you like it?\"\n\n\"I loved it.\"\n\nMy orgasm subsided, leaving me limp and drained. She seemed to be in the same state. She gave a small, low laugh. \"Wow.\"\n\n<p align=\"center\">Chapter 15: Good News, Everyone</p>\n\nTime passed quickly. I finished up in L.A. then headed to Dallas for the final, and longest, leg. Natalie was busy doing various things, so we couldn't talk every single night, but our relationship had progressed past the point where we needed to. We were comfortable with one another, and secure in our feelings.\n\nMy team met our CEO, who spelled out the remainder of the plan. When complete, we were to get another bonus, as well as an off-site party in a mountain cabin the company sometimes rented out. When I talked to Natalie that night, I explained it to her.\n\n\"Wow,\" she said when I was done. \"That'll be cool. When is it?\"\n\n\"They made sure to give us a couple week's notice. I fly back on the 30th, and the retreat is from Friday, February 1st, to Sunday the 3rd. I'll be going up early.\"\n\n\"Wait, what? So you'll only be back for one day before leaving again?\" She sounded frustrated. \"Will I even get to see you?\"\n\n\"Of course. You're invited.\"\n\nShe hesitated before answering. \"I am?\"\n\n\"I want you to come. I'm kinda expecting you to... otherwise I don't wanna go. I'd rather be with you.\"\n\n\"Yeah! I'll come,\" she said enthusiastically. \"That's fine, right? It's not gonna be weird for me?\"\n\n\"Nah, everyone is bringing a plus-one. The other people on my team are all bringing their boyfriends or girlfriends or spouses. Except one guy. He's single, but he's going to bring a friend. They're really excited about the cross country skiing and snowmobiling up there.\"\n\n\"So what does this entail?\" she asked. \"Why are you going up early?\"\n\n\"I'll be taking a truckload of supplies to the cabin. I've never been there but it's supposed to be really nice. Like I said, there's skiing and snowmobiles, and snowshoeing, plus whatever else people feel like doing in the snow.\"\n\n\"But why you? Did you get volunteered for this?\"\n\n\"Eh... kind of. I have experience driving these bigger trucks, from a previous job.\"\n\n\"You're going to drive a big truck up snowy mountain roads?\" She actually seemed impressed. \"This I gotta see.\"\n\n\"It might not be snowy. Depends on the weather. The roads to these fancy places are well taken care of. Besides, the truck has chains for the tires if I need them.\"\n\n\"So what are the details again? So I can get the right days off work.\"\n\n\"Three days, two nights. Friday through Sunday whenever people leave. Back to work Monday morning, of course. Can't interfere with the all-important operation of business. But like I said, I'll be leaving bright and early Friday morning.\"\n\nShe sounded conflicted. \"I was kinda hoping we'd have time to spend together, after you being gone for so long.\"\n\n\"We have most of Thursday, and it'll be a long drive. We'll have lots of time to talk. And we'll have our own room... if that's okay.\"\n\nShe hesitated only slightly, then said softly, \"Yeah, that's okay.\"\n\nPhew. I wasn't sure what she would say about that. One less thing to worry about. \"We can do the group stuff up at the cabin, or we can just keep to ourselves. It's up to us,\" I pointed out.\n\n\"I'll have to go buy snow gear. I don't have any,\" she said.\n\n\"Oh, crap, I didn't think about that.\"\n\n\"No, no, it's okay,\" she cut in. \"I'll enjoy it. Uh, not to add to the stereotype of girls liking shopping.\"\n\nI chuckled. \"Meh. Like what you like. Besides, ski or snowboarding gear will look great on you.\"\n\n\"How would you know? You've never seen me in any.\"\n\n\"I have an imagination,\" I said, \"but yeah, you're technically correct.\"\n\n\"Hm. The best kind of correct.\"\n\nI gasped. \"OH WHAT THE, have you been watching Futurama?\"\n\nShe put on a gruff voice. \"Shut up baby, I know it.\"\n\n\"Sweet. I definitely need to watch that with you. Anyway, on the drive up, we'll stop and eat, and I bet the snowy mountain scenery is going to be beautiful. It'll be like a weird sort of date.\"\n\nShe giggled. \"And I might get to see you doing some very manly stuff with that truck.\"\n\n\"And we might get stuck in a blizzard and die,\" I said blithely.\n\nShe snorted. \"Damn it, Rob. Way to kill the mood.\"\n\n\"Still wanna go?\" I asked.\n\n\"And give up spending time with you? I'm there, mister, stuck to your side like glue.\"\n\n\"Alright then,\" I said. \"Now, to completely change the subject, how are things going with you and Rob Jr.?\"\n\n\"Oh for--\" she cut off with a sigh. \"It doesn't have a name. And things are actually going fairly well. I can get about half of it in me without it hurting.\"\n\n\"Is it the length or the girth that is stopping you?\"\n\n\"Not the length. I've still got room. I put that thin one in farther. It's definitely how big it is around.\"\n\n\"You know,\" I joked. \"This is such an odd conversation, and yet, here we are, having it.\"\n\n\"Look, if your measurements you told me are correct, then I guessed pretty accurately when I bought this. If you are as big as this thing, I need the practice or it's just going to hurt so bad when we have sex.\"\n\n\"When we have sex,\" I repeated, as if tasting the words. \"I sure like the sound of that. Maybe up at the cabin.\"\n\n\"I do, too,\" she said softly. Then, \"Maybe. No promises. I mean, I'm definitely going to jump you, in one form or another, as soon as we're alone.\"\n\n\"Man, I'm so anticipating this trip.\"\n\n<p align=\"center\">Chapter 16: I Wish This Was You</p>\n\nA few days before the end of the very long business trip, when we were starting to wrap things up, my conversation with Natalie took a very, very good turn.\n\n\"Hey sexy,\" she said when I answered the phone.\n\n\"Hey yourself,\" I replied. I lay down on the bed, but didn't bother to undress. We had engaged in plenty of mutual masturbation and phone sex over the month I was gone. While I wouldn't say the excitement was gone, the urgency was. Now it was something we enjoyed when we felt like it, rather than something we jumped at the instant we were able. She had come so far since we first got back together. Now she was willing and openly enjoyed herself, which was awesome.\n\n\"I got the whole thing in.\"\n\nThere was no need for me to ask what she meant. I knew. \"Amazing,\" I said. \"And...?\"\n\n\"It hurt. Not super bad, but it hurt. There was some blood.\"\n\n\"Wow, I think you may have popped your cherry.\"\n\n\"That is such a gross term,\" she said. \"But yeah, I think you're right.\"\n\n\"So the whole thing? All of it?\"\n\n\"All that will fit. And this time I mean length-wise.\"\n\n\"Imagine that is me,\" I said, imagining exactly that. I started undoing my pants.\n\n\"Oh I did. That's how I was able to do it. I had to get really turned on, so I imagined us... well, you know.\"\n\n\"Do I?\" I teased. I slid off my pants and tugged down my underwear, freeing my stiffening cock.\n\n\"Rob.\"\n\n\"I'm imagining it now,\" I said, playing with my cock.\n\n\"Are you touching yourself?\"\n\n\"Yeah.\"\n\nShe giggled. \"Oh... all right. Hold on a sec, okay? How about I join you?\"\n\n\"Excellent.\"\n\n\"Okay, I'm naked,\" she said in a sexy voice. \"I have my vibrator.\"\n\n\"Ooh, are you gonna stick it in?\"\n\n\"Yeah, in a bit. I'm pressing it up against my clit.\"\n\n\"Does it feel good?\"\n\n\"Yeah, it feels so good.\"\n\n\"Imagine my tongue there.\"\n\n\"Ooh,\" she cooed. \"That's hard to imagine. I've never done that.\"\n\n\"We will. I want to go down on you.\"\n\n\"Mmm. I can't wait.\"\n\n\"I'll lick your clit... you can even use the vibrator at the same time, if you want.\"\n\n\"That sounds amazing. We have to do that.\"\n\n\"Do you think you'd be willing to give me a blowjob?\"\n\n\"Willing? Yeah.\" She said it so easily. \"Able? I don't know about that. I tried putting this vibrator in my mouth.\"\n\n\"How'd that go?\"\n\n\"I feel like I'd have to be able to unhinge my jaw. I'm not a snake, you know.\"\n\n\"It's okay. We can experiment and see what happens.\"\n\n\"Experimenting with you has been so much fun. I've never felt so good in my life. I can't wait to do these things in person.\" She was breathing harder now, her voice taking on that excited, eager quality.\n\n\"Tell me when you put the vibrator inside you.\"\n\n\"Okay. I'm pushing it in now. I'm still pretty sore from before, when it hurt.\"\n\n\"Take it easy, then. Go nice and slow.\"\n\n\"I am. It feels really good... and sore at the same time. No sharp pains now.\"\n\n\"Good. I think we'll be able to have sex without hurting you.\"\n\n\"I want that,\" she moaned. \"I want to have sex with you.\"\n\n\"You're giving me chills,\" I panted. \"Hearing you say that... wow.\"\n\n\"I love you,\" she said, panting. \"I've got the vibrator all the way in. I'm pretending it's you. I'm pretending it's your cock.\"\n\n\"Oh man, I wish I could see,\" I said, trying my best to imagine it.\n\nShe breathed hard into the phone for a while, then said, \"Hang on.\"\n\nWithin a few seconds, a notification appeared that she had texted me. My heart pounding, I tapped on it to open the messaging app.\n\nThere was a picture.\n\nI tapped on it.\n\n\"Oh my god,\" I breathed.\n\n\"I've never done that before,\" she said breathily. \"It feels soooo naughty. Never show anyone, obviously.\"\n\n\"Of course,\" I managed, still staring at the picture while jacking off furiously. There, before my eyes, was a picture of her pussy, with a vibrator stuffed into it. And this time, the angle was from below, so I could actually see everything. She was perfection incarnate. Her labia, her clit hood, everything was perfect and smooth and close to hairless. Her pubic hair was trimmed and mostly up above, with only a little down on the labia. I couldn't believe she had sent this to me. It was porn, and I loved it.\n\n\"Your pussy is amazing,\" I gushed, not knowing what else to say.\n\n\"I want you,\" she breathed.\n\nI was about to burst. I had only seconds left. She panted, and I hoped she was as close as I was. \"Tell me more,\" I gasped.\n\n\"I wish this was you, Rob,\" she moaned. \"I want you, I want you, I want you.\"\n\n\"Tell me what you want me to do,\" I said, desperately trying to avoid cumming, wanting to her hear say something naughty.\n\n\"Oh Rob,\" she said, then she gasped out, \"I want you to fuck me!\"\n\nIt was the first time I'd ever heard her say fuck. It sent me over the edge. I came explosively. I wanted her to have pleasure, too, so while cumming, while my stuff shot out of my cock and splattered on my chest, I managed to say, \"I want to fuck your pussy, Natalie.\"",
        "She groaned and gasped and said something along the lines of \"Oh Rob, you...\" except drawn out over at least ten seconds, long enough that she had to take a breath in the middle to get it all out. Clearly, my words had done the trick, and I was delighted, lying there grinning like a horny guy who had just had sex, which was almost accurate. I wondered what she was going to say, if she had managed to ever finish her sentence. We both panted and said nothing for a while, regaining our composure.\n\n\"Having you gone,\" she said, pausing to breathe deeply, \"has been... well, I don't want to say a good thing, but it forced us to change the way we interact. I don't think I would have ever bought a vibrator, or used it to have an orgasm, and we definitely wouldn't have done all this stuff over the phone.\"\n\n\"How're you doing?\" I asked, taking a risk. She hadn't mentioned her inhibitions or hang ups for a while.\n\n\"The thoughts and tendencies are still there, but it's easy to ignore them, even after the fact, which is when they would usually flare up so bad. Remember that?\"\n\n\"Yeah, I do.\" I remembered her fighting off tears after giving me a handjob.\n\n\"I finally feel like I'm on the tail end of it. I mean, it's almost exactly like an injury, mostly healed, but I still get a few twinges here and there.\"\n\n\"Can you think directly about it, or does that cause issues?\"\n\n\"Some of the thoughts I still try to avoid, but it's a lot better. Others, I can think directly about and it's totally fine. I can be objective about them.\"\n\n\"Sounds like you've decoupled the emotional response from those, then.\"\n\nShe paused. \"You look that up or something?\"\n\n\"Yeah.\" She didn't say anything for a while, so I asked, \"Is that okay?\"\n\nI heard her sigh. \"It's both frustrating and gratifying to have people care about me so much. If that makes any sense.\"\n\n\"It's hard to see someone you care about struggling with something,\" I said. \"My natural instinct is to try to help, but I didn't know how.\"\n\n\"I love you, Rob,\" she said, her voice a little shaky with emotion.\n\n\"I love you, too.\"\n\nWe talked of easier things for a while, lightening the mood. Eventually, it was time to hit the sack.\n\n\"I can't wait to see you in a few days,\" I said, reluctant to end the phone call.\n\n\"I'm ready,\" she said softly. \"I need you. We need to have sex.\"\n\n\"Agreed,\" I said, and we laughed together, enjoying the best company we could have at the moment."
    ],
    "authorname": "AccidentalDork",
    "tags": [
        "handjob",
        "dirty talk",
        "phone sex",
        "masturbation",
        "mutual masturbation",
        "vibrator",
        "romance",
        "love"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/i-only-wanted-you-pt-02"
}