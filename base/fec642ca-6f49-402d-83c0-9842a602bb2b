{
    "title": "Extending the MILF List Ch. 18",
    "pages": [
        "Hump Day-Hooker Wednesday\n\nTHE PLAYERS:\n\nSonny Duncan\u2014the narrator and umbrella owner\n\nHassum Amir\u2014represents a client of Alissa Honeywell's law office whom Sonny must satisfy for a \"job\"\n\nMelissa Crawford\u2014sister to Alissa Honeywell, has a fantasy to have sex with her nephew and brother-in-law, you do the math.\n\nAlissa Honeywell\u2014Sonny's main MILF, a startlingly beautiful black lawyer\n\nEllen Collier\u2014a lawyer who works for Alissa Honeywell, redhead, snarky and the main squeeze of...\n\nSammy Honeywell\u2014Alissa Honeywell's son and one of the original MILF List guys.\n\nBorland Northcutt\u2014enlists Sonny to a project involving his ex-wife...\n\nCarol Lynn Northcutt\u2014Borland Northcutt's ex-wife, blonde, slender, new to this episode of the MILF List.\n\nImogen Travers\u2014a woman supposedly married to Rictor Travers. Sonny is to have sex with her and her daughter...\n\nMiriam Travers\u2014the daughter (?) of Imogen and Rictor Travers.\n\nCaroline Bickerstaff\u2014ex-wife of Raymond Bickerstaff senior partner at Alissa Honeywell's law firm. She must have sex with Sonny to keep her ex-husband out of jail and to finalize a settlement with the law firm over a case of embezzlement. \n\nSophocles Bickerstaff\u2014also called Sophia and Sophie, daughter of Raymond and Caroline Bickerstaff\n\nLandon Clark\u2014one of the original five MILF list guys\n\nRictor Travers\u2014the guy who tried to sexually assault Alissa Honeywell and pissed of Sid Kingston et. al. So he had to surrender his wife and daughter for his trouble. \n\nExtending the MILF List Chapter 18: \n\n**************************\n\nThere may be such a thing as coincidences but even then, they need parts to fit together just so. The most complicated coincidences are more involved than just tab A in Slot B and bam! You have a coincidence. It is startling when they happen and even more startling when you decide it is a disaster and then just go limp and let happen whatever is going to happen. Well, not limp exactly, if you're a common male going limp is hardly the best response or any response, but you get my meaning. Wednesday began a series of coincidences that may or may not have been. The end result was lots of pussy for Sonny and, despite my occasional grousing about this abundance raining down around me, well, on me actually, I fucking loved it. \n\nI woke up Wednesday with no inclination to go to school. That wasn't what woke me. My phone did. On that phone was a certain Swish with a Wish. \n\n\"Hassum?\" I mumbled after his bright as sunshine greeting. \"It's snowing I think. Cold as Norwegian hell and it isn't even five o'clock here yet. Why do you sound so wide awake?\" I hesitated, finally remembering the door the man represented to me. \"What can I do for you, Hassum?\" I forgot his last name. I'd have called him Mister Something but that sounds fine unless you're trying to impress them, then not so much. \n\n\"Sonny, Sonny, Sonny, never ask what Hassum can do for you, I would if you asked, you know that. Ask what you can do for Hassum. Okay, that is inaccurate. Hassum do wonderful thing for Sonny.\" \n\nUh oh.\n\n\"What wonderful thing did Hassum do for Sonny?\" \n\n\"I arrange to put the Travers women in a good mood for you to meet them today. You know they are arriving today, right? You have to go meet them, right?\"\n\n\"Uh huh.\" I grunted. I sat up, rubbing my eyes. My intervention with Tawny had left me exhausted. Satisfying her boundless lust for showing off required lots of energy and left me with a distinct deficit. \n\n\"Well, I have arranged to put them in a very good mood. You understand that Mr. Travers is unfortunately at a very important position with respect to a certain unnamed project that both my employer and yours are engaged in, deeply engaged and not with adequate prophylactic protections, so they are feeling a fresh breeze where they should only feel cozy and warm.\"\n\n\"In other words, Travers has them over a barrel?\"\n\nHassum laughed. \n\n\"Oh no, our employers put other people over barrels, not the other way around. Travers can be replaced by a little red button but it would have expenses that could and likely would put the project in question into a much less lucrative mode. All the trouble would hardly be justified if Travers is not allowed to participate. So, as a penalty for his boorish behavior, you get his wife and daughter.\" He stopped.\n\nFor a moment I had the feeling that he was waiting for me to confess to having met them already but since he didn't ask, I didn't volunteer. I almost stepped into the pause and confessed everything but Hassum's love of his own melodious voice saved me.\n\n\"I have arranged a very nice shopping spree for them both this afternoon, after they arrive. I told you about that already.\" He paused again. \n\nI wasn't fooled this time. He wasn't seeking approval or my involvement at all. I stayed quiet as a mouse stalking the cat. \n\n\"Five thousand dollars!\" He chortled, pleasure and envy mixed in his voice. \"A piece!\" He fairly shrieked. \"Can you imagine? A five thousand dollar shopping spree!\" \n\n\"Wonderful.\" I spoke dourly and blamed the morning. \"You already told me about this. So what is so important to interrupt my beauty sleep?\" \n\n\"You are so male. Shopping cannot be to you what it is the other half of humanity.\" \n\n\"You're right. At this time of day I barely care to try to be even a little empathetic.\" \n\n\"No need. My point in calling you is to tell you that I have informed them each that you are to have them both, before they leave Friday morning.\"\n\n\"Any positions you want me to try out?\" I asked as dryly as I was able at that time in the morning. \n\nHassum laughed. \n\n\"Oh, Sonny, you funny man! Very funny man.\" He sounded just like Annie at her most pidginy. That made me nervous, wondering if all of his accents were put on. Perhaps every affectation was just a flounce and bounce with no springs in the mattress. I didn't like that idea, because I'd have bet a good ass reaming that Hassum was gay as a three-dollar bill. \n\n\"Sorry, I'm still asleep.\"\n\nHe sobered right up. \n\n\"I wanted you to know I happened to mention to them this morning that I may have let slip about their individual secrets. Neither were pleased.\" His voice had gone all oily, which made my ears wiggle. I was trying to figure out how that would affect the Travers weather report. \n\n\"Mrs. Travers informed me that you offered her a very nice collar. Copper weave I believe she said.\"\n\n\"I didn't want to offer them silver or gold in case I never see them again.\"\n\n\"Oh, I think you'll see them again.\" His voice sobered.\n\n\"Did they tell you what they told me? About why they are here?\" \n\n\"No. I can't imagine.\" \n\n\"Okay. Just curious.\" The silence that followed was priceless. When Hassum spoke next, there was real chagrin in his voice. \n\n\"Oh my god, Mr. Duncan, are you going to make me plead? Must I ask you to give me the juicy details?\"\n\n\"You can ask. Do I have to tell you?\" \n\n\"Of course. I live vicariously through you.\" \n\n\"Hassum, I haven't done anyone's ass since, hmm, let me think. Besides, we'd need to compare notes to determine if the female ass is the same as the male ass.\" \n\n\"Oh, dear boy, you underestimate me. Its not like I have never waded into a woman before.\"\n\n\"So? Is the ass the same?\" \n\nHassum laughed and hung up. I knew he had because the laughing suddenly stopped, unless someone had put a garrote around his neck and loped of his laughing head. I dropped the phone and went back to sleep. \n\nThe next call came at about seven or seven-thirty. It was Messy Melissa, Alissa Honeywell's sister. \n\n\"Sonny?\" \n\nI'd answered the phone, again, from the midst of a very deep sleep that did not involve fucking some train of women with an impossibly constant cock. I was making something with hammer and nails and the nails were too big. Fuck off Sigmund, it was just a dream. Anyway, the phone rang and once I got awake enough to make the thing work right, I heard Melissa Crawford's wheezing voice in my ear. I also heard the bangs and bumps of the blisters downstairs getting ready to go back to work. The thought about them calling Mom to get me to...what? Seduce, fuck, what do you call it when you have sex with a woman so your sister can boink her husband? Commerce? Fair trade? \n\n\"Sonny? Sonny! Are you there?\" \n\n\"Oh, what? Yes, Messy, I'm here.\" \n\n\"You never call, you never write...what's a girl to think?\"\n\n\"I turned off my ESP to save the battery, so, I give up. What is a girl to think?\" \n\nSilence. \n\nI waited. \n\nFinally, after a few thundering heartbeats, she sighed, loudly, right in my ear. \n\n\"Sonny, you haven't forgotten, have you?\" \n\n\"Forgotten what?\" Now there is a self-explanatory question if I ever heard one. \n\n\"Sonny! Don't make me say it out loud.\"\n\n\"I want to hear you say it out loud. Now you have to. Say it, say it, say it!\" I chanted, while frantically searching for what she was going to say to avoid gasping with surprise. \n\n\"Sonny! This is serious. I, I lied to Alissa. I told her I wasn't getting in till Saturday morning or afternoon I guess but I'll be there Thursday night.\" \n\nMy dance card was filling up. There's a concept from the 1920s none of us really understands anymore, durable and useful as it is. \n\n\"Oh, okay. What time?\" \n\n\"I have a late flight. It may be midnight or so before I get in.\" \n\nI groaned. \"Want me to pick you up?\"\n\n\"I need a place to stay, Sonny. I can't go to stay with Alissa because...oh, fuck, I want to fuck Sam and Sammy. Happy? I want to fuck a man and his son.\" \n\n\"Go on. This is getting interesting.\" \n\n\"And I want to have my brother-in-law with my sister at the same time.\"\n\n\"And leave Sammy out of that?\" \n\n\"That'd be the coup de grace.\"\n\n\"Use another term, that means you get your head chopped off.\" Or mine, I thought, considering that particular configuration of the ties that bind seemed to have a lot of razor wire included. Ouch.\n\n\"The Arc d'Triumpe, then. That okay?\"\n\n\"Close enough.\" I shivered and made my teeth rattle together. \"I think I'll share you with Sam first, just to get you two acquainted, unless I am missing something.\"\n\n\"No, no, not missing anything. I confess I teased him mercilessly and always just to piss Alissa off. It always worked, poor man. He didn't know where to sit or spin. How are you going to arrange it?\"\n\nI wanted to confess I was a little behind on that project plan. I decided not to. I went with the confident operative not brooking doubt in subordinates. \n\n\"You don't worry about that. Just make sure all your parts are oiled and in fine working order.\"\n\n\"I am so oiled up, I think I could smuggle a pound of sausage through the airport.\" \n\n\"Don't try that.\" I chuckled. \"If I can't pick you up, can I call you on this number?\" \n\nShe said that'd be fine. I had half a mind to have Sammy do that but I figured that he'd ride her off into the sunset and I'd have to settle my account with her another time. I had a flash of what Ellen Collier would think of Melissa Crawford. I shivered again, suddenly cold but wanting ever so much to see that. I felt like a mad scientist mixing chemicals before Lavoisier devised the periodic table, all curious and brave. I think it was that French guy. Before that it was all trial and error, mix and duck for cover. \n\nWe hung up and I lay back in bed. Without making the conscious decision, I'd blown off classes today. Well, for the rest of the week. I actually had most of the projects done early, papers and the like and I had tests late the next week. I had a landing pad for the pussy falling out of the sky in my schedule and I was loath to reverse whatever dance I did to call this rain. Wow. \n\nThe next call was from Suzanne's phone but Borland's voice greeted me. \n\n\"Sonny Duncan?\" \n\nHe sounded so formal, I got a knot in my stomach and a lump in my throat. \n\n\"Yes.\" I said, around them both. \n\n\"Borland Northcutt here. I wondered if you could meet me downtown about, say, ten this morning?\" \n\nI wanted to ask why. I wanted to but didn't. I don't know why. Borland was one of those men whose very manner makes you want to defer to them, like they know everything and have it all under their control if you just don't swerve out of your lane, things'll work out just fine. \n\n\"I suppose I could. Sure.\"\n\n\"You don't have class, do you?\"\n\n\"Canceled.\" I said, almost truthfully. I had canceled my attendance after all. \n\n\"Fine. See you then.\"\n\nI had visions of being handed Suzanne for a little servicing and got all wound up. I jumped up and got ready to go. At the last moment I packed a bag, replete with accessories and clean clothes as though I was going on a road trip for the weekend. I recognized my optimism in doing the boy scout thing but better to have it and not need it than need it and not have it. I was on the road before I realized I didn't know where I was going. I was downtown where I could pull off and diddle my phone when I got a text message from Suzanne ne Borland. It told me to meet him...believe it or not, at the Sparrow Garden, the bistro inside The China Sparrow, so that was the first coincidence. I drove there, handed off my car to the Top Hat guys and hurried inside. It was cold as a well digger's belt buckle. I was also early. I went into the restaurant and peered around. I found the back of Borland's head but doubted it because the woman sitting across from him wasn't Suzanne. \n\nI glanced at the time, it was nine-thirty. I scanned the crowd and saw mother and daughter, Imogen and Miriam sitting at their cluttered table, just finishing up. I moonwalked backwards out of sight and then scrambled around to a little alcove where I could watch the restaurant door. I sat down and picked up a newspaper. I tried it out and finally figured out the interface. Fuck, how could you read those things on the train and not just irritate the shit out everyone else. \n\nI held it up so I could just peer over the top. Ten minutes later I saw the Travers women walk out, bubbling with excitement. I have to wonder if shopping makes some women wet. Shit, if shopping can make a woman come, no wonder marriage is in trouble as an institution. The man is getting fucked twice and neither in a good way. Fine, I'm a chauvinist on Wednesdays. It is hump day after all. Can't be much more chauvinist than that, can you? Well, you can but I wasn't really trying that hard, saving my hardness for later as it were. Watching them walk out of the restaurant gave me a thrill because at one perfect point, Imogen Travers turned and I saw clearly the copper choker around her neck. She'd removed the copper chain but the collar was clearly affixed in place. She hadn't changed her mind. \n\nIt may have taken me another ten minutes to figure out how to fold up the newspaper. The first time I swear it looked like I'd made one of those sailor hats out of paper from the old movies. How can those things be so fucking complicated! If newspapers want to survive they need to put a little button on them that you can hit and they fold up all by themselves. \n\nI got up and sauntered into the restaurant. I stopped and scanned and damn if Borland wasn't gone. I was about to use the simple interface on my phone to call him when I felt a hand on my elbow. \n\n\"Sonny, there you are. Where did you go? I saw you come in but then you disappeared.\" \n\n\"I, uh, I saw you were with someone I didn't recognize and I was early so I thought I should be more on time and less early.\"\n\nBorland looked dapper, dressed in a dark blue pinstripe suit with a shiny red tie. His white hair was perfect, a surgically straight part, not a hair out of place. It was so perfect it could have been a hat. \n\n\"That's my ex-wife. We, we are negotiating and you are right on time. She has to leave. I just wanted to introduce you.\" He put a hand on my elbow. I half-expected to feel some pointed something in my ribs. I didn't but I felt steered as if there was a gun in my side. \"I'm going to introduce you as my new associate, and she'll take that to mean you're my assistant. Let her. I'll explain in a minute. Come along, will you?\"\n\nI nodded and went along, though my spine suddenly itched and I wanted to go find a gnarly tree to rub against to get the feeling of little creepy crawling things out from under my skin.\n\n\"Carol Lynn? This is Sonny Duncan. He is going to join us.\" \n\nThe woman regarded me with cool eyes. She was blonde but in a blonde way that made Suzanne Northcutt seem like a whole different species of human. Where Suzanne seemed voriciously sexual, this woman seemed like she'd been cut from a very diverse block of stone. Everything about her was in place and perfect. I reflected on this similarity between Borland and Carol Lynn Northcutt, the mother of his children but not his current wife. \n\n\"Pleased to meet you. Am I interrupting?\" \n\n\"No. We are done. I am leaving.\" The woman stood and nodded to Borland, which he mimicked, turned and walked away, her winter coat over one arm. She seemed to glide along, an impression shattered by the bob and dazzle of her ass. \n\nBorland and I both stared after her. I at least fixed my attention on her flanks and ass and presumed Borland was similarly affixed. \n\n\"You divorced that?\" I muttered, wonderingly. \n\n\"Yeah. I did. Sit. Please. I'll try to make it make sense but then, you've been in my wife, you have to understand that and you can as well as anyone, I suppose.\"\n\nI sat where she'd sat and the seat was still warm. The leather was supple with her heat and I had a tingle in my dingle thinking of what a woman had to be to make a seat that warm. Hot, was the word that came to mind and it echoed both meanings, the one the eyes mean and the one that skin indicates once the tight sweater comes off. \n\nBorland waved over a waitress who cleared their dishes. When he heard I hadn't had breakfast yet, he got a menu and I order eggs Benedict with American bacon. The woman gave me disbelieving look but I ignored her. When she left us, leaving behind a glass of water for me and a warm up of Borland's coffee, he looked at me with his gray, cool eyes and smiled thinly. \n\n\"I want you to seduce my ex-wife.\" He said softly. \"It won't be that difficult.\" He grinned but it was a bleak, grim thing. \"You see, since I married Suzanne, I have had a number of assistants. Each time Carol Lynn meets one, she seduces them. I had no idea she had that sort of talent or inclination. She was never omni-sexual while we were married. At first, she seduced my assistant and I had no inkling. It cost me half a million dollars because she found assets I'd hidden and required they be included in our divorce decree. I confess, I was trying to bilk her out of her fair share. I was facing the end of my professional career that I'd depended on to that point and feared penury at her hands, and we were fighting over the children and custody. \n\n\"Ah, the bad old days when I fought with her just to prove I could give as good as I got. She seduced my assistant, a pretty young woman that Suzanne figured out had gone into the other locker room before I did. I eventually figured out Carol Lynn was siphoning off information from her and her lap top. I dismissed her for cause and got another. Carol Lynn seduced them all, proving what I always thought that every woman can be bi-sexual. If there was ever a woman addicted to cock, the whole cock and nothing but the cock, it was Carol Lynn Northcutt. She took to sex with women so easy, but I never suspected until my divorce plan went south on nearly every point. \n\n\"That was actually a good thing. At one point, I just gave up and turned everything over to her and her shark lawyer. My shark lawyer did me right and we eventually fired them both and settled the matter between us, amiably...but it took a couple years for us to get there. By that time, my business had transformed into something new and I was much more comfortable sharing our largess with her. Suzanne never blinked, I tell myself that's because she's a Vestigial Saint but the reality is likely that she makes plenty of money doing what she does and so doesn't feel like Carol Lynn is picking her pocket. Since then, though, Carol Lynn has taken every opportunity to seduce every associate I have ever hired. I switched over to young men and she didn't miss a beat. I always thought I should warn them, tried that but it did no good. Whatever Carol Lynn decides, she'll usually does, without much hesitation.\" ",
        "\"So, its not so much that you want me to seduce her as you want her to seduce me.\" \n\nBorland nodded. \n\n\"Let me explain though. My son is a year younger than you. Just turned nineteen and is graduating high school. I can get him into a very good school but he'd need to leave home to attend it. One of the premier schools in the country. I offered to pay for it all and get him in and everything and she shut it down. It is one of those things she just wants to be contrary about, saying that she wants him to stay close by. I don't buy it of course, she is just opposed to anything and everything I propose, but always amiably. She says no with a very sweet smile. \n\n\"If that was all it was, I could just chalk it up to a difference of opinion but it isn't. She is busily emasculating our son. She does everything but dress him up in a skirt...I know that isn't the slam it used to be but still, you get my point. I'd not be bothered by any sartorial choice so long as he made it but she has sapped his will and destroyed his ability to make any decision or any will to even try. \n\n\"Carol Lynn isn't a bad woman and I don't really hold her responsible. Frankly, she is jealous of the combustibility of the sexual relationship I have with Suzanne. She hates Suzanne and that feeling seems mutual. Suzanne gets her hackles up whenever Carol Lynn is even close by. Both woman get possessive and I start looking for a priest with the right credentials to exorcise them both. It's easier to just keep them apart. At least till now.\n\n\"Carol Lynn has convinced Jason to stay home and go to a community college. She insists she should be the one to pay for his schooling and won't allow me to change that conviction. He is listless and limp when it comes to the subject and is ready to do only and whatever Carol Lynn tells him to do.\"\n\nI sat back. I think the pending project of the Travers women inspired me to try and suss out the point. I wasn't seeing it. I could see part of it but I couldn't see the whole picture and Borland clearly had something definite and clear in mind. I decided to just be honest and tell him what I thought I saw.\n\n\"Okay, so I see that if you introduce me as your assistant I should expect a flutter of petty coats and some heavy breathing coming my way. I don't see how that helps you with anything. Except to pull a gag on your ex-wife by tricking her into fucking me.\" I couldn't help it. I grinned and felt raffish for the first time ever. \"Don't get me wrong, I am not complaining. I wouldn't kick her out of bed for eating crackers. I think you'd have to be crackers to let someone else pick your bone with that lounging at home.\"\n\nBorland smiled. \n\n\"My ex-wife is a smart woman. Believe me, her skin wasn't that nice when we were married. She mistook lack of affection as lack of interest. Affection is like sound, after a while all that's left is echos of the original and if you don't have some nice hard surfaces, it just gets absorbed. We both went lax and let it fade and fade it did. Living together quit being fun for me at least and I'm pretty sure for her too. I was obsessed with the game at work and bored with raising the kids. That's likely why they resent me now. Let me lay it out for you though. \n\n\"You let her seduce you and you seduce her. You do with her what you did with Suzanne and I doubt she'll recover. While her head is turning round and round, you introduce her to the mother-daughter thing or the mother-son thing if you insist and let things be for a while. You're bound to meet Jason if you can keep Carol interested. She's been using sex to poke me for so long, I doubt she'll notice getting addicted to Sonny. When you have her enthralled, you either suggest Jason do her or make it happen. Either way, she'll be so appalled at what she let happen, she'll let go of him and I can get him to come live with me or something like that. Then he'll have a chance to get his head clear and start using the testosterone God gave him.\"\n\nI nodded, a little nonplussed but definitely intimidated. \n\n\"I think you overestimate the power of Sonny. I may look like a Pussy Master but it drops in my lap a lot of times and the rest of the time I am just dancing to the music. I don't think I'm the guy who dances and changes the music.\" \n\n\"What?\" Borland looked completely confused. \n\n\"I think you overestimate my ability first to seduce your ex-wife and then to keep her seduced long enough to make having Jason around uncomfortable.\" \n\n\"Oh. Why didn't you just say that? What's all that about music and dancing? We're talking about sex.\"\n\n\"I know.\" I didn't want to try to explain. I wasn't sure I could. I can't tell sometimes if I am making the metaphor or if the metaphor is making me. \n\nBorland sat forward.\n\n\"Listen. I shouldn't tell you this but I need your help and Suzanne says that you have what addicts a woman.\" \n\n\"A dick?\" I muttered. \"Pretty sure I am not that different from the other pants walking around with zippers for flies.\" \n\nBorland looked confused. \n\n\"I am not the only one who has a cock.\" \n\n\"No, not the cock. Suzanne didn't tell me whatever it was, she just said you had it and Carol would want it, like it and not want to give it up. She suggested that you treat Carol Lynn as just another of your, what do you call them? MILFs?\" \n\n\"MILFs, right. Mothers I'd Like to Fuck. Leave out the T.\" \n\n\"Right. MILF. I get it. Listen, I am worried sick about Jason and how he is turning out. He has no backbone and little or no interest in dating or sex or women. He ain't gay. Carol went nuts about the books he downloads from Amazon. She wanted me to shut off his access to my account but I refused. I see what he buys and it is all manner of tab A in slot B.\" \n\n\"You read that stuff?\" I asked a little nervously. \n\nBorland nodded. \"Traveling with the idea of keeping the plumbing working needs the help. Nice to take a brain vacation at night after working long hours.\" \n\nI nodded. Studying was like that, I guess. \n\n\"So you want me to seduce your wife?\" \n\n\"Ex-wife. You've already had the current wife and she has you on her speed dial so if you call, she'll know it's you and answer. And yes, I have her phone at the moment. And yes, she knows what I am suggesting. She said to tell you to take one step at a time. If you find that Carol doesn't cotton to you, then there is no next step. If she does, then you can play hide the sausage with her as much as you like. If the opportunity comes up to make sure Jason knows she having sex, often with you, monkey sex, circus sex, all that shit, then maybe you can find a way to get the end result, namely he wants to flee there and come live with us for the summer, at least. I can get him in off a wait list if he wants but he has to agree to get on it in the first place. Time is short. Just one step at a time. I want to hurry the process along but Suzanne says you stroke the pussy till its wet and you don't go pushing things inside until then. One step at a time.\"\n\n\"What if she doesn't chase me?\"\n\n\"Oh, she'll call. One thing she is or at least has been is consistent. I've had eight or nine assistants since we broke up and she's fucked them all. I was going to get two assistants but that just avoided the issue.\"\n\n\"What happen when she pumps me for knowledge and finds out I'm a know nothing?\" \n\nBorland smiled.\n\n\"She'll think you're incredibly clever and careful, loyal, kind, brave, clean and reverent and she'll want to fuck you all the more, I expect. Look, the whole point is to get Jason to think for himself. It may be that if you are having sex with her, she'll forget to focus on him. Tricia, my daughter, tells me that it's sickening, her words, how Carol dotes on Jason. Even Jason notices. He knows but doesn't want to reject her. He's a tenderhearted guy and knows how much the divorce hurt her, how much I hurt her. He has matured and gotten over the 'I hate Dad' thing but he hasn't found a way out of the 'mother loves me the best' trap he's caught in. He still believes that love and good are the same thing. He still believes that if someone loves you, they'll never hurt you and whatever they do will be for your own good. That conception is difficult to shake. It is sad but true, love and your own best interest are not always aligned.\"\n\n\"Stop it. You're depressing me.\" I muttered. It wasn't that realization that love and goodness are not always aligned; it was more the more personal idea that love would never find me because the first fight would end up being about me boning her mother and there's no way a guy wins that fight. Ever. That is not good long term love relationship material. Unless the objective is tab A in slot B, my approach to life simply doesn't fit anywhere in normal life. My sisters would agree, think. I stared the fact that love was not in my future if I kept fucking every opportunity that skirted my vision. I sighed, inside, out of sight, but I sighed. Everybody wants to love and I was too young to realize that eternal love was less likely that eternal pain. Still, that much was clear to me and so, yes, I sighed. \n\n\"Sonny, if you don't want to do this, if it doesn't work for you, then don't worry about it. This is my last attempt to influence my son's life and if it works, jolly good! If not, then that's the status quo. I know I cannot exert pressure without making things worse. I am hoping that you are a honey trap that might change the balance of power in that household.\"\n\n\"Isn't that being mean to the metaphor? I mean, I've never been called a honey trap before.\" I wasn't sure how I felt about that. I always thought that was a seductive young woman who stole your wallet and identity while you are stoned out of your mind under the couch from pussy intoxication. \n\nBorland ignored me.\n\n\"Well? What do you think?\" \n\n\"What do I think about what? I don't see anything to do yet. Are you going to give me her number or some way to get in contact with her?\"\n\n\"Oh no, she'd smell me on that. Nope, this has to be her idea. You are bait and we just wait to see if she strikes.\" \n\n\"Great, first a honey trap and now bait. Is that an improvement or not?\" \n\nHe ignored me again, apparently my identity crisis had no interest for him.\n\n\"Well, if she calls, I wanted you to know a little about what was going on. Okay?\" \n\nI grunted. Borland took that for agreement and called for the check. He signed and stood up. I wasn't done eating yet but it had gone cold. I ordered more. \n\n\"Thank you for doing this for me, Sonny. I know it is a lot to ask.\" He turned to go but then turned back. \"Don't neglect Suzanne, either. She is feeling ignored and that makes her downright hard to live with. So, I mean, when you have a situation to fit her, don't hesitate on my account. I have no problem with you having sex with my ex-wife and my wife on successive days.\" \n\n\"How about together?\" I asked, just to fill out the options. \n\nThe look Borland gave me made him look cross-eyed. I wanted to laugh but he laughed first. \n\n\"You do that and...and...shit, I don't know what I'd do but it'd be a fucking miracle. Fucking miracle!\" He laughed at himself then as he walked away. \n\nI checked the time. Shit, suddenly I had the whole day in front of me and nothing doing. That bothered me a little. I had that awful feeling that the pussy faeries had been rejected and they took their toys and went home. What if it was me and Rosy for the rest of my life, hell for the rest of my youth would be bad enough. I locked on that and after a dour few minutes, shrugged and assured myself that I was a talent and I could live if the pussy monsoon blew over and the sun came out again. \n\nThe Travers women returned to my mind and I sat there puzzling over their little knot of naughtiness. Those two women posed an interesting dilemma. One wanted to have sex with her mother and the other wanted to hide the fact that she wasn't really a lesbian. They both wanted me to have sex with the other and leave them alone. That confused me. It felt like a mid-term test and I'd skipped the last two weeks of class and material in the syllabus. \n\nI was puzzling over this when my phone rang. \n\nI answered it and it cleared up my confusion. \n\n\"Sonny.\" The voice reminded me of tomorrow. \n\n\"Well, if it isn't Ellen Collier. To what do I owe the pleasure?\" \n\n\"Were you fucking with me?\" \n\n\"Not that I know of. I think I'd have noticed, I mean, you are short but not that short.\"\n\n\"Fuck you, Duncan. No, I mean about the whole father and son does Ellen, thing?\" \n\n\"Oh, oh that.\"\n\n\"What do you mean, oh that?\" \n\n\"Just that. That. Nothing else.\" \n\n\"Jesus, Sonny, you're not making any sense.\" \n\n\"Shut up and let me think.\" I muttered. I was getting the divine light of the a priori shining up my butt again and I just had to let it mature. \n\nLet's see. Miriam Travers wanted to have sex with her mother but wanted me to have sex with her mother first, so she could tell her father Imogen wasn't a lesbian so maybe he'd go back home danging his cock before him. Imogen, on the other hand, wanted me to have sex with her daughter a) because she, Imogen, was a lesbian and didn't want Mimi to discover she was a fake pussy lover...unlike me who am genuine 100% pussy lover. And b) because she wanted to disabuse her husband of the idea that he was the only one banging his daughter. This all existed in the vacuum created by Hassum when he insisted that Miriam and Imogen were swapping lovers behind each other's backs, which meant that somehow they both knew neither were lesbians...god, my head hurt. \n\n\"Sonny? Jesus, are you still there.\" \n\n\"Not Jesus, this is Sonny. God, do you use the phone to talk to God?\" \n\n\"God? I don't have his number but I'd text him if I did.\" \n\n\"You called me.\" I said.\n\n\"And you told me to shut up and let you think. I doubt I really have that much time to waste.\" \n\n\"Fuck you, Ellen. Mrs. Collier.\" \n\nEllen laughed.\n\n\"Mrs. Collier was my mother, at least for a little while. So? Goddammit Sonny, were you shitting me?\"\n\n\"Oh, you mean about you having sex with your dark friend's father and him at the same time?\"\n\n\"There you have it. I knew you'd catch up if I slowed down to a fast crawl.\" \n\n\"Fuck you.\"\n\n\"You said that once but without much conviction.\" \n\nI couldn't untangle the Travers knot but then I got an inspiration. Mrs. Travers wanted a double dose...I'd demonstrated the regular fucking last night using Tawny as my partner in crime...I chortled to myself. I am Captain Profane! I bet I'd look good in purple tights. \n\n\"Ms. Collier, how is your ass lately?\" \n\n\"My ass? Are you asking if Sammy has been spanking me, no. If anyone gets spanked its Sammy, not me.\" \n\n\"I don't want to know about that.\" I muttered. \"No, I mean as in the asshole.\"\n\n\"Oh, you mean is Sammy cornholing me?\"\n\n\"You're such a lady.\"\n\n\"You too. What do you want, really?\" \n\n\"Ask not what Sonny can do for you, ask rather what you can do for Sonny!\" \n\n\"Jesus, don't you respect anyone?\" \n\n\"Bugs Bunny gets my vote. He had more cool than James Bond and never even killed anyone.\"\n\n\"James Bond isn't real.\"\n\n\"Hey, neither is Bugs Bunny.\" \n\n\"What are we talking about. Oh, the ass.\"\n\n\"What if I offered you a two 'fer. One in front and one in back?\" \n\n\"Didn't we do that already?\" \n\n\"Maybe. But if you don't remember, we should try again and see if it is more memorable.\" \n\nEllen snickered. \n\n\"Can you get to the point. I'm dying here.\" \n\n\"You called me.\" \n\n\"I know but...oh never mind. What the fuck are you talking about?\" \n\n\"How would you feel about getting double-teamed in front of a couple of strange women who have ambitions of their own?\"\n\n\"Ambitions?\" \n\n\"Answer the question. No deflecting. Think about it. You riding one cock. Another inching into you from behind. Two beautiful women watching closely, seeing how a real woman fucks two men at the same time.\" \n\n\"God, Sonny, you really know how to ruin a woman's day. I won't be worth a shit now.\" \n\n\"Why?\"\n\n\"Didn't you just proposition me?\"\n\n\"Did I?\" \n\n\"Did you?\"\n\nWe were getting no where. I finally grabbed the bull horns, or the horny girl by the bull, maybe.\n\n\"I'm thinking of demonstrating how a woman can be fucked in the ass and pussy at the same time. I'd like you to volunteer as exhibit number one.\" \n\n\"You want to make me an exhibitionist?\" \n\n\"Yes or no. I'll call someone else. I have a little black book.\"\n\n\"Surprised you can read.\"\n\n\"Fine. Talk to you later. Oh, what did you call for?\" \n\n\"Sonny.\" Her voice became completely serious suddenly. \"I need to know if you were shitting me about fucking Sammy and his dad.\" \n\n\"Ellen, I was not shitting you. I'd be pleased if you'd consent to fuck Sammy and his daddy.\" \n\n\"Why?\" \n\nOh. There it was. She was smelling a skunk in the wood pile. \n\n\"Because. No, hold on. I'll tell you. Because Sammy's Aunt is arriving tomorrow night and I thought it'd be easier for Sammy to share you with his dad before they took on his Aunt.\" \n\n\"Good god's galoshes. Sonny, are you serious?\"\n\n\"Yep. Later, its Sonny, his father, his mother, and his aunt all comparing freckles on a bed.\"\n\n\"My god, are you serious? Can I...I don't suppose that would work so well. What with Mrs. Honeywell being my boss and all. How will she feel about me boning her ol' man?\" \n\n\"She's not exactly in love with him. I have my doubts about making this all work out. They have issues.\" \n\nEllen didn't respond for a moment. She was thinking and I was waiting for her to finish.\n\n\"Sonny, really, would this help or hurt that? Them I mean? I don't want to go where angels fear to tread.\" \n\n\"Yeah, like you're an angel. Ellen, seriously, I have no idea. I am just taking suggestions from the audience and they include Alissa's sister doing Sammy and Mr. Honeywell.\"\n\n\"What makes you think Mr. Honeywell is interested?\" \n\n\"That's a good question. He said he was. It is in the man manual not to lie about such things except to your therapist.\"\n\n\"You've discussed this with him?\" \n\n\"I have.\" \n\n\"And?\"\n\n\"And he wants to fuck his sister-in-law.\" \n\n\"What about his wife?\" \n\nI grinned to myself. \n\n\"That might be a little of my own invention.\" \n\n\"You're shitting me? You're thinking about setting Mrs. Honeywell up with her own husband?\" \n\n\"And her sister. And her son.\"\n\n\"Jesus rocks, Sonny, you're one crazy S.O.B.\" \n\n\"And you could be there.\" I added, almost eagerly. I managed to keep the voyeuristic excitement out of my voice. If I was a woman, watching another woman fuck her husband and son at the same time would spin my top. I knew I was projecting but I had the feeling that Ellen Collier's top spun in just that way. \n\nShe exhaled into her phone, a very expressive statement of her response without wasting any words. \n\n\"Well?\" \n\n\"It's scary to say, but fucking god, Sonny, I want to be there.\" \n\n\"Can you leave work today? No. Better, come around early maybe four or five? Take tomorrow off, hell, take the rest of the week off. I think I can put a little fizz in your juice box if you like.\" \n\nI could imagine her shaking her head and rolling her eyes. \n\n\"Sonny, you do this and...I don't know what but I'll make it up to you.\" \n\nI chuckled, imagining Ellen with a nice neat collar around her neck. I had a sudden, disquieting thought. Was I getting too rambunctious with the collars? If everyone I fuck has one, does it lose its meaning? No. No and no. No, no, no. A collar means, Sonny please fuck me. I failed to see how that would be an inhibition I didn't want to live with. Hell, I could always say 'no', but only if it was sexy as hell to make them wait. \n\n\"So where are you. I mean, where should I be?\" Ellen asked. The subservience in her voice, tautly eager, ran a shiver up my spine. \n\nI told her about The China Sparrow and gave her basic directions. I disconnected. Oh, shit. I was missing a dick. I hated it but the idea of Ellen mounted on Brent's cock more or less grossed me out. She'd look like a corsage. I called Landon.",
        "\"Landon? You in class?\"\n\n\"Uh, nope. At home. What's up, Sonny?\" \n\n\"Listen, you know about Sammy's affair, right?\" I forgot if he knew or not.\n\n\"Why don't you clue me in, as if I don't know, so you and I both understand each other.\"\n\n\"He's nearly shacked up with an associate attorney at his Mom's firm. She's crazy as a wet cat but feisty. Sammy loves it and she gets a charge out of boinking her bosses' son. But she has other boinking charges I like to cater to.\" \n\n\"Oh? Do tell.\" \n\nI paused, sorting through what fit best to tell next. I decided for a robust explanation. \n\n\"I have a mother and daughter who are a bit twisted and twisty. That is to say I am not sure what is going on but I have one in a collar and the other thinking about it.\"\n\n\"Jesus, Sonny, what are you doing, anyway?\" \n\n\"That's a longer story. The mother has the idea that she'd like to get a cock from both sides.\"\n\n\"Double teamed?\"\n\n\"Right.\"\n\n\"Which is why you're calling me.\"\n\n\"Right again.\" \n\n\"You know my mother and Darlene had a little work assignment Monday, right?\" \n\nI think Landon was testing me, and in doing so was testing Darlene. I chuckled.\n\n\"I set them up, yes. They were helping me out as a mother-daughter team. I am leery about handing off the actual mother-daughter pairs I have...what would I call it? Obtained?\"\n\n\"Collared?\" Landon offered dryly. \n\n\"Close. Working on that. Anyway, rather than just drop this new MILF into the deep water, and her daughter with her, I offered Ms. Collier the opportunity to be our demonstration toy.\" I stopped, waiting to see what Landon's response would be. He didn't jump in but after a few moments he hissed into the phone.\n\n\"You want me to help you fuck this Ellen Collier?\" He grunted. \"How do I...I know, I know. I don't need to explain it to Darlene, she fucked some stranger the other night as a favor to you. I can fuck this stranger as a favor to you and it all evens out, right?\" \n\nLandon knew angles. That was certainly mine.\n\n\"Right. Exactly. What do you say?\" \n\n\"Where and when?\" Here he chuckled a little wryly. \"I have the feeling that I've been missing the boat. The other guys are all getting a lot more variety than I have been.\"\n\n\"Dude, you're in love. It makes you blind.\"\n\n\"Yeah, with a woman who thinks hooking is a cool pasttime and is trying to hook my mother into sharing her hobby with her, so to speak.\" He snorted. \"That just sounds weird to say out loud. God, Sonny, when did you become the fuck god?\" \n\nI shrugged, suddenly feeling that distant past when me and my friends were just guys talking about basketball and chasing the fluttering skirts that fluttered by. Then we chased with our eyes, now I chased with my cock. Different. Really different. Well, catching is different now, different than just chasing. I like chasing though. Chasing is fun; catching is phenomenal. \n\n\"Suddenly its raining pussy and, well, I have a thing about rejecting a willing woman...\" \n\nLandon clicked his tongue. \n\n\"Dangerous to reject a woman. Word gets around.\" \n\n\"Precisely my fear. So?\"\n\n\"I said where and when.\" \n\n\"Say five tonight at The China Sparrow?\" I gave him directions and told him to meet us in the bar. I wondered if I'd told Ellen to meet us in the bar or not? I was about to call her back when my phone rang in my hand. The universe was not done with me yet. It was still trying to drown me. The fuck faeries were still buzzing around the room backwards.\n\n\"Hello?\" I answered my phone. I didn't recognize the number nor did I recognize the voice exactly. \n\n\"Is this Sonny Duncan?\" The woman on the other end of the line asked. Not a line anymore but what do you call it when you use a cell phone? I like the line and the connection it implied, like it was real and physical. \n\n\"It is.\" \n\n\"This is Carol.\" \n\nWow. That was fast. I felt a surge of pride at being such good bait. \n\n\"Hi. What can I do for you, Carol?\" I like that phrase and fall back on it when I am easing into something, or someone. \n\n\"You can have sex with me.\" \n\nI waited. The tone of her voice sounded like she had more to add but then didn't. Plus her voice didn't exactly match the blonde I'd met earlier. But then, she'd only spoken like two words and this call, the \"please fuck me\" call could tinker with the vocal chords. I ignored the discrepancy. Oh hell, I didn't even notice. She had me at \"you can have sex with me\". The subtleties flew right past me. \n\n\"I, well, okay.\" I said, realizing for the first time that I simply hadn't thought through to this moment and how to get through it to the end result. Turned out I didn't need much participation, depending on how you squinted at it.\n\n\"Where are you?\"\n\n\"Still at the Sparrow's Feast.\" \n\n\"The Sparrow's Feast?\" \n\n\"Oh, that's not right, is it? I mean The Sparrow Garden. Sorry. I haven't been here till now.\" \n\n\"Is that in the hotel?\"\n\nI thought that was a little odd but ignored it.\n\n\"Yes, in The China Sparrow.\" \n\n\"Okay. I know where it is. I'll be there in fifteen minutes. Why don't you get us a room?\" \n\nI almost made some smart assed comment about doing it in public since it takes a village but didn't. How well did I know this woman? If you are going to be silly, best to know your audience or let them pick you at least. \n\n\"Text me the room number.\" She spoke into the pause my mental futzing created.\n\n\"I will.\"\n\nI had a small twinge, suddenly disappointed that I couldn't get to the movies. I hit myself on the cheek bone with my fork and got egg on my nose. What idiot thinks that movies are better than sex with a stranger? If that's a real question, the answer is not me. Definitely not me. I looked at my unfinished breakfast and groaned. I quit eating immediately. I'd been stoking for an evening tryst with The Travers women and a little demonstration with Ellen but now I needed to quit stuffing my cheeks. \n\nI got up and sauntered out to the elevators and took it up to my room. A Suite! I figured I had income and I could spend it. I wondered if I could deduct the cost of the room from my taxes? Only if I fucked Mrs. Travers on my bed once each night I paid for. Then I could call it a business expense, right? \n\nI had a whole dialog with an IRS auditor in my head, trying to explain why a hotel room in my own city constituted a justifiable expense in my business, oh, and just what was my business anyway? Private dick? More like public dick. I was chuckling to myself all the way up to the room. I opened the door and found a spacious, bright room, dim with the cloudy day but bright with the radiated light that made it through the dull slate clouds. I went into the right bedroom. There were two beds. I lay down on one and went right to sleep. \n\nI jerked awake to find a message dinging on my phone. I realized the moment I woke up that I had not texted the room number to Carol. Her message was slightly off-color but not amusing, something about where did I want to poke her. The comment just didn't go with the blonde woman I'd met just that morning. I sent a reply, something to the effect of \"Pussy, mouth and ass. Oh, and the room number is 1801\" \n\nI got nothing back. \n\nI lay back again and relaxed and danged if I didn't go right back to sleep. \n\nBanging on the door woke me. I struggled off the bed and walked to the door. I automatically peeked though the spy hold. My eyes shocked me.\n\nI did not see the blonde woman from earlier. I saw a voluptuous black woman. \n\nUh oh. I thought. Something isn't right. I am quick like cement. \n\nThe explanation was exactly easy to intuit. I was shocked to find a new and different Carol on the other side of the door. Surely this woman was Caroline Bickerstaff, not Carol Lynn Northcutt. My brain had made a local association of voice with name, not the remote one that was actually true. For a moment, I stared through the peep hole and my head seized and creaked and turned into a block of wood. \n\nShe banged heavily on the door again. \n\nI opened it. \n\nFor a long moment, we stared at each other. \n\n\"Are you Sonny Duncan?\" She asked finally. \n\nI nodded.\n\n\"You are Caroline Bickerstaff?\" I asked, hiding the confusion crawling around on my skin making me want to giggle and run. \n\nShe nodded. An odd look passed over her face. The expression was a sidelong look as though she felt someone watching her. I poked my head out beyond the door frame and looked to her side, nearly touching her when I did so. She stepped back a step. I swear I heard her swallow. \n\n\"My uh, daughter is downstairs. Can we get this over with all at once?\" \n\nI gestured her inside.\n\n\"Let's not discuss this in the public byways.\" Who talks like that? Public byways? I was rattled and that shook loose flakes in my vocabulary I almost never use. \n\nI moved deeper into the room and she followed me. I was walking backwards so I wasn't being followed exactly. What do you call that? No idea. The door slammed shut behind her. I cleared my throat. \n\n\"Listen, if you don't want to...\"\n\nShe waved a hand at me. \"We don't have a choice, now do we? We must have sex with you, together, or we don't get the settlement. Right? Do I have that about right?\" Her voice sneered around the question. \n\nI stared at her. \n\n\"Listen, and listen closely. If you don't want to have sex with me, there are plenty of women who do. There is no need for you to...\"\n\n\"Yes there is. I just told you.\" She said, her voice rough and tense. \n\n\"Yeah, well, that isn't my doing. I am just the accommodating dick in the picture.\"\n\n\"Uh huh, well, we still don't have much of a choice, now do we?\" \n\nI felt her anger. I wondered if the applicants for the lay down assistant would be this pissed off. Surely not. They'd have greed gleaming in their eyes and I'd have to suss that out and avoid it. Shit. I needed to find the precisely right woman who'd agree to serve...that thought rattled me a little. I rallied and focused on the woman's lips, thick, red and plush. I wondered what they felt like around my cock...shit, I rallied again and focused else where, which proved to be the crevice of her bust and that inspired me, clearing my head. Go figure. \n\n\"I think there's been a misunderstanding. I think you had better go.\"\n\n\"No. You have to fuck me and Sophia. My daughter. It has been perfectly plain to me that you have to fuck me and hard, and Sophia too and we have to be sexual with each other.\"\n\n\"You haven't done that before?\" \n\n\"Done what? Christ, don't you know if you've fucked us or not?\"\n\n\"No, I mean...ah...been sexual...together.\" I stuttered and I'd like to say it was intentional but I was imagining this woman naked with another nebulous black woman that turned out to be Portia Kline and I got really uncomfortable. \n\nThe woman shook her head.\n\n\"Listen, why don't we go downstairs and talk about this, just to get acquainted at least but also to see if there is a way to solve your problem in a way that doesn't wreck your settlement package.\"\n\n\"My ex-husband insists that you do us both. Just like you did Mrs. Kline and her daughter. He says that if they had to, we have to. It's that simple.\" \n\n\"I don't want...\"\n\nHer temper flared. \n\n\"I don't give a flying fuck what you want. I have to do this. Sophie has to do this. Now, let's do this and get it over with!\"\n\nI retrenched and retreated, or maybe that should be the other way round. \n\n\"Is it Sophie or Sophia?\" I asked, trying to retool the subject a little, to get it cocked in another direction. I had my fucking hands full of pussy and didn't need any more. No, wait! I didn't mean that. I was just venting! Honest. I didn't mean I didn't need any more pussy. I didn't say I didn't want any more pussy! All the fuck faeries had gone still, wondering if they had heard me right. Don't mind me, I was just blathering!\n\nI think Mrs. Bickerstaff the former saw something on my face. \n\n\"If you tell me you don't want a try with this body, I can assure you, my daughter will put the wingwant in your tallywhacker. No way you turn Sophia down!\" \n\nShe didn't answer my question either. \n\n\"Fine, lets...\" I hesitated. Talking reasonably and giving her a way out did not seem to be working. I had a fleeting thought that she was in lust with me and refused to let me escape her healthy thighs now that they were targeted on me and my poor little cock. Caroline Bickerstaff was a substantial woman. Okay, maybe that was just me thinking positive. I really hadn't seen much sign of lust in her, not being able to see around the big lump of lust sitting on my face. \n\n\"Let's go down and find...Sophia, is it? She's of age, I mean over eighteen, correct?\" \n\n\"Sophie is twenty-three, last month.\" \n\n\"Wonderful.\" I muttered. \"Shall we?\" I was beginning to wonder if the woman even knew her own daughter's name. I tried to smile but my face wouldn't move. \n\nCaroline Bickerstaff stared at me for a while. I felt the polite pause was long past and we were into the impolite delay that indicates indecision. Finally, she smacked her lips and nodded once. \n\n\"I told her that, that I'd have sex with you first. If, if it was okay, I'd call her and she'd come on up and you can have her.\" \n\n\"I usually do the daughter's first. I fuck the daughter's first. That way the mother feels like I am not rejecting her for a younger version when I do the daughter.\" I have no idea why I said that. It was patently bullshit. Not only was I not sure it made good English sense, it did not match my experience. I did mothers first all the time. Hell, the MILF list started with mothers. Beep. Disqualified. They had only sons and I wasn't doing my buddies before I did their mothers. I don't do men. Sorry, not my thing. I was angling for a timeout so I could go back and retool my picture of the blonde woman naked and begging for me to fuck her and replace it with this woman having sex with her daughter. Shit, that may sound like an easy transition but I was struggling with it. I needed a chance to catch my breath and I thought maybe a stroll downstairs would get me time to adjust my expectations. \n\nThe woman seemed to be correlating my words with some internal analysis. Finally, she nodded and stepped back, gesturing at the door. \n\nI got up and together we walked out and down to the elevator. I say \"together\" but that was true only in a manner of speaking. We were not in step. We did not walk side by side, she hung back a ways behind me. We did not speak or look at each other and we both pushed the down button. Me first, then she did, as though I certainly couldn't get that right. \n\nWe joined people on the lift and let it lower us down to the lobby. I thought I was home free. We'd sit down to a snack and talk this all through. Maybe, I would get to go to the movies. See? I was oxygen deprived. I hung back to let the rush of people clear the car before stepping out. Mrs. Bickerstaff left me standing and I felt like I was on my own, looking around for her. A voice brought me up short. It was familiar but I couldn't place it exactly. \n\n\"Mr. Duncan?\" \n\nFor a moment, I thought it was one of the Travers women returned from shopping. I looked around. Nope. It was worse than that. Since Caroline had exited in front of me and ignored me, we did not look like we were together. That left this new woman free to speak directly to me. When my eyes found her, all my sphincter's tightened up and I felt my cock shrivel. Then, then, just as rapidly, it reversed and snapped to attention with appalling celerity. My vascular system was getting quite the work out. \n\n\"I'm Carol Lynn Northcutt.\" The voice said. \"We met earlier this morning, in the restaurant.\" \n\nI groaned. I nodded. Here was a colossal coincidence. It had to be. \n\nIn front of me, the other Carol turned to look at me, eyes full of questions. They looked at me and I had no answers. I knew what was happening but I was utterly at a loss as to how to manage it, stop it or make it go away. Whatever was happening had me in its jaws and wasn't letting go until the morrow in my bones was shaken and stirred both. \n\n\"Hi, Mrs. Northcutt. I'm surprised to see you here. I thought you left.\" I did, that was true but that was the only truth in my words. I spoke my wish, the wish she wasn't standing there staring at me.\n\n\"What are you doing here?\" She asked with a soft smile that never made it to her hard eyes. \n\nI blinked. \n\n\"I was just up in the room.\" I said. I could see, behind Carol the Northcutt, Carol the Bickerstaff watching me with interest, idling like a big diesel waiting for the signal to roll into motion. She looked curious, fascinated like she was watching a naked juggler. \n\n\"Oh? I thought you were Borland's assistant? Why do you have a room here? It seems like it'd be a little beyond your means.\" \n\nOh crap. Now I'd stepped in it. My mind whirred and sent words to my mouth. The delivery guy had no idea what they were but out they tumbled as if someone brought a porcupine into an orgy. \n\n\"It's hooker Wednesday. I'm really just an intern for Mr. Northcutt who helps him out from time to time. I'm still in college and every Wednesday when we're working he pays for a room and a hooker for me. Keeps me out of trouble, he says.\" \n\nI think Mrs. Northcutt the former was as surprised by my words as I was. \n\nShe blinked the way I'd been blinking moments before, like I'd sprayed on her while I was spluttering. I know I didn't. My mouth was so dry I couldn't whistle. \n\n\"Oh well, I see. I was hoping I might ask you for a little time, just for a chat. As the former Mrs. Northcutt, I like to keep up with my ex-husband, you know, out of curiosity. Perhaps you could give me a few minutes so we can chat? Maybe a cocktail in the bar?\" \n\n\"A cocktail?\" I murmured. I was thinking \"my cock and your tail, right?\" but didn't say that out loud. Like I never lose control of my lips, tongue or brain. When Mrs. Bickerstaff nodded and gestured towards the bar from behind the blonde who'd intercepted her pass, I felt her willingness to work around my newest impediment. I grunted. My luck the Travers women would be in for a bite between turns at the department store and I'd have all five of them lined up ready for a good rogering, even though I couldn't explain the queue to anyone. \"How do I get into these situations?\" I wondered to myself, vaguely, I'll admit because the queue was damned interesting. \n\n\"Fine. I guess I have time.\" I tried not to focus on the fact that I was underage to be in a bar and focused instead on what Mr. Northcutt had told me about his ex-wife...that she'd bedded his other assistants and she clearly thought I was next up. Fuck me, she was hot. I love ADD, there's always something interesting on the Sonny network! I liked that SEN. Sonny Entertainment Network, the new name for my mind.\n\nMrs. Northcutt the former nodded with prim satisfaction and turned around and let me follow her trim ass into the bar. She tried to sit in a booth but I steered her to the bar. She seemed unusually reluctant to sit there but I put my hands on her waist and literally steered her and she literally let me. I felt the shock of feeling my hands on her slim body rattle through her. The shoe was on the other foot, at least for the moment and I wasn't going to be changing feet any time soon. \n\nShe immediately tried to regain her momentum. She ordered two dirty martinis and then looked me full in the eye and asked, \"So, tell me about Hooker Wednesdays?\" She smiled happily in anticipation of my pending squirm. Her face fell immediately when I launched into my explanation. \n\n\"Mr. Borland started it after Suzanne, er, his current wife, you know her I expect, seduced me. After a couple times catching us, my excuse for failing to get a project done on time, because she was sitting on my face, he decided a hooker or two would keep my hormones at bay and me focused on the job at hand and not on his other blonde wife.\" I grunted, looking around the room. \"Personally, I think he's messing with her because if I am getting bonked by a hooker once a week, it takes the edge off and she has to do more to get my attention. Know what I mean?\" I eyed Mrs. Carol Lynn Northcutt. I don't think she heard my whole spiel. ",
        "\"Other?\" \n\n\"You're blonde.\" I said, gesturing with a limp wrist and an oh so casual twinkle of my fingers. \"And very attractive for a mother of two. Borland holds you in high regard. I can't tell you how often he...\" I stopped. Now it might seem like that was a tactical halt to a sentence that could only land me in the ditch but it was actually shock at seeing Mrs. Bickerstaff the first and a younger woman, black like her, follow her into the bar. They scanned the place, not focusing on me or the blonde sitting on the stool next to me...I'd sat down with my back to the bar so I was facing the room and Mrs. Northcutt had to turn to look at me, so her back was to the entrance. I saw Mrs. Bickerstaff the first come through the door. \n\nCarol the Bickerstaff said something to the woman with her, a frighteningly beautiful young woman with those eyes that said \"Yes, of course,\" followed closely by \"if you dare, you can try.\" They were darkly inviting and brilliantly challenging all at the same time. It was like she was inviting you to feed her pet alligator and the ambiguity was potentially killing. \n\nThe two black women strutted, tits forwards and asses trailing, they strutted, the only word for it, over to the table right at my knees, glanced at me and sat. I turned around and faced the bar so Mrs. Northcutt wouldn't see them. I don't know why. Well, I do but I'll let you figure it out in a minute. Should be easy. I didn't know at the time; I thought Mrs. Bickerstaff would book as soon as the blonde got her hook in me. I underestimated her commitment. \n\n\"So, anyway...\" The barkeep came over and set down our drinks. He was a sharp, pen drawing of a man with a pencil mustache and slicked back black hair and plucked eyebrows. He wore a white shirt with green stripes with a garter around his left upper arm. No idea what that meant and I wasn't asking. \n\n\"...he decided that hooker Wednesdays made sense, you know, hump day and all.\" \n\n\"Hump day?\" Carol Lynn sucked on her martini. She looked up at me. \"I think you're lying. He'd never...\" \n\n\"Let me tell you about the one I'm meeting today.\" I began. I heard a squeak from behind me. I almost chuckled, it stuck to my teeth and I took a swig of the martini to get some lubrication, maybe the first time in history anyone ever swigged a martini. \n\n\"She's about five-foot-one in bare feet. The first time I fucked her was in a bistro. She was a regular with this guy, a Mr. Bickerstaff,\" I spoke the name for the benefit of the two women sitting before me, studiously not looking at me but not talking or moving or anything, which indicated to me they were surely listening to my little narrative. \n\n\"Mr. Bickerstaff was defrauding her and I had become engaged to extract her from her predicament. To prove to him that she was mine to fuck and not his any longer, I fucked her right in the restaurant, her legs to each side of mine in a booth. Later I ate her till she screamed and then fucked her. She's rather willing to be what I want today. She's eager. You'll see, if you stick around. I was going to meet her around five. She loves to kiss, kisses like her life depends on it.\" \n\n\"I didn't think hookers ever kissed.\" \n\n\"Couldn't prove it by me.\" I muttered. \"God, I thought she was going to take out my tonsils. I boiled over and she came a couple times while I was mounted between her legs. I couldn't believe it. She went off like she'd been primed before I got there. She was slated to fuck Mr. Bickerstaff and when I got to her, she was all smarmy inside, like she was anticipating that fat man and that meant only one thing. She loved to fuck.\" \n\nCarol Lynn was staring at me, her eyes getting wider and wider.\n\n\"And you say Borland paid for her?\" \n\nI smirked. \n\n\"It was a dry run. One of his running buddies, this Mr. Bickerstaff, wanted a go at Suzanne and he wanted to use the Hooker as a diversion, just to see if it was a fixation or just a general case of the hornies. Hmm, I never did ask about that, which it was. Anyway, god, you won't believe this. Me and a buddy did her together, one and one, ass and pussy. She is small and god was she a tight little package!\" \n\nCarol Lynn just stared at me. Beyond her, I could see the prissy barkeep with his ears pricked up, soaking up my story. He'd polished the same tumbler for the last five minutes. \n\n\"She took us both on, ass and pussy and came and came, but she really loves having a little tongue to go with her cock.\" \n\nI took another swig of my martini and some went down the wrong pipe. I spent the next couple minutes panting and choking while the vodka scrubbed the varnish off my larynx. Carol Lynn didn't offer to help me at all. She just sat there and about half way through my contortions, she fucking ordered another martini for us both. The bitch. I'm choking to death and she's making time with the barkeep. \n\nShe was a cool customer. \n\nWhen I finally got my shit together again, she calmly waited for me to resume my introduction to Ellen Collier. I had a flash of Ellen's ghostly white body nibbling first white Carol and then black Carol, tongue to pussy. That thought gave me another massive anxiety attack because she was supposed to be a prop in the Travers drama. She might have to do double duty. Fuck me. She'd owe me twice as nice. \n\n\"Where was I?\" I asked, wiping the tears from my eyes.\n\n\"You were about to fuck Ms. Hooker in the ass.\" \n\n\"Mrs. Hooker, if you please. She was a very nice MILF, is a very nice MILF but with no daughter, not really, so she was only half the perfect fuck.\"\n\n\"Half?\" Carol Lynn asked, arching an aristocratic eyebrow.\n\n\"MILF and Daughter is the perfect fuck.\" I said, maybe just a little too loud. I heard a rumble from behind me so I knew Caroline the Bickerstaff had received my long verbal pass. I hadn't forgotten her; her presence pressed at the hairs on the back of my neck making it tickle, waiting for her to inject herself into my narrative, demanding that I shut up and inject myself into her. I waited in vain, but it made me both tense and hard. \"Nothing better than a mother-daughter team at the same time. God, its awesome trying to get them to fit on the same bed at the same time and not scratch each other's eyes out. I feel like a lion tamer wearing eau d'sausage.\" I did laugh then, which was a relief because the nervous energy was zinging around inside me like a pissed-off bee in a coffee can. \n\n\"Bullshit.\" Carol Lynn hissed. \"You never fucked a woman and her daughter?\" Her voice made the statement a question. \n\nI knew I was getting to her. Fuck me. \n\n\"Really? You're only saying that because your daughter ain't of age yet. Jealous? Thinking about it? Watching your sweet daughter hunching a mile of cock six inches at a time.\" \n\n\"That all you got?\" Carol Lynn whispered ominously.\n\n\"Oh, don't be petty.\" I said proudly. \"I'm not. I assure you.\" \n\nThe blonde woman glared at me. \n\nI drank and got the address right this time. It tasted like it was all vodka and I desperately wanted a beer to wash it down with. Swig goes with beer, right? I was shaking so nothing was really feeling right. All I could think about was the Travers women traipsing into the joint and getting the right idea about me. What would they do then? When did I tell Ellen to meet me here? Shit, did I tell her where to meet me? That's what phones are for, right? I'd lost track of where I was in my story. \n\n\"The first time, though was in a store. In a dressing room.\" I was thinking of the first time I did Kyla Clark in the dressing room. That became my story. My mind shifted from Ellen to Kyla. \n\n\"Mr. Duncan?\" Carol Lynn snapped her fingers. \n\n\"What?\" \n\n\"You were saying?\" \n\nI detected the little trickle of interest in the blonde woman. I switched Ellen's name for Kyla in my story, thinking of Kyla but saying Ellen, just to be confusing. \n\n\"Where was I? Oh, right. Ellen's ass. What an ass that woman has. I mean I pushed into her and it was like fucking a sponge cake. She was tight and wet and plush, just like a really good sponge cake. Not that dry dusky shit that needs ice cream and chocolate sauce to approximate food. No, she was dripping wet...I reached around and fiddled with her a little and that made her just plumb crazy.\" \n\n\"Stop talking like that. Use your own voice.\" \n\nJesus, I'd only just met the woman and she was already ordering me around. I did straighten up a little though dropping my hackneyed Southern drawl. \n\n\"Ellen's ass is a world wonder. She, I don't mean to be crass but she had ass control like I never knew was possible. She could massage my cock like a pianist. I couldn't believe it. I sank into her and she groaned. I thought I was going to come again right then so I went still and just let it lay in her. She didn't seem to mind. She just wriggled her ass and hummed a little. She was hot and incredible.\" \n\nThis time I sipped the martini like you're supposed to. The vodka kicked at me. I tried to kick back but had nothing. \n\n\"So?\" Mrs. Northcutt the former said, pressing for more details. When she realized she'd spoke out loud, she groaned a little and closed her eyes. \"Goddamn you.\" She muttered.\n\nI wasn't sure how anything was my fault at this point. I felt like a jazz singer at a seance. The dead one, I mean, at the seance. How I'd gotten into this story I wasn't sure but it seemed like a good idea. I decided to ignore Carol Lynn cursing me for the moment. I had no idea where this particular path led but it felt pretty cool telling this hot, strange blonde woman about ass fucking Ellen. It was making me all hot and bothered...well, Carol Lynn had a lot to do with that, that and the tickling inkling that she was on the prowl and I was the prey. \n\n\"So, she comes and screams real loud, like she was being tortured or something. She screamed and someone came and banged on the door and told us they were calling the police. She twisted around, with me still planted in her dark dirt garden and opened the door. She was naked and the guy just stared at her, with me wagging behind her like a big ugly rooster tail. She told him if he'd hang on, she blow him. Then she shut the door. \n\n\"Now I never would have believed a woman could walk around with a cock in her ass and not punch me out on the floor like...well, like I wasn't wanted any longer. She did though. She had a hand on my thigh to let me know not to give up on the whole thing and she jiggered around to open the door and speak to the guy like it was the most normal thing in the world to chat up someone with a cock jammed up her butt. When she closed the door, she planted her hands on each side of it and told me to finish up, she might need to have a go with the store clerk. \n\n\"I'd gotten all scared and usually that sort of fear just drives away the inspiration but something about her, something about being in her ass like that, about being seen like that reversed all my phobias and turned them into fetishes. I suddenly wished she'd left the door open. Fuck me, I did. I began to poke in and out of her and she went back to panting. She kept patting my leg on the thigh like she was reassuring me or something, or maybe urging me on. You know, like giddy-up. She groaned and then she dropped her head and started pushing back at me each time I rammed into her. \n\n\"I came. It was like a car crash. You're toodling along minding your own business and suddenly wham! Your fillings are all loose and your eyes are blurry. I grabbed her by the waist and pumped into her as hard and fast as I could. She seemed to soften, then, like she relaxed, going all gooey around me, but still tight. I can't describe it but I came and came. I left her naked in that room. I don't know if she blew the guy or fucked him or what. She's on the way. She's who I got the room for.\" I was a little dishonest, since it was actually Ellen I had lined up. It wasn't completely inaccurate because if I got my ass in a crack I figured I could indeed call Mrs. Clark and have her report for duty, pre-lubed and ready to be mounted. So, even though the plan wasn't actually active, it was potential because of previous arrangements which I had every right to claim as my own. \n\n\"How much?\" Mrs. Northcutt the former asked, her voice tight. \"How much for her magic ass?\"\n\n\"A grand, I think.\" I spoke without thinking. \n\nThe blonde woman closed her eyes. When she opened them, they were shining and fierce. \n\n\"I have fantasies about being a hooker.\" She said softly. \"I like the idea of having a man use me for sex.\" She smiled. \"That, that idea of having him use me and then handing me cash...its not that, or even that I'd feel sexually stimulated in a physical sense...no, its the idea that he is so aroused, so excited, so thrilled to be with me that humpa humpa boom and he's done symbolizes, it means, it means something.\"\n\n\"It means you are damn sexy and attractive, and, well, fuckable.\" I offered. I expected assent and a glance of appreciation that I'd clearly noticed but instead she just sat still, staring at the bar mirror cluttered with booze bottles. After a moment of her soft silence, I realized she was staring at herself in the mirror, looking into her own eyes. God knows what she was saying to herself but I wished the playwrite had made it a soliloquy that I could hear because I sensed it would have been very instructive, filled with insights into the milfius pussicus species of female that I seemed to attract with my version of catnip. \n\nAfter a moment she broke the stare with herself and looked at me via the mirror, slightly shifting her gaze from her own eyes to focus on mine, in the mirror since I was staring at her image in the clear glass cluttered with green exotic booze bottles. \n\n\"Thank you, Mr. Duncan. That is kind of you to say.\" Her face flushed and the smile slight smile seemed to illuminate her, like a soft spotlight. \n\nIf I hadn't known better I'd of mistaken that look for embarrassment, the sort of proud shame that comes with a really good confession that makes the priest stop sounding bored and start taking notes. I knew better, though. She'd found her entree to my world or my pants, and in she danced, like the part had been written for her.\n\n\"What if you send your hooker away and let me live out my fantasy? I'll be your hooker. You can have me do whatever you want.\"\n\nI swallowed despite my eager desire to do whatever I wanted with her. It was mostly to keep from appearing as the rapacious klutz who'd come on her belly button before I got her white jeans past her hipbones. I wanted to display a sufficient reluctance to give her the hope of getting me inside her before I greased her up. \n\n\"Anything?\" I said, using my best amazed voice. \n\nShe blinked and then turned her head to look directly at me, without using the mirror. \n\nI waited for a reply but it wasn't forth coming. I got impatient.\n\n\"You have lube in your purse?\" I asked, not letting her knock me off my stride. I spoke just about as she was speaking, as though my first sound had pulled the thought past her parted lips.\n\n\"Everything.\" She breathed into the thicket of my words. \n\nI went silent. \n\n\"What did you say?\" She asked softly. \n\n\"I said, do you have lube in your purse?\" \n\nShe gulped and shook her head. \n\n\"Then whatever I want may not be on the table but hey, if you're volunteering, I don't mind if I take you for a test ride.\" \n\n\"Test ride? Honey, I'm the limousine you rent but don't own.\" Her moment of vulnerability passed without leaving anything behind. Mrs. Northcutt had the look of a predator in her eyes as it closes on its prey. I'd been running pretty hard but at that moment, I slowed down. A lot. \n\n\"You're kidding right? Because that sounds just like a challenge.\" \n\nThe blonde woman's eyes glittered. She didn't speak. It took a few moments but I finally realized she was waiting on me to take some positive action. \n\n\"Check please.\" I signaled to the barkeep. He came over, smoothing the front of his body along the counter to stand before us. I handed him a twenty. He didn't leave so I gave him another and then another. He smiled at me with his thin wet lips and left me to my piece. \n\nI looked at Mrs. Nortcutt and glimpsed Mrs. Bickerstaff the former out of the corner of my eye. She stared glassy-eyed at her daughter whom I could not see so well. \n\nI leaned towards Mrs. Northcutt. \n\n\"I am a little confused about the situation. Do I brag about fucking you to your ex or keep it to myself?\" \n\nThe look she gave me was priceless. She didn't respond but took hold of my hand and tugged me out of port at the bar and out to the elevator. I trudged just to make her put her back into the tow, tugging hard at my wrist. It felt like I should make her strain a little, just to add a little tension to the situation. It also allowed me to cast a look behind me at the Bickerstaff women. Mrs. Bickerstaff the first was staring at me over her shoulder. The daughter's eyes were fixed on her mother, a sort of disbelief that you usually only see at Christmas and they got a Cadillac instead of a stick horse. Mrs. Northcutt pulled me to the elevator and it arrived empty and left with us inside. \n\nWe stood side by side, Carol Lynn holding onto my wrist with her thumb and index finger, like I was a soiled hanky or something. \n\n\"I don't fuck a woman that can't kiss.\" I muttered sideways. \n\n\"I can kiss.\" \n\n\"You're a MILF and divorced. Sure you haven't forgotten how?\" \n\n\"Try me.\" She said. \n\nI turned to look at her. Her chin jutted forward and her eyes met mine with a direct gaze. She didn't blink. I waved her off. \n\n\"I'll wait.\" I said.\n\nThe elevator got to my floor and I shook my wrist free of her clutches and got a hold of her elbow and propelled her down the hall almost at a trot as though I had some fear she'd change her mind. I didn't feel that fear but I did feel like running and the fast walk seemed to take forever to get us to the door. My hands were shaking so hard she took the card from me and opened the door herself, a slight smile on her rich lips.\n\nWe entered the room. She dropped her purse, a sling-style packet that rode on her hip. She shrugged her shoulder and her long coat pooled at her feet. She wore a tight long-sleeved lime sweater that hugged her lean body a like banana in its peel, and tight white jeans. I dropped my coat against the door. For a moment we stared at each other but I had a plan. I reached for her and tucked my fingers under the edge of her sweater and pulled it up. Her arms zoomed over her head and I exposed her belly and breasts before pulling the thing off her hands. \n\nShe looked inordinately pleased with herself when her face appeared. I dropped the sweater onto her coat. I moved my hands up to her face and kissed her. She returned the kiss. I tasted the lust on her lips, like a coating of special honey charged with electricity. Instead of pushing her back against the wall, I pulled her forward, against me. I held her by the jaw, a hand on each side of her face as I kissed her. When I straightened my torso, she had to stretch to keep contact and did. It was like she dangled by the lips before me. On her tiptoes, she kicked at her coat and let her body swing against me, like a closing drape. \n\nI grabbed her by the ass with one hand and straightened more. Her legs lifted off the ground and her hands tightened around my neck as her weight lost their support. I put both hands on her white jeans, clasping her lean ass. Her legs wrapped around me, locking her against me. I felt her bare back on my forearms and her crotch ground against my hard cock. I walked us into the living room, kicking through the scattered clothing and into the right bedroom, kissing her the whole time but watching one one eye. I dropped her onto the bed. She fell, releasing me to fall the couple feet on to her back. ",
        "I bent over her and unbuttoned her white jeans. \n\n\"I thought white wasn't allowed until after Memorial Day.\" I muttered.\n\n\"I don't follow the rules.\" \n\n\"How much do you charge?\" I asked, remembering her story, wondering as I unzipped her jeans if it was a real fantasy or just a contrivance to get me into her. \n\n\"How much am I worth?\" She responded.\n\n\"Oh, I see. Let me get back to you on that. We'll treat this like an audition so don't get lazy.\" \n\nShe lifted her hips so I could tug the jeans off. They weren't cut right for her slender build and came off fine, like a boiled shrimp out of its shell when you squeeze just right. She wore a bright red thong that covered her pussy. She was hairless as the Sahara, so it was a bonnet and not a hairnet. I tucked a finger under the string of the thong and snapped it. She lay with her arms flung out beside her head. She leaned up and unhooked her bra with one hand and tossed it away.\n\n\"Your turn.\" She said with a slight nod.\n\n\"Sorry. I don't wear a bra.\" \n\nShe giggled then. \n\nI felt the adversarial edge we'd begun with dull somewhat, but not the excitement. I stood up, my legs against her bare knees bent over the edge of the bed. I stared down at her. Her breasts sat up high and proud with little knots for nipples. Her belly was lean, almost indented so her hipbones showed like hitching posts to each side. Her legs were lean and spare but textured with rippling lines. My stare made her take a deep breath, filled with lust and anticipation. \n\n\"Let me see you.\" She whispered, her voice quavered. \"My god, I want you.\" The amazement puffed around me like rich perfume and my heart hammered in my head. \n\nI unbuttoned and unbuckled and shucked till I was naked. I considered tasting her but decided I wanted to be in her and immediately. I bent over her, looped an arm around her waist and carried her back onto the bed. She lay limp in my grasp with just her hands clasped behind my neck. I turned her to lie on the bed in the normal fashion, head on the pillows and put a knee between her thighs. She opened up, bending her knees to provide fine access. \n\nI got between her legs and bent over her. I handled my own cock, directing it down into her. I pulled the red thong aside and brushed the pursed lips of her pussy, up and back with the spongy head. \n\n\"Sorry. I haven't touched you deeply yet. Are you ready for my little visitor.\" \n\nIn response, she hunched her ass up, catching my cock and nibbling at it with her pussy. She dropped back to the bed. I felt a slight chill on the end of my cock. She was plenty wet. I yanked at the scarlet line around her lithe waist. She gasped as it gave way and I pulled the timid swath of cloth from between her legs. I touched the head of my cock to her entrance, sifting through the plural lips until I found the way into her. Her legs bent up beside me, butterflied wide. I pushed my cock into her pussy. It sank down, deep inside of her. Her body seized me like a limo in a traffic jam.\n\nHer pussy kneaded me, like good stiff dough around my cock, resisting but clasping tight as I dipped deep into her wishing well. She shifted a little and her hips jerked under me. \n\n\"Oh god.\" She whispered. \"Oh god, yes.\" \n\nNot too original, I thought, but this encounter surely wasn't being graded on conversational skill. Her knees gripped me, somehow communicating her desire to be cock full. I released myself and fell between her legs, penetrating her, pinning her to the bed. Lying between her splayed legs, I felt how slender she was. Her muffin tits disappeared as she preened and stretched under me. Her hands left my neck and she stretched under me, preening more with the penetration that inundated her with the sensual pleasure she clearly desired. A shudder went through her spare frame and I dropped the last inch into her dewy heaven. She bucked once, then lifted both legs and wrapped them around my waist. \n\n\"This was awfully easy.\" I muttered. \"Is this a habit with you?\" I knew I was playing with fire but hoped that being inside her was a bridge too far and she wouldn't be put off. \n\n\"Easy? You think this was easy?\" \n\nI lifted my hips and drove my cock into her again. She moaned and I grunted.\n\n\"I didn't feel any strain. Of course, I can get a woman into bed easily enough. I just meant that you seemed ready to hit the sheets this morning. I felt what you were thinking.\" I was trying to goad her into something but didn't know what. Her hips slammed up at me, grinding us together. Her pussy was lush and welcoming, swirling around me like a whirlpool. She fairly sloshed. I accepted the liquid compliment with grace. \n\nCarol Lynn was panting. There was an urgency in her breath, puffing up at me as I leaned over her. I held still and her eyes opened.\n\n\"What?\" She whispered, her tone tinged with razzled confusion. \n\nI slipped an arm down between her leg and me and opened the clamp of her body. She arched her head back, trying to look down at me from under me, that just exposed her neck. Her legs came free. I felt her release me. I withdrew from her dewy depths and let her flop down onto the bed, open and sighing fast, little almost gasps that created an airy percussion about us, like sweeps on a snare drum. \n\n\"What? What's wrong?\" Carol Lynn whispered. \n\n\"I want you.\" I muttered. \"I want you to feel something. I want you to feel it under your skin and in your bones and wriggling behind your eyes.\" \n\n\"What? What is wrong with you?\" \n\n\"You lost the love of your life.\" I muttered softly. I bent down and kissed her suddenly cool lips. \"What's left?\" I meant it as a rhetorical flourish but she answered, an indication of the depths to which I'd touched her, and no, I don't mean with my big long cock. She thought she'd laid down and destroyed my defenses and she could just dance into the middle of my world and use me like a proctologist's plastic glove. She was a beautiful, experienced, confident woman who still thought that opening her legs was the key to everything. I was going to disabuse her of that. I had a curious vision. A vision of her collared and mounted on me, riding to heaven on Sonny's cock. I shivered.\n\n\"Mrs. Northcutt, don't tell me that this isn't what it is. I know about you, how you fuck Borland's assistants. How you are always using them to...to...to what? Ingratiate yourself with him again, or is this just sexual revenge, giving to them what he no longer wants?\" \n\nHer eyes jerked to the right like a tennis pro facing match point against her would look to her coach. \n\nI bent over her and kissed first one nipple then the other. I moved up and hovered over her face. Her eyes twitched back and forth from eye to eye or cheek to cheek, they were not still, they had the nervous energy of a short man facing down a tall man without success. \n\n\"Mrs. Northcutt, I want to give you your dearest desire. I want you to confess to me what you want the most and I'll try to get it for you. In return...\" \n\nShe interrupted me, anticipating my next sentence. \n\n\"What do you want from me?\" \n\nWhen my two words validated her question and mocked her impatience, her eyes slid away from me, pulling her head to the side so that she lay naked under me facing the door to the bedroom. She focused on the exit and longed to use it. \n\nI sat back between her open legs. She had a minimalist beauty but in her present state she seemed utterly deflated, like her spirit had flown and left her an empty husk that needed filling. Yet I demurred from filling her.\n\nI lifted her legs over my shoulder and pulled her ass onto the tips of my knees. Her head eased around to look at me. I deliberately and slowly bent my cock down and pointed it at the entrance to her body. She peered down her body at us, trembling with anticipation of the conjunction we'd form. With only one hand I pulled at her hip, she had to arch her body to move up the slope of my thighs. She gasped when the tip of my cock reconnected to the sizzling lips of her pussy. She gaped and strained to envelop me. \n\n\"What, what do you want?\" \n\n\"I want to sell you for sex. Trade you for another woman.\" I whispered. \"But is that what you want?\"\n\nHer eyes bulged for a moment and then she turned away again, but not until she leveraged her weight onto her shoulder blades and pushed herself further onto my cock. I groaned. She hissed, like she'd sprung a leak. I gripped her by the thighs and rose up so her body swung against me, mounting her gently onto my bent cock, a sexual flourish that left her stranded, only her shoulders and head on the bed with her knees on my shoulders. I rose up, lifting her. My cock swiveled around inside her, touching untouched nooks in her nooky and long unused crannies in her pussy. She groaned. \n\nI released her. She gasped as she fell away, dropping to the bed and her ass slid down my knees. I pushed her legs open and moved down between them until I was face to face with her unseeing eye. I licked her furrow. Carol Lynn moaned. \n\n\"Jesus fuck a duck, what do you want of me?\" \n\nI lifted my face from between her legs and looked up over the plain of her belly past the twin hillocks of her gentle breasts. I made a show of licking up and then down her pussy, and then did it again and again till I saw it, the flutter in her eyelids and the guttural swallow that sounded like great a lock snicking into place. \n\n\"I want to give you your greatest fantasy. Is, is it really being purchased? Having your body sold to the highest bidder or being handed off to a stranger who takes you to his room and fucks you? Is that really you? Your deepest desire?\" \n\nIn the hesitant pause, I felt her consciousness swirling the thought around like she had a pearl in her mouth and couldn't decide whether to swallow it or spit it out. Her eyes closed but when they opened, she rose up and planted her elbows behind her.  \n\n\"Yes.\" She said. \"It may not be my greatest desire but, I god, I see men that attract me and I imagine sidling up to them and offering to fuck them for a hundred bucks. I dream of their eyes when I do that and then their excitement when they see my body, their gasping amazement when they enter me and feel how I hold them inside. I want to feel that astonished desire again, the delighted surprise. I lost that with Borland and I lost him because of it. Now all I have left are my children.\" \n\nHer head turned to the side again. She wasn't done speaking though.\n\n\"I want more. I keep seeing Borland because I have a reason to justify seducing them. At first it was the young women and then he figured that out and changed to male assistants. He did me a favor. Women aren't my thing, not really...oh, I'll come if she has talent and intent. I'll even go down on her if she tastes good but, god, how can I manage to come when all I think about is Borland with Suzanne and what they are doing, now that he is free of me? I am so jealous but I refuse to do what he does. I know it is sick but I wanted that back. I didn't just want him back, I wanted him to want me again, but more, to want me as he wants her. I know that is impossible.\" \n\nShe paused. Her lean chest rose and fell and her molded breasts did not quiver an inch. \n\n\"He tried to get me to...to let him use me like he uses Suzanne, I mean to help him settle a business deal. I refused. I was so incensed, so angry I cut him off and that was the beginning of the end. I treated him with such contempt and anger and it got worse when it happened. I began to dream of being handed off to some Eastern European brute who used me like a condom and discarded me. I woke panting and I hated the idea that this was what I wanted, that I wanted Borland to use me as the cherry on top of his dealings just like he'd offered to...but really, when he figured that game out, it was long after he left me and had Suzanne on her back for him.\"\n\n\"She has affairs.\" I said idly, listening but hearing the tortured anguish in the woman's voice. \n\n\"I know. And Borland seems more enamored with her than ever. To think that I could have had that! I could have been his whore and he'd have loved me once again, perhaps more than ever...I just go all sick inside, like I am standing on a sinking ship watching the last life boat stroke away into the fog because I took time to pee like a lady in the toilet rather than pissing my drawers on the life boat.\" \n\nHer face turned back to me. \n\n\"Now, I know I can't have him back or even that and then you offer to sell me for sex. Who are you?\" \n\n\"I'm Sonny Duncan.\" I said.\n\n\"We've met.\" She said sardonically. \n\nI waited. When she spoke she did so from a deep, dark distance. \n\n\"Why would you want to help me?\" She asked. \n\nInteresting turn of the phrase, \"help me\". I considered it like I was sniffing an orchid for its delicate aroma. \n\n\"Ownership. I want to own you.\" \n\n\"Own me?\" The phrase clashed with her sensibilities right there in her tone. \"Own me?\" \n\nI nodded. I heard the umbrage and didn't move because it seemed like I'd scare her away if I did.\n\n\"If I am going to sell you, I have to own you first, don't I?\" \n\n\"Oh, Jesus.\" She breathed.\n\nI love how logical ideas can seem so surprising. It's like running down what is obviously a pier and being surprised when you come to the end of it and dart over the end into the drink, splashing into the ocean like it is utterly inconsistent with expectations. It's not. It only surprises you when you mistake a pier for a bridge. Discovering what our lust leads to can shock and surprise us. It shouldn't be but how often is it just that, a fucking surprise? \n\nShe sat up again, propping her lean body up on her elbows again. \n\n\"What do I get out of this?\" \n\n\"You mean besides your fantasy? Besides getting fucked by interesting men of my choosing?\"\n\n\"Ownership usually means some exchange of value. What are you throwing into the pot?\" \n\nInteresting. I pondered that for a moment, letting the cogitation click around in my brain for a few moments. \n\n\"Okay. I bet owning you against you owning me, that I can go bring up a woman, fuck her while you watch and then fuck you while she watches.\" \n\n\"What do I have to do?\" \n\n\"Enjoy?\" I made it a question, to see if she'd agree she'd enjoy it.\n\nShe blinked a few times and then flopped back down onto the bed. I returned to her pussy, licking at it with little flicks of my tongue. I found a spot she'd missed with the razor. It reminded me of the fabled but very real g-spot, rough and pebbly on my tongue. I decided I needed to do a direct comparison so I went looking for her g-spot, just to see if I had the comparison right. She grunted when I found it and then tensed while I gathered my data. She relaxed when I withdrew my tongue from inside her and went searching for the little patch of pebbly bristles she'd missed last time she shaved or waxed or whatever. I needed more data and went back into her dripping cavern. \n\nBefore I was done, Carol Lynn came, punching my face with her pussy while she crooned and gargled her pleasure. The vibrations in her body shimmered against my cheek bones, making them sing with the contact with those little hollows in her thighs above the two tendons that appear when her lean legs go wide and inviting. Oddly, she came again when I found the briar patch. It might have been my finger twiddling her little knob though, fine tuning her channel. \n\nI dove back into her frothy pussy. She writhed around my tongue, her whole body alive with sensations. I felt her excitement, but also the taut guy wire of her pending decision, like she couldn't avoid it as it ran through all the plush parts of her bubbling pleasure. This time when I left her inner sanctum, I went right to her clit, gently twiddling it again but with my tongue this time. Her little man was standing up and when I touched it, she gasped and choked around the gurgling orgasm, filial twins of the same genetic pleasure. When I sucked at it, she grunted and her ass whammed her pussy against my chin. I understood why some men have goatees. \n\nI lifted off her pussy getting to my knees. My cock was hard as sailing blind and I wanted to penetrate this woman and ride her off into the sunset. I tamed the inclination. \n\n\"So?\" I mumbled. \"Is it a deal?\" \n\nFor a while the naked blonde just lay there panting, her chest dilating and closing down with rapid little motions that left no room for words. I waited. After a minute or two, she calmed and opened her eyes. She lay with her legs arched beside me, her arms flung to the sides, hands up beside her blonde head. I wanted to mark her neck in the worst way. I think, after all this time and with all my various experiences, hickey's might be my fetish, second to women, I mean. I like naked women, spread out like an intercourse meal waiting to be devoured, consumed by the passion we both feel. \n\nHer eyes fluttered open. \n\n\"What would I do with you, if I win, I mean?\" \n\nI shrugged. \n\n\"Sounds like you are asking me to augment your imagination with mine.\" I said softly, pensively. She noticed the disinterest.\n\n\"What is your private passion, the one that no one knows about?\" \n\nI grunted. \n\n\"Shit. I'm an open book.\" Then I had an idea. I looked away. The idea and the implicit lie with it was genius, if I do say so myself. \n\n\"What? I told you about me. You have to tell me about you now.\" \n\n\"You really want to fuck strangers? For money? Is it the little bit of strange or the money that turns you on?\" She'd explained herself and I was just testing to see if it was rhetoric or passion. \n\nShe smiled sweetly. \"Don't change the subject and think you can avoid the question. I don't know and I'd like to find out.\" She sat up and scooted back to sit naked against the headboard. \"So? Give. What?\" \n\nI feel the blush in my face, the hot boiling blood turning my skin scarlet. I was about to tell a humongous lie. Well, not really. I felt my rationalization gland kick in with the same force that adrenaline affects the body. \n\nCarol Lynn got to her knees in front of me. Nipples and eyes both fixed attentively on me. God I wanted to fuck her right then. It made me dizzy, mixed up with my little deception I was about to double in scope. I grinned. I hid it with a hand. \n\n\"Come on. If we are betting sex, you have to tell the truth.\" She cajoled. After a slender instant, she noticed her own interest and covered it with a strained casualness. \n\nI nodded. \n\n\"Okay but, but...\" She didn't let me finish, the interest full in her again.\n\n\"No. No buts. Just tell me what you want.\" \n\n\"I always wanted to share a woman with her son.\" I said softly. The true lie was tangy on my tongue, like too much of a rare and unfamiliar spice and I couldn't decide if I liked it or not. \n\nCarol Lynn gasped, even putting her hands over her cheeks. \n\n\"Oh my god! Borland told you about Jason?\" \n\nI nodded. \n\n\"He's worried that you are coddling him. Worried that you aren't allowing him to be responsible by taking responsibility. Mr. Northcutt is genuinely worried but how is he to discuss it with either you or him. It's a man's perspective and neither of you want to hear what he has to say, even if he's right.\" \n\n\"And what? You want to share me with my own son?\" Carol Lynn Northcutt was aghast. \"Oh my god, you are...you are...\"\n\n\"Not going to lose.\" I whispered. \"Don't worry. You'll never need to face that possibility, or consider how to give me my greatest pleasure. It think it'd be unbelievable to hand you over to him, or him to you, whichever.\" I grinned because I couldn't help it. Carol Lynn stared at me. \"I am going to shower and go collect some strange for us and then you'll be mine.\" I hesitated and set to close the deal. I felt like a car salesman in a plaid blazer. God I wanted her and I had stacked the deck; I was going to have her. My brain clicked its tongue at me, forcing me to notice just how many women I had tethered to my may pole. I growled. There is no such thing as too much pussy! The thought boomed in my head like a cannon in a canyon. ",
        "\"Deal?\" I asked. \n\nHer eyes went closed again. She breathed out, like the next breath would be her doom, poisoned and foul. \n\nShe nodded. \n\n\"Okay.\" She giggled a little. \"God, I am so confused. I don't know whether to cheer for or against you.\" She shuddered. \"God, sex with my son...and you! My god, what sort of man are you?\" \n\nI grinned. \n\n\"I am a real motherfucker.\" I got off the bed so she couldn't try reading between the lines on my face. I plodded through the shower then dressed, letting her watch as I did. Neither of us spoke. When I was dressed, I stood gazing down at her half-naked body, covered haphazardly\u2014she'd peeled down the bed and crawled under the sheets but only partially, one bare leg lounged under my eyes.\n\n\"I'm not the first, am I?\" She whispered when I paused to stare at her body.\n\n\"First?\" I muttered.\n\n\"You own someone else. It can't be Suzanne, even though she had a helping of Sonny on the side.\" \n\n\"On her back, actually.\" I grunted, amused.\n\nCarol Lynn nodded but still thoughtfully. \n\n\"There are others. My god, do you have a string? I mean are you a pimp? Am I dealing with an actual pro? Have you suckered me into whoring for you and I just volunteered?\" \n\nI wanted to remonstrate and deny, but luckily they bounced against my teeth and I swallowed their broken bodies. I had another option that seemed better.\n\n\"Does it matter?\" I whispered. \"First, last, aren't we negotiating for the right to offer each other pleasure and thus own it and through that erotic channel, you?\"\n\n\"You're a cocky bugger. I like that...I think.\" The woman appeared drunk, or at least intoxicated. Disbelief swam behind her eyes, like she didn't believe what she was doing, or what she was thinking. \n\nI didn't know who she was asking but decided to leave her. I turned away and left the room, through the living room and out. \n\nI sauntered down the hall all buzzed with unrealized sexual potential, only realizing in the elevator that I might be fucked. I was counting on finding Caroline Bickerstaff and daughter still in the bar. What if they'd left? Then I'd not be able to cheat. It also occurred to me that Carol Lynn and I hadn't worked out the parameters of our little wager. On the other hand, she surely realized that if I lost, she'd have me anyway, which meant I'd have her. It was difficult to see who was the loser. I love that sort of bet, a win-win wager! I wondered if the devil was in the fine print. \n\nIt didn't matter, Mrs. Bickerstaff and daughter were still in the bar, sitting at the same table. \n\nThe daughter, Sophia or Sophie saw me and followed my approach with her golden eyes. When I sat down between them, she adjusted to my presence. \n\n\"Hi. Still here, I see.\" I muttered. \n\n\"Mr. Duncan...\" \n\nWhatever Caroline Bickerstaff had to say, I didn't want to hear it. I cut her off. \n\n\"I fucked her.\" I said to them. I felt a little guilty pride butter up my teeth. \"She wants to see me fuck someone else. I nominate you.\" I looked over at the younger woman. I held out my hand. \"Sonny Duncan. Do you mind if I borrow your mother, take her up and fuck her while the blonde watches?\" \n\n\"Yes.\" She said with a definite nod of her head. \"I do mind.\" \n\n\"You can come along, I mean to watch, if you like.\" Her effort to knock me off my stride failed and she understood that. I saw the gleam brighten in her eyes.\n\n\"No. Not that. I'm not here to watch. This isn't a field trip, it is the main attraction.\" The gorgeous young woman fixed me with her light hazel eyes and smiled impishly. \"I always wanted to watch my own mother have sex. She's been telling me how to do things all my life. I think its time she demonstrate she knows what she's talking about.\"\n\nCaroline Bickerstaff swelled up as though she was about to object but when Sophia smiled at me, Caroline realized she was being teased and the objections behind her teeth subsided. I glanced at Caroline; she was staring at her daughter. \n\n\"So, which is it, Sophia or Sophie?\" \n\n\"My idiot mother named me Sophocles. So you figure it out.\" The young woman said. \n\n\"We are here to satisfy our requirements.\" Caroline said.\n\n\"Sophocles? Isn't that a man's name?\"\n\nSophie grinned a little. \n\n\"You see the issue.\" \n\nI noticed she didn't call it a problem.\n\n\"So, I'll call you Sophie.\" \n\nShe smiled and nodded her assent. \n\nI looked from mother to daughter and back again. \n\n\"Are you all here to have sex or not?\" When neither responded, not even looking at each other I continued. \"I need to know if you are interested. Do you mind if I take your mother upstairs and fuck her while my friend watches?\" \n\n\"I want to watch. I want to see that, see Mom on her back, finally. I've been telling her she needs to have more sex for several years. Like she listens to what I say.\" \n\nA wild thought poked me in the eye. It hurt. \n\n\"Shouldn't you be named Electra or something?\" \n\nThe young woman with the molten chocolate skin looked around at me. She didn't smile. Her hazel eyes looked golden in the darkness of her face. \n\n\"Are you serious? Is she really upstairs waiting?\"\n\nI nodded. \n\n\"Holy dog shit. Mom, I thought you were kidding.\" \n\n\"I told you were were here to have sex with him.\"\n\n\"I know but...but...holy dog shit!\" \n\n\"Honey, that is so...\"\n\n\"I know, I shouldn't be so crass, but god, Mom, what do you want me to say? Holy God fuck a prophet? Do I have to be profane to satisfy you?\" \n\n\"Girls, girls, no bickering. It scares the little bishop.\" \n\nThey both looked at me. \n\nSophie pulled her eyes away from me, popping like two little suction cups, and looked at her mother. \n\n\"Where did you find this guy?\" \n\nI couldn't let them lose sight of the present subject. \n\n\"You realize that if you come upstairs, its no bra and not just watching, right? You know that this is the mother-daughter day public schools could never arrange? It'll be a dip in daughter and a dip in Momma, right?\" \n\n\"Holy dog shit! Really?\" \n\n\"Really.\"\n\n\"No. I am not sharing a cock with my mother. Fuck her if you like. I'll watch but, but eew.\" \n\n\"You have to, Sophie.\" Mrs. Bickerstaff breathed the words like she had bad breath. \n\nI grunted.\n\n\"You don't even call her by her right name, do you?\" \n\nCaroline looked over at me, glaring, her eyes as dark in her face as her daughter's were bright and light. \n\n\"I'll just wait here.\" Sophie whispered, suddenly realizing that we were not just chatting in theoretical terms. \n\n\"You can't. You have to. If you don't, god, I'll never hear the end of it from Bicky. He'll be furious that Kline handed off Rebecca and his daughter to this guy and bent them both over a table.\" \n\nApparently this was news to Sophie because she gasped. Her response however, did not follow my expectations. She turned her eyes to me, her hand against her plush lips but not hiding them. \n\n\"You, wait, you mean Mrs. Kline, from before? And, and...\"\n\n\"Lovely.\" I offered my help.\n\n\"Lovely.\" Sophie's voice went all soft and fluffy. \n\n\"Sophia, you must do this. If you back out, if you refuse him, then, then the settlement stays frozen or gets revoked altogether and Bicky, your father could go to prison. He'd never last in jail.\" Mrs. Bickerstaff lost some of her dreadnaught composure. \"And we won't get any of the settlement. Nothing.\" There was real pain in her voice. \"You must.\" She told her daughter, confusing the source of her pain in my head. \n\nI shook my head. \n\n\"Mrs. Bickerstaff, under no circumstances is she going to have sex if she doesn't want to. I do not like a fucking desert. I want humidity and that usually happens only if someone is into the proceedings. If she doesn't want to, she can stay here. Hell, if you don't want to, you can stay here. I have a policy against reluctance and, well, if I can't find a way to make you smooth the way and enjoy a nice little bump in the night, then forget it.\" \n\n\"Why does this woman want you to bring up another woman?\" Sophie asked, her voice rasped. She took a drink of water. The sound of her swallowing made me hard. I am such a twist!\n\nFor a moment, I considered trying to gin up some cock and bull story that would end up the same place as I was but as I set about trying to concoct it, I realized if I just told the truth, they'd think I made it up. Why go to all the trouble to lie when it was entirely likely they'd think the truth was a nasty lie anyway. I wasn't going to waste a perfectly good lie when the truth would mostly likely get the same result. I could take a little time because I realized both women were face to face with the theory of fucking a stranger and it was rubbing them a little raw, in different areas. \n\n\"Carol Lynn in a collar.\" I muttered to myself and lost my train of thought. \"God, I could have her ass.\" I continued my mumbled soliloquy. \n\n\"What about my ass?\" Caroline asked.\n\n\"Not your ass, the blonde's. Her name is Carol Lynn, two words. If I can bring up a woman and fuck her right in front of her, she owes me her ass.\" I don't know why exactly I changed the terms of our endearment but I didn't want to put Borland's little contrivance that I had now made mine, in front of the Bickerstaffs...Bickerstaves? Whatever. This was Borland's business and though I'd contorted his original idea somewhat, I had some hope that I'd added value. I hoped this Jason wasn't a dick. No, I didn't mean it that way. \n\n\"What did you wager and don't tell me your ass.\" Caroline said, her voice dripping with irony, or maybe it was sarcasm, no, it was irony. Or maybe just skepticism.\n\n\"I'd be her boy toy. She'd get to call me up at two in the morning to come and lick her pussy anytime she liked.\" I realized saying those words, that this was another place where we'd eschewed fine print in the contract. How long exactly was I to be at her beck and call as her cock and balls? Truthfully, I decided it just didn't matter. If it became an issue, I'd deal with it when that happened. \n\n\"You? Her boy toy?\" \n\n\"Hey, no catcalls from the peanut gallery.\" I growled at Sophie.\n\n\"I didn't mean it that way. I meant that, well, okay maybe I did mean it that way. You don't have that too sweet to eat look that a good escort has. You don't look like the death of a diet. You look like a healthy meal that you don't need to feel guilty about.\"\n\n\"He's not a guilty pleasure.\" Caroline chimed in.\n\nSophie giggled. It was a nervous giggle and I realized what was happening. They were getting their heads around the situation, preparing to get their lips around it. If that meant they'd get their legs around it, I could wait. If those legs were just for walking, then I'd made a tactical error with strategic implications. \n\n\"How did you come to make such a wager?\" Caroline asked.\n\n\"I, well,\" I hesitated, stubbing my mental toe on the threshold of the truth. \"I had an affair with a woman and her husband is Carol Lynn's ex-husband and he wants me to seduce her so she won't be so focused on their son who is picking colleges and she doesn't want him to leave home and her ex-husband is worried that the son is losing his balls or whatever because his ex-wife is coddling him so he wants me to get with her and distract her while he gets his son to move in with him before accepting entrance to an Ivy wall school.\" I'd talked without breathing and now I gasped in air because it was like I'd been holding my breath and got way behind. \n\nBoth women regarded with me with their dark skepticism, I'm clear about what their expressions were. When they looked at each other, they both laughed. Suddenly they seemed all relaxed.\n\n\"Holy dog shit. You're a terrible liar.\" Sophia chortled.\n\nQ.E.D. \n\n\"So? You coming or not?\" \n\nCaroline sobered. \n\n\"It's been a while since I had sex. I don't know if I can come or not.\" \n\nSophie's expression, staring at her mother, was priceless. Disbelief. Horror and oh, curiosity vied for dominance and just blurred her features. She pulled her gaze from her mother and I saw a certain look in her eyes and a set to her plush lips that would warn anyone who knew her.\n\n\"Mr. Duncan, you said you've had Mrs. Rebecca Kline and her daughter, right?\" Sophie asked.\n\nI nodded. For a second I thought it was competitive antagonism that moved her. Nope.\n\n\"Listen, listen, if you can put Lovely Kline between my legs...I mean eating my lunch box, holy dog shit, I'll do anything for you. You have to promise me, promise me that she'll, that she'll have sex with me.\" \n\nOh such modest demands! How I wanted to describe for her the many variations I could envision for her. I nearly asked if she'd ever pulled a train or been airtight but I hesitated, wondering if she was a book lover or an actual sexual savant. No sense in scaring her away with ill-timed questions about the higher divisions of sex education that I'd been exploring. I may not be all that adventurous compared to other people but I certainly was getting a merit badge for quantity and quality. \n\n\"Miss Bickerstaff, I believe I can have Lovely and her mother both go down on you.\"\n\nI saw the disbelief, that look a woman gives you when you say something stupid about loving her for her mind or worse, her personality. I didn't wait for her to compound the fracture. I took out my phone and found Rebecca Kline's number and dialed it. I put it on speaker and lay it on the table before me.\n\n\"Hello?\" \n\n\"Mrs. Kline?\" I said. \n\n\"Oh god, Sonny, oh god. Are you calling to do it again. I mean, like the other day when...\" \n\nI cut her off. I really didn't want the Bickerstaffs to know I was boning my sisters. Why, I wasn't exactly clear about that but until I'd signed them to my straight and solid, I didn't want to hand them too much information just yet.\n\n\"Becky, is Lovely there?\" \n\n\"No. She's at work. You have her number, right?\" \n\n\"Will you ask her to call me. Tell her I have a woman who wants her between her knees. I mean she wants Lovely between her legs, face first.\" \n\nSilence. \n\n\"And you. She wants the both of you to go down on her. Lovely will do that right?\"\n\n\"Of course, after Sunday...\"\n\nI cut her off again.\n\n\"This is Wednesday, hump day. Is she going to bring you home dick tonight?\"\n\n\"Good Christ, I hope so.\" \n\n\"Tell her she needs to make sure you practice up.\" \n\n\"Who? May I ask, Mr. Duncan, I mean who is this woman?\" \n\nI glanced at Sophie. Her mouth was open. I could see light glinting off her glottis. \n\n\"Sophocles Bickerstaff.\" I said. \n\nSophie gasped, loudly.\n\nRebecca didn't hear because she was hissing her own damn self. \n\n\"Oh my god, she's marvelous, like poured caramel. I bet she tastes...uh...lovely.\" Rebecca Kline dissolved in an unbecoming fit of giggles at her horrid pun. \n\n\"Tell Lovely to call me when she has a chance, just so I know she understands that Sophie's pussy is in her future, the future of her tongue, any way.\" \n\n\"I will.\" Becky murmured, awe and reverence in her tone. \n\nI disconnected and returned my phone to my pocket. \n\n\"Holy dog shit!\" This time Sophie cried out the words with real feeling. \"Where do I sign?\" \n\n\"Anything? Really? You did say anything?\" I looked over at her mother. \"She said anything. How about you? What is the price of anything with you?\" \n\nThe woman suddenly dropped her chin, tucking it down even though her eyes remained fixed on me. \n\nSuddenly all the oxygen drained out of the room and I couldn't breathe. Suddenly, the conversation had become rock solid serious. I could see it in Mrs. Bickerstaff's eyes. I got a weird feeling, wondering what could be so utterly serious and worried that it'd dwarf my experience and thus my abilities to fill her need, or whatever she chose to call it. \n\n\"Sonny, may I call you Sonny?\" \n\n\"If you are going to fuck me, you can call me anything you want. Well, not anything, I mean, you can call me any respectful...I mean, well, okay, Sonny is good.\" My cock was yelling at me to shut the fuck up and let the woman speak her terms for handing me the deed to her \"anything\". Shut up and listen, my cock screamed. Only I could hear him. \n\n\"You said, you said she wagered her ass. I...I've never had anal sex before. I, I'd like to try it.\"\n\n\"Holy dog shit, Mother, you make it sound like a medical procedure. She means she ain't never been fucked in the ass before.\" Sophie spoke with tentative relish, like she was tasting some new, exotic food and couldn't quit decide if she liked it or not. I knew the feeling.\n\n\"No, I haven't. Have you, daughter?\" \n\nMrs. Bickerstaff the first was no slouch when it came to sparring with her daughter. Her response put the contender on her heels. \n\nI was trying not to giggle myself. \n\n\"I think we can arrange that.\" I saw immediately that I'd come too quick. I should have invented some objection and made her work for it because Caroline Bickertstaff was looking distinctly suspicious. I had to complicate things. \"But that means she has to offer up the ass too.\" I said, hoping this was inspiration and not digging in the bottom of the hole.\" \n\n\"She?\" Caroline whispered. \"Whom do you mean?\" \n\n\"Her.\" I jerked my head at Sophie. \n\n\"Anything you get, she gets.\" \n\n\"Does that mean Lovely has to eat her too?\" Sophie asked from high up in the cheap seats. Her voice seemed so far away I could barely make out the language she was speaking much less capture and subdue the actual meaning she flung at me. I waited for Caroline to speak but she did not appear to have anything to add on the matter.\n\n\"Yes, of course. That is what it means.\" And just like that we established a rule for sex with the Bickerstaffs.\n\n\"If you arrange for Lovely and, oh my god, Mrs. Rebecca Kline to kiss my little sister, then by golly you can have my ass and no, Mom, I haven't done that before. Hey, Mr. Duncan, you know what you're doing when it comes to the ass, right? I'm not going to need to stand for a week when you're done, am I?\" \n\nI wanted to rave and laugh and dance around but I managed to hold it together. \n\n\"Let me suggest something, as an option. Once you've had a cock in your ass, imagine having one knocking on the front door at the same time.\" \n\n\"Knocking? Oh, oh! You mean, entering in the front...oh!\" Sophie squeaked once she got all the dots connected properly. \"Oh my holy dog shit.\" She breathed. \"Mom? Mom?\" She snapped her fingers.\n\nCaroline Bickerstaff stared at the table as though trying to see through it. When her eyes lifted up, she mumbled something. I couldn't understand it.\n\n\"I beg your pardon?\" I responded, deathly afraid I was taking too long and I'd find my room and bed empty of willing blonde pussy when we got up there. I counted on my hand and decided these two would make a quorum and we could convene our sexual congress and vote up and down as we needed, even if Mrs. Northcutt the former had booked. \n\n\"I said, Mrs. Honeywell told me that if I agreed, I had to do whatever you asked and that if you asked, it'd be because you thought you'd figured out a way to make me orgasm that I hadn't tried before. She warned me that once you discovered how to make me come, I'd be...\" She tottered to a halt. Her eyes lifted up to look at me. \"Raymond always wanted to bring another woman into our bed. When I asked for another man, he stomped out of the house. That was the beginning of the end.\" She spoke as though in a trance. \"He never considered what I found interesting sexually.\" \n\nSuddenly she jerked and her whole demeanor shifted. She looked over at me, eyes wide and white, like little beams of light out of her flawless obsidian visage. \n\n\"You, you know what I want to see? I want to see you fuck Dannielle.\"\n\n\"Holy dog shit!\" \n\n\"I want you to fuck her in the ass. I want to see you and two other guys fuck her at the same time, mouth, ass, and pussy!\" \n\nUh oh. I thought. I held up my hands.\n\n\"I think you misunderstand me. This may be tangled up with your ex-husband and his dishonest business dealings but for me, I make love, not war. I am not into angry sex or hate sex, or, or revenge sex.\" "
    ],
    "authorname": "Contrasting",
    "tags": [
        "mother daugher",
        "menage a tois",
        "threesome",
        "ass fucking",
        "muff diving",
        "woman and woman",
        "voyeurism"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/extending-the-milf-list-ch-18"
}