{
    "title": "Afloat in the Dark",
    "pages": [
        "The early afternoon sky was grey and darkening, promising snow.\n\nThe doors on the old Tohoku Shinkansen line closed, still smoothly. It would be just five hours to Aomori on the Northern tip of Japan's main island, Honshu. Not as fast as the hyper-loop, but this one offered windows and time to think.\n\nThe station receded into the distance, allowing the mind to settle from the boisterous city.\n\nMarina made herself comfortable in an impeccably clean seat. First class, a basic courtesy of her employer. Mr. Kawashita had been annoyed with her choice of transport--\"Nostalgia doesn't become you,\" he'd said--but given the weight of her assignment, he had caved without too much grumbling.\n\nMarina looked at the bento box that sat steaming next to a canned highball, which trembled ever so slightly: her lunch ritual when traveling by train through Japan. This was always one of her favorite moments, enjoying a meal to go and watching the countryside flash past, but today the usual rush failed to materialize. Even on Fridays the train remained mostly empty, and Marina felt somewhat empty inside herself.\n\nIt was not an unfamiliar feeling. The past few days she had felt it return over and again, centering around her encounter with her friend Coco's new baby boy. Marina, usually such a people person, had felt a strange distance to the tiny creature, paired with an acute sense of... what, exactly?\n\nIt was not envy--at least not of childbirth. She remembered Coco's bloated face. Yet seeing the new mother's joy behind the pain and exhaustion, Marina wondered if she was missing out on her chance at... what, exactly?\n\nBeing 32 meant the odds were getting slimmer and slimmer to find a serious boyfriend, by Japanese standards at least. As a foreigner, she'd been spared some of the ageism.\n\nFirst, a serious boyfriend. But then she'd have to find a different job...\n\nMarina had quite some money saved up in her bank account--an outrageous amount, really, compared to her friends. But what she did wasn't really about the money.\n\nShe popped open the cold, fizzy alcohol, sipping as the last of Tokyo's suburbs shot past to make way for long stretches of frozen farmlands.\n\nSnow was beginning to fall, even though it was only October. Marina looked for an update on the weather in Aomori, before sending a brief, blanket apology to her clients for being offline these coming days. Some would be disappointed... others ensnared more deeply.\n\nMarina blinked three distinct times to turn off her electronics and rubbed her eyes. Resisting the urgent pull of thinking that would lead her away from silence, she focused on her breath.\n\nIn and out.\n\nIn and out of that silence.\n\nAfter a few dozen breaths, she was interrupted by her rumbling stomach and grinned. With a final sigh of relief, she opened the bento box and began to wolf down her hot food.\n\nThat was good.\n\nBurping lightly, she took a pen and notepad from her bag, before letting her thoughts flow ahead, towards Kaito.\n\n\"Siren,\" she wrote in dark ink.\n\nMarina had never met a siren before. She could usually achieve some studied sexual interest in her clients, but this time would be unique in that she had no idea what to expect--for better or worse.\n\nWhat would Kaito feel like?\n\nA polite cough from across the aisle startled Marina. She looked up to find a tired, elderly man smiling at her. So engrossed had she been in her thoughts that she hadn't noticed him.\n\n\"Good afternoon... The snows are beautiful, huh?\" Marina offered, feeling a tinge of pride at her flawless pitch accent, the result of many years of private tutoring. Back in her prideful twenties, she'd reasoned that if she was to be a commodity, she would be among the finest and priciest. Flawless Japanese was a bare minimum.\n\nThe elderly man seemed unimpressed and nodded down at her notebook, hesitantly asking: \"I couldn't help but notice... sirens?\" He was evidently embarrassed to point out her private writing, but his curiosity must have won out.\n\n\"I'm meeting one in Aomori.\" Marina smiled. She wondered why she was talking so openly about the topic with him. Perhaps it was his grandfatherly air. He was wearing a functional but slightly oversize suit jacket over a woolen sweater fraying at the edges. His eyes sparkled.\n\n\"Ah, that must be... Kaito?\"\n\nChanging the subject before the man could continue, Marina asked: \"Where are you heading?\"\n\n\"Morioka.\" The man looked down at his folded hands with a dreamy grin on his face. \"I'm heading for a wondrous meeting as well, my daughter just had her second child.\"\n\nBabies... it seemed as if everyone was having them again. Marina tried to listen politely as the old man told her the girl's name, her weight--healthy--and how she'd be going to the same school as her great-grandfather.\n\n\"My own parents moved to Tokyo after the financial crash to find a better future. Now my daughter has returned to rediscover her roots and even has the money to spare to invite me over--first class!\" The grandfather grinned a toothy grin and lifted his beer in salute: \"To a good journey!\"\n\nMarina raised her own highball and took a sip, before returning to her notepad as the man took out a book and a cozier silence returned to the compartment.\n\nMarina's mother had also moved to Tokyo for a better future, taking Marina with her. The future had certainly been lucrative for her mother, if somewhat short.\n\nWatching the snow fall outside, she returned to her thoughts about sirens.\n\nWhat did she know about them?\n\nTheir arrival had defined Marina's youth. She remembered first hearing the news from her drunk father and laughing him off. The next day, however, her mathematics teacher repeated the same story during class, and they'd discussed it all morning. Marina couldn't believe her ears, but only a month later she'd be writing an essay about the sirens, as her small town was waking up to a new reality: they were not the only ones in the solar system.\n\nThey never had been. That was the conclusion of a Swedish scientist, whose nasal voice reached screens big and small all around the planet. A probe to Saturn's icy moon of Enceladus put him and a team of befuddled European scientists at the center of the global news for over six months. Marina remembered discussing every shred of gossip with her friends at school, from what sirens looked like to the correct way of pronouncing the Swedish scientist's name.\n\nFor a brief moment, the nations of the world acted in unprecedented unity as they prepared for a range of possible conflict scenarios. Quickly, however, it became clear that there was no need.\n\nDwelling in the depths of Enceladus' dark oceans, sirens were not only extremely intelligent but blissfully pacifist: they had no known material culture on Enceladus, yet the ones who arrived on Earth delighted in the complex play of human forms and systems, many mastering several human languages in a fortnight. In her essay, Marina reported that one of them had been found reading Anton Chekhov after just five days.\n\nSiren-human relations had blossomed, as their neighbors proved highly adaptable to an array of Earth's cultures and climates. Those that were brought to Earth, through their childlike brilliance, led humanity into an artistic and cultural renaissance that left little untouched. Buildings, city grids, musical compositions--even the world's digital infrastructure was observed, playfully tinkered with, and reproduced in greater elegance. It was as though sirens possessed some a priori intuition about Earth's materiality.\n\nAll this caused furious speculation that sirens had transcended, if not leapfrogged the physical realm altogether. One famous American singer put out the theory that sirens had taken a step down the evolutionary ladder just to interact with humans... a view that gained traction after its repudiation by the leaders of the world's major religions. Only when the Pope appeared side by side with a siren in a brilliant PR stunt, did the discussion somewhat die out.\n\nMarina finished her highball, renewing her efforts to focus.\n\nIt was tough to take the situation seriously. Twenty years after first contact, it still seemed incredible to Marina. Life within the solar system? Simple biological compounds, one-celled organisms--maybe. Instead, those scientists drilling the ice on Enceladus had opened up a wondrously complex civilization, so very far ahead of humankind... Reportedly, a siren was a wonder to behold.\n\nMarina didn't even know if you could speak of a single siren. The academic literature was murky. Theories ran from a hive mind to a modular organism, in which each cell contained the consciousness of the whole. Marina found both possibilities equally incomprehensible--but she had to be prepared for all eventualities.\n\nHad she been hired to pleasure a hive mind?\n\nMarina saw the man look up from his book with a thoughtful glance and realized she'd been tapping her pen against the paper in frustration.\n\n\"Do you think they find Earth too hot?\" she asked. \"The sirens, I mean?\"\n\nThe grandfather scratched his head. \"I have heard that several sirens have recently moved to the arctic zone, or what's left of it. Perhaps they're getting homesick?\"\n\nMarina took note of the possibility and closed her notebook. She wasn't getting anywhere. \"I wish I could go see their world. Those light blue stripes look so beautiful... They always made me think of a white tiger.\"\n\n\"Me, I prefer earth.\" The man gazed out at the snowstorm engulfing the train, and intoned:\n\n\"From heaven fall icy petals;\n\nIn the sky not a spot of blue remains.\n\nA dusting of jade covers the ground\n\nAnd buries the blue mountains.\n\nThe sun rises over the mountain peak.\n\nThe chill pierces my bones.\n\nSilence prevails.\"\n\nFor a moment there was but the soft buzz of the train and the winds whispering against the glass of the shinkansen. Then the man grinned and broke the silence: \"Mus\u014d Soseki wrote this in the 14th century. Forgive my melancholy, but they don't write poetry like they used to.\"\n\n\"Perhaps it's harder to find,\" Marina offered diplomatically, thinking of a gifted friend who had aspired to be a poet but failed to get by. \"Or maybe it's just that there's not much silence left to fill with poetry.\"\n\n\"Maybe so...\" the man sighed, then smiled. \"You should ask Kaito if they have poetry on Enceladus. He should know, he's the cultural ambassador to Earth, isn't he?\"\n\n\"Yes,\" was all Marina could say. Perhaps she would be asked to recite a poem for Kaito. But while she'd certainly heard stranger requests over the course of her career, she doubted poetry was enough cause for summoning an expensive courtesan all the way from Tokyo.\n\n<p align=\"center\">* * *</p>\n\nA pale moon hung high over the Aomori train station when the shinkansen arrived. Marina had dozed off for a while after bidding the old grandfather farewell at Morioka. The freezing air was fighting its way through her thick scarf, but she still felt groggy when a middle-aged woman in uniform stopped her in front of the station.\n\n\"Ms. Sidorov?\"\n\nMarina nodded, confused.\n\n\"I am Ms. Tanaka, Kaito's driver. I am to take you to your ryokan.\"\n\n\"You must be mistaken...\" Marina had booked a little house on the outskirts of town. She always came a day early to appear rested and make final preparations before meeting with her clients.\n\n\"It's Kaito's wish that you be made as comfortable as possible during your stay in Aomori. We know you're not set to meet until tomorrow night, but...\" Misinterpreting Marina's hesitation, the driver added rather curtly: \"I can assure you that your stay at the ryokan has all been paid for.\"\n\nMarina was accustomed to displays of wealth and power from upper class clients and knew how to play those to her hand, but invitations to an undisclosed location were usually a huge red flag. If something went wrong, Kaito would be protected by status of a wholly different kind... diplomatic immunity of the interplanetary kind.\n\nThen again, sirens were supposed to be peaceful: \"Like some Buddhist bacterial culture,\" as a popular comedian had once joked.\n\nBesides, ryokans were known for their excellent food.\n\n\"Alright, where are we going?\"\n\n\"Half an hour south of Aomori, towards the Towada-Hachimantai National Park.\" Although considerably shorter than her, Ms. Tanaka stubbornly insisted on taking over her luggage. \"The snowplows have made us a freshly cleaned path, so we'll have no trouble getting there.\"\n\nMs. Tanaka walked over to a shining Toyota Crown Comfort, kept in mint condition by someone who must have had a sentimental connection to the vehicle. What gasoline cars were left on Japan's roads tended to be exorbitantly expensive old-timers, but this car was the opposite of a collector's item: at one point in time, it had been Japan's most popular taxi. Fortunately, the heating still worked.\n\nThe road out of town was spent in relative quiet, and Marina grew mesmerized by the light of the reddish streetlamps flowing past, one after the other. After a while she closed her eyes to rest a bit but found herself unable to.\n\nWhat would Kaito, who could take on any shape he wanted, look like?\n\nWhen Marina had first started working as an escort, plain old research had helped her cope with challenging clients. She would spend long nights trawling the web to understand the ins and outs of some wealthy banker or art dealer's life. As she grew more experienced, she was given assignments to politicians, celebrities, and other public figures who had to navigate their desires within narrow private lives. Research had always been her friend, but not this time.\n\nIllustrious though he was, Kaito had largely come up blank--probably something to do with his status as ambassador. More frustrating was the general lack of information on his basic physiology. Sirens mostly took on a human shape, but what if Kaito decided not to?\n\nDid sirens have erogenous zones?\n\nMarina felt woefully ill-prepared for not even possessing this basic information.\n\nShe silently cursed her boss for not offering her more details. What words Mr. Kawashita had spent on Kaito served merely to highlight the gravity of the assignment. Quivering with veneration, he had repeated ad nauseam that \"this client could make us or break us.\" Each time he emphasized the point by adding: \"Do you understand?\"\n\nKawashita never bothered to hide his view of her as little more than a dimwitted foreigner.\n\nMarina politely made clear that she understood.\n\n\"I don't understand why Yuki failed me, she always...\" Kawashita coughed. \"I suppose a siren might be too much even for her. Kaito wants someone capable of complete surrender. Do you understand?\"\n\nThe man's bushy eyebrows raised up dramatically each time he asked her that question. At times, Marina would mimic the gesture when replying that she understood, something that could send the man into a fit of rage that she found quite enjoyable.\n\n\"I'm confident that I can manage him,\" Marina had said politely, eager for the opportunity to meet a siren. She made her case to Kawashita with measured confidence: dynamics differed with every client, but she knew her kinks and possessed a broad repertoire of physical and psychological techniques to offer an attractive submissive persona.\n\nMr. Kawashita had been quick to interrupt her.\n\n\"You're failing to understand, this is not about playing the submissive girl.\" He took a moment to weigh his words. Underneath the man's condescension Marina sensed his nervousness. She realized Kawashita might have altogether preferred to avoid this particular client: he liked steady, predictable returns. \"Like I said, complete surrender in the widest possible sense of the word. That's how Yuki described it... and she couldn't give it to him.\"\n\nMr. Kawashita proceeded to light up a cigarette, ostensibly to let his message sink in, but probably just to calm himself. Marina sensed the veiled threat in his words: if the second girl he sent to Aomori proved equally incapable, it would be his reputation as one of Tokyo's preferred procurers on the line.\n\nComplete surrender. A flawless union with the client's desire. A blank but deeply responsive canvas onto which Kaito's passions could be painted.\n\nAs smoke filled up Kawashita's office, Marina began to understand why he had called upon her, much as he hated her guts. Marina was usually paired with those seeking foreign looks, but it was her knack for bonding deeply with her clients that kept them coming back. Of course, creating an emotional and intellectual connection was indispensable at Marina's pay grade, but she offered something more profound: if the connection was just right, Marina could commit herself to her client's desires as if they'd sprung from deep within herself.\n\nNo greater intimacy was possible in her profession, and Marina was certain that this was why she had been chosen to seduce the siren. For all his flaws, Kawashita had a sharp eye for which courtesan's skills could help him turn a profit.\n\nMarina would have left the smoky office quite confident in her assignment, if not for Kawashita's final words. He must have known they'd interrupt her workflow, but perhaps he could not help himself:\n\n\"Yuki found him... eerie.\"\n\nMarina tore her gaze off the thick snowflakes swirling outside to find Ms. Tanaka looking at her through the rearview mirror. The driver quickly returned her attention to the road, but Marina had recognized the look: here was a beautiful foreigner, dressed in luxury clothing, traveling alone to an expensive ryokan... there was little doubt as to what Marina did for a living.\n\nBack in Tokyo, she had sought to meet with Yuki for a firsthand account, but had been unable to reach her--\n\n\"Is this car yours?\" Marina inquired abruptly, after catching the woman's stare again. She did not enjoy putting her driver on the spot, but she had little patience for nosy prejudice. Feeling tired, she was beginning to second-guess her decision to head for the ryokan: what if Kaito insisted on seeing her this very evening?\n\n\"It was my father's car.\" It was clear that the driver was blushing, even in the low light offered by the sparse streetlamps on the country road. \"Why do you do this... job?\"\n\nMarina was surprised by the woman's frankness and decided to be forthright: \"I enjoy connecting with strangers, to see how deeply I can touch them even in the span of a short encounter.\"\n\n\"Well, I hope you can help him feel better,\" was all the driver said.\n\nMarina had no reply to that. Evidently, she was not the only one imagining what sex with a siren would look like. A frigid silence returned to the taxi.\n\nNot until they had arrived at the ryokan did the woman speak again. After having carried her luggage all the way to the lobby entrance, she bowed. Then she made to walk off, but at the last moment whispered stiffly: \"Please have the courtesy not to cry, like the last one.\"\n\nLeaving Marina flabbergasted, Ms. Tanaka strode off into the night.\n\n<p align=\"center\">* * *</p>\n\nMarina's feet crushed the virgin snow. Her breath produced little white clouds. Blowing into her gloves and rubbing her hands together, she made her way through the gate of the compound and into the gardens. The path to the ryokan's bathhouse had been meticulously cleared of any signs of last night's storm.\n\nAlready the air smelled slightly sulfurous with the scent of geothermal waters. Marina touched the invitation in her coat pocket. The card had been shoved under her door that morning; written in beautiful calligraphy, it had invited her to a rendezvous at the onsen at noon.\n\nAhead, the entrance to the bathhouse loomed into view, framed by snow-covered bamboo shoots. Marina still felt unprepared, but it could not be helped.\n\n\"Shouganai,\" she whispered to herself.",
        "The reception area felt warm and comfortable, as the glass doors shut behind her.\n\n\"Welcome,\" a matronly receptionist said, greeting her with a warm smile.\n\n\"Good morning.\"\n\nMarina took off her slippers and noticed there were no signs of other guests. It confirmed a suspicion that had crept up on her that morning: had the siren rented out the entire ryokan?\n\nMarina had grown immune to displays of wealth and power early on in her career; today she welcomed them solely for the opportunity to learn about her client's personality. Many sirens commanded considerable wealth on earth, but they were not usually so conspicuous in spending it. Like many of her clients these days--the ones that were rich enough not to have to show it--sirens tended to indulge the finer joys of life in privacy...\n\n\"Come on, step inside--you must be cold.\" The old woman waved her in with a smile. \"It's a good day to enjoy the waters!\"\n\n\"Am I the only one here?\" She had to be sure.\n\n\"Yes... besides Kaito, of course.\"\n\nThis took Marina by surprise, as she had hoped to arrive early.\n\n\"Has he been here for long?\"\n\nThe question took the woman off guard: \"He's... not left the pools for a fortnight.\"\n\nShe stepped from behind the reception and walked over to whisper carefully: \"He's not been himself lately. Best be gentle with him.\"\n\nThat was bizarre... but Marina had little time to reflect. The elderly receptionist began enthusiastically showing her in the direction of the dressing room. There, she set about explaining how to use the onsen, until Marina politely explained that she'd lived in Japan for fifteen years.\n\n\"Of course, of course--please make yourself at home.\" The woman smiled contently and bowed. \"If you need anything at all, I'll be right here!\"\n\nInside, Marina took her time getting undressed, folding her clothes, and trying to calm her mind. She reminded herself that sirens were known to be joyful and good-natured down to a fault.\n\nNaked, Marina strode into the empty bathhouse.\n\nShe sat down by one of the shower stations to lightly wash her body in preparation of the onsen, careful to keep her carefully stylized, wavy black hair dry for the moment. As she did, she briefly gazed in the mirror.\n\n\"Hello there...\"\n\nA vigorous exercise routine had kept her looking lean and trim. She was particularly pleased with how her thin waist enhanced her breasts. What her clients loved above all were her pale blue eyes; men and women everywhere valued the exotic, and the Japanese were no different. At times, a client would stare into her eyes and become lyrical, describing clear Siberian skies, or frozen lakes, or once--a fishing fanatic--the reflection of the morning sun on the back of a river trout.\n\nPlacing back the showerhead, Marina finally got up to search for Kaito.\n\nOn the face of it, she was alone. She checked the sauna, which had been turned on to a full blaze: it was as empty as the steaming pools and the snowy terrace outside.\n\nWhere was he?\n\nPerhaps he would show himself at a moment of his choosing. Some clients were like that. Mindful to appear relaxed and to be enjoying herself, Marina slipped out through the sliding door onto the snowy terrace. The natural hot spring steamed calmly in the brisk morning air.\n\nHappy to be outside, Marina slipped into the scalding waters.\n\nWith a sigh, she closed her eyes.\n\nAllowing herself to relax, she felt different parts of her body unwind, one after the other. At some point, she found even her facial muscles relaxing, revealing what could not be the most attractive look of melancholy and tiredness. How slippery, these onsen...\n\nShe yelped.\n\nHer eyes half open, Marina had noticed something right opposite her in the steaming bath. She swiftly gripped the edge of the pool to lift herself up, then caught herself. The thing shimmering inside the hot waters took the shape of a translucent young man.\n\nThe professional in her remembered to regain her composure, and Marina elegantly sank back into the pool.\n\n\"Kaito... I am pleased to meet you. My name is Marina Sidorov.\"\n\n\"Forgive me for frightening you,\" a subdued voice came from the apparition's mouth.\n\nIt was impossible not to stare at the siren's body. Although he appeared to have fully... materialized, his human shape retained that slight shimmer, like a highway in midsummer. The torso was still so nearly translucent that Marina could make out the individual tendons and ligaments of his lean muscles. He looked no older than 20.\n\nA velvet black bandana was wrapped over his eyes, Kaito's sole piece of clothing\n\n\"Please forgive my curiosity.\" Marina bowed her head slightly. \"It's just that I've never laid eyes upon one of your kind before.\"\n\n\"Now that you have... do you wish you had not come?\"\n\nThe bluntness of Kaito's soft words left her momentarily speechless.\n\n\"It's alright, look all you want,\" the siren offered with a vacant smile. \"I'd manifest a pair of eyes for you, but it wouldn't work. We have your anatomy down to a fine art, but the human gaze remains elusive--and we may never get there. The results might frighten you if I tried.\"\n\n\"I'm not frightened by you,\" Marina reassured him.\n\nAn eyebrow arched up on the siren's brittle young face. There was a melancholic tenderness in his manner that invited sympathy, as if he was carrying some heavy burden.\n\n\"It does feel a little... surreal to sit here with you,\" Marina offered, having found that frankness could be disarming. \"I'm not even sure how to address you; what are the customs for this kind of meeting on Enceladus?\"\n\nWas that a grin?\n\nThe siren licked his lips. \"You know what my biggest problem would be? Eye color. Infinite varieties, and I'm sure that none would be as stunning as yours.\"\n\nMarina felt Kaito stare at her naked body, even though he had no apparent eyes with which to see.\n\n\"All of Japan bathed together in the old days, didn't it? Before the Westerners came.\"\n\n\"Konyoku were the norm,\" she agreed. Here was a cultural ambassador indeed. \"A separation of the genders came to be seen as something desirable. The Japanese adjusted quickly to the outside world...\"\n\n\"Why do humans hide their bodies?\"\n\n\"I suppose it's culture,\" Marina began, startled by the sudden change in conversation. \"Humans have a long history of regulating sexual relations: nudity sends off sexual signals, and clothes help maintain these regulations. Then there's cold and the scorching sun, of course...\"\n\nKaito nodded thoughtfully.\n\n\"No clothes on Enceladus, right?\" She laughed.\n\n\"No... no need to protect us from the elements. We are the elements.\"\n\nThis gave Marina pause.\n\n\"Isn't this a bit hot for you, compared to Enceladus?\" She nodded at the waters.\n\n\"It's agony,\" Kaito said. \"But it suits my present state of mind.\"\n\nMarina was at a loss for words--what kind of creature liked being in agony? She looked again at Kaito's form, which seemed caught in some kind of violent tremble, as if containing a huge amount of energy that ached to get out, breaking apart this young body.\n\nShe remembered why she was here. To entertain.\n\n\"What can I do for you, Kaito?\" Frankness had never failed her before.\n\n\"I'm in search of a... feeling.\" Kaito cocked his head, and she felt his gaze intensify. \"Your world is beautiful beyond description, but life has lost its luster recently. I have tried everything else; this is the last solution I can think of.\"\n\nThe puzzle pieces clicked together in Marina's mind. That old grandfather on the train had been right: Kaito was homesick, desperately so. She had dealt with many expats stationed in Tokyo and the signs were unmistakable.\n\nShe playfully edged around to the other side of the pool to sit down next to him. Despite the blazing heat, Kaito's leg felt cool to the touch.\n\n\"Do you experience pleasure the way humans do?\"\n\n\"No, we do not,\" Kaito said flatly. \"But perhaps I could, in this form. It's an experience I was hoping you could help me with.\"\n\nKaito took the initiative to press his cold lips upon hers.\n\nMarina received him warmly and felt Kaito's body shake, as she guided his hands over her waist. For a while their tongues danced.\n\nThen Marina took a slow, deep breath of hot air, laughing at her lightheadedness.\n\nKaito appeared to share her dizziness and gripped the edge of the pool to steady himself.\n\n\"Do you know why I called for you?\"\n\nMarina wiped the sweat off her brow. She leaned back languidly and nodded her chin, suggestively, at the stiff cock that almost pierced the surface.\n\nKaito shook his head. \"This physical form feels... awkward to me. I was hoping you could help me make sense of it by letting me witness your own pleasure, as much as you can manage from an encounter such as this...\"\n\nNow Kawashita's words about surrender made more sense: the siren wanted for her to let herself go, to enjoy herself under his gaze.\n\n\"I think I understand, and I would be happy to give it to you.\"\n\n\"Then let's head to the sauna,\" Kaito said, rising from the waters with an erect cock.\n\nMarina followed him back inside the bathhouse. A waft of steam escaped when she opened the sauna door and she quickly closed it behind her and Kaito. It was even hotter here than in the pool, almost painfully so.\n\nFor a moment they just stood there, Kaito's lean body quivering in the heat.\n\nMarina felt a bead of sweat roll down between her breasts towards her belly button.\n\nKaito reached out, cold fingertips touching her bare neck. He leaned in to kiss her, far more deeply than before. His velvet blindfold brushed up against her cheek.\n\nMarina surrendered, and closed her eyes. Embracing him, she felt her nipples press against his cold chest. Everywhere her hands reached, she found Kaito's muscled form, which seemed sculpted according to some classic ideal of the human male anatomy. Each part of him was perfectly designed to invite forgetfulness that the creature inside did not hail from Earth... so perfect that it was eerie.\n\nBut, Marina was prepared for a little eeriness. She relaxed her body against Kaito's and was beginning to selfishly seek pleasure, as he'd instructed.\n\nKaito began to hum deeply, sliding his firm hands down from her waist to her hips, then cupping her ass to pull her more firmly against him.\n\nMarina gasped and felt Kaito's dick press against her cunt. His deep humming captivated Marina, as did the brush of his nose past her cheeks, her lips, and then along one of her eyebrows. She giggled at the unexpected tenderness.\n\nSensing her pleasure, the siren playfully continued to tickle her with his nose, then pushed her back against a bench, where Marina sat down and let the alien take control. One hand held her neck, while the other brushed her cheek. Seated, she felt the worst of the sauna heat retreat a little.\n\nAll Marina could think of as her lips cupped his dickhead, was how cold Kaito felt. His hands gently pressed her head closer, and she closed her eyes. Blowjobs were a great teasing device and she spent some time building up the pressure by occasionally retreating, before commencing again in earnest.\n\nThen, Kaito stopped her.\n\n\"There's no pleasure for you in this,\" he stated flatly.\n\nHis comment caught her off guard. She kissed his translucent cock and coyly looked up along the shivering shaft.\n\n\"Is this not what you desire?\"\n\nKaito staggered away, collapsing on a bench next to her and clasping his head.\n\n\"No, no, this is all wrong...\" He looked at her, utterly deflated. \"Why are you not enjoying this? I thought--is this not how humans do it?\"\n\nMarina carefully took his hand, massaging the tense muscles. She reminded herself that Kaito was looking for her pleasure... had she not seemed eager enough?\n\n\"How do you think humans have sex?\" she asked.\n\nKaito shook his head, frustrated. \"I've studied petabytes of stored cultural knowledge. Is this not how the exchange begins in most cases?\"\n\nMarina realized what had happened and tried not to burst out in laughter: here was an alien ambassador with unfathomable talents and resources, who had used these to create a perfect distillation of what could only be bland internet porn.\n\nMarina chose her next question carefully. \"Is it important to you that I enjoy myself deeply?\"\n\n\"What's the point otherwise?\"\n\n\"Then would you like to try again? Perhaps I can guide you a little.\"\n\nKaito nodded apathetically.\n\nMarina raised his hand to her face and licked his strong fingers, before slowly guiding them down between her gleaming legs. She shivered with pleasure at his cold touch.\n\nKaito was visibly moved and proceeded, very slowly, to massage her vagina.\n\nMarina leaned back and closed her eyes, trying now to lose herself into a fantasy that this was an encounter she had chosen for herself; one that she could enjoy fully.\n\n\"Kiss me between my legs,\" she said softly.\n\nEnthralled, the siren sunk to his knees.\n\n\"But begin down my leg, and slowly work your way up,\" Marina instructed.\n\nVery gently, Kaito planted a kiss on the inside of her thigh, close enough to her vagina that she shivered in anticipation. He kissed her again, closer up.\n\nHe seemed as caught up in the act as she was.\n\nWhat was a vision in her mind, little more than a tentative desire, slowly began to take shape in the rhythm of Kaito's kisses. Up, up, up along her thighs before circling in on her pubic area.\n\nIn the midst of the blazing sauna, the touch of his lips refreshed her. His tongue, tentatively flicking out, was positively cold to the touch.\n\nHe grabbed her ankles, and slowly spread her legs apart a little further. Marina leaned back and felt a growing desire for this strange creature. She reached out to grab Kaito's hair, as his hands slid up her legs.\n\nShe felt his head, cool to the touch, lean in. His lips brushed hers, before kissing her thin line of pubic hair. Marina sighed deeply and arched her back. He was toying with her, moving so very, very slowly...\n\nThe tip of Kaito's nose touched her clit and she heaved a sigh.\n\n\"Now kiss me down there!\" she commanded.\n\nThe siren leant in, his lips and tongue feeling like a cool shower in the sauna's inferno. Almost religiously, he began exploring her most sensitive places. He nibbled on her clit, ran the tip of his tongue up and down her labia, and before long she felt his tongue sink deep inside of her.\n\nMarina smiled as she realized that unexpectedly, she'd almost come right there and then. Her smile turned to moans and she pulled Kaito's head closer between her legs. When was the last time someone had gone down on her like this...?\n\nAs his tongue toyed away with her, the siren's cold hands took away the worst of the heat, gently massaging her abdomen to assist the stimulation of his tongue. Unburdened by the need to simulate some video, he seemed to know exactly what she wanted.\n\nLike a natural... how did he know?\n\nWhen the unbidden desire came for Kaito to squeeze her breasts, the siren responded instantly. She shrieked with pleasure, as he grabbed her with just the right amount of pain.\n\nWas he reading her mind--?\n\nHis secret out, perhaps, Kaito began to respond even more brazenly to the unspoken, unconscious needs that welled up inside her. He appeared to be as eager as her. Where her body called out, he responded infallibly, teasing, caressing, squeezing her body to lead her to eyewatering levels of pleasure.\n\nMarina bent and twisted on the sauna bench, moaning with abandon as she surrendered all resistance to the honey-sweet coldness of Kaito's affections. She had already come twice, crying out with delight... a third time?\n\nMarina breathed in the singeing sauna air, feeling heavier and heavier as her body snaked its way into its own oscillation, pressing over and again against the steady pressure of Kaito's hands and tongue.\n\nGod, yes.\n\nKaito was humming deeply now; some animalistic rumble that she did not understand but which deeply added to her excitement.\n\nDeeper and deeper she sank into the rhythm of his touch. Was it the contrast of hot and cold, or the deftness of his hands or--was she hyperventilating?\n\nThrough closed eyes, Marina became aware of golden threads of light curving into fireworks, or flowers perhaps, dancing geometrically in front of her shut eyes. The light grew more bright, and she suppressed a sense of panic. She couldn't stop now; she was so close...\n\n\"Make me come!\" she cried, seeking to shake off her hallucinations.\n\nDown below, she felt Kaito inch back his fingers, nose, and tongue--for a long, teasing moment--before softly circling his tongue around her clit to make her come at last, all of her built-up tension set loose in one great tidal wave.\n\nMarina's body convulsed and the golden visions dissolved to make way for a transcendental calm.\n\nShe saw the winds blow some snow off the tree branches outside. A bird was heard, and Marina had the distinct sense that she could understand its song. For a moment, she became intimately aware of the sacred autumn day outside. Everything vibrated with such intense... aliveness.\n\nThe sound of her own sobbing pulled her back, and Marina returned to a body that still spasmed with pleasure.\n\nSweaty hair stuck to Kaito's forehead, which he'd rested gently against her leg to look up at her with a mixture of fascination and naked joyfulness.\n\nMarina gasped for air. \"What was that?\"\n\nBut Kaito remained silent, softly nudging the tip of his nose against her knee.\n\n\"Enough... enough,\" she whispered hoarsely.\n\nShe could tell Kaito had relished making her feel good, but it was more than that. How deeply he must have intuited her pleasure to draw that kind of orgasm out of her...\n\n\"So, this is how you do it?\" he smiled hesitantly. \"It's so natural, almost as if you... feel your way into it. There seemed to be so much ritual involved in what I've seen.\"\n\nMarina deeply breathing in the dry sauna air. Yet as she felt her orgasm ebb away, something switched in Kaito and his mood rapidly darkened.\n\nHe got up and left the sauna without a word. Unfazed, Marina got up and followed him all the way outside, where she watched him collapse in the snow.\n\nKaito's frame looked haggard, his shoulders shaking as tears came rolling down from underneath the bandana. Save for his faintly transparent skin, he looked distinctly human in that moment.\n\n\"Hey, hey...\" Marina whispered as she wrapped her arms around him and pressed her head against his arm. \"What's wrong?\"\n\n\"It just--it worked for a moment...\"\n\n\"What worked?\"\n\nFor a while Kaito cried silently. \"I'm so sorry, it's just... I feel so lost in this world, and I don't know what to do with all these feelings. I was hoping to find delight in the human experience, and you were certainly lovely... but being with you seems to be having the opposite effect that I'd hoped for. I feel more confused than ever.\"\n\nMarina positioned herself behind him, letting his body collapse against hers so she could slowly massage his temples. Finally, she said: \"Humans are usually not in agony when having sex.\"\n\n\"Agony is the only thing that helps me keep this body together.\"\n\nMarina's felt the snow crush and melt underneath her. Both of their bodies were steaming but the cold beginning to creep up through her shins. Was this how Kaito felt in the heat...?\n\n\"You don't have to look human for me, you know...\"\n\nThis caused Kaito to shrink away from her touch.\n\nMarina stroked his hair. \"I think... I think that as long as I stay with you, you won't fall apart when we leave the heat. How about we get you to your room?\"\n\nKaito finally consented, and Marina helped him up. Seeking out Kaito's clothes, she helped to dress him and walked him out of the bathhouse--catching a wide smile and two thumbs up from the old lady at the counter.\n\nShe followed Kaito's mumbled directions and led him to his room. There, she prepared his futon, closed the curtains, and laid him to rest in bed.",
        "Marina lay down next to him, and for a while they simply stared up at the ceiling together. She was at a loss of what to think about the siren's labile mood, but experience had taught her that a moment of silent acceptance was often all a client really needed.\n\nAt last, Kaito spoke.\n\n\"I lost a good friend recently,\" he rumbled in a voice that sounded strangely deeper than the one she'd heard in the bathhouse.\n\n\"It happened two weeks ago,\" he sniffed. \"I felt her passing all the way over here. It seems impossible, but we were very close when we were young and our bond must have been stronger than I'd thought.\"\n\n\"I'm so sorry to hear that.\"\n\n\"Sirens don't really die from natural causes, so most of us choose when to leave behind this world.\" Kaito smiled sadly. \"She just... passed away.\"\n\nA suicide. Marina's head raced with the implications.\n\n\"You weren't there,\" she concluded.\n\n\"I am happy for her,\" Kaito began. \"She would not have decided to pass on without feeling that her life was complete, that she'd shared all that was hers to give.\"\n\nHe was clenching and unclenching his fists. \"I just feel so... so damn lonely.\"\n\n\"It's normal to grieve,\" Marina told him.\n\n\"I know it is,\" Kaito whispered, brushing a lock of her hair behind her ear. \"The strange thing is that I feel... different. Before coming here, I knew loneliness, fear, longing... but it's as if this body is distorting these feelings and pulling them all out of proportion.\"\n\nTears rolled down his cheeks again. \"I'm sorry, I didn't mean to bother you with all this.\"\n\nMarina cuddled up to him, offering him the comfort of her body and humming a soft lullaby as the siren silently wept. She was beginning to feel a deep pity for this creature, stranded so far from home. Perhaps he had found on Earth more than he could handle...\n\n\"What was your friend like?\" She eventually asked, breaking the silence that had descended.\n\nKaito 's morose body began to shake with a deep, rumbling laugh. \"Ah, you should have seen her! She was a dancer and could shift her body into the most beautiful shapes. I remember how when we were young, all the other kids wanted to be just like her--me included.\"\n\n\"Do you wish you'd been with her more, before she died?\"\n\nKaito shook his head, sitting up tiredly. \"No, we both went our own ways and I'm still very grateful I could come to Earth. It's just that... it's hard to explain but there's a sense of connectedness on Enceladus that I've been missing recently. It makes this--all these feelings--so much harder to deal with.\"\n\n\"You've made this a bit easier to carry.\" He squeezed her hand. \"Thank you. Without you, I might have refused to leave that bathhouse altogether, and the government would have had to come get me out. Can't have a siren having a breakdown.\"\n\n\"As long as you're trying to be human, you should be entitled to a breakdown,\" Marina smiled. \"Speaking of which, you're not still feeling like you're falling apart, are you?\"\n\nKaito grinned, \"Can you imagine the headlines? Courtesan slays peaceful alien...\"\n\n\"Hey!\" Marina punched his shoulder in mock indignation. \"Please take my profession more seriously: I'd at least give you the courtesy of slaying you in style. An ancient katana or some delicately crafted poison, most like.\"\n\nShe sat up, tightening her bathrobe. \"Seeing how you've regained your sense of humor; I presume I can safely leave you alone to get dressed for dinner?\"\n\nThe siren nodded. \"Just don't expect me to swallow a single bite, after what you just told me.\"\n\n<p align=\"center\">* * *</p>\n\nKaito was seated at the only set table in the ryokan's Western-style dining hall.\n\nAt first glance, the siren appeared like any handsome young man, dressed impeccably in what she made out to be a minimalist suit with an edge to the design--something by Yohji Yamamoto? A slim watch shimmered on his wrist, reflecting the light of a lone candle.\n\nMarina slowly walked up to his table, smiling warmly but taking her time to take in the siren. In a very different way than his watch, his vaguely translucent hands and face also seemed to catch the candlelight--which reflected along jagged fractals, like razor-thin shards of ice.\n\nKaito looked up at her through a very fine, charcoal grey blindfold, made to match his suit.\n\nA waiter pulled back her seat, and Marina sat down.\n\nFor a while they gazed at one another in silence. Then, Kaito caught her looking at a freshly plucked kikyo flower sticking from his coat pocket, adding a bright blaze of blue to his outfit.\n\n\"The old lady from the onsen left a bundle of them at my door,\" Kaito explained. \"She must have gotten so used to seeing me in the waters that she forgot I'd leave one day. I suppose it's her way of wishing me a speedy recovery--or perhaps saying farewell.\"\n\nKaito cleared his throat and continued in a more formal tone. \"Before we start our dinner, I wish to apologize for my behavior earlier. It was highly unbecoming of an ambassador to Earth to attempt such a... burdensome experiment.\"\n\n\"You weren't being a burden to anyone, silly,\" Marina assured him, playfully kicking his leg. \"I hope I wasn't too forward. For someone representing the whole human race, I feel like I played it pretty fast and loose with you...\"\n\nKaito chuckled. \"You were fantastic. I should be the one worrying about my performance. I wish I'd relied less on pornography, but there just seems to be such a taboo around sex. I didn't know where else to look for... ideas on how to do it.\"\n\nThere was a childlike quality about Kaito that made Marina laugh. For the first time since she'd met him, something resembling happiness seemed to radiate off the siren.\n\n\"You were pretty fantastic yourself, by the way,\" she whispered with a wink, just before the waiter arrived to ask for their choice of drink. She ordered a glass of red Koshu, while Kaito politely declined.\n\n\"I feel the money weighing between us,\" the siren said, returning to a more serious tone. \"Like pornography, money is foreign to us, but I'm beginning to understand this was the wrong way to go about it--I cannot pay you to feel.\"\n\n\"This is a sensitive issue that demands discretion,\" Marina offered. \"Interplanetary sex would be scandalous--and dangerous to Earth-Enceladus relations. Hiring someone in secret may well have been your best option.\"\n\n\"Still, I'd like to apologize for dragging you into this.\" He tapped his pocket. \"Tonight, I will wire a substantial sum to your personal account--enough never to have to work again.\"\n\n\"I'm not here for the money,\" Marina said flatly.\n\n\"You're not? That means you must be one of the few humans who's got enough not to suffer the lack of it...\"\n\nMarina blushed, feeling somewhat humbled by Kaito's sharp perception. He was right, after all: she was probably the only one of Kawashita's who was not prostituting themselves for money or some other form of addiction.\n\n\"You're right that I've reached the point where more money no longer generates happiness.\"\n\n\"What makes that kind of human happy?\" A smile played over Kaito's lips.\n\n\"You're sharp!\" Marina exclaimed, finding herself at a loss for an answer.\n\n\"I suppose it's the small things: holding hands with a lover or enjoying a walk in the forest and watching the sun set.\" Marina found herself waiting for a reaction from the eyeless face of this creature from Enceladus. \"Perhaps what you seek is like these things--impossible to buy with money?\"\n\n\"Perhaps,\" Kaito said, refusing to pursue her question further. \"But if you're not working for the money, why are you here? What is it about pleasing strangers that brings you joy?\"\n\n\"My mother died a few years after moving us to Japan,\" Marina began at last. \"She left me with all she'd gained climbing the social ladder here--enough to last me a few years.\"\n\n\"So, there were no particular money troubles,\" Kaito surmised.\n\n\"No.\" Marina hesitated. She rarely talked this openly about herself with clients, but Kaito was so perceptive that he'd surely sense any insincerity. \"I realized early on, that I loved touching things. Flowers and trees, the sand between my toes... even metals and software leave a distinct impression on me. I like that old Shinto notion that everything has its own spirit--this certainly has been my experience with life.\"\n\n\"When did you first realize this?\"\n\n\"When I watched my father kill a fish, back in Okhotsk,\" Marina said. She'd refused to eat fish ever since and went to bed hungry for a full week before her parents caved to her new conviction. Each had attributed their daughter's stubbornness to the other.\n\n\"I love touching--deeply touching--others. Physically, but also intellectually and emotionally. This job offers me the chance to do just that. Recently I've been having thoughts of quitting, but...\" She exhaled deeply and grinned. \"I suppose I couldn't live without the thrill of it. You never know who you'll meet. There's danger in that, but also such a radical promise of connection.\"\n\n\"I think you'd enjoy Enceladus...\" Kaito observed, looking entranced.\n\n\"Was that your experiment back in the sauna, to try and feel what I felt?\"\n\n\"I was hoping to learn from you, to help place some of these feelings I've been having.\"\n\nMarina sensed that she'd hit an open nerve and felt a sudden endearment for the siren. She'd spent all her life getting used to her human body and its complex emotions... how much time had Kaito been given?\n\nThe waiter used the opportunity to insert himself and ask for their choice for dinner.\n\n\"You're not eating?\" Marina asked Kaito as she briefly scanned the menu options, adding in a sotto voce whisper, \"You can rest assured, I've decided to go for the katana.\"\n\n\"I don't need nourishment the way humans do,\" Kaito explained to the waiter with a soft smile. \"Can you recommend anything for someone with a kind heart?\"\n\n\"The vegetable tempura has won regional awards,\" the young man was quick to point out, and Marina followed his suggestion.\n\nShe took a thoughtful sip from her wine, which had a refreshing sour taste.\n\n\"Will you tell me?\" Marina asked softly but insistent. \"What exactly did you seek through me, Kaito?\"\n\n\"Sex is the only way left that I could think of to feel at home in this world--to feel human.\" A pregnant silence descended, until Kaito finally elaborated. \"I selfishly thought that a true connection with a human might relieve some of these feelings I've been having. The experiment was probably doomed from the start.\"\n\nMarina reflected. \"I'm not sure anyone can relieve those feelings for you, but if connection is what you're looking for, I'm not sure we've properly tried your experiment.\"\n\n\"What do you mean?\"\n\n\"You've satisfied me beautifully and I hope it gave you a sense of what humans might experience during sex... but pleasure goes both ways. It doesn't work if you're in agony.\"\n\n\"It works for some humans, doesn't it?\"\n\n\"That's a fetish, and there's always some measure of pleasure involved. When I look at you, I see a different pain that I can't ignore.\" She measured her words: \"If you don't let me in as well, it becomes very hard to get to the point where we can each let go of ourselves and the other, to experience something higher.\"\n\n\"Perhaps.\" Kaito threatened to fall back into that somberness again.\n\n\"What if you weren't trying to feel more human; what if you tried feeling more like yourself?\" Marina brushed the inside of her foot against his leg. \"If we try your experiment, I say we do it properly. Why don't you show me your true form tonight?\"\n\nKaito shook his head. \"Bad idea. There's a reason we take this shape...\"\n\n\"Have you ever shown your original form to anyone before?\"\n\n\"No.\"\n\n\"Try me.\" Marina did not flinch. She knew she was out of her depth, improvising away, but she sensed that she was onto something. She had been with many clients she'd found physically less than attractive, but she knew beautiful moments could always arise, as long as there was a true connection--something Kaito seemed in desperate need of.\n\nThe siren leaned back in his chair: \"As a foreigner to Japan, as a courtesan, you must appreciate that sometimes people look at you in ways that prevent them from seeing you. My being a siren is bad enough by itself, but if I were to show you my true form... I cannot ask that of you.\"\n\n\"Then let me offer it to you freely,\" she insisted. \"I would be honored to see you as you are.\"\n\nKaito remained stuck in a tense silence. The waiter cleverly made use of the lull in their conversation to delicately place the dishes in front of Marina, making off with minimal interference.\n\nOnly then, did the siren finally nod.\n\n\"But only for your eyes,\" he whispered. \"I will send off the staff for the night.\"\n\n\"No objection here,\" Marina whispered back conspiratorially. \"Even humans enjoy privacy for these things.\"\n\n<p align=\"center\">* * *</p>\n\nMarina's feet were freezing inside her slippers as she slowly walked down the ryokan's empty hallways, edging closer to her destination. It was late at night.\n\nWhy was she doing this?\n\nThe question had come back to her several times, as she did her makeup in preparation of her meeting with Kaito.\n\nCuriosity, she had decided, telling herself that it was a good enough reason. Still, even now, some of that shivering she felt was not from the cold, but rather her anticipation of what she might find in the siren's room.\n\nMarina had been careful to take into consideration not just her own feelings. Kaito had a charming but delicate sensitivity... if she felt abhorred by his appearance, could she muster the tact to reject him without hurting his feelings?\n\nThen again, how bad could it be?\n\nShe reached Kaito's door and paused. It was just a moment, long enough to draw a deep, silent breath, but not too long to appear hesitant.\n\nMarina open the door to find the room shrouded in darkness. She took off her slippers and dropped her bag and shoved the door close again to allow her eyes to acclimatize. A shiver ran down her spine.\n\nWhat was she doing here?\n\n\"Marina... You came...\"\n\nThe voice sounded like Kaito's but had a hollow, absent feel to it. Something stirred on the futon in the center of the room and Kaito bent over a low table to light a candle, then another one, and finally a third. Then he turned to greet his visitor. He was wearing an elegant shirt and a blindfold, the lower half of his body--still very much human--covered by the blanket. Marina wondered suddenly if it was all for show: did sirens even need sleep?\n\n\"Are you sure you want to be here?\"\n\n\"Of course I do,\" Marina whispered. \"May I join you?\"\n\nHer nightgown skidded past her nipples as it dropped to the floor. She stood naked before Kaito's blind gaze and felt a breeze come from an opened window. Step by step, breathing away the goosebumps, she approached the bed.\n\nKaito lifted the blanket, and she crawled up to him. Her hands explored his torso, his arms, and finally his smooth face.\n\n\"What happens now?\" she asked.\n\nKaito kissed her and bit her lips, and then pulled her in closer to wrap the full length of his arms around her slender body.\n\nShe shivered with cold.\n\n\"Close your eyes,\" he told her.\n\nShe did, and he laid her down on her back. Slowly his fingers brushed past her throat, then cupped her breasts, one by one, and played with her navel a little.\n\n\"What is your deepest fantasy, I wonder...\" Kaito whispered. His hand explored the budding wetness between her legs. His other hand stroked her throat, then made as if to choke her without actually clasping down. Everywhere the touch of Kaito's hands deftly increased her anticipation.\n\nUntil she realized that the siren was caressing her body in three places at once. Then four, and then five...\n\n\"What--?\"\n\nOne of Kaito's hands covered her eyes before she could open them while the other... or others... proceeded play with her breasts, tease her feet, kiss her hips and softly massage down towards her pubic area.\n\n\"You might be startled,\" Kaito explained anxiously. \"If you must look, look slowly.\"\n\nHolding her throat below the chin and tilting her neck back over the pillow, he guided her gaze towards the wall. Something--many things--were casting curved shadows al over the wall. Even in the low light of the candles, it was apparent that above her a beautifully intricate, rhythmic dance was taking place.\n\nMarina looked up to find the room filled with long, twisting tentacles.\n\nSwaying as if on an invisible breeze, the black limbs sprouted from the back of Kaito's torso and hovered all around her, tracing the outlines of her body, hovering just a fraction over her skin, as if eager to massage her but not quite daring to.\n\nA few of them, however, had begun to touch her skin.\n\nMarina felt paralyzed. She breathed deeply, quietly, to keep the panic at bay.\n\nSuspended above her, Kaito's human form remained. His lips reached down for a kiss, and Marina gave in on impulse, closing her eyes again for just a moment.\n\nThen she broke the kiss and slowly, gently made to get up.\n\nShe saw Kaito collapse over the side of the futon, his tentacles quickly withdrawing in shame.\n\n\"It's okay, you can leave,\" he whispered, subdued.\n\nMarina walked up to the entrance and reached past her slippers for the bag she'd brought with her. From inside, she took out a notebook and a few of her favorite pens and pencils.\n\nTurning back around, she flipped open the notebook and looked at Kaito long and hard. A creature caught between two shapes... still afraid to share his true form.\n\n\"What are you doing?\" Kaito asked, apprehensive, suspended in half withdrawal.\n\n\"I would love to just... behold you for a while,\" Marina whispered.\n\n\"Okay...\" Kaito appeared a hint more relaxed, crouching down amid his slender tentacles.\n\nMarina inspected one of them, making out beautifully patterned ribs and indents... the siren's true form. She sat down; her pencil rested in her hand, hesitant to touch the paper in the face of such a deeply unfamiliar sight.\n\nThe longer Marina observed, the more she felt she was seeing Kaito's struggle before her eyes, frozen in time. Couched in the tangle of tentacles, his disproportionate human shape began to look more and more distorted to her eyes.\n\n\"Can you... let go?\"\n\nKaito shook his head.\n\n\"Will you do it for me? I think you will look beautiful.\"\n\nKaito remained silent for a while. Then, slowly, the candlelight appeared to penetrate his skin, as the human limbs began to turn transparent one by one, gleaming with those geometric gold threads. Eventually the sharp fractals shattered, sprouting more of the twisting tentacles and clearing the way for something larger to emerge into the room.\n\nAt last, nothing but the alien itself was there.\n\nAt the heart of the countless limbs rested the mass of Kaito's dark body, flattening the futon. It reminded Marina somewhat of a giant elephant skull, wrapped tightly in luscious black skin. There were big lidless eyes, darker than the night.\n\nThe siren took up most of the room, which was beginning to look quite small. Marina had to remind herself this was an oceanic creature. The many tentacles--some as thick as her thigh, some much smaller--were struggling against the confines of the room.\n\nI'm sorry, if you just let me ...\n\nThe words were not so much spoken as that Marina felt them shake the building's foundations.\n\nSeveral of Kaito's many limbs twisted around her to slide open the door. Kaito seemed to let out a sigh as some of the heavy mass of tentacles twisted out the door, and some more out the windows, giving Kaito some breathing space.\n\nYou can... leave me if you want.\n\nWas that rumble coming from his skull, or did it emanate from his entire being as a whole, down to the last little tentacle? It reminded Marina of the modular theory she'd read on the sirens' physicality...",
        "\"How beautiful you are,\" she whispered, dumbstruck. Wrapping herself in a blanket, she proceeded to look at him long and hard, before hesitantly putting pencil to paper.\n\nAs she drew him, she was discovering him.\n\nOver time, the tentacles began to regain their playful sway as Kaito relaxed in the knowledge that she wouldn't run from the place screaming.\n\nOccasionally, Marina tip toed around the room to observe Kaito from a different angle, before sinking down against the wall again, producing sketch after sketch, until it seemed she might do so until daylight.\n\nEventually--was he getting bored?--Kaito began to strike a series of poses.\n\nI want you to draw me like one of your French girls.\n\nMarina laughed at the reference. \"Coming from Enceladus, that movie must have struck you as some bizarre beach holiday.\"\n\nI confess to rooting for the iceberg.\n\nMarina put her sketchbook by her side.\n\n\"Why were you so afraid to show yourself to me?\"\n\nA deep rumble came from the dark creature.\n\nIt's not a matter of shame, but you must understand, we look just like the monsters from your most terrifying stories. The ones you can't bear to watch for the horrors they contain. Would you have revealed yourself in my position?\n\n\"That's not fair, you haven't given us a chance to--\"\n\nKaito's thunderous voice broke her off, and the entire room seemed to tremble: Do you know your own history? Do you know what humans do to those they fear? Your leaders could wipe out my entire species in a single afternoon, if they so chose.\n\nMarina sensed a deep fear in Kaito's voice--and she was altogether not sure it was unfounded.\n\nShe carefully moved her foot so that her toe touched one of the big tentacles resting by her feet. A deep shiver ran through her body, which made her reach out her hand to stroke it. The smooth, silky texture of his skin caught her by surprise.\n\nMarina got up and made to sit down on an empty corner of the futon, still wrapped in her big blanket.\n\nReaching out to the massive, skull-like segment that appeared to be Kaito's core, she was given pause by his almost childlike eyes, reminding her of the eternity that separated stars.\n\n\"May I touch you?\"\n\nYes.\n\nSoftly, Marina pressed the palm of her hand up against the skull. The sensation inadvertently made her laugh. It was as though a gust of wind blew through her mind, whipping up the dead autumn leaves to leave behind a sense of sheer joy.\n\nShe felt alive.\n\nSlowly, she extended her hand further up around Kaito's frame until the whole side of her body leaned against him. She tilted her head to rest against his, as she might with a lover on a date to the movies.\n\nHe felt so vibrantly alive. It was the only way Marina might describe it. Neither warm nor cold, neither rough nor slick and smooth--his skin simply vibrated with energy.\n\nHer other hand reached out for a big tentacle that twisted past the futon. Gently, she placed the length of her arm against it, falling deeper and deeper into the sensation of Kaito's touch.\n\nAre you sure you want to be committing this huge a clich\u00e9? A prostitute and a tentacle monster walk into a bar...\n\nMarina giggled, then kissed his head.\n\nMay I touch you?\n\nShe nodded slowly, and a smaller tentacle curved around her neck in an intimate embrace. Another reached out around her ankle, spiraling up around her calve, her knee, her thigh. Marina breathed through it all, giving into the sensation.\n\nAt the very end, it reached up...\n\nMarina dug her nails into the skin of Kaito's great head as the tentacle's tip stroked her labia. A distinct physical sensation had emerged now below the vibrating energy of his skin. The siren seemed to... harden.\n\nDo you know why I chose you?\n\n\"Because I can feel you,\" Marina sighed, gripping the bigger tentacle and closing her eyes to relish the sensation of his touch.\n\nIt is the other way around. Your own feelings run deep, like an underground reservoir, hidden below the desert of the everyday. They are brilliant to me, and I'd... I'd like to experience them through you. I want to feel you feeling yourself. Will you allow me?\n\n\"Let's feel each other,\" she whispered, kissing his head again.\n\nNudged by Kaito, she then lay down before him, putting her body to rest on a bed of tentacles as more hovered over from around her, breathless, uncertain where to start giving her pleasure.\n\n\"Come,\" Marina commanded, stretching out her arms.\n\nSupple flesh grazed her fingers. The firm ends of these tentacles, smooth and somewhat wet, touched the palms of her hands. Slowly, they pressed and turned. Flesh against flesh.\n\nA hand massage, in pursuit of something beyond the physical.\n\nLust took over. Marina gripped two of the stiffening tentacles, as she welcomed the touch of a great many smaller ones running along the back of her hands. Two of them coiled around her wrists--and further up till they tickled her armpits. Like supple rope, these scouts wrapped themselves around her body.\n\nMarina tried to turn, and felt resistance. The black tentacles held her in a close, warm embrace, leaving her only enough freedom to squirm and move around a bit.\n\nWith effort, she crawled over the floor, every movement bringing her pleasure through the various points of contact with Kaito's energetic tentacles. Even as Marina moved, they explored their hold over her, as if teasing themselves--delaying what must surely come...\n\nFinally, their hold firmed and Marina was playfully pulled up onto her knees and swayed from side to side. There was a hungry undertone there, in her own body and Kaito's. She was made to flex and stretch her arms. Thicker tentacles around her legs circled up to support her waist and back, then pulled her up until she found herself suspended in midair.\n\nSeveral smaller tentacles nibbled at her feet, playful still, but eager.\n\nThey curled up around her ankles and past her calves and then her thighs... which was where they paused, little heads swaying back and fro.\n\nMarina sighed with anticipation. The sound was echoed by a deep rumble that came from the siren, whom she'd been turned around to face.\n\nShe stared deep into the Kaito's eyes.\n\nDo you want this?\n\nOne medium-sized tentacle--its touch soft as velvet--had circled twice around her throat, leaving the tip hovering before her face as if observing her. Others great and small were gathering all around her.\n\nMarina parted her lips in a scream of silent ecstasy, feeling the tentacle's tip brush past her lips. But they weren't going to give her what she wanted. Not until she invited them in.\n\nWas this crazy?\n\nFuck it. Marina smiled seductively and then, slowly, licked her tongue across her lips. Torturously slow. Inviting Kaito in and giving up all resistance to the deep desire that filled the room.\n\n\"I figure life's a gift and I don't intend on wasting it,\" she quoted with a whisper. \"Won't you make a man out of me, Rose?\"\n\nA deep tremble resembling laughter came from the siren.\n\nWet with desire, Marina stuck out her tongue to touch the tentacle in front of her. Smoothly, the siren's dark flesh shivered under her touch.\n\nAs she kissed and slowly licked him, Marina twisted with pleasure from his approach down below. A smooth, small tentacle had begun circling her clit, as others followed up the inside of her thighs, wrapping themselves firmly around the creases of her butt. She felt them stroking, grabbing, teasing her more and more closely to her most intimate spots.\n\nTwo of them lay to rest outside the flows of her vulva, throbbing, while two smaller ones slowly pulled her open.\n\nHow exposed she felt.\n\nUnable to move, her last point of control was her voice. Drunk with anticipation, Marina moaned, pleaded, cursed this creature to make her his. To take her. Deeply. Until the tentacle she'd kissed earlier pressed itself up against her lips and filled up her mouth, craftily avoiding the region of her throat that would have sparked a gag reflex.\n\nNow she was denied even speech.\n\nStill Kaito waited, utterly entranced by her experience. Was he hoping to make it last forever?\n\nThe tantalizing caress around and all about her vagina continued apace--by so many little tentacles, sneaking up to her before retreating, each wanting a taste of her wetness. The bigger tentacles waited. A few were building up to other parts of her body.\n\nTwo of them, mirror images of each other, circled up around the bottom of her bosom, reaching up her abdomen and entwining between her bouncing breasts--then parting ways to encircle around them twice, three times, leaving the ends to tease her nipples.\n\nHow horny she was. When would this creature fuck her?\n\nSuddenly she felt her whole body vibrate softly; everywhere the tentacles that held her in place, suspended, began to resonate with Kaito's hum.\n\nA big one began to press up against her vagina.\n\nIt was so achingly gentle.\n\nAt times it retreated, nudging her, like a stolen kiss at the movies... ostensibly sweet while whipping her up into an even greater frenzy.\n\nMarina felt her own body beginning to resonate with the flesh around her. She was the center of a dark lotus of frenetic tentacles, who were now beginning their feast.\n\nGazing into Kaito's eyes, still sucking on his one tentacle, she was being made to sit down, slowly, giving it the space it needed, which it filled up gratefully.\n\nPulled all along her shins, abdomen, and chest, her body was lifted up.\n\nAnd laid down again.\n\nShe squirmed, as the big tentacle slid back inside of her.\n\nIt reached into her greedily, expanding and nestling among her hidden folds, before retreating again for another round. Smaller ones writhed along the opening, kissing her vulva and noisily seeking a way in.\n\nMarina moaned urgently, feverishly, for him to take her.\n\nOne smaller tentacle circled her anus, then eased its way into her. Another one circled around the first, massaging the opening, causing it to relax and widen further...\n\nMarina shook with delight.\n\nHer body was pressed upon from all sides now. Kaito was responding to her desires sublimely, as if he'd melded with her mind and her deepest desires.\n\nHe pulled back the tentacle from her mouth, and the small room began filling up with her whimpering cries of pleasure.\n\nBefore long, Marina found her body coated in a thick gleam that extended down the tips of the tentacles. Whenever one pulled out, sliding back down her thigh, as if satisfied, another eagerly took its place. They were ravenous for her body and ached to have a turn at her.\n\nMarina called out to Kaito, begging him to fuck her.\n\nExpertly, he massaged the insides of her cunt and ass. At times, the tentacles would press against each other from inside her different cavities--expanding for a moment at the height of her pleasure, before retreating again.\n\nLike the ocean, Kaito rolled in and out of her, his dark body sweetly strangling her limbs, so sensitive to her touch, yet ever unyielding. At one point, she began yelling, begging him to go faster, to make her come, only to hear the sound turn into a gargle as the tentacle around her neck slid its way back inside. There it stiffened, and she felt her mouth turn salty.\n\nAgain, and again, Marina was made to tense up with pleasure as Kaito had his way with her.\n\nThe turn came right when exhaustion was about to claim her.\n\nDraw your desire out of my flesh.\n\nMarina felt herself expand, as Kaito's supple form became an obedient vehicle for her own pleasure. At that point she realized, to her astonishment, that she was fucking herself. Instinctively, she found herself adjusting, using his tentacles precisely the way she wanted to, in order to give this human shape in her grasp its ultimate pleasure.\n\nExcept, even as she pleased herself, she was struck by a growing awareness that it wasn't exactly her either, but... something bigger than both of them?\n\nEcstasy made her abandon the question. Like a shiver it ran from the tips of her toes--assailed with kisses from all sides--to deep down her throat, which shuddered sloppily. In that moment, she felt herself merge with Kaito and whatever lay beyond them both.\n\nThe silence was numbing.\n\nMarina would go for early runs, no later than 6:00am, through her neighborhood in Tokyo. No matter if there was snow, rain, or suppressive heat--she always made that run. This feeling that she felt now, it was something similar: it was the rush of pushing through all her obstacles, her tiredness, her soreness, digging so deep into herself that she unlocked something... an unparalleled rush of adrenaline. This was that feeling.\n\nShe wasn't a big clubbing person, but her friends were. Every now and then, when the planets aligned and the music was just so, the mass that had gathered to dance could hit her in a very tender spot. She'd find her whole body resonating with the happiness of that moment, that thrill of merging with a rhythm so much deeper than yourself. This was that feeling.\n\nAnd beyond that rush there was that numbing silence. The texture of it made her gasp. She felt her face soften, her jaw unhinge, and her eyebrows raise in pure ecstasy. Without making a sound, she moaned.\n\nTwo tears rolled down her face, and she drew in a deep, stuttering breath as she came back to earth. She felt the tentacles gently lie her down on the futon and tuck her in. Satisfied to her core, Marina closed her eyes to curl up against Kaito's warm body.\n\nAll night she felt his tentacles hug her, keeping her safe.\n\n<p align=\"center\">* * *</p>\n\nUpon waking, Marina kept her eyes closed for a while. Not for fear of seeing Kaito again, but because she'd been privy to something deep; a sensation she feared would disappear with the daylight she could sense flowing into the room. That silence.\n\nMarina, may I ask you something?\n\n\"Yes, Rose?\" She opened her eyes and found the bedroom empty. The door and windows had been closed and the curtains neatly shut, leaving no trace of the gigantic siren from Enceladus.\n\n\"Where are you?\" she asked.\n\nI am--\n\nShe waited patiently, but the siren seemed to have gotten stuck after those two words. Marina closed her eyes again and found that she could still feel his presence, no less than after she had woken up. It made her shiver with joy, and was at a loss as to why.\n\n\"What would you ask of me?\"\n\nI would walk up the mountain in your shoes and watch the sun rise.\n\nThere was a strange undertone in Kaito's words, but it was too early for Marina to make out what it was exactly. For a while longer she lay curled up in bed, eyes closed, feeling his embrace, even though there was nothing to see or touch.\n\n\"Okay,\" she finally yawned into the empty room.\n\n<p align=\"center\">* * *</p>\n\n\"Why are you... nothing?\"\n\nThey had set out from the ryokan for the woods. The staff had left by the door a bento box with breakfast as well as walking shoes, thick socks, a big winter jacket, a fuzzy hat, thick gloves, and a backpack filled with honeyed tea, lunch, and other supplies. Apparently, Kaito had arranged it all while she slept.\n\nSometimes I enjoy taking no shape at all... plus some people might be unpleasantly surprised to watch a yacht-sized squid monster climb a mountain.\n\n\"As far as dreamboats go, you're more of a Titanic to me,\" Marina quipped.\n\n...I can also sense you better this way.\n\nMarina stopped as she felt Kaito touch her.\n\nShe took a deep breath and filled her longs with the crisp morning air. With it came that sensation again: it was like a tickle of joy that made all words meaningless. For a while they walked on in silence, occasionally touching each other with joy, until eventually Marina wondered:\n\n\"When will you take control?\"\n\nWe are almost there.\n\nMarina didn't know what that meant but continued down the path until she began to hear a raucous sound. Before long, she found herself standing below a waterfall.\n\n\"A takigyo?\"\n\nThe erotic is but one of many pathways to the divine.\n\nMarina felt a soft nudge and took off her backpack. Hesitantly, she undressed, piece by piece, and stepped up to the edge of the small lake. Crouching, she wet her shoulders and whispered her name, as the ritual required. She then bowed and stepped into the waters...\n\n...only to jump out again almost immediately.\n\n\"That's cold!\" she complained.\n\nShe felt Kaito rumble with laughter, goading her on.\n\nApprehensively, she stepped back into the lake. An icy cold began to crawl up her legs, slowly numbing her to the bone.\n\n\"Why do want this?\"\n\nI wish to experience what humans are capable of. What we shared last night... I know you felt it too. There was something deeper there, Marina--something that went beyond both of us. It reminded me of home.\n\nShe took a step deeper. \"And an icy waterfall will help us get there again?\"\n\nThe water reached up to her knees now, numbing her body. She gasped and wiped an involuntary tear from her eye. \"I--I don't know if I can do this, Kaito.\"\n\nWill you allow me?\n\n\"Okay,\" she said, closing her eyes.\n\nOnce. Twice. Three times she breathed in and out deeply.\n\nShe kept going, until at some point her breaths flowed over into one another and became cyclical; an intoxicating rhythm without pause that had her sink deeper and deeper into the cold water. She was aware of her body stumbling over the pebbles towards the waterfall, but could not pinpoint the prime mover that made it happen. All that she was certain of was Kaito's embrace.\n\nEyes still closed, Marina felt the iciness retreat into the background of her awareness. Likewise, the sound of the falling water grew closer with each step even as it seemed to fade further and further away.\n\nHer body turned, but Marina barely felt the shock of the water hitting her neck and shoulders. Right when it engulfed her, she was lost to a different, darker world. One where she had no body. High above, brilliant stars pierced the eternal night.\n\nSomewhere, Kaito sang a chant.\n\nMarina felt lightheaded, aware that somewhere, in a different world altogether, she had stepped out from under the waterfall.\n\n\"Now our minds, bodies, and souls are purified,\" she heard her voice whisper. The siren proceeded to take deep, slow breaths, taking full control over her body.\n\nWith each cycle, Marina sank deeper and deeper into the glorious emptiness.\n\nWhat are you doing?\n\nKaito didn't answer her question...\n\nShe was aware that her body had moved out of the water, dressed, packed, and walked off uphill.\n\nThen came a faint smell of pine needles, before she found herself adrift in warm ocean water. It took her a moment to even realize the change in setting, so natural did her new surroundings feel.\n\nWhere is this?\n\nThe answer came from afar, muttered in her own voice: \"Home.\"\n\nMarina tried to move around in the water, realizing that she was not in fact floating but submerged. The darkness of the ocean was all around her, drowning her--\n\n\"It's okay, you're safe.\"\n\nHer own voice began to guide her gently back to calm, and she desperately clung onto that faint sound echoing off into the vast emptiness.\n\nWhen Marina allowed herself to relax, she noticed that the water wasn't warm at all. It was colder than ice, and yet it felt so comfortable. Like a breeze, invisible currents caressed her face, and she tasted some salty substance on her lips... only they weren't lips.\n\nMarina realized they were tentacles, a whole forest of them spreading out around her, playing in the dark, each one as sensitive as... as her lips had been on Earth.\n\nThe siren stirred on his mountain walk, reaching out for her joyfully.\n\nMarina touched him back and laughed, a deep guttural rumble emanating from her core. She realized it must be the black elephantine body she had seen on the futon the previous night. For a moment, she reached inwards with her tentacles, exploring her body, her face...",
        "What are we... doing?\n\n\"Being,\" she eventually heard Kaito answer. Somewhere, impossibly far off, there was the sound of a bird in the forest. \"I... love feeling human.\"\n\nI love feeling siren, Marina replied and flicked her tentacles joyfully.\n\nSwimming around the icy ocean, exploring her sensitive new body with delight, she began to gain a deeper understanding of what pleasures the siren Kaito had experienced the night before... and how restricted he must have felt in that human shell of his.\n\nSomewhere, Kaito had reached the end of his path up the mountain.\n\nAlready?\n\nMarina the siren was looking at the now-familiar darkness through the eyes of the woman she'd been on Earth: above her, the eternal night appeared pregnant with distant galaxies.\n\n\"Do you want to feel what I felt last night?\"\n\nHow strange it was, having those words spoken to her in her own voice!\n\nYes.\n\nMarina sensed the dark ocean ripple against her skin. It was her human skin and she was floating at the surface now, where the rippling waters tickled her human ears, sparking a smile. Normally she didn't like swimming, but this was different: she felt at one with this ocean on Enceladus, and that vast emptiness beyond... She had a deep sense that this was home, that she was each place and every thing, and that she could not be safer and more deeply herself.\n\nUtterly at peace, Marina drifted in the darkness.\n\nThere came a moment where her fingertips inadvertently brushed her thigh. It was a sensation that changed everything: she wasn't just the wholesome primordial darkness--she was a body!\n\nHer nails scraped the skin of her thigh again. Pleasure rippled at the sensation of her own touch--literally. As though someone had dropped a smooth pebble just below her navel, the dark waters flowed out from her figure in concentric circles.\n\nSomething stirred deep below, in her body and in the water.\n\nAs one they broke the surface. They rose from the waters, dripping in the dark, having taken the first step in a tentative dance: her hand... and the tentacles.\n\nMarina's fingers grazed the skin of her leg again, moving a little further upwards.\n\nDark, almost unnoticeable so in the starlight, the tentacles followed her movement. They flicked curiously over her naked body, as if they had never encountered such a thing.\n\nThey were hers, but not entirely; both human and siren were beholden to some deeper desire over which neither had much control.\n\nMarina's fingers began to play around, invitingly circling her bellybutton and drawing trails along her abdomen, waiting to see how the tentacles would respond.\n\nOne of them, especially curious, touched her toes.\n\nThe sound of her laugh echoed into the eternal night, and an abundant joy radiated from inside her. The tentacles felt it, too; more emerged from the depths below, so many that they became a canopy covering whole parts of the night sky. High up in the air they danced, resonating with the pleasure of her laughter.\n\nStill they did not touch her.\n\nLike a lotus flower with her body at the center, they swayed outwards and onwards. Dark plum heads, still shiny from the water, awaited her desire.\n\nMarina's fingers trailed down from her bellybutton. Eventually, they reached the pubic area just above her clit, where she began massaging herself, so tantalizingly close. She bit her lip, teasing herself, momentarily closing her eyes as she moaned.\n\nHer call was heard. The dark mass around her rumbled in harmony, a primordial vibration that made the stars flicker more brightly. They wanted this. Her body.\n\nShe herself wanted her body.\n\nSo very badly...\n\nShe knew she'd crossed the point of no return when she was certain that it was her own sensuous tentacles anticipating the touch of human skin. She had anticipated the turn and welcomed it.\n\nThe woman's other hand came up her thigh, creeping towards her mouth. The tentacles sensed the vibration in the waters around her from a distance, as she made to lick her fingers. Then the woman's hands changed position. One moved up to grab her breast, while a pair of wet fingers gently lay to rest on her vagina.\n\nThere, she began to move.\n\nIt was an invitation. Those rubbing, tickling, quavering fingers were preparing the way in for this ravenous beast that Marina felt awakening inside of her.\n\nAll around the woman she swayed her tentacles, dancing a little closer with each moan.\n\nThe woman was masturbating with abandon, her moans humming deep in her throat as she bit down hard on her lips.\n\nMarina wanted this body--now.\n\nAll around her, the waves began to rise and fall, lifting her up and down and up again. Cradling her, the ocean itself moved with the waves of her pleasure. On one such wave--the final one--they carried her so far up that the woman thought she might hit the stars.\n\nAt the crest, she was put to rest on a bed of tentacles. Having come at her own hands, the water retreated and the woman was left at the mercy of the siren.\n\n\"Lift me up,\" she whispered.\n\nMarina the siren fulfilled her desire perfectly. The tentacles knew, or sensed perhaps, what the human needed and offered it to her gladly.\n\nHow light she was!\n\nWith ease, strong limbs lifted her body up, squeezing her breasts and groping her ass, finding the woman pliable under their grasp. Instinctively she realized the foundation of her own desire: to hang there in the arms of the siren, suspended, utterly helpless as she was fucked from below.\n\nMarina proceeded, and the human clasped her legs around the big tentacle that was offered to her, smoothly sliding down against it, to be caught by two or three smaller tentacles that tentatively stroked her vagina.\n\nThe human clasped the siren more tightly, biting into the tentacles with a fierce longing that contrasted the gentleness with which they approached her opening.\n\nHumming deeply, one of them slowly made to fill up her pussy.\n\nPatterns of curved golden lines burst out across the siren's tentacles, as the woman enjoyed the tightness of their grasp and the playful hump of the ribbed, eager tentacle inside of her.\n\nThe woman felt herself come close, but the siren sensed how she desired to come... differently.\n\nLet me offer my body to you.\n\nMarina the human was placed back into her nest, where she surrendered to her lust.\n\n\"I want you to feel even colder,\" came the whisper, even though the tentacles were already freezing to the human touch. Lowering herself onto the tentacles, the woman closed her eyes in concentration. How wet she was, they both thought, as she began to sway back and forth, steadily riding the siren's limbs harder and deeper.\n\nThe tentacles felt it all, paralyzed with pleasure. A small one rubbed up against her clit, relishing the shiver of the human's desire, desperate to take it all in.\n\nThe woman rode the siren as if her life depended on it, allowing herself to be driven mad with lust by teasing touches from all sides. Her pace was increasing to its limit, her butt lashing back and forth as her cries filled up the starry night. She dug her nails deep into the soft tentacles and cried out, until at last she tensed up.\n\nSiren and human collapsed onto each other as she came.\n\nMarina was left speechless by a familiar realization of utter unity.\n\nFor a long while, she remained there.\n\nSuch bliss...\n\nThen out of the emptiness, her human eyes eventually became aware of something: all around her, the ocean was turning to a vague pink that slowly turned brighter. Some part of Marina's mind remembered that the primordial oceans on Earth had been this color... Earth's oldest color had been pink.\n\nMarina opened her eyes.\n\nIn front of her, a brilliant sunset colored the skies.\n\nShe was home.\n\nShe felt overwhelmed by a deep sense of gratitude, and wept.\n\nUp on the top of the mountain, the air was crisp and here she had an unparalleled view over the approaching night. Kaito had brought her to a truly magnificent place.\n\nOnly after a while had Marina collected herself enough to speak.\n\n\"Kaito?\"\n\nShe could still feel him, she was sure of it.\n\nSomeone approached her from behind, and she turned around, startled to find the driver that had first brought her to the ryokan. Gently, Ms. Tanaka wrapped a blanket over her shoulders.\n\n\"Where is he?\" Marina asked, overcome by a sudden sense of foreboding.\n\nMs. Tanaka quietly helped her up, and Marina was alarmed by the sadness in her look.\n\n\"I'm to help you back down the mountain and take you home,\" she explained, putting a thermos can of steaming tea between her hands. \"You've got to warm up first, though. Kaito was careful, but you may still have come quite close to your physical limits out here.\"\n\n\"Where is he?\" Marina repeated, refusing to give into the dread growing inside her. He was still there, in her heart and in her mind. She could feel him--she was sure of it! Crouching in agony, she covered her mouth and the silent scream sparked by their abrupt separation.\n\n\"Don't do this to me, don't leave me when we've only just met,\" she finally whispered into that space that Kaito had left behind. \"Don't leave me.\"\n\n\"He's gone back home,\" the driver said curtly, but not unkindly, helping her up again. \"Please accept my apologies for how I treated you before, we were all very worried. I did not expect you'd be able to, but it seems like you succeeded in making him feel human just this once.\"\n\n\"No,\" Marina shook her head. \"That was not the point.\"\n\nShe called out for the siren, her voice echoing off the mountain slope.\n\nNo answer came.\n\n<p align=\"center\">* * *</p>\n\nMarina stirred her coffee, fighting back her tears.\n\nAgain?\n\nShe almost laughed, finding that her longing was beginning to make some place for a measure of annoyance. She had cried more in the past few weeks than she'd had in the past few years. Not even after her mother died had she cried this much.\n\nNow these tears threatened to cause a scene in the bookstore.\n\nShe wiped her cheeks and turned her gaze outside.\n\nDown below, a mass of people periodically crossed the famous Shibuya crosswalk. Less than in the old days, perhaps, but still enough to make for an impressive scene.\n\nWhy couldn't she let go? It had been three months since Kaito had left her... Of late, even Kawashita was beginning to sound worried, no doubt concerned about her long-term clients: ever since Aomori, Marina had refused to take on any job and feigned illness.\n\nA sickness of the heart, what a silly affliction for a courtesan...\n\nIt was hard saying goodbye to someone you'd bonded with. She knew this. It was part of her job, and she'd gotten better at it over time. She used to tell herself that she was open to losing even the best of people, for it merely meant she'd been lucky enough to have met them in the first place. Kaito had changed all that.\n\nOnce again, she returned to that climax on the mountain. She'd grown convinced that neither Kaito nor Marina had existed at that moment. Both had been merely that underlying, raw, playful energy, an essential nature that the sirens were much closer to realizing--and which those who came to Earth were struggling to retain. So many humans at their core believed themselves to be disconnected individuals... only to become that very thing.\n\nWith Kaito, for the briefest of moments, she'd experienced true unity. It was a mixed gift: the sadness of his departure, deeper than any she'd remembered feeling, was accompanied by a sense of peace and the memory of a deep realization that they had never been separate.\n\nBut at times she wondered if he had truly gone home... or if he'd seen enough altogether?\n\nOf one thing she was certain: on Earth, the siren had not felt lost and alone for not finding a way to be more human--he'd felt this way because he'd slipped into his human persona far too deeply. The feelings that came with an unfamiliar body, the disconnection, the loneliness, that experience of being thrown back onto yourself: they were all distinctly human experiences that sirens arrived unequipped to cope with.\n\nMaybe walking up the mountain in her shoes had helped Kaito realize that; maybe through her eyes he'd seen all that he had lost when leaving Enceladus.\n\nBreathing away those pesky tears, she whispered into her coffee cup a fundamental truth: \"It would not have worked.\" It would have been too bizarre, and possibly forbidden: a relationship with a siren. Marina sought solace in that thought and sipped at the warm liquid in her cup.\n\nShe resolved to finally focus on her book.\n\nYet it was only on her fourth way through the same paragraph that something on the darkening streets outside drew her eye. Although the crossing lights were green, the Shibuya intersection was rapidly emptying out to make place for an extended motorcade. A foreign official...?\n\nThe commotion outside began to reach inside the bookstore, and Marina heard a table topple, then some shouting, as multiple phone cameras pointed outside to document what was going on.\n\nMarina slowly got up, too shocked at first to comprehend what she was seeing.\n\nFlanked by police cars and motors, a Titanic-sized siren elegantly slithered out onto the center of the Shibuya crossing.\n\nGrinning widely, Marina ran down two escalators, dodging perplexed onlookers, and sprinted out the door into the cold winter evening.\n\n\"Kaito!\" she yelled.\n\nThe great siren turned to face the front of the bookstore, tentacles crawling, surrounded by cries of surprise and terror. The thirty or so policemen that had accompanied him kept at bay the crowds, as Kaito approached to raise one of his tentacles to Marina's chin.\n\nMarina... I'm so sorry.\n\nShe felt his guilt, his sadness--his apology--like a physical tremble in her skin. She caressed the tentacle. How she had missed his touch.\n\n\"I'm so glad you came back,\" she cried, caressing that dark body of his.\n\nI realized back on Enceladus that you were the thing that I was missing here.\n\nHis words sunk in to make her feel like dancing, yelling, and jumping up into the air as high as she could--and she could that tell Kaito, sensitive as he was, was rapidly beginning to feel the same way.\n\n\"Not here, though,\" she said, laughing through her tears.\n\nAround them, the crowds began to quiet down, captivated by the interaction that was taking place in front of them. Terror progressively turned to fascination and even some hoots of admiration, as several onlookers realized this was the siren Kaito they were looking at.\n\n\"I'm glad you gave us a chance,\" Marina whispered. \"But how did you get the government on board? Wouldn't it jeopardize the peace between humans and sirens--what about the political implications?\"\n\nThere is no politics without equals, not in the true sense of the word. I insisted on showing myself as I was. Even a cultural ambassador can only do so much to adapt to Earth... and I think humankind deserves to see their neighbors for who they really are.\n\n\"I'm so proud of you,\" Marina whispered into the siren's embrace, as she held him tightly.\n\nThere, amid the falling snows, surrounded by the buzz of police officers holding back the crowds, with her coffee cup still curiously clasped in her hand, she asked Kaito the question.\n\nThe siren's rumbling answer sent a tremor through the whole square.\n\nI do.\n\n+++++\n\nMany thanks to Kenji Sato for proofreading this story."
    ],
    "authorname": "Ovidiy",
    "tags": [
        "japan",
        "japanese",
        "supernatural"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/afloat-in-the-dark"
}