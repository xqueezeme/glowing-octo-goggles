{
    "title": "Conference Sex - The Morning After",
    "pages": [
        "Jenn stood in the hotel lobby, staring across the room at the empty hotel bar. \n\nAround her, conference attendees were making their way to their morning seminars. \n\nShe was sure that Tim, the man she'd met in that bar last night, was among them, but she didn't know where. He'd left during the night... after... One part of her mind shied away from the thought, but at the same she felt a tingle across her skin... her nipples... her pussy.\n\nShe looked down at her phone. It felt hot in her hand. She hadn't dared to open the picture folder yet. She had to get it over with. She wondered if she would really dare to say anything when the time came. Her fingers shook as she pressed Dan's speed dial. \n\n\"Hi, honey,\" Dan answered brightly. \n\n\"Hey.\" Jenn said, subdued.\n\n\"So, what do you have going on today?\" He asked.\n\n\"Just more seminars,\" Jenn replied. She could hear the slight quaver in her voice, betraying her nerves. \n\n\"So...\" Dan sounded hesitant.\n\n\"Yeah, I...\" Jenn stammered.\n\n\"You got a little crazy last night?\" Dan said. \n\nShe could picture his grin and squirmed. Memories of last night danced though her head... Tim's smile as he took a picture of her flashing her pussy in the bar. The feeling of his hot lips on her neck, his hands on her body. The taste of his cock, in her mouth...\n\n\"Yeah,\" Jenn replied carefully.\n\n\"Too much to drink,\" Dan said, offering his explanation as fact.\n\n\"No,\" Jenn snapped.\n\nShe'd had a couple of drinks, but she hadn't been drunk. She'd actually been remarkably clear headed. Had clear-headedly invited a strange man back to her room, stripped for him, sucked his cock, lay back on the bed under him...\n\n\"Really, 'cause those texts looked pretty drunk,\" Dan insisted.\n\n\"Texts?\" Jenn asked.\n\n\"Can't talk... Call you later...\" Dan chuckled. \"I think that's what you were trying to type anyway.\"\n\n\"I wasn't drunk,\" Jenn countered angrily, remembering... laying on her belly, her ass in the air, holding her phone...\n\n\"Oh, come on,\" Dan said. \"You could hardly type.\"\n\n\"Yeah, well it's hard to type when you're getting fucked!\" Jenn shouted into her phone.\n\nDan went silent. Jenn could hear him breathing, almost panting, into his phone. Over that, she could hear the murmur of voices around her. Her face flushed as she suddenly remembered she was standing in the hotel lobby. \n\nSlowly, Jenn looked around her. Several people were walking quickly past her, clearly pretending not to look at her. A pair of women in business attire, wearing convention badges, were giving her an unmistakable disgusted look. A group of men in suits, also clearly with the convention, stood grinning and plainly undressing her with their eyes, while an older man simply smiled and nodded at her.\n\nJenn tried to ignore the heat burning her face, flushing her breasts, and she very much tried to ignore the wet heat rising elsewhere. With a determined pace, she started walking. Not really toward anywhere, just walking for the sake of moving.\n\n\"I'm sorry...\" Jenn stammered into the phone.\n\n\"You're joking,\" Dan declared.\n\n\"I'm...\" Jenn started again.\n\nDan hung up.\n\nJenn froze. Her gut twisted violently. Her warm desire was suddenly, painfully, doused by cold fear. What had she done? Oh god, what had she done?\n\nHer hands shook as she hit speed dial again.\n\nHe answered, \"Getting fucked?\" \n\n\"You'd said...\" Jenn stammered. \n\n\"What were you doing?\" His voice sounded so level, so horribly, sickeningly calm.\n\n\"Those fantasies you kept telling me about...\" Jenn felt close to tears.\n\n\"Shhh,\" Dan said soothingly. \"Just tell me... when you texted me last night. That last time. Tell me why you couldn't type right.\"\n\n\"I told you...\" Jenn muttered.\n\n\"No, tell me exactly what you were doing at that moment,\" he urged.\n\nShe could almost feel Tim's strange weight on her back... \n\n\"Getting fucked,\" Jenn replied.\n\n\"Tell me,\" Dan insisted.\n\n\"What do you want to hear?\" Jenn replied. \"Do you want me to tell you I was on my belly? That the phone was in front of me, and I was trying to type while... while he was...\"\n\n... his cock pushing inside her again...\n\n\"Was what?\" Dan prompted.\n\nRemembered him thrusting into her... remembered trying to cling to her phone while her whole body shook from the force of him in her.\n\n\"Was inside me. Was fucking me.\" Jenn said, her voice growing husky. \"Was pounding from behind, so hard. So hard I couldn't type properly.\"\n\n\"He knew,\" Dan said. \"About me.\"\n\n\"He knew.\" Jenn confirmed. \n\n\"You were...\" Dan's deep breath buzzed over the phone. \"Fucking. When I texted, you were fucking another guy.\"\n\n\"Yes,\" Jenn said softly, her eyes closed. \"I was. I was fucking another guy.\"\n\n\"Who?\" Dan asked, his voice surprisingly calm about the question.\n\n\"His name's Tim,\" Jenn replied slowly. \"He's here at the conference.\"\n\n\"You met him in the bar,\" Dan said. \"He's the one who took that picture.\"\n\n\"You saw... oh, right, the picture in the bar,\" Jenn said. \"Yes, he took that. He saw me taking the pic I sent you. The upskirt pic in the bar. I didn't know he had at first. He came over and bought me a drink. He was nice. Flirty but not pushy. Then he said he'd seen me taking it. He asked who I was taking it for.\"\n\n\"You told him about me?\" Dan felt a little shocked.\n\n\"Yeah, I did,\" Jenn admitted. \"He asked about the picture, about why I'd taken it... and I told him about... \n\n\"You always go on about your pervy fantasies,\" Jenn continued. \"About wanting me to... to fuck another guy. We talked about it at the airport. I took my panties off, right at the elevators. I didn't tell you: the doors to that elevator opened right after I took them off, a second after I sent you the picture in front of them. Two guys got off. They saw me. I know they did. They saw me standing there with my panties in my hand, my dress hiked up. They saw my pussy. They didn't say anything, but I know they saw. How could they not have?\n\n\"It turned me on. Riding down in that elevator, with no panties on. Knowing those guys had seen. It turned me on so much. So, when I got to the bar, when Tim finally told me he'd seen me taking a picture of my pussy, right there at the bar... I was so turned on. I told him. I told him my man had told me to take my panties off. That you wanted me to flash guys at the bar. So, he offered to take another pic for me and I flashed my boob at him... and like, half the bar. I bet so many guys saw.\n\n\"I was so turned on... and Tim was nice... so, I told him. I told him your fantasy... about me fucking another guy.\"\n\n\"... and he decided to be that guy,\" Dan concluded.\n\n\"No,\" Jenn snapped, \"I decided. You kept talking about your fantasy, and it became my fantasy. Tim was nice and he was flirty but even after I told... after I told him about the fantasy, he didn't push. He hinted a lot, but he didn't assume or insist. So, I decided. I invited back to my room.\"\n\n\"... and fucked him,\" Dan said.\n\n\"Yes,\" Jenn answered confidently, \"I did. I fucked him. I stripped for him and I sucked his cock. He has a really nice cock, Dan. He played with my tits and he ate my pussy and then... then he entered me and it felt so good. Oh god, Dan, it felt nasty and wicked and so very good. He fucked me and fucked me.\"\n\n\"He was fucking you when I texted,\" Dan repeated.\n\n\"He heard my phone. He stopped, to check it,\" Jenn replied. \"When he saw it was you... he just flipped me over, face down, and pushed back inside me. He told me I should answer. It really turned him on. He just went wild. I think he wanted me to call you, but I texted instead.\"\n\nThere was another silence.\n\n\"It's really hard to type,\" Jenn added lamely. \"When someone is fucking you that hard.\"\n\nDan laughed. Suddenly, unexpected, he just started laughing. He just laughed and laughed. Slowly, Jenn started laughing too, until finally the two of them were just laughing uncontrollably over the phone. All the tension between them bled away. \n\n\"Are you... ok?\" Jenn said as the laughter finally faded.\n\n\"Are you wearing panties?\" Dan asked.\n\n\"What?!\" Jenn replied, shocked. \"Yes!\"\n\n\"Well, take them off,\" Dan demanded. \"Right now, take 'em off. Sluts like you don't wear panties.\"\n\n\"Dan!\" Jenn exclaimed, shocked by his use of the word 'slut.'\n\n\"What, I'm a perv for wanting this,\" Dan said firmly. \"You're a slut for doing it. In fact, I think no more underwear for you for the rest of the conference. No bra, no panties. Nothing.\"\n\nThe hot feeling was back. Jenn's whole body felt flushed, tingling with desire. She was shocked by how the idea thrilled her. \n\n\"Ok,\" she replied at last.\n\n\"So,\" Dan said. \"Take 'em off.\"\n\n\"Dan,\" Jenn hissed, \"I can't... not right this second. I'm in the hotel lobby.\" \n\n\"So, everyone in the lobby heard you yell about getting fucked,\" Dan replied.\n\n\"God, I know,\" Jenn groaned in embarrassment. \"but I'm not taking off my panties for them. Wait a second.\"\n\nShe looked around, spotted what she needed and began moving with purpose.\n\n\"Where are you?\" Jenn asked, as she crossed the lobby.\n\n\"At home, in my office,\" Dan replied. \"Where are you going?\"\n\n\"Ladies' room, dummy,\" Jenn replied.\n\n\"Men's,\" Dan said firmly.\n\n\"I can't,\" Jenn whispered, freezing in shock.\n\n\"Do it,\" Dan insisted.\n\n\"Shit, shit, shit,\" Jenn hissed into her phone.\n\nShe looked around, then moved quickly away from the lobby, down one of the side hallways. The restrooms to the side of the conference rooms were smaller, she remembered. She hoped they were less frequently used, and she was sure that fewer people would notice her slipping into this men's room than the one just off the lobby.\n\nShe waited a moment, for a pair of convention goers to pass, then dashed through the door labeled Men's. As she'd suspected, the room was small - a row of urinals, two stalls and a bank of sinks. \n\n\"Ok, perv, I'm in the men's... but it's empty so no one has seen me.\"\n\n\"Yet, slut,\" Dan chuckled.\n\nJenn walked toward the sinks, watching her reflection in the mirror above them. She looked at her neat blouse and skirt (had she really picked one that short?), at her flushed face and her heaving chest. Back in her hotel room, she'd looked in the mirror and seen a business woman, albeit one with an I-got-laid smirk. Now...\n\nSetting her phone down on the sink, she reached back and undid her bra clasp. A quick wriggle and the white, lacy thing slid down her sleeve into her hand. In her reflection, she could see her nipples pressing against the fabric of her bra, could make out the difference in color if she looked closely.\n\n\"OK,\" Jenn said. \"They're off.\"\n\n\"Bra and panties?\" Dan asked firmly.\n\n\"Shit,\" Jenn snapped.\n\nFirmly, she hiked up her skirt and pulled her panties off, setting them and her bra down on the counter beside the sink.\n\n\"There, you perv,\" Jenn replied hotly, \"but you're out of luck because this isn't a mini-skirt.\"\n\nOf course, her skirt was currently bunched up around her waist, leaving her ass and pussy completely exposed... but all she had to do was pull it down again to fix that. Her breasts heaved, rubbing her hard nipples against the soft fabric of her blouse.\n\n\"I bet your blouse looks nice too,\" Dan grinned.\n\n\"Shit,\" Jenn moaned. Unbidden, her hand slipped up to brush the sensitive tip of her breast.\n\n\"How wet are you?\" Dan asked.\n\n\"Perv,\" Jenn shot back, her fingers slipping inside her blouse to squeeze her nipple.\n\n\"Tell me,\" he insisted.\n\nJenn's other hand moved lower, sliding up her thigh to touch the folds of her naked pussy.\n\n\"Oh god, I'm soaked, OK,\" Jenn replied. \"I'm completely horny and you're probably lucky there's no one else in here.\"\n\nShe paused a moment before asking, \"How hard are you?\"\n\n\"I'm so hard, honey,\" Dan replied. \"I can't believe how hard all this has made me.\"\n\n\"I can,\" Jenn actually giggled, then groaned. Her fingers slipped between her wet folds, slowly rubbing herself while her other hand squeezed her tit.\n\n\"Are you touching yourself?\" Dan asked, sounding shocked.\n\n\"That's what you want, isn't it?\" Jenn purred into the phone. \"I'm here, in the Men's restroom, with my skirt hiked up around my thighs, touching my dripping pussy. It feels good, Dan. It feels nasty and dirty and so good.\"\n\n\"Just like last night,\" Dan prompted.\n\n\"Oh yes,\" Jenn moaned. \"When he touched me, I just shivered. I knew it was what we'd talked about, but doing it... I felt like such a bad girl and that just made it better. Oh, Dan, when he put his cock in me, it was so... ahh... so good.\"\n\n\"You dirty slut,\" Dan groaned.\n\n\"Tell me you're stroking it,\" Jenn growled. \"Tell me you're holding that beautiful hard dick.\"\n\n\"I am,\" Dan replied.\n\n\"Say it,\" Jenn demanded.\n\n\"I'm stroking my hard... uhh... hard... dick,\" Dan groaned.\n\n\"You're thinking about him fucking me, aren't you,\" Jenn panted. \"About him inside me. His big cock... ahhh... so big... in my pussy. My wet little pussy, all stretched out around his... uhhh... big cock... as he fucked... fucked... oh god... fucked me.\"\n\n\"Oh shit,\" Dan moaned. \"Oh honey...\"\n\n\"That's it, Dan,\" Jenn panted, \"cum for me. Cum... ahhh... cum with me.\"\n\n\"Shit!\" Dan roared through the phone.\n\n\"Oh God!\" Jenn shrieked, her body spasming .\n\nFor a time, they both sat panting through the phone at each other.\n\n\"I can't believe,\" Jenn gasped out, \"that I just rubbed one out in a Men's hotel restroom.\"\n\n\"Slut,\" Dan teased. \"Call me after your seminars are done.\" \n\n\"Perv,\" Jenn replied."
    ],
    "authorname": "Lionheart72",
    "tags": [
        "restroom",
        "conference",
        "cuckold",
        "phone call",
        "phone sex",
        "public restroom",
        "restroom masturbation",
        "masturbation",
        "risky"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/conference-sex-the-morning-after"
}