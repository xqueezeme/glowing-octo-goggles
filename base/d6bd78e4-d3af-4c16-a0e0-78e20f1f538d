{
    "title": "What I Didn't Hear Pt. 07",
    "pages": [
        "1All characters in the story are 18 and above. This is a story of incest between a brother and a sister. If that's not what you are here for, I would suggest you not read any further. Also, to understand what is going on, I suggest you start from chapter 1 if you just found this story.\n\nHappy reading!\n\nBHW\n\nChapter 7\n\nWaking up the following morning was like Deja Vu. Hot, sweaty, hungover, having to piss like a racehorse, and a pounding headache with Katie nowhere to be found.\n\n\"What do I have to do to get someone to turn the air condition on around here?\" I called out angrily and expecting my question to go unanswered, to which it did.\n\nKicking and flailing around like an idiot, I finally freed myself from the covers and stomped off towards the bathroom. Still pissed, sitting on the commode, something I found myself doing more and more lately, I contemplated whether to take a shower or not. There was no need if we were going straight to the beach.\n\n\"Honey, are you awake?\" Katie asked, entering the room.\n\n\"No, I'm sleepwalking. What the hell do you think? And what the hell is wrong with the air conditioner, is it broken?\" I growled.\n\nThe silence that followed was short-lived as Katie began to cry softly. What a fucking asshole you are. Could you be any more of a dick? I thought, hearing her sniffling from the bedroom. The number of angry questions I asked did nothing but cause her to shut down and cry. I knew better than to even raise my voice. She sobbed at commercials like they were true stories. Her crying was the runner-up to her morning sickness and a constant in our life since becoming pregnant. Just sitting there getting more and more pissed that she was still crying, I took a few deep breaths, flushed the commode, and headed toward the bedroom.\n\n\"Baby, I'm sorry. It's not your fault. I'm just being a dick for no reason. I have hands and feet. I know how to get up off my fat ass and turn the air conditioner down.\" The harsh words I said about myself only matters worse.\n\n\"No, you're not. Please don't say that,\" her sobbing showed no signs of slowing down.\n\nI apologized profusely the whole time while stroking her hair, and after ten minutes of holding her, she calmed down. Even though it killed me inside to speak to her this way, it wouldn't be the last time I talked to her that way.\n\n\"Wanna go to the beach?\" She asked happily. It was like the flick of a light switch, her mood now cheerful and giddy.\n\n\"Yup,\" I replied with the same enthusiasm, even though the pounding in my head only seemed to get worse. A recurring occurrence over the last few months.\n\nThe rest of the week was filled with several more blow-ups toward my family and my need to consume as much alcohol I could get my hands on to drown out the headache from the previous night of drinking. Katie began to distance herself far away from me, I was taking everything out on her, and the more I did, the more I was scolded by our parents. My anger issues started to become a huge problem. By the time our vacation was over, I had been cut out of all the family activities and left to my own accord.\n\nThe flight home was no different, and I scolded Katie for leaving me out of everything and not standing by me. Katie only had to deal with me on the first leg of our trip home. Once we stopped in Ft. Lauderdale, she changed seats with our mother, and I had to listen to her tell me that I needed to control my drinking, along with many other things. I couldn't wait to land, and when we did while they were waiting for our checked bags, I took a cab home just to get away for a minute to try and calm down. Apologizing to them would be a good start; I thought, now that the two aspirin's had done their job and my headache was all but gone.\n\nOver dinner, I laid the groundwork for what I thought would become our starting over point, but after several glasses of wine with our father throughout dinner, it was short-lived. Our mother was still upset about my behavior and attitude over vacation. She was not going to let me off that easy.\n\n\"Honey, would you like to go to bed and relax?\" Katie asked. \"It's been a long day, and I think if we just get a good night's sleep in our bed, it will make all the difference.\"\n\n\"Maybe you're right. We all need a good night's sleep, so we're not so judgmental,\" I hissed, getting up from the table.\n\n\"Connor, let's calm down. Nobody is judging you, and your mother is just upset with how you have treated us over the last few days. It happens to the best of us, so please get some rest, and tomorrow we can all just take it easy. How does that sound?\" Our father asked.\n\nThe alcohol was doing the talking for me. \"It sounds to me like somebody needs to get their wife in check,\" I said sarcastically.\n\n\"Connor!\" Our mother hissed at me.\n\n\"Just calling it as I see it,\" I shot back and walking toward my room.\n\nStanding in our bedroom doorway, I could hear her talking to our father about how I was acting and if Katie was safe sleeping in the same room with me. Mom was a little too loud with her questions, and Dad asked her to lower her voice so that I wouldn't hear her. He was mainly trying to defuse the conversation, but I could hear everything and instantly felt like shit. Am I pregnant? I asked myself, standing there with my own emotions like a rollercoaster.\n\n\"Let's take a shower so that we can sleep comfortably,\" Katie said, getting my attention on her and not our mother, who was clearly pissing me off.\n\nThe thought of hurting my wife, my beautiful little sister, had never even crossed my mind. I would never do such a thing, and hearing our mother say those things about me began to hurt. Sliding down the door frame, I began to sob at the thoughts of my family, thinking I would abuse her. I would die before I would consider doing such an act, but I couldn't go back in there right now because all it would do was start a huge fight.\n\n\"Baby, it's ok. I don't feel unsafe with you,\" Katie said, knowing I heard everything our mother said. \"I love you, and I know for a fact that you would never hit me. I don't want to make you angry, but the words you use toward me do hurt. I wish you wouldn't speak to me that way because it is painful,\" Katie said, unsure of the response she was about to get.\n\n\"I'm sorry,\" I said, wiping the tears from my eyes and standing to my feet. \"I would never...,\" I tried to get out the words, but the pain I was feeling began to overwhelm me, and the flood gates opened again just as I crawled into bed and passed out.\n\nThe following week wasn't any better. I was sent home twice from work by my father because of my drinking. I was turning into a raging alcoholic, and it wasn't pretty. Katie did everything she could to help me. She even enabled me, helped me hide the smell of alcohol with mints and small bottles of mouthwash I could take to work. She did any and everything she could do to keep me happy and not mad at her, even though it never worked.\n\nMoving into the guest room that weekend, tired of hearing our mother bitch at me for making Katie cry, put me on a downward spiral. Now locked away in my own room, it was easier to conceal my drinking late into the night. Several times in the early morning hours, I found myself drunk and laying outside Katie's door, listening to her sob. She began to leave her door open to hear if I was ok after finding me passed out on the floor in my own vomit.\n\nTwo days after being put on personal leave from my job and missing Katie's six-month ultrasound appointment, my parents and Katie forced me into rehab. I was drinking every day and all day. It only made me feel more alienated. Feeling everyone had abandoned me, I checked myself out the same day and set out in search of something to cure this headache hangover. I stopped at the first liquor store, grabbed the largest bottle, the twenty dollars I had in my pocket could buy and headed for cowardly peace.\n\nThe more I drank, the more upset I became. My long walk wasn't doing anything to help my anxiety or anger toward them, and I questioned everything. Do they even love me? Do they even care if I die? With the realization that I just didn't care anymore, I picked up my walking pace.\n\nFinally, with the base of the Ravenel Bridge under my feet and my bottle of liquor almost gone. I started the trek up the long bridge. The late August sun was relentless, and by the time I reached the top, sweaty and gasping for air, I was too tired to climb over the six-foot fence. All my strength was used on the walk-up. I felt confused, dizzy, nauseous, and my head was killing me.\n\n\"Hey, man, are you ok?\" a passerby asked, just before I blacked out.\n\n**\n\nMy dry mouth was the first thing I noticed, followed by the constant beeping. The amount of effort it took to get my eyes open was exhausting, but I managed to do it after two failed attempts. Katie laid curled up, asleep in the bed next to me. While our parents didn't have the same luxury Katie had, they did the second-best thing, using each other to keep themselves upright on the small couch and currently asleep.\n\nRealizing I was alive gave me a short sense of relief. What a dumb idea that was, I thought. Darting my eyes around the room and seeing the countless amount of machines hooked to me all but wiped that away.\n\n\"Ugg,\" I moaned, trying and failing to move even the slightest bit.\n\n\"It's me, baby, Katie. Everything is ok, but I need to go and get the doctor real quick. I'll be right back. I love you so much,\" she said and hurried out of the room, only stopping to tell our parents, \"He's awake.\"\n\n\"Hey buddy, how are you feeling?\" My father asked, wrapping his hands around mine. By the tired look on his face, I imagined he had done a lot of that during my hospital stay.\n\nBiting down on the soft tube that protruded from my dry, cracked lips, I knew my words wouldn't come, so I just nodded my head up and down. How I really felt was as if someone was sitting on my head. The pressure was immense, but I had very little pain. The vast amount of noisy machines hooked to me probably had something to do with that.\n\n\"Hi, Connor, it's mom...,\" her voice trailed off as the doctor entered the room.\n\n\"Hello Connor, my name is Doctor Mullens. I'm here to check on your progress and see how you're feeling now that you're awake. I'll go over everything that has happened, but first, I need to ask you a series of yes or no questions. All I need you to do is blink once for yes and twice for no. Do you think you can do that?\"\n\nWith a single blink, he started the questioning. Most of the questions required a single blink. \"Are you in South Carolina? Are you married? Is your wife in the room? Are your parents in the room? Do you know long you've been here? Are you in pain?\"\n\n\"Now, I need you to do a few things for me. Can you wiggle your toes? Good. Now your fingers, perfect. Does it hurt when I press here?\" Two blinks. \"How about here?\" Another two blinks.\n\n\"Perfect, let's see that head of yours.\"\n\nThe doctor spent the next few minutes unwrapping and rewrapping the bandage around my head after giving it a thorough examination.\n\n\"Everything looks to be healing nicely, and I'll get a nurse to come in after I leave to remove the tube from your mouth. It'll take a few weeks to get your entire vocal range back, but it should come back without any problems. Just no yelling until then, and you should be fine. I'll have the nurse go over everything with you when she removes it, and as long as the swelling in your brain stays down, we should have you out of here in the next week or so.\"\n\nThe tears of joy that streamed over Katie's round cheeks as she smiled made me feel slightly better, but I still didn't know what happened.\n\n\"So, Connor, as I said, I'm Dr. Mullens, and I'm the neurosurgeon the operated on your brain after the fall from your heatstroke,\"\n\nHeatstroke, I thought for just a brief second.\n\n\"You hit your head pretty hard on a raised concrete anchor for the bridge. Other than the few stitches and a headache, you would've been fine and released in a few days,\" Dr. Mullens said.\n\nA few days, what the hell. How long have I been here? The thoughts came and went.\n\n\"When a patient hits their head that hard, we like to do an MRI to make sure there's no swelling on the brain. When we did that, we found some moderate swelling, but our main concern was the tumor. That's the scary part.\"\n\nScanning the faces of my parents and Katie, I didn't see worry or panic through the tears. That had to be a good sign.\n\n\"The good part is we were able to remove it, and after we ran some tests in the lab. We found it to be a Grade I Meningioma tumor. Grade I Meningioma tumors are low grade tumors. This means the tumor cells grow slowly and invade nearby normal tissue. Like yours, and many other cases, they form over years before being diagnosed. After talking to your wife, she said you have been getting some intense headaches, behavior, and personality changes. The tumor was the cause of those, but now that we removed it, those will be a thing of the past. I'm certain you will have plenty of questions, and I'll be sure to answer those, but for now, get some rest, and I'll be by to check on you tomorrow morning.\"\n\n\"Thank you, doctor,\" Katie said, followed by our parents repeating the same thing.\n\nThe looks on their faces told me everything I needed to know. How sorry they were, even though they didn't have to, I was the one being a dick. I felt terrible for them, and I wanted to tell them it was ok, but the only thing I could manage to do was cry. Each tear that rolled down my face only seemed to make matters worse. The moment was too tremendous, and Katie tear covered face became pale. She looked like she was going to pass out. I began to dart my eyes back and forth between our father and her to get his attention. He just made to her as her legs went limp, and he lowered Katie to the couch he was sleeping on. The machines began to beep, and within seconds, nurses swarmed me.\n\nWhat seemed like just minutes was actually two hours as I woke up from whatever medicine the nurse gave to calm me down. Katie was curled up next to me, asleep, as was our mother on the couch. I watched our father pace back and forth in front of the window he was aimlessly staring out of. Now that he thought everyone was asleep, the emotions overtook him as I watched him repeatedly wipe the tears in his eyes from the reflection on the inside window.\n\nI didn't sleep much that night and neither did Katie nor our parents from all the nurses coming in and out of the room, but that was ok. I had my family back, even though they looked exhausted. Our father's face looked less and less worrisome each time he looked into my eyes. The toll this took on him was something I would never wish on anyone. The regret on his face from all the wasted years we didn't spend together was what hurt me most. He thought he lost his only son, and the time he didn't spend with me was coming out. We never talked about the small moment we shared that night. It was painful for both of us, but our father/son bond would never be broken from that day forward.\n\n\"I love you too, so much,\" Katie said, circling my lips with an ice chip as I mouthed the words I love you after the nurse removed the tube from my mouth.\n\nThe following morning, I was more alert and able to eat a few spoonfuls of ice cream. It was glorious. My voice was faint, but if you got close enough, you could hear me. I was under strict instructions to not whisper and to try to speak normally. It would take a few days before it would get better, but I was assured it would come back. Each day I became a little stronger, and by the sixth day, I was able to walk to the bathroom by myself. Katie never left the hospital the entire time I was there. Which by the time I left was just over a month.\n\nThe first week, I was put into an induced coma to help the moderate brain swelling decrease so that the surgeon could perform surgery on my brain. After the surgery was completed, I was again placed in an induced coma to keep my brain activity at a minimum to help reduce swelling. When I awoke to the dry mouth, I had already been in the hospital for seventeen days. Now seven months pregnant, Katie and our parents walked beside the wheelchair as the nurse rolled me towards the hospital's front door. I was more than ready to go home and sleep in my own bed.\n\n\"Remember no strenuous activities, no driving, and take it easy. Ok?\" The nurse said to me as I buckled my seatbelt.\n\n\"Yup,\" I replied with a smile.\n\nWith plenty of medicine to keep my pain at a tolerable level, sleep seemed to be my biggest problem. Not that I didn't get enough of it; if sleeping was an Olympic sport, I was sure to win gold. I was only managing to stay awake a total of nine hours a day if I was lucky.\n\nIt would pass just like my lack of energy, and within a few weeks, the doctor had released me from most limitations, including sex. Still, I couldn't drive, ride a bicycle, climb ladders or compete in any hand-to-hand combat sports. Basically, anything that had a high chance of me hitting my head. The doctor made sure I understood not to hit my head.\n\nEven though I was released to go back to work and all had been forgiven, I still didn't want to go. I wanted to spend time with Katie, and being eight months along in her pregnancy, she was not as active as she had been. We had changed roles, and she was the one napping throughout the day. I still found myself napping with her, even though I didn't need to.\n\n*\n\nLeaving her now twice a week appointment, an extra precaution, since she had not gained the weight back she lost while I was in the hospital. We hit the drive-thru at her favorite sandwich shop to get a mustard and pickle sandwich with extra pickles on the side, a condiment we both equally hated before she was expecting, and a large orange juice. She had some of the craziest cravings, and the things she wanted to smell were even worse. The most bizarre thing was the smell of an ashtray. I would never understand it, and neither would our parents, but I would let her steal a whiff when nobody was looking when we ate at a favorite local seafood restaurant and bar.\n\n\"What?\" She mumbled with a mouthful of pickles sitting at the kitchen table.\n\n\"I didn't say anything, but you better brush your teeth before you try and kiss me,\" I smiled as she leaned over and tried to kiss me.\n\n\"You don't want to kiss your beautiful wife's lips with a mouth full of pickles?\" She giggled, having now swallowed them.\n\n\"Hell no, but if you hurry up and finish, I'll kiss your other lips.\"\n\nHer eyes went wide, and she acted as if she was trying to shove the remainder of her sandwich into her small mouth. This was my first sober attempt in months to have sex with her. It even felt awkward to say the words, but I was determined to make it happen.\n\nHaving stripped from her clothing and brushed her teeth, she crawled into bed and laid back on the couple of pillows I had placed on top of each other, so she didn't have to lay flat on her back. Her belly had significantly grown over the last two months, and I found myself not knowing what to do.\n\n\"It's ok, baby. You're not going to hurt me,\" she said, seeing the worried look on my face.\n\nNodding my head, I crawled between her legs.\n\n\"Sorry if I missed any spots,\" she said.\n\n\"Huh.\"\n\n\"Shaving. Sorry if I missed any spots shaving,\" she replied.\n\nIt was something I hadn't even noticed--the large amount of hair just above the lips of her sex.\n\n\"When did we get a cat?\" I joked.\n\n\"Haha, very funny,\" she giggled.\n\nWith a flick of my tongue on her swollen clit, her giggles were replaced by a long sensual moan. I had missed the taste of my little sister, and I was going to take my time lapping up her juices. The more I drug my tongue slowly through the folds of her sex, the louder her moaning became. Just when I began to break out my best moves, her orgasm hit her hard and fast.",
        "\"Fuuuuuuuuuuuck,\" she growled through her teeth while I continued to drink in the juices that gushed from her pussy.\n\nOnly the sounds of short, quiet pants filled the room.\n\n\"Baby, are you awake?\" I asked, still softly licking her sex and unable to see her face with her pregnant belly in the way.\n\n\"Yes, baby, I'm just trying to slow my heart rate down from a million beats a minute. Oh my god, my pussy is so sensitive right now.\"\n\nTaking the hint, I stopped and sat up, so she could see my face.\n\nSmacking the bed next to her, \"it's your turn,\" she said, raising her eyebrows up and down quickly.\n\nI knew my fate would most likely result in the same thing happening to me that had happened to her. Even without placing her soft, full lips onto the head of my cock, my balls tightened as she put a long strip of saliva on the underside of my shaft.\n\n\"Are you going to make it?\" She asked, flicking her tongue on the slit of my cock.\n\n\"Probably not,\" I shot back, my own breathing short and shallow.\n\nPushing a large glob of spit through her lips and onto the head of my shaft, she used her hand to distribute it evenly around my cock.\n\n\"I need to feel you in me,\" she said, pushing my knees down so that she could straddle me.\n\n\"You're so beautiful,\" I said, watching her start to climb onto me.\n\n\"Hold that thought, I have to go pee,\" she smiled before sliding off the bed.\n\nHer sudden need to pee was the only thing that kept me from instantly cumming when she lowered herself onto my hard cock. The two-month hiatus only made her pussy even tighter. Each time she lowered her sex down, engulfing my cock, my stomach muscles would tense up and pull me upwards. The tinted blue veins that spidered across her breasts were now more visible than ever as her massive milk jugs bounced and jiggled the faster she bounced on my cock. It was more than I could take, and I began to shoot thick ropes of cum into my pregnant little sister.\n\n\"Oh god, I'm cumming,\" she moaned, feeling my cum coat the walls of her oversensitive sex.\n\nMy balls continued to pump cum into her wanting pussy, until there was nothing left. With her not being able to collapse onto me, I gently lowered her down to bed and cuddled up behind her.\n\n\"I missed that so much,\" she sighed happily.\n\n\"Me too,\" I shot back. \"Sorry, I didn't last that long.\"\n\n\"Hell, I didn't either, so I have no room to talk. I came twice in that short time, but do you know what would be so good right now?\" She asked.\n\n\"A nap?\" I replied.\n\n\"You got it, babe,\" she giggled, and within thirty seconds, we were both fast asleep.\n\n*\n\n\"Dinner's ready if you two would like to eat,\" our mother called out from the other side of the door.\n\n\"Yeah, we'll be right out,\" I replied before crawling out of bed in search of my shorts and something she could throw on.\n\nWithin a couple of minutes, we headed out the door, and down the hallway.\n\nLooking into the completed baby room as we stopped in the doorway on our way to the living room didn't have the same saddening effect now as it did on my first day home from the hospital. Seeing it completed brought me to tears the second I laid eyes on it. Katie had spent countless hours painting and decorating it while I was too busy to be bothered with, getting drunk. Yes, it wasn't my doings, but it still hurt just the same.\n\nThe gloss white wainscoting that came up four feet off the floor went all the way around the room. Katie painted the remainder of the room in a rhythmic blue. She said it was the color of \"little Connor's eyes\" from a recurring dream she had. The \"little Connor\" name was now utilized anytime Katie needed something, \"Is little Connor thirsty? Is little Connor hungry?\" It didn't matter what it was; Katie and our parents used the term often, and after a short display of playful irritation, I joined the fun. The number of fluffy bears seen around the room was also perfect and went together nicely with the crib sheet that had little bears printed all over them. I was proud of her and told her so the night she showed me the room.\n\n\"You two coming or what?\" Our father called out from the living room.\n\n\"Dad, you do know I'm almost nine months pregnant, right? I don't waddle that fast anymore,\" she laughed.\n\nThe word \"Dad\" didn't sound the same anymore coming from her mouth. It sounded playful, almost unnatural. She had converted herself entirely into the daughter-in-law.\n\nFinding our usual seats on the couch, we settled in behind our TV trays since Katie's pregnant belly didn't fit under the dining table anymore and dug in. The Monday night football game was a thriller. With no defense from either team, it was high-scoring and full of exciting plays. At half-time, the score was tied at twenty-eight, and after a small sexual wager with Katie, the game became more intense. Back and forth, they went one touchdown after another, and with sixty seconds left on the game clock, the score was tied again at forty-two.\n\n\"Your team sucks, and since my team has the ball, I'm going to win,\" Katie laughed, sticking her tongue out at me.\n\n\"You better rest that tongue of yours. You're going to need it later,\" I replied.\n\n\"Jesus, Connor,\" our mother replied.\n\n\"What she started it,\" I shot back.\n\n\"What, are y'all, brother and sister, now?\" My father chuckled.\n\n\"HA,\" Katie blurted out.\n\n\"Well, we will be when I divorce her ass,\" I said, never missing a beat.\n\n\"Connor,\" our mother exclaimed. \"That's not very nice. Take that back,\" she giggled.\n\n\"It's ok, mom, because if he keeps messing with me, I'll be a widow and an only child.\"\n\n\"Ohhhhhhh, she told him,\" our father said, still laughing his ass off.\n\n\"See, Connor, your own parents like me better than you. You better leave me alone,\" she continued to laugh with our father.\n\n\"You guys are so mean,\" our mother said playfully.\n\n\"Well, you better enjoy all this attention you're getting because when that baby is born, your not so little ass will be put on the back burner, and you'll be left with nothing but me. Now be quiet; they're coming out of timeout,\" I snickered.\n\n\"He's right, ya know,\" our mother's mischievous smile ended the battle between us.\n\n\"Fumble! Get the ball,\" I yelled at the TV.\n\n\"You suck,\" Katie replied, seeing my team come out of the pile with the ball at the ten-yard line.\n\n\"Nope, but you will be later,\" I shot back just as the ball went through the uprights.\n\nHaving watched me dance around the living room and sing, \"I am the champion, my friends, and I'll keep on fighting till the end.\" Katie excused herself by saying, \"I have to go and stretch because your son wants to do things to me Jesus wouldn't approve of,\" she rolled her eyes in an attempt to act as she didn't like what was going to happen to her.\n\nAfter putting our plates in the sink, I said good night to our parents and made my way down the hall and into our room. Katie was already in the shower, and with the large walk-through shower built for two people, I joined her.\n\n\"Need me to wash your back?\" I asked.\n\n\"Actually, would you help me with something else?\"\n\n\"Of course,\" I replied.\n\n\"Will you please shave my pussy? It's so itchy.\"\n\n\"I can try, no promises,\" I smiled.\n\n\"Fine by me,\" she said.\n\nThe next thirty minutes was spent carefully shaving her. By the time I was done, the water had almost overflowed the basin from the giant ball of hair covering the drain.\n\n\"Thank you, baby, it feels so much better,\" she said, rinsing the shaving cream from the folds of her pussy before turning her water off and drying off.\n\n\"You're welcome,\" I said, starting the process of washing my body.\n\nFifteen minutes later, I crawled into bed next to my sleeping sister. I didn't blame her for falling asleep, knowing she was tired. I wouldn't want to carry around that basketball for nine months in my stomach. The soft sounds of her breathing were relaxing, and before I knew it, I was out.\n\nDragging my eyelids apart wasn't hard once I felt the walls of her throat squeezing around my shaft--what a lovely way to be woken up at three in the morning. At that particular second, I couldn't think of a better way, and it was hard to with my cock being strangled by her throat muscles.\n\n\"Baby, will you fuck my bottom,\" she whispered after pulling me from the confines of her mouth.\n\n\"Yes,\" I whispered back, watching her crawl over a pillow that would support her belly while she was on her hands and knees.\n\nWe hadn't done anal in over six months, and it was something I missed. Katie was the only girl that I knew in my short inexperienced sex life that could orgasm from anal, and from everything she told me, most girls couldn't even do anal, let alone get off. Not wasting any of the copious amounts of spit that still clung to my shaft, I pressed the head of my cock onto her little rosebud.\n\n\"Please, baby, don't tease me. I need you so bad.\"\n\nA loud groan escaped her as the head of my cock pushed past the tight ring in her ass.\n\n\"Fuck me, baby. You won't hurt the baby in my ass,\" she said, almost begging.\n\nMy ability to hold off and not orgasm too soon had always been average, but in her ass, it was downright poor.\n\n\"Harder baby, fuck me harder. I want to feel your balls slam into my pussy,\" she pleaded.\n\nThe sound of her enormous breasts being slapped together, almost in unison as my balls bounced off her pussy, filled the room each time I slammed into her bottom.\n\n\"Oh fuck, yeees, she hissed. \"Fuck your baby sister's ass,\" she cried out just as the pleasure signals of her orgasm pulsed throughout her body.\n\nGrunting and groaning like a caveman when the muscles in her ass began to siphoned my cum from the depths of my scrotum, I pushed deep into her bottom as my seed roared up my shaft. Thick, long ropes of cum launched from my cock into her bowels. Her own orgasm matched mine as a large volume of juices doused her inner thighs, both unstable in our current positions and drawing in deep breaths.\n\n\"Fuck, I'm dizzy,\" I said, grabbing hold of her wide hips to keep my balance.\n\n\"Are you ok,\" she asked, still trying to catch her breath but calmer than usual.\n\n\"Yeah, it's just; I haven't cum that hard in a while,\" I replied.\n\n\"Me either. Are you able to pull out, or do you need a few more minutes?\" She asked. \"I don't want you falling and hitting your head.\"\n\n\"I'm good, I think,\" I replied, pulling my cock out of her tight ass.\n\n\"Baby, don't panic, everything is ok, but I need you to get me a towel and my sweatpants. After that, go wake up mom and tell her my water broke.\"\n\n\"Your water, bro....,\" my voice trailed off before I did exactly what she told me not to do and panicked. \"Holy shit, your water broke. That means the baby is coming. Do I need to call 911 or an ambulance? I need to get the hospital bag; shit, where was it at again? Never mind, I'll find it,\" I said, running towards the door. \"Shit, I need pants....\"\n\n\"Connor, please calm down and breathe,\" the soothing words of Katie's stopped me in my tracks. \"The baby is not coming right this second, but please just do as I asked. Everything will be ok, I promise.\"\n\nI tried to be calm, but what new father could do that. I only made it halfway up the stairs before I yelled out, \"MOM, DAD, KATIE'S WATER BROKE,\" and took off back down the stairs.\n\nThe only time I had ever seen our mother so calm under a stressful situation was when she woke me up next to my little sister naked. Maybe not stressful for her at the time, but definitely for me. With my father running down the stairs in a shirt and his briefs only, I didn't feel so bad. He was just as stressed as I was, if not more. Katie, the one who was in labor and mom, were directing us around like two toddlers. To be fair, we needed it done that way.\n\nOver the last couple of months, I hadn't felt the need to drive, but at this very moment, I was like a teenager who could finally drive themselves. The urge was almost killing me, even though our father was doing a fantastic job driving. It's what men are good at, driving extremely fast without their passengers realizing.\n\n\"We're almost there. Is everyone still ok?\" Our father asked.\n\n\"Yup, all good back here,\" our mother replied.\n\n\"Babe, are you sure you're ok,\" I asked, turning around from the front seat, having been kicked out of the backseat before we even left the house.\n\n\"Yes, baby, I'm fiiine,\" Katie groaned the last part.\n\n\"Faster, dad, we don't have much time,\" I said, panicking, hearing my sister in pain.\n\n\"Tom, don't you drive this car any faster, mister.\"\n\n\"Yeah, Tom,\" Katie giggled, copying our mother's tone.\n\n\"You have to make a left up here, dad,\" I said.\n\n\"Yeah, son, I know,\" he chuckled.\n\nChasing after my father through the sliding doors, \"My daughter is...,\" he paused before blurting out, \"daughter-in-law, his wife,\" he said, \"is having a baby,\" and shaking his head.\n\n'Is the baby coming out right now?\" The nurse asked, running by pushing a wheelchair, not waiting for his response.\n\n\"I don't think so,\" I shot back, now chasing after her towards the car.\n\n\"Do you know how far apart your contractions are?\" The nurse asked Katie upon opening the door.\n\n\"About three minutes,\" Katie replied. \"I think he's coming,\" she groaned, gritting her teeth.\n\n\"We have time. Let's get you in this chair so that we can get you to a room.\" the nurse replied, helping Katie from the car and into the chair with our mother's help.\n\n\"I need you to fill this out while we get her to a room,\" another nurse said, handing me a clipboard with a stack of papers.\n\n\"It's fine, Connor. I'll take care of it. You go with her,\" my mother said, seeing my blank stare.\n\nHaving watched numerous movies where a woman gives birth to a child, I can guarantee you it's nothing like the movies. Within five minutes, the baby's head was out, and three minutes later, little Connor was born. I didn't even have time even to react; everything was happening so fast. One minute we were having sex, and the next, our mother was coming in to see little Connor, her firstborn grandson.\n\n\"Look, Tom. Isn't he so beautiful, and look at those blue eyes? Connor, do you know what the final numbers were?\" Our mother asked.\n\n\"7lbs 3oz and sixteen and a half inches long,\" Katie replied for me, seeing me shrug my shoulders.\n\n\"All I know is he has all his fingers, toes, and of course, he's healthy,\" I said.\n\n\"That's all that matters, son, is that he's healthy,\" our father replied.\n\nThe two days spent at the hospital sucked. The couch our parents had spent so much time sleeping on, I found out first hand just how much it sucked. I felt sorry for them, knowing they spent almost a month on that \"piece of shit\" were the words I used for the so-called couch. I told Katie, I bet they put them in there to keep people from staying overnight.\n\nIt wasn't all bad; Dr. Mullens stopped by to see the baby and see how I was doing, and even a few of the other nurses who cared for me during my extended stay. I was thrilled to see them and leave when the time came.\n\nAfter Katie received all the aftercare instructions that women needed to know after giving birth and a few things to get her by until we made it to the pharmacy, we signed the release forms. With little Connor strapped into his car seat, we headed for the car.\n\nThe drive home took way longer than it should have. It was the first time I found myself behind the wheel, and even though Dr. Mullens had released me to drive an added bonus from his visit, I found myself extremely nervous. I didn't want to mess up and hurt our son my first time behind the wheel again. The thoughts of getting in a wreck were more than I could take, and I began to shake.\n\n\"Are you ok, son?\" My father asked, placing his hand atop of mine on the steering wheel.\n\n\"No,\" I whispered. \"I can't do this. Will you please drive us home?\" I asked him in defeat.\n\n\"Son, it's ok to be nervous. You've been through a lot. Don't let this bother you, and of course, I will,\" he replied, squeezing my hand before getting out of the passenger seat.\n\nWhether he did it for me or he was just as nervous, I'll never know, but he drove ten miles under the speed limit all the way home. The embarrassment was more than I wanted to face now, and I kept my eyes forward, fearing the disappointment I might see on Katie's face.\n\nIt wasn't there, and she made sure to tell me, so once little Connor was asleep in his crib. \"I'm so proud of you. You showed tremendous strength, letting dad drive home. It's what great fathers do. They do whatever is necessary to get the job done and to keep their children safe. You're going to be a great dad,\" her words put me at ease, and instantly I felt better.\n\nThe following two months flew by, and before I knew it, I was getting ready for my first day back in the office in almost six months. I was mentally and physically in a better place. The scar from my surgery was no longer visible, and my confidence was at an all-time high. Driving in separate cars, I followed my father to work for my half-day at the office. It was the only way he would agree to me coming back. I could only work half the day until my doctor fully released me at my one-year checkup.\n\nAfter many welcome backs, I settled in behind my desk and smiled. Seeing nothing had been touched or moved, a strange mix of emotions washed over me. I didn't know if it was done to make me feel a certain way or the fact that it would be something my father had at work that would remind him of me if the unthinkable had happened. Either way, I was glad to be back.\n\nThe half-day was just what I needed, as I found myself getting distracted by the background photo on my phone that I had taken of Katie with little Connor asleep on her chest. With a quick stop by my father's office to say bye, I rushed out the door to my car and headed for home.\n\n\"Daddy's home. Can you say, Dada?\" Katie asked our son when I walked into the living room.\n\n\"Hi, buddy. Can you say dada, daaada?\" I smiled. \"It's ok, maybe tomorrow, big guy,\" I said, taking him into my arms and jabbering to him.\n\n\"Are you going to play with him all day, or do you want to lay him down for his nap and come play with me?\" Katie asked.\n\n\"Naptime, buddy. Daddy has some important business to tend to,\" I said, smiling and taking him to his room.\n\nI was amazed at Katie's body. In just two short months, she had all but lost her \"pooch,\" the word she referenced to her lower abdomen each time she came home sweaty from the local gym. What really mind-boggled me was the size of her monstrous breasts. Every time I saw them, they seemed to get even more significant.\n\nAnother thing she didn't lack in that department was her milk supply. It never ran out. She was pumping before she fed Connor, after she fed him, even getting up in the middle of the night to pump. Any time she had a free moment, she was pumping. The garage now contained two refrigerators, one for extra drinks and more oversized items and one for just breast milk. She had enough to feed five kids. The only downside to producing that much milk was she wore a bra constantly to keep them from leaking everywhere.\n\n\"Close your mouth; you'll look smarter,\" she giggled as she watched me gawk at her.\n\n\"I can't help it. If I didn't have such a beautiful wife, I wouldn't have that problem,\" I said.\n\n\"Well, let's not bring up that old bag, and you come over here and fuck your hot little sister,\" she replied with a sinister grin.\n\n\"Good idea, she doesn't put out anymore anyway,\" I shot back, crawling up between her legs with a full erection and shoving my tongue right into her sex.\n\n\"Oooh fuck, that feels good,\" she moaned, running her fingers through my hair.\n\nI didn't want to tease her and wasted no time sucking her swollen clit into my mouth before biting down.\n\n\"Baby, I'm going to cum. Please slow down,\" she begged.",
        "It only encouraged me to lick her wet pussy with my tongue even more. Her juices flowed into my mouth as I continued my assault. Trying and failing to find her harden nipples, I tugged until the strap broke that kept the flap securely in place over her colossal breasts until she was ready to nurse. Droplets of breast milk covered my back each time I pulled and squeezed at her rubbery nubs. My unbreakable cock ached as it mashed into the mattress below me. The louder her moans became, the harder I sucked at her button until her powerful orgasm disconnected her from the world, and instantly her body went limp.\n\nThe milk from her breast streamed off her large mounds in many different directions as I pointed the ballooning head of my cock at her entrance. I never questioned her or asked Google whether her pussy would feel the same. But, the feeling of my little sister's sweet pussy never felt better as the velvet walls of her sex clung to my shaft when I pushed into her. The steady rhythm of me pumping my member in and out of Katie lulled her back into reality, wide-eyed and seemingly hungrier for my cock than she's ever been.\n\n\"Oh, you motherfucker,\" her growling moan vibrated through her throat. \"You know just how to fuck me.\"\n\nMy pace quicken until I was slamming my pubic bone harder and harder into the lips of her sex.\n\n\"Oh, daddy fuck me,\" made her breast milk stream into the air from the extreme pressure I was now placing on her milk jugs.\n\nMy sudden stop put a worried expression on her face. Not because it bothered me, but the jolt it sent through my cock was almost more than I could handle.\n\n\"Do you not like it when I call you daddy?\" She asked apprehensively.\n\n\"No, baby. I mean, no, I don't mind it at all. You can call me that anytime you want. It just almost made me cum instantly,\" I replied.\n\n\"Oh, well, do I have to beg you to start fucking me again? Is that what you want, daddy, is for me to beg for it?\" She asked softly. \"Daddy, will you pleeeeease fuck my tight little pussy until you can't handle it anymore and shoot your hot cum into my unprotected pussy?\" She begged in her little girl voice.\n\nI never stood a chance or even moved. Just the way she begged for it sent my cum flying into her unprotected womb. Volley after volley rocketed from the slit in my cock, splashing off her cervix and flooding the floor of her pussy. My left and right eyes twitched several times before they lost the battle and shut tightly. Jerking and grunting were the longest-lasting side effects. I suppose you could call them that after such an incredible orgasm. They only lasted a few minutes, and I fell next to her on the bed that was drenched in breast milk.\n\n\"You cheated,\" I chuckled, having since caught my breath.\n\n\"Whatever do you mean..., daddy? I was just trying to be a team player,\" she pouted playfully.\n\n\"It's ok. I deserved it since I didn't give you a chance to enjoy me going down on you,\" I replied.\n\n\"You're damn right; you didn't,\" she shot back. \"You played dirty, and now I have your number. We are officially on an even playing field again.\"\n\n\"Again? What the hell are you talking about?\" I asked.\n\n\"Don't play that bullshit with me,\" she giggled. \"You've been fucking me up since you first made me pass out. You knew just what to do to me, and what made it worse was you could do it at will. So I don't want to hear it, mister, and as I said, we are officially on an even playing field again,\" she laughed.\n\nEven though I didn't know I had such power, I played along and let her enjoy her victory.\n\n\"So I guess we're having another baby?\" I asked with a grin.\n\n\"Yup, because my appointment to get a birth control device put into my arm was this upcoming Friday, but now that I could become pregnant again, they won't put it in until after my next period.\"\n\n\"I can't believe you wouldn't tell me that,\" I acted as if I were upset with her.\n\n\"Too late now, sucka,\" she smiled, rolling on top of me, spraying me in the face with her breast milk before jumping off and running into the bathroom.\n\n\"As long as we don't have more than one, they'll each have a boob to drink from,\" I replied, chasing after her into the shower to rinse all the breast milk from my hair and off my body.\n\n*\n\n\"Everything ok?\" our mother asked as we walked into the kitchen. \"Sounded like someone was getting murdered in there,\" she laughed at her comment.\n\n\"Yes, everyone is ok, but your daughter is probably pregnant again. She can't seem to keep her legs closed,\" I shot back, taking a jab at my sister.\n\n\"Well, if your son had any control and weren't always trying to put his dick into the first girl that opened her legs to him, we wouldn't have this problem. Isn't that right, daddy?\" she moaned the last part just loud enough for our mother to hear.\n\n\"Ahhh, the magic word. Yeah, I'm going to have to agree with Connor on this one. Any guy, really, but especially a new father, if you call them daddy, they will cum instantly. It's like they can't control it, and I'm sure you did it at the exact time you knew he couldn't handle it,\" our mother said with a smile.\n\n\"Actually, no, he did control it, I'll have to give him props on that, but the second I begged him, daddy, please fuck me,\" Katie moaned the last part. \"He lost it,\" she began to burst out laughing at how red I was becoming, listening to her speak that way in front of our mother. Not only that, but I was starting to get hard again.\n\n\"What's so funny, guys?\" Our father asked, walking into the kitchen from work.\n\n\"Oh, god, dad, please don't ask,\" I pleaded with him.\n\n\"He doesn't have to. Little missy over there used the \"Daddy\" word on your son and made him cum inside her, so she's probably going to wind up pregnant again. I was supposed to take her this Friday to get her implant, but that's not happening now. They won't put it in if you have a possibility of becoming pregnant. So she either has to wait and have her period or go and get a pill that will stop her from becoming pregnant. Both of which I know she won't do. So congratulations, you're going to have another grandbaby,\" she made an attempt at rolling her eyes in irritation, but her huge smile gave her away.\n\n\"Yeah, son, it's not your fault. It's our kryptonite,\" he chuckled.\n\n*****\n\nThe song sang by Kenny Chesney, \"Don't Blink,\" playing over the Bluetooth speaker, were the most accurate words as a new parent I had ever heard. Sitting on the white pearly sand underneath the vast blue sky and only being protected from the sun by a six-foot umbrella. I watched Katie play with little Connor, now seven months pregnant with baby Katelynn during our annual family vacation. This year was just a quick trip to the Florida Keys for five days with everything going on back home.\n\nWith another baby on the way, and after many long nights talking with our parents, we bought the lot across from our parent's house and started to build our dream home. They pleaded with us to stay with them, but understood that we wanted a place of our own. With eight being the number of kids Katie wanted, we finally settled on six, and our house was being constructed accordingly.\n\nEven though I completely sucked in high school, industrial interior design was something I was great at. I spent the last five months designing from scratch a new proposal for a recently acquired company and submitted it just before we left for our yearly family vacation. I wouldn't find out the results of all that hard work until we got back, but I was very optimistic after a few of my senior coworkers were thrilled with the finished result.\n\n\"Whatcha thinking about, babe?\" Katie asked.\n\n\"What I swore I never would when I wasn't there,\" I replied.\n\n\"Work? Ewwww, but I understand. You put in a lot of time and effort on that project,\" she said.\n\n\"Yeah, I'm just nervous,\" I replied.\n\n\"Well, little Connor needs to be put down for his nap. Can you think of anything that I might be able to do to take that off your mind?\" She asked.\n\nWith my fist under my chin and looking off in the distance in deep thought, I said, \"Not really,\" and smiled, which in turn gained me a playful slap on the knee.\n\nOur sex life was better than ever since this pregnancy only had a handful of days, at the beginning, where her morning sickness was an issue. After that, it wasn't anywhere to be found, and our active sex life resumed. Even though her curvy hips were a bit wider and her massive breasts hung slightly lower, something I would never tell her, she still looked hot and kept her body in shape. I never missed the opportunity to take advantage of her strong urge to have sex while pregnant, and now, with her full lips wrapped around the base of my shaft, the only urge I fought was to not cum too fast.\n\n\"Are you all better, daddy?\" Katie asked in her sweet innocent voice after swallowing my entire load. Another one I failed to control.\n\n\"Yup, couldn't be any better if I wanted to,\" I replied, smiling.\n\nI spent the next thirty minutes lapping at my little sister's pussy until she couldn't take it anymore and then fucked her unconscious. Something she wanted after using the code word \"Daddy\" to let me know how intense she wanted it.\n\n**\n\nThe following four years were like a blur. My proposal was accepted, and before I knew it, I saw it come to fruition. The pictures sent to me of the completed project came four months after Morgan, our third child, was born, another boy, and they took me back to much quieter days as I scanned the photos.\n\nI had successfully submitted a number of projects that were accepted by then and was busy on another when the email popped up. I knew it took time for the construction to be completed and even longer before headquarters would receive the professional photos taken for our company profile, but they were here. Seeing them brought a smile to my face; here I was, a dumb kid telling a multi-million dollar company how to design their interior offices. If they only knew, I thought for a brief second before hearing little Connor yelling, \"Daddy, Daddy, where are you at? I found a humongous frog on the front porch. Hurry up and come see. You're not going to believe your eyes when you see it.\"\n\nI had been working my tail off and time only seem to go by faster. I kept my work/life balance under control for the most part, and when I did become more work than life, Katie was the first to let me know it. How she kept up with everything that she did was beyond me, and I was grateful to call her my wife. We never missed a family vacation or any extra time we could all spend together. I didn't think life could get any better, especially with a couple of new hires starting next week. What it meant for the three of us guys working our asses off was, we would have someone else learning the ropes and more than happy to make copies and go get lunch, trying to brown-nose their way into our good graces.\n\n***\n\n\"Connor, Katie, is that you?\" A man's voice called out to us.\n\nWe had lived in Charleston for almost five years now, and someone calling our name out didn't affect us anymore as we sat side by side watching little Connor and Katelyn play at a downtown park just down the street from my office. Christmas parties, company functions were a part of life now, and we had even gained a few friends. We still kept most people at arm's length, but it was a little more challenging with the people I worked closely with every day. Turning my head and seeing John, my best friend, was a total shock.\n\n\"Holy shit, dude. It's great to see you. How the hell have you been?\" I exclaimed, jumping up to give him a big man hug.\n\n\"I've been great, man. What about you? Shit, I'm sorry, honey, this is the friend I always talk about, Connor,\" John said, cutting himself off. \"Anyway, this is my...,\"\n\n\"Daddy, mommy, look at what I found,\" little Conner said, cutting John off and being chased by his little sister, saying, \"look, look.\" The thoughts of him seeing Katie and I together hadn't even registered until that very moment and sent my heart racing.\n\n\"Whoa, that's so cool, buddy. What is it?\" I asked, bending down, trying to see what it was, as he ran off before I could see it.\n\n\"It's a ceesail, daddy,\" Katelyn replied.\n\n\"What is it, honey?\" I asked her, not understanding what she said.\n\n\"It's a seashell, daddy,\" Katie replied for Katelyn.\n\n\"Oh, That's awesome,\" I called out as she ran off after her brother.\n\nStanding back up and facing John, I knew I was busted and braced for the onslaught of profanities that would soon be hurled in my direction.\n\n\"Those are some beautiful kids y'all have there. This is my little one, Matthew, and he just turned two a couple of months ago.\" John said, ruffling the hair on top of the cute little boy's head.\n\n\"It's a good thing he looks like his mom,\" I shot back, with a nervous laugh, staring at the girl I assumed was the child's mother.\n\n\"Ain't that the damned truth. Holly, I would like to introduce you to my very best friend Connor, and I presume his now beautiful wife Katie from the rock on her left hand. They were high school sweethearts. If you saw one, you saw the other,\" John said with a huge grin.\n\n\"It's my pleasure to meet you guys finally. John has talked about you two from the moment we met at USC. He always said you two were the perfect couple.\n\n\"That's such a lovely compliment, John, and it's a pleasure to meet you as well, Holly. Are you guys on vacation?\" Katie asked.\n\n\"Actually, no. We just moved here a few days ago. Well, I shouldn't say we moved since all of our things are still in storage while we wait for the lady to move out. Man, we went to rent this house and ended up buying it, but anyway, that's a crazy story. Anyway, I was offered a job, and I start work next week at a design firm as an entry level interior designer.\" John said.\n\n\"Get the hell out of here. Your bullshiting me,\" I shot back.\n\n\"Nope, That's why we're down here now. Not the whole reason we wanted to take Matthew to the park, but I also wanted to see exactly where the office was located, so I didn't show up late my first day. It's supposed to be just down the street.\"\n\n\"You better not be messing with him, or I'm going to kick your butt,\" Katie playfully said.\n\n\"What the hell are y'all talking about?\" John asked.\n\n\"Now it's my turn to get the same barrage of questions from you,\" I said, getting a strange look from John and Holly. \"You're going to be working for me, well, not me necessarily for me, but next to me. We just hired two guys from California, and they are supposed to start next week. Just in case you don't believe me, the office your looking for is right there,\" I said, pointing at the tall white building.\n\n\"Man, I can't believe this,\" John said. \"This is freaking awesome. We were so scared to move all the way across the country for me, only to hate my job and have to move again somewhere else. Isn't that awesome, Holly?\" John asked.\n\n\"I just can't believe it,\" she replied, still in shock.\n\nWe sat and chatted while our kids played like old times. I told him all about golf around Charleston and my favorite courses to play. John told us about his uncle dying only a month after we left from a massive heart attack and how he sold all the stores to a large chain that supplied auto parts because he didn't want to end up stressed out like his uncle. After the three-way split between him and his two cousins, he only ended up with a little over a million dollars. With a four-year degree from USC, a new marriage, and a new baby, his money was dwindling, and the need to find a job became his top priority.\n\nWe went on and on for what seemed like hours until Katie mentioned it was getting late and we should be getting the kids home for their afternoon nap. She promptly invited John and his family to join us for dinner later that evening, and after putting up a little resistance, saying, \"we don't want to intrude, are you sure it's ok?\" they agreed. Exchanging numbers was easy, and I told him I would text him the address once we got the little ones in the car. With a quick man-hug, we were on our way home.\n\n\"I always knew he knew about us,\" I told Katie while I texted John our address. \"He never said so, but I could tell he knew something was up after we got back from Jamaica,\" I said.\n\n\"Yeah, he did act slightly different around me,\" Katie said as we pulled into the garage.\n\nWith all the kids down for their two-hour nap, I picked Katie up off the floor and took her to our room for our version of an afternoon nap.\n\n\"Does daddy want me to put his big cock in my mouth?\" Katie whispered in my ear just before I let her down.\n\n\"Yes. Fuck, yes, baby, that's precisely what daddy wants,\" I replied, almost begging.\n\nSucking my hard cock immediately down her throat sent my balls to work on giving her what she wanted as she caressed them.\n\n\"Don't cum in my mouth, baby,\" she said, pulling the head of my shaft from her mouth. \"I stopped taking my birth control, and it's time for me to make you a daddy again.\"\n\n\"It is,\" I replied with a smile.\n\n\"Yes,\" she whimpered, crawling backward onto the bed. \"Just come here and shove it in me, daddy. I need you so badly.\"\n\nAlways wanting to please her, this was something I had a hard time doing. Even though she wanted it that way, she didn't complain as the head of my cock gently split the folds of her sex open, triggering her low groans. I slowly filled her pussy with my thick cock, intently watching her eyes fluttering as they danced around without direction.\n\n\"I love you,\" she breathed onto my lips when they touched.\n\n\"I love you too,\" I replied, making lengthy strokes in and out of her sex.\n\n\"Why must you continually make me a slave to your big cock?\" She pleaded, wanting an answer.\n\nWith no answer coming to mind, I pulled her legs up over my shoulders and started to fuck her with short, forceful thrusts, causing her to mumble incoherent words. I could look directly into her glossy eyes in this position as I continued to pummel her sex. I knew she was getting close by the clasp her pussy had on my shaft.\n\nWith the only answer, I thought suitable for her question. I growled into her ear, \"because I own you.\"\n\nKatie's beautiful green eyes fell suddenly into the back of her head from the unquestionable truth in my statement. Her pussy ratcheted down hard before starting to spasm violently around my cock and extracting the sizeable load of sperm. The entrance of her cervix strained under the immense battering it was taking each time I slammed into her pussy, until the first powerful blast of cum painted its opening. I pulled out, leaving only the head of my cock inside her, and watched as my shaft jerked and jumped each time it pumped another load of cum into her sex.\n\nSatisfied I had nothing left to give her, I slid two pillows under her and lowered her heart shaped ass onto them. Her legs continued to tremble even after her eyes found their way back and facing forward.\n\n\"Your cum feels so hot in me right now,\" she said, still trying to calm herself down.\n\n\"I haven't cum that hard...., ever,\" I said after a slight pause. \"Did you like my answer to your question?\"\n\n\"The second the word, \"you,\" came out. I was out. I didn't even know it happened until I woke back up,\" she giggled.\n\nWhy she felt the need to stay with her pussy propped up in the air was beyond me. The volume of cum I dumped into her sex was enough to repopulate the whole state of South Carolina. After I told her my thoughts, she laughed, covered her opening, and headed toward the bathroom.\n\n*\n\n\"Was that John texting you?\" Katie asked.\n\n\"Yeah, they are on the way now. He said they would be here in about ten minutes,\" I replied.\n\n\"Ok. I texted mom and told her to come over. They're putting on their shoes and heading over now,\" mom said.\n\n\"So, what's the surprise?\" Our mother asked, sitting down at the large kitchen island.",
        "\"Hold your horse's mom. You'll see,' Katie replied.\n\nThe music filled the house when John pressed the doorbell. It was something Katie just had to have when she heard it was an option.\n\n\"Come on in, guys,\" I said. \"Welcome to our home.\"\n\n\"You have such a gorgeous home,\" Holly said.\n\n\"Thanks, Katie decorated the whole thing herself.\n\nI didn't know what to expect from our parents, but to my surprise, they were just as happy to see John as we were.\n\nDad jumped up and shook his hand and said, \"what a terrific surprise,\" before kneeling on one knee, \"who is this young man?\" He asked as Matthew hid behind his father's legs.\n\n\"This is Matthew. Can you say hi, Matthew?\" John asked his little boy.\n\n\"I can't believe he's being so shy,\" Holly said.\n\n\"I'm sorry, Holly. This is my mom and dad. Tom and Susan, they live right across the street.\"\n\n\"That's awesome. It must be nice to have your parents so close,\" Holly said.\n\n\"It sure is,\" I replied.\n\n\"Wanna come see our playroom?\" Little Connor asked Matthew, even though he didn't speak the word yes, nodding his up and down sent all three of them running towards the playroom.\n\n\"Is it ok for him to go play?\" I asked John, getting an immediate response. \"Of course,\" John replied.\n\n\"Dad, you're not going to believe what John is doing in Charleston,\" I exclaimed.\n\n\"Take a guess,\" I asked.\n\n\"Umm. Vacation?\" he asked.\n\n\"Not even close. John is one of the new hires starting on Monday,\" I said.\n\n\"Get the hell out of here,\" he said in complete shock.\n\n\"Yup,\" John replied.\n\n\"Isn't that crazy, Mr. Williams?\" Katie asked.\n\n\"It sure is, but you don't have to be so formal. You know that you can call me Dad,\" he replied, never missing a beat and protecting Katie just in case she slipped up in front of an outsider.\n\n\"You know what's even crazier than that?\" John asked.\n\n\"What's that dude,\" I replied.\n\n\"We are going to neighbors,\" John replied.\n\n\"Huh?\" I asked.\n\n\"Yeah, remember when I told you we were going to rent a house and ended up buy it?\"\n\n\"Yeah,\" I shot back.\n\n\"Well, it's like three houses down from yours,\" John said. \"The lady who was going to rent us the house is like some sort of blogger, and she travels so frequently that she's never there. So when she asked us if we like the place, and we said we loved it, she asked us if we would like to buy it. It was such a good deal. I wrote her a check on the spot. Isn't that crazy?\" John asked.\n\n\"That is insane,\" I replied.\n\nWe all spent the rest of the evening catching everybody up on all the things that had happened in each other's life over the last five years. We knew most of the story from the time we spent together at the park earlier in the day, but it was still exciting to hear it again. Mom had offered everyone an adult beverage, which John, Dad, and I readily accepted.\n\nWhen Katie and Holly both asked for orange juice in a champagne glass, it sent our mother into a fit of giggles.\n\n\"More grandbabies for me. Yay!\" Our mother exclaimed.\n\n\"Hey, dude, do you guys have a moving company, or are you doing it yourselves?\"\n\n\"Nope, just us, trying to save some money,\" John replied.\n\n\"Nah, man, dad and I will help. Holly can hang out over here with Katie while we get you moved in. Holly doesn't need to be lifting anything heavy if she's pregnant,\" I said.\n\n\"Yeah, Holly, I would love for you to hang out. Let the guys do that stuff, and we can watch the little ones swim while we layout,\" Katie said.\n\n\"I don't want to put you guys out. Nobody likes to move, especially other people's crap,\" John said.\n\n\"John, we wouldn't want it any other way. You are a part of the family. We want to help,\" Dad replied.\n\n\"Honey, I am definitely good with hanging out with Katie, drinking lemonade, and watching the kids swim,\" Holly smiled.\n\n\"Yeah, I will also be here as an extra set of eyes, and I get to hang out with the little ones,\" Mom chirped.\n\n\"See, dude, it's cool. Everybody is fine, and we won't take no for an answer, so it's best just to say yeah,\" I said.\n\n\"Ok, but only if you let me buy lunch?\" John smiled.\n\n\"It's settled. Now let's eat,\" Dad said.\n\nIt was great having John back in my life. I didn't think of him every day, but often when I played golf. My father had even brought him up a few times, saying things like, \"I hope he is well and doing good for himself.\"\n\nJust as the evening came to an end, John pulled me on the front porch and told me that Holly didn't have a clue that Katie and I were brother and sister. He also told me he knew that something was up with Katie and me but never wanted to say anything to me just in case it ruined our friendship. It was something he cherished, and he decided if I wanted him to know, I would tell him.\n\n***\n\nThat day was one of many days we would spend sitting on my porch. Watching our kids ride bicycles together and play in the yard was something we looked forward to. After our fourth child, Anna was born, and John and Holly's twin girls Eva and Layla arrived just a day later. Katie and I decided four was enough. John and Holly ended up having another little boy named Winston, and that was it for them.\n\nThe memories of blowing on boo-boos to watching them all graduate college would come rushing back each time I heard, \"Grandpa, Grandma, were here, come look at what we got for you.\" Katie and I now had eight grandchildren and two more on the way. Our home was becoming way more than we could handle, but we couldn't come to grips with selling. Little Connor moved into our parent's house to be closer to us, while Katelynn and her husband completely remolded a home a few doors down. Morgan lived in North Carolina with his wife but made sure to make the four-hour drive frequently. Anna, after school, settled down with her wife just across town, who was a corporate lawyer. The day she told us of her girlfriend at the time was a memorable and wonderful memory. We were happy and never told her we knew until the day she told us she was gay.\n\nJohn still lives down the street, and we sometimes golf, but mostly fish nowadays. The body doesn't seem to move into those angles anymore. He also has several grandchildren, and each Christmas is a blast that we look forward to each year.\n\nMom and dad died twenty-four hours apart three years ago. I guess they really couldn't live without each other. From the day my mother was born until the day she died, my father never stopped loving her and remained by her side. Through thick and thin, they never faltered and fought hard for their relationship and even harder for their kids. I missed them most days, but the little voices of our grandchildren yelling and running through the house would always make me cherish the time we all spent together, even that much more.\n\n\"Grandpa, will you please teach me how to catch a fish? Mom says you're the best fisherman she knows, and she doesn't know the secret.\"\n\n\"If I tell you the secret, you have to promise not to tell any girls,\" I chuckled.\n\n\"I promise, Grandpa.\"\n\nThe end.\n\nIf you enjoyed the story, please give it a 5-star rating and comment. I would love to hear your thoughts.\n\nBHW"
    ],
    "authorname": "behindhandwriter",
    "tags": [
        "brother sister love",
        "anal",
        "sibling love",
        "incest romance",
        "pregnant",
        "taboo",
        "little sister",
        "vacation",
        "incest love"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/what-i-didnt-hear-pt-07"
}