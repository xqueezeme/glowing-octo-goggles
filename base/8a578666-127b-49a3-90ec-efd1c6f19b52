{
    "title": "Pax Multi Pt. 04",
    "pages": [
        "The skies of Procyon II were beautiful and blue.\n\n \n\nHe sat back, resting his palms behind him, looking out at the sky -- the sun overhead is so searingly bright that it makes the clouds look as if they are each glowing waves of white flame. At the back of his mind, he knows that Procyon itself, the star, is slowly transforming into a super giant. Over the next few million years, it would sweep outwards, eventually rendering the surface of Procyon II uninhabitable.\n\n \n\nThe Procyon that stands before him is a single blot of shadow. He looks just like the medical diagram etched in gold on the front of their last -- possibly even their first -- spacecraft ever launched. Low, stooped, quadrupedal, long nosed, soulful eyes. They don't have mouths like humans, but still, they speak.\n\n \n\nTheir voice is the translated, much repaired howling radio traffic that had come from Wolf-359.\n\n \n\nCrashing sounds. Chittering sounds. Screaming sounds. A desperate voice, speaking a language that needs no translation.\n\n \n\nHelp us.\n\nHelp us.\n\nThey're killing us.\n\nThey're everywhere.\n\nHelp us.\n\nHelp us.\n\nCrash. Shattering glass -- so shockingly human sounding, so familiar. Then the clattering of claws. And behind the standing Procyon, the sky darkens. The clouds ripple and streaking past them come dark shapes. They're black and charred and trail fluttering tendrils that flare out organic flutes that catch the atmosphere and drag their velocity down to something survivable. They strike the ground as the Proycon points at him -- and the screaming gets louder as the biopods crack open and the hellgaunts come swarming out, their blades already dripping with blood.\n\n \n\nLou sat up, gasping, his entire body locked tight, glistening with sweat. His heart hammered and he saw Bea standing before him at the bed, her hands on the blankets, which she had clearly been about to pull off. He scrambled backwards, reflexively -- his back bumping against the headboard, the entire bed shaking slightly as he tried to get his breathing under control. His hands were clenched tight. Bea cocked her head, her voice sounding uncertain. \"Are you injured?\"\n\nLou's skin was crawling -- and again, he felt like he was trying to hold two contradictory ideas in his head. The first was of Beatrice -- a sweet, gentle, confounding being that he...that he felt...he was...he was married to and he wasn't sure how he felt. There were times when he had held her lighter than light body, when he had felt her warmth against him, that he had felt like he could have held her until the sun went dim in the sky. It was a feeling so deep and all consuming that it was almost frightening. And then there was the other thought. The memory of everything he had learned, all the footage he had seen, the radio messages he had heard. The stark knowledge that no matter how little Beatrice had meant to cause harm, she had. She had caused harm and horror...and...and he wanted to forgive her. But...part of him, he knew, wasn't willing to do it. Why else would he dream about the Proycians and the Lupens?\n\n\"Lou, your heart rate is faster than normal, I...\" she crawled up onto the bed, reaching out and touching his leg -- and Lou almost flinched away from her. \"What happened?\"\n\nLou tried to think of what to say. \"I...I had a nightmare,\" he said.\n\n\"What is nightmare?\" she asked, sounding nervous.\n\n\"When...humans sleep, we...we have...dreams. They're collections of images and memories and sensations and feelings that we have during sleep.\" He gulped. \"You don't know what sleep is like.\"\n\n\"It...is similar to when I unfocus, and let my mind spread among my entire awareness?\" she asked, cocking her head and drawing close, trying to cuddle up against him. Lou tensed despite himself and instinctively, Bea drew backwards. Her antennas drooped. \"Lou...are you...do you not...want? Me to...\" She blushed. \"I was going to...that is, I...\"\n\nLou forced his hand out, cupping her cheek. Touching her smooth, sleek skin -- rubbery, and warm and inhuman and so very beautiful -- made him feel more centered. He leaned forward, pressing his forehead to hers, and he said, quietly. \"It's very different. Nightmares, um, they're when dreams are unpleasant.\"\n\n\"Oh.\"\n\n\"It's-\"\n\n\"It was a nightmare about me me.\"\n\nHe opened his eyes.\n\nBeatrice looked...impossibly sad. Her eyes were cast down, her antennas drooping. \"Your reactions make it exceedingly clear -- you had a nightmare about me. I am leaving.\" She drew backwards, turned, and literally flew out the window, her wings buzzing. Lou scrambled, then ran to the windowsill, looking out -- and she was gone, vanishing into the hazy twilight and the small forest beyond.\n\nLou closed his eyes, then slammed his head down upon the windowsill. Hard.\n\n***\n\nLou wasn't sure if breakfast was extra stilted or if this was just how his life had been before he had met looser, more free people like GF and Amy and he hadn't noticed it until now. He sat across from his father, while mother sat to his right, and the servitor whirred around them, setting out the fine meal. Jam wobbled in porcelain plates, while lightly toasted bread sent up thin wafting streamers of hot steam into the morning sunlight. Father nodded curtly to Lou.\n\n\"Where is our new daughter in law?\"\n\n\"She went back to her hive for nutrients,\" Lou lied with shocking ease, picking up some bread. He began to spread jam along it. He looked down at it, trying to think of how to apologize to Beatrice. Should you? A tiny part of his brain thought. She killed millions of people. Just because humans have done worse, for worse reasons, doesn't make what she did okay. Lou scowled, then set down his bread. He suddenly didn't have much of an appetite.\n\n\"Do you know when she'll be back?\" Father asked. \"There is a Federated ship in the system -- it's approaching Charon and according to the com-wave they sent us, it's carrying Colonel Admiral Akin Bosch. It seems the Federals want to extend their congratulations.\"\n\n\"Bosch...\" Lou frowned. \"That name is familiar.\"\n\n\"He served with your father at Wolf-359,\" Mother said, nodding.\n\n\"He's...decent enough for a Federal,\" Father said, frowning. \"Half the fleet were Thor and Sleipnir class ships, those were Federal ships. They took the zenith fast pass, while the AnCom and Neopolitan ships took the nadir. The way the math worked out, the Federals took the worse of it.\" He shook his head. \"But Bosch kept his head during the entire engagement, kept his men from panicking.\"\n\n\"The engagement was fifteen seconds long,\" Lou said, his voice dry.\n\n\"Fifteen seconds is a long time for a fast pass,\" Father said, putting down his knife. The clink of it was really quite shockingly loud in the room.\n\nLou pursed his lips. \"I don't see what he's doing in Alpha Centauri thought. The F.S aren't exactly pleased with the peace treaty.\"\n\n\"They have to claim that they're unhappy, for the sake of their population,\" Father said, waving his hand dismissively. \"But past all the bluster, they're not so different from the Neopolitans -- they respect history, tradition, humanity.\" He nodded, slightly. \"Yes, it'll be good to see Akin again.\"\n\nLou stood up, pushing his plate away. \"I will go and see if I can't convince my wife to visit. I'm sure she'll be happy to meet the Admiral. And if she cannot make it, I can at least bring her apologies.\" He inclined his head. \"Mother. Father.\"\n\nMother held out her hand and Lou took it, kissing her knuckles. As he leaned in, she murmured in his ear. \"It would be best if she had other engagements, darling.\" She kissed his cheek and Lou nodded, then turned and left, his hands tight behind his back as he walked out of the breakfast. Emerging into the brilliant sunlight that shone down from the dome, he was almost bowled over by Amy, who sprinted over, grabbed his arm, and dragged him away from the door. His eyes widened as the sleek QHC swung him around, pinned him against a tree, then looked to the left, her eyes narrowed, whiring.\n\n\"...Amy, what are you doing?\" Lou asked.\n\n\"We need to keep you out of GF's line of sight,\" Amy murmured, softly.\n\nLou sighed, slowly. \"Amy, I'm not in the mood-\"\n\n\"He gave Beatrice some advice and he's going to just blunder into asking you about it in the most tactless way you could imagine,\" Amy said, frowning. \"I'm your wingwoman, Lou. It's my job to keep you safe from that kind of mortification.\"\n\nLou sighed, again, mortified beyond belief. His eyes closed and he said, quietly. \"Amy, I can handle GF being crass. And...have you seen Beatrice?\"\n\n\"I mean, she's a hive mind, yeah?\" Amy said. \"She's got, like, two dozen bioforms around here.\" She paused, then looked at him. \"Dude, did...oh god, what advice did GF give her?\"\n\n\"I-\" Lou blushed, looking away. His hands wrung together. \"Nothing happened.\"\n\n\"...something happened,\" Amy said, frowning harder. \"I can tell, you're terrible at lying. Did she, like, bite you or-\"\n\n\"I had...a nightmare,\" Lou said, his mortification increasing. It was now the 'mud running down the back of his neck awful' feeling. Pits of snakes in his belly awful. \"About the Procyians and the Lupens and...her.\" He shook his head. \"S-She picked up on my nerves and immediately left.\"\n\n\"Oh.\" Amy stepped back.\n\n\"Yoooo, Lou!\" GF shouted -- the two of them spun around and saw GF was jogging towards them. \"Fucking AnCom porn, huh?\" he asked, cheerfully. \"Did she blow your mind or what?\"\n\nAmy slapped her palm over her face while Lou actually chuckled. It was a kind of wry, amused chuckle. Like, there was no way GF could make him feel any worse or more guilty than he felt right now. And compared to the fact that Admiral...\n\n\"Oh shit.\" Lou's eyes widened.\n\n\"What?\" GF asked. \"...she didn't bite it off, right?\"\n\n\"No, Admiral Akin Bosch is coming to visit,\" Lou said. \"And you two are AnComs.\"\n\n\"Bosch, Bosch, Bosch...\" GF muttered, while Amy scowled.\n\n\"That asshole,\" she snarled, her fingers clenching into fists. Her eyes whirred and clicked.\n\n\"...Federal?\" GF said.\n\n\"Yeap.\"\n\n\"I'll fab a gun,\" GF said, cheerfully.\n\n\"You can't shoot him!\" Lou exclaimed, holding up his hands. \"He's the Colonel Admiral of the entire Federated States Expeditionary Fleet -- half the ships that fought in the Bug War were FSN ships! They lost more soldiers in the war than the entire AnCom despite having a population of, what, a tenth as big?\" He shook his head. \"He's an ally and a member of the UHP.\"\n\nGF snorted. \"Thus also to tyrants, Lou. It's my civic duty to kill fascists when we have a chance. And we're out of SOL, in unsettled territory, and the war with the bugs is over. So, like, what exactly is the reason to not put a tungsten slug through his head with a coilgun on that grassy knoll right there?\" He pointed at one of the hills.\n\n\"Because...you can't just murder someone who is coming under a flag of peace, under my father's invitation!\" Lou said, flabbergasted. \"It...honor! Duty! He may be a monster, but if we stoop to his level, that simply makes us as bad as him.\"\n\n\"Do you plan to commit genocide at any point in the near future?\" GF asked.\n\n\"I...no?\"\n\n\"Then you literally can't be as bad as him,\" GF said, his voice once again growing cheerful.\n\n\"I forbid it,\" Lou said, frowning.\n\n\"Come on, seriously?\" GF asked. \"Like, it's barely murder, he's got a stack like me...\"\n\n\"I. Forbid. It.\" Lou crossed his arms over his chest, his eyes flashing. \"And, honestly, GF, I expected better of you. Honor may just be a word for you, but it matters to me. And while I may disagree with my father inviting Admiral Bosch, while I may find him detestable as human being and the continued existence of the Federated States a loathsome blot in the collective human soul, that doesn't change the fact that he is here, under flag of peace, as an ally in war, who has earned the right to come here and shake my hand.\" He paused. \"And if he insults me, my family, or my honor, I will challenge him to pistols at dawn and blow his brains out with a flintlock.\"\n\nGF blinked. \"...dude, you don't have a stack.\"\n\nLou grinned -- but his grin faded. \"Do I have your word that you won't shoot him?\"\n\nGF looked at Amy. Amy raised her silvery eyebrows, then shrugged. GF bit his lip. \"Yeah. Okay. You have my word. But I will flip him off.\"\n\nLou gave him a look.\n\n\"...seriously, I have to be polite to the motherfucker too?\" GF asked.\n\nLou nodded, slowly.\n\n\"Auuuuuugh, this sucks. Fine.\" GF grumbled. \"No one back home is going to let me live this down...\"\n\nLou nodded again, then clapped his friends on their shoulders. \"Now. I am going to speak to my wife.\" He breathed in, then out. \"Wish me luck.\"\n\n***\n\nAdmiral Bosch's shuttle came down with all the Wagnerian glory of the Federated States -- and that alone almost cut through the worried knot in Lou's stomach. Searching for hours for his wife, and finding nothing but trampled grass and claw-marks where her bioforms had been, had made it abundantly clear to Lou.\n\nBeatrice simply did not want to talk to him.\n\nHe had tried to take it calmly, but as the hours had turned into days, as the FSN Invisible Hand took its holding orbit above Charon, he had grown more and more worried. Amy and GF had both offered him sympathy, but it had left him feeling brittle and raw and irritable, rather than calmed. It had still been better than the blithe acceptance of his parents. His father had said nothing on the issue, and his mother had been cutting with her cheerful: \"Well, I'm glad that she understands Neopolitan marriages of state, yes?\"\n\nShe had meant it as a way to make Lou feel better.\n\nLou had concealed the pain as best as he could and instead thrown himself into practice. First, with his rapier, setting the combat servitor that he fabricated to the maximum level of danger and throwing himself into the thoughtless violence of a free style fence, the servitor and his blade clattering together and slashing through the air. He had practiced with the early modern pistols, first using the classical style of loading, then switching to the neo-classical style that had become popular in the Star Kingdom within the past century, where one fabricated and fired the guns in a single unbroken route, seeking to strike as many targets as possible in as short a time as possible.\n\nGF, watching, had said: \"...holy shit Lou. Holy...fucking shit.\"\n\n\"What?\" Lou had asked, turning to look at him.\n\n\"You got...ten fucking bullseyes in a row with smoothbore flintlocks...\" GF gaped at him. \"Without speed-augs? Target assist?\"\n\nLou had shrugged. \"I practice.\"\n\nBut even that pleasant work hadn't been enough to loosen his worry, nor to give him any succor. Every day, he had woken up, hoping that Beatrice had returned. Instead, he spent the entire day with the hours crawling by, every second his mind thinking of something to say to Beatrice...and nothing happening at all. And now, he was forced to watch, stand at attention, and look politely impressed as the Federals showed off.\n\nThe Federated States, like their forebears in ancient Rome, Italy, Germany. America, the Neo-Persian Front, the Scavskulls, the Yellowjackets and the Martian Union of Agrarian Terraformers, leaned hard into showy theatrics. Their shuttle was a black wedge that cut the sky like a knife, with screaming turbines and roaring jets of flames that made it look like the fist of one of the ancient gods. The massive emblem of the F.S.N on the front gleamed gold against the black fuselage, while non-aerodynamic but highly deadly looking weapon pods thrust from the wings, the belly, and the fuselage itself. The wheels screeched as they caught the spaceport and sent up gouts of smoke as the tires screamed against tarmac.\n\nWhen the shuttle came to a stop, clicking and hissing with its heat differentials, the front gangplank opened and the first troops emerged, flanking Admiral Akin Bosch himself. He was a tall man, with the blond hair and blue eyes the Federated States tended towards. His uniform was all sleek grays and blacks, with a floating great coat and a high cap with an imperial eagle emblazoned on the front. His gold armbands glittered, stark against black, and his jackboots clicked -- almost louder than the whirr thump of his power armored escorts.\n\n\"Akin,\" Father said, smiling and reaching out -- and Bosch took his hand.\n\n\"King Benoit,\" Bosch said, while more Federals -- mostly officers -- emerged from behind him in the shuttle. \"And this is your...son?\"\n\nHe turned to face Lou and Lou caught, flickering across his face, an almost instinctive flash of utter disgust. Lou nodded, slightly. \"Colonel Admiral,\" he said, then held out his hand. \"It is an honor to meet you.\"\n\nBosch looked about himself, then smiled and it was the most punchable charming smile that Lou had ever seen. \"I see that we're fortunate in not having your spouse coming to visit,\" he said, his voice sotto voce. \"I know it must be quite a trial, to be at the forefront of peace with such a murderous species.\"\n\n\"Murderous is an incorrect term,\" Lou said, his voice as politely icy as he could make it. Behind his back, his fingers were tightening into fists. \"It implies an intentionality that was lacking -- Beatrice...my wife...she chose a name, by the way...\"\n\n\"Hm.\" Bosch pursed his lips.\n\n\"...she had no understanding of other species. Her fight against us wasn't a war. It was a misguided attempt to make herself safe from what she saw as hostile, unthinking creatures. Even after she realized we were sentient, she thought we were a hive mind like herself -- much as our early hypothesis about her species was that it was a multi-racial alliance and not a hive intelligence. When she learned each human is an individual, not merely a disposable fraction of a greater whole...she grew quite distraught and remorseful.\"\n\n\"Ah. And that makes it all better, does it?\" Bosch asked, his voice growing cold as he started to pace around Lou. \"King Benoit -- how many Neopolitan sailors did we lose at Wolf-359? At Procyon?\" <br >\n\nFather was frowning. \"Akin...\"\n\n\"It wasn't her fault,\" Lou snapped, his temper slipping.\n\n\"Ah, of course, she killed several million humans by accident,\" Bosch said -- and Lou bit back his first response. Many of those millions had been killed in the war in a way that Bea didn't even grasp. She was guilt riddled over the several hundred thousand that she had...consumed. She hadn't even thought of the civilians that were turned instantly into ash by the matter/antimatter fireballs that had blotted entire cities on Charon off the map. The defenders, according to their final broadcasts, had agreed: Better instant, painless death than...consumption. She didn't think about the hundreds aboard Fenris or Thor or Odin or Agamemnon class battle-cruisers, who were ripped instantly to paste by high energy kinetic weapons or dissolved in long ranged spreads of organic acid launched from her warbodies. This moment of silence allowed Bosch to keep going: \"Columbus killed as many with the plagues he introduced to the New World -- and we revile him as a monster. Or, is it only when white men do it?\"\n\n\"Admiral Bosch, you forget yourself!\" Father snapped.\n\nBosch looked ready to bring out some bit of smoothness or flippery or totally a-historical nonsense -- but before he could, his men all stepped forward, their weapons whirring and clicking as they brought them online. \"Colonel Admiral! We're detecting an entire bug army out there!\" <br >\n\n\"What is this?\" Bosch snarled -- but Lou turned, his heart leaping. He sprinted to the edge of the landing platform and saw that army was a slight exaggeration. It was merely a hundred or so hellgaunts, working together to carry something on their back. The something was covered in a large, bright collection of downy fluff...and he noticed that the hellgaunts themselves looked different. For one thing, their dazzle camo had been changed from white and black to green and pink, a garish combination that made his eyes ache. But what he noticed next, as they drew closer, was that they were covered in...",
        "Fur.\n\nThe fur was mostly collected around their shoulders and their legs, but it was bristly and poofy and it made them look significantly softer and less terrifying. He also noticed that their eyes had been made larger and...\n\nRounder?\n\nBut next to them was what he really cared about.\n\nBeatrice walked along, looking shy and nervous, carelessly naked. Her fingers were touching together -- in the most adorable approximation of a shy girl he had ever seen -- the pointer fingers touching together underneath her chin, her head downcast, her antennas drooping slightly as the entire group came up to the side of the spaceport, while Father and Mother joined Lou at the railing.\n\n\"Beatrice,\" Lou said, biting back the urge to leap over the edge and sprint to her and take her into his arms and hug her and hold her and apologize to her. Decorum kept him locked in place, but every part of his body yearned to feel her lightness.\n\n\"Hi Lou,\" every bug on the field said at once -- and the hissing, sibilant sound of the hundred hellgaunts hissing in unison was almost hilarious. The hellgaunts too looked nervous and downcast, their bodies pressing low to the ground. \"Um, I...I was working very hard. It took a great deal of focus, and, I...well, the...uh...this is not as good as the oral sex, but-\"\n\nMother put her hands over her mouth, her entire face going beat red as Father coughed loudly into his hand. Akin Bosch had stepped up to the railing as too, and he was looking more openly disgusted than Lou had ever expected him to see. But before either of them could say anything, and before Lou could literally drop dead of embarrassment, Beatrice (that is, her moth body) flapped her wings, flying over to the large bundle of fluff on the back of the hellgaunts.\n\nShe grabbed it and swept it to the side, the fluff unfurling and rippling in the air, revealing it was nothing more than a covering. Underneath was..\n\n\"What...is that?\" Father whispered.\n\n\"It's a gestation pod!\" Bosch shouted, pointing at it. \"Is that some new weapon system?\"\n\nLou, though, was struck dumb. His mouth hung open in shock as he grabbed onto the railing, all thoughts of decorum forgotten. He swung himself over the railing and then landed with a grunt, staggering and running over to Beatrice. He grabbed her around her thin waist, drawing her in, then looking from her to the gestation pod, which was a sleek, greenish cual of membranous flesh supported by several fingerlike struts of bone that spread outwards and met again, creating a segmented sphere that throbbed in time with some vast heartbeat. Within the cual, suspended in amniotic fluids, was an elephantine shape.\n\nBut he knew it.\n\nHe recognized it almost immediately.\n\n\"No it's not a weapon system,\" Father said.\n\n\"It's a Procyian,\" Beatrice said, her voice soft and shy. \"Finding their genetic records in my memory took a great deal of time. The memory bugs on my homeworlds are very large and it takes a great deal of time to comb through their lattices -- even for me. A-And then I had to decode the biology and I had to begin to make one without modifications or changes, which...I had already adapted some of their muscular systems, and their nerve clusters for certain synaptic functions an-\"\n\nLou cupped the back of her head and kissed her fiercely. Every hellgaunt on the field froze in place, their collective breathing stopping as Bea trembled in his hands, her eyes wide as saucers. Her antennas snapped to full extension, then slowly drooped as she began to kiss him back. Her lower hands cupped the small of his back, and her upper arms slid along his shoulders as her wings began to buzz with growing excitement. But she was so light and Lou held her so tightly that she didn't go anywhere.\n\nHe broke the kiss, whispering. \"You...are...amazing.\"\n\n\"I-I...it's just one, but...I figured, I could m-make a population that was sustainable...\"\n\n\"I had no idea they were so big...\" Mother said, from the sidelines, her eyes still locked on the gestation pod.\n\n\"Y-Yeah...we only saw them in photographs...\" Lou coughed. \"I guess we...got the scale wrong.\"\n\nBeatrice smiled shyly. \"Yeah.\" She paused. \"I-It doesn't have...um...there's...there are nerve structures, logged in my memory banks, but...t-the detail on them was too fine grained for me to get more than a very crude approximation of them -- so, um, rather than trying to recreate them, I simply produced the genetic structure that grew them. But...I believe those brain structures are where memories and personalities are stored, so...\" she looked down. \"T-This isn't any of the Procyians I...killed. But...\"\n\n\"My wife, it is more than we could have ever dreamed of,\" Lou whispered. He kissed her forehead and she looked down, her antennas quivering.\n\n\"I like it a great deal when you kiss my forehead.\"\n\nLou glanced back -- and saw Bosch frowning down at him. He became suddenly painfully aware that his wife was naked. \"Ahem!\" He said, glaring at Bosch. \"My wife needs to get some clothing. Could you all please avert your eyes?\"\n\n\"Right, of course,\" Father said, his cheeks heating. And soon, Lou and Bea were unobserved by anyone but the hellgaunts, who were beginning to move again after their shocked stillness. In that quiet moment, Lou paused. Then he kissed Bea's forehead. She smiled -- and then a bump at his hip made Lou look down. A hellgaunt had come over, and was looking up at him with its newly enlarged eyes. Lou let out a playful sigh.\n\n\"Oh, if I must.\"\n\nHe leaned down and kissed the hellgaunt on its forehead, right between the bony ridges.\n\n\"Eee!\" Bea squeaked -- and Lou yelped as the hellgaunts, as a mass, rushed towards him, bumping against him from every direction.\n\nAnd yet, despite being surrounded by bladed horrors, Lou found himself laughing with joy.\n\n***\n\n\"You know, it is possible to wear clothing that expresses yourself, and isn't just a white, shapeless shift, right?\"\n\nWith that single sentence, overheard while waiting in the hallway outside of his bedroom, Lou knew that Amy had ruined his life, his marriage, his dinner prospects, possibly the entire fate of the galaxy. His mind was filled with trying to hold a diplomatic dinner while his lovely wife sat around in a crop top that said THESE TITS KILL FASCISTS, piercings on everything that could be pierced, and a thong that actually left less to the imagination than simple nudity.\n\n\"That does explain Lou's many coverings,\" Beatrice said, wonderingly. \"But his coverings lack arm and wing holes...\"\n\n\"That is not an impossible problem to overcome, my dear mothgirl,\" Amy said, cheerfully.\n\n\"I hear Lou's heartbeat through the door,\" Beatrice said. \"I shall ask him.\"\n\nLou had enough time to blink at that before the door opened and Beatrice stood before him. Naked. It was so bizarre how a change of context could utterly alter the seeming of his wife. It was one thing to see her naked in her natural environment of bug warrens and the eerie fields constructed by her hive mind. It was another to see her naked, here, in the country manor fabricated by his parents. There was a scandalous humanity to it, nevermind that she had four arms and antennas and wings. She smiled at him and buzzed her wings with a little fluttering sound. \"Lou, what should I wear to the dinner engagement with your parents and Admiral Bosch?\"\n\n\"Well, ah...\" Lou blushed and looked away.\n\n\"Why are you looking away and moving blood to your cheeks?\" Beatrice asked. \"You have seen me naked before. The last time we were together, you-\"\n\n\"Ah!\" Lou blushed even harder. \"I...that is, uh, I believe that you should wear something...well, uh, among the Neopolitans, we have a wide range of fashions, from the classical to the neo-classical to the reconstructionist era, to...\"\n\n\"I do not know what any of those are,\" she said, then paused. \"Are you not looking at me because of your nightmare?\" She sounded uncertain. \"I thought- you did hug me, and that is how humans forgive, so, I thought...\"\n\nLou blushed and forced himself to look her in the eyes -- and to not look down at her...the rest of her. \"I...am flustered because, ah, you're naked, and Amy is right there and...\" He closed his eyes and tried to break it down, simply. \"There are taboos about being nude in public. Furthermore, there are taboos about engaging in and talking about sex while someone else is right there.\"\n\n\"I mean, there are in the Star Kingdom,\" Amy said, snickering. \"AnComs are less prudish.\"\n\nBeatrice ducked her head forward, looking down at her naked body. \"I see...context has altered how you see me...\" She paused. \"I still do not know what to wear, though.\" She sounded so plaintive and nervous. Lou sighed, taking his embarrassment and compacting it deeply down. He placed his hands upon her shoulders.\n\n\"Let us see what the fabricator can do with a Classical dress...\" he said, firmly, then blushed and smiled as he walked past her to the fabricator in the corner of the room. Amy, who was leaning against the wall, watched him, then gaped as he began to bring up the sartorial program and tease out the design of a dark blue dress with pale white fringe along the edges, to accentuate the coloration of his wife's current body.\n\n\"No fucking way,\" Amy said.\n\n\"I thought that fucking was a means of procreation,\" Beatrice said. \"What does it mean when interjected between words like that?\"\n\n\"It's a way of making the words have more impact,\" Amy said, grinning at Beatrice. \"Linguistic accentuation!\"\n\n\"I fucking enjoy fucking being fucking with fucking my fucking husband, fucking Lou!\" Beatrice said, her antennas twitching happily.\n\n\"That's the spirit! But, back to my original statement: No way. No. Way.\" She pointed at Lou with a single silver finger, accusatory. \"There is no way you learned fencing, shooting, dancing, all that kingly shit and how to make dresses using a fabricator. You're a Prince! The Neos are fucking gender roles to shit!\"\n\n\"Fucking gender roles to shit?\" Beatrice murmured, sounding as if she was trying to parse the sentence.\n\n\"I was, ah, how you say...\" Lou said. \"AFAB?\"\n\n\"Oooooooooh holy shit that's so cool!\" Amy exclaimed.\n\n\"What is AFAB?\" Beatrice asked.\n\nLou, his cheeks darkening, stammered. \"I-I...we shall cover that later. How does this dress look to you?\" He asked, stepping aside to let her look at the holographic design. Beatrice blinked, then cocked her head.\n\n\"I don't know,\" she said, her antennas drooping. \"But it has a great deal of soft, downy parts, like the fluff that I have heard is very appreciated, and so, I believe, it is quite pretty and I will be glad to wear it on this bioform.\" She smiled, slightly, then threw her arms around Lou, hugging him tightly as she pressed herself against him. Lou laughed, then slid his hands onto her hips and picked her up, then set her down before the fabricator. His mind thought, irrelevantly: She's so light...\n\n\"Now, I shall leave you two to get dressed,\" he said, kissing her cheek over her shoulder. She grabbed him with her lower arms, keeping him in place.\n\n\"Kiss me again...\" she said, quietly.\n\n\"Ah...\" Lou glanced over at Amy, who grinned at him, then stretched her arms over her head.\n\n\"Wow, gee, I sure do have to go to place,\" she said, casually ambling out of the room. \"What an amazing random happenstance.\" She closed the door behind her -- but paused to lean in and wink at Lou. Once the door had clicked shut, Lou blushed, then placed his hands upon his wife's hips. He kissed her neck, gently, this time. His nose breathed in soft vanilla of her scent -- which made him blink.\n\n\"You smell...different?\"\n\n\"This bioform has a scent I hope you find pleasant,\" she said, quietly. \"I...may have asked GF for a good smell. And then I asked Amy. Then, I compared it to a number of scent structures in the human nose and ran simulations on the human brain, and body, to make sure that it wouldn't...cause...\" She paused. \"Issues.\"\n\nLou nuzzled against her, his eyes closed. \"Wow. And you did that all while resurrecting the Procyians?\"\n\n\"I created a...a part of my mind that...is focused upon a task,\" Bea said, her hands tightening on him. \"The same way that I used to handle certain functions that didn't need my full attention, but were complex. It's...\" She shook her head. \"It is hard to describe. And I do not quite enjoy doing it. It makes my mind feel less like my mind.\" She bit her lip, then ducked her head forward. \"But I wished, very badly, to make you happy, after I had made you sad.\"\n\nLou closed his eyes. His hands slid around her, squeezing her tightly. \"Y-You know, there are easier ways to learn things, right? Humans, we've been writing things down for millennia. I'm sure we can find a way for you to access that knowledge.\" He turned her around, then cupped her cheeks. His thumbs brushed along her forehead, almost touching the base of her antennas as he looked down into her eyes. He had been planning to say something comforting or useful -- but instead, he was struck by the delicate, alien beauty of her. The deep black/blue of her eyes, the darkness of her lips, the sleekness of her skin.\n\n\"I would enjoy accessing that information,\" she said, quietly. \"I...Lou...is it...normal to be unable to think of anything but the way your hands feel at a time like this?\"\n\nLou blinked, and felt the immense weight of Beatrice's attention -- several solar systems and countless billions, if not trillions, of discrete lifeforms, webbed together into a quantum latticework, all of it focused upon the hands of a simple man, holding her. His breath caught and he whispered, very softly. \"It is...for a human, I...\" He gulped -- feeling the twin warring needs. Decorum said that they needed to be on time for the dinner, which was going to be held in a mere twenty minutes. But every part of his body, from his heart to his hands to his immortal soul, wanted nothing more than to kiss Beatrice for an entire cycle.\n\n\"Yes?\" Bea asked, her antennas twitching. Her wings buzzed.\n\n\"I...\" Lou leaned forward and caught her lips. Soft and moist and eager, and then, her tongue, then, her hands. They caressed along his shoulders and his back at the same time, her antennas drooping as her eyes closed and Lou pressed her backwards, against the wall. Her wings fluttered and she was so very light. His hand slid along her thigh, finding the join of her knee, lifting one of her legs instinctively. Lou didn't know what he was even thinking -- his heart was hammering as his mouth and hers remained locked together. Then he drew back, purely for air, and Beatrice trembled, her hips rocking against him.\n\n\"W...Wha...wha...what?\" She whispered, her eyes wide as saucers, her antennas straight edged and eager. Lou felt her heat, her moist slickness, grinding against his...bulge. He looked down, seeing that the excitement of the moment had been translated to his most base component -- he wanted to stammer an apology -- but then Bea rocked her hips in a single sweeping motion, grinding her heat against him. \"Whaaaaat?\" She wailed the word. \"Is...happening?\" She trembled.\n\nLou's com began to ring.\n\n\"I, ah, did you, uh, modify this body in other ways?\"\n\n\"Yes yes yes yes!\" Her antennas rubbed together, her eyes closed. \"Suck my nipples!\"\n\n\"What?\" Lou, who had been reaching for the com unit, fumbled and dropped it. It struck the floor, skidding, showing that it was his father calling.\n\n\"I don't even know!\" Beatrice said, her breath catching slightly. \"I simply, that is, I feel...things and...ah...I want you inside of me.\" She blinked. \"I...in me? In. Me. Right now?\" She shook her head. \"Is this normal? For human women?\" She bit her lip, trembling. \"I'm so confused and...and I feel things and-\"\n\nLou grabbed the com unit, his cheeks beat red. \"W-What did you add?\"\n\n\"S-Some nerve endings...\" Bea said -- him no longer grinding against her seemed to have made it easier for her to think and speak. \"A-And, um, hormones that seemed common along the bodies that I have identified as being-\"\n\n\"What is going on?\" Father asked. \"The hellgaunts are acting...unusually!\"\n\n\"One moment!\" Lou said -- then clapped his hand over the com's receiver. He looked over at Beatrice -- whose hands were beginning to slide over her body. Her eyes widened.\n\n\"I can create these sensations as well!\" Bea exclaimed, her upper hands cupping her breasts, gently teasing with the bright blue nipples that tipped her dark breasts. Her lower hands slipped along her thighs, then tentatively, her finger touched the folds of her sex, sliding along the edge, and Lou could see both fingertip and skin glisten with her arousal. His eyes widened and he froze as Beatrice drew a short breath. \"N-not as intense as Lou...but...ah...\" She trembled. \"What is happening?\"\n\nLou knew that she needed to stop. After all, it was...a...\n\nThen again, he had...\n\nBeatrice drew her hands away from herself. Her eyes glittered.\n\n\"Lou,\" she growled.\n\n\"Well, uh-\" Lou stammered, while his father's voice, faint and barely audible, squawked from the com unit.\n\nBeatrice tackled him.\n\nIt was...comically ineffective.. Her body thumped into him and she rebounded off Lou as if he was a brick wall. Her wings fluttered and slowed her fall, so that she ended up on her back, blinking. \"Density defied,\" she mumbled, sounding faintly pouty.\n\nLou stepped over, smiling. He held out his hand. Beatrice took his hand, then placed her leg between his legs, crooked her knee, then tugged him forward. Lou yelped and it took every bit of his combat training to land without crushing his wife. His palm slapped the ground beside her head, and her three free hands planted themselves on his chest as her fourth caressed the back of his neck. She smiled, and he swore, she looked mischievous. \"Application of fulcrums.\"\n\n\"Who taught you about fulcrums?\" Lou said, grinning down at her, ignoring the faint ache in his arm and shoulder and knee. It was worth it to see that glitter in her eyes.\n\n\"I learned the basic physics of levers and fulcrums while your common ancestor was just figuring out...well...\" Bea paused, then grinned shyly. Slowly. \"This.\" Her thighs twitched open, slightly, and Lou's heart almost exploded.\n\n\"Louis, what is going on?\" His father's voice drifted, faintly, from the com unit that was right over there -- and before Lou could do anything, Beatrice picked it up, then held it to her face -- not noticing that it was upside down.\n\n\"My husband is busy at the moment,\" she said, then threw the com into the fabricator, which consumed it in a matter of moments. Lou sat back, then grabbed onto her upper arms, pinning them above her head. He leaned down close, his voice husky.\n\n\"We need to get ready for dinner...\"\n\n\"Then why have you gripped me like this?\" she asked.\n\nLou blushed. \"Because...I...\" He shivered. Her lower hands were caressing along his sides, rumpling his shirt. \"Because...\" He leaned down and kissed her. A far better answer than anything else he could come up with. Her wings buzzed, making a staccato patter against the floor that nearly matched the racing of Lou's heart. His member ached to be released, and he ached to slide into his wife, to take her right now, to make her his in a way more primal and feral and ancient than even the strictures of his court. The urge burned, while her fingers played with the buttons of his shirt, tugging and pushing with no real effect -- she clearly wasn't sure how they worked.\n\nAnd...\n\nWell...\n\nShe was distracted...\n\nLou drew back, panting -- and then whispered. \"Beatrice...\"\n\n\"Louis,\" she said, then softer. \"Lou. I prefer this name of yours. It is the one I call you. Not the one your father calls you.\" She bit her lip. \"I worry that he does not like me. I've overheard some of his comments about me...\"",
        "Lou scowled. \"That blackguard has some nerve...\" he lifted his head up -- and felt her wrists squirming under his hands. But it was her lower arms that hooked around his neck, that slid her fingers through his hair, that dragged him back for a deep, eager kiss. Her lower hand reached down and her palm cupped the bulge that strained against his pants -- and when Bea broke the kiss, Lou bit his lip to keep from letting out a soft crooning moan. His body trembled and his fingers tightened upon her wrists.\n\n\"Why...does...additional nerves in several parts of my body c-change utterly the sensation of touching your phallus?\" she whispered, her voice soft. \"W-Why am I nervous? Why...\" She gulped, then whispered. \"Is that the right term?\"\n\nLou blushed. \"Well, ah...\"\n\n\"GF says that cock is acceptable too,\" Beatrice said.\n\nLou's eyes bugged. \"What?\"\n\n\"I asked him,\" Beatrice said, then cocked her head. \"Dick. Prick. Manhood.\"\n\n\"Oh god, stop,\" Lou whispered, mortified. \"Y-You're talking to him, right now?\"\n\n\"One of my hellgaunts is. Do not worry, I am being very circumspect,\" Beatrice said, nodding. \"I know that you want to keep our intimate activities private. He suspects nothing.\"\n\nLou imagined a drooling, bladed, hellgaunt crawling up to GF and hissing to him: GF, what is a properly erotic term to refer to my husband's phallus? I am asking for no particular reason, do not be suspicious. His eyes closed and he murmured, softly. \"W-Well, um...I...\" He was about to say 'the proper way to refer to them is not at all.' Instead, what came out of his mouth was soft. \"I like cock.\"\n\n\"Cock...\" Bea murmured. \"Cock. You like the word...cock.\" She slid her pointer finger along his bulge. \"I like...your cock.\" She grinned. \"I fucking like your cock...\" She leaned up -- and Lou leaned down. And their mouths met and their tongues met and Lou was so ready to slide off his clothing, to focus upon her, when the faint ding-chime of the dinner bell jerked his attention up -- and his face heated. Bea looked to the side, frowning.\n\n\"One of my gnats sees that the dining table is beginning to be prepared.\" She paused. \"Lou, why would it be shocking for you and I to make love? Your father is speaking about it as if he cannot even believe it.\" Her brow furrowed. \"What's a roach?\"\n\nLou coughed. \"W-We should get dressed,\" he said.\n\nRoaches.\n\nAs in 'we fried half a million of those fucking roaches' -- standard dialog from any of a million movies made about the Bug War. Beatrice pouted -- but Lou was scrambling to his feet. \"You get dressed, and I shall go and make sure that you have time to arrive,\" he said, wanting, more than anything, to shut his father up before Beatrice heard anything more. He smiled at her, then took her hand, drawing to her feet with effortless ease. His mouth and hers met and then he drew away, nodding to her.\n\nWhen Lou arrived in the dining room, the servitors were beginning to put the food away -- and he caught the faint glint of a reflected sunlight near the corner of one of the rooms. A gnat, one of the Bug's spy-forms. It reflected more sunlight than a normal dust mote, due to the large size of its optical sensors, and some quantum trickery they used to make up for their relatively smell size. He put it out of his mind as he saw his father and Admiral Bosh were speaking to one another in the corner. Father let out a slightly forced laugh.\n\n\"I see that you and your wife are getting on?\" he asked.\n\n\"Yes, quite,\" Lou said, nodding. \"She simply needed some assistance -- neopolitan clothing is more complex than what she is used too.\"\n\n\"A new Eve for a new garden,\" Bosch said, his voice so complimentary and calm and buttery that it made Lou want to break him in half. \"Upon further reflection, I have to admit, my initial opinion of her was highly unfavorable and entirely unfair.\" He said.\n\n\"Thank you,\" Lou said. You lying snake, he thought. \"Will we be having anyone else or is it just us for the evening?\"\n\n\"I was thinking of tendering an invitation to the AnComs,\" Father said. \"But they declined rather...rudely. Honestly, Louis, I'm impressed with how well they think of you. It takes a delicate hand and a strong stomach to deal with...those people.\"\n\nLou inclined his head. \"I found that dealing with them as people works quite well, Father.\"\n\n\"Quite,\" Father said.\n\nBosch turned to face Lou directly. \"I have to ask about the Procyian,\" he said -- but before the Admiral could continue the sentence, the door to the ballroom opened and everyone turned -- and Lou felt as if all the air had left the room. Beatrice stood in the entrance, one hand still on the door, the other hands clutched before her belly. Her wings fluttered behind her with a nervous twitch -- but they were almost lost against the frilly splendor of her long gown, her luminous tresses, her bust. Her shoulders were bared by the cut of the hemline, and her antennas made her look even more like a queen, unfurled and peeking out past the short white frizz of her hair. She smiled, shyly, then started to walk down the stairs. Lou stepped over, then offered his hand to her. She took it with her lower left, and he turned, then walked with her to his father, his mother, and Admiral Bosch.\n\n\"May I present my wife, Beatrice Benoit,\" Lou said, bowing his head. \"Beatrice Benoit, this is my father, my mother, and Colonel Admiral Bosch.\"\n\n\"My name is Beatrice Benoit?\" Bea asked. \"I thought it was simply Beatrice. Or Bea.\"\n\n\"When two humans get married,\" Lou said, trying to sound casual. \"They sometimes exchange surnames -- since there are so many individual humans, surnames are often used to tell one apart from another -- there are many Louis, but there's far fewer Louis Benoits.\"\n\n\"Oh,\" Beatrice said, then smiled. \"Also, I enjoy sharing your surname. And your surname, Lou's father. And yours, Lou's mother.\"\n\n\"Well, isn't that...charming,\" Mother said, sipping heavily from her wineglass.\n\nLou took Bea's hand and then sat her down at a chair -- which caused her to gasp. \"Oh!\" she exclaimed. \"That's what these feel like!\"\n\n\"You haven't sat in a chair before?\" Mother asked as she settled.\n\n\"I have only sat in my husband's lap before,\" Bea said. Under the table, one of her hand slipped onto his thighs. Caressed. Lou's cheeks heated and he sat up a bit straighter. \"And that is not the same.\" She nodded, happily, as the servitor behind her reached over her shoulder to set a bowl of soup down on the table. Bea looked at the soup, her hand continuing to slide up and down Lou's thigh, while Lou looked down at his soup. It was his favorite -- a fine pheasant tongue and wild rice with saffron and nutmeg. As the servitor laid the soup out for his mother and Admiral Bosch, Admiral Bosch lifted his wine glass.\n\n\"A toast, then, to the newlyweds,\" Bosch said.\n\nLou leaned in, whispering to Bea. \"A toast is...a...commemorative statement, meant to indicate approval. You do it by, uh, lifting your glass, lik-.\" He picked up his glass. Bea, watching intently, picked up her glass while also sliding lower palm between his thighs, cupping and squeezing, cutting his helpful advice off. He choked, then whispered. \"Uh, Bea, uh...not now...\"\n\nShe pouted -- drew her hand back, but it remained on his thigh, even as she lifted her glass.\n\n\"Hear hear,\" Father rumbled.\n\n\"Might I ask a question?\" Bosch asked after taking his drink. \"I served in several of the major battles in the War, and my father served in several before me -- I'm deeply curious about what things were like from your side of the things. It's not often that two warriors can speak of such things with candor and openness.\"\n\nBea blinked at him. \"I am not a warrior,\" she said, her brow furrowing. \"I am Lou's wife.\" Her hand caressed along his thigh, slowly, five hot points of contact that felt searingly intent through his thick pants, despite everything. Lou wanted her to stop and wanted her to go back to doing far more all at once. He opened his mouth- but Bea finished her thoughts. \"But what is a battle?\"\n\n\"You...don't know what a battle is?\" Bosch asked.\n\nBea cocked her head -- but Lou managed to rally. \"Yes, uh, a battle is...the term we use to describe a discrete, uh, part of a war. Where forces meet, fight one another, then disengage.\" He nodded.\n\n\"Oh,\" Bea said. Her antennas drooped slightly. \"I am sorry, but I don't remember any of them. I wasn't paying attention to them.\"\n\n\"You...weren't paying attention?\" Bosch asked and Lou frowned.\n\n\"Admiral,\" he said, his voice warning. Pistols at dawn, was what flashed through his head. But Bosch chuckled.\n\n\"Please, Akin, Louis, Akin. We're not on duty here,\" he said. \"And I'm just more curious than anything else. The Bugs...that is...Beatrice here, used tactics, strategy. Not exceptionally complex ones, but there were logistic trains, forward bases, reconnaissance, even a feint and flank attack or two. Not precisely the byproduct of reflexive action.\"\n\nBea blushed. \"I...\" she looked down at her soup, her brow furrowing. Her antennas twitched and she said. \"I...\"\n\n\"You don't have to talk about it,\" Lou said, quietly.\n\n\"No, it is okay,\" Bea said, lifting her head. \"I just do not know how to describe it. I...when I...time...I see time very differently. The war, for me, was very short -- and I did not devote my full attention to any specific part of it. While it was fought, there was also many other things I had to do. Nitrogen fixing, tectonic realignment...I'm still seeking to move a rocky world away from a star that will begin to expand to consume it in less than half a cycle -- that I am rushing on.\" She nodded. \"So, I...when it comes to the...to what I was doing...I thought you were akin to the viruses and bacteria that could damage my subunits. And so, I created bioforms that could react the same way an immune system could, then let them work without thinking much about it. It was only when...I started to noticed that not only were they not working, they were being pushed back, that I realized I needed to change.\"\n\nLou nodded, stepping in as Bea looked back down at her soup. \"Beatrice doesn't normally perceive time the same way do either,\" he said. \"After all, her lifespan is measured in millions of years.\"\n\nMother dropped her fork. \"M...Millions?\"\n\n\"Our scientists pegged you at similarly evolved as us,\" Father said, sitting up.\n\n\"Oh, no!\" Beatrice shook her head. \"I am, according to Lou, almost seven hundred and fifty million years old. Do you have a means by which I can inject this material into my stomach?\" She pointed at the soup, nodding as she did so. \"Lou seems to be enjoying his a great deal, but this body is only made for interaction with him, and so, it lacks the human method of consumption. Instead, it is fed by having feeder grubs injecting with nutrients gathered from a centralized production facility.\"\n\n\"How...unique,\" mother said.\n\n\"How did you design the body?\" Bosch asked, narrowing his eyes.\n\n\"The same way I have designed all of my bioforms over the past two cycles. Initially, it was a great deal harder.\" Bea actually sat up slightly, her wings buzzing. \"So, you know how when a life form replicates using a complex biological molecule that encodes the information of the life form for future generations, there is a chance for coding errors to produce randomized changes in the future life form, and that then, the life form can breed, and natural forces will select only the life forms that are best adapted to their current situation for survival, allowing for a gradual change in all life?\"\n\n\"We're aware of it, yes,\" Bosch said, sounding tolerantly amused. Like she was a child. Lou squeezed her hand under the table and watched Bosch intently -- the Federal admiral was slowly twirling his emptied wine glass between his fingers.\n\n\"This is my first method,\" Bea said, nodding. \"When I still used sound waves to communicate between my sub units. So, to create new bioforms, I simply produced them at a great quantity and recycled those that did not fit what they were needed for, until I had generated the types of units I wanted. This was very fast, taking hundreds of years for each subunit, but it did take a lot of energy and was very inefficient...\"\n\n\"Good lord!\" Bosch sounded delighted. \"Your wife is a eugenicist.\"\n\nIt took every bit of Lou's decorum training to not flip the table over and fly at Bosch with his bare hands. Bea notice. \"Lou, why are you squeezing my hand so hard? Also, your blood pressure and heart rate have spiked, are you all right?\"\n\n\"The soup is very spicy,\" Lou said, his voice flat. \"My wife is not a eugenicist, Bosch.\"\n\n\"Akin, please,\" Bosch said.\n\nFather frowned, then coughed. \"So, I-\"\n\n\"What is eugenicist?\" Bea asked, her antennas twitching curiously.\n\n\"They-\" Lou stopped, searching for a good term that wouldn't insult his guest. Even if he badly wanted too. Unfortunately, that silence left an opening, an opening that the Federal filled.\n\n\"A eugenicist is someone who seeks to better the species by selective breeding,\" Bosch said, blithely. \"It is unfairly maligned in these degenerate times.\"\n\nBea cocked her head. \"What is bettering the species?\" she asked.\n\n\"Improving it,\" Bosch said, frowning. \"What else could it mean?\"\n\nBea blinked. \"There is no such thing as improvement,\" she said, frowning. \"This body exists to make my husband happy. But it cannot breathe in ammonia or survive in a gas giant or a photosphere. Oh, I've been trying to work that out, as stars remain stable far longer than planets, so if I could live in and around them, it would be much better.\" She nodded at Lou, then looked back at Bosch, her antennas perked up happily. \"But none of them are improved.\" She smiled. \"Besides, I don't get rid of any of the old bioforms, ever since I learned how to keep their genetic sequences and have acquired more places. I do not have large populations of some, but they are sustainable and are scattered across my places, where they can exist. Because...\" She blushed. \"Because...I...like...keeping them.\" She bit her lip. \"It makes me feel...nice. Knowing that the universe has more...in it. Then...then it used too?\" She looked at Lou, with a look he was growing to recognize.\n\nIt was a plaintive: Please, tell me what it is I am trying to say.\n\nLou smiled. \"You make the universe more diverse and beautiful,\" he said, taking her hand above the table, squeezing it. His heart hammered as he looked into her eyes, Bosch forgotten utterly as she smiled. Then she blinked.\n\n\"Oh! Also, I have an amusing Anecdote! That is a word I learned recently, and I wanted to use it!\" Bea said, looking at Mother and Father. \"May I share my Anecdote?\" she asked, speaking the word with such...adorable attentiveness. Ann-Ec-Dote.\n\n\"Of course!\" Father said, sounding cheerful as he finished off his soup.\n\nBea beamed. \"So! Nitrogen is a vital part of the means by which I fix energy into my planets. Energy comes from stars, and must be collected as most of it simply bounces away into space. The most effective means to collect it is by using bioforms that take in sunlight and combine it with various chemicals in the atmosphere -- what depends on the atmosphere -- and then transforming it into different chemicals and nutrients, which are then fixed into the soil, which are then used by other bioforms that I have created, which are microscopic in size. T-Technically, they are not bioforms, as all bioforms require an organ that allows them to communicate with one another, and I have not made that kind of communication organ small enough.\" She paused. \"O-Oh, well, um...\" She looked at Lou, who smiled and nodded at her, wanting to encourage her. She drew a breath. \"S-So, um, I had created a new bioform that I thought could fix nitrogen more efficiently! But it turns out that it leached out other essential chemicals from the soil and, if no corrected, would cause a systemic crash of the entire energy collection system within a mere ten million years!\" She shook her head. \"So, I had to revert to my previous bioforms, which is why it was very good that I kept them around!\" She smiled. \"That is my Anecdote!\"\n\n\"It's...quite interesting,\" Mother said.\n\nBosch smiled, thinly. \"Quite.\"\n\n***\n\n\"NITROGEN FIXING!?\"\n\nBosch grabbed onto the edge of his desk, then flung it upwards. The whole metal contraption went heeling over, papers and slates scattering along the office floor, sweeping past the metallic feet of Dr. Listens-Deeply-And-Considers-All. The Upkin was ignoring him -- his attention was entirely upon his own slate, which was projecting an image of their test subject. Her eyes, barely visible around the glass lenses that had been bolted into her skull, were still twitching and looking in each direction, twitching and wriggling wildly.\n\n\"Nitrogen fixing...\" Bosch growled, then started to pace. \"That's what it talked about for three hours. And that simpering deviant bitch just sat there, looking like a mooning calf...\" He shook his head. \"That thing killed millions of us and it didn't even notice, Listens Deeply. Do you understand? Do you grasp how monstrous it is?\"\n\n\"It is irrelevant,\" Dr. Listens Deeply spoke, his translation collar turning his chirrups and squeaks into language shared by non-cetacean humans. \"It could be the most gentle creature in the Milky Way and I would still desire its eradication. Simple pragmatism: If something does not exist to serve and maintain our future, then it is a potential threat, taken in a long enough view. A peace can last for five centuries and be broken in five minutes with the right change in...circumstances.\" His beady eyes flicked up to look at Bosch. \"I ask: Did you complete the ground based laboratories? We require them.\"\n\n\"My crew are still seeking for a secure location. More secure than this.\" Bosch glared down at the mess he had made, his lips pursing. \"Fortunately, the Neos are as bad at spying as they are at cooking...\" He shook his head. \"Disgusting, do you know they served snails? Chocolate coated ants? Foul.\"\n\nDr. Listens Deeply didn't respond. Instead, he flicked to the next image of Echo Three. This was of her, after she had been removed from the probe that had been launched into Proxima. Her body looked as if it had been smeared -- it was easier to grasp on a camera, where it looked like a piece of CGI manipulation rather than the physical reality. His eyes narrowed and he chirruped. \"We need a cavern, preferably beneath a shelf of copper or iron ore. The kind of place that would be used for neutrino detectors.\"\n\nBosch nodded. \"And the other sensors? What about them?\"\n\nDr. Listens Deeply let out a dolphin laugh, transformed into an eerie, robotic monotone by his collar. \"Ha ha ha ha...ha ha ha ha...ha ha ha ha...\"\n\nBosch sat down behind his overturned desk. He felt flushed and trembling and slightly foolish. He was now beginning to think about how much work it was going to be to put the desk back to rights. He frowned, hard.\n\n\"What is so funny, dolphin?\"\n\nDr. Listens Deeply looked at him. \"The sensors are detecting unique communications from the hive mind. They are analogous to human orgasms.\" He laughed. \"Ha ha ha ha. Your degenerate...is fucking his bug pet! Ha ha ha ha ha! Ha ha ha ha ha!\"\n\nBosch scowled.\n\n\"I wish I had a camera focused upon them right now...\"\n\n***\n\nLou and Bea lay together, on the grassy hill, and looked up at the stars. The suns had set, save for the tiny purple pinprick that was Proxima, and the sky was a luminous sweep of infinite beauty. Bea's eyes, though, were closed. She was focused, entirely upon Lou's voice and his fingers gently brushing through her hair, teasing circles around her antennas. Underneath the stockings and the shoes of her fine dress, her toes were curling. \"So, there are actually six other alien species that we know of. At least, they think there are six of them.\" He smiled. \"There are the Perseus Mumblers, the Andromedian Lighthouse, LMG-2...\"",
        "\"Squeeze my antenna slightly harder, please.\" Bea's voice was soft. Lou blushed, then gripped her antenna with his fingers. She bit down on her lower lip, then smiled. \"These are not fictitious like the Vulcans?\"\n\n\"No!\" Lou laughed. \"They're detectable via radio astronomy!\"\n\n\"What is radio astronomy?\" Bea asked, her voice soft. \"Touch my lips, please.\"\n\nLou's free hand slid from her hair. Gently, his fingertips rubbed her lips. Her tongue, feathery and soft and slightly dry, flicked against his fingertip. She murmured, very softly. \"I enjoy this a great deal...\"\n\nLou blushed then murmured. \"R-Radio astronomy is...we build machines that can observe the sky and we can detect a great deal of radio. And other electromagnetic bands! Can't you do that?\"\n\n\"Mm, never thought too...\" She said, quietly. \"I just observe stars, so I could learn how far away they were, which I needed for planning -- without that, I wouldn't know how to get to new stars to settle them.\" She paused. \"Touch my throat, please.\"\n\nLou's fingers slid down, caressing the underside of her chin -- and he expected to fine a heart beat. Instead, it was something closer to a tiny ticking sensation, faster and more feathery. She drew a short, sharp gasp, her wings fluttering. \"So...there were millions of years where I could have heard other voices? And I never even imagined it...\" She said, her voice soft. \"I...I do not feel sad. I am happy about those years. I...did make nice things, Lou. Even if you can't see it yet. I live in the clouds of gas giants. I compacted asteroids together until they became round, then seeded them with atmosphere and with life. I...\" She paused. \"I want to show you it all, some day.\"\n\nLou smiled. \"It'll be easy. I just need a lighthugger and a quick dip in a cryocrypt and we can head right there.\"\n\n\"But then you'd be gone...\" She bit her lip, slightly, craning her head backwards, looking up at him.\n\nLou grinned. \"You can pass ten million years without being bored, but you can't handle being without me for five years?\" His voice was playful, while his finger slid along her throat, down to the ruffled fringe of her dress. Beatrice smiled.\n\n\"Yes,\" she said, simply. \"It would be one hundred and fifty seven million, six hundred eighty thousand eternities alone.\" She paused. \"Touch my lips again.\" Lou, his fingers pausing a few inches away from her neck, drew away. Bea had enough time to make a soft little whining noise, her eyes open, before Lou leaned down, craning his back almost in half to kiss her upside down. Her upper arms cradled the back of his head, while her lower hands reached up to find his hands, interlacing midnight black fingers with his pale ones.\n\n\"That's not touching...\" she whispered as he drew back. Lou grinned.\n\n\"Sure it is,\" he said, quietly. \"Kissing is touching.\"\n\nLou grinned -- then blinked as he heard a scuttling behind him. He turned and saw a trio of hellgaunts, gliding along the ground with their alarming, liquid speed. Lou laughed, then yelped as they forced their bodies underneath his, then lifted him up onto their backs. Beatrice flew into the air, her wings buzzing as she darted down, then landed upon his lap again, cuddling against him. Lou, feeling decidedly unstable, balanced as he was on the backs of three sleek killing machines, clung to Beatrice and laughed out his question; \"Where, ah, are we going?\"\n\n\"Bedroom,\" Beatrice said, grinning at him. \"Being your wife, I have a wifely duty. GF said so, and it has been long enough. I am going to act upon it. I am going to do...the oral sex!\" She said -- and she was so excited that the hellgaunts spoke as well, hissing out in a sibilant chorus: The oral sex.\n\n\"Ah...\" Lou's face went bright red. \"R-Right, you know, uh, there is...no rush...\" He said, but he spoke without confidence. For, within Lou, there were two parts of him. The first that was deeply uncertain about the intersection of sex, sexuality, gender, romance, affection and Beatrice, an alien that could be deeply terrifying...and the other that was chanting, in a deep, primal tone, in the back of his mind: Fuck her! Fuck her! Fuck her! And Lou was easily twice as mortified by that base part of him than he was by Beatrice's earnest excitement to serve as a wife. He was supposed to be better than that.\n\nThe hellgaunts came to his parents country house and he realized that they were about to drive straight up the wall, or maybe through it. So, quickly he said: \"Whoa, whoa, whoa!\"\n\nThe hellgaunts slowed and Bea looked nervous. \"What?\"\n\n\"It is my...I...that is...\" Lou coughed, loudly, his cheeks flushing. \"My lady, may I carry you inside?\"\n\nBae's antennas twitched spasmodically, then curled up, then flicked out again, the Beatrice version of a sharp, hard blush. \"I...I...\" She gulped. \"Y-Yes. I am your lady. Me. Beatrice. Your lady. Yes.\" She paused. \"Your father is King Louis Benoit. Your mother is a Queen. Am I a Queen? I...no, you-\"\n\nLou chuckled, then slid off the hellgaunt. He picked her up and she actually almost bounced up and out of his arms -- she was so light. So fragile feeling. \"My lady, you are my everything,\" he murmured, not wanting to delve into the complex, Byzantine nature of Neopolitan inheritance. He knew, without needing to think twice about it, that she was the Countess of Venus, from a direct neopolitan perspective. No, no, wait, she was the Countess of Venus and the Sovereign Queen of Bernard's Star, Tau Ceti and Epsilon Indi, Empress of the Bugs, and Protector of...whatever her state church could be called. Protector of Atheist Determinism, he supposed. But all of that didn't matter, right now.\n\nThe only thing that mattered was in his arms.\n\nBea's antennas twitched and she cooed and curled in on herself, her face mashing against his chest. Her nose flared, breathing in his scent. \"Lou...\" He held her to his chest and walked inside of the house -- taking the servitor's entrance, then darting up the servitor's stairs. They were narrow and quiet and specifically built so that the nobility could sneak about their homes without running into other nobles, as servitors could simply hover in the interstitial spaces of a home.\n\nLou had expected needing to cross the amount of floor that made up the country manor would give him time to think through what he would do, to make his hands stop shaking, to make his heart stop pounding. Instead, he blinked, and he was there, in the bedroom, the door closing behind him. He laid Beatrice down upon the bed, and she looked so delicate and alien and beautiful -- a sleek, mothgirl, clad in the gorgeous gown that he had fabricated for her earlier today. His heart skipped and he stood at the end of the bed, breathing slowly.\n\nThis is my wife... he thought.\n\nBea gulped, then wriggled. \"I...I find it very hard to...to...move...\" She whispered. \"M-My whole...I...I am very nervous...but I am not nervous enough to tell you to stop. Lou. Please.\" She gulped. \"I wish to be with you, tonight. As your wife.\"\n\nLou smiled, slowly.\n\nAll his nerves melted away.\n\nHe crawled onto the bed, then, aggressive. Fast. His hands slid along silken sheets and then brushed past moth-slender wings, and then he was above her, his mouth on her lips. Her tongue seemed taken aback as his thrust into her lips, pressing against hers. Her upper hands laid limply to either side of her head, her lower arms stretched out. Her fingers gripped the bed, tightening more and more as Lou kissed her and kissed her and kissed her -- and he felt worries about his base wants, his duties, all of it were gone.\n\nThere was only Beatrice Benoit.\n\nHis wife.\n\nHis Bea.\n\nHe broke the kiss, panting, and found his hands upon her collar. There was a complex network of ties and lace and straps and buttons, which took a servitor to fully take on and of. Lou's mind weighed, for a single heart beat, the pros and cons of fumbling in the half darkness of the room with those bits of frippery. Weighed...and tossed it aside with a tiny, eager growl. Muscles, trained from youth to swing a sword without tiring, strained and silk parted with an almost painfully erotic rrrrrip noise. Beatrice drew in a sharp gasp, her antennas fully extending in shock as her cute, smallish breasts bounced free, her bright blue nipples hard as diamonds.\n\nLou fastened his mouth around one, his other hand gripping the tattered V that was her increasingly tattered dress. He tugged, and her arms wriggled, and she squirmed and twisted, her wings buzzing and battering against the bed beneath her as he managed to get his hand down to her belly button before she gripped his head, pushing him back, whispering. \"Lou, I cannot...I...my clothing, I-\" And Lou went from sucking upon her nipple to tearing. He ripped and tossed and within a flash of tattered cloth, she was left wearing...nothing at all. Her upper arms folded over her chest, her eyes wide. \"I...I feel...\" she whispered. \"N-Naked...\" Her voice came out as a soft, almost awed whisper. \"I-I've never felt naked before.\"\n\nLou smiled, slowly. \"You're beautiful.\"\n\n\"I...am?\" she gulped. \"B-But...I still don't know if-\"\n\n\"You are beautiful, Beatrice. My wife...\" His tongue slid along his lips slowly.\n\nBea's head bobbed. Her antennas curled, shyly. \"I wish to see you naked, my husband...\" She gulped. \"I wish to see you very badly. Very badly.\"\n\nLou bit down on his lower lip -- torn once more. Slow? Fast? But then he realized that if he waited a single moment longer than he needed, that whatever Bea wanted wouldn't matter: He would be dead. And so, he grabbed onto his top and tore it off with a fierce snarling sound. His buttons popped and pinged, skittering along the hardwood parts of the floor before wedging into the carpeting. Bea's mouth opened into a perfect O of shock, her antennas unfolding with a click against the headboard as her lower hands reached tentatively up, touching his belly, then sliding along his skin. But Lou wasn't naked yet. His hands undid the belt -- tugged, threw, then shoved his pants down and then Bea's hands dropped away, her eyes widening even further as his cock sprang into the air.\n\nHis maleness was so very, very hard.\n\nAnd...\n\nHe...\n\nHad...almost forgotten how...\n\n\"It's...l-large...\" Bea gulped, her eyes wide. Her antennas slowly curled up and she shrunk back into the bed. \"V-Very large...\" She whispered, her lower left hand reaching up to touch him -- then drawing back, and Lou felt...the most absurd flare of absolute machismo. Louis Benoit XII...well hung enough to intimidate a hive mind. He grinned, then grabbed her wrist with his own hand -- the contact of flesh on flesh seeming quite loud in the silence of the room. Bea froze -- and then Lou dragged her hand up and pressed her smooth, dark hand against his shaft. Instinctively, her fingers curled around him -- and her fingertips did not touch her palm. Bea's antennas twitched faintly and she breathed out a soft: \"Very large...very...very...large...\"\n\nLou nodded.\n\n\"I...shall proceed to apply my...what...I was told- EE!\" She squeaked, her eyes widening as Lou gripped her antenna -- then pushed her backwards. Her hand gripped his dick, but then he slipped free as he reached down and picked her up, his palms cupping her perky, smooth rump. Her neck tilted and her chin bumped against her own breasts, her wings beating and fluttering against his sides.\n\nLou looked down at her. Hungry. Fierce. Her eyes were wide as he murmured. \"You comfortable?\"\n\n\"T-This form is quite sturdy, I am...quite comfortable.\" Then, the words tumbled out, a proud braggadocio to cover how nervous she clearly felt: \"\"A-Ah, my clitoris has more nerve endings than every form within ten kilometers c-\" before he buried his face between her thighs and slid his tongue into her sex, tasting her sharp vanilla taste -- his eyes closing as his nose bumped against the bright blue bead of the clitty she was so clearly proud of. His tongue curled up, feeling her sex tightening around him as her hands scrabbled, her lower arms reaching up to squeeze onto the headboard, her lower arms grabbing onto the edges of the mattress as her legs kicked out, her body curling up a bit as he tongued at her, following nothing but his instincts and the sounds of her pleasure.\n\n\"Oh Lou, oh my husband, my lovely husband, oh yes! Yes! Yes! Yes! This feeling...I don't...even know...I...ah! You're...I'm...I can't...I can't feel my roots!\" She closed her eyes, panting.\n\nLou slid his mouth back just a bit, then closed his lips around her clit. He sucked.\n\n\"Ahhhhhhhhh!\" Beatrice flung her head back, her spine arching, her wings beating against his sides as her juices gushed into his mouth. They glowed. And they tasted deliciously of vanilla as his mouth closed around her sex, drinking from her as her juices dripped down his chin and pattered onto his throbbing cock, which bumped against the down fur of her shoulders. \"Lou! Lou! I'm losing my mind! Ah, yes! Yes! I...yes! YES!\" She trembled as he cupped her entire body with one hand, effortlessly holding her lightness up -- freeing his hand to slide his middle finger into her sex, which made the most delicious, romantic sound he could imagine as she welcomed his finger into her tightness. \"Louuuu!\" She whined and trembled, a thin spurt of glowing girlcum escaping his finger, soaking along his palm.\n\nLou drew his mouth back but kept his finger buried inside of her sex, cradling her up. His finger crooked inside of her and she let out a soft, little whine. \"L-Lou...I...I...\" Her eyes glimmered -- not with tears, but with such intense emotion that it nearly hurt his soul to see them. \"I...can't...take any more...I...\" She gasped. \"Stop. Don't stop. Keep going. No more. I can't...\" She bit her lip, then turned her head, her antennas twitching. \"More more more more more!\"\n\nLou chuckled, then leaned forward. He kissed her clit -- and drew a gasp from her, her entire body rocking, her hands gripping the bed so hard that the structure of it creaked. She cried out her bliss -- and with it, words. \"I LOVE YOU! I LOVE YOU I LOVE YOU I LOVE YOU!\" She trembled as her juices gushed along his palm and Lou drank his fill, laughing -- laughing. His eyes closed and he nearly choked on her, drawing back as he laughed, his finger sliding from her as he gently laid her onto her back, slipping his palm free. She gasped heavily, her eyes unfocused as she mumbled. \"I can't feel my roots...\" She breathed. \"Or the seedlings or my clouders...or the talons...\"\n\nLou leaned down, placing his elbows to either side of her head, keeping his weight entirely on his arms, his legs, his core muscles tightening as he murmured. \"You love me?\"\n\n\"Yes...\" She murmured, her eyes half closed. \"I love you...\"\n\nLou, his cock throbbing against her sex, leaned in close. He kissed her neck. She hissed. He bit her. She mewed. He kissed her jaw. She shivered, then whispered. \"S-So much...so much so much...ah...\" She breathed. Lou kissed to the curved hole of her ear. His tongue traced the edge -- and she whined. \"Nnnh! Too much. Ah. I...\" She trembled. \"I can't feel my roots...\"\n\nLou whispered. \"I love you too, my Beatrice.\" He tilted his head and kissed her lips. Then, softly. \"What are your roots?\"\n\n\"Mmmhh, rootbased bioforms...I...\" She opened her eyes, then whispered. \"O-Oops...\"\n\n\"What?\" Lou asked.\n\nHer antennas flicked, then curled slowly in on themselves. \"I...m-may have released pollen clouds. On each of my rootbased bioforms. On each planet. T-They...it's normally...I-I don't normally do it all at once! It's such a mess!\" She put her upper hands over her face, squirming. \"I...I made such a mess! Oh! I'm sorry, it'll take months to tidy up!\"\n\nLou...had the smuggest grin plastered on his face. A smug grin shared by a select breed of men across history. They had never been as rare as some more patriarchal popular media liked to portray -- it was the most pernicious part of sexist cultures, it tended to wound every gender along the spectrum indiscriminately. But there was some truth to the stereotype, enough that the boys who had escaped it had ever right to be very...very smug.\n\n\"I eat pussy good,\" Lou murmured, as millions of twenty year olds across history had, basking in the glow of their lover.\n\n\"You...is that the oral sex!?\" She asked, her eyes wide. \"GF was a liar! He said that it was merely good -- not the single most extremely most good thing in...I...do not have enough superlative words in Canasian to describe how most...most it was!\" She trembled. \"I...\" She blinked. \"I cannot move...I-I believe my body is too worn out from pleasure to...to...\" She trailed off.\n\nLou had reared back. He was gripping his cock, feeling the heft of himself, marveling at how much difference a relatively small bit of flesh and tissue could make him feel at this moment. His tongue swept along his lips, tasting his wife's pleasure upon him -- reminding him of just what he was capable. More confidence. Dizzying amounts. His grin grew wicked .\n\n\"A-Are...you going to...\" Bea gulped. \"Penetrate me?\" The words whispered from her breath and burned in Lou's ears.\n\n\"I...think...\" Lou murmured. \"I am going to do something that no Neopolitan prince should, my wife. I am...going...to fuck you.\"\n\n\"O-Oh...\" Bea shivered from her toes to her antennas. \"Ohh...yes. Yes. Yes yes yes yes yes yes yes yes yes!\"\n\nLou had, in his life, only felt three imperatives. They had been sensations so intense, so shockingly powerful, that they had leaped past his conscious mind and rushed straight to raw, physical action. The first had been the first and only assassination attempt of his entire life -- a bomb drone, smuggled into his manor house by what had later been discovered to be AnCom criminals. He had seen it and seen the peril to himself and his mother and sprang to act. The second two had been significantly less heroic: Dislocating a kneecap while sparring, and breaking his tibia...while sparring.\n\nPain. Fear. Both could spark immediate action. Or, in the case of his tibia and kneecap, inaction.\n\nBut neither of those was more than a candle to the starflame, to the atomic spark, of his wife begging him to fuck her. His hands grabbed her ankles, lifted her legs, and pinned her ankles above her head, bending her almost completely in half, pressing her into the bed as his cock slid against the hot, glowing eagerness of her cunt. His cocktip opened her folds and she leaned her head up, planting her mouth against his -- her tongue thrusting into his mouth as her upper hands cupped the back of his neck, her lower hands reaching down. One squeezed his balls. The other guided his cock into her as Lou thrust and impaled his wife upon his manhood -- and felt the visceral, bone deep thrill, the raw blazing excitement, of filling her. Claiming her.\n\nMine.\n\nHis mouth broke on the kiss as he looked down at her, a thin line of spittle connecting her tongue tip to his, her eyes half closed as she panted and whimpered, her whole body trembling. \"I...feel...so...full!\" She panted, her eyes half closed. \"N-Next body...even tighter...\" She grinned, shyly. \"More nerves. More flex. More arms.\" She murmured, nodding, her hands gliding along his body -- caressing him with wonder, with love. A single finger traced a circle on his shoulder blades. She teased along his ear. She gripped his balls. She held his elbow. She touched him everywhere and he felt as if he could drown in her eyes.\n\n\"Spider,\" Lou growled, without thinking.\n\n\"Yes...\" she breathed. \"My husband...I want you to...continue to move yourself inside of me. Rhythmically.\"\n\nLou nodded, then started to rock his hips. He clenched his jaw, trying to keep his orgasm from rushing through him at lightning speed -- but the silky, slippery slickness of her cunt, the tightness of her sex, all of it was so much. Her fingers. Her lips as she leaned her head up, kissing his forehead. Nipping at him. Her breath was soft, her voice an eager whisper. \"Faster...harder...more more more more!\" She nipped at his ear and Lou snarled, then began to fuck her into the bed. He felt as if he had been unleashed, as if some kind of feral beast was in his skin, and his whole universe had focused upon a single, blazing hot point. His hands gripped her curved thighs and her dainty ankles hooked behind his back as he pinned her into the bed, his firm balls slapping against her ass, the meaty plap plap plap sound of the impact making him so very glad he'd asked for big, big balls.",
        "\"Lou! Lou! Lou! Lou! Lou! Lou!\" Bea gasped. \"Oh Lou! OH LOU! OH LOU! LOU! RHYTHM! FASTER! FASTER! YES! YES! RHYTHM!\"\n\nLou calculated rocket equations. He recalled the name of every king of Israeli. He worked, mentally, through the dance of time. It wasn't enough. Every attempt to root himself in the mental, to allow his body to continue to do the sacred work of bringing his wife pleasure, but nothing worked. There was nothing for it but-\n\nHeat.\n\nBurning.\n\nBoiling.\n\nA flare of white before his eyes, filling him as he trembled from his toes to his head, gasping heavily as he trembled. His cock was still aching as he felt the pulse, pulse, pulse of his cum, and he felt the heat of his own spunk, hot against his thighs, his belly. He blinked slowly, trembling -- and he looked down and saw, glowing faintly through Bea's skin, a bright purple blotch, swirling slightly. It was the heat of his cum, visible through her body. He saw that her pussy was just deep enough to take his cock and no more -- his purple spunk was soaked along her thighs, having splashed out of her with the second, third spurts...\n\n\"Whoa...\" Lou whispered.\n\n\"Nnh...hu...hu...f...fu...full...\" Bea whispered, her eyes wide, her back twitching. \"F-Full...words...hard...\" Her wings fluttered and Lou slowly slid out of her sex and watched his thick cum dripping from her cunt -- oozing free, making her look even messier, even more marked.\n\n\"You...don't have a womb?\" he asked -- half questioning, half relieved, while a part of his brain, a dour, angry voice that he couldn't ignore even if he wished too, snarled at him: You fool. You idiot. You didn't wear a condom? You blackguard! You scoundrel! Are you some AnCom knave, to just cum inside of a woman without asking if you could first? He knew it was ludicrous, he knew it was preposterous, but the voice didn't shut up.\n\n\"N...No...\" Bea panted, her breasts heaving. \"What is womb?\"\n\n\"It...it's where babies are made. With-\"\n\n\"Oh!\" Bea sat up, gasping. \"Your mother was speaking of how...\" She panted. \"How she wanted to have grandchildren! I will have to have a body with a womb immediately!\" She nodded. \"Five wombs! No, seven!\"\n\nLou gaped at her. \"W-What?\"\n\n\"To ensure sufficient stock!\" Bea's arms wobbled and she fell onto her back. \"Oof. My arms are sticks...\"\n\nLou shook his head and snorted, despite himself.\n\n\"It is not a situation of humor!\" Bea huffed. \"T-This bioform needs...many upgrades. More wombs, twelve at least, better endurance, um...more arms...\" Her eyes half closed. \"A throat, stomach. Taste buds...\" She nodded again. \"Dislocating jaw...two tongues, maybe...\"\n\nLou slowly laid beside his wife. He looked her up and down, breathing slowly.\n\nI love you.\n\nThe words echoed in his head -- spoken in haste, in lust. But they were shining and they were true. His hand slid to her belly, gently, caressing her.\n\n\"And...I will begin reading about human aesthetics...\" Bea's eyes closed fully. \"I...must go and clean...\" She murmured. \"Watch over me, Lou. I love you.\" She slackened, her breath becoming steady and slow. Lou leaned down and kissed her forehead.\n\n\"I love you too...\" he murmured, then laid beside her.\n\nAnd this time, his dream was of endless fields of alien flowers -- their seeds drifting upon the wind, alighting upon the finger of his wife, smiling and gentle and pure.\n\n \n"
    ],
    "authorname": "DragonCobolt",
    "tags": [
        "awkward dinner party",
        "alien",
        "alien sex",
        "big dick",
        "cunnalingus",
        "moth girl",
        "romance",
        "sex",
        "space opera"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/pax-multi-pt-04"
}