{
    "title": "Arian's Pool Ch. 04",
    "pages": [
        "It was all beginning to get terribly real now, and I knew that my chances of getting home to deliver was zero. I thought about my options.\n\nIn the box in front of the squashed shelter Mike had built I knew was a whole mess of stuff, including a thermal blanket and I hoped desperately his cooker and pans would be there, I was bound to need hot water after all. If not there would be matches or a lighter and I'd make the best of it.\n\nBut before I considered the long term, I had just to get over the small point that my waters had broken and I was probably five or ten minute shy of giving birth. The pain wracked me again, and as I looked across the clearing to where Benny was now patiently sat waiting at the standing rocks with the occasional wag from his tail, all I could see was grass and dust floor \u2013 neither ideal to give birth on; where to do this, where the fuck could I do...\n\nHot water... a water birth! Into Pwll Arianrhod, the hot water treatment to beat them all.\n\nI felt a new calm envelope me, and as the last contraction faded, I stood without pain or second thought. I quickly slipped off my grey hoodie, pulled off my T-shirt and hung them on the branch that Mike had shaped to hang his jacket on and I stepped naked into the cold water, happy that I'd be in the comfort and reassurance of the hot springs in seconds.\n\nI slumped into the seat of stones I knew to be there, and as it had so many times before I felt the pain and the emotion leave me in the warm comforting waters. I tipped my head back and felt another contraction but the pain was minimal compared to what I'd had previously. I thought about whether I should begin to push at the next contraction and raised my thighs like we'd been taught at the lessons. I soon found that the rock shelf had two perfectly placed stone supports just in the right place and I didn't need to hold on to my thighs. \n\nI laid my head back, thinking 'this time Maggie,' and looked up. I had to take a second glance. The three quarter moon I'd so admired was now full. I was no astronomer but even I knew that wasn't possible and I started to feel just a little afraid.\n\nFrom my left there was a gentle 'huff' from Benny, and I looked across to make sure all was well with him and saw none other than Jess in of all things a dressing gown walking between the stones and stroking Benny's head.\n\n\"Jess!\" I cried out in relieved delight and she turned to me and smiled. She looked back between the stones and spoke.\n\n\"She's made it, knew she would,\" and she walked towards me with a cursory stroke across Benny's wide black head, \"you let the others through Benny Boy,\" she said and slipped off her dressing gown and stepped into the pool naked. It was a view of her I'd never had before, but I was rather concentrating on other matters. Behind her was Sue, one of ladies from the village supermarket similarly attired and in a second I was looking at her as she stripped naked and she too stepped into the pool and walked towards me.\n\n\"Hello Darling Maggie,\" said Jess, stroking my face and wiping my sweaty hair from my eyes and kissing my cheek.\n\n\"Jess,\" I said, \"What's happening, how did you know...\"\n\n\"Ssssh Darling,\" she said, \"You're in Ffraid's pool and it's all going to be fine, your baby will be along any time soon.\"\n\nThe other lady was on my other side, and holding my hand.\n\n\"Thanks Sue,\" I said and looked up into her beaming face; with her being naked, for the first time I saw that she was wearing a silver cross with a blue circle in the centre; I looked across at Jess she wore one as well. Somehow I knew that she always had.\n\nFinally, I looked across and there was Myra, Dr Gethwynn's long suffering secretary and receptionist, her T-shirt hanging on the branch next to mine.\n\nShe stepped into the water and took her place between my legs and I felt her hands on my thighs.\n\nMyra's hands on my vagina and two fingers touching me where I was splitting to allow my child into the world. \"Almost there,\" she said, \"you're about as dilated as you can get Maggie so when you're ready Darling.\" She smiled and nodded at Jess and Sue, \"On the next contraction Maggie,\" said Myra, \"give me a long hard push my Darling.\"\n\nI felt the contraction start in my boots and started to pant and pushed down for all I was worth. \n\nThe few clouds cleared and the full moon filled the clearing and pool with perfect white light, with Jess one side and Sue the other both holding my hands and supporting me I gave it all I could and I took a deep breath as the contraction ended.\n\nThe warm water felt so soothing, and I lay back.\n\n\"Well done Maggie,\" said Myra, \"Another big one Darling, all you can for Arian.\"\n\nWith the next contraction I bore down with every ounce of energy I had and felt something give down there. Myra held up a hand and reached down into the water and looked at me with a beaming grin, \"Well done Maggie, you've delivered the head, now on the next one just a nice gentle push until I tell you to stop.\"\n\n\"OK!\" I gasped, ecstatic that this could almost be over and that there were three friends here to help me. As Myra dipped down into the water I saw that she had a silver chain around her neck and as she popped up slightly I saw that it was the same silver circular blue moon pendant that I wore! Again, somehow I knew that she always had.\n\nThe next contraction came on and I pushed and I saw a gush of bloody water between my thighs and before I knew it, a small wet human being was raised out of the water and laid into my arms. I laughed and cried all at the same time, a delightful mixture of relief mixed with joy and a vast wedge of gratefulness that my three friends had all been here to help me.\n\n\"It's a boy Maggie,\" said my midwife Myra, \"And he's perfect.\" And he was perfect, and I fell in love with him there and then. \"Do you have a name yet?\" \n\n\"Ceri,\" I said.\n\n\"Lovely name,\" she said, \"Nanna Bennett would have been proud of that?\"\n\n\"Diolch yn fawr Santes Ffriad\" said Jess, Myra told me that Jess has whispered, \"Thank you Saint Brigid.\" \n\n While everyone was still crooning over my new son, Myra dipped down in to the water and removed the afterbirth and using I knew not what, cut Ceri's cord. \n\nMyra stepped from the pool and walked across to a steep earth bank and reverentially lay the red mass down and following the briefest inspection in the moonlight, pulled leaves and moss and soil to cover it. \"Dyma i chi Arian.\" 'This is for you Arian' I was to learn later.\n\nSue and Jess in the meantime, were cooing over me and checking I was OK and talking away to Ceri, in some English and some Welsh. Myra returned and stepped back into the warm water and she too cooed over the new born.\n\nAfter a few minutes of this Myra spoke.\n\n\"We'd best get this girl and her darling baby back to her bed.\"\n\nI was barely starting to recover from giving birth and the thought of walking forty five minutes back to my house made my shoulders drop.\n\n\"Awwww, don't worry Maggie,\" said Jess with a knowing grin, \"We'll show you the shortcut...\"\n\nCeri was wrapped in my hoodie and held by Jess, while Sue and Myra helped me out of the pool and into my T-shirt. They put on their T-shirts and gowns.\n\nInstead of walking back around the pool, and following my track, they held my hands and led me between the standing stones, and after a minute's walk I found myself dead tired and in the back garden of Jess' pub and then carried upstairs by Dai into the room I'd stayed in all those months ago when I first came to see my little Welsh village for the first time. I fell into a deep sleep.\n\n I woke to the opening of curtains the next morning, and Doctor Gethwynn's beaming smiling face.\n\n\"Good Morning Maggie,\" he said, \"and congratulations on the birth of your son! I've just checked him over and once you've had a bit of rest, couple of days I'd say, you can go home!\" He raised my duvet and quickly checked over my parts and laying an absorbent pad back over them, grinned and nodded.\n\n\"Thanks Doctor,\" I said, still trying to come to terms with where I was and what the fuck had happened to me last night.\n\nI sat up and there in a cot next to me was a tiny sleeping form of the perfect boy I'd given birth to the night before in just the strangest circumstances. Jess was stood behind the Doctor holding a tray of breakfast things.\n\n\"No problem,\" he said, \"Pop in to the surgery in a couple of days and we'll give you the paperwork to go and register your boy. I'll leave you ladies to it.\" He left and saw himself out.\n\nAs Jess came towards me I heard a 'huff' sound from the floor, and there was Benny, lying between the door and the crib.\n\n\"Oh shut up you silly furry bastard,\" she said to him and I saw him drop his head back down between his front legs, with a few brief flaps of that long tail of his.\n\n\"What happened Jess?\" I said sipping the tea she'd handed me.\n\n\"I don't know lovie,\" she said, \"None of us do.\" She raised the plate of fried food and put it on a sliding table across me. \"We get the call, and we just sort of go into the trees and come out between the stones.\" She poured herself a cup of tea and sat on my bed with it. \"My girls were both delivered in Ffraid's pool, I took the waters mind you.\" She whispered, \"Me and Dai were having a bit of trouble see.\" She carried on, \"I woke up just shy of my due date and went into my garden out there. Before I knew it, I was in the pool and bearing down on a pair of twins. Nanna Bennett delivered my girls, Myra took over. Myra's a midwife anyway so it's not such a struggle, she's already teaching us, for when she hands over.\"\n\nShe reached across and touched my pendant. \"You're Nanna's heir see? One of Arianrhod's daughters.\"\n\n\"I am?\"\n\n\"Oh yes,\" She tilted her head back, \"Always five of each; you, and Myra, Lin from the school, Gwen Thomas and another I can't remember, oh the girl from the chemist...\"\n\n\"Brenda?\"\n\n\"Brenda!\" she said triumphantly, \"Brigid and Arianrhod know who're useful to them. Always three, and always two and one, never three.\"\n\nShe lay a flat hand on her chest absent-mindedly and touched her cross. \"I'm one of Brigid's daughters see? \" she held up her cross with a centred blue silver circle I'd not consciously see before, \"Been chapel since I could walk. I got this from old Mrs Morris once she got too old to clamber in and out of that bloody pool!\" She chuckled, \"Me and Sue, Pastor Tom's wife Nancy, Dai's sister Penny and her mother in law Martha. Nanna Bennett was still getting the call up until last year, right up to when you arrived in town. She saw you in the woods Lovie, she knew you'd found the pool,\" she grinned at me, \"Knew you were coming; told Myra so she did. Knew that an outsider was coming to join the sisters. She guessed it was you when you bought her Nanna's old place. Once Arianrhod had you and your man, Nanna knew it was just a matter of time and that she could move on.\"\n\n\"Move on? Where to?\"\n\n\"Whatever comes next Lovie,\" she shrugged her shoulders, \"whether you're Ffraid's or Arian's, it just the same, this life finishes and then it's whatever comes next.\"\n\n\"So do I have to be... well, like Nanna Bennett, do I have to...\"\n\n\"You'll know lovie,\" Jess smiled, \"same way we all do. The pool affects us all in different ways; Nanna knew you were coming, I didn't know that you were going to be a daughter until I first caught sight of Nanna's necklace there, a few weeks after you told me you were pregnant. Myra told me what Nanna had told her,\" she breathed a sigh, \"close those two, always were. Arian's daughters always are,\" she pointed at my neck and I held my pendant tighter, \"It's not a big responsibility though Maggie; your time will come, same as me. You'll get the call and before you know it you'll be walking down your garden in a nightshirt, then minutes later holding the hand of some scared girl that's having her first baby; it's all like so much of a dream.\" She lay back against the headboard with an arm around my shoulder and closed her eyes, \"My girls came along 20 years ago; a year or so after I was given my cross by Mrs Morris I received the call and found myself at the pool with very little memory of how I got there.\"\n\nCeri snuffled and we both looked across to his peacefully sleeping form under his blanket that Jess and Dai had got from my place.\n\n\"How many have you delivered, how many a year is it?\"\n\n\"Awwww, got so that I don't remember half of them now; some I can, like Baby Ceri there, and Sue's son Owen of course but others? Half the time I don't know whether it happened or I dreamt it, and I kind of think that's how Brigid and Arianrhod want it.\"\n\n\"But...\"\n\n\"Don't try to understand it Darling,\" she said putting a finger on my lips, \"I don't know how it works and I don't try to. I just know that there are hundreds, probably thousands of people that have fallen in love and as many babies making their way through the world,\" she closed her eyes and waved a hand through the air in pure pleasure, just as Nanna Bennett had those months ago, \"because of a little bit of magic!\"\n\n Myra the midwife called around that evening with the paperwork that the Doctor had spoken of, and we sat in Jess's living room and I fed Ceri for the first time, and Arianrhod's bond was set for ever. My milk flowed and Ceri latched on with both Jess and Myra cooing over him again. They showed me how to change him, and to 'top and tail' him.\n\nThen after breakfast on his third day, with Jess walking Mitch and Benny alongside me pushing Ceri in his buggy we walked to my house and installed Ceri into his cot in my bedroom. I made tea while Mitch and Benny ran around the paddock in Labrador insanity after three days of either guarding me or trying to steal my meals.\n\nI will confess that I had a few fears about what was going on; secret societies of women, Christian and Pagan, five of each appearing like three witches through standing stones to a mysterious pool that sometimes wasn't there, all by magic. I could have been living in a bloody Stephen King story. \n\nBack in my house with my woods and my bit of river in sight that led to our pool, I watched as Jess hugged and fussed over my baby and just knew that there was nothing dark about Pwll Arianrhod, unless you took it with you.\n\n\"And you promise me you'll be OK Darling?\" said Jess, for the fourth time checking my fridge and freezer.\n\n\"I'll be fine Jess, honestly,\" I said with a tear in my eye, \"you've already done so much for me, for me and Ceri, and we'll walk around tomorrow lunchtime I promise!\" I pulled her into a hug, \"Thanks Jess,\" I said, \"Thanks for being there, for holding my hand through all of this.\"\n\nShe gulped back her own emotion, \n\n\"Aww, a pleasure Maggie,\" she said, \"you always know where me and Dai are. Besides,\" she grinned, \"You have Brigid and Arian on your side as well, everything will be fine Lovie.\" She kissed my cheek, and bent down and pecked a tiny kiss on Ceri's tiny cheek, gave me a cheeky wave and left.\n\n And so Ceri and I spent our first night alone in our house. I was set up quite comfortably and had already contacted my employer and told them I'd had my baby and because of it my maternity pay would be rolling into the bank for the next 6 months at least.\n\nI sat in my arm chair with Ceri in my lap quietly nursing from me and for the first time he looked up into my smiling face and I felt my tears come. \n\nNot from sadness and baby blues but from the huge, all embracing love I felt for my Ceri.\n\nSensing this, Benny was sat in front of me and checking that I was alright, sniffing and snuffling around the blankets that Ceri was swaddled in. With a wagged tail thumping rhythmically on the floor he 'huffed' in that way of his and settled back on the floor content that all was well.\n\n I thought about heading back to the pool; I knew that Ceri would need a bath soon and could think of nowhere better for him to have his first one. I would do that, thank Arian and Brigid and as Nanna had pointed out to me five months ago, heal my body and soul.\n\nBecause after all things, I still missed Mike. I had the one thing I'd wanted my whole adult life and now I wanted desperately to share it with the man that had been the other half of Arian and Brigid's work. \n\nI'd gotten used to him not being there, but had still walked to my pool as my belly swelled and bathed away my cares and concerns with my aches and pains. I thought back on the moments we'd shared and it wasn't just as lovers, as sex partners, we were way more than that. I loved him, and would have given everything to have him back in my life with our son.\n\nI hoped that whatever miracle had brought me my son I hoped that something similar would bring Mike back to me. As I lay there back in my bedroom, thinking of all the goings on in the last weeks and months, chances are if I waited for the full moon, as one of Arianrhod's daughters my wish might come true.\n\n I knew that I had to tell my family about Ceri so contacted my Dad and then my sister and said that I'd come and visit in a few weeks. Theresa said she would take a couple of days off work, and I wondered whether she'd heard something in my voice that gave her a hint that I had 'news'.\n\nSo almost two weeks after his birth that spring I took Ceri back to that pool - 'Pwll Ffraid', or 'Pwll Arianrhod yn' if you were following the more pagan tradition. \n\nThe night I'd walked there two weeks ago seemed like a dream, just as Jess had described it would and this time it took the full forty minutes that it always had!\n\nBenny was no longer trotting along and popping on and off of the path I'd beaten over the last year, but circled Ceri's buggy like an impatient German shepherd waiting for the bad guys to arrive. I giggled and stopped to pat his broad and intelligent head,\n\n\"Thank you Benny,\" I said, and he closed his eyes and writhed his head around just as he always did, and flapped his tail.\n\nHe walked on a bit, and stopped to look back at me; his look all but spoke, \"well come on; what are you waiting for?\" \n\nI walked on and there it was, the curtain of steam dissecting it in the way it always had.\n\nI had a quick look around and walked across to where Mike's last shelter had been; the small tree still laying across it where it fell nine months ago.\n\nThere was no sign of Mike; I'd had a feeling all the way here that I'd find him this time, naked in our pool, with a smile and that look he gave me that told me I was his girl; well, that was how I'd read it at least.\n\n\"Please Mike,\" I closed my eyes and held my pendant, \"please come back to me.\" I thought I heard a shout from some distance but thought it just a cry of the one of the many hunting birds in the Welsh hills and mountains. \n\nI stripped naked ready to bathe Ceri in those twice blessed waters happy in the knowledge that he would thrive and grow strong, and I'd say thank you to Arianrhod and Brigid, just so I wouldn't upset either of them. I didn't know why, I just had to.\n\nWith my faithful Benny standing guard over us both I stepped into the water; it was normally refreshingly cold but for some reason today it was like it was almost warm, as if it especially for this thanksgiving and Benny lapped at it appreciatively and I took that as his approval.\n\n Benny had quickly decided that the tiny mewling monster that had arrived that night in the woods was now the new most important thing in house and his world - even over me - and would stand (well sit actually) guard next to Ceri's crib or his car seat and huff at anyone that got too close. He even gave up his commanding view of the landing and front hallway to lay across the threshold of whichever room Ceri was in. His over-watch was something that I had gotten used to and it helped me to relax. I turned my back into the warm water and felt that familiar wave of peace wash over me.",
        "Benny walked across to his usual spot by the remains of Mike's shelter and lay down, content that all was well in the world.\n\nAnd so I turned my back to the steamy mist ready to back up onto the stone seat.\n\n\"Maggie?\" I heard the voice I'd been hearing in my dreams for so long now and thought it was just the effects of the pool and another way for Arianrhod to calm me down. I heard the thump of Benny's tail and turned to see what he was so happy about.\n\nThere in those same crappy denim cut-offs I'd seen him in almost a year ago was my lover, my love, and I had to look twice.\n\n\"Mike?\" I gasped.\n\n\"Maggie!\" he called and started to run towards me.\n\nHe stopped as I turned and he could see me cradling Ceri, my cheeks aching from the huge grin I had on my face. Again, it seemed that Benny detected no danger with Mike around and sat proudly at the side of the pram I'd pushed through the woods for this morning's work, his tail thumping the ground at the sight of his old friend.\n\n\"Maggie!\" he called across the still water of 'our' pool, his mouth flapped as I turned and showed him the child in my arms. His mouth hung open for a brief moment and the look of surprised but still happy shock on his face. He unbuttoned his cut-offs and all but threw them down, and tore off his T-shirt, kicking his trainers into the grass beside him. \"Why... why didn't you tell me?\" He stepped straight into the water sliding down and took one step across to me and put an arm around me to stare down into the gorgeous face of his young son, just a fortnight old.\n\n\"You stopped coming,\" I said, \"I thought that you didn't want to see me anymore. After Christmas I contacted Bart's and they said that you had taken a sabbatical and wouldn't tell me where you were or take a message. I had no way of contacting you did I.\"\n\n\"I came back,\" he said, \"Every day for a month, I've all but built a bloody log cabin back there,\" he said. \"I came dozens of times, but I couldn't find the pool. I couldn't find the place Maggie, I tried for days and days, I parked in the same spot walked in the same direction, but for all those months I couldn't find the pool, and it's not even on the maps.\" He looked up, a few tears in his eyes, \"I put pegs down so I'd know where I'd checked, but when I came back I'd find them in a pile where I parked. It was spooky, first I thought it was kids but there was no way anyone could get to our bit of wood, I even camouflaged them, but then each morning when I woke up, they'd be in a pile by my shelter. \n\nI headed to what I thought was the nearest village and walked around looking for a house numbered seven that backed onto woods and looked like yours and even calling Benny's name. No one had ever heard of and English girl called Maggie, I don't think I was in even in the right town.\n\nI figured that I'd really blown it and I was lost and devastated. I took time off from Barts and moved further up here, rented the cottage I stayed in before, five miles from here. I took a couple of months off but had to go back to work. \n\nSo I started to share my time between Bart's and The Worcester and Hereford, I wouldn't give up on my woods, I wouldn't give up on us.\" He looked amazed and perplexed at the same time. Then he grinned, \"It came to me this morning, driving here; figured I was trying too hard, and perhaps... I know this sounds daft, but perhaps the pool had to find me.\"\n\nI pushed my cheek next to his to impart some tenderness to him, and his stress after months of struggle. I told him of my efforts.\n\n\"For a fortnight I couldn't even find the pool, then did all of a sudden. I came back once or twice a week during my pregnancy,\" I said, \"I felt you were close, or at least trying to get close.\"\n\n\"That absence made me realise how much I still loved you, still needed you.\"\n\n\"And then you found me?\"\n\n\"Yes...\" he said looking puzzled, \"well at least after I spoke to this little old lady.\"\n\n\"Did she talk to you about the pool?\"\n\n\"Yes.\" He looked quizzically at me.\n\n\"According to the old lady you spoke to our pool is actually Arianrhod, The Welsh moon goddess's and Saint Ffraid's.\"\n\nHe looked at me, stunned.\n\n\"Yeah,\" he said in shock, \"A... tiny little Welsh lady in black?\" I nodded and smiled to him, \"I was about to give up hope, I could smell your perfume, I was screaming your name, and she walked into the clearing with her walking stick. Do you know her? Was she here?\"\n\n\"Did she tell you about love, and Arianrhod?\" He nodded, \"and I bet she called you Ceri?\" He looked at me with a grin and nodded,\n\n\"And you met her too?\"\n\n\"Yep,\" I gently rocked our son and held him up so Mike could look at him again, \"she's the reason that your son is called Ceri!\" I said. \"When did you meet her?\"\n\n\"About five minutes ago.\"\n\n\"Really,\" I said, \"I met her four and a half months ago.\"\n\n\"Wow!\"\n\n\"Small world isn't it,\" I kissed Ceri's cheek, \"Trouble is,\" I whispered, \"she died five months ago.\"\n\n\"She died?\"\n\n\"Yep,\" I said, \"four hours before I met her.\"\n\nHe was a doctor and struggled with the concept,\n\n\"She... died?\"\n\n\"Yep, she gave me this...\" I held up my pendant, \"four hours after her daughter-in-law found her dead in her chair.\" I turned and looked up, \"Thank you Nanna!\" I shouted at the top of my voice with a laugh, and Benny sat and stared up huffing again. He closed his eyes for a moment as if someone had stroked his head. \n\n\"Bloody hell.\" He said. \"She told me that she figured I must have upset one of the ladies and chances are, if I'd learned my lesson, I was forgiven. I figured that was because I... well because of what I did to you that autumn Saturday. She told me that I could find what I wanted if I truly loved; if I really knew what I wanted and more importantly who I wanted. \n\nShe pointed across the clearing I was in and said what I wanted and needed would be just around the corner.\" He looked down, \"She pointed, and I turned to look. When I turned back she was gone.\"\n\n\"That's our Nanna Bennett,\" I said, \"I'm her heir apparently.\" I let go of my pendant.\n\n\"You were here, weren't you... when I was looking for you?\"\n\n\"Yes,\" I said, a tear forming in my eye now, \"I came back often, it was like I could feel that you were going to be here or wanted to be here.\" I rested my head on his shoulder. \"I realised how much I loved you and desperately wanted you back.\"\n\n\"I woke at three this morning in London, knowing I had to come, had to be here,\" he grinned, \"I've gone AWOL from work with just a 'I've got to go to Wales, it's an emergency' phone message for my boss. He can manage what work I have on today. I had to be here Maggie,\" he smiled at me and stroked my hair, \"I was dragged here by some force or another, I had no choice.\"\n\nHe pulled me tighter to him,\n\n\"I don't care what it was that called me back, I just know that I'm back and I don't want to be anywhere else, or with anyone else.\"\n\n\"You...\"\n\n\"Maggie, I've missed you and I know that you can probably never forgive me, but I really thought I'd wrecked it with you, or at least with the Goddess and the Saint, and I'd lost you for ever.\"\n\n\"Mike,\" I said smiled at him in confirmation, smiling and raising our son between us, \"I never stopped loving you, not for a second.\" He kissed me. \n\nI knelt slightly and cupping my hand in the water of Arianrhod's sacred pool I poured some across the forehead of our baby son, and he opened his eyes, yawning and looked straight up into the shocked but handsome face of his father for the very first time. I looked up, hugged Ceri to my face and spoke words I'd got Jess to teach me. \n\n\"Diolch yn fawr Arianrhod, Diolch yn fawr Santes Ffraid.\" I said looking up to the sky.\n\n\"Wow,\" said Mike, \"Hello Ceri,\" he bent and kissed his boy on the forehead, then raised up and kissed me. I backed up to the seat that Ceri was born in and sat down on it, and Mike sat next to me, and Ceri had his very first bath, and didn't seem to object in the slightest. \n\nThe water was warm and caressed all three of us in the same way. I handed Ceri across to his father who was of course a Doctor and had delivered quite a few babies, so took him calmly and gently, not the bumbling sit-com 'new father' reaction I'd hoped for! So, we had our very first family moment.\n\nWe walked Ceri back to his pram, dried him and wrapped him up again and he yawned and nodded off, his very own Gelert standing then sitting, before lying sentinel next to him.\n\n\"Swim with me Mike,\" I said and I took his hand and we walked into the lake, \"Swim with me and let Arian's pool do its work.\" We started kissing again and the months apart just melted as we clung to each other kissing and holding each other tight. I could feel his hard cock squeezing between us so putting my arms around his neck I raised my legs and wrapped them around him. He was very strong anyway, something that had always turned me on about him, and pretty soon he lifted me slightly and slipped his penis into my pussy and I clung to him even harder as he made love to me in the water. We were both making love and chuckling, laughing and giggling as I leaned back so we could look into each other's faces, and of course kiss.\n\nI felt him pump hard into the back of my vagina, and thanks to the pool I'm sure, I felt no pain even though another human being had travelled through there less than a fortnight before.\n\nWith the addition of the love we shared I felt my orgasm start in my loins and I hissed into Mike's ear.\n\n\"I'm gonna come baby,\" I said, \"come with me...\"\n\n\"Are you sure?\" he said. After all, it was obvious to him that I wasn't functionally sterile after all.\n\n\"Yeah,\" I said, thinking that Arianrhod knew where I stood; mind you this time I was so much more confident as I'd gone on the pill straight after Ceri was born. Once bitten and all that.\n\nHe came and I felt his knees buckle and we slipped down into the hot water, both floating gently. I felt him pour his copious come into my pussy and I wondered how I'd ever managed to live without it for so long.\n\nWe swum though the water, still holding each other until we hit the bank.\n\nWe lay back on the grass and kissed each other again. I heard Ceri mewling quietly and before I knew it, I had warm milk leaking down my breasts, so I walked over and picked him up and he latched on. I sat down next to Mike and he watched intrigued as I fed our son. He put his arms around me and held me, while I held our son and I looked up at my man and kissed him.\n\n\"I love you Maggie,\" he said.\n\n\"I love you Mike.\"\n\nThe sun came out and bathed our pool, sorry Arianrhod and Brigid's pool, in wonderful warm spring sunshine. We were home.\n\n\n\nMike took a two week leave of absence and stayed with me in the house for the very first time. He had a walk around and yes, it hadn't been my town he'd visited calling for us. Although the very first thing he did was to get both of our smart phones and copy the details to each, clocking my house into the satnav on both of his phones.\n\nThat night I took him and Ceri to Jess and Dai's place and had dinner. Jess saw me and my beaming smile and was all over Mike and knew the second he walked through the door that he was Ceri's father. She came over to both of us and hugged us.\n\n\"Diolch yn fawr Santes Ffriad\" she whispered.\n\n\"I'll tell you later,\" I whispered to Mike, and later than night safe in a real bed for the first time, I told him all about Nanna, the pool, my dash to their late one night and of Arian and Brigid. \n\nIn the way of that particular secret, neither of us has ever talked about what happens at the pool outside of the sisters.\n\n Much as it tore at my soul to leave, if only for a short time, I went back to London with him via Bristol and introduced my Dad to his third grandchild. Dad was a bit upset because I hadn't been to see him in four months but recovered quickly. I kissed him and told him how sorry I was that it had only been phone calls, and said that once I discovered I was pregnant I didn't want to let anyone know in case it all went wrong. My whole family knew about my supposed sterility and rather than admit that Mike and I had been led astray by a magic pool, we just said that we were neighbours and Ceri was just a happy accident that I knew nothing about for four months. \n\nDad was enchanted with Ceri and they still have a wonderful bond, he's just Grampy Wagner. Dad was even more impressed when I asked if I could leave Benny with him when I went to see Theresa and her family in London, with I promise I'd pick him up on the way back. We stayed that night, and Benny didn't even stir from his now customary spot by the fire when we left the next morning.\n\nIn London, we both had siblings to tell.\n\nFirst Mike met my sister and her family, and I stood at her front door, while Mike lifted Ceri out of the car in his seat.\n\n\"Auntie Maggie!\" screamed my niece Ashley as she opened the front door to my knock, rapidly followed by her brother Sam, \"Have you brought Benny?\"\n\n\"No, sorry!\" I said seeing Theresa looking from the kitchen to the front door at me, \"But I have brought some new friends for you to say hello to.\"\n\nTheresa walked towards the door drying her hands seeing Mike at his car on her drive.\n\n\"Hi Maggie!\" she said.\n\n\"Theresa, this is Mike, and this,\" he handed me the car seat with his sleeping son in, \"is our son Ceri...\"\n\nTheresa cottoned on in seconds and screamed a heartfelt \"Maggie! Oh Darling I'm so pleased for you!\"\n\nShe didn't know whether to grab me, shake Mike's hand and grab him, or coo over her new nephew.\n\nShe settled to do all three in a shade under three seconds. I was giggling in the shared excitement and Theresa's lovely hubby John was there in a few seconds and shook Mike's hand.\n\n Bundled into her huge kitchen, we told them the story we'd told Dad that we'd met in the woods, had meals out, drunk lots of coffee (we didn't mention it was all in the woods and naked!) and once we knew about Ceri's arrival we were shocked and delighted but didn't want to talk to everyone about a tragic loss if it all went wrong. \n\n Theresa was sat in her kitchen rocking chair, the same one she'd held her children in, and completely ignored everyone else and I knew who Ceri's first set of godparents would be. I all but wrestled him from her as he had started to fret for me to feed him. \n\n\"Give me the bottle!\" she called out, \"I'll do it!\"\n\n\"On tap Theresa,\" I said starting to unbutton my blouse from the top.\n\n\"Oh Darling Maggie!\" she cooed again, \"Right, everyone out into the garden and leave me and Auntie Maggie to our work.\"\n\nI actually didn't worry about breast feeding with someone else in the room, as I'd gotten quite good at feeding my darling boy without anyone noticing, but Theresa just wanted some 'girlie time' and I sat in her precious rocking chair and she stroked his cheek, my hand, his hand, and generally loving every second of it. She put a coffee on the table by the rocking chair and once Ceri had finished she took him from me and winded him, encouraging me to drink my coffee and relax.\n\nOnce Ceri had nodded off, Theresa just went into Mummy mode and changed him and dressed him and put him down for a nap in his car seat. She did it whilst making sandwiches, drinks for the children, then sandwiches and tea for the adults.\n\nShe looked at me and gave me a smile just like Mum used to and leaned over to kiss me.\n\n\"You'll get used to it Maggie,\" she grinned, handing me a sandwich and a mug of tea, \"By the time you've had your third one, you'll be vacuuming the stairs and loading the dishwasher at the same time.\"\n\nI could have stayed with my lovely sister for days, but we had other people to visit. We kissed everyone goodbye, promising that we'd all go out to dinner together the next evening.\n\nNext it was a quick scoot across London to his Brother Hugh and sister in law Jennifer. Their greeting was slightly less effusive but they both hugged me and kissed my cheek,\n\n\"We were beginning to think you didn't exist,\" said Hugh with a grin.\n\n\"Yeah, Mike has talked about you for months and months,\" Jen slipped an arm through mine as Hugh dropped down to the car seat and his nephew just starting to wake up and take an interest in his surroundings. \"I'm so pleased you found each other again!\" she squeezed my arm.\n\nI picked Ceri out and handed him across to Hugh who wasn't as well practiced as his older brother but managed quite well, and he sat down on his sofa and happily chatted with Ceri. I looked across the room and saw that while Jen looked captivated by their newest and youngest relation, she looked slightly scared of him as well.\n\nAgain, we promised we'd meet them at the restaurant for dinner the next day and head back to Mike's lovely flat in Kennington. \n\nI put Ceri in his travel cot, and had a shower. While I loved breast feeding it was quite a warm day and I was leaking a bit. There had been so much love in the air that day that I found out that breast milk had soaked into almost all of the absorbent pads I brought along. It was just me, whenever I felt that level of love and contentment my nipples just opened up!\n\nWe had a slow morning, and we spent the afternoon with his parents at their North London home. They had the same story. We were neighbours, fell in love, high risk pregnancy, Mike moves to Wales to be closer to me, close watch for last few months, birth, blah, blah, blah.\n\n We went back to the flat, got dressed, and got a black cab to the restaurant where all of our families got to know each other. Theresa took Ceri from his pram of course and cuddled him for almost the whole time.\n\nMike was being the host and I saw him chatting with his Mum and him taking something from her. He stood, and tapped his wine glass with his spoon.\n\n\"Ladies and Gentlemen,\" he said, \"Maggie and I want to thank you all for your wonderful welcome to us. It's fair to say that Maggie, Ceri and I have all been through the ringer a bit in the last four months, but it's all finally come together at the last with the help of a tiny little old Welsh Lady that's been looking out for us.\" He sipped from his glass, \"it remains for me to do one more thing, the thing I should have done six months ago.\" \n\nHe stepped back from the table, dropped to one knee and raised the small box that his mother had obviously given him.\n\n\"Darling Maggie, will you marry me?\"\n\n\"Yes!\" I squeaked, such was the surprise I felt, and he took my hand and slipped the loveliest engagement ring on my finger. \n\nIt was a real surprise though. We were so happy to be back together with our child that I hadn't even thought about it or that it was an option. There were happy squeals from all the women, and hearty handshakes from the men. It was wonderful.\n\nWe married two months later in the tiny village chapel St Brigid's, wearing my Mum's wedding dress faded from White to Ivory lace, just as Theresa had and she cried when I first tried it on and it fitted perfectly. \n\nDad gave me away, along with Benny who wore a white collar and black tie just like Mike did. Mike's youngest brother Ed the Royal Marine Officer came home from Afghanistan especially and was best man to his brother, the piss doctor.\n\nCeri was christened at the same time, Theresa and John, and Jess and Dai as God parents and Jess saw to it that the font had been quietly filled with water from Saint Ffraid's pool (sorry Arianrhod!) and over the next few days the story that Ceri was an 'Arian's child' had travelled the village, and what was in the font for attendance at services to go up and women and girls were apparently dipping their hands into it whenever they passed. \n\nThe reception was of course in Jess and Dai's restaurant and they did us proud. With all of the rooms filled, so we had no bridal suite to spend our first night in; we didn't really care mind you. ",
        "Theresa had taken Ceri and a whole collection of expressed bottled breast milk and nappies and clothes \u2013 enough for 24 hours. It was a real struggle to leave Ceri, it was the very first time I had, but seeing him with my sister, his loving Auntie and Godmother I knew it would be fine. Benny stayed with Dad in his hotel room, both content with the arrangement.\n\nI stripped out of my wedding dress and just went with a T-shirt, and Mike appeared in his boxers. We just knew where we were spending our wedding night, and walked across our stream and out into the woods.\n\nWe held hands and walked, not talking just staring into each-other's faces. We reached our pool, and rolled out our sleeping bags. \n\nI took his hand and walked into the pool. I felt a tingle in my left hand and Mike too was looking at the silver ring on his left hand. We had gone for wedding rings of Arian's own metal.\n\nI looked at Mike and we both grinned, knowing that we had nothing to fear in this place. I think it was just Arianrhod giving us her very own blessing. We laughed and cried and I jumped into Mike's arms we kissed again, passionately. \n\nWe stepped out of the water and walked across to the glade and lay down. I thought about making love, but it had been such a long day we were both totally wasted. Instead he just pulled me into his arms and held me until we both fell asleep under the protection of the full moon, the silver disc, Arianrhod.\n\nWe woke the next morning as the sun came up and I jumped on him and we spent that morning shagging like rabbits, drinking coffee and we had a great time. \n\nWe walked home, had a shower and breakfast and put on jeans and T-shirts, and headed to the hotel and collected Ceri. Dad took Benny to Bristol with him while we headed for Heathrow and two weeks in the Caymen Islands. It was paradise and we all got a tan, ate too much and had a ball.\n\n Once home Mike still had his work to do but was able to share his medical expertise between Wales and London. We turned my office into a nursery and Ceri had his own room. My two up-two down quickly became a family home and thanks to cloud storage and laptops and tablet PC's we spent our time between Number Seven and our place in London.\n\nDuring one long stay in London, I did some research on our little house, just checking that there was nothing on line about our secret, and expanding the search to my village I happened to see that the holiday let next door was up for sale, and I made an enquiry. We took out a mortgage and bought it outright, unseen. We installed a couple of doorways and suddenly we had a four bedroom house, with a big kitchen and a dining room. We invited family to stay and had huge family barbecues and my nephew and niece could play in the woods to their hearts content, as long as Auntie Maggie or Uncle Mike were around of course.\n\nBut our pool's location remained a secret, and we kept it that way. We still spent lots of days and many nights by it during the spring, summer and autumn and our lovely, strong handsome boy Ceri grew up there, and learned to swim in its clear clean water. I know in my heart that one day he'll take his own woman there when the time is right and Arian calls them.\n\nI woke one night with an irresistible urge and found myself walking down the garden, telling a worried looking Benny that tonight he had to stay here and watch after Ceri and Mike. In just my thick dressing gown (I normally sleep naked) I walked down the garden, popped across the stepping stones and after walking through the woods I missed my large log where I used to hide my clothes but trusting in Arianrhod I carried on walking until suddenly the pond was before me and the standing stones were either side of me.\n\nAlready in the water, was a young girl I recognised from Jess's bar, and I guessed she had dipped her hand in the font around the time of Ceri's christening, and I slipped off my gown and stepped in, feeling the warmth around my nether regions and remembering how it had calmed me down that night almost a year ago.\n\n\"Hi Abi,\" I said stepping down and remembering what Jess had prophesied when I was the one sat on the polished stone seat in the middle of the hot spring. I brushed her hair back from her worried face and smiled what I hoped would be a comforting smile.\n\n\"Hi Maggie,\" said Abigail, \"I don't know how I got here, Carl we be so worried when he finds...\"\n\n\"Arianrhod will take care of all of that Abi,\" I grinned and kissed her cheek; I don't know what gave me the confidence to say that, other than the strange occurrences when my Ceri was born a year gone, \"Before you know it you'll be back in bed and of this will seem like a dream.\"\n\n\"Yes,\" said a voice and I turned to see Sue, removing her T-shirt with a Mr Man character on it, \"Don't worry our Abigail, in a few moments it'll all be done.\"\n\nAnd so it was. Following another birth overseen by Myra we were soon walking Abigail and her daughter Rachel back through the stones, along a winding track and into her ground floor flat, and settling her down, and Sue and I just waved and slipped back into the woods to reappear in our own gardens, while Myra phoned for the ambulance that would take her to the Maternity ward at Maerbont for a few days' rest, telling Carl how lucky it was that Abi had Myra's number on speed dial.\n\n Three months later, I had the strangest dream; that I woke in the night, climbed out of bed and walked down the stairs and walked out into our shared garden, like the one that Hugh Grant and Julia Roberts characters in 'Notting Hill' loved so much. Before I knew it I was walking through the standing stones, and taking off my dressing gown to step naked into the pool and delivering a gorgeous baby boy, with Jess and her sister-in-law's mother-in-law Martha as midwife.\n\n\"How's London Maggie?\" said Jess.\n\nI woke the next morning in bed in our place in Kennington where I'd gone to sleep the night before; I felt relaxed as if I'd been in the pool. Did I travel hundreds of miles? Did I deliver my second Arian's child? I really don't know but chances are, as my mate Jess once said, \"that's probably just how Brigid and Arian want it\".\n\n The following Christmas, our first one as parents, we travelled across London to deliver presents I was the first to notice the bulge in Theresa's normally flat belly.\n\n\"Your bloody fault,\" said John, \"she got all broody when she was maid of honour at your wedding. I guessed that being that close to Ceri, and holding him while he was christened with water from Pwll Arianrhod, it was only going to be a matter of time.\n\nIn June, Theresa and John were delivered of their third child Holly and they brought her to our little village and St Brigid's church for her christening.\n\nIn light of the number of children arriving, a few weeks afterwards Mike invited his brother Hugh and his lovely wife Jen to our cottage and we took them camping in our woods. It was a wonderful warm, clear starry night and our tiny fire glowed around the clearing and we made them coffee from the pool. The place was technically open to the world but we both knew that you'd never find it unless you were meant to, and at least an hours walk and they both quickly relaxed.\n\nThis was pure devilment on the part of Mike who knew that his brother wanted to have a baby being still captivated by his nephew Ceri and his invite to Holly's christening, but Jen wasn't minded to and was too busy with her career at that moment and according to my reading of her, a bit scared of the whole process. They had been married for five years, and Mike was worried that this couple that were so perfect for each other could start to drift apart through their busy lives.\n\nThey drank their coffee and after a few moments it became clear that they were sharing some secret through their body language. It was almost like my new sister in law was the tiniest bit tipsy, not silly but like some of the barriers she'd built to protect the busy business woman in her had fallen a bit. Just to help out Arianrhod a bit more I made more coffee and suggested that we turn in.\n\nIn the intervening year Mike and I had built some slightly different shelters; raised platforms with a kind of a thatched covering that was enough to keep off the rain and with the addition of a tarp sheet over the open front, any dew or mist. We would lay out the cheap supermarket air beds that we pretty much left there all summer, along with some pans and cheap plastic mugs and our eternal sachets of coffee, milk and sugar. Despite our minor changes to our overnight holiday home we still often slept under the stars with just a blanket mind you.\n\nDespite our insistence Hugh and Jen slept in their tent, afraid of bugs and nightly noises but as Mike and I stretched out, listening to Ceri's contented snores from his netted cot in his shelter we could hear that our visitors had started to get slightly passionate.\n\nAs for me, I never would have believed that it was possible to feel horny listening to two relatives shagging in a tent not ten feet away, but it was unbelievable. Jen was apparently a quiet wispy little kitten but as Mike and I lay spooning we could see in the light from the waning but still full moon that the walls of their thin tent were moving in and out like a pair of lungs and Jen was encouraging Hugh to do his worst to her without shouting out to the world.\n\nAs for me, I felt my knickers pulled down slightly and Mike's huge erection pushed into my sopping pussy and we had the most wonderful gentle and silent fuck, listening to our guests doing the same but with more energy. I reached back and rested a hand on his that warmly held me by the hip so he could push in and pull out of me. I leaned back into him and twisted my face so we could kiss and as I heard Jen encouraging Hugh to a final push to her fulfilment, I whispered, \"We can't let them beat us Darling...\"\n\nI felt his hand between my shoulder blades pushing me forward bending me at the waist and as Jen started to groan to her orgasm, I felt mine stir in the pit of my loins and my face erupted in smiles as Mike pounded into me. It was paradise and I came hard timing my groans to match those of my sister in law just across the glade. I felt Mike's warmth pour into me in three long spurts. I remembered taking my contraceptive pill, I wouldn't have put it past Arianrhod to have helped me to forget! I held on to my pendant and whispered an almost silent, 'one for Jen and Hugh Arian?'\n\n The following morning Mike and I were up and preparing breakfast for us all. Mike has asked me if I wouldn't mind going naked with him this morning. I looked up at the glorious sunshine that boded well for a fine day, and then thought about the younger Jen and younger Hugh and figured I wouldn't mind seeing them naked this morning. So I removed my panties, had a pee, washed my hands and prepared the tea with water from the pool. I started the pan heating and soon the bacon rashers were frying and I was cutting open the bread rolls.\n\nMike unzipped the front of their tent and placed two mugs of tea in front of it. I could see that Jen was being held by Hugh, spooning as his brother and I had been, his hand protectively around her tits, and they were both naked as well, only covered with their sleeping bags.\n\n\"So you two had a good night then?\" said Mike rolling up the flap of their tent.\n\nHugh and Jen looked straight up at the sight of their naked brother, then across to me bare breasted and cross legged in front of the cooker and last night's re-vitalised fire.\n\n\"Good morning,\" I said seeing Hugh's bleary eyes skip fleetingly across my boobs, his gaze distracted from lower down by the toddling appearance of Ceri running to be picked up by his father, then the gentle furry presence of Benny trotting behind to make sure all was well.\n\nHugh and Jen shared a look and wondered what to do next.\n\n\"Don't let your tea get cold.\" I said, and they sipped - I knew Arian had them.\n\nThey sipped, smiled and within twenty minutes were sat opposite me eating bacon and egg rolls, as naked as I was, Hugh with a weapon only slightly smaller than his brother's, and Jen's lovely pussy waxed clear of any vestiges of pubic hair. Her boobs were on the small side but I said another quiet word to Arian and just knew that they would sprout in size just as mine had. We were chatting and laughing, our lack of clothes a minor detail and it was amazing how quickly they got used to it and ignored it. \n\nI'd never been tempted by my own sex but Jen was gorgeous, and on reflection Arianrhod and St Ffraid were about love and fertility, not something two girls could really be involved in Mike and I had learned that to our cost, and five months of loneliness. Jen was only a year or so younger than me but just as sexy, and with Arian's help she could only improve.\n\nWe finished our rolls and tea, and Ceri padded over to me saying \"Mummy swim!\" so I stood and walked with him to the pool feeling three pairs of eyes on my still shapely bum. Within a short while, there were five of us splashing around in the wonderful refreshing water of Arianrhod's pool with Mike and me playing with Ceri while Hugh and Jen splashed around, looking happier than I ever remembered seeing them. Jen seemed to paying particular attention to her boobs almost in surprise, and I knew precisely what she was feeling. I thought to my first swim in this pool more than two years ago when my every sexual fibre was vibrating! I felt good that another woman, one that I cared about, was getting that same buzz.\n\nSoon they were in each other's arms and fooling around, singing some favourite song, sharing that special feeling that all lovers get. Next they were kissing and just beaming at each other. I whispered to my lover that all was going according to plan.\n\nMike smiled and looked over to them,\n\n\"Oi, you two,\" he said with a grin, \"the quiet shady, leafy, grassy glade is just through that arch of trees, we promise we won't bother you.\"\n\nEmbarrassed but outrageously horny, Jen led her husband by the hand and both walked naked from the pool through the heart shaped arch to the grassy glade were Ceri was conceived. Her nipples were hard while his erection was every bit as impressive as the one I currently had my hand on under water.\n\n\"Is it me or have her boobs got bigger since she got in the pool?\" said Mike moving slightly to enjoy my wanking of him.\n\n\"Definitely bigger,\" I said, \"and I reckon his cock has put on some girth since he climbed in as well.\" I put my hand on my necklace. In the distance we heard a faint sigh that could only have been Jen.\n\n\"There,\" said Mike, \"That'll do it; another coffee,\" he paused, \"Auntie Maggie?\"\n\n\"That would be nice,\" I said, \"then we can put Ceri down for an hour and you can fuck me... Uncle Mike!\" I giggled at his smiling face. \n\nThat night was a repeat of the night before, Hugh and Jen choosing to sleep naked under the stars in the glade through the heart shaped gap in the trees and, of course, under the full view of the 'Arianrhod' \u2013 the silver disc. \n\nAs I lay there in my husband's arms with our son sleeping in his travel cot guarded by Benny, I could hear Jen's voice, dripping with emotion and telling Hugh how much she loved him.\n\n\"This time Arian,\" I said. Mike smiled and kissed me.\n\nI did think about learning Welsh in honour of our guests and what we hoped for them, but I figured that as a Celtic Goddess, she must have had a fair understanding of English after all. \n\nThe following morning they reappeared for breakfast, naked and looking soppy and making big eyes at each other. I held my pendant and smiled. They thanked us for a wonderful weekend and from that moment Jen couldn't stop hugging Ceri, who didn't object in the slightest \u2013 it boded well.\n\n Their daughter Rhianwen, Welsh for 'fair maiden' (my idea after a prompt from Jess) was born nine months later and Hugh and Jen have never been happier or closer. I'll confess that it came as a bit of a surprise to them at least, and Jen still blames the fact that she forgot her contraceptive pills that weekend in the woods. Their weekend of love around Arianrhod's pool had brought then back together at a time when they had perhaps lost sight of what it was that had attracted them in the first place.\n\n We've said we'll give it another couple of years until we invite them back to the pool. After all, I stopped taking the pill a few weeks back and as soon as the spring climbs high enough up into our valley to fill our little glade with sunshine, we'll go back to our little house in Wales and with Ceri asleep and Benny on guard, at the full moon, the 'Arianrhod', we'll ask for Arian's help once more.\n\nI'll ask Arian for a girl this time, seeing as she seems to be listening to me at the moment!"
    ],
    "authorname": "Androgynousother",
    "tags": [
        "straight sex",
        "nakedness",
        "love"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/arians-pool-ch-04"
}