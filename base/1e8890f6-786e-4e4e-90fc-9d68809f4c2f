{
    "title": "Just Another Day",
    "pages": [
        "This story is for: Hammered: an ode to Mickey Spillane author challenge\n\n\"Write a story like those of hard-boiled thriller writer Mickey Spillane.\" Quite a far cry from my usual themes and style but fellow-writer Chloe Tzang persuaded me to have a go. Thinking about it, I'm probably one of the few Literotica writers/readers who was around near the start of Mickey Spillane's success and remembers all the fuss caused by his early books. On both sides of the Atlantic politicians, churchmen, teachers, parents, assorted do-gooders and self-appointed censors all leapt onto the bandwagon to condemn him. Far from protecting we youngsters, all they managed to do was make us more determined to read the books. After all, if so many adults found them offensive they had to be good. As for Mr Spillane himself, he should worry. He was making a fortune and most likely a larger one than he would have done had there been no furore.\n\nThere was no subtlety about Spillane's main character, private eye Mike Hammer. Not for him the careful gathering of clues and eventual brilliant deductions. His methods were far more blunt and invariably brutal. Here's an example and it's an actual quotation from one of the books (although I forget which one): \"I hit the guy and he went down bubbling so I kicked him and he stopped bubbling.\" No fooling around with \"You have the right to remain silent...\", just simple direct action. If this kind of detection offends, then Poirot or Miss Marple make genteel alternatives. Otherwise, check the load in your Colt .45, put on your snap-brim fedora and settle down to enjoy the ride.\n\nThe early Spillane novels date from the late 1940s through the 1950s so I have tried to capture Spillane's style and the feel of that era. Characters in sex scenes are eighteen years old or over. All characters are imaginary--any resemblance to persons living or dead is coincidental. If you feel this story needs dramatic backing music, I suggest John Carpenter's 1976 score for the movie Assault on Precinct 13.\n\nThanks, Chloe, it's been fun.\n\nCopyright \u00a9 2021 to the author\n\n* * * * *\n\nI'll say one thing for the persistent rain. It made this dark shithole of a street look a little cleaner. Other than that it was annoying. I stood in a narrow doorway that gave some limited shelter but it was shallow and freezing moisture dripped from the brim of my hat and down inside my collar pissing me off. I was damp enough already, for chrissake, and singing in the rain I wasn't. I'd rather have been in my apartment getting on the outside of a glass or two of Scotch but I was meeting a friend.\n\nI took a final drag of the smoke cupped in my hand then dropped the butt to the sidewalk. The downpour pretty well extinguished it but I made sure by grinding my foot on it.\n\n\"Hey you! That's littering. Pick that butt up.\" I turned to look at this self-appointed guardian of the environment. What was with this jerk? We're in the pouring rain on one of the dirtiest, nastiest, roughest streets in this part of the city and he was worried about a single cigarette butt? Short, tubby and late middle-aged, he didn't have much going for him so I guessed he was just a local busybody or crank (he wasn't even wearing a coat). That or he liked living dangerously. There were guys in this neighbourhood who would dump him in the nearest river with lead ventilation just for saying \"Hi!\" the wrong way but they had the sense to stay out of the rain.\n\nI said nothing, only stared at him. I heard a car pull up behind me and a door slam as the driver got out. I didn't bother to check, I had a good idea who it was. I just carried on staring at Mr Green. He tried to stare back but failed. A few seconds and I could almost feel him start to twitch. He opened and closed his mouth several times like a dying goldfish then decided not to pursue the matter. He turned and made his way across the road to where an old woman sat waiting in a bus shelter daubed with rude words, most of them spelled wrongly. She was chomping on what looked like an apple and tossed the core away even as the tubby dipshit approached.\n\n\"You really shouldn't go round scaring public-spirited citizens, Sam,\" said a quiet voice behind me. My pal Lyle Garrett. The friend I was waiting for. Captain Lyle Garrett of Homicide.\n\n\"Didn't say a word.\"\n\n\"You didn't need to. That basilisk stare of yours is plenty.\"\n\n\"Basilisk, eh?\" I said, \"Wow, a cop who knows fabulous beasts.\"\n\n\"I do open a book sometimes,\" Lyle said, \"that's if I get the time when cleaning up one of your messes.\"\n\n\"Asshole!\" The scream of rage echoed across the street. We looked up to see the old woman trying to beat the shit out of Mr Clean with her umbrella. It just wasn't his night. He ran. She ran after him, flailing with the umbrella. \"Come back here and say that again, asshole!\"\n\nLyle's hands were buried in his coat-pockets so he pointed with his chin towards the two who were disappearing round a corner. \"There's got to be a moral there,\" he mused.\n\n\"Yeah,\" I said, \"It's don't fuck with little old ladies carrying umbrellas.\"\n\nLyle nodded then said, \"Well Sam, guess you didn't call me out this time of night in the rain to get some fresh air and enjoy the local cabaret so what have you got for me...?\"\n\nA few days previously\n\nJust another day at the office. Or at least that's what it was meant to be. Things had been quiet lately and I was kind of liking it that way. Must be getting old. My secretary Cara had taken a few days' vacation to go and see her Mom, something like that, so I could put my feet up on my desk and relax.\n\nDon't get me wrong, I'm pretty fond of Cara but she's got some nasty habits. They include telling me not to put my feet on the desk, don't drop my cigarette butts on the floor and don't drink Scotch at eleven in the a.m. There are other tellings-off from time to time. Her theory is that none of these things impress the clients. Like the kind of clients I usually get should worry. At least she hasn't objected to me keeping my hat on in the office---so far.\n\nThe outer office door was open, the janitor often left it that way first thing. If you're a would-be client, don't worry---all the important stuff is locked away in my office safe.\n\nThis time I was so busy checking the sports pages I got careless, didn't really notice the inner door was slightly ajar, just pushed my way in. When I got in there was a pair of feet on my desk but they weren't mine. They were attached to a skinny, weasel-like character with the kind of moustache only Clark Gable or David Niven can carry off. Sharp dresser, though. A zoot suit, sharp but not in very good taste, with a dark lilac shirt and a clashing multi-coloured tie .\n\n\"I don't know who you are, pal,\" I said, jerking my thumb at the door, \"but you can get your feet off my desk and get the hell out. Like now.\"\n\nHe must have seen too many gangster movies and thought he was bad news. He didn't move his feet, just sneered and said: \"Mr Mulrooney wants to see you, wise guy. As you said, 'like now'.\" If he expected me to quiver and melt he was disappointed.\n\n\"You tell Mr Mulrooney if he wants me that bad, come and get me himself and not send some errand boy.\"\n\nNow Weasel's feet came off the desk and he stood. Maybe five-seven and a hundred-and-forty wringing wet. His eyes narrowed menacingly. I took it I was supposed to be scared. I wasn't.\n\n\"Tough guy, huh?\" He reached into a pocket and came up with a nice, shiny set of brass knuckles that he fitted on his hand with a smirk. Looked like the little prick hoped to enjoy his work. \"Guess I'll need to soften you up a bit before we go to see Mr Mulrooney.\" He stepped closer and threw a punch.\n\nHe might as well sent a wire about that punch. I could have gone to take a dump, washed and dried my hands, come back and still waited for it to land. I moved my head, grabbing his arm to jam it behind his back and pressed a nerve in his wrist. His fist opened in pain and I removed the brass fingerwear. \"A word of advice,\" I told him, \"Don't start fights with people you don't know---they may be tougher than you are.\"\n\nStill holding his arm, I stepped back and to one side so blood wouldn't splash my third-best suit. Then I hit the bridge of his nose with his own brass knucks. I've got nothing against hitting people smaller than me, especially if they're trying to hit me first with an offensive weapon. There was a satisfactory crunching noise accompanied by a spurt of red and Weasel collapsed to his knees, clutching his face and whimpering. I threw the knuckles into my trash-basket then leaned down to haul the creep to a sitting position. My floor was grubby enough without a gallon of his blood being spattered on it. His zoot suit could take the worst of it.\n\nThat's when I realised---Christ! I am getting old. Weasel had a friend, or maybe just an acquaintance. Didn't matter much which, he still had something feeling like a gun pressing into my spine. And the guy was a pro. He made his presence known then stepped back a few paces so I couldn't do him any harm. He must have been standing between the open office door and the large filing cabinet, something I'd have checked in the old days. Hell, I had gotten soft.\n\n\"Easy now please, Mr Malone.\" I'll be damned, a polite gunman. \"Take your pistol out slowly, left hand, finger and thumb, put it on the desk then step over to the window.\" I didn't think I was due to take a dive, it's just the window was far enough from the desk that I couldn't jump him. I carefully did as told.\n\nWhen I reached the window I turned to look at Mr Polite who had picked up my gun (I usually carry a Colt 1911 .45 ACP semi-auto) and slipped it into a side pocket. He was about my size, tough- and competent-looking, not a guy to be messed with I reckoned. Sort of like me in fact although his suit was in better condition than mine. That was something else Cara nagged me about at times. Oh yes, and he had what looked like a Walther P38 pointing somewhere in my middle. Don't see many of them about. War souvenir maybe.\n\n\"Sorry about this,\" he apologised, \"Mr Mulrooney said be nice but my colleague...\" there was a note of disgust in his voice, \"... has seen too many Jimmy Cagney movies, loves to play the tough guy..\"\n\n\"He needs to rehearse a whole lot more or he'll never get to shout 'Top of the world, Ma!'. How'd you get in?\"\n\n\"Getting in was easy.\" He gestured with his pistol. \"Arnold here trained as a locksmith before he decided on a career change and came to work for Mr Mulrooney.\" So Mr Zoot Suit had a name. Arnold. I still preferred Weasel.\n\n\"Maybe he should have stuck to his old job. Not too good at this one.\"\n\n\"We should get going,\" said Mr Polite, \"Can we be civilised, Mr Malone? Gentlemen's agreement? I'll play nice if you agree to play nice.\"\n\nI shrugged. Why not? If Mulrooney wanted me dead, and he had no reason to, it would have been handled better than this. But gentlemen's agreement? Definitely an unusual enforcer. \"Okay,\" I said, \"We'll bring the creep along. My office ain't much but it's tidier without him. We can drop him at the nearest Emergency Room unless you want his blood all over your motor.\"\n\nI hauled Weasel to his feet and handed him the tea-cloth Cara used to clean the coffee pot. \"Hold this to your nose.\" Right now, it wasn't very clean but I wasn't going to cry if the little jerk got some nasty infection.\n\n* * * * *\n\nI kind of liked Mulrooney. A red-faced, hard-looking Mick, he was what I thought of as an ODC, that is an ordinary decent criminal. He had standards. He wouldn't deal in drugs and he wouldn't deal in prostitution or white slavery. If one of his mob went down for a stretch he made sure the guy's family was okay---bought him a lot of loyalty. Among other enterprises he ran betting, shylock and protection rackets but if a 'client' was having genuine cash-flow troubles, Mulrooney would give them a Get Out Of Jail Free card for as long as it took them to get back on their feet. Sometimes he acted more like a charitable institution than a gangster. We'd had our clashes in the past but no hard feelings on either side and mostly we rubbed along.\n\nKeeping to our gentlemen's agreement, Mr Polite put his Walther away and I refrained from turning him into hamburger. We paused the car outside the nearest hospital and shoved the Weasel out into the cold. He stumbled into the gutter, his whimpers turned to pitiful moans which did my heart good to hear. I told him he could keep the tea-cloth, I'd buy Cara another one.\n\n\"And get back fast,\" Mr Polite told him, \"Mr Mulrooney doesn't like incompetents who waste his time.\" Incompetents, eh? Impressive vocabulary for a gunsel. As I said, unusual. And good to see that compassion wasn't dead.\n\nA few more minutes, mostly spent avoiding asshole cabbies who thought they could drive, and we found a parking spot a block or so from the old-fashioned mom-and-pop diner and coffee shop where Mulrooney had his office. Its narrow frontage disguises how deep it is. The java joint has a row of stools at the counter, about half-dozen booths and only goes back so far, to a door marked 'PRIVATE'. Beyond that is a short corridor leading to another door then a large open-plan area where I guess a bunch of old rooms had been knocked into one. Mr Polite nodded to the craggy-faced old Paddy serving cups of joe to the early trade and took me through. The door to the open-plan was guarded by something looking like King Kong only less handsome. He was reading the glamour photos in some cheesecake magazine called Yippee!\n\n\"He's here to see Mr Mulrooney,\" Mr Polite said to the ape.\n\nThe doorkeeper must have thought I was here for a telling-off, Mulrooney-style (you don't want to know), for he opened the door and as I walked through he shoved me, hard. I stumbled a bit but recovered. Maybe he thought I'd fall down. Instead I said: \"Put another finger on me, ape, and I'll break your arm.\"\n\n\"You want I should cream him, boss?\" Christ, it could talk. Another few thousand years of evolution and his descendants might even get their knuckles off the ground.\n\nMulrooney was sitting at a desk at the far end of the room. He waved a hand in a 'no' gesture. \"Mr Malone's here as a friend,\" he told the gorilla. Well, I wouldn't go that far but it'd do for the moment. \"And I don't want you to cream him for two reasons,\" added Mulrooney, \"One, you try it and he would break your arm, in about four places. Then he'd do the same to the other one just for the hell of it. And maybe throw your legs in as a bonus. Next, I need you on that door and you'll be useless to me if you're in plaster from head to foot.\"\n\nDismissing King Kong, he turned to me, gesturing to a chair the far side of his desk. \"Come in, Sam, and take a load off. Drink? It's the good stuff.\" He showed me a bottle of Jameson's and I thought, Cara's not around to nag me so why not? I nodded and took the chair. Mulrooney opened the bottle and produced three glasses, pouring generous measures into them. He passed one to me and one to Mr Polite who took it to a couch against the far wall and sat down.\n\n\"The boys treat you okay?\"\n\nI jerked a thumb towards Mr Polite. \"He was all right. The other one needs a few lessons in the social graces.\"\n\n\"Who? Arnold? Yeah...hey, where is Arnold?\"\n\n\"In the ER getting his broken nose fixed,\" said Mr Polite.\n\n\"Getting his bro--- Don't tell me...\" (he sighed deeply) \"... the little idiot tried to strong-arm Sam...\"\n\n\"You got it.\"\n\n\"Holy Mother of God! The hired help these days!\" He shook his head sadly then turned to Mr Polite. \"You got Sam's gun, Howard? Okay, give it back to him.\"\n\nHoward, eh?. I wondered what his story was. Not many gangsters with names like Howard. They were usually called Al or Pete or Lennie Two-fingers, things like that, and their manners weren't all that impressive. I took my Colt from him---I hadn't seen him do anything with it but I checked the load to be sure. It was okay, so was the Jameson's.\n\n\"So, to business.\" Mulrooney passed me a photograph, a black-and-white portrait-style of a very pretty girl, sweet-looking kid, probably college age. Just above the right corner of her mouth was a small mole or beauty spot which gave her a kind of innocent-sexy look. I turned the picture over and saw it had been taken by the city's most prestigious photo studio.\n\n\"And?\"\n\nTapping the picture with a forefinger like a hot-dog, Mulrooney said: \"Name's Kathleen Hennessey. She's gone missing, couple days now. Not long enough for the cops to be interested. They think she's just a wayward teenager off somewhere having a good time.\"\n\n\"And is that likely?\"\n\nMulrooney shook his big head. \"No, not the type and the cops should know that from her family. She's a good girl from a good home. Father's Thomas Hennessey. Know the name?\"\n\nI shuffled through my mental rolodex. \"Big time financier on the Street, president of Hennessey &amp; Pope Investments. That the one? What's your connection?\"\n\n\"Tom Hennessey and me are friends. Hey! don't look so surprised, Sam. You know I got some legit businesses. And we know each other from the Knights.\"\n\nI didn't need to ask who the Knights are. Big Catholic men's organisation, The Knights of the Grand Hibernian Order of St Patrick. Something like that, anyway. Devoted to church charities and good works. The Italians have something similar too, The Valiant Sicilian Knights of St Gnocchi or whatever. Most members in both groups are legit. The others...\n\n...well, on Sundays they put on a fine show of going to Mass with their families, kneel there and mumble responses in Latin they likely don't understand---except for the mea culpa bit which they ignore anyway, it being foreign to their natures. Go home feeling all noble and virtuous, enjoy their Sunday lunch, play with the kids. Then on Monday they're back trying to kill each other.\n\n\"Any chance she's been kidnapped?\" I asked.\n\nMulrooney shrugged. \"Possible, but there's not been any ransom demand. Will you look into it, Sam?\"\n\nI weighed it up. Why not? I'd been getting stale with no action---see the easy way Howard reeled me in earlier---and the bank balance could do with topping up. \"Can I keep this photo? I'll do what I can, no guarantees.\"\n\nMulrooney nodded then threw me several fifties. \"Expenses advance,\" he said.\n\n\"General description?\" I said.\n\n\"Nineteen, five-four, maybe hundred-ten, hundred-fifteen, dark-red hair, eyes brown. Home is...\" [Mulrooney named a fashionable avenue] \"...and she's at the City Community College, place she was last seen. Supposed to be going to one of the Ivy Leagues come fall.\"\n\nAs I was stuffing the money in an inside pocket, the door opened and an apparition, something like a half-mummy from a James Whale horror movie, appeared. It was the Weasel. He was plastered up across his nose and cheeks and there was a lint plug in each nostril forcing him to breathe through his mouth. He had fetching purple bruises round the eyes, his voice gargled and he wasn't pretty.\n\nMulrooney walked round his desk to meet his errant employee. Grabbing him by the lapels and shaking him, Mulrooney snarled: \"Wha'd I tell you?\"\n\n\"But boss, he said---\"\n\nMulrooney punched him hard in the face, undoing all the good work from the infirmary. Fresh blood squirted and Weasel went down like a sack of shit in a cattle-barn, squealing like a patrol car's brakes. \"I don't care what he said,\" Mulrooney growled, \"When I say play nice, I mean play nice. I. Mean. Play. Nice.\" Each word was accompanied by a none-too-gentle toe in the side.\n\n\"Where's the car, Howard?\"\n\nMr Polite told him.\n\n\"Go get it to take Sam back to his office. And get this useless sonofabitch outa here.\"",
        "Howard hauled the sobbing Weasel to his feet and hustled him out. \"One thing, Sam,\" said Mulrooney, \"I don't want you going near the girl's parents unless essential. Come to me first. You've got a reputation and the mother's a nervy type. If she knew you were involved, she'd have a conniption.\" He shrugged a sort of apology. \"Your reputation... Start at the college, why don't you?\"\n\nThis hampered my style a bit but I'd go along with it for the moment.\n\n\"And if you need backup,\" Mulrooney continued, \"you can rely on Howard. He's a good man.\"\n\n\"What's his story?\" I asked, \"He's a few cuts above most of your... er... associates.\"\n\n\"Ex-army, infantry captain. West Pointer would you believe. He was at the Normandy landings and the Battle of the Bulge. Took out three Panzers by himself. Won a clutch of medals including a Silver Star and a Purple Heart. MPs got him a couple of years after the war---he was dealing on the black market in Berlin. Should have been dishonourably discharged and pulled three to five in Leavenworth but because he'd been a war hero it was hushed up and he was given a medical discharge, delayed battle fatigue. Despite that, word got out somehow and he couldn't get legit work so I took him on. Anyway, you want him, just whistle.\"\n\n\"Don't tell me how to whistle,\" I said as I left, \"You're nothing like Lauren Bacall.\" King Kong was trying to staunch the Weasel's blood and none-too-gently going by the noises the creep was making.\n\nI pointed to the copy of Yippee! \"Page twenty-six is pretty good,\" I told the bruiser. I didn't know if it was or not. My reading material is a little more sophisticated.\n\nKK grinned. \"Yeah?\"\n\n\"Yup, guaranteed to grow hair on the palms of your hands,\" I said as I made for the outside.\n\n* * * * *\n\nBack at the office I found Henry, the janitor, scrubbing away at the floor. \"Looks like blood, Mr Malone,\" he complained.\n\n\"Cut myself shaving,\" I lied.\n\nHe studied my face. \"You heal fast.\"\n\n\"Better believe it.\"\n\nHe lifted up Weasel's brass knuckles to show me. \"Found these in the trash.\"\n\n\"Oh yeah, they're my mom's. She thought she'd lost them.\"\n\n\"Must be a tough cookie, your mom,\" said Henry.\n\n\"You got it. Us kids never dared criticise her meat-loaf.\" I stuffed a ten-spot in his top pocket. \"Just do what you can with the floor, Henry.\"\n\n* * * * *\n\nI stood at my clothes closet debating. Usually with a simple job of skip-tracing there's not too much to worry about but when the Mulrooneys of this world are involved, even if only as middlemen, it can bode ill. I decided on the cautious approach. I've got several pairs of hand-made shoes, designed to my specifications. They have built-in steel toecaps. I had them made out-of-town and the makers thought I was a building inspector or something like that who needed safety shoes for work.\n\nBy the same token, all six of my fedoras have modifications. Between the lining and the outer felt there's a thin layer of specially-made chain mail. Okay, maybe I'm paranoid but if I am, I'm alive and paranoid.\n\nSo where to start? Guess I'd mooch on over to the Community College as Mulrooney suggested. The girl was bound to have some friends there, people who might be more likely to talk to me rather than to her parents. Especially if she was just off on a toot or was romancing with some handsome young swain.\n\nIt started out as a bit of a wasted journey. Plenty of students recognised Kathleen's photo, others knew her personally but hadn't seen or heard from her for a few days. One thing, most said she wasn't the type to go off on the razz.\n\nI'd been strolling round for about thirty minutes, talking to groups of students, getting nowhere fast when a familiar voice greeted me. \"Hi, Sam, what are you doing here?\"\n\nI turned to the pretty young girl who'd spoken. \"Miranda. Good to see you. You're looking great.\"\n\nMiranda had been a hooker when I met her but not yet one of the hardened variety, the kind who'd mug a bishop while he was still taking his cassock off. Guess I found her in time. Miranda was basically a sweet kid who'd gotten all the bad breaks life could throw at her. The daughter of a junky and a violent drunk, she escaped from home when she turned eighteen only to run straight into the arms of a nice guy who'd protect and care for her (that's a polite way of saying a pimp).\n\nMiranda had been with the scumbag a little over a year when I came along. I found her sitting on the sidewalk crying. When I lifted her up I could see that she'd been badly beaten. Her 'saviour', the 'nice guy' pimp, thought she was holding out on him and worked her over as an object lesson to others. I don't know whether she was or not, that didn't justify the beating he'd handed out. To make things worse, he expected her to carry on working despite her battering to make up, he claimed, his losses.\n\nI went after the bastard and had a few words with him. When he got out of hospital some weeks later, he decided that perhaps pimping in my neck of the woods was too dangerous an undertaking and shipped out fast. I put the word out that any other 'protector' I caught mistreating his ladies would meet the same fate. Some might even find themselves contemplating the surface of the harbour waters from beneath.\n\nAs for Miranda, she became like a little sister. Mr 'Nice' had tried to get her on the junk but her upbringing put her off that. I got her off the game and found her respectable work in a wholesale grocery business. Didn't pay like hooking but on the other hand her take home money was all hers. I found her a room in a women-only lodging house run by a nice old widow and even persuaded her to continue school at the Community College.\n\nMiranda did come onto me a few times but I always turned her down. I think she was so starved of affection that she reached out to anyone who was nice to her.\n\n\"Don't you like me, Sam?\" she cried once after I said 'No' for the ninth or tenth time.\n\n\"Yeah, I like you a lot, Miranda,\" I'd told her, \"Just not that way. Hell, I'm twice your age in years and five times in experience. You've got to get used to the idea that not every guy who's nice to you wants to get into your pants. A lot just genuinely want to be nice.\"\n\nI told Miranda why I was on campus and she looked carefully at the photo. \"Can't say I know her, not personally. Seen her around is all. I know who may be able to help, Miss Campion. She's the personnel administrator here and she's been a good friend to me. Come on, Sam, I'll take you to her.\"\n\nMiranda led me through a maze of corridors and staircases that would have baffled a Greek hero until we arrived at Miss Campion's office. I'd already made up my mind what to expect. Miss Campion would be a stereotype personnel administrator, closely chasing sixty with her grey hair pulled back into a tight bun. She would favour a brown tweed business suit and her upswept glasses would be on a cord hanging round her neck. I was already mentally addressing her as 'Ma'am'.\n\nWe reached her office and my guesswork flipped me the bird and told me I was an asshole. It was right.\n\nMiss Campion was the type of woman who could make the Pope jump in the air and click his heels together. Tallish, maybe about thirty and looking damn good with it, she had auburn shoulder-length hair, a slim figure but one that went in and out where it should, and the most oddly-coloured, fascinating eyes I had ever seen, a shade of blue that was close to purple.\n\nMiranda introduced me, telling the administrator I was a PI hoping for a little help. Taking off my hat, I addressed her politely as 'Miss Campion'. \"Make it Giselle,\" she said, holding out a hand. It was the nicest hand I'd shaken for many a long day. \"I'm Sam.\"\n\n\"And what can I do for you, Sam?\"\n\nI explained, producing the portrait photo to show her.\n\n\"Kathleen Hennessy,\" Giselle said, \"I was told she'd missed several classes recently. I was going to check on her in a couple of days---college policy is to give absentees five days grace before trying to contact them. You'll appreciate that many of our students can't access a phone easily. That wouldn't be a problem for Kathleen but we extend the courtesy to all students.\n\n\"Leave me a business card, Sam,\" she continued, \"I'll make some enquiries here and let you know if I turn anything up.\"\n\nI thanked Giselle, shook that lovely warm hand again, then Miranda showed me the way out. As we reached the street, Miranda said: \"I'll ask around too, Sam.\"\n\n\"I'd rather you didn't,\" I told her.\n\n\"But I'd like to help you, Sam. You've always been wonderful to me and I'd do most anything for you.\" She looked hurt. \"Maybe you don't trust me?\"\n\n\"Miranda, you're one of the people I do trust, no question,\" I told her, \"Thing is, without mentioning names, I've been hired to find Kathleen by people who tread the wrong side of the law. Now this may be an easy and straightforward case but with my employer in it, it's better you stay out of it. Just in case...\"\n\nI kissed her forehead and promised to take her to dinner as soon as I was free.\n\n* * * * *\n\nI called Mulrooney from the nearest pay-phone and asked for the names of Kathleen's close friends. The list was waiting for me when I got back to the office. I noticed that Henry had managed to clean the Weasel's blood from the floor. Trouble was, he'd done such a good job that the rest of the floor now looked extra grubby. Still, he'd done well so I promised myself I'd slip him a few bucks bonus.\n\nI looked over the list of names. Given the social circle that Kathleen's family moved in there were quite a few 'close' friends. However, Mulrooney---or maybe Howard---had managed to mark off names in levels of importance to Kathleen. That left me with about half-a-dozen to check out. Result: nada! A couple were on vacation, the others as puzzled as everyone else. As all said in much the same way, they hung out together regularly and, as they'd told her family, they'd heard nothing from their friend, had no idea where she was.\n\nI got back to the office about five-thirty or so and was writing up the day's report when I had a call. It was Giselle Campion.\n\n\"I don't know if there's anything in this, Sam,\" she said, \"but I overheard a couple of kids saying they thought they'd seen Kathleen going into a place called The Easy-Go Club. No idea where that might be, though.\"\n\n\"Thanks, Giselle, I'll find it. In fact, no time like the present.\"\n\n* * * * *\n\nOn occasion I find it more convenient to carry a smaller gun than my .45. When I do, I favour the Colt Detective Special .38, double-action with two-inch barrel, for my back-up piece. The weather this evening was fairly chilly so my coat'd be buttoned up making it awkward to reach the .45 if needed in a hurry. I stuck the .38 in my coat pocket. I didn't think I'd need it but you know what they say about being safe...\n\nA quick talk with a cabbie friend of mine pointed me in the right direction. When I got there, The Easy-Go so-called 'club' was as unimpressive as you can get, maybe a dozen or so tables and several booths. Dingy lighting as if they wanted to save on the power bills. Filthy floor as if they wanted to save on cleaner's wages. The stink of stale booze as if they wanted to save on air-fresheners.\n\nThe place was full of early evening drinkers. They were as shabby as their 'club', mostly life-beaten old blue-collar guys seeing out their retirement on pitchers of beer and shots of cheap whiskey. A few of them were dedicated winos---you could tell by the puke stains down their twentieth-best suits. Heads were raised as I walked in, a hundred or so eyes in various stages of bleariness stared. Several must have recognised me for they tried to hide by lowering their heads and finding something interesting on the floor. Ostriches have nothing in it. It got real quiet.\n\nMaybe Giselle had got her names mixed up. This wasn't the kind of joint you'd expect to find a missing girl. Or get any information. Still, I was here now... \"It's okay, fellers,\" I said, \"I'm not here for trouble, just like you to look at a photo, see if you recognise the girl in it.\"\n\n\"Who the hell let you in, Malone?\" snarled from behind me, \"This is my joint and you ain't welcome.\" I knew that grating voice. Albie Gleeson. Small-time mobster with big-time ambitions. We'd had issues in the past. I'd just assured the happy drinkers I wasn't there for trouble. I was wrong. I turned to face Gleeson. He could have been almost tall if he was given another few inches, on the skinny side, gaunt face mean as a spitting cobra with disposition to match, eyes a bit too close together, ears a bit too far apart. He looked funny like a dose of plague is funny. In fact, he was everything the Weasel wanted to be but wasn't.\n\nAnd he had his pet monster, The Ogre, with him. That's what they called the guy, The Ogre, like those in fairy tales only not so pleasant. Guess he must have had a real name at one time but nobody seemed to know what it was. To the sub-world we all moved in he was The Ogre, monster by name and monster by nature. Maybe six-seven or --eight, around three- hundred-and-fifty pounds of sheer nastiness. He was Albie's bodyguard and chief enforcer. And he liked hurting people. With a lot of enforcers it was just another job, nothing personal. With The Ogre it was all personal, all pleasure.\n\n\"Throw the bum out, Ogre,\" Gleeson ordered, \"And if you happen to hurt him badly on the way, so much better.\" A lot of the drinkers perked up like they'd enjoy watching the coming traffic accident and bloodshed.\n\n\"You got it boss,\" the giant rumbled. He grabbed the lapels of my coat and rammed me up against a wall. A huge hand patted down my left-hand side but didn't find a gun. He bared ill-kept teeth in a fake-friendly grin. \"Hope you've got good health insurance, gumshoe.\"\n\nTimes like this I relied on people being stupid or creatures of habit, or in cases like The Ogre, both. They almost always assumed you carried a gun under your left arm. Most of the idiots didn't think of where left-handers might keep their shoulder-holsters. I reached into my right-hand coat pocket for the .38.\n\n\"Are you fond of your dick, Ogre?\"\n\nThe Ogre's eyes bulged. \"Huh? What're you, some kinda fa---\"\n\n\"What I am is a guy holding a gun against your dick and balls,\" I said as I shoved hard so he could feel the muzzle pressing into his groin. I pulled back the hammer. In the room's hush it sounded deadly loud. \"It's got a hair trigger so if you don't let go of the threads right now and back up a few feet, I'm going to blow them off.\"\n\nFor the first known time in the annals of City crime, The Ogre gulped and looked worried, maybe even a little scared. He did as told. As he moved back I kicked out with my steel-capped shoe and there was a nasty popping noise as his right knee tore loose from its moorings. He cried out in pain as he toppled to the floor, the ground shaking a little as he landed. Now he'd get a slight idea of how his victims felt. It occurred to me that he was a little lopsided now so I kicked his left knee out to even him up. This time his shriek was oddly girlish. The Ogre wouldn't be hurting anyone for a long time---he'd be too busy balancing on crutches.\n\nHe was moaning with pain after those kicks and the noise got on my nerves so by way of a pain-killer I kicked him in the face a couple of times. He went to sleep. Hope he likes soup. When he woke up, he'd likely find himself on a diet of the stuff for a few months while the two or three breaks in his jaw mended. The drinkers suddenly lost interest in the proceedings and went back to studying the floor.\n\nAlbie Gleeson looked down at The Ogre with disgust. He didn't exactly brim over with sympathy for his faithful follower. \"Useless sonofabitch!\" he growled and kicked his unconscious associate hard in the ribs, maybe breaking a few more bones.\n\n\"I hope he's got good health insurance, Albie,\" I said.\n\nGleeson's expression was savage like he didn't give a rat's ass about The Ogre's health insurance. It was savage like he wanted to reduce me to a pile of ashes. But he backed down under my gaze. Guess he didn't want to tangle with a guy holding a cocked pistol who could put The Ogre out of other people's misery. \"Go show your picture, Malone,\" Gleeson snarled, \"Then get out.\"\n\nNobody recognised Kathleen but then I didn't expect them to, not with Albie Gleeson standing there. Just maybe, though... There was a guy sitting in a booth behind Gleeson who caught my eye. His face stayed impassive but he glanced towards the door, eyes barely moving, and lifted his beer as if it was a cup. I hoped I was picking up the right signals.\n\n\"Thanks for your co-operation, Mr Gleeson,\" I said politely and then: \"Thanks fellers!\" to the room in general.\n\nAbout a block down I found a diner so I went in, sat at the counter and ordered a cup of joe from the chubby bottle-blonde behind the counter. It occurred that if the guy did have something for me, and if his brain still worked okay, I'd be waiting quite a while---he wouldn't want to be too obvious leaving soon after me. I'd not eaten for a while and feeling peckish ordered a donut to go with the coffee. Cara would have told me to eat healthy and have a salad but Cara was visiting Hickstown, Hicks County, Hicksylvania so my diet didn't figure for much. The donut wasn't all that fresh so maybe Cara would have been right. Still, it filled a gap.\n\nIt was about forty-five minutes before the guy sidled in and took the stool two down from mine without looking at me. I'd had a couple more coffees while waiting. It was harsh stuff and I hoped my bladder could cope. Looked like my new acquaintance was known here because the bottle-blonde put a coffee in front of him without a word passed between them.\n\nHe lifted the steaming cup to his mouth as a shield and whispered sideways, barely moving his lips like he'd had a lot of practise. Ex-con maybe. \"Dunno if it'll be any good to you, mister, but there's a joint called Bizarre, heading on downtown, four-five blocks past the Tobacco Brokers' auction place.\" He paused for a sip of coffee and glanced around. Bottle-blond was pouring coffee into a drunk at the far end of the counter. Nobody else was near us so he continued: \"Heard it's a joint for weirdos, kinda guys and gals like crazy sex things. Also heard they like to get young girls in there. Maybe worth your checkin' out.\"\n\nI took out a pack of Luckies with about seven or eight cigarettes left in. Under shelter of the counter, so only my new friend could see, I slipped a folded sawbuck into it, laid it openly on the counter-top, pulled a Lucky and put a match to it.\n\nMy informant turned as if noticing me for the first time. Aloud he said: \"Can you spare one of them smokes, mister?\"\n\nI pushed the Luckies towards him. \"Sure. Here, keep the pack, I've got more.\"\n\nHe nodded his thanks and the bottle-blonde said: \"You shouldn't be so generous, mister, Andy's always bumming smokes from my customers.\"\n\n\"What's a few butts? Don't hurt me, pleases him.\" I laid enough money on the counter to cover the coffee and donut with the tip just right, neither big enough nor small enough to get me remembered. \"Great coffee,\" I lied to blondie and she simpered as I walked out the door.\n\n* * * * *\n\nI found Bizarre in a fairly sleazy street about ten minutes walk from where Andy had said. A small neon sign, pink-and-purple and with a couple of letters out, signalled its name. I said the street was sleazy, it was little more than a collection of cheap bars, burlesque shows, strip joints and stores selling merchandise I didn't care to think about. I spotted a number of society's rejects curled up on the sidewalks and the gutters, winos or hop-heads sleeping off their latest jag. I couldn't really see the area appealing to anyone from a decent home but with kids... hey, who knows? Bizarre's door was open and faint notes of music drifted up from somewhere. Sounded like Glenn Miller, Chattanooga Choo-Choo. There was a dimly-lighted, narrow corridor leading Christ knows where. Ah well...",
        "I stepped in and had hardly gone more than three or four paces when a gruff voice from a shadowed booth challenged me. \"Where you goin' mister? This here's a private club, members only.\" There was no warm welcome there.\n\nI thought I knew that voice. \"Hey, Ting-a-Ling, is that you? It's Sam Malone.\"\n\nSuddenly the voice switched to warm. \"Hey, Mr Malone, long time no see.\" Its owner exited the booth and came out into the dull light. We shook hands. Ting-a-Ling Bell was an old retired pug and it showed in his battered face. He'd been a pretty fair middle-weight back in the day, not in the top ranks but likely half-way up the second tier. But as so often happens with the Ting-a-Lings of the boxing world, one brutal roundhouse punch too many addled his brains a little and the Commission's doctor refused to renew his license. He'd had a few fights in the unlicensed world and even that proved too much in the end. One thing in his favour, though---unlike many of his kind he drank nothing stronger than club soda. Too many former fighters ended up in the gutter, bumming loose change for their daily cocktail of cheap Muscatel and vintage Sterno. Nowadays Ting-a-Ling scratched a living acting as bodyguard for street bookies or numbers runners or playing doorman in dumps like Bizarre. For all that he was a bit punchy, he was still capable of dealing with the average punter. Every once in a while he'd tip me some information he thought might be useful.\n\n\"So what you doin' here, Mr Malone? Strikes me it ain't your kinda place.\"\n\n\"Looking for a runaway,\" I told him, \"Heard they like young girls here.\"\n\nTing-a-Ling sighed. \"Yeah, happens. Makes me wanna puke at times, workin' here. But hey... a guy's gotta eat.\" He pointed to a staircase at the end of the corridor. \"You go on down, Mr Malone. Hope you got a strong stomach.\"\n\nI stuffed a couple of notes in his hand. \"Thanks, Ting-a-Ling.\"\n\nThe music grew louder as I descended until it was blasting out when I found myself in the first of a series of basement rooms. The joint was heaving and the air stank of hamburgers in old fat, stale beer, sweat, cheap perfume and, if my nose wasn't playing me false, Mary-Jane. I wished I had an oxygen-mask in my pocket.\n\nOff to my right was a very small room or very large closet and a man's voice called out to me. \"Hey, handsome! You with the hat!\"\n\nThere was a guy and a woman in the very small room. What's so odd about that, you might think. Well, plenty odd unless you're into that sort of thing. He was naked and strapped to an X-shaped cross. And he had a boner the average stud racehorse would have been proud of. His lady-friend made me think of a concentration camp guard. She was short and squat and must have weighed upwards of two hundred pounds in her sole garment, a leather-and-metal studded g-string. In one hand she held a reefer, in the other a riding-crop. \"Hey pal, you like to join us?\" Mr X said.\n\nMiss G-string brought the crop down on his boner. Hard. I winced. Flabby breasts shook and wobbled as she hit him. \"Who gave you permission to speak, you dickless creep?\" Dickless? She needed to see her oculist and soon. And his pecker stayed up despite the assault.\n\nHe squealed then beamed widely. \"Thank you, mistress,\" he said, and to me: \"Offer stands, pal!\"\n\nAnd I'd only just reached the foot of the staircase. Bizarre was right. \"I'll take a raincheck,\" I told him, \"It's my time of month right now.\"\n\n\"Aw, pity!\"\n\n\"Shaddap!\" Whack!\n\n\"Squeal! Thank you, mistress.\" I moved on before my coffee and donut came back up. Glenn Miller had switched to Little Brown Jug.\n\nI went further into the joint and realised I was one of the few normal-looking guys in the room. I saw about half-a-dozen big guys in tuxedos hanging around, I guessed bouncers, or stewards as bouncers like to be called now. They didn't pay me any attention. I suppose a raincoat and fedora was just as weird in this place as everything else---maybe they thought I was a wienie flasher. There were a few of this newish movement I'd heard of, all of them black-clad---'Beatniks' I think they're called---tucked away in a corner, one of them reading some sort of avant garde poem to the others. I caught a few words, didn't understand a one of them.\n\nI cruised around, going through a number of different rooms. There were men wearing thick make-up, women with shaven heads. Men smoking multi-coloured cocktail cigarettes and women smoking cigars and pipes. Men wearing corsets and stockings, women in tuxedos. Men fastened into leather collars, women with heavy stevedore's boots. I began to feel that I'd walked into some kind of alternate universe, the kind of place a science fiction writer like Asimov might dream up. The only thing missing was Kathleen Hennessy, that is if she'd ever been in the place at all.\n\nIt was in a back room, furthest from the stairs, that I saw four women sitting at a round table, heads almost together as they talked. I said 'women' but the three facing me weren't much more than girls, eighteen, nineteen maybe. All four were dressed normally from what I could see in the dim light, sweaters and skirts, not a whip nor a g-string between them. I casually wandered round to get a look at the fourth and recognised her.\n\n\"Giselle?\"\n\nGiselle Campion looked up, a shocked expression on her face. \"Sam!\" She recovered quickly, stood and took my arm to lead me away from her companions. \"What are you doing here, Sam?\"\n\n\"My job,\" I told her, \"Looking for a missing girl. I had a tip-off they sometimes got kids down here. This is the kind of dump my work takes me. I wouldn't have thought this was up your street.\"\n\n\"It's not.\" Giselle shook her head. \"Like you, I had a tip that some of the college kids come down here. I was trying to persuade those three to leave but I might as well have talked to myself.\"\n\n\"Like me to speak to them?\" I asked.\n\n\"No. Will you just take me out of here, Sam?\"\n\nWe almost made the foot of the stairs when some jerk grabbed Giselle's arm. \"Hey, babe, what's your hurry?\"\n\nGiselle tugged. \"Let go of me!\"\n\nHe tightened his grip. \"Nah! You an' me are going to make sweet music.\"\n\nHis pupils were pinpoints. He was on something. \"The lady said let her go,\" I told him.\n\nWhatever his medication of choice, it made him brave. \"Butt out, bud, or get hurt!\"\n\nI couldn't be bothered to be nice and argue. My punch travelled about six inches, took him in the solar plexus, and he folded.\n\nOne of the bouncers turned in time to see the jerk hit the floor. \"What's going on?\"\n\nI shrugged. \"No idea. The guy just collapsed. Maybe a heart attack?\"\n\nThe bouncer called to a sidekick. \"Hey, Billy! Give me a hand to get this bum out of here before he gets the place a bad name!\" Human compassion and kindness. It always makes me feel warm and fuzzy inside.\n\nMr X was still fastened to his cross, apparently still rampant. \"Don't forget!\" he yelled, \"Next time you're here!\"\n\n\"Shaddap!\" Whack!\n\n\"Squeal! Thank you, mistress.\"\n\nAnd Glenn Miller was still playing, Tuxedo Junction now. It should have been beneath Glenn's dignity to be played in a venue like Bizarre but then, he was dead so most likely didn't care too much.\n\nI left Bizarre shaking my head and feeling slightly unclean. How Giselle felt I don't know but in the dim light of the club's neon name she seemed a bit queasy. I couldn't see Ting-a-Ling around so I guessed he was taking a leak-break. I hailed Giselle a cab and stuffed a couple of notes in the driver's hand. \"Where the lady wants to go,\" I told him, \"stay with it until you see her go into her building.\" He nodded.\n\n\"Aren't you coming with me, Sam?\" Giselle had rolled down the passenger window to speak to me. Either that or to get rid the cheap cigar smell in the cab.\n\n\"No, I'll stick around for a while in case anyone interesting turns up.\"\n\n\"It's only just after nine, Sam. Come up later for a drink,\" she invited, \"I don't sleep all that well so I don't often go to bed before one or two. Here's my address and phone number.\" Giselle pressed a slip of paper into my hand.\n\nI watched the cab go, raising a hand to Giselle who was waving out of the back window. I lit a cigarette then looked around. Down to the left of the club's entrance was an alleyway and I thought I could hear a muffled cry. Probably nothing but I went to take a look.\n\nThere was a girl struggling with three guys who looked like neighbourhood street-gang members. Two were holding her arms while the third had a hand over her mouth and was tearing at her clothes. He took his hand away for a second and she opened her mouth to scream so he backhanded her. I ran into the alley, yelling at the punks. Then as usual in real life, it all happened far faster than it takes to tell it. The one ripping the girl's clothing shouted something like, \"Get that motherfucker!\"\n\nThe other two goons came at me, the one slightly ahead pulling a large switchblade, the other hefting what looked like a length of lead pipe. I could have used my .38 but in the gloom there was always an off-chance of hitting the girl. And if I shot anyone, no matter how justified, I'd be hours answering police questions..\n\nThe blade-man thought he knew knife-fighting but he hadn't been on Iwo Jima facing a\n\nfanatical Japanese soldier with a death-wish. I evaded his attempt to gut me, locked his arm and broke his elbow. He didn't get any chance to scream because I swung him round in time to meet his pal's descending bludgeon. It made a nasty noise on his skull. If he'd had any brains to start with, they weren't going to be much use from now on. I hit lead-pipe with a knife-edge hand to the Adam's apple and he went down clutching at his throat, choking, his weapon clattering on the ground as it fell from his hand. Grabbing the back of his head, I tried to punch a hole in the alley wall with his face. Despite several attempts it was no dice, the wall was harder than he was.\n\nAs I said, this all happened so fast the leader didn't notice what had happened to his buddies, he was still struggling with the girl and trying to get his dick out. I kicked him so hard that the only way he'd get his dick out in future would be through his ass. He curled up in a knot, puking so I gave him another kick for luck, made sure he wouldn't find his dick anyplace soon. First retrieving my gun, I took my coat off to wrap around the crying girl's shoulders. \"You're okay now, honey. They won't bother you any more.\"\n\n\"Hey, what's all the racket here?\" It was Ting-a-Ling. He came running, big fists clenched, ready to pile into any trouble.\n\n\"It's over, Ting-a-ling,\" I told him, \"Call the cops and a couple of ambulances.\"\n\nHe looked at the punks then said, \"Maybe a hearse would be better.\"\n\n* * * * *\n\nAfter I'd spoken to the cops I watched the bad guys being thrown into the paddy wagon, injuries and all. Sex offenders were among those high on the list for rough treatment (and it would get even rougher in the pen where they were the lowest of the low). The girl was taken to hospital for checking over. My evening had been full of action and I was getting tired. Why not take Giselle Campion up on her offer of a drink? I found a pay phone and she told me to come straight round.\n\nGiselle met me at the door to her apartment. She had a light robe over what could be silk pyjamas and both seemed to cling closely to her figure. Soft lips caressed my cheek. \"What kept you, Sam, somebody of interest turn up?\"\n\n\"Not exactly. You'll probably read about it in the morning papers.\"\n\nGiselle poured a Scotch and handed it to me. \"This should relax you. And if it doesn't. how about this?\" Slim arms crept around my neck and soft lips clamped to mine. A lively, sweet-tasting little tongue played havoc with my libido and all traces of the earlier violence were washed from my mind.\n\nGiselle tucked two fingers into the waistband of my trousers. \"How'd you like a tour of the apartment, Sam? We could start with the bedroom.\"\n\n\"If that's what you recommend, who am I to argue?\" I said.\n\nTwo more fingers crept into my waistband and she urged me forward. \"Don't look now but the bedroom's this way...\"\n\n* * * * *\n\nI stepped out into the early morning chill, taking in a deep breath of what passed for fresh air in this neighbourhood. I loitered on the sidewalk for a few minutes, not thinking about much in particular when I became aware of a car's engine starting. I glanced round in time to see a black sedan with dark windows picking up speed and racing towards me. I pulled my .38 and leapt back into the block's doorway just as the sedan swept by where I'd been standing seconds before. I took aim at the driver's area for a snap-shot then pulled off and fired into the air. I was fairly sure it meant to get me but there was just the off-chance it could have been a drunk driver or some punk in a stolen car. I didn't want to be investigated for possible homicide or manslaughter. Brakes screeched as the speeding spun round the next corner, almost on two wheels.\n\nThen an anxious-sounding Giselle was beside me. \"Sam! Are you okay?\"\n\nAs I was reassuring her, a guy I took to be the building manager hobbled out, looking like he'd just hauled his trousers over his pajamas. Still pulling suspenders over his shoulders he yelled: \"Hey! Was that a shot I heard?\"\n\nMy gun was back in my pocket. \"No, a backfire!\" I told him, \"Some kids in hot-rods playing crazy games.\"\n\n* * * * *\n\nI made the front pages that morning. The headline and story in The Bugle was what I would have expected. Summarised it was \"Get Malone any way you can!\"\n\n<p align=\"center\">\"THUG!</p>\n\n<p align=\"center\">Rogue PI does it again!</p>\n\n<p align=\"center\">How many more times? The Bugle demands to know</p>\n\nLast night thuggish private investigator Sam Malone put three young boys in hospital, all of them seriously injured. How many more times is this licensed brute going to get away with it? The Bugle says that if the police won't do anything about this vicious 'lawman' then perhaps the public should take things into their own hands...\"\n\nAnd so on. No mention that the 'three young boys' were all in their twenties. No mention of the weapons they tried to use on me. No mention of their extensive rap-sheets. And worst of all, no mention of the poor girl they were trying to rape.\n\nI didn't blame the editor and reporters. I knew a few of them and they were mostly good guys. The trouble was the paper's owner, a wealthy jerk by the name of Bronsteen. He'd tried to put his greasy hands up Cara's skirt once in front of me and I had strong words with him about his bad manners. Ever since I'd been a target. The paper's staff were left in no doubt that to say anything good about me meant 'Goodbye job!' And no more jobs anywhere in the city, maybe even the whole State---scuzzball as he was, Bronsteen was a scuzzball with the clout to manage this.\n\nAll the other papers stuck to the truth.\n\n<p align=\"center\">The Clarion: HARDMAN MALONE STRIKES AGAIN: STOPS RAPE!</p>\n\n<p align=\"center\">The City Courier: LONE HERO SAM TO THE RESCUE</p>\n\n<p align=\"center\">The Mercury: ARMED RAPISTS STOPPED IN THE ACT</p>\n\nTrouble is, more morons read The Bugle than any other paper and the most moronic believe all its shit. Maybe they can read the other headlines, though. I can't see myself hiding from vigilante mobs any time soon. I always thought that incitement to mob rule was a crime but I heard Bronsteen made generous donations to the party running City Hall. Says it all. One day when I could spare the time I'd have another serious discussion with Mr Bronsteen.\n\n* * * * *\n\nMy dreams of a peaceful week were in ruins already. It started with rearranging Weasel's nose, onto The Ogre's orthopaedic surgery, next the 'heart attack' guy and...\n\nI had to go into the precinct house that morning to give my statement. Things turned a bit unpleasant from the time I pushed through the swing doors. The desk sergeant on duty was a big fat guy named Baaker. I'd never come up against him before but I'd heard plenty and none of it good.\n\nSeems Baaker liked shoving people around, not just suspects or perps but witnesses and members of the public too. He was a one-man 'let's-make-the-cops-unpopular' crusade. His duty shifts lost a lot of public-spirited citizens. Plenty of complaints had been made against him but trouble was, there were never any witnesses. Oh, there were always other cops around, mostly his subordinates, but cops don't rat on cops. So Baaker got away with it. When I announced my name he sneered. \"Oh yeah, you're the guy likes beating up on kids.\"\n\n\"No, I'm the guy who stopped three armed would-be rapists and I'm here to make a statement. You should read a better quality paper than The Bugle.\"\n\n\"This is my precinct and you're whatever I say you are.\" Baaker stepped round from behind his desk to invade my space. He was as tall as me and likely outweighed me by around a hundred pounds. Obviously used to people backing down when he got so close, an ugly look came into his eyes when I didn't move. \"Hard guy, huh? Let's see how hard you are.\" He laid a big hand on my chest and slammed me against the wall. He may have been a fat slob but there was some real power in those arms.\n\nThere were a number of other cops standing round and, to be fair, most of them looked disgusted at their sergeant's antics. That said, they'd still come down on his side if necessary. Baaker slapped my face, not hard but to humiliate. I didn't retaliate, just stared at him. I'm tough but I'm not eight or nine burly cops with nightsticks whaling the shit out of me tough.\n\nStanding at the back of the crowd was a rookie cop called Vasari, a kid I'd helped out once when he got himself into an awkward situation. Almost unnoticed by the others, he slipped out of a side door.\n\n\"You're some piece of work, Baaker,\" I told him, \"You compensating for having a tiny dick?\"\n\nThis raised loud sniggers from among the other cops and that did it. Baaker went purple, slammed me against the wall again and raised a huge fist. That's when Lyle Garrett walked in. I guess Vasari had just paid off his debt to me.\n\n\"What the hell's going on here?\" Lyle yelled, \"Ain't you guys got anything to do? Get out there---serve and protect the public like you're paid for!\" As the chastened cops slunk out, Lyle added: \"Not you, Baaker!\"\n\nWhen only the three of us were left, Lyle said: \"This time there's a witness against you, Baaker, me! I've got no room for people like you in this precinct. So here's what we're gonna do---you can face a disciplinary board and get canned without a pension. Or you can accept a post I've got in mind and cruise through to retirement, pension intact. Which?\"\n\n\"Not much of a choice, looks like I'll have to go with you, Captain,\" he mumbled, \"What you got in mind?\"\n\n\"The Sheriff's Office needs an evidence keeper and storeman. You apply for a transfer and I'll see you get it. Nice simple work and no contact with prisoners or public.\"\n\n\"That's right out in the boonies, Captain!\" Baaker protested.\n\n\"Yeah, and the Sheriff's an old buddy of mine. He'll be keeping a close eye on you. You step out of line just once and you'll find yourself directing traffic in Shitsville, North Dakota. We clear on that?\"\n\nLyle turned to me. \"Do you wish to make a complaint against this officer, Mr Malone?\"\n\n\"No, but I would appreciate a private word of brotherly forgiveness with him.\"\n\n\"That's very noble, Mr Malone.\" Lyle wandered over to a window, his back to the room. \"Funny, I've never noticed before, it's a beautiful view from here,\" he said. He was looking out over the parking lot.",
        "I turned to Baaker, putting a friendly hand on a shoulder. \"Sergeant, I'd like to say thanks for showing me what it takes to be a real tough guy.\" I sank my fist up to the wrist in his fat gut and he went to his knees, struggling not to throw up. \"All finished here, Captain,\" I said.\n\n* * * * *\n\nAfter leaving the precinct house, I spent a pretty fruitless day pounding the sidewalks in all the places I thought a missing teenager might go. Perhaps the trouble was I'd seen about twenty years or more than the average teen and my brain was wired differently. A thing I did hear from a few different sources was that a number of young women had gone missing in recent days. I didn't pay too much attention to these stories. This is a big city and people disappear all the time. Many of them don't want to be found. The cops weren't too bothered either. Unless there's something really serious going down---like an itinerant killer---the separate precincts tend not to share information. They have enough problems of their own to deal with.\n\nEvery month or so Lyle and I would have dinner together or lift a couple of pitchers of beer or go to a ball-game. It helped us clear out the human shit that we saw in our working lives, Lyle likely more than me.\n\nSo when the sidewalk pounding grew boring I called my pal and we arranged to have dinner at Ziggy's. Ziggy was an old retired cop who set up his own diner after leaving the force. I don't know what he was like as a cop---before my time---but his cooking was great, his steaks to die for. One of his sublime fillet steaks with a side of fries and a beer or two was a feast fit for The White House.\n\nWe tried not to talk shop on these occasions but now and again the shop landed on us. Lyle's fault for being a captain, they had to know where he was at all times.\n\n\"Hey, Captain,\" Ziggy called out, holding up the bar phone, \"Precinct wants you.\"\n\nLyle went and took the call, returning with a grim face.\n\n\"That's dinner fucked, \" he told me, \"I've got to go in. Baaker's dead. Hit-and-run, about fifteen minutes ago. Or maybe I should say multiple hit-and-run. Whoever did it went over him three or four times to make sure.\"\n\n\"Difficult to write that off as an accident,\" I said, \"Any witnesses? Any idea who might have done it?\"\n\n\"No wits---it was just back of our parking lot and the street lighting's shot to hell there. As for suspects... You saw Baaker in action today. Could be half the city. Hell, Sam, you'd be a suspect if you weren't here with me.\"\n\n* * * * *\n\nI had an early phone call when I was shaving next morning. It was Ting-a-Ling Bell. \"Can we meet up at Hogan's for coffee, say an hour. Got something that may be useful for you.\"\n\nHogan was another retiree, fighter this time. He was one of the lucky ones, kept his brains and money intact. When he gave up the game, he poured a chunk of his money into a gym-cum-boxing club and made a success of it. He made his back office available to me when I needed some private time with a snitch, complimentary coffee included.\n\nWe had a few courtesy minutes talking with Hogan, who was looking good, who had potential, that sort of thing then he opened the office, gave us a mug of java each and left us to it. \"What've you got, Ting-a-Ling?\"\n\nHe lowered his voice although there was only the two of us. \"That cop who got wasted last night... word on the street is that he was dirty. Not sure who he worked for, could have been Albie Gleeson but that's just scuttlebutt. Said he got greedy, wanted a bigger cut and if he didn't get it he'd spill the beans. Good way to have a fatal accident.\"\n\nI slipped Ting-a-Ling a couple of twenties. He's not a greedy guy, said that was too much for what he'd given me. \"It's worth a helluva lot more to me, pal,\" I told him.\n\nPlaying safe and keeping Hogan's out of it, I found a pay phone several blocks away and gave Lyle a call. \"Got a couple of tickets for the next big game,\" I told him. When I had to call him at the precinct, we'd worked out a set of code-words for different situations. There were always ears flapping and we didn't trust the call operator. The tickets and game ploy told him that I had some information from a trusted snitch and to meet me at the usual place.\n\n* * * * *\n\nThat's when I had a little more cop trouble. I was pulling into a parking spot near our usual rendezvous when my rear-view mirror showed a flashing red light and I got a single warning siren note. The patrol car pulled up beside me, hemming me in. Another glance told me I'd been stopped by Mason and Emmett, also known as Laurel and Hardy.\n\nPractically every precinct in the city had its Laurel and Hardy. When a lot of the younger cops were drafted for the military, the shortfall was filled by guys who mostly wouldn't have been hired as precinct janitors. Come the end of the war, a lot of the surviving regular guys returned and the Police Department tried to get rid of the waste wood. That was when the Police Federation stepped in and refused to allow it. Lyle's penance for whatever sins he'd committed was these two.\n\nThey'd been christened Laurel and Hardy because one was short and skinny like Stan and the other tall and fat like Ollie. Ollie unfastened his holster, took out his Police Positive and pointed it at me. That meant if he decided to open fire, I'd be fairly safe. God help any innocent citizens walking by. In the interest of public safety I kept my hands on the wheel.\n\n\"Step out of the car,\" Stanley ordered. When I complied he gestured to the trunk end and had me assume the position to pat me down. \"Hey, he's armed!\"\n\n\"I've got a Federal carry permit,\" I said, wearily. These clowns would make anyone weary. \"I've also got a city carry permit, a driver's license, my PI license and social security card.\"\n\nLaurel dug all of these items from my wallet and beckoned his partner. \"These look like forgeries to me. What do you think?\"\n\n\"Definitely forgeries,\" agreed Ollie. I couldn't decide which one was the bigger idiot.\n\n\"I think we've got the guy who killed Sergeant Baaker,\" said Stan. He took out his nightstick and for a moment I thought he was going to lay into me. Instead he walked to the front of my car and I heard the tinkling of glass as he smashed the headlights. Ollie's pistol hand was starting to shake and I started to feel nervous. After surviving the war I'd hate to die at the hands of a cop who should be cleaning public rest-rooms.\n\nStanley strolled back. \"Serious damage to headlights,\" he announced, \"and the fender's buckled, like the car was in a hit-and-run.\"\n\nThat was when Lyle arrived for our meeting. He climbed out of his car. \"What the fuck---\"\n\nStanley pointed at me. \"We've got Baaker's killer, Captain.\"\n\nLyle sighed. \"You pair of morons. What were you doing during roll-call, jerking off in the men's room? You'd've heard that Mr Malone was with me at the time Baaker was killed. Or maybe you're planning on arresting me as an accessory? I don't mind you being stupid. I do take it badly when you think I'm as stupid as you are. And holster that pistol, Emmett, you're a menace with it in your hand.\"\n\n\"We didn't know who he was, Captain,\" Stanley protested.\n\n\"You've got all that ID and you didn't know who he was. Christ!\" Lyle shook his head in disgust. \"Right, we're going to take Mr Malone's car to the best repair shop in the city and guess who's paying for the damage---and it won't be the Police Department.\"\n\n* * * * *\n\nI'd told Lyle that Baaker might have been dirty and he'd worked fast. Among Baaker's effects was a key-ring and on it an obvious safe-deposit box key. It was quickly identified as being for a bank one block down from the precinct. I figure Baaker wasn't too bright. That or he was plain lazy and couldn't be bothered to go any further. And not many cops made enough to warrant a safe-deposit box. Lyle went to a friendly judge and got a search warrant.\n\nWitnesses for the opening of Baaker's box were me and Lyle, a lieutenant from Internal Affairs, a humourless-looking IRS agent and the bank's manager who kept trying to assure us he wasn't involved in shady goings on. I was there as a courtesy, the story being that I was investigating a possible insurance fraud involving Baaker. For some reason the IRS guy didn't like me being there until Lyle suggested he go and argue the point with Judge Francis. After that he shut up. Judge Francis was known to dislike Federal agents, especially IRS. He'd once put some FBI guys in the slammer for a few hours for contempt. J Edgar was not amused.\n\nThe box was the largest size the bank provided. The banker opened the first of two locks, Lyle the second and the lid creaked as it was lifted. Mr IRS showed his first touch of humanity as the contents were revealed. \"Holy shit!\" he hissed, \"We're all in the wrong job.\"\n\nThere was more money in the box than the average unpleasant, fat desk sergeant could hope to make in a couple of lifetimes. It was going to take an IA guy and an IRS agent a good couple of hours to count that lot.\n\nThere was something else there, a faded and slightly blurred photograph of a woman. Her face wasn't too clear because she was turned away slightly from the camera, peeping back over her shoulder, and long blond hair hung down to cover one eye. She looked a lot like that peek-a-boo actress, Veronica Lake.\n\nLyle passed the photo round. \"Anyone know who she is?\" Head shakes all round.\n\nThe IRS guy picked the picture up. \"Amateur job,\" he muttered. Seeing us all looking at him, he said: \"Poor quality paper, badly printed, amateur job. I'm a pretty good photographer in my own time, got my own dark-room, all the trimmings. Don't look so surprised, I don't spend all my time robbing the poor to give to the rich.\" Maybe the guy had a sense of humour after all.\n\n* * * * *\n\nIt was getting late when I got back to the office to write up my report diary. While I was at it I checked in with my telephone answering service. There were two messages. The first was that Miranda had called, said she had some important information for me, might help me find the subject. She couldn't say more over the phone. That had been about seven hours before. The second message, three hours previously, was from Arty Getz at St Xavier's Hospital. Arty was a brilliant surgeon who'd fixed me up once when I'd stopped a bullet. He'd said I should get to the hospital as soon as I got his message.\n\nI called ahead and Arty met me at the door. \"It's Miranda,\" he said.\n\nI felt a chill. \"What's happened?\"\n\n\"You'd better come and see.\" He took me to a room with a single bed. Miranda was swathed in bandages and hooked up to all manner of equipment. There was a cop sitting in the corner of the room, young Vasari. I nodded to him. \"We've got her sedated and pumped full of painkillers,\" Arty told me, \"She's not going to make it, Sam, it's just a matter of time.\"\n\n\"What happened to her, Arty?\"\n\nArty grimaced. \"Some real sadist. She's got a lot of burns, wired up to some electric device we think. She bit her tongue partly through, probably when it was happening. Something was dripped into one of her eyes, drain cleaner by the looks. And she's been badly beaten, baseball bat possibly. Number of ribs broken, lungs punctured. Then she was just dumped in the street and left. There's not much we can do, Sam, except keep her pain-free until the end.\"\n\n\"Can I stay with her?\"\n\nHe nodded. \"If she does wake up, she's so full of morphine she won't feel anything.\"\n\nMiranda did come half-awake a couple of times. Her speech was thick and hard to understand because of the wound to her tongue. She tried to say she'd been helping me and kept repeating the word 'rend, rend'. The second time she asked me to hold her hand. Although it came out garbled, she managed to say: \"I love you, Sam.\"\n\n\"And I love you, honey.\"\n\nAfter about an hour, she slipped away. I'm not a religious guy but I hoped Miranda had gone on to something better than life had dealt her. And I cried. Goddam it! I cried!\n\nSome of Miranda's clothing---jeans, t-shirt, boots---was lying on a side table and I went to pick it up to check the contents. \"I'm sorry, Mr Malone,\" said young Vasari, \"I've been told nobody's to touch anything until the coroner's been.\"\n\n\"There may be some indication who did this,\" I said, \"It's an off-chance.\"\n\n\"I'm sorry, sir. I have my orders.\" Vasari stood up. \"Well, wadda you know, I gotta go take a leak. Can you make sure nobody touches anything, Mr Malone? Thanks.\" I think Vasari will go far. As soon as the young cop left the room I ran my hands over Miranda's gear. I found one thing in a back pocket of her jeans, a folder photograph. It was the same Veronica Lake picture we'd found in Baaker's strong-box only this one was first-class, an original print. On the reverse was a small business stamp: 'Hendrix Photography' with a downtown address.\n\nBefore leaving the hospital I went to see Arty Getz. \"Let me know when the coroner and cops have finished all their work. I'll cover the funeral.\"\n\nArty nodded, then said: \"Maybe as a doctor I shouldn't suggest this, Sam, but when you find the bastard who did this, kill him.\"\n\n* * * * *\n\nThe next morning I headed for Hendrix Photography. The studio was no longer at the address on the photo but I found it two or three blocks away. I was greeted by a short, chubby guy, balding but with strands of hair cunningly draped over his head. \"Hi, I'm Al Hendrix. What can I do for you? Portrait, family group, passport?\"\n\n\"None of those,\" I told him and showed my PI's license. I laid the photo face down on the counter top. \"This is your work? I'm looking for information on the subject.\"\n\nHe tapped the stamped address. \"Yup, that's ours.\" He turned the photo right side up. \"Oh yeah, Veronica Lake. Almost forgotten these.\"\n\n\"These?\"\n\n\"Yeah, did about a dozen of them. Some magazine wanted to do a spread on film star look-alikes. There was her...\" pointing to Veronica, \"Lana Turner, Rita Hayworth, Betty Grable the like... as I said, about a dozen altogether. Took twenty or so shots of each one, different poses.\"\n\n\"Can you remember this girl's name?\"\n\nHendrix shook his head. \"Never knew them. An editor just wheeled the girls and their outfits in, told me who they were to resemble and let me get on with it. This one was about the best subject. O'course, the quality of the wig helped.\"\n\n\"That's a wig?\"\n\n\"One of the best I've seen.\"\n\n\"This may be important,\" I told him, \"Can you tell me which magazine it was?\"\n\nHe shook his head again. \"Went bust after two issues. Good job I got paid before they went under.\n\n\"Haven't you got any records?\"\n\nIf Hendrix shook his head any harder it would likely come off. \"Sorry. There was a fire in the building, all our paperwork went up in smoke. That's why we moved to this address.\"\n\nLooked like I was getting nowhere fast. \"Thanks, Mr Hendrix, I---\"\n\n\"There was something,\" Hendrix interrupted, pointing to Veronica again, \"She got involved in some damned nasty business. Saw her pictures in the papers at the time, remembered her even without the wig. She tried to saw some guy's pecker off with a butcher knife. You must have seen the news reports, it was about early 1947.\"\n\nIt was my turn to head shake. \"I was still in Japan then, military police. What happened?\"\n\n\"She claimed he tried to rape her. Guy said he didn't touch her, they were having a drink together and she just went crazy, grabbed the knife and went after him. He said she seemed to enjoy it, laughing while she worked.\" More head shaking. \"In the end, her mouthpiece persuaded the jury it was temporary insanity caused by her ordeal. Judge gave her a year in the State Institute for the mentally ill. That's the last I heard of... Suppose she was treated then released.\"\n\n* * * * *\n\nWhen I tried to get information from the State Institute it was refused on the grounds of patient confidentiality. Now if I was to get a warrant... No chance. Not even Judge Francis would issue a warrant to a PI, especially on flimsy hearsay and guesswork.\n\n* * * * *\n\nComing up against a brick wall every which way, I could only try climbing over it. I'd go back to the Bizarre club later, see if any of those youngsters were there and try to get some information out of them.\n\nI was approaching Bizarre when I pulled up short and slipped into a shadowed doorway. There was a guy I recognised waiting outside the entrance. Officer Mason, aka Stan Laurel. He was pacing up and down as if anxious, now and again glancing at his watch. Several minutes of this and a cab pulled up beside him. A woman got out. Giselle. She went up to Mason and they appeared to greet each other.\n\nNow what the hell was Giselle doing here? And how did she know a halfwit like Mason? She could have been on one of her Save-the-Girls missions but I couldn't see Stanley giving a shit about wayward girls.\n\nAfter a moment's conversation, the two went through the weird club's doorway. I gave them several minutes then followed on. Ting-a-Ling was outside of his booth and greeted me. \"Hi, Mr Malone, you must be getting to like this joint,\" he grinned.\n\n\"And how! Man and a woman just came in. You know them?\"\n\n\"The dame who's a real looker? Yeah, she's a regular. Seems to have a taste for young girls, always bringing them in, anyway. Look like barely legals.\" Ting-a-Ling shrugged as if to say 'It takes all types'. \"The guy I don't know, never seen him before. She vouched for him. You tailing them, Mr Malone?\"\n\n\"Could be---they might lead me to something. I'll go on down, Ting-a-Ling.\"\n\nWhen I got to the foot of the stairs, it was a relief to see that my crucified friend and his stunning playmate weren't there. Small mercies. I inched my way past the exotic crowd until I spotted my quarry in that back room. Giselle and Stanley were sitting at a small table by themselves, no younger women this time. I stood well back, fairly sure I'd not be seen.\n\nGiselle turned her head to glance around the room. As she did so, a lock of her auburn hair flopped loose and covered one eye. Not blond but it might as well have been. Just like Veronica Lake...\n\nPeek-a-boo! Veronica Lake. Pieces started to fall into place, pieces I didn't like the thought of, pieces I didn't want to believe. I suddenly felt a bit sick.\n\nAs I watched they got up from their table and went out through an adjacent fire-exit, slamming the fire-door behind them before I managed to push my way through the mob. I tried the door but it was firmly fastened---the lock must have caught when they slammed it behind them and no amount of shaking and pushing did any good.\n\n\"Hey, what are you doing, buddy?\" It was one of the 'stewards', the kind who looked as if he bench-pressed four-hundred pound barbells one-handed while scratching his nuts with the other. I could have lectured him on the city ordinance that fire-doors should remain unlocked. That would have wasted time. Anyway, at times like this, who cared about city ordinances? Instead, I appealed to the brotherhood-of-put-upon-men.\n\n\"Just seen my wife go through here with some guy!\" I shouted to be heard above the noise, \"I want to catch the bitch putting out, maybe cut her alimony!\"\n\nHe nodded in sympathy and pulled a key to unlock the door. \"Go get her, pal! Summa the bitches get away with too much!\" This sounded like the plaintive cry of an alimony-paying ex-. I thanked him and rushed into the street.\n\nI ran up a ramp to sidewalk level and looked one way and another. Giselle had disappeared but I could see Stanley walking down the street a few hundred yards distant . I hoped he hadn't got a car because mine was still in the repair shop. He kept on walking so I'd be okay. Some parts of the city walking is easier at night. With cars lining up both sides of streets you can spend more time looking for a parking spot than the round trip takes.",
        "I kept well back so I wouldn't be spotted. Even then, a good cop might have instinctively felt he was being tailed. They call it 'copper's nose'. Stanley was not a good cop. The only 'copper's nose' he had was the one he poked up the desk sergeant's ass when he wanted an easy assignment. When he turned into a side street, I simply waited in the shadows for him to come out. I knew these streets well and he had turned into a dead end. What was down there?\n\nI didn't need to wait long. Stanley came out and sauntered on. I let him get ahead before following. When I came level with the dead-end I saw that lights were blazing in a building there. There shouldn't have been any lights. The place was an old bank that had been closed down during the war. There was another, more modern, branch maybe a mile or so away so this one had been left empty and unused.\n\nI decided to have a look-see. I could always pick up on Stanley another time or maybe get Lyle and Internal Affairs to check him out. The guy was dirty, of that I was sure.\n\nThe main door of the deserted building was closed but gave easily when I tried the handle. I loosened my .45 and peered in cautiously. I couldn't see anything. To the left was a long counter with four or five tellers' cages. Behind them a number of small rooms which had served as interview rooms for customers with private business. Beyond, another door marked MANAGER in faded lettering. Down the centre of the floor was another long counter for the use of clients wishing to complete assorted papers and forms of the annoying bureaucratic variety. At the far end long, moth-eaten drapes covered something while scattered about the floor were disused items of furniture, metal chairs, that kind of thing, all covered in dust and cobwebs.\n\nI waited a few minutes but nothing stirred, I couldn't see or hear anyone and the place appeared deserted. I wondered what Stanley had found interesting in here. Maybe it was a dropping off point for something. A small moaning noise caught my ear, only momentary. I was sure my ears weren't deceiving me. There it was again, low, almost inaudible. It seemed to come from behind those drapes.\n\nI put a hand on my pistol but didn't draw it yet, stepped down to the room's far end.\n\nAs I reached the spot I could see dust on the floor had been disturbed, churned up by a number of feet moving round. I pulled the drapes aside and blinked at what I saw. There was a floor-to-ceiling barred gate, thick iron bars like those in a jail. The room beyond was likely the abandoned bank's former strong-room or vault. The gate was secured by a hefty padlock, the kind a zoo would fit on the tiger-cage.\n\nBut it wasn't that made me blink. The floor was covered with a number of filthy mattresses on which a dozen or so girls were lying. Someone had flung some equally filthy blankets over them. They looked like a mixed bunch: there were several Caucasians, a black girl, one who appeared Chinese, a few Hispanics. From what I could tell, they were all young and all beautiful whatever their race. I thought I recognised one of the Caucasians and tugged at the lock. It would take more than that to open it.\n\nNone of the girls stirred and it looked like they were all heavily sedated. I guessed they'd stay that way until the unknown drug wore off. One of them must have moaned in her narcotic-induced sleep.\n\nNext thing, I thought I heard soft running steps behind me. I started to turn, reaching for my Colt but I wasn't quite fast enough. However, because I'd turned aside the descending sap or whatever just caught me a glancing blow rather than the full-blooded one it was meant to. My hat with its lining of thin chain-mail protected me to an extent as well. The blow didn't knock me out, only made me groggy for a moment or two. They were long enough moments for a couple of guys to dump me in one of the old metal office chairs and fasten my hands to it with cuffs. I clutched at the chair's metal frame and shook it but no dice, it wouldn't give. One of my attackers reached under my jacket to snag my pistol.\n\nShaking my head, I looked up. In front of me was the Weasel tapping a rubber blackjack in the palm of one hand. He must have been lurking in one of those privacy alcoves or crouched down behind a teller's cage. Jesus, I really was getting old. I glanced at Weasel's feet. He was wearing rubber-soled sneakers which explained how he'd managed to get to me so fast. I think he gave me a nasty little grin but all the bandages on his face made it hard to be sure.\n\n\"Awake, huh shamus?\" Pure Jimmy Cagney. With a bit of practise he could work his way up the ladder. Bogie next, then maybe Edward G. \"Guess you must have a skull made of rocks.\" He lifted the sap to give me another one but a voice rapped, \"No!\"\n\nI knew that voice. Howard. Mr Polite himself. Mr War Hero. Well, well.\n\n\"But Howard---\" squeaked the Weasel.\n\n\"Don't 'But Howard---' me, you little rat. I told you not to hit him hard, just a gentle tap to make him easy to handle, so what do you do? You try to bust his skull! You've got to learn to do as you're told else that nose will never get fixed. Now, stand by the cage and keep your hands to yourself unless I tell you otherwise.\"\n\nAnother actor entered stage left. Or should I say actress. Giselle smiled at me. She didn't look so sweet and innocent any more. There was something deep in those purple eyes that suggested a seriously disturbed person. I remembered what the photographer had said about his model spending time in the State funny farm. \"Hi, Sammy,\" she cooed, \"I'd kind of hoped to have you around a bit longer but sorry, not to be.\"\n\nShe bent to kiss me and I turned my head away. \"Aw, doesn't want loving any more?\" she mocked. Taking my face between her hands she licked all round my mouth with that lively little tongue and nipped my lower lip with sharp teeth. I didn't respond so tiring of the game she went over to the vault. \"Like our little birdies, Sammy? They won't be here much longer---some lucky mid-east potentates will be sheathing their dicks in them. They pay a premium for genuine virgins over there and these are all certified. Then when they've finished the little birdies will go into a high-class brothel for princes, foreign diplomats and businessmen.\" Giselle sighed. \"Pity, really. If it wasn't for the money I'd like to keep one or two for fun. A lot of fun.\" She giggled, an insane and chilling noise. As she turned to look at me over her shoulder and gloat, a thick lock of hair fell across her left eye. There was no doubt now, Veronica Lake's double it was.\n\nI recalled something Miranda had said when I visited the college: \"Miss Campion. She's the personnel administrator here and she's been a good friend to me.\"\n\n\"I'd hoped maybe I was wrong,\" I said, \"but it was you, wasn't it? Did that to Miranda? I thought she was saying 'rend' but she was trying to say 'friend'. You're the 'friend' she was trying to tell me about. And I guess you guided me towards that Easy-Go dive and tipped your boss off so that The Ogre could mangle me. That's why you looked so shocked when you saw me in the Bizarre. It wasn't surprise, it was shock---you thought I'd be in some gutter, beaten to a pulp. And you didn't want me to talk to those three girls because you weren't trying to guide them like you said but pull them into your nasty little net. I suppose you arranged for that near motor accident outside your apartment block.\"\n\n\"Ooh, Sammy really is a detective, got all the answers.\" Another giggle. \"Instead you mangled poor Ogre. I'd like to have seen that. Been even funnier if you had shot him in the dick. I heard he'll be in hospital for a few weeks. As for the girl, I had fun with that one---pity, I couldn't spare too much time on her, had to make it quick. It was her own damn fool fault, anyway. If she hadn't shot her mouth off about helping you she might still be okay.\"\n\nMore steps, heavier and louder this time. \"Malone, huh?\" I knew that voice, too, Albie Gleeson. \"Don't know how he found us but it doesn't matter much now. Guess this is where his career comes to an end. He's a dead man. Can't wait to read The Bugle's obit.\" I'd only heard one set of steps so he couldn't have replaced The Ogre yet. Maybe Howard was filling that role although I couldn't see him breaking people in two just for fun. I thought Gleeson would gloat but no, just sounded matter-of-fact, business-like. He added: \"What about that skinny cop?\"\n\n\"Paid off,\" Giselle said.\n\n\"Okay,\" Gleeson continued, \"But he might need an accident later like Baaker---I don't trust him.\"\n\n\"Can I do that, Albie?\" Giselle asked eagerly, then laughing, \"It was great doing that Baaker guy. Driving over that fat gut of his was like a roller-coaster ride.\" Yeah, looked like the lovely Giselle was a real sicko.\n\n\"Sure,\" said Gleeson, \"Only wait for me to give the word, okay? Anyhow, there's been a change of plan---going to be a slight delay, maybe twenty-four, thirty-six hours tops. Bronsteen's Middle East contact has to go to some important last minute oil company meeting. It'll mean keeping our girls here under for a while longer before we can ship them out. Giselle, you give them all some more sleepy juice, just enough to keep them quiet.\"\n\nBronsteen! He'd said 'Bronsteen's contact'. It had to be the Bronsteen. Couldn't be too many Bronsteens in the city with connections to wealthy Middle Eastern types. Life had just given me a tailor-made chance to get Bronsteen---at the same time, life giveth and life taketh away. Why the hell did life let me be chained down like this with a negative future looking me in the eye?\n\n\"What do you want me to do with Malone, Mr Gleeson?\" Christ! Isn't Howard ever impolite?\n\n\"Just waste him, right now. We'll decide what to do with the body later.\" Gleeson snorted. \"Shoot him with his own gun, blow a hole in his guts.\"\n\n\"I've got a better idea,\" said Howard, \"Do it your way and the cops might come sniffing round. It's well known you want Malone out of your hair, that'd make you a suspect. Could call a halt to your business for a while. And a .45 can make a mess. Ever seen one of these?\"\n\n\"Jesus Christ!\" cried Gleeson, \"What the hell's that? A bb-gun? You think you're gonna kill him with a goddam bb-gun?\"\n\n\"This isn't a toy. Lilliput, German pistol, small calibre, .25,\" said Howard, \"I've doctored the ammo so it's like dum-dums. And rubbed it in garlic like the Mafia do. Put one in the back of his head, the slug will expand and mash his brains. Small entry wound, no exit wound. Almost no blood. It's a Mob favourite for quick executions. We dump him at his office. The cops will find him and figure it's Mob work. Hell, he's made a stack of enemies in the city, why not include the Italians? The cops'll try to fathom it but it could have been a hit-man from any of the Families, even an out-of-town gunny. Cops don't like wasting too much time on Mafia killings so they won't keep at it for long.\"\n\n\"Now that's what I call good thinking, shows intelligence,\" said Gleeson, \"Could do with more guys like you on my team.\" Yeah, he said 'team' like he was an enthusiastic football manager. \"Okay, do it.\"\n\nThey say you don't hear the shot that kills you. I heard the shot all right, the low crack of a small calibre firearm. I didn't know what the hell was going on behind my back but there was a sudden look of panic on what I could see of the Weasel's face. He started to run. My hands may have been cuffed but my legs were free. I stuck out a foot and the pint-sized bastard took a dive, ass over tip. His sap went flying and his nose must have had a death wish this week for he landed right on it. As always, he squealed like a Bizarre patron enjoying the services of an overweight lady with a riding-crop.\n\nWeasel scrabbled to get to his feet until a rapped command from Howard ordered him to stay down. He stayed down.\n\nGiselle must have made some kind of move because Howard shouted at her too. \"You're not going anywhere either! Sit down there! By the cage. Neither of you move.\" Giselle gave one of those crazy giggles but did as she was told.\n\nI felt Howard fiddling with the cuffs and they fell away. \"Sorry about all that, Sam. We weren't expecting you to turn up and I had to improvise, make it look good, put him off his guard.\" He gestured to the floor behind him. Albie Gleeson lay on his back. You might have thought him sleeping save for the tiny hole in his forehead. There was only a slight trickle of blood. \"Good shooting,\" I acknowledged.\n\n\"City's a bit cleaner now, anyway,\" Howard said, \"Sooner than we'd planned but necessary. Hoped to get a line on all his contacts---they'll likely disappear now.\"\n\nHoward handed me my Colt and I indicated the cage. \"Did you know about this?\"\n\n\"We suspected---confirmed earlier this evening,\" he said, shaking his head.\n\n\"Then how come you're working for Gleeson?\"\n\n\"Mulrooney's idea for getting the inside on Gleeson,\" Howard told me, \"He'd heard a rumour there was something really nasty going down involving young girls, wanted to know what so he could try and stop it. Quite a moral man in his own funny way is Mulrooney. Few weeks back he got me to put it about that I wanted to move. Nothing explicit, just little moans and grumbles here and there. Said he had deep pockets and short arms, wasn't paying me enough. I had a reputation for using my head. Maybe five, six days ago Gleeson decided I could be useful. Just like that. He wasn't very bright, didn't even investigate me.\" He produced a thick envelope from an inside pocket. It was sealed down but felt as if there was plenty of money inside. \"Signing on bonus.\"\n\nHoward pointed to the prone Weasel. \"That little asshole wanted in. I couldn't trust him to keep his mouth shut so I sold him to Gleeson as an expert with locks. He's the one who got us into this place several nights back. Good job the power was still connected.\" He held up the envelope. \"Arnold got one too, although not so thick. A bonus for unlocking the main door here.\"\n\nMoving so as to shield my front from the two on the floor, I whispered: \"Can I borrow that pop-gun of yours?\"\n\nHoward looked at me for a few seconds, decided he could trust me, and handed me the Lilliput. It wasn't much bigger than the palm of my hand.\" I slipped it into a side pocket and went to stand over Giselle. \"You can get up and walk out of here.\"\n\nHer eyes opened in astonishment. Howard looked baffled too but said nothing. \"You're letting me go, Sammy?\" said Giselle.\n\n\"Yeah, call it for old times' sake.\"\n\nShe rose slowly and put a hand out to touch my cheek. I batted the hand away, saying: \"Don't push your luck. Just walk.\"\n\n\"Shame, Sammy,\" she said, \"We could have had fun together.\"\n\n\"Not your kind of fun,\" I told her, \"Now beat it before I regret being generous.\"\n\nGiselle shrugged and turned to walk towards the door. She wouldn't have heard the shot that killed her. One small calibre slug, back of the head, Mob style.\n\nThe Weasel whimpered again, I suppose thinking he was about to meet his maker (or, more likely, his maker's chief business rival). About time he realised he'd never make a gangster, not in a hundred years. Howard said nothing but looked at the late Giselle and raised an eyebrow.\n\n\"More merciful than she deserved,\" I said. I put the Lilliput in my raincoat pocket. \"You didn't see what she did to that poor kid Miranda. As nasty as anything I've seen. Must have been others over the years---you don't get that skilled the first time.\"\n\n\"So what do we do now? Any ideas?\"\n\n\"Some,\" I said, \"You and Mulrooney will just have to trust me. You likely to have left any prints around?\" Howard held up his hands. He was wearing thin leather gloves. \"What about him?\" I asked, pointing at Weasel.\n\n\"Doesn't matter much if he has---never had his prints taken. He hasn't been in the military and he's never been arrested.\"\n\n\"First, we get that cage open.\" I pointed to one of the comatose girls, the one with a beauty spot. \"Look familiar?\"\n\n\"Kathleen Hennessy.\"\n\n\"Right, we keep her out of this. We'll take her to Mulrooney. I'm sure he's got a doctor or two in his pocket who'll treat her and keep their lips zipped. Got a key?\" Howard shook his head so I went to where Arnold was lying still like a good little Weasel and prodded him in the ribs with the toe of my shoe. \"You wanna keep breathing, punk?\"\n\nThe Weasel grunted assent. I lifted him up bodily, slamming him against the wall. A stream of fresh blood was flowing from his much-maltreated nose. \"Okay, behave, do what I say, and you might make it out of here,\" I told him, \"You're supposed to be a good locksmith, so get that lock opened.\"\n\nArnold took a small leather case from an inside pocket, produced two or three thin tools and had the lock opened in what seemed like seconds. \"So you do have some use,\" I said, \"Stand there and don't move. I'm not finished with you yet.\"\n\nWe carried Kathleen out of the cage and then I told Weasel, \"Right, now lock the cage again.\"\n\n\"What about the other girls?\" Howard complained.\n\n\"We let the cops get them out.\"\n\n\"You're calling in the cops? What the hell---\"\n\n\"Howard,\" I said patiently, \"I told you to trust me. You were a good soldier, you know the value of advance strategy.\" I turned to the Weasel and held out my hand for his signing-on envelope. \"Give!\" There was probably a couple of grand inside, more than I'd have thought he was worth. I handed it back intact.\n\n\"Arnold, I'm going to give you some good advice and I suggest you listen hard. Stop playing Jimmy Cagney because you're not cut out for a mobster's life. There's a lot of people out there who are not as nice as me or Howard or Mulrooney. I'm talking the kind of people who'd hang you up by the ankles and tickle you to death slowly with a blow-torch because they'd think it funnier than The Jack Benny Programme, or stick an ice-pick up your pecker while they give you a manicure with bolt-cutters, or drop you in the harbour in cement overshoes and no breathing apparatus. I don't think you'll like that. I suggest you take that money and get on a long-distance train, maybe to the coast or somewhere. Know any place?\"\n\n\"Got an old uncle in Arizona,\" he mumbled.\n\n\"Then go there, forget being a big-time hood and set up as a locksmith--that's all you're good for. Now get the hell out of here before I kick your ass so hard your eyes'll bulge!\"\n\nCarefully skirting the late Giselle, he got the hell out. My next action had Howard shaking his head. I picked up the chair I'd been cuffed to and swung it at the padlock several times before throwing it aside. \"If I didn't know better, Sam, I'd think you'd gone nuts.\"\n\n\"I've got my reasons,\" I told him, \"May need to explain my prints. Wiping them would look suspicious. How often do I have to say 'Trust me'?\"\n\nMinutes later Howard brought his jalopy round and we made the girl as comfortable as possible in the back. I didn't need to tell Howard to drive carefully so as not to attract the attention of a patrol car. I reckon I'd have had to drum it into the Weasel with a club, one with a nail in the end. \"You especially fond of this pop-gun?\" I asked, showing him the Lilliput. He shrugged. \"Right, then we field-strip it and throw the separate bits in different parts of the river. And find a pay-phone to call Mulrooney. Tell him to be at the office when we get there.\" Howard didn't argue with me giving the orders. Military discipline, I guess.\n\n\"One thing,\" I said when we were on our way, \"Would you have gone over to Gleeson and killed me?\"\n\nWe were passing several street-lights at the time and I think I saw him half-smile. \"Maybe I was tempted to join him for a while but not when I saw what his main business was. As for you...\" again that half-smile, \"...No. You don't know this, Sam, but I owe you big time. My whole family does. That girl you saved from rape, she's my niece, my sister's daughter.\"",
        "\"So, from a decent family saving your presence. Then what the hell was she doing in that area?\"\n\n\"You know what some kids are like. Tell them not to do something so they go straight out and do it, not stopping to think you might have had a damned good reason. Cindy always was a bit wild. Together with her folks, I told her all the areas in the city to steer clear of. Then one of her classmates told her that was a fun area to visit, don't mind what the old folks at home say, they know jack-shit. So of course... Well, she's learned her lesson the hard way.\"\n\n\"If it's any consolation to her, those punks should pull twenty-five to life.\"\n\n\"You know, Sam, somehow I don't think they'll even make it through a full twelve months, if that.\" Yeah, Howard was right. He and Mulrooney would have friends in the pen, the kind of friends who could turn a shaving-brush into a weapon of mass destruction.\n\nMulrooney was waiting for us. We carefully laid Katherine on his office couch and he said he'd call a tame medic and nurse to help her before getting her home. Howard explained briefly what had happened and handed his sealed envelope to Mulrooney.\n\n\"What's this?\"\n\n\"Bribe money from Gleeson to work for him.\"\n\nMulrooney ripped the envelope open and a lot of used notes fell out, mostly portraits of good old Ben Franklin, maybe about five grand's worth. He pushed the money towards Howard. \"Guess you've earned this.\"\n\nHoward shook his head. \"No thanks, boss. That money's tainted now I know how he made it.\"\n\nMulrooney shrugged and turned to me, offering the bundle of notes. Sure, I was tempted but I couldn't let a West Pointer outdo me in chivalry. I went along with Howard. \"It's dirty. I'll be happy with my standard fee and expenses. Of course, if Hennessy wants to give me a generous bonus on top in clean money, I won't be so churlish as to refuse.\"\n\n\"Send me your account and I'll see there's a good bonus, Sam.\" Mulrooney sniffed and prodded the pile of notes. \"Guess I could keep this but you two would put me to shame. What say I give it anonymously to the children's hospital?\" Howard had pinned it---his boss was kind of moral in a funny sort of way. It was a unanimous decision.\n\n\"Now, Sam,\" he went on, \"What's this about calling the cops?\"\n\nI explained what I had in mind and when I finished both men nodded in agreement. \"Yeah, put like that it sounds good. Leave it with you, Sam. By the way...\" nodding in Howard's direction \"...we've got Abbot here, where the hell's Costello? Getting his goddam nose fixed again?\"\n\n\"Arnold's probably leaving town, boss,\" Howard said, \"On medical advice for the good of his health.\"\n\nMulrooney bared tobacco-stained teeth in a cynical grin. \"Wouldn't have figured you two having been to medical school. Good thing, I suppose. The little asshole was fucking useless. Sooner or later we'd have been digging him out of a dumpster---or putting him in one.\"\n\nI left them to it and hailed a cab to make my way back to the derelict bank. The rain had started, getting damned near biblical proportions. I had the cabbie drop me several streets away, making the rest on foot and getting pretty damp while at it. Still, that would back my story up. I looked around and found a pay phone not too far from the bank to put in a call to Lyle in Homicide. It would have looked very suspicious if there hadn't been a handy phone nearby. Neglecting the minor points has sent many a dumb fuck to Old Sparky.\n\nYou know, it can be the little things in life that make you laugh. There's a writer guy called Chandler in California has just published a book and it's got a line something like 'Down these mean streets a man must go who is not himself mean'. All I can say between laughs is 'Bullshit!' I spend a lot of time going down mean streets and I can be one mean sonofabitch myself. Have to be else I'd have been dead a long time back...\n\n* * * * *\n\n...and that's how come Lyle Garrett and I were standing in a downpour watching some little old lady with a lethal umbrella chasing a busybody down the road.\n\nLyle's hands were buried in his coat-pockets so he pointed with his chin towards the two who were disappearing round a corner. \"There's got to be a moral there,\" he mused.\n\n\"Yeah,\" I said, \"It's don't fuck with little old ladies carrying umbrellas.\"\n\nLyle nodded then said, \"Well Sam, guess you didn't call me out this time of night in the rain to get some fresh air and enjoy the local cabaret so what have you got for me...?\"\n\n\"This way...\" I led Lyle to the old building.\n\n\"Hey, this used to be the old Trust &amp; Gain Deposit Bank,\" said Lyle, \"What's in here?\"\n\nI pulled the mini flashlight I always carry from my coat pocket and used it to find the master light-switch. All the fluorescent ceiling lights flickered then came on at once, dazzling after the darkness outside.\n\n\"Jesus!\" hissed Lyle. He strolled over to look at the first corpse, little pools of rain dripping from his coast and forming around his feet. \"Well, bless me! Couldn't happen to a nicer guy. You know him, Sam?\"\n\nI joined him. \"Yeah, it's that scumbag Albie Gleeson. Self-styled master criminal.\"\n\n\"Something's wrong here, something missing,\" Lyle said, looking round, \"I know... Where's The Ogre?\"\n\n\"Heard he had a nasty accident. Won't be around much for a while.\"\n\n\"Good,\" Lyle nodded approval, \"Did you waste Gleeson, Sam?\"\n\n\"Lyle, you know I carry a .45. Does that look like a .45 hole? If I'd done it there'd be blood and brains everywhere.\"\n\n\"Sorry, Sam, I had to ask.\" Lyle wandered over to Giselle's prone body. \"You know this one?\"\n\nWas that a trick question? Come on Lyle, I thought, I'm too old a hand for that kind of trap. \"I might if I could see her face,\" I said. Lyle bent and gently turned the dead woman's head so her full face was on show \"Yeah, now I do. Her name's Giselle Campion. I met her at the Community College when I was checking something for a client---she's an administrator, or was. Don't know what she'd be doing in this set-up. There's more, Lyle, over here.\" I took him to the cage and pulled down the ragged drapes.\n\n\"Holy shit! Are they alive or dead?\" He shook his head briefly. \"I think I can see a couple breathing. Must all be drugged up to the eyeballs. How'd you find this, Sam?\"\n\n\"I was tailing a guy hoping he might lead me to a missing person.\" Well, that part was close enough to the truth. \"Private client wants to serve divorce papers,\" I added to avoid any awkward questions. \"I kept well back because in this rain the street was almost empty and I didn't want to be spotted. Lost him somewhere around here. Whoever was in this place last left the lights on so I got nosy and took a look. Found this lot. Then I looked for the master-switch, turned the lights off and called you.\"\n\n\"And what do you make of it?\"\n\nI flipped a hand towards the cage. \"Looks like a sex-slave racket. Gleeson and the woman both have small calibre wounds to the head. Maybe a Mob hit, I suppose, though I can't think why they left those girls here. Gleeson was known for poking his nose into the wrong places, trying to muscle in on other people's business. Wonder no-one's wasted him before. I can't guess why the woman is here unless she pulled in college kids for whoever's running this racket. Better get some ambulances along for these girls. I tried that padlock, it's solid. You'll need special equipment or a lock expert to get it open.\"\n\n\"Sticking his nose into a Mob racket? Could be,\" Lyle agreed, \"That's one hell of a gamble, though. I don't suppose we'll find your prints anywhere in here, Sam?\" He may be my friend but he's also all cop.\n\n\"You'll find them everywhere,\" I told him, \"On the light switch. I handled the padlock trying to open it.\" I pointed to the abandoned metal office chair. \"I used that to bash the padlock---didn't work. I shouldn't rely too much on prints, Lyle. Remember, before it closed this was a public business. There must be hundreds of thousands of random prints all over.\"\n\nLyle sighed glumly. \"You're right, Sam. Will you stay on guard while I call this in? There a pay phone round here?\" Another trick or trap?\n\n\"Next street corner,\" I said, \"Something else before you go. My snitch said that maybe Baaker was working for Gleeson. Could be others in the precinct. If you dig deep enough you might turn up more than worms.\"\n\nWhile Lyle was away, I had a think. I couldn't report the Bronsteen connection to the local cops. A call from his oak-panelled office to the Mayor's pine-panelled office to the Chief of Police's plain old plaster-walled office to a precinct commander and any investigation would be killed stone dead before it started. Instead I'd tip off the Feds. The state line ran through several of the city's outer suburbs so if any of those kidnapped girls came even an inch from another state, taking them across a state line for immoral purposes would make a good holding charge for Bronsteen while the Feds dug deeper.\n\nWhen Lyle returned he said, \"There's a couple of my teams on the way with the meat-wagon and several ambulances. ME's coming too. I've called the local Feebie SAC too. This is obviously abduction so it's a Federal offence. You want to skip, Sam? I can call it in as an anonymous tip-off.\"\n\nI shook my head. \"Better not. If they did find my prints here it'd look suspicious if I left.\"\n\nLyle nodded so we lit cigarettes and smoked quietly while waiting for the various crews.\n\n* * * * *\n\nI was very happy with the check I'd had from Thomas Hennessy. Thanks to Mulrooney, the recommended bonus was very generous. Furthermore, when Hennessy was told that Miranda had been murdered while helping to find his daughter, he said that he would pay for her funeral and a head-stone.\n\nI was sitting in my office, feet on the desk, smoking a thoughtful cigarette and sipping a thoughtful Scotch (it was 11:05 in the a.m.), feeling both sad and guilty for Miranda but pleased that Thomas Hennessy was showing his gratitude in a practical way. In addition I was having an unprofessional feeling of smug satisfaction for other reasons.\n\nRound about now a combined team of FBI and IRS agents would be descending on Bronsteen's office and home with Federal search warrants. The fancy mouthpiece he kept on retainer would soon have to start earning his excessive stipend. At the same time, and following an anonymous tip-off, IA would be bringing in Laurel and Hardy for questioning (I don't know if Hardy was involved but if not, the shaking up would do him good---might even persuade him to look for different work).\n\nThere was an extra little thing to look forward to. I could hardly wait to see The Bugle's front page the next day. It was too much to hope they'd roast their owner but I could dream.\n\nSo there I was when Cara returned from vacation. She glared at the Scotch but said nothing. Instead she slipped my hat off and hung it up. Knew it, had to happen sometime. At least she gave me a kiss on the forehead.\n\n\"What sort of week have you had, Sam?\" she asked.\n\nI didn't see any point to spoiling her post-vacation mood immediately. I could bring her up to speed later in the day. So, what sort of week had I had? \"Quiet,\" I said, \"yeah, quiet. You know how it goes. Mostly just another day in the office...\"\n\nThe End"
    ],
    "authorname": "Maonaigh",
    "tags": [
        "hammered story event",
        "mobsters",
        "crooked cops",
        "enforcers",
        "abductions",
        "sex slavery",
        "tough private eye",
        "mean streets",
        "sleazy clubs",
        "hammered mickey spillane"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/just-another-day-21"
}