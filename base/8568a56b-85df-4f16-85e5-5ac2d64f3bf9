{
    "title": "Return of The Slender Man Ch. 02",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nSpecial note: There are *NO* sex acts involving anyone under 18 years old in this story, nor in any of my stories.\n\nThe Slender Man was <s>created</s> discovered by Victor Surge Knudsen.\n\nPart 9 - Urgency\n\n\"Oh nooooooo...\" Cindy whispered as she fell back into her chair. Cindy had formed a bond with young Susie, going back to the night at First Baptist Church when Mrs. Veasley had died and Raymond Westboro had blown up the building, then helping Susie through the ordeal of testifying against Sharples about the death of Susie's cousin Scrawny Haskins.\n\n\"Sit this one out.\" I said, seeing that Cindy was rocked by the news. \"I'll handle it.\" I turned and went to Teresa's office and told her. As she called to get a team to the school, I went down to MCD and told Joanne, and gave her instructions to get to the School.\n\n* * * * * * * * * * * * * * *\n\nCindy was talking with Susie's shocked, distraught parents in the gym when Joanne Warner returned from the school at 1:30pm., Friday April 20th. \n\n\"We found this on the chalkboard in Susie's classroom.\" said Joanne. It was a drawing in black crayon. On the left side was a cedar tree, in the middle was a drawing of Slender Man, and on the right, spelled vertically, was the word 'FOLLOWS'. A small '7' was on the upper right-hand corner of the page.\n\n\"That's it.\" I said. \"We have eight pages. Let us pray that it is the last one. Put it on the whiteboards. And make sure the pages are in number order.\"\n\n\"They are, sir.\" said Joanne. \"The top row is 1-4, and the four underneath are 5-8.\"\n\n\"Good.\" I said, looking at a full set of eight pages now. What is your motive, you son of a bitch? I thought to myself. What are you after?\n\nNo answer came to me.\n\n* * * * * * * * * * * * * * *\n\n\"Any ideas at all?\" asked Chief Moynahan.\n\nIt was 2:00pm, and we were in the Chief's Conference Room, the Chief, myself, Captain Croyle and Captain Ross. Also in the room were FBI Special Agent in Charge Jack Muscone and Special Agent in Charge Clark Webster, who was in charge of the FBI's Missing Persons team in the City.\n\n\"No sir.\" I said. \"The only connecting link that I see is that we've met most of these kids before through TCPD activities. Rachel Fourier and Alton Taylor were two of the three kids I rescued at Ward Harvester when it blew up... the first time. Marie Pressman was the child that we believe Sharples kidnapped so that he could rescue her and look like a hero. I remember my wife interviewing her after she was found.\"\n\nI continued: \"Susie Haskins was in First Baptist Church the night Westboro trapped everyone in there. She also testified against Sharples, and was helped by Captain Ross in all that.\" Cindy bowed her head at my words. \n\nI went on: \"Zack Ridley was involved in the Tylenol Bottle case earlier this week. That leaves Bettie Paige and Tommy Tomlin. Bettie is Public Health Officer Beth Paige's daughter, and I've met her on some occasions. Tommy Tomlin... he's the only one we Police have absolutely no connection with, at least that I know of.\"\n\n\"The Data people are looking into the Tomlins, to see if there's another connection we just haven't found yet.\" said Cindy.\n\n\"Well, if you ask me,\" said Jack Muscone, \"The Slender Man wants your attention, Don.\"\n\n\"And he definitely has it now.\" I replied. \"I just wish he'd let us know what he wants, besides my attention.\"\n\n\"What about this 'Slender Man' motif?\" asked Chief Moynahan. \"I wouldn't be believing any of this, except that too many of you have seeeeen this basturrrrd.\"\n\n\"I'm not prone to believing supernatural things, sir.\" said Teresa. \"But this doesn't seem like a motif. This guy is acting like the Internet legend in every way... appearing and disappearing, whisking away children in seemingly impossible ways...\"\n\n\"Well, Captain,\" said the Chief, \"I've seen many crimes, but none truly committed by ghosts. We're dealing with a man here, a sick, demented man who is kidnapping children. I need not say we need to find this guy and stop him cold.\"\n\n\"I'm more worried about the children, sir.\" I said. \"It's getting to be nearly a full day for Alton Taylor. These kids will need water, and ultimately food.\"\n\n\"If they're still alive.\" Teresa said.\n\n\"Don't say that!\" Cindy said sharply. \"They're alive!\" Teresa peered at Cindy, but said nothing more.\n\n\"We'll act on the premise that they are alive, until we find otherwise for sure.\" said Jack Muscone reassuringly. \"So, no calls for ransom?\"\n\n\"No, not yet.\" I said. \"Nothing but those damned eight pages of drawings. Not even a note saying 'Gimme twenty dollars.'.\"\n\n\"In case you guys don't know,\" spoke up Teresa, seeing the looks on everyone's faces, \"one version of the Slender Man video game played the song 'Gimme Twenty Dollars' instead of spooky sounds when Slender Man was following the game player around in the woods.\" Everyone nodded, now understanding my very poor joke.\n\n\"This guy has to want something.\" said Clark Webster. \"If not money, what?\"\n\n\"He wants Commander Troy.\" said Teresa. \"I'm not kidding about this. The Internet legend is that he pursues someone relentlessly until he captures or kills them. He's been appearing around the Iron Crowbar for some time now.\"\n\n\"Captnnnn Croyle...\" said Chief Moynahan, shaking his head. \"I am really less interested in the Slender Man Fan Club in England and their Internet drivel than I am in this very real perp kidnapping very real children...\"\n\n\"She does have a point, Chief.\" I said. \"Though maybe not for the reasons of Internet legend and Creepypasta. Jack just said it, too. I think it's a very valid hypothesis that this guy wants me, or something to do with me... but what that is, I have no idea.\"\n\nJust then, the Duty Desk Sergeant knocked on the door. \"Sorry to interrupt, everyone,\" he said, \"but there's a Dr. Mickelson from the University in the lobby who wants to talk to Commander Troy. He says it's urgent, and about the Slender Man cases.\"\n\nPart 10 - Sigma Radiation\n\n\"Are you really going to let this guy do this?\" asked Chief Moynahan to me.\n\n\"Yes sir.\" I said. \"Crazy as it sounds, sir, he might can help us.\"\n\n\"If it were anyone but you,\" said the Chief, \"I'd never go for this. But you have that crow-bar, and I don't want to be your practice fodder for the Boxing Matches.\"\n\n\"Molly always said you were a brilliant policeman, sir.\" I replied. Moynahan chuckled as he shook his head.\n\nDr. Mickelson was the Biology Professor we had come to know in the 'Point Hollow' case. He had come and asked permission to check all the items we'd recovered for 'sigma radiation' as he called it. It was supposedly an energy signature left by the Slender Man, the Rake, and other Creepypasta bad guys. Nearest I could tell, it was an energy level close to brain waves.\n\nHe had a device that looked like a Geiger counter. He asked everyone except me to leave the MCD room to reduce the energy signatures in the room. Cindy stayed at the door, anyway, as Dr. Mickelson waved the instrument in front of the eight pages.\n\n\"I'm getting faint readings.\" said Dr. Mickelson. \"But the signature is there. Especially on this last one.\" He was referring to the eighth page, the one found with the disc golf discs. And that reminded me...\n\n\"Why don't we go check the disc golf discs in my office.\" I said. Dr. Mickelson followed me to my office. As I put on latex gloves and got the bag out of the safe, Dr. Mickelson did what everyone else does that comes into my office for the first time: he looked around in seeming awe and wonder.\n\nI took the bag of discs and placed it on my desk. Cindy was watching from just outside the doorway, and I was standing back from the desk, near the safe.\n\n\"There's a lot of background radiation in this office.\" said Dr. Mickelson. \"A lot of energy. This must be where you do all your thinking. Have you ever felt anything strange about this room?\"\n\n\"Uh, I've always felt this room was 'home', that there really is something about it.\" I said truthfully. This office had 'the vibe' for me, which is one reason I refused to move out of it. \"Why don't we take the bag to MCD and see if it works better for you.\"\n\nGoing back to MCD, I set the bag down on the desk opposite the whiteboards, near the back hallway door. Dr. Mickelson did his readings.\n\n\"Oh yes, definitely something here.\" said Dr. Mickelson.\n\n\"The fluorescence from the glow discs?\" Cindy asked.\n\n\"No,\" said Dr. Mickelson, \"that's in the UV/visible light range. This is nowhere near that. This detector is a modified and enhanced device based on the EEG that they do for brainwaves. That's why I've asked people to not be near it. Obviously Commander Troy's office is full of residual radiation.\"\n\n\"There's one more thing I'd like you to look at.\" I said. I went and got my red crowbar and came back. The crowbar still felt warm to the touch.\n\n\"Holy cow!\" said Dr. Mickelson. The instrument had pegged out. \"Let me try something, here.\" He went to the briefcase he'd brought in, which actually had instruments in foam liners. He got out another Geiger-counter-like device. The device didn't just click, it outright buzzed when it came near the crowbar.\n\n\"Commander,\" said Dr. Mickelson, \"the element iron is the least receptive element to radiation. It's where the fusion of the light elements meets the fission of the heavier elements. Iron is what makes stars explode into supernovas when it is formed in the core of the stars; fusion in iron is endothermic, allowing gravity to defeat the energy of the fusion. That causes the star to collapse and blow up.\n\n\"The point of that is that this crowbar is made of iron,\" continued Dr. Mickelson, \"but it has an order of magnitude over the normal levels of background radiation coming out of it.\"\n\n\"Is it dangerous?\" I asked.\n\n\"It's alpha radiation.\" said Dr. Mickelson. \"Held in your hand, it's not dangerous. If you ingested it internally, it would be deadly. My question is... what the heck is causing it? What was this crowbar cast out of?\"\n\n\"Standard nails and magnetite, from what I understand.\" I said. \"The kids had a fund drive to raise money by selling nails, then the Town High metalworkers melted down the nails with raw iron and cast the crowbars. But it hasn't felt warm to the touch until last night.\"\n\n\"Interesting.\" said Dr. Mickelson, seeming laconically... but I could tell he was extremely interested in these findings. \"Well, thank you for letting me do these tests. I don't know if I've helped you find those poor kids, though.\"\n\n\"Maybe you have.\" I said. \"Would you be willing to work with Supervisor Milton to outfit a drone that can detect strange radiations?\"\n\n* * * * * * * * * * * * * * *\n\nDrones were already scouring the County. The farm fields to the south and west, Point Hollow and the marshy areas to the north, around Lake Reservoir, and any other place where it was not easy to get human eyeballs to in order to look around. Now another one was added, but Myron was not hopeful.\n\n\"Dr. Mickelson's ideas are... interesting.\" Myron said with perhaps a touch of disdain. \"But I think the background radiation is going to be too much. Even with the small onboard computer using an algorithm to filter it out, I'm not sure about this.\"\n\n\"Well, Myron,\" I said, \"some think your father's work is... interesting. Of course you and I know he's just way ahead of his time. So let's give it a shot. To be honest, this might be our only shot to find those kids before... it's too late.\" Myron nodded and went back to his work.\n\n* * * * * * * * * * * * * * *\n\n\"So your crowbar is radioactive. Now why am I not very surprised about that?\" Cindy said as we sat in my office some minutes later. I waved said crowbar in her general direction.\n\n\"It only happened recently.\" I said. \"It felt warm when I grabbed it to go confront Slender Man in the parking lot. Before that... just plain cold iron, to coin a phrase. So... how are the parents holding up?\"\n\n\"Patricia Ridley began getting more agitated.\" Cindy said. \"She actually saw the Slender Man in her home, just as Bart Tomlin saw the Slender Man grab Tommy... well, so he says, and taking him at his word. So I had her taken to the Hospital to get checked out. They admitted her, saying they wanted to run some tests... but she's sedated now. Bart Tomlin is also sedated; every time he wakes up he starts weirding out, and starts screaming. Dr. Yates says he's very concerned about Bart.\"\n\n\"Anyway,\" continued Cindy, \"the other parents are upset, of course, but they're holding on pretty well. But we need to get something soon... they know as well as we do that another 24 hours without any sign of the kids will be a bad thing...\"\n\nPart 11 - Fronting Slender\n\nSusie Haskins woke up. She was in a fairly large room, like a living room or sitting room. It looked old. There were windows to the outside, shuttered. She could not see through the slats and the frosted windows beyond, but letting in a bit of sunlight.\n\nLooking around, she saw the other six kids, all asleep on the floor. There was also a sheet on the floor, with seven bowls of cereal and some milk. The milk was cold. There was also a carafe of water.\n\n\"Wake up, everyone!\" Susie said. \"We've got some food here.\"\n\nThe other kids began waking up. They found all doors to the room sealed, except one, and it led to a working bathroom with no other exit.\n\n\"Maybe we shouldn't eat the food.\" said Tommy Tomlin. \"Maybe it's poisoned.\"\n\n\"I'll chance it.\" said Susie Haskins. \"Who knows when we may get to eat again.\" She began eating one of the bowls of cereal, and soon all the other kids were following suit.\n\n\"Where are we?\" asked Rachel Fourier. She looked scared; she was scared. Susie tried to put on her calmest face and brightest voice.\n\n\"I don't know. I don't hear any traffic.\" Susie said. \"But don't worry. Captain Ross and the Iron Crowbar will come and get us.\"\n\n\"They have to find us first.\" said Zack Ridley dispiritedly.\n\n\"They will.\" said Susie, refusing to give up hope. She thought of Mrs. Veasley, and Captain Ross, and she knew they would not want her to give up hope. She could not let them down.\n\nBettie Paige, younger than the others, was beginning to cry. Susie put her arm around the girl. \"Don't cry. We'll be okay. We'll get out of here.\"\n\n\"What if we don't?\" asked Zack. \"What if the hotshot Iron Crowbar can't figure it out, this time?\"\n\n\"Stop being negative.\" ordered Susie.\n\n\"Yeah.\" said Alton Taylor. \"The Iron Crowbar will find us.\" He still had vivid memories of that night that the Iron Crowbar, bleeding from a gunshot wound in his side, had led Alton, Rachel, and Katie Gibson out of Ward Harvester and to safety.\n\nEveryone settled down, no one talking. Zack Ridley was in his own world, it seemed.\n\nSusie felt like something was behind her. She turned around. Hovering over her and Bettie was the Slender Man.\n\nAll the kids began gasping and screaming and trying to back away from the tall, faceless entity, but there was nowhere to run. Bettie began trembling, and crying. \"Let me out of here! I want to go home!\" That apparently irritated the Slender Man, who began leaning over as if to grab the little girl.\n\n\"Stay away from her!\" Susie yelled defiantly, putting herself between Bettie and their antagonist. \"Leave her alone!\"\n\nThe Slender Man stood up, seemingly surprised at Susie's bravery and defiance. She was scared, but was acting in spite of her fear. He turned and walked to a door, opened it, went into the hallway beyond, and closed the door behind him.\n\nSusie got up and tried the door, but it was locked again. When she turned around, she had six pairs of eyes on her. None of what they were enduring was believable, but what Susie had done was even more shocking...\n\nPart 12 - A Worse Evil\n\nBobby Russell sank his cock balls-deep into the beautiful blonde beneath him, groaning as he felt the warm wetness of her cunt enveloping his throbbing hard shaft. He pressed his chest down onto hers, his muscular pecs crushing her large natural breasts as he nuzzled her neck. He felt her hands massaging his hard asscheeks as he began flexing his hips, pistoning his cock into the depths of her sopping pussy.\n\nJayne Hallerton groaned as she felt Bobby's big cock invade her, and she began pushing up to meet each of his stabbing thrusts. The hot blonde had worked her already athletic body into peak physical condition, and her magnificent ass was becoming known as one of the hottest in the State. If she didn't fuck a man's balls off, she'd twerk them off with that ass of hers.\n\nThe tall woman raised her long, shapely legs and wrapped them tightly around the athletic stud's back, the heels of her feet pressing into his ass. \"Fuck me, Bobby. Fuck me!\" she whispered into his ear, fueling his red-hot lust for her. He raised his head up and then mashed his mouth onto hers, their tongues twining together in a searing hot kiss as they hungrily mated on Bobby's bed.\n\nThey were in his Frat house on the southern edge of the University Campus. On the other bed, watching the hot couple rutting lustily were Betsy and Kenny. Betsy had been in the car with Bobby Russell when he drove drunk and slammed into the Girls Orphanage bus just before Christmas. She was dressed only in her bra and panties, and was fingering her aching, wet cunt as she watched Bobby fuck the incredibly hot Jayne. Kenny was pear-shaped, and he was stroking his barely three inch long cock through his short pants.\n\nBobby and Jayne had met at a party, seemingly by chance to him, definitely contrived by her. Bobby was used to women giving him attention. He was good looking, his looks coming from his attractive mother, black haired, and had the tall, slender-ish body of a man poised to do great things. Even so, when Jayne began chatting him up, he was an eager listener. This woman could be a beauty queen or a porn star, so fine was she. Her honey-blonde hair was natural, as were her breasts and ass...\n\nAs Bobby fucked Jayne relentlessly, pounding his meat into her eagerly receptive womanhood, he enjoyed the way she fucked him back, the taste of her kisses that burned into his soul, the feel of her legs against him that fired his male lust into action. The bed squeaked as he nailed the blonde beauty into it.\n\nJayne felt her own orgasm building up. The intense pleasure of Bobby plunging into her again and again and again made her body burn with lusty pleasure and her soul burn with a fire she'd rarely felt for any man. Neither would admit it, but their feelings for each other were not just the desires of their bodies for raw, physical sex...\n\nBetsy looked over at Kenny, sitting next to her on the other bed. She very craftily looked at his small cock, then reached over and began massaging it through his shorts. Kenny groaned and opened his pants, and Betsy reached in and began stroking his stubby shaft.\n\nJayne felt her orgasm build, and she didn't try to fight it. She concentrated on the pleasure of being filled by Bobby's invading cock, and the ecstasy finally exploded in her deepest loins.\n\n\"Uhhh! Oh Bobby! UNNH!\" she cried out as she came. Bobby felt her cunt clutch at his cock like a vise, seemingly trying to crush it or expel it. Bobby pushed in harder and harder, feeling his nut rising. He heard a groan from the other bed.",
        "Kenny was watching the hot couple on the other bed, and he could not stop the rising intensely painful pleasure building in his balls as Betsy stroked his knob. But just as his loins began pulsing, she let his cock go. With a groan, he began spurting his semen, the first blast spraying into the air, followed by much smaller dribbles.\n\nIt was a 'ruined climax', as Betsy had teased Kenny by giving him a hand job, then let go just as he began coming. Betsy was giggling as Kenny groaned in both release and frustration.\n\nJayne had not noticed, as she had been busy orgasming around Bobby's big prick. But Bobby had seen it, and had loved watching that inferior young punk get punked by Betsy.\n\n\"Yeah, good work, Betsy.\" he grunted. \"Now let me show you how a real man comes!\" He began pistoning in and out of Jayne, powering his meat by flexing his ass and pushing forward into the hot blonde. Jayne was crying out as he 'fucked to pop', relentlessly banged her clutching cunt until his nuts and loins seemed to explode in ecstatic pain.\n\n\"Oh, yeah!\" he gasped. Unlike Kenny, Bobby's cock was buried in a woman's snatch, and he was firing his semen deep into the depths of a warm, wet pussy. Spurt after spurt of thick, heavy cock-cream hosed the back walls of Jayne's spasming body as she took the massive male deposit, her body eager to host his potent, virile sperm...\n\nBetsy scooted off the other bed and dove for Bobby's cock as he slid it out of Jayne's pussy and rolled off her. He and Jayne made out hotly, deeply kissing as Betsy engulfed Bobby's meat in her mouth, cleaning his and Jayne's combined juices off his deflating shaft.\n\n* * * * * * * * * * * * * * *\n\nJayne was lying back on the bed with Betsy between her legs, face-deep in Jayne's well-used twat. Betsy was tonguing Jayne's pussy with gusto, cleaning out Bobby's semen, trying to get it all but knowing that a good amount of his large load would remain deep in Jayne's pleasured pussy.\n\nAs they watched Betsy do cleanup on Aisle Jayne, Kenny said \"I guess you heard that Dean Allen is getting out of prison.\"\n\n\"Who's that?\" asked Bobby as if he didn't care.\n\n\"Senator Nathan Allen's son.\" said Kenny. \"Senator Nunn died of a heart attack, so they say, anyway. Son went to jail for a drunk driving accident that killed a woman and her two kids. He's getting out.\"\n\n\"So what?\" Bobby said, taking a swig of the beer he was drinking.\n\n\"Democrats are arranging to meet with him.\" said Kenny. \"Word is that something's up, that after the Republicans get rid of Jared, the Dems are going to step in and fuck over the Republicans.\"\n\n\"How do you know this?\" asked Bobby scornfully.\n\n\"I've got... sources.\" said Kenny. He did not mention that he worked as a staffer for State Senator Katherine Woodburn, Nathan Allen's successor, and was a mole inside their organization.\n\n\"Cool.\" said Bobby. He would have to call his father, U.S. Senator Samuel Russell, with this information. But for right now, he got up and went over to the bed with the women on it. He straddled Jayne's beautiful head, and eased his cockhead to her lips. She eagerly sucked his meat into her mouth, preparing him for their next hard, deep fuck...\n\n* * * * * * * * * * * * * * *\n\nChaplain Steven Ikea escorted Dean Allen into the State Office Building in the City. They went through a labyrinth of hallways to the office of State Representative Justin Madoff, whose assistant showed them into the small conference room adjoining Madoff's actual office.\n\nAs Allen came into the room, he was shocked at the sight of the two men in the room. One was former SBI Agent Richard 'Dick' Ferrell, sitting in a wheelchair. The other was former SBI Director and failed gubernatorial candidate Jack Lewis.\n\n\"Ah, come in, Mr. Allen.\" said Lewis. \"I'm sure it's been some time since you've had a good beer and some good food.\" He handed Dean a bottle of Michelob beer as Ikea handed Ferrell a bottle and got one for himself.\n\n\"Thank you, Mr. Lewis.\" said Dean Allen. \"But aren't you and Mr. Ferrell taking a risk being here?\"\n\n\"The timing couldn't be better.\" said Lewis. \"The Iron Crowbar is embroiled in a multiple kidnapping case, and he has no time to be worrying about us. But you're right: Ferrell and I will be returning to Eastern State later today. Chaplain Ikea will be your liaison to us... if you want to be part of our team.\"\n\n\"Well, why don't you tell me what it's about.\" said Dean Allen.\n\n\"I don't know how much you were able to keep up with while in the 'Country Club'.\" said Lewis, using the nickname of the Minimum Security prison in which Allen was incarcerated. \"Ikea will fill you in on that later. For now, suffice it to say that we are on the cusp of removing Governor Jared from office. The Establishment Republicans think that they will be resuming control, and with the help of Democrats.\"\n\n\"What they don't know,\" said Lewis, \"is that after we've used the idiot Republicans to cannibalize their own, we're going to make our moves to crush them and take complete power in the State. Graham Collins is going to be scandal-plagued within months, as Jared is now. We're going to maneuver it so that the next Lieutenant Governor is a Democrat, and when Collins is gone, we'll have the Governorship.\"\n\n\"As part of that, I will be taking back over the SBI.\" continued Lewis. \"I'd like you to help us out. Over time, there will be opportunities for you... a Legislator like your father was, or working with the State Democrats as a fundraiser and bundler of campaign contributions, or even working with me when I become Governor in the next election. You would be a great asset to our team.\"\n\nDean Allen nodded. \"It all sounds good. I'm starting over and I'm just setting up, so it's a good time to come into all this. But there is one thing I want.\"\n\n\"Revenge for your father's death?\" asked Lewis. Allen nodded. \"Yes, the Iron Crowbar and his little pitbulls in the TCPD have much to answer for. Dick here, unable to walk because of them. You, in prison. Your father, murdered...\"\n\nAllen nodded. \"I especially want to take down that bitch Teresa Cunt. I want to piss on her dead face.\"\n\nThe Reverend Ikea nodded. \"You're not the only one that wants to see that cunt get what she deserves. There is a special place in Hell reserved for her, and another for the Iron Crowbar...\"\n\nPart 13 - Frayed Nerves\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News at Six!\" said the redheaded reporterette from behind the anchor desk of the news station at 6:00pm. \"A pall of fear hangs over the County as Police and the FBI search for seven missing children!\"\n\n\"Schools were on lockdown for the day after the disappearance of Bettie Paige, daughter of Public Health Officer Beth Paige, and Susie Haskins earlier today.\" Bettina said. \"Many parents went to the schools, but were only allowed to take their children home after school was over for the day.\"\n\n\"Police are advising parents to stay at home with their children,\" said Bettina, \"but many are pooling into groups at locations such as First Baptist Church and the Town High School gymnasium, where the Red Cross and University Hospital are running an exercise of their emergency disaster plan.\"\n\n\"The Town & County Police have opened a hotline and are asking anyone with any information about these disappearances to call in.\" Bettina continued. \"The TCPD, with the assistance of the Fire Department and Public Health Department, as well as many volunteers, are processing and investigating every lead available to them.\"\n\nBettina then took her shots: \"However, Fox Two News has learned that Commander Donald Troy and the TCPD have no leads nor clues to where the children may be. Furthermore, Commander Troy has refused to update the Press with any information...\"\n\n* * * * * * * * * * * * * * *\n\n\"That's a low blow.\" said Cindy as she, the Chief, and I watched the newscast in my office. \"Taking a cheap shot at you when you're in here working your ass off to find those kids.\"\n\n\"They want you to make a statement, Commander.\" said Chief Moynahan. \"And maybe you should, just to get them to stop saying crap like that.\"\n\n\"No.\" I said. \"I have nothing to say to the God-damned Press, especially that cheap shot bitch Bettina.\"\n\n\"I know how you feel about them, Commander,\" said the Chief, \"but they're just trying to get information to the People about this.\"\n\n\"Did you talk to them about it, Chief?\" I asked.\n\n\"Yes, I've pretty much been the Press Relations Officer today.\" said Moynahan. \"And staying out of your way while you work on this. But they want you, Commander.\"\n\n\"Why?\" I asked. \"Chief... have you ever asked yourself why they want me? Why me specifically? There's nothing I can tell them that you can't. There's nothing I know that you don't... or Captain Ross. So why me?\"\n\n\"Well...\" said Moynahan, \"you've been so successful that if People see you reassuring them that you're on the case, it will calm them down.\"\n\n\"No sir.\" said Cindy, getting insight. \"I'm getting what Don is saying. They want to put him on the air while he does not know anything. They want to show him looking helpless and confused. If he had information that was helpful, they wouldn't want him anywhere near their cameras. And they can't make him look bad if it's you or me talking to them.\"\n\n\"She's right, you know.\" I said to the Chief. \"And she's good. I'm really hating losing her as Chief of Detectives.\"\n\n\"Stoppit.\" Cindy said quietly, though I could tell she was pleased by my praise of her. The Chief chuckled.\n\n\"Wellll...\" said the Chief, \"maybe you're right. And if you are right, they're just going to get more rabid and hostile as this goes on.\"\n\n\"There is one other reason they want me specifically.\" I said. \"If I go in there, they will not ask even one single question about the kidnappings. All they will ask about is this fucking Independent State Counsel appointment. That is what they truly want to hit me with.\"\n\n\"And then they'll say you're not concentrating on the kidnappings because you're more worried about the Independent State Counsel.\" Cindy said. \"God, how the Press sucks.\"\n\n\"Keep saying things like that,\" I said, \"and someone is going to promote you to Deputy Chief.\"\n\n\"Don't you threaten me!\" Cindy replied, waving a green crowbar in my general direction.. We probably would've laughed more if we weren't so tired, as well as concerned about the cases at hand...\n\n* * * * * * * * * * * * * * *\n\n\"Don,\" asked Jack Muscone as he sat in my office with me and Cindy, \"any idea of what kind of vehicle this guy would have?\"\n\nJack had brought Cindy and me some double cheeseburgers from the Cop Bar, and needless to say, my mouth was full of food as I wolfed down the delicious burgers. \n\n\"I don't know.\" I said as soon as I was able to. \"You'd think he'd have to have some kind of van to transport seven kids, and we've been on the lookout for vans, and looking inside any that try to leave the County. It's 'no joy' on that.\"\n\n\"No more kids have disappeared since Susie Haskins.\" said Jack. \"Clark Webster and I are really hoping that he's got all the kids he wants, and will contact us about a ransom soon.\"\n\n\"These kids don't have wealthy parents.\" said Cindy. \"They're not exactly the profile of kids I'd expect to be kidnapped for ransom.\"\n\n\"Two of them were kidnapped before for ransom.\" I said. \"Although that was pretty much just a front to get me to deliver that ransom and put myself in their hands.\"\n\n\"Which may be what is happening now.\" Muscone replied. \"Most of these kids have a connection to you or the Police. By the way, any more on Bart Tomlin or his son Tommy?\"\n\n\"No.\" I said. \"My Data Gurus have melted the wires trying to find anything on Bart Tomlin, his ex-wife, or any reason that Tommy would be targeted. We got a warrant to confiscate Bart's computers, but so far... nothing. No connection to the TCPD, Public Safety Department, nor anyone in it... including me.\"\n\n\"I'm beginning to think Teresa is right.\" agreed Cindy. \"This guy wants you, Don.\"\n\n\"Here I am.\" I said, spreading out my hands and arms. \"All he has to do is contact me...\" \n\nPart 14 - Helpless\n\n\"\"There's not a soul out there,\n\nNo one to hear my prayer...\n\nGimme gimme gimme a man after midnight,\n\nWon't somebody help me chase the shadows away,\n\nGimme gimme gimme a man after midnight,\n\nTake me through the darkness to the break of the day...\"\n\n--- ABBA, 'Gimme! Gimme! Gimme!' \n\n11:30pm, Thursday, April 20th. The children were gagged, and their hands tied in front of them with bandanas. Their left arms were then tied to a rope. The Slender Man led the procession through the darkness of the hallways, down a flight of stairs, and out the front door of the house.\n\nSusie Haskins was the last of the seven children. It was completely dark outside, but she could see that they were leaving a large, old house and moving across the front yard to a copse of trees. To the right there was looked like a driveway, with a streetlamp that was not working. The wind seemed to be picking up, blowing through the trees, eerie whispers reaching Susie's ears. She thought of Mrs. Veasley, and that she had to be brave because Mrs. Veasley would want her to, and so would Captain Ross. She willed herself to not let the fear she was feeling overcome her. She refused to lose hope. She prayed, hoping against hope that her prayers would be heard...\n\nThe Slender Man led them down into the trees. It was pitch dark in this little forest, but they could see the Slender Man clearly for some reason. He pointed to the ground, silently instructing them to sit down. They did so, in a cluster. Little Bettie Page looked at Susie, fear in her eyes. Susie just nodded to Bettie, and saw some of the fear leave Bettie's eyes.\n\nThen Susie noticed that the streetlamp that had been not working, was now working, bathing the yard in an eerie blue light. Susie recognized where they were.\n\nThe Slender Man stood nearby. He seemed to be waiting for something... for someone. It seemed that everything grew even quieter, more still...\n\nPart 15 - Glowing Clues\n\n11:15pm, Thursday, April 20th. I went into MCD. The Detectives were at their desks, working every lead, every tip that had come into the hotline. Vice Detectives and their Lieutenant-to-be were also at MCD desks, helping process all the information.\n\nI did not need my mother's powers of observation to realize that they were absolutely exhausted. I went back across the hall to my office and made a phone call.\n\n* * * * * * * * * * * * * * *\n\n11:45pm. After taking possession of the delivery I'd ordered, I went back into MCD, with Cindy and Teresa in tow. \"Now hear this!\" I called out. \"There are pizzas in the breakroom. Go eat them. That is not a request. Empty this room. Go empty the Vice room. That includes both you Captains.\"\n\nEveryone went down to the breakroom, and a few slices were sent to the Duty Desk. Meanwhile, I went into my office again. I'd been poring over incoming information, everything the Detectives and Uniformed Officers had been doing in the massive search for the kids, as well as what the FBI was finding as their teams also searched for clues.\n\nI leaned my head back, trying to think, trying to see what this bastard Slender Man was doing, what his intent was. My eyes fluttered for a second...\n\n\"Oh, Commmannndderrrr...\"\n\n\"Angela,\" I heard myself say, \"you have the worst timing...\" I looked up to see Angela Harlan standing on the other side of my desk, gloriously naked except for the black high heel pumps, staring down at me in the now-dim light.\n\n\"He's doing this to get at you, my beloved Commander.\" Angela said, her voice seemingly a whisper coming from everywhere around me. \"He's going to force you to face him, and then he is going to destroy you.\"\n\n\"Fine, let's get it overwith.\" I said wearily. \"As long as I get the kids back. Where is he?\"\n\n\"Oh, you soooo disappoint me, Commander.\" said Angela, turning her back on me as if to leave the office. \"He's given you every clue. He even came in here and put the clues right in front of your face. You just can't see the light, can you?\" And with that, she walked out the door.\n\n\"Huhh!\" I gasped as I woke up. I'd fallen asleep, I realized. Angela had been a dream, yet again.\n\nAnd then... I began hearing her words in my mind... \"see the light...\" And it all hit me at once: the radioactivity and chemical smell on the eight pages. Slender Man coming in the night before... and putting the disc golf bag in MCD. That had to be it!\n\nI opened my safe and got out the disc golf bag. Wearing latex gloves, I took out the flashlight, and turned it on. It was emitting a purplish light. That's it! I thought to myself. This is an ultraviolet light to charge the glow discs, make them glow brighter in the dark!\n\nNow why didn't I check this flashlight before? I silently berated myself. Why didn't I realize what this light really was, what with the glow discs there? God, Don, you are really losing it, you idiot.\n\nI continued to mentally berate myself as I put the bag of discs back in the safe and locked it. I took the flashlight into the empty MCD room. I turned off the lights and turned the flashlight on, pointing it at the eight pages. Words suddenly appeared in a glowing greenish light!\n\n\"I\"... \"am\"... \"wait-ing\"... \"for\"... \"you\"... \"Iron\"... \"Crow-bar\" spelled the words of the first seven pages. I shined the UV flashlight on the eighth page. \n\nThere were no words, but the outline of what I recognized as the borders of the County appeared. The circled X in the top left corner also glowed green. It was in the very upper left corner of the County. Trepidation filled my soul as I realized that location, the place in this County where the Powers of Evil were at their most exalted...\n\nPoint Hollow.\n\n* * * * * * * * * * * * * * *\n\n\"That pizza was good.\" said Cindy to Teresa as they walked down the back hallway from the breakroom towards MCD. \"We really needed that.\"\n\n\"Yeah we did.\" agreed Teresa. \"It was good of Commander Troy to buy us those pizzas. I've got a couple of slices here for him.\"\n\nJust then, the Duty Desk Sergeant came walking fast down the hallway, almost running. \"Captains!\" he said loudly as he came up to them.\n\n\"What is it?\" asked Cindy. \"Another child reported missing?\"\n\n\"No ma'am.\" said the Sergeant. \"Commander Troy just left through the employees' entrance. He had the lightbars on his SUV flashing before he even got to the street, but he's not responding to radio calls.\"\n\n\"Shit!\" muttered Teresa. She was running after Cindy, who was already tearing down the hall.\n\n\"He's not in his office, nor is his crowbar!\" Cindy said loudly as she came out of Helena's anteroom. They ran into MCD just as the other Detectives were getting there.\n\n\"What is it, ma'am?\" asked Joanne. \"And why are the lights turned off?\" She turned them on. Cindy saw the flashlight, sitting on the nearest desk. Grabbing it, she turned on the flashlight, and saw the faint purplish light.\n\n\"Turn those lights back off!\" Cindy ordered as she realized what was going on. As Joanne did so, Cindy beamed the flashlight onto the eight pages. They all read the message that glowed on those pages.\n\n\"Yep, the Slender Man wants the Iron Crowbar.\" Cindy said. \"That last page... that's the shape of the County. And that Circle-X in the upper left hand corner is...\"\n\n\"Point Hollow!\" Joanne cried out.\n\n\"Yes, yes it is.\" said Cindy. She called out loudly \"Everyone, let's go! Teresa, get all available units to Point Hollow on the double! The Commander is already on the way!\"\n\n\"Why didn't he tell us?\" Teresa muttered as they tore down the hallway.\n\n\"Welcome to my world, Captain Croyle.\" Cindy muttered back.\n\nPart 16 - Slender In Personal Combat",
        "12:10am, Saturday, April 21st. I drove up the road to Point Hollow. The streetlamp at the end of the drive was working, adding to the bright blue LED lights of my lightbar on top of my Police SUV. I turned so that my headlights were bathing the front yard, and called into the radio my location and a request for backup. The Duty Desk acknowledged the call.\n\nI then got out of the car. I was wearing all black, with my 'girdle' under my shirt, and a standard black armored vest with 'POLICE' in white on the back over the shirt. My khaki-colored Tilley Hat was on my head, and my red crowbar was in my hand.\n\nAs I walked slowly into the front yard, I heard sirens, then saw the faint blue lights of Police vehicles coming my way. Someone else must've found the flashlight and seen the message, I realized.\n\nI did not hear anything but the wind blowing through the trees, but I felt the presence of something... something powerful... something evil. I was looking at the dark, empty house, wondering if I should go in, when something on the wind whispered for me to turn around. As I did, the Slender Man stepped out of the copse of trees and into the yard, facing me. \n\nWe were 75 feet apart as I turned to confront him. He didn't move, just stood there with his hands to his sides, his featureless face seeming to be staring at me as Police cars came up, some down the driveway, some up the two-track dirt road through the trees by the River. Point Hollow was surrounded, but with only me between Slender Man and the State Line behind the house.\n\nI felt my heartbeat building as I felt the Slender Man seeming to reach out to me with mental energy. I pushed back mentally, then faintly heard Myron Milton's voice somewhere to my right: \"I've got seven IR signatures in the woods, and I've got Commander Troy. I'm seeing that guy in the suit right in front of me... but he is not registering an IR signal.\"\n\nThat was all I needed to know, and the Slender Man knew it, too: the children were behind him, and I would have to go through him to get to them. So be it...\n\n* * * * * * * * * * * * * * *\n\n\"He's attacking!\" Teresa gasped as I took off running right at the Slender Man. \"Hewitt! Get guys in the woods and get those kids while the Iron Crowbar is distracting him!\" Hewitt and other Officers moved out, and into the woods from the side...\n\n\"Milton!\" Cindy called out. \"Get videocameras on this! Everything we've got!\"\n\n\"On it, ma'am!\" called out Myron. \"Dashcams, videocams, and drones are on it...\"\n\n* * * * * * * * * * * * * * *\n\nAs I ran towards the Slender Man, feeling as if I were running faster than I ever had before, it seemed as if tentacles were coming out of his back... or were those just the branches from the copse of trees? \n\nIt did not matter... I had a mission to complete, to get those kids back. And the one obstacle to that, the Slender Man, was in my way...\n\n* * * * * * * * * * * * * * *\n\nTeresa was about to run and help Commander Troy, but Cindy stopped her.\n\n\"What are you doing?\" Teresa gasped. \"I've got to help Don!\"\n\n\"No, this is his fight.\" Cindy said, very sure. \"I'm getting a vibe like I've never had before. We... we can't help.\" \n\nAnd then Teresa felt it, too... she realized that Cindy was right, that she would have no hope if she joined that fight... and that her mission was to ensure the recovery of the children...\n\n* * * * * * * * * * * * * * *\n\nAn arm or tentacle seemed to reach out to me as I got to the Slender Man. I swung my crowbar and hit it, making solid contact. I pushed forward, swinging my crowbar at the arms that seemed to be coming out of me from every direction. \n\nI felt like I was in a surreal zone, detached from the reality of the earth. I felt as alive as I'd ever felt before, more aware than ever before, seeing things almost before they were happening. I deflected every attempt to grab me, and despite Slender Man's attempts to move and avoid me, it was not enough. I swung my crowbar at his belly.\n\n**WHAM!!**\n\nI got him! I hurt the mighty Slender Man! I thought exultantly. A solid blow to his midsection. As I raised my arms to follow up, expecting Slender Man to double over, I heard noises in the woods. TCPD Officers had reached the kids, and were rescuing them. My mission was complete!\n\nBut the Slender Man did not bend over. Instead, he somehow managed to step back. I had not subdued him; indeed, I had merely made him mad. As I moved towards him to strike again, I realized that tentacles were surrounding me, and this time way too fast to counter in any way. I felt something wrap around my waist and lift me.\n\n* * * * * * * * * * * * * * *\n\n\"What is that?\" Teresa gasped as she saw sparks coming from the Commander's back. She began running towards the antagonists locked in combat, but this time she felt herself falling to the ground, and was unable to get up. Other Officers were also unable to come to the Iron Crowbar's aid, repelled by an evil energy...\n\n* * * * * * * * * * * * * * *\n\nI felt a violently sharp, hot needle of pain in my back, right where my damaged vertebrae were. It was as if the Slender Man was laser-drilling right into my back at its weakest point. I fended off attempts to grab my arms and my crowbar as I felt my legs go limp... I couldn't feel them any more.\n\nThis was it, I realized. My supreme moment. And then I saw one tiny chance. I saw Slender Man 'looking' up at me as he held me up and drilled into my back. I raised my red crowbar in both hands, and with every bit of power I could muster I smashed it down upon that featureless head...\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "big cock",
        "group sex",
        "ruined climax",
        "slender man",
        "iron crowbar",
        "mystery",
        "drama",
        "crime drama"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/return-of-the-slender-man-ch-02"
}