{
    "title": "Shameless",
    "pages": [
        "All: This one has proven trickier to land than I expected. I initially tapped it out on a tablet. I can't recommend that. Way too many errors that had to be fixed. Weirdly this was triggered by an episode of Island Hunters - a real estate show. \n\n***** \n\nI stared into the soulless black void for almost a full minute before add a dollop of rum to it. \n\nAt least I'd waited a full five minutes. Up til recently, I'd have put rum in the coffeemaker instead of water if it would have worked. \n\nWell... Okay, I actually tried that one time. The black rum gummed up the coffee maker something fierce. And it boiled nearly all the alcohol off so I had to add more rum to it anyway. The things you learn. \n\nI'm Grease. \n\nEveryone out here in the islands uses a name other than the one they were born with. \n\nMy name is Grease, short for Grease Monkey. Because I do engine work on boats. Or maybe they call me that for the grease stains on my shirts and shorts. They aren't exactly sterile. \n\nActually, I've not been too big on personal hygiene for a few years either, so maybe that's the reason for the name. \n\nI used to care. \n\nI really did. \n\nMy name used to be Thomas Knight. And I'd had it all. I wasn't born with it, we'd worked hard for it. Me and my wife, Lil. My high school sweetheart, Lily, had stood by my side through college, then law school and put up with 120 hour work weeks for years. She'd worked hard at every job she could find to keep food on the table and help pay for my schooling. And it was going to pay off in spades. We'd finally reached our time, we were on the edge of absolute financially security and ready to start our family. I'd be bringing in enough money that she'd never have to work again, and she could have her dreams of staying home and raising three children. \n\nThat didn't work out like we planned. \n\nAt first we thought Lil was just a little under the weather. She was tired all the time. Then she couldn't keep food down. It just kept getting worse. And worse. \n\nOvarian cancer. Once the words were spoken, it was gasoline on a fire. She was gone in just a few months. It took me a while to feel anything and when I did, it was loss. I felt hollow, empty, and completely directionless. Go to work. Go home. Stare at the walls remembering too much. \n\nI started drinking. \n\nI was sure I could quit any time I wanted. \n\nI just didn't want. \n\nThe job. The house. The cars. Most of the bank account. Three DWIs and I was warned by the Bar. \n\nI was done in Florida. Even if I got my head on straight, I'd have a hell of a time getting back on the track I'd been on. \n\nSo I said \"Fuck it\", bought a fifth hand boat and headed out to the islands. I'd grown up around boats in Florida, and worked on the docks and on fishing boats through High School and college. I'd always been pretty handy with a wrench. \n\nI vaguely dreamed of getting the boat fixed up and taking on charters, maybe building a fleet of little charter boats. \n\nI really should have stopped drinking so heavily. \n\nAfter five years my boat was a mess, and I worked on engines to keep on drinking. Hadn't even been out of the slip in a year and a half. Stopped cutting my hair, or shaving, so I have a thick ratty beard, and a roughly tied back ponytail with a shitload more strands of grey than I want to think about. \n\nSo, yeah, I'm Grease. \n\nEveryone out here in the islands uses a name other than the one they were born with. \n\nThere's Pogo, the owner of The Shack, which is an ex-pat beach bar and grill, pretty much for the veteran crowd. Has some kind of strange Special Forces logo on the back wall along with a bunch of faded news articles. Pogo has service flags from all the services - even the Coast Guard - hanging from the rafters. The Shack is my usual hang-out; they put up with me because I can fix their boats, even though I'm not really one of them. The Shack's got good food, the music isn't too loud, and it's full of interesting characters. \n\nThere's Loud Howard, a nearly permanent fixture at The Shack; he's the short guy with a classic napoleon complex. You know he's there about 100 yards out. \n\nFrank Rotuma hangs out there to avoid tourists. A lot. We call him Chief. Because he's the local police chief. Kinda makes sense, doesn't it? \n\nThere's Monster and Ex. He's called Monster because of the massive and horrible scars on the side of his face. The whole side of his face - looks like someone skinned a demon and stretched its skin over a human skull. And the eye on that side is almost solid white - the iris is clouded over. He's friendly enough, but there's just something about him that seems off. \n\nAnd Ex is, well, his ex. I have no idea why they are still together; they certainly don't seem to be in love - more like business associates. She always seems to be watching him. They're rarely apart when they're down here which is about half the year. \n\nI heard he's some kind of teacher and she's a nurse. Really can't imagine falling asleep in his classroom. \n\nThere's a bunch of others; like I said, everyone has a name. \n\nIn the next slip over from mine, for two weeks a month, in the really nice boat there's Bobert. I think being parked next to my rust bucket pissed him off at first, but then he realize it made his mahogany decked dream look that much better by comparison. His real name is Robert Sandoval. I guess when he moved in he tried to introduce himself as \"Robert-call-me-Bob\", and ended up calling himself Bobert on accident and it stuck instantly, as such things are wont to do. He's rich; a slick talking high end deal-maker, wears Rolex watches and his boat that would run you a cool 2 million if not more. Pretty much a hustler in anything that will make him more money. I'd think he'd probably be more at home in New York than down here. He is sure as hell not welcome at The Shack and spends most of his time on the tourist part of the strip. I have no idea where he is when he is out of the slip. \n\nThen there's his wife. The reason I've slowed down on my drinking. \n\nHer name is Zascha. \n\nThe first time I saw her, I thought I'd died and gone to heaven. A golden mane of hair, a tall, slender model's body, usually clad in tiny white shorts and blue and white striped short sleeve crop top; it's almost a uniform. On really good days she'll walk the deck in a bikini. \n\nAnd her face? \n\nUtterly angelic. Ever hear the term \"bee-stung lips\"? She has them in spades. True wonders of the world. Despite her beauty, she projects purity and wide-eyed innocence; her cornflower-blue eyes seem to hold an air of permanent wonder. She has \"Iowa home town girl\" written all over her. She's perfectly pristine. As if the corruption of the world cannot touch her. \n\nBut it does. \n\nAgain, and again, and again. Sometimes she wears a blue and white striped long sleeve shirt to hide the bruises on her arms. And sunglasses, to hide the blackened eyes. \n\nRumor has it she sleeps around. \n\nBecause he makes her. To seal business deals. \n\nAnd thus her local name - whispered behind her back, by everyone but Bobert. Shameless. \n\nBobert calls her that to her face. \n\nI've seen her with business men at the bars on the tourist end of the beach. And I've seen her face when she's with them. There's no joy, no anticipation, no lust. Her wide-eyed innocence is replaced by an impassive mask. Her expression never varies. \n\nHe watches them with a cruel smile. In some way he seems to enjoy it. \n\nI couldn't imagine treating someone the way he treated Zascha. \n\nZascha was obviously a Russian \"bride\" - basically a mail order long-term call-girl. I shouldn't feel sorry for her, she chose this. She knew the unwritten rules as well as anyone. And she could leave whenever she wanted - Frank would escort any girl to the airport and personally put her on a plane home, with the flight paid for by the tourism board. He'd done it a number of times to get girls out, but they had to want it. \n\nWhatever she was avoiding at home must have been pretty bad. \n\nStill, I had a cardinal rule of non-interference. Who needs a drunk boat mechanic mucking around in their lives? \n\nThat all changed at the Explorer's Day party at The Reef. It's a tourist bar - all glitzy fake palm trees and hula skirted waitresses. Pogo had to close The Shack much earlier that day to attend a funeral, so I'd drifted down to tourist area and The Reef to get a drink or two. Or four. \n\nI ended up at the table where Bobert was holding court with a bunch of tourists; Zascha sitting slightly off to the side. He was talking about what a great investment boats are - which is ridiculous. I've worked with boats my whole adult life. The definition of a boat is \"a hole in the water that you pour money into\". When he made another particularly stupid statement about boats, I kind of rolled my eyes. \n\nAnd realized Zascha was looking dead at me. She covered a tiny smile by taking a sip of her drink. But she kept her eyes on me. I'd already had a drink too many and took a chance, by silently parodying Bobert's grand mannerisms. \n\nShe had to pick up a menu to hide a silly grin. Then she did the same thing. \n\nAnd we went on like that for the next hour, trading childish expressions at Bobert's expense. We'd never even said hello to each other, but this had been the best conversation I'd had with a woman since I lost Lil. \n\nFrom then on, though, whenever I ran into them, she caught my eye and with a wicked glint, she'd initiate the same game - we had our own secret world. It was the highlight of my existence for several months. \n\nJust seeing her made me feel better about life. I don't know exactly when it happened but I began cutting back on drinking - a very slow road, admittedly. I began taking showers three or even four times a week - which forced me to fix the water system on the boat. Which forced me to clear furnishings out of the hold. And since those were new furnishings, I went ahead and replaced the old stuff. Before I knew it, the boat was gradually shaping up. \n\nWhen his boat was in the slip, I hung out at The Reef in the off chance of seeing her. It was ridiculous, of course, a stupid infatuation with a pretty girl. She couldn't have any interest in me, any girl in her line of work had to be pretty mercenary. And Bobert had more money than I'd ever dream now. But, as silly as it sounds, she made me want to be a better person. \n\nThen, in October, Bobert offered her to me. For two weeks. \n\nWe were sitting at the Reef late and he was eyeing tourists - looking for the next the bigger, better deal, no doubt, when he was given a message by one of the waitresses and left to use the phone. A few minutes later he came back frustrated and irritated. \n\n\"Hey Grease. How about taking Shameless for a spin?\" \n\nI saw Zascha stiffen - it was the first time I'd ever seen her react to him like that. \n\nHe noticed too and gave an evil smile. \n\nBefore I could answer he continued. \"Take her back to your boat. For a couple weeks. Just use condoms. I've got to fly out to make a business deal happen.\" \n\nI sat stunned for second. \"Are you serious?\" \n\nHe grinned nastily. \"She won't fight you. Just don't mark her up too much.\" \n\nI nodded. \"Okay\" \n\nZascha looked shattered. Her mask of impassivity tried to move into place, but it failed; cornflower blue eyes glistening with unshed tears. Bobert shot her a victorious look and walked out. \n\nShe walked quietly with me back to the boat - head down watching her own feet. She walked up the gangplank slowly, feet almost dragging against an invisible sludge. \n\nWhen I led her down to the quarters and pulled open a hatch she looked confused. \n\n\"Wait a second, I have to get the boxes out of here and fold down your rack.\" \n\nShe watched warily as I readied her small cabin, pulling out sheets and a light blanket. \n\n\"I know it isn't really very clean, but I've been working on it, we'll finish it up tomorrow. The head is on the right and I'm in the next cabin to the left - if you need anything just knock and let me know.\" \n\nWhen I stepped out of her cabin, I glanced back. The broken girl was gone and the look of wonder was back. More than enough reward for any effort or pain. \n\nThe next morning I was up pretty early, and had coffee going. She walked out slowly, cautiously, with a tentative, shy, smile. \n\nShe sat and gratefully accepted the coffee - adding enough cream and sugar to make me wince. \n\n\"I don't really have much in the way of food - have you ever been to The Shack?\" \n\nShe answered, and it took a second for me to get my heart started. It was really the first time I'd heard her voice. It was perfect, slightly breathy, just a hint of a Russian accent. \n\n\"No. Robert never took me there.\" \n\n\"Would you like to try it?\" \n\nShe smiled, an instant of sunrise washed over me. \n\n\"I would. Very much.\" \n\nThe walk down the empty beach to The Shack took just a few minutes, but I stole glimpses of her when I could. Even up close, she seemed to be a study in serene perfection. I held her hand for a moment to help her up the seawall. It was hard letting go. I'm sure it was my imagination, but her fingertips lingered for a second longer than they needed to. \n\nPogo's face darkened when I walked in with her. I sat her down at a corner table of the empty bar and went over to him to order breakfast. \n\nHis look boded poorly. And his words went straight to the point. \n\n\"Taking payment in kind from Bobert?\" \n\nI froze for second \"What? Oh, god, no. She's just staying in my spare cabin for a couple weeks while he's out on a deal.\" \n\nHe studied my face for a second, glanced over at her and seemed to come to some conclusion. He let it go. \n\nWe ended up eating fruit pancakes and, after a few false starts we were talking about our favorite foods. Time flew by, and the bar filled rather quickly - Loud Howard, then Monster and Ex, came in. \n\nMonster didn't seem to react, but a look of intense distaste passed over Ex - Pogo saw it and pulled her aside for a few minutes of quiet discussion and she seemed to relax. \n\nLoud Howard came over and talked to me about getting a fuel line replaced on his Boston Whaler before he got it repainted. He actually had a house on the island somewhere. You don't live on a Boston Whaler. Zascha joined the conversation asking about the paint colors and the name of the boat - pretty soon we had half dozen people over. I made sure I introduced her as Zascha. And made sure everyone understood that was what she was to be called. \n\nEx drifted over and began to talk to Zascha. \n\n\"So, you're staying with Grease for a couple weeks?\" \n\nZascha smiled - a huge, amazing smile \"Yes! Two weeks. He cleared out a cabin for me last night!\" \n\nEx gave me a sidelong glance to see if I had heard that. I nodded. \n\n\"It was kind of short notice, I was using the cabin to store some parts - had to tarp them on the deck.\" \n\nEx fixed me with her gunmetal grey stare. \"So what's your plan\" \n\nI shrugged \"Don't really have one - just showing her this end of the beach for now. I have a couple jobs to do and some work to do on the boat. I figured I'd show her this place so if she gets bored while I am out, she will have a place to hang out.\" \n\nThe unspoken part of that was that it was a place where she wouldn't be treated like a hooker. \n\nEx didn't say anything at the time, but caught me at the bar when I went to get a couple more cups of coffee. \n\n\"Her own cabin?\" \n\n\"It's just a couple weeks - I'll move stuff back in if I haven't used it. May have the hold done by then anyway.\" \n\n\"Look, I know the deal with 'Bobert' and ... Zascha. When he loans her out, it isn't for her to sleep in a spare cabin. You afraid of catching something?\" \n\nI shook my head \"I don't know the whole story, but I won't be yet another asshole treating her like shit. She's a great girl and she should be living a better life. He just flat offered her to me for two weeks last night with no warning because he was going out of town. I figured she could use a break.\" \n\nEx stared at me, searching my face, then finally, \"Don't fuck this up.\" \n\nWhen we got back to the table, Ex engaged Zascha more directly and quickly discovered that she didn't have any clothes for the two weeks other than what she was wearing. Before I could even say anything, Ex spirited her away, saying she'd get her back to my boat by dinner time. \n\nI took the rest of the day to get the repair jobs done; when I got back to the boat, Zascha was there, looking radiant. She was cleaning up the galley, wearing blue shorts and a t-shirt. Her hair was just tied back in a ponytail and she was humming tunelessly, but happily. \n\nAs soon as I stepped in, she smiled brightly and immediately began talking about going with Ex. They'd picked out some clothes and talked and walked for a long time. The beach clothes on the strip weren't exactly expensive - typical tourist stuff - and Ex had covered it, telling her not to worry. Still, she did a little bit. Ex had made it clear that we were expected to be at The Shack for dinner to eat with her and Monster. I wasn't really concerned with Ex, but the idea of crossing Monster gave me pause. He was always distantly friendly, but I had the same feeling around him that I got when mako sharks were in the water with me. \n\nIn any case, we had to eat. So that evening, I put on a clean-ish shirt and we headed over. It was the most social evening I'd had in a very long time - and I didn't' drink much at all. I felt like if I did, I'd disappoint Zascha. We listened to music, talked and generally had a great time. Monster was a better conversationalist than I expected and even seemed to speak some Russian. When he glanced my way, though, I felt my spine crawl. \n\nWalking back to the boat across the beach was wonderful. Zascha gave me an almost tearfully grateful look when she went into her cabin. \n\nI vowed these would be the best weeks of her life. \n\nAnd worked hard at it every day. She spent time with Ex, but she also helped me on the boat - on one long day we even re-finished the entire deck. It absolutely glowed. We grilled on the beach and ate at the Shack. She was a favorite at The Shack in just a couple days - like a living ray of sunshine. She was older than she looked - almost 30 years, and she had apparently studied at a university, although she always kept her life details vague. \n\nI didn't have to see that broken look or impassive mask the entire time. Three days before Bobert was due back, Ex handed me a couple tickets. \n\n\"The Governor's Ball - dinner and dancing the day after tomorrow. We ended up with extra tickets, so maybe you and Zascha could go?\" \n\nI stared at the tickets. They're a rare and sought after commodity here. And you don't just \"end up with a couple extra tickets.\" \n\n\"I really don't have...\" \n\nShe cut me off \"Monster has an extra suit - you're about the same size. And I have a couple dresses Zascha could wear.\" \n\nThat pretty much killed my argument right there. I nodded. Then asked why. \n\nFor just a second I think her eyes teared up, but it stopped instantly. \"Because I had something wonderful once and I lost it forever.\" \n\nShe turned sharply and walked away. \n\nI told Zascha about the invitation and she practically exploded in joy. The next day she spent hours picking out a dress with Ex. When she came back to the boat she had a beautiful light blue dress. \n\nAnd a pair of scissors. \n\n\"You must look your best.\" \n\nI grumbled, but within an hour, my hair was short and my beard was trimmed. I barely recognized the face in the mirror. The grimy warf rat was gone, replaced by a man I hadn't seen in years. \n\nZascha was unreal - she applied just enough makeup to enhance her looks, and the blue gown set off her cornflower blue eyes. An Angel come to earth, ethereal and unbelievable. ",
        "The ball was obviously a fantasy come true for Zascha. The Colonial mansion with its tropical d\u00e9cor and plush furnishings was the perfect setting - like something out of a storybook. She clung to my arm as we entered. Photos were taken, names announced, just like in the movies. I saw Monster and Ex gliding over the dance floor - I was a bit rustier than they were, but Zascha was an adept dancer - graceful and fluid. She could have made a broom look good. I got a mix of envious and confused looks. While I was a fixture on the docks, I was virtually unrecognizable without my shaggy beard and long hair. As for Zascha, Bobert had very deliberately steered clear of this level of society. We ended up seated next to consular officers, some of whom made strong effort to pry Zascha from me. But while they were a bit younger than I, Zascha refused to relinquish her grip on my arm. \n\nWe stayed until the last song played then we practically floated back to the boat - we even stopped for one final, barefoot dance on the beach under the full moon, to the sound of the waves. \n\nThat night there was a gentle knock on my cabin door. Zascha slipped in, almost silently. In the moonlight form the porthole,, I could see she wasn't wearing anything at all. \n\n\"Zascha, you don't have to do this for me.\" \n\nShe giggled softly \"Shhhhh. I am doing this for me.\" \n\nShe had the softest, warmest lips. What started with gentleness quickly built to a desperate urgency for both of us. There were no crazy positions. No dramatic acrobatics. Not that the bed in the cabin would have been big enough for that. But we used every inch of that bed. We drifted off to sleep clinging together. \n\nShe was gone the next morning. Her new clothes neatly packed into a plastic bag, sitting on a shelf, as if waiting for her to return. \n\nThat evening started as a horror for me. I saw her and Bobert at The Reef. As I walked by, she cringed away from me. My heart stopped beating at all. Stone frozen. \n\nBobert caught it and gave a foul grin. \n\n\"Taught her a lesson or two? Good for you. She needs to know her place.\" \n\nI wanted to beat him to death right there, I think I would have. But just at that instance, I caught a look from Zascha behind him - and she sent me a sly wink. \n\nI realized why she did it of course. If Bobert realized how much we'd connected, he would never have tolerated me around them. But with him thinking I made her uncomfortable, he went out of his way to keep me around. \n\nFor the next two months, things were the same as they'd been before; except that my heart broke every time I saw Bobert with Zascha. \n\nMy hatred for him was building - I just couldn't understand why she would stay with him. Every time I ran into them, it hurt. I almost stopped going out at all. I couldn't go back to The Shack, not after the first time someone asked if I was going to bring Zascha back. \n\nBut if I quit going out, I felt like I'd be abandoning Zascha. \n\nIt was like that sore tooth you can't leave alone- you know it's going to hurt, but you just can't help it. I don't know how long I could have stood it before I fled or killed Bobert. \n\nBefore I snapped, everything skewed sideways. \n\nI was staring at a bottle of rum just at sunset, after returning from a long rebuild, when I heard an odd sound. Somebody was trying to start Bobert's boat engine. Someone who obviously did not know what they were doing. It sounded like they hadn't turned on the fuel. Cranking and cranking, but not starting. \n\nBobert was an asshole, but he knew how to start a boat, and so did Zascha. \n\nI grabbed a fish billy, my boat knife, and slipped out of my boat and across to theirs. The stairs were up, but the boat was still tied up on one end. If they did manage to get it started they would have serious problems. Idiots. I jumped from the dock and pulled myself over the gunnel. If someone was stealing the boat, my price for helping Bobert would be Zascha's freedom. \n\nI slid across the mahogany decking and down the stairs. I could hear the murmer of voices down in the engine room as I turned into the main cabin. \n\nAnd froze. \n\nBobert wasn't going to be cutting any deals, now or ever again. He was wired to the closet door. I very carefully did not focus on the red ruin that used to be a man. I nearly slipped in the tacky red tide on the floor. \n\nMy gorge rose into my throat as much from fear for Zascha as from nausea. \n\nA low voice from the next cabin caught my attention - it was deep, growling and vicious. I followed it with club raised. A huge dark haired man with a collage of tattoos on his back was dragging Zascha, clothes shredded, and was forcing her onto the bed. Her impassive mask was in place, cornflower blue eyes mostly closed. He was uttering in what I assumed was Russian. I have no idea what he was saying, but it was hateful and dark. \n\nI didn't stop moving, arcing my club down just behind his ear with every ounce of strength I had. I felt his skull give. He slumped over and I pulled him off of her. Her face was bruised, eyes almost swollen shut and her lovely lips were split and bleeding. \n\nAs I slid him to the floor, her eyes opened and she saw me. The mask fell away as I pulled her free and she clung to me for a long second. \n\nShe whispered into my ear \"There are three more, they have guns. We have to run.\" \n\nAnd we did, not stopping to grab anything. \n\nMy boat was too close - the first place they'd look - so we set off across the beach toward The Shack. We were over half way there when I looked back and saw the three figures racing across the starlit beach after us. \n\nI practically threw her over the seawall and we lurched into The Shack. The place was pretty crowded and everyone stared at us; Zascha was damn near naked, battered and bloody. I was shirtless and covered in blood as well. They were stunned. Except Monster who simply glanced over his shoulder at us, registered our arrival and went back to sipping his drink. \n\nI dragged Zascha through the room toward the bar and Pogo. Maybe I could hide her there. \n\n\"They're right behind us - they killed Bobert.\" \n\nPogo looked past me \"And they have guns.\" \n\nHe was eerily calm. \n\nI spun around to face the entrance. Three short-haired men, holding handguns, had followed us right in. They had caught up a lot faster than I thought. \n\nI shoved Zascha behind me as they walked toward us, grinning - the one in the lead covering me and Zascha while the others kept an eye on the rest of the bar. Everyone was watching them intently. Except Monster who sat with his back to them, practically next to us, facing Ex. He was just studying his drink meditatively. \n\n\"We're just here for the whore and the asshole who killed Mitri\" \n\nHe had a thick, almost movie-villain thick, Russian accent. \n\nOne of the men noticed Frank Rotuma and settled his gun at him - police uniforms are police uniforms everywhere. But Frank was never armed, and he held his hands up, fingers spread. \n\nI didn't move as the grinning Russian came closer. \n\nFrank looked up at the asshole that was centered on him. \n\nHe spoke in a measured tone, as if the words were getting heavier as he said them. \n\nAs if he were pronouncing a death sentence. \n\n\"Don't worry about me, boys. I'm off duty for the next eight hours.\" \n\nI could see part of Ex's face. A very small, icy smile appeared. \n\nIn a hushed, cold, tone she whispered \"Monster\" \n\nI've seen death - guys on the docks cut in half by cables or crushed by falling cargo. I stopped to help at a bus accident once. It was horrible and chaotic. \n\nThis was different. \n\nI could see Monster's contemplative expression change and his mask fall away. An utterly emotionless, remorseless, Thing sat there. A horrible parody of a human. \n\nHe spun out of his chair, and in one graceless, liquid, effortless motion, he plucked the gun from the Russian's hand, tucked the gun barrel into his throat, pointed down to his heart, and pulled the trigger. \n\nThe other two were dead before they even registered the muffled thud as a shot. Monster simply stepped past the falling body and put a shot in the back of each one's neck, with the same peculiar downward angle. \n\nAs the last body fell, I caught a glimpse of Ex's face. A shining, bitter, pride was visible for a moment. \n\nMonster's face remained expressionless as he ejected the clip and cleared the gun before dropping it on the last body. \n\nHe spoke one word in a sepulchral tone. \"Clear.\" \n\nI desperately didn't want to know what he was thinking, and for one chilling second I wondered what he actually saw through that clouded eye. \n\nThen I felt Zascha'a hands gripping me from behind. I turned and collected her into my arms. \n\nThe Shack was utterly silent for a moment. \n\nLoud Howard spoke. \"Christ, Sergeant, if I'd have known you were going to take your time like that, I'd have fixed myself a cup of coffee. Almost fell asleep waiting for you.\" \n\nHis voice carried a ring of authority I'd never heard before. \n\nMonster responded in his usual friendly voice, a voice I now knew was an act. \"All due apologies Colonel. Had to wait until they closed up a bit to avoid making a mess. Didn't want to be banned from The Shack.\" \n\nThat explained the odd angle of the shots - he was trying not to make a mess. \n\nEx pivoted out of her seat and began working to pry Zascha away from me, scanning her injuries. \n\n\"We need a real exam, but she's in better shape than I thought.\" \n\nShe looked me over. \n\n\"No injuries on this one.\" \n\nPogo reached under the bar and pulled out a logo T-shirt and handed it to me to put on Zascha. \n\nAs soon as she pulled it on, she looked at me pleading. \"My baby. My Kisa.\" \n\nShe explained as quickly as she could. Bobert had held her daughter at his house on their tiny island with a housekeeper and a security guard. That was why Zascha had never resisted him, why she'd never left. She did everything she had to do to save her baby. \n\nFrank, grim faced and angry looked at us. \"I'm still off duty, but I have a visit to make to that island.\" \n\nEx spoke up. \"We'll come along.\" \n\nSo I took my boat out for the first time in a year and a half; she seemed to understand our urgency and ran like a dream. Frank knew which of the small islands was Bobert's and found it on the charts. \n\nOn the boat ride over, Zascha talked. Her husband had been a police officer in Saint Petersburg who had crossed the local branch of the Russian mafia. He had been murdered and she'd been kidnapped and shipped off as part of a human trafficking deal. She was seven months pregnant at the time, not the usual target, but her husband had really angered them. She was basically sold to Bobert. Or given as part of a trade, she wasn't sure of the details. Despite everything, Bobert had let her carry her baby to term. Because Bobert realized he could use the baby to control her completely. And so began her descent into a deeper hell than she was already in. She was allowed two weeks with her baby every month, but she had to be and do whatever Bobert wanted in exchange. \n\nFrom what she'd overheard, the killers had come because Bobert had failed to deliver on a contract. They were the same people who had delivered her to him in the first place. It's a dangerous world and gun running is a risky business. \n\nThere was no resistance at the house - the housekeeper and security guard took one look at Frank and Monster and handed the two year old girl over with no argument. She was cute as a button and had her mother's cornflower blue eyes and golden hair. \n\nZascha scooped up Kisa and began to cry. It was the only time in all of this that I'd seen her shed a single real tear. With all the cruelty, abuse, and death, she'd never cried. Now her tears came in waves. I just stood there until Ex gave me a gentle push and I stumbled toward them. Zascha's tear streaked gaze settled on me and she was instantly in my arms with her baby. \n\nBy the time we got back to The Shack as the sun was coming up, I was carrying the Kisa, and Zascha was holding my arm with an iron grip. \n\nInterestingly, the bodies were gone and Loud Howard and Pogo had just returned from a sudden fishing trip to the Deeps. Later we found the bodies, blood, bedding and mattresses were gone from Bobert's boat as well. \n\nWe couldn't be certain how much the housekeeper and guard really knew, but it didn't look like they knew much. Frank gave them 48 hours to be out of the islands forever. But they were looking at Monster when they agreed. \n\nZascha refused to leave my side. \n\nSince Bobert had actually filed a marriage certificate, she now owned the boat and the little island. She promptly sold both. We were married pretty quickly - I tried to convince her to get a pre-nup, after all, she was pretty wealthy now, but she laughed in my face. She said I was too old to go out searching for a different woman, and I'd just have to live with her forever. \n\nAs if anyone could compete. \n\nWe have a small on-island house and a run a small fishing charter with three boats. Kisa is growing like a weed. Her little sister, Lily, is just starting to walk. Zascha insisted on the name. \n\nThrough all the hell Zascha went through, through all the humiliation and cruelty, Zascha's heart remained untouched. Because she was fighting for her daughter. She knew she could suffer any pain, any misery, for her daughter's sake. \n\nFor her daughter, she could be Shameless. \n\nHer only moment of doubt had been when I accepted Bobert's offer to have her for two weeks, because in her own way she'd grown to trust me. \n\nAs broken and dysfunctional, as I was, I managed to be a better person for her. I ended up becoming the person she needed me to be. \n\nEveryone here has to have a name, but people don't call her Shameless anymore. \n\nThey just call her what she so obviously is. \n\nThey call her Angel. \n\nPost Production Comments: This was initially much darker. And, at least if I read it right, was kicked back for that reason. Rightfully so, I'll admit. I really, really didn't like Bobert and his end was much more graphic. And his mistreatment of Zascha was much worse. I think this version balances that much better without losing the impact."
    ],
    "authorname": "Todd172",
    "tags": [
        "reluctance",
        "blackmail",
        "romantic",
        "islands"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/shameless-11"
}