{
    "title": "Busy Fingers Ch. 04",
    "pages": [
        "It seemed an awful long time before Monday came around again. I was so looking forward to another randy time with Hayley that I'd been walking around all weekend with damp underwear. \n\nI must explain that Hayley and I were not actually lesbian lovers; we just met each Monday to masturbate together. I know that sounds a bit crass, but the thrill of bringing yourself off with another person there just has to be experienced to be believed. It's so much more fun than a solo session, and it doesn't half expand your horizons. To give you an example, I'd never used a vibrator until Hayley introduced me to one, and now I love the feel of that plastic torpedo inside me. So you can understand that I was in a high state of readiness when I knocked on her door.\n\nShe answered the door with a more serious face than last time and when she led the way through to the lounge this time I saw that she'd opened a bottle of wine, which was a little unexpected. She was also more formally dressed than usual in a lemon coloured blouse and a white skirt. I wondered if anything was the matter, but I took the offered glass and sat down on our usual sofa.\n\n\"There are a couple of things I need to ask you.\" She began rather ominously.\n\n\"Go on.\" I said, wondering what she had in mind.\n\n\"Well, first of all, how far do you want us to go together?\"\n\nI recognised that the word 'together' was the important one there. She was obviously a little anxious that we shouldn't overstep the mark and do something one or the other of us might regret later.\n\n\"Until one of us says stop.\" I told her.\n\n\"And how far are you from saying stop?\"\n\n\"Further than I ever thought I'd be.\" I answered. \"Look, if you're asking am I sorry about anything we've done together so far, the answer is absolutely no, and if you're asking if I've reached my limit, the answer is a big fat no to that as well. To be honest I don't know where my limit is anymore, but I expect I'll find it if we ever get there.\" \n\nShe took a deep swallow of wine and then asked the question she was building up to.\n\n\"How would you feel if we did things to each other? You know, I mean making each other come instead of just ourselves?\"\n\nWe'd been getting far less inhibited each time we met and I'd seen us getting closer and closer to that happening, in fact, after sharing a double ended dildo I'd accepted that in point of fact we'd already reached that stage. I still didn't fancy women, but I did fancy some more new experiences. \n\n\"I think I'd like it.\" I told her. \"I'm not turning into a lesbian though!\"\n\n\"I know that.\" She agreed with a smile. Then her face went solemn again.\n\n\"I need to ask you something else as well.\"\n\nThis sounded a bit more serious.\n\n\"Go on.\"\n\n\"How would you feel about some other girls joining in?\" \n\nThat was a bombshell I hadn't expected, and I was shocked. \"Hold on Hayley, I don't think I'm up for that. How on earth did all this come about?\" \"I don't mean today, but maybe another time.\" She added hastily, going on to explain. \"Let me tell you what happened. I was talking to three friends at the tennis club and one of them happened to mention about feeling horny after sport, but not being able to do anything about it. Anyway, that led to me telling them about us - but don't worry, I didn't say who you were or anything like that; I just said me and a friend. But then one thing led to another and it ended with them asking if they could join us, and I said I'd ask you.\"\n\nI sat staring at my wineglass for what seemed like ages before I could even begin get my head around it.\n\n\"And you'd like them to?\"\n\n\"Yes, actually, I would. They're nice girls, all in their twenties, all good looking, and all up for a laugh. What do you say?\"\n\nI wasn't too happy about the idea. Yes, it sounded fine and very erotic to have a load of naked women all playing in front of each other, but I'd got used to it being Hayley and me, and I suppose I didn't really want to share.\n\n\"I'll have to think about that one, can I tell you later?\"\n\n\"Of course. We'll talk again after we've had our fun, yes?\"\n\n\"Yes, and that's a hint to get started, is it?\" I smiled, relieved to push the subject of others joining in to the back of my mind.\n\n\"A little one.\" She giggled before continuing. \"But let's be on the bed together this time, you don't mind, do you?\"\n\nWhy would I mind? I'd never actually seen Hayley's bedroom, but as soon as I got there I knew why she'd moved us. Across the wall at the end of the bed was a long fitted wardrobe, with mirrored doors. Anything that happened on that bed could be seen in the mirrors. I couldn't prevent a smile of anticipation.\n\nThe last time we'd met we'd undressed each other, and I could see by the way that she was waiting for me that Hayley wanted to do the same this time, and I wasn't going to argue with that.\n\n\"You first this time.\" I told her.\n\nShe nodded and came forward with her hands loose by her sides, kicking her shoes off as she came. The buttons on her blouse were tiny and I felt all fingers and thumbs as I undid them, although I think that was partly down to horny anticipation. The obvious suggestion of soft breasts unencumbered by a bra beneath the silk of her blouse did quite a bit too. I couldn't wait to get her undressed and I was in so much of a hurry that I almost forgot the buttons at her cuffs. She was smiling at my eagerness.\n\n\"You're not usually this reluctant.\" She teased me.\n\n\"And you're not usually dressed this sexily.\" I replied.\n\nThe blouse did give way in the end and I pushed it gently from her shoulders to let it slide down her arms and end in a bundle on the floor. We made no attempt to pick it up; in fact I don't think either of us took our eyes of each other's face until I dropped to one knee to remove her skirt.\n\nThe little catch and zip at the side of her skirt were soon undone and the skirt joined her blouse, revealing her lovely slim legs and tiny white panties. God, but she looked beautiful. Hayley is one of those petite women who, as they reach their thirties, lose their girlishness but not the cheekiness that goes with it, so that they go through their adult life looking almost like gorgeous little pixies, with a very trim and toned body topped by finely moulded features and a naturally naughty smile. The secretary glasses she often wears and her cloud of blonde hair somehow add to her ethereal quality too.\n\nI reached out again to guide the panties down her legs, and this time I will openly admit that I consciously let my fingers trail along in contact with her skin as I pulled them down, and I'm sure she knew it. \n\nShe rested one hand on my shoulder as she lifted each foot in turn, and then her panties were on the same pile as her blouse and skirt and she was naked.\n\nStill kneeling before her I took a hold of her hips and simply gazed at her, my face about level with her navel and my eyes looking her up and down, but just like before, mostly at the top of her shaven cleft. I don't know what thoughts were going through Hayley's mind, but she made no attempt to stop me from staring and in fact she moved her feet a little way apart as if in invitation. I was tempted, I cannot deny it, but I managed to resist and I finally stood up to gaze once more into her smiling blue eyes.\n\nMy blouse gave her no trouble in comparison and she soon had it gliding down my arms on its way to the clothing pile gathering beside us, but then I was wearing a bra on my rather fuller breasts. My slacks rapidly followed and I was left in just my underwear.\n\nAs soon as my slacks were lying with the rest of our clothing she stood up, leaving my panties for the moment, and put her hands on my shoulders to turn me around to face away from her. This, I assumed, was so that she could undo my bra, and so it was, but this is where things went off at a tangent. Hayley has the happy knack of always seeming to be one step ahead of me, so that she always catches me on the wrong foot and I always end up thinking 'why didn't I think of that?' I'm getting used to just letting her have her way, because I always seem to enjoy the results.\n\nShe unhooked my bra and pushed it away from my shoulders, letting me hang my arms forward so that it could fall to the floor, but then, before I react she had moved in closer to me and slipped her arms around me from behind, cupping my breasts in her palms.\n\nThis was the first time I'd been touched by a woman in such a deliberately sexual way, and although I was kind of expecting it, it was still a shock - but one hell of a thrill. To feel her lift the weight of my breasts and feel her begin to massage the soft flesh made me gasp out loud, purely from the adrenalin it generated. Yes, I know she touched my pussy with the side of her hand when she was using that double dildo on us both, but that was incidental rather than either accidental or purposeful, and although it was nice, it held no intrinsic thrill. This touch did, especially as I could feel the hard little nubs of her nipples against my back. \n\n\"You have lovely boobs.\" She told me, whispering quietly in my ear.\n\n\"And you have lovely hands.\" I whispered back, reaching backwards to hold her hips and pull her closer.\n\nShe gave my boobs a quick squeeze in acknowledgement, and then holding them firmly she steered me around with them, turning me through some ninety degrees until we were both facing the mirrored doors, Hayley peeking over my shoulder to see us both in the mirror.\n\nThe advantage of the mirror was immediately obvious, I could see myself being played with and watch her face as she massaged and kneaded my breasts. She could also see me, and see from my expression how I was enjoying her attentions. It added so much to my enjoyment of the moment to see her smile with pleasure as she touched my breasts.\n\nShe played with me like that for a minute or two, while I leaned back towards her in blissful submission, each of us watching the other. But then she pulled herself closer, wrapping her left arm around me to clutch my right breast and hold me against her, leaving her right hand free to roam over the front of my body. \n\nMy hands were still holding her hips and I could feel her front pressed close against my back, her nipples digging into my skin, hard and hot, while I looked at her hand wandering gently over my abdomen, stroking and caressing, sometimes hardly touching but always working its way gradually lower. I knew where she was headed, the thought was beautiful and I could feel my pussy responding, lubricating as her touch aroused me. I watched her in the mirror, seeing her hand circling, dipping lower but not quite going where it wanted to. I could hear her breathing in my ear, quick and shallow, reflecting her nervousness. She wanted to feel inside my panties, to touch me all over, but she didn't quite so far have the courage, even though we had agreed and she must have known how I wanted her. I sighed deliberately, trying to let her know of my agreement, of my readiness.\n\nI felt a tug at the elastic of my panties, her fingertips had briefly dipped under it as she circled past. I sighed again, tightening my grip on her hips, trying all the time to give unspoken permission. Her hand came round again and I watched in the mirror as it reached my waistband, stopped, moved on a little and then came back, this time to fumble and find away its way in. I saw her fingers disappear under the pale blue cotton and watched as her hand worked its way down, past the inconvenience of the elastic. Then I felt her fingers delve into the wiry curls of my pubes and I groaned a genuine groan of pure surrender.\n\n\"Oh, Sue.\"\n\nShe didn't need to say anymore, the subtle quaver in her breathless voice said it all, telling me how aroused she was, how much she had wanted this moment. I 'mmm'ed softly in understanding and moved my feet a little way apart, an explicit invitation to her exploring fingers. She pushed further down, trying to reach me but held back by the tightness of my underwear, and able only to find the very top of my slit with the tip of one finger. She pushed again, but her movement was restricted by the cotton covering and she still couldn't make her way in.\n\n\"Take them off.\" I told her urgently, understanding somehow that she was scared to take her hand away in case it broke the spell. \n\nShe dropped to her knees and pulled at my panties, almost ripping them in her haste to get them removed, and right then I wouldn't have minded if she had simply torn the damn things from my body, the feel of her hand exploring me had made me too horny to care. \n\nShe turned me around by the hips, still kneeling before me, and gazed directly at my pubes just as I'd gazed at her minutes before. For a moment nothing happened, she just stared at me, but then she leaned forward and planted a quick little kiss just above my bikini line, so close that I felt her chin brush against my pubes, making me gasp with eager shock and instinctive alarm.\n\n\"I just wanted to do that.\" She explained shortly as she climbed to her feet.\n\nWe stood facing each other, sideways to the mirrors now, but I started to turn around, anxious to return to where we'd been. Hayley immediately put out her arms to stop me and draw me into a close embrace, pushing her naked body hard against mine, squashing our breasts between us.\n\nThis embrace was different to any before. The last time we'd embraced nude it had been almost platonic, but this time there was a definitely sexual undertone to it, the feel of body on body was arousing, and a foretaste of what was to come. I could feel Hayley moving slightly, just perceptibly rubbing up against me, and her breathing was quick and excited on my shoulder. I pulled her closer, pushing myself onto her, feeling her movements more clearly, my excitement growing.\n\n\"I want to touch you.\" Her voice was tiny, as if even now she didn't have the confidence to take that vital step.\n\n\"Then touch me.\" I told her, breathless with anticipation. \n\nHer hand came from around my back, sliding across my side towards my front, and I eased away from her just a little, just enough for her hand to get between us. I turned my head, looking once more at our images in the mirror doors, watching her hand travel in small apprehensive movements over my abdomen, her fingers pointing down towards their target, the sight as equally erotic as the feel. A pause, then another little movement and her fingers rested among my pubic hair, but this time without the restraint of my underwear. I sucked in a deep thankful breath and spread my knees, taking up an awkward legs bent position to encourage her exploration.\n\n\"Oh Sue.\" She said again, and then her hand slipped down to cup my mons, her longest fingers reaching into the top of my cleft.\n\nFor me the sensation of being touched like that was electric, I stared at the mirror where I could see her hand between us, see myself clutching Hayley tight against me, my own fingers digging hard into her back from my need. Hayley turned her head to look in the mirror with me, her cheek alongside mine, two excited faces staring at her hand as it inched its way a little further between my legs. \n\n\"Is that nice?\" She asked in an awed whisper.\n\n\"It's wonderful.\" I assured her, feeling her longest finger resting unknowingly on my clit. \"I want more.\"\n\nI saw her smile in the mirror and felt her face crinkle against my cheek, and her hand delved a little deeper, a finger sliding between my labia into my wetness.\n\n\"Play with me.\" \n\nShe smiled again at my short instruction, but her finger was joined by another to move up and down inside my slit. I clung to her, moaning quietly, watching the actions of her wrist as she played with my pussy. I could hear her breathing heavily next to me, her arousal at playing with another woman transmitted to me by the excited quivering of her whole body. \n\nI tried to spread my legs a little further, wanting her to have full access, but I couldn't maintain the position and so I finally placed one foot on the bed beside us, standing on the other with my legs now wide apart to persuade her to touch me anywhere she wanted. I didn't care what she did to me anymore; I just wanted this highly erotic situation to go as far as possible. I closed my eyes to absorb the wonderful sensation, feeling her holding me tightly to her with one hand while the other explored between my legs.\n\nHer hand moved back, cupping my pubes again with two long fingers probing my slit, searching for my clit. I called out without making sense, inarticulate noises trying to portray my delight when they found it and the first electric jolt shot through me. I pushed against her hand automatically, wanting more, wanting her to rub me, play with my clit, anything.\n\nShe trapped my clit between her fingers, pulling at it even as she rubbed up and down, making me gasp out loud and cling to her that little bit tighter. She rubbed me, teased me, tugged at me, all the time her fingers moving rapidly up and down or side to side, taking me closer to the point where she could bring me off. Already I could feel the beginnings of an orgasm building. I looked again into the mirror, seeing the joy and the concentration on her face and knowing from it that she really was trying to make me cum.\n\nI didn't mind, I wanted to cum, my first time at the hands of a woman. I moaned my enjoyment, feeling my orgasm building rapidly with every thrust and stroke of her fingers, my clit swollen and abused, but loving every second. I was soon on the very edge of cumming.\n\n\"You're going to make me cum.\" I warned her.\n\n\"Good, that's I want to do.\" She answered, confirming my thoughts.\n\nMy orgasm was short and explosively intense. Hayley stopped playing and simply rubbed her fingertips as fast as she could back and forth over my clit, and that did it for me. Pleasure rolled out through me like the shock wave from a blast, filling me with the intense sensations of nerves overloaded with pleasure and leaving me clinging to Hayley for support, my strength totally destroyed and my body shaking and trembling ecstatically. It was so sudden and so strong that I could only grit my teeth and hang on, vocalising my pleasure in a long drawn out inarticulate groan.\n\n\"My God!\" I gasped as it subsided, unable to say anything more meaningful.\n\nMy foot slid from the bed almost of its own accord and I tottered, literally tottered, to sit down, my chest heaving madly and my legs like rubber. I looked up at Hayley in mute gratitude, just nodding my thanks. She stood over me as I recovered my breath, gazing down with a silly grin all over her face, and then she put out her hand for me to take.\n\n\"Come on, let's lie down together. You look as though you need to, and so do I.\"\n\nAt the time I couldn't imagine why Hayley needed to lie down, she hadn't just had her muscles liquefied by an almighty orgasm, but I allowed myself to be pulled to my unwilling feet and steered to where we could lie side by side on the bed properly. I reclined back against the headboard and instinctively put out my arm to hold her as she settled down beside me, pulling her into me to snuggle up alongside, her head on my shoulder.\n\n\"My God, Hayley.\" I whispered after a while. \"You've just given me the best climax I've had for years.\"\n\nShe cocked her head to one side a little to look up at me.\n\n\"Good. I wanted to.\" She grinned. \"Now you don't mind if I have mine do you.\"\n\nJust for second my sexually addled brain wondered what she meant, but then she spread her legs out and put her hand between them, searching for her clitoris.\n\n\"I want to do that.\" I protested. \"It's only fair if I do it for you. Just give me a minute.\"\n\n\"You get your breath back, we've got hours yet. Right now I want you to watch me in the mirror.\"\n\nI'd forgotten about the mirrored doors for a moment, but when I looked I saw the gorgeous sight of Hayley, legs open and knees bent, with two fingers holding her pussy open for the middle one to play with her clit. She glanced at me in the mirror to make sure I was watching and then concentrated on giving herself pleasure.",
        "\"It won't take me long.\" She whispered at my reflection. \"I'm so damn hot.\"\n\nI could understand why, but I was surprised to find that seeing her play was turning me back on as well.\n\n\"You felt lovely, Sue.\" She told me, her voice tightening as she played with herself. \"I never thought I'd ever touch another woman, but I'm glad I did and I'm glad it was you.\"\n\nI gave her shoulder a little affectionate squeeze of thanks. \"And me.\"\n\n\"Did it feel good?\"\n\n\"Beautiful.\" I assured her, the memory stirring me just as it obviously was Hayley. \n\nI let my legs drift apart and reached down to touch my wet and rapidly recuperating pussy. In the mirror my hand played slowly and gently, fingers pressed lightly onto my labia with just my middle finger stroking around my still sensitive little button. But Hayley's hand was rubbing at her clit so fast and hard it was almost a blur. She groaned, her face carrying that look of faraway concentration of an approaching orgasm.\n\n\"I'm cumming, Sue. I'm cumming.\"\n\nShe screwed up her eyes, her breathing now sharp and rapid and her body twitching under the first little shocks of her imminent orgasm. I stared into the mirror, fascinated and hugely turned on, watching her bite her lips with the tension she was feeling, hearing little grunts and gasps and seeing her pelvis begin to dance madly. My own fingers were now playing a little quicker, led on by the urgency in Hayley's fingers.\n\nThen her back arched, lifting her pelvis clear of the bed as she rammed her fingers deep into herself, plunging them in and out as her orgasm washed over her. Her back dropped, only to lift again, jerking up and down in time to the waves of pleasure that ran through her shuddering frame. I held her shoulder, pulling her to me, trying to provide her with some sort of stability as her body bucked and tossed on the bed.\n\n\"My God.\" She gasped as it went over, and then giggled breathlessly to herself as she realised that she had repeated my exclamation.\n\nShe snuggled closer to me, threading her nearest leg under mine like we'd done before on her sofa to keep them open, leaving her hand resting limply over her pussy. I carried on playing gently with myself, the presence of Hayley nestled in close while I touched myself making it feel so much more erotic and so much more exciting. One happy side effect of being left handed is that I make a mirror image to Hayley.\n\n\"You know.\" She stated, still breathing heavily. \"That we're good together, don't you?\"\n\n\"I know.\" I told her, feeling happy.\n\n\"Just look at us.\" She indicated the mirror, spreading herself to display and touch her clit. \"Doesn't that look beautiful?\"\n\nI looked at our images, both of us with legs splayed open exposing clearly aroused wet and shining pussies, each of us playing lazily with our clits. And yes, it did look beautiful.\n\n\"Are you going to cum again?\" She asked me suddenly.\n\n\"I don't know. Maybe. You?\"\n\n\"I don't know either. I hope so.\" \n\nWe sprawled on the bed, quietly masturbating without any real urgency, just taking pleasure in watching each other, neither of us in any high state of arousal because of our recent orgasms, but taking an erotic pleasure in what we were doing. Then, as we played a thought came into my mind.\n\n\"This is what it would be like, isn't it?\" I asked, speaking without telling her what I was thinking about.\n\n\"What is?\" She looked curiously at my reflection.\n\n\"If there were other girls with us on your other sofas that is what we would see, isn't it. It would be like watching ourselves in that mirror.\"\n\nHayley blinked for a moment and then she understood. I was thinking about her idea of inviting more girls to play with us.\n\n\"Mmm.\" She looked at our reflections and liked the idea. \"That would be nice, don't you think?\"\n\n\"I think so too.\" I told her honestly. \"But I don't want to lose what we've built up between us.\"\n\n\"Nor me.\" She answered thoughtfully.\n\nI thought about it for a minute or so.\n\n\"I don't really want strange girls touching me, and I know this will sound silly but I think I'd get jealous if you touched them like you just did me.\"\n\n\"Ah, thank you, that's sweet.\" She smiled at me affectionately, and the subject was dropped again.\n\nIt did sound nice -- but was it going a little too far? I looked at our reflections again, watching our hands still playing gently with our pussies and trying to imagine it was other women I could see. The problem was that I could imagine it.\n\n\"I think I might cum again.\" I told her, feeling desire lifting its head once more.\n\n\"I think I might too.\" She glanced up at me with a little smile and stretched her legs even wider. \"How's that?\"\n\n\"Beautiful.\" I told her, gazing into the mirror where her fingers were now resting on her widely opened pussy.\n\nShe began to play again, her two fingers copying the circular movement that I was using on the tip of my clit. It did look good. Looking down I could see the top of her hand and her fingers moving, but when I looked across into the mirror I could see just what those fingers were doing. I'd loved to have been a little closer to see in more detail, but then I wouldn't also have been able to see my own fingers at work on my own clit, and it was seeing us both at the same time that made it so exciting. I knew just the sensations that Hayley was feeling, because that's what I felt as well.\n\nI think I could have gone on like that all day, just rubbing softly at the tip of my clit, with Hayley beside me doing just the same, and both of us making the occasional little pleasure sounds in our throats. But I could feel my enjoyment getting stronger as I became gradually more aroused.\n\n\"I am going to be able to cum again.\" I whispered, confirming my prediction..\n\n\"So am I, but not yet.\"\n\nWe sprawled on the bed side by side, half sitting and half lying with our backs against the headboard, my arm draped around her, her head against my shoulder and her free arm down between us, her hand absently stroking my hip. It was a lovely comfortable position from which to watch each other, and we just quietly and lazily played with ourselves, letting our excitement return little by little. \n\nI looked where Hayley's fingers were working, seeing her stroke her clit for a few seconds and then slide her hand along the length of her shaven pussy, the two longest fingers inside her outer lips, so that her slit was pushed open by her descending fingers and I could see that both were shining slick and wet from her juices.\n\nI looked quickly from hers to mine, to see if Hayley could tell that my pussy was also swollen and wet. I looked as sexy as she did and I could even see my clit standing proud and hard as my fingertips roamed over it. Now I let my fingers work their way along my cleft until they reached my vagina and hovered uncertainly at the entrance.\n\n\"Go on, do it.\" Her tight little voice whispered urgently.\n\nShe was watching me intently, waiting for me to push a finger up inside me so that she could see me fingering myself. I did it, letting my two fingers sink into my passage and groaning contentedly as I watched them disappear inside me, hoping that Hayley would follow my lead this time so that I could watch her as well.\n\n\"Now you.\" I prompted her.\n\nShe let out a sexy little sigh and slid her middle fingers down until they found her entrance and slipped easily inside.\n\n\"Like that?\" She asked.\n\nI looked at her pussy as her fingers began to slide in and out of her vagina, pushing in as deeply as she could reach.\n\n\"Yes, just like that. As far up as you can.\"\n\nI was doing exactly the same, pulling my fingers out until only the very tip remained inside me and then pushing them steadily back in, not fast, but slowly and forcefully, until I couldn't go in any deeper. My eyes were drawn from one pussy to the other as we played, watching what we were doing. It looked fantastically erotic and I could hear sexy wet sounds coming from both of us as we unhurriedly finger-fucked our own pussies. \n\nI glanced up at Hayley's face, wondering if she was watching us play, but she was gazing at my face, watching to see where I was looking. I smiled across at her reflection, wanting her to know how much I was enjoying seeing her.\n\n\"I think I might grow my pubes back.\" She announced suddenly. \"You look so damn sexy with a natural bush.\"\n\n\"No, don't!\" I exclaimed. \"Yours looks so nice I was thinking of shaving mine.\"\n\n\"Why?\" She asked, surprised.\n\nI took my hand away to let her see me more clearly. \n\n\"Because I look like a rabbit hole in a briar patch and you look so fucking cute, so sexy and smooth.\"\n\nHayley giggled at my description and then, looking intently into my face, she lifted her own fingers away.\n\n\"Then see if it feels as nice as you think it looks.\"\n\nI didn't want to stop playing with myself, but there was no way I could miss out on that invitation. I rolled onto my side, trapping her thigh between mine, propped myself on one elbow and reached out tentatively towards her, my heart suddenly racing at the thought of what I knew I was going to do. \n\nI reached further until my fingers rested on her stomach and both she and I breathed heavily with excited anticipation. The skin of her lower abdomen felt as good as it looked, beautifully firm and yet soft at the same time as I ran my fingertips over it. I looked into her face as my fingers crept lower, wanting to see her reaction when I finally reached my goal. She was gazing back at me, impatiently waiting for the first touch of my fingers on her pussy.\n\nI let my hand keep going steadily lower, not rushing, but not dawdling either, just savouring the moment, the lovely feel of her warm skin under my hand, until I suddenly reached my target and felt the very top of her cleft under my fingertip. She closed her eyes and exhaled contentedly, and only then did I realise that we had both been holding our breath, waiting for this moment.\n\nI looked back over my shoulder, deceived by the absence of pubic hair and slightly surprised at finding her pussy so abruptly. Her skin was so marvellously smooth that I hadn't even detected the slightest trace of her bikini line.\n\n\"My God, Hayley, you feel wonderful,\" I whispered, turning back to look into her eyes and letting my fingertips slide down either side to caress her shaven labia.\n\n\"That's my line,\" She whispered back, smiling.\n\nFor a minute or two I merely stroked her labia, running my fingers softly up and down each side from the top of her mons right down until they met again at her perineum, listening to her little happy noises and just absorbing the wonderful prospect of touching another woman properly for the very first time. \n\nAs far as Hayley knew I was deliberately taking things slowly to extract the most pleasure from it, but in reality I was trying to get the nerve to touch her more intimately. My instinctive nervousness was fighting a battle with my urges. I badly wanted to touch her clit, to play in her slit and feel her wetness on my fingers, and I very much wanted to push my fingers deep inside her, but it was such a difficult and irrevocable step to take.\n\nIn the end I compromised by cupping my hand, placing my palm firmly over her slit and letting the flat of my hand gently rub her entire pussy. Her pussy was open wide between her puffy labia, coating my fingers with the wetness of her juices, and I could feel the hard little pea of her clit against the ball of my hand as I rubbed up and down over her. She moaned a little and pushed back against my hand, encouraging me to go further.\n\nI pulled back a little, seeking her clit with my fingertips, wanting to pleasure her, to stroke and play with hers as I did with mine. I found it, a tiny sensitive bud at the very top of her cleft, firm and warm to my touch as I gently rubbed it.\n\n\"God, Sue, that's so good.\" \n\nI smiled down at her, pleased with myself. She smiled back and closed her eyes, gripping her breasts in her hands and yielding her pussy to my attentions.\n\nShe lay, tugging gently at her nipples and then digging her fingers into the firm flesh of her breasts, while I rubbed softly up and down over her clit, hearing her quiet little gasps and feeling the tiny involuntary jerks of her pelvis. It was beautiful and intimate to play with her like that. I was still very, very aroused, but that could wait. Right then I was taking as much pleasure from touching Hayley as she was.\n\nAs I played with her she became more and more aroused, in fact we both did, and I knew it was time to go that bit further. My fingers trailed from her clit down her pussy until they rested at her entrance. I looked down at her, wanting to push inside her, but still feeling that I needed her permission, her agreement to go that far. She opened her eyes and nodded her understanding.\n\n\"Yes please, Sue. Finger me if you want to. Do anything you want, anything, I don't care.\"\n\nMy two longest fingers went into her, sliding easily through her slippery wetness and entering her to full depth in one movement.\n\n\"Oh, Sue!\" \n\nShe pushed back, trying to take me deeper, her eyes locked onto mine.\n\n\"God, your fingers feel nice.\"\n\nI began to thrust them steadily in and out, enjoying being inside her very wet pussy, wriggling them inside her, exploring her, and mentally comparing the feel of her vagina to my own. I'm not sure which felt nicer, but the thrill I was getting from fingering her was much more exciting than doing it to myself. I'd never imagined that I would ever touch another woman like this, but it was making my own pussy throb with arousal and need. \n\nI curled my other fingers and shifted my position down slightly to give myself more room, and then began to drive into her more forcefully, intent on making Hayley come. She gasped and groaned as my fingers plunged in and out of her, squirming under my attentions, gripping and pulling her breasts so hard that her fingertips went pale, her mouth opening and closing as if her words wouldn't come.\n\n\"That's it, do it hard, as hard as you want. I love it hard.\" She gasped eventually.\n\nI smiled almost sadistically and finger fucked her as hard as I could, slamming my two fingers in and out of her, making her pussy squelch as her juices were pumped from her. This was something new for both of us and we were enjoying it fully.\n\n\"Oh my God, Sue.\" Her head was tossing from side to side. \"Keep doing that and I'm going to cum!\"\n\n\"Do it.\" I told her, ramming my fingers back into her. \n\nShe released one of her breasts and threaded her arm under me, grabbing at my shoulder, digging her fingers into my skin with the intensity of her arousal. I thrust my fingers hard up inside her, my thumb pushed against her clit, rubbing at it.\n\n\"Fuck, that's good.\" It wasn't often that I heard her swear.\n\nShe tried to spread her legs even wider for me, even though her thigh was still trapped between mine. I opened raised my upper leg a little to give her room and she immediately opened her legs wide, pushing the trapped one up between my thighs until it rammed against my pussy, making me gasp from the sudden thrill. Now the thrusts and movements of her pelvis against my fingers each translated into a wonderful touch of her thigh on my clit. \n\n\"I'm going to cum.\" It was more of a wail than a statement, a warning to hang on.\n\nI pushed my fingers into her as deep as I could and kept them there, wriggling them inside her and rubbing hard on her clit with my thumb.\n\n\"God, yes, nearly!\" She gasped, her pelvis beginning to dance on the bed. \"Don't stop. Whatever you do, don't stop!\"\n\nI had no intention of stopping, for one thing her leg rubbing at my clit was too nice for that, and in any case I wanted her to see her orgasm on my fingers.\n\n\"Yes, yes, yes!\" She was digging her nails into my shoulder with fierce strength.\n\nI massaged the ribbed roof of her vagina with my fingertips as I pumped into her, hoping to find her G-spot and intensify her orgasm. But I've no real idea if I found it, for Hayley was already on the brink of coming and one particularly hard thrust into her sent her over the edge.\n\n\"God, yes!\" She shouted suddenly. \"I'm there!\"\n\nShe carried on shouting out loud, but her words merged into one long cry of pleasure, a keening wail that came from deep in her throat as her muscles seemed to go into spasm, her body quivering and jerking from the waves of ecstasy that were rolling through it. I kept plunging my fingers into her, trying to ramp up her orgasm, wanting her first from me to be special, and smiling because I could see that it was. \n\nSlowly her climax subsided and her body stopped jerking under me, but she was still quivering as if from an electric shock and her skin was shining with perspiration. She gazed up at me, a tiny smile on her face, her tongue licking over her lips and her chest heaving. I gazed back, smiling affectionately as I waited for her to recover, my wet fingers now resting motionless at the top of her thigh.\n\nWe remained in a kind of post orgasmic tableau, unmoving and unspeaking, Hayley trying to gain enough breath to speak and myself simply coming to terms with what I had just done. It was quite a revelation that I could bring another woman to orgasm without the slightest regret or embarrassment, and even take pleasure in doing so. Perhaps I had a bit of a lesbian in me after all.\n\n\"Phew!\" Hayley breathed out expressively after a while. \"That was so damn good.\"\n\n\"I'm glad.\" I told her, wondering at the same time if I should extricate myself from our tangle of limbs and sort out my own needs.\n\n\"You realise, of course,\" She giggled, \"That this means war?\"\n\nI looked at her, baffled.\n\n\"On your back, woman.\" She instructed, pulling herself free and rolling onto her side to face me.\n\nI did as I was told.\n\n\"You may as vell surrender.\" She announced in a mock German accent. \"Ve haff vays of making you come!\"\n\nShe hooked her leg over mine, trapping my thigh as I had hers, and then reached out to place her hand teasingly at the top of my thigh. I spread my legs wide in encouragement, wanting her to play with my still throbbing pussy.\n\n\"I surrender.\" I told her.\n\nHer fingertips stroked mischievously along the very top of my leg, just very lightly stroking my pubic hair, while her palm ran over the soft skin at the top of my thigh, making me 'mmm' with anticipation. She looked down at me with a smile, but I could see lust in her face just as much as my own.\n\n\"You have no idea how much I want this, Sue.\" She spoke in a voice thick with need. \n\n\"Do it Hayley, whatever you want.\" I told her, meaning it. \"I want it too.\"\n\nShe nodded gratefully and then moved her hand, placing it flat between my legs and covering my cleft from top to bottom. Just for a few seconds it lay there, pressed against me, but then she began to massage and mould my pussy under her palm, her fingertips at my entrance and her palm over my clit. It felt beautiful, very, very sexy and very arousing. I couldn't resist pushing back up at her with a little growl of appreciation in my throat, even though I really wanted her fingers inside me.\n\n\"That's lovely.\" I whispered, gazing up into her lovely blue eyes.\n\n\"Sshh! Just enjoy.\" She whispered back. \"I'm going to.\"\n\nI closed my eyes.\n\n\"You're very wet.\" She told me suddenly. \"My hand's dripping.\"\n\n\"I'm not surprised; you're turning me on something fantastic.\"\n\nThat wasn't quite true, because I was already completely turned on and I couldn't get any hotter. I could feel my wetness on her palm, in fact I thought I could feel it running from me and down into my bottom. \n\nShe turned her head to look behind her at the mirrored doors, mirrors that were the reason for using the bed and mirrors that I'd forgotten all about. I followed her gaze to the reflection of her hand covering my pussy, the sight giving me a little shudder of excitement. Her fingers rested just over my entrance, making the shiny trail of juices seem to exude from their tips. It looked so damn hot, especially when her massaging hand dipped those same fingertips into my passage just slightly as she squeezed me in her palm. I wanted them right inside me.",
        "\"Push them up me.\" My words sounded crude even as I uttered them, but I didn't care.\n\n\"Sshh!\" She whispered, looking down and smiling. \"Soon.\"\n\nIt was incredible how our nerves and inhibitions had melted away.\n\nIt was odd, watching her play with me, highly erotic but a little disturbing, as if everything was happening to someone else. Seeing what she was doing while feeling the sensations at the same time was a bit like watching a porn movie, but with better special effects.\n\nGradually, as we both watched, her squeezing movements turned into deliberate strokes along the length of my pussy, sliding her palm over my slit between slickly shining labia, with her fingers arched back to prevent penetration. I was trying to push back, thrusting upwards at every stroke as far as my trapped leg would allow, unable to prevent myself and unable to keep back the quiet sighs of pure bliss that I knew I was making. \n\n\"You'll make me cum if you carry on like that.\" I told her, feeling the beginnings stir deep in my pelvis.\n\n\"That's all right, I don't mind.\" \n\nShe was gently mocking me, but I wasn't bothered about that - I just didn't want to miss out on anything she wanted to do to me.\n\nI couldn't take my eyes from the mirror, even when Hayley turned back to look down at me, watching my reactions to her hand on my pussy. It looked so good to see myself being played with by a woman's slender hand, rather than by the larger, clumsier digits belonging to my husband, Paul. The fire inside me began to burn brighter and my climax grew nearer.\n\n\"It's going to happen.\" I gasped, warning her that my orgasm was building.\n\nHer reaction was to rub me harder and faster, still making no attempt to push her fingers inside me, even though I raised my pelvis each time to try and persuade her to enter me.\n\n\"Finger me!\" \n\nI was getting desperate, I was almost there and I still hadn't felt her inside my vagina.\n\n\"Soon.\" She reiterated, frustrating me even more.\n\nMy impending orgasm was now like a volcano waiting to erupt, hot pressure inside my pelvis flowing steadily out across my body, building and building as her hand pushed hard against on my cleft, rubbing rapidly at my clit. \n\n\"I'm cumming!\" I told her, unable to hold it back anymore.\n\n\"Good.\" She whispered, and plunged two fingers deep into my passage just when my pelvis bucked mightily as the first intense wave of orgasmic pleasure burst through me. \n\nShe couldn't have timed it better. She thrust her fingers hard and deep inside me, forcing them in and wriggling them around as she did so, magnifying and intensifying every sensation. I cried out, loud and uninhibited, cursing her for taking me to the edge and thanking her for making it so good. My pelvis bucked, pushing my leg high between her thighs so that, even as I came, I was conscious that my thigh was pressed against Hayley's pussy, held there deliberately by her legs clamping together.\n\nI looked into the mirror as I came, watching her two fingers pistoning in and out of my hole, each inward thrust triggering another wave of pleasure, each outward movement followed by my pelvis attempting to keep her inside me. Seeing it in the mirror intensified the whole thing, watching my own pussy being invaded by Hayley's wonderful fingers made everything more real, more erotic, than I could have dreamed. If ever there were doubts about being together with a woman, they disappeared at that moment; she knew just what I had wanted, even better than I knew myself. \n\nAs my orgasm slowly subsided I lay back, closed my eyes and just surrendered to the absolute ecstasy that her fingers generated. Even when it was over, it wasn't quite finished, for little aftershocks of pleasure ran through me every time her fingers so mush as twitched inside me.\n\n\"Don't come out.\" I begged her, not ready yet for it to end.\n\n\"I won't.\" She assured me. \"But only if you take your claws out of my back.\"\n\nOnly then did I realise that I was still digging my nails into her flesh, the arm that I had earlier put affectionately around her having turned into a weapon seemingly intent on drawing blood. \n\n\"Sorry, I didn't mean to.\" I flattened my hand and stroked her back, running my fingers lazily up and down her spine while I lay and regained my breath.\n\nHayley still had her fingers deep inside my pussy, and after remaining still for a few minutes she began once more to thrust into me, but this time slowly and very gently. It felt wonderful, just what I wanted to keep me aroused and hovering on the brink of coming again. How she sensed my need I have no idea, but I'm glad she did because at last I could just relax and appreciate the sensation of Hayley's fingers moving inside me.\n\nMy thigh was still held firm between her legs and I became aware that she was very softly thrusting against it, rubbing her pussy gently on my leg as her fingers played with mine. I smiled to myself, happy that we were both getting pleasure from being together. Without opening my eyes I reached up with my other arm and drew her down into an embrace, pulling her half on top of me with both my arms around her and her cheek next to mine. I knew it would make it difficult for her to reach back between my legs, but I just wanted to hold her to me and make it possible for her to rub herself off on my thigh. I don't know why, I just wanted to feel her pussy getting wetter and spreading her juices on my skin. Just kinky I guess, but she was breathing deeply in my ear and I was sure she wanted it too.\n\nShe tried to keep her fingers inside me, but the reach was just too far and she settled for rubbing my clit. Equally stimulating, in fact probably even more so, but not quite as intimate as having her fingers inside me. Never mind, I knew that she would finger me again another day, probably lots of times, and I was content.\n\nThe feel of her pussy on my leg was lovely. My skin was becoming slippery with her wetness and I could feel her pussy lips slide up and down my legs as her arousal heightened and she began to rub herself against me more forcefully. I wasn't sure, but I believed I could even feel the tiny button of her clit pressed against me.\n\nI was being rather passive, letting her play with my clit and masturbate herself against my leg without doing anything in return, and so I reached one hand between us and found her breast. Hayley has wonderfully perky little breasts topped with hard little nipples and it felt beautiful as I moulded it in my hand, her nipple rock hard against my palm. She moaned lightly into my ear and pushed her pussy harder against my leg.\n\n\"God, I think I might cum again.\" She whispered very softly, as if not really believing it herself. \"Do you mind?\"\n\nWhy would I mind? I had this beautiful woman lying on top of me with her hand between my legs and her pussy rubbing wetly against my leg. The idea of her reaching orgasm in my embrace was making my own pussy throb sexily.\n\n\"Of course I don't mind. I'd love you to bring yourself off.\"\n\nI felt her smile against my cheek and her movements intensified. The only downside for me was that as she became more involved in her potential orgasm she lost track of what she was doing to me, stopping and starting her fingers on my clit as she tried to keep her mind on both things at once. In the end I reached down and lifted her hand away and put mine in its place between my legs to play with my own clit. She realised what I was doing and smiled gratefully on my cheek, her hand reaching for my breast as I had done hers.\n\nI knew exactly what I liked done to my clit, of course, and with me rubbing it between two fingers and Hayley doing the same thing to my nipple, it wasn't long before I too felt the heat build once more inside my pelvis. Hayley's pussy sliding up and down my leg on her own slipperiness added to the sensation and I wondered if I just might cum for a third time that day.\n\n\"It might happen for me, as well.\" I whispered to Hayley.\n\n\"Oh, I hope so. Let's try and cum together.\" She breathed back.\n\nA third climax was by no means a certainty, and with Hayley having a kind of head's start I doubted that I'd be able to come with her, but the idea of us reaching orgasm simultaneously while lying together was beautiful and I began to rub harder and faster at my clit.\n\nFor a few minutes we were silent except for our increasingly heavy breathing, but then Hayley whispered. \"It's going to happen. Will it happen for you?\"\n\n\"I think so.\" I gasped.\n\n\"Please let it happen.\" She begged. \"I want to feel you cum.\"\n\n\"And I you.\" \n\nMy fingers were flickering over the tip of my clit, getting me higher and higher, but Hayley was now pushing hard onto my thigh, so hard that I had to work to stop it being pushed down and I could tell she was almost there. Her whole body was moving against mine as she mashed her pussy onto my leg faster and faster, while her fingers dug fiercely into the flesh of my breast.\n\n\"I'm cumming Sue, I'm cumming.\" Her voice rose in a wail again as her orgasm loomed. \"I'm going to cum on your leg - I'm there.\"\n\nShe grunted once, twice, and then rammed her pussy hard onto my thigh, her back arching as she squashed herself onto me, the renewed grunts now turning into gasps that I felt on my ear as much as heard. Her hand now clenched itself into a fist over my breast squeezing me unmercifully and unknowingly, the pain only serving to bring me closer to my own climax. \n\n\"Oh God,\" She gasped in my ear, rubbing her pussy in long, heavy strokes up and down my leg.\n\n\"Oh God,\" She said again, pushing her pussy harder than ever against me in one last stroke before collapsing in a heap on top of me as her orgasm finally subsided.\n\n\"Did you cum\" She asked, panting heavily against my face.\n\n\"Not yet.\" I told her through gritted teeth as my own climax got closer. \"Nearly.\"\n\nMy fingers flew, rubbing frantically at my clit as Hayley lay with me whispering encouragement.\n\n\"That's it.\" She whispered. \"Let it happen. Let yourself cum.\"\n\n\"I will.\" I told her, the fact of masturbating for her to enjoy with me was adding to my pleasure.\n\n\"That's it, darling, let go.\"\n\nI was shocked but delighted at the endearment she whispered.\n\n\"Play with my tit.\" I asked her, suddenly wanting her to actively help me climax.\n\nHer hand had been resting inertly on my breast, but now she squeezed and massaged it again.\n\n\"Like that.\" She asked me, breathing the words directly into my ear.\n\nI nodded a reply, my face beginning to screw up as the orgasm came nearer.\n\n\"Good.\" She murmured softly, and then her lips began to cover my cheek with little kisses.\n\n\"Oh Hayley.\" I sighed, delighting in the unexpected contact.\n\nWe lay together on the bed, Hayley softly kissing my face, her body pressed close to me and her hand on my breast, moulding and caressing it. I had one arm around her, gripping her shoulder, at the same time as I masturbated. I knew I was going to cum, my orgasm was building stronger and stronger as my fingers strummed at my clit, and all the time I felt the most erotic intimacy from having Hayley with me.\n\n\"It's nearly there.\" I told her, the words forced from between clenched teeth.\n\n\"Good. Enjoy it, let it happen. Let yourself cum.\" Her speech was punctuated with her kisses, kisses that were becoming more insistent and more enjoyable as my orgasm loomed.\n\n\"I'm cumming.\" I told her, feeling the dam begin to break inside me under the onslaught of my fingertips.\n\n\"Now?\" She asked me urgently.\n\nI couldn't answer. My back tried to arch under her weight, my finger gripped hard onto her shoulder and I let out a series of groans as my orgasm finally exploded.\n\nShe must have been waiting for that moment, because as I came and my mouth fell open, her lips came down on mine in a full blooded kiss, her tongue finding its way in to explore my mouth. I hadn't expected it, but the kiss made my climax stronger, wave after wave of pure ecstasy surging outwards from my pelvis as our tongues danced and twined together, and I gasped with delight into her mouth. \n\nIt seemed as though my orgasm would never end, each time it seemed to subside I would feel Hayley's tongue wriggle into my mouth or her fingers clutch and mould my breast, even after my exhausted fingers had come to a stop at my pussy. \n\nMy mind was reeling from what had happened between us, knowing that we'd finally taken that last step. I didn't want her kisses to end, my arm released her shoulder and went to the back of her head, holding her mouth against mine, until sheer lack of breath made me let go and turn my head to one side, gasping for air.\n\nI was still shuddering and trembling from my climax when I finally took enough of a breath to gasp out my thanks to her, happy that she at least had found the strength, the nerve, to take the last step towards making us lovers.\n\n\"I know where my limits are now.\" I panted.\n\n\"Where?\" She smiled down at me.\n\n\"With you -- I have none.\"\n\nShe smiled again and her mouth found mine once more. \n\nLater, much later it seemed, after we'd finally run out of kisses and were just lying in each others arms, I went back to her earlier question.\n\n\"But I want to keep this just for us, if you don't mind.\"\n\nShe nodded in disappointed understanding, and kissed me again. "
    ],
    "authorname": "Otazel",
    "tags": [
        "female masturbation",
        "mutual masturbation"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/busy-fingers-ch-04"
}