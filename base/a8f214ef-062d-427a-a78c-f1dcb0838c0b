{
    "title": "The Addicted Natural Ch. 16",
    "pages": [
        "<p align=\"center\">Chapter 16 &ndash; The White Witch of Walden &ndash; Summary and Conclusion</p>\n\nAN EVENING WITH DEE\n\n\"You shouldn't be wasting your night with me, Master. The doctor said you can't make love to me. You should spend the evening with Brenda or Willie!\"\n\nI stretched out on my side next to her naked form and trailed a fingertip over the expanse of her distended belly. Pregnancy had really taken a toll on her, but then, I guess it does with most women. Brenda had made it a daily ritual to rub lotion into her stomach and breasts in an effort to keep the stretch marks at a minimum. Even so, a single mark had appeared, starting at her navel and extending almost all the way to her cunt. Her \"innie\" had become an \"outie.\" But the most dramatic difference was her breasts; those glorious breasts. They were large and swollen now, and they sagged under the added weight. Her areolas were twice as large as they normally were, and they'd turned a deep, chocolate brown. She was pale from the time she'd spent in the hospital, and the incision on her side was very evident. They'd used glue instead of stitches to close the wound; a relatively recent thing in the wonderful world of surgery, I guess. I traced the new scar.\n\n\"Does it hurt?\"\n\n\"It itches like crazy.\"\n\nI laughed, and then turned thoughtful and sober. I suppose I'd better just come right out with it and get this over with.\n\n\"Dee, I need to talk with you about Willie's husband &hellip;.\"\n\nHer eyes widened in shock, and she started back. She searched my face for some clue to what I wanted to know, and then suddenly her face dissolved into a mask of utter despair. Tears immediately flooded her eyes and she put her hand to her mouth.\n\n\"Hey, don't cry,\" I urged, \"I just want to talk &hellip;.\"\n\n\"You KNOW!\" she wailed. \"Willie told you! I &hellip; I'm sorry! I didn't mean to kill him!\" She sobbed. \"No, that's not true &hellip; I DID mean to do it. I did it, and then I was GLAD I did it! Oh, I'm so EVIL!\" She turned her face into the pillow.\n\n\"Stop this!\" I insisted. Why did I always feel so worthless when a woman cried? \"You DID NOT kill him. The tree killed him!\"\n\nShe looked up at me and went on as if I hadn't spoken. \"He was such a &hellip; a &hellip; terrible man! Did you know he was HIV positive? He'd had it for almost two years, and he was on medication; but he still kept having sex with women! Fortunately, they were almost all prostitutes, and they wouldn't screw him unless he wore a rubber. But he was going to do it to Willie! He planned to, just as soon as he had a million dollars! He hated her! He hated the way she made him feel all the time; the way she made him want her all the time. He was going to do it to her without any protection! He was an AWFUL man!\"\n\nI was shocked into a long moment of silence. \"How did you know that?\"\n\nShe looked guilty. \"I can &hellip; I can go inside a person if I want to. I did that to him after he'd hit you; and threw Brenda down; and kicked Maxine; and he was going to hit ME, too. So I went inside of him, and then I knew what HE knew, and I said 'Bad Rudy! Why are you always so BAD? You're such a bad boy, Rudy!' just like his mother always said; in just the same tone of voice she used all the time. And, boy did that get him! You should have SEEN his eyes, Master. He was terrified! The big bully! And I did it again, too, later in the week. He was going to hit Willie again, but I made him stop! 'Such a BAD BOY, Rudy!'\"\n\nI was totally shocked. Dee was losing it; mentally as well as emotionally. I was suddenly very concerned about her, and my expression must have conveyed that.\n\n\"Don't look at me that way, Master,\" she said, the tears coming again. \"Please don't think I'm crazy!\" She pulled away from me and tried to get up out of the bed, which concerned me even more; so I held her tightly to me and she finally started sobbing into my shoulder. I stroked her hair and thought hard. Maybe if I was more placating about this psychic shit &hellip;. I finally decided to take that tack.\n\n\"Dee, I'm not faulting you for killing Dee's husband,\" I said gently.\n\nShe looked up at me through her tears. \"You're not?\"\n\n\"No, not at all. The guy had it coming. What concerns me is that you did it without consulting ME. I am your Master. You must never, ever use such powers without first consulting me.\"\n\n\"But I WAS,\" she said earnestly. \"Or I was TRYING to. I was telling you all about it that afternoon, but the storm came too quickly to let me finish! Then, when I found out I couldn't make Willie move out from under the tree, there wasn't time! I used HIM to do it &hellip; and then I just made him stay there. It seemed like the right thing to do at the time &hellip;.\"\n\nI lay there and thought some more. \"What would you do if you found out there was someone in the world that I really, really hated?\" I asked. \"Someone I wouldn't mind seeing dead. If you found out about that, what would you do?\"\n\nShe didn't hesitate. \"I take care of him for you. I can DO that.\"\n\n\"Wrong answer,\" I scolded seriously. \"Care to try again?\"\n\nShe searched my face for a moment, and then lowered her eyes submissively. \"I'd come to you and ask what you want me to do,\" she said meekly.\n\n\"Very good,\" I told her. \"You must never, ever act without coming to me and asking first. From now on, it will be MY decision.\"\n\nShe didn't look up. \"There is a time when I must disobey,\" she said.\n\nAnother shock. \"What?\"\n\n\"If something is about to happen to you, something sudden, I will protect you. If there's not time, I'll act. I must. I can't let anything happen to you.\"\n\nI smiled. \"That's a little far-fetched, isn't it?\"\n\n\"It happened to Daddy,\" she said. \"Bang. He was dead. I won't let something like that happen to you. I couldn't.\"\n\nI sighed. \"Okay, that one exception.\"\n\nShe raised herself on one elbow and looked at me. \"And Brenda &hellip; and Willie. Can I still do it with them? Please? They LIKE it! It's &hellip; fun! Please?\"\n\n\"Okay, okay. But those are the ONLY exceptions. Period. Understand?\"\n\nShe hugged me. \"Yes, Master!\"\n\nI held her for a long minute, thinking. Should I seek psychological counseling? But I couldn't! Our little m&eacute;nage-a-quatro was utterly unexplainable. And it wasn't just Dee! Brenda and Willie actually believed in all this psychic shit, too. Coincidence and mass hysteria could explain practically EVERYTHING that had happened to us in the past few weeks, but there didn't seem to be any way to convince the girls of that. Finally, I just decided to let the whole thing go. On with our lives. Back to normal again. Crazy. Weird. Normal.\n\nI pushed her back onto her back. \"And now, I'll reward you for passing your little quiz in slavery 101 with a treat. Are you ready for sleepy-sex?\"\n\n\"Really?\" she gasped. \"But I thought we couldn't &hellip;.\"\n\n\"That is no concern of yours,\" I said seriously. \"Look into my eyes, Dee. Deeply, deeply into my eyes. Relax. Relax, my love. Just relax and look deep &hellip; deep. So relaxed. That's it. Let the sleepiness come. So sleepy now. And so heavy. So very, very heavy.\" She was going under very quickly. Well, not quite under.\n\nThis was a type of sex that Brenda and I had discovered early in our life together. I'm not sure exactly how I'd stumbled upon the concept, but Brenda had really loved it; so much, in fact, that I had saved it for special occasions. Once every couple of months, usually. And while Brenda had enjoyed it, Dee absolutely craved it. \n\nShe was very, very close to her trance now. \"So very, very heavy,\" I intoned. \"So very, very sleepy. You know what's going to happen now, don't you, Dee?\" She made a little squeak of a moan. \"You know that you can't go to sleep without me telling you to. You know that you can't move, can't speak &hellip;. You're soooo sleepy. So heavy. So tired.\" Her mouth hung slack, her eyes flat and drowsy and drooping. I rose to sit next to her on the bed. I began caressing her gently, stroking her belly, her sides, her breasts. \"So helpless. Poor Dee. She's so sleepy; so heavy; so very, very helpless.\" I reached down and positioned her legs far apart. I pressed her arms by her sides. She remained exactly how I placed her. Her eyes were blank behind drooping lids, but I knew very well that she could hear every word, feel every touch. I began stroking her hairless pussy. Her breathing quickened, but she didn't make a sound.\n\nThis was the point that I usually mounted her. The ultimate rape. She would be like a rag doll in my arms, completely limp, completely helpless. It was ultimately like using a date rape drug, only my willing participant would be acutely aware of her situation, and would remember every touch, feeling, emotion. But in this case, I'd have to settle for sex without penetration. Doctor's orders.\n\n\"You're very wet, Dee. Are you still horny all the time? Like you told the doctor in his office? He laughed at you, you know. Silly Dee. Horny Dee. Always so horny. And now, you're helpless, too. You're so sleepy, but you know you won't sleep until you cum. You know you won't be fully under the hypnotic trance that you crave until your body overpowers your mind, and you cum.\" I began rolling a fat, brown nipple between my thumb and forefinger while I started rubbing her clit hard with the flat of my hand. \"Such a helpless little girl. So very, very helpless &hellip;.\"\n\nShe began to shake all over, then she convulsed slightly several times, her arms and legs still motionless and pressed into the bed. Finally, the orgasm faded, and as it did, her eyes finally closed. I sat up and looked at her. \n\n\"Where are you, Dee?\"\n\n\"I'm in my bed, in my wonderful room, Master.\"\n\nI smiled. \"And you can still feel the orgasm, can't you, Dee? Feel the afterglow of that strong, powerful orgasm.\"\n\nHer smile broadened. \"Yes.\"\n\n\"That wonderful, tingling, glowing feeling will follow you, will stay with you, even after I wake you up. You will feel it in your sleep, tonight in bed with me. It will be with you when you have nice dreams. It won't fade until morning.\"\n\n\"Yes.\"\n\n\"And you won't feel anxious about your powers, now that we've established guidelines, will you, Dee?\"\n\nThe smile didn't fade. \"There's nothing to feel anxious about,\" she said. \"I know the rules now. And you forgave me about Willie's husband.\" A little frown. \"Didn't you?\"\n\nI sighed. Mass hysteria. \"Yes, I forgive you.\" I thought a moment. \"When I awaken you, I know that you're not going to be satisfied until you satisfy ME.\" She frowned. \"But how?\" I continued thoughtfully. \"How can you do that?\"\n\n\"I could use my mouth!\" she answered immediately. \"I could slide to the edge of the bed and lie on my back and let my head hang back over the edge, and you could push your cock right down my throat, just the way you like, and you could come! Couldn't you?\"\n\n\"Well, I guess we could do that.\"\n\nAnd she smiled again. Dee really has a very nice smile.\n\nCONTENTS OF A LETTER WRITTEN AUGUST 30<sup>th</sup>, RECEIVED SEPTEMBER 2nd\n\nMy Dear Professor Fielding,\n\nIf you read this letter in its entirety, you will learn how to break all hypnotic connections I have maintained with your lovely wife. Forever.\n\n(In Show Biz, that sentence would be referred to as the \"hook.\" You see, I have a very personal, very selfish reason for you to read this. It was my great fear that when you realized who had written this letter, and knowing your great animosity toward me, you would simply discard it unread. I fear I am beyond your trust, but I must have your attention in this matter. It could be one of life and death &hellip; namely mine.)\n\nIf I am to do this properly, I'm afraid I must bare my soul to you. Not a pretty sight, a bared soul. Especially mine. Still, not everything in life is pretty. Whether you find the following tolerable or not, I urge you to peruse it all the way through.\n\nMy first \"Natural\" was my lovely wife, Jennifer. The first time I laid eyes on Suzy, my second Natural, I just seemed to KNOW how easy it would be to enslave her. She's the breadwinner in the family, by the way. With a little drug-induced hypnosis on my part, I was able to get a couple of the senior partners in the CPA firm she worked for to give her more opportunities, more chances, more responsibilities. Now, she's a senior partner herself in one of the biggest accounting firms on the east coast. Including bonuses and stock options, she pulled down seven figures last year. Oddly, she has sought out the part of \"lowest slave\" in our household. She lives to serve. Humiliation excites her. Does the pattern sound familiar, Professor?\n\nAnd, oh by the way; congratulations! WELL DONE! I mean, Diana Darlingshire! Did you know that she was in last year's Who's Who? One of the 100 richest women in America! Not a mention of her this year, though. Just seems to have fallen off the planet. Not even a mention on Google in the past twelve months. It would be a real mystery, if anyone cared. It seems nobody does.\n\nAnyway, back to our story. In the past six years, I've enslaved 19 Naturals, three of which I've kept for myself (I'll get to the third girl in my household soon. She's the reason I'm writing). Let me tell you what ALL the Naturals have in common.\n\nFirst, I've slept with them all. I felt that I deserved this little treat. After all, I had THEIR best interests at heart. But I'll get into that in a moment.\n\nNext, they were all very introverted. Nervous. Shy. Self-conscious. Unable to maintain eye contact unless specifically told to do so. Some were very intelligent, some were not. Some were into women's issues, others were conservative and traditional. But all were what I'd call \"easily led.\" They took instructions quickly and without question. \n\nI hypnotized each one of them without their consent. A few, once they realized what was happening to them, resisted; but in every case, they were too far gone to fight. They all succumbed. And they all went DEEP! Much, much deeper than the normal female subjects I encountered in my shows. After awhile, I wasn't even nervous about it, and I took them hypnotically even in public, just as I did with Brenda. It was ridiculously easy.\n\nIn each case, I made the girl believe that she had incurred a deep addiction to hypnosis. This addiction seems to take on slightly different characteristics in each one. Some appear to have an actual, physical need for it. Others seem to \"remember\" it the next time their Master tells them to \"look into his eyes.\" In any case, the addiction seems to cement the Master/Slave relationship in the mind of the girl. You must remember that this concept is a very pleasant one for a Natural.\n\nAnd now for the important point: each one of them was either already in a position of emotional \"slavery,\" or was well on her way. All I can say is that they are BORN to be slaves. It appears to be their destiny. Even my wife, Jennifer. It pains me to admit that she was once enslaved by a pimp in New York City for almost two years before I met her. He was apparently killed in a gang-related incident, and in the ensuing confusion, Jen and a friend ran away to the Catskills, where I met her. But I KNOW in my heart that if I hadn't come along, she would have gravitated to another man who would have used her for purposes of prostitution. \n\nSo, try to see it from my point of view. I can look across the room at a pretty girl, and I somehow KNOW that she is either now, or soon will be, a sex slave. I also KNOW that I can intervene, through hypnosis, and guide this girl toward a man who will not only control her to her heart's content, but will also respect and protect her. As I traveled around with my act, I would not only look for Naturals, I would also look for prospective Masters. Several were college instructors, such as yourself, but others were professional men: engineers, financial managers, laborers. The bars are full of lonely men, and often, they're very good men. Once I take a girl to one of them, I judge his reaction and react accordingly. You see, I can easily make ANY Natural love ANY man. And I mean true love, here. In twenty or thirty minutes, she will be so deeply, passionately, overwhelmingly in love with him, that she will gladly give herself to him, body and soul. Forever. He will be a Master that she will love. And THAT is the best possible gift I could ever give her. As for the men, I simply give them a few simple instructions on hypnosis, and leave them to their own devices.\n\n(YOU have been my lone failure in this department. I have never had a prospective Master treat me in such a way. But then, I underestimated the facts in your case. Brenda was obviously very much in love with you long before I showed up on the scene. You were obviously very much in love with her. Strange you'd never taken her out &hellip;.)\n\nI've place all of my girls (except for my own three) with the types of men I've described; and so far there have been only three failures. That's MUCH better than the national average when it comes to broken marriages. In one case, my choice of gentlemen Masters had turned to drink and had severely beaten the girl on several occasions. In another, the man had left his \"slave\" for another woman; and in the third case, the guy and succumbed to the temptation of an easy buck by using his girl, night after night, as a high-priced hooker. In each case, I went back and got the lady in question, easily put her back into my absolute power; and then I took her to the cops. I had her swear out a complaint resulting in a restraining order, and finally, I drove her at least two states away, where I changed her name and placed her with another chosen Master.\n\nI do not dabble lightly in the affairs of my girls once they have been \"placed.\" For example, in no fewer than eight of the couples, the Masters have decided to use their unique situations to dabble in a little \"alternative sex,\" such as wife-swapping, threesomes, watching while letting friends do it with her, etc, etc. I consider such matters to be private affairs, and I would never think of interfering unless the well being of my girls is directly affected. \n\nWhich leads to the question, of course: how do I KNOW about all these things? You, of course, have already stumbled upon that answer; and to your credit, you are the ONLY Master to have done so. During a certain week of the month, each Natural has been programmed to write me an email and \"report in,\" so to speak. If there is no opportunity to write during her assigned week (she may be on vacation, for example), she will simply wait until the next monthly cycle. She will have no memory of contacting me. If she is interrupted in her assignment, she will simple delete the message and try again later, again losing any memory of what she is doing, or why. \n\nIn every case, she must report any significant changes her household has experienced in the past month. She obviously keeps me up to date on her address, and more importantly, on her relationship with her Master. And (I guess I'll bare my soul all the way here), she is required to describe her most memorable sexual experience during the period. I have kept these emails in a set of binders on my den, and I must say that they are a constant source of entertainment and amusement. For example, your idea of \"sleepy sex\" has become a regular part of our sexual repertoire here in New York. I wouldn't mind sharing some of the other great ideas that have come my way. Write me, if you want. (But somehow I don't think you will.)\n\nAnd finally, I come to the last thing that Naturals seem to have in common. Now, hold on to your hat here. I know you're going to want to throw up your hands in disgust and stop reading this, but PLEASE don't. Not yet. \n\nI swear that these girls appear to have some sort of psychic ability. It seems to be different in every case. I can't account for it. I don't understand it. I can only report to you what I have observed with my own two eyes.",
        "I first noticed it with Jennifer about a year ago. She's really into these soapy romance novels, and I've seen no reason to discourage her. I happened to come upon her one day sitting in our glass porch among all the flowers. She was sitting, reading, and she didn't know I was there. She is an exceptionally beautiful woman, and I just stood for awhile, watching her as she read, the pages slowly turning, her lips moving slightly as she sat there. And then, slowly, disturbingly, I began to realize that the pages were turning, but SHE wasn't turning them. They were turning themselves! One at a time! Just as she was finished with each one! Impossible!\n\nNow, sir; I've been involved with just about every type of on-stage prestidigitation in the book. I KNOW a staged trick when I see one, and THIS was not! Finally, I confronted her, and she was greatly upset. She'd always had the power, she told me, but she was afraid to tell me about it, because she knew that I didn't believe in such things. She couldn't move anything very large, she told me, nor could she move anything very far. Indeed, I made her experiment with this ability, and she was right. She could move a spoon about an inch along our kitchen table, but she couldn't move it if there was a tablecloth involved. Too much friction, I suppose. \n\nFinally, she told me that Suzy had \"abilities,\" too. And after she told me about them, I realized that I'd seen them in action many times. Suzy has a gift with animals. She can sit on our bench in the back yard, and inevitably, within several minutes, birds begin to flit around her and land near her. Squirrels, rabbits, all kinds of animals, come and sit at her feet. Dogs never growl at Suzy. Insects never bite her. Now, finally, I saw this \"talent\" as something out of the ordinary. \n\nI confronted her about it. She could \"hear\" their thoughts, she informed me. Visions of Doctor Doolittle danced in my head. But the reality about animals (if she is telling the truth about it) is much different than fantasy. Animals rarely have a tangible thought beyond \"I'm hungry\" and \"It would be nice if someone scratched the itch behind my left ear.\" Animals want. Animals need. Animals don't \"think.\" But animals also \"like.\" And all the animals like Suzy.\n\nAnd this brings me, at last, to Wanda. I first encountered Wanda as I was driving across the Homestead Bridge in Pittsburgh and saw her about to fling herself into the icy waters of the Monongahela far below. I stopped my car, grabbed her, and drug her back to my vehicle, kicking and screaming. Once I'd calmed her down, I was shocked to recognize all the traits of the Natural residing in her lovely person. In just a few minutes, I'd calmed her down even more &hellip; WAY down, and she was deeply, totally, and completely in my power. I drove her to my home here in New York State. \n\nShe had evidently been distraught over the death of her father. And this was very odd, because she had hated him. He had been sexually abusing her since she was ten, and he'd been a drunkard and a cur. Still, she seemed to believe that life without her father (her Master?) would be intolerable. So &hellip; I gave her myself as an alternative Master, and she was almost exponentially happy. She seemed to fit right into our \"family,\" and now, after a few hypnotic alterations, I could finally take one girl to bed at night, while the other two would \"entertain\" themselves &hellip; sexually as well as emotionally. A perfect world. \n\nBut Wanda had a \"gift\" as well. Her ability seemed to be in the form of visions that came to her while she slept. Dreams. And while they all were (as dreams usually are) strange, vague, and open to interpretation, they were uncannily accurate. She once foresaw a heavy rainstorm, during which our dock, down at the lake, was heavily damaged. I had a construction company come out and make needed repairs, and when a storm DID strike shortly thereafter, our neighbors all sustained significant damage, but our dock withstood the gale. There were other incidents as well, but you see my point. Her \"abilities\" appear genuine.\n\nAnd so, a few days ago, she came to me crying and tremendously upset. She'd had a dream. A very vivid dream. And in it, I was killed. She saw a man dressed in the robes of a person of letters, an academician. She actually described you quite well, right down to your hairline. You were standing on the shore of a lake, and behind you were three beautiful, naked women. One had hair of shining black (obviously Brenda); one with large breasts, pregnant, and with hair of flaming red (Dee?); and a third was small, slender, with hair of purest white (I assume she means a blonde. I don't know about a third girl in your household). I was standing on the other side of the lake, and none of your group noticed I was there. \n\nSuddenly, the girl with the white hair noticed me, and pointed. You saw me for the first time, and you raged at me. You pointed me out to Brenda, who in turn, brought my existence to the attention of the pregnant redhead. Then, in her dream, Wanda saw all three women change, drawing themselves up, getting bigger, and they turned into dragons; one red, one black, and one white. They all turned their hatred (your hatred!) toward me, and the red dragon spit fire that engulfed me. When the fire had subsided, I had gone mad. I ranted and raved, and finally, I flung myself into the lake and drowned myself to calm the terrible voices that had filled my head. Wanda was beside herself with grief and foreboding. \n\nPoppycock, you say. Claptrap. Superstitious humbug. And yet, I must admit, she has been right before. Should I ignore such a warning?\n\nI must admit, my first instinct was to rally my own psychic army and confront you. If it's war you want, I will certainly protect myself! I sat by the lake and held a muster of my troops in my imagination. They stood, beautiful and proud, at my beck and call. I held a mental inspection of my forces. One was ready to move heaven and earth for me &hellip; just so long as it didn't weigh any more than a spoon, and could be moved along a smooth surface. Yet another stood ready to summon the forces of the animal kingdom, and she could easily send a couple dozen birds your way with malicious intent &hellip; just so long as they weren't distracted by the sight of handful of corn. And my third was a tremendous source of military intelligence &hellip; well, just so long as you chose to attack during her afternoon nap.\n\nMaybe I'd better rethink this strategy. Come to think of it, perhaps begging and groveling is in order here. \n\nProfessor, I have wronged you. I took advantage of your beautiful Brenda when she was helpless, and for that, I deeply apologize. I have intruded on your privacy by having her write me without your knowledge. I am sorry. Though I have given you reason to think otherwise, I AM NOT YOUR ENEMY. I mean you no disrespect. I mean you no harm. I will forever withdraw from your affairs. I will never again contact you or any of your women. I sincerely beg your pardon, sir.\n\nPlease. Please don't bring my existence to the attention of your Red Dragon. \n\nIn Brenda's hypnotic \"Favorite Room,\" there are two rugs. The bed rests on one. The other is in the center of the floor. I believe you have probably already found the trap door under the rug in the room's center. If so, you know that she can be permanently changed when she is in that lower room.\n\nWhat you have probably not found is the trap door under the bed. Hypnotize her, and then have her get out of the bed. There is a secret button on the footboard. She won't be able to see it until you tell her it's there. When she presses it, the bed, rug and all, will slide aside revealing another trap door. When she goes down into THAT room, you will be able to override the instructions that make her contact me each month. \n\nYou will never hear from me again.\n\nI remain, sir, your most humble servant.\n\nGregory Menlo\n\nSHOWING HER WHO'S REALLY THE BOSS\n\n\"Wake up, Brenda,\" I told her softly.\n\nHer eyes fluttered open, closed again, and she struggled to stay awake. \"Oh!\" she muttered groggily. She opened her beautiful eyes wide for a long moment as she tried desperately to remain alert, but her body sagged again. \"Oh, golly Freddy! You took me so DEEP!\"\n\nI didn't rush her. Usually, she'd do her little post hypnotic stretching maneuver when I awakened her from trance, but she was right, I had taken her especially deep this time. Deeper than I'd ever taken her before. She suddenly forced herself into alertness, however, and her eyes shifted quickly left and right, though she was looking at nothing at all.\n\n\"You changed me,\" she said. I tried to ascertain if this was an accusation or simply a statement of fact. She was staring across the room, her eyes unfocused. Now, she finally looked directly at me, regarding me wonderingly. \"You changed me,\" she said again.\n\n\"Um &hellip;.\" I hadn't planned on this particular line of conversation. I thought quickly, and finally decided to let my heart lead me in these uncharted waters. I deeply loved this woman. I should have no secrets from her.\n\n\"Yes,\" I said simply. \"Yes, I did.\" She continued to look up at me with almost an expression of pleased awe, like a housewife who works tirelessly, thanklessly around the house for months and months, and is suddenly given a particularly romantic gift for no reason whatever. I don't know what I had expected, but it wasn't that particular look. It suddenly unnerved me. \"Um &hellip; I want to tell you what I did, Brenda.\"\n\n\"No!\" she urged quickly. She put her fingertips to my lips to silence me. \"Oh please, Freddy! Please don't!\"\n\nI stared into her eyes questioningly for a long moment, but she smiled, put her head against my chest, and hugged me. I held her tightly as she shivered in my arms, and I wondered where this was going to lead.\n\nWe said nothing, and the only sound for a long, long time was that of rain in the trees outside our bedroom window. A small noise came from deep within the house, and we both knew what it was, both intimately familiar now with the sounds Willie made when she became lost in feelings of sexual stimulation. In the bedroom at the other end of the hall, she was doing something new and erotic and wonderful with Dee. What could it be, I wondered; and my cock stiffened, just as it did every time I thought of Willie. But no, I had to believe that my physical response was being brought on by my lovely wife, so small and fragile and sexy and desirable in my arms.\n\nThe letter from Menlo lay in my desk drawer in the study, where I had put it after receiving it only a half dozen hours before. I had decided to put its information to work immediately &hellip; tonight, and I'd sent Willie and Dee to bed right after dinner with orders to study another of their reading lessons. (From the sound of things, however, the lesson was being put off until morning.) Menlo's instructions had been accurate, of course, and very easily followed. The curse was broken. I felt oddly at peace, even knowing that he had retained so much power for so long. Brenda's response upon awakening, however, concerned me.\n\n\"Don't you want to know?\" I whispered into the top of her head. \"Aren't you curious?\"\n\nShe shivered again. \"Yes, of course,\" she said softly. \"But please, Freddy &hellip; Please don't tell me.\" I drew back slightly and tried to look at her, but she just pressed her face more tightly into my chest and refused to meet my eyes. \"I am your slave,\" she continued calmly. \"I should have no secrets from you, but you are entitled to keep them from me. You can make me do ANYTHING, Freddy. You can &hellip; and you &hellip; you SHOULD! You should change me to your liking. You should change the way I think. You should change the things I want &hellip; the things I crave. You should change who I AM to please yourself. You should make me &hellip; DO something. You should make me &hellip;.\"\n\nFinally, she pushed herself back in my arms and looked into my eyes. \"Make me, Freddy! Please &hellip; Oh, please make me! Make me do something NOW!\" She buried her face into my chest again. \"Please, Master. Please make me!\"\n\nAh, so that's what this was all about. How long had it been? Too long, obviously. Brenda needed this from time to time; needed to be taken hard, almost violently. Needed to be reminded of the Master/slave relationship in raw, physical action. I had, at first, thought it to be some sort of subconscious rape fantasy that had to be played out once or twice a year to satisfy a craving in the darkest reaches of her psyche. But now I considered that it might be more than that.\n\nI grasped her by the shoulders and forced her back away from me a step. \"Raise your arms,\" I ordered sternly. She didn't hesitate. Keeping her eyes lowered submissively, she raised her arms toward the ceiling. I put my hands on her hips and slowly, ever so slowly, pulled her nightgown upward. It was her favorite, a deep blue, long silk number that clung to her curves deliciously. I had to shift my hands a few times as I slid the garment upward, and I was thus was able to slide the slippery fabric suggestively over her breasts a few times before I finally, finally pulled it over her upraised arms and off of her now nude body.\n\n\"On the bed, Brenda,\" I ordered. \"On your hands and knees!\" She quickly leaped on the king sized bed and positioned herself at its edge as I had ordered. Quietly, I walked to the closet and came back carrying the blue gym bag. She made a little noise, and her eyes widened. I set it down just in front of her so that she could watch as I rummaged around in it, making a show of it, eventually producing the regular pair of handcuffs. She made the noise again, and then seemed to hold her breath as I attached them to her wrists, positioning her hands together to allow me to do so. I rooted around through the bag again and slowly extracted a bottle of liquid lubricant, and she gasped loudly, knowing now what my intentions were. I set the bag on the floor, then gave her hands a quick tug forward, forcing her onto her elbows, her ass raised sharply upward.\n\nTrailing my fingertips down her back, I began idly playing with her upturned bottom. She wriggled it and moaned. I did this for several long minutes, before I finally slid my fingers lower and stuck a finger into her sopping pussy. Another moan. I easily added another finger, so that my middle and fourth fingers were now deep inside her, and I began a series of deep, slippery, probing strokes into her cunt, then all the way out, before slipping them inside for another easy assault.\n\n\"Oooohh, Freddy!\" she moaned.\n\n\"I'm not going to need the lubricant, am I, Brenda?\" I asked harshly. \"You're soaking wet, aren't you? You're ALWAYS soaking wet, aren't you?\" I began smearing her slimy deposit onto her puckered asshole after bringing my fingers out of her after every stroke.\n\n\"I &hellip; I can't help it, Freddy,\" she mewed weakly.\n\n\"You're really a bit of a whore, aren't you, Brenda?\"\n\n\"OH! Oh! I can't help it, Freddy,\" she groaned weakly. \"I'm sorry, Freddy. I can't &hellip; OH!\"\n\nJust to be on the comfortable side, I poured a little of the lubricant directly onto her asshole, then set the bottle aside and began pressing the thumb of the same hand I was using on her cunt into her tight little anus. She groaned again loudly. \"Relax your ass muscles, Brenda,\" I ordered.\n\n\"I &hellip; I'm trying, Freddy! I &hellip; Oh Golly! Ahhhh! I'm trying, Freddy!\"\n\nI shifted the position of my stroking fingers so that they were scraping against her clit every time I slid them into her. She shuddered violently, then began pushing her butt upwards toward my invading thumb. I could feel her sphincter relax its grip on the tip of my thumb, and with the aid of all of the lubricating fluids, I pushed the digit fully, easily all the way inside her. \"Aaaahhhh!\" she cried. I left my fingers as far as I could reach inside of her cunt, and my thumb far inside her ass.\n\nSlowly, I began rubbing thumb and fingers together, separated only by the layers of thin membrane between her colon and cunt. Immediately, she pushed upward onto her bound hands, arching back toward my invading hand, moving her ass in a jerking circular motion. \"Aaahhh! Golly, Freddy! Ooohh!\"\n\n\"Be Still!\" I commanded. She stopped flailing and slowly lowered herself back onto her elbows, panting heavily, shaking. \"I want you to try NOT to cum,\" I told her seriously. \"I know you're ready, but do not cum!\" We both knew where this was leading.\n\n\"I &hellip; I'll try, Freddy.\"\n\nI started rubbing my fingers and thumb together again, assaulting that innermost part of her, while I reached under her with my other hand and rubbed her clit hard. She stiffened, shuddered, hesitated, and was finally catapulted into a soaring orgasm. She was on her bound hands again, pushing back against MY hands, arching her back, shaking her head from side to side, her hair flying. \"Aaahhh! Aaahhh! Aaahhh! Aaahhh!\" Her sphincter clutched my thumb hard. The walls of her cunt contracted to match the rhythm of her cries. Finally, after maybe thirty seconds of this, I stopped my violent rubbing and she slowly sagged back onto her elbows. She shivered and gulped air as if she would never catch her breath.\n\n\"I &hellip; I'm sorry, Freddy,\" she said weakly. \"I tried. I couldn't help it. I tried.\"\n\nI stood beside the bed, beside her. Keeping my thumb and fingers buried in her, I reached with my free hand and pushed down my pajama bottoms, which was all I was wearing. Then I climbed into bed and positioned myself behind her upraised ass. She was dripping steadily from her pussy, and I scooped more of her fluids from below her and deposited it around my thumb, which I now began pumping in and out of her ass.\n\n\"You have no control, Brenda,\" I told her harshly. \"You can try as hard as you want, and I can still make you cum any time I please, isn't that so?\"\n\nHer ass was moving again under the ministrations of the plowing thumb. I was now pulling it all the way out of her, and as I did so, her rear hole stayed open, gaping, welcoming, before I shoved it back into her.\n\n\"Aaahhh! Yes, Master! I can't help it! You can make me, Master!\"\n\nShe was very, very slippery back there now. Very, very open for me. I pulled my thumb out for the last time, positioned my hard, aching cock, and pushed easily into her ass.\n\n\"Unhh! Unhh! Unhh!\" she bellowed, and her butt hole gripped me as she came again. I waited until the spasms passed, then began slamming into her roughly, violently. She had been up on her hands again, and this assault pushed her forward onto her face, her arms trapped underneath her, her wrists extended down between her legs. I was amazed and surprised to find the fingers of her cuffed, clutching hands grasping my balls. And that was as far as my control was going to extend for this session. I buried myself far into her and came and came and came deep in her bowels.\n\nI slumped heavily atop her for a long minute, then grasped her around the waist and pulled us both onto our side while I stayed buried inside of her. I held her while she panted and shivered for many long minutes, then I reached up and grasped a handful of her lustrous hair and roughly positioned her head so that I was breathing into her ear. She shuddered.\n\n\"Is there any doubt in your mind who is in charge here?\" I hissed.\n\n\"No, Master,\" she whispered softly.\n\n\"Who controls you?\"\n\n\"You control me, Master.\"\n\n\"I can make you DO anything. I can make you WANT anything. I can make you THINK anything.\"\n\n\"Yes, Master. You control me, Master.\"\n\nI held her for many more minutes. My cock finally slipped out of her, but she made no move, either toward me or away. She simply allowed herself to be held, awaiting her Master's next command. Okay, I thought, I'd had just about enough of the play-acting! I wanted to share this with her, somehow. I wanted to talk to her, and ask her opinion, and seek her guidance &hellip;.",
        "And yet, above all else, I realized that I would have to make this sacrifice. I was certainly not a born leader, and yet I was firmly in the roll of leader in this play I was living.\n\n\"Brenda?\"\n\n\"Yes, Freddy?\" Her voice sounded small, meek, little-girlish.\n\n\"I am going to tell you what I did to you when you were hypnotized. I am going to tell you because I WANT to tell you.\"\n\n\"Yes, Freddy.\"\n\nI sighed. Oh, the hell with it! I would play the role. I would be what they expected me to be.\n\n\"I changed you because I wanted to protect you. What I did to you was for your own good. You will never know what I did, but I want you to know this: I will do whatever I deem necessary for your protection. If I must, I will change you and control you and bend your thoughts. Whatever it takes to keep you safe and happy. Do you understand?\"\n\nShe reached up with her cuffed hands and grasped my arm. \"OH, Freddy!\" she said softly. I could sense she was crying quietly, but I spoke no further; just held her. Finally, somehow, I knew she had stopped her tears.\n\n\"Yes, Master, I understand,\" she whispered.\n\nPAST &ndash; PRESENT - FUTURE\n\nWe call it \"Indian Summer.\" It was the second week in October, and we were having a warm spell after the first really cold weather of autumn. The sun was brilliant, the sky cloudless, the birds singing. Last week's frost was just a memory, and the temperature was in the 80's.\n\nThe girls had decided to dress in bikinis, which looked absolutely ludicrous on Dee, who only had a couple weeks to go before delivery. I had played Rhett Butler and carried her half way down the hill toward the lake to sit in the shade of the big oak, while Maxine bounded frantically all around me and almost tripped me twice. Willie had pulled the cushions off the swing, and I had gently lowered Dee onto them. Then the two of them stretched out, Maxine at their side, and Willie began reading a third grade primer, her head resting on Dee's shoulder. \n\nDee was immensely pregnant. Brenda had made it a daily ritual to rub lotion into her stomach and breasts in an effort to keep the stretch marks at a minimum. Even so, a single mark had appeared, starting at her navel and extending almost all the way to her cunt. Her bellybutton \"innie\" had become an \"outie.\"\n\nI walked back up the hill and sat on the porch swing, watching them, and I suddenly thought that I'd developed a craving for a glass of lemonade. That's when Brenda, clad in her skimpiest swimwear, brought me that very thing, handed it to me, and stretched out next to me, her muscular legs facing away from me along the swing's seat, her back resting against my shoulder. Naturally, I slid my arm around her.\n\n\"Dee told me you'd want a glass,\" she explained. I sighed. The lemonade tasted great. We sat in silence for a long time.\n\n\"The architect called,\" she said. \"He says the plans are ready, and he'd like to see you.\" She looked back over her shoulder and regarded me curiously. \"Why all the secrecy?\"\n\n\"You'll find out soon enough,\" I told her. I'd put off the addition to the house, and the plans now called for small indoor swimming pool, Jacuzzi and lap lane (Willie had commented more than once about how she missed her \"long swims\") connected to the other side of the new rooms. I wanted to see the designs before telling the girls. It was going to cost a small fortune, but then, I guess I had one now. I'd argued with myself on several occasions, but in the end, I reckoned that if Dee was ever going to enjoy her money, I would have to spend it on her behalf. Well, OUR behalf. Well &hellip;. Oh, who was I kidding?\n\nI decided to change the subject. \"I don't think Dee's going to make it to her delivery date,\" I said idly.\n\n\"She's not,\" Brenda replied flatly. \"The baby's coming one week from today. Tuesday, October 18<sup>th</sup>, in the early afternoon.\"\n\nI looked down at her. \"Ah. Willie and her cards again.\"\n\nWhen I didn't say any more, she finally looked up at me. \"You still don't believe, do you?\"\n\n\"No.\" We'd had this discussion before.\n\n\"You should really try to keep an open mind about all this,\" she chided.\n\nI sighed. She was right, of course. There are countless examples in fiction in which the scientific mind has been represented as a \"closed\" mind. And in fact, there had just been too many strange events in the past few months to discount the presence of &hellip; SOMETHING; but whatever it was had to be bound by scientific roots. I am a realist. I always have been. I always will be. \n\n\"You'll have to give me a little while,\" I told her flatly. \"I'm not saying I'm GOING to believe in all that stuff &hellip;. I just have to study it a little more first, that's all.\" She didn't say anything to that, and we watched Willie as she read her book to Dee. \"You're probably going to tell me that she can't read her cards as well, now that I've demanded she start reading books,\" I said.\n\nBrenda shifted slightly and hesitated before answering. \"I don't think she really 'reads' the cards at all, Freddy,\" she said. \"I mean, she knows how &hellip; she knows what they represent, what certain combinations are supposed to mean, stuff like that. But I really think that she actually has visions when she looks at the cards &hellip; especially when she arranges them in a circle. I think it's sort of like a medium looking into a crystal ball or something. She confided in me a couple days ago that her visions aren't as sharp now &hellip; not as clear. I think that the more she reads books, the less sharp her second vision will become. Eventually, I think it will be just like her REAL vision. She'll still be able to see, but not clearly; not distinctly. Does that make sense?\"\n\n\"Yes,\" I said in a controlled voice. \"Yes, that makes sense.\" I wasn't giving an inch. Not yet, anyway.\n\nShe was silent for a moment before stunning me with some news. \"Freddy, I've found Willie's people.\"\n\n\"Her people?\"\n\n\"Willie told me that her aunt taught children &hellip; children from all over the world.\"\n\n\"Children with 'psychic' abilities,\" I said. \"Yes.\" I tried not to sound sarcastic.\n\n\"Well, I started asking myself how they found her. How could individuals, such as the parents of gifted children, find her? How did they know about her? How did they contact her?\"\n\nI looked at her blankly. I'd never considered this. I did so now. \"The internet?\"\n\n\"Do you remember her telling us about her aunt's other 'slaves' on the island? There was a couple from Barbados &hellip; Johnathan and Ann?\"\n\n\"Yes &hellip;.\"\n\n\"Well, as it turns out, they weren't just her slaves; they were her webmasters.\"\n\nI shook my head. \"Wait a minute. Willie acted as if she'd never even seen a microwave oven before. Are you telling me her 'Auntie' was a psychic on the World Wide Web?\"\n\n\"When I first started figuring this out, I asked her about the conditions on her island,\" Brenda told me. \"She said that Ann was a very good cook, but that she never used any of the true modern conveniences in her kitchen. And she told me that her aunt never allowed a television in her household &hellip; but that there was a radio. And she told me that there was a computer in Jonathan and Ann's house, the servant's quarters, but that she was never allowed to use it, just as she was never allowed read to books.\" I was stunned at this revelation.\n\n\"And now, after several hours of searching, I've found their web site,\" Brenda continued. \"It's a nice looking site. Very professional. And Freddy &hellip; I think you'd better hold on to your hat &hellip; her aunt is alive!\"\n\n\"What?!\"\n\n\"Not so loud, Darling,\" she chided softly. I looked down the hill at the girls, but they obviously hadn't heard me. Brenda took a breath and went on. \"The web site's main page explains that 'Auntie Griselda,' has been 'very ill' for the last ten months due to an 'accident,' but she is now ready to begin her 'training sessions' again. There's an email address &hellip; and a telephone number.\" She was quiet then, holding my hand, which I'd laid against her right breast. \n\nI was utterly stunned. My mind was in turmoil. I glanced down the slope at the exotic, white-haired young woman. I felt a tingle in my loins that I'd come to believe would be there for the rest of my life, every time I looked at her. But it was more than the sexual attraction. I was really in love with the girl.\n\n\"I'll have to call her,\" I said dumbly.\n\n\"Yes,\" Brenda said softly.\n\n\"We'll have to tell Willie, of course,\" I intoned.\n\n\"Yes.\"\n\nI paused a long, long moment, and I felt my weaknesses overwhelming me. \n\n\"Brenda, I can't lose her. I &hellip; we &hellip; we can't! I won't give her up!\"\n\nAnd Brenda hugged my arm against her chest. \"Oh, Freddy! You're such a silly goose sometimes!\" She snuck a peek at me over her shoulder, and she was smiling at me &hellip; that sexy, infuriating little smile she has. She was quiet for a minute. She turned back around and snuggled back against me. \"Do you trust me, Freddy?\"\n\nI sighed. \"Yes, of course I do,\" I replied honestly.\n\n\"You know that sometimes &hellip; well, sometimes I'm just &hellip; right about things. Emotional things, I mean. It's just a feeling, I guess &hellip; intuition, maybe. You don't have to believe it's something beyond the ordinary. It's something that just &hellip; IS.\" I didn't say anything, and she went on. \"So when I tell you this, I'm just going to ask that you trust me, okay?\"\n\nI took a breath. \"Okay.\"\n\n\"Willie is one of us now. She loves you completely. Totally. And she loves me, too. And Dee, obviously.\" We both looked down the hill toward them. \"In all of the places in all of the world &hellip; THIS is one she loves the most. She will NEVER leave us. Never. And you must never question that. Her dedication to you is absolute. And your dedication as a Master must be equally strong. As long as you are here to guide us, we will always be here to follow. Now and forever.\"\n\nShe had rarely given such a serious speech, and I was moved. I was also convinced, and I relaxed again. She seemed to sense it, and relaxed against me, as well.\n\n\"I'll call &hellip; Auntie Griselda this evening &hellip; though I know what she's going to say.\"\n\nShe perked up at that. \"What?\"\n\n\"She's going to say the same thing all psychics say when you phone them,\" I explained. \"She's going to say: 'I knew you were going to call!'\"\n\nShe groaned at that, and then we were quiet for many long minutes, comfortable, happy, satisfied. Once again, I thought about how my life never seemed to settle down. Just when I thought some sort of equilibrium was starting to develop, something came along to spice things up a bit. Now, even if Brenda was completely correct about her wanting to stay with us forever, I would feel obligated, at the very least, to travel with Willie to her tropical island for a reunion with the \"auntie\" she had loved so much all her life, and who was now almost literally back from the grave. And if I DID give in and start believing in this psychic shit, then that made the upcoming trip even more exotic. Was \"Auntie\" really a succubus? Was I doomed to fall under her thrall at our first meeting? Would Brenda and Dee (and the baby!) make the trip with us? (Well, of course they would!) \n\nEquilibrium was just as far away from my future as it always had been. Adventure continued to threaten our daily lives.\n\nDown the hill, Willie (who now sported a pair of thick glasses I'd bought her to read with) paused, held up the book, and pointed to a word. We couldn't hear them, but we saw Dee glance down and respond, giving her the word she couldn't comprehend. Willie nodded and continued reading.\n\n\"I walked in on them yesterday,\" Brenda said quietly. \"They were in Dee's room, and I wanted to ask Dee if I could get her anything at the store while I was out.\" She paused for a long moment.\n\n\"Walked in on them?\"\n\n\"Willie has &hellip; well &hellip; she's sort of found her &hellip; her position in the family.\" Another pause.\n\n\"Ah,\" I said, understanding. \"And you're not too happy about it.\"\n\n\"Oh, no &hellip; it's really not that &hellip;.\"\n\n\"You're top banana,\" I guessed. \"And you don't want to be.\"\n\nShe sighed. \"I'm certainly the number one wife in the harem,\" she admitted. \"I wish we could all just be &hellip; equal. But that's really not possible, is it? I mean, Dee's place is obviously the lowest. She's ALWAYS going to be the most subservient. And now, Willie's finally figured that out &hellip; figured out that Dee needs to be ordered about, I mean &hellip; and that she needs to be humiliated sometimes.\"\n\n\"What were they doing?\" I asked. \"Yesterday, I mean.\"\n\nShe shrugged, and then oddly shivered a little. \"They were making love.\"\n\n\"Tell me,\" I ordered.\n\nPause. \"Well, they were naked, of course, and Dee was lying on her back on the bed, her head on her pillow &hellip; and Willie was on her knees, with her whole body pressed against the headboard, her face toward the wall. She'd spread her legs far apart, and put a knee on either side of Dee's face, and she was &hellip; she was grinding her &hellip; her pussy into Dee's mouth. Dee was holding onto Willie's butt, and she just laid there, licking and licking. I couldn't even see her face. And then &hellip;.\" She shivered again. \"And then &hellip; Willie realized I was there, and she turned around and looked at me. We locked eyes, and I just stood there, looking &hellip; looking &hellip;.\"\n\n\"Yes, go on.\"\n\n\"She turned back away, and she looked down between her knees, and she said something to Dee. I couldn't hear what it was. But it was a command. An order. And suddenly &hellip; suddenly &hellip; I WAS Willie. I mean &hellip; I could feel &hellip; feel &hellip; EVERYTHING! My body was small, and slender, and &hellip; and firm. And my breasts were &hellip; small and &hellip; and &hellip; my nipples! Oh, Freddy, my nipples were LONG and hard, and they were rubbing, rubbing against the hard wood of the headboard. And it was driving me CRAZY! And Dee wasn't just licking &hellip; she was sucking; sucking on my clit. And my clit was so LONG and hard, and it didn't feel like MY clit at all! And I thought: Dee has done this! Dee has put me into Willie's body! And usually, I'm just sort of along for the ride, you know? I mean, when Dee has done something to me before, I can just sort of feel what she feels &hellip; like sharing, you know? But this time &hellip; this time, I WAS Willie.\"\n\nShe shivered again. \"And then &hellip; and then the orgasm just hit me. And I mean it hit me hard! It didn't build up and up and up, like mine does. There was no warning! It knocked the breath out of me! And Dee stopped sucking on me and started licking me &hellip; licking me like crazy! And I felt my pussy clench and couple of times, and then I felt the fluids inside me just gush out! I couldn't control it! I squirted! And I ran my fingers in Dee's hair, and I was coming and coming! And then &hellip; and then &hellip; and then I was sitting on the floor by the door, and I couldn't catch my breath for a minute, and I put my hand between my legs because I KNEW that I'd left a big puddle on the floor, but there wasn't any, although my panties were really wet &hellip; the way I get &hellip; you know &hellip; the way I get sometimes. But there wasn't a puddle, and I couldn't understand where it had gone &hellip; my juices, I mean. But they'd gone all over Dee, of course! Because it had been Willie all along &hellip; but &hellip; oh golly, Freddy! It was amazing!\"\n\nShe was breathing hard and I could sense the emotion in her scantily clad body. I let her calm down. I knew she wanted me to comment, but I didn't trust myself. This &hellip; this hysterical fantasy was running rampant among the three of them. Yet, I argued with myself, it didn't seem to be doing any real harm (except for giving me a raging hard-on while I was trying to maintain a modicum of decorum). Let them entertain themselves with their delusions! And they were just delusions &hellip; weren't they?\n\n\"What did you do then?\"\n\n\"We cleaned Dee up using warm washcloths,\" she said. \"And I took off my clothes, and then we just lay down on either side of her, and we touched her and held her and sucked on her big, fat nipples, and we stroked her, and finally we made her cum.\"\n\nShe turned her head and looked into my eyes. She suddenly looked guilty. \"There's something I need to tell you, Freddy.\"\n\nOh oh. \"What?\"\n\nHer eyes shifted. She was trying to work up the courage for a major confession. \"Well, you know how horny Dee has been lately &hellip;.\"\n\n\"Yes.\"\n\n\"And you know how sensitive her breasts are? And how much she likes it when someone sucks on her nipples? I mean, a few times, I've made her cum just by nibbling and sucking on her tits, you know? And so we suck on them &hellip; a lot. And Willie and I were just trying to please her &hellip; because we love her so much, you know?\"\n\n\"What is it, Brenda? What's happened?\"\n\nShe stole another look at me. \"Her milk has come in early, Freddy.\"\n\nI blinked. \"What?\"\n\n\"She's lactating.\"\n\n\"Um &hellip; Is that a problem?\"\n\n\"Well, no. I've read about it on the internet and in a couple books I've bought. It's not a problem, but we shouldn't let it stop. For the baby's sake, I mean. But &hellip;.\"\n\n\"But what?\"\n\nShe looked away again. \"Well, when we take her into the delivery room next week, the doctors and the nurses &hellip; they're going to notice, of course. And they'll just naturally assume &hellip;.\"\n\n\"That I did it!\" I groaned.\n\nShe laid her hand on my knee. \"Poor Freddy.\" She was silent for a long moment while I stewed. \"But you ought to try it!\" She turned and looked at me again. \"It's &hellip; it's &hellip; sweet, and it tastes &hellip; good! And she really likes it, because it turns her on; but that embarrasses her, of course. And that just turns her on even more!\"\n\nI mumbled a grumble, and she laughed and just snuggled back against me. I sighed a few times, but finally we just fell silent and let the warmth of the lazy afternoon lull us. For five full minutes we said nothing at all; just looked down the hill at Willie (who looked like a million bucks in her dark blue, skimpy halter-top bikini) and Dee (who looked like &hellip; well, like a very pretty, VERY pregnant girl in HER dark green, skimpy halter-top bikini).\n\nFinally, I broke the silence. \"Brenda, this isn't &hellip; normal.\"\n\nShe turned and looked up at me. \"This?\"\n\nI made a gesture that I meant to take in everything. \"This. Us.\"\n\n\"Us? You mean &hellip; WE aren't normal?\"\n\n\"Well &hellip; yes.\"\n\nShe seemed lost in thought for a few seconds. \"Let me get this straight,\" she said in her best scientific-sexy voice. \"I mean &hellip; for the record, here &hellip;.\" She paused again. \"I fell in love with you the first time I laid eyes on you, but you didn't ask me out for two years!\"\n\n\"Well, I &hellip;.\"\n\n\"Don't interrupt!\" she snapped playfully. \"And when you finally DID ask me out, you turned me into your love-crazed hypnotic sex slave the very first night!\"\n\n\"Well, I mean &hellip;.\"\n\n\"Hush, darling! I'm on a roll!\" She slapped my knee gently. \"So you fed me and bed me and eventually wed me. And the very first real girl friend I found after getting married, I decided to try and convince you to sleep with her and turn HER into your love-crazed hypnotic sex slave, too. And you put up a valiant fight, and then you practically fell all over yourself quickly doing exactly that.\"\n\n\"Uh &hellip;.\" \n\n\"But AH! What do you know! Even though neither of us had ever had a single homosexual thought in our collective pretty little heads, we suddenly found ourselves in deep and overwhelming lust with EACH OTHER! We found it simply impossible to keep our young hands off of one another &hellip; or off of you, of course!\"\n\n\"Well, but &hellip;.\"\n\nShe held up warning finger, and continued. \"Until &hellip; I come up with the idea that my friend would be much happier in life if she was carrying YOUR baby! And, of course, you put up another gallant fight, and you resisted with all of your strength &hellip; for a minute or two, and then you both made like a couple of bunnies for a few months, and suddenly our family was in a family way!\"",
        "\"But &hellip;.\"\n\n\"But WAIT! There's MORE!\" she said, mimicking a TV commercial. \"Because my friend and I (drum roll, please!) found ANOTHER friend! And after ANOTHER gallant fight, you turned HER into your love-crazed hypnotic sex slave, as well! And what do you know! SHE's bisexual, TOO!\"\n\n\"Well &hellip; um &hellip;.\"\n\nShe suddenly leaned back and kissed me on the lips. \"And we couldn't be happier,\" she concluded. She turned again and settled herself back against me. \"Now, how could you possibly say that we're not normal?\"\n\nI smirked, but she was facing the other way and didn't see me, so I just remained silent for a long time. She might have thought she'd overdone the sarcasm a bit, because after awhile she took my hand and started playing with it idly. Finally, she raised it to her lips and kissed my palm. \"Oh, Freddy, I love you so much,\" she whispered.\n\nI'd been thinking about something for a long while. I finally determined that this was the time. \"Brenda?\"\n\n\"Yes?\"\n\n\"A couple months ago, did you take Willie into my office without permission?\"\n\nShe suddenly looked down the hill at the girls. \"Why, the little snitch!\" she said accusingly.\n\nI was silent for a moment. \"I'm going to punish you, Brenda.\" \n\nIt was her turn to pause. \"What are you going to do to me?\" she asked quietly.\n\n\"Anything I want.\" She said it along with me and laughed. One of our little private jokes.\n\nBut then she was quiet again. And this time when she spoke, it was in a timorous whisper. \"What are you going to do to me?\"\n\n\"Well, first of all, I'm going to turn the bunch of bananas over.\"\n\n\"Huh?\"\n\n\"Just as soon as Dee is feeling up to it &hellip; a few weeks after the baby's born, we're going to start having our 'Naked Dee Days' again.\"\n\nBrenda nodded. \"She's really missed that. She'll like playing the role of the naked, helpless, total-submissive again.\"\n\n\"Yes,\" I continued. \"Once a week, just like we used to. But now, once a month, on a special day, YOU will play that role. You won't be top banana anymore. And just for that one day, you'll be firmly on the BOTTOM of the heap. Just like Dee. Naked, helpless, obedient, subservient, submissive. For the whole day &hellip; the whole night. You'll do exactly as you're told. By ALL of us.\"\n\nHer breath caught. She turned and looked at me. Her eyes twinkled. \"Is THAT my punishment?\" she asked, a cute little smile curling the corners of her lips.\n\n\"No, that's just the way it's going to be in the future.\"\n\nShe was silent for many long seconds. \"How about Willie? I she going to get to play our little game, too?\"\n\n\"Sure,\" I responded. \"But let's give her a chance to get used to it. I'll let her ask me first. When she does, I'll assign HER a day of the month, too.\"\n\nBrenda's chest heaved slightly as she considered this. Finally, she spoke again. \"And what's my punishment?\" \n\n\"I'm going to give you a command,\" I told her sternly. \"And when you hear it, you will not argue. You will not question. You will not complain. You will not try to talk me out of it. You will not comment.\"\n\nShe twisted her slender body and looked, puzzled, into my eyes. Then she turned once again and settled back into me, picking up my hand and playing with it, running her fingers along mine.\n\n\"You will not argue,\" I repeated. \"That's your punishment. Do you understand?\"\n\n\"Yes Freddy.\"\n\nI let her worry for another minute. \"Have you taken your birth control pill today?\"\n\n\"Yes &hellip;.\"\n\n\"That will be your last one for a long time,\" I told her firmly.\n\nShe twisted again and looked up at me. \"Freddy &hellip;.\"\n\n\"Ah ah!\" I said warningly, holding up a forefinger for silence.\n\nShe opened her mouth, and then shut it again. Then she sat up and spun around so that we were sitting side by side. Her hands were in her lap, her head down. She sat that way for a long minute and finally looked back up at me questioningly.\n\n\"I'm going to make you pregnant, Brenda,\" I told her flatly. \"Even if it happens right away, there would be nine months between children. Enough time to quell any suspicious doubts among our kids later in life.\"\n\nShe was thoughtful and quiet for a long minute. She stared down the hill at the other girls. \"I could never look as good as Dee does,\" she said morosely. \"I'll be fat and ugly, and I'll waddle like a duck!\"\n\nI couldn't help barking a laugh. \"You're going to make a beautiful mommy,\" I told her. \"And, oh Brenda, you're going to love it! When we're making love, it's always going to be in the back of your mind: 'This could be the time! It could be happening right now!' But you can never really be sure. And when we're finished, and we're lying next to each other, catching our breath; you can't help but wonder &hellip;.\"\n\nUnconsciously, she put her right palm against her bare midriff. \"Pregnant,\" she murmured. And she was quiet again, lost in thought for many long seconds.\n\nAt last, she uttered a single, whispered exclamation:\n\n\"Golly!\"\n\nFIRST EIGHTEEN SECONDS OF A TELEPHONE CONVERSATION &ndash; \n\nTUESDAY, OCTOBER 11<sup>TH</sup>, 8:20 PM\n\n\"Hello?\"\n\n\"Um &hellip; Is this &hellip; um &hellip; Auntie Griselda?\"\n\n\"Yes. Who is this, please?\"\n\n\"My name is Frederick Fielding. I'm calling from the United States.\"\n\n\"Yes? What can I do for you Mr. Fielding?\"\n\n\"Well, I'm calling on behalf of Willie. You see, I'm sort of a special friend of hers, and until just today, I was under the impression that you were &hellip;. That is, we thought you had been &hellip;.\"\n\n\"Ah, yes, of course. I've been expecting your call, Professor.\"\n\nIT IS MY PLEASURE TO ANNOUNCE &hellip;\n\n&hellip; the birth of my daughter, Elizabeth Ann Fielding, seven pounds - three ounces. Born Tuesday, October 18<sup>th</sup> at 2:05 pm. Mother and daughter are doing fine.\n\nThe time of birth may raise questions among those of you who are of a scientific and conservative mind. I've given it some thought myself, and I've developed a hypothesis. Dee has always been exceedingly suggestible. Do you think it might be possible that the onset of labor could be psychosomatic?\n\nTHE END"
    ],
    "authorname": "blacknight99",
    "tags": [
        "hypnosis",
        "hypnotic slavery"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-addicted-natural-ch-16"
}