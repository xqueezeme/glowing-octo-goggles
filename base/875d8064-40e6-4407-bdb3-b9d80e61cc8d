{
    "title": "Quaranteam Ch. 23",
    "pages": [
        "The next morning, Andy woke up to a bed far less filled, although certainly just as appealing. Niko had needed to go to the base for the day, so she'd gotten up early, and Aisling had decided to have a nice early day as well, planning to FaceTime her family back in Ireland. That left him sandwiched between Emily and Sarah, who had immediately closed ranks and tightened in on Andy as soon as there was space available.\n\nBoth of them were awake around the same time that he was, and he awoke to Emily nibbling on one of his ears, Sarah nibbling on the other, each of them smoothing a hand across his hairy chest. \"Good morning, Andrew,\" Emily whispered.\n\nAndy shook his head. \"Nobody calls me Andrew unless they're mad at me.\"\n\n\"We're a little cock mad,\" Sarah giggled. \"Does that count?\"\n\n\"I have to meet Hannah today, and she may want to join the family, so I don't know if I really should.\"\n\n\"I'm not sure you could distract us even if you wanted to, Mr. Rook.\"\n\nHe grinned a little bit. \"I could distract one of you pretty easily.\"\n\n\"I somehow doubt that,\" Emily said, \"but you're welcome to try.\"\n\nAndy sat up, and slid out of the bed, a smug look on his face. \"Sarah. In the basement living room, the big one with all the couches, there's a box off to the side with the letters ARC on the top. That's got the advance reader copies of 'The Doppleganger's Dilemma,' the next Druid Gunslinger book that's going to finally come out in December. If you want, you can--\"\n\nHe didn't even get to finish the sentence, as Sarah was already darting out of the room in her silk negligee, sprinting towards the stairs, giggling ferociously.\n\nAndy turned to look at Emily, who rolled her eyes at him with a matching amused smile. \"Touch\u00e9, Mr. Rook,\" she said to him, \"touch\u00e9.\"\n\n\"How fast does she read?\"\n\n\"She'll be done with it before dinner, I'm sure, but she may forget to eat lunch.\"\n\n\"Good lord, what have I done?\" he laughed.\n\n\"Made her very very happy,\" she said, before looking over at the doorway, seeing Nicolette standing there. \"Looks like someone wants to talk to you.\"\n\nAndy waved, grabbing a pair of boxer shorts, tugging them on as well as a t-shirt, before walking over to talk with Nicolette, who was, as always, rocking her maid's outfit. \"Hey Nicolette, what's up?\"\n\n\"Might I speak with you for a couple of minutes, Master?\" she said, her hands folded together nervously.\n\n\"Hey, I told you, you don't have to call me that,\" he said, placing a hand on her shoulder.\n\n\"But I *like* calling you that, Master.\"\n\nHe shrugged. \"Fair enough. Let's walk and talk. I'll see you downstairs in a bit, Em?\"\n\n\"Naturally,\" Emily said, hopping out of bed, heading towards the bathroom.\n\nAndy and Nicolette started walking down the lavish hallway, although Andy did notice she was staying a step or two behind him. It was her decision, and he knew he was going to have to get to used to it, but it still felt weird to him. \"What's on your mind?\"\n\n\"Well Master, the rest of the staff and I were talking, and we would like, with your permission, to remain a bit more distant with the family,\" she sighed. \"I know you're trying to make Jenny, Katie and I feel like family, but we very much want to keep our emotional distance from the family, sir, and being invited to dinner felt like a step too far. Katie and Jenny didn't know how to broach the subject with you, and suggested I talk to you, so you understand that we do not mean any malice or discontentment by it, simply that we want to keep that level of detachment.\"\n\n\"I understand why Jenny and Katie want that,\" Andy said, \"but you do as well, Nicolette?\"\n\nShe looked up at him and smiled shyly. \"Look, Master. I know you're still adapting to all of this, but this *is* what I want. I don't want you to think of me as a partner. I get off on being submissive and subservient. That turns me on in ways I cannot even being to explain. In fact, the next time you want to gift me with your seed, you should just bend me over, flip up my skirt, tug my panties aside and fuck me without so much as a word. I would find that incredibly stimulating. In fact, I've envied the treatment that Taylor has gotten over the past few weeks more than a little. I had hoped the fact that I prefer calling you Master would've conveyed some of that to you, but it hasn't, so I'm going against my nature and trying to be more direct so you know that treating me as a piece of meat isn't just acceptable, it's *wanted*, even desired. In my free time, I'll take care of my personal life, and my own mental needs, but it's very important to me that you understand this isn't something forced upon me; it's of my own choosing. Whenever you are feeling like you want to let your dominant streak out, you should think of me first, if none of your wives are in the mood. You cannot be too rough or forward with me. Because that is what I want. Is... is that okay?\"\n\nHe stopped and gave Nicolette a firm hug. \"Of course it is. I don't think I realized quite how much it was bothering you, being asked to straddle that line between family and functionary, but now that I know, I can make sure I reserve my most forceful side for you and Taylor.\"\n\nShe let out a deeply held sigh of relief. \"Oh thank you, Master. I was so worried it would upset you. Because while I love when you fuck me, I'm much happier sleeping alone in my own bed.\"\n\n\"No worries, Nicolette. Now I know.\"\n\n\"Yes Master. Thank you, Master.\"\n\n\"You know, I didn't see Sheridan at all the last couple of days. She wasn't at lunch or dinner yesterday. To be honest, in the chaos of the last few days, I sort of lost track of her, and I feel bad. I need to talk to her and let her see about getting imprinted.\"\n\n\"Oh, I don't think you need to worry about her, Master,\" Nicolette said. \"I saw her Tuesday evening and told her about your loss, and she said she didn't want to intrude.\"\n\n\"Sure, but she still should've joined us for dinner last night, at the very least.\"\n\n\"Well, yesterday around lunchtime, she was complaining to me about starting to feel, ahem, the *need*, starting to gnaw away at her, so I gave her something to tide her over.\"\n\nAndy suddenly felt the pit drop out of the bottom of his stomach. \"What do you mean?\"\n\n\"Well, the rest of the staff and I have kept a bit of your semen bottled up, so we can use it to take the edge off in weeks where you're particularly busy, so I gave Sheridan a bit so she could sip.\"\n\n\"*FUCK!*\" Andy shouted. \"Which room is she in?\"\n\n\"She's the last room down on the left,\" Nicolette said, nervousness growing thick in her voice again. \"Should... should I not have done that?\"\n\n\"She hasn't been imprinted yet, so basically you primed the process but didn't give her enough for the imprinting to start.\" Andy had heard from Phil a number of times, over and over again, how important it was to imprint someone quickly after letting them get primed, but Phil hadn't been specific about what would happen if he didn't. Andy had never thought he'd need to find out. \"Christ, she's probably out of her fucking mind by now with need. It's going to be Piper all over again.\"\n\nPiper poked her head out of her room as Andy and Nicolette were walking by, heading towards Sheridan's room. \"Did I hear my name?\" The brunette was wearing a cutoff t-shirt and a pair of loose shorts, clearly still in her morning workout gear.\n\nAndy stopped and turned back to look at her. \"Look, I get that I have no right to ask you this, but I may have a woman in some distress and could probably use a hand, if you're okay with that.\"\n\n\"What kind of distress?\"\n\n\"The kind you were in when I first met you a few days ago.\"\n\nPiper nodded solemnly. \"You need someone to help you hold down a fuck delirious woman for her own good, got it. Let's go.\"\n\n\"Don't hurt her,\" Andy said. \"She's not going to be thinking clearly.\"\n\n\"Is it really all that bad, Master?\" Nicolette said, as they reached Sheridan's room, the door closed shut.\n\nAndy opened it, and Sheridan lay in the center of the bed, completely naked, the bed sheets shredded, ripped to tatters, as the blonde's body writhed and squirmed, whimpering loudly. \"Makeitstop makeitstop makeitstop makeitstop,\" she kept repeating over and over.\n\nHe slowly walked across the room, trying not to make any sudden movements, Piper flanking him to one side, Nicolette to the other. \"Easy, Sheridan, I'm here now.\"\n\nSheridan's head whipped suddenly at the sound of his voice, and he could see her lips were dry and cracked, as if she'd been licking them for days. \"Andy. ANDY. You have to fucking fix this, dude,\" she groaned. \"It's like a horrible itch all over my fucking skin and I can't sleep and I can't think and I can't even walk and if fucking hurts so fucking much...\"\n\nThe room reeked with the scent of her arousal. Piper gasped as they got close enough to see that Sheridan had scratched herself up pretty good, tiny red gashes on her skin along her arms, thighs and belly. Andy was almost nervous to touch her, but Sheridan reached for his hip as soon as he was within arm's length, pulling him closer to her. Her skin was warm to the touch. \"Fix this, Andy. Fucking do whatever it takes. Fix this or fucking kill me already.\"\n\n\"Whoa!\" Andy said loudly. \"Nobody's killing anybody.\"\n\n\"I haven't slept in a whole day, Andy,\" she moaned. \"And I can't get myself off. It's like I'm stuck on the edge and I can't get myself to cum, and that's not fucking fair. Am I broken?\"\n\n\"You're not broken,\" Andy said, slowly peeling his shirt over his head. \"When you got a sip of my cum from Nicolette's flask, it primed you for imprinting. That's the first taste of male cum you've had since you got the vaccine. The priming, that's supposed to be done literally *right* before you get imprinted, but she didn't know that, so you've been primed and waiting for your imprinting to begin for much longer than you're supposed to.\"\n\n\"Well fucking fix it, dude! Fix it! Fix it fucking now!\"\n\n\"I'm going to, Sheridan,\" he said, slowly sliding his boxers down, leaving him bare. His cock wasn't hard, but he was going to have to make sure it got there quick, because the longer Sheridan went without, the more aggressive she might become. \"I just don't want to hurt you.\"\n\n\"Nothing you could fucking do could be any fucking worse than this, dude!\" she hissed angrily. \"It's taking every bit of willpower I have not to scratch my own fucking skin off!\" When he stood up after taking his boxers off, her eyes finally got sight of his cock, and she locked onto it like a predator after its prey. \"Gimme that dick right fucking now.\"\n\nShe reached up and grabbed onto his cock, and thankfully Piper lunged forward to make sure Sheridan wasn't squeezing too hard. \"Don't hurt him,\" Piper chided, \"or he won't get hard and fuck you.\"\n\n\"Here, I'll make it very easy for you, Andy,\" Sheridan said, scooting herself on the torn sheets, moving to the edge of the bed. She lifted her right leg and pulled it back, folding her ankle behind her head, before grabbing her left leg, lifting it as well, folding it as well behind her head, her small pierced tits framed between them. Her body rocked a little bit, trying to thrust her hips upward. \"Just shove right into that tight little cunt until you give me what my body so desperately needs.\"\n\nAndy was beginning to harden up, but then felt a hand slowly stroking his cock, looking over his shoulder to realize it was Piper, her calloused fingers sliding up and down it, the athlete doing her best to help get him into a state to help Sheridan. \"Was I this bad?\" Piper whispered into his ear.\n\n\"Worse. You hadn't been primed, and you'd been given the vaccine much earlier, so it had a different effect on you. You weren't even verbal,\" Andy told her. \"You couldn't form sentences, and you were a lot more aggressive.\"\n\n\"I'd be more aggressive if everything didn't hurt so fucking much,\" Sheridan grumbled. \"I wanted to be in menopause before I started having fucking hot flashes. C'mon, don't you just wanna plow me already?\"\n\nPiper's hand moved down to caress his balls, her other hand smoothing along his hairy chest. \"You can't possibly leave her like this, Andy,\" she said to him. \"Be her white knight. Save her from this demon that's consuming her.\"\n\n\"Pick a hole and shove it in, you fucker,\" Sheridan growled at him. \"I don't even care which fucking one, as long as this heat fucking stops. I'm fucking dying here, dude.\"\n\n\"Nicolette, hold her hand will you?\" Andy said, as Piper started guiding his cock closer to Sheridan's utterly drenched snatch. \"When someone's primed for just a couple of minutes, this makes them cum so hard, they nearly pass out. I'm scared of what it might do to her.\"\n\n\"Ohmygod!\" Sheridan shouted, her face contorted in a tortured visage of strained need, her teeth bared at him. \"Stoptalkingandstartfucking!\"\n\nNicolette moved up onto her knees on the bed, sliding behind Sheridan, grabbing the wounded girl's hands with her own, both of them holding onto Sheridan's thighs, as Andy lined up the head of his cock and thrust forward.\n\nAs soon as the first inch or so was inside of Sheridan's cunt, he was genuinely afraid she might crush his cock with her pussy walls, clamping onto him so hard he couldn't move, holding him in place, her body seized up, her eyes rolled back into her skull so that all Andy and Piper could see was whites, her tongue hanging out of her mouth, drooling on herself for a few seconds. After what felt like an eternity, just as Andy had realized she'd stopped breathing, Sheridan inhaled a sudden gasp of air and her snatch relaxed. Andy reflexively started to try and pull back, but Piper behind him pushed him forward instead, forcing him even deeper inside of her, as an unholy gurgle started burbling on Sheridan's lips, some guttural, desperate noise rising out of her, turning from a terrifying sound to a mirthful one, going from almost zombie like groan into uncontrollable giggling fit. She was wet like a swamp, soaked and heated, a tropical musk dripping onto his balls and down his thighs.\n\nSheridan's blue eyes finally rolled back down and she pulled her tongue back into her mouth, drawing a gaze to focus on Andy's face before she started nodding maniacally, her smile an insane delirious grin. \"Well? The fuck you waiting for, dude? An invitation? Here's one. Ball me harder, you sex god. Destroy my fucking cunt. Plow my pussy so hard I write a fucking book about it. That eased some of the tension off, but I'm a greedy bitch, and I know you're not done yet, because I'm not passed out doing that mumbling thing Nicolette told me about, and I fucking want that, oh god I want that so fucking bad right now, I fucking need it so fucking much. You can't fucking leave me unfinished you asshole, you magnificent bastard, you thick dicked lothario. You've gotta fucking rail me already. DO IT! FUCK ME!\"\n\nAndy was worried about the effects of what had been done to her, but at this point, he was more worried the longer she went without getting imprinted, so he knew he needed to crack on, and pushed his hips forward until his cock was buried deep inside of her, another carnal moan filling the air in sharp relief.\n\n\"That's it! Give it to me!\" she shouted, trying to arch her buck her hips up a little bit against him, as he drew back and then thrust forward again, and each time he did, her whole body trembled, like she was having an orgasm each and every time he slipped back inside of her cunt.\n\n\"She's gotta have it, Andy,\" Piper whispered into his ear. \"Do it. Let me see what it looks like when you claim somebody.\"\n\nThere was a husky wanton tone to Piper's voice that he hadn't expected, and that was more than enough to push him over the line, as he shoved his cock deep into pussy, that load blasting from him inside of her twat sending her spiraling into a hurricane of orgasms in rapid succession, one after another after another after *another* before they all sort of blended together and she finally slumped back, her legs sliding from behind her head and flopping forward, her arms splayed wide, her body as limp as could be on her bed, her resting against Nicolette's thighs.\n\nThe blonde maid moved to slip back and laid Sheridan's head down onto a pillow, moving to pull a sheet up and over her very sweaty naked body. \"I'll be right back, Master,\" she said, heading towards the bathroom. \"I'm just going to get some bandages and rubbing alcohol for all her scratches.\"\n\nSheridan's face had a dopey look on her face, as she mumbled 'imprinting' over and over again. Andy was so caught up in making sure she was alright that he hadn't even noticed as Piper had moved around him and knelt down, moving to lick his cock clean.\n\n\"You don't have to--\"\n\n\"Oh, I know I don't,\" Piper said, \"but I want to. Not to release, but just a little bit to clean you off. Just a taster's choice.\" She grinned and gave his cock a thorough tongue bath more than a blowjob, and was finishing up when Nicolette came back into the room, although she continued while Andy and Nicolette spoke.\n\n\"Once again, Master,\" she said, as she pulled the sheet down and began to swab Sheridan's scratched arms and legs, \"I am so very sorry that I caused this.\" The poor girl looked like she was about ready to cry. \"I didn't know. I swear I didn't know...\"\n\n\"Hey hey hey, it's okay, Nicolette,\" Andy told her, placing his hand n her shoulder. \"I should've said something, and so it's just as much on me as it is you. We live, we learn, we move forward. And I'm sorry I made you, Jenny and Katie feel uncomfortable bringing you to the dinner table with us. I'll respect those boundaries better moving forward, and while I know you dislike having to be forward with your wants and needs, I am ordering you to tell me when you have a need that isn't being fulfilled, so I can address the problem. You *will* tell me. You will not hesitate or debate. It will be done. Even if it's something as simple as 'I haven't gotten any attention lately, and could use some.' That will be enough for me to understand there's something to be redressed and I will handle it at my earliest convenience. Understood?\"\n\nNicolette smiled a little shyly. \"Yes Master. Thank you Master.\" She licked her lips a little bit, looking up at him as she wrapped a bandage around Sheridan's arm. \"And so you know? Ordering me around like that? That's dead fucking sexy.\" She looked back down and affixed the adhesive to the bandage, making sure it was snug and tight. \"One limb down, three to go. I will handle getting her wounds tended to and put her to bed, Master. I'm skilled in first aid.\"\n\nAndy leaned down and pressed a kiss to Nicolette's forehead. He could feel her shiver at the gesture. \"Thank you, Nicolette. And I won't forget what you said about just flipping up your skirt and having a go at you at some point.\"\n\nPiper finally released his cock from her mouth and stood up, smiling broadly at him. \"Same goes for me. After dinner last night, I definitely want to be part of this family. Maybe not as a wife, but maybe, we'll see, I think.\"\n\nAndy pulled his boxers back on, then his t-shirt. \"Well, it's entirely up to you, obviously. Take your time, get to know everyone, me included, and we'll play it by ear moving forward.\" The two walked out of the room, leaving Nicolette to tend to Sheridan.\n\n\"Everyone's so warm and friendly, and you're not at all like that prick Covington.\"\n\n\"I did try and tell you that in the letter.\"\n\n\"And that's another thing! An honest to god letter, explaining everything for me before I even came out to talk to people. Who does that sort of thing?\"\n\n\"A writer, clearly,\" he chuckled.\n\n\"It was a very good letter. But I think it was Niko and Ash who convinced me that everything would work out for the best,\" she said, hooking her arm into his. \"They're still a bit worried about you, but I told them that grief is a monster you kill with a million tiny cuts, not one big one.\"",
        "Andy nodded. \"It gets the better of us all sometimes. But you're getting along with the ladies alright?\"\n\nShe swatted his arm with her calloused fingers. \"They're lovely, and Niko was nice enough to fill in all the details that your letter left out. I'd apologize for my first impression, but clearly that was that bastard's fault and through no fault of my own. If I had my way, I'd have been at the Olympics right now, but they're obviously being delayed until next year.\"\n\n\"Then you should definitely not stop training,\" Andy told her. \"Just because you're here right now doesn't mean you aren't going to get that chance next year. Talk to Jenny, let her know the kinds of dietary specifics you have for your meals, and then get back into the swing of things. Lauren's a trainer for the 49ers, so she can probably help you out a bit here and there.\"\n\nPiper smiled at him, waving a hand. \"I'll talk to her, but we've got the team's trainer on Zoom speed dial at this point. I just hope there's enough space around New Eden for me to work out. God, are they really calling it that?\"\n\nAndy shrugged. \"Rich pricks have pompous tastes.\"\n\n\"Speaking of which, I heard from Ash last night that you've got another girl showing up today.\"\n\nHe rolled his eyes a little bit. \"I swear, if I could find a way to monetize gossip, I'd be the richest man ever. Yes, there's another woman coming by today. One of the poker players, Nate Watkins, was supposed to bring someone over earlier in the week, but his son had already imprinted her while he was off playing poker. I told him it was fine, but he insisted his son needed to be punished for it, so apparently the son will be bringing his newest girl over for me today. Whole thing is a colossal fuck up if you ask me, but whatever. She'll probably show up, not be interested in me, and I'll redirect her back to the center.\"\n\nPiper giggled, shaking her head. \"You really don't know a thing about how people work, do you Andy? Alright then, I'm off. I need to go get changed and get a run in. You're right -- I've been going too easy on myself during the pandemic, so I need to get back out there, and a run around New Eden will give me a chance to scope out the town.\"\n\n\"There you go. Just remember to hydrate, and have fun.\"\n\nShe kissed him on the cheek and headed back towards her room, as Andy headed downstairs, going into the kitchen. He'd worked up quite an appetite this morning.\n\n\"Can I get you something, sir?\" Jenny said, cleaning up the dishes from some of the girls' earlier breakfasts.\n\n\"Yeah, can I get one of those weird French ham and cheese sandwiches you made the other day, Jenny?\"\n\nShe nodded with a smile, pushing those large oval glasses back up onto her nose. \"One croque-monsieur coming right up.\" Her oak colored hair flipped as she spun around and moved towards the fridge. \"Did you speak with Nicolette this morning, sir?\"\n\n\"I did, and I'm sorry that I made you all feel uncomfortable, Jenny. It won't happen again.\"\n\n\"We like feeling like part of the family, sir,\" she said, as she started to make the sandwich, \"but that simply felt like it was going too far. Just keep us a little at arm's length, and everyone will be perfectly content. We don't mind the girls talking with us all the time, but you're the Master of the House, and, well, we prefer it remain that way.\"\n\n\"Heard, understood and acknowledged, as my friend used to say. Oh, do me a favor and make sure Sarah eats some lunch today? You'll probably find her in the downstairs central living room, face glued to a book.\"\n\n\"Finally told her she can read your next work, did you, sir?\"\n\n\"Apparently nobody told her it was in the house until I mentioned it this morning.\"\n\n\"Very good sir. I'm sure she's having the time of her life, and she never felt like that before.\"\n\nAndy gave her the side eye, and Jenny began laughing. \"You leave the masterpiece that is 'Dirty Dancing' out of this, Jenny.\"\n\n\"Yes sir. Sorry sir,\" she said with a smile that made it clear she wasn't sorry in the least.\n\nAfter lunch, Andy headed upstairs to put proper pants on, then retreated to his study and worked adding more to the next Druid Gunslinger novel, although if he was entirely honest with himself, he was doing more editing than actual writing. The editing process was important, however, and he needed to trim some of the excess fat he'd been introducing to the story for a while. His editor had, on more than one occasion, accused him of \"flavor bloat,\" where he would write pages and pages and pages of descriptives with nothing actually *happening*, and Andy was determined not to get such feedback on this manuscript.\n\nEarly in the afternoon, Emily poked her head into his office, and the cats immediately hopped up to greet her. \"So sorry to disturb you,\" she said, her British accent ensuring she could do no such thing, \"but there's a Benny Watkins at the gate saying he's got an appointment to meet you today. Nathaniel's son I assume? Nicolette's just buzzed the gate open, so perhaps we should go out front and meet him?\"\n\nHe sighed, closing his laptop, nodding. \"Yep, let's go see what this whole mess is about.\"\n\nAs they walked upstairs, Emily peppered him with questions. \"Do you have any idea what it is young Mr. Watkins has in store for us?\"\n\n\"His father, Nathaniel, gave me a little bit of an idea, but not all that much, so I have a feeling I'm going to be just as surprised as you are.\"\n\n\"Nathaniel seemed like a rather nice man, for the short time I spoke with him. Not at all how Sarah described Mr. Vikovic.\"\n\n\"She didn't like Gregor?\"\n\n\"It wasn't that she disliked him,\" Emily said as they reached the front door. \"She just said he didn't talk very much, where as Nathaniel seemed quite pleasant and conversational.\"\n\nThey opened the front door just in time to see the Watkins family limo pulling up in front of the house. Andy felt a little bit nervous, but Emily reached up and took his hand, squeezing it reassuringly. \"It'll be fine, love,\" she said to him. \"Let the man keep his pride.\"\n\nAfter the limo parked, the driver, a large Israeli man who looked like he could kill Andy with an olive fork, moved to open the back door. Nathaniel Watkins stepped out first, a wide smile on his face. \"Ah, Andrew, so glad to see you and Miss Stevens are getting along well. I had hopes that you two would take to each other.\"\n\n\"He's an excellent man, Nathaniel,\" Emily said to him. \"I never had any doubts about that.\"\n\n\"Yes well, let me first introduce my son, Benjamin. Benny, get out here.\"\n\nBenny stepped out of the car, and Andy could immediately sense why Nathaniel wanted to knock him down a few pegs. The younger Watkins was dressed in several designer fashion labels, all expensive, but none of them matched even in the slightest. Benny's hair was cut short, and he looked like he trying to grow facial hair, but the man was too young to make a proper go of it, and it all just looked wrong. The boy was wiry more than fit. \"Hello Mr. Rook,\" the young man said, staring right at Andy with resentment.\n\nNathaniel's face made it clear that he knew this whole experience was going to be a struggle for the younger man, but also reinforced the idea that this was punishment for his son. \"Are you going to apologize to him?\"\n\n\"I'm sorry I took your woman, Mr. Rook,\" Benny said, but his tone conveyed anything but regret or remorse, almost as if he was trying to goad Andy by repeating that he'd taken something from him.\n\n\"Hannah dear, would you mind stepping out now?\"\n\nThe last person to emerge from the car was a short teenage Asian girl, dressed in an almost embarrassingly large overcoat, her dark hair in a ponytail with blonde stripes in it, an orange scrunchy holding it in place. She was shorter than both Nathaniel and Benny, around the same height as Emily, and her face had a smug grin on it. \"Oh my god, it really is Emily Fucking Stevens. Shoots. I'm totally gonna be a sister-wife with Emily Fucking Stevens. This is so fucking rad,\" the girl said.\n\n\"Now Hannah,\" Nathaniel said, \"I know you weren't particularly keen on pairing up with Benny, so let me ask you, would Mr. Rook be more to your liking?\"\n\nHannah looked Andy up and down, then nodded. \"Definitely. He's fit, he's cute, and if he can make Emily Fucking Stevens happy, I don't see how I could possibly be let down,\" she giggled.\n\n\"Then why don't you go join Mr. Rook, my dear?\" Nathaniel said, while handing Hannah an envelope. \"I'll take my coat back, however.\"\n\nHannah slowly opened the coat, and Andy suddenly understood that while the coat might have been partially for his benefit, it was mostly to rub it even further in Benny's face. Underneath the coat, she was wearing a white, orange and black cheerleader outfit that said 'WILDCATS' on the front of it. One thing that captured the eye immediately was that Hannah was very well endowed. Her tits were large, almost straining against the uniform and whatever sports bra she had on underneath. She was very much bustier than most high school cheerleaders were, but it absolutely worked for her, her legs in long black stockings beneath the surprisingly long skirt. Andy remembered cheerleader skirts being more daring in his day, but this one hung down to her knees, the stockings disappearing up within. She had a rounded face, but still seemed quite athletic, despite her incredibly well-endowed chest area, and a large silver cross hung on a chain, resting on her collarbone.\n\n\"You see this, Benny? These gigantic titties of mine I've caught you drooling over so many fucking times, you asshole? This toned ass you tried to get me to shake at you? These athletic thighs you were trying to sneak looks at? You're never gonna get any of it,\" she said as she handed the coat to Benny, making sure the boy got a good look at her in the outfit, before she skipped over to Andy, grinning the whole way. As soon as she reached him, she threw her arms around his waist and pressed her massive breasts against his side, like two pillows crowding against him. \"I'm *Andy's* tiggo biddy cheerleader slut now, you fuckin' perv,\" she said, sticking her tongue out at Benny, whose face was bunched up in frustration.\n\nBased on that look, Benny had clearly seen Hannah in this outfit many times, and fantasized about her again and again. Andy remembered that Nathaniel had said the boy had made multiple passes at her, and that she had rejected each and every one.\n\n\"I'm gonna fuck his brains out until he can't even stand upright. But you? You ain't never gonna get nunathis. I hope you fuck off and die angry.\" The girl was clearly still upset about the boy's responses when she'd continually rejected him.\n\n\"Now, Benjamin,\" Nathaniel said, \"you're going to take out that envelope I gave you earlier, and you are going to read it aloud.\"\n\nBenny reached into the breast pocket of his designer jacket and pulled out an envelope, opening it, starting to read, but not aloud, trying to scan through it as much as he could, his eyes growing wider and wider.\n\n\"It says what happens if you don't read it aloud, Benjamin,\" Nathaniel stressed.\n\nThe younger man cleared his throat and started to read, hatred seething in his voice. \"Firstly, as part of the punishment for my actions, I, Benjamin Watkins, am losing a portion of my inheritance that my father had planned for me. Active immediately, my father is hereby giving 40% ownership of Inner Light Investments to one Andrew Rook. When my father passes away, I will also receive 40% ownership of Inner Light Investments, and my father's wives will each receive 1% ownership. Secondly, as further part of my punishment, any and all educations that Hannah Nakamura wishes to receive for the rest of her life will be paid for, in full, by me, Benjamin Watkins. Thirdly, half of my two hundred million dollar trust fund is being transferred in ownership to one Andrew Rook, which he will have full access to immediately, in the form of cash, stocks and bonds. Finally, any retaliatory actions by me, my partners or my friends, against Andrew Rook, Hannah Nakamura or anyone else in Mr. Rook's circle of family and/or friends, will result in my immediate forfeiture of the rest of my trust fund to Mr. Rook, as well as all Inner Light Investments stock set to pass to me upon my father's death. Failure to read this letter aloud will be considered a retaliatory action. With this, I have paid my price in full for my transgression except for one final thing.\" He looked over at his dad. \"That's where it ends. What's the final thing, Dad?\"\n\nNathaniel Watkins then slapped his son across the face as hard as he possibly could, knocking the boy to the ground. \"There is one rule you will learn comes first and foremost in life, *boy*,\" he said, pointing a finger at the young man who had started to cry on the ground. \"You do *not* fuck with the *money*, and until you have earned some on your own, *I* am the fucking money in this house. By stealing what didn't belong to you, you have cut off one of your own legs and will have to learn how fucking precarious your situation is.\"\n\n\"But Dad!\"\n\n\"Don't you say another fucking word, you sniveling little shit. You should be *thankful* that Andrew was so understanding about this. His insistence that this didn't need to be made a big deal over is the reason you're still even *in* this fucking family. You aren't losing that money to him; you're paying it *to* him for being kind and courteous enough to *let* you keep the other fucking half of it. If he hadn't been so generous, I would've thrown your ass out of my house, my family and all of New Eden for your treachery, taking a woman who wasn't yours at any point at all. She was delivered to me, and I had promised her to Andrew, and instead, you stole from both myself and him, making me dishonor my promise to him.\"\n\n\"Dad, it was only some *bitch*!\"\n\nNathaniel Watkins slapped the boy again, just as hard, if not harder. \"For the next month, that 'bitch' is going to be your Mistress, you goddamned brat. Everything that woman, Deborah, says to do, you're going to do, and if you don't, you are fucking *done* in this family. I have clearly failed to raise you properly, and that's on me, but if there's one thing I've learned over the years, it's that you certainly do enjoy the lifestyle that you currently have, so if you want to keep even a little chance of keeping it, you are going to let her order you around like a goddamn pet. You're *her* bitch now, and if that means you have to wear a gimp suit and a ball gag for a month, so fucking be it.\"\n\n\"It's not fair!\" the young man wailed, tears running down his bruised face.\n\n\"Fair? *FAIR*?!\" Nathaniel bellowed so loudly Andrew was afraid the man would strike his son yet again. \"When I was your age, I was working three jobs to save up enough money to pay for housing while I got my education. You've never done a day's worth of hard work in your life. You've enjoyed the fruits of *my* labors, and you've spit in my eye every step of the way, so now you're going to learn what it's like to pay the cost. Get in the *fucking* car, before I change my mind and cut you out entirely.\" The boy glared up at him, but then crawled into the back of the limo, his sense of self-preservation having won out over his pride.\n\nNathaniel sighed, and walked over towards Andy, while the man's driver took two suitcases out of the trunk of the limo, clearly Hannah's things, bringing them up to the front door of the house. \"I'm sorry you had to witness all that, Andrew, but now you know what kind of trouble my boy has been to me over the years.\"\n\n\"Hey, better this than you or I having to going all John Wick on him.\"\n\nThe bearded man laughed. \"You know, at this point if you told me you were secretly a master assassin in the Before Times, I might just believe you.\"\n\nAndy laughed. \"I wasn't, but don't fuck with my cats.\"\n\n\"Ah, but that's just what a master assassin would say to throw me off the track,\" Nathaniel laughed, tapping at his temple with one fingertip. \"All of the details about the transfer is in the envelope I gave to Miss Nakamura here, and you simply need to have your finance manager contact mine.\"\n\nAndy frowned in amusement. \"I don't even *have* a finance manager, Nathaniel.\"\n\n\"Then mine now also works for you. His name is Zack Burchelli. I'll call him on the limo ride back and tell him to expect your call. He takes his fee out of your investments, so it's in his best interests for him to do well by you, and I'll make sure you get the same deal I have.\"\n\n\"Are you sure about this?\" Andy sighed, feeling a little guilty of depriving the boy of so much of his inheritance. \"I mean, we only met this week and you're just *giving* me a hundred million dollars.\"\n\nWatkins rolled his eyes, grinning. \"It's *only* money. I'll make loads more. Besides, if it helps me reshape that worthless son of mine into a decent human being, it'll all be worth it.\"\n\n\"Deb'll do that,\" Hannah said to them. \"She's baller, and putting her in charge will teach him some humility. The money'll be the carrot to her stick, but mos def she's gonna beat him *stupid* with that stick for the next month.\"\n\nNathaniel smirked and gave Hannah's head a pat. \"I told you that you'd like this one, Andrew. She's got spirit. Getting dressed up in her old Woodside High School cheerleading outfit was her idea, by the way, to really stick it Benny. As I said before, she should technically be a freshman at Stanford right now, but the university is closed until the pandemic passes. I have no doubt she'll be a cheerleader there as well. And you're fine with the last thing, dear girl?\"\n\nHannah nodded. \"It'll be dope. I'm sure Andy won't mind, and if he does, well, I'll change his mind,\" she giggled.\n\nAndy turned to look at her, and the Asian girl just beamed up at him with a toothy grin, almost daring him to ask, but he decided not to. \"You really didn't have to go to such lengths on my account, Nathaniel.\"\n\n\"Again, let me stress this, it wasn't on your account, Andrew, only to your benefit,\" Nathaniel said, shaking his hand. \"And I think I put in enough warnings that it shouldn't come back on your and yours, but if it does, well, you'll suddenly be even more wealthy, and my son will have lost everything. Oh! And before I go, I spoke to my friend over at Working Title, and they're eager to get things moving forward on a Druid Gunslinger movie, especially if you might have Sarah Washington and Emily Stevens attached for parts. They're talking possible franchise, you know, especially since you're alive and still writing more of them, because that means they won't run out of source material any time soon. That's a value-add as they say.\"\n\n\"Sarah would swallow her own fist to get that role,\" Emily said with a smile, \"so thank you again, Nathaniel.\"\n\n\"No problem at all, my dear,\" he said, shaking her hand as well. \"I'm mostly just glad to have settled this with only my son's pride being wounded. I hope we can part as friends, Andrew,\" Nathaniel said, moving to shake Andy's hand one more time. \"It's refreshing to see someone so salt-of-the-earth here, and we're all the better for it. Emily and Hannah are very lucky ladies.\"\n\n\"Friends it is,\" Andy said. \"We can make it a point to have lunch or dinner once every couple of weeks.\"\n\n\"I'd enjoy that very much. Now, time to take Benny back to Deborah, and see what she has in store for him. I'm hoping it's a chastity belt of some kind, but it is, as I said, her decision.\"\n\n\"Make sure you have her take pictures, so if you need to, you'll have evidence to use against him later. Should be a reminder not to cross you further.\"\n\nWatkins smirked, tapping his temple again. \"You're always thinking, Andrew. I love it. Ciao!\"\n\nWith that, Watkins slid back into his limo and the driver closed the door behind him before getting back into the long vehicle, slowly driving it off the property.",
        "\"You know, you generally don't see limos that much these days,\" Emily said to him.\n\n\"That's because they're chintzy AF,\" Hannah said. \"So you DTF *right now*, or what?\"\n\n\"Look, Hannah, just because you're here doesn't mean you have to stay here if you don't want to,\" Andy started, but then yelped a little bit as Hannah's small fingertips closed around his groin though the jeans and boxers, squeezing his cock.\n\n\"M'kay, lemme break it down for you, Andy,\" she purred. \"I am horny like you would not fucking believe, so maybe I'm not making myself clear enough. I kinda turn into a little cock crazed bimbo when I'm too fucking horny for my own good. You got three choices right now. A) You can fuck me right here and now on the porch. B) You can take me inside the house and fuck me right there in the entryway. Or 3) you can take me into the house, up to your bedroom and fuck me there.\"\n\n\"Being randy also apparently messes with your indexing system, Hannah,\" Emily giggled.\n\n\"Oh, there's also option D) all of the above, but the rumor is that doing any one of the first three will knock me on my ass so I can't do the rest.\" She blew a stray bang of blonde hair out of her face dismissively. \"Sounds like total bullshit to me, though.\"\n\n\"I can't help myself, Andrew,\" Emily said, sliding her right hand down the front of his pants, having to work with Hanna just a little bit, so that she could get her fingertip across the head of his cock, getting a bit of that glistening precum onto her finger as she lifted it out. The small British girl then moved around, sliding her body in behind Hannah's, the two close to the same height, although Hannah was a little bit shorter, Emily's hips pressing up against the cheerleader's, pinning the girl's body between Andy's and her own. \"Wrap your arms around him in a great big bear hug and I'll prove to you that you aren't ready for this.\"\n\nHannah again dismissively blew air out of her mouth, shooting Emily a skeptical look over her shoulder before she dutifully wrapped her arms around Andy's midsection, holding onto him as best she could, before Emily pushed her fingertip into Hannah's mouth, making the cheerleader get her first taste of Andy, priming her.\n\nIf it hadn't been for Emily's arms pinning Hannah against Andy, the cheerleader would've immediately collapsed to the ground in violent orgasm, but as Emily had her trapped, Andy instead got to feel Hannah's whole body experience a personal earthquake, her face scrunched up tightly, an extremely high pitched squeal shredding through the air, and he could feel the girl's thick nipples suddenly harden, pressed right against his side, even through the layers of fabric.\n\nAfter several seconds, the Asian girl started to breath again and looked up at him, her brown eyes watering with tears but a broad smile on her face. \"Holy fuckballs it's fucking *true*,\" she whimpered. \"I thought I knew what orgasms were like, but I've never felt anything like that in my life. I think I just touched God.\" She licked her lips, lifting one hand up to rub the back of her hand against her eyes, wiping away the water from them. \"And I want more. Fuck it, I gotta have more, like right fucking now.\" Her other hand had moved back to his cock again, rubbing against it.\n\n\"No,\" Andy said. \"We're going to take all your stuff inside, and up to the bedrooms, and we're going to give you a bedroom of your own for the time being, and while we're walking you up and getting you settled in, you can tell us a little bit more about yourself. Then, after a little bit, we'll take you into the main bedroom and get you imprinted.\"\n\n\"But I--\"\n\n\"Your other choice is that I can make you wait until after dinner,\" Andy said, trying to be as authoritative as he could. \"Which would you prefer?\"\n\n\"Sooner, sir,\" she grumbled.\n\n\"Excellent, let's take your stuff in and you can tell me and Emily all about you.\"\n\n\"Whaddaya wanna know?\" she said, grabbing one of her suitcases while Andy grabbed the other. Andy had taken the larger one, so he didn't feel bad about letting Hannah carry one herself. Even rolling it along, the larger suitcase was more like a steamer trunk than a practical travel suitcase.\n\n\"You lived in California your whole life?\" Andy said, as they walked into the house.\n\nShe shook her head. \"Moved here about five years ago from Hawaii after my dad's company closed down and we had to move. Dad's second generation Japanese American, and mom's pure blood Hawaiian, but I think she was still glad to get off the island. She said she always knew everyone everywhere she went, and wanted to go someplace we could blend in more. We moved to Woodside when I was 13. Dad's a UX engineer for Playtronics and mom teaches third grade.\"\n\nThey headed up the stairs, starting to walk down the hallway along the collection of bedrooms. Andy had to stop and check, finding the first completely unoccupied one, leading Hannah into it. \"And what are you going to Stanford for?\"\n\n\"Premed,\" she sighed. \"I'm still debating if I want to get into pediatrics or be a neonatal specialist, but I'll totally have time to figure all that out, considering it's, like, totally a billion years in school, so good on me for having that choad pay for it all.\"\n\n\"Nathaniel said you were Benny's tutor, and that the boy tried hitting on you several times.\"\n\n\"Fuckin' perv didn't like being told no, and he even got handsy one time, so I decked him, and he went crying to daddy over it,\" she grumbled, moving to put her smaller bag next to the dresser in the room. \"But daddy told him that girls get to say no, and he never tried getting grabby again, but he kept on talking shit.\"\n\nAndy rolled the trunk over as well, placing it between the bed and the dresser. \"Nathaniel said you made a go at him as well.\"\n\nHannah giggled a little bit, rolling her eyes. \"I mean, kinda, sorta, sure, I guess. He was separated from his wife at the time, and I knew it would piss Benny off so much, I think I just wanted to see if I could get away with it, but his daddy said no, and he eventually *un*separated from his wife, so I guess it all worked out. I was mostly just being a brat.\"\n\n\"And you know you can't fuck other men any more now, yes?\" Emily asked her.\n\n\"I mean, I guess,\" Hannah shrugged. \"I thought that was just bullshit too, but if that first thing they told us at the base is true, then I guess all of it is, which means if I sleep with another dude, I'll die, right?\"\n\n\"That's our understanding, but we've certainly never tested it,\" Andy said.\n\n\"But the rest of the stuff? About needing to fuck? About it giving you the best orgasms of your life? And that it'll keep you safe from the virus? All that's true?\"\n\nEmily grinned. \"I can speak from personal experience that whether it's biochemistry or natural talent, Andrew has made me cum harder than I even thought was possible.\"\n\n\"How many women am I gonna have to share him with?\"\n\n\"There are nine other women in the family currently, four of whom intend to marry him, two of whom have decided simply to remain sexual partners, and three of whom are new enough to still be as of yet uncertain of what they want for their futures,\" Emily said to her. \"There are also three women on staff, who are sexual partners of Andy's as well, but prefer to keep that relationship more professional, enjoying a level of distant removal from the family.\"\n\n\"What's *that* mean?\" Hannah asked, her face scrunched up in confusion.\n\n\"It means I like it when the Master orders me around,\" Nicolette said, poking her head into the room, \"and that the cook and the gardener are lovers, but understand they have physiological needs they have to have tended to in order to stay alive. Hell, the gardener's a lesbian, but Andy's cum still makes her cream herself, so she's willing to drink it. Hey, I'm Nicolette, the house maid.\" She held out her hand to shake Hannah's.\n\nHannah took it and shook it, before shooting Andy a suspicious look. \"You make the French maid actually wear a French maid's outfit?\"\n\nNicolette giggled, which made the Asian girl's head spin to look at her. \"He's told me multiple times I don't have to wear it, but I like it too much to stop, just like I like calling him Master, when he told me I don't have to do that either. But I just love the way he still blushes a little when I say it, so I know he likes it, don't you Master?\" she said, giving a little curtsy in his direction.\n\nAndy was sure he was blushing a little, so he only smiled slightly. \"No comment.\"\n\n\"Told you,\" Nicolette said, poking Hannah in the side. \"Just be yourself in what you want, tell him that and he'll probably give it to you, barring a few exceptions.\"\n\n\"Oh yeah?\" Hannah said, perking up a little more. \"What's on the no-fly list?\"\n\n\"He's a bit squeamish about being forceful or inflicting, but he'll do it up to a point, although he's never gonna hurt you,\" Nicolette said. \"Uh, what else did Niko tell me?\"\n\n\"So I see Niko's the one with the big mouth,\" Andy chuckled.\n\n\"Well, her and Ash told me a lot, so I can't remember which one said which. Oh! No inflicting pain on him, but I think Ash was just joking when she said she wanted to try and put nipple clamps on him,\" the maid said, giggling again.\n\n\"She suggested it to me, and I politely declined.\"\n\n\"The strap ons in the house are just for the girls to use on girls, not on the Master, although I don't think anyone's asked him that directly.\"\n\n\"Niko did when she had a few drinks in her, but I shut that down right quick.\"\n\nHannah nodded. \"So big daddy's ass is exit only, but is he willing to have a go at ours?\"\n\nNicolette smiled broadly and gave an over-exaggerated nod. \"Oh yeah. In fact, I'm a little disappointed he hasn't had a go at mine yet, especially after we all heard Niko's first time not too long ago. *And* Taylor's.\"\n\n\"Enjoyed it, did they?\" Emily asked.\n\n\"Taylor was pretty loud, but holy shit, Niko was loud enough the neighbors might have heard her, and they're at least a mile away. I asked her about it the next day and she said it the greatest sexual experience she'd ever had in her life. Said it made her cum even harder than she did when she was imprinting, if I could believe that.\" Nicolette licked her lips, looking at Andy. \"So, needless to say, I'm hoping the Master'll take a crack at my ass sooner or later. I'm sure he's noticed me bending over a lot more as of late.\"\n\nAndy had turned a darker shade of red. \"Well, you should've said something, Nicolette.\"\n\n\"But it's so much fun watching you blush, Master,\" she said, batting her thick eyelashes at him.\n\n\"Well, you've got an open invitation to *my* ass, Daddy,\" Hannah purred.\n\n\"Mine and Sarah's as well,\" Emily said, \"although you will need to go slow with us. We're, ah, both unaccustomed to it, but anything good enough for Niko is good enough for us.\"\n\n\"Nobody's had my ass either, Daddy, so you've got a whole world of eager virgin assholes to explore,\" Hannah giggled.\n\n\"Well, I didn't say mine was untouched,\" Nicolette said, \"but it's still ripe for the Master's taking.\"\n\n\"That's... good to know?\" Andy laughed.\n\n\"Oh, and Andy's not into bestiality or watersports, thank god,\" Nicolette said with a dramatic laugh, \"because I'd have to be the one cleaning that shit up.\"\n\nEveryone laughed a little bit at that.\n\n\"Everything else is fair game, though?\" Hannah asked.\n\n\"Well, if there's something else, I'm sure he'll tell you before you get too far down the path,\" Nicolette said. \"If nothing else, the Master is remarkably straight forward.\"\n\n\"He's also still in the room,\" Andy added, amusement on his face how they were talking about him in front of him like he wasn't present.\n\n\"How many more women are you going to add here?\" Hannah said, pushing the trunk up against the side of the bed.\n\n\"Well, the banquet hall table holds sixteen people, so last night, I figured I was going to add just two more, but Nicolette has informed me that she, Katie and Jenny don't wish to be at our table any more, because it removes the level of distance they want, so I suppose it'll probably be five more, and I'll just have to tend to the needs of two to three women every day.\" Andy laughed a little. \"I mean, there's worse ways to pass the time.\"\n\n\"How are you going to pick them?\"\n\n\"I haven't really *picked* anyone,\" Andy said with a sheepish smile. \"I took a test, several months ago, and based on that, they've just been sending me people. Although Emily told me that if I wanted to, I could apparently just ask for someone, and there's a good chance they might send them to me.\"\n\nHannah looked down at her hands and then looked up, a conflicted expression on her face. \"Can... may I make a request?\"\n\nAndy's head tilted to one side. \"I mean, you can certainly ask. The worst thing I can do is say no, so might as well ask.\"\n\n\"Can I ask you to request someone specific for the house? Would... is that forward of me?\"\n\n\"It sort of depends on who you're wanting me to request, Hannah,\" Andy said. \"I feel a little odd requesting anyone, honestly, so if you have someone specifically you want me to bring into the house, I'm going to need a reason for it.\"\n\nThat made the Asian girl hesitate for a moment. \"Can I think about it for a little bit?\"\n\n\"Sure,\" Andy said. \"I expect the soonest we would see anyone else show up would be next week, and it's probably just going to be one, maybe two people. After next Friday, though, who the hell knows what's going to go on.\"\n\n\"What happens next Friday?\"\n\n\"The news breaks, but let's talk about that later. It'll do your head right now. I would've talked to you about it before, but Emily went ahead and primed you already, so I imagine that lust is bubbling up pretty fierce right about now.\"\n\n\"Sorry not sorry?\" Emily said to him, a pixieish grin on her darling face. \"So he can make a go at you here, Hannah, if you want to wake up alone tomorrow morning, or we can take you to the main bedroom, if you're okay waking up surrounded by other people.\"\n\n\"Where are *you* sleeping, Emily?\"\n\n\"Oh, I'm always going to be sleeping with Andy. Always always always.\" The British actress had a tendency to say things three times in a row if she wanted to drive home a point particularly emphatically. \"I'm going to take one of the bedrooms and turn it into a personal study, but I want to be sharing a bed with Andy all the time unless circumstance demands I be away from him for a while, on a film shoot or something.\"\n\n\"Are there going to be more Dagger Academy movies? I don't like how they ended with you losing Eduardo, the love of Dahlia Hairtrigger's life, and her having to do her last year at the Academy alone?\"\n\n\"Well, poppet, I'm afraid there are no more novels to adapt, so unless E. F. Winston decides she wants to write more of them, it's quite unlikely. I'm hoping to be part of the cast for the films based on Andy's books, though.\"\n\n\"Oh yeah!\" Hannah said, looking at him. \"Mr. Watkins said you were a writer, but I've never heard of the Druid Gunslinger books.\"\n\n\"They're aimed at a slightly older audience, I think, but I'm sure Sarah will love to tell you all about them.\"\n\n\"Who's Sarah?\"\n\n\"Another of Andy's soon to be wives. Sarah Washington. Maybe you've seen her in movies?\"\n\n\"Wait. WAIT. 'Ballerina Badasses' Sarah Washington? *THAT* Sarah Washington is gonna be my sister-wife?\"\n\n\"Well, she's certainly here,\" Emily said with a laugh. \"She's downstairs reading Andy's most recent book right now, which I very much doubt we can pry her away from.\"\n\n\"I've got so much to learn and discover here, but yeah, let's go to the main bedroom. I feel like it's getting hard to think, so let's go before I can't keep my head clear.\"\n\n\"Sure,\" Andy said, \"off to the main bedroom.\"\n\n\"Nicolette, can you come with us?\" Hannah said. \"We're going to need a hand briefly.\"\n\n\"We are?\" Andy said.\n\nHannah flashed him another broad as miles grin, nodding. \"You'll see soon enough! Don't rush your surprise.\" She grabbed Emily's hand, and then pulled her along, as the four of them started to walk down the hallway.\n\nThe girls walked several steps behind him, and Hannah whispered into Emily's ear first, making the British woman giggle, before whispering into Nicolette's ear, the maid taking a turn giggling. \"Oh you're wicked, girl,\" Nicolette said. \"I fucking love it. You've definitely got a wildcat here, Master.\"\n\n\"It says so right here on my tits!\" Hannah laughed.\n\nAs soon as they got into the room, Hannah handed her cellphone to Nicolette. Emily leaned in and whispered into Hannah's ear, which made Hannah gasp and blush. \"Oh god, yes! You do you, girl! I fucking love that!\"\n\nEmily's face broke into a wide grin like she'd just eaten a canary. \"Well, it's your show, girl, so do what you want to.\" She then moved over to whisper into Nicolette's ear, and the maid immediately started giggling all over again.\n\nHannah reached up and grabbed the back of Andy's neck and pulled him down so she could kiss him, and it was sloppy, her tongue almost wanting to lick every inch of his mouth, before she pulled back. \"So I can do anything I want? It's okay if I drive?\"\n\nAndy laughed, shrugging his shoulders, spreading his hands. \"Within reason, of course.\"\n\n\"Oh, it's all reasonable, and enjoyable,\" Hannah said, before she grabbed Andy's shirt and pulled him around the room, finally settling on the big armchair, pushing him to sit down. She slowly slid one knee up on one side then her other knee up the other, straddling him. \"I'm sure I'd be a shitty stripper, but I've never met a boy who didn't want to do this.\" She tugged up the cheerleading top, as well as the bra, and let those massive tits spill free, a tidal wave of tan flesh with large aerolas and thick stiff brown nipples. Hannah had at least double Ds, but Andy wouldn't have been at all surprised if they were even larger, and was nearly overwhelmed when she leaned forward and mashed them right up against his face, bringing her arms forward so he felt like his head was being engulfed by them. \"Mmmmm. That's it, daddy. Get a face full of those big ol' titties of mine. Some day soon Imma let you fuck'em. Boys have been asking me for a titfuck for years now, and I've always said no, but for you? Goddamn, I'm wet just at the thought of it.\" Her fingertips smoothed across his shaved head, and when he tried to pull back, she only pulled his face forward even more, holding him there until he thought he was going to suffocate.\n\nEventually, though, she let him pull his face back, wrapping his lips around one of her nipples, suckling hard on it, teasing it with his teeth, which made her give a dramatic shiver, her fingernails raking against the back of his head.\n\n\"But I gotta be yours first, Daddy,\" she said, slowly lifting one knee up, drawing it in under her before rolling in a twist, landing her ass in his lap with a heavy whomp, her back to his chest, feeling his cock straining against the jeans. \"So don't you move and let your newest fucktoy do her thing.\" She scooted back into him so she could reach her hands down and unbutton his jeans. \"All the boys at school said I was a wicked cocktease, but that's just because I didn't fancy most of them. The guys I hooked up with, though?\" She leaned her head back and whispered into his ear. \"I was the biggest fucking whore for them imaginable,\" she moaned. \"Blowjobs, handjobs, missionary, doggy, cowgirl, in a car, in a bar, on a boat, near some goats. I made sure my boyfriends never went home with blue balls. A couple of them even begged me to stop, saying they were afraid they were shooting dust,\" she giggled. \"Not one of them made me cum like just the very taste of you did though, Daddy.\"\n\nAndy reached a hand up, sliding it to cup one of her tits, trying to do his best to contribute, but Hannah had him pinned in place pretty good.\n\n\"Now let's see what your slut's got to work with. It felt kinda big. Is it kinda big?\" she giggled, then finally fished his cock out from his unzipped jeans and boxers, not pushing them down, just making them tuck underneath his cock and balls. \"Holy fuckballs!\" she gasped. \"You thick-dicked monster, Daddy! That is one big, beautiful, *fat* fucking prick! Oh god, I hope it tears my slutty little teenage pussy right the fuck up!\" As soon as she had it free, she lifted her hips up to draw her skirt up, moving it higher and higher until Andy could feel his cock being rubbed along the one of her stockings. \"I know I should wait and take it slow, but fuck it!\"",
        "Her hand pulled his cock back just enough as she slammed down, forcing her tight young snatch to swallow up his dick. Apparently she hadn't put on panties beneath that skirt. She was easily the tightest pussy he'd ever felt, her body quivering and squirming atop of him, and he was almost worried that he'd hurt her until that giddy laugh burbled out from her throat. \"Oh my fucking god that is some good fucking *dick*!\" she shouted. \"Where has this goddamn cock been all my life?\"\n\nHannah reached up and pulled the scrunchy from her hair, tossing it aside to let her mane hang loose, shaking her head to make her hair fall in her face for a moment, as she took one hand and pushed her skirt down her legs a little, her other arm folding across her chest. Andy heard a click sound, and tried to peek around Hannah, but she leaned over and made sure he couldn't get a good view. \"Uh uh, you stay right fucking there, and you let me ride this giant fucking hog of yours until you give me what I want, and don't you doubt for a fucking second that I want it, oh hot shit do I want that fucking cum.\"\n\nAndy was trying to figure out where to put his hands, but Hannah was already moving, tugging the skirt back up again, lifting both of her hands back to rub along his head, when Andy heard another clicking sound. As soon as Andy's hands touched her hips, she suddenly reached down and grabbed his wrists, pulling his hands up to cup those mammoth breasts of hers, followed by another click and then another moan.\n\n\"I really should be bouncing on this schlong of yours, daddy, but I just love how it feels stretching my teenage cunt open, prying that pussy until I can't help but fit like a good little sleeve, only as big as you're making me,\" Hannah groaned. \"Don't you want me, baby? Don't you wanna force fuck your newest whore until she's weeping your cum? 'Cause that's what she fucking wants. I know you can feel how fucking wet I am around that giant dick,\" she giggled. \"Maybe just a little bounce.\"\n\nHannah lifted her hips up, sliding her twat up his cock. Andy wasn't sure how far up she was going to lift, but after a few inches, she snickered and thrust down again, which only made her moan all the harder. \"Fuckfuckfuck that's fucking good...\"\n\n\"You know, Andrew,\" Emily said, her voice moving closer, \"when Hannah told me her plan for this moment, I offered her a little suggestion, one which she found incredibly erotic. Would you like me to tell you what it is?\"\n\n\"I think you should, don't you?\" he said, Hannah making sure he couldn't peek and see what was happening.\n\n\"Oh, I think you rather might enjoy a surprise instead,\" she laughed, getting even closer before Andy heard yet another click. He knew he'd heard that sound before, but couldn't place it.\n\n\"You really should see her like this, Andy,\" Emily purred. \"All wanton and wound up on your lap, eager to get your spunk inside of her but too wired to be able to move. And you, being so noble, not rushing her, when really, I think the little slut's as desperate for you to fuck her as you are.\" There was a rustling sound, and Andy felt his legs being pushed apart a little by Emily's soft hands. \"Which is where I come in.\"\n\nThere was another click, then another. Then Andy could feel the skirt fluttering, as one of Emily's hands shifted, the tip of her thumb rubbing along what little of his cock was exposed, before moving to strum Hannah's clit tenderly, the Asian cheerleader wriggling even more in his lap. \"Fuck, she's frigging me, Daddy. She's rubbing my little cunny while you're ripping it open, and it all feels so fucking good.\"\n\n\"It's a good starter, innit?\" Emily said, \"but I can do better. Hannah, be a good little fuckpuppet and start grinding on him, would you love?\"\n\n\"I don't know, Emily,\" Hannah whimpered, almost a touch of fear in her voice. \"I'm scared I'm gonna start having chain orgasms or something.\"\n\n\"Of course you are, darling,\" Emily replied, \"but that's no reason to be frightened. They're wonderful.\"\n\nThe movements were tentative at first, but slowly Hannah's hips began lifting up then pushing down again, starting to ride his cock, although clearly pacing herself to not go completely out of control.\n\n\"Now,\" Emily said, as Andy thought he felt her moving to her knees, \"let me see if I can expedite this along a little more.\"\n\nAndy damn near jumped when he felt Emily's tongue near the base of his cock, the British woman giving a delightful shiver against him, one hand still using a thumb on Hannah's clit, the other keeping Andy's thighs pressed wide apart enough that she could slip in, her head beneath the skirt, as her voice was a little muffled. \"Ah yes, I know how we can kickstart this. Hannah, dear, are you ready for my husband-to-be to blow your fucking mind by blowing his load?\"\n\n\"Oh god, I want it so goddamn bad, Emily, Andy...\" Click. \"I need to feel that hot jizz inside of my snug snatch, I'm so fucking desperate for it.\"\n\n\"But you know what'll happen when he does, don't you?\"\n\nHannah nodded, but didn't say anything, while Emily's tongue was flicking along the point where Andy's flesh met Hannah's.\n\n\"I can't hear you, darling!\" Emily said in a sing-song voice.\n\n\"I'll start imprinting.\"\n\n\"And what does *that* mean, you silly girl?\"\n\n\"That I'll be bonded to him, connected to him...\"\n\n\"Is that what you want?\"\n\nHannah nodded again, her hair thrashing about, before she realized that Emily still couldn't hear her nodding. \"I want it, I want it, I want it so fucking bad...\" Click.\n\n\"Well, you tell him what you want him to make you, and I'll make sure he does, but if you don't say it, he won't do it, and frankly, I won't blame him one bit.\"\n\n\"Please, Andy, Daddy, Master, whatever the fuck you want me to call you, please give me that cum, please fill up my pussy and let it mark my very soul.\"\n\nAndy could feel Emily's tongue moving downward, starting to lash over his balls, flicking along them, that weird clicking sound filling the air again, as Hannah continued begging.\n\n\"I've never wanted anything like this in my entire fucking life, needed something so fucking badly, to feel you jizzing me up, putting a big ol' creampie in my tight teenage twat, doing what it does, what I want it to do to me so fucking much. I wanna be *your* slut, Andy, yours and nobody else's. I wanna feel that nut branding me as your whore for life, your wanton and willing cheerleader fucktoy who will take every drop of cum you give her. I need it. Oh fuck do I fucking need it... You gotta give it to me, Andy, before I lose my fucking mind.\"\n\nAt that point, Andy felt Emily's lips wrapping around his balls, sucking his nuts into her mouth, washing them with her tongue, rolling them around, almost coaxing them to give up their secrets, as Hannah started spasming again on his lap. The sensations were brutally intense, threatening to overwhelm him..\n\n\"Please, Daddy, pleasepleaseplease make me your girl, your slut, your whore, your toy, your fuckhole, your plaything or wife or whatever the fuck you want me as, just make me fucking *yours* with that goddamn cum already! Cum in me! Show me how fucking owned I am! Oh my god, I'm fucking cumming! Cum with me! Cum! Fucking cum already!\"\n\nBetween Emily's tongue, Hannah's grinding movements and her quivering cunt, Andy's resistance was futile and he felt his balls try to draw up, only to be kept in place by Emily's lips, even while his cock began spewing hot cum inside of Hannah's pussy, sending the girl redoubling with spasms, her already tight snatch locking his dick inside of her until those spurts had stopped and her body sloughed almost lifeless against him in the chair.\n\nEmily began giggling profusely beneath the skirt, and he felt her mouth pull off his balls, giving the base of his dick a little lick before she pushed the cheerleader up and off his cock, forcing her to slide a bit more against Andy's chest. Once she had his cock out of the cheerleader, she moved to lick it clean, and Andy was certain he could feel Emily trembling just a little bit, having rediscovered for certain that every bit of his cum would send her into orgasms.\n\nAfter a minute or so of a tongue bath on his cock, Emily slipped out from under the skirt and moved to help Andy lift her up, carrying Hannah's unconscious form to the giant bed, laying her down. Emily had given his knob an excellent spit shine, so Andy tucked his cock away, and pulled up his boxers and his jeans, zipping and buttoning them up, before he noticed that Emily was standing next to Nicolette, who was still in the room.\n\nThe two of them were looking at Hannah's cellphone.\n\n\"No, that's definitely the one. Send him that one,\" the British woman said to the maid.\n\n\"That's what I figured, but I wanted to be sure,\" Nicolette said. \"And the rest of them?\"\n\n\"Why, send them to Andy's phone, and all the girls' phones as well,\" Emily said, leaning in to kiss Nicolette, letting the maid get a taste of a few remaining droplets of Andy's cum, forcing the French girl to vibrate a little, a short but nonetheless powerful orgasm rippling through her at even that small amount.\n\n\"Am I going to regret asking what this is all about?\" Andy said, as he walked over to join them.\n\nEmily took the phone from Nicolette's hand, selected a photo and turned the phone to show Andy. It was a picture of Hannah on his lap, although her face was covered by her hair. Her cheerleading top was pulled up, but her arm folded across her tits hid her nipples from sight, and while portions of Andy's form were visible, it didn't clearly identify him either. But also just importantly, Hannah's skirt was clearly over the head and shoulders of Emily, who wasn't totally visible in the photo either, but made the image all that more erotic.\n\n\"When you told Nathaniel that you weren't going to let Benny watch, Hannah asked us to send him a picture that showed the whole thing without giving him any of the good bits, or showing anybody's face,\" Emily giggled. \"He'll know it's her, and you, and me, but he can't prove it to anyone.\"\n\n\"So you took a picture,\" Andy said to Nicolette, who had a comfortable smirk on her face.\n\n\"Oh, I took *loads* of pictures, Master, and in most of them, you can see her tits, her face... I like this one in particular,\" she said, taking the phone back from Emily, scrolling over to show one that was a close up Emily's face, her tongue extended to lick his cock, Hannah's pussy visible and framed in the shot. \"But these are just for the family.\"\n\n\"God, I don't mean to be vain, but I look fucking hot there,\" Emily laughed. \"Like proper porn star hot. Don't you think?\"\n\n\"I think you girls are going to be the death of me,\" Andy groaned, still smiling when he did.\n\n\"The finest death in all the land if we are, though! But don't die too soon,\" Emily teased. \"We all need our fixes. Now let's go tell Sarah about the movie deal before any of the other girls get home. I'm sure they're going to have loads of questions about all the photos I just blew up their phones with.\""
    ],
    "authorname": "CorruptingPower",
    "tags": [
        "asian",
        "british",
        "cheerleader",
        "maid"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/quaranteam-ch-23"
}