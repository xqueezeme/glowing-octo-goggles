{
    "title": "Raw Ch. 06",
    "pages": [
        "PROLOGUE\n\nThe wall was white. In the middle was a small circle that was darker than the rest of the paint. An old nail hole probably. I wondered what had hung there. Why it had been removed. Why the hole had not been repaired.\n\nA warm breeze blew against my neck, tousling my hair about my shoulders and across my face. I stared through the strands at the wall. It appeared to be covered in an array of cracks now.\n\nI let out a ragged breath. The visual of the plaster resembled my life as of late. Shattered. Damaged. Like an Easter egg that had been dropped after just having been found. One where the dye had bled through and left a permanent stain underneath the shell. When I was a child, I'd made my mom scrape off any colored parts that had blemished the perfect egg white.\n\nI wish someone could do that for me now. To cut out the bad parts of my life so it was enjoyable again.\n\n###\n\nSIX WEEKS EARLIER\n\nThe last year-and-a half had been a blur. My first book in the new series, \"Triple Tease,\" had gone to print and become a best-seller practically overnight. Despite my fears of being ostracized due to announcing that I had written the \"Dex Knightly Mysteries\" series under the pseudonym Drake Alexander for seven years, the stores had struggled to keep my new book in stock. It made my heart swell that my readers had proven and continued to be loyal.\n\nThe paparazzi had finally discovered my grandfather's condo. For several months, they had taken to camping outside as if I were the newest member of royalty. While I could stay inside without much disruption, leaving and returning had become a bit of a circus trying not to run over a photographer or journalist. I wondered how much trouble I would be in if I were to 'accidentally' hit one. I mean, where did the public property end and my private domain begin on these narrow streets of Chicago?\n\nI was spending more time at Malcolm's as a result of my renewed popularity because I found that the paparazzi didn't follow me outside of the city. It was a blessing to have a place to escape to. I'd become the proverbial city-girl/country-girl in a sense. And both lifestyles fit me. For now.\n\nI was eternally grateful to my eldest brother for insisting I purchase a cell phone as my landline number had to be shut off to stop the incessant calls. Apparently, someone had found out my number and put it online. I swear, I had never had this problem with my original books. Then again, the technology age was just sprouting its wings at that time. Now, everyone knew what you were doing and when. Sometimes before you did it, it seemed.\n\nMalcolm was always happy to see me, no matter the time or for how long. Even if it was a late night, last minute call to say I was on the way. We played. We just held each other like a normal, vanilla couple. And there were times when he let me act as if I was alone in my own home, though he was always just a few steps away if I needed him.\n\nEven when the popularity died down, I kept to my new routine. In fact, I was visiting Malcolm more often. Which was the reason I was pacing his bedroom at six o'clock in the morning instead of drifting in dreamland beneath the rumpled sheets.\n\nI'd just returned from a week-long book signing tour the day before. Tonight, Sue Warner\u2014my agent and editor\u2014was throwing me a party for the release of the final Dex Knightly book being published in Spanish. It was a small affair of only five of us, and we were just meeting at a local bar for the evening. But I couldn't even think about that right now. I had something more important to do first.\n\n\"God, you look so sexy wearing one of my dress shirts,\" Malcolm said behind me.\n\nI turned to look at him, giving him a small smile as I crossed my arms. The new stance pushed up my breasts, and I saw his eyes grow wider as he copied me and leaned against the bathroom doorway. The light behind him glistened off the water droplets clinging to his combed-back hair. He'd decided to cut it just a few weeks ago, and I was still getting used to it. While it had plenty of body, he was no longer able to pull it back into his distinctive ponytail, which I missed. But then again, the style looked more like Matthew McConaughey's now, so he had that going for him. Not that he wasn't hot enough on his own.\n\n\"You know, I almost like it better than the lingerie I bought you for Valentine's Day,\" he said. The towel hugging his hips suddenly shifted forward. It was the slightest movement, but my eyes just happened to be focused there, so I saw it. And I tried not to smirk at the reason why.\n\nI shook my head and tried to form the words I'd been going over in my head ever since I had watched his naked ass scoot out of bed and walk across the room to take a shower thirty minutes earlier. I couldn't look at him. Not with him barely naked. So I turned to look out the window as I opened my mouth.\n\n\"We need to talk.\"\n\nThere was a soft click, and out of the corner of my eye, I saw he'd turned on the beside lamp.\n\n\"Really?\" His voice sounded closer.\n\nI gulped. \"Yes.\"\n\n\"You expect me to talk with you dressed like that?\"\n\nI closed my eyes. \"Try.\"\n\n\"I can't make any promises.\" He was right behind me now, his breath hot against the back of my neck as he brushed my hair to the side and planted a kiss on my spinal column.\n\n\"I'm serious.\" I would turn to give him an intense stare, but I feared I would lose control.\n\n\"So am I.\" His hand cupped my hip and pulled my ass back against him, erasing any doubts I might have had about what he was hiding beneath his towel.\n\n\"You're not making this any easier.\"\n\n\"You think I'm making it,\" he slowly ground his hips against my rear a little more, \"...harder?\"\n\nI gulped again, my knees shaking this time. Dammit.\n\n\"Are you wearing anything underneath my shirt?\" He didn't wait for me to answer but cinched up the hem on my left side until I felt his fingers caressing my skin, searching for the strap of my panties. Panties I knew he wouldn't find.\n\nBefore he could discover the truth, I slapped at his hand and stepped away. \"I'm serious, Malcolm. We need to talk.\"\n\n\"You know, Becca, I haven't been in many relationships. But I do know those are four words that no man ever wants to hear. And I've heard them twice in the last two minutes.\"\n\nThe words spilled out before I could stop them. \"You must be getting tired of me encroaching on your life. I'm smothering you. It wasn't my intention at all. I'm just so grateful that you've opened your house for me. I just feel like maybe it's too much. We're going to regret this relationship. I should back off.\"\n\nDammit. That did not come out as eloquently as I'd expected. In fact, it was nothing like the words I'd rehearsed.\n\nThere was a moment of dead silence, then he said, \"Do you want to move in together?\"\n\nI finally turned back around, slack-jawed, to see a wide-eyed, Cheshire-grin look on his face. \"Huh?\"\n\nHe stepped toward me and raised both hands. He repeated himself. But with each word he slowly enunciated, he undid a button on the shirt I was wearing. \"Do you want to move in together?\" He paused after the last word\u2014the last button\u2014to tuck his fingers under my chin, tilting it up, and he added, \"Lady Becca?\"\n\nI stifled a groan, but I couldn't stop my tongue from darting out to lick my lips. And I couldn't look away from his eyes that only moments before were bright and playful. Now, they were dark and serious. Just like that. Saying those two words had flipped the switch in him, even if he had been joking about his proposal. He was joking, right?\n\n\"I'm waiting.\"\n\nMy knees shook. And my response came out as a squeak. \"Yes, Sir?\"\n\n\"No, Lady Becca. I want an answer. Not another question.\"\n\nHis grip had tightened on my chin, which gave me a jolt of confidence. I straightened my spine, gulped, and said, \"Yes, Sir.\"\n\n\"Very good. We'll talk about that later. But right now...\" He parted the shirt to reveal my bare body from my breasts down to my pelvis. He growled as he stepped back, his grip and eyes dropping from my face.\n\nI tried not to shiver or whimper as his gaze roamed over me. To not be embarrassed by any flaws I thought I had. I was his, and he was allowed to behold me at his leisure in whatever means he deemed suitable. He had told me that I should never be ashamed of my body. That we all had flaws, and we should embrace how they make us unique instead of focusing on why we aren't like other people in those aspects.\n\nFor several minutes, he just stared at me. I felt the heat creep up from between my thighs until it reached my breasts that became heavy with desire. My nipples puckered from the coolness of the room and the memories that rushed into my head of all the things he'd done to them. To me.\n\nThen his towel fell to the floor. I heard the soft swish then plop and dared to dart my gaze down to verify that I had heard correctly. I don't know if he had released it, or if it had just come undone on its own. I was betting on the latter because my eyes caught his rigid member bobbing gently between his thick legs.\n\nOh. My. God. What a beautiful specimen!\n\n\"Don't move.\"\n\nNo two words had ever been so hard to follow.\n\nHe slid his hands under the fabric on my shoulders and pushed the shirt back. It slipped down my arms but caught on my wrists. He left it that way as he cupped one breast and lifted it to his mouth.\n\nI stared at the top of his head, forcing my eyes to stay open as he teased my nipple with first his lips then his tongue and eventually his teeth. I had to bite my lower lip to tamper the whimpers when he abandoned the nipple and just caressed the swollen flesh. Then he moved to my other breast and repeated the process.\n\nWhen he'd tortured them to his liking, he slid both hands down my sides while his tongue licked a trail between my breasts to my navel where he teased some more. He tugged on the shirt, using it to bring my body closer to him so he could he rub his nose against my pubic bone.\n\n\"Spread your legs, Lady Becca.\" His voice rough as he said my name. Someone was losing his composure.\n\nI did as he asked with a little difficulty myself, then I felt his tongue wandering. I knew he'd reached my clit by the tingling sensation that sparked inside. He licked the same spot languidly, tugging the shirt free from my arms and gripping my hips instead. Eventually, he moved lower, and his hot breath swept against my inner thighs as his tongue slid into my heat and wetness. It took everything in me to stand upright, not to mention be still.\n\nJust when I didn't think I could take much more, he stopped. He walked behind me, and I could hear him open a drawer. There was a scuffling sound as he moved things around. The drawer scraped closed again. Then he gripped my hand.\n\n\"Follow me.\"\n\nHe led me to the bed where he had me kneel on the mattress, facing away from him. First, he tied one end of a rope around my right wrist. Then he pulled my right arm behind my back, bent it, and did the same with my left arm so that it felt like I was crossing my arms behind my back instead of in front of me like I had been doing just minutes before. He secured my bound wrist to my left elbow and wrapped the rope around both forearms until he could secure my left wrist to my right elbow. Finally, he laced rope around my upper arms and across my back several times. The technique left only my hands free.\n\n\"Too tight?\"\n\nIt was snug but not uncomfortable. \"No, Sir.\"\n\nGently, he leaned me forward and situated my head on a pillow so I wouldn't suffocate. My nipples had stiffened to an aching peak during the process, and the pressure of my breasts against the mattress helped ease the pain as he arranged my lower extremities. My hair chose that moment to fall in front of my face. Although I could still breathe, I could no longer see. Joy.\n\nWhen he seemed satisfied with his bondage work and my position, he repeatedly stroked his hands across my lower back, shoulders, and neck. Instead of arousing me, it relaxed my muscles, as was probably his intent. Occasionally, our sessions had become a little more\u2014what was the word? hardcore?\u2014both in activity and in time spent in our roles. If I wasn't relaxed, he said I could get injured. I knew I'd be in for a deep session whenever he massaged me beforehand ever since.\n\nFor several minutes, nothing happened. Was he just staring at me, my arms tied up and my ass raised in the air? I imagined how sexy he must look, standing there in his serious, naked dominance. Especially one particular part. That thought made my pelvic muscles contract.\n\nIt was probably six-thirty by now, if not almost seven. Neither one of us had to go to work today, but I did want to get back to the city to change prior to the party. That wasn't for several more hours, though. He could drag this out as long as he damned well pleased. But I did wonder how long we would be at it this time. Not that I minded, but I had a darling, sleeveless dress to wear tonight, and I really didn't want to have rope marks tattooing my arms.\n\nI wasn't sure what he had planned. Was he going to spank me? Flog me? I liked the feather flogger. God, that was so kinky and arousing. Especially when he ran the feathers over my bared pussy.\n\nWas he going to tease me with his tongue some more? Maybe use his fingers? Or would he use his cock? Would he fuck me or make love to me? Would he do all of the above? What kind of mood was he in this morning?\n\nHe made no sound, but I felt the bed shift under me. His hands rested low on my ass, fondling while his thumbs stroked my butt cheeks near where they curved down and inward toward my exposed pussy. The touch made me undulate a little.\n\nHe slapped my ass\u2014a signal to be still\u2014and continued. I concentrated on slow inhales and exhales. Once I'd relaxed again, the inside of his leg pressed against my right hip as he rubbed the tip of his cock against me several times before he pressed once and slid inside with ease.\n\nI moaned long and low as he entered me. Shudders racked my body even after he'd bottomed out, his balls pressing against my mons. Then I shrieked as he smacked my ass again.\n\n\"Shh, Lady Becca. Bite the pillow, but don't make another sound unless it's to say the safe word. Wiggle your right hand if you understand.\"\n\nI obeyed, and he slowly withdrew. My hands fisted as he penetrated again. He took his time, and I felt tears in my eyes by the time he'd worked up a rhythm. He stopped after several minutes and pulled me closer to the edge of the bed. Then he stood still, gripping my hips as he brought my ass back against him faster and faster. The sound of our panting was drowned out by the slapping of skin against skin.\n\nI lost count of my orgasms after number five. Then I lost all sense of time. I could only feel. And feel I did. Whether it was him tugging on the ropes binding my arms like a horse's reins. Gripping my thighs as he took a break to cover my pussy with his mouth and lick me until I was shaking. Or fondling my breasts with his hands as he slowly pumped his hips against mine. It was glorious.\n\nBy the time he was done and had grunted his release across my ass, I had almost shredded the pillow with my teeth. I think I even had a couple of goose-down feathers in my mouth. I was sweaty, all of my appendages were numb, and my pussy felt like it had taken a beating.\n\nHe kissed my forehead. \"Good girl, Becca.\"\n\nI just moaned.\n\nHe cleaned me up, being very gentle on my overly-sensitized areas. When he finally released my arms, he massaged each one and laid me on my side. I mumbled contented sighs as he curled his body around mine under the covers to hold me as I came down from sub space.\n\nHe let me sleep until lunch, then we took a shower together before I headed back to the city to get ready. I had a party to attend! It wasn't until I was halfway home that I realized we had not actually discussed me moving in with him.\n\n###\n\nI smiled at my brother, Drake, and his fianc\u00e9e, Daphne, who sat across from me that evening. I'd never seen my brother look so happy. He'd found the woman who could complete him in all manners, especially in the bedroom as his submissive. It was noisy in the bar, so I didn't hear what he said, but whatever it was, it made Daphne's eyes light up as she laughed.\n\nWas that how I looked when Malcolm talked to me? Oh, how I loved being with him. Even when we weren't in a scene, I just wanted to please him all the time.\n\n\"You look like you're in sub space,\" a deep voice said in my ear as fingers caressed my bare arm.\n\nI blinked and smiled at the topic of my thoughts where he sat on the stool beside me. \"Only you would know that look.\"\n\n\"All too well.\" He turned my chin so I faced him, then he pressed his mouth to mine. His tongue darted out to lick at my lips as we parted.\n\nI groaned in regret that the moment hadn't lasted longer, but he was talking to Drake now. It was better this way, anyway. I wouldn't have wanted to stop with a kiss. Not after the scene we'd shared that morning. I wanted a hell of a lot more of it.\n\nInstead, I rested my chin on my fist, just drinking in the image of my boyfriend and Dominant partner as I twirled the tiny straw in my glass. He was so dreamy. And he was all mine. At least for as long as he'd have me.\n\nTrust me, I wasn't the only female acting like a school girl with a crush that tonight. Even one of the bartenders had taken a shot at flirting with him, and she could have been my mother. But Malcolm made it clear he wasn't interested by putting his arm around my shoulders each time a new girl went out of their way to pass our table.\n\nWhen Sue excused herself to visit the ladies' room, I told her I'd join her. We weaved our way through the crowd and waited in a line of noisy girls who didn't look old enough to be here. Either I was getting old, or the establishment was breaking the law. I imagine it was a little of both.\n\nI finished first and stopped at the bar for a refill. I had placed my order and had just turned to check if Sue was still in the restroom when a tall, redheaded woman approached me. She was dressed in the minimalist of garments like most of the females tonight, but on her the style was tasteful. Her hair and makeup looked professionally done but not over the top. And the skirt and blouse, while tight and shimmery, hung on her body emphasizing all the right curves but not revealing too much.\n\nThe longer I stared at her, the more I thought she looked familiar. But I just couldn't place where I'd seen her before. In my line of work, faces tended to blend into one another unless you were around them every day.\n\n\"You're her, aren't you?\" the redhead said as she fingered a gold necklace at her throat.\n\n\"Excuse me?\" I dropped a five-dollar bill on the bar and turned back to the woman.\n\n\"Drake Alexander...er, Rebecca Rockingham.\" She glanced at her feet and then back up at me with a tilt of her head. \"Right?\"\n\nI did a brief glance over her. I didn't see a camera. She probably wasn't paparazzi since she had to ask who I was, but I could never be too sure these days. \"Why do you ask?\"\n\n\"I was at your book signing. The one when you revealed who wrote the Dex Knightly books.\"\n\nAh. That narrowed the field down a little. Still, that was over a year ago, and there had been quite a turnout for the event. \"Are you press or a fan?\"\n\nShe shook her head then nodded. \"I have all your books. Except the new one.\"\n\nI laughed as I took a sip of my drink. \"Have you read them, too?\"\n\n\"What? Oh, yes! You're an excellent writer. I love how you keep the reader full of suspense. It's like I'm right there with the characters. Especially Dex.\"\n\n\"Would you like an autograph?\" I set my drink down and grabbed a cocktail napkin out of a nearby holder. When I mimicked writing to the nearest bartender, he handed me a pen. I tore the napkin in two, signed one side of one half, and handed the pen and both pieces to the woman. \"Sorry, this is all I have on me. But if you give me your name and address, I'll send you a signed copy of 'Triple Tease.' \"",
        "Her eyes lit up as she held the shreds of paper like I'd handed her a hundred dollar bill. \"Really? I wasn't expecting that. Thank you so much!\"\n\nShe hadn't wanted an autograph after approaching a personally-esteemed author in a bar? What had she wanted? I shook off the thought and smiled politely, motioning to the pen again.\n\nShe scribbled out the information on the blank half of the napkin and handed it back with a shaky hand. Then she disappeared into the sea of bar patrons as quickly as she'd appeared.\n\nThat was weird.\n\nI returned the pen and was walking away when the same bartender called out, \"Your drink, ma'am.\"\n\nGeesh. I retrieved my cocktail and left a dollar tip. When I turned to leave again, Sue was walking my way. Suddenly, someone ran into my arm, making me drop the glass. It shattered at my feet. I jumped back in surprise only to collide with the edge of the counter. I groaned and tried to catch my breath.\n\n\"Are you okay, Becca?\" Sue squatted down as if to pick up the broken shards, but I grabbed her arm to pull her upright.\n\n\"I'm fine. Let them clean that up.\" I turned back to the male bartender for the third time, held up one finger, and then pointed to my table. I saw him nod before Sue guided me back through the crowd.\n\n\"Why the glum look?\" Malcolm asked as I sat down.\n\n\"My feet are covered in Malibu Rum and pineapple juice because someone knocked my glass out of my hand. I fell into the bar, so my back is killing me. Oh, and I'm out four dollars.\" I kissed him. \"But I made a fan happy by signing a napkin.\"\n\nHe laughed and returned the kiss. \"As long as the fans are happy.\"\n\n\"Looks like you're going to be happy, too,\" Sue said.\n\nI looked up to see a tall, very handsome man approach our table carrying a glass filled with a yellow-colored liquid.\n\nHis dark complexion appeared to be sculpted over his high cheekbones and forehead that were framed by cropped, even darker hair. His blue eyes sparkled as he leaned down to place the glass before me on the table. He wore a fitted dark suit and tie with a shirt that matched his eyes. Everything about him said sophistication. He could have been a model with that face and body.\n\n\"S'il vous pla\u00eet accepter mes excuses tout renverser votre boisson,\" he said.\n\nSomething inside me sighed at the sound of his thick, French accent.\n\n\"He is apologizing,\" Malcolm whispered in my ear. \"About your spilled drink.\"\n\nI just blinked up at the stranger.\n\n\"Pour la g\u00eane occasionn\u00e9e.\" He then set down four one-dollar bills. \"For the inconvenience, mademoiselle.\"\n\n\"She says, merci,\" Malcolm said, elbowing me. He lowered his voice and added, \"Close your mouth.\"\n\n\"Huh? Oh, yes! Thank you!\"\n\n\"Bonsoir.\" The stranger tipped his chin toward me with a brief smile and was gone.\n\n\"Hubba, hubba,\" Sue said, waving at his departing back. \"You can spill my drink any day, honey.\"\n\n\"That was very nice of him,\" Drake said. \"And you got your money back as well.\"\n\n\"Yes, yes. Very nice.\" My hand shook as I lifted the glass to my lips. It was my regular Malibu and pineapple, heavy emphasis on the Malibu. I wasn't going to complain, though.\n\n\"You can stop staring now.\" Malcolm nipped then licked my neck right behind my ear, which made me shiver and turn to look at him.\n\n\"Sorry.\" I gestured to where my benefactor had stood, as if that explained everything.\n\nMalcolm just chuckled and took a swig of his beer.\n\nI shook my head, breaking the brief daze that had settled upon me. I went to set my drink on the nearby napkin but realized it had the woman's address on it. I slid the shred of paper to Sue instead. \"Mail her a copy of 'Triple Tease,' please. Send her a signed one.\"\n\nSue studied it a moment before she put it in her purse. \"Now enough business talk. We're celebrating.\"\n\n\"What took you so long in the restroom? You were right behind me.\"\n\nSue winked at me. \"Covert operations.\"\n\nI raised an eyebrow and took another long sip of my complimentary drink.\n\n\"Your man is all the talk, Ms. Rockland,\" she whispered in a conspiratorial tone.\n\n\"Should I be worried?\"\n\nShe nodded and stirred the red-tinted liquid in her martini glass. \"The teeny-boppers are planning to take you out and kidnap him. I could have heard wrong, though. It was loud in there.\"\n\nI rolled my eyes and watched the far area of the room where a DJ was set up for the evening. Girls with more skin revealed than clothing covering them pressed against guys who seemed to have their hands too low on the girls' backs as they danced to music that was starting to hurt my head with the repetitive, thumping base.\n\nMinus the headache, it reminded me of the secret BDSM club the guys had taken me to last year. We hadn't been back since, and I missed that experience. How Malcolm had danced with me in the sea of exhibitionists and made me orgasm. How I'd given him a blowjob under the table. And how he'd absconded with me to the private room and had his way with me until I was putty in his hands.\n\nNow that I was back home and had time to unwind, I should suggest we hit up that club again. Or even a different one they might know of. Until then, I would just have to daydream.\n\nHalf an hour later, I couldn't hear myself think. I'd had several cocktails thus far, including another after my free one. I'd even allowed the girls to drag me out for a couple of dances, so I was feeling pretty good. But now I was really sleepy and ready to go home.\n\n\"How about another round?\" Drake asked, pointing to each of our empty glasses or bottles. Although Sue and Daphne nodded, I waved my hand when he looked at me.\n\n\"Sorry, I'm exhausted.\" I didn't mention that the bouncing colors of lights made my brother look blurry. I'd definitely had too much to drink.\n\n\"I'm done, too,\" Malcolm said. He kissed my cheek. \"I'll take you home and help you relax.\"\n\nI smiled weakly at him. \"Relax? Wouldn't bet on it.\" Was I slurring my words?\n\nHe winked at me. \"You might be right. But you will have other guests crashing tonight, so we need to keep it toned down.\"\n\n\"It hasn't stopped him yet,\" Drake laughed.\n\nI tilted my head toward my grinning brother. \"Hello Pot. Meet Kettle. You're not exactly the quietest houseguests, you know.\"\n\nDrake's eyes and mouth went wide with mock horror as he put his hand on his chest. Then he smiled again. \"Get on out of here before someone steals your arm candy.\"\n\n\"I need to make a pit stop first,\" Malcolm said.\n\nI leaned toward him. \"I'll wait outside.\"\n\nHe caught my arm as I stood, to which I was thankful because the floor was spinning. I leaned into him, mostly to use him as support as I tried to keep my balance. His voice seemed far off even though he spoke in my ear. \"I'm serious about getting you relaxed.\"\n\nMy heart was beating so loud in my head I couldn't think of what to say, so I just nodded.\n\n\"I'll meet you out front, okay?\"\n\nI nodded again.\n\nIt was much cooler on the other side of the dirty glass windows lit up with neon beer signs. The door opened onto a tiny triangle of sidewalk. Another couple came out, both of them lighting up cigarettes before they crossed the threshold so I was enveloped in a cloud of smoke. I chose to step around the corner to get out of their way instead of into the street. It had rained since we'd arrived, and it was just my luck that I stepped into a puddle. Like my feet weren't already wet. At least there was a streetlamp post I could lean on.\n\nI heard the couple's footsteps fading on the wet cement as they walked in the other direction, their chatter waning with it. When it was quiet again, I sighed long and deep. Ah, a little peace. And fresh air. But my arms and shoulders were chilled by the latter. I was considering if I should go back inside when I heard footsteps right behind me.\n\nThe person bumped into me before I could get out of the way. I turned to yell at the culprit because that was twice in one night, but my feet didn't get the message and I stumbled forward. Arms wrapped around me, steadying me against a hard chest. I gasped in surprise before I considered that maybe Malcolm had gone out the back door.\n\n\"Be careful, Ms. Rockland,\" the masculine owner of the arms said. \n\nThe thoughts in my head may have been jumbled, but I knew he was definitely not Malcolm. He spoke perfect English, but with a foreign accent. I opened my mouth to ask him how he knew my name just as he stepped out of the shadows. What actually came out was, \"Whoa, baby!\"\n\nIt was the same man who had bought me a drink. The light winked off his eyes as he looked around. \"Maybe you should sit down.\"\n\nI slurred, \"I'll be fine.\" \n\n\"I insist.\" His arm was still around my shoulders as he pried my fingers from the post.\n\n\"No, thanks,\" I said, but I couldn't of think why I should refuse his help. He was only trying to be nice.\n\nSuddenly, his large hand covered my mouth. Something inside me said to bite, but my teeth scraped leather instead of skin. My hands clawed at the air as the strange but handsome man led me away in the opposite direction of the bar. The traitors, my legs carried me with him, no longer responding to my instructions to stop.\n\nWe walked up the street for several blocks. Each time I attempted to struggle in his firm grip, he held me tighter against his body. By the time we turned a corner and stopped next to a dark car, he was practically carrying me.\n\nThe backseat door on the passenger side opened. The man removed his hand from my mouth to push down on the back of my head. I told myself to fight him while he guided me forward, but the only result was a weak whimper as my limbs gave out and I tumbled into the obscurity of the backseat.\n\nThe door slammed shut behind me. I screamed, but another gloved-hand clamped over my mouth and I was pulled once more against a hard body. My fingers fumbled over the panel to find the handle as my continued cries were muffled. I heard the locks click a moment before I found success. Still, I yanked, but nothing happened. I heard the whir of a window being lowered, then a cool breeze brushed my face.\n\n\"A little extra for any trouble,\" the masculine voice of the body behind me said. His body pressed mine forward against the door as he reached around me, his citrusy-but-spicy-scented cologne drifting up my nose as I inhaled.\n\nI blinked rapidly as an envelope was passed through the opening to a waiting black glove. Or were there three gloves? I closed my eyes for a moment hoping to clear my vision.\n\n\"His usual, along with the requested package,\" said the French man outside.\n\nI opened my eyes to see his face appear in the space of the open window. Handsome be damned, he was not trying to help me.\n\nHe looked from me to somewhere behind me. \"Remind him that a little goes a long way.\"\n\nA small, black bag was held at the opening. Whomever was holding me in the car took the bag. The window went up, and the car moved forward. The weight on my back was released, but the arm remained around me as well as the hand over my mouth.\n\nI was so tired, but I told myself, \"Don't give up.\" I pressed my forehead to the cool glass and closed my eyes again to concentrate. I kept hearing the clacking sound of the handle being released until I could no longer grip the metal bar.\n\n###\n\nI had vague memories of being helped out of the car. Of walking up a set of stairs with the aid of two people. Of being led to a mostly dark room where I was stripped of my clothes. After I was laid down on a bed, sheets and a blanket were tucked around me. I moaned then. At least I think it was me.\n\nA voice whispered something in my ear. I didn't understand it. Then there was nothing for awhile.\n\nI swallowed several times when I came to again. I attempted to lick my tongue across my dried lips, but my mouth felt like I had been sucking on a cotton ball. I opened my eyes yet saw nothing. I heard heavy breathing. Was it me?\n\nWhen I tried to roll onto my side, my body would not cooperate. It took a few tries to realize my arms were stretched above my head. I could move my legs, but my ankles appeared to be secured somehow. I was trying to rationalize how and why when a door opened on my right.\n\nPain shot up my neck as I turned my head too quickly.\n\nA dark silhouette appeared against a backdrop of golden light. The door closed again, casting the room in darkness again. Then a husky voice said, \"Hello, Becca. I hope you're well rested. We have a lot of catching up to do.\"\n\nI screamed so hard and long that my throat was raw. My wrists and ankles were no likely bruised from yanking on my restraints. But I was fighting a losing battle. I was still secured to a bed with Brian Hughes standing nearby. We weren't in his bachelor-themed bedroom, but I guessed we weren't far from his sadistic lair disguised as a normal Chicago brownstone.\n\n\"Are you quite finished?\" he said as he fiddled with some switches on the wall until he seemed satisfied with the ambient light flooding the room. Then he perched on a stool opposite the foot of the bed where I lay while he sipped a glass of red wine. He wore his obligatory dark suit sans tie, and his white dress shirt was untucked with several buttons undone.\n\nI just glared at him, realizing my head was tilted up with pillows so that I was forced to stare at him directly. What an arrogant asshole.\n\n\"You really should reserve your energy. You're going to need it.\"\n\nI rattled the chains once more to show him I would fight him. However long I'd been resting had been enough for me to sober up. Surprisingly, I did not have a headache, which I usually did get when I was hungover. \"Fuck you!\"\n\nHe set the glass aside and stood. I had forgotten he was at least a head taller than me. From my prone position, he appeared quite menacing, and I shrunk back a little. He removed his jacket and rolled up his shirtsleeves. \"We'll get to that, Becca.\"\n\n\"Go to hell,\" I rasped, my eyes darting to the narrow table he was walking towards near the door.\n\nA little black bag sat on top next to a tall, white bottle and a rectangular box that was about the size of the one my tampons came in. From this distance and with the low lighting, I could not read the words on the latter two items. But I'd seen that bag. Hadn't I?\n\nHe squatted down. \"As I recall, you were in heaven last time.\"\n\nI spat at him.\n\nHe just continued with unzipping something beneath the table. A moment later, he turned around fully and approached the bed with two short, narrow chains and something I couldn't determine in his hand.\n\nMy heart raced as he dropped the chains on the bed, rested one knee beside my head, and reached over me. Not knowing what his intent was, but knowing it couldn't be good, I fought as best as I could by rolling my head back and forth as I yelled, \"Get off me!\"\n\nHe ignored me. As he lifted the mysterious object, I paused my thrashing long enough to see that it was made up of a red ball with a black band connected to either side. He took advantage of my sudden stillness to tug my jaw down until he could wedge the ball into my mouth. Then he secured the band around the back of my head, tightening it so that it was snug. \"Relax your jaw or you'll hurt yourself.\"\n\nI tried to speak, but the rubber ball\u2014although flexible between my teeth\u2014was hard enough that I could only mumble against it. And I slobbered while doing so. I resorted to breathing through my nose, but that made me sound a bit like a mad bull as I comprehended that he had just gagged me.\n\nHe flung back the bedclothes with a flourish. His only response was a guttural grown. Mine was a stifled shriek and an unsuccessful attempt to pull back as shivers jolted through my limbs.\n\nI was still wearing my stockings. They were a luxury I had not indulged in since my first and last sexual encounter with Brian\u2014because of said encounter\u2014but nothing else. Or rather, nothing else that belonged to me.\n\nStrapped to each thigh was a black, leather band that looked like a short belt with grommet holes and a buckle. I flinched again as Brian caressed my left breast and slowly slid his hand down my side. I watched him with morbid curiosity, repulsed by his hand touching me but unable to stop him.\n\nHe didn't speak as he retrieved one of the smaller chains he'd laid on the bed and secured it to a metal ring on the underside of the thigh band. His fingers trailed down my leg to my ankle. He squatted again, and I heard a metal clanking before my leg went slack.\n\nI yanked my leg away. The now-loose chain whipped out. It caught him on the bare part of his forearm just below his rolled-up sleeve. A red welt immediately appeared.\n\nBrian reacted exactly as I had expected: he did nothing. No cuss words, no striking me anywhere on my body. Instead, he continued in his controlled demeanor and moved my leg up so my knee was in the air. He secured the shorter chain on my thigh to the cuff on my ankle so that my leg stayed bent, and then he hooked the longer chain on my ankle to a new position on the side of the bed. Only then did he pause to wipe at the light trail of blood that trickled down his skin.\n\nHe didn't look at me as he walked around the bed. He didn't touch my body the way he had on the left side. He merely repeated the re-chaining process\u2014keeping hold of my right leg and the loose chain this time. When he was done, I was left with my feet flat on the bed, my legs pried open.\n\n\"You're a fan of Enigma, correct?\" Brian was back at his mysterious bag and pulled out an iPad. He tapped the device's screen a few times. Suddenly, the familiar sounds of one of my favorite artists streamed through the speakers. It almost drowned out his words as he shed his shirt, his back to me. \"I have a little treat for you, but I think I want to wait to show it to you. Strange as it may seem, I only have so much self-control. And you've kept me waiting a good, long time. First things first.\"\n\nI thought I would choke as he lowered his pants and turned to face the bed. His cock was long and proud against his pelvis. I felt bile rising up my throat at the thought that I once had been in awe of this man, of his manhood, as brief as it had been. I swallowed now with some difficulty.\n\nStill facing me, he pulled a shiny strip of material out of the rectangular box, clearing up the mystery of the contents within. He tore a square off and ripped open the package with his teeth. With a slow finesse, he rolled on the condom as he said, \"I really don't like to use these. But for my protection, it will have to do until we can make permanent arrangements for you.\" \n\nI screamed and struggled, but both were in vain. Oh how I wish I had my legs free. Especially to kick him and make him the one who would become sterile. I had never been so thankful that I'd had an IUD implanted when Malcolm and I had become regular lovers. But if Brian had had many other lovers since me, I was only protected so much.\n\nHe retrieved the white bottle and climbed up on the bed, kneeling between my legs. Then he finally looked up at me. There was nothing in eyes. Just a dark void. No remorse for what he had already done or what he was about to do.\n\nHow long had he planned this? Since the book signing? The altercation at the restaurant? The moment I'd said the safe word? This was payback for leaving. Of course, he'd call it training or some other term, but it was the farthest thing from it. Not when his intent was to make me do something I did not consent to. And I knew he would break me if I let him. So I couldn't let him.\n\nHe must have read the understanding in my own eyes as his lips curved up ever so slightly, but not enough to be considered a grin. The man never smiled. He tilted his head to the side and paused for a moment. \"You know, you have good taste. I can see why you like this music. It's very arousing.\"\n\nI wanted to close my eyes. To convince myself that I was just having a horrible nightmare and I could wake up any second. But I was more afraid of what would happen when I couldn't see him again. Not that I could stop him, but knowing where he was provided a tiny comfort in my brain.",
        "He hummed along to the music as he roughly pulled the pillows out from behind my head and shoved them under my lower back and ass. It was a tight fit due to the already strained chains, but it still raised my bared pussy up enough so that my body was tilted back towards my head. I could still see him, but only from the waist up.\n\nHe palmed the white bottle and then overturned it. I could see his hand moving up and down. Probably stroking his cock over the condom. He repeated this a couple of times before he overturned the bottle again and set it aside.\n\nWhen his fingers pressed inside me several times, I realized he was applying lubricant. Tears filled my eyes as he grabbed my knees and scooted himself forward. This was not a dream. Not even a nightmare. Oh, God, help me!\n\nHe suddenly sat back on his heels. \"I almost forgot. The safe word.\"\n\nYes! My heart leapt for joy, and I raised my head as best as I could to hear the way out. It didn't occur to me that he wouldn't understand me if I tried to speak it.\n\n\"There isn't one. Of course, you can say it if it makes you feel better, but it won't make a difference.\"\n\nAnd all of my hopes were dashed as if I were a glass of his wine that he'd intentionally dropped on the hardwood floor.\n\n\"You're my slave now. You'll have to earn the right to have a safe word again.\"\n\nWithout preamble, he gripped my hips and thrust into me with one long stroke. I screamed, but the muffled sounds only reached my own ears. Despite the lube, my pussy resisted the intense intrusion, and the thickness of his cock stretched me painfully.\n\nHe took his time raping me. I was awake for every excruciating moment. I stared at the ceiling or the bared-brick wall behind the bed and tried to block out the encounter\u2014to think of a happier place, a happier time\u2014but every little nerve in my body reminded of what was happening to me.\n\nWhen he was done, he came on my breasts. My face was a mess from my hot tears, my now-runny nose, and the slobber that had run out the sides of my mouth as I tried to breathe and cry and scream at the same time. I could smell him on me\u2014feel him in me\u2014even as he got off the bed and disappeared through the only door in the room.\n\nWhile he was gone, I relaxed as much as I could in my position. Eventually, my lower extremities became numb. I forced myself not to give into the exhaustion by counting the bricks on the wall.\n\nHe eventually returned, but he merely retrieved his empty wine glass and left the room again. Before the door closed, he flicked off the light so I was cast into music-filled darkness. Now, it was impossible to not give into my emotions. I had to close my eyes. And it didn't take long for the sensual tones of one of my favorite artists to lull me towards slumber.\n\nI don't know how long I was out, but when I woke, the room was still dark. And I was no longer alone. I couldn't see him, but I could feel Brian watching me. Probably from the stool with another glass of wine in his hand. The man sure loved to imbibe.\n\nThe ball-gag had been removed, and I struggled to keep my breathing slow. But my heart didn't want to listen as the thumping in my ears increased. It took me a moment to realize it wasn't just my heartbeat I was hearing. The music was still on\u2014or back on\u2014but had changed to a rhythmic drumbeat that kept repeating itself. It was hypnotic.\n\nInstinctively, I tried to stretch. I discovered that my legs had been straightened, but they were chained somewhere near the footboard again. I wiggled my toes to make sure the blood was flowing properly and took a deep breath. Now what?\n\nWe played the silent game for quite awhile. The song kept repeating itself, or maybe it was just really long. I stared into the darkness to where I knew he sat contemplating who knows what.\n\nI had just closed my eyes and convinced myself that he wasn't really there when he spoke.\n\n\"I almost gave up on you.\"\n\nMy eyelids shot open, and I stared at where the ceiling would be, my heartbeat racing once more. I considered remaining quiet, but the rebel in me refused to shut down. \"Why didn't you?\"\n\n\"I tried to replace you.\" There was the sound of bare feet slapping against the wood floor as the song finally stopped. The footsteps continued but did not get closer. He was pacing. \"You've gotten under my skin, Becca. A rare find. I couldn't ignore the desire to uncover the diamond in the rough that you are.\"\n\n\"Surely there are other women who enjoy your little control games.\"\n\nHe hummed his agreement. \"There have been others, but none like you. Before or since. I knew I had to finish what I'd started with you. For both of us.\"\n\nIf he said some bullshit like, \"You complete me,\" I was going to throw up. Thankfully, he did not.\n\nThe footsteps finally drew closer, and my muscles tensed. The bed shifted as he sat down on my right side. I tried to scoot away but only managed a couple of inches. He fumbled a little with the lack of light as he strapped on the gag, and I moved my head around as best as I could when I realized what he was doing. But in the end, he was successful.\n\n\"You see, it's very hard for me to concede defeat, Becca.\" He caressed my cheek with the back of his fingers. \"It's always been a strength of mine.\"\n\nI snorted softly, not sure why I found him amusing when I was in this predicament. But I kept envisioning him as a child, one who didn't necessarily get into fights but found other ways for revenge when he didn't get his way. Creative ways. Conniving, evil ways, even. And he prided himself on this ability...and probably at never having been caught.\n\nHe stood. The room was cast into blinding light that made me close my eyes. Thankfully, he turned the intensity almost all of the way down. When I could see again, he was standing beside the bed with the black bag from the table. It was no bigger than his fist. I'd had one just like it when I was a kid for holding mixed gems and stones from a museum. My brothers each had one for the ball and jacks game. I doubted Brian's little bag contained either of those trinkets.\n\n\"I am very good at my job, both professionally and personally.\" He pulled out a tiny, clear vial no bigger than a couple of inches tall that was mostly full with a white substance. When he set the bag on the single nightstand, there was a clinking sound of glass hitting glass, as if there were more vials inside. \"I'm a businessman even when I'm not in the office. It's almost impossible for me to shut off that role. It carries into the rest of my life. Into my bedroom, as you've experienced firsthand.\"\n\nI tried to ask him what the white stuff was, but my mumbling reminded me that I couldn't speak well with the ball-gag in my mouth. Part of me didn't want to know, and the other half already had a good inkling. I was probably going to find out more sooner than later, much to my dismay.\n\n\"Shh,\" he said, pressing two fingers against the ball and barely brushing my lips.\n\nMy continued whimpers and attempts to move away from him\u2014however futile\u2014were apparently not part of his plan. Like he thought I'd give into this willingly?\n\nWith a sigh, he straddled me with his knees on either side of my head. His shins pressed down on my shoulders and arms, and his thighs held my head still so I was looking up at him.\n\nI tried to suck in my breath through my mouth, but I feared I'd swallow the ball-gag. So I inhaled through my nose, and I swear, he smiled at last.\n\nHe unscrewed the black cap on the vial and pulled forth an attached silver stick with a miniature spoon on the end. He dipped the spoon in the white powder and set the bottle on the nightstand beside the bag. \"Now keep breathing just like that. It's perfect.\"\n\nOh. My. God. Seriously?\n\nWhen I didn't comply and forced myself to exhale through my mouth, causing saliva bubbles and drool to trickle down my cheeks, he used his free hand to tip my chin up and hold it in place. I managed as deep of an inhale as possible before his thumb and forefingers pinched my lips against the ball, sealing off any air passage. Then he held the spoon beneath my left nostril. \"I want you to be relaxed while we start your training. You're way too tense.\"\n\nI held my breath as long as I could. I knew what would happen if I tried to inhale through my nose. When I was young, I'd read a fiction story about a girl who had killed the boy who liked her by forcing him to snort bad cocaine. He was trying to entrap her into a confession by allowing her to tie him up for apparently kinky sex, and she had taken advantage of his position to put duct tape on his mouth so he had to inhale. And the stupid part was, she'd only killed her crush because she'd found out he knew she had killed some of their classmates for some stupid reason, so his plan was foiled and he died.\n\nI couldn't figure out why that story kept running through my head right now. Maybe because I worried that whatever Brian had on that spoon might kill me, too? In the instance of the book, the boy had rigged his camera to take time-photographs to catch his time with his chick...which meant he knew she might try to kill him. I'd had no perceptions that Brian would kidnap me and force me to have sex with him. I doubt he'd try to kill me with an overdose, but...\n\nI exhaled and inhaled. Something rushed up my nostril and punched my brain.\n\nWhoa! I thrashed against the restraints which didn't do much with Brian's weight on my chest. After a minute, I settled down but was still breathing like a mad bull.\n\n\"Good girl.\" He must have loaded up another spoonful because the other half of my nose felt like something had been shoved up it and then went numb.\n\nI tried to swallow when he let go of my mouth, and I grimaced at the bitterness I tasted there. He climbed off me and sat on his fucking stool as he sipped his glass of wine. I guess he was waiting for the drug to take effect.\n\nI was more awake now. I was pissed. Yet every muscle in my body seemed to slowly relax against my will. And then I forgot what my will was. My breathing evened out, and I stared at two of the can lights in the ceiling until they merged into one.\n\nHe must have been satisfied at my progress because he sat beside me on the bed. The ball-gag went slack, and he wiped my mouth with the sheet. \"Don't want you to choke on me, dear, Becca.\"\n\nA whimper escaped as I felt the heat of his hand cover my breast. As his fingers caressed. I fought against enjoying his touch. A voice inside kept telling me this wasn't right. He'd just drugged me. He'd probably had that guy drug me somehow at the bar, too. This wasn't how a relationship was supposed to be. How BDSM was supposed to be. Yet another voice rose above the first and said to just feel.\n\n\"So I had to think of a way to get you back here,\" Brian's voice competed with the others in my brain now. \"To show you what you've missed being by my side. I've been patient. More so than I normally would have been.\"\n\nI tried to bite my lip to suppress a moan as his hand lightly stroked down my belly. I think I bit my tongue instead, but I felt no pain.\n\n\"You're a hard woman to keep track of. Especially when you're off gallivanting around the globe with your book signings. I almost put my plan into action several times in the past few months, but the timing was never right. What luck it was to be at the same bar you were at tonight. Katia and I were just having a drink for old-time's sake. A couple of phone calls later, and here you are.\"\n\nHis hand was between my legs now, his fingers dancing just over my mons. Impulsively, my hips arched up at the sensation. The small voice in my head yelled to stop. The bigger one moaned aloud. Damn it.\n\n\"You were with that man again. Do you know what it does to me, seeing how he won't keep his hands off you? He needs to learn not to touch other people's property.\"\n\nI jumped as his fingers brushed my clit. No! No! But what came out was, \"Ah! Ah!\"\n\n\"I took a huge risk. Gerard would have fought him off if he had come outside with you. But luck put you in the perfect position.\"\n\nHe slid his hand lower and pressed up into me now.\n\nI gasped, writhing against his hand. Oh, yes!\n\nHe stroked long and deep, his thumb rubbing my clit. \"You need someone who will protect you. Who's always by your side.\"\n\nTears leaked out the corners of my eyes as his fingers thrust faster.\n\n\"Stop fighting it, Becca.\" His hot breath caressed my ear. Then his mouth suddenly covered my nipple and he bit down.\n\nI screamed. And despite all of my efforts, I came.\n\nHe proceeded to perform oral sex on me while I floated on a bed of clouds. I hated myself for liking it. When he'd made me come another couple of times, he finally relented. I tasted the tanginess of my release on his lips as he kissed me. Then he whispered in my ear, \"Welcome back, Becca.\"\n\n###\n\nIt was later that day during our first session of how to suck his cock that I saw him take a couple of hits of cocaine. This was of course after he used his hand on my mouth to force me to inhale it. He seemed accustomed to the process and the effects enough himself to convince me that it wasn't his first time.\n\nHe also introduced me to a collar and leash, tools he said all proper Masters used with their slaves. He led me around the room by the leash while he waited for the drugs to kick in, yanking the chain when I didn't immediately obey. When he tired of that, he secured the collar to the far brick wall using chains and heavy-duty eyehooks that had been embedded into the grout lines in various spots. Then he applied a pair of nipple clamps to my breasts, \"to heighten the pleasure,\" or so he said. All of this while Beethoven played in the background. Not usually my cup of tea, and yet I found the music sexually arousing that day.\n\nAs my muddled head tried to focus on being angry with him now, he shed his business suit so that he was standing naked in front of me. His cock was not fully erect yet, and he stroked it languidly a couple of times.\n\nI wondered if he had been at work. If he'd had a bad day. Is that only when he snorted? He hadn't acted high when we were together before. Maybe it was a newer habit, like stalking me.\n\n\"Be a good girl and don't bite.\" He lifted my chin up and glared down at me. \"You'll regret it.\"\n\nHe held his cock to my lips. I didn't comply with his unspoken request\u2014mostly because my brain wasn't working\u2014and I tried to push him away. He smacked my cheek, but he stopped.\n\nIt was only momentarily, though, as he retrieved the wrist cuffs and secured my arms to the wall above my head. When he stepped forward again, he reached down and tugged on the small chain between my two nipples. As I cried out, he shoved his cock into my mouth.\n\n\"That's it, Becca. Open wide.\"\n\nI gagged and tried to pull away, forgetting I had nowhere to go.\n\nI prayed Malcolm would come find me. Just the thought of his name brought tears to my eyes. I wanted to believe that this would end any minute, that I could go home. But something deep down told me that was merely wishful thinking. No one knew where I was. And Brian wasn't about to let me go free willingly any time soon.\n\nAs he forced me to suck his cock, Brian went on a diatribe about Master/slave roles as they pertained to us. I think it was mostly due to the coke. He had never talked so much in my presence. The drug made me horny. It made him a chatterbox. Who would've thunk?\n\n\"The first step to being a good slave is learning the role of the submissive. You have to give into that inner desire to want to be controlled. You and I both know it's in you. But you're suppressing it. You're fighting it. You need a good teacher, a proper Master, to show you how to release it. And how to discipline you when you need it.\"\n\nMy eyelids drifted closed as my mouth encased his cock. As the stimulant took hold of my senses, and I tasted the saltiness of his precum. Smelled the natural, masculine musk of his groin. Heard the classical music under the deep tenor of Brian's voice that lulled me to a sleepy state.\n\nThere was a sharp sting at my nipples. My cry came out as a gurgle, and saliva dribbled out the corners of my lips that were still wrapped around his stiffening flesh. I must have bit down because he smacked my face as he jerked back. But in his own drug-induced state, there wasn't a lot of power in his swing. Or at least I didn't feel the pain when his palm connected with my cheek.\n\n\"Eyes on me. I didn't give you permission to close them. And no teeth!\" He put one hand on top of my head and tilted it back slightly, which opened my jaw wider. He pushed deeper into my mouth than before and held himself there while I gagged. \"That's the second step. Follow your Master's orders, for He knows what is best for you.\"\n\nTears filled my eyes as he finally withdrew. I knew that eventually, I was either going to pass out or throw up all over him. I was leaning more toward the latter, but I didn't know if my muscles would cooperate. Maybe I'd asphyxiate, and this would all be over sooner than I thought.\n\n\"Relax. Your reflexes will adapt.\" He suddenly withdrew completely again, which left me choking. \"Take deep breaths, Becca.\"\n\nAs soon as I wasn't seeing stars, he started again. Although, there were three cocks waving in front of my face now.\n\nI tried to concentrate on breathing through my nose as he continued his speech about how good submissives know their place. That in time, they embrace the slave role they ultimately desire. That some subs take longer than others, but he had patience for me. He knew how to draw it out of me, and I was at the perfect stage to be molded to his type of sub as long as I let him.\n\nProblem was, he was conveniently forgetting that this \"slave\" was being force to \"embrace the role\" completely against her will with an unwanted partner.\n\nHe repeated what he considered appropriate training for proper blow jobs several times. Eventually, he showed me how he liked his balls licked and sucked. How to lick his shaft properly. How to suck or just be still as he controlled the speed and depth as he fucked my mouth. He even unhooked one of my hands to stroke his cock at one point.\n\nWhen I was on verge of delirium because I wasn't sure if I wanted to suck him raw or bite off his dick, he pulled out, gripped my chin with one hand and stroked his cock with his other. A moment later, he came on my tongue. Before I could think twice, he clamped my mouth shut and tilted my head back as far as it would go. \"Swallow, Becca.\"\n\nMy gag reflexes kicked in this time, but the angle of my head proved gravity was stronger. Under the burning sensation of bile, I tasted the bitterness of the cocaine mixed with the thick, milkiness of his semen. He stroked my throat with the backs of his fingers until I swallowed three times. Only then did he release his hold on me.\n\nBrian rearranged the chains so only the leash was attached to the wall, then he stumbled out of the room. He left behind his clothes and even forgot to shut the door.\n\nI did throw up then. Then I crawled as far away as possible from the mess and laid down on the cold floor. I cried as I came down from my high. I was shaking. My jaw and my breasts hurt. I lost sense of time as I wavered in and out of consciousness.\n\nWhen Brian finally returned, he led me by the leash to one side of the bed and bent me forward over the mattress. Then he flung the leash across the bed and secured the chain to the other side so I couldn't get up. Like I was in any shape to move on my own? I felt like a marionette being guided around while my strings kept getting tangled.\n\nUnfamiliar music filled the room, but I still heard the sounds of him preparing a condom. His hands gripped my hips and pulled me back until the leash was taught. Then he fucked me from behind. With nothing in my mouth, I could still attempt to scream. But all that came out was a cacophony of whimpers and moans.",
        "He never said a word about the vomit as he cleaned it up.\n\nThree more times that day, he returned to \"practice\" my oral sex techniques. Thankfully, he did not make me swallow his cum after the first time, but that was because he immediately chained me to the bed to fuck me afterwards. He came across my front or back when he was done. And he always left me with his semen drying on my skin. By the fourth time, the layers had caked on top of each other so that I couldn't take a breath without smelling him. I threw up again, this time in a bucket he had placed on the floor directly below my head. How considerate.\n\nApparently, the drugs gave him stamina as well. I wished he would have a heart attack and die.\n\n###\n\nI sunk into a depressed sort of haze after that. Every part of my body hurt now. The pain was dulled by the cocaine, but only temporarily. Unless I was sucking his dick, eating, or sleeping, he made me wear the ball-gag. To begin each session, he made me snort a tiny spoonful and led me around by the leash.\n\nHe'd direct me to lay down, sit down, or kneel down while he had me perform various sex acts. If I didn't obey to his liking, he chained me face-first to the wall and whipped or flogged the back of my legs. Then we'd start over.\n\nI'd begun to form welts, some that split and bled. Due to my stubbornness to not give into his desires, the punishments kept coming. And the chosen device to inflict said punishment would tear the healing wounds open again. He would always treat them after he was done with our session, but it did no good because I'd be forced to lay on my back on the bed so the sheet stuck to my legs.\n\nI fought to not give up. To not give in to his madness. Part of me acknowledged that he had changed. He wasn't the same man I'd met in our interview. In my first real kinky situation. I did not believe he'd been doing drugs back then. But he must have been snorting long enough since then that it was affecting his rationale now, what little of it was left. Did he even go to work each day? How did he manage to keep a job? To keep this part of himself hidden? To keep me hidden?\n\nAlthough Brian's words rang true that I had a submissive side, he was wrong about those feelings still being suppressed. I had already begun to embrace them. Just not with him. And deep down, I think he knew it, too. Which is why I think he had embarked on this scheme: to create a world where he could have me, at least in his mind.\n\nAs my time in captivity ensued, he seemed to give me more hits to be compliant. I was crashing harder as a result. I was no longer able to discern if it was because I'd lost my high or if my body was coming out of the sub space it had grown accustomed to entering when I was in a session. A session with Malcolm. Problem was, my body was also no longer able to tell the difference between who was controlling me at that time of pseudo elation because I couldn't think rationally due to the drugs in my system.\n\nOh, Malcolm. He occupied my mind during those times where I just wanted to curl up and die. I thought of how much I enjoyed being with him. Wanted him to remain in my life. I told myself to keep believing. He wouldn't give up on finding me. He and Drake would not just let me disappear without a fight.\n\nUnconsciousness came slowly but surely every time. I'd rarely been able to just sleep. And I never knew if it was night or day. Or how long our sessions lasted. They just seemed to bleed one into another.\n\nSometimes, as I lay waiting for the darkness to take over me, I wondered how I would survive if I ever escaped. Could I? Or would it just be easier to let go and succumb to the horror that had been created around me?\n\n###\n\n\"The pretty little author has become quite the celebrity,\" Brian's deep voice growled in my ear. I had heard him take six snorts of cocaine when he first walked in the room. Two more hits than usual. That and his already apparent bad attitude did not bode well for me. \n\nI was standing beside the bed, ball-gag in my mouth, my hands bound behind my back as I leaned forward with my ass in the air. He'd already stuffed a pillow under my belly and cuffed a spreader bar to my ankles. He was in the process of securing the leash of the collar to the other side of the bed. \n\n\"You were the top story this morning on the local news. 'Missing mystery writer. Who dunit?' Very original.\" He made three ticking sounds with his tongue. \"The skeptics think you disappeared intentionally due to all the paparazzi. I saw your little boyfriend. He looked so pathetic, barely able to speak when it was his turn. Two other men did most off the talking. Your brothers, Drake and Alexander, I presume? I see where you get your good looks.\"\n\nThey hadn't forgotten me! I was trying to grin when Brian tugged the leash, making it taught. I did a face plant into the sheet. It was an effort to turn my head so I could breathe. My line of vision was now limited to the headboard and the bare bricks of the wall visible through the wooden slats.\n\nHe'd told me at one point that we were still in his brownstone. He had converted part of the master suite into a walk-in closet and an additional storage room when he'd moved in years ago. The latter was only accessible through the closet. That explained the third, mysterious door I'd seen on my first visit. Just a couple of months ago, he had remodeled again, creating the special room for me out of the storage room.\n\nWhen I was alone in the room, he kept the lights off and me chained to the bed or the wall. He brought me food several times a day. I was never allowed the use of any utensils, and usually he fed me. Though, there were times he let me do it myself, but that was always from a plate on the floor. I'd tried to keep track of the pattern of meals to determine if it was morning or night to count the days. He made it difficult, though, by varying the types of food, the frequency, and the quantity he brought. \n\nIf he started a session with obedience training, he would wait until the end to rape me. Those were always the longest sessions because my stubbornness prevented me from just giving into his will, so he usually had to discipline me as well. Twice, he just came in and got right to it without the assistance of cocaine or any extra restraints besides the basic bindings holding my limbs. He'd left without a word when he was done as if he had other pressing matters to attend to. And there were times where he just sat on the stool drinking his wine with me kneeling beside him, his hand forcing my head to rest on his knee while he pet my hair.\n\nThe first time he allowed me to use his bathroom, I'd reconsidered that he had no dignity left. But even that remaining shred was eliminated when he led me there by the leash...and remained to watch me. On the two occasions he allowed me in the shower, he was with me and forced me to suck his cock while he bathed instead. I'd been returned to my dark room with wet hair and damp skin, shivering under the thin sheets and blanket.\n\nHe had talked about getting me a submissive-appropriate wardrobe\u2014whatever that was\u2014when he deemed me worthy to wear clothes again. Eventually, I would be allowed out of my room so I could share his bed and eat with him, too. Wasn't I special?\n\nYet I still considered what meager things he'd allowed me a luxury. I'd read stories of slaves in BDSM relationships being deprived of a real bed or linens...and they said they relished that humbling part of their role. I doubted Drake and Daphne's relationship stooped that low. It was inhumane in my eyes, even if both partners consented.\n\nAs messed up as Brian was when I first met him, this was not the same man. He had been...refined. Like that man in the bar. He wouldn't have resorted to kidnapping a woman to have sex with him. While he'd had dreams of me living with him while retaining my own quarters and writing career, I would not have imagined him treating me like a dog if I'd consented. I had to believe it was the drugs that had done this to him. Granted he hadn't taken no for an answer easily, but something must have finally snapped. The man was absolutely insane to think that this was all acceptable.\n\n\"But soon they will give up the fruitless search,\" Brian's voice broke into my thoughts. \"It's already been a week.\"\n\nMy mind boggled with that news. Seven days? Was that it? It had seemed like a month.\n\n\"We'll continue to use the time wisely to fine-tune your training. And after the media has died down, after I think you're ready to go back in public, we'll let them know the skeptics were right. You were hiding from the limelight. Maybe I'll bring you a laptop and you can write a new novel to show them what you were doing with your time in seclusion. \"\n\nA tear ran down my cheek. How long did he think he could keep me here? Did he really think that I'd cave in to his desires and go along with this maniacal plot without chemical persuasion? Was I fooling myself to think that I wouldn't?\n\n\"I have something special for you today.\"\n\nI heard the snap of the lubricant bottle being opened. My muscles tensed, waiting for him to proceed. But nothing happened. I wished I could see more. Like what the hell he was doing. Not that it would change the circumstances, but sometimes knowing something was going to happen first lessens the shock of the event. Or sometimes not.\n\nI sighed so heavily through my nose that I felt my own breath on my naked shoulder. I shuddered. What I wouldn't give for one of Malcolm's massages right now. I started to smile and inhaled when my nose felt funny. \n\nWell, fuck. I blinked as I saw Brian's hand moving right in front of my eyes. And that damn little vial with the tiny spoon attached to the lid moved right with it. I was cussing up a storm in my head when I inhaled again and a puff of powder went up my other nostril, punching my brain awake.\n\nI was concentrating on the ringing in my ears as the drug took effect and not on the buzzing of Brian's voice as he spoke. But when I saw his hand reappear in my line of sight with a clear object that resembled a large teardrop at one end and a small doorknob at the other, everything in my head came to a screeching halt.\n\nAs futile as my numbing brain knew it would be, I screamed into the gag and jerked against the restraints.\n\n\"Settle down.\" His other hand rested on my back. \"I take it you know what this is? Blink twice.\"\n\nI blinked a million times so fucking fast my eyelashes would have lifted me off if I wasn't chained to the damn bed.\n\n\"So you know you need to relax.\"\n\nMy skin crawled as his touch moved lower down my spine. I tried to wiggle my ass to shake him off, but he continued until he reached my wrists. Then he slapped my ass so hard it stung.\n\n\"Be still or it will hurt more.\"\n\nI sobbed, my nose running now, as his fingers rubbed liquid down between my ass cheeks. As his thumb tested the pliancy of my asshole with the aid of the lubricatn. He was gentle, which belied his intentions. Most likely, he did not want to break his favorite toy. Yet.\n\nMy whole body ached from the confined position he'd put me in. Gradually, the tension eased from my taught muscles as the drug spread. I was still crying but unable to resist by the time he removed his thumb and replaced it with the rounded, narrowest end of the anal plug. Despite the drug's effects on me, I screamed as he put pressure and the smooth glass eased inside me with the aid of the lube.\n\nUnlike the few times Malcolm and I had engaged in anal play, Brian did not let me adjust to the girth of the device. Quite possibly, he thought I'd be relaxed enough that my body would not involuntarily reject the intrusion. Most probably, though, he didn't care.\n\nRegardless of the reason, the pressure grew stronger until my rectal muscles expanded enough for the largest part of the teardrop to pass. He tugged on it and must have been satisfied as the pressure ceased. Then there was just a sense of fullness. Instinctively, my muscles clenched and released around the object.\n\n\"Do not push it out,\" he said, massaging my ass cheeks as they closed around the doorknob-shaped handle that protruded outside of my body. \"I will not be so kind if you do.\"\n\nI had never been so humiliated in my life. Especially as I grew adjusted to the plug. I tried to tell myself that I didn't like it. But that would be a lie. Malcolm and I had discussing trying one, but I'd been too scared so we stuck to just a tiny vibrator. Now that it had been inserted...\n\n\"Oh how I love this view,\" Brian's said.\n\nHis Beethoven started, then his cock pressed into my pussy, making me cry out. Of course he couldn't hear me with the gag in my mouth. But I wasn't out of my mind enough to not react to the unsolicited sex.\n\nDamn him. Damn my submissive side. Damn the drugs.\n\nI came so hard my body shook, rattling the chains keeping me in place.\n\n\"Oh, Becca. How well your body gives you away.\"\n\nWhen he was done, he withdrew and released my wrists and ankles. He left me on my stomach, the anal plug still in place and the leash chained to the underside of the bed. He patted my ass, and I heard the door open and close between the song break.\n\nI was lying there, staring at the wall, when two facts pushed through the cobwebs that the cocaine had spun between my ears. One, in his own delirium from his apparent super high, he'd left me unrestrained except for the leash. And two, although the collar had a tiny padlock on the buckle and the leash was also padlocked to the collar, he never padlocked the chain to the bed during a session for faster access to change my position.\n\nMy breathing grew rapid as I forced my brain to function. To hope. The first thing I did was squeeze that fucking plug out. Then my hands responded\u2014though sluggishly\u2014and yanked the ball-gag over my head. Drool ran down my chin as I gripped the sheets, pulling my body up onto the bed enough so that I could reach under the mattress. I almost yelled as my fist wrapped around the carabiner clip he'd used to secure the other end of the leash to an eye-hook. As I pulled my hand away, it brushed more eye-hooks imbedded into a wood frame where the box-spring normally would be. He'd custom-made the damn bed as a torture device. Oh, Lord, help me.\n\nI wrapped the blanket around me as I scrambled off the bed. I almost fell flat on my face in my haste, both from the lingering drug and because I stepped on something hard and round. It took me a moment to realize that it was the metal spreader bar. I grabbed it and continued to the door.\n\nTo my surprise, the handle turned when I tried it. The room on the other side was dark except for the open door straight ahead. I passed rows of dark suits and white dress shirts as I hurried through Brian's closet. When I peeked into his bedroom, he was naked on his back on the bed.\n\nThe bedroom door to the hallway looked so far away. Yet it was right there. If I hurried...\n\nNo. I had to think, as hard as it was in my addled state. I gathered the blanket tighter around me and crept up to the bed. I don't know how many minutes it had been since he'd released himself on my ass, but his cock was still stiff as it rested on his thigh. Good lord. Was it the coke?\n\nThe spreader bar felt like it weighed a hundred pounds as I raised it. His eyes flickered open. He just stared up at me for a moment. Then his eyes and his mouth widened just before I brought my arm down. I heard the crack as the metal hit his forehead. I saw blood trickling down his face as the light left his eyes.\n\nI didn't take the time to find out if I'd killed him or just knocked him out. I was out the bedroom door and halfway down the stairs to the main floor when I realized I was still gripping the rod. I went to drop it but it got caught up in the blanket as I yanked it higher away from my feet so I could run.\n\nIt took three tries to yank the front door open. The first time, I realized the deadbolt had been locked. The second, I had looked back to see if Brian was following me and my hand slipped off the handle. I left the door open behind me as I ran out into the sunshine, screaming at the top of my lungs.\n\nI stumbled down the sidewalk and into the street. A woman walking her dog ran over to me. I saw her mouth moving, but I didn't hear what she said. She followed me as I staggered forward, the blanket falling from my grip. I tripped on it and fell to the pavement, the metal spreader bar clattering just before I landed on it.\n\nI don't know how long I sat crying in the road, wearing nothing but a blanket and a dog collar and leash. The woman didn't leave my side, and her I heard her talking to someone as her dog sniffed at me and licked my hand. \n\nI was wavering between wanting to lie down or get up and run because we were too close to Brian's house. He was going to come get me, but I was so tired. I tried to tell the lady that several times, but I didn't hear any words come out of my mouth. She just kept nodding her head and glancing at me as she held her phone to her ear.\n\nWhen I heard the sirens, I finally gave into my exhaustion. The ground felt so hot under me. Then there were soft voices in my ear telling me I was safe. Asking me if I was hurt.\n\nI was moved onto something softer. Raised up. I tried to curl onto my side, but they'd strapped me down. I screamed again, struggling against the new restraints. Something pricked my arm, and I felt like I was floating. My arms and legs went slack, and my screams turned to sobs.\n\n###\n\nI didn't really remember the ride in the ambulance. Or the doctors surrounding me at the hospital. Just that there were too many hands checking me over for injuries. Too many questions I couldn't answer at that time.\n\nA nurse had just cut the collar off my neck when I heard one voice rise above the drone. And another. And another. Voices I thought I'd never hear again.\n\n\"Oh, my sweet daughter!\" My mother covered my cheeks in kisses.\n\n\"You gave us quite a scare,\" I heard my youngest brother, Alexander, say.\n\nTwo of Drake's faces wavered in front of my blurry eyes. I reached out and gripped his arm as he hugged me and whispered in my ear, \"Thank, God, you're okay!\"\n\n\"Becca!\" Malcolm's gruff voice made me push my brother away and scramble upright on the gurney.\n\nDespite a woman's repeated pleas to wait for the doctors to finish, Malcolm pulled me into his arms. I clung on for dear life, tasting the salt in my tears as they drenched my cheeks. Never in my life had I been so glad to see him. To hear him. To feel him.\n\n###\n\nSIX WEEKS LATER\n\n\"Becca, you have to eat something, darling.\"\n\nI tucked my hair behind my ears and briefly glanced at Malcolm whose head peaked through the opening in the floor that led back down to the second floor of his beach house. Then I returned to stare at my wall.\n\nThere had been no trial. I had been willing to testify, but Brian's ego had been his own undoing. After he'd recovered from the concussion I'd given him, he claimed it was a consensual arrangement between the two of us. The room was just where we'd had our kinky sex but I slept in his room. His proof was that there was no lock on the door, so how could he keep me in there? And he said I was free to leave at any time but chose not to. My agitated state when the dog lady found me was due to the recreational drugs we'd used to enhance the sex. He had an answer for everything.\n\nHowever, the police had confiscated his iPad along with everything else they'd found in the secret room when they arrested him. There were at least a dozen videos of our sessions, each one more damning than the previous one. Most showed him forcing me to snort cocaine. The most compelling one for my case of kidnapping and rape was the last session where he'd admitted on camera about seeing the news conference and how he planned to explain my disappearance. Apparently, he'd set up the camera to film the double-penetration session and had pressed record too early. I'd never been so thankful he'd gotten so high that day.",
        "He had caved after that. We'd sat in horror as the police told us about Brian's elaborate plans once he had confirmed I was there with my group. To hire the French man who paid the lady\u2014who was unknowingly a fan\u2014to distract me so he could make me spill my drink only get me a doctored one. To take a taxi home and hire another man to drive me to the brownstone so Brian would have an alibi. It was luck that I had goten split up with Malcolm. But I think the French man would have had a plan for that, as well. Such malicious premeditation on Brian's part.\n\nMalcolm had brought me to the East Coast as soon as the hospital released me from their detox program and the police had given the okay to leave the state. He'd arranged to go on sabbatical for at least the first semester to give me undivided time to recuperate. Once we'd arrived in Maryland, I'd taken refuge in the beach house's observatory room when I wasn't attending counseling.\n\nHalf of my day was spent staring at my wall. The other, I stared at the floor or my hands while the female psychiatrist waited patiently for me to open up. Mostly, I struggled with how to tell a complete stranger that I liked being tied up for sexual gratification. And yet, my kinky predilections did not mean I'd consented to the torture that Brian had inflicted upon me.\n\nI knew the doctor had private sessions with Malcolm, as well. Although I'd given permission for him to view what footage there was of my rape, I feared what had been discussed behind closed doors. I had refused to see it myself, even though it was highly recommended as part of my own therapy. I had been held captive nine days, not seven. I didn't need to relive the torture in Technicolor. I could recall enough to haunt me for a lifetime.\n\nIn addition to my anxiety of what I had experienced, I felt guilty about how my boyfriend had perceived my obedience to another man in sexual situations. And while I didn't know what all was included in the videos\u2014or remembered all of the details of what wasn't taped\u2014I was fully aware that my reactions at times would have given the impression that I enjoyed the sex. I felt I'd betrayed Malcolm in some regard. And that crushed my heart.\n\n\"Sweetie?\" Malcolm dragged the other chair over to sit by me. \"I promised not to push you to talk. And I promised not to touch you until you're ready. But you have to take care of yourself. You need to sleep and eat better. Can you at least do that for me?\"\n\nWhen I'd gotten home today and escaped to my hideout, I'd lowered the retractable window despite the overcast weather. I'd spent the hours since just smelling the salty, ocean breeze mixed with the sweet hints of a storm on the way.\n\nI shrugged now and crossed my arms. I had no appetite despite what the detox center had predicted. And I had no energy. When I slept, it was in this room with the trapdoor open and no one else was allowed near me. But I still had nightmares of being chained. And when I was awake, I only wanted to sleep. The only time I was undressed was when I took a shower, which was pretty infrequent.\n\nDrake and Daphne had visited for a weekend to try to cheer me up, but I had ignored them as well. I just couldn't pull out of this funk that had settled on me since I'd been discharged. I knew I needed relief. And I had an inkling of how to get it, but I was scared. Scared that it would do more harm than good. So I kept my mouth closed and shut down as I usually did.\n\n\"You'll flood the house when the storm hits.\"\n\nI watched him close the window and secure the locks. And my insides grew taut. Suddenly, I felt like any control I had was stripped away. I was being sealed in. I couldn't escape. I couldn't breathe.\n\n\"Becca!\"\n\nI heard him behind me as I struggled to get down the ladder. I had to run. I needed air.\n\n\"Slow down! Wait!\"\n\nI missed the last two steps and fell to the floor in a loud thump.\n\n\"Becca!\" Malcolm was there beside me gathering me into his arms. His hand felt my knee, my ankle, my arms. \"Are you okay?\"\n\n\"Don't!\" I hit his arms with my fists.\n\n\"I'm sorry! I know you don't want me to touch you, but I can't take this anymore.\"\n\n\"No! Let me go!\" I screamed at him.\n\nHe ignored me, scooping me up in his arms. I fought him all the way to his bedroom. As he yanked back the covers and crawled underneath them with me. As he curled his body to my back, tucked the bedclothes around us, and pressed his face to my hair.\n\nWhen I tried to move, to pull away, he tightened his grip. Slowly, I fought off the demons inside and he pulled me back from the edge. I cried until I was all dried up. Through it all, he said nothing. And for the first time in over a month, I slept peacefully.\n\n### \n\nDespite my fears, I'd broken my silence today. It had been two days since my breakdown. Or rather my breakthrough. I hadn't told Malcolm, yet. We hadn't talked much since he found me at the hospital. Any conversations that we had were one-sided with the occasional grunt or gesture from me accepting or rejecting a suggestion on his part.\n\nAmazingly, I had felt freed\u2014not judged\u2014by the psychiatrist after shoving the burden off my shoulders. I had relayed what I could remember of my capture. Of how I wanted the man dead, although being incarcerated was a good start. Of my own sexual tendencies and how I feared my admittance thereof would make onlookers think I deserved what I had gotten. And finally, of my concerns about my relationship with Malcolm. The doctor had smiled at that one. She told me I had to talk to Malcolm about my feelings. I might be surprised.\n\nUsually after our sessions, we retired to the beach house although we stayed in our own spaces. But today, Malcolm said he needed to run some errands and dropped me off at the front door. I pretended not to care as he drove off even though my chest hurt to see him leave. I knew he'd return\u2014and I knew he probably wasn't distancing himself because he was mad at me\u2014but I still felt a slight sense of abandonment. Yet, it was good because I needed time to think about what had happened today. To build up my courage.\n\nI wandered through the different rooms and levels of the house. Reflected on the days we had spent here when I'd been kidnapped the only proper way in what seemed so long ago. The pang in my chest grew stronger. I so wanted those days back again.\n\nI ended up in the bedroom, staring out the large window at the ocean. The waves were kicking up, and the gray sky was pregnant with clouds. I retrieved a sweater from the chair, but it didn't help the chill that had settled within my bones. I decided to take a hot shower instead.\n\nAfterwards, I was no longer shivering. I felt refreshed, as well. My hands were automatically turning my shirt right-side out to pull it back on when I noticed the T-shirt hanging on the back of the bathroom door. Malcolm's. I abandoned my own clothes and sighed as the soft cloth of his shirt brushed my still damp skin, as his scent enveloped me. I didn't care that he'd last worn it to go running on the beach that morning or that it had holes where the dryer had burnt the material over the years. It was...familiar.\n\nI pulled my hair into a braid, donned a clean pair of panties, and went in search of my sweats in the closet. That's when I noticed the door at the end of the hall was ajar. My feet hesitated at first, but I told myself that it was okay to follow my gut instinct. I was safe in this house.\n\nThe lush carpet wrapped around my bare toes as I crossed the short distance between the bathroom and the desired destination. I held my breath and tapped the door lightly with my fingers. It swung open a little further.\n\nI felt for the switch and heard the click as the lights came on, then I pressed onward. I wasn't sure what I was expecting my reaction to be. Fear? Disgust? But as I took in the black walls interspersed with candle-like sconces, it was lust that settled in the pit of my stomach. Longing. The submissive inside me was awakening again. And she didn't need any drugs to feel that way. It was a wonderful feeling that made me feel slightly giddy.\n\nThe memories flooded back as my eyes danced around the room. The first thought in my head was how much I had enjoyed being strapped to the Saint Andrews Cross. How much I had missed it.\n\nWords and visions flickered in my head of my time in captivity. Voices that said I couldn't move on. It would be easier to back down. To hide. But I stomped down the thoughts and walked slowly around the room. Each item I put my hand on, I forced myself to remember how Malcolm had used it on me. To help me see who I really was.\n\nThe journey through my past was heart-wrenching. I cried a couple of times. Especially at the cross. I'd let down my guard there the most when I'd allowed myself to entertain anal play. I don't know what I would have done if Brian had successfully crossed that threshold against my will. I didn't want to think about that. It hadn't happened. I had been rescued.\n\nNow, I was at the modified kneeler. I genuflected on the lowest padded bar, gripping the top bar as if my nerves were perched there, as if I were confessing my sins. I closed my eyes. This was the place where I had learned the difference between giving a blowjob and allowing someone to fuck my mouth.\n\nI moaned softly, licking my lips. Faintly recalling the feel and taste of\u2014\n\nThe soft gasp made me freeze. It took everything in me to turn around.\n\nMalcolm stood in the doorway. I didn't understand the expression on his face. Why was he frowning? Had I done something wrong?\n\n\"I-I'm sorry.\" I rushed forward, intent on making a beeline to the observatory room despite my improvements that morning. But Malcolm's hand on my arm stopped me.\n\n\"Please wait, Becca.\" Both of his hands cupped my shoulders. \"I didn't mean to startle you.\"\n\nI glanced down, mostly to hide the fresh tears in my eyes. \"I shouldn't have come in here. Not without your permission.\"\n\n\"Nonsense. It's ours.\" His breathing was ragged, as if he were struggling to control his emotions as well. He tipped up my chin. \"But since you're in here without me\u2014and dressed like that\u2014can I ask why? I was going to dismantle the room. I didn't think you would ever want to come in here again.\"\n\nI glanced at the empty boxes stacked outside the door. At the plastic bags from a home improvement store. Then I gestured to the accoutrements on one wall. To the devices he'd created. \"I was trying to remember better times, I guess.\"\n\nHe hummed and then was silent for several moments. Long enough for my knees to start trembling. Finally, he said, \"Did it help?\"\n\nMy cheeks suddenly felt hot, and I lowered my gaze even though his hand still held my chin.\n\n\"Becca? Look at me. Answer the question.\"\n\nI took a deep breath. His eyes were shadowed. It made my breath hitch, but I was able to say, \"Yes, Sir.\"\n\nJust like that, the darkness completely overtook his eyes, and a low growl rumbled in his chest.\n\nI stepped back, my knees shaking. His hand fell away, and I choked back a sob at the loss of the warmth of his skin on mine.\n\n\"I won't touch you unless you ask me to, Becca. Not in that way. No matter what. Do you understand?\"\n\nMy insides felt like they were turning to liquid from his stare. His jaw twitched. I could tell he so wanted to switch into his Master role. And deep down, I wanted to let him. But I wasn't quite there yet.\n\n\"Yes, I understand.\" My voice cracked as I said the words. \"I have one request first.\"\n\nHis eyes flickered with the desire he was holding back. \"Anything.\"\n\nI licked my lips and held out my hand. \"I need to Top you. I need to know that I'm safe.\"\n\nHis Adam's apple bobbed slowly as he swallowed. Then his hand gripped mine. \"Tell me. Show me.\"\n\nThe words took a moment to implant in my brain. He was okay with this? He was okay with this! I glanced around and realized that it couldn't happen in here. This was his domain. It always would be.\n\nWith his hand in mine, I led him to the bedroom. To the foot of the bed where I stopped him, facing me. For the longest time, we just stood there. I drank in the sight of him. His hair had grown longer during our stay and curled in the humidity so that it looked like a mane framing his clean-cut face. His piercing eyes, in return, watched me intently.\n\nI ran my hands over his shoulders now. Down his arms to where our fingers laced together. His heaving chest matched mine. I could feel the tension in his arms. If I said the word, he would take me. He'd been waiting to do just that for the longest time.\n\nOh, how I loved him. I let go of one hand to brush a finger over his mouth. His lips parted, and I pressed my finger into the heated cavern until his tongue met my digit and licked lightly. Moaning, I returned my thoughts to getting him out of his clothes.\n\nI worked quickly to pull his shirt off. To lower his jeans and briefs. With a gentle push against his now bared chest, Malcolm sat down and scooted backwards so his head was on the pillows. I stared at his glorious cock, which was well on its way to being fully erect. I almost tripped as I removed my panties. I heard his gasp when I tugged his T-shirt over my head, revealing my breasts to him.\n\nA feeling of dread came over me then as I stared at his naked body. It had been so long since we had been like this together. Since I had allowed myself to be undressed before a man. I fought the urge to cross my arms, to reach for the T-shirt and cover myself again.\n\nI had to keep reminding myself that Malcolm would not harm me. That I could stop at any point. I was in control right now.\n\n\"Becca, are you okay?\" Malcolm sat up and knelt before me on the foot of the bed. He took my hands in his. \"Becca, honey?\"\n\nI jerked and tried to pull away, but he tightened his grip.\n\n\"Would it help if you were lying down? Tell me what to do?\"\n\nI nodded and then whispered, \"Maybe.\" But I still didn't move.\n\n\"Okay.\" He got up and let go of one of my hands. \"When you're ready.\"\n\nI took a deep breath and let him help me trade places. Once I was lying down, I had to admit I felt slightly better. And yet, my muscles tensed as he started to crawl onto the bed at my feet.\n\n\"No, sit beside me.\"\n\nHe did as I asked and laid his hands in his lap, waiting for the next direction. The problem was, I wasn't really sure how to proceed. For several minutes, I just lay there, my chest heaving and my head racing, while he kept his eyes on mine.\n\nI gulped and figured I should just dive right in. So I spread my legs but kept them straight. \"Hand?\"\n\nMalcolm held his hand out, and I guided it so his palm rested on my mons. The direction of his hand caused his fingers to cover my pussy.\n\nThe touch triggered my fight or flight mechanism, and my legs clamped around his wrist. I let out a noise that started as a cry but morphed into something that was part giggle and part shaky sigh at the relief that I could actually close my legs when a man touched me if I wanted to. We stayed like that for another few minutes.\n\nA voice in my head told me it was okay to move on. Baby steps. So I said, \"Press your middle finger through my labia.\"\n\nWhen he did it, he did it so slowly I forgot to breathe.\n\n\"Again.\" I gulped and shut my eyes. \"Keep doing that.\"\n\nAfter several excruciatingly gradual sweeps, my legs relaxed and fell open. Then my hips were arching into his touch, although his hand never lost contact with my body.\n\n\"Rub my clit.\" The words came out as a gasp. Then I cried out as he obeyed. God, that felt so good!\n\nWe proceeded in this way\u2014me speaking, him doing\u2014so that eventually, his thumb was rubbing my clit while his fingers stroked inside me. When I adjusted my legs so that my knees were bent and my feet were flat on the mattress to offer him more access and a deeper penetration, I gripped his wrist to make him pause.\n\nI struggled as the memories of this position pushed to the front of my brain. I had to tamper the urge to close my legs. To roll away. To end this and run away to my safe haven. I needed to press on. I had to face my fears.\n\n\"Okay.\" I released my hold and caressed his skin instead. He continued, and my moans began again. As I relaxed, the arousal grew. Yes, maybe this would work.\n\nHis heavy breathing beside me reminded me that he was being left out. I knew what he liked to do after making me wet like this. I told myself I was ready to move on to the next step.\n\nMy voice cracked as I caressed his hand again and said, \"Crawl between my legs. Lick me.\"\n\nHe adjusted his position and let out a groan as his face lowered between my thighs. Then I heard him inhale deeply, his breath warm against my already-sensitive skin with his equally long exhale through his mouth. It made me shudder.\n\nWhen his tongue touched my labia, I moaned. The cry deepened as he licked the length of me, not penetrating but just covering the surface over and over again.\n\nHe looked up at me after his tongue pressed harder and accidentally slipped between the wet and swollen folds.\n\nI choked at the intensity in his eyes. I think he was watching me to make sure I was okay. I nodded, unable to speak but hoping he received my silent message to do it again.\n\nMalcolm knew me so well. His tongue completed another sweep downward, then it pressed in on the upward stroke.\n\nI gripped the sheet and arched my hips up to him as I cooed.\n\nHe adjusted once more so that his arms were wrapped under my thighs, his eyes on mine again.\n\n\"Yes,\" I whispered. \"Please.\"\n\nHis eyes closed as he used his fingers to pry my labia open. His nose bumped my clit as his tongue delved deeper in long back-and-forth motions. His grip on my legs tightened as he pressed harder and his tongue dipped into me. His moans vibrated through my pelvis.\n\nI reached up and took hold of the mission-style headboard for leverage. When the memory of being bound with my arms above my head like that hit me, I pulled my hands free. But the fact that I could do so set into my brain quickly, and I gripped two of the wooden, vertical slats again.\n\nI closed my eyes and listened to our combined heavy breathing. The wet sloshing sounds as he licked at the evidence of my arousal. His moans as he inhaled my scent. My gasps as his tongue brushed a super-sensitive spot.\n\nIt all felt so damn wonderful. But I craved more, and I didn't want to come yet. \"Stop, Malcolm.\"\n\nHe obeyed, but his downcast mouth as he drew back said I was ruining a good time for him as well.\n\n\"Lie down.\" I patted the spot next to me in case he didn't understand where. We switched places once more, and I knelt at his feet. \"Don't touch.\"\n\nHe raised his eyebrows but said nothing. The corner of his mouth twitched as he put his hands behind his head on the pillow. Then he let out a long sigh.\n\nMy heart was thumping in my head as I crawled between his legs now. I stopped at his groin and dipped my head, wrapping first my hands then my lips around that perfect specimen that did wonderful things to me. Things I needed to be reminded of.\n\nI gave him all the passion that had eluded me for so long. I stroked, I caressed, I suckled his cock. He lowered one of his arms but stopped himself before he touched my head. Out of the corner of my eye, I saw his hand clench in a fist on the sheet, restraining himself. Oh, he was struggling so hard not to take control. As much as we both liked vanilla sex, this was out of his normal realm. I smirked at the thought that maybe this was good for both of us.\n\nWhen I grew restless\u2014and knew I couldn't torture him much longer\u2014I crept further up his body to straddle his waist. I wanted him. I needed him.\n\nMy body shivered as I held myself over his cock. I told myself that it was okay. I could still stop at any time. Then his tip brushed against my mons. I almost fell on top of him I was shaking so much. It took several deep breaths before I could press on. I wrapped my hand around his hardened shaft and guided it into place.",
        "As his cock entered me, I cried tears of joy. My hands pressed against his chest now, supporting my body over his. I rocked back and forth in such a slow motion it was excruciating. I relished it. The feeling of his hips between my knees. My ass rubbing along the tops of this thighs. His cock pulsing inside me.\n\n\"Breasts,\" I panted.\n\n\"With pleasure,\" Malcolm growled.\n\nI cried more as his warm hands circled and massaged my globes. As his fingers rolled my nipples and sent little jolts of electricity down to where we were joined. I arched so far forward into his touch that he slipped out of me. I whimpered while I positioned him again and slid back down his shaft.\n\nI closed my eyes and concentrated on moving my hips so he pressed the right spots. Leaning forward so my clit rubbed against his cock as my pussy unsheathed him. Gripping the pillow on either side of his head for better support.\n\n\"Touch.\" I could speak no other words I was in such a natural state of euphoria. But he knew and needed no other direction.\n\nHis hands caressed my sides. His tongue on my nipple made me gasp. He licked and kissed and nipped at one and then the other. He moved to stroke my back as I leaned forward, pressing my breasts to his chest. Our lips met, tentatively at first and then with increased pressure as we tried to sate the hunger inside both of us.\n\nI could not get over the pleasure of his cock stroking in and out of me. Stretching me. Filling me. Pushing me toward the edge where I longed to reach once again.\n\nI gasped as his hands gripped my ass and held me still, his hips arching up into me as his self-control slipped a little. I didn't care. I struggled to understand how one man could make me feel like there was nothing else in this life but him. Regardless of whether or not we were having sex. His mere presence surrounded me, filled me.\n\n\"Becca,\" Malcolm kept whispering.\n\nThe precipice was calling to me. I knew it was calling to him. I had accomplished what I'd desired. It would take time to feel completely safe, but I could withstand a man touching me. Inside me. And not just any man. My man.\n\n\"Make love to me,\" I whimpered.\n\nStrong arms wrapped around me, rolled me onto my back. He swallowed my cries as his cock slid home time and time again. His fingers buried in my hair. His chest rubbed against mine. Then his arm hooked under my right knee and he pressed even deeper inside me until our guttural sounds mixed into a beautiful chorus only the two of us knew.\n\nI screamed his name. He continued on.\n\nOur bodies were slick with sweat, and I gripped his shoulders as I felt him shake above me. Another orgasm racked my body as he came, his face buried against my neck, muffling the sounds of my name.\n\nWe lay as a mass of tangled limbs gasping for breath. His body weighted mine down, but I did not panic. I inhaled the familiar scent of him, his sweat and lingering sandalwood cologne. I cooed as he placed soft caresses all over my body.\n\nA tear trickled down my cheek as I realized I'd done it. Trivial as some think it may be, I'd faced a huge fear head-on and come out victorious. I really could do this.\n\n###\n\nIt was mid-day, and we had not moved from the bed. We had not made love again, but he had pleasured me with his fingers while he kissed me languidly. I'd tried to stroke him again, but he would have none of that. So I lay there on my back with his fingers buried between my legs. Occasionally, he'd rub his thumb against my clit, and my body would buck with aftershocks.\n\nMy head lolled against his shoulder. I pressed my lips against his warm skin, tasting the saltiness of the lingering sweat as a result of our coitus. I could not think of a happier time in my life than this.\n\nHis hand had stilled, giving me some respite. We were both quiet for awhile. I rolled into his body and curled up against him, thinking he had fallen asleep. But his lips brushed my forehead.\n\n\"Malcolm, what took you so long at the bar?\" I tilted my head back to see him watching me.\n\nHe pulled the sheets tighter around us and kissed my forehead again. \"Does it matter now?\"\n\nI bit my lower lip and nodded before I changed my mind. I needed to know how I got my happy ending.\n\nHe pressed his cheek to my head and sighed. \"It was stupid.\"\n\n\"How so?\"\n\n\"I ran into someone I used to know. He wanted some information. When I got outside, you were gone. I thought maybe you had changed your mind and come back in for the bathroom. Sue checked, but you weren't there, either. Drake and Daphne went to your house in case you had caught a cab. Damn the police, but they said they couldn't start an investigation until you'd been missing for forty-eight hours.\"\n\nI ran my fingers over his shoulder, feeling the muscles flex there. I heard his voice catch, as if he were holding back tears. As hard as this all was on me, I had forgotten that I wasn't the only one affected. Which made me tear up, too. How could I have been so selfish?\n\n\"I couldn't eat or sleep for those first two days. Were you hurt? Dead? We didn't know who would take you. A crazy fan? A random psycho? Then after the police got involved, it was harder to function because they didn't move fast enough.\" His arms tightened around me as tremors shook his body. \"God, you gave us all such a scare. I've never felt so helpless in my life. I don't ever want to feel like that again.\"\n\nI kissed his chest. \"Me, either.\"\n\n\"All that time, you were...\"\n\nI shuddered.\n\nHe rolled me onto my stomach before my mind wandered to where I didn't want it to go. I cooed as his cock nestled into my folds instead. He adjusted my legs so I was kneeling, then he gently rocked back and forth while he continued.\n\n\"We had already tried to track your phone with the Mobile Locate app. Drake said he'd insisted you download it. But we lost the signal before they could pinpoint the exact location. Your battery must have died. We tried to get a deeper investigation going, but the police told us they did not have the manpower to follow that lead at the time because they were preparing for The Taste.\"\n\nMalcolm's hand danced across my hip, my side, and finally to my breast. I clutched the sheet, trying to keep myself grounded so I could hear him over my moans.\n\n\"So we held a press conference, and a reporter asked if we would sue the city. That got the mayor's attention. We were trying to convince the police to do a canvas around where your phone last pinged a tower when we got the call that you were at the hospital.\"\n\nI shivered. I wanted to be mad at the police for not stepping up sooner. But would they have even found me in that room? If Brian hadn't been so high, he wouldn't have removed the restraints. And I would haven't been able to get free from the house.\n\nI cried out as Malcolm hit my G-spot.\n\n\"Enough about that. Back to you, my dear. You're safe now. You don't have to be afraid anymore.\"\n\nHe placed soft kisses along my back. He continued stroking until I bucked against him and rode out my orgasm. I was so focused on his words, I hadn't even thought about the position I'd been in.\n\nHe lay behind me afterwards, breathing hard as I told him what I had told the psychiatrist. What I could recall about my abduction and imprisonment and torture. What my fears were about our relationship. It helped that I wasn't looking at his face. I don't think I would have been able to get all of the words out if I'd seen his expression.\n\nWhen I was done, he rolled me to face him and held my chin so he was staring into my eyes, his own eyes glossy with unshed tears. \"Becca, honey, I do not think any lesser of you because of what happened. I am proud of you for fighting. Please do not think that this situation has diminished my feelings for you in any way. If anything, it has made them stronger. I love you so much.\"\n\n\"I love you, too.\" The last word came out as a sob as I wrapped my arms around his neck.\n\nWe held each other's shaking body. We cried. We kissed away each other's tears. And I chalked it up to yet another small victory in this battle to heal myself.\n\n###\n\nIt took another month before I was comfortable enough to relinquish complete control to Malcolm. To go beyond vanilla sex again. The next time he tried doggy-style, I did tense up and told him to stop. I knew it was coming. But he talked me through it until I was comfortable enough to try again.\n\nI wanted to overcome that fear, especially as it was one of his favorite positions. I've heard it's a favorite position of most men. I'd rather see his face and feel his cock rubbing against my clit in missionary style. But we were both flexible.\n\nWhen we'd escalated to having kinky sex, I'd insisted on no restraints. For now. I won't deny that I said the safe word more than a few times. And I wasn't ashamed that I ended up in a ball of tears even more afterwards. I'd never met someone so patient.\n\nWe had spent the last week visiting his special room. He just stood behind me rubbing my shoulders as he told me what he had done\u2014what he would do\u2014with each contraption or tool. It was similar to the day he'd found me in here wearing just panties and his T-Shirt, except it was his voice and not my own in my head. That seemed so long ago. As aroused as I would get, all we did was look in that room so far.\n\nHe'd also introduced me to a new song called \"Madness\" by Muse. He knew how much music was an aphrodisiac to me, but we'd agreed to hold off on using Enigma for awhile. I couldn't relax when I heard their music, as much as I still loved them. The rhythm and melody of the new song helped, and the lyrics seemed fitting to our relationship. In fact, it became routine to start each session with it.\n\nI was usually the first one to get up in the morning. He said that he waited for me so I'd never feel alone or afraid when I woke. The nightmares had finally ceased. Yet he continued the routine. I think he enjoyed watching me sleep.\n\nBut this morning, his side of the bed was empty. And cold. As if he'd been up quite a long time.\n\nI sat up, looking around as I rubbed my eyes with the back of my hand. The clock said it was past ten. I threw back the covers and sat up, chastising myself because I'd be late for my therapy appointment in thirty minutes. Why hadn't Malcolm woken me?\n\nI was brushing my teeth when I picked up the encouraging day-by-day calendar we kept by the sink. He'd bought it to help me, and it had become my normal routine to read it each morning. I spit out the toothpaste and slammed the toothbrush on the counter. Well, shit. It was Saturday. I was already up. I should probably try to locate my boyfriend.\n\nI didn't notice the box at first. It was perched on the leather bench at the end of the bed, and the color blended in with the mustardy-yellow blanket that was folded beneath it. It was the shiny, silver ribbon that caught my eye.\n\nSitting back in bed, I pulled the bedclothes around my waist and set the box on my lap. I fingered the ribbon, my heartbeat steadily increasing. There was nothing to be afraid of anymore. Right?\n\nMy breathing was rapid as I finally tugged at the ends of the bow and lifted the lid. I parted the sheets of black tissue paper. And then it was really hard to breathe as I took in the contents.\n\nA black-and-red bustier made of leather and lace stared up at me. With matching black, silk panties trimmed in red lace. And a black garter belt with stockings. Tucked in around the lingerie was a pair of black heels.\n\nI almost missed the envelope I was so busy trying to calm myself. Inside was a card that read:\n\n'Sir Malcolm requests the pleasure of Lady Becca's company in the Black Room at her leisure.'\n\nI gulped several times, glancing around the bedroom again. We'd stuck to his bed while easing back into our roles. My fingers twitched as I ran them over the various textures I'd spread out around me. Was I ready for this? He thought I was. I had to trust him. It was the next step forward.\n\nThen another thought stole my breath. How long had the box been sitting there?\n\nI quickly stripped from his T-shirt I'd worn to bed the night before. I'd been tired, and we had just lain in each others arms. That shirt had become a comfort to me. A security blanket of sorts. I hated it when he insisted on washing it. But now, I flung it aside without care and changed into the lingerie.\n\nIt seemed to take too long to pull my hair back into a single braid. But soon enough, I was standing outside the closed door to the special room. The Black Room as we'd recently dubbed it. My heart beat out a cadence in my head, and my hand shook as I reached for the handle.\n\n\"Welcome, Lady Becca,\" Malcolm said as the door swung open.\n\nMy legs didn't seem to want to move. I kept telling myself that I was safe. Finally, my brain connected with my feet, and I entered his domain. I kept my eyes forward, but I heard his growl of approval. The click of the door as it closed again. His heavy breathing behind me.\n\nHe stepped to my side. His fingers trailed down my cheek, gently turning my chin so I was facing him. His thumb rubbed my lips until I parted them. I felt the digit tremble as he pressed it into my mouth. I suppressed the desire to lick it, to moan at what such a simple touch could do to me.\n\nThen his touch was gone. I wobbled on my feet, thankful when his hand took mine. Yet my stomach fluttered as he led me to the modified kneeler. I glanced at him, confused, when he stopped me on the side where he usually stood. But then I understood as he leaned me forward so the top padded bar pressed against my belly.\n\n\"Use the safe word if you are uncomfortable at any time,\" his voice whispered in my ear as he squatted beside me.\n\nI nodded, unable to speak as I watched him secure my wrists to the sides of the metal, upright portion of the kneeler. To my legs, he affixed a spreader bar between my ankles. His hands massaged my back as he stepped behind me again.\n\nI wasn't sure what to be prepared for. This was a new trick, and something inside of me tensed at the unknown. But his touch calmed me, and I repeated a mantra in my head to relax, to enjoy. And I would hold out as long as possible despite my fears.\n\nSomething soft trailed up the back of my legs. Goosebumps prickled the exposed skin between the edge of my stockings and my pantyline. Suddenly, I clenched my fists. The welts Brian had caused had long healed save for a single scar on the back of my right thigh. But the touch on that precise area made my resolve waver.\n\n\"Are you okay, Lady Becca?\"\n\nI started to nod but remembered to say, \"Yes, Sir Malcolm.\"\n\n\"Good.\"\n\nI couldn't stop the shriek when something slapped my bare skin on my left leg.\n\n\"Shh.\"\n\nShit. I reminded myself that he was Malcolm, not Brian. He was not going to hurt me. I bit my lip and was prepared when the object connected with my other leg.\n\nEventually, I relaxed as he created a rhythm of stroke, stroke, slap, slap. He must have been alternating between the feather and leather floggers. The tension in me turned to arousal. Then as suddenly as it had started, the flogging stopped.\n\nThere was no sound except my heavy breathing for the longest time. Then our song started. I closed my eyes and let the music seduce me. I gasped as fingers played over the fabric between my legs before they tugged my panties to the side.\n\n\"I need to mention something, Lady Becca,\" Malcolm growled, his fingers wrapping around my braid. He nipped at my neck. \"One little topic where there will be no discussion.\"\n\nI gulped, the safe word on my tongue as he tapped his cock against first one butt cheek and then the other. As he rubbed the tip against my bared pussy and slid it all the way back through the folds. After what I'd been through? How dare he! I wasn't ready! I didn't think I'd ever be ready for\u2014\n\n\"There will be no more talk about spending too much time together. When we get back to Illinois, you're moving in with me. That is final.\" He tugged on my braid. \"Do you understand?\" \n\n\"Yes, Sir Malcolm!\" I almost passed out with relief as he thrust hard into my pussy.\n\n\"Good. Now be a good girl and don't come until I tell you.\"\n\n~ H"
    ],
    "authorname": "secretsxywriter",
    "tags": [
        "dominance",
        "submission",
        "non-consent"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/raw-ch-06"
}