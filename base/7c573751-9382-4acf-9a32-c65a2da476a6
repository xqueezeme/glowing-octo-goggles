{
    "title": "Meditation: Simple Techniques",
    "pages": [
        "As a practicing nurse, I discovered the benefits of mediation many years ago. At that time it was called purse lip breathing. A simple technique to help patients in pain or having, anxiety attacks or asthma attacks to relax and concentrate on their breathing. The positive results astounded me. Patients who were in immediate pain became more calm while the pain medications had time to kick in. Patients with breathing difficulties became more steady and breathed easier while we waited on the respiratory tech to give a treatment. \n\nWhile the nursing textbooks called this technique purse lip breathing, I realized it was a form of meditation which provides the caregiver with a holistic approach to medicine. So how can this benefit us in our everyday life? Very simple. It keeps us focused, relaxed and healthier. And yes, it improves sex. \n\nOver the years, I've done alot of research and practice with meditation. I now feel comfortable to try and pass this information along. This is my first How To article, so please excuse me if my descriptions are not the best. \n\nTypes of Meditation\n\nBasically there are two types of meditation. Concentrative and and Mindfulness.\n\nConcentrative Meditation-This form of meditation focuses the attention on the health, an image or sound in order to still the mind and allow a greater awareness and clarity to emerge.\n\nThe simplest form is to concentrate on the breath. As a nurse I've used this numerous times to help patients with an elevated heart rate or respiratory rate to relax. This is the purse lip breathing technique taught in all nursing textbooks. \n\nMindfulness Meditation-This involves opening the attention to become aware of sensations, thoughts, sounds, smells and so forth. \n\nBasically, sitting quietly you simply witness whatever goes through your mind, not reacting or becoming involved with thoughts, memories, worries or images. This helps to regain a more calm, clear and non-reactive state of mind. \n\nBenefits of Meditation\n\nSo what are the benefits of meditation? Many practioners of Yoga have known this answer for years. \n\nPhysically you have a younger biological age, decreased heart rate, lower cholesterol, decreased blood pressure, lower level of cortisol and lactate two chemicals associated with stress, an improved flow of air into the lungs and a reduction of free radicals which are believed to be a part of the aging process. \n\nPsychological benefits include many. Decreased anxiety, increased happiness, decreased depression, increased feelings of vitality and rejuvenation, decreased irritablity and moodiness, increased feelings of self-actualization and increased memory and learning ability. \n\nSimple Techniques\n\nOne of the first times I sat back and realized as a nurse that I was using meditation techniques was when a patient of mine had a cardiac rhythm in the 140's. I immediately rushed into the room and found her sitting there struggling to breath and grasping her chest. Yelling for the doctor to be called I grasped the patients hand and told her to take deep breaths and concentrate. This is the purse lip breathing technique taught to all nurses. \n\nWithin minutes her breathing became regular and her heart rate dropped down to the 80's. Her blood pressure became stable and she calmed down while waiting on the Doctors return call. I don't recommend this to anyone outside the healthcare profession. The woman had a minor heart attack and the technique worked to calm her down and further any complications. The woman went to surgery and came and came out fine. Yet the techniques of meditation were a tremendous help.\n\nSo what is a simple technique of meditation? As I said earlier, concentrative meditation is the easiest. Mainly focusing on the breathing. \n\nStudies show that between the hours of 2pm and 4pm most of us get sleepy and grab a soda or candy bar to help finish the day. Let's do something healthier that gives you more energy.\n\nGive yourself one minute. That's it. Don't set an alarm but concentrate on your breathing.\n\nTake a deep breath for 5 seconds, hold it for 5 seconds, then release it for 5 seconds. While the lungs are empty, hold it for an additional 5 seconds. Then inhale another 5 seconds and repeat the process. Do this for 1 minute. Inhale, hold, exhale, hold, inhale, etc. You'll find that you have more energy and have done without the sweets. You can do this while sitting in straight back chair as long as you hold a good posture. If needed, put a pillow behind your back to correct your posture. \n\nAnother simple meditation techinque is the walking meditation. Are you someone who enjoys walks in the morning or evening? If so, this technique will help tremendously. \n\nGo on your walk but concentrate on your feet and legs. Don't look around. Any images or thoughts that enter your mind, throw them off. Don't get upset that they do, they will. Just ignore them. Then refocus on the feet and legs. Focus on every step you take, gaze ahead, don't look around. Concentrate on your muscles. Feel them flexing and bending. Feel your foot hitting the ground. You'll find yourself walking farther and feeling more relaxed at the end. \n\nDo you have problems getting to sleep at night? I know I have many times. This is a technique I discovered that I found to be a normal meditation techinque to help with sleep. \n\nThere have been many nights where I lay down and am worried about a patient and couldn't sleep. Try this and I guarantee it helps.\n\nFirst, concentrate on your breathing. Close your eyes and picture something beautiful. Move your thoughts to the top of your head, concentrate on the muscles relaxing. As they relax, move your mind to the next lower muscles, the eyes. Throw any throughts you have out. Just concentrate on relaxing the muscles. Work you're way down your body. Through the muscles of the heart, abdomen, legs and feet. I'm usually asleep by the time I get to the feet. I just focus on each muscle and relaxing each one. All other thoughts are gone or thrown out. \n\nHopefully this article has been of some help. Next, I'll give the medical benefits, benefical meditation postions and more. \n\nAs a nurse I must state this. Please, if you have any medical problems that you feel needs professional attention, consult your physician. This article does not replace any advice given by your physican. Consult all parties you are with. Do not use this advice to avoid medical attention. "
    ],
    "authorname": "Lord DragonsWing",
    "tags": [
        "concentrate breathing",
        "meditation",
        "heart rate",
        "feet legs",
        "blood pressure",
        "technique"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/meditation-simple-techniques"
}