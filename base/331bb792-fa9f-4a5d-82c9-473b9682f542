{
    "title": "O Holey Night:  Ass, Mouth, Pussy",
    "pages": [
        "When Nick's tongue penetrated her naughtiest hole, Anne's eyes rolled back in her head. It certainly wasn't as big as his cock, but his tongue was warm, wet and talented. After torturing Anne by slowing circling her puckered rear entrance, he finally entered her. Calling out in joyous rapture, she came, almost immediately. \n\nIt was the night of the annual Christmas Party at their country club and they had been dressing to attend. Nick waited patiently for the right moment to present a secret holiday gift to his wife. A lot of thought had gone into his choice, and he hoped it was well received.\n\nDeciding it best to wait until the last moment, he donned his tartan plaid wool slacks and matching bowtie. A black tuxedo jacket completed his look. He was ready long before Anne, and loitered in the bedroom until she finally emerged from the bathroom. \n\nShe had chosen a pair of form fitting black slacks covered in beads that glittered in the light. Nick chuckled to himself, glad she had chosen this particular pair of pants because they left nothing to the imagination and would be perfect for the gift. She had paired the pants with a simple black shirt that had a plunging neckline. Although her tits were small, it successfully gave the suggestion of cleavage.\n\n\"Hey Babe, are you just about ready,\" she asked while grabbing her favorite bottle of perfume from the top of the dresser.\n\nNick replied, \"Oh, I'm ready, but are YOU ready?\"\n\n\"I just have to grab my shoes,\" said Anne, as she sprayed herself with the scent.\n\nShe ran into the closet, grabbed a pair of black four inch stilettos and emerged. Nick let her put them on and just before she grabbed for his hand to pull him along, he decided the time had come.\n\n\"Oh, I have a Christmas gift for you,\" said Nick, nonchalantly. \n\nHe reached into his coat pocket and pulled out a small box, which had been elegantly wrapped in foil Christmas paper.\n\nAnne looked at him like he was crazy. They had been together since their first year of medical school, when funds were tight. Exchanging gifts wasn't really possible back then. The pattern stuck, even as their lifestyle became more comfortable... which is why the gesture took Anne completely by surprise.\n\n\"Babe! Why did you get me a present? I didn't get you anything!\" Anne was mortified to have been caught off guard.\n\nNick smiled sheepishly, \"It's just a little something to express my love for you. I couldn't ask for a better wife.\"\n\nAnne sized up the box in his hand. \"You know I don't need any jewelry, Babe. I barely wear what I have.\"\n\nHe simply replied, \"Merry Christmas. Just open it.\"\n\n\"Well, you SHOULDN'T have...\" she said in exasperation, while taking the box. \n\nAnne sat on the edge of the bench and slowly unwrapped the gift. Nick noticed she was wearing nail polish so dark, it was almost black. Looking down at her toes, as they peeked through the open shoes, he could see they matched. He like the dark polish, it was a sexy look against her fair skin tone. \n\nAfter taking off the paper and just before she opened the box, Anne paused. She looked at Nick with excitement in her eyes.\n\n\"Whatever it is, I'm sure I'll love it,\" she said breathlessly and leaned over to kiss him gently on the lips.\n\nSlowly, she opened the box to reveal the gift. Her eyes rose to meet his and she burst into a fit of laughter, as expected.\n\n\"Wow, Babe. I take it back. You totally SHOULD have!\" exclaimed Anne as she pulled a green glass butt plug out of the box.\n\nNick joined her laughter and wagged his eyebrows for a moment before he took on a more serious demeanor.\n\n\"Little One, you will wear this to the party tonight,\" he said with authority.\n\nSince Nick used her fuck toy moniker, Anne knew he meant business. She took a minute to ponder her immediate future. \n\nSeveral weeks before, Nick had taken her to a local bar with a vibrating egg in her pussy. They had been forced to cut the trip short after running into a group of friends. Anne had a hard enough time concentrating in public with something in her pussy. The thought of going out with a butt plug in her ass seemed especially daunting. \n\nButt plugs hadn't played a big role in their escapades, even though Anne loved anal sex and was up for just about anything along that vein. Nick had fucked her ass while she had a dildo in her pussy, and vice versa. While she really enjoyed the vibrating butt plug they used on occasion, she had never walked around with one in her ass. \n\nHowever, going out with a butt plug lodged firmly in her ass did seem highly deviant, and Anne immediately warmed to the idea. Examining her cherished gift more closely, she was impressed with the quality. It was about 3.5 inches in length and had a bit of weight. At its widest section, it seemed to span about 1.5 inches. The dark green color was really festive for the holiday season. \n\nIn the end, Anne shrugged her shoulders, smiled sweetly at her husband and said, \"Whatever you say, Babe. But, will you please put it in for me? And, don't use fake lube, you know I hate that stuff.\"\n\nBeing ever the gentleman, he replied, \"But, of course... Kneel on the bed, lower your pants and get on all fours.\"\n\nAnne was only too happy to oblige, especially since she had a little treat of her own. After walking to the side of the bed, she crawled on top and unfastened her pants. She shimmied until the pants were down to just above her knees. Then, Anne leaned forward so that her elbows rested against the bed and her ass was proudly on display.\n\n\"Little One, what are you wearing?\" Nick was amused by her new underwear purchase.\n\nNow that she had taken him by surprise, she laughed again, \"They're crotchless panties, Babe. Do you like them?\" For emphasis, she wiggled her goods in his general direction.\n\nGenerally, Nick was not a fan of lingerie because he preferred Anne to be naked; she was petite, trim and toned. However, in this particular case, he was very pleased to see the sheer black panties with a large cut-out revealing her ass and pussy. Her puckered hole already quivered in anticipation.\n\nAnne expected Nick to put the butt plug in her pussy and use the juice for lube. She was quite sure he would find a puddle since she had suddenly become very horny. But, she was pleasantly startled by his next move.\n\nWithout hesitation, Nick leaned forward and licked her illicit hole, leisurely. At first, he circled the delicate star with his eager tongue. A minute or two of teasing followed before he finally gave his wife what she desperately wanted. His tongue penetrated her ass slowly as Anne moaned loudly in response. Nick managed a half smile (considering the location of his tongue) and considered his luck. She really was the perfect wife. \n\nAnne's groans became louder as his tongue repeatedly pierced her highly sensitive ass. Adding to her enjoyment of his ministrations were his mustache and goatee. The facial hair was new, and Anne was now a fan. The prickly hair on her delicate flesh was a pleasant distraction as his hot, damp tongue pumped in and out of her ass. Nick reached between her legs and strummed her clit with his right hand.\n\n\"Babe, I'm going to cum! Please, don't stop!\" Anne cried out, just as she reached the precipice.\n\nAnne's head dropped to her forearms resting on the bed just as spasms began in her ass and spread through her entire pelvis. Her legs were restrained by the pants around her knees and Nick's face was still panted firmly between her cheeks. The lack of wiggle room only magnified the force of her orgasm.\n\nNick felt Anne's ass start to spasm around his tongue as he continued to thrust in and out of her intimate opening. He wrapped his left arm around her upper thighs, thus anchoring her hips, while his right hand continued to rub her clit.\n\nSince the kids were away, Anne was able to let loose with euphoric sobs of delight as a wave of pleasure traveled the length of her body. When the sensation passed, she gasped to catch her breath. \n\nNick released her and moved back to admire the view. Saliva coated her ass and dripped down towards her pussy. There was surely enough to avoid the need for lube, Nick figured as he picked up the green butt plug. For good measure, he inserted it into her pussy, which seemed to be ready for its own turn at some fun. \n\nAnne smiled as she felt the plug enter her pussy, knowing Nick was teasing her. The plug was swirled just inside, eliciting a needy whimper from her. When he felt there was a reasonable coating, Nick removed the plug. He placed it at the opening of her ass, which looked as if it eagerly wanted to devour the highly coveted Christmas gift.\n\nNick rolled the plug at the saliva drenched opening and applied a bit of pressure. Anne squirmed, not from discomfort, but from impatience. She was more than ready for something large to be in her ass and would have been happy to skip the party altogether. \n\nThe rotation of the plug as it invaded her ass almost drove Anne to the brink of another orgasm. The tip of glass plug was somewhat tapered and went in easily. When the broader mid-section forced her ass open to a greater degree, Anne tensed. A garbled moan, starting low in pitch, ended on a high note as the widest part traversed her pliable passage. Finally, the plug was snug in her ass. \n\n\"Come on, Little One. We don't want to be late,\" said Nick, as he tapped the flat base of the plug for good measure.\n\nAnne turned her head, from its resting spot on the bed and glared at her beloved husband.\n\nShe sputtered, \"Seriously? Are we still going to the party? Babe, I'm so horny! Let's just skip it and have a fuck fest!\"\n\n\"Yes, Little One. We're already dressed and told people we would be there. So, let's get a move on.\"\n\nAnne grumbled loudly as she struggled to find balance on her knees. Nick helped hold her steady as she stepped off the bed. He had to adjust his own pants which were prominently tented. \n\nAnne took one look at his obvious erection and started to plead her case again, \"Come on! It looks like there's a Yule log in your pants!\"\n\nBut, Nick would not be swayed; he really wanted to watch her navigate a party with a butt plug in her ass. He was quite the pervert.\n\nAnne adjusted to the presence of the plug as she stood in four inch heels. It was just heavy enough to produce a bit of downward pressure that complimented the full feeling in her ass. When her pants had been pulled back up, it magnified the sensation nicely since they compressed the whole area even more.\n\nShe wobbled a bit while taking her first steps and walked around the room to get her bearings. There was no doubt it felt good, really good. She grimaced, not from discomfort, but from the torture of knowing she had to wait several hours before they would return home.\n\nNick grabbed her hand in support and together they walked out of the bedroom to the stairs. The height of the heels, combined with the pressure of the plug, presented quite a challenge for Anne. He went down just in front of her as she gingerly descended. By the end of the staircase, she seemed more comfortable with her present predicament.\n\nAfter putting on their coats, Anne and Nick went out to the car. He opened the passenger door, smiling as he watched her move in slow motion. She turned, twisted and lowered herself onto the seat. Immediately, she shifted onto one hip, in an effort to avoid putting direct pressure on the plug.\n\n\"How are you doing there, Little One?\" said Nick, who was in quite a jolly mood.\n\nAnne squirmed and groaned just a little before replying, \"I'm hanging in, Babe. Let's go, the quicker we get there, the quicker we'll get home and back to business.\"\n\nIf there was one bright side, thought Anne as she balanced on one ass cheek, it was that the Christmas Party was not a formal dinner. Clearly, sitting with the butt plug was harder than standing.\n\nThe ride to the club was short, less than five minutes. As they pulled up to the garland framed entrance, the valet came out to open the car door for Anne. She momentarily panicked while trying to maneuver out of her seat without moaning. Nick quickly stepped around and held out his hand to ease her change in position. \n\nThe club was decked out in holiday fashion and people milled about chit chatting merrily. It was a fairly formal occasion; no children were permitted.\n\nOnce again, Anne was left to try to move in a natural manner after she re-adjusted to her new best friend. Nick chuckled as he watched her walk in an exaggerated fashion, almost like a fawn taking her first steps. \n\nThankfully, Nick steered Anne straight towards the bar. She figured a drink would help dull the highly erotic sensation in her ass. When Nick ordered a scotch with a twist of lemon, on the rocks, it was obvious she was in for a very long night. For Anne, he ordered a glass of cabernet.\n\n\"Hey Babe, do you want to sit at the bar?\" Nick smirked as he spoke.\n\nAnne smiled graciously at his offer, \"Gosh, I'm not really in a sitting mood. Let's have our drinks and grab a bite to eat, since you seem so hungry tonight.\"\n\n\"Well, I didn't eat a whole lot today... or perhaps I did... eat a hole,\" he said while discreetly patting her ass. \n\nAnne couldn't help but laugh at Nick, who was a punster. As they left the bar and entered the sea of people, she wished she wasn't carrying a glass of red wine while feeling so uncertain about her gait.\n\nIn the main dining room, they spotted good friends, with whom they had arranged to meet. Luckily, they were in a corner and out of the fray.\n\nAnne and Nick joined the other couple in conversation, although Anne was a bit on the quiet side. While she stood in place, it became a challenge to try to find the position that made the plug least distracting.\n\nHowever, as the conversation dragged on, she changed tact. While experimenting, she found that if she shifted onto one foot and stuck her hip out to the side, the plug was even more stimulating. By this point, her ass had definitely adjusted to the thrill of hosting a foreign object, while wearing tight pants and stilettos. \n\nAnne came up with a routine to pass the time, since her conversation skills were elusive. Shift, jut, hold for ten seconds, then repeat on the other side. There was no doubt that anyone paying attention would notice her obvious gyrations. Luckily, their friends were not terribly observant.\n\nNot only did Nick take note, he felt the need to comment, \"Hey Babe, are you ok? You look a bit antsy.\" He sounded so sweet and innocent.\n\n\"Oh, I'm just fine Babe. I am a bit hungry, though,\" Anne figured if they ate, Nick would be more amenable to leaving.\n\nNick nodded earnestly, \"You stay put; I'll go grab some food.\"\n\nNick cheerfully went off to provide for his wife, while she was left to fend for herself socially. The other couple began to bicker with each other; while that was usually a drag, she was thankful for their antics tonight. Since she couldn't very well keep shifting after Nick had drawn attention to her movements, she decided to amuse herself by simply clenching around the plug as a way to get an extra little kick. \n\nAnne slowly sipped her wine, while tensing her gluteal muscles ands looked around at the rest of the crowd. She wondered if she was the only woman with a butt plug in attendance that evening. Certainly, she knew the tell tail signs and narrowed her eyes as she scanned the other guests.\n\nSuddenly, she focused on the back of a woman who seemed to be shifting just like Anne had done. Yes! The woman was definitely doing the \"butt plug shuffle\". Suddenly, the woman turned and Anne could see that she was quite elderly, and appeared to be heading for the bathroom in haste. \n\nAnne laughed inwardly at her mistake, but couldn't help attempting to guess if others were partaking in holiday-themed kink. \n\nA second couple came to join their little gathering in the corner. Anne had met them at last year's event and a few times in passing over the summer. The wife definitely wore the pants in this family and Anne briefly imagined the husband walking around with a butt plug in his ass. The thought made her smile.\n\nNick returned with two heaping plates of finger food and handed one to Anne. She ate heartily in the hopes that they could then make a quick exit. Reality came crashing down as Nick ordered another drink from a passing waiter. She knew she had to come up with another strategy and fast.\n\nWhile Anne hadn't planned to give Nick a store bought gift, she did have something special in mind. Tonight would be the perfect time for her offer. \n\nIt was a little over a year ago since Anne had agreed to try anal sex. Nick had wanted to for years, and never gave up on his aspirations. Finally, his eternal optimism paid off, and in a big way. Now, Anne literally couldn't get enough anal play. After years of resistance, she was shocked to find anal orgasms felt amazing, maybe even better than vaginal orgasms. \n\nAs a physician, Anne couldn't explain how anal orgasms were possible. What she did know was that the exquisite feel of a cock ravaging her ass, combined with the knowledge that it was extremely taboo, made for one hell of a good time. \n\nAfter her first foray into anal, Anne readily accepted the fact that she was a \"Dirty Girl\" who liked it in the ass. Nick, of course, was over the moon about it, especially since Anne asked for it frequently. However, Anne was always looking for ways to push boundaries and increase the fun factor. \"Dirty girl\" status seemed fine, but she knew there were more deviant twists to add and decided to tempt her fun loving husband. Tonight, the tables would be turned.\n\nWhen the other couples left to restock their plates, Anne seized her opportunity.\n\nShe stared Nick directly in the eyes, attempted to appear innocent and whispered, \"Babe, what kind of girl goes to a party with a butt plug in her ass?\"\n\n\"A 'Dirty Girl', of course. You knew the answer to that, Little One,\" Nick said, his eyes dancing with humor.\n\nAfter placing her empty plate on the window sill, she took a sip of her wine, leaned in and whispered, \"Babe, what kind of girl would ask you to fuck her ass and then fuck her mouth, and then fuck her ass again?\"\n\nNick looked momentarily stunned as he pondered Anne's unexpected question. Since she was only one glass of wine into the night, it couldn't be the liquor talking. He decided she just might be serious while studying her salacious grin.\n\nSticking his dick in her mouth after it had been in her ass was something he often considered, but never requested. The practice seemed like a bad idea, especially since, as physicians, they knew exactly what was involved. But, in terms of sex appeal, it would be a twelve on a scale of ten.\n\nHe purposely waited several seconds before answering, in a voice that seemed an octave higher, \"A 'Very Dirty Girl'?\" \n\nAnne looked like the cat that ate the canary when she saw that her husband was shocked... which made her next question even more satisfying. She circled the rim of her glass with the pointer finger of her right hand, then slowly brought it to her mouth and licked it.\n\n\"And Babe, what kind of girl would ask you to fuck her ass, then fuck her mouth, then fuck her pussy, and keep going until she writhed in pleasure as the ultimate Fuck Toy?\"\n\nNick's jaw actually dropped open as he listened to her indecent proposal. He looked around to see if anyone was in earshot before answering.\n\n\"Little One! What's gotten into you tonight?\" he exclaimed.\n\nAgain, Anne smiled, refusing to relinquish control of the conversation, \"A green butt plug, Babe. Now tell me, what kind of girl would let you do that to her?\"\n\nHe gulped loudly before answering, in a squeak, \"A 'Filthy Girl',\" ice cubes rattled in his glass.\n\nAnne considered his answer for a moment, and decided she liked it... \"Yes, Babe! You guessed it. A 'Filthy Girl'. Now, guess what kind of girl I am tonight,\" she asked.",
        "At this point, Nick's face seemed a bit flushed, \"Are you a 'Filthy Girl' tonight, Little One?\"\n\nAnne leaned back and studied him appraisingly, \"Well, I believe that tonight, I AM a 'Filthy Girl', as a matter of fact.\"\n\nSuddenly, Nick's slacks resumed their tented position causing Anne to giggle in triumph. She came to his aid and stood a bit closer in case someone was checking them out.\n\n\"Little One, let's get out of here,\" Nick stated, in a rushed cadence.\n\nAnne shook her head and sighed, \"Babe, we can't just leave in the middle of the holiday gala! I'd like some dessert and another glass of wine, please.\"\n\nAs he realized she had flipped the dynamic, Nick rubbed his goatee and grinned. Now, he was stuck with a massive boner in the middle of a party, knowing that something extremely kinky was within reach.\n\n\"Please... go and get me something sweet to eat,\" she said seductively, as she reached up and caressed his cheek.\n\nNick froze momentarily and adjusted his erection. He grimaced and turned. Before he walked away, Anne patted his ass slightly, causing him to shift again. Then, off he went, on an errand for the most exciting woman in the room.\n\nJust then, a waiter came by and asked if he could bring Anne another drink. Feeling drunk with power, but not booze, she ordered a second glass of red wine. It was delivered before Nick returned. When he made it back and saw she held a full glass, he took a deep breath. His plans for a fast exit had just been ruined.\n\nDeciding that patience would be the best play, Nick resigned himself to waiting while he tried to keep his hard-on private. The thought of doing such twisted things to his wife was a complete turn on, especially since she wanted it.\n\nAs she leisurely ate her dessert, Anne returned to her \"butt plug shuffle\". She was quite certain Nick would not be teasing her about it at this point, and the titillation was making her incredibly horny.\n\nNick played it as cool as he could, while Anne nibbled at her sweets and sipped her wine. Every so often, she would smile and nod knowingly at him. All he could do was stand by like an attentive puppy waiting for someone to throw a tennis ball. Finally, she decided he had suffered enough and it was time to depart for more appealing activities.\n\n\"Babe, I think I've had enough. I'm ready to go, now,\" Anne said with finality.\n\n\"Let's go! I'll have the car pulled around,\" Nick shifted into action, immediately.\n\nWalking down the hall to the front door, Anne with a plug in her ass and Nick with a boner, they made quite a pair. Thankfully, there was no line, and as they left for home... thoughts of sodomy danced in their heads.\n\nNick didn't say much during the quick ride home, even as Anne leaned over and stroked his cock through his tartan pants. She did notice that while he usually obeyed the speed limit, he was actually speeding to get home. It was perfectly fine with her since she had been wet and ready for the last hour.\n\nNick helped Anne out of the car for the second time that night and hustled her into the house. Gone was his typical laid back demeanor. Anne had intended to drive him mad with desire and succeeded.\n\nThe minute they made it in the house, Nick had her pinned up against a wall in the back hallway. Anne barely had time to catch her breath as he drove his tongue into her mouth. \n\nHis hands traveled up her shirt to grasp her breasts, only to find her bra was open, much like her panties. There were definitely straps, but her tits seemed to be unrestrained. If it weren't for the fact that she had small tits and the front of her shirt was draped, he would have noticed sooner.\n\nPulling back, he studied her as she smiled provocatively. Nick panted heavily while he roughly pinched her nipples causing Anne to throw back her head and cry out in delight. Her nipples were almost as sensitive as her clit, pussy and ass; Nick was an expert in playing all four to maximize her pleasure.\n\n\"Babe, I want to go upstairs for our fun,\" Anne said, while trying to catch her breath.\n\nNick didn't care where they fucked, he just wanted to experience a \"Filthy Girl\". It was almost too much to hope for, but he knew Anne wouldn't have brought it up if she wasn't willing to see it through. She was an \"all in\" kind of girl.\n\n\"Lead the way. I'd follow you to the North Pole right now,\" Nick said, barely able to contain his good cheer. \n\nThat he was able to make a joke during such a sexually charged moment was one of the reasons Anne loved him with all her heart. She took him by the hand, and walked through the house swinging her hips widely. \n\n\"Hell,\" she thought, \"I'm going to enjoy this butt plug until the very last minute.\"\n\nUp the stairs they went, and into their bedroom. Anne steered Nick to the bed, reached up to his shoulders and pushed him down.\n\n\"Fuck, Little One. You are so sexy,\" he growled while looking up at her.\n\nAnne didn't say a word as she removed her shoes and clothes. The open lingerie stayed on and Nick wasn't about to argue. Her breasts looked perfect as the nipples stood at attention and called to him. Her waxed pussy was also evident as she brought up one leg and placed it beside him.\n\nNick stood suddenly, picked her up and tossed her on the bed. Anne laughed at his bold move and lay on her stomach while taunting him with her almost bare ass. He undressed in record time and joined her on the bed.\n\nHis erection hadn't abated since she first mentioned ass to mouth and then threw in the pussy finale. Still, he stroked his manhood while staring at her bottom half.\n\nAnne was still laughing as she parted her legs to reveal her entire package, which was so neatly wrapped in the lingerie. He had actually forgotten about the green butt plug and took a moment to admire his selection. Perhaps, a red one for next year?\n\n\"You know Babe,\" said Anne, \"I think it's time to put something much bigger in my ass, don't you?\"\n\nNick agreed and reached out to grab hold of the plug. Instead of removing it right away, he twisted to and fro, and pulled just enough to bring the widest part halfway out of her hole. Anne stayed still, greatly enjoying the anal stimulation, and punctuating it with melodic sighs.\n\nFinally, Nick removed the plug and considered getting some lube. There was no doubt he was anxious to get started. Knowing Anne, he figured she wanted him to take control. In the bedroom, she generally liked to submit. \n\nThis activity was not something he had planned for, and so he performed a quick mental calculation. He could place her at the edge of the bed since it would make for easy access to her ass and pussy, but he'd have to get on the bed for oral. Or, he could put her in the middle of the bed and have easier access to all three holes, if he joined her on his knees. \n\nThinking about what would be most submissive for Anne, he decided to stand at the edge of the bed. Then, she would be instructed to rotate her body to accommodate him. \n\nNick rose from the bed and stood at its side. Anne's eyes went wide, this was the moment for which she had been waiting. Looking up at her husband, she was mesmerized by his huge erection and the look of unadulterated lust on his face. The combination was intoxicating.\n\n\"Little One, you will back up your pussy onto my cock,\" he said simply.\n\nAnne's pelvis tightened in need. She got on all fours, crouched a bit and did as she was told. Back she went, until his dick lined up with her pussy. Nick could see her juices glistening in the soft light of their room and pushed forward just as she was pushing back to close the distance.\n\nNick grabbed her hips, pushing and pulling so that her body moved while he stayed still. She groaned in delight as he drove in relentlessly. Too soon, he pulled out, having achieved the goal of coating his dick with natural lube. Adjusting his angle, he then violated her most private hole. \n\nAnne was a bit disappointed that the butt plug had loosened her ass. Being penetrated without a warm up was almost as satisfying as an actual orgasm. She liked the raw feeling of her ass having to adjust to Nick's cock with any preface. But tonight, given the circumstances, she didn't mind terribly.\n\nAs Nick's cock entered her ass, Anne felt immensely satisfied. While she had enjoyed his tongue, and then the plug, nothing turned her on quite as much as getting ass fucked by her husband's dick. He drove in to the hilt, until his balls were up against her clit, eliciting a shout of pleasure from Anne.\n\nNick pumped her ass on his cock, forcefully... just the way she liked it. It never ceased to amaze him that such a tiny woman craved rough sex. He was only too happy to oblige as he pummeled her ass without restraint. \n\nAnne cried out, with increasing intensity as Nick rocked her body, both inside and out. Soon, she tensed as an orgasm began to gather strength. He sensed her imminent climax as well, and decided to let it commence.\n\nFor the second time that night, her body was swept up in anal jubilation. She screeched and howled her way through the convulsions as his dick stimulated her sensitive rim. It felt like an explosion had been triggered in her ass and shock waves coursed through her body. She stiffened initially, and then spasms overtook her, from head to toe.\n\nWhen her body relaxed, Nick removed his dick from her still tremulous ass.\n\n\"Little One, turn around and suck my cock.\" Nick paused with baited breath as he waited to see if Anne would really go to \"Very Dirty Girl\" mode.\n\nAnne didn't hesitate. Around she turned until her face was in front of Nick's dick. She locked eyes with him just before leaning forward to lovingly lap at his cock. \n\nAfter just a few licks, she took his dick in her mouth and sucked vigorously. Nick looked down and had to close his eyes. The image of her sucking his dick, which had just been in her ass, was almost too much for him. But, he managed to stifle his climax; it was like his very own Christmas miracle.\n\nAfter several minutes of oral, Nick knew he didn't have a great deal of time left.\n\n\"Little One, you are indeed a \"Very Dirty Girl\". Clean my dick well, because it will be shoved in your pussy next.\"\n\nAnne conveyed her approval by whimpering at his dominance. In truth, going from ass to mouth hadn't been an issue. The only discernable taste was of his dick, covered in her pussy juice... nothing she hadn't tasted before.\n\nGoing from ass to mouth to pussy did give her pause. She sure as hell didn't want ass germs in her pussy, so she really did suck his dick with enthusiasm. Nick suddenly pulled her off his cock and she knew he was close to his own climax.\n\n\"Turn back around, Little One. It's time for you to graduate to 'Filthy Girl'.\"\n\nAnne obeyed and dutifully rearranged her body so that he could re-access her third hole. As he pushed into her pussy, Nick groaned in bliss. Again he remained in place and moved her body over his cock.\n\n\"Fuck,... you really are... a 'Filthy Girl'... tonight,... Little One,\" he stammered between strokes. He was truly impressed that she embraced her new role.\n\nAnne's only verbal response was to yell, \"Harder, please!\"\n\nWhile Anne and Nick had done plenty of crazy things in the bedroom (and out), this moment really had her feeling like a porn star. A year ago, she could not have imagined that she would be enjoying anal on a regular basis. The idea of ass to mouth might have made her shudder in disgust... adding in pussy action... totally off the radar. \n\nNonetheless, here she was enjoying herself immensely. Not only did it feel good physically, it felt good mentally to behave in such a shameless manner. \n\nMore importantly, watching Nick throughout the night was definitely its own reward. Even after 30 years, he still found her sexy and it showed when he looked at her with passion filled eyes. Normally, he was very controlled in the bedroom. Tonight, he had barely been able to manage his excitement when he learned of her plans. Knowing he wanted to fuck her senseless was the ultimate turn on for Anne.\n\nNick put forth a great effort and held back his climax while staring at the ceiling. Looking down at her ass, while his cock pounded her pussy, was not conducive to making the moment last. \n\nJust for kicks, he decided to make the rounds again and unexpectedly pulled out of her pussy only to jam his cock roughly in her tight ass again. Three strokes later, he told her to turn and repeat her oral attention. After another three strokes, back to her pussy he went.\n\nBy this point, he was close and trying to figure out where to shoot his load. Deep down, he knew Anne wanted it in her ass because she loved the deviance of having cum in a place most women would never consider.\n\n\"Little One, I'm close,\" he panted.\n\nAnne groaned while reveling in her \"Filthy Girl\" mentality and hoped Nick would fill her ass with his steamy seed. As usual, hearing those words had her on the edge of her own climax.\n\nWhen Nick entered her ass one last time, he rubbed her clit to help her along. \n\n\"Fuck Babe, I'm going to cum again!\" she shrieked.\n\nNick finished her off and paused as he enjoyed his own explosion inside his \"Filthy\" wife. His semen coated her rectum while he let out a gratifying grunt.\n\nNick nearly collapsed on top of Anne when he finished. Pulling out, he watched a bit of cum leak from her delicate hole. Then, he leaned down to kiss her before rolling over on his back.\n\nAnne stared deeply into his eyes, with unadulterated love, and he returned the look with sincerity. Sometimes, words just weren't necessary. But, that didn't stop Nick.\n\n\"You were quite the Vixen tonight, Babe. Maybe we should make Christmas butt plugs a new holiday tradition,\" he said as he curled his body around hers. He yawned loudly and his body relaxed.\n\nAnne laughed, \"Hmm, does that mean I need to wait a year till wearing it again?\"\n\nWhen no reply was forthcoming, Anne looked up and saw that Nick was fast asleep. \n\n\"Merry Christmas, Darling,\" she whispered and they both settled in for a long winter's nap.\n\n******************\n\nThis story is dedicated to my husband, \"Nick\", who always makes me feel like the sexiest woman in the room. Yes, he really did present me with a butt plug for Christmas and asked me to wear it to a party. I loved every minute. "
    ],
    "authorname": "SueDanym",
    "tags": [
        "anal",
        "butt plug",
        "ass to mouth",
        "married couple",
        "rimming",
        "sex toys",
        "submissive",
        "kink",
        "fuck toy",
        "cream pie"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/o-holey-night-ass-mouth-pussy"
}