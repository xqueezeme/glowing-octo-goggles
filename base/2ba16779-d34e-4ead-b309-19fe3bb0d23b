{
    "title": "Penny and Megan Pt. 06",
    "pages": [
        "Preface\n\n= = = = = =\n\nNot so long a delay this time. I've stuck on Ginny and Katy right now. We (Katy, Betty and I) have been getting to know someone new. She's kept us all busy since Thursday. A version of her may show up in one of my stories sometime. Or she may get a story of her own, she's so amazing.\n\nBut today (it's Sunday) I had a couple of hours to write, so I finished up Part 06. And in this part, there surely is sex. Lick your lips, pull down your panties, and read on. I think you'll find this installment fun. I sure did.\n\n*****\n\nSaturday, July 5, 2014, My mistake\n\n= = = = = = = = = =\n\nWe'd gone out last night to watch fireworks over the harbor. It was supposed to be my boyfriend and I, but something had come up. Something seemed to \"come up\" pretty often these days. In fact, the only time he'd kept a date in the last month had been on nights we were going to stay in. And when we stayed in, there was always sex.\n\nI'd taken Penny instead. It had been... well, \"nice.\" Not exciting or hugely memorable, but nice. It think people forget that \"nice\" can be so good. We talked about this and that and \"Oood\" and \"Ahhhd\" along with the rest of the crowd. Nice.\n\nI was standing at the desk in my home office with a folder in each hand, scanning the summaries my interns had done, deciding which case to review next when kitten Penny wandered in the door. I'd learned enough by now to suspect that she'd be thinking of jumping on the desk. She'd done it twice before, scattering things all over.\n\nI'd also learned enough of being a dominant to realize that she wouldn't resent it if I said \"no.\"\n\n\"Penny, don't even think of jumping on my desk.\"\n\nShe gave me her petulant kitten look, meowed, and walked all the way around the desk ending up by my side, where she sat in her \"proud kitten\" pose.\n\nAfter a few seconds she said, \"Megan, please pet me.\"\n\nI put down one of the folders and did, the way I'd learned she liked best. From between the kitten ears, her head neck and to the area between her shoulder blades where I scratched her gently. I'd done this four or five times when she moved forward to rub her face against my thigh. She was purring contentedly.\n\nWe'd been establishing things as time passed, and I was mostly alright with most of what she did but as she got more comfortable she kept doing things that surprised or frightened me. I'd had to apologize a dozen times for over reacting to things that I'd thought were sexual overtures that were really just cat things.\n\nAnd I was about to do it again. But, of course, I didn't know that.\n\nShe was rubbing her face on me and purring. The rubbing was raising my skirt by fractions of an inch. I went rigid. She was so into her kitten world, she didn't notice. She started licking my stocking on my outer thigh, just below my skirt.\n\nI really should have known better.\n\nShe licked my hand from time to time, and I'd gotten used to it. She licked my face occasionally as well. And, had explained that it could be sexual, but since we weren't doing sex, she was just meant it as marking me. I was used to that from my own cat owner days. She'd even licked my ankles.\n\nSo I really should not have jumped to the conclusion that this was sexual. But I did.\n\nI pushed her back and shouted, \"No, Penny!\"\n\nShe landed on her ass then sprawled over on her back. She looked up at me totally confused, which I'm sure she was. And that innocent kitten look caused me to flare up.\n\n\"Jesus, Penny! You used to be a respected artist. Your career was just starting to take off when you dropped out of the world. Your work was good. You were on you way to being one of the next great women in art. Don't you want to be successful?\"\n\nShe stood up on two feet, leaned forward, her face just an inch from mine. I leaned back instinctively pulling back from her obvious anger.\n\nShe screamed, \"NO I DO NOT!\"\n\nShe turned towards the door, ran a couple of steps, the turned back to me. It looked like she was on her way to hyperventilating. Her hands in fists, her breasts rising and falling. The effect of her anger was not diminished by her nudity, her heaving breasts, or the collar and ears.\n\nShe screamed at me. \"I... You... you... Fuck you, Megan. Do you know what it's like to be famous like that? Every one is at you every second. And they all think you owe them something. I just wanted to paint. I didn't want all that responsibility. I didn't want to be a fucking 'inspiration to young artists everywhere' or a damn 'role model for female artists.'\"\n\nShe stood there quivering with anger. Then suddenly the anger evaporated and she started to cry.\n\nShe turned her back to me and whispered, to herself it seemed, \"I just wanted to paint.\"\n\nI stood there rocked back by her anger. And even more so now her tears. And found myself aroused by those tears. I thought that crap only worked on men? But she'd also given me a little insight on why she'd dropped out.\n\nI said, as calmly as I could muster, \"Penny.\"\n\nShe didn't look at me. Her body language told me she was crying. I used my Attention, she was overwhelmed by sadness.\n\nI repeated, just a little louder, \"Penny.\"\n\nShe said, between silent sobs, \"What?\"\n\n\"Penny, kittens do not stand on two feet.\"\n\nShe snapped around and gasped, looking directly into my eyes. Her mouth was open in surprise. I noticed that her nipples had come up.\n\n\"What did you say?\"\n\nI pointed at the floor and said, \"Down.\"\n\nShe dropped to all fours and watched me walk around the desk to stop in front of her. I dropped to my knees and petted her, looking into her eyes and she into mine.\n\n\"Megan...\"\n\nI put my fingers on her lips and said, \"Shhhh...\"\n\nShe nodded her head. I tickled her under her chin. I wanted to run my hand down to play with her breasts, but didn't.\n\nI stood and said, \"Come along, kitty.\"\n\nWe went out into the living room then to the kitchen. I got a bowl, put it on the floor, and gave her some milk. I got a beer for myself and sat at the kitchen table sipping it while she lapped up the milk.\n\nShe finished and sat up looking at me curiously. After a few seconds, she set to grooming herself, getting some drops of milk off her face cat style. She'd finished and still neither of us said anything.\n\nI asked, \"How was that for being a dominant pet owner?\"\n\nShe said, with a bit of a sarcastic tone, \"Is that what you were being?\"\n\n\"No, Penny. From where I told you kittens don't stand on two feet.\"\n\n\"Oh, that was pretty good. But the part before...\"\n\n\"Yes, I apologize. Again. I'm sorry, you didn't deserve that. I could have asked that question any time when you weren't in your... kitten place?\"\n\nShe replied, \"Kitten space, sub space, pet space.\"\n\n\"Yes, thank you. When you weren't there. It wasn't fair. You've been living up to your part of the compromise when you're a girl. I keep falling down on my part of being the kitten's owner. I'm sorry.\"\n\n\"Megan, why did you get so upset? I've licked you before.\"\n\n\"Yes, I thought you were going to try to lick you way up under my skirt and, well, and...\"\n\n\"We agreed I wouldn't try to get physically sexual with you. But that would be fun if you wanted me to.\"\n\n\"No, thank you. Yes, dear, you've licked me before. Just not like that. Not so close to my... uh... sex.. I'm out of my depth here. I hate not knowing how to handle myself, and you, innocently, keep reminding me that I don't know what's going on.\"\n\n\"I've got an idea about that. We can talk about it during my girl time tomorrow.\"\n\n\"Fine. Now, I'm sorry. If you can get around my behaving so badly, would you like to try that again?\"\n\nShe smiled for the first time tonight, \"Really? Yes!\"\n\n\"OK, let me go back in my office, give me a few minutes to get back into my work, then come in again.\"\n\nPurrrrrrr.\n\nWe played out her scenario. I patted her, again, she licked me again, and I didn't freak out. I sat at my desk to try to work. She crawled into my lap and lay there purring while I petted her. This works better with a real kitten, or even a cat. I didn't get much work done, but it obviously made her happy. After the way I'd behaved I decided she deserved it.\n\nI contented myself with just reading, holding documents with one hand, while patting her with my other. Presently, I realized she was asleep and I stopped reading to look at her. How could she do that? Her position was more than precarious.\n\nAs I looked at her I traced the curve of her behind, the fullness of her breasts tucked between her arms in her curled up position. Her tail hanging off the chair. I stroked her around the curves and ran her tail through my fingers. I was getting aroused.\n\nI stopped suddenly, she'd smell my arousal with her face so near me. I didn't want her to... then mentally shrugged. What did it matter? She knew she turned me on. That didn't keep me from being embarrassed by it.\n\n\"Touch me, Megan.\"\n\nI jumped. I'd been so into my thoughts I hadn't noticed she'd woken up. Worse, I didn't notice that I was cupping one of her ass cheeks in my left hand, my finger tips were less than an inch from her pussy.\n\n\"Penny...\"\n\n\"Do you want to touch me?\"\n\n\"Yes.\"\n\nShe did something that seemed damn near acrobatic. It was lithe, graceful, and confusing. But she ended with her elbows on my desk, her bottom in my lap, and her knees hooked over the arms of my chair, her pussy pulled open by her spread legs. She was awesome to behold.\n\n\"Megan?\"\n\nI looked up into her face.\n\n\"Take a breath.\"\n\nShe was right. I hadn't been breathing. But more than that, taking a breath put her aroma in my nose.\n\nShe said, \"I can't touch you from here without falling on the floor. You're totally safe.\"\n\nI let my eyes roam her body. I glanced up and saw her watching me closely.\n\n\"Use your fingers with your eyes. Touch where you look.\"\n\nAttention told me she was feeling mischievous, and was aroused as well. I looked to her pussy, right there just below my breasts. She was open and the light glittered off the moisture inside.\n\n\"Fingers.\"\n\nI put my left hand on her knee, extended my index finger and touched her slit.\n\n\"Gently. Touch me with your eyes and with your finger tip.\"\n\nI whispered, \"Alright,\" and did what she said. Just barely touching her labia. Then let my eyes roam again, with my finger following. Circled her belly button, slid up between her breasts, up her throat, and to her mouth. As I ran my finger across her lips she kissed it, barely puckering her lips.\n\nI was getting wet. Not only was I \"safe\" from her touching me, but with her ass so firmly in my lap, but I was safe from touching myself too. I traced back down her throat, up the curve of her breast, and found her nipple. It was up hard, her areola crinkled around it. I looked to the other one and remembered to follow. I ran my finger across to join my eyes. Same thing on the other one.\n\nI ran my eyes down her chest and belly again, my finger following, then over her vulva and down to her tail plug and touched that. We were both breathing hard now. She'd swollen down here since my last trip through. I could see, just barely, her clitoral hood being pressed up by her engorging clit. Well, follow your eyes. I touched it, stroked it very very gently. And heard an almost subliminal moan.\n\nI glanced up at her face. Her eyes were closed and she was biting her lower lip. Watching her face now, I quickly wet my thumb in my mouth then slipped into her folds below her clit then drew it slowly up until it was hard up against her nub.\n\nI heard her whisper, \"Please.\"\n\nHer eyes were still closed, her chest and those magnificent breasts moving up and down with her aroused breathing. She licked her lips then bit her lower lip again. I started rubbing her clit firmly, then stroking the insides of her thighs with my other hand.\n\nShe said,\"Oh, oh, Oh, OH!\" with each word a different volume. Some quiet, some fairly loud. She suddenly arched her back and keened, long, loud, and high pitched. I could see she was going to collapse, so I reached out, got my hand behind her neck and held her up. I continued to rub until her squirming made it obvious she'd had enough. I hugged her to me. Her arms when around my neck and she sobbed into my shoulder.\n\nI thought \"What the hell?\" but my Attention quickly settled that she wasn't upset. She was ecstatically joyful. She still had her behind in my lap, her legs over the arms of the chair, and didn't seem to be in any discomfort. I patted her and stroked her and cried more and more quietly until she fell asleep again.\n\nShe seemed to be comfortable. I leaned my chair back, put my feet up on my desk, and let myself fall asleep too.\n\nI woke some time later to an odd sensation. I quickly realized that she was licking my neck and very gently rubbing her sex against my lap.\n\n\"Penny?\"\n\n'Hmmm. My pussy is stretched so wide open. It feels so, so good. What's this skirt made of? The texture is wonderful.\"\n\nPenny?\"\n\nShe rubbed herself a little harder. I was at a loss for what to do. Dump her on the floor? A quick check told me she was still asleep. Wake her up?\n\n\"Oh, Megan!\"\n\nShe sat up suddenly, put her hands on my shoulders and pressed me down into the chair. Her hips were moving at a furious rate, her breasts bouncing so beautifully. Her eyes flew open and she looked into my face, but I'm not sure she really saw me.\n\n\"Oh, OH MEGAN!\"\n\nI said, \"Penny!\"\n\n\"Oh, no, no, not, don't make me stop, I'm almost there... almost there... almost... all, uh, all...\"\n\nThen a scream. It sounded like she was being flayed alive. It was awesome and it was frightening. She screamed again, raising her wide arms into the air above her, looking like she was trying to embrace the universe. She wiggled around in my lap for several second, then lowered her arms and wrapped them around herself. She sat there sort of vibrating, hugging herself and moaning for another minute. Then looked at me, smiling broadly.\n\n\"Oh, Megan. That was wonderful.\"\n\nI looked up at her. \"I'm glad. What was, dear?\"\n\n\"What you did to me earlier. And what you let me do just now. Thank you.\"\n\n\"Penny, about that earlier.\"\n\nShe put her hands over her hears. \"Oh don't tell me it was wrong. You enjoyed it. I enjoyed it. I know you enjoyed it. You did enjoy it, didn't you?\"\n\nShe looked doubtful, and a little scared, then lowered her hands to her breasts. I don't think she was even aware she was pulling on her nipples.\n\n\"Yes, Penny. I enjoyed it. But...\"\n\n\"No, please, just this once, just this time, don't say \"but.\" Let's just be happy about what happened.\"\n\nI reached up, put my hands on her shoulders then ran them down over her breasts, cupping her nipples in the palms of my hands. I held them for just a moment, the moved them to her waist..\n\n\"Alright, dear. Now, could you climb off of me? I don't know how you stayed in such a position for so long, but I need to get up.\"\n\nShe reached between my arms and body on both sides, put her hands on the arms of my chair, and did a hand stand over me. Then pushed off and landed, standing, on the floor beside me. She went down on all fours and ran from the room. I looked down and, as expected, my skirt was a mess. I was going to have to wash it before I could send it to be cleaned.\n\nIt had been fun. And I was terribly horny. I considered calling her back to... to what? Service me? I smiled at that thought.\n\nI knew she'd do it in a second. And she'd be delighted. And I'd feel guilty. If not right way, then certainly later. I got up and took of my skirt, holding it up to get a better look at it. My hand went between my legs. Yes, my panties were soaked.\n\nI was standing there with one hand between my legs, holding my skirt in the other, when my Attention detected emotion near by. I looked up to see Penny in the hall outside my open office door, in her cat pose, watching me.\n\nShe said, in a matter of fact, \"You won't let me help you with that, will you?\"\n\n\"Thank you, no.\"\n\n\"I didn't think so. Do you want me to watch you?\"\n\n\"Yes.\"\n\nShe looked surprised. I was surprised.\n\n\"You're full of monosyllables tonight, Megan.\"\n\nShe moved into the room then sat a few feet away and, again, took up grooming herself, but watching me. I dropped the skirt and, blushing furiously, slipped my panties down enough to let me get at myself. I started rubbing my open hand over my pussy. I couldn't watch her, but I couldn't not watch her either. So I kept looking to her than away.\n\nOnce I'd started she just sat there. Watching me intently. She didn't play with herself. She acted as if there was nothing at all she'd rather be doing. I was so turned on it wasn't going to take long. We both knew it. And it was going to be big.\n\nShe got up on all fours and said, \"I'm not going to touch you. Please don't stop.\"\n\nShe went around behind me an, after a few moment, I heard my desk chair moving. I glanced around and she was pushing it with her forehead. She got it right behind me, touching the backs of my legs. Then came around and sat in front of me again, watching me.\n\nShe licked her lips, like... well, like I was the mouse and she was the cat. But she kept her place. But that gesture did it. I had a vision of her rushing to mash her face into my pussy and I came. Hard. I screamed and my legs turned to jelly. She jumped up just like a cat, put her paws on chest below my breasts and pushed me backwards. I fell back into the chair and found myself rubbing harder. I came again. And once more. Each one more intense than the last.\n\nUsually I prefer to rub myself more and more slowly after I've come. To come down from the experience more pleasantly. This time I just couldn't do it. I was completely spent, I just lay there panting. I felt, more than saw, Penny take my hands and pull me into a sitting position. I looked up and saw that her collar and ears were gone.\n\nShe said, \"Some along, baby. Let's get you showered and into bed.\"\n\nI let her pull me to my feet. She put her arm around my waist and helped me along. I noticed her collar, ears and tail laying on the rug as we left the room."
    ],
    "authorname": "VirginiaMarieAndrews",
    "tags": [
        "bisexual",
        "milf",
        "young",
        "consensual",
        "kitty girl"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/penny-and-megan-pt-06"
}