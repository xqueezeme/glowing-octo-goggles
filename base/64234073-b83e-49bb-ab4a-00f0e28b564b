{
    "title": "Stepping Out in Faith Ch. 02",
    "pages": [
        "Dear Reader, \n\nThanks for the great comments. I'm so glad that you like this story. Here's chapter two, hope you like this one just as much. Please let me know! \n\nYours, \n\nHudson Bartholomew \n\n***** \n\nStepping Out in Faith - Chapter 2 \n\nAndy was hit by a wall of sound and sweat as he stepped inside the nightclub one week later. He had spent the entire week since the disastrous baseball game incident trying to decide if he should come here. It was clear that Marcus was angry and for some reason that knowledge weighed heavily on Andy's heart. But now that he was here, he wasn't so sure this was a good idea. \n\nAndy scanned the room, trying to look for that head of curly black hair in a sea of bodies. He hadn't really thought through this plan, he realized. It was going to be next to impossible to find someone in here. \n\n\"Hey there, sweetie. Can I get you something?\" A waif of a boy with shocking pink hair, wearing nothing but a pair of sparkly short shorts asked Andy while holding a waiter's tray. \n\n\"Um... No, I'm fine. Thank you.\" \n\n\"Well, let me know if you'd like anything... Anything at all.\" The look in the boy's eyes suggested he wasn't just referring to some beverage. And the way he brushed his body against Andy's as he walked past made the message abundantly clear. \n\nAndy coughed awkwardly and stepped away. This was turning in a bad idea. \n\nAndy slowly squeezed his way through a crowd of bodies, telling himself to at least make one circuit of the room before bailing. Sweaty skin rubbed up against him, pressed into him. The smell of man filled his nostrils, reminding him of the last time he had been on this dance floor with Marcus. He made the mistake of wandering too close to the speaker and blaring music rang in his ears, the bass reverberating through his body. \n\nAndy's own sweat was forming on his brow, wetting his hair, rolling down his back. He brushed the wet strands back off his forehead with a hand and froze in mid-motion as he caught sight of Marcus. \n\nMarcus was standing with another man, close to the other man. They were whispering in each other's ears and laughing out loud. They looked like mimes as the music drowned out the sound of their voices. They looked like beautiful mimes, dressed in tight jeans and t-shirts, hair perfectly coifed. \n\nAndy swallowed thickly, realizing that he was out of his league. His baggy clothes were soaked with sweat, his hair mussed from running his hands through them. He was an idiot to think that Marcus would be upset over what had happened. Marcus was a gorgeous man, he could have anyone he wanted and he had clearly found someone just as gorgeous to spend the night with. \n\nAndy was about to turn and walk out when Marcus suddenly caught sight of him. The happy look on his face disappeared into a scowl. Now, Andy really wanted to run. Instead, Andy stood rooted to the spot, staring at Marcus as he stared back. \n\nThe other man followed Marcus' gaze until he saw Andy and realized what was happening. He glared at Andy, but then said something to Marcus and turned to walk away. \n\nAndy continued to stand there as Marcus made his way closer. There was that look again, the one that reminded Andy of a predator. His heart leapt into his throat, watching Marcus' slow saunter, hips swaying, shoulders rolling. \n\nMarcus didn't stop at arm's length, but came right up until only an inch of air separated them. By then, the rest of the club had faded away and it was just the heat and presence of Marcus that consumed and surrounded Andy. \n\nThat smell. Andy took a deep breath and held that spicy, cinnamon scent in his lungs before letting it out slowly. \n\nMarcus leaned in and for a split second Andy thought he was going to kiss him. Andy parted his lips in anticipation until Marcus paused, just millimeters away. \n\n\"What the fuck are you doing here?\" \n\nAndy stepped back as if he'd been slapped in the face. \n\nHe took a couple of calming breaths and shook his head to clear the fog that fill his mind whenever Marcus was near. \n\n\"I... I wanted to explain.\" \n\n\"I think you explained just fine.\" \n\n\"No! That was... Please, I just need to explain.\" \n\nThe look in Marcus' eyes was so dark that Andy was sure he'd be turned away again. But then, to his surprise, Marcus sighed and rolled his eyes. \n\n\"Why do I always do this to myself?\" He asked, more to himself than to Andy. \n\nMarcus gave Andy a measured look. \n\n\"Fine, so explain.\" \n\n\"Um... Well, it's kind of complicated.\" Andy glanced at the crowd around him. He really hadn't thought this through. Had he really expected to have this conversation in the middle of a night club? \n\n\"Yeah, I figured that much,\" Marcus sighed. \"Look, this obviously isn't a good time for this. You like kids, right?\" \n\n\"Huh?\" \n\n\"Kids, teenagers. You get along well with them? You were with a group of them at the ball game. Next Thursday night, 6:30. If you want to explain, meet me at the LGBT Center in the Village. You can explain then.\" \n\nMarcus gave Andy one last look, it was that hungry look that made Andy's heart skip a beat. But before Andy could respond, Marcus spun on his heel and walked away. \n\nAndy sighed, watching Marcus disappear through the crowds. Things never seem to turn out as he planned when it came to Marcus. \n\nHe needed Marcus to understand. He couldn't explain why the feeling was so strong, but it felt like a compulsion, like an instant reaction to try to catch a falling glass before it hit the ground. Waiting until Thursday felt like watching the glass fall in slow motion; Andy was reaching for it, but couldn't tell if he'd reach it in time. \n\nThe whole thing didn't make much sense to Andy. In all his years, he had never wanted to tell anyone about his proclivities. In fact, he'd done everything he could to hide. So why did he suddenly want to confess it all now? \n\nBut he had a bigger problem\u2014the LGBT Center. Just the thought of it was doing a number on his nerves. If he went there, then people would know. To be fair, people already knew. But at the Center, people outside the dark, shadowed night club would know. At the Center, he would be out in the light. That didn't sit well with Andy's stomach. \n\nAndy wandered the streets, not ready to go home and hoping the night air would settle his nerves. If he was smart, he would stay as far away from that Center as possible. But staying away just didn't seem like an option anymore. \n\nThe priesthood, his vow of celibacy\u2014it had once seemed like the solution, the hope that he clung to for salvation. Now, it felt like a boulder tied around his neck. Some days it was so heavy that Andy could barely get out of bed. \n\nHe didn't hate being a priest. In fact, he really enjoyed it. He enjoyed working with people, counseling them, helping them find peace in the Lord. He just wished he could find the same peace he was always telling others about. He wished he could find the contentment that came with knowing that even though the world is a sinful, fallen place, everything would eventually be okay because the Lord held everything in His hand. \n\nBut Andy didn't know that everything would be okay. In fact, he felt like he was waiting for his carefully constructed life to fall apart. And something told him that showing up at that LGBT Center was going to be the beginning of the end.  \n\nAndy shook his head. Who was he kidding? The beginning of the end was when he'd shown up at the club all those weeks ago and let Marcus take him home. Because ever since that night, he hadn't been able to fall asleep without remembering the feel of Marcus' lips on his, the heat of his skin, the taste of him. Every night, Andy laid in bed, hard and aching, trying to resist the urge to stroke himself while imaging it was Marcus' lips on him. \n\nMore than once he had gotten out of bed after laying there for hours to kneel before the altar in the sanctuary. He prayed. He prayed with all his heart to be rid of those feelings, to be relieved of the burden. He prayed for peace, for that stillness that he was told comes from being in the presence of the Lord. \n\nOften, it'd only be after an intense prayer session that he'd finally fall asleep, exhausted. The next day, he'd wake up and do it all again. \n\nSometimes he wondered whether it was all worth it. Maybe it'd just be easier to just give up and leave the priesthood. That would certainly be better than this sneaking around he'd resorted to. But the thought of leaving the church terrified him. The church was the only thing he knew, it was his rock, it was what made his life make sense. He couldn't leave. He'd just have to find another way. \n\n\"Father Dylan!\" \n\nAndy looked up to see an older man with greying hair walking down the sidewalk toward him. He tensed and wondered if he had a guilty look on his face. \n\n\"Father Sullivan,\" Andy addressed the older man whom he worked and lived with, hoping his voice didn't shake. \n\n\"Father Dylan,\" the older man smiled. \"You've been out this evening?\" \n\n\"Yes, just a walk around the neighborhood,\" Andy answered, avoiding his eyes. \"Please, after you.\" \n\nThey had reached the steps to the brownstone kept by the parish for their housing and Andy followed Father Sullivan up the stairs, suddenly struck with curiosity. \n\n\"Father Sullivan, do you mind if I ask you a question? It's kind of personal.\" \n\n\"Certainly, what's on your mind?\" \n\nAndy hesitated, not quite sure how to put his thoughts into words. He waited until they were inside and seated at the kitchen table, Father Sullivan moving around to make his evening tea. \n\n\"How... How did you know you wanted to be a priest?\" \n\nFather Sullivan paused and glanced at Andy in surprise. \n\n\"I was just curious,\" Andy said in a rush. \"You don't have to answer if you don't want.\" \n\n\"No, no. It's alright. It's just that sometimes I forget that I'm a priest.\" \n\n\"You forget?\" \n\n\"Yes,\" Father Sullivan smiled. \"I wanted to be a fighter pilot when I was kid; sometimes I still do.\" \n\n\"A fighter pilot?\" Andy could not picture kind, gentle Father Sullivan as a high flying fighter pilot. \n\n\"Yes. But it didn't work out because you can't wear glasses and be a fighter pilot,\" Father Sullivan said, pointing to his gold metal frames. \"I did end up getting my pilots license, though. Even worked as a commercial pilot for a while.\" \n\n\"Really? You were a pilot before you became a priest?\" \n\n\"Oh, sure. I was in my 40s when I went back to get my Master of Divinity. I've only been doing this for 20 years.\" Father Sullivan's brow creased in realization. \"Hm, that sounds like a long time. But it doesn't feel like a long time when you're my age, I guess.\" \n\n\"So why'd you want to be a priest? You didn't like being a pilot?\" \n\n\"Flying planes was fun. It was exhilarating. But...\" Father Sullivan sighed, eyes lost as he sorted through his memories. \n\n\"I had a close call one time. It really shook me, more than it should have as a pilot. It was hard getting back into the cockpit after that. But I kept at it, even when I was in no mental shape to do so. I used to have to have a drink right before I flew or my hands would shake uncontrollably.\" \n\nFather Sullivan looked at Andy with a wistful smile. \n\n\"I realized that being a pilot had become my entire world. I didn't know who I was unless I was flying. And I thought that if I couldn't fly anymore, then I would just be nobody. That was a frightening way to live, always waiting for the day I couldn't fly anymore, afraid of crashing the plane, afraid of being found out. I was constantly looking over my shoulder for some boogeyman to jump out at me. \n\n\"It wasn't until my priest at the time convinced me to quit that I realized that I'm more than just my pilot's license. I loved flying. I still do. But it was just a job, and I let it become my identity.\" \n\nAndy took a moment to process Father Sullivan's story. He had never heard it before, and had to admit that it was nothing like he expected. \n\n\"So is being a priest just a job, too?\" Andy asked. \n\nFather Sullivan laughed out loud. \n\n\"It doesn't sound very nice when you put it that way. But yes, I think being a priest is just a job, it's not who I am. I am a man, fallen, with lots of problems and issues. The Lord is gracious with me everyday and I try my best to be the person He created me to be. Being a priest is just how I can express who I am, but it is not the entirety of who I am.\" \n\nAndy stared into the mug of tea that Father Sullivan had placed in front of him, letting the words sink in. \n\n\"Why do you ask, Father Dylan? What's got you thinking about this?\" \n\nAndy looked up from his tea, wondering how to answer without revealing too much. \n\n\"Nothing,\" Andy said, shaking his head. \"I was just curious.\" \n\n\"Well,\" Father Sullivan was smiling again. \"I hope we can be friends, Father Dylan. This can be a lonely job and we need to be able to lean on each other if we're planning on sticking around for a while. I'm more than happy to talk about these types of things. In fact, they're important to talk about. I think too many people join the priesthood for the wrong reasons. So many people join because they're chasing glory, fame, recognition. Others join to run away from something. Neither are right, and they can end up doing more harm than good.\" \n\nFather Sullivan stood up and stretched. \"I need to take my old self off to bed now. You have a good night, Father Dylan. Let me know if you'd like to chat again.\" \n\nFather Sullivan placed an encouraging squeeze on Andy's shoulder before heading off to his room. \n\nOthers join to run away from something... They can end up doing more harm than good. \n\nFather Sullivan's words echoed through Andy's ears. His chest had constricted at those words. Was he running away from something? Would he end up doing more harm than good? No, he wouldn't allow it. He'd just have to buckle down and try harder. No more sneaking off to night clubs, no more daydreaming about Marcus. The LGBT Center... Well, he'd just have to skip that now. \n\nFor the first time in weeks, Andy fell asleep that night without fighting the urges of his body. He slipped into a deep sleep, weighed down by his burden. It was a heavy burden, but one he felt was his to bear. Christ had his cross; Andy had his own. \n\n***** \n\n\"Shoot him! Shoot him! Damn, Marcus, you suck at this.\" \n\n\"Sorry, kid\" Marcus handed the game controller back to the teenager and patted him in the head. \n\n\"Hey, watch the hair!\" \n\nMarcus smiled and glanced at the door before wandering over to the pool table to see what some of the older boys were up to. \n\n\"Hey Marcus, we need a fourth. You game?\" Nick, a sophomore in high school held up a pool cue. \n\n\"Yeah, sure.\" He played with Nick and a couple other regulars at the Thursday night youth group, chatting about their week and giving each other hard times. \n\n\"Dude, you waiting for someone?\" Nick asked. \n\n\"What? No, why'd you say that?\" \n\n\"'Cause you keep staring at the door,\" Nick said with a smirk on his face. \n\n\"Shut up,\" Marcus gave him a friendly push. \n\n\"What? You crushing on some guy?\" Nick teased. \n\n\"What?\" Marcus tsked. \"Kid, you don't know what you're talking about.\" \n\n\"Ha, sure,\" Nick smiled widely and turned to take his shot. \n\nMarcus groaned inwardly, because he had been keeping an eye on the door all evening. He was pretty sure Doe eyes wouldn't show up, but it didn't stop him from hoping. \n\nThe whole situation was fucked up, as far as he was concerned. He had been on a perfectly nice date with a perfectly nice guy, but Marcus had been more than willing to ditch Charles the minute Andy showed up. Charles hadn't been too happy about that. Marcus had to do a lot of apologizing to smooth things over, and even now he wasn't sure if there'd be another date. The fucked up part was that he wasn't sure he wanted another date; he had no reason not to be interested in Charles, except he really wasn't that interested. \n\nAnd now here he was, waiting on pins and needles for a guy who was most likely not going to show up anyways. Now, how fucked up was that? \n\n\"Hello? Dude?\" \n\nMarcus snapped out of his thoughts to see three teenaged guys watching him expectantly. \n\n\"What?\" \n\n\"Dude, it's your turn,\" Nick said, shaking his head. \"He's got it bad.\" \n\nNick and his friends laughed with each other as Marcus scowled at them. \n\n\"Since when did you turn into a California surfer boy? I've never heard anyone say 'Dude' so much.\" Marcus retorted and set the boys off on another laughing fit. \n\nMarcus bent over the pool table, lining up his next shot. Just as he was about to take it, one of the other kids called out. \n\n\"Ow, Marcus! Dude's checking out your ass!\" He missed the shot, the ball rolling very wide of its target. \n\nMarcus glared at Ryan, knowing he had timed that on purpose. But Ryan wasn't looking at him. Ryan was looking at the door. \n\nMarcus turned and his breath hitched. As much as Marcus had been telling himself that he didn't care if Andy showed up, he couldn't help the way his heart soared when he saw the man. Marcus let his eyes wander down Andy's body, taking in his perfectly parted brown hair, loose fitting khakis and plaid button down tucked neatly into his pants. Andy's eyes were wide with embarrassment and the bright flush told Marcus that Ryan's comment probably wasn't too far off the mark. \n\n\"Shut it, guys,\" Marcus said as the boys began snickering among themselves. He walked over to Andy, trying not to smile, but failing miserably. \"I didn't think you'd make it.\" \n\n\"I was sure I'd make it either,\" Andy swallowed thickly and dropped his eyes to the floor. \n\n\"I'm glad you did, though,\" Marcus said after a beat. \"Come on, I'll introduce you to these loser kids.\" Marcus said the last part loudly with a smile on his face and the kids eagerly lined up to meet the cute man Marcus brought. \n\nMarcus introduced the 10 or so kids that showed up, boys and girls, ranging from about 13 to 18. Each one gave Andy the once over and passed on nods and winks to Marcus, indicating their approval. \n\n\"Hey, give me a minute to finish up this game, okay?\" Marcus asked, indicating the pool table. \n\n\"Yeah, sure. Take your time.\" \n\nMarcus went back to the game but his attention was on the man across the room. Andy had been so infuriating every time their paths had crossed, and yet Marcus couldn't deny that he was happy that he came. \n\nMarcus watched out of the corner of his eye as Andy wandered to the reading corner and started chatting with Sophie. She was kind of a shy kid, liked to read by herself and none of the counsellors had been able to draw her out of her shell. But it seemed like she was talking to Andy. \n\nMarcus missed his next couple of shots, partly because he was distracted and partly because he'd rather be watching Andy than playing pool. The boys couldn't stop snickering, but Marcus didn't care enough to do anything about it. \n\nAndy seemed more relaxed when talking with Sophie. The tension in his shoulders was gone and he had a gentle smile on his face. He was adorable and all Marcus wanted to do was walk over, hold him in his arms, and pull him in for a deep kiss. \n\nMarcus' heart twisted at the thought. What the hell was wrong with him? Doe eyes clearly had issues; he's still in the closest and he a fuc-, he was priest! Marcus shook his head, trying to shake clear the unwanted thoughts. Charles is nice, and hot, and willing; he should focus his attention on Charles, not some closeted priest who was using him for experimentation. \n\nMarcus tried to turn his attention back to the game. The other team was doing a good job of kicking Nick and Marcus' butts, and Nick made sure Marcus knew it was his fault. \n\nThen suddenly, the room was filled with music, simple chords, beautiful and haunting. Everyone turned to the piano in the corner just as Andy began to sing: ",
        "Heart beats fast \n\nColors and promises \n\nHow to be brave? \n\nHow can I love when I'm afraid to fall? \n\nBut watching you stand alone \n\nAll of my doubt, suddenly goes away somehow \n\nOne step closer... \n\nMarcus' heart constricted at the sound of Andy's voice, a rich and smooth baritone. It reminded Marcus of hot caramel rolling down vanilla ice cream, smooth and sweet, and he wanted to lick up every drop. \n\nSomehow, Andy had gotten Sophie to hang out with him by the piano, smiling broadly. She even joined in with her quieter voice in the second verse. He was clearly in his element and he looked confident, comfortable, and sexy as hell. Marcus felt a sense of panic rising as he realized the direction of his thoughts. \n\nTime stands still \n\nBeauty in all she is \n\nI will be brave, I will not let anything take away \n\nWhat's standing in front of me \n\nEvery breath, every hour has come to this... \n\nFuck... Fuck, fuck, fuck. He was not going to fucking fall for this, Marcus swore to himself. It's just a stupid song, it doesn't fucking mean anything, he kept repeating. But the words were worming their way into Marcus' consciousness, into his heart in a way that scared him. He crossed his arms as if they could provide a defense to Andy's song. \n\nI have died everyday, waiting for you \n\nDarling don't be afraid \n\nI have loved you for a thousand years \n\nI'll love you for a thousand more \n\nAnd all along I believed I would find you \n\nTime has brought your heart to me \n\nAnd I have loved you for a thousand years \n\nI'll love you for a thousand more... \n\nAndy wasn't singing to Marcus. He wasn't even looking at Marcus. But the song resonated so deeply that Marcus was finding it difficult to breath. His chest ached\u2014that part of his chest that happened to be right over his heart. \n\nFuck. Marcus forcefully drew a deep breath of air into his lungs, looked away and let it out slowly, willing his heart to beat normally again. He knew next to nothing about this man except he was a priest and in the closet. And yet, here he was, quickly falling for him and his smooth voice. \n\nThis was going to end badly, Marcus knew. He'd gone and broken the golden rule: don't fall for a straight guy. Especially, don't fall for a closeted gay guy\u2014that was worse. Falling for a closeted gay guy who was also a priest, had to merit some kind of stupidity award. Marcus scowled; this was going to end really badly. \n\nThe room broke out in a gentle applause as Andy and Sophie finished their song. Marcus watched as Andy leaned forward and whispered something conspiratorially into Sophie ear that made her giggle and grin in delight. \n\nMarcus wanted to frown and scowl, but couldn't help his own grin growing on his face. He caught Andy's gaze as the other man scanned the room. Andy's happy smile and dancing eyes put the nail in Marcus coffin. It's too late, Marcus realized. He'd gone fallen for this guy he barely knew, who would more than likely break his heart one day. \n\nThe realization was sobering, paralyzing, and Marcus felt like he couldn't breathe. He stalked out of the room and into the evening air to escape the suffocating feeling. Marcus took deep even breaths until he started feeling calm again. He had to go back inside, he knew, but he couldn't face Andy just yet. \n\nWhat was he going to do? Andy was experimenting. At least, he was experimenting; Marcus didn't even know if he was still experimenting. But then why did he show up tonight? To explain. Marcus scoffed to himself. He still wasn't sure what exactly needed explanation. And did explaining mean experimenting? Or did it mean that he didn't want to experiment anymore? \n\nThe questions were driving him crazy and the only person who had answers was waiting back in that room. But Marcus couldn't bring himself to go back in. \n\nHe must have been out there for a lot longer than he had wanted, pacing back and forth on the sidewalk, but soon the older kids were trickling out, waving goodbye and heading off into the night. Then parents of the younger kids showed up and said hello before going inside to pick up their children. \n\nStill, Marcus paced on the sidewalk, hands stuffed into pockets, eyes glued to the pavement. \n\n\"Marcus?\" \n\nA gentle voice interrupted his pacing. Marcus looked up to see an older lady with grey hair and a warm, friendly smile. \n\n\"Kathleen, hi. How as you?\" \n\n\"I'm well. I was told I'd find you out here.\" \n\n\"Oh, uh, yeah... it was getting kind of stuffy in there. Needed to get some air.\" Marcus said with a shrug. \n\n\"You brought a friend tonight?\" Kathleen asked with a kind smile. \n\n\"Oh, yeah. Sorry. I know everyone needs to be screened and stuff. But he's a pri\u2014he works with kids, so I figured it'd be okay for just one night.\" \n\n\"Well, I heard him and Sophie singing from my office. It's great that he was able to connect with her. If he wants to keep coming, I can get him set up with a background check and everything.\" Kathleen offered. \"You know we can always use more counsellors.\" \n\n\"Yeah, I know,\" Marcus nodded. \"But I'm not sure what his plans are. We can ask him.\" \n\nMarcus took a deep breath before following Kathleen inside. When they reached the room, Marcus saw that most of the kids had left and Andy was chatting with Sophie's dad. Then, Andy turned, gracing Marcus with a shy smile, and all the calming down he had achieved outside disappeared. \n\nMarcus' chest was constricting again, making it difficult to breathe. His heart was beating erratically and his mouth felt dry. He was so caught up in his reaction to Andy that he didn't even notice Andy and Kathleen introduce themselves to each other. \n\nWhen he finally came to, Sophie and her dad were gone and Andy was asking Kathleen an awkward question. \n\n\"You're a pastor and you're gay?\" \n\nKathleen smiled broadly, as if used to the question. \n\n\"Yes, I am. Although, I'm not serving in a church at the moment. I'm the executive director for the Center.\" \n\nAndy had a deep frown on his face as if he was trying to wrap his mind around something. \n\n\"But I don't understand.\" \n\nNot put off for a second, Kathleen eyes were filled with gentle concern and care. \n\n\"Some people don't,\" she nodded. \"But if you'd like to talk about it more at any point, I'd be more than happy to sit down with you.\" \n\n\"Oh, um... that's very nice of you. I'll be sure to keep that in mind,\" Andy declined politely. \n\n\"Marcus said that you work with children?\" Kathleen asked. \n\nAndy shot Marcus a panicked look, which Marcus met with a steady gaze. Andy swallowed thickly. \n\n\"Um... Well...\" \n\n\"No pressure,\" Kathleen chuckled. \"I just meant that if you were interested in joining us again, we usually have a background check process for all the counsellors, just to be safe, you know.\" \n\n\"Oh, I see,\" Andy trailed off. \"Sorry for just showing up today.\" \n\n\"Not at all. We can always use more counsellors and you seem to have a way with Sophie. Think about it and you can let Marcus know.\" Kathleen smiled gently. \"Well, thank you both for helping out tonight. I think the kids had a good time.\" \n\n\"No problem, Kathleen,\" Marcus found his voice again. \"We'll get out of your hair so you can lock up.\" \n\nMarcus gave Andy a tight smile and led the way back outside. Once out in the evening air, he took a deep breath before turning to face the man that had wormed his way into his heart. Now that it was time to talk, Marcus found that he couldn't figure out what to say. \n\n\"Thanks for inviting me tonight. Those are good kids,\" Andy said quietly. \n\nMarcus nodded, not trusting his voice. Andy looked unsure of himself, shifting from foot to foot, hands stuffed in pockets. Marcus knew his silence wasn't helping to relieve the tension between them. But Marcus was afraid of saying anything, afraid of saying the wrong thing, of betraying his feelings and driving Andy away. \n\nWho was he kidding? Why did he think there was anything he could say or do to keep Andy from walking away eventually, anyways? That was the danger with getting involved with guys still in the closet and Marcus really had no reason to believe Andy would be any different. \n\nBut at the very least, he could have tonight. He could enjoy this one night with Andy and whatever tomorrow brought, he'd deal with it then. \n\n\"Come over?\" Marcus asked, hating the uncertainty he heard in his voice. \n\nThen his heart melted when Andy broke out in a wide smile. \n\n\"Yeah,\" he answered. \n\nMarcus moved to grab Andy's hand but stopped himself half way when he realized Andy's hands were still stuffed in his pockets. Andy flushed red and lowered his eyes, but didn't take his hands out. \n\nMarcus' smile became strained as he tried not to let on how much that bothered him. But instead of saying something\u2014because it'd probably end up something he'd regret later\u2014he turned and led the way back to his apartment. \n\nAndy fell into place next to him and although they walked in silence, Marcus noticed that they'd brush shoulders every once in a while. He wasn't sure who leaned in too close first, but after the first couple of times, Marcus was definitely keeping a closer distance to Andy and purposely bumping into him at every chance. The contact warmed Marcus, radiating from him arm and straight to his heart. It was dangerous, Marcus knew, but he had already decided to indulge, just for tonight, so he would indulge. \n\nWhen they reached his apartment Marcus poured himself a glass of scotch, disconcerted to find his hands trembling. He downed the first glass and poured himself a second one, willing his nerves to settle. His heart was racing a mile a minute and his stomach was all twisted in knots. \n\n\"What are these?\" Andy asked. \n\nMarcus turned to see Andy flipping through papers on the kitchen counter. His stomach seized as he remembered what he had left there. \n\nAndy looked up at him with those large doe eyes, glistening with wonder. Marcus found himself walking toward Andy, drawn to the depth of emotion he found there. \n\n\"They're beautiful,\" Andy whispered. \n\nMarcus glanced down at the sketches he'd doodled over the past weeks, sketches of Andy smiling with his expressive eyes, Andy as he lay sleeping in Marcus' bed, Andy lost on the throes of passion. \n\nLooking back at the man who inspired the drawings, Marcus' eyes were caught by the rosy lips, bruised from the gnawing of Andy's teeth. Marcus raised a hand to run his thumb across the full lips. He fought the urge to lean in and taste those lips again, to mould them underneath his own and explore Andy's mouth with his tongue. \n\n\"I just draw what I see,\" Marcus said as he cupped Andy's cheek. \n\nWhen Andy turned his face into Marcus' palm, Marcus let out a breath he didn't realize he was holding. \n\nGod, all he wanted to do was take Andy to bed and spend the night discovering each other, talking be damned. Marcus battled his conscious that argued that Andy wanted to explain and Marcus owed him at least that much. \n\nSo, reluctantly, Marcus dropped his hand, but didn't move away. \n\n\"So you're an artist?\" Andy asked. \n\nMarcus raised an eyebrow and shrugged. \n\n\"I'm an art director at a marketing company.\" \n\nAndy gave Marcus a once over that very un-priest-like and Marcus felt a stirring in his groin in response. \n\n\"You look like as artist.\" \n\n\"Yeah? And what exactly do artists look like?\" Marcus chuckled. \n\nAndy just shrugged as he looked back down on the drawings. \n\n\"Well, you don't look like a priest. I didn't know priests could be so hot,\" Marcus said with a sly smile. \n\nAndy flushed red, looked away and started chewing on his lip. That lip didn't help the heat pooling in Marcus' stomach, but Marcus did feel bad about making the joke. Guess it hit a little too close to home to be funny. \n\n\"You want a drink before we talk?\" Marcus asked, changing the subject. \n\nAndy looked uncertain for a minute, but then nodded gently, reminding Marcus of that deer with the big eyes again. \n\nMarcus moved to his bar cart, gratified that Andy followed close behind him. He enjoyed the heat he could feel between himself and Andy\u2014it felt comforting and right. Marcus wanted to feel that warmth forever and the thought scared him to the core. \n\nHe turned to hand Andy a glass and saw that he had brought the doodles along. \n\n\"Are these church bulletins?\" Andy asked. He had flipped the drawings over to see the writing on the other side. \n\n\"Yeah,\" Marcus answered. \"From my parents' church.\" \n\n\"You seem to have a lot of Christians in your life,\" Andy said with a wry smile that tugged at Marcus' heart. \n\nIt took a moment before Marcus could find the breath to respond. \n\n\"Yeah, seems like I do,\" he said quietly. \n\n\"So, how does that work?\" Andy asked. \n\n\"What do you mean?\" \n\n\"I mean, being gay and all,\" Andy's skin flushed and he ducked his head. \"Your parents are okay with you being gay?\" \n\n\"Yeah,\" Marcus laughed. \"My mom's a member of PFLAG and everything.\" \n\n\"PFLAG?\" \n\n\"It's like a club for parents who have gay kids.\" \n\n\"Like a support group?\" \n\n\"Um... yeah,\" Marcus said with a frown. \"And also advocacy and education, that sort of thing.\" \n\n\"Oh,\" Andy smiled, looking a little embarrassed. \"I've never heard of Christians who are okay with gays.\" \n\nMarcus gave a choking laugh before taking another gulp of his scotch. \n\n\"I don't really understand it,\" Andy admitted, moving to sit on the couch. \n\n\"What's to understand?\" \n\n\"How they can be okay with it.\" \n\nMarcus gave Andy a measured look before sitting on the opposite end of the couch. \n\n\"That's probably a better question for Kathleen,\" Marcus said, studying the contents of his glass cradled in his hands. \n\nA silence settled between them and Marcus could hear their gentle breathing. At least, Andy's breathing sounded gentle; Marcus was struggling to steady his breathing. Breathe in, breathe out. \n\n\"How did you tell your parents?\" Andy asked suddenly. \n\n\"About being gay?\" Marcus turned toward Andy. \"I didn't.\" \n\nMarcus turned sideways in the couch, one knee bent across the seat and arm draped over the back. The memory brought a smile to his face. \n\n\"I came home one day from school\u2014sophomore year, I think\u2014and found a bottle of lube on my night stand. Apparently my Mom had found my stash of gay porn. I was mortified,\" Marcus laughed. \"And grateful. I hadn't figured out you could use lotion for lube, so I was just spitting on my hand. That only works so well.\" \n\nAndy's face was flushed bright red at Marcus' story, which only made him look more adorable to Marcus. \n\n\"That's it? She just gave you a bottle of... Lube?\" Andy said the last word as if it was a curse. \n\n\"Well,\" Marcus laughed. \"She cornered me after dinner that night and we had the abstinence and safe sex talk. That was more embarrassing than the lube. But now we can talk about just about anything.\" \n\n\"That must be nice.\" \n\n\"It is,\" Marcus paused, wondering whether it was okay to ask. \"And you? I'm guessing you haven't told anyone you're gay.\" \n\n\"I'm not-\" Andy started. \"I mean, I can't be-\" \n\n\"Gay?\" Marcus supplied. \"What do you mean you can't be gay? It's not really a question of can or can't, it's more a question of are you or aren't you.\" \n\n\"I can't be,\" Andy shook his head. \"It's forbidden.\" \n\nMarcus let out an exasperated sigh and forced himself to loosen his grip on his glass. \n\n\"Look, I know what some Christians think about gay people. It's stupid and dumb as fuck. They go around following blindly without trying to understand the people that they're judging. None of us chose to be gay\u2014I know so many things in life would be a hell of a lot easier if I were straight. Trust me, being gay isn't something I'd do just because I'm feeling rebellious or because it would be funny joke.\" \n\nMarcus drained the rest of his glass and put it down on the coffee table a little too hard. \n\n\"It's easy when you've had so much support from an early age,\" Andy said, quietly. \"You didn't grow up with my family.\" \n\nThe sadness in Andy's voice melted away all of Marcus' annoyance. \n\n\"I've always had these... Feelings,\" Andy sighed. \"But I'm Catholic, my whole family is. And I went to Catholic school. The Bible teaches that it's wrong, so what I feel must be wrong.\" \n\n\"It's not-\" Marcus was stopped by a pleading look from Andy. \n\n\"There was a boy at my school,\" Andy continued. \"He was gay and everyone knew it. Everyone treated him badly, made his life miserable. The teachers knew about the bullying, but never did anything to stop it.\" \n\nAndy was hunched over, elbows on knees, staring into his glass. His voice was so strained, quiet as he remembered. Marcus reached out a hand and placed it on Andy's shoulder. He felt the tension in Andy's body melt away under his touch. It warmed Marcus' heart to know he could have that effect on Andy. \n\nMarcus scooted closer and laid his arm across Andy's back, lending what comfort he could. \n\n\"It was senior year. I had this place I used to go to in a wooded area near my school. It was always quiet, secluded. I'd go to think, figure life out. He showed up one day, out of the blue. Turns out he had noticed me watching him, had figured out that maybe I had the same feelings as he did. He was right, I did. His uniform was always a size too small, like he was showing off his body, I always ended up staring whenever he walked by.\" \n\nAndy paused with a wry smile on his face, remembering the boy that caught his attention as a youth. \n\n\"He kissed me that day. It was...\" Andy shook his head. \"I'd never been interested in girls, never thought about wanting to kiss them. I figured that's what made me suited for the priesthood, that I'd been blessed with the gift of celibacy. But that kiss...\" \n\nMarcus squeezed the shoulder under his hand. He could see how difficult this was for Andy and his chest swelled with gratitude that Andy would choose to share this was him. \n\n\"I remember the shock of it, my body reacting, but my brain not understanding what was going on. I think I pushed him away initially. But definitely kissed him again because we ended up making out for a while.\" \n\nThe smiled on Andy's face disappear and Marcus felt the tension return to his shoulder. \n\n\"We didn't do any more than that. I don't think there was any expectation that there'd be anymore. Then a while later I saw him getting bullied again at school. I tried standing up for him. It wasn't like I could really fight anyone, or anything. But I didn't like the way they treated him and I thought that since we'd kissed that... I don't know... They started turning on me, too, calling me gay because I was standing up for him. It scared me. We managed to get out of that situation okay, but...\" \n\nAndy paused again and took a deep breath before letting it out slowly. \n\n\"It's okay, we don't have to talk about this if you don't want,\" Marcus offered despite desperately wanting to know what happened. \n\nAndy just shook his head and took another breath to compose himself. \n\n\"I was leaving school one day and noticed a crowd in the parking lot. I couldn't see what was happening, but I knew. I just knew. I wanted to turn around and run, pretend I hadn't seen anything. But the next thing I knew I was pushing my way through the people.\" \n\nAndy's voice broke and he dropped his head into his hands. Marcus scooted even closer, pressing himself into Andy, leaning his cheek against Andy's shoulder. \n\n\"He saw me right away,\" Andy continued, just barely a whisper. \"He was lying on the ground, curled up in a ball. There was already blood all over his face. He was begging me. He didn't say anything, but his eyes. He was begging me to do something. But I couldn't do anything. I should have shouted, I should have run for help, I should have stopped them. But I couldn't. I couldn't do anything.\" ",
        "Andy was shaking now, trembling under Marcus' hands. Marcus tightened his hold, pulling him close. \n\n\"Then...\" Andy's voice broke again. \"Someone grabbed a huge rock, and they...\" \n\nAndy was sobbing now, face in hands, body racked with tremors. \n\n\"Shh, it's okay,\" Marcus said, trying desperately to think of something less lame to say. He leaned back on the couch and pulled Andy into him until Andy's face was buried into his shoulder. \n\nAndy's hands clutched at Marcus' shirt and he quickly felt Andy's tears soak through the fabric. Marcus' heart was seizing in anger and pain over the injustice. There really wasn't anything to say, nothing that could undo the past, nothing to magically sooth Andy's grief. So Marcus held him, held him tight until the tears eased, his breathing calmed and his body stopped trembling. \n\nAndy was still for a while, his breath light on Marcus' neck. Despite the sadness of the moment, Marcus couldn't help but notice the warmth of Andy's body against his, the weight of his head on Marcus' shoulder. The intimacy was dangerous to Marcus' heart, but hell, everything about the night up to this point had been dangerous. \n\n\"He was so still,\" Andy whispered, still snuggled close to Marcus. \n\n\"Just lying there on the ground in a pool of blood. I thought he was dead. I thought they'd killed him with that giant rock. But someone had managed to call for help and the ambulance came to take him to the hospital. He was in a coma for weeks. I went to see him once, when he was still asleep. He was connected to all these tubes.\" \n\nAndy breathed deep and let it out in a long sigh. \n\n\"He eventually woke up, but I heard that he was never the same again. Brain damage. I don't think he ever finished high school. I overheard my mom talking on the phone about it once. The rumor mill was that his parents had to put him in a special home because he was too much work to take care of at home.\" \n\nAndy's body tensed again. \n\n\"They never charged the people who did that to him. Police said there was inconclusive evidence and they couldn't prove who was responsible. Except dozens of people saw what happened. But none of us were willing to stand up for him, to speak up. Myself included. I'm just as guilty as the person who threw the rock.\" \n\nMarcus was torn. He wanted to say that it wasn't the same thing, but he wouldn't have believed the words. Because sometimes turning a blind eye is just as bad as throwing the stone. \n\n\"You were young, you were scared.\" \n\n\"Old enough to know what was right. But I was afraid that if I said anything they would turn on me, too. And the school year was almost over. I thought I could just go off to college and leave it all behind.\" \n\n\"But you still feel guilty about it.\" \n\nAndy laughed and sat up straight. Marcus immediately felt the loss, but kept his hand on Andy's back. \n\n\"I'm Catholic. It's my job to feel guilty.\" Andy snorted, \"Literally.\" \n\nMarcus gave a wry smile at the joke. He took in Andy's red and blood shot eyes, tussled hair and slumped shoulders. Andy looked understandably exhausted. But also lighter somehow, like the heavy weight he'd been carrying around his whole life had been lifted. \n\nMarcus knew he was a goner. He had known he was wandering into dangerous territory tonight, and looking at Andy so vulnerable at the moment, Marcus knew he'd just gone straight off the edge of the cliff. \n\nThere was something special and precious about this man, Marcus could tell. It drew him in and made him want to know more. He wanted to know all the layers of Andy. And if it took him the rest of his life to peel back each layer, Marcus had a feeling he'd be more than happy to spend as many years as needed. \n\nOh yeah, he was a goner. He was so fucked. \n\n\"Thank you,\" Marcus' voice cracked and he swallowed thickly to clear his throat. \"For telling me.\" \n\nAndy looked at him with those big brown eyes, eyelashes still damp with tears. Marcus felt his heart squeeze at the tender look he found there. \n\n\"No, thank you,\" Andy said. \"I've never told anyone that before.\" \n\n\"Why did to tell me?\" \n\nAndy shrugged and a small smile appeared on his lips, drawing Marcus' gaze. \n\n\"You feel safe.\" \n\nOh god, he really had to stop that, stop doing things to worm his way further into Marcus' heart. Marcus clenched his jaw, fighting with the desire to pull Andy in and devour him. He didn't realize that his hand had tightened on Andy's waist. \n\nAndy dropped his eyes and placed a warm hand on Marcus' thigh. It wasn't anywhere near Marcus' cock, but that didn't stop the blood from starting to flow in that direction, it felt like Andy had placed his hand fully on Marcus' growing member. \n\nMarcus concentrated on his breathing, in and out, slowly through his nose. He knew what he wanted, he knew how he wanted this evening to end. But that wasn't fair to Andy, that would be taking advantage of his vulnerable state. At least that was what Marcus was telling himself. \n\nHis little brain was much more interested in the way Andy's hand was inching up his thigh. Marcus' breath hitched when Andy got a little too close for Marcus' self-control. Marcus put a hand over Andy's, stopping him. \n\n\"Andy,\" it came out strained. \n\nAndy looked up with those doe eyes, innocent, yet filled with the same desire Marcus felt. Andy swallowed and Marcus watched the Adam's apple bob, admiring the thickness of Andy's neck. \n\n\"I know I want this, I want you, that's pretty obvious.\" Marcus glanced down at his semi-hard cock, bulging in his jeans. \"But are you sure you want this? Because if we do this... I don't want you to regret it afterwards.\" \n\nMarcus could see the uncertainty in Andy's eyes as he wrestled with himself. It felt like forever before Andy came to a decision. He pulled his hand off of Marcus' thigh and Marcus immediately regretted giving Andy a way out. \n\nTo his surprise, Andy's hand came up to brush Marcus' hair off his forehead, tangling in the curls. \n\n\"I love the feel of your hair,\" Andy murmured, running his fingers through the strands, massaging Marcus' scalp. \n\n\"Andy,\" Marcus warned, voice strained with effort. \n\nAndy's hand dropped to caress Marcus' stubble covered cheek. \n\n\"I haven't been able to stop thinking about you since that first night,\" Andy confessed. \n\nMarcus brought his hand up to hold Andy's as he turned his face into Andy's palm. \n\n\"Please, Marcus,\" Andy whispered, eyes wide and uncertain, but desperately wanting something that Marcus knew he could give him. \"I... Please...\" \n\nMarcus groaned as his hard fought self-control slipped away. He leaned forward, reached behind Andy's head and captured his lips with his own. It was a hard bruising kiss, and after a split second's hesitation, Andy was kissing him back with the same ferocity. \n\nMarcus swiped his tongue against Andy's lips, demanding entrance. When Andy let him in, Marcus plunged in, wrestling with Andy's tongue, conquering. Andy whimpered and surrendered to Marcus' invasion, hands clinging to Marcus. \n\nMarcus needed more, he needed more from Andy and he wanted to give Andy more. More. That was the only thought that ran through Marcus' head. Every other thought about whether this was a good idea had fled as Marcus let the demands of his heart take control. If this was their only night, then it would be the best fucking night either of them had ever experienced, Marcus was going to make sure of that. \n\nSlowly, without breaking their kiss, Marcus pushed Andy back until he was lying on the couch with Marcus on top of him, hip to chest. Marcus savored the feeling of Andy underneath him, the way Andy was arching up into him, grinding their hard cocks together through their clothes. Marcus tilted his hips forward and pressed Andy back down, which won him another whimper from Andy. \n\nWhen Marcus finally pulled back, he was gratified that Andy tried to follow him. He smiled down at Andy's red and bruised lips, his dazed and unfocused eyes. \n\n\"God, you're beautiful,\" the words slipped out before Marcus realized he said them. He was rewarded with a deep flush on Andy's cheeks. \n\n\"I think you're beautiful,\" Andy said bashfully, making Marcus' heart skip a beat. \n\n\"Come on,\" Marcus said with a wry smile. \"Let's get off the couch.\" \n\nMarcus led Andy over to the bed and slowly began to undress him. His lips anointed every inch of skin that was revealed as Andy's shirt was unbuttoned, one button at a time. His tongue twirled through Andy's chest hair and teeth clamped lightly over each of Andy's nipples, eliciting a shudder from the man. \n\nAndy was breathing hard, hands buried in Marcus' hair. Heavy-lidded eyes gazed down at Marcus with naked wonder, the sight took Marcus' breath away as he looked up from his knees. No one had ever looked at him like that before, like he was something more than just a quick fuck, like he was offering something more than just an easy physical pleasure. \n\nMarcus' heart thudded in his chest as the gravity of the situation settled into his soul. Andy had trusted him with his past, had trusted him with his secret, and was trusting him with his body. What had Marcus ever done to deserve the honor? He wasn't sure he did deserve the honor. \n\nHe let his gaze wander across Andy's face and body, taking in this man who had snuck into Marcus' heart with his realizing it. He was different from the men Marcus usually took home. He wasn't one of the hard edged, New York tough, hopelessly vain men with chiseled bodies and made up faces. Andy was soft around the edges, innocent, full of heart, a beautiful soul hidden in the shy boy-next-door. \n\nThis was real. Marcus wasn't sure what that meant exactly, but that's what he felt. Andy was real. Everyone else he'd ever been with, ever been interested in, lived behind carefully constructed facades. But Andy was real, heart and soul bared in this moment, bravely revealing his body with its layer of padding and plain hair cut. \n\nMarcus wanted this forever, to be in this realness. He was tired of the games, the measuring looks, the endless vanity and the nameless fucks. He wanted to stretch this moment out for as long as he could, he wanted to be in this moment forever. His chest constricted with the intensity of his desire. \n\n\"Marcus?\" Andy cocked his head to the side with a questioning look. \"Is everything okay?\" \n\nMarcus smiled as he realized he'd been staring. \n\n\"Everything's perfect.\" \n\nMarcus moved his hands to Andy's belt and quickly undid his pants, pushing them down Andy's legs. He helped Andy step out of his pants, then did the same with Andy's briefs. No games tonight, no teasing, Marcus wasn't in the mood. Tonight would be sweet, honest love making, helping Andy experience the truth hidden in his soul. \n\nAndy's cock was hard and leaking already, standing up at attention. Marcus wrapped his fingers gently around the base and ran his palm upward until the head disappeared into his hand. Andy shuddered and tightened his grip in Marcus' hair. \n\nMarcus lapped at the head, licking up the pre-cum and savoring the salty taste. He wiggled his tongue over the sensitive underside of the head before taking the whole thing in his mouth and applying a light suction. \n\nHe inched his way down, loving the heaviness on his tongue, the way his jaw opened up to accommodate the girth. Andy was the perfect size; just thick enough to stretch Marcus' jaw but not enough to make it uncomfortable, just long enough to slip into Marcus' throat while letting Marcus bury his nose into the tangle of curly pubic hair. \n\nMarcus held himself there, the head of Andy's cock lodged in his throat, his nose tickled by Andy's pubic hair, his chin bumping up against Andy's low hanging balls. Marcus was stuffed full of Andy, surrounded by the smell, feel and heat of the man. He wanted to stay there forever, if only he didn't have to breathe. \n\nMarcus pulled back when the burning in his lungs was too much to ignore. He bobbed up and down a few times, tasting Andy's pre-cum as the head ran over Marcus' tongue. Marcus reached up and cupped Andy's balls in his hand, rolling them over each other and massaging gently. \n\n\"Mm... Marcus...\" Andy moaned, music to Marcus' ears. \n\nMarcus pulled off of Andy's cock and lifted it out of the way as he took each one of Andy's balls into his mouth. As he bathed each of the orbs, Marcus continued jacking off Andy's cock, running his hand up until the head was covered by his palm, and then back down in a twisting motion. \n\nMarcus listened as Andy's breathing quickened and his hands tightened on Marcus' shoulder. \n\n\"Marcus, please,\" Andy whimpered, his knees buckling under him as he struggled to stay standing. \n\nMarcus pulled back and guided Andy down to the bed. Once he was situated, Marcus took his time undressing himself, admiring the beautiful view. The pale creamy skin covered by dustings of hair across Andy's chest, on his forearms and down his legs. Marcus' own cock was sticking up straight and hard at the sight. \n\nWhen his gaze returned to Andy's face, he found that Andy had been giving him the same visual examination. The look on Andy's face was reverent, like he was admiring some great piece of art. It made Marcus pause, no one had ever looked at him like that before. It made Marcus wonder, maybe, just maybe, Andy could feel something for him, the same way he felt about Andy. \n\nAndy raised his arm, inviting Marcus to lie down next to him. Marcus scooted in close, slipping an arm under Andy's head. He entwining their legs together until their cocks were rubbing up against each other's stomach, their chests were pressed together and their faces so close it was hard to focus their eyes. \n\n\"You're so beautiful,\" Andy whispered between soft kisses. \n\n\"Too many hours at the gym,\" Marcus chuckled. \n\n\"I should get to the gym,\" Andy said with a sigh. \n\n\"No, you're perfect.\" \n\n\"I'm chubby,\" Andy snorted. \"I blame it on all those grannies that keep feeding me baked goods.\" \n\n\"If you want, you could come with me to the gym.\" \n\nAndy smiled sweetly and pressed in close for another kiss. His hips tilted, rubbing the length of his cock along Marcus', both leaking pre-cum and making their skin slick. \n\n\"Oh Doe eyes,\" Marcus groaned at the feeling of Andy's hardness against his own. \"The things you do to me.\" \n\nMarcus settled himself between Andy's thighs. Andy let out a moan of appreciation, raising his knees higher and wrapping his legs around Marcus' hips. \n\nMarcus started moving, rubbing his body against Andy's until they were both covered in a sheen of sweat, their stomachs sticky with pre-cum, and their cocks straining for release. Marcus kissed along Andy's jaw, licked at that delectable neck, sucking the delicate skin between his teeth until Andy was trembling under his hands. \n\nOn the next upward thrust, Andy bucked and Marcus lost his angle, his cock slipping down and stabbing against Andy's perineum. \n\n\"Ahh!\" Andy let out a cry at the change in sensation. Then he shifted his movements so that the head of Marcus' cock jabbed repeatedly at that sensitive area. \n\n\"Oh Doe eyes,\" Marcus murmured against Andy's skin. \"We'll get there, I promise.\" \n\nMarcus worked his way down, lapping at the chest hairs, loving the way Andy's body responded to him. When he got to Andy's cock, Marcus gave it a couple of innocent pecks, graced Andy's balls with a couple of swipes of his tongue, and then pushed Andy's thighs back until his winking pink rosebud was exposed. \n\nMarcus stared at it for a moment, admiring the quivering of the muscle as Marcus' breath tickled it. Andy was wriggling underneath him, shifting his hips to get Marcus to do something. So Marcus blew a stream of air directly on Andy's hole, watching the muscle twitch under the sensation. \n\n\"Marcus,\" Andy's voice sounded strained, his hands gripping the sheets tightly. \n\n\"Shh, Doe eyes,\" Marcus placed gentle kisses along Andy's thighs. \"Don't worry, I'll take care of you.\" \n\nMarcus kissed along one thigh and then the other, running his cheek along the muscles flexing and shifting under his hands. Andy was breathing hard and making these desperate whimpering sounds that drove Marcus crazy. He glanced up to see Andy's eyes squeezed tightly shut, head thrown back, teeth biting at that full bottom lip. It was beautiful and it made Marcus' cock twitch knowing that he was the cause. \n\nMarcus leaned down again, tongue out to lap gently at Andy's rosebud. \n\nAndy's entire body tensed as he shot up from the bed, eyes wide open now, looking down at Marcus. \n\n\"Easy, Doe eyes,\" Marcus said, pushing Andy back down and guiding his legs back up. \n\nThis time when Marcus started tracing the tight muscle, Andy just moaned and pushed his ass up to give Marcus better access. The movement was all the encouragement Marcus needed as he dove in, licking, teasing, prodding at the entrance to Andy's body. The taste of Andy was intoxicating. It was clean and woodsy on his tongue, filling his senses. Marcus couldn't get enough. \n\nMarcus alternated between rubbing his stubble covered chin against the sensitive skin and soothing it with the flat of his tongue. He pushed and prodded against the muscle until it started to relax under his ministrations. Eventually, he managed to get his tongue inside and the flavor of Andy exploded on Marcus tongue. The intensity struck something inside of Marcus, driving him with a desperate need. He shoved his tongue in as far as he could go, twirling it around to get a much of that taste as he could. \n\nAndy was writhing underneath him, barely able to hold still under Marcus' attack on his ass. He was making incoherent noises that only drove Marcus even further. Marcus drove his tongue in and out of Andy's ass, his entire focus on getting more of that addicting flavor of Andy. He could have happily spent the entire night there, feasting on Andy's ass. \n\n\"Marcus, please,\" Andy cried, his hand burying into Marcus' hair and pulling. \n\nAfter a few more thrusts, Marcus finally backed off, giving Andy some reprieve. He leaned back and admired his handiwork. Andy's ass was pink and loose, the skin lying in intricate folds around the opening. Beautiful. \n\nMarcus looked up to see Andy breathing hard, heavy lidded eyes unfocused, entire body listless on the bed. This was a sight Marcus wanted to see everyday. He ran a hand along Andy's body, gratified at the sigh he got out of Andy in return.  \n\nMoving quickly, Marcus reached over to his nightstand to grab some supplies from the drawer. He squeezed a good amount of lube onto his hand and warmed it up on his fingers before drawing light circles on Andy's already slick ass. \n\nAndy gasped and his ass clenched at the feeling of Marcus fingers. \n\n\"Easy, doe eyes. Relax, I've gotta open you up.\" \n\nAndy swallowed thickly, eyes locked on Marcus. Slowly, Marcus began pushing in one finger. The muscle immediately tensed around the invasion. \n\n\"Relax, push out like you're going to the bathroom.\" \n\nAndy frowned with a skeptical look. \n\n\"Trust me,\" Marcus said with a wry smile. \"It works.\" \n\nSure enough, Andy's tight grip on Marcus' finger relaxed and Marcus slowly pushed his finger in, past the first knuckle and then past the second. Marcus pulled his finger out then pushed it back in, following a twisting motion until he could move his finger without resistance. \n\n\"Oh Marcus,\" Andy breathed. \"Oh Marcus.\" His eyes were open but unfocused, staring off into space. \n\nMarcus leaned up and captured Andy's red and swollen lips with his own. Andy moaned into the kiss, his tongue darting out to meet Marcus'. They battled as Marcus continued to fuck Andy's ass with his finger. When Andy started bucking up into Marcus, he added second finger, slowly until he felt Andy's tight ring opening to the intrusion. \n\nThen Marcus was fucking Andy's mouth with his tongue while fucking Andy's ass with his fingers. Andy was clutching at Marcus, running his hands up and down Marcus back as if he couldn't get enough of him. He was moaning into Marcus' mouth and thrusting his hips up to meet Marcus' hand. ",
        "This was a different Andy from the shy priest that Marcus had come to know. This Andy was abandoning himself to the moment, lost in the sensations Marcus was wreaking on his body. It was like something had been unleashed inside Andy and Marcus loved it. \n\nMarcus pressed his fingers deeper, searching for that special spot that would make Andy's world explode. When his finger ran over it, Andy gasped and tensed under Marcus hand. Andy's eyes were wide with shock, mouth open but no sound came out. \n\n\"Breathe, breathe for me, doe eyes.\" \n\nAndy drew in a ragged breath and let it out in a cry as Marcus tapped at his prostate again. \n\n\"You like that, don't you?\" Marcus asked with a grin. \n\nAndy's only answer was a strangled cry. Marcus gazed down at a dazed Andy, and marveled again at the beauty of this man, so innocent even in the throes of passion. Marcus kissed his way back down Andy's chest and lapped at the pool of pre-cum Andy had leak onto his stomach. \n\nMarcus took Andy's cock into his mouth, sucking lightly on the head to taste more of that pre-cum. He scissored his fingers back and forth in Andy's ass, eliciting more moans from Andy and more writhing. Marcus started adding a third finger, twisting his hand around to work it in gently. He kept bobbing up and down Andy's cock, in time with the thrusting of his fingers, letting the head slip back into his throat on each down stroke. \n\nMarcus rubbed against Andy's prostrate again, this time with all three fingers in a circular motion, and was rewarded with a dollop of pre-cum right on his tongue. He kept this up, wanting more of that salty liquid. \n\n\"Marcus, oh Marcus,\" Andy's voice had that urgent sound that told Marcus he was close. He pulled off of Andy's cock and slowly extracted his fingers. Marcus was being selfish, he knew. He wanted Andy to come while he was buried deep in his ass. He wanted to feel Andy's body convulsing around his own cock. If tonight was the only night they had, then he was going to take anything and everything he could get. \n\nMarcus grabbed the condom next to him and quickly rolled it on, adding another generous helping of lube to his sheathed cock. He settled himself between Andy's thighs again, rubbing the head of his cock back and forth across Andy's hole, feeling the teasing heat of Andy's body. \n\n\"Doe eyes,\" Marcus said as he supported himself above Andy. \"Doe eyes, look at me.\" \n\nIt took Andy a couple of moments, but after a few blinks, he was back. Marcus looked into the depth of those warm brown eyes. He saw wonder, excitement, a little bit of fear, but above all else, trust. It was a trust that made Marcus' heart seize. He had to believe that this was more than just a convenient fuck, no one looked like that during a convenient fuck. \n\nSlowly, Marcus pushed against the tight hole, applying consistent pressure. \n\n\"Push out, babe,\" Marcus reminded Andy. \n\nAndy took a deep breath, pushed and the head of Marcus' cock popped right in. It was like a furnace and his dick was on fire. The fit was so tight that Marcus thought for a second that he might just lose the tip of his cock into Andy's ass. Marcus breathed fought the urge to bury himself deep into Andy in one hard stoke, he fought the urge to empty himself deep inside Andy's body. \n\nAndy was wide eyed, holding completely still with short shallow breaths. \n\nMarcus reached down to check Andy's erection and was slightly surprised to find it completely hard and still leaking pre-cum. \n\n\"How're you doing?\" Marcus asked. \"This okay?\" \n\nAndy nodded, biting is lip while tears gathered in his eyes. \n\n\"Whoa, doe eyes. What's wrong? Is it too much? We can stop.\" Marcus moved to extract himself from Andy when Andy suddenly wrapped his legs around Marcus' waist, pulling him a couple of inches deeper. \n\n\"No, don't stop. I'm fine. It's just... So good.\" Andy whispered. \n\n\"Yeah? It doesn't hurt or anything?\" \n\n\"It bit, but a good kind of hurt. I don't know how to explain it.\" \n\n\"That's okay, I get it.\" \n\nMarcus was bracing himself on his elbows, chest pressed low over Andy's chest. He leaned down again for a kiss, a sweet, gentle kiss with lips caressing and tongues teasing. Marcus kissed along Andy's jaw, on his nose, over each eyelid as a couple of tears escaped. \n\nWhen Andy tilted his hips again, Marcus pressed forward, gentle but firm until he was fully seated inside Andy, pelvis against butt cheeks. Marcus dropped his head forward until it was nuzzled into the crook of Andy's neck, then he eased himself down, letting Andy take some of his body weight. \n\nThey were one, Marcus with his knees bent underneath Andy's ass, cradling Andy's body into his lap. Andy had his legs wrapped tightly around Marcus' waist. They were connected, stomach to chest with Andy's rock hard cock trapped in between. Marcus could feel it pulsing against his stomach, the wetness from Andy's pre-cum leaking between their bodies. \n\nThis was it, this was what Marcus had been looking for his whole life, to hold this man in his arms, connected to him on a base level, the deepest you could connect with another human being. The knowledge that he'd found the most precious person in the world sent shivers through Marcus' body and he began to tremble. \n\n\"Are you okay?\" Andy asked. \n\nMarcus chuckled and lifted this head to look at Andy. His doe eyes were a little unfocused with the desire coursing through him, but Marcus could clearly see the concern. \n\n\"I'm good,\" Marcus answered. \"Too good.\" \n\nAndy grinned and gave Marcus a kiss, another sweet kiss that quickly grew into something more as Andy twisted his hips and clenched experimentally around Marcus' cock. \n\nMarcus tongue dove into Andy's mouth, claiming it as his hips buried itself deeper into Andy body. Short, but deep strokes, Marcus started up a rhythm, unwilling to pull too far out of Andy's scorching hot channel. \n\nAndy moaned into their kiss and quickly caught onto Marcus' rhythm. He was meeting Marcus on each stroke, writhing his body up against Marcus. With both of them moving, each thrust became longer, harder with Marcus pulling out half way and driving himself back in. He kept shifting angles, looking for that magic one that would make Andy come apart in his arms. \n\nWhen he found it, he wasn't disappointed. Andy cried out, head thrown back, body arching up to help Marcus hit that spot again and again. \n\n\"Harder, Marcus, please,\" Andy cried. \n\nMarcus was more than happy to comply. He drew himself back and then snapped his hips forward as hard as he could, so hard that Andy moved a few inches on the bed. He repeated this again and again until Andy's body was trembling, his fingers in an iron grip around Marcus' arms, incoherent sounds escaping his throat. \n\nAndy was close, Marcus could tell, but he didn't want this over too soon. So he reached between their bodies and formed a firm ring with his fingers around the base of Andy's cock. Cutting off Andy's impending orgasm even as Marcus' cock continued to drive at his prostate. \n\n\"Ahh... Marcus,\" Andy begged. \n\n\"We'll get there, doe eyes. Come here, sit up.\" \n\nMarcus wrapped his arms around Andy's back and helped him sit upright into Marcus lap. Marcus was still on his knees, but in this position, with his legs still wrapped around Marcus, Andy's full weight was centered on his ass where it was impaled on Marcus' cock. \n\nAndy sucked in gasping breaths at the change in position. Marcus held him close and thrust up into Andy, hitting his prostate, eliciting full body shudders with every stroke. Andy had no leverage like this and was at mercy of Marcus' cock, driving up into him, grinding against his ass. Andy was trembling and he draped himself over Marcus' body, face buried into Marcus' neck, leaving himself open and vulnerable to whatever Marcus wanted to do to him. \n\nThe trust was overwhelming and Marcus drove deep. He bit lightly on the shoulder by his mouth, then soothed the bite with laps of his tongue. Marcus felt a moan deep in Andy's chest as he held them closer. \n\nMarcus thrust up into Andy, savoring the tightness around his cock, the way Andy's channel clenched when he tried to pull out, as if he was trying to keep Marcus inside as long as possible. How Andy had so much control over his ass muscles, Marcus couldn't figure out. But he wasn't complaining. If this was how Andy was as a virgin, Marcus wasn't sure he could handle a fully sexually experienced Andy. It might just kill him. And he would die happy. \n\n\"Oh doe eyes, you're amazing,\" Marcus said between kisses and licks up and down Andy's neck. \n\nAndy whimpered in response and clenched down on Marcus again, causing Marcus to sink deeper into him. \n\n\"Marcus, come inside me, I want you to come inside me.\" \n\nThe gentle pleading caused something to snap inside Marcus. It felt like his heart had wrenched open and a flood of some overwhelming emotion threatened to consume him. He laid Andy back down on the bed and picked up his rhythm, pounding Andy into the bed. \n\nAndy didn't complain about the roughness, just tilted his body and absorbed each and every blow of Marcus' cock into his ass. The sound of skin hitting skin mingled with their heavy breathing. It filled Marcus' ears and mixed with the heady scent of sweaty sex. \n\nMarcus was so close, but he didn't want to come before Andy. He reached between their bodies and took Andy's straining cock in his hand. He gave it a couple of swift tugs, twisting around the head as his own cock jabbed at Andy's prostate. \n\nAndy was thrashing underneath Marcus now, his body bucking up wildly, making it difficult for Marcus to continue his assault. Then with a cry, Andy's body arched half off the bed and he came, spewing ropes of hot cum all over his stomach and Marcus' hand. The sight was beautiful, and almost more arousing then the way Andy's channel contracted around Marcus' cock through his orgasm. \n\nMarcus couldn't hold it in any longer. He gave a couple more erratic thrusts into Andy's hole then plunged himself as deep as he could go. Marcus buried his face into the crook of Andy's neck, breathing in deep the scent of the man, and came hard, emptying himself into the condom. He came so much, the orgasm so intense and long that he was afraid of leaking out of the condom. But he couldn't move now even if his life depended on it. \n\nMarcus collapsed on top of Andy, unable to even roll off to the side. To his joy, Andy wrapped his arms around his back and held Marcus to him. Marcus' breathing gradually slowed, each breath imprinting this moment onto his heart. No matter what the future held, he had this moment and he would cherish it forever. \n\nWhen he felt enough strength come back into his arms, he push away, smiling when Andy tried to hold him in place. \n\n\"It's okay, doe eyes, I'll be right back.\" Marcus carefully extracted himself from Andy, making sure nothing leaked out of the condom before disposing of it. \"I'll be right back, babe. I'm not going anywhere.\" \n\nDespite Andy's whimpered protest, Marcus quickly made his way to the bathroom to grab a damp towel. He snuck a quick glance in the mirror. He looked the same he always did after good sex, sweaty and disheveled, but there was something different this time. His eyes, maybe, they looked lighter for some reason, not as tired as they normally did. The thought was disconcerting, but Marcus shook it off and went back to bed, towel in hand. \n\nAndy was curled up on his side, eyes closed like he was sleeping. Marcus took a moment to stare at the beautiful man who had shared something so precious with him. Marcus suddenly found it difficult to breathe. He forced a deep breath into his lungs, fighting to hold it together. \n\nAs he sat down on the bed, Andy stretched and reached for him. The smile on Andy's face warmed Marcus' heart, making it tumble over a few times. \n\n\"Here, let me clean you up,\" Marcus said, gently wiping down Andy's chest. Andy laid back and sighed, letting Marcus tend to him. Then Marcus moved lower and lifted Andy's legs to clean up his hole. Andy moaned at the coolness of the towel against his ass. \n\n\"You okay?\" Marcus asked. \n\n\"Mmhmm...\" Andy replied, too spent for words. \n\nWhen Marcus crawled back up, Andy turned and snuggled in close. Marcus pulled him in, letting Andy rest his head on his shoulder. \n\n\"Thank you,\" Andy murmured. \n\n\"No, thank you,\" Marcus replied as his heart tumbled again. \n\nAndy's breathing slowed as he drifted off to sleep in Marcus' arms. Marcus, though, was wide awake, very much aware of how much trouble he was in. His heart thudded in his chest, warmed by the presence of this man in his arms. He'd only known Andy for such a short time, it didn't seem possible for Andy to have planted himself so deep in Marcus' heart. And yet, that's exactly what had happened. And if Marcus was honest, he knew that there could be no good outcomes to this. Unless some miracle happened, he was pretty damn sure he was going to get his heart broken. But there was nothing he could do about it, he was too far gone. \n\n\"Andy?\" Marcus whispered. Andy didn't respond, just his deep steady breathing. Marcus placed a gentle kiss to top of Andy's head and held him tight. \"I think I love you.\""
    ],
    "authorname": "hudsbart",
    "tags": [
        "gay sex",
        "romance",
        "faith",
        "first time",
        "anal sex",
        "christian",
        "oral sex",
        "rimming"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/stepping-out-in-faith-ch-02"
}