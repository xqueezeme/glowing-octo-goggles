{
    "title": "Hampton Heights",
    "pages": [
        "***To the haters...Fuck you, dont read my stories.. If you dont like my writing...dont read it and dont complain....its free. You want better...PAY ME.***\n\nTo my fans...I have more to this story if it is good\n\nI moved into Hampton Heights when I got my first big payday. I decided to work with my father at his construction company and then after a fight, I was on my own with my own customers. Things were tough for a few years but I stuck it out. I like to think of it as paying my dues. Working sixteen-hour days, nobody ever said that I was taking the easy road and I wanted a nice place to show that I had achieved something.\n\nHampton Heights was an exclusive neighborhood that consisted of townhouses in the ultra-tight knit part of the county. I was thirty and living by myself and enjoyed the peace and quiet of the gated community. The parties were always big and everyone that lived there was making enough money that they did not worry about money. The only issue with the community is that everyone was a snob.\n\nOwning my own business afforded me the opportunity to do and say what I want and even thought I wanted to keep the peace; I still didn't give a shit about what I said. I kept my mouth shut in the neighborhood though, not because I choose to but because I was just not around enough of the people that they heard what I had to say.\n\nWith my business taking off I decided to lay back for a time and enjoy life. I had girl friends to occupy my time, but I never really found one that I wanted to live with or stay around for more than a month. I was not using them just for sex but would tell them I am not looking for a relationship. I still recall telling my last girlfriend Tiffany that I did not want to be her boyfriend and that I was not the guy she wanted to stay with.\n\nThe parties at Hampton Heights were all done by the guys who wanted to watch football on Saturday and drink beer with no nagging wives around. Since I was the only bachelor that watched college football, my place became the Mecca of Saturday beer and football. This did not end with football and every Saturday my place became the social hub of the neighborhood even when there were no games to watch.\n\nNow the wives would stop by and check up on their husbands, but we never had any bad stuff other than rude talk and beer. I still heard the girls talk about me being a male pig with a constant string of girlfriends and I even had Johns' wife offer me sex thinking I was some sort of sex object.\n\nNow I kept my body in shape since I was in construction and by the time I stepped back at thirty, I had my nice six pack abs and arm muscles that went with it. I know some of the girls talked about me and what I looked like nude, but I had a thing about cheating and would never cross the line with my friend's wife.\n\nRick moved into Hampton Heights and instantly became the talk of the neighborhood. He was about my age with a slender build, but there was no denying his homosexuality when he was in the room. His voice had a flair to it and his movements were feminine. He was not flaming as some would say, but he was not hiding it either.\n\nThe neighborhood was in an uproar about a \"homo\" moving in as some of the girls said. The ultra-wealthy area were also very conservative when it came to sexuality. They were very religious and to most of them, Rick was the devil. The housing complex had a committee and the right to decline anyone that applied to live there. The lawyers were quite good about making the rules and they could deny anyone with no reason given for why they were being denied.\n\nTo me, I didn't give a shit and found that the main person behind it was Samantha Graves. Her husband was a tool and never hung out with the rest of the guys anyway. She was a bitch and most people hated her for a multitude of reasons. I decided to tell the guys that it would piss her off if we all said yes to Rick moving in just to take a shot at Samantha and her husband.\n\nThe guys instantly agreed and even said they had no real issue with Rick anyway. We all decided to tell Samantha we would vote with her and then vote against her when it was brought to the real vote. It was a big formal meeting and I saw the look in Rick's eyes that he knew he was not going to move in. He had no lawyer and even if he did the housing committee was a private entity with no recourse for people to sue.\n\nSamantha gave her speech about morals and how some people will not fit into the fabric of Hampton Heights. We all nodded and looking like willing subjects to her. I saw her cocky smile and knew it was going to be the biggest shock to her that we were not going to vote against it. I then later found out that even the ultra-religious people didn't really give a shit about Rick being gay and were more worried that Samantha would use her influence in church to oust people from certain positions. I laughed when I found out later that it was only Samantha that did not want Rick and even the pastor cast his vote for him in without him being knowing about our secret meeting.\n\nThe vote was read and I just saw smiled around the room. I saw Rick was utterly speechless and everyone seemed genuine about welcoming him into the community. The wind was ripped from Samantha's sails and I knew she was going to try and get even. I could not be happier that the good prevailed and even offered an invite to Rick to watch Saturday football with us.\n\nAfter the football season it was the basketball tournament. After basketball it was baseball or just hanging out. Rick fit in with the guys like a glove. He was our gay friend that offered fashion and girl advice. He was still very openly gay but he never flaunted his gay pride or made it seem that we had to change. We never made it seem that he had to change either.\n\nRick was a stock broker and had a few boyfriends here and there but nothing very permanent. He brought only a few of them around us and they just didn't seem to fit in. It was not us that rocked the boat either as he said it and once, he even dumped a guy for talking trash about us.\n\nI knew Rick loved that we stuck up for him and we even told him that if Samantha had her way after the fact that we would all move out in protest with him. I knew a few times he almost broke down in tears as he said that we were like an extended family to him and he wasn't our gay friend, but just our friend.\n\n***\n\nI lifted up the case of beer moving it inside as everyone had left except of Rick who was helping me clean up. With a grimace of pain, I moaned out. \"Fucckkk!\"\n\n\"You hurt your back?\" Rick asked.\n\n\"Yea. Fuck...I hate when it goes out.\" I replied knowing that one of the reasons for my half retirement was my back giving out.\n\n\"Lay down. Let me get you some ice.\" Rick replied as he walked over to the cooler with a hand towel to collect ice.\n\nI laid down on the couch feeling the throbbing pain in my back. I knew sometimes it could take a week for it to fix and then it could go out again at any time. I just looked at him defeated knowing that my week was going to be spent resting.\n\n\"Here, just relax and take it easy. I have some muscle relaxers you can take too.\" He said as he put the cold towel to my back.\n\n\"It might help. I just don't take pain meds though. I will take muscle relaxers but nothing else.\"\n\nHe nodded his head and walked quickly out. I just laid there pissed off that my back had given out again and that I would most likely be out of work for a week because of it. It was not missing work that pissed me off but the not doing anything that bothered me.\n\nRick was back quickly and fed me some pills. \"Here take this and relax. You need help getting into bed?\"\n\n\"Yea. I am going to need help getting to my bed.\" I said knowing that I was dead on my feet for at least a day.\n\nI carefully stood up cursing in pain as he put his head under my arm helping me to my bedroom. As we got there I carefully kicked off my shoes. Rick then looked at me. \"After you are better, we need to talk about your decorating. But first let me help you.\"\n\n\"Just need to get changed and go to bed.\" I said feeling the stinging pain of my back hitting my like a bunch of lightning bolts shooting to my spine.\n\nHe pulled up my shirt and then looked at me. \"I am going to take your pants off.\"\n\n\"Okay...I just need to get in bed.\" I replied not even caring that a gay man was pulling down my pants. The only thing I was concerned about was that my back was killing me and I wanted to lay down.\n\nI was in my boxers and he guided me to my bed. I cringed in pain as I got into position. I then looked at him nodding that I was set and he smiled back. \"I am going to leave, but will check up on you tomorrow.\"\n\n\"Thank you. But you don't have too.\" I answered as I didn't think I needed help if I got some sleep in.\n\n\"Yeah, whatever. I will be here tomorrow to check up on you.\" Rick shot back smiling as I knew he really would come back.\n\nI woke up feeling much better. I was able to stand with just some slight discomfort and even walk around with little to no pain. Rick walked in around nine and gave me a look of disappointment. \"You need to be off your feet.\"\n\n\"Nahhh. I am doing much better today. I am just going to take it easy for a day or two.\"\n\nRick still looked at him like I was a child. \"You're an ass. You are really going to hurt yourself. Have you made an appointment with your doctor?\"\n\n\"Doctor...nooo. They will just give me pain meds that I won't take. It's just a nagging injury I am going to have to live with. Although those muscles relaxers did wonders. Now I know to hit you up when my back goes out again.\"\n\n\"What about a chiropractor?\"\n\nI gave him a stoic manly look as I knew I would never go to one nor admit that I needed help. \"I don't believe in that shit. I will be fine. I just need to take it easy.\"\n\nHis voice hit a high pitch. \"Nooo. You need to go to a chiropractor at least.\"\n\n\"Don't worry about me. I will be fine.\"\n\n\"What about a masseuse? Will you at least go to one of them?\" His voice sounded concerned.\n\n\"Some hot Asian massage parlor with happy endings?\" I joked as I sat down smiling at him.\n\n\"Your impossible. I know a good place that you can go to.\" He added as I could hear his concern in his voice.\n\n\"I am not into massages unless it's some hot Asian girl. I just don't see a need to waste money on doctors either when it goes away with simple rest.\"\n\n\"What about some simple lotion or some cream?\"\n\n\"Fine. If you want to leave lotion here, I will put it on.\" I conceded knowing he meant well and was just trying to help.\n\n\"I ain't leaving lotion with you. You will not put it on and will just say you did.\"\n\n\"You want to put it on to make sure? I promise you I will put it on.\"\n\nI could see the look in his face that he knew I was trying to pull one over on him. \"I will put it on you. I don't trust you at all.\"\n\n\"Fine. Get your lotions and what not and you can put it on me.\" I gave in and knew that it was the only way he would stop nagging me.\n\nWhen he walked out the door, I stripped off my shirt and laid face down on the couch. His place was close and he was back within a few minutes. \"I see your already prepared.\"\n\n\"Put your magical lotions on me so you can be happy.\" I said jokingly.\n\n\"This stuff stains, you might want to take off those pants.\"\n\nI pulled down my dockers so I was just in my boxers. I didn't think it was that big of a deal as it felt like a medical thing and nothing else.\n\nI felt the cold lotion hit my back and then his hands working my lower back. \"Ohhhhh....damm.\" I moaned giving in and letting him know that it really did feel good.\n\n\"I told you it would feel better. You need to listen to people more. I swear if Robert listened to me more, I would not have dumped him.\"\n\n\"Is he the one you wouldn't bring around us?\" I asked, knowing his last boyfriend was kind of a mystery and we never got a chance to meet him.\n\n\"Yea. But I left him for other reasons.\"\n\n\"Mmmmm....feels good. I may have you do this more. So tell me the reasons.\" I asked giving into the pleasure and feeling the lotion tingle on my skin. I looked over slightly and saw that it was icy hot and it was doing its job tenfold.\n\n\"You wouldn't want to know. It's kinda a gay thing.\" Rick answered with a softer tone.\n\nMy voice picked up as did my curiosity. \"Tell me. I got to hear what the gay thing is now.\"\n\n\"Okay, but don't say that is gross or think differently of me.\"\n\n\"I won't. I already figure it has something to do with butt sex.\" I joked as I knew he did divulge information if asked but only if someone asked.\n\n\"Well, he was cute and all, but not very clean. Let's just say when you have anal sex you need to clean beforehand. He was lazy about it and he was lazy about life in general.\"\n\nI never realized that you needed to prepare for anal as I never gave it thought before. Although I did hate lazy people and only hired go-getters who hustled. I then leaned forward stretching my back. \"I am not one for lazy people. I busted my ass to get where I am.\"\n\nRick continued to put more lotion on and then stopped. \"Let it set in and then cool off before you put your shirt on. I did want to ask you...why you live here of all places. I mean you could have a giant mansion built and live there. I know you have money and all. That car and truck of yours costs a pretty penny.\"\n\nIt was the same question I heard from my other family members and almost all of my ex-girlfriends. \"I own this townhouse outright and enjoy not having to worry about yardwork or anything else. When I take a vacation or do anything else, I never worry about someone stealing my shit either. I guess it's the people I live near too. I mean if I do settle down, I can rent this out and buy a house.\"\n\nI leaned forward and lifted up and when I did, I felt my boxers pull down showing a bit of my backside to him. It was a slight feeling of the top of my ass showing but nothing else as I finally stood up. I then gave Rick a joking look as I saw him looking at me. \"You looked, didn't you?\"\n\nI knew I was joking and hoped he did too. When he smiled back, I felt at ease that I could joke with him too. He just shot back a look and then replied. \"I can't help it. You do have a cute ass. I bet the girls said that too, and you know it too. I saw you strutting your chest around a few times making sure the girls look.\"\n\n\"So you think my ass is cute?\" I joked again smiling know that he admitted it. I wasn't bothered and didn't want to admit it was kind of flattering.\n\n\"Stop.\" He said with his hand up smiling back at me.\n\n\"Better ass then Rob?\" I joked back walking slowly to the fridge wanting something to drink.\n\n\"I don't know. He did have a cute ass and would give it up all the times when I wanted it.\" Rick said with a smiley tone as I knew he was getting even with me for joking with him.\n\n\"Does it feel good? I mean, compared to pussy?\" I asked wondering if gay guys liked it more than pussy or if they had pussy but chose ass instead. I knew I was ignorant but I was willing to ask. I never had a gay friend before and felt comfortable asking and not being seen as arrogant to him.\n\n\"You really want to know?\" Rick asked as I heard his tone sound more serious.\n\n\"Sure. I mean I thought about fucking a few girls in the ass. Becky in High School almost let me too.\"\n\n\"Well...let just say nature is cruel. You know if your prostate gets touched it will make you orgasm. Not just any orgasm but a great one. It also feels good to have anal sex too as it is much tighter and if done right will feel absolutely amazing. But, sex is not just physical for me. I mean, I love being around the guy and having that connection with him.\"\n\nI smiled and sat down carefully thinking about what he said and knew he was right about connecting with the person. I was told that numerous times that I needed to connect with the right girl and sex would be amazing.\n\nAs I opened my soda I watched Rick get up and sit across from me at the table. \"Some straight guys pleasure that prostate too. I know a few that use toys on themselves and more that have their wife's use it.\"\n\n\"Whoooaaaa. Too much. I am not shoving some big dildo up my ass. I am all for have a great orgasm but toys in the ass...really?\" I replied just thinking about Rick coming over with a dildo to use on my ass.\n\n\"You are such an ass. Have a girl use her fingers and then come back to me saying you didn't't enjoy it. You don't even have to touch your thing either...it will just cum naturally.\" Rick shot back with a smug smile as if he knew he had won.\n\n\"So, wait. You're telling me that I will cum from her fingers and not from the fact she is sucking my cock or touching me? Just her fingers, nothing else?\" I inquired wondering if he was right but also asking for clarification. I knew some girls did it and was not trying to sound like a self-righteous guy but a curious one as it involved a girl giving me a blowjob too.\n\nRick leaned back with a big grin. \"It adds to it. If she is skilled and knows what she is doing she can make you cum from just her fingers and without even touching your dick.\"\n\nI was not about to let some girl shove her fingers up my ass and not give me a blowjob. I also knew it would sound gay as fuck if I just asked a girl to go exploring in my ass so I could get off. I knew he was probably right and my limited knowledge was still in the thought of the guy fucking the ass was always getting the pleasure.\n\n\"So, you're telling me...\"\n\nRick gave a small chuckle and interrupted me. \"You have been living in this area too long and have been sheltered. Let me just say that if you rub the prostate just right you will hit a climax that will make you want to do it again and again. I swear...there is so much porn about it. Then again, I doubt you would, it's not really straight porn.\"\n\n\"So, you're going to give me toys to make this happen?\" I joked wondering if he really would.\n\n\"I could but you're going to have to find just the right spot to hit and experiment. I would keep an open mind though. Don't be saying that it's gay, but just give into that it feels good.\"\n\n\"I think you're lying. No offense, but I think it feels good if you gay. I do think sexual preference has something to do with it.\" I added as there was no way that I could just ejaculate to an orgasm with something in my ass and not have a girl involved. I know that I could probably ooze. out sperm, but no way would I get a climax from it.\n\nRick shrugged his shoulders and then smiled. \"I bet I could give you a toy for you to use and then you would admit it.\"\n\n\"Not a chance.\"\n\n\"I would wear Alabama colors for a week if I was lying to you or you didn't like it.\" Rick challenged with a smug smirk on his face.\n\n\"No fucking way. First, I ain't shoving anything in my ass and no way would you go through with it.\" I said knowing full well that he hated Alabama with every fiber of his being. In the time he spent with us he developed this hatred for Alabama.\n\n\"All week I would wear it. That's how confident I am. But if you lose...I want something in return.\" He replied, still holding that smug look and crossing his arms.\n\n\"Fine, I can do some work at your place. I know you wanted some remodeling... I just want to see Steven's face when you are wearing it though. But there is no way I am telling people about this bet.\" I commented knowing that this had to be a secret.\n\n\"Okay. I will just tell them it was a guy at work that bet me. I would never tell a soul about this. This is a private personal dare between us.\"\n\n\"Okay...okay. Let's do this then. Go get you toy and we can settle this right now.\"\n\nI was not totally against sexual experimentation and figured I could try it and then know I hated it and never think about it again. I also trusted Rick in keeping his mouth shut as he never once gossiped to the guys. I also knew he was the most fashion sensitive person I ever met and him going against that was worth me taking a toy in my ass.",
        "Rick left quickly as I played on the couch trying to get my back right. It was sore but not painful as it was. I figured I had about terminated before he came back too. I pushed away the negative thoughts about something going in my butt with the idea Rick was going to be mortified about wearing something he hated.\n\nWalking in the door I saw Rick carrying a small black leather bag. He smiled as he put it on the kitchen table. \"Okay. First, I need you to shower and clean yourself. Then use the lube and then we can do this.\"\n\n\"We?\" I asked, suddenly realizing that he was going to be involved in the toy being inserted in my ass.\n\n\"Ohhh yes. There is no way I am going to be strutting around in those hideous clothes without proper confirmation you tried it and did it correctly.\" He added standing firm and his tone sounding the same.\n\n\"Fine.\" I conceded, still hoping to get what I wanted out of this bet. I knew it was weird and more than I bargained for but I couldn't give up now.\n\nI got up and saw the cleaning tool and went into the show to give Rick a smile as I left to shower. I was not about to let him win no matter what. I knew I wasn't giving up anything but still felt that I had to go through with it. What was the damage if I did? I asked myself as nobody would ever find out.\n\nI was out of the shower all cleaned. I never did that before and it was strange but necessary. I knew I had to do this now as I had come this far. I saw Rick waiting for me as I stepped out with just a towel around my waist.\n\n\"In the bedroom. Let me get a towel too. I don't want you so cum on your sheets.\"\n\n\"Confident, are we?\" I asked as I could hear it in his one that he knew he was right.\n\n\"I am. I also want a new walk-in closet if I am right.\"\n\n\"Okay. Fine. I can do that, but I am going to win.\" I replied knowing I had to win this bet, even though I knew I was probably going to help him with his closet anyway.\n\n\"Let's get you on your knees and then we can start.\"\n\n\"On my knees like I am being fucked.\" I asked wondering how gay this was getting and if there was another way.\n\n\"Doesn't matter to me. On your back works fine but that means you will be fully exposed. This way I won't really see anything.\"\n\n\"I don't care. You aren't going to do anything are you? I mean, you're not going to grab me or something?\" I asked knowing that he was going to see my package no matter what.\n\n\"Oh, stop. I am not going to touch anything that you don't want touched.\" Rick joked back.\n\n\"Let's do this then.\" I said as I laid on my back. My soft penis flopping to the side exposed to another man in a sexual way.\n\n\"Mmmm, it is a very nice dick. I won't touch it. I swear, but I will make it cum. Now it might get hard or it might stay soft when I use the toy. Everyone is different.\"\n\nI nodded my head as I watched him take out the curved toy and a bottle of Astroglide. The toy was a black plastic curved thing with a small bulge at the top. It was not overly thick and the tip had a ball shape to it.\n\n\"This is going to be cold and I am going to use my fingers to get you lubed. Don't freak out with me touching you.\"\n\nI couldn't believe I was doing this and I felt like I needed to stop. I had gone so far and now I felt like I was doing some strange gay induction ritual now. I thought about saying no and having him leave but a part of me knew it would kill the friendship in some way. I didn't want to hurt his feelings and felt like I had to finish this even though I was not wanting it now.\n\nThe sensation of his fingers on my anal opening was beyond strange. He was using two cold fingers to circle my anal entrance with entering me. I then felt a finger slide in me. It just slipped in using the lube as a way to just glide in. It felt different and yet weird having something enter my ass.\n\n\"Relax. It's just a finger. I need to get your muscles lubricated and then adjust them for something bigger.\" He said in a soothing calm voice.\n\nI nodded my head as I felt his finger go deeper, giving into a sensation of a slight dull pressure in my rectum that was not bad either. It then moved around my anal passage before being pulled out.\n\n\"This is so fucking weird. I can believe I am doing this.\" I commented, knowing that I was in for a penny in for a pound.\n\nHe put more lube on his finger and then I felt his finger slide right in me again. There was no teasing the second time as I just shoved it right in me. There was not a single cringe of pain either as his finger plunged in me making my ass its home while he explored my anal depths.\n\nHe then began fucking me with his finger. My eyes opened wide as I felt his finger sliding it and out of me like my ass was a fuck toy. I felt a twinge of fullness and yet no pain as it was like asshole was accepting of it. I could swear my ass was liking it slightly too.\n\n\"You're almost ready.\" He stated calmly as I felt a bit of pressure from his finger.\n\nPulling his finger out he wiped it clean on the towel and then grabbed the toy. \"Now, relax when it's in. Don't clench your ass muscles at all. Let your body go limp and enjoy. No pushing either. You have to make sure you don't tighten your muscles no matter what.\"\n\nI watched him add more lubricant to the toy and then spread it around. It was almost like being in the doctor's office and doing a test but instead of the test, I was about to get my ass fucked by a toy. I breathed in slowly, relaxing, steadying my mind and not tensing up. I kept my breathing steady and my nerves calm knowing that I had to not flinch or react as he put the toy in me.\n\nThe sensation of the tip of the toy at my anal ring was there as he put more pressure to enter me. It was like something not supposed to enter me trying to get in and there was nothing I could do as my lubricated anal ring was giving up without a fight. It was only for a split second before I felt this and fullness inside of me. An instant sensation of something large inside of my ass came to me. My whole lower waist felt an overwhelming sensation of pressure like I had something in me that I was supposed to push out.\n\nRick was not smiling as he had a face that seemed to be concentrating on something. \"It's in. Now keep relaxed as I do this. Trust me, you will love it.\"\n\nI nodded again as I felt the toy slide deeper and deeper and then stopped to retreat. It was weird as I swear, I could feel every inch and it seemed to be so much longer and thicker than it really was. It was like my asshole had a heightened sense when something was inside of it and responded with letting it bring pleasure.\n\nThe sensation to push was so overwhelming I needed to breathe deeply so I would not clench or push out the toy. The pressure in my rectum was so pronounced I felt like I was taking a shit that wouldn't come out. With all the senses in my ass going off like alarm bells, I felt the full numbness take over me and it gave me a sense of fullness in me that was calming.\n\n\"Going to go slow until you're ready.\" He cooed as I felt the toy now sliding in and out of my anal passage.\n\nI was having a strange sensation as I was not in pain at all but feeling my ass respond to the intruder like it was enjoying having something inserted into it. The pressure and fullness of the toy was a strange feeling to get used to, but not unpleasant at all. It felt like a soothing sensation inside of me as he slid it in and out of me. When the tip went deep, I could feel my body respond to it. My cock was soft but I could feel the pleasure of something inside of me. It was an odd sensation of pleasure too as the tip seemed to rub against something that was making my climax sensors go haywire since my cock was soft.\n\nMy mouth opened as I wanted to say something but nothing came out. The bulbous tip of the toy was hitting something in me that I knew had to be my prostate. Each nudge he gave made my insides feel good too. It was like a buildup of sexual energy in my ass that needed something to rub it.\n\nMy soft limp dick just staying that was as I felt this toy just fucking me. Rick was not going fast but a steady slow pace which went deep each time. I could not believe that this toy was feeling so good too. It was like I was bound to it for giving me sexual pleasure too.\n\nThe steady in and out seemed to transform my anal muscles into something different now. It was nudging on something deep too. It wasn't every thrust he would hit it but when he did it was like something in me was going to burst.\n\n\"You feel it? Feeling good?\" He asked, smiling as if he knew it would feel good.\n\n\"Yess. It...fuck...it feels good.\" I moaned, unable not to moan as the toy seemed to slide in so perfectly now. I was being ass fucked by it and accepting it too.\n\nI had no idea that something in my ass could feel so good. It was like having dirty kinky sex while doing the most taboo things I felt. I want to say no, but my eyes closed giving into the enormous sensation of ecstasy in my rectum. He seemed to find the spot after a minute as each push of the toy was like hitting a button in my body that could only be reached with it being in my ass.\n\n\"Knew you would like it. Now let me make you cum.\"\n\nHe began going a little faster and then faster as I felt my anal muscles want to tighten up and push out but couldn't. I stayed relaxed giving into the fact I was having my ass fucked with a toy and the pressure to cum while soft was coming on fast. I felt like I had to piss and yet it was not hard at all. My dick showed no signs of life and yet I wanted to ejaculate badly as I felt the urge to cum. It was such an odd feeling of wanting to orgasm and not having an erection to do it.\n\nThe further he went the more I felt I had to piss. I closed my eyes enjoying this sensation when I heard him. \"Ohh damm, you're leaking. Almost there.\"\n\nMy eyes opened fast as I just saw my limp member hanging to the side dribbling clear cum out of it like it was being forced to in the most pleasurable way. My anal hole felt like it was being fucked and the urge to tighten up was so strong too. I focused on staying calm as the urge to orgasm was there and yet I had no idea why I wanted to cum. It was like an urge to piss and cum at the same time.\n\nThe toy was nudging and rubbing something inside of me and then I felt it. My body began to shake as I looked at him with wide eyes shocked that I was feeling an orgasm.\n\n\"Yes...you're cumming.\" Rick announced smiling at me as I could not help but give into my body's demand for release.\n\n\"Ohhhhhhhh.\" I moaned not caring that he was hearing me accept that my ass being fucked with a toy felt good to me. It seemed involuntary that I moaned too as I felt my ass just loving the sensation of being fucked.\n\nThe immense pleasure of it was too much as my eyes closed from the intensity. I felt my orgasm rip through me and yet my soft dick just laid there helpless giving out my cum like it was being milked without some much as a gentle stroke. I pushed back unable to hold it any more as I wanted it harder knowing that the taboo act was more amazing that I wanted to admit. My whole body tightened up as I felt my body shudder and then shake from what was happening to it.\n\n\"Oh, my God...it's a lot. Wow, I never seen a dick cum so much from that.\"\n\nI opened my eyes feeling weak, like someone stole every bit of energy my body had. I finally looked down to see my cum all over my leg and my waist. It was like I was drunk and tired at the same time. I only wanted to sleep I was so tired.\n\nFeeling groggy I muttered out. \"Guess, you win. I am going to clean up and take a nap.\"\n\n\"Okay. I will let you be. We will talk about my renovations later.\" He replied seemingly happy as I knew he was since he won the bet.\n\nRick left my place and I cleaned myself up in the shower. My ass felt numb and loose while I cleaned up too. It was not a painful feeling at all but a different feeling I never had before. I wiped myself of all of the lubrication he used and then finally passed out asleep.\n\n***\n\nI knew Rick was wanting to update his place and after a couple of days I was over to see what he wanted done. I walked in to see him smile and then after a talk about his place he showed me what he wanted done.\n\nHe never once mentioned winning the bet or gloated that he won either. I finally had to admit he was right. \"You know, I never knew it could feel like that. Now, I am never going to admit it, but I did like it.\"\n\nHe waved his hand at me like it was no big deal. \"Ohh, your secret is safe with me. I like doing it from time to time too. But I always prefer the real thing over a toy.\"\n\n\"The real thing feels different? Not that I am going to ask or try it...just being curious.\" I asked knowing that I did not find Rick at all attractive or would even consider having another man fuck me.\n\n\"Ohh, God yes. Way better...nothing like it in the world. Now I like to be on top, but I did let a few guys do me. I am sorry, I know you don't want to hear about gay sex.\"\n\nI shook my head knowing that I was already down the rabbit hole and couldn't fault a Gay man for liking it now. I felt I didn't want to try with another man but could understand the sensations they felt.\n\n\"Oh, its fine. I don't mind at all now, but I am still not going to let another man fuck me. I draw the line at toys.\" I replied feeling that a girl using a strap-on would be the furthest taboo partially gay act I would do.\n\n\"Well, I can tell you that you feel everything and it is way more sensual and erotic.\"\n\nI nodded my head and then began to take measurements of what he wanted done. It was not a big project but it was definitely a day and a half job that would have run him a little over a thousand. I didn't mind and he did win the bet.\n\nI started the next day as I figured I had an easy week to do side projects. I only needed to show up to sign the checks for the guys I had working for me and help only if they needed me. It was an easy week for them, so it was like a week off for me.\n\nThe job went fast before I knew it the day was done and so was the project. He had a new closet and I also decided to install some extra features in his living room. When he came home he was ecstatic that the job was done so quickly and that it was better than he wanted.\n\nI took him up on the offer to have dinner at his place and was soon treated to a nice steak dinner. Rick was our top grill guy for Saturdays and he knew how to make it like you were eating at a top place steak house.\n\nAs we sat down he sipped his wine and asked. \"You know, I was thinking about what you said about your limits with just toys.\"\n\nThinking he was going to ask to fuck me I prepared myself to decline him in the most polite manner. \"You know guys don't do nothing for me. I would be so turned off by that it wouldn't work.\"\n\nHe put his wine down. \"I know, I know. It's not that. Have you ever seen a transgender?\"\n\n\"A what?\" My mouth almost dropped at the thought of some guy dressed like a girl wanting to bone me in the ass.\n\n\"You know, someone that identifies with being a girl. But don't worry about the man part. Jessica is all girl. She still has her stuff though, but that's the only thing that would give her away. She is the only trans girl I know that likes to top men.\"\n\n\"Are you serious?\" My mind was wondering what I was getting into. I never watched shemale porn before but thought that this girl was some trans girl that looked and sounded like a man who dressed like a girl.\n\nRick gave a big gloating smile know. \"Ohhh you will love Jessica. She is so freaking beautiful, I mean like super model beautiful. Once you see her, you will change your mind. She's a freaking model...you will love her.\"\n\n\"Does she look like a girl or a guy, or does she sound like a guy? I don't know about this.\"\n\nRick still smiling at me. \"Ohh, she looks all woman. Like I said...she is a model and nobody questions her appearance. Jessica would be perfect for you. I have known her for years and she loves guys like you.\"\n\n\"Like me?\"\n\n\"She is verse but prefers topping men. She also likes men that aren't necessarily interested in trans girls. I know it's weird, but it's her thing not mine.\"\n\nThe conversation seemed to be going sideways and I waved my hand to show that I was not interested in some strange girl that probably had the body of some neutral gender that sounded like man. \"This sounds too strange.\"\n\nRick then got up and turned on his phone flipping with his finger on the screen. He then walked over handing me the phone. \"Oh stop. Here. What girl would you think is Jessica?\"\n\nThe picture was of two girls and they were both gorgeous. It looked like a picture taken by a modeling agency too as they had their makeup and hair done perfectly. The one girl was a redhead and the other was a tan with long black hair and striking blue eyes. The redhead was pale but not too pale and had a pixie cut that made her face look super cute. The girl with black hair had a face that was no way be considered manly. Both girls looked stacked in the chest department too as the shirts they were wearing clung to their perfect bodies.\n\nI was at a loss since both girls looked like models and seemed to be the furthest thing from looking like a man. Studying their breasts and jawline I looked for signs of surgery but knew I had no expertise to spot it. Giving up I shook my head. \"I have no idea.\"\n\n\"They are both trans. They are professional models too. Sarah has a boyfriend and wont top anyway, but Jessica has a kinky side. She got drunk one night and spilled the beans about what she likes. I will call her, she owes me a favor too.\"\n\nMy mind now wondered why she would be interested in me if she didn't want guys who liked what she was. \"Are you sure this is going to work? I don't know about this.\"\n\n\"Trust me. I know what she likes in men, and you are her type.\"\n\n\"You want me to date her or just have her fuck me? I am confused.\"\n\n\"Well, she is not a hooker. She is also reserved when it comes to who she has sex with, but I figure it's worth a try.\" Rick was still animated with his hands.\n\nI just moved the conversation not to sports not wanting to think about what he was trying to do. I finished up with packing my tools and soon found myself back at my place wondering about Jessica. I also decided to look up shemale porn. It was nice knowing that it probably felt good and some of the girls I couldn't tell if they were a guy at all. I figured I would try a single date with Jessica.\n\nWith a quick text to Rick he told me that he would get in touch with her and ask if she wasn't seeing anyone and would consider a date. I told him I was free Friday and possibly Saturday and Rick instantly said Friday as he wanted to watch the game with the guys.\n\nThe next day Rick called me up and said that Jessica said yes and that she would go out. I mentioned a bar and Rick instantly said that she wanted to go to a restaurant. Not one to argue, I agreed and told him that I would meet her at a high end steak house that I knew of. It had great food and was a nice fancy restaurant.\n\nI dressed nice but not suit and tie nice. I even put on some cologne and decided to shave as well. The picture still ingrained in my head, I just feared that she was manly in some way or sounded like a guy disguising his voice.\n\nWalking in, I saw a girl wearing a sleek black mini dress. Her long black hair nicely done in big curls as she had her back to me as she stood up near the bar. My eyes instantly went to her ass as the mini dress hid nothing and showed off a curve that no man could deny staring at.\n\nIn my mind it had to be her as there was no other girl at the bar and I was five minutes late. I just walked over next to her and motioned for the bartender then looked at her. Her makeup and jawline was all girl as was her chest from the side angle I had.",
        "\"Jessica?\" I asked, trying to gauge if I had the right girl and hoping I did and hoping I didn't as she would definitely be a girl I would ask out.\n\nShe turned to me with a small smile. \"Are you Joe?\"\n\nThe voice was all girl as there was not a hint of masculinity to it. Her breasts looked real from what I saw too. She showed some cleavage too as I tried not to look down, but they had to be a C cup at least.\n\n\"Yes. Sorry I am late.\"\n\n\"Oh you're fine. I just got here myself. Do you want to get a table?\" She stated as I was making sure I stared at her eyes not looking down to gauge her breast size.\n\n\"Yes. Let me get a waiter.\"\n\nI got a waiter and he walked us over to a table. I did the gentleman thing and pulled out her chair and then let her order her drink first. I then ordered mine and we just talked about the drive to get to this out of the way place.\n\nShe asked me what I did for a living and I did the same listening to how she was a model for a few independent agencies that did web ads. The entire time I could not tell she was anything other than a gorgeous woman. I was actively looking for hints too and just could not tell.\n\nAs the meal progressed I offered to take her to a bar or maybe some place else. That's when she put her hand up. \"Look, I know Rick told you about me, but I really don't date too much. I am not going to let you take me to your place nor I am going to take you to my place for a quick fuck. I know guys just want some trans girl to fuck them to fulfill a fantasy but I am not into that.\"\n\nI motioned with my hands that I was not being pushy. \"Okay, okay. I had no real plans for after this and we can just call it a night. Rick just told me that you were picky and I assumed that this would be...well just this, a nice casual dinner.\"\n\nShe smiled as I could tell she did not want to offend me or make it seem that she was being bitchy. \"Did he tell you about me? You know...all about me?\"\n\n\"He did. I was hesitant about it to be honest. I just figured I would go out on a date with an attractive girl. He showed me your picture with Sarah and said you were single. I mean, we could go to the movies if you want something normal with no strings attached.\"\n\nShe smiled wide again and took a sip of her wine. \"I am sorry, I just know Rick can be pushy about things. The movies after this is fine, I just haven't been to the movies on a date in a while. Most guys that want to take me out on a date only want one thing 'cause they have a fetish for it.\"\n\nIt was then that I had an idea. I knew my friend Greg works at the amusement park and always let me in at night when I wanted to hangout and ride on the rollercoasters with no crowds. I was friendly with the owner and did work for him and right now it felt like a perfect place to take her.\n\n\"Hey, I got a better idea. You like roller coasters? I can get us in at Fairview Park right now. I know the head engineer and the owner. There is nothing like being on a rollercoaster at night too.\"\n\n\"You serious?\" Her face looked confused.\n\n\"Yea it will be fun. We can go on any ride there or just walk around and talk. After that we can go our separate ways so there is no pressure for anything else. We can just say no to anything else after now so you won't think I want anything more than to just have a fun time.\"\n\nShe then smiled and nodded her head. \"Okay. That sounds fair.\"\n\nI picked up the check without even looking at her for permission and then told her to follow me. It was only about thirty minutes away and I wanted her to drive so she knew she could leave at any time and there was no assuming that anything else had to happen. At this point I figured it would be just nice to talk to her and nothing else.\n\nThe entire ride there I just assumed I would be going home alone and would jerk off to some porn to end the night. I knew Jessica was smoking hot but also didn't want to think that I had a fetish for something I only watched a couple of videos of.\n\nWe got there and the security guard knew me and the owner was just about to leave. Since I always helped him out with repairs on his buildings for almost nothing, he turned on the lights and told me that the park was mine. The only thing we could not go on were the two bigger roller coasters that needed an attendant to turn on. The rest of the park was all ours though.\n\nAs we walked, I let her tell me about her modeling and then she delved into how she got started with her career. She showed me pictures and I got to see her in a bikini. I was just shocked that her body was perfectly fit for a string bikini. I didn't ask where the other parts went but whatever she did I could not tell that she had male parts.\n\nAs we walked around, we joked and laughed constantly. The few rides we went on she even reached for my hand. I treated her as any other date but knew that sex was off limits so I didn't try any moves. My needs would be met with my hand after this and I would not feel guilty that I tried something on a girl that didn't want it.\n\nWe got to one ride and as she slid into the seat and pressed against me the smell of her perfume got to me. It was a scent of fresh flowers and sex to my brain. I reached for her hand again and lost myself in the date as I felt like a kid again with her.\n\nThe ride was over and as we were walking out of the platform, she went the wrong way and her waist hit the turnstile stopping her abruptly. As her body stopped as I walked into her. She turned around quickly with a smile and I lost my ability to control myself. I knew I wouldn't feel right about myself if I didn't try to kiss her.\n\nIt was a leap of faith but I went for it. My head moved in slowly as I aimed my lips for hers hoping for the best. Jessica didn't move and before I knew it, I was kissing her. Her soft lips felt like heaven as I moved further and moved my tongue inside of her mouth. She wrapped her arms around me and were now making out like two kids would.\n\nShe then stopped quickly pushing me back softly and breathing deep. \"I have to ask you something personal?\"\n\nI nodded and she gave a serious look. \"Are you Gay or Bi? I need to know. If this goes further, I need to know what you are into.\"\n\nI stepped back looking at her and only seeing a girl that I wanted to be with on any level. \"I am not gay and have never been with a man or care to. Guys don't turn me on if that's what you're asking.\"\n\n\"Why did you want to go out with me then? Why are you pursuing this?\"\n\n\"To be honest. I didn't know what to expect. I just thought I would go out on a date with a hot girl.\" I answered, smiling at her.\n\n\"You know, I have a penis and not a pussy. I am trans. That means you would be fucking me in my ass. I would want to fuck you as well...do you even know that?\" Her voice sounded sincere as I felt she was thinking I was leading her on and teasing her.\n\nAt this point I stopped caring about what she had and that she was able to give me a prostate orgasm. I knew I had more fun with her than any other girl that I was on a date with in years. Her laugh and smile just warmed my soul and I just felt the urge to do anything with her, even if she had a dick between her legs.\n\n\"I knew that when Rick set us up.\"\n\nHer smiles grew wide as she moved her hair away from her face. \"Do you watch transgender...or shemale porn?\"\n\nI gave out a laugh as I really didn't watch any of that and only just saw two videos when Rick mentioned it. \"I saw a couple of videos and it was only when Rick brought it up.\"\n\nShe moved towards me with a smile and then moved forward and I did the same as our lips met again. It was a fast kiss as I moved my tongue in her mouth before she pulled away.\n\n\"Let's go to your place then.\"\n\nDriving back to my place with Jessica following me, my heart beat fast. All I could think about was that her girl dick was about to go into my ass. I had no idea a girl like Jessica could be so hot and interesting and yet have a real cock. A real-life cock was about to fuck me too I thought. Never once did I consider myself that kinky, that I would want someone to fuck me with a dick before and now i knew it was going to happen tonight. The entire way home I got an erection from the thought of her fucking me too.\n\nOnce inside we kissed like we were long lost lovers meeting for the first time. I guided her into my bedroom not breaking the kiss either. Once in my bedroom she pushed away and looked at me with the most heartwarming smile.\n\n\"I can fuck you if you want. If not, that's okay too.\"\n\nI nodded my head. \"Okay. But I want you to do what you want.\"\n\n\"Ohhh really. You do know I have a really bad kinky side.\" Giving a devious smile back at me.\n\n\"I don't care what you want. I just want to do this with you.\" I answered knowing I was fully honest and also knowing that feeling something in my ass was one of the best orgasms I ever had.\n\nShe pulled up her shirt revealing her bra. It was a small scantily clad bra that held her nice sized breasts. They seemed the perfect size pair of tits for her thin frame too. She then reached back undoing the bra showing me her uncovered chest and nipples that were erect and looked natural.\n\nShe cupped them and let them drop letting me see that they were all hers. \"They are real too.\"\n\n\"Really?\" I had to question it as all of the pictures I saw last night the girls had fake ones.\n\n\"When I was on hormones, I developed them. I just love them too.\" She smiled as I felt more and more that this was the right thing to do.\n\nHer hands then reached for the waist of her mini-dress as if she was ready to reveal her real body to me. \"Have you ever seen a trans-girl before?\"\n\nI shook my head being honest. She then pulled down slowly. \"Please don't be upset if it's not what you were expecting. This is why I don't like people who have fetishes with girls like me. They have these expectations of what they see online.\"\n\nAs she pulled down her dress, I just saw her thong panties. She then reached for a clear elastic band that seemed to be holding something in place. She then looked down almost ashamed of what I might say. \"I am not that big and my balls are little too.\"\n\nAs she pulled down her panties, I just saw a hairless void of where a dick would be of a pussy. She then pulled off a clear piece of tape and reached between her legs pulling out her junk. There was no going back I felt and no matter what I was committed to this sex act too.\n\nHer girl dick was thin and long as it hung down as she had no pubic hair at all. Where her balls should be was just the elastic skin with a small curve to it. Her dick was skinnier than mine but about the same size of about seven inches. Her tip was nicely shaped like mine too.\n\nI was never a connoisseur of dicks, but hers had a feminine look about it and I never knew it could be feminine. The way it was soft hanging there made it look harmless and cute to me for some reason. She was so hot looking standing in front of me and seeing her with a penis just made it almost baffling as it threw me off.\n\nShe then cringed as her hand tried to cover up her equipment. \"My balls are really small...I know. I also don't get hard sometimes. Please don't be turned off. I can't do what they do in porn movies either.\"\n\nAs I was sitting, I motioned for her to come to me and when she did, I took a hold of her shaft instantly feeling how soft it was. It was like her skin was silk as it was so smooth too. The fact I was touching another dick went past me as I loved how hers felt in my hand too.\n\nMy brain felt like a runaway train unable to stop as I was about to do. I never once sucked a dick before nor even thought about it and yet my hand was on her soft member about to put it in my mouth. My heart pounded with the sexual tension I felt as I moved closer and closer to her member knowing it was going in my mouth.\n\nI moved her forward a bit more and then the smell of her clean skin hit me like a calming peace of acceptance of what I was about to do. It happened so fast as I now wrapped my lips around her girl dick. It tasted a little musky but in an erotic way as it was mixed with her perfume. The feeling of her mushroom tip on my lips was adding to the moment too as I then moved further taking her all the way in.\n\nShe was soft and getting hard as I easily took her entire length in my mouth. I moved back feeling it expand in my mouth. She ran her fingers through my hair just as I took her deep once more. \"Ohhhhh yess. That feels really good.\"\n\nOnce more I took her deep feeling the fullness in my mouth from her dick expanding. The act of sucking a cock seemed for foreign to me and yet I let out a soft moan loving the sensation of her girl flesh in my mouth as I was pleasing it. It was spongy and soft while tasting like clean flesh too. I just continued to slide my lips back and forth on her shaft and even licking the tip when I got to it. The thicker it became the more it sent in that I was sucking a cock.\n\n\"Mmmmm, yess. I love this.\" She moaned as I licked her crown and moved my tongue around the ridge of it before taking her almost all the way in my mouth. I then picked up my pace and even simulated fucking it with my tongue pressing the underside of her shaft.\n\nBack and forth I went feeling her smooth shaft slide into my mouth. I was only going halfway but I pressed my lips against her cock and then would alternate using my tongue along the underside of it only to feel it pulse as a sign I was making her feel good.\n\nShe moved me away just as I was getting into it. \"Let me fuck you now.\"\n\nI was not going to say no and quickly undressed. As I got naked' she gave my ass a quick soft slap before I turned around. \"Rick did say you have cute ass.\"\n\nI then turned around and before I said anything she grabbed my soft member and looked at it. \"Ohhh and you have a nice cock too.\"\n\n\"So you like my ass?\" I asked, feeling the excitement building of what we were doing.\n\n\"You have a really cute ass. Now bend over and let me see it better.\" Her voice sounding sexy and yet demanding at the same time.\n\nI got on the bed and bent over doggy style. I then heard her reach into her purse and listened to a bottle cap opening. \"I will go slow at first. Let me know when to go hard okay?\"\n\n\"Okay.\" I answered as I then felt the bed move before her hand was on my hip.\n\n\"I am not using a condom, are you okay with that. I can put one on if you want.\"\n\n\"I am clean.\" I answered not thinking straight and also not knowing what to fully expect. I thought back to Rick putting the toy into me and wondered if it was going to feel exactly the same.\n\nJessica then put her hand on my hip as both of her hands now had me. \"Good, so am I. I really want you to like this.\"\n\n\"Ohhh...I feel that.\" I said as I felt her finger slide right into my anal entrance. It was quick too as she got her one finger in me quickly and without any pain.\n\n\"Let me just get you ready.\" Her voice calming as I felt her finger explore my anal depths now.\n\nShe was moving it in and out slowly and pulling out before pushing it right back in. The sensation felt good and I knew there was more to come too. Each time she pushed in, she curved her fingers as I felt it hit the spot that was going to make me climax too.\n\nHer finger was out of me as I knew what was being inserted next. \"Just breath while I fuck you. Don't struggle. Just lettttt....goooo, there you go.\" She said as I felt her tip seemingly pop in me quickly as she was not holding back either.\n\n\"Ohhh, dmmmmm. Ohhh shittt.\" I moaned, unable to hold back as I felt impaled by her girl dick. It felt different than the toy almost better as my anal hole seemingly became snug around it like it was form fitted for my ass.\n\nThe instant pressure was there as I felt her girl dick in my ass. My anal muscles were stretching from it as I realized that a real dick was in my ass. No toy, but an actual dick was now in my butthole and it felt amazing as I could feel this girl fill me so perfectly. The familiar fullness in my ass felt so good as she was not moving it but just letting my butt adjust to her girth.\n\nMy moral compass was now gone as I felt the girth of her cock slide all the way in me. My mind scrambled with the notion that this hot girl had a real cock and it was in my butt. It wasn't a strap on or some other toy she was using but a real cock to fuck me. I was letting myself be butt fucked by a transexual, and worse...it felt so good.\n\nHer thickness was pushing open the walls of my ass letting me know that she was indeed deep in me. She was thrusting letting her hips bang against my ass bone as I felt the instant sensation of my anal hole being plugged away by her length. Each plunge of her trans cock was felt and even though her cock was thin, still felt big to me.\n\n\"Feel good?\" Her voice cooed as I knew she was liking it too.\n\n\"Yesss. Oh shit, if feels good. Ohhh...wow.\" I softly answered as I felt so erotic that she had a real dick and it was shoved in my ass. Knowing it was only half of it too, as the sensation of it was overwhelming my senses.\n\n\"Your ass feels really good. Let me know if it starts to hurt though.\" She replied as I felt her girl stick now moving in and out of my anal hole slowly. I was being fucked, literally and I was liking it more than I realized.\n\nI then felt her move her member in and out of my ass as every inch felt like a foot too. One long push followed by another as her rhythm was slow and steady as if I was being butt stuffed. Each time I swore I could feel every inch of her length too as she seemingly bottomed out in my ass. It was like an anal massage on my insides as my ass muscles stretched in a loving way to accommodate her size too. My own dick stayed limp and now began to swing from her thrusts.\n\n\"Ohhhhhh...fuckkkk.\" I moaned as the fullness was intense and I tried not to clench my ass muscles on her girth. It was feeling good and I stopped caring about admitting it now.\n\n\"Shhhh...relax. Breath and stay calm. Give into it. Just let yourself be fucked.\" She replied in a soothing voice slowing down her pace.\n\nThen all of a sudden, her pace picked up steam. Her waist was hitting my ass harder as she was now full on fucking me. I felt her girl rod pierce through my anal cavity like I was just a hole to be fucked for her pleasure. I breathed and relaxed as I literally felt my ass hole expand and stay that way as her member pushed in and out of me. I knew my anal ring had given up like it knew that the fight was over and it needed to be just a hole for fucking now.\n\n\"Thats...it. Ohhh baby...you're really tight too. Feels really good.\" She moaned as I felt her waist hit my butt again and again as she was fully impaling me with each thrust now.\n\nBack and forth she went until she was now plugging away at my anal hole. In and out in steady hard thrusts as the slapping of our bodies now filled the room. Each time her waist hit my ass bone confirming she was pounding her entire length on me making me know I was being butt fucked. I could feel her sliding in and out as my senses were a blur trying to keep up as she was going so fast now.\n\nI relaxed as I remembered and then just let go, my mind only focused on staying calm as I felt my ass being fucked. I let go of all doubt, bad feelings, and misgivings about what was normal. I gave into the pleasure and relaxed my body in an almost zen state as Jessica plunged her girl rod in and out of me deep each time. It was like my ass was numb to it and yet I was getting a pleasurable feeling from her ass fucking me too.\n\nJessica moaned out as I felt her pounding away on me. \"Ahhhh....ohhhh. Shit baby...feels so good.\"\n\nMy ass felt open and yet full at the same time, as each push in me made me want another. Her plunging girl member not stopping either as it used my ass for sexual release. I could feel the build up of my orgasm too as her girl dick hit my insides and rubbing my inner climax spot. I felt weak to her engorged member as it seemingly owned my ass for its own pleasure.",
        "Guilt was now a memory as I knew I was enjoying having my ass fucked. I knew a toy was the less guilt option but having Jessica slide her length in and out of me made it seem like I was missing out on something my whole life. It was like a connection with a pretty girl while feeling the pressure of her thickness give me this forbidden pleasure that I knew I was going to want again and again.\n\n\"Ohhhh...shitttt.\" I moaned as I was hers to fuck and a total convert to receiving butt sex now.\n\nThe taboo of having anal play was shattered and now I was shattering another taboo of having a dick in my ass. Knowing Jessica was as hot as she was' giving my dick was only making me melt and give into her thrusts. Her hands were pulling me into her like she was spearing me too. I could do nothing but accept her dick was that spear and my ass was her intended target.\n\nIt all ended as she pulled out quickly. \"Do you want to jerk off now or I can go down on you.\"\n\nI moved so I was on my back as I looked at her feeling my ass loose from her fucking me. I was not in pain at all but had a sensation that I was used though. \"What do you want?\"\n\n\"I can jerk you off if you want.\"\n\n\"Doesn't matter to me. It felt really good.\" I replied smiling as I had no misgivings now that I loved my ass being fucked like that.\n\nShe beamed a big wide smile at me. \"I am glad. I was really worried you weren't liking it. You weren't saying anything.\"\n\n\"Trust me, I was enjoying it.\" I then looked down to see my tip covered in precum as I wanted to prove to her that I was not lying.\n\n\"I can fuck you more if you want. Cum on your ass too.\" Her smile still making me feel that this was the more erotic thing I ever did too.\n\n\"Guess I can do more. But you can cum where you want to. I really don't care. Just assumed you were going to cum in me.\"\n\nAs she got on the bed, I opened my legs letting her aim her member for the hole she was just in. \"Okay. I know some guys are hesitant about dicks cuming in them.\"\n\nI felt the tip of her dick right at my entrance. She pushed and my ass gave in without a fight as she plunged into my anal depths once more confirming to me that my ass was a fuck hole now. \"Mmmmm. Still feeling good?\"\n\n\"Ohhhh fuck. Yess.\" I admitted fully feeling the impalement of her stiff girl rod too. It was so odd that I enjoyed feeling her in me too. I swear her girl dick conformed to my asshole making it seemed she was shaped just for me.\n\n\"Mmm, I like that you are so open to this.\" Her voice sounding sexy as she now gripped my shaft.\n\nHer hand stroking my member softly using my precum as lube as she stimulated my tip. Her body pounding in and out of my anal hole as the sounds of her body slapping against mine got louder. The sensation of my ass being fucked and my cock now getting hard sent me to a place of total ecstasy.\n\n\"Ohhhh...feels sooo good.\" She moaned as I nodded knowing that I was loving how my ass was now the receptacle of pleasure for me.\n\nI was so hard and throbbing as she stroked me. I knew I was not going to cum naturally like before, but I didn't care. The sensation of her girl dick fucking me and hand stroking me was just what I needed. Each thrust in me was just another step towards my climax too. All doubts of what I was doing were gone as all I thought about was how good it felt to feel her trans cock fuck me.\n\nThe urge to look into her eyes was lost as was my ability to focus. The sensation of her sliding in and out of my rectum was bordering on criminal it felt so good. All the ideas of anal sex being wrong was now gone as I felt I was a convert to the other side with each hard thrust she gave. Each time her body pressed against mine I could feel the intimate sensation of my anal muscles acting like a massage tool for her girl dick too. It was like my ass was a fuck hole for her girl cock and I was helpless but to enjoy it.\n\n\"Ohhhh yesss. Your ass is so good.\" She moaned as I knew she was into this just as much as I was.\n\nMy ass felt so open and full at the same time my cock felt so hard as she moved her hand up and down my shaft. I could feel the pressure in my ass of her pounding girl rod and yet it felt like an erotic massage of my insides. As she rammed it into me harder it was like she was letting me know that her cock was owning my asshole too.\n\nI didn't even feel like I had an asshole now as it was more an extension of my sex now. Like I had a hole that was there to be fucked even thought I was a guy. I didn't feel gay but just loved in a different way and Jessica's girl member was a tool to give me that love. It was like there was a hidden pleasure sensor in my ass and her dick was hitting it at will.\n\nThe build up was happening so much faster than I anticipated too. I could feel myself on the verge of exploding. I could also feel her pounding away at my asshole making me get closer to a point where I could feel an orgasm brewing. It was like her girl member was pounding out my climax for me.\n\nThe more she thrusted the more I lost the ability to control myself as my orgasm came faster than I thought. The more she stroked my shaft the more I could feel myself wanting to explode. It was like I was being milked while she fucked me as all I thought about was how great it. My eyes were almost rolling back as I was in a state of total bliss while her dick thrusted in me with relentless precision.\n\nI tried not to clench but when my orgasm was too close and I felt my ass muscles gain life and clamp down on her shaft. When she pushed her size through my constricting anal muscles, she felt so huge in me.\n\n\"OHHHHHHHHHH!\" I moaned hard feeling my cock just lose all of its worth on her hand as she stroked me. I felt my orgasm rip through me as my climax jettisoned -or \"jetted\" out fast. My eyes closed as I felt her going faster inside of me.\n\n\"Allllmooostttt there. \" She moaned out as I felt her cock throbbing as it pushed in me. I was feeling her dick throb as I was literally feeling it expand slightly from it too. I was so wild and yet foreign to me to feel something in my ass pulse with need too.\n\nMy anal ring felt stretched as I involuntarily constricted against her shaft as she pushed in me. I could not help it as my anal muscles took over as it clamped and tried to hold her length in me. She felt so big in me now and was pushing faster in me too. The post orgasm sensation was still there as I felt helpless to do anything other than be fucked by her girl dick.\n\nJessica was going faster as I felt her girl tool become larger, thicker in my ass. I could see her mouth opening and then moan out. \"Ahh...ahhhh...ahhh....OHHHHH, yessss.\" It was a girly moan as I knew she was now ejaculating her trans sperm in my ass too.\n\nMy eyes instantly locked on hers. She was smiling as I then felt another sudden pulse and thickness in my ass. I felt her shaft pulse again inside of me followed by another quick series of rapid pulses. I knew her girl dick was ejaculating inside of me and I felt a loving helpless sensation when it was happening too.\n\nI was letting a transexual give me an anal creampie and all I could do was look at her with my own mouth open enjoying how a beautiful girl had her dick all up in me and used my ass to get off in. I just nodded as she kept her member deep in me making sure my ass did its job of pleasuring her girl tool.\n\nThe most taboo things of all, I now did as I knew actual sperm was being pumped into my ass. There was no going back as I knew forever that I was in a club of men that had semen in their ass from gay sex. I didn't feel gay at all though as I just saw a girl smiling at me with all the female features that I would want. I didn't care that she had an erection that was still speared into my butt either.\n\n\"Ohhh, damn. Ohhh shit.\" I moaned a little as I breathed in deep. She was still buried deep in me as I felt the last of her pulses from her member.\n\nShe then pulled out of me as I felt the loss of her erection followed by a creamy wet feeling in my ass. I knew that I needed to clean up and got out of the bed quickly. \"I got to go clean.\"\n\nI hurried to the bathroom quickly and turned on the shower once I saw that my waist was covered in cum and my ass was going to need more than a few wipes. \"I need to shower real quick.\"\n\nAs the water was warming up I saw her come in covering herself with her clothes. \"I can leave if you want.\"\n\nI saw a look of disappointment on her face and questioned her. \"You have to leave? I thought we could watch a movie, talk or just hang out.\"\n\nJessica's smile came back fast. \"You still want more?\"\n\n\"I don't think I could cum again to be honest, but we don't need to do anything. I don't mind just hanging out and talking.\"\n\nShe dropped her clothes and then put her hand in the shower to feel the water. \"I would like that. Was hoping you wanted me for something other than sex.\"\n\nUsing someone for sex was never my thing and I knew from just being around her after sex it wasn't hers either.. I then had the urge to invite her over for the entire night thinking I would cook for her in the morning. I knew what I did was a secret but having her around felt just normal.\n\n\"Stay the night?\"\n\nJessica stepped into the shower and then beckoned me in with her finger. \"I will, but first I want make sure you're all clean.\"\n\nI stepped in feeling the warm water hit me in the most relaxing way. Her body closed the distance as I soon felt her lips kissing mine. I let my hands explore her now wet body loving how she was so feminine in every way except for having a penis. Her breasts felt natural and her ass was rounded like it was supposed to be.\n\nThe more our tongues met the more I felt her hands explore my body. She reached all around my shoulders and then my back before even touching my member. I was wanting to get hard but I knew I came really hard and was properly drained of the need to orgasm again. It did not stop Jessica from stroking me and cupping my balls.\n\nShe broke the kiss and smiled at me. \"Mmm, you do have nice big balls. Mmmm, I love them too. You think you could get hard again. Maybe fuck me.\"\n\n\"If I do get hard I will. I thought you liked fucking guys though? Rick told me you liked...topping men.\" I asked as I had no qualms about fucking her and would be happy to do so.\n\n\"Ohhh God. He is so bad. I do like to be fucked too. I am versatile, I kinda like doing it both. But all Rick heard was that I enjoyed giving one of my boyfriends dick.\" She giggled out as she grabbed the soap and began washing my chest.\n\n\"Can I ask you why you hate guys who have a fetish with trans girls?\"\n\nHer hands now covering my chest and waist with soap as she gave me a smiling look like it was a good question to ask. \"They think I am only about sex and getting off. Some of them don't see me as a person but just an object they want to have sex with. Went out with one guy who I thought was good guy and then he got all pissy when we tried to have sex. I didn't get hard enough for him and he was all mad about it.\"\n\n\"Didn't seem to have that problem tonight.\"\n\nShe was now washing my legs with soap. \"Tonight no, but it does happen. Sometimes I just don't get hard at all. I still want sex but just won't get hard.\"\n\n\"And you don't want sex then?\" I asked wondering why she would still want sex.\n\n\"It's a connection thing. I like the close intimacy of sex sometimes without the actual sex. I also don't ejaculate a lot. I am surprised I came as much as I did tonight...guess you turned me on.\" She smiled as she said it too.\n\nHer hands now washing my sides as I just loved how she was attending to my body making sure it was clean. \"Well, we can do other things. I like just hanging out. It was fun tonight at the park.\"\n\nHer big smile confirmed that she was perfectly happy with me and what we did. \"I loved it. I really had a great time. I haven't had this much fun in a while too.\"\n\nShe then gripped my soft shaft and looked at me. \"Pee for me so I can clean it.\"\n\n\"Really?\" I asked as I was not prepared for this.\n\nHer face showed that she was being playful. \"Yea. You knew I was kinky. Now pee for me and let me clean your dick. I want to make sure it is clean before I put my mouth all over it.\"\n\n\"Okay.\" I answered and relaxed as I looked down quickly seeing that she was aiming my dick right at her limp penis.\n\nI was relaxing as I saw her moving my member slightly so the outer tips were almost touching. I then felt the urge to piss and then watched my hot stream hit the helmet of her dick straight on. The sound of my piss hitting her member was there as I felt the relief of pissing. It was not a little amount off piss with as it was a post orgasm piss that was draining all of my bladder.\n\n\"Mmmmmmm yessss. Ohhhhh yessssssss.\" She moaned as I was giving a constant stream piss right on her girl dick I looked at her as her moaning smile let me know that she was enjoying this a lot.\n\nAs my piss stream tickled off and stopped I asked. \"You liked that?\"\n\n\"I did. I am kinda a kinky girl. I have a little bit of watersports fetish.\" She answered with an embarrassed expression.\n\nI knew people had a pee fetish and was just never exposed to one. I loved how she got shy about it and felt it was kinky that she had a fetish like that. I loved that she was open about it and was doing it with me too.\n\n\"Wow. I never would have guessed it. So tell me what else do you like that's weird? I knew Rick said you were kinky but I didn't know it involved pee.\"\n\n\"I swear, I will not drink around him again. I got drunk one time and he found out all my little secrets. I swear I will kill him.\" She hissed slightly still smiling as she still did not let go of my softened member.\n\n\"Tell me. I want to know.\" I asked, loving that she had a dirty side.\n\n\"Okay. I like topping guys, pee and feeling cum leak out of me.\" She then closed her eyes, still embarrassed. \"I can't believe I admitted that.\"\n\n\"Wow. So you like feeling it when cum leaks out of your ass?\" I asked, smiling that she was embarrassed telling me.\n\n\"Yes...feels kinky when it leaks out and into my panties.\" She replied, still holding her hands to her face.\n\nI moved her hands away smiling knowing I was going to tell her my secret with Rick. \"Rick gave me a hands free orgasm. He used a toy on my prostate.\"\n\nJessica chuckled loud and smiled wide. \"Ohhh God. He did? Did you like it?\"\n\n\"I did.\" I admitted.\n\n\"Oh. Do you want me to do it for you now? I think it's hot that you did that too.\" She asked smiling wide.\n\n\"No. I came really hard and am done.\" I said knowing that my urge to cum was gone.\n\n\"I like that you tried new things with me. I really liked having sex with you.\"\n\nI then reached for the soap and began lathering it up. \"Well, sex with you was better than I ever expected.\"\n\nHer facial expression still wide and happy as she looked at me. \"You gonna clean me now?\"\n\nI began running my hands over her stomach and then her breasts. Just as I cupped her tits she moaned softly. \"Mmmm. I love you touching me.\"\n\nMy hands continued roaming her body and feeling her features. I cupped her tits and washed around them feeling the fullness of them and knew right away that they were natural too. They were not big, but big enough. Her nipples pointed out with my exploration as I gave them attention too.\n\nAs my hands went further down to her, she asked. \"Your first time touching another penis?\"\n\nI stroked her soft slim girl member, getting it lathered in soap. \"It is. I like it though.\"\n\nIt was then that I thought experimenting with her was the right thing to do. I loved how her soft thing was flexible and soft in my hand. It was just like mine but with no pubic hair on her at all, her soft penis felt and looked feminine in a strange way. All I wanted to do was play with it.\n\nI then got on my knees stroking it easily with the soap acting as lubricant. \"You might want to stop. I am not sure you are ready. I got to pee.\"\n\n\"Is it gross?\" I asked, feeling that it couldn't be all that bad since she liked it.\n\n\"Not to me, but it's a fetish thing. I like it but most people don't. I don't drink it but I just like it on me during certain times and by certain people.\"\n\nMy mind was thinking about doing it and not doing it when Jessica said. \"Just hold it and point it away.\"\n\nI did just that and then felt the bottom side of her member get a bit stiffer followed by a yellowish stream of piss. It was hitting the tile, but I was holding it as she peed. I was holding another dick while it urinated and I could not help but feel excited that I was holding her penis while she pissed. It was intimate more than erotic but I knew I liked doing it.\n\n\"Mmmmmm...Ohh yes. Feels good.\" She purred as I felt the piss flowing out of her member as I held it.\n\n\"Feel better?\" I laughed still not letting go.\n\n\"I do.\" She answered as I went back to cleaning it.\n\nShe stood up rinsing off as I did the same before I gave her a towel so we could get changed. The only thing she did was grab my shirt and put it on and walk out wearing just panties. I had no issues with that as her ass was amazing and her breasts were almost completely visible wearing a button up shirt that was unbuttoned.\n\nWe soon found ourselves watching tv as she cuddled up next to me as I put a blanket on us. She then moved to a stretched position as she was using my lap as a head rest and her feet dropped over the side. It was as if we were dating the way she hung on me and touched me.\n\nI was not about to say anything as I loved having her around as her quick with was evident while we watched. She still reached and touched my dick at random times giving it a stroke or a soft touch at random times. She even pulled down my boxers, giving it a kiss as we joked and played around. Even as we passed out in bed, she wrapped her body around me like she was already mine."
    ],
    "authorname": "Deeplust",
    "tags": [
        "prostate orgasm",
        "transgender",
        "shemale",
        "anal orgasm",
        "watersports",
        "anal creampie"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/hampton-heights"
}